@(#)PROGRAM:altool  PROJECT:ContentDelivery-15302
generateJWT
altool
AltoolError
AuthKey
CommandKey
AltoolCommand
AltoolExitCode
OutputFormat
AuthOptions
UploadArgs
RunOptions
CommandOptions
CodingKeys
UploadPackageCodingKeys
ValidateAppCodingKeys
ListAppsCodingKeys
ListProvidersCodingKeys
AppSettingsCodingKeys
BuildStatusCodingKeys
GetProviderCodingKeys
JwtCodingKeys
DawCodingKeys
Altool
RunAPI
StorePasswordInKeychain
AppSettings
BuildStatus
ListApps
ListProviders
ValidateApp
UploadPackage
SecKeychain
NSecKeychainRef
CFBoolean
NCFBooleanRef
CFString
NCFStringRef
JSONFiles
RequiredOptions
FilterArguments
PostTerminatorUserDefaults
FlagOptions
DAWAuthOptions
JWTAuthOptions
CoreFoundation
altool
AltoolImpl
?altool
Keychain
altool
ErrorResult
FailureResult
SuccessResult
CodingKeys
ArgumentParser
CompletionShell
ArgumentParser
Argument
ArgumentArrayParsingStrategy
ArgumentParser
ArgumentHelp
ArgumentParser
ArgumentVisibility
Representation
ArgumentParser
CompletionKind
Kind
ArgumentParser
ValidationError
ExitCode
CleanExit
Representation
ArgumentParser
Flag
FlagInversion
FlagExclusivity
Representation
ArgumentParser
NameSpecification
Element
Representation
ArgumentParser
Option
SingleValueParsingStrategy
ArrayParsingStrategy
ArgumentParser
OptionGroup
ArgumentParser
AsyncParsableCommand
AsyncMainProtocol
Command
ArgumentParser
CommandConfiguration
ArgumentParser
EnumerableFlag
ArgumentParser
ExpressibleByArgument
ArgumentParser
ParsableArguments
ArgumentSetProvider
_WrappedParsableCommand
CodingKeys
ArgumentParser
ParsableArgumentsValidator
ParsableArgumentsValidatorError
ArgumentParser
ParsableCommand
ArgumentParser
ArgumentDecoder
ParsedArgumentsContainer
ArrayWrapperProtocol
DecodedArguments
SingleValueDecoder
ArrayWrapper
UnkeyedContainer
SingleValueContainer
Error
ArgumentParser
ArgumentDefinitionContainer
Contained Initial
ArgumentDefinitionContainerExpressibleByArgument
ArgumentDefinition
ParsingStrategy
Bare
 @=`
Update
Help
Kind
Options
ArgumentParser
ArgumentSet
ArgumentParser
CommandError
AutodetectedGenerateCompletions
GenerateCompletions
HelpRequested
CodingKeys
ArgumentParser
InputKey
Parent
ArgumentParser
InputOrigin
Element
ArgumentParser
Name
ArgumentParser
ParsedWrapper
Value
DecodableParsedWrapper
Parsed
ArgumentParser
ParsedValues
Element
ArgumentParser
ParserError
InternalParseError
InputIndex
ArgumentParser
ParsedArgument
Value
Element
Index
SplitArguments
SubIndex
ArgumentParser
HelpCommand
CodingKeys
Element
ArgumentParser
HelpGenerator
Section
DiscussionSection
Header
ArgumentParser
MessageInfo
StandardError
ArgumentParser
Platform
ArgumentParser
Tree
InitializationError
ArgumentParserToolInfo
ToolInfoHeader
ToolInfoV0
CommandInfoV0
ArgumentInfoV0
NameInfoV0
KindV0
CodingKeys
apiKey
apiIssuer
authString
p8FilePath
username
appPass
providerPublicID
cliffPath
cliffPropertiesFile
CDQAEnv
stderrLogging
command
bundleID
packagePath
appleID
platform
bundleVersion
bundleShortVersionString
apnsDeviceToken
verbose
showProgress
outputFormat
logDir
item
sync
keychain
listApps
listProviders
uploadPackage
validateApp
appSettings
storePasswordInKeychain
success
failure
failure_show_usage
json
plain
bundleIdReference
educationDiscountType
subscriptionStatusUrl
subscriptionStatusUrlForSandbox
subscriptionStatusUrlVersion
subscriptionStatusUrlVersionForSandbox
gracRatingClassificationNumber
contentRightsDeclaration
isOrEverWasMadeForKids
availableInNewTerritories
isGrandfatheredForGrn
privacyPolicyUrl
computedMinMacOsVersion
buildAudienceType
isLaunchProhibited
hasMessagesExtension
controllerRequiredPlatforms
lsMinimumSystemVersion
hasGameCenterEntitlement
computedMinVisionOsVersion
usesNonExemptEncryption
appStoreReviewDetail
appStoreVersionSubmission
earliestReleaseDate
ShouldPricingTabBeDisplayed
PerformServerVerification
BookSeriesSequenceNumberFormatter
AllowsMetadataOnlyInitialImport
MZWebServiceTimeOut
SkipValidateFirenzeSPIUsage
TerritoriesAllowedToAlterPlusQuality
IsVendorIDEditablePreferenceEnabled
ITunesCrashLogServiceAddress
SkipValidatePurpleSPIUsage
IsDisplayArtistVisible
IsEnabledForMasteredForItunes
MZWebServiceValidateSoftwareSPIUsageMaximumSize
softwareUserGuideFilePath
SkipValidateProductErrors
IsPublicationDateOptional
VerifyZipIntegrity
restApiPlatformUTI
validationMethod
platformDirectory
restApiPlatformEnum
success-message
os-version
tool-path
tool-version
product-errors
code
message
user-info
underlying-errors
Invalid number of keys found, expected one.
A utility for validating and uploading apps, for the App Store.
Upload a package to the App Store.
Authentication using JWT or username/app-password is required.
Validate a package for the App Store.
List of the providers associated with your account.
altool list-providers [--username <string>] [--app-password <string>] [--show-progress] [--verbose] [--output-format <format>] [--log-dir <path>]
Displays a list of the providers associated with your account along with short name, team id, and public id. This command is useful to determine what to use with the --provider-public-id. Authentication using username/app-password is required.
The list of applications for your account.
altool list-apps [--api-key <key>] [--api-issuer <id>] [--auth-string <string>] [--p8-file-path <path>] [--username <string>] [--app-password <string>] [--provider-public-id <id>] [filter] [--show-progress] [--verbose] [--output-format <format>] [--log-dir <path>]
Display all applications associated with your account. Authentication using JWT or username/app-password is required.
Returns the status of the delivery in the import process and App Store Connect flow.
altool build-status [--api-key <key>] [--api-issuer <id>] [--auth-string <string>] [--p8-file-path <path>] [--username <string>] [--app-password <string>] [--provider-public-id <id>] [--deliveryID | --appleID --bundleVersion --bundleShortVersion --platform] [--show-progress] [--verbose] [--output-format <format>] [--log-dir <path>]
Either the deliveryID OR both the appleID AND the bundleVersion must be specified. If the deliveryID is set then the status of the delivery in the import process is returned along with the build's App Store Connect status if the app has passed import. If the deliveryID is not available (e.g., the delivery was made via the legacy delivery flow) then all of appleID AND bundleVersion AND bundleShortVersion AND platform must be set. In this case the delivery's import status cannot be obtained, but if the delivery has passed import successfully and entered App Store Connect its status there is returned.
Get the app settings.
Return the app settings for this app unless otherwise specified.
Stores a password in the keychain item associated with the account username.
If an item with that name and account already exists in the keychain, its password will be updated. Otherwise a new item is created keychain item with the -p option to mask your password with other commands. Optionally, you can specify a custom keychain file in which to store the password with the --keychain option.  You can also use --sync to create a password that will sync with your iCloud account.
Generate a Token given some JWT auth options. 
Authentication using JWT is required.
Run any of the public APIs.
Run any of the public APIs by providing two JSON files. One specifying the authentication needed, and the other with the command and all the needed arguments.
Unable to read auth file 
Unable to read command file 
Username and app password authentication requires --provider-public-id, if attached to multiple providers.
An app password must be supplied.
Failed to find item 
 in environment variables.
WARNING: No CDQAEnv specified assuming PROD but UserDefaults is 
We where unable to set the UserDefaults to 
Expected the UserDefaults to be 
Required options
Path to JSON file with the expected results.
Both --apiIssuer and --apiKey must be specified.
https://appstoreconnect.apple.com
No authrization found.
Either JWT (--api-issuer and --api-key) or username and app password (--username, --app-password and --provider-public-id) authentication is required.
Unable to authenticate.
JWT requires --apiKey and --issuer-id.
JWT authentication should not include username, app password or provider public ID.
Username and app password authentication should not include JWT --auth-string or --p8-file-path.
Username and app password authentication should not include JWT --api-issuer and/or --api-key.
JWT authentication
Both --keychain and --sync connot be specified, they are mutually exclusive.
The name of the item in the keychain.
Used with store-password-in-keychain to specify the path to a keychain file in which to store an application password; if the file does not exist it will get created. The stored password can be used with '@keychain:' within the --app-password option. Cannot be used with the --sync option.
Used with store-password-in-keychain to allow the keychain item to sync with your iCloud account and other devices associated with the account. Cannot by used with the --keychain option.
Username app-password authentication
The path to the package to validate.
The path to the package to upload.
The path to the JSON file with the authentication.
The path to the JSON file with the command and arguments.
Show a progress indicator.
Display all logging messages.
Specifies how the output is formatted. 'xml' and 'json' display the output in a structured format; 'plain' displays in an unstructured format.
The directory that the logs will be saved to.
Specifies the path to a plist file that can override the server platforms.
JWT authentication requires --api-key and --api-issuer and optionally an --auth-string or the --p8-file-path.
The JWT api key.
The JWT issuer ID.
The private key within a JWT p8 file; the key string from after the line with 'BEGIN' to before the line with 'END'.
Path to a JWT p8 authentication file.
The account for this keychain item.
The app specific password for this username and keychain item.
Username and app password token authentication requires --username, --app-password and the --provider-public-id; --provider-public-id is not required for list-providers.
The username attached to the provider.
The app specific password for the username.
The provider's public ID for the username.
The path to the cliff file.
The path to the cliff properties file.
If --deliveryID NOT specified, --appleID, --bundleVersion, --bundleShortVersionString AND --platform are required.
If --deliveryID is specified then --appleID, --bundleVersion, --bundleShortVersionString or --platform should not be.
The delivery ID of the app.
The Apple ID of the app.
The CFBundleVersion of the app.
The CFBundleShortVersionString of the app.
CFBundleShortVersionString
The platform of the app.
Comma delimited list of bundle IDs.
Comma delimited list of Names.
Comma delimited list of SKUs.
Comma delimited list of app IDs.
The bundle identifier of the app.
CDProviderProtocol
T@"NSString",N,R
publicID
shortName
teamID
internalID
@"NSString"16@0:8
CDLogger
v40@0:8@16q24@32
v32@0:8@16q24
debugEnabled
Tc,N
infoEnabled
warningEnabled
criticalEnabled
v40@0:8@"NSString"16q24@"NSDate"32
v32@0:8@"NSString"16q24
=======================
No http headers.
    httpBody: No http body.
=======================
Unable to decode http body.
_TtC6altool10AltoolImpl
c16@0:8
v20@0:8c16
v16@0:8
errorEnabled
cmdOptions
runOptions
authenticationContext
shouldShowProgress
showingProgressBar
showProgressBarStatus
progressBarWidth
lastStatusMessage
percentDone
nextUpdateTime
windowWidth
Tc,N,VdebugEnabled
Tc,N,VinfoEnabled
Tc,N,VwarningEnabled
Tc,N,VerrorEnabled
Tc,N,VcriticalEnabled
altool.AltoolImpl
init()
StdErr Logging is enabled.
progress-bar-width
Not a directory: 
The directory does not exist: 
ContentDeliveryUploadDelegate
v32@0:8@16@24
v32@0:8@"NSString"16@"<ContentDeliveryUploadAction>"24
v32@0:8@"<ContentDeliveryUploadAction>"16@"NSString"24
ContentDeliveryActionDelegate
v32@0:8d16@24
v48@0:8d16d24d32@40
c24@0:8@16
v32@0:8@"NSString"16@"<ContentDeliveryAction>"24
v32@0:8d16@"<ContentDeliveryAction>"24
v48@0:8d16d24d32@"<ContentDeliveryAction>"40
c24@0:8@"<ContentDeliveryAction>"16
@"CDAuthContext"16@0:8
v32@0:8@"NSDictionary"16@"<ContentDeliveryAction>"24
NSObject
q16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
hash
Tq,N,R
superclass
T#,N,R
description
debugDescription
c24@0:8@"Protocol"16
No applications found.
=======================
Unable to list applications.
filter[bundleId]=
appStoreVersions
reviewSubmissions
We should not be able to get here.
No providers found.
Unable to get providers.
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
CDDeliveryStatusResponse.status was nil.
= PROCESSING ERRORS
Unable to get the status for the build.
Unable to get the status for 
 with bundleVersion '
Unknown platform 
No application settings, or allowed platforms found.
========================
= Application Settings =
========================
========================
=  Allowed  Platforms  =
========================
platformCriteria
=====================
= Platform Criteria:
Unable to get application settings.
@16@0:8
name
altool
' upload complete.
_TtC6altool8Keychain
More than 1 item found matching 
 in keychains. Using the first matched.
Failed to retrieve item count for 
altool stored keychain item.
Unable to encode password as UTF8.
Unable to update password for 
, because there are more than 1 matching items in the keychains.
Unable to store password for 
. The keychain returned error OSStatus: 
Unable to create the new keychain
Created keychain
 and stored item 
Unable to open keychain
 does not exist.
Unable to upload package.
Unable to validate package.
JSONEncoder failed to encode 
PropertyListEncoder failed to encode 
    opts="$opts 
    if [[ $COMP_CWORD == "
" ]]; then
        COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
        return
    fi
    case ${COMP_WORDS[
    return
    ;;
    COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
cur="${COMP_WORDS[COMP_CWORD]}"
prev="${COMP_WORDS[COMP_CWORD-1]}"
COMPREPLY=()
COMPREPLY=( $(compgen -W "$("${COMP_WORDS[0]}" 
 "${COMP_WORDS[@]}")" -- "$cur") )
COMPREPLY=( $(compgen -W "
COMPREPLY=( $(compgen -d -- "$cur") )
COMPREPLY=( $(compgen -f -- "$cur") )
$("${COMP_WORDS[0]}" ---completion 
 "${COMP_WORDS[@]}")
ArgumentParser/CompletionsGenerator.swift
Invalid CompletionShell: 
-r -f -a '(command 
 -- --custom (commandline -opc)[1..-1])'
-r -f -a '(__fish_complete_directories)'
-r -f -a '(for i in 
    set -l currentCommands (
 (commandline -opc))
    set -l expectedCommands (string split "
" $argv[1])
    set -l subcommands (string split "
" $argv[2])
    if [ (count $currentCommands) -ge (count $expectedCommands) ]
        for i in (seq (count $expectedCommands))
            if [ $currentCommands[$i] != $expectedCommands[$i] ]
                return 1
            end
        end
        if [ (count $currentCommands) -eq (count $expectedCommands) ]
            return 0
        end
        if [ (count $subcommands) -gt 1 ]
            for i in (seq (count $subcommands))
                if [ $currentCommands[(math (count $expectedCommands) + 1)] = $subcommands[$i] ]
                    return 1
                end
            end
        end
        return 0
    end
    return 1
# A function which filters options which starts with "-" from $argv.
function 
    set -l results
    for i in (seq (count $argv))
        switch (echo $argv[$i] | string sub -l 1)
            case '-'
            case '*'
                echo $argv[$i]
        end
    end
local context state state_descr line
_commandname=$words[1]
typeset -A opt_args
_custom_completion() {
    local completions=("${(@f)$($*)}")
    _describe '' completions
'(-): :->command'
case $state in
    (command)
        local subcommands
        subcommands=(
        )
        _describe "subcommand" subcommands
        ;;
    (arg)
        case ${words[1]} in
        esac
        ;;
esac
() {
    integer ret=1
    local -a args
    args+=(
    )
    _arguments -w -s -S $args[@] && ret=0
    return ret
{_custom_completion $_
{local -a list; list=(${(f)"$(
)"}); _describe '''' list}
Show help information.
Show the version.
ArgumentParser/Argument.swift
--------------------------------------------------------------------
Can't read a value from a parsable
argument definition.
This error indicates that a property declared with an `@Argument`,
`@Option`, `@Flag`, or `@OptionGroup` property wrapper was neither
initialized to a value nor decoded from command-line arguments.
To get a valid value, either call one of the static parsing methods
(`parse`, `parseAsRoot`, or `main`) or define an initializer that
initializes _every_ property of your parsable type.
--------------------------------------------------------------------
Argument(*definition*)
--experimental-dump-help
ArgumentParser/Flag.swift
Flag(*definition*)
offset element 
ArgumentParser/NameSpecification.swift
' has not characters to form short option name.
ArgumentParser/Option.swift
Option(*definition*)
ArgumentParser/OptionGroup.swift
OptionGroup(*definition*)
Fatal error
Tree<ParsableCommand.Type>
_TtC14ArgumentParser15ArgumentDecoder
values
usedOrigins
nextCommandIndex
previouslyDecoded
codingPath
userInfo
decoder
ArgumentParser/ArgumentDecoder.swift
experimental-dump-help
ArgumentParser/CommandParser.swift
Unexpected error: 
The ParsableCommand "
" can't have itself as its own subcommand.
generateCompletionScript
ArgumentParser/Parsed.swift
Trying to get the argument set from a resolved/parsed property.
Show subcommand help information.
 <subcommand>' for detailed help.
ArgumentParser/HelpGenerator.swift
' for more information.
Unspecified version
ArgumentParser/UsageGenerator.swift
preferredName cannot be nil for named arguments
Missing required subcommand.
Invalid option: -
Invalid option: 
' does not take any value, but '
' was specified.
Internal error. Invalid state while parsing command-line arguments.
Internal error. Parsing command-line arguments hit unimplemented code path.
Can't generate completion scripts for '
Please use --generate-completion-script=<shell> with one of:
    
Can't autodetect a supported shell.
Please use --generate-completion-script=<shell> with one of:
    
Unknown option '
'. Did you mean '
Missing value for '
 unexpected arguments: '
Unexpected argument '
Value to be set with 
 had already been set with 
Missing one of: '
Missing expected argument '
No value set for non-argument var 
. Replace with a static variable, or let constant.
' is invalid for '
' is invalid for '<
. Please provide one of the following:
. Please provide one of 
SHELL
element
parent
children
long
short
longWithSingleDash
positional
option
flag
serializationVersion
defaultSubcommand
ypXmT_
$sSY
$ss12CaseIterableP
SS6apiKey_SS0A6IssuerSSSg10authStringAC10p8FilePathAC7cdQAEnvt
SS8username_SSSg11appPasswordAB16providerPublicIDAB7cdQAEnvt
SbSg
SSSg
4args_t
SSSg14filterBundleID_AA0A4NameAA0A3SkuAA0aC0t
SSSg10deliveryID_AA05appleB0AA13bundleVersionAA0d5ShortE6StringAA8platformt
_pXpG
ypSg
ySSG
ySSSgG
ySbG
ySSG
ySS_yptG
SS_ypt
ySaySSGG
So8NSObjectC
So5CDLogC
So13CDAuthContextC
SaySsG
yyXlG
So8CDLogger_p
SaySSG
yypG
ySSG
SDySSypG
SayypG
So18CDProviderProtocol_p
_yptG
_ypt
Sb8inserted_
17memberAfterInsertt
yS2SG
ySsG
SDyS2SGSg
SDyS2SG
ySSypG
SaySSG
_pXpG
SaySsG
$sSY
$ss12CaseIterableP
SSSg
ySSG
ySSG
_pIeggrzo_
qd__
qd__Sg
SSqd__
_pIeggrzo_
Sayqd__G
$s14ArgumentParser13ParsedWrapperP
$ss32ExpressibleByStringInterpolationP
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
SaySSG10extensions_t
SaySSGAAc
_pXpSg
SbSg
Sayqd__GSg
ypSg
Sbz_Xx
$ss25ExpressibleByArrayLiteralP
SS_Sb14withSingleDasht
SJ_Sb14allowingJoinedt
_pSg
$s14ArgumentParser20AsyncParsableCommandP
$s14ArgumentParser17AsyncMainProtocolP
7Command
_pXpG
$s14ArgumentParser14EnumerableFlagP
8RawValueSYQz
$s14ArgumentParser013ExpressibleByA0P
yypG
$s14ArgumentParser17ParsableArgumentsP
$s14ArgumentParser0A11SetProviderP
SSSg5label_yp5valuet
_pSg
SgSSyp
_pIegggggrzo_
$s14ArgumentParser26ParsableArgumentsValidator33_D8B6916CE93C2FC7F7BEDE789FAE65F8LLP
$s14ArgumentParser31ParsableArgumentsValidatorErrorP
$s14ArgumentParser15ParsableCommandP
_SitG
_Sit
_pXpG
ySsG
_SStG
_SSt
ySi_
_pXmTSg
$s14ArgumentParser20ArrayWrapperProtocolP
_pXp
$ss30KeyedDecodingContainerProtocolP
SayypG
yypG
_pXpGG
_pXp_AA_pXpt
SayxG
$s14ArgumentParser0A19DefinitionContainerP
$s14ArgumentParser0a32DefinitionContainerExpressibleByA0P
9Contained
ztKc
SS9Contained
_pIeggrzo_
SgSS9Contained
_pIegggggrzo_
7Initial
QzSg
ztKc
SgSS
ztKc
$ss10SetAlgebraP
$ss9OptionSetP
$sST
SnySiG
$sSl
$sSK
$sSk
yyXlG
ySiG
_SStSg
_pSg
ySSG
ySbG
SgS2S
_pIegggggrzo_
_pSg
ySnySiGG
ySaySSGG
$s14ArgumentParser22DecodableParsedWrapperP
5Value
_pXpGADG
ySSSay
10visibility_t
SSSg5shell_t
_SStG
8previous_AA9duplicateSaySSG13originalInputt
6forKey_t
SgSS
6forKey
_pSg13originalErrort
ypSg_
6forKeyt
Si_Sit
_SSt
Sb8inserted_
17memberAfterInsertt
ySaySSGG
ySaySSGSSG
SaySSGSg
_ypt
ySSSgG
yAAyABySaySSSgGACGGSSGG
yAAySaySSSgGACGGSSG
ySaySSSgGACGG
ySaySSSgGABG
SaySSSgG
ySay
GSSG
SS4text_t
SS7message_SS5usageSS4helpt
SS7message_
8exitCodet
yxGSgXw
yxGG
_pXpGACG
_pXpGACSgIegnr_
_pXp
SaySSGSg
SaySSG
$sSY
SSSg
initWithString:
stringByExpandingTildeInPath
mainBundle
objectForInfoDictionaryKey:
willUseCliff:log:
initWithKeyID:issuerID:p8FilePath:authString:error:
processInfo
environment
initWithUsername:appPassword:providerPublicID:
standardUserDefaults
stringForKey:
registerDefaults:
defaultManager
contentsAtPath:
httpHeadersForURLRequest:error:log:
name
publicID
shortName
teamID
internalID
logMessage:level:date:
debugEnabled
setDebugEnabled:
infoEnabled
setInfoEnabled:
warningEnabled
setWarningEnabled:
errorEnabled
setErrorEnabled:
criticalEnabled
setCriticalEnabled:
logMessage:level:
init
.cxx_destruct
platformWithString:
dealloc
initWithCategory:loggers:
setEnableStderrLogging:
debug:
objectForKey:
fileExistsAtPath:isDirectory:
initWithLogDirectory:
didCompleteUploadForFile:uploadAction:
uploadAction:hasBuildID:
setProgressMessage:action:
setProgressPercent:action:
setElapsedTime:secondsRemaining:throughput:action:
shouldCancelAction:
authContext
networkConnectivityChanged:action:
isEqual:
hash
superclass
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
debugDescription
initWithAuthContext:log:
listAppsWithFilters:
isSuccessful
apps
stdErr:
stdOut:
initWithArray:
sanitize
dataWithPropertyList:format:options:error:
error:
dataWithJSONObject:options:error:
critical:
error
logNSErrors:
providers:
providers
rawInfo
statusForDeliveryID:appID:bundleVersion:bundleShortVersion:platform:
processingErrors
status
errors
logErrors:
appSettingsResponse:
appSettings
allowedPlatforms
__swift_objectForKeyedSubscript:
allKeys
initWithDictionary:
lastPathComponent
fileExistsAtPath:
initWithAuthContext:
initWithBase64EncodedString:options:
requestUploadForPackageWithAppleID:platformInfo:bundleVersionString:bundleShortVersionString:apnsDeviceToken:delegate:logFileURL:
uploadAction
buildId
createUploadActionWithBuildID:packageAtPath:appleID:platformInfo:bundleVersionString:bundleShortVersionString:apnsDeviceToken:delegate:logFileURL:
addLogger:
upload
validate
operatingSystemVersionString
toolPath
versionString
code
localizedDescription
userInfo
underlyingErrors
RawValue
AllCases
AuthenticationFailure
UnableToReadFile
UnableToWriteFile
InvalidDirectory
CodingFailure
UserDefaultsOutOfSync
KeychainFailure
UnknownPlatform
NoAuthenticationContext
FailedToGetApps
MissingProviderPublicID
apiKey
apiIssuer
authString
p8FilePath
username
appPass
providerPublicID
cliffPath
cliffPropertiesFile
CDQAEnv
stderrLogging
command
bundleID
packagePath
appleID
platform
bundleVersion
bundleShortVersionString
apnsDeviceToken
verbose
showProgress
outputFormat
logDir
item
sync
keychain
listApps
listProviders
uploadPackage
validateApp
appSettings
storePasswordInKeychain
generateJWT
success
failure
failure_show_usage
json
plain
cdQAEnv
buildStatus
getProvider
appPassword
deliveryID
filterBundleID
filterName
filterSku
filterID
args
_packagePath
_args
_jwtAuthOptions
_dawAuthOptions
_flagOpts
_userDefaults
_filterArgs
_item
_keychain
_sync
_jsonFiles
_expectedResults
_platform
_appleID
_bundleID
_bundleVersion
_bundleShortVersionString
_altApiKey
_apiKey
_apiIssuer
_altApiIssuer
_authString
_p8FilePath
_username
_appPassword
_providerPublicID
_cliffPath
_cliffPropertiesFile
_showProgress
_verbose
_outputFormat
_logDir
_cdQAEnv
_extraArgs
_other
_filterBundleID
_filterName
_filterSku
_filterID
_deliveryID
_auth
_command
jsonFiles
expectedResults
flagOpts
userDefaults
jwtAuthOptions
dawAuthOptions
filterArgs
auth
other
extraArgs
altApiKey
altApiIssuer
debugEnabled
infoEnabled
warningEnabled
errorEnabled
criticalEnabled
cmdOptions
runOptions
authenticationContext
shouldShowProgress
showingProgressBar
showProgressBarStatus
progressBarWidth
lastStatusMessage
percentDone
nextUpdateTime
windowWidth
osVersion
successMessage
toolPath
toolVersion
productErrors
code
message
userInfo
underlyingErrors
RawValue
RawValue
AllCases
rawValue
Value
_parsedValue
base
StringInterpolation
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
abstract
discussion
valueName
visibility
base
default
hidden
private
kind
list
file
shellCommand
custom
default
directory
RawValue
message
rawValue
base
helpRequest
dumpRequest
Value
_parsedValue
base
prefixedNo
prefixedEnableDisable
exclusive
chooseFirst
chooseLast
ArrayLiteralElement
elements
base
customLong
customShort
long
short
Value
_parsedValue
base
Value
_parsedValue
_visibility
_dummy
title
commandName
_superCommandName
abstract
usage
discussion
version
shouldDisplay
subcommands
defaultSubcommand
helpNames
_options
options
values
usedOrigins
nextCommandIndex
previouslyDecoded
codingPath
userInfo
decoder
underlying
parsedElement
type
value
wrongKeyType
topLevelHasNoUnkeyedContainer
topLevelHasNoSingleValueContainer
singleValueDecoderHasNoContainer
base
currentIndex
array
Contained
Initial
default
scanningForValue
unconditional
upToNextOption
allRemainingInput
postTerminator
allUnrecognized
kind
help
completion
parsingStrategy
update
initial
options
defaultValue
keys
allValues
isComposite
abstract
discussion
valueName
visibility
parentTitle
nullary
unary
named
positional
rawValue
ArrayLiteralElement
Element
RawValue
Element
Iterator
Index
SubSequence
Indices
content
namePositions
commandStack
parserError
visibility
_generateCompletionScript
generateCompletionScript
name
parent
root
_elements
ArrayLiteralElement
argumentIndex
defaultValue
long
short
longWithSingleDash
value
definition
value
inputOrigin
shouldClearArrayIfParsed
elements
originalInput
helpRequested
completionScriptRequested
completionScriptCustomResponse
unsupportedShell
unknownOption
invalidOption
nonAlphanumericShortOption
missingValueForOption
unexpectedValueForOption
unexpectedExtraValues
duplicateExclusiveValues
noValue
unableToParseValue
userValidationError
noArguments
versionRequested
dumpHelpRequested
notImplemented
invalidState
missingSubcommand
wrongType
subcommandLevelMismatch
subcommandLevelMissing
subcommandLevelDuplicated
subcommandNameMismatch
expectedCommandButNoneFound
_elements
firstUnused
originalInput
inputIndex
subIndex
value
index
option
terminator
name
nameWithValue
rawValue
RawValue
complete
_subcommands
_help
commandStack
visibility
subcommands
help
header
elements
discussion
isSubcommands
commandStack
abstract
usage
sections
discussionSections
label
title
positionalArguments
subcommands
options
content
help
validation
other
element
parent
children
recursiveSubcommand
RawValue
serializationVersion
command
superCommands
commandName
abstract
discussion
defaultSubcommand
subcommands
arguments
kind
shouldDisplay
sectionTitle
isOptional
isRepeating
names
preferredName
valueName
defaultValue
allValues
name
long
short
longWithSingleDash
positional
option
flag
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380019</string>
<key>CFBundleIdentifier</key>
<string>com.apple.amp.contentdelivery.altool</string>
<key>CFBundleShortVersionString</key>
<string>2.153.2</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>MacOSX</string>
</array>
<key>CFBundleVersion</key>
<string>15302</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>23E149a</string>
<key>DTPlatformName</key>
<string>macosx</string>
<key>DTPlatformVersion</key>
<string>14.4</string>
<key>DTSDKBuild</key>
<string>23E149a</string>
<key>DTSDKName</key>
<string>macosx14.4.internal</string>
<key>DTXcode</key>
<string>1530</string>
<key>DTXcodeBuild</key>
<string>15E5178e</string>
<key>LSMinimumSystemVersion</key>
<string>13.0</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2021-2023 Apple Inc. All rights reserved.</string>
</dict>
</plist>
ISBN
displayName
name
bundleId
type
primaryLocale
grnNumber
storeURL
isArcade
removed
removedDate
minOsVersion
hasStickers
expirationDate
qcState
iconAssetToken
isWatchOnly
processingState
deviceFamilies
uploadedDate
version
expired
versionString
appStoreState
build
platform
createdDate
releaseType
platform
state
submittedDate
IsISBNOptional
displayName
sdkID
xmlID
serverID
type
help
version
bash
fish
@(#)PROGRAM:altool  PROJECT:ContentDelivery-15302
#*@17
#*@17O
%-6V?GG
#*@17/
#*39AINRV0
generateJWT
altool
AltoolError
AuthKey
CommandKey
AltoolCommand
AltoolExitCode
OutputFormat
AuthOptions
UploadArgs
RunOptions
CommandOptions
CodingKeys
UploadPackageCodingKeys
ValidateAppCodingKeys
ListAppsCodingKeys
ListProvidersCodingKeys
AppSettingsCodingKeys
BuildStatusCodingKeys
GetProviderCodingKeys
JwtCodingKeys
DawCodingKeys
Altool
RunAPI
StorePasswordInKeychain
AppSettings
BuildStatus
ListApps
ListProviders
ValidateApp
UploadPackage
SecKeychain
NSecKeychainRef
CFBoolean
NCFBooleanRef
CFString
NCFStringRef
JSONFiles
RequiredOptions
FilterArguments
PostTerminatorUserDefaults
FlagOptions
DAWAuthOptions
JWTAuthOptions
CoreFoundation
altool
AltoolImpl
altool
Keychain
altool
ErrorResult
FailureResult
SuccessResult
CodingKeys
@help
q.Hg
ArgumentParser
CompletionShell
ArgumentParser
Argument
ArgumentArrayParsingStrategy
ArgumentParser
ArgumentHelp
ArgumentParser
ArgumentVisibility
Representation
ArgumentParser
CompletionKind
Kind
ArgumentParser
ValidationError
ExitCode
CleanExit
Representation
ArgumentParser
Flag
FlagInversion
FlagExclusivity
Representation
ArgumentParser
NameSpecification
Element
Representation
ArgumentParser
Option
SingleValueParsingStrategy
ArrayParsingStrategy
ArgumentParser
OptionGroup
ArgumentParser
AsyncParsableCommand
AsyncMainProtocol
Command
ArgumentParser
CommandConfiguration
ArgumentParser
EnumerableFlag
ArgumentParser
ExpressibleByArgument
ArgumentParser
ParsableArguments
ArgumentSetProvider
_WrappedParsableCommand
CodingKeys
ArgumentParser
ParsableArgumentsValidator
ParsableArgumentsValidatorError
ArgumentParser
ParsableCommand
!&)66
!&/<<
ArgumentParser
ArgumentDecoder
ParsedArgumentsContainer
ArrayWrapperProtocol
DecodedArguments
SingleValueDecoder
ArrayWrapper
UnkeyedContainer
SingleValueContainer
Error
ArgumentParser
ArgumentDefinitionContainer
Contained Initial
ArgumentDefinitionContainerExpressibleByArgument
ArgumentDefinition
ParsingStrategy
Bare
Update
Help
Kind
Options
ArgumentParser
ArgumentSet
!&)66
!&/<<
ArgumentParser
CommandError
AutodetectedGenerateCompletions
GenerateCompletions
HelpRequested
CodingKeys
ArgumentParser
InputKey
Parent
ArgumentParser
InputOrigin
Element
ArgumentParser
Name
ArgumentParser
ParsedWrapper
Value
DecodableParsedWrapper
Parsed
ArgumentParser
ParsedValues
Element
!&)66
!&/<<
ArgumentParser
ParserError
InternalParseError
InputIndex
ArgumentParser
ParsedArgument
Value
Element
Index
SplitArguments
SubIndex
ArgumentParser
HelpCommand
CodingKeys
Element
ArgumentParser
HelpGenerator
Section
DiscussionSection
Header
!&)66
!&/<<ArgumentParser
MessageInfo
!&)66
!&/<<StandardError
ArgumentParser
Platform
ArgumentParser
Tree
InitializationError
 %.5=EK
ArgumentParserToolInfo
ToolInfoHeader
ToolInfoV0
CommandInfoV0
ArgumentInfoV0
NameInfoV0
KindV0
CodingKeys
apiKey
apiIssuer
authString
p8FilePath
username
appPass
providerPublicID
cliffPath
cliffPropertiesFile
CDQAEnv
stderrLogging
command
bundleID
packagePath
appleID
platform
bundleVersion
bundleShortVersionString
apnsDeviceToken
verbose
showProgress
outputFormat
logDir
item
sync
keychain
listApps
listProviders
uploadPackage
validateApp
appSettings
storePasswordInKeychain
success
failure
failure_show_usage
json
plain
bundleIdReference
educationDiscountType
subscriptionStatusUrl
subscriptionStatusUrlForSandbox
subscriptionStatusUrlVersion
subscriptionStatusUrlVersionForSandbox
gracRatingClassificationNumber
contentRightsDeclaration
isOrEverWasMadeForKids
availableInNewTerritories
isGrandfatheredForGrn
privacyPolicyUrl
computedMinMacOsVersion
buildAudienceType
isLaunchProhibited
hasMessagesExtension
controllerRequiredPlatforms
lsMinimumSystemVersion
hasGameCenterEntitlement
computedMinVisionOsVersion
usesNonExemptEncryption
appStoreReviewDetail
appStoreVersionSubmission
earliestReleaseDate
ShouldPricingTabBeDisplayed
PerformServerVerification
BookSeriesSequenceNumberFormatter
AllowsMetadataOnlyInitialImport
MZWebServiceTimeOut
SkipValidateFirenzeSPIUsage
TerritoriesAllowedToAlterPlusQuality
IsVendorIDEditablePreferenceEnabled
ITunesCrashLogServiceAddress
SkipValidatePurpleSPIUsage
IsDisplayArtistVisible
IsEnabledForMasteredForItunes
MZWebServiceValidateSoftwareSPIUsageMaximumSize
softwareUserGuideFilePath
SkipValidateProductErrors
IsPublicationDateOptional
VerifyZipIntegrity
restApiPlatformUTI
validationMethod
platformDirectory
restApiPlatformEnum
success-message
os-version
tool-path
tool-version
product-errors
code
message
user-info
underlying-errors
Invalid number of keys found, expected one.
A utility for validating and uploading apps, for the App Store.
Upload a package to the App Store.
Authentication using JWT or username/app-password is required.
Validate a package for the App Store.
List of the providers associated with your account.
altool list-providers [--username <string>] [--app-password <string>] [--show-progress] [--verbose] [--output-format <format>] [--log-dir <path>]
Displays a list of the providers associated with your account along with short name, team id, and public id. This command is useful to determine what to use with the --provider-public-id. Authentication using username/app-password is required.
The list of applications for your account.
altool list-apps [--api-key <key>] [--api-issuer <id>] [--auth-string <string>] [--p8-file-path <path>] [--username <string>] [--app-password <string>] [--provider-public-id <id>] [filter] [--show-progress] [--verbose] [--output-format <format>] [--log-dir <path>]
Display all applications associated with your account. Authentication using JWT or username/app-password is required.
Returns the status of the delivery in the import process and App Store Connect flow.
altool build-status [--api-key <key>] [--api-issuer <id>] [--auth-string <string>] [--p8-file-path <path>] [--username <string>] [--app-password <string>] [--provider-public-id <id>] [--deliveryID | --appleID --bundleVersion --bundleShortVersion --platform] [--show-progress] [--verbose] [--output-format <format>] [--log-dir <path>]
Either the deliveryID OR both the appleID AND the bundleVersion must be specified. If the deliveryID is set then the status of the delivery in the import process is returned along with the build's App Store Connect status if the app has passed import. If the deliveryID is not available (e.g., the delivery was made via the legacy delivery flow) then all of appleID AND bundleVersion AND bundleShortVersion AND platform must be set. In this case the delivery's import status cannot be obtained, but if the delivery has passed import successfully and entered App Store Connect its status there is returned.
Get the app settings.
Return the app settings for this app unless otherwise specified.
Stores a password in the keychain item associated with the account username.
If an item with that name and account already exists in the keychain, its password will be updated. Otherwise a new item is created keychain item with the -p option to mask your password with other commands. Optionally, you can specify a custom keychain file in which to store the password with the --keychain option.  You can also use --sync to create a password that will sync with your iCloud account.
Generate a Token given some JWT auth options. 
Authentication using JWT is required.
Run any of the public APIs.
Run any of the public APIs by providing two JSON files. One specifying the authentication needed, and the other with the command and all the needed arguments.
Unable to read auth file 
Unable to read command file 
An app password must be supplied.
Username and app password authentication requires --provider-public-id, if attached to multiple providers.
Failed to find item 
 in environment variables.
WARNING: No CDQAEnv specified assuming PROD but UserDefaults is 
We where unable to set the UserDefaults to 
Expected the UserDefaults to be 
Required options
Path to JSON file with the expected results.
Both --apiIssuer and --apiKey must be specified.
https://appstoreconnect.apple.com
No authrization found.
Either JWT (--api-issuer and --api-key) or username and app password (--username, --app-password and --provider-public-id) authentication is required.
Unable to authenticate.
JWT requires --apiKey and --issuer-id.
JWT authentication should not include username, app password or provider public ID.
Username and app password authentication should not include JWT --auth-string or --p8-file-path.
Username and app password authentication should not include JWT --api-issuer and/or --api-key.
JWT authentication
Both --keychain and --sync connot be specified, they are mutually exclusive.
The name of the item in the keychain.
Used with store-password-in-keychain to specify the path to a keychain file in which to store an application password; if the file does not exist it will get created. The stored password can be used with '@keychain:' within the --app-password option. Cannot be used with the --sync option.
Used with store-password-in-keychain to allow the keychain item to sync with your iCloud account and other devices associated with the account. Cannot by used with the --keychain option.
Username app-password authentication
The path to the package to validate.
The path to the package to upload.
The path to the JSON file with the authentication.
The path to the JSON file with the command and arguments.
Show a progress indicator.
Display all logging messages.
Specifies how the output is formatted. 'xml' and 'json' display the output in a structured format; 'plain' displays in an unstructured format.
The directory that the logs will be saved to.
Specifies the path to a plist file that can override the server platforms.
JWT authentication requires --api-key and --api-issuer and optionally an --auth-string or the --p8-file-path.
The JWT api key.
The JWT issuer ID.
The private key within a JWT p8 file; the key string from after the line with 'BEGIN' to before the line with 'END'.
Path to a JWT p8 authentication file.
The account for this keychain item.
The app specific password for this username and keychain item.
Username and app password token authentication requires --username, --app-password and the --provider-public-id; --provider-public-id is not required for list-providers.
The username attached to the provider.
The app specific password for the username.
The provider's public ID for the username.
The path to the cliff file.
The path to the cliff properties file.
If --deliveryID NOT specified, --appleID, --bundleVersion, --bundleShortVersionString AND --platform are required.
If --deliveryID is specified then --appleID, --bundleVersion, --bundleShortVersionString or --platform should not be.
The delivery ID of the app.
The Apple ID of the app.
The CFBundleVersion of the app.
The CFBundleShortVersionString of the app.
CFBundleShortVersionString
The platform of the app.
Comma delimited list of bundle IDs.
Comma delimited list of Names.
Comma delimited list of SKUs.
Comma delimited list of app IDs.
The bundle identifier of the app.
CDProviderProtocol
T@"NSString",N,R
publicID
shortName
teamID
internalID
@"NSString"16@0:8
CDLogger
v40@0:8@16q24@32
v32@0:8@16q24
debugEnabled
TB,N
infoEnabled
warningEnabled
criticalEnabled
v40@0:8@"NSString"16q24@"NSDate"32
v32@0:8@"NSString"16q24
=======================
No http headers.
    httpBody: No http body.
=======================
Unable to decode http body.
_TtC6altool10AltoolImpl
B16@0:8
v20@0:8B16
v16@0:8
errorEnabled
cmdOptions
runOptions
authenticationContext
shouldShowProgress
showingProgressBar
showProgressBarStatus
progressBarWidth
lastStatusMessage
percentDone
nextUpdateTime
windowWidth
TB,N,VdebugEnabled
TB,N,VinfoEnabled
TB,N,VwarningEnabled
TB,N,VerrorEnabled
TB,N,VcriticalEnabled
altool.AltoolImpl
init()
StdErr Logging is enabled.
progress-bar-width
The directory does not exist: 
Not a directory: 
ContentDeliveryUploadDelegate
v32@0:8@16@24
v32@0:8@"NSString"16@"<ContentDeliveryUploadAction>"24
v32@0:8@"<ContentDeliveryUploadAction>"16@"NSString"24
ContentDeliveryActionDelegate
v32@0:8d16@24
v48@0:8d16d24d32@40
B24@0:8@16
v32@0:8@"NSString"16@"<ContentDeliveryAction>"24
v32@0:8d16@"<ContentDeliveryAction>"24
v48@0:8d16d24d32@"<ContentDeliveryAction>"40
B24@0:8@"<ContentDeliveryAction>"16
@"CDAuthContext"16@0:8
v32@0:8@"NSDictionary"16@"<ContentDeliveryAction>"24
NSObject
q16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
hash
Tq,N,R
superclass
T#,N,R
description
debugDescription
B24@0:8@"Protocol"16
Unable to list applications.
No applications found.
=======================
filter[bundleId]=
appStoreVersions
reviewSubmissions
We should not be able to get here.
Unable to get providers.
No providers found.
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
Unable to get the status for the build.
Unable to get the status for 
 with bundleVersion '
CDDeliveryStatusResponse.status was nil.
= PROCESSING ERRORS
Unknown platform 
Unable to get application settings.
No application settings, or allowed platforms found.
========================
= Application Settings =
========================
========================
=  Allowed  Platforms  =
========================
platformCriteria
=====================
= Platform Criteria:
@16@0:8
name
altool
' upload complete.
_TtC6altool8Keychain
More than 1 item found matching 
 in keychains. Using the first matched.
Failed to retrieve item count for 
altool stored keychain item.
Unable to encode password as UTF8.
Unable to update password for 
, because there are more than 1 matching items in the keychains.
Unable to store password for 
. The keychain returned error OSStatus: 
 does not exist.
Unable to create the new keychain
Created keychain
 and stored item 
Unable to open keychain
Unable to upload package.
Unable to validate package.
JSONEncoder failed to encode 
PropertyListEncoder failed to encode 
    opts="$opts 
    if [[ $COMP_CWORD == "
" ]]; then
        COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
        return
    fi
    case ${COMP_WORDS[
    return
    ;;
    COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
cur="${COMP_WORDS[COMP_CWORD]}"
prev="${COMP_WORDS[COMP_CWORD-1]}"
COMPREPLY=()
COMPREPLY=( $(compgen -W "$("${COMP_WORDS[0]}" 
 "${COMP_WORDS[@]}")" -- "$cur") )
COMPREPLY=( $(compgen -W "
COMPREPLY=( $(compgen -d -- "$cur") )
COMPREPLY=( $(compgen -f -- "$cur") )
$("${COMP_WORDS[0]}" ---completion 
 "${COMP_WORDS[@]}")
ArgumentParser/CompletionsGenerator.swift
Invalid CompletionShell: 
-r -f -a '(command 
 -- --custom (commandline -opc)[1..-1])'
-r -f -a '(__fish_complete_directories)'
-r -f -a '(for i in 
    set -l currentCommands (
 (commandline -opc))
    set -l expectedCommands (string split "
" $argv[1])
    set -l subcommands (string split "
" $argv[2])
    if [ (count $currentCommands) -ge (count $expectedCommands) ]
        for i in (seq (count $expectedCommands))
            if [ $currentCommands[$i] != $expectedCommands[$i] ]
                return 1
            end
        end
        if [ (count $currentCommands) -eq (count $expectedCommands) ]
            return 0
        end
        if [ (count $subcommands) -gt 1 ]
            for i in (seq (count $subcommands))
                if [ $currentCommands[(math (count $expectedCommands) + 1)] = $subcommands[$i] ]
                    return 1
                end
            end
        end
        return 0
    end
    return 1
# A function which filters options which starts with "-" from $argv.
function 
    set -l results
    for i in (seq (count $argv))
        switch (echo $argv[$i] | string sub -l 1)
            case '-'
            case '*'
                echo $argv[$i]
        end
    end
local context state state_descr line
_commandname=$words[1]
typeset -A opt_args
_custom_completion() {
    local completions=("${(@f)$($*)}")
    _describe '' completions
'(-): :->command'
case $state in
    (command)
        local subcommands
        subcommands=(
        )
        _describe "subcommand" subcommands
        ;;
    (arg)
        case ${words[1]} in
        esac
        ;;
esac
() {
    integer ret=1
    local -a args
    args+=(
    )
    _arguments -w -s -S $args[@] && ret=0
    return ret
{_custom_completion $_
{local -a list; list=(${(f)"$(
)"}); _describe '''' list}
Show help information.
Show the version.
ArgumentParser/Argument.swift
--------------------------------------------------------------------
Can't read a value from a parsable
argument definition.
This error indicates that a property declared with an `@Argument`,
`@Option`, `@Flag`, or `@OptionGroup` property wrapper was neither
initialized to a value nor decoded from command-line arguments.
To get a valid value, either call one of the static parsing methods
(`parse`, `parseAsRoot`, or `main`) or define an initializer that
initializes _every_ property of your parsable type.
--------------------------------------------------------------------
Argument(*definition*)
--experimental-dump-help
ArgumentParser/Flag.swift
Flag(*definition*)
offset element 
ArgumentParser/NameSpecification.swift
' has not characters to form short option name.
ArgumentParser/Option.swift
Option(*definition*)
ArgumentParser/OptionGroup.swift
OptionGroup(*definition*)
Fatal error
Tree<ParsableCommand.Type>
_TtC14ArgumentParser15ArgumentDecoder
values
usedOrigins
nextCommandIndex
previouslyDecoded
codingPath
userInfo
decoder
ArgumentParser/ArgumentDecoder.swift
experimental-dump-help
ArgumentParser/CommandParser.swift
Unexpected error: 
The ParsableCommand "
" can't have itself as its own subcommand.
generateCompletionScript
ArgumentParser/Parsed.swift
Trying to get the argument set from a resolved/parsed property.
Show subcommand help information.
 <subcommand>' for detailed help.
ArgumentParser/HelpGenerator.swift
' for more information.
Unspecified version
ArgumentParser/UsageGenerator.swift
preferredName cannot be nil for named arguments
Missing required subcommand.
Invalid option: -
Invalid option: 
' does not take any value, but '
' was specified.
Internal error. Invalid state while parsing command-line arguments.
Internal error. Parsing command-line arguments hit unimplemented code path.
Can't generate completion scripts for '
Please use --generate-completion-script=<shell> with one of:
    
Can't autodetect a supported shell.
Please use --generate-completion-script=<shell> with one of:
    
Unknown option '
'. Did you mean '
Missing value for '
 unexpected arguments: '
Unexpected argument '
Value to be set with 
 had already been set with 
Missing one of: '
Missing expected argument '
No value set for non-argument var 
. Replace with a static variable, or let constant.
' is invalid for '
' is invalid for '<
. Please provide one of the following:
. Please provide one of 
SHELL
element
parent
children
long
short
longWithSingleDash
positional
option
flag
serializationVersion
defaultSubcommand
ypXmT_
$sSY
$ss12CaseIterableP
SS6apiKey_SS0A6IssuerSSSg10authStringAC10p8FilePathAC7cdQAEnvt
SS8username_SSSg11appPasswordAB16providerPublicIDAB7cdQAEnvt
SbSg
SSSg
4args_t
SSSg14filterBundleID_AA0A4NameAA0A3SkuAA0aC0t
SSSg10deliveryID_AA05appleB0AA13bundleVersionAA0d5ShortE6StringAA8platformt
_pXpG
ypSg
ySSG
ySSSgG
ySbG
ySSG
ySS_yptG
SS_ypt
ySaySSGG
So8NSObjectC
So5CDLogC
So13CDAuthContextC
SaySsG
yyXlG
So8CDLogger_p
SaySSG
yypG
ySSG
SDySSypG
SayypG
So18CDProviderProtocol_p
_yptG
_ypt
Sb8inserted_
17memberAfterInsertt
yS2SG
ySsG
SDyS2SGSg
SDyS2SG
ySSypG
SaySSG
_pXpG
SaySsG
$sSY
$ss12CaseIterableP
SSSg
ySSG
ySSG
_pIeggrzo_
qd__
qd__Sg
SSqd__
_pIeggrzo_
Sayqd__G
$s14ArgumentParser13ParsedWrapperP
$ss32ExpressibleByStringInterpolationP
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
SaySSG10extensions_t
SaySSGAAc
_pXpSg
SbSg
Sayqd__GSg
ypSg
Sbz_Xx
$ss25ExpressibleByArrayLiteralP
SS_Sb14withSingleDasht
SJ_Sb14allowingJoinedt
_pSg
$s14ArgumentParser20AsyncParsableCommandP
$s14ArgumentParser17AsyncMainProtocolP
7Command
_pXpG
$s14ArgumentParser14EnumerableFlagP
8RawValueSYQz
$s14ArgumentParser013ExpressibleByA0P
yypG
$s14ArgumentParser17ParsableArgumentsP
$s14ArgumentParser0A11SetProviderP
SSSg5label_yp5valuet
_pSg
SgSSyp
_pIegggggrzo_
$s14ArgumentParser26ParsableArgumentsValidator33_D8B6916CE93C2FC7F7BEDE789FAE65F8LLP
$s14ArgumentParser31ParsableArgumentsValidatorErrorP
$s14ArgumentParser15ParsableCommandP
_SitG
_Sit
_pXpG
ySsG
_SStG
_SSt
ySi_
_pXmTSg
$s14ArgumentParser20ArrayWrapperProtocolP
_pXp
$ss30KeyedDecodingContainerProtocolP
SayypG
yypG
_pXpGG
_pXp_AA_pXpt
SayxG
$s14ArgumentParser0A19DefinitionContainerP
$s14ArgumentParser0a32DefinitionContainerExpressibleByA0P
9Contained
ztKc
SS9Contained
_pIeggrzo_
SgSS9Contained
_pIegggggrzo_
7Initial
QzSg
ztKc
SgSS
ztKc
$ss10SetAlgebraP
$ss9OptionSetP
$sST
SnySiG
$sSl
$sSK
$sSk
yyXlG
ySiG
_SStSg
_pSg
ySSG
ySbG
SgS2S
_pIegggggrzo_
_pSg
ySnySiGG
ySaySSGG
$s14ArgumentParser22DecodableParsedWrapperP
5Value
_pXpGADG
ySSSay
10visibility_t
SSSg5shell_t
_SStG
8previous_AA9duplicateSaySSG13originalInputt
6forKey_t
SgSS
6forKey
_pSg13originalErrort
ypSg_
6forKeyt
Si_Sit
_SSt
Sb8inserted_
17memberAfterInsertt
ySaySSGG
ySaySSGSSG
SaySSGSg
_ypt
ySSSgG
yAAyABySaySSSgGACGGSSGG
yAAySaySSSgGACGGSSG
ySaySSSgGACGG
ySaySSSgGABG
SaySSSgG
ySay
GSSG
SS4text_t
SS7message_SS5usageSS4helpt
SS7message_
8exitCodet
yxGSgXw
yxGG
_pXpGACG
_pXpGACSgIegnr_
_pXp
SaySSGSg
SaySSG
$sSY
SSSg
initWithString:
stringByExpandingTildeInPath
mainBundle
objectForInfoDictionaryKey:
willUseCliff:log:
initWithKeyID:issuerID:p8FilePath:authString:error:
processInfo
environment
initWithUsername:appPassword:providerPublicID:
standardUserDefaults
stringForKey:
registerDefaults:
defaultManager
contentsAtPath:
httpHeadersForURLRequest:error:log:
name
publicID
shortName
teamID
internalID
logMessage:level:date:
debugEnabled
setDebugEnabled:
infoEnabled
setInfoEnabled:
warningEnabled
setWarningEnabled:
errorEnabled
setErrorEnabled:
criticalEnabled
setCriticalEnabled:
logMessage:level:
init
.cxx_destruct
platformWithString:
dealloc
initWithCategory:loggers:
setEnableStderrLogging:
debug:
objectForKey:
fileExistsAtPath:isDirectory:
initWithLogDirectory:
didCompleteUploadForFile:uploadAction:
uploadAction:hasBuildID:
setProgressMessage:action:
setProgressPercent:action:
setElapsedTime:secondsRemaining:throughput:action:
shouldCancelAction:
authContext
networkConnectivityChanged:action:
isEqual:
hash
superclass
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
debugDescription
initWithAuthContext:log:
listAppsWithFilters:
isSuccessful
critical:
error
logNSErrors:
stdErr:
apps
stdOut:
initWithArray:
sanitize
dataWithPropertyList:format:options:error:
error:
dataWithJSONObject:options:error:
providers:
providers
rawInfo
statusForDeliveryID:appID:bundleVersion:bundleShortVersion:platform:
errors
logErrors:
processingErrors
status
appSettingsResponse:
appSettings
allowedPlatforms
__swift_objectForKeyedSubscript:
allKeys
initWithDictionary:
lastPathComponent
fileExistsAtPath:
initWithAuthContext:
initWithBase64EncodedString:options:
requestUploadForPackageWithAppleID:platformInfo:bundleVersionString:bundleShortVersionString:apnsDeviceToken:delegate:logFileURL:
uploadAction
buildId
createUploadActionWithBuildID:packageAtPath:appleID:platformInfo:bundleVersionString:bundleShortVersionString:apnsDeviceToken:delegate:logFileURL:
addLogger:
upload
validate
operatingSystemVersionString
toolPath
versionString
code
localizedDescription
userInfo
underlyingErrors
RawValue
AllCases
AuthenticationFailure
UnableToReadFile
UnableToWriteFile
InvalidDirectory
CodingFailure
UserDefaultsOutOfSync
KeychainFailure
UnknownPlatform
NoAuthenticationContext
FailedToGetApps
MissingProviderPublicID
apiKey
apiIssuer
authString
p8FilePath
username
appPass
providerPublicID
cliffPath
cliffPropertiesFile
CDQAEnv
stderrLogging
command
bundleID
packagePath
appleID
platform
bundleVersion
bundleShortVersionString
apnsDeviceToken
verbose
showProgress
outputFormat
logDir
item
sync
keychain
listApps
listProviders
uploadPackage
validateApp
appSettings
storePasswordInKeychain
generateJWT
success
failure
failure_show_usage
json
plain
cdQAEnv
buildStatus
getProvider
appPassword
deliveryID
filterBundleID
filterName
filterSku
filterID
args
_packagePath
_args
_jwtAuthOptions
_dawAuthOptions
_flagOpts
_userDefaults
_filterArgs
_item
_keychain
_sync
_jsonFiles
_expectedResults
_platform
_appleID
_bundleID
_bundleVersion
_bundleShortVersionString
_altApiKey
_apiKey
_apiIssuer
_altApiIssuer
_authString
_p8FilePath
_username
_appPassword
_providerPublicID
_cliffPath
_cliffPropertiesFile
_showProgress
_verbose
_outputFormat
_logDir
_cdQAEnv
_extraArgs
_other
_filterBundleID
_filterName
_filterSku
_filterID
_deliveryID
_auth
_command
jsonFiles
expectedResults
flagOpts
userDefaults
jwtAuthOptions
dawAuthOptions
filterArgs
auth
other
extraArgs
altApiKey
altApiIssuer
debugEnabled
infoEnabled
warningEnabled
errorEnabled
criticalEnabled
cmdOptions
runOptions
authenticationContext
shouldShowProgress
showingProgressBar
showProgressBarStatus
progressBarWidth
lastStatusMessage
percentDone
nextUpdateTime
windowWidth
osVersion
successMessage
toolPath
toolVersion
productErrors
code
message
userInfo
underlyingErrors
RawValue
RawValue
AllCases
rawValue
Value
_parsedValue
base
StringInterpolation
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
abstract
discussion
valueName
visibility
base
default
hidden
private
kind
list
file
shellCommand
custom
default
directory
RawValue
message
rawValue
base
helpRequest
dumpRequest
Value
_parsedValue
base
prefixedNo
prefixedEnableDisable
exclusive
chooseFirst
chooseLast
ArrayLiteralElement
elements
base
customLong
customShort
long
short
Value
_parsedValue
base
Value
_parsedValue
_visibility
_dummy
title
commandName
_superCommandName
abstract
usage
discussion
version
shouldDisplay
subcommands
defaultSubcommand
helpNames
_options
options
values
usedOrigins
nextCommandIndex
previouslyDecoded
codingPath
userInfo
decoder
underlying
parsedElement
type
value
wrongKeyType
topLevelHasNoUnkeyedContainer
topLevelHasNoSingleValueContainer
singleValueDecoderHasNoContainer
base
currentIndex
array
Contained
Initial
default
scanningForValue
unconditional
upToNextOption
allRemainingInput
postTerminator
allUnrecognized
kind
help
completion
parsingStrategy
update
initial
options
defaultValue
keys
allValues
isComposite
abstract
discussion
valueName
visibility
parentTitle
nullary
unary
named
positional
rawValue
ArrayLiteralElement
Element
RawValue
Element
Iterator
Index
SubSequence
Indices
content
namePositions
commandStack
parserError
visibility
_generateCompletionScript
generateCompletionScript
name
parent
root
_elements
ArrayLiteralElement
argumentIndex
defaultValue
long
short
longWithSingleDash
value
definition
value
inputOrigin
shouldClearArrayIfParsed
elements
originalInput
helpRequested
completionScriptRequested
completionScriptCustomResponse
unsupportedShell
unknownOption
invalidOption
nonAlphanumericShortOption
missingValueForOption
unexpectedValueForOption
unexpectedExtraValues
duplicateExclusiveValues
noValue
unableToParseValue
userValidationError
noArguments
versionRequested
dumpHelpRequested
notImplemented
invalidState
missingSubcommand
wrongType
subcommandLevelMismatch
subcommandLevelMissing
subcommandLevelDuplicated
subcommandNameMismatch
expectedCommandButNoneFound
_elements
firstUnused
originalInput
inputIndex
subIndex
value
index
option
terminator
name
nameWithValue
rawValue
RawValue
complete
_subcommands
_help
commandStack
visibility
subcommands
help
header
elements
discussion
isSubcommands
commandStack
abstract
usage
sections
discussionSections
label
title
positionalArguments
subcommands
options
content
help
validation
other
element
parent
children
recursiveSubcommand
RawValue
serializationVersion
command
superCommands
commandName
abstract
discussion
defaultSubcommand
subcommands
arguments
kind
shouldDisplay
sectionTitle
isOptional
isRepeating
names
preferredName
valueName
defaultValue
allValues
name
long
short
longWithSingleDash
positional
option
flag
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380019</string>
<key>CFBundleIdentifier</key>
<string>com.apple.amp.contentdelivery.altool</string>
<key>CFBundleShortVersionString</key>
<string>2.153.2</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>MacOSX</string>
</array>
<key>CFBundleVersion</key>
<string>15302</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>23E149a</string>
<key>DTPlatformName</key>
<string>macosx</string>
<key>DTPlatformVersion</key>
<string>14.4</string>
<key>DTSDKBuild</key>
<string>23E149a</string>
<key>DTSDKName</key>
<string>macosx14.4.internal</string>
<key>DTXcode</key>
<string>1530</string>
<key>DTXcodeBuild</key>
<string>15E5178e</string>
<key>LSMinimumSystemVersion</key>
<string>13.0</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2021-2023 Apple Inc. All rights reserved.</string>
</dict>
</plist>
ISBN
displayName
name
bundleId
type
primaryLocale
grnNumber
storeURL
isArcade
removed
removedDate
minOsVersion
hasStickers
expirationDate
qcState
iconAssetToken
isWatchOnly
processingState
deviceFamilies
uploadedDate
version
expired
versionString
appStoreState
build
platform
createdDate
releaseType
platform
state
submittedDate
IsISBNOptional
displayName
sdkID
xmlID
serverID
type
help
version
bash
fish
