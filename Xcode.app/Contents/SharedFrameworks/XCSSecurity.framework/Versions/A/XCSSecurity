@(#)PROGRAM:XCSSecurity  PROJECT:XCSSecurity-1
A certificate object could not be created with the provided data.
Error fetching common name: %@
Error fetching serial number: %@
%llu
Error fetching email addresses: %@
<XCSSecurityCertificate: %@>
Error reading short description: %@
<XCSSecurityCertificate: %p>
The provided data could not be interpreted as a certificate.
commonName
organization
organizationalUnit
locality
state
country
validityPeriod
serialNumber
An unsupported certificate type was provided.
Could not instantiate certificate authority object.
keychain
No suitable keypair was available at CSR creation time.
The provided keypair does not use either RSA or DSA as the signing algorithm.
CERTIFICATE REQUEST
Imported Data
Security
/tmp/xcskeyXXXXXX.p8
/usr/bin/openssl
pkcs8
-inform
-passin
stdin
XCSSecurity
OpenSSL: %@
An OpenSSL error occurred (received no output from OpenSSL during the unwrap operation).
dsAttrTypeStandard:GeneratedUID
/var/%@
/bin/false
true
dsAttrTypeNative:IsHidden
Failed to find OD record for user (%@) we just created: %@
Failed to find admin group with an error: %@
Failed to add user %@ to admin group with an error: %@
The specfied user could not be authenticated because the user could not be found.
Check the user name is correct and try again.
admin
lowercaseString
Can not get external IDs for a nil array of record names
Can not get record names for a nil array of external IDs
The requested lock interval (%lu) is greater than the maximum allowed lock interval (%ld).
The lock interval must be greater than 0 when configuring the keychain to automatically lock after an interval.
c32@?0@8Q16^c24
v8@?0
CERTIFICATE
-----BEGIN %@-----
-----END %@-----
-----BEGIN .+-----
(.*)
-----END .+-----
An unsupported data affinity (%lu) was provided to the random data generator.
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
count
initWithCertificate:
init
dealloc
stringWithFormat:
initWithData:
commonName
serialNumber
emailAddresses
description
_certificate
T@"NSString",R
T@"NSArray",R
setDestinationKeychain:
createSelfSignedCertificateWithPublicKey:privateKey:inputParms:error:
objectForKeyedSubscript:
_setCommonName:
currentLocale
objectForKey:
_setCountry:
_setUserEmailAddressOfRequestor:
_setEmailAddressOfCA:
_setOrganization:
_setOrganizationUnit:
_setLocality:
_setState:
_setToDefaults
_setValidityPeriod:
integerValue
numberWithInteger:
_setSerialNumber:
_setCertAuthorityBasicConstraintsPresent:
_setCertAuthorityIsCertAuthority:
_setCertAuthorityIsEnabled:
_setCertAuthorityCertSigning:
_setCertAuthoritySignature:
_setUserSignature:
_setIdentityName:
_setCAAdminEmailAddress:
_setToSMIME
_setCertType:
_setToSSLClient
_setToSSLServer
_setToCodeSigning
_setToVPNClient
_setToVPNServer
_setKeyEnciphermentUsage:
_setDataEnciphermentUsage:
_setEnabledCriticalDigitalSignature
setCertificateInformation:
setAdditionalCertificateInformation:
setBasicConstraintsExtension:
setKeyUsageExtension:
setExtendedKeyUsageExtension:
setIdentityNameInfo:
lastPathComponent
_createUserKeyPair:privKey:keychain:algorithm:size:userName:accessRef:inputParms:
initWithFullPath:
initWithName:
createWithPublicKey:privateKey:keychain:authenticator:signer:inputParms:error:
certificate
initWithCSR:clHandle:
_userCommonName
_userEmailAddress
_lastUsedSerialNumber
numberWithLong:
fullPath
_setName:
_updateCAConfigFileSerialNumber
signedCertificateFromCSR:inputParms:error:
setObject:forKeyedSubscript:
initWithBytesNoCopy:length:freeWhenDone:
arrayWithObjects:count:
code
initWithUTF8String:
initWithFileDescriptor:closeOnDealloc:
writeData:
defaultManager
stringWithFileSystemRepresentation:length:
pipe
setLaunchPath:
setArguments:
setStandardInput:
setStandardError:
setStandardOutput:
launch
fileHandleForWriting
closeFile
fileHandleForReading
readDataToEndOfFile
waitUntilExit
length
initWithData:encoding:
removeItemAtPath:error:
defaultSession
nodeWithSession:type:error:
queryWithNode:forRecordTypes:attribute:matchType:queryValues:returnAttributes:maximumResults:error:
resultsAllowingPartial:error:
mutableCopy
dictionary
addMemberRecord:error:
synchronizeAndReturnError:
countByEnumeratingWithState:objects:count:
nodeWithSession:name:error:
createRecordWithRecordType:name:attributes:error:
firstObject
changePassword:toPassword:error:
deleteRecordAndReturnError:
valuesForAttribute:error:
setValue:forAttribute:error:
verifyPassword:error:
UTF8String
array
initWithUUIDString:
addObject:
valueForKey:
objectAtIndexedSubscript:
recordName
lowercaseString
indexOfObject:
removeObjectAtIndex:
recordType
isEqualToString:
addObjectsFromArray:
containsObject:
allObjects
arrayWithArray:
subnodeNamesAndReturnError:
unreachableSubnodeNamesAndReturnError:
setWithArray:
minusSet:
null
stringByExpandingTildeInPath
fileSystemRepresentation
bytes
indexOfObjectPassingTest:
initWithBytes:length:
dataUsingEncoding:
initWithCapacity:
appendData:
regularExpressionWithPattern:options:error:
stringByReplacingMatchesInString:options:range:withTemplate:
initWithLength:
mutableBytes
stringWithUTF8String:
writeToFile:options:error:
setAttributes:ofItemAtPath:error:
XCSSecurityCertificate
@24@0:8@16
@24@0:8^{__SecCertificate=}16
v16@0:8
@16@0:8
^{__SecCertificate=}
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()-=+_;:'",.<>/?`~\|
@(#)PROGRAM:XCSSecurity  PROJECT:XCSSecurity-1
)/59=
XCSSecurity
A certificate object could not be created with the provided data.
Security
Error fetching common name: %@
Error fetching serial number: %@
%llu
Error fetching email addresses: %@
<XCSSecurityCertificate: %@>
Error reading short description: %@
<XCSSecurityCertificate: %p>
The provided data could not be interpreted as a certificate.
commonName
organization
organizationalUnit
locality
state
country
validityPeriod
serialNumber
An unsupported certificate type was provided.
Could not instantiate certificate authority object.
keychain
No suitable keypair was available at CSR creation time.
The provided keypair does not use either RSA or DSA as the signing algorithm.
CERTIFICATE REQUEST
Imported Data
/tmp/xcskeyXXXXXX.p8
/usr/bin/openssl
pkcs8
-inform
-passin
stdin
OpenSSL: %@
An OpenSSL error occurred (received no output from OpenSSL during the unwrap operation).
dsAttrTypeStandard:GeneratedUID
/var/%@
/bin/false
true
dsAttrTypeNative:IsHidden
Failed to find OD record for user (%@) we just created: %@
Failed to find admin group with an error: %@
Failed to add user %@ to admin group with an error: %@
The specfied user could not be authenticated because the user could not be found.
Check the user name is correct and try again.
admin
lowercaseString
Can not get external IDs for a nil array of record names
Can not get record names for a nil array of external IDs
The requested lock interval (%lu) is greater than the maximum allowed lock interval (%ld).
The lock interval must be greater than 0 when configuring the keychain to automatically lock after an interval.
B32@?0@8Q16^B24
v8@?0
CERTIFICATE
-----BEGIN %@-----
-----END %@-----
-----BEGIN .+-----
(.*)
-----END .+-----
An unsupported data affinity (%lu) was provided to the random data generator.
writeData:
isEqualToString:
_setValidityPeriod:
code
addObject:
regularExpressionWithPattern:options:error:
fileHandleForReading
signedCertificateFromCSR:inputParms:error:
_setKeyEnciphermentUsage:
UTF8String
initWithCapacity:
_setCountry:
_setToSSLServer
indexOfObject:
setAdditionalCertificateInformation:
removeItemAtPath:error:
setStandardError:
initWithLength:
stringWithUTF8String:
arrayWithObjects:count:
createSelfSignedCertificateWithPublicKey:privateKey:inputParms:error:
setExtendedKeyUsageExtension:
_setCertAuthorityIsCertAuthority:
defaultSession
_setState:
lastPathComponent
verifyPassword:error:
queryWithNode:forRecordTypes:attribute:matchType:queryValues:returnAttributes:maximumResults:error:
_setLocality:
_createUserKeyPair:privKey:keychain:algorithm:size:userName:accessRef:inputParms:
mutableBytes
addObjectsFromArray:
initWithName:
_updateCAConfigFileSerialNumber
subnodeNamesAndReturnError:
numberWithLong:
_setToVPNClient
_setDataEnciphermentUsage:
indexOfObjectPassingTest:
fileHandleForWriting
waitUntilExit
setStandardInput:
setArguments:
mutableCopy
synchronizeAndReturnError:
_setToCodeSigning
setIdentityNameInfo:
stringByExpandingTildeInPath
deleteRecordAndReturnError:
_setCertAuthorityIsEnabled:
createWithPublicKey:privateKey:keychain:authenticator:signer:inputParms:error:
removeObjectAtIndex:
readDataToEndOfFile
_setName:
_lastUsedSerialNumber
_userCommonName
bytes
launch
initWithUTF8String:
containsObject:
allObjects
objectAtIndexedSubscript:
setStandardOutput:
resultsAllowingPartial:error:
_setEmailAddressOfCA:
initWithBytes:length:
fileSystemRepresentation
_setToVPNServer
certificate
stringByReplacingMatchesInString:options:range:withTemplate:
initWithData:encoding:
currentLocale
initWithBytesNoCopy:length:freeWhenDone:
length
setAttributes:ofItemAtPath:error:
numberWithInteger:
_setToDefaults
_setCertAuthoritySignature:
dictionary
setKeyUsageExtension:
count
_setOrganization:
setBasicConstraintsExtension:
nodeWithSession:name:error:
recordName
_setCAAdminEmailAddress:
objectForKey:
unreachableSubnodeNamesAndReturnError:
_userEmailAddress
dictionaryWithObjects:forKeys:count:
_setEnabledCriticalDigitalSignature
appendData:
stringWithFileSystemRepresentation:length:
_setUserEmailAddressOfRequestor:
initWithFileDescriptor:closeOnDealloc:
firstObject
nodeWithSession:type:error:
_setCertType:
_setToSMIME
initWithCSR:clHandle:
initWithUUIDString:
changePassword:toPassword:error:
setLaunchPath:
lowercaseString
setValue:forAttribute:error:
recordType
setCertificateInformation:
objectForKeyedSubscript:
_setCertAuthorityBasicConstraintsPresent:
writeToFile:options:error:
array
_setOrganizationUnit:
stringWithFormat:
valueForKey:
integerValue
errorWithDomain:code:userInfo:
_setIdentityName:
_setUserSignature:
dataUsingEncoding:
fullPath
initWithFullPath:
closeFile
addMemberRecord:error:
_setToSSLClient
_setCommonName:
setObject:forKeyedSubscript:
countByEnumeratingWithState:objects:count:
setWithArray:
defaultManager
valuesForAttribute:error:
null
arrayWithArray:
pipe
setDestinationKeychain:
_setCertAuthorityCertSigning:
minusSet:
_setSerialNumber:
createRecordWithRecordType:name:attributes:error:
init
dealloc
initWithData:
initWithCertificate:
commonName
serialNumber
emailAddresses
description
_certificate
T@"NSString",R
T@"NSArray",R
XCSSecurityCertificate
@24@0:8@16
@24@0:8^{__SecCertificate=}16
v16@0:8
@16@0:8
^{__SecCertificate=}
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()-=+_;:'",.<>/?`~\|
