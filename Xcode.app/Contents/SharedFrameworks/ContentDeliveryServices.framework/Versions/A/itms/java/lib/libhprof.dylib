No file image: %s
strcmp((char*)p, gdata->header)==0
hprof_check.c
Filename=%s, nbytes=%d, header="%s"
idsize==sizeof(HprofId)
#%d total records found in %d bytes
fd>=0
Cannot md_seek() to end of file
((jint)nbytes)>512
Cannot md_seek() to start of file
image!=NULL
System read failed.
((jint)nbytes)==nread
write
Only part of buffer processed
Unknown system error condition
System %s failed: %s
CHECK TAGS: starting
temp utf8 map
HPROF_UTF8
size>=(int)sizeof(HprofId)
#%d@%d: %s, sz=%d, name_id=0x%x, "
HPROF_LOAD_CLASS
size==2*4+2*(int)sizeof(HprofId)
(class_serial_num) >= gdata->class_serial_number_start && (class_serial_num) < gdata->class_serial_number_counter
(trace_serial_num) >= gdata->trace_serial_number_start && (trace_serial_num) < gdata->trace_serial_number_counter
#%d@%d: %s, sz=%d, class_serial_num=%u, id=0x%x, trace_serial_num=%u, name_id=0x%x
HPROF_UNLOAD_CLASS
size==4
#%d@%d: %s, sz=%d, class_serial_num=%u
HPROF_FRAME
size==2*4+4*(int)sizeof(HprofId)
#%d@%d: %s, sz=%d, 
 name_id=0x%x, sig_id=0x%x, source_id=0x%x, class_serial_num=%u, lineno=%d
HPROF_TRACE
size>=3*4
#%d@%d: %s, sz=%d, trace_serial_num=%u, thread_serial_num=%u, nelems=%d [
0x%x,
HPROF_ALLOC_SITES
size>=2+4*4+2*8
#%d@%d: %s, sz=%d, flags=0x%x, cutoff=%g, nblive=%d, nilive=%d, tbytes=(%d,%d), tinsts=(%d,%d), num_elements=%d
 %d: ty=%d, class_serial_num=%u, trace_serial_num=%u, nblive=%d, nilive=%d, tbytes=%d, tinsts=%d
HPROF_HEAP_SUMMARY
size==2*4+2*8
#%d@%d: %s, sz=%d, nblive=%d, nilive=%d, tbytes=(%d,%d), tinsts=(%d,%d)
HPROF_START_THREAD
(thread_serial_num) >= gdata->thread_serial_number_start && (thread_serial_num) < gdata->thread_serial_number_counter
#%d@%d: %s, sz=%d, thread_serial_num=%u, id=0x%x, trace_serial_num=%u, 
 trace_serial_num=%u, nm=0x%x, gr=0x%x, gn=0x%x
HPROF_END_THREAD
#%d@%d: %s, sz=%d, thread_serial_num=%u
HPROF_HEAP_DUMP
#%d@%d: BEGIN: %s, sz=%d
#%d@%d: END: %s, sz=%d, nheap_recs=%d
HPROF_HEAP_DUMP_SEGMENT
#%d@%d: BEGIN SEGMENT: %s, sz=%d
#%d@%d: END SEGMENT: %s, sz=%d, nheap_recs=%d
HPROF_HEAP_DUMP_END
#%d@%d: SEGMENT END: %s, sz=%d
HPROF_CPU_SAMPLES
size>=2*4
#%d@%d: %s, sz=%d, total_samples=%d, trace_count=%d
 %d: samples=%d, trace_serial_num=%u
HPROF_CONTROL_SETTINGS
size==4+2
#%d@%d: %s, sz=%d, flags=0x%x, depth=%d
UNKNOWN
#%d@%d: %s, sz=%d
unknown record type
p<=(pstart+nbytes)
p==(pstart+nbytes)
%s0x%x
%s0x%x->
<null>
\x%02x
temp ctab
HPROF_GC_ROOT_UNKNOWN
HPROF_GC_ROOT_JNI_GLOBAL
HPROF_GC_ROOT_JNI_LOCAL
HPROF_GC_ROOT_JAVA_FRAME
HPROF_GC_ROOT_NATIVE_STACK
HPROF_GC_ROOT_STICKY_CLASS
HPROF_GC_ROOT_THREAD_BLOCK
HPROF_GC_ROOT_MONITOR_USED
HPROF_GC_ROOT_THREAD_OBJ
HPROF_GC_CLASS_DUMP
HPROF_GC_INSTANCE_DUMP
HPROF_GC_OBJ_ARRAY_DUMP
HPROF_GC_PRIM_ARRAY_DUMP
H#%d@%d %s: ERROR!
unknown heap record type
p==pstart+nbytes
H#%d@%d %s: id=0x%x
H#%d@%d %s: id=0x%x, id2=0x%x
H#%d@%d %s: id=0x%x, thread_serial_num=%u, fr=0x%x
H#%d@%d %s: id=0x%x, thread_serial_num=%u
H#%d@%d %s: id=0x%x, thread_serial_num=%u, trace_serial_num=%u
H#%d@%d %s: id=0x%x, trace_serial_num=%u
  su=0x%x, ld=0x%x, si=0x%x, pr=0x%x, re1=0x%x, re2=0x%x
  instance_size=%d
  constant_pool %d: cpi=%d, ty=%d, val=
  static_field_count=%d
  static field %d: 
, ty=%d, val=
  instance_field_count=%d
  instance_field %d: 
, ty=%d
H#%d@%d %s: id=0x%x, trace_serial_num=%u, cid=0x%x, nbytes=%d
  field %d: 
H#%d@%d %s: id=0x%x, trace_serial_num=%u, nelems=%d, eid=0x%x
  [%d]: id=0x%x
H#%d@%d %s: id=0x%x, trace_serial_num=%u, nelems=%d, ty=%d
  val=%s
  %s
bad type number
0x%08x
0x%02x
0x%04x
0x%04x(%c)
\u%04x
0x%08x(%f)
0x%08x%08x(%f)
0x%08x%08x
Class
Ljava/lang/Object;
Ljava/io/Serializable;
Ljava/lang/String;
Ljava/lang/Class;
Ljava/lang/ClassLoader;
Ljava/lang/System;
Ljava/lang/Thread;
Ljava/lang/ThreadGroup;
--------------------- Class Table ------------------------
----------------------------------------------------------
Cannot load class with findClass
hprof_class.c
java/lang/IllegalArgumentException
Could not find the java/lang/IllegalArgumentException class
Illegal mnum
Name not found
Missing jclass when fields needed
0x%08x: Class %s, SN=%u, status=0x%08x, ref=%p, method_count=%d
    Method %d: "%s", sig="%s", method=%p
HPROF cpu loop lock
HPROF cpu sample lock
HPROF cpu sampling thread
HPROF pause for PID %d
 HPROF pause got tired of waiting and gave up.
ASSERTION FAILURE: %s [%s:%d]
HPROF ERROR: %s (JVMTI Error %s(%d)) [%s:%d]
HPROF ERROR: %s [%s:%d]
HPROF SIGNAL %d TERMINATED PROCESS
UnknownSourceFile
HPROF DUMPING CORE
HPROF TERMINATED PROCESS
hprof_event.c
Illegal cnum.
Frame
--------------------- Frame Table ------------------------
Frame 0x%08x: method=%p, location=%d, lineno=%d(%d), status=%d 
Cannot load this JVM TI agent twice, check your java command line for duplicate hprof options.
hprof_init.c
sun.boot.library.path
Could not find npt library
NPT ERROR: %s
Cannot open library
nptInitialize
Cannot find nptInitialize
0.0.0
Cannot initialize NptEnv
Cannot load npt library
Cannot initialize npt utf functions
HPROF dump lock
HPROF data access lock
HPROF callback lock
HPROF callback block
HPROF object free lock
HPROF gc_finish lock
java_crw_demo
_java_crw_demo@76
java_crw_demo_classname
_java_crw_demo_classname@12
help
_JAVA_HPROF_OPTIONS
general syntax error parsing options
file
file or net options should only appear once
syntax error parsing file=filename
net option missing ':'
net option missing port
format
syntax error parsing format=a|b
format option value must be a|b
depth
syntax error parsing depth=DECIMAL
depth option value must be decimal and >= 0
interval
syntax error parsing interval=DECIMAL
interval option value must be decimal and > 0
cutoff
syntax error parsing cutoff=DOUBLE
cutoff option value must be floating point and >= 0
syntax error parsing cpu=y|samples|times|old
samples
times
cpu option value must be y|samples|times|old
heap
syntax error parsing heap=dump|sites|all
dump
sites
heap option value must be dump|sites|all
lineno
lineno option value must be y|n
thread
thread option value must be y|n
doe option value must be y|n
msa option value must be y|n
force
force option value must be y|n
verbose
verbose option value must be y|n
primfields
primfields option value must be y|n
primarrays
primarrays option value must be y|n
monitor
monitor option value must be y|n
gc_okay
gc_okay option value must be y|n
logflags
logflags option value must be numeric
debugflags
debugflags option value must be numeric
coredump
coredump option value must be y|n
exitpause
The exitpause option was removed, use -XX:OnError='cmd %%p'
errorexit
errorexit option value must be y|n
pause
pause option value must be y|n
debug
debug option value must be y|n
precrash
The precrash option was removed, use -XX:OnError='precrash -p %%p'
X option value must be numeric
Unknown option: 
cpu=times|old is not supported with format=b
monitor=y is not supported with format=b
java.hprof
java.hprof.txt
.TMP
.check.txt
can't create temp heap file: %s
can't connect to %s:%u
can't create profile file: %s
     HPROF: Heap and CPU Profiling Agent (JVMTI Demonstration Code)
hprof usage: java -agentlib:hprof=[help]|[<option>=<value>, ...]
Option Name and Value  Description                    Default
---------------------  -----------                    -------
heap=dump|sites|all    heap profiling                 all
cpu=samples|times|old  CPU usage                      off
monitor=y|n            monitor contention             n
format=a|b             text(txt) or binary output     a
file=<file>            write data to file             java.hprof[{.txt}]
net=<host>:<port>      send data over a socket        off
depth=<size>           stack trace depth              4
interval=<ms>          sample interval in ms          10
cutoff=<value>         output cutoff point            0.0001
lineno=y|n             line number in traces?         y
thread=y|n             thread in traces?              n
doe=y|n                dump on exit?                  y
msa=y|n                Solaris micro state accounting n
force=y|n              force output to <file>         y
verbose=y|n            print messages about dumps     y
Obsolete Options
----------------
gc_okay=y|n
Examples
--------
  - Get sample cpu information every 20 millisec, with a stack depth of 3:
      java -agentlib:hprof=cpu=samples,interval=20,depth=3 classname
  - Get heap usage information based on the allocation sites:
      java -agentlib:hprof=heap=sites classname
Notes
-----
  - The option format=b cannot be used with monitor=y.
  - The option format=b cannot be used with cpu=old|times.
  - Use of the -Xrunhprof interface can still be used, e.g.
       java -Xrunhprof:[help]|[<option>=<value>, ...]
    will behave exactly the same as:
       java -agentlib:hprof=[help]|[<option>=<value>, ...]
Warnings
--------
  - This is demonstration code for the JVMTI interface and use of BCI,
    it is not an official product or formal part of the JDK.
  - The -Xrunhprof interface will be removed in a future release.
  - The option format=b is considered experimental, this format may change
    in a future release.
%s option error: %s (%s)
hprof
.txt
%s.%d%s
invalid port number
hostname is NULL
JAVA PROFILE 1.0.1
JAVA PROFILE 1.0.2
HPROF gc_finish watcher
VM Death during VM Init
VM Death before VM Init
VM Death more than once?
Dumping
 contended monitor usage ...
 Java heap ...
 allocation sites ...
 CPU usage by sampling running threads ...
 CPU usage by timing methods ...
 CPU usage in old prof format ...
 done.
No classname in classfile
Ran out of malloc() space
com/sun/demo/jvmti/hprof/Tracker
Lcom/sun/demo/jvmti/hprof/Tracker;
CallSite
(II)V
ReturnSite
ObjectInit
(Ljava/lang/Object;)V
NewArray
%s [%s:%d]
Could not find library
Cannot find library symbol '%s'
jvm.hprof.txt
Can't open %s
hprof_io.c
%s, created %s
read
--------
SITES BEGIN (ordered by %s) %s
          percent          live          alloc'ed  stack class
 rank   self  accum     bytes objs     bytes  objs trace name
%5u %5.2f%% %5.2f%% %9u %4u %9u %5u %5u %s
SITES END
THREAD START (obj=%x, id = %d, name="%s", group="%s")
THREAD END (id = %d)
TRACE %u:
 (thread=%d)
 (from %s phase of JVM)
<empty>
Compiled method
Native method
Unknown line
<Unknown Method>
<Unknown Source>
%s.%s(%s:%s)
CPU SAMPLES
CPU TIME (ms)
%s BEGIN (total = %d) %s
rank   self  accum   count trace method
%4u %5.2f%% %5.2f%% %7u %5u
 %s.%s
 <empty trace>
%s END
count callee caller time
%s.%s%s 
<unknown callee>
<unknown caller>
MONITOR TIME BEGIN (total = %u ms) %s
rank   self  accum   count trace monitor
%4u %5.2f%% %5.2f%% %7u %5u %s (Java)
MONITOR TIME END
SLEEP: timeout=%d, <unknown thread>
SLEEP: timeout=%d, thread %d
WAIT: MONITOR %s, timeout=%d, <unknown thread>
WAIT: MONITOR %s, timeout=%d, thread %d
WAITED: MONITOR %s, time_waited=%d, <unknown thread>
WAITED: MONITOR %s, time_waited=%d, thread %d
EXIT: MONITOR %s, <unknown thread>
EXIT: MONITOR %s, thread %d
MONITOR DUMP BEGIN
intr|
native|
    THREAD %d, trace %d, status: %s
    MONITOR %s
owner: thread %d, entry count: %d
    MONITOR %s unowned
waiting to enter:
waiting to be notified:
MONITOR DUMP END
HEAP DUMP BEGIN (%u objects, %u bytes) %s
ROOT %x (kind=<thread>, id=%u, trace=%u)
ROOT %x (kind=<unknown>)
ROOT %x (kind=<JNI global ref>, id=%x, trace=%u)
ROOT %x (kind=<JNI local ref>, thread=%u, frame=%d)
ROOT %x (kind=<system class>, name=%s)
ROOT %x (kind=<busy monitor>)
ROOT %x (kind=<thread block>, thread=%u)
ROOT %x (kind=<Java stack>, thread=%u, frame=%d)
ROOT %x (kind=<native stack>, thread=%u)
Mis-match on instance size in class dump
CLS %x (name=%s, trace=%u)
super
loader
signers
domain
static %s
constant pool entry %d
Mis-match on instance size in instance dump
OBJ %x (sz=%u, trace=%u, class=%s@%x)
%s%x
ARR %x (sz=%u, trace=%u, nelems=%u, elem type=%s@%x)
[%u]
ARR %x (sz=%u, trace=%u, nelems=%u, elem type=%s)
HEAP DUMP END
send
Unknown_class
Unknown_method
byte
char
enum
float
double
long
short
void
boolean
 thread %d,
 thread %d
 <unknown thread>,
 <unknown thread>
Cannot seek to beginning of heap info file
File size is smaller than bytes written
IoNames
HPROF listener lock
HPROF listener thread
HPROF: received exit event, exiting ...
failed to recognize cmd %d, exiting..
hprof_listener.c
Loader
--------------------- Loader Table ------------------------
Loader 0x%08x: globalref=%p, object_index=%d
%s/%s
lib%s.dylib
%s/lib%s.dylib
Monitor
------------------- Monitor Table ------------------------
Monitor 0x%08x: trace=0x%08x, sig=0x%08x, num_hits=%d, contended_time=(%d,%d)
Object
--------------------- Object Table ------------------------
Object 0x%08x: site=0x%08x, SN=%u,  size=%d, kind=%d, refs=0x%x, threadSN=%u
Instance of unprepared class with refs: %s
Instance of unprepared class without refs: %s
Big Trouble with unprepared class instances
hprof_reference.c
FOLLOW REFERENCES RETURNED:
[%d]: flavor=%d, refKind=%d, primType=%d, object_index=0x%x, length=%d, next=0x%x
PROBLEM WITH:
Trouble with fields and heap data
HPROF LIST OF ALL FIELDS:
[%d] %s "%s" "%s"
 (primType=%d(%c)
, got %d(%c)
(ty=OBJ)
 val=[0x%08x,0x%08x] or [0x%08x,0x%08x]
Unprepared class with references: %s
Trouble with unprepared classes
Site
--------------------- Site Table ------------------------
allocated bytes
live bytes
Site 0x%08x: class=0x%08x, trace=0x%08x, Ninst=(%d,%d), Nbytes=(%d,%d), Nlive=(%d,%d), NliveBytes=(%d,%d)
Unknown
Strings
-------------------- String Table ------------------------
0x%08x: String "%s"
HPROF %s table lock
SANITY IN QUESTION: SANITY_ADD_HARE(index,ltable->hare)==(index)
hprof_table.c
SANITY IN QUESTION: (index) < ltable->next_index
SANITY IN QUESTION: new_size > old_size
JVMTI tag value is not 0 and missing TAG_CHECK
hprof_tag.c
--------------------- TLS Table ------------------------
expection pop, nothing on stack
hprof_tls.c
exception pop stack empty
Tls 0x%08x: SN=%u, sample_status=%d, agent=%d, thread=%p, monitor=0x%08x, tracker_status=%d
no frames, method can't be on stack
method return tracked, but stack is empty
Trace
--------------------- Trace Table ------------------------
Trace 0x%08x: SN=%u, threadSN=%u, n_frames=%d, frames=(
0x%08x, 
), traceSN=%u, num_hits=%d, self_cost=(%d,%d), total_cost=(%d,%d), status=0x%08x
Unexpected Exception found beforehand
hprof_tracker.c
Unexpected Exception found afterward
<init>
engaged
nativeNewArray
(Ljava/lang/Object;Ljava/lang/Object;)V
nativeObjectInit
nativeCallSite
(Ljava/lang/Object;II)V
nativeReturnSite
Problems tracking callbacks
Unable to access JNI Version 1.2 (0x%x), is your JDK a 5.0 or newer version? JNIEnv's GetEnv() returned %d
hprof_util.c
Cannot allocate jvmti memory
Cannot deallocate jvmti memory
Cannot allocate malloc memory
Cannot get jvmti version number
Cannot create raw monitor
Cannot enter with raw monitor
Cannot wait with raw monitor
Cannot notify all with raw monitor
Cannot exit with raw monitor
Cannot destroy raw monitor
Cannot set event notification
JNI PushLocalFrame returned non-zero
JNI PopLocalFrame returned wrong object
JNI RegisterNatives returned non-zero
onload
primordial
start
live
dead
unknown
Cannot get object size
Cannot get class status
Cannot get class loader
Cannot get object tag
Cannot set object tag
Cannot get monitor usage info
Cannot get thread owned monitor info
Cannot get system property
Cannot get class signature
Cannot get source file name
Cannot get method class
Cannot check is method native
Cannot get method name
Unable to get potential JVMTI capabilities.
Unable to get necessary JVMTI capabilities.
Cannot set jvmti callbacks
Cannot get thread local storage
Cannot set thread local storage
Cannot get thread state
Cannot get thread info
Cannot get thread group info
Cannot get all loaded class list
java/lang/Runtime
getRuntime
()Ljava/lang/Runtime;
maxMemory
(Ljava/lang/ThreadGroup;Ljava/lang/String;)V
setDaemon
(Z)V
Cannot create agent thread
Cannot get cpu time
Cannot get thread list stack info
Cannot follow references
Cannot force garbage collection
Unable to access JVMTI Version 1 (0x%x), is your JDK a 5.0 or newer version? JNIEnv's GetEnv() returned %d
This hprof native library will not work with this VM's version of JVMTI (%d.%d.%d), it needs JVMTI %d.%d[.%d].
Class signature is: %s
Class not prepared when needing all fields
Cannot get class interface list
Cannot call IsInterface
Class not prepared when needing fields
Cannot get class field list
Cannot get field modifiers
Cannot get field name
Cannot get source line numbers
