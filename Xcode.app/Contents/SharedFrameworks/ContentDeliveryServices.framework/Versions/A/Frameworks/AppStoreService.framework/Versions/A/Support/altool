ITunesConnectFoundationAuthenticationServiceHostname
ITunesConnectFoundationAuthenticationServiceAppIdKey
STDOUT
Failed to redirect stdout (err=%d).
STDERR
Failed to redirect stderr (err=%d).
Failed to load ITunesSoftwareService.
Unable to run altool.
eval-app
eval-info
eval-history
Ignoring option '%@ %@'.
Keeping item '%@' - %d
**hidden item**
--password
:f:p:u:t:s:N:H:K:k:F:B:V:T:S:D:P:vh
%s: Option '%s' requires an argument.
Option '%@' does not have an argument and no flag is specified. This option might be ignored.
%s: Option '%s' has already been specified.
%s: Option '--%s' does not take an argument but one was specified: %s.
Option '%@' takes no argument and no flag is being set. This option might be ignored.
%s: option '--%s' is missing a required argument
%s: option '-%c' is missing a required argument
%s: option '-%c' is unknown: ignored
--%@
%s: option '%s' was already specified with value: '%s'. Ignoring duplicate.
MZITunesProducerServiceClient
ITunesProducerServiceAddress
json
normal
%s: option '--%s' has invalid argument '%s'.
LogTransporterOutput
Verbose logging enabled.
No command was specified.
Only one command may be specified.
Exception caught
Exception caught: %@
file
password
username
type
service-address
validate-app
upload-app
list-apps
list-providers
notarize-app
notarization-info
notarization-history
apiKey
apiIssuer
help
output-format
primary-bundle-id
verbose
asc-provider
version
transport
store-password-in-keychain-item
show-password-in-keychain-item
allowed-platforms
lookup-app
Copyright (c) 2009-2019, Apple Inc. Version %s
Usage: %s --validate-app -f <file> -t <platform> -u <username> {[-p <password>] | --apiKey <api_key> --apiIssuer <issuer_id>}
       %s --upload-app -f <file> -t <platform> -u <username> {[-p <password>] | --apiKey <api_key> --apiIssuer <issuer_id>}
       %s --notarize-app -f <file> --primary-bundle-id <bundle_id> -u <username> {[-p <password>] | --apiKey <api_key> --apiIssuer <issuer_id>} [--asc-provider <provider_shortname>]
       %s --notarization-info <uuid> -u <username> {[-p <password>] | --apiKey <api_key> --apiIssuer <issuer_id>}
       %s --notarization-history <page> -u <username> {[-p <password>] | --apiKey <api_key> --apiIssuer <issuer_id>} [--asc-provider <provider_shortname>]
       %s --list-apps -u <username> {[-p <password>] | --apiKey <api_key> --apiIssuer <issuer_id>}
       %s --list-providers -u <username> [-p <password>]
       %s --store-password-in-keychain-item <name_for_keychain_item> -u <username> -p <password>
Exit codes: 0 success, 1 failure (Upon failure, an error code and message are generally also displayed.)
Authentication: Most commands require authorization.
                There are two methods available: user name with password, and apiKey with apiIssuer.
                -u, --username <username> Username. Required to connect for validation, upload, and notarization.
                -p, --password <password> Password. Required if username specified and apiKey/apiIssuer are not.
                                          If this argument is not supplied on the command line, it will be read from stdin.
                                          Alternatively to entering <password> in plaintext, it may also be specified using a '@keychain:'
                                          or '@env:' prefix followed by a keychain password item name or environment variable name.
                                          Example: '-p @keychain:<name>' uses the password stored in the keychain password item named <name>.
                                                                         You can create and update keychain items with the
                                                                         --store-password-in-keychain-item command. Note also that the
                                                                         --username can be inferred from the keychain item so --username
                                                                         can be omitted when using a '-p @keychain:' option.
                                          Example: '-p @env:<variable>'  uses the value in the environment variable named <variable>
                --apiKey <api_key>        apiKey. Required for JWT authentication while using validation, upload, and notarization.
                                          This option will search the following directories in sequence for a private key file
                                          with the name of 'AuthKey_<api_key>.p8':  './private_keys', '~/private_keys', '~/.private_keys',
                                          and '~/.appstoreconnect/private_keys'.
                --apiIssuer <issuer_id>   Issuer ID. Required if --apiKey is specified.
 -f, --file <file>                   <file> specifies the path to the file to process.
 -t, --type {osx | ios | appletvos}  Specify the platform of the file.
     --primary-bundle-id <bundle_id> Used with --notarize-app to uniquely identify a package.
     --asc-provider <provider_shortname> Required with --notarize-app and --notarization-history when a user account is associated with multiple
                                         providers. You can use the --list-providers command to retrieve the providers associated with
                                         your account.
 -v, --validate-app                  Validates an app archive for the App Store. Authentication and -f are required.
     --upload-app                    Uploads the given app archive to the App Store. Authentication and -f are required.
     --list-apps                     Display all apps associated with your account(s).
     --list-providers                Displays a list of the providers associated with your account along with short name and team id.
                                     This command is useful to determine what short name to use with the --asc-provider option.
     --notarize-app                  Uploads the given app package, dmg or zip file for notarization. Authentication, -f,
                                     and --primary-bundle-id are required. --asc-provider is required for an account associated with multiple providers.
                                     If successful, the UUID associated with the upload is returned.
     --notarization-info <uuid>      Returns the status and log file URL of a package previously uploaded for notarization with the specified <uuid>.
                                     Authentication is required. The log file can be retrieved with 'curl <log_file_url>'.
     --notarization-history <page>   Returns a list of all uploads submitted for notarization. <page> specifies a range of entries where 0
                                     returns the most recent number of entries. A new page value will be returned which can be used as the
                                     <page> value to the next use of --notarization-history and so forth until no more items are returned.
                                     Authentication is required. --asc-provider is required for an account associated with multiple providers.
     --store-password-in-keychain-item <name_for_keychain_item> -u <username> -p <password>
                                     Stores the password <password> in the keychain item named <name_for_keychain_item> associated with the account <username>.
                                     If an item with that name and account already exists in the keychain, its password will be updated. Otherwise a new item
                                     is created with that name. You can use this keychain item with the -p option to mask your password with other commands.
                                     Example: %s --store-password-in-keychain-item MY_SECRET -u jappleseed@apple.com -p "MyP@ssw0rd!@78"
                                              %s --notarize-app -u jappleseed@apple.com -p @keychain:MY_SECRET [...]
     --transport <transport(s)>      Allows you to specify the protocol used when using --upload-app or --notarize-app. You should only use this option when
                                     instructed by Apple. <transport(s)> can be one or more of the following separated by commas: Signiant, Aspera, DAV, HTTPS.
     --output-format {xml | json | normal} Specifies how the output is formatted. 'xml' and 'json' display the output in a structured format; 'normal' displays in
                                           an unstructured format (default).
     --verbose                       Enable logging output.
 -h, --help                          Display this output.
CFBundleShortVersionString
CFBundleVersion
%@.%@
Aspera
Signiant
HTTP
HTTPS
ITunesTransport
DefaultTransportThrottle
100000
@env:
@keychain:
Using old keychain item '%@'.
No such environment variable for key: '%@'
Failed to get the password for the keychain item '%@'.
You must specify the keychain item's name.
The keychain item '%@' was not found.
The keychain returned error code: %@.
Creating the xml property list failed: %s
Creating json from dictionary failed: %s
code %ld (%@ %@)
code %ld (%@)
-itc_provider
--asc-provider
product-metadata
dev-tools-info
$PATH
tool-version
ITunesPasswords
Failed to get notarization info.
You must specify a uuid
No errors getting notarization info.
RequestUUID
Status
Date
LogFileURL
Status Code
Status Message
%@: %@
Authentication failed.
You must specify authentication credentials (username/password or apiKey/apiIssuer).
Unable to get authorization for username '%@' and password provided.
You must specify a password for the username '%@'.
Failed to authenticate with errors: %@
Failed to authenticate for session: %@
You must specify both '--%s' and '--%s'.
You must specify a username.
%s's password: 
Unable to read password from stdin.
success-message
Creating the xml property list failed: %s
Creating the json from dictionary failed: %s
Unable to get notarization history.
Notarization History - page %lld
No items found.
Next page value: %lld
Next page value: %lld
items
first-page
last-page
next-page
No errors getting notarization history.
Failed to get notarization history.
itc_provider
Unable to upload your app for notarization.
You must specify '-%c'.
The file '%@' does not exist.
You must specify '--%s'.
Upload succeeded but did not receive a RequestUUID.
No errors uploading '%@'.
notarization-upload
No errors uploading '%@'.
RequestUUID = %@
Unable to notarize app.
Unable to validate archive.
--%s requires the -%c option.
No errors validating archive at '%@'.
Unable to validate archive '%@'.
Unable to upload archive.
Unable to instantiate ITunesSoftwareService
Failed to upload '%@': Unable to instantiate ITunesSoftwareService
No errors uploading '%@'
Error uploading '%@'.
Error uploading. No file was specified.
Unable to show allowed platforms.
Retrieved allowed platforms
Failed to retrieve allowed platforms.
Unable to list all applications.
Retrieved all applications
applications
Retrieved 1 application.
Retrieved %lu applications.
%s: %s
Failed to retrieve all applications.
Unable to list providers.
Retrieved providers info
providers
Failed to retrieve providers info.
Failed to store password in the keychain.
You must specify a name for the keychain item.
Use the -p option to store the password in the keychain item '%@'.
Use the -u option to specify an account for the keychain item '%@'.
Updated the password in the keychain item '%@'.
Failed to update the password in the keychain item '%@'.
The keychain item '%@' already has the same password. No changes were made.
Stored the password in the keychain item '%@'.
standardUserDefaults
stringWithFormat:
stringByExpandingTildeInPath
cStringUsingEncoding:
service
hasPrefix:
length
isEqualToString:
init
stringWithUTF8String:
containsObject:
setObject:forKeyedSubscript:
addObject:
valueForKey:
dictionaryWithObjects:forKeys:count:
objectForKeyedSubscript:
class
numberWithBool:
registerDefaults:
stringForKey:
arrayWithObjects:count:
errorWithDomain:code:userInfo:
defaultManager
cancelAllWork
clearCompletedWork
processInfo
processName
UTF8String
mainBundle
infoDictionary
objectForKey:
componentsSeparatedByString:
count
initWithCapacity:
countByEnumeratingWithState:objects:count:
trim
caseInsensitiveCompare:
componentsJoinedByString:
substringFromIndex:
environment
mutableCopy
initWithData:encoding:
numberWithInt:
defaultKeychain
genericPasswordForServiceName:accountName:error:
context
addError:
describeAsPlist
dictionaryWithDictionary:
dataWithPropertyList:format:options:error:
description
serializer
serializeToJSON:error:
code
localizedFailureReason
localizedDescription
isKindOfClass:
userInfo
allKeys
rangeOfString:
stringByReplacingOccurrencesOfString:withString:
domain
copy
removeObjectForKey:
registerDefaultsOverAllDomains:
arrayForKey:
developerIDPlusInfoForPackageWithUUID:authentication:
errors
logFileURL
status
developerIDPlusStringForStatus:
initWithString:
statusCode
statusMessage
date
moreInfo
addEntriesFromDictionary:
appendFormat:
sortedArrayUsingSelector:
appendString:
authenticationContextForDefaultHostnameAndAppIdKeyWithUsername:password:
hasError
contextWithApiKey:issuerID:delegate:
authenticateForSessionWithAuthentication:
longLongValue
developerIDPlusHistoryWithAuthentication:providerShortname:page:
page
items
addObjectsFromArray:
tableFromArrayOfDictionaries:includeHeader:
numberWithLongLong:
requestUUID
fileExistsAtPath:isDirectory:
uploadForDeveloperIDPlusAtPath:primaryBundleID:authentication:providerShortname:delegate:userInfo:
validateApplicationArchiveAtPath:type:authentication:
applicationTypeWithString:
uploadApplicationArchiveAtPath:type:authentication:delegate:userInfo:
allowedPlatformsWithAuthentication:forceServerCall:error:
objectAtIndexedSubscript:
allApplicationsWithAuthentication:
applications
fullAttributes
providersInfoWithAuthentication:
providersInfo
allValues
dataUsingEncoding:
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleIdentifier</key>
<string>com.apple.itunes.altool</string>
<key>CFBundleVersion</key>
<string>1182</string>
<key>CFBundleShortVersionString</key>
<string>4.01</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2019 Apple Inc. All rights reserved.</string>
</dict>
</plist>
