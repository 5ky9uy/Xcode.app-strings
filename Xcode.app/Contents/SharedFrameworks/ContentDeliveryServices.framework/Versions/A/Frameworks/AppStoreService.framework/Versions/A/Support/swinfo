doesNotRecognizeSelector:
MZREPLACEMENT_doesNotRecognizeSelector:
raise:format:
configureLoggingPreventionMethods
standardUserDefaults
cStringUsingEncoding:
stringForKey:
boolForKey:
initWithDirectoryPath:
length
data
writeToFile:atomically:
stringWithFormat:
registerDefaultsOverRegistrationDomainRespectingCommandLineOverrides:
systemVersion
containsObject:
stringWithUTF8String:
dictionaryWithObjects:forKeys:count:
registerDefaults:
addObject:
lowercaseString
isEqualToString:
logFilePath
defaultManager
fileExistsAtPath:
stringByStandardizingPath
dataWithContentsOfFile:
propertyListWithData:options:format:error:
valueForKey:
fullPathToFile:resolveSymlinks:
context
systemVersionAsString
errorWithError:
addError:
describeAsPlist
dataWithPropertyList:format:options:error:
initWithData:encoding:
initWithPath:
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
mainBundle
localizedStringForKey:value:table:
localizedDescription
dictionary
setObject:forKey:
setKeepTemporaryDirectoryContents:
keepTemporaryDirectoryContents
describeArchiveWithErrors:skipFilesDescription:
extractMetadataInfoFromDescription:
objectForKeyedSubscript:
integerValue
extractionPath
describeWithErrors:appType:skipFilesDescription:
mutableCopy
setObject:forKeyedSubscript:
copy
count
initWithCapacity:
countByEnumeratingWithState:objects:count:
componentsSeparatedByString:
defaultUtilities
gzipDeflate:error:
encodedBase64ValueWithData:newlineInterval:error:
bytes
description
extractTimingInfoFromDescription:
stringByAbbreviatingWithTildeInPath
uuid
stringByAppendingPathComponent:
removeItemAtPath:error:
objectForKey:
initWithInputDirectory:
setAppType:
setKeepTempFiles:
itemWithWorker:
arrayWithObjects:count:
seriesWithWorkItems:
outputFilePath
hasErrors
cleanupOutputFile
submitWork:
dateWithTimeIntervalSinceNow:
currentRunLoop
runUntilDate:
sleepUntilDate:
status
md5ForData:error:
appendString:
appendFormat:
describeVersionAsPlist
reason
dictionaryWithObjectsAndKeys:
callStackSymbols
errorWithDomain:code:userInfo:
processInfo
processName
UTF8String
infoDictionary
numberWithDouble:
init
setLogFile:
dealloc
doubleForKey:
date
timeIntervalSinceReferenceDate
regularExpressionWithPattern:options:error:
contentsOfDirectoryAtPath:error:
firstMatchInString:options:range:
range
attributesOfItemAtPath:error:
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
URLsForDirectory:inDomains:
lastObject
URLByAppendingPathComponent:
path
cleanupOldLogs:
dateFormatter
stringFromDate:
stringByReplacingOccurrencesOfString:withString:
dataUsingEncoding:
fileHandleForUpdatingAtPath:
seekToEndOfFile
closeFile
currentThread
name
setName:
logFile
appName
initWithFormat:
writeData:
synchronizeFile
initialize
LogMessage:level:
logDirectoryPath
setLogDirectoryPath:
setLogFilePath:
setAppName:
.cxx_destruct
_logFile
_logDirectoryPath
_logFilePath
_appName
T@"NSString",&,N,V_logDirectoryPath
T@"NSString",&,N,V_logFilePath
T@"NSString",&,N,V_appName
T@"NSFileHandle",&,N
-[%@ %@]: unrecognized selector sent to instance 0x%lx
STDOUT
Failed to redirect stdout (err=%d).
STDERR
Failed to redirect stderr (err=%d).
-log-directory
-log
Starting swinfo...
The output file '%@' could not be created.
ITunesConnectDebugLoggingEnabled
outputSummaryInfo
output-spi
allow-stderr
encoding
plistFormat
platform
file-name
metadataInfo
Option '%@' has already been specified.
prettyprint
binary
--plistFormat argument invalid. Using xml output.
swinfo ending with result %d.
version
help
Wrote swinfo log file to '%s'.
userdefaults
-extra-args
-allow-stderr
Invalid operating system version %@. Validation requires 10.7 or higher.
temporary
temporaryDirectory
platform-id
appletvos
tvos
macos
You must specify --platform for this directory.
The --platform '%@' does not exist.
The file '%@' does not exist.
product-metadata
Encountered an error converting NSDictionary to XML: %@
product-errors
gzip
base64
An error occured while gzip compressing the xml data: %@
gzipped %u bytes to %ld bytes.
An error occurred base64 encoding the xml data: %@
base64 encoded %u bytes to %ld bytes.
package-filename
%@.plist
ITunesSoftwareService_AllowedPlatforms
(an error occurred: %@)
Content-Encoding: gzip
Content-Length: %d
Content-Type: application/binary
Content-Type: application/xml; charset=UTF-8
Content-Transfer-Encoding: BASE64
x-file-path: %@
x-checksum-md5: %@
x-timing-info-file: %@
x-uncompressed-content-length: %u
spi-output-file: %@
back-trace
dataWithPropertyList generated an error: %@
CFBundleShortVersionString
Copyright (c) 2012-2021, Apple Inc. Version %s.%s
Usage: %s [-f <path_to_package>] [-o <output_file_path>] [-temporary <path_to_directory>]
 -f <path_to_package>             Extract the information from the package in xml format.
                                  path_to_package is the path to a .ipa or .pkg file.
 -o <output_file_path>            Write the output to the specified file.
 -temporary <path_to_directory>   Temporary directory to store working items.
 -stderr <path_to_file>           Output stderr to a file at <path_to_file>.
 -prettyprint [true | false]      If true outputs the xml in an easy-to-read format.
                                  If false (the default) outputs the xml without extraneous whitespace.
 --encoding gzip/base64           If specified the output is compressed and encoded with base64 encoding.
 --outputSummaryInfo              Indicates that information about the file written should be printed.
                                  (Requires the -o option.
 --plistFormat [xml | binary]     Output file format. xml is the default.
 --log-directory <file_path>      Write log information to the path specified. Implies '--log true'.
 --log [true | false]             If true writes a debug log file in ~/Library/swinfo. The default is false.
 --allow-stderr [true | false]    If true allows stderr output. Default is false.
Environment Variables:
  STDOUT <file_path>              Redirect stdout to the file at <file_path>.
  STDERR <file_path>              Redirect stderr to the file at <file_path>.
 -h, --help                       Display this output.
 -v, --version                    Display the version in xml format.
LogRetentionSeconds
swinfo-.*\.log
v8@?0
en_US_POSIX
yyyy-MM-dd HH:mm:ss.SSS
Logs
Failed to create directory '%@': %@
swinfo-%@.log
%08ld
%@ %@[%@] *** Warning: %@
%@ %@[%@] *** Error: %@
%@ %@[%@] *** Critical: %@
%@ %@[%@] %@
Exception caught trying to write to log file: %@
MZPrivateAPIOverrides
SwinfoLogger
MZLogger
v24@0:8:16
v16@0:8
@16@0:8
v28@0:8@16i24
v28@0:8@"NSString"16i24
@24@0:8@16
v24@0:8@16
@"NSFileHandle"
@"NSString"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleIdentifier</key>
<string>com.apple.itunes.swinfo</string>
<key>CFBundleShortVersionString</key>
<string>1.20</string>
<key>CFBundleVersion</key>
<string>889</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2012-2020 Apple Inc. All rights reserved.</string>
</dict>
</plist>
currentRunLoop
URLByAppendingPathComponent:
describeWithErrors:appType:skipFilesDescription:
countByEnumeratingWithState:objects:count:
doubleForKey:
stringWithUTF8String:
arrayWithObjects:count:
fullPathToFile:resolveSymlinks:
timeIntervalSinceReferenceDate
seekToEndOfFile
initWithData:encoding:
setObject:forKeyedSubscript:
numberWithDouble:
registerDefaults:
lowercaseString
callStackSymbols
integerValue
firstMatchInString:options:range:
extractTimingInfoFromDescription:
stringByAppendingPathComponent:
processInfo
UTF8String
dateWithTimeIntervalSinceNow:
appendString:
reason
setKeepTempFiles:
count
isEqualToString:
defaultManager
containsObject:
URLsForDirectory:inDomains:
processName
extractionPath
addError:
localeWithLocaleIdentifier:
dataUsingEncoding:
seriesWithWorkItems:
encodedBase64ValueWithData:newlineInterval:error:
registerDefaultsOverRegistrationDomainRespectingCommandLineOverrides:
objectForKey:
uuid
mainBundle
stringByReplacingOccurrencesOfString:withString:
dataWithContentsOfFile:
gzipDeflate:error:
description
localizedDescription
sleepUntilDate:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
propertyListWithData:options:format:error:
submitWork:
itemWithWorker:
addObject:
stringByStandardizingPath
attributesOfItemAtPath:error:
defaultUtilities
setLocale:
fileExistsAtPath:
standardUserDefaults
dataWithPropertyList:format:options:error:
errorWithDomain:code:userInfo:
objectForKeyedSubscript:
valueForKey:
cleanupOutputFile
contentsOfDirectoryAtPath:error:
md5ForData:error:
raise:format:
boolForKey:
localizedStringForKey:value:table:
regularExpressionWithPattern:options:error:
dictionary
hasErrors
initWithFormat:
setKeepTemporaryDirectoryContents:
context
outputFilePath
setAppType:
stringForKey:
describeArchiveWithErrors:skipFilesDescription:
synchronizeFile
keepTemporaryDirectoryContents
errorWithError:
initWithInputDirectory:
status
fileExistsAtPath:isDirectory:
removeItemAtPath:error:
mutableCopy
date
systemVersion
dictionaryWithObjects:forKeys:count:
bytes
closeFile
infoDictionary
range
writeData:
describeAsPlist
copy
appendFormat:
setName:
setDateFormat:
stringFromDate:
currentThread
path
componentsSeparatedByString:
extractMetadataInfoFromDescription:
writeToFile:atomically:
lastObject
stringByAbbreviatingWithTildeInPath
initWithPath:
fileHandleForUpdatingAtPath:
runUntilDate:
systemVersionAsString
data
cStringUsingEncoding:
initWithCapacity:
name
setObject:forKey:
describeVersionAsPlist
stringWithFormat:
length
dictionaryWithObjectsAndKeys:
doesNotRecognizeSelector:
MZREPLACEMENT_doesNotRecognizeSelector:
configureLoggingPreventionMethods
init
dealloc
initialize
dateFormatter
LogMessage:level:
initWithDirectoryPath:
cleanupOldLogs:
logFilePath
logFile
setLogFile:
logDirectoryPath
setLogDirectoryPath:
setLogFilePath:
appName
setAppName:
.cxx_destruct
_logFile
_logDirectoryPath
_logFilePath
_appName
T@"NSString",&,N,V_logDirectoryPath
T@"NSString",&,N,V_logFilePath
T@"NSString",&,N,V_appName
T@"NSFileHandle",&,N
-[%@ %@]: unrecognized selector sent to instance 0x%lx
STDOUT
Failed to redirect stdout (err=%d).
STDERR
Failed to redirect stderr (err=%d).
-log-directory
-log
Starting swinfo...
The output file '%@' could not be created.
ITunesConnectDebugLoggingEnabled
outputSummaryInfo
output-spi
allow-stderr
encoding
plistFormat
platform
file-name
metadataInfo
Option '%@' has already been specified.
prettyprint
binary
--plistFormat argument invalid. Using xml output.
swinfo ending with result %d.
version
help
Wrote swinfo log file to '%s'.
userdefaults
-extra-args
-allow-stderr
Invalid operating system version %@. Validation requires 10.7 or higher.
temporary
temporaryDirectory
platform-id
appletvos
tvos
macos
You must specify --platform for this directory.
The --platform '%@' does not exist.
The file '%@' does not exist.
product-metadata
Encountered an error converting NSDictionary to XML: %@
product-errors
gzip
base64
An error occured while gzip compressing the xml data: %@
gzipped %u bytes to %ld bytes.
An error occurred base64 encoding the xml data: %@
base64 encoded %u bytes to %ld bytes.
package-filename
%@.plist
ITunesSoftwareService_AllowedPlatforms
(an error occurred: %@)
Content-Encoding: gzip
Content-Length: %d
Content-Type: application/binary
Content-Type: application/xml; charset=UTF-8
Content-Transfer-Encoding: BASE64
x-file-path: %@
x-checksum-md5: %@
x-timing-info-file: %@
x-uncompressed-content-length: %u
spi-output-file: %@
back-trace
dataWithPropertyList generated an error: %@
CFBundleShortVersionString
Copyright (c) 2012-2021, Apple Inc. Version %s.%s
Usage: %s [-f <path_to_package>] [-o <output_file_path>] [-temporary <path_to_directory>]
 -f <path_to_package>             Extract the information from the package in xml format.
                                  path_to_package is the path to a .ipa or .pkg file.
 -o <output_file_path>            Write the output to the specified file.
 -temporary <path_to_directory>   Temporary directory to store working items.
 -stderr <path_to_file>           Output stderr to a file at <path_to_file>.
 -prettyprint [true | false]      If true outputs the xml in an easy-to-read format.
                                  If false (the default) outputs the xml without extraneous whitespace.
 --encoding gzip/base64           If specified the output is compressed and encoded with base64 encoding.
 --outputSummaryInfo              Indicates that information about the file written should be printed.
                                  (Requires the -o option.
 --plistFormat [xml | binary]     Output file format. xml is the default.
 --log-directory <file_path>      Write log information to the path specified. Implies '--log true'.
 --log [true | false]             If true writes a debug log file in ~/Library/swinfo. The default is false.
 --allow-stderr [true | false]    If true allows stderr output. Default is false.
Environment Variables:
  STDOUT <file_path>              Redirect stdout to the file at <file_path>.
  STDERR <file_path>              Redirect stderr to the file at <file_path>.
 -h, --help                       Display this output.
 -v, --version                    Display the version in xml format.
LogRetentionSeconds
swinfo-.*\.log
v8@?0
en_US_POSIX
yyyy-MM-dd HH:mm:ss.SSS
Logs
Failed to create directory '%@': %@
swinfo-%@.log
%08ld
%@ %@[%@] *** Warning: %@
%@ %@[%@] *** Error: %@
%@ %@[%@] *** Critical: %@
%@ %@[%@] %@
Exception caught trying to write to log file: %@
MZPrivateAPIOverrides
SwinfoLogger
MZLogger
v24@0:8:16
v16@0:8
@16@0:8
v28@0:8@16i24
v28@0:8@"NSString"16i24
@24@0:8@16
v24@0:8@16
@"NSFileHandle"
@"NSString"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleIdentifier</key>
<string>com.apple.itunes.swinfo</string>
<key>CFBundleShortVersionString</key>
<string>1.20</string>
<key>CFBundleVersion</key>
<string>889</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2012-2020 Apple Inc. All rights reserved.</string>
</dict>
</plist>
