lockGraphicsAndWaitForThreads:
callStackReturnAddresses
alloc
_initWithPbuf:type:backtrace:error:
_initWithType:backtrace:error:
messageWithKind:objectPayload:
release
sendMessage:
graphicsLockWaitQueue
unlockGraphics
defaultFbufStream
platformFbufStream
traceMode
stringWithFormat:
handleFrameBoundaryCommon
graphicsSemaphore
attributes
objectForKey:
unsignedIntValue
init
initWithUnsignedLongLong:
containsObject:
addObject:
numberWithUnsignedLongLong:
setObject:forKey:
kind
initWithKind:attributes:objectPayload:
sendMessage:inReplyTo:
dictionary
numberWithUnsignedInt:
invalidateSavePointerMap:
unsignedLongLongValue
initWithKind:attributes:payload:
overrideFlags
setOverrideFlags:
numberWithBool:
retain
autorelease
globalFrameCounterAtomicIncrement
capturing
captureInfo
messageWithKind:plistPayload:
initWithObjectsAndKeys:
dictionaryWithObjectsAndKeys:
numberWithUnsignedLong:
stringWithUTF8String:
setTraceMode:
_copyContextsInfo
attributeForKey:
boolForKey:
setIncludeBacktraceInPbufs:
setQueryDriverEventsOnGraphicsCommands:
uint64ForKey:
setPreviousTraceMode:
uint32ForKey:
objectPayload
countByEnumeratingWithState:objects:count:
breakBefore
breakAfter
noExec
fenum
boolValue
processMessage:
description
UTF8String
_appendLinkTimeLibrary:toVersionsDictionary:
sendContextInfoUpdate
_populateQueueAndThreadLabelMaps
_waitForGraphicsThreads
_appendToAllCaptureDataSentMessagePayload:
_appendLinkTimeLibrariesToVersionsDictionary:
_canTriggerCaptureOnNextGraphicsCommand
_handleTurnOnCapture
_handleTurnOffCapture
_checkGLErrors
waitOnGraphicsSemaphoreAssertions
triggerCaptureOnNextGraphicsCommand
capturingCompareAndSwap
handleCaptureModeTransition:
includeBacktraceInPbufs
queryDriverEventsOnGraphicsCommands
initWithTransport:
connect
boolResult
error
rendererInfoWithGLIContext:dispatch:api:
initWithObjects:
class
isKindOfClass:
globalSyncQueue
messageWithKind:payload:
send:inReplyTo:error:
symbolicator
didTryToMakeSymbolicator
extensions
initWithIdentifier:sharegroupIdentifier:renderers:currentRendererIndex:api:
stringWithCString:encoding:
initWithBytesNoCopy:length:freeWhenDone:
NSt3__117bad_function_callE
St9exception
St9bad_alloc
Ceui
CUulbuiui
Cuiieiului
Cuiieubiului
Cieiului
Ceiului
Ciului
Ceului
unsupported vertex array parameter configuration
unknown element indices type: 0x%04X
GetStringToEncode: Unable to allocate %d bytes
unknown texture target 0x%04X
unsupported or unknown buffer target: 0x%04X
Ciuiuiuiuiuiui
Ci%c
unknown shader type: 0x%04x
typename T::iterator find_info(ContextInfo *, T &, GLuint, bool) [T = std::__1::unordered_map<unsigned int, std::__1::shared_ptr<ShaderInfo>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::shared_ptr<ShaderInfo> > > >]
object != 0
typename T::iterator find_info(ContextInfo *, T &, GLuint, bool) [T = std::__1::unordered_map<unsigned int, std::__1::shared_ptr<ProgramInfo>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::shared_ptr<ProgramInfo> > > >]
runtime dispatch table size does not match static dispatch table size
v24@?0^{ContextInfo=^{_CGLContextObject}^{CGLShareGroupRec}^{__GLIContextRec}^{__GLIFunctionDispatchRec}^{__GLIFunctionDispatchRec}^{SharegroupInfo}^{__CFArray}I^{__CFSet}{vector<unsigned int, std::__1::allocator<unsigned int> >=^I^I{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> >=^I}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}[2{Fbuf=(?=^v^{?})^vI}]I{state_cache={va_cache=[32{va_state=^vIIIIIBBB}]{va_state=^vIIIIIBBB}{va_state=^vIIIIIBBB}{va_state=^vIIIIIBBB}[16{va_state=^vIIIIIBBB}]{va_state=^vIIIIIBBB}{va_state=^vIIIIIBBB}{va_state=^vIIIIIBBB}{va_state=^vIIIIIBBB}{va_state=^vIIIIIBBB}{va_state=^vIIIIIBBB}{va_state=^vIIIIIBBB}}IIIIIIIIIIII[128{tu_binding_cache=IIIIIIIIII}][4I]I[4I]C}II{vector<unsigned int, std::__1::allocator<unsigned int> >=^I^I{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> >=^I}}{?=IIIII}Iii@{unique_ptr<GPUTools::ResourceUpdater, std::__1::default_delete<GPUTools::ResourceUpdater> >={__compressed_pair<GPUTools::ResourceUpdater *, std::__1::default_delete<GPUTools::ResourceUpdater> >=^{ResourceUpdater}}}{unordered_map<dispatch_queue_s *, std::__1::basic_string<char>, std::__1::hash<dispatch_queue_s *>, std::__1::equal_to<dispatch_queue_s *>, std::__1::allocator<std::__1::pair<dispatch_queue_s *const, std::__1::basic_string<char> > > >={__hash_table<std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> >, std::__1::__unordered_map_hasher<dispatch_queue_s *, std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> >, std::__1::hash<dispatch_queue_s *>, true>, std::__1::__unordered_map_equal<dispatch_queue_s *, std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> >, std::__1::equal_to<dispatch_queue_s *>, true>, std::__1::allocator<std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<dispatch_queue_s *, std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> >, std::__1::hash<dispatch_queue_s *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<dispatch_queue_s *, std::__1::__hash_value_type<dispatch_queue_s *, std::__1::basic_string<char> >, std::__1::equal_to<dispatch_queue_s *>, true> >=f}}}{unordered_map<unsigned long long, std::__1::basic_string<char>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::basic_string<char> > > >={__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> >, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::basic_string<char> >, std::__1::equal_to<unsigned long long>, true> >=f}}}{unordered_map<unsigned int, ActiveTransformFeedbackInfo, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, ActiveTransformFeedbackInfo> > >={__hash_table<std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo>, std::__1::hash<unsigned int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, ActiveTransformFeedbackInfo>, std::__1::equal_to<unsigned int>, true> >=f}}}{unordered_map<unsigned int, VertexAttribInfo, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, VertexAttribInfo> > >={__hash_table<std::__1::__hash_value_type<unsigned int, VertexAttribInfo>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, VertexAttribInfo>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, VertexAttribInfo>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, VertexAttribInfo> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, VertexAttribInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, VertexAttribInfo>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, VertexAttribInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, VertexAttribInfo>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, VertexAttribInfo>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, VertexAttribInfo>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, VertexAttribInfo>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, VertexAttribInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, VertexAttribInfo>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, VertexAttribInfo>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, VertexAttribInfo>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, VertexAttribInfo>, std::__1::hash<unsigned int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, VertexAttribInfo>, std::__1::equal_to<unsigned int>, true> >=f}}}{vector<std::__1::pair<unsigned int, unsigned int>, std::__1::allocator<std::__1::pair<unsigned int, unsigned int> > >=^{pair<unsigned int, unsigned int>}^{pair<unsigned int, unsigned int>}{__compressed_pair<std::__1::pair<unsigned int, unsigned int> *, std::__1::allocator<std::__1::pair<unsigned int, unsigned int> > >=^{pair<unsigned int, unsigned int>}}}i{vector<std::__1::function<void (ContextInfo *)>, std::__1::allocator<std::__1::function<void (ContextInfo *)> > >=^{function<void (ContextInfo *)>}^{function<void (ContextInfo *)>}{__compressed_pair<std::__1::function<void (ContextInfo *)> *, std::__1::allocator<std::__1::function<void (ContextInfo *)> > >=^{function<void (ContextInfo *)>}}}QQQQQ[7{GLDrawCommandStatistics=QQQQ}][7{GLDrawCommandStatistics=QQQQ}][7{GLDrawCommandStatistics=QQQQ}][7{GLDrawCommandStatistics=QQQQ}]Qi[41c][64c][64c]BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB}8^B16
invalid context identifier: %llu
unknown trace mode: %d
v16@?0^{Stream=^{VMBuffer}(?=^v^{?})^vQ^{__CFString}@?@?iB}8
%@-%@-%p
%@-%p
resource-stream
Unsupported resource type: %u
unsupported resource type: %u
unknown resource type: %u
DYResourceType ValidateIncomingResource(uint32_t)
unsafeResourceType > 0 && unsafeResourceType < kDYMaxResourceTypes
/System/Library/Frameworks/SpriteKit.framework/SpriteKit
SKEnableCollectingPerformanceStatistics
SKGetPerformanceStatistics
/System/Library/Frameworks/SceneKit.framework/SceneKit
SCNEnableCollectingPerformanceStatistics
SCNGetPerformanceStatistics
frame index
frame duration
context
cpu idle time
total GL time
total platform time
total GL command
Points
Lines
Line Loop
Line Strip
Triangles
Triangle Strip
Triangle Fan
commands num
vertices num
primitives num
instances num
index
array
index instanced
array instanced
GL draw command statistics
user time
system time
vm statistics
vm page size
timestamp
com.apple.GPUTools.event.analyze-frame
com.apple.GL.event.frameboundary.end
com.apple.GL.event.createcontext
com.apple.GL.event.createdrawable
GL_ARB_vertex_blend
GL_APPLE_vertex_point_size
com.apple.GPUToolsCore
failed to get GPUToolsCore bundle
failed to get GPUToolsCore main executable URL
failed to get GPUToolsCore main executable path
failed to dlopen GPUToolsCore: %s
buffer_name overflow for %s !
failed to get symbol address for %s: %s
failed to convert buffer name constant to C string for %s
capture trace mode cannot be set directly; create and start a capture session
-[DYGLGuestAppClient processMessage:]
[hardwareCountersConfiguration objectForKey:kDYProfilingHardwareCountersConfigurationTypeKey] != nil
contexts info
OpenGL
OpenGLES
unsupported or unknown texture target: 0x%04X
Ciui
unsupported resource type: %d
GL_APPLE_fence
GL_ARB_fragment_program
GL_ARB_vertex_program
void ContextHarvester::harvestLegacyARBPrograms()
_arbProgramObjects.valid()
void ContextHarvester::harvestFenceObjects()
_fenceObjects.valid()
void ContextHarvester::harvestGLSLProgramPipeline(GLuint)
pipeline != 0
Ci@1ui
Cuiuiui
Cuiui
CiuiiSi
void ContextHarvester::harvestGLSLProgramPipelines()
_programPipelineObjects.valid()
CuluicS
v24@?0r^{ProgramActiveObject=*QiiIiIIiiiiCC}8^B16
CuiuicS
Cuii@%uSe
Cuiei
[%d]
CulcS
V<i>
unknown or unsupported uniform component type: %s (%d)
CV<i>i
CiuiuiiSuiui
CuiS
V<ui>
CuiV<ui>ui
v24@?0r^{ProgramUniformBlock=*iiiIi^iII}8^B16
v24@?0r^{ProgramUniform=*QiiIiIIiiiiCCI}8^B16
Culi@1U<cb>t
CiuiiU<cb>ii
CiuiiSii
Culul
Ciuieuiui
CiuiiU<cb>iieui
CiuiiSiieui
CeuiicS
CiuiiieS
CiuiuiieS
v24@?0r^{ProgramTransformFeedbackVarying=*iIiI}8^B16
void ContextHarvester::harvestGLSLPrograms_LinkedStatePass()
_programObjects.valid()
void ContextHarvester::harvestGLSLPrograms_CurrentStatePass()
void ContextHarvester::harvestGLSLShaders()
_shaderObjects.valid()
void ContextHarvester::harvestGLSLShaderLabels()
void ContextHarvester::encodeGLSLShaderDeletes()
Ceuiuill
Ceuiui
Cuiieit
Cuiieubit
Cieit
Ceit
unsupported vertex array parameter configuration: has_size=%d, has_type=%d, has_stride=%d
void ContextHarvester::harvestVertexArrayObjects()
_vertexArrayObjects.valid()
void ContextHarvester::harvestBufferObject(GLenum, GLuint, intptr_t, intptr_t, bool)
target != 0u
offset >= 0l
size >= 0l
objectID != 0
Cellt
Celte
mapPointer
CellU
CelUe
Celle
void ContextHarvester::harvestBufferObjects()
_bufferObjects.valid()
void ContextHarvester::harvestRenderbufferObject(GLuint, bool)
name != 0
Ceieii
Ceeii
Cieieiii
void ContextHarvester::harvestRenderbufferImage(GLuint, GPUTools::GL::RenderbufferInfo *)
renderbuffer != 0
void ContextHarvester::harvestRenderbuffers()
_renderbufferObjects.valid()
unknown texture target: %s
unknown framebuffer attachment type: %s
Ceeuii
Ceeuiii
Ceeeuii
Ceeeui
Ci@%de
void ContextHarvester::harvestFramebuffers()
_framebufferObjects.valid()
void ContextHarvester::harvestQueryObject(GLenum, GLuint)
void ContextHarvester::harvestQueryObjects()
_queryObjects.valid()
Ceiei
Ceieiii
unknown texture target dimensions: target=%s, dimensions=%d
Cietee
GL_APPLE_texture_range
GL_OES_draw_texture
iiii
iiiiii
void ContextHarvester::harvestTextures(bool)
_textureObjects.valid()
void ContextHarvester::harvestSampler(GLuint)
void ContextHarvester::harvestSamplers()
_samplerObjects.valid()
unknown or unsupported sync object type: %s (0x%04x)
void ContextHarvester::harvestSyncObjects()
_syncObjects.valid()
Ceuii
void ContextHarvester::harvestXfbObjects()
_xfbObjects.valid()
GL_EXT_debug_marker
Cuiffff
unknown generic vertex attrib type: 0x%04X
Ceeiui
Ceeee
Ceiui
Ceee
GL_OES_blend_equation_separate
GL_OES_blend_subtract
GL_OES_blend_func_separate
Cuiubububub
GL_EXT_texture_lod_bias
GL_APPLE_vertex_array_range
GL_EXT_stencil_two_side
CSuwuw
VMBuffer::resize failed: size=%lu
unknown state buffer core type: 0x%04X
void GPUTools::VMBuffer::set_alignment(size_t)
alignment < _size
u_%016lx_%u_%u
@%df
@%dd
@%di
@%dui
ub_%016lx_%u_%u
Ceei
Ceef
Cee@4i
GL_EXT_texture_filter_anisotropic
GL_EXT_texture_sRGB_decode
Cee@4f
Cuiee
Cuief
Cuiiiii
Cuiuiuiuiui
failed to allocate fbuf buffer
misaligned fbuf buffer: %p, required alignment=%zu
Ciiffff@%dub
Ciifffft
Cie@%db
Cie@%dub
Cie@%ds
Cie@%dus
Cie@%di
Cie@%dui
Cie@%df
Ciep
C@4d
Ci@%dui
Ceie
Ce@%d
Cee@%df
Cee@%di
Cei@%df
Cei@%dui
Cei@%dus
Ci@%dui@%df
Ciee
Ciiiieet
CiiiieeU
Cee%c
Cee@%u%c
Cee@%dd
Cee@%dn
Cee@%de
CeieiieeU
Ceieiieet
CeieiiieeU
Ceieiiieet
CeiiieeU
Ceiiieet
CeiiiiieeU
Ceiiiiieet
Ce@1f
Ce@1i
Ce@3f
Ce@3i
CeieiiiiiU
Ceieiiiiit
CeieiiiiU
Ceieiiiit
CeieiiiU
Ceieiiit
CeiiiiiiieiU
Ceiiiiiiieit
CeiiiiieiU
Ceiiiiieit
CeiiieiU
Ceiiieit
Ceip
Ceuiuiie
CeieiiiieeU
Ceieiiiieet
CeiiiiiiieeU
Ceiiiiiiieet
Cuif
Cuiff
Cuifff
Cui@1f
Cui@2f
Cui@3f
Cui@4i
Cui@4ui
Cui@4f
Ceuip
CeeuiU
Ci@%db
Ci@%ds
Ci@%di
Ci@%df
Ci@%dd
Ci@%dub
Ci@%dus
Ce@%di@%dii
Ce@%die
@0ti
@%dt
@%dU
Culi@%dU<cb>@%di
Culi@%dU<cb>t
Culipp
CiuiiieSuiiiiubiui
Cuie@%u%c
Cuie@%u%s
Celpe
CeUll
void wrapper_copyout_harvest_list_buffer(ContextInfo *, GLenum)
Cell
CeuiiU<f>
Cuie%c
Cuii@%dSe
Cee@%u%s
Cei@%u%s
CYei%s@%u%s
Ceuiit
Ceuiipp
Cei@%dU<cb>
V<ul>
rhubarb
CV<ul>i@%dU<cb>t
CV<ul>
CulV<ul>
v8@?0
CiuiiU<cb>i
Cuii%st
U<cb>
Cuip
Ciiiieep
Ce@%diepi
unsupported mode: 0x%0.4x
com.apple.opengl
GT_HOST_URL_GL
[DYGLInitPlatform] failed to initialize client
[DYGLInitPlatform] failed to connect to host: %s
void handle_context_init(CGLPixelFormatObj, CGLContextObj, CGLContextObj)
[DYGetGLGuestAppClient() isKindOfClass:[DYGLGuestAppClient class]]
void handle_context_dealloc(ContextInfo *, CGLPixelFormatObj)
unknown opengl profile attribute value: 0x%04X
@%dAPp
ContextInfo::ContextInfo(glctx_t, DYOpenGLAPI, bool)
renderer_info.extensions
GL_ARB_separate_shader_objects
GL_EXT_separate_shader_objects
GL_ARB_framebuffer_object
GL_EXT_framebuffer_blit
GL_APPLE_framebuffer_multisample
GL_EXT_framebuffer_multisample
GL_APPLE_flush_buffer_range
GL_ARB_map_buffer_range
GL_EXT_map_buffer_range
GL_OES_map_buffer_range
GL_APPLE_vertex_array_object
GL_ARB_vertex_array_object
GL_OES_vertex_array_object
GL_ARB_instanced_arrays
GL_EXT_instanced_arrays
GL_EXT_debug_label
GL_APPLE_texture_max_level
GL_ARB_sync
GL_APPLE_sync
GL_EXT_shadow_samplers
GL_APPLE_row_bytes
GL_ARB_transform_feedback2
GL_ARB_sampler_objects
GL_ARB_texture_swizzle
GL_EXT_texture_storage
GL_EXT_occlusion_query_boolean
GL_EXT_framebuffer_sRGB
GL_APPLE_clip_distance
GL_APPLE_container_object_shareable
GL_EXT_draw_buffers2
v12@?0I8
max_vertex_attribs <= DY_VA_CACHE_MAX_GENERIC
unsupported texture target: 0x%x
bool GPUTools::ResourceUpdater::UpdateTexture(GLuint, NSDictionary *, NSMutableDictionary *)
unsafeOverride > 0 && unsafeOverride < kMaxResourceOverrides
_GetOverrideTexture: invalid override: %u
B16@?0r^{NameTargetTuple=II}8
B24@?0r^{NameTargetTuple=II}8r^{NameTargetTuple=II}16
void GPUTools::NameTargetTupleArray::allocate(uint32_t)
buffer
DYGLGuestAppClient
DYDesktopAppClient
v20@0:8i16
@16@0:8
v24@0:8@16
v16@0:8
c16@0:8
{_CSTypeRef="_opaque_1"Q"_opaque_2"Q}
kDYVertexPointerFilename
kDYNormalPointerFilename
kDYColorPointerFilename
kDYTexCoordPointerFilename
kDYIndexPointerFilename
kDYEdgeFlagPointerFilename
kDYSecondaryColorPointerFilename
kDYFogCoordPointerFilename
kDYWeightPointerFilename
kDYPointSizePointerFilename
