00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899
NSt3__18ios_baseE
NSt3__18ios_base7failureE
NSt3__115basic_streambufIcNS_11char_traitsIcEEEE
NSt3__119__iostream_categoryE
0123456789abcdefABCDEFxX+-pPiInN
NSt3__16locale5facetE
NSt3__15ctypeIwEE
NSt3__110ctype_baseE
NSt3__17codecvtIcc11__mbstate_tEE
NSt3__112codecvt_baseE
NSt3__17codecvtIDsc11__mbstate_tEE
NSt3__17codecvtIDic11__mbstate_tEE
NSt3__116__narrow_to_utf8ILm32EEE
NSt3__117__widen_from_utf8ILm32EEE
NSt3__17codecvtIwc11__mbstate_tEE
NSt3__16locale5__impE
NSt3__17collateIcEE
NSt3__17collateIwEE
NSt3__15ctypeIcEE
NSt3__18numpunctIcEE
NSt3__18numpunctIwEE
NSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt3__19__num_getIcEE
NSt3__114__num_get_baseE
NSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt3__19__num_getIwEE
NSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt3__19__num_putIcEE
NSt3__114__num_put_baseE
NSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt3__19__num_putIwEE
NSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt3__19time_baseE
NSt3__120__time_get_c_storageIcEE
NSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt3__120__time_get_c_storageIwEE
NSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt3__110__time_putE
NSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt3__110moneypunctIcLb0EEE
NSt3__110money_baseE
NSt3__110moneypunctIcLb1EEE
NSt3__110moneypunctIwLb0EEE
NSt3__110moneypunctIwLb1EEE
NSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt3__111__money_getIcEE
NSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt3__111__money_getIwEE
NSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt3__111__money_putIcEE
NSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt3__111__money_putIwEE
NSt3__18messagesIcEE
NSt3__113messages_baseE
NSt3__18messagesIwEE
NSt3__112bad_weak_ptrE
NSt3__114__shared_countE
NSt3__119__shared_weak_countE
NSt3__112system_errorE
NSt3__114error_categoryE
NSt3__112__do_messageE
NSt3__124__generic_error_categoryE
NSt3__123__system_error_categoryE
N12_GLOBAL__N_116itanium_demangle11SpecialNameE
N12_GLOBAL__N_116itanium_demangle4NodeE
N12_GLOBAL__N_116itanium_demangle21CtorVtableSpecialNameE
N12_GLOBAL__N_116itanium_demangle8NameTypeE
N12_GLOBAL__N_116itanium_demangle10NestedNameE
N12_GLOBAL__N_116itanium_demangle24ForwardTemplateReferenceE
N12_GLOBAL__N_116itanium_demangle14IntegerLiteralE
N12_GLOBAL__N_116itanium_demangle8BoolExprE
N12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIfEE
N12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIdEE
N12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIeEE
N12_GLOBAL__N_116itanium_demangle13StringLiteralE
N12_GLOBAL__N_116itanium_demangle15UnnamedTypeNameE
N12_GLOBAL__N_116itanium_demangle26SyntheticTemplateParamNameE
N12_GLOBAL__N_116itanium_demangle21TypeTemplateParamDeclE
N12_GLOBAL__N_116itanium_demangle24NonTypeTemplateParamDeclE
N12_GLOBAL__N_116itanium_demangle25TemplateTemplateParamDeclE
N12_GLOBAL__N_116itanium_demangle21TemplateParamPackDeclE
N12_GLOBAL__N_116itanium_demangle15ClosureTypeNameE
N12_GLOBAL__N_116itanium_demangle10LambdaExprE
N12_GLOBAL__N_116itanium_demangle11EnumLiteralE
N12_GLOBAL__N_116itanium_demangle13FunctionParamE
N12_GLOBAL__N_116itanium_demangle8FoldExprE
N12_GLOBAL__N_116itanium_demangle22ParameterPackExpansionE
N12_GLOBAL__N_116itanium_demangle10BinaryExprE
N12_GLOBAL__N_116itanium_demangle10PrefixExprE
N12_GLOBAL__N_116itanium_demangle8CastExprE
N12_GLOBAL__N_116itanium_demangle8CallExprE
N12_GLOBAL__N_116itanium_demangle14ConversionExprE
N12_GLOBAL__N_116itanium_demangle10DeleteExprE
N12_GLOBAL__N_116itanium_demangle13QualifiedNameE
N12_GLOBAL__N_116itanium_demangle8DtorNameE
N12_GLOBAL__N_116itanium_demangle22ConversionOperatorTypeE
N12_GLOBAL__N_116itanium_demangle15LiteralOperatorE
N12_GLOBAL__N_116itanium_demangle19GlobalQualifiedNameE
N12_GLOBAL__N_116itanium_demangle10MemberExprE
N12_GLOBAL__N_116itanium_demangle18ArraySubscriptExprE
N12_GLOBAL__N_116itanium_demangle10BracedExprE
N12_GLOBAL__N_116itanium_demangle15BracedRangeExprE
N12_GLOBAL__N_116itanium_demangle12InitListExprE
N12_GLOBAL__N_116itanium_demangle11PostfixExprE
N12_GLOBAL__N_116itanium_demangle7NewExprE
N12_GLOBAL__N_116itanium_demangle13EnclosingExprE
N12_GLOBAL__N_116itanium_demangle15ConditionalExprE
N12_GLOBAL__N_116itanium_demangle19SizeofParamPackExprE
N12_GLOBAL__N_116itanium_demangle13NodeArrayNodeE
N12_GLOBAL__N_116itanium_demangle9ThrowExprE
N12_GLOBAL__N_116itanium_demangle10UUIDOfExprE
N12_GLOBAL__N_116itanium_demangle27ExpandedSpecialSubstitutionE
N12_GLOBAL__N_116itanium_demangle12CtorDtorNameE
N12_GLOBAL__N_116itanium_demangle10AbiTagAttrE
N12_GLOBAL__N_116itanium_demangle21StructuredBindingNameE
N12_GLOBAL__N_116itanium_demangle9LocalNameE
N12_GLOBAL__N_116itanium_demangle19SpecialSubstitutionE
N12_GLOBAL__N_116itanium_demangle13ParameterPackE
N12_GLOBAL__N_116itanium_demangle12TemplateArgsE
N12_GLOBAL__N_116itanium_demangle20NameWithTemplateArgsE
N12_GLOBAL__N_116itanium_demangle16StdQualifiedNameE
N12_GLOBAL__N_116itanium_demangle20TemplateArgumentPackE
N12_GLOBAL__N_116itanium_demangle12EnableIfAttrE
N12_GLOBAL__N_116itanium_demangle16FunctionEncodingE
N12_GLOBAL__N_116itanium_demangle9DotSuffixE
N12_GLOBAL__N_116itanium_demangle12NoexceptSpecE
N12_GLOBAL__N_116itanium_demangle20DynamicExceptionSpecE
N12_GLOBAL__N_116itanium_demangle12FunctionTypeE
N12_GLOBAL__N_116itanium_demangle13ObjCProtoNameE
N12_GLOBAL__N_116itanium_demangle17VendorExtQualTypeE
N12_GLOBAL__N_116itanium_demangle8QualTypeE
N12_GLOBAL__N_116itanium_demangle15PixelVectorTypeE
N12_GLOBAL__N_116itanium_demangle10VectorTypeE
N12_GLOBAL__N_116itanium_demangle9ArrayTypeE
N12_GLOBAL__N_116itanium_demangle19PointerToMemberTypeE
N12_GLOBAL__N_116itanium_demangle22ElaboratedTypeSpefTypeE
N12_GLOBAL__N_116itanium_demangle11PointerTypeE
N12_GLOBAL__N_116itanium_demangle13ReferenceTypeE
N12_GLOBAL__N_116itanium_demangle20PostfixQualifiedTypeE
St9exception
St13bad_exception
St9bad_alloc
St11logic_error
St12length_error
St12out_of_range
St13runtime_error
St14overflow_error
St9type_info
St8bad_cast
St10bad_typeid
N10__cxxabiv116__shim_type_infoE
N10__cxxabiv117__class_type_infoE
N10__cxxabiv120__si_class_type_infoE
N10__cxxabiv121__vmi_class_type_infoE
A8MachTask
@(#)PROGRAM:LLDB  PROJECT:lldb-1300.0.40.3
15DNBArchImplI386
15DNBArchProtocol
17DNBArchImplX86_64
13ActivityStore
18DarwinLogCollector
NSt3__123enable_shared_from_thisI18DarwinLogCollectorEE
NSt3__120__shared_ptr_emplaceI14LogFilterChainNS_9allocatorIS1_EEEE
NSt3__120__shared_ptr_pointerIP14LogFilterRegexNS_10shared_ptrI9LogFilterE27__shared_ptr_default_deleteIS4_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI9LogFilterE27__shared_ptr_default_deleteIS1_14LogFilterRegexEE
NSt3__120__shared_ptr_emplaceI19LogFilterExactMatchNS_9allocatorIS1_EEEE
NSt3__120__shared_ptr_pointerIP18DarwinLogCollectorNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI18DarwinLogCollectorE27__shared_ptr_default_deleteIS1_S1_EE
9LogFilter
19LogFilterExactMatch
14LogFilterRegex
10LogMessage
15LogMessageOsLog
__next_prime overflow
iostream
unspecified iostream_category error
ios_base::clear
money_get error
%.0Lf
%m/%d/%y
%H:%M:%S
%a %b %d %H:%M:%S %Y
%I:%M:%S %p
locale not supported
Sunday
Monday
Tuesday
Wednesday
Thursday
Friday
Saturday
January
February
March
April
June
July
August
September
October
November
December
bad_weak_ptr
mutex lock failed
/usr/lib/libstdc++.6.dylib
_ZNSs4_Rep20_S_empty_rep_storageE
basic_string
unspecified generic_category error
system
unspecified system_category error
Unknown error %d
terminating with %s exception of type %s: %s
terminating with %s exception of type %s
terminating with %s foreign exception
terminating
uncaught
unexpected
___Z
____Z
_block_invoke
invocation function for block in 
Ua9enable_ifI
vtable for 
VTT for 
typeinfo for 
typeinfo name for 
covariant return thunk to 
thread-local wrapper routine for 
thread-local initialization routine for 
virtual thunk to 
non-virtual thunk to 
guard variable for 
reference temporary for 
construction vtable for 
decltype(
alignof (
const_cast
dynamic_cast
noexcept (
reinterpret_cast
static_cast
sizeof (
sizeof... (
typeid (
throw
u8__uuidoft
u8__uuidofz
wchar_t
char
signed char
unsigned char
short
unsigned short
__int128
unsigned __int128
nullptr
%LaL
yptn
'block-literal'
this
_GLOBAL__N
(anonymous namespace)
operator&&
operator&
operator&=
operator=
operator()
operator,
operator~
operator delete[]
operator*
operator delete
operator/
operator/=
operator^
operator^=
operator==
operator>=
operator>
operator[]
operator<=
operator<<
operator<<=
operator<
operator-
operator-=
operator*=
operator--
operator new[]
operator!=
operator!
operator new
operator||
operator|
operator|=
operator->*
operator+
operator+=
operator++
operator->
operator?
operator%
operator%=
operator>>
operator>>=
operator<=>
std::basic_string
std::basic_string<char, std::char_traits<char>, std::allocator<char> >
std::basic_istream<char, std::char_traits<char> >
std::basic_ostream<char, std::char_traits<char> >
std::basic_iostream<char, std::char_traits<char> >
allocator
basic_istream
basic_ostream
basic_iostream
string literal
string
istream
ostream
void
bool
unsigned int
long
unsigned long
long long
unsigned long long
double
long double
__float128
decimal64
decimal128
decimal32
decimal16
char32_t
char16_t
char8_t
decltype(auto)
std::nullptr_t
 complex
 imaginary
noexcept
objcproto
struct
union
enum
objc_object
cannot allocate __cxa_eh_globals
std::__libcpp_tls_set failure in __cxa_get_globals()
execute once failure in __cxa_get_globals_fast()
cannot create thread specific key for __cxa_get_globals()
cannot zero out thread value for __cxa_get_globals()
__cxa_guard_acquire
__cxa_guard_acquire detected recursive initialization
%s failed to acquire mutex
%s failed to release mutex
__cxa_guard_release
%s failed to broadcast
__cxa_guard_abort
unexpected_handler unexpectedly returned
terminate_handler unexpectedly returned
terminate_handler unexpectedly threw an exception
Pure virtual function called!
std::bad_exception
std::bad_alloc
std::bad_cast
std::bad_typeid
libc++abi: 
%s ctx.Events().WaitForSetEvents( 0x%08x ) ...
RNBRunLoopGetStartModeFromRemote
%s ctx.Events().WaitForSetEvents( 0x%08x ) => 0x%08x
error: packet read thread exited.
Attach succeeded, ready to debug.
error: attach failed.
error: connection lost.
%s Error getting packet.
#### %s
%s Connection closed before getting "A" packet.
%s Launching '%s'...
RNBRunLoopLaunchInferior
%s DNBProcessLaunch() returned error: '%s'
%s DNBProcessLaunch() failed to launch process, unknown failure
<unknown failure>
%s Didn't get the expected qLaunchSuccess packet.
%s DNBProcessWaitForEvent (%4.4x, eEventProcessRunningStateChanged | eEventProcessStoppedStateChanged, true, INFINITE)...
%s DNBProcessWaitForEvent (%4.4x, eEventProcessRunningStateChanged | eEventProcessStoppedStateChanged, true, INFINITE) => 0x%8.8x
%s process %4.4x state changed (eEventProcessStateChanged): %s
%s Attaching to pid %i...
RNBRunLoopLaunchAttaching
%s (%s)
signal_handler
#### %s error: pid invalid, exiting...
HandleProcessStateChange
%s (&remote, initialize=%i)  pid_state = %s
%s (&remote, initialize=%i)  pid_state = %s pid_stop_count %llu (old %llu)) Notify??? no, first stop...
%s (&remote, initialize=%i)  pid_state = %s pid_stop_count %llu (old %llu)) Notify??? YES!!!
%s (&remote, initialize=%i)  pid_state = %s pid_stop_count %llu (old %llu)) Notify??? skipping...
RNBRunLoopInferiorExecuting
%s ctx.Events().WaitForSetEvents(0x%08x) ...
%s ctx.Events().WaitForSetEvents(0x%08x) => 0x%08x (%s)
debugserver's process monitoring thread has exited.
debugserver's packet communication to lldb has been shut down.
debugserver has a valid PID %d, it is still running. detaching from the inferior process.
debugserver killing the inferior process, pid %d.
debugserver has a valid PID %d but it may no longer be running, detaching from the inferior process.
RNBRunLoopPlatform
com.apple.%s-%s
debugserver
Sender
%s-%s for %s.
Usage:
  %s host:port [program-name program-arg1 program-arg2 ...]
  %s /path/file [program-name program-arg1 program-arg2 ...]
  %s host:port --attach=<pid>
  %s /path/file --attach=<pid>
  %s host:port --attach=<process_name>
  %s /path/file --attach=<process_name>
DYLD_INSERT_LIBRARIES
main thread
error: failed to create a remote connection class
option: ch == %c (0x%2.2x) --%s%c%s
error: invalid pid option '%s'
error: invalid waitfor-interval option value '%s'.
error: invalid waitfor-duration option value '%s'.
auto
posix
[LaunchAttach] launch flavor is posix_spawn via cmdline option
fork
error: invalid TYPE for the --launch=TYPE (-x TYPE) option: '%s'
Valid values TYPE are:
  auto       Auto-detect the best launch method to use.
  posix      Launch the executable using posix_spawn.
  fork       Launch the executable using fork and exec.
stdout
stderr
Failed to open log file '%s' for writing: errno = %i (%s)
unknown error
error: working directory doesn't exist '%s'.
debugserver will use os_log for internal logging.
debugserver will use ASL for internal logging.
argv[%i] = %s
%s-%s %sfor %s.
host = '%s'  port = %i
127.0.0.1
/dev/null
debugserver running in --applist mode
error: ListApplications returned error %i
Get args from remote protocol...
inferior_argv[%i] = '%s'
Got a connection, waiting for process information for launching or attaching.
Waiting to attach to process %s...
error: failed to attach to process named: "%s" %s
Attaching to process %i...
error: failed to attach process %i: %s
unknown error.
Attaching to process %s...
error: asked to attach with empty name and invalid PID.
Waiting for debugger instructions for process %d.
<unknown>
[LaunchAttach] Successfully launched %s (pid = %d).
Got a connection, launched process %s (pid = %d).
error: failed to launch process %s: %s
Exiting.
attach
arch
debug
kill-on-error
verbose
version
lockdown
applist
log-file
log-flags
launch
waitfor
waitfor-interval
waitfor-duration
native-regs
stdio-path
stdin-path
stdout-path
stderr-path
no-stdio
setsid
disable-aslr
working-dir
platform
unix-socket
named-pipe
reverse-connect
forward-env
secure-socket-proxy
unmask-signals
error: invalid port supplied for reverse connection: %i.
Failed to reverse connect to %s:%i.
Listening to port %i for a connection from %s...
Failed to get connection from a remote gdb process.
error: socket (AF_UNIX, SOCK_STREAM, 0)
error: connect (socket, &saddr_un, saddr_un_len)
Listening to port %i...
error: send (s, pid_str, pid_str_len, 0)
DNBArchProtocol::SetDefaultArchitecture (cpu_type=0x%8.8x, cpu_subtype=0x%8.8x) => %i
kqueue thread
kqueue failed with error: (%d): %s
Unknown error
Failed to initialize kqueue event: (%d): %s
waitpid (%i) -> STOPPED (signal = %i)
waitpid (%i) -> EXITED (status = %i)
waitpid (%i) -> SIGNALED and EXITED (signal = %i)
Terminated due to signal %i
waitpid (%i) -> SIGNALED (signal = %i)
Terminated due to memory issue
Terminated due to decrypt failure
Terminated due to code signing error
waitpid_process_thread (): setting exit status for pid = %i to %i
%s ( path='%s', argv = %p, envp = %p, working_dir=%s, stdin=%s, stdout=%s, stderr=%s, no-stdio=%i, launch_flavor = %u, disable_aslr = %d, err = %p, err_len = %llu) called...
DNBProcessLaunch
(DebugNub) new pid is %d...
Could not get task port for process, sending SIGKILL and exiting.
failed to get the task for process %i (%s)
failed to get the task for process %i
error: no processes match '%s'
error: %llu processes match '%s':
%6u - %s
LLDB_DEBUGSERVER_PATH
/Library/Apple/usr/libexec/oah/debugserver
Trying to attach to a translated process with the native debugserver, exiting...
--fd=%d
--attach=%d
--native-regs
--setsid
--handoff-attach-from-native
Failed to launch debugserver for translated process: 
(DebugNub) attaching to pid %d...
DNBProcessAttach
operation timed out
process exited
sysctl (mib, miblen, NULL, &num_processes, NULL, 0)
Error in PrepareForAttach: %s
Waiting for '%s' to appear...
error: waiting for process '%s' timed out.
DNBProcessAttachWait cancelled by should_cancel callback.
Attaching to %s with pid %i...
Disabling breakpoints and watchpoints, and detaching from %d.
Invalid
Unloaded
Attaching
Launching
Stopped
Running
Stepping
Crashed
Detached
Exited
Suspended
nub_state_t ???
%s(pid = %4.4x)
DNBProcessResume
PATH
DNBInitialize ()
i386
x86_64h
aarch64_32
arm64e
aarch64
armv8
armv7em
armv7m
armv7k
armv7s
armv7
armv6m
armv6
armv5
armv4t
Could not get kqueue for pid = %i.
Failed to register kqueue NOTE_EXIT event for pid %i, error: %d.
waitpid thread
waitpid_thread (): waitpid (pid = %i, &status, 0) => %i, status = %i, errno = %i
waitpid_thread (): setting exit status for pid = %i to %i
waitpid_thread (): main loop exited, setting exit status to an invalid value (-1) for pid %i
0x%8.8llx:
 %2.2x
 %4.4x
 %8.8x
 %16.16llx
 0x%llx
 %lld
error: %s err = %s (0x%8.8x)
%s err = 0x%8.8x
%u +%lu.%06u sec [%4.4x/%4.4x]: %s
error: %s
warning: %s
null
error: an error occurred getting a character from offset 
error: wide character support is needed for unicode character 0x
 at offset 
error: missing end quote for string
error: extra decimal point found at offset 
error: extra exponent character found at offset 
error: unexpected 
 character at offset 
error: got exponent character but no exponent digits at offset in float value "
error: no digits after decimal point "
error: no digits negate sign "
error: invalid number found at offset 
error: failed to parse token at offset 
 (around character '
RNBContext::%s called
StartProcessStatusThread
RNBContext::%s thread got started!
RNBContext::%s thread failed to start: err = %i
StopProcessStatusThread
RNBContext::%s thread stopped as requeseted
RNBContext::%s thread did not stop in 2 seconds...
RNBContext::%s (arg=%p, pid=%4.4x): thread starting...
ThreadFunctionProcessStatus
child process status watcher thread
RNBContext::%s calling DNBProcessWaitForEvent(pid, eEventProcessRunningStateChanged | eEventProcessStoppedStateChanged | eEventStdioAvailable | eEventProfileDataAvailable, true)...
RNBContext::%s calling DNBProcessWaitForEvent(pid, eEventProcessRunningStateChanged | eEventProcessStoppedStateChanged | eEventStdioAvailable | eEventProfileDataAvailable, true) => 0x%8.8x
RNBContext::%s (pid=%4.4x) got ZERO back from DNBProcessWaitForEvent....
RNBContext::%s (pid=%4.4x) got stdio available event....
RNBContext::%s (pid=%4.4x) got profile data event....
RNBContext::%s (pid=%4.4x) got process state change: %s
RNBContext::%s (arg=%p, pid=%4.4x): thread exiting...
proc_state_changed 
proc_thread_running 
proc_thread_exiting 
proc_stdio_available 
proc_profile_data 
darwin_log_data_available 
read_packet_available 
read_thread_running 
type
RNBRemote::RNBRemote()
RNBRemote::~RNBRemote()
!ACK
Read memory
Read one register
Read registers
Write memory
Write one register
Write registers
Insert memory breakpoint
Remove memory breakpoint
Single step
continue
Single step with signal
Set thread
Why did target halt
Set argv
Continue with signal
Detach gdb from remote system
Kill
Is thread alive
qSupported
Query about supported features
vAttach
Attach to a new process
vAttachWait
Wait for a process to start up then attach to it
vAttachOrWait
Attach to the process or if it doesn't exist, wait for the process to start up then attach to it
vAttachName
Attach to an existing process by name
vCont;
Verbose resume with thread actions
vCont?
List valid continue-with-thread-actions actions
Read data from memory
Write data to memory
Insert hardware breakpoint
Remove hardware breakpoint
Insert write watchpoint
Remove write watchpoint
Insert read watchpoint
Remove read watchpoint
Insert access watchpoint
Remove access watchpoint
qRcmd
Monitor command
Query current thread ID
qEcho:
Echo the packet back to allow the debugger to sync up with this server
qGetPid
Query process id
qfThreadInfo
Get list of active threads (first req)
qsThreadInfo
Get list of active threads (subsequent req)
qThreadStopInfo
Get detailed info on why the specified thread stopped
qThreadExtraInfo
Get printable status of a thread
qLaunchSuccess
Report the success or failure of the launch attempt
qRegisterInfo
Dynamically discover remote register context information.
qShlibInfoAddr
Returns the address that contains info needed for getting shared library notifications
qStepPacketSupported
Replys with OK if the 's' packet is supported.
qVAttachOrWaitSupported
Replys with OK if the 'vAttachOrWait' packet is supported.
qSyncThreadStateSupported
Replys with OK if the 'QSyncThreadState:' packet is supported.
qHostInfo
Replies with multiple 'key:value;' tuples appended to each other.
qGDBServerVersion
qProcessInfo
qSymbol:
Notify that host debugger is ready to do symbol lookups
jThreadExtendedInfo
Replies with JSON data of thread extended information.
jGetLoadedDynamicLibrariesInfos
Replies with JSON data of all the shared libraries loaded in this process.
jThreadsInfo
Replies with JSON data with information about all threads.
jGetSharedCacheInfo
Replies with JSON data about the location and uuid of the shared cache in the inferior process.
QStartNoAckMode
Request that debugserver stop acking remote protocol packets
QThreadSuffixSupported
Check if thread specific packets (register packets 'g', 'G', 'p', and 'P') support having the thread ID appended to the end of the command
QSetLogging:
Check if register packets ('g', 'G', 'p', and 'P' support having the thread ID prefix
QSetMaxPacketSize:
Tell debugserver the max sized packet gdb can handle
QSetMaxPayloadSize:
Tell debugserver the max sized payload gdb can handle
QEnvironment:
Add an environment variable to the inferior's environment
QEnvironmentHexEncoded:
QLaunchArch:
Set the architecture to use when launching a process for hosts that can run multiple architecture slices from universal files.
QSetDisableASLR:
Set whether to disable ASLR when launching the process with the set argv ('A') packet
QSetSTDIN:
Set the standard input for a process to be launched with the 'A' packet
QSetSTDOUT:
Set the standard output for a process to be launched with the 'A' packet
QSetSTDERR:
Set the standard error for a process to be launched with the 'A' packet
QSetWorkingDir:
Set the working directory for a process to be launched with the 'A' packet
QListThreadsInStopReply
Set if the 'threads' key should be added to the stop reply packets with a list of all thread IDs.
QSyncThreadState:
Do whatever is necessary to make sure 'thread' is in a safe state to call functions on.
Allocate memory in the inferior process.
Deallocate memory in the inferior process.
QSaveRegisterState
Save the register state for the current thread and return a decimal save ID.
QRestoreRegisterState:
Restore the register state given a save ID previously returned from a call to QSaveRegisterState.
qMemoryRegionInfo
Return size and attributes of a memory region that contains the given address
qGetProfileData
Return profiling data of the current target.
QSetEnableAsyncProfiling
Enable or disable the profiling of current target.
QEnableCompression:
Enable compression for the remainder of the connection
qWatchpointSupportInfo
Return the number of supported hardware watchpoints
QSetProcessEvent:
Set a process event, to be passed to the process, can be set before the process is started, or after.
QSetDetachOnError:
Set whether debugserver will detach (1) or kill (0) from the process it is controlling if it loses connection to lldb.
qSpeedTest:
Test the maximum speed at which packet can be sent/received.
qXfer:
Support the qXfer packet.
qStructuredDataPlugins
Query for the structured data plugins supported by the remote.
QConfigureDarwinLog:
Configure the DarwinLog structured data plugin support.
RNBRemote::%s(): enter
SendAsyncDarwinLogData
RNBRemote::%s(): ignoring due toinvalid process id
RNBRemote::%s(): outer loop enter
RNBRemote::%s(): inner loop enter
RNBRemote::%s(): adding entry index %lu to the JSON packet
RNBRemote::%s(): sending JSON packet, %lu entries remain
RNBRemote::%s(): outer loop exit
RNBRemote::%s(): exit
void RNBRemote::SendAsyncDarwinLogData()
JSON-async:
%zu:
%8d RNBRemote::%s (%s) called
SendPacket
%02x
%8d RNBRemote::%s (%s) got error trying to get reply...
%8d RNBRemote::%s (%s) got reply: '%s'
%8u RNBRemote::%s error: packet with invalid checksum characters: %s
GetPacketPayload
%8u RNBRemote::%s sending ACK for '%s' (error: packet checksum mismatch  (0x%2.2lx != 0x%2.2x))
%8u RNBRemote::%s tossing unexpected packet???? %s
%8u RNBRemote::%s("%s")
HandlePacket_UNIMPLEMENTED
NULL
%8u %s:%i ILLFORMED: '%s' (%s)
HandlePacket_ILLFORMED
unimplemented packet: '%s'
%8u RNBRemote::%s
HandleAsyncPacket
HandleAsyncPacket ("%s");
HandleAsyncPacket (%s);
HandleReceivedPacket ("%s");
getpkt: %s
%8d RNBRemote::%s tossing junk byte at %c
CommDataReceived
%8u RNBRemote::%s called
StartReadRemoteDataThread
StopReadRemoteDataThread
debugserver about to shut down packet communications to lldb.
RNBRemote::%s (%p): thread starting...
ThreadFunctionReadRemoteData
read gdb-remote packets thread
RNBSocket::GetCommData returned error %u
RNBSocket::GetCommData returned not connected...
RNBRemote::%s (%p): thread exiting...
RNBRemote::%s() getting native registers from DNB interface
InitializeRegisters
no offset was calculated entry for register %s
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/lldb/lldb-1300.0.40.3/llvm-project/lldb/tools/debugserver/source/RNBRemote.cpp
logfile
logmask
name:
alt-name:
bitsize:
offset:
encoding:uint;
encoding:sint;
encoding:ieee754;
encoding:vector;
format:binary;
format:decimal;
format:hex;
format:float;
format:vector-sint8;
format:vector-uint8;
format:vector-sint16;
format:vector-uint16;
format:vector-sint32;
format:vector-uint32;
format:vector-float32;
format:vector-uint128;
set:
ehframe:
dwarf:
generic:fp;
generic:pc;
generic:sp;
generic:ra;
generic:flags;
generic:arg1;
generic:arg2;
generic:arg3;
generic:arg4;
generic:arg5;
generic:arg6;
generic:arg7;
generic:arg8;
container-regs:
invalidate-regs:
bitmask=
LOG_VERBOSE
LOG_PROCESS
LOG_THREAD
LOG_EXCEPTIONS
LOG_SHLIB
LOG_MEMORY_DATA_SHORT
LOG_MEMORY_DATA_LONG
LOG_MEMORY_PROTECTIONS
LOG_MEMORY
LOG_BREAKPOINTS
LOG_EVENTS
LOG_WATCHPOINTS
LOG_STEP
LOG_TASK
LOG_ALL
LOG_DEFAULT
LOG_NONE
LOG_RNB_MINIMAL
LOG_RNB_MEDIUM
LOG_RNB_MAX
LOG_RNB_COMM
LOG_RNB_REMOTE
LOG_RNB_EVENTS
LOG_RNB_PROC
LOG_RNB_PACKETS
LOG_RNB_ALL
LOG_RNB_DEFAULT
LOG_DARWIN_LOG
LOG_RNB_NONE
DarwinLog: received config data: "%s"
%8u RNBRemote::%s Handling QEnvironment: "%s"
HandlePacket_QEnvironment
%8u RNBRemote::%s Handling QEnvironmentHexEncoded: "%s"
HandlePacket_QEnvironmentHexEncoded
%8d %s got signal signo = %u, exc_type = %u
SendStopReplyPacketForThread
thread:
$#+-;:
hexname:
threads:
thread-pcs:
jstopinfo:
reason:exec;
metype:
mecount:
medata:
memory:
W%02x
X%02x
S%02x
description
RNBRemote::HandlePacket_G(%s): extracted %llu of %llu bytes, size mismatch
qXfer:features:read+;PacketSize=%x;qEcho+
vCont;c
vCont;s
vCont
vAttachWait;
[LaunchAttach] START %d vAttachWait for process name '%s'
vAttachOrWait;
[LaunchAttach] START %d vAttachWaitOrWait for process name '%s'
vAttachName;
[LaunchAttach] START %d vAttachName attach to process name '%s'
vAttach;
[LaunchAttach] START %d vAttach to pid %d
Successfully attached to pid %d
Attach failed
attach failed
Tried to attach to pid that doesn't exist
Tried to attach to process already being debugged
tried to attach to process already being debugged
uid 
Tried to attach to process with uid mismatch
tried to attach to process as user '
' and process is running as user '
Developer mode is not enabled and this is a non-interactive session
developer mode is not enabled on this machine and this is a non-interactive debug session.
This is a non-interactive session
this is a non-interactive debug session, cannot get permission to debug processes.
unable to start the exception thread
Not allowed to attach to process.  Look in the console messages (Console.app), near the debugserver entries, when the attach failed.  The subsystem that denied the attach permission will likely have logged an informative message about why it was denied.
Attach failed: "%s".
RNBRemote::HandlePacket_p(%s): unknown register number %u requested
00000000
RNBRemote::HandlePacket_P(%s): unknown register number %u requested
start:
size:
permissions:
scan_type
enable
interval_usec
minsize:
type:zlib-deflate;
type:lz4;
type:lzma;
type:lzfse;
num:
detaching from pid %u due to D packet
error while detaching from pid %u due to D packet
Got a 'k' packet, killing the inferior process.
RNBRemote::HandlePacket_stop_process() sending extra stop reply because DNBProcessInterrupt returned false
cputype:
cpusubtype:
addressing_bits:
ostype:macosx;
watchpoint_exceptions_received:before;
watchpoint_exceptions_received:after;
vendor:apple;
os_version:
maccatalyst_version:
endian:little;
ptrsize:8;
ptrsize:
uint
general
sint
ieee754
float
vector
binary
decimal
vector-sint8
vector-uint8
vector-sint16
vector-uint16
vector-sint32
vector-uint32
vector-float32
vector-uint128
name
regnum
offset
bitsize
group
altname
encoding
format
group_id
ehframe_regnum
dwarf_regnum
flags
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
generic
value_regnums
invalidate_regnums
feature
com.apple.debugserver.
groups
features
read
target.xml
name:debugserver;
version:
true
false
signal
exception
exec
associated_with_dispatch_queue
dispatch_queue_t
jThreadExtendedInfo:{
thread
plo_pthread_tsd_base_address_offset
plo_pthread_tsd_base_offset
plo_pthread_tsd_entry_size
dti_qos_class_index
"activity_query_timed_out":false,
"activity_query_duration":
"activity":{
"start":
"id":
"parent_id":
"name":"
"reason":"
"trace_messages":[
"timestamp":
"activity_id":
"trace_id":
"thread":
"type":
"process_info_index":
"message":"
"breadcrumb":{
"breadcrumb_id":
"process_infos":[
"image_path":"
"image_uuid":"
"activity_query_timed_out":true
"tsd_address":
"requested_qos":{
"enum_value":
"constant_name":"
"printable_name":"
"pthread_t":
"dispatch_queue_t":
jGetLoadedDynamicLibrariesInfos:{
fetch_all_solibs
solib_addresses
image_list_address
image_count
jGetSharedCacheInfo:{
dispatch_queue_offsets
pid:
parent-pid:
real-uid:
real-gid:
effective-uid:
effective-gid:
Unable to get the process cpu_type, making a best guess.
hw.cpu64bit_capable
hw.cpusubtype
ostype:
SIMULATOR_UDID=
ostype:ios;
system.privilege.taskport.debug
k-of-n
class
rule
is-admin
is-developer
authenticate-developer
hw.cputype
machdep.virtual_address_size
arm64
arm64_32
x86_64
<?xml version="1.0"?>
<target version="1.0">
</target>
[0x%16.16llx - 0x%16.16llx) permissions = %c%c%c: checking region for executable mach header
[0x%16.16llx - 0x%16.16llx): permissions = %c%c%c: skipping region
GetMachHeaderForMainExecutable(pid = %u, addr_size = %u, mach_header_addr = 0x%16.16llx)
GetMachHeaderForMainExecutable(pid = %u, addr_size = %u, mach_header_addr = 0x%16.16llx): mh = {
  magic = 0x%8.8x
  cpu = 0x%8.8x
  sub = 0x%8.8x
  filetype = %u
  ncmds = %u
  sizeofcmds = 0x%8.8x
  flags = 0x%8.8x }
GetMachHeaderForMainExecutable(pid = %u, addr_size = %u, mach_header_addr = 0x%16.16llx) -> this is the executable!!!
isFrontApp
executablePath
displayName
empty application property list.
serializing task list.
localhost
error: failed to create kqueue.
::listen or ::bind failed
error: kevent() failed.
error: Socket accept failed.
error: rejecting incoming connection from %s (expecting %s)
error: rejecting connection from %s (expecting %s)
Bad file descriptor passed in.
can't open file '%s'
::read ( %i, %p, %llu ) => %i
read: %s
::write ( socket = %i, buffer = %p, length = %llu) => %i
putpkt: %*s
sent: %*s
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
SIGHUP
SIGINT
SIGQUIT
SIGILL
SIGTRAP
SIGABRT
SIGEMT
SIGFPE
SIGKILL
SIGBUS
SIGSEGV
SIGSYS
SIGPIPE
SIGALRM
SIGTERM
SIGURG
SIGSTOP
SIGTSTP
SIGCONT
SIGCHLD
SIGTTIN
SIGTTOU
SIGIO
SIGXCPU
SIGXFSZ
SIGVTALRM
SIGPROF
SIGWINCH
SIGINFO
SIGUSR1
SIGUSR2
os_activity_diagnostic_for_pid
os_activity_iterate_processes
os_activity_iterate_breadcrumbs
os_activity_iterate_messages
os_activity_iterate_activities
os_trace_get_type
os_trace_copy_formatted_message
os_activity_for_thread
os_activity_for_task_thread
os_activity_messages_for_thread
B16@?0^{os_activity_breadcrumb_s=IQQ*}8
B16@?0^{os_activity_entry_s=QQQ**^v}8
B16@?0^{os_trace_message_s=QQQI^v***^vQ}8
B16@?0^{os_activity_process_s=^v^v^v^vQ**i}8
v20@?0^v8i16
::%s ( exc_port = 0x%4.4x, exc_type = %d ( %s ), exc_data = 0x%llx, exc_data_count = %d)
catch_mach_exception_raise_state
::%s ( exc_port = 0x%4.4x, thd_port = 0x%4.4x, tsk_port = 0x%4.4x, exc_type = %d ( %s ), exc_data[%d] = { 0x%llx, 0x%llx })
catch_mach_exception_raise_state_identity
catch_mach_exception_raise
  exc_msg { bits = 0x%8.8x size = 0x%8.8x remote-port = 0x%8.8x local-port = 0x%8.8x reserved = 0x%8.8x id = 0x%8.8x } 
reply_msg { bits = 0x%8.8x size = 0x%8.8x remote-port = 0x%8.8x local-port = 0x%8.8x reserved = 0x%8.8x id = 0x%8.8x }
 EXC_SOFT_SIGNAL( %i ( %s ))
unknown signal
 data[%llu] = {
0x%llx%c
::mach_msg ( msg->{bits = %#x, size = %u remote_port = %#x, local_port = %#x, reserved = 0x%x, id = 0x%x}, option = %#x, send_size = 0, rcv_size = %llu, rcv_name = %#x, timeout = %u, notify = %#x)
::mach_msg ( msg->{bits = %#x, size = %u remote_port = %#x, local_port = %#x, reserved = 0x%x, id = 0x%x}, option = %#x, send_size = %u, rcv_size = %u, rcv_name = %#x, timeout = %u, notify = %#x)
mach_exc_server returned zero...
::ptrace (request = PT_THUPDATE, pid = 0x%4.4x, tid = 0x%4.4x, signal = %i)
::mach_msg ( msg->{bits = %#x, size = %u, remote_port = %#x, local_port = %#x, reserved = 0x%x, id = 0x%x}, option = %#x, send_size = %u, rcv_size = %u, rcv_name = %#x, timeout = %u, notify = %#x)
::mach_msg() - send interrupted
error: mach_msg() returned an error when replying to a mach exception: error = %u
::mach_msg() - failed (child of task)
    state { task_port = 0x%4.4x, thread_port =  0x%4.4x, exc_type = %i (%s) ...
            exc_data: EXC_SOFT_SIGNAL (%i (%s))
            exc_data[%llu]: 0x%llx
MachException::PortInfo::Save ( task = 0x%4.4x )
::task_get_exception_ports ( task = 0x%4.4x, mask = 0x%x, maskCnt => %u, ports, behaviors, flavors )
MachException::PortInfo::Restore( task = 0x%4.4x )
EXC_BAD_ACCESS
EXC_BAD_INSTRUCTION
EXC_ARITHMETIC
EXC_EMULATION
EXC_SOFTWARE
EXC_BREAKPOINT
EXC_SYSCALL
EXC_MACH_SYSCALL
EXC_RPC_ALERT
EXC_CRASH
EXC_RESOURCE
EXC_GUARD
EXC_CORPSE_NOTIFY
EXC_CORPSE_VARIANT_BIT
_dyld_process_info_create
_dyld_process_info_for_each_image
_dyld_process_info_release
_dyld_process_info_get_cache
_dyld_process_info_get_platform
MachProcess::MachProcess()
MachProcess::~MachProcess()
thread = 0x%8.8x calling thread_abort_safely (tid) => %u (GetGPRState() for stop_count = %u)
macosx
maccatalyst
iossimulator
tvos
tvossimulator
watchos
watchossimulator
bridgeos
driverkit
ExecExtraSuspend
min_version_os_name
min_version_os_sdk
v32@?0Q8[16C]16r*24
shared_cache_base_address
shared_cache_uuid
shared_cache_private_cache
MachProcess::SetState(%s) ignoring new state since current state is exited
MachProcess::SetState(%s) ignoring redundant state change...
MachProcess::SetState(%s) upating state (previous state was %s), event_mask = 0x%8.8x
MachProcess::%s ( )
StartSTDIOThread
StartProfileThread
MachProcess::Resume ()
Resume() - task 0x%x is already running, ignoring...
Resume() - task 0x%x has state %s, can't continue...
MachProcess::Kill ()
MachProcess::Kill() DoSIGSTOP() state = %s
Sending ptrace PT_KILL to terminate inferior process pid %d.
MachProcess::Kill() DoSIGSTOP() ::ptrace (PT_KILL, pid=%u, 0, 0) => 0x%8.8x (%s)
Waited %u ms for process to be reaped (state = %s)
MachProcess::Interrupt() - sent %i signal to interrupt process
MachProcess::Interrupt() - failed to send %i signal to interrupt process
MachProcess::Interrupt() - previously sent an interrupt signal %i that hasn't been received yet, interrupt aborted
MachProcess::Interrupt() - process already stopped, no interrupt sent
MachProcess::Signal (signal = %d, timeout = %p)
MachProcess::Signal (signal = %d, timeout = %p) waiting for signal to stop process...
MachProcess::Signal (signal = %d, timeout = %p) state = %s
MachProcess::Signal (signal = %d, timeout = %p) not waiting...
kill (pid = %d, signo = %i)
MachProcess::SendEvent (event = %s) to pid: %d
MachProcess::DoSIGSTOP() state = %s
MachProcess::DoSIGSTOP() state = %s -- resuming process
MachProcess::DoSIGSTOP() state = %s -- sending SIGSTOP
MachProcess::Detach()
MachProcess::Detach() DoSIGSTOP() returned %s
::ptrace (PT_DETACH, %u, (caddr_t)1, 0)
Replying to exception %u...
Error replying to exception
MachProcess::PrivateResume() - task 0x%x resuming (with unhandled interrupt signal %i)...
MachProcess::PrivateResume() - task 0x%x resuming...
MachProcess::CreateBreakpoint ( addr = 0x%8.8llx, length = %llu, hardware = %i)
MachProcess::CreateBreakpoint ( addr = 0x%8.8llx, length = %llu) => %p
MachProcess::CreateWatchpoint ( addr = 0x%8.8llx, length = %llu, flags = 0x%8.8x, hardware = %i)
MachProcess::CreateWatchpoint ( addr = 0x%8.8llx, length = %llu) => %p
MachProcess::CreateWatchpoint ( addr = 0x%8.8llx, length = %llu) => FAILED
MachProcess::%s (remove = %d )
DisableAllBreakpoints
DisableAllWatchpoints
MachProcess::DisableBreakpoint ( addr = 0x%8.8llx, remove = %d )
MachProcess::DisableBreakpoint ( addr = 0x%8.8llx, remove = %d ) (hardware) => success
MachProcess::DisableBreakpoint ( addr = 0x%8.8llx, remove = %d ) memory write failed when restoring original opcode
MachProcess::DisableBreakpoint ( addr = 0x%8.8llx, remove = %d ) expected a breakpoint opcode but didn't find one.
MachProcess::DisableBreakpoint ( addr = 0x%8.8llx, remove = %d ) is not enabled
MachProcess::DisableBreakpoint ( addr = 0x%8.8llx, remove = %d ) => success
MachProcess::DisableBreakpoint ( addr = 0x%8.8llx, remove = %d ) : failed to restore original opcode
MachProcess::DisableBreakpoint ( addr = 0x%8.8llx, remove = %d ) : opcode changed
MachProcess::DisableBreakpoint: unable to disable breakpoint 0x%8.8llx
MachProcess::DisableBreakpoint: unable to read memory at 0x%8.8llx
MachProcess::DisableBreakpoint ( addr = 0x%8.8llx, remove = %d ) invalid breakpoint address
MachProcess::%s(addr = 0x%8.8llx, remove = %d)
DisableWatchpoint
MachProcess::DisableWatchpoint ( addr = 0x%8.8llx, remove = %d )
MachProcess::Disablewatchpoint ( addr = 0x%8.8llx, remove = %d ) (hardware) => success
MachProcess::DisableWatchpoint ( addr = 0x%8.8llx, remove = %d ) invalid watchpoint ID
MachProcess::EnableBreakpoint ( addr = 0x%8.8llx )
MachProcess::EnableBreakpoint ( addr = 0x%8.8llx ): breakpoint already enabled.
MachProcess::EnableBreakpoint ( addr = 0x%8.8llx ) : SUCCESS.
MachProcess::EnableBreakpoint ( addr = 0x%8.8llx ): breakpoint opcode verification failed.
MachProcess::EnableBreakpoint ( addr = 0x%8.8llx ): unable to read memory to verify breakpoint opcode.
MachProcess::EnableBreakpoint ( addr = 0x%8.8llx ): unable to write breakpoint opcode to memory.
MachProcess::EnableBreakpoint ( addr = 0x%8.8llx ): unable to read memory at breakpoint address.
MachProcess::EnableBreakpoint ( addr = 0x%8.8llx ) no software breakpoint opcode for current architecture.
MachProcess::EnableWatchpoint(addr = 0x%8.8llx)
MachProcess::EnableWatchpoint(addr = 0x%8.8llx): watchpoint already enabled.
MachProcess::ExceptionMessageReceived ( )
%s: %llu exception messages.
task_t MachProcess::ExceptionMessageBundleComplete()
exec: task changed from 0x%4.4x to 0x%4.4x
error: failed to read all_image_infos.infoArrayCount from 0x%8.8llx
arch changed from 0x%8.8x to 0x%8.8x
MachProcess::ExceptionMessageBundleComplete(): process successfully interrupted with signal %i
MachProcess::ExceptionMessageBundleComplete(): auto resuming due to unhandled interrupt signal %i
MachProcess::ExceptionMessageBundleComplete(): didn't get signal %i after MachProcess::Interrupt()
%s empty exception messages bundle (%llu exceptions).
MachProcess::%s("%s")
SetExitInfo
MachProcess::%s(NULL)
MachProcess::%s (<%llu> %s) ...
AppendSTDOUT
MachProcess::%s (&%p[%llu]) ...
GetAvailableSTDOUT
MachProcess::%s ( arg = %p ) thread starting...
STDIOThread
stdio monitoring thread
select (nfds, &read_fds, NULL, NULL, NULL) => %d
read (stdout_fd, ) => %zd   errno: %d (%s)
read (stdout_fd, ) => %zd  (reached EOF for child STDOUT)
read (stderr_fd, ) => %zd   errno: %d (%s)
read (stderr_fd, ) => %zd  (reached EOF for child STDERR)
MachProcess::%s (%p): thread exiting...
MachProcess::%s (%s) ...
SignalAsyncProfileData
GetAsyncProfileData
ProfileThread
performance profiling thread
No such process
MachProcess::AttachForDebug pid %d does not exist
error: failed to attach to pid %d
[LaunchAttach] END (%d) MachProcess::AttachForDebug failed to start exception thread attaching to pid %i: %s
[LaunchAttach] (%d) About to ptrace(PT_ATTACHEXC, %d)...
[LaunchAttach] (%d) Completed ptrace(PT_ATTACHEXC, %d) == %d
MachProcess::AttachForDebug failed to ptrace(PT_ATTACHEXC) pid %i: %s
[LaunchAttach] (%d) Done napping after ptrace(PT_ATTACHEXC)'ing
successfully attached to pid %d
[LaunchAttach] (%d) MachProcess::AttachForDebug error: failed to attach to pid %d
%s - process %d is already being debugged
[LaunchAttach] (%d) MachProcess::AttachForDebug pid %d is already being debugged
/System/Library/CoreServices/SystemVersion.plist
iOSSupportVersion
%s( path = '%s', argv = %p, envp = %p, launch_flavor = %u, disable_aslr = %d )
LaunchForDebug
Failed to launch: invalid launch flavor: %d
Could not get inferior's Mach exception port, sending ptrace PT_KILL and exiting.
successfully spawned pid %d
error: failed to attach to spawned pid %d (err = %i, errno = %i (%s))
%s ( path='%s', argv=%p, envp=%p, working_dir=%s, stdin=%s, stdout=%s stderr=%s, no-stdio=%i)
PosixSpawnChildForPTraceDebugging
::posix_spawnattr_init ( &attr )
::posix_spawnattr_setflags ( &attr, POSIX_SPAWN_START_SUSPENDED%s )
 | _POSIX_SPAWN_DISABLE_ASLR
posix_spawnattr_setarchpref_np
::posix_spawnattr_setarchpref_np ( &attr, 1, cpu_type = 0x%8.8x, cpu_subtype = 0x%8.8x, count => %llu )
::posix_spawnattr_setbinpref_np ( &attr, 1, cpu_type = 0x%8.8x, count => %llu )
::posix_spawn_file_actions_init ( &file_actions )
::posix_spawn_file_actions_addopen (&file_actions, filedes=STDIN_FILENO, path='%s')
::posix_spawn_file_actions_addopen (&file_actions, filedes=STDOUT_FILENO, path='%s')
::posix_spawn_file_actions_addopen (&file_actions, filedes=STDERR_FILENO, path='%s')
::posix_spawnp ( pid => %i, path = '%s', file_actions = %p, attr = %p, argv = %p, envp = %p )
MachProcess::%s ( ) pid=%i, cpu_type=0x%8.8x
::posix_spawn_file_actions_destroy ( &file_actions )
sysctl.proc_cputype
::task_suspend ( target_task = 0x%4.4x )
::task_resume double-resume after exec-start-stopped ( target_task = 0x%4.4x )
::task_resume ( target_task = 0x%4.4x )
MachTask::ReadMemory ( addr = 0x%8.8llx, size = %llu, buf = %p) => %llu bytes read
MachTask::WriteMemory ( addr = 0x%8.8llx, size = %llu, buf = %p) => %llu bytes written
MachTask::MemoryRegionInfo ( addr = 0x%8.8llx ) => %i  (start = 0x%8.8llx, size = 0x%8.8llx, permissions = %u)
num_cpu:
host_user_ticks:
host_sys_ticks:
host_idle_ticks:
elapsed_usec:
task_used_usec:
thread_used_id:
thread_used_usec:
thread_used_name:
total:
used:
anonymous:
phys_footprint:
mem_cap:
energy:
cpu_cap_p:
cpu_cap_t:
--end--;
[LaunchAttach] (%d) about to task_for_pid(%d)
::task_for_pid ( target_tport = 0x%4.4x, pid = %d, &task ) => err = 0x%8.8x (%s)
success
[LaunchAttach] MachTask::TaskPortForProcessID task_for_pid(%d) failed: %s
[LaunchAttach] (%d) successfully task_for_pid(%d)'ed
::task_info ( target_task = 0x%4.4x, flavor = TASK_BASIC_INFO, task_info_out => %p, task_info_outCnt => %u )
task_basic_info = { suspend_count = %i, virtual_size = 0x%8.8llx, resident_size = 0x%8.8llx, user_time = %f, system_time = %f }
MachTask::%s ( )
StartExceptionThread
failed to get exception port info
::task_set_exception_ports ( task = 0x%4.4x, exception_mask = 0x%8.8x, new_port = 0x%4.4x, behavior = 0x%8.8x, new_flavor = 0x%8.8x )
MachTask::%s (): task invalid, exception thread start failed.
::pthread_cancel ( thread = %p )
::pthread_join ( thread = %p, value_ptr = NULL)
::mach_port_deallocate ( task = 0x%4.4x, name = 0x%4.4x )
MachTask::%s ( arg = %p ) starting thread...
ExceptionThread
exception monitoring thread
thread cancelled...
interrupted, but task still valid, continuing...
task has exited...
got a timeout, continuing...
got some other error, do something about it??? nah, continuing for now...
Got an exec mach message but the pid of the new task and the pid of the old task do not match, something is wrong.
task port changed from 0x%4.4x to 0x%4.4x
MachTask::%s (%p): thread exiting...
DEBUGSERVER_ZOMBIE_ALLOCATIONS
_pthread_qos_class_decode
MachThread::MachThread ( process = %p, tid = 0x%8.8llx, seq_id = %u )
MachThread::~MachThread() for tid = 0x%8.8llx (%u)
MachThread::%s ( )
Suspend
::thread_suspend (%4.4x)
Resume
SetSuspendCountBeforeResume
::thread_resume (%4.4x)
RestoreSuspendCountAfterStop
Thread 0x%8.8llx: user=%f system=%f cpu=%d sleep_time=%d
running
stopped
waiting
uninter
halted 
[%3u] #%3u tid: 0x%8.8llx, pc: 0x%16.16llx, sp: 0x%16.16llx, user: %d.%6.6d, system: %d.%6.6d, cpu: %2d, policy: %2d, run_state: %2d (%s), flags: %2d, suspend_count: %2d (current %2d), sleep_time: %d
MachThread::SetState ( %s ) for tid = 0x%8.8llx
QOS_CLASS_USER_INTERACTIVE
User Interactive
QOS_CLASS_USER_INITIATED
User Initiated
QOS_CLASS_DEFAULT
Default
QOS_CLASS_UTILITY
Utility
QOS_CLASS_BACKGROUND
Background
QOS_CLASS_UNSPECIFIED
Unspecified
MachThreadList::UpdateThreadList (pid = %4.4x, update = %u) process stop count = %u
::task_threads ( task = 0x%4.4x, thread_list => %p, thread_list_count => %u )
MachThreadList::ProcessWillResume (pid = %4.4x) stop-id=%u, resuming newly discovered thread: 0x%8.8llx, thread-is-user-ready=%i)
MachVMMemory::PageSize task_info returned page size of 0x%x
MachVMMemory::PageSize task_info call failed to get page size, TASK_VM_INFO %d, TASK_VM_INFO_COUNT %d, kern return %d
::mach_vm_read ( task = 0x%4.4x, addr = 0x%8.8llx, size = %llu, data => %8.8p, dataCnt => %i )
::mach_vm_read ( task = 0x%4.4x, addr = 0x%8.8llx, size = %llu, data => %8.8p, dataCnt=>%i ) only read %u of %llu bytes
Failed to set read/write protections on region for address: [0x%8.8llx-0x%8.8llx)
Failed to get region for address: 0x%8.8llx
::mach_vm_write ( task = 0x%4.4x, addr = 0x%8.8llx, data = %8.8p, dataCnt = %u )
hw.memsize
MachVMRegion::%s: protections (%u) already sufficient for task 0x%4.4x at address 0x%8.8llx) 
SetProtections
::mach_vm_protect ( task = 0x%4.4x, addr = 0x%8.8llx, size = %llu, set_max = %i, prot = %u )
%s: Zero size for task 0x%4.4x at address 0x%8.8llx) 
::mach_vm_region_recurse ( task = 0x%4.4x, address => 0x%8.8llx, size => %llu, nesting_depth => %d, info => %p, infoCnt => %d) addr = 0x%8.8llx 
info = { prot = %u, max_prot = %u, inheritance = 0x%8.8x, offset = 0x%8.8llx, user_tag = 0x%8.8x, ref_count = %u, shadow_depth = %u, ext_pager = %u, share_mode = %u, is_submap = %d, behavior = %d, object_id = 0x%8.8x, user_wired_count = 0x%4.4x }
com.apple.dt.lldb
%{public}s
::thread_get_state (0x%4.4x, %u, &fpu, %u => 0x%8.8x
thread = 0x%4.4x calling thread_abort_safely (tid) => %u (SetGPRState() for stop_count = %u)
DNBArchImplI386::SetDBGState failed to set debug control register state: 0x%8.8x.
DNBArchImplI386::ThreadWillResume() GetDBGState() => 0x%8.8x.
DNBArchImplI386::ThreadWillResume() SetDBGState() => 0x%8.8x.
DNBArchImplI386::EnableHardwareBreakpoint( addr = 0x%8.8llx, size = %llu )
DNBArchImplI386::EnableHardwareBreakpoint( free slot = %u )
DNBArchImplI386::EnableHardwareBreakpoint() SetDBGState() => 0x%8.8x.
DNBArchImplI386::EnableHardwareBreakpoint( enabled at slot = %u)
DNBArchImplI386::EnableHardwareBreakpoint(addr = 0x%8.8llx, size = %llu) => all hardware breakpoint resources are being used.
DNBArchImplI386::DisableHardwareBreakpoint( %u )
%s inconsistent state detected, expected %d or %d, got: %d
StartTransForHWP
%s inconsistent state detected, expected %d, got: %d
RollbackTransForHWP
DNBArchImplI386::RollbackTransForHWP() SetDBGState() => 0x%8.8x.
DNBArchImplI386::EnableHardwareWatchpoint(addr = 0x%llx, size = %llu, read = %u, write = %u)
DNBArchImplI386::EnableHardwareWatchpoint() SetDBGState() => 0x%8.8x.
DNBArchImplI386::EnableHardwareWatchpoint(): All hardware resources (%u) are in use.
DNBArchImplI386::DisableHardwareWatchpoint( %u )
DNBArchImplI386::GetHardwareWatchpointHit() GetDBGState() => 0x%8.8x.
DNBArchImplI386::GetHardwareWatchpointHit() found => %u (addr = 0x%llx).
eflags
fctrl
fstat
ftag
fioff
fiseg
fooff
foseg
mxcsr
mxcsrmask
stmm0
stmm1
stmm2
stmm3
stmm4
stmm5
stmm6
stmm7
xmm0
xmm1
xmm2
xmm3
xmm4
xmm5
xmm6
xmm7
ymm0
ymm1
ymm2
ymm3
ymm4
ymm5
ymm6
ymm7
zmm0
zmm1
zmm2
zmm3
zmm4
zmm5
zmm6
zmm7
trapno
faultvaddr
i386 Registers
General Purpose Registers
Floating Point Registers
Exception State Registers
DNBArchImplX86_64::GetRegisterContextSize() - GPR = %zu, FPU = %u, EXC = %zu
DNBArchImplX86_64::GetRegisterContextSize() - GPR + FPU + EXC = %u
DNBArchImplI386::GetRegisterContext (buf = %p, len = %llu) error: GPR regs failed to read: %u 
DNBArchImplI386::GetRegisterContext (buf = %p, len = %llu) error: %s regs failed to read: %u
DNBArchImplI386::GetRegisterContext (buf = %p, len = %llu) error: EXC regs failed to read: %u
DNBArchImplI386::GetRegisterContext (buf = %p, len = %llu) => %llu
DNBArchImplI386::SetRegisterContext (buf = %p, len = %llu) error: GPR regs failed to write: %u
DNBArchImplI386::SetRegisterContext (buf = %p, len = %llu) error: %s regs failed to write: %u
DNBArchImplI386::SetRegisterContext (buf = %p, len = %llu) error: EXP regs failed to write: %u
DNBArchImplI386::SetRegisterContext (buf = %p, len = %llu) => %llu
DNBArchImplI386::SaveRegisterState () error: GPR regs failed to read: %u 
DNBArchImplI386::SaveRegisterState () error: %s regs failed to read: %u
DNBArchImplI386::RestoreRegisterState (save_id = %u) error: GPR regs failed to write: %u
DNBArchImplI386::RestoreRegisterState (save_id = %u) error: %s regs failed to write: %u
CPUHasAVX(): g_has_avx = %i (err = %i, os_ver = %s)
hw.optional.avx1_0
hw.optional.avx512f
::thread_get_state (0x%4.4x, %u, &gpr, %u) => 0x%8.8x
rax = %16.16llx rbx = %16.16llx rcx = %16.16llx rdx = %16.16llx
rdi = %16.16llx rsi = %16.16llx rbp = %16.16llx rsp = %16.16llx
 r8 = %16.16llx  r9 = %16.16llx r10 = %16.16llx r11 = %16.16llx
r12 = %16.16llx r13 = %16.16llx r14 = %16.16llx r15 = %16.16llx
rip = %16.16llx
flg = %16.16llx  cs = %16.16llx  fs = %16.16llx  gs = %16.16llx
::thread_get_state attempted fetch of avx512 fpu regctx failed, will try fetching avx
::thread_set_state (0x%4.4x, %u, &gpr, %u) => 0x%8.8x
rax = %16.16llx rbx = %16.16llx rcx = %16.16llx rdx = %16.16llx
rdi = %16.16llx rsi = %16.16llx rbp = %16.16llx rsp = %16.16llx
 r8 = %16.16llx  r9 = %16.16llx r10 = %16.16llx r11 = %16.16llx
r12 = %16.16llx r13 = %16.16llx r14 = %16.16llx r15 = %16.16llx
rip = %16.16llx
flg = %16.16llx  cs = %16.16llx  fs = %16.16llx  gs = %16.16llx
::thread_get_state attempted save of avx512 fpu regctx failed, will try saving avx regctx
DNBArchImplX86_64::SetDBGState failed to set debug control register state: 0x%8.8x.
DNBArchImplX86_64::ThreadWillResume() GetDBGState() => 0x%8.8x.
DNBArchImplX86_64::ThreadWillResume() SetDBGState() => 0x%8.8x.
DNBArchImplX86_64::NumSupportedHardwareBreakpoints
DNBArchImplX86_64::RollbackTransForHWP() SetDBGState() => 0x%8.8x.
DNBArchImplX86_64::EnableHardwareBreakpoint( addr = 0x%8.8llx, size = %llu )
DNBArchImplX86_64::EnableHardwareBreakpoint( free slot = %u )
DNBArchImplX86_64::EnableHardwareBreakpoint() SetDBGState() => 0x%8.8x.
DNBArchImplX86_64::EnableHardwareBreakpoint( enabled at slot = %u)
DNBArchImplX86_64::EnableHardwareBreakpoint(addr = 0x%8.8llx, size = %llu) => all hardware breakpoint resources are being used.
DNBArchImplX86_64::DisableHardwareBreakpoint( %u )
DNBArchImplX86_64::EnableHardwareWatchpoint(addr = 0x%llx, size = %llu, read = %u, write = %u)
DNBArchImplX86_64::EnableHardwareWatchpoint() SetDBGState() => 0x%8.8x.
DNBArchImplX86_64::EnableHardwareWatchpoint(): All hardware resources (%u) are in use.
DNBArchImplX86_64::DisableHardwareWatchpoint( %u )
DNBArchImplX86_64::GetHardwareWatchpointHit() GetDBGState() => 0x%8.8x.
DNBArchImplX86_64::GetHardwareWatchpointHit() found => %u (addr = 0x%llx).
r10d
r10w
r10l
r11d
r11w
r11l
r12d
r12w
r12l
r13d
r13w
r13l
r14d
r14w
r14l
r15d
r15w
r15l
rflags
xmm8
xmm9
xmm10
xmm11
xmm12
xmm13
xmm14
xmm15
ymm8
ymm9
ymm10
ymm11
ymm12
ymm13
ymm14
ymm15
zmm8
zmm9
zmm10
zmm11
zmm12
zmm13
zmm14
zmm15
zmm16
zmm17
zmm18
zmm19
zmm20
zmm21
zmm22
zmm23
zmm24
zmm25
zmm26
zmm27
zmm28
zmm29
zmm30
zmm31
x86_64 Registers
DNBArchImplX86_64::GetRegisterContext (buf = %p, len = %llu) error: GPR regs failed to read: %u 
DNBArchImplX86_64::GetRegisterContext (buf = %p, len = %llu) error: %s regs failed to read: %u
DNBArchImplX86_64::GetRegisterContext (buf = %p, len = %llu) error: EXC regs failed to read: %u
DNBArchImplX86_64::GetRegisterContext (buf = %p, len = %llu) => %u
DNBArchImplX86_64::SetRegisterContext (buf = %p, len = %llu) error: GPR regs failed to write: %u
DNBArchImplX86_64::SetRegisterContext (buf = %p, len = %llu) error: %s regs failed to write: %u
DNBArchImplX86_64::SetRegisterContext (buf = %p, len = %llu) error: EXP regs failed to write: %u
DNBArchImplX86_64::SetRegisterContext (buf = %p, len = %llu) => %llu
DNBArchImplX86_64::SaveRegisterState () error: GPR regs failed to read: %u 
DNBArchImplX86_64::SaveRegisterState () error: %s regs failed to read: %u
DNBArchImplX86_64::RestoreRegisterState (save_id = %u) error: GPR regs failed to write: %u
DNBArchImplX86_64::RestoreRegisterState (save_id = %u) error: %s regs failed to write: %u
%s() killed existing DarwinLog collector for pid %d.
StartCollectingForProcess
%s() cannot collect for pid %d: process not alive.
%s() invalid configuration, will not enable log collection
B20@?0^{os_activity_stream_entry_s=IiQ**QQ(?={os_activity_stream_common_s=QQQ**{timeval=qi}{timezone=ii}I}{os_activity_create_s=QQQ**{timeval=qi}{timezone=ii}I*QQ}{os_activity_transition_s=QQQ**{timeval=qi}{timezone=ii}IQ}{os_log_message_s=QQQ**{timeval=qi}{timezone=ii}I**Q*Q**ICB}{os_trace_message_v2_s=QQQ**{timeval=qi}{timezone=ii}I*^vQ^v}{os_activity_useraction_s=QQQ**{timeval=qi}{timezone=ii}I*B}{os_signpost_s=QQQ**{timeval=qi}{timezone=ii}I**Q*Q**QI[32Q]}{os_activity_statedump_s=QQQ**{timeval=qi}{timezone=ii}I*Q[1024c]})}8i16
v20@?0^{os_activity_stream_s=}8I16
received stream event: OS_ACTIVITY_STREAM_EVENT_STARTED, stream %p.
received stream event: OS_ACTIVITY_STREAM_EVENT_STOPPED, stream %p.
received stream event: OS_ACTIVITY_STREAM_EVENT_FAILED, stream %p.
received stream event: OS_ACTIVITY_STREAM_EVENT_CHUNK_STARTED, stream %p.
received stream event: OS_ACTIVITY_STREAM_EVENT_CHUNK_FINISHED, stream %p.
tearing down activity stream collector for %d
no stream to tear down for %d
received activity create: %s, creator aid %llu, unique_pid %llu(activity id=%llu, parent id=%llu)
received activity transition:new aid: %llu(activity id=%llu, parent id=%llu, tid %llu)
received log message: (activity id=%llu, parent id=%llu, tid %llu): format %s
<invalid-format>
message
subsystem
category
activity-chain
HandleStreamEntry: final call, error %d
DarwinLogCollector::%s(): removing %lu queued log entries
RemoveEvents
DarwinLogCollector::%s(): canceling activity stream %p
CancelActivityStream
/System/Library/PrivateFrameworks/LoggingSupport.framework/LoggingSupport
os_activity_stream_for_pid
os_activity_stream_resume
os_activity_stream_cancel
os_log_copy_formatted_message
os_activity_stream_set_event_handler
Found os_log SPI calls.
Failed to find os_log SPI calls.
Source-flag 'any-process' missing from configuration.
Source-flag 'info-level' missing from configuration.
Source-flag 'debug-level' missing from configuration.
Source-flag 'live-stream' missing from configuration.
m_activity_stream_flags = 0x%03x
filter-fall-through-accepts
Setting 'filter-fall-through-accepts' missing from configuration.
DarwinLog no-match rule: %s.
accept
reject
No 'filter-rules' config element, all log entries will use the no-match action (%s).
Filter 'accept' element missing.
Filter 'attribute' element missing.
Filter attribute '%s' unsupported.
Filter 'type' element missing.
Reading filter of type '%s'
regex
Regex filter missing 'regex' element.
regex for filter: "%s"
Invalid regex in filter: regex="%s", error=%s
match
Exact match filter missing 'exact_text' element.
activity
attempted to add same collector multiple times
LogFilterRegex: regex "%s" no match due to nullptr message.
LogFilterRegex: regex "%s" %s message "%s".
matches
does not match
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>CFBundleDevelopmentRegion</key>
    <string>English</string>
    <key>CFBundleIdentifier</key>
    <string>com.apple.debugserver</string>
    <key>CFBundleInfoDictionaryVersion</key>
    <string>6.0</string>
    <key>CFBundleName</key>
    <string>debugserver</string>
    <key>CFBundleVersion</key>
    <string>2</string>
</dict>
</plist>
F#p
init
processInfo
operatingSystemVersion
drain
dictionaryWithContentsOfFile:
objectForKey:
UTF8String
