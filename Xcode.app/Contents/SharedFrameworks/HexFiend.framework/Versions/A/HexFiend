@(#)PROGRAM:HexFiend  PROJECT:HexFiend_2-21512
]xEc
Y@)\
?yyyyyy
?[[[[[[
HFPrepareForChangeInFileNotification
HFChangeInFileByteArrayKey
HFChangeInFileModifiedRangesKey
HFChangeInFileShouldCancelKey
HFControllerDidChangePropertiesNotification
HFControllerChangedPropertiesKey
changesAreLocked
Monaco
HFRepresenters
HFBytesPerLine
HFBytesPerColumn
HFFont
HFLineHeight
HFAntialias
HFOverwriteMode
HFEditable
HFSelectable
endPropertyChangeTransaction passed token %lu, but expected token %lu
HFController.m
Invalid parameter not satisfying: %@
val > 0
Out of memory allocating %lu bytes
Bad max bytes: %lu (%lu)
Bad max range minus: %llu (%lu)
Unknown properties: %lx
Invalid transformation %ld
HFController
HFLayoutPosition
HFRepresenterView
Message %@ sent to instance of class %@, which does not implement that method
tiff
Unable to find image named %@.tiff
Couldn't load image at path %@
Unknown string encoding %lu in %s
HFStringEncodingIsSupersetOfASCII
fcntl(%d, F_NOCACHE, %d) returned error %d: %s
%s0 bytes%s
byte
kilobyte
megabyte
gigabyte
terabyte
petabyte
%san unbelievable number of bytes%s
.%llu
%s%llu%s %s%s%s
{%llu, %llu}
0123456789ABCDEF
HFBehavesAsTextField
HFRowBackgroundColors
HFRepresenter
HFData
HFVerticalOffset
HFHorizontalContainerOffset
HFDefaultLineHeight
HFBytesBetweenVerticalGuides
HFStartingLineBackgroundColorIndex
HFRepresenterTextView.m
glyphs != NULL && advances != NULL && restrictingToRanges != nil && bytePtr != NULL
0123456789ABCDEFabcdef
%1X%@
init sent to HFByteArray, but HFByteArray is an abstract class.  Instantiate one of its subclasses instead, like HFBTreeByteArray.
Lengths differ: %llu versus %llu
Inconsistency found at %llu (%02x versus %02x)
HFFullMemoryByteArray
change lock counter overflow for %@
change lock counter underflow for %@
Selector %@ sent to a locked byte array %@
init sent to HFByteArray, but HFByteArray is an abstract class.  Instantiate one of its subclasses instead.
HFStringEncoding
HFLineCountingRepresenterMinimumViewWidthChanged
HFMinimumDigitCount
HFLineNumberFormat
HFUseStringDrawingPath
%llu
%%0%lullX
Courier
<%@ : %@>
HFMaximizesBytesPerLine
HFStatusBarDefaultMode
HFStatusMode
%llu byte%s
0x%llX byte%s
Unknown status mode %lu
0x%llX
%@ out of %@
Byte %@ selected out of %@
%@ selected at offset %@ out of %@
%@ selected at multiple offsets out of %@
HFPrivateByteArrayPboardType
HFUUID
HFByteArray
HFModalProgress
Unable to load nib named %@
Copying 
 to the clipboard
Copy 
Large Clipboard
The copied data would occupy %@ if written to the clipboard.  This is larger than the system clipboard supports.  Do you want to copy only part of the data?
Cancel
The copied data would occupy %@ if written to the clipboard.  Performing this copy may take a long time.  Do you want to copy only part of the data?
Out of memory allocating %lu bytes
RollingHash_t hash_byte_array(HFByteArray *, HFRange, BOOL, HFRange, atomic_bool *)
HFByteArray_FindReplace.m
bytes != NULL
Hex Editor read error.
Unable to fstat64 file %@. %s.
File has already been closed.
Read result: %zd expected: %lu error: %s
Cancelled!
<%@: %p (%@ -> %@)>
Got err %d (%s)
Magic Start Node
HFCancelOff
HFCancelOn
<%@: %p (%llu)>
 INCONSISTENT 
<%@: %p (length: %llu%s) (children: %u) (
%s%@
<%@: %p (%u) (
HFBTree.m
func != NULL
leaf != nil
Unable to rebalance after deleting node %@
{%llu - %llu}
(empty tree)
<%@: %p>: %@
data
HFLayoutRepresenter
HFBackgroundColors
HFBordered
HFByteArrayMutableData
withRange:
initWithObjects:
addObserver:forKeyPath:options:context:
init
_sharedInit
fontWithName:size:
setFont:
_setController:
makeObjectsPerformSelector:withObject:
_removeUndoManagerNotifications
removeObserver:forKeyPath:
setColoringDelegate:
dealloc
encodeObject:forKey:
encodeInt64:forKey:
encodeDouble:forKey:
encodeBool:forKey:
decodeInt64ForKey:
decodeObjectForKey:
decodeDoubleForKey:
decodeBoolForKey:
arrayWithArray:
countByEnumeratingWithState:objects:count:
controllerDidChange:
initWithUnsignedInteger:
initWithObjects:forKeys:count:
defaultCenter
postNotificationName:object:userInfo:
count
beginPropertyChangeTransaction
objectAtIndex:
unsignedIntegerValue
removeObjectAtIndex:
notifyRepresentersOfChanges:
endPropertyChangeTransaction:
numberWithUnsignedInteger:
addObject:
_firePropertyChanges
raise:format:
_addPropertyChangeBits:
observeValueForKeyPath:ofObject:change:context:
removeObjectIdenticalTo:
invalidateRepresenter
removeAllObjects
contentsLength
lineHeight
copy
defaultLineHeightForFont:
_insertPropertyChangeFence
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
organizeAndMergeRanges:
array
HFRange
_shouldInvertSelectedRangesByAnchorRange
_invertedSelectedContentsRanges
length
changeGenerationCount
copyBytes:range:
initWithBytesNoCopy:length:freeWhenDone:
subdataWithRange:
_maximumDisplayedRangeSet
view
frame
maximumAvailableLinesForViewHeight:
totalLineCount
displayedLineRange
setDisplayedLineRange:
mutableCopy
replaceObjectAtIndex:withObject:
setArray:
isEqualToArray:
_updateDisplayedRange
_clipSelectedContentsRangesToLength:
_endTypingUndoCoalescingIfActive
removeObserver:name:object:
_undoNotification:
addObserver:selector:name:object:
_addUndoManagerNotifications
changesAreLocked
maximumBytesPerLineForViewWidth:
_updateBytesPerLine
byteArray
subarrayWithRange:
insertByteArray:inRange:
_setSingleSelectedContentsRange:
_minimumSelectionLocation
_maximumSelectionLocation
modifierFlags
_flattenSelectionRange
invalidate
firePulseTimer:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
deltaY
scrollByLines:
withRanges:count:
_telescopeSelectionRangeInDirection:
_ensureVisibilityOfLocation:
_removeRangeFromSelection:withCursorLocationIfAllSelectionRemoved:
_addRangeToSelection:
arrayWithCapacity:
undoManager
prepareWithInvocationTarget:
_commandInsertByteArrays:inRanges:withSelectionAction:
_registerCondemnedRangesForUndo:selectingRangesAfterUndo:
deleteBytesInRange:
maximizeVisibilityOfContentsRange:
unsignedLongLongValue
_commandReplaceBytesAfterBytesFromBeginning:upToBytesFromEnd:withByteArray:
invertWithByteArray:
rangeToReplace
deletedData
isRedoing
_performTypingUndo:
registerUndoWithTarget:selector:object:
canCoalesceOverwriteAtLocation:
initWithOverwrittenData:atAnchorLocation:
overwriteDataInRange:withByteArray:
canCoalesceAppendInRange:
canCoalesceDeleteInRange:
initWithReplacedData:atAnchorLocation:
appendDataOfLength:
deleteDataOfLength:withByteArray:
_moveDirectionDiscardingSelection:byAmount:
_shiftSelectionInDirection:byAmount:
_extendSelectionInDirection:byAmount:
bytesPerLine
moveInDirection:byByteCount:withSelectionTransformation:usingAnchor:
inOverwriteMode
_commandDeleteRanges:
arrayWithObject:
initWithUnsharedData:
insertByteSlice:inRange:
insertByteArray:replacingPreviousBytes:allowUndoCoalescing:
selectedContentsRanges
insertObject:atIndex:
reverseObjectEnumerator
nextObject
_activateTypingUndoCoalescingForReplacingRange:withDataOfLength:
_activateTypingUndoCoalescingForOverwritingRange:
_overwriteModeCoreInsertByteArray:replacingPreviousBytes:allowUndoCoalescing:outRangeToRemoveFromSelection:
_insertionModeCoreInsertByteArray:replacingPreviousBytes:allowUndoCoalescing:outNewSingleSelectedRange:
deleteSelection
path
initWithPath:error:
valueWithPointer:
rangesOfFileModifiedIfSavedToFile:
initWithObjectsAndKeys:
prepareForChangeInFile:fromWritingByteArray:
encodeWithCoder:
initWithCoder:
representers
addRepresenter:
removeRepresenter:
invalidateController
font
shouldAntialias
setShouldAntialias:
setBytesPerColumn:
bytesPerColumn
dataForRange:
setByteArray:
setUndoManager:
editable
setEditable:
representer:changedProperties:
byteArrayForSelectedContentsRanges
minimumSelectionLocation
maximumSelectionLocation
beginSelectionWithEvent:forByteIndex:
continueSelectionWithEvent:forByteIndex:
endSelectionWithEvent:forByteIndex:
selectionPulseAmount
pulseSelection
scrollWithScrollEvent:
setSelectedContentsRanges:
selectAll:
_commandValueObjectsReplaceBytesAfterBytesFromBeginning:upToBytesFromEnd:withByteArray:
moveInDirection:withGranularity:andModifySelection:
moveToLineBoundaryInDirection:andModifySelection:
replaceByteArray:
insertData:replacingPreviousBytes:allowUndoCoalescing:
deleteDirection:
setInOverwriteMode:
requiresOverwriteMode
coloringDelegate
displayedContentsRange
currentPropertyChangeToken
additionalPendingTransactions
propertiesToUpdateInCurrentTransaction
selectionAnchor
selectionAnchorRange
undoCoalescer
pulseSelectionStartTime
pulseSelectionCurrentTime
pulseSelectionTimer
cachedRange
cachedData
cachedGenerationIndex
_hfflags
_coloringDelegate
T@"<HFTextColoringDelegate>",&,V_coloringDelegate
createView
initializeView
defaultLayoutPosition
setLayoutPosition:
encodePoint:forKey:
decodePointForKey:
description
controller
minimumViewWidthForBytesPerLine:
representerChangedProperties:
layoutPosition
imageNamed:
bundleForClass:
pathForResource:ofType:
initByReferencingFile:
isValid
setName:
arrayWithObjects:count:
getRanges:fromArray:
copyWithZone:
isEqual:
hash
range
dataWithLength:
mutableBytes
characterAtIndex:
setLength:
bytes
initWithBytesNoCopy:length:encoding:freeWhenDone:
stringWithFormat:
alternatingContentBackgroundColors
_textViewClass
initWithRepresenter:
setAutoresizingMask:
entireDisplayedRange
setData:
setVerticalOffset:
setStartingLineBackgroundColorIndex:
updateText
updateSelectedRanges
updateSelectionPulse
valueWithRange:
byteIndexForCharacterIndex:
copySelectedBytesToPasteboard:
unpackByteArrayFromPasteboard:
availableTypeFromArray:
stringForType:
dataFromPasteboardString:
blackColor
selectedTextBackgroundColor
byteArrayDataStringType
scrollWheel:
displayedSelectedContentsRanges
beginSelectionWithEvent:forCharacterIndex:
continueSelectionWithEvent:forCharacterIndex:
endSelectionWithEvent:forCharacterIndex:
insertText:
cutSelectedBytesToPasteboard:
canPasteFromPasteboard:
canCut
pasteBytesFromPasteboard:
textColor
setTextColor:
textSelectionColor
setTextSelectionColor:
rowBackgroundColors
setRowBackgroundColors:
setBehavesAsTextField:
behavesAsTextField
setString:
setNeedsDisplay:
layoutManager
numberOfGlyphs
getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:
representer
window
isKeyWindow
firstResponder
rangeValue
verticalOffset
horizontalContainerInset
advancePerByte
advanceBetweenColumns
advancePerColumn
originForCharacterAtByteIndex:
setNeedsDisplayInRect:
caretRect
_shouldHaveCaretTimer
_blinkCaret:
timerWithTimeInterval:target:selector:userInfo:repeats:
currentRunLoop
addTimer:forMode:
enclosingMenuItem
_updateCaretTimerWithFirstResponderStatus:
_updateCaretTimer
bounds
addIndexesInRange:
indexSet
_addLinesFromRanges:count:toIndexSet:
_linesWithParityChangesFromRanges:count:toRanges:count:intoIndexSet:
_indexSetOfLinesNeedingRedrawWhenChangingSelectionFromRanges:toRanges:
firstIndex
_rectForLineRange:
indexGreaterThanIndex:
_forceCaretOnIfHasCaretTimer
yellowColor
currentContext
CGContext
bezierPathWithRoundedRect:xRadius:yRadius:
addClip
colorWithCalibratedRed:green:blue:alpha:
initWithStartingColor:endingColor:
drawInRect:angle:
userInfo
alphaValue
close
setAlphaValue:
removeChildWindow:
setFrame:display:animate:
fadePulseWindowTimer:
lastObject
convertRect:toView:
convertRectToScreen:
initWithContentRect:styleMask:backing:defer:
setReleasedWhenClosed:
setOpaque:
contentView
initWithFrame:
setContentView:
initWithSize:
setCacheMode:
lockFocus
drawPulseBackgroundInRect:
screenFont
drawTextWithClip:restrictingToTextInRanges:
unlockFocus
setImage:
addChildWindow:ordered:
superview
shouldHaveForegroundHighlightColor
colorWithCalibratedWhite:alpha:
pulseSelectionTimer:
becomeFirstResponder
showsFocusRing
hasVisibleDisplayedSelectedContentsRange
resignFirstResponder
clearColor
backgroundColorForLine:
totalAdvanceForBytesInRange:
extractGlyphsForBytes:count:offsetIntoLine:intoArray:advances:resultingGlyphCount:
data
ascender
maximumGlyphCountForByteCount:
CGColor
colorForBytesStartingAtIndex:resultingColor:chunkLength:
extractGlyphsForBytes:range:intoArray:advances:withInclusionRanges:initialTextOffset:resultingGlyphCount:
drawGlyphs:withAdvances:count:
saveGraphicsState
restoreGraphicsState
backgroundColorForEmptySpace
drawFocusRingWithClip:
_drawLineBackgrounds:withLineHeight:maxLines:
drawSelectionIfNecessaryWithClip:
drawVerticalGuideLines:
drawCaretIfNecessaryWithClip:
setFrameSize:
name
isEqualToString:
_windowDidChangeKeyStatus:
viewDidMoveToWindow
indexOfCharacterAtPoint:
locationInWindow
convertPoint:fromView:
characterAtPointForSelection:
distantFuture
nextEventMatchingMask:untilDate:inMode:dequeue:
sendEvent:
drain
interpretKeyEvents:
isEditable
string
setHiddenUntilMouseMoves:
insertTabIgnoringFieldEditor:
performSelector:withObject:
handleCommand:
doCommandBySelector:
generalPasteboard
action
cut:
copy:
_selectionIsNonEmpty
paste:
_glyphsForString:withGeneratingTextView:glyphs:
_lineRangeForContentsRanges:
acceptsFirstResponder
setHorizontalContainerInset:
setBytesBetweenVerticalGuides:
bytesBetweenVerticalGuides
startingLineBackgroundColorIndex
isFlipped
drawRect:
availableLineCount
isWithinMouseDown
viewWillMoveToWindow:
mouseDown:
mouseDragged:
mouseUp:
keyDown:
_pasteboardOwnerStringTypeWritingSelector
validateMenuItem:
cachedSelectedRanges
defaultLineHeight
pulseStartTime
pulseTimer
caretTimer
pulseWindow
pulseWindowBaseFrameInScreenCoordinates
lastDrawnCaretRect
caretRectToDraw
_hftvflags
setBackgroundLayoutEnabled:
addLayoutManager:
initWithFormat:
mutableString
addAttribute:value:range:
invalidateLayoutForCharacterRange:actualCharacterRange:
advancementForGlyph:
generateGlyphTable
glyphTable
ligatureTable
glyphAdvancement
spaceAdvancement
setMaxProgress:
setString:forType:
writeDataInBackgroundToPasteboard:ofLength:forType:trackingProgress:
stringLengthForDataLength:
characterSetWithCharactersInString:
rangeOfCharacterFromSet:
_canInsertText:
_insertionShouldDeleteLastNybble
getBytes:range:
_clearOmittedNybble
ownPasteboard:forByteArray:withTypes:
setBytesPerLine:
omittedNybbleLocation
unpartneredLastNybble
byteSlices
objectEnumerator
incrementGenerationOrRaiseIfLockedForSelector:
byteSliceEnumerator
initWithData:
_byteSearchSingle:inRange:forwards:trackingProgress:
_byteSearchBoyerMoore:inRange:forwards:trackingProgress:
_byteSearchRollingHash:inRange:forwards:trackingProgress:
_debugIsEqual:
willChangeValueForKey:
didChangeValueForKey:
mutableCopyWithZone:
indexOfBytesEqualToBytes:inRange:searchingForwards:trackingProgress:
_debugIsEqualToData:
incrementChangeLockCounter
decrementChangeLockCounter
changeLockCounter
subsliceWithRange:
constructNewByteSlicesAboutRange:first:second:
byteSliceByAppendingSlice:
isSourcedFromFile
sourceRangeForFile:
replaceBytesInRange:withBytes:length:
turnOffLigatures:
coveredCharacterSet
initWithBytes:length:encoding:
characterIsMember:
stringWithCharacters:length:
encoding
setEncoding:
replacementGlyph
defaultCStringEncoding
dataUsingEncoding:allowLossyConversion:
stringEncoding
scrollerWidthForControlSize:scrollerStyle:
setTarget:
setContinuous:
setEnabled:
scrollerDidChangeValue:
setAction:
setDoubleValue:
setKnobProportion:
addSubview:
setFrameOrigin:
hitPart
visibleLines
doubleValue
floatValue
scrollByKnobToValue:
controlSize
updateScrollerValue
accomodateGrowBox
_scroller
setFrame:
moveRight:
moveLeft:
moveForward:
moveBackward:
moveLeftAndModifySelection:
moveRightAndModifySelection:
moveForwardAndModifySelection:
moveBackwardAndModifySelection:
deleteForward:
deleteBackward:
moveToBeginningOfLine:
moveToEndOfLine:
moveToBeginningOfLineAndModifySelection:
moveToEndOfLineAndModifySelection:
scrollPageDown:
scrollPageUp:
selectNextKeyView:
selectPreviousKeyView:
moveUp:
moveDown:
moveUpAndModifySelection:
moveDownAndModifySelection:
moveWordForward:
moveWordBackward:
moveWordForwardAndModifySelection:
moveWordBackwardAndModifySelection:
moveWordRight:
moveWordLeft:
moveWordRightAndModifySelection:
moveWordLeftAndModifySelection:
deleteWordForward:
deleteWordBackward:
delete:
deleteToBeginningOfLine:
deleteToEndOfLine:
deleteToBeginningOfParagraph:
deleteToEndOfParagraph:
moveToBeginningOfDocument:
moveToEndOfDocument:
moveToBeginningOfDocumentAndModifySelection:
moveToEndOfDocumentAndModifySelection:
moveToBeginningOfParagraph:
moveToEndOfParagraph:
moveToBeginningOfParagraphAndModifySelection:
moveToEndOfParagraphAndModifySelection:
pageDown:
pageUp:
centerSelectionInVisibleArea:
insertTab:
insertBacktab:
scrollLineUp:
scrollLineDown:
transpose:
transposeWords:
selectParagraph:
selectLine:
selectWord:
indent:
insertParagraphSeparator:
insertNewlineIgnoringFieldEditor:
insertLineBreak:
insertContainerBreak:
changeCaseOfLetter:
uppercaseWord:
lowercaseWord:
capitalizeWord:
deleteBackwardByDecomposingPreviousCharacter:
yank:
complete:
setMark:
deleteToMark:
selectToMark:
swapWithMark:
updateFontAndLineHeight
setRepresenter:
postNotificationName:object:
replaceCharactersInRange:withString:
glyphAtIndex:isValidIndex:
getAdvancements:forGlyphs:count:
postMinimumViewWidthChangedNotification
setLineHeight:
updateDigitAdvanceWithFont:
setLineNumberFormat:
setLineRangeToDraw:
startingLineNumber
digitsRequiredToDisplayLineNumber:inFormat:
preferredWidth
updateLineNumberFormat
updateMinimumViewWidth
updateBytesPerLine
updateLineRangeToDraw
setStartingLineNumber:
lineNumberFormat
cycleLineNumberFormat
setMinimumDigitCount:
minimumDigitCount
digitCount
digitsToRepresentContentsLength
digitAdvance
setLineFragmentPadding:
containerSize
setContainerSize:
addTextContainer:
_sharedInitLineCountingView
textBackgroundColor
blendedColorWithFraction:ofColor:
secondaryLabelColor
getCString:maxLength:encoding:
getLineNumberFormatString:length:
setAttributes:range:
lineFragmentUsedRectForGlyphAtIndex:effectiveRange:
drawGlyphsForGlyphRange:atPoint:
defaultParagraphStyle
setAlignment:
setLineBreakMode:
drawInRect:withAttributes:
characterCountForLineRange:
beginEditing
createLineStringForRange:
deleteCharactersInRange:
endEditing
setMinimumLineHeight:
setMaximumLineHeight:
initWithString:attributes:
initTextCell:
setAttributedStringValue:
drawWithFrame:inView:
purpleColor
updateLayoutManagerWithLineIndex:lineCount:
drawLineNumbersWithClipLayoutManagerPerLine:
drawLineNumbersWithClipStringDrawing:
drawLineNumbersWithClipFullLayoutManager:
drawLineNumbersWithClipSingleStringDrawing:
drawLineNumbersWithClipSingleStringCellDrawing:
drawGradientWithClip:
drawDividerWithClip:
drawLineNumbersWithClip:
fontName
canUseStringDrawingPathForFont:
lineRangeToDraw
textStorage
textContainer
textAttributes
storedLineIndex
storedLineCount
useStringDrawingPath
_startingLineNumber
TQ,V_startingLineNumber
autoresizingMask
sortedArrayUsingFunction:context:
convertSize:toView:
convertSize:fromView:
arraysOfLayoutInfos
_anyLayoutInfoIsVerticallyResizable:
_computeMinHeightForLayoutInfos:
_addVerticalHeight:andOffset:toLayoutInfos:
boundsRectForLayout
_computeBytesPerLineForArraysOfLayoutInfos:forLayoutInRect:
_applyYLocation:andMinHeight:toInfos:
_layoutInfosHorizontally:inRect:withBytesPerLine:
_distributeVerticalSpace:toArraysOfLayoutInfos:
setPostsFrameChangedNotifications:
frameChanged:
performLayout
removeFromSuperview
setMaximizesBytesPerLine:
maximizesBytesPerLine
minimumViewWidthForLayoutInProposedWidth:
labelFontOfSize:
_sharedInitStatusBarView
cellSize
lightGrayColor
statusMode
setStatusMode:
standardUserDefaults
setInteger:forKey:
cell
cellAttributes
integerForKey:
describeOffset:
describeLength:
describeOffsetExcludingApproximate:
stringForEmptySelectionAtOffset:length:
stringForSingleByteSelectionAtOffset:length:
stringForSingleRangeSelection:length:
stringForMultipleSelectionsWithLength:length:
updateString
_copyByteArray
anchorPoint
actionPoint
byteArrayWasCopied
prepareCommonPasteboardsForChangeInFileNotification:
declareTypes:owner:
changeInFileNotification:
initWithPasteboard:forByteArray:withTypes:
objectForKey:
uuid
unsignedLongValue
propertyListForType:
_unpackByteArrayFromDictionary:
pointerValue
object
pasteboardWithName:
clearDependenciesOnRanges:inFile:
tearDownPasteboardReferenceIfExists
backgroundMoveDataFinished:
performSelectorOnMainThread:withObject:waitUntilDone:
beginModalSessionForBackgroundCopyOperation:
cancelPreviousPerformRequestsWithTarget:selector:object:
stopModalWithCode:
otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:
postEvent:atStart:
runModalForWindow:
amountToCopyForDataLength:stringLength:
loadNibNamed:owner:
setStringValue:
setProgressIndicator:
beginTrackingProgress
backgroundMoveDataToPasteboard:
detachNewThreadSelector:toTarget:withObject:
performSelector:withObject:afterDelay:inModes:
runMode:beforeDate:
endTrackingProgress
requestCancel:
numberWithUnsignedLong:
dictionaryWithObjectsAndKeys:
setPropertyList:forType:
moveDataWithProgressReportingToPasteboard:forType:
setData:forType:
stringByAppendingString:
initialize
moveDataToPasteboardWithProgressReporting:userInfo:
pasteboardChangedOwner:
pasteboard:provideDataForType:
pasteboard
progressTrackingWindow
progressTrackingIndicator
progressTrackingDescriptionTextField
progressTracker
dataAmountToCopy
retainedSelfOnBehalfOfPboard
backgroundCopyOperationFinished
didStartModalSessionForBackgroundCopyOperation
_copyBytes:range:forwards:inEnclosingRange:
_byteSearchNaive:inRange:forwards:trackingProgress:
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
fileSystemRepresentation
sharedInitWithPath:error:
initWritableWithPath:error:
finalize
initWithPath:
initWritableWithPath:
readBytes:length:from:
writeBytes:length:to:
setLength:error:
fileDescriptor
device
fileLength
inode
isWritable
errorWithDomain:code:userInfo:
initWithFile:offset:length:
initWithFile:
fileReference
offset
positionLayoutView
usesHexArea
makeFirstResponder:
usesTextArea
target
sendAction:to:
indexOfObjectIdenticalTo:
usesRepresenter:
resizeSubviewsWithOldSize:
insertNewline:
objectValue
setObjectValue:
setUsesHexArea:
setUsesTextArea:
dataController
layoutRepresenter
hexRepresenter
textRepresenter
progressTracker:didChangeProgressTo:
_updateProgress:
startAnimation:
stopAnimation:
noteFinished:
progressTrackerDidFinish:
maxProgress
progressIndicator
setDelegate:
delegate
setUserInfo:
currentProgress
cancelRequested
progressTimer
lastSetValue
initWithBytes:length:
initWithData:offset:length:
initWithSharedData:offset:length:tail:tailLength:
appendBytes:length:
inlineTailLength
inlineTail
addObjectsFromArray:
costToWrite
stronglyConnectedComponentsForObjects:
chainedOperationWithInternalOperations:
topologicallySortObjects:
writeToFile:trackingProgress:error:
targetRange
setObject:forKey:
keyEnumerator
externalOperationWithByteSlice:targetRange:
identityOperationWithByteSlice:targetRange:
internalOperationWithByteSlice:sourceRange:targetRange:
sourceRange
addDependency:forObject:
dependenciesForObject:
initWithLength:
initWithTargetRange:
initWithByteSlice:targetRange:
slice
sourceLocationForTargetLocation:
suggestedAllocationLengthForMinimum:maximum:
allocateMemoryOfLength:
targetLocationForSourceLocation:
initWithByteSlice:sourceRange:targetRange:
hasRemainingTargetRange
createQueueEntryWithBuffer:ofLength:forFile:trackingProgress:
addQueueEntryWithContext:
amountOfOverlapForEntry:
addQueueEntriesOverlappedByEntry:withContext:
remainingTargetRanges
initWithArray:
queueUpEntriesOverlappedByEntry:withIncompleteOperations:context:
applyQueueEntry:toFile:trackingProgress:
freeMemory:ofLength:
initWithInternalOperations:
internalOperations
totalAllocatedMemory
maximumAllocatedMemory
containsObject:
initWithCString:encoding:
removeLastObject
object:hasDependency:
graph
containedObjects
source
softMaxAllocatedMemory
file
queue
drawInRect:fromRect:operation:fraction:
image
setAlternateImage:
initWithRandomDataLength:
start
randomizer
initWithRepeatingDataLength:
shortDescription
subtreeLength
left
right
children
appendFormat:
appendString:
initWithLeaf:
checkIntegrityOfCachedLengths
checkIntegrityOfBTreeStructure
insertEntry:atOffset:
entryContainingOffset:beginningOffset:
removeAllEntries
removeEntryAtOffset:
entryEnumerator
allEntries
applyFunction:toEntriesStartingAtOffset:withUserInfo:
depth
root
currentLeaf
childIndex
componentsJoinedByString:
fastPathInsertByteSlice:atOffset:
insertByteSlice:atOffset:
btree
_HFControllerDidChangeProperties:
hexTextView:didChangeProperties:
infoForBinding:
allowsReverseTransformation
reverseTransformedValue:
setValue:forKeyPath:
_sharedInitHFTextViewWithMutableData:
_desiredFrameForLayoutView
performSelector:withObject:afterDelay:
initWithByteArray:
exposeBinding:
backgroundColors
setBackgroundColors:
setBordered:
bordered
scrollRepresenter
_getRetainedBacking
getBytes:
getBytes:length:
serializedData
HFController
NSCoding
HFRepresenter
HFRangeWrapper
NSCopying
HFTextRepresenter
HFRepresenterTextView
HFRepresenterHexTextView
HFHexPasteboardOwner
HFHexTextRepresenter
HFByteArray
NSMutableCopying
HFByteSlice
HFFullMemoryByteSlice
HFFullMemoryByteArray
HFRepresenterStringEncodingTextView
HFStringEncodingPasteboardOwner
HFStringEncodingTextRepresenter
HFVerticalScrollerRepresenter
HFCustomScroller
HFKeyBinding
HFLineCountingRepresenter
HFLineCountingView
HFRepresenterLayoutViewInfo
HFLayoutRepresenter
HFStatusBarView
HFStatusBarRepresenter
HFControllerCoalescedUndo
HFPasteboardOwner
HFFindReplace
HFFileReference
HFFileByteSlice
HFTextField
HFProgressTracker
HFSharedMemoryByteSlice
HFileWriting
HFByteSliceFileOperationSimple
HFByteSliceFileOperationIdentity
HFByteSliceFileOperationExternal
HFByteSliceFileOperationInternal
HFByteSliceFileOperationChained
HFByteSliceFileOperation
HFObjectGraph
HFByteSliceFileOperationQueueEntry
HFByteSliceFileOperationContext
HFTextSelectionPulseView
HFCancelButton
HFRandomDataByteSlice
HFRepeatingDataByteSlice
HFBTreeNode
HFBTreeBranch
HFBTreeLeaf
HFBTree
HFBTreeEnumerator
HFBTreeByteArray
HFTextView
HFByteArrayProxiedData
c32@0:8@16@24
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v16@0:8
@16@0:8
v24@0:8Q16
Q16@0:8
v48@0:8@16@24@32^v40
{?=QQ}16@0:8
{?=DD}16@0:8
v48@0:8{?=DD}16
d16@0:8
c16@0:8
v20@0:8c16
v32@0:8{?=QQ}16
@32@0:8{?=QQ}16
v40@0:8*16{?=QQ}24
v32@0:8@16Q24
{?=QQ}24@0:8q16
v32@0:8D16
v40@0:8{?=QQ}16Q32
v32@0:8q16Q24
c28@0:8@16c24
v36@0:8@16@24i32
v40@0:8Q16Q24@32
v40@0:8@16@24@32
v44@0:8q16Q24q32c40
v36@0:8q16q24c32
v28@0:8q16c24
c36@0:8@16Q24c32
c44@0:8@16Q24c32^{?=QQ}36
v24@0:8q16
@"NSMutableArray"
@"HFByteArray"
{?="location"Q"length"Q}
{?="location"D"length"D}
@"NSFont"
@"NSUndoManager"
@"HFControllerCoalescedUndo"
@"NSTimer"
@"NSData"
{?="antialias"b1"overwriteMode"b1"editable"b1"selectable"b1"selectionInProgress"b1"shiftExtendSelection"b1"commandExtendSelection"b1"reserved1"b25"reserved2"b32}
@"<HFTextColoringDelegate>"
{CGPoint=dd}16@0:8
Q24@0:8d16
d24@0:8Q16
d24@0:8d16
v32@0:8{CGPoint=dd}16
@"HFController"
{CGPoint="x"d"y"d}
@32@0:8r^{?=QQ}16Q24
v32@0:8^{?=QQ}16@24
@24@0:8^{_NSZone=}16
c24@0:8@16
#16@0:8
Q24@0:8Q16
@"NSArray"
@"NSColor"
Q40@0:8@16@24^S32
{CGPoint=dd}24@0:8Q16
Q32@0:8{CGPoint=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{_NSRange=QQ}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{_NSRange=QQ}16
v56@0:8r^{_NSRange=QQ}16Q24r^{_NSRange=QQ}32Q40@48
v40@0:8r^{_NSRange=QQ}16Q24@32
@32@0:8@16@24
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8d16
@24@0:8Q16
v64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48Q56
v40@0:8^S16^{CGSize=dd}24Q32
v64@0:8r*16Q24Q32^S40^{CGSize=dd}48^Q56
v80@0:8r*16{_NSRange=QQ}24^S40^{CGSize=dd}48@56^d64^Q72
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
v32@0:8{CGSize=dd}16
d32@0:8{_NSRange=QQ}16
c24@0:8:16
v24@0:8:16
:16@0:8
@"HFTextRepresenter"
@"NSWindow"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
{?="antialias"b1"editable"b1"caretVisible"b1"registeredForAppNotifications"b1"withinMouseDown"b1"receivedMouseUp"b1"reserved1"b26"reserved2"b32}
[16S]
[256S]
v48@0:8@16Q24@32@40
v40@0:8@16{?=QQ}24
Q52@0:8@16{?=QQ}24c40@44
v48@0:8{?=QQ}16^@32^@40
{?=QQ}24@0:8@16
@"NSMutableData"
@"NSScroller"
Q32@0:8Q16Q24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8*16Q24
Q32@0:8{?=QQ}16
v32@0:8Q16Q24
@"NSLayoutManager"
@"NSTextStorage"
@"NSTextContainer"
@"NSDictionary"
@"HFLineCountingRepresenter"
@"HFRepresenter"
@"NSView"
d24@0:8@16
v40@0:8d16d24@32
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24Q56
Q56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
c40@0:8d16d24@32
v32@0:8d16@24
@"NSCell"
{CGSize="width"d"height"d}
@"HFStatusBarRepresenter"
@32@0:8Q16Q24
@40@0:8{?=QQ}16Q32
@32@0:8@16Q24
c32@0:8{?=QQ}16
c24@0:8Q16
v40@0:8{?=QQ}16@32
v32@0:8Q16@24
@40@0:8@16@24@32
v32@0:8:16@24
v32@0:8@16@24
@"NSPasteboard"
@"NSProgressIndicator"
@"NSTextField"
@"HFProgressTracker"
v60@0:8*16{?=QQ}24c40{?=QQ}44
Q48@0:8C16{?=QQ}20c36@40
@32@0:8@16^@24
v40@0:8*16Q24Q32
i40@0:8r*16Q24Q32
c32@0:8Q16^@24
@40@0:8@16Q24Q32
@"HFFileReference"
@"HFLayoutRepresenter"
@"HFHexTextRepresenter"
@"HFStringEncodingTextRepresenter"
@56@0:8@16Q24Q32r^v40Q48
[15C]
c40@0:8@16@24^@32
@40@0:8@16{?=QQ}24
@"HFByteSlice"
i40@0:8@16@24^@32
@56@0:8@16{?=QQ}24{?=QQ}40
@48@0:8*16Q24@32@40
Q24@0:8@16
i40@0:8@16@24@32
^{__CFDictionary=}
^v24@0:8Q16
v32@0:8^v16Q24
@"NSImage"
@"HFBTreeNode"
[10@]
@32@0:8Q16^Q24
v40@0:8^?16Q24^v32
@"HFBTreeLeaf"
c32@0:8@16Q24
@"HFBTree"
@"HFVerticalScrollerRepresenter"
r^v16@0:8
v24@0:8^v16
v40@0:8^v16{_NSRange=QQ}24
@(#)PROGRAM:HexFiend  PROJECT:HexFiend_2-21512
]xEc
?yyyyyy
?[[[[[[
HFPrepareForChangeInFileNotification
HFChangeInFileByteArrayKey
HFChangeInFileModifiedRangesKey
HFChangeInFileShouldCancelKey
HFControllerDidChangePropertiesNotification
HFControllerChangedPropertiesKey
changesAreLocked
Monaco
HFRepresenters
HFBytesPerLine
HFBytesPerColumn
HFFont
HFLineHeight
HFAntialias
HFOverwriteMode
HFEditable
HFSelectable
endPropertyChangeTransaction passed token %lu, but expected token %lu
HFController.m
Invalid parameter not satisfying: %@
val > 0
Out of memory allocating %lu bytes
Bad max bytes: %lu (%lu)
Bad max range minus: %llu (%lu)
Unknown properties: %lx
Invalid transformation %ld
HFController
HFLayoutPosition
HFRepresenterView
Message %@ sent to instance of class %@, which does not implement that method
tiff
Unable to find image named %@.tiff
Couldn't load image at path %@
Unknown string encoding %lu in %s
HFStringEncodingIsSupersetOfASCII
fcntl(%d, F_NOCACHE, %d) returned error %d: %s
%s0 bytes%s
byte
kilobyte
megabyte
gigabyte
terabyte
petabyte
%san unbelievable number of bytes%s
.%llu
%s%llu%s %s%s%s
{%llu, %llu}
0123456789ABCDEF
HFBehavesAsTextField
HFRowBackgroundColors
HFRepresenter
HFData
HFVerticalOffset
HFHorizontalContainerOffset
HFDefaultLineHeight
HFBytesBetweenVerticalGuides
HFStartingLineBackgroundColorIndex
HFRepresenterTextView.m
glyphs != NULL && advances != NULL && restrictingToRanges != nil && bytePtr != NULL
0123456789ABCDEFabcdef
%1X%@
init sent to HFByteArray, but HFByteArray is an abstract class.  Instantiate one of its subclasses instead, like HFBTreeByteArray.
Lengths differ: %llu versus %llu
Inconsistency found at %llu (%02x versus %02x)
HFFullMemoryByteArray
change lock counter overflow for %@
change lock counter underflow for %@
Selector %@ sent to a locked byte array %@
init sent to HFByteArray, but HFByteArray is an abstract class.  Instantiate one of its subclasses instead.
HFStringEncoding
HFLineCountingRepresenterMinimumViewWidthChanged
HFMinimumDigitCount
HFLineNumberFormat
HFUseStringDrawingPath
%llu
%%0%lullX
Courier
<%@ : %@>
HFMaximizesBytesPerLine
HFStatusBarDefaultMode
HFStatusMode
%llu byte%s
0x%llX byte%s
Unknown status mode %lu
0x%llX
%@ out of %@
Byte %@ selected out of %@
%@ selected at offset %@ out of %@
%@ selected at multiple offsets out of %@
HFPrivateByteArrayPboardType
HFUUID
HFByteArray
HFModalProgress
Unable to load nib named %@
Copying 
 to the clipboard
Copy 
Large Clipboard
The copied data would occupy %@ if written to the clipboard.  This is larger than the system clipboard supports.  Do you want to copy only part of the data?
Cancel
The copied data would occupy %@ if written to the clipboard.  Performing this copy may take a long time.  Do you want to copy only part of the data?
Out of memory allocating %lu bytes
RollingHash_t hash_byte_array(HFByteArray *, HFRange, BOOL, HFRange, atomic_bool *)
HFByteArray_FindReplace.m
bytes != NULL
Hex Editor read error.
Unable to fstat64 file %@. %s.
File has already been closed.
Read result: %zd expected: %lu error: %s
Cancelled!
<%@: %p (%@ -> %@)>
Got err %d (%s)
Magic Start Node
HFCancelOff
HFCancelOn
<%@: %p (%llu)>
 INCONSISTENT 
<%@: %p (length: %llu%s) (children: %u) (
%s%@
<%@: %p (%u) (
HFBTree.m
func != NULL
leaf != nil
Unable to rebalance after deleting node %@
{%llu - %llu}
(empty tree)
<%@: %p>: %@
data
HFLayoutRepresenter
HFBackgroundColors
HFBordered
HFByteArrayMutableData
valueWithPointer:
allowsReverseTransformation
removeObjectIdenticalTo:
countByEnumeratingWithState:objects:count:
defaultCenter
setAlternateImage:
stringWithFormat:
screenFont
addChildWindow:ordered:
unlockFocus
setNeedsDisplayInRect:
lightGrayColor
objectEnumerator
colorWithCalibratedWhite:alpha:
beginEditing
stringWithCharacters:length:
count
addAttribute:value:range:
integerForKey:
postNotificationName:object:userInfo:
glyphAtIndex:isValidIndex:
removeObjectAtIndex:
didChangeValueForKey:
defaultCStringEncoding
colorWithCalibratedRed:green:blue:alpha:
exposeBinding:
setNeedsDisplay:
removeLastObject
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
objectAtIndex:
postNotificationName:object:
dictionaryWithObjectsAndKeys:
setAlphaValue:
setEnabled:
initWithArray:
object
decodePointForKey:
turnOffLigatures:
saveGraphicsState
errorWithDomain:code:userInfo:
colorForBytesStartingAtIndex:resultingColor:chunkLength:
setName:
setAlignment:
numberWithUnsignedLong:
removeFromSuperview
detachNewThreadSelector:toTarget:withObject:
stringForType:
runMode:beforeDate:
postEvent:atStart:
decodeObjectForKey:
setMinimumLineHeight:
advancementForGlyph:
initTextCell:
insertObject:atIndex:
availableTypeFromArray:
setDoubleValue:
setValue:forKeyPath:
runModalForWindow:
initWithObjectsAndKeys:
decodeInt64ForKey:
setMaximumLineHeight:
getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:
numberWithUnsignedInteger:
lastObject
getCString:maxLength:encoding:
initByReferencingFile:
copy
removeChildWindow:
infoForBinding:
initWithObjects:forKeys:count:
pointerValue
decodeDoubleForKey:
setData:forType:
labelFontOfSize:
clearColor
CGContext
convertSize:toView:
numberOfGlyphs
reverseTransformedValue:
sendEvent:
ascender
keyEnumerator
removeAllObjects
decodeBoolForKey:
sendAction:to:
initWithObjects:
setStringValue:
characterSetWithCharactersInString:
timerWithTimeInterval:target:selector:userInfo:repeats:
performSelectorOnMainThread:withObject:waitUntilDone:
initWithLength:
convertSize:fromView:
drawInRect:withAttributes:
indexSet
declareTypes:owner:
drawInRect:fromRect:operation:fraction:
indexOfObjectIdenticalTo:
getAdvancements:forGlyphs:count:
performSelector:withObject:afterDelay:inModes:
characterIsMember:
setString:forType:
addTimer:forMode:
reverseObjectEnumerator
convertRectToScreen:
stringByAppendingString:
arrayWithObjects:count:
isValid
setContinuous:
performSelector:withObject:afterDelay:
addTextContainer:
dataWithLength:
registerUndoWithTarget:selector:object:
modifierFlags
nextEventMatchingMask:untilDate:inMode:dequeue:
convertRect:toView:
restoreGraphicsState
drawInRect:angle:
dataUsingEncoding:allowLossyConversion:
selectedTextBackgroundColor
arrayWithObject:
string
textBackgroundColor
setContentView:
yellowColor
setLineFragmentPadding:
addSubview:
generalPasteboard
stopModalWithCode:
name
deltaY
performSelector:withObject:
setContainerSize:
convertPoint:fromView:
indexGreaterThanIndex:
isRedoing
arrayWithCapacity:
drawGlyphsForGlyphRange:atPoint:
setLineBreakMode:
stopAnimation:
characterAtIndex:
mutableString
selectPreviousKeyView:
endEditing
rangeValue
arrayWithArray:
isKeyWindow
bundleForClass:
initWithFormat:
selectNextKeyView:
mutableCopy
pathForResource:ofType:
array
setCacheMode:
mutableBytes
setLength:
controlSize
isEqualToString:
initWithUnsignedInteger:
fontWithName:size:
imageNamed:
path
rangeOfCharacterFromSet:
fontName
bounds
encodePoint:forKey:
startAnimation:
pasteboardWithName:
addObserver:selector:name:object:
blendedColorWithFraction:ofColor:
secondaryLabelColor
initWithString:attributes:
isEqualToArray:
appendString:
raise:format:
setKnobProportion:
encodeObject:forKey:
makeObjectsPerformSelector:withObject:
superview
scrollerWidthForControlSize:scrollerStyle:
addObserver:forKeyPath:options:context:
replaceObjectAtIndex:withObject:
makeFirstResponder:
standardUserDefaults
addObjectsFromArray:
appendFormat:
setInteger:forKey:
initWithContentRect:styleMask:backing:defer:
currentRunLoop
deleteCharactersInRange:
window
blackColor
encodeInt64:forKey:
replaceCharactersInRange:withString:
hitPart
floatValue
initWithCString:encoding:
initWithStartingColor:endingColor:
cancelPreviousPerformRequestsWithTarget:selector:object:
drain
setReleasedWhenClosed:
purpleColor
replaceBytesInRange:withBytes:length:
willChangeValueForKey:
lockFocus
bezierPathWithRoundedRect:xRadius:yRadius:
currentHandler
encodeDouble:forKey:
setPropertyList:forType:
initWithSize:
propertyListForType:
firstResponder
addObject:
doubleValue
contentView
setBackgroundLayoutEnabled:
locationInWindow
containsObject:
currentContext
appendBytes:length:
initWithBytesNoCopy:length:freeWhenDone:
encodeBool:forKey:
addLayoutManager:
otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:
setHiddenUntilMouseMoves:
firstIndex
subdataWithRange:
unsignedLongValue
loadNibNamed:owner:
distantFuture
fileSystemRepresentation
enclosingMenuItem
defaultParagraphStyle
setAutoresizingMask:
initWithBytesNoCopy:length:encoding:freeWhenDone:
setFrameOrigin:
sortedArrayUsingFunction:context:
setPostsFrameChangedNotifications:
containerSize
addIndexesInRange:
setAttributes:range:
invalidateLayoutForCharacterRange:actualCharacterRange:
unsignedLongLongValue
initWithBytes:length:encoding:
componentsJoinedByString:
CGColor
setOpaque:
initWithBytes:length:
alternatingContentBackgroundColors
setFrame:display:animate:
setAttributedStringValue:
defaultLineHeightForFont:
removeObserver:name:object:
drawWithFrame:inView:
coveredCharacterSet
stringWithUTF8String:
unsignedIntegerValue
handleFailureInMethod:object:file:lineNumber:description:
invalidate
setObject:forKey:
handleFailureInFunction:file:lineNumber:description:
valueWithRange:
prepareWithInvocationTarget:
objectForKey:
addClip
lineFragmentUsedRectForGlyphAtIndex:effectiveRange:
removeObserver:forKeyPath:
interpretKeyEvents:
setArray:
alphaValue
init
_setController:
dealloc
observeValueForKeyPath:ofObject:change:context:
_undoNotification:
firePulseTimer:
_performTypingUndo:
prepareForChangeInFile:fromWritingByteArray:
encodeWithCoder:
initWithCoder:
_sharedInit
representers
notifyRepresentersOfChanges:
_firePropertyChanges
_insertPropertyChangeFence
_addPropertyChangeBits:
beginPropertyChangeTransaction
endPropertyChangeTransaction:
addRepresenter:
removeRepresenter:
invalidateController
_maximumDisplayedRangeSet
totalLineCount
displayedLineRange
setDisplayedLineRange:
lineHeight
font
setFont:
shouldAntialias
setShouldAntialias:
setBytesPerColumn:
bytesPerColumn
_shouldInvertSelectedRangesByAnchorRange
_invertedSelectedContentsRanges
_setSingleSelectedContentsRange:
selectedContentsRanges
contentsLength
dataForRange:
copyBytes:range:
_updateDisplayedRange
_ensureVisibilityOfLocation:
maximizeVisibilityOfContentsRange:
_clipSelectedContentsRangesToLength:
setByteArray:
byteArray
_removeUndoManagerNotifications
_addUndoManagerNotifications
setUndoManager:
undoManager
bytesPerLine
editable
setEditable:
_updateBytesPerLine
representer:changedProperties:
byteArrayForSelectedContentsRanges
_flattenSelectionRange
_minimumSelectionLocation
_maximumSelectionLocation
minimumSelectionLocation
maximumSelectionLocation
_telescopeSelectionRangeInDirection:
beginSelectionWithEvent:forByteIndex:
continueSelectionWithEvent:forByteIndex:
endSelectionWithEvent:forByteIndex:
selectionPulseAmount
pulseSelection
scrollByLines:
scrollWithScrollEvent:
setSelectedContentsRanges:
selectAll:
_addRangeToSelection:
_removeRangeFromSelection:withCursorLocationIfAllSelectionRemoved:
_moveDirectionDiscardingSelection:byAmount:
_extendSelectionInDirection:byAmount:
_shiftSelectionInDirection:byAmount:
_registerCondemnedRangesForUndo:selectingRangesAfterUndo:
_commandDeleteRanges:
_commandInsertByteArrays:inRanges:withSelectionAction:
_commandReplaceBytesAfterBytesFromBeginning:upToBytesFromEnd:withByteArray:
_commandValueObjectsReplaceBytesAfterBytesFromBeginning:upToBytesFromEnd:withByteArray:
_endTypingUndoCoalescingIfActive
_activateTypingUndoCoalescingForOverwritingRange:
_activateTypingUndoCoalescingForReplacingRange:withDataOfLength:
moveInDirection:byByteCount:withSelectionTransformation:usingAnchor:
moveInDirection:withGranularity:andModifySelection:
moveToLineBoundaryInDirection:andModifySelection:
deleteSelection
replaceByteArray:
insertData:replacingPreviousBytes:allowUndoCoalescing:
_insertionModeCoreInsertByteArray:replacingPreviousBytes:allowUndoCoalescing:outNewSingleSelectedRange:
_overwriteModeCoreInsertByteArray:replacingPreviousBytes:allowUndoCoalescing:outRangeToRemoveFromSelection:
insertByteArray:replacingPreviousBytes:allowUndoCoalescing:
deleteDirection:
inOverwriteMode
setInOverwriteMode:
requiresOverwriteMode
coloringDelegate
setColoringDelegate:
displayedContentsRange
currentPropertyChangeToken
additionalPendingTransactions
propertiesToUpdateInCurrentTransaction
selectionAnchor
selectionAnchorRange
undoCoalescer
pulseSelectionStartTime
pulseSelectionCurrentTime
pulseSelectionTimer
cachedRange
cachedData
cachedGenerationIndex
_hfflags
_coloringDelegate
T@"<HFTextColoringDelegate>",&,V_coloringDelegate
defaultLayoutPosition
view
initializeView
createView
controller
controllerDidChange:
maximumBytesPerLineForViewWidth:
minimumViewWidthForBytesPerLine:
maximumAvailableLinesForViewHeight:
representerChangedProperties:
setLayoutPosition:
layoutPosition
invalidateRepresenter
withRange:
withRanges:count:
organizeAndMergeRanges:
getRanges:fromArray:
copyWithZone:
HFRange
isEqual:
hash
description
range
_textViewClass
byteArrayDataStringType
entireDisplayedRange
updateText
scrollWheel:
displayedSelectedContentsRanges
byteIndexForCharacterIndex:
beginSelectionWithEvent:forCharacterIndex:
continueSelectionWithEvent:forCharacterIndex:
endSelectionWithEvent:forCharacterIndex:
insertText:
copySelectedBytesToPasteboard:
cutSelectedBytesToPasteboard:
dataFromPasteboardString:
canPasteFromPasteboard:
canCut
pasteBytesFromPasteboard:
textColor
setTextColor:
textSelectionColor
setTextSelectionColor:
rowBackgroundColors
setRowBackgroundColors:
setBehavesAsTextField:
behavesAsTextField
_blinkCaret:
fadePulseWindowTimer:
pulseSelectionTimer:
becomeFirstResponder
resignFirstResponder
initWithFrame:
setFrameSize:
_windowDidChangeKeyStatus:
viewDidMoveToWindow
insertTabIgnoringFieldEditor:
doCommandBySelector:
cut:
copy:
paste:
_glyphsForString:withGeneratingTextView:glyphs:
_shouldHaveCaretTimer
originForCharacterAtByteIndex:
indexOfCharacterAtPoint:
caretRect
_updateCaretTimerWithFirstResponderStatus:
_updateCaretTimer
_forceCaretOnIfHasCaretTimer
_lineRangeForContentsRanges:
_rectForLineRange:
_linesWithParityChangesFromRanges:count:toRanges:count:intoIndexSet:
_addLinesFromRanges:count:toIndexSet:
_indexSetOfLinesNeedingRedrawWhenChangingSelectionFromRanges:toRanges:
updateSelectedRanges
drawPulseBackgroundInRect:
updateSelectionPulse
drawCaretIfNecessaryWithClip:
shouldHaveForegroundHighlightColor
drawSelectionIfNecessaryWithClip:
acceptsFirstResponder
hasVisibleDisplayedSelectedContentsRange
initWithRepresenter:
horizontalContainerInset
setHorizontalContainerInset:
setBytesBetweenVerticalGuides:
bytesBetweenVerticalGuides
data
setData:
setVerticalOffset:
verticalOffset
startingLineBackgroundColorIndex
setStartingLineBackgroundColorIndex:
isFlipped
representer
backgroundColorForEmptySpace
backgroundColorForLine:
_drawLineBackgrounds:withLineHeight:maxLines:
drawVerticalGuideLines:
maximumGlyphCountForByteCount:
drawGlyphs:withAdvances:count:
extractGlyphsForBytes:count:offsetIntoLine:intoArray:advances:resultingGlyphCount:
extractGlyphsForBytes:range:intoArray:advances:withInclusionRanges:initialTextOffset:resultingGlyphCount:
drawTextWithClip:restrictingToTextInRanges:
drawFocusRingWithClip:
drawRect:
availableLineCount
advancePerByte
advanceBetweenColumns
advancePerColumn
totalAdvanceForBytesInRange:
isEditable
showsFocusRing
isWithinMouseDown
viewWillMoveToWindow:
characterAtPointForSelection:
mouseDown:
mouseDragged:
mouseUp:
keyDown:
handleCommand:
_selectionIsNonEmpty
_pasteboardOwnerStringTypeWritingSelector
validateMenuItem:
cachedSelectedRanges
defaultLineHeight
pulseStartTime
pulseTimer
caretTimer
pulseWindow
pulseWindowBaseFrameInScreenCoordinates
lastDrawnCaretRect
caretRectToDraw
_hftvflags
generateGlyphTable
glyphTable
ligatureTable
glyphAdvancement
spaceAdvancement
writeDataInBackgroundToPasteboard:ofLength:forType:trackingProgress:
stringLengthForDataLength:
_clearOmittedNybble
_insertionShouldDeleteLastNybble
_canInsertText:
omittedNybbleLocation
unpartneredLastNybble
mutableCopyWithZone:
byteSlices
length
insertByteSlice:inRange:
byteSliceEnumerator
insertByteArray:inRange:
subarrayWithRange:
deleteBytesInRange:
indexOfBytesEqualToBytes:inRange:searchingForwards:trackingProgress:
_debugIsEqual:
_debugIsEqualToData:
incrementChangeLockCounter
decrementChangeLockCounter
changesAreLocked
changeGenerationCount
incrementGenerationOrRaiseIfLockedForSelector:
changeLockCounter
subsliceWithRange:
constructNewByteSlicesAboutRange:first:second:
byteSliceByAppendingSlice:
isSourcedFromFile
sourceRangeForFile:
initWithData:
encoding
setEncoding:
replacementGlyph
stringEncoding
scrollerDidChangeValue:
accomodateGrowBox
visibleLines
scrollByKnobToValue:
updateScrollerValue
_scroller
setFrame:
moveRight:
moveLeft:
moveUp:
moveDown:
moveRightAndModifySelection:
moveLeftAndModifySelection:
moveUpAndModifySelection:
moveDownAndModifySelection:
moveForward:
moveBackward:
moveWordForward:
moveWordBackward:
moveBackwardAndModifySelection:
moveForwardAndModifySelection:
moveWordForwardAndModifySelection:
moveWordBackwardAndModifySelection:
moveWordRight:
moveWordLeft:
moveWordRightAndModifySelection:
moveWordLeftAndModifySelection:
deleteBackward:
deleteForward:
deleteWordForward:
deleteWordBackward:
delete:
deleteToBeginningOfLine:
deleteToEndOfLine:
deleteToBeginningOfParagraph:
deleteToEndOfParagraph:
moveToBeginningOfLine:
moveToEndOfLine:
moveToBeginningOfDocument:
moveToEndOfDocument:
moveToBeginningOfLineAndModifySelection:
moveToEndOfLineAndModifySelection:
moveToBeginningOfDocumentAndModifySelection:
moveToEndOfDocumentAndModifySelection:
moveToBeginningOfParagraph:
moveToEndOfParagraph:
moveToBeginningOfParagraphAndModifySelection:
moveToEndOfParagraphAndModifySelection:
scrollPageDown:
scrollPageUp:
pageDown:
pageUp:
centerSelectionInVisibleArea:
insertTab:
insertBacktab:
scrollLineUp:
scrollLineDown:
transpose:
transposeWords:
selectParagraph:
selectLine:
selectWord:
indent:
insertParagraphSeparator:
insertNewlineIgnoringFieldEditor:
insertLineBreak:
insertContainerBreak:
changeCaseOfLetter:
uppercaseWord:
lowercaseWord:
capitalizeWord:
deleteBackwardByDecomposingPreviousCharacter:
yank:
complete:
setMark:
deleteToMark:
selectToMark:
swapWithMark:
postMinimumViewWidthChangedNotification
updateDigitAdvanceWithFont:
updateFontAndLineHeight
updateLineNumberFormat
updateBytesPerLine
updateLineRangeToDraw
preferredWidth
updateMinimumViewWidth
lineNumberFormat
setLineNumberFormat:
cycleLineNumberFormat
setMinimumDigitCount:
minimumDigitCount
digitCount
setStartingLineNumber:
digitsToRepresentContentsLength
digitAdvance
digitsRequiredToDisplayLineNumber:inFormat:
_sharedInitLineCountingView
getLineNumberFormatString:length:
drawGradientWithClip:
drawDividerWithClip:
drawLineNumbersWithClipLayoutManagerPerLine:
drawLineNumbersWithClipStringDrawing:
characterCountForLineRange:
createLineStringForRange:
updateLayoutManagerWithLineIndex:lineCount:
drawLineNumbersWithClipSingleStringDrawing:
drawLineNumbersWithClipSingleStringCellDrawing:
drawLineNumbersWithClipFullLayoutManager:
drawLineNumbersWithClip:
setLineRangeToDraw:
lineRangeToDraw
setBytesPerLine:
startingLineNumber
canUseStringDrawingPathForFont:
setLineHeight:
setRepresenter:
layoutManager
textStorage
textContainer
textAttributes
storedLineIndex
storedLineCount
useStringDrawingPath
_startingLineNumber
TQ,V_startingLineNumber
frame
autoresizingMask
frameChanged:
arraysOfLayoutInfos
boundsRectForLayout
_computeMinHeightForLayoutInfos:
_applyYLocation:andMinHeight:toInfos:
_layoutInfosHorizontally:inRect:withBytesPerLine:
_computeBytesPerLineForArraysOfLayoutInfos:forLayoutInRect:
_anyLayoutInfoIsVerticallyResizable:
_addVerticalHeight:andOffset:toLayoutInfos:
_distributeVerticalSpace:toArraysOfLayoutInfos:
performLayout
setMaximizesBytesPerLine:
maximizesBytesPerLine
minimumViewWidthForLayoutInProposedWidth:
_sharedInitStatusBarView
setString:
cell
cellSize
cellAttributes
describeLength:
describeOffset:
describeOffsetExcludingApproximate:
stringForEmptySelectionAtOffset:length:
stringForSingleByteSelectionAtOffset:length:
stringForSingleRangeSelection:length:
stringForMultipleSelectionsWithLength:length:
updateString
statusMode
setStatusMode:
initWithReplacedData:atAnchorLocation:
initWithOverwrittenData:atAnchorLocation:
canCoalesceAppendInRange:
canCoalesceDeleteInRange:
canCoalesceOverwriteAtLocation:
_copyByteArray
overwriteDataInRange:withByteArray:
appendDataOfLength:
deleteDataOfLength:withByteArray:
rangeToReplace
deletedData
invertWithByteArray:
anchorPoint
actionPoint
byteArrayWasCopied
prepareCommonPasteboardsForChangeInFileNotification:
changeInFileNotification:
backgroundMoveDataFinished:
beginModalSessionForBackgroundCopyOperation:
backgroundMoveDataToPasteboard:
initialize
ownPasteboard:forByteArray:withTypes:
_unpackByteArrayFromDictionary:
unpackByteArrayFromPasteboard:
uuid
initWithPasteboard:forByteArray:withTypes:
tearDownPasteboardReferenceIfExists
moveDataToPasteboardWithProgressReporting:userInfo:
moveDataWithProgressReportingToPasteboard:forType:
requestCancel:
pasteboardChangedOwner:
pasteboard:provideDataForType:
amountToCopyForDataLength:stringLength:
pasteboard
progressTrackingWindow
progressTrackingIndicator
progressTrackingDescriptionTextField
progressTracker
dataAmountToCopy
retainedSelfOnBehalfOfPboard
backgroundCopyOperationFinished
didStartModalSessionForBackgroundCopyOperation
_copyBytes:range:forwards:inEnclosingRange:
_byteSearchBoyerMoore:inRange:forwards:trackingProgress:
_byteSearchSingle:inRange:forwards:trackingProgress:
_byteSearchRollingHash:inRange:forwards:trackingProgress:
_byteSearchNaive:inRange:forwards:trackingProgress:
finalize
sharedInitWithPath:error:
initWithPath:error:
initWritableWithPath:error:
initWithPath:
initWritableWithPath:
readBytes:length:from:
writeBytes:length:to:
close
setLength:error:
fileDescriptor
device
fileLength
inode
isWritable
initWithFile:
initWithFile:offset:length:
fileReference
offset
positionLayoutView
resizeSubviewsWithOldSize:
insertNewline:
target
action
setTarget:
setAction:
objectValue
setObjectValue:
usesRepresenter:
usesHexArea
setUsesHexArea:
usesTextArea
setUsesTextArea:
dataController
layoutRepresenter
hexRepresenter
textRepresenter
progressTracker:didChangeProgressTo:
_updateProgress:
noteFinished:
progressTrackerDidFinish:
setMaxProgress:
maxProgress
setProgressIndicator:
progressIndicator
beginTrackingProgress
endTrackingProgress
setDelegate:
delegate
setUserInfo:
userInfo
currentProgress
cancelRequested
progressTimer
lastSetValue
initWithUnsharedData:
initWithData:offset:length:
initWithSharedData:offset:length:tail:tailLength:
inlineTailLength
inlineTail
writeToFile:trackingProgress:error:
rangesOfFileModifiedIfSavedToFile:
clearDependenciesOnRanges:inFile:
initWithTargetRange:
initWithByteSlice:targetRange:
slice
costToWrite
initWithByteSlice:sourceRange:targetRange:
sourceRange
hasRemainingTargetRange
sourceLocationForTargetLocation:
targetLocationForSourceLocation:
createQueueEntryWithBuffer:ofLength:forFile:trackingProgress:
addQueueEntryWithContext:
amountOfOverlapForEntry:
addQueueEntriesOverlappedByEntry:withContext:
remainingTargetRanges
initWithInternalOperations:
applyQueueEntry:toFile:trackingProgress:
queueUpEntriesOverlappedByEntry:withIncompleteOperations:context:
internalOperations
totalAllocatedMemory
maximumAllocatedMemory
identityOperationWithByteSlice:targetRange:
externalOperationWithByteSlice:targetRange:
internalOperationWithByteSlice:sourceRange:targetRange:
chainedOperationWithInternalOperations:
targetRange
addDependency:forObject:
object:hasDependency:
dependenciesForObject:
stronglyConnectedComponentsForObjects:
topologicallySortObjects:
graph
containedObjects
bytes
source
allocateMemoryOfLength:
freeMemory:ofLength:
suggestedAllocationLengthForMinimum:maximum:
softMaxAllocatedMemory
file
queue
setImage:
image
initWithRandomDataLength:
start
randomizer
initWithRepeatingDataLength:
shortDescription
subtreeLength
left
right
children
checkIntegrityOfCachedLengths
checkIntegrityOfBTreeStructure
insertEntry:atOffset:
entryContainingOffset:beginningOffset:
removeAllEntries
removeEntryAtOffset:
entryEnumerator
allEntries
applyFunction:toEntriesStartingAtOffset:withUserInfo:
depth
root
initWithLeaf:
nextObject
currentLeaf
childIndex
fastPathInsertByteSlice:atOffset:
insertByteSlice:atOffset:
btree
_HFControllerDidChangeProperties:
hexTextView:didChangeProperties:
_sharedInitHFTextViewWithMutableData:
_desiredFrameForLayoutView
backgroundColors
setBackgroundColors:
setBordered:
bordered
scrollRepresenter
initWithByteArray:
_getRetainedBacking
getBytes:
getBytes:length:
getBytes:range:
serializedData
HFController
NSCoding
HFRepresenter
HFRangeWrapper
NSCopying
HFTextRepresenter
HFRepresenterTextView
HFRepresenterHexTextView
HFHexPasteboardOwner
HFHexTextRepresenter
HFByteArray
NSMutableCopying
HFByteSlice
HFFullMemoryByteSlice
HFFullMemoryByteArray
HFRepresenterStringEncodingTextView
HFStringEncodingPasteboardOwner
HFStringEncodingTextRepresenter
HFVerticalScrollerRepresenter
HFCustomScroller
HFKeyBinding
HFLineCountingRepresenter
HFLineCountingView
HFRepresenterLayoutViewInfo
HFLayoutRepresenter
HFStatusBarView
HFStatusBarRepresenter
HFControllerCoalescedUndo
HFPasteboardOwner
HFFindReplace
HFFileReference
HFFileByteSlice
HFTextField
HFProgressTracker
HFSharedMemoryByteSlice
HFileWriting
HFByteSliceFileOperationSimple
HFByteSliceFileOperationIdentity
HFByteSliceFileOperationExternal
HFByteSliceFileOperationInternal
HFByteSliceFileOperationChained
HFByteSliceFileOperation
HFObjectGraph
HFByteSliceFileOperationQueueEntry
HFByteSliceFileOperationContext
HFTextSelectionPulseView
HFCancelButton
HFRandomDataByteSlice
HFRepeatingDataByteSlice
HFBTreeNode
HFBTreeBranch
HFBTreeLeaf
HFBTree
HFBTreeEnumerator
HFBTreeByteArray
HFTextView
HFByteArrayProxiedData
B32@0:8@16@24
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v16@0:8
@16@0:8
v24@0:8Q16
Q16@0:8
v48@0:8@16@24@32^v40
{?=QQ}16@0:8
{?=DD}16@0:8
v32@0:8{?=DD}16
d16@0:8
B16@0:8
v20@0:8B16
v32@0:8{?=QQ}16
@32@0:8{?=QQ}16
v40@0:8*16{?=QQ}24
v32@0:8@16Q24
{?=QQ}24@0:8q16
v24@0:8D16
v40@0:8{?=QQ}16Q32
v32@0:8q16Q24
B28@0:8@16B24
v36@0:8@16@24i32
v40@0:8Q16Q24@32
v40@0:8@16@24@32
v44@0:8q16Q24q32B40
v36@0:8q16q24B32
v28@0:8q16B24
B36@0:8@16Q24B32
B44@0:8@16Q24B32^{?=QQ}36
v24@0:8q16
@"NSMutableArray"
@"HFByteArray"
{?="location"Q"length"Q}
{?="location"D"length"D}
@"NSFont"
@"NSUndoManager"
@"HFControllerCoalescedUndo"
@"NSTimer"
@"NSData"
{?="antialias"b1"overwriteMode"b1"editable"b1"selectable"b1"selectionInProgress"b1"shiftExtendSelection"b1"commandExtendSelection"b1"reserved1"b25"reserved2"b32}
@"<HFTextColoringDelegate>"
{CGPoint=dd}16@0:8
Q24@0:8d16
d24@0:8Q16
d24@0:8d16
v32@0:8{CGPoint=dd}16
@"HFController"
{CGPoint="x"d"y"d}
@32@0:8r^{?=QQ}16Q24
v32@0:8^{?=QQ}16@24
@24@0:8^{_NSZone=}16
B24@0:8@16
#16@0:8
Q24@0:8Q16
@"NSArray"
@"NSColor"
Q40@0:8@16@24^S32
{CGPoint=dd}24@0:8Q16
Q32@0:8{CGPoint=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{_NSRange=QQ}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{_NSRange=QQ}16
v56@0:8r^{_NSRange=QQ}16Q24r^{_NSRange=QQ}32Q40@48
v40@0:8r^{_NSRange=QQ}16Q24@32
@32@0:8@16@24
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8d16
@24@0:8Q16
v64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48Q56
v40@0:8^S16^{CGSize=dd}24Q32
v64@0:8r*16Q24Q32^S40^{CGSize=dd}48^Q56
v80@0:8r*16{_NSRange=QQ}24^S40^{CGSize=dd}48@56^d64^Q72
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
v32@0:8{CGSize=dd}16
d32@0:8{_NSRange=QQ}16
B24@0:8:16
v24@0:8:16
:16@0:8
@"HFTextRepresenter"
@"NSWindow"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
{?="antialias"b1"editable"b1"caretVisible"b1"registeredForAppNotifications"b1"withinMouseDown"b1"receivedMouseUp"b1"reserved1"b26"reserved2"b32}
[16S]
[256S]
v48@0:8@16Q24@32@40
v40@0:8@16{?=QQ}24
Q52@0:8@16{?=QQ}24B40@44
v48@0:8{?=QQ}16^@32^@40
{?=QQ}24@0:8@16
@"NSMutableData"
@"NSScroller"
Q32@0:8Q16Q24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8*16Q24
Q32@0:8{?=QQ}16
v32@0:8Q16Q24
@"NSLayoutManager"
@"NSTextStorage"
@"NSTextContainer"
@"NSDictionary"
@"HFLineCountingRepresenter"
@"HFRepresenter"
@"NSView"
d24@0:8@16
v40@0:8d16d24@32
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24Q56
Q56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
B40@0:8d16d24@32
v32@0:8d16@24
@"NSCell"
{CGSize="width"d"height"d}
@"HFStatusBarRepresenter"
@32@0:8Q16Q24
@40@0:8{?=QQ}16Q32
@32@0:8@16Q24
B32@0:8{?=QQ}16
B24@0:8Q16
v40@0:8{?=QQ}16@32
v32@0:8Q16@24
@40@0:8@16@24@32
v32@0:8:16@24
v32@0:8@16@24
@"NSPasteboard"
@"NSProgressIndicator"
@"NSTextField"
@"HFProgressTracker"
v60@0:8*16{?=QQ}24B40{?=QQ}44
Q48@0:8C16{?=QQ}20B36@40
@32@0:8@16^@24
v40@0:8*16Q24Q32
i40@0:8r*16Q24Q32
B32@0:8Q16^@24
@40@0:8@16Q24Q32
@"HFFileReference"
@"HFLayoutRepresenter"
@"HFHexTextRepresenter"
@"HFStringEncodingTextRepresenter"
@56@0:8@16Q24Q32r^v40Q48
[15C]
B40@0:8@16@24^@32
@40@0:8@16{?=QQ}24
@"HFByteSlice"
i40@0:8@16@24^@32
@56@0:8@16{?=QQ}24{?=QQ}40
@48@0:8*16Q24@32@40
Q24@0:8@16
i40@0:8@16@24@32
^{__CFDictionary=}
^v24@0:8Q16
v32@0:8^v16Q24
@"NSImage"
@"HFBTreeNode"
[10@]
@32@0:8Q16^Q24
v40@0:8^?16Q24^v32
@"HFBTreeLeaf"
B32@0:8@16Q24
@"HFBTree"
@"HFVerticalScrollerRepresenter"
r^v16@0:8
v24@0:8^v16
v40@0:8^v16{_NSRange=QQ}24
