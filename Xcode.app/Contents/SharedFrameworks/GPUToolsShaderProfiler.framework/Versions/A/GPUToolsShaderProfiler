St20bad_array_new_length
St9bad_alloc
St9exception
St12length_error
St11logic_error
T@"NSArray",&,N,V_allShaderKeys
.cxx_destruct
T@"NSArray",R,N
T@"DYGPUDerivedEncoderCounterInfo",&,N,V_derivedEncoderCounterInfo
Tc,N,V_fragmentShaderUseDiscard
T@"DYShaderAnalyzerResult",&,N,V_analyzerResult
_activeShadersPerPeriodicSample
T@"DYShaderProfilerShaderInfo",&,N,V_computeProgramInfo
_binary
T@"DYShaderProfilerShaderInfo",&,N,V_vertexShaderInfo
_encoderStateId
T@"NSArray",&,N,V_binaryRangeInfo
_offset
T@"NSArray",&,N,V_coreCounts
_pendingRequest
T@"NSArray",&,N,V_counters
_source
T@"NSArray",&,N,V_disassembledLineInfo
allKeys
T@"NSArray",&,N,V_perRingSampledDerivedCounters
computeKernelBinaryForDrawCall:
T@"NSData",&,N,V_activeCoreInfoMasksPerPeriodicSample
derivedCounters
T@"NSData",&,N,V_binary
encoderTimeData
T@"NSData",&,N,V_encoderInfos
gpuTime
T@"NSData",&,N,V_metalFXTimelineInfo
perLineInfoForProgramInfo:atFunctionIndex:fragShader:totalCost:
T@"NSData",&,N,V_timestamps
programInfoList
T@"NSDictionary",&,N,V_derivedCountersData
setCommandType:
T@"NSDictionary",&,N,V_drawCallPerLineCost
setPerFileCost:
T@"NSDictionary",&,N,V_perFileCost
setVertexCount:
T@"NSDictionary",&,N,V_totalPerLineCost
stringByAppendingPathComponent:
T@"NSMutableArray",&,N,V_counterGroups
version
T@"NSMutableArray",&,N,V_drawCallInfoList
xpState
.cxx_construct
T@"NSArray",&,N,V_callStackInfo
T@"<DYShaderProfilerDelegate>",R,W,N,V_delegate
T@"NSString",&,N,V_disasmSource
T@"DYGPUTimelineInfo",&,N,V_aggregatedGPUTimelineInfo
Tc,N,V_fragmentShaderWriteDepth
T@"DYShaderProfilerProgramInfo",&,N,V_programInfo
_analyzerResult
T@"DYShaderProfilerShaderInfo",&,N,V_fragmentShaderInfo
_costPercentage
T@"NSArray",&,N,V_binaryDisassemblyInfo
_fragmentTiming
T@"NSArray",&,N,V_blitTimeData
_opcode
T@"NSArray",&,N,V_counterNames
_shaderAnalyzer
T@"NSArray",&,N,V_derivedCounterNames
_timing
T@"NSArray",&,N,V_encoderTimeData
binaryRangeInfo
T@"NSArray",&,N,V_restoreTimestamps
dealloc
T@"NSData",&,N,V_activeShadersPerPeriodicSample
encoderInfoList
T@"NSData",&,N,V_derivedCounters
extractShaderBinaryTextSegment:
T@"NSData",&,N,V_encoderTimelineInfos
loadActionTimes
T@"NSData",&,N,V_numActiveShadersPerPeriodicSample
pipelineStateId
T@"NSDictionary",&,N,V_coalescedEncoderInfo
setAveragePerDrawKickDurations:
T@"NSDictionary",&,N,V_drawCallCost
setDisassembly:
T@"NSDictionary",&,N,V_encoderIndexToLabelMap
setProgramInfo:
T@"NSDictionary",&,N,V_sourceInfo
setWithObjects:
T@"NSMutableArray",&,N,V_averagePerDrawKickDurations
subCommandIndex
T@"NSMutableArray",&,N,V_drawCallInfoIndices
vertexProgramId
T@"NSMutableArray",&,N,V_effectiveKickTimes
T@"NSMutableArray",&,N,V_effectivePerEncoderDrawKickTimes
T@"NSMutableArray",&,N,V_encoderFunctionIndexList
T@"NSMutableArray",&,N,V_encoderInfoList
T@"NSMutableArray",&,N,V_encoderProgramInfoList
T@"NSMutableArray",&,N,V_loadActionTimes
T@"NSMutableArray",&,N,V_mGPUTimelineInfos
T@"NSMutableArray",&,N,V_perCommandBufferEncoderCount
T@"NSMutableArray",&,N,V_programInfoList
T@"NSMutableArray",&,N,V_programPipelineInfoList
T@"NSMutableArray",&,N,V_storeActionTimes
T@"NSMutableData",&,N,V_uscSamples
T@"NSMutableDictionary",&,N,V_encoderFunctionIndexToEncoderIndexMap
T@"NSNumber",&,N,V_dylib
T@"NSString",&,N,V_directory
T@"NSString",&,N,V_disassembly
T@"NSString",&,N,V_file
T@"NSString",&,N,V_function
T@"NSString",&,N,V_irSource
T@"NSString",&,N,V_sourcePath
T@"NSString",&,N,V_type
T@"NSString",C,N,V_name
T@"NSString",C,N,V_source
TI,N,V_commandBufferCount
TI,N,V_commandBufferIndex
TI,N,V_commandType
TI,N,V_deviceUtilization
TI,N,V_drawCallIndex
TI,N,V_encoderIndex
TI,N,V_fragmentCount
TI,N,V_functionIndex
TI,N,V_instanceCount
TI,N,V_numPeriodicSamples
TI,N,V_opcode
TI,N,V_opcodeSubType
TI,N,V_opcodeType
TI,N,V_pipelineStateIndex
TI,N,V_profiledState
TI,N,V_programIndex
TI,N,V_rendererUtilization
TI,N,V_tilerUtilization
TI,N,V_timeBaseDenominator
TI,N,V_timeBaseNumerator
TI,N,V_version
TI,N,V_vertexCount
TI,R,N
TI,R,N,V_comanndBufferIndex
TQ,N,V_computeProgramId
TQ,N,V_encoderFunctionIndex
TQ,N,V_encoderStateId
TQ,N,V_fragmentProgramId
TQ,N,V_frameTime
TQ,N,V_pipelineStateFunctionIndex
TQ,N,V_pipelineStateId
TQ,N,V_programFunctionIndex
TQ,N,V_programId
TQ,N,V_vertexProgramId
Tc,N,V_blendingIsEnabled
Tc,N,V_consistentStateAchieved
Tc,N,V_separable
Tc,N,V_valid
Tc,R
Tc,R,N
Td,N,V_cost
Td,N,V_costPercentage
Td,N,V_fragmentCountPercentage
Td,N,V_gpuTime
Td,N,V_instanceCountPercentage
Td,N,V_instructionCount
Td,N,V_instructionCountMax
Td,N,V_instructionCountMin
Td,N,V_totalCost
Td,N,V_vertexCountPercentage
Td,N,V_xpState
Ti,N,V_lineIndex
Ti,N,V_offset
Ti,N,V_subCommandIndex
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d},N,V_computeTiming
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d},N,V_fragmentTiming
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d},N,V_timing
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d},N,V_vertexTiming
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d},R,N,V_computeTiming
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d},R,N,V_fragmentTiming
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d},R,N,V_timing
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d},R,N,V_vertexTiming
UTF8String
_activeCoreInfoMasksPerPeriodicSample
_aggregatedGPUTimelineInfo
_allShaderBinaryInfo
_allShaderKeys
_aluBlocks
_averagePerDrawKickDurations
_binaryDisassemblyInfo
_binaryRangeInfo
_blendingIsEnabled
_blitTimeData
_callStackInfo
_coalescedEncoderInfo
_comanndBufferIndex
_commandBufferCount
_commandBufferIndex
_commandType
_computeKernelBinaryInfo
_computeKernelKey
_computeProgramId
_computeProgramInfo
_computeTiming
_consistentStateAchieved
_coreCounts
_cost
_counterGroups
_counterNames
_counters
_delegate
_derivedCounterNames
_derivedCounters
_derivedCountersData
_derivedEncoderCounterInfo
_deviceUtilization
_directory
_disasmSource
_disassembledLineInfo
_disassembly
_drawCallCost
_drawCallIndex
_drawCallInfoIndexMap
_drawCallInfoIndices
_drawCallInfoList
_drawCallInfoWithProgramInfo:atFunctionIndex:
_drawCallPerLineCost
_dylib
_effectiveKickTimes
_effectivePerEncoderDrawKickTimes
_encoderFunctionIndex
_encoderFunctionIndexList
_encoderFunctionIndexToEncoderIndexMap
_encoderIndex
_encoderIndexToLabelMap
_encoderInfoList
_encoderInfos
_encoderProgramInfoList
_encoderTimeData
_encoderTimelineInfos
_enumerateEncoderDerivedData:
_enumerateEncoderDerivedDataAtIndex:withBlock:
_file
_fragmentCount
_fragmentCountPercentage
_fragmentProgramId
_fragmentShaderBinaryInfo
_fragmentShaderInfo
_fragmentShaderKey
_fragmentShaderUseDiscard
_fragmentShaderWriteDepth
_frameTime
_function
_functionIndex
_functionIndexToDrawCallIndexMap
_gpuTime
_hash
_instanceCount
_instanceCountPercentage
_instructionCount
_instructionCountMax
_instructionCountMin
_irSource
_lineIndex
_loadActionTimes
_mGPUTimelineInfos
_metalFXTimelineInfo
_name
_numActiveShadersPerPeriodicSample
_numPeriodicSamples
_opcodeSubType
_opcodeType
_pendingRequestLock
_perCommandBufferEncoderCount
_perContextDrawCallCounterMap
_perFileCost
_perRingSampledDerivedCounters
_pipelineStateFunctionIndex
_pipelineStateId
_pipelineStateIndex
_profiledState
_programFunctionIndex
_programId
_programIndex
_programInfo
_programInfoIndexMap
_programInfoList
_programPipelineInfoIndexMap
_programPipelineInfoList
_queue
_rendererUtilization
_restoreTimestamps
_separable
_sourceInfo
_sourcePath
_storeActionTimes
_subCommandIndex
_tilerUtilization
_timeBaseDenominator
_timeBaseNumerator
_timestamps
_totalCost
_totalPerLineCost
_type
_uscSamples
_valid
_version
_vertexCount
_vertexCountPercentage
_vertexProgramId
_vertexShaderBinaryInfo
_vertexShaderInfo
_vertexShaderKey
_vertexTiming
_xpState
activeCoreInfoMasksPerPeriodicSample
activeShadersPerPeriodicSample
addObject:
addObjectsFromArray:
aggregatedGPUTimelineInfo
allAdditionalKeys:
allDiassemblyInfo
allShaderKeys
allocWithZone:
aluBlockCount
analyzeBinary:uscSamples:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
analyzeFragmentBinary:uscSamples:targetIndex:
analyzeVertexBinary:uscSamples:targetIndex:
analyzedBinary:processedUscSamples:targetIndex:withKey:withShaderSourcePath:
analyzerResult
arrayWithCapacity:
averagePerDrawKickDurations
binary
binaryDisassemblyInfo
binaryInfoForKey:
blendingIsEnabled
blitTimeData
buildDrawCallIndexMap
bundle
bytes
calculateEncoderProgramInfo
calculateFrameTime:result:
calculateRealDrawCallTimeInfo
calculateRealTimeInfoWithGPUTime:
calculateUtilizations:result:
callStackInfo
classNamed:
coalescedEncoderInfo
collectBatchFilteredDataForShaderProfilerResult:
comanndBufferIndex
commandBufferCount
commandBufferIndex
commandType
computeProgramId
computeProgramInfo
computeTiming
consistentStateAchieved
containsValueForKey:
copy
copyWithZone:
coreCounts
cost
costPercentage
count
countByEnumeratingWithState:objects:count:
counterGroups
counterNames
counters
createCounterGroup
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
dataWithBytes:length:
decodeBoolForKey:
decodeDoubleForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeObjectForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultManager
delegate
derivedCounterNames
derivedCountersData
derivedEncoderCounterInfo
description
deviceUtilization
dictionary
dictionaryWithCapacity:
directory
disasmSource
disassembleBinary:
disassembledLineInfo
disassembly
doesNotRecognizeSelector:
doubleValue
drawCallCost
drawCallIndex
drawCallInfoIndices
drawCallInfoList
drawCallInfoWithFunctionIndex:
drawCallInfoWithFunctionIndex:subCommandIndex:
drawCallPerLineCost
dylib
effectiveKickTimes
effectivePerEncoderDrawKickTimes
encodeBool:forKey:
encodeDouble:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeObject:forKey:
encodeWithCoder:
encoderFunctionIndex
encoderFunctionIndexList
encoderFunctionIndexToEncoderIndexMap
encoderIndex
encoderIndexToLabelMap
encoderInfos
encoderProgramInfoList
encoderStateId
encoderTimeWithFunctionIndex:
encoderTimelineInfos
enumerateActiveShadersForAllSamples:
enumerateActiveShadersForSampleAtIndex:withBlock:
enumerateEncoderDerivedData:
enumerateEncoderDerivedDataAtIndex:withBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
exportDerivedCounterDataAtPath:renameWhenConflict:
extensionsForSlot:
file
firstObject
fragmentCount
fragmentCountPercentage
fragmentProgramId
fragmentShaderBinaryForDrawCall:
fragmentShaderInfo
fragmentShaderUseDiscard
fragmentShaderWriteDepth
fragmentTiming
frameTime
function
functionIndex
hash
init
initWithCoder:
initWithDelegate:
initializeShaderAnalyzer
instanceCount
instanceCountPercentage
instructionCount
instructionCountMax
instructionCountMin
intValue
irSource
isComputeDispatchCall
isDisassemblerAvailable
isEqual:
isFragmentShaderMostExpensive
isFramebufferFetchWithEvents:type:
isMio
isRenderBeginWithEvents:type:
isRenderEndWithEvents:type:
lastObject
length
lineIndex
mGPUTimelineInfoAtIndex:
mGPUTimelineInfos
metalFXCallDuration:
metalFXTimelineInfo
mutableCopy
name
newShaderProfilerWithDelegate:
numActiveShadersPerPeriodicSample
numPeriodicSamples
numberWithDouble:
numberWithInt:
numberWithUnsignedInt:
numberWithUnsignedLongLong:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
offset
opcode
opcodeSubType
opcodeType
perCommandBufferEncoderCount
perFileCost
perRingSampledDerivedCounters
pipelineStateFunctionIndex
pipelineStateIndex
platformShaderAnalyzer
profileFrameAtConsistentState:
profileShader:afterGPUTimelineGather:atConsistentState:withOverlappingEnabled:
profiledState
programFunctionIndex
programId
programIndex
programInfo
programInfoWithId:
programPipelineInfoList
programPipelineInfoWithId:
removeItemAtPath:error:
removeObject:
removeTemporaryDirectory
rendererUtilization
restoreTimestamps
separable
setActiveCoreInfoMasksPerPeriodicSample:
setActiveShadersPerPeriodicSample:
setAggregatedGPUTimelineInfo:
setAllShaderKeys:
setAnalyzerResult:
setBinary:
setBinaryDisassemblyInfo:
setBinaryRangeInfo:
setBlendingIsEnabled:
setBlitTimeData:
setCallStackInfo:
setCoalescedEncoderInfo:
setCommandBufferCount:
setCommandBufferIndex:
setComputeProgramId:
setComputeProgramInfo:
setComputeTiming:
setConsistentStateAchieved:
setCoreCounts:
setCost:
setCostPercentage:
setCounterGroups:
setCounterNames:
setCounters:
setDerivedCounterNames:
setDerivedCounters:
setDerivedCountersData:
setDerivedEncoderCounterInfo:
setDeviceUtilization:
setDirectory:
setDisasmSource:
setDisassembledLineInfo:
setDrawCallCost:
setDrawCallIndex:
setDrawCallInfoIndices:
setDrawCallInfoList:
setDrawCallPerLineCost:
setDylib:
setEffectiveKickTimes:
setEffectivePerEncoderDrawKickTimes:
setEncoderFunctionIndex:
setEncoderFunctionIndexList:
setEncoderFunctionIndexToEncoderIndexMap:
setEncoderIndex:
setEncoderIndexToLabelMap:
setEncoderInfoList:
setEncoderInfos:
setEncoderProgramInfoList:
setEncoderStateId:
setEncoderTimeData:
setEncoderTimelineInfos:
setFile:
setFragmentCount:
setFragmentCountPercentage:
setFragmentProgramId:
setFragmentShaderInfo:
setFragmentShaderUseDiscard:
setFragmentShaderWriteDepth:
setFragmentTiming:
setFrameTime:
setFunction:
setFunctionIndex:
setGpuTime:
setInstanceCount:
setInstanceCountPercentage:
setInstructionCount:
setInstructionCountMax:
setInstructionCountMin:
setIrSource:
setLineIndex:
setLoadActionTimes:
setMGPUTimelineInfos:
setMetalFXTimelineInfo:
setName:
setNumActiveShadersPerPeriodicSample:
setNumPeriodicSamples:
setObject:forKeyedSubscript:
setOffset:
setOpcode:
setOpcodeSubType:
setOpcodeType:
setPerCommandBufferEncoderCount:
setPerRingSampledDerivedCounters:
setPipelineStateFunctionIndex:
setPipelineStateId:
setPipelineStateIndex:
setProfiledState:
setProgramFunctionIndex:
setProgramId:
setProgramIndex:
setProgramInfoList:
setProgramPipelineInfoList:
setRendererUtilization:
setRestoreTimestamps:
setSeparable:
setSource:
setSourceInfo:
setSourcePath:
setStoreActionTimes:
setSubCommandIndex:
setTilerUtilization:
setTimeBaseDenominator:
setTimeBaseNumerator:
setTimestamps:
setTiming:
setTotalCost:
setTotalPerLineCost:
setType:
setUscSamples:
setValid:
setVersion:
setVertexCountPercentage:
setVertexProgramId:
setVertexShaderInfo:
setVertexTiming:
setXpState:
setupForAnalysis
shaderSourceForProgramInfo:atFunctionIndex:
sharedExtensionRegistry
source
sourceInfo
sourcePath
storeActionTimes
stringByAppendingFormat:
stringWithFormat:
stringWithUTF8String:
supportRendererType:
supportsSecureCoding
temporaryDirectory
tilerUtilization
timeBaseDenominator
timeBaseNumerator
timestamps
timing
totalCost
totalPerLineCost
type
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
uscSamples
valid
vertexCount
vertexCountPercentage
vertexShaderBinaryForDrawCall:
vertexShaderInfo
vertexTiming
writeToFile:atomically:
writeToFile:atomically:encoding:error:
derivedCounterNames
derivedCounters
encoderInfos
numPeriodicSamples
timestamps
activeShadersPerPeriodicSample
activeCoreInfoMasksPerPeriodicSample
numActiveShadersPerPeriodicSample
encoderTimelineInfos
metalFXTimelineInfo
counters
countersNames
version
mGPUTimelineInfos
aggregatedGPUTimelineInfo
perRingSampledDerivedCounters
coreCounts
timeBaseNumerator
timeBaseDenominator
derivedEncoderCounterInfo
profiledState
consistentStateAchieved
restoreTimestamps
coalescedEncoderInfo
counterGroups
timing
source
name
DYShaderProfilerShaderInfo
name = %@
source = %@
timing.cycle = %f %f %f
timing.time = %f %f %f
timing.percentage = %f %f %f
timing.error = %f
programIndex
programId
vertexCount
vertexCountPercentage
fragmentCount
fragmentCountPercentage
instanceCount
instanceCountPercentage
valid
vertexShaderInfo
fragmentShaderInfo
computeProgramInfo
separable
vertexProgramId
fragmentProgramId
computeProgramId
drawCallInfoIndices
DYShaderProfilerProgramInfo
programIndex: %u
programId: %llu
timing.cycle = %f %f %f
timing.time = %f %f %f
timing.percentage = %f %f %f
timing.error = %f
drawCallInfoIndices: %@
vertexShaderInfo: %@
fragmentShaderInfo: %@
computeProgramInfo: %@
drawCallIndex
functionIndex
subCommandIndex
programInfo
vertexShaderKey
fragmentShaderKey
computeKernelKey
vertexTiming
fragmentTiming
computeTiming
fragmentShaderWriteDepth
fragmentShaderUseDiscard
blendingIsEnabled
encoderIndex
encoderStateId
encoderFunctionIndex
commandType
commandBufferIndex
DYShaderProfilerDrawCallInfo
drawCallIndex: %u
functionIndex: %u
subCommandIndex: %d
vertexCount: %u
fragmentCount: %u
instanceCount: %u
timing.cycle = %f %f %f
timing.time = %f %f %f
timing.percentage = %f %f %f
timing.error = %f
vertexShaderKey: %@
fragmentShaderKey: %@
programInfo: %@
encoderIndex: %u
ncoderStateId:%llu
ncoderFunctionIndex:%llu
uscSamples
analyzerResult
frameTime
tilerUtilization
rendererUtilization
deviceUtilization
commandBufferCount
gpuTime
xpState
drawCallInfoList
encoderInfoList
encoderFunctionIndexList
_encoderTimeData
_blitTimeData
programInfoList
programPipelineInfoList
encoderFunctionIndexToEncoderIndexMap
drawCallInfoIndexMap
functionIndexToDrawCallIndexMap
programInfoIndexMap
programPipelineInfoIndexMap
vertexShaderBinaryInfo
fragmentShaderBinaryInfo
computeKernelBinaryInfo
derivedCountersData
encoderProgramInfoList
perCommandBufferEncoderCount
encoderTimeData
blitTimeData
DYShaderProfilerResult
drawCallInfoList: %@
encoderInfoList: %@
encoderTimeData: %@
blitTimeData: %@
programInfoList: %@
programPipelineInfoList: %@
encoderProgramInfoList: %@
encoderFunctionIndexToEncoderIndexMap: %@
perCommandBufferEncoderCount: %@
v32@?0@"DYShaderProfilerDrawCallInfo"8Q16*24
SortedPipelines
DrawCalls
Cost
AbsoluteCost
Index
/%@_%0.4llu_funcIndex_%0.4u
pipeline
program
.vsh
.vsb
.vss
.fsh
.fsb
.fss
gputools.%@.%p
com.apple.GPUToolsShaderProfiler
mobile support class name
analyzer class name
Device Utilization %
Tiler Utilization %
Renderer Utilization %
ShaderProfiler/
v32@?0@8@16*24
vector
offset
cost
disasmSource
opcode
opcodeType
opcodeSubType
irSource
costPercentage
DYShaderDiassemlyInfo: Offset=%d Source=%@ IR=%@ cost=%g opCodeType=%d costPercentage=%g
function
file
directory
sourcePath
lineIndex
DYShaderInlineBlockInfo: lineIndex=%d, function=%@, file=%@, dir=%@, sourcePath=%@
binaryRangeInfo
lineIndex = %d, path = %@
disassembledLineInfo
callStackInfo
instructionCount
instructionCountMin
instructionCountMax
totalCost
totalPerLineCost
drawCallCost
drawCallPerLineCost
perFileCost
sourceInfo
binaryDisassemblyInfo
DYShaderAnalyzerResult: (instructionCount: %f [%f - %f]) %@
DYGPUDerivedEncoderCounterInfo
NSSecureCoding
NSCoding
NSCopying
DYGPUTimelineInfo
DYTimelineCounterGroup
DYWorkloadGPUTimelineInfo
DYShaderProfilerTimingWrapper
DYShaderProfilerShaderInfo
DYShaderProfilerProgramInfo
DYShaderProfilerDrawCallInfo
ShaderBinaryInfo
DYShaderProfilerResult
DYShaderProfiler
DYShaderDiassemlyInfo
DYShaderInlineBlockInfo
DYShaderPerLineSourceInfo
DYShaderBinaryRangeInfo
DYShaderAnalyzerResult
DYShaderAnalyzer
c16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@16@0:8
v24@0:8@?16
v28@0:8I16@?20
v16@0:8
@"NSArray"
@"NSData"
I16@0:8
v20@0:8I16
@24@0:8Q16
Q24@0:8Q16
v20@0:8c16
@"NSMutableArray"
@"DYGPUTimelineInfo"
@"DYGPUDerivedEncoderCounterInfo"
@"NSDictionary"
{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d}16@0:8
v96@0:8{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d}16
{DYShaderProfilerTiming="_cycle"{Statistics="average"d"min"d"max"d}"_time"{Statistics="average"d"min"d"max"d}"_percentage"{Statistics="average"d"min"d"max"d}"_surplusCycles"d}
@"NSString"
Q16@0:8
v24@0:8Q16
d16@0:8
v24@0:8d16
@"DYShaderProfilerShaderInfo"
i16@0:8
v20@0:8i16
@"DYShaderProfilerProgramInfo"
{vector<SBALUTargetBlockInfo, std::allocator<SBALUTargetBlockInfo>>="__begin_"^{SBALUTargetBlockInfo}"__end_"^{SBALUTargetBlockInfo}"__end_cap_"{__compressed_pair<SBALUTargetBlockInfo *, std::allocator<SBALUTargetBlockInfo>>="__value_"^{SBALUTargetBlockInfo}}}
@"NSNumber"
@"NSMutableData"
@"DYShaderAnalyzerResult"
@20@0:8I16
@24@0:8I16i20
@28@0:8@16I24
@36@0:8@16I24c28c32
@28@0:8@16c24
{unordered_map<unsigned long long, unsigned int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, unsigned int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
@"NSMutableDictionary"
{unordered_map<unsigned long long, std::unordered_map<int, unsigned int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::unordered_map<int, unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
c28@0:8^v16I24
@40@0:8@16@24I32c36
v32@0:8@16@24
@"<DYShaderProfilerDelegate>"
@"NSObject<OS_dispatch_queue>"
@"DYShaderAnalyzer"
c24@0:8@16
c20@0:8i16
@72@0:8@16@24i32@36@44@52I60@64
@52@0:8@16@24i32@36@44
@36@0:8@16@24i32
@"<DYShaderAnalyzerDelegate>"
*6qq
St20bad_array_new_length
St9bad_alloc
St9exception
St12length_error
St11logic_error
T@"NSArray",&,N,V_allShaderKeys
.cxx_destruct
T@"NSArray",R,N
T@"DYGPUDerivedEncoderCounterInfo",&,N,V_derivedEncoderCounterInfo
TB,N,V_fragmentShaderUseDiscard
T@"DYShaderAnalyzerResult",&,N,V_analyzerResult
_activeShadersPerPeriodicSample
T@"DYShaderProfilerShaderInfo",&,N,V_computeProgramInfo
_binary
T@"DYShaderProfilerShaderInfo",&,N,V_vertexShaderInfo
_encoderStateId
T@"NSArray",&,N,V_binaryRangeInfo
_offset
T@"NSArray",&,N,V_coreCounts
_pendingRequest
T@"NSArray",&,N,V_counters
_source
T@"NSArray",&,N,V_disassembledLineInfo
allKeys
T@"NSArray",&,N,V_perRingSampledDerivedCounters
computeKernelBinaryForDrawCall:
T@"NSData",&,N,V_activeCoreInfoMasksPerPeriodicSample
derivedCounters
T@"NSData",&,N,V_binary
encoderTimeData
T@"NSData",&,N,V_encoderInfos
gpuTime
T@"NSData",&,N,V_metalFXTimelineInfo
perLineInfoForProgramInfo:atFunctionIndex:fragShader:totalCost:
T@"NSData",&,N,V_timestamps
programInfoList
T@"NSDictionary",&,N,V_derivedCountersData
setCommandType:
T@"NSDictionary",&,N,V_drawCallPerLineCost
setPerFileCost:
T@"NSDictionary",&,N,V_perFileCost
setVertexCount:
T@"NSDictionary",&,N,V_totalPerLineCost
stringByAppendingPathComponent:
T@"NSMutableArray",&,N,V_counterGroups
version
T@"NSMutableArray",&,N,V_drawCallInfoList
xpState
.cxx_construct
T@"NSArray",&,N,V_callStackInfo
T@"<DYShaderProfilerDelegate>",R,W,N,V_delegate
T@"NSString",&,N,V_disasmSource
T@"DYGPUTimelineInfo",&,N,V_aggregatedGPUTimelineInfo
TB,N,V_fragmentShaderWriteDepth
T@"DYShaderProfilerProgramInfo",&,N,V_programInfo
_analyzerResult
T@"DYShaderProfilerShaderInfo",&,N,V_fragmentShaderInfo
_costPercentage
T@"NSArray",&,N,V_binaryDisassemblyInfo
_fragmentTiming
T@"NSArray",&,N,V_blitTimeData
_opcode
T@"NSArray",&,N,V_counterNames
_shaderAnalyzer
T@"NSArray",&,N,V_derivedCounterNames
_timing
T@"NSArray",&,N,V_encoderTimeData
binaryRangeInfo
T@"NSArray",&,N,V_restoreTimestamps
dealloc
T@"NSData",&,N,V_activeShadersPerPeriodicSample
encoderInfoList
T@"NSData",&,N,V_derivedCounters
extractShaderBinaryTextSegment:
T@"NSData",&,N,V_encoderTimelineInfos
loadActionTimes
T@"NSData",&,N,V_numActiveShadersPerPeriodicSample
pipelineStateId
T@"NSDictionary",&,N,V_coalescedEncoderInfo
setAveragePerDrawKickDurations:
T@"NSDictionary",&,N,V_drawCallCost
setDisassembly:
T@"NSDictionary",&,N,V_encoderIndexToLabelMap
setProgramInfo:
T@"NSDictionary",&,N,V_sourceInfo
setWithObjects:
T@"NSMutableArray",&,N,V_averagePerDrawKickDurations
subCommandIndex
T@"NSMutableArray",&,N,V_drawCallInfoIndices
vertexProgramId
T@"NSMutableArray",&,N,V_effectiveKickTimes
T@"NSMutableArray",&,N,V_effectivePerEncoderDrawKickTimes
T@"NSMutableArray",&,N,V_encoderFunctionIndexList
T@"NSMutableArray",&,N,V_encoderInfoList
T@"NSMutableArray",&,N,V_encoderProgramInfoList
T@"NSMutableArray",&,N,V_loadActionTimes
T@"NSMutableArray",&,N,V_mGPUTimelineInfos
T@"NSMutableArray",&,N,V_perCommandBufferEncoderCount
T@"NSMutableArray",&,N,V_programInfoList
T@"NSMutableArray",&,N,V_programPipelineInfoList
T@"NSMutableArray",&,N,V_storeActionTimes
T@"NSMutableData",&,N,V_uscSamples
T@"NSMutableDictionary",&,N,V_encoderFunctionIndexToEncoderIndexMap
T@"NSNumber",&,N,V_dylib
T@"NSString",&,N,V_directory
T@"NSString",&,N,V_disassembly
T@"NSString",&,N,V_file
T@"NSString",&,N,V_function
T@"NSString",&,N,V_irSource
T@"NSString",&,N,V_sourcePath
T@"NSString",&,N,V_type
T@"NSString",C,N,V_name
T@"NSString",C,N,V_source
TB,N,V_blendingIsEnabled
TB,N,V_consistentStateAchieved
TB,N,V_separable
TB,N,V_valid
TB,R
TB,R,N
TI,N,V_commandBufferCount
TI,N,V_commandBufferIndex
TI,N,V_commandType
TI,N,V_deviceUtilization
TI,N,V_drawCallIndex
TI,N,V_encoderIndex
TI,N,V_fragmentCount
TI,N,V_functionIndex
TI,N,V_instanceCount
TI,N,V_numPeriodicSamples
TI,N,V_opcode
TI,N,V_opcodeSubType
TI,N,V_opcodeType
TI,N,V_pipelineStateIndex
TI,N,V_profiledState
TI,N,V_programIndex
TI,N,V_rendererUtilization
TI,N,V_tilerUtilization
TI,N,V_timeBaseDenominator
TI,N,V_timeBaseNumerator
TI,N,V_version
TI,N,V_vertexCount
TI,R,N
TI,R,N,V_comanndBufferIndex
TQ,N,V_computeProgramId
TQ,N,V_encoderFunctionIndex
TQ,N,V_encoderStateId
TQ,N,V_fragmentProgramId
TQ,N,V_frameTime
TQ,N,V_pipelineStateFunctionIndex
TQ,N,V_pipelineStateId
TQ,N,V_programFunctionIndex
TQ,N,V_programId
TQ,N,V_vertexProgramId
Td,N,V_cost
Td,N,V_costPercentage
Td,N,V_fragmentCountPercentage
Td,N,V_gpuTime
Td,N,V_instanceCountPercentage
Td,N,V_instructionCount
Td,N,V_instructionCountMax
Td,N,V_instructionCountMin
Td,N,V_totalCost
Td,N,V_vertexCountPercentage
Td,N,V_xpState
Ti,N,V_lineIndex
Ti,N,V_offset
Ti,N,V_subCommandIndex
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d},N,V_computeTiming
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d},N,V_fragmentTiming
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d},N,V_timing
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d},N,V_vertexTiming
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d},R,N,V_computeTiming
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d},R,N,V_fragmentTiming
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d},R,N,V_timing
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d},R,N,V_vertexTiming
UTF8String
_activeCoreInfoMasksPerPeriodicSample
_aggregatedGPUTimelineInfo
_allShaderBinaryInfo
_allShaderKeys
_aluBlocks
_averagePerDrawKickDurations
_binaryDisassemblyInfo
_binaryRangeInfo
_blendingIsEnabled
_blitTimeData
_callStackInfo
_coalescedEncoderInfo
_comanndBufferIndex
_commandBufferCount
_commandBufferIndex
_commandType
_computeKernelBinaryInfo
_computeKernelKey
_computeProgramId
_computeProgramInfo
_computeTiming
_consistentStateAchieved
_coreCounts
_cost
_counterGroups
_counterNames
_counters
_delegate
_derivedCounterNames
_derivedCounters
_derivedCountersData
_derivedEncoderCounterInfo
_deviceUtilization
_directory
_disasmSource
_disassembledLineInfo
_disassembly
_drawCallCost
_drawCallIndex
_drawCallInfoIndexMap
_drawCallInfoIndices
_drawCallInfoList
_drawCallInfoWithProgramInfo:atFunctionIndex:
_drawCallPerLineCost
_dylib
_effectiveKickTimes
_effectivePerEncoderDrawKickTimes
_encoderFunctionIndex
_encoderFunctionIndexList
_encoderFunctionIndexToEncoderIndexMap
_encoderIndex
_encoderIndexToLabelMap
_encoderInfoList
_encoderInfos
_encoderProgramInfoList
_encoderTimeData
_encoderTimelineInfos
_enumerateEncoderDerivedData:
_enumerateEncoderDerivedDataAtIndex:withBlock:
_file
_fragmentCount
_fragmentCountPercentage
_fragmentProgramId
_fragmentShaderBinaryInfo
_fragmentShaderInfo
_fragmentShaderKey
_fragmentShaderUseDiscard
_fragmentShaderWriteDepth
_frameTime
_function
_functionIndex
_functionIndexToDrawCallIndexMap
_gpuTime
_hash
_instanceCount
_instanceCountPercentage
_instructionCount
_instructionCountMax
_instructionCountMin
_irSource
_lineIndex
_loadActionTimes
_mGPUTimelineInfos
_metalFXTimelineInfo
_name
_numActiveShadersPerPeriodicSample
_numPeriodicSamples
_opcodeSubType
_opcodeType
_pendingRequestLock
_perCommandBufferEncoderCount
_perContextDrawCallCounterMap
_perFileCost
_perRingSampledDerivedCounters
_pipelineStateFunctionIndex
_pipelineStateId
_pipelineStateIndex
_profiledState
_programFunctionIndex
_programId
_programIndex
_programInfo
_programInfoIndexMap
_programInfoList
_programPipelineInfoIndexMap
_programPipelineInfoList
_queue
_rendererUtilization
_restoreTimestamps
_separable
_sourceInfo
_sourcePath
_storeActionTimes
_subCommandIndex
_tilerUtilization
_timeBaseDenominator
_timeBaseNumerator
_timestamps
_totalCost
_totalPerLineCost
_type
_uscSamples
_valid
_version
_vertexCount
_vertexCountPercentage
_vertexProgramId
_vertexShaderBinaryInfo
_vertexShaderInfo
_vertexShaderKey
_vertexTiming
_xpState
activeCoreInfoMasksPerPeriodicSample
activeShadersPerPeriodicSample
addObject:
addObjectsFromArray:
aggregatedGPUTimelineInfo
allAdditionalKeys:
allDiassemblyInfo
allShaderKeys
allocWithZone:
aluBlockCount
analyzeBinary:uscSamples:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
analyzeFragmentBinary:uscSamples:targetIndex:
analyzeVertexBinary:uscSamples:targetIndex:
analyzedBinary:processedUscSamples:targetIndex:withKey:withShaderSourcePath:
analyzerResult
arrayWithCapacity:
averagePerDrawKickDurations
binary
binaryDisassemblyInfo
binaryInfoForKey:
blendingIsEnabled
blitTimeData
buildDrawCallIndexMap
bundle
bytes
calculateEncoderProgramInfo
calculateFrameTime:result:
calculateRealDrawCallTimeInfo
calculateRealTimeInfoWithGPUTime:
calculateUtilizations:result:
callStackInfo
classNamed:
coalescedEncoderInfo
collectBatchFilteredDataForShaderProfilerResult:
comanndBufferIndex
commandBufferCount
commandBufferIndex
commandType
computeProgramId
computeProgramInfo
computeTiming
consistentStateAchieved
containsValueForKey:
copy
copyWithZone:
coreCounts
cost
costPercentage
count
countByEnumeratingWithState:objects:count:
counterGroups
counterNames
counters
createCounterGroup
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
dataWithBytes:length:
decodeBoolForKey:
decodeDoubleForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeObjectForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultManager
delegate
derivedCounterNames
derivedCountersData
derivedEncoderCounterInfo
description
deviceUtilization
dictionary
dictionaryWithCapacity:
directory
disasmSource
disassembleBinary:
disassembledLineInfo
disassembly
doesNotRecognizeSelector:
doubleValue
drawCallCost
drawCallIndex
drawCallInfoIndices
drawCallInfoList
drawCallInfoWithFunctionIndex:
drawCallInfoWithFunctionIndex:subCommandIndex:
drawCallPerLineCost
dylib
effectiveKickTimes
effectivePerEncoderDrawKickTimes
encodeBool:forKey:
encodeDouble:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeObject:forKey:
encodeWithCoder:
encoderFunctionIndex
encoderFunctionIndexList
encoderFunctionIndexToEncoderIndexMap
encoderIndex
encoderIndexToLabelMap
encoderInfos
encoderProgramInfoList
encoderStateId
encoderTimeWithFunctionIndex:
encoderTimelineInfos
enumerateActiveShadersForAllSamples:
enumerateActiveShadersForSampleAtIndex:withBlock:
enumerateEncoderDerivedData:
enumerateEncoderDerivedDataAtIndex:withBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
exportDerivedCounterDataAtPath:renameWhenConflict:
extensionsForSlot:
file
firstObject
fragmentCount
fragmentCountPercentage
fragmentProgramId
fragmentShaderBinaryForDrawCall:
fragmentShaderInfo
fragmentShaderUseDiscard
fragmentShaderWriteDepth
fragmentTiming
frameTime
function
functionIndex
hash
init
initWithCoder:
initWithDelegate:
initializeShaderAnalyzer
instanceCount
instanceCountPercentage
instructionCount
instructionCountMax
instructionCountMin
intValue
irSource
isComputeDispatchCall
isDisassemblerAvailable
isEqual:
isFragmentShaderMostExpensive
isFramebufferFetchWithEvents:type:
isMio
isRenderBeginWithEvents:type:
isRenderEndWithEvents:type:
lastObject
length
lineIndex
mGPUTimelineInfoAtIndex:
mGPUTimelineInfos
metalFXCallDuration:
metalFXTimelineInfo
mutableCopy
name
newShaderProfilerWithDelegate:
numActiveShadersPerPeriodicSample
numPeriodicSamples
numberWithDouble:
numberWithInt:
numberWithUnsignedInt:
numberWithUnsignedLongLong:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
offset
opcode
opcodeSubType
opcodeType
perCommandBufferEncoderCount
perFileCost
perRingSampledDerivedCounters
pipelineStateFunctionIndex
pipelineStateIndex
platformShaderAnalyzer
profileFrameAtConsistentState:
profileShader:afterGPUTimelineGather:atConsistentState:withOverlappingEnabled:
profiledState
programFunctionIndex
programId
programIndex
programInfo
programInfoWithId:
programPipelineInfoList
programPipelineInfoWithId:
removeItemAtPath:error:
removeObject:
removeTemporaryDirectory
rendererUtilization
restoreTimestamps
separable
setActiveCoreInfoMasksPerPeriodicSample:
setActiveShadersPerPeriodicSample:
setAggregatedGPUTimelineInfo:
setAllShaderKeys:
setAnalyzerResult:
setBinary:
setBinaryDisassemblyInfo:
setBinaryRangeInfo:
setBlendingIsEnabled:
setBlitTimeData:
setCallStackInfo:
setCoalescedEncoderInfo:
setCommandBufferCount:
setCommandBufferIndex:
setComputeProgramId:
setComputeProgramInfo:
setComputeTiming:
setConsistentStateAchieved:
setCoreCounts:
setCost:
setCostPercentage:
setCounterGroups:
setCounterNames:
setCounters:
setDerivedCounterNames:
setDerivedCounters:
setDerivedCountersData:
setDerivedEncoderCounterInfo:
setDeviceUtilization:
setDirectory:
setDisasmSource:
setDisassembledLineInfo:
setDrawCallCost:
setDrawCallIndex:
setDrawCallInfoIndices:
setDrawCallInfoList:
setDrawCallPerLineCost:
setDylib:
setEffectiveKickTimes:
setEffectivePerEncoderDrawKickTimes:
setEncoderFunctionIndex:
setEncoderFunctionIndexList:
setEncoderFunctionIndexToEncoderIndexMap:
setEncoderIndex:
setEncoderIndexToLabelMap:
setEncoderInfoList:
setEncoderInfos:
setEncoderProgramInfoList:
setEncoderStateId:
setEncoderTimeData:
setEncoderTimelineInfos:
setFile:
setFragmentCount:
setFragmentCountPercentage:
setFragmentProgramId:
setFragmentShaderInfo:
setFragmentShaderUseDiscard:
setFragmentShaderWriteDepth:
setFragmentTiming:
setFrameTime:
setFunction:
setFunctionIndex:
setGpuTime:
setInstanceCount:
setInstanceCountPercentage:
setInstructionCount:
setInstructionCountMax:
setInstructionCountMin:
setIrSource:
setLineIndex:
setLoadActionTimes:
setMGPUTimelineInfos:
setMetalFXTimelineInfo:
setName:
setNumActiveShadersPerPeriodicSample:
setNumPeriodicSamples:
setObject:forKeyedSubscript:
setOffset:
setOpcode:
setOpcodeSubType:
setOpcodeType:
setPerCommandBufferEncoderCount:
setPerRingSampledDerivedCounters:
setPipelineStateFunctionIndex:
setPipelineStateId:
setPipelineStateIndex:
setProfiledState:
setProgramFunctionIndex:
setProgramId:
setProgramIndex:
setProgramInfoList:
setProgramPipelineInfoList:
setRendererUtilization:
setRestoreTimestamps:
setSeparable:
setSource:
setSourceInfo:
setSourcePath:
setStoreActionTimes:
setSubCommandIndex:
setTilerUtilization:
setTimeBaseDenominator:
setTimeBaseNumerator:
setTimestamps:
setTiming:
setTotalCost:
setTotalPerLineCost:
setType:
setUscSamples:
setValid:
setVersion:
setVertexCountPercentage:
setVertexProgramId:
setVertexShaderInfo:
setVertexTiming:
setXpState:
setupForAnalysis
shaderSourceForProgramInfo:atFunctionIndex:
sharedExtensionRegistry
source
sourceInfo
sourcePath
storeActionTimes
stringByAppendingFormat:
stringWithFormat:
stringWithUTF8String:
supportRendererType:
supportsSecureCoding
temporaryDirectory
tilerUtilization
timeBaseDenominator
timeBaseNumerator
timestamps
timing
totalCost
totalPerLineCost
type
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
uscSamples
valid
vertexCount
vertexCountPercentage
vertexShaderBinaryForDrawCall:
vertexShaderInfo
vertexTiming
writeToFile:atomically:
writeToFile:atomically:encoding:error:
derivedCounterNames
derivedCounters
encoderInfos
numPeriodicSamples
timestamps
activeShadersPerPeriodicSample
activeCoreInfoMasksPerPeriodicSample
numActiveShadersPerPeriodicSample
encoderTimelineInfos
metalFXTimelineInfo
counters
countersNames
version
mGPUTimelineInfos
aggregatedGPUTimelineInfo
perRingSampledDerivedCounters
coreCounts
timeBaseNumerator
timeBaseDenominator
derivedEncoderCounterInfo
profiledState
consistentStateAchieved
restoreTimestamps
coalescedEncoderInfo
counterGroups
timing
source
name
DYShaderProfilerShaderInfo
name = %@
source = %@
timing.cycle = %f %f %f
timing.time = %f %f %f
timing.percentage = %f %f %f
timing.error = %f
programIndex
programId
vertexCount
vertexCountPercentage
fragmentCount
fragmentCountPercentage
instanceCount
instanceCountPercentage
valid
vertexShaderInfo
fragmentShaderInfo
computeProgramInfo
separable
vertexProgramId
fragmentProgramId
computeProgramId
drawCallInfoIndices
DYShaderProfilerProgramInfo
programIndex: %u
programId: %llu
timing.cycle = %f %f %f
timing.time = %f %f %f
timing.percentage = %f %f %f
timing.error = %f
drawCallInfoIndices: %@
vertexShaderInfo: %@
fragmentShaderInfo: %@
computeProgramInfo: %@
drawCallIndex
functionIndex
subCommandIndex
programInfo
vertexShaderKey
fragmentShaderKey
computeKernelKey
vertexTiming
fragmentTiming
computeTiming
fragmentShaderWriteDepth
fragmentShaderUseDiscard
blendingIsEnabled
encoderIndex
encoderStateId
encoderFunctionIndex
commandType
commandBufferIndex
DYShaderProfilerDrawCallInfo
drawCallIndex: %u
functionIndex: %u
subCommandIndex: %d
vertexCount: %u
fragmentCount: %u
instanceCount: %u
timing.cycle = %f %f %f
timing.time = %f %f %f
timing.percentage = %f %f %f
timing.error = %f
vertexShaderKey: %@
fragmentShaderKey: %@
programInfo: %@
encoderIndex: %u
ncoderStateId:%llu
ncoderFunctionIndex:%llu
uscSamples
analyzerResult
frameTime
tilerUtilization
rendererUtilization
deviceUtilization
commandBufferCount
gpuTime
xpState
drawCallInfoList
encoderInfoList
encoderFunctionIndexList
_encoderTimeData
_blitTimeData
programInfoList
programPipelineInfoList
encoderFunctionIndexToEncoderIndexMap
drawCallInfoIndexMap
functionIndexToDrawCallIndexMap
programInfoIndexMap
programPipelineInfoIndexMap
vertexShaderBinaryInfo
fragmentShaderBinaryInfo
computeKernelBinaryInfo
derivedCountersData
encoderProgramInfoList
perCommandBufferEncoderCount
encoderTimeData
blitTimeData
DYShaderProfilerResult
drawCallInfoList: %@
encoderInfoList: %@
encoderTimeData: %@
blitTimeData: %@
programInfoList: %@
programPipelineInfoList: %@
encoderProgramInfoList: %@
encoderFunctionIndexToEncoderIndexMap: %@
perCommandBufferEncoderCount: %@
v32@?0@"DYShaderProfilerDrawCallInfo"8Q16^B24
SortedPipelines
DrawCalls
Cost
AbsoluteCost
Index
/%@_%0.4llu_funcIndex_%0.4u
pipeline
program
.vsh
.vsb
.vss
.fsh
.fsb
.fss
gputools.%@.%p
com.apple.GPUToolsShaderProfiler
mobile support class name
analyzer class name
Device Utilization %
Tiler Utilization %
Renderer Utilization %
ShaderProfiler/
v32@?0@8@16^B24
vector
offset
cost
disasmSource
opcode
opcodeType
opcodeSubType
irSource
costPercentage
DYShaderDiassemlyInfo: Offset=%d Source=%@ IR=%@ cost=%g opCodeType=%d costPercentage=%g
function
file
directory
sourcePath
lineIndex
DYShaderInlineBlockInfo: lineIndex=%d, function=%@, file=%@, dir=%@, sourcePath=%@
binaryRangeInfo
lineIndex = %d, path = %@
disassembledLineInfo
callStackInfo
instructionCount
instructionCountMin
instructionCountMax
totalCost
totalPerLineCost
drawCallCost
drawCallPerLineCost
perFileCost
sourceInfo
binaryDisassemblyInfo
DYShaderAnalyzerResult: (instructionCount: %f [%f - %f]) %@
DYGPUDerivedEncoderCounterInfo
NSSecureCoding
NSCoding
NSCopying
DYGPUTimelineInfo
DYTimelineCounterGroup
DYWorkloadGPUTimelineInfo
DYShaderProfilerTimingWrapper
DYShaderProfilerShaderInfo
DYShaderProfilerProgramInfo
DYShaderProfilerDrawCallInfo
ShaderBinaryInfo
DYShaderProfilerResult
DYShaderProfiler
DYShaderDiassemlyInfo
DYShaderInlineBlockInfo
DYShaderPerLineSourceInfo
DYShaderBinaryRangeInfo
DYShaderAnalyzerResult
DYShaderAnalyzer
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@16@0:8
v24@0:8@?16
v28@0:8I16@?20
v16@0:8
@"NSArray"
@"NSData"
I16@0:8
v20@0:8I16
@24@0:8Q16
Q24@0:8Q16
v20@0:8B16
@"NSMutableArray"
@"DYGPUTimelineInfo"
@"DYGPUDerivedEncoderCounterInfo"
@"NSDictionary"
{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d}16@0:8
v96@0:8{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}{Statistics=ddd}d}16
{DYShaderProfilerTiming="_cycle"{Statistics="average"d"min"d"max"d}"_time"{Statistics="average"d"min"d"max"d}"_percentage"{Statistics="average"d"min"d"max"d}"_surplusCycles"d}
@"NSString"
Q16@0:8
v24@0:8Q16
d16@0:8
v24@0:8d16
@"DYShaderProfilerShaderInfo"
i16@0:8
v20@0:8i16
@"DYShaderProfilerProgramInfo"
{vector<SBALUTargetBlockInfo, std::allocator<SBALUTargetBlockInfo>>="__begin_"^{SBALUTargetBlockInfo}"__end_"^{SBALUTargetBlockInfo}"__end_cap_"{__compressed_pair<SBALUTargetBlockInfo *, std::allocator<SBALUTargetBlockInfo>>="__value_"^{SBALUTargetBlockInfo}}}
@"NSNumber"
@"NSMutableData"
@"DYShaderAnalyzerResult"
@20@0:8I16
@24@0:8I16i20
@28@0:8@16I24
@36@0:8@16I24B28B32
@28@0:8@16B24
{unordered_map<unsigned long long, unsigned int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, unsigned int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
@"NSMutableDictionary"
{unordered_map<unsigned long long, std::unordered_map<int, unsigned int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::unordered_map<int, unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
B28@0:8^v16I24
@40@0:8@16@24I32B36
v32@0:8@16@24
@"<DYShaderProfilerDelegate>"
@"NSObject<OS_dispatch_queue>"
@"DYShaderAnalyzer"
B24@0:8@16
B20@0:8i16
@72@0:8@16@24i32@36@44@52I60@64
@52@0:8@16@24i32@36@44
@36@0:8@16@24i32
@"<DYShaderAnalyzerDelegate>"
