serviceListener
alloc
init
setDelegate:
resume
initWithCharactersNoCopy:length:freeWhenDone:
setInternalString:
internalString
length
characterAtIndex:
UTF8String
fileSystemRepresentation
.cxx_destruct
_internalString
dvtscm_scheme
isEqualToString:
port
absoluteString
dvtscm_host
rangeOfString:
substringWithRange:
dvtscm_scpURL
URLByAppendingPathComponent:
defaultManager
lockURL
path
fileExistsAtPath:
createFileAtPath:contents:attributes:
removeItemAtURL:error:
isFileURL
class
isKindOfClass:
lock
unlock
gitRepository
gitRemoteURL
mutableCopy
dvtscm_gitNormalizedStringForRepo:
stringWithString:
dictionaryNormalizedString
dvtscm_gitCLINormalizedStringForRepo:
dvtscm_gitCLINormalizedStringForRepository:
rangeOfString:options:
gitError_hasPrefix:
gitError_hasSuffix:
gitError_rangeOfString:
gitError_rangeOfTailString:
setOid:
_oid
authRequestCount
authenticationStrategy
isMemberOfClass:
password
setAuthRequestCount:
username
cStringUsingEncoding:
setAuthenticationError:
publicKeyFile
privateKeyFile
privateKeyPassword
setAuthenticationBlock:
stringWithUTF8String:
setPushError:
setPushReferenceBlock:
setRepository:
initWithRepository:
repository
sidebandProgressBlock
setSidebandProgressBlock:
transferProgressBlock
setTransferProgressBlock:
authenticationBlock
pushReferenceBlock
authenticationError
pushError
_repository
_sidebandProgressBlock
_transferProgressBlock
_authenticationBlock
_pushReferenceBlock
_authenticationError
_pushError
_authRequestCount
fileDiffBlock
setFileDiffBlock:
hunkDiffBlock
setHunkDiffBlock:
lineDiffBlock
setLineDiffBlock:
_fileDiffBlock
_hunkDiffBlock
_lineDiffBlock
mapTableWithKeyOptions:valueOptions:
headRevisionOfRepository:completionBlock:
listBranchesOfRepository:branchAndTagLocations:completionBlock:
allCurrentLocations:completionBlock:
createTag:name:message:completionBlock:
deleteTag:name:completionBlock:
pushTag:name:remote:completionBlock:
pushTag:name:remote:delete:completionBlock:
_stashIdentiferFromRevision:workingCopy:completionBlock:
deleteStash:revision:completionBlock:
dealloc
standardUserDefaults
valueForKey:
boolValue
_launchPathForTask:
setQualityOfService:
_gitLaunchPath
setLaunchPath:
arrayWithObjects:count:
dictionaryWithObjects:forKeys:
_authenticationAgentExecutablePath
setValue:forKey:
trustedServerFingerprint
enforceTrustedServerFingerprint
stringWithFormat:
pipe
setStandardOutput:
data
fileHandleForReading
initWithData:encoding:
_readDataFromFileHandle:intoBuffer:outstandingOperationCounter:dataParsingBlock:
setStandardError:
arrayByAddingObjectsFromArray:
setArguments:
setEnvironment:
launch
waitUntilExit
defaultCenter
removeObserver:
closeFile
fileURL
setCurrentDirectoryPath:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
lastPathComponent
dictionaryWithObjects:forKeys:count:
initWithDomain:code:userInfo:
errorWithDomain:code:userInfo:
substringToIndex:
initWithIdentifier:displayName:
identifier
revision
isPlaceholderRevision
name
hasPrefix:
count
objectAtIndexedSubscript:
initWithUsername:email:
dateWithTimeIntervalSince1970:
initWithAuthor:revision:date:message:fileStatuses:revisionType:workingCopy:
descriptorForRequiredKeysForStyle:
unifiedMeContactWithKeysToFetch:error:
stringFromContact:style:
emailAddresses
firstObject
value
requestAccessForEntityType:completionHandler:
currentHost
initWithName:plugInIdentifier:version:workingCopyFolderIdentifier:URLHintStrings:features:supportedAuthenticationTypes:revisionMatchingStyle:revisionIdentifierRegExString:
_gitSourceControlSystem
emails
stringByExpandingTildeInPath
stringWithContentsOfFile:encoding:error:
code
newlineCharacterSet
componentsSeparatedByCharactersInSet:
predicateWithBlock:
filteredArrayUsingPredicate:
countByEnumeratingWithState:objects:count:
appendFormat:
writeToFile:atomically:encoding:error:
initWithURL:identifier:sourceControlSystem:
initWithFileURL:repository:
addObject:
initWithURL:sourceControlSystem:
initWithFileURL:unidentifiableRepository:
fileURLWithPath:
substringFromIndex:
initWithBranchName:primaryBranch:
setRevision:
initWithTagName:
initWithRevision:
sharedUnversionedLogItem
initWithAuthor:revision:date:message:revisionType:workingCopy:
initIncompleteLogItemWithAuthor:revision:date:message:
initWithCapacity:
objectForKey:
initWithFilePath:previousFilePath:revision:status:
setObject:forKey:
initWithFilePath:revision:status:
parents
arrayByAddingObject:
setParents:
allValues
fileName
localizedCaseInsensitiveCompare:
sortedArrayUsingComparator:
initWithAuthor:revision:date:message:fileStatuses:parents:revisionType:
subarrayWithRange:
setBranches:
setTags:
stringWithCString:encoding:
componentsSeparatedByString:
objectAtIndex:
doubleValue
initWithArgs:
error
outputLines
lastObject
isEqual:
filePath
status
initWithAuthor:revision:date:message:currentFilePath:filePath:status:revisionType:
setIncrementalLogStatus:progressValue:progressIdentifier:
_useLibGit2
_libgit_historyOfWorkingCopy:fromRevision:toRevision:inclusionType:maximumLogItems:searchString:searchType:includeFilePaths:showMergeCommits:progressBlock:completionBlock:
_cmd_historyOfWorkingCopy:fromRevision:toRevision:inclusionType:maximumLogItems:searchString:searchType:includeFilePaths:showMergeCommits:progressBlock:completionBlock:
sharedHeadRevision
sharedBaseRevision
sharedUnversionedRevision
_libgitCommitToLogItem:revision:workingCopy:
message
author
componentsJoinedByString:
copy
removeAllObjects
stringByAppendingString:
initWithObjects:
lengthOfBytesUsingEncoding:
appendData:
_cmdCommitToLogItemWithNameStatus:workingCopy:
_cmdCommitToLogItem:workingCopy:
replaceBytesInRange:withBytes:length:
replaceCharactersInRange:withString:
setStandardOutputFeedbackBlock:
dataString
_libgit_historyOfWorkingCopy:location:progressBlock:completionBlock:
initWithTagName:revision:
isEqualIgnoringPrimaryAndNewStatus:
initWithBranchName:primaryBranch:remoteName:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
insertObject:atIndex:
unsignedIntegerValue
removeObject:
numberWithUnsignedInteger:
addObjectsFromArray:
updateVisualInformationWithOutBranchIdentifiers:splitBranchIdentifiers:inBranchIdentifiers:mergedBranchIdentifiers:commitBranchIdentifier:
_implementationForSelector:
_cmd_deleteStash:stashIdentifier:completionBlock:
_libgit_deleteStash:stashIdentifier:completionBlock:
_cmd_stashIdentifierFromRevision:workingCopy:completionBlock:
_libgit_stashIdentifierFromRevision:workingCopy:completionBlock:
integerValue
tempFilePathBasedOnFileName:outError:
URLByDeletingLastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
writeToURL:atomically:
_cmd_addTag:repository:completionBlock:
_libgit_addTag:repository:completionBlock:
initWithNewTagName:message:revision:
_cmd_pushTag:name:remote:delete:completionBlock:
_libgit_pushTag:name:remote:delete:completionBlock:
_lookupRemote:remoteRepository:remoteName:error:
displayName
setAuthenticationStrategy:
_cmd_removeTag:fromRepository:andRemoteRepository:completionBlock:
_libgit_removeTag:fromRepository:andRemoteRepository:completionBlock:
isRemoteBranch
remoteName
isNewBranch
description
_libgit_cherryPick:revision:completionBlock:
_cmd_cherrypick:revision:completionBlock:
initWithString:
filesAndStatusOfWorkingCopy:withRemoteStatus:completionBlock:
_cmd_allCurrentLocations:withCompletionBlock:
_libgit2_allCurrentLocations:withCompletionBlock:
index
title
branch
date
fileStatuses
initWithRevision:index:title:branch:author:date:fileStatuses:
commitDetails:revisions:progressIdentifier:completionBlock:
initWithTagName:message:revision:author:
allKeys
listRemoteRepositoriesForRepository:completionBlock:
setDate:
initWithBranchName:primaryBranch:trackingBranch:pullCount:pushCount:
scannerWithString:
isAtEnd
whitespaceCharacterSet
scanUpToCharactersFromSet:intoString:
scanLocation
setScanLocation:
numberWithBool:
scanUpToString:intoString:
init:title:branch:
initWithNewBranchName:remoteName:
_libgit2_fetch:remote:prune:progressIdentifier:completionBlock:
_cmd_fetch:remote:prune:progressIdentifier:completionBlock:
_lookupRemoteName:remoteRepository:
currentLocationOfWorkingCopy:completionBlock:
setTrustedServerFingerprint:
task
terminationStatus
initWithBranchName:primaryBranch:remoteBranch:
mainBundle
localizedStringForKey:value:table:
_useCommandLine
_cmd_parentsOfRevision:path:inWorkingCopy:completionBlock:
_libgit2_parentsOfRevision:path:inWorkingCopy:completionBlock:
isSimilar:
_cmd_headRevisionOfRemoteRepository:andBranches:completionBlock:
_libgit_headRevisionOfRemoteRepository:andBranches:completionBlock:
listRemoteBranchesOfRepository:branchAndTagLocations:completionBlock:
_libgit_listRemoteBranchesOfRepository:branchAndTagLocations:completionBlock:
_cmd_listRemoteBranchesOfRepository:branchAndTagLocations:completionBlock:
arrayWithObject:
arrayWithCapacity:
array
dictionary
URLWithString:
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
sourceControlSystem
caseInsensitiveCompare:
_upstreamBranchFromRepository:forBranch:completionBlock:
stringByRemovingPercentEncoding
_libgit_filesAndStatusOfWorkingCopy:withRemoteStatus:completionBlock:
_cmd_filesAndStatusOfWorkingCopy:withRemoteStatus:completionBlock:
copyItemAtURL:toURL:error:
addFiles:inWorkingCopy:completionBlock:
moveItemAtURL:toURL:error:
removeFiles:inWorkingCopy:completionBlock:
_discardAllChanges:files:inWorkingCopy:completionBlock:
_cmd_commitFiles:inWorkingCopy:message:completionBlock:
_libgit_commitFiles:inWorkingCopy:message:completionBlock:
previousFilePath
_libgit_exportFile:inWorkingCopy:fromRevisionLocation:error:
_pathDetailsIfRenamed:relativePath:location:completion:
baseRevisionOfWorkingCopy:completionBlock:
dataWithBytes:length:
generateTemporaryPath:withData:error:
stringByAppendingPathComponent:
writeRelativePath:toFolder:withData:error:
createTemporaryFolder:error:
historyOfFileWithNameStatus:inWorkingCopy:fromRevisionLocation:showMergeCommits:follow:maxLogItems:completionBlock:
_cmd_blameFile:inWorkingCopy:fromRevisionLocation:ignoreWhitespace:completionBlock:
regularExpressionWithPattern:options:error:
matchesInString:options:range:
numberOfRanges
rangeAtIndex:
initWithLineRange:logItem:
localizedDescription
dataWithContentsOfURL:options:error:
bytes
sendLogItems:progressIdentifier:
setFlushImmediately:
_cmd_historyOfFileWithNameStatus:inWorkingCopy:fromRevisionLocation:showMergeCommits:follow:maxLogItems:completionBlock:
headRevisionOfRepository:forFile:completionBlock:
isEqualTo:
sharedInitialRevision
isNotEqualTo:
_cmdCommitToSingleFileLogItemWithNameStatus:workingCopy:lastFilePath:currentFilePath:headRevision:currentRevisionLocation:didMatchHEAD:
_git_historyOfFile:inWorkingCopy:searchString:searchType:showMergeCommits:progressIdentifier:completionBlock:
_libgit2_historyOfFile:inWorkingCopy:searchString:searchType:showMergeCommits:progressIdentifier:completionBlock:
_garbageCollectWorkingCopy:withForce:
_forceUpdateWorkingCopy:location:fromRepository:completionBlock:
writeToURL:atomically:encoding:error:
_libgit_cloneFromRepository:bareClone:location:branchAndTagLocations:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:
shouldUpdateProgress
setProgressStatus:progressValue:userReadableString:progressIdentifier:
initWithBytes:length:encoding:
setCountStyle:
stringFromByteCount:
forceUpdateWorkingCopy:location:fromRepository:completionBlock:
processInfo
beginActivityWithOptions:reason:
_useCommandLineClone
_cmd_createWorkingCopyFromRepository:location:branchAndTagLocations:localAddress:progressIdentifier:
_libgit_createWorkingCopyFromRepository:location:branchAndTagLocations:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:
_libgit_checkoutWorkingCopyLocation:branchAndTagLocations:useRevision:localAddress:progressIdentifier:completionBlock:
endActivity:
_cmd_createLocalRepositoryFromRepository:localAddress:progressIdentifier:
_libgit_createLocalRepositoryFromRepository:localAddress:progressIdentifier:completionBlock:
scanForRepositoryInFolderPath:completionBlock:
_cmd_cloneFromRepository:bareClone:location:branchAndTagLocations:localAddress:progressIdentifier:
_runGitCloneForRemoteRepository:bareClone:branchName:localURL:standardError:standardOut:feedbackBlock:
sourceControlSystemWithCompletionBlock:
keychainNameFromURL:completionBlock:
authorForWorkingCopy:completionBlock:
setAuthor:forWorkingCopy:completionBlock:
ignoredFilesWithCompletionBlock:
setIgnoredFiles:completionBlock:
scanForWorkingCopiesInFolderPaths:traversingUp:completionBlock:
scanForWorkingCopiesInPotentialWorkingCopies:completionBlock:
branchesReachableFrom:inWorkingCopy:completionBlock:
historyOfWorkingCopy:fromRevision:toRevision:inclusionType:maximumLogItems:searchString:searchType:includeFilePaths:showMergeCommits:progressIdentifier:completionBlock:
historyOfWorkingCopy:location:progressIdentifier:completionBlock:
stashChanges:keepIndex:includeUntracked:message:completionBlock:
applyStash:identifier:index:completionBlock:
exportStash:identifier:completionBlock:
addTag:toRepository:branchAndTagLocations:completionBlock:
removeTag:fromRepository:andRemoteRepository:branchAndTagLocations:completionBlock:
switchLocation:ofWorkingCopy:completionBlock:
cherryPick:revision:completionBlock:
loadCompleteStash:stash:completionBlock:
loadCompleteTag:tag:completionBlock:
downloadUpdatesFromRemoteRepository:toRepository:removeDeletedLocations:progressIdentifier:completionBlock:
revertCommit:revision:completionBlock:
upgradeWorkingCopy:completionBlock:
identifierOfRepositoryForWorkingCopy:completionBlock:
commitDetailsWithParents:forRevision:path:completionBlock:
revisionOfLocation:inRepository:branchAndTagLocations:completionBlock:
listSubpathsOfRepository:atPath:completionBlock:
parentBranchesOfBranch:inRepository:branchAndTagLocations:completionBlock:
ancestorRevisionInRepository:ofBranch:otherBranch:branchAndTagLocations:completionBlock:
addBranch:from:toRepository:branchAndTagLocations:completionBlock:
removeBranch:fromRepository:andRemoteRepository:branchAndTagLocations:completionBlock:
diffRepository:fromLocation:againstLocation:branchAndTagLocations:completionBlock:
remoteBranchFromRepository:forBranch:completionBlock:
remoteNameIsValid:completionBlock:
addRemoteRepository:withName:toRepository:completionBlock:
removeRemoteRepositoryNamed:fromRepository:completionBlock:
copyFiles:toFilePaths:inWorkingCopy:completionBlock:
moveFiles:toFilePaths:inWorkingCopy:completionBlock:
createDirectory:withIntermediateDirectories:attributes:inWorkingCopy:completionBlock:
discardChangesInFiles:inWorkingCopy:completionBlock:
discardAllChangesInWorkingCopy:completionBlock:
markAsResolvedFiles:inWorkingCopy:completionBlock:
commitFiles:inWorkingCopy:message:completionBlock:
contentsOfUnmodifiedFile:inWorkingCopy:completionBlock:
exportFile:inWorkingCopy:fromRevisionLocation:completionBlock:
blameFile:inWorkingCopy:fromRevisionLocation:ignoreWhitespace:completionBlock:
_libgit_blameFile:inWorkingCopy:fromRevisionLocation:completionBlock:
commitDetails:revision:completionBlock:
_retrieveHEAD:headRevision:relativePath:
historyOfFile:inWorkingCopy:searchString:searchType:showMergeCommits:progressIdentifier:completionBlock:
mergeBranch:intoWorkingCopy:completionBlock:
repositoryURLRootForRepository:completionBlock:
uploadCommitsToRemoteRepository:fromLocalRepository:remoteBranch:pushTags:progressIdentifier:completionBlock:
automaticallyDetectBranchAndTagLocationsForRepository:fromPath:completionBlock:
createRepositoryAtFileURL:completionBlock:
validateAuthenticationOfRemoteRepository:location:branchAndTagLocations:completionBlock:
createWorkingCopyFromRepository:location:branchAndTagLocations:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:
createLocalRepositoryFromRepository:localAddress:progressIdentifier:completionBlock:
_gitImplementaitonMapping
fingerprintOfCertificate:
shouldTrustServer:withFingerprint:userTrustedFingerprint:
compare:options:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
operationsFinished
upgradeWorkingCopy:progressIdentifier:completionBlock:
interfaceWithProtocol:
setExportedInterface:
exportedInterface
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
progressStatus:withDictionary:progressIdentifier:
incrementalLogStatus:info:progressIdentifier:
setRemoteObjectInterface:
setListener:
setConnection:
setExportedObject:
distantPast
timeIntervalSinceDate:
numberWithDouble:
connection
remoteObjectProxy
listener:shouldAcceptNewConnection:
listener
_xpcLastTimeProgressSent
_listener
_connection
setLength:
initWithData:
_idesc_stringFromMutableData:
bundleForClass:
pathForResource:ofType:
dictionaryWithObject:forKey:
availableData
waitForDataInBackgroundAndNotify
addObserverForName:object:queue:usingBlock:
bundleURL
URLByStandardizingPath
arguments
launchPath
environment
currentDirectoryPath
setStandardInput:
fileHandleForWriting
standardOutputFeedbackBlock
readDataFromFileHandle:intoBuffer:outstandingOperationCounter:dataParsingBlock:
hasSuffix:
dataUsingEncoding:
writeData:
standardErrorFeedbackBlock
setReadyToParseData:
parseDataOrGenerateErrorForTask:operation:
isCancelled
errorData
_idesc_stringFromData:
setError:
errorFromErrorMessage:
setDataString:
setData:
dvt_UUIDString
setWaitToParseData:
outputLinesWithBlock:
readyToParseData
command
cancelled
setEnforceTrustedServerFingerprint:
setIsCancelled:
setStandardErrorFeedbackBlock:
flushImmediately
representsXcodeServiceHostedRepository
_waitToParseData
_readyToParseData
_cancelled
_enforceTrustedServerFingerprint
_isCancelled
_flushImmediately
_representsXcodeServiceHostedRepository
_task
_launchPath
_currentDirectoryPath
_arguments
_data
_errorData
_dataString
_command
_error
_authenticationStrategy
_standardOutputFeedbackBlock
_standardErrorFeedbackBlock
_trustedServerFingerprint
@(#)PROGRAM:com.apple.dt.Xcode.sourcecontrol.Git  PROJECT:DVTSourceControl-13757
DVTSourceControlGitCLINormalizedString
GitDVTSourceControlRepositoryCategory
GitNormalizedString
GitErrorParsing
GitOIDHolder
GitRemoteCallbackPayload
GitDiffCallbackPayload
DVTSourceControlGitPlugInPrimary
DVTSourceControlPlugInProtocol
NSObject
DVTSourceControlPlugInCallbackProtocol
DVTSourceControlXPCPrimary
NSXPCListenerDelegate
DVTSourceControlGitTask
@36@0:8^S16Q24c32
Q16@0:8
S24@0:8Q16
r*16@0:8
v16@0:8
@16@0:8
v24@0:8@16
@"NSString"
c16@0:8
^{git_repository=}16@0:8
@24@0:8^{git_repository=}16
@24@0:8@16
c24@0:8@16
{_NSRange=QQ}24@0:8@16
r^{git_oid=[20C]}16@0:8
v24@0:8r^{git_oid=[20C]}16
r^{git_oid=[20C]}
@?16@0:8
v24@0:8@?16
v24@0:8Q16
@"DVTSourceControlRemoteRepository"
@"NSError"
Q24@0:8:16
@68@0:8@16c24@28@36^@44^@52@?60
v28@0:8@16c24
v32@0:8@16@?24
v40@0:8@16@24@?32
v36@0:8@16c24@?28
@52@0:8^{git_commit=}16{git_oid=[20C]}24@44
@32@0:8@16@24
@72@0:8@16@24@32@40@48@56^c64
v96@0:8@16@24@32Q40q48@56Q64c72c76@80@?88
v96@0:8@16@24@32Q40q48@56Q64c72c76@?80@?88
v48@0:8@16@24@32@?40
v48@0:8@16@24@?32@?40
v48@0:8@16c24c28@32@?40
v40@0:8@16q24@?32
v44@0:8@16@24c32@?36
v52@0:8@16@24@32c40@?44
v56@0:8@16@24@32@40@?48
v52@0:8@16@24c32@36@?44
v52@0:8@16c24@28@36@?44
v44@0:8c16@20@28@?36
@48@0:8@16@24@32^@40
v68@0:8@16@24@32Q40c48@52@?60
v64@0:8@16@24@32c40c44q48@?56
@40@0:8@16@24@32
v32@0:8@16@24
^{git_remote=}48@0:8^{git_repository=}16@24^@32^@40
v60@0:8@16@24@32c40@44@?52
v76@0:8@16@24@32c40@44@52@60@?68
v80@0:8@16c24@28@36c44@48@56@64@?72
v60@0:8@16@24c32@36@44@?52
c56@0:8@16@24@32@40@48
c40@0:8@16@24@32
c60@0:8@16c24@28@36@44@52
@"NSMapTable"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?<v@?@"DVTSourceControlSystem">16
v32@0:8@"NSURL"16@?<v@?@"NSString"Q@"NSString"@"NSError">24
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlAuthor"@"NSError">24
v40@0:8@"DVTSourceControlAuthor"16@"DVTSourceControlWorkingCopy"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v36@0:8@"NSArray"16c24@?<v@?@"NSArray">28
v32@0:8@"NSArray"16@?<v@?@"NSArray">24
v32@0:8@"NSString"16@?<v@?@"DVTSourceControlRepository">24
v36@0:8@"DVTSourceControlWorkingCopy"16c24@?<v@?@"NSArray"@"NSArray"@"NSError">28
v40@0:8@"NSArray"16@"DVTSourceControlWorkingCopy"24@?<v@?@"NSError">32
v48@0:8@"NSArray"16@"NSArray"24@"DVTSourceControlWorkingCopy"32@?<v@?@"NSError">40
v52@0:8@"NSString"16c24@"NSDictionary"28@"DVTSourceControlWorkingCopy"36@?<v@?@"NSError">44
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"NSError">24
v48@0:8@"NSArray"16@"DVTSourceControlWorkingCopy"24@"NSString"32@?<v@?@"DVTSourceControlRevision"@"NSError">40
v40@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@?<v@?@"NSString"@"NSError">32
v40@0:8@"DVTSourceControlRevision"16@"DVTSourceControlWorkingCopy"24@?<v@?@"NSArray"@"NSError">32
v48@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@"DVTSourceControlRevisionLocation"32@?<v@?@"NSURL"@"NSError">40
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@?<v@?@"NSError">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"NSArray"@"NSArray"@"NSDictionary"@"NSDictionary"@"NSArray"@"DVTSourceControlRevisionLocation"@"NSError">24
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?@"DVTSourceControlStash"@"NSError">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlTag"24@?<v@?@"DVTSourceControlTag"@"NSError">32
v52@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@"DVTSourceControlRevisionLocation"32c40@?<v@?@"NSArray"@"NSError">44
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@"NSString"32@?<v@?@"DVTSourceControlLogItem"@"NSArray"@"NSArray"@"NSError">40
v68@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@"NSString"32Q40c48@"NSString"52@?<v@?@"NSArray"@"NSError">60
v64@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@"DVTSourceControlRevisionLocation"32c40c44q48@?<v@?@"NSArray"@"NSError">56
v48@0:8@"DVTSourceControlWorkingCopy"16@"NSArray"24@"NSString"32@?<v@?@"NSArray"@"NSError">40
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@?<v@?@"DVTSourceControlVisualLogItem"@"NSError">32
v40@0:8@"DVTSourceControlBranch"16@"DVTSourceControlWorkingCopy"24@?<v@?@"NSError">32
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlRemoteRepository"32@?<v@?@"NSError">40
v96@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@"DVTSourceControlRevision"32Q40q48@"NSString"56Q64c72c76@"NSString"80@?<v@?@"NSArray"@"NSError">88
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevisionLocation"24@"NSString"32@?<v@?@"NSArray"@"NSError">40
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlRevisionLocation"@"NSError">24
v40@0:8@"DVTSourceControlRevisionLocation"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlRevisionLocation"@"NSError">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlRevision"@"NSError">24
v40@0:8@"DVTSourceControlWorkingCopy"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"DVTSourceControlRepository"16@?<v@?@"DVTSourceControlRevision"@"NSError">24
v48@0:8@"DVTSourceControlRevisionLocation"16@"DVTSourceControlRepository"24@"DVTSourceControlBranchAndTagLocations"32@?<v@?@"DVTSourceControlRevision"@"NSError">40
v40@0:8@"DVTSourceControlRepository"16@"DVTSourceControlPathLocation"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@"DVTSourceControlRepository"16@"DVTSourceControlBranchAndTagLocations"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@"DVTSourceControlRepository"16@"DVTSourceControlBranchAndTagLocations"24@?<v@?@"NSArray"@"NSDictionary"@"NSError">32
v48@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRepository"24@"DVTSourceControlBranchAndTagLocations"32@?<v@?@"DVTSourceControlBranch"@"NSArray"@"NSError">40
v56@0:8@"DVTSourceControlRepository"16@"DVTSourceControlBranch"24@"DVTSourceControlBranch"32@"DVTSourceControlBranchAndTagLocations"40@?<v@?@"DVTSourceControlRevision"@"NSError">48
v56@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlRepository"32@"DVTSourceControlBranchAndTagLocations"40@?<v@?@"DVTSourceControlBranch"@"NSError">48
v56@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRepository"24@"DVTSourceControlRemoteRepository"32@"DVTSourceControlBranchAndTagLocations"40@?<v@?@"NSError">48
v48@0:8@"DVTSourceControlTag"16@"DVTSourceControlRepository"24@"DVTSourceControlBranchAndTagLocations"32@?<v@?@"DVTSourceControlTag"@"NSError">40
v56@0:8@"DVTSourceControlTag"16@"DVTSourceControlRepository"24@"DVTSourceControlRemoteRepository"32@"DVTSourceControlBranchAndTagLocations"40@?<v@?@"NSError">48
v56@0:8@"DVTSourceControlRepository"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlRevisionLocation"32@"DVTSourceControlBranchAndTagLocations"40@?<v@?@"NSArray"@"NSError">48
v32@0:8@"DVTSourceControlRepository"16@?<v@?@"DVTSourceControlRemoteRepository"@"NSDictionary"@"NSError">24
v40@0:8@"DVTSourceControlRepository"16@"DVTSourceControlBranch"24@?<v@?@"DVTSourceControlBranch"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v48@0:8@"DVTSourceControlRemoteRepository"16@"NSString"24@"DVTSourceControlRepository"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"DVTSourceControlRepository"24@?<v@?@"NSError">32
v40@0:8@"DVTSourceControlRepository"16@"DVTSourceControlPathLocation"24@?<v@?@"DVTSourceControlRevisionLocation"@"DVTSourceControlBranchAndTagLocations"@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"DVTSourceControlRepository"@"NSError">24
v32@0:8@"DVTSourceControlRemoteRepository"16@?<v@?@"NSURL"@"DVTSourceControlPathLocation"@"NSError">24
v52@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRepository"24c32@"NSString"36@?<v@?@"NSString"@"NSError">44
v60@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRepository"24@"DVTSourceControlBranch"32c40@"NSString"44@?<v@?@"NSError">52
v48@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlBranchAndTagLocations"32@?<v@?@"NSError">40
v76@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlBranchAndTagLocations"32c40@"NSURL"44@"NSURL"52@"NSString"60@?<v@?@"DVTSourceControlWorkingCopy"@"NSError">68
v48@0:8@"DVTSourceControlRemoteRepository"16@"NSURL"24@"NSString"32@?<v@?@"DVTSourceControlRepository"@"NSError">40
v48@0:8@"DVTSourceControlWorkingCopy"16c24c28@"NSString"32@?<v@?@"NSError">40
v44@0:8@"DVTSourceControlWorkingCopy"16@"NSString"24c32@?<v@?@"NSError">36
v40@0:8@"DVTSourceControlWorkingCopy"16@"NSString"24@?<v@?@"NSURL"@"NSError">32
v40@0:8q16@24@32
v40@0:8@16@24@32
v40@0:8q16@"NSDictionary"24@"NSString"32
v40@0:8@"NSArray"16@"NSDictionary"24@"NSString"32
c32@0:8@16@24
c32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v48@0:8q16d24@32@40
v40@0:8@16d24@32
@"NSDate"
@"NSXPCListener"
@"NSXPCConnection"
@48@0:8@16@24^q32@?40
v20@0:8c16
@"NSTask"
@"NSArray"
@"NSData"
@"NSMutableData"
@"DVTSourceControlAuthenticationStrategy"
internalString
T@"NSString",&,N,V_internalString
.git/index.lock
dictionaryNormalizedString
T@"NSString",R
Tr^{git_oid=[20C]},V_oid
No password provided for SSH.
Credentials invalid.
i36@?0^^{git_cred}8r*16r*24I32
v24@?0r*8r*16
repository
T@"DVTSourceControlRemoteRepository",&,V_repository
sidebandProgressBlock
T@?,C,V_sidebandProgressBlock
transferProgressBlock
T@?,C,V_transferProgressBlock
authenticationBlock
T@?,C,V_authenticationBlock
pushReferenceBlock
T@?,C,V_pushReferenceBlock
authenticationError
T@"NSError",&,V_authenticationError
pushError
T@"NSError",&,V_pushError
authRequestCount
TQ,V_authRequestCount
fileDiffBlock
T@?,C,V_fileDiffBlock
hunkDiffBlock
T@?,C,V_hunkDiffBlock
lineDiffBlock
T@?,C,V_lineDiffBlock
DVTSourceControlGitUseLibGit2Default
DVTSourceControlGitUseCommandLineDefault
DVTSourceControlCloneGitCommandLineDefault
v8@?0
--bare
--branch
en_US.UTF-8
/nonexistent
LANG
DISPLAY
HOME
GIT_CONFIG_NOSYSTEM
GIT_FLUSH
SSH_ASKPASS
GIT_ASKPASS
DVTSourceControlFingerprint
DVTSourceControlEnforeFingerprint
/usr/bin/ssh -v -F /dev/null -o UserKnownHostsFile=/dev/null -o FingerprintHash=md5 -o HostKeyAlgorithms=ssh-rsa -o IdentitiesOnly=yes
GIT_SSH_COMMAND
/usr/bin/ssh -v -l %@ -F /dev/null -o UserKnownHostsFile=/dev/null -o FingerprintHash=md5 -o HostKeyAlgorithms=ssh-rsa -o IdentitiesOnly=yes
DVTSourceControlPassword
DVTSourceControlUsername
/usr/bin/ssh -v -l %@ -F /dev/null -o UserKnownHostsFile=/dev/null -o FingerprintHash=md5 -o HostKeyAlgorithms=ssh-rsa -o IdentitiesOnly=yes -i %@
DVTSourceControlPassphrase
v16@?0@"NSData"8
clone
--progress
--no-checkout
--quiet
--auto
%@ (%li)
Reference '
' not found
The path '
' does not exist in the given tree
Cannot locate remote-tracking branch '
Object not found - no matching loose object (
Object not found - no match for id (
Cannot locate local branch '
Cannot push
Remote error
Repository not found
SSL error: error:140E0114
Failed to resolve address for
HTTP status code: 401
Authentication failed
Permission denied
access denied
Failed to authenticate SSH session
SSL certificate is invalid
SSL certificate problem
Certificate host name check failed
user cancelled certificate check
Malformed URL '
Early EOF
Failed to write reference '
': a reference with that name already exists.
An unknown error occured.
refs/tags/
refs/tags/%@
Error with libgit operation (%s)
git_revwalk_new(&walk, repo)
NSString *_gitRepositoryIdentifier(git_repository *)
git_revwalk_push_head(walk)
git_revwalk_next(&revisionOID, walk)
git_commit_lookup(&commit, repo, &revisionOID)
git_commit_tree(&tree, commit)
core.precomposeunicode
user.name
'%@' - couldn't get user from snapshot. Attempting XDG/global/system lookup.
git_signature *_defaultGitAuthor(git_repository *)
user.email
'%@' - couldn't get email from snapshot. Attempting XDG/global/system lookup.
'%@' has no local config entry for both user and email. Attempting XDG/global/system lookup.
Couldn't get any user.name entry for '%@':
Couldn't get any user.email entry for '%@':
Couldn't open default config for repository:
Couldn't get any name from address book
git_signature *_defaultGitAuthor(git_repository *)_block_invoke
Couldn't get any email from address book
Couldn't get any details from address book
Couldn't access address book
v20@?0c8@"NSError"12
%@@%@
0.26.0
.git
^[0-9a-f]{5,40}$
Repository provided was not a local repository (%@)
-[DVTSourceControlGitPlugInPrimary authorForWorkingCopy:completionBlock:]
Repository is not a DVTSourceControlRepository
Could not find local libgit repo for %@
NULL gitRepository for %@
-[DVTSourceControlGitPlugInPrimary setAuthor:forWorkingCopy:completionBlock:]
core.excludesfile
c24@?0@8@"NSDictionary"16
~/%@
.gitignore_global
git_config_set_string(levelConfig, "core.excludesfile", ignorePath.fileSystemRepresentation)
-[DVTSourceControlGitPlugInPrimary setIgnoredFiles:completionBlock:]
void currentLocationOfRepository(DVTSourceControlRepository *__strong, __strong DVTSourceControlLocationCompletionBlock)
git_repository_head(&head, repo)
refs/heads/
master
DVTSourceControlLogItem *bareLogItemInWorkingCopy(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, NSError *__autoreleasing *, DVTSourceControlHistorySearchType, NSString *__strong)
DVTSourceControlVisualLogItem *_visualHistory_bareLogItemAndCommitInWorkingCopy(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, git_commit **, NSError *__autoreleasing *, DVTSourceControlHistorySearchType, NSString *__strong)
File has multiple parents
DVTSourceControlLogItem *logItemInWorkingCopyWithFilePath(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, DVTSourceControlHistorySearchType, NSString *__strong, NSError *__autoreleasing *)_block_invoke
i28@?0i8^{git_commit=}12^{git_tree=}20
DVTSourceControlLogItem *logItemInWorkingCopyWithFilePath(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, DVTSourceControlHistorySearchType, NSString *__strong, NSError *__autoreleasing *)
q24@?0@8@16
DVTSourceControlVisualLogItem *visualLogItemInWorkingCopyWithFilePath(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, DVTSourceControlHistorySearchType, NSString *__strong, NSError *__autoreleasing *)_block_invoke
DVTSourceControlVisualLogItem *visualLogItemInWorkingCopyWithFilePath(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, DVTSourceControlHistorySearchType, NSString *__strong, NSError *__autoreleasing *)
> %d: %@
Couldn't parse entry. Count of parts: %lu
Formatted:
Unformatted:
-[DVTSourceControlGitPlugInPrimary _cmdCommitToLogItem:workingCopy:]
branch
--no-color
--contains
v32@?0@"NSArray"8q16q24
-[DVTSourceControlGitPlugInPrimary _libgit_historyOfWorkingCopy:fromRevision:toRevision:inclusionType:maximumLogItems:searchString:searchType:includeFilePaths:showMergeCommits:progressBlock:completionBlock:]
oidFromRevision(&startOID, firstRevisionToLog, repo)
git_revwalk_push(walk, &startOID)
%@..%@^1
%@..%@
git_revwalk_push_range(walk, (char *)walk_range)
--follow
--format=%@
-S%@
--author=%@
%@...%@
%@...
...%@
--max-count=%ld
Entry couldn't be parsed: %@
-[DVTSourceControlGitPlugInPrimary _cmd_historyOfWorkingCopy:fromRevision:toRevision:inclusionType:maximumLogItems:searchString:searchType:includeFilePaths:showMergeCommits:progressBlock:completionBlock:]_block_invoke
v16@?0@"NSArray"8
git_reference_iterator_new(&iterator, repo)
void _allLocationsOfRepo(git_repository *, const git_oid *, DVTSourceControlRevisionLocation *__strong, const git_oid **, NSMutableArray<GitOIDHolder *> *__autoreleasing *, NSDictionary<NSString *,NSArray<DVTSourceControlRevisionLocation *> *> *__autoreleasing *, NSArray<DVTSourceControlRevisionLocation *> *__autoreleasing *)
Failed to parse tag '%s'
Failed to parse branch '%s'
-[DVTSourceControlGitPlugInPrimary _libgit_historyOfWorkingCopy:location:progressBlock:completionBlock:]
Could not locate the given reference '%@'
git_revwalk_push(walk, oidToPush)
stash
save
--keep-index
--include-untracked
Could not locate stash identifier from revision
v24@?0q8@"NSError"16
drop
-[DVTSourceControlGitPlugInPrimary _libgit_deleteStash:stashIdentifier:completionBlock:]
git_stash_drop(repo, stashIdentifier)
list
--format="%gd:%H
i32@?0Q8r*16r^{git_oid=[20C]}24
-[DVTSourceControlGitPlugInPrimary _libgit_stashIdentifierFromRevision:workingCopy:completionBlock:]
git_stash_foreach(repo, stashCallback, (__bridge void *)stashBlock)
apply
--index
show
%@.patch
Couldn't create temporary path for stash '%@'
Couldn't write data to path '%@'
-[DVTSourceControlGitPlugInPrimary _libgit_addTag:repository:completionBlock:]
oidFromRevision(&revision_oid, tag.revision, repo)
oidAndCommitFromRevision(&revision_oid, &target_obj, tag.revision, repo)
Tag must have a name
git_tag_create(&created_tag_oid, repo, [tag.name UTF8String], ((git_object *)target_obj), sig, utf8message, false)
-[DVTSourceControlGitPlugInPrimary _libgit_pushTag:name:remote:delete:completionBlock:]
git_remote_push(remote, &tag_refspec, &pushOptions)
push
-[DVTSourceControlGitPlugInPrimary _libgit_removeTag:fromRepository:andRemoteRepository:completionBlock:]
git_tag_delete(repo, [tag.name UTF8String])
-[DVTSourceControlGitPlugInPrimary switchLocation:ofWorkingCopy:completionBlock:]
git_repository_head(&originalHead, repo)
%@/%@
git_branch_lookup(&ref, repo, remoteBranchName.UTF8String, GIT_BRANCH_REMOTE)
git_commit_lookup(&target, repo, targetOID)
git_branch_create(&newRef, repo, branch.name.UTF8String, target, 0)
git_branch_set_upstream(newRef, remoteBranchName.UTF8String)
Repo locked with libgit operation (%s)
git_checkout_tree(repo, (const git_object *)target, &checkoutOptions)
git_repository_set_head(repo, git_reference_name(newRef))
refs/heads/%@
git_repository_head(&ref, repo)
git_branch_lookup(&ref, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
git_repository_set_head(repo, git_reference_name(ref))
git_reference_name_to_id(&oid, repo, [NSString stringWithFormat:@"refs/tags/%@", tag.name].UTF8String)
git_tag_lookup(&gitTag, repo, &oid)
git_checkout_tree(repo, (const git_object *)gitTag, &checkoutOptions)
git_repository_set_head_detached(repo, &oid)
oidFromRevision(&oid, location.revision, repo)
git_commit_lookup(&target, repo, &oid)
git_repository_set_head(repo, git_reference_name(originalHead))
git_repository_set_head_detached(repo, git_reference_target(originalHead))
-[DVTSourceControlGitPlugInPrimary _libgit_cherryPick:revision:completionBlock:]
oidAndCommitFromRevision(&commitOID, &commit, revision, repo)
git_cherrypick_init_options(&options, GIT_CHERRYPICK_OPTIONS_VERSION)
CHERRY_PICK_HEAD
Please review and fix the following files:
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
Merge conflicts occurred due to the cherry-pick operation
cherry-pick
Oh noes
errrrr
v24@?0@"NSArray"8@"NSError"16
-[DVTSourceControlGitPlugInPrimary loadCompleteTag:tag:completionBlock:]
git_oid_fromstrp(&oid, revisionHash)
git_tag_lookup(&lookup_tag, repo, &oid)
-[DVTSourceControlGitPlugInPrimary _libgit2_allCurrentLocations:withCompletionBlock:]
git_reference_iterator_new(&iter, repo)
v32@?0@"DVTSourceControlRemoteRepository"8@"NSDictionary"16@"NSError"24
v24@?0@"DVTSourceControlRevisionLocation"8@"NSError"16
Failed to get ahead/behind counts for branch '%s' using remote '%s'
Expected the remote branch name to have a minimum length of '%lu' characters, but it had '%lu'
Failed to lookup remote '%@' to add remote branch '%@'
-[DVTSourceControlGitPlugInPrimary _cmd_allCurrentLocations:withCompletionBlock:]
ahead
behind
Expected 'ahead' or 'behind', got '%@' instead.
Expected to get two components, got '%lu' instead from string '%@'
show-ref
refs/stash
tags
heads
Failed to parse remote branch '%@'
remotes
Unexpected reference encountered - '%@'
-[DVTSourceControlGitPlugInPrimary _libgit2_fetch:remote:prune:progressIdentifier:completionBlock:]
git_remote_fetch(remote, NULL, &opts, NULL)
Failed to locate remote for URL '%@'
fetch
--prune
revert
--no-edit
Upgrade not valid for Git.
-[DVTSourceControlGitPlugInPrimary identifierOfRepositoryForWorkingCopy:completionBlock:]
ls-remote
Couldn't get HEAD rev or branches for remote '%@'
Ensure you have permissions to access this repository.
git_odb_new(&odb)
-[DVTSourceControlGitPlugInPrimary _libgit_headRevisionOfRemoteRepository:andBranches:completionBlock:]
git_repository_wrap_odb(&gitRepository, odb)
git_remote_create_anonymous(&remote, gitRepository, remoteRepository.gitRemoteURL.absoluteString.UTF8String)
git_remote_connect(remote, GIT_DIRECTION_FETCH, &remoteCallbacks, &proxyOptions, NULL)
git_remote_ls(&heads, &size, remote)
v32@?0@"DVTSourceControlRevision"8@"NSArray"16@"NSError"24
--format=%H
v32@?0@"NSArray"8@"NSDictionary"16@"NSError"24
--all
remotes/
 -> 
Couldn't list branches for '%@'
-[DVTSourceControlGitPlugInPrimary _libgit_listRemoteBranchesOfRepository:branchAndTagLocations:completionBlock:]
git_remote_list(&remotes, repo)
git_branch_iterator_new(&branchIterator, repo, GIT_BRANCH_ALL)
git_branch_next(&gitBranch, &branchType, branchIterator)
git_branch_name(&gitBranchName, gitBranch)
-[DVTSourceControlGitPlugInPrimary parentBranchesOfBranch:inRepository:branchAndTagLocations:completionBlock:]
git_branch_lookup(&myGitBranch, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
git_branch_iterator_new(&branchIterator, repo, GIT_BRANCH_LOCAL)
-[DVTSourceControlGitPlugInPrimary ancestorRevisionInRepository:ofBranch:otherBranch:branchAndTagLocations:completionBlock:]
git_branch_lookup(&firstBranch, repo, first.name.UTF8String, GIT_BRANCH_LOCAL)
git_branch_lookup(&secondBranch, repo, second.name.UTF8String, GIT_BRANCH_LOCAL)
git_merge_base(&ancestor, repo, git_reference_target(firstBranch), git_reference_target(secondBranch))
-[DVTSourceControlGitPlugInPrimary addBranch:from:toRepository:branchAndTagLocations:completionBlock:]
git_branch_lookup(&ref, repo, startBranch.remoteName?[NSString stringWithFormat:@"%@/%@", startBranch.remoteName, startBranch.name].UTF8String:startBranch.name.UTF8String, GIT_BRANCH_REMOTE)
git_branch_lookup(&ref, repo, startBranch.name.UTF8String, GIT_BRANCH_LOCAL)
git_object_peel((git_object **)&target, (git_object *)gitTag, GIT_OBJ_COMMIT)
oidFromRevision(&revisionOID, startLocation.revision, repo)
-[DVTSourceControlGitPlugInPrimary removeBranch:fromRepository:andRemoteRepository:branchAndTagLocations:completionBlock:]
git_remote_lookup(&remote, repo, [branch.remoteName cStringUsingEncoding:NSUTF8StringEncoding])
:refs/heads/%@
git_remote_push(remote, &pushRefSpecs, &pushOptions)
git_branch_lookup(&gitBranch, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
-[DVTSourceControlGitPlugInPrimary diffRepository:fromLocation:againstLocation:branchAndTagLocations:completionBlock:]
oidFromLocation(&startOID, startLocation, repo)
oidFromLocation(&endOID, endLocation, repo)
git_commit_lookup(&startCommit, repo, &startOID)
git_commit_lookup(&endCommit, repo, &endOID)
git_commit_tree(&startTree, startCommit)
git_commit_tree(&endTree, endCommit)
git_diff_tree_to_tree(&diff, repo, startTree, endTree, &diffopts)
-[DVTSourceControlGitPlugInPrimary _upstreamBranchFromRepository:forBranch:completionBlock:]
git_branch_lookup(&gitBranch, repo, [branch.name cStringUsingEncoding:NSUTF8StringEncoding], GIT_BRANCH_LOCAL)
git_branch_upstream(&gitUpstreamBranch, gitBranch)
git_branch_name(&nameChar, gitUpstreamBranch)
v24@?0@"DVTSourceControlBranch"8@"NSError"16
-[DVTSourceControlGitPlugInPrimary addRemoteRepository:withName:toRepository:completionBlock:]
git_remote_create(&remote, repo, name.UTF8String, [remoteRepository.URL.absoluteString stringByRemovingPercentEncoding].UTF8String)
-[DVTSourceControlGitPlugInPrimary removeRemoteRepositoryNamed:fromRepository:completionBlock:]
git_remote_delete(repo, name.UTF8String)
status
--porcelain
-[DVTSourceControlGitPlugInPrimary _libgit_filesAndStatusOfWorkingCopy:withRemoteStatus:completionBlock:]
git_status_list_new(&statusList, repo, &statusOptions)
Silent error with libgit operation (%s)
git_branch_upstream(&upstreamBranch, head)
git_merge_base(&mergeBase, repo, git_reference_target(head), git_reference_target(upstreamBranch))
git_commit_lookup(&baseCommit, repo, &mergeBase)
git_commit_tree(&baseTree, baseCommit)
git_reference_peel((git_object **)&upstreamTree, upstreamBranch, GIT_OBJ_TREE)
git_diff_tree_to_tree(&treeDiff, repo, baseTree, upstreamTree, &diffopts)
-[DVTSourceControlGitPlugInPrimary addFiles:inWorkingCopy:completionBlock:]
git_repository_index(&index, repo)
git_index_write(index)
-[DVTSourceControlGitPlugInPrimary removeFiles:inWorkingCopy:completionBlock:]
git_index_remove_all(index, &pathsToRemove, NULL, NULL)
v16@?0@"NSError"8
-[DVTSourceControlGitPlugInPrimary _discardAllChanges:files:inWorkingCopy:completionBlock:]
git_checkout_head(repo, &checkoutOptions)
-[DVTSourceControlGitPlugInPrimary _libgit_commitFiles:inWorkingCopy:message:completionBlock:]
git_repository_index(&ourIndex, repo)
git_commit_lookup(&parent, repo, parentOID)
git_commit_tree(&parentTree, parent)
git_index_read_tree(ourIndex, parentTree)
git_index_clear(ourIndex)
git_repository_index(&realIndex, repo)
git_index_write_tree(&treeOID, ourIndex)
git_index_write(realIndex)
git_tree_lookup(&tree, repo, &treeOID)
i16@?0r^{git_oid=[20C]}8
git_repository_mergehead_foreach(repo, mergeHeadCallback, (__bridge void*)mergeHeadBlock)
HEAD
UTF-8
git_commit_create(&commitOID, repo, "HEAD", author, author, "UTF-8", [message cStringUsingEncoding:NSUTF8StringEncoding], tree, parentCount, (const git_commit **)parents)
git_repository_state_cleanup(repo)
git_commit_create_v(&commitOID, repo, "HEAD", author, author, "UTF-8", [message cStringUsingEncoding:NSUTF8StringEncoding], tree, 1, parent)
git_commit_create_v(&commitOID, repo, "HEAD", author, author, "UTF-8", [message cStringUsingEncoding:NSUTF8StringEncoding], tree, 0)
-[DVTSourceControlGitPlugInPrimary _cmd_commitFiles:inWorkingCopy:message:completionBlock:]
commit
--author
%@ <%@>
git_diff_tree_to_workdir_with_index(&diff, repo, revTree, &diffopts)
const char *fileNameAtRevision(git_repository *, char *, git_tree *)
git_diff_find_similar(diff, &similarOptions)
-[DVTSourceControlGitPlugInPrimary contentsOfUnmodifiedFile:inWorkingCopy:completionBlock:]
git_commit_lookup(&commit, repo, commitOID)
git_tree_entry_bypath(&treeEntry, tree, [[relativePath dvtscm_gitNormalizedStringForRepo:repo] cStringUsingEncoding:NSUTF8StringEncoding])
git_blob_lookup(&blob, repo, git_tree_entry_id(treeEntry))
git_blob_filtered_content(&buffer, blob, [[relativePath dvtscm_gitNormalizedStringForRepo:repo] cStringUsingEncoding:NSUTF8StringEncoding], true)
Cannot get a textual representation of this file.
v24@?0@"NSString"8@"DVTSourceControlRevisionLocation"16
-[DVTSourceControlGitPlugInPrimary _libgit_exportFile:inWorkingCopy:fromRevisionLocation:error:]
v24@?0@"DVTSourceControlRevision"8@"NSError"16
git_tree_lookup(&subTree, repo, git_tree_entry_id(treeEntry))
i24@?0r*8r^{git_tree_entry=}16
git_tree_walk(subTree, GIT_TREEWALK_PRE, treeCallback, (__bridge void*)treeBlock)
Tree entry unknown.
-[DVTSourceControlGitPlugInPrimary _cmd_blameFile:inWorkingCopy:fromRevisionLocation:ignoreWhitespace:completionBlock:]
A revision identifier must be supplied.
The revision identifier supplied is nil.
blame
--line-porcelain
^([0-9a-f]{40}) ([0-9]+) ([0-9]+) ?([0-9]*)
author (.*)
author-mail <(.*)>(?:.|
)+?committer-time ([0-9]+)$
0000000000000000000000000000000000000000
Could not blame file '%@'
Error: %@
-[DVTSourceControlGitPlugInPrimary _libgit_blameFile:inWorkingCopy:fromRevisionLocation:completionBlock:]
oidFromRevision(&blameOID, location.revision, repo)
git_blame_file(&repoBlame, repo, path, &blameOptions)
git_blame_buffer(&blame, repoBlame, fileData.bytes, fileData.length)
rev-list
--parents
-[DVTSourceControlGitPlugInPrimary _libgit2_historyOfFile:inWorkingCopy:searchString:searchType:showMergeCommits:progressIdentifier:completionBlock:]
git_diff_tree_to_tree(&diff, repo, parent_tree, tree, &diff_opts)
git_diff_tree_to_tree(&diff, repo, parent_tree, tree, &diff_opts_no_pathspec)
git_diff_find_similar(diff, &find_opts)
Couldn't parse entry: %@
-[DVTSourceControlGitPlugInPrimary _git_historyOfFile:inWorkingCopy:searchString:searchType:showMergeCommits:progressIdentifier:completionBlock:]_block_invoke
Failed to parse record:
-[DVTSourceControlGitPlugInPrimary _git_historyOfFile:inWorkingCopy:searchString:searchType:showMergeCommits:progressIdentifier:completionBlock:]
-[DVTSourceControlGitPlugInPrimary commitDetails:revisions:progressIdentifier:completionBlock:]
git_oid_fromstrp(&shortOID, revisionHash)
Revision '%p' for working copy '%@' could not be found
-[DVTSourceControlGitPlugInPrimary commitDetails:revision:completionBlock:]
--name-status
--topo-order
-[DVTSourceControlGitPlugInPrimary mergeBranch:intoWorkingCopy:completionBlock:]
git_branch_lookup(&mergeBranch, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
git_annotated_commit_from_ref(&annotatedCommit, repo, mergeBranch)
git_merge(repo, (const git_annotated_commit **)&annotatedCommit, 1, &mergeOptions, &checkoutOptions)
-[DVTSourceControlGitPlugInPrimary _forceUpdateWorkingCopy:location:fromRepository:completionBlock:]
origin
git_remote_lookup(&remote, repo, "origin")
git_remote_fetch(remote, NULL, &fetchOptions, NULL)
git_repository_head(&currentReference, repo)
git_branch_upstream(&trackingBranch, currentReference)
git_reference_set_target(&fastForwardedBranch, currentReference, git_reference_target(trackingBranch), NULL)
git_branch_delete(checkoutReference)
git_branch_lookup(&trackingBranch, repo, remoteBranchName.UTF8String, GIT_BRANCH_REMOTE)
git_branch_create(&checkoutReference, repo, branch.name.UTF8String, target, 0)
git_branch_set_upstream(checkoutReference, remoteBranchName.UTF8String)
git_repository_set_head(repo, git_reference_name(checkoutReference))
git_branch_upstream(&trackingBranch, checkoutReference)
git_reference_set_target(&fastForwardedBranch, checkoutReference, git_reference_target(trackingBranch), NULL)
oidFromRevision(&checkoutOID, location.revision, repo)
git_commit_lookup(&target, repo, &checkoutOID)
git_repository_set_head_detached(repo, &checkoutOID)
-[DVTSourceControlGitPlugInPrimary _lookupRemoteName:remoteRepository:]
git_remote_lookup(&remote, repo, remoteName)
-[DVTSourceControlGitPlugInPrimary _lookupRemote:remoteRepository:remoteName:error:]
-[DVTSourceControlGitPlugInPrimary uploadCommitsToRemoteRepository:fromLocalRepository:remoteBranch:pushTags:progressIdentifier:completionBlock:]
refs/tags/*
Make sure there's a remote entry in your Git configuration for the remote URL '%@'.
The push operation failed because no matching remote could be found.
git_repository_init(&repo, URL.fileSystemRepresentation, NO)
-[DVTSourceControlGitPlugInPrimary createRepositoryAtFileURL:completionBlock:]
.DS_Store
UserInterfaceState.xcuserstate
.git/info/exclude
Checking out: %s
Checking out
v32@?0r*8Q16Q24
v20@?0r*8i16
Receiving objects: %@ done
v16@?0r^{git_transfer_progress=IIIIIIQ}8
git_clone(&gitRepository, [repository.gitRemoteURL.absoluteString cStringUsingEncoding:NSUTF8StringEncoding], [fileURL fileSystemRepresentation], &cloneOptions)
-[DVTSourceControlGitPlugInPrimary _libgit_cloneFromRepository:bareClone:location:branchAndTagLocations:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:]
Unable to establish identity of repository.
oidFromRevision(&checkoutOID, location.revision, gitRepository)
git_repository_set_head_detached(gitRepository, &checkoutOID)
git_checkout_head(gitRepository, &checkoutOptions)
git_reference_name_to_id(&oid, gitRepository, [NSString stringWithFormat:@"refs/tags/%@", tag.name].UTF8String)
git_repository_set_head_detached(gitRepository, &oid)
git_repository_open(&gitRepository, fileURL.path.fileSystemRepresentation)
-[DVTSourceControlGitPlugInPrimary _libgit_checkoutWorkingCopyLocation:branchAndTagLocations:useRevision:localAddress:progressIdentifier:completionBlock:]
Git Clone
v32@?0@"DVTSourceControlWorkingCopy"8@"DVTSourceControlRepository"16@"NSError"24
v24@?0@"DVTSourceControlWorkingCopy"8@"NSError"16
v16@?0@"DVTSourceControlRepository"8
((Counting objects:)|(Compressing objects:)|(Receiving objects:)|(Resolving deltas:))[\s]+(([0-9]+)%|([0-9]+,))
Receiving objects:
Compressing objects:
Counting objects:
Resolving deltas:
%@ %li%% done
%@ %li done
v16@?0@"NSString"8
%02X
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
listener
T@"NSXPCListener",&,V_listener
connection
T@"NSXPCConnection",&,V_connection
com.apple.dt.Xcode.sourcecontrol.AuthenticationAgent
No path found for DVTSourceControl's SSH Authentication Agent!
v16@?0@"NSNotification"8
../../../../../../Developer/usr/bin/
No launch path found for %@ task.
/usr/bin/
color.ui=false
core.pager=
core.quotepath=false
--no-pager
GIT_PAGER
SSH_AUTH_SOCK
password
username
accept
Ran out of file descriptors when trying to launch SCM task
com.apple.dt.DVTSourceControlErrorDomain
malloc: recording
GuardMalloc
error
T@"NSError",&,N,V_error
data
T@"NSData",&,N,V_data
readyToParseData
Tc,V_readyToParseData
launchPath
T@"NSString",&,N,V_launchPath
dataString
T@"NSString",&,N,V_dataString
task
T@"NSTask",R,N,V_task
command
T@"NSString",R,N,V_command
arguments
T@"NSArray",&,N,V_arguments
currentDirectoryPath
T@"NSString",&,N,V_currentDirectoryPath
errorData
T@"NSMutableData",R,N,V_errorData
cancelled
Tc,R,N,V_cancelled
authenticationStrategy
T@"DVTSourceControlAuthenticationStrategy",&,N,V_authenticationStrategy
enforceTrustedServerFingerprint
Tc,N,V_enforceTrustedServerFingerprint
isCancelled
Tc,N,V_isCancelled
standardOutputFeedbackBlock
T@?,C,N,V_standardOutputFeedbackBlock
standardErrorFeedbackBlock
T@?,C,N,V_standardErrorFeedbackBlock
trustedServerFingerprint
T@"NSString",&,N,V_trustedServerFingerprint
flushImmediately
Tc,V_flushImmediately
representsXcodeServiceHostedRepository
Tc,R,N,V_representsXcodeServiceHostedRepository
#DVTSourceControl Notice: %s
Method: %s
