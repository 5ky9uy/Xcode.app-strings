@(#)PROGRAM:com.apple.dt.Xcode.sourcecontrol.Git  PROJECT:DVTSourceControl-19453
init
setAuthRequestCount:
setRepository:
potentialAuthenticationStrategies
mutableCopy
firstObject
setNextAuthenticationStrategy:
setPotentialAuthenticationStrategies:
nextAuthenticationStrategy
setCurrentAuthenticationStrategy:
removeObjectAtIndex:
repository
stringWithFormat:
UTF8String
username
cStringUsingEncoding:
authRequestCount
password
length
setAuthenticationError:
iterateAuthenticationStrategy
publicKeyFile
fileSystemRepresentation
privateKeyFile
privateKeyPassword
_sshKeysCredentialsForAuthStrategy:outCredentials:
isMemberOfClass:
_basicAuthenticationForAuthStrategy:allowedTypes:outCredentials:
_sshKeysAuthenticationForAuthStrategy:allowedTypes:outCredentials:
_sshAgentAuthenticationForAuthStrategy:allwoedTypes:outCredentials:
stringWithUTF8String:
setPushError:
initWithRepository:
authenticateAllowedTypes:outCredentials:
pushReferenceForStatus:
currentAuthenticationStrategy
sidebandProgressBlock
setSidebandProgressBlock:
transferProgressBlock
setTransferProgressBlock:
authenticationError
pushError
.cxx_destruct
_repository
_currentAuthenticationStrategy
_sidebandProgressBlock
_transferProgressBlock
_authenticationError
_pushError
_authRequestCount
_nextAuthenticationStrategy
_potentialAuthenticationStrategies
T@"DVTSourceControlRemoteRepository",&,V_repository
T@"DVTSourceControlAuthenticationStrategy",&,V_currentAuthenticationStrategy
T@"DVTSourceControlAuthenticationStrategy",&,V_nextAuthenticationStrategy
T@"NSMutableOrderedSet",&,V_potentialAuthenticationStrategies
T@?,C,V_sidebandProgressBlock
T@?,C,V_transferProgressBlock
T@"NSError",&,V_authenticationError
T@"NSError",&,V_pushError
TQ,V_authRequestCount
gitRepository
name
arrayWithObject:
addObject:
arrayWithObjects:count:
setAuthenticationStrategy:repository:
isNewBranch
remoteName
mainBundle
localizedStringForKey:value:table:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
lastErrorFromCode:repository:
initWithError:
uploadCommitsToRemoteRepository:fromLocalRepository:remoteBranch:pushTags:progressIdentifier:completionBlock:
configAuthorForRepository:
globalConfigAuthor
setConfigAuthor:forRepository:
setGlobalConfigAuthor:
authorForWorkingCopy:completionBlock:
setAuthor:forWorkingCopy:completionBlock:
serviceListener
instanceWithExportedObject:
setXPCService:
setDelegate:
resume
dateWithTimeIntervalSince1970:
initWithAuthor:revision:date:message:fileStatuses:revisionType:workingCopy:
identifier
absoluteString
dvtscm_isEqualToURLStringIgnoringPercentEncoding:
URLWithString:
dvtscm_gitRemoteURL
isEqual:
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
fileURL
path
setCurrentDirectoryPath:
setArguments:
dataString
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
_filesAndStatusOfWorkingCopy:withRemoteStatus:
initWithCapacity:
dictionaryNormalizedString
sharedHeadRevision
initWithFilePath:revision:status:
initWithFilePath:previousFilePath:revision:status:
fileHasCumulativeChanges:workingCopy:filePath:
URLByAppendingPathComponent:
defaultManager
fileExistsAtPath:
fileStatuses:diffopts:source_tree:target_tree:status:outError:
arrayByAddingObjectsFromArray:
filePath
predicateWithBlock:
filteredArrayUsingPredicate:
status
previousFilePath
revision
containsObject:
initWithLocalStatusPaths:remoteStatusPaths:error:
setObject:forKeyedSubscript:
fullyQualifiedReferenceName
initWithArgs:
error
outputLines
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
count
objectAtIndex:
characterAtIndex:
value
objectForKey:
allValues
remoteStatusPaths
localStatusPaths
initWithStatusPaths:upstreamStatusPaths:uncommittedStatusPaths:commonAncestorRevision:error:
filesAndStatusOfWorkingCopy:withRemoteStatus:completionBlock:
buildFileStatuses:
filesAndStatusOfWorkingCopy:sourceBranch:targetBranch:completionBlock:
initWithCharactersNoCopy:length:freeWhenDone:
setInternalString:
internalString
_internalString
T@"NSString",&,N,V_internalString
stringByExpandingTildeInPath
stringWithContentsOfFile:encoding:error:
code
newlineCharacterSet
init:error:
appendFormat:
writeToFile:atomically:encoding:error:
ignoredFilesWithCompletionBlock:
setIgnoredFiles:completionBlock:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
lockURL:
createFileAtPath:contents:attributes:
removeItemAtURL:error:
isFileURL
lock:
unlock:
gitRemoteURL
T@"NSURL",R,N
arrayWithObjects:
fetchStash:index:repo:error:
initWithStash:error:
_deleteStash:stashIdentifier:completionBlock:
_stashIdentiferFromRevision:workingCopy:completionBlock:
initWithValue:error:
tempFilePathBasedOnFileName:outError:
URLByDeletingLastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
data
writeToURL:atomically:
initWithFileURL:error:
_exportStashInWorkingCopy:stashIndex:completionBlock:
logItems
index
message
author
date
fileStatuses
initWithRevision:index:message:author:date:fileStatuses:
commitDetails:revisions:progressIdentifier:completionBlock:
stashChangesOfWorkingCopy:includingUnversioned:message:completionBlock:
deleteStashInWorkingCopy:stash:completionBlock:
applyStashInWorkingCopy:stash:completionBlock:
exportStashInWorkingCopy:stash:completionBlock:
loadCompleteStash:stash:completionBlock:
fetchFromRemoteRepository:repo:includeTags:prune:error:
mergeInBranchInWorkingCopy:mergeBranch:repository:error:
rebaseOntoBranchInRepository:rebaseBranch:error:
garbageCollectWorkingCopy:withForce:
downloadUpdatesFromRemoteRepository:toRepository:removeDeletedLocations:progressIdentifier:completionBlock:
updateWorkingCopy:branch:fromRepository:updateStrategy:completionBlock:
forceUpdateWorkingCopy:location:fromRepository:completionBlock:
userInfo
errorFromCommandLineErrorMessage:
errorFromCode:gitError:repository:
errorFromCode:gitError:
errorFromCommandLineError:
lastErrorFromCode:
gitError_hasPrefix:
gitError_hasSuffix:
gitError_rangeOfString:
gitError_rangeOfTailString:
substringWithRange:
lastPathComponent
isEqualToString:
localizedCaseInsensitiveContainsString:
initWithDomain:code:userInfo:
dateFromRef:
processInfo
environment
boolValue
stringByAppendingPathExtension:
homeDirectoryForCurrentUser
stringByAppendingPathComponent:
mockedGlobalConfigPath
mutableConfigForPath:
mockedConfigPathForRepository:
addMockedConfigData:repository:
mockConfigFiles
mutableMockedGlobalConfig
mutableMockedConfigForRepository:
addMockedConfigData:
_mutableGlobalConfig
_mutableConfigForRepository:
_configForRepository:block:
_configWithBlock:
initWithName:email:error:
_configAuthorForRepository:resultBlock:
emails
_setConfigForRepository:block:
_setGlobalConfigWithBlock:
_configAuthorForRepository:
_setConfigAuthor:forRepository:
globalConfigStringForKey:error:
initialBranchName
setGlobalConfigString:forKey:
globalConfigBoolForKey:error:
configBoolForRepository:key:error:
configStringForRepository:key:error:
configPathForRepository:key:error:
configSignatureForRepository:error:
initialBranchNameOrDefault
unsetInitialBranchName
setInitialBranchName:
initWithUsername:email:
distantPast
dealloc
setXpcService:
_launchPathForTask:
setQualityOfService:
gitLaunchPath
setLaunchPath:
launch
waitUntilExit
remoteRepositories
allKeys
setObject:forKey:
primaryRemoteRepository
listRemoteRepositoriesForRepository:completionBlock:
substringFromIndex:
initWithTagName:revision:
setDate:
initWithBranchName:primaryBranch:remoteName:
setRevision:
dvtscm_stashTitle
recentLocationsForWorkingCopy:error:
initWithTags:branches:stashes:remotes:remoteBranches:currentLocation:recentLocations:primaryRemote:state:error:
_parentsOfRevision:path:inWorkingCopy:completionBlock:
objectAtIndexedSubscript:
initWithLogItem:parentLogItems:fileStatuses:error:
isSimilar:
initWithRevision:error:
listBranchesOfRepository:completionBlock:
_cmd_headRevisionOfRemoteRepository:showBranches:showTags:completionBlock:
_libgit_headRevisionOfRemoteRepository:showBranches:showTags:completionBlock:
authenticationStrategy
setAuthenticationStrategy:
terminationStatus
initWithPattern:options:error:
matchesInString:options:range:
numberOfRanges
rangeAtIndex:
caseInsensitiveCompare:
initWithBranchName:primaryBranch:
initWithIdentifier:
copy
hasPrefix:
initWithBranchName:primaryBranch:remoteBranch:
array
dvtscm_branchNameMinusPrefix
rangeOfString:
initWithRevision:defaultBranch:error:
headRevisionOfRemoteRepository:showBranches:showTags:completionBlock:
dvtscm_gitNormalizedStringForRepo:
_discardAllChanges:files:inWorkingCopy:completionBlock:
addFiles:inWorkingCopy:completionBlock:
addObjectsFromArray:
historyOfFile:inWorkingCopy:fromRevisionLocation:showMergeCommits:maxLogItems:progressIdentifier:completionBlock:
task
whitespaceCharacterSet
truncateIdentifier:
initWithIdentifier:displayName:
sendLogItems:progressIdentifier:
initWithLogItems:error:
waitForLogItemsReceivedWithTimeout:completionBlock:
_logItemForWorkingCopy:revision:logItemCreationBlock:
initWithLogItem:error:
setIncrementalLogStatus:progressValue:progressIdentifier:
branchNameIsValid:
gitSourceControlSystem
initWithURL:sourceControlSystem:
writeToURL:atomically:encoding:error:
initWithRepository:error:
headRevisionOfRepository:completionBlock:
xpcService
proxyObject
timeIntervalSinceDate:
numberWithDouble:
dictionaryWithCapacity:
setValue:forKey:
progressStatus:info:progressIdentifier:
incrementalLogStatus:info:progressIdentifier:
sentLogItems
currentLocationOfWorkingCopy:completionBlock:
allCurrentLocations:completionBlock:
remoteNameIsValid:completionBlock:
revertCommit:revision:completionBlock:
identifierOfRepositoryForWorkingCopy:completionBlock:
commitDetailsWithParents:forRevision:path:completionBlock:
revisionOfLocation:inRepository:completionBlock:
discardChangesInFiles:inWorkingCopy:completionBlock:
discardAllChangesInWorkingCopy:completionBlock:
markAsResolvedFiles:inWorkingCopy:completionBlock:
commitFiles:inWorkingCopy:message:completionBlock:
pathDetailsIfRenamed:relativePath:location:completion:
logItemForWorkingCopy:revision:completionBlock:
visualLogItemForWorkingCopy:revision:completionBlock:
createRepositoryAtFileURL:completionBlock:
validateAuthenticationOfRemoteRepository:completionBlock:
shouldUpdateProgress
setProgressStatus:progressValue:userReadableString:progressIdentifier:
_xpcLastTimeProgressSent
_xpcService
T@"DVTSourceControlGitXPCService",W,V_xpcService
dvtscm_escapedUrlFromString
containsString:
sourceControlSystem
initWithURL:identifier:sourceControlSystem:
initWithPrimaryRemoteRepository:remoteRepositories:error:
stringByRemovingPercentEncoding
addRemoteRepository:withName:toRepository:completionBlock:
removeRemoteRepositoryNamed:fromRepository:completionBlock:
fullyQualifiedName
T@"NSString",R,N
initIncompleteLogItemWithAuthor:revision:date:message:revisionType:
sharedUnversionedLogItem
initWithAuthor:revision:date:message:revisionType:workingCopy:
parents
arrayByAddingObject:
setParents:
fileName
localizedCaseInsensitiveCompare:
sortedArrayUsingComparator:
initWithAuthor:revision:date:message:fileStatuses:parents:revisionType:
subarrayWithRange:
setBranches:
setTags:
initWithState:error:
abortRebaseInRepository:
continueRebaseInRepository:error:
rebaseWorkingCopy:ontoBranch:completionBlock:
rebaseStateForWorkingCopy:completionBlock:
setRebaseState:forWorkingCopy:completionBlock:
URLByAppendingPathComponent:isDirectory:
moveItemAtURL:toURL:error:
moveCaseSensitiveItemAtURL:toURL:error:
hasSuffix:
stringByAppendingString:
directoryWithGlobSuffix
copyItemAtURL:toURL:error:
fileExistsAtPath:isDirectory:
_performMove:workingCopy:originalFilePath:newFilePath:moveUnversionedFiles:outError:
removeFiles:inWorkingCopy:completionBlock:
copyFiles:toFilePaths:inWorkingCopy:completionBlock:
moveFiles:toFilePaths:inWorkingCopy:moveUnversionedFiles:completionBlock:
createDirectory:withIntermediateDirectories:attributes:inWorkingCopy:completionBlock:
isEqualIgnoringPrimaryAndNewStatus:
insertObject:atIndex:
initWithTagName:
initWithRevision:
setLogItem:
initWithLocation:error:
initWithBranchName:primaryBranch:trackingBranch:pullCount:pushCount:
isPlaceholderRevision
isEqualTo:
dvtscm_gitCLINormalizedStringForRepo:
regularExpressionWithPattern:options:error:
dictionary
integerValue
initWithLineRange:logItem:
localizedDescription
initWithBlameItems:error:
blameFile:inWorkingCopy:fromRevisionLocation:ignoreWhitespace:completionBlock:
recentLocationsForWorkingCopy:limit:error:
headFileURLForWorkingCopy:
stringWithContentsOfURL:encoding:error:
_recentRevisionLocationsInWorkingCopy:fileContents:limit:error:
initWithLocations:error:
referenceFromIdentifier:workingCopy:
componentsFromHeadLogLine:invoking:
enumerateSubstringsInRange:options:usingBlock:
firstMatchInString:options:range:
initWithTagName:message:revision:author:
recentLocationsForWorkingCopy:limit:completionBlock:
componentsSeparatedByString:
doubleValue
lastObject
initWithAuthor:revision:date:message:currentFilePath:filePath:status:revisionType:
resolvedFilePath:workingCopy:
lengthOfBytesUsingEncoding:
headRevisionOfRepository:forFile:completionBlock:
componentsJoinedByString:
sharedBaseRevision
sharedInitialRevision
isNotEqualTo:
dvtscm_gitCLINormalizedStringForRepository:
setFlushImmediately:
appendData:
initWithData:encoding:
substringToIndex:
_cmdCommitToSingleFileLogItemWithNameStatus:workingCopy:lastFilePath:currentFilePath:headRevision:currentRevisionLocation:didMatchHEAD:
replaceBytesInRange:withBytes:length:
replaceCharactersInRange:withString:
removeAllObjects
setStandardOutputFeedbackBlock:
initWithBranch:error:
remoteBranches
listRemoteBranchesOfRepository:completionBlock:
_upstreamBranchFromRepository:forBranch:completionBlock:
initWithBranches:defaultBranch:error:
arrayWithCapacity:
_iterateBranchesOfGitRepository:type:iterationBlock:error:
initWithBranches:remoteBranches:error:
initWithBranches:error:
isRemoteBranch
description
logItem
lowercaseString
remoteBranchFromRepository:forBranch:completionBlock:
parentBranchesOfBranch:inRepository:completionBlock:
addBranch:from:toRepository:completionBlock:
removeBranch:fromRepository:andRemoteRepository:completionBlock:
renameBranch:inRepository:toBranchName:checkout:force:completionBlock:
branchesReachableFrom:inWorkingCopy:completionBlock:
initialBranchName:
setInitialBranchName:completionBlock:
searchBranchesInRepository:query:completionBlock:
stringWithCString:encoding:
sharedUnversionedRevision
_libgitCommitToLogItem:revision:workingCopy:
rangeOfString:options:
_historyOfWorkingCopy:location:progressBlock:completionBlock:
unsignedIntegerValue
removeObject:
numberWithUnsignedInteger:
updateVisualInformationWithOutBranchIdentifiers:splitBranchIdentifiers:inBranchIdentifiers:mergedBranchIdentifiers:commitBranchIdentifier:
isValidRevisionString:
arrayWithArray:
initWithLogItem:parentLogItems:error:
historyOfWorkingCopy:fromRevision:toRevision:inclusionType:maximumLogItems:searchString:searchType:includeFilePaths:showMergeCommits:progressIdentifier:completionBlock:
historyOfWorkingCopy:location:progressIdentifier:completionBlock:
visualLogItemWithParentsForIdentifier:ofWorkingCopy:completionBlock:
_gitLaunchPath
bytes
setLength:
initWithData:
_idesc_stringFromMutableData:
dictionaryWithObject:forKey:
defaultCenter
availableData
waitForDataInBackgroundAndNotify
addObserverForName:object:queue:usingBlock:
bundleForClass:
bundleURL
URLByStandardizingPath
arguments
launchPath
dictionaryWithObjects:forKeys:
sshAuthenticationAgentExecutableURL
trustedServerFingerprint
sshAuthenticationAgentFingerprintKey
enforceTrustedServerFingerprint
sshAuthenticationAgentEnforceFingerprintKey
sshAuthenticationAgentPasswordKey
sshAuthenticationAgentUsernameKey
sshAuthenticationAgentPassphraseKey
currentDirectoryPath
noEditor
setEnvironment:
pipe
setStandardInput:
setStandardOutput:
setStandardError:
fileHandleForWriting
fileHandleForReading
standardOutputFeedbackBlock
readDataFromFileHandle:intoBuffer:outstandingOperationCounter:dataParsingBlock:
dataUsingEncoding:
writeData:
standardErrorFeedbackBlock
setTerminationStatus:
removeObserver:
closeFile
setReadyToParseData:
parseDataOrGenerateErrorForTask:operation:
isCancelled
errorData
_idesc_stringFromData:
setError:
errorFromErrorMessage:
setDataString:
setData:
setWaitToParseData:
outputLinesWithBlock:
readyToParseData
command
cancelled
setEnforceTrustedServerFingerprint:
setIsCancelled:
setStandardErrorFeedbackBlock:
setTrustedServerFingerprint:
setNoEditor:
flushImmediately
representsXcodeServiceHostedRepository
_waitToParseData
_readyToParseData
_cancelled
_enforceTrustedServerFingerprint
_isCancelled
_noEditor
_flushImmediately
_representsXcodeServiceHostedRepository
_terminationStatus
_task
_launchPath
_currentDirectoryPath
_arguments
_data
_errorData
_dataString
_command
_error
_authenticationStrategy
_standardOutputFeedbackBlock
_standardErrorFeedbackBlock
_trustedServerFingerprint
T@"NSError",&,N,V_error
Ti,N,V_terminationStatus
T@"NSData",&,N,V_data
Tc,V_readyToParseData
T@"NSString",&,N,V_launchPath
T@"NSString",&,N,V_dataString
T@"NSTask",R,N,V_task
T@"NSString",R,N,V_command
T@"NSArray",&,N,V_arguments
T@"NSString",&,N,V_currentDirectoryPath
T@"NSMutableData",R,N,V_errorData
Tc,R,N,V_cancelled
T@"DVTSourceControlAuthenticationStrategy",&,N,V_authenticationStrategy
Tc,N,V_enforceTrustedServerFingerprint
Tc,N,V_isCancelled
T@?,C,N,V_standardOutputFeedbackBlock
T@?,C,N,V_standardErrorFeedbackBlock
T@"NSString",&,N,V_trustedServerFingerprint
Tc,V_noEditor
Tc,V_flushImmediately
Tc,R,N,V_representsXcodeServiceHostedRepository
setOid:
_oid
Tr^{git_oid=[20C]},V_oid
commitToEndConflictsInWorkingCopy:repository:
initWithLogItemFiles:error:
abortMergeInWorkingCopy:
diffRepository:fromLocation:againstLocation:completionBlock:
mergeBranch:intoWorkingCopy:completionBlock:
displayName
switchLocation:ofWorkingCopy:completionBlock:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
operationsFinished
cherryPick:revision:parentRevision:completionBlock:
createWorkingCopyFromRepository:location:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:
createLocalRepositoryFromRepository:localAddress:mirrored:progressIdentifier:completionBlock:
continueOrFinishConflictOperationInWorkingCopy:completionBlock:
abortConflictOperationInWorkingCopy:completionBlock:
currentConflictRevisionsForWorkingCopy:upstreamRevision:completionBlock:
exportFile:inWorkingCopy:fromRevisionLocation:completionBlock:
exportConflictVersionsOfFile:inWorkingCopy:completionBlock:
unmodifiedContentsOfFile:includingUpstream:inWorkingCopy:completionBlock:
receivedLogItems
searchReferencesInRepository:query:completionBlock:
stateOfWorkingCopy:completionBlock:
loadCompleteTag:tag:completionBlock:
addTag:toRepository:completionBlock:
removeTag:fromRepository:andRemoteRepository:completionBlock:
listTagsOfRemoteRepository:completionBlock:
searchTagsInRepository:query:completionBlock:
scanForWorkingCopiesInPotentialWorkingCopies:completionBlock:
scanForRepositoryInFolderPath:completionBlock:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
serviceIdentifier
remoteObjectProtocol
exportedObjectProtocol
adjustExportedInterface:
stringWithString:
T@"NSString",R
markAllConflictsAsResolvedInWorkingCopy:
continueCherryPickInWorkingCopy:error:
initWithLocalRevision:upstreamRevision:ancestorRevision:error:
fileURLWithPath:
dataWithBytes:length:
writeToURL:options:error:
createTreeWriterForURL:repo:error:
initWithUnmodifiedURL:upstreamURL:ancestorURL:error:
_unmodifiedContentsOfFile:includingUpstream:inWorkingCopy:completionBlock:
_exportFile:inWorkingCopy:fromRevisionLocation:error:
generateTemporaryPath:withData:error:
createTemporaryFolder:error:
writeRelativePath:toFolder:withData:error:
exportOID:relativePath:repo:error:
initWithFileURL:parentFileURL:ancestorFileURL:error:
initWithNewTagName:message:revision:
initWithTag:error:
pushTag:name:remote:delete:completionBlock:
initWithTags:error:
iterateReferencesOfGitRepository:skipBlock:iterationBlock:error:
pushTag:name:remote:completionBlock:
_readDataFromFileHandle:intoBuffer:outstandingOperationCounter:dataParsingBlock:
_libgit_cloneFromRepository:cloneType:location:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:
initWithBytes:length:encoding:
setCountStyle:
stringFromByteCount:
initWithFileURL:repository:
beginActivityWithOptions:reason:
_cmd_createWorkingCopyFromRepository:location:localAddress:existingAddress:progressIdentifier:
_libgit_createWorkingCopyFromRepository:location:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:
_libgit_checkoutWorkingCopyLocation:useRevision:localAddress:progressIdentifier:completionBlock:
endActivity:
initWithWorkingCopy:error:
_cmd_createLocalRepositoryFromRepository:localAddress:mirrored:progressIdentifier:
_libgit_createLocalRepositoryFromRepository:localAddress:mirrored:progressIdentifier:completionBlock:
_cmd_cloneFromRepository:cloneType:location:localAddress:existingAddress:progressIdentifier:
_runGitLocalCloneForURL:forRemoteRepository:cloneType:localURL:progressIdentifier:
_runGitCloneForRemoteRepository:cloneType:branchName:localURL:standardError:standardOut:feedbackBlock:
abortCherryPickOperationInWorkingCopy:error:
runCherryPickCommand:repository:revision:mainline:error:
initWithRevision:hasConflicts:error:
numberWithInteger:
stringValue
fingerprintOfCertificate:
shouldTrustServer:withFingerprint:userTrustedFingerprint:
initWithFileURL:unidentifiableRepository:
initWithWorkingCopies:error:
#DVTSourceControlGitXPC: %s
Method: %s
Authentication: repository: %@, Basic auth selected
-[DVTSourceControlGitRemoteCallbackPayload _basicAuthenticationForAuthStrategy:allowedTypes:outCredentials:]
Authentication: repository: %@, Basic auth: no password provided
No password provided for SSH.
Authentication: repository: %@, Basic auth unavailable. Allowed types are: %u
Authentication: repository: %@, exceeded callback limit
Credentials invalid.
Authentication: repository: %@, SSH Key auth selected
-[DVTSourceControlGitRemoteCallbackPayload _sshKeysAuthenticationForAuthStrategy:allowedTypes:outCredentials:]
Authentication: repository: %@, SSH Key auth unavailable
Authentication: repository: %@, SSH Agent auth selected
-[DVTSourceControlGitRemoteCallbackPayload _sshAgentAuthenticationForAuthStrategy:allwoedTypes:outCredentials:]
Authentication: repository: %@, SSH Agent auth unavailable
Authentication: repository: %@, callback: %lu
-[DVTSourceControlGitRemoteCallbackPayload authenticateAllowedTypes:outCredentials:]
Authentication: repository: %@, unknown strategy: %@
Authentication: repository: %@, no remaining strategies found
Repository provided was not a local repository (%@)
-[DVTSourceControlGitPlugInPrimary(Upload) uploadCommitsToRemoteRepository:fromLocalRepository:remoteBranch:pushTags:progressIdentifier:completionBlock:]
Repository is not a DVTSourceControlRepository
Could not find local libgit repo for %@
NULL gitRepository for %@
Error with libgit operation (%s)
git_repository_head(&localBranch, repo)
%s:refs/heads/%@
git_tag_list(&tagNames, repo)
refs/tags/%s
git_remote_push(remote, &pushRefSpecs, &pushOptions)
%@/%@
Make sure there's a remote entry in your Git configuration for the remote URL '%@'.
The push operation failed because no matching remote could be found.
-[DVTSourceControlGitPlugInPrimary(Author) authorForWorkingCopy:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Author) setAuthor:forWorkingCopy:completionBlock:]
git_revwalk_new(&walk, repo)
NSString *gitRepositoryIdentifier(git_repository *)
git_revwalk_push_head(walk)
gitError
git_commit_lookup(&commit, repo, &revisionOID)
git_commit_tree(&tree, commit)
git_remote_list(&remotes, repo)
git_remote *lookupRemote(git_repository *, DVTSourceControlRemoteRepository *__strong, BOOL, NSString *__autoreleasing *, NSError *__autoreleasing *)
git_remote_lookup(&remote, repo, remoteName)
diff
--no-color
HEAD
Silent error with libgit operation (%s)
git_diff_tree_to_tree(&treeDiff, repo, source_tree, target_tree, &diffopts)
-[DVTSourceControlGitPlugInPrimary(Status) fileStatuses:diffopts:source_tree:target_tree:status:outError:]
-[DVTSourceControlGitPlugInPrimary(Status) _filesAndStatusOfWorkingCopy:withRemoteStatus:]
git_status_list_new(&statusList, repo, &statusOptions)
git_repository_head(&head, repo)
git_branch_upstream(&upstreamBranch, head)
git_merge_base(&mergeBase, repo, git_reference_target(head), git_reference_target(upstreamBranch))
git_commit_lookup(&baseCommit, repo, &mergeBase)
git_commit_tree(&baseTree, baseCommit)
git_reference_peel((git_object **)&upstreamTree, upstreamBranch, GIT_OBJ_TREE)
git_reference_peel((git_object **)&headTree, head, GIT_OBJ_TREE)
c24@?0@8@"NSDictionary"16
%@...%@
-[DVTSourceControlGitPlugInPrimary(Status) filesAndStatusOfWorkingCopy:sourceBranch:targetBranch:completionBlock:]
git_reference_lookup(&sourceReference, repo, sourceBranchName)
git_reference_lookup(&targetReference, repo, targetBranchName)
git_reference_name_to_id(&source_tree_oid, repo, source_ref_name)
git_reference_name_to_id(&target_tree_oid, repo, target_ref_name)
git_reference_peel((git_object **)&sourceTree, sourceReference, GIT_OBJ_TREE)
git_reference_peel((git_object **)&targetTree, targetReference, GIT_OBJ_TREE)
--name-status
git_merge_base(&merge_base, repo, &source_tree_oid, &target_tree_oid)
core.excludesfile
~/%@
.gitignore_global
git_config_set_string(levelConfig, "core.excludesfile", ignorePath.fileSystemRepresentation)
-[DVTSourceControlGitPlugInPrimary(Ignore) setIgnoredFiles:completionBlock:]
index.lock
stash
save
-[DVTSourceControlGitPlugInPrimary(Stash) stashChangesOfWorkingCopy:includingUnversioned:message:completionBlock:]
i32@?0Q8r*16r^{git_oid=[20C]}24
Could not locate stash identifier from revision
v24@?0q8@"NSError"16
-[DVTSourceControlGitPlugInPrimary(Stash) _deleteStash:stashIdentifier:completionBlock:]
git_stash_drop(repo, stashIdentifier)
-[DVTSourceControlGitPlugInPrimary(Stash) _stashIdentiferFromRevision:workingCopy:completionBlock:]
git_stash_foreach(repo, stashCallback, (__bridge void *)stashBlock)
-[DVTSourceControlGitPlugInPrimary(Stash) applyStashInWorkingCopy:stash:completionBlock:]
git_stash_apply(repo, stashIndex, &options)
git_repository_index(&index, repo)
show
%ld.patch
Couldn't create temporary path for stash '%ld'
Couldn't write data to path '%@'
v16@?0@"DVTSourceControlHistoryResultType"8
git_remote_fetch(remote, NULL, &fetchOptions, NULL)
-[DVTSourceControlGitPlugInPrimary(Update) fetchFromRemoteRepository:repo:includeTags:prune:error:]
Failed to locate remote for URL '%@'
-[DVTSourceControlGitPlugInPrimary(Update) downloadUpdatesFromRemoteRepository:toRepository:removeDeletedLocations:progressIdentifier:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Update) updateWorkingCopy:branch:fromRepository:updateStrategy:completionBlock:]
git_branch_lookup(&remoteBranch, repo, remoteBranchName.UTF8String, GIT_BRANCH_REMOTE)
git_repository_head(&currentReference, repo)
git_branch_upstream(&remoteBranch, currentReference)
-[DVTSourceControlGitPlugInPrimary(Update) forceUpdateWorkingCopy:location:fromRepository:completionBlock:]
origin
git_remote_lookup(&remote, repo, "origin")
git_branch_upstream(&trackingBranch, currentReference)
git_reference_set_target(&fastForwardedBranch, currentReference, git_reference_target(trackingBranch), NULL)
git_checkout_head(repo, &checkoutOptions)
git_branch_delete(checkoutReference)
git_branch_lookup(&trackingBranch, repo, remoteBranchName.UTF8String, GIT_BRANCH_REMOTE)
git_commit_lookup(&target, repo, targetOID)
git_branch_create(&checkoutReference, repo, branch.name.UTF8String, target, 0)
git_branch_set_upstream(checkoutReference, remoteBranchName.UTF8String)
git_checkout_tree(repo, (const git_object *)target, &checkoutOptions)
git_repository_set_head(repo, git_reference_name(checkoutReference))
git_branch_upstream(&trackingBranch, checkoutReference)
git_reference_set_target(&fastForwardedBranch, checkoutReference, git_reference_target(trackingBranch), NULL)
refs/tags/%@
git_reference_name_to_id(&oid, repo, [NSString stringWithFormat:@"refs/tags/%@", tag.name].UTF8String)
git_tag_lookup(&gitTag, repo, &oid)
git_checkout_tree(repo, (const git_object *)gitTag, &checkoutOptions)
git_repository_set_head_detached(repo, &oid)
No revision provided.
oidFromRevision(&checkoutOID, location.revision, repo)
git_commit_lookup(&target, repo, &checkoutOID)
git_repository_set_head_detached(repo, &checkoutOID)
%@ (%li)
Reference '
' not found
The path '
' does not exist in the given tree
Cannot locate remote-tracking branch '
Object not found - no matching loose object (
Object not found - no match for id (
Object not found - no match for prefix (
Cannot locate local branch '
the requested type does not match the type in the ODB
Cannot push
invalid url, missing path
Malformed URL '
the given reference name 'refs/heads/
' is not valid
Failed to write reference '
': a reference with that name already exists.
after resolving the conflicts, mark the corrected paths
The previous cherry-pick is now empty, possibly due to conflict resolution.
you do not have permission
Repository not found
SSL error: error:140E0114
Failed to resolve address for
HTTP status code: 401
Authentication failed
Permission denied
access denied
Failed to authenticate SSH session
HTTP status code: 403
HTTP status code: 404
HTTP status code: 500
could not resolve host
SSL certificate is invalid
SSL certificate problem
Certificate host name check failed
user cancelled certificate check
Early EOF
unsupported URL protocol
Permission to
denied to
cross host redirect not allowed
curl error: Failed to connect to
An unknown error occured.
DVTSourceControlTests_MockConfigFiles
dvtsourcecontrolmock
init.defaultBranch
v8@?0
git_config_find_global(&buffer)
-[DVTSourceControlGitPlugInPrimary(Config) mockedGlobalConfigPath]
.gitconfig
git_repository_item_path(&configBuffer, repository, GIT_REPOSITORY_ITEM_CONFIG)
-[DVTSourceControlGitPlugInPrimary(Config) mockedConfigPathForRepository:]
config
git_config_open_ondisk(&result, mockedConfigPath.UTF8String)
-[DVTSourceControlGitPlugInPrimary(Config) mutableConfigForPath:]
%@: Applying global and local mocked config data
-[DVTSourceControlGitPlugInPrimary(Config) addMockedConfigData:repository:]
git_config_add_file_ondisk(config, mockedGlobalConfigPath.UTF8String, GIT_CONFIG_LEVEL_GLOBAL, NULL, 1)
git_config_add_file_ondisk(config, mockedRepositoryConfigPath.UTF8String, GIT_CONFIG_LEVEL_LOCAL, repository, 1)
ERROR: Failed to override config with mocked data: %d
git_config_open_default(&defaultConfig)
-[DVTSourceControlGitPlugInPrimary(Config) _mutableGlobalConfig]
git_config_open_level(&result, defaultConfig, GIT_CONFIG_LEVEL_GLOBAL)
git_repository_config(&defaultConfig, repository)
-[DVTSourceControlGitPlugInPrimary(Config) _mutableConfigForRepository:]
git_config_open_level(&result, defaultConfig, GIT_CONFIG_LEVEL_LOCAL)
git_config_open_default(&config)
-[DVTSourceControlGitPlugInPrimary(Config) _configWithBlock:]
git_config_snapshot(&snapshotConfig, config)
git_repository_config(&config, repository)
-[DVTSourceControlGitPlugInPrimary(Config) _configForRepository:block:]
user.name
user.email
v16@?0^{git_config=}8
v24@?0@"NSString"8@"NSString"16
--quiet
--auto
-[DVTSourceControlGitPlugInPrimary allCurrentLocations:completionBlock:]
git_reference_iterator_new(&iter, repo)
v16@?0@"DVTSourceControlListRemoteRepositoriesResultType"8
Failed to parse tag '%s'
Failed to lookup remote '%@' to add remote branch '%@'
revert
--no-edit
-[DVTSourceControlGitPlugInPrimary identifierOfRepositoryForWorkingCopy:completionBlock:]
v24@?0@"NSArray"8@"NSError"16
v16@?0@"DVTSourceControlListBranchesResultType"8
v48@?0@"DVTSourceControlRevision"8@"DVTSourceControlBranch"16@"NSArray"24@"NSArray"32@"NSError"40
ls-remote
--heads
--tags
--symref
^(\S+)[\s](\S+)[\s]{0,1}(\S+){0,1}$
ref:
git_odb_new(&odb)
-[DVTSourceControlGitPlugInPrimary _libgit_headRevisionOfRemoteRepository:showBranches:showTags:completionBlock:]
git_repository_wrap_odb(&gitRepository, odb)
git_remote_create_anonymous(&remote, gitRepository, remoteRepository.gitRemoteURL.absoluteString.UTF8String)
git_remote_connect(remote, GIT_DIRECTION_FETCH, &remoteCallbacks, &proxyOptions, NULL)
git_remote_ls(&heads, &size, remote)
refs/heads/
refs/tags/
-[DVTSourceControlGitPlugInPrimary _discardAllChanges:files:inWorkingCopy:completionBlock:]
-[DVTSourceControlGitPlugInPrimary commitFiles:inWorkingCopy:message:completionBlock:]
v16@?0@"DVTSourceControlWorkingCopyStatusResultType"8
git_index_write(index)
core.ignorecase=false
commit
--author
%@ <%@>
git_reference_name_to_id(&headOID, repo, "HEAD")
v16@?0@"DVTSourceControlFileHistoryResultType"8
rev-list
--parents
-[DVTSourceControlGitPlugInPrimary commitDetails:revisions:progressIdentifier:completionBlock:]
git_oid_fromstrp(&shortOID, revisionHash)
Revision '%p' for working copy '%@' could not be found
-[DVTSourceControlGitPlugInPrimary _logItemForWorkingCopy:revision:logItemCreationBlock:]
v36@?0{git_oid=[20C]}8^{git_repository=}28
Git Repository Creation Failed
.git
git_repository_init_ext(&repo, URL.fileSystemRepresentation, &opts)
-[DVTSourceControlGitPlugInPrimary createRepositoryAtFileURL:completionBlock:]
.DS_Store
UserInterfaceState.xcuserstate
.git/info/exclude
v16@?0@"DVTSourceControlHeadRevisionResultType"8
/SourcePackages/repositories/
-[DVTSourceControlGitPlugInPrimary(Remote) addRemoteRepository:withName:toRepository:completionBlock:]
git_remote_create(&remote, repo, name.UTF8String, [remoteRepository.URL.absoluteString stringByRemovingPercentEncoding].UTF8String)
-[DVTSourceControlGitPlugInPrimary(Remote) removeRemoteRepositoryNamed:fromRepository:completionBlock:]
git_remote_delete(repo, name.UTF8String)
DVTSourceControlLogItem *bareLogItemInWorkingCopy(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, NSError *__autoreleasing *, DVTSourceControlHistorySearchType, NSString *__strong)
DVTSourceControlVisualLogItem *visualHistory_bareLogItemAndCommitInWorkingCopy(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, git_commit **, NSError *__autoreleasing *, DVTSourceControlHistorySearchType, NSString *__strong)
i28@?0i8^{git_commit=}12^{git_tree=}20
DVTSourceControlLogItem *logItemInWorkingCopyWithFilePath(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, DVTSourceControlHistorySearchType, NSString *__strong, NSError *__autoreleasing *)
q24@?0@8@16
DVTSourceControlVisualLogItem *visualLogItemInWorkingCopyWithFilePath(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, DVTSourceControlHistorySearchType, NSString *__strong, NSError *__autoreleasing *)
BOOL rebaseIterate(git_repository *, git_rebase *, git_signature *, NSError *__autoreleasing *)
git_rebase_commit(&commitOid, rebase, NULL, author, NULL, NULL)
git_rebase_finish(rebase, NULL)
git_rebase_open(&rebase, repo, &rebaseOptions)
-[DVTSourceControlGitPlugInPrimary(Rebase) abortRebaseInRepository:]
git_rebase_abort(rebase)
-[DVTSourceControlGitPlugInPrimary(Rebase) continueRebaseInRepository:error:]
git_annotated_commit_from_ref(&annotatedCommit, repo, rebaseBranch)
-[DVTSourceControlGitPlugInPrimary(Rebase) rebaseOntoBranchInRepository:rebaseBranch:error:]
git_rebase_init(&rebase, repo, NULL, annotatedCommit, NULL, &rebaseOptions)
-[DVTSourceControlGitPlugInPrimary(Rebase) rebaseWorkingCopy:ontoBranch:completionBlock:]
git_branch_lookup(&rebaseBranch, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
-[DVTSourceControlGitPlugInPrimary(Rebase) rebaseStateForWorkingCopy:completionBlock:]
pull.rebase
-[DVTSourceControlGitPlugInPrimary(Rebase) setRebaseState:forWorkingCopy:completionBlock:]
git_repository_config(&config, repo)
git_config_open_level(&levelConfig, config, GIT_CONFIG_LEVEL_LOCAL)
%@-casesensitive-rename
-[DVTSourceControlGitPlugInPrimary(FileManagement) addFiles:inWorkingCopy:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(FileManagement) removeFiles:inWorkingCopy:completionBlock:]
git_index_remove_all(index, &pathsToRemove, NULL, NULL)
v16@?0@"DVTSourceControlXPCResultType"8
git_index_remove_all(index, &sourceDirectoriesArray, NULL, NULL)
-[DVTSourceControlGitPlugInPrimary(FileManagement) _performMove:workingCopy:originalFilePath:newFilePath:moveUnversionedFiles:outError:]
git_index_add_all(index, &targetDirectoriesArray, GIT_INDEX_ADD_DEFAULT, NULL, NULL)
git_index_add(index, &new)
git_index_remove(index, originalCStringFilePath, 0)
git_index_add_bypath(index, newCStringFilePath)
-[DVTSourceControlGitPlugInPrimary(FileManagement) moveFiles:toFilePaths:inWorkingCopy:moveUnversionedFiles:completionBlock:]
git_reference_iterator_new(&iterator, repo)
void _allLocationsOfRepo(git_repository *, const git_oid *, DVTSourceControlRevisionLocation *__strong, const git_oid **, NSDictionary<NSString *,NSArray<DVTSourceControlRevisionLocation *> *> *__autoreleasing *, NSArray<DVTSourceControlRevisionLocation *> *__autoreleasing *)
Failed to parse branch '%s'
DVTSourceControlRevisionLocationResultType *currentLocationOfRepository(DVTSourceControlGitPlugInPrimary *__strong, DVTSourceControlRepository *__strong)
Expected branch but received '%s'
DVTSourceControlBranch *resolveBranch(git_repository *, const git_oid *, git_reference *, DVTSourceControlRevision *__strong)
Failed to get ahead/behind counts for branch '%s' using remote '%s'
Expected the remote branch name to have a minimum length of '%lu' characters, but it had '%lu'
-[DVTSourceControlGitPlugInPrimary(Blame) blameFile:inWorkingCopy:fromRevisionLocation:ignoreWhitespace:completionBlock:]
A revision identifier must be supplied.
The revision identifier supplied is nil.
blame
--line-porcelain
^([0-9a-f]{40}) ([0-9]+) ([0-9]+) ?([0-9]*)
author (.*)
author-mail <(.*)>(?:.|
)+?committer-time ([0-9]+)$
0000000000000000000000000000000000000000
Could not load authors for file '%@'
Error: %@
logs/HEAD
-[DVTSourceControlGitPlugInPrimary(Metadata) headFileURLForWorkingCopy:]
The .git/logs/HEAD metadata file failed to parse.
v40@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^c48
([a-f0-9]+)
checkout: moving from (.+) to (.+)
^%@\s+%@.*%@$
-[DVTSourceControlGitPlugInPrimary(Metadata) referenceFromIdentifier:workingCopy:]
git_reference_dwim(&ref, repo, refString)
git_tag_lookup(&tag, repo, ref_oid)
--format=%H
v24@?0@"DVTSourceControlRevision"8@"NSError"16
v16@?0@"DVTSourceControlRevisionLocationResultType"8
--follow
refs/heads/%@
--topo-order
--format=%@
Couldn't parse entry: %@
-[DVTSourceControlGitPlugInPrimary(FileLog) historyOfFile:inWorkingCopy:fromRevisionLocation:showMergeCommits:maxLogItems:progressIdentifier:completionBlock:]_block_invoke
v16@?0@"NSData"8
Failed to parse record:
-[DVTSourceControlGitPlugInPrimary(FileLog) historyOfFile:inWorkingCopy:fromRevisionLocation:showMergeCommits:maxLogItems:progressIdentifier:completionBlock:]
Failed to find file known to be renamed '%@'
-[DVTSourceControlGitPlugInPrimary(FileLog) resolvedFilePath:workingCopy:]_block_invoke
Logging renamed file '%@', previously named '%@'
-[DVTSourceControlGitPlugInPrimary(Branch) _upstreamBranchFromRepository:forBranch:completionBlock:]
git_branch_lookup(&gitBranch, repo, [branch.name cStringUsingEncoding:NSUTF8StringEncoding], GIT_BRANCH_LOCAL)
git_branch_upstream(&gitUpstreamBranch, gitBranch)
git_branch_name(&nameChar, gitUpstreamBranch)
v24@?0@"DVTSourceControlBranch"8@"NSError"16
git_branch_iterator_new(&branchIterator, repo, branchTypes)
-[DVTSourceControlGitPlugInPrimary(Branch) _iterateBranchesOfGitRepository:type:iterationBlock:error:]
git_branch_next(&gitBranch, &branchType, branchIterator)
c20@?0^{git_reference=}8i16
-[DVTSourceControlGitPlugInPrimary(Branch) listRemoteBranchesOfRepository:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Branch) parentBranchesOfBranch:inRepository:completionBlock:]
git_branch_lookup(&gitBranch, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
-[DVTSourceControlGitPlugInPrimary(Branch) addBranch:from:toRepository:completionBlock:]
git_branch_lookup(&ref, repo, startBranch.remoteName?[NSString stringWithFormat:@"%@/%@", startBranch.remoteName, startBranch.name].UTF8String:startBranch.name.UTF8String, GIT_BRANCH_REMOTE)
git_branch_lookup(&ref, repo, startBranch.name.UTF8String, GIT_BRANCH_LOCAL)
git_object_peel((git_object **)&target, (git_object *)gitTag, GIT_OBJ_COMMIT)
git_commit_lookup(&target, repo, &oid)
oidFromRevision(&revisionOID, startLocation.revision, repo)
git_branch_create(&newRef, repo, branch.name.UTF8String, target, 0)
-[DVTSourceControlGitPlugInPrimary(Branch) removeBranch:fromRepository:andRemoteRepository:completionBlock:]
git_remote_lookup(&remote, repo, [branch.remoteName cStringUsingEncoding:NSUTF8StringEncoding])
:refs/heads/%@
-[DVTSourceControlGitPlugInPrimary(Branch) renameBranch:inRepository:toBranchName:checkout:force:completionBlock:]
git_branch_lookup(&oldGitBranch, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
git_branch_move(&newGitBranch, oldGitBranch, newBranchName.UTF8String, force)
git_repository_head(&originalHead, repo)
Repo locked with libgit operation (%s)
git_repository_set_head(repo, git_reference_name(newGitBranch))
git_repository_set_head(repo, git_reference_name(originalHead))
git_repository_set_head_detached(repo, git_reference_target(originalHead))
branch
--contains
-[DVTSourceControlGitPlugInPrimary(Branch) searchBranchesInRepository:query:completionBlock:]
v32@?0@"NSArray"8q16q24
-[DVTSourceControlGitPlugInPrimary(Log) historyOfWorkingCopy:fromRevision:toRevision:inclusionType:maximumLogItems:searchString:searchType:includeFilePaths:showMergeCommits:progressIdentifier:completionBlock:]
oidFromRevision(&startOID, firstRevisionToLog, repo)
git_revwalk_push(walk, &startOID)
%@..%@^1
%@..%@
git_revwalk_push_range(walk, (char *)walk_range)
v16@?0@"NSArray"8
-[DVTSourceControlGitPlugInPrimary(Log) _historyOfWorkingCopy:location:progressBlock:completionBlock:]
Could not locate the given reference '%@'
git_revwalk_push(walk, oidToPush)
git_oid_fromstrp(&identifierOID, identifierString)
-[DVTSourceControlGitPlugInPrimary(Log) visualLogItemWithParentsForIdentifier:ofWorkingCopy:completionBlock:]
git_commit_lookup_prefix(&commit, gitRepository, &identifierOID, identifierLength)
git_commit_parent(&parentCommit, commit, commitParentIdx)
v16@?0@"NSNotification"8
../../../../../../Developer/usr/bin/
No launch path found for %@ task.
/usr/bin/
color.ui=false
core.pager=
core.quotepath=false
--no-pager
en_US.UTF-8
/nonexistent
LANG
DISPLAY
HOME
GIT_PAGER
SSH_ASKPASS
GIT_ASKPASS
/usr/bin/ssh -v -F /dev/null -o UserKnownHostsFile=/dev/null -o FingerprintHash=md5 -o HostKeyAlgorithms=ssh-rsa -o IdentitiesOnly=yes
GIT_SSH_COMMAND
/usr/bin/ssh -v -l %@ -F /dev/null -o UserKnownHostsFile=/dev/null -o FingerprintHash=md5 -o HostKeyAlgorithms=ssh-rsa -o IdentitiesOnly=yes
/usr/bin/ssh -v -l %@ -F /dev/null -o UserKnownHostsFile=/dev/null -o FingerprintHash=md5 -o HostKeyAlgorithms=ssh-rsa -o IdentitiesOnly=yes -i %@
SSH_AUTH_SOCK
true
GIT_EDITOR
password
username
accept
Ran out of file descriptors when trying to launch SCM task
com.apple.dt.DVTSourceControlErrorDomain
malloc: recording
GuardMalloc
merge
--abort
Merge branch
git_annotated_commit_from_ref(&annotatedCommit, repo, mergeBranch)
-[DVTSourceControlGitPlugInPrimary(Merge) mergeInBranchInWorkingCopy:mergeBranch:repository:error:]
git_merge_analysis(&analysis, &preferences, repo, (const git_annotated_commit **)&annotatedCommit, 1)
git_commit_lookup(&target, repo, git_annotated_commit_id(annotatedCommit))
git_reference_set_target(NULL, currentReference, git_reference_target(mergeBranch), NULL)
git_merge(repo, (const git_annotated_commit **)&annotatedCommit, 1, &mergeOptions, &checkoutOptions)
-[DVTSourceControlGitPlugInPrimary(Merge) diffRepository:fromLocation:againstLocation:completionBlock:]
oidFromLocation(&startOID, startLocation, repo)
oidFromLocation(&endOID, endLocation, repo)
git_commit_lookup(&startCommit, repo, &startOID)
git_commit_lookup(&endCommit, repo, &endOID)
git_commit_tree(&startTree, startCommit)
git_commit_tree(&endTree, endCommit)
git_diff_tree_to_tree(&diff, repo, startTree, endTree, &diffopts)
-[DVTSourceControlGitPlugInPrimary(Merge) mergeBranch:intoWorkingCopy:completionBlock:]
git_branch_lookup(&mergeBranch, repo, branchName, branchType)
-[DVTSourceControlGitPlugInPrimary(Switch) switchLocation:ofWorkingCopy:completionBlock:]
git_branch_lookup(&ref, repo, remoteBranchName.UTF8String, GIT_BRANCH_REMOTE)
git_branch_set_upstream(newRef, remoteBranchName.UTF8String)
git_repository_set_head(repo, git_reference_name(newRef))
git_repository_head(&ref, repo)
git_branch_lookup(&ref, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
git_repository_set_head(repo, git_reference_name(ref))
oidFromRevision(&oid, location.revision, repo)
core.precomposeunicode
-[DVTSourceControlGitPlugInPrimary(Conflict) stateOfWorkingCopy:completionBlock:]
NSError *finishIndexConflict(git_repository *)
-[DVTSourceControlGitPlugInPrimary(Conflict) continueOrFinishConflictOperationInWorkingCopy:completionBlock:]
cherry-pick
NSError *abortIndexConflict(git_repository *)
-[DVTSourceControlGitPlugInPrimary(Conflict) abortConflictOperationInWorkingCopy:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Conflict) currentConflictRevisionsForWorkingCopy:upstreamRevision:completionBlock:]
oidFromRevision(&upstream, forcedUpstreamRevision, repo)
MERGE_HEAD
ORIG_HEAD
REBASE_HEAD
rebase-merge/current
CHERRY_PICK_HEAD
git_repository_head(&conflictHead, repo)
git_reference_lookup(&conflictHead, repo, conflictRefName)
git_reference_lookup(&originalHead, repo, originalRefName)
git_merge_base(&ancestor, repo, &local, &upstream)
git_commit_lookup(&commit, repo, commitOID)
int fileContentsAtCommit(git_repository *, const git_oid *, DVTSourceControlGitPlugInPrimary *__strong, NSString *__strong, NSURL *__autoreleasing *, NSError *__autoreleasing *)
git_tree_entry_bypath(&treeEntry, tree, [[relativePath dvtscm_gitNormalizedStringForRepo:repo] cStringUsingEncoding:NSUTF8StringEncoding])
git_blob_lookup(&blob, repo, git_tree_entry_id(treeEntry))
git_blob_filtered_content(&buffer, blob, [[relativePath dvtscm_gitNormalizedStringForRepo:repo] cStringUsingEncoding:NSUTF8StringEncoding], true)
git_tree_lookup(&subTree, repo, git_tree_entry_id(treeEntry))
git_tree_walk(subTree, GIT_TREEWALK_PRE, treeCallback, (__bridge void*)treeWriter)
Cannot get a textual representation of this file.
-[DVTSourceControlGitPlugInPrimary(Export) _unmodifiedContentsOfFile:includingUpstream:inWorkingCopy:completionBlock:]
fileContentsAtCommit(repo, commitOID, self, relativePath, &unmodified, &error)
fileContentsAtCommit(repo, upstreamOID, self, relativePath, &upstream, nil)
git_merge_base(&ancestorOID, repo, commitOID, upstreamOID)
fileContentsAtCommit(repo, &ancestorOID, self, relativePath, &ancestor, nil)
v24@?0@"NSString"8@"DVTSourceControlRevisionLocation"16
v16@?0@"DVTSourceControlExportContentsResultType"8
-[DVTSourceControlGitPlugInPrimary(Export) _exportFile:inWorkingCopy:fromRevisionLocation:error:]
oidAndCommitFromRevision(&commitOID, &commit, revision, repo)
Tree entry unknown.
i24@?0r*8r^{git_tree_entry=}16
git_blob_lookup(&blob, repo, oid)
-[DVTSourceControlGitPlugInPrimary(Export) exportOID:relativePath:repo:error:]
-[DVTSourceControlGitPlugInPrimary(Export) exportConflictVersionsOfFile:inWorkingCopy:completionBlock:]
git_index_conflict_get(&ancestor, &our, &their, index, [[relativePath dvtscm_gitNormalizedStringForRepo:repo] cStringUsingEncoding:NSUTF8StringEncoding])
-[DVTSourceControlGitPlugInPrimary(Tag) addTag:toRepository:completionBlock:]
oidFromRevision(&revision_oid, tag.revision, repo)
oidAndCommitFromRevision(&revision_oid, &target_obj, tag.revision, repo)
Tag must have a name
git_tag_create(&created_tag_oid, repo, [tag.name UTF8String], ((git_object *)target_obj), author, utf8message, false)
-[DVTSourceControlGitPlugInPrimary(Tag) pushTag:name:remote:delete:completionBlock:]
git_remote_push(remote, &tag_refspec, &pushOptions)
-[DVTSourceControlGitPlugInPrimary(Tag) removeTag:fromRepository:andRemoteRepository:completionBlock:]
git_tag_delete(repo, [tag.name UTF8String])
-[DVTSourceControlGitPlugInPrimary(Tag) loadCompleteTag:tag:completionBlock:]
git_oid_fromstrp(&oid, revisionHash)
git_tag_lookup(&lookup_tag, repo, &oid)
c16@?0^{git_reference=}8
-[DVTSourceControlGitPlugInPrimary(Tag) searchTagsInRepository:query:completionBlock:]
Reusing existing copy.
--bare
--mirror
clone
--local
--progress
--no-checkout
Unable to reuse existing copy. Falling back to a full clone.
remote
set-url
--branch
-[DVTSourceControlGitPlugInPrimary(Clone) _runGitCloneForRemoteRepository:cloneType:branchName:localURL:standardError:standardOut:feedbackBlock:]
DVTSourceControlGitPlugInPrimary+Clone.m
branchName == nil
GIT_CONFIG_NOSYSTEM
GIT_FLUSH
Checking out: %s
Checking out
v32@?0r*8Q16Q24
v20@?0r*8i16
Receiving objects: %@ done
v16@?0r^{git_transfer_progress=IIIIIIQ}8
git_clone(&gitRepository, gitRemoteURL, clonePath, &cloneOptions)
-[DVTSourceControlGitPlugInPrimary(Clone) _libgit_cloneFromRepository:cloneType:location:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:]
git_repository_config(&cfg, gitRepository)
remote.origin.mirror
git_config_set_bool(cfg, "remote.origin.mirror", true)
remote.origin.fetch
+refs/*:refs/*
git_config_set_string(cfg, "remote.origin.fetch", "+refs/*:refs/*")
Unable to establish identity of repository.
oidFromRevision(&checkoutOID, location.revision, gitRepository)
git_repository_set_head_detached(gitRepository, &checkoutOID)
git_checkout_head(gitRepository, &checkoutOptions)
git_reference_name_to_id(&oid, gitRepository, [NSString stringWithFormat:@"refs/tags/%@", tag.name].UTF8String)
git_repository_set_head_detached(gitRepository, &oid)
git_repository_open(&gitRepository, fileURL.path.fileSystemRepresentation)
-[DVTSourceControlGitPlugInPrimary(Clone) _libgit_checkoutWorkingCopyLocation:useRevision:localAddress:progressIdentifier:completionBlock:]
Git Clone
v32@?0@"DVTSourceControlWorkingCopy"8@"DVTSourceControlRepository"16@"NSError"24
v24@?0@"DVTSourceControlWorkingCopy"8@"NSError"16
v16@?0@"DVTSourceControlRepositoryResultType"8
((Counting objects:)|(Compressing objects:)|(Receiving objects:)|(Resolving deltas:))[\s]+(([0-9]+)%|([0-9]+,))
Receiving objects:
Compressing objects:
Counting objects:
Resolving deltas:
%@ %li%% done
%@ %li done
v16@?0@"NSString"8
-[DVTSourceControlGitPlugInPrimary(CherryPick) abortCherryPickOperationInWorkingCopy:error:]
-[DVTSourceControlGitPlugInPrimary(CherryPick) continueCherryPickInWorkingCopy:error:]
--continue
-[DVTSourceControlGitPlugInPrimary(CherryPick) cherryPick:revision:parentRevision:completionBlock:]
git_commit_lookup(&headCommit, repo, &headOID)
oidAndCommitFromRevision(&commitOID, &cherryPickCommit, revision, repo)
oidAndCommitFromRevision(&parentOID, &parentCommit, parentRevision, repo)
-[DVTSourceControlGitPlugInPrimary(CherryPick) runCherryPickCommand:repository:revision:mainline:error:]
git_reference_iterator_new(&gitReferenceIterator, repo)
-[DVTSourceControlGitPlugInPrimary(References) iterateReferencesOfGitRepository:skipBlock:iterationBlock:error:]
git_reference_next(&gitReference, gitReferenceIterator)
-[DVTSourceControlGitPlugInPrimary(References) searchReferencesInRepository:query:completionBlock:]
%02X
DVTSourceControlGitRemoteCallbackPayload
Upload
Author
Status
DVTSourceControlGitCLINormalizedString
Ignore
DVTSourceControlGitPlugInPrimary
Stash
Update
DVTSourceControlError
GitDate
Config
Remote
Additions
PrivateGit
Rebase
CaseChange
libgit2
FileManagement
Blame
Metadata
FileLog
Branch
DVTSourceControlGitTask
DVTSourceControlGitOIDHolder
Merge
Switch
DVTSourceControlPlugInCallbackProtocol
NSObject
DVTSourceControlPlugInProtocol
DVTSourceControlGitXPCService
GitNormalizedString
GitErrorParsing
GitStashParsing
GitBranchPrefixPruning
Conflict
Export
Clone
CherryPick
References
Scanning
@24@0:8@16
v16@0:8
i36@0:8@16i24^^{git_cred}28
i32@0:8@16^^{git_cred}24
i36@0:8@16I24^^{git_cred}28
i28@0:8I16^^{git_cred}20
v24@0:8r*16
@16@0:8
v24@0:8@16
@?16@0:8
v24@0:8@?16
Q16@0:8
v24@0:8Q16
@"DVTSourceControlRemoteRepository"
@"DVTSourceControlAuthenticationStrategy"
@"NSError"
@"NSMutableOrderedSet"
v60@0:8@16@24@32c40@44@?52
v32@0:8@16@?24
v40@0:8@16@24@?32
c40@0:8^{git_repository=}16@24@32
v36@0:8@16c24@?28
@152@0:8^{git_repository=}16{?=IIi{git_strarray=^*Q}^?^?^vIISq**}24^{git_tree=}120^{git_tree=}128Q136^@144
@28@0:8@16c24
@24@0:8^{git_diff=}16
v48@0:8@16@24@32@?40
@36@0:8^S16Q24c32
S24@0:8Q16
r*16@0:8
@"NSString"
@24@0:8^{git_repository=}16
c24@0:8^{git_repository=}16
v24@0:8^{git_repository=}16
^{git_repository=}16@0:8
v44@0:8@16c24@28@?36
v40@0:8@16q24@?32
@48@0:8@16^{git_repository=}24c32c36^@40
v52@0:8@16@24c32@36@?44
v56@0:8@16@24@32Q40@?48
@32@0:8q16r^{?=*i}24
@40@0:8q16r^{?=*i}24@32
@24@0:8q16
@32@0:8q16@24
@24@0:8^{git_reference=}16
c16@0:8
^{git_config=}24@0:8@16
^{git_config=}16@0:8
^{git_config=}24@0:8^{git_repository=}16
v24@0:8^{git_config=}16
v32@0:8^{git_config=}16^{git_repository=}24
@24@0:8@?16
@32@0:8^{git_repository=}16@?24
v32@0:8^{git_repository=}16@?24
@32@0:8@16^{git_repository=}24
c32@0:8@16^@24
@32@0:8@16^@24
@32@0:8@16@24
c40@0:8^{git_repository=}16@24^@32
@40@0:8^{git_repository=}16@24^@32
^{git_signature=**{git_time=qic}}32@0:8^{git_repository=}16^@24
v28@0:8@16c24
v40@0:8@16c24c28@?32
v44@0:8c16@20@28@?36
@40@0:8@16@24@?32
v32@0:8@16@24
v48@0:8q16d24@32@40
v40@0:8@16d24@32
@"NSDate"
@"DVTSourceControlGitXPCService"
@60@0:8{git_oid=[20C]}16Q36^{git_repository=}44^@52
c32@0:8^{git_repository=}16^@24
c40@0:8^{git_repository=}16^{git_reference=}24^@32
v40@0:8Q16@24@?32
c40@0:8@16@24^@32
c60@0:8^{git_index=}16@24@32@40c48^@52
v52@0:8@16@24@32c40@?44
v52@0:8@16c24@28@36@?44
@40@0:8@16Q24^@32
v40@0:8@16Q24@?32
@48@0:8@16@24Q32^@40
@32@0:8@16@?24
@72@0:8@16@24@32@40@48@56^c64
v68@0:8@16@24@32c40q44@52@?60
c44@0:8^{git_repository=}16i24@?28^@36
v56@0:8@16@24@32c40c44@?48
c24@0:8@16
@52@0:8^{git_commit=}16{git_oid=[20C]}24@44
v96@0:8@16@24@32Q40q48@56Q64c72c76@80@?88
v48@0:8@16@24@?32@?40
@48@0:8@16@24^q32@?40
v20@0:8c16
i16@0:8
v20@0:8i16
@"NSTask"
@"NSArray"
@"NSData"
@"NSMutableData"
r^{git_oid=[20C]}16@0:8
v24@0:8r^{git_oid=[20C]}16
r^{git_oid=[20C]}
c48@0:8@16^{git_reference=}24^{git_repository=}32^@40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8q16@24@32
v40@0:8@16@24@32
v40@0:8q16@"NSDictionary"24@"NSUUID"32
v40@0:8@"NSArray"16@"NSDictionary"24@"NSUUID"32
v32@0:8@"DVTSourceControlAuthenticationStrategy"16@"DVTSourceControlRemoteRepository"24
v68@0:8@16@24c32@36@44@52@?60
v32@0:8@"DVTSourceControlRemoteRepository"16@?<v@?@"DVTSourceControlXPCResultType">24
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlAuthorResultType">24
v40@0:8@"DVTSourceControlAuthor"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlXPCResultType">32
v52@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@"DVTSourceControlRevisionLocation"32c40@?<v@?@"DVTSourceControlBlameResultType">44
v32@0:8@"DVTSourceControlRepository"16@?<v@?@"DVTSourceControlListBranchesResultType">24
v40@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRepository"24@?<v@?@"DVTSourceControlBranchesResultType">32
v48@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlRepository"32@?<v@?@"DVTSourceControlBranchResultType">40
v48@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRepository"24@"DVTSourceControlRemoteRepository"32@?<v@?@"DVTSourceControlXPCResultType">40
v56@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRepository"24@"NSString"32c40c44@?<v@?@"DVTSourceControlBranchResultType">48
v40@0:8@"DVTSourceControlRevision"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlBranchesResultType">32
v24@0:8@?<v@?@"DVTSourceControlStringResultType">16
v32@0:8@"NSString"16@?<v@?@"DVTSourceControlXPCResultType">24
v40@0:8@"DVTSourceControlRepository"16@"NSString"24@?<v@?@"DVTSourceControlBranchesResultType">32
v40@0:8@"NSArray"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlXPCResultType">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlXPCResultType">24
v40@0:8@"DVTSourceControlRevisionLocation"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlRevisionLocationResultType">32
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@"DVTSourceControlRevision"32@?<v@?@"DVTSourceControlRevisionConflictsResultType">40
v68@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRevisionLocation"24c32@"NSURL"36@"NSURL"44@"NSUUID"52@?<v@?@"DVTSourceControlWorkingCopyResultType">60
v52@0:8@"DVTSourceControlRemoteRepository"16@"NSURL"24c32@"NSUUID"36@?<v@?@"DVTSourceControlRepositoryResultType">44
v32@0:8@"NSURL"16@?<v@?@"DVTSourceControlRepositoryResultType">24
v48@0:8@"NSArray"16@"DVTSourceControlWorkingCopy"24@"NSString"32@?<v@?@"DVTSourceControlRevisionResultType">40
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlBoolResultType">24
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@?<v@?@"DVTSourceControlConflictResultType">32
v48@0:8@"DVTSourceControlRepository"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlRevisionLocation"32@?<v@?@"DVTSourceControlLogItemFilesResultType">40
v48@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@"DVTSourceControlRevisionLocation"32@?<v@?@"DVTSourceControlExportResultType">40
v40@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlExportResultType">32
v44@0:8@"NSString"16c24@"DVTSourceControlWorkingCopy"28@?<v@?@"DVTSourceControlExportContentsResultType">36
v52@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRepository"24c32@"NSUUID"36@?<v@?@"DVTSourceControlStringResultType">44
v48@0:8@"NSArray"16@"NSArray"24@"DVTSourceControlWorkingCopy"32@?<v@?@"DVTSourceControlXPCResultType">40
v52@0:8@"NSArray"16@"NSArray"24@"DVTSourceControlWorkingCopy"32c40@?<v@?@"DVTSourceControlXPCResultType">44
v52@0:8@"NSString"16c24@"NSDictionary"28@"DVTSourceControlWorkingCopy"36@?<v@?@"DVTSourceControlXPCResultType">44
v96@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@"DVTSourceControlRevision"32Q40q48@"NSString"56Q64c72c76@"NSUUID"80@?<v@?@"DVTSourceControlHistoryResultType">88
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevisionLocation"24@"NSUUID"32@?<v@?@"DVTSourceControlVisualHistoryResultType">40
v68@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@"DVTSourceControlRevisionLocation"32c40q44@"NSUUID"52@?<v@?@"DVTSourceControlFileHistoryResultType">60
v48@0:8@"DVTSourceControlWorkingCopy"16@"NSArray"24@"NSUUID"32@?<v@?@"DVTSourceControlHistoryResultType">40
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@"NSString"32@?<v@?@"DVTSourceControlCommitDetailsResultType">40
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@?<v@?@"DVTSourceControlLogItemResultType">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@?<v@?@"DVTSourceControlVisualLogItemResultType">32
v40@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlVisualLogParentsResultType">32
v24@0:8@?<v@?@"DVTSourceControlStringsResultType">16
v32@0:8@"NSArray"16@?<v@?@"DVTSourceControlXPCResultType">24
v40@0:8@"DVTSourceControlWorkingCopy"16Q24@?<v@?@"DVTSourceControlRevisionLocationsResultType">32
v40@0:8@"DVTSourceControlBranch"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlBoolResultType">32
v60@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRepository"24@"DVTSourceControlBranch"32c40@"NSUUID"44@?<v@?@"DVTSourceControlXPCResultType">52
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlBranch"24@?<v@?@"DVTSourceControlBoolResultType">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlRebaseStateResultType">24
v40@0:8Q16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlXPCResultType">32
v40@0:8@"DVTSourceControlRepository"16@"NSString"24@?<v@?@"DVTSourceControlRevisionLocationsResultType">32
v32@0:8@"DVTSourceControlRepository"16@?<v@?@"DVTSourceControlListRemoteRepositoriesResultType">24
v40@0:8@"DVTSourceControlRepository"16@"DVTSourceControlBranch"24@?<v@?@"DVTSourceControlBranchResultType">32
v48@0:8@"DVTSourceControlRemoteRepository"16@"NSString"24@"DVTSourceControlRepository"32@?<v@?@"DVTSourceControlXPCResultType">40
v40@0:8@"NSString"16@"DVTSourceControlRepository"24@?<v@?@"DVTSourceControlXPCResultType">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@?<v@?@"DVTSourceControlXPCResultType">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?@"DVTSourceControlStashResultType">32
v44@0:8@"DVTSourceControlWorkingCopy"16c24@"NSString"28@?<v@?@"DVTSourceControlStashResultType">36
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?@"DVTSourceControlXPCResultType">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?@"DVTSourceControlBoolResultType">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?@"DVTSourceControlExportResultType">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlWorkingCopyLocationsResultType">24
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlRevisionLocationResultType">24
v32@0:8@"DVTSourceControlRepository"16@?<v@?@"DVTSourceControlHeadRevisionResultType">24
v40@0:8@"DVTSourceControlRevisionLocation"16@"DVTSourceControlRepository"24@?<v@?@"DVTSourceControlRevisionResultType">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlWorkingCopyStateResultType">24
v36@0:8@"DVTSourceControlWorkingCopy"16c24@?<v@?@"DVTSourceControlWorkingCopyStatusResultType">28
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlBranch"24@"DVTSourceControlBranch"32@?<v@?@"DVTSourceControlFileStatusResultType">40
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlTag"24@?<v@?@"DVTSourceControlTagResultType">32
v40@0:8@"DVTSourceControlTag"16@"DVTSourceControlRepository"24@?<v@?@"DVTSourceControlTagResultType">32
v48@0:8@"DVTSourceControlTag"16@"DVTSourceControlRepository"24@"DVTSourceControlRemoteRepository"32@?<v@?@"DVTSourceControlXPCResultType">40
v32@0:8@"DVTSourceControlRemoteRepository"16@?<v@?@"DVTSourceControlTagsResultType">24
v40@0:8@"DVTSourceControlRepository"16@"NSString"24@?<v@?@"DVTSourceControlTagsResultType">32
v56@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlBranch"24@"DVTSourceControlRemoteRepository"32Q40@?<v@?@"DVTSourceControlBoolResultType">48
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlRemoteRepository"32@?<v@?@"DVTSourceControlXPCResultType">40
v32@0:8@"NSArray"16@?<v@?@"DVTSourceControlWorkingCopiesResultType">24
v32@0:8@"NSString"16@?<v@?@"DVTSourceControlRepositoryResultType">24
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlStringResultType">24
{_NSRange=QQ}24@0:8@16
@48@0:8@16@24@32^@40
@?40@0:8@16^{git_repository=}24^@32
@48@0:8r^{git_oid=[20C]}16@24^{git_repository=}32^@40
c56@0:8@16@24Q32@40@48
@72@0:8@16Q24@32@40^@48^@56@?64
v76@0:8@16Q24@32c40@44@52@60@?68
c56@0:8@16@24@32@40@48
c44@0:8@16@24c32@36
c64@0:8@16Q24@32@40@48@56
i32@0:8@16^@24
@56@0:8@16^{git_repository=}24@32q40^@48
c48@0:8^{git_repository=}16@?24@?32^@40
