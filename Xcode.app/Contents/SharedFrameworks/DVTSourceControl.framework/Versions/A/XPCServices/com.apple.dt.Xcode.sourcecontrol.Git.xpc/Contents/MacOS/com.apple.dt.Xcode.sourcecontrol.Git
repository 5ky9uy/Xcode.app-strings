sidebandProgressBlock
transferProgressBlock
authenticationBlock
pushReferenceBlock
fingerprintOfCertificate:
repository
trustedServerFingerprint
shouldTrustServer:withFingerprint:userTrustedFingerprint:
initWithCapacity:
appendFormat:
enforceTrustedServerFingerprint
compare:options:
setAuthenticationError:
password
cStringUsingEncoding:
lengthOfBytesUsingEncoding:
init
setAuthRequestCount:
authRequestCount
stringWithFormat:
UTF8String
authenticationStrategy
class
isMemberOfClass:
length
username
publicKeyFile
fileSystemRepresentation
privateKeyFile
privateKeyPassword
setAuthenticationBlock:
stringWithUTF8String:
setPushError:
setPushReferenceBlock:
setRepository:
initWithRepository:
.cxx_destruct
setSidebandProgressBlock:
setTransferProgressBlock:
authenticationError
pushError
_repository
_sidebandProgressBlock
_transferProgressBlock
_authenticationBlock
_pushReferenceBlock
_authenticationError
_pushError
_authRequestCount
gitRepository
name
arrayWithObject:
addObject:
arrayWithObjects:count:
isNewBranch
remoteName
mainBundle
localizedStringForKey:value:table:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
lastErrorFromCode:repository:
uploadCommitsToRemoteRepository:fromLocalRepository:remoteBranch:pushTags:progressIdentifier:completionBlock:
initWithUsername:email:
emails
firstObject
authorForWorkingCopy:completionBlock:
defaultAuthorForWorkingCopy:completionBlock:
setAuthor:forWorkingCopy:completionBlock:
serviceListener
setDelegate:
resume
dateWithTimeIntervalSince1970:
initWithAuthor:revision:date:message:fileStatuses:revisionType:workingCopy:
identifier
absoluteString
dvtscm_isEqualToURLStringIgnoringPercentEncoding:
URLWithString:
dvtscm_gitRemoteURL
isEqual:
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
gitRemoteURL
array
isEqualToString:
dvtscm_branchNameMinusPrefix
initWithBranchName:primaryBranch:
rangeOfString:
substringFromIndex:
initWithBranchName:primaryBranch:remoteBranch:
setRevision:
initWithTagName:revision:
filesAndStatusOfWorkingCopy:withRemoteStatus:statusFlags:completionBlock:
dictionaryNormalizedString
sharedHeadRevision
initWithFilePath:previousFilePath:revision:status:
initWithFilePath:revision:status:
filesAndStatusOfWorkingCopy:withRemoteStatus:completionBlock:
initWithCharactersNoCopy:length:freeWhenDone:
setInternalString:
internalString
characterAtIndex:
_internalString
stringByExpandingTildeInPath
stringWithContentsOfFile:encoding:error:
code
newlineCharacterSet
componentsSeparatedByCharactersInSet:
isKindOfClass:
predicateWithBlock:
filteredArrayUsingPredicate:
writeToFile:atomically:encoding:error:
ignoredFilesWithCompletionBlock:
setIgnoredFiles:completionBlock:
URLByAppendingPathComponent:
defaultManager
lockURL
path
fileExistsAtPath:
createFileAtPath:contents:attributes:
removeItemAtURL:error:
isFileURL
lock
unlock
arrayWithObjects:
initWithArgs:
fileURL
setCurrentDirectoryPath:
error
fetchStash:index:repo:error:
revision
_deleteStash:stashIdentifier:completionBlock:
_stashIdentiferFromRevision:workingCopy:completionBlock:
tempFilePathBasedOnFileName:outError:
URLByDeletingLastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
data
writeToURL:atomically:
_exportStashInWorkingCopy:stashIndex:completionBlock:
index
message
author
date
fileStatuses
initWithRevision:index:message:author:date:fileStatuses:
commitDetails:revisions:progressIdentifier:completionBlock:
stashChangesOfWorkingCopy:includingUnversioned:message:completionBlock:
deleteStashInWorkingCopy:stash:completionBlock:
applyStashInWorkingCopy:stash:completionBlock:
exportStashInWorkingCopy:stash:completionBlock:
loadCompleteStash:stash:completionBlock:
garbageCollectWorkingCopy:withForce:
downloadUpdatesFromRemoteRepository:toRepository:removeDeletedLocations:progressIdentifier:completionBlock:
updateWorkingCopy:branch:fromRepository:updateStrategy:completionBlock:
forceUpdateWorkingCopy:location:fromRepository:completionBlock:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
userInfo
objectForKey:
errorFromCommandLineErrorMessage:
errorFromCode:gitError:repository:
errorFromCode:gitError:
errorFromCommandLineError:
lastErrorFromCode:
gitError_hasPrefix:
gitError_hasSuffix:
gitError_rangeOfString:
gitError_rangeOfTailString:
substringWithRange:
lastPathComponent
initWithDomain:code:userInfo:
dealloc
_launchPathForTask:
setQualityOfService:
gitLaunchPath
setLaunchPath:
setArguments:
launch
waitUntilExit
initWithName:plugInIdentifier:version:workingCopyFolderIdentifier:URLHintStrings:features:supportedAuthenticationTypes:supportedUpdateStrategies:revisionMatchingStyle:revisionIdentifierMinimumLength:revisionIdentifierRegExString:
gitSourceControlSystem
dvtscm_host
allKeys
setObject:forKey:
listRemoteRepositoriesForRepository:completionBlock:
setDate:
initWithBranchName:primaryBranch:remoteName:
initWithBranchName:primaryBranch:trackingBranch:pullCount:pushCount:
dvtscm_stashTitle
currentLocationOfWorkingCopy:completionBlock:
_parentsOfRevision:path:inWorkingCopy:completionBlock:
count
objectAtIndexedSubscript:
isSimilar:
listBranchesOfRepository:completionBlock:
dvtscm_gitNormalizedStringForRepo:
_discardAllChanges:files:inWorkingCopy:completionBlock:
addFiles:inWorkingCopy:completionBlock:
mutableCopy
status
filePath
previousFilePath
caseInsensitiveCompare:
addObjectsFromArray:
copy
historyOfFile:inWorkingCopy:fromRevisionLocation:showMergeCommits:maxLogItems:progressIdentifier:completionBlock:
task
terminationStatus
outputLines
whitespaceCharacterSet
objectAtIndex:
truncateIdentifier:
initWithIdentifier:displayName:
sendLogItems:progressIdentifier:
waitForLogItemsReceivedWithTimeout:completionBlock:
setIncrementalLogStatus:progressValue:progressIdentifier:
stringByAppendingPathComponent:
initWithURL:sourceControlSystem:
writeToURL:atomically:encoding:error:
headRevisionOfRepository:completionBlock:
sourceControlSystemWithCompletionBlock:
keychainNameFromURL:completionBlock:
allCurrentLocations:completionBlock:
remoteNameIsValid:completionBlock:
revertCommit:revision:completionBlock:
baseRevisionOfWorkingCopy:completionBlock:
identifierOfRepositoryForWorkingCopy:completionBlock:
commitDetailsWithParents:forRevision:path:completionBlock:
revisionOfLocation:inRepository:completionBlock:
discardChangesInFiles:inWorkingCopy:completionBlock:
discardAllChangesInWorkingCopy:completionBlock:
markAsResolvedFiles:inWorkingCopy:completionBlock:
commitFiles:inWorkingCopy:message:completionBlock:
pathDetailsIfRenamed:relativePath:location:completion:
commitDetails:revision:completionBlock:
createRepositoryAtFileURL:completionBlock:
validateAuthenticationOfRemoteRepository:location:completionBlock:
dvtscm_escapedUrlFromString
containsString:
sourceControlSystem
initWithURL:identifier:sourceControlSystem:
setObject:forKeyedSubscript:
stringByRemovingPercentEncoding
addRemoteRepository:withName:toRepository:completionBlock:
removeRemoteRepositoryNamed:fromRepository:completionBlock:
fullyQualifiedName
initIncompleteLogItemWithAuthor:revision:date:message:revisionType:
sharedUnversionedLogItem
initWithAuthor:revision:date:message:revisionType:workingCopy:
parents
arrayByAddingObject:
setParents:
allValues
fileName
localizedCaseInsensitiveCompare:
sortedArrayUsingComparator:
initWithAuthor:revision:date:message:fileStatuses:parents:revisionType:
subarrayWithRange:
setBranches:
setTags:
rebaseWorkingCopy:ontoBranch:completionBlock:
rebaseStateForWorkingCopy:completionBlock:
setRebaseState:forWorkingCopy:completionBlock:
URLByAppendingPathComponent:isDirectory:
moveItemAtURL:toURL:error:
moveCaseSensitiveItemAtURL:toURL:error:
hasSuffix:
stringByAppendingString:
directoryWithGlobSuffix
copyItemAtURL:toURL:error:
fileExistsAtPath:isDirectory:
_performMove:workingCopy:originalFilePath:newFilePath:outError:
removeFiles:inWorkingCopy:completionBlock:
copyFiles:toFilePaths:inWorkingCopy:completionBlock:
moveFiles:toFilePaths:inWorkingCopy:completionBlock:
createDirectory:withIntermediateDirectories:attributes:inWorkingCopy:completionBlock:
isEqualIgnoringPrimaryAndNewStatus:
insertObject:atIndex:
initWithTagName:
initWithRevision:
isPlaceholderRevision
isEqualTo:
dvtscm_gitCLINormalizedStringForRepo:
dataString
regularExpressionWithPattern:options:error:
matchesInString:options:range:
dictionary
numberOfRanges
rangeAtIndex:
integerValue
initWithLineRange:logItem:
localizedDescription
blameFile:inWorkingCopy:fromRevisionLocation:ignoreWhitespace:completionBlock:
componentsSeparatedByString:
doubleValue
lastObject
initWithAuthor:revision:date:message:currentFilePath:filePath:status:revisionType:
resolvedFilePath:workingCopy:
headRevisionOfRepository:forFile:completionBlock:
componentsJoinedByString:
sharedBaseRevision
sharedInitialRevision
isNotEqualTo:
dvtscm_gitCLINormalizedStringForRepository:
setFlushImmediately:
appendData:
initWithData:encoding:
substringToIndex:
_cmdCommitToSingleFileLogItemWithNameStatus:workingCopy:lastFilePath:currentFilePath:headRevision:currentRevisionLocation:didMatchHEAD:
replaceBytesInRange:withBytes:length:
replaceCharactersInRange:withString:
removeAllObjects
setStandardOutputFeedbackBlock:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
operationsFinished
receivedLogItems
scanForWorkingCopiesInFolderPaths:traversingUp:completionBlock:
scanForWorkingCopiesInPotentialWorkingCopies:completionBlock:
scanForRepositoryInFolderPath:completionBlock:
unmodifiedContentsOfFile:includingUpstream:inWorkingCopy:completionBlock:
branchesReachableFrom:inWorkingCopy:completionBlock:
exportFile:inWorkingCopy:fromRevisionLocation:completionBlock:
cherryPick:revision:parentRevision:completionBlock:
loadCompleteTag:tag:completionBlock:
stateOfWorkingCopy:completionBlock:
continueOrFinishConflictOperationInWorkingCopy:completionBlock:
abortConflictOperationInWorkingCopy:completionBlock:
currentConflictRevisionsForWorkingCopy:upstreamRevision:completionBlock:
exportConflictVersionsOfFile:inWorkingCopy:completionBlock:
mergeBranch:intoWorkingCopy:completionBlock:
historyOfWorkingCopy:fromRevision:toRevision:inclusionType:maximumLogItems:searchString:searchType:includeFilePaths:showMergeCommits:progressIdentifier:completionBlock:
historyOfWorkingCopy:location:progressIdentifier:completionBlock:
switchLocation:ofWorkingCopy:completionBlock:
logItemWithParentsForIdentifier:ofWorkingCopy:completionBlock:
listSubpathsOfRepository:atPath:completionBlock:
listRemoteBranchesOfRepository:completionBlock:
parentBranchesOfBranch:inRepository:completionBlock:
addBranch:from:toRepository:completionBlock:
removeBranch:fromRepository:andRemoteRepository:completionBlock:
addTag:toRepository:completionBlock:
removeTag:fromRepository:andRemoteRepository:completionBlock:
listTagsOfRemoteRepository:completionBlock:
diffRepository:fromLocation:againstLocation:completionBlock:
remoteBranchFromRepository:forBranch:completionBlock:
repositoryURLRootForRepository:completionBlock:
createWorkingCopyFromRepository:location:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:
createLocalRepositoryFromRepository:localAddress:mirrored:progressIdentifier:completionBlock:
interfaceWithProtocol:
setExportedInterface:
exportedInterface
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
progressStatus:withDictionary:progressIdentifier:
incrementalLogStatus:info:progressIdentifier:
setRemoteObjectInterface:
setListener:
setConnection:
setExportedObject:
distantPast
timeIntervalSinceDate:
numberWithDouble:
connection
remoteObjectProxy
sentLogItems
listener:shouldAcceptNewConnection:
shouldUpdateProgress
setProgressStatus:progressValue:userReadableString:progressIdentifier:
listener
_xpcLastTimeProgressSent
_listener
_connection
_upstreamBranchFromRepository:forBranch:completionBlock:
arrayWithCapacity:
hasPrefix:
isRemoteBranch
stringWithCString:encoding:
sharedUnversionedRevision
_libgitCommitToLogItem:revision:workingCopy:
rangeOfString:options:
_historyOfWorkingCopy:location:progressBlock:completionBlock:
unsignedIntegerValue
removeObject:
numberWithUnsignedInteger:
updateVisualInformationWithOutBranchIdentifiers:splitBranchIdentifiers:inBranchIdentifiers:mergedBranchIdentifiers:commitBranchIdentifier:
isValidRevisionString:
arrayWithArray:
_gitLaunchPath
bytes
setLength:
initWithData:
_idesc_stringFromMutableData:
dictionaryWithObject:forKey:
defaultCenter
availableData
waitForDataInBackgroundAndNotify
addObserverForName:object:queue:usingBlock:
bundleForClass:
bundleURL
URLByStandardizingPath
arguments
arrayByAddingObjectsFromArray:
launchPath
dictionaryWithObjects:forKeys:
sshAuthenticationAgentExecutableURL
setValue:forKey:
sshAuthenticationAgentFingerprintKey
sshAuthenticationAgentEnforceFingerprintKey
sshAuthenticationAgentPasswordKey
sshAuthenticationAgentUsernameKey
sshAuthenticationAgentPassphraseKey
processInfo
environment
currentDirectoryPath
noEditor
setEnvironment:
pipe
setStandardInput:
setStandardOutput:
setStandardError:
fileHandleForWriting
fileHandleForReading
standardOutputFeedbackBlock
readDataFromFileHandle:intoBuffer:outstandingOperationCounter:dataParsingBlock:
dataUsingEncoding:
writeData:
standardErrorFeedbackBlock
setTerminationStatus:
removeObserver:
closeFile
setReadyToParseData:
parseDataOrGenerateErrorForTask:operation:
isCancelled
errorData
_idesc_stringFromData:
setError:
errorFromErrorMessage:
setDataString:
setData:
setWaitToParseData:
outputLinesWithBlock:
readyToParseData
command
cancelled
setAuthenticationStrategy:
setEnforceTrustedServerFingerprint:
setIsCancelled:
setStandardErrorFeedbackBlock:
setTrustedServerFingerprint:
setNoEditor:
flushImmediately
representsXcodeServiceHostedRepository
_waitToParseData
_readyToParseData
_cancelled
_enforceTrustedServerFingerprint
_isCancelled
_noEditor
_flushImmediately
_representsXcodeServiceHostedRepository
_terminationStatus
_task
_launchPath
_currentDirectoryPath
_arguments
_data
_errorData
_dataString
_command
_error
_authenticationStrategy
_standardOutputFeedbackBlock
_standardErrorFeedbackBlock
_trustedServerFingerprint
setOid:
_oid
displayName
stringWithString:
markAllConflictsAsResolvedInWorkingCopy:
continueCherryPickInWorkingCopy:error:
_exportFile:inWorkingCopy:fromRevisionLocation:error:
dataWithBytes:length:
generateTemporaryPath:withData:error:
writeRelativePath:toFolder:withData:error:
createTemporaryFolder:error:
exportOID:relativePath:repo:error:
initWithNewTagName:message:revision:
pushTag:name:remote:delete:completionBlock:
initWithTagName:message:revision:author:
pushTag:name:remote:completionBlock:
_readDataFromFileHandle:intoBuffer:outstandingOperationCounter:dataParsingBlock:
_libgit_cloneFromRepository:cloneType:location:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:
initWithBytes:length:encoding:
setCountStyle:
stringFromByteCount:
initWithFileURL:repository:
beginActivityWithOptions:reason:
_cmd_createWorkingCopyFromRepository:location:localAddress:existingAddress:progressIdentifier:
_libgit_createWorkingCopyFromRepository:location:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:
_libgit_checkoutWorkingCopyLocation:useRevision:localAddress:progressIdentifier:completionBlock:
endActivity:
_cmd_createLocalRepositoryFromRepository:localAddress:mirrored:progressIdentifier:
_libgit_createLocalRepositoryFromRepository:localAddress:mirrored:progressIdentifier:completionBlock:
_cmd_cloneFromRepository:cloneType:location:localAddress:existingAddress:progressIdentifier:
_runGitLocalCloneForURL:forRemoteRepository:cloneType:localURL:progressIdentifier:
_runGitCloneForRemoteRepository:cloneType:branchName:localURL:standardError:standardOut:feedbackBlock:
abortCherryPickOperationInWorkingCopy:error:
runCherryPickCommand:repository:revision:mainline:error:
numberWithInteger:
stringValue
initWithFileURL:unidentifiableRepository:
fileURLWithPath:
%02X
Authentication: repository: %@, callback: %lu
-[DVTSourceControlGitRemoteCallbackPayload initWithRepository:]_block_invoke
Authentication: repository: %@, current strategy: %@
Authentication: repository: %@, Basic auth selected
No password provided for SSH.
Authentication: repository: %@, SSH Key auth selected
Authentication: repository: %@, SSH Agent auth selected
Authentication: repository: %@, SSH Agent auth unavailable
Authentication: repository: %@, unknown strategy: %@
Authentication: repository: %@, exceeded callback limit
Credentials invalid.
i36@?0^^{git_cred}8r*16r*24I32
v24@?0r*8r*16
repository
T@"DVTSourceControlRemoteRepository",&,V_repository
sidebandProgressBlock
T@?,C,V_sidebandProgressBlock
transferProgressBlock
T@?,C,V_transferProgressBlock
authenticationBlock
T@?,C,V_authenticationBlock
pushReferenceBlock
T@?,C,V_pushReferenceBlock
authenticationError
T@"NSError",&,V_authenticationError
pushError
T@"NSError",&,V_pushError
authRequestCount
TQ,V_authRequestCount
Repository provided was not a local repository (%@)
-[DVTSourceControlGitPlugInPrimary(Upload) uploadCommitsToRemoteRepository:fromLocalRepository:remoteBranch:pushTags:progressIdentifier:completionBlock:]
Repository is not a DVTSourceControlRepository
Could not find local libgit repo for %@
NULL gitRepository for %@
Error with libgit operation (%s)
git_repository_head(&localBranch, repo)
%s:refs/heads/%@
git_tag_list(&tagNames, repo)
refs/tags/%s
git_remote_push(remote, &pushRefSpecs, &pushOptions)
%@/%@
Make sure there's a remote entry in your Git configuration for the remote URL '%@'.
The push operation failed because no matching remote could be found.
-[DVTSourceControlGitPlugInPrimary(Author) authorForWorkingCopy:completionBlock:]
user.name
user.email
-[DVTSourceControlGitPlugInPrimary(Author) defaultAuthorForWorkingCopy:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Author) setAuthor:forWorkingCopy:completionBlock:]
git_revwalk_new(&walk, repo)
NSString *gitRepositoryIdentifier(git_repository *)
git_revwalk_push_head(walk)
git_revwalk_next(&revisionOID, walk)
git_commit_lookup(&commit, repo, &revisionOID)
git_commit_tree(&tree, commit)
git_remote_list(&remotes, repo)
git_remote *lookupRemote(git_repository *, DVTSourceControlRemoteRepository *__strong, BOOL, NSString *__autoreleasing *, NSError *__autoreleasing *)
git_remote_lookup(&remote, repo, remoteName)
git_odb_new(&odb)
void headRevisionOfRemoteRepository(DVTSourceControlRemoteRepository *__strong, BOOL, BOOL, __strong DVTSourceControlGitPlugInBranchesAndRevisionCompletionBlock)
git_repository_wrap_odb(&gitRepository, odb)
git_remote_create_anonymous(&remote, gitRepository, remoteRepository.gitRemoteURL.absoluteString.UTF8String)
git_remote_connect(remote, GIT_DIRECTION_FETCH, &remoteCallbacks, &proxyOptions, NULL)
git_remote_ls(&heads, &size, remote)
HEAD
refs/heads/
refs/tags/
-[DVTSourceControlGitPlugInPrimary(Status) filesAndStatusOfWorkingCopy:withRemoteStatus:statusFlags:completionBlock:]
git_status_list_new(&statusList, repo, &statusOptions)
Silent error with libgit operation (%s)
git_repository_head(&head, repo)
git_branch_upstream(&upstreamBranch, head)
git_merge_base(&mergeBase, repo, git_reference_target(head), git_reference_target(upstreamBranch))
git_commit_lookup(&baseCommit, repo, &mergeBase)
git_commit_tree(&baseTree, baseCommit)
git_reference_peel((git_object **)&upstreamTree, upstreamBranch, GIT_OBJ_TREE)
git_diff_tree_to_tree(&treeDiff, repo, baseTree, upstreamTree, &diffopts)
internalString
T@"NSString",&,N,V_internalString
core.excludesfile
c24@?0@8@"NSDictionary"16
~/%@
.gitignore_global
git_config_set_string(levelConfig, "core.excludesfile", ignorePath.fileSystemRepresentation)
-[DVTSourceControlGitPlugInPrimary(Ignore) setIgnoredFiles:completionBlock:]
.git/index.lock
lockURL
T@"NSURL",R
gitRemoteURL
T@"NSURL",R,N
stash
save
-[DVTSourceControlGitPlugInPrimary(Stash) stashChangesOfWorkingCopy:includingUnversioned:message:completionBlock:]
i32@?0Q8r*16r^{git_oid=[20C]}24
gitError
Could not locate stash identifier from revision
v24@?0q8@"NSError"16
-[DVTSourceControlGitPlugInPrimary(Stash) _deleteStash:stashIdentifier:completionBlock:]
git_stash_drop(repo, stashIdentifier)
-[DVTSourceControlGitPlugInPrimary(Stash) _stashIdentiferFromRevision:workingCopy:completionBlock:]
git_stash_foreach(repo, stashCallback, (__bridge void *)stashBlock)
-[DVTSourceControlGitPlugInPrimary(Stash) applyStashInWorkingCopy:stash:completionBlock:]
git_stash_apply(repo, stashIndex, &options)
git_repository_index(&index, repo)
show
%ld.patch
Couldn't create temporary path for stash '%ld'
Couldn't write data to path '%@'
v24@?0@"NSArray"8@"NSError"16
git_remote_fetch(remote, NULL, &fetchOptions, NULL)
NSString *fetchFromRemoteRepository(DVTSourceControlRemoteRepository *__strong, git_repository *, BOOL, BOOL, NSError *__autoreleasing *)
Failed to locate remote for URL '%@'
-[DVTSourceControlGitPlugInPrimary(Update) downloadUpdatesFromRemoteRepository:toRepository:removeDeletedLocations:progressIdentifier:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Update) updateWorkingCopy:branch:fromRepository:updateStrategy:completionBlock:]
git_branch_lookup(&remoteBranch, repo, remoteBranchName.UTF8String, GIT_BRANCH_REMOTE)
git_repository_head(&currentReference, repo)
git_branch_upstream(&remoteBranch, currentReference)
-[DVTSourceControlGitPlugInPrimary(Update) forceUpdateWorkingCopy:location:fromRepository:completionBlock:]
origin
git_remote_lookup(&remote, repo, "origin")
git_branch_upstream(&trackingBranch, currentReference)
git_reference_set_target(&fastForwardedBranch, currentReference, git_reference_target(trackingBranch), NULL)
git_checkout_head(repo, &checkoutOptions)
git_branch_delete(checkoutReference)
git_branch_lookup(&trackingBranch, repo, remoteBranchName.UTF8String, GIT_BRANCH_REMOTE)
git_commit_lookup(&target, repo, targetOID)
git_branch_create(&checkoutReference, repo, branch.name.UTF8String, target, 0)
git_branch_set_upstream(checkoutReference, remoteBranchName.UTF8String)
git_checkout_tree(repo, (const git_object *)target, &checkoutOptions)
git_repository_set_head(repo, git_reference_name(checkoutReference))
git_branch_upstream(&trackingBranch, checkoutReference)
git_reference_set_target(&fastForwardedBranch, checkoutReference, git_reference_target(trackingBranch), NULL)
refs/tags/%@
git_reference_name_to_id(&oid, repo, [NSString stringWithFormat:@"refs/tags/%@", tag.name].UTF8String)
git_tag_lookup(&gitTag, repo, &oid)
git_checkout_tree(repo, (const git_object *)gitTag, &checkoutOptions)
git_repository_set_head_detached(repo, &oid)
No revision provided.
oidFromRevision(&checkoutOID, location.revision, repo)
git_commit_lookup(&target, repo, &checkoutOID)
git_repository_set_head_detached(repo, &checkoutOID)
%@ (%li)
Reference '
' not found
The path '
' does not exist in the given tree
Cannot locate remote-tracking branch '
Object not found - no matching loose object (
Object not found - no match for id (
Object not found - no match for prefix (
Cannot locate local branch '
the requested type does not match the type in the ODB
Cannot push
Failed to write reference '
': a reference with that name already exists.
after resolving the conflicts, mark the corrected paths
The previous cherry-pick is now empty, possibly due to conflict resolution.
you do not have permission
Remote error
Repository not found
SSL error: error:140E0114
Failed to resolve address for
HTTP status code: 401
Authentication failed
Permission denied
access denied
Failed to authenticate SSH session
HTTP status code: 403
HTTP status code: 404
HTTP status code: 500
could not resolve host
SSL certificate is invalid
SSL certificate problem
Certificate host name check failed
user cancelled certificate check
Malformed URL '
Early EOF
unsupported URL protocol
Permission to
denied to
An unknown error occurred
An unknown error occured.
'%@' - couldn't get user from snapshot. Attempting XDG/global/system lookup.
git_signature *defaultGitAuthor(git_repository *, NSError *__autoreleasing *)
'%@' - couldn't get email from snapshot. Attempting XDG/global/system lookup.
'%@' has no local config entry for both user and email. Attempting XDG/global/system lookup.
Couldn't get any user.name entry for '%@':
Couldn't get any user.email entry for '%@':
Couldn't open default config for repository:
v8@?0
--quiet
--auto
0.27.7
.git
^[0-9a-f]{1,40}$
-[DVTSourceControlGitPlugInPrimary allCurrentLocations:completionBlock:]
git_reference_iterator_new(&iter, repo)
v32@?0@"DVTSourceControlRemoteRepository"8@"NSDictionary"16@"NSError"24
v24@?0@"DVTSourceControlRevisionLocation"8@"NSError"16
Failed to parse tag '%s'
Failed to get ahead/behind counts for branch '%s' using remote '%s'
Expected the remote branch name to have a minimum length of '%lu' characters, but it had '%lu'
Failed to parse branch '%s'
Failed to lookup remote '%@' to add remote branch '%@'
revert
--no-edit
-[DVTSourceControlGitPlugInPrimary identifierOfRepositoryForWorkingCopy:completionBlock:]
v32@?0@"NSArray"8@"DVTSourceControlBranch"16@"NSError"24
v48@?0@"DVTSourceControlRevision"8@"DVTSourceControlBranch"16@"NSArray"24@"NSArray"32@"NSError"40
-[DVTSourceControlGitPlugInPrimary _discardAllChanges:files:inWorkingCopy:completionBlock:]
-[DVTSourceControlGitPlugInPrimary commitFiles:inWorkingCopy:message:completionBlock:]
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
git_index_write(index)
core.ignorecase=false
commit
--author
%@ <%@>
git_reference_name_to_id(&headOID, repo, "HEAD")
rev-list
--parents
-[DVTSourceControlGitPlugInPrimary commitDetails:revisions:progressIdentifier:completionBlock:]
git_oid_fromstrp(&shortOID, revisionHash)
Revision '%p' for working copy '%@' could not be found
-[DVTSourceControlGitPlugInPrimary commitDetails:revision:completionBlock:]
git_repository_init(&repo, URL.fileSystemRepresentation, NO)
-[DVTSourceControlGitPlugInPrimary createRepositoryAtFileURL:completionBlock:]
.DS_Store
UserInterfaceState.xcuserstate
.git/info/exclude
v32@?0@"DVTSourceControlRevision"8@"DVTSourceControlBranch"16@"NSError"24
com.apple.dt.Xcode
/SourcePackages/repositories/
-[DVTSourceControlGitPlugInPrimary(Remote) addRemoteRepository:withName:toRepository:completionBlock:]
git_remote_create(&remote, repo, name.UTF8String, [remoteRepository.URL.absoluteString stringByRemovingPercentEncoding].UTF8String)
-[DVTSourceControlGitPlugInPrimary(Remote) removeRemoteRepositoryNamed:fromRepository:completionBlock:]
git_remote_delete(repo, name.UTF8String)
fullyQualifiedName
T@"NSString",R,N
DVTSourceControlLogItem *bareLogItemInWorkingCopy(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, NSError *__autoreleasing *, DVTSourceControlHistorySearchType, NSString *__strong)
DVTSourceControlVisualLogItem *visualHistory_bareLogItemAndCommitInWorkingCopy(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, git_commit **, NSError *__autoreleasing *, DVTSourceControlHistorySearchType, NSString *__strong)
File has multiple parents
DVTSourceControlLogItem *logItemInWorkingCopyWithFilePath(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, DVTSourceControlHistorySearchType, NSString *__strong, NSError *__autoreleasing *)_block_invoke
i28@?0i8^{git_commit=}12^{git_tree=}20
DVTSourceControlLogItem *logItemInWorkingCopyWithFilePath(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, DVTSourceControlHistorySearchType, NSString *__strong, NSError *__autoreleasing *)
q24@?0@8@16
DVTSourceControlVisualLogItem *visualLogItemInWorkingCopyWithFilePath(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, DVTSourceControlHistorySearchType, NSString *__strong, NSError *__autoreleasing *)_block_invoke
DVTSourceControlVisualLogItem *visualLogItemInWorkingCopyWithFilePath(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, DVTSourceControlHistorySearchType, NSString *__strong, NSError *__autoreleasing *)
git_rebase_open(&rebase, repo, &rebaseOptions)
NSError *abortRebaseInWorkingCopy(git_repository *)
git_rebase_abort(rebase)
BOOL rebaseIterate(git_repository *, git_rebase *, git_signature *, NSError *__autoreleasing *)
git_rebase_commit(&commitOid, rebase, NULL, author, NULL, NULL)
git_rebase_finish(rebase, NULL)
BOOL continueRebaseInWorkingCopy(git_repository *, NSError *__autoreleasing *)
git_annotated_commit_from_ref(&annotatedCommit, repo, rebaseBranch)
BOOL rebaseOntoBranchInWorkingCopy(git_reference *, git_repository *, NSError *__autoreleasing *)
git_rebase_init(&rebase, repo, NULL, annotatedCommit, NULL, &rebaseOptions)
-[DVTSourceControlGitPlugInPrimary(Rebase) rebaseWorkingCopy:ontoBranch:completionBlock:]
git_branch_lookup(&rebaseBranch, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
-[DVTSourceControlGitPlugInPrimary(Rebase) rebaseStateForWorkingCopy:completionBlock:]
pull.rebase
-[DVTSourceControlGitPlugInPrimary(Rebase) setRebaseState:forWorkingCopy:completionBlock:]
git_repository_config(&config, repo)
git_config_open_level(&levelConfig, config, GIT_CONFIG_LEVEL_LOCAL)
%@-casesensitive-rename
-[DVTSourceControlGitPlugInPrimary(FileManagement) addFiles:inWorkingCopy:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(FileManagement) removeFiles:inWorkingCopy:completionBlock:]
git_index_remove_all(index, &pathsToRemove, NULL, NULL)
v16@?0@"NSError"8
git_index_remove_all(index, &sourceDirectoriesArray, NULL, NULL)
-[DVTSourceControlGitPlugInPrimary(FileManagement) _performMove:workingCopy:originalFilePath:newFilePath:outError:]
git_index_add_all(index, &targetDirectoriesArray, GIT_INDEX_ADD_DEFAULT, NULL, NULL)
git_index_add(index, &new)
git_index_remove(index, originalCStringFilePath, 0)
git_index_add_bypath(index, newCStringFilePath)
-[DVTSourceControlGitPlugInPrimary(FileManagement) moveFiles:toFilePaths:inWorkingCopy:completionBlock:]
git_reference_iterator_new(&iterator, repo)
void _allLocationsOfRepo(git_repository *, const git_oid *, DVTSourceControlRevisionLocation *__strong, const git_oid **, NSDictionary<NSString *,NSArray<DVTSourceControlRevisionLocation *> *> *__autoreleasing *, NSArray<DVTSourceControlRevisionLocation *> *__autoreleasing *)
void currentLocationOfRepository(DVTSourceControlRepository *__strong, __strong DVTSourceControlLocationCompletionBlock)
master
-[DVTSourceControlGitPlugInPrimary(Blame) blameFile:inWorkingCopy:fromRevisionLocation:ignoreWhitespace:completionBlock:]
A revision identifier must be supplied.
The revision identifier supplied is nil.
blame
--line-porcelain
^([0-9a-f]{40}) ([0-9]+) ([0-9]+) ?([0-9]*)
author (.*)
author-mail <(.*)>(?:.|
)+?committer-time ([0-9]+)$
0000000000000000000000000000000000000000
Could not load authors for file '%@'
Error: %@
--no-color
--format=%H
v24@?0@"DVTSourceControlRevision"8@"NSError"16
--follow
refs/heads/%@
--name-status
--topo-order
--format=%@
Couldn't parse entry: %@
-[DVTSourceControlGitPlugInPrimary(FileLog) historyOfFile:inWorkingCopy:fromRevisionLocation:showMergeCommits:maxLogItems:progressIdentifier:completionBlock:]_block_invoke
v16@?0@"NSData"8
Failed to parse record:
-[DVTSourceControlGitPlugInPrimary(FileLog) historyOfFile:inWorkingCopy:fromRevisionLocation:showMergeCommits:maxLogItems:progressIdentifier:completionBlock:]
Failed to find file known to be renamed '%@'
-[DVTSourceControlGitPlugInPrimary(FileLog) resolvedFilePath:workingCopy:]_block_invoke
Logging renamed file '%@', previously named '%@'
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
listener
T@"NSXPCListener",&,V_listener
connection
T@"NSXPCConnection",&,V_connection
-[DVTSourceControlGitPlugInPrimary(Branch) _upstreamBranchFromRepository:forBranch:completionBlock:]
git_branch_lookup(&gitBranch, repo, [branch.name cStringUsingEncoding:NSUTF8StringEncoding], GIT_BRANCH_LOCAL)
git_branch_upstream(&gitUpstreamBranch, gitBranch)
git_branch_name(&nameChar, gitUpstreamBranch)
v32@?0@"NSArray"8@"NSDictionary"16@"NSError"24
v24@?0@"DVTSourceControlBranch"8@"NSError"16
-[DVTSourceControlGitPlugInPrimary(Branch) listRemoteBranchesOfRepository:completionBlock:]
git_branch_iterator_new(&branchIterator, repo, GIT_BRANCH_ALL)
git_branch_next(&gitBranch, &branchType, branchIterator)
git_branch_name(&gitBranchName, gitBranch)
-[DVTSourceControlGitPlugInPrimary(Branch) parentBranchesOfBranch:inRepository:completionBlock:]
git_branch_lookup(&myGitBranch, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
git_branch_iterator_new(&branchIterator, repo, GIT_BRANCH_LOCAL)
-[DVTSourceControlGitPlugInPrimary(Branch) addBranch:from:toRepository:completionBlock:]
git_branch_lookup(&ref, repo, startBranch.remoteName?[NSString stringWithFormat:@"%@/%@", startBranch.remoteName, startBranch.name].UTF8String:startBranch.name.UTF8String, GIT_BRANCH_REMOTE)
git_branch_lookup(&ref, repo, startBranch.name.UTF8String, GIT_BRANCH_LOCAL)
git_object_peel((git_object **)&target, (git_object *)gitTag, GIT_OBJ_COMMIT)
git_commit_lookup(&target, repo, &oid)
oidFromRevision(&revisionOID, startLocation.revision, repo)
git_branch_create(&newRef, repo, branch.name.UTF8String, target, 0)
-[DVTSourceControlGitPlugInPrimary(Branch) removeBranch:fromRepository:andRemoteRepository:completionBlock:]
git_remote_lookup(&remote, repo, [branch.remoteName cStringUsingEncoding:NSUTF8StringEncoding])
:refs/heads/%@
git_branch_lookup(&gitBranch, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
branch
--contains
v32@?0@"NSArray"8q16q24
-[DVTSourceControlGitPlugInPrimary(Log) historyOfWorkingCopy:fromRevision:toRevision:inclusionType:maximumLogItems:searchString:searchType:includeFilePaths:showMergeCommits:progressIdentifier:completionBlock:]
oidFromRevision(&startOID, firstRevisionToLog, repo)
git_revwalk_push(walk, &startOID)
%@..%@^1
%@..%@
git_revwalk_push_range(walk, (char *)walk_range)
v16@?0@"NSArray"8
-[DVTSourceControlGitPlugInPrimary(Log) _historyOfWorkingCopy:location:progressBlock:completionBlock:]
Could not locate the given reference '%@'
git_revwalk_push(walk, oidToPush)
git_oid_fromstrp(&identifierOID, identifierString)
-[DVTSourceControlGitPlugInPrimary(Log) logItemWithParentsForIdentifier:ofWorkingCopy:completionBlock:]
git_commit_lookup_prefix(&commit, gitRepository, &identifierOID, identifierLength)
git_commit_parent(&parentCommit, commit, commitParentIdx)
v16@?0@"NSNotification"8
../../../../../../Developer/usr/bin/
No launch path found for %@ task.
/usr/bin/
color.ui=false
core.pager=
core.quotepath=false
--no-pager
en_US.UTF-8
/nonexistent
LANG
DISPLAY
HOME
GIT_PAGER
SSH_ASKPASS
GIT_ASKPASS
/usr/bin/ssh -v -F /dev/null -o UserKnownHostsFile=/dev/null -o FingerprintHash=md5 -o HostKeyAlgorithms=ssh-rsa -o IdentitiesOnly=yes
GIT_SSH_COMMAND
/usr/bin/ssh -v -l %@ -F /dev/null -o UserKnownHostsFile=/dev/null -o FingerprintHash=md5 -o HostKeyAlgorithms=ssh-rsa -o IdentitiesOnly=yes
/usr/bin/ssh -v -l %@ -F /dev/null -o UserKnownHostsFile=/dev/null -o FingerprintHash=md5 -o HostKeyAlgorithms=ssh-rsa -o IdentitiesOnly=yes -i %@
SSH_AUTH_SOCK
true
GIT_EDITOR
password
username
accept
Ran out of file descriptors when trying to launch SCM task
com.apple.dt.DVTSourceControlErrorDomain
malloc: recording
GuardMalloc
error
T@"NSError",&,N,V_error
terminationStatus
Ti,N,V_terminationStatus
data
T@"NSData",&,N,V_data
readyToParseData
Tc,V_readyToParseData
launchPath
T@"NSString",&,N,V_launchPath
dataString
T@"NSString",&,N,V_dataString
task
T@"NSTask",R,N,V_task
command
T@"NSString",R,N,V_command
arguments
T@"NSArray",&,N,V_arguments
currentDirectoryPath
T@"NSString",&,N,V_currentDirectoryPath
errorData
T@"NSMutableData",R,N,V_errorData
cancelled
Tc,R,N,V_cancelled
authenticationStrategy
T@"DVTSourceControlAuthenticationStrategy",&,N,V_authenticationStrategy
enforceTrustedServerFingerprint
Tc,N,V_enforceTrustedServerFingerprint
isCancelled
Tc,N,V_isCancelled
standardOutputFeedbackBlock
T@?,C,N,V_standardOutputFeedbackBlock
standardErrorFeedbackBlock
T@?,C,N,V_standardErrorFeedbackBlock
trustedServerFingerprint
T@"NSString",&,N,V_trustedServerFingerprint
noEditor
Tc,V_noEditor
flushImmediately
Tc,V_flushImmediately
representsXcodeServiceHostedRepository
Tc,R,N,V_representsXcodeServiceHostedRepository
Tr^{git_oid=[20C]},V_oid
merge
--abort
Merge branch
git_annotated_commit_from_ref(&annotatedCommit, repo, mergeBranch)
BOOL mergeInBranchInWorkingCopy(DVTSourceControlWorkingCopy *__strong, git_reference *, git_repository *, NSError *__autoreleasing *)
git_merge_analysis(&analysis, &preferences, repo, (const git_annotated_commit **)&annotatedCommit, 1)
git_commit_lookup(&target, repo, git_annotated_commit_id(annotatedCommit))
git_reference_set_target(NULL, currentReference, git_reference_target(mergeBranch), NULL)
git_merge(repo, (const git_annotated_commit **)&annotatedCommit, 1, &mergeOptions, &checkoutOptions)
-[DVTSourceControlGitPlugInPrimary(Merge) diffRepository:fromLocation:againstLocation:completionBlock:]
oidFromLocation(&startOID, startLocation, repo)
oidFromLocation(&endOID, endLocation, repo)
git_commit_lookup(&startCommit, repo, &startOID)
git_commit_lookup(&endCommit, repo, &endOID)
git_commit_tree(&startTree, startCommit)
git_commit_tree(&endTree, endCommit)
git_diff_tree_to_tree(&diff, repo, startTree, endTree, &diffopts)
-[DVTSourceControlGitPlugInPrimary(Merge) mergeBranch:intoWorkingCopy:completionBlock:]
git_branch_lookup(&mergeBranch, repo, branchName, branchType)
-[DVTSourceControlGitPlugInPrimary(Switch) switchLocation:ofWorkingCopy:completionBlock:]
git_repository_head(&originalHead, repo)
git_branch_lookup(&ref, repo, remoteBranchName.UTF8String, GIT_BRANCH_REMOTE)
git_branch_set_upstream(newRef, remoteBranchName.UTF8String)
Repo locked with libgit operation (%s)
git_repository_set_head(repo, git_reference_name(newRef))
git_repository_head(&ref, repo)
git_branch_lookup(&ref, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
git_repository_set_head(repo, git_reference_name(ref))
oidFromRevision(&oid, location.revision, repo)
git_repository_set_head(repo, git_reference_name(originalHead))
git_repository_set_head_detached(repo, git_reference_target(originalHead))
core.precomposeunicode
dictionaryNormalizedString
T@"NSString",R
-[DVTSourceControlGitPlugInPrimary(Conflict) stateOfWorkingCopy:completionBlock:]
NSError *finishIndexConflict(git_repository *)
-[DVTSourceControlGitPlugInPrimary(Conflict) continueOrFinishConflictOperationInWorkingCopy:completionBlock:]
cherry-pick
NSError *abortIndexConflict(git_repository *)
-[DVTSourceControlGitPlugInPrimary(Conflict) abortConflictOperationInWorkingCopy:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Conflict) currentConflictRevisionsForWorkingCopy:upstreamRevision:completionBlock:]
oidFromRevision(&upstream, forcedUpstreamRevision, repo)
MERGE_HEAD
ORIG_HEAD
REBASE_HEAD
rebase-merge/current
CHERRY_PICK_HEAD
git_repository_head(&conflictHead, repo)
git_reference_lookup(&conflictHead, repo, conflictRefName)
git_reference_lookup(&originalHead, repo, originalRefName)
git_merge_base(&ancestor, repo, &local, &upstream)
git_commit_lookup(&commit, repo, commitOID)
int fileContentsAtCommit(git_repository *, const git_oid *, NSString *__strong, NSString *__autoreleasing *, NSError *__autoreleasing *)
git_tree_entry_bypath(&treeEntry, tree, [[relativePath dvtscm_gitNormalizedStringForRepo:repo] cStringUsingEncoding:NSUTF8StringEncoding])
git_blob_lookup(&blob, repo, git_tree_entry_id(treeEntry))
git_blob_filtered_content(&buffer, blob, [[relativePath dvtscm_gitNormalizedStringForRepo:repo] cStringUsingEncoding:NSUTF8StringEncoding], true)
Cannot get a textual representation of this file.
-[DVTSourceControlGitPlugInPrimary(Export) unmodifiedContentsOfFile:includingUpstream:inWorkingCopy:completionBlock:]
fileContentsAtCommit(repo, commitOID, relativePath, &unmodified, &error)
fileContentsAtCommit(repo, upstreamOID, relativePath, &upstream, nil)
git_merge_base(&ancestorOID, repo, commitOID, upstreamOID)
fileContentsAtCommit(repo, &ancestorOID, relativePath, &ancestor, nil)
v24@?0@"NSString"8@"DVTSourceControlRevisionLocation"16
-[DVTSourceControlGitPlugInPrimary(Export) _exportFile:inWorkingCopy:fromRevisionLocation:error:]
oidAndCommitFromRevision(&commitOID, &commit, revision, repo)
git_tree_lookup(&subTree, repo, git_tree_entry_id(treeEntry))
i24@?0r*8r^{git_tree_entry=}16
git_tree_walk(subTree, GIT_TREEWALK_PRE, treeCallback, (__bridge void*)treeBlock)
Tree entry unknown.
git_blob_lookup(&blob, repo, oid)
-[DVTSourceControlGitPlugInPrimary(Export) exportOID:relativePath:repo:error:]
-[DVTSourceControlGitPlugInPrimary(Export) exportConflictVersionsOfFile:inWorkingCopy:completionBlock:]
git_index_conflict_get(&ancestor, &our, &their, index, [[relativePath dvtscm_gitNormalizedStringForRepo:repo] cStringUsingEncoding:NSUTF8StringEncoding])
-[DVTSourceControlGitPlugInPrimary(Tag) addTag:toRepository:completionBlock:]
oidFromRevision(&revision_oid, tag.revision, repo)
oidAndCommitFromRevision(&revision_oid, &target_obj, tag.revision, repo)
Tag must have a name
git_tag_create(&created_tag_oid, repo, [tag.name UTF8String], ((git_object *)target_obj), author, utf8message, false)
-[DVTSourceControlGitPlugInPrimary(Tag) pushTag:name:remote:delete:completionBlock:]
git_remote_push(remote, &tag_refspec, &pushOptions)
-[DVTSourceControlGitPlugInPrimary(Tag) removeTag:fromRepository:andRemoteRepository:completionBlock:]
git_tag_delete(repo, [tag.name UTF8String])
-[DVTSourceControlGitPlugInPrimary(Tag) loadCompleteTag:tag:completionBlock:]
git_oid_fromstrp(&oid, revisionHash)
git_tag_lookup(&lookup_tag, repo, &oid)
Reusing existing copy.
--bare
--mirror
clone
--local
--progress
--no-checkout
Unable to reuse existing copy. Falling back to a full clone.
remote
set-url
--branch
-[DVTSourceControlGitPlugInPrimary(Clone) _runGitCloneForRemoteRepository:cloneType:branchName:localURL:standardError:standardOut:feedbackBlock:]
/Library/Caches/com.apple.xbs/Sources/DVTSourceControl/DVTSourceControl-14660.3/PlugIns/Git/DVTSourceControlGitPlugInPrimary+Clone.m
branchName == nil
GIT_CONFIG_NOSYSTEM
GIT_FLUSH
Checking out: %s
Checking out
v32@?0r*8Q16Q24
v20@?0r*8i16
Receiving objects: %@ done
v16@?0r^{git_transfer_progress=IIIIIIQ}8
git_clone(&gitRepository, [repository.gitRemoteURL.absoluteString cStringUsingEncoding:NSUTF8StringEncoding], [fileURL fileSystemRepresentation], &cloneOptions)
-[DVTSourceControlGitPlugInPrimary(Clone) _libgit_cloneFromRepository:cloneType:location:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:]
git_repository_config(&cfg, gitRepository)
remote.origin.mirror
git_config_set_bool(cfg, "remote.origin.mirror", true)
remote.origin.fetch
+refs/*:refs/*
git_config_set_string(cfg, "remote.origin.fetch", "+refs/*:refs/*")
Unable to establish identity of repository.
oidFromRevision(&checkoutOID, location.revision, gitRepository)
git_repository_set_head_detached(gitRepository, &checkoutOID)
git_checkout_head(gitRepository, &checkoutOptions)
git_reference_name_to_id(&oid, gitRepository, [NSString stringWithFormat:@"refs/tags/%@", tag.name].UTF8String)
git_repository_set_head_detached(gitRepository, &oid)
git_repository_open(&gitRepository, fileURL.path.fileSystemRepresentation)
-[DVTSourceControlGitPlugInPrimary(Clone) _libgit_checkoutWorkingCopyLocation:useRevision:localAddress:progressIdentifier:completionBlock:]
Git Clone
v32@?0@"DVTSourceControlWorkingCopy"8@"DVTSourceControlRepository"16@"NSError"24
v24@?0@"DVTSourceControlWorkingCopy"8@"NSError"16
v16@?0@"DVTSourceControlRepository"8
((Counting objects:)|(Compressing objects:)|(Receiving objects:)|(Resolving deltas:))[\s]+(([0-9]+)%|([0-9]+,))
Receiving objects:
Compressing objects:
Counting objects:
Resolving deltas:
%@ %li%% done
%@ %li done
v16@?0@"NSString"8
-[DVTSourceControlGitPlugInPrimary(CherryPick) abortCherryPickOperationInWorkingCopy:error:]
-[DVTSourceControlGitPlugInPrimary(CherryPick) continueCherryPickInWorkingCopy:error:]
--continue
-[DVTSourceControlGitPlugInPrimary(CherryPick) cherryPick:revision:parentRevision:completionBlock:]
git_commit_lookup(&headCommit, repo, &headOID)
oidAndCommitFromRevision(&commitOID, &cherryPickCommit, revision, repo)
oidAndCommitFromRevision(&parentOID, &parentCommit, parentRevision, repo)
-[DVTSourceControlGitPlugInPrimary(CherryPick) runCherryPickCommand:repository:revision:mainline:error:]
#DVTSourceControlGitXPC: %s
Method: %s
DVTSourceControlGitRemoteCallbackPayload
Upload
Author
Status
DVTSourceControlGitCLINormalizedString
Ignore
DVTSourceControlGitPlugInPrimary
Stash
Update
DVTSourceControlError
Remote
Additions
PrivateGit
Rebase
CaseChange
libgit2
FileManagement
Blame
FileLog
DVTSourceControlPlugInProtocol
NSObject
DVTSourceControlPlugInCallbackProtocol
DVTSourceControlXPCPrimary
NSXPCListenerDelegate
Branch
DVTSourceControlGitTask
DVTSourceControlGitOIDHolder
Merge
Switch
Unsupported
GitNormalizedString
GitErrorParsing
GitStashParsing
GitBranchPrefixPruning
Conflict
Export
Clone
CherryPick
Scanning
@24@0:8@16
v16@0:8
@16@0:8
v24@0:8@16
@?16@0:8
v24@0:8@?16
Q16@0:8
v24@0:8Q16
@"DVTSourceControlRemoteRepository"
@"NSError"
v60@0:8@16@24@32c40@44@?52
v32@0:8@16@?24
v40@0:8@16@24@?32
v36@0:8@16c24@?28
v40@0:8@16c24i28@?32
@36@0:8^S16Q24c32
S24@0:8Q16
r*16@0:8
@"NSString"
c16@0:8
^{git_repository=}16@0:8
v44@0:8@16c24@28@?36
v40@0:8@16q24@?32
v52@0:8@16@24c32@36@?44
v56@0:8@16@24@32Q40@?48
v48@0:8@16@24@32@?40
@32@0:8q16r^{?=*i}24
@40@0:8q16r^{?=*i}24@32
@24@0:8q16
@32@0:8q16@24
v28@0:8@16c24
v44@0:8c16@20@28@?36
v32@0:8@16@24
@60@0:8{git_oid=[20C]}16Q36^{git_repository=}44^@52
v40@0:8Q16@24@?32
c40@0:8@16@24^@32
v56@0:8^{git_index=}16@24@32@40^@48
v52@0:8@16c24@28@36@?44
v52@0:8@16@24@32c40@?44
@72@0:8@16@24@32@40@48@56^c64
v68@0:8@16@24@32c40q44@52@?60
@32@0:8@16@24
c24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
v96@0:8@16@24@32Q40q48@56Q64c72c76@80@?88
v68@0:8@16@24c32@36@44@52@?60
v24@0:8@?<v@?@"DVTSourceControlSystem">16
v32@0:8@"NSURL"16@?<v@?@"NSString"Q@"NSString"@"NSError">24
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlAuthor"@"NSError">24
v40@0:8@"DVTSourceControlAuthor"16@"DVTSourceControlWorkingCopy"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?Q@"NSError">24
v40@0:8Q16@"DVTSourceControlWorkingCopy"24@?<v@?@"NSError">32
v36@0:8@"NSArray"16c24@?<v@?@"NSArray">28
v32@0:8@"NSArray"16@?<v@?@"NSArray">24
v32@0:8@"NSString"16@?<v@?@"DVTSourceControlRepository">24
v36@0:8@"DVTSourceControlWorkingCopy"16c24@?<v@?@"NSArray"@"NSArray"@"NSError">28
v40@0:8@"NSArray"16@"DVTSourceControlWorkingCopy"24@?<v@?@"NSError">32
v48@0:8@"NSArray"16@"NSArray"24@"DVTSourceControlWorkingCopy"32@?<v@?@"NSError">40
v52@0:8@"NSString"16c24@"NSDictionary"28@"DVTSourceControlWorkingCopy"36@?<v@?@"NSError">44
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"NSError">24
v48@0:8@"NSArray"16@"DVTSourceControlWorkingCopy"24@"NSString"32@?<v@?@"DVTSourceControlRevision"@"NSError">40
v44@0:8@"NSString"16c24@"DVTSourceControlWorkingCopy"28@?<v@?@"NSString"@"NSString"@"NSString"@"NSError">36
v40@0:8@"DVTSourceControlRevision"16@"DVTSourceControlWorkingCopy"24@?<v@?@"NSArray"@"NSError">32
v48@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@"DVTSourceControlRevisionLocation"32@?<v@?@"NSURL"@"NSError">40
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@"DVTSourceControlRevision"32@?<v@?@"DVTSourceControlRevision"c@"NSError">40
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@?<v@?@"NSError">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"NSArray"@"NSArray"@"NSDictionary"@"NSDictionary"@"NSArray"@"DVTSourceControlRevisionLocation"Q@"DVTSourceControlRemoteRepository"@"NSError">24
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?@"DVTSourceControlStash"@"NSError">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlTag"24@?<v@?@"DVTSourceControlTag"@"NSError">32
v52@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@"DVTSourceControlRevisionLocation"32c40@?<v@?@"NSArray"@"NSError">44
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@"NSString"32@?<v@?@"DVTSourceControlLogItem"@"NSArray"@"NSArray"@"NSError">40
v68@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@"DVTSourceControlRevisionLocation"32c40q44@"NSString"52@?<v@?@"NSArray"@"NSError">60
v48@0:8@"DVTSourceControlWorkingCopy"16@"NSArray"24@"NSString"32@?<v@?@"NSArray"@"NSError">40
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@?<v@?@"DVTSourceControlVisualLogItem"@"NSError">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?c@"NSError">24
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@?<v@?@"DVTSourceControlRevision"@"DVTSourceControlRevision"@"DVTSourceControlRevision"@"NSError">32
v40@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@?<v@?@"NSURL"@"NSURL"@"NSURL"@"NSError">32
v40@0:8@"DVTSourceControlBranch"16@"DVTSourceControlWorkingCopy"24@?<v@?c@"NSError">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlBranch"24@?<v@?c@"NSError">32
v56@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlBranch"24@"DVTSourceControlRemoteRepository"32Q40@?<v@?c@"NSError">48
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlRemoteRepository"32@?<v@?@"NSError">40
v96@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@"DVTSourceControlRevision"32Q40q48@"NSString"56Q64c72c76@"NSString"80@?<v@?@"NSArray"@"NSError">88
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevisionLocation"24@"NSString"32@?<v@?@"NSArray"@"NSError">40
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlRevisionLocation"@"NSError">24
v40@0:8@"DVTSourceControlRevisionLocation"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlRevisionLocation"@"NSError">32
v40@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlVisualLogItem"@"NSArray"@"NSError">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlRevision"@"NSError">24
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"DVTSourceControlRepository"16@?<v@?@"DVTSourceControlRevision"@"DVTSourceControlBranch"@"NSError">24
v40@0:8@"DVTSourceControlRevisionLocation"16@"DVTSourceControlRepository"24@?<v@?@"DVTSourceControlRevision"@"NSError">32
v40@0:8@"DVTSourceControlRepository"16@"DVTSourceControlPathLocation"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"DVTSourceControlRepository"16@?<v@?@"NSArray"@"DVTSourceControlBranch"@"NSError">24
v32@0:8@"DVTSourceControlRepository"16@?<v@?@"NSArray"@"NSDictionary"@"NSError">24
v40@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRepository"24@?<v@?@"DVTSourceControlBranch"@"NSArray"@"NSError">32
v48@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlRepository"32@?<v@?@"DVTSourceControlBranch"@"NSError">40
v48@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRepository"24@"DVTSourceControlRemoteRepository"32@?<v@?@"NSError">40
v40@0:8@"DVTSourceControlTag"16@"DVTSourceControlRepository"24@?<v@?@"DVTSourceControlTag"@"NSError">32
v48@0:8@"DVTSourceControlTag"16@"DVTSourceControlRepository"24@"DVTSourceControlRemoteRepository"32@?<v@?@"NSError">40
v32@0:8@"DVTSourceControlRemoteRepository"16@?<v@?@"NSArray"@"NSError">24
v48@0:8@"DVTSourceControlRepository"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlRevisionLocation"32@?<v@?@"NSArray"@"NSError">40
v32@0:8@"DVTSourceControlRepository"16@?<v@?@"DVTSourceControlRemoteRepository"@"NSDictionary"@"NSError">24
v40@0:8@"DVTSourceControlRepository"16@"DVTSourceControlBranch"24@?<v@?@"DVTSourceControlBranch"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v48@0:8@"DVTSourceControlRemoteRepository"16@"NSString"24@"DVTSourceControlRepository"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"DVTSourceControlRepository"24@?<v@?@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"DVTSourceControlRepository"@"NSError">24
v32@0:8@"DVTSourceControlRemoteRepository"16@?<v@?@"NSURL"@"DVTSourceControlPathLocation"@"NSError">24
v52@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRepository"24c32@"NSString"36@?<v@?@"NSString"@"NSError">44
v60@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRepository"24@"DVTSourceControlBranch"32c40@"NSString"44@?<v@?@"NSError">52
v40@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRevisionLocation"24@?<v@?@"NSError">32
v68@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRevisionLocation"24c32@"NSURL"36@"NSURL"44@"NSString"52@?<v@?@"DVTSourceControlWorkingCopy"@"NSError">60
v52@0:8@"DVTSourceControlRemoteRepository"16@"NSURL"24c32@"NSString"36@?<v@?@"DVTSourceControlRepository"@"NSError">44
v44@0:8@"DVTSourceControlWorkingCopy"16c24@"NSString"28@?<v@?@"DVTSourceControlStash"@"NSError">36
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?@"NSError">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?c@"NSError">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?@"NSURL"@"NSError">32
v40@0:8q16@24@32
v40@0:8@16@24@32
v40@0:8q16@"NSDictionary"24@"NSString"32
v40@0:8@"NSArray"16@"NSDictionary"24@"NSString"32
c32@0:8@16@24
c32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v48@0:8q16d24@32@40
v40@0:8@16d24@32
@"NSDate"
@"NSXPCListener"
@"NSXPCConnection"
@52@0:8^{git_commit=}16{git_oid=[20C]}24@44
v48@0:8@16@24@?32@?40
@48@0:8@16@24^q32@?40
v20@0:8c16
i16@0:8
v20@0:8i16
@"NSTask"
@"NSArray"
@"NSData"
@"NSMutableData"
@"DVTSourceControlAuthenticationStrategy"
r^{git_oid=[20C]}16@0:8
v24@0:8r^{git_oid=[20C]}16
r^{git_oid=[20C]}
@24@0:8^{git_repository=}16
{_NSRange=QQ}24@0:8@16
@48@0:8@16@24@32^@40
@48@0:8r^{git_oid=[20C]}16@24^{git_repository=}32^@40
c56@0:8@16@24Q32@40@48
@72@0:8@16Q24@32@40^@48^@56@?64
v76@0:8@16Q24@32c40@44@52@60@?68
c56@0:8@16@24@32@40@48
c44@0:8@16@24c32@36
c64@0:8@16Q24@32@40@48@56
i32@0:8@16^@24
@56@0:8@16^{git_repository=}24@32q40^@48
@(#)PROGRAM:com.apple.dt.Xcode.sourcecontrol.Git  PROJECT:DVTSourceControl-14660.3
ffff&
