init
device
label
hasPrefix:
UTF8String
_isInternalQueueWhitelisted:
stringWithFormat:
decodeInt64ForKey:
decodeObjectForKey:
containsValueForKey:
decodeBoolForKey:
encodeInt64:forKey:
encodeObject:forKey:
encodeBool:forKey:
copy
encodeWithCoder:
initWithCoder:
copyWithZone:
initWithCommandQueue:
displayName
description
isInternalQueue
.cxx_destruct
deviceAddress
queueAddress
canBeCaptured
setCanBeCaptured:
isOpenGLQueue
setIsOpenGLQueue:
_isInternalQueue
_canBeCaptured
_isOpenGLQueue
_displayName
_deviceAddress
_queueAddress
_label
alloc
initWithCaptureStore:
openFileWithFilename:error:
decodeArchivedObject
metalVersion
compare:options:
_isBackwardsCompatible:isInternal:
deviceProfiles
countByEnumeratingWithState:objects:count:
class
supportsCapabilitiesOfGraphicsAPI:allowedClass:
canPlaybackOnDeviceWithInfo:limitBackwardsCompatibility:isInternal:withBlock:
captureSessionInfoWithCaptureStore:
canPlaybackOnDeviceWithInfo:limitBackwardsCompatibility:isInternal:
capturedCommandQueueAddress
_capturedCommandQueueAddress
_deviceProfiles
isKindOfClass:
supportedFeatureSets
containsObject:
enumerateObjectsUsingBlock:
unsignedLongValue
stringByAppendingString:
supportsCapabilitiesOfGraphicsAPI:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
name
_supportedFeatureSets
_name
com.apple
Command Queue <0x%llx>
com.apple.SceneKit
com.apple.SpriteKit
deviceAddress
queueAddress
label
canBeCaptured
isOpenGLQueue
device:0x%llx, queue:0x%llx, label:%@, canBeCaptured:%@, isOpenGL:%@, isInternal:%@
TQ,R,N,V_deviceAddress
TQ,R,N,V_queueAddress
T@"NSString",R,N,V_label
displayName
T@"NSString",R,N,V_displayName
Tc,N,V_canBeCaptured
Tc,N,V_isOpenGLQueue
c8@?0
capturedCommandQueueAddress
TQ,R,N,V_capturedCommandQueueAddress
deviceProfiles
T@"NSArray",R,&,N,V_deviceProfiles
vertex fetch shader key
vertex fetch shader info
vertex shader key
vertex shader info
fragment shader key
fragment shader info
compute kernel key
compute kernel info
name
supportedFeatureSets
-[DYMTLDeviceProfile supportsCapabilitiesOfGraphicsAPI:]
graphicsAPIInfo
v32@?0@8Q16^c24
%@ name=%@ featureProfile=
%lx 
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T@"NSArray",R,N,V_supportedFeatureSets
T@"NSString",R,N,V_name
DYMTLCommandQueueInfo
NSCoding
NSCopying
DYMTLCaptureSessionInfo
DYMTLDeviceProfile
DYGraphicsAPIInfo
NSObject
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@16@0:8
c24@0:8r*16
c16@0:8
v16@0:8
Q16@0:8
v20@0:8c16
@"NSString"
c28@0:8@16c24
c32@0:8@16c24c28
@"NSArray"
c24@0:8@16
c24@0:8@"<DYGraphicsAPIInfo>"16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8@"Protocol"16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
