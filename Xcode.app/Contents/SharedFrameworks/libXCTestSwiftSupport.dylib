@(#)PROGRAM:XCTestSwiftSupport  PROJECT:XCTest-21192.5
NSKeyValueObservingOptions
XCUIGestureVelocity
__C_Synthesized
XCTestError
NXCTestErrorCode
Foundation
NSKeyValueChange
NSKeyValueChangeKey
ProgressKind
NNSProgressKind
Code
NXCTestErrorCode
XCTest
XCTIssue
XCTest
XCUITestRunDeviceRequirements
XCUIDeviceProvisioning
XCUIDeviceProvider
CodingKeys
XCTest
XCUIDeviceProvisionRequesting
XCUIDeviceProvisioningRequest
kind
XCTest
XCTKeyPathExpectation
XCUIRemoteDevice
XCTest
XCUIRemoteDeviceToken
XCUIDeviceSet
XCUIMultiDeviceTestCase
XCTest
XCUIDeviceSetSpecification
XCTest
XCUIDeviceSetSpecificationBuilder
CodingKeys
XCTest
XCTSkip
XCTest
UncheckedSendable
XCTest
UnwrappingOptional
XCTest
XCUIDeviceType
XCUIOperatingSystemVersion
XCUIDeviceInfo
XCUIDeviceSpecification
OSVersion
CodingKeys
XCTest
ObservedErrorContext
XCTest
RequestResponse
XCTest
XCTBipartiteMatcher
AlternatingPath
AlternatingPathIterator
XCTestCase+TestDiscoveryUIAutomationDelegate.m
Invalid parameter not satisfying: %@
testConfiguration.initializeForMultiDevice
TestDiscoveryUIAutomationDelegate: checking %@.%@
TestDiscoveryUIAutomationDelegate: entire class is skipped
TestDiscoveryUIAutomationDelegate: test method is skipped
'%@' is not a valid test method for multi-device testing, it should have no arguments, not %llu arguments
TestDiscoveryUIAutomationDelegate: %@
'%@' is not a valid test method for multi-device testing, it should return an object of type XCUIMultiDeviceTestCase
TestDiscoveryUIAutomationDelegate: valid multi device test case
XCTestConfiguration.activeTestConfiguration.initializeForMultiDevice
self.invocation.methodSignature.numberOfArguments == 3
[argument isKindOfClass:[NSInvocation class]]
TestDiscoveryUIAutomationDelegate: executing expected multi-device test selector %@
skipping
'%@' is not a valid test method for multi-device testing, it should return an object of type XCUIMultiDeviceTestCase (return type was %@)
Test selector invocation returned valid multi-device test case %@
Not executing complete test, just extracting device requirements.
fetching devices for multi-device test
v24@?0@"XCUIDeviceSet"8@"NSError"16
v16@?0@"XCTPromise"8
/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/XCTest/XCTest-21192.5/Sources/XCUIAutomation/XCTestCore+Extension/XCTestCase+TestDiscoveryUIAutomationDelegate.m
Unable to satisfy device requirements: %@
Registering devices for diagnostic collection.
failed: caught error: "%@"
Test failed but did not produce an error
Skipping test
Multi-device tests are unavailable on older macOS versions.
operatingSystemVersion
testIdentifiersToDeviceSetSpecifications
aggregateSpecifications
XCUIDevice
v24@0:8q16
@24@0:8^@16
@32@0:8q16^@24
@28@0:8i16^@20
v24@0:8@16
B24@0:8^@16
@40@0:8@16d24^@32
@32@0:8@16^@24
eventSynthesizer
T@"<XCUIEventSynthesizing>",N,R
resetAuthorizationStatusInterface
T@"<XCUIResetAuthorizationStatusOfProtectedResourcesInterface>",N,R
platform
Tq,N,R
appearanceMode
Tq,N
mainScreen
T@"XCUIScreen",N,R
screens
T@"NSArray",N,R
isLocal
TB,N,R
supportsPressureInteraction
supportsPointerInteraction
uniqueIdentifier
T@"NSString",N,R
name
alias
T@"NSString",N,C
configuredForUITesting
reportingContext
T@"XCTContext",N,R
@"<XCUIEventSynthesizing>"16@0:8
@"<XCUIResetAuthorizationStatusOfProtectedResourcesInterface>"16@0:8
@"XCUIScreen"16@0:8
@"NSArray"16@0:8
@"XCUIScreen"24@0:8^@16
@"NSArray"24@0:8^@16
@"XCUIScreen"32@0:8q16^@24
@"XCTAttachment"16@0:8
@"XCTAttachment"28@0:8i16^@20
@"NSString"16@0:8
v24@0:8@"NSString"16
@"XCTContext"16@0:8
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
@"NSDictionary"40@0:8@"NSArray"16d24^@32
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
@"NSString"40@0:8@"NSString"16d24^@32
v32@0:8@"NSURL"16@?<v@?@"NSURL"@"NSError">24
@"NSURL"40@0:8@"NSURL"16d24^@32
@"NSURL"32@0:8@"NSURL"16^@24
B24@0:8@16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
hash
T#,N,R
debugDescription
B24@0:8@"Protocol"16
XCUIIssueDiagnosticsProviding
@24@0:8@16
@"NSArray"24@0:8@"NSError"16
value
Aggregate device specifications:
MDT: test bundle did finish
@16@0:8
shared
T@"XCUIDeviceProvider",N,R
provider
T@"<_TtP6XCTest19XCUIDeviceProviding_>",N,&
v16@0:8
deviceManager
testConfiguration
$__lazy_storage_$_aggregateDeviceRequirements
$__lazy_storage_$_environmentRestrictedToLocalDevicesWithECIDs
$__lazy_storage_$_environmentRestrictedToLocalDevicesWithUDIDs
XCTest1
v32@0:8@16@24
v32@0:8@"XCUIDeviceSetSpecification"16@?<v@?@"XCUIDeviceSet"@"NSError">24
Available devices: 
Unable to fully satisfy 
 given available devices 
Acceptable matchings: 
Unable to connect to remote device 
 matching specification 
Discarding device requirements for 
 because it's disabled in the test plan.
, not one of the tests selected to run.
MDT: registering as XCUIDeviceProvider.shared test observer
fullyInitializedDeviceManager()
Cloud device provisioning provider not found.
Encoding problem for test run device requirements: 
Test run device requirements:
No multiDeviceRequirementsFilePath in XCTestConfiguration
Wrote requirements to 
Down-casted Array element failed to match the target type
Expected 
XCUIDeviceSetSpecification
NSArray element failed to match the Swift Array Element type
Expected 
Initial matching: 
Got alternating path 
Updated matching: 
XCTest/XCTBipartiteMatcher.swift
MDT: Building devices list
, unable to construct XCUIDeviceInfo
MDT: Unable to connect to testmanaged on device, probably a stale connection (see 88701980).
MDT: Confirmed connection by checking in with testmanagerd on the device.
 not listed in environment's UDID allow list: 
 not listed in environment's ECID allow list: 
XCUI_RESTRICT_MULTI_DEVICE_TO_LOCAL_UDIDS
TEST_RUNNER_XCUI_RESTRICT_MULTI_DEVICE_TO_LOCAL_UDIDS
XCUI_RESTRICT_MULTI_DEVICE_TO_LOCAL_ECIDS
TEST_RUNNER_XCUI_RESTRICT_MULTI_DEVICE_TO_LOCAL_ECIDS
XCUIDeviceSpecification
Swift/arm64e-apple-macos.swiftinterface
Duplicate values for key: '
_TtP6XCTest19XCUIDeviceProviding_
v32@0:8@16@?24
v32@0:8@"XCUIDeviceSetSpecification"16@"XCTTestIdentifier"24
XCTestObservation
v48@0:8@16@24@32Q40
v24@0:8@"NSBundle"16
v24@0:8@"XCTestSuite"16
v32@0:8@"XCTestSuite"16@"XCTIssue"24
v32@0:8@"XCTestSuite"16@"XCTExpectedFailure"24
v24@0:8@"XCTestCase"16
v32@0:8@"XCTestCase"16@"XCTIssue"24
v32@0:8@"XCTestCase"16@"XCTExpectedFailure"24
v48@0:8@"XCTestSuite"16@"NSString"24@"NSString"32Q40
v48@0:8@"XCTestCase"16@"NSString"24@"NSString"32Q40
NSObject
q16@0:8
#16@0:8
@24@0:8:16
superclass
description
Unable to create provisioning parameters for specification 
MDT: Provisioning 
provisionDevice()
Programming error resulted in provisionDevice being called multiple times on 
_TtC6XCTest29XCUIDeviceProvisioningRequest
$defaultActor
cloudProvider
platformVersionMap
provisioningProgressObserver
servicesProgressObserver
hasStarted
specification
updateHandler
provisioningProgress
servicesProgress
MDT: Enabled DDI services for 
MDT: finished enabling DDI for 
MDT: failed to enable DDI for 
XCTest/XCTKeyPathExpectation.swift
Expect change to '
Expect value of '
_observation
_changeTask
keyPath
observedObject
options
_expectedValue
Cannot find the offset of 
XCTest/XCTContext_SwiftExtensions.swift
XCTContext.runActivity(named:block:) failed because activities are disallowed in the current configuration.
XCTest.XCUIRemoteDevice
init()
No device matching token found in device set
XCTest.XCUIDeviceSet
underlyingDevice
coreDeviceIdentifier
deviceMap
deviceIdentifiers
T@"NSSet",N,R
MultiDevice test case `
XCTest.XCUIMultiDeviceTestCase
deviceSetSpecification
test
objcTest
testName
T@"XCUIDeviceSetSpecification",N,R,VdeviceSetSpecification
T@?,N,R
B24@?0@"XCUIDeviceSet"8^@16
XCTest.XCUIDeviceSetSpecification
tokensToSpecifications
_TtC6XCTest33XCUIDeviceSetSpecificationBuilder
specifications
deviceSpecifications
v16@?0@?<v@?@"NSError">8
B16@?0@"XCTIssue"8
v8@?0
XCTest/XCTExpectedFailure_SwiftExtensions.swift
Fatal error
" was caught by XCTExpectFailure but there is currently no issue handler to determine whether it matches the expected failure. XCTExpectFailure can only be called with a throwing closure in contexts where an issue handler is set.
failed: caught error: "
XCTAssertNil failed: threw error "
XCTAssertNotNil failed: threw error "
XCTUnwrap failed: threw error "
XCTAssertTrue failed: threw error "
XCTAssertFalse failed: threw error "
XCTAssertEqual failed: threw error "
XCTAssertElementsEqual failed: threw error "
XCTAssertNotEqual failed: threw error "
XCTAssertIdentical
XCTAssertNotIdentical
XCTAssertGreaterThan failed: threw error "
XCTAssertGreaterThanOrEqual failed: threw error "
XCTAssertLessThan failed: threw error "
XCTAssertLessThanOrEqual failed: threw error "
XCTAssertThrowsError failed: throwing 
XCTAssertThrowsError failed: threw error "
XCTAssertThrowsError failed: did not throw an error
XCTAssertNoThrow failed: threw error "
 failed: threw error "
Invalid Specification lacks deviceType
unknown OS version
, latestTestable 
XCTest.XCUIDeviceSpecification
token
deviceType
osVersion
train
build
udid
ecid
hardwareModel
testAlias
XCUI_MULTI_DEVICE_MACOS_BUILD
XCUI_MULTI_DEVICE_MACOS_TRAIN
XCUI_MULTI_DEVICE_IOS_BUILD
XCUI_MULTI_DEVICE_IOS_TRAIN
XCUI_MULTI_DEVICE_WATCHOS_BUILD
XCUI_MULTI_DEVICE_WATCHOS_TRAIN
XCUI_MULTI_DEVICE_TVOS_BUILD
XCUI_MULTI_DEVICE_TVOS_TRAIN
unknown platform
B16@0:8
@?16@0:8
@"XCTIssue"8@?0
com.apple.dt.xctest.swift-error-observation.last-observed-error
com.apple.dt.xctest.swift-error-observation.observer-count
_swift_willThrow
__isPlatformOrVariantPlatformVersionAtLeast
os_version_check.c
Platform2 == PLATFORM_MACOS && "unexpected platform"
_availability_version_check
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
/System/Library/CoreServices/SystemVersion.plist
ProductVersion
%d.%d.%d
value
userInfo
stringWithFormat:
sharedSession
setTarget:
setSkippedTestContext:
setSelector:
setDidInterruptTest:
setArgument:atIndex:
selector
retainArguments
requestDiagnosticsForAdditionalDevices:
recordIssue:
raise
objectForKeyedSubscript:
numberOfArguments
methodSignature
methodReturnType
localizedDescription
issueWithType:compactDescription:associatedError:
isEqualToString:
invokeInvocation:withTestMethodConvention:lastObservedErrorIssue:
invocationWithMethodSignature:
invocation
instanceMethodSignatureForSelector:
initializeForMultiDevice
initWithSelectorString:convention:invocation:customErrorMessage:
handleFailureInMethod:object:file:lineNumber:description:
getReturnValue:
getArgument:atIndex:
futureWithTimeout:description:block:
fulfillWithValue:error:
firstComponent
error
currentHandler
currentExceptionPointer
countByEnumeratingWithState:objects:count:
componentCount
_xctTestIdentifier
_identifierForSelectorString:
executeMultiDeviceTestCaseInvocation:
overridesTestMethodName
overriddenTestMethodName
shouldProvideTestInvocationDescriptors
testInvocationDescriptorForSignature:selectorString:inTestClass:usingTestConfiguration:
eventSynthesizer
resetAuthorizationStatusInterface
platform
appearanceMode
setAppearanceMode:
mainScreen
screens
mainScreenOrError:
screensOrError:
screenWithDisplayID:orError:
makeDiagnosticScreenshotAttachmentForDevice
makeDiagnosticScreenshotAttachmentsForDevice
spindumpAttachmentForProcessID:error:
isLocal
supportsPressureInteraction
supportsPointerInteraction
uniqueIdentifier
name
alias
setAlias:
attachLocalizableStringsData
configuredForUITesting
enableAutomationMode:
reportingContext
executeCLITaskWithArgs:completion:
executeCLITaskWithArguments:timeout:error:
executeShellCommand:completion:
executeShellCommand:timeout:error:
installApplicationStagedAtURL:completion:
installApplicationStagedAtURL:timeout:error:
installApplicationStagedAtURL:error:
isEqual:
hash
superclass
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
debugDescription
diagnosticAttachmentsForError:
type
setType:
compactDescription
setCompactDescription:
setDetailedDescription:
sourceCodeContext
setSourceCodeContext:
associatedError
setAssociatedError:
attachments
setAttachments:
addAttachment:
copy
detailedDescription
mutableCopy
initWithType:compactDescription:detailedDescription:sourceCodeContext:associatedError:attachments:
identifierString
initWithStringRepresentation:
dealloc
shared
provider
setProvider:
init
emitMultiDeviceTestRequirements
.cxx_destruct
testBundleDidFinish:
setDeviceSetSpecification:forTestIdentifier:
deviceSetForSpecification:withCompletion:
sharedManager
deviceWithCoreDeviceIdentifier:name:platform:error:
testsToRun
testsToSkip
count
containsTestIdentifier:includingParents:
activeTestConfiguration
shouldExtractMultiDeviceRequirements
sharedTestObservationCenter
addTestObserver:
multiDeviceRequirementsFilePath
processInfo
environment
testBundleWillStart:
testSuiteWillStart:
testSuite:didRecordIssue:
testSuite:didRecordExpectedFailure:
testSuiteDidFinish:
testCaseWillStart:
testCase:didRecordIssue:
testCase:didRecordExpectedFailure:
testCaseDidFinish:
testSuite:didFailWithDescription:inFile:atLine:
testCase:didFailWithDescription:inFile:atLine:
initWithFilePath:lineNumber:
cancel
kind
setKind:
initWithDomain:code:userInfo:
initWithDescription:
_addExpectation:
cleanup
_generateExpectationDescription
_setExpectationDescription:
fulfill
typeKey:modifierFlags:
screenshotAttachmentWithName:lifetime:
deviceIdentifiers
deviceSetSpecification
objcTest
testName
setTestName:
initWithLocation:
initWithExpectedValue:evaluatedExpression:message:sourceCodeContext:
initWithError:evaluatedExpression:message:sourceCodeContext:
skippedTestContextWithExceptionPointer:evaluatedExpression:message:sourceCodeContext:
initWithExplanation:evaluatedExpression:message:sourceCodeContext:
message
addAsyncTeardownBlock:
setIssueMatcher:
setStrict:
setEnabled:
observeErrorsInBlock:
handleIssue:
multiDevicePlatformVersionMap
_installErrorObserver
_observeErrors
currentThread
initWithCallStackAddresses:location:
threadDictionary
__swift_objectForKeyedSubscript:
__swift_setObject:forKeyedSubscript:
callStackReturnAddresses
TestDiscoveryUIAutomationDelegate
B16@0:8
@16@0:8
v24@0:8@16
@48@0:8@16@24#32@40
So7NSErrorC
$s10Foundation21_BridgedStoredNSErrorP
$sSY
$s10Foundation18_ErrorCodeProtocolP
So8NSNumberC
$ss21_ObjectiveCBridgeableP
$ss25ExpressibleByArrayLiteralP
$ss10SetAlgebraP
$ss9OptionSetP
So8NSStringC
ySo8XCTIssueCG
So8XCTIssueC
ySo17XCTTestIdentifierC
SDySS
SDySo17XCTTestIdentifierC
$s6XCTest22XCUIDeviceProvisioningP
$s6XCTest19XCUIDeviceProvidingP
So8NSObjectC
So19XCTestConfigurationCSg
GSgSg
GSgSg
SaySSGSgSg
SgSo7NSErrorCSgIeyByy_
IeghH_
ytIeghHr_
ySS_yptG
3key_
5valuet
SSSg
ySo17XCTTestIdentifierC
ySo17XCTTestIdentifierC
So17XCTTestIdentifierC_
So10NSProgressCSg
$s6XCTest29XCUIDeviceProvisionRequestingP
SDySSSDyS2SGG
So10NSProgressC
SgSg
yq_GSbIeghHnnr_
yq_GSbIeghHgnd_
So17XCTestExpectationC
yxq_G
q_Sg
yq_G_G
yxq_GSgXw
yq_GG
yxq_GSgXwz_x_q_So8NSObjectCRbzr0_lXX
_yptG
ypSg
So10XCUIDevice_p
ySSG
_pIeggzo_
_SAySo7NSErrorCSgGSgtc
SaySSG
ySSG
ySsG
ySo17XCTTestIdentifierC_
ySS_
So21XCTSkippedTestContextC
_pIeghHzo_
So7NSErrorCSgIeyBy_
_pSgIegg_
_pSgcG
_pIgrzo_
_pSg
SDySSypG
_pIgzo_
SiSg
SaySsG
SDyS2SG
So8NSThreadC
_pXCSg
So7NSArrayC
$ss27ExpressibleByIntegerLiteralP
$ss25ExpressibleByFloatLiteralP
yxq__GG
SDyxShyq_GG
yxq__G
yxq___G
$sST
$sSt
yxq__G
_nsError
rawValue
Code
RawValue
_ErrorType
_ObjectiveCType
ArrayLiteralElement
Element
_rawValue
_ObjectiveCType
underlyingIssue
value
aggregateSpecifications
testIdentifiersToDeviceSetSpecifications
deviceManager
testConfiguration
$__lazy_storage_$_aggregateDeviceRequirements
$__lazy_storage_$_environmentRestrictedToLocalDevicesWithECIDs
$__lazy_storage_$_environmentRestrictedToLocalDevicesWithUDIDs
RawValue
$defaultActor
deviceManager
cloudProvider
platformVersionMap
provisioningProgressObserver
servicesProgressObserver
hasStarted
specification
updateHandler
provisioningProgress
servicesProgress
_observation
_changeTask
keyPath
observedObject
options
_expectedValue
underlyingDevice
coreDeviceIdentifier
deviceMap
deviceSetSpecification
test
objcTest
testName
tokensToSpecifications
specifications
deviceSpecifications
RawValue
skippedTestContext
errorCode
rawValue
errorCode
errorUserInfo
RawValue
iPhone
iPad
iPodTouch
appleWatch
appleTV
majorVersion
minorVersion
patchVersion
identifier
udid
ecid
deviceType
marketingName
name
hardwareModel
build
operatingSystemVersion
isInternal
token
osVersion
train
testAlias
latest
error
callStackReturnAddresses
IntegerLiteralType
FloatLiteralType
storage
inputMappings
request
response
Element
Iterator
path
index
