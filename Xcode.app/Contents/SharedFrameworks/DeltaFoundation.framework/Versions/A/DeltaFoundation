@(#)PROGRAM:DeltaFoundation  PROJECT:IDEPlugIns-1
timer
invalidate
dealloc
init
reset
date
timestamp
timeIntervalSinceDate:
setTimestamp:
coalescedRange
setCoalescedRange:
scheduledTimerWithTimeInterval:repeats:block:
setTimer:
throttleTextEventWithLineRange:unthrottledHandler:
isCoalescing
.cxx_destruct
_timer
_timestamp
_coalescedRange
T@"NSTimer",&,N,V_timer
T@"NSDate",&,N,V_timestamp
T{_NSRange=QQ},N,V_coalescedRange
standardUserDefaults
objectForKey:
doubleValue
cachedOriginalDiffContext
setCachedOriginalDiffContext:
cachedModifiedDiffContext
setCachedModifiedDiffContext:
cachedIntermediateDiffContext
setCachedIntermediateDiffContext:
_cachedOriginalDiffContext
_cachedModifiedDiffContext
_cachedIntermediateDiffContext
T@"DEContext",&,N,V_cachedOriginalDiffContext
T@"DEContext",&,N,V_cachedModifiedDiffContext
T@"DEContext",&,N,V_cachedIntermediateDiffContext
countByEnumeratingWithState:objects:count:
de_diffHashForDataSource:
bytes
length
unsignedIntegerValue
initWithDataSource:diffHash:
dataSource
setDataSource:
diffHash
setDiffHash:
_dataSource
_diffHash
T@"DEDataSource",&,V_dataSource
TQ,V_diffHash
enumerateKeysAndObjectsUsingBlock:
setVersion:
allowsKeyedCoding
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
decodeObjectForKey:
decodeIntegerForKey:
decodeBoolForKey:
encodeObject:forKey:
encodeInteger:forKey:
encodeBool:forKey:
allocWithZone:
setOriginalTokenRange:
setModifiedTokenRange:
setAncestorTokenRange:
setIntermediateTokenRange:
setIntermediateModifiedTokenRange:
setOriginalContentRange:
setModifiedContentRange:
setDiffDescriptorType:
setDiffMergeDirection:
setOriginalTokenHash:
setModifiedTokenHash:
setParentDiffDescriptor:
setResolved:
setBinaryConflict:
setDiffMergeDirectionLocked:
copyWithZone:
setSubdescriptorResults:
setOriginalTokenizedRanges:
setModifiedTokenizedRanges:
diffDescriptorType
originalTokenRange
diffMergeDirection
modifiedTokenRange
originalTokenHash
modifiedTokenHash
subdescriptorResults
stringWithFormat:
array
binaryConflict
delegate
descriptorDidUpdateMergeDirection:
descriptorDidUpdateResolvedState:
objectForKeyedSubscript:
modifiedSubdescriptorIndexes
objectsAtIndexes:
diffDescriptor:didAddChildDiffDescriptor:
parentDiffDescriptor
_diffDescriptor:didAddChildDiffDescriptor:
diffDescriptor:willRemoveChildDiffDescriptor:
_diffDescriptor:willRemoveChildDiffDescriptor:
insertObject:atIndex:
objectAtIndex:
removeObjectAtIndex:
childDiffDescriptors
count
insertObject:inChildDiffDescriptorsAtIndex:
indexOfObject:
removeObjectFromChildDiffDescriptorsAtIndex:
initialize
encodeWithCoder:
initWithCoder:
description
isEqual:
hash
allowsThreeWayResolution
resolved
subdescriptors
modifiedSubdescriptors
addChildDiffDescriptor:
insertChildDiffDescriptor:atIndex:
removeChildDiffDescriptor:
removeChildDiffDescriptorAtIndex:
removeAllChildDiffDescriptors
isInsertionOrDeletion
setDelegate:
originalContentRange
modifiedContentRange
originalTokenizedRanges
modifiedTokenizedRanges
ancestorTokenRange
intermediateTokenRange
intermediateModifiedTokenRange
diffMergeDirectionLocked
isMergeDescriptor
setMergeDescriptor:
_originalTokenRange
_modifiedTokenRange
_ancestorTokenRange
_intermediateTokenRange
_originalContentRange
_modifiedContentRange
_originalTokenHash
_modifiedTokenHash
_parentDiffDescriptor
_childDescriptors
_subdescriptorResults
_diffDescriptorType
_diffMergeDirection
_resolved
_binaryConflict
_diffMergeDirectionLocked
_mergeDescriptor
_delegate
_originalTokenizedRanges
_modifiedTokenizedRanges
_intermediateModifiedTokenRange
T@"<DEDescriptorDelegate>",W,N,V_delegate
T{_NSRange=QQ},V_originalTokenRange
T{_NSRange=QQ},V_modifiedTokenRange
T{_NSRange=QQ},V_originalContentRange
T{_NSRange=QQ},V_modifiedContentRange
Tq,V_diffDescriptorType
Tq,D
T@"NSIndexSet",&,V_originalTokenizedRanges
T@"NSIndexSet",&,V_modifiedTokenizedRanges
T@"NSDictionary",&,V_subdescriptorResults
T{_NSRange=QQ},V_ancestorTokenRange
T{_NSRange=QQ},V_intermediateTokenRange
T{_NSRange=QQ},V_intermediateModifiedTokenRange
TQ,V_originalTokenHash
TQ,V_modifiedTokenHash
T@"DEDescriptor",&,V_parentDiffDescriptor
Tc,R
Tc,D
Tc,V_binaryConflict
Tc,V_diffMergeDirectionLocked
mergeDescriptor
Tc,GisMergeDescriptor,V_mergeDescriptor
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
setDirection:
setReplacementRange:
setReplacementString:
setDeltaLines:
beginEditing
replacementRange
replacementString
replaceCharactersInRange:withString:
endEditing
deltaLines
initWithDescriptor:direction:replacementRange:replacementString:deltaLines:
mutateMergeDocument:
mutateDescriptorsUnderneathMergeDescriptors:
currentTokenRange
mergedTokenRange
direction
_direction
_replacementString
_deltaLines
_replacementRange
T@"DEDescriptor",&,V_mergeDescriptor
Tq,V_direction
T{_NSRange=QQ},V_replacementRange
T@"NSString",C,V_replacementString
Tq,V_deltaLines
T{_NSRange=QQ},R
initWithContent:
setContent:
content
string
numberOfDiffTokens
appendFormat:
appendString:
diffTokenAtIndex:
dataSourceContentsDidChange:
_setContent:
didChange
arrangedContent
isEqualToString:
copy
label
isEqualToDiffDataSource:
diffTokenInDiffDescriptor:atIndex:
numberOfDiffTokensInDiffDescriptor:
diffTokenHashInDiffDescriptor:range:
appendTokenStringToString:prefix:tokenRange:
tokenStringWithPrefix:tokenRange:
diffDataSourceWithContent:
THREAD_content
THREAD_arrangedContent
setLabel:
getDiffTokens:inDiffDescriptor:inRange:
diffTokenHashWithRange:
appendLabelToString:prefix:
appendTokenStringToString:tokenRange:
tokenStringWithTokenRange:
options
setOptions:
_content
_label
_options
T@,&,V_content
T@"NSString",&,V_label
T{_DEContextFlags=b1b1b1b1b1b1b1b1b24},V_options
T@"<DEDataSourceDelegate>",W,N,V_delegate
getLineStart:end:contentsEnd:forRange:
de_characterRangeForLineRange:
initWithContext:lineRange:isDeletion:shouldCommence:completion:
ignoresLineEnds
setIgnoresLineEnds:
ancestorDataSource
setAncestorDataSource:
intermediateDataSource
setIntermediateDataSource:
lineRange
isDeletion
initWithOriginalDataSource:modifiedDataSource:updatesDescriptorsImmediately:cachingMode:diffQueue:
setShouldGenerateDiffString:
ignoresCase
ignoresWhitespace
lastObject
arrayByAddingObject:
modifiedDescriptorIndexesForDiffDescriptors:
_buildDiffDescriptors
_diffContextForComparing:with:
_diffDescriptorsByAddingUnmodified:
_ignoresLineEnds
_ancestorDataSource
_intermediateDataSource
Tc,N,V_ignoresLineEnds
T@"DEDataSource",&,N,V_ancestorDataSource
T@"DEDataSource",&,N,V_intermediateDataSource
diffCachingMode
sharedState
modifiedDataSource
diffDescriptors
originalDataSource
_synchronouslyBuildDiffDescriptors
_setModifiedDataSource:
_synchronouslyBuildDiffDescriptorsForLineRange:isDeletion:
objectEnumerator
nextObject
tmpDiffDescriptors
addObject:
whitespaceCharacterSet
newlineCharacterSet
characterIsMember:
valueWithBytes:objCType:
_tokenStorageForDescriptor:
getValue:
skipTokenizingNewlines
setSkipTokenizingNewlines:
_tokenStorage
_skipTokenizingNewlines
Tc,V_skipTokenizingNewlines
initWithLength:
mutableBytes
enumerateObjectsWithOptions:usingBlock:
initWithContent:arrangedContent:tokenStorage:
_tokenCount
_rawTokenStorage
_arrangedContent
dispatchLockWithDebugName:
performLockedBlock:
exceptionWithName:reason:userInfo:
tokenRangeForCharacterRange:
_tokenStorageLock
path
setContentFileURL:
getResourceValue:forKey:error:
boolValue
setIsDirectory:
_setupHash
isDirectory
contentFilePath
_setTokenStorage:
initWithContentFileURL:
contentFileURL
_isDirectory
_contentFileURL
T@"NSURL",C,N,V_contentFileURL
Tc,N,V_isDirectory
dataWithContentsOfFile:options:error:
localizedDescription
initWithDebugName:
UTF8String
debugName
queue
setQueue:
_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
setDiffDescriptors:
hashCache
setHashCache:
diffString
setDiffString:
_diffDescriptors
_hashCache
_diffString
T@"NSArray",&,V_diffDescriptors
T@"DEFNVHashCache",&,V_hashCache
T@"NSString",&,V_diffString
_sharedStateClass
_observeDataSource:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
fineGrainDiffObserver
setFineGrainDiffObserver:
T@"<DEFineGrainDiffObserver>",W
setNeedsUpdateDiffDescriptors:
setMaxConcurrentOperationCount:
setQualityOfService:
setName:
initWithOriginalDataSource:modifiedDataSource:updatesDescriptorsImmediately:cachingMode:
initWithOriginalDataSource:modifiedDataSource:
diffQueue
cancelAllOperations
_setOriginalDataSource:
_diffOperationClass
isCancelled
start
deletionCoalescing
insertionCoalescing
_enqueueDiffOperationWithLineRange:isDeletion:shouldCommence:
_shouldEnqueueLineRange:isDeletion:
_isCurrentlyCoalescing
setSynchronouslyAdjustedDescriptors:
diffContextDidUpdateDescriptors:
addOperation:
_adjustDescriptorsForStartLine:endLine:isDeletion:
synchronouslyAdjustedDescriptors
initWithArray:copyItems:
objectAtIndexedSubscript:
enumerateIndexesUsingBlock:
diffContextDidUpdateDescriptorsSynchronously:diffDescriptors:
needsUpdate
commonDescriptorIndexesForDiffDescriptors:
commonDescriptorIndexes
modifiedDescriptorIndexes
writeToFile:atomically:encoding:error:
insertedTextAtStartLine:endLine:
deletedTextAtStartLine:endLine:
updatingChangedDescriptor
setUpdatingChangedDescriptor:
setOriginalDataSource:
setModifiedDataSource:
setIgnoresCase:
setIgnoresWhitespace:
setDefaultDiffMergeDirection:
shouldGenerateSubdiffDescriptors
setShouldGenerateSubdiffDescriptors:
defaultDiffMergeDirection
cancelAllDiffOperations
configureSynchronously:
numberOfCommonDescriptors
numberOfModifiedDescriptors
diffDescriptorIndexesForOriginalTokenRange:
diffDescriptorIndexesForModifiedTokenRange:
_dumpDataSources
synchronouslyAdjustDescriptorTokenRanges
setSynchronouslyAdjustDescriptorTokenRanges:
shouldGenerateDiffString
coalesceFineGrainEvents
setCoalesceFineGrainEvents:
setSharedState:
setInsertionCoalescing:
setDeletionCoalescing:
setDiffQueue:
setDiffCachingMode:
isRestoringState
setIsRestoringState:
preventAsynchronicity
setPreventAsynchronicity:
setNeedsUpdate:
_originalDataSource
_modifiedDataSource
_defaultDiffMergeDirection
_isRestoringState
_updatingChangedDescriptor
_shouldGenerateSubdiffDescriptors
_synchronouslyAdjustDescriptorTokenRanges
_shouldGenerateDiffString
_coalesceFineGrainEvents
_preventAsynchronicity
_needsUpdate
_sharedState
_insertionCoalescing
_deletionCoalescing
_diffQueue
_synchronouslyAdjustedDescriptors
_diffCachingMode
T@"DEContextSharedState",&,V_sharedState
T@"DEContextCoalescing",&,V_insertionCoalescing
T@"DEContextCoalescing",&,V_deletionCoalescing
T@"NSOperationQueue",&,V_diffQueue
T@"NSString",C,V_diffString
T@"NSArray",&,V_synchronouslyAdjustedDescriptors
TQ,V_diffCachingMode
Tc,V_isRestoringState
Tc,V_preventAsynchronicity
TAi,V_needsUpdate
T@"DEDataSource",&
T@"<DEContextDelegate>",W,V_delegate
Tc,V_synchronouslyAdjustDescriptorTokenRanges
Tc,V_shouldGenerateDiffString
Tc,V_coalesceFineGrainEvents
T@"NSIndexSet",R
addIndex:
indexSet
substringWithRange:
mutableCopy
initWithObjects:forKeys:count:
defaultCenter
postNotificationName:object:userInfo:
setLineRange:
setIsDeletion:
setUnsafeOriginalDataSource:
setUnsafeModifiedDataSource:
setShouldCommence:
setCompletion:
shouldCommence
cancel
completion
initWithArray:
setMutableDiffDescriptors:
unsafeOriginalDataSource
unsafeModifiedDataSource
setTmpDiffDescriptors:
_buildSubdescriptors
mutableDiffDescriptors
replaceObjectsInRange:withObjectsFromArray:range:
_buildDiffString
getCharacters:range:
initWithCapacity:
numberWithLongLong:
removeObjectForKey:
numberWithInteger:
setObject:forKey:
integerValue
longLongValue
addIndexesInRange:
containsObject:
enumerateObjectsUsingBlock:
numberOfDiffDescriptors
initWithInteger:
diffStringForDescriptorInRange:options:
diffStringForDescriptorInRange:
main
diffStringForDescriptors:options:
_isDeletion
_ignoresWhitespace
_ignoresCase
_unsafeOriginalDataSource
_unsafeModifiedDataSource
_tmpDiffDescriptors
_mutableDiffDescriptors
_shouldCommence
_completion
_lineRange
T@"DEDataSource",&,N,V_unsafeOriginalDataSource
T@"DEDataSource",&,N,V_unsafeModifiedDataSource
T@"DEContextSharedState",&,N,V_sharedState
T@"DEDataSource",&,N,V_originalDataSource
T@"DEDataSource",&,N,V_modifiedDataSource
T{_NSRange=QQ},N,V_lineRange
Tc,N,V_isDeletion
Tc,N,V_ignoresWhitespace
Tc,N,V_ignoresCase
Tc,N,V_shouldGenerateSubdiffDescriptors
Tc,N,V_shouldGenerateDiffString
Tc,N,V_skipTokenizingNewlines
T@"NSMutableArray",&,N,V_tmpDiffDescriptors
T@"NSMutableArray",&,N,V_mutableDiffDescriptors
TQ,N,V_diffCachingMode
Tq,N,V_defaultDiffMergeDirection
T@?,C,N,V_shouldCommence
T@?,C,N,V_completion
originalFNVHash
setOriginalFNVHash:
setOriginalFNVHashLength:
modifiedFNVHash
modifiedFNVHashLength
setModifiedFNVHash:
setModifiedFNVHashLength:
weakObjectsPointerArray
_setupBinaryMergeSession
_loadPreviousMergeSession:
weakToWeakObjectsMapTable
_loadDataSourcesWithOriginalDataSource:intermediateDataSource:modifiedDataSource:ancestorDataSource:restoringState:enableCaching:
performDiffAsynchronously
setDiffContext:
setWithObject:
setWithObjects:
isBinaryConflictResolutionMergeState:
setBool:forKey:
arrayWithObject:
indexSetWithIndex:
setModifiedDescriptorIndexes:
setCommonDescriptorIndexes:
binaryConflictDetectionForOriginalDataSource:modifiedDataSource:ancestorDataSource:
setMergeDescriptors:
_updateConflictCount
setSelectedDiffDescriptorIndex:
_notifySessionDidScrape
setIsCalculatingInitialDiffs:
_validateRestoredState:
isBinaryConflictResolution
setMergeTextDigest:
descriptorMap
removeAllObjects
mergeDescriptors
setEnableDiffToggles:
enableDiffToggles
setToggledDiffDescriptorIndexes:
diffContext
setConflictCount:
_notifySessionWillScrape
_scrapeResultsForContext:
addOperationWithBlock:
_buildMergeStringAndDescriptors:withMergeTextDigest:
setAttributedString:
_fixToggledDiffDescriptorIndexes
observers
addPointer:
pointerAtIndex:
removePointerAtIndex:
sessionWillScrapeDiffResults:
sessionDidScrapeDiffResults:
hiddenDiffDescriptorIndexes
containsIndex:
indexesPassingTest:
userFixedPitchFontOfSize:
dictionaryWithObject:forKey:
initWithString:attributes:
mergeForDescriptor:direction:
mutateMergeDocumentWithMerge:
diffSessionTextEditBuffer
revertDiffDescriptorIndex:withPrimaryTextStorage:undoManager:
revertDiffDescriptorIndex:line:withPrimaryTextStorage:undoManager:
revertDiffDescriptor:line:withPrimaryTextStorage:undoManager:
replaceCharactersInRange:withString:withUndoManager:
willChangeValueForKey:
didChangeValueForKey:
isEqualToIndexSet:
_updateLastToggledDiffDescriptorIndexes
removeIndex:
removeAllIndexes
firstIndex
compareDiffDescriptors:rightDescriptor:
shiftIndexesStartingAtIndex:by:
indexGreaterThanIndex:
lastIndex
removeIndexesInRange:
initWithOriginalDataSource:modifiedDataSource:ancestorDataSource:cachingMode:
initWithOriginalDataSource:intermediateModifiedDataSource:modifiedDataSource:ancestorDataSource:cachingMode:
isThreeWayDiff
selectedDiffDescriptorIndex
_updateMergeDocumentForChangedDescriptor:
toggledDiffDescriptorIndexes
numberWithBool:
mergeTextDigest
mergeTextStorage
isEqualToData:
keyPathsForValuesAffectingIsThreeWayDiff
keyPathsForValuesAffectingSelectedMergeDescriptor
keyPathsForValuesAffectingVisibleModifiedDescriptorIndexes
binaryConflictMergeDirection:
isMultiDiffSelectionMergeState:
hasToggledDiffDescriptorsInMergeState:
initWithOriginalBinaryDataSource:modifiedBinaryDataSource:ancestorBinaryDataSource:
initWithBinaryConflictResolutionMergeState:
initWithOriginalDataSource:intermediateDataSource:modifiedDataSource:ancestorDataSource:undoManager:mergeTextStorage:mergeState:cachingModifiedDataSource:updatesDescriptorsImmediately:options:
performDiffSynchronously
addObserver:
removeObserver:
visibleModifiedDescriptorIndexes
modifiedDiffDescriptors
revertDiffDescriptorIndex:withSourceEditorView:undoManager:
revertDiffDescriptor:withPrimaryTextStorage:undoManager:
addToggledDiffDescriptorIndex:
removeToggledDiffDescriptorIndex:
selectedMergeDescriptor
restoredState
mergeIsDirty
refresh
undoManager
setUndoManager:
setMergeTextStorage:
conflictCount
setIsBinaryConflictResolution:
setHiddenDiffDescriptorIndexes:
isCalculatingInitialDiffs
lastToggledDiffDescriptors
setLastToggledDiffDescriptors:
setDescriptorMap:
setObservers:
lastNumberOfModifiedDescriptors
setLastNumberOfModifiedDescriptors:
inMergeEdit
setInMergeEdit:
_toggledDiffDescriptorIndexes
_isBinaryConflictResolution
_enableDiffToggles
_isCalculatingInitialDiffs
_inMergeEdit
_selectedDiffDescriptorIndex
_mergeDescriptors
_undoManager
_mergeTextStorage
_mergeTextDigest
_conflictCount
_hiddenDiffDescriptorIndexes
_commonDescriptorIndexes
_modifiedDescriptorIndexes
_diffContext
_lastToggledDiffDescriptors
_descriptorMap
_observers
_lastNumberOfModifiedDescriptors
T@"DEContext",&,V_diffContext
T@"NSArray",&,V_mergeDescriptors
T@"NSIndexSet",&,V_commonDescriptorIndexes
T@"NSIndexSet",&,V_modifiedDescriptorIndexes
T@"NSData",&,V_mergeTextDigest
T@"NSMutableArray",&,V_lastToggledDiffDescriptors
T@"NSMapTable",&,V_descriptorMap
T@"NSPointerArray",&,V_observers
TQ,V_lastNumberOfModifiedDescriptors
Tc,V_isBinaryConflictResolution
Tc,V_inMergeEdit
T@"NSIndexSet",R,N,V_toggledDiffDescriptorIndexes
T@"DEDataSource",R,V_originalDataSource
T@"DEDataSource",R,V_modifiedDataSource
T@"DEDataSource",R,V_intermediateDataSource
T@"DEDataSource",R,V_ancestorDataSource
TQ,V_selectedDiffDescriptorIndex
T@"DEDescriptor",R
T@"NSUndoManager",&,V_undoManager
T@"<DESessionTextEditBuffer>",&,V_mergeTextStorage
TQ,V_conflictCount
Tc,V_enableDiffToggles
T@"NSIndexSet",&,V_hiddenDiffDescriptorIndexes
Tc,V_isCalculatingInitialDiffs
T@"NSDictionary",R,D
lengthOfBytesUsingEncoding:
dataWithBytes:length:
originalFNVHashLength
_modifiedFNVHash
_modifiedFNVHashLength
_originalFNVHash
_originalFNVHashLength
_setAncestorDataSource:
_setIntermediateDataSource:
stringWithString:
indexesOfObjectsPassingTest:
v16@?0@"NSTimer"8
v8@?0
DeltaFoundationDiffCoalescingThreshold
v32@?0@8@16^c24
DEDescriptorDiffDescriptors
DEDescriptorModifiedDiffDescriptorIndexes
DEDescriptorCommonDiffDescriptorIndexes
common
modified
changed-in-originalDataSource
changed-in-modifiedDataSource
same-change-on-both-sides
conflict-change-on-both-sides
changed-in-modifiedDataSource-intermediate
<1-2>
<2-1>
DEDescriptor.m
keyed unarchiver required
originalTokenRange
modifiedTokenRange
ancestorTokenRange
intermediateTokenRange
intermediateModifiedTokenRange
originalContentRange
modifiedContentRange
diffDescriptorType
diffMergeDirection
originalTokenHash
modifiedTokenHash
subdescriptorResults
originalTokenizedRanges
modifiedTokenizedRanges
resolved
binaryConflict
diffMergeDirectionLocked
keyed archiver required
%@ %p <type = %@, %@ %@ %@, (%lu, %lu), subdescriptorResults = %@>
Invalid merge direction
Unknown merge direction
Merge direction locked
Invalid parameter not satisfying: %@
descriptor != nil
childDescriptor != nil
NSMutableArray *_DEDescriptorGetMutableChildDiffDescriptors(DEDescriptor *__strong)
<%@: %p>[count = %lu]
DEDataSource.m
dataSource is nil or the wrong type
method %@ is a responsibility of subclasses of %@
-[DEDataSource diffTokenInDiffDescriptor:atIndex:]
-[DEDataSource getDiffTokens:inDiffDescriptor:inRange:]
-[DEDataSource numberOfDiffTokensInDiffDescriptor:]
result is nil
void _DEContextThreeWayUpdateDiffDescriptors(DEContextThreeWayOperation *__strong, NSRange, BOOL)
DEContextThreeWayOperation.m
original and modified diff descriptor arrays disagree on length of ancestor
didn't have diff descriptors to end of ancestor
unexpected diff descriptor type when comparing conflict region
{?={_NSRange=QQ}QQ}
DELineDataSource.m
%@ should not be nil.
tokenStorage
v32@?0@"NSValue"8Q16^c24
descriptor is nil
index out of bounds
range is invalid
com.apple.dt.token-storage-lock-queue
%@ %@ %d: Range or index out of bounds
NSMutableArray *_DELineDataSourceGetTokenStorage(DELineDataSource *__strong, DEDescriptor *__strong, __strong id)
%@ should be a string
arrangedContent
%@ should be nil
descriptor
DEBinaryDataSource.m
Hash is null
Descriptor was nil
Index is invalid
Range is invalid
self.content
Unable to hash "%@". Error: %@
DEBarrierLock.m
_queue is NULL, self has already been deallocated
Diff queue for DEContext <%p>
<%@: %p>[originalDataSource = <%@: %p>, modifiedDataSource = <%@: %p>, sub]
v16@?0@"DEContextOperation"8
v24@?0{_NSRange=QQ}8
v24@?0Q8^c16
c16@?0@"DEContextOperation"8
/tmp/DEcontext-%lu-<%p>-original-input.log
/tmp/DEcontext-%lu-<%p>-modified-input.log
NSIndexSet *_diffDescriptorIndexesForTokenRange(NSArray *__strong, NSRange, NSRange (*)(DEDescriptor *__strong))
DEContext.m
descriptors != nil
tokenRangeCallback != NULL
DEToken DEMakeDiffTokenWithString(NSString * _Nonnull __strong, NSRange, BOOL, BOOL)
DEToken.m
string != nil
%@ length > length of string: %@ (%li) 
(ignoresWhitespace == YES) || (ignoresWhitespace == NO)
(ignoresCase == YES) || (ignoresCase == NO)
{range = {%lu, %lu}, hash = %lx, type = %ld}
DEContextNumberOfContextTokensOptionKey
v16@?0Q8
DEPatienceTuple *patienceSequenceMatcher(int64_t *, NSInteger, int64_t *, NSInteger, NSInteger *)
DEContextOperation.m
Patience Diff binary search failed
int64_t *UniquelineTuples(int64_t *, NSInteger, int64_t *, NSInteger)
fileALength is negative
fileBLength is negative
%@ should be a string, but it is nil
originalContent
modifiedContent
+++ UnknownFile
--- UnknownFile
v32@?0@8Q16^c24
NSMaxRange(range) <= [self numberOfDiffDescriptors]
--- 
+++ 
NSInteger _DEContextGetNumberOfContextTokensWithOptions(DEContextOperation *__strong, NSDictionary *__strong)
Context cannot be nil!
void _DEContextAppendDiffStringInRangeWithContextTokens(DEContextOperation *__strong, NSMutableString *__strong, NSRange, NSInteger, DEDataSource *__strong, DEDataSource *__strong)
context != nil
(range.location != NSNotFound) && (range.length > 0) && (NSMaxRange(range) <= [context numberOfDiffDescriptors])
numContextTokens >= 0
origDataSource != nil
modDataSource != nil
%ld,%ld
void _DEContextAppendDiffStringInRange(DEContextOperation *__strong, NSMutableString *__strong, NSRange, DEDataSource *__strong, DEDataSource *__strong)
DESessionIsBinaryConflictResolution
DESessionDiffDescriptors
DESessionMergeDescriptors
DESessionCommonDescriptorIndexes
DESessionModifiedDescriptorIndexes
DESessionDiffString
DESessionMergeTextDigest
DESessionEnableDiffToggles
DESessionToggledDiffDescriptorIndexes
DESessionIgnoresWhitespaceKey
DESession.m
a datasource is nil
v16@?0@"DEContext"8
ancestorDataSource
isThreeWayDiff
mergeDescriptors
selectedDiffDescriptorIndex
hiddenDiffDescriptorIndexes
modifiedDescriptorIndexes
[restoredState objectForKey:DESessionIsBinaryConflictResolution]
[restoredState objectForKey:DESessionDiffDescriptors]
[restoredState objectForKey:DESessionCommonDescriptorIndexes]
[restoredState objectForKey:DESessionModifiedDescriptorIndexes]
[restoredState objectForKey:DESessionDiffString]
[restoredState objectForKey:DESessionMergeDescriptors]
[restoredState objectForKey:DESessionMergeTextDigest]
%@ should be an array, but it is nil
%@ should be an array
v32@?0@"DEDescriptor"8Q16^c24
code should be running on main thread
c24@?0Q8^c16
modifiedString
originalString
code which should be unreachable has been reached
Diff descriptor %lu is greater than number of diffs (%lu)
ancestorString
intermediateString
toggledDiffDescriptorIndexes
 ancestorDataSource = <%@: %p>
c32@?0@"DEDescriptor"8Q16^c24
DEContextCoalescing
DEContextThreeWaySharedState
DEHashing
_DEHashingDictionaryDiffHashContext
DEDescriptor
NSCoding
NSCopying
DESessionMerge
DEDataSource
DEContextThreeWayOperation
DEWordDataSource
_DELineDataSourceConsistentCopy
DELineDataSource
DEBinaryDataSource
DEBarrierLock
DEContextSharedState
DEFineGrainDiffDataSource
NSObject
DEContext
DEFineGrainDiffObserver
DEDataSourceDelegate
DEContextOperation
DESession
DEContextDelegate
DEDescriptorDelegate
DEFNVHashCache
DEContextThreeWay
v16@0:8
@16@0:8
c40@0:8{_NSRange=QQ}16@?32
c16@0:8
v24@0:8@16
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"NSTimer"
@"NSDate"
{_NSRange="location"Q"length"Q}
@"DEContext"
Q24@0:8@16
Q24@0:8@"DEDataSource"16
@32@0:8@16Q24
Q16@0:8
v24@0:8Q16
@"DEDataSource"
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
c24@0:8@16
v24@0:8q16
q16@0:8
v20@0:8c16
v32@0:8@16@24
v32@0:8@16q24
@"DEDescriptor"
@"NSMutableArray"
@"NSDictionary"
@"<DEDescriptorDelegate>"
@"NSIndexSet"
@64@0:8@16q24{_NSRange=QQ}32@48q56
@"NSString"
{?={_NSRange=QQ}QQ}32@0:8@16q24
v48@0:8^{?={_NSRange=QQ}QQ}16@24{_NSRange=QQ}32
{?={_NSRange=QQ}QQ}24@0:8q16
q24@0:8@16
Q40@0:8@16{_NSRange=QQ}24
Q32@0:8{_NSRange=QQ}16
v48@0:8@16@24{_NSRange=QQ}32
v40@0:8@16{_NSRange=QQ}24
@40@0:8@16{_NSRange=QQ}24
@32@0:8{_NSRange=QQ}16
{_DEContextFlags=b1b1b1b1b1b1b1b1b24}16@0:8
v20@0:8{_DEContextFlags=b1b1b1b1b1b1b1b1b24}16
{_DEContextFlags="ignoresCase"b1"ignoresWhitespace"b1"ignoresLineEnds"b1"ignoresCommon"b1"synchronouslyAdjustDescriptorTokenRanges"b1"skipTokenizingNewlines"b1"shouldGenerateDiffString"b1"coalesceFineGrainEvents"b1"RESERVED"b24}
@"<DEDataSourceDelegate>"
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
@60@0:8@16{_NSRange=QQ}24c40@?44@?52
@32@0:8@16@24
@"NSArray"
@40@0:8@16@24@32
@"NSData"
^{?={_NSRange=QQ}QQ}
@"DEBarrierLock"
v24@0:8[5{?={_NSRange=QQ}QQ}]16
[5{?="range"{_NSRange="location"Q"length"Q}"hash"Q"type"Q}]
@"NSURL"
v24@0:8@?16
@"NSObject<OS_dispatch_queue>"
@"DEFNVHashCache"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
@"<DEFineGrainDiffObserver>"16@0:8
v24@0:8@"<DEFineGrainDiffObserver>"16
v32@0:8q16q24
v24@0:8@"DEDataSource"16
@52@0:8@16@24c32Q36@44
@44@0:8@16@24c32Q36
v36@0:8{_NSRange=QQ}16c32
c36@0:8{_NSRange=QQ}16c32
v44@0:8{_NSRange=QQ}16c32@?36
v36@0:8q16q24c32
i16@0:8
v20@0:8i16
@"<DEContextDelegate>"
@"DEContextSharedState"
@"DEContextCoalescing"
@"NSOperationQueue"
@40@0:8{_NSRange=QQ}16@32
@?16@0:8
v24@0:8@"DEContext"16
v32@0:8@"DEContext"16@"NSArray"24
v24@0:8@"DEDescriptor"16
@84@0:8@16@24@32@40@48@56@64c72c76{_DEContextFlags=b1b1b1b1b1b1b1b1b24}80
@32@0:8^@16^@24
@32@0:8@16q24
v40@0:8Q16@24@32
v48@0:8Q16q24@32@40
v40@0:8@16@24@32
v48@0:8@16q24@32@40
q32@0:8@16@24
v56@0:8@16@24@32@40c48c52
@"NSMutableIndexSet"
@"NSUndoManager"
@"<DESessionTextEditBuffer>"
@"NSMapTable"
@"NSPointerArray"
^q16@0:8
v24@0:8^q16
@48@0:8@16@24@32Q40
@56@0:8@16@24@32@40Q48
@(#)PROGRAM:DeltaFoundation  PROJECT:IDEPlugIns-1
!1Ae
handleFailureInMethod:object:file:lineNumber:description:
initWithInteger:
beginEditing
containsObject:
scheduledTimerWithTimeInterval:repeats:block:
handleFailureInFunction:file:lineNumber:description:
arrayWithObject:
containsIndex:
getValue:
substringWithRange:
isCancelled
arrayByAddingObject:
getResourceValue:forKey:error:
path
array
getLineStart:end:contentsEnd:forRange:
nextObject
stringWithUTF8String:
writeToFile:atomically:encoding:error:
defaultCenter
newlineCharacterSet
stringWithString:
invalidate
willChangeValueForKey:
setObject:forKey:
getCharacters:range:
initWithCapacity:
decodeObjectForKey:
appendString:
firstIndex
stringWithFormat:
longLongValue
whitespaceCharacterSet
initWithArray:copyItems:
decodeIntegerForKey:
weakToWeakObjectsMapTable
string
setName:
localizedDescription
exceptionWithName:reason:userInfo:
initWithArray:
decodeBoolForKey:
start
weakObjectsPointerArray
appendFormat:
replaceObjectsInRange:withObjectsFromArray:range:
enumerateObjectsWithOptions:usingBlock:
integerValue
replaceCharactersInRange:withString:withUndoManager:
standardUserDefaults
lengthOfBytesUsingEncoding:
enumerateObjectsUsingBlock:
valueWithBytes:objCType:
indexesPassingTest:
enumerateKeysAndObjectsUsingBlock:
length
replaceCharactersInRange:withString:
characterIsMember:
userFixedPitchFontOfSize:
indexesOfObjectsPassingTest:
mutableCopy
date
removePointerAtIndex:
allowsKeyedCoding
enumerateIndexesUsingBlock:
cancelAllOperations
unsignedIntegerValue
lastObject
indexSetWithIndex:
dataWithContentsOfFile:options:error:
mutableBytes
lastIndex
insertObject:atIndex:
objectsAtIndexes:
allocWithZone:
endEditing
dataWithBytes:length:
indexSet
initWithString:attributes:
addPointer:
removeObjectForKey:
objectForKeyedSubscript:
cancel
UTF8String
encodeObject:forKey:
setBool:forKey:
indexOfObject:
shiftIndexesStartingAtIndex:by:
addOperationWithBlock:
objectForKey:
removeObjectAtIndex:
encodeInteger:forKey:
indexGreaterThanIndex:
currentHandler
didChangeValueForKey:
addOperation:
objectEnumerator
removeIndexesInRange:
encodeBool:forKey:
isEqualToString:
setAttributedString:
countByEnumeratingWithState:objects:count:
setWithObjects:
objectAtIndexedSubscript:
addObject:
removeIndex:
isEqualToIndexSet:
count
setQualityOfService:
dictionaryWithObject:forKey:
setWithObject:
addIndexesInRange:
objectAtIndex:
removeAllObjects
doubleValue
bytes
numberWithLongLong:
addIndex:
setVersion:
isEqualToData:
removeAllIndexes
boolValue
copy
numberWithInteger:
initWithObjects:forKeys:count:
postNotificationName:object:userInfo:
numberWithBool:
initWithLength:
pointerAtIndex:
setMaxConcurrentOperationCount:
timeIntervalSinceDate:
dealloc
init
throttleTextEventWithLineRange:unthrottledHandler:
isCoalescing
reset
timer
setTimer:
timestamp
setTimestamp:
coalescedRange
setCoalescedRange:
.cxx_destruct
_timer
_timestamp
_coalescedRange
T@"NSTimer",&,N,V_timer
T@"NSDate",&,N,V_timestamp
T{_NSRange=QQ},N,V_coalescedRange
cachedOriginalDiffContext
setCachedOriginalDiffContext:
cachedModifiedDiffContext
setCachedModifiedDiffContext:
cachedIntermediateDiffContext
setCachedIntermediateDiffContext:
_cachedOriginalDiffContext
_cachedModifiedDiffContext
_cachedIntermediateDiffContext
T@"DEContext",&,N,V_cachedOriginalDiffContext
T@"DEContext",&,N,V_cachedModifiedDiffContext
T@"DEContext",&,N,V_cachedIntermediateDiffContext
de_diffHashForDataSource:
initWithDataSource:diffHash:
dataSource
setDataSource:
diffHash
setDiffHash:
_dataSource
_diffHash
T@"DEDataSource",&,V_dataSource
TQ,V_diffHash
descriptorDidUpdateMergeDirection:
descriptorDidUpdateResolvedState:
initialize
encodeWithCoder:
initWithCoder:
copyWithZone:
description
isEqual:
hash
childDiffDescriptors
allowsThreeWayResolution
setDiffMergeDirection:
diffMergeDirection
setResolved:
resolved
subdescriptors
modifiedSubdescriptors
modifiedSubdescriptorIndexes
_diffDescriptor:didAddChildDiffDescriptor:
_diffDescriptor:willRemoveChildDiffDescriptor:
insertObject:inChildDiffDescriptorsAtIndex:
removeObjectFromChildDiffDescriptorsAtIndex:
addChildDiffDescriptor:
insertChildDiffDescriptor:atIndex:
removeChildDiffDescriptor:
removeChildDiffDescriptorAtIndex:
removeAllChildDiffDescriptors
diffDescriptor:didAddChildDiffDescriptor:
diffDescriptor:willRemoveChildDiffDescriptor:
isInsertionOrDeletion
delegate
setDelegate:
originalTokenRange
setOriginalTokenRange:
modifiedTokenRange
setModifiedTokenRange:
originalContentRange
setOriginalContentRange:
modifiedContentRange
setModifiedContentRange:
diffDescriptorType
setDiffDescriptorType:
originalTokenizedRanges
setOriginalTokenizedRanges:
modifiedTokenizedRanges
setModifiedTokenizedRanges:
subdescriptorResults
setSubdescriptorResults:
ancestorTokenRange
setAncestorTokenRange:
intermediateTokenRange
setIntermediateTokenRange:
intermediateModifiedTokenRange
setIntermediateModifiedTokenRange:
originalTokenHash
setOriginalTokenHash:
modifiedTokenHash
setModifiedTokenHash:
parentDiffDescriptor
setParentDiffDescriptor:
binaryConflict
setBinaryConflict:
diffMergeDirectionLocked
setDiffMergeDirectionLocked:
isMergeDescriptor
setMergeDescriptor:
_originalTokenRange
_modifiedTokenRange
_ancestorTokenRange
_intermediateTokenRange
_originalContentRange
_modifiedContentRange
_originalTokenHash
_modifiedTokenHash
_parentDiffDescriptor
_childDescriptors
_subdescriptorResults
_diffDescriptorType
_diffMergeDirection
_resolved
_binaryConflict
_diffMergeDirectionLocked
_mergeDescriptor
_delegate
_originalTokenizedRanges
_modifiedTokenizedRanges
_intermediateModifiedTokenRange
T@"<DEDescriptorDelegate>",W,N,V_delegate
T{_NSRange=QQ},V_originalTokenRange
T{_NSRange=QQ},V_modifiedTokenRange
T{_NSRange=QQ},V_originalContentRange
T{_NSRange=QQ},V_modifiedContentRange
Tq,V_diffDescriptorType
Tq,D
T@"NSIndexSet",&,V_originalTokenizedRanges
T@"NSIndexSet",&,V_modifiedTokenizedRanges
T@"NSDictionary",&,V_subdescriptorResults
T{_NSRange=QQ},V_ancestorTokenRange
T{_NSRange=QQ},V_intermediateTokenRange
T{_NSRange=QQ},V_intermediateModifiedTokenRange
TQ,V_originalTokenHash
TQ,V_modifiedTokenHash
T@"DEDescriptor",&,V_parentDiffDescriptor
TB,R
TB,D
TB,V_binaryConflict
TB,V_diffMergeDirectionLocked
mergeDescriptor
TB,GisMergeDescriptor,V_mergeDescriptor
initWithDescriptor:direction:replacementRange:replacementString:deltaLines:
mutateMergeDocument:
mutateDescriptorsUnderneathMergeDescriptors:
currentTokenRange
mergedTokenRange
direction
setDirection:
replacementRange
setReplacementRange:
replacementString
setReplacementString:
deltaLines
setDeltaLines:
_direction
_replacementString
_deltaLines
_replacementRange
T@"DEDescriptor",&,V_mergeDescriptor
Tq,V_direction
T{_NSRange=QQ},V_replacementRange
T@"NSString",C,V_replacementString
Tq,V_deltaLines
T{_NSRange=QQ},R
dataSourceContentsDidChange:
diffDataSourceWithContent:
initWithContent:
didChange
_setContent:
setContent:
content
THREAD_content
arrangedContent
THREAD_arrangedContent
setLabel:
label
isEqualToDiffDataSource:
diffTokenInDiffDescriptor:atIndex:
getDiffTokens:inDiffDescriptor:inRange:
diffTokenAtIndex:
numberOfDiffTokensInDiffDescriptor:
numberOfDiffTokens
diffTokenHashInDiffDescriptor:range:
diffTokenHashWithRange:
appendLabelToString:prefix:
appendTokenStringToString:prefix:tokenRange:
appendTokenStringToString:tokenRange:
tokenStringWithPrefix:tokenRange:
tokenStringWithTokenRange:
options
setOptions:
_content
_label
_options
T@,&,V_content
T@"NSString",&,V_label
T{_DEContextFlags=b1b1b1b1b1b1b1b1b24},V_options
T@"<DEDataSourceDelegate>",W,N,V_delegate
de_characterRangeForLineRange:
initWithContext:lineRange:isDeletion:shouldCommence:completion:
_buildDiffDescriptors
_diffContextForComparing:with:
_diffDescriptorsByAddingUnmodified:
modifiedDescriptorIndexesForDiffDescriptors:
ignoresLineEnds
setIgnoresLineEnds:
ancestorDataSource
setAncestorDataSource:
intermediateDataSource
setIntermediateDataSource:
_ignoresLineEnds
_ancestorDataSource
_intermediateDataSource
TB,N,V_ignoresLineEnds
T@"DEDataSource",&,N,V_ancestorDataSource
T@"DEDataSource",&,N,V_intermediateDataSource
_tokenStorageForDescriptor:
skipTokenizingNewlines
setSkipTokenizingNewlines:
_tokenStorage
_skipTokenizingNewlines
TB,V_skipTokenizingNewlines
initWithContent:arrangedContent:tokenStorage:
_tokenCount
_rawTokenStorage
_arrangedContent
tokenRangeForCharacterRange:
_tokenStorageLock
initWithContentFileURL:
_setupHash
_setTokenStorage:
contentFilePath
contentFileURL
setContentFileURL:
isDirectory
setIsDirectory:
_isDirectory
_contentFileURL
T@"NSURL",C,N,V_contentFileURL
TB,N,V_isDirectory
dispatchLockWithDebugName:
initWithDebugName:
debugName
performLockedBlock:
queue
setQueue:
_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
diffDescriptors
setDiffDescriptors:
hashCache
setHashCache:
diffString
setDiffString:
_diffDescriptors
_hashCache
_diffString
T@"NSArray",&,V_diffDescriptors
T@"DEFNVHashCache",&,V_hashCache
T@"NSString",&,V_diffString
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
fineGrainDiffObserver
setFineGrainDiffObserver:
T@"<DEFineGrainDiffObserver>",W
diffContextDidUpdateDescriptors:
diffContextDidUpdateDescriptorsSynchronously:diffDescriptors:
_diffOperationClass
_sharedStateClass
commonDescriptorIndexesForDiffDescriptors:
insertedTextAtStartLine:endLine:
deletedTextAtStartLine:endLine:
initWithOriginalDataSource:modifiedDataSource:updatesDescriptorsImmediately:cachingMode:diffQueue:
initWithOriginalDataSource:modifiedDataSource:updatesDescriptorsImmediately:cachingMode:
initWithOriginalDataSource:modifiedDataSource:
_observeDataSource:
updatingChangedDescriptor
setUpdatingChangedDescriptor:
_setOriginalDataSource:
setOriginalDataSource:
originalDataSource
_setModifiedDataSource:
setModifiedDataSource:
modifiedDataSource
setIgnoresCase:
ignoresCase
setIgnoresWhitespace:
ignoresWhitespace
setDefaultDiffMergeDirection:
shouldGenerateSubdiffDescriptors
setShouldGenerateSubdiffDescriptors:
defaultDiffMergeDirection
_synchronouslyBuildDiffDescriptors
_synchronouslyBuildDiffDescriptorsForLineRange:isDeletion:
_isCurrentlyCoalescing
_shouldEnqueueLineRange:isDeletion:
_enqueueDiffOperationWithLineRange:isDeletion:shouldCommence:
_adjustDescriptorsForStartLine:endLine:isDeletion:
cancelAllDiffOperations
configureSynchronously:
setNeedsUpdateDiffDescriptors:
commonDescriptorIndexes
modifiedDescriptorIndexes
numberOfCommonDescriptors
numberOfModifiedDescriptors
diffDescriptorIndexesForOriginalTokenRange:
diffDescriptorIndexesForModifiedTokenRange:
_dumpDataSources
synchronouslyAdjustDescriptorTokenRanges
setSynchronouslyAdjustDescriptorTokenRanges:
shouldGenerateDiffString
setShouldGenerateDiffString:
coalesceFineGrainEvents
setCoalesceFineGrainEvents:
sharedState
setSharedState:
insertionCoalescing
setInsertionCoalescing:
deletionCoalescing
setDeletionCoalescing:
diffQueue
setDiffQueue:
synchronouslyAdjustedDescriptors
setSynchronouslyAdjustedDescriptors:
diffCachingMode
setDiffCachingMode:
isRestoringState
setIsRestoringState:
preventAsynchronicity
setPreventAsynchronicity:
needsUpdate
setNeedsUpdate:
_originalDataSource
_modifiedDataSource
_defaultDiffMergeDirection
_isRestoringState
_updatingChangedDescriptor
_shouldGenerateSubdiffDescriptors
_synchronouslyAdjustDescriptorTokenRanges
_shouldGenerateDiffString
_coalesceFineGrainEvents
_preventAsynchronicity
_needsUpdate
_sharedState
_insertionCoalescing
_deletionCoalescing
_diffQueue
_synchronouslyAdjustedDescriptors
_diffCachingMode
T@"DEContextSharedState",&,V_sharedState
T@"DEContextCoalescing",&,V_insertionCoalescing
T@"DEContextCoalescing",&,V_deletionCoalescing
T@"NSOperationQueue",&,V_diffQueue
T@"NSString",C,V_diffString
T@"NSArray",&,V_synchronouslyAdjustedDescriptors
TQ,V_diffCachingMode
TB,V_isRestoringState
TB,V_preventAsynchronicity
TAi,V_needsUpdate
T@"DEDataSource",&
T@"<DEContextDelegate>",W,V_delegate
TB,V_synchronouslyAdjustDescriptorTokenRanges
TB,V_shouldGenerateDiffString
TB,V_coalesceFineGrainEvents
T@"NSIndexSet",R
main
_buildSubdescriptors
diffStringForDescriptors:options:
diffStringForDescriptorInRange:options:
diffStringForDescriptorInRange:
_buildDiffString
numberOfDiffDescriptors
unsafeOriginalDataSource
setUnsafeOriginalDataSource:
unsafeModifiedDataSource
setUnsafeModifiedDataSource:
lineRange
setLineRange:
isDeletion
setIsDeletion:
tmpDiffDescriptors
setTmpDiffDescriptors:
mutableDiffDescriptors
setMutableDiffDescriptors:
shouldCommence
setShouldCommence:
completion
setCompletion:
_isDeletion
_ignoresWhitespace
_ignoresCase
_unsafeOriginalDataSource
_unsafeModifiedDataSource
_tmpDiffDescriptors
_mutableDiffDescriptors
_shouldCommence
_completion
_lineRange
T@"DEDataSource",&,N,V_unsafeOriginalDataSource
T@"DEDataSource",&,N,V_unsafeModifiedDataSource
T@"DEContextSharedState",&,N,V_sharedState
T@"DEDataSource",&,N,V_originalDataSource
T@"DEDataSource",&,N,V_modifiedDataSource
T{_NSRange=QQ},N,V_lineRange
TB,N,V_isDeletion
TB,N,V_ignoresWhitespace
TB,N,V_ignoresCase
TB,N,V_shouldGenerateSubdiffDescriptors
TB,N,V_shouldGenerateDiffString
TB,N,V_skipTokenizingNewlines
T@"NSMutableArray",&,N,V_tmpDiffDescriptors
T@"NSMutableArray",&,N,V_mutableDiffDescriptors
TQ,N,V_diffCachingMode
Tq,N,V_defaultDiffMergeDirection
T@?,C,N,V_shouldCommence
T@?,C,N,V_completion
sessionWillScrapeDiffResults:
sessionDidScrapeDiffResults:
diffSessionTextEditBuffer
keyPathsForValuesAffectingIsThreeWayDiff
keyPathsForValuesAffectingSelectedMergeDescriptor
keyPathsForValuesAffectingVisibleModifiedDescriptorIndexes
_validateRestoredState:
isBinaryConflictResolutionMergeState:
binaryConflictMergeDirection:
isMultiDiffSelectionMergeState:
hasToggledDiffDescriptorsInMergeState:
binaryConflictDetectionForOriginalDataSource:modifiedDataSource:ancestorDataSource:
initWithOriginalBinaryDataSource:modifiedBinaryDataSource:ancestorBinaryDataSource:
initWithBinaryConflictResolutionMergeState:
initWithOriginalDataSource:intermediateDataSource:modifiedDataSource:ancestorDataSource:undoManager:mergeTextStorage:mergeState:cachingModifiedDataSource:updatesDescriptorsImmediately:options:
_setupBinaryMergeSession
_loadPreviousMergeSession:
_updateConflictCount
performDiffAsynchronously
performDiffSynchronously
_scrapeResultsForContext:
addObserver:
removeObserver:
_notifySessionWillScrape
_notifySessionDidScrape
visibleModifiedDescriptorIndexes
modifiedDiffDescriptors
_buildMergeStringAndDescriptors:withMergeTextDigest:
mergeForDescriptor:direction:
mutateMergeDocumentWithMerge:
_updateMergeDocumentForChangedDescriptor:
revertDiffDescriptorIndex:withSourceEditorView:undoManager:
revertDiffDescriptorIndex:withPrimaryTextStorage:undoManager:
revertDiffDescriptorIndex:line:withPrimaryTextStorage:undoManager:
revertDiffDescriptor:withPrimaryTextStorage:undoManager:
revertDiffDescriptor:line:withPrimaryTextStorage:undoManager:
selectedDiffDescriptorIndex
setSelectedDiffDescriptorIndex:
setToggledDiffDescriptorIndexes:
addToggledDiffDescriptorIndex:
removeToggledDiffDescriptorIndex:
compareDiffDescriptors:rightDescriptor:
_updateLastToggledDiffDescriptorIndexes
_fixToggledDiffDescriptorIndexes
_loadDataSourcesWithOriginalDataSource:intermediateDataSource:modifiedDataSource:ancestorDataSource:restoringState:enableCaching:
isThreeWayDiff
selectedMergeDescriptor
mergeDescriptors
setMergeDescriptors:
restoredState
mergeIsDirty
refresh
toggledDiffDescriptorIndexes
undoManager
setUndoManager:
mergeTextStorage
setMergeTextStorage:
mergeTextDigest
setMergeTextDigest:
conflictCount
setConflictCount:
isBinaryConflictResolution
setIsBinaryConflictResolution:
enableDiffToggles
setEnableDiffToggles:
hiddenDiffDescriptorIndexes
setHiddenDiffDescriptorIndexes:
isCalculatingInitialDiffs
setIsCalculatingInitialDiffs:
setCommonDescriptorIndexes:
setModifiedDescriptorIndexes:
diffContext
setDiffContext:
lastToggledDiffDescriptors
setLastToggledDiffDescriptors:
descriptorMap
setDescriptorMap:
observers
setObservers:
lastNumberOfModifiedDescriptors
setLastNumberOfModifiedDescriptors:
inMergeEdit
setInMergeEdit:
_toggledDiffDescriptorIndexes
_isBinaryConflictResolution
_enableDiffToggles
_isCalculatingInitialDiffs
_inMergeEdit
_selectedDiffDescriptorIndex
_mergeDescriptors
_undoManager
_mergeTextStorage
_mergeTextDigest
_conflictCount
_hiddenDiffDescriptorIndexes
_commonDescriptorIndexes
_modifiedDescriptorIndexes
_diffContext
_lastToggledDiffDescriptors
_descriptorMap
_observers
_lastNumberOfModifiedDescriptors
T@"DEContext",&,V_diffContext
T@"NSArray",&,V_mergeDescriptors
T@"NSIndexSet",&,V_commonDescriptorIndexes
T@"NSIndexSet",&,V_modifiedDescriptorIndexes
T@"NSData",&,V_mergeTextDigest
T@"NSMutableArray",&,V_lastToggledDiffDescriptors
T@"NSMapTable",&,V_descriptorMap
T@"NSPointerArray",&,V_observers
TQ,V_lastNumberOfModifiedDescriptors
TB,V_isBinaryConflictResolution
TB,V_inMergeEdit
T@"NSIndexSet",R,N,V_toggledDiffDescriptorIndexes
T@"DEDataSource",R,V_originalDataSource
T@"DEDataSource",R,V_modifiedDataSource
T@"DEDataSource",R,V_intermediateDataSource
T@"DEDataSource",R,V_ancestorDataSource
TQ,V_selectedDiffDescriptorIndex
T@"DEDescriptor",R
T@"NSUndoManager",&,V_undoManager
T@"<DESessionTextEditBuffer>",&,V_mergeTextStorage
TQ,V_conflictCount
TB,V_enableDiffToggles
T@"NSIndexSet",&,V_hiddenDiffDescriptorIndexes
TB,V_isCalculatingInitialDiffs
T@"NSDictionary",R,D
modifiedFNVHash
setModifiedFNVHash:
modifiedFNVHashLength
setModifiedFNVHashLength:
originalFNVHash
setOriginalFNVHash:
originalFNVHashLength
setOriginalFNVHashLength:
_modifiedFNVHash
_modifiedFNVHashLength
_originalFNVHash
_originalFNVHashLength
initWithOriginalDataSource:modifiedDataSource:ancestorDataSource:cachingMode:
initWithOriginalDataSource:intermediateModifiedDataSource:modifiedDataSource:ancestorDataSource:cachingMode:
_setAncestorDataSource:
_setIntermediateDataSource:
v16@?0@"NSTimer"8
v8@?0
DeltaFoundationDiffCoalescingThreshold
v32@?0@8@16^B24
DEDescriptorDiffDescriptors
DEDescriptorModifiedDiffDescriptorIndexes
DEDescriptorCommonDiffDescriptorIndexes
common
modified
changed-in-originalDataSource
changed-in-modifiedDataSource
same-change-on-both-sides
conflict-change-on-both-sides
changed-in-modifiedDataSource-intermediate
<1-2>
<2-1>
DEDescriptor.m
keyed unarchiver required
originalTokenRange
modifiedTokenRange
ancestorTokenRange
intermediateTokenRange
intermediateModifiedTokenRange
originalContentRange
modifiedContentRange
diffDescriptorType
diffMergeDirection
originalTokenHash
modifiedTokenHash
subdescriptorResults
originalTokenizedRanges
modifiedTokenizedRanges
resolved
binaryConflict
diffMergeDirectionLocked
keyed archiver required
%@ %p <type = %@, %@ %@ %@, (%lu, %lu), subdescriptorResults = %@>
Invalid merge direction
Unknown merge direction
Merge direction locked
Invalid parameter not satisfying: %@
descriptor != nil
childDescriptor != nil
NSMutableArray *_DEDescriptorGetMutableChildDiffDescriptors(DEDescriptor *__strong)
<%@: %p>[count = %lu]
DEDataSource.m
dataSource is nil or the wrong type
method %@ is a responsibility of subclasses of %@
-[DEDataSource diffTokenInDiffDescriptor:atIndex:]
-[DEDataSource getDiffTokens:inDiffDescriptor:inRange:]
-[DEDataSource numberOfDiffTokensInDiffDescriptor:]
result is nil
void _DEContextThreeWayUpdateDiffDescriptors(DEContextThreeWayOperation *__strong, NSRange, BOOL)
DEContextThreeWayOperation.m
original and modified diff descriptor arrays disagree on length of ancestor
didn't have diff descriptors to end of ancestor
unexpected diff descriptor type when comparing conflict region
{?={_NSRange=QQ}QQ}
DELineDataSource.m
%@ should not be nil.
tokenStorage
v32@?0@"NSValue"8Q16^B24
descriptor is nil
index out of bounds
range is invalid
com.apple.dt.token-storage-lock-queue
%@ %@ %d: Range or index out of bounds
NSMutableArray *_DELineDataSourceGetTokenStorage(DELineDataSource *__strong, DEDescriptor *__strong, __strong id)
%@ should be a string
arrangedContent
%@ should be nil
descriptor
DEBinaryDataSource.m
Hash is null
Descriptor was nil
Index is invalid
Range is invalid
self.content
Unable to hash "%@". Error: %@
DEBarrierLock.m
_queue is NULL, self has already been deallocated
Diff queue for DEContext <%p>
<%@: %p>[originalDataSource = <%@: %p>, modifiedDataSource = <%@: %p>, sub]
v16@?0@"DEContextOperation"8
v24@?0{_NSRange=QQ}8
v24@?0Q8^B16
B16@?0@"DEContextOperation"8
/tmp/DEcontext-%lu-<%p>-original-input.log
/tmp/DEcontext-%lu-<%p>-modified-input.log
NSIndexSet *_diffDescriptorIndexesForTokenRange(NSArray *__strong, NSRange, NSRange (*)(DEDescriptor *__strong))
DEContext.m
descriptors != nil
tokenRangeCallback != NULL
DEToken DEMakeDiffTokenWithString(NSString * _Nonnull __strong, NSRange, BOOL, BOOL)
DEToken.m
string != nil
%@ length > length of string: %@ (%li) 
{range = {%lu, %lu}, hash = %lx, type = %ld}
DEContextNumberOfContextTokensOptionKey
v16@?0Q8
DEPatienceTuple *patienceSequenceMatcher(int64_t *, NSInteger, int64_t *, NSInteger, NSInteger *)
DEContextOperation.m
Patience Diff binary search failed
int64_t *UniquelineTuples(int64_t *, NSInteger, int64_t *, NSInteger)
fileALength is negative
fileBLength is negative
%@ should be a string, but it is nil
originalContent
modifiedContent
+++ UnknownFile
--- UnknownFile
v32@?0@8Q16^B24
NSMaxRange(range) <= [self numberOfDiffDescriptors]
--- 
+++ 
NSInteger _DEContextGetNumberOfContextTokensWithOptions(DEContextOperation *__strong, NSDictionary *__strong)
Context cannot be nil!
void _DEContextAppendDiffStringInRangeWithContextTokens(DEContextOperation *__strong, NSMutableString *__strong, NSRange, NSInteger, DEDataSource *__strong, DEDataSource *__strong)
context != nil
(range.location != NSNotFound) && (range.length > 0) && (NSMaxRange(range) <= [context numberOfDiffDescriptors])
numContextTokens >= 0
origDataSource != nil
modDataSource != nil
%ld,%ld
void _DEContextAppendDiffStringInRange(DEContextOperation *__strong, NSMutableString *__strong, NSRange, DEDataSource *__strong, DEDataSource *__strong)
DESessionIsBinaryConflictResolution
DESessionDiffDescriptors
DESessionMergeDescriptors
DESessionCommonDescriptorIndexes
DESessionModifiedDescriptorIndexes
DESessionDiffString
DESessionMergeTextDigest
DESessionEnableDiffToggles
DESessionToggledDiffDescriptorIndexes
DESessionIgnoresWhitespaceKey
DESession.m
a datasource is nil
v16@?0@"DEContext"8
ancestorDataSource
isThreeWayDiff
mergeDescriptors
selectedDiffDescriptorIndex
hiddenDiffDescriptorIndexes
modifiedDescriptorIndexes
[restoredState objectForKey:DESessionIsBinaryConflictResolution]
[restoredState objectForKey:DESessionDiffDescriptors]
[restoredState objectForKey:DESessionCommonDescriptorIndexes]
[restoredState objectForKey:DESessionModifiedDescriptorIndexes]
[restoredState objectForKey:DESessionDiffString]
[restoredState objectForKey:DESessionMergeDescriptors]
[restoredState objectForKey:DESessionMergeTextDigest]
%@ should be an array, but it is nil
%@ should be an array
v32@?0@"DEDescriptor"8Q16^B24
code should be running on main thread
B24@?0Q8^B16
modifiedString
originalString
code which should be unreachable has been reached
Diff descriptor %lu is greater than number of diffs (%lu)
ancestorString
intermediateString
toggledDiffDescriptorIndexes
 ancestorDataSource = <%@: %p>
B32@?0@"DEDescriptor"8Q16^B24
DEContextCoalescing
DEContextThreeWaySharedState
DEHashing
_DEHashingDictionaryDiffHashContext
DEDescriptor
NSCoding
NSCopying
DESessionMerge
DEDataSource
DEContextThreeWayOperation
DEWordDataSource
_DELineDataSourceConsistentCopy
DELineDataSource
DEBinaryDataSource
DEBarrierLock
DEContextSharedState
DEFineGrainDiffDataSource
NSObject
DEContext
DEFineGrainDiffObserver
DEDataSourceDelegate
DEContextOperation
DESession
DEContextDelegate
DEDescriptorDelegate
DEFNVHashCache
DEContextThreeWay
v16@0:8
@16@0:8
B40@0:8{_NSRange=QQ}16@?32
B16@0:8
v24@0:8@16
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"NSTimer"
@"NSDate"
{_NSRange="location"Q"length"Q}
@"DEContext"
Q24@0:8@16
Q24@0:8@"DEDataSource"16
@32@0:8@16Q24
Q16@0:8
v24@0:8Q16
@"DEDataSource"
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
B24@0:8@16
v24@0:8q16
q16@0:8
v20@0:8B16
v32@0:8@16@24
v32@0:8@16q24
@"DEDescriptor"
@"NSMutableArray"
@"NSDictionary"
@"<DEDescriptorDelegate>"
@"NSIndexSet"
@64@0:8@16q24{_NSRange=QQ}32@48q56
@"NSString"
{?={_NSRange=QQ}QQ}32@0:8@16q24
v48@0:8^{?={_NSRange=QQ}QQ}16@24{_NSRange=QQ}32
{?={_NSRange=QQ}QQ}24@0:8q16
q24@0:8@16
Q40@0:8@16{_NSRange=QQ}24
Q32@0:8{_NSRange=QQ}16
v48@0:8@16@24{_NSRange=QQ}32
v40@0:8@16{_NSRange=QQ}24
@40@0:8@16{_NSRange=QQ}24
@32@0:8{_NSRange=QQ}16
{_DEContextFlags=b1b1b1b1b1b1b1b1b24}16@0:8
v20@0:8{_DEContextFlags=b1b1b1b1b1b1b1b1b24}16
{_DEContextFlags="ignoresCase"b1"ignoresWhitespace"b1"ignoresLineEnds"b1"ignoresCommon"b1"synchronouslyAdjustDescriptorTokenRanges"b1"skipTokenizingNewlines"b1"shouldGenerateDiffString"b1"coalesceFineGrainEvents"b1"RESERVED"b24}
@"<DEDataSourceDelegate>"
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
@60@0:8@16{_NSRange=QQ}24B40@?44@?52
@32@0:8@16@24
@"NSArray"
@40@0:8@16@24@32
@"NSData"
^{?={_NSRange=QQ}QQ}
@"DEBarrierLock"
v24@0:8[5{?={_NSRange=QQ}QQ}]16
[5{?="range"{_NSRange="location"Q"length"Q}"hash"Q"type"Q}]
@"NSURL"
v24@0:8@?16
@"NSObject<OS_dispatch_queue>"
@"DEFNVHashCache"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"<DEFineGrainDiffObserver>"16@0:8
v24@0:8@"<DEFineGrainDiffObserver>"16
v32@0:8q16q24
v24@0:8@"DEDataSource"16
@52@0:8@16@24B32Q36@44
@44@0:8@16@24B32Q36
v36@0:8{_NSRange=QQ}16B32
B36@0:8{_NSRange=QQ}16B32
v44@0:8{_NSRange=QQ}16B32@?36
v36@0:8q16q24B32
i16@0:8
v20@0:8i16
@"<DEContextDelegate>"
@"DEContextSharedState"
@"DEContextCoalescing"
@"NSOperationQueue"
@40@0:8{_NSRange=QQ}16@32
@?16@0:8
v24@0:8@"DEContext"16
v32@0:8@"DEContext"16@"NSArray"24
v24@0:8@"DEDescriptor"16
@84@0:8@16@24@32@40@48@56@64B72B76{_DEContextFlags=b1b1b1b1b1b1b1b1b24}80
@32@0:8^@16^@24
@32@0:8@16q24
v40@0:8Q16@24@32
v48@0:8Q16q24@32@40
v40@0:8@16@24@32
v48@0:8@16q24@32@40
q32@0:8@16@24
v56@0:8@16@24@32@40B48B52
@"NSMutableIndexSet"
@"NSUndoManager"
@"<DESessionTextEditBuffer>"
@"NSMapTable"
@"NSPointerArray"
^q16@0:8
v24@0:8^q16
@48@0:8@16@24@32Q40
@56@0:8@16@24@32@40Q48
