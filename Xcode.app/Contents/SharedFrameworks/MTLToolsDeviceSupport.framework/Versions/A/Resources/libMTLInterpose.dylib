?St12out_of_range
St11logic_error
NSt3__117bad_function_callE
St9exception
class
isKindOfClass:
device
defaultFbufStream
pixelFormat
framebufferOnly
drawableSize
init
setDevice:
setBounds:
setFrame:
setDrawableSize:
setContentsScale:
setPixelFormat:
setFramebufferOnly:
nextDrawable
setPresentsWithTransaction:
texture
present
presentAtTime:
graphicsSemaphore
traceMode
originalObject
includeBacktraceInPbufs
contentsScale
bounds
superlayer
window
frame
level
styleMask
baseObject
setLabel:
UTF8String
dealloc
setComputePipelineState:
setBytes:length:atIndex:
setBuffer:offset:atIndex:
setBufferOffset:atIndex:
setBuffers:offsets:withRange:
stringWithFormat:
setTexture:atIndex:
setTextures:withRange:
setSamplerState:atIndex:
setSamplerStates:withRange:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setThreadgroupMemoryLength:atIndex:
setStageInRegion:
dispatchThreadgroups:threadsPerThreadgroup:
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
insertDebugSignpost:
pushDebugGroup:
popDebugGroup
strongParent
addMarkedComputeResources:
endEncoding
.cxx_destruct
.cxx_construct
_helper
_harvesterMarker
synchronizeResource:
synchronizeTexture:slice:level:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
generateMipmapsForTexture:
fillBuffer:range:value:
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
addMarkedBlitResources:
setMetalAssertionsEnabled:
newCommandQueue
alloc
initWithBaseObject:parent:
newCommandQueueWithMaxCommandBufferCount:
newTextureWithDescriptor:
newTextureWithDescriptor:iosurface:plane:
newLibraryWithData:error:
supportsFeatureSet:
supportsTextureSampleCount:
unmapShaderSampleBuffer
supportsSampleCount:
newCommandQueueWithDescriptor:
newLibraryWithSource:options:error:
newLibraryWithSource:options:completionHandler:
unwrapMTLRenderPipelineDescriptor:
newRenderPipelineStateWithDescriptor:completionHandler:
unwrapMTLComputePipelineDescriptor:
newComputePipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithDescriptor:completionHandler:
newComputePipelineStateWithDescriptor:options:completionHandler:
newRenderPipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithFunction:error:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithFunction:options:reflection:error:
newDepthStencilStateWithDescriptor:
newSamplerStateWithDescriptor:
newDefaultLibrary
mainBundle
pathForResource:ofType:
label
newLibraryWithFile:error:
newBufferWithLength:options:
contents
newBufferWithBytes:length:options:
newBufferWithBytesNoCopy:length:options:deallocator:
newDefaultLibraryWithBundle:error:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
count
streams
setStreams:
blitRequest
setBlitRequest:
initialResources
setInitialResources:
usedResources
setUsedResources:
generatedResources
setGeneratedResources:
debugDevice
setDebugDevice:
unused
setUnused:
_formatBuffer
_streams
_blitRequest
_initialResources
_usedResources
_generatedResources
_debugDevice
_unused
setDescriptor:
setReflection:
setFunction:
resetPointerToUrlAssociation:
setWasHarvested:
setParentDevice:
initWithBaseObject:parent:lockingPolicy:
setBaseObject:
insert:object:parent:
initWithDevice:
name
hash
numberWithUnsignedLong:
setObject:forKey:
parent
baseObjectWithClass:
viewport
setDefaultViewport:
descriptor
colorAttachments
objectAtIndexedSubscript:
setIsColorAttachment:
resolveTexture
renderCommandEncoders
enumeratePointersUsingBlock:
setPipelines:
reflection
visitDevice:
visitBuffer:
visitDepthStencilState:
visitTexture:
visitSamplerState:
visitCommandQueue:
visitFunction:
visitLibrary:
visitCommandBuffer:
visitRenderCommandEncoder:
visitComputeCommandEncoder:
visitBlitCommandEncoder:
visitParallelRenderCommandEncoder:
visitRenderPipelineState:
visitComputePipelineState:
_currentDevice
_currentBuffer
_currentCommandQueue
_currentCommandBuffer
setRenderPipelineState:
setVertexBytes:length:atIndex:
setVertexBuffer:offset:atIndex:
setVertexBufferOffset:atIndex:
setVertexBuffers:offsets:withRange:
setVertexTexture:atIndex:
setVertexTextures:withRange:
setVertexSamplerState:atIndex:
setVertexSamplerStates:withRange:
setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setViewport:
setFrontFacingWinding:
setCullMode:
setDepthClipMode:
setDepthBias:slopeScale:clamp:
setScissorRect:
setTriangleFillMode:
setFragmentBytes:length:atIndex:
setFragmentBuffer:offset:atIndex:
setFragmentBufferOffset:atIndex:
setFragmentBuffers:offsets:withRange:
setFragmentTexture:atIndex:
setFragmentTextures:withRange:
setFragmentSamplerState:atIndex:
setFragmentSamplerStates:withRange:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setBlendColorRed:green:blue:alpha:
setDepthStencilState:
setStencilReferenceValue:
setStencilFrontReferenceValue:backReferenceValue:
setVisibilityResultMode:offset:
setColorStoreAction:atIndex:
setDepthStoreAction:
setStencilStoreAction:
drawPrimitives:vertexStart:vertexCount:instanceCount:
drawPrimitives:vertexStart:vertexCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawPrimitives:indirectBuffer:indirectBufferOffset:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
textureBarrier
setTessellationFactorBuffer:offset:instanceStride:
setTessellationFactorScale:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:
drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:
drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:
setLineWidth:
addMarkedRenderResources:
debugTexture
buffer
parentTexture
loadAction
storeAction
wasLoaded
wasStored
setWasLoaded:
setWasStored:
depthAttachment
stencilAttachment
visibilityResultBuffer
vertexArguments
countByEnumeratingWithState:objects:count:
access
type
index
fragmentArguments
arguments
commandQueues
length
commandBufferWithUnretainedReferences
blitCommandEncoder
commit
waitUntilCompleted
setWasMutated:
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
vertexFunction
fragmentFunction
computeFunction
function
wasHarvested
wasMutated
wasRestored
storageMode
isRangeModified
resetRangeModified
setWasRestored:
isAppleInternal
debugBuffer
options
textures
offset
bytesPerRow
responsibleProcess
setPurgeableState:
resourceUsage
copyDebugMarkers
range
parentRelativeLevel
mipmapLevelCount
arrayLength
textureType
parentRelativeSlice
iosurface
plane
views
isDrawable
debugLibrary
code
compileOptions
functions
constantValues
respondsToSelector:
newFunctionWithName:
functionConstantsDictionary
filePath
functionConstants
debugPipeline
imageFilterFunctions
imageFilterFunctionInfo
debugQueue
maxCommandBufferCount
isProfilingEnabled
backgroundTrackingPID
skipRender
executionEnabled
isFramebufferOnly
width
height
depth
sampleCount
isLabelAppleInternal:
setIsAppleInternal:
setProfilingEnabled:
enqueue
addScheduledHandler:
presentDrawable:
presentDrawable:atTime:
waitUntilScheduled
addCompletedHandler:
computeCommandEncoder
debugCommandEncoder
commitAndHold
unwrapMTLRenderPassDescriptor:
renderCommandEncoderWithDescriptor:
parallelRenderCommandEncoderWithDescriptor:
setBackgroundTrackingPID:
setSkipRender:
setExecutionEnabled:
insertDebugCaptureBoundary
finish
commandBuffer
setDebugPipeline:
parentDevice
_wasHarvested
_wasMutated
_isAppleInternal
_descriptor
_reflection
_function
_debugPipeline
_parentDevice
_insertInstanceOfClass:withParent:intoObject:
setDebugBuffer:
setIsContentExposedToCPU:
setDebugTexture:
setDebugQueue:
setDebugFunction:
setDebugLibrary:
isEqualToString:
setComputeFunction:
_currentLibrary
pipelines
_pipelines
numberWithBool:
isCommitted
commandQueue
addUsedResources:
_usedResourcesLock
_hasPresentDrawable
setResponsibleProcess:
newTextureWithDescriptor:offset:bytesPerRow:
addDebugMarker:range:
removeAllDebugMarkers
newTiledTextureWithDescriptor:offset:bytesPerRow:
isPurgeable
didModifyRange:
isContentExposedToCPU
_rangeModified
_wasRestored
_isContentExposedToCPU
_debugBuffer
setObject:forKeyedSubscript:
initWithTransport:
connect
boolResult
error
description
initWithNumberOfSubLayersToRemove:
_removeBaseObjectsFromObject:
_numLayers
xcodeOverrideFlags
numberWithUnsignedLongLong:
objectForKeyedSubscript:
copy
isBlendingEnabled
setBlendingEnabled:
tessellationPartitionMode
patchType
maxTessellationFactor
setMaxTessellationFactor:
isTessellationFactorScaleEnabled
setTessellationFactorScaleEnabled:
xcodeOverrideScaleTessFactor
isColorAttachment
defaultViewport
_currentViewport
_currentFillMode
_currentState
_indexHasRenderPass
_indexIsUsed
_defaultViewport
basicTexture
getTexture:
setBasicTexture:
_debugQueue
renderCommandEncoder
debugFunction
_debugFunction
initWithBaseObject:parent:functions:
newFunctionWithName:constantValues:error:
newFunctionWithName:constantValues:completionHandler:
_debugLibrary
kind
_copyMTLCommandQueueInfos
messageWithKind:objectPayload:
sendMessage:inReplyTo:
lockGraphicsAndWaitForThreads:
attributeForKey:
unsignedIntValue
boolForKey:
setIncludeBacktraceInPbufs:
setQueryDriverEventsOnGraphicsCommands:
uint64ForKey:
setPreviousTraceMode:
setTraceMode:
unlockGraphics
uint32ForKey:
doubleForKey:
attributes
plistPayload
objectForKey:
unsignedLongLongValue
defaultManager
isWritableFileAtPath:
queueAddress
processMessage:
atexit
acceptVisitor:
sendCaptureData:name:inReplyTo:
stringByAppendingPathComponent:
writeToFile:atomically:
numberWithUnsignedInteger:
initWithObjectsAndKeys:
data
initWithKind:attributes:payload:
addObject:
_waitForGraphicsThreads
_copyDeviceProfiles
_appendLinkTimeLibrary:toVersionsDictionary:
sendMessage:
dictionaryWithObjectsAndKeys:
notifyUsedDataSentWithDictionary:
notifyAllCaptureMetadataSent
_populateQueueAndThreadLabelMaps
_appendToAllCaptureDataSentMessagePayload:
_appendLinkTimeLibrariesToVersionsDictionary:
_canTriggerCaptureOnNextGraphicsCommand
sendMTLCommandQueueInfoUpdate
_handleTurnOnCapture
_handleTurnOffCapture
_hostCaptureArchivePath
_tempDirectoryPath
standardUserDefaults
persistentDomainForName:
isInternalQueue
canBeCaptured
enumerateKeysAndObjectsUsingBlock:
globalFrameCounterAtomicCompareAndSwap32:newValue:
handleFrameBoundaryCommon
resourceTrackingEndOfFrame
invalidateSavePointerMap:
buffers
harvestableTexture:
libraries
boolValue
updateLibrary:withIR:isDefault:optionsDict:resultsDict:
updateLibrary:withSource:optionsDict:resultsDict:
initWithKind:attributes:objectPayload:
setLockingPolicy:
setCanBeCaptured:
valueForKey:
setIsOpenGLQueue:
initWithCommandQueue:
removeObjectForKey:
stringWithUTF8String:
callStackReturnAddresses
_initWithType:backtrace:error:
globalFrameCounterAtomicIncrement
capturing
captureInfo
numberWithUnsignedInt:
messageWithKind:plistPayload:
waitOnGraphicsSemaphoreAssertions
graphicsLockWaitQueue
setTextureType:
setDepth:
setArrayLength:
setWidth:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
setHeight:
setSampleCount:
_device
_textures
getBytes:bytesPerRow:fromRegion:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
_isColorAttachment
_basicTexture
_wasLoaded
_wasStored
_debugTexture
cache
setCache:
_cache
constantValueWithFunctionConstant:
setConstantValue:type:atIndex:
userInfo
hashTableWithOptions:
mapTableWithKeyOptions:valueOptions:
_constantValuesFrom:andSpecializedFunction:
pipelineStates
containsObject:
_originalObjectFromMapTable:toolsObject:
setVertexFunction:
setFragmentFunction:
computePipelineStates
setOriginalObject:
setPreprocessorMacros:
setFastMathEnabled:
setDebuggingEnabled:
_compileOptionsFromDict:
_updateLibrary:resultsDict:creationBlock:
setType:
setCode:
setCompileOptions:
bytes
C@2d
dealloc
C@4dd@4dulil
CU<b>ulul
Ctulul
Culul
C@%llut@%lluul@2ul
Ctul
C@%llut@2ul
Ctfful
C@%llut@%lluf@%lluf@2ul
C@6ul
C@3ul@3ul
Ctul@3ul
Ctulul@3ul@3ultulul@3ul
Ctululul@3ultulul@3ul
Ctululul@3ultulul@3ulul
Ctulul@3ul@3ultululul
Ctulul@3ul@3ultulululul
Ct@2ulub
Ctultulul
CUUul
CU<b>Ut
CU<b>tt
v24@?0@"<MTLLibrary>"8@"NSError"16
v24@?0@"<MTLRenderPipelineState>"8@"NSError"16
CUultt
v24@?0@"<MTLComputePipelineState>"8@"NSError"16
CUult
v32@?0@"<MTLComputePipelineState>"8@"MTLComputePipelineReflection"16@"NSError"24
v32@?0@"<MTLRenderPipelineState>"8@"MTLRenderPipelineReflection"16@"NSError"24
Ctult
Ctultt
default
metallib
CU<b>t
CU<b>ulult
CitS
CUUt
streams
T^{list<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, std::__1::allocator<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> > > >={__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>=^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *> > >=Q}},N,V_streams
blitRequest
T^{MTLHarvesterMarkerBlitData={MTLHarvesterDataStruct<MTLHarvesterBufferHarvestStruct>={vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}{vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}}{MTLHarvesterDataStruct<MTLHarvesterTextureHarvestStruct>={vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}{vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}}},N,V_blitRequest
initialResources
T^{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}},N,V_initialResources
usedResources
T^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >=},N,V_usedResources
generatedResources
T^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >=},N,V_generatedResources
debugDevice
T@"<MTLDevice>",&,N,V_debugDevice
unused
T{MTLHarvesterUnusedResourcesInfo={MTLHarvesterResourcesInfo=QQQQQQQQQQQQ}{MTLHarvesterResourcesInfo=QQQQQQQQQQQQ}},N,V_unused
v24@?0@"MTLToolsObject"8^c16
C@6d
Cfff
C@4l
Cffff
Cuiui
Culululul
Cululul
Cululultulul
Cululultul
Cululululul
Cululultulullul
Cultul
Culultultul
Cululultululul
Cultultul
Cululultultululul
Cultultultul
%@-%p
%@-%@-%p
Ciui
C@6ulululU<b>ululul
CtU<b>ulul
v16@?0^{Stream=^{VMBuffer}(?=^v^{?})^vQ^{__CFString}@?@?iB}8
CSuwuw
GPU Tx
MTLLibrary
MTLBuffer
CUulul
MTLBuffer-%p-@-%p
CS@2ul
MTLTexture
Culul@2ul@2ul
MTLTexture-%p-%lu-%lu
MTLDepthStencilState
MTLSamplerState
CSUt
MTLRenderPipelineState
MTLComputePipelineState
MTLCommandQueue
MTLTexture-%p-%lu-%lu-Fetch
com.apple
descriptor
T@"MTLComputePipelineDescriptor",&,N,V_descriptor
reflection
T@"MTLComputePipelineReflection",&,N,V_reflection
function
T@"<MTLFunction>",&,N,V_function
debugPipeline
T@"<MTLComputePipelineState>",&,N,V_debugPipeline
parentDevice
T@"<MTLDevice>",N,V_parentDevice
wasHarvested
Tc,N,V_wasHarvested
wasMutated
Tc,N,V_wasMutated
isAppleInternal
Tc,N,V_isAppleInternal
ciKernelMain
pipelines
T@"NSMutableDictionary",&,N,V_pipelines
T@"MTLRenderPipelineDescriptor",&,N,V_descriptor
T@"MTLRenderPipelineReflection",&,N,V_reflection
v16@?0@"<MTLCommandBuffer>"8
Commit
C@2ul
wasRestored
Tc,N,V_wasRestored
isContentExposedToCPU
Tc,N,V_isContentExposedToCPU
debugBuffer
T@"<MTLBuffer>",&,N,V_debugBuffer
PerformanceStatistics
GT_HOST_URL_MTL
[DYMTLInitPlatform] failed to initialize client
[DYMTLInitPlatform] connection to the host has failed: %s
IOAccelerator
[DYMTLInitPlatform] platform initialization successful
T@"MTLSamplerDescriptor",&,N,V_descriptor
defaultViewport
T{?=dddddd},N,V_defaultViewport
bitset set argument out of range
T^{list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >={__list_node_base<MTLHarvesterCommandStream, void *>=^{__list_node_base<MTLHarvesterCommandStream, void *>}^{__list_node_base<MTLHarvesterCommandStream, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<MTLHarvesterCommandStream, void *> > >=Q}},N,V_streams
debugQueue
T@"<MTLCommandQueue>",&,N,V_debugQueue
debugFunction
T@"<MTLFunction>",&,N,V_debugFunction
v24@?0@"<MTLFunction>"8@"NSError"16
debugLibrary
T@"<MTLLibrary>",&,N,V_debugLibrary
capture trace mode cannot be set directly; create and start a capture session
CaptureCommandQueueAddress
HostCaptureArchivePath
v16@?0@"DYMTLCommandQueueInfo"8
Invalid CommandQueue address, maybe selected queue has been deallocated
v24@?0^{MTLDeviceInfo=@i}8^B16
Unknown trace mode: %d
Disk Wx
v16@?0@"DYMTLDeviceProfile"8
device profile
Metal
Frame
Insert Capture Layer
Capture done
Capture Unused
Capture Finish
MTLUseInterpose
METAL_LOAD_INTERPOSER
com.apple.GPUTools
IgnoreInsertDebugCaptureBoundary
Ignoring insertDebugCaptureBoundary
v32@?0@8@"DYMTLCommandQueueInfo"16^c24
v32@?0@8@"DYMTLDeviceProfile"16^c24
resource-stream
Unsupported resource type: %u
bool DYIsCaptureTriggeredByCommandQueueInsertDebugCaptureBoundary(__strong id<MTLCommandQueue>)
gCaptureCommandQueue != nil
DYMTL_UI_SERVER_CAPTURE
v8@?0
Harvesting
isOpenGLQueue
DYResourceType _ValidateIncomingResource(uint32_t)
unsafeResourceType > 0 && unsafeResourceType < kDYMaxResourceTypes
void _GetDeviceAndResource(uint64_t, uint64_t, MTLDebugDevice *__autoreleasing *, __autoreleasing id *)
(uint64_t)[debugDevice originalObject] == deviceID
[debugDevice isKindOfClass:[MTLDebugDevice class]]
frame index
frame duration
timestamp
T@"MTLDepthStencilDescriptor",&,N,V_descriptor
isColorAttachment
Tc,N,V_isColorAttachment
basicTexture
T@"<MTLTexture>",&,N,V_basicTexture
CU<b>ulul@6ulululul
CU<b>ul@6ululul
C@6ululU<b>ulul
wasLoaded
Tc,N,V_wasLoaded
wasStored
Tc,N,V_wasStored
debugTexture
T@"<MTLTexture>",&,N,V_debugTexture
cache
T@"MTLOverrideCache",&,N,V_cache
v32@?0@"NSString"8@"MTLFunctionConstant"16^c24
Unable to create specialized function: %@
Unable to create function: %@
Unable to create pipeline: %@
Unable to create pipeline
Unable to create computePipelineState with function: %@
@"<MTLLibrary>"24@?0@"<MTLDevice>"8^@16
MTLCaptureComputeCommandEncoder
MTLCaptureBlitCommandEncoder
MTLCaptureDevice
MTLInsertOverridesLayerVisitor
MTLToolsVisitor
MTLCaptureRenderCommandEncoder
MTLOverrideBlitCommandEncoder
MTLOverrideCommandBuffer
MTLOverrideCommandQueue
MTLCaptureComputePipelineState
MTLInsertCaptureLayerVisitor
MTLOverrideRenderPipelineState
MTLCaptureCommandBuffer
MTLOverrideComputeCommandEncoder
MTLCaptureBuffer
MTLCaptureSamplerState
MTLRemoveSubLayerVisitor
MTLOverrideRenderCommandEncoder
MTLCaptureCommandQueue
MTLCaptureParallelRenderCommandEncoder
MTLCaptureFunction
MTLCaptureLibrary
DYMTLGuestAppClient
DYMTLMobileAppClient
MTLOverrideBuffer
MTLCaptureDepthStencilState
MTLOverrideCache
MTLOverrideTexture
MTLOverrideParallelRenderCommandEncoder
MTLCaptureTexture
MTLOverrideDevice
DYMTLDesktopAppClient
0 2A
0 2@
DYMTLResourceUpdater
MTLCaptureRenderPipelineState
v24@0:8@16
v16@0:8
v40@0:8r^v16Q24Q32
v40@0:8@16Q24Q32
v32@0:8Q16Q24
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v32@0:8@16Q24
v40@0:8r^@16{_NSRange=QQ}24
v40@0:8@16f24f28Q32
v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40
v64@0:8{?={?=QQQ}{?=QQQ}}16
v64@0:8{?=QQQ}16{?=QQQ}40
v56@0:8@16Q24{?=QQQ}32
@16@0:8
{CaptureHelper="_buffer"{DynamicBuffer="_data"{vector<unsigned char, std::__1::allocator<unsigned char> >="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >="__first_"*}}}"_urlBuffer"*"_urlBufferA"[41c]"_urlBufferB"[41c]"_fbuf"{Fbuf="bh"(?="buffer"^v"header"^{?})"_access_ptr"^v"_capacity"I}"_semaphore"^{dispatch_semaphore_s}}
{MTLHarvesterMarkerComputeResources="used"{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="base_"{__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="value"{vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >="__first_"^@}}"value"{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >="__first_"^@}}"value"{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >="__first_"^@}}"value"{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >="__first_"^@}}"value"{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >="__first_"^@}}"value"{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >="__first_"^@}}"value"{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >="__first_"^@}}"value"{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >="__first_"^@}}"value"{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >="__first_"^@}}}}"MTLBuffer"[31@"<MTLBuffer>"]"MTLTexture"[128@"<MTLTexture>"]"MTLBufferIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^Q}}"MTLTextureIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^Q}}}
v136@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112
v120@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96
v128@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96Q120
v120@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112
v128@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112Q120
v44@0:8@16{_NSRange=QQ}24C40
v56@0:8@16Q24@32Q40Q48
{MTLHarvesterMarkerBlitResources="used"{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="base_"{__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="value"{vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >="__first_"^@}}"value"{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >="__first_"^@}}"value"{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >="__first_"^@}}"value"{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >="__first_"^@}}"value"{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >="__first_"^@}}"value"{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >="__first_"^@}}"value"{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >="__first_"^@}}"value"{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >="__first_"^@}}"value"{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >="__first_"^@}}}}}
v20@0:8c16
@24@0:8Q16
@24@0:8@16
@40@0:8@16^{__IOSurface=}24Q32
@32@0:8^{dispatch_data_s=}16^@24
c24@0:8Q16
@40@0:8@16@24^@32
v40@0:8@16@24@?32
v32@0:8@16@?24
@32@0:8@16^@24
@48@0:8@16Q24^@32^@40
v40@0:8@16Q24@?32
@32@0:8Q16Q24
@40@0:8r^v16Q24Q32
@48@0:8^v16Q24Q32@?40
@40@0:8@16r^{?=BQ^{?}}24^@32
^{list<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, std::__1::allocator<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> > > >={__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>=^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *> > >=Q}}16@0:8
v24@0:8^{list<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, std::__1::allocator<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> > > >={__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>=^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *> > >=Q}}16
^{MTLHarvesterMarkerBlitData={MTLHarvesterDataStruct<MTLHarvesterBufferHarvestStruct>={vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}{vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}}{MTLHarvesterDataStruct<MTLHarvesterTextureHarvestStruct>={vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}{vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}}}16@0:8
v24@0:8^{MTLHarvesterMarkerBlitData={MTLHarvesterDataStruct<MTLHarvesterBufferHarvestStruct>={vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}{vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}}{MTLHarvesterDataStruct<MTLHarvesterTextureHarvestStruct>={vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}{vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}}}16
^{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}16@0:8
v24@0:8^{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}16
^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >=}16@0:8
v24@0:8^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >=}16
{MTLHarvesterUnusedResourcesInfo={MTLHarvesterResourcesInfo=QQQQQQQQQQQQ}{MTLHarvesterResourcesInfo=QQQQQQQQQQQQ}}16@0:8
v208@0:8{MTLHarvesterUnusedResourcesInfo={MTLHarvesterResourcesInfo=QQQQQQQQQQQQ}{MTLHarvesterResourcesInfo=QQQQQQQQQQQQ}}16
[64c]
^{list<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, std::__1::allocator<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> > > >={__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>=^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *> > >=Q}}
^{MTLHarvesterMarkerBlitData={MTLHarvesterDataStruct<MTLHarvesterBufferHarvestStruct>={vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}{vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}}{MTLHarvesterDataStruct<MTLHarvesterTextureHarvestStruct>={vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}{vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}}}
^{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}
^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >=}
@"<MTLDevice>"
{MTLHarvesterUnusedResourcesInfo="user"{MTLHarvesterResourcesInfo="bufferCount"Q"textureCount"Q"libraryCount"Q"functionCount"Q"renderPipelineStateCount"Q"computePipelineStateCount"Q"depthStencilStateCount"Q"samplerStateCount"Q"commandQueueCount"Q"heapCount"Q"fenceCount"Q"textureLayoutCount"Q}"internal"{MTLHarvesterResourcesInfo="bufferCount"Q"textureCount"Q"libraryCount"Q"functionCount"Q"renderPipelineStateCount"Q"computePipelineStateCount"Q"depthStencilStateCount"Q"samplerStateCount"Q"commandQueueCount"Q"heapCount"Q"fenceCount"Q"textureLayoutCount"Q}}
v24@0:8@"MTLToolsDevice"16
v24@0:8@"MTLToolsBuffer"16
v24@0:8@"MTLToolsDepthStencilState"16
v24@0:8@"MTLToolsTexture"16
v24@0:8@"MTLToolsSamplerState"16
v24@0:8@"MTLToolsCommandQueue"16
v24@0:8@"MTLToolsFunction"16
v24@0:8@"MTLToolsLibrary"16
v24@0:8@"MTLToolsCommandBuffer"16
v24@0:8@"MTLToolsRenderCommandEncoder"16
v24@0:8@"MTLToolsComputeCommandEncoder"16
v24@0:8@"MTLToolsBlitCommandEncoder"16
v24@0:8@"MTLToolsParallelRenderCommandEncoder"16
v24@0:8@"MTLToolsRenderPipelineState"16
v24@0:8@"MTLToolsComputePipelineState"16
@40@0:8#16@24@32
@"MTLOverrideDevice"
@"MTLOverrideBuffer"
@"MTLOverrideCommandQueue"
@"MTLOverrideCommandBuffer"
v64@0:8{?=dddddd}16
v24@0:8Q16
v28@0:8f16f20f24
v48@0:8{?=QQQQ}16
v32@0:8f16f20f24f28
v20@0:8I16
v24@0:8I16I20
v48@0:8Q16Q24Q32Q40
v40@0:8Q16Q24Q32
v64@0:8Q16Q24Q32@40Q48Q56
v56@0:8Q16Q24Q32@40Q48
v56@0:8Q16Q24Q32Q40Q48
v80@0:8Q16Q24Q32@40Q48Q56q64Q72
v40@0:8Q16@24Q32
v64@0:8Q16Q24@32Q40@48Q56
v20@0:8f16
v72@0:8Q16Q24Q32@40Q48Q56Q64
v56@0:8Q16@24Q32@40Q48
v88@0:8Q16Q24Q32@40Q48@56Q64Q72Q80
v72@0:8Q16@24Q32@40Q48@56Q64
{MTLHarvesterMarkerRenderResources="used"{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="base_"{__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="value"{vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >="__first_"^@}}"value"{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >="__first_"^@}}"value"{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >="__first_"^@}}"value"{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >="__first_"^@}}"value"{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >="__first_"^@}}"value"{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >="__first_"^@}}"value"{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >="__first_"^@}}"value"{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >="__first_"^@}}"value"{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >="__first_"^@}}}}"vertexMTLBuffer"[31@"<MTLBuffer>"]"vertexMTLTexture"[128@"<MTLTexture>"]"vertexMTLBufferIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^Q}}"vertexMTLTextureIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^Q}}"fragmentMTLBuffer"[31@"<MTLBuffer>"]"fragmentMTLTexture"[128@"<MTLTexture>"]"fragmentMTLBufferIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^Q}}"fragmentMTLTextureIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^Q}}}
v24@0:8@?16
v32@0:8@16d24
v20@0:8i16
c16@0:8
@"MTLComputePipelineDescriptor"
@"MTLComputePipelineReflection"
@"<MTLFunction>"
@"<MTLComputePipelineState>"
@"MTLCaptureDevice"
@"MTLCaptureBuffer"
@"MTLCaptureLibrary"
@"MTLCaptureCommandQueue"
@"MTLCaptureCommandBuffer"
@"NSMutableDictionary"
@"MTLRenderPipelineDescriptor"
@"MTLRenderPipelineReflection"
v24@0:8r^{MTLHarvesterMarkerBlitResources={tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}}16
v24@0:8r^{MTLHarvesterMarkerRenderResources={tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}[31@][128@]{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}[31@][128@]{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}}16
v24@0:8r^{MTLHarvesterMarkerComputeResources={tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}[31@][128@]{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}}16
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >="base_"{__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8>, std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >="value"{set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >="__tree_"{__tree<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLBuffer>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLBuffer> > >="__first_"Q}}}"value"{set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >="__tree_"{__tree<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLTexture>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLTexture> > >="__first_"Q}}}"value"{set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >="__tree_"{__tree<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLLibrary>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLLibrary> > >="__first_"Q}}}"value"{set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >="__tree_"{__tree<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFunction>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLFunction> > >="__first_"Q}}}"value"{set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >="__tree_"{__tree<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLRenderPipelineState>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLRenderPipelineState> > >="__first_"Q}}}"value"{set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >="__tree_"{__tree<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLComputePipelineState>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLComputePipelineState> > >="__first_"Q}}}"value"{set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >="__tree_"{__tree<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLDepthStencilState>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLDepthStencilState> > >="__first_"Q}}}"value"{set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >="__tree_"{__tree<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSamplerState>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLSamplerState> > >="__first_"Q}}}"value"{set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >="__tree_"{__tree<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLCommandQueue>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLCommandQueue> > >="__first_"Q}}}}}
@40@0:8@16Q24Q32
v40@0:8@16{_NSRange=QQ}24
Q24@0:8Q16
v32@0:8{_NSRange=QQ}16
^v16@0:8
@"<MTLBuffer>"
@"MTLSamplerDescriptor"
{?=dddddd}16@0:8
{?="originX"d"originY"d"width"d"height"d"znear"d"zfar"d}
@"MTLOverrideRenderPipelineState"
{bitset<128>="__first_"[2Q]}
v24@0:8r^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8>, std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >={__tree<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLBuffer> > >=Q}}}{set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >={__tree<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLTexture>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLTexture> > >=Q}}}{set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >={__tree<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLLibrary>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLLibrary> > >=Q}}}{set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >={__tree<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFunction>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFunction> > >=Q}}}{set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >={__tree<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLRenderPipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLRenderPipelineState> > >=Q}}}{set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >={__tree<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLComputePipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLComputePipelineState> > >=Q}}}{set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >={__tree<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLDepthStencilState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLDepthStencilState> > >=Q}}}{set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >={__tree<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSamplerState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSamplerState> > >=Q}}}{set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >={__tree<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLCommandQueue>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLCommandQueue> > >=Q}}}}}16
^{list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >={__list_node_base<MTLHarvesterCommandStream, void *>=^{__list_node_base<MTLHarvesterCommandStream, void *>}^{__list_node_base<MTLHarvesterCommandStream, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<MTLHarvesterCommandStream, void *> > >=Q}}16@0:8
v24@0:8^{list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >={__list_node_base<MTLHarvesterCommandStream, void *>=^{__list_node_base<MTLHarvesterCommandStream, void *>}^{__list_node_base<MTLHarvesterCommandStream, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<MTLHarvesterCommandStream, void *> > >=Q}}16
^{list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >={__list_node_base<MTLHarvesterCommandStream, void *>=^{__list_node_base<MTLHarvesterCommandStream, void *>}^{__list_node_base<MTLHarvesterCommandStream, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<MTLHarvesterCommandStream, void *> > >=Q}}
@"<MTLCommandQueue>"
@"<MTLLibrary>"
v40@0:8@16@24@32
@"NSString"
@"MTLDepthStencilDescriptor"
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"
@"MTLOverrideCache"
@32@0:8@16@24
c40@0:8@16@24@?32
c48@0:8@16@24@32@40
c52@0:8@16@24c32@36@44
