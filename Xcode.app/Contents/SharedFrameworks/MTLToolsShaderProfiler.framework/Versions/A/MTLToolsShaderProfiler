MbP?
St11logic_error
St9exception
L>St8bad_cast
St12length_error
init
initWithCoder:
decodeInt64ForKey:
encodeWithCoder:
encodeInt64:forKey:
supportsSecureCoding
initWithLibraryId:
libraryId
setLibraryId:
_libraryId
TQ,N,V_libraryId
arrayWithCapacity:
dictionaryWithCapacity:
allocWithZone:
copy
setWithObjects:
decodeObjectOfClasses:forKey:
decodeObjectOfClass:forKey:
encodeObject:forKey:
objectForKeyedSubscript:
doubleValue
numberWithDouble:
setObject:forKeyedSubscript:
enumerateKeysAndObjectsUsingBlock:
encoderTimeData
count
objectAtIndexedSubscript:
countByEnumeratingWithState:objects:count:
calculateRealTimeInfoWithGPUTime:
setGpuTime:
drawCallInfoList
programInfo
programId
encoderIndex
timing
isComputeDispatchCall
vertexTiming
fragmentTiming
commandType
computeTiming
blitTimeData
gpuTime
programInfoList
programPipelineInfoList
valid
vertexShaderInfo
fragmentShaderInfo
computeProgramInfo
drawCallInfoIndices
unsignedIntegerValue
objectForKey:
analyzerResult
drawCallPerLineCost
drawCallIndex
numberWithUnsignedInt:
perFileCost
_addPerLineCost:to:
functionIndex
type
unsignedIntValue
_dividePerLineCost:by:
dictionaryWithObjectsAndKeys:
derivedCountersData
stringByStandardizingPath
pathExtension
length
stringWithFormat:
defaultManager
fileExistsAtPath:
componentsJoinedByString:
stringWithString:
appendString:
writeToFile:atomically:encoding:error:
copyWithZone:
perLineInfoForFunctionFilePath:withLibraryIdSet:atFunctionIndex:
exportDerivedCounterDataAtPath:renameWhenConflict:
encoderCount
setEncoderCount:
encoderTilerParamBufBytesUsedArray
setEncoderTilerParamBufBytesUsedArray:
parameterBufferMaxSize
setParameterBufferMaxSize:
parameterBufferMaxSizeEverMemless
setParameterBufferMaxSizeEverMemless:
parameterBufferMaxSizeNeverMemless
setParameterBufferMaxSizeNeverMemless:
parameterBufferPercentFullDict
setParameterBufferPercentFullDict:
softwareCounterInfo
setSoftwareCounterInfo:
perRingPerFrameLimiterData
setPerRingPerFrameLimiterData:
shaderProfilingFrameTimes
setShaderProfilingFrameTimes:
blitEncoderTimeInfo
setBlitEncoderTimeInfo:
shaderProfilingTime
setShaderProfilingTime:
.cxx_destruct
_encoderCount
_encoderTilerParamBufBytesUsedArray
_parameterBufferMaxSize
_parameterBufferMaxSizeEverMemless
_parameterBufferMaxSizeNeverMemless
_parameterBufferPercentFullDict
_softwareCounterInfo
_perRingPerFrameLimiterData
_shaderProfilingFrameTimes
_blitEncoderTimeInfo
_shaderProfilingTime
T@"NSMutableArray",&,N,V_shaderProfilingFrameTimes
T@"NSMutableDictionary",&,N,V_blitEncoderTimeInfo
Td,N,V_shaderProfilingTime
TI,N,V_encoderCount
T@"NSArray",&,N,V_encoderTilerParamBufBytesUsedArray
T@"NSNumber",&,N,V_parameterBufferMaxSize
T@"NSNumber",&,N,V_parameterBufferMaxSizeEverMemless
T@"NSNumber",&,N,V_parameterBufferMaxSizeNeverMemless
T@"NSDictionary",&,N,V_parameterBufferPercentFullDict
T@"NSDictionary",&,N,V_softwareCounterInfo
T@"NSMutableDictionary",&,N,V_perRingPerFrameLimiterData
initWithDelegate:
unsignedLongLongValue
arrayWithObjects:count:
addObject:
arrayWithObject:
numberWithUnsignedLongLong:
firstObject
isEqualToString:
setObject:atIndexedSubscript:
arrayWithArray:
supportsBatchIdFiltering
gtHasOverloadedBatchIdFilteredCountersData
_collectBatchFilteredDataForShaderProfilerResultOverrideGT:
collectBatchFilteredDataForShaderProfilerResultGT:
effectivePerEncoderDrawKickTimes
initWithCapacity:
setDerivedCountersData:
mutableCopy
mergeLegacyAndNewShadersInShaderInfoDictionary:
setCommandBufferCount:
setPerCommandBufferEncoderCount:
setEncoderIndexToLabelMap:
source
setupForAnalysis
setBinary:
setType:
setDylib:
_visitAllShaderInfosInResult:usingBlock:
isForInternalTool
_gatherStaticInformation
setProfiledState:
boolValue
setConsistentStateAchieved:
setXpState:
_processEncoderTimeData:withKickTimeData:forPayload:withGPUTime:
setEncoderTimeData:
errorWithDomain:code:userInfo:
setError:
setResult:
supportsDerivedCounters
wantsDerivedCounters
_queryDerivedCounterDataWithDelegate:withShaderInfoResult:forPayload:withShaderProfilerResult:
calculateFrameTime:result:
calculateUtilizations:result:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_preProcessUSCSampleData:result:targetIndex:
result
_setupFragmentEncoderCountersPerDrawCall:
_setupLimiterInfoPerDrawCall:forPayload:
binary
uscSamples
extractShaderBinaryTextSegment:
analyzeBinary:uscSamples:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
disassembleBinary:
setAnalyzerResult:
setDisassembly:
setBlitTimeData:
setVertexCount:
setFragmentCount:
drawCallCost
vertexCount
fragmentCount
instanceCount
setInstanceCount:
setVertexCountPercentage:
setFragmentCountPercentage:
setInstanceCountPercentage:
isDisassemblerAvailable
standardUserDefaults
boolForKey:
removeTemporaryDirectory
shaderSourceForProgramInfo:atFunctionIndex:
_dumpTraceProfileDataForResult:
sortedArrayUsingComparator:
programIndex
computeProgramId
UTF8String
calculateEncoderProgramInfo
encoderProgramInfoList
dictionaryWithObjects:forKeys:count:
future
_constructPayload
queryShaderInfoWithPayload:
waitUntilResolved
computeFromFrameInfoResult:forFuture:
notifyOnQueue:handler:
futureWithResult:error:
derivedCounterInfo:
deviceInfo
platform
supportsImmediateModeDrawCounters
captureArchive
encoderInfoList
indexOfObject:
profiledState
consistentStateAchieved
_shouldUseProgramAddressMappings:
_preProcessStreamingUSCSampleData:result:withAddressMappings:sampleData:frameIndex:ringBufferIdx:targetIndex:
_preProcessStreamingUSCSampleData:result:withAddressData:sampleData:frameIndex:ringBufferIdx:targetIndex:
bytes
evaluateStreamingSamples:withUSCSampleNum:withProgramAddressLUT:targetIndex:forRingBufferIndex:withMinEncoderIndex:withMaxEncoderIndex:withEncoderIdToEncoderIndexMap:withProfilingData:
_getLegacyProgramType:
analyzedBinary:processedUscSamples:targetIndex:withKey:withShaderSourcePath:withALUBlocks:
blockOperationWithBlock:
addOperation:
waitUntilAllOperationsAreFinished
loadActionTimes
storeActionTimes
effectiveKickTimes
averagePerDrawKickDurations
setWithCapacity:
containsObject:
setEffectivePerEncoderDrawKickTimes:
setArray:
setDerivedCounterNames:
dataWithCapacity:
appendBytes:length:
setDerivedCounters:
setEncoderInfos:
setTimeBaseNumerator:
setTimeBaseDenominator:
setDerivedEncoderCounterInfo:
aggregatedGPUTimelineInfo
setTimestamps:
timestamps
setNumPeriodicSamples:
mGPUTimelineInfos
derivedCounterNames
dataWithLength:
setEncoderTimelineInfos:
encoderTimelineInfos
numPeriodicSamples
setPerRingSampledDerivedCounters:
setCoreCounts:
activeShadersPerPeriodicSample
numActiveShadersPerPeriodicSample
dataWithBytes:length:
setNumActiveShadersPerPeriodicSample:
setActiveShadersPerPeriodicSample:
setActiveCoreInfoMasksPerPeriodicSample:
setRestoreTimestamps:
setCoalescedEncoderInfo:
coalescedEncoderInfo
mGPUTimelineInfoAtIndex:
_updateShaderTimelineInfo:withShaderTimelineDataEx:forGPUTimelineInfo:withEncoderGlobalTraceIdToStateMirrorIdMapping:forRingBuffer:
encoderFunctionIndex
pipelineStateId
_calculatePerSampleActiveShaders:withShaderProfilerResult:forWorkloadInfo:
_preProcessStreamingUSCSampleData:result:
_calculatePerSampleAggregatedActiveShaders:withShaderProfilerResult:forWorkloadInfo:
dictionaryWithDictionary:
numberWithBool:
_processHarvestedBinaryData:forStreamedData:
setDictionary:
adjustHWBiasAndFinalizeResult
_addBlitTimesToEffectiveKickTimes:
_processFrameTimeData:forProcessedFrameTimeData:
setupDataForEvaluatingStreamingSamples:forRingBufferCount:forTargetIndex:
_addDerivedCounterDataToTimelineInfo:usingShaderProfilerResult:forWorkloadInfo:
_processDerivedEncoderCounterData:forDerivedEncoderData:
gtTestNewShaderProfiler
stringWithUTF8String:
gtProcessGPUTimelineData:
gtProcessShaderProfilerData:
notifyStreamingShaderProfilingDataOnQueue:handler:
queryGPUTimelineDataWithPayload:
timeoutAfter:label:
error
gtSetupStreamDataProcessor:
gtWaitGPUTimelineData
gtVerifyTimelineData:
_analyzeShaderBinarySamplesForResult:forShaderKeyToSourcePath:
_calculatePerDrawCosts:
gtWaitShaderProfilerData
gtVerifyShaderProfilerResult:
computeFromShaderInfoResult:forPayload:forFuture:
gtHasOverloadedShaderProfilerData
gtUseNewShaderProfiler
_queryStreamingProfilerDataOverrideGT:forDelegate:forFuture:forGPUTimelineFuture:
_queryStreamingProfilerDataOverride:forDelegate:forFuture:forGPUTimelineFuture:
_queryStreamingProfilerDataGT:forDelegate:forFuture:forGPUTimelineFuture:
_queryStreamingProfilerData:forDelegate:forFuture:forGPUTimelineFuture:
metalPluginForPlatform:
shaderProfiler
dumpInstructions
shaderProfilerGPUDesktopReplayer
shaderProfilerDyson
setSupportsImmediateModeDrawCounters:
setName:
setMaxConcurrentOperationCount:
constructPayloadFromArchive:
gatherStatisticsFromArchive:
_saveAddressList:size:filename:
generateTargetSamplesForResult:withProgramAddressLUT:withBatchIndexMin:withProgramAddressList:withUSCSampleBuffer:withUSCSampleNum:withBatchIDToEncoderIndex:andEncoderIndexToBatchIdMap:targetIndex:
_generateSamplesForResult:withProgramAddressLUT:withBatchIndexMin:andBatchIndexMax:andMinIndex:withProgramAddressList:withUSCSampleList:withUSCSampleNum:withBatchIDToEncoderIndex:andEncoderIndexToBatchIdMap:
setUscSamples:
gtProcessedTimelineResult
gtProcessedShaderProfilerResult
gtSetupForBatchIDFilteringCounters:
_preparePrioritizedPerEncoderDrawListFromShaderProfilerResult:andGetMaxDrawsPerEncoder:andGetEncoderBatchIndexToDrawIndexMap:andGetDrawCallIndexToEncoderBatchIndexMap:
superclass
bundleForClass:
pathForResource:ofType:
dictionaryWithContentsOfFile:
removeObjectForKey:
numberWithUnsignedInteger:
delegate
drawCallInfoWithFunctionIndex:subCommandIndex:
notifyCounterGraphItemChangedOnQueue:handler:
gtProcessBatchIDFilteringData:
gtProessStoredBatchIdFilteredCountersData
gtEnumerateUnarchivedGPUTimelineData:
gtEnumerateUnarchivedShaderProfilerData:
newShaderProfilerWithDelegate:
initializeShaderAnalyzer
enumerateFragmentShadersForResult:andShaderInfoDictionary:usingBlock:
handleCaptureSessionTearDown
_updateDrawCallTimingCounters:forShaderProfilerResult:withDrawCallData:withBottleNeckAnalysisDrawCallsData:withCounterIndices:
collectBatchFilteredDataForShaderProfilerResult:
_effectiveBatchDrawKickTimes:forShaderProfilerResult:
_createPerCounterCommandData:withPerCommandData:
profileFrameAtConsistentState:
_showDrawCallDataforResult:
_saveSampleDataFromGPURawCounters:size:filename:withTimeStamps:
profileShader:afterGPUTimelineGather:atConsistentState:
_saveAddressMappings:filename:
_platformShaderProfiler
_useEncoderDataForCounters
_sessionIsInvalid
_metalPluginName
_derivedCounterInfoResult
_payload
_shaderInfoResult
_parallelQueue
_hasValidShaderProfilerInfo
_mtlShaderAnalyzer
shaderAnalyzer
shaderAnalyzerDyson
_calculatePerLineCostWithSampleData:binary:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
_calculatePerDrawCallCostWithSampleData:targetIndex:
_calculatePerLineCostWithSampleData:binary:targetIndex:withKey:withShaderSourcePath:withALUBlocks:
_calculatePerDrawCallWithGRCSampleData:targetIndex:
setTotalCost:
setDrawCallCost:
characterSetWithCharactersInString:
invertedSet
lastPathComponent
stringByDeletingPathExtension
componentsSeparatedByCharactersInSet:
numberWithInt:
dataWithJSONObject:options:error:
initWithData:encoding:
setPerFileCost:
_createPerFileCostDictionaryWith:lineOffset:
allValues
setTotalPerLineCost:
setDrawCallPerLineCost:
setSourcePath:
setLineIndex:
setBinaryRangeInfo:
setDisassembledLineInfo:
setOffset:
setDisasmSource:
setIrSource:
setCost:
setCostPercentage:
setOpcodeType:
setOpcodeSubType:
setOpcode:
disassembledLineInfo
setCallStackInfo:
setFunction:
setFile:
setDirectory:
callStackInfo
binaryRangeInfo
setBinaryDisassemblyInfo:
setSourceInfo:
_getDebugInfoForBinary:withTextSegment:forTargetIndex:forKey:
_getAddressAndLineTableForDebugInfo:
_ProcessLineList:forFileCostMap:forDebugInfo:andCost:forAddr:andDrawIndex:andTargetIndex:withDefaultDisassemblyInfo:withALUInstructionType:
addDependency:
waitUntilFinished
_processPerLineCostDataForLineTable:withFileCost:withDebugInfo:andAllDrawCost:withKey:withShaderSourcePath:withDrawCost:
_waitLatencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:forLimiterType:
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
dictionary
_createPerLineCostDictionaryWith:lineOffset:
supportRendererType:
analyzedBinary:processedUscSamples:targetIndex:withKey:withShaderSourcePath:
platformShaderAnalyzer
.cxx_construct
_platformShaderAnalyzer
_isForInternalTool
_mutex
dataWithData:
writeToURL:atomically:
path
setupShaderInstructionInfoForBinary:forTargetIndex:
shaderInstructionInfoWithStartOffset:endOffset:
shaderInstructionInfoFromBinary:withStartOffset:forLength:targetIndex:
diassemblyString
irString
cost
opCodeType
opCodeSubType
opCode
offset
fileExistsAtPath:isDirectory:
removeItemAtURL:error:
unarchivedObjectOfClasses:fromData:error:
mutableBytes
containsString:
addObjectsFromArray:
stringByAppendingFormat:
context
createArrayRef:
JSGlobalContextRef
setValues:
callFunction:withArguments:
getValue:
toArray
arrayByAddingObjectsFromArray:
string
allKeys
appendFormat:
stringByAppendingString:
evaluteScript:scriptURL:
_grcFrameData
removeObject:
lastObject
enumerateObjectsUsingBlock:
cancelAllOperations
setLength:
increaseLengthBy:
maxConcurrentOperationCount
setRawArrayValues:withUint64Values:andNumCounters:
setRawArrayValues:withUint32Values:andNumCounters:
numberWithUnsignedLong:
evaluateScriptCode:
prepareCounterNames:softwareCounterNames:derivedCounterNames:
exportCounterValues:
prepareCounterValues:softwareCounterValues:
evaluateDerivedCounters
getTraceDataForFunctionIndexArray:forCaptureArchive:
mainBundle
bundlePath
stringByDeletingLastPathComponent
stringByAppendingPathComponent:
unsignedLongValue
stringValue
libraryId
encoderTilerParamBufBytesUsedArray
parameterBufferMaxSize
parameterBufferMaxSizeEverMemless
parameterBufferMaxSizeNeverMemless
v32@?0@8@16^c24
fragment
vertex
tile
fragment-dynamic-libraries
vertex-dynamic-libraries
tile-dynamic-libraries
compute
compute-dynamic-libraries
perLineCost
perDrawCall
perLineCostTotal
perLineCostVertex
perLineCostFragment
perLineCostComputeKernel
perLineCostCurrentDraw
perBinaryCost
perBinaryType
%@_%lu.csv
Index,FunctionIndex,CommandBuffer,Encoder,Marker,%@
%lu,%@,%@
vertex shader info
fragment shader info
compute kernel info
mutiple binary info
activePerEncoderDrawCallCount
perEncoderKickCount
VertexTPULimiter
VertexALULimiter
VertexGlobalLoadLimiter
VertexGlobalStoreLimiter
VertexPBELimiter
VertexSampleLimiter
VertexLocalLoadLimiter
VertexLocalStoreLimiter
FragmentTPULimiter
FragmentALULimiter
FragmentGlobalLoadLimiter
FragmentGlobalStoreLimiter
FragmentPBELimiter
FragmentSampleLimiter
FragmentLocalLoadLimiter
FragmentLocalStoreLimiter
TPULimiter
ALULimiter
GlobalLoadLimiter
GlobalStoreLimiter
PBELimiter
SampleLimiter
LocalLoadLimiter
LocalStoreLimiter
BufferLoadLimiter
BufferStoreLimiter
VertexBufferLoadLimiter
VertexBufferStoreLimiter
FragmentBufferLoadLimiter
FragmentBufferStoreLimiter
GlobalLoad
GlobalStore
Sample
LocalLoad
LocalStore
FSSamplerStall
ShaderCoreFragmentUtilization
FSTextureCacheMissRate
FragmentShaderBusy
FragmentPipelinePercent
PixelWriteStallPercent
GPU Time
DerivedCounterInfo
vertex shader key
fragment shader key
compute kernel key
draw call info
mutiple binary keys
type
draw call %lu, replacing key %@ with %@, type %@
draw call %lu, ignoring key %@, type %@
perCommandBufferEncoderCount
encoderIndexToLabel
binary
dylib
v28@?0@"NSString"8@"NSMutableDictionary"16I24
rm -rf /tmp/com.apple.gputools.profiling/shaderProfilerResults
mkdir /tmp/com.apple.gputools.profiling/shaderProfilerResults
mkdir /tmp/com.apple.gputools.profiling/shaderProfilerResults/json
encoder time data
kick time data
MetalPluginName
Frame Consistent Perf Info
level
enabled
consistent
gputime
consistent time
tilerParamBufBytesUsedArray
frametime
performance statistics
ParameterBufferMaxSize
ParameterBufferMaxSizeEverMemless
ParameterBufferMaxSizeNeverMemless
/tmp/com.apple.gputools.profiling
disassembly is unavailable
PerDrawNsecTimes
blitEncoderIndices
GPUShaderProfilerExportShaderInfo
/tmp/com.apple.gputools.profiling/shaderProfilerResults/ProgramPipelineCosts.txt
q24@?0@"DYShaderProfilerProgramInfo"8@"DYShaderProfilerProgramInfo"16
ProgramIndex
ProgramId
[%u] PipelineState 0x%llX
Vertex(0x%s)[%.4f%%]
Fragment(0x%s)[%.4f%%]
VS_Hash
VS_Percent
FS_Hash
FS_Percent
[%u] PipelineState 0x%llX
Compute(0x%s)[%.4f%%]
CS_Hash
CS_Percent
index
functionIndex
Compute
Vert
Fragment
q24@?0@"NSNumber"8@"NSNumber"16
DrawCallsSorted
Index
FunctionIndex
%.2f%%
%.4f%%
%.4f%%
/tmp/com.apple.gputools.profiling/shaderProfilerResults/DrawCallCosts.txt
index
functionIndex
Vert
    Fragment
Compute
VS_Hash
FS_Hash
CS_HASH
NumSamples
%10.4f%%
%10.4f%%
%10.4f%%
/tmp/com.apple.gputools.profiling/shaderProfilerResults/DrawCallCosts_Sorted.txt
index
functionIndex
Vert
    Fragment
Compute
VS_Hash
FS_Hash
CS_HASH
%10.4f%%
%10.4f%%
%10.4f%%
q24@?0@"NSMutableDictionary"8@"NSMutableDictionary"16
Cost
/tmp/com.apple.gputools.profiling/shaderProfilerResults/PerEncoderPipelineCosts.txt
SortedPipelines
Encoder %u
AbsoluteCost
Pipeline %llu
PipelineState 0x%llX = [%.4f%%]
PipelineId
DrawCalls
index
functionIndex
PercentageCost
frameProfile
frame counters
frame profile data
Frame Profiler
Frame profiler failed due to an internal error.
MTLStat_nSec
MTLStatVertices
frameGPUTime
GPUState
Frame profiler failed to get data from the device.
v8@?0
Total Samples = %g
index
functionIndex
vertTiming
vertCyclePercentragTiming
fragmentCyclePercent
%6u : encoderId:%u limiterIdx:%u (TS: %llu) nTracePackets:%u)
%6u : 0x%0.8llx 0x%0.8llx
GPUToolsAvoidProgramAddressMappings
usc sampling address data
usc sampling sample data
frame index
ring buffer
usc sampling address mappings
encID
drawCallIndex
mappedAddress
mappedSize
binaryUniqueId
encIndex
Blit Encoder Kick Times Nsec
Blit Encoder Indices
GPU Encoder Info
aggregated derived counters
sampled timestamps
aggregated timeline data
aggregated timeline data ex
ring buffer sampled counter data
core counts
ring buffer blend factors
Restore Timestamps
coalesced encoder mapping
v32@?0@"NSNumber"8@"NSArray"16^c24
limiter data
limiter time stamps
limiter counter list
shader timeline data
shader timeline data ex
Havested Binaries
Finalize Shader Profiler Result
Kick Time Data
Encoder Load Action Times
Encoder Store Action Times
Shader Profiling Frame Time
Frame Time Data
Num Ring Buffers
Blit Command Nsec Times
derivedCounterData
@"NSDictionary"16@?0@"NSDictionary"8
gputools.%@.%p
End Streaming Data
v16@?0@"NSDictionary"8
QueryShaderInfoWithPayload
rm -rf /tmp/com.apple.gputools.profiling/gpuTimelineResults
mkdir /tmp/com.apple.gputools.profiling/gpuTimelineResults
Streaming GPU Timeline Data
Streaming Shader Profiling Data
UseKicktimestamps
UseMTLCounters
CoalesceComputeEncoders
CoalesceBlitEncoders
GPUDebugger.CounterGraph.UseEncoderDataForCounters
gputools.GPUToolsDebugger.DYPMTLShaderProfiler.ParallelQueue
/tmp/com.apple.gputools.profiling/shaderProfilerResults/uscSamplingAddressProcessed.txt
Index : ProgramType BatchIdx FunctionIdx [Start - End]
%6u : %2u %6u %6u [0x%0.8llx - 0x%0.8llx]
Encoder  Index [  Start -  End   ]  BinaryUniqueID  EncIdx Index Type
index
%08x %5d [%08llx-%08llx] %016llx %6d %5d %3d %s
GPUCounterGraph
plist
counters
batchfiltered
vendorCounters
v32@?0@"NSString"8@"NSDictionary"16^c24
GPUTime
v32@?0@"NSString"8@16^c24
encoderBatchPriorityList
maxDrawsInAnyEncoder
collectInBackground
pause
derivedCounterInfo
SubcommandIndex
highPriorityBatches
HighPriorityBatchInfo
Batch Filtering Started
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
gputools.GPUToolsDebugger.GPUToolsPlatform.ShaderProfiler.ParallelQueue
v32@?0@8@"NSNumber"16^c24
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
/tmp/com.apple.gputools.profiling/shaderProfilerResults/shader_cost_%s_%s.txt
SourceFiles
LineData
source
line
cost
percent
%u: %s      %.1f %.2f%%
%u: %s
ShaderRangeInfo
lineIndex
function
filename
fullpath
directory
      -----> %u:  %s : %s
callstackInfos
diassembly
offset
disasm
    %d %s %u %.1f %.2f%%
    %d %s
----------- Full Binary Disassembly -----------
disasmSource
irSource
costPercentage
opcodeType
opcodeSubType
opcode
    %d %s [%u %u] %.1f %.2f%%
    %d %s [%u %u]
binaryDisassemblyInfo
/tmp/com.apple.gputools.profiling/shaderProfilerResults/json/shader_cost_%s_%s.json
allDrawCall
/program_source
Offset
totalCost
16777235-0
::air.vertexFetchFunction()
TraceId to SampleIndex
Frame Encoder Times Data
Encoder TraceId Data
Sample Marker
Blit TraceId to Sample Index
Blit Encoder Time Data
Blit Split TraceId to Sample Index
Blit Split Encoder Time Data
Blit Encoder Frame Data
Blit Encoder Info
Blit Split Encoder Frame Data
Blit Split Encoder Info
Encoder Draw Call Count
Blit Encoder Nsec Times
Blit Command Kick Times Nsec
passList
DerivedCounterDictionary
DerivedCounters
subtype
Normalize
_encoderRawData
_encoderTileInfos
_encoderKickTimes
DerivedCounterConfigurationVariables
_SetAndEvaluateRawCounterValues
_DerivedCounterResult
_RawCounterValues
AverageSamples
derivedCounterDataForBottleneckAnalysis
DerivedCounterAnalysis
DerivedCounterAnalysisFunctions
BatchInfos
name
description
num_cores
MTLStatTotalGPUCycles
_vtx
_frg
_cmp
var %@%@ = 0;
var %@_norm%@ = 0;
var core_count = num_cores;
var TileWidth  = 0;
var TileHeight = 0;
var _DerivedCounterResult = [];
var _RawCounterValues = [];
function _SetAndEvaluateRawCounterValues() {
for (var encoderIdx = 0; encoderIdx < _encoderRawData.length; encoderIdx++) {
TileWidth = _encoderTileInfos[encoderIdx][0];
TileHeight = _encoderTileInfos[encoderIdx][1];
_DerivedCounterResult[encoderIdx] = []
_RawCounterValues[encoderIdx] = []
%@%@ = _encoderRawData[encoderIdx][%u][%u][%u];
_RawCounterValues[encoderIdx].push(%@%@);
%@%@ = _encoderKickTimes[encoderIdx][%u];
_RawCounterValues[encoderIdx].push(%@%@);
%@%@
%@_norm%@ = 100.0 * %@ * (%@%@ / Math.max(_encoderRawData[encoderIdx][%u][%u][%u], 1));
_RawCounterValues[encoderIdx].push(%@_norm%@);
%@_norm%@
%@ = %@%@ + %@%@ + %@%@;
_RawCounterValues[encoderIdx].push(%@);
%@_norm = 100.0 * %@ * (%@ / Math.max(_encoderRawData[encoderIdx][0][%u][%u] + _encoderRawData[encoderIdx][1][%u][%u] + _encoderRawData[encoderIdx][2][%u][%u], 1.0));
_RawCounterValues[encoderIdx].push(%@_norm);
_norm
try { value = %@(); if (!isFinite(value) || isNaN(value) || (value < 0)) { value = 0; } _DerivedCounterResult[encoderIdx].push(value); } catch(err) { ErrorLog(err); _DerivedCounterResult[encoderIdx].push(0); }
v16@?0@"NSString"8
ErrorLog
DerivedCounterScript
Timebase
Post Processing Frame Marker
profileCounters
Frame Index
Source Sample Marker
ShaderProfilerData
Derived Counter Sample Data
Kick Times
Batch Filtered Counters
End Batch ID Streaming Data
Program Address Buffer
Program Address Mappings
Command Buffer Timestamps
PState Info Data
mapping
TraceId to BatchId
v32@?0@"NSNumber"8@"NSNumber"16^c24
TraceId to Coalesced BatchId
v32@?0@"NSArray"8Q16^c24
GPU Stats
Frame Encoder Time Data
EncoderTime
RingBufferIndex
Source
Subdivided Dictionary
Encoder Infos
Encoder Tile Info
Counter Info
Derived Counters Info Data
Num Encoders
Fragment Counter
Encoder Time Sample Data
Encoder Sample Index Data
limiter sample counters
var %@ = 0;
var %@_norm = 0;
var core_count = num_cores;
var MTLStat_nSec = 0;
function _SetAndEvaluateRawCounterValues(numSamples, gpuCyclesCounterIndex, ringBufferIndex) {
num_cores = _CoreCount[ringBufferIndex];
_DerivedCounterResult = [];
for (var sampleIndex = 0; sampleIndex < numSamples; ++sampleIndex) {
var sampleStartIndex = sampleIndex * %lu;
var gpuCycles = _RawCounterValues[gpuCyclesCounterIndex + sampleStartIndex] / num_cores;
MTLStat_nSec = (_RawTimestampDelta[sampleIndex]) * %u / %u;
%@ = _RawCounterValues[%lu + sampleStartIndex];
%@_norm = 100.0 * (_RawCounterValues[%lu + sampleStartIndex] / gpuCycles);
try { value = %@(); if (!isFinite(value)) { value = 0; } _DerivedCounterResult.push(value); } catch(err) { ErrorLog(err); _DerivedCounterResult.push(0); }
core_mask_list
gputools.MTLShaderProfiler.GRCPerFrameDataparallelQueue
_RawTimestampDelta
_CoreCount
usc sample count
usc sample data thread offsets
Bandwidth
gputools.MTLShaderProfiler.parallelQueue
groups
Resources/GPUCounterGraph.plist
%@ (%@)
unit
Encoder Index
CommandBuffer
Encoder
Marker
%d %d %d
%lu,%d,
DYMTLShaderProfilerShaderInfo
DYMTLShaderProfilerResult
DYMTLShaderProfiler
1D!1
DYShaderAnalyzerNextGPU
GRCPerFrameDataClass
c16@0:8
@24@0:8Q16
@24@0:8@16
v24@0:8@16
Q16@0:8
v24@0:8Q16
@16@0:8
@24@0:8^{_NSZone=}16
v32@0:8@16@24
v32@0:8@16d24
v24@0:8d16
@36@0:8@16^v24I32
@28@0:8@16c24
I16@0:8
v20@0:8I16
d16@0:8
v16@0:8
@"NSArray"
@"NSNumber"
@"NSDictionary"
@"NSMutableDictionary"
@"NSMutableArray"
v32@0:8@16@?24
v40@0:8@16@24@?32
@48@0:8@16@24@32Q40
@32@0:8@16@24
@48@0:8@16^Q24^v32^v40
@52@0:8I16@20@28@36r^{CounterIndexInfo=QQQQQ}44
@40@0:8@16@24@32
@20@0:8I16
@48@0:8@16@24@32@40
v44@0:8^Q16I24r*28^Q36
c24@0:8@16
I24@0:8@16
v60@0:8@16@24@32@40I48I52i56
v40@0:8@16@24@32
v52@0:8@16@24@32^v40I48
B48@0:8@16@24@32@40
@36@0:8@16@24I32
v36@0:8@16@24i32
v80@0:8@16^v24I32I36I40^{DYMTLShaderProfilerProgramAddress=(?={?=b8b24I}{?=b8b24I})(?={?=QQ}{?=Qb8b24I})}44^{DYMTLShaderProfilerUSCSample=I(?={?=(?=II)I}{?=II})}52I60^v64^v72
v36@0:8^{DYMTLShaderProfilerProgramAddress=(?={?=b8b24I}{?=b8b24I})(?={?=QQ}{?=Qb8b24I})}16I24r*28
v32@0:8@16r*24
@"<DYPShaderProfiler>"
{atomic<bool>="__a_"{__cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>>="__a_value"AB}}
@"NSString"
@"NSOperationQueue"
@"DYShaderAnalyzerNextGPU"
c20@0:8i16
@72@0:8@16@24i32@36@44@52I60@64
@60@0:8@16@24i32@36@44r^v52
@52@0:8@16@24i32@36@44
@28@0:8@16i24
d28@0:8@16I24
d36@0:8@16I24@28
{DebugInfo={vector<DebugInfo::LineEntry, std::allocator<DebugInfo::LineEntry>>=^{LineEntry}^{LineEntry}{__compressed_pair<DebugInfo::LineEntry *, std::allocator<DebugInfo::LineEntry>>=^{LineEntry}}}{vector<DebugInfo::LineDisassemblyInfo, std::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}^{LineDisassemblyInfo}{__compressed_pair<DebugInfo::LineDisassemblyInfo *, std::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}}}{unordered_map<std::string, unsigned int, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, unsigned int>>>={__hash_table<std::__hash_value_type<std::string, unsigned int>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, unsigned int>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int>, std::hash<std::string>, std::equal_to<std::string>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int>, std::equal_to<std::string>, std::hash<std::string>, true>>=f}}}{vector<std::string, std::allocator<std::string>>=^v^v{__compressed_pair<std::string *, std::allocator<std::string>>=^v}}IIIII}44@0:8@16@24i32@36
{pair<std::vector<unsigned int>, std::vector<std::vector<DebugInfo::LineEntry *>>>={vector<unsigned int, std::allocator<unsigned int>>=^I^I{__compressed_pair<unsigned int *, std::allocator<unsigned int>>=^I}}{vector<std::vector<DebugInfo::LineEntry *>, std::allocator<std::vector<DebugInfo::LineEntry *>>>=^v^v{__compressed_pair<std::vector<DebugInfo::LineEntry *> *, std::allocator<std::vector<DebugInfo::LineEntry *>>>=^v}}}24@0:8^v16
v72@0:8^v16^v24^v32d40I48I52i56r^{LineDisassemblyInfo=@@dIIII}60B68
@72@0:8^v16^v24^v32d40@48@56^v64
@28@0:8r^v16I24
@"<DYPShaderAnalyzer>"
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
{unique_ptr<GRCPerFrameData, std::default_delete<GRCPerFrameData>>="__ptr_"{__compressed_pair<GRCPerFrameData *, std::default_delete<GRCPerFrameData>>="__value_"^{GRCPerFrameData}}}
bPostProcessingMarkerReceived: %u
profileCounters
Frame Index: %u
usc sampling address data
Frame Index, ShaderProfilerData: %u
Frame Time Data
Blit Encoder Frame Data
Derived Counter Sample Data
Havested Binaries
Kick Times
End Batch ID Streaming Data
ShaderProfiler-ProcessStreamedDataPayload
ShaderProfiler-ProcessStreamedDataPostProcessing
ShaderProfiler-ComputeDerivedCountersFromData
MbP?
IOV//
St12length_error
St11logic_error
St9exception
St8bad_cast
".ee
QW^//
%2SS
%2SS
?LE//
%2UU
encoderTimelineInfos
setVertexCount:
setCost:
encoderFunctionIndex
standardUserDefaults
numberWithUnsignedLongLong:
fragmentTiming
context
setFile:
diassemblyString
type
programInfoList
setCoreCounts:
calculateEncoderProgramInfo
length
setValues:
numberWithUnsignedLong:
containsString:
setError:
source
fragmentShaderInfo
toArray
deviceInfo
programInfo
lastPathComponent
setUscSamples:
bytes
setConsistentStateAchieved:
encodeObject:forKey:
numberWithUnsignedInteger:
setEncoderTimelineInfos:
containsObject:
sortedArrayUsingComparator:
fragmentCount
setOpcodeType:
programIndex
allocWithZone:
timing
derivedCountersData
bundlePath
lastObject
encodeInt64:forKey:
setType:
setCommandBufferCount:
constructPayloadFromArchive:
setEncoderTimeData:
firstObject
numberWithUnsignedInt:
allValues
setOpcodeSubType:
derivedCounterNames
timestamps
programId
setTotalPerLineCost:
bundleForClass:
setCoalescedEncoderInfo:
isForInternalTool
effectivePerEncoderDrawKickTimes
fileExistsAtPath:isDirectory:
numberWithInt:
consistentStateAchieved
shaderSourceForProgramInfo:atFunctionIndex:
allKeys
setOpcode:
gtProcessedTimelineResult
timeoutAfter:label:
profiledState
derivedCounterInfo:
setCallStackInfo:
setTotalCost:
effectiveKickTimes
boolValue
isEqualToString:
setEncoderInfos:
fileExistsAtPath:
numberWithDouble:
computeTiming
prepareCounterValues:softwareCounterValues:
setOffset:
delegate
writeToURL:atomically:
gtProcessedShaderProfilerResult
aggregatedGPUTimelineInfo
dumpInstructions
setTimestamps:
setBlitTimeData:
boolForKey:
numberWithBool:
extractShaderBinaryTextSegment:
setEncoderIndexToLabelMap:
computeProgramInfo
prepareCounterNames:softwareCounterNames:derivedCounterNames:
setBinaryRangeInfo:
supportsDerivedCounters
defaultManager
setObject:forKeyedSubscript:
blockOperationWithBlock:
writeToFile:atomically:encoding:error:
drawCallPerLineCost
isComputeDispatchCall
setTimeBaseNumerator:
exportCounterValues:
shaderProfilerGPUDesktopReplayer
numPeriodicSamples
setEffectivePerEncoderDrawKickTimes:
computeProgramId
addOperation:
irString
supportsBatchIdFiltering
setObject:atIndexedSubscript:
decodeObjectOfClasses:forKey:
setBinaryDisassemblyInfo:
drawCallInfoWithFunctionIndex:subCommandIndex:
setTimeBaseDenominator:
wantsDerivedCounters
blitTimeData
evaluteScript:scriptURL:
shaderProfilerDyson
numActiveShadersPerPeriodicSample
setDylib:
addObjectsFromArray:
gtProcessBatchIDFilteringData:
superclass
invertedSet
setNumPeriodicSamples:
platform
decodeObjectOfClass:forKey:
setSupportsImmediateModeDrawCounters:
waitUntilResolved
setBinary:
drawCallInfoList
setDrawCallPerLineCost:
shaderProfiler
notifyStreamingShaderProfilingDataOnQueue:handler:
stringWithUTF8String:
pipelineStateId
waitUntilFinished
setNumActiveShadersPerPeriodicSample:
addObject:
decodeInt64ForKey:
setSourcePath:
binaryRangeInfo
setArray:
instanceCount
drawCallInfoIndices
evaluateScriptCode:
componentsSeparatedByCharactersInSet:
setDrawCallCost:
notifyOnQueue:handler:
perFileCost
addDependency:
binary
setName:
dataWithLength:
stringWithString:
setAnalyzerResult:
drawCallIndex
waitUntilAllOperationsAreFinished
setSourceInfo:
evaluateDerivedCounters
notifyCounterGraphItemChangedOnQueue:handler:
setDisassembly:
programPipelineInfoList
analyzerResult
dictionary
unarchivedObjectOfClasses:fromData:error:
copy
objectAtIndexedSubscript:
functionIndex
setFragmentCount:
storeActionTimes
encoderIndex
setVertexCountPercentage:
calculateUtilizations:result:
loadActionTimes
setCostPercentage:
dictionaryWithCapacity:
unsignedIntValue
setPerCommandBufferEncoderCount:
appendBytes:length:
gtVerifyShaderProfilerResult:
queryGPUTimelineDataWithPayload:
objectForKey:
setFragmentCountPercentage:
future
cost
string
encoderInfoList
setWithCapacity:
setDerivedCounterNames:
mGPUTimelineInfoAtIndex:
callFunction:withArguments:
unsignedIntegerValue
queryShaderInfoWithPayload:
gtVerifyTimelineData:
JSGlobalContextRef
dictionaryWithContentsOfFile:
setPerFileCost:
appendFormat:
objectForKeyedSubscript:
count
futureWithResult:error:
setFunction:
stringByAppendingFormat:
setWithObjects:
encoderProgramInfoList
setDerivedCounters:
mGPUTimelineInfos
callStackInfo
appendString:
unsignedLongLongValue
setPerRingSampledDerivedCounters:
dictionaryWithDictionary:
removeItemAtURL:error:
countByEnumeratingWithState:objects:count:
setGpuTime:
gatherStatisticsFromArchive:
offset
stringByAppendingPathComponent:
encoderTimeData
setDerivedCountersData:
setXpState:
cancelAllOperations
mainBundle
setProfiledState:
dictionaryWithObjects:forKeys:count:
arrayByAddingObjectsFromArray:
removeObject:
unsignedLongValue
setInstanceCount:
generateTargetSamplesForResult:withProgramAddressLUT:withBatchIndexMin:withProgramAddressList:withUSCSampleBuffer:withUSCSampleNum:withBatchIDToEncoderIndex:andEncoderIndexToBatchIdMap:targetIndex:
opCode
createArrayRef:
stringByAppendingString:
setDerivedEncoderCounterInfo:
captureArchive
calculateFrameTime:result:
maxConcurrentOperationCount
arrayWithArray:
uscSamples
dictionaryWithObjectsAndKeys:
removeObjectForKey:
increaseLengthBy:
setInstanceCountPercentage:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
setRawArrayValues:withUint32Values:andNumCounters:
opCodeSubType
getTraceDataForFunctionIndexArray:forCaptureArchive:
stringByDeletingLastPathComponent
enumerateKeysAndObjectsUsingBlock:
setDictionary:
characterSetWithCharactersInString:
arrayWithCapacity:
valid
removeTemporaryDirectory
disassembleBinary:
indexOfObject:
UTF8String
dataWithBytes:length:
setRawArrayValues:withUint64Values:andNumCounters:
setIrSource:
stringByDeletingPathExtension
opCodeType
coalescedEncoderInfo
metalPluginForPlatform:
setDirectory:
getValue:
enumerateObjectsUsingBlock:
arrayWithObject:
vertexCount
result
setRestoreTimestamps:
gpuTime
stringByStandardizingPath
disassembledLineInfo
dataWithCapacity:
path
setLength:
error
shaderAnalyzer
setDisasmSource:
mutableBytes
vertexShaderInfo
doubleValue
arrayWithObjects:count:
initWithCapacity:
setResult:
pathExtension
gtEnumerateUnarchivedGPUTimelineData:
setLineIndex:
setActiveCoreInfoMasksPerPeriodicSample:
dataWithData:
stringValue
commandType
mutableCopy
errorWithDomain:code:userInfo:
shaderAnalyzerDyson
setDisassembledLineInfo:
vertexTiming
drawCallCost
averagePerDrawKickDurations
setActiveShadersPerPeriodicSample:
stringWithFormat:
activeShadersPerPeriodicSample
setMaxConcurrentOperationCount:
initWithData:encoding:
pathForResource:ofType:
gtEnumerateUnarchivedShaderProfilerData:
dataWithJSONObject:options:error:
shaderInstructionInfoFromBinary:withStartOffset:forLength:targetIndex:
componentsJoinedByString:
init
initWithCoder:
encodeWithCoder:
supportsSecureCoding
initWithLibraryId:
libraryId
setLibraryId:
_libraryId
TQ,N,V_libraryId
calculateRealTimeInfoWithGPUTime:
copyWithZone:
_addPerLineCost:to:
_dividePerLineCost:by:
perLineInfoForFunctionFilePath:withLibraryIdSet:atFunctionIndex:
exportDerivedCounterDataAtPath:renameWhenConflict:
encoderCount
setEncoderCount:
encoderTilerParamBufBytesUsedArray
setEncoderTilerParamBufBytesUsedArray:
parameterBufferMaxSize
setParameterBufferMaxSize:
parameterBufferMaxSizeEverMemless
setParameterBufferMaxSizeEverMemless:
parameterBufferMaxSizeNeverMemless
setParameterBufferMaxSizeNeverMemless:
parameterBufferPercentFullDict
setParameterBufferPercentFullDict:
softwareCounterInfo
setSoftwareCounterInfo:
perRingPerFrameLimiterData
setPerRingPerFrameLimiterData:
shaderProfilingFrameTimes
setShaderProfilingFrameTimes:
blitEncoderTimeInfo
setBlitEncoderTimeInfo:
shaderProfilingTime
setShaderProfilingTime:
.cxx_destruct
_encoderCount
_encoderTilerParamBufBytesUsedArray
_parameterBufferMaxSize
_parameterBufferMaxSizeEverMemless
_parameterBufferMaxSizeNeverMemless
_parameterBufferPercentFullDict
_softwareCounterInfo
_perRingPerFrameLimiterData
_shaderProfilingFrameTimes
_blitEncoderTimeInfo
_shaderProfilingTime
T@"NSMutableArray",&,N,V_shaderProfilingFrameTimes
T@"NSMutableDictionary",&,N,V_blitEncoderTimeInfo
Td,N,V_shaderProfilingTime
TI,N,V_encoderCount
T@"NSArray",&,N,V_encoderTilerParamBufBytesUsedArray
T@"NSNumber",&,N,V_parameterBufferMaxSize
T@"NSNumber",&,N,V_parameterBufferMaxSizeEverMemless
T@"NSNumber",&,N,V_parameterBufferMaxSizeNeverMemless
T@"NSDictionary",&,N,V_parameterBufferPercentFullDict
T@"NSDictionary",&,N,V_softwareCounterInfo
T@"NSMutableDictionary",&,N,V_perRingPerFrameLimiterData
gtHasOverloadedBatchIdFilteredCountersData
evaluateStreamingSamples:withUSCSampleNum:withProgramAddressLUT:targetIndex:forRingBufferIndex:withMinEncoderIndex:withMaxEncoderIndex:withEncoderIdToEncoderIndexMap:withProfilingData:
adjustHWBiasAndFinalizeResult
setupDataForEvaluatingStreamingSamples:forRingBufferCount:forTargetIndex:
gtTestNewShaderProfiler
gtProcessGPUTimelineData:
gtProcessShaderProfilerData:
gtWaitGPUTimelineData
gtWaitShaderProfilerData
gtHasOverloadedShaderProfilerData
gtUseNewShaderProfiler
initWithDelegate:
supportsImmediateModeDrawCounters
gtSetupStreamDataProcessor:
gtSetupForBatchIDFilteringCounters:
gtProessStoredBatchIdFilteredCountersData
newShaderProfilerWithDelegate:
isDisassemblerAvailable
initializeShaderAnalyzer
_visitAllShaderInfosInResult:usingBlock:
enumerateFragmentShadersForResult:andShaderInfoDictionary:usingBlock:
handleCaptureSessionTearDown
_processEncoderTimeData:withKickTimeData:forPayload:withGPUTime:
_setupLimiterInfoPerDrawCall:forPayload:
_setupFragmentEncoderCountersPerDrawCall:
_preparePrioritizedPerEncoderDrawListFromShaderProfilerResult:andGetMaxDrawsPerEncoder:andGetEncoderBatchIndexToDrawIndexMap:andGetDrawCallIndexToEncoderBatchIndexMap:
_updateDrawCallTimingCounters:forShaderProfilerResult:withDrawCallData:withBottleNeckAnalysisDrawCallsData:withCounterIndices:
collectBatchFilteredDataForShaderProfilerResult:
_effectiveBatchDrawKickTimes:forShaderProfilerResult:
_processFrameTimeData:forProcessedFrameTimeData:
_createPerCounterCommandData:withPerCommandData:
_processDerivedEncoderCounterData:forDerivedEncoderData:
mergeLegacyAndNewShadersInShaderInfoDictionary:
_processHarvestedBinaryData:forStreamedData:
computeFromShaderInfoResult:forPayload:forFuture:
_dumpTraceProfileDataForResult:
computeFromFrameInfoResult:forFuture:
profileFrameAtConsistentState:
_showDrawCallDataforResult:
_queryDerivedCounterDataWithDelegate:withShaderInfoResult:forPayload:withShaderProfilerResult:
_saveSampleDataFromGPURawCounters:size:filename:withTimeStamps:
_shouldUseProgramAddressMappings:
_getLegacyProgramType:
_preProcessStreamingUSCSampleData:result:
_preProcessStreamingUSCSampleData:result:withAddressData:sampleData:frameIndex:ringBufferIdx:targetIndex:
_preProcessStreamingUSCSampleData:result:withAddressMappings:sampleData:frameIndex:ringBufferIdx:targetIndex:
_analyzeShaderBinarySamplesForResult:forShaderKeyToSourcePath:
_calculatePerDrawCosts:
_addBlitTimesToEffectiveKickTimes:
_addDerivedCounterDataToTimelineInfo:usingShaderProfilerResult:forWorkloadInfo:
_calculatePerSampleAggregatedActiveShaders:withShaderProfilerResult:forWorkloadInfo:
_updateShaderTimelineInfo:withShaderTimelineDataEx:forGPUTimelineInfo:withEncoderGlobalTraceIdToStateMirrorIdMapping:forRingBuffer:
_calculatePerSampleActiveShaders:withShaderProfilerResult:forWorkloadInfo:
_queryStreamingProfilerData:forDelegate:forFuture:forGPUTimelineFuture:
profileShader:afterGPUTimelineGather:atConsistentState:
_constructPayload
_gatherStaticInformation
_preProcessUSCSampleData:result:targetIndex:
_generateSamplesForResult:withProgramAddressLUT:withBatchIndexMin:andBatchIndexMax:andMinIndex:withProgramAddressList:withUSCSampleList:withUSCSampleNum:withBatchIDToEncoderIndex:andEncoderIndexToBatchIdMap:
_saveAddressList:size:filename:
_saveAddressMappings:filename:
_queryStreamingProfilerDataGT:forDelegate:forFuture:forGPUTimelineFuture:
collectBatchFilteredDataForShaderProfilerResultGT:
_collectBatchFilteredDataForShaderProfilerResultOverrideGT:
_queryStreamingProfilerDataOverrideGT:forDelegate:forFuture:forGPUTimelineFuture:
_queryStreamingProfilerDataOverride:forDelegate:forFuture:forGPUTimelineFuture:
_platformShaderProfiler
_useEncoderDataForCounters
_sessionIsInvalid
_metalPluginName
_derivedCounterInfoResult
_payload
_shaderInfoResult
_parallelQueue
_hasValidShaderProfilerInfo
_mtlShaderAnalyzer
supportRendererType:
setupForAnalysis
analyzeBinary:uscSamples:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
analyzedBinary:processedUscSamples:targetIndex:withKey:withShaderSourcePath:withALUBlocks:
analyzedBinary:processedUscSamples:targetIndex:withKey:withShaderSourcePath:
_calculatePerDrawCallWithGRCSampleData:targetIndex:
_calculatePerDrawCallCostWithSampleData:targetIndex:
_waitLatencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:forLimiterType:
_getDebugInfoForBinary:withTextSegment:forTargetIndex:forKey:
_getAddressAndLineTableForDebugInfo:
_ProcessLineList:forFileCostMap:forDebugInfo:andCost:forAddr:andDrawIndex:andTargetIndex:withDefaultDisassemblyInfo:withALUInstructionType:
_processPerLineCostDataForLineTable:withFileCost:withDebugInfo:andAllDrawCost:withKey:withShaderSourcePath:withDrawCost:
_calculatePerLineCostWithSampleData:binary:targetIndex:withKey:withShaderSourcePath:withALUBlocks:
_calculatePerLineCostWithSampleData:binary:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
_createPerLineCostDictionaryWith:lineOffset:
_createPerFileCostDictionaryWith:lineOffset:
platformShaderAnalyzer
.cxx_construct
_platformShaderAnalyzer
_isForInternalTool
_mutex
setupShaderInstructionInfoForBinary:forTargetIndex:
shaderInstructionInfoWithStartOffset:endOffset:
_grcFrameData
libraryId
encoderTilerParamBufBytesUsedArray
parameterBufferMaxSize
parameterBufferMaxSizeEverMemless
parameterBufferMaxSizeNeverMemless
v32@?0@8@16^B24
fragment
vertex
tile
fragment-dynamic-libraries
vertex-dynamic-libraries
tile-dynamic-libraries
compute
compute-dynamic-libraries
perLineCost
perDrawCall
perLineCostTotal
perLineCostVertex
perLineCostFragment
perLineCostComputeKernel
perLineCostCurrentDraw
perBinaryCost
perBinaryType
%@_%lu.csv
Index,FunctionIndex,CommandBuffer,Encoder,Marker,%@
%lu,%@,%@
vertex shader info
fragment shader info
compute kernel info
mutiple binary info
activePerEncoderDrawCallCount
perEncoderKickCount
VertexTPULimiter
VertexALULimiter
VertexGlobalLoadLimiter
VertexGlobalStoreLimiter
VertexPBELimiter
VertexSampleLimiter
VertexLocalLoadLimiter
VertexLocalStoreLimiter
FragmentTPULimiter
FragmentALULimiter
FragmentGlobalLoadLimiter
FragmentGlobalStoreLimiter
FragmentPBELimiter
FragmentSampleLimiter
FragmentLocalLoadLimiter
FragmentLocalStoreLimiter
TPULimiter
ALULimiter
GlobalLoadLimiter
GlobalStoreLimiter
PBELimiter
SampleLimiter
LocalLoadLimiter
LocalStoreLimiter
BufferLoadLimiter
BufferStoreLimiter
VertexBufferLoadLimiter
VertexBufferStoreLimiter
FragmentBufferLoadLimiter
FragmentBufferStoreLimiter
GlobalLoad
GlobalStore
Sample
LocalLoad
LocalStore
FSSamplerStall
ShaderCoreFragmentUtilization
FSTextureCacheMissRate
FragmentShaderBusy
FragmentPipelinePercent
PixelWriteStallPercent
GPU Time
DerivedCounterInfo
vertex shader key
fragment shader key
compute kernel key
draw call info
mutiple binary keys
type
draw call %lu, replacing key %@ with %@, type %@
draw call %lu, ignoring key %@, type %@
perCommandBufferEncoderCount
encoderIndexToLabel
binary
dylib
v28@?0@"NSString"8@"NSMutableDictionary"16I24
rm -rf /tmp/com.apple.gputools.profiling/shaderProfilerResults
mkdir /tmp/com.apple.gputools.profiling/shaderProfilerResults
mkdir /tmp/com.apple.gputools.profiling/shaderProfilerResults/json
encoder time data
kick time data
MetalPluginName
Frame Consistent Perf Info
level
enabled
consistent
gputime
consistent time
tilerParamBufBytesUsedArray
frametime
performance statistics
ParameterBufferMaxSize
ParameterBufferMaxSizeEverMemless
ParameterBufferMaxSizeNeverMemless
/tmp/com.apple.gputools.profiling
disassembly is unavailable
PerDrawNsecTimes
blitEncoderIndices
GPUShaderProfilerExportShaderInfo
/tmp/com.apple.gputools.profiling/shaderProfilerResults/ProgramPipelineCosts.txt
q24@?0@"DYShaderProfilerProgramInfo"8@"DYShaderProfilerProgramInfo"16
ProgramIndex
ProgramId
[%u] PipelineState 0x%llX
Vertex(0x%s)[%.4f%%]
Fragment(0x%s)[%.4f%%]
VS_Hash
VS_Percent
FS_Hash
FS_Percent
[%u] PipelineState 0x%llX
Compute(0x%s)[%.4f%%]
CS_Hash
CS_Percent
index
functionIndex
Compute
Vert
Fragment
q24@?0@"NSNumber"8@"NSNumber"16
DrawCallsSorted
Index
FunctionIndex
%.2f%%
%.4f%%
%.4f%%
/tmp/com.apple.gputools.profiling/shaderProfilerResults/DrawCallCosts.txt
index
functionIndex
Vert
    Fragment
Compute
VS_Hash
FS_Hash
CS_HASH
NumSamples
%10.4f%%
%10.4f%%
%10.4f%%
/tmp/com.apple.gputools.profiling/shaderProfilerResults/DrawCallCosts_Sorted.txt
index
functionIndex
Vert
    Fragment
Compute
VS_Hash
FS_Hash
CS_HASH
%10.4f%%
%10.4f%%
%10.4f%%
q24@?0@"NSMutableDictionary"8@"NSMutableDictionary"16
Cost
/tmp/com.apple.gputools.profiling/shaderProfilerResults/PerEncoderPipelineCosts.txt
SortedPipelines
Encoder %u
AbsoluteCost
Pipeline %llu
PipelineState 0x%llX = [%.4f%%]
PipelineId
DrawCalls
index
functionIndex
PercentageCost
frameProfile
frame counters
frame profile data
Frame Profiler
Frame profiler failed due to an internal error.
MTLStat_nSec
MTLStatVertices
frameGPUTime
GPUState
Frame profiler failed to get data from the device.
v8@?0
Total Samples = %g
index
functionIndex
vertTiming
vertCyclePercentragTiming
fragmentCyclePercent
%6u : encoderId:%u limiterIdx:%u (TS: %llu) nTracePackets:%u)
%6u : 0x%0.8llx 0x%0.8llx
GPUToolsAvoidProgramAddressMappings
usc sampling address data
usc sampling sample data
frame index
ring buffer
usc sampling address mappings
encID
drawCallIndex
mappedAddress
mappedSize
binaryUniqueId
encIndex
Blit Encoder Kick Times Nsec
Blit Encoder Indices
GPU Encoder Info
aggregated derived counters
sampled timestamps
aggregated timeline data
aggregated timeline data ex
ring buffer sampled counter data
core counts
ring buffer blend factors
Restore Timestamps
coalesced encoder mapping
v32@?0@"NSNumber"8@"NSArray"16^B24
limiter data
limiter time stamps
limiter counter list
shader timeline data
shader timeline data ex
Havested Binaries
Finalize Shader Profiler Result
Kick Time Data
Encoder Load Action Times
Encoder Store Action Times
Shader Profiling Frame Time
Frame Time Data
Num Ring Buffers
Blit Command Nsec Times
derivedCounterData
@"NSDictionary"16@?0@"NSDictionary"8
gputools.%@.%p
End Streaming Data
v16@?0@"NSDictionary"8
QueryShaderInfoWithPayload
rm -rf /tmp/com.apple.gputools.profiling/gpuTimelineResults
mkdir /tmp/com.apple.gputools.profiling/gpuTimelineResults
Streaming GPU Timeline Data
Streaming Shader Profiling Data
UseKicktimestamps
UseMTLCounters
CoalesceComputeEncoders
CoalesceBlitEncoders
GPUDebugger.CounterGraph.UseEncoderDataForCounters
gputools.GPUToolsDebugger.DYPMTLShaderProfiler.ParallelQueue
/tmp/com.apple.gputools.profiling/shaderProfilerResults/uscSamplingAddressProcessed.txt
Index : ProgramType BatchIdx FunctionIdx [Start - End]
%6u : %2u %6u %6u [0x%0.8llx - 0x%0.8llx]
Encoder  Index [  Start -  End   ]  BinaryUniqueID  EncIdx Index Type
index
%08x %5d [%08llx-%08llx] %016llx %6d %5d %3d %s
GPUCounterGraph
plist
counters
batchfiltered
vendorCounters
v32@?0@"NSString"8@"NSDictionary"16^B24
GPUTime
v32@?0@"NSString"8@16^B24
encoderBatchPriorityList
maxDrawsInAnyEncoder
collectInBackground
pause
derivedCounterInfo
SubcommandIndex
highPriorityBatches
HighPriorityBatchInfo
Batch Filtering Started
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
gputools.GPUToolsDebugger.GPUToolsPlatform.ShaderProfiler.ParallelQueue
v32@?0@8@"NSNumber"16^B24
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
/tmp/com.apple.gputools.profiling/shaderProfilerResults/shader_cost_%s_%s.txt
SourceFiles
LineData
source
line
cost
percent
%u: %s      %.1f %.2f%%
%u: %s
ShaderRangeInfo
lineIndex
function
filename
fullpath
directory
      -----> %u:  %s : %s
callstackInfos
diassembly
offset
disasm
    %d %s %u %.1f %.2f%%
    %d %s
----------- Full Binary Disassembly -----------
disasmSource
irSource
costPercentage
opcodeType
opcodeSubType
opcode
    %d %s [%u %u] %.1f %.2f%%
    %d %s [%u %u]
binaryDisassemblyInfo
/tmp/com.apple.gputools.profiling/shaderProfilerResults/json/shader_cost_%s_%s.json
allDrawCall
/program_source
Offset
totalCost
16777235-0
::air.vertexFetchFunction()
TraceId to SampleIndex
Frame Encoder Times Data
Encoder TraceId Data
Sample Marker
Blit TraceId to Sample Index
Blit Encoder Time Data
Blit Split TraceId to Sample Index
Blit Split Encoder Time Data
Blit Encoder Frame Data
Blit Encoder Info
Blit Split Encoder Frame Data
Blit Split Encoder Info
Encoder Draw Call Count
Blit Encoder Nsec Times
Blit Command Kick Times Nsec
passList
DerivedCounterDictionary
DerivedCounters
subtype
Normalize
_encoderRawData
_encoderTileInfos
_encoderKickTimes
DerivedCounterConfigurationVariables
_SetAndEvaluateRawCounterValues
_DerivedCounterResult
_RawCounterValues
AverageSamples
derivedCounterDataForBottleneckAnalysis
DerivedCounterAnalysis
DerivedCounterAnalysisFunctions
BatchInfos
name
description
num_cores
MTLStatTotalGPUCycles
_vtx
_frg
_cmp
var %@%@ = 0;
var %@_norm%@ = 0;
var core_count = num_cores;
var TileWidth  = 0;
var TileHeight = 0;
var _DerivedCounterResult = [];
var _RawCounterValues = [];
function _SetAndEvaluateRawCounterValues() {
for (var encoderIdx = 0; encoderIdx < _encoderRawData.length; encoderIdx++) {
TileWidth = _encoderTileInfos[encoderIdx][0];
TileHeight = _encoderTileInfos[encoderIdx][1];
_DerivedCounterResult[encoderIdx] = []
_RawCounterValues[encoderIdx] = []
%@%@ = _encoderRawData[encoderIdx][%u][%u][%u];
_RawCounterValues[encoderIdx].push(%@%@);
%@%@ = _encoderKickTimes[encoderIdx][%u];
_RawCounterValues[encoderIdx].push(%@%@);
%@%@
%@_norm%@ = 100.0 * %@ * (%@%@ / Math.max(_encoderRawData[encoderIdx][%u][%u][%u], 1));
_RawCounterValues[encoderIdx].push(%@_norm%@);
%@_norm%@
%@ = %@%@ + %@%@ + %@%@;
_RawCounterValues[encoderIdx].push(%@);
%@_norm = 100.0 * %@ * (%@ / Math.max(_encoderRawData[encoderIdx][0][%u][%u] + _encoderRawData[encoderIdx][1][%u][%u] + _encoderRawData[encoderIdx][2][%u][%u], 1.0));
_RawCounterValues[encoderIdx].push(%@_norm);
_norm
try { value = %@(); if (!isFinite(value) || isNaN(value) || (value < 0)) { value = 0; } _DerivedCounterResult[encoderIdx].push(value); } catch(err) { ErrorLog(err); _DerivedCounterResult[encoderIdx].push(0); }
v16@?0@"NSString"8
ErrorLog
DerivedCounterScript
Timebase
Post Processing Frame Marker
profileCounters
Frame Index
Source Sample Marker
ShaderProfilerData
Derived Counter Sample Data
Kick Times
Batch Filtered Counters
End Batch ID Streaming Data
Program Address Buffer
Program Address Mappings
Command Buffer Timestamps
PState Info Data
mapping
TraceId to BatchId
v32@?0@"NSNumber"8@"NSNumber"16^B24
TraceId to Coalesced BatchId
v32@?0@"NSArray"8Q16^B24
GPU Stats
Frame Encoder Time Data
EncoderTime
RingBufferIndex
Source
Subdivided Dictionary
Encoder Infos
Encoder Tile Info
Counter Info
Derived Counters Info Data
Num Encoders
Fragment Counter
Encoder Time Sample Data
Encoder Sample Index Data
limiter sample counters
var %@ = 0;
var %@_norm = 0;
var core_count = num_cores;
var MTLStat_nSec = 0;
function _SetAndEvaluateRawCounterValues(numSamples, gpuCyclesCounterIndex, ringBufferIndex) {
num_cores = _CoreCount[ringBufferIndex];
_DerivedCounterResult = [];
for (var sampleIndex = 0; sampleIndex < numSamples; ++sampleIndex) {
var sampleStartIndex = sampleIndex * %lu;
var gpuCycles = _RawCounterValues[gpuCyclesCounterIndex + sampleStartIndex] / num_cores;
MTLStat_nSec = (_RawTimestampDelta[sampleIndex]) * %u / %u;
%@ = _RawCounterValues[%lu + sampleStartIndex];
%@_norm = 100.0 * (_RawCounterValues[%lu + sampleStartIndex] / gpuCycles);
try { value = %@(); if (!isFinite(value)) { value = 0; } _DerivedCounterResult.push(value); } catch(err) { ErrorLog(err); _DerivedCounterResult.push(0); }
core_mask_list
gputools.MTLShaderProfiler.GRCPerFrameDataparallelQueue
_RawTimestampDelta
_CoreCount
usc sample count
usc sample data thread offsets
Bandwidth
gputools.MTLShaderProfiler.parallelQueue
groups
Resources/GPUCounterGraph.plist
%@ (%@)
unit
Encoder Index
CommandBuffer
Encoder
Marker
%d %d %d
%lu,%d,
DYMTLShaderProfilerShaderInfo
DYMTLShaderProfilerResult
DYMTLShaderProfiler
1D!1
DYShaderAnalyzerNextGPU
GRCPerFrameDataClass
B16@0:8
@24@0:8Q16
@24@0:8@16
v24@0:8@16
Q16@0:8
v24@0:8Q16
@16@0:8
@24@0:8^{_NSZone=}16
v32@0:8@16@24
v32@0:8@16d24
v24@0:8d16
@36@0:8@16^v24I32
@28@0:8@16B24
I16@0:8
v20@0:8I16
d16@0:8
v16@0:8
@"NSArray"
@"NSNumber"
@"NSDictionary"
@"NSMutableDictionary"
@"NSMutableArray"
v32@0:8@16@?24
v40@0:8@16@24@?32
@48@0:8@16@24@32Q40
@32@0:8@16@24
@48@0:8@16^Q24^v32^v40
@52@0:8I16@20@28@36r^{CounterIndexInfo=QQQQQ}44
@40@0:8@16@24@32
@20@0:8I16
@48@0:8@16@24@32@40
v44@0:8^Q16I24r*28^Q36
B24@0:8@16
I24@0:8@16
v60@0:8@16@24@32@40I48I52i56
v40@0:8@16@24@32
v52@0:8@16@24@32^v40I48
B48@0:8@16@24@32@40
@36@0:8@16@24I32
v36@0:8@16@24i32
v80@0:8@16^v24I32I36I40^{DYMTLShaderProfilerProgramAddress=(?={?=b8b24I}{?=b8b24I})(?={?=QQ}{?=Qb8b24I})}44^{DYMTLShaderProfilerUSCSample=I(?={?=(?=II)I}{?=II})}52I60^v64^v72
v36@0:8^{DYMTLShaderProfilerProgramAddress=(?={?=b8b24I}{?=b8b24I})(?={?=QQ}{?=Qb8b24I})}16I24r*28
v32@0:8@16r*24
@"<DYPShaderProfiler>"
{atomic<bool>="__a_"{__cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>>="__a_value"AB}}
@"NSString"
@"NSOperationQueue"
@"DYShaderAnalyzerNextGPU"
B20@0:8i16
@72@0:8@16@24i32@36@44@52I60@64
@60@0:8@16@24i32@36@44r^v52
@52@0:8@16@24i32@36@44
@28@0:8@16i24
d28@0:8@16I24
d36@0:8@16I24@28
{DebugInfo={vector<DebugInfo::LineEntry, std::allocator<DebugInfo::LineEntry>>=^{LineEntry}^{LineEntry}{__compressed_pair<DebugInfo::LineEntry *, std::allocator<DebugInfo::LineEntry>>=^{LineEntry}}}{vector<DebugInfo::LineDisassemblyInfo, std::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}^{LineDisassemblyInfo}{__compressed_pair<DebugInfo::LineDisassemblyInfo *, std::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}}}{unordered_map<std::string, unsigned int, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, unsigned int>>>={__hash_table<std::__hash_value_type<std::string, unsigned int>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, unsigned int>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int>, std::hash<std::string>, std::equal_to<std::string>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int>, std::equal_to<std::string>, std::hash<std::string>, true>>=f}}}{vector<std::string, std::allocator<std::string>>=^v^v{__compressed_pair<std::string *, std::allocator<std::string>>=^v}}IIIII}44@0:8@16@24i32@36
{pair<std::vector<unsigned int>, std::vector<std::vector<DebugInfo::LineEntry *>>>={vector<unsigned int, std::allocator<unsigned int>>=^I^I{__compressed_pair<unsigned int *, std::allocator<unsigned int>>=^I}}{vector<std::vector<DebugInfo::LineEntry *>, std::allocator<std::vector<DebugInfo::LineEntry *>>>=^v^v{__compressed_pair<std::vector<DebugInfo::LineEntry *> *, std::allocator<std::vector<DebugInfo::LineEntry *>>>=^v}}}24@0:8^v16
v72@0:8^v16^v24^v32d40I48I52i56r^{LineDisassemblyInfo=@@dIIII}60B68
@72@0:8^v16^v24^v32d40@48@56^v64
@28@0:8r^v16I24
@"<DYPShaderAnalyzer>"
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
{unique_ptr<GRCPerFrameData, std::default_delete<GRCPerFrameData>>="__ptr_"{__compressed_pair<GRCPerFrameData *, std::default_delete<GRCPerFrameData>>="__value_"^{GRCPerFrameData}}}
bPostProcessingMarkerReceived: %u
profileCounters
Frame Index: %u
usc sampling address data
Frame Index, ShaderProfilerData: %u
Frame Time Data
Blit Encoder Frame Data
Derived Counter Sample Data
Havested Binaries
Kick Times
End Batch ID Streaming Data
ShaderProfiler-ProcessStreamedDataPayload
ShaderProfiler-ProcessStreamedDataPostProcessing
ShaderProfiler-ComputeDerivedCountersFromData
