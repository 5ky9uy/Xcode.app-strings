%N"
% N"
%q"
@(#)PROGRAM:SourceModel  PROJECT:SourceModel-1
XCSyntaxType
Syntax Type
xcsynspec
InheritsNodeType
IsMark
IgnoreToken
NameFormat
v48@?0@"NSString"8^@16^q24^s32^@40
CaptureTypes
xcode.lang.objc.identifier
xcode.syntax.identifier
xcode.lang.generated.preprocessor.ignore
xcode.lang.generated.preprocessor.function.ignore
NS_ENUM
xcode.lang.objc.string
xcode.lang.objc.interestingOperators
xcode.lang.objc.array.literal.start
xcode.lang.objc.dictionary.literal.start
xcode.lang.objc.expression.literal.start
xcode.lang.objc.property.options.identifier
xcode.syntax.keyword
xcode.lang.objc
xcode.lang.objc.property.options
xcode.lang.objc.method.declarator.args
xcode.lang.c.interestingOperators
xcode.lang.c.preprocessor.identifier
xcode.syntax.preprocessor.identifier
xcode.lang.string
xcode.lang.character
xcode.lang.c.number
xcode.lang.comment
xcode.lang.comment.singleline
xcode.lang.comment.headerdoc
xcode.lang.comment.headerdoc.singleline.bang
xcode.lang.comment.headerdoc.keywords
xcode.lang.url
xcode.lang.comment.mark
xcode.lang.c.preprocessor.mark.therest
xcode.lang.c.preprocessor
xcode.lang.c.preprocessor.systemIncludeString
xcode.lang.completionplaceholder
xcode.syntax.preprocessor.keyword
xcode.lang.c.identifier
xcode.lang.c
EntityNameMap
SourceModelParser internal error:%s near character location %ld
%@ must be an array of strings
Known
KnownMacros.plist
PlainMacros
FunctionMacros
EnumMacros
AVAILABLE_MAC_OS_X_VERSION_
DEPRECATED_IN_MAC_OS_X_VERSION_
v8@?0
DVTTextCheckParseTree
DVTTextValidateParseTree
DVTTextEnableNativeParser
com.apple.dt.SourceModel
SourceModel
TextResponsivenessPerformance
Couldn't load language spec for '%@'
Type
-[SourceModel dirtyRange:%@ lengthDelta:%ld] _dirtyRange was %@
-[SourceModel dirtyRange:lengthDelta:] _dirtyRange is now %@
-[SourceModel dirtyRange:lengthDelta:] _sourceItems (before): %@
-[SourceModel dirtyRange:lengthDelta:] _dirtyRange after right edge dirtying %@
-[SourceModel dirtyRange:lengthDelta:] _sourceItems (after): %@
--- Before Parse, dirty %@
Buffer = 
Items before = 
--- After Parse, dirty before %@, after %@
Items after = 
-[SourceModel parse]: (before correction) top item range: %@, file range: %@
-[SourceModel parse]: top item range: %@, file range: %@
#### Incremental parse doesn't match
     Full Parse: %@
     Incremental Parse: %@
self
xcode.lang.documentation.markup.directive.block.name
xcode.syntax.definition.class
xcode.syntax.declaration.class
xcode.syntax.definition.extension
xcode.syntax.declaration.extension
xcode.syntax.declaration.struct
xcode.syntax.declaration.enum
xcode.syntax.declaration.union
xcode.syntax.markup.directive.block
xcode.syntax.typedef
xcode.syntax.declaration.objc.interface
xcode.syntax.name.partial
xcode.syntax.name
xcode.syntax.name.tree
xcode.syntax.method.declarator
xcode.syntax.declaration.enum.case
xcode.lang.swift.function.parameter.therest
xcode.lang.swift.enum.case.name
xcode.lang.swift.variable.namelist
xcode.lang.swift.parenexpr.complex
xcode.syntax.definition.function
xcode.syntax.declaration.function
xcode.syntax.definition.method
xcode.syntax.declaration.method
xcode.syntax.definition.property
xcode.syntax.declaration.property
xcode.syntax.declaration.variable
xcode.syntax.comment
xcode.syntax.comment.doc
xcode.syntax.comment.doc.parameter.block
xcode.syntax.comment.doc.parameter
xcode.syntax.completionplaceholder
xcode.syntax.preprocessor
xcode.syntax.preprocessor.include
xcode.syntax.objc.import
xcode.syntax.module.import
xcode.syntax.string
xcode.syntax.character
xcode.syntax.number
super
this
xcode.syntax.declaration.protocol
xcode.syntax.name.type
xcode.syntax.name.other
xcode.syntax.name.parameter
xcode.syntax.name.parameter.function
xcode.syntax.entity.start
xcode.syntax.associatedtype
xcode.syntax.markup.heading
xcode.syntax.markup.delimiter
xcode.lang.objcpp.identifier
xcode.lang.cpp.identifier
xcode.lang.swift.identifier
xcode.lang.html.entity.block
xcode.lang.html.entity.end
@selector
Keyword scanner "%@" shouldn't have a Tokenizer. Ignoring it.
.interestingOperators
CaseSensitive
WordBreak
CheckPreprocessorKnownMacros
StartChars
Chars
Words
Keyword "%@" (loc=%ld) Reusing old nodeType, Item: %@
Keyword "%@" (loc=%ld) Returning Item: %@
xcode.lang.objcpp.interestingOperators
xcode.lang.objcpp.array.literal.start
xcode.lang.objcpp.dictionary.literal.start
xcode.lang.objcpp.expression.literal.start
xcode.lang.objcpp.property.options.identifier
xcode.lang.objcpp.anoperator
xcode.lang.objcpp
xcode.lang.objcpp.property.options
xcode.lang.objcpp.operatorclause
xcode.lang.objcpp.method.declarator.args
'\n'
'\r'
'\t'
'%c'
'unexpected 0x%lX'
xcode.lang.
'%@'
identifier
languageName
languageSpecification
nativeSourceModelParserClass
documentationAbbreviation
fileDataTypeIdentifiers
fileDataTypes
conformsToLanguageIdentifiers
conformsTo
commentSyntaxes
documentationSyntaxes
supportsIndentation
allowWhitespaceTrimming
requiresHardTabs
indentationTriggers
indentation
trigger
scriptingLanguage
isHidden
usesColorLiteral
usesFileLiteral
usesImageLiteral
standardTypes
fileExtensions
prefix
suffix
<%@:%p:'%@'>
plist
LanguageMetadata
Language previously registered with identifier %@. Skipping.
Failed to locate a source code language with identifier %@
token: %@ context: %@
*** endToken: %@
***        contextName: %@
xcode.lang.swift.string
xcode.lang.swift.string.multiline
xcode.lang.swift.string.interpolation
xcode.lang.swift.integer
xcode.lang.swift.double
xcode.lang.comment.recursive
xcode.lang.swift.doccomment.star
xcode.lang.swift.doccomment.slash
xcode.lang.swift.interestingOperators
xcode.lang.swift.preprocessor.keyword
xcode.lang.swift
xcode.lang.swift.string.multiline.interpolation
xcode.lang.swift.function.declarator
SourceScannerLogLevel
AltType
StartAtBOL
StartAtColumnZero
Foldable
ShouldTraverse
DirtyPreviousRightEdge
Volatile
Tokenizer
Couldn't load language spec for '%@' (from '%@')
Syntax
%@: "%@"
IncludeRules
nodeToReuse: Location=%ld Scanner:%@
OldItem: %@
*** Reusing item: (loc=%ld) %@
nodeForThisScanner: Location=%ld Scanner:%@
*** nodeForThisScanner found: (loc=%ld) %@
SourceScanner parseOne: Not adding to dirty range: %@
SourceScanner parseOne: Adding to dirty range: %@
SourceScanner parseOne: Pretending to reuse item: %@
%@-%@ %ld (loc=%ld) saving lexed token: %@
%@-%@ %ld (loc=%ld) Going back past: %@
%@-%@ %ld (loc=%ld) Skipping first %ld (%ld) children out of %ld (Range %ld to %ld)
%@-%@ %ld (loc=%ld) Skipping last %ld children out of %ld (Range %ld to %ld)
%@-%@ %ld (loc=%ld) Adding Ignored Token to children: %@
%@-%@ %ld (loc=%ld) Adding Saved Token to children: %@
%@-%@ %ld (loc=%ld) Going to Re-use Saved Token: %@
%@-%@ %ld (loc=%ld) Adding Leftover Token to children: %@
Production: %@
startToken: '%c', langSpec: %@, predictSet: %@
startToken: %d (%@), startProd %@, langSpec: %@, predictSet: %@, interiorPredictSet: %@,%@, interiorProductionRules: %@
Start
Until
Rules
Match
xcode.lang.generated.
AltEnd
AltUntil
Recursive
c32@?0@"SourceModelParserProductionRule"8Q16^c24
q24@?0@"SourceModelParserProductionRule"8@"SourceModelParserProductionRule"16
xcode.lang.cpp.interestingOperators
xcode.lang.cpp.anoperator
xcode.lang.cpp
xcode.lang.cpp.operatorclause
%@: currentRuleIndex %lu, completeMatch %d
<%@: %p> (
{%lu, %lu}
xcode.lang.generated.indent
xcode.lang.generated.fullindent
xcode.lang.generated.dedent
Invalid language spec for '%@'
%@ (loc=%ld) %@ Predicts: %s
%@-%@ %ld (loc=%ld) Starting out with a saved token (re-saving): %@
[%@ PARSE] *** (loc=%ld) Got token: %@
%@-%@ %ld (loc=%ld) Saved token matched rule "%@": %@
[%@ PARSE] *** (loc=%ld) calling predictsRule(%@): %@
RuleScanner: Adding to dirty range: %@
[%@ PARSE] *** (loc=%ld) Got Node: %@
[%@ PARSE] *** (loc=%ld) Didn't match
[%@ PARSE] *** (loc=%ld) Didn't Match '\n' - skipping it
%@-%@ %ld (loc=%ld) (possibly) re-saving saved token: %@
[%@ PARSE] *** (loc=%ld) Matched Token: %@
%@-%@ %ld (loc=%ld) Adding saved token to children: %@
%@-%@ %ld (loc=%ld) Got non-volitile token: %@
[%@ PARSE] *** (loc=%ld) Didn't Match Token: %@
RuleScanner: clearing saved tokens (if any)
RuleScanner:      dropping token %@
RuleScanner:      putting indent/dedent back!
Rule "%@" (loc=%ld) Returning Item: %@
%@-%@ %ld (loc=%ld) Failed, Saving node: %@
SMSourceNodeTypesReadWriteQueue
xcode.syntax.plain
xcode.syntax.comment.doc.keyword
xcode.syntax.mark
xcode.syntax.url
xcode.syntax.attribute
xcode.syntax.declaration.type
xcode.syntax.declaration.other
xcode.syntax.identifier.class
xcode.syntax.identifier.function
xcode.syntax.identifier.constant
xcode.syntax.identifier.type
xcode.syntax.identifier.variable
xcode.syntax.identifier.macro
xcode.syntax.identifier.class.system
xcode.syntax.identifier.function.system
xcode.syntax.identifier.constant.system
xcode.syntax.identifier.type.system
xcode.syntax.identifier.variable.system
xcode.syntax.identifier.macro.system
xcode.syntax.entity
xcode.syntax.markup.code
xcode.syntax.markup.emphasis
xcode.syntax.markup.emphasis.strong
xcode.syntax.markup.strikethrough
xcode.syntax.markup.aside.kind
XCLanguage
language
xclangspec
IncludeInMenu
UsesCLikeIndentation
SourceScannerClassName
NumberScanner
RegExScanner
HTMLScanner
HTMLEntityScanner
IndentScanner
Name
.keyword
xcode.lang.objc.interface
xcode.lang.objc.interface.declarator
xcode.lang.objc.implementation
xcode.lang.objc.implementation.declarator
xcode.lang.objc.block
xcode.lang.objc.property.declaration
xcode.lang.objc.method.declaration
xcode.lang.objc.method.definition
xcode.lang.objc.classmethod.declaration
xcode.lang.objc.classmethod.definition
xcode.lang.objc.parenexpr
xcode.lang.objc.bracketexpr
xcode.lang.objc.property.implementation.synthesize
xcode.lang.objc.property.implementation.dynamic
xcode.lang.objc.category.openparen
xcode.lang.objc.categoryclause
xcode.lang.objc.classname
xcode.lang.objc.categoryname
Regex scanner "%@" shouldn't have a Tokenizer. Ignoring it.
Invalid language spec: "%@": 'Chars' given, but not 'StartChars'
MaxLinesPerToken
Warning: language spec %@ contains both CaptureTypes and IncludeRules. IncludedRules will be ignored.
RegEx "%@" (loc=%ld) Returning Item: %@
xcode.lang.generated.emptyline
GenerateEmptyLine
IndentWidth
xcode.lang.python.identifier
%@-%@ %ld (loc=%ld) Computed new context: %@
IndentScanner called as a non-lexer
%@-%@ %ld (loc=%ld) Generated (and saving) empty line: %@
%@-%@ %ld (loc=%ld) Generated (and saving) indent: %@
%@-%@ %ld (loc=%ld) Generated (and saving) dedent: %@
%@-%@ %ld (loc=%ld) EOL, but no indentation change necessary.
Ignore
AltToken
EscapeChar
ParseEndBeforeIncludedRules
-[ScopeScanner nextToken:]: Tossing saved token by mistake: %@
-[ScopeScanner nextToken:]: Tossing a token by mistake: %@
%@-%@ %ld (loc=%ld) Looking at saved token: %@
%@-%@ %ld (loc=%ld) Adding Saved Start Token to children: %@
%@-%@ %ld (loc=%ld) Resaving unwanted End Token: %@
%@-%@ %ld (loc=%ld) Adding End Token to children: %@
%@-%@ %ld (loc=%ld) End Token doesn't match context: %@
-[ScopeScanner parseRecursive]: Surprised to be saving token at end: %@
-[ScopeScanner parseRecursive]: Adding Leftover Token to children before returning: %@
ScopeScanner: Comment, so adding to dirty range: %@
Block "%@" (loc=%ld) Returning Item: %@
%@-%@ %ld (loc=%ld) Looking at Saved Token: %@
%@-%@ %ld (loc=%ld) Remembering Saved End Token for later: %@
%@-%@ %ld (loc=%ld) Adding Saved End Token to children: %@
ScopeScanner Comment, so adding to dirty range: %@
Block (nonRecur) "%@" (loc=%ld) Returning Item: %@
xcspec
DVTSpecificationErrorDomain
Identifier
BasedOn
Description
IsMissing
DVTExtraSourceSpecificationPaths
LanguageSpecifications
Library/Developer/Xcode/Specifications
SourceSpecificationLoading
Generic
couldn't register specification: unknown type '%@'
couldn't register specification: %@
Expected to find a dictionary as the %lu-th element but found %@.
No 'Type' key present, and none can be inferred from the filename suffix.
Language
FileType
PropertyPane
SourceDescription
file at '%@'
Couldn't load '%@'. Reason: %@.
malformed specification of %3$@ %1$@ -- the '%2$@' key must be non-empty
<unknown>
<%@:%p:'%@'%@>
:MISSING
%@SourceModelItem<%0lx>: %@ (%ld, %ld), rel=(%ld, %ld), nodeType=%@, tok=%@, inherit=%lc, ignore=%lc, block=%lc, volatile=%lc, dirty=%lc, children = %ld
SourceModelItem<%0lx>: %@ (%ld, %ld), rel=(%ld, %ld), lang=%ld, nodeType=%ld, tok=%@, inherit=%lc, ignore=%lc, block=%lc, volatile=%lc, dirty=%lc, children = %ld
IBOutlet
IBOutletCollection
IBAction
IBSegueAction
@end
@private
@public
@protected
@property
__unsafe_unretained
__weak
<unterminated raw string>
flex scanner jammed
fatal flex scanner internal error--no action found
out of dynamic memory in yy_create_buffer()
out of dynamic memory in yy_scan_buffer()
out of dynamic memory in yy_scan_bytes()
bad buffer in yy_scan_bytes()
yyset_lineno called with no buffer
yyset_column called with no buffer
xcode.lang.swift.anoperator
__consuming
__owned
__shared
Protocol
Self
actor
assignment
associatedtype
associativity
async
await
break
case
catch
class
continue
convenience
default
defer
deinit
didSet
dynamic
dynamicType
else
enum
extension
fallthrough
false
fileprivate
final
func
guard
higherThan
import
indirect
infix
init
inout
internal
isolated
lazy
left
lowerThan
mutating
none
nonisolated
nonmutating
open
operator
optional
override
postfix
precedence
precedencegroup
private
protocol
public
repeat
required
rethrows
return
right
safe
some
static
struct
subscript
switch
throw
throws
true
typealias
unowned
unsafe
weak
where
while
willSet
@GKInspectable
@IBAction
@IBDesignable
@IBInspectable
@IBOutlet
@IBSegueAction
@NSApplicationMain
@NSCopying
@NSManaged
@Sendable
@UIApplicationMain
@actorIndependent
@asyncHandler
@autoclosure
@available
@convention
@discardableResult
@dynamicMemberLookup
@escaping
@frozen
@globalActor
@inlinable
@inline
@main
@nonobjc
@noreturn
@objc
@objcMembers
@propertyWrapper
@requires_stored_property_inits
@resultBuilder
@testable
@unchecked
@unknown
@usableFromInline
@warn_unqualified_access
#available
#colorLiteral
#column
#dsohandle
#else
#elseif
#endif
#error
#file
#fileID
#fileLiteral
#filePath
#function
#imageLiteral
#keyPath
#line
#selector
#sourceLocation
#unavailable
#warning
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
out of dynamic memory in yy_get_next_buffer()
out of dynamic memory in yyensure_buffer_stack()
<raw string>
__alignof
__alignof__
__asm
__asm__
__attribute__
__auto_type
__block
__builtin_choose_expr
__builtin_offsetof
__builtin_types_compatible_p
__builtin_va_arg
__complex
__complex__
__const
__const__
__extension__
__func__
__imag
__imag__
__label__
__nonnull
__nullable
__null_unspecified
__real
__real__
__restrict
__restrict__
__signed
__signed__
__thread
__typeof
__typeof__
__volatile
__volatile__
__FUNCTION__
__PRETTY_FUNCTION__
_Bool
_Complex
_Decimal32
_Decimal64
_Decimal128
_Imaginary
_Nonnull
_Nullable
_Nullable_result
_Null_unspecified
auto
bool
char
const
double
extern
float
goto
inline
long
register
restrict
short
signed
sizeof
typedef
typeof
union
unsigned
void
volatile
FALSE
NULL
TRUE
_Alignas
_Alignof
_Atomic
_Generic
_Noreturn
_Static_assert
_Thread_local
_cmd
__autoreleasing
__bridge
__bridge_transfer
__bridge_retained
__kindof
__strong
@autoreleasepool
@catch
@class
@compatibility_alias
@defs
@dynamic
@encode
@finally
@implementation
@import
@interface
@optional
@package
@protocol
@required
@synchronized
@synthesize
@throw
@try
bycopy
byref
oneway
BOOL
IBInspectable
IB_DESIGNABLE
nonnull
nullable
null_unspecified
NS_DURING
NS_ENDHANDLER
NS_HANDLER
NS_VALUERETURN
NS_VOIDRETURN
instancetype
assert
define
defined
elif
endif
error
ifdef
ifndef
include
include_next
line
pragma
unassert
undef
warning
__private_extern__
and_eq
bitand
bitor
compl
const_cast
delete
dynamic_cast
explicit
export
friend
mutable
namespace
not_eq
or_eq
protected
reinterpret_cast
static_cast
template
typeid
typename
using
virtual
wchar_t
xor_eq
alignof
char16_t
char32_t
constexpr
decltype
noexcept
nullptr
static_assert
thread_local
__has_nothrow_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_abstract
__is_base_of
__is_class
__is_convertible_to
__is_empty
__is_enum
__is_literal
__is_literal_type
__is_pod
__is_polymorphic
__is_trivial
__is_union
__is_trivially_copyable
__underlying_type
atomic
setter
getter
readonly
readwrite
assign
retain
copy
nonatomic
strong
unsafe_unretained
null_resettable
direct
__covariant
swift_getFunctionTypeMetadataGlobalActor
swift_getFunctionTypeMetadataGlobalActorStandalone
mainBundle
localizedStringForKey:value:table:
setWithObject:
specificationType
initWithPropertyListDictionary:
objectForKey:
boolValue
specificationTypeBaseClass
localizedSpecificationTypeName
specificationTypePathExtensions
specificationRegistryName
inheritsNodeType
isMark
ignoreToken
nameFormat
setNameFormat:
.cxx_destruct
_nameFormat
_inheritsNodeType
_isMark
_ignoreToken
Tc,R,V_inheritsNodeType
Tc,R,V_isMark
Tc,R,V_ignoreToken
T@"NSString",C,V_nameFormat
languageSpecification
initializeLanguageSpecification:
initializeLexerModes
specificationForIdentifier:
addTokenForString:
syntaxRules
objectAtIndex:
syntaxType
registerNodeTypeNamed:
productionRule
setLexerMode:
setInteriorRuleMayHaveTemporaryLexerFlags:
interiorProductionRules
setTemporaryLexerFlags:
createTerminalNodeForToken:scopeProductionRule:
uniqueId
sourceModelItemWithRange:language:token:nodeType:
setIgnoreToken:
setInheritsNodeType:
shouldTraverse
setShouldTraverse:
isBlock
setIsBlock:
setVolatile:
_resetLexerWithInputString:
_beginLexerMode:
initialize
length
_currentLocation
_getNextToken:temporaryFlags:
_setCurrentLocation:
_endLexerMode:
_lexer
initWithPropertyListDictionary:language:
dictionary
allKeys
countByEnumeratingWithState:objects:count:
valueForKey:
numberWithInteger:
lowercaseString
setValue:forKey:
parse:withContext:initialToken:inputStream:range:dirtyRange:
token
numberOfChildren
string
children
range
substringWithRange:
integerValue
setToken:
_entityMap
stringWithCString:encoding:
stringWithFormat:
exceptionWithName:reason:userInfo:
initializeProductionsForLanguageSpecification:
init
identifier
tokenForString:
array
indexSet
itemToken
itemSyntaxType
_parse:inScope:node:outOfBand:depth:
_getRawStringDelimLength
count
tokenInteriorPredictSet
nodeInteriorPredictSet
_reuseScopeNode:using:
_reuseAndSkipAhead:index:location:
endProductions
matchEndNode:
_setRawStringDelimLength:
matchEndToken:
saveToken
setRange:
_branchToReuseInScope:atLocation:node:
_parseOutOfBand:
langId
addObject:
_acceptChildrenInScope:atIndex:stackRange:node:
lastObject
isIdentifier
nodeType
setNodeType:
_initializeProductionStateForCurrentToken:tokenInteriorPredictSet:tokenInteriorPredictSetCount:
matchToken:currentStackTop:
removeIndex:
ignoreNodes
_initializeProductionStateForNode:scopeProdRule:nodeInteriorPredictSet:nodeInteriorPredictSetCount:
matchNode:currentStackTop:
firstIndex
completeMatch
_atEndOfParseRange
scopeProduction
indexGreaterThanIndex:
currentProduction
isEqual:
_hoistUpTrailingIgnoreNodesFromNode:toArray:
temporaryLexerFlags
epsilonMatch
objectsAtIndexes:
reduceToProduction:stackOffset:
langSpec
_reduceToProduction:stackRange:node:inScope:
removeObjectsAtIndexes:
removeAllIndexes
lexerMode
indexSetWithIndexesInRange:
insertObjects:atIndexes:
addIndexesInRange:
addIndexes:
mutableChildren
removeObjectsInRange:
addObjectsFromArray:
replaceObjectsInRange:withObjectsFromArray:
_discardChildrenInScope:fromIndex:toLocation:
dirty
indexOfProductionMatchingToken:inProduction:
startToken
resetWithProductionRule:stackOffset:
initWithProductionRule:stackOffset:
addIndex:
indexOfProductionMatchingNode:inProduction:
startProduction
itemIsVolatile
addChildren:
removeAllObjects
addChildrenFromArray:inRange:
addChild:
subarrayWithRange:
_replaceItemsWithinRange:newArray:index:
assignParents:
makeObjectsPerformSelector:withObject:
arrayWithObject:
childEnclosingLocation:
parent
setParent:
setDirty:
insertObject:atIndex:
removeLastObject
parse:withContext:inputString:range:dirtyRange:
_langSpec
_langId
_langToken
_currentToken
_parseRange
_saveToken
_validToken
_previousTokenRange
_nodeStack
_productionState
_validProductionStates
_dirtyRange
stringWithUTF8String:
isPlainMacro:
isFunctionMacro:
isEnumMacro:
setWithArray:
standardUserDefaults
stringByAppendingString:
arrayForKey:
bundleForClass:
resourcePath
stringByAppendingPathComponent:
dictionaryWithContentsOfFile:
getMacros:forName:
containsObject:
hasPrefix:
setString:
initWithRealString:subrange:
hasSavedItems
setLocation:
_computeBOL
nextCharSkippingWhitespace
location
rangeOfCharacterFromSet:options:range:
characterSetWithCharactersInString:
setRealString:subrange:
initWithString:
nextChar
isAtBOL
isAtColumnZero
peekChar
peekCharSkippingWhitespace
peekCharacterInSet:
locationOfNewlineFrom:searchBackwards:
stringWithRange:
saveItem:
savedItem
_stringBuffer
_realString
_cheapString
_savedItems
_savedBottomItem
_isAtBOL
_isAtColumnZero
_BOLIsKnown
_SeenOneCharAtBOL
_SeenWhitespaceAtBOL
getCharacters:range:
boolForKey:
setSourceBufferProvider:
language
isMissingSpecificationProxy
nativeSourceModelParserClass
scanner
setScanner:
sourceBufferProvider
setDirtyRange:
setInputStream:
objectAtIndexedSubscript:
dirtyRightEdge:
sourceItems
description
needToDirtyRightEdges
indexOfChildBeforeLocation:
previousAncestralSibling
dirtyRange:changeInLength:
lineRangeForRange:
dirtyRange
setSourceItems:
inputStream
assignAllParents:
scheduleLazyInvalidationForRange:
validate
diffableDescription
isEqualToString:
childAdjoiningLocation:
parenLikeItemAtLocation:
methodDeclaratorItemAtLocation:
lineRangeForCharacterRange:
leadingWhitespacePositionsForLine:
isItemSemanticBlock:
blockDepth
isItemParenExpression:
isItemBracketExpression:
characterAtIndex:
isItemObjectLiteral:
addRange:
firstObject
previousItem
_builtUpNameForSubTree:mutableNameRanges:
specification
_builtUpNameForItem:mutableNameRanges:
enclosingItemAtLocation:
ancestorOfItem:inTypeList:
nodeTypeListForTypeNames:
itemAtLocation:inTypeList:
enumerateDescendentsUsingBlock:
enumerateIdentifierItemsInRelativeRange:usingBlock:
isItemUnclosedHTMLEntity:
builtUpNameForItem:nameRanges:
initWithRanges:count:
nameOfItem:nameRanges:scopeRange:
precedingItem
arrayWithObjects:
itemsAtLocation:inTypeList:
nextItem
addItemsInTypeList:fromItem:toArray:
addIdentifierItemsFromItem:toArray:
addBlockItemsInTypeList:fromItem:toArray:
arrayWithCapacity:
commentAtLocation:
docCommentAtLocation:
preprocessorStatementAtLocation:
includeStatementAtLocation:
stringConstantAtLocation:
identOrKeywordItemAtLocation:
characterConstantAtLocation:
numberConstantAtLocation:
completionPlaceholderItemAtLocation:
isItemExpression:startingWith:
appendString:
substringFromIndex:
enumCaseDeclaratorItemAtLocation:
stringWithString:
indexOfObjectIdenticalTo:
isItemAngleExpression:
enableNativeParser
setEnableNativeParser:
initWithSourceBufferProvider:
doingBatchEdit:
usesNativeParser
parse
_topLevelSourceItem
adjoiningItemAtLocation:
indentForItem:
blockItemAtLocation:
foldableBlockItemForLineAtLocation:
foldableBlockItemForLocation:
parenItemAtLocation:
objectLiteralItemAtLocation:
itemAtLocation:ofType:
itemAtLocation:conformingToSpecification:
enumerateItemsUsingBlock:
enumerateIdentifierItemsInRange:usingBlock:
textOfItem:
itemNameAtLocation:inTypeList:nameRanges:scopeRange:
methodOrFunctionRangeAtRange:
classAtLocation:
containersAtLocation:
typeDeclarationAtLocation:
interfaceDeclarationAtLocation:
isDeclarationOrDefinitionAtLocation:
functionOrMethodAtLocation:
functionOrMethodDefinitionAtLocation:
semanticItemAtLocation:
classItems
functionsAndMethodItems
commentBlockItems
parameterDescriptionItems
parameterNameItemFromItem:
identifierItemsFromItem:
placeholderItemsFromItem:
moduleImportStatementAtLocation:
isInCommentAtLocation:
isInDocCommentAtLocation:
isInPreprocessorStatementAtLocation:
isInIncludeStatementAtLocation:
isInStringConstantAtLocation:
isInIdentifierAtLocation:
isInCharacterConstantAtLocation:
isInNumberConstantAtLocation:
isIncompletionPlaceholderAtLocation:
isInKeywordAtLocation:
isInPlainCodeAtLocation:
isInTokenizableCodeAtLocation:
isPostfixExpressionAtLocation:
isItemBraceExpression:
isItemContainer:
isItemDeclaratorName:
isItemForStatement:
isItemDictionaryLiteral:
isItemInPreprocessorStatement:
methodNameForItem:nameRanges:
firstPrecedingAttributeOfItem:
item:hasPrecedingToken:
isDoingBatchEdit
setIsDoingBatchEdit:
_sourceBufferProvider
_inputStream
_scanner
_sourceItems
_isDoingBatchEdit
_nativeParser
T@"<SMSourceBufferProvider>",V_sourceBufferProvider
T@"CharStream",&,V_inputStream
T@"SourceScanner",&,V_scanner
Tc,V_isDoingBatchEdit
T@"SMSourceModelItem",&,V_sourceItems
T{_NSRange=QQ},V_dirtyRange
objCDeclaratorItemAtLocation:
objCMethodNameForItem:nameRanges:
sourceModelInfoForSourceModelItem:matchingAnnotationKindMask:
identifierForUniqueId:
hasSuffix:
addCharactersInString:
uppercaseString
substringToIndex:
invert
initWithArrayOfStrings:caseSensitive:
characterIsMember:
containsToken:
nextToken:withContext:initialToken:outputRange:
includedRules
parseIncludedRules:inTree:withContext:initialToken:inputStream:range:dirtyRange:
setIsSimpleToken:
simpleDescription
predictsRule:inputStream:
canTokenize
wordRangeInString:fromIndex:
_startSet
_invertedOtherSet
_keywords
_caseSensitive
_wordBreak
_isSimpleToken
_checkPreprocessorKnownMacros
strongToStrongObjectsMapTable
setObject:forKey:
copy
globalTokenNames
setGlobalToken:forString:
nextGlobalToken
addGlobalTokenName:
allObjects
mutableCopy
replaceObjectAtIndex:withObject:
addArrayOfStrings:
allTokens
setCaseSensitive:
_tokens
loadAndCacheDefaultSourceCodeLanguages
loadAndCacheSourceCodeLanguageWithPlist:
objectForKeyedSubscript:
initWithLanguageDescription:
arrayFromArrayOfDicts:withKey:
arrayWithObjects:count:
URLsForResourcesWithExtension:subdirectory:
_sourceCodeLanguageForMetadata:
setObject:forKeyedSubscript:
fileExtensions
fileDataTypeIdentifiers
dictionaryWithContentsOfURL:
registerSourceCodeLanguageWithMetadata:
sourceCodeLanguageWithIdentifier:
conformedToLanguages
conformsToLanguage:
registerSourceCodeLanguageFromMetadataPlist:
sourceCodeLanguages
sourceCodeLanguageForLanguageSpecificationIdentifier:
sourceCodeLanguageForFileExtension:
sourceCodeLanguageForFileDataTypeIdentifier:
copyWithZone:
languageName
documentationAbbreviation
supportsIndentation
allowWhitespaceTrimming
requiresHardTabs
indentationTriggers
scriptingLanguage
isHidden
usesColorLiteral
usesFileLiteral
usesImageLiteral
lineCommentPrefixes
blockCommentCircumfixes
lineDocumentationPrefixes
blockDocumentationCircumfixes
standardTypes
_identifier
_languageName
_languageSpecificationIdentifier
_languageSpecification
_documentationAbbreviation
_fileDataTypeIdentifiers
_fileExtensions
_conformedToLanguageIdentifiers
_conformedToLanguages
_supportsIndentation
_allowWhitespaceTrimming
_requiresHardTabs
_indentationTriggers
_scriptingLanguage
_commentSyntaxes
_lineCommentPrefixes
_blockCommentCircumfixes
_documentationSyntaxes
_lineDocumentationPrefixes
_blockDocumentationCircumfixes
_standardTypes
_isHidden
_usesColorLiteral
_usesFileLiteral
_usesImageLiteral
_nativeSourceModelParserClass
T@"NSString",R,C,V_identifier
T@"NSString",R,C,V_languageName
T@"NSArray",R,C,V_fileExtensions
T@"NSArray",R,C,V_fileDataTypeIdentifiers
T@"SMLanguageSpecification",R
T@"NSString",R,C,V_documentationAbbreviation
T@"NSArray",R,C
T#,R,V_nativeSourceModelParserClass
Tc,R,V_supportsIndentation
Tc,R,V_allowWhitespaceTrimming
Tc,R,V_requiresHardTabs
T@"NSArray",R,V_indentationTriggers
Tc,R,V_scriptingLanguage
Tc,R,V_isHidden
Tc,R,V_usesColorLiteral
Tc,R,V_usesFileLiteral
Tc,R,V_usesImageLiteral
T@"NSArray",R,C,V_lineCommentPrefixes
T@"NSArray",R,C,V_blockCommentCircumfixes
T@"NSArray",R,C,V_lineDocumentationPrefixes
T@"NSArray",R,C,V_blockDocumentationCircumfixes
T@"NSArray",R,C,V_standardTypes
hash
_realStringLength
_subrange
_hashValue
_hashValueValid
invertedSet
rangeOfCharacterFromSet:
whitespaceAndNewlineCharacterSet
_stringByRemovingLeadingAndTrailingCharacters:fromString:
caseInsensitiveCompare:
parseRecursive:withContext:depth:inputStream:range:dirtyRange:
actionForEndToken:inContext:inputStream:
integerForKey:
decimalDigitCharacterSet
alphanumericCharacterSet
name
tossSavedItems:withContext:
updateContext:forReusedNode:inputStream:
nodeToReuse:withContext:forScanner:inputStream:
nodeForThisScanner:atLocation:inputStream:
replaceObjectsInRange:withObjectsFromArray:range:
indexOfChildAtLocation:
parseOneIncludedRule:inTree:withContext:initialToken:inputStream:range:dirtyRange:isLexing:reusedToken:
setNeedToDirtyRightEdges:
initWithLanguageSpecification:
wordRangeInString:fromIndex:allowNonWords:
lexer
_includedRules
_token
_nodeType
_altNodeType
_startAtBOL
_startAtColumnZero
_isFoldable
_shouldTraverse
_altIgnoreToken
_altInheritsNodeType
_needToDirtyRightEdges
_isVolatile
Tq,R,V_langId
Tq,R,V_token
T@"SourceScanner",R,V_lexer
T@"SMLanguageSpecification",R,V_langSpec
T@"NSArray",R,V_includedRules
stringByDeletingTrailingOption
initWithProductionRule:optional:repeatable:
prodRule
optional
repeatable
nextCandidate
setNextCandidate:
_optional
_repeatable
_prodRule
_nextCandidate
_temporaryLexerFlags
T@"SourceModelParserProductionRule",R,N,V_prodRule
Tc,R,N,V_optional
Tc,R,N,V_repeatable
T@"SourceModelParserInteriorProductionRule",&,N,V_nextCandidate
TQ,N,V_temporaryLexerFlags
arrayWithArray:
dealloc
getObjects:range:
matchToken:
matchNode:
production
tokenForSymbol:
initWithStartToken:langSpec:predictSet:
initWithStartProduction:langSpec:
setTokenInteriorPredictSet:
setNodeInteriorPredictSet:
interiorRuleMayHaveTemporaryLexerFlags
setEndProductions:
endTokens
setEndTokens:
predictSet
setInteriorProductionRules:
saveEndToken
setItemToken:
setItemSyntaxType:
setItemIsVolatile:
_tokenPredictSetBuffer
_tokenPredictSetBufferSize
_nodePredictSetBuffer
_nodePredictSetBufferSize
_interiorRuleMayHaveTemporaryLexerFlags
_saveEndToken
_isBlock
_itemIsVolatile
_itemSyntaxType
_startToken
_startProduction
_endProductions
_endTokens
_predictSet
_tokenInteriorPredictSet
_nodeInteriorPredictSet
_interiorProductionRules
_itemToken
_lexerMode
T@"NSArray",&,N,V_endProductions
T@"NSArray",&,N,V_endTokens
T@"NSArray",&,N,V_tokenInteriorPredictSet
T@"NSArray",&,N,V_nodeInteriorPredictSet
T@"NSArray",&,N,V_interiorProductionRules
Tq,N,V_itemToken
Ts,N,V_itemSyntaxType
Tc,N,V_isBlock
Tc,N,V_shouldTraverse
Tc,N,V_inheritsNodeType
Tc,N,V_ignoreToken
Tc,N,V_itemIsVolatile
Ti,R,N,V_startToken
T@"SMLanguageSpecification",R,N,V_startProduction
T@"NSArray",R,N,V_predictSet
T@"SMLanguageSpecification",R,N,V_langSpec
Tc,R,N
Tc,R,N,V_saveEndToken
TQ,N,V_lexerMode
Tc,N,V_interiorRuleMayHaveTemporaryLexerFlags
initWithProduction:saveToken:
_production
T@"SMLanguageSpecification",R,N,V_production
Tc,R,N,V_saveToken
initWithToken:saveToken:
Ti,R,N,V_token
componentsSeparatedByString:
orderedSetWithArray:
setProductionRule:
setArray:
indexesOfObjectsPassingTest:
sortUsingComparator:
tokenForString:forRange:subItems:
stringByAppendingFormat:
_productionRule
_stackOffset
_innerState
_currentRuleIndex
_canSkipCurrentRule
_hasInnerState
_completeMatch
_epsilonMatch
_ignoreNodes
Tc,R,N,V_completeMatch
Tc,R,N,V_epsilonMatch
T@"SourceModelParserProductionRule",R,N
TQ,R,N
TQ,R,N,V_ignoreNodes
rangeValue
rangeAtIndex:
setVersion:
isEqualToArray:
allocWithZone:
valueWithRange:
initWithObjects:count:
initWithRange:
mutableCopyWithZone:
descriptionWithLocale:
indexOfRange:
firstRange
lastRange
indexOfRangePreceding:
indexOfRangeFollowing:
indexOfRangeContainingOrPreceding:
indexOfRangeContainingOrFollowing:
getRanges:count:
normalizedRangeArray
sortedRangeArray
_count
_ranges
initWithCapacity:
removeAllRanges
insertRange:atIndex:
removeRangeAtIndex:
setRange:atIndex:
getIndexes:maxCount:inIndexRange:
removeObjectAtIndex:
removeRangesAtIndexes:
replaceRangeAtIndex:withRange:
addRangesFromArray:
normalize
sort
_capacity
appendFormat:
setWithCapacity:
matchesToken:
allowMultiple
_tokenSet
_allowMultiple
Tc,R,V_optional
Tc,R,V_allowMultiple
T@"SourceScanner",R,V_scanner
rangeOfString:
nextToken:withItemArray:inTree:withContext:initialToken:range:dirtyRange:
isVolatile
_rules
_startChar
dictionaryWithCapacity:
shortValue
numberWithShort:
nodeTypeNameForId:
nodeTypesCount
nodeType:conformsToNodeTypeNamed:
nodeType:conformsToNodeTypesInList:
subSpecifications
_uniqueIdForIdentifier:
stringForKey:
lexerKeywords
availableKeywords
includeInMenu
usesCLikeIndentation
scannerClass
_uniqueId
_scannerClass
_syntaxRules
_includeInMenu
_usesCLikeIndentation
Tq,R,V_uniqueId
Tc,R,V_includeInMenu
Tc,R,V_usesCLikeIndentation
T#,R,V_scannerClass
T@"NSDictionary",R,V_syntaxRules
T@"NSString",R
T@"SourceModelParserProductionRule",&,V_productionRule
superSpecification
conformsToSpecification:
isObjCGenericInstanceMethodSpecification
isObjCGenericClassMethodSpecification
objCInstanceMethodDeclarationSpecification
objCInstanceMethodImplementationSpecification
objCClassMethodDeclarationSpecification
objCClassMethodImplementationSpecification
conformsToSpecificationForIdentifier:
conformsToAnySpecificationInSet:
isObjCGenericMethodSpecification
specificationLineage
objCInterfaceSpecification
objCInterfaceDeclaratorSpecification
objCImplementationSpecification
objCImplementationDeclaratorSpecification
objCBlockSpecification
objCIdentifierSpecification
objCPropertyDeclarationSpecification
objCParenthesisExpressionSpecification
objCBracketExpressionSpecification
objCAtSynthesizeSpecification
objCAtDynamicSpecification
objCCategoryOpenParenSpecification
objCCategoryClauseSpecification
objCClassNameSpecification
objCCategoryNameSpecification
regularExpressionWithPattern:options:error:
firstMatchInString:options:range:
locationOfNextNewlineFrom:until:inStream:
nextToken:initialToken:until:outputRange:subItems:
offsetBy:
_regExes
_captureNodeTypes
_altIsSimpleToken
_isURL
_maxLinesPerToken
computeContext:inString:forLocation:
nextIndentForlocation:inString:
numberWithUnsignedInteger:
_indentForLineWithRange:inString:
numberWithUnsignedInt:
unsignedIntValue
_indentWidth
_generateEmptyLine
_isPython
initWithString:acceptToken:
firstChar
acceptToken
_firstChar
_string
_acceptToken
TS,R,V_firstChar
T@"NSString",R,V_string
Tc,R,V_acceptToken
parseRule:into:acceptToken:
tokenForRule:initialToken:inputStream:newLocation:
nextToken:withItem:inTree:withContext:initialToken:insideBlock:range:dirtyRange:reusedToken:
matchingIgnoreRule:
matchingRule:isAltRule:
startString
startChar
escapeChar
recursive
parseEndBeforeIncludedRules
caseSensitive
ignoreRules
endRules
altEndRules
altToken
defaultManager
homeDirectoryForCurrentUser
path
fileExistsAtPath:isDirectory:
stringByStandardizingPath
registerSpecificationProxiesFromPropertyListsInDirectory:recursively:
registerSpecificationTypeBaseClass:
searchForAndRegisterAllAvailableSpecifications
specificationRegistry
_typesToSpecTypeBaseClassesRegistry
dictionaryWithObject:forKey:
errorWithDomain:code:userInfo:
registerSpecificationOrProxy:
reason
registerSpecificationProxyFromPropertyList:
contentsOfDirectoryAtPath:error:
attributesOfItemAtPath:error:
fileType
pathExtension
_pathExtensionsToTypesRegistry
initWithContentsOfFile:
initWithData:encoding:
propertyList
_registerSpecificationProxiesOfType:fromDictionaryOrArray:inDirectory:bundle:sourceDescription:
_shouldRecurseIntoDirectoryNamed:ofType:
registerSpecificationProxiesFromPropertyListsInDirectory:recursively:inBundle:
missingSpecificationForIdentifier:
initAsMissingSpecificationProxyWithIdentifier:name:description:
registerMissingSpecification:forIdentifier:
allValues
registeredSpecifications
raise:format:
initWithDictionary:
dictionaryWithObjectsAndKeys:
_objectForKeyIgnoringInheritance:
_subSpecificationsOfSpecification:
specificationsForIdentifiers:
isKindOfSpecification:
identifierCompare:
nameCompare:
superSpecIdentifier
properties
_superSpecIdentifier
_superSpecification
_properties
T@"NSString",R,V_identifier
T@"NSString",R,V_superSpecIdentifier
T@"SMSourceSpecification",R,V_superSpecification
T@"NSDictionary",R,V_properties
initWithRange:language:token:nodeType:
setLangId:
stringWithCapacity:
innerDescription:showSelf:
contextArray
dirtyRelativeRange:changeInLength:
innerRange
indexOfChildAfterLocation:
_childEnclosingLocation:
_firstLeafItem
_lastLeafItem
followingItem
isAncestorOf:
isSwiftIdentifierOrKeyword
clearAdjustedNodeTypes
makeObjectsPerformSelector:
dumpContext
enclosingBlock
rangeBetweenChildrenAtLocation:
setIsOpaque:
isOpaque
rawNodeType
isKeyword
isSimpleToken
setNeedsAdjustNodeType:
needsAdjustNodeType
compare:
firstChildItemWithLangId:
setMutableChildren:
relativeLocation
setRelativeLocation:
_isOpaque
_dirty
_isIdentifier
_needsAdjustNodeType
_relativeLocation
_parent
_children
Tq,V_langId
Tq,V_token
T@"NSMutableArray",&,N,V_children
T{_NSRange=QQ},V_relativeLocation
T@"NSArray",R,N
T@"SMSourceModelItem",N,V_parent
isObjCInterfaceItem
isObjCCategoryInterfaceItem
isObjCImplementationItem
isObjCCategoryImplementationItem
isObjCClassExtensionItem
isObjCNamedCategoryInterfaceDeclaratorItem
isObjCNamedCategoryImplementationDeclaratorItem
isObjCInterfaceDeclaratorItem
firstDescendantItemConformingToSpecification:
isObjCImplementationDeclaratorItem
isObjCCategoryOpenParenItem
nameInSourceModel:
isKeyword:inSourceModel:
_contextMaskForAncestorIncludingSelf:
specificationIdentifier
allDescendantItemsConformingToSpecification:
unionSet:
isObjCStrictInterfaceItem
isObjCStrictImplementationItem
isObjCBlockItem
isObjCIdentifierItem
isObjCPropertyDeclarationItem
isObjCInstanceMethodDeclarationItem
isObjCInstanceMethodImplementationItem
isObjCClassMethodDeclarationItem
isObjCClassMethodImplementationItem
isObjCBracketExpressionItem
isObjCGenericMethodItem
isObjCGenericInstanceMethodItem
isObjCGenericClassMethodItem
isOutletKeywordInSourceModel:
isOutletCollectionKeywordInSourceModel:
isActionKeywordInSourceModel:
isSegueActionKeywordInSourceModel:
isClassIdentifierInSourceModel:
isObjCAtEndKeywordInSourceModel:
isObjCSuperKeywordInSourceModel:
isObjCAtPrivateKeywordInSourceModel:
isObjCAtPublicKeywordInSourceModel:
isObjCAtProtectedKeywordInSourceModel:
isObjCAtPropertyKeywordInSourceModel:
isTypeIdentifier
isARCTypeQualifierInSourceModel:
contextMask
ancestorContextMask
firstItemInLineageOfType:
objCClassItemNameInSourceModel:
objCCategoryItemNameInSourceModel:
containingObjCClassItem
precedingSiblingItem
followingSiblingItem
isFoldedInLayoutManager:
bufferLen
bufferLoc
stringLen
stringLoc
buffer
curChar
_unused
SMSyntaxTypeSpecification
ObjCSourceModelParser
CSourceModelParser
HTMLEntityScanner
SourceModelParser
KnownMacros
CharStream
SMSourceModel
Deprecated
RevlockIBDVTSourceModelAdditions
KeywordScanner
ObjCPlusPlusSourceModelParser
SMSourceTokens
SMSourceCodeLanguage
NSCopying
CheapReusableSubstring
HTMLScanner
SwiftSourceModelParser
SourceScanner
ParserStringAdditions
SourceModelParserInteriorProductionRule
SourceModelParserProductionRule
ScopeRule
ScopeToken
CPlusPlusSourceModelParser
NumberScanner
SourceModelParserProductionState
RangeArrayAdditions
RangeArray
MutableRangeArray
ScannerRule
RuleScanner
SMSourceNodeTypes
SMLanguageSpecification
FormerIBDVTFoundationAdditions
RegExScanner
IndentScanner
ScopeScannerRule
ScopeScanner
SMSourceSpecification
SMSourceModelItem
FormerIDEDVTSourceModelAdditions
StringBuffer
#16@0:8
@16@0:8
@24@0:8@16
c16@0:8
v24@0:8@16
v16@0:8
@"NSString"
@32@0:8^{?=ii{?=qq}*i}16^@24
v24@0:8Q16
Q16@0:8
c32@0:8^{?=ii{?=qq}*i}16Q24
@32@0:8@16q24
@72@0:8@16@24q32@40{_NSRange=QQ}48^{_NSRange=QQ}64
@"NSDictionary"
@64@0:8@16@24@32{_NSRange=QQ}40^{_NSRange=QQ}56
@56@0:8@16@24@32q40q48
Q40@0:8@16@24Q32
Q40@0:8@16Q24Q32
v40@0:8@16@24Q32
v48@0:8@16@24@32Q40
@56@0:8@16{_NSRange=QQ}24@40@48
Q56@0:8@16Q24{_NSRange=QQ}32@48
@40@0:8@16Q24@32
Q32@0:8@16@24
v32@0:8@16@24
@"SMLanguageSpecification"
{?="tokenType"i"tokenAltType"i"charRange"{?="location"q"length"q}"lexeme"*"outOfBand"i}
{?="location"q"length"q}
{_NSRange="location"Q"length"Q}
@"NSMutableArray"
@"NSMutableIndexSet"
@32@0:8@16@24
c24@0:8@16
S16@0:8
Q24@0:8@16
Q28@0:8Q16c24
@32@0:8{_NSRange=QQ}16
@"StringBuffer"
@"CheapReusableSubstring"
@"SMSourceModelItem"
v20@0:8c16
{_NSRange=QQ}24@0:8@16
v40@0:8{_NSRange=QQ}16q32
@24@0:8Q16
q24@0:8@16
@32@0:8@16^@24
@32@0:8@16^q24
@32@0:8Q16^q24
@32@0:8Q16@24
v24@0:8@?16
v40@0:8{_NSRange=QQ}16@?32
@40@0:8@16^@24^{_NSRange=QQ}32
@48@0:8Q16^q24^@32^{_NSRange=QQ}40
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
c24@0:8Q16
v40@0:8^q16@24@32
c28@0:8@16S24
c32@0:8@16q24
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"NSObject<SMSourceBufferProvider>"
@"CharStream"
@"SourceScanner"
@"SourceModelParser"
@32@0:8@16Q24
c32@0:8q16@24
q48@0:8@16@24q32^{_NSRange=QQ}40
{_NSRange=QQ}32@0:8@16Q24
@"NSCharacterSet"
@"SMSourceTokens"
q16@0:8
v32@0:8q16@24
@28@0:8@16c24
@"NSMutableSet"
@24@0:8^{_NSZone=}16
@"NSArray"
@40@0:8@16{_NSRange=QQ}24
v40@0:8@16{_NSRange=QQ}24
S24@0:8Q16
v40@0:8^S16{_NSRange=QQ}24
{_NSRange=QQ}48@0:8@16Q24{_NSRange=QQ}32
i40@0:8@16@24@32
v40@0:8@16@24@32
@48@0:8@16@24@32@40
q92@0:8@16@24@32q40@48{_NSRange=QQ}56^{_NSRange=QQ}72c80^c84
v80@0:8@16@24@32q40@48{_NSRange=QQ}56^{_NSRange=QQ}72
{_NSRange=QQ}36@0:8@16Q24c32
@32@0:8@16c24c28
@"SourceModelParserProductionRule"
@"SourceModelParserInteriorProductionRule"
i24@0:8@16
Q28@0:8i16@20
@36@0:8i16@20@28
c20@0:8i16
@20@0:8i16
i16@0:8
v24@0:8q16
s16@0:8
v20@0:8s16
@24@0:8i16c20
q40@0:8@16^{_NSRange=QQ}24^@32
v32@0:8@16Q24
c28@0:8i16Q20
c32@0:8@16Q24
@32@0:8^@16^Q24
@"SourceModelParserProductionState"
{_NSRange=QQ}24@0:8Q16
@32@0:8r^@16Q24
@32@0:8r^{_NSRange=QQ}16Q24
Q32@0:8{_NSRange=QQ}16
Q24@0:8Q16
v32@0:8^{_NSRange=QQ}16Q24
^{_NSRange=QQ}
v32@0:8Q16@24
v40@0:8{_NSRange=QQ}16Q32
v40@0:8Q16{_NSRange=QQ}24
c24@0:8q16
@"NSSet"
q80@0:8@16@24@32@40q48{_NSRange=QQ}56^{_NSRange=QQ}72
s24@0:8@16
@20@0:8s16
c28@0:8s16@20
^q24@0:8@16
c28@0:8s16r^q20
@24@0:8q16
Q40@0:8Q16Q24@32
q56@0:8@16q24Q32^{_NSRange=QQ}40^@48
q40@0:8{_NSRange=QQ}16@32
Q32@0:8Q16@24
v36@0:8@16@24c32
q48@0:8@16q24@32Q40
q92@0:8@16@24@32@40q48c56{_NSRange=QQ}60^{_NSRange=QQ}76^c84
@32@0:8q16^c24
@56@0:8@16@24@32@40@48
c32@0:8@16@24
@36@0:8@16c24@28
v24@0:8#16
@40@0:8@16@24@32
@"SMSourceSpecification"
@52@0:8{_NSRange=QQ}16q32q40s48
Q20@0:8c16
[32S]
@(#)PROGRAM:SourceModel  PROJECT:SourceModel-1
,BXn
XCSyntaxType
Syntax Type
xcsynspec
InheritsNodeType
IsMark
IgnoreToken
NameFormat
v48@?0@"NSString"8^@16^q24^s32^@40
CaptureTypes
xcode.lang.objc.identifier
xcode.syntax.identifier
xcode.lang.generated.preprocessor.ignore
xcode.lang.generated.preprocessor.function.ignore
NS_ENUM
xcode.lang.objc.string
xcode.lang.objc.interestingOperators
xcode.lang.objc.array.literal.start
xcode.lang.objc.dictionary.literal.start
xcode.lang.objc.expression.literal.start
xcode.lang.objc.property.options.identifier
xcode.syntax.keyword
xcode.lang.objc
xcode.lang.objc.property.options
xcode.lang.objc.method.declarator.args
xcode.lang.c.interestingOperators
xcode.lang.c.preprocessor.identifier
xcode.syntax.preprocessor.identifier
xcode.lang.string
xcode.lang.character
xcode.lang.c.number
xcode.lang.comment
xcode.lang.comment.singleline
xcode.lang.comment.headerdoc
xcode.lang.comment.headerdoc.singleline.bang
xcode.lang.comment.headerdoc.keywords
xcode.lang.url
xcode.lang.comment.mark
xcode.lang.c.preprocessor.mark.therest
xcode.lang.c.preprocessor
xcode.lang.c.preprocessor.systemIncludeString
xcode.lang.completionplaceholder
xcode.syntax.preprocessor.keyword
xcode.lang.c.identifier
xcode.lang.c
EntityNameMap
SourceModelParser internal error:%s near character location %ld
%@ must be an array of strings
Known
KnownMacros.plist
PlainMacros
FunctionMacros
EnumMacros
AVAILABLE_MAC_OS_X_VERSION_
DEPRECATED_IN_MAC_OS_X_VERSION_
v8@?0
DVTTextCheckParseTree
DVTTextValidateParseTree
DVTTextEnableNativeParser
com.apple.dt.SourceModel
SourceModel
TextResponsivenessPerformance
Couldn't load language spec for '%@'
Type
-[SourceModel dirtyRange:%@ lengthDelta:%ld] _dirtyRange was %@
-[SourceModel dirtyRange:lengthDelta:] _dirtyRange is now %@
-[SourceModel dirtyRange:lengthDelta:] _sourceItems (before): %@
-[SourceModel dirtyRange:lengthDelta:] _dirtyRange after right edge dirtying %@
-[SourceModel dirtyRange:lengthDelta:] _sourceItems (after): %@
--- Before Parse, dirty %@
Buffer = 
Items before = 
--- After Parse, dirty before %@, after %@
Items after = 
-[SourceModel parse]: (before correction) top item range: %@, file range: %@
-[SourceModel parse]: top item range: %@, file range: %@
#### Incremental parse doesn't match
     Full Parse: %@
     Incremental Parse: %@
self
xcode.lang.documentation.markup.directive.block.name
xcode.syntax.definition.class
xcode.syntax.declaration.class
xcode.syntax.definition.extension
xcode.syntax.declaration.extension
xcode.syntax.declaration.struct
xcode.syntax.declaration.enum
xcode.syntax.declaration.union
xcode.syntax.markup.directive.block
xcode.syntax.typedef
xcode.syntax.declaration.objc.interface
xcode.syntax.name.partial
xcode.syntax.name
xcode.syntax.name.tree
xcode.syntax.method.declarator
xcode.syntax.declaration.enum.case
xcode.lang.swift.function.parameter.therest
xcode.lang.swift.enum.case.name
xcode.lang.swift.variable.namelist
xcode.lang.swift.parenexpr.complex
xcode.syntax.definition.function
xcode.syntax.declaration.function
xcode.syntax.definition.method
xcode.syntax.declaration.method
xcode.syntax.definition.property
xcode.syntax.declaration.property
xcode.syntax.declaration.variable
xcode.syntax.comment
xcode.syntax.comment.doc
xcode.syntax.comment.doc.parameter.block
xcode.syntax.comment.doc.parameter
xcode.syntax.completionplaceholder
xcode.syntax.preprocessor
xcode.syntax.preprocessor.include
xcode.syntax.objc.import
xcode.syntax.module.import
xcode.syntax.string
xcode.syntax.character
xcode.syntax.number
super
this
xcode.syntax.declaration.protocol
xcode.syntax.name.type
xcode.syntax.name.other
xcode.syntax.name.parameter
xcode.syntax.name.parameter.function
xcode.syntax.entity.start
xcode.syntax.associatedtype
xcode.syntax.markup.heading
xcode.syntax.markup.delimiter
xcode.lang.objcpp.identifier
xcode.lang.cpp.identifier
xcode.lang.swift.identifier
xcode.lang.html.entity.block
xcode.lang.html.entity.end
@selector
Keyword scanner "%@" shouldn't have a Tokenizer. Ignoring it.
.interestingOperators
CaseSensitive
WordBreak
CheckPreprocessorKnownMacros
StartChars
Chars
Words
Keyword "%@" (loc=%ld) Reusing old nodeType, Item: %@
Keyword "%@" (loc=%ld) Returning Item: %@
xcode.lang.objcpp.interestingOperators
xcode.lang.objcpp.array.literal.start
xcode.lang.objcpp.dictionary.literal.start
xcode.lang.objcpp.expression.literal.start
xcode.lang.objcpp.property.options.identifier
xcode.lang.objcpp.anoperator
xcode.lang.objcpp
xcode.lang.objcpp.property.options
xcode.lang.objcpp.operatorclause
xcode.lang.objcpp.method.declarator.args
'\n'
'\r'
'\t'
'%c'
'unexpected 0x%lX'
xcode.lang.
'%@'
identifier
languageName
languageSpecification
nativeSourceModelParserClass
documentationAbbreviation
fileDataTypeIdentifiers
fileDataTypes
conformsToLanguageIdentifiers
conformsTo
commentSyntaxes
documentationSyntaxes
supportsIndentation
allowWhitespaceTrimming
requiresHardTabs
indentationTriggers
indentation
trigger
scriptingLanguage
isHidden
usesColorLiteral
usesFileLiteral
usesImageLiteral
standardTypes
fileExtensions
prefix
suffix
<%@:%p:'%@'>
plist
LanguageMetadata
Language previously registered with identifier %@. Skipping.
Failed to locate a source code language with identifier %@
token: %@ context: %@
*** endToken: %@
***        contextName: %@
xcode.lang.swift.string
xcode.lang.swift.string.multiline
xcode.lang.swift.string.interpolation
xcode.lang.swift.integer
xcode.lang.swift.double
xcode.lang.comment.recursive
xcode.lang.swift.doccomment.star
xcode.lang.swift.doccomment.slash
xcode.lang.swift.interestingOperators
xcode.lang.swift.preprocessor.keyword
xcode.lang.swift
xcode.lang.swift.string.multiline.interpolation
xcode.lang.swift.function.declarator
SourceScannerLogLevel
AltType
StartAtBOL
StartAtColumnZero
Foldable
ShouldTraverse
DirtyPreviousRightEdge
Volatile
Tokenizer
Couldn't load language spec for '%@' (from '%@')
Syntax
%@: "%@"
IncludeRules
nodeToReuse: Location=%ld Scanner:%@
OldItem: %@
*** Reusing item: (loc=%ld) %@
nodeForThisScanner: Location=%ld Scanner:%@
*** nodeForThisScanner found: (loc=%ld) %@
SourceScanner parseOne: Not adding to dirty range: %@
SourceScanner parseOne: Adding to dirty range: %@
SourceScanner parseOne: Pretending to reuse item: %@
%@-%@ %ld (loc=%ld) saving lexed token: %@
%@-%@ %ld (loc=%ld) Going back past: %@
%@-%@ %ld (loc=%ld) Skipping first %ld (%ld) children out of %ld (Range %ld to %ld)
%@-%@ %ld (loc=%ld) Skipping last %ld children out of %ld (Range %ld to %ld)
%@-%@ %ld (loc=%ld) Adding Ignored Token to children: %@
%@-%@ %ld (loc=%ld) Adding Saved Token to children: %@
%@-%@ %ld (loc=%ld) Going to Re-use Saved Token: %@
%@-%@ %ld (loc=%ld) Adding Leftover Token to children: %@
Production: %@
startToken: '%c', langSpec: %@, predictSet: %@
startToken: %d (%@), startProd %@, langSpec: %@, predictSet: %@, interiorPredictSet: %@,%@, interiorProductionRules: %@
Start
Until
Rules
Match
xcode.lang.generated.
AltEnd
AltUntil
Recursive
B32@?0@"SourceModelParserProductionRule"8Q16^B24
q24@?0@"SourceModelParserProductionRule"8@"SourceModelParserProductionRule"16
xcode.lang.cpp.interestingOperators
xcode.lang.cpp.anoperator
xcode.lang.cpp
xcode.lang.cpp.operatorclause
%@: currentRuleIndex %lu, completeMatch %d
<%@: %p> (
{%lu, %lu}
xcode.lang.generated.indent
xcode.lang.generated.fullindent
xcode.lang.generated.dedent
Invalid language spec for '%@'
%@ (loc=%ld) %@ Predicts: %s
%@-%@ %ld (loc=%ld) Starting out with a saved token (re-saving): %@
[%@ PARSE] *** (loc=%ld) Got token: %@
%@-%@ %ld (loc=%ld) Saved token matched rule "%@": %@
[%@ PARSE] *** (loc=%ld) calling predictsRule(%@): %@
RuleScanner: Adding to dirty range: %@
[%@ PARSE] *** (loc=%ld) Got Node: %@
[%@ PARSE] *** (loc=%ld) Didn't match
[%@ PARSE] *** (loc=%ld) Didn't Match '\n' - skipping it
%@-%@ %ld (loc=%ld) (possibly) re-saving saved token: %@
[%@ PARSE] *** (loc=%ld) Matched Token: %@
%@-%@ %ld (loc=%ld) Adding saved token to children: %@
%@-%@ %ld (loc=%ld) Got non-volitile token: %@
[%@ PARSE] *** (loc=%ld) Didn't Match Token: %@
RuleScanner: clearing saved tokens (if any)
RuleScanner:      dropping token %@
RuleScanner:      putting indent/dedent back!
Rule "%@" (loc=%ld) Returning Item: %@
%@-%@ %ld (loc=%ld) Failed, Saving node: %@
SMSourceNodeTypesReadWriteQueue
xcode.syntax.plain
xcode.syntax.comment.doc.keyword
xcode.syntax.mark
xcode.syntax.url
xcode.syntax.attribute
xcode.syntax.declaration.type
xcode.syntax.declaration.other
xcode.syntax.identifier.class
xcode.syntax.identifier.function
xcode.syntax.identifier.constant
xcode.syntax.identifier.type
xcode.syntax.identifier.variable
xcode.syntax.identifier.macro
xcode.syntax.identifier.class.system
xcode.syntax.identifier.function.system
xcode.syntax.identifier.constant.system
xcode.syntax.identifier.type.system
xcode.syntax.identifier.variable.system
xcode.syntax.identifier.macro.system
xcode.syntax.entity
xcode.syntax.markup.code
xcode.syntax.markup.emphasis
xcode.syntax.markup.emphasis.strong
xcode.syntax.markup.strikethrough
xcode.syntax.markup.aside.kind
XCLanguage
language
xclangspec
IncludeInMenu
UsesCLikeIndentation
SourceScannerClassName
NumberScanner
RegExScanner
HTMLScanner
HTMLEntityScanner
IndentScanner
Name
.keyword
xcode.lang.objc.interface
xcode.lang.objc.interface.declarator
xcode.lang.objc.implementation
xcode.lang.objc.implementation.declarator
xcode.lang.objc.block
xcode.lang.objc.property.declaration
xcode.lang.objc.method.declaration
xcode.lang.objc.method.definition
xcode.lang.objc.classmethod.declaration
xcode.lang.objc.classmethod.definition
xcode.lang.objc.parenexpr
xcode.lang.objc.bracketexpr
xcode.lang.objc.property.implementation.synthesize
xcode.lang.objc.property.implementation.dynamic
xcode.lang.objc.category.openparen
xcode.lang.objc.categoryclause
xcode.lang.objc.classname
xcode.lang.objc.categoryname
Regex scanner "%@" shouldn't have a Tokenizer. Ignoring it.
Invalid language spec: "%@": 'Chars' given, but not 'StartChars'
MaxLinesPerToken
Warning: language spec %@ contains both CaptureTypes and IncludeRules. IncludedRules will be ignored.
RegEx "%@" (loc=%ld) Returning Item: %@
xcode.lang.generated.emptyline
GenerateEmptyLine
IndentWidth
xcode.lang.python.identifier
%@-%@ %ld (loc=%ld) Computed new context: %@
IndentScanner called as a non-lexer
%@-%@ %ld (loc=%ld) Generated (and saving) empty line: %@
%@-%@ %ld (loc=%ld) Generated (and saving) indent: %@
%@-%@ %ld (loc=%ld) Generated (and saving) dedent: %@
%@-%@ %ld (loc=%ld) EOL, but no indentation change necessary.
Ignore
AltToken
EscapeChar
ParseEndBeforeIncludedRules
-[ScopeScanner nextToken:]: Tossing saved token by mistake: %@
-[ScopeScanner nextToken:]: Tossing a token by mistake: %@
%@-%@ %ld (loc=%ld) Looking at saved token: %@
%@-%@ %ld (loc=%ld) Adding Saved Start Token to children: %@
%@-%@ %ld (loc=%ld) Resaving unwanted End Token: %@
%@-%@ %ld (loc=%ld) Adding End Token to children: %@
%@-%@ %ld (loc=%ld) End Token doesn't match context: %@
-[ScopeScanner parseRecursive]: Surprised to be saving token at end: %@
-[ScopeScanner parseRecursive]: Adding Leftover Token to children before returning: %@
ScopeScanner: Comment, so adding to dirty range: %@
Block "%@" (loc=%ld) Returning Item: %@
%@-%@ %ld (loc=%ld) Looking at Saved Token: %@
%@-%@ %ld (loc=%ld) Remembering Saved End Token for later: %@
%@-%@ %ld (loc=%ld) Adding Saved End Token to children: %@
ScopeScanner Comment, so adding to dirty range: %@
Block (nonRecur) "%@" (loc=%ld) Returning Item: %@
xcspec
DVTSpecificationErrorDomain
Identifier
BasedOn
Description
IsMissing
DVTExtraSourceSpecificationPaths
LanguageSpecifications
Library/Developer/Xcode/Specifications
SourceSpecificationLoading
Generic
couldn't register specification: unknown type '%@'
couldn't register specification: %@
Expected to find a dictionary as the %lu-th element but found %@.
No 'Type' key present, and none can be inferred from the filename suffix.
Language
FileType
PropertyPane
SourceDescription
file at '%@'
Couldn't load '%@'. Reason: %@.
malformed specification of %3$@ %1$@ -- the '%2$@' key must be non-empty
<unknown>
<%@:%p:'%@'%@>
:MISSING
%@SourceModelItem<%0lx>: %@ (%ld, %ld), rel=(%ld, %ld), nodeType=%@, tok=%@, inherit=%lc, ignore=%lc, block=%lc, volatile=%lc, dirty=%lc, children = %ld
SourceModelItem<%0lx>: %@ (%ld, %ld), rel=(%ld, %ld), lang=%ld, nodeType=%ld, tok=%@, inherit=%lc, ignore=%lc, block=%lc, volatile=%lc, dirty=%lc, children = %ld
IBOutlet
IBOutletCollection
IBAction
IBSegueAction
@end
@private
@public
@protected
@property
__unsafe_unretained
__weak
<unterminated raw string>
flex scanner jammed
fatal flex scanner internal error--no action found
out of dynamic memory in yy_create_buffer()
out of dynamic memory in yy_scan_buffer()
out of dynamic memory in yy_scan_bytes()
bad buffer in yy_scan_bytes()
yyset_lineno called with no buffer
yyset_column called with no buffer
xcode.lang.swift.anoperator
__consuming
__owned
__shared
Protocol
Self
actor
assignment
associatedtype
associativity
async
await
break
case
catch
class
continue
convenience
default
defer
deinit
didSet
dynamic
dynamicType
else
enum
extension
fallthrough
false
fileprivate
final
func
guard
higherThan
import
indirect
infix
init
inout
internal
isolated
lazy
left
lowerThan
mutating
none
nonisolated
nonmutating
open
operator
optional
override
postfix
precedence
precedencegroup
private
protocol
public
repeat
required
rethrows
return
right
safe
some
static
struct
subscript
switch
throw
throws
true
typealias
unowned
unsafe
weak
where
while
willSet
@GKInspectable
@IBAction
@IBDesignable
@IBInspectable
@IBOutlet
@IBSegueAction
@NSApplicationMain
@NSCopying
@NSManaged
@Sendable
@UIApplicationMain
@actorIndependent
@asyncHandler
@autoclosure
@available
@convention
@discardableResult
@dynamicMemberLookup
@escaping
@frozen
@globalActor
@inlinable
@inline
@main
@nonobjc
@noreturn
@objc
@objcMembers
@propertyWrapper
@requires_stored_property_inits
@resultBuilder
@testable
@unchecked
@unknown
@usableFromInline
@warn_unqualified_access
#available
#colorLiteral
#column
#dsohandle
#else
#elseif
#endif
#error
#file
#fileID
#fileLiteral
#filePath
#function
#imageLiteral
#keyPath
#line
#selector
#sourceLocation
#unavailable
#warning
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
out of dynamic memory in yy_get_next_buffer()
out of dynamic memory in yyensure_buffer_stack()
<raw string>
__alignof
__alignof__
__asm
__asm__
__attribute__
__auto_type
__block
__builtin_choose_expr
__builtin_offsetof
__builtin_types_compatible_p
__builtin_va_arg
__complex
__complex__
__const
__const__
__extension__
__func__
__imag
__imag__
__label__
__nonnull
__nullable
__null_unspecified
__real
__real__
__restrict
__restrict__
__signed
__signed__
__thread
__typeof
__typeof__
__volatile
__volatile__
__FUNCTION__
__PRETTY_FUNCTION__
_Bool
_Complex
_Decimal32
_Decimal64
_Decimal128
_Imaginary
_Nonnull
_Nullable
_Nullable_result
_Null_unspecified
auto
bool
char
const
double
extern
float
goto
inline
long
register
restrict
short
signed
sizeof
typedef
typeof
union
unsigned
void
volatile
FALSE
NULL
TRUE
_Alignas
_Alignof
_Atomic
_Generic
_Noreturn
_Static_assert
_Thread_local
_cmd
__autoreleasing
__bridge
__bridge_transfer
__bridge_retained
__kindof
__strong
@autoreleasepool
@catch
@class
@compatibility_alias
@defs
@dynamic
@encode
@finally
@implementation
@import
@interface
@optional
@package
@protocol
@required
@synchronized
@synthesize
@throw
@try
bycopy
byref
oneway
BOOL
IBInspectable
IB_DESIGNABLE
nonnull
nullable
null_unspecified
NS_DURING
NS_ENDHANDLER
NS_HANDLER
NS_VALUERETURN
NS_VOIDRETURN
instancetype
assert
define
defined
elif
endif
error
ifdef
ifndef
include
include_next
line
pragma
unassert
undef
warning
__private_extern__
and_eq
bitand
bitor
compl
const_cast
delete
dynamic_cast
explicit
export
friend
mutable
namespace
not_eq
or_eq
protected
reinterpret_cast
static_cast
template
typeid
typename
using
virtual
wchar_t
xor_eq
alignof
char16_t
char32_t
constexpr
decltype
noexcept
nullptr
static_assert
thread_local
__has_nothrow_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_abstract
__is_base_of
__is_class
__is_convertible_to
__is_empty
__is_enum
__is_literal
__is_literal_type
__is_pod
__is_polymorphic
__is_trivial
__is_union
__is_trivially_copyable
__underlying_type
atomic
setter
getter
readonly
readwrite
assign
retain
copy
nonatomic
strong
unsafe_unretained
null_resettable
direct
__covariant
swift_getFunctionTypeMetadataGlobalActor
swift_getFunctionTypeMetadataGlobalActorStandalone
mainBundle
localizedStringForKey:value:table:
setWithObject:
specificationType
initWithPropertyListDictionary:
objectForKey:
boolValue
specificationTypeBaseClass
localizedSpecificationTypeName
specificationTypePathExtensions
specificationRegistryName
inheritsNodeType
isMark
ignoreToken
nameFormat
setNameFormat:
.cxx_destruct
_nameFormat
_inheritsNodeType
_isMark
_ignoreToken
TB,R,V_inheritsNodeType
TB,R,V_isMark
TB,R,V_ignoreToken
T@"NSString",C,V_nameFormat
languageSpecification
initializeLanguageSpecification:
initializeLexerModes
specificationForIdentifier:
addTokenForString:
syntaxRules
objectAtIndex:
syntaxType
registerNodeTypeNamed:
productionRule
setLexerMode:
setInteriorRuleMayHaveTemporaryLexerFlags:
interiorProductionRules
setTemporaryLexerFlags:
createTerminalNodeForToken:scopeProductionRule:
uniqueId
sourceModelItemWithRange:language:token:nodeType:
setIgnoreToken:
setInheritsNodeType:
shouldTraverse
setShouldTraverse:
isBlock
setIsBlock:
setVolatile:
_resetLexerWithInputString:
_beginLexerMode:
initialize
length
_currentLocation
_getNextToken:temporaryFlags:
_setCurrentLocation:
_endLexerMode:
_lexer
initWithPropertyListDictionary:language:
dictionary
allKeys
countByEnumeratingWithState:objects:count:
valueForKey:
numberWithInteger:
lowercaseString
setValue:forKey:
parse:withContext:initialToken:inputStream:range:dirtyRange:
token
numberOfChildren
string
children
range
substringWithRange:
integerValue
setToken:
_entityMap
stringWithCString:encoding:
stringWithFormat:
exceptionWithName:reason:userInfo:
initializeProductionsForLanguageSpecification:
init
identifier
tokenForString:
array
indexSet
itemToken
itemSyntaxType
_parse:inScope:node:outOfBand:depth:
_getRawStringDelimLength
count
tokenInteriorPredictSet
nodeInteriorPredictSet
_reuseScopeNode:using:
_reuseAndSkipAhead:index:location:
endProductions
matchEndNode:
_setRawStringDelimLength:
matchEndToken:
saveToken
setRange:
_branchToReuseInScope:atLocation:node:
_parseOutOfBand:
langId
addObject:
_acceptChildrenInScope:atIndex:stackRange:node:
lastObject
isIdentifier
nodeType
setNodeType:
_initializeProductionStateForCurrentToken:tokenInteriorPredictSet:tokenInteriorPredictSetCount:
matchToken:currentStackTop:
removeIndex:
ignoreNodes
_initializeProductionStateForNode:scopeProdRule:nodeInteriorPredictSet:nodeInteriorPredictSetCount:
matchNode:currentStackTop:
firstIndex
completeMatch
_atEndOfParseRange
scopeProduction
indexGreaterThanIndex:
currentProduction
isEqual:
_hoistUpTrailingIgnoreNodesFromNode:toArray:
temporaryLexerFlags
epsilonMatch
objectsAtIndexes:
reduceToProduction:stackOffset:
langSpec
_reduceToProduction:stackRange:node:inScope:
removeObjectsAtIndexes:
removeAllIndexes
lexerMode
indexSetWithIndexesInRange:
insertObjects:atIndexes:
addIndexesInRange:
addIndexes:
mutableChildren
removeObjectsInRange:
addObjectsFromArray:
replaceObjectsInRange:withObjectsFromArray:
_discardChildrenInScope:fromIndex:toLocation:
dirty
indexOfProductionMatchingToken:inProduction:
startToken
resetWithProductionRule:stackOffset:
initWithProductionRule:stackOffset:
addIndex:
indexOfProductionMatchingNode:inProduction:
startProduction
itemIsVolatile
addChildren:
removeAllObjects
addChildrenFromArray:inRange:
addChild:
subarrayWithRange:
_replaceItemsWithinRange:newArray:index:
assignParents:
makeObjectsPerformSelector:withObject:
arrayWithObject:
childEnclosingLocation:
parent
setParent:
setDirty:
insertObject:atIndex:
removeLastObject
parse:withContext:inputString:range:dirtyRange:
_langSpec
_langId
_langToken
_currentToken
_parseRange
_saveToken
_validToken
_previousTokenRange
_nodeStack
_productionState
_validProductionStates
_dirtyRange
stringWithUTF8String:
isPlainMacro:
isFunctionMacro:
isEnumMacro:
setWithArray:
standardUserDefaults
stringByAppendingString:
arrayForKey:
bundleForClass:
resourcePath
stringByAppendingPathComponent:
dictionaryWithContentsOfFile:
getMacros:forName:
containsObject:
hasPrefix:
setString:
initWithRealString:subrange:
hasSavedItems
setLocation:
_computeBOL
nextCharSkippingWhitespace
location
rangeOfCharacterFromSet:options:range:
characterSetWithCharactersInString:
setRealString:subrange:
initWithString:
nextChar
isAtBOL
isAtColumnZero
peekChar
peekCharSkippingWhitespace
peekCharacterInSet:
locationOfNewlineFrom:searchBackwards:
stringWithRange:
saveItem:
savedItem
_stringBuffer
_realString
_cheapString
_savedItems
_savedBottomItem
_isAtBOL
_isAtColumnZero
_BOLIsKnown
_SeenOneCharAtBOL
_SeenWhitespaceAtBOL
getCharacters:range:
boolForKey:
setSourceBufferProvider:
language
isMissingSpecificationProxy
nativeSourceModelParserClass
scanner
setScanner:
sourceBufferProvider
setDirtyRange:
setInputStream:
objectAtIndexedSubscript:
dirtyRightEdge:
sourceItems
description
needToDirtyRightEdges
indexOfChildBeforeLocation:
previousAncestralSibling
dirtyRange:changeInLength:
lineRangeForRange:
dirtyRange
setSourceItems:
inputStream
assignAllParents:
scheduleLazyInvalidationForRange:
validate
diffableDescription
isEqualToString:
childAdjoiningLocation:
parenLikeItemAtLocation:
methodDeclaratorItemAtLocation:
lineRangeForCharacterRange:
leadingWhitespacePositionsForLine:
isItemSemanticBlock:
blockDepth
isItemParenExpression:
isItemBracketExpression:
characterAtIndex:
isItemObjectLiteral:
addRange:
firstObject
previousItem
_builtUpNameForSubTree:mutableNameRanges:
specification
_builtUpNameForItem:mutableNameRanges:
enclosingItemAtLocation:
ancestorOfItem:inTypeList:
nodeTypeListForTypeNames:
itemAtLocation:inTypeList:
enumerateDescendentsUsingBlock:
enumerateIdentifierItemsInRelativeRange:usingBlock:
isItemUnclosedHTMLEntity:
builtUpNameForItem:nameRanges:
initWithRanges:count:
nameOfItem:nameRanges:scopeRange:
precedingItem
arrayWithObjects:
itemsAtLocation:inTypeList:
nextItem
addItemsInTypeList:fromItem:toArray:
addIdentifierItemsFromItem:toArray:
addBlockItemsInTypeList:fromItem:toArray:
arrayWithCapacity:
commentAtLocation:
docCommentAtLocation:
preprocessorStatementAtLocation:
includeStatementAtLocation:
stringConstantAtLocation:
identOrKeywordItemAtLocation:
characterConstantAtLocation:
numberConstantAtLocation:
completionPlaceholderItemAtLocation:
isItemExpression:startingWith:
appendString:
substringFromIndex:
enumCaseDeclaratorItemAtLocation:
stringWithString:
indexOfObjectIdenticalTo:
isItemAngleExpression:
enableNativeParser
setEnableNativeParser:
initWithSourceBufferProvider:
doingBatchEdit:
usesNativeParser
parse
_topLevelSourceItem
adjoiningItemAtLocation:
indentForItem:
blockItemAtLocation:
foldableBlockItemForLineAtLocation:
foldableBlockItemForLocation:
parenItemAtLocation:
objectLiteralItemAtLocation:
itemAtLocation:ofType:
itemAtLocation:conformingToSpecification:
enumerateItemsUsingBlock:
enumerateIdentifierItemsInRange:usingBlock:
textOfItem:
itemNameAtLocation:inTypeList:nameRanges:scopeRange:
methodOrFunctionRangeAtRange:
classAtLocation:
containersAtLocation:
typeDeclarationAtLocation:
interfaceDeclarationAtLocation:
isDeclarationOrDefinitionAtLocation:
functionOrMethodAtLocation:
functionOrMethodDefinitionAtLocation:
semanticItemAtLocation:
classItems
functionsAndMethodItems
commentBlockItems
parameterDescriptionItems
parameterNameItemFromItem:
identifierItemsFromItem:
placeholderItemsFromItem:
moduleImportStatementAtLocation:
isInCommentAtLocation:
isInDocCommentAtLocation:
isInPreprocessorStatementAtLocation:
isInIncludeStatementAtLocation:
isInStringConstantAtLocation:
isInIdentifierAtLocation:
isInCharacterConstantAtLocation:
isInNumberConstantAtLocation:
isIncompletionPlaceholderAtLocation:
isInKeywordAtLocation:
isInPlainCodeAtLocation:
isInTokenizableCodeAtLocation:
isPostfixExpressionAtLocation:
isItemBraceExpression:
isItemContainer:
isItemDeclaratorName:
isItemForStatement:
isItemDictionaryLiteral:
isItemInPreprocessorStatement:
methodNameForItem:nameRanges:
firstPrecedingAttributeOfItem:
item:hasPrecedingToken:
isDoingBatchEdit
setIsDoingBatchEdit:
_sourceBufferProvider
_inputStream
_scanner
_sourceItems
_isDoingBatchEdit
_nativeParser
T@"<SMSourceBufferProvider>",V_sourceBufferProvider
T@"CharStream",&,V_inputStream
T@"SourceScanner",&,V_scanner
TB,V_isDoingBatchEdit
T@"SMSourceModelItem",&,V_sourceItems
T{_NSRange=QQ},V_dirtyRange
objCDeclaratorItemAtLocation:
objCMethodNameForItem:nameRanges:
sourceModelInfoForSourceModelItem:matchingAnnotationKindMask:
identifierForUniqueId:
hasSuffix:
addCharactersInString:
uppercaseString
substringToIndex:
invert
initWithArrayOfStrings:caseSensitive:
characterIsMember:
containsToken:
nextToken:withContext:initialToken:outputRange:
includedRules
parseIncludedRules:inTree:withContext:initialToken:inputStream:range:dirtyRange:
setIsSimpleToken:
simpleDescription
predictsRule:inputStream:
canTokenize
wordRangeInString:fromIndex:
_startSet
_invertedOtherSet
_keywords
_caseSensitive
_wordBreak
_isSimpleToken
_checkPreprocessorKnownMacros
strongToStrongObjectsMapTable
setObject:forKey:
copy
globalTokenNames
setGlobalToken:forString:
nextGlobalToken
addGlobalTokenName:
allObjects
mutableCopy
replaceObjectAtIndex:withObject:
addArrayOfStrings:
allTokens
setCaseSensitive:
_tokens
loadAndCacheDefaultSourceCodeLanguages
loadAndCacheSourceCodeLanguageWithPlist:
objectForKeyedSubscript:
initWithLanguageDescription:
arrayFromArrayOfDicts:withKey:
arrayWithObjects:count:
URLsForResourcesWithExtension:subdirectory:
_sourceCodeLanguageForMetadata:
setObject:forKeyedSubscript:
fileExtensions
fileDataTypeIdentifiers
dictionaryWithContentsOfURL:
registerSourceCodeLanguageWithMetadata:
sourceCodeLanguageWithIdentifier:
conformedToLanguages
conformsToLanguage:
registerSourceCodeLanguageFromMetadataPlist:
sourceCodeLanguages
sourceCodeLanguageForLanguageSpecificationIdentifier:
sourceCodeLanguageForFileExtension:
sourceCodeLanguageForFileDataTypeIdentifier:
copyWithZone:
languageName
documentationAbbreviation
supportsIndentation
allowWhitespaceTrimming
requiresHardTabs
indentationTriggers
scriptingLanguage
isHidden
usesColorLiteral
usesFileLiteral
usesImageLiteral
lineCommentPrefixes
blockCommentCircumfixes
lineDocumentationPrefixes
blockDocumentationCircumfixes
standardTypes
_identifier
_languageName
_languageSpecificationIdentifier
_languageSpecification
_documentationAbbreviation
_fileDataTypeIdentifiers
_fileExtensions
_conformedToLanguageIdentifiers
_conformedToLanguages
_supportsIndentation
_allowWhitespaceTrimming
_requiresHardTabs
_indentationTriggers
_scriptingLanguage
_commentSyntaxes
_lineCommentPrefixes
_blockCommentCircumfixes
_documentationSyntaxes
_lineDocumentationPrefixes
_blockDocumentationCircumfixes
_standardTypes
_isHidden
_usesColorLiteral
_usesFileLiteral
_usesImageLiteral
_nativeSourceModelParserClass
T@"NSString",R,C,V_identifier
T@"NSString",R,C,V_languageName
T@"NSArray",R,C,V_fileExtensions
T@"NSArray",R,C,V_fileDataTypeIdentifiers
T@"SMLanguageSpecification",R
T@"NSString",R,C,V_documentationAbbreviation
T@"NSArray",R,C
T#,R,V_nativeSourceModelParserClass
TB,R,V_supportsIndentation
TB,R,V_allowWhitespaceTrimming
TB,R,V_requiresHardTabs
T@"NSArray",R,V_indentationTriggers
TB,R,V_scriptingLanguage
TB,R,V_isHidden
TB,R,V_usesColorLiteral
TB,R,V_usesFileLiteral
TB,R,V_usesImageLiteral
T@"NSArray",R,C,V_lineCommentPrefixes
T@"NSArray",R,C,V_blockCommentCircumfixes
T@"NSArray",R,C,V_lineDocumentationPrefixes
T@"NSArray",R,C,V_blockDocumentationCircumfixes
T@"NSArray",R,C,V_standardTypes
hash
_realStringLength
_subrange
_hashValue
_hashValueValid
invertedSet
rangeOfCharacterFromSet:
whitespaceAndNewlineCharacterSet
_stringByRemovingLeadingAndTrailingCharacters:fromString:
caseInsensitiveCompare:
parseRecursive:withContext:depth:inputStream:range:dirtyRange:
actionForEndToken:inContext:inputStream:
integerForKey:
decimalDigitCharacterSet
alphanumericCharacterSet
name
tossSavedItems:withContext:
updateContext:forReusedNode:inputStream:
nodeToReuse:withContext:forScanner:inputStream:
nodeForThisScanner:atLocation:inputStream:
replaceObjectsInRange:withObjectsFromArray:range:
indexOfChildAtLocation:
parseOneIncludedRule:inTree:withContext:initialToken:inputStream:range:dirtyRange:isLexing:reusedToken:
setNeedToDirtyRightEdges:
initWithLanguageSpecification:
wordRangeInString:fromIndex:allowNonWords:
lexer
_includedRules
_token
_nodeType
_altNodeType
_startAtBOL
_startAtColumnZero
_isFoldable
_shouldTraverse
_altIgnoreToken
_altInheritsNodeType
_needToDirtyRightEdges
_isVolatile
Tq,R,V_langId
Tq,R,V_token
T@"SourceScanner",R,V_lexer
T@"SMLanguageSpecification",R,V_langSpec
T@"NSArray",R,V_includedRules
stringByDeletingTrailingOption
initWithProductionRule:optional:repeatable:
prodRule
optional
repeatable
nextCandidate
setNextCandidate:
_optional
_repeatable
_prodRule
_nextCandidate
_temporaryLexerFlags
T@"SourceModelParserProductionRule",R,N,V_prodRule
TB,R,N,V_optional
TB,R,N,V_repeatable
T@"SourceModelParserInteriorProductionRule",&,N,V_nextCandidate
TQ,N,V_temporaryLexerFlags
arrayWithArray:
dealloc
getObjects:range:
matchToken:
matchNode:
production
tokenForSymbol:
initWithStartToken:langSpec:predictSet:
initWithStartProduction:langSpec:
setTokenInteriorPredictSet:
setNodeInteriorPredictSet:
interiorRuleMayHaveTemporaryLexerFlags
setEndProductions:
endTokens
setEndTokens:
predictSet
setInteriorProductionRules:
saveEndToken
setItemToken:
setItemSyntaxType:
setItemIsVolatile:
_tokenPredictSetBuffer
_tokenPredictSetBufferSize
_nodePredictSetBuffer
_nodePredictSetBufferSize
_interiorRuleMayHaveTemporaryLexerFlags
_saveEndToken
_isBlock
_itemIsVolatile
_itemSyntaxType
_startToken
_startProduction
_endProductions
_endTokens
_predictSet
_tokenInteriorPredictSet
_nodeInteriorPredictSet
_interiorProductionRules
_itemToken
_lexerMode
T@"NSArray",&,N,V_endProductions
T@"NSArray",&,N,V_endTokens
T@"NSArray",&,N,V_tokenInteriorPredictSet
T@"NSArray",&,N,V_nodeInteriorPredictSet
T@"NSArray",&,N,V_interiorProductionRules
Tq,N,V_itemToken
Ts,N,V_itemSyntaxType
TB,N,V_isBlock
TB,N,V_shouldTraverse
TB,N,V_inheritsNodeType
TB,N,V_ignoreToken
TB,N,V_itemIsVolatile
Ti,R,N,V_startToken
T@"SMLanguageSpecification",R,N,V_startProduction
T@"NSArray",R,N,V_predictSet
T@"SMLanguageSpecification",R,N,V_langSpec
TB,R,N
TB,R,N,V_saveEndToken
TQ,N,V_lexerMode
TB,N,V_interiorRuleMayHaveTemporaryLexerFlags
initWithProduction:saveToken:
_production
T@"SMLanguageSpecification",R,N,V_production
TB,R,N,V_saveToken
initWithToken:saveToken:
Ti,R,N,V_token
componentsSeparatedByString:
orderedSetWithArray:
setProductionRule:
setArray:
indexesOfObjectsPassingTest:
sortUsingComparator:
tokenForString:forRange:subItems:
stringByAppendingFormat:
_productionRule
_stackOffset
_innerState
_currentRuleIndex
_canSkipCurrentRule
_hasInnerState
_completeMatch
_epsilonMatch
_ignoreNodes
TB,R,N,V_completeMatch
TB,R,N,V_epsilonMatch
T@"SourceModelParserProductionRule",R,N
TQ,R,N
TQ,R,N,V_ignoreNodes
rangeValue
rangeAtIndex:
setVersion:
isEqualToArray:
allocWithZone:
valueWithRange:
initWithObjects:count:
initWithRange:
mutableCopyWithZone:
descriptionWithLocale:
indexOfRange:
firstRange
lastRange
indexOfRangePreceding:
indexOfRangeFollowing:
indexOfRangeContainingOrPreceding:
indexOfRangeContainingOrFollowing:
getRanges:count:
normalizedRangeArray
sortedRangeArray
_count
_ranges
initWithCapacity:
removeAllRanges
insertRange:atIndex:
removeRangeAtIndex:
setRange:atIndex:
getIndexes:maxCount:inIndexRange:
removeObjectAtIndex:
removeRangesAtIndexes:
replaceRangeAtIndex:withRange:
addRangesFromArray:
normalize
sort
_capacity
appendFormat:
setWithCapacity:
matchesToken:
allowMultiple
_tokenSet
_allowMultiple
TB,R,V_optional
TB,R,V_allowMultiple
T@"SourceScanner",R,V_scanner
rangeOfString:
nextToken:withItemArray:inTree:withContext:initialToken:range:dirtyRange:
isVolatile
_rules
_startChar
dictionaryWithCapacity:
shortValue
numberWithShort:
nodeTypeNameForId:
nodeTypesCount
nodeType:conformsToNodeTypeNamed:
nodeType:conformsToNodeTypesInList:
subSpecifications
_uniqueIdForIdentifier:
stringForKey:
lexerKeywords
availableKeywords
includeInMenu
usesCLikeIndentation
scannerClass
_uniqueId
_scannerClass
_syntaxRules
_includeInMenu
_usesCLikeIndentation
Tq,R,V_uniqueId
TB,R,V_includeInMenu
TB,R,V_usesCLikeIndentation
T#,R,V_scannerClass
T@"NSDictionary",R,V_syntaxRules
T@"NSString",R
T@"SourceModelParserProductionRule",&,V_productionRule
superSpecification
conformsToSpecification:
isObjCGenericInstanceMethodSpecification
isObjCGenericClassMethodSpecification
objCInstanceMethodDeclarationSpecification
objCInstanceMethodImplementationSpecification
objCClassMethodDeclarationSpecification
objCClassMethodImplementationSpecification
conformsToSpecificationForIdentifier:
conformsToAnySpecificationInSet:
isObjCGenericMethodSpecification
specificationLineage
objCInterfaceSpecification
objCInterfaceDeclaratorSpecification
objCImplementationSpecification
objCImplementationDeclaratorSpecification
objCBlockSpecification
objCIdentifierSpecification
objCPropertyDeclarationSpecification
objCParenthesisExpressionSpecification
objCBracketExpressionSpecification
objCAtSynthesizeSpecification
objCAtDynamicSpecification
objCCategoryOpenParenSpecification
objCCategoryClauseSpecification
objCClassNameSpecification
objCCategoryNameSpecification
regularExpressionWithPattern:options:error:
firstMatchInString:options:range:
locationOfNextNewlineFrom:until:inStream:
nextToken:initialToken:until:outputRange:subItems:
offsetBy:
_regExes
_captureNodeTypes
_altIsSimpleToken
_isURL
_maxLinesPerToken
computeContext:inString:forLocation:
nextIndentForlocation:inString:
numberWithUnsignedInteger:
_indentForLineWithRange:inString:
numberWithUnsignedInt:
unsignedIntValue
_indentWidth
_generateEmptyLine
_isPython
initWithString:acceptToken:
firstChar
acceptToken
_firstChar
_string
_acceptToken
TS,R,V_firstChar
T@"NSString",R,V_string
TB,R,V_acceptToken
parseRule:into:acceptToken:
tokenForRule:initialToken:inputStream:newLocation:
nextToken:withItem:inTree:withContext:initialToken:insideBlock:range:dirtyRange:reusedToken:
matchingIgnoreRule:
matchingRule:isAltRule:
startString
startChar
escapeChar
recursive
parseEndBeforeIncludedRules
caseSensitive
ignoreRules
endRules
altEndRules
altToken
defaultManager
homeDirectoryForCurrentUser
path
fileExistsAtPath:isDirectory:
stringByStandardizingPath
registerSpecificationProxiesFromPropertyListsInDirectory:recursively:
registerSpecificationTypeBaseClass:
searchForAndRegisterAllAvailableSpecifications
specificationRegistry
_typesToSpecTypeBaseClassesRegistry
dictionaryWithObject:forKey:
errorWithDomain:code:userInfo:
registerSpecificationOrProxy:
reason
registerSpecificationProxyFromPropertyList:
contentsOfDirectoryAtPath:error:
attributesOfItemAtPath:error:
fileType
pathExtension
_pathExtensionsToTypesRegistry
initWithContentsOfFile:
initWithData:encoding:
propertyList
_registerSpecificationProxiesOfType:fromDictionaryOrArray:inDirectory:bundle:sourceDescription:
_shouldRecurseIntoDirectoryNamed:ofType:
registerSpecificationProxiesFromPropertyListsInDirectory:recursively:inBundle:
missingSpecificationForIdentifier:
initAsMissingSpecificationProxyWithIdentifier:name:description:
registerMissingSpecification:forIdentifier:
allValues
registeredSpecifications
raise:format:
initWithDictionary:
dictionaryWithObjectsAndKeys:
_objectForKeyIgnoringInheritance:
_subSpecificationsOfSpecification:
specificationsForIdentifiers:
isKindOfSpecification:
identifierCompare:
nameCompare:
superSpecIdentifier
properties
_superSpecIdentifier
_superSpecification
_properties
T@"NSString",R,V_identifier
T@"NSString",R,V_superSpecIdentifier
T@"SMSourceSpecification",R,V_superSpecification
T@"NSDictionary",R,V_properties
initWithRange:language:token:nodeType:
setLangId:
stringWithCapacity:
innerDescription:showSelf:
contextArray
dirtyRelativeRange:changeInLength:
innerRange
indexOfChildAfterLocation:
_childEnclosingLocation:
_firstLeafItem
_lastLeafItem
followingItem
isAncestorOf:
isSwiftIdentifierOrKeyword
clearAdjustedNodeTypes
makeObjectsPerformSelector:
dumpContext
enclosingBlock
rangeBetweenChildrenAtLocation:
setIsOpaque:
isOpaque
rawNodeType
isKeyword
isSimpleToken
setNeedsAdjustNodeType:
needsAdjustNodeType
compare:
firstChildItemWithLangId:
setMutableChildren:
relativeLocation
setRelativeLocation:
_isOpaque
_dirty
_isIdentifier
_needsAdjustNodeType
_relativeLocation
_parent
_children
Tq,V_langId
Tq,V_token
T@"NSMutableArray",&,N,V_children
T{_NSRange=QQ},V_relativeLocation
T@"NSArray",R,N
T@"SMSourceModelItem",N,V_parent
isObjCInterfaceItem
isObjCCategoryInterfaceItem
isObjCImplementationItem
isObjCCategoryImplementationItem
isObjCClassExtensionItem
isObjCNamedCategoryInterfaceDeclaratorItem
isObjCNamedCategoryImplementationDeclaratorItem
isObjCInterfaceDeclaratorItem
firstDescendantItemConformingToSpecification:
isObjCImplementationDeclaratorItem
isObjCCategoryOpenParenItem
nameInSourceModel:
isKeyword:inSourceModel:
_contextMaskForAncestorIncludingSelf:
specificationIdentifier
allDescendantItemsConformingToSpecification:
unionSet:
isObjCStrictInterfaceItem
isObjCStrictImplementationItem
isObjCBlockItem
isObjCIdentifierItem
isObjCPropertyDeclarationItem
isObjCInstanceMethodDeclarationItem
isObjCInstanceMethodImplementationItem
isObjCClassMethodDeclarationItem
isObjCClassMethodImplementationItem
isObjCBracketExpressionItem
isObjCGenericMethodItem
isObjCGenericInstanceMethodItem
isObjCGenericClassMethodItem
isOutletKeywordInSourceModel:
isOutletCollectionKeywordInSourceModel:
isActionKeywordInSourceModel:
isSegueActionKeywordInSourceModel:
isClassIdentifierInSourceModel:
isObjCAtEndKeywordInSourceModel:
isObjCSuperKeywordInSourceModel:
isObjCAtPrivateKeywordInSourceModel:
isObjCAtPublicKeywordInSourceModel:
isObjCAtProtectedKeywordInSourceModel:
isObjCAtPropertyKeywordInSourceModel:
isTypeIdentifier
isARCTypeQualifierInSourceModel:
contextMask
ancestorContextMask
firstItemInLineageOfType:
objCClassItemNameInSourceModel:
objCCategoryItemNameInSourceModel:
containingObjCClassItem
precedingSiblingItem
followingSiblingItem
isFoldedInLayoutManager:
bufferLen
bufferLoc
stringLen
stringLoc
buffer
curChar
_unused
SMSyntaxTypeSpecification
ObjCSourceModelParser
CSourceModelParser
HTMLEntityScanner
SourceModelParser
KnownMacros
CharStream
SMSourceModel
Deprecated
RevlockIBDVTSourceModelAdditions
KeywordScanner
ObjCPlusPlusSourceModelParser
SMSourceTokens
SMSourceCodeLanguage
NSCopying
CheapReusableSubstring
HTMLScanner
SwiftSourceModelParser
SourceScanner
ParserStringAdditions
SourceModelParserInteriorProductionRule
SourceModelParserProductionRule
ScopeRule
ScopeToken
CPlusPlusSourceModelParser
NumberScanner
SourceModelParserProductionState
RangeArrayAdditions
RangeArray
MutableRangeArray
ScannerRule
RuleScanner
SMSourceNodeTypes
SMLanguageSpecification
FormerIBDVTFoundationAdditions
RegExScanner
IndentScanner
ScopeScannerRule
ScopeScanner
SMSourceSpecification
SMSourceModelItem
FormerIDEDVTSourceModelAdditions
StringBuffer
#16@0:8
@16@0:8
@24@0:8@16
B16@0:8
v24@0:8@16
v16@0:8
@"NSString"
@32@0:8^{?=ii{?=qq}*i}16^@24
v24@0:8Q16
Q16@0:8
B32@0:8^{?=ii{?=qq}*i}16Q24
@32@0:8@16q24
@72@0:8@16@24q32@40{_NSRange=QQ}48^{_NSRange=QQ}64
@"NSDictionary"
@64@0:8@16@24@32{_NSRange=QQ}40^{_NSRange=QQ}56
@56@0:8@16@24@32q40q48
Q40@0:8@16@24Q32
Q40@0:8@16Q24Q32
v40@0:8@16@24Q32
v48@0:8@16@24@32Q40
@56@0:8@16{_NSRange=QQ}24@40@48
Q56@0:8@16Q24{_NSRange=QQ}32@48
@40@0:8@16Q24@32
Q32@0:8@16@24
v32@0:8@16@24
@"SMLanguageSpecification"
{?="tokenType"i"tokenAltType"i"charRange"{?="location"q"length"q}"lexeme"*"outOfBand"i}
{?="location"q"length"q}
{_NSRange="location"Q"length"Q}
@"NSMutableArray"
@"NSMutableIndexSet"
@32@0:8@16@24
B24@0:8@16
S16@0:8
Q24@0:8@16
Q28@0:8Q16B24
@32@0:8{_NSRange=QQ}16
@"StringBuffer"
@"CheapReusableSubstring"
@"SMSourceModelItem"
v20@0:8B16
{_NSRange=QQ}24@0:8@16
v40@0:8{_NSRange=QQ}16q32
@24@0:8Q16
q24@0:8@16
@32@0:8@16^@24
@32@0:8@16^q24
@32@0:8Q16^q24
@32@0:8Q16@24
v24@0:8@?16
v40@0:8{_NSRange=QQ}16@?32
@40@0:8@16^@24^{_NSRange=QQ}32
@48@0:8Q16^q24^@32^{_NSRange=QQ}40
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
B24@0:8Q16
v40@0:8^q16@24@32
B28@0:8@16S24
B32@0:8@16q24
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"NSObject<SMSourceBufferProvider>"
@"CharStream"
@"SourceScanner"
@"SourceModelParser"
@32@0:8@16Q24
B32@0:8q16@24
q48@0:8@16@24q32^{_NSRange=QQ}40
{_NSRange=QQ}32@0:8@16Q24
@"NSCharacterSet"
@"SMSourceTokens"
q16@0:8
v32@0:8q16@24
@28@0:8@16B24
@"NSMutableSet"
@24@0:8^{_NSZone=}16
@"NSArray"
@40@0:8@16{_NSRange=QQ}24
v40@0:8@16{_NSRange=QQ}24
S24@0:8Q16
v40@0:8^S16{_NSRange=QQ}24
{_NSRange=QQ}48@0:8@16Q24{_NSRange=QQ}32
i40@0:8@16@24@32
v40@0:8@16@24@32
@48@0:8@16@24@32@40
q92@0:8@16@24@32q40@48{_NSRange=QQ}56^{_NSRange=QQ}72B80^B84
v80@0:8@16@24@32q40@48{_NSRange=QQ}56^{_NSRange=QQ}72
{_NSRange=QQ}36@0:8@16Q24B32
@32@0:8@16B24B28
@"SourceModelParserProductionRule"
@"SourceModelParserInteriorProductionRule"
i24@0:8@16
Q28@0:8i16@20
@36@0:8i16@20@28
B20@0:8i16
@20@0:8i16
i16@0:8
v24@0:8q16
s16@0:8
v20@0:8s16
@24@0:8i16B20
q40@0:8@16^{_NSRange=QQ}24^@32
v32@0:8@16Q24
B28@0:8i16Q20
B32@0:8@16Q24
@32@0:8^@16^Q24
@"SourceModelParserProductionState"
{_NSRange=QQ}24@0:8Q16
@32@0:8r^@16Q24
@32@0:8r^{_NSRange=QQ}16Q24
Q32@0:8{_NSRange=QQ}16
Q24@0:8Q16
v32@0:8^{_NSRange=QQ}16Q24
^{_NSRange=QQ}
v32@0:8Q16@24
v40@0:8{_NSRange=QQ}16Q32
v40@0:8Q16{_NSRange=QQ}24
B24@0:8q16
@"NSSet"
q80@0:8@16@24@32@40q48{_NSRange=QQ}56^{_NSRange=QQ}72
s24@0:8@16
@20@0:8s16
B28@0:8s16@20
^q24@0:8@16
B28@0:8s16r^q20
@24@0:8q16
Q40@0:8Q16Q24@32
q56@0:8@16q24Q32^{_NSRange=QQ}40^@48
q40@0:8{_NSRange=QQ}16@32
Q32@0:8Q16@24
v36@0:8@16@24B32
q48@0:8@16q24@32Q40
q92@0:8@16@24@32@40q48B56{_NSRange=QQ}60^{_NSRange=QQ}76^B84
@32@0:8q16^B24
@56@0:8@16@24@32@40@48
B32@0:8@16@24
@36@0:8@16B24@28
v24@0:8#16
@40@0:8@16@24@32
@"SMSourceSpecification"
@52@0:8{_NSRange=QQ}16q32q40s48
Q20@0:8B16
[32S]
