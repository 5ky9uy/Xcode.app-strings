MbP?
NSt3__117bad_function_callE
St9exception
St12length_error
St11logic_error
ImageRendererObjC
DYImage2D
NSCopying
DYOpenGLView
DYTexture
DYResource
NSObject
NSCoding
DYCacheableResource
DYRenderBuffer
DYTextureImageGroup
DYTextureStride
DYRenderingAttributes
numberWithUnsignedLong:
numberWithUnsignedInt:
dictionaryWithObjects:forKeys:count:
pixelFormat
getGLFormatForGenericFormat:glInternalFormatOut:glFormatOut:glTypeOut:
width
height
sampleCount
bytesPerRow
flipped
data
bytes
length
countByEnumeratingWithState:objects:count:
image
class
bundleForClass:
URLForResource:withExtension:
stringWithContentsOfURL:encoding:error:
string
appendString:
UTF8String
systemOrangeColor
deviceRGBColorSpace
colorUsingColorSpace:
redComponent
greenComponent
blueComponent
alphaComponent
stringWithUTF8String:
init
alloc
copy
pixelAtX:y:sample:
intValue
copyWithZone:
isPixelInRenderMaskNotZeroAtX:y:
.cxx_destruct
setPixelFormat:
setWidth:
setHeight:
setSampleCount:
setBytesPerRow:
setFlipped:
setData:
_flipped
_pixelFormat
_width
_height
_sampleCount
_bytesPerRow
_data
makeBackingLayer
setMinificationFilter:
setMagnificationFilter:
initWithCoder:
defaultPixelFormat
initWithFormat:shareContext:
setOpenGLContext:
setGridMinScale:
initWithFrame:pixelFormat:
defaultCenter
removeObserver:
dealloc
initWithPixelFormat:
setNeedsDisplay:
mainQueue
addObserverForName:object:queue:usingBlock:
openGLContext
CGLContextObj
toneMapIsFromUser
updateWithMinValues:maxValues:minLimits:maxLimits:factors:
openGLViewDidLoadImage:
lock
effectiveAppearance
_update
unlock
renderIntoSurface:
makeCurrentContext
initWithAttributes:
clearGLContext
initWithCapacity:
appendBytes:length:
appendData:
writeToFile:atomically:
bounds
convertTosRGB
visible
displayOutlineWhenZoomed
color
getComponents:
setCurrentAppearance:
getChannelMap:
toneMapMinForChannelIndex:
toneMapFactorForChannelIndex:
toneMapMaxForChannelIndex:
setImage:renderingAttributes:overlayOptions:overlayImages:overlayROI:overlayRenderMask:
setRenderRect:
setRenderScale:
drawRect:
createRenderedSurface
readPixelAtX:y:z:
dumpImage:
renderRect
renderScale
gridMinScale
overlayColor
setOverlayColor:
overlayRenderMask
checkerboardColor0
setCheckerboardColor0:
checkerboardColor1
setCheckerboardColor1:
checkerboardGridSize
setCheckerboardGridSize:
delegate
setDelegate:
_renderer
_image
_overlayImages
_renderingAttributes
_overlayOptions
_overlayROI
_reload
_previousEffectiveAppearance
_isRenderbuffer
_contentProviderHasChanged
_renderAttributesDidChangeObserver
_renderScale
_gridMinScale
_overlayColor
_overlayRenderMask
_checkerboardColor0
_checkerboardColor1
_checkerboardGridSize
_delegate
_renderRect
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
encodeWithCoder:
initUpdateWithType:objectID:containerID:changes:
resourceType
containerID
objectID
label
properties
resolution
isStatic
keyForResourceWithID:type:containerID:
keyWithSharegroupID:
streamDictAtFunctionIndex:
createFullObjectWithFunctionStream:dataResolver:
cachingCost
layerCountForMipmapLevel:
textureImageForMipmapLevel:layer:
cubemapLabelForFaceIndex:
baseMipmapLevel
maxMipmapLevel
mipmapLevelsUsedMask
firstValidTextureImage
isCubemap
isFlipped
initWithTexture:level:layer:textureImageGroupComponent:
format
numSamples
initWithRenderBuffer:
initWithTextureImage:flipped:textureImageGroupComponent:
isDepthStencilImageGroup
imageForComponent:
genericFormatForComponent:
numComponents
genericFormat
rowBytes
imageBytes
uncompressedData
offset
subdataWithRange:
getGenericFormatForGLInternalFormat:
initWithResource:level:layer:textureImageGroupComponent:
standardUserDefaults
boolForKey:
postNotificationName:object:
isChannelEnabledForIndex:
setChannelEnabled:forIndex:
setToneMapMin:forChannelIndex:
setToneMapMax:forChannelIndex:
toneMapLimitMinForChannelIndex:
toneMapLimitMaxForChannelIndex:
defaultMinForChannelIndex:
defaultMaxForChannelIndex:
setToneMapIsFromUser:
colorMapping
setColorMapping:
setConvertTosRGB:
selectedMipmapLevel
setSelectedMipmapLevel:
selectedLayer
setSelectedLayer:
channelFlags
_channelStates
_toneMapValues
_toneMapLimits
_toneMapDefaults
_toneMapFactors
_userDefaultAlphaOverride
_toneMapIsFromUser
_convertTosRGB
_selectedMipmapLevel
_selectedLayer
_colorMapping
_channelFlags
imageWithIOSurface:options:
imageRepWithCIImage:
initWithSize:
addRepresentation:
v36@?0^{ReductionValues=[4d][4d][4d][4d][4d]}8d16d24I32
reduce2DInnerCPU: unsupported element count: %d
B16@?0^{ReductionValues=[4d][4d][4d][4d][4d]}8
v16@?0I8I12
v36@?0^{ReductionValues=[4d][4d][4d][4d][4d]}8r^{InternalFormatInfo=IIIIIIIIIIICCCCCCCCCSI}16B24@?<v@?^{ReductionValues=[4d][4d][4d][4d][4d]}CC>28
v24@?0^{ReductionValues=[4d][4d][4d][4d][4d]}8C16C20
ImageRenderer
#define SAMPLE_TYPE_FLOAT
#define SAMPLE_TYPE_INT
#define SAMPLE_TYPE_UNSIGNED_INT
Checkerboard
#version 150
u_color0
u_color1
u_gridSize
u_transform
Overlay
#define OVERLAY
#define REGION_OF_INTEREST
in_position
textureMap
overlay
u_textureSize
u_min
u_max
u_defaultColor
u_overlayColor
u_channelSwizzle
u_channelSelect
u_convertTosRGB
u_flipped
u_overlayFlipped
u_scale
u_gridScale
u_roiRect
u_roiLineColor
u_showOutlineWhenZoomed
u_viewRect
overlayRenderMask
NormalizeComponents: unsupported type: %s (0x%04x)
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
ReduceElements: unsupported element type: %s (0x%04x)
v16@?0Q8
pixelFormat
TI,N,V_pixelFormat
width
TQ,N,V_width
height
TQ,N,V_height
sampleCount
TQ,N,V_sampleCount
bytesPerRow
TQ,N,V_bytesPerRow
flipped
Tc,N,V_flipped
data
T@"NSData",C,N,V_data
v16@?0@"NSNotification"8
v8@?0
renderRect
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_renderRect
renderScale
Td,N,V_renderScale
gridMinScale
Td,N,V_gridMinScale
overlayColor
T@"NSColor",C,N,V_overlayColor
T@"DYImage2D",R,N,V_overlayRenderMask
checkerboardColor0
T@"NSColor",C,N,V_checkerboardColor0
checkerboardColor1
T@"NSColor",C,N,V_checkerboardColor1
checkerboardGridSize
Td,N,V_checkerboardGridSize
delegate
T@"<DYOpenGLViewDelegate>",W,N,V_delegate
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
resourceType
TI,R,N
containerID
TQ,R,N
objectID
label
T@"NSString",R,C,N
properties
T@"NSMutableDictionary",R,N
resolution
T{?=QQQ},R,N
isStatic
Tc,R,N
cachingCost
baseMipmapLevel
Ti,R,N
maxMipmapLevel
mipmapLevelsUsedMask
firstValidTextureImage
T@"<DYTextureImage>",R,N
isCubemap
isFlipped
format
numSamples
T@"NSData",R,N
numComponents
rowBytes
imageBytes
DYRenderingAttributesDidChangeNotification
GPUAlphaDefaultOn
toneMapIsFromUser
Tc,N,V_toneMapIsFromUser
colorMapping
TQ,N,V_colorMapping
convertTosRGB
Tc,N,V_convertTosRGB
selectedMipmapLevel
Ti,N,V_selectedMipmapLevel
selectedLayer
Ti,N,V_selectedLayer
TI,R,N,V_pixelFormat
channelFlags
TQ,R,N,V_channelFlags
@24@0:8^{_NSZone=}16
@16@0:8
c32@0:8Q16Q24
{DYPixelValue=I(?=[4c][4C][4s][4S][4i][4I][4q][4Q][4 ][4f][4d])}40@0:8Q16Q24Q32
v16@0:8
I16@0:8
v20@0:8I16
Q16@0:8
v24@0:8Q16
c16@0:8
v20@0:8c16
v24@0:8@16
@"NSData"
@24@0:8@16
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
v88@0:8@16@24Q32@40{CGRect={CGPoint=dd}{CGSize=dd}}48@80
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8d16
^{__IOSurface=}16@0:8
{DYPixelValue=I(?=[4c][4C][4s][4S][4i][4I][4q][4Q][4 ][4f][4d])}28@0:8I16I20I24
c24@0:8@16
v24@0:8^^{__IOSurface}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
d16@0:8
^{ImageRenderer={Context=^{_CGLContextObject}^{CGLShareGroupRec}^{__GLIContextRec}^{__GLIFunctionDispatchRec}^{__GLIFunctionDispatchRec}}{ImageInfo={ImageFormatInfo=III}{ImageFormatInfo=III}iiiiiiB}{ImageFormatInfo=III}I^v^v^vQQQII{vector<unsigned int, std::__1::allocator<unsigned int> >=^I^I{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> >=^I}}Q{GLSLObject=I}I{array<int, 32>=[32i]}{?={GLSLObject=I}iiii}{OverlayShader={GLSLObject=I}{array<int, 32>=[32i]}}{OverlayShader={GLSLObject=I}{array<int, 32>=[32i]}}III}
@"DYImage2D"
@"NSArray"
@"DYRenderingAttributes"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"NSAppearance"
@"<NSObject>"
@"NSColor"
@"<DYOpenGLViewDelegate>"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@44@0:8I16Q20Q28@36
{?=QQQ}16@0:8
@36@0:8Q16I24Q28
@24@0:8Q16
@32@0:8@16@?24
@44@0:8I16Q20Q28@"NSDictionary"36
@"NSMutableDictionary"16@0:8
@"NSString"36@0:8Q16I24Q28
@"NSString"24@0:8Q16
@"NSDictionary"24@0:8Q16
@32@0:8@"DYFunctionStream"16@?<@"NSData"@?*>24
I20@0:8I16
@24@0:8i16i20
@20@0:8i16
i16@0:8
@"<DYTextureImage>"24@0:8i16i20
@"NSString"20@0:8i16
@"<DYTextureImage>"16@0:8
@"NSData"16@0:8
I24@0:8Q16
@"<DYTextureImage>"24@0:8Q16
@40@0:8@16i24i28Q32
@36@0:8@16c24Q28
@20@0:8I16
c20@0:8C16
v24@0:8c16C20
d20@0:8C16
v28@0:8d16C24
v56@0:8[4d]16[4d]24[4d]32[4d]40[4d]48
v24@0:8[4C]16
v20@0:8i16
[4c]
[4{ToneMapRange="min"d"max"d}]
[4d]
