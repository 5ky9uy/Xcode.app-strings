SaySSG
$ss9OptionSetP
$sSY
$ss10SetAlgebraP
$ss25ExpressibleByArrayLiteralP
$sSt
$sST
SiSg
8newState_t
5index_
7lexemest
Si15delimiterLength_t
4kind_Si15delimiterLengtht
Sb11isRawString_t
17stringLiteralKind_t
17stringLiteralKind_Si10parenCountt
5index_SPy
G7lexemest
5error_t
$ss12CaseIterableP
$s11SwiftParser24RawEffectSpecifiersTraitP
22CorrectAsyncTokenKinds
23CorrectThrowsTokenKinds
25MisspelledAsyncSpecifiers
26MisspelledThrowsTokenKinds
$s11SwiftParser12TokenSpecSetP
5IndexSlQzz_x_SlRz
7ElementSTRtzlXX
$s11SwiftParser21RawParameterListTraitP
$s11SwiftParser23RawParameterClauseTraitP
$s11SwiftParser17RawParameterTraitP
15ParameterSyntax
13ParameterList
$s11SwiftParser15SyntaxParseableP
$s11SwiftParser25UnexpectedNodesCombinableP
$s11SwiftParser13TokenConsumerP
5start_t
_AAt
$sSl
$sSK
$sSk
8slashEnd_Si9numPoundstSg
16closingDelimiter_t
ySSG
3key_
Sg21unexpectedBeforeColon
5colonAA5valuet
$s11SwiftParser27NominalTypeDeclarationTraitP
AnyObject
sourceLocation
else
elseif
endif
available
unavailable
visibility
metadata
_TtC11SwiftParserP33_78149DB072C20084E7D780D86E26C3AF41StringLiteralExpressionIndentationChecker
expectedIndentation
arena
SwiftParser/Expressions.swift
Fatal error
Postfix #if should only have one element
DeclAttributes
AccessorIntroducer
Lexeme
Flags
LexemeSequence
SwiftParser
TriviaParser
Cursor
Result
UnknownCharactersClassification
LexingDiagnostic
State
StateTransition
StateStack
Position
TriviaLexingMode
SwiftParser
StringLiteralKind
SwiftParser
AsyncEffectSpecifier
ThrowsEffectSpecifier
EffectSpecifier
RawEffectSpecifiersTrait
MisspelledAsyncSpecifiers CorrectAsyncTokenKinds MisspelledThrowsTokenKinds CorrectThrowsTokenKinds
MisspelledThrowsTokenKinds
MisspelledAsyncSpecifiers
CorrectThrowsTokenKinds
CorrectAsyncTokenKinds
SwiftParser
TokenSpecSet
TypeSpecifier
SwitchCaseStart
CanBeStatementStart
OperatorLike
DeclarationStart
AccessorKind
Operator
StatementLabel
SwiftParser
RawParameterTrait
RawParameterListTrait
ParameterSyntax
RawParameterClauseTrait
ParameterList
SwiftParser
SyntaxParseable
SwiftParser
UnexpectedNodesCombinable
SwiftParser
Lexer
Lookahead
SkippingState
BracketedTokens
SwiftParser
Parser
Element
SwiftParser
RegexLiteralLexemes
Builder
Kind
SwiftParser
TokenPrecedence
AccessLevelModifier
IfConfigContinuationClauseStartKeyword
SwiftParser
RecoveryConsumptionHandle
SwiftParser
TokenSpec
AccessLevelModifier
SwiftParser
StringLiteralExpressionIndentationChecker
ExprFlavor
PatternContext
CollectionKind
SwiftParser
TokenConsumer
Token
TokenConsumptionHandle
SwiftParser
NominalTypeDeclarationTrait
PrimaryOrGenerics
attributes
modifiers
modifier
kind
unexpectedBeforeToken
token
Element
RawValue
ArrayLiteralElement
rawTokenKind
flags
diagnostic
start
leadingTriviaByteLength
textByteLength
trailingTriviaByteLength
cursor
rawValue
Element
Iterator
sourceBufferStart
cursor
nextToken
lexerStateAllocator
position
previousTokenKind
previousKeyword
stateStack
input
previous
topState
push
pushRegexLexemes
replace
afterRawStringDelimiter
inStringLiteral
afterStringLiteral
inStringInterpolationStart
inStringInterpolation
inRegexLiteral
normal
preferRegexOverBinaryOperator
afterClosingStringQuote
kind
trivia
lexemeContents
tokenKind
flags
error
stateTransition
trailingTriviaLexingMode
keywordKind
singleLine
multiLine
singleQuote
noNewlines
escapedNewlineInMultiLineStringLiteral
AllCases
MisspelledAsyncSpecifiers
CorrectAsyncTokenKinds
MisspelledThrowsTokenKinds
CorrectThrowsTokenKinds
async
await
reasync
rethrows
throw
throws
asyncSpecifier
throwsSpecifier
AllCases
inoutKeyword
owned
shared
borrowing
consuming
actorKeyword
associatedtypeKeyword
caseKeyword
classKeyword
deinitKeyword
enumKeyword
extensionKeyword
funcKeyword
importKeyword
initKeyword
letKeyword
macroKeyword
operatorKeyword
precedencegroupKeyword
protocolKeyword
structKeyword
subscriptKeyword
typealiasKeyword
varKeyword
operator
exclamationMark
infixQuestionMark
postfixQuestionMark
equal
arrow
breakKeyword
continueKeyword
deferKeyword
doKeyword
fallthroughKeyword
forKeyword
forgetKeyword
discardKeyword
guardKeyword
ifKeyword
repeatKeyword
returnKeyword
switchKeyword
throwKeyword
whileKeyword
yield
defaultKeyword
binaryOperator
postfixOperator
prefixOperator
didSet
willSet
unsafeAddress
addressWithOwner
addressWithNativeOwner
unsafeMutableAddress
mutableAddressWithOwner
mutableAddressWithNativeOwner
_read
_modify
label
colon
ParameterSyntax
ParameterList
Token
lexemes
currentToken
tokensConsumed
skipSinglePost
skipUntil
skipSingle
leftParen
leftBrace
leftSquareBracket
poundIfKeyword
poundElseKeyword
poundElseifKeyword
AllCases
Token
arena
lexemes
currentToken
nestingLevel
maximumNestingLevel
Element
Iterator
Index
SubSequence
Indices
kind
error
builder
openingPounds
openingSlash
pattern
closingSlash
closingPounds
numOpenPounds
patternByteLength
numClosePounds
_startInput
_patternErrorOffset
_patternErrorKind
_startPrevious
lexemeCount
RawValue
weakBracketed
openingBrace
unknownToken
identifierLike
exprKeyword
weakPunctuator
weakBracketClose
stmtKeyword
strongPunctuator
closingBrace
declKeyword
openingPoundIf
closingPoundIf
private
fileprivate
internal
public
open
AllCases
poundElseifKeyword
poundElseKeyword
AllCases
unexpectedTokens
tokenConsumptionHandle
rawTokenKind
keyword
remapping
recoveryPrecedence
allowAtStartOfLine
private
fileprivate
internal
public
AllCases
expectedIndentation
arena
basic
trailingClosure
none
matching
bindingIntroducer
dictionary
array
spec
tokenIsMissing
PrimaryOrGenerics
DeclAttributes
AccessorIntroducer
Lexeme
Flags
LexemeSequence
SwiftParser
TriviaParser
Cursor
Result
UnknownCharactersClassification
LexingDiagnostic
State
StateTransition
StateStack
Position
TriviaLexingMode
SwiftParser
StringLiteralKind
SwiftParser
AsyncEffectSpecifier
ThrowsEffectSpecifier
EffectSpecifier
RawEffectSpecifiersTrait
MisspelledAsyncSpecifiers CorrectAsyncTokenKinds MisspelledThrowsTokenKinds CorrectThrowsTokenKinds
MisspelledThrowsTokenKinds
MisspelledAsyncSpecifiers
CorrectThrowsTokenKinds
CorrectAsyncTokenKinds
UTTT
TTTTT
TT&T(TTTTT*,TT
SwiftParser
TokenSpecSet
TypeSpecifier
SwitchCaseStart
CanBeStatementStart
OperatorLike
DeclarationStart
AccessorKind
Operator
38=BGRW\!!!%!!!!!!!!!!
%!!!!!
%!!!%
#!%!
!!!%!
%!!!%!!%!!!!!!&!!!!!!!!!!#!!!!!!!!!!%!!!!%!%!%%!!
!!!##!!!!!!%%%#!
!!#!!%!!!!!!%!!!
StatementLabel
222222222222
222222222222222222222222222222
22222222222222222222222222222
SwiftParser
RawParameterTrait
RawParameterListTrait
ParameterSyntax
RawParameterClauseTrait
ParameterList
SwiftParser
SyntaxParseable
SwiftParser
UnexpectedNodesCombinable
SwiftParser
Lexer
Lookahead
SkippingState
BracketedTokens
SwiftParser
Parser
Element
SwiftParser
RegexLiteralLexemes
Builder
Kind
( $SwiftParser
TokenPrecedence
AccessLevelModifier
IfConfigContinuationClauseStartKeyword
SwiftParser
RecoveryConsumptionHandle
SwiftParser
TokenSpec
AccessLevelModifier
SwiftParser
StringLiteralExpressionIndentationChecker
dddddddddd
dddddddddddddddd
&&&'&&&&
ExprFlavor
PatternContext
CollectionKind
SwiftParser
TokenConsumer
Token
TokenConsumptionHandle
SwiftParser
NominalTypeDeclarationTrait
PrimaryOrGenerics
SaySSG
$ss9OptionSetP
$sSY
$ss10SetAlgebraP
$ss25ExpressibleByArrayLiteralP
$sSt
$sST
SiSg
8newState_t
5index_
7lexemest
Si15delimiterLength_t
4kind_Si15delimiterLengtht
Sb11isRawString_t
17stringLiteralKind_t
17stringLiteralKind_Si10parenCountt
5index_SPy
G7lexemest
5error_t
$ss12CaseIterableP
$s11SwiftParser24RawEffectSpecifiersTraitP
22CorrectAsyncTokenKinds
23CorrectThrowsTokenKinds
25MisspelledAsyncSpecifiers
26MisspelledThrowsTokenKinds
$s11SwiftParser12TokenSpecSetP
5IndexSlQzz_x_SlRz
7ElementSTRtzlXX
$s11SwiftParser21RawParameterListTraitP
$s11SwiftParser23RawParameterClauseTraitP
$s11SwiftParser17RawParameterTraitP
15ParameterSyntax
13ParameterList
$s11SwiftParser15SyntaxParseableP
$s11SwiftParser25UnexpectedNodesCombinableP
$s11SwiftParser13TokenConsumerP
5start_t
_AAt
$sSl
$sSK
$sSk
8slashEnd_Si9numPoundstSg
16closingDelimiter_t
ySSG
3key_
Sg21unexpectedBeforeColon
5colonAA5valuet
$s11SwiftParser27NominalTypeDeclarationTraitP
AnyObject
sourceLocation
else
elseif
endif
available
unavailable
visibility
metadata
_TtC11SwiftParserP33_78149DB072C20084E7D780D86E26C3AF41StringLiteralExpressionIndentationChecker
expectedIndentation
arena
SwiftParser/Expressions.swift
Fatal error
Postfix #if should only have one element
attributes
modifiers
modifier
kind
unexpectedBeforeToken
token
Element
RawValue
ArrayLiteralElement
rawTokenKind
flags
diagnostic
start
leadingTriviaByteLength
textByteLength
trailingTriviaByteLength
cursor
rawValue
Element
Iterator
sourceBufferStart
cursor
nextToken
lexerStateAllocator
position
previousTokenKind
previousKeyword
stateStack
input
previous
topState
push
pushRegexLexemes
replace
afterRawStringDelimiter
inStringLiteral
afterStringLiteral
inStringInterpolationStart
inStringInterpolation
inRegexLiteral
normal
preferRegexOverBinaryOperator
afterClosingStringQuote
kind
trivia
lexemeContents
tokenKind
flags
error
stateTransition
trailingTriviaLexingMode
keywordKind
singleLine
multiLine
singleQuote
noNewlines
escapedNewlineInMultiLineStringLiteral
AllCases
MisspelledAsyncSpecifiers
CorrectAsyncTokenKinds
MisspelledThrowsTokenKinds
CorrectThrowsTokenKinds
async
await
reasync
rethrows
throw
throws
asyncSpecifier
throwsSpecifier
AllCases
inoutKeyword
owned
shared
borrowing
consuming
actorKeyword
associatedtypeKeyword
caseKeyword
classKeyword
deinitKeyword
enumKeyword
extensionKeyword
funcKeyword
importKeyword
initKeyword
letKeyword
macroKeyword
operatorKeyword
precedencegroupKeyword
protocolKeyword
structKeyword
subscriptKeyword
typealiasKeyword
varKeyword
operator
exclamationMark
infixQuestionMark
postfixQuestionMark
equal
arrow
breakKeyword
continueKeyword
deferKeyword
doKeyword
fallthroughKeyword
forKeyword
forgetKeyword
discardKeyword
guardKeyword
ifKeyword
repeatKeyword
returnKeyword
switchKeyword
throwKeyword
whileKeyword
yield
defaultKeyword
binaryOperator
postfixOperator
prefixOperator
didSet
willSet
unsafeAddress
addressWithOwner
addressWithNativeOwner
unsafeMutableAddress
mutableAddressWithOwner
mutableAddressWithNativeOwner
_read
_modify
label
colon
ParameterSyntax
ParameterList
Token
lexemes
currentToken
tokensConsumed
skipSinglePost
skipUntil
skipSingle
leftParen
leftBrace
leftSquareBracket
poundIfKeyword
poundElseKeyword
poundElseifKeyword
AllCases
Token
arena
lexemes
currentToken
nestingLevel
maximumNestingLevel
Element
Iterator
Index
SubSequence
Indices
kind
error
builder
openingPounds
openingSlash
pattern
closingSlash
closingPounds
numOpenPounds
patternByteLength
numClosePounds
_startInput
_patternErrorOffset
_patternErrorKind
_startPrevious
lexemeCount
RawValue
weakBracketed
openingBrace
unknownToken
identifierLike
exprKeyword
weakPunctuator
weakBracketClose
stmtKeyword
strongPunctuator
closingBrace
declKeyword
openingPoundIf
closingPoundIf
private
fileprivate
internal
public
open
AllCases
poundElseifKeyword
poundElseKeyword
AllCases
unexpectedTokens
tokenConsumptionHandle
rawTokenKind
keyword
remapping
recoveryPrecedence
allowAtStartOfLine
private
fileprivate
internal
public
AllCases
expectedIndentation
arena
basic
trailingClosure
none
matching
bindingIntroducer
dictionary
array
spec
tokenIsMissing
PrimaryOrGenerics
