.cv_fpo_stackalign
 6I
 &I
 /I
xwww
xwww
xwww
 XI
 8I
 ?I
 HI
 QI
xwww
xwww
xwww
 gI
 ^I
 eK
 ZK
xuuu
xuuu
xuuu
 vI
 mI
 tJ
 iJ
xuuu
xuuu
xuuu
 zI
 xI
 ~I
 |I
jjjj
mmmm
jjjj
mmmm
xuuu
xuuu
xuuu
pxuu
pxuu
lxuu
pxuu
lxuu
pxuu
pxuu
pxuu
lxuu
pxuu
lxuu
pxuu
xwww
xwww
xwww
xwww
xwww
xwww
xuuu
xuuu
xuuu
xuuu
xuuu
xuuu
xwww
xwww
xwww
xwww
xwww
xwww
xuuu
xuuu
xuuu
xuuu
xuuu
xuuu
xwww
xwww
xwww
xwww
xwww
xwww
xuuu
xuuu
xuuu
xuuu
xuuu
xuuu
xwww
xwww
xwww
xwww
xwww
xwww
xuuu
xuuu
xuuu
xuuu
xuuu
xuuu
jjjj
mmmm
jjjj
mmmm
jjjj
jjjj
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
jjjj
mmmm
jjjj
mmmm
xwww
xwww
xwww
xwww
xwww
xwww
xuuu
xuuu
xuuu
xuuu
xuuu
xuuu
xwww
xwww
xwww
xwww
xwww
xwww
xuuu
xuuu
xuuu
xuuu
xuuu
xuuu
xwww
xwww
xwww
xwww
xwww
xwww
xuuu
xuuu
xuuu
xuuu
xuuu
xuuu
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
xwww
jjjj
mmmm
jjjj
mmmm
jjjj
mmmm
jjjj
mmmm
jjjj
jjjj
xwww
xwww
xwww
xwww
xwww
xwww
xuuu
xuuu
xuuu
xuuu
xuuu
xuuu
xwww
xwww
xwww
xwww
xwww
xwww
xuuu
xuuu
xuuu
xuuu
xuuu
xuuu
xwww
xwww
xwww
xwww
xwww
xwww
xuuu
xuuu
xuuu
xuuu
xuuu
xuuu
jjjj
mmmm
jjjj
mmmm
jjjj
jjjj
xwww
xwww
xwww
xwww
xwww
xwww
xuuu
xuuu
xuuu
xuuu
xuuu
xuuu
xwww
xwww
xwww
xwww
xwww
xwww
xuuu
xuuu
xuuu
xuuu
xuuu
xuuu
xwww
xwww
xwww
xwww
xwww
xwww
xuuu
xuuu
xuuu
xuuu
xuuu
xuuu
jjjj
mmmm
jjjj
mmmm
jjjj
jjjj
/K >
/J >
/ >
/  >
0H >
0F e
0# >
0! Y
0* >
0% e
05 >
00 Y
0@ >
0; Z
0G A
0' A
0" =
02 =
0= #
0, 0
0& ]
07 0
01 ^
0B 0
0< _
0( 9
03 ?
0> i
0. 4
09 4
0D 4
0) ;
04 A
0? m
0I >
0$ >
0+ >
06 >
0A >
0- 4
08 4
0C 4
0/ 4
0: 4
0E 4
0P z
'0Q z
60S >
60R "
>0U >
>0T (
F0V 
O0W 
O0X 
O0W 
O0X 
U0Y 
U0Z 
U0Y 
U0Z 
\0| I
\0\ I
\0c I
\0l I
\0u I
\0{ 
\0] 
\0[ 
\0f 
\0o 
\0v 
xwww
\0^ 
\0g 
\0p 
\0d 
\0m 
\0y 
\0a 
\0j 
\0s 
\0e 
\0n 
\0z 
\0w 
xwww
\0b 
\0k 
\0t 
\0_ 
\0h 
\0q 
\0x 
xwww
\0` 
\0i 
\0r 
c0~ I
c0} 
xwww
xwww
xwww
xuuu
xuuu
xuuu
xuuu
xuuu
xuuu
0!:
0.!>
0$!>
0*!>
0-!A
0!!=
0'!#
0%!0
0+!0
0"!?
0(!i
0 !4
0&!4
0,!4
0#!A
0)!m
0M!>
00!>
07!>
0@!>
0I!>
0L!A
01!A
0/!=
0:!=
0C!#
0D!c
02!c
0;!c
08!0
0A!0
0J!0
05!9
0>!?
0G!i
09!4
0B!4
0K!4
06!;
0?!A
0E!d
03!d
0<!d
0H!m
0F!e
04!e
0=!e
0T!>
0]!>
0f!>
0N!A
0W!=
0`!#
0O!p
0X!p
0a!p
0U!0
0^!0
0g!0
0R!9
0[!?
0d!i
0V!4
0_!4
0h!4
0S!;
0\!A
0e!m
0P!q
0Y!q
0b!q
0Q!r
0Z!r
0c!r
0~!>
0j!>
0n!>
0t!>
0z!>
0}!A
0k!A
0i!=
0q!=
0w!#
0o!0
0u!0
0{!0
0l!9
0r!?
0x!i
0p!4
0v!4
0|!4
0m!;
0s!A
0y!m
'1"
.1<"I
.1&"I
.1/"I
.18"I
.1;"
.1 "
.1)"
.12"
.1!"
.1*"
.13"
.1'"
.10"
.19"
.1$"
.1-"
.16"
.1("
.11"
.1:"
.1%"
.1."
.17"
.1""
.1+"
.14"
.1#"
.1,"
.15"
51R"I
51>"I
51B"I
51H"I
51N"I
51Q"
51?"
51="
51E"
51K"
51C"
51I"
51O"
51@"
51F"
51L"
51D"
51J"
51P"
51A"
51G"
51M"
=1h"I
=1T"I
=1X"I
=1^"I
=1d"I
=1g"
=1U"
=1S"
=1["
=1a"
=1Y"
=1_"
=1e"
=1V"
=1\"
=1b"
=1Z"
=1`"
=1f"
=1W"
=1]"
=1c"
E1~"I
E1j"I
E1n"I
E1t"I
E1z"I
E1}"
E1k"
E1i"
E1q"
E1w"
E1o"
E1u"
E1{"
E1l"
E1r"
E1x"
E1p"
E1v"
E1|"
E1m"
E1s"
E1y"
g14#I
g12#I
g13#
g11#
1%#I
1.#I
1J#I
16#I
1:#I
1@#I
1F#I
1`#I
1L#I
1P#I
1V#I
1\#I
1h#I
1n#I
1t#I
1}#I
jjjj
mmmm
2)$>
2$>
2"$>
2%$>
2($[
2 $0
2#$0
2&$0
2!$4
2$$4
2'$4
+2H$>
+2+$>
+2>$>
+2A$>
+2D$>
+2/$>
+25$>
+2;$>
+2G$j
+2*$j
+2,$j
+22$j
+28$j
+2?$0
+2B$0
+2E$0
+20$0
+26$0
+2<$0
+2-$M
+23$M
+29$M
+2@$4
+2C$4
+2F$4
+21$4
+27$4
+2=$4
+2.$O
+24$O
+2:$O
82R$P
82J$P
82L$P
82N$P
82P$P
82Q$U
82K$U
82I$V
82M$V
82O$W
F2R$X
F2J$X
F2L$X
F2N$X
F2P$X
F2Q$]
F2K$]
F2I$^
F2M$^
F2O$_
T2R$`
T2J$`
T2L$`
T2N$`
T2P$`
T2Q$e
T2K$e
T2I$f
T2M$f
T2O$g
b2R$h
b2J$h
b2L$h
b2N$h
b2P$h
b2Q$m
b2K$m
b2I$n
b2M$n
b2O$o
p2R$
p2J$
p2L$
p2N$
p2P$
p2Q$
p2K$
p2I$
p2M$
p2O$
{2Y$*
jjjj
{2W$-
{2U$*
mmmm
{2S$/
{2X$
{2T$
2z$I
2}$I
3!%#
3'%#
3K%#
3Q%#
3W%#
#3]%
#3a%
#3e%
#3[%
#3_%
#3c%
#3^%
#3b%
#3f%
#3\%
#3`%
#3d%
+3i%
+3m%
+3q%
+3g%
+3k%
+3o%
+3j%
+3n%
+3r%
+3h%
+3l%
+3p%
23t%
23s%
93v%
93u%
@3y%>
@3w%e
@3~%>
@3|%Y
@3z%0
@3x%]
@3}%^
@3{%4
3x&I
3~&I
&4'
/4"'
/4('
/4%'
/4#'
/4)'
/4 '
/4&'
/4$'
/4*'
/4!'
/4''
841'u
~jjjj
84/'v
84-'u
~mmmm
84+'w
840'x
84,'y
C49'u
~jjjj
C47'v
C45'u
~mmmm
C43'w
C48'x
C44'y
N4x'I
N4>'I
N4N'I
N4`'I
N4r'I
N4v'D
N4<'D
N4E'D
N4W'D
N4i'D
N4u'E
N4B'E
N4;'
N4T'
N4f'
N4w'
N4H'
N4='
N4Z'
N4l'
N4?'
N4Q'
N4c'
N4I'
N4['
N4m'
N4O'
N4a'
N4s'
N4F'~
N4X'~
N4j'~
N4C'
N4U'
N4g'
N4L'
N4^'
N4p'
N4P'
N4b'
N4t'
N4G'
N4Y'
N4k'
N4D'
N4V'
N4h'
N4@'
N4R'
N4d'
N4M'
N4_'
N4q'
N4J'
N4\'
N4n'
N4A'
N4S'
N4e'
N4K'
N4]'
N4o'
X4|'I
X4z'D
X4y'
X4{'
X4}'
X4~'
r4(~
y4 (
y4&(
y4#(
y4!(
y4'(
y4$(
y4"(
y4((
y4%(
4)D
!5&)
!5")
!5#)
!5$)
!5%)
,5()>
,5')A
55*)>
55))A
>5,)>
>5+)A
G52)I
G50)I
G51)
G5/)
O5.)>
O5-)A
X56)I
X54)I
X55)
X53)
a58)>
a57)A
k5:)>
k59)A
u5<)>
u5;)A
5>)>
5=)A
5@)>
5?)A
5B)>
5A)A
5J)I
5H)I
5D)>
5C)A
5F)>
5E)A
5L)>
5K)A
5N)>
5M)A
5T)I
5R)I
5P)>
5O)A
5X)I
5V)I
5^)I
5\)I
5Z)>
5Y)A
5b)|
5`)|
5a)}
5_)}
5e)U
5c)U
6i)Q
6g)Q
6n)|
6l)|
6u)>
6~)>
6o)A
6x)=
6p)c
6y)c
6v)0
6s)9
6|)?
6w)4
6t);
6})A
6q)d
6z)d
6r)e
6{)e
jjjj
jjjj
jjjj
jjjj
jjjj
jjjj
jjjj
jjjj
jjjj
jjjj
jjjj
jjjj
6<*I
6(*I
6,*I
62*I
68*I
6[*I
6>*I
6E*I
6N*I
6W*I
6b*I
6k*I
6t*I
6x*I
6|*I
+7'+I
+7#+I
+7&+
+7+
+7$+
+7!+
+7%+
+7"+
+7 +
37.+I
377+I
37@+I
37(+
371+
37:+
37)+
372+
37;+
37/+
378+
37A+
37,+
375+
37>+
370+
379+
37B+
37-+
376+
37?+
37*+
373+
37<+
37++
374+
37=+
;7X+I
;7D+I
;7H+I
;7N+I
;7T+I
;7W+
;7E+
;7C+
;7K+
;7Q+
;7I+
;7O+
;7U+
;7F+
;7L+
;7R+
;7J+
;7P+
;7V+
;7G+
;7M+
;7S+
C7n+I
C7Z+I
C7^+I
C7d+I
C7j+I
C7m+
C7[+
C7Y+
C7a+
C7g+
C7_+
C7e+
C7k+
C7\+
C7b+
C7h+
C7`+
C7f+
C7l+
C7]+
C7c+
C7i+
K7p+I
K7w+I
K7q+
K7o+
K7z+
K7r+
K7{+
K7x+
K7u+
K7~+
K7y+
K7v+
K7s+
K7|+
K7t+
K7}+
7,4
7 ,4
7#,>
7!,"
7(,>
7&,(
7-,>
7+,e
7$,0
7",&
7),0
7',#
7.,0
7,,]
7%,4
7*,4
7/,4
72,>
70,(
77,>
75,e
7<,>
7:,Y
73,0
71,#
78,0
76,]
7=,0
7;,^
74,4
79,4
7>,4
7A,>
7?,0
7F,>
7D,"
7K,>
7I,(
7B,0
7G,0
7E,&
7L,0
7J,#
7C,4
7H,4
7M,4
7P,>
7N,(
7U,>
7S,e
7Z,>
7X,Y
7Q,0
7O,#
7V,0
7T,]
7[,0
7Y,^
7R,4
7W,4
7\,4
7_,>
7],"
7d,>
7b,(
7i,>
7g,e
7`,0
7^,&
7e,0
7c,#
7j,0
7h,]
7a,4
7f,4
7k,4
8n,>
8l,(
8s,>
8q,e
8x,>
8v,Y
8o,0
8m,#
8t,0
8r,]
8y,0
8w,^
8p,4
8u,4
8z,4
8|,>
8},Z
8{,[
8~,C
F8-0
Z8$->
Z8"-"
Z8)->
Z8'-(
Z8 -0
Z8%-0
Z8#-&
Z8*-0
Z8(-#
Z8!-4
Z8&-4
Z8+-4
d8.->
d8,-(
d83->
d81-e
d88->
d86-Y
d8/-0
d8--#
d84-0
d82-]
d89-0
d87-^
d80-4
d85-4
d8:-4
n8=->
n8;-"
n8B->
n8@-(
n8G->
n8E-e
n8>-0
n8<-&
n8C-0
n8A-#
n8H-0
n8F-]
n8?-4
n8D-4
n8I-4
x8L->
x8J-(
x8Q->
x8O-e
x8V->
x8T-Y
x8M-0
x8K-#
x8R-0
x8P-]
x8W-0
x8U-^
x8N-4
x8S-4
x8X-4
8Y->
8Z->
8[->
8^->
8\-(
8c->
8a-e
8h->
8f-Y
8_-0
8]-#
8d-0
8b-]
8i-0
8g-^
8`-4
8e-4
8j-4
8l->
8p->
8v->
8|->
8y-A
8m-Z
8k-[
8s-[
8q-0
8w-0
8}-0
8z-9
8n-C
8t-3
8r-4
8x-4
8~-4
8{-;
8o-E
8u-7
8#.I
89.I
8%.I
8).I
8/.I
85.I
8O.I
8;.I
8?.I
8E.I
8K.I
8n.I
8Q.I
8X.I
8a.I
8j.I
8u.I
8~.I
49 /0
49!/4
49/;
=9%/>
=9+/>
=91/>
=9"/A
=9(/=
=9./#
=9&/0
=9,/0
=92/0
=9#/9
=9)/?
=9//i
=9'/4
=9-/4
=93/4
=9$/;
=9*/A
=90/m
F9m/I
F9k/I
F9l/
F9j/
K9:/I
K9C/I
K9L/I
K94/
K9=/
K9F/
K9G/
K95/
K9>/
K9;/
K9D/
K9M/
K98/
K9A/
K9J/
K9</
K9E/
K9N/
K99/
K9B/
K9H/
K96/
K9?/
K9K/
K9I/
K97/
K9@/
Q9U/I
Q9^/I
Q9g/I
Q9O/
Q9X/
Q9a/
Q9P/
Q9Y/
Q9b/
Q9V/
Q9_/
Q9h/
Q9S/
Q9\/
Q9e/
Q9W/
Q9`/
Q9i/
Q9T/
Q9]/
Q9f/
Q9Q/
Q9Z/
Q9c/
Q9R/
Q9[/
Q9d/
W9p/*
jjjj
W9n/-
W9o/
^9x/D
^9u/E
^9~/
^9r/
^9{/
^9y/~
^9v/
^9z/
^9w/
^9s/
^9|/
^9t/
^9}/
9#0I
9,0I
950I
9>0I
9G0I
9N0I
9L0D
9J0E
9T0I
9R0D
9P0E
9Z0I
9X0D
9V0E
9`0I
9^0D
9\0E
9k0I
9c0I
9e0I
9g0I
9i0I
9z0I
9~0I
C:1
K:"1I
K: 1
K:!1
R:&1I
R:$1
R:%1
Y:.1
Y:71
Y:@1
Y:+1
Y:41
Y:=1
Y::1
Y:(1
Y:11
Y:/1
Y:81
Y:A1
Y:,1
Y:51
Y:>1
Y:01
Y:91
Y:B1
Y:-1
Y:61
Y:;1
Y:)1
Y:21
Y:?1
Y:<1
Y:*1
Y:31
a:I1
a:R1
a:[1
a:F1
a:O1
a:X1
a:C1
a:L1
a:U1
a:J1
a:S1
a:\1
a:G1
a:P1
a:Y1
a:K1
a:T1
a:]1
a:H1
a:Q1
a:Z1
a:D1!
a:M1!
a:V1!
a:E1#
a:N1#
a:W1#
i:d1
i:m1
i:v1
i:^1
i:g1
i:p1
i:q1
i:_1
i:h1
i:e1
i:n1
i:w1
i:b1
i:k1
i:t1
i:f1
i:o1
i:x1
i:c1
i:l1
i:r1
i:`1
i:i1
i:u1
i:s1
i:a1
i:j1
r:y1
r:z1
r:}1
r:~1
r:{1
r:|1
:$2D
: 2D
:#2E
:!2~
:(2I
:&2I
:,2I
:*2I
:02I
:.2I
:k2I
:;2I
:H2I
:W2I
:f2I
:i2D
:92D
:B2D
:Q2D
:`2D
:?2E
:C2~
:R2~
:a2~
:82D
:12D
:32D
:52D
:72D
:22E
:n2I
:{2I
:l2D
:u2D
:r2E
:v2~
;K3I
;(3I
;73I
;F3I
;I3D
;"3D
;13D
;@3D
;#3~
;23~
;A3~
;X3I
;g3I
;v3I
;R3D
;a3D
;p3D
;O3E
;S3~
;b3~
;q3~
;z3I
5;)4I
5;$4I
5;'4D
5;4
5;(4
5;!4
5;%4
5;"4
5;&4
5; 4
5;#4
D;\4I
D;,4I
D;94I
D;H4I
D;W4I
D;Z4D
D;*4D
D;34D
D;B4D
D;Q4D
D;04E
D;?4
D;N4
D;[4
D;+4
D;64
D;E4
D;T4
D;-4
D;<4
D;K4
D;:4
D;I4
D;X4
D;44~
D;C4~
D;R4~
D;14
D;@4
D;O4
D;74
D;F4
D;U4
D;;4
D;J4
D;Y4
D;54
D;D4
D;S4
D;24
D;A4
D;P4
D;.4
D;=4
D;L4
D;84
D;G4
D;V4
D;/4
D;>4
D;M4
K;{4I
K;^4I
K;e4I
K;n4I
K;w4I
K;z4
K;_4
K;]4
K;h4
K;q4
K;r4
K;`4
K;i4
K;f4
K;o4
K;x4
K;c4
K;l4
K;u4
K;g4
K;p4
K;y4
K;d4
K;m4
K;s4
K;a4
K;j4
K;v4
K;t4
K;b4
K;k4
S;}4I
S;~4
S;|4
x;*5I
x;&5I
x;)5
x;5
x; 5
x;!5
x;'5
x;$5
x;(5
x;%5
x;"5
x;#5
;@5I
;,5I
;05I
;65I
;<5I
;V5I
;B5I
;F5I
;L5I
;R5I
;l5I
;X5I
;\5I
;b5I
;h5I
;n5I
;r5I
;x5I
;~5I
;J6>
;H6>
;I6A
;G6=
;!6I
;'6I
;-6I
;36I
;96I
<=6I
<A6I
<E6I
<`6I
<L6I
<P6I
<V6I
<\6I
<b6I
<i6I
<r6I
<{6I
`<7
k<X7I
k<V7I
k<W7
k<U7
q<%7I
q<.7I
q<77I
q<(7
q<17
q<27
q< 7
q<)7
q<&7
q</7
q<87
q<#7
q<,7
q<57
q<'7
q<07
q<97
q<$7
q<-7
q<37
q<!7
q<*7
q<67
q<47
q<"7
q<+7
x<@7I
x<I7I
x<R7I
x<:7
x<C7
x<L7
x<;7
x<D7
x<M7
x<A7
x<J7
x<S7
x<>7
x<G7
x<P7
x<B7
x<K7
x<T7
x<?7
x<H7
x<Q7
x<<7
x<E7
x<N7
x<=7
x<F7
x<O7
<r7G
<Z7!
<c7!
<l7!
<t7N
<[7#
<d7#
<m7#
<!8D
<*8D
<38D
<48|
<"8~
<+8~
<78~
=?8D
=H8D
=Q8D
=<8E
=R8|
=@8~
=I8~
=U8~
=W8Q
=[8G
=Y8S
=]8N
=`8U
=d8G
=b8W
=f8N
!=o8D
!=x8D
!=l8E
!=u8
!=~8
!=i8
!=r8
!={8
!=p8~
!=y8~
!=m8
!=v8
!=q8
!=z8
!=n8
!=w8
!=j8
!=s8
!=|8
!=k8
!=t8
!=}8
= 9X
=#90
=!9u
=$94
="9v
=(9I
=%9K
=19I
=.9J
=:9>
=89>
=99A
=79=
=>9I
=<9J
=E9I
=N9I
=W9I
xwww
xwww
xwww
=c9I
=l9I
=u9I
xwww
xwww
xwww
=~9I
={9K
xuuu
xuuu
xuuu
xuuu
xuuu
xuuu
>H:>
>(:>
>/:>
>8:>
>A:>
>G:A
>):A
>':=
>2:=
>;:#
>B:g
>*:p
>3:p
><:p
>0:0
>9:0
>E:0
>-:9
>6:?
>?:i
>1:4
>::4
>F:4
>C:l
>.:;
>7:A
>@:m
>+:q
>4:q
>=:q
>D:o
>,:r
>5:r
>>:r
>j:>
>J:>
>Q:>
>Z:>
>c:>
>i:A
>K:A
>I:=
>T:=
>]:#
>d:g
>^:c
>L:c
>U:c
>R:0
>[:0
>g:0
>O:9
>X:?
>a:i
>S:4
>\:4
>h:4
>e:l
>P:;
>Y:A
>_:d
>M:d
>V:d
>b:m
>f:o
>`:e
>N:e
>W:e
>y:I
>p:I
>w:K
>l:K
xuuu
xuuu
xuuu
?{:J
xuuu
xuuu
xuuu
xwww
xwww
xwww
xwww
xwww
xwww
xuuu
xuuu
xuuu
xuuu
xuuu
xuuu
R?$;I
R? ;I
R?#;
R?!;
R?;
R?";
\?C;I
\?&;I
\?-;I
\?6;I
\??;I
\?B;
\?';
\?%;
\?0;
\?9;
\?:;
\?(;
\?1;
\?.;
\?7;
\?@;
\?+;
\?4;
\?=;
\?/;
\?8;
\?A;
\?,;
\?5;
\?;;
\?);
\?2;
\?>;
\?<;
\?*;
\?3;
f?b;I
f?E;I
f?L;I
f?U;I
f?^;I
f?a;
f?F;
f?D;
f?O;
f?X;
f?G;
f?P;
f?Y;
f?M;
f?V;
f?_;
f?J;
f?S;
f?\;
f?N;
f?W;
f?`;
f?K;
f?T;
f?];
f?H;
f?Q;
f?Z;
f?I;
f?R;
f?[;
p?d;I
p?k;I
p?t;I
p?};I
p?e;
p?c;
p?n;
p?w;
p?x;
p?f;
p?o;
p?l;
p?u;
p?~;
p?i;
p?r;
p?{;
p?m;
p?v;
p?j;
p?s;
p?y;
p?g;
p?p;
p?|;
p?z;
p?h;
p?q;
@ <=
A!<=
A"<=
A#<=
A$<=
A%<=
'A&<=
2A'<=
9A(<=
BA)<
IA*<
OA+<
WA,<
^A,<
hA-<
rA.<
 6F
 &F
 /F
 !H
wwwx
 *H
 XF
 8F
 ?F
 HF
 QF
 :G
 CG
wwwx
 LG
 gF
 eH
 ^F
 ZH
uuux
 vF
 tG
 mF
 iG
uuux
 zF
 xF
 ~F
 |F
jjjj
mmmm
jjjj
mmmm
uuux
uuxp
uuxl
uuxp
uuxp
uuxl
uuxp
wwwx
wwwx
uuux
uuux
wwwx
wwwx
uuux
uuux
wwwx
wwwx
uuux
uuux
wwwx
wwwx
uuux
uuux
jjjj
mmmm
jjjj
mmmm
jjjj
jjjj
wwwx
wwwx
wwwx
wwwx
wwwx
wwwx
jjjj
mmmm
jjjj
mmmm
wwwx
wwwx
uuux
uuux
wwwx
wwwx
uuux
uuux
wwwx
wwwx
uuux
uuux
wwwx
wwwx
wwwx
wwwx
wwwx
wwwx
jjjj
mmmm
jjjj
mmmm
jjjj
mmmm
jjjj
mmmm
jjjj
jjjj
wwwx
wwwx
uuux
uuux
wwwx
wwwx
uuux
uuux
wwwx
wwwx
uuux
uuux
jjjj
mmmm
jjjj
mmmm
jjjj
jjjj
wwwx
wwwx
uuux
uuux
wwwx
wwwx
uuux
uuux
wwwx
wwwx
uuux
uuux
jjjj
mmmm
jjjj
mmmm
jjjj
jjjj
/K ?
/J ?
/ ?
/  ?
0H ?
0G @
0# ?
0" <
0* ?
0' @
05 ?
02 <
0@ ?
0= "
0F f
0% f
0! [
00 [
0; \
0, 1
0( 8
07 1
03 >
0B 1
0> h
0& `
01 a
0< b
0. 5
0) :
09 5
04 @
0D 5
0? j
0I ?
0$ ?
0+ ?
06 ?
0A ?
0- "
08 "
0C "
0/ 5
0: 5
0E 5
0P z
'0Q z
/0S ?
/0U ?
/0R 
/0T 
F0V 
O0W 
O0X 
O0W 
O0X 
U0Y 
U0Z 
U0Y 
U0Z 
\0| F
\0{ 
\0\ F
\0[ 
\0c F
\0] 
\0l F
\0f 
\0u F
\0o 
\0^ H
\0g H
\0v 
wwwx
\0p H
\0d 
\0a 
\0m 
\0j 
\0y 
\0s 
\0e 
\0b 
\0_ 
\0n 
\0k 
\0h 
\0z 
\0t 
\0w 
\0q 
\0` 
\0i 
\0x 
\0r 
c0~ F
c0} 
wwwx
uuux
uuux
0!;
0.!?
0-!@
0$!?
0!!<
0*!?
0'!"
0%!1
0"!>
0+!1
0(!h
0 !5
0&!5
0#!@
0,!5
0)!j
0M!?
0L!@
00!?
0/!<
07!?
01!@
0@!?
0:!<
0I!?
0C!"
02!X
0;!X
0D!X
08!1
05!8
0A!1
0>!>
0J!1
0G!h
09!5
06!:
03!B
0B!5
0?!@
0<!B
0K!5
0H!j
0E!B
04!D
0=!D
0F!D
0T!?
0N!@
0]!?
0W!<
0f!?
0`!"
0O!Y
0X!Y
0a!Y
0U!1
0R!8
0^!1
0[!>
0g!1
0d!h
0V!5
0S!:
0P!2
0_!5
0\!@
0Y!2
0h!5
0e!j
0b!2
0Q!6
0Z!6
0c!6
0~!?
0}!@
0j!?
0i!<
0n!?
0k!@
0t!?
0q!<
0z!?
0w!"
0o!1
0l!8
0u!1
0r!>
0{!1
0x!h
0p!5
0m!:
0v!5
0s!@
0|!5
0y!j
'1"
.1<"F
.1;"
.1&"F
.1 "
.1/"F
.1)"
.18"F
.12"
.1!"H
.1*"H
.13"H
.1'"
.1$"
.10"
.1-"
.19"
.16"
.1("
.1%"
.1""
.11"
.1."
.1+"
.1:"
.17"
.14"
.1#"
.1,"
.15"
51R"F
51Q"
51>"F
51="
51B"F
51?"
51H"F
51E"
51N"F
51K"
51C"
51@"
51I"
51F"
51O"
51L"
51D"
51A"
51J"
51G"
51P"
51M"
=1h"F
=1g"
=1T"F
=1S"
=1X"F
=1U"
=1^"F
=1["
=1d"F
=1a"
=1Y"
=1V"
=1_"
=1\"
=1e"
=1b"
=1Z"
=1W"
=1`"
=1]"
=1f"
=1c"
E1~"F
E1}"
E1j"F
E1i"
E1n"F
E1k"
E1t"F
E1q"
E1z"F
E1w"
E1o"
E1l"
E1u"
E1r"
E1{"
E1x"
E1p"
E1m"
E1v"
E1s"
E1|"
E1y"
g14#F
g13#
g12#F
g11#
1%#F
1.#F
1 #H
1)#H
1J#F
16#F
1:#F
1@#F
1F#F
1`#F
1L#F
1P#F
1V#F
1\#F
1h#F
1n#F
1t#F
1i#$
1f#%
1o#$
1l#&
1u#$
1r#'
1}#F
1x#G
1~#$
1{#%
1y#)
jjjj
mmmm
2)$?
2($Y
2$?
2"$?
2%$?
2 $1
2#$1
2&$1
2!$5
2$$5
2'$5
+2H$?
+2G$i
+2+$?
+2*$i
+2>$?
+2/$?
+2,$i
+2A$?
+25$?
+22$i
+2D$?
+2;$?
+28$i
+2?$1
+20$1
+2-$L
+2B$1
+26$1
+23$L
+2E$1
+2<$1
+29$L
+2@$5
+21$5
+2.$N
+2C$5
+27$5
+24$N
+2F$5
+2=$5
+2:$N
82R$Q
82Q$R
82J$Q
82I$S
82L$Q
82K$R
82N$Q
82M$S
82P$Q
82O$T
F2R$Y
F2Q$Z
F2J$Y
F2I$[
F2L$Y
F2K$Z
F2N$Y
F2M$[
F2P$Y
F2O$\
T2R$a
T2Q$b
T2J$a
T2I$c
T2L$a
T2K$b
T2N$a
T2M$c
T2P$a
T2O$d
b2R$i
b2Q$j
b2J$i
b2I$k
b2L$i
b2K$j
b2N$i
b2M$k
b2P$i
b2O$l
p2R$
p2Q$
p2J$
p2I$
p2L$
p2K$
p2N$
p2M$
p2P$
p2O$
{2Y$+
jjjj
{2X$
{2W$,
{2U$+
mmmm
{2T$
{2S$.
2^$H
2\$I
2b$H
2`$J
2f$H
2d$K
2l$H
2j$I
2r$H
2p$J
2x$H
2v$K
2i$O
2o$O
2u$O
2}$F
2z$F
2~$$
2|$%
2%&
3$%H
3"%J
3*%H
3(%K
3!%L
3'%L
3.%H
3,%I
32%H
30%J
36%H
34%K
3<%H
3:%I
3B%H
3@%J
3H%H
3F%K
39%O
3?%O
3E%O
3N%H
3L%I
3T%H
3R%J
3Z%H
3X%K
3K%L
3Q%L
3W%L
#3]%
#3[%
#3a%
#3_%
#3e%
#3c%
#3^%H
#3\%I
#3b%H
#3`%J
#3f%H
#3d%K
+3i%
+3g%
+3m%
+3k%
+3q%
+3o%
+3j%H
+3h%I
+3n%H
+3l%J
+3r%H
+3p%K
23t%
23s%
93v%
93u%
@3y%?
@3~%?
@3w%f
@3|%[
@3z%1
@3x%`
@3}%a
@3{%5
3x&F
3~&F
&4'
/4"'
/4('
/4%'
/4#'
/4 '
/4)'
/4&'
/4$'
/4!'
/4*'
/4''
841'p
jjjj~
840'q
84/'r
84-'p
mmmm~
84,'s
84+'t
C49'p
jjjj~
C48'q
C47'r
C45'p
mmmm~
C44's
C43't
N4x'F
N4v'B
N4w'
N4u'C
N4>'F
N4<'B
N4='
N4;'
N4N'F
N4E'B
N4H'
N4B'C
N4`'F
N4W'B
N4Z'
N4T'
N4r'F
N4i'B
N4l'
N4f'
N4I'H
N4?'
N4['H
N4Q'
N4m'H
N4c'
N4O'
N4F'}
N4L'
N4C'
N4a'
N4X'}
N4^'
N4U'
N4s'
N4j'}
N4p'
N4g'
N4P'
N4G'
N4M'
N4D'
N4J'
N4@'
N4b'
N4Y'
N4_'
N4V'
N4\'
N4R'
N4t'
N4k'
N4q'
N4h'
N4n'
N4d'
N4K'
N4A'
N4]'
N4S'
N4o'
N4e'
X4|'F
X4z'B
X4{'
X4y'
X4}'
X4~'
r4(}
y4 (
y4&(
y4#(
y4!(
y4'(
y4$(
y4"(
y4((
y4%(
4)B
!5&)
!5")
!5#)
!5$)
!5%)
,5()?
,5')@
55*)?
55))@
>5,)?
>5+)@
G52)F
G51)
G50)F
G5/)
O5.)?
O5-)@
X56)F
X55)
X54)F
X53)
a58)?
a57)@
k5:)?
k59)@
u5<)?
u5;)@
5>)?
5=)@
5@)?
5?)@
5B)?
5A)@
5J)F
5H)F
5D)?
5C)@
5F)?
5E)@
5L)?
5K)@
5N)?
5M)@
5T)F
5R)F
5P)?
5O)@
5X)F
5V)F
5^)F
5\)F
5Z)?
5Y)@
5b)z
5a){
5`)z
5_){
5e)T
5c)T
6i)P
6g)P
6n)z
6m)~
6l)z
6k)~
6u)?
6o)@
6~)?
6x)<
6p)X
6y)X
6v)1
6s)8
6|)>
6w)5
6t):
6q)B
6})@
6z)B
6r)D
6{)D
jjjj
jjjj
jjjj
jjjj
jjjj
jjjj
jjjj
jjjj
jjjj
jjjj
jjjj
jjjj
6!* 
6%* 
6#*!
6<*F
6(*F
6,*F
62*F
68*F
6[*F
6>*F
6E*F
6N*F
6W*F
6@*G
6I*G
6R*G
6b*F
6k*F
6t*F
6]*H
6f*H
6o*H
6x*F
6|*F
+7'+F
+7&+
+7#+F
+7+G
+7$+
+7!+
+7%+
+7"+
+7 +
37.+F
37(+
377+F
371+
37@+F
37:+
37)+H
372+H
37;+H
37/+
37,+
378+
375+
37A+
37>+
370+
37-+
37*+
379+
376+
373+
37B+
37?+
37<+
37++
374+
37=+
;7X+F
;7W+
;7D+F
;7C+
;7H+F
;7E+
;7N+F
;7K+
;7T+F
;7Q+
;7I+
;7F+
;7O+
;7L+
;7U+
;7R+
;7J+
;7G+
;7P+
;7M+
;7V+
;7S+
C7n+F
C7m+
C7Z+F
C7Y+
C7^+F
C7[+
C7d+F
C7a+
C7j+F
C7g+
C7_+
C7\+
C7e+
C7b+
C7k+
C7h+
C7`+
C7]+
C7f+
C7c+
C7l+
C7i+
K7p+F
K7o+
K7w+F
K7q+
K7z+
K7r+G
K7{+G
K7x+
K7u+
K7~+
K7y+
K7v+
K7s+
K7|+
K7t+
K7}+
7,5
7 ,5
7#,?
7(,?
7-,?
7+,f
7$,1
7),1
7.,1
7,,`
7",'
7',$
7%,5
7*,5
7/,5
72,?
77,?
7<,?
75,f
7:,[
73,1
78,1
7=,1
76,`
7;,a
71,$
74,5
79,5
7>,5
7A,?
7F,?
7K,?
7B,1
7G,1
7L,1
7E,'
7J,$
7C,5
7H,5
7M,5
7P,?
7U,?
7Z,?
7S,f
7X,[
7Q,1
7V,1
7[,1
7T,`
7Y,a
7O,$
7R,5
7W,5
7\,5
7_,?
7d,?
7i,?
7g,f
7`,1
7e,1
7j,1
7h,`
7^,'
7c,$
7a,5
7f,5
7k,5
8n,?
8s,?
8x,?
8q,f
8v,[
8o,1
8t,1
8y,1
8r,`
8w,a
8m,$
8p,5
8u,5
8z,5
8|,?
8{,Y
8},X
8~,B
F8-1
Z8$-?
Z8)-?
Z8"-
Z8'-
Z8 -1
Z8%-1
Z8*-1
Z8#-'
Z8(-$
Z8!-5
Z8&-5
Z8+-5
d8.-?
d83-?
d88-?
d81-f
d86-[
d8,-
d8/-1
d84-1
d89-1
d82-`
d87-a
d8--$
d80-5
d85-5
d8:-5
n8=-?
n8B-?
n8G-?
n8E-f
n8;-
n8@-
n8>-1
n8C-1
n8H-1
n8F-`
n8<-'
n8A-$
n8?-5
n8D-5
n8I-5
x8L-?
x8Q-?
x8V-?
x8O-f
x8T-[
x8J-
x8M-1
x8R-1
x8W-1
x8P-`
x8U-a
x8K-$
x8N-5
x8S-5
x8X-5
8Y-?
8Z-?
8[-?
8^-?
8c-?
8h-?
8a-f
8f-[
8_-1
8d-1
8i-1
8b-`
8g-a
8]-$
8`-5
8e-5
8j-5
8l-?
8k-Y
8p-?
8m-X
8v-?
8s-Y
8|-?
8y-@
8q-1
8n-B
8w-1
8t-2
8}-1
8z-8
8r-5
8o-D
8x-5
8u-6
8~-5
8{-:
8#.F
89.F
8%.F
8).F
8/.F
85.F
8O.F
8;.F
8?.F
8E.F
8K.F
8n.F
8Q.F
8X.F
8a.F
8j.F
8S.G
8\.G
8e.G
8u.F
8~.F
8p.H
8y.H
49 /1
49/:
49!/5
=9%/?
=9"/@
=9+/?
=9(/<
=91/?
=9./"
=9&/1
=9#/8
=9,/1
=9)/>
=92/1
=9//h
=9'/5
=9$/:
=9-/5
=9*/@
=93/5
=90/j
F9m/F
F9l/
F9k/F
F9j/
K9:/F
K94/
K9C/F
K9=/
K9L/F
K9F/
K95/G
K9>/G
K9G/G
K9;/
K98/
K9D/
K9A/
K9M/
K9J/
K9</
K99/
K96/
K9E/
K9B/
K9?/
K9N/
K9K/
K9H/
K97/
K9@/
K9I/
Q9U/F
Q9O/
Q9^/F
Q9X/
Q9g/F
Q9a/
Q9P/H
Q9Y/H
Q9b/H
Q9V/
Q9S/
Q9_/
Q9\/
Q9h/
Q9e/
Q9W/
Q9T/
Q9Q/
Q9`/
Q9]/
Q9Z/
Q9i/
Q9f/
Q9c/
Q9R/
Q9[/
Q9d/
W9p/+
jjjj
W9o/
W9n/,
^9x/B
^9u/C
^9~/
^9r/
^9{/
^9y/}
^9v/
^9z/
^9w/
^9s/
^9|/
^9t/
^9}/
9#0F
9,0F
9'0G
950F
9>0F
9G0F
900H
990H
9B0H
9N0F
9L0B
9J0C
9T0F
9R0B
9P0C
9Z0F
9X0B
9V0C
9`0F
9^0B
9\0C
9k0F
9c0F
9e0F
9g0F
9i0F
9z0F
9~0F
C:1
K:"1F
K:!1
K: 1
R:&1F
R:%1
R:$1
Y:.1
Y:+1
Y:71
Y:41
Y:@1
Y:=1
Y:(1
Y:11
Y::1
Y:/1
Y:,1
Y:81
Y:51
Y:A1
Y:>1
Y:01
Y:-1
Y:)1
Y:91
Y:61
Y:21
Y:B1
Y:?1
Y:;1
Y:*1
Y:31
Y:<1
a:I1
a:F1
a:R1
a:O1
a:[1
a:X1
a:C1
a:L1
a:U1
a:J1
a:G1
a:S1
a:P1
a:\1
a:Y1
a:K1
a:H1
a:D1 
a:T1
a:Q1
a:M1 
a:]1
a:Z1
a:V1 
a:E1"
a:N1"
a:W1"
i:d1
i:^1
i:m1
i:g1
i:v1
i:p1
i:_1
i:h1
i:q1
i:e1
i:b1
i:n1
i:k1
i:w1
i:t1
i:f1
i:c1
i:`1
i:o1
i:l1
i:i1
i:x1
i:u1
i:r1
i:a1
i:j1
i:s1
r:y1
r:z1
r:}1
r:~1
r:{1
r:|1
:$2B
:#2C
: 2B
:!2}
:(2F
:&2F
:,2F
:*2F
:02F
:.2F
:k2F
:i2B
:;2F
:92B
:H2F
:B2B
:?2C
:W2F
:Q2B
:f2F
:`2B
:C2}
:R2}
:a2}
:A2
:82B
:12B
:32B
:22C
:52B
:72B
:n2F
:l2B
:{2F
:u2B
:r2C
:v2}
:t2
;K3F
;I3B
;(3F
;"3B
;73F
;13B
;F3F
;@3B
;#3}
;23}
;A3}
;!3
;X3F
;R3B
;O3C
;g3F
;a3B
;v3F
;p3B
;S3}
;b3}
;q3}
;Q3
;z3F
;|3G
5;)4F
5;'4B
5;(4
5;4
5;$4F
5;!4
5;%4
5;"4
5;&4
5; 4
5;#4
D;\4F
D;Z4B
D;[4
D;,4F
D;*4B
D;+4
D;94F
D;34B
D;64
D;04C
D;H4F
D;B4B
D;E4
D;?4
D;W4F
D;Q4B
D;T4
D;N4
D;-4
D;<4
D;K4
D;:4
D;44}
D;74
D;14
D;I4
D;C4}
D;F4
D;@4
D;X4
D;R4}
D;U4
D;O4
D;;4
D;54
D;84
D;24
D;.4
D;J4
D;D4
D;G4
D;A4
D;=4
D;Y4
D;S4
D;V4
D;P4
D;L4
D;/4
D;>4
D;M4
K;{4F
K;z4
K;^4F
K;]4
K;e4F
K;_4
K;n4F
K;h4
K;w4F
K;q4
K;`4G
K;i4G
K;r4G
K;f4
K;c4
K;o4
K;l4
K;x4
K;u4
K;g4
K;d4
K;a4
K;p4
K;m4
K;j4
K;y4
K;v4
K;s4
K;b4
K;k4
K;t4
S;}4F
S;|4
S;~4
x;*5F
x;)5
x;5
x;&5F
x; 5
x;!5H
x;'5
x;$5
x;(5
x;%5
x;"5
x;#5
;@5F
;,5F
;05F
;65F
;<5F
;V5F
;B5F
;F5F
;L5F
;R5F
;l5F
;X5F
;\5F
;b5F
;h5F
;n5F
;r5F
;x5F
;~5F
;J6?
;I6@
;H6?
;G6<
;6%
;!6F
;'6F
;$6G
;"6$
; 6&
;(6$
;&6'
;%6)
;-6F
;36F
;96F
;*6H
;06H
;66H
;.6$
;,6%
;46$
;26&
;:6$
;86'
;+6(
;16(
;76(
<=6F
<A6F
<E6F
<>6$
<<6%
<B6$
<@6&
<F6$
<D6'
<`6F
<L6F
<P6F
<V6F
<\6F
<b6F
<i6F
<r6F
<{6F
<d6G
<m6G
<v6G
`<7
k<X7F
k<W7
k<V7F
k<U7
q<%7F
q<.7F
q<(7
q<77F
q<17
q< 7G
q<)7G
q<27G
q<&7
q<#7
q</7
q<,7
q<87
q<57
q<'7
q<$7
q<!7
q<07
q<-7
q<*7
q<97
q<67
q<37
q<"7
q<+7
q<47
x<@7F
x<:7
x<I7F
x<C7
x<R7F
x<L7
x<;7H
x<D7H
x<M7H
x<A7
x<>7
x<J7
x<G7
x<S7
x<P7
x<B7
x<?7
x<<7
x<K7
x<H7
x<E7
x<T7
x<Q7
x<N7
x<=7
x<F7
x<O7
<r7F
<f7
<Z7 
<c7 
<l7 
<[7"
<d7"
<m7"
<!8B
<*8B
<38B
<48{
<"8}
<+8}
<78}
< 8
=?8B
=<8C
=H8B
=Q8B
=R8{
=@8}
=I8}
=U8}
=>8
=W8P
=[8F
=`8T
=d8F
!=o8B
!=l8C
!=x8B
!=u8
!=~8
!=i8
!=r8
!={8
!=p8}
!=m8
!=y8}
!=v8
!=q8
!=n8
!=j8
!=z8
!=w8
!=s8
!=|8
!=k8
!=t8
!=}8
= 9?
=#91
=$95
=!91
="95
=(9F
=%9H
=)9F
=19F
=.9G
=29F
=:9?
=99@
=89?
=79<
=>9F
=<9G
=E9F
=N9F
=W9F
=@9H
=I9H
wwwx
=R9H
=c9F
=l9F
=u9F
=^9G
=g9G
wwwx
=p9G
=~9F
={9H
uuux
uuux
>H:?
>G:@
>(:?
>':<
>/:?
>):@
>8:?
>2:<
>A:?
>;:"
>*:Y
>3:Y
>B:f
><:Y
>0:1
>-:8
>9:1
>6:>
>E:1
>?:h
>1:5
>.::
>+:2
>::5
>7:@
>4:2
>F:5
>@:j
>C:k
>=:2
>,:6
>5:6
>D:n
>>:6
>j:?
>i:@
>J:?
>I:<
>Q:?
>K:@
>Z:?
>T:<
>c:?
>]:"
>L:X
>U:X
>d:f
>^:X
>R:1
>O:8
>[:1
>X:>
>g:1
>a:h
>S:5
>P::
>M:B
>\:5
>Y:@
>V:B
>h:5
>b:j
>e:k
>_:B
>N:D
>W:D
>f:n
>`:D
>y:F
>w:H
>p:F
>l:H
uuux
?{:G
uuux
wwwx
wwwx
uuux
uuux
R?$;F
R?#;
R? ;F
R?;
R?!;
R?";
\?C;F
\?B;
\?&;F
\?%;
\?-;F
\?';
\?6;F
\?0;
\??;F
\?9;
\?(;G
\?1;G
\?:;G
\?.;
\?+;
\?7;
\?4;
\?@;
\?=;
\?/;
\?,;
\?);
\?8;
\?5;
\?2;
\?A;
\?>;
\?;;
\?*;
\?3;
\?<;
f?b;F
f?a;
f?E;F
f?D;
f?L;F
f?F;
f?U;F
f?O;
f?^;F
f?X;
f?G;H
f?P;H
f?Y;H
f?M;
f?J;
f?V;
f?S;
f?_;
f?\;
f?N;
f?K;
f?H;
f?W;
f?T;
f?Q;
f?`;
f?];
f?Z;
f?I;
f?R;
f?[;
p?d;F
p?c;
p?k;F
p?e;
p?t;F
p?n;
p?};F
p?w;
p?f;G
p?o;G
p?x;G
p?l;
p?i;
p?u;
p?r;
p?~;
p?{;
p?m;
p?j;
p?g;
p?v;
p?s;
p?p;
p?|;
p?y;
p?h;
p?q;
p?z;
@ <=
A!<=
A"<=
A#<=
A$<=
A%<=
'A&<=
2A'<=
9A(<=
BA)<
IA*<
OA+<
WA,<
^A,<
hA-<
rA.<
A
+v
,v
)v
*v
6x
7x
6y
7y
!/x
!/y
'0x
'0y
-1x
-2x
-1y
-2y
43x
44x
43y
44y
;5x
;5y
BFv
BGv
I>v
I?v
Q8v
Z9v
c<v
c=v
l:v
v;v
@v
Av
Dv
Ev
Bv
Cv
Vv
Wv
Nv
Ov
Hv
Iv
Lv
Mv
Jv
Kv
Pv
Qv
Tv
Uv
+v
,v
)v
*v
6x
7x
6y
7y
!/x
!/y
'0x
'0y
-1x
-2x
-1y
-2y
43x
44x
43y
44y
;5x
;5y
BFv
BGv
I>v
I?v
Q8v
Z9v
c<v
c=v
l:v
v;v
@v
Av
Dv
Ev
Bv
Cv
Vv
Wv
Nv
Ov
Hv
Iv
Lv
Mv
Jv
Kv
Pv
Qv
Tv
Uv
Lower AMX type for load/store
:x:~:o:
#W /
?JF 
?J% 
?J! 
?J0 
?J! 
?J! 
?J! 
?Ja-
?J! 
?J\-
?J; 
?Jf-
?JF 
?J% 
e$c.
Z$W.
?J& 
?J1 
?J#*
?J!*
?J%*
?J< 
?J}%
?Jx%
?Jg-
?Jb-
?J]-
@KN 
?KN 
@KL 
?KL 
@KQ$
@KK$
)KR$
*KL$
@KI$
@KM$
+KJ$
*KN$
@KO$
,KP$
?KY)
-KZ)
?KO)
-KP)
?KM)
-KN)
?KE)
-KF)
?KC)
-KD)
?KA)
-KB)
?K?)
-K@)
?K=)
-K>)
?K;)
-K<)
?K9)
-K:)
?K7)
-K8)
?K-)
-K.)
?K+)
-K,)
?K))
-K*)
?K')
-K()
@K'2
@K/2
@K+2
@K5)
@KW)
@K%2
@K-2
@K)2
@K3)
@KU)
:?JY
;?JW
?J!*
?J%*
?J#*
P?JH
P?JJ
P?JK
P?JL
Q?JG
E?JT
9?J`
9?Ja
W?J-<
X?J!
J?J"
I?JY
+"%e
*"%Z
*"E2
+"E=
@K3#
@K1#
@K1#
@K1#
@K1#
@K3#
@K3#
@K3#
@K(#
@K(#
@K(#
@K)#
@K #
?K3#
?K1#
?K(#
?K1#
?K3#
?K1#
?K1#
?K3#
?K3#
?K(#
?K(#
?K)#
?K #
@Km.
@KP.
@Kd.
@K[.
@KR.
@Kx.
@Ko.
@Ke.
@K\.
@KS.
@Ky.
@Kp.
?Km.
?KP.
?Kd.
?K[.
?KR.
?Kx.
?Ko.
?Ke.
?K\.
?KS.
?Ky.
?Kp.
vK~.
vKu.
@K&0
@KA0
@K80
@K/0
@K'0
@KB0
@K90
@K00
"2$2
I1$1
I/$/
=$=
I<$<
I;$;
@KM0
?KK0
@KS0
$/ /
?KQ0
@KY0
$; ;
?KW0
@K_0
$' '
?K]0
-KN0
T/$/
-KT0
T;$;
-KZ0
'$'
-K`0
2$2
I1$1
=$=
I<$<
)"wc
H#c" 
H#W" 
)"wW
H#W" 
H#c" 
)")W
)")W
?Kx)
?Ko)
?Ky)
?Kp)
5<#<
5;#;
51#1
5/#/
?K7
?K.
$d /
#d /
?Kd
?K[
@KI6
@KG6
?K./
?K(/
?K"/
5<#<
5;#;
51#1
5/#/
xK1/
5(#(
yK+/
5'#'
yK%/
AKR&
AK]&
AKo&
AKT&
AKf&
@KR&
@KR&
?KR&
@Ko&
@Ko&
?Ko&
@Kf&
@Kf&
?Kf&
@K]&
@K]&
?K]&
@KT&
@KT&
?KT&
@K;"
@K)"
@K2"
@K "
@K3"
@K*"
@K!"
?K;"
?K)"
?K2"
?K "
?K3"
?K*"
?K!"
@K)5
@K5
@K 5
@K!5
AKW$
AKS$
AKW$
AKW$
AKW$
AKS$
AKS$
AKS$
AKW$
AKS$
AKW$
AKW$
AKW$
AKS$
AKS$
AKS$
@KW$
@KW$
@KS$
@KS$
@KW$
@KW$
@KW$
@KW$
@KW$
@KW$
@KS$
@KS$
@KS$
@KS$
@KS$
@KS$
@Kl/
@Kj/
@Kj/
@Kj/
@Kj/
@Kl/
@Kl/
@Kl/
@Ka/
@KX/
@KO/
@KF/
@K=/
@K4/
@KO/
@KO/
@KX/
@KX/
@Ka/
@Ka/
@Kb/
@KY/
@KP/
@KG/
@K>/
@K5/
?Kl/
?Kj/
?KX/
?Ka/
?KO/
?KF/
?K=/
?Kj/
?K4/
?Kl/
?Kj/
?Kj/
?Kl/
?Kl/
?KO/
?KO/
?KX/
?KX/
?Ka/
?Ka/
?Kb/
?KY/
?KP/
?KG/
?K>/
?K5/
-KY$
-KU$
-KY$
-KY$
-KY$
-KU$
-KU$
-KU$
-KY$
-KU$
-KY$
-KY$
-KY$
-KU$
-KU$
-KU$
-KY$
-KY$
-KU$
-KU$
-KY$
-KY$
-KY$
-KY$
-KY$
-KY$
-KU$
-KU$
-KU$
-KU$
-KU$
-KU$
@KW7
@KU7
@KU7
@KU7
@KU7
@KW7
@KW7
@KW7
@KL7
@KC7
@K:7
@K17
@K(7
@K:7
@K:7
@KC7
@KC7
@KL7
@KL7
@KM7
@KD7
@K;7
@K27
@K)7
@K 7
?KW7
?KU7
?KC7
?KL7
?K:7
?K17
?K(7
?KU7
?KW7
?KU7
?KU7
?KW7
?KW7
?K:7
?K:7
?KC7
?KC7
?KL7
?KL7
?KM7
?KD7
?K;7
?K27
?K)7
?K 7
?KG 
?K' 
?K" 
?K" 
?K" 
?K" 
?K{,
?Kk-
?Km-
?Ks-
?Ky-
?K},
?K" 
?KG 
N"&c
?K= 
?K2 
?K' 
?J?,
?J],
?JN,
?JD,
?Jb,
?JS,
?JI,
?Jg,
?JX,
?J!,
?J0,
?J&,
?J5,
?J+,
?J:,
?Jl,
?Jq,
?Jv,
?J@,
?J^,
?JO,
?JE,
?Jc,
?JT,
?JJ,
?Jh,
?JY,
?J",
?J1,
?J',
?J6,
?J,,
?J;,
?Jm,
?Jr,
?Jw,
?J;-
?J,-
?J"-
?J@-
?J1-
?J'-
?JE-
?J6-
?JJ-
?JO-
?JT-
?J<-
?J--
?J#-
?JA-
?J2-
?J(-
?JF-
?J7-
?JK-
?JP-
?JU-
?Ky-
'#'"
#/ <
#( 2
#1 =
#W /
$#W-
$#c-
?K"*
?K *
?K&*
?K$*
'#'"
#/ <
#( 2
#1 =
! (#
R?K.<
U"W
U"c
AKY8
AKX8
AKb8
AKa8
AKY8
AKb8
AKX8
AKa8
AKY8
AKb8
AKX8
AKa8
U"c
U"c
AKk
AKj
AK\
AK[
AKk
AK\
AKj
AK[
AKk
AK\
AKj
AK[
AK}9
AK|9
AK}9
AK|9
AK}9
AK|9
AK8
AK8
AK8
AK09
AK/9
AK'9
AK&9
AK09
AK'9
AK/9
AK&9
AK09
AK'9
AK/9
AK&9
AK}:
AK|:
AKn:
AKm:
AK}:
AKn:
AK|:
AKm:
AK}:
AKn:
AK|:
AKm:
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"c
U"c
U"c
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
?Ko8
?Kx8
?K~8
?Kl8
?Ku8
?K{8
?Ki8
?Kr8
@Ks
@Kh
@Kd
@KY
?Ks
?Kh
?Kd
?KY
@Ks
@Kh
@Kd
@KY
?Ks
?Kh
?Kd
?KY
Ku
Kf
@KW
@K5
@K7
@KK
@K)
@K9
@KB
@K 
@KL
@K*
@K:
@KC
@K!
?KW
?K5
?K7
?KK
?K)
?K9
?KB
?K 
?KL
?K*
?K:
?KC
?K!
?Ku
?Kl
?Kf
?K]
?KX
?K?
?K6
?K8
?KH
?K&
?KQ
?K/
?K| 
?Kc 
?K~ 
?K\ 
?Kl 
?Ku 
@K{ 
@K} 
@K[ 
@Ko 
@K] 
@Kf 
@Kp 
@K^ 
@Kg 
?K{ 
?K} 
?K[ 
?Ko 
?K] 
?Kf 
?Kp 
?K^ 
?Kg 
?K=
?K.
*"/1
+"/=
C$/"#W
*$1"
$2 Z
$; c
v?Kl
v?Ku
*")1
+")=
>#/" W
'#1"
#2 Z
#; c
$$"
"#"
?Kj:
?KQ:
?KJ:
?KZ:
?KH:
?K/:
?K(:
?K8:
?Kc:
?KA:
?Ki:
?KI:
?KG:
?K':
?K]:
?K;:
?KK:
?KT:
?K):
?K2:
?K^:
?K<:
?KL:
?KU:
?K*:
?K3:
?K99
?K79
*"/1
+"/=
$2 Z
$; c
*")1
+")=
#2 Z
#; c
@ 4
A 4
B 4
AKK/
AKK/
AKK/
@KK/
@KK/
@KK/
AK67
AK67
AK67
@K67
@K67
@K67
@K_2
@K\2
@K?3
@K<3
AK?1
AK<1
AK]"
AKA"
@K]"
@KA"
AKK5
AK/5
AKm"
@Km"
AKw5
AK[5
AKi.
AKg.
@Ki.
@Kg.
AKD.
@KD.
AK..
@K..
AKU#
AK9#
@KU#
@K9#
AK+*
AKV*
AKT*
@K+*
@KV*
@KT*
AKM+
AK"+
AK +
@KM+
@K"+
@K +
AK]+
@K]+
AKK/
AKI/
@KK/
@KI/
AK67
AK47
@K67
@K47
AKe2
AKE3
AK#4
AKv4
AKt4
AK+0
AK)0
AKw&
@KH!
@Ks!
@KF!
@K*/
AKO6
AKz6
AKx6
AKJ/
AKJ/
AKJ/
@KJ/
@KJ/
@KJ/
AK57
AK57
AK57
@K57
@K57
@K57
@K^2
@K[2
@K>3
@K;3
AK>1
AK;1
@K4$
@K3$
@K{-
@Kz-
AK\"
AK@"
@K\"
@K@"
AKJ5
AK.5
AKl"
@Kl"
AKv5
AKZ5
AKh.
AKf.
@Kh.
@Kf.
AKC.
@KC.
AK-.
@K-.
AKT#
AK8#
@KT#
@K8#
AK**
AKU*
AKS*
@K**
@KU*
@KS*
AKL+
AK!+
@KL+
@K!+
AK\+
@K\+
AKJ/
AKH/
@KJ/
@KH/
AK57
AK37
@K57
@K37
AKd2
AKD3
AK"4
AKu4
AKs4
AK*0
AK(0
AKv&
@KG!
@Kr!
@KE!
@K)/
AKN6
AKy6
AKw6
#; =
AK$#
AK$#
AK$#
@K$#
@K$#
@K$#
AK]/
AK]/
AK]/
AK9/
AK9/
AK9/
@K]/
@K]/
@K]/
@K9/
@K9/
@K9/
AKH7
AKH7
AKH7
AK$7
AK$7
AK$7
@KH7
@KH7
@KH7
@K$7
@K$7
@K$7
@KA4
@K>4
@KA2
@K>2
@K!3
@K`3
@K]3
@Kw/
@Kt/
AK-1
AKQ1
AK*1
AKN1
AK."
AK,"
@K."
@K,"
AKW.
AK}.
AKU.
AK{.
@KW.
@K}.
@KU.
@K{.
AKD*
AKj*
AKB*
AKh*
@KD*
@Kj*
@KB*
@Kh*
AK6+
AK4+
@K6+
@K4+
AKv+
AKt+
@Kv+
@Kt+
AK$#
AK"#
@K$#
@K"#
AK]/
AK9/
AK[/
AK7/
@K]/
@K9/
@K[/
@K7/
AKH7
AK$7
AKF7
AK"7
@KH7
@K$7
@KF7
@K"7
AKG2
AK'3
AKf3
AKG4
AK~3
AKd4
AKb4
AK=0
AK;0
@K\!
@K6!
@KZ!
@K4!
@Kt)
@Kr)
AKh6
AKf6
AK##
AK##
AK##
@K##
@K##
@K##
AK\/
AK\/
AK\/
AK8/
AK8/
AK8/
@K\/
@K\/
@K\/
@K8/
@K8/
@K8/
AKG7
AKG7
AKG7
AK#7
AK#7
AK#7
@KG7
@KG7
@KG7
@K#7
@K#7
@K#7
@K@4
@K=4
@K@2
@K=2
@K 3
@K_3
@K\3
@Kv/
@Ks/
AK,1
AKP1
AK)1
AKM1
@Ko-
@Kn-
@K~,
AK-"
AK+"
@K-"
@K+"
AKV.
AK|.
AKT.
AKz.
@KV.
@K|.
@KT.
@Kz.
AK*
@K*
AKC*
AKi*
AKA*
AKg*
@KC*
@Ki*
@KA*
@Kg*
AK5+
AK3+
@K5+
@K3+
AKu+
AKs+
@Ku+
@Ks+
AK##
AK!#
@K##
@K!#
AK\/
AK8/
AKZ/
AK6/
@K\/
@K8/
@KZ/
@K6/
AKG7
AK#7
AKE7
AK!7
@KG7
@K#7
@KE7
@K!7
AKF2
AK&3
AKe3
AKF4
AK}3
AKc4
AKa4
AK<0
AK:0
@K[!
@K5!
@KY!
@K3!
@Ks)
@Kq)
AKg6
AKe6
#; ;
AK-#
AK-#
AK-#
@K-#
@K-#
@K-#
AKf/
AKf/
AKf/
AKB/
AKB/
AKB/
@Kf/
@Kf/
@Kf/
@KB/
@KB/
@KB/
AKQ7
AKQ7
AKQ7
AK-7
AK-7
AK-7
@KQ7
@KQ7
@KQ7
@K-7
@K-7
@K-7
@KP4
@KM4
@KP2
@KM2
@K03
@Ko3
@K-3
@Kl3
@K}/
AK1
AK61
AKZ1
AK31
AKW1
AK7"
AK5"
@K7"
@K5"
AK%5
AK#5
AKW"
@KW"
AKE5
AKq5
AK`.
AK^.
@K`.
@K^.
AK>.
@K>.
AK(.
@K(.
AKO#
@KO#
AK{*
AKM*
AKs*
AKK*
AKq*
@K{*
@KM*
@Ks*
@KK*
@Kq*
AKG+
AK?+
AK=+
@KG+
@K?+
@K=+
AK}+
@K}+
AK-#
AK+#
@K-#
@K+#
AKf/
AKB/
AKd/
AK@/
@Kf/
@KB/
@Kd/
@K@/
AKQ7
AK-7
AKO7
AK+7
@KQ7
@K-7
@KO7
@K+7
AK#
AKV2
AK63
AKu3
AKV4
AKm4
AKk4
AK"0
AKF0
AK 0
AKD0
@Ke!
@K?!
@Km!
@Kc!
@K=!
@K})
@K{)
@K$/
AKq6
AKo6
AK,#
AK,#
AK,#
@K,#
@K,#
@K,#
AKe/
AKe/
AKe/
AKA/
AKA/
AKA/
@Ke/
@Ke/
@Ke/
@KA/
@KA/
@KA/
AKP7
AKP7
AKP7
AK,7
AK,7
AK,7
@KP7
@KP7
@KP7
@K,7
@K,7
@K,7
@KO4
@KL4
@KO2
@KL2
@K/3
@Kn3
@K,3
@Kk3
@K0
@K|/
AK51
AKY1
AK21
AKV1
@K.$
@K-$
@Ku-
@Kt-
AK6"
AK4"
AK"
@K6"
@K4"
@K"
AK$5
AK"5
AKV"
@KV"
AKD5
AKp5
AK_.
AK].
@K_.
@K].
AK=.
@K=.
AK'.
@K'.
AKN#
@KN#
AKz*
AKL*
AKr*
AKJ*
AKp*
@Kz*
@KL*
@Kr*
@KJ*
@Kp*
AKF+
AK>+
AK<+
@KF+
@K>+
@K<+
AK~+
AK|+
@K~+
@K|+
AK,#
AK*#
@K,#
@K*#
AKe/
AKA/
AKc/
AK?/
@Ke/
@KA/
@Kc/
@K?/
AKP7
AK,7
AKN7
AK*7
@KP7
@K,7
@KN7
@K*7
AKU2
AK53
AKt3
AKU4
AKl4
AKj4
AK!0
AKE0
AKC0
@Kd!
@K>!
@Kl!
@Kb!
@K<!
@K|)
@Kz)
@K#/
AK7
AKp6
AKn6
#; <
AKT/
AKT/
AKT/
@KT/
@KT/
@KT/
AKS/
AKS/
AKS/
@KS/
@KS/
@KS/
AK?7
AK?7
AK?7
@K?7
@K?7
@K?7
AK>7
AK>7
AK>7
@K>7
@K>7
@K>7
@K24
@K14
@K/4
@K.4
@Kt2
@Ks2
@Kq2
@Kp2
@KQ3
@KP3
@KN3
@KM3
AKH1
AKG1
AKE1
AKD1
AK%"
AK#"
@K%"
@K#"
AK$"
AK""
@K$"
@K""
AKt.
AKr.
@Kt.
@Kr.
AKs.
AKq.
@Ks.
@Kq.
AKa*
AK_*
@Ka*
@K_*
AK`*
AK^*
@K`*
@K^*
AK-+
AK++
@K-+
@K++
AK,+
AK*+
@K,+
@K*+
AKT/
AKR/
@KT/
@KR/
AKS/
AKQ/
@KS/
@KQ/
AK?7
AK=7
@K?7
@K=7
AK>7
AK<7
@K>7
@K<7
AKz2
AKy2
AKW3
AKV3
AK84
AK74
AK40
AK30
AK20
AK10
@KS!
@KR!
@KQ!
@KP!
@K/
AKM"
@KM"
AKL"
@KL"
AK;5
AK:5
AKy"
@Ky"
AKx"
@Kx"
AKg5
AKf5
AKE#
@KE#
AKD#
@KD#
AK7*
@K7*
AK6*
@K6*
AKi+
@Ki+
AKh+
@Kh+
@K)!
@K(!
AK[6
AKZ6
@K3
AKc"
AKG"
@Kc"
@KG"
AKb"
AKF"
@Kb"
@KF"
AKQ5
AK55
AKP5
AK45
AKs"
@Ks"
AKr"
@Kr"
AK}5
AKa5
AK|5
AK`5
AKJ.
@KJ.
AKI.
@KI.
AK4.
@K4.
AK3.
@K3.
AK[#
AK?#
@K[#
@K?#
AKZ#
AK>#
@KZ#
@K>#
AK1*
@K1*
AK0*
@K0*
AKS+
@KS+
AKR+
@KR+
AKc+
@Kc+
AKb+
@Kb+
AK}&
AK|&
@Ky!
@K#!
@Kx!
@K"!
AKU6
AKT6
@K0/
@K//
@K:$
@K9$
U"/
U"/
U"/
U"1
U"'
U"'
U"(
U"(
U"1
yK'/
U"'
U"'
#; <
U"1
U"1
U"1
U"1
U"1
U"1
U"1
U"1
U"1
U"=
U"=
U"1
U"'
U"'
U"'
U"'
U"=
U"=
U"=
U"=
U"1
U"1
U"1
U"'
yK&/
U"'
U"'
U"'
U"'
AK-#
AK-#
AK-#
AK-#
AK+#
@K-#
@K-#
@K-#
@K-#
@K+#
AKB/
AKB/
AKB/
AKB/
AKf/
AKf/
AKf/
AKf/
AK@/
AKd/
@KB/
@KB/
@KB/
@KB/
@Kf/
@Kf/
@Kf/
@Kf/
@K@/
@Kd/
AK-7
AK-7
AK-7
AK-7
AKQ7
AKQ7
AKQ7
AKQ7
AK+7
AKO7
@K-7
@K-7
@K-7
@K-7
@KQ7
@KQ7
@KQ7
@KQ7
@K+7
@KO7
AK#
@Kh'
@Ke'
@KG8
@K28
@KD8
@K/8
@K}8
AKp7
AKm7
U Y4
U Y4
AK.
AKG
AK,
AKE
@K.
@KG
@K,
@KE
AKt 
AKr 
@Kt 
@Kr 
AKV9
AKk9
AKT9
AKi9
AKq'
AKo'
@K@:
@KY:
@K>:
@KW:
AK5;
AK3;
AK];
AKs;
AK[;
AKq;
AK,#
AK,#
AK,#
AK,#
AK*#
@K,#
@K,#
@K,#
@K,#
@K*#
AKA/
AKA/
AKA/
AKA/
AKe/
AKe/
AKe/
AKe/
AK?/
AKc/
@KA/
@KA/
@KA/
@KA/
@Ke/
@Ke/
@Ke/
@Ke/
@K?/
@Kc/
AK,7
AK,7
AK,7
AK,7
AKP7
AKP7
AKP7
AKP7
AK*7
AKN7
@K,7
@K,7
@K,7
@K,7
@KP7
@KP7
@KP7
@KP7
@K*7
@KN7
@Kg'
@Kd'
@KF8
@K18
@KC8
@K.8
@K|8
AKo7
AKl7
@K4 
@K3 
AK-
AKF
AK+
AKD
@K-
@KF
@K+
@KD
AKs 
AKq 
@Ks 
@Kq 
AKU9
AKj9
AKS9
AKh9
AKp'
AKn'
@K?:
@KX:
@K=:
@KV:
AK4;
AK2;
AK\;
AKr;
AKZ;
AKp;
#c d
vKJ8
U"e
U"Y
U YK
U"Y
U"%Y
U"%Y
U"%Y
U"%Y
U"%Y
U"%Y
#c d
U"Y
U"Y
U"Y
U"e
U"e
U"Y
vKI8
U"Y
U"Y
U"e
U"e
U"e
U"e
U"e
U"e
U"e
U"e
U"e
U"Y
U"Y
U"Y
U"Y
U"Y
U"Y
U"Y
U"Y
U"Y
U"Y
U"Y
U"Y
U"Y
U"Y
U"Y
U"Y
U"Y
U"Y
U"Y
U"Y
U"e
U"e
U"/
U"/
U"/
#; ;
U"/
U"/
U"/
U"/
U"/
U"/
U"/
U"<
U"<
U"/
U"/
U"/
U"/
U"/
U"<
U"<
U"<
U"<
U"/
U"/
U"/
U"/
U"/
U"/
U"/
AK$#
AK$#
AK$#
AK$#
AK"#
@K"#
@K$#
@K$#
@K$#
@K$#
AK9/
AK9/
AK9/
AK9/
AK]/
AK]/
AK]/
AK]/
AK7/
AK[/
@K9/
@K9/
@K9/
@K9/
@K]/
@K]/
@K]/
@K]/
@K7/
@K[/
AK$7
AK$7
AK$7
AK$7
AKH7
AKH7
AKH7
AKH7
AK"7
AKF7
@K$7
@K$7
@K$7
@K$7
@KH7
@KH7
@KH7
@KH7
@K"7
@KF7
@KV'
@KS'
@K>8
@K)8
@K;8
@K&8
@Kw8
@Kt8
AKg7
AK|7
AKd7
AKy7
AK:
U W4
U W4
AK>
AK%
AK<
AK#
@K>
@K%
@K<
@K#
AKk 
AKi 
@Kk 
@Ki 
AKb9
AKM9
AK`9
AKK9
AK_'
AK]'
@KP:
@K7:
@KN:
@K5:
AK,;
AK*;
AKj;
AKT;
AKh;
AKR;
AK##
AK##
AK##
AK##
AK!#
@K!#
@K##
@K##
@K##
@K##
AK8/
AK8/
AK8/
AK8/
AK\/
AK\/
AK\/
AK\/
AK6/
AKZ/
@K8/
@K8/
@K8/
@K8/
@K\/
@K\/
@K\/
@K\/
@K6/
@KZ/
AK#7
AK#7
AK#7
AK#7
AKG7
AKG7
AKG7
AKG7
AK!7
AKE7
@K#7
@K#7
@K#7
@K#7
@KG7
@KG7
@KG7
@KG7
@K!7
@KE7
@KU'
@K~'
@KR'
@K=8
@K(8
@K:8
@K%8
@Kv8
@Ks8
AKf7
AK{7
AKc7
AKx7
@K) 
@K( 
AK=
AK$
AK;
AK"
@K=
@K$
@K;
@K"
AKj 
AKh 
@Kj 
@Kh 
AKa9
AKL9
AK_9
AKJ9
AK^'
AK\'
@KO:
@K6:
@KM:
@K4:
AK+;
AK);
AKi;
AKS;
AKg;
AKQ;
vKA8
vK,8
U"d
vKj7
U"W
U WK
U"W
U"%W
U"%W
U"%W
U"%W
U"%W
U"%W
U"W
U"W
U"W
U"W
vK@8
vK+8
U"W
U"W
vKi7
vK~7
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"W
U"2
yK-/
U"(
U"(
#; =
U"2
U"2
U"2
U"2
U"2
U"2
U"2
U"(
U"(
U"(
U"(
U"2
U"(
U"2
U"2
U"2
U"(
yK,/
U"(
U"(
AKK/
AKK/
AKK/
AKK/
AKI/
@KK/
@KK/
@KK/
@KK/
@KI/
AK67
AK67
AK67
AK67
AK47
@K67
@K67
@K67
@K67
@K47
@KP8
@KM8
AK!:
U Z4
U Z4
AKP
AKN
@KP
@KN
AKt9
AKr9
@Kb:
@K`:
AK>;
AK<;
AK|;
AKz;
AKJ/
AKJ/
AKJ/
AKJ/
AKH/
@KJ/
@KJ/
@KJ/
@KJ/
@KH/
AK57
AK57
AK57
AK57
AK37
@K57
@K57
@K57
@K57
@K37
@KO8
@KL8
AK :
@K? 
@K> 
AKO
AKM
@KO
@KM
AKs9
AKq9
@Ka:
@K_:
AK=;
AK;;
AK{;
AKy;
#c e
U ZK
#c e
vKw.
vKv.
AKT/
AKT/
AKT/
AKT/
AKR/
@KT/
@KT/
@KT/
@KT/
@KR/
AKS/
AKS/
AKS/
AKS/
AKQ/
@KS/
@KS/
@KS/
@KS/
@KQ/
AK?7
AK?7
AK?7
AK?7
AK=7
@K?7
@K?7
@K?7
@K?7
@K=7
AK>7
AK>7
AK>7
AK>7
AK<7
@K>7
@K>7
@K>7
@K>7
@K<7
@KD'
@KC'
@KA'
@K@'
@K 8
@Kn8
@Km8
@Kk8
@Kj8
AK^7
AK]7
AK[7
AKZ7
AKb 
AK` 
@Kb 
@K` 
AKa 
AK_ 
@Ka 
@K_ 
AKD9
AKC9
AKB9
AKA9
AKM'
AKL'
AKK'
AKJ'
@K.:
@K-:
@K,:
@K+:
AK;
AKK;
AKJ;
AKI;
AKH;
vK#8
vKa7
vK"8
vK`7
U")
U")
U")
xK3/
U")
U")
U")
U")
U")
U")
U")
U")
xK2/
?K{,
?K{,
?K},
?K{,
?K},
`#'"
$#/ ;
?Kk-
?Kk-
?Km-
?Ks-
?Ks-
?Kk-
?Ks-
?Km-
`#'"
$#/ ;
+")e
<#W" /
'#Y"
1#c" /
'#d"
#Z 2
+")e
#Z 2
%#W"
+"/e
A$W"#/
*$Y"
5$c"#/
v?K;
*$d"
v?KD
$Z 2
+")e
<#W" /
'#Y"
1#c" /
'#d"
#Z 2
+"/e
$Z 2
($W"
v?Kw
+")e
#Z 2
%#W"
*" 2
:$;%
:$/%
:$'%
:$<%
:$1%
:$(%
:$c%
:$W%
:$d%
:$Y%
?K *
?K *
?K$*
?K$*
?K"*
?K"*
?K&*
?K&*
`"*2
`"*2
`",2
` W4
` W4
` c4
` c4
?K? 
?K? 
?K> 
?K4 
?K4 
?K3 
?K) 
?K) 
?K( 
?KJ0
?KP0
?Ku/
?KV0
?K\0
?K~/
?K{/
?Kr/
-KL0
-KR0
-KX0
-K^0
@Ks%
@Ku%
-Kt%
-Kv%
?K#2
|K$2
@Km)
@Kk)
@Ka)
@K_)
@Kc#
@Ka#
@Kq&
@Ks&
@Kq&
?K4
?KN4
?K?4
?K04
?KK4
?K<4
?K-4
?K]2
?KN2
?K?2
?Kr2
?KZ2
?KK2
?K<2
?K~2
?Ko2
?K=3
?K.3
?Km3
?K^3
?KO3
?K:3
?K+3
?Kj3
?K[3
?KL3
?K62
?K42
?K22
|K82
}K12
@K=1
@K+1
@K41
@KX1
@KF1
@KO1
@K:1
@K(1
@K11
@KU1
@KC1
@KL1
@Ky0
?Kx0
@K}0
?K|0
-Kz0
-K~0
@K!1
?K 1
@K%1
?K$1
-K"1
-K&1
AKo/
@Kn/
-Kp/
@Kc;
@KD;
@Ka;
@Kc;
@KD;
@Kw;
@KX;
@Ke;
@Kn;
@KF;
@KO;
@Kx;
@KY;
@Kf;
@Ko;
@KG;
@KP;
@K%;
@Ka6
@K_6
@K~6
@KK6
@KY6
@KS6
@KM6
@Ku6
@Kl6
@Kc6
@Kv6
@Km6
@Kd6
|K`6
}KL6
@KB;
@K#;
@K%;
@K9;
@K';
@K0;
@K:;
@K(;
@K1;
@KQ"
@K="
@Kg"
@KS"
@K["
@Ka"
@KU"
@KK"
@KE"
@K?"
?KQ"
?K="
?Kg"
?KS"
?K["
?Ka"
?KU"
?KK"
?KE"
?K?"
|KR"
}K>"
|Kh"
}KT"
@K}"
@Ki"
@Kw"
@Kq"
@Kk"
?K}"
?Ki"
?Kw"
?Kq"
?Kk"
|K~"
}Kj"
@K8.
@K$.
@K,.
@K2.
@K&.
?K8.
?K$.
?K,.
?K2.
?K&.
|K9.
}K%.
@KN.
@K:.
@KB.
@KH.
@K<.
?KN.
?K:.
?KB.
?KH.
?K<.
|KO.
}K;.
@K?5
@K+5
@KU5
@KA5
@KI5
@KO5
@KC5
@K95
@K35
@K-5
|K@5
}K,5
|KV5
}KB5
@Kk5
@KW5
@Km5
@Ku5
@K{5
@Ko5
@Ke5
@K_5
@KY5
|Kl5
}KX5
}Kn5
@Km+
@KY+
@Ko+
@Kg+
@Ka+
@K[+
@Kz+
@Kq+
@K{+
@Kr+
?Km+
?KY+
?Ko+
?Kg+
?Ka+
?K[+
?Kz+
?Kq+
?K{+
?Kr+
|Kn+
}KZ+
@KW+
@KC+
@K&+
@KQ+
@KK+
@KE+
@K:+
@K1+
@K(+
@K+
@K;+
@K2+
@K)+
?KW+
?KC+
?K&+
?KQ+
?KK+
?KE+
?K:+
?K1+
?K(+
?K+
?K;+
?K2+
?K)+
|KX+
}KD+
@Kw*
@KZ*
@K;*
@K=*
@K'*
@K5*
@K/*
@K)*
@Ky*
@KQ*
@KH*
@K?*
@Kn*
@Ke*
@K\*
@KR*
@KI*
@K@*
@Ko*
@Kf*
@K]*
?Kw*
?KZ*
?K;*
?K=*
?K'*
?K5*
?K/*
?K)*
?Ky*
?KQ*
?KH*
?K?*
?Kn*
?Ke*
?K\*
?KR*
?KI*
?K@*
?Ko*
?Kf*
?K]*
}Kx*
|K<*
}K(*
@KI#
@K5#
@K_#
@KK#
@KS#
@KY#
@KM#
@KC#
@K=#
@K7#
?KI#
?K5#
?K_#
?KK#
?KS#
?KY#
?KM#
?KC#
?K=#
?K7#
|KJ#
}K6#
|K`#
}KL#
@Kj0
@Kb0
@Kh0
@Kf0
@Kd0
?Kj0
?Kb0
?Kh0
?Kf0
?Kd0
|Kk0
}Kc0
@Kj2
@K:2
@Kc2
@KT2
@KE2
@Km2
@Kx2
O$'"#'
O$/"#/
O$;"#;
@K(4
@K!4
@K[4
@K+4
@KT4
@KE4
@K64
O$'"#'
O$/"#/
O$;"#;
@KJ3
@KC3
@K43
@K%3
@Ks3
@Kd3
@KU3
O$'"#'
O$/"#/
~$;"
@Ky$
?Ky$
" W#
?K-!
?K}!
?KL!
?Ki!
?K/!
?K`!
?KW!
?KN!
?KC!
?K:!
?K1!
?Kw!
?Kq!
?Kk!
?K'!
?K!!
?Ka!
?KX!
?KO!
?KD!
?K;!
?K2!
|K.!
|K~!
}Kj!
@K".
?K".
|K#.
@KI)
@K1)
@KG)
@K/)
@K])
@KS)
@K[)
@KQ)
?KK)
@K.
?K.
AK1&
AK(&
AK)&
AK &
AKo&
AKT&
AKR&
AK]&
AKf&
AKg&
AK^&
AKU&
AKP&
AK5&
AK3&
AK>&
AKG&
AKH&
AK?&
AK6&
@K{&
@Ku&
@Kz4
@K_4
@K]4
@Kh4
@K~4
@K|4
@Kq4
@Kr4
@Ki4
@K`4
@K{3
@Ky3
@K|3
AK;(
AK)(
AK2(
AKz(
AK#(
AK<(
AK*(
AK3(
AK{(
AKq(
AK_(
AKh(
AKV(
AKD(
AKM(
AKr(
AK`(
AKi(
AKW(
AKE(
AKN(
AKp1
AKg1
AK^1
AKy1
AKq1
AKh1
AK_1
AKz1
+" e
?KG$
?K*$
?K($
?K8$
?K2$
?K,$
KK 
KK 
?#'"
}KH$
}K+$
?#/"
?#;"
#( (
#1 1
#< <
?#W"
?#c"
#Z 2
#Y =
#Z 2
#Y =
%#;"
%#;"
%#<"
%#="
%#;"
%#<"
%#="
AKk
AKk
@Kt
@Ki
@Kt
@Ki
AK\
AK\
@Ke
@KZ
@Ke
@KZ
@Ky:
@Kp:
Ky:
"%c$/
W$;
""c#/
8$'"
$( Z
4#'"
#( Z
"c$/
W$;
@KW8
@K`8
@KW8
@K`8
@KW8
@K`8
@K%:
AK0'
@K/'
AK,'
@K+'
AK8'
@K7'
AK4'
@K3'
-K1'
-K-'
-K9'
-K5'
?Ky'
?Ku'
?KB'
?K;'
?KT'
?Kf'
?K}'
?Kc'
?KQ'
?K?'
@Ki
@KZ
@Ki
@KZ
@Ki
@KZ
@K{9
@K{9
@K{9
@K.9
@K%9
@K.9
@K%9
@K.9
@K%9
@K{:
@Kl:
@K{:
@Kl:
@K{:
@Kl:
?KN8
?K<8
?KE8
?K08
?K'8
?KK8
?K98
?KB8
?K-8
?K$8
vK?8
vKH8
vK!8
vK*8
@Kn7
@K\7
@Ke7
@Kz7
@Kk7
@KY7
@Kb7
@Kw7
vK_7
vKh7
vK}7
Y$e
@K}
@K{
@Ky
@Kw
@K{'
@Kw'
@KH'
@K='
@KZ'
@Kl'
@Km'
@KI'
@K['
@Ko9
@KQ9
@K]9
@Kf9
@K?9
@KH9
@Kp9
@KR9
@K^9
@Kg9
@K@9
@KI9
#Y e
#( Z
OGYe
NFWd
LDUc
__llvm_retpoline_
_eax
_ecx
_edx
__llvm_lvi_thunk__llvm_retpoline_r11
__llvm_retpoline_eax
__llvm_retpoline_ecx
__llvm_retpoline_edx
__llvm_retpoline_edi
__llvm_lvi_thunk_r11
# ! @
* % @
5 0 @
@ ; @
H F @
-,+,@
7,5,@
<,:,@
U,S,@
Z,X,@
i,g,@
s,q,@
x,v,@
3-1-@
8-6-@
G-E-@
Q-O-@
V-T-@
c-a-@
h-f-@
# " 
* ' 
5 2 
@ = 
H G 
$!!!
*!'!
.!-!
0!/!
7!1!
@!:!
I!C!
M!L!
T!N!
]!W!
f!`!
j!i!
n!k!
t!q!
z!w!
~!}!
)$($
+$*$
/$,$
5$2$
;$8$
H$G$
<';'
E'B'
W'T'
i'f'
v'u'
z'y'
()')
*)))
,)+)
.)-)
8)7)
:)9)
<);)
>)=)
@)?)
B)A)
D)C)
F)E)
L)K)
N)M)
P)O)
Z)Y)
u)o)
~)x)
|,{,
l-k-
p-m-
v-s-
|-y-
%/"/
+/(/
1/./
x/u/
L0J0
N0K0
R0P0
T0Q0
X0V0
Z0W0
^0\0
`0]0
z0x0
~0|0
"1 1
&1$1
$2#2
3222
5242
7262
B2?2
Q2N2
`2]2
u2r2
13.3
@3=3
R3O3
a3^3
p3m3
3404
B4?4
Q4N4
H6G6
J6I6
*8'8
3808
?8<8
H8E8
Q8N8
o8l8
x8u8
8979
:999
(:':
/:):
8:2:
A:;:
H:G:
J:I:
Q:K:
Z:T:
c:]:
j:i:
& 
/)
65
87
?9
HB
QK
XW
]Y
^Z
fd
ge
lh
mi
us
vt
xw
zy
|{
~}
. ) 
9 4 
D ? 
M L 
O N 
\ [ 
c ] 
l f 
u o 
| { 
~ } 
&!#!
,!)!
9!6!
B!?!
K!H!
V!S!
_!\!
h!e!
p!m!
v!s!
|!y!
&" "
/")"
8"2"
<";"
>"="
B"?"
H"E"
N"K"
R"Q"
T"S"
X"U"
^"["
d"a"
h"g"
j"i"
n"k"
t"q"
z"w"
~"}"
.#(#
2#1#
4#3#
6#5#
:#7#
@#=#
F#C#
J#I#
L#K#
P#M#
V#S#
\#Y#
`#_#
b#a#
d#c#
h#e#
n#k#
t#q#
}#w#
1$.$
7$4$
=$:$
J$I$
L$K$
N$M$
P$O$
R$Q$
U$S$
Y$W$
]$[$
a$_$
e$c$
k$g$
q$m$
w$s$
z$y$
}${$
)%%%
-%+%
1%/%
5%3%
;%7%
A%=%
G%C%
M%I%
S%O%
Y%U%
]%[%
a%_%
e%c%
i%g%
m%k%
q%o%
t%s%
v%u%
r&q&
t&s&
x&u&
~&{&
-'+'
1'/'
5'3'
9'7'
>'='
G'D'
N'H'
Y'V'
`'Z'
k'h'
r'l'
x'w'
|'{'
0)/)
2)1)
4)3)
6)5)
H)G)
J)I)
R)Q)
T)S)
V)U)
X)W)
\)[)
^)])
`)_)
b)a)
d)c)
f)e)
h)g)
j)i)
l)k)
n)m)
w)t)
(*'*
,*)*
2*/*
8*5*
<*;*
>*=*
E*?*
N*H*
W*Q*
[*Z*
b*\*
k*e*
t*n*
x*w*
|*y*
'+&+
.+(+
7+1+
@+:+
D+C+
H+E+
N+K+
T+Q+
X+W+
Z+Y+
^+[+
d+a+
j+g+
n+m+
p+o+
w+q+
r-o-
x-u-
~-{-
#.".
%.$.
).&.
/.,.
5.2.
9.8.
;.:.
?.<.
E.B.
K.H.
O.N.
Q.P.
X.R.
a.[.
j.d.
n.m.
u.o.
~.x.
'/$/
-/*/
3/0/
:/4/
C/=/
L/F/
U/O/
^/X/
g/a/
k/j/
m/l/
p/n/
z/w/
,0&0
50/0
>080
G0A0
N0M0
T0S0
Z0Y0
`0_0
c0b0
e0d0
g0f0
i0h0
k0j0
z0y0
~0}0
"1!1
&1%1
.1+1
7141
@1=1
I1F1
R1O1
[1X1
&2%2
(2'2
*2)2
,2+2
.2-2
02/2
;2:2
D2A2
H2E2
S2P2
W2T2
b2_2
f2c2
k2j2
n2m2
w2t2
{2x2
$3!3
(3%3
3303
7343
B3?3
F3C3
K3J3
T3Q3
X3U3
c3`3
g3d3
r3o3
v3s3
z3y3
$4!4
)4(4
,4+4
5424
9464
D4A4
H4E4
S4P4
W4T4
\4[4
^4]4
e4_4
n4h4
w4q4
{4z4
}4|4
&5 5
*5)5
,5+5
05-5
6535
<595
@5?5
B5A5
F5C5
L5I5
R5O5
V5U5
X5W5
\5Y5
b5_5
h5e5
l5k5
n5m5
r5o5
x5u5
~5{5
'6#6
-6)6
36/6
9656
=6;6
A6?6
E6C6
L6K6
P6M6
V6S6
\6Y6
`6_6
b6a6
i6c6
r6l6
{6u6
.7(7
7717
@7:7
I7C7
R7L7
V7U7
X7W7
_7\7
h7e7
q7n7
}7z7
#8 8
,8)8
8828
A8>8
J8G8
V8P8
Z8W8
c8`8
q8n8
z8w8
(9%9
19.9
=9;9
>9<9
E9?9
N9H9
W9Q9
c9]9
l9f9
u9o9
~9{9
&:%:
1:.:
::7:
F:@:
S:P:
\:Y:
h:b:
o:k:
p:l:
x:v:
y:w:
~:z:
$;#;
&;%;
-;';
6;0;
?;9;
C;B;
E;D;
L;F;
U;O;
^;X;
b;a;
d;c;
k;e;
t;n;
};w;
(%
4.
A>
JG
VP
`\
ok
, ( 
7 3 
B > 
e b 
n k 
z t 
%!"!
+!(!
8!5!
A!>!
J!G!
U!R!
^![!
g!d!
o!l!
u!r!
{!x!
("%"
1"."
:"7"
D"A"
J"G"
P"M"
Z"W"
`"]"
f"c"
p"m"
v"s"
|"y"
'#$#
0#-#
<#9#
B#?#
H#E#
R#O#
X#U#
^#[#
i#f#
o#l#
u#r#
~#{#
0$-$
6$3$
<$9$
U$T$
Y$X$
^$\$
b$`$
f$d$
l$j$
r$p$
x$v$
~$|$
$%"%
*%(%
.%,%
2%0%
6%4%
<%:%
B%@%
H%F%
N%L%
T%R%
Z%X%
^%\%
b%`%
f%d%
j%h%
n%l%
r%p%
.&(&
2&1&
4&3&
;&5&
D&>&
M&G&
Q&P&
S&R&
Z&T&
c&]&
l&f&
p&o&
z&w&
('%'
-','
1'0'
5'4'
9'8'
F'C'
P'M'
X'U'
b'_'
j'g'
t'q'
&(#(
/()(
8(2(
A(;(
J(D(
S(M(
\(V(
e(_(
n(h(
w(q(
v)s)
.*+*
4*1*
:*7*
G*D*
P*M*
Y*V*
d*a*
m*j*
v*s*
~*{*
%+"+
0+-+
9+6+
B+?+
J+G+
P+M+
V+S+
`+]+
f+c+
l+i+
y+v+
q-n-
w-t-
}-z-
+.(.
1...
7.4.
A.>.
G.D.
M.J.
Z.W.
c.`.
l.i.
w.t.
&/#/
,/)/
2///
</9/
E/B/
N/K/
W/T/
`/]/
i/f/
p/o/
y/v/
%0"0
.0+0
7040
@0=0
I0F0
01-1
9161
B1?1
K1H1
T1Q1
]1Z1
d1^1
m1g1
v1p1
C2@2
J2G2
R2O2
Y2V2
a2^2
h2e2
v2s2
}2z2
#3 3
*3'3
23/3
9363
A3>3
H3E3
S3P3
Z3W3
b3_3
i3f3
q3n3
x3u3
&4#4
4414
;484
C4@4
J4G4
R4O4
Y4V4
g4d4
p4m4
y4v4
(5%5
25/5
8555
>5;5
H5E5
N5K5
T5Q5
^5[5
d5a5
j5g5
t5q5
z5w5
"6 6
(6&6
.6,6
4626
:686
>6<6
B6@6
F6D6
R6O6
X6U6
^6[6
k6h6
t6q6
}6z6
'7$7
07-7
9767
B7?7
K7H7
T7Q7
a7^7
j7g7
v7p7
+8(8
7818
@8=8
I8F8
U8O8
_8Y8
h8b8
p8m8
y8v8
-9'9
6909
G9D9
P9M9
\9V9
e9b9
n9k9
z9t9
$:!:
0:-:
9:6:
E:?:
R:O:
[:X:
g:a:
r:n:
/;,;
8;5;
A;>;
N;K;
W;T;
`;];
m;j;
v;s;
'$
3-
@=
IF
UO
_[
nj
d a 
m j 
y s 
'"$"
0"-"
9"6"
C"@"
I"F"
O"L"
Y"V"
_"\"
e"b"
o"l"
u"r"
{"x"
&###
/#,#
;#8#
A#>#
G#D#
Q#N#
W#T#
]#Z#
&&#&
'&$&
/&,&
0&-&
<&9&
=&:&
E&B&
F&C&
N&K&
O&L&
[&X&
\&Y&
d&a&
e&b&
m&j&
n&k&
y&v&
#' '
$'!'
)'&'
*'''
O'L'
a'^'
s'p'
'($(
((%(
0(-(
1(.(
9(6(
:(7(
B(?(
C(@(
K(H(
L(I(
T(Q(
U(R(
](Z(
^([(
f(c(
g(d(
o(l(
p(m(
x(u(
y(v(
-***
3*0*
9*6*
F*C*
O*L*
X*U*
c*`*
l*i*
u*r*
}*z*
$+!+
/+,+
8+5+
A+>+
I+F+
O+L+
U+R+
_+\+
e+b+
k+h+
x+u+
*.'.
0.-.
6.3.
@.=.
F.C.
L.I.
Y.V.
b._.
k.h.
v.s.
;/8/
D/A/
M/J/
V/S/
_/\/
h/e/
$0!0
-0*0
6030
?0<0
H0E0
/1,1
8151
A1>1
J1G1
S1P1
\1Y1
e1b1
f1c1
n1k1
o1l1
w1t1
x1u1
I2F2
X2U2
g2d2
|2y2
)3&3
8353
G3D3
Y3V3
h3e3
w3t3
%4"4
:474
I4F4
X4U4
f4c4
o4l4
x4u4
'5$5
15.5
7545
=5:5
G5D5
M5J5
S5P5
]5Z5
c5`5
i5f5
s5p5
y5v5
Q6N6
W6T6
]6Z6
j6g6
s6p6
|6y6
&7#7
/7,7
8757
A7>7
J7G7
S7P7
`7]7
i7f7
u7o7
~7{7
^8X8
g8a8
,9&9
59/9
F9C9
O9L9
[9U9
d9a9
m9j9
y9s9
#: :
q:m:
.;+;
7;4;
@;=;
M;J;
V;S;
_;\;
l;i;
u;r;
~;{;
0&!
0/*
0?:
 HC
 QL
 c ^ 
0l g 
0u p 
&"!"
/"*"
8"3"
%# #
.#)#
k$h$
q$n$
w$t$
#% %
)%&%
;%8%
A%>%
G%D%
M%J%
S%P%
Y%V%
E*@*
N*I*
W*R*
b*]*
k*f*
t*o*
.+)+
7+2+
@+;+
w+r+
X.S.
a.\.
j.e.
u.p.
~.y.
:/5/
C/>/
L/G/
U/P/
^/Y/
g/b/
'6$6
-6*6
3606
9666
%7 7
.7)7
7727
@7;7
I7D7
R7M7
 O/4/
 U/:/
;@7%7
 X/=/
 ^/C/
;C7(7
;I7.7
;X7a;a;
7#;#;
6$;$;
6B;B;~6C;C;
(O;O;
6U;U;
6n;n;
6t;t;
60;0;l66;6;r6F;F;
6e;e;
6k;k;
6';';c6-;-;i6X;X;
6^;^;
6 ; ;
6w;w;
6};};
69;9;u6?;?;{6
;V7q&q&s&r&r&t&
a#y'y'
1z'z'
1D;D;
6E;E;
6c;c;
6d;d;
6%;%;a6&;&;b6
 O/4/
 U/:/
;@7%7
 X/=/
 ^/C/
;C7(7
;I7.7
 a/F/
 g/L/
;L717
;R777
 S/8/
 T/9/
 V/;/
 W/</
;>7#7
;?7$7
;A7&7
;B7'7
 \/A/
 ]/B/
 _/D/
 `/E/
;G7,7
;H7-7
;J7/7
;K707
 e/J/
 f/K/
 h/M/
 i/N/
;P757
;Q767
;S787
;T797
 P/5/
;;7 7
 Y/>/
;D7)7
 b/G/
;M727
 Q/6/
;<7!7
 Z/?/
;E7*7
 c/H/
;N737
 R/7/
;=7"7
 [/@/
;F7+7
 d/I/
;O747
B7H8
0 ! 2 " 5 # 6 $ f [ l \ 
!:!/!@!0!q!i!t!j!
"E"="H">"["S"^"T"q"i"t"j"
#1#%#2#=#5#@#6#S#K#V#L#
$$2$*$5$+$M$I$N$J$
&>&3&D&4&]&R&c&S&
&T';'W'<'Z'='`'>'
*/*'*2*(*H*=*N*>*
+K+C+N+D+a+Y+d+Z+z+o+
,s-k-v-l-
.,.$./.%.B.:.E.;.[.P.a.Q.
.=/j/C/k/X/j/^/k/f0b0g0c0
25212Q292T2:2W2;2
3B4*4E4+4H4,4h4]4n4^4
535+565,5I5A5L5B5_5W5b5X5u5m5x5n5
5S6K6V6L6l6a6r6b6
7(7U7.7V7C7U7I7V7u8
:2:':8:(:T:I:Z:J:
;0;%;6;&;O;D;U;E;n;c;t;d;
69W?XYdZe]f^ghsitlumv
   % F ' G * H + I J K ] { c | 
!.!1!L!7!M!k!}!n!~!
" ";"&"<"?"Q"B"R"U"g"X"h"k"}"n"~"
#4#7#I#:#J#M#_#P#`#
$)$,$G$/$H$K$Q$L$R$
&2&5&P&;&Q&T&o&Z&p&B'u'E'v'H'w'N'x'
)_)a)`)b)c)e)d)f)g)i)h)j)k)m)l)n)
*)*;*,*<*?*Z*E*[*y*
+'+E+W+H+X+[+m+^+n+q+
.#.&.8.).9.<.N.?.O.R.m.X.n.
.4/l/:/m/O/l/U/m/d0j0e0k0
2$23282B2i2E2j2H2k2u2
3"3I3%3J3(3K3{3
4)434Z464[494\4_4z4e4{4~4
5*5-5?505@5C5U5F5V5Y5k5\5l5o5
5M6_6P6`6c6~6i6
7W7%7X7:7W7@7X7l8
:&:):G:/:H:K:i:Q:j:k:v:l:w:o:x:p:y:z:
;$;';B;-;C;F;a;L;b;e;
Ze )2=
_except_handler4
__gnu_mcount_nc
de3
 e#
!"#$%&
#$+,
+,./1
./34
34567
@@BB
@@BB
DDDD
BBBB
CCCC
DDDD
EEEE
FFFF
GGGG
KKMMPP
KKMMPP
TTTTXX
MMMMPP
UUWWWW
PPPPPP
SSSSSS
TTTTXX
UUWWWW
VVVVVV
WWWWWW
XXXXXX
ZZZZZZ
\\\\\\
]]]]]]
^^^^^^
______
gggg
hhiillmm
ggggg
hhhh
hhiillmm
hhhhh
iiii
iiiillmm
iiiii
jjjj
oooorrrr
jjjjj
kkkk
ppssssuu
kkkkk
llll
llllllmm
lllll
mmmm
mmmmmmmm
mmmmm
nnnn
nnnnnnnn
nnnnn
oooo
oooorrrr
ooooo
pppp
ppssssuu
ppppp
qqqq
qqqqqqqq
qqqqq
rrrr
rrrrrrrr
rrrrr
ssss
ssssssuu
sssss
tttt
tttttttt
ttttt
uuuu
uuuuuuuu
uuuuu
vvvv
vvvvvvvv
vvvvv
wwww
wwwwwwww
wwwww
xxxx
xxxxxxxx
xxxxx
yyyy
yyyyyyyy
yyyyy
zzzz
zzzzzzzz
zzzzz
{{{{
{{{{{{{{
{{{{{
||||||||
||||||}}}}~~~~
||||||||||||||||||||||||}}}}}}}}
}}}}}}}}}}~~~~
}}}}}}}}}}}}}}}}}}}}}}}}~~~~~~~~
~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~
  ""$$&(,<>>@
[2!2lv2
%%R2)v2E
YbYb
'/;WcG
&-:UFN
'/;WcGO
'/;Wc
%& &
%& &
%& &
%& &
*' ':
*' ':
*' ':
*' ':
*' ':
*' ':
*' ':
*' ':
*/ /:
*/ /:
*/ /:
*/ /:
*/ /:
*/ /:
*/ /:
*/ /:
"f'$
f/$'
"u'$
u/$'
u;$/
!'&'
!/&/
!G&G
!W&W
!'&'
!/&/
%' '
%/ /
%' '
%/ /
%' /
%/ ;
%' /
%/ ;
%' '
%/ /
%' '
%/ /
%' '
%/ /
%' '
%/ /
%& &
%' '
%- -
%/ /
%' '
%/ /
%& &
%' '
%- -
%/ /
%' '
%/ /
%& /
%- ;
9'$'
9/$/
9'$'
9/$/
/$/.@
4'$'
W$W.@
4G$G
?'$'
?/$/
 W$W
 G$G
9'$'
9/$/
?'$'
?/$/
9'$'
9/$/
"4'$G
4/$W
4G$'
4W$/
"?'$
?/$'
"9'$
9/$'
?'$'
?/$/
9'$'
9/$/
?'$'
?/$/
9'$'
9/$/
"-'$'
'' '=
'/ /=
'' '
'/ /
'' '
'' '
'/ /
'/ /
'W W
'W W
'G G
'G G
'' '
'' '
'/ /
'/ /
'W W
'W W
'G G
'G G
'' '
'' '
'/ /
'/ /
'G G
'G G
'W W
'W W
'' '
'' '
'/ /
'/ /
%' '
%/ /
'' '
'' '
'/ /
'/ /
%' '
%/ /
&N U
&O W
"!G%G
!W%W
3?JI
3?JK
'/?=
'W?=
';?=
'c?=
(."
C?K&
C?K&
=",;
D"0c
H?K<
 '?:
 '?:
 /?:
 /?:
 /?:
 /?:
 /?:
 /?:
q&;0@
 ;?:
 ;?:
 ;?:
 ;?:
 '?:
 '?:
 /?:
 /?:
 /?:
 /?:
 /?:
 /?:
q&;0@
 ;?:
 ;?:
 ;?:
 ;?:
'/?=
'W?=
';?=
'c?=
-? ;
-? ;
-? ;
#U -
N#W"-/
#F &
N#G"-'
#U -
N#W"-/
#F &
N#G"-'
R?J#
/'#'
//#/
6?Ju
#/"9;
#'"9;
#;"9/
q?KD
r?KE
a"*U
a"*U
a"*U
<#&"
<#F"
<#N"
<#-"
<#U"
<#:"
{#'"
{#G"
<#O"
{#/"
{#W"
{#;"
{#c"
#'-$
#/-$
".'$/
".'$/
%& &
%& &
-  ;
-  ;
-  ;
2.%
2.%
2.%
2.%
2.%
t#& &
t#- -
t#U -
t#F &
4-$
4-$
4-$
4-$
4-$
$W G
#G W
\6M*
\.W*
l6M*
lf 
r`*@
f@rY
.WrYf
bPbkp
f sY.W
sY!1$
f@tY.W)
.WtY
lf`dX#cdX.
6mdX?x
t94
dQX
t^f 
6-eX
`f`e
f@R`
BR`k`
\f@R\
BR\f
6MR\6
)NR\o
iXf`
{\f`
6MR`6
HMR`f
a)NR`
;NR`
f@*\
RA*\
6M*\6
)N*\f
.W*\
sb.7
.WR`f`
*\\a
XR`6m
^4#o
3w
YR`)n
#cd`f
CsD6
sD6m
S\\a
S\f@sX
CsX<
6MsX6
`6Ms
`)Ns
f@?Z
6M?Z!/
.W?Z9
r@ZH
xX6m
^)Ns
`f@|
^\f@!
`LkZ
f@s\
\f #
b6Ms\
)Ns\f
X.Ws\
Xs\)
 b.7
\f@I
 7wZ`6
xZ`6M
S`f`
b7Y?
f@s`
mf@)
Bs`%
Cs`6M;
x`f@
f@*X
6M*X
.W*Xf`*
+X)'
m6Ms`\
HMs`f
m)Ns`_
ch]
Yf@@YP
J@Y6M@Y
.Ws`
dWs`f
f@*X.
6M*X
Xs`)N*
Xs`f@2X
CY6M2X
\eYs`
f@*`
RA*`\A*
RA*`
Kr]+d
]oD*
cha
XFK*
Xf 7
6M*`6M
HM*`f
f@@]
J@]JJ@
h]f`
6M@]}
)N@]f
.W@]h
.W*`
dW*`
@]h*
X*`6
\eY*`
A2`f
]JG@
J@at
haQr
bPFkp
]bPZ
BShZl
KsiZH
6M^tM
af@j
bP^
X^U
`6mZ
`6M[
f oZ.
q!^f@r
BSh^
cHM
rZ[w
af@sZ
Csh^
6mx\tm
wQ2J
`6-R
`f@RXf
hFR
`6MRX\CT
|^f 
yf SXf
s%
6-SX
\#cd\4
chE
q6-T
`6MT
S-[.WT
X<lZ
Sh!qZ
^a+lEf`
wZ\f
xZ\)
f`Y
chY
6mY6M
 f@VX
6MVX~MT
.WVXf
x\)n
RA*\kn
hYWP
A2\Kq)
s}Ff
]RKj
\6mj
VT`R!
.w
|Z[W
 f@ZX[y+Gf
6MZXh'
bZXe
q3[H
p.wZ
XT`6
 6MTh
y0G6
unk_
__llvm_slsblr_th
OUTLINED_FUNCTION
"3&-
"3&-
"4&-
"4&-
 'K:
 /K5
 ;K3
 'K:
 /K5
 ;K3
%& /
%/ /
%/ /
%- ;
%; ;
%& &
%& &
%' '
%' '
%- -
%- -
%: :
%& /
%/ /
%/ /
%- ;
%; ;
%& &
%& &
%' '
%' '
%- -
%- -
%: :
$F &K
$G 'K
$U -K
$W /K
$c ;K
$b :K
$F &K
$G 'K
$U -K
$W /K
$c ;K
$b :K
%& &
%' '
%- -
%/ /
%& &
%' '
%- -
%/ /
$F &
$G '
$U -
$W /
$c ;
$b :K[
$F &
$G '
$U -
$W /
$c ;
$b :Ki
$F &
$G '
$U -
$W /
$c ;
$b :K
$F &
$G '
$U -
$W /
$c ;
$b :K
$F &
$G '
$U -
$W /
$c ;
$b :K
$F &
$G '
$U -
$W /
$c ;
$b :K
$F &
$G '
$U -
$W /
$c ;
$b :K
$F &
$G '
$U -
$W /
$c ;
$b :K
&$&G
&$'G
&$/G
&$-G
&$&G
&$'G
&$/G
&$-G
%F F
%G G
%U U
%W W
%c c
b$bK
b$bKo
b$bK
$UKN
$cKO
$UKk
$cKl
"I&-
%& /
%- ;
"I&-
%& /
%- ;
"I&-
%& /
%- ;
%v v
%| |
%v v
%| |
%v v
%| |
%v v
%| |
&v v
&v v
&| |
&| |
&v v
&v v
&| |
&| |
&v v
&v v
&| |
&| |
&v v
&| |
&v v
&| |
&v v
&v v
&| |
&| |
&v v
&v v
&| |
&| |
&v v
&v v
&| |
&| |
&v v
&o o
&o o
&o o
%o o
&o o
%o o
&o o
%o o
&v v
&v v
%v v
%v v
"&v$v
&|$|
&N U
&O W
&F F
&G G
&W W
&U U
&c c
&F F
&G G
&W W
&U U
&c c
&F F
&G G
&W W
&U U
&c c
&F F
&G G
&W W
&U U
&c c
&F U
&G W
&F U
&G W
&F U
&G W
&F U
&G W
$c U
%bKy
?Ke
?Kd
?KY
?K[
?KX
?K`
?Ka
?K^
?K_
?Kb
?K[
?KX
?KX
?K[
?KX
?KX
?K\
?Kc
?KZ
?K]
?KZ
?KZ
?KZ
?KZ
?K]
?K]
?K]
?K]
)"<U
?KZ
?KZ
?KZ
?K]
?K]
?K]
"M&-
"M&-
 'KN
 /KI
 ;KG
>?Kk
>?K;
#?K%
#?K&
#?K'
#?K(
?KX
?K[
?Kd
?Ke
B?K2
B?K3
B?K4
B?K5
/#&:
;#-:
#F &
#G '
#U -
#W /
#c ;
#F &
#G '
#U -
#W /
#c ;
/#&:
;#-:
(?K$
(?K"
(?K#
(?K!
(?K 
(?K
(?K[
(?KS
(?KY
(?KQ
(?KQ
(?KZ
(?KR
(?KX
(?KP
(?KP
(?KU
(?KM
(?KW
(?KO
(?KO
(?KT
(?KL
(?KV
(?KN
(?KN
(?KK
(?KC
(?KI
(?KA
(?KA
(?KJ
(?KB
(?KH
(?K@
(?K@
(?KE
(?K=
(?KG
(?K?
(?K?
(?KD
(?K<
(?KF
(?K>
(?K>
(?K.
(?K&
(?K,
(?K$
(?K$
(?K-
(?K%
(?K+
(?K#
(?K#
(?K(
(?K 
(?K*
(?K"
(?K"
(?K'
(?K)
(?K!
(?K!
(?KG
(?K?
(?KE
(?K=
(?K=
(?KF
(?K>
(?KD
(?K<
(?K<
(?KA
(?K9
(?KC
(?K;
(?K;
(?K@
(?K8
(?KB
(?K:
(?K:
(?KW
(?KO
(?KU
(?KM
(?KM
(?KV
(?KN
(?KT
(?KL
(?KL
(?KQ
(?KI
(?KS
(?KK
(?KK
(?KP
(?KH
(?KR
(?KJ
(?KJ
(?Kx
(?K~
(?Kv
(?Kv
(?Kw
(?K}
(?Ku
(?Ku
(?Kz
(?Kr
(?K|
(?Kt
(?Kt
(?Ky
(?Kq
(?K{
(?Ks
(?Ks
;- $
 &K(
;- $
 -K&
#&"%
#-"%
#F"%
#N"%
#U"%
#/"%
#'"%
#W"%
#G"%
#O"%
5#|"
5#v"
/#&:
;#-:
"U=
"U=
#& F
#' G
#- U
#/ W
#; c
#& F
#' G
#- U
#/ W
#; c
#c UK
##W"
#U cKu
#F WKv
#N WK
"#WG
"(F:
Yv&o
]|&n
/v&o
 'Kj
 /Kr
 ;Kp
" '-
 ;- $
" '-
 ;- $
"4;G
 '@=
 /@=
 ;@=
 &@:
 -@:
 W@=
 c@=
 G@=
 O@=
 U@:
 F@:
 N@:
"!W=
&?KJ
'?KP
-?KH
/?KL
;?KF
:?KD
U?KH
W?KL
c?KF
b?KD
F?KJ
G?KP
N?KJ
O?KP
"-=
"-=
l#m$
'#-"
"#&"
"#U"
,#/"
,#'"
,#;"
,#W"
,#c"
$v v
($|"
@#o"
1#n"
1#m"
1#l"
\6M*
\.W*
l6M*
lf 
r`*@
f@rY
.WrYf
bPbkp
f sY.W
sY!1$
f@tY.W)
.WtY
lf`dX#cdX.
6mdX?x
t94
dQX
t^f 
6-eX
`f`e
f@R`
BR`k`
\f@R\
BR\f
6MR\6
)NR\o
iXf`
{\f`
6MR`6
HMR`f
a)NR`
;NR`
f@*\
RA*\
6M*\6
)N*\f
.W*\
sb.7
.WR`f`
*\\a
XR`6m
^4#o
3w
YR`)n
#cd`f
CsD6
sD6m
S\\a
S\f@sX
CsX<
6MsX6
`6Ms
`)Ns
f@?Z
6M?Z!/
.W?Z9
r@ZH
xX6m
^)Ns
`f@|
^\f@!
`LkZ
f@s\
\f #
b6Ms\
)Ns\f
X.Ws\
Xs\)
 b.7
\f@I
 7wZ`6
xZ`6M
S`f`
b7Y?
f@s`
mf@)
Bs`%
Cs`6M;
x`f@
f@*X
6M*X
.W*Xf`*
+X)'
m6Ms`\
HMs`f
m)Ns`_
ch]
Yf@@YP
J@Y6M@Y
.Ws`
dWs`f
f@*X.
6M*X
Xs`)N*
Xs`f@2X
CY6M2X
\eYs`
f@*`
RA*`\A*
RA*`
Kr]+d
]oD*
cha
XFK*
Xf 7
6M*`6M
HM*`f
f@@]
J@]JJ@
h]f`
6M@]}
)N@]f
.W@]h
.W*`
dW*`
@]h*
X*`6
\eY*`
A2`f
]JG@
J@at
haQr
bPFkp
]bPZ
BShZl
KsiZH
6M^tM
af@j
bP^
X^U
`6mZ
`6M[
f oZ.
q!^f@r
BSh^
cHM
rZ[w
af@sZ
Csh^
6mx\tm
wQ2J
`6-R
`f@RXf
hFR
`6MRX\CT
|^f 
yf SXf
s%
6-SX
\#cd\4
chE
q6-T
`6MT
S-[.WT
X<lZ
Sh!qZ
^a+lEf`
wZ\f
xZ\)
f`Y
chY
6mY6M
 f@VX
6MVX~MT
.WVXf
x\)n
RA*\kn
hYWP
A2\Kq)
s}Ff
]RKj
\6mj
VT`R!
.w
|Z[W
 f@ZX[y+Gf
6MZXh'
bZXe
q3[H
p.wZ
XT`6
 6MTh
y0G6
onmloonml
l|m}n~o
|l}m~n
KEJ]
KEJ]
!"#$
()*+,-.
3456
=?@ABCD
KLMNOPQ
+,,40
/123456
/012
3440
/012
?@@LF
DKMN
EGHKLMN
EFGH
7KLMNOP
EFGHIJu
KLLF
PEGH
EFGH
EFGHIJ
+-./12356?@ABEFGHKLMN
VX^_`jlmkowxzuvy
?ABEGHKMN
jmuvy
        
       
        
!!!!!!!!
!!!!!!!
!!!!!!!!
""""""""
"""""""
""""""""
########
#######
########
$$$$$$$$
$$$$$$$
$$$$$$$$
%%%%%%%%
%%%%%%%
%%%%%%%%
&&&&&&&&
&&&&&&&
&&&&&&&&
''''''''
'''''''
''''''''
((((((((
(((((((
((((((((
))))))))
)))))))
))))))))
********
*******
********
,,,,,,,,
,,,,,,,
,,,,,,,,
--------
-------
--------
........
.......
........
////////
///////
////////
00000000
0000000
00000000
11111111
1111111
11111111
22222222
2222222
22222222
33333333
3333333
33333333
44444444
4444444
44444444
55555555
5555555
55555555
66666666
6666666
66666666
77777777
7777777
77777777
88888888
8888888
88888888
99999999
9999999
99999999
::::::::
:::::::
::::::::
;;;;;;;;
;;;;;;;
;;;;;;;;
<<<<<<<<
<<<<<<<
<<<<<<<<
========
=======
========
>>>>>>>>
>>>>>>>
>>>>>>>>
????????
???????
????????
@@@@@@@@
@@@@@@@
@@@@@@@@
AAAAAAAA
AAAAAAA
AAAAAAAA
BBBBBBBB
BBBBBBB
BBBBBBBB
EEEEEEEE
EEEEEEE
EEEEEEEE
FFFFFFFF
FFFFFFF
FFFFFFFF
GGGGGGGG
GGGGGGG
GGGGGGGG
HHHHHHHH
HHHHHHH
HHHHHHHH
IIIIIIII
IIIIIII
IIIIIIII
bbbbb
bbbbbbbbb
bbbbb
ccccc
ccccccccc
ccccc
ddddd
ddddddddd
ddddd
eeeee
eeeeeeeee
eeeee
fffff
fffffffff
fffff
ggggg
ggggggggg
ggggg
hhhhh
hhhhhhhhh
hhhhh
iiiii
iiiiiiiii
iiiii
jjjjj
jjjjjjjjj
jjjjj
kkkkk
kkkkkkkkk
kkkkk
lllll
lllllllll
lllll
mmmm
nnnnnn
oooo
pppp
qqqqqq
rrrrrr
ssss
tttttt
uuuuuu
vvvvvv
wwwwww
xxxx
xxxx
yyyy
yyyyyy
yyyyyy
zzzz
zzzz
{{{{
{{{{
||||
||||
}}}}
}}}}}}
}}}}}}
~~~~
~~~~~~
~~~~~~
  !!))++++,3333@
&-:FNUb
&-:FN
'/;Wc
'/;WcGO
onml
prefetcht0
sha1msg1
sha256msg1
tileloaddt1
prefetcht1
pfrcpit1
pfrsqit1
prefetchwt1
vmovdqa32
vmovdqu32
sha1msg2
sha256msg2
prefetcht2
pfrcpit2
vbroadcastf32x2
vbroadcasti32x2
vshuff64x2
vextractf64x2
vinsertf64x2
vbroadcastf64x2
vshufi64x2
vextracti64x2
vinserti64x2
vbroadcasti64x2
vmovdqa64
xsavec64
fxsave64
fxrstor64
xsaves64
xrstors64
xsaveopt64
vmovdqu64
sha1rnds4
vshuff32x4
vextractf32x4
vinsertf32x4
vbroadcastf32x4
vshufi32x4
vextracti32x4
vinserti32x4
vbroadcasti32x4
vextractf64x4
vinsertf64x4
vbroadcastf64x4
vextracti64x4
vinserti64x4
vbroadcasti64x4
vcvtne2ps2bf16
vcvtneps2bf16
vmovdqu16
encodekey256
vperm2f128
vextractf128
vinsertf128
vbroadcastf128
vperm2i128
vextracti128
vinserti128
vbroadcasti128
encodekey128
vmovdqu8
vextractf32x8
vinsertf32x8
vbroadcastf32x8
vextracti32x8
vinserti32x8
vbroadcasti32x8
vmovntdqa
vmovdqa
prefetchnta
crc32b
vpermi2b
vpmovm2b
vpermt2b
movdir64b
cmpxchg16b
cmpxchg8b
vpshab
sbbb
vpsubb
adcb
decb
incb
llwpcb
slwpcb
kaddb
vpaddb
xaddb
kandb
vpexpandb
vpmovusdb
vpmovsdb
vpmovdb
vpshufb
negb
cmpxchgb
vpavgb
vpmovmskb
rclb
vpshlb
rolb
kshiftlb
vgf2p8mulb
imulb
vpblendmb
vptestnmb
vpcomb
vpshufbitqmb
vpermb
vptestmb
kandnb
vpsignb
fcmovnb
vpcmpb
vgf2p8affineqb
vpcmpeqb
vpmovusqb
vpmovsqb
vpmultishiftqb
vgf2p8affineinvqb
vpmovqb
sarb
rcrb
shrb
korb
kxnorb
rorb
kxorb
vpinsrb
kshiftrb
vpextrb
scasb
vpabsb
movabsb
vpsubsb
vpaddsb
lodsb
vpminsb
cmpsb
vpcompressb
outsb
vpsubusb
vpaddusb
pavgusb
movsb
vpmaxsb
vpcmpgtb
vpopcntb
knotb
vprotb
vpbroadcastb
ktestb
kortestb
vpcomub
vpminub
vpcmpub
pfsub
vpmaxub
vpblendvb
idivb
fcmovb
kmovb
clwb
vpacksswb
vpackuswb
vpmovuswb
vpmovswb
vpmovwb
pfacc
pfnacc
pfpnacc
vaesdec
xsavec
vaesimc
vaesenc
vpermi2d
vpmovm2d
vpermt2d
vpbroadcastmw2d
vpshad
vpsrad
vphaddbd
vphaddubd
vphsubd
vpsubd
vpmovsxbd
vpmovzxbd
pfadd
tileloadd
vphaddd
kaddd
vpaddd
vpshldd
kandd
vpandd
vpexpandd
vpblendd
vpgatherdd
vpscatterdd
vpshrdd
vpmacsdd
vpmacssdd
tilestored
pi2fd
vpshufd
vpternlogd
pf2id
invpcid
rdpid
invvpid
fbld
vpshld
vpslld
vpmulld
vprold
vpsrld
vmptrld
kshiftld
enqcmd
vpblendmd
vptestnmd
vpcomd
vpermd
vptestmd
vpand
kandnd
vpandnd
valignd
vpsignd
bound
vfmaddsub231pd
vfmsub231pd
vfnmsub231pd
vfmsubadd231pd
vfmadd231pd
vfnmadd231pd
vfmaddsub132pd
vfmsub132pd
vfnmsub132pd
vfmsubadd132pd
vfmadd132pd
vfnmadd132pd
vpermi2pd
cvtpi2pd
vpermil2pd
vexp2pd
vcvtdq2pd
vcvtudq2pd
vcvtqq2pd
vcvtuqq2pd
vcvtps2pd
vpermt2pd
vfmaddsub213pd
vfmsub213pd
vfnmsub213pd
vfmsubadd213pd
vfmadd213pd
vfnmadd213pd
vrcp14pd
vrsqrt14pd
vrcp28pd
vrsqrt28pd
vmovapd
pswapd
vfmaddsubpd
vaddsubpd
vhsubpd
vfmsubpd
vfnmsubpd
vsubpd
vgatherpf0dpd
vscatterpf0dpd
vgatherpf1dpd
vscatterpf1dpd
vfmsubaddpd
vhaddpd
vfmaddpd
vfnmaddpd
vaddpd
vexpandpd
vandpd
vblendpd
vroundpd
vgatherdpd
vscatterdpd
vreducepd
vrangepd
vrndscalepd
vscalefpd
vshufpd
vunpckhpd
vmovhpd
vmovmskpd
vpermilpd
vunpcklpd
vmulpd
vmovlpd
vpcmpd
vblendmpd
vfixupimmpd
vpermpd
vandnpd
vminpd
vdppd
vcmppd
vgetexppd
vgatherpf0qpd
vscatterpf0qpd
vgatherpf1qpd
vscatterpf1qpd
vgatherqpd
vscatterqpd
vorpd
vxorpd
vfpclasspd
incsspd
rdsspd
vcompresspd
vgetmantpd
vmovntpd
vsqrtpd
vtestpd
vmovupd
vblendvpd
vdivpd
vmaskmovpd
vmaxpd
vfrczpd
vpcmpeqd
vpgatherqd
vpscatterqd
vpmovusqd
vpmovsqd
vpmovqd
kord
kxnord
vpord
vprord
kxord
vpxord
vpinsrd
kshiftrd
vpextrd
vfmsub231sd
vfnmsub231sd
vfmadd231sd
vfnmadd231sd
vfmsub132sd
vfnmsub132sd
vfmadd132sd
vfnmadd132sd
vcvtsi2sd
vcvtusi2sd
vcvtss2sd
vfmsub213sd
vfnmsub213sd
vfmadd213sd
vfnmadd213sd
vrcp14sd
vrsqrt14sd
vrcp28sd
vrsqrt28sd
vpabsd
vfmsubsd
vfnmsubsd
vsubsd
vfmaddsd
vfnmaddsd
vaddsd
vroundsd
vreducesd
vrangesd
vrndscalesd
vscalefsd
vucomisd
vcomisd
vmulsd
vfixupimmsd
vpminsd
vminsd
vcmpsd
vgetexpsd
tdpbssd
vpcompressd
wrssd
vfpclasssd
wrussd
vp4dpwssd
vpdpwssd
vgetmantsd
movntsd
vsqrtsd
vbroadcastsd
vpdpbusd
tdpbusd
vdivsd
vmovsd
vpmaxsd
vmaxsd
vfrczsd
vp2intersectd
vpconflictd
vpcmpgtd
vpopcntd
vplzcntd
knotd
vprotd
vpbroadcastd
ktestd
kortestd
vpcomud
vpminud
vpcmpud
tdpbsud
tdpbuud
vpmaxud
vpsravd
vpshldvd
vpshrdvd
vpsllvd
vprolvd
vpsrlvd
vpmaskmovd
vmovd
vprorvd
vphsubwd
vphaddwd
vpmaddwd
vpunpckhwd
kunpckwd
vpunpcklwd
vpmacswd
vpmadcswd
vpmacsswd
vpmadcsswd
vphadduwd
vpmovsxwd
vpmovzxwd
fcmovnbe
fcmovbe
ffree
pfcmpge
loopne
fcmovne
loope
tpause
cldemote
sha1nexte
fnsave
fxsave
fcmove
ldtilecfg
sttilecfg
invlpg
prefetch
fxch
vcvtps2ph
vpmacsdqh
vpmacssdqh
clflush
fcomi
fucomi
cvttpd2pi
cvtpd2pi
cvttps2pi
cvtps2pi
senduipi
fcompi
fucompi
movdiri
vpcmpestri
vpcmpistri
vcvttsd2si
vcvtsd2si
vcvttss2si
vcvtss2si
vcvttsd2usi
vcvtsd2usi
vcvttss2usi
vcvtss2usi
bndmk
crc32l
leal
lwpval
sbbl
movsbl
fsubl
fisubl
movzbl
adcl
bndcl
decl
blcicl
blsicl
t1mskcl
incl
btcl
vmreadl
faddl
fiaddl
xaddl
rdseedl
fldl
shldl
fildl
rdrandl
shrdl
vcvtsi2sdl
vcvtusi2sdl
movbel
rdfsbasel
wrfsbasel
rdgsbasel
wrgsbasel
vmwritel
ptwritel
bsfl
negl
cmpxchgl
pushl
blcil
bzhil
blsil
movntil
aesdec256kl
aesenc256kl
aesdecwide256kl
aesencwide256kl
aesdec128kl
aesenc128kl
aesdecwide128kl
aesencwide128kl
blcmskl
blsmskl
tzmskl
rcll
fildll
shll
lcalll
blcfilll
blsfilll
roll
fistpll
fisttpll
lsll
fmull
fimull
fcoml
ficoml
andnl
bswapl
pdepl
cmpl
ljmpl
fcompl
ficompl
nopl
popl
arpl
fstpl
fistpl
fisttpl
vpmacsdql
vpmacssdql
larl
sarl
fsubrl
fisubrl
rcrl
shrl
rorl
xorl
bsrl
blsrl
btrl
strl
bextrl
fdivrl
fidivrl
scasl
movabsl
blcsl
ldsl
lodsl
lesl
lfsl
lgsl
cmpsl
vcvtsi2ssl
vcvtusi2ssl
lssl
btsl
outsl
movsl
lgdtl
sgdtl
lidtl
sidtl
sldtl
lretl
popcntl
lzcntl
tzcntl
notl
testl
fstl
fistl
pextl
pfmul
fdivl
fidivl
movl
smswl
movswl
movzwl
adcxl
shlxl
mulxl
adoxl
sarxl
shrxl
rorxl
vpmovb2m
vpmovd2m
vpmovq2m
vpmovw2m
fcom
fucom
vpperm
vpcmpestrm
vpcmpistrm
bndcn
vpandn
xbegin
pfmin
vmxon
tilezero
pfrcp
ffreep
fcomp
fucomp
loop
rstorssp
fbstp
fstp
vmovddup
vmovshdup
vmovsldup
#EH_SjLj_Setup
crc32q
vpbroadcastmb2q
vpermi2q
vpmovm2q
movdq2q
vpermt2q
leaq
vpshaq
vpsraq
sbbq
vphaddbq
movsbq
vphaddubq
vpsubq
vpmovsxbq
vpmovzxbq
movzbq
adcq
decq
blcicq
blsicq
t1mskcq
incq
btcq
vcvttpd2dq
vcvtpd2dq
movq2dq
vcvttps2dq
vcvtps2dq
vmreadq
vphsubdq
kaddq
vpaddq
xaddq
vphadddq
rdseedq
vpunpckhdq
kunpckdq
vpshldq
vpunpckldq
vpslldq
vpsrldq
vpmuldq
kandq
vpandq
vpexpandq
rdrandq
vpunpckhqdq
vpunpcklqdq
vpclmulqdq
vpgatherdq
vpscatterdq
vpshrdq
vcvtsi2sdq
vcvtusi2sdq
vmovntdq
vcvttpd2udq
vcvtpd2udq
vcvttps2udq
vcvtps2udq
vphaddudq
vpmuludq
vpmovsxdq
vpmovzxdq
movbeq
pfcmpeq
rdfsbaseq
wrfsbaseq
rdgsbaseq
wrgsbaseq
vmwriteq
ptwriteq
bsfq
negq
cmpxchgq
vpternlogq
pushq
blciq
bzhiq
blsiq
movntiq
blcmskq
blsmskq
tzmskq
rclq
vpshlq
callq
blcfillq
blsfillq
vpsllq
vpmullq
vprolq
vpsrlq
lslq
movslq
kshiftlq
imulq
vpblendmq
vptestnmq
vpcomq
vpermq
vptestmq
kandnq
vpandnq
valignq
bswapq
pdepq
vpcmpq
nopq
popq
incsspq
rdsspq
vcvttpd2qq
vcvtpd2qq
vcvttps2qq
vcvtps2qq
vpcmpeqq
vpgatherqq
vpscatterqq
vcvttpd2uqq
vcvtpd2uqq
vcvttps2uqq
vcvtps2uqq
larq
sarq
rcrq
shrq
korq
kxnorq
vporq
vprorq
kxorq
vpxorq
bsrq
blsrq
vpinsrq
btrq
kshiftrq
strq
bextrq
vpextrq
scasq
vpabsq
movabsq
blcsq
lodsq
lfsq
lgsq
vpminsq
cmpsq
vcvtsi2ssq
vcvtusi2ssq
vpcompressq
lssq
wrssq
wrussq
btsq
movsq
vpmaxsq
vp2intersectq
vpconflictq
lgdtq
sgdtq
lidtq
sidtq
sldtq
lretq
vpcmpgtq
vpopcntq
vplzcntq
tzcntq
movntq
knotq
vprotq
insertq
vpbroadcastq
ktestq
kortestq
pextq
vpmadd52huq
vpmadd52luq
vpcomuq
vpminuq
vpcmpuq
vpmaxuq
vpsravq
vpshldvq
vpshrdvq
idivq
vpsllvq
vprolvq
vpsrlvq
vpmaskmovq
vmovq
vprorvq
vphaddwq
smswq
movswq
vphadduwq
vpmovsxwq
vpmovzxwq
movzwq
adcxq
shlxq
mulxq
adoxq
sarxq
shrxq
rorxq
vmclear
pfsubr
enter
vpalignr
vpor
umonitor
frstor
fxrstor
vpxor
verr
vldmxcsr
vstmxcsr
fdivr
fsubs
fisubs
fadds
fiadds
flds
filds
enqcmds
vp4dpwssds
vpdpwssds
vpdpbusds
xsaves
fmuls
fimuls
fcoms
ficoms
lwpins
vfmaddsub231ps
vfmsub231ps
vfnmsub231ps
vfmsubadd231ps
vfmadd231ps
vfnmadd231ps
vfmaddsub132ps
vfmsub132ps
vfnmsub132ps
vfmsubadd132ps
vfmadd132ps
vfnmadd132ps
vcvtpd2ps
vcvtph2ps
vpermi2ps
cvtpi2ps
vpermil2ps
vexp2ps
vcvtdq2ps
vcvtudq2ps
vcvtqq2ps
vcvtuqq2ps
vpermt2ps
vfmaddsub213ps
vfmsub213ps
vfnmsub213ps
vfmsubadd213ps
vfmadd213ps
vfnmadd213ps
vrcp14ps
vrsqrt14ps
tdpbf16ps
vdpbf16ps
vrcp28ps
vrsqrt28ps
vmovaps
vfmaddsubps
vaddsubps
vhsubps
vfmsubps
vfnmsubps
vsubps
vgatherpf0dps
vscatterpf0dps
vgatherpf1dps
vscatterpf1dps
vfmsubaddps
vhaddps
v4fmaddps
vfmaddps
v4fnmaddps
vfnmaddps
vaddps
vexpandps
vandps
vblendps
vroundps
vgatherdps
vscatterdps
vreduceps
vrangeps
vrndscaleps
vscalefps
vshufps
vunpckhps
vmovlhps
vmovhps
vmovmskps
vmovhlps
vpermilps
vunpcklps
vmulps
vmovlps
vblendmps
vfixupimmps
fcomps
ficomps
vpermps
vandnps
vminps
vrcpps
vdpps
vcmpps
vgetexpps
vgatherpf0qps
vscatterpf0qps
vgatherpf1qps
vscatterpf1qps
vgatherqps
vscatterqps
vorps
vxorps
vfpclassps
vcompressps
vextractps
vgetmantps
vmovntps
vinsertps
vrsqrtps
vsqrtps
vtestps
fstps
fistps
fisttps
vmovups
vblendvps
vdivps
vmaskmovps
vmaxps
vfrczps
fsubrs
fisubrs
xrstors
fdivrs
fidivrs
vfmsub231ss
vfnmsub231ss
vfmadd231ss
vfnmadd231ss
vfmsub132ss
vfnmsub132ss
vfmadd132ss
vfnmadd132ss
vcvtsd2ss
vcvtsi2ss
vcvtusi2ss
vfmsub213ss
vfnmsub213ss
vfmadd213ss
vfnmadd213ss
vrcp14ss
vrsqrt14ss
vrcp28ss
vrsqrt28ss
vfmsubss
vfnmsubss
vsubss
v4fmaddss
vfmaddss
v4fnmaddss
vfnmaddss
vaddss
vroundss
vreducess
vrangess
vrndscaless
vscalefss
vucomiss
vcomiss
vmulss
vfixupimmss
vminss
vrcpss
vcmpss
vgetexpss
vfpclassss
vgetmantss
movntss
vrsqrtss
vsqrtss
vbroadcastss
vdivss
vmovss
vmaxss
vfrczss
fsts
fists
fdivs
fidivs
fldt
hreset
pfcmpgt
umwait
invept
xsaveopt
clflushopt
fstpt
xabort
pfrsqrt
vaesdeclast
vaesenclast
vptest
vaeskeygenassist
vmptrst
bndcu
fcmovnu
vlddqu
vmaskmovdqu
vmovdqu
fcmovu
fdiv
fldenv
fnstenv
vpcmov
bndmov
crc32w
vpermi2w
vpmovm2w
vpermt2w
leaw
vpshaw
vpsraw
sbbw
vphsubbw
vdbpsadbw
vmpsadbw
vpsadbw
vphaddbw
vpunpckhbw
kunpckbw
vpunpcklbw
movsbw
vphaddubw
vphsubw
vpsubw
vpmovsxbw
vpmovzxbw
movzbw
adcw
fldcw
decw
incw
btcw
fnstcw
vphaddw
kaddw
vpaddw
xaddw
rdseedw
vpshldw
kandw
vpexpandw
rdrandw
vpblendw
vpshrdw
vpackssdw
vpackusdw
vpmovusdw
vpmovsdw
vpmovdw
movbew
pi2fw
bsfw
pshufw
negw
cmpxchgw
vpavgw
prefetchw
vpshufhw
vpmulhw
pushw
pf2iw
rclw
vpshuflw
vpshlw
lcallw
vpsllw
vpmullw
rolw
vpsrlw
lslw
kshiftlw
imulw
vpblendmw
vptestnmw
vpcomw
vpermw
vptestmw
kandnw
vpsignw
bswapw
vpcmpw
ljmpw
nopw
popw
vpcmpeqw
vpmovusqw
vpmovsqw
vpmovqw
larw
sarw
rcrw
verw
pmulhrw
shrw
korw
kxnorw
rorw
kxorw
bsrw
vpinsrw
btrw
kshiftrw
ltrw
strw
vpextrw
scasw
vpabsw
movabsw
vpmaddubsw
vphsubsw
vpsubsw
vphaddsw
vpaddsw
ldsw
lodsw
lesw
lfsw
lgsw
vpminsw
cmpsw
vpmulhrsw
vpcompressw
lssw
btsw
fnstsw
outsw
vpsubusw
vpaddusw
movsw
vpmaxsw
lgdtw
sgdtw
lidtw
sidtw
lldtw
sldtw
lretw
vpcmpgtw
vpopcntw
lzcntw
tzcntw
knotw
vprotw
vpbroadcastw
ktestw
kortestw
vpmulhuw
vpcomuw
vpminuw
vpcmpuw
vphminposuw
vpmaxuw
vpsravw
vpshldvw
vpshrdvw
idivw
vpsllvw
vpsrlvw
kmovw
vpmacsww
lmsww
smsww
vpmacssww
movsww
movzww
vcvtneps2bf16x
pfmax
bndldx
vfpclasspdx
vcvttpd2dqx
vcvtpd2dqx
vcvttpd2udqx
vcvtpd2udqx
vcvtpd2psx
vcvtqq2psx
vcvtuqq2psx
vfpclasspsx
bndstx
vcvtneps2bf16y
vfpclasspdy
loadiwkey
vcvttpd2dqy
vcvtpd2dqy
vcvttpd2udqy
vcvtpd2udqy
clrssbsy
vcvtpd2psy
vcvtqq2psy
vcvtuqq2psy
vfpclasspsy
vfpclasspdz
vfpclasspsz
jecxz
jcxz
jrcxz
sha256rnds2
%xmm0, 
pblendvb
%xmm0, 
blendvpd
%xmm0, 
blendvps
%xmm0, 
xorl
$FP, 
movabsb
%al, 
stosb
%al, 
outb
%al, 
movb
%al, 
rclb
%cl, 
shlb
%cl, 
rolb
%cl, 
sarb
%cl, 
rcrb
%cl, 
shrb
%cl, 
rorb
%cl, 
shldl
%cl, 
shrdl
%cl, 
rcll
%cl, 
shll
%cl, 
roll
%cl, 
sarl
%cl, 
rcrl
%cl, 
shrl
%cl, 
rorl
%cl, 
shldq
%cl, 
shrdq
%cl, 
rclq
%cl, 
shlq
%cl, 
rolq
%cl, 
sarq
%cl, 
rcrq
%cl, 
shrq
%cl, 
rorq
%cl, 
shldw
%cl, 
shrdw
%cl, 
rclw
%cl, 
shlw
%cl, 
rolw
%cl, 
sarw
%cl, 
rcrw
%cl, 
shrw
%cl, 
rorw
%cl, 
fsub
%st, 
fadd
%st, 
fmul
%st, 
fsubp
%st, 
faddp
%st, 
fmulp
%st, 
fsubrp
%st, 
fdivrp
%st, 
fdivp
%st, 
fsubr
%st, 
fdivr
%st, 
fdiv
%st, 
movabsw
%ax, 
stosw
%ax, 
outw
%ax, 
movw
%ax, 
movabsl
%eax, 
stosl
%eax, 
outl
%eax, 
movl
%eax, 
movabsq
%rax, 
stosq
%rax, 
movq
%rax, 
insb
%dx, 
insl
%dx, 
insw
%dx, 
vexp2pd
{sae}, 
vcvtps2pd
{sae}, 
vrcp28pd
{sae}, 
vrsqrt28pd
{sae}, 
vminpd
{sae}, 
vgetexppd
{sae}, 
vmaxpd
{sae}, 
vcvtss2sd
{sae}, 
vrcp28sd
{sae}, 
vrsqrt28sd
{sae}, 
vucomisd
{sae}, 
vcomisd
{sae}, 
vminsd
{sae}, 
vgetexpsd
{sae}, 
vmaxsd
{sae}, 
vcvttsd2si
{sae}, 
vcvttss2si
{sae}, 
vcvttsd2usi
{sae}, 
vcvttss2usi
{sae}, 
vcvttpd2dq
{sae}, 
vcvttps2dq
{sae}, 
vcvttpd2udq
{sae}, 
vcvttps2udq
{sae}, 
vcvttpd2qq
{sae}, 
vcvttps2qq
{sae}, 
vcvttpd2uqq
{sae}, 
vcvttps2uqq
{sae}, 
vcvtph2ps
{sae}, 
vexp2ps
{sae}, 
vrcp28ps
{sae}, 
vrsqrt28ps
{sae}, 
vminps
{sae}, 
vgetexpps
{sae}, 
vmaxps
{sae}, 
vrcp28ss
{sae}, 
vrsqrt28ss
{sae}, 
vucomiss
{sae}, 
vcomiss
{sae}, 
vminss
{sae}, 
vgetexpss
{sae}, 
vmaxss
{sae}, 
#VAARG_X32 
#VAARG_64 
#eh_return, addr: 
#SEH_SaveXMM 
xorq
$FP 
#VASTART_SAVE_XMM_REGS 
#SEH_StackAlloc 
#SEH_PushFrame 
#SEH_SetFrame 
#SEH_SaveReg 
#SEH_PushReg 
ud1l 
#SEH_StackAlign 
ud1q 
ud1w 
#CMOV__RFP80 PSEUDO!
#CMOV__VK1 PSEUDO!
#CMOV__VR512 PSEUDO!
#CMOV__VK32 PSEUDO!
#CMOV__RFP32 PSEUDO!
#CMOV__FR32 PSEUDO!
#CMOV__GR32 PSEUDO!
#CMOV__VK2 PSEUDO!
#CMOV__VK64 PSEUDO!
#CMOV__RFP64 PSEUDO!
#CMOV__FR64 PSEUDO!
#CMOV__VR64 PSEUDO!
#CMOV__VK4 PSEUDO!
#CMOV__VK16 PSEUDO!
#CMOV__GR16 PSEUDO!
#CMOV__VR256 PSEUDO!
#CMOV__VR128 PSEUDO!
#CMOV__VK8 PSEUDO!
#CMOV__GR8 PSEUDO!
#CMOV__FR32X PSEUDO!
#CMOV__FR64X PSEUDO!
#CMOV__VR256X PSEUDO!
#CMOV__VR128X PSEUDO!
rep;movsb (%esi), %es:(%edi)
rep;movsl (%esi), %es:(%edi)
rep;movsq (%esi), %es:(%edi)
rep;movsw (%esi), %es:(%edi)
rep;stosb %al, %es:(%edi)
rep;stosw %ax, %es:(%edi)
rep;stosl %eax, %es:(%edi)
rep;stosq %rax, %es:(%edi)
rep;movsb (%rsi), %es:(%rdi)
rep;movsl (%rsi), %es:(%rdi)
rep;movsq (%rsi), %es:(%rdi)
rep;movsw (%rsi), %es:(%rdi)
rep;stosb %al, %es:(%rdi)
rep;stosw %ax, %es:(%rdi)
rep;stosl %eax, %es:(%rdi)
rep;stosq %rax, %es:(%rdi)
lcalll
ljmpl
lcallq
rex64 jmpq
ljmpq
lcallw
ljmpw
# XRay Function Patchable RET.
# XRay Typed Event Log.
# XRay Custom Event Log.
# XRay Function Enter.
# XRay Tail Call Exit.
# XRay Function Exit.
xsha1
fld1
fprem1
f2xm1
fyl2xp1
#EH_SJLJ_LONGJMP32
#EH_SJLJ_SETJMP32
# TLS_addrX32
# TLS_base_addrX32
# TLSCall_32
endbr32
# TLS_addr32
# TLS_base_addr32
fldlg2
fldln2
int3
#EH_SJLJ_LONGJMP64
#EH_SJLJ_SETJMP64
# TLSCall_64
endbr64
# TLS_addr64
# TLS_base_addr64
rex64
data16
xsha256
LIFETIME_END
PSEUDO_PROBE
BUNDLE
DBG_VALUE
# XABORT DEF
DBG_INSTR_REF
DBG_LABEL
# XBEGIN
#ADJCALLSTACKDOWN
#ADJCALLSTACKUP
#MEMBARRIER
# CATCHRET
# CLEANUPRET
LIFETIME_START
invlpga
xcryptecb
xcryptcfb
xcryptofb
xlatb
clac
stac
xcryptcbc
getsec
salc
rdpmc
vmfunc
rdtsc
vmload
cpuid
xend
cltd
cwtd
wbinvd
wbnoinvd
fldl2e
lfence
mfence
sfence
fscale
vmresume
repne
xacquire
xstore
tilerelease
xrelease
pause
#SEH_Epilogue
#SEH_EndPrologue
leave
vmsave
serialize
vmxoff
lahf
sahf
pconfig
# variable sized alloca with probing
# fixed size alloca with probing
vmlaunch
clgi
stgi
fldpi
clui
testui
lock
xresldtrk
xsusldtrk
%dx, %al
pushal
popal
pushfl
popfl
# FEntry call
tdcall
seamcall
vmmcall
vmcall
syscall
vzeroall
iretl
lretl
sysretl
sysexitl
cwtl
montmul
fxam
fprem
fpatan
fptan
fsin
# dynamic stack allocation
vmrun
clzero
into
cqto
rdtscp
fnop
fcompp
fucompp
saveprevssp
fdecstp
fincstp
pushfq
popfq
iretq
lretq
sysretq
sysexitq
cltq
vzeroupper
sysenter
monitor
rdmsr
wrmsr
xcryptctr
fabs
pushl
pushw
pushl
popl
pushw
popw
pushl
popl
pushw
popw
pushl
popl
pushq
popq
pushw
popw
pushl
popl
pushq
popq
pushw
popw
swapgs
fchs
# variable sized alloca for segmented stacks
encls
femms
fcos
fsincos
seamops
pushl
popl
pushw
popw
clts
fldl2t
fxtract
uiret
seamret
mwait
skinit
fninit
frndint
fsqrt
xtest
ftst
enclu
rdpkru
wrpkru
xgetbv
xsetbv
enclv
cmov
pushaw
popaw
pushfw
popfw
cbtw
iretw
lretw
fyl2x
fnstsw
%dx, %ax
%dx, %eax
outb
%al, %dx
outw
%ax, %dx
outl
%eax, %dx
fnclex
monitorx
mwaitx
setssbsy
fldz
C p B
H3Y)I
K@0$
A s)
s)A s)
s)A ;/
q+A 
-A s
i,A i,A i
i,A i,A =
K@?%
A }"
}"A 
A ="
="A 6
K@8%
A 2<
S 7!S 7!S 7!S 
o,A #
.A c
A J.A 
A o.A 
A g.A P*
:.A 
6(C 6(B
6(C 6(C 6(B
C ]"B
 A f
J (-A /
C /+B
C b-B
C '.B
C X-B
C E-B
C z*B
C 9-B
C z.B
3w+I
C R,B
C O-B
C E*B
[*C [*B
 A Y
N#A N#A b
C @A 
J f*
A f*A 
? A 
2&A 2&A 
h A 
A (*
!(C !(C !(B
A (-
(-A /
C 4/B
J ()A 
J j+A 
A S J S A 
A ^ J ^ A 
1.A 
A )A
L)A 
I 0%
0%A >(J >(C >(A >(B
H3:$I
%A z(J z(C z(A z(B
v)2B
%A P
{(J {(C {(A {(B
h.A h.A 
A K?
B.A 
(A 7
97J 97A P
J P7A V
V7A ^B
 11)
 1>)
H3X)I
1'$_
1'$_
 1'$
'$$I'$
1'$_
K@/$K
K@/$
K@>%K
K@>%
>%%J>
K@E(
A z4A 
(A O6A 
(A H
A |"f |"A |"
|"A |"\
|"f |"
(|"`
|"A |"\
|"S |"
)|"$)|"
|"A |
|"A f
/f v
A ]/
A $0f <"A 
<"A <"\
$0f <
($0`
<"A <"\
<"S <
<"A <
<"A R
0f ]
G"A G
C G"A G"\
G"A G"\
G"f G"`
G"A 
J G"A 5
00f 
(00`
1'B
1'B
134_
A P/
A V5A V5\
/f P
A .5A .5\
A |5A |5\
A i5A i5\
A B5A B5\
4A a
4A a
4A x
4A x
4A x
4A :
<0f 
(<0`
1E&_
1E&_
 1E&
E&$IE&
1E&"1E
7E&_
7,#_
7,#_
7,#$I,
7,#_
K@7%K
K@7%
s"S s"
)s"$)s"
s"A 
7!"_
7!"_
7!"$I!
7>'d@>'d@>
7>'_
>'d@>'d@>'
7#'d@#'d@#
7#'_
#'d@#'d@#'
7."_
7."_
7."$I.
7K'd@K'd@K
7K'_
K'd@K'd@K'
70'd@0'd@0
70'_
0'd@0'd@0'
/K*+
I0K*
5X(I
A a&f a&A a&
a&A 
'*C$
*C$]
C$'*D
F%A F%\
F%f F%
(F%`
F%A F%\
F%S F%
)F%$)F%
F%A 
7M(C
M(d@M(
1n6_
7M(_
d9d(
KLd(M
1Y&_
1Y&_
 1Y&
Y&$IY&
1Y&_
1$4_
1Y&_
1Y&_
 1Y&
Y&$IY&
7Y&_
1'%_
1'%_
 1'%
'%$I'%
1'%_
15(C
15(C
1'%_
1'%_
 1'%
'%$I'%
7'%_
15(C
5(d@5(
15(_
1_6_
75(C
M#f M#A M#A M
M#A M#A M#\
M#f M#`
M#A M#A M#\
M#S M
M#A M#A M#\
M#A M#A 
?A ?A 
1&f 1&A 1&A 1
1&A 1&A 1&\
1&f 1&`
1&A 1&A 1&\
1&S 1
1&A 1&A 1&\
1&A 1&A 
 A '*K
K@'*
A V>
1`_
1`_
1`"1`
7`_
1 (C
 (d@ (
1 (_
7 ("1 
7 (C
'-f '-A '-
'-A '-\
'-f '-`
'-A '-\
'-S '
'-A '-\
'-A .
1.+_
1.+_
 1.+
.+$I.+
1.+_
19+_
19+_
 19+
9+$I9+
19+_
1a-_
1a-_
 1a-
1a-_
Y.A Y
Y.A Y.\
Y.A Y.\
Y.A Y.\
Y.A Y.\
Y.A Y.\
Y.A Y.\
Y.A 
q%Jq
g,%Jg
K@/,
7W!_
7W!_
7W!$IW
7W!_
7L!_
7L!_
7L!$IL
7L!_
7R"_
7R"_
7R"$IR
7R"_
g"%/g"%Jg
=JI
H3J%*J
$JI
1J_
*JK*JI
1J_
+JI
1J_
H3JI
17,_
17,_
 17,
17,_
A :*
:*A i
A n*
n*A 
A G 
G A 
A . 
. A 
*A I
18-_
18-_
 18-
18-_
Y+A Y+\
Y+A Y+\
Y+A Y+\
O+A O+\
O+A O+\
O+A O+\
J R A R J R d R C R A R \
C R A R \
R A R \
R J R A I
D+A D+\
D+A D+\
D+A D+\
J ] A ] J ] d ] C ] A ] \
C ] A ] \
] A ] \
] J ] A 
1y._
1y._
 1y.
1y._
0.A 0.\
0.f 0.`
0.A 0.\
0.S 0
0.A 0.\
1% _
1% _
1% _
I3Q.I
 11*
Y%+%J%
K@%+M
K@%+M
d[%+
K@%+M
1N-_
1N-_
 1N-
1N-_
7K)f K)A K)
K)A D
1D*_
1D*_
 1D*
1D*_
1Z*_
1Z*_
 1Z*
1Z*_
Yg$%Jg
K@g$M
K@g$M
d[g$
KLg$M
7Y'C
Y'd@Y'
1Y'_
7#S 7#
)7#$)7#
7#A 
1E4_
7o'C
o'd@o'
7o'_
7/%f /%A /%
/%A =(C
H3\$%*\$
$\$I
*\$K*\$I
+\$I
\$I\
H3q$%*q$
$q$I
*q$K*q$I
+q$I
q$Iq
=9$I
H39$I
7c'C
c'd@c'
1c'_
A#S A#
)A#$)A#
A#A 
1V4_
7y'C
y'd@y'
1+6_
7y'_
%A y(C
1~$_
1~$_
 1~$
~$$I~$
1~$"1~
7~$_
K@"
Y"%J"
K@"M
K@"M
d["
K@"M
&A O
A i4A 
(A >6A 
(A +
1+_
1+_
1+_
1U_
1U_
1U_
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
xmm10
ymm10
zmm10
cr10
dr10
xmm20
ymm20
zmm20
xmm30
ymm30
zmm30
bnd0
tmm0
xmm0
ymm0
zmm0
xmm11
ymm11
zmm11
cr11
dr11
xmm21
ymm21
zmm21
xmm31
ymm31
zmm31
K0_K1
bnd1
tmm1
xmm1
ymm1
zmm1
xmm12
ymm12
zmm12
cr12
dr12
xmm22
ymm22
zmm22
bnd2
tmm2
xmm2
ymm2
zmm2
xmm13
ymm13
zmm13
cr13
dr13
xmm23
ymm23
zmm23
K2_K3
bnd3
tmm3
xmm3
ymm3
zmm3
xmm14
ymm14
zmm14
cr14
dr14
xmm24
ymm24
zmm24
tmm4
xmm4
ymm4
zmm4
xmm15
ymm15
zmm15
cr15
dr15
xmm25
ymm25
zmm25
K4_K5
tmm5
xmm5
ymm5
zmm5
xmm16
ymm16
zmm16
xmm26
ymm26
zmm26
tmm6
xmm6
ymm6
zmm6
xmm17
ymm17
zmm17
xmm27
ymm27
zmm27
K6_K7
tmm7
xmm7
ymm7
zmm7
xmm18
ymm18
zmm18
xmm28
ymm28
zmm28
xmm8
ymm8
zmm8
xmm19
ymm19
zmm19
xmm29
ymm29
zmm29
xmm9
ymm9
zmm9
R10BH
R11BH
R12BH
R13BH
R14BH
R15BH
R8BH
R9BH
R10WH
R11WH
R12WH
R13WH
R14WH
R15WH
R8WH
R9WH
r10b
r11b
r12b
r13b
r14b
r15b
r10d
r11d
r12d
r13d
r14d
r15d
dirflag
tmmcfg
fpcr
mxcsr
fpsr
flags
r10w
r11w
r12w
r13w
r14w
r15w
xstorerng
prefetcht0
sha1msg1
sha256msg1
tileloaddt1
prefetcht1
pfrcpit1
pfrsqit1
prefetchwt1
vmovdqa32
crc32
vmovdqu32
sha1msg2
sha256msg2
sha256rnds2
prefetcht2
pfrcpit2
vbroadcastf32x2
vbroadcasti32x2
vshuff64x2
vextractf64x2
vinsertf64x2
vbroadcastf64x2
vshufi64x2
vextracti64x2
vinserti64x2
vbroadcasti64x2
vmovdqa64
xsavec64
fxsave64
fxrstor64
xsaves64
xrstors64
xsaveopt64
vmovdqu64
sha1rnds4
vshuff32x4
vextractf32x4
vinsertf32x4
vbroadcastf32x4
vshufi32x4
vextracti32x4
vinserti32x4
vbroadcasti32x4
vextractf64x4
vinsertf64x4
vbroadcastf64x4
vextracti64x4
vinserti64x4
vbroadcasti64x4
vcvtne2ps2bf16
vcvtneps2bf16
vmovdqu16
encodekey256
vperm2f128
vextractf128
vinsertf128
vbroadcastf128
vperm2i128
vextracti128
vinserti128
vbroadcasti128
encodekey128
vmovdqu8
vextractf32x8
vinsertf32x8
vbroadcastf32x8
vextracti32x8
vinserti32x8
vbroadcasti32x8
vmovntdqa
vmovdqa
prefetchnta
vpermi2b
vpmovm2b
vpermt2b
movdir64b
cmpxchg16b
cmpxchg8b
vpshab
vpsubb
llwpcb
slwpcb
kaddb
vpaddb
kandb
vpexpandb
vpmovusdb
vpmovsdb
vpmovdb
vpshufb
vpavgb
vpmovmskb
vpshlb
kshiftlb
vgf2p8mulb
vpblendmb
vptestnmb
vpcomb
vpshufbitqmb
vpermb
vptestmb
kandnb
vpsignb
vpcmpb
vgf2p8affineqb
vpcmpeqb
vpmovusqb
vpmovsqb
vpmultishiftqb
vgf2p8affineinvqb
vpmovqb
korb
kxnorb
kxorb
vpinsrb
kshiftrb
vpextrb
vpabsb
vpsubsb
vpaddsb
vpminsb
stosb
cmpsb
vpcompressb
vpsubusb
vpaddusb
pavgusb
movsb
vpmaxsb
vpcmpgtb
vpopcntb
knotb
vprotb
vpbroadcastb
ktestb
kortestb
vpcomub
vpminub
vpcmpub
pfsub
fisub
vpmaxub
vpblendvb
kmovb
clwb
vpacksswb
vpackuswb
vpmovuswb
vpmovswb
vpmovwb
pfacc
pfnacc
pfpnacc
vaesdec
xsavec
blcic
blsic
t1mskc
vaesimc
vaesenc
vpermi2d
vpmovm2d
vpermt2d
vpbroadcastmw2d
vmread
vpshad
vpsrad
vphaddbd
vphaddubd
vphsubd
vpsubd
vpmovsxbd
vpmovzxbd
pfadd
fiadd
tileloadd
xadd
vphaddd
kaddd
vpaddd
vpshldd
kandd
vpandd
vpexpandd
vpblendd
vpgatherdd
vpscatterdd
vpshrdd
vpmacsdd
vpmacssdd
rdseed
tilestored
pi2fd
vpshufd
vpternlogd
pf2id
invpcid
rdpid
invvpid
fbld
vpshld
fild
vpslld
vpmulld
vprold
vpsrld
vmptrld
kshiftld
enqcmd
vpblendmd
vptestnmd
vpcomd
vpermd
vptestmd
vpand
rdrand
kandnd
vpandnd
valignd
vpsignd
bound
vfmaddsub231pd
vfmsub231pd
vfnmsub231pd
vfmsubadd231pd
vfmadd231pd
vfnmadd231pd
vfmaddsub132pd
vfmsub132pd
vfnmsub132pd
vfmsubadd132pd
vfmadd132pd
vfnmadd132pd
vpermi2pd
cvtpi2pd
vpermil2pd
vexp2pd
vcvtdq2pd
vcvtudq2pd
vcvtqq2pd
vcvtuqq2pd
vcvtps2pd
vpermt2pd
vfmaddsub213pd
vfmsub213pd
vfnmsub213pd
vfmsubadd213pd
vfmadd213pd
vfnmadd213pd
vrcp14pd
vrsqrt14pd
vrcp28pd
vrsqrt28pd
vmovapd
pswapd
vfmaddsubpd
vaddsubpd
vhsubpd
vfmsubpd
vfnmsubpd
vsubpd
vfmsubaddpd
vhaddpd
vfmaddpd
vfnmaddpd
vaddpd
vexpandpd
vandpd
vblendpd
vroundpd
vgatherdpd
vscatterdpd
vreducepd
vrangepd
vrndscalepd
vscalefpd
vshufpd
vunpckhpd
vmovhpd
vmovmskpd
vpermilpd
vunpcklpd
vmulpd
vmovlpd
vpcmpd
vblendmpd
vfixupimmpd
vpermpd
vandnpd
vminpd
vdppd
vcmppd
vgetexppd
vgatherqpd
vscatterqpd
vorpd
vxorpd
vfpclasspd
incsspd
rdsspd
vcompresspd
vgetmantpd
vmovntpd
vsqrtpd
vtestpd
vmovupd
vblendvpd
vdivpd
vmaskmovpd
vmaxpd
vfrczpd
vpcmpeqd
vpgatherqd
vpscatterqd
vpmovusqd
vpmovsqd
vpmovqd
shrd
kord
kxnord
vpord
vprord
kxord
vpxord
vpinsrd
kshiftrd
vpextrd
vfmsub231sd
vfnmsub231sd
vfmadd231sd
vfnmadd231sd
vfmsub132sd
vfnmsub132sd
vfmadd132sd
vfnmadd132sd
vcvtsi2sd
vcvtusi2sd
vcvtss2sd
vfmsub213sd
vfnmsub213sd
vfmadd213sd
vfnmadd213sd
vrcp14sd
vrsqrt14sd
vrcp28sd
vrsqrt28sd
vpabsd
vfmsubsd
vfnmsubsd
vsubsd
vfmaddsd
vfnmaddsd
vaddsd
vroundsd
vreducesd
vrangesd
vrndscalesd
vscalefsd
vucomisd
vcomisd
vmulsd
vfixupimmsd
vpminsd
vminsd
stosd
vcmpsd
vgetexpsd
tdpbssd
vpcompressd
wrssd
vfpclasssd
wrussd
vp4dpwssd
vpdpwssd
vgetmantsd
movntsd
vsqrtsd
vbroadcastsd
vpdpbusd
tdpbusd
vdivsd
vmovsd
vpmaxsd
vmaxsd
vfrczsd
vp2intersectd
vpconflictd
lgdtd
sgdtd
lidtd
sidtd
vpcmpgtd
vpopcntd
vplzcntd
knotd
vprotd
vpbroadcastd
ktestd
kortestd
vpcomud
vpminud
vpcmpud
tdpbsud
tdpbuud
vpmaxud
vpsravd
vpshldvd
vpshrdvd
vpsllvd
vprolvd
vpsrlvd
vpmaskmovd
vmovd
vprorvd
vphsubwd
vphaddwd
vpmaddwd
vpunpckhwd
kunpckwd
vpunpcklwd
vpmacswd
vpmadcswd
vpmacsswd
vpmadcsswd
vphadduwd
vpmovsxwd
vpmovzxwd
movsxd
movbe
ffree
pfcmpge
loopne
loope
rdfsbase
wrfsbase
rdgsbase
wrgsbase
tpause
vmwrite
ptwrite
cldemote
sha1nexte
fnsave
fxsave
retf
ldtilecfg
sttilecfg
cmpxchg
invlpg
prefetch
fxch
vcvtps2ph
vpmacsdqh
vpmacssdqh
clflush
push
blci
bzhi
cvttpd2pi
cvtpd2pi
cvttps2pi
cvtps2pi
senduipi
movdiri
vpcmpestri
vpcmpistri
vcvttsd2si
vcvtsd2si
vcvttss2si
vcvtss2si
blsi
vcvttsd2usi
vcvtsd2usi
vcvttss2usi
vcvtss2usi
movnti
bndmk
blcmsk
blsmsk
tzmsk
lwpval
bndcl
aesdec256kl
aesenc256kl
aesdecwide256kl
aesencwide256kl
aesdec128kl
aesenc128kl
aesdecwide128kl
aesencwide128kl
lcall
blcfill
blsfill
arpl
vpmacsdql
vpmacssdql
pfmul
fimul
vpmovb2m
vpmovd2m
vpmovq2m
vpmovw2m
fcom
ficom
fucom
vpperm
vpcmpestrm
vpcmpistrm
bndcn
vpandn
xbegin
pfmin
vmxon
tilezero
bswap
fsubp
pfrcp
faddp
pdep
ffreep
fmulp
rex64 jmp
ljmp
fcomp
ficomp
fucomp
loop
fsubrp
fdivrp
rstorssp
fbstp
fstp
fistp
fisttp
vmovddup
vmovshdup
vmovsldup
#EH_SjLj_Setup
fdivp
vpbroadcastmb2q
vpermi2q
vpmovm2q
movdq2q
vpermt2q
vpshaq
vpsraq
vphaddbq
vphaddubq
vpsubq
vpmovsxbq
vpmovzxbq
vcvttpd2dq
vcvtpd2dq
movq2dq
vcvttps2dq
vcvtps2dq
vphsubdq
kaddq
vpaddq
vphadddq
vpunpckhdq
kunpckdq
vpshldq
vpunpckldq
vpslldq
vpsrldq
vpmuldq
kandq
vpandq
vpexpandq
vpunpckhqdq
vpunpcklqdq
vpclmulqdq
vpgatherdq
vpscatterdq
vpshrdq
vmovntdq
vcvttpd2udq
vcvtpd2udq
vcvttps2udq
vcvtps2udq
vphaddudq
vpmuludq
vpmovsxdq
vpmovzxdq
pfcmpeq
retfq
vpternlogq
vpshlq
vpsllq
vpmullq
vprolq
vpsrlq
kshiftlq
vpblendmq
vptestnmq
vpcomq
vpermq
vptestmq
kandnq
vpandnq
valignq
vpcmpq
incsspq
rdsspq
vcvttpd2qq
vcvtpd2qq
vcvttps2qq
vcvtps2qq
vpcmpeqq
vpgatherqq
vpscatterqq
vcvttpd2uqq
vcvtpd2uqq
vcvttps2uqq
vcvtps2uqq
korq
kxnorq
vporq
vprorq
kxorq
vpxorq
vpinsrq
kshiftrq
vpextrq
vpabsq
vpminsq
stosq
cmpsq
vpcompressq
wrssq
wrussq
movsq
vpmaxsq
vp2intersectq
vpconflictq
vpcmpgtq
vpopcntq
vplzcntq
movntq
knotq
vprotq
insertq
vpbroadcastq
ktestq
kortestq
vpmadd52huq
vpmadd52luq
vpcomuq
vpminuq
vpcmpuq
vpmaxuq
vpsravq
vpshldvq
vpshrdvq
vpsllvq
vprolvq
vpsrlvq
vpmaskmovq
vmovq
vprorvq
vphaddwq
vphadduwq
vpmovsxwq
vpmovzxwq
vmclear
pfsubr
fisubr
enter
vpalignr
vpor
umonitor
frstor
fxrstor
vpxor
verr
vldmxcsr
vstmxcsr
blsr
bextr
fdivr
fidivr
movabs
blcs
enqcmds
vp4dpwssds
vpdpwssds
vpdpbusds
xsaves
lwpins
vfmaddsub231ps
vfmsub231ps
vfnmsub231ps
vfmsubadd231ps
vfmadd231ps
vfnmadd231ps
vfmaddsub132ps
vfmsub132ps
vfnmsub132ps
vfmsubadd132ps
vfmadd132ps
vfnmadd132ps
vcvtpd2ps
vcvtph2ps
vpermi2ps
cvtpi2ps
vpermil2ps
vexp2ps
vcvtdq2ps
vcvtudq2ps
vcvtqq2ps
vcvtuqq2ps
vpermt2ps
vfmaddsub213ps
vfmsub213ps
vfnmsub213ps
vfmsubadd213ps
vfmadd213ps
vfnmadd213ps
vrcp14ps
vrsqrt14ps
tdpbf16ps
vdpbf16ps
vrcp28ps
vrsqrt28ps
vmovaps
vfmaddsubps
vaddsubps
vhsubps
vfmsubps
vfnmsubps
vsubps
vfmsubaddps
vhaddps
v4fmaddps
vfmaddps
v4fnmaddps
vfnmaddps
vaddps
vexpandps
vandps
vblendps
vroundps
vgatherdps
vscatterdps
vreduceps
vrangeps
vrndscaleps
vscalefps
vshufps
vunpckhps
vmovlhps
vmovhps
vmovmskps
vmovhlps
vpermilps
vunpcklps
vmulps
vmovlps
vblendmps
vfixupimmps
vpermps
vandnps
vminps
vrcpps
vdpps
vcmpps
vgetexpps
vgatherqps
vscatterqps
vorps
vxorps
vfpclassps
vcompressps
vextractps
vgetmantps
vmovntps
vinsertps
vrsqrtps
vsqrtps
vtestps
vmovups
vblendvps
vdivps
vmaskmovps
vmaxps
vfrczps
xrstors
vfmsub231ss
vfnmsub231ss
vfmadd231ss
vfnmadd231ss
vfmsub132ss
vfnmsub132ss
vfmadd132ss
vfnmadd132ss
vcvtsd2ss
vcvtsi2ss
vcvtusi2ss
vfmsub213ss
vfnmsub213ss
vfmadd213ss
vfnmadd213ss
vrcp14ss
vrsqrt14ss
vrcp28ss
vrsqrt28ss
vfmsubss
vfnmsubss
vsubss
v4fmaddss
vfmaddss
v4fnmaddss
vfnmaddss
vaddss
vroundss
vreducess
vrangess
vrndscaless
vscalefss
vucomiss
vcomiss
vmulss
vfixupimmss
vminss
vrcpss
vcmpss
vgetexpss
vfpclassss
vgetmantss
movntss
vrsqrtss
vsqrtss
vbroadcastss
vdivss
vmovss
vmaxss
vfrczss
lgdt
sgdt
lidt
sidt
lldt
sldt
hreset
pfcmpgt
umwait
popcnt
lzcnt
tzcnt
invept
xsaveopt
clflushopt
xabort
pfrsqrt
vaesdeclast
vaesenclast
vptest
fist
vaeskeygenassist
vmptrst
pext
bndcu
vlddqu
vmaskmovdqu
vmovdqu
fdiv
fidiv
fldenv
fnstenv
vpcmov
bndmov
vpermi2w
vpmovm2w
vpermt2w
vpshaw
vpsraw
vphsubbw
vdbpsadbw
vmpsadbw
vpsadbw
vphaddbw
vpunpckhbw
kunpckbw
vpunpcklbw
vphaddubw
vphsubw
vpsubw
vpmovsxbw
vpmovzxbw
fldcw
fnstcw
vphaddw
kaddw
vpaddw
vpshldw
kandw
vpexpandw
vpblendw
vpshrdw
vpackssdw
vpackusdw
vpmovusdw
vpmovsdw
vpmovdw
pi2fw
pshufw
vpavgw
prefetchw
vpshufhw
vpmulhw
pf2iw
vpshuflw
vpshlw
vpsllw
vpmullw
vpsrlw
kshiftlw
vpblendmw
vptestnmw
vpcomw
vpermw
vptestmw
kandnw
vpsignw
vpcmpw
vpcmpeqw
vpmovusqw
vpmovsqw
vpmovqw
verw
pmulhrw
korw
kxnorw
kxorw
vpinsrw
kshiftrw
vpextrw
vpabsw
vpmaddubsw
vphsubsw
vpsubsw
vphaddsw
vpaddsw
lmsw
smsw
vpminsw
stosw
cmpsw
vpmulhrsw
vpcompressw
fnstsw
vpsubusw
vpaddusw
movsw
vpmaxsw
lgdtw
sgdtw
lidtw
sidtw
vpcmpgtw
vpopcntw
knotw
vprotw
vpbroadcastw
ktestw
kortestw
vpmulhuw
vpcomuw
vpminuw
vpcmpuw
vphminposuw
vpmaxuw
vpsravw
vpshldvw
vpshrdvw
vpsllvw
vpsrlvw
kmovw
vpmacsww
vpmacssww
pfmax
adcx
bndldx
shlx
mulx
adox
sarx
shrx
rorx
movsx
bndstx
movzx
loadiwkey
clrssbsy
jecxz
jcxz
jrcxz
xorl
$FP, 
al, 
scasb
al, 
lodsb
al, 
al, 
al, 
al, 
al, 
al, 
al, 
al, 
movabs
al, 
test
al, 
al, 
fcmovnb
st, 
fsub
st, 
fcmovb
st, 
fadd
st, 
fcmovnbe
st, 
fcmovbe
st, 
fcmovne
st, 
fcmove
st, 
fcomi
st, 
fucomi
st, 
fcompi
st, 
fucompi
st, 
fmul
st, 
fsubr
st, 
fdivr
st, 
fcmovnu
st, 
fcmovu
st, 
fdiv
st, 
ax, 
ax, 
ax, 
ax, 
ax, 
xchg
ax, 
ax, 
ax, 
ax, 
movabs
ax, 
test
ax, 
ax, 
scasw
ax, 
lodsw
ax, 
eax, 
eax, 
eax, 
eax, 
eax, 
scasd
eax, 
lodsd
eax, 
xchg
eax, 
eax, 
eax, 
eax, 
movabs
eax, 
test
eax, 
eax, 
rax, 
rax, 
rax, 
rax, 
rax, 
xchg
rax, 
rax, 
scasq
rax, 
lodsq
rax, 
rax, 
movabs
rax, 
test
rax, 
rax, 
outsb
dx, 
outsd
dx, 
outsw
dx, 
ud1 
#VAARG_X32 
#VAARG_64 
#eh_return, addr: 
#SEH_SaveXMM 
xorq
$FP 
#VASTART_SAVE_XMM_REGS 
#SEH_StackAlloc 
#SEH_PushFrame 
#SEH_SetFrame 
#SEH_SaveReg 
#SEH_PushReg 
#SEH_StackAlign 
#CMOV__RFP80 PSEUDO!
#CMOV__VK1 PSEUDO!
#CMOV__VR512 PSEUDO!
#CMOV__VK32 PSEUDO!
#CMOV__RFP32 PSEUDO!
#CMOV__FR32 PSEUDO!
#CMOV__GR32 PSEUDO!
#CMOV__VK2 PSEUDO!
#CMOV__VK64 PSEUDO!
#CMOV__RFP64 PSEUDO!
#CMOV__FR64 PSEUDO!
#CMOV__VR64 PSEUDO!
#CMOV__VK4 PSEUDO!
#CMOV__VK16 PSEUDO!
#CMOV__GR16 PSEUDO!
#CMOV__VR256 PSEUDO!
#CMOV__VR128 PSEUDO!
#CMOV__VK8 PSEUDO!
#CMOV__GR8 PSEUDO!
#CMOV__FR32X PSEUDO!
#CMOV__FR64X PSEUDO!
#CMOV__VR256X PSEUDO!
#CMOV__VR128X PSEUDO!
# XRay Function Patchable RET.
# XRay Typed Event Log.
# XRay Custom Event Log.
# XRay Function Enter.
# XRay Tail Call Exit.
# XRay Function Exit.
xsha1
fld1
fprem1
f2xm1
fyl2xp1
#EH_SJLJ_LONGJMP32
#EH_SJLJ_SETJMP32
# TLS_addrX32
# TLS_base_addrX32
# TLSCall_32
endbr32
# TLS_addr32
# TLS_base_addr32
fldlg2
fldln2
int3
#EH_SJLJ_LONGJMP64
#EH_SJLJ_SETJMP64
# TLSCall_64
endbr64
# TLS_addr64
# TLS_base_addr64
rex64
data16
xsha256
LIFETIME_END
PSEUDO_PROBE
BUNDLE
DBG_VALUE
# XABORT DEF
DBG_INSTR_REF
DBG_LABEL
# XBEGIN
#ADJCALLSTACKDOWN
#ADJCALLSTACKUP
#MEMBARRIER
# CATCHRET
# CLEANUPRET
LIFETIME_START
rep movsb es:[edi], [esi]
rep movsd es:[edi], [esi]
rep movsq es:[edi], [esi]
rep movsw es:[edi], [esi]
rep movsb es:[rdi], [rsi]
rep movsdi es:[rdi], [rsi]
rep movsq es:[rdi], [rsi]
rep movsw es:[rdi], [rsi]
invlpga
xcryptecb
xcryptcfb
xcryptofb
xlatb
clac
stac
xcryptcbc
getsec
salc
rdpmc
vmfunc
rdtsc
vmload
pushfd
popfd
cpuid
xend
iretd
wbinvd
wbnoinvd
fldl2e
lfence
mfence
sfence
cwde
fscale
vmresume
repne
cdqe
xacquire
xstore
tilerelease
xrelease
pause
#SEH_Epilogue
#SEH_EndPrologue
leave
vmsave
serialize
vmxoff
lahf
sahf
pushf
popf
retf
pconfig
# variable sized alloca with probing
# fixed size alloca with probing
vmlaunch
clgi
stgi
fldpi
clui
testui
lock
xresldtrk
xsusldtrk
rep stosb es:[edi], al
rep stosb es:[rdi], al
dx, al
pushal
popal
# FEntry call
tdcall
seamcall
vmmcall
vmcall
syscall
vzeroall
montmul
fxam
fprem
fpatan
fptan
fsin
# dynamic stack allocation
vmrun
clzero
into
rdtscp
fnop
fcompp
fucompp
saveprevssp
fdecstp
fincstp
pushfq
popfq
retfq
iretq
sysretq
sysexitq
vzeroupper
sysenter
monitor
rdmsr
wrmsr
xcryptctr
fabs
push
push
push
push
push
swapgs
fchs
# variable sized alloca for segmented stacks
encls
femms
fcos
fsincos
seamops
push
clts
fldl2t
fxtract
uiret
seamret
sysret
mwait
skinit
fninit
sysexit
frndint
fsqrt
xtest
ftst
enclu
rdpkru
wrpkru
xgetbv
xsetbv
enclv
cmov
pushaw
popaw
fyl2x
fnstsw
rep stosw es:[edi], ax
rep stosw es:[rdi], ax
dx, ax
rep stosd es:[edi], eax
rep stosd es:[rdi], eax
dx, eax
rep stosq es:[edi], rax
rep stosq es:[rdi], rax
al, dx
ax, dx
eax, dx
fnclex
monitorx
mwaitx
setssbsy
fldz
vgatherpf0dpd
vscatterpf0dpd
vgatherpf1dpd
vscatterpf1dpd
vgatherpf0qpd
vscatterpf0qpd
vgatherpf1qpd
vscatterpf1qpd
vgatherpf0dps
vscatterpf0dps
vgatherpf1dps
vscatterpf1dps
vgatherpf0qps
vscatterpf0qps
vgatherpf1qps
vscatterpf1qps
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
xmm10
ymm10
zmm10
cr10
dr10
xmm20
ymm20
zmm20
xmm30
ymm30
zmm30
bnd0
tmm0
xmm0
ymm0
zmm0
xmm11
ymm11
zmm11
cr11
dr11
xmm21
ymm21
zmm21
xmm31
ymm31
zmm31
K0_K1
bnd1
tmm1
xmm1
ymm1
zmm1
xmm12
ymm12
zmm12
cr12
dr12
xmm22
ymm22
zmm22
bnd2
tmm2
xmm2
ymm2
zmm2
xmm13
ymm13
zmm13
cr13
dr13
xmm23
ymm23
zmm23
K2_K3
bnd3
tmm3
xmm3
ymm3
zmm3
xmm14
ymm14
zmm14
cr14
dr14
xmm24
ymm24
zmm24
tmm4
xmm4
ymm4
zmm4
xmm15
ymm15
zmm15
cr15
dr15
xmm25
ymm25
zmm25
K4_K5
tmm5
xmm5
ymm5
zmm5
xmm16
ymm16
zmm16
xmm26
ymm26
zmm26
tmm6
xmm6
ymm6
zmm6
xmm17
ymm17
zmm17
xmm27
ymm27
zmm27
K6_K7
tmm7
xmm7
ymm7
zmm7
xmm18
ymm18
zmm18
xmm28
ymm28
zmm28
xmm8
ymm8
zmm8
xmm19
ymm19
zmm19
xmm29
ymm29
zmm29
xmm9
ymm9
zmm9
R10BH
R11BH
R12BH
R13BH
R14BH
R15BH
R8BH
R9BH
R10WH
R11WH
R12WH
R13WH
R14WH
R15WH
R8WH
R9WH
r10b
r11b
r12b
r13b
r14b
r15b
r10d
r11d
r12d
r13d
r14d
r15d
dirflag
tmmcfg
fpcr
mxcsr
fpsr
flags
r10w
r11w
r12w
r13w
r14w
r15w
xstorerng
R_386_TLS_GD_PUSH
R_386_TLS_GD_CALL
R_386_TLS_LDM_POP
R_386_TLS_TPOFF3R_386_TLS_GOTDES86_TLS_DESC_CALLR_386_TLS_DESC_CR_386_TLS_LDM_PUSH
R_386_TLS_LDM_CAR_386_TLS_DTPMODR_386_TLS_DTPOFFR_386_TLS_GD_POPR_386_TLS_LDM_32R_386_TLS_LDO_32_TLSDESC
R_X86_64_GOTPC3264_REX_GOTPCRELXR_X86_64_REX_GOT_64_TLSDESC_CALLR_X86_64_TLSDESC86_64_GOTPCREL64R_X86_64_GOTPCRER_X86_64_TPOFF64R_X86_64_TPOFF32R_X86_64_GOTPC64R_X86_64_JUMP_SLOT
R_X86_64_IRELATIVE
R_X86_64_GLOB_DAT
R_X86_64_RELATIVE
R_X86_64_DTPMOD64
R_X86_64_DTPOFF6R_X86_64_DTPOFF3R_X86_64_GOTTPOFF
R_X86_64_GOTOFF6R_X86_64_GOTPLT6R_X86_64_PLTOFF6
XMM10
YMM10
ZMM10
CR10
DR10
XMM20
YMM20
ZMM20
XMM30
YMM30
ZMM30
BND0
TMM0
XMM0
YMM0
ZMM0
XMM11
YMM11
ZMM11
CR11
DR11
XMM21
YMM21
ZMM21
XMM31
YMM31
ZMM31
BND1
K0_K1
TMM1
XMM1
YMM1
ZMM1
XMM12
YMM12
ZMM12
CR12
DR12
XMM22
YMM22
ZMM22
BND2
TMM2
XMM2
YMM2
ZMM2
XMM13
YMM13
ZMM13
CR13
DR13
XMM23
YMM23
ZMM23
BND3
K2_K3
TMM3
XMM3
YMM3
ZMM3
XMM14
YMM14
ZMM14
CR14
DR14
XMM24
YMM24
ZMM24
TMM4
XMM4
YMM4
ZMM4
XMM15
YMM15
ZMM15
CR15
DR15
XMM25
YMM25
ZMM25
K4_K5
TMM5
XMM5
YMM5
ZMM5
XMM16
YMM16
ZMM16
XMM26
YMM26
ZMM26
TMM6
XMM6
YMM6
ZMM6
XMM17
YMM17
ZMM17
XMM27
YMM27
ZMM27
K6_K7
TMM7
XMM7
YMM7
ZMM7
XMM18
YMM18
ZMM18
XMM28
YMM28
ZMM28
XMM8
YMM8
ZMM8
XMM19
YMM19
ZMM19
XMM29
YMM29
ZMM29
XMM9
YMM9
ZMM9
R10B
R11B
R12B
R13B
R14B
R15B
R10D
R11D
R12D
R13D
R14D
R15D
TMMCFG
R10BH
R11BH
R12BH
R13BH
R14BH
R15BH
R8BH
R9BH
R10WH
R11WH
R12WH
R13WH
R14WH
R15WH
R8WH
R9WH
MXCSR
EFLAGS
R10W
R11W
R12W
R13W
R14W
R15W
FPCW
FPSW
RFP80
VR512
VK32
RFP32
FR32
GR32
VK64
RFP64
FR64
GR64
VR64
GR64_TC_and_GR64_TCW64
GR64_TC_and_GR64_NOSP_and_GR64_TCW64
GR64_NOREX_and_GR64_TCW64
VR512_0_15
GRH16
VK16
GR16
VR256
RFP80_7
VR128
GRH8
GR64_with_sub_32bit_in_GR32_CB
GR64_with_sub_32bit_in_GR32_CB_and_GR32_DC
GR64_with_sub_32bit_in_GR32_AD_and_GR32_DC
GR64_with_sub_32bit_in_GR32_DC
GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_TC
GR64_with_sub_32bit_in_GR32_BPSP_and_GR32_TC
GR64_with_sub_32bit_in_GR32_TC
GR64_NOSP_and_GR64_TC
GR64_NOREX_NOSP_and_GR64_TC
GR64_NOREX_and_GR64_TC
GR32_AD
GR64_AD
GR32_ABCD
GR64_ABCD
GR16_ABCD
TILE
DEBUG_REG
CONTROL_REG
SEGMENT_REG
TILECFG
GR8_ABCD_H
GR64_with_sub_32bit_in_GR32_BSI_and_GR32_SIDI
GR64_with_sub_32bit_in_GR32_DIBP_and_GR32_SIDI
GR64_with_sub_32bit_in_GR32_SIDI
GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_BSI
GR64_with_sub_32bit_in_GR32_BSI
GR8_ABCD_L
VK1WM
VK32WM
VK2WM
VK64WM
VK4WM
VK16PAIR_with_sub_mask_0_in_VK16WM
VK8WM
GR64_with_sub_32bit_in_GR32_BPSP_and_GR32_DIBP
GR64_with_sub_32bit_in_GR32_DIBP
GR64_and_LOW32_ADDR_ACCESS_RBP
GR32_NOSP
GR64_NOSP
GR32_NOREX_NOSP
GR64_NOREX_NOSP
GR64_with_sub_32bit_in_GR32_BPSP
DFCCR
FPCCR
BNDR
VK1PAIR
VK2PAIR
VK4PAIR
VK16PAIR
VK8PAIR
GR64_and_LOW32_ADDR_ACCESS
FR32X
FR64X
VR256X
VR128X
GR32_NOREX
GR64_NOREX
GR64_TC_and_GR64_with_sub_16bit_in_GR16_NOREX
LOW32_ADDR_ACCESS_RBP_with_sub_16bit_in_GR16_NOREX
GR8_NOREX
LOW32_ADDR_ACCESS_RBP_with_sub_32bit
LOW32_ADDR_ACCESS_with_sub_32bit
LOW32_ADDR_ACCESS_RBP_with_sub_8bit_with_sub_32bit
GR64_with_sub_8bit
GR64_TCW64_with_sub_8bit
GR64_TCW64_and_GR64_TC_with_sub_8bit
LOW32_ADDR_ACCESS_RBP_with_sub_8bit
G_FLOG10
MORESTACK_RET_RESTORE_R10
LD_Fp080
LD_Fp180
CMOV_RFP80
SUB_FpI32m80
ADD_FpI32m80
MUL_FpI32m80
SUBR_FpI32m80
DIVR_FpI32m80
DIV_FpI32m80
ILD_Fp32m80
IST_Fp32m80
ISTT_Fp32m80
ILD_Fp64m80
IST_Fp64m80
ISTT_Fp64m80
SUB_FpI16m80
ADD_FpI16m80
MUL_FpI16m80
SUBR_FpI16m80
DIVR_FpI16m80
DIV_FpI16m80
ILD_Fp16m80
IST_Fp16m80
ISTT_Fp16m80
CMOVNB_Fp80
SUB_Fp80
CMOVB_Fp80
ADD_Fp80
CMOVNBE_Fp80
CMOVBE_Fp80
CMOVNE_Fp80
CMOVE_Fp80
MUL_Fp80
CMOVNP_Fp80
CMOVP_Fp80
ABS_Fp80
CHS_Fp80
SQRT_Fp80
TST_Fp80
DIV_Fp80
UCOM_FpIr80
UCOM_Fpr80
LD_F0
AVX512_512_SET0
AVX512_256_SET0
AVX512_128_SET0
V_SET0
MMX_SET0
AVX_SET0
PREFETCHT0
SUB_FrST0
ADD_FrST0
MUL_FrST0
SUBR_FrST0
DIVR_FrST0
DIV_FrST0
SUB_FPrST0
ADD_FPrST0
MUL_FPrST0
SUBR_FPrST0
DIVR_FPrST0
DIV_FPrST0
PBLENDVBrm0
BLENDVPDrm0
BLENDVPSrm0
MOV32r0
PBLENDVBrr0
BLENDVPDrr0
BLENDVPSrr0
XSHA1
UBSAN_UD1
LD_F1
CMOV_VK1
FPREM1
F2XM1
FYL2XP1
PTILELOADDT1
PREFETCHT1
PREFETCHWT1
JCC_1
JMP_1
MOV32r_1
RCL32m1
SHL32m1
ROL32m1
SAR32m1
RCR32m1
SHR32m1
ROR32m1
RCL64m1
SHL64m1
ROL64m1
SAR64m1
RCR64m1
SHR64m1
ROR64m1
RCL16m1
SHL16m1
ROL16m1
SAR16m1
RCR16m1
SHR16m1
ROR16m1
RCL8m1
SHL8m1
ROL8m1
SAR8m1
RCR8m1
SHR8m1
ROR8m1
RCL32r1
SHL32r1
ROL32r1
SAR32r1
RCR32r1
SHR32r1
ROR32r1
MOV32r1
RCL64r1
SHL64r1
ROL64r1
SAR64r1
RCR64r1
SHR64r1
ROR64r1
RCL16r1
SHL16r1
ROL16r1
SAR16r1
RCR16r1
SHR16r1
ROR16r1
RCL8r1
SHL8r1
ROL8r1
SAR8r1
RCR8r1
SHR8r1
ROR8r1
CMOV_VR512
LD_Fp032
LD_Fp132
INVLPGA32
PUSHA32
POPA32
MOVDIR64B32
VMLOAD32
LXADD32
INVPCID32
RDPID32
INVVPID32
ENQCMD32
VMSAVE32
PUSHF32
POPF32
LCMPXCHG32
MOVDIRI32
CMOV_VK32
INDIRECT_THUNK_CALL32
INDIRECT_THUNK_TCRETURN32
VMRUN32
ADJCALLSTACKDOWN32
CMOV_RFP32
ADJCALLSTACKUP32
ENDBR32
CMOV_FR32
CMOV_GR32
UMONITOR32
PUSHCS32
PUSHDS32
ENQCMDS32
POPDS32
PUSHES32
POPES32
PUSHFS32
POPFS32
RDFLAGS32
WRFLAGS32
PUSHGS32
POPGS32
PUSHSS32
POPSS32
IRET32
INVEPT32
VAARG_X32
TLS_addrX32
TLS_base_addrX32
PROBED_ALLOCA_32
SEG_ALLOCA_32
DYN_ALLOCA_32
REP_STOSB_32
REP_MOVSB_32
REP_STOSD_32
REP_MOVSD_32
AVX512_512_SEXT_MASK_32
REP_STOSQ_32
REP_MOVSQ_32
REP_STOSW_32
REP_MOVSW_32
TLSCall_32
SBB32i32
SUB32i32
ADC32i32
ADD32i32
AND32i32
CMP32i32
XOR32i32
TEST32i32
SBB64i32
SUB64i32
ADC64i32
ADD64i32
AND64i32
PUSH64i32
CMP64i32
XOR64i32
TEST64i32
PUSHi32
SBB64mi32
LOCK_SUB64mi32
ADC64mi32
LOCK_ADD64mi32
LOCK_AND64mi32
CMP64mi32
LOCK_XOR64mi32
LOCK_OR64mi32
TEST64mi32
MOV64mi32
IMUL64rmi32
SBB64ri32
SUB64ri32
ADC64ri32
ADD64ri32
AND64ri32
CMP64ri32
XOR64ri32
TEST64ri32
MOV64ri32
IMUL64rri32
CALL64pcrel32
CALLpcrel32
ST_FpP80m32
SUB_Fp80m32
ADD_Fp80m32
MUL_Fp80m32
SUBR_Fp80m32
DIVR_Fp80m32
ST_Fp80m32
DIV_Fp80m32
SUB_FpI32m32
ADD_FpI32m32
MUL_FpI32m32
SUBR_FpI32m32
DIVR_FpI32m32
DIV_FpI32m32
ILD_Fp32m32
IST_Fp32m32
ISTT_Fp32m32
CRC32r32m32
ST_FpP64m32
SUB_Fp64m32
ADD_Fp64m32
ILD_Fp64m32
MUL_Fp64m32
SUBR_Fp64m32
DIVR_Fp64m32
IST_Fp64m32
ISTT_Fp64m32
DIV_Fp64m32
SUB_FpI16m32
ADD_FpI16m32
MUL_FpI16m32
SUBR_FpI16m32
DIVR_FpI16m32
DIV_FpI16m32
ILD_Fp16m32
IST_Fp16m32
ISTT_Fp16m32
MOVSX32rm32
MOVSX64rm32
MOVSX16rm32
MOV32ao32
MOV64ao32
MOV16ao32
MOV8ao32
CMOVNB_Fp32
SUB_Fp32
CMOVB_Fp32
ADD_Fp32
CMOVNBE_Fp32
CMOVBE_Fp32
CMOVNE_Fp32
CMOVE_Fp32
MUL_Fp32
CMOVNP_Fp32
CMOVP_Fp32
ABS_Fp32
CHS_Fp32
SQRT_Fp32
TST_Fp32
DIV_Fp32
EH_SjLj_LongJmp32
EH_SjLj_SetJmp32
CRC32r32r32
UCOM_FpIr32
TLS_addr32
TLS_base_addr32
UCOM_Fpr32
MOVSX32rr32
MOVSX64rr32
MOVSX16rr32
FLDLG2
G_FLOG2
CMOV_VK2
FLDLN2
G_FEXP2
PREFETCHT2
JCC_2
XBEGIN_2
JMP_2
INT3
LD_Fp064
LD_Fp164
INVLPGA64
MOVDIR64B64
LLWPCB64
SLWPCB64
XSAVEC64
VMLOAD64
LXADD64
INVPCID64
RDPID64
INVVPID64
ENQCMD64
RDFSBASE64
WRFSBASE64
RDGSBASE64
WRGSBASE64
LEAVE64
VMSAVE64
FXSAVE64
PUSHF64
POPF64
LCMPXCHG64
MOVDIRI64
CMOV_VK64
INDIRECT_THUNK_CALL64
INDIRECT_THUNK_TCRETURN64
EH_RETURN64
VMRUN64
ADJCALLSTACKDOWN64
CMOV_RFP64
ADJCALLSTACKUP64
MMX_MASKMOVQ64
ENDBR64
CMOV_FR64
UMONITOR64
FXRSTOR64
CMOV_VR64
ENQCMDS64
XSAVES64
PUSHFS64
POPFS64
RDFLAGS64
WRFLAGS64
PUSHGS64
POPGS64
XRSTORS64
IRET64
SYSRET64
SYSEXIT64
INVEPT64
XSAVEOPT64
VMASKMOVDQU64
PROBED_ALLOCA_64
SEG_ALLOCA_64
DYN_ALLOCA_64
REP_STOSB_64
REP_MOVSB_64
REP_STOSD_64
REP_MOVSD_64
VAARG_64
AVX512_512_SEXT_MASK_64
REP_STOSQ_64
REP_MOVSQ_64
REP_STOSW_64
REP_MOVSW_64
TLSCall_64
TAILJMPd64
TCRETURNdi64
TCRETURNmi64
MOV32ri64
TCRETURNri64
ST_FpP80m64
SUB_Fp80m64
ADD_Fp80m64
MUL_Fp80m64
SUBR_Fp80m64
DIVR_Fp80m64
ST_Fp80m64
DIV_Fp80m64
SUB_FpI32m64
ADD_FpI32m64
MUL_FpI32m64
SUBR_FpI32m64
DIVR_FpI32m64
DIV_FpI32m64
ILD_Fp32m64
IST_Fp32m64
ISTT_Fp32m64
ILD_Fp64m64
IST_Fp64m64
ISTT_Fp64m64
CRC32r64m64
SUB_FpI16m64
ADD_FpI16m64
MUL_FpI16m64
SUBR_FpI16m64
DIVR_FpI16m64
DIV_FpI16m64
ILD_Fp16m64
IST_Fp16m64
ISTT_Fp16m64
TAILJMPm64
MOV32ao64
MOV64ao64
MOV16ao64
MOV8ao64
CMOVNB_Fp64
SUB_Fp64
CMOVB_Fp64
ADD_Fp64
CMOVNBE_Fp64
CMOVBE_Fp64
CMOVNE_Fp64
CMOVE_Fp64
MUL_Fp64
CMOVNP_Fp64
CMOVP_Fp64
ABS_Fp64
CHS_Fp64
SQRT_Fp64
TST_Fp64
DIV_Fp64
EH_SjLj_LongJmp64
EH_SjLj_SetJmp64
CRC32r64r64
UCOM_FpIr64
TAILJMPr64
TLS_addr64
TLS_base_addr64
UCOM_Fpr64
CMOV_VK4
JCC_4
XBEGIN_4
JMP_4
PUSHA16
POPA16
MOVDIR64B16
LXADD16
ENQCMD16
PUSHF16
POPF16
LCMPXCHG16
CMOV_VK16
CMOV_GR16
UMONITOR16
PUSHCS16
PUSHDS16
ENQCMDS16
POPDS16
PUSHES16
POPES16
PUSHFS16
POPFS16
PUSHGS16
POPGS16
PUSHSS16
POPSS16
IRET16
SBB16i16
SUB16i16
ADC16i16
ADD16i16
AND16i16
CMP16i16
XOR16i16
TEST16i16
PUSHi16
CALLpcrel16
CRC32r32m16
MOVSX32rm16
MOVZX32rm16
MOVSX64rm16
MOVZX64rm16
MOVSX16rm16
MOVZX16rm16
MOV32ao16
MOV16ao16
MOV8ao16
CRC32r32r16
MOVSX32rr16
MOVZX32rr16
MOVSX64rr16
MOVZX64rr16
MOVSX16rr16
MOVZX16rr16
XSHA256
CMOV_VR256
ENCODEKEY256
AVX512_FsFLD0F128
VBROADCASTF128
VBROADCASTI128
CMOV_VR128
ENCODEKEY128
LXADD8
LCMPXCHG8
CMOV_VK8
CMOV_GR8
PUSH32i8
PUSH64i8
PUSH16i8
SBB8i8
SUB8i8
ADC8i8
AAD8i8
ADD8i8
AND8i8
AAM8i8
CMP8i8
XOR8i8
TEST8i8
SBB32mi8
LOCK_SUB32mi8
ADC32mi8
BTC32mi8
LOCK_ADD32mi8
LOCK_AND32mi8
CMP32mi8
LOCK_XOR32mi8
LOCK_OR32mi8
BTR32mi8
BTS32mi8
BT32mi8
SBB64mi8
LOCK_SUB64mi8
ADC64mi8
BTC64mi8
LOCK_ADD64mi8
LOCK_AND64mi8
CMP64mi8
LOCK_XOR64mi8
LOCK_OR64mi8
BTR64mi8
BTS64mi8
BT64mi8
SBB16mi8
LOCK_SUB16mi8
ADC16mi8
BTC16mi8
LOCK_ADD16mi8
LOCK_AND16mi8
CMP16mi8
LOCK_XOR16mi8
LOCK_OR16mi8
BTR16mi8
BTS16mi8
BT16mi8
SBB8mi8
SUB8mi8
ADC8mi8
ADD8mi8
AND8mi8
CMP8mi8
XOR8mi8
IMUL32rmi8
IMUL64rmi8
IMUL16rmi8
SBB32ri8
SUB32ri8
ADC32ri8
BTC32ri8
ADD32ri8
AND32ri8
CMP32ri8
XOR32ri8
BTR32ri8
BTS32ri8
BT32ri8
SBB64ri8
SUB64ri8
ADC64ri8
BTC64ri8
ADD64ri8
AND64ri8
CMP64ri8
XOR64ri8
BTR64ri8
BTS64ri8
BT64ri8
SBB16ri8
SUB16ri8
ADC16ri8
BTC16ri8
ADD16ri8
AND16ri8
CMP16ri8
XOR16ri8
BTR16ri8
BTS16ri8
BT16ri8
SBB8ri8
SUB8ri8
ADC8ri8
ADD8ri8
AND8ri8
CMP8ri8
XOR8ri8
SHLD32mri8
SHRD32mri8
SHLD64mri8
SHRD64mri8
SHLD16mri8
SHRD16mri8
SHLD32rri8
SHRD32rri8
IMUL32rri8
SHLD64rri8
SHRD64rri8
IMUL64rri8
SHLD16rri8
SHRD16rri8
IMUL16rri8
MOV32ImmSExti8
MOV64ImmSExti8
CRC32r32m8
CRC32r64m8
MOVSX32rm8
MOVZX32rm8
MOVSX64rm8
MOVZX64rm8
MOVSX16rm8
MOVZX16rm8
CRC32r32r8
CRC32r64r8
MOVSX32rr8
MOVZX32rr8
MOVSX64rr8
MOVZX64rr8
MOVSX16rr8
MOVZX16rr8
G_FMA
G_STRICT_FMA
PREFETCHNTA
LCMPXCHG16B
LCMPXCHG8B
XCRYPTECB
LLWPCB
SLWPCB
ADD64ri32_DB
ADD32ri8_DB
ADD64ri8_DB
ADD16ri8_DB
ADD32ri_DB
ADD16ri_DB
ADD8ri_DB
ADD32rr_DB
ADD64rr_DB
ADD16rr_DB
ADD8rr_DB
XCRYPTCFB
XCRYPTOFB
SCASB
LODSB
INSB
STOSB
CMPSB
OUTSB
MOVSB
G_FSUB
G_STRICT_FSUB
G_ATOMICRMW_FSUB
G_SUB
G_ATOMICRMW_SUB
CLWB
CLAC
STAC
XCRYPTCBC
TAILJMPd64_CC
TAILJMPd_CC
GETSEC
XSAVEC
G_INTRINSIC
SALC
RDPMC
VMFUNC
G_FPTRUNC
G_INTRINSIC_TRUNC
G_TRUNC
G_BUILD_VECTOR_TRUNC
G_DYN_STACKALLOC
RDTSC
KSET0D
KSET1D
BSWAP16r_BAD
G_FMAD
MASKPAIR16LOAD
G_INDEXED_SEXTLOAD
G_SEXTLOAD
G_INDEXED_ZEXTLOAD
G_ZEXTLOAD
G_INDEXED_LOAD
G_LOAD
G_VECREDUCE_FADD
G_FADD
G_VECREDUCE_SEQ_FADD
G_STRICT_FADD
G_ATOMICRMW_FADD
PTILELOADD
G_VECREDUCE_ADD
G_ADD
G_PTR_ADD
G_ATOMICRMW_ADD
PTILESTORED
CPUID
G_ATOMICRMW_NAND
G_VECREDUCE_AND
G_AND
G_ATOMICRMW_AND
XEND
LIFETIME_END
G_BRCOND
G_INTRINSIC_ROUND
INCSSPD
RDSSPD
LOAD_STACK_GUARD
AVX512_FsFLD0SD
PTDPBSSD
WRSSD
WRUSSD
MOVNTSD
PTDPBUSD
PTDPBSUD
PTDPBUUD
WBINVD
WBNOINVD
FLDL2E
PSEUDO_PROBE
G_SSUBE
G_USUBE
LFENCE
MFENCE
SFENCE
G_FENCE
REG_SEQUENCE
G_SADDE
G_UADDE
CWDE
G_FMINNUM_IEEE
G_FMAXNUM_IEEE
FFREE
FSCALE
G_JUMP_TABLE
BUNDLE
VMRESUME
LOOPNE
LOCAL_ESCAPE
LOOPE
CDQE
MASKPAIR16STORE
XSTORE
G_INDEXED_STORE
G_STORE
RDFSBASE
WRFSBASE
RDGSBASE
WRGSBASE
TILERELEASE
G_BITREVERSE
TPAUSE
CLDEMOTE
DBG_VALUE
G_GLOBAL_VALUE
G_PTRAUTH_GLOBAL_VALUE
LEAVE
FXSAVE
G_MEMMOVE
G_FREEZE
G_FCANONICALIZE
SERIALIZE
G_CTLZ_ZERO_UNDEF
G_CTTZ_ZERO_UNDEF
G_IMPLICIT_DEF
XABORT_DEF
DBG_INSTR_REF
VMXOFF
LAHF
SAHF
CMOVNB_F
CMOVB_F
CMOVNBE_F
CMOVBE_F
CMOVNE_F
CMOVE_F
XCH_F
CMOVNP_F
CMOVP_F
ABS_F
CHS_F
SQRT_F
TST_F
G_FNEG
EXTRACT_SUBREG
INSERT_SUBREG
G_SEXT_INREG
SUBREG_TO_REG
PLDTILECFG
PSTTILECFG
G_ATOMIC_CMPXCHG
G_ATOMICRMW_XCHG
PCONFIG
STACKALLOC_W_PROBING
G_FLOG
INVLPG
G_VAARG
PREALLOCATED_ARG
VMLAUNCH
PREFETCH
G_SMULH
G_UMULH
CLFLUSH
CLGI
STGI
G_PHI
FLDPI
SENDUIPI
EXTRQI
INSERTQI
G_FPTOSI
CLUI
G_FPTOUI
TESTUI
G_FPOWI
XRESLDTRK
XSUSLDTRK
G_PTRMASK
RCL32mCL
SHL32mCL
ROL32mCL
SAR32mCL
RCR32mCL
SHR32mCL
ROR32mCL
RCL64mCL
SHL64mCL
ROL64mCL
SAR64mCL
RCR64mCL
SHR64mCL
ROR64mCL
RCL16mCL
SHL16mCL
ROL16mCL
SAR16mCL
RCR16mCL
SHR16mCL
ROR16mCL
RCL8mCL
SHL8mCL
ROL8mCL
SAR8mCL
RCR8mCL
SHR8mCL
ROR8mCL
RCL32rCL
SHL32rCL
ROL32rCL
SAR32rCL
RCR32rCL
SHR32rCL
ROR32rCL
RCL64rCL
SHL64rCL
ROL64rCL
SAR64rCL
RCR64rCL
SHR64rCL
ROR64rCL
RCL16rCL
SHL16rCL
ROL16rCL
SAR16rCL
RCR16rCL
SHR16rCL
ROR16rCL
RCL8rCL
SHL8rCL
ROL8rCL
SAR8rCL
RCR8rCL
SHR8rCL
ROR8rCL
SHLD32mrCL
SHRD32mrCL
SHLD64mrCL
SHRD64mrCL
SHLD16mrCL
SHRD16mrCL
SHLD32rrCL
SHRD32rrCL
SHLD64rrCL
SHRD64rrCL
SHLD16rrCL
SHRD16rrCL
GC_LABEL
DBG_LABEL
EH_LABEL
ANNOTATION_LABEL
ICALL_BRANCH_FUNNEL
G_FSHL
G_SHL
G_FCEIL
LRETIL
AESDEC256KL
AESENC256KL
AESDECWIDE256KL
AESENCWIDE256KL
AESDEC128KL
AESENC128KL
AESDECWIDE128KL
AESENCWIDE128KL
TDCALL
SEAMCALL
VMMCALL
VMCALL
SYSCALL
PATCHABLE_TAIL_CALL
PATCHABLE_TYPED_EVENT_CALL
PATCHABLE_EVENT_CALL
FENTRY_CALL
VZEROALL
KILL
NOOPL
SCASL
LODSL
INSL
STOSL
CMPSL
OUTSL
MOVSL
LRETL
G_VECREDUCE_FMUL
G_FMUL
G_VECREDUCE_SEQ_FMUL
G_STRICT_FMUL
MONTMUL
G_VECREDUCE_MUL
G_MUL
FXAM
FP80_TO_INT32_IN_MEM
FP32_TO_INT32_IN_MEM
FP64_TO_INT32_IN_MEM
FP80_TO_INT64_IN_MEM
FP32_TO_INT64_IN_MEM
FP64_TO_INT64_IN_MEM
FP80_TO_INT16_IN_MEM
FP32_TO_INT16_IN_MEM
FP64_TO_INT16_IN_MEM
G_FREM
G_STRICT_FREM
FPREM
G_SREM
G_UREM
SEH_SaveXMM
INLINEASM
G_FMINIMUM
G_FMAXIMUM
G_FMINNUM
G_FMAXNUM
FPATAN
FPTAN
G_INTRINSIC_ROUNDEVEN
G_FCOPYSIGN
XBEGIN
G_VECREDUCE_FMIN
G_VECREDUCE_SMIN
G_SMIN
G_VECREDUCE_UMIN
G_UMIN
G_ATOMICRMW_UMIN
G_ATOMICRMW_MIN
G_FSIN
CFI_INSTRUCTION
VMXON
EH_RETURN
G_SSUBO
G_USUBO
G_SADDO
G_UADDO
G_SMULO
G_UMULO
PTILEZERO
INTO
STACKMAP
TRAP
G_BSWAP
RDTSCP
FFREEP
G_SITOFP
G_UITOFP
XOR32_FP
XOR64_FP
G_FCMP
G_ICMP
FNOP
LOOP
NOOP
G_CTPOP
PATCHABLE_OP
FAULTING_OP
FCOMPP
RSTORSSP
SAVEPREVSSP
FDECSTP
FINCSTP
PREALLOCATED_SETUP
G_FEXP
KSET0Q
KSET1Q
LRETIQ
NOOPQ
INCSSPQ
RDSSPQ
EXTRQ
SCASQ
LODSQ
STOSQ
CMPSQ
WRSSQ
WRUSSQ
MOVSQ
LRETQ
INSERTQ
MMX_MASKMOVQ
G_BR
INLINEASM_BR
G_BLOCK_ADDR
VZEROUPPER
SYSENTER
PATCHABLE_FUNCTION_ENTER
G_READCYCLECOUNTER
G_READ_REGISTER
G_WRITE_REGISTER
G_ASHR
G_FSHR
G_LSHR
G_FFLOOR
G_BUILD_VECTOR
G_SHUFFLE_VECTOR
FXRSTOR
G_VECREDUCE_XOR
G_XOR
G_ATOMICRMW_XOR
G_VECREDUCE_OR
G_OR
G_ATOMICRMW_OR
VLDMXCSR
VSTMXCSR
RDMSR
WRMSR
XCRYPTCTR
G_INTTOPTR
G_FABS
G_ABS
AVX1_SETALLONES
AVX512_512_SETALLONES
AVX2_SETALLONES
V_SETALLONES
G_UNMERGE_VALUES
G_MERGE_VALUES
XSAVES
VASTART_SAVE_XMM_REGS
SWAPGS
ENCLS
FEMMS
MMX_EMMS
G_FCOS
FSINCOS
PTDPBF16PS
SEAMOPS
G_CONCAT_VECTORS
XRSTORS
AVX512_FsFLD0SS
COPY_TO_REGCLASS
G_ATOMIC_CMPXCHG_WITH_SUCCESS
MOVNTSS
G_INTRINSIC_W_SIDE_EFFECTS
CLTS
FLDL2T
XLAT
G_SSUBSAT
G_USUBSAT
G_SADDSAT
G_UADDSAT
G_SSHLSAT
G_USHLSAT
G_SMULFIXSAT
G_UMULFIXSAT
G_SDIVFIXSAT
G_UDIVFIXSAT
G_EXTRACT
FXTRACT
G_SELECT
G_BRINDIRECT
CATCHRET
UIRET
SEAMRET
CLEANUPRET
SYSRET
PATCHABLE_RET
MORESTACK_RET
HRESET
G_MEMSET
UMWAIT
SKINIT
FNINIT
SYSEXIT
PATCHABLE_FUNCTION_EXIT
G_BRJT
G_EXTRACT_VECTOR_ELT
G_INSERT_VECTOR_ELT
G_FCONSTANT
G_CONSTANT
FRNDINT
STATEPOINT
PATCHPOINT
G_PTRTOINT
G_FRINT
G_INTRINSIC_LRINT
G_FNEARBYINT
CALL32m_NT
JMP32m_NT
CALL64m_NT
JMP64m_NT
CALL16m_NT
JMP16m_NT
CALL32r_NT
JMP32r_NT
CALL64r_NT
JMP64r_NT
CALL16r_NT
JMP16r_NT
XSAVEOPT
CLFLUSHOPT
G_VASTART
LIFETIME_START
G_INSERT
XABORT
G_FSQRT
G_STRICT_FSQRT
G_BITCAST
G_ADDRSPACE_CAST
XTEST
G_FPEXT
G_SEXT
G_ANYEXT
G_ZEXT
ENCLU
VMASKMOVDQU
XGETBV
XSETBV
PTILELOADDV
PTILESTOREDV
PTDPBSSDV
VMOVDQA32Z256rrk_REV
VMOVDQU32Z256rrk_REV
VMOVDQA64Z256rrk_REV
VMOVDQU64Z256rrk_REV
VMOVDQU16Z256rrk_REV
VMOVDQU8Z256rrk_REV
VMOVAPDZ256rrk_REV
VMOVUPDZ256rrk_REV
VMOVAPSZ256rrk_REV
VMOVUPSZ256rrk_REV
VMOVDQA32Z128rrk_REV
VMOVDQU32Z128rrk_REV
VMOVDQA64Z128rrk_REV
VMOVDQU64Z128rrk_REV
VMOVDQU16Z128rrk_REV
VMOVDQU8Z128rrk_REV
VMOVAPDZ128rrk_REV
VMOVUPDZ128rrk_REV
VMOVAPSZ128rrk_REV
VMOVUPSZ128rrk_REV
VMOVDQA32Zrrk_REV
VMOVDQU32Zrrk_REV
VMOVDQA64Zrrk_REV
VMOVDQU64Zrrk_REV
VMOVDQU16Zrrk_REV
VMOVDQU8Zrrk_REV
VMOVAPDZrrk_REV
VMOVUPDZrrk_REV
VMOVSDZrrk_REV
VMOVAPSZrrk_REV
VMOVUPSZrrk_REV
VMOVSSZrrk_REV
SBB32rr_REV
SUB32rr_REV
ADC32rr_REV
ADD32rr_REV
AND32rr_REV
CMP32rr_REV
XOR32rr_REV
MOV32rr_REV
SBB64rr_REV
SUB64rr_REV
ADC64rr_REV
ADD64rr_REV
AND64rr_REV
CMP64rr_REV
MMX_MOVQ64rr_REV
XOR64rr_REV
MOV64rr_REV
VFMADDSUBPD4rr_REV
VFMSUBPD4rr_REV
VFNMSUBPD4rr_REV
VFMSUBADDPD4rr_REV
VFMADDPD4rr_REV
VFNMADDPD4rr_REV
VFMSUBSD4rr_REV
VFNMSUBSD4rr_REV
VFMADDSD4rr_REV
VFNMADDSD4rr_REV
VFMADDSUBPS4rr_REV
VFMSUBPS4rr_REV
VFNMSUBPS4rr_REV
VFMSUBADDPS4rr_REV
VFMADDPS4rr_REV
VFNMADDPS4rr_REV
VFMSUBSS4rr_REV
VFNMSUBSS4rr_REV
VFMADDSS4rr_REV
VFNMADDSS4rr_REV
SBB16rr_REV
SUB16rr_REV
ADC16rr_REV
ADD16rr_REV
AND16rr_REV
CMP16rr_REV
XOR16rr_REV
MOV16rr_REV
VMOVDQA32Z256rr_REV
VMOVDQU32Z256rr_REV
VMOVDQA64Z256rr_REV
VMOVDQU64Z256rr_REV
VMOVDQU16Z256rr_REV
VMOVDQU8Z256rr_REV
VMOVAPDZ256rr_REV
VMOVUPDZ256rr_REV
VMOVAPSZ256rr_REV
VMOVUPSZ256rr_REV
VMOVDQA32Z128rr_REV
VMOVDQU32Z128rr_REV
VMOVDQA64Z128rr_REV
VMOVDQU64Z128rr_REV
VMOVDQU16Z128rr_REV
VMOVDQU8Z128rr_REV
VMOVAPDZ128rr_REV
VMOVUPDZ128rr_REV
VMOVAPSZ128rr_REV
VMOVUPSZ128rr_REV
SBB8rr_REV
SUB8rr_REV
ADC8rr_REV
ADD8rr_REV
AND8rr_REV
CMP8rr_REV
XOR8rr_REV
MOV8rr_REV
VMOVDQArr_REV
VPSHABrr_REV
VPSHLBrr_REV
VPROTBrr_REV
VPSHADrr_REV
VPSHLDrr_REV
VPERMIL2PDrr_REV
VMOVAPDrr_REV
VMOVUPDrr_REV
VMOVSDrr_REV
VPROTDrr_REV
VPSHAQrr_REV
VPSHLQrr_REV
VPROTQrr_REV
VPERMIL2PSrr_REV
VMOVAPSrr_REV
VMOVUPSrr_REV
VMOVSSrr_REV
VMOVDQUrr_REV
BNDMOVrr_REV
VPSHAWrr_REV
VPSHLWrr_REV
VPEXTRWrr_REV
VPROTWrr_REV
VFMADDSUBPD4Yrr_REV
VFMSUBPD4Yrr_REV
VFNMSUBPD4Yrr_REV
VFMSUBADDPD4Yrr_REV
VFMADDPD4Yrr_REV
VFNMADDPD4Yrr_REV
VFMADDSUBPS4Yrr_REV
VFMSUBPS4Yrr_REV
VFNMSUBPS4Yrr_REV
VFMSUBADDPS4Yrr_REV
VFMADDPS4Yrr_REV
VFNMADDPS4Yrr_REV
VMOVDQAYrr_REV
VPERMIL2PDYrr_REV
VMOVAPDYrr_REV
VMOVUPDYrr_REV
VPERMIL2PSYrr_REV
VMOVAPSYrr_REV
VMOVUPSYrr_REV
VMOVDQUYrr_REV
VMOVDQA32Zrr_REV
VMOVDQU32Zrr_REV
VMOVDQA64Zrr_REV
VMOVDQU64Zrr_REV
VMOVDQU16Zrr_REV
VMOVDQU8Zrr_REV
VMOVAPDZrr_REV
VMOVUPDZrr_REV
VMOVSDZrr_REV
VMOVAPSZrr_REV
VMOVUPSZrr_REV
VMOVSSZrr_REV
VPEXTRWZrr_REV
VPPERMrrr_REV
VPCMOVrrr_REV
VPCMOVYrrr_REV
VFMSUBSD4rr_Int_REV
VFNMSUBSD4rr_Int_REV
VFMADDSD4rr_Int_REV
VFNMADDSD4rr_Int_REV
VFMSUBSS4rr_Int_REV
VFNMSUBSS4rr_Int_REV
VFMADDSS4rr_Int_REV
VFNMADDSS4rr_Int_REV
VMOVDQA32Z256rrkz_REV
VMOVDQU32Z256rrkz_REV
VMOVDQA64Z256rrkz_REV
VMOVDQU64Z256rrkz_REV
VMOVDQU16Z256rrkz_REV
VMOVDQU8Z256rrkz_REV
VMOVAPDZ256rrkz_REV
VMOVUPDZ256rrkz_REV
VMOVAPSZ256rrkz_REV
VMOVUPSZ256rrkz_REV
VMOVDQA32Z128rrkz_REV
VMOVDQU32Z128rrkz_REV
VMOVDQA64Z128rrkz_REV
VMOVDQU64Z128rrkz_REV
VMOVDQU16Z128rrkz_REV
VMOVDQU8Z128rrkz_REV
VMOVAPDZ128rrkz_REV
VMOVUPDZ128rrkz_REV
VMOVAPSZ128rrkz_REV
VMOVUPSZ128rrkz_REV
VMOVDQA32Zrrkz_REV
VMOVDQU32Zrrkz_REV
VMOVDQA64Zrrkz_REV
VMOVDQU64Zrrkz_REV
VMOVDQU16Zrrkz_REV
VMOVDQU8Zrrkz_REV
VMOVAPDZrrkz_REV
VMOVUPDZrrkz_REV
VMOVSDZrrkz_REV
VMOVAPSZrrkz_REV
VMOVUPSZrrkz_REV
VMOVSSZrrkz_REV
G_FDIV
G_STRICT_FDIV
G_SDIV
G_UDIV
ENCLV
PTILEZEROV
KSET0W
KSET1W
PREFETCHW
LRETIW
G_FPOW
NOOPW
SCASW
LODSW
INSW
STOSW
CMPSW
OUTSW
MOVSW
LRETW
CMOV_FR32X
FYL2X
CMOV_FR64X
CMOV_VR256X
CMOV_VR128X
G_VECREDUCE_FMAX
G_VECREDUCE_SMAX
G_SMAX
G_VECREDUCE_UMAX
G_UMAX
G_ATOMICRMW_UMAX
G_ATOMICRMW_MAX
LCMPXCHG16B_SAVE_RBX
MWAITX_SAVE_RBX
LCMPXCHG16B_NO_RBX
G_FRAME_INDEX
FNCLEX
MOVSX32rm8_NOREX
MOVZX32rm8_NOREX
MOVSX32rr8_NOREX
MOVZX32rr8_NOREX
MOV8rm_NOREX
MOV8mr_NOREX
XOR8rr_NOREX
MOV8rr_NOREX
TAILJMPm64_REX
TAILJMPr64_REX
JMP64m_REX
JMP64r_REX
REX64_PREFIX
DATA16_PREFIX
REPNE_PREFIX
XACQUIRE_PREFIX
XRELEASE_PREFIX
LOCK_PREFIX
REP_PREFIX
CS_PREFIX
DS_PREFIX
ES_PREFIX
FS_PREFIX
GS_PREFIX
SS_PREFIX
G_SMULFIX
G_UMULFIX
G_SDIVFIX
G_UDIVFIX
VMOVAPSZ256rm_NOVLX
VMOVUPSZ256rm_NOVLX
VMOVAPSZ128rm_NOVLX
VMOVUPSZ128rm_NOVLX
VMOVAPSZ256mr_NOVLX
VMOVUPSZ256mr_NOVLX
VMOVAPSZ128mr_NOVLX
VMOVUPSZ128mr_NOVLX
MWAITX
LOADIWKEY
G_MEMCPY
COPY
CLRSSBSY
SETSSBSY
G_CTLZ
G_CTTZ
JECXZ
JCXZ
JRCXZ
MOV32o32a
MOV64o32a
MOV16o32a
MOV8o32a
MOV32o64a
MOV64o64a
MOV16o64a
MOV8o64a
MOV32o16a
MOV16o16a
MOV8o16a
VPCMPDZ256rmib
VPCMPUDZ256rmib
VPCMPQZ256rmib
VPCMPUQZ256rmib
VPCMPDZ128rmib
VPCMPUDZ128rmib
VPCMPQZ128rmib
VPCMPUQZ128rmib
VPCMPDZrmib
VPCMPUDZrmib
VPCMPQZrmib
VPCMPUQZrmib
VREDUCEPDZrrib
VRANGEPDZrrib
VRNDSCALEPDZrrib
VFIXUPIMMPDZrrib
VCMPPDZrrib
VGETMANTPDZrrib
VREDUCESDZrrib
VRANGESDZrrib
VFIXUPIMMSDZrrib
VGETMANTSDZrrib
VREDUCEPSZrrib
VRANGEPSZrrib
VRNDSCALEPSZrrib
VFIXUPIMMPSZrrib
VCMPPSZrrib
VGETMANTPSZrrib
VREDUCESSZrrib
VRANGESSZrrib
VFIXUPIMMSSZrrib
VGETMANTSSZrrib
VFMADDSUB231PDZ256mb
VFMSUB231PDZ256mb
VFNMSUB231PDZ256mb
VFMSUBADD231PDZ256mb
VFMADD231PDZ256mb
VFNMADD231PDZ256mb
VFMADDSUB132PDZ256mb
VFMSUB132PDZ256mb
VFNMSUB132PDZ256mb
VFMSUBADD132PDZ256mb
VFMADD132PDZ256mb
VFNMADD132PDZ256mb
VFMADDSUB213PDZ256mb
VFMSUB213PDZ256mb
VFNMSUB213PDZ256mb
VFMSUBADD213PDZ256mb
VFMADD213PDZ256mb
VFNMADD213PDZ256mb
VRCP14PDZ256mb
VRSQRT14PDZ256mb
VGETEXPPDZ256mb
VSQRTPDZ256mb
VPDPWSSDZ256mb
VPDPBUSDZ256mb
VPSHLDVDZ256mb
VPSHRDVDZ256mb
VPMADD52HUQZ256mb
VPMADD52LUQZ256mb
VPSHLDVQZ256mb
VPSHRDVQZ256mb
VPDPWSSDSZ256mb
VPDPBUSDSZ256mb
VFMADDSUB231PSZ256mb
VFMSUB231PSZ256mb
VFNMSUB231PSZ256mb
VFMSUBADD231PSZ256mb
VFMADD231PSZ256mb
VFNMADD231PSZ256mb
VFMADDSUB132PSZ256mb
VFMSUB132PSZ256mb
VFNMSUB132PSZ256mb
VFMSUBADD132PSZ256mb
VFMADD132PSZ256mb
VFNMADD132PSZ256mb
VFMADDSUB213PSZ256mb
VFMSUB213PSZ256mb
VFNMSUB213PSZ256mb
VFMSUBADD213PSZ256mb
VFMADD213PSZ256mb
VFNMADD213PSZ256mb
VRCP14PSZ256mb
VRSQRT14PSZ256mb
VDPBF16PSZ256mb
VGETEXPPSZ256mb
VSQRTPSZ256mb
VFMADDSUB231PDZ128mb
VFMSUB231PDZ128mb
VFNMSUB231PDZ128mb
VFMSUBADD231PDZ128mb
VFMADD231PDZ128mb
VFNMADD231PDZ128mb
VFMADDSUB132PDZ128mb
VFMSUB132PDZ128mb
VFNMSUB132PDZ128mb
VFMSUBADD132PDZ128mb
VFMADD132PDZ128mb
VFNMADD132PDZ128mb
VFMADDSUB213PDZ128mb
VFMSUB213PDZ128mb
VFNMSUB213PDZ128mb
VFMSUBADD213PDZ128mb
VFMADD213PDZ128mb
VFNMADD213PDZ128mb
VRCP14PDZ128mb
VRSQRT14PDZ128mb
VGETEXPPDZ128mb
VSQRTPDZ128mb
VPDPWSSDZ128mb
VPDPBUSDZ128mb
VPSHLDVDZ128mb
VPSHRDVDZ128mb
VPMADD52HUQZ128mb
VPMADD52LUQZ128mb
VPSHLDVQZ128mb
VPSHRDVQZ128mb
VPDPWSSDSZ128mb
VPDPBUSDSZ128mb
VFMADDSUB231PSZ128mb
VFMSUB231PSZ128mb
VFNMSUB231PSZ128mb
VFMSUBADD231PSZ128mb
VFMADD231PSZ128mb
VFNMADD231PSZ128mb
VFMADDSUB132PSZ128mb
VFMSUB132PSZ128mb
VFNMSUB132PSZ128mb
VFMSUBADD132PSZ128mb
VFMADD132PSZ128mb
VFNMADD132PSZ128mb
VFMADDSUB213PSZ128mb
VFMSUB213PSZ128mb
VFNMSUB213PSZ128mb
VFMSUBADD213PSZ128mb
VFMADD213PSZ128mb
VFNMADD213PSZ128mb
VRCP14PSZ128mb
VRSQRT14PSZ128mb
VDPBF16PSZ128mb
VGETEXPPSZ128mb
VSQRTPSZ128mb
VFMADDSUB231PDZmb
VFMSUB231PDZmb
VFNMSUB231PDZmb
VFMSUBADD231PDZmb
VFMADD231PDZmb
VFNMADD231PDZmb
VFMADDSUB132PDZmb
VFMSUB132PDZmb
VFNMSUB132PDZmb
VFMSUBADD132PDZmb
VFMADD132PDZmb
VFNMADD132PDZmb
VEXP2PDZmb
VFMADDSUB213PDZmb
VFMSUB213PDZmb
VFNMSUB213PDZmb
VFMSUBADD213PDZmb
VFMADD213PDZmb
VFNMADD213PDZmb
VRCP14PDZmb
VRSQRT14PDZmb
VRCP28PDZmb
VRSQRT28PDZmb
VGETEXPPDZmb
VSQRTPDZmb
VPDPWSSDZmb
VPDPBUSDZmb
VPSHLDVDZmb
VPSHRDVDZmb
VPMADD52HUQZmb
VPMADD52LUQZmb
VPSHLDVQZmb
VPSHRDVQZmb
VPDPWSSDSZmb
VPDPBUSDSZmb
VFMADDSUB231PSZmb
VFMSUB231PSZmb
VFNMSUB231PSZmb
VFMSUBADD231PSZmb
VFMADD231PSZmb
VFNMADD231PSZmb
VFMADDSUB132PSZmb
VFMSUB132PSZmb
VFNMSUB132PSZmb
VFMSUBADD132PSZmb
VFMADD132PSZmb
VFNMADD132PSZmb
VEXP2PSZmb
VFMADDSUB213PSZmb
VFMSUB213PSZmb
VFNMSUB213PSZmb
VFMSUBADD213PSZmb
VFMADD213PSZmb
VFNMADD213PSZmb
VRCP14PSZmb
VRSQRT14PSZmb
VDPBF16PSZmb
VRCP28PSZmb
VRSQRT28PSZmb
VGETEXPPSZmb
VSQRTPSZmb
VPERMI2D256rmb
VPERMT2D256rmb
VPERMI2PD256rmb
VPERMT2PD256rmb
VPERMI2Q256rmb
VPERMT2Q256rmb
VPERMI2PS256rmb
VPERMT2PS256rmb
VCVTNE2PS2BF16Z256rmb
VCVTNEPS2BF16Z256rmb
VPMULTISHIFTQBZ256rmb
VPSUBDZ256rmb
VPADDDZ256rmb
VPANDDZ256rmb
VPMULLDZ256rmb
VPBLENDMDZ256rmb
VPTESTNMDZ256rmb
VPERMDZ256rmb
VPTESTMDZ256rmb
VPANDNDZ256rmb
VCVTDQ2PDZ256rmb
VCVTUDQ2PDZ256rmb
VCVTQQ2PDZ256rmb
VCVTUQQ2PDZ256rmb
VCVTPS2PDZ256rmb
VSUBPDZ256rmb
VMINCPDZ256rmb
VMAXCPDZ256rmb
VADDPDZ256rmb
VANDPDZ256rmb
VSCALEFPDZ256rmb
VUNPCKHPDZ256rmb
VPERMILPDZ256rmb
VUNPCKLPDZ256rmb
VMULPDZ256rmb
VBLENDMPDZ256rmb
VPERMPDZ256rmb
VANDNPDZ256rmb
VMINPDZ256rmb
VORPDZ256rmb
VXORPDZ256rmb
VFPCLASSPDZ256rmb
VDIVPDZ256rmb
VMAXPDZ256rmb
VPCMPEQDZ256rmb
VPORDZ256rmb
VPXORDZ256rmb
VPABSDZ256rmb
VPMINSDZ256rmb
VPMAXSDZ256rmb
VP2INTERSECTDZ256rmb
VPCONFLICTDZ256rmb
VPCMPGTDZ256rmb
VPOPCNTDZ256rmb
VPLZCNTDZ256rmb
VPMINUDZ256rmb
VPMAXUDZ256rmb
VPSRAVDZ256rmb
VPSLLVDZ256rmb
VPROLVDZ256rmb
VPSRLVDZ256rmb
VPRORVDZ256rmb
VPSUBQZ256rmb
VCVTTPD2DQZ256rmb
VCVTPD2DQZ256rmb
VCVTTPS2DQZ256rmb
VCVTPS2DQZ256rmb
VPADDQZ256rmb
VPUNPCKHDQZ256rmb
VPUNPCKLDQZ256rmb
VPMULDQZ256rmb
VPANDQZ256rmb
VPUNPCKHQDQZ256rmb
VPUNPCKLQDQZ256rmb
VCVTTPD2UDQZ256rmb
VCVTPD2UDQZ256rmb
VCVTTPS2UDQZ256rmb
VCVTPS2UDQZ256rmb
VPMULUDQZ256rmb
VPMULLQZ256rmb
VPBLENDMQZ256rmb
VPTESTNMQZ256rmb
VPERMQZ256rmb
VPTESTMQZ256rmb
VPANDNQZ256rmb
VCVTTPD2QQZ256rmb
VCVTPD2QQZ256rmb
VCVTTPS2QQZ256rmb
VCVTPS2QQZ256rmb
VPCMPEQQZ256rmb
VCVTTPD2UQQZ256rmb
VCVTPD2UQQZ256rmb
VCVTTPS2UQQZ256rmb
VCVTPS2UQQZ256rmb
VPORQZ256rmb
VPXORQZ256rmb
VPABSQZ256rmb
VPMINSQZ256rmb
VPMAXSQZ256rmb
VP2INTERSECTQZ256rmb
VPCONFLICTQZ256rmb
VPCMPGTQZ256rmb
VPOPCNTQZ256rmb
VPLZCNTQZ256rmb
VPMINUQZ256rmb
VPMAXUQZ256rmb
VPSRAVQZ256rmb
VPSLLVQZ256rmb
VPROLVQZ256rmb
VPSRLVQZ256rmb
VPRORVQZ256rmb
VCVTPD2PSZ256rmb
VCVTDQ2PSZ256rmb
VCVTUDQ2PSZ256rmb
VCVTQQ2PSZ256rmb
VCVTUQQ2PSZ256rmb
VSUBPSZ256rmb
VMINCPSZ256rmb
VMAXCPSZ256rmb
VADDPSZ256rmb
VANDPSZ256rmb
VSCALEFPSZ256rmb
VUNPCKHPSZ256rmb
VPERMILPSZ256rmb
VUNPCKLPSZ256rmb
VMULPSZ256rmb
VBLENDMPSZ256rmb
VPERMPSZ256rmb
VANDNPSZ256rmb
VMINPSZ256rmb
VORPSZ256rmb
VXORPSZ256rmb
VFPCLASSPSZ256rmb
VDIVPSZ256rmb
VMAXPSZ256rmb
VPACKSSDWZ256rmb
VPACKUSDWZ256rmb
VPERMI2D128rmb
VPERMT2D128rmb
VPERMI2PD128rmb
VPERMT2PD128rmb
VPERMI2Q128rmb
VPERMT2Q128rmb
VPERMI2PS128rmb
VPERMT2PS128rmb
VCVTNE2PS2BF16Z128rmb
VCVTNEPS2BF16Z128rmb
VPMULTISHIFTQBZ128rmb
VPSUBDZ128rmb
VPADDDZ128rmb
VPANDDZ128rmb
VPMULLDZ128rmb
VPBLENDMDZ128rmb
VPTESTNMDZ128rmb
VPTESTMDZ128rmb
VPANDNDZ128rmb
VCVTDQ2PDZ128rmb
VCVTUDQ2PDZ128rmb
VCVTQQ2PDZ128rmb
VCVTUQQ2PDZ128rmb
VCVTPS2PDZ128rmb
VSUBPDZ128rmb
VMINCPDZ128rmb
VMAXCPDZ128rmb
VADDPDZ128rmb
VANDPDZ128rmb
VSCALEFPDZ128rmb
VUNPCKHPDZ128rmb
VPERMILPDZ128rmb
VUNPCKLPDZ128rmb
VMULPDZ128rmb
VBLENDMPDZ128rmb
VANDNPDZ128rmb
VMINPDZ128rmb
VORPDZ128rmb
VXORPDZ128rmb
VFPCLASSPDZ128rmb
VDIVPDZ128rmb
VMAXPDZ128rmb
VPCMPEQDZ128rmb
VPORDZ128rmb
VPXORDZ128rmb
VPABSDZ128rmb
VPMINSDZ128rmb
VPMAXSDZ128rmb
VP2INTERSECTDZ128rmb
VPCONFLICTDZ128rmb
VPCMPGTDZ128rmb
VPOPCNTDZ128rmb
VPLZCNTDZ128rmb
VPMINUDZ128rmb
VPMAXUDZ128rmb
VPSRAVDZ128rmb
VPSLLVDZ128rmb
VPROLVDZ128rmb
VPSRLVDZ128rmb
VPRORVDZ128rmb
VPSUBQZ128rmb
VCVTTPD2DQZ128rmb
VCVTPD2DQZ128rmb
VCVTTPS2DQZ128rmb
VCVTPS2DQZ128rmb
VPADDQZ128rmb
VPUNPCKHDQZ128rmb
VPUNPCKLDQZ128rmb
VPMULDQZ128rmb
VPANDQZ128rmb
VPUNPCKHQDQZ128rmb
VPUNPCKLQDQZ128rmb
VCVTTPD2UDQZ128rmb
VCVTPD2UDQZ128rmb
VCVTTPS2UDQZ128rmb
VCVTPS2UDQZ128rmb
VPMULUDQZ128rmb
VPMULLQZ128rmb
VPBLENDMQZ128rmb
VPTESTNMQZ128rmb
VPTESTMQZ128rmb
VPANDNQZ128rmb
VCVTTPD2QQZ128rmb
VCVTPD2QQZ128rmb
VCVTTPS2QQZ128rmb
VCVTPS2QQZ128rmb
VPCMPEQQZ128rmb
VCVTTPD2UQQZ128rmb
VCVTPD2UQQZ128rmb
VCVTTPS2UQQZ128rmb
VCVTPS2UQQZ128rmb
VPORQZ128rmb
VPXORQZ128rmb
VPABSQZ128rmb
VPMINSQZ128rmb
VPMAXSQZ128rmb
VP2INTERSECTQZ128rmb
VPCONFLICTQZ128rmb
VPCMPGTQZ128rmb
VPOPCNTQZ128rmb
VPLZCNTQZ128rmb
VPMINUQZ128rmb
VPMAXUQZ128rmb
VPSRAVQZ128rmb
VPSLLVQZ128rmb
VPROLVQZ128rmb
VPSRLVQZ128rmb
VPRORVQZ128rmb
VCVTPD2PSZ128rmb
VCVTDQ2PSZ128rmb
VCVTUDQ2PSZ128rmb
VCVTQQ2PSZ128rmb
VCVTUQQ2PSZ128rmb
VSUBPSZ128rmb
VMINCPSZ128rmb
VMAXCPSZ128rmb
VADDPSZ128rmb
VANDPSZ128rmb
VSCALEFPSZ128rmb
VUNPCKHPSZ128rmb
VPERMILPSZ128rmb
VUNPCKLPSZ128rmb
VMULPSZ128rmb
VBLENDMPSZ128rmb
VANDNPSZ128rmb
VMINPSZ128rmb
VORPSZ128rmb
VXORPSZ128rmb
VFPCLASSPSZ128rmb
VDIVPSZ128rmb
VMAXPSZ128rmb
VPACKSSDWZ128rmb
VPACKUSDWZ128rmb
VPERMI2Drmb
VPERMT2Drmb
VPERMI2PDrmb
VPERMT2PDrmb
VPERMI2Qrmb
VPERMT2Qrmb
VPERMI2PSrmb
VPERMT2PSrmb
VCVTNE2PS2BF16Zrmb
VCVTNEPS2BF16Zrmb
VPMULTISHIFTQBZrmb
VPSUBDZrmb
VPADDDZrmb
VPANDDZrmb
VPMULLDZrmb
VPBLENDMDZrmb
VPTESTNMDZrmb
VPERMDZrmb
VPTESTMDZrmb
VPANDNDZrmb
VCVTDQ2PDZrmb
VCVTUDQ2PDZrmb
VCVTQQ2PDZrmb
VCVTUQQ2PDZrmb
VCVTPS2PDZrmb
VSUBPDZrmb
VMINCPDZrmb
VMAXCPDZrmb
VADDPDZrmb
VANDPDZrmb
VSCALEFPDZrmb
VUNPCKHPDZrmb
VPERMILPDZrmb
VUNPCKLPDZrmb
VMULPDZrmb
VBLENDMPDZrmb
VPERMPDZrmb
VANDNPDZrmb
VMINPDZrmb
VORPDZrmb
VXORPDZrmb
VFPCLASSPDZrmb
VDIVPDZrmb
VMAXPDZrmb
VPCMPEQDZrmb
VPORDZrmb
VPXORDZrmb
VPABSDZrmb
VPMINSDZrmb
VPMAXSDZrmb
VP2INTERSECTDZrmb
VPCONFLICTDZrmb
VPCMPGTDZrmb
VPOPCNTDZrmb
VPLZCNTDZrmb
VPMINUDZrmb
VPMAXUDZrmb
VPSRAVDZrmb
VPSLLVDZrmb
VPROLVDZrmb
VPSRLVDZrmb
VPRORVDZrmb
VPSUBQZrmb
VCVTTPD2DQZrmb
VCVTPD2DQZrmb
VCVTTPS2DQZrmb
VCVTPS2DQZrmb
VPADDQZrmb
VPUNPCKHDQZrmb
VPUNPCKLDQZrmb
VPMULDQZrmb
VPANDQZrmb
VPUNPCKHQDQZrmb
VPUNPCKLQDQZrmb
VCVTTPD2UDQZrmb
VCVTPD2UDQZrmb
VCVTTPS2UDQZrmb
VCVTPS2UDQZrmb
VPMULUDQZrmb
VPMULLQZrmb
VPBLENDMQZrmb
VPTESTNMQZrmb
VPERMQZrmb
VPTESTMQZrmb
VPANDNQZrmb
VCVTTPD2QQZrmb
VCVTPD2QQZrmb
VCVTTPS2QQZrmb
VCVTPS2QQZrmb
VPCMPEQQZrmb
VCVTTPD2UQQZrmb
VCVTPD2UQQZrmb
VCVTTPS2UQQZrmb
VCVTPS2UQQZrmb
VPORQZrmb
VPXORQZrmb
VPABSQZrmb
VPMINSQZrmb
VPMAXSQZrmb
VP2INTERSECTQZrmb
VPCONFLICTQZrmb
VPCMPGTQZrmb
VPOPCNTQZrmb
VPLZCNTQZrmb
VPMINUQZrmb
VPMAXUQZrmb
VPSRAVQZrmb
VPSLLVQZrmb
VPROLVQZrmb
VPSRLVQZrmb
VPRORVQZrmb
VCVTPD2PSZrmb
VCVTDQ2PSZrmb
VCVTUDQ2PSZrmb
VCVTQQ2PSZrmb
VCVTUQQ2PSZrmb
VSUBPSZrmb
VMINCPSZrmb
VMAXCPSZrmb
VADDPSZrmb
VANDPSZrmb
VSCALEFPSZrmb
VUNPCKHPSZrmb
VPERMILPSZrmb
VUNPCKLPSZrmb
VMULPSZrmb
VBLENDMPSZrmb
VPERMPSZrmb
VANDNPSZrmb
VMINPSZrmb
VORPSZrmb
VXORPSZrmb
VFPCLASSPSZrmb
VDIVPSZrmb
VMAXPSZrmb
VPACKSSDWZrmb
VPACKUSDWZrmb
VFMADDSUB231PDZrb
VFMSUB231PDZrb
VFNMSUB231PDZrb
VFMSUBADD231PDZrb
VFMADD231PDZrb
VFNMADD231PDZrb
VFMADDSUB132PDZrb
VFMSUB132PDZrb
VFNMSUB132PDZrb
VFMSUBADD132PDZrb
VFMADD132PDZrb
VFNMADD132PDZrb
VEXP2PDZrb
VFMADDSUB213PDZrb
VFMSUB213PDZrb
VFNMSUB213PDZrb
VFMSUBADD213PDZrb
VFMADD213PDZrb
VFNMADD213PDZrb
VRCP28PDZrb
VRSQRT28PDZrb
VGETEXPPDZrb
VSQRTPDZrb
VFMSUB231SDZrb
VFNMSUB231SDZrb
VFMADD231SDZrb
VFNMADD231SDZrb
VFMSUB132SDZrb
VFNMSUB132SDZrb
VFMADD132SDZrb
VFNMADD132SDZrb
VFMSUB213SDZrb
VFNMSUB213SDZrb
VFMADD213SDZrb
VFNMADD213SDZrb
VRCP28SDZrb
VRSQRT28SDZrb
VGETEXPSDZrb
VFMADDSUB231PSZrb
VFMSUB231PSZrb
VFNMSUB231PSZrb
VFMSUBADD231PSZrb
VFMADD231PSZrb
VFNMADD231PSZrb
VFMADDSUB132PSZrb
VFMSUB132PSZrb
VFNMSUB132PSZrb
VFMSUBADD132PSZrb
VFMADD132PSZrb
VFNMADD132PSZrb
VEXP2PSZrb
VFMADDSUB213PSZrb
VFMSUB213PSZrb
VFNMSUB213PSZrb
VFMSUBADD213PSZrb
VFMADD213PSZrb
VFNMADD213PSZrb
VRCP28PSZrb
VRSQRT28PSZrb
VGETEXPPSZrb
VSQRTPSZrb
VFMSUB231SSZrb
VFNMSUB231SSZrb
VFMADD231SSZrb
VFNMADD231SSZrb
VFMSUB132SSZrb
VFNMSUB132SSZrb
VFMADD132SSZrb
VFNMADD132SSZrb
VFMSUB213SSZrb
VFNMSUB213SSZrb
VFMADD213SSZrb
VFNMADD213SSZrb
VRCP28SSZrb
VRSQRT28SSZrb
VGETEXPSSZrb
VCVTQQ2PDZrrb
VCVTUQQ2PDZrrb
VCVTPS2PDZrrb
VSUBPDZrrb
VADDPDZrrb
VSCALEFPDZrrb
VMULPDZrrb
VMINPDZrrb
VDIVPDZrrb
VMAXPDZrrb
VUCOMISDZrrb
VCOMISDZrrb
VCVTPS2PHZrrb
VCVTTPD2DQZrrb
VCVTPD2DQZrrb
VCVTTPS2DQZrrb
VCVTPS2DQZrrb
VCVTTPD2UDQZrrb
VCVTPD2UDQZrrb
VCVTTPS2UDQZrrb
VCVTPS2UDQZrrb
VCVTTPD2QQZrrb
VCVTPD2QQZrrb
VCVTTPS2QQZrrb
VCVTPS2QQZrrb
VCVTTPD2UQQZrrb
VCVTPD2UQQZrrb
VCVTTPS2UQQZrrb
VCVTPS2UQQZrrb
VCVTPD2PSZrrb
VCVTPH2PSZrrb
VCVTDQ2PSZrrb
VCVTUDQ2PSZrrb
VCVTQQ2PSZrrb
VCVTUQQ2PSZrrb
VSUBPSZrrb
VADDPSZrrb
VSCALEFPSZrrb
VMULPSZrrb
VMINPSZrrb
VDIVPSZrrb
VMAXPSZrrb
VUCOMISSZrrb
VCOMISSZrrb
TCRETURNdi64cc
TCRETURNdicc
SEH_StackAlloc
MOV32rc
MOV64rc
TAILJMPd
OR32mi8Locked
MOV32rd
MOV64rd
SEH_PushFrame
SEH_SetFrame
SEH_Epilogue
SEH_EndPrologue
SEH_SaveReg
SEH_PushReg
Int_eh_sjlj_setup_dispatch
FARCALL32i
FARJMP32i
FARCALL16i
FARJMP16i
VPSRADZ256mbi
VPSHUFDZ256mbi
VPSLLDZ256mbi
VPROLDZ256mbi
VPSRLDZ256mbi
VPERMILPDZ256mbi
VPERMPDZ256mbi
VPRORDZ256mbi
VPSRAQZ256mbi
VPSLLQZ256mbi
VPROLQZ256mbi
VPSRLQZ256mbi
VPERMQZ256mbi
VPRORQZ256mbi
VPERMILPSZ256mbi
VPSRADZ128mbi
VPSHUFDZ128mbi
VPSLLDZ128mbi
VPROLDZ128mbi
VPSRLDZ128mbi
VPERMILPDZ128mbi
VPRORDZ128mbi
VPSRAQZ128mbi
VPSLLQZ128mbi
VPROLQZ128mbi
VPSRLQZ128mbi
VPRORQZ128mbi
VPERMILPSZ128mbi
VPSRADZmbi
VPSHUFDZmbi
VPSLLDZmbi
VPROLDZmbi
VPSRLDZmbi
VPERMILPDZmbi
VPERMPDZmbi
VPRORDZmbi
VPSRAQZmbi
VPSLLQZmbi
VPROLQZmbi
VPSRLQZmbi
VPERMQZmbi
VPRORQZmbi
VPERMILPSZmbi
VSHUFF64X2Z256rmbi
VSHUFI64X2Z256rmbi
VSHUFF32X4Z256rmbi
VSHUFI32X4Z256rmbi
VGF2P8AFFINEQBZ256rmbi
VGF2P8AFFINEINVQBZ256rmbi
VPSHLDDZ256rmbi
VPSHRDDZ256rmbi
VPTERNLOGDZ256rmbi
VALIGNDZ256rmbi
VREDUCEPDZ256rmbi
VRANGEPDZ256rmbi
VRNDSCALEPDZ256rmbi
VSHUFPDZ256rmbi
VFIXUPIMMPDZ256rmbi
VCMPPDZ256rmbi
VGETMANTPDZ256rmbi
VPSHLDQZ256rmbi
VPSHRDQZ256rmbi
VPTERNLOGQZ256rmbi
VALIGNQZ256rmbi
VREDUCEPSZ256rmbi
VRANGEPSZ256rmbi
VRNDSCALEPSZ256rmbi
VSHUFPSZ256rmbi
VFIXUPIMMPSZ256rmbi
VCMPPSZ256rmbi
VGETMANTPSZ256rmbi
VGF2P8AFFINEQBZ128rmbi
VGF2P8AFFINEINVQBZ128rmbi
VPSHLDDZ128rmbi
VPSHRDDZ128rmbi
VPTERNLOGDZ128rmbi
VALIGNDZ128rmbi
VREDUCEPDZ128rmbi
VRANGEPDZ128rmbi
VRNDSCALEPDZ128rmbi
VSHUFPDZ128rmbi
VFIXUPIMMPDZ128rmbi
VCMPPDZ128rmbi
VGETMANTPDZ128rmbi
VPSHLDQZ128rmbi
VPSHRDQZ128rmbi
VPTERNLOGQZ128rmbi
VALIGNQZ128rmbi
VREDUCEPSZ128rmbi
VRANGEPSZ128rmbi
VRNDSCALEPSZ128rmbi
VSHUFPSZ128rmbi
VFIXUPIMMPSZ128rmbi
VCMPPSZ128rmbi
VGETMANTPSZ128rmbi
VSHUFF64X2Zrmbi
VSHUFI64X2Zrmbi
VSHUFF32X4Zrmbi
VSHUFI32X4Zrmbi
VGF2P8AFFINEQBZrmbi
VGF2P8AFFINEINVQBZrmbi
VPSHLDDZrmbi
VPSHRDDZrmbi
VPTERNLOGDZrmbi
VALIGNDZrmbi
VREDUCEPDZrmbi
VRANGEPDZrmbi
VRNDSCALEPDZrmbi
VSHUFPDZrmbi
VFIXUPIMMPDZrmbi
VCMPPDZrmbi
VGETMANTPDZrmbi
VPSHLDQZrmbi
VPSHRDQZrmbi
VPTERNLOGQZrmbi
VALIGNQZrmbi
VREDUCEPSZrmbi
VRANGEPSZrmbi
VRNDSCALEPSZrmbi
VSHUFPSZrmbi
VFIXUPIMMPSZrmbi
VCMPPSZrmbi
VGETMANTPSZrmbi
TCRETURNdi
SBB32mi
LOCK_SUB32mi
ADC32mi
LOCK_ADD32mi
LOCK_AND32mi
BEXTRI32mi
RCL32mi
SHL32mi
ROL32mi
CMP32mi
SAR32mi
RCR32mi
SHR32mi
ROR32mi
LOCK_XOR32mi
LOCK_OR32mi
TEST32mi
MOV32mi
RORX32mi
BEXTRI64mi
RCL64mi
SHL64mi
ROL64mi
SAR64mi
RCR64mi
SHR64mi
ROR64mi
RORX64mi
SBB16mi
LOCK_SUB16mi
ADC16mi
LOCK_ADD16mi
LOCK_AND16mi
RCL16mi
SHL16mi
ROL16mi
CMP16mi
SAR16mi
RCR16mi
SHR16mi
ROR16mi
LOCK_XOR16mi
LOCK_OR16mi
TEST16mi
MOV16mi
VPSRADZ256mi
VPSHUFDZ256mi
VPSLLDZ256mi
VPROLDZ256mi
VPSRLDZ256mi
VPERMILPDZ256mi
VPERMPDZ256mi
VPRORDZ256mi
VPSRAQZ256mi
VPSLLDQZ256mi
VPSRLDQZ256mi
VPSLLQZ256mi
VPROLQZ256mi
VPSRLQZ256mi
VPERMQZ256mi
VPRORQZ256mi
VPERMILPSZ256mi
VPSRAWZ256mi
VPSHUFHWZ256mi
VPSHUFLWZ256mi
VPSLLWZ256mi
VPSRLWZ256mi
VPSRADZ128mi
VPSHUFDZ128mi
VPSLLDZ128mi
VPROLDZ128mi
VPSRLDZ128mi
VPERMILPDZ128mi
VPRORDZ128mi
VPSRAQZ128mi
VPSLLDQZ128mi
VPSRLDQZ128mi
VPSLLQZ128mi
VPROLQZ128mi
VPSRLQZ128mi
VPRORQZ128mi
VPERMILPSZ128mi
VPSRAWZ128mi
VPSHUFHWZ128mi
VPSHUFLWZ128mi
VPSLLWZ128mi
VPSRLWZ128mi
SBB8mi
LOCK_SUB8mi
ADC8mi
LOCK_ADD8mi
LOCK_AND8mi
RCL8mi
SHL8mi
ROL8mi
CMP8mi
SAR8mi
RCR8mi
SHR8mi
ROR8mi
LOCK_XOR8mi
LOCK_OR8mi
TEST8mi
MOV8mi
VPCOMBmi
VPROTBmi
VPCOMUBmi
VPSHUFDmi
VPCOMDmi
VPERMILPDmi
VPROTDmi
VPCOMUDmi
TCRETURNmi
VPCOMQmi
VPROTQmi
VPCOMUQmi
VPERMILPSmi
MMX_PSHUFWmi
VPSHUFHWmi
VPSHUFLWmi
VPCOMWmi
VPROTWmi
VPCOMUWmi
VPSHUFDYmi
VPERMILPDYmi
VPERMPDYmi
VPERMQYmi
VPERMILPSYmi
VPSHUFHWYmi
VPSHUFLWYmi
VPSRADZmi
VPSHUFDZmi
VPSLLDZmi
VPROLDZmi
VPSRLDZmi
VPERMILPDZmi
VPERMPDZmi
VPRORDZmi
VPSRAQZmi
VPSLLDQZmi
VPSRLDQZmi
VPSLLQZmi
VPROLQZmi
VPSRLQZmi
VPERMQZmi
VPRORQZmi
VPERMILPSZmi
VPSRAWZmi
VPSHUFHWZmi
VPSHUFLWZmi
VPSLLWZmi
VPSRLWZmi
LWPVAL32rmi
IMUL32rmi
LWPINS32rmi
LWPVAL64rmi
LWPINS64rmi
SHA1RNDS4rmi
IMUL16rmi
VSHUFF64X2Z256rmi
VSHUFI64X2Z256rmi
VSHUFF32X4Z256rmi
VSHUFI32X4Z256rmi
VPCMPBZ256rmi
VGF2P8AFFINEQBZ256rmi
VGF2P8AFFINEINVQBZ256rmi
VPCMPUBZ256rmi
VPSHLDDZ256rmi
VPSHRDDZ256rmi
VPTERNLOGDZ256rmi
VALIGNDZ256rmi
VREDUCEPDZ256rmi
VRANGEPDZ256rmi
VRNDSCALEPDZ256rmi
VSHUFPDZ256rmi
VPCMPDZ256rmi
VFIXUPIMMPDZ256rmi
VCMPPDZ256rmi
VGETMANTPDZ256rmi
VPCMPUDZ256rmi
VPSHLDQZ256rmi
VPSHRDQZ256rmi
VPTERNLOGQZ256rmi
VALIGNQZ256rmi
VPCMPQZ256rmi
VPCMPUQZ256rmi
VPALIGNRZ256rmi
VREDUCEPSZ256rmi
VRANGEPSZ256rmi
VRNDSCALEPSZ256rmi
VSHUFPSZ256rmi
VFIXUPIMMPSZ256rmi
VCMPPSZ256rmi
VGETMANTPSZ256rmi
VDBPSADBWZ256rmi
VPSHLDWZ256rmi
VPSHRDWZ256rmi
VPCMPWZ256rmi
VPCMPUWZ256rmi
VPCMPBZ128rmi
VGF2P8AFFINEQBZ128rmi
VGF2P8AFFINEINVQBZ128rmi
VPCMPUBZ128rmi
VPSHLDDZ128rmi
VPSHRDDZ128rmi
VPTERNLOGDZ128rmi
VALIGNDZ128rmi
VREDUCEPDZ128rmi
VRANGEPDZ128rmi
VRNDSCALEPDZ128rmi
VSHUFPDZ128rmi
VPCMPDZ128rmi
VFIXUPIMMPDZ128rmi
VCMPPDZ128rmi
VGETMANTPDZ128rmi
VPCMPUDZ128rmi
VPSHLDQZ128rmi
VPSHRDQZ128rmi
VPTERNLOGQZ128rmi
VALIGNQZ128rmi
VPCMPQZ128rmi
VPCMPUQZ128rmi
VPALIGNRZ128rmi
VREDUCEPSZ128rmi
VRANGEPSZ128rmi
VRNDSCALEPSZ128rmi
VSHUFPSZ128rmi
VFIXUPIMMPSZ128rmi
VCMPPSZ128rmi
VGETMANTPSZ128rmi
VDBPSADBWZ128rmi
VPSHLDWZ128rmi
VPSHRDWZ128rmi
VPCMPWZ128rmi
VPCMPUWZ128rmi
VGF2P8AFFINEQBrmi
VGF2P8AFFINEINVQBrmi
VPBLENDDrmi
VBLENDPDrmi
VSHUFPDrmi
VDPPDrmi
VCMPPDrmi
VPALIGNRrmi
MMX_PALIGNRrmi
VBLENDPSrmi
VSHUFPSrmi
VDPPSrmi
VCMPPSrmi
VMPSADBWrmi
VPBLENDWrmi
VGF2P8AFFINEQBYrmi
VGF2P8AFFINEINVQBYrmi
VPBLENDDYrmi
VBLENDPDYrmi
VSHUFPDYrmi
VCMPPDYrmi
VPALIGNRYrmi
VBLENDPSYrmi
VSHUFPSYrmi
VDPPSYrmi
VCMPPSYrmi
VMPSADBWYrmi
VPBLENDWYrmi
VSHUFF64X2Zrmi
VSHUFI64X2Zrmi
VSHUFF32X4Zrmi
VSHUFI32X4Zrmi
VPCMPBZrmi
VGF2P8AFFINEQBZrmi
VGF2P8AFFINEINVQBZrmi
VPCMPUBZrmi
VPSHLDDZrmi
VPSHRDDZrmi
VPTERNLOGDZrmi
VALIGNDZrmi
VREDUCEPDZrmi
VRANGEPDZrmi
VRNDSCALEPDZrmi
VSHUFPDZrmi
VPCMPDZrmi
VFIXUPIMMPDZrmi
VCMPPDZrmi
VGETMANTPDZrmi
VREDUCESDZrmi
VRANGESDZrmi
VFIXUPIMMSDZrmi
VGETMANTSDZrmi
VPCMPUDZrmi
VPSHLDQZrmi
VPSHRDQZrmi
VPTERNLOGQZrmi
VALIGNQZrmi
VPCMPQZrmi
VPCMPUQZrmi
VPALIGNRZrmi
VREDUCEPSZrmi
VRANGEPSZrmi
VRNDSCALEPSZrmi
VSHUFPSZrmi
VFIXUPIMMPSZrmi
VCMPPSZrmi
VGETMANTPSZrmi
VREDUCESSZrmi
VRANGESSZrmi
VFIXUPIMMSSZrmi
VGETMANTSSZrmi
VDBPSADBWZrmi
VPSHLDWZrmi
VPSHRDWZrmi
VPCMPWZrmi
VPCMPUWZrmi
SBB32ri
SUB32ri
ADC32ri
ADD32ri
AND32ri
BEXTRI32ri
RCL32ri
SHL32ri
ROL32ri
IN32ri
CMP32ri
SAR32ri
RCR32ri
SHR32ri
ROR32ri
XOR32ri
SHLDROT32ri
SHRDROT32ri
TEST32ri
MOV32ri
RORX32ri
BEXTRI64ri
RCL64ri
SHL64ri
ROL64ri
SAR64ri
RCR64ri
SHR64ri
ROR64ri
SHLDROT64ri
SHRDROT64ri
MOV64ri
RORX64ri
SBB16ri
SUB16ri
ADC16ri
ADD16ri
AND16ri
RCL16ri
SHL16ri
ROL16ri
IN16ri
CMP16ri
SAR16ri
RCR16ri
SHR16ri
ROR16ri
XOR16ri
TEST16ri
MOV16ri
VPSRADZ256ri
VPSHUFDZ256ri
VPSLLDZ256ri
VPROLDZ256ri
VPSRLDZ256ri
VPERMILPDZ256ri
VPERMPDZ256ri
VPRORDZ256ri
VPSRAQZ256ri
VPSLLDQZ256ri
VPSRLDQZ256ri
VPSLLQZ256ri
VPROLQZ256ri
VPSRLQZ256ri
VPERMQZ256ri
VPRORQZ256ri
VPERMILPSZ256ri
VPSRAWZ256ri
VPSHUFHWZ256ri
VPSHUFLWZ256ri
VPSLLWZ256ri
VPSRLWZ256ri
VPSRADZ128ri
VPSHUFDZ128ri
VPSLLDZ128ri
VPROLDZ128ri
VPSRLDZ128ri
VPERMILPDZ128ri
VPRORDZ128ri
VPSRAQZ128ri
VPSLLDQZ128ri
VPSRLDQZ128ri
VPSLLQZ128ri
VPROLQZ128ri
VPSRLQZ128ri
VPRORQZ128ri
VPERMILPSZ128ri
VPSRAWZ128ri
VPSHUFHWZ128ri
VPSHUFLWZ128ri
VPSLLWZ128ri
VPSRLWZ128ri
SBB8ri
SUB8ri
ADC8ri
ADD8ri
AND8ri
RCL8ri
SHL8ri
ROL8ri
IN8ri
CMP8ri
SAR8ri
RCR8ri
SHR8ri
ROR8ri
XOR8ri
TEST8ri
MOV8ri
KSHIFTLBri
VPCOMBri
KSHIFTRBri
VPROTBri
VPCOMUBri
VPSRADri
MMX_PSRADri
VPSHUFDri
VPSLLDri
MMX_PSLLDri
VPSRLDri
MMX_PSRLDri
KSHIFTLDri
VPCOMDri
VPERMILPDri
KSHIFTRDri
VPROTDri
VPCOMUDri
TCRETURNri
VPSLLDQri
VPSRLDQri
VPSLLQri
MMX_PSLLQri
VPSRLQri
MMX_PSRLQri
KSHIFTLQri
VPCOMQri
KSHIFTRQri
VPROTQri
VPCOMUQri
VPERMILPSri
VPSRAWri
MMX_PSRAWri
MMX_PSHUFWri
VPSHUFHWri
VPSHUFLWri
VPSLLWri
MMX_PSLLWri
VPSRLWri
MMX_PSRLWri
KSHIFTLWri
VPCOMWri
KSHIFTRWri
VPROTWri
VPCOMUWri
VPSRADYri
VPSHUFDYri
VPSLLDYri
VPSRLDYri
VPERMILPDYri
VPERMPDYri
VPSLLDQYri
VPSRLDQYri
VPSLLQYri
VPSRLQYri
VPERMQYri
VPERMILPSYri
VPSRAWYri
VPSHUFHWYri
VPSHUFLWYri
VPSLLWYri
VPSRLWYri
VPSRADZri
VPSHUFDZri
VPSLLDZri
VPROLDZri
VPSRLDZri
VPERMILPDZri
VPERMPDZri
VPRORDZri
VPSRAQZri
VPSLLDQZri
VPSRLDQZri
VPSLLQZri
VPROLQZri
VPSRLQZri
VPERMQZri
VPRORQZri
VPERMILPSZri
VPSRAWZri
VPSHUFHWZri
VPSHUFLWZri
VPSLLWZri
VPSRLWZri
LWPVAL32rri
IMUL32rri
LWPINS32rri
LWPVAL64rri
LWPINS64rri
SHA1RNDS4rri
IMUL16rri
VSHUFF64X2Z256rri
VSHUFI64X2Z256rri
VSHUFF32X4Z256rri
VSHUFI32X4Z256rri
VPCMPBZ256rri
VGF2P8AFFINEQBZ256rri
VGF2P8AFFINEINVQBZ256rri
VPCMPUBZ256rri
VPSHLDDZ256rri
VPSHRDDZ256rri
VPTERNLOGDZ256rri
VALIGNDZ256rri
VREDUCEPDZ256rri
VRANGEPDZ256rri
VRNDSCALEPDZ256rri
VSHUFPDZ256rri
VPCMPDZ256rri
VFIXUPIMMPDZ256rri
VCMPPDZ256rri
VGETMANTPDZ256rri
VPCMPUDZ256rri
VPSHLDQZ256rri
VPSHRDQZ256rri
VPTERNLOGQZ256rri
VALIGNQZ256rri
VPCMPQZ256rri
VPCMPUQZ256rri
VPALIGNRZ256rri
VREDUCEPSZ256rri
VRANGEPSZ256rri
VRNDSCALEPSZ256rri
VSHUFPSZ256rri
VFIXUPIMMPSZ256rri
VCMPPSZ256rri
VGETMANTPSZ256rri
VDBPSADBWZ256rri
VPSHLDWZ256rri
VPSHRDWZ256rri
VPCMPWZ256rri
VPCMPUWZ256rri
VPCMPBZ128rri
VGF2P8AFFINEQBZ128rri
VGF2P8AFFINEINVQBZ128rri
VPCMPUBZ128rri
VPSHLDDZ128rri
VPSHRDDZ128rri
VPTERNLOGDZ128rri
VALIGNDZ128rri
VREDUCEPDZ128rri
VRANGEPDZ128rri
VRNDSCALEPDZ128rri
VSHUFPDZ128rri
VPCMPDZ128rri
VFIXUPIMMPDZ128rri
VCMPPDZ128rri
VGETMANTPDZ128rri
VPCMPUDZ128rri
VPSHLDQZ128rri
VPSHRDQZ128rri
VPTERNLOGQZ128rri
VALIGNQZ128rri
VPCMPQZ128rri
VPCMPUQZ128rri
VPALIGNRZ128rri
VREDUCEPSZ128rri
VRANGEPSZ128rri
VRNDSCALEPSZ128rri
VSHUFPSZ128rri
VFIXUPIMMPSZ128rri
VCMPPSZ128rri
VGETMANTPSZ128rri
VDBPSADBWZ128rri
VPSHLDWZ128rri
VPSHRDWZ128rri
VPCMPWZ128rri
VPCMPUWZ128rri
VGF2P8AFFINEQBrri
VGF2P8AFFINEINVQBrri
VPBLENDDrri
VBLENDPDrri
VSHUFPDrri
VDPPDrri
VCMPPDrri
VPALIGNRrri
MMX_PALIGNRrri
VBLENDPSrri
VSHUFPSrri
VDPPSrri
VCMPPSrri
VMPSADBWrri
VPBLENDWrri
VGF2P8AFFINEQBYrri
VGF2P8AFFINEINVQBYrri
VPBLENDDYrri
VBLENDPDYrri
VSHUFPDYrri
VCMPPDYrri
VPALIGNRYrri
VBLENDPSYrri
VSHUFPSYrri
VDPPSYrri
VCMPPSYrri
VMPSADBWYrri
VPBLENDWYrri
VSHUFF64X2Zrri
VSHUFI64X2Zrri
VSHUFF32X4Zrri
VSHUFI32X4Zrri
VPCMPBZrri
VGF2P8AFFINEQBZrri
VGF2P8AFFINEINVQBZrri
VPCMPUBZrri
VPSHLDDZrri
VPSHRDDZrri
VPTERNLOGDZrri
VALIGNDZrri
VREDUCEPDZrri
VRANGEPDZrri
VRNDSCALEPDZrri
VSHUFPDZrri
VPCMPDZrri
VFIXUPIMMPDZrri
VCMPPDZrri
VGETMANTPDZrri
VREDUCESDZrri
VRANGESDZrri
VFIXUPIMMSDZrri
VGETMANTSDZrri
VPCMPUDZrri
VPSHLDQZrri
VPSHRDQZrri
VPTERNLOGQZrri
VALIGNQZrri
VPCMPQZrri
VPCMPUQZrri
VPALIGNRZrri
VREDUCEPSZrri
VRANGEPSZrri
VRNDSCALEPSZrri
VSHUFPSZrri
VFIXUPIMMPSZrri
VCMPPSZrri
VGETMANTPSZrri
VREDUCESSZrri
VRANGESSZrri
VFIXUPIMMSSZrri
VGETMANTSSZrri
VDBPSADBWZrri
VPSHLDWZrri
VPSHRDWZrri
VPCMPWZrri
VPCMPUWZrri
VPCMPDZ256rmibk
VPCMPUDZ256rmibk
VPCMPQZ256rmibk
VPCMPUQZ256rmibk
VPCMPDZ128rmibk
VPCMPUDZ128rmibk
VPCMPQZ128rmibk
VPCMPUQZ128rmibk
VPCMPDZrmibk
VPCMPUDZrmibk
VPCMPQZrmibk
VPCMPUQZrmibk
VREDUCEPDZrribk
VRANGEPDZrribk
VRNDSCALEPDZrribk
VFIXUPIMMPDZrribk
VCMPPDZrribk
VGETMANTPDZrribk
VREDUCESDZrribk
VRANGESDZrribk
VFIXUPIMMSDZrribk
VGETMANTSDZrribk
VREDUCEPSZrribk
VRANGEPSZrribk
VRNDSCALEPSZrribk
VFIXUPIMMPSZrribk
VCMPPSZrribk
VGETMANTPSZrribk
VREDUCESSZrribk
VRANGESSZrribk
VFIXUPIMMSSZrribk
VGETMANTSSZrribk
VFMADDSUB231PDZ256mbk
VFMSUB231PDZ256mbk
VFNMSUB231PDZ256mbk
VFMSUBADD231PDZ256mbk
VFMADD231PDZ256mbk
VFNMADD231PDZ256mbk
VFMADDSUB132PDZ256mbk
VFMSUB132PDZ256mbk
VFNMSUB132PDZ256mbk
VFMSUBADD132PDZ256mbk
VFMADD132PDZ256mbk
VFNMADD132PDZ256mbk
VFMADDSUB213PDZ256mbk
VFMSUB213PDZ256mbk
VFNMSUB213PDZ256mbk
VFMSUBADD213PDZ256mbk
VFMADD213PDZ256mbk
VFNMADD213PDZ256mbk
VRCP14PDZ256mbk
VRSQRT14PDZ256mbk
VGETEXPPDZ256mbk
VSQRTPDZ256mbk
VPDPWSSDZ256mbk
VPDPBUSDZ256mbk
VPSHLDVDZ256mbk
VPSHRDVDZ256mbk
VPMADD52HUQZ256mbk
VPMADD52LUQZ256mbk
VPSHLDVQZ256mbk
VPSHRDVQZ256mbk
VPDPWSSDSZ256mbk
VPDPBUSDSZ256mbk
VFMADDSUB231PSZ256mbk
VFMSUB231PSZ256mbk
VFNMSUB231PSZ256mbk
VFMSUBADD231PSZ256mbk
VFMADD231PSZ256mbk
VFNMADD231PSZ256mbk
VFMADDSUB132PSZ256mbk
VFMSUB132PSZ256mbk
VFNMSUB132PSZ256mbk
VFMSUBADD132PSZ256mbk
VFMADD132PSZ256mbk
VFNMADD132PSZ256mbk
VFMADDSUB213PSZ256mbk
VFMSUB213PSZ256mbk
VFNMSUB213PSZ256mbk
VFMSUBADD213PSZ256mbk
VFMADD213PSZ256mbk
VFNMADD213PSZ256mbk
VRCP14PSZ256mbk
VRSQRT14PSZ256mbk
VDPBF16PSZ256mbk
VGETEXPPSZ256mbk
VSQRTPSZ256mbk
VFMADDSUB231PDZ128mbk
VFMSUB231PDZ128mbk
VFNMSUB231PDZ128mbk
VFMSUBADD231PDZ128mbk
VFMADD231PDZ128mbk
VFNMADD231PDZ128mbk
VFMADDSUB132PDZ128mbk
VFMSUB132PDZ128mbk
VFNMSUB132PDZ128mbk
VFMSUBADD132PDZ128mbk
VFMADD132PDZ128mbk
VFNMADD132PDZ128mbk
VFMADDSUB213PDZ128mbk
VFMSUB213PDZ128mbk
VFNMSUB213PDZ128mbk
VFMSUBADD213PDZ128mbk
VFMADD213PDZ128mbk
VFNMADD213PDZ128mbk
VRCP14PDZ128mbk
VRSQRT14PDZ128mbk
VGETEXPPDZ128mbk
VSQRTPDZ128mbk
VPDPWSSDZ128mbk
VPDPBUSDZ128mbk
VPSHLDVDZ128mbk
VPSHRDVDZ128mbk
VPMADD52HUQZ128mbk
VPMADD52LUQZ128mbk
VPSHLDVQZ128mbk
VPSHRDVQZ128mbk
VPDPWSSDSZ128mbk
VPDPBUSDSZ128mbk
VFMADDSUB231PSZ128mbk
VFMSUB231PSZ128mbk
VFNMSUB231PSZ128mbk
VFMSUBADD231PSZ128mbk
VFMADD231PSZ128mbk
VFNMADD231PSZ128mbk
VFMADDSUB132PSZ128mbk
VFMSUB132PSZ128mbk
VFNMSUB132PSZ128mbk
VFMSUBADD132PSZ128mbk
VFMADD132PSZ128mbk
VFNMADD132PSZ128mbk
VFMADDSUB213PSZ128mbk
VFMSUB213PSZ128mbk
VFNMSUB213PSZ128mbk
VFMSUBADD213PSZ128mbk
VFMADD213PSZ128mbk
VFNMADD213PSZ128mbk
VRCP14PSZ128mbk
VRSQRT14PSZ128mbk
VDPBF16PSZ128mbk
VGETEXPPSZ128mbk
VSQRTPSZ128mbk
VFMADDSUB231PDZmbk
VFMSUB231PDZmbk
VFNMSUB231PDZmbk
VFMSUBADD231PDZmbk
VFMADD231PDZmbk
VFNMADD231PDZmbk
VFMADDSUB132PDZmbk
VFMSUB132PDZmbk
VFNMSUB132PDZmbk
VFMSUBADD132PDZmbk
VFMADD132PDZmbk
VFNMADD132PDZmbk
VEXP2PDZmbk
VFMADDSUB213PDZmbk
VFMSUB213PDZmbk
VFNMSUB213PDZmbk
VFMSUBADD213PDZmbk
VFMADD213PDZmbk
VFNMADD213PDZmbk
VRCP14PDZmbk
VRSQRT14PDZmbk
VRCP28PDZmbk
VRSQRT28PDZmbk
VGETEXPPDZmbk
VSQRTPDZmbk
VPDPWSSDZmbk
VPDPBUSDZmbk
VPSHLDVDZmbk
VPSHRDVDZmbk
VPMADD52HUQZmbk
VPMADD52LUQZmbk
VPSHLDVQZmbk
VPSHRDVQZmbk
VPDPWSSDSZmbk
VPDPBUSDSZmbk
VFMADDSUB231PSZmbk
VFMSUB231PSZmbk
VFNMSUB231PSZmbk
VFMSUBADD231PSZmbk
VFMADD231PSZmbk
VFNMADD231PSZmbk
VFMADDSUB132PSZmbk
VFMSUB132PSZmbk
VFNMSUB132PSZmbk
VFMSUBADD132PSZmbk
VFMADD132PSZmbk
VFNMADD132PSZmbk
VEXP2PSZmbk
VFMADDSUB213PSZmbk
VFMSUB213PSZmbk
VFNMSUB213PSZmbk
VFMSUBADD213PSZmbk
VFMADD213PSZmbk
VFNMADD213PSZmbk
VRCP14PSZmbk
VRSQRT14PSZmbk
VDPBF16PSZmbk
VRCP28PSZmbk
VRSQRT28PSZmbk
VGETEXPPSZmbk
VSQRTPSZmbk
VPERMI2D256rmbk
VPERMT2D256rmbk
VPERMI2PD256rmbk
VPERMT2PD256rmbk
VPERMI2Q256rmbk
VPERMT2Q256rmbk
VPERMI2PS256rmbk
VPERMT2PS256rmbk
VCVTNE2PS2BF16Z256rmbk
VCVTNEPS2BF16Z256rmbk
VPMULTISHIFTQBZ256rmbk
VPSUBDZ256rmbk
VPADDDZ256rmbk
VPANDDZ256rmbk
VPMULLDZ256rmbk
VPBLENDMDZ256rmbk
VPTESTNMDZ256rmbk
VPERMDZ256rmbk
VPTESTMDZ256rmbk
VPANDNDZ256rmbk
VCVTDQ2PDZ256rmbk
VCVTUDQ2PDZ256rmbk
VCVTQQ2PDZ256rmbk
VCVTUQQ2PDZ256rmbk
VCVTPS2PDZ256rmbk
VSUBPDZ256rmbk
VMINCPDZ256rmbk
VMAXCPDZ256rmbk
VADDPDZ256rmbk
VANDPDZ256rmbk
VSCALEFPDZ256rmbk
VUNPCKHPDZ256rmbk
VPERMILPDZ256rmbk
VUNPCKLPDZ256rmbk
VMULPDZ256rmbk
VBLENDMPDZ256rmbk
VPERMPDZ256rmbk
VANDNPDZ256rmbk
VMINPDZ256rmbk
VORPDZ256rmbk
VXORPDZ256rmbk
VFPCLASSPDZ256rmbk
VDIVPDZ256rmbk
VMAXPDZ256rmbk
VPCMPEQDZ256rmbk
VPORDZ256rmbk
VPXORDZ256rmbk
VPABSDZ256rmbk
VPMINSDZ256rmbk
VPMAXSDZ256rmbk
VPCONFLICTDZ256rmbk
VPCMPGTDZ256rmbk
VPOPCNTDZ256rmbk
VPLZCNTDZ256rmbk
VPMINUDZ256rmbk
VPMAXUDZ256rmbk
VPSRAVDZ256rmbk
VPSLLVDZ256rmbk
VPROLVDZ256rmbk
VPSRLVDZ256rmbk
VPRORVDZ256rmbk
VPSUBQZ256rmbk
VCVTTPD2DQZ256rmbk
VCVTPD2DQZ256rmbk
VCVTTPS2DQZ256rmbk
VCVTPS2DQZ256rmbk
VPADDQZ256rmbk
VPUNPCKHDQZ256rmbk
VPUNPCKLDQZ256rmbk
VPMULDQZ256rmbk
VPANDQZ256rmbk
VPUNPCKHQDQZ256rmbk
VPUNPCKLQDQZ256rmbk
VCVTTPD2UDQZ256rmbk
VCVTPD2UDQZ256rmbk
VCVTTPS2UDQZ256rmbk
VCVTPS2UDQZ256rmbk
VPMULUDQZ256rmbk
VPMULLQZ256rmbk
VPBLENDMQZ256rmbk
VPTESTNMQZ256rmbk
VPERMQZ256rmbk
VPTESTMQZ256rmbk
VPANDNQZ256rmbk
VCVTTPD2QQZ256rmbk
VCVTPD2QQZ256rmbk
VCVTTPS2QQZ256rmbk
VCVTPS2QQZ256rmbk
VPCMPEQQZ256rmbk
VCVTTPD2UQQZ256rmbk
VCVTPD2UQQZ256rmbk
VCVTTPS2UQQZ256rmbk
VCVTPS2UQQZ256rmbk
VPORQZ256rmbk
VPXORQZ256rmbk
VPABSQZ256rmbk
VPMINSQZ256rmbk
VPMAXSQZ256rmbk
VPCONFLICTQZ256rmbk
VPCMPGTQZ256rmbk
VPOPCNTQZ256rmbk
VPLZCNTQZ256rmbk
VPMINUQZ256rmbk
VPMAXUQZ256rmbk
VPSRAVQZ256rmbk
VPSLLVQZ256rmbk
VPROLVQZ256rmbk
VPSRLVQZ256rmbk
VPRORVQZ256rmbk
VCVTPD2PSZ256rmbk
VCVTDQ2PSZ256rmbk
VCVTUDQ2PSZ256rmbk
VCVTQQ2PSZ256rmbk
VCVTUQQ2PSZ256rmbk
VSUBPSZ256rmbk
VMINCPSZ256rmbk
VMAXCPSZ256rmbk
VADDPSZ256rmbk
VANDPSZ256rmbk
VSCALEFPSZ256rmbk
VUNPCKHPSZ256rmbk
VPERMILPSZ256rmbk
VUNPCKLPSZ256rmbk
VMULPSZ256rmbk
VBLENDMPSZ256rmbk
VPERMPSZ256rmbk
VANDNPSZ256rmbk
VMINPSZ256rmbk
VORPSZ256rmbk
VXORPSZ256rmbk
VFPCLASSPSZ256rmbk
VDIVPSZ256rmbk
VMAXPSZ256rmbk
VPACKSSDWZ256rmbk
VPACKUSDWZ256rmbk
VPERMI2D128rmbk
VPERMT2D128rmbk
VPERMI2PD128rmbk
VPERMT2PD128rmbk
VPERMI2Q128rmbk
VPERMT2Q128rmbk
VPERMI2PS128rmbk
VPERMT2PS128rmbk
VCVTNE2PS2BF16Z128rmbk
VCVTNEPS2BF16Z128rmbk
VPMULTISHIFTQBZ128rmbk
VPSUBDZ128rmbk
VPADDDZ128rmbk
VPANDDZ128rmbk
VPMULLDZ128rmbk
VPBLENDMDZ128rmbk
VPTESTNMDZ128rmbk
VPTESTMDZ128rmbk
VPANDNDZ128rmbk
VCVTDQ2PDZ128rmbk
VCVTUDQ2PDZ128rmbk
VCVTQQ2PDZ128rmbk
VCVTUQQ2PDZ128rmbk
VCVTPS2PDZ128rmbk
VSUBPDZ128rmbk
VMINCPDZ128rmbk
VMAXCPDZ128rmbk
VADDPDZ128rmbk
VANDPDZ128rmbk
VSCALEFPDZ128rmbk
VUNPCKHPDZ128rmbk
VPERMILPDZ128rmbk
VUNPCKLPDZ128rmbk
VMULPDZ128rmbk
VBLENDMPDZ128rmbk
VANDNPDZ128rmbk
VMINPDZ128rmbk
VORPDZ128rmbk
VXORPDZ128rmbk
VFPCLASSPDZ128rmbk
VDIVPDZ128rmbk
VMAXPDZ128rmbk
VPCMPEQDZ128rmbk
VPORDZ128rmbk
VPXORDZ128rmbk
VPABSDZ128rmbk
VPMINSDZ128rmbk
VPMAXSDZ128rmbk
VPCONFLICTDZ128rmbk
VPCMPGTDZ128rmbk
VPOPCNTDZ128rmbk
VPLZCNTDZ128rmbk
VPMINUDZ128rmbk
VPMAXUDZ128rmbk
VPSRAVDZ128rmbk
VPSLLVDZ128rmbk
VPROLVDZ128rmbk
VPSRLVDZ128rmbk
VPRORVDZ128rmbk
VPSUBQZ128rmbk
VCVTTPD2DQZ128rmbk
VCVTPD2DQZ128rmbk
VCVTTPS2DQZ128rmbk
VCVTPS2DQZ128rmbk
VPADDQZ128rmbk
VPUNPCKHDQZ128rmbk
VPUNPCKLDQZ128rmbk
VPMULDQZ128rmbk
VPANDQZ128rmbk
VPUNPCKHQDQZ128rmbk
VPUNPCKLQDQZ128rmbk
VCVTTPD2UDQZ128rmbk
VCVTPD2UDQZ128rmbk
VCVTTPS2UDQZ128rmbk
VCVTPS2UDQZ128rmbk
VPMULUDQZ128rmbk
VPMULLQZ128rmbk
VPBLENDMQZ128rmbk
VPTESTNMQZ128rmbk
VPTESTMQZ128rmbk
VPANDNQZ128rmbk
VCVTTPD2QQZ128rmbk
VCVTPD2QQZ128rmbk
VCVTTPS2QQZ128rmbk
VCVTPS2QQZ128rmbk
VPCMPEQQZ128rmbk
VCVTTPD2UQQZ128rmbk
VCVTPD2UQQZ128rmbk
VCVTTPS2UQQZ128rmbk
VCVTPS2UQQZ128rmbk
VPORQZ128rmbk
VPXORQZ128rmbk
VPABSQZ128rmbk
VPMINSQZ128rmbk
VPMAXSQZ128rmbk
VPCONFLICTQZ128rmbk
VPCMPGTQZ128rmbk
VPOPCNTQZ128rmbk
VPLZCNTQZ128rmbk
VPMINUQZ128rmbk
VPMAXUQZ128rmbk
VPSRAVQZ128rmbk
VPSLLVQZ128rmbk
VPROLVQZ128rmbk
VPSRLVQZ128rmbk
VPRORVQZ128rmbk
VCVTPD2PSZ128rmbk
VCVTDQ2PSZ128rmbk
VCVTUDQ2PSZ128rmbk
VCVTQQ2PSZ128rmbk
VCVTUQQ2PSZ128rmbk
VSUBPSZ128rmbk
VMINCPSZ128rmbk
VMAXCPSZ128rmbk
VADDPSZ128rmbk
VANDPSZ128rmbk
VSCALEFPSZ128rmbk
VUNPCKHPSZ128rmbk
VPERMILPSZ128rmbk
VUNPCKLPSZ128rmbk
VMULPSZ128rmbk
VBLENDMPSZ128rmbk
VANDNPSZ128rmbk
VMINPSZ128rmbk
VORPSZ128rmbk
VXORPSZ128rmbk
VFPCLASSPSZ128rmbk
VDIVPSZ128rmbk
VMAXPSZ128rmbk
VPACKSSDWZ128rmbk
VPACKUSDWZ128rmbk
VPERMI2Drmbk
VPERMT2Drmbk
VPERMI2PDrmbk
VPERMT2PDrmbk
VPERMI2Qrmbk
VPERMT2Qrmbk
VPERMI2PSrmbk
VPERMT2PSrmbk
VCVTNE2PS2BF16Zrmbk
VCVTNEPS2BF16Zrmbk
VPMULTISHIFTQBZrmbk
VPSUBDZrmbk
VPADDDZrmbk
VPANDDZrmbk
VPMULLDZrmbk
VPBLENDMDZrmbk
VPTESTNMDZrmbk
VPERMDZrmbk
VPTESTMDZrmbk
VPANDNDZrmbk
VCVTDQ2PDZrmbk
VCVTUDQ2PDZrmbk
VCVTQQ2PDZrmbk
VCVTUQQ2PDZrmbk
VCVTPS2PDZrmbk
VSUBPDZrmbk
VMINCPDZrmbk
VMAXCPDZrmbk
VADDPDZrmbk
VANDPDZrmbk
VSCALEFPDZrmbk
VUNPCKHPDZrmbk
VPERMILPDZrmbk
VUNPCKLPDZrmbk
VMULPDZrmbk
VBLENDMPDZrmbk
VPERMPDZrmbk
VANDNPDZrmbk
VMINPDZrmbk
VORPDZrmbk
VXORPDZrmbk
VFPCLASSPDZrmbk
VDIVPDZrmbk
VMAXPDZrmbk
VPCMPEQDZrmbk
VPORDZrmbk
VPXORDZrmbk
VPABSDZrmbk
VPMINSDZrmbk
VPMAXSDZrmbk
VPCONFLICTDZrmbk
VPCMPGTDZrmbk
VPOPCNTDZrmbk
VPLZCNTDZrmbk
VPMINUDZrmbk
VPMAXUDZrmbk
VPSRAVDZrmbk
VPSLLVDZrmbk
VPROLVDZrmbk
VPSRLVDZrmbk
VPRORVDZrmbk
VPSUBQZrmbk
VCVTTPD2DQZrmbk
VCVTPD2DQZrmbk
VCVTTPS2DQZrmbk
VCVTPS2DQZrmbk
VPADDQZrmbk
VPUNPCKHDQZrmbk
VPUNPCKLDQZrmbk
VPMULDQZrmbk
VPANDQZrmbk
VPUNPCKHQDQZrmbk
VPUNPCKLQDQZrmbk
VCVTTPD2UDQZrmbk
VCVTPD2UDQZrmbk
VCVTTPS2UDQZrmbk
VCVTPS2UDQZrmbk
VPMULUDQZrmbk
VPMULLQZrmbk
VPBLENDMQZrmbk
VPTESTNMQZrmbk
VPERMQZrmbk
VPTESTMQZrmbk
VPANDNQZrmbk
VCVTTPD2QQZrmbk
VCVTPD2QQZrmbk
VCVTTPS2QQZrmbk
VCVTPS2QQZrmbk
VPCMPEQQZrmbk
VCVTTPD2UQQZrmbk
VCVTPD2UQQZrmbk
VCVTTPS2UQQZrmbk
VCVTPS2UQQZrmbk
VPORQZrmbk
VPXORQZrmbk
VPABSQZrmbk
VPMINSQZrmbk
VPMAXSQZrmbk
VPCONFLICTQZrmbk
VPCMPGTQZrmbk
VPOPCNTQZrmbk
VPLZCNTQZrmbk
VPMINUQZrmbk
VPMAXUQZrmbk
VPSRAVQZrmbk
VPSLLVQZrmbk
VPROLVQZrmbk
VPSRLVQZrmbk
VPRORVQZrmbk
VCVTPD2PSZrmbk
VCVTDQ2PSZrmbk
VCVTUDQ2PSZrmbk
VCVTQQ2PSZrmbk
VCVTUQQ2PSZrmbk
VSUBPSZrmbk
VMINCPSZrmbk
VMAXCPSZrmbk
VADDPSZrmbk
VANDPSZrmbk
VSCALEFPSZrmbk
VUNPCKHPSZrmbk
VPERMILPSZrmbk
VUNPCKLPSZrmbk
VMULPSZrmbk
VBLENDMPSZrmbk
VPERMPSZrmbk
VANDNPSZrmbk
VMINPSZrmbk
VORPSZrmbk
VXORPSZrmbk
VFPCLASSPSZrmbk
VDIVPSZrmbk
VMAXPSZrmbk
VPACKSSDWZrmbk
VPACKUSDWZrmbk
VFMADDSUB231PDZrbk
VFMSUB231PDZrbk
VFNMSUB231PDZrbk
VFMSUBADD231PDZrbk
VFMADD231PDZrbk
VFNMADD231PDZrbk
VFMADDSUB132PDZrbk
VFMSUB132PDZrbk
VFNMSUB132PDZrbk
VFMSUBADD132PDZrbk
VFMADD132PDZrbk
VFNMADD132PDZrbk
VEXP2PDZrbk
VFMADDSUB213PDZrbk
VFMSUB213PDZrbk
VFNMSUB213PDZrbk
VFMSUBADD213PDZrbk
VFMADD213PDZrbk
VFNMADD213PDZrbk
VRCP28PDZrbk
VRSQRT28PDZrbk
VGETEXPPDZrbk
VSQRTPDZrbk
VRCP28SDZrbk
VRSQRT28SDZrbk
VGETEXPSDZrbk
VFMADDSUB231PSZrbk
VFMSUB231PSZrbk
VFNMSUB231PSZrbk
VFMSUBADD231PSZrbk
VFMADD231PSZrbk
VFNMADD231PSZrbk
VFMADDSUB132PSZrbk
VFMSUB132PSZrbk
VFNMSUB132PSZrbk
VFMSUBADD132PSZrbk
VFMADD132PSZrbk
VFNMADD132PSZrbk
VEXP2PSZrbk
VFMADDSUB213PSZrbk
VFMSUB213PSZrbk
VFNMSUB213PSZrbk
VFMSUBADD213PSZrbk
VFMADD213PSZrbk
VFNMADD213PSZrbk
VRCP28PSZrbk
VRSQRT28PSZrbk
VGETEXPPSZrbk
VSQRTPSZrbk
VRCP28SSZrbk
VRSQRT28SSZrbk
VGETEXPSSZrbk
VCVTQQ2PDZrrbk
VCVTUQQ2PDZrrbk
VCVTPS2PDZrrbk
VSUBPDZrrbk
VADDPDZrrbk
VSCALEFPDZrrbk
VMULPDZrrbk
VMINPDZrrbk
VDIVPDZrrbk
VMAXPDZrrbk
VCVTPS2PHZrrbk
VCVTTPD2DQZrrbk
VCVTPD2DQZrrbk
VCVTTPS2DQZrrbk
VCVTPS2DQZrrbk
VCVTTPD2UDQZrrbk
VCVTPD2UDQZrrbk
VCVTTPS2UDQZrrbk
VCVTPS2UDQZrrbk
VCVTTPD2QQZrrbk
VCVTPD2QQZrrbk
VCVTTPS2QQZrrbk
VCVTPS2QQZrrbk
VCVTTPD2UQQZrrbk
VCVTPD2UQQZrrbk
VCVTTPS2UQQZrrbk
VCVTPS2UQQZrrbk
VCVTPD2PSZrrbk
VCVTPH2PSZrrbk
VCVTDQ2PSZrrbk
VCVTUDQ2PSZrrbk
VCVTQQ2PSZrrbk
VCVTUQQ2PSZrrbk
VSUBPSZrrbk
VADDPSZrrbk
VSCALEFPSZrrbk
VMULPSZrrbk
VMINPSZrrbk
VDIVPSZrrbk
VMAXPSZrrbk
VPSRADZ256mbik
VPSHUFDZ256mbik
VPSLLDZ256mbik
VPROLDZ256mbik
VPSRLDZ256mbik
VPERMILPDZ256mbik
VPERMPDZ256mbik
VPRORDZ256mbik
VPSRAQZ256mbik
VPSLLQZ256mbik
VPROLQZ256mbik
VPSRLQZ256mbik
VPERMQZ256mbik
VPRORQZ256mbik
VPERMILPSZ256mbik
VPSRADZ128mbik
VPSHUFDZ128mbik
VPSLLDZ128mbik
VPROLDZ128mbik
VPSRLDZ128mbik
VPERMILPDZ128mbik
VPRORDZ128mbik
VPSRAQZ128mbik
VPSLLQZ128mbik
VPROLQZ128mbik
VPSRLQZ128mbik
VPRORQZ128mbik
VPERMILPSZ128mbik
VPSRADZmbik
VPSHUFDZmbik
VPSLLDZmbik
VPROLDZmbik
VPSRLDZmbik
VPERMILPDZmbik
VPERMPDZmbik
VPRORDZmbik
VPSRAQZmbik
VPSLLQZmbik
VPROLQZmbik
VPSRLQZmbik
VPERMQZmbik
VPRORQZmbik
VPERMILPSZmbik
VSHUFF64X2Z256rmbik
VSHUFI64X2Z256rmbik
VSHUFF32X4Z256rmbik
VSHUFI32X4Z256rmbik
VGF2P8AFFINEQBZ256rmbik
VGF2P8AFFINEINVQBZ256rmbik
VPSHLDDZ256rmbik
VPSHRDDZ256rmbik
VPTERNLOGDZ256rmbik
VALIGNDZ256rmbik
VREDUCEPDZ256rmbik
VRANGEPDZ256rmbik
VRNDSCALEPDZ256rmbik
VSHUFPDZ256rmbik
VFIXUPIMMPDZ256rmbik
VCMPPDZ256rmbik
VGETMANTPDZ256rmbik
VPSHLDQZ256rmbik
VPSHRDQZ256rmbik
VPTERNLOGQZ256rmbik
VALIGNQZ256rmbik
VREDUCEPSZ256rmbik
VRANGEPSZ256rmbik
VRNDSCALEPSZ256rmbik
VSHUFPSZ256rmbik
VFIXUPIMMPSZ256rmbik
VCMPPSZ256rmbik
VGETMANTPSZ256rmbik
VGF2P8AFFINEQBZ128rmbik
VGF2P8AFFINEINVQBZ128rmbik
VPSHLDDZ128rmbik
VPSHRDDZ128rmbik
VPTERNLOGDZ128rmbik
VALIGNDZ128rmbik
VREDUCEPDZ128rmbik
VRANGEPDZ128rmbik
VRNDSCALEPDZ128rmbik
VSHUFPDZ128rmbik
VFIXUPIMMPDZ128rmbik
VCMPPDZ128rmbik
VGETMANTPDZ128rmbik
VPSHLDQZ128rmbik
VPSHRDQZ128rmbik
VPTERNLOGQZ128rmbik
VALIGNQZ128rmbik
VREDUCEPSZ128rmbik
VRANGEPSZ128rmbik
VRNDSCALEPSZ128rmbik
VSHUFPSZ128rmbik
VFIXUPIMMPSZ128rmbik
VCMPPSZ128rmbik
VGETMANTPSZ128rmbik
VSHUFF64X2Zrmbik
VSHUFI64X2Zrmbik
VSHUFF32X4Zrmbik
VSHUFI32X4Zrmbik
VGF2P8AFFINEQBZrmbik
VGF2P8AFFINEINVQBZrmbik
VPSHLDDZrmbik
VPSHRDDZrmbik
VPTERNLOGDZrmbik
VALIGNDZrmbik
VREDUCEPDZrmbik
VRANGEPDZrmbik
VRNDSCALEPDZrmbik
VSHUFPDZrmbik
VFIXUPIMMPDZrmbik
VCMPPDZrmbik
VGETMANTPDZrmbik
VPSHLDQZrmbik
VPSHRDQZrmbik
VPTERNLOGQZrmbik
VALIGNQZrmbik
VREDUCEPSZrmbik
VRANGEPSZrmbik
VRNDSCALEPSZrmbik
VSHUFPSZrmbik
VFIXUPIMMPSZrmbik
VCMPPSZrmbik
VGETMANTPSZrmbik
VPSRADZ256mik
VPSHUFDZ256mik
VPSLLDZ256mik
VPROLDZ256mik
VPSRLDZ256mik
VPERMILPDZ256mik
VPERMPDZ256mik
VPRORDZ256mik
VPSRAQZ256mik
VPSLLQZ256mik
VPROLQZ256mik
VPSRLQZ256mik
VPERMQZ256mik
VPRORQZ256mik
VPERMILPSZ256mik
VPSRAWZ256mik
VPSHUFHWZ256mik
VPSHUFLWZ256mik
VPSLLWZ256mik
VPSRLWZ256mik
VPSRADZ128mik
VPSHUFDZ128mik
VPSLLDZ128mik
VPROLDZ128mik
VPSRLDZ128mik
VPERMILPDZ128mik
VPRORDZ128mik
VPSRAQZ128mik
VPSLLQZ128mik
VPROLQZ128mik
VPSRLQZ128mik
VPRORQZ128mik
VPERMILPSZ128mik
VPSRAWZ128mik
VPSHUFHWZ128mik
VPSHUFLWZ128mik
VPSLLWZ128mik
VPSRLWZ128mik
VPSRADZmik
VPSHUFDZmik
VPSLLDZmik
VPROLDZmik
VPSRLDZmik
VPERMILPDZmik
VPERMPDZmik
VPRORDZmik
VPSRAQZmik
VPSLLQZmik
VPROLQZmik
VPSRLQZmik
VPERMQZmik
VPRORQZmik
VPERMILPSZmik
VPSRAWZmik
VPSHUFHWZmik
VPSHUFLWZmik
VPSLLWZmik
VPSRLWZmik
VSHUFF64X2Z256rmik
VSHUFI64X2Z256rmik
VSHUFF32X4Z256rmik
VSHUFI32X4Z256rmik
VPCMPBZ256rmik
VGF2P8AFFINEQBZ256rmik
VGF2P8AFFINEINVQBZ256rmik
VPCMPUBZ256rmik
VPSHLDDZ256rmik
VPSHRDDZ256rmik
VPTERNLOGDZ256rmik
VALIGNDZ256rmik
VREDUCEPDZ256rmik
VRANGEPDZ256rmik
VRNDSCALEPDZ256rmik
VSHUFPDZ256rmik
VPCMPDZ256rmik
VFIXUPIMMPDZ256rmik
VCMPPDZ256rmik
VGETMANTPDZ256rmik
VPCMPUDZ256rmik
VPSHLDQZ256rmik
VPSHRDQZ256rmik
VPTERNLOGQZ256rmik
VALIGNQZ256rmik
VPCMPQZ256rmik
VPCMPUQZ256rmik
VPALIGNRZ256rmik
VREDUCEPSZ256rmik
VRANGEPSZ256rmik
VRNDSCALEPSZ256rmik
VSHUFPSZ256rmik
VFIXUPIMMPSZ256rmik
VCMPPSZ256rmik
VGETMANTPSZ256rmik
VDBPSADBWZ256rmik
VPSHLDWZ256rmik
VPSHRDWZ256rmik
VPCMPWZ256rmik
VPCMPUWZ256rmik
VPCMPBZ128rmik
VGF2P8AFFINEQBZ128rmik
VGF2P8AFFINEINVQBZ128rmik
VPCMPUBZ128rmik
VPSHLDDZ128rmik
VPSHRDDZ128rmik
VPTERNLOGDZ128rmik
VALIGNDZ128rmik
VREDUCEPDZ128rmik
VRANGEPDZ128rmik
VRNDSCALEPDZ128rmik
VSHUFPDZ128rmik
VPCMPDZ128rmik
VFIXUPIMMPDZ128rmik
VCMPPDZ128rmik
VGETMANTPDZ128rmik
VPCMPUDZ128rmik
VPSHLDQZ128rmik
VPSHRDQZ128rmik
VPTERNLOGQZ128rmik
VALIGNQZ128rmik
VPCMPQZ128rmik
VPCMPUQZ128rmik
VPALIGNRZ128rmik
VREDUCEPSZ128rmik
VRANGEPSZ128rmik
VRNDSCALEPSZ128rmik
VSHUFPSZ128rmik
VFIXUPIMMPSZ128rmik
VCMPPSZ128rmik
VGETMANTPSZ128rmik
VDBPSADBWZ128rmik
VPSHLDWZ128rmik
VPSHRDWZ128rmik
VPCMPWZ128rmik
VPCMPUWZ128rmik
VSHUFF64X2Zrmik
VSHUFI64X2Zrmik
VSHUFF32X4Zrmik
VSHUFI32X4Zrmik
VPCMPBZrmik
VGF2P8AFFINEQBZrmik
VGF2P8AFFINEINVQBZrmik
VPCMPUBZrmik
VPSHLDDZrmik
VPSHRDDZrmik
VPTERNLOGDZrmik
VALIGNDZrmik
VREDUCEPDZrmik
VRANGEPDZrmik
VRNDSCALEPDZrmik
VSHUFPDZrmik
VPCMPDZrmik
VFIXUPIMMPDZrmik
VCMPPDZrmik
VGETMANTPDZrmik
VREDUCESDZrmik
VRANGESDZrmik
VFIXUPIMMSDZrmik
VGETMANTSDZrmik
VPCMPUDZrmik
VPSHLDQZrmik
VPSHRDQZrmik
VPTERNLOGQZrmik
VALIGNQZrmik
VPCMPQZrmik
VPCMPUQZrmik
VPALIGNRZrmik
VREDUCEPSZrmik
VRANGEPSZrmik
VRNDSCALEPSZrmik
VSHUFPSZrmik
VFIXUPIMMPSZrmik
VCMPPSZrmik
VGETMANTPSZrmik
VREDUCESSZrmik
VRANGESSZrmik
VFIXUPIMMSSZrmik
VGETMANTSSZrmik
VDBPSADBWZrmik
VPSHLDWZrmik
VPSHRDWZrmik
VPCMPWZrmik
VPCMPUWZrmik
VPSRADZ256rik
VPSHUFDZ256rik
VPSLLDZ256rik
VPROLDZ256rik
VPSRLDZ256rik
VPERMILPDZ256rik
VPERMPDZ256rik
VPRORDZ256rik
VPSRAQZ256rik
VPSLLQZ256rik
VPROLQZ256rik
VPSRLQZ256rik
VPERMQZ256rik
VPRORQZ256rik
VPERMILPSZ256rik
VPSRAWZ256rik
VPSHUFHWZ256rik
VPSHUFLWZ256rik
VPSLLWZ256rik
VPSRLWZ256rik
VPSRADZ128rik
VPSHUFDZ128rik
VPSLLDZ128rik
VPROLDZ128rik
VPSRLDZ128rik
VPERMILPDZ128rik
VPRORDZ128rik
VPSRAQZ128rik
VPSLLQZ128rik
VPROLQZ128rik
VPSRLQZ128rik
VPRORQZ128rik
VPERMILPSZ128rik
VPSRAWZ128rik
VPSHUFHWZ128rik
VPSHUFLWZ128rik
VPSLLWZ128rik
VPSRLWZ128rik
VPSRADZrik
VPSHUFDZrik
VPSLLDZrik
VPROLDZrik
VPSRLDZrik
VPERMILPDZrik
VPERMPDZrik
VPRORDZrik
VPSRAQZrik
VPSLLQZrik
VPROLQZrik
VPSRLQZrik
VPERMQZrik
VPRORQZrik
VPERMILPSZrik
VPSRAWZrik
VPSHUFHWZrik
VPSHUFLWZrik
VPSLLWZrik
VPSRLWZrik
VSHUFF64X2Z256rrik
VSHUFI64X2Z256rrik
VSHUFF32X4Z256rrik
VSHUFI32X4Z256rrik
VPCMPBZ256rrik
VGF2P8AFFINEQBZ256rrik
VGF2P8AFFINEINVQBZ256rrik
VPCMPUBZ256rrik
VPSHLDDZ256rrik
VPSHRDDZ256rrik
VPTERNLOGDZ256rrik
VALIGNDZ256rrik
VREDUCEPDZ256rrik
VRANGEPDZ256rrik
VRNDSCALEPDZ256rrik
VSHUFPDZ256rrik
VPCMPDZ256rrik
VFIXUPIMMPDZ256rrik
VCMPPDZ256rrik
VGETMANTPDZ256rrik
VPCMPUDZ256rrik
VPSHLDQZ256rrik
VPSHRDQZ256rrik
VPTERNLOGQZ256rrik
VALIGNQZ256rrik
VPCMPQZ256rrik
VPCMPUQZ256rrik
VPALIGNRZ256rrik
VREDUCEPSZ256rrik
VRANGEPSZ256rrik
VRNDSCALEPSZ256rrik
VSHUFPSZ256rrik
VFIXUPIMMPSZ256rrik
VCMPPSZ256rrik
VGETMANTPSZ256rrik
VDBPSADBWZ256rrik
VPSHLDWZ256rrik
VPSHRDWZ256rrik
VPCMPWZ256rrik
VPCMPUWZ256rrik
VPCMPBZ128rrik
VGF2P8AFFINEQBZ128rrik
VGF2P8AFFINEINVQBZ128rrik
VPCMPUBZ128rrik
VPSHLDDZ128rrik
VPSHRDDZ128rrik
VPTERNLOGDZ128rrik
VALIGNDZ128rrik
VREDUCEPDZ128rrik
VRANGEPDZ128rrik
VRNDSCALEPDZ128rrik
VSHUFPDZ128rrik
VPCMPDZ128rrik
VFIXUPIMMPDZ128rrik
VCMPPDZ128rrik
VGETMANTPDZ128rrik
VPCMPUDZ128rrik
VPSHLDQZ128rrik
VPSHRDQZ128rrik
VPTERNLOGQZ128rrik
VALIGNQZ128rrik
VPCMPQZ128rrik
VPCMPUQZ128rrik
VPALIGNRZ128rrik
VREDUCEPSZ128rrik
VRANGEPSZ128rrik
VRNDSCALEPSZ128rrik
VSHUFPSZ128rrik
VFIXUPIMMPSZ128rrik
VCMPPSZ128rrik
VGETMANTPSZ128rrik
VDBPSADBWZ128rrik
VPSHLDWZ128rrik
VPSHRDWZ128rrik
VPCMPWZ128rrik
VPCMPUWZ128rrik
VSHUFF64X2Zrrik
VSHUFI64X2Zrrik
VSHUFF32X4Zrrik
VSHUFI32X4Zrrik
VPCMPBZrrik
VGF2P8AFFINEQBZrrik
VGF2P8AFFINEINVQBZrrik
VPCMPUBZrrik
VPSHLDDZrrik
VPSHRDDZrrik
VPTERNLOGDZrrik
VALIGNDZrrik
VREDUCEPDZrrik
VRANGEPDZrrik
VRNDSCALEPDZrrik
VSHUFPDZrrik
VPCMPDZrrik
VFIXUPIMMPDZrrik
VCMPPDZrrik
VGETMANTPDZrrik
VREDUCESDZrrik
VRANGESDZrrik
VFIXUPIMMSDZrrik
VGETMANTSDZrrik
VPCMPUDZrrik
VPSHLDQZrrik
VPSHRDQZrrik
VPTERNLOGQZrrik
VALIGNQZrrik
VPCMPQZrrik
VPCMPUQZrrik
VPALIGNRZrrik
VREDUCEPSZrrik
VRANGEPSZrrik
VRNDSCALEPSZrrik
VSHUFPSZrrik
VFIXUPIMMPSZrrik
VCMPPSZrrik
VGETMANTPSZrrik
VREDUCESSZrrik
VRANGESSZrrik
VFIXUPIMMSSZrrik
VGETMANTSSZrrik
VDBPSADBWZrrik
VPSHLDWZrrik
VPSHRDWZrrik
VPCMPWZrrik
VPCMPUWZrrik
KMOVBkk
KMOVDkk
KMOVQkk
KMOVWkk
VFMADDSUB231PDZ256mk
VFMSUB231PDZ256mk
VFNMSUB231PDZ256mk
VFMSUBADD231PDZ256mk
VFMADD231PDZ256mk
VFNMADD231PDZ256mk
VFMADDSUB132PDZ256mk
VFMSUB132PDZ256mk
VFNMSUB132PDZ256mk
VFMSUBADD132PDZ256mk
VFMADD132PDZ256mk
VFNMADD132PDZ256mk
VFMADDSUB213PDZ256mk
VFMSUB213PDZ256mk
VFNMSUB213PDZ256mk
VFMSUBADD213PDZ256mk
VFMADD213PDZ256mk
VFNMADD213PDZ256mk
VRCP14PDZ256mk
VRSQRT14PDZ256mk
VGETEXPPDZ256mk
VSQRTPDZ256mk
VPDPWSSDZ256mk
VPDPBUSDZ256mk
VPSHLDVDZ256mk
VPSHRDVDZ256mk
VPMADD52HUQZ256mk
VPMADD52LUQZ256mk
VPSHLDVQZ256mk
VPSHRDVQZ256mk
VPDPWSSDSZ256mk
VPDPBUSDSZ256mk
VFMADDSUB231PSZ256mk
VFMSUB231PSZ256mk
VFNMSUB231PSZ256mk
VFMSUBADD231PSZ256mk
VFMADD231PSZ256mk
VFNMADD231PSZ256mk
VFMADDSUB132PSZ256mk
VFMSUB132PSZ256mk
VFNMSUB132PSZ256mk
VFMSUBADD132PSZ256mk
VFMADD132PSZ256mk
VFNMADD132PSZ256mk
VFMADDSUB213PSZ256mk
VFMSUB213PSZ256mk
VFNMSUB213PSZ256mk
VFMSUBADD213PSZ256mk
VFMADD213PSZ256mk
VFNMADD213PSZ256mk
VRCP14PSZ256mk
VRSQRT14PSZ256mk
VDPBF16PSZ256mk
VGETEXPPSZ256mk
VSQRTPSZ256mk
VPSHLDVWZ256mk
VPSHRDVWZ256mk
VFMADDSUB231PDZ128mk
VFMSUB231PDZ128mk
VFNMSUB231PDZ128mk
VFMSUBADD231PDZ128mk
VFMADD231PDZ128mk
VFNMADD231PDZ128mk
VFMADDSUB132PDZ128mk
VFMSUB132PDZ128mk
VFNMSUB132PDZ128mk
VFMSUBADD132PDZ128mk
VFMADD132PDZ128mk
VFNMADD132PDZ128mk
VFMADDSUB213PDZ128mk
VFMSUB213PDZ128mk
VFNMSUB213PDZ128mk
VFMSUBADD213PDZ128mk
VFMADD213PDZ128mk
VFNMADD213PDZ128mk
VRCP14PDZ128mk
VRSQRT14PDZ128mk
VGETEXPPDZ128mk
VSQRTPDZ128mk
VPDPWSSDZ128mk
VPDPBUSDZ128mk
VPSHLDVDZ128mk
VPSHRDVDZ128mk
VPMADD52HUQZ128mk
VPMADD52LUQZ128mk
VPSHLDVQZ128mk
VPSHRDVQZ128mk
VPDPWSSDSZ128mk
VPDPBUSDSZ128mk
VFMADDSUB231PSZ128mk
VFMSUB231PSZ128mk
VFNMSUB231PSZ128mk
VFMSUBADD231PSZ128mk
VFMADD231PSZ128mk
VFNMADD231PSZ128mk
VFMADDSUB132PSZ128mk
VFMSUB132PSZ128mk
VFNMSUB132PSZ128mk
VFMSUBADD132PSZ128mk
VFMADD132PSZ128mk
VFNMADD132PSZ128mk
VFMADDSUB213PSZ128mk
VFMSUB213PSZ128mk
VFNMSUB213PSZ128mk
VFMSUBADD213PSZ128mk
VFMADD213PSZ128mk
VFNMADD213PSZ128mk
VRCP14PSZ128mk
VRSQRT14PSZ128mk
VDPBF16PSZ128mk
VGETEXPPSZ128mk
VSQRTPSZ128mk
VPSHLDVWZ128mk
VPSHRDVWZ128mk
KMOVBmk
KMOVDmk
KMOVQmk
KMOVWmk
VFMADDSUB231PDZmk
VFMSUB231PDZmk
VFNMSUB231PDZmk
VFMSUBADD231PDZmk
VFMADD231PDZmk
VFNMADD231PDZmk
VFMADDSUB132PDZmk
VFMSUB132PDZmk
VFNMSUB132PDZmk
VFMSUBADD132PDZmk
VFMADD132PDZmk
VFNMADD132PDZmk
VEXP2PDZmk
VFMADDSUB213PDZmk
VFMSUB213PDZmk
VFNMSUB213PDZmk
VFMSUBADD213PDZmk
VFMADD213PDZmk
VFNMADD213PDZmk
VRCP14PDZmk
VRSQRT14PDZmk
VRCP28PDZmk
VRSQRT28PDZmk
VGETEXPPDZmk
VSQRTPDZmk
VRCP28SDZmk
VRSQRT28SDZmk
VGETEXPSDZmk
VPDPWSSDZmk
VPDPBUSDZmk
VPSHLDVDZmk
VPSHRDVDZmk
VPMADD52HUQZmk
VPMADD52LUQZmk
VPSHLDVQZmk
VPSHRDVQZmk
VPDPWSSDSZmk
VPDPBUSDSZmk
VFMADDSUB231PSZmk
VFMSUB231PSZmk
VFNMSUB231PSZmk
VFMSUBADD231PSZmk
VFMADD231PSZmk
VFNMADD231PSZmk
VFMADDSUB132PSZmk
VFMSUB132PSZmk
VFNMSUB132PSZmk
VFMSUBADD132PSZmk
VFMADD132PSZmk
VFNMADD132PSZmk
VEXP2PSZmk
VFMADDSUB213PSZmk
VFMSUB213PSZmk
VFNMSUB213PSZmk
VFMSUBADD213PSZmk
VFMADD213PSZmk
VFNMADD213PSZmk
VRCP14PSZmk
VRSQRT14PSZmk
VDPBF16PSZmk
VRCP28PSZmk
VRSQRT28PSZmk
VGETEXPPSZmk
VSQRTPSZmk
VRCP28SSZmk
VRSQRT28SSZmk
VGETEXPSSZmk
VPSHLDVWZmk
VPSHRDVWZmk
VBROADCASTF64X2rmk
VBROADCASTI64X2rmk
VBROADCASTF32X4rmk
VBROADCASTI32X4rmk
VBROADCASTF64X4rmk
VBROADCASTI64X4rmk
VPERMI2B256rmk
VPERMT2B256rmk
VPERMI2D256rmk
VPERMT2D256rmk
VPERMI2PD256rmk
VPERMT2PD256rmk
VPERMI2Q256rmk
VPERMT2Q256rmk
VPERMI2PS256rmk
VPERMT2PS256rmk
VPERMI2W256rmk
VPERMT2W256rmk
VMOVDQA32Z256rmk
VMOVDQU32Z256rmk
VBROADCASTF32X2Z256rmk
VBROADCASTI32X2Z256rmk
VINSERTF64x2Z256rmk
VINSERTI64x2Z256rmk
VMOVDQA64Z256rmk
VMOVDQU64Z256rmk
VBROADCASTF32X4Z256rmk
VBROADCASTI32X4Z256rmk
VINSERTF32x4Z256rmk
VINSERTI32x4Z256rmk
VCVTNE2PS2BF16Z256rmk
VCVTNEPS2BF16Z256rmk
VMOVDQU16Z256rmk
VMOVDQU8Z256rmk
VPSUBBZ256rmk
VPADDBZ256rmk
VPEXPANDBZ256rmk
VPSHUFBZ256rmk
VPAVGBZ256rmk
VGF2P8MULBZ256rmk
VPBLENDMBZ256rmk
VPTESTNMBZ256rmk
VPSHUFBITQMBZ256rmk
VPERMBZ256rmk
VPTESTMBZ256rmk
VPCMPEQBZ256rmk
VPMULTISHIFTQBZ256rmk
VPABSBZ256rmk
VPSUBSBZ256rmk
VPADDSBZ256rmk
VPMINSBZ256rmk
VPSUBUSBZ256rmk
VPADDUSBZ256rmk
VPMAXSBZ256rmk
VPCMPGTBZ256rmk
VPOPCNTBZ256rmk
VPBROADCASTBZ256rmk
VPMINUBZ256rmk
VPMAXUBZ256rmk
VPACKSSWBZ256rmk
VPACKUSWBZ256rmk
VPSRADZ256rmk
VPSUBDZ256rmk
VPMOVSXBDZ256rmk
VPMOVZXBDZ256rmk
VPADDDZ256rmk
VPANDDZ256rmk
VPEXPANDDZ256rmk
VPSLLDZ256rmk
VPMULLDZ256rmk
VPSRLDZ256rmk
VPBLENDMDZ256rmk
VPTESTNMDZ256rmk
VPERMDZ256rmk
VPTESTMDZ256rmk
VPANDNDZ256rmk
VCVTDQ2PDZ256rmk
VCVTUDQ2PDZ256rmk
VCVTQQ2PDZ256rmk
VCVTUQQ2PDZ256rmk
VCVTPS2PDZ256rmk
VMOVAPDZ256rmk
VSUBPDZ256rmk
VMINCPDZ256rmk
VMAXCPDZ256rmk
VADDPDZ256rmk
VEXPANDPDZ256rmk
VANDPDZ256rmk
VSCALEFPDZ256rmk
VUNPCKHPDZ256rmk
VPERMILPDZ256rmk
VUNPCKLPDZ256rmk
VMULPDZ256rmk
VBLENDMPDZ256rmk
VPERMPDZ256rmk
VANDNPDZ256rmk
VMINPDZ256rmk
VORPDZ256rmk
VXORPDZ256rmk
VFPCLASSPDZ256rmk
VMOVUPDZ256rmk
VDIVPDZ256rmk
VMAXPDZ256rmk
VPCMPEQDZ256rmk
VPORDZ256rmk
VPXORDZ256rmk
VPABSDZ256rmk
VPMINSDZ256rmk
VBROADCASTSDZ256rmk
VPMAXSDZ256rmk
VPCONFLICTDZ256rmk
VPCMPGTDZ256rmk
VPOPCNTDZ256rmk
VPLZCNTDZ256rmk
VPBROADCASTDZ256rmk
VPMINUDZ256rmk
VPMAXUDZ256rmk
VPSRAVDZ256rmk
VPSLLVDZ256rmk
VPROLVDZ256rmk
VPSRLVDZ256rmk
VPRORVDZ256rmk
VPMADDWDZ256rmk
VPUNPCKHWDZ256rmk
VPUNPCKLWDZ256rmk
VPMOVSXWDZ256rmk
VPMOVZXWDZ256rmk
VMOVDDUPZ256rmk
VMOVSHDUPZ256rmk
VMOVSLDUPZ256rmk
VPSRAQZ256rmk
VPSUBQZ256rmk
VPMOVSXBQZ256rmk
VPMOVZXBQZ256rmk
VCVTTPD2DQZ256rmk
VCVTPD2DQZ256rmk
VCVTTPS2DQZ256rmk
VCVTPS2DQZ256rmk
VPADDQZ256rmk
VPUNPCKHDQZ256rmk
VPUNPCKLDQZ256rmk
VPMULDQZ256rmk
VPANDQZ256rmk
VPEXPANDQZ256rmk
VPUNPCKHQDQZ256rmk
VPUNPCKLQDQZ256rmk
VCVTTPD2UDQZ256rmk
VCVTPD2UDQZ256rmk
VCVTTPS2UDQZ256rmk
VCVTPS2UDQZ256rmk
VPMULUDQZ256rmk
VPMOVSXDQZ256rmk
VPMOVZXDQZ256rmk
VPSLLQZ256rmk
VPMULLQZ256rmk
VPSRLQZ256rmk
VPBLENDMQZ256rmk
VPTESTNMQZ256rmk
VPERMQZ256rmk
VPTESTMQZ256rmk
VPANDNQZ256rmk
VCVTTPD2QQZ256rmk
VCVTPD2QQZ256rmk
VCVTTPS2QQZ256rmk
VCVTPS2QQZ256rmk
VPCMPEQQZ256rmk
VCVTTPD2UQQZ256rmk
VCVTPD2UQQZ256rmk
VCVTTPS2UQQZ256rmk
VCVTPS2UQQZ256rmk
VPORQZ256rmk
VPXORQZ256rmk
VPABSQZ256rmk
VPMINSQZ256rmk
VPMAXSQZ256rmk
VPCONFLICTQZ256rmk
VPCMPGTQZ256rmk
VPOPCNTQZ256rmk
VPLZCNTQZ256rmk
VPBROADCASTQZ256rmk
VPMINUQZ256rmk
VPMAXUQZ256rmk
VPSRAVQZ256rmk
VPSLLVQZ256rmk
VPROLVQZ256rmk
VPSRLVQZ256rmk
VPRORVQZ256rmk
VPMOVSXWQZ256rmk
VPMOVZXWQZ256rmk
VCVTPD2PSZ256rmk
VCVTPH2PSZ256rmk
VCVTDQ2PSZ256rmk
VCVTUDQ2PSZ256rmk
VCVTQQ2PSZ256rmk
VCVTUQQ2PSZ256rmk
VMOVAPSZ256rmk
VSUBPSZ256rmk
VMINCPSZ256rmk
VMAXCPSZ256rmk
VADDPSZ256rmk
VEXPANDPSZ256rmk
VANDPSZ256rmk
VSCALEFPSZ256rmk
VUNPCKHPSZ256rmk
VPERMILPSZ256rmk
VUNPCKLPSZ256rmk
VMULPSZ256rmk
VBLENDMPSZ256rmk
VPERMPSZ256rmk
VANDNPSZ256rmk
VMINPSZ256rmk
VORPSZ256rmk
VXORPSZ256rmk
VFPCLASSPSZ256rmk
VMOVUPSZ256rmk
VDIVPSZ256rmk
VMAXPSZ256rmk
VBROADCASTSSZ256rmk
VPSRAWZ256rmk
VPUNPCKHBWZ256rmk
VPUNPCKLBWZ256rmk
VPSUBWZ256rmk
VPMOVSXBWZ256rmk
VPMOVZXBWZ256rmk
VPADDWZ256rmk
VPEXPANDWZ256rmk
VPACKSSDWZ256rmk
VPACKUSDWZ256rmk
VPAVGWZ256rmk
VPMULHWZ256rmk
VPSLLWZ256rmk
VPMULLWZ256rmk
VPSRLWZ256rmk
VPBLENDMWZ256rmk
VPTESTNMWZ256rmk
VPERMWZ256rmk
VPTESTMWZ256rmk
VPCMPEQWZ256rmk
VPABSWZ256rmk
VPMADDUBSWZ256rmk
VPSUBSWZ256rmk
VPADDSWZ256rmk
VPMINSWZ256rmk
VPMULHRSWZ256rmk
VPSUBUSWZ256rmk
VPADDUSWZ256rmk
VPMAXSWZ256rmk
VPCMPGTWZ256rmk
VPOPCNTWZ256rmk
VPBROADCASTWZ256rmk
VPMULHUWZ256rmk
VPMINUWZ256rmk
VPMAXUWZ256rmk
VPSRAVWZ256rmk
VPSLLVWZ256rmk
VPSRLVWZ256rmk
VPERMI2B128rmk
VPERMT2B128rmk
VPERMI2D128rmk
VPERMT2D128rmk
VPERMI2PD128rmk
VPERMT2PD128rmk
VPERMI2Q128rmk
VPERMT2Q128rmk
VPERMI2PS128rmk
VPERMT2PS128rmk
VPERMI2W128rmk
VPERMT2W128rmk
VMOVDQA32Z128rmk
VMOVDQU32Z128rmk
VBROADCASTI32X2Z128rmk
VBROADCASTF64X2Z128rmk
VBROADCASTI64X2Z128rmk
VMOVDQA64Z128rmk
VMOVDQU64Z128rmk
VCVTNE2PS2BF16Z128rmk
VCVTNEPS2BF16Z128rmk
VMOVDQU16Z128rmk
VMOVDQU8Z128rmk
VPSUBBZ128rmk
VPADDBZ128rmk
VPEXPANDBZ128rmk
VPSHUFBZ128rmk
VPAVGBZ128rmk
VGF2P8MULBZ128rmk
VPBLENDMBZ128rmk
VPTESTNMBZ128rmk
VPSHUFBITQMBZ128rmk
VPERMBZ128rmk
VPTESTMBZ128rmk
VPCMPEQBZ128rmk
VPMULTISHIFTQBZ128rmk
VPABSBZ128rmk
VPSUBSBZ128rmk
VPADDSBZ128rmk
VPMINSBZ128rmk
VPSUBUSBZ128rmk
VPADDUSBZ128rmk
VPMAXSBZ128rmk
VPCMPGTBZ128rmk
VPOPCNTBZ128rmk
VPBROADCASTBZ128rmk
VPMINUBZ128rmk
VPMAXUBZ128rmk
VPACKSSWBZ128rmk
VPACKUSWBZ128rmk
VPSRADZ128rmk
VPSUBDZ128rmk
VPMOVSXBDZ128rmk
VPMOVZXBDZ128rmk
VPADDDZ128rmk
VPANDDZ128rmk
VPEXPANDDZ128rmk
VPSLLDZ128rmk
VPMULLDZ128rmk
VPSRLDZ128rmk
VPBLENDMDZ128rmk
VPTESTNMDZ128rmk
VPTESTMDZ128rmk
VPANDNDZ128rmk
VCVTDQ2PDZ128rmk
VCVTUDQ2PDZ128rmk
VCVTQQ2PDZ128rmk
VCVTUQQ2PDZ128rmk
VCVTPS2PDZ128rmk
VMOVAPDZ128rmk
VSUBPDZ128rmk
VMINCPDZ128rmk
VMAXCPDZ128rmk
VADDPDZ128rmk
VEXPANDPDZ128rmk
VANDPDZ128rmk
VSCALEFPDZ128rmk
VUNPCKHPDZ128rmk
VPERMILPDZ128rmk
VUNPCKLPDZ128rmk
VMULPDZ128rmk
VBLENDMPDZ128rmk
VANDNPDZ128rmk
VMINPDZ128rmk
VORPDZ128rmk
VXORPDZ128rmk
VFPCLASSPDZ128rmk
VMOVUPDZ128rmk
VDIVPDZ128rmk
VMAXPDZ128rmk
VPCMPEQDZ128rmk
VPORDZ128rmk
VPXORDZ128rmk
VPABSDZ128rmk
VPMINSDZ128rmk
VPMAXSDZ128rmk
VPCONFLICTDZ128rmk
VPCMPGTDZ128rmk
VPOPCNTDZ128rmk
VPLZCNTDZ128rmk
VPBROADCASTDZ128rmk
VPMINUDZ128rmk
VPMAXUDZ128rmk
VPSRAVDZ128rmk
VPSLLVDZ128rmk
VPROLVDZ128rmk
VPSRLVDZ128rmk
VPRORVDZ128rmk
VPMADDWDZ128rmk
VPUNPCKHWDZ128rmk
VPUNPCKLWDZ128rmk
VPMOVSXWDZ128rmk
VPMOVZXWDZ128rmk
VMOVDDUPZ128rmk
VMOVSHDUPZ128rmk
VMOVSLDUPZ128rmk
VPSRAQZ128rmk
VPSUBQZ128rmk
VPMOVSXBQZ128rmk
VPMOVZXBQZ128rmk
VCVTTPD2DQZ128rmk
VCVTPD2DQZ128rmk
VCVTTPS2DQZ128rmk
VCVTPS2DQZ128rmk
VPADDQZ128rmk
VPUNPCKHDQZ128rmk
VPUNPCKLDQZ128rmk
VPMULDQZ128rmk
VPANDQZ128rmk
VPEXPANDQZ128rmk
VPUNPCKHQDQZ128rmk
VPUNPCKLQDQZ128rmk
VCVTTPD2UDQZ128rmk
VCVTPD2UDQZ128rmk
VCVTTPS2UDQZ128rmk
VCVTPS2UDQZ128rmk
VPMULUDQZ128rmk
VPMOVSXDQZ128rmk
VPMOVZXDQZ128rmk
VPSLLQZ128rmk
VPMULLQZ128rmk
VPSRLQZ128rmk
VPBLENDMQZ128rmk
VPTESTNMQZ128rmk
VPTESTMQZ128rmk
VPANDNQZ128rmk
VCVTTPD2QQZ128rmk
VCVTPD2QQZ128rmk
VCVTTPS2QQZ128rmk
VCVTPS2QQZ128rmk
VPCMPEQQZ128rmk
VCVTTPD2UQQZ128rmk
VCVTPD2UQQZ128rmk
VCVTTPS2UQQZ128rmk
VCVTPS2UQQZ128rmk
VPORQZ128rmk
VPXORQZ128rmk
VPABSQZ128rmk
VPMINSQZ128rmk
VPMAXSQZ128rmk
VPCONFLICTQZ128rmk
VPCMPGTQZ128rmk
VPOPCNTQZ128rmk
VPLZCNTQZ128rmk
VPBROADCASTQZ128rmk
VPMINUQZ128rmk
VPMAXUQZ128rmk
VPSRAVQZ128rmk
VPSLLVQZ128rmk
VPROLVQZ128rmk
VPSRLVQZ128rmk
VPRORVQZ128rmk
VPMOVSXWQZ128rmk
VPMOVZXWQZ128rmk
VCVTPD2PSZ128rmk
VCVTPH2PSZ128rmk
VCVTDQ2PSZ128rmk
VCVTUDQ2PSZ128rmk
VCVTQQ2PSZ128rmk
VCVTUQQ2PSZ128rmk
VMOVAPSZ128rmk
VSUBPSZ128rmk
VMINCPSZ128rmk
VMAXCPSZ128rmk
VADDPSZ128rmk
VEXPANDPSZ128rmk
VANDPSZ128rmk
VSCALEFPSZ128rmk
VUNPCKHPSZ128rmk
VPERMILPSZ128rmk
VUNPCKLPSZ128rmk
VMULPSZ128rmk
VBLENDMPSZ128rmk
VANDNPSZ128rmk
VMINPSZ128rmk
VORPSZ128rmk
VXORPSZ128rmk
VFPCLASSPSZ128rmk
VMOVUPSZ128rmk
VDIVPSZ128rmk
VMAXPSZ128rmk
VBROADCASTSSZ128rmk
VPSRAWZ128rmk
VPUNPCKHBWZ128rmk
VPUNPCKLBWZ128rmk
VPSUBWZ128rmk
VPMOVSXBWZ128rmk
VPMOVZXBWZ128rmk
VPADDWZ128rmk
VPEXPANDWZ128rmk
VPACKSSDWZ128rmk
VPACKUSDWZ128rmk
VPAVGWZ128rmk
VPMULHWZ128rmk
VPSLLWZ128rmk
VPMULLWZ128rmk
VPSRLWZ128rmk
VPBLENDMWZ128rmk
VPTESTNMWZ128rmk
VPERMWZ128rmk
VPTESTMWZ128rmk
VPCMPEQWZ128rmk
VPABSWZ128rmk
VPMADDUBSWZ128rmk
VPSUBSWZ128rmk
VPADDSWZ128rmk
VPMINSWZ128rmk
VPMULHRSWZ128rmk
VPSUBUSWZ128rmk
VPADDUSWZ128rmk
VPMAXSWZ128rmk
VPCMPGTWZ128rmk
VPOPCNTWZ128rmk
VPBROADCASTWZ128rmk
VPMULHUWZ128rmk
VPMINUWZ128rmk
VPMAXUWZ128rmk
VPSRAVWZ128rmk
VPSLLVWZ128rmk
VPSRLVWZ128rmk
VBROADCASTF32X8rmk
VBROADCASTI32X8rmk
VPERMI2Brmk
VPERMT2Brmk
VPERMI2Drmk
VPERMT2Drmk
VPERMI2PDrmk
VPERMT2PDrmk
VP4DPWSSDrmk
VPERMI2Qrmk
VPERMT2Qrmk
VP4DPWSSDSrmk
VPERMI2PSrmk
VPERMT2PSrmk
V4FMADDPSrmk
V4FNMADDPSrmk
V4FMADDSSrmk
V4FNMADDSSrmk
VPERMI2Wrmk
VPERMT2Wrmk
VMOVDQA32Zrmk
VMOVDQU32Zrmk
VBROADCASTF32X2Zrmk
VBROADCASTI32X2Zrmk
VINSERTF64x2Zrmk
VINSERTI64x2Zrmk
VMOVDQA64Zrmk
VMOVDQU64Zrmk
VINSERTF32x4Zrmk
VINSERTI32x4Zrmk
VINSERTF64x4Zrmk
VINSERTI64x4Zrmk
VCVTNE2PS2BF16Zrmk
VCVTNEPS2BF16Zrmk
VMOVDQU16Zrmk
VMOVDQU8Zrmk
VINSERTF32x8Zrmk
VINSERTI32x8Zrmk
VPSUBBZrmk
VPADDBZrmk
VPEXPANDBZrmk
VPSHUFBZrmk
VPAVGBZrmk
VGF2P8MULBZrmk
VPBLENDMBZrmk
VPTESTNMBZrmk
VPSHUFBITQMBZrmk
VPERMBZrmk
VPTESTMBZrmk
VPCMPEQBZrmk
VPMULTISHIFTQBZrmk
VPABSBZrmk
VPSUBSBZrmk
VPADDSBZrmk
VPMINSBZrmk
VPSUBUSBZrmk
VPADDUSBZrmk
VPMAXSBZrmk
VPCMPGTBZrmk
VPOPCNTBZrmk
VPBROADCASTBZrmk
VPMINUBZrmk
VPMAXUBZrmk
VPACKSSWBZrmk
VPACKUSWBZrmk
VPSRADZrmk
VPSUBDZrmk
VPMOVSXBDZrmk
VPMOVZXBDZrmk
VPADDDZrmk
VPANDDZrmk
VPEXPANDDZrmk
VPSLLDZrmk
VPMULLDZrmk
VPSRLDZrmk
VPBLENDMDZrmk
VPTESTNMDZrmk
VPERMDZrmk
VPTESTMDZrmk
VPANDNDZrmk
VCVTDQ2PDZrmk
VCVTUDQ2PDZrmk
VCVTQQ2PDZrmk
VCVTUQQ2PDZrmk
VCVTPS2PDZrmk
VMOVAPDZrmk
VSUBPDZrmk
VMINCPDZrmk
VMAXCPDZrmk
VADDPDZrmk
VEXPANDPDZrmk
VANDPDZrmk
VSCALEFPDZrmk
VUNPCKHPDZrmk
VPERMILPDZrmk
VUNPCKLPDZrmk
VMULPDZrmk
VBLENDMPDZrmk
VPERMPDZrmk
VANDNPDZrmk
VMINPDZrmk
VORPDZrmk
VXORPDZrmk
VFPCLASSPDZrmk
VMOVUPDZrmk
VDIVPDZrmk
VMAXPDZrmk
VPCMPEQDZrmk
VPORDZrmk
VPXORDZrmk
VRCP14SDZrmk
VRSQRT14SDZrmk
VPABSDZrmk
VSCALEFSDZrmk
VPMINSDZrmk
VFPCLASSSDZrmk
VBROADCASTSDZrmk
VMOVSDZrmk
VPMAXSDZrmk
VPCONFLICTDZrmk
VPCMPGTDZrmk
VPOPCNTDZrmk
VPLZCNTDZrmk
VPBROADCASTDZrmk
VPMINUDZrmk
VPMAXUDZrmk
VPSRAVDZrmk
VPSLLVDZrmk
VPROLVDZrmk
VPSRLVDZrmk
VPRORVDZrmk
VPMADDWDZrmk
VPUNPCKHWDZrmk
VPUNPCKLWDZrmk
VPMOVSXWDZrmk
VPMOVZXWDZrmk
VMOVDDUPZrmk
VMOVSHDUPZrmk
VMOVSLDUPZrmk
VPSRAQZrmk
VPSUBQZrmk
VPMOVSXBQZrmk
VPMOVZXBQZrmk
VCVTTPD2DQZrmk
VCVTPD2DQZrmk
VCVTTPS2DQZrmk
VCVTPS2DQZrmk
VPADDQZrmk
VPUNPCKHDQZrmk
VPUNPCKLDQZrmk
VPMULDQZrmk
VPANDQZrmk
VPEXPANDQZrmk
VPUNPCKHQDQZrmk
VPUNPCKLQDQZrmk
VCVTTPD2UDQZrmk
VCVTPD2UDQZrmk
VCVTTPS2UDQZrmk
VCVTPS2UDQZrmk
VPMULUDQZrmk
VPMOVSXDQZrmk
VPMOVZXDQZrmk
VPSLLQZrmk
VPMULLQZrmk
VPSRLQZrmk
VPBLENDMQZrmk
VPTESTNMQZrmk
VPERMQZrmk
VPTESTMQZrmk
VPANDNQZrmk
VCVTTPD2QQZrmk
VCVTPD2QQZrmk
VCVTTPS2QQZrmk
VCVTPS2QQZrmk
VPCMPEQQZrmk
VCVTTPD2UQQZrmk
VCVTPD2UQQZrmk
VCVTTPS2UQQZrmk
VCVTPS2UQQZrmk
VPORQZrmk
VPXORQZrmk
VPABSQZrmk
VPMINSQZrmk
VPMAXSQZrmk
VPCONFLICTQZrmk
VPCMPGTQZrmk
VPOPCNTQZrmk
VPLZCNTQZrmk
VPBROADCASTQZrmk
VPMINUQZrmk
VPMAXUQZrmk
VPSRAVQZrmk
VPSLLVQZrmk
VPROLVQZrmk
VPSRLVQZrmk
VPRORVQZrmk
VPMOVSXWQZrmk
VPMOVZXWQZrmk
VCVTPD2PSZrmk
VCVTPH2PSZrmk
VCVTDQ2PSZrmk
VCVTUDQ2PSZrmk
VCVTQQ2PSZrmk
VCVTUQQ2PSZrmk
VMOVAPSZrmk
VSUBPSZrmk
VMINCPSZrmk
VMAXCPSZrmk
VADDPSZrmk
VEXPANDPSZrmk
VANDPSZrmk
VSCALEFPSZrmk
VUNPCKHPSZrmk
VPERMILPSZrmk
VUNPCKLPSZrmk
VMULPSZrmk
VBLENDMPSZrmk
VPERMPSZrmk
VANDNPSZrmk
VMINPSZrmk
VORPSZrmk
VXORPSZrmk
VFPCLASSPSZrmk
VMOVUPSZrmk
VDIVPSZrmk
VMAXPSZrmk
VRCP14SSZrmk
VRSQRT14SSZrmk
VSCALEFSSZrmk
VFPCLASSSSZrmk
VBROADCASTSSZrmk
VMOVSSZrmk
VPSRAWZrmk
VPUNPCKHBWZrmk
VPUNPCKLBWZrmk
VPSUBWZrmk
VPMOVSXBWZrmk
VPMOVZXBWZrmk
VPADDWZrmk
VPEXPANDWZrmk
VPACKSSDWZrmk
VPACKUSDWZrmk
VPAVGWZrmk
VPMULHWZrmk
VPSLLWZrmk
VPMULLWZrmk
VPSRLWZrmk
VPBLENDMWZrmk
VPTESTNMWZrmk
VPERMWZrmk
VPTESTMWZrmk
VPCMPEQWZrmk
VPABSWZrmk
VPMADDUBSWZrmk
VPSUBSWZrmk
VPADDSWZrmk
VPMINSWZrmk
VPMULHRSWZrmk
VPSUBUSWZrmk
VPADDUSWZrmk
VPMAXSWZrmk
VPCMPGTWZrmk
VPOPCNTWZrmk
VPBROADCASTWZrmk
VPMULHUWZrmk
VPMINUWZrmk
VPMAXUWZrmk
VPSRAVWZrmk
VPSLLVWZrmk
VPSRLVWZrmk
VFMADDSUB231PDZ256rk
VFMSUB231PDZ256rk
VFNMSUB231PDZ256rk
VFMSUBADD231PDZ256rk
VFMADD231PDZ256rk
VFNMADD231PDZ256rk
VFMADDSUB132PDZ256rk
VFMSUB132PDZ256rk
VFNMSUB132PDZ256rk
VFMSUBADD132PDZ256rk
VFMADD132PDZ256rk
VFNMADD132PDZ256rk
VFMADDSUB213PDZ256rk
VFMSUB213PDZ256rk
VFNMSUB213PDZ256rk
VFMSUBADD213PDZ256rk
VFMADD213PDZ256rk
VFNMADD213PDZ256rk
VRCP14PDZ256rk
VRSQRT14PDZ256rk
VGETEXPPDZ256rk
VSQRTPDZ256rk
VPDPWSSDZ256rk
VPDPBUSDZ256rk
VPSHLDVDZ256rk
VPSHRDVDZ256rk
VPMADD52HUQZ256rk
VPMADD52LUQZ256rk
VPSHLDVQZ256rk
VPSHRDVQZ256rk
VPDPWSSDSZ256rk
VPDPBUSDSZ256rk
VFMADDSUB231PSZ256rk
VFMSUB231PSZ256rk
VFNMSUB231PSZ256rk
VFMSUBADD231PSZ256rk
VFMADD231PSZ256rk
VFNMADD231PSZ256rk
VFMADDSUB132PSZ256rk
VFMSUB132PSZ256rk
VFNMSUB132PSZ256rk
VFMSUBADD132PSZ256rk
VFMADD132PSZ256rk
VFNMADD132PSZ256rk
VFMADDSUB213PSZ256rk
VFMSUB213PSZ256rk
VFNMSUB213PSZ256rk
VFMSUBADD213PSZ256rk
VFMADD213PSZ256rk
VFNMADD213PSZ256rk
VRCP14PSZ256rk
VRSQRT14PSZ256rk
VDPBF16PSZ256rk
VGETEXPPSZ256rk
VSQRTPSZ256rk
VPSHLDVWZ256rk
VPSHRDVWZ256rk
VFMADDSUB231PDZ128rk
VFMSUB231PDZ128rk
VFNMSUB231PDZ128rk
VFMSUBADD231PDZ128rk
VFMADD231PDZ128rk
VFNMADD231PDZ128rk
VFMADDSUB132PDZ128rk
VFMSUB132PDZ128rk
VFNMSUB132PDZ128rk
VFMSUBADD132PDZ128rk
VFMADD132PDZ128rk
VFNMADD132PDZ128rk
VFMADDSUB213PDZ128rk
VFMSUB213PDZ128rk
VFNMSUB213PDZ128rk
VFMSUBADD213PDZ128rk
VFMADD213PDZ128rk
VFNMADD213PDZ128rk
VRCP14PDZ128rk
VRSQRT14PDZ128rk
VGETEXPPDZ128rk
VSQRTPDZ128rk
VPDPWSSDZ128rk
VPDPBUSDZ128rk
VPSHLDVDZ128rk
VPSHRDVDZ128rk
VPMADD52HUQZ128rk
VPMADD52LUQZ128rk
VPSHLDVQZ128rk
VPSHRDVQZ128rk
VPDPWSSDSZ128rk
VPDPBUSDSZ128rk
VFMADDSUB231PSZ128rk
VFMSUB231PSZ128rk
VFNMSUB231PSZ128rk
VFMSUBADD231PSZ128rk
VFMADD231PSZ128rk
VFNMADD231PSZ128rk
VFMADDSUB132PSZ128rk
VFMSUB132PSZ128rk
VFNMSUB132PSZ128rk
VFMSUBADD132PSZ128rk
VFMADD132PSZ128rk
VFNMADD132PSZ128rk
VFMADDSUB213PSZ128rk
VFMSUB213PSZ128rk
VFNMSUB213PSZ128rk
VFMSUBADD213PSZ128rk
VFMADD213PSZ128rk
VFNMADD213PSZ128rk
VRCP14PSZ128rk
VRSQRT14PSZ128rk
VDPBF16PSZ128rk
VGETEXPPSZ128rk
VSQRTPSZ128rk
VPSHLDVWZ128rk
VPSHRDVWZ128rk
KMOVBrk
KMOVDrk
KMOVQrk
KMOVWrk
VFMADDSUB231PDZrk
VFMSUB231PDZrk
VFNMSUB231PDZrk
VFMSUBADD231PDZrk
VFMADD231PDZrk
VFNMADD231PDZrk
VFMADDSUB132PDZrk
VFMSUB132PDZrk
VFNMSUB132PDZrk
VFMSUBADD132PDZrk
VFMADD132PDZrk
VFNMADD132PDZrk
VEXP2PDZrk
VFMADDSUB213PDZrk
VFMSUB213PDZrk
VFNMSUB213PDZrk
VFMSUBADD213PDZrk
VFMADD213PDZrk
VFNMADD213PDZrk
VRCP14PDZrk
VRSQRT14PDZrk
VRCP28PDZrk
VRSQRT28PDZrk
VGETEXPPDZrk
VSQRTPDZrk
VRCP28SDZrk
VRSQRT28SDZrk
VGETEXPSDZrk
VPDPWSSDZrk
VPDPBUSDZrk
VPSHLDVDZrk
VPSHRDVDZrk
VPMADD52HUQZrk
VPMADD52LUQZrk
VPSHLDVQZrk
VPSHRDVQZrk
VPDPWSSDSZrk
VPDPBUSDSZrk
VFMADDSUB231PSZrk
VFMSUB231PSZrk
VFNMSUB231PSZrk
VFMSUBADD231PSZrk
VFMADD231PSZrk
VFNMADD231PSZrk
VFMADDSUB132PSZrk
VFMSUB132PSZrk
VFNMSUB132PSZrk
VFMSUBADD132PSZrk
VFMADD132PSZrk
VFNMADD132PSZrk
VEXP2PSZrk
VFMADDSUB213PSZrk
VFMSUB213PSZrk
VFNMSUB213PSZrk
VFMSUBADD213PSZrk
VFMADD213PSZrk
VFNMADD213PSZrk
VRCP14PSZrk
VRSQRT14PSZrk
VDPBF16PSZrk
VRCP28PSZrk
VRSQRT28PSZrk
VGETEXPPSZrk
VSQRTPSZrk
VRCP28SSZrk
VRSQRT28SSZrk
VGETEXPSSZrk
VPSHLDVWZrk
VPSHRDVWZrk
VMOVDQA32Z256mrk
VMOVDQU32Z256mrk
VEXTRACTF64x2Z256mrk
VEXTRACTI64x2Z256mrk
VMOVDQA64Z256mrk
VMOVDQU64Z256mrk
VEXTRACTF32x4Z256mrk
VEXTRACTI32x4Z256mrk
VMOVDQU16Z256mrk
VMOVDQU8Z256mrk
VPMOVUSDBZ256mrk
VPMOVSDBZ256mrk
VPMOVDBZ256mrk
VPMOVUSQBZ256mrk
VPMOVSQBZ256mrk
VPMOVQBZ256mrk
VPCOMPRESSBZ256mrk
VPMOVUSWBZ256mrk
VPMOVSWBZ256mrk
VPMOVWBZ256mrk
VMOVAPDZ256mrk
VCOMPRESSPDZ256mrk
VMOVUPDZ256mrk
VPMOVUSQDZ256mrk
VPMOVSQDZ256mrk
VPMOVQDZ256mrk
VPCOMPRESSDZ256mrk
VCVTPS2PHZ256mrk
VPCOMPRESSQZ256mrk
VMOVAPSZ256mrk
VCOMPRESSPSZ256mrk
VMOVUPSZ256mrk
VPMOVUSDWZ256mrk
VPMOVSDWZ256mrk
VPMOVDWZ256mrk
VPMOVUSQWZ256mrk
VPMOVSQWZ256mrk
VPMOVQWZ256mrk
VPCOMPRESSWZ256mrk
VMOVDQA32Z128mrk
VMOVDQU32Z128mrk
VMOVDQA64Z128mrk
VMOVDQU64Z128mrk
VMOVDQU16Z128mrk
VMOVDQU8Z128mrk
VPMOVUSDBZ128mrk
VPMOVSDBZ128mrk
VPMOVDBZ128mrk
VPMOVUSQBZ128mrk
VPMOVSQBZ128mrk
VPMOVQBZ128mrk
VPCOMPRESSBZ128mrk
VPMOVUSWBZ128mrk
VPMOVSWBZ128mrk
VPMOVWBZ128mrk
VMOVAPDZ128mrk
VCOMPRESSPDZ128mrk
VMOVUPDZ128mrk
VPMOVUSQDZ128mrk
VPMOVSQDZ128mrk
VPMOVQDZ128mrk
VPCOMPRESSDZ128mrk
VCVTPS2PHZ128mrk
VPCOMPRESSQZ128mrk
VMOVAPSZ128mrk
VCOMPRESSPSZ128mrk
VMOVUPSZ128mrk
VPMOVUSDWZ128mrk
VPMOVSDWZ128mrk
VPMOVDWZ128mrk
VPMOVUSQWZ128mrk
VPMOVSQWZ128mrk
VPMOVQWZ128mrk
VPCOMPRESSWZ128mrk
VMOVDQA32Zmrk
VMOVDQU32Zmrk
VEXTRACTF64x2Zmrk
VEXTRACTI64x2Zmrk
VMOVDQA64Zmrk
VMOVDQU64Zmrk
VEXTRACTF32x4Zmrk
VEXTRACTI32x4Zmrk
VEXTRACTF64x4Zmrk
VEXTRACTI64x4Zmrk
VMOVDQU16Zmrk
VMOVDQU8Zmrk
VEXTRACTF32x8Zmrk
VEXTRACTI32x8Zmrk
VPMOVUSDBZmrk
VPMOVSDBZmrk
VPMOVDBZmrk
VPMOVUSQBZmrk
VPMOVSQBZmrk
VPMOVQBZmrk
VPCOMPRESSBZmrk
VPMOVUSWBZmrk
VPMOVSWBZmrk
VPMOVWBZmrk
VMOVAPDZmrk
VCOMPRESSPDZmrk
VMOVUPDZmrk
VPMOVUSQDZmrk
VPMOVSQDZmrk
VPMOVQDZmrk
VPCOMPRESSDZmrk
VMOVSDZmrk
VCVTPS2PHZmrk
VPCOMPRESSQZmrk
VMOVAPSZmrk
VCOMPRESSPSZmrk
VMOVUPSZmrk
VMOVSSZmrk
VPMOVUSDWZmrk
VPMOVSDWZmrk
VPMOVDWZmrk
VPMOVUSQWZmrk
VPMOVSQWZmrk
VPMOVQWZmrk
VPCOMPRESSWZmrk
VPERMI2B256rrk
VPERMT2B256rrk
VPERMI2D256rrk
VPERMT2D256rrk
VPERMI2PD256rrk
VPERMT2PD256rrk
VPERMI2Q256rrk
VPERMT2Q256rrk
VPERMI2PS256rrk
VPERMT2PS256rrk
VPERMI2W256rrk
VPERMT2W256rrk
VMOVDQA32Z256rrk
VMOVDQU32Z256rrk
VBROADCASTF32X2Z256rrk
VBROADCASTI32X2Z256rrk
VEXTRACTF64x2Z256rrk
VINSERTF64x2Z256rrk
VEXTRACTI64x2Z256rrk
VINSERTI64x2Z256rrk
VMOVDQA64Z256rrk
VMOVDQU64Z256rrk
VEXTRACTF32x4Z256rrk
VINSERTF32x4Z256rrk
VEXTRACTI32x4Z256rrk
VINSERTI32x4Z256rrk
VCVTNE2PS2BF16Z256rrk
VCVTNEPS2BF16Z256rrk
VMOVDQU16Z256rrk
VMOVDQU8Z256rrk
VPSUBBZ256rrk
VPADDBZ256rrk
VPEXPANDBZ256rrk
VPMOVUSDBZ256rrk
VPMOVSDBZ256rrk
VPMOVDBZ256rrk
VPSHUFBZ256rrk
VPAVGBZ256rrk
VGF2P8MULBZ256rrk
VPBLENDMBZ256rrk
VPTESTNMBZ256rrk
VPSHUFBITQMBZ256rrk
VPERMBZ256rrk
VPTESTMBZ256rrk
VPCMPEQBZ256rrk
VPMOVUSQBZ256rrk
VPMOVSQBZ256rrk
VPMULTISHIFTQBZ256rrk
VPMOVQBZ256rrk
VPABSBZ256rrk
VPSUBSBZ256rrk
VPADDSBZ256rrk
VPMINSBZ256rrk
VPCOMPRESSBZ256rrk
VPSUBUSBZ256rrk
VPADDUSBZ256rrk
VPMAXSBZ256rrk
VPCMPGTBZ256rrk
VPOPCNTBZ256rrk
VPBROADCASTBZ256rrk
VPMINUBZ256rrk
VPMAXUBZ256rrk
VPACKSSWBZ256rrk
VPACKUSWBZ256rrk
VPMOVUSWBZ256rrk
VPMOVSWBZ256rrk
VPMOVWBZ256rrk
VPSRADZ256rrk
VPSUBDZ256rrk
VPMOVSXBDZ256rrk
VPMOVZXBDZ256rrk
VPADDDZ256rrk
VPANDDZ256rrk
VPEXPANDDZ256rrk
VPSLLDZ256rrk
VPMULLDZ256rrk
VPSRLDZ256rrk
VPBLENDMDZ256rrk
VPTESTNMDZ256rrk
VPERMDZ256rrk
VPTESTMDZ256rrk
VPANDNDZ256rrk
VCVTDQ2PDZ256rrk
VCVTUDQ2PDZ256rrk
VCVTQQ2PDZ256rrk
VCVTUQQ2PDZ256rrk
VCVTPS2PDZ256rrk
VMOVAPDZ256rrk
VSUBPDZ256rrk
VMINCPDZ256rrk
VMAXCPDZ256rrk
VADDPDZ256rrk
VEXPANDPDZ256rrk
VANDPDZ256rrk
VSCALEFPDZ256rrk
VUNPCKHPDZ256rrk
VPERMILPDZ256rrk
VUNPCKLPDZ256rrk
VMULPDZ256rrk
VBLENDMPDZ256rrk
VPERMPDZ256rrk
VANDNPDZ256rrk
VMINPDZ256rrk
VORPDZ256rrk
VXORPDZ256rrk
VFPCLASSPDZ256rrk
VCOMPRESSPDZ256rrk
VMOVUPDZ256rrk
VDIVPDZ256rrk
VMAXPDZ256rrk
VPCMPEQDZ256rrk
VPMOVUSQDZ256rrk
VPMOVSQDZ256rrk
VPMOVQDZ256rrk
VPORDZ256rrk
VPXORDZ256rrk
VPABSDZ256rrk
VPMINSDZ256rrk
VPCOMPRESSDZ256rrk
VBROADCASTSDZ256rrk
VPMAXSDZ256rrk
VPCONFLICTDZ256rrk
VPCMPGTDZ256rrk
VPOPCNTDZ256rrk
VPLZCNTDZ256rrk
VPBROADCASTDZ256rrk
VPMINUDZ256rrk
VPMAXUDZ256rrk
VPSRAVDZ256rrk
VPSLLVDZ256rrk
VPROLVDZ256rrk
VPSRLVDZ256rrk
VPRORVDZ256rrk
VPMADDWDZ256rrk
VPUNPCKHWDZ256rrk
VPUNPCKLWDZ256rrk
VPMOVSXWDZ256rrk
VPMOVZXWDZ256rrk
VCVTPS2PHZ256rrk
VMOVDDUPZ256rrk
VMOVSHDUPZ256rrk
VMOVSLDUPZ256rrk
VPSRAQZ256rrk
VPSUBQZ256rrk
VPMOVSXBQZ256rrk
VPMOVZXBQZ256rrk
VCVTTPD2DQZ256rrk
VCVTPD2DQZ256rrk
VCVTTPS2DQZ256rrk
VCVTPS2DQZ256rrk
VPADDQZ256rrk
VPUNPCKHDQZ256rrk
VPUNPCKLDQZ256rrk
VPMULDQZ256rrk
VPANDQZ256rrk
VPEXPANDQZ256rrk
VPUNPCKHQDQZ256rrk
VPUNPCKLQDQZ256rrk
VCVTTPD2UDQZ256rrk
VCVTPD2UDQZ256rrk
VCVTTPS2UDQZ256rrk
VCVTPS2UDQZ256rrk
VPMULUDQZ256rrk
VPMOVSXDQZ256rrk
VPMOVZXDQZ256rrk
VPSLLQZ256rrk
VPMULLQZ256rrk
VPSRLQZ256rrk
VPBLENDMQZ256rrk
VPTESTNMQZ256rrk
VPERMQZ256rrk
VPTESTMQZ256rrk
VPANDNQZ256rrk
VCVTTPD2QQZ256rrk
VCVTPD2QQZ256rrk
VCVTTPS2QQZ256rrk
VCVTPS2QQZ256rrk
VPCMPEQQZ256rrk
VCVTTPD2UQQZ256rrk
VCVTPD2UQQZ256rrk
VCVTTPS2UQQZ256rrk
VCVTPS2UQQZ256rrk
VPORQZ256rrk
VPXORQZ256rrk
VPABSQZ256rrk
VPMINSQZ256rrk
VPCOMPRESSQZ256rrk
VPMAXSQZ256rrk
VPCONFLICTQZ256rrk
VPCMPGTQZ256rrk
VPOPCNTQZ256rrk
VPLZCNTQZ256rrk
VPBROADCASTQZ256rrk
VPMINUQZ256rrk
VPMAXUQZ256rrk
VPSRAVQZ256rrk
VPSLLVQZ256rrk
VPROLVQZ256rrk
VPSRLVQZ256rrk
VPRORVQZ256rrk
VPMOVSXWQZ256rrk
VPMOVZXWQZ256rrk
VCVTPD2PSZ256rrk
VCVTPH2PSZ256rrk
VCVTDQ2PSZ256rrk
VCVTUDQ2PSZ256rrk
VCVTQQ2PSZ256rrk
VCVTUQQ2PSZ256rrk
VMOVAPSZ256rrk
VSUBPSZ256rrk
VMINCPSZ256rrk
VMAXCPSZ256rrk
VADDPSZ256rrk
VEXPANDPSZ256rrk
VANDPSZ256rrk
VSCALEFPSZ256rrk
VUNPCKHPSZ256rrk
VPERMILPSZ256rrk
VUNPCKLPSZ256rrk
VMULPSZ256rrk
VBLENDMPSZ256rrk
VPERMPSZ256rrk
VANDNPSZ256rrk
VMINPSZ256rrk
VORPSZ256rrk
VXORPSZ256rrk
VFPCLASSPSZ256rrk
VCOMPRESSPSZ256rrk
VMOVUPSZ256rrk
VDIVPSZ256rrk
VMAXPSZ256rrk
VBROADCASTSSZ256rrk
VPSRAWZ256rrk
VPUNPCKHBWZ256rrk
VPUNPCKLBWZ256rrk
VPSUBWZ256rrk
VPMOVSXBWZ256rrk
VPMOVZXBWZ256rrk
VPADDWZ256rrk
VPEXPANDWZ256rrk
VPACKSSDWZ256rrk
VPACKUSDWZ256rrk
VPMOVUSDWZ256rrk
VPMOVSDWZ256rrk
VPMOVDWZ256rrk
VPAVGWZ256rrk
VPMULHWZ256rrk
VPSLLWZ256rrk
VPMULLWZ256rrk
VPSRLWZ256rrk
VPBLENDMWZ256rrk
VPTESTNMWZ256rrk
VPERMWZ256rrk
VPTESTMWZ256rrk
VPCMPEQWZ256rrk
VPMOVUSQWZ256rrk
VPMOVSQWZ256rrk
VPMOVQWZ256rrk
VPABSWZ256rrk
VPMADDUBSWZ256rrk
VPSUBSWZ256rrk
VPADDSWZ256rrk
VPMINSWZ256rrk
VPMULHRSWZ256rrk
VPCOMPRESSWZ256rrk
VPSUBUSWZ256rrk
VPADDUSWZ256rrk
VPMAXSWZ256rrk
VPCMPGTWZ256rrk
VPOPCNTWZ256rrk
VPBROADCASTWZ256rrk
VPMULHUWZ256rrk
VPMINUWZ256rrk
VPMAXUWZ256rrk
VPSRAVWZ256rrk
VPSLLVWZ256rrk
VPSRLVWZ256rrk
VPBROADCASTBrZ256rrk
VPBROADCASTDrZ256rrk
VPBROADCASTQrZ256rrk
VPBROADCASTWrZ256rrk
VPERMI2B128rrk
VPERMT2B128rrk
VPERMI2D128rrk
VPERMT2D128rrk
VPERMI2PD128rrk
VPERMT2PD128rrk
VPERMI2Q128rrk
VPERMT2Q128rrk
VPERMI2PS128rrk
VPERMT2PS128rrk
VPERMI2W128rrk
VPERMT2W128rrk
VMOVDQA32Z128rrk
VMOVDQU32Z128rrk
VBROADCASTI32X2Z128rrk
VMOVDQA64Z128rrk
VMOVDQU64Z128rrk
VCVTNE2PS2BF16Z128rrk
VCVTNEPS2BF16Z128rrk
VMOVDQU16Z128rrk
VMOVDQU8Z128rrk
VPSUBBZ128rrk
VPADDBZ128rrk
VPEXPANDBZ128rrk
VPMOVUSDBZ128rrk
VPMOVSDBZ128rrk
VPMOVDBZ128rrk
VPSHUFBZ128rrk
VPAVGBZ128rrk
VGF2P8MULBZ128rrk
VPBLENDMBZ128rrk
VPTESTNMBZ128rrk
VPSHUFBITQMBZ128rrk
VPERMBZ128rrk
VPTESTMBZ128rrk
VPCMPEQBZ128rrk
VPMOVUSQBZ128rrk
VPMOVSQBZ128rrk
VPMULTISHIFTQBZ128rrk
VPMOVQBZ128rrk
VPABSBZ128rrk
VPSUBSBZ128rrk
VPADDSBZ128rrk
VPMINSBZ128rrk
VPCOMPRESSBZ128rrk
VPSUBUSBZ128rrk
VPADDUSBZ128rrk
VPMAXSBZ128rrk
VPCMPGTBZ128rrk
VPOPCNTBZ128rrk
VPBROADCASTBZ128rrk
VPMINUBZ128rrk
VPMAXUBZ128rrk
VPACKSSWBZ128rrk
VPACKUSWBZ128rrk
VPMOVUSWBZ128rrk
VPMOVSWBZ128rrk
VPMOVWBZ128rrk
VPSRADZ128rrk
VPSUBDZ128rrk
VPMOVSXBDZ128rrk
VPMOVZXBDZ128rrk
VPADDDZ128rrk
VPANDDZ128rrk
VPEXPANDDZ128rrk
VPSLLDZ128rrk
VPMULLDZ128rrk
VPSRLDZ128rrk
VPBLENDMDZ128rrk
VPTESTNMDZ128rrk
VPTESTMDZ128rrk
VPANDNDZ128rrk
VCVTDQ2PDZ128rrk
VCVTUDQ2PDZ128rrk
VCVTQQ2PDZ128rrk
VCVTUQQ2PDZ128rrk
VCVTPS2PDZ128rrk
VMOVAPDZ128rrk
VSUBPDZ128rrk
VMINCPDZ128rrk
VMAXCPDZ128rrk
VADDPDZ128rrk
VEXPANDPDZ128rrk
VANDPDZ128rrk
VSCALEFPDZ128rrk
VUNPCKHPDZ128rrk
VPERMILPDZ128rrk
VUNPCKLPDZ128rrk
VMULPDZ128rrk
VBLENDMPDZ128rrk
VANDNPDZ128rrk
VMINPDZ128rrk
VORPDZ128rrk
VXORPDZ128rrk
VFPCLASSPDZ128rrk
VCOMPRESSPDZ128rrk
VMOVUPDZ128rrk
VDIVPDZ128rrk
VMAXPDZ128rrk
VPCMPEQDZ128rrk
VPMOVUSQDZ128rrk
VPMOVSQDZ128rrk
VPMOVQDZ128rrk
VPORDZ128rrk
VPXORDZ128rrk
VPABSDZ128rrk
VPMINSDZ128rrk
VPCOMPRESSDZ128rrk
VPMAXSDZ128rrk
VPCONFLICTDZ128rrk
VPCMPGTDZ128rrk
VPOPCNTDZ128rrk
VPLZCNTDZ128rrk
VPBROADCASTDZ128rrk
VPMINUDZ128rrk
VPMAXUDZ128rrk
VPSRAVDZ128rrk
VPSLLVDZ128rrk
VPROLVDZ128rrk
VPSRLVDZ128rrk
VPRORVDZ128rrk
VPMADDWDZ128rrk
VPUNPCKHWDZ128rrk
VPUNPCKLWDZ128rrk
VPMOVSXWDZ128rrk
VPMOVZXWDZ128rrk
VCVTPS2PHZ128rrk
VMOVDDUPZ128rrk
VMOVSHDUPZ128rrk
VMOVSLDUPZ128rrk
VPSRAQZ128rrk
VPSUBQZ128rrk
VPMOVSXBQZ128rrk
VPMOVZXBQZ128rrk
VCVTTPD2DQZ128rrk
VCVTPD2DQZ128rrk
VCVTTPS2DQZ128rrk
VCVTPS2DQZ128rrk
VPADDQZ128rrk
VPUNPCKHDQZ128rrk
VPUNPCKLDQZ128rrk
VPMULDQZ128rrk
VPANDQZ128rrk
VPEXPANDQZ128rrk
VPUNPCKHQDQZ128rrk
VPUNPCKLQDQZ128rrk
VCVTTPD2UDQZ128rrk
VCVTPD2UDQZ128rrk
VCVTTPS2UDQZ128rrk
VCVTPS2UDQZ128rrk
VPMULUDQZ128rrk
VPMOVSXDQZ128rrk
VPMOVZXDQZ128rrk
VPSLLQZ128rrk
VPMULLQZ128rrk
VPSRLQZ128rrk
VPBLENDMQZ128rrk
VPTESTNMQZ128rrk
VPTESTMQZ128rrk
VPANDNQZ128rrk
VCVTTPD2QQZ128rrk
VCVTPD2QQZ128rrk
VCVTTPS2QQZ128rrk
VCVTPS2QQZ128rrk
VPCMPEQQZ128rrk
VCVTTPD2UQQZ128rrk
VCVTPD2UQQZ128rrk
VCVTTPS2UQQZ128rrk
VCVTPS2UQQZ128rrk
VPORQZ128rrk
VPXORQZ128rrk
VPABSQZ128rrk
VPMINSQZ128rrk
VPCOMPRESSQZ128rrk
VPMAXSQZ128rrk
VPCONFLICTQZ128rrk
VPCMPGTQZ128rrk
VPOPCNTQZ128rrk
VPLZCNTQZ128rrk
VPBROADCASTQZ128rrk
VPMINUQZ128rrk
VPMAXUQZ128rrk
VPSRAVQZ128rrk
VPSLLVQZ128rrk
VPROLVQZ128rrk
VPSRLVQZ128rrk
VPRORVQZ128rrk
VPMOVSXWQZ128rrk
VPMOVZXWQZ128rrk
VCVTPD2PSZ128rrk
VCVTPH2PSZ128rrk
VCVTDQ2PSZ128rrk
VCVTUDQ2PSZ128rrk
VCVTQQ2PSZ128rrk
VCVTUQQ2PSZ128rrk
VMOVAPSZ128rrk
VSUBPSZ128rrk
VMINCPSZ128rrk
VMAXCPSZ128rrk
VADDPSZ128rrk
VEXPANDPSZ128rrk
VANDPSZ128rrk
VSCALEFPSZ128rrk
VUNPCKHPSZ128rrk
VPERMILPSZ128rrk
VUNPCKLPSZ128rrk
VMULPSZ128rrk
VBLENDMPSZ128rrk
VANDNPSZ128rrk
VMINPSZ128rrk
VORPSZ128rrk
VXORPSZ128rrk
VFPCLASSPSZ128rrk
VCOMPRESSPSZ128rrk
VMOVUPSZ128rrk
VDIVPSZ128rrk
VMAXPSZ128rrk
VBROADCASTSSZ128rrk
VPSRAWZ128rrk
VPUNPCKHBWZ128rrk
VPUNPCKLBWZ128rrk
VPSUBWZ128rrk
VPMOVSXBWZ128rrk
VPMOVZXBWZ128rrk
VPADDWZ128rrk
VPEXPANDWZ128rrk
VPACKSSDWZ128rrk
VPACKUSDWZ128rrk
VPMOVUSDWZ128rrk
VPMOVSDWZ128rrk
VPMOVDWZ128rrk
VPAVGWZ128rrk
VPMULHWZ128rrk
VPSLLWZ128rrk
VPMULLWZ128rrk
VPSRLWZ128rrk
VPBLENDMWZ128rrk
VPTESTNMWZ128rrk
VPERMWZ128rrk
VPTESTMWZ128rrk
VPCMPEQWZ128rrk
VPMOVUSQWZ128rrk
VPMOVSQWZ128rrk
VPMOVQWZ128rrk
VPABSWZ128rrk
VPMADDUBSWZ128rrk
VPSUBSWZ128rrk
VPADDSWZ128rrk
VPMINSWZ128rrk
VPMULHRSWZ128rrk
VPCOMPRESSWZ128rrk
VPSUBUSWZ128rrk
VPADDUSWZ128rrk
VPMAXSWZ128rrk
VPCMPGTWZ128rrk
VPOPCNTWZ128rrk
VPBROADCASTWZ128rrk
VPMULHUWZ128rrk
VPMINUWZ128rrk
VPMAXUWZ128rrk
VPSRAVWZ128rrk
VPSLLVWZ128rrk
VPSRLVWZ128rrk
VPBROADCASTBrZ128rrk
VPBROADCASTDrZ128rrk
VPBROADCASTQrZ128rrk
VPBROADCASTWrZ128rrk
VPERMI2Brrk
VPERMT2Brrk
VPERMI2Drrk
VPERMT2Drrk
VPERMI2PDrrk
VPERMT2PDrrk
VPERMI2Qrrk
VPERMT2Qrrk
VPERMI2PSrrk
VPERMT2PSrrk
VPERMI2Wrrk
VPERMT2Wrrk
VMOVDQA32Zrrk
VMOVDQU32Zrrk
VBROADCASTF32X2Zrrk
VBROADCASTI32X2Zrrk
VEXTRACTF64x2Zrrk
VINSERTF64x2Zrrk
VEXTRACTI64x2Zrrk
VINSERTI64x2Zrrk
VMOVDQA64Zrrk
VMOVDQU64Zrrk
VEXTRACTF32x4Zrrk
VINSERTF32x4Zrrk
VEXTRACTI32x4Zrrk
VINSERTI32x4Zrrk
VEXTRACTF64x4Zrrk
VINSERTF64x4Zrrk
VEXTRACTI64x4Zrrk
VINSERTI64x4Zrrk
VCVTNE2PS2BF16Zrrk
VCVTNEPS2BF16Zrrk
VMOVDQU16Zrrk
VMOVDQU8Zrrk
VEXTRACTF32x8Zrrk
VINSERTF32x8Zrrk
VEXTRACTI32x8Zrrk
VINSERTI32x8Zrrk
VPSUBBZrrk
VPADDBZrrk
VPEXPANDBZrrk
VPMOVUSDBZrrk
VPMOVSDBZrrk
VPMOVDBZrrk
VPSHUFBZrrk
VPAVGBZrrk
VGF2P8MULBZrrk
VPBLENDMBZrrk
VPTESTNMBZrrk
VPSHUFBITQMBZrrk
VPERMBZrrk
VPTESTMBZrrk
VPCMPEQBZrrk
VPMOVUSQBZrrk
VPMOVSQBZrrk
VPMULTISHIFTQBZrrk
VPMOVQBZrrk
VPABSBZrrk
VPSUBSBZrrk
VPADDSBZrrk
VPMINSBZrrk
VPCOMPRESSBZrrk
VPSUBUSBZrrk
VPADDUSBZrrk
VPMAXSBZrrk
VPCMPGTBZrrk
VPOPCNTBZrrk
VPBROADCASTBZrrk
VPMINUBZrrk
VPMAXUBZrrk
VPACKSSWBZrrk
VPACKUSWBZrrk
VPMOVUSWBZrrk
VPMOVSWBZrrk
VPMOVWBZrrk
VPSRADZrrk
VPSUBDZrrk
VPMOVSXBDZrrk
VPMOVZXBDZrrk
VPADDDZrrk
VPANDDZrrk
VPEXPANDDZrrk
VPSLLDZrrk
VPMULLDZrrk
VPSRLDZrrk
VPBLENDMDZrrk
VPTESTNMDZrrk
VPERMDZrrk
VPTESTMDZrrk
VPANDNDZrrk
VCVTDQ2PDZrrk
VCVTUDQ2PDZrrk
VCVTQQ2PDZrrk
VCVTUQQ2PDZrrk
VCVTPS2PDZrrk
VMOVAPDZrrk
VSUBPDZrrk
VMINCPDZrrk
VMAXCPDZrrk
VADDPDZrrk
VEXPANDPDZrrk
VANDPDZrrk
VSCALEFPDZrrk
VUNPCKHPDZrrk
VPERMILPDZrrk
VUNPCKLPDZrrk
VMULPDZrrk
VBLENDMPDZrrk
VPERMPDZrrk
VANDNPDZrrk
VMINPDZrrk
VORPDZrrk
VXORPDZrrk
VFPCLASSPDZrrk
VCOMPRESSPDZrrk
VMOVUPDZrrk
VDIVPDZrrk
VMAXPDZrrk
VPCMPEQDZrrk
VPMOVUSQDZrrk
VPMOVSQDZrrk
VPMOVQDZrrk
VPORDZrrk
VPXORDZrrk
VRCP14SDZrrk
VRSQRT14SDZrrk
VPABSDZrrk
VSCALEFSDZrrk
VPMINSDZrrk
VPCOMPRESSDZrrk
VFPCLASSSDZrrk
VBROADCASTSDZrrk
VMOVSDZrrk
VPMAXSDZrrk
VPCONFLICTDZrrk
VPCMPGTDZrrk
VPOPCNTDZrrk
VPLZCNTDZrrk
VPBROADCASTDZrrk
VPMINUDZrrk
VPMAXUDZrrk
VPSRAVDZrrk
VPSLLVDZrrk
VPROLVDZrrk
VPSRLVDZrrk
VPRORVDZrrk
VPMADDWDZrrk
VPUNPCKHWDZrrk
VPUNPCKLWDZrrk
VPMOVSXWDZrrk
VPMOVZXWDZrrk
VCVTPS2PHZrrk
VMOVDDUPZrrk
VMOVSHDUPZrrk
VMOVSLDUPZrrk
VPSRAQZrrk
VPSUBQZrrk
VPMOVSXBQZrrk
VPMOVZXBQZrrk
VCVTTPD2DQZrrk
VCVTPD2DQZrrk
VCVTTPS2DQZrrk
VCVTPS2DQZrrk
VPADDQZrrk
VPUNPCKHDQZrrk
VPUNPCKLDQZrrk
VPMULDQZrrk
VPANDQZrrk
VPEXPANDQZrrk
VPUNPCKHQDQZrrk
VPUNPCKLQDQZrrk
VCVTTPD2UDQZrrk
VCVTPD2UDQZrrk
VCVTTPS2UDQZrrk
VCVTPS2UDQZrrk
VPMULUDQZrrk
VPMOVSXDQZrrk
VPMOVZXDQZrrk
VPSLLQZrrk
VPMULLQZrrk
VPSRLQZrrk
VPBLENDMQZrrk
VPTESTNMQZrrk
VPERMQZrrk
VPTESTMQZrrk
VPANDNQZrrk
VCVTTPD2QQZrrk
VCVTPD2QQZrrk
VCVTTPS2QQZrrk
VCVTPS2QQZrrk
VPCMPEQQZrrk
VCVTTPD2UQQZrrk
VCVTPD2UQQZrrk
VCVTTPS2UQQZrrk
VCVTPS2UQQZrrk
VPORQZrrk
VPXORQZrrk
VPABSQZrrk
VPMINSQZrrk
VPCOMPRESSQZrrk
VPMAXSQZrrk
VPCONFLICTQZrrk
VPCMPGTQZrrk
VPOPCNTQZrrk
VPLZCNTQZrrk
VPBROADCASTQZrrk
VPMINUQZrrk
VPMAXUQZrrk
VPSRAVQZrrk
VPSLLVQZrrk
VPROLVQZrrk
VPSRLVQZrrk
VPRORVQZrrk
VPMOVSXWQZrrk
VPMOVZXWQZrrk
VCVTPD2PSZrrk
VCVTPH2PSZrrk
VCVTDQ2PSZrrk
VCVTUDQ2PSZrrk
VCVTQQ2PSZrrk
VCVTUQQ2PSZrrk
VMOVAPSZrrk
VSUBPSZrrk
VMINCPSZrrk
VMAXCPSZrrk
VADDPSZrrk
VEXPANDPSZrrk
VANDPSZrrk
VSCALEFPSZrrk
VUNPCKHPSZrrk
VPERMILPSZrrk
VUNPCKLPSZrrk
VMULPSZrrk
VBLENDMPSZrrk
VPERMPSZrrk
VANDNPSZrrk
VMINPSZrrk
VORPSZrrk
VXORPSZrrk
VFPCLASSPSZrrk
VCOMPRESSPSZrrk
VMOVUPSZrrk
VDIVPSZrrk
VMAXPSZrrk
VRCP14SSZrrk
VRSQRT14SSZrrk
VSCALEFSSZrrk
VFPCLASSSSZrrk
VBROADCASTSSZrrk
VMOVSSZrrk
VPSRAWZrrk
VPUNPCKHBWZrrk
VPUNPCKLBWZrrk
VPSUBWZrrk
VPMOVSXBWZrrk
VPMOVZXBWZrrk
VPADDWZrrk
VPEXPANDWZrrk
VPACKSSDWZrrk
VPACKUSDWZrrk
VPMOVUSDWZrrk
VPMOVSDWZrrk
VPMOVDWZrrk
VPAVGWZrrk
VPMULHWZrrk
VPSLLWZrrk
VPMULLWZrrk
VPSRLWZrrk
VPBLENDMWZrrk
VPTESTNMWZrrk
VPERMWZrrk
VPTESTMWZrrk
VPCMPEQWZrrk
VPMOVUSQWZrrk
VPMOVSQWZrrk
VPMOVQWZrrk
VPABSWZrrk
VPMADDUBSWZrrk
VPSUBSWZrrk
VPADDSWZrrk
VPMINSWZrrk
VPMULHRSWZrrk
VPCOMPRESSWZrrk
VPSUBUSWZrrk
VPADDUSWZrrk
VPMAXSWZrrk
VPCMPGTWZrrk
VPOPCNTWZrrk
VPBROADCASTWZrrk
VPMULHUWZrrk
VPMINUWZrrk
VPMAXUWZrrk
VPSRAVWZrrk
VPSLLVWZrrk
VPSRLVWZrrk
VPBROADCASTBrZrrk
VPBROADCASTDrZrrk
VPBROADCASTQrZrrk
VPBROADCASTWrZrrk
VFMSUB231SDZrb_Intk
VFNMSUB231SDZrb_Intk
VFMADD231SDZrb_Intk
VFNMADD231SDZrb_Intk
VFMSUB132SDZrb_Intk
VFNMSUB132SDZrb_Intk
VFMADD132SDZrb_Intk
VFNMADD132SDZrb_Intk
VFMSUB213SDZrb_Intk
VFNMSUB213SDZrb_Intk
VFMADD213SDZrb_Intk
VFNMADD213SDZrb_Intk
VRNDSCALESDZrb_Intk
VSQRTSDZrb_Intk
VFMSUB231SSZrb_Intk
VFNMSUB231SSZrb_Intk
VFMADD231SSZrb_Intk
VFNMADD231SSZrb_Intk
VFMSUB132SSZrb_Intk
VFNMSUB132SSZrb_Intk
VFMADD132SSZrb_Intk
VFNMADD132SSZrb_Intk
VFMSUB213SSZrb_Intk
VFNMSUB213SSZrb_Intk
VFMADD213SSZrb_Intk
VFNMADD213SSZrb_Intk
VRNDSCALESSZrb_Intk
VSQRTSSZrb_Intk
VCVTSS2SDZrrb_Intk
VSUBSDZrrb_Intk
VADDSDZrrb_Intk
VSCALEFSDZrrb_Intk
VMULSDZrrb_Intk
VMINSDZrrb_Intk
VCMPSDZrrb_Intk
VDIVSDZrrb_Intk
VMAXSDZrrb_Intk
VCVTSD2SSZrrb_Intk
VSUBSSZrrb_Intk
VADDSSZrrb_Intk
VSCALEFSSZrrb_Intk
VMULSSZrrb_Intk
VMINSSZrrb_Intk
VCMPSSZrrb_Intk
VDIVSSZrrb_Intk
VMAXSSZrrb_Intk
VFMSUB231SDZm_Intk
VFNMSUB231SDZm_Intk
VFMADD231SDZm_Intk
VFNMADD231SDZm_Intk
VFMSUB132SDZm_Intk
VFNMSUB132SDZm_Intk
VFMADD132SDZm_Intk
VFNMADD132SDZm_Intk
VFMSUB213SDZm_Intk
VFNMSUB213SDZm_Intk
VFMADD213SDZm_Intk
VFNMADD213SDZm_Intk
VRNDSCALESDZm_Intk
VSQRTSDZm_Intk
VFMSUB231SSZm_Intk
VFNMSUB231SSZm_Intk
VFMADD231SSZm_Intk
VFNMADD231SSZm_Intk
VFMSUB132SSZm_Intk
VFNMSUB132SSZm_Intk
VFMADD132SSZm_Intk
VFNMADD132SSZm_Intk
VFMSUB213SSZm_Intk
VFNMSUB213SSZm_Intk
VFMADD213SSZm_Intk
VFNMADD213SSZm_Intk
VRNDSCALESSZm_Intk
VSQRTSSZm_Intk
VCVTSS2SDZrm_Intk
VSUBSDZrm_Intk
VADDSDZrm_Intk
VMULSDZrm_Intk
VMINSDZrm_Intk
VCMPSDZrm_Intk
VDIVSDZrm_Intk
VMAXSDZrm_Intk
VCVTSD2SSZrm_Intk
VSUBSSZrm_Intk
VADDSSZrm_Intk
VMULSSZrm_Intk
VMINSSZrm_Intk
VCMPSSZrm_Intk
VDIVSSZrm_Intk
VMAXSSZrm_Intk
VFMSUB231SDZr_Intk
VFNMSUB231SDZr_Intk
VFMADD231SDZr_Intk
VFNMADD231SDZr_Intk
VFMSUB132SDZr_Intk
VFNMSUB132SDZr_Intk
VFMADD132SDZr_Intk
VFNMADD132SDZr_Intk
VFMSUB213SDZr_Intk
VFNMSUB213SDZr_Intk
VFMADD213SDZr_Intk
VFNMADD213SDZr_Intk
VRNDSCALESDZr_Intk
VSQRTSDZr_Intk
VFMSUB231SSZr_Intk
VFNMSUB231SSZr_Intk
VFMADD231SSZr_Intk
VFNMADD231SSZr_Intk
VFMSUB132SSZr_Intk
VFNMSUB132SSZr_Intk
VFMADD132SSZr_Intk
VFNMADD132SSZr_Intk
VFMSUB213SSZr_Intk
VFNMSUB213SSZr_Intk
VFMADD213SSZr_Intk
VFNMADD213SSZr_Intk
VRNDSCALESSZr_Intk
VSQRTSSZr_Intk
VCVTSS2SDZrr_Intk
VSUBSDZrr_Intk
VADDSDZrr_Intk
VMULSDZrr_Intk
VMINSDZrr_Intk
VCMPSDZrr_Intk
VDIVSDZrr_Intk
VMAXSDZrr_Intk
VCVTSD2SSZrr_Intk
VSUBSSZrr_Intk
VADDSSZrr_Intk
VMULSSZrr_Intk
VMINSSZrr_Intk
VCMPSSZrr_Intk
VDIVSSZrr_Intk
VMAXSSZrr_Intk
LD_F80m
ST_FP80m
ST_FpP80m
LD_Fp80m
LOCK_DEC32m
LOCK_INC32m
SUB_F32m
ADD_F32m
ILD_F32m
MUL_F32m
SUBR_F32m
DIVR_F32m
IST_F32m
DIV_F32m
NEG32m
SUB_FI32m
ADD_FI32m
MUL_FI32m
SUBR_FI32m
DIVR_FI32m
DIV_FI32m
FARCALL32m
IMUL32m
FCOM32m
FICOM32m
IST_FP32m
ISTT_FP32m
FARJMP32m
FCOMP32m
FICOMP32m
ST_FpP32m
LGDT32m
SGDT32m
LIDT32m
SIDT32m
NOT32m
IDIV32m
SUB_Fp32m
ADD_Fp32m
LD_Fp32m
MUL_Fp32m
SUBR_Fp32m
DIVR_Fp32m
ST_Fp32m
DIV_Fp32m
LOCK_DEC64m
LOCK_INC64m
PTWRITE64m
SUB_F64m
ADD_F64m
ILD_F64m
MUL_F64m
SUBR_F64m
DIVR_F64m
ST_F64m
DIV_F64m
NEG64m
FARCALL64m
IMUL64m
FCOM64m
IST_FP64m
ISTT_FP64m
FARJMP64m
FCOMP64m
ST_FpP64m
LGDT64m
SGDT64m
LIDT64m
SIDT64m
NOT64m
IDIV64m
SUB_Fp64m
ADD_Fp64m
LD_Fp64m
MUL_Fp64m
SUBR_Fp64m
DIVR_Fp64m
ST_Fp64m
DIV_Fp64m
LOCK_DEC16m
LOCK_INC16m
ILD_F16m
IST_F16m
NEG16m
SUB_FI16m
ADD_FI16m
MUL_FI16m
SUBR_FI16m
DIVR_FI16m
DIV_FI16m
FARCALL16m
IMUL16m
FICOM16m
IST_FP16m
ISTT_FP16m
FARJMP16m
FICOMP16m
LGDT16m
SGDT16m
LIDT16m
SIDT16m
LLDT16m
SLDT16m
NOT16m
IDIV16m
FLDCW16m
FNSTCW16m
LMSW16m
SMSW16m
VFMADDSUB231PDZ256m
VFMSUB231PDZ256m
VFNMSUB231PDZ256m
VFMSUBADD231PDZ256m
VFMADD231PDZ256m
VFNMADD231PDZ256m
VFMADDSUB132PDZ256m
VFMSUB132PDZ256m
VFNMSUB132PDZ256m
VFMSUBADD132PDZ256m
VFMADD132PDZ256m
VFNMADD132PDZ256m
VFMADDSUB213PDZ256m
VFMSUB213PDZ256m
VFNMSUB213PDZ256m
VFMSUBADD213PDZ256m
VFMADD213PDZ256m
VFNMADD213PDZ256m
VRCP14PDZ256m
VRSQRT14PDZ256m
VGETEXPPDZ256m
VSQRTPDZ256m
VPDPWSSDZ256m
VPDPBUSDZ256m
VPSHLDVDZ256m
VPSHRDVDZ256m
VPMADD52HUQZ256m
VPMADD52LUQZ256m
VPSHLDVQZ256m
VPSHRDVQZ256m
VPDPWSSDSZ256m
VPDPBUSDSZ256m
VFMADDSUB231PSZ256m
VFMSUB231PSZ256m
VFNMSUB231PSZ256m
VFMSUBADD231PSZ256m
VFMADD231PSZ256m
VFNMADD231PSZ256m
VFMADDSUB132PSZ256m
VFMSUB132PSZ256m
VFNMSUB132PSZ256m
VFMSUBADD132PSZ256m
VFMADD132PSZ256m
VFNMADD132PSZ256m
VFMADDSUB213PSZ256m
VFMSUB213PSZ256m
VFNMSUB213PSZ256m
VFMSUBADD213PSZ256m
VFMADD213PSZ256m
VFNMADD213PSZ256m
VRCP14PSZ256m
VRSQRT14PSZ256m
VDPBF16PSZ256m
VGETEXPPSZ256m
VSQRTPSZ256m
VPSHLDVWZ256m
VPSHRDVWZ256m
VFMADDSUB231PDZ128m
VFMSUB231PDZ128m
VFNMSUB231PDZ128m
VFMSUBADD231PDZ128m
VFMADD231PDZ128m
VFNMADD231PDZ128m
VFMADDSUB132PDZ128m
VFMSUB132PDZ128m
VFNMSUB132PDZ128m
VFMSUBADD132PDZ128m
VFMADD132PDZ128m
VFNMADD132PDZ128m
VFMADDSUB213PDZ128m
VFMSUB213PDZ128m
VFNMSUB213PDZ128m
VFMSUBADD213PDZ128m
VFMADD213PDZ128m
VFNMADD213PDZ128m
VRCP14PDZ128m
VRSQRT14PDZ128m
VGETEXPPDZ128m
VSQRTPDZ128m
VPDPWSSDZ128m
VPDPBUSDZ128m
VPSHLDVDZ128m
VPSHRDVDZ128m
VPMADD52HUQZ128m
VPMADD52LUQZ128m
VPSHLDVQZ128m
VPSHRDVQZ128m
VPDPWSSDSZ128m
VPDPBUSDSZ128m
VFMADDSUB231PSZ128m
VFMSUB231PSZ128m
VFNMSUB231PSZ128m
VFMSUBADD231PSZ128m
VFMADD231PSZ128m
VFNMADD231PSZ128m
VFMADDSUB132PSZ128m
VFMSUB132PSZ128m
VFNMSUB132PSZ128m
VFMSUBADD132PSZ128m
VFMADD132PSZ128m
VFNMADD132PSZ128m
VFMADDSUB213PSZ128m
VFMSUB213PSZ128m
VFNMSUB213PSZ128m
VFMSUBADD213PSZ128m
VFMADD213PSZ128m
VFNMADD213PSZ128m
VRCP14PSZ128m
VRSQRT14PSZ128m
VDPBF16PSZ128m
VGETEXPPSZ128m
VSQRTPSZ128m
VPSHLDVWZ128m
VPSHRDVWZ128m
LOCK_DEC8m
LOCK_INC8m
NEG8m
IMUL8m
NOT8m
IDIV8m
SETCCm
FBLDm
VMPTRLDm
VFMADDSUB231PDm
VFMSUB231PDm
VFNMSUB231PDm
VFMSUBADD231PDm
VFMADD231PDm
VFNMADD231PDm
VFMADDSUB132PDm
VFMSUB132PDm
VFNMSUB132PDm
VFMSUBADD132PDm
VFMADD132PDm
VFNMADD132PDm
VFMADDSUB213PDm
VFMSUB213PDm
VFNMSUB213PDm
VFMSUBADD213PDm
VFMADD213PDm
VFNMADD213PDm
VGATHERPF0DPDm
VSCATTERPF0DPDm
VGATHERPF1DPDm
VSCATTERPF1DPDm
VROUNDPDm
VGATHERPF0QPDm
VSCATTERPF0QPDm
VGATHERPF1QPDm
VSCATTERPF1QPDm
VSQRTPDm
VFMSUB231SDm
VFNMSUB231SDm
VFMADD231SDm
VFNMADD231SDm
VFMSUB132SDm
VFNMSUB132SDm
VFMADD132SDm
VFNMADD132SDm
VFMSUB213SDm
VFNMSUB213SDm
VFMADD213SDm
VFNMADD213SDm
VROUNDSDm
VSQRTSDm
PTWRITEm
FSAVEm
UD1Lm
TAILJMPm
FBSTPm
UD1Qm
VMCLEARm
FRSTORm
VERRm
LTRm
STRm
VFMADDSUB231PSm
VFMSUB231PSm
VFNMSUB231PSm
VFMSUBADD231PSm
VFMADD231PSm
VFNMADD231PSm
VFMADDSUB132PSm
VFMSUB132PSm
VFNMSUB132PSm
VFMSUBADD132PSm
VFMADD132PSm
VFNMADD132PSm
VFMADDSUB213PSm
VFMSUB213PSm
VFNMSUB213PSm
VFMSUBADD213PSm
VFMADD213PSm
VFNMADD213PSm
VGATHERPF0DPSm
VSCATTERPF0DPSm
VGATHERPF1DPSm
VSCATTERPF1DPSm
VROUNDPSm
VRCPPSm
VGATHERPF0QPSm
VSCATTERPF0QPSm
VGATHERPF1QPSm
VSCATTERPF1QPSm
VRSQRTPSm
VSQRTPSm
VFMSUB231SSm
VFNMSUB231SSm
VFMADD231SSm
VFNMADD231SSm
VFMSUB132SSm
VFNMSUB132SSm
VFMADD132SSm
VFNMADD132SSm
VFMSUB213SSm
VFNMSUB213SSm
VFMADD213SSm
VFNMADD213SSm
VROUNDSSm
VRCPSSm
VRSQRTSSm
VSQRTSSm
VMPTRSTm
FLDENVm
FSTENVm
UD1Wm
VERWm
FNSTSWm
VFMADDSUB231PDYm
VFMSUB231PDYm
VFNMSUB231PDYm
VFMSUBADD231PDYm
VFMADD231PDYm
VFNMADD231PDYm
VFMADDSUB132PDYm
VFMSUB132PDYm
VFNMSUB132PDYm
VFMSUBADD132PDYm
VFMADD132PDYm
VFNMADD132PDYm
VFMADDSUB213PDYm
VFMSUB213PDYm
VFNMSUB213PDYm
VFMSUBADD213PDYm
VFMADD213PDYm
VFNMADD213PDYm
VROUNDPDYm
VSQRTPDYm
VFMADDSUB231PSYm
VFMSUB231PSYm
VFNMSUB231PSYm
VFMSUBADD231PSYm
VFMADD231PSYm
VFNMADD231PSYm
VFMADDSUB132PSYm
VFMSUB132PSYm
VFNMSUB132PSYm
VFMSUBADD132PSYm
VFMADD132PSYm
VFNMADD132PSYm
VFMADDSUB213PSYm
VFMSUB213PSYm
VFNMSUB213PSYm
VFMSUBADD213PSYm
VFMADD213PSYm
VFNMADD213PSYm
VROUNDPSYm
VRCPPSYm
VRSQRTPSYm
VSQRTPSYm
VFMADDSUB231PDZm
VFMSUB231PDZm
VFNMSUB231PDZm
VFMSUBADD231PDZm
VFMADD231PDZm
VFNMADD231PDZm
VFMADDSUB132PDZm
VFMSUB132PDZm
VFNMSUB132PDZm
VFMSUBADD132PDZm
VFMADD132PDZm
VFNMADD132PDZm
VEXP2PDZm
VFMADDSUB213PDZm
VFMSUB213PDZm
VFNMSUB213PDZm
VFMSUBADD213PDZm
VFMADD213PDZm
VFNMADD213PDZm
VRCP14PDZm
VRSQRT14PDZm
VRCP28PDZm
VRSQRT28PDZm
VGETEXPPDZm
VSQRTPDZm
VFMSUB231SDZm
VFNMSUB231SDZm
VFMADD231SDZm
VFNMADD231SDZm
VFMSUB132SDZm
VFNMSUB132SDZm
VFMADD132SDZm
VFNMADD132SDZm
VFMSUB213SDZm
VFNMSUB213SDZm
VFMADD213SDZm
VFNMADD213SDZm
VRCP28SDZm
VRSQRT28SDZm
VRNDSCALESDZm
VGETEXPSDZm
VPDPWSSDZm
VSQRTSDZm
VPDPBUSDZm
VPSHLDVDZm
VPSHRDVDZm
VPMADD52HUQZm
VPMADD52LUQZm
VPSHLDVQZm
VPSHRDVQZm
VPDPWSSDSZm
VPDPBUSDSZm
VFMADDSUB231PSZm
VFMSUB231PSZm
VFNMSUB231PSZm
VFMSUBADD231PSZm
VFMADD231PSZm
VFNMADD231PSZm
VFMADDSUB132PSZm
VFMSUB132PSZm
VFNMSUB132PSZm
VFMSUBADD132PSZm
VFMADD132PSZm
VFNMADD132PSZm
VEXP2PSZm
VFMADDSUB213PSZm
VFMSUB213PSZm
VFNMSUB213PSZm
VFMSUBADD213PSZm
VFMADD213PSZm
VFNMADD213PSZm
VRCP14PSZm
VRSQRT14PSZm
VDPBF16PSZm
VRCP28PSZm
VRSQRT28PSZm
VGETEXPPSZm
VSQRTPSZm
VFMSUB231SSZm
VFNMSUB231SSZm
VFMADD231SSZm
VFNMADD231SSZm
VFMSUB132SSZm
VFNMSUB132SSZm
VFMADD132SSZm
VFNMADD132SSZm
VFMSUB213SSZm
VFNMSUB213SSZm
VFMADD213SSZm
VFNMADD213SSZm
VRCP28SSZm
VRSQRT28SSZm
VRNDSCALESSZm
VGETEXPSSZm
VSQRTSSZm
VPSHLDVWZm
VPSHRDVWZm
KMOVBkm
KMOVDkm
KMOVQkm
KMOVWkm
PUSH32rmm
POP32rmm
PUSH64rmm
POP64rmm
PUSH16rmm
POP16rmm
SHA1MSG1rm
SHA256MSG1rm
PFRCPIT1rm
PFRSQIT1rm
SBB32rm
SUB32rm
ADC32rm
BLCIC32rm
BLSIC32rm
T1MSKC32rm
XADD32rm
AND32rm
MOVBE32rm
VMWRITE32rm
BSF32rm
CMPXCHG32rm
BLCI32rm
BZHI32rm
BLSI32rm
BNDMK32rm
BLCMSK32rm
BLSMSK32rm
TZMSK32rm
BNDCL32rm
BLCFILL32rm
BLSFILL32rm
LSL32rm
IMUL32rm
BNDCN32rm
ANDN32rm
PDEP32rm
CMP32rm
LAR32rm
XOR32rm
BSR32rm
BLSR32rm
BEXTR32rm
BLCS32rm
LDS32rm
BOUNDS32rm
LES32rm
LFS32rm
LGS32rm
LSS32rm
POPCNT32rm
LZCNT32rm
TZCNT32rm
PEXT32rm
BNDCU32rm
CMOV32rm
BNDMOV32rm
ADCX32rm
SHLX32rm
MULX32rm
ADOX32rm
SARX32rm
SHRX32rm
SHA1MSG2rm
SHA256MSG2rm
SHA256RNDS2rm
PFRCPIT2rm
VBROADCASTF64X2rm
VBROADCASTI64X2rm
SBB64rm
SUB64rm
ADC64rm
BLCIC64rm
BLSIC64rm
T1MSKC64rm
XADD64rm
AND64rm
MMX_MOVD64rm
MOVBE64rm
VMWRITE64rm
BSF64rm
CMPXCHG64rm
BLCI64rm
BZHI64rm
VCVTTSD2SI64rm
VCVTSD2SI64rm
VCVTTSS2SI64rm
VCVTSS2SI64rm
BLSI64rm
BNDMK64rm
BLCMSK64rm
BLSMSK64rm
TZMSK64rm
BNDCL64rm
BLCFILL64rm
BLSFILL64rm
LSL64rm
IMUL64rm
BNDCN64rm
ANDN64rm
PDEP64rm
CMP64rm
MMX_MOVQ64rm
LAR64rm
XOR64rm
BSR64rm
BLSR64rm
BEXTR64rm
BLCS64rm
LFS64rm
LGS64rm
LSS64rm
POPCNT64rm
LZCNT64rm
TZCNT64rm
PEXT64rm
BNDCU64rm
CMOV64rm
BNDMOV64rm
ADCX64rm
SHLX64rm
MULX64rm
ADOX64rm
SARX64rm
SHRX64rm
MMX_MOVD64from64rm
MMX_MOVD64to64rm
VFMADDSUBPD4rm
VFMSUBPD4rm
VFNMSUBPD4rm
VFMSUBADDPD4rm
VFMADDPD4rm
VFNMADDPD4rm
VFMSUBSD4rm
VFNMSUBSD4rm
VFMADDSD4rm
VFNMADDSD4rm
VFMADDSUBPS4rm
VFMSUBPS4rm
VFNMSUBPS4rm
VFMSUBADDPS4rm
VFMADDPS4rm
VFNMADDPS4rm
VFMSUBSS4rm
VFNMSUBSS4rm
VFMADDSS4rm
VFNMADDSS4rm
VBROADCASTF32X4rm
VBROADCASTI32X4rm
VBROADCASTF64X4rm
VBROADCASTI64X4rm
SBB16rm
SUB16rm
ADC16rm
XADD16rm
AND16rm
MOVBE16rm
BSF16rm
CMPXCHG16rm
LSL16rm
IMUL16rm
CMP16rm
LAR16rm
XOR16rm
BSR16rm
LDS16rm
BOUNDS16rm
LES16rm
LFS16rm
LGS16rm
LSS16rm
POPCNT16rm
LZCNT16rm
TZCNT16rm
CMOV16rm
VPERMI2B256rm
VPERMT2B256rm
VPERMI2D256rm
VPERMT2D256rm
VPERMI2PD256rm
VPERMT2PD256rm
VPERMI2Q256rm
VPERMT2Q256rm
VPERMI2PS256rm
VPERMT2PS256rm
VPERMI2W256rm
VPERMT2W256rm
VMOVDQA32Z256rm
VMOVDQU32Z256rm
VBROADCASTF32X2Z256rm
VBROADCASTI32X2Z256rm
VINSERTF64x2Z256rm
VINSERTI64x2Z256rm
VMOVDQA64Z256rm
VMOVDQU64Z256rm
VBROADCASTF32X4Z256rm
VBROADCASTI32X4Z256rm
VINSERTF32x4Z256rm
VINSERTI32x4Z256rm
VCVTNE2PS2BF16Z256rm
VCVTNEPS2BF16Z256rm
VMOVDQU16Z256rm
VMOVDQU8Z256rm
VMOVNTDQAZ256rm
VPSUBBZ256rm
VPADDBZ256rm
VPEXPANDBZ256rm
VPSHUFBZ256rm
VPAVGBZ256rm
VGF2P8MULBZ256rm
VPBLENDMBZ256rm
VPTESTNMBZ256rm
VPSHUFBITQMBZ256rm
VPERMBZ256rm
VPTESTMBZ256rm
VPCMPEQBZ256rm
VPMULTISHIFTQBZ256rm
VPABSBZ256rm
VPSUBSBZ256rm
VPADDSBZ256rm
VPMINSBZ256rm
VPSUBUSBZ256rm
VPADDUSBZ256rm
VPMAXSBZ256rm
VPCMPGTBZ256rm
VPOPCNTBZ256rm
VPBROADCASTBZ256rm
VPMINUBZ256rm
VPMAXUBZ256rm
VPACKSSWBZ256rm
VPACKUSWBZ256rm
VAESDECZ256rm
VAESENCZ256rm
VPSRADZ256rm
VPSUBDZ256rm
VPMOVSXBDZ256rm
VPMOVZXBDZ256rm
VPADDDZ256rm
VPANDDZ256rm
VPEXPANDDZ256rm
VPGATHERDDZ256rm
VPSLLDZ256rm
VPMULLDZ256rm
VPSRLDZ256rm
VPBLENDMDZ256rm
VPTESTNMDZ256rm
VPERMDZ256rm
VPTESTMDZ256rm
VPANDNDZ256rm
VCVTDQ2PDZ256rm
VCVTUDQ2PDZ256rm
VCVTQQ2PDZ256rm
VCVTUQQ2PDZ256rm
VCVTPS2PDZ256rm
VMOVAPDZ256rm
VSUBPDZ256rm
VMINCPDZ256rm
VMAXCPDZ256rm
VADDPDZ256rm
VEXPANDPDZ256rm
VANDPDZ256rm
VGATHERDPDZ256rm
VSCALEFPDZ256rm
VUNPCKHPDZ256rm
VPERMILPDZ256rm
VUNPCKLPDZ256rm
VMULPDZ256rm
VBLENDMPDZ256rm
VPERMPDZ256rm
VANDNPDZ256rm
VMINPDZ256rm
VGATHERQPDZ256rm
VORPDZ256rm
VXORPDZ256rm
VFPCLASSPDZ256rm
VMOVUPDZ256rm
VDIVPDZ256rm
VMAXPDZ256rm
VPCMPEQDZ256rm
VPGATHERQDZ256rm
VPORDZ256rm
VPXORDZ256rm
VPABSDZ256rm
VPMINSDZ256rm
VBROADCASTSDZ256rm
VPMAXSDZ256rm
VP2INTERSECTDZ256rm
VPCONFLICTDZ256rm
VPCMPGTDZ256rm
VPOPCNTDZ256rm
VPLZCNTDZ256rm
VPBROADCASTDZ256rm
VPMINUDZ256rm
VPMAXUDZ256rm
VPSRAVDZ256rm
VPSLLVDZ256rm
VPROLVDZ256rm
VPSRLVDZ256rm
VPRORVDZ256rm
VPMADDWDZ256rm
VPUNPCKHWDZ256rm
VPUNPCKLWDZ256rm
VPMOVSXWDZ256rm
VPMOVZXWDZ256rm
VMOVDDUPZ256rm
VMOVSHDUPZ256rm
VMOVSLDUPZ256rm
VPSRAQZ256rm
VPSUBQZ256rm
VPMOVSXBQZ256rm
VPMOVZXBQZ256rm
VCVTTPD2DQZ256rm
VCVTPD2DQZ256rm
VCVTTPS2DQZ256rm
VCVTPS2DQZ256rm
VPADDQZ256rm
VPUNPCKHDQZ256rm
VPUNPCKLDQZ256rm
VPMULDQZ256rm
VPANDQZ256rm
VPEXPANDQZ256rm
VPUNPCKHQDQZ256rm
VPUNPCKLQDQZ256rm
VPCLMULQDQZ256rm
VPGATHERDQZ256rm
VCVTTPD2UDQZ256rm
VCVTPD2UDQZ256rm
VCVTTPS2UDQZ256rm
VCVTPS2UDQZ256rm
VPMULUDQZ256rm
VPMOVSXDQZ256rm
VPMOVZXDQZ256rm
VPSLLQZ256rm
VPMULLQZ256rm
VPSRLQZ256rm
VPBLENDMQZ256rm
VPTESTNMQZ256rm
VPERMQZ256rm
VPTESTMQZ256rm
VPANDNQZ256rm
VCVTTPD2QQZ256rm
VCVTPD2QQZ256rm
VCVTTPS2QQZ256rm
VCVTPS2QQZ256rm
VPCMPEQQZ256rm
VPGATHERQQZ256rm
VCVTTPD2UQQZ256rm
VCVTPD2UQQZ256rm
VCVTTPS2UQQZ256rm
VCVTPS2UQQZ256rm
VPORQZ256rm
VPXORQZ256rm
VPABSQZ256rm
VPMINSQZ256rm
VPMAXSQZ256rm
VP2INTERSECTQZ256rm
VPCONFLICTQZ256rm
VPCMPGTQZ256rm
VPOPCNTQZ256rm
VPLZCNTQZ256rm
VPBROADCASTQZ256rm
VPMINUQZ256rm
VPMAXUQZ256rm
VPSRAVQZ256rm
VPSLLVQZ256rm
VPROLVQZ256rm
VPSRLVQZ256rm
VPRORVQZ256rm
VPMOVSXWQZ256rm
VPMOVZXWQZ256rm
VCVTPD2PSZ256rm
VCVTPH2PSZ256rm
VCVTDQ2PSZ256rm
VCVTUDQ2PSZ256rm
VCVTQQ2PSZ256rm
VCVTUQQ2PSZ256rm
VMOVAPSZ256rm
VSUBPSZ256rm
VMINCPSZ256rm
VMAXCPSZ256rm
VADDPSZ256rm
VEXPANDPSZ256rm
VANDPSZ256rm
VGATHERDPSZ256rm
VSCALEFPSZ256rm
VUNPCKHPSZ256rm
VPERMILPSZ256rm
VUNPCKLPSZ256rm
VMULPSZ256rm
VBLENDMPSZ256rm
VPERMPSZ256rm
VANDNPSZ256rm
VMINPSZ256rm
VGATHERQPSZ256rm
VORPSZ256rm
VXORPSZ256rm
VFPCLASSPSZ256rm
VMOVUPSZ256rm
VDIVPSZ256rm
VMAXPSZ256rm
VBROADCASTSSZ256rm
VAESDECLASTZ256rm
VAESENCLASTZ256rm
VPSRAWZ256rm
VPSADBWZ256rm
VPUNPCKHBWZ256rm
VPUNPCKLBWZ256rm
VPSUBWZ256rm
VPMOVSXBWZ256rm
VPMOVZXBWZ256rm
VPADDWZ256rm
VPEXPANDWZ256rm
VPACKSSDWZ256rm
VPACKUSDWZ256rm
VPAVGWZ256rm
VPMULHWZ256rm
VPSLLWZ256rm
VPMULLWZ256rm
VPSRLWZ256rm
VPBLENDMWZ256rm
VPTESTNMWZ256rm
VPERMWZ256rm
VPTESTMWZ256rm
VPCMPEQWZ256rm
VPABSWZ256rm
VPMADDUBSWZ256rm
VPSUBSWZ256rm
VPADDSWZ256rm
VPMINSWZ256rm
VPMULHRSWZ256rm
VPSUBUSWZ256rm
VPADDUSWZ256rm
VPMAXSWZ256rm
VPCMPGTWZ256rm
VPOPCNTWZ256rm
VPBROADCASTWZ256rm
VPMULHUWZ256rm
VPMINUWZ256rm
VPMAXUWZ256rm
VPSRAVWZ256rm
VPSLLVWZ256rm
VPSRLVWZ256rm
VPERMI2B128rm
VPERMT2B128rm
VPERMI2D128rm
VPERMT2D128rm
VPERMI2PD128rm
VPERMT2PD128rm
VPERM2F128rm
VINSERTF128rm
VPERM2I128rm
VINSERTI128rm
VPERMI2Q128rm
VPERMT2Q128rm
VPERMI2PS128rm
VPERMT2PS128rm
VAESKEYGENASSIST128rm
VPERMI2W128rm
VPERMT2W128rm
VMOVDQA32Z128rm
VMOVDQU32Z128rm
VBROADCASTI32X2Z128rm
VBROADCASTF64X2Z128rm
VBROADCASTI64X2Z128rm
VMOVDQA64Z128rm
VMOVDQU64Z128rm
VCVTNE2PS2BF16Z128rm
VCVTNEPS2BF16Z128rm
VMOVDQU16Z128rm
VMOVDQU8Z128rm
VMOVNTDQAZ128rm
VPSUBBZ128rm
VPADDBZ128rm
VPEXPANDBZ128rm
VPSHUFBZ128rm
VPAVGBZ128rm
VGF2P8MULBZ128rm
VPBLENDMBZ128rm
VPTESTNMBZ128rm
VPSHUFBITQMBZ128rm
VPERMBZ128rm
VPTESTMBZ128rm
VPCMPEQBZ128rm
VPMULTISHIFTQBZ128rm
VPABSBZ128rm
VPSUBSBZ128rm
VPADDSBZ128rm
VPMINSBZ128rm
VPSUBUSBZ128rm
VPADDUSBZ128rm
VPMAXSBZ128rm
VPCMPGTBZ128rm
VPOPCNTBZ128rm
VPBROADCASTBZ128rm
VPMINUBZ128rm
VPMAXUBZ128rm
VPACKSSWBZ128rm
VPACKUSWBZ128rm
VAESDECZ128rm
VAESENCZ128rm
VPSRADZ128rm
VPSUBDZ128rm
VPMOVSXBDZ128rm
VPMOVZXBDZ128rm
VPADDDZ128rm
VPANDDZ128rm
VPEXPANDDZ128rm
VPGATHERDDZ128rm
VPSLLDZ128rm
VPMULLDZ128rm
VPSRLDZ128rm
VPBLENDMDZ128rm
VPTESTNMDZ128rm
VPTESTMDZ128rm
VPANDNDZ128rm
VCVTDQ2PDZ128rm
VCVTUDQ2PDZ128rm
VCVTQQ2PDZ128rm
VCVTUQQ2PDZ128rm
VCVTPS2PDZ128rm
VMOVAPDZ128rm
VSUBPDZ128rm
VMINCPDZ128rm
VMAXCPDZ128rm
VADDPDZ128rm
VEXPANDPDZ128rm
VANDPDZ128rm
VGATHERDPDZ128rm
VSCALEFPDZ128rm
VUNPCKHPDZ128rm
VMOVHPDZ128rm
VPERMILPDZ128rm
VUNPCKLPDZ128rm
VMULPDZ128rm
VMOVLPDZ128rm
VBLENDMPDZ128rm
VANDNPDZ128rm
VMINPDZ128rm
VGATHERQPDZ128rm
VORPDZ128rm
VXORPDZ128rm
VFPCLASSPDZ128rm
VMOVUPDZ128rm
VDIVPDZ128rm
VMAXPDZ128rm
VPCMPEQDZ128rm
VPGATHERQDZ128rm
VPORDZ128rm
VPXORDZ128rm
VPABSDZ128rm
VPMINSDZ128rm
VPMAXSDZ128rm
VP2INTERSECTDZ128rm
VPCONFLICTDZ128rm
VPCMPGTDZ128rm
VPOPCNTDZ128rm
VPLZCNTDZ128rm
VPBROADCASTDZ128rm
VPMINUDZ128rm
VPMAXUDZ128rm
VPSRAVDZ128rm
VPSLLVDZ128rm
VPROLVDZ128rm
VPSRLVDZ128rm
VPRORVDZ128rm
VPMADDWDZ128rm
VPUNPCKHWDZ128rm
VPUNPCKLWDZ128rm
VPMOVSXWDZ128rm
VPMOVZXWDZ128rm
VMOVDDUPZ128rm
VMOVSHDUPZ128rm
VMOVSLDUPZ128rm
VPSRAQZ128rm
VPSUBQZ128rm
VPMOVSXBQZ128rm
VPMOVZXBQZ128rm
VCVTTPD2DQZ128rm
VCVTPD2DQZ128rm
VCVTTPS2DQZ128rm
VCVTPS2DQZ128rm
VPADDQZ128rm
VPUNPCKHDQZ128rm
VPUNPCKLDQZ128rm
VPMULDQZ128rm
VPANDQZ128rm
VPEXPANDQZ128rm
VPUNPCKHQDQZ128rm
VPUNPCKLQDQZ128rm
VPCLMULQDQZ128rm
VPGATHERDQZ128rm
VCVTTPD2UDQZ128rm
VCVTPD2UDQZ128rm
VCVTTPS2UDQZ128rm
VCVTPS2UDQZ128rm
VPMULUDQZ128rm
VPMOVSXDQZ128rm
VPMOVZXDQZ128rm
VPSLLQZ128rm
VPMULLQZ128rm
VPSRLQZ128rm
VPBLENDMQZ128rm
VPTESTNMQZ128rm
VPTESTMQZ128rm
VPANDNQZ128rm
VCVTTPD2QQZ128rm
VCVTPD2QQZ128rm
VCVTTPS2QQZ128rm
VCVTPS2QQZ128rm
VPCMPEQQZ128rm
VPGATHERQQZ128rm
VCVTTPD2UQQZ128rm
VCVTPD2UQQZ128rm
VCVTTPS2UQQZ128rm
VCVTPS2UQQZ128rm
VPORQZ128rm
VPXORQZ128rm
VPABSQZ128rm
VPMINSQZ128rm
VPMAXSQZ128rm
VP2INTERSECTQZ128rm
VPCONFLICTQZ128rm
VPCMPGTQZ128rm
VPOPCNTQZ128rm
VPLZCNTQZ128rm
VPBROADCASTQZ128rm
VPMINUQZ128rm
VPMAXUQZ128rm
VPSRAVQZ128rm
VPSLLVQZ128rm
VPROLVQZ128rm
VPSRLVQZ128rm
VPRORVQZ128rm
VPMOVSXWQZ128rm
VPMOVZXWQZ128rm
VCVTPD2PSZ128rm
VCVTPH2PSZ128rm
VCVTDQ2PSZ128rm
VCVTUDQ2PSZ128rm
VCVTQQ2PSZ128rm
VCVTUQQ2PSZ128rm
VMOVAPSZ128rm
VSUBPSZ128rm
VMINCPSZ128rm
VMAXCPSZ128rm
VADDPSZ128rm
VEXPANDPSZ128rm
VANDPSZ128rm
VGATHERDPSZ128rm
VSCALEFPSZ128rm
VUNPCKHPSZ128rm
VMOVHPSZ128rm
VPERMILPSZ128rm
VUNPCKLPSZ128rm
VMULPSZ128rm
VMOVLPSZ128rm
VBLENDMPSZ128rm
VANDNPSZ128rm
VMINPSZ128rm
VGATHERQPSZ128rm
VORPSZ128rm
VXORPSZ128rm
VFPCLASSPSZ128rm
VMOVUPSZ128rm
VDIVPSZ128rm
VMAXPSZ128rm
VBROADCASTSSZ128rm
VAESDECLASTZ128rm
VAESENCLASTZ128rm
VPSRAWZ128rm
VPSADBWZ128rm
VPUNPCKHBWZ128rm
VPUNPCKLBWZ128rm
VPSUBWZ128rm
VPMOVSXBWZ128rm
VPMOVZXBWZ128rm
VPADDWZ128rm
VPEXPANDWZ128rm
VPACKSSDWZ128rm
VPACKUSDWZ128rm
VPAVGWZ128rm
VPMULHWZ128rm
VPSLLWZ128rm
VPMULLWZ128rm
VPSRLWZ128rm
VPBLENDMWZ128rm
VPTESTNMWZ128rm
VPERMWZ128rm
VPTESTMWZ128rm
VPCMPEQWZ128rm
VPABSWZ128rm
VPMADDUBSWZ128rm
VPSUBSWZ128rm
VPADDSWZ128rm
VPMINSWZ128rm
VPMULHRSWZ128rm
VPSUBUSWZ128rm
VPADDUSWZ128rm
VPMAXSWZ128rm
VPCMPGTWZ128rm
VPOPCNTWZ128rm
VPBROADCASTWZ128rm
VPMULHUWZ128rm
VPMINUWZ128rm
VPMAXUWZ128rm
VPSRAVWZ128rm
VPSLLVWZ128rm
VPSRLVWZ128rm
SBB8rm
SUB8rm
ADC8rm
XADD8rm
AND8rm
CMPXCHG8rm
CMP8rm
XOR8rm
MOV8rm
VBROADCASTF32X8rm
VBROADCASTI32X8rm
VMOVNTDQArm
VMOVDQArm
VPERMI2Brm
VPERMT2Brm
VPSHABrm
VPSUBBrm
VPADDBrm
VPSHUFBrm
MMX_PSHUFBrm
VPAVGBrm
VPSHLBrm
VGF2P8MULBrm
VPSIGNBrm
MMX_PSIGNBrm
VPCMPEQBrm
VPINSRBrm
VPABSBrm
MMX_PABSBrm
VPSUBSBrm
VPADDSBrm
VPMINSBrm
VPSUBUSBrm
VPADDUSBrm
PAVGUSBrm
VPMAXSBrm
VPCMPGTBrm
VPROTBrm
VPBROADCASTBrm
VPMINUBrm
PFSUBrm
VPMAXUBrm
VPBLENDVBrm
VPACKSSWBrm
VPACKUSWBrm
PFACCrm
PFNACCrm
PFPNACCrm
VAESDECrm
VAESIMCrm
VAESENCrm
VPERMI2Drm
VPERMT2Drm
VPSHADrm
VPSRADrm
MMX_PSRADrm
VPHADDBDrm
VPHADDUBDrm
VPHSUBDrm
MMX_PHSUBDrm
VPSUBDrm
VPMOVSXBDrm
VPMOVZXBDrm
PFADDrm
VPHADDDrm
MMX_PHADDDrm
VPADDDrm
VPGATHERDDrm
VPMACSDDrm
VPMACSSDDrm
PI2FDrm
PF2IDrm
VPSHLDrm
VPSLLDrm
MMX_PSLLDrm
VPMULLDrm
VPSRLDrm
MMX_PSRLDrm
VPANDrm
VPSIGNDrm
MMX_PSIGNDrm
VPERMI2PDrm
VPERMIL2PDrm
VCVTDQ2PDrm
VCVTPS2PDrm
VPERMT2PDrm
VMOVAPDrm
PSWAPDrm
VADDSUBPDrm
VHSUBPDrm
VSUBPDrm
VMINCPDrm
VMAXCPDrm
VHADDPDrm
VADDPDrm
VANDPDrm
VGATHERDPDrm
VUNPCKHPDrm
VMOVHPDrm
VPERMILPDrm
VUNPCKLPDrm
VMULPDrm
VMOVLPDrm
VANDNPDrm
VMINPDrm
VGATHERQPDrm
VORPDrm
VXORPDrm
VTESTPDrm
VMOVUPDrm
VBLENDVPDrm
VDIVPDrm
VMASKMOVPDrm
VMAXPDrm
VFRCZPDrm
VPCMPEQDrm
VPGATHERQDrm
VPINSRDrm
VCVTSI642SDrm
VCVTSI2SDrm
VCVTSS2SDrm
VPABSDrm
MMX_PABSDrm
VSUBSDrm
VMINCSDrm
VMAXCSDrm
VADDSDrm
VUCOMISDrm
VCOMISDrm
VMULSDrm
VPMINSDrm
VMINSDrm
VCMPSDrm
VP4DPWSSDrm
VPDPWSSDrm
VPDPBUSDrm
VDIVSDrm
VMOVSDrm
VPMAXSDrm
VMAXSDrm
VFRCZSDrm
VPCMPGTDrm
VPROTDrm
VPBROADCASTDrm
VPMINUDrm
VPMAXUDrm
VPSRAVDrm
VPSLLVDrm
VPSRLVDrm
VPMASKMOVDrm
VPHSUBWDrm
VPHADDWDrm
VPMADDWDrm
VPUNPCKHWDrm
VPUNPCKLWDrm
VPMACSWDrm
VPMADCSWDrm
VPMACSSWDrm
VPMADCSSWDrm
VPHADDUWDrm
VPMOVSXWDrm
VPMOVZXWDrm
PFCMPGErm
SHA1NEXTErm
MULX32Hrm
MULX64Hrm
VPMACSDQHrm
VPMACSSDQHrm
VMOVDI2PDIrm
VMOVQI2PQIrm
VMOV64toPQIrm
VPCMPESTRIrm
VPCMPISTRIrm
VCVTTSD2SIrm
VCVTSD2SIrm
VCVTTSS2SIrm
VCVTSS2SIrm
VPMACSDQLrm
VPMACSSDQLrm
PFMULrm
VPCMPESTRMrm
VPCMPISTRMrm
VPANDNrm
PFMINrm
PFRCPrm
VMOVDDUPrm
VMOVSHDUPrm
VMOVSLDUPrm
VPERMI2Qrm
VPERMT2Qrm
VPSHAQrm
VPHADDBQrm
VPHADDUBQrm
VPSUBQrm
VPMOVSXBQrm
VPMOVZXBQrm
VCVTTPD2DQrm
VCVTPD2DQrm
VCVTTPS2DQrm
VCVTPS2DQrm
VPHSUBDQrm
VPADDQrm
VPHADDDQrm
VPUNPCKHDQrm
VPUNPCKLDQrm
VPMULDQrm
VPUNPCKHQDQrm
VPUNPCKLQDQrm
VPCLMULQDQrm
VPGATHERDQrm
VPHADDUDQrm
VPMULUDQrm
VPMOVSXDQrm
VPMOVZXDQrm
PFCMPEQrm
VPSHLQrm
VPSLLQrm
MMX_PSLLQrm
VPSRLQrm
MMX_PSRLQrm
VPCMPEQQrm
VPGATHERQQrm
VPINSRQrm
VPCMPGTQrm
VPROTQrm
VPBROADCASTQrm
VPSLLVQrm
VPSRLVQrm
VPMASKMOVQrm
VPHADDWQrm
VPHADDUWQrm
VPMOVSXWQrm
VPMOVZXWQrm
PFSUBRrm
VPORrm
VPXORrm
VP4DPWSSDSrm
VPDPWSSDSrm
VPDPBUSDSrm
VCVTPD2PSrm
VCVTPH2PSrm
VPERMI2PSrm
VPERMIL2PSrm
VCVTDQ2PSrm
VPERMT2PSrm
VMOVAPSrm
VADDSUBPSrm
VHSUBPSrm
VSUBPSrm
VMINCPSrm
VMAXCPSrm
VHADDPSrm
V4FMADDPSrm
V4FNMADDPSrm
VADDPSrm
VANDPSrm
VGATHERDPSrm
VUNPCKHPSrm
VMOVHPSrm
VPERMILPSrm
VUNPCKLPSrm
VMULPSrm
VMOVLPSrm
VANDNPSrm
VMINPSrm
VGATHERQPSrm
VORPSrm
VXORPSrm
VINSERTPSrm
VTESTPSrm
VMOVUPSrm
VBLENDVPSrm
VDIVPSrm
VMASKMOVPSrm
VMAXPSrm
VFRCZPSrm
VCVTSI642SSrm
VCVTSD2SSrm
VCVTSI2SSrm
VSUBSSrm
VMINCSSrm
VMAXCSSrm
V4FMADDSSrm
V4FNMADDSSrm
VADDSSrm
VUCOMISSrm
VCOMISSrm
VMULSSrm
VMINSSrm
VCMPSSrm
VBROADCASTSSrm
VDIVSSrm
VMOVSSrm
VMAXSSrm
VFRCZSSrm
PFCMPGTrm
PFRSQRTrm
VAESDECLASTrm
VAESENCLASTrm
VPTESTrm
VLDDQUrm
VMOVDQUrm
VPERMI2Wrm
VPERMT2Wrm
VPSHAWrm
VPSRAWrm
MMX_PSRAWrm
VPHSUBBWrm
VPSADBWrm
VPHADDBWrm
VPUNPCKHBWrm
VPUNPCKLBWrm
VPHADDUBWrm
VPHSUBWrm
MMX_PHSUBWrm
VPSUBWrm
VPMOVSXBWrm
VPMOVZXBWrm
VPHADDWrm
MMX_PHADDWrm
VPADDWrm
VPACKSSDWrm
VPACKUSDWrm
PI2FWrm
VPAVGWrm
VPMULHWrm
PF2IWrm
VPSHLWrm
VPSLLWrm
MMX_PSLLWrm
VPMULLWrm
VPSRLWrm
MMX_PSRLWrm
VPSIGNWrm
MMX_PSIGNWrm
VPCMPEQWrm
PMULHRWrm
VPINSRWrm
MMX_PINSRWrm
VPABSWrm
MMX_PABSWrm
VPMADDUBSWrm
MMX_PMADDUBSWrm
VPHSUBSWrm
MMX_PHSUBSWrm
VPSUBSWrm
VPHADDSWrm
MMX_PHADDSWrm
VPADDSWrm
VPMINSWrm
VPMULHRSWrm
MMX_PMULHRSWrm
VPSUBUSWrm
VPADDUSWrm
VPMAXSWrm
VPCMPGTWrm
VPROTWrm
VPBROADCASTWrm
VPMULHUWrm
VPMINUWrm
VPHMINPOSUWrm
VPMAXUWrm
VPMACSWWrm
VPMACSSWWrm
PFMAXrm
BNDLDXrm
VFMADDSUBPD4Yrm
VFMSUBPD4Yrm
VFNMSUBPD4Yrm
VFMSUBADDPD4Yrm
VFMADDPD4Yrm
VFNMADDPD4Yrm
VFMADDSUBPS4Yrm
VFMSUBPS4Yrm
VFNMSUBPS4Yrm
VFMSUBADDPS4Yrm
VFMADDPS4Yrm
VFNMADDPS4Yrm
VMOVNTDQAYrm
VMOVDQAYrm
VPSUBBYrm
VPADDBYrm
VPSHUFBYrm
VPAVGBYrm
VGF2P8MULBYrm
VPSIGNBYrm
VPCMPEQBYrm
VPABSBYrm
VPSUBSBYrm
VPADDSBYrm
VPMINSBYrm
VPSUBUSBYrm
VPADDUSBYrm
VPMAXSBYrm
VPCMPGTBYrm
VPBROADCASTBYrm
VPMINUBYrm
VPMAXUBYrm
VPBLENDVBYrm
VPACKSSWBYrm
VPACKUSWBYrm
VAESDECYrm
VAESENCYrm
VPSRADYrm
VPHSUBDYrm
VPSUBDYrm
VPMOVSXBDYrm
VPMOVZXBDYrm
VPHADDDYrm
VPADDDYrm
VPGATHERDDYrm
VPSLLDYrm
VPMULLDYrm
VPSRLDYrm
VPERMDYrm
VPANDYrm
VPSIGNDYrm
VPERMIL2PDYrm
VCVTDQ2PDYrm
VCVTPS2PDYrm
VMOVAPDYrm
VADDSUBPDYrm
VHSUBPDYrm
VSUBPDYrm
VMINCPDYrm
VMAXCPDYrm
VHADDPDYrm
VADDPDYrm
VANDPDYrm
VGATHERDPDYrm
VUNPCKHPDYrm
VPERMILPDYrm
VUNPCKLPDYrm
VMULPDYrm
VANDNPDYrm
VMINPDYrm
VGATHERQPDYrm
VORPDYrm
VXORPDYrm
VTESTPDYrm
VMOVUPDYrm
VBLENDVPDYrm
VDIVPDYrm
VMASKMOVPDYrm
VMAXPDYrm
VFRCZPDYrm
VPCMPEQDYrm
VPGATHERQDYrm
VPABSDYrm
VPMINSDYrm
VPDPWSSDYrm
VBROADCASTSDYrm
VPDPBUSDYrm
VPMAXSDYrm
VPCMPGTDYrm
VPBROADCASTDYrm
VPMINUDYrm
VPMAXUDYrm
VPSRAVDYrm
VPSLLVDYrm
VPSRLVDYrm
VPMASKMOVDYrm
VPMADDWDYrm
VPUNPCKHWDYrm
VPUNPCKLWDYrm
VPMOVSXWDYrm
VPMOVZXWDYrm
VPANDNYrm
VMOVDDUPYrm
VMOVSHDUPYrm
VMOVSLDUPYrm
VPSUBQYrm
VPMOVSXBQYrm
VPMOVZXBQYrm
VCVTTPD2DQYrm
VCVTPD2DQYrm
VCVTTPS2DQYrm
VCVTPS2DQYrm
VPADDQYrm
VPUNPCKHDQYrm
VPUNPCKLDQYrm
VPMULDQYrm
VPUNPCKHQDQYrm
VPUNPCKLQDQYrm
VPCLMULQDQYrm
VPGATHERDQYrm
VPMULUDQYrm
VPMOVSXDQYrm
VPMOVZXDQYrm
VPSLLQYrm
VPSRLQYrm
VPCMPEQQYrm
VPGATHERQQYrm
VPCMPGTQYrm
VPBROADCASTQYrm
VPSLLVQYrm
VPSRLVQYrm
VPMASKMOVQYrm
VPMOVSXWQYrm
VPMOVZXWQYrm
VPORYrm
VPXORYrm
VPDPWSSDSYrm
VPDPBUSDSYrm
VCVTPD2PSYrm
VCVTPH2PSYrm
VPERMIL2PSYrm
VCVTDQ2PSYrm
VMOVAPSYrm
VADDSUBPSYrm
VHSUBPSYrm
VSUBPSYrm
VMINCPSYrm
VMAXCPSYrm
VHADDPSYrm
VADDPSYrm
VANDPSYrm
VGATHERDPSYrm
VUNPCKHPSYrm
VPERMILPSYrm
VUNPCKLPSYrm
VMULPSYrm
VPERMPSYrm
VANDNPSYrm
VMINPSYrm
VGATHERQPSYrm
VORPSYrm
VXORPSYrm
VTESTPSYrm
VMOVUPSYrm
VBLENDVPSYrm
VDIVPSYrm
VMASKMOVPSYrm
VMAXPSYrm
VFRCZPSYrm
VBROADCASTSSYrm
VAESDECLASTYrm
VAESENCLASTYrm
VPTESTYrm
VLDDQUYrm
VMOVDQUYrm
VPSRAWYrm
VPSADBWYrm
VPUNPCKHBWYrm
VPUNPCKLBWYrm
VPHSUBWYrm
VPSUBWYrm
VPMOVSXBWYrm
VPMOVZXBWYrm
VPHADDWYrm
VPADDWYrm
VPACKSSDWYrm
VPACKUSDWYrm
VPAVGWYrm
VPMULHWYrm
VPSLLWYrm
VPMULLWYrm
VPSRLWYrm
VPSIGNWYrm
VPCMPEQWYrm
VPABSWYrm
VPMADDUBSWYrm
VPHSUBSWYrm
VPSUBSWYrm
VPHADDSWYrm
VPADDSWYrm
VPMINSWYrm
VPMULHRSWYrm
VPSUBUSWYrm
VPADDUSWYrm
VPMAXSWYrm
VPCMPGTWYrm
VPBROADCASTWYrm
VPMULHUWYrm
VPMINUWYrm
VPMAXUWYrm
VMOVDQA32Zrm
VMOVDQU32Zrm
VBROADCASTF32X2Zrm
VBROADCASTI32X2Zrm
VINSERTF64x2Zrm
VINSERTI64x2Zrm
VMOVDQA64Zrm
VCVTTSD2SI64Zrm
VCVTSD2SI64Zrm
VCVTTSS2SI64Zrm
VCVTSS2SI64Zrm
VCVTTSD2USI64Zrm
VCVTTSS2USI64Zrm
VMOVDQU64Zrm
VINSERTF32x4Zrm
VINSERTI32x4Zrm
VINSERTF64x4Zrm
VINSERTI64x4Zrm
VCVTNE2PS2BF16Zrm
VCVTNEPS2BF16Zrm
VMOVDQU16Zrm
VMOVDQU8Zrm
VINSERTF32x8Zrm
VINSERTI32x8Zrm
VMOVNTDQAZrm
VPSUBBZrm
VPADDBZrm
VPEXPANDBZrm
VPSHUFBZrm
VPAVGBZrm
VGF2P8MULBZrm
VPBLENDMBZrm
VPTESTNMBZrm
VPSHUFBITQMBZrm
VPERMBZrm
VPTESTMBZrm
VPCMPEQBZrm
VPMULTISHIFTQBZrm
VPINSRBZrm
VPABSBZrm
VPSUBSBZrm
VPADDSBZrm
VPMINSBZrm
VPSUBUSBZrm
VPADDUSBZrm
VPMAXSBZrm
VPCMPGTBZrm
VPOPCNTBZrm
VPBROADCASTBZrm
VPMINUBZrm
VPMAXUBZrm
VPACKSSWBZrm
VPACKUSWBZrm
VAESDECZrm
VAESENCZrm
VPSRADZrm
VPSUBDZrm
VPMOVSXBDZrm
VPMOVZXBDZrm
VPADDDZrm
VPANDDZrm
VPEXPANDDZrm
VPGATHERDDZrm
VPSLLDZrm
VPMULLDZrm
VPSRLDZrm
VPBLENDMDZrm
VPTESTNMDZrm
VPERMDZrm
VPTESTMDZrm
VPANDNDZrm
VCVTDQ2PDZrm
VCVTUDQ2PDZrm
VCVTQQ2PDZrm
VCVTUQQ2PDZrm
VCVTPS2PDZrm
VMOVAPDZrm
VSUBPDZrm
VMINCPDZrm
VMAXCPDZrm
VADDPDZrm
VEXPANDPDZrm
VANDPDZrm
VGATHERDPDZrm
VSCALEFPDZrm
VUNPCKHPDZrm
VPERMILPDZrm
VUNPCKLPDZrm
VMULPDZrm
VBLENDMPDZrm
VPERMPDZrm
VANDNPDZrm
VMINPDZrm
VGATHERQPDZrm
VORPDZrm
VXORPDZrm
VFPCLASSPDZrm
VMOVUPDZrm
VDIVPDZrm
VMAXPDZrm
VPCMPEQDZrm
VPGATHERQDZrm
VPORDZrm
VPXORDZrm
VPINSRDZrm
VCVTSI642SDZrm
VCVTUSI642SDZrm
VCVTSI2SDZrm
VCVTUSI2SDZrm
VCVTSS2SDZrm
VRCP14SDZrm
VRSQRT14SDZrm
VPABSDZrm
VSUBSDZrm
VMINCSDZrm
VMAXCSDZrm
VADDSDZrm
VSCALEFSDZrm
VUCOMISDZrm
VCOMISDZrm
VMULSDZrm
VPMINSDZrm
VMINSDZrm
VCMPSDZrm
VFPCLASSSDZrm
VBROADCASTSDZrm
VDIVSDZrm
VMOVSDZrm
VPMAXSDZrm
VMAXSDZrm
VP2INTERSECTDZrm
VPCONFLICTDZrm
VPCMPGTDZrm
VPOPCNTDZrm
VPLZCNTDZrm
VPBROADCASTDZrm
VPMINUDZrm
VPMAXUDZrm
VPSRAVDZrm
VPSLLVDZrm
VPROLVDZrm
VPSRLVDZrm
VPRORVDZrm
VPMADDWDZrm
VPUNPCKHWDZrm
VPUNPCKLWDZrm
VPMOVSXWDZrm
VPMOVZXWDZrm
VMOVDI2PDIZrm
VMOVQI2PQIZrm
VMOV64toPQIZrm
VCVTTSD2SIZrm
VCVTSD2SIZrm
VCVTTSS2SIZrm
VCVTSS2SIZrm
VCVTTSD2USIZrm
VCVTTSS2USIZrm
VMOVDDUPZrm
VMOVSHDUPZrm
VMOVSLDUPZrm
VPSRAQZrm
VPSUBQZrm
VPMOVSXBQZrm
VPMOVZXBQZrm
VCVTTPD2DQZrm
VCVTPD2DQZrm
VCVTTPS2DQZrm
VCVTPS2DQZrm
VPADDQZrm
VPUNPCKHDQZrm
VPUNPCKLDQZrm
VPMULDQZrm
VPANDQZrm
VPEXPANDQZrm
VPUNPCKHQDQZrm
VPUNPCKLQDQZrm
VPCLMULQDQZrm
VPGATHERDQZrm
VCVTTPD2UDQZrm
VCVTPD2UDQZrm
VCVTTPS2UDQZrm
VCVTPS2UDQZrm
VPMULUDQZrm
VPMOVSXDQZrm
VPMOVZXDQZrm
VPSLLQZrm
VPMULLQZrm
VPSRLQZrm
VPBLENDMQZrm
VPTESTNMQZrm
VPERMQZrm
VPTESTMQZrm
VPANDNQZrm
VCVTTPD2QQZrm
VCVTPD2QQZrm
VCVTTPS2QQZrm
VCVTPS2QQZrm
VPCMPEQQZrm
VPGATHERQQZrm
VCVTTPD2UQQZrm
VCVTPD2UQQZrm
VCVTTPS2UQQZrm
VCVTPS2UQQZrm
VPORQZrm
VPXORQZrm
VPINSRQZrm
VPABSQZrm
VPMINSQZrm
VPMAXSQZrm
VP2INTERSECTQZrm
VPCONFLICTQZrm
VPCMPGTQZrm
VPOPCNTQZrm
VPLZCNTQZrm
VPBROADCASTQZrm
VPMINUQZrm
VPMAXUQZrm
VPSRAVQZrm
VPSLLVQZrm
VPROLVQZrm
VPSRLVQZrm
VPRORVQZrm
VPMOVSXWQZrm
VPMOVZXWQZrm
VCVTPD2PSZrm
VCVTPH2PSZrm
VCVTDQ2PSZrm
VCVTUDQ2PSZrm
VCVTQQ2PSZrm
VCVTUQQ2PSZrm
VMOVAPSZrm
VSUBPSZrm
VMINCPSZrm
VMAXCPSZrm
VADDPSZrm
VEXPANDPSZrm
VANDPSZrm
VGATHERDPSZrm
VSCALEFPSZrm
VUNPCKHPSZrm
VPERMILPSZrm
VUNPCKLPSZrm
VMULPSZrm
VBLENDMPSZrm
VPERMPSZrm
VANDNPSZrm
VMINPSZrm
VGATHERQPSZrm
VORPSZrm
VXORPSZrm
VFPCLASSPSZrm
VINSERTPSZrm
VMOVUPSZrm
VDIVPSZrm
VMAXPSZrm
VCVTSI642SSZrm
VCVTUSI642SSZrm
VCVTSD2SSZrm
VCVTSI2SSZrm
VCVTUSI2SSZrm
VRCP14SSZrm
VRSQRT14SSZrm
VSUBSSZrm
VMINCSSZrm
VMAXCSSZrm
VADDSSZrm
VSCALEFSSZrm
VUCOMISSZrm
VCOMISSZrm
VMULSSZrm
VMINSSZrm
VCMPSSZrm
VFPCLASSSSZrm
VBROADCASTSSZrm
VDIVSSZrm
VMOVSSZrm
VMAXSSZrm
VAESDECLASTZrm
VAESENCLASTZrm
VPSRAWZrm
VPSADBWZrm
VPUNPCKHBWZrm
VPUNPCKLBWZrm
VPSUBWZrm
VPMOVSXBWZrm
VPMOVZXBWZrm
VPADDWZrm
VPEXPANDWZrm
VPACKSSDWZrm
VPACKUSDWZrm
VPAVGWZrm
VPMULHWZrm
VPSLLWZrm
VPMULLWZrm
VPSRLWZrm
VPBLENDMWZrm
VPTESTNMWZrm
VPERMWZrm
VPTESTMWZrm
VPCMPEQWZrm
VPINSRWZrm
VPABSWZrm
VPMADDUBSWZrm
VPSUBSWZrm
VPADDSWZrm
VPMINSWZrm
VPMULHRSWZrm
VPSUBUSWZrm
VPADDUSWZrm
VPMAXSWZrm
VPCMPGTWZrm
VPOPCNTWZrm
VPBROADCASTWZrm
VPMULHUWZrm
VPMINUWZrm
VPMAXUWZrm
VPSRAVWZrm
VPSLLVWZrm
VPSRLVWZrm
MMX_PSUBBirm
MMX_PADDBirm
MMX_PAVGBirm
MMX_PCMPEQBirm
MMX_PSUBSBirm
MMX_PADDSBirm
MMX_PSUBUSBirm
MMX_PADDUSBirm
MMX_PCMPGTBirm
MMX_PMINUBirm
MMX_PMAXUBirm
MMX_PACKSSWBirm
MMX_PACKUSWBirm
MMX_PSUBDirm
MMX_PADDDirm
MMX_PANDirm
MMX_CVTPI2PDirm
MMX_PCMPEQDirm
MMX_PCMPGTDirm
MMX_PMADDWDirm
MMX_PUNPCKHWDirm
MMX_PUNPCKLWDirm
MMX_CVTTPD2PIirm
MMX_CVTPD2PIirm
MMX_CVTTPS2PIirm
MMX_CVTPS2PIirm
MMX_PANDNirm
MMX_PSUBQirm
MMX_PADDQirm
MMX_PUNPCKHDQirm
MMX_PUNPCKLDQirm
MMX_PMULUDQirm
MMX_PORirm
MMX_PXORirm
MMX_CVTPI2PSirm
MMX_PSADBWirm
MMX_PUNPCKHBWirm
MMX_PUNPCKLBWirm
MMX_PSUBWirm
MMX_PADDWirm
MMX_PACKSSDWirm
MMX_PAVGWirm
MMX_PMULHWirm
MMX_PMULLWirm
MMX_PCMPEQWirm
MMX_PSUBSWirm
MMX_PADDSWirm
MMX_PMINSWirm
MMX_PSUBUSWirm
MMX_PADDUSWirm
MMX_PMAXSWirm
MMX_PCMPGTWirm
MMX_PMULHUWirm
VPPERMrrm
VPCMOVrrm
VPCMOVYrrm
MOV16sm
SEH_StackAlign
EH_SjLj_Setup
SUB_FST0r
ADD_FST0r
MUL_FST0r
COM_FST0r
COMP_FST0r
SUBR_FST0r
DIVR_FST0r
DIV_FST0r
LEA32r
DEC32r
INC32r
MOVPC32r
SETB_C32r
RDSEED32r
RDRAND32r
NEG32r
PUSH32r
CALL32r
IMUL32r
CLZERO32r
BSWAP32r
JMP32r
POP32r
STR32r
SLDT32r
NOT32r
IDIV32r
SMSW32r
LEA64_32r
LEA64r
DEC64r
INC64r
SETB_C64r
RDSEED64r
RDRAND64r
PTWRITE64r
NEG64r
PUSH64r
CALL64r
IMUL64r
CLZERO64r
BSWAP64r
JMP64r
POP64r
STR64r
SLDT64r
NOT64r
IDIV64r
SMSW64r
LEA16r
DEC16r
INC16r
RDSEED16r
RDRAND16r
NEG16r
PUSH16r
CALL16r
IMUL16r
JMP16r
POP16r
STR16r
LLDT16r
SLDT16r
NOT16r
IDIV16r
LMSW16r
SMSW16r
FNSTSW16r
VFMADDSUB231PDZ256r
VFMSUB231PDZ256r
VFNMSUB231PDZ256r
VFMSUBADD231PDZ256r
VFMADD231PDZ256r
VFNMADD231PDZ256r
VFMADDSUB132PDZ256r
VFMSUB132PDZ256r
VFNMSUB132PDZ256r
VFMSUBADD132PDZ256r
VFMADD132PDZ256r
VFNMADD132PDZ256r
VFMADDSUB213PDZ256r
VFMSUB213PDZ256r
VFNMSUB213PDZ256r
VFMSUBADD213PDZ256r
VFMADD213PDZ256r
VFNMADD213PDZ256r
VRCP14PDZ256r
VRSQRT14PDZ256r
VGETEXPPDZ256r
VSQRTPDZ256r
VPDPWSSDZ256r
VPDPBUSDZ256r
VPSHLDVDZ256r
VPSHRDVDZ256r
VPMADD52HUQZ256r
VPMADD52LUQZ256r
VPSHLDVQZ256r
VPSHRDVQZ256r
VPDPWSSDSZ256r
VPDPBUSDSZ256r
VFMADDSUB231PSZ256r
VFMSUB231PSZ256r
VFNMSUB231PSZ256r
VFMSUBADD231PSZ256r
VFMADD231PSZ256r
VFNMADD231PSZ256r
VFMADDSUB132PSZ256r
VFMSUB132PSZ256r
VFNMSUB132PSZ256r
VFMSUBADD132PSZ256r
VFMADD132PSZ256r
VFNMADD132PSZ256r
VFMADDSUB213PSZ256r
VFMSUB213PSZ256r
VFNMSUB213PSZ256r
VFMSUBADD213PSZ256r
VFMADD213PSZ256r
VFNMADD213PSZ256r
VRCP14PSZ256r
VRSQRT14PSZ256r
VDPBF16PSZ256r
VGETEXPPSZ256r
VSQRTPSZ256r
VPSHLDVWZ256r
VPSHRDVWZ256r
VFMADDSUB231PDZ128r
VFMSUB231PDZ128r
VFNMSUB231PDZ128r
VFMSUBADD231PDZ128r
VFMADD231PDZ128r
VFNMADD231PDZ128r
VFMADDSUB132PDZ128r
VFMSUB132PDZ128r
VFNMSUB132PDZ128r
VFMSUBADD132PDZ128r
VFMADD132PDZ128r
VFNMADD132PDZ128r
VFMADDSUB213PDZ128r
VFMSUB213PDZ128r
VFNMSUB213PDZ128r
VFMSUBADD213PDZ128r
VFMADD213PDZ128r
VFNMADD213PDZ128r
VRCP14PDZ128r
VRSQRT14PDZ128r
VGETEXPPDZ128r
VSQRTPDZ128r
VPDPWSSDZ128r
VPDPBUSDZ128r
VPSHLDVDZ128r
VPSHRDVDZ128r
VPMADD52HUQZ128r
VPMADD52LUQZ128r
VPSHLDVQZ128r
VPSHRDVQZ128r
VPDPWSSDSZ128r
VPDPBUSDSZ128r
VFMADDSUB231PSZ128r
VFMSUB231PSZ128r
VFNMSUB231PSZ128r
VFMSUBADD231PSZ128r
VFMADD231PSZ128r
VFNMADD231PSZ128r
VFMADDSUB132PSZ128r
VFMSUB132PSZ128r
VFNMSUB132PSZ128r
VFMSUBADD132PSZ128r
VFMADD132PSZ128r
VFNMADD132PSZ128r
VFMADDSUB213PSZ128r
VFMSUB213PSZ128r
VFNMSUB213PSZ128r
VFMSUBADD213PSZ128r
VFMADD213PSZ128r
VFNMADD213PSZ128r
VRCP14PSZ128r
VRSQRT14PSZ128r
VDPBF16PSZ128r
VGETEXPPSZ128r
VSQRTPSZ128r
VPSHLDVWZ128r
VPSHRDVWZ128r
DEC8r
INC8r
NEG8r
IMUL8r
NOT8r
IDIV8r
SETCCr
VFMADDSUB231PDr
VFMSUB231PDr
VFNMSUB231PDr
VFMSUBADD231PDr
VFMADD231PDr
VFNMADD231PDr
VFMADDSUB132PDr
VFMSUB132PDr
VFNMSUB132PDr
VFMSUBADD132PDr
VFMADD132PDr
VFNMADD132PDr
VFMADDSUB213PDr
VFMSUB213PDr
VFNMSUB213PDr
VFMSUBADD213PDr
VFMADD213PDr
VFNMADD213PDr
VROUNDPDr
VSQRTPDr
VFMSUB231SDr
VFNMSUB231SDr
VFMADD231SDr
VFNMADD231SDr
VFMSUB132SDr
VFNMSUB132SDr
VFMADD132SDr
VFNMADD132SDr
VFMSUB213SDr
VFNMSUB213SDr
VFMADD213SDr
VFNMADD213SDr
VROUNDSDr
VSQRTSDr
PTWRITEr
UCOM_Fr
UCOM_FIr
UD1Lr
NOOPLr
UCOM_FPr
UCOM_FIPr
TAILJMPr
UCOM_FPPr
UD1Qr
NOOPQr
VERRr
LTRr
VFMADDSUB231PSr
VFMSUB231PSr
VFNMSUB231PSr
VFMSUBADD231PSr
VFMADD231PSr
VFNMADD231PSr
VFMADDSUB132PSr
VFMSUB132PSr
VFNMSUB132PSr
VFMSUBADD132PSr
VFMADD132PSr
VFNMADD132PSr
VFMADDSUB213PSr
VFMSUB213PSr
VFNMSUB213PSr
VFMSUBADD213PSr
VFMADD213PSr
VFNMADD213PSr
VROUNDPSr
VRCPPSr
VRSQRTPSr
VSQRTPSr
VFMSUB231SSr
VFNMSUB231SSr
VFMADD231SSr
VFNMADD231SSr
VFMSUB132SSr
VFNMSUB132SSr
VFMADD132SSr
VFNMADD132SSr
VFMSUB213SSr
VFNMSUB213SSr
VFMADD213SSr
VFNMADD213SSr
VROUNDSSr
VRCPSSr
VRSQRTSSr
VSQRTSSr
RDPKRUr
WRPKRUr
UD1Wr
NOOPWr
VERWr
VFMADDSUB231PDYr
VFMSUB231PDYr
VFNMSUB231PDYr
VFMSUBADD231PDYr
VFMADD231PDYr
VFNMADD231PDYr
VFMADDSUB132PDYr
VFMSUB132PDYr
VFNMSUB132PDYr
VFMSUBADD132PDYr
VFMADD132PDYr
VFNMADD132PDYr
VFMADDSUB213PDYr
VFMSUB213PDYr
VFNMSUB213PDYr
VFMSUBADD213PDYr
VFMADD213PDYr
VFNMADD213PDYr
VROUNDPDYr
VSQRTPDYr
VFMADDSUB231PSYr
VFMSUB231PSYr
VFNMSUB231PSYr
VFMSUBADD231PSYr
VFMADD231PSYr
VFNMADD231PSYr
VFMADDSUB132PSYr
VFMSUB132PSYr
VFNMSUB132PSYr
VFMSUBADD132PSYr
VFMADD132PSYr
VFNMADD132PSYr
VFMADDSUB213PSYr
VFMSUB213PSYr
VFNMSUB213PSYr
VFMSUBADD213PSYr
VFMADD213PSYr
VFNMADD213PSYr
VROUNDPSYr
VRCPPSYr
VRSQRTPSYr
VSQRTPSYr
VFMADDSUB231PDZr
VFMSUB231PDZr
VFNMSUB231PDZr
VFMSUBADD231PDZr
VFMADD231PDZr
VFNMADD231PDZr
VFMADDSUB132PDZr
VFMSUB132PDZr
VFNMSUB132PDZr
VFMSUBADD132PDZr
VFMADD132PDZr
VFNMADD132PDZr
VEXP2PDZr
VFMADDSUB213PDZr
VFMSUB213PDZr
VFNMSUB213PDZr
VFMSUBADD213PDZr
VFMADD213PDZr
VFNMADD213PDZr
VRCP14PDZr
VRSQRT14PDZr
VRCP28PDZr
VRSQRT28PDZr
VGETEXPPDZr
VSQRTPDZr
VFMSUB231SDZr
VFNMSUB231SDZr
VFMADD231SDZr
VFNMADD231SDZr
VFMSUB132SDZr
VFNMSUB132SDZr
VFMADD132SDZr
VFNMADD132SDZr
VFMSUB213SDZr
VFNMSUB213SDZr
VFMADD213SDZr
VFNMADD213SDZr
VRCP28SDZr
VRSQRT28SDZr
VRNDSCALESDZr
VGETEXPSDZr
VPDPWSSDZr
VSQRTSDZr
VPDPBUSDZr
VPSHLDVDZr
VPSHRDVDZr
VPMADD52HUQZr
VPMADD52LUQZr
VPSHLDVQZr
VPSHRDVQZr
VPDPWSSDSZr
VPDPBUSDSZr
VFMADDSUB231PSZr
VFMSUB231PSZr
VFNMSUB231PSZr
VFMSUBADD231PSZr
VFMADD231PSZr
VFNMADD231PSZr
VFMADDSUB132PSZr
VFMSUB132PSZr
VFNMSUB132PSZr
VFMSUBADD132PSZr
VFMADD132PSZr
VFNMADD132PSZr
VEXP2PSZr
VFMADDSUB213PSZr
VFMSUB213PSZr
VFNMSUB213PSZr
VFMSUBADD213PSZr
VFMADD213PSZr
VFNMADD213PSZr
VRCP14PSZr
VRSQRT14PSZr
VDPBF16PSZr
VRCP28PSZr
VRSQRT28PSZr
VGETEXPPSZr
VSQRTPSZr
VFMSUB231SSZr
VFNMSUB231SSZr
VFMADD231SSZr
VFNMADD231SSZr
VFMSUB132SSZr
VFNMSUB132SSZr
VFMADD132SSZr
VFNMADD132SSZr
VFMSUB213SSZr
VFNMSUB213SSZr
VFMADD213SSZr
VFNMADD213SSZr
VRCP28SSZr
VRSQRT28SSZr
VRNDSCALESSZr
VGETEXPSSZr
VSQRTSSZr
VPSHLDVWZr
VPSHRDVWZr
XCHG32ar
XCHG64ar
XCHG16ar
MOV32cr
MOV64cr
MOV32dr
MOV64dr
Int_MemBarrier
OUT32ir
OUT16ir
OUT8ir
KMOVBkr
KMOVDkr
KMOVQkr
KMOVWkr
SBB32mr
LOCK_SUB32mr
ADC32mr
BTC32mr
VMREAD32mr
LOCK_ADD32mr
LOCK_AND32mr
MOVBE32mr
CMP32mr
LOCK_XOR32mr
LOCK_OR32mr
BTR32mr
BTS32mr
BT32mr
TEST32mr
BNDMOV32mr
SBB64mr
LOCK_SUB64mr
ADC64mr
BTC64mr
VMREAD64mr
LOCK_ADD64mr
LOCK_AND64mr
MMX_MOVD64mr
MOVBE64mr
CMP64mr
MMX_MOVQ64mr
LOCK_XOR64mr
LOCK_OR64mr
BTR64mr
BTS64mr
BT64mr
TEST64mr
BNDMOV64mr
MOVNTI_64mr
VMOVPQIto64mr
VFMADDSUBPD4mr
VFMSUBPD4mr
VFNMSUBPD4mr
VFMSUBADDPD4mr
VFMADDPD4mr
VFNMADDPD4mr
VFMSUBSD4mr
VFNMSUBSD4mr
VFMADDSD4mr
VFNMADDSD4mr
VFMADDSUBPS4mr
VFMSUBPS4mr
VFNMSUBPS4mr
VFMSUBADDPS4mr
VFMADDPS4mr
VFNMADDPS4mr
VFMSUBSS4mr
VFNMSUBSS4mr
VFMADDSS4mr
VFNMADDSS4mr
SBB16mr
LOCK_SUB16mr
ADC16mr
BTC16mr
LOCK_ADD16mr
LOCK_AND16mr
MOVBE16mr
ARPL16mr
CMP16mr
LOCK_XOR16mr
LOCK_OR16mr
BTR16mr
BTS16mr
BT16mr
TEST16mr
MOV16mr
VMOVDQA32Z256mr
VMOVDQU32Z256mr
VEXTRACTF64x2Z256mr
VEXTRACTI64x2Z256mr
VMOVDQA64Z256mr
VMOVDQU64Z256mr
VEXTRACTF32x4Z256mr
VEXTRACTI32x4Z256mr
VMOVDQU16Z256mr
VMOVDQU8Z256mr
VPMOVUSDBZ256mr
VPMOVSDBZ256mr
VPMOVDBZ256mr
VPMOVUSQBZ256mr
VPMOVSQBZ256mr
VPMOVQBZ256mr
VPCOMPRESSBZ256mr
VPMOVUSWBZ256mr
VPMOVSWBZ256mr
VPMOVWBZ256mr
VPSCATTERDDZ256mr
VMOVAPDZ256mr
VSCATTERDPDZ256mr
VSCATTERQPDZ256mr
VCOMPRESSPDZ256mr
VMOVNTPDZ256mr
VMOVUPDZ256mr
VPSCATTERQDZ256mr
VPMOVUSQDZ256mr
VPMOVSQDZ256mr
VPMOVQDZ256mr
VPCOMPRESSDZ256mr
VCVTPS2PHZ256mr
VPSCATTERDQZ256mr
VMOVNTDQZ256mr
VPSCATTERQQZ256mr
VPCOMPRESSQZ256mr
VMOVAPSZ256mr
VSCATTERDPSZ256mr
VSCATTERQPSZ256mr
VCOMPRESSPSZ256mr
VMOVNTPSZ256mr
VMOVUPSZ256mr
VPMOVUSDWZ256mr
VPMOVSDWZ256mr
VPMOVDWZ256mr
VPMOVUSQWZ256mr
VPMOVSQWZ256mr
VPMOVQWZ256mr
VPCOMPRESSWZ256mr
VEXTRACTF128mr
VEXTRACTI128mr
VMOVDQA32Z128mr
VMOVDQU32Z128mr
VMOVDQA64Z128mr
VMOVDQU64Z128mr
VMOVDQU16Z128mr
VMOVDQU8Z128mr
VPMOVUSDBZ128mr
VPMOVSDBZ128mr
VPMOVDBZ128mr
VPMOVUSQBZ128mr
VPMOVSQBZ128mr
VPMOVQBZ128mr
VPCOMPRESSBZ128mr
VPMOVUSWBZ128mr
VPMOVSWBZ128mr
VPMOVWBZ128mr
VPSCATTERDDZ128mr
VMOVAPDZ128mr
VSCATTERDPDZ128mr
VMOVHPDZ128mr
VMOVLPDZ128mr
VSCATTERQPDZ128mr
VCOMPRESSPDZ128mr
VMOVNTPDZ128mr
VMOVUPDZ128mr
VPSCATTERQDZ128mr
VPMOVUSQDZ128mr
VPMOVSQDZ128mr
VPMOVQDZ128mr
VPCOMPRESSDZ128mr
VCVTPS2PHZ128mr
VPSCATTERDQZ128mr
VMOVNTDQZ128mr
VPSCATTERQQZ128mr
VPCOMPRESSQZ128mr
VMOVAPSZ128mr
VSCATTERDPSZ128mr
VMOVHPSZ128mr
VMOVLPSZ128mr
VSCATTERQPSZ128mr
VCOMPRESSPSZ128mr
VMOVNTPSZ128mr
VMOVUPSZ128mr
VPMOVUSDWZ128mr
VPMOVSDWZ128mr
VPMOVDWZ128mr
VPMOVUSQWZ128mr
VPMOVSQWZ128mr
VPMOVQWZ128mr
VPCOMPRESSWZ128mr
SBB8mr
LOCK_SUB8mr
ADC8mr
LOCK_ADD8mr
LOCK_AND8mr
CMP8mr
LOCK_XOR8mr
LOCK_OR8mr
TEST8mr
MOV8mr
VMOVDQAmr
VPSHABmr
VPSHLBmr
VPEXTRBmr
VPROTBmr
VPSHADmr
VPSHLDmr
VPERMIL2PDmr
VMOVAPDmr
VMOVHPDmr
VMOVLPDmr
VMOVNTPDmr
VMOVUPDmr
VMASKMOVPDmr
VPEXTRDmr
VMOVSDmr
VPROTDmr
VPMASKMOVDmr
VCVTPS2PHmr
VMOVPDI2DImr
VMOVPQI2QImr
MOVNTImr
VPSHAQmr
VMOVNTDQmr
VPSHLQmr
VPEXTRQmr
MMX_MOVNTQmr
VPROTQmr
VPMASKMOVQmr
VPERMIL2PSmr
VMOVAPSmr
VMOVHPSmr
VMOVLPSmr
VEXTRACTPSmr
VMOVNTPSmr
VMOVUPSmr
VMASKMOVPSmr
VMOVSSmr
VMOVDQUmr
VPSHAWmr
VPSHLWmr
VPEXTRWmr
VPROTWmr
BNDSTXmr
VFMADDSUBPD4Ymr
VFMSUBPD4Ymr
VFNMSUBPD4Ymr
VFMSUBADDPD4Ymr
VFMADDPD4Ymr
VFNMADDPD4Ymr
VFMADDSUBPS4Ymr
VFMSUBPS4Ymr
VFNMSUBPS4Ymr
VFMSUBADDPS4Ymr
VFMADDPS4Ymr
VFNMADDPS4Ymr
VMOVDQAYmr
VPERMIL2PDYmr
VMOVAPDYmr
VMOVNTPDYmr
VMOVUPDYmr
VMASKMOVPDYmr
VPMASKMOVDYmr
VCVTPS2PHYmr
VMOVNTDQYmr
VPMASKMOVQYmr
VPERMIL2PSYmr
VMOVAPSYmr
VMOVNTPSYmr
VMOVUPSYmr
VMASKMOVPSYmr
VMOVDQUYmr
VMOVDQA32Zmr
VMOVDQU32Zmr
VEXTRACTF64x2Zmr
VEXTRACTI64x2Zmr
VMOVDQA64Zmr
VMOVDQU64Zmr
VMOVPQIto64Zmr
VEXTRACTF32x4Zmr
VEXTRACTI32x4Zmr
VEXTRACTF64x4Zmr
VEXTRACTI64x4Zmr
VMOVDQU16Zmr
VMOVDQU8Zmr
VEXTRACTF32x8Zmr
VEXTRACTI32x8Zmr
VPMOVUSDBZmr
VPMOVSDBZmr
VPMOVDBZmr
VPMOVUSQBZmr
VPMOVSQBZmr
VPMOVQBZmr
VPEXTRBZmr
VPCOMPRESSBZmr
VPMOVUSWBZmr
VPMOVSWBZmr
VPMOVWBZmr
VPSCATTERDDZmr
VMOVAPDZmr
VSCATTERDPDZmr
VSCATTERQPDZmr
VCOMPRESSPDZmr
VMOVNTPDZmr
VMOVUPDZmr
VPSCATTERQDZmr
VPMOVUSQDZmr
VPMOVSQDZmr
VPMOVQDZmr
VPEXTRDZmr
VPCOMPRESSDZmr
VMOVSDZmr
VCVTPS2PHZmr
VMOVPDI2DIZmr
VMOVPQI2QIZmr
VPSCATTERDQZmr
VMOVNTDQZmr
VPSCATTERQQZmr
VPEXTRQZmr
VPCOMPRESSQZmr
VMOVAPSZmr
VSCATTERDPSZmr
VSCATTERQPSZmr
VCOMPRESSPSZmr
VEXTRACTPSZmr
VMOVNTPSZmr
VMOVUPSZmr
VMOVSSZmr
VPMOVUSDWZmr
VPMOVSDWZmr
VPMOVDWZmr
VPMOVUSQWZmr
VPMOVSQWZmr
VPMOVQWZmr
VPEXTRWZmr
VPCOMPRESSWZmr
PUSH32rmr
POP32rmr
PUSH64rmr
POP64rmr
PUSH16rmr
POP16rmr
VPPERMrmr
VPCMOVrmr
VPCMOVYrmr
SHA1MSG1rr
SHA256MSG1rr
PFRCPIT1rr
PFRSQIT1rr
SBB32rr
SUB32rr
ADC32rr
BLCIC32rr
BLSIC32rr
T1MSKC32rr
BTC32rr
VMREAD32rr
XADD32rr
AND32rr
VMWRITE32rr
BSF32rr
CMPXCHG32rr
BLCI32rr
BZHI32rr
BLSI32rr
BLCMSK32rr
BLSMSK32rr
TZMSK32rr
BNDCL32rr
BLCFILL32rr
BLSFILL32rr
LSL32rr
IMUL32rr
BNDCN32rr
ANDN32rr
IN32rr
PDEP32rr
CMP32rr
LAR32rr
XOR32rr
BSR32rr
BLSR32rr
BTR32rr
BEXTR32rr
BLCS32rr
BTS32rr
BT32rr
POPCNT32rr
LZCNT32rr
TZCNT32rr
TEST32rr
OUT32rr
PEXT32rr
BNDCU32rr
CMOV32rr
ADCX32rr
SHLX32rr
MULX32rr
ADOX32rr
SARX32rr
SHRX32rr
SHA1MSG2rr
SHA256MSG2rr
SHA256RNDS2rr
PFRCPIT2rr
SBB64rr
SUB64rr
ADC64rr
BLCIC64rr
BLSIC64rr
T1MSKC64rr
BTC64rr
VMREAD64rr
XADD64rr
AND64rr
MMX_MOVD64rr
VMWRITE64rr
BSF64rr
CMPXCHG64rr
BLCI64rr
BZHI64rr
VCVTTSD2SI64rr
VCVTSD2SI64rr
VCVTTSS2SI64rr
VCVTSS2SI64rr
BLSI64rr
BLCMSK64rr
BLSMSK64rr
TZMSK64rr
BNDCL64rr
BLCFILL64rr
BLSFILL64rr
LSL64rr
IMUL64rr
BNDCN64rr
ANDN64rr
PDEP64rr
CMP64rr
MMX_MOVQ64rr
LAR64rr
MMX_MOVQ2FR64rr
XOR64rr
BSR64rr
BLSR64rr
BTR64rr
BEXTR64rr
BLCS64rr
BTS64rr
BT64rr
POPCNT64rr
LZCNT64rr
TZCNT64rr
TEST64rr
PEXT64rr
BNDCU64rr
CMOV64rr
ADCX64rr
SHLX64rr
MULX64rr
ADOX64rr
SARX64rr
SHRX64rr
MMX_MOVD64from64rr
MMX_MOVD64to64rr
VMOVSDto64rr
VMOVPQIto64rr
VFMADDSUBPD4rr
VFMSUBPD4rr
VFNMSUBPD4rr
VFMSUBADDPD4rr
VFMADDPD4rr
VFNMADDPD4rr
VFMSUBSD4rr
VFNMSUBSD4rr
VFMADDSD4rr
VFNMADDSD4rr
VFMADDSUBPS4rr
VFMSUBPS4rr
VFNMSUBPS4rr
VFMSUBADDPS4rr
VFMADDPS4rr
VFNMADDPS4rr
VFMSUBSS4rr
VFNMSUBSS4rr
VFMADDSS4rr
VFNMADDSS4rr
SBB16rr
SUB16rr
ADC16rr
BTC16rr
XADD16rr
AND16rr
BSF16rr
CMPXCHG16rr
ARPL16rr
LSL16rr
IMUL16rr
IN16rr
CMP16rr
LAR16rr
XOR16rr
BSR16rr
BTR16rr
BTS16rr
BT16rr
POPCNT16rr
LZCNT16rr
TZCNT16rr
TEST16rr
OUT16rr
CMOV16rr
VPERMI2B256rr
VPERMT2B256rr
VPERMI2D256rr
VPERMT2D256rr
VPERMI2PD256rr
VPERMT2PD256rr
VPERMI2Q256rr
VPERMT2Q256rr
VPERMI2PS256rr
VPERMT2PS256rr
VPERMI2W256rr
VPERMT2W256rr
VMOVDQA32Z256rr
VMOVDQU32Z256rr
VBROADCASTF32X2Z256rr
VBROADCASTI32X2Z256rr
VEXTRACTF64x2Z256rr
VINSERTF64x2Z256rr
VEXTRACTI64x2Z256rr
VINSERTI64x2Z256rr
VMOVDQA64Z256rr
VMOVDQU64Z256rr
VEXTRACTF32x4Z256rr
VINSERTF32x4Z256rr
VEXTRACTI32x4Z256rr
VINSERTI32x4Z256rr
VCVTNE2PS2BF16Z256rr
VCVTNEPS2BF16Z256rr
VMOVDQU16Z256rr
VMOVDQU8Z256rr
VPMOVM2BZ256rr
VPSUBBZ256rr
VPADDBZ256rr
VPEXPANDBZ256rr
VPMOVUSDBZ256rr
VPMOVSDBZ256rr
VPMOVDBZ256rr
VPSHUFBZ256rr
VPAVGBZ256rr
VGF2P8MULBZ256rr
VPBLENDMBZ256rr
VPTESTNMBZ256rr
VPSHUFBITQMBZ256rr
VPERMBZ256rr
VPTESTMBZ256rr
VPCMPEQBZ256rr
VPMOVUSQBZ256rr
VPMOVSQBZ256rr
VPMULTISHIFTQBZ256rr
VPMOVQBZ256rr
VPABSBZ256rr
VPSUBSBZ256rr
VPADDSBZ256rr
VPMINSBZ256rr
VPCOMPRESSBZ256rr
VPSUBUSBZ256rr
VPADDUSBZ256rr
VPMAXSBZ256rr
VPCMPGTBZ256rr
VPOPCNTBZ256rr
VPBROADCASTBZ256rr
VPMINUBZ256rr
VPMAXUBZ256rr
VPACKSSWBZ256rr
VPACKUSWBZ256rr
VPMOVUSWBZ256rr
VPMOVSWBZ256rr
VPMOVWBZ256rr
VAESDECZ256rr
VAESENCZ256rr
VPMOVM2DZ256rr
VPBROADCASTMW2DZ256rr
VPSRADZ256rr
VPSUBDZ256rr
VPMOVSXBDZ256rr
VPMOVZXBDZ256rr
VPADDDZ256rr
VPANDDZ256rr
VPEXPANDDZ256rr
VPSLLDZ256rr
VPMULLDZ256rr
VPSRLDZ256rr
VPBLENDMDZ256rr
VPTESTNMDZ256rr
VPERMDZ256rr
VPTESTMDZ256rr
VPANDNDZ256rr
VCVTDQ2PDZ256rr
VCVTUDQ2PDZ256rr
VCVTQQ2PDZ256rr
VCVTUQQ2PDZ256rr
VCVTPS2PDZ256rr
VMOVAPDZ256rr
VSUBPDZ256rr
VMINCPDZ256rr
VMAXCPDZ256rr
VADDPDZ256rr
VEXPANDPDZ256rr
VANDPDZ256rr
VSCALEFPDZ256rr
VUNPCKHPDZ256rr
VPERMILPDZ256rr
VUNPCKLPDZ256rr
VMULPDZ256rr
VBLENDMPDZ256rr
VPERMPDZ256rr
VANDNPDZ256rr
VMINPDZ256rr
VORPDZ256rr
VXORPDZ256rr
VFPCLASSPDZ256rr
VCOMPRESSPDZ256rr
VMOVUPDZ256rr
VDIVPDZ256rr
VMAXPDZ256rr
VPCMPEQDZ256rr
VPMOVUSQDZ256rr
VPMOVSQDZ256rr
VPMOVQDZ256rr
VPORDZ256rr
VPXORDZ256rr
VPABSDZ256rr
VPMINSDZ256rr
VPCOMPRESSDZ256rr
VBROADCASTSDZ256rr
VPMAXSDZ256rr
VP2INTERSECTDZ256rr
VPCONFLICTDZ256rr
VPCMPGTDZ256rr
VPOPCNTDZ256rr
VPLZCNTDZ256rr
VPBROADCASTDZ256rr
VPMINUDZ256rr
VPMAXUDZ256rr
VPSRAVDZ256rr
VPSLLVDZ256rr
VPROLVDZ256rr
VPSRLVDZ256rr
VPRORVDZ256rr
VPMADDWDZ256rr
VPUNPCKHWDZ256rr
VPUNPCKLWDZ256rr
VPMOVSXWDZ256rr
VPMOVZXWDZ256rr
VCVTPS2PHZ256rr
VPMOVB2MZ256rr
VPMOVD2MZ256rr
VPMOVQ2MZ256rr
VPMOVW2MZ256rr
VMOVDDUPZ256rr
VMOVSHDUPZ256rr
VMOVSLDUPZ256rr
VPBROADCASTMB2QZ256rr
VPMOVM2QZ256rr
VPSRAQZ256rr
VPSUBQZ256rr
VPMOVSXBQZ256rr
VPMOVZXBQZ256rr
VCVTTPD2DQZ256rr
VCVTPD2DQZ256rr
VCVTTPS2DQZ256rr
VCVTPS2DQZ256rr
VPADDQZ256rr
VPUNPCKHDQZ256rr
VPUNPCKLDQZ256rr
VPMULDQZ256rr
VPANDQZ256rr
VPEXPANDQZ256rr
VPUNPCKHQDQZ256rr
VPUNPCKLQDQZ256rr
VPCLMULQDQZ256rr
VCVTTPD2UDQZ256rr
VCVTPD2UDQZ256rr
VCVTTPS2UDQZ256rr
VCVTPS2UDQZ256rr
VPMULUDQZ256rr
VPMOVSXDQZ256rr
VPMOVZXDQZ256rr
VPSLLQZ256rr
VPMULLQZ256rr
VPSRLQZ256rr
VPBLENDMQZ256rr
VPTESTNMQZ256rr
VPERMQZ256rr
VPTESTMQZ256rr
VPANDNQZ256rr
VCVTTPD2QQZ256rr
VCVTPD2QQZ256rr
VCVTTPS2QQZ256rr
VCVTPS2QQZ256rr
VPCMPEQQZ256rr
VCVTTPD2UQQZ256rr
VCVTPD2UQQZ256rr
VCVTTPS2UQQZ256rr
VCVTPS2UQQZ256rr
VPORQZ256rr
VPXORQZ256rr
VPABSQZ256rr
VPMINSQZ256rr
VPCOMPRESSQZ256rr
VPMAXSQZ256rr
VP2INTERSECTQZ256rr
VPCONFLICTQZ256rr
VPCMPGTQZ256rr
VPOPCNTQZ256rr
VPLZCNTQZ256rr
VPBROADCASTQZ256rr
VPMINUQZ256rr
VPMAXUQZ256rr
VPSRAVQZ256rr
VPSLLVQZ256rr
VPROLVQZ256rr
VPSRLVQZ256rr
VPRORVQZ256rr
VPMOVSXWQZ256rr
VPMOVZXWQZ256rr
VCVTPD2PSZ256rr
VCVTPH2PSZ256rr
VCVTDQ2PSZ256rr
VCVTUDQ2PSZ256rr
VCVTQQ2PSZ256rr
VCVTUQQ2PSZ256rr
VMOVAPSZ256rr
VSUBPSZ256rr
VMINCPSZ256rr
VMAXCPSZ256rr
VADDPSZ256rr
VEXPANDPSZ256rr
VANDPSZ256rr
VSCALEFPSZ256rr
VUNPCKHPSZ256rr
VPERMILPSZ256rr
VUNPCKLPSZ256rr
VMULPSZ256rr
VBLENDMPSZ256rr
VPERMPSZ256rr
VANDNPSZ256rr
VMINPSZ256rr
VORPSZ256rr
VXORPSZ256rr
VFPCLASSPSZ256rr
VCOMPRESSPSZ256rr
VMOVUPSZ256rr
VDIVPSZ256rr
VMAXPSZ256rr
VBROADCASTSSZ256rr
VAESDECLASTZ256rr
VAESENCLASTZ256rr
VPMOVM2WZ256rr
VPSRAWZ256rr
VPSADBWZ256rr
VPUNPCKHBWZ256rr
VPUNPCKLBWZ256rr
VPSUBWZ256rr
VPMOVSXBWZ256rr
VPMOVZXBWZ256rr
VPADDWZ256rr
VPEXPANDWZ256rr
VPACKSSDWZ256rr
VPACKUSDWZ256rr
VPMOVUSDWZ256rr
VPMOVSDWZ256rr
VPMOVDWZ256rr
VPAVGWZ256rr
VPMULHWZ256rr
VPSLLWZ256rr
VPMULLWZ256rr
VPSRLWZ256rr
VPBLENDMWZ256rr
VPTESTNMWZ256rr
VPERMWZ256rr
VPTESTMWZ256rr
VPCMPEQWZ256rr
VPMOVUSQWZ256rr
VPMOVSQWZ256rr
VPMOVQWZ256rr
VPABSWZ256rr
VPMADDUBSWZ256rr
VPSUBSWZ256rr
VPADDSWZ256rr
VPMINSWZ256rr
VPMULHRSWZ256rr
VPCOMPRESSWZ256rr
VPSUBUSWZ256rr
VPADDUSWZ256rr
VPMAXSWZ256rr
VPCMPGTWZ256rr
VPOPCNTWZ256rr
VPBROADCASTWZ256rr
VPMULHUWZ256rr
VPMINUWZ256rr
VPMAXUWZ256rr
VPSRAVWZ256rr
VPSLLVWZ256rr
VPSRLVWZ256rr
VPBROADCASTBrZ256rr
VPBROADCASTDrZ256rr
VPBROADCASTQrZ256rr
VPBROADCASTWrZ256rr
VPERMI2B128rr
VPERMT2B128rr
VPERMI2D128rr
VPERMT2D128rr
VPERMI2PD128rr
VPERMT2PD128rr
VPERM2F128rr
VEXTRACTF128rr
VINSERTF128rr
VPERM2I128rr
VEXTRACTI128rr
VINSERTI128rr
VPERMI2Q128rr
VPERMT2Q128rr
VPERMI2PS128rr
VPERMT2PS128rr
VAESKEYGENASSIST128rr
VPERMI2W128rr
VPERMT2W128rr
VMOVDQA32Z128rr
VMOVDQU32Z128rr
VBROADCASTI32X2Z128rr
VMOVDQA64Z128rr
VMOVDQU64Z128rr
VCVTNE2PS2BF16Z128rr
VCVTNEPS2BF16Z128rr
VMOVDQU16Z128rr
VMOVDQU8Z128rr
VPMOVM2BZ128rr
VPSUBBZ128rr
VPADDBZ128rr
VPEXPANDBZ128rr
VPMOVUSDBZ128rr
VPMOVSDBZ128rr
VPMOVDBZ128rr
VPSHUFBZ128rr
VPAVGBZ128rr
VGF2P8MULBZ128rr
VPBLENDMBZ128rr
VPTESTNMBZ128rr
VPSHUFBITQMBZ128rr
VPERMBZ128rr
VPTESTMBZ128rr
VPCMPEQBZ128rr
VPMOVUSQBZ128rr
VPMOVSQBZ128rr
VPMULTISHIFTQBZ128rr
VPMOVQBZ128rr
VPABSBZ128rr
VPSUBSBZ128rr
VPADDSBZ128rr
VPMINSBZ128rr
VPCOMPRESSBZ128rr
VPSUBUSBZ128rr
VPADDUSBZ128rr
VPMAXSBZ128rr
VPCMPGTBZ128rr
VPOPCNTBZ128rr
VPBROADCASTBZ128rr
VPMINUBZ128rr
VPMAXUBZ128rr
VPACKSSWBZ128rr
VPACKUSWBZ128rr
VPMOVUSWBZ128rr
VPMOVSWBZ128rr
VPMOVWBZ128rr
VAESDECZ128rr
VAESENCZ128rr
VPMOVM2DZ128rr
VPBROADCASTMW2DZ128rr
VPSRADZ128rr
VPSUBDZ128rr
VPMOVSXBDZ128rr
VPMOVZXBDZ128rr
VPADDDZ128rr
VPANDDZ128rr
VPEXPANDDZ128rr
VPSLLDZ128rr
VPMULLDZ128rr
VPSRLDZ128rr
VPBLENDMDZ128rr
VPTESTNMDZ128rr
VPTESTMDZ128rr
VPANDNDZ128rr
VCVTDQ2PDZ128rr
VCVTUDQ2PDZ128rr
VCVTQQ2PDZ128rr
VCVTUQQ2PDZ128rr
VCVTPS2PDZ128rr
VMOVAPDZ128rr
VSUBPDZ128rr
VMINCPDZ128rr
VMAXCPDZ128rr
VADDPDZ128rr
VEXPANDPDZ128rr
VANDPDZ128rr
VSCALEFPDZ128rr
VUNPCKHPDZ128rr
VPERMILPDZ128rr
VUNPCKLPDZ128rr
VMULPDZ128rr
VBLENDMPDZ128rr
VANDNPDZ128rr
VMINPDZ128rr
VORPDZ128rr
VXORPDZ128rr
VFPCLASSPDZ128rr
VCOMPRESSPDZ128rr
VMOVUPDZ128rr
VDIVPDZ128rr
VMAXPDZ128rr
VPCMPEQDZ128rr
VPMOVUSQDZ128rr
VPMOVSQDZ128rr
VPMOVQDZ128rr
VPORDZ128rr
VPXORDZ128rr
VPABSDZ128rr
VPMINSDZ128rr
VPCOMPRESSDZ128rr
VPMAXSDZ128rr
VP2INTERSECTDZ128rr
VPCONFLICTDZ128rr
VPCMPGTDZ128rr
VPOPCNTDZ128rr
VPLZCNTDZ128rr
VPBROADCASTDZ128rr
VPMINUDZ128rr
VPMAXUDZ128rr
VPSRAVDZ128rr
VPSLLVDZ128rr
VPROLVDZ128rr
VPSRLVDZ128rr
VPRORVDZ128rr
VPMADDWDZ128rr
VPUNPCKHWDZ128rr
VPUNPCKLWDZ128rr
VPMOVSXWDZ128rr
VPMOVZXWDZ128rr
VCVTPS2PHZ128rr
VPMOVB2MZ128rr
VPMOVD2MZ128rr
VPMOVQ2MZ128rr
VPMOVW2MZ128rr
VMOVDDUPZ128rr
VMOVSHDUPZ128rr
VMOVSLDUPZ128rr
VPBROADCASTMB2QZ128rr
VPMOVM2QZ128rr
VPSRAQZ128rr
VPSUBQZ128rr
VPMOVSXBQZ128rr
VPMOVZXBQZ128rr
VCVTTPD2DQZ128rr
VCVTPD2DQZ128rr
VCVTTPS2DQZ128rr
VCVTPS2DQZ128rr
VPADDQZ128rr
VPUNPCKHDQZ128rr
VPUNPCKLDQZ128rr
VPMULDQZ128rr
VPANDQZ128rr
VPEXPANDQZ128rr
VPUNPCKHQDQZ128rr
VPUNPCKLQDQZ128rr
VPCLMULQDQZ128rr
VCVTTPD2UDQZ128rr
VCVTPD2UDQZ128rr
VCVTTPS2UDQZ128rr
VCVTPS2UDQZ128rr
VPMULUDQZ128rr
VPMOVSXDQZ128rr
VPMOVZXDQZ128rr
VPSLLQZ128rr
VPMULLQZ128rr
VPSRLQZ128rr
VPBLENDMQZ128rr
VPTESTNMQZ128rr
VPTESTMQZ128rr
VPANDNQZ128rr
VCVTTPD2QQZ128rr
VCVTPD2QQZ128rr
VCVTTPS2QQZ128rr
VCVTPS2QQZ128rr
VPCMPEQQZ128rr
VCVTTPD2UQQZ128rr
VCVTPD2UQQZ128rr
VCVTTPS2UQQZ128rr
VCVTPS2UQQZ128rr
VPORQZ128rr
VPXORQZ128rr
VPABSQZ128rr
VPMINSQZ128rr
VPCOMPRESSQZ128rr
VPMAXSQZ128rr
VP2INTERSECTQZ128rr
VPCONFLICTQZ128rr
VPCMPGTQZ128rr
VPOPCNTQZ128rr
VPLZCNTQZ128rr
VPBROADCASTQZ128rr
VPMINUQZ128rr
VPMAXUQZ128rr
VPSRAVQZ128rr
VPSLLVQZ128rr
VPROLVQZ128rr
VPSRLVQZ128rr
VPRORVQZ128rr
VPMOVSXWQZ128rr
VPMOVZXWQZ128rr
VCVTPD2PSZ128rr
VCVTPH2PSZ128rr
VCVTDQ2PSZ128rr
VCVTUDQ2PSZ128rr
VCVTQQ2PSZ128rr
VCVTUQQ2PSZ128rr
VMOVAPSZ128rr
VSUBPSZ128rr
VMINCPSZ128rr
VMAXCPSZ128rr
VADDPSZ128rr
VEXPANDPSZ128rr
VANDPSZ128rr
VSCALEFPSZ128rr
VUNPCKHPSZ128rr
VPERMILPSZ128rr
VUNPCKLPSZ128rr
VMULPSZ128rr
VBLENDMPSZ128rr
VANDNPSZ128rr
VMINPSZ128rr
VORPSZ128rr
VXORPSZ128rr
VFPCLASSPSZ128rr
VCOMPRESSPSZ128rr
VMOVUPSZ128rr
VDIVPSZ128rr
VMAXPSZ128rr
VBROADCASTSSZ128rr
VAESDECLASTZ128rr
VAESENCLASTZ128rr
VPMOVM2WZ128rr
VPSRAWZ128rr
VPSADBWZ128rr
VPUNPCKHBWZ128rr
VPUNPCKLBWZ128rr
VPSUBWZ128rr
VPMOVSXBWZ128rr
VPMOVZXBWZ128rr
VPADDWZ128rr
VPEXPANDWZ128rr
VPACKSSDWZ128rr
VPACKUSDWZ128rr
VPMOVUSDWZ128rr
VPMOVSDWZ128rr
VPMOVDWZ128rr
VPAVGWZ128rr
VPMULHWZ128rr
VPSLLWZ128rr
VPMULLWZ128rr
VPSRLWZ128rr
VPBLENDMWZ128rr
VPTESTNMWZ128rr
VPERMWZ128rr
VPTESTMWZ128rr
VPCMPEQWZ128rr
VPMOVUSQWZ128rr
VPMOVSQWZ128rr
VPMOVQWZ128rr
VPABSWZ128rr
VPMADDUBSWZ128rr
VPSUBSWZ128rr
VPADDSWZ128rr
VPMINSWZ128rr
VPMULHRSWZ128rr
VPCOMPRESSWZ128rr
VPSUBUSWZ128rr
VPADDUSWZ128rr
VPMAXSWZ128rr
VPCMPGTWZ128rr
VPOPCNTWZ128rr
VPBROADCASTWZ128rr
VPMULHUWZ128rr
VPMINUWZ128rr
VPMAXUWZ128rr
VPSRAVWZ128rr
VPSLLVWZ128rr
VPSRLVWZ128rr
VPBROADCASTBrZ128rr
VPBROADCASTDrZ128rr
VPBROADCASTQrZ128rr
VPBROADCASTWrZ128rr
SBB8rr
SUB8rr
ADC8rr
XADD8rr
AND8rr
CMPXCHG8rr
IN8rr
CMP8rr
XOR8rr
TEST8rr
OUT8rr
MOV8rr
VMOVDQArr
VPERMI2Brr
VPERMT2Brr
VPSHABrr
VPSUBBrr
KADDBrr
VPADDBrr
KANDBrr
VPSHUFBrr
MMX_PSHUFBrr
VPAVGBrr
VPMOVMSKBrr
MMX_PMOVMSKBrr
VPSHLBrr
VGF2P8MULBrr
KANDNBrr
VPSIGNBrr
MMX_PSIGNBrr
VPCMPEQBrr
KORBrr
KXNORBrr
KXORBrr
VPINSRBrr
VPEXTRBrr
VPABSBrr
MMX_PABSBrr
VPSUBSBrr
VPADDSBrr
VPMINSBrr
VPSUBUSBrr
VPADDUSBrr
PAVGUSBrr
VPMAXSBrr
VPCMPGTBrr
KNOTBrr
VPROTBrr
VPBROADCASTBrr
KTESTBrr
KORTESTBrr
VPMINUBrr
PFSUBrr
VPMAXUBrr
VPBLENDVBrr
VPACKSSWBrr
VPACKUSWBrr
PFACCrr
PFNACCrr
PFPNACCrr
VAESDECrr
VAESIMCrr
VAESENCrr
VPERMI2Drr
VPERMT2Drr
VPSHADrr
VPSRADrr
MMX_PSRADrr
VPHADDBDrr
VPHADDUBDrr
VPHSUBDrr
MMX_PHSUBDrr
VPSUBDrr
VPMOVSXBDrr
VPMOVZXBDrr
PFADDrr
VPHADDDrr
MMX_PHADDDrr
KADDDrr
VPADDDrr
KANDDrr
VPMACSDDrr
VPMACSSDDrr
PI2FDrr
PF2IDrr
VPSHLDrr
VPSLLDrr
MMX_PSLLDrr
VPMULLDrr
VPSRLDrr
MMX_PSRLDrr
VPANDrr
KANDNDrr
VPSIGNDrr
MMX_PSIGNDrr
VPERMI2PDrr
VPERMIL2PDrr
VCVTDQ2PDrr
VCVTPS2PDrr
VPERMT2PDrr
VMOVAPDrr
PSWAPDrr
VADDSUBPDrr
VHSUBPDrr
VSUBPDrr
VMINCPDrr
VMAXCPDrr
VHADDPDrr
VADDPDrr
VANDPDrr
VUNPCKHPDrr
VMOVMSKPDrr
VPERMILPDrr
VUNPCKLPDrr
VMULPDrr
VANDNPDrr
VMINPDrr
VORPDrr
VXORPDrr
VTESTPDrr
VMOVUPDrr
VBLENDVPDrr
VDIVPDrr
VMAXPDrr
VFRCZPDrr
VPCMPEQDrr
KORDrr
KXNORDrr
KXORDrr
VPINSRDrr
VPEXTRDrr
VCVTSI642SDrr
VCVTSI2SDrr
VCVTSS2SDrr
VPABSDrr
MMX_PABSDrr
VSUBSDrr
VMINCSDrr
VMAXCSDrr
VADDSDrr
VUCOMISDrr
VCOMISDrr
VMULSDrr
VPMINSDrr
VMINSDrr
VCMPSDrr
VPDPWSSDrr
VPDPBUSDrr
VDIVSDrr
VMOVSDrr
VPMAXSDrr
VMAXSDrr
VFRCZSDrr
VMOV64toSDrr
VPCMPGTDrr
KNOTDrr
VPROTDrr
VPBROADCASTDrr
KTESTDrr
KORTESTDrr
VPMINUDrr
VPMAXUDrr
VPSRAVDrr
VPSLLVDrr
VPSRLVDrr
VPHSUBWDrr
VPHADDWDrr
VPMADDWDrr
VPUNPCKHWDrr
KUNPCKWDrr
VPUNPCKLWDrr
VPMACSWDrr
VPMADCSWDrr
VPMACSSWDrr
VPMADCSSWDrr
VPHADDUWDrr
VPMOVSXWDrr
VPMOVZXWDrr
PFCMPGErr
SHA1NEXTErr
LD_Frr
ST_Frr
MULX32Hrr
MULX64Hrr
VCVTPS2PHrr
VPMACSDQHrr
VPMACSSDQHrr
VMOVPDI2DIrr
VMOVSS2DIrr
VMOVDI2PDIrr
VMOVPQI2QIrr
VMOVZPQILo2PQIrr
VMOV64toPQIrr
VPCMPESTRIrr
VPCMPISTRIrr
VCVTTSD2SIrr
VCVTSD2SIrr
VCVTTSS2SIrr
VCVTSS2SIrr
VPMACSDQLrr
VPMACSSDQLrr
PFMULrr
VPCMPESTRMrr
VPCMPISTRMrr
VPANDNrr
PFMINrr
PFRCPrr
ST_FPrr
VMOVDDUPrr
VMOVSHDUPrr
VMOVSLDUPrr
MMX_MOVFR642Qrr
VPERMI2Qrr
MMX_MOVDQ2Qrr
VPERMT2Qrr
VPSHAQrr
VPHADDBQrr
VPHADDUBQrr
VPSUBQrr
VPMOVSXBQrr
VPMOVZXBQrr
VCVTTPD2DQrr
VCVTPD2DQrr
MMX_MOVQ2DQrr
VCVTTPS2DQrr
VCVTPS2DQrr
VPHSUBDQrr
KADDQrr
VPADDQrr
VPHADDDQrr
VPUNPCKHDQrr
KUNPCKDQrr
VPUNPCKLDQrr
VPMULDQrr
KANDQrr
VPUNPCKHQDQrr
VPUNPCKLQDQrr
VPCLMULQDQrr
VPHADDUDQrr
VPMULUDQrr
VPMOVSXDQrr
VPMOVZXDQrr
PFCMPEQrr
VPSHLQrr
VPSLLQrr
MMX_PSLLQrr
VPSRLQrr
MMX_PSRLQrr
KANDNQrr
VPCMPEQQrr
KORQrr
KXNORQrr
KXORQrr
VPINSRQrr
VPEXTRQrr
VPCMPGTQrr
KNOTQrr
VPROTQrr
VPBROADCASTQrr
KTESTQrr
KORTESTQrr
VPSLLVQrr
VPSRLVQrr
VPHADDWQrr
VPHADDUWQrr
VPMOVSXWQrr
VPMOVZXWQrr
PFSUBRrr
VPORrr
VPXORrr
VPDPWSSDSrr
VPDPBUSDSrr
VCVTPD2PSrr
VCVTPH2PSrr
VPERMI2PSrr
VPERMIL2PSrr
VCVTDQ2PSrr
VPERMT2PSrr
VMOVAPSrr
VADDSUBPSrr
VHSUBPSrr
VSUBPSrr
VMINCPSrr
VMAXCPSrr
VHADDPSrr
VADDPSrr
VANDPSrr
VUNPCKHPSrr
VMOVLHPSrr
VMOVMSKPSrr
VMOVHLPSrr
VPERMILPSrr
VUNPCKLPSrr
VMULPSrr
VANDNPSrr
VMINPSrr
VORPSrr
VXORPSrr
VEXTRACTPSrr
VINSERTPSrr
VTESTPSrr
VMOVUPSrr
VBLENDVPSrr
VDIVPSrr
VMAXPSrr
VFRCZPSrr
VCVTSI642SSrr
VCVTSD2SSrr
VMOVDI2SSrr
VCVTSI2SSrr
VSUBSSrr
VMINCSSrr
VMAXCSSrr
VADDSSrr
VUCOMISSrr
VCOMISSrr
VMULSSrr
VMINSSrr
VCMPSSrr
VBROADCASTSSrr
VDIVSSrr
VMOVSSrr
VMAXSSrr
VFRCZSSrr
PFCMPGTrr
MWAITrr
PFRSQRTrr
VAESDECLASTrr
VAESENCLASTrr
VPTESTrr
VMOVDQUrr
BNDMOVrr
VPERMI2Wrr
VPERMT2Wrr
VPSHAWrr
VPSRAWrr
MMX_PSRAWrr
VPHSUBBWrr
VPSADBWrr
VPHADDBWrr
VPUNPCKHBWrr
KUNPCKBWrr
VPUNPCKLBWrr
VPHADDUBWrr
VPHSUBWrr
MMX_PHSUBWrr
VPSUBWrr
VPMOVSXBWrr
VPMOVZXBWrr
VPHADDWrr
MMX_PHADDWrr
KADDWrr
VPADDWrr
KANDWrr
VPACKSSDWrr
VPACKUSDWrr
PI2FWrr
VPAVGWrr
VPMULHWrr
PF2IWrr
VPSHLWrr
VPSLLWrr
MMX_PSLLWrr
VPMULLWrr
VPSRLWrr
MMX_PSRLWrr
KANDNWrr
VPSIGNWrr
MMX_PSIGNWrr
VPCMPEQWrr
PMULHRWrr
KORWrr
KXNORWrr
KXORWrr
VPINSRWrr
MMX_PINSRWrr
VPEXTRWrr
MMX_PEXTRWrr
VPABSWrr
MMX_PABSWrr
VPMADDUBSWrr
MMX_PMADDUBSWrr
VPHSUBSWrr
MMX_PHSUBSWrr
VPSUBSWrr
VPHADDSWrr
MMX_PHADDSWrr
VPADDSWrr
VPMINSWrr
VPMULHRSWrr
MMX_PMULHRSWrr
VPSUBUSWrr
VPADDUSWrr
VPMAXSWrr
VPCMPGTWrr
KNOTWrr
VPROTWrr
VPBROADCASTWrr
KTESTWrr
KORTESTWrr
VPMULHUWrr
VPMINUWrr
VPHMINPOSUWrr
VPMAXUWrr
VPMACSWWrr
VPMACSSWWrr
PFMAXrr
VFMADDSUBPD4Yrr
VFMSUBPD4Yrr
VFNMSUBPD4Yrr
VFMSUBADDPD4Yrr
VFMADDPD4Yrr
VFNMADDPD4Yrr
VFMADDSUBPS4Yrr
VFMSUBPS4Yrr
VFNMSUBPS4Yrr
VFMSUBADDPS4Yrr
VFMADDPS4Yrr
VFNMADDPS4Yrr
VMOVDQAYrr
VPSUBBYrr
VPADDBYrr
VPSHUFBYrr
VPAVGBYrr
VPMOVMSKBYrr
VGF2P8MULBYrr
VPSIGNBYrr
VPCMPEQBYrr
VPABSBYrr
VPSUBSBYrr
VPADDSBYrr
VPMINSBYrr
VPSUBUSBYrr
VPADDUSBYrr
VPMAXSBYrr
VPCMPGTBYrr
VPBROADCASTBYrr
VPMINUBYrr
VPMAXUBYrr
VPBLENDVBYrr
VPACKSSWBYrr
VPACKUSWBYrr
VAESDECYrr
VAESENCYrr
VPSRADYrr
VPHSUBDYrr
VPSUBDYrr
VPMOVSXBDYrr
VPMOVZXBDYrr
VPHADDDYrr
VPADDDYrr
VPSLLDYrr
VPMULLDYrr
VPSRLDYrr
VPERMDYrr
VPANDYrr
VPSIGNDYrr
VPERMIL2PDYrr
VCVTDQ2PDYrr
VCVTPS2PDYrr
VMOVAPDYrr
VADDSUBPDYrr
VHSUBPDYrr
VSUBPDYrr
VMINCPDYrr
VMAXCPDYrr
VHADDPDYrr
VADDPDYrr
VANDPDYrr
VUNPCKHPDYrr
VMOVMSKPDYrr
VPERMILPDYrr
VUNPCKLPDYrr
VMULPDYrr
VANDNPDYrr
VMINPDYrr
VORPDYrr
VXORPDYrr
VTESTPDYrr
VMOVUPDYrr
VBLENDVPDYrr
VDIVPDYrr
VMAXPDYrr
VFRCZPDYrr
VPCMPEQDYrr
VPABSDYrr
VPMINSDYrr
VPDPWSSDYrr
VBROADCASTSDYrr
VPDPBUSDYrr
VPMAXSDYrr
VPCMPGTDYrr
VPBROADCASTDYrr
VPMINUDYrr
VPMAXUDYrr
VPSRAVDYrr
VPSLLVDYrr
VPSRLVDYrr
VPMADDWDYrr
VPUNPCKHWDYrr
VPUNPCKLWDYrr
VPMOVSXWDYrr
VPMOVZXWDYrr
VCVTPS2PHYrr
VPANDNYrr
VMOVDDUPYrr
VMOVSHDUPYrr
VMOVSLDUPYrr
VPSUBQYrr
VPMOVSXBQYrr
VPMOVZXBQYrr
VCVTTPD2DQYrr
VCVTPD2DQYrr
VCVTTPS2DQYrr
VCVTPS2DQYrr
VPADDQYrr
VPUNPCKHDQYrr
VPUNPCKLDQYrr
VPMULDQYrr
VPUNPCKHQDQYrr
VPUNPCKLQDQYrr
VPCLMULQDQYrr
VPMULUDQYrr
VPMOVSXDQYrr
VPMOVZXDQYrr
VPSLLQYrr
VPSRLQYrr
VPCMPEQQYrr
VPCMPGTQYrr
VPBROADCASTQYrr
VPSLLVQYrr
VPSRLVQYrr
VPMOVSXWQYrr
VPMOVZXWQYrr
VPORYrr
VPXORYrr
VPDPWSSDSYrr
VPDPBUSDSYrr
VCVTPD2PSYrr
VCVTPH2PSYrr
VPERMIL2PSYrr
VCVTDQ2PSYrr
VMOVAPSYrr
VADDSUBPSYrr
VHSUBPSYrr
VSUBPSYrr
VMINCPSYrr
VMAXCPSYrr
VHADDPSYrr
VADDPSYrr
VANDPSYrr
VUNPCKHPSYrr
VMOVMSKPSYrr
VPERMILPSYrr
VUNPCKLPSYrr
VMULPSYrr
VPERMPSYrr
VANDNPSYrr
VMINPSYrr
VORPSYrr
VXORPSYrr
VTESTPSYrr
VMOVUPSYrr
VBLENDVPSYrr
VDIVPSYrr
VMAXPSYrr
VFRCZPSYrr
VBROADCASTSSYrr
VAESDECLASTYrr
VAESENCLASTYrr
VPTESTYrr
VMOVDQUYrr
VPSRAWYrr
VPSADBWYrr
VPUNPCKHBWYrr
VPUNPCKLBWYrr
VPHSUBWYrr
VPSUBWYrr
VPMOVSXBWYrr
VPMOVZXBWYrr
VPHADDWYrr
VPADDWYrr
VPACKSSDWYrr
VPACKUSDWYrr
VPAVGWYrr
VPMULHWYrr
VPSLLWYrr
VPMULLWYrr
VPSRLWYrr
VPSIGNWYrr
VPCMPEQWYrr
VPABSWYrr
VPMADDUBSWYrr
VPHSUBSWYrr
VPSUBSWYrr
VPHADDSWYrr
VPADDSWYrr
VPMINSWYrr
VPMULHRSWYrr
VPSUBUSWYrr
VPADDUSWYrr
VPMAXSWYrr
VPCMPGTWYrr
VPBROADCASTWYrr
VPMULHUWYrr
VPMINUWYrr
VPMAXUWYrr
VMOVDQA32Zrr
VMOVDQU32Zrr
VBROADCASTF32X2Zrr
VBROADCASTI32X2Zrr
VEXTRACTF64x2Zrr
VINSERTF64x2Zrr
VEXTRACTI64x2Zrr
VINSERTI64x2Zrr
VMOVDQA64Zrr
VCVTTSD2SI64Zrr
VCVTSD2SI64Zrr
VCVTTSS2SI64Zrr
VCVTSS2SI64Zrr
VCVTTSD2USI64Zrr
VCVTTSS2USI64Zrr
VMOVDQU64Zrr
VMOVSDto64Zrr
VMOVPQIto64Zrr
VEXTRACTF32x4Zrr
VINSERTF32x4Zrr
VEXTRACTI32x4Zrr
VINSERTI32x4Zrr
VEXTRACTF64x4Zrr
VINSERTF64x4Zrr
VEXTRACTI64x4Zrr
VINSERTI64x4Zrr
VCVTNE2PS2BF16Zrr
VCVTNEPS2BF16Zrr
VMOVDQU16Zrr
VMOVDQU8Zrr
VEXTRACTF32x8Zrr
VINSERTF32x8Zrr
VEXTRACTI32x8Zrr
VINSERTI32x8Zrr
VPMOVM2BZrr
VPSUBBZrr
VPADDBZrr
VPEXPANDBZrr
VPMOVUSDBZrr
VPMOVSDBZrr
VPMOVDBZrr
VPSHUFBZrr
VPAVGBZrr
VGF2P8MULBZrr
VPBLENDMBZrr
VPTESTNMBZrr
VPSHUFBITQMBZrr
VPERMBZrr
VPTESTMBZrr
VPCMPEQBZrr
VPMOVUSQBZrr
VPMOVSQBZrr
VPMULTISHIFTQBZrr
VPMOVQBZrr
VPINSRBZrr
VPEXTRBZrr
VPABSBZrr
VPSUBSBZrr
VPADDSBZrr
VPMINSBZrr
VPCOMPRESSBZrr
VPSUBUSBZrr
VPADDUSBZrr
VPMAXSBZrr
VPCMPGTBZrr
VPOPCNTBZrr
VPBROADCASTBZrr
VPMINUBZrr
VPMAXUBZrr
VPACKSSWBZrr
VPACKUSWBZrr
VPMOVUSWBZrr
VPMOVSWBZrr
VPMOVWBZrr
VAESDECZrr
VAESENCZrr
VPMOVM2DZrr
VPBROADCASTMW2DZrr
VPSRADZrr
VPSUBDZrr
VPMOVSXBDZrr
VPMOVZXBDZrr
VPADDDZrr
VPANDDZrr
VPEXPANDDZrr
VPSLLDZrr
VPMULLDZrr
VPSRLDZrr
VPBLENDMDZrr
VPTESTNMDZrr
VPERMDZrr
VPTESTMDZrr
VPANDNDZrr
VCVTDQ2PDZrr
VCVTUDQ2PDZrr
VCVTQQ2PDZrr
VCVTUQQ2PDZrr
VCVTPS2PDZrr
VMOVAPDZrr
VSUBPDZrr
VMINCPDZrr
VMAXCPDZrr
VADDPDZrr
VEXPANDPDZrr
VANDPDZrr
VSCALEFPDZrr
VUNPCKHPDZrr
VPERMILPDZrr
VUNPCKLPDZrr
VMULPDZrr
VBLENDMPDZrr
VPERMPDZrr
VANDNPDZrr
VMINPDZrr
VORPDZrr
VXORPDZrr
VFPCLASSPDZrr
VCOMPRESSPDZrr
VMOVUPDZrr
VDIVPDZrr
VMAXPDZrr
VPCMPEQDZrr
VPMOVUSQDZrr
VPMOVSQDZrr
VPMOVQDZrr
VPORDZrr
VPXORDZrr
VPINSRDZrr
VPEXTRDZrr
VCVTSI642SDZrr
VCVTUSI642SDZrr
VCVTSI2SDZrr
VCVTUSI2SDZrr
VCVTSS2SDZrr
VRCP14SDZrr
VRSQRT14SDZrr
VPABSDZrr
VSUBSDZrr
VMINCSDZrr
VMAXCSDZrr
VADDSDZrr
VSCALEFSDZrr
VUCOMISDZrr
VCOMISDZrr
VMULSDZrr
VPMINSDZrr
VMINSDZrr
VCMPSDZrr
VPCOMPRESSDZrr
VFPCLASSSDZrr
VBROADCASTSDZrr
VDIVSDZrr
VMOVSDZrr
VPMAXSDZrr
VMAXSDZrr
VMOV64toSDZrr
VP2INTERSECTDZrr
VPCONFLICTDZrr
VPCMPGTDZrr
VPOPCNTDZrr
VPLZCNTDZrr
VPBROADCASTDZrr
VPMINUDZrr
VPMAXUDZrr
VPSRAVDZrr
VPSLLVDZrr
VPROLVDZrr
VPSRLVDZrr
VPRORVDZrr
VPMADDWDZrr
VPUNPCKHWDZrr
VPUNPCKLWDZrr
VPMOVSXWDZrr
VPMOVZXWDZrr
VCVTPS2PHZrr
VMOVPDI2DIZrr
VMOVSS2DIZrr
VMOVDI2PDIZrr
VMOVPQI2QIZrr
VMOVZPQILo2PQIZrr
VMOV64toPQIZrr
VCVTTSD2SIZrr
VCVTSD2SIZrr
VCVTTSS2SIZrr
VCVTSS2SIZrr
VCVTTSD2USIZrr
VCVTTSS2USIZrr
VPMOVB2MZrr
VPMOVD2MZrr
VPMOVQ2MZrr
VPMOVW2MZrr
VMOVDDUPZrr
VMOVSHDUPZrr
VMOVSLDUPZrr
VPBROADCASTMB2QZrr
VPMOVM2QZrr
VPSRAQZrr
VPSUBQZrr
VPMOVSXBQZrr
VPMOVZXBQZrr
VCVTTPD2DQZrr
VCVTPD2DQZrr
VCVTTPS2DQZrr
VCVTPS2DQZrr
VPADDQZrr
VPUNPCKHDQZrr
VPUNPCKLDQZrr
VPMULDQZrr
VPANDQZrr
VPEXPANDQZrr
VPUNPCKHQDQZrr
VPUNPCKLQDQZrr
VPCLMULQDQZrr
VCVTTPD2UDQZrr
VCVTPD2UDQZrr
VCVTTPS2UDQZrr
VCVTPS2UDQZrr
VPMULUDQZrr
VPMOVSXDQZrr
VPMOVZXDQZrr
VPSLLQZrr
VPMULLQZrr
VPSRLQZrr
VPBLENDMQZrr
VPTESTNMQZrr
VPERMQZrr
VPTESTMQZrr
VPANDNQZrr
VCVTTPD2QQZrr
VCVTPD2QQZrr
VCVTTPS2QQZrr
VCVTPS2QQZrr
VPCMPEQQZrr
VCVTTPD2UQQZrr
VCVTPD2UQQZrr
VCVTTPS2UQQZrr
VCVTPS2UQQZrr
VPORQZrr
VPXORQZrr
VPINSRQZrr
VPEXTRQZrr
VPABSQZrr
VPMINSQZrr
VPCOMPRESSQZrr
VPMAXSQZrr
VP2INTERSECTQZrr
VPCONFLICTQZrr
VPCMPGTQZrr
VPOPCNTQZrr
VPLZCNTQZrr
VPBROADCASTQZrr
VPMINUQZrr
VPMAXUQZrr
VPSRAVQZrr
VPSLLVQZrr
VPROLVQZrr
VPSRLVQZrr
VPRORVQZrr
VPMOVSXWQZrr
VPMOVZXWQZrr
VCVTPD2PSZrr
VCVTPH2PSZrr
VCVTDQ2PSZrr
VCVTUDQ2PSZrr
VCVTQQ2PSZrr
VCVTUQQ2PSZrr
VMOVAPSZrr
VSUBPSZrr
VMINCPSZrr
VMAXCPSZrr
VADDPSZrr
VEXPANDPSZrr
VANDPSZrr
VSCALEFPSZrr
VUNPCKHPSZrr
VMOVLHPSZrr
VMOVHLPSZrr
VPERMILPSZrr
VUNPCKLPSZrr
VMULPSZrr
VBLENDMPSZrr
VPERMPSZrr
VANDNPSZrr
VMINPSZrr
VORPSZrr
VXORPSZrr
VFPCLASSPSZrr
VCOMPRESSPSZrr
VEXTRACTPSZrr
VINSERTPSZrr
VMOVUPSZrr
VDIVPSZrr
VMAXPSZrr
VCVTSI642SSZrr
VCVTUSI642SSZrr
VCVTSD2SSZrr
VMOVDI2SSZrr
VCVTSI2SSZrr
VCVTUSI2SSZrr
VRCP14SSZrr
VRSQRT14SSZrr
VSUBSSZrr
VMINCSSZrr
VMAXCSSZrr
VADDSSZrr
VSCALEFSSZrr
VUCOMISSZrr
VCOMISSZrr
VMULSSZrr
VMINSSZrr
VCMPSSZrr
VFPCLASSSSZrr
VBROADCASTSSZrr
VDIVSSZrr
VMOVSSZrr
VMAXSSZrr
VAESDECLASTZrr
VAESENCLASTZrr
VPMOVM2WZrr
VPSRAWZrr
VPSADBWZrr
VPUNPCKHBWZrr
VPUNPCKLBWZrr
VPSUBWZrr
VPMOVSXBWZrr
VPMOVZXBWZrr
VPADDWZrr
VPEXPANDWZrr
VPACKSSDWZrr
VPACKUSDWZrr
VPMOVUSDWZrr
VPMOVSDWZrr
VPMOVDWZrr
VPAVGWZrr
VPMULHWZrr
VPSLLWZrr
VPMULLWZrr
VPSRLWZrr
VPBLENDMWZrr
VPTESTNMWZrr
VPERMWZrr
VPTESTMWZrr
VPCMPEQWZrr
VPMOVUSQWZrr
VPMOVSQWZrr
VPMOVQWZrr
VPINSRWZrr
VPEXTRWZrr
VPABSWZrr
VPMADDUBSWZrr
VPSUBSWZrr
VPADDSWZrr
VPMINSWZrr
VPMULHRSWZrr
VPCOMPRESSWZrr
VPSUBUSWZrr
VPADDUSWZrr
VPMAXSWZrr
VPCMPGTWZrr
VPOPCNTWZrr
VPBROADCASTWZrr
VPMULHUWZrr
VPMINUWZrr
VPMAXUWZrr
VPSRAVWZrr
VPSLLVWZrr
VPSRLVWZrr
VPBROADCASTBrZrr
VPBROADCASTDrZrr
VPBROADCASTQrZrr
VPBROADCASTWrZrr
MMX_MOVD64grr
MMX_PSUBBirr
MMX_PADDBirr
MMX_PAVGBirr
MMX_PCMPEQBirr
MMX_PSUBSBirr
MMX_PADDSBirr
MMX_PSUBUSBirr
MMX_PADDUSBirr
MMX_PCMPGTBirr
MMX_PMINUBirr
MMX_PMAXUBirr
MMX_PACKSSWBirr
MMX_PACKUSWBirr
MMX_PSUBDirr
MMX_PADDDirr
MMX_PANDirr
MMX_CVTPI2PDirr
MMX_PCMPEQDirr
MMX_PCMPGTDirr
MMX_PMADDWDirr
MMX_PUNPCKHWDirr
MMX_PUNPCKLWDirr
MMX_CVTTPD2PIirr
MMX_CVTPD2PIirr
MMX_CVTTPS2PIirr
MMX_CVTPS2PIirr
MMX_PANDNirr
MMX_PSUBQirr
MMX_PADDQirr
MMX_PUNPCKHDQirr
MMX_PUNPCKLDQirr
MMX_PMULUDQirr
MMX_PORirr
MMX_PXORirr
MMX_CVTPI2PSirr
MMX_PSADBWirr
MMX_PUNPCKHBWirr
MMX_PUNPCKLBWirr
MMX_PSUBWirr
MMX_PADDWirr
MMX_PACKSSDWirr
MMX_PAVGWirr
MMX_PMULHWirr
MMX_PMULLWirr
MMX_PCMPEQWirr
MMX_PSUBSWirr
MMX_PADDSWirr
MMX_PMINSWirr
MMX_PSUBUSWirr
MMX_PADDUSWirr
MMX_PMAXSWirr
MMX_PCMPGTWirr
MMX_PMULHUWirr
MONITOR32rrr
MONITORX32rrr
MONITOR64rrr
MONITORX64rrr
VPPERMrrr
VPCMOVrrr
MWAITXrrr
VPCMOVYrrr
MOV32sr
MOV64sr
MOV16sr
MOV16ms
MOV32rs
MOV64rs
MOV16rs
MOV32ri_alt
MOV16ri_alt
MOV8ri_alt
VMOVSDrm_alt
VMOVSSrm_alt
VMOVSDZrm_alt
VMOVSSZrm_alt
DEC32r_alt
INC32r_alt
DEC16r_alt
INC16r_alt
VFMSUB231SDZrb_Int
VFNMSUB231SDZrb_Int
VFMADD231SDZrb_Int
VFNMADD231SDZrb_Int
VFMSUB132SDZrb_Int
VFNMSUB132SDZrb_Int
VFMADD132SDZrb_Int
VFNMADD132SDZrb_Int
VFMSUB213SDZrb_Int
VFNMSUB213SDZrb_Int
VFMADD213SDZrb_Int
VFNMADD213SDZrb_Int
VRNDSCALESDZrb_Int
VSQRTSDZrb_Int
VFMSUB231SSZrb_Int
VFNMSUB231SSZrb_Int
VFMADD231SSZrb_Int
VFNMADD231SSZrb_Int
VFMSUB132SSZrb_Int
VFNMSUB132SSZrb_Int
VFMADD132SSZrb_Int
VFNMADD132SSZrb_Int
VFMSUB213SSZrb_Int
VFNMSUB213SSZrb_Int
VFMADD213SSZrb_Int
VFNMADD213SSZrb_Int
VRNDSCALESSZrb_Int
VSQRTSSZrb_Int
VCVTTSD2SI64Zrrb_Int
VCVTSD2SI64Zrrb_Int
VCVTTSS2SI64Zrrb_Int
VCVTSS2SI64Zrrb_Int
VCVTTSD2USI64Zrrb_Int
VCVTSD2USI64Zrrb_Int
VCVTTSS2USI64Zrrb_Int
VCVTSS2USI64Zrrb_Int
VCVTSI642SDZrrb_Int
VCVTUSI642SDZrrb_Int
VCVTSS2SDZrrb_Int
VSUBSDZrrb_Int
VADDSDZrrb_Int
VSCALEFSDZrrb_Int
VMULSDZrrb_Int
VMINSDZrrb_Int
VCMPSDZrrb_Int
VDIVSDZrrb_Int
VMAXSDZrrb_Int
VCVTTSD2SIZrrb_Int
VCVTSD2SIZrrb_Int
VCVTTSS2SIZrrb_Int
VCVTSS2SIZrrb_Int
VCVTTSD2USIZrrb_Int
VCVTSD2USIZrrb_Int
VCVTTSS2USIZrrb_Int
VCVTSS2USIZrrb_Int
VCVTSI642SSZrrb_Int
VCVTUSI642SSZrrb_Int
VCVTSD2SSZrrb_Int
VCVTSI2SSZrrb_Int
VCVTUSI2SSZrrb_Int
VSUBSSZrrb_Int
VADDSSZrrb_Int
VSCALEFSSZrrb_Int
VMULSSZrrb_Int
VMINSSZrrb_Int
VCMPSSZrrb_Int
VDIVSSZrrb_Int
VMAXSSZrrb_Int
VFMSUB231SDm_Int
VFNMSUB231SDm_Int
VFMADD231SDm_Int
VFNMADD231SDm_Int
VFMSUB132SDm_Int
VFNMSUB132SDm_Int
VFMADD132SDm_Int
VFNMADD132SDm_Int
VFMSUB213SDm_Int
VFNMSUB213SDm_Int
VFMADD213SDm_Int
VFNMADD213SDm_Int
VROUNDSDm_Int
VSQRTSDm_Int
VFMSUB231SSm_Int
VFNMSUB231SSm_Int
VFMADD231SSm_Int
VFNMADD231SSm_Int
VFMSUB132SSm_Int
VFNMSUB132SSm_Int
VFMADD132SSm_Int
VFNMADD132SSm_Int
VFMSUB213SSm_Int
VFNMSUB213SSm_Int
VFMADD213SSm_Int
VFNMADD213SSm_Int
VROUNDSSm_Int
VRCPSSm_Int
VRSQRTSSm_Int
VSQRTSSm_Int
VFMSUB231SDZm_Int
VFNMSUB231SDZm_Int
VFMADD231SDZm_Int
VFNMADD231SDZm_Int
VFMSUB132SDZm_Int
VFNMSUB132SDZm_Int
VFMADD132SDZm_Int
VFNMADD132SDZm_Int
VFMSUB213SDZm_Int
VFNMSUB213SDZm_Int
VFMADD213SDZm_Int
VFNMADD213SDZm_Int
VRNDSCALESDZm_Int
VSQRTSDZm_Int
VFMSUB231SSZm_Int
VFNMSUB231SSZm_Int
VFMADD231SSZm_Int
VFNMADD231SSZm_Int
VFMSUB132SSZm_Int
VFNMSUB132SSZm_Int
VFMADD132SSZm_Int
VFNMADD132SSZm_Int
VFMSUB213SSZm_Int
VFNMSUB213SSZm_Int
VFMADD213SSZm_Int
VFNMADD213SSZm_Int
VRNDSCALESSZm_Int
VSQRTSSZm_Int
VCVTTSD2SI64rm_Int
VCVTSD2SI64rm_Int
VCVTTSS2SI64rm_Int
VCVTSS2SI64rm_Int
VFMSUBSD4rm_Int
VFNMSUBSD4rm_Int
VFMADDSD4rm_Int
VFNMADDSD4rm_Int
VFMSUBSS4rm_Int
VFNMSUBSS4rm_Int
VFMADDSS4rm_Int
VFNMADDSS4rm_Int
VCVTSI642SDrm_Int
VCVTSI2SDrm_Int
VCVTSS2SDrm_Int
VSUBSDrm_Int
VADDSDrm_Int
VUCOMISDrm_Int
VCOMISDrm_Int
VMULSDrm_Int
VMINSDrm_Int
VCMPSDrm_Int
VDIVSDrm_Int
VMAXSDrm_Int
VCVTTSD2SIrm_Int
VCVTSD2SIrm_Int
VCVTTSS2SIrm_Int
VCVTSS2SIrm_Int
VCVTSI642SSrm_Int
VCVTSD2SSrm_Int
VCVTSI2SSrm_Int
VSUBSSrm_Int
VADDSSrm_Int
VUCOMISSrm_Int
VCOMISSrm_Int
VMULSSrm_Int
VMINSSrm_Int
VCMPSSrm_Int
VDIVSSrm_Int
VMAXSSrm_Int
VCVTTSD2SI64Zrm_Int
VCVTSD2SI64Zrm_Int
VCVTTSS2SI64Zrm_Int
VCVTSS2SI64Zrm_Int
VCVTTSD2USI64Zrm_Int
VCVTSD2USI64Zrm_Int
VCVTTSS2USI64Zrm_Int
VCVTSS2USI64Zrm_Int
VCVTSI642SDZrm_Int
VCVTUSI642SDZrm_Int
VCVTSI2SDZrm_Int
VCVTUSI2SDZrm_Int
VCVTSS2SDZrm_Int
VSUBSDZrm_Int
VADDSDZrm_Int
VUCOMISDZrm_Int
VCOMISDZrm_Int
VMULSDZrm_Int
VMINSDZrm_Int
VCMPSDZrm_Int
VDIVSDZrm_Int
VMAXSDZrm_Int
VCVTTSD2SIZrm_Int
VCVTSD2SIZrm_Int
VCVTTSS2SIZrm_Int
VCVTSS2SIZrm_Int
VCVTTSD2USIZrm_Int
VCVTSD2USIZrm_Int
VCVTTSS2USIZrm_Int
VCVTSS2USIZrm_Int
VCVTSI642SSZrm_Int
VCVTUSI642SSZrm_Int
VCVTSD2SSZrm_Int
VCVTSI2SSZrm_Int
VCVTUSI2SSZrm_Int
VSUBSSZrm_Int
VADDSSZrm_Int
VUCOMISSZrm_Int
VCOMISSZrm_Int
VMULSSZrm_Int
VMINSSZrm_Int
VCMPSSZrm_Int
VDIVSSZrm_Int
VMAXSSZrm_Int
VFMSUB231SDr_Int
VFNMSUB231SDr_Int
VFMADD231SDr_Int
VFNMADD231SDr_Int
VFMSUB132SDr_Int
VFNMSUB132SDr_Int
VFMADD132SDr_Int
VFNMADD132SDr_Int
VFMSUB213SDr_Int
VFNMSUB213SDr_Int
VFMADD213SDr_Int
VFNMADD213SDr_Int
VROUNDSDr_Int
VSQRTSDr_Int
VFMSUB231SSr_Int
VFNMSUB231SSr_Int
VFMADD231SSr_Int
VFNMADD231SSr_Int
VFMSUB132SSr_Int
VFNMSUB132SSr_Int
VFMADD132SSr_Int
VFNMADD132SSr_Int
VFMSUB213SSr_Int
VFNMSUB213SSr_Int
VFMADD213SSr_Int
VFNMADD213SSr_Int
VROUNDSSr_Int
VRCPSSr_Int
VRSQRTSSr_Int
VSQRTSSr_Int
VFMSUB231SDZr_Int
VFNMSUB231SDZr_Int
VFMADD231SDZr_Int
VFNMADD231SDZr_Int
VFMSUB132SDZr_Int
VFNMSUB132SDZr_Int
VFMADD132SDZr_Int
VFNMADD132SDZr_Int
VFMSUB213SDZr_Int
VFNMSUB213SDZr_Int
VFMADD213SDZr_Int
VFNMADD213SDZr_Int
VRNDSCALESDZr_Int
VSQRTSDZr_Int
VFMSUB231SSZr_Int
VFNMSUB231SSZr_Int
VFMADD231SSZr_Int
VFNMADD231SSZr_Int
VFMSUB132SSZr_Int
VFNMSUB132SSZr_Int
VFMADD132SSZr_Int
VFNMADD132SSZr_Int
VFMSUB213SSZr_Int
VFNMSUB213SSZr_Int
VFMADD213SSZr_Int
VFNMADD213SSZr_Int
VRNDSCALESSZr_Int
VSQRTSSZr_Int
VFMSUBSD4mr_Int
VFNMSUBSD4mr_Int
VFMADDSD4mr_Int
VFNMADDSD4mr_Int
VFMSUBSS4mr_Int
VFNMSUBSS4mr_Int
VFMADDSS4mr_Int
VFNMADDSS4mr_Int
VCVTTSD2SI64rr_Int
VCVTSD2SI64rr_Int
VCVTTSS2SI64rr_Int
VCVTSS2SI64rr_Int
VFMSUBSD4rr_Int
VFNMSUBSD4rr_Int
VFMADDSD4rr_Int
VFNMADDSD4rr_Int
VFMSUBSS4rr_Int
VFNMSUBSS4rr_Int
VFMADDSS4rr_Int
VFNMADDSS4rr_Int
VCVTSI642SDrr_Int
VCVTSI2SDrr_Int
VCVTSS2SDrr_Int
VSUBSDrr_Int
VADDSDrr_Int
VUCOMISDrr_Int
VCOMISDrr_Int
VMULSDrr_Int
VMINSDrr_Int
VCMPSDrr_Int
VDIVSDrr_Int
VMAXSDrr_Int
VCVTTSD2SIrr_Int
VCVTSD2SIrr_Int
VCVTTSS2SIrr_Int
VCVTSS2SIrr_Int
VCVTSI642SSrr_Int
VCVTSD2SSrr_Int
VCVTSI2SSrr_Int
VSUBSSrr_Int
VADDSSrr_Int
VUCOMISSrr_Int
VCOMISSrr_Int
VMULSSrr_Int
VMINSSrr_Int
VCMPSSrr_Int
VDIVSSrr_Int
VMAXSSrr_Int
VCVTTSD2SI64Zrr_Int
VCVTSD2SI64Zrr_Int
VCVTTSS2SI64Zrr_Int
VCVTSS2SI64Zrr_Int
VCVTTSD2USI64Zrr_Int
VCVTSD2USI64Zrr_Int
VCVTTSS2USI64Zrr_Int
VCVTSS2USI64Zrr_Int
VCVTSI642SDZrr_Int
VCVTUSI642SDZrr_Int
VCVTSI2SDZrr_Int
VCVTUSI2SDZrr_Int
VCVTSS2SDZrr_Int
VSUBSDZrr_Int
VADDSDZrr_Int
VUCOMISDZrr_Int
VCOMISDZrr_Int
VMULSDZrr_Int
VMINSDZrr_Int
VCMPSDZrr_Int
VDIVSDZrr_Int
VMAXSDZrr_Int
VCVTTSD2SIZrr_Int
VCVTSD2SIZrr_Int
VCVTTSS2SIZrr_Int
VCVTSS2SIZrr_Int
VCVTTSD2USIZrr_Int
VCVTSD2USIZrr_Int
VCVTTSS2USIZrr_Int
VCVTSS2USIZrr_Int
VCVTSI642SSZrr_Int
VCVTUSI642SSZrr_Int
VCVTSD2SSZrr_Int
VCVTSI2SSZrr_Int
VCVTUSI2SSZrr_Int
VSUBSSZrr_Int
VADDSSZrr_Int
VUCOMISSZrr_Int
VCOMISSZrr_Int
VMULSSZrr_Int
VMINSSZrr_Int
VCMPSSZrr_Int
VDIVSSZrr_Int
VMAXSSZrr_Int
VREDUCEPDZrribkz
VRANGEPDZrribkz
VRNDSCALEPDZrribkz
VFIXUPIMMPDZrribkz
VGETMANTPDZrribkz
VREDUCESDZrribkz
VRANGESDZrribkz
VFIXUPIMMSDZrribkz
VGETMANTSDZrribkz
VREDUCEPSZrribkz
VRANGEPSZrribkz
VRNDSCALEPSZrribkz
VFIXUPIMMPSZrribkz
VGETMANTPSZrribkz
VREDUCESSZrribkz
VRANGESSZrribkz
VFIXUPIMMSSZrribkz
VGETMANTSSZrribkz
VFMADDSUB231PDZ256mbkz
VFMSUB231PDZ256mbkz
VFNMSUB231PDZ256mbkz
VFMSUBADD231PDZ256mbkz
VFMADD231PDZ256mbkz
VFNMADD231PDZ256mbkz
VFMADDSUB132PDZ256mbkz
VFMSUB132PDZ256mbkz
VFNMSUB132PDZ256mbkz
VFMSUBADD132PDZ256mbkz
VFMADD132PDZ256mbkz
VFNMADD132PDZ256mbkz
VFMADDSUB213PDZ256mbkz
VFMSUB213PDZ256mbkz
VFNMSUB213PDZ256mbkz
VFMSUBADD213PDZ256mbkz
VFMADD213PDZ256mbkz
VFNMADD213PDZ256mbkz
VRCP14PDZ256mbkz
VRSQRT14PDZ256mbkz
VGETEXPPDZ256mbkz
VSQRTPDZ256mbkz
VPDPWSSDZ256mbkz
VPDPBUSDZ256mbkz
VPSHLDVDZ256mbkz
VPSHRDVDZ256mbkz
VPMADD52HUQZ256mbkz
VPMADD52LUQZ256mbkz
VPSHLDVQZ256mbkz
VPSHRDVQZ256mbkz
VPDPWSSDSZ256mbkz
VPDPBUSDSZ256mbkz
VFMADDSUB231PSZ256mbkz
VFMSUB231PSZ256mbkz
VFNMSUB231PSZ256mbkz
VFMSUBADD231PSZ256mbkz
VFMADD231PSZ256mbkz
VFNMADD231PSZ256mbkz
VFMADDSUB132PSZ256mbkz
VFMSUB132PSZ256mbkz
VFNMSUB132PSZ256mbkz
VFMSUBADD132PSZ256mbkz
VFMADD132PSZ256mbkz
VFNMADD132PSZ256mbkz
VFMADDSUB213PSZ256mbkz
VFMSUB213PSZ256mbkz
VFNMSUB213PSZ256mbkz
VFMSUBADD213PSZ256mbkz
VFMADD213PSZ256mbkz
VFNMADD213PSZ256mbkz
VRCP14PSZ256mbkz
VRSQRT14PSZ256mbkz
VDPBF16PSZ256mbkz
VGETEXPPSZ256mbkz
VSQRTPSZ256mbkz
VFMADDSUB231PDZ128mbkz
VFMSUB231PDZ128mbkz
VFNMSUB231PDZ128mbkz
VFMSUBADD231PDZ128mbkz
VFMADD231PDZ128mbkz
VFNMADD231PDZ128mbkz
VFMADDSUB132PDZ128mbkz
VFMSUB132PDZ128mbkz
VFNMSUB132PDZ128mbkz
VFMSUBADD132PDZ128mbkz
VFMADD132PDZ128mbkz
VFNMADD132PDZ128mbkz
VFMADDSUB213PDZ128mbkz
VFMSUB213PDZ128mbkz
VFNMSUB213PDZ128mbkz
VFMSUBADD213PDZ128mbkz
VFMADD213PDZ128mbkz
VFNMADD213PDZ128mbkz
VRCP14PDZ128mbkz
VRSQRT14PDZ128mbkz
VGETEXPPDZ128mbkz
VSQRTPDZ128mbkz
VPDPWSSDZ128mbkz
VPDPBUSDZ128mbkz
VPSHLDVDZ128mbkz
VPSHRDVDZ128mbkz
VPMADD52HUQZ128mbkz
VPMADD52LUQZ128mbkz
VPSHLDVQZ128mbkz
VPSHRDVQZ128mbkz
VPDPWSSDSZ128mbkz
VPDPBUSDSZ128mbkz
VFMADDSUB231PSZ128mbkz
VFMSUB231PSZ128mbkz
VFNMSUB231PSZ128mbkz
VFMSUBADD231PSZ128mbkz
VFMADD231PSZ128mbkz
VFNMADD231PSZ128mbkz
VFMADDSUB132PSZ128mbkz
VFMSUB132PSZ128mbkz
VFNMSUB132PSZ128mbkz
VFMSUBADD132PSZ128mbkz
VFMADD132PSZ128mbkz
VFNMADD132PSZ128mbkz
VFMADDSUB213PSZ128mbkz
VFMSUB213PSZ128mbkz
VFNMSUB213PSZ128mbkz
VFMSUBADD213PSZ128mbkz
VFMADD213PSZ128mbkz
VFNMADD213PSZ128mbkz
VRCP14PSZ128mbkz
VRSQRT14PSZ128mbkz
VDPBF16PSZ128mbkz
VGETEXPPSZ128mbkz
VSQRTPSZ128mbkz
VFMADDSUB231PDZmbkz
VFMSUB231PDZmbkz
VFNMSUB231PDZmbkz
VFMSUBADD231PDZmbkz
VFMADD231PDZmbkz
VFNMADD231PDZmbkz
VFMADDSUB132PDZmbkz
VFMSUB132PDZmbkz
VFNMSUB132PDZmbkz
VFMSUBADD132PDZmbkz
VFMADD132PDZmbkz
VFNMADD132PDZmbkz
VEXP2PDZmbkz
VFMADDSUB213PDZmbkz
VFMSUB213PDZmbkz
VFNMSUB213PDZmbkz
VFMSUBADD213PDZmbkz
VFMADD213PDZmbkz
VFNMADD213PDZmbkz
VRCP14PDZmbkz
VRSQRT14PDZmbkz
VRCP28PDZmbkz
VRSQRT28PDZmbkz
VGETEXPPDZmbkz
VSQRTPDZmbkz
VPDPWSSDZmbkz
VPDPBUSDZmbkz
VPSHLDVDZmbkz
VPSHRDVDZmbkz
VPMADD52HUQZmbkz
VPMADD52LUQZmbkz
VPSHLDVQZmbkz
VPSHRDVQZmbkz
VPDPWSSDSZmbkz
VPDPBUSDSZmbkz
VFMADDSUB231PSZmbkz
VFMSUB231PSZmbkz
VFNMSUB231PSZmbkz
VFMSUBADD231PSZmbkz
VFMADD231PSZmbkz
VFNMADD231PSZmbkz
VFMADDSUB132PSZmbkz
VFMSUB132PSZmbkz
VFNMSUB132PSZmbkz
VFMSUBADD132PSZmbkz
VFMADD132PSZmbkz
VFNMADD132PSZmbkz
VEXP2PSZmbkz
VFMADDSUB213PSZmbkz
VFMSUB213PSZmbkz
VFNMSUB213PSZmbkz
VFMSUBADD213PSZmbkz
VFMADD213PSZmbkz
VFNMADD213PSZmbkz
VRCP14PSZmbkz
VRSQRT14PSZmbkz
VDPBF16PSZmbkz
VRCP28PSZmbkz
VRSQRT28PSZmbkz
VGETEXPPSZmbkz
VSQRTPSZmbkz
VPERMI2D256rmbkz
VPERMT2D256rmbkz
VPERMI2PD256rmbkz
VPERMT2PD256rmbkz
VPERMI2Q256rmbkz
VPERMT2Q256rmbkz
VPERMI2PS256rmbkz
VPERMT2PS256rmbkz
VCVTNE2PS2BF16Z256rmbkz
VCVTNEPS2BF16Z256rmbkz
VPMULTISHIFTQBZ256rmbkz
VPSUBDZ256rmbkz
VPADDDZ256rmbkz
VPANDDZ256rmbkz
VPMULLDZ256rmbkz
VPBLENDMDZ256rmbkz
VPERMDZ256rmbkz
VPANDNDZ256rmbkz
VCVTDQ2PDZ256rmbkz
VCVTUDQ2PDZ256rmbkz
VCVTQQ2PDZ256rmbkz
VCVTUQQ2PDZ256rmbkz
VCVTPS2PDZ256rmbkz
VSUBPDZ256rmbkz
VMINCPDZ256rmbkz
VMAXCPDZ256rmbkz
VADDPDZ256rmbkz
VANDPDZ256rmbkz
VSCALEFPDZ256rmbkz
VUNPCKHPDZ256rmbkz
VPERMILPDZ256rmbkz
VUNPCKLPDZ256rmbkz
VMULPDZ256rmbkz
VBLENDMPDZ256rmbkz
VPERMPDZ256rmbkz
VANDNPDZ256rmbkz
VMINPDZ256rmbkz
VORPDZ256rmbkz
VXORPDZ256rmbkz
VDIVPDZ256rmbkz
VMAXPDZ256rmbkz
VPORDZ256rmbkz
VPXORDZ256rmbkz
VPABSDZ256rmbkz
VPMINSDZ256rmbkz
VPMAXSDZ256rmbkz
VPCONFLICTDZ256rmbkz
VPOPCNTDZ256rmbkz
VPLZCNTDZ256rmbkz
VPMINUDZ256rmbkz
VPMAXUDZ256rmbkz
VPSRAVDZ256rmbkz
VPSLLVDZ256rmbkz
VPROLVDZ256rmbkz
VPSRLVDZ256rmbkz
VPRORVDZ256rmbkz
VPSUBQZ256rmbkz
VCVTTPD2DQZ256rmbkz
VCVTPD2DQZ256rmbkz
VCVTTPS2DQZ256rmbkz
VCVTPS2DQZ256rmbkz
VPADDQZ256rmbkz
VPUNPCKHDQZ256rmbkz
VPUNPCKLDQZ256rmbkz
VPMULDQZ256rmbkz
VPANDQZ256rmbkz
VPUNPCKHQDQZ256rmbkz
VPUNPCKLQDQZ256rmbkz
VCVTTPD2UDQZ256rmbkz
VCVTPD2UDQZ256rmbkz
VCVTTPS2UDQZ256rmbkz
VCVTPS2UDQZ256rmbkz
VPMULUDQZ256rmbkz
VPMULLQZ256rmbkz
VPBLENDMQZ256rmbkz
VPERMQZ256rmbkz
VPANDNQZ256rmbkz
VCVTTPD2QQZ256rmbkz
VCVTPD2QQZ256rmbkz
VCVTTPS2QQZ256rmbkz
VCVTPS2QQZ256rmbkz
VCVTTPD2UQQZ256rmbkz
VCVTPD2UQQZ256rmbkz
VCVTTPS2UQQZ256rmbkz
VCVTPS2UQQZ256rmbkz
VPORQZ256rmbkz
VPXORQZ256rmbkz
VPABSQZ256rmbkz
VPMINSQZ256rmbkz
VPMAXSQZ256rmbkz
VPCONFLICTQZ256rmbkz
VPOPCNTQZ256rmbkz
VPLZCNTQZ256rmbkz
VPMINUQZ256rmbkz
VPMAXUQZ256rmbkz
VPSRAVQZ256rmbkz
VPSLLVQZ256rmbkz
VPROLVQZ256rmbkz
VPSRLVQZ256rmbkz
VPRORVQZ256rmbkz
VCVTPD2PSZ256rmbkz
VCVTDQ2PSZ256rmbkz
VCVTUDQ2PSZ256rmbkz
VCVTQQ2PSZ256rmbkz
VCVTUQQ2PSZ256rmbkz
VSUBPSZ256rmbkz
VMINCPSZ256rmbkz
VMAXCPSZ256rmbkz
VADDPSZ256rmbkz
VANDPSZ256rmbkz
VSCALEFPSZ256rmbkz
VUNPCKHPSZ256rmbkz
VPERMILPSZ256rmbkz
VUNPCKLPSZ256rmbkz
VMULPSZ256rmbkz
VBLENDMPSZ256rmbkz
VPERMPSZ256rmbkz
VANDNPSZ256rmbkz
VMINPSZ256rmbkz
VORPSZ256rmbkz
VXORPSZ256rmbkz
VDIVPSZ256rmbkz
VMAXPSZ256rmbkz
VPACKSSDWZ256rmbkz
VPACKUSDWZ256rmbkz
VPERMI2D128rmbkz
VPERMT2D128rmbkz
VPERMI2PD128rmbkz
VPERMT2PD128rmbkz
VPERMI2Q128rmbkz
VPERMT2Q128rmbkz
VPERMI2PS128rmbkz
VPERMT2PS128rmbkz
VCVTNE2PS2BF16Z128rmbkz
VCVTNEPS2BF16Z128rmbkz
VPMULTISHIFTQBZ128rmbkz
VPSUBDZ128rmbkz
VPADDDZ128rmbkz
VPANDDZ128rmbkz
VPMULLDZ128rmbkz
VPBLENDMDZ128rmbkz
VPANDNDZ128rmbkz
VCVTDQ2PDZ128rmbkz
VCVTUDQ2PDZ128rmbkz
VCVTQQ2PDZ128rmbkz
VCVTUQQ2PDZ128rmbkz
VCVTPS2PDZ128rmbkz
VSUBPDZ128rmbkz
VMINCPDZ128rmbkz
VMAXCPDZ128rmbkz
VADDPDZ128rmbkz
VANDPDZ128rmbkz
VSCALEFPDZ128rmbkz
VUNPCKHPDZ128rmbkz
VPERMILPDZ128rmbkz
VUNPCKLPDZ128rmbkz
VMULPDZ128rmbkz
VBLENDMPDZ128rmbkz
VANDNPDZ128rmbkz
VMINPDZ128rmbkz
VORPDZ128rmbkz
VXORPDZ128rmbkz
VDIVPDZ128rmbkz
VMAXPDZ128rmbkz
VPORDZ128rmbkz
VPXORDZ128rmbkz
VPABSDZ128rmbkz
VPMINSDZ128rmbkz
VPMAXSDZ128rmbkz
VPCONFLICTDZ128rmbkz
VPOPCNTDZ128rmbkz
VPLZCNTDZ128rmbkz
VPMINUDZ128rmbkz
VPMAXUDZ128rmbkz
VPSRAVDZ128rmbkz
VPSLLVDZ128rmbkz
VPROLVDZ128rmbkz
VPSRLVDZ128rmbkz
VPRORVDZ128rmbkz
VPSUBQZ128rmbkz
VCVTTPD2DQZ128rmbkz
VCVTPD2DQZ128rmbkz
VCVTTPS2DQZ128rmbkz
VCVTPS2DQZ128rmbkz
VPADDQZ128rmbkz
VPUNPCKHDQZ128rmbkz
VPUNPCKLDQZ128rmbkz
VPMULDQZ128rmbkz
VPANDQZ128rmbkz
VPUNPCKHQDQZ128rmbkz
VPUNPCKLQDQZ128rmbkz
VCVTTPD2UDQZ128rmbkz
VCVTPD2UDQZ128rmbkz
VCVTTPS2UDQZ128rmbkz
VCVTPS2UDQZ128rmbkz
VPMULUDQZ128rmbkz
VPMULLQZ128rmbkz
VPBLENDMQZ128rmbkz
VPANDNQZ128rmbkz
VCVTTPD2QQZ128rmbkz
VCVTPD2QQZ128rmbkz
VCVTTPS2QQZ128rmbkz
VCVTPS2QQZ128rmbkz
VCVTTPD2UQQZ128rmbkz
VCVTPD2UQQZ128rmbkz
VCVTTPS2UQQZ128rmbkz
VCVTPS2UQQZ128rmbkz
VPORQZ128rmbkz
VPXORQZ128rmbkz
VPABSQZ128rmbkz
VPMINSQZ128rmbkz
VPMAXSQZ128rmbkz
VPCONFLICTQZ128rmbkz
VPOPCNTQZ128rmbkz
VPLZCNTQZ128rmbkz
VPMINUQZ128rmbkz
VPMAXUQZ128rmbkz
VPSRAVQZ128rmbkz
VPSLLVQZ128rmbkz
VPROLVQZ128rmbkz
VPSRLVQZ128rmbkz
VPRORVQZ128rmbkz
VCVTPD2PSZ128rmbkz
VCVTDQ2PSZ128rmbkz
VCVTUDQ2PSZ128rmbkz
VCVTQQ2PSZ128rmbkz
VCVTUQQ2PSZ128rmbkz
VSUBPSZ128rmbkz
VMINCPSZ128rmbkz
VMAXCPSZ128rmbkz
VADDPSZ128rmbkz
VANDPSZ128rmbkz
VSCALEFPSZ128rmbkz
VUNPCKHPSZ128rmbkz
VPERMILPSZ128rmbkz
VUNPCKLPSZ128rmbkz
VMULPSZ128rmbkz
VBLENDMPSZ128rmbkz
VANDNPSZ128rmbkz
VMINPSZ128rmbkz
VORPSZ128rmbkz
VXORPSZ128rmbkz
VDIVPSZ128rmbkz
VMAXPSZ128rmbkz
VPACKSSDWZ128rmbkz
VPACKUSDWZ128rmbkz
VPERMI2Drmbkz
VPERMT2Drmbkz
VPERMI2PDrmbkz
VPERMT2PDrmbkz
VPERMI2Qrmbkz
VPERMT2Qrmbkz
VPERMI2PSrmbkz
VPERMT2PSrmbkz
VCVTNE2PS2BF16Zrmbkz
VCVTNEPS2BF16Zrmbkz
VPMULTISHIFTQBZrmbkz
VPSUBDZrmbkz
VPADDDZrmbkz
VPANDDZrmbkz
VPMULLDZrmbkz
VPBLENDMDZrmbkz
VPERMDZrmbkz
VPANDNDZrmbkz
VCVTDQ2PDZrmbkz
VCVTUDQ2PDZrmbkz
VCVTQQ2PDZrmbkz
VCVTUQQ2PDZrmbkz
VCVTPS2PDZrmbkz
VSUBPDZrmbkz
VMINCPDZrmbkz
VMAXCPDZrmbkz
VADDPDZrmbkz
VANDPDZrmbkz
VSCALEFPDZrmbkz
VUNPCKHPDZrmbkz
VPERMILPDZrmbkz
VUNPCKLPDZrmbkz
VMULPDZrmbkz
VBLENDMPDZrmbkz
VPERMPDZrmbkz
VANDNPDZrmbkz
VMINPDZrmbkz
VORPDZrmbkz
VXORPDZrmbkz
VDIVPDZrmbkz
VMAXPDZrmbkz
VPORDZrmbkz
VPXORDZrmbkz
VPABSDZrmbkz
VPMINSDZrmbkz
VPMAXSDZrmbkz
VPCONFLICTDZrmbkz
VPOPCNTDZrmbkz
VPLZCNTDZrmbkz
VPMINUDZrmbkz
VPMAXUDZrmbkz
VPSRAVDZrmbkz
VPSLLVDZrmbkz
VPROLVDZrmbkz
VPSRLVDZrmbkz
VPRORVDZrmbkz
VPSUBQZrmbkz
VCVTTPD2DQZrmbkz
VCVTPD2DQZrmbkz
VCVTTPS2DQZrmbkz
VCVTPS2DQZrmbkz
VPADDQZrmbkz
VPUNPCKHDQZrmbkz
VPUNPCKLDQZrmbkz
VPMULDQZrmbkz
VPANDQZrmbkz
VPUNPCKHQDQZrmbkz
VPUNPCKLQDQZrmbkz
VCVTTPD2UDQZrmbkz
VCVTPD2UDQZrmbkz
VCVTTPS2UDQZrmbkz
VCVTPS2UDQZrmbkz
VPMULUDQZrmbkz
VPMULLQZrmbkz
VPBLENDMQZrmbkz
VPERMQZrmbkz
VPANDNQZrmbkz
VCVTTPD2QQZrmbkz
VCVTPD2QQZrmbkz
VCVTTPS2QQZrmbkz
VCVTPS2QQZrmbkz
VCVTTPD2UQQZrmbkz
VCVTPD2UQQZrmbkz
VCVTTPS2UQQZrmbkz
VCVTPS2UQQZrmbkz
VPORQZrmbkz
VPXORQZrmbkz
VPABSQZrmbkz
VPMINSQZrmbkz
VPMAXSQZrmbkz
VPCONFLICTQZrmbkz
VPOPCNTQZrmbkz
VPLZCNTQZrmbkz
VPMINUQZrmbkz
VPMAXUQZrmbkz
VPSRAVQZrmbkz
VPSLLVQZrmbkz
VPROLVQZrmbkz
VPSRLVQZrmbkz
VPRORVQZrmbkz
VCVTPD2PSZrmbkz
VCVTDQ2PSZrmbkz
VCVTUDQ2PSZrmbkz
VCVTQQ2PSZrmbkz
VCVTUQQ2PSZrmbkz
VSUBPSZrmbkz
VMINCPSZrmbkz
VMAXCPSZrmbkz
VADDPSZrmbkz
VANDPSZrmbkz
VSCALEFPSZrmbkz
VUNPCKHPSZrmbkz
VPERMILPSZrmbkz
VUNPCKLPSZrmbkz
VMULPSZrmbkz
VBLENDMPSZrmbkz
VPERMPSZrmbkz
VANDNPSZrmbkz
VMINPSZrmbkz
VORPSZrmbkz
VXORPSZrmbkz
VDIVPSZrmbkz
VMAXPSZrmbkz
VPACKSSDWZrmbkz
VPACKUSDWZrmbkz
VFMADDSUB231PDZrbkz
VFMSUB231PDZrbkz
VFNMSUB231PDZrbkz
VFMSUBADD231PDZrbkz
VFMADD231PDZrbkz
VFNMADD231PDZrbkz
VFMADDSUB132PDZrbkz
VFMSUB132PDZrbkz
VFNMSUB132PDZrbkz
VFMSUBADD132PDZrbkz
VFMADD132PDZrbkz
VFNMADD132PDZrbkz
VEXP2PDZrbkz
VFMADDSUB213PDZrbkz
VFMSUB213PDZrbkz
VFNMSUB213PDZrbkz
VFMSUBADD213PDZrbkz
VFMADD213PDZrbkz
VFNMADD213PDZrbkz
VRCP28PDZrbkz
VRSQRT28PDZrbkz
VGETEXPPDZrbkz
VSQRTPDZrbkz
VRCP28SDZrbkz
VRSQRT28SDZrbkz
VGETEXPSDZrbkz
VFMADDSUB231PSZrbkz
VFMSUB231PSZrbkz
VFNMSUB231PSZrbkz
VFMSUBADD231PSZrbkz
VFMADD231PSZrbkz
VFNMADD231PSZrbkz
VFMADDSUB132PSZrbkz
VFMSUB132PSZrbkz
VFNMSUB132PSZrbkz
VFMSUBADD132PSZrbkz
VFMADD132PSZrbkz
VFNMADD132PSZrbkz
VEXP2PSZrbkz
VFMADDSUB213PSZrbkz
VFMSUB213PSZrbkz
VFNMSUB213PSZrbkz
VFMSUBADD213PSZrbkz
VFMADD213PSZrbkz
VFNMADD213PSZrbkz
VRCP28PSZrbkz
VRSQRT28PSZrbkz
VGETEXPPSZrbkz
VSQRTPSZrbkz
VRCP28SSZrbkz
VRSQRT28SSZrbkz
VGETEXPSSZrbkz
VCVTQQ2PDZrrbkz
VCVTUQQ2PDZrrbkz
VCVTPS2PDZrrbkz
VSUBPDZrrbkz
VADDPDZrrbkz
VSCALEFPDZrrbkz
VMULPDZrrbkz
VMINPDZrrbkz
VDIVPDZrrbkz
VMAXPDZrrbkz
VCVTPS2PHZrrbkz
VCVTTPD2DQZrrbkz
VCVTPD2DQZrrbkz
VCVTTPS2DQZrrbkz
VCVTPS2DQZrrbkz
VCVTTPD2UDQZrrbkz
VCVTPD2UDQZrrbkz
VCVTTPS2UDQZrrbkz
VCVTPS2UDQZrrbkz
VCVTTPD2QQZrrbkz
VCVTPD2QQZrrbkz
VCVTTPS2QQZrrbkz
VCVTPS2QQZrrbkz
VCVTTPD2UQQZrrbkz
VCVTPD2UQQZrrbkz
VCVTTPS2UQQZrrbkz
VCVTPS2UQQZrrbkz
VCVTPD2PSZrrbkz
VCVTPH2PSZrrbkz
VCVTDQ2PSZrrbkz
VCVTUDQ2PSZrrbkz
VCVTQQ2PSZrrbkz
VCVTUQQ2PSZrrbkz
VSUBPSZrrbkz
VADDPSZrrbkz
VSCALEFPSZrrbkz
VMULPSZrrbkz
VMINPSZrrbkz
VDIVPSZrrbkz
VMAXPSZrrbkz
VPSRADZ256mbikz
VPSHUFDZ256mbikz
VPSLLDZ256mbikz
VPROLDZ256mbikz
VPSRLDZ256mbikz
VPERMILPDZ256mbikz
VPERMPDZ256mbikz
VPRORDZ256mbikz
VPSRAQZ256mbikz
VPSLLQZ256mbikz
VPROLQZ256mbikz
VPSRLQZ256mbikz
VPERMQZ256mbikz
VPRORQZ256mbikz
VPERMILPSZ256mbikz
VPSRADZ128mbikz
VPSHUFDZ128mbikz
VPSLLDZ128mbikz
VPROLDZ128mbikz
VPSRLDZ128mbikz
VPERMILPDZ128mbikz
VPRORDZ128mbikz
VPSRAQZ128mbikz
VPSLLQZ128mbikz
VPROLQZ128mbikz
VPSRLQZ128mbikz
VPRORQZ128mbikz
VPERMILPSZ128mbikz
VPSRADZmbikz
VPSHUFDZmbikz
VPSLLDZmbikz
VPROLDZmbikz
VPSRLDZmbikz
VPERMILPDZmbikz
VPERMPDZmbikz
VPRORDZmbikz
VPSRAQZmbikz
VPSLLQZmbikz
VPROLQZmbikz
VPSRLQZmbikz
VPERMQZmbikz
VPRORQZmbikz
VPERMILPSZmbikz
VSHUFF64X2Z256rmbikz
VSHUFI64X2Z256rmbikz
VSHUFF32X4Z256rmbikz
VSHUFI32X4Z256rmbikz
VGF2P8AFFINEQBZ256rmbikz
VGF2P8AFFINEINVQBZ256rmbikz
VPSHLDDZ256rmbikz
VPSHRDDZ256rmbikz
VPTERNLOGDZ256rmbikz
VALIGNDZ256rmbikz
VREDUCEPDZ256rmbikz
VRANGEPDZ256rmbikz
VRNDSCALEPDZ256rmbikz
VSHUFPDZ256rmbikz
VFIXUPIMMPDZ256rmbikz
VGETMANTPDZ256rmbikz
VPSHLDQZ256rmbikz
VPSHRDQZ256rmbikz
VPTERNLOGQZ256rmbikz
VALIGNQZ256rmbikz
VREDUCEPSZ256rmbikz
VRANGEPSZ256rmbikz
VRNDSCALEPSZ256rmbikz
VSHUFPSZ256rmbikz
VFIXUPIMMPSZ256rmbikz
VGETMANTPSZ256rmbikz
VGF2P8AFFINEQBZ128rmbikz
VGF2P8AFFINEINVQBZ128rmbikz
VPSHLDDZ128rmbikz
VPSHRDDZ128rmbikz
VPTERNLOGDZ128rmbikz
VALIGNDZ128rmbikz
VREDUCEPDZ128rmbikz
VRANGEPDZ128rmbikz
VRNDSCALEPDZ128rmbikz
VSHUFPDZ128rmbikz
VFIXUPIMMPDZ128rmbikz
VGETMANTPDZ128rmbikz
VPSHLDQZ128rmbikz
VPSHRDQZ128rmbikz
VPTERNLOGQZ128rmbikz
VALIGNQZ128rmbikz
VREDUCEPSZ128rmbikz
VRANGEPSZ128rmbikz
VRNDSCALEPSZ128rmbikz
VSHUFPSZ128rmbikz
VFIXUPIMMPSZ128rmbikz
VGETMANTPSZ128rmbikz
VSHUFF64X2Zrmbikz
VSHUFI64X2Zrmbikz
VSHUFF32X4Zrmbikz
VSHUFI32X4Zrmbikz
VGF2P8AFFINEQBZrmbikz
VGF2P8AFFINEINVQBZrmbikz
VPSHLDDZrmbikz
VPSHRDDZrmbikz
VPTERNLOGDZrmbikz
VALIGNDZrmbikz
VREDUCEPDZrmbikz
VRANGEPDZrmbikz
VRNDSCALEPDZrmbikz
VSHUFPDZrmbikz
VFIXUPIMMPDZrmbikz
VGETMANTPDZrmbikz
VPSHLDQZrmbikz
VPSHRDQZrmbikz
VPTERNLOGQZrmbikz
VALIGNQZrmbikz
VREDUCEPSZrmbikz
VRANGEPSZrmbikz
VRNDSCALEPSZrmbikz
VSHUFPSZrmbikz
VFIXUPIMMPSZrmbikz
VGETMANTPSZrmbikz
VPSRADZ256mikz
VPSHUFDZ256mikz
VPSLLDZ256mikz
VPROLDZ256mikz
VPSRLDZ256mikz
VPERMILPDZ256mikz
VPERMPDZ256mikz
VPRORDZ256mikz
VPSRAQZ256mikz
VPSLLQZ256mikz
VPROLQZ256mikz
VPSRLQZ256mikz
VPERMQZ256mikz
VPRORQZ256mikz
VPERMILPSZ256mikz
VPSRAWZ256mikz
VPSHUFHWZ256mikz
VPSHUFLWZ256mikz
VPSLLWZ256mikz
VPSRLWZ256mikz
VPSRADZ128mikz
VPSHUFDZ128mikz
VPSLLDZ128mikz
VPROLDZ128mikz
VPSRLDZ128mikz
VPERMILPDZ128mikz
VPRORDZ128mikz
VPSRAQZ128mikz
VPSLLQZ128mikz
VPROLQZ128mikz
VPSRLQZ128mikz
VPRORQZ128mikz
VPERMILPSZ128mikz
VPSRAWZ128mikz
VPSHUFHWZ128mikz
VPSHUFLWZ128mikz
VPSLLWZ128mikz
VPSRLWZ128mikz
VPSRADZmikz
VPSHUFDZmikz
VPSLLDZmikz
VPROLDZmikz
VPSRLDZmikz
VPERMILPDZmikz
VPERMPDZmikz
VPRORDZmikz
VPSRAQZmikz
VPSLLQZmikz
VPROLQZmikz
VPSRLQZmikz
VPERMQZmikz
VPRORQZmikz
VPERMILPSZmikz
VPSRAWZmikz
VPSHUFHWZmikz
VPSHUFLWZmikz
VPSLLWZmikz
VPSRLWZmikz
VSHUFF64X2Z256rmikz
VSHUFI64X2Z256rmikz
VSHUFF32X4Z256rmikz
VSHUFI32X4Z256rmikz
VGF2P8AFFINEQBZ256rmikz
VGF2P8AFFINEINVQBZ256rmikz
VPSHLDDZ256rmikz
VPSHRDDZ256rmikz
VPTERNLOGDZ256rmikz
VALIGNDZ256rmikz
VREDUCEPDZ256rmikz
VRANGEPDZ256rmikz
VRNDSCALEPDZ256rmikz
VSHUFPDZ256rmikz
VFIXUPIMMPDZ256rmikz
VGETMANTPDZ256rmikz
VPSHLDQZ256rmikz
VPSHRDQZ256rmikz
VPTERNLOGQZ256rmikz
VALIGNQZ256rmikz
VPALIGNRZ256rmikz
VREDUCEPSZ256rmikz
VRANGEPSZ256rmikz
VRNDSCALEPSZ256rmikz
VSHUFPSZ256rmikz
VFIXUPIMMPSZ256rmikz
VGETMANTPSZ256rmikz
VDBPSADBWZ256rmikz
VPSHLDWZ256rmikz
VPSHRDWZ256rmikz
VGF2P8AFFINEQBZ128rmikz
VGF2P8AFFINEINVQBZ128rmikz
VPSHLDDZ128rmikz
VPSHRDDZ128rmikz
VPTERNLOGDZ128rmikz
VALIGNDZ128rmikz
VREDUCEPDZ128rmikz
VRANGEPDZ128rmikz
VRNDSCALEPDZ128rmikz
VSHUFPDZ128rmikz
VFIXUPIMMPDZ128rmikz
VGETMANTPDZ128rmikz
VPSHLDQZ128rmikz
VPSHRDQZ128rmikz
VPTERNLOGQZ128rmikz
VALIGNQZ128rmikz
VPALIGNRZ128rmikz
VREDUCEPSZ128rmikz
VRANGEPSZ128rmikz
VRNDSCALEPSZ128rmikz
VSHUFPSZ128rmikz
VFIXUPIMMPSZ128rmikz
VGETMANTPSZ128rmikz
VDBPSADBWZ128rmikz
VPSHLDWZ128rmikz
VPSHRDWZ128rmikz
VSHUFF64X2Zrmikz
VSHUFI64X2Zrmikz
VSHUFF32X4Zrmikz
VSHUFI32X4Zrmikz
VGF2P8AFFINEQBZrmikz
VGF2P8AFFINEINVQBZrmikz
VPSHLDDZrmikz
VPSHRDDZrmikz
VPTERNLOGDZrmikz
VALIGNDZrmikz
VREDUCEPDZrmikz
VRANGEPDZrmikz
VRNDSCALEPDZrmikz
VSHUFPDZrmikz
VFIXUPIMMPDZrmikz
VGETMANTPDZrmikz
VREDUCESDZrmikz
VRANGESDZrmikz
VFIXUPIMMSDZrmikz
VGETMANTSDZrmikz
VPSHLDQZrmikz
VPSHRDQZrmikz
VPTERNLOGQZrmikz
VALIGNQZrmikz
VPALIGNRZrmikz
VREDUCEPSZrmikz
VRANGEPSZrmikz
VRNDSCALEPSZrmikz
VSHUFPSZrmikz
VFIXUPIMMPSZrmikz
VGETMANTPSZrmikz
VREDUCESSZrmikz
VRANGESSZrmikz
VFIXUPIMMSSZrmikz
VGETMANTSSZrmikz
VDBPSADBWZrmikz
VPSHLDWZrmikz
VPSHRDWZrmikz
VPSRADZ256rikz
VPSHUFDZ256rikz
VPSLLDZ256rikz
VPROLDZ256rikz
VPSRLDZ256rikz
VPERMILPDZ256rikz
VPERMPDZ256rikz
VPRORDZ256rikz
VPSRAQZ256rikz
VPSLLQZ256rikz
VPROLQZ256rikz
VPSRLQZ256rikz
VPERMQZ256rikz
VPRORQZ256rikz
VPERMILPSZ256rikz
VPSRAWZ256rikz
VPSHUFHWZ256rikz
VPSHUFLWZ256rikz
VPSLLWZ256rikz
VPSRLWZ256rikz
VPSRADZ128rikz
VPSHUFDZ128rikz
VPSLLDZ128rikz
VPROLDZ128rikz
VPSRLDZ128rikz
VPERMILPDZ128rikz
VPRORDZ128rikz
VPSRAQZ128rikz
VPSLLQZ128rikz
VPROLQZ128rikz
VPSRLQZ128rikz
VPRORQZ128rikz
VPERMILPSZ128rikz
VPSRAWZ128rikz
VPSHUFHWZ128rikz
VPSHUFLWZ128rikz
VPSLLWZ128rikz
VPSRLWZ128rikz
VPSRADZrikz
VPSHUFDZrikz
VPSLLDZrikz
VPROLDZrikz
VPSRLDZrikz
VPERMILPDZrikz
VPERMPDZrikz
VPRORDZrikz
VPSRAQZrikz
VPSLLQZrikz
VPROLQZrikz
VPSRLQZrikz
VPERMQZrikz
VPRORQZrikz
VPERMILPSZrikz
VPSRAWZrikz
VPSHUFHWZrikz
VPSHUFLWZrikz
VPSLLWZrikz
VPSRLWZrikz
VSHUFF64X2Z256rrikz
VSHUFI64X2Z256rrikz
VSHUFF32X4Z256rrikz
VSHUFI32X4Z256rrikz
VGF2P8AFFINEQBZ256rrikz
VGF2P8AFFINEINVQBZ256rrikz
VPSHLDDZ256rrikz
VPSHRDDZ256rrikz
VPTERNLOGDZ256rrikz
VALIGNDZ256rrikz
VREDUCEPDZ256rrikz
VRANGEPDZ256rrikz
VRNDSCALEPDZ256rrikz
VSHUFPDZ256rrikz
VFIXUPIMMPDZ256rrikz
VGETMANTPDZ256rrikz
VPSHLDQZ256rrikz
VPSHRDQZ256rrikz
VPTERNLOGQZ256rrikz
VALIGNQZ256rrikz
VPALIGNRZ256rrikz
VREDUCEPSZ256rrikz
VRANGEPSZ256rrikz
VRNDSCALEPSZ256rrikz
VSHUFPSZ256rrikz
VFIXUPIMMPSZ256rrikz
VGETMANTPSZ256rrikz
VDBPSADBWZ256rrikz
VPSHLDWZ256rrikz
VPSHRDWZ256rrikz
VGF2P8AFFINEQBZ128rrikz
VGF2P8AFFINEINVQBZ128rrikz
VPSHLDDZ128rrikz
VPSHRDDZ128rrikz
VPTERNLOGDZ128rrikz
VALIGNDZ128rrikz
VREDUCEPDZ128rrikz
VRANGEPDZ128rrikz
VRNDSCALEPDZ128rrikz
VSHUFPDZ128rrikz
VFIXUPIMMPDZ128rrikz
VGETMANTPDZ128rrikz
VPSHLDQZ128rrikz
VPSHRDQZ128rrikz
VPTERNLOGQZ128rrikz
VALIGNQZ128rrikz
VPALIGNRZ128rrikz
VREDUCEPSZ128rrikz
VRANGEPSZ128rrikz
VRNDSCALEPSZ128rrikz
VSHUFPSZ128rrikz
VFIXUPIMMPSZ128rrikz
VGETMANTPSZ128rrikz
VDBPSADBWZ128rrikz
VPSHLDWZ128rrikz
VPSHRDWZ128rrikz
VSHUFF64X2Zrrikz
VSHUFI64X2Zrrikz
VSHUFF32X4Zrrikz
VSHUFI32X4Zrrikz
VGF2P8AFFINEQBZrrikz
VGF2P8AFFINEINVQBZrrikz
VPSHLDDZrrikz
VPSHRDDZrrikz
VPTERNLOGDZrrikz
VALIGNDZrrikz
VREDUCEPDZrrikz
VRANGEPDZrrikz
VRNDSCALEPDZrrikz
VSHUFPDZrrikz
VFIXUPIMMPDZrrikz
VGETMANTPDZrrikz
VREDUCESDZrrikz
VRANGESDZrrikz
VFIXUPIMMSDZrrikz
VGETMANTSDZrrikz
VPSHLDQZrrikz
VPSHRDQZrrikz
VPTERNLOGQZrrikz
VALIGNQZrrikz
VPALIGNRZrrikz
VREDUCEPSZrrikz
VRANGEPSZrrikz
VRNDSCALEPSZrrikz
VSHUFPSZrrikz
VFIXUPIMMPSZrrikz
VGETMANTPSZrrikz
VREDUCESSZrrikz
VRANGESSZrrikz
VFIXUPIMMSSZrrikz
VGETMANTSSZrrikz
VDBPSADBWZrrikz
VPSHLDWZrrikz
VPSHRDWZrrikz
VFMADDSUB231PDZ256mkz
VFMSUB231PDZ256mkz
VFNMSUB231PDZ256mkz
VFMSUBADD231PDZ256mkz
VFMADD231PDZ256mkz
VFNMADD231PDZ256mkz
VFMADDSUB132PDZ256mkz
VFMSUB132PDZ256mkz
VFNMSUB132PDZ256mkz
VFMSUBADD132PDZ256mkz
VFMADD132PDZ256mkz
VFNMADD132PDZ256mkz
VFMADDSUB213PDZ256mkz
VFMSUB213PDZ256mkz
VFNMSUB213PDZ256mkz
VFMSUBADD213PDZ256mkz
VFMADD213PDZ256mkz
VFNMADD213PDZ256mkz
VRCP14PDZ256mkz
VRSQRT14PDZ256mkz
VGETEXPPDZ256mkz
VSQRTPDZ256mkz
VPDPWSSDZ256mkz
VPDPBUSDZ256mkz
VPSHLDVDZ256mkz
VPSHRDVDZ256mkz
VPMADD52HUQZ256mkz
VPMADD52LUQZ256mkz
VPSHLDVQZ256mkz
VPSHRDVQZ256mkz
VPDPWSSDSZ256mkz
VPDPBUSDSZ256mkz
VFMADDSUB231PSZ256mkz
VFMSUB231PSZ256mkz
VFNMSUB231PSZ256mkz
VFMSUBADD231PSZ256mkz
VFMADD231PSZ256mkz
VFNMADD231PSZ256mkz
VFMADDSUB132PSZ256mkz
VFMSUB132PSZ256mkz
VFNMSUB132PSZ256mkz
VFMSUBADD132PSZ256mkz
VFMADD132PSZ256mkz
VFNMADD132PSZ256mkz
VFMADDSUB213PSZ256mkz
VFMSUB213PSZ256mkz
VFNMSUB213PSZ256mkz
VFMSUBADD213PSZ256mkz
VFMADD213PSZ256mkz
VFNMADD213PSZ256mkz
VRCP14PSZ256mkz
VRSQRT14PSZ256mkz
VDPBF16PSZ256mkz
VGETEXPPSZ256mkz
VSQRTPSZ256mkz
VPSHLDVWZ256mkz
VPSHRDVWZ256mkz
VFMADDSUB231PDZ128mkz
VFMSUB231PDZ128mkz
VFNMSUB231PDZ128mkz
VFMSUBADD231PDZ128mkz
VFMADD231PDZ128mkz
VFNMADD231PDZ128mkz
VFMADDSUB132PDZ128mkz
VFMSUB132PDZ128mkz
VFNMSUB132PDZ128mkz
VFMSUBADD132PDZ128mkz
VFMADD132PDZ128mkz
VFNMADD132PDZ128mkz
VFMADDSUB213PDZ128mkz
VFMSUB213PDZ128mkz
VFNMSUB213PDZ128mkz
VFMSUBADD213PDZ128mkz
VFMADD213PDZ128mkz
VFNMADD213PDZ128mkz
VRCP14PDZ128mkz
VRSQRT14PDZ128mkz
VGETEXPPDZ128mkz
VSQRTPDZ128mkz
VPDPWSSDZ128mkz
VPDPBUSDZ128mkz
VPSHLDVDZ128mkz
VPSHRDVDZ128mkz
VPMADD52HUQZ128mkz
VPMADD52LUQZ128mkz
VPSHLDVQZ128mkz
VPSHRDVQZ128mkz
VPDPWSSDSZ128mkz
VPDPBUSDSZ128mkz
VFMADDSUB231PSZ128mkz
VFMSUB231PSZ128mkz
VFNMSUB231PSZ128mkz
VFMSUBADD231PSZ128mkz
VFMADD231PSZ128mkz
VFNMADD231PSZ128mkz
VFMADDSUB132PSZ128mkz
VFMSUB132PSZ128mkz
VFNMSUB132PSZ128mkz
VFMSUBADD132PSZ128mkz
VFMADD132PSZ128mkz
VFNMADD132PSZ128mkz
VFMADDSUB213PSZ128mkz
VFMSUB213PSZ128mkz
VFNMSUB213PSZ128mkz
VFMSUBADD213PSZ128mkz
VFMADD213PSZ128mkz
VFNMADD213PSZ128mkz
VRCP14PSZ128mkz
VRSQRT14PSZ128mkz
VDPBF16PSZ128mkz
VGETEXPPSZ128mkz
VSQRTPSZ128mkz
VPSHLDVWZ128mkz
VPSHRDVWZ128mkz
VFMADDSUB231PDZmkz
VFMSUB231PDZmkz
VFNMSUB231PDZmkz
VFMSUBADD231PDZmkz
VFMADD231PDZmkz
VFNMADD231PDZmkz
VFMADDSUB132PDZmkz
VFMSUB132PDZmkz
VFNMSUB132PDZmkz
VFMSUBADD132PDZmkz
VFMADD132PDZmkz
VFNMADD132PDZmkz
VEXP2PDZmkz
VFMADDSUB213PDZmkz
VFMSUB213PDZmkz
VFNMSUB213PDZmkz
VFMSUBADD213PDZmkz
VFMADD213PDZmkz
VFNMADD213PDZmkz
VRCP14PDZmkz
VRSQRT14PDZmkz
VRCP28PDZmkz
VRSQRT28PDZmkz
VGETEXPPDZmkz
VSQRTPDZmkz
VRCP28SDZmkz
VRSQRT28SDZmkz
VGETEXPSDZmkz
VPDPWSSDZmkz
VPDPBUSDZmkz
VPSHLDVDZmkz
VPSHRDVDZmkz
VPMADD52HUQZmkz
VPMADD52LUQZmkz
VPSHLDVQZmkz
VPSHRDVQZmkz
VPDPWSSDSZmkz
VPDPBUSDSZmkz
VFMADDSUB231PSZmkz
VFMSUB231PSZmkz
VFNMSUB231PSZmkz
VFMSUBADD231PSZmkz
VFMADD231PSZmkz
VFNMADD231PSZmkz
VFMADDSUB132PSZmkz
VFMSUB132PSZmkz
VFNMSUB132PSZmkz
VFMSUBADD132PSZmkz
VFMADD132PSZmkz
VFNMADD132PSZmkz
VEXP2PSZmkz
VFMADDSUB213PSZmkz
VFMSUB213PSZmkz
VFNMSUB213PSZmkz
VFMSUBADD213PSZmkz
VFMADD213PSZmkz
VFNMADD213PSZmkz
VRCP14PSZmkz
VRSQRT14PSZmkz
VDPBF16PSZmkz
VRCP28PSZmkz
VRSQRT28PSZmkz
VGETEXPPSZmkz
VSQRTPSZmkz
VRCP28SSZmkz
VRSQRT28SSZmkz
VGETEXPSSZmkz
VPSHLDVWZmkz
VPSHRDVWZmkz
VBROADCASTF64X2rmkz
VBROADCASTI64X2rmkz
VBROADCASTF32X4rmkz
VBROADCASTI32X4rmkz
VBROADCASTF64X4rmkz
VBROADCASTI64X4rmkz
VPERMI2B256rmkz
VPERMT2B256rmkz
VPERMI2D256rmkz
VPERMT2D256rmkz
VPERMI2PD256rmkz
VPERMT2PD256rmkz
VPERMI2Q256rmkz
VPERMT2Q256rmkz
VPERMI2PS256rmkz
VPERMT2PS256rmkz
VPERMI2W256rmkz
VPERMT2W256rmkz
VMOVDQA32Z256rmkz
VMOVDQU32Z256rmkz
VBROADCASTF32X2Z256rmkz
VBROADCASTI32X2Z256rmkz
VINSERTF64x2Z256rmkz
VINSERTI64x2Z256rmkz
VMOVDQA64Z256rmkz
VMOVDQU64Z256rmkz
VBROADCASTF32X4Z256rmkz
VBROADCASTI32X4Z256rmkz
VINSERTF32x4Z256rmkz
VINSERTI32x4Z256rmkz
VCVTNE2PS2BF16Z256rmkz
VCVTNEPS2BF16Z256rmkz
VMOVDQU16Z256rmkz
VMOVDQU8Z256rmkz
VPSUBBZ256rmkz
VPADDBZ256rmkz
VPEXPANDBZ256rmkz
VPSHUFBZ256rmkz
VPAVGBZ256rmkz
VGF2P8MULBZ256rmkz
VPBLENDMBZ256rmkz
VPERMBZ256rmkz
VPMULTISHIFTQBZ256rmkz
VPABSBZ256rmkz
VPSUBSBZ256rmkz
VPADDSBZ256rmkz
VPMINSBZ256rmkz
VPSUBUSBZ256rmkz
VPADDUSBZ256rmkz
VPMAXSBZ256rmkz
VPOPCNTBZ256rmkz
VPBROADCASTBZ256rmkz
VPMINUBZ256rmkz
VPMAXUBZ256rmkz
VPACKSSWBZ256rmkz
VPACKUSWBZ256rmkz
VPSRADZ256rmkz
VPSUBDZ256rmkz
VPMOVSXBDZ256rmkz
VPMOVZXBDZ256rmkz
VPADDDZ256rmkz
VPANDDZ256rmkz
VPEXPANDDZ256rmkz
VPSLLDZ256rmkz
VPMULLDZ256rmkz
VPSRLDZ256rmkz
VPBLENDMDZ256rmkz
VPERMDZ256rmkz
VPANDNDZ256rmkz
VCVTDQ2PDZ256rmkz
VCVTUDQ2PDZ256rmkz
VCVTQQ2PDZ256rmkz
VCVTUQQ2PDZ256rmkz
VCVTPS2PDZ256rmkz
VMOVAPDZ256rmkz
VSUBPDZ256rmkz
VMINCPDZ256rmkz
VMAXCPDZ256rmkz
VADDPDZ256rmkz
VEXPANDPDZ256rmkz
VANDPDZ256rmkz
VSCALEFPDZ256rmkz
VUNPCKHPDZ256rmkz
VPERMILPDZ256rmkz
VUNPCKLPDZ256rmkz
VMULPDZ256rmkz
VBLENDMPDZ256rmkz
VPERMPDZ256rmkz
VANDNPDZ256rmkz
VMINPDZ256rmkz
VORPDZ256rmkz
VXORPDZ256rmkz
VMOVUPDZ256rmkz
VDIVPDZ256rmkz
VMAXPDZ256rmkz
VPORDZ256rmkz
VPXORDZ256rmkz
VPABSDZ256rmkz
VPMINSDZ256rmkz
VBROADCASTSDZ256rmkz
VPMAXSDZ256rmkz
VPCONFLICTDZ256rmkz
VPOPCNTDZ256rmkz
VPLZCNTDZ256rmkz
VPBROADCASTDZ256rmkz
VPMINUDZ256rmkz
VPMAXUDZ256rmkz
VPSRAVDZ256rmkz
VPSLLVDZ256rmkz
VPROLVDZ256rmkz
VPSRLVDZ256rmkz
VPRORVDZ256rmkz
VPMADDWDZ256rmkz
VPUNPCKHWDZ256rmkz
VPUNPCKLWDZ256rmkz
VPMOVSXWDZ256rmkz
VPMOVZXWDZ256rmkz
VMOVDDUPZ256rmkz
VMOVSHDUPZ256rmkz
VMOVSLDUPZ256rmkz
VPSRAQZ256rmkz
VPSUBQZ256rmkz
VPMOVSXBQZ256rmkz
VPMOVZXBQZ256rmkz
VCVTTPD2DQZ256rmkz
VCVTPD2DQZ256rmkz
VCVTTPS2DQZ256rmkz
VCVTPS2DQZ256rmkz
VPADDQZ256rmkz
VPUNPCKHDQZ256rmkz
VPUNPCKLDQZ256rmkz
VPMULDQZ256rmkz
VPANDQZ256rmkz
VPEXPANDQZ256rmkz
VPUNPCKHQDQZ256rmkz
VPUNPCKLQDQZ256rmkz
VCVTTPD2UDQZ256rmkz
VCVTPD2UDQZ256rmkz
VCVTTPS2UDQZ256rmkz
VCVTPS2UDQZ256rmkz
VPMULUDQZ256rmkz
VPMOVSXDQZ256rmkz
VPMOVZXDQZ256rmkz
VPSLLQZ256rmkz
VPMULLQZ256rmkz
VPSRLQZ256rmkz
VPBLENDMQZ256rmkz
VPERMQZ256rmkz
VPANDNQZ256rmkz
VCVTTPD2QQZ256rmkz
VCVTPD2QQZ256rmkz
VCVTTPS2QQZ256rmkz
VCVTPS2QQZ256rmkz
VCVTTPD2UQQZ256rmkz
VCVTPD2UQQZ256rmkz
VCVTTPS2UQQZ256rmkz
VCVTPS2UQQZ256rmkz
VPORQZ256rmkz
VPXORQZ256rmkz
VPABSQZ256rmkz
VPMINSQZ256rmkz
VPMAXSQZ256rmkz
VPCONFLICTQZ256rmkz
VPOPCNTQZ256rmkz
VPLZCNTQZ256rmkz
VPBROADCASTQZ256rmkz
VPMINUQZ256rmkz
VPMAXUQZ256rmkz
VPSRAVQZ256rmkz
VPSLLVQZ256rmkz
VPROLVQZ256rmkz
VPSRLVQZ256rmkz
VPRORVQZ256rmkz
VPMOVSXWQZ256rmkz
VPMOVZXWQZ256rmkz
VCVTPD2PSZ256rmkz
VCVTPH2PSZ256rmkz
VCVTDQ2PSZ256rmkz
VCVTUDQ2PSZ256rmkz
VCVTQQ2PSZ256rmkz
VCVTUQQ2PSZ256rmkz
VMOVAPSZ256rmkz
VSUBPSZ256rmkz
VMINCPSZ256rmkz
VMAXCPSZ256rmkz
VADDPSZ256rmkz
VEXPANDPSZ256rmkz
VANDPSZ256rmkz
VSCALEFPSZ256rmkz
VUNPCKHPSZ256rmkz
VPERMILPSZ256rmkz
VUNPCKLPSZ256rmkz
VMULPSZ256rmkz
VBLENDMPSZ256rmkz
VPERMPSZ256rmkz
VANDNPSZ256rmkz
VMINPSZ256rmkz
VORPSZ256rmkz
VXORPSZ256rmkz
VMOVUPSZ256rmkz
VDIVPSZ256rmkz
VMAXPSZ256rmkz
VBROADCASTSSZ256rmkz
VPSRAWZ256rmkz
VPUNPCKHBWZ256rmkz
VPUNPCKLBWZ256rmkz
VPSUBWZ256rmkz
VPMOVSXBWZ256rmkz
VPMOVZXBWZ256rmkz
VPADDWZ256rmkz
VPEXPANDWZ256rmkz
VPACKSSDWZ256rmkz
VPACKUSDWZ256rmkz
VPAVGWZ256rmkz
VPMULHWZ256rmkz
VPSLLWZ256rmkz
VPMULLWZ256rmkz
VPSRLWZ256rmkz
VPBLENDMWZ256rmkz
VPERMWZ256rmkz
VPABSWZ256rmkz
VPMADDUBSWZ256rmkz
VPSUBSWZ256rmkz
VPADDSWZ256rmkz
VPMINSWZ256rmkz
VPMULHRSWZ256rmkz
VPSUBUSWZ256rmkz
VPADDUSWZ256rmkz
VPMAXSWZ256rmkz
VPOPCNTWZ256rmkz
VPBROADCASTWZ256rmkz
VPMULHUWZ256rmkz
VPMINUWZ256rmkz
VPMAXUWZ256rmkz
VPSRAVWZ256rmkz
VPSLLVWZ256rmkz
VPSRLVWZ256rmkz
VPERMI2B128rmkz
VPERMT2B128rmkz
VPERMI2D128rmkz
VPERMT2D128rmkz
VPERMI2PD128rmkz
VPERMT2PD128rmkz
VPERMI2Q128rmkz
VPERMT2Q128rmkz
VPERMI2PS128rmkz
VPERMT2PS128rmkz
VPERMI2W128rmkz
VPERMT2W128rmkz
VMOVDQA32Z128rmkz
VMOVDQU32Z128rmkz
VBROADCASTI32X2Z128rmkz
VBROADCASTF64X2Z128rmkz
VBROADCASTI64X2Z128rmkz
VMOVDQA64Z128rmkz
VMOVDQU64Z128rmkz
VCVTNE2PS2BF16Z128rmkz
VCVTNEPS2BF16Z128rmkz
VMOVDQU16Z128rmkz
VMOVDQU8Z128rmkz
VPSUBBZ128rmkz
VPADDBZ128rmkz
VPEXPANDBZ128rmkz
VPSHUFBZ128rmkz
VPAVGBZ128rmkz
VGF2P8MULBZ128rmkz
VPBLENDMBZ128rmkz
VPERMBZ128rmkz
VPMULTISHIFTQBZ128rmkz
VPABSBZ128rmkz
VPSUBSBZ128rmkz
VPADDSBZ128rmkz
VPMINSBZ128rmkz
VPSUBUSBZ128rmkz
VPADDUSBZ128rmkz
VPMAXSBZ128rmkz
VPOPCNTBZ128rmkz
VPBROADCASTBZ128rmkz
VPMINUBZ128rmkz
VPMAXUBZ128rmkz
VPACKSSWBZ128rmkz
VPACKUSWBZ128rmkz
VPSRADZ128rmkz
VPSUBDZ128rmkz
VPMOVSXBDZ128rmkz
VPMOVZXBDZ128rmkz
VPADDDZ128rmkz
VPANDDZ128rmkz
VPEXPANDDZ128rmkz
VPSLLDZ128rmkz
VPMULLDZ128rmkz
VPSRLDZ128rmkz
VPBLENDMDZ128rmkz
VPANDNDZ128rmkz
VCVTDQ2PDZ128rmkz
VCVTUDQ2PDZ128rmkz
VCVTQQ2PDZ128rmkz
VCVTUQQ2PDZ128rmkz
VCVTPS2PDZ128rmkz
VMOVAPDZ128rmkz
VSUBPDZ128rmkz
VMINCPDZ128rmkz
VMAXCPDZ128rmkz
VADDPDZ128rmkz
VEXPANDPDZ128rmkz
VANDPDZ128rmkz
VSCALEFPDZ128rmkz
VUNPCKHPDZ128rmkz
VPERMILPDZ128rmkz
VUNPCKLPDZ128rmkz
VMULPDZ128rmkz
VBLENDMPDZ128rmkz
VANDNPDZ128rmkz
VMINPDZ128rmkz
VORPDZ128rmkz
VXORPDZ128rmkz
VMOVUPDZ128rmkz
VDIVPDZ128rmkz
VMAXPDZ128rmkz
VPORDZ128rmkz
VPXORDZ128rmkz
VPABSDZ128rmkz
VPMINSDZ128rmkz
VPMAXSDZ128rmkz
VPCONFLICTDZ128rmkz
VPOPCNTDZ128rmkz
VPLZCNTDZ128rmkz
VPBROADCASTDZ128rmkz
VPMINUDZ128rmkz
VPMAXUDZ128rmkz
VPSRAVDZ128rmkz
VPSLLVDZ128rmkz
VPROLVDZ128rmkz
VPSRLVDZ128rmkz
VPRORVDZ128rmkz
VPMADDWDZ128rmkz
VPUNPCKHWDZ128rmkz
VPUNPCKLWDZ128rmkz
VPMOVSXWDZ128rmkz
VPMOVZXWDZ128rmkz
VMOVDDUPZ128rmkz
VMOVSHDUPZ128rmkz
VMOVSLDUPZ128rmkz
VPSRAQZ128rmkz
VPSUBQZ128rmkz
VPMOVSXBQZ128rmkz
VPMOVZXBQZ128rmkz
VCVTTPD2DQZ128rmkz
VCVTPD2DQZ128rmkz
VCVTTPS2DQZ128rmkz
VCVTPS2DQZ128rmkz
VPADDQZ128rmkz
VPUNPCKHDQZ128rmkz
VPUNPCKLDQZ128rmkz
VPMULDQZ128rmkz
VPANDQZ128rmkz
VPEXPANDQZ128rmkz
VPUNPCKHQDQZ128rmkz
VPUNPCKLQDQZ128rmkz
VCVTTPD2UDQZ128rmkz
VCVTPD2UDQZ128rmkz
VCVTTPS2UDQZ128rmkz
VCVTPS2UDQZ128rmkz
VPMULUDQZ128rmkz
VPMOVSXDQZ128rmkz
VPMOVZXDQZ128rmkz
VPSLLQZ128rmkz
VPMULLQZ128rmkz
VPSRLQZ128rmkz
VPBLENDMQZ128rmkz
VPANDNQZ128rmkz
VCVTTPD2QQZ128rmkz
VCVTPD2QQZ128rmkz
VCVTTPS2QQZ128rmkz
VCVTPS2QQZ128rmkz
VCVTTPD2UQQZ128rmkz
VCVTPD2UQQZ128rmkz
VCVTTPS2UQQZ128rmkz
VCVTPS2UQQZ128rmkz
VPORQZ128rmkz
VPXORQZ128rmkz
VPABSQZ128rmkz
VPMINSQZ128rmkz
VPMAXSQZ128rmkz
VPCONFLICTQZ128rmkz
VPOPCNTQZ128rmkz
VPLZCNTQZ128rmkz
VPBROADCASTQZ128rmkz
VPMINUQZ128rmkz
VPMAXUQZ128rmkz
VPSRAVQZ128rmkz
VPSLLVQZ128rmkz
VPROLVQZ128rmkz
VPSRLVQZ128rmkz
VPRORVQZ128rmkz
VPMOVSXWQZ128rmkz
VPMOVZXWQZ128rmkz
VCVTPD2PSZ128rmkz
VCVTPH2PSZ128rmkz
VCVTDQ2PSZ128rmkz
VCVTUDQ2PSZ128rmkz
VCVTQQ2PSZ128rmkz
VCVTUQQ2PSZ128rmkz
VMOVAPSZ128rmkz
VSUBPSZ128rmkz
VMINCPSZ128rmkz
VMAXCPSZ128rmkz
VADDPSZ128rmkz
VEXPANDPSZ128rmkz
VANDPSZ128rmkz
VSCALEFPSZ128rmkz
VUNPCKHPSZ128rmkz
VPERMILPSZ128rmkz
VUNPCKLPSZ128rmkz
VMULPSZ128rmkz
VBLENDMPSZ128rmkz
VANDNPSZ128rmkz
VMINPSZ128rmkz
VORPSZ128rmkz
VXORPSZ128rmkz
VMOVUPSZ128rmkz
VDIVPSZ128rmkz
VMAXPSZ128rmkz
VBROADCASTSSZ128rmkz
VPSRAWZ128rmkz
VPUNPCKHBWZ128rmkz
VPUNPCKLBWZ128rmkz
VPSUBWZ128rmkz
VPMOVSXBWZ128rmkz
VPMOVZXBWZ128rmkz
VPADDWZ128rmkz
VPEXPANDWZ128rmkz
VPACKSSDWZ128rmkz
VPACKUSDWZ128rmkz
VPAVGWZ128rmkz
VPMULHWZ128rmkz
VPSLLWZ128rmkz
VPMULLWZ128rmkz
VPSRLWZ128rmkz
VPBLENDMWZ128rmkz
VPERMWZ128rmkz
VPABSWZ128rmkz
VPMADDUBSWZ128rmkz
VPSUBSWZ128rmkz
VPADDSWZ128rmkz
VPMINSWZ128rmkz
VPMULHRSWZ128rmkz
VPSUBUSWZ128rmkz
VPADDUSWZ128rmkz
VPMAXSWZ128rmkz
VPOPCNTWZ128rmkz
VPBROADCASTWZ128rmkz
VPMULHUWZ128rmkz
VPMINUWZ128rmkz
VPMAXUWZ128rmkz
VPSRAVWZ128rmkz
VPSLLVWZ128rmkz
VPSRLVWZ128rmkz
VBROADCASTF32X8rmkz
VBROADCASTI32X8rmkz
VPERMI2Brmkz
VPERMT2Brmkz
VPERMI2Drmkz
VPERMT2Drmkz
VPERMI2PDrmkz
VPERMT2PDrmkz
VP4DPWSSDrmkz
VPERMI2Qrmkz
VPERMT2Qrmkz
VP4DPWSSDSrmkz
VPERMI2PSrmkz
VPERMT2PSrmkz
V4FMADDPSrmkz
V4FNMADDPSrmkz
V4FMADDSSrmkz
V4FNMADDSSrmkz
VPERMI2Wrmkz
VPERMT2Wrmkz
VMOVDQA32Zrmkz
VMOVDQU32Zrmkz
VBROADCASTF32X2Zrmkz
VBROADCASTI32X2Zrmkz
VINSERTF64x2Zrmkz
VINSERTI64x2Zrmkz
VMOVDQA64Zrmkz
VMOVDQU64Zrmkz
VINSERTF32x4Zrmkz
VINSERTI32x4Zrmkz
VINSERTF64x4Zrmkz
VINSERTI64x4Zrmkz
VCVTNE2PS2BF16Zrmkz
VCVTNEPS2BF16Zrmkz
VMOVDQU16Zrmkz
VMOVDQU8Zrmkz
VINSERTF32x8Zrmkz
VINSERTI32x8Zrmkz
VPSUBBZrmkz
VPADDBZrmkz
VPEXPANDBZrmkz
VPSHUFBZrmkz
VPAVGBZrmkz
VGF2P8MULBZrmkz
VPBLENDMBZrmkz
VPERMBZrmkz
VPMULTISHIFTQBZrmkz
VPABSBZrmkz
VPSUBSBZrmkz
VPADDSBZrmkz
VPMINSBZrmkz
VPSUBUSBZrmkz
VPADDUSBZrmkz
VPMAXSBZrmkz
VPOPCNTBZrmkz
VPBROADCASTBZrmkz
VPMINUBZrmkz
VPMAXUBZrmkz
VPACKSSWBZrmkz
VPACKUSWBZrmkz
VPSRADZrmkz
VPSUBDZrmkz
VPMOVSXBDZrmkz
VPMOVZXBDZrmkz
VPADDDZrmkz
VPANDDZrmkz
VPEXPANDDZrmkz
VPSLLDZrmkz
VPMULLDZrmkz
VPSRLDZrmkz
VPBLENDMDZrmkz
VPERMDZrmkz
VPANDNDZrmkz
VCVTDQ2PDZrmkz
VCVTUDQ2PDZrmkz
VCVTQQ2PDZrmkz
VCVTUQQ2PDZrmkz
VCVTPS2PDZrmkz
VMOVAPDZrmkz
VSUBPDZrmkz
VMINCPDZrmkz
VMAXCPDZrmkz
VADDPDZrmkz
VEXPANDPDZrmkz
VANDPDZrmkz
VSCALEFPDZrmkz
VUNPCKHPDZrmkz
VPERMILPDZrmkz
VUNPCKLPDZrmkz
VMULPDZrmkz
VBLENDMPDZrmkz
VPERMPDZrmkz
VANDNPDZrmkz
VMINPDZrmkz
VORPDZrmkz
VXORPDZrmkz
VMOVUPDZrmkz
VDIVPDZrmkz
VMAXPDZrmkz
VPORDZrmkz
VPXORDZrmkz
VRCP14SDZrmkz
VRSQRT14SDZrmkz
VPABSDZrmkz
VSCALEFSDZrmkz
VPMINSDZrmkz
VBROADCASTSDZrmkz
VMOVSDZrmkz
VPMAXSDZrmkz
VPCONFLICTDZrmkz
VPOPCNTDZrmkz
VPLZCNTDZrmkz
VPBROADCASTDZrmkz
VPMINUDZrmkz
VPMAXUDZrmkz
VPSRAVDZrmkz
VPSLLVDZrmkz
VPROLVDZrmkz
VPSRLVDZrmkz
VPRORVDZrmkz
VPMADDWDZrmkz
VPUNPCKHWDZrmkz
VPUNPCKLWDZrmkz
VPMOVSXWDZrmkz
VPMOVZXWDZrmkz
VMOVDDUPZrmkz
VMOVSHDUPZrmkz
VMOVSLDUPZrmkz
VPSRAQZrmkz
VPSUBQZrmkz
VPMOVSXBQZrmkz
VPMOVZXBQZrmkz
VCVTTPD2DQZrmkz
VCVTPD2DQZrmkz
VCVTTPS2DQZrmkz
VCVTPS2DQZrmkz
VPADDQZrmkz
VPUNPCKHDQZrmkz
VPUNPCKLDQZrmkz
VPMULDQZrmkz
VPANDQZrmkz
VPEXPANDQZrmkz
VPUNPCKHQDQZrmkz
VPUNPCKLQDQZrmkz
VCVTTPD2UDQZrmkz
VCVTPD2UDQZrmkz
VCVTTPS2UDQZrmkz
VCVTPS2UDQZrmkz
VPMULUDQZrmkz
VPMOVSXDQZrmkz
VPMOVZXDQZrmkz
VPSLLQZrmkz
VPMULLQZrmkz
VPSRLQZrmkz
VPBLENDMQZrmkz
VPERMQZrmkz
VPANDNQZrmkz
VCVTTPD2QQZrmkz
VCVTPD2QQZrmkz
VCVTTPS2QQZrmkz
VCVTPS2QQZrmkz
VCVTTPD2UQQZrmkz
VCVTPD2UQQZrmkz
VCVTTPS2UQQZrmkz
VCVTPS2UQQZrmkz
VPORQZrmkz
VPXORQZrmkz
VPABSQZrmkz
VPMINSQZrmkz
VPMAXSQZrmkz
VPCONFLICTQZrmkz
VPOPCNTQZrmkz
VPLZCNTQZrmkz
VPBROADCASTQZrmkz
VPMINUQZrmkz
VPMAXUQZrmkz
VPSRAVQZrmkz
VPSLLVQZrmkz
VPROLVQZrmkz
VPSRLVQZrmkz
VPRORVQZrmkz
VPMOVSXWQZrmkz
VPMOVZXWQZrmkz
VCVTPD2PSZrmkz
VCVTPH2PSZrmkz
VCVTDQ2PSZrmkz
VCVTUDQ2PSZrmkz
VCVTQQ2PSZrmkz
VCVTUQQ2PSZrmkz
VMOVAPSZrmkz
VSUBPSZrmkz
VMINCPSZrmkz
VMAXCPSZrmkz
VADDPSZrmkz
VEXPANDPSZrmkz
VANDPSZrmkz
VSCALEFPSZrmkz
VUNPCKHPSZrmkz
VPERMILPSZrmkz
VUNPCKLPSZrmkz
VMULPSZrmkz
VBLENDMPSZrmkz
VPERMPSZrmkz
VANDNPSZrmkz
VMINPSZrmkz
VORPSZrmkz
VXORPSZrmkz
VMOVUPSZrmkz
VDIVPSZrmkz
VMAXPSZrmkz
VRCP14SSZrmkz
VRSQRT14SSZrmkz
VSCALEFSSZrmkz
VBROADCASTSSZrmkz
VMOVSSZrmkz
VPSRAWZrmkz
VPUNPCKHBWZrmkz
VPUNPCKLBWZrmkz
VPSUBWZrmkz
VPMOVSXBWZrmkz
VPMOVZXBWZrmkz
VPADDWZrmkz
VPEXPANDWZrmkz
VPACKSSDWZrmkz
VPACKUSDWZrmkz
VPAVGWZrmkz
VPMULHWZrmkz
VPSLLWZrmkz
VPMULLWZrmkz
VPSRLWZrmkz
VPBLENDMWZrmkz
VPERMWZrmkz
VPABSWZrmkz
VPMADDUBSWZrmkz
VPSUBSWZrmkz
VPADDSWZrmkz
VPMINSWZrmkz
VPMULHRSWZrmkz
VPSUBUSWZrmkz
VPADDUSWZrmkz
VPMAXSWZrmkz
VPOPCNTWZrmkz
VPBROADCASTWZrmkz
VPMULHUWZrmkz
VPMINUWZrmkz
VPMAXUWZrmkz
VPSRAVWZrmkz
VPSLLVWZrmkz
VPSRLVWZrmkz
VFMADDSUB231PDZ256rkz
VFMSUB231PDZ256rkz
VFNMSUB231PDZ256rkz
VFMSUBADD231PDZ256rkz
VFMADD231PDZ256rkz
VFNMADD231PDZ256rkz
VFMADDSUB132PDZ256rkz
VFMSUB132PDZ256rkz
VFNMSUB132PDZ256rkz
VFMSUBADD132PDZ256rkz
VFMADD132PDZ256rkz
VFNMADD132PDZ256rkz
VFMADDSUB213PDZ256rkz
VFMSUB213PDZ256rkz
VFNMSUB213PDZ256rkz
VFMSUBADD213PDZ256rkz
VFMADD213PDZ256rkz
VFNMADD213PDZ256rkz
VRCP14PDZ256rkz
VRSQRT14PDZ256rkz
VGETEXPPDZ256rkz
VSQRTPDZ256rkz
VPDPWSSDZ256rkz
VPDPBUSDZ256rkz
VPSHLDVDZ256rkz
VPSHRDVDZ256rkz
VPMADD52HUQZ256rkz
VPMADD52LUQZ256rkz
VPSHLDVQZ256rkz
VPSHRDVQZ256rkz
VPDPWSSDSZ256rkz
VPDPBUSDSZ256rkz
VFMADDSUB231PSZ256rkz
VFMSUB231PSZ256rkz
VFNMSUB231PSZ256rkz
VFMSUBADD231PSZ256rkz
VFMADD231PSZ256rkz
VFNMADD231PSZ256rkz
VFMADDSUB132PSZ256rkz
VFMSUB132PSZ256rkz
VFNMSUB132PSZ256rkz
VFMSUBADD132PSZ256rkz
VFMADD132PSZ256rkz
VFNMADD132PSZ256rkz
VFMADDSUB213PSZ256rkz
VFMSUB213PSZ256rkz
VFNMSUB213PSZ256rkz
VFMSUBADD213PSZ256rkz
VFMADD213PSZ256rkz
VFNMADD213PSZ256rkz
VRCP14PSZ256rkz
VRSQRT14PSZ256rkz
VDPBF16PSZ256rkz
VGETEXPPSZ256rkz
VSQRTPSZ256rkz
VPSHLDVWZ256rkz
VPSHRDVWZ256rkz
VFMADDSUB231PDZ128rkz
VFMSUB231PDZ128rkz
VFNMSUB231PDZ128rkz
VFMSUBADD231PDZ128rkz
VFMADD231PDZ128rkz
VFNMADD231PDZ128rkz
VFMADDSUB132PDZ128rkz
VFMSUB132PDZ128rkz
VFNMSUB132PDZ128rkz
VFMSUBADD132PDZ128rkz
VFMADD132PDZ128rkz
VFNMADD132PDZ128rkz
VFMADDSUB213PDZ128rkz
VFMSUB213PDZ128rkz
VFNMSUB213PDZ128rkz
VFMSUBADD213PDZ128rkz
VFMADD213PDZ128rkz
VFNMADD213PDZ128rkz
VRCP14PDZ128rkz
VRSQRT14PDZ128rkz
VGETEXPPDZ128rkz
VSQRTPDZ128rkz
VPDPWSSDZ128rkz
VPDPBUSDZ128rkz
VPSHLDVDZ128rkz
VPSHRDVDZ128rkz
VPMADD52HUQZ128rkz
VPMADD52LUQZ128rkz
VPSHLDVQZ128rkz
VPSHRDVQZ128rkz
VPDPWSSDSZ128rkz
VPDPBUSDSZ128rkz
VFMADDSUB231PSZ128rkz
VFMSUB231PSZ128rkz
VFNMSUB231PSZ128rkz
VFMSUBADD231PSZ128rkz
VFMADD231PSZ128rkz
VFNMADD231PSZ128rkz
VFMADDSUB132PSZ128rkz
VFMSUB132PSZ128rkz
VFNMSUB132PSZ128rkz
VFMSUBADD132PSZ128rkz
VFMADD132PSZ128rkz
VFNMADD132PSZ128rkz
VFMADDSUB213PSZ128rkz
VFMSUB213PSZ128rkz
VFNMSUB213PSZ128rkz
VFMSUBADD213PSZ128rkz
VFMADD213PSZ128rkz
VFNMADD213PSZ128rkz
VRCP14PSZ128rkz
VRSQRT14PSZ128rkz
VDPBF16PSZ128rkz
VGETEXPPSZ128rkz
VSQRTPSZ128rkz
VPSHLDVWZ128rkz
VPSHRDVWZ128rkz
VFMADDSUB231PDZrkz
VFMSUB231PDZrkz
VFNMSUB231PDZrkz
VFMSUBADD231PDZrkz
VFMADD231PDZrkz
VFNMADD231PDZrkz
VFMADDSUB132PDZrkz
VFMSUB132PDZrkz
VFNMSUB132PDZrkz
VFMSUBADD132PDZrkz
VFMADD132PDZrkz
VFNMADD132PDZrkz
VEXP2PDZrkz
VFMADDSUB213PDZrkz
VFMSUB213PDZrkz
VFNMSUB213PDZrkz
VFMSUBADD213PDZrkz
VFMADD213PDZrkz
VFNMADD213PDZrkz
VRCP14PDZrkz
VRSQRT14PDZrkz
VRCP28PDZrkz
VRSQRT28PDZrkz
VGETEXPPDZrkz
VSQRTPDZrkz
VRCP28SDZrkz
VRSQRT28SDZrkz
VGETEXPSDZrkz
VPDPWSSDZrkz
VPDPBUSDZrkz
VPSHLDVDZrkz
VPSHRDVDZrkz
VPMADD52HUQZrkz
VPMADD52LUQZrkz
VPSHLDVQZrkz
VPSHRDVQZrkz
VPDPWSSDSZrkz
VPDPBUSDSZrkz
VFMADDSUB231PSZrkz
VFMSUB231PSZrkz
VFNMSUB231PSZrkz
VFMSUBADD231PSZrkz
VFMADD231PSZrkz
VFNMADD231PSZrkz
VFMADDSUB132PSZrkz
VFMSUB132PSZrkz
VFNMSUB132PSZrkz
VFMSUBADD132PSZrkz
VFMADD132PSZrkz
VFNMADD132PSZrkz
VEXP2PSZrkz
VFMADDSUB213PSZrkz
VFMSUB213PSZrkz
VFNMSUB213PSZrkz
VFMSUBADD213PSZrkz
VFMADD213PSZrkz
VFNMADD213PSZrkz
VRCP14PSZrkz
VRSQRT14PSZrkz
VDPBF16PSZrkz
VRCP28PSZrkz
VRSQRT28PSZrkz
VGETEXPPSZrkz
VSQRTPSZrkz
VRCP28SSZrkz
VRSQRT28SSZrkz
VGETEXPSSZrkz
VPSHLDVWZrkz
VPSHRDVWZrkz
VPERMI2B256rrkz
VPERMT2B256rrkz
VPERMI2D256rrkz
VPERMT2D256rrkz
VPERMI2PD256rrkz
VPERMT2PD256rrkz
VPERMI2Q256rrkz
VPERMT2Q256rrkz
VPERMI2PS256rrkz
VPERMT2PS256rrkz
VPERMI2W256rrkz
VPERMT2W256rrkz
VMOVDQA32Z256rrkz
VMOVDQU32Z256rrkz
VBROADCASTF32X2Z256rrkz
VBROADCASTI32X2Z256rrkz
VEXTRACTF64x2Z256rrkz
VINSERTF64x2Z256rrkz
VEXTRACTI64x2Z256rrkz
VINSERTI64x2Z256rrkz
VMOVDQA64Z256rrkz
VMOVDQU64Z256rrkz
VEXTRACTF32x4Z256rrkz
VINSERTF32x4Z256rrkz
VEXTRACTI32x4Z256rrkz
VINSERTI32x4Z256rrkz
VCVTNE2PS2BF16Z256rrkz
VCVTNEPS2BF16Z256rrkz
VMOVDQU16Z256rrkz
VMOVDQU8Z256rrkz
VPSUBBZ256rrkz
VPADDBZ256rrkz
VPEXPANDBZ256rrkz
VPMOVUSDBZ256rrkz
VPMOVSDBZ256rrkz
VPMOVDBZ256rrkz
VPSHUFBZ256rrkz
VPAVGBZ256rrkz
VGF2P8MULBZ256rrkz
VPBLENDMBZ256rrkz
VPERMBZ256rrkz
VPMOVUSQBZ256rrkz
VPMOVSQBZ256rrkz
VPMULTISHIFTQBZ256rrkz
VPMOVQBZ256rrkz
VPABSBZ256rrkz
VPSUBSBZ256rrkz
VPADDSBZ256rrkz
VPMINSBZ256rrkz
VPCOMPRESSBZ256rrkz
VPSUBUSBZ256rrkz
VPADDUSBZ256rrkz
VPMAXSBZ256rrkz
VPOPCNTBZ256rrkz
VPBROADCASTBZ256rrkz
VPMINUBZ256rrkz
VPMAXUBZ256rrkz
VPACKSSWBZ256rrkz
VPACKUSWBZ256rrkz
VPMOVUSWBZ256rrkz
VPMOVSWBZ256rrkz
VPMOVWBZ256rrkz
VPSRADZ256rrkz
VPSUBDZ256rrkz
VPMOVSXBDZ256rrkz
VPMOVZXBDZ256rrkz
VPADDDZ256rrkz
VPANDDZ256rrkz
VPEXPANDDZ256rrkz
VPSLLDZ256rrkz
VPMULLDZ256rrkz
VPSRLDZ256rrkz
VPBLENDMDZ256rrkz
VPERMDZ256rrkz
VPANDNDZ256rrkz
VCVTDQ2PDZ256rrkz
VCVTUDQ2PDZ256rrkz
VCVTQQ2PDZ256rrkz
VCVTUQQ2PDZ256rrkz
VCVTPS2PDZ256rrkz
VMOVAPDZ256rrkz
VSUBPDZ256rrkz
VMINCPDZ256rrkz
VMAXCPDZ256rrkz
VADDPDZ256rrkz
VEXPANDPDZ256rrkz
VANDPDZ256rrkz
VSCALEFPDZ256rrkz
VUNPCKHPDZ256rrkz
VPERMILPDZ256rrkz
VUNPCKLPDZ256rrkz
VMULPDZ256rrkz
VBLENDMPDZ256rrkz
VPERMPDZ256rrkz
VANDNPDZ256rrkz
VMINPDZ256rrkz
VORPDZ256rrkz
VXORPDZ256rrkz
VCOMPRESSPDZ256rrkz
VMOVUPDZ256rrkz
VDIVPDZ256rrkz
VMAXPDZ256rrkz
VPMOVUSQDZ256rrkz
VPMOVSQDZ256rrkz
VPMOVQDZ256rrkz
VPORDZ256rrkz
VPXORDZ256rrkz
VPABSDZ256rrkz
VPMINSDZ256rrkz
VPCOMPRESSDZ256rrkz
VBROADCASTSDZ256rrkz
VPMAXSDZ256rrkz
VPCONFLICTDZ256rrkz
VPOPCNTDZ256rrkz
VPLZCNTDZ256rrkz
VPBROADCASTDZ256rrkz
VPMINUDZ256rrkz
VPMAXUDZ256rrkz
VPSRAVDZ256rrkz
VPSLLVDZ256rrkz
VPROLVDZ256rrkz
VPSRLVDZ256rrkz
VPRORVDZ256rrkz
VPMADDWDZ256rrkz
VPUNPCKHWDZ256rrkz
VPUNPCKLWDZ256rrkz
VPMOVSXWDZ256rrkz
VPMOVZXWDZ256rrkz
VCVTPS2PHZ256rrkz
VMOVDDUPZ256rrkz
VMOVSHDUPZ256rrkz
VMOVSLDUPZ256rrkz
VPSRAQZ256rrkz
VPSUBQZ256rrkz
VPMOVSXBQZ256rrkz
VPMOVZXBQZ256rrkz
VCVTTPD2DQZ256rrkz
VCVTPD2DQZ256rrkz
VCVTTPS2DQZ256rrkz
VCVTPS2DQZ256rrkz
VPADDQZ256rrkz
VPUNPCKHDQZ256rrkz
VPUNPCKLDQZ256rrkz
VPMULDQZ256rrkz
VPANDQZ256rrkz
VPEXPANDQZ256rrkz
VPUNPCKHQDQZ256rrkz
VPUNPCKLQDQZ256rrkz
VCVTTPD2UDQZ256rrkz
VCVTPD2UDQZ256rrkz
VCVTTPS2UDQZ256rrkz
VCVTPS2UDQZ256rrkz
VPMULUDQZ256rrkz
VPMOVSXDQZ256rrkz
VPMOVZXDQZ256rrkz
VPSLLQZ256rrkz
VPMULLQZ256rrkz
VPSRLQZ256rrkz
VPBLENDMQZ256rrkz
VPERMQZ256rrkz
VPANDNQZ256rrkz
VCVTTPD2QQZ256rrkz
VCVTPD2QQZ256rrkz
VCVTTPS2QQZ256rrkz
VCVTPS2QQZ256rrkz
VCVTTPD2UQQZ256rrkz
VCVTPD2UQQZ256rrkz
VCVTTPS2UQQZ256rrkz
VCVTPS2UQQZ256rrkz
VPORQZ256rrkz
VPXORQZ256rrkz
VPABSQZ256rrkz
VPMINSQZ256rrkz
VPCOMPRESSQZ256rrkz
VPMAXSQZ256rrkz
VPCONFLICTQZ256rrkz
VPOPCNTQZ256rrkz
VPLZCNTQZ256rrkz
VPBROADCASTQZ256rrkz
VPMINUQZ256rrkz
VPMAXUQZ256rrkz
VPSRAVQZ256rrkz
VPSLLVQZ256rrkz
VPROLVQZ256rrkz
VPSRLVQZ256rrkz
VPRORVQZ256rrkz
VPMOVSXWQZ256rrkz
VPMOVZXWQZ256rrkz
VCVTPD2PSZ256rrkz
VCVTPH2PSZ256rrkz
VCVTDQ2PSZ256rrkz
VCVTUDQ2PSZ256rrkz
VCVTQQ2PSZ256rrkz
VCVTUQQ2PSZ256rrkz
VMOVAPSZ256rrkz
VSUBPSZ256rrkz
VMINCPSZ256rrkz
VMAXCPSZ256rrkz
VADDPSZ256rrkz
VEXPANDPSZ256rrkz
VANDPSZ256rrkz
VSCALEFPSZ256rrkz
VUNPCKHPSZ256rrkz
VPERMILPSZ256rrkz
VUNPCKLPSZ256rrkz
VMULPSZ256rrkz
VBLENDMPSZ256rrkz
VPERMPSZ256rrkz
VANDNPSZ256rrkz
VMINPSZ256rrkz
VORPSZ256rrkz
VXORPSZ256rrkz
VCOMPRESSPSZ256rrkz
VMOVUPSZ256rrkz
VDIVPSZ256rrkz
VMAXPSZ256rrkz
VBROADCASTSSZ256rrkz
VPSRAWZ256rrkz
VPUNPCKHBWZ256rrkz
VPUNPCKLBWZ256rrkz
VPSUBWZ256rrkz
VPMOVSXBWZ256rrkz
VPMOVZXBWZ256rrkz
VPADDWZ256rrkz
VPEXPANDWZ256rrkz
VPACKSSDWZ256rrkz
VPACKUSDWZ256rrkz
VPMOVUSDWZ256rrkz
VPMOVSDWZ256rrkz
VPMOVDWZ256rrkz
VPAVGWZ256rrkz
VPMULHWZ256rrkz
VPSLLWZ256rrkz
VPMULLWZ256rrkz
VPSRLWZ256rrkz
VPBLENDMWZ256rrkz
VPERMWZ256rrkz
VPMOVUSQWZ256rrkz
VPMOVSQWZ256rrkz
VPMOVQWZ256rrkz
VPABSWZ256rrkz
VPMADDUBSWZ256rrkz
VPSUBSWZ256rrkz
VPADDSWZ256rrkz
VPMINSWZ256rrkz
VPMULHRSWZ256rrkz
VPCOMPRESSWZ256rrkz
VPSUBUSWZ256rrkz
VPADDUSWZ256rrkz
VPMAXSWZ256rrkz
VPOPCNTWZ256rrkz
VPBROADCASTWZ256rrkz
VPMULHUWZ256rrkz
VPMINUWZ256rrkz
VPMAXUWZ256rrkz
VPSRAVWZ256rrkz
VPSLLVWZ256rrkz
VPSRLVWZ256rrkz
VPBROADCASTBrZ256rrkz
VPBROADCASTDrZ256rrkz
VPBROADCASTQrZ256rrkz
VPBROADCASTWrZ256rrkz
VPERMI2B128rrkz
VPERMT2B128rrkz
VPERMI2D128rrkz
VPERMT2D128rrkz
VPERMI2PD128rrkz
VPERMT2PD128rrkz
VPERMI2Q128rrkz
VPERMT2Q128rrkz
VPERMI2PS128rrkz
VPERMT2PS128rrkz
VPERMI2W128rrkz
VPERMT2W128rrkz
VMOVDQA32Z128rrkz
VMOVDQU32Z128rrkz
VBROADCASTI32X2Z128rrkz
VMOVDQA64Z128rrkz
VMOVDQU64Z128rrkz
VCVTNE2PS2BF16Z128rrkz
VCVTNEPS2BF16Z128rrkz
VMOVDQU16Z128rrkz
VMOVDQU8Z128rrkz
VPSUBBZ128rrkz
VPADDBZ128rrkz
VPEXPANDBZ128rrkz
VPMOVUSDBZ128rrkz
VPMOVSDBZ128rrkz
VPMOVDBZ128rrkz
VPSHUFBZ128rrkz
VPAVGBZ128rrkz
VGF2P8MULBZ128rrkz
VPBLENDMBZ128rrkz
VPERMBZ128rrkz
VPMOVUSQBZ128rrkz
VPMOVSQBZ128rrkz
VPMULTISHIFTQBZ128rrkz
VPMOVQBZ128rrkz
VPABSBZ128rrkz
VPSUBSBZ128rrkz
VPADDSBZ128rrkz
VPMINSBZ128rrkz
VPCOMPRESSBZ128rrkz
VPSUBUSBZ128rrkz
VPADDUSBZ128rrkz
VPMAXSBZ128rrkz
VPOPCNTBZ128rrkz
VPBROADCASTBZ128rrkz
VPMINUBZ128rrkz
VPMAXUBZ128rrkz
VPACKSSWBZ128rrkz
VPACKUSWBZ128rrkz
VPMOVUSWBZ128rrkz
VPMOVSWBZ128rrkz
VPMOVWBZ128rrkz
VPSRADZ128rrkz
VPSUBDZ128rrkz
VPMOVSXBDZ128rrkz
VPMOVZXBDZ128rrkz
VPADDDZ128rrkz
VPANDDZ128rrkz
VPEXPANDDZ128rrkz
VPSLLDZ128rrkz
VPMULLDZ128rrkz
VPSRLDZ128rrkz
VPBLENDMDZ128rrkz
VPANDNDZ128rrkz
VCVTDQ2PDZ128rrkz
VCVTUDQ2PDZ128rrkz
VCVTQQ2PDZ128rrkz
VCVTUQQ2PDZ128rrkz
VCVTPS2PDZ128rrkz
VMOVAPDZ128rrkz
VSUBPDZ128rrkz
VMINCPDZ128rrkz
VMAXCPDZ128rrkz
VADDPDZ128rrkz
VEXPANDPDZ128rrkz
VANDPDZ128rrkz
VSCALEFPDZ128rrkz
VUNPCKHPDZ128rrkz
VPERMILPDZ128rrkz
VUNPCKLPDZ128rrkz
VMULPDZ128rrkz
VBLENDMPDZ128rrkz
VANDNPDZ128rrkz
VMINPDZ128rrkz
VORPDZ128rrkz
VXORPDZ128rrkz
VCOMPRESSPDZ128rrkz
VMOVUPDZ128rrkz
VDIVPDZ128rrkz
VMAXPDZ128rrkz
VPMOVUSQDZ128rrkz
VPMOVSQDZ128rrkz
VPMOVQDZ128rrkz
VPORDZ128rrkz
VPXORDZ128rrkz
VPABSDZ128rrkz
VPMINSDZ128rrkz
VPCOMPRESSDZ128rrkz
VPMAXSDZ128rrkz
VPCONFLICTDZ128rrkz
VPOPCNTDZ128rrkz
VPLZCNTDZ128rrkz
VPBROADCASTDZ128rrkz
VPMINUDZ128rrkz
VPMAXUDZ128rrkz
VPSRAVDZ128rrkz
VPSLLVDZ128rrkz
VPROLVDZ128rrkz
VPSRLVDZ128rrkz
VPRORVDZ128rrkz
VPMADDWDZ128rrkz
VPUNPCKHWDZ128rrkz
VPUNPCKLWDZ128rrkz
VPMOVSXWDZ128rrkz
VPMOVZXWDZ128rrkz
VCVTPS2PHZ128rrkz
VMOVDDUPZ128rrkz
VMOVSHDUPZ128rrkz
VMOVSLDUPZ128rrkz
VPSRAQZ128rrkz
VPSUBQZ128rrkz
VPMOVSXBQZ128rrkz
VPMOVZXBQZ128rrkz
VCVTTPD2DQZ128rrkz
VCVTPD2DQZ128rrkz
VCVTTPS2DQZ128rrkz
VCVTPS2DQZ128rrkz
VPADDQZ128rrkz
VPUNPCKHDQZ128rrkz
VPUNPCKLDQZ128rrkz
VPMULDQZ128rrkz
VPANDQZ128rrkz
VPEXPANDQZ128rrkz
VPUNPCKHQDQZ128rrkz
VPUNPCKLQDQZ128rrkz
VCVTTPD2UDQZ128rrkz
VCVTPD2UDQZ128rrkz
VCVTTPS2UDQZ128rrkz
VCVTPS2UDQZ128rrkz
VPMULUDQZ128rrkz
VPMOVSXDQZ128rrkz
VPMOVZXDQZ128rrkz
VPSLLQZ128rrkz
VPMULLQZ128rrkz
VPSRLQZ128rrkz
VPBLENDMQZ128rrkz
VPANDNQZ128rrkz
VCVTTPD2QQZ128rrkz
VCVTPD2QQZ128rrkz
VCVTTPS2QQZ128rrkz
VCVTPS2QQZ128rrkz
VCVTTPD2UQQZ128rrkz
VCVTPD2UQQZ128rrkz
VCVTTPS2UQQZ128rrkz
VCVTPS2UQQZ128rrkz
VPORQZ128rrkz
VPXORQZ128rrkz
VPABSQZ128rrkz
VPMINSQZ128rrkz
VPCOMPRESSQZ128rrkz
VPMAXSQZ128rrkz
VPCONFLICTQZ128rrkz
VPOPCNTQZ128rrkz
VPLZCNTQZ128rrkz
VPBROADCASTQZ128rrkz
VPMINUQZ128rrkz
VPMAXUQZ128rrkz
VPSRAVQZ128rrkz
VPSLLVQZ128rrkz
VPROLVQZ128rrkz
VPSRLVQZ128rrkz
VPRORVQZ128rrkz
VPMOVSXWQZ128rrkz
VPMOVZXWQZ128rrkz
VCVTPD2PSZ128rrkz
VCVTPH2PSZ128rrkz
VCVTDQ2PSZ128rrkz
VCVTUDQ2PSZ128rrkz
VCVTQQ2PSZ128rrkz
VCVTUQQ2PSZ128rrkz
VMOVAPSZ128rrkz
VSUBPSZ128rrkz
VMINCPSZ128rrkz
VMAXCPSZ128rrkz
VADDPSZ128rrkz
VEXPANDPSZ128rrkz
VANDPSZ128rrkz
VSCALEFPSZ128rrkz
VUNPCKHPSZ128rrkz
VPERMILPSZ128rrkz
VUNPCKLPSZ128rrkz
VMULPSZ128rrkz
VBLENDMPSZ128rrkz
VANDNPSZ128rrkz
VMINPSZ128rrkz
VORPSZ128rrkz
VXORPSZ128rrkz
VCOMPRESSPSZ128rrkz
VMOVUPSZ128rrkz
VDIVPSZ128rrkz
VMAXPSZ128rrkz
VBROADCASTSSZ128rrkz
VPSRAWZ128rrkz
VPUNPCKHBWZ128rrkz
VPUNPCKLBWZ128rrkz
VPSUBWZ128rrkz
VPMOVSXBWZ128rrkz
VPMOVZXBWZ128rrkz
VPADDWZ128rrkz
VPEXPANDWZ128rrkz
VPACKSSDWZ128rrkz
VPACKUSDWZ128rrkz
VPMOVUSDWZ128rrkz
VPMOVSDWZ128rrkz
VPMOVDWZ128rrkz
VPAVGWZ128rrkz
VPMULHWZ128rrkz
VPSLLWZ128rrkz
VPMULLWZ128rrkz
VPSRLWZ128rrkz
VPBLENDMWZ128rrkz
VPERMWZ128rrkz
VPMOVUSQWZ128rrkz
VPMOVSQWZ128rrkz
VPMOVQWZ128rrkz
VPABSWZ128rrkz
VPMADDUBSWZ128rrkz
VPSUBSWZ128rrkz
VPADDSWZ128rrkz
VPMINSWZ128rrkz
VPMULHRSWZ128rrkz
VPCOMPRESSWZ128rrkz
VPSUBUSWZ128rrkz
VPADDUSWZ128rrkz
VPMAXSWZ128rrkz
VPOPCNTWZ128rrkz
VPBROADCASTWZ128rrkz
VPMULHUWZ128rrkz
VPMINUWZ128rrkz
VPMAXUWZ128rrkz
VPSRAVWZ128rrkz
VPSLLVWZ128rrkz
VPSRLVWZ128rrkz
VPBROADCASTBrZ128rrkz
VPBROADCASTDrZ128rrkz
VPBROADCASTQrZ128rrkz
VPBROADCASTWrZ128rrkz
VPERMI2Brrkz
VPERMT2Brrkz
VPERMI2Drrkz
VPERMT2Drrkz
VPERMI2PDrrkz
VPERMT2PDrrkz
VPERMI2Qrrkz
VPERMT2Qrrkz
VPERMI2PSrrkz
VPERMT2PSrrkz
VPERMI2Wrrkz
VPERMT2Wrrkz
VMOVDQA32Zrrkz
VMOVDQU32Zrrkz
VBROADCASTF32X2Zrrkz
VBROADCASTI32X2Zrrkz
VEXTRACTF64x2Zrrkz
VINSERTF64x2Zrrkz
VEXTRACTI64x2Zrrkz
VINSERTI64x2Zrrkz
VMOVDQA64Zrrkz
VMOVDQU64Zrrkz
VEXTRACTF32x4Zrrkz
VINSERTF32x4Zrrkz
VEXTRACTI32x4Zrrkz
VINSERTI32x4Zrrkz
VEXTRACTF64x4Zrrkz
VINSERTF64x4Zrrkz
VEXTRACTI64x4Zrrkz
VINSERTI64x4Zrrkz
VCVTNE2PS2BF16Zrrkz
VCVTNEPS2BF16Zrrkz
VMOVDQU16Zrrkz
VMOVDQU8Zrrkz
VEXTRACTF32x8Zrrkz
VINSERTF32x8Zrrkz
VEXTRACTI32x8Zrrkz
VINSERTI32x8Zrrkz
VPSUBBZrrkz
VPADDBZrrkz
VPEXPANDBZrrkz
VPMOVUSDBZrrkz
VPMOVSDBZrrkz
VPMOVDBZrrkz
VPSHUFBZrrkz
VPAVGBZrrkz
VGF2P8MULBZrrkz
VPBLENDMBZrrkz
VPERMBZrrkz
VPMOVUSQBZrrkz
VPMOVSQBZrrkz
VPMULTISHIFTQBZrrkz
VPMOVQBZrrkz
VPABSBZrrkz
VPSUBSBZrrkz
VPADDSBZrrkz
VPMINSBZrrkz
VPCOMPRESSBZrrkz
VPSUBUSBZrrkz
VPADDUSBZrrkz
VPMAXSBZrrkz
VPOPCNTBZrrkz
VPBROADCASTBZrrkz
VPMINUBZrrkz
VPMAXUBZrrkz
VPACKSSWBZrrkz
VPACKUSWBZrrkz
VPMOVUSWBZrrkz
VPMOVSWBZrrkz
VPMOVWBZrrkz
VPSRADZrrkz
VPSUBDZrrkz
VPMOVSXBDZrrkz
VPMOVZXBDZrrkz
VPADDDZrrkz
VPANDDZrrkz
VPEXPANDDZrrkz
VPSLLDZrrkz
VPMULLDZrrkz
VPSRLDZrrkz
VPBLENDMDZrrkz
VPERMDZrrkz
VPANDNDZrrkz
VCVTDQ2PDZrrkz
VCVTUDQ2PDZrrkz
VCVTQQ2PDZrrkz
VCVTUQQ2PDZrrkz
VCVTPS2PDZrrkz
VMOVAPDZrrkz
VSUBPDZrrkz
VMINCPDZrrkz
VMAXCPDZrrkz
VADDPDZrrkz
VEXPANDPDZrrkz
VANDPDZrrkz
VSCALEFPDZrrkz
VUNPCKHPDZrrkz
VPERMILPDZrrkz
VUNPCKLPDZrrkz
VMULPDZrrkz
VBLENDMPDZrrkz
VPERMPDZrrkz
VANDNPDZrrkz
VMINPDZrrkz
VORPDZrrkz
VXORPDZrrkz
VCOMPRESSPDZrrkz
VMOVUPDZrrkz
VDIVPDZrrkz
VMAXPDZrrkz
VPMOVUSQDZrrkz
VPMOVSQDZrrkz
VPMOVQDZrrkz
VPORDZrrkz
VPXORDZrrkz
VRCP14SDZrrkz
VRSQRT14SDZrrkz
VPABSDZrrkz
VSCALEFSDZrrkz
VPMINSDZrrkz
VPCOMPRESSDZrrkz
VBROADCASTSDZrrkz
VMOVSDZrrkz
VPMAXSDZrrkz
VPCONFLICTDZrrkz
VPOPCNTDZrrkz
VPLZCNTDZrrkz
VPBROADCASTDZrrkz
VPMINUDZrrkz
VPMAXUDZrrkz
VPSRAVDZrrkz
VPSLLVDZrrkz
VPROLVDZrrkz
VPSRLVDZrrkz
VPRORVDZrrkz
VPMADDWDZrrkz
VPUNPCKHWDZrrkz
VPUNPCKLWDZrrkz
VPMOVSXWDZrrkz
VPMOVZXWDZrrkz
VCVTPS2PHZrrkz
VMOVDDUPZrrkz
VMOVSHDUPZrrkz
VMOVSLDUPZrrkz
VPSRAQZrrkz
VPSUBQZrrkz
VPMOVSXBQZrrkz
VPMOVZXBQZrrkz
VCVTTPD2DQZrrkz
VCVTPD2DQZrrkz
VCVTTPS2DQZrrkz
VCVTPS2DQZrrkz
VPADDQZrrkz
VPUNPCKHDQZrrkz
VPUNPCKLDQZrrkz
VPMULDQZrrkz
VPANDQZrrkz
VPEXPANDQZrrkz
VPUNPCKHQDQZrrkz
VPUNPCKLQDQZrrkz
VCVTTPD2UDQZrrkz
VCVTPD2UDQZrrkz
VCVTTPS2UDQZrrkz
VCVTPS2UDQZrrkz
VPMULUDQZrrkz
VPMOVSXDQZrrkz
VPMOVZXDQZrrkz
VPSLLQZrrkz
VPMULLQZrrkz
VPSRLQZrrkz
VPBLENDMQZrrkz
VPERMQZrrkz
VPANDNQZrrkz
VCVTTPD2QQZrrkz
VCVTPD2QQZrrkz
VCVTTPS2QQZrrkz
VCVTPS2QQZrrkz
VCVTTPD2UQQZrrkz
VCVTPD2UQQZrrkz
VCVTTPS2UQQZrrkz
VCVTPS2UQQZrrkz
VPORQZrrkz
VPXORQZrrkz
VPABSQZrrkz
VPMINSQZrrkz
VPCOMPRESSQZrrkz
VPMAXSQZrrkz
VPCONFLICTQZrrkz
VPOPCNTQZrrkz
VPLZCNTQZrrkz
VPBROADCASTQZrrkz
VPMINUQZrrkz
VPMAXUQZrrkz
VPSRAVQZrrkz
VPSLLVQZrrkz
VPROLVQZrrkz
VPSRLVQZrrkz
VPRORVQZrrkz
VPMOVSXWQZrrkz
VPMOVZXWQZrrkz
VCVTPD2PSZrrkz
VCVTPH2PSZrrkz
VCVTDQ2PSZrrkz
VCVTUDQ2PSZrrkz
VCVTQQ2PSZrrkz
VCVTUQQ2PSZrrkz
VMOVAPSZrrkz
VSUBPSZrrkz
VMINCPSZrrkz
VMAXCPSZrrkz
VADDPSZrrkz
VEXPANDPSZrrkz
VANDPSZrrkz
VSCALEFPSZrrkz
VUNPCKHPSZrrkz
VPERMILPSZrrkz
VUNPCKLPSZrrkz
VMULPSZrrkz
VBLENDMPSZrrkz
VPERMPSZrrkz
VANDNPSZrrkz
VMINPSZrrkz
VORPSZrrkz
VXORPSZrrkz
VCOMPRESSPSZrrkz
VMOVUPSZrrkz
VDIVPSZrrkz
VMAXPSZrrkz
VRCP14SSZrrkz
VRSQRT14SSZrrkz
VSCALEFSSZrrkz
VBROADCASTSSZrrkz
VMOVSSZrrkz
VPSRAWZrrkz
VPUNPCKHBWZrrkz
VPUNPCKLBWZrrkz
VPSUBWZrrkz
VPMOVSXBWZrrkz
VPMOVZXBWZrrkz
VPADDWZrrkz
VPEXPANDWZrrkz
VPACKSSDWZrrkz
VPACKUSDWZrrkz
VPMOVUSDWZrrkz
VPMOVSDWZrrkz
VPMOVDWZrrkz
VPAVGWZrrkz
VPMULHWZrrkz
VPSLLWZrrkz
VPMULLWZrrkz
VPSRLWZrrkz
VPBLENDMWZrrkz
VPERMWZrrkz
VPMOVUSQWZrrkz
VPMOVSQWZrrkz
VPMOVQWZrrkz
VPABSWZrrkz
VPMADDUBSWZrrkz
VPSUBSWZrrkz
VPADDSWZrrkz
VPMINSWZrrkz
VPMULHRSWZrrkz
VPCOMPRESSWZrrkz
VPSUBUSWZrrkz
VPADDUSWZrrkz
VPMAXSWZrrkz
VPOPCNTWZrrkz
VPBROADCASTWZrrkz
VPMULHUWZrrkz
VPMINUWZrrkz
VPMAXUWZrrkz
VPSRAVWZrrkz
VPSLLVWZrrkz
VPSRLVWZrrkz
VPBROADCASTBrZrrkz
VPBROADCASTDrZrrkz
VPBROADCASTQrZrrkz
VPBROADCASTWrZrrkz
VFMSUB231SDZrb_Intkz
VFNMSUB231SDZrb_Intkz
VFMADD231SDZrb_Intkz
VFNMADD231SDZrb_Intkz
VFMSUB132SDZrb_Intkz
VFNMSUB132SDZrb_Intkz
VFMADD132SDZrb_Intkz
VFNMADD132SDZrb_Intkz
VFMSUB213SDZrb_Intkz
VFNMSUB213SDZrb_Intkz
VFMADD213SDZrb_Intkz
VFNMADD213SDZrb_Intkz
VRNDSCALESDZrb_Intkz
VSQRTSDZrb_Intkz
VFMSUB231SSZrb_Intkz
VFNMSUB231SSZrb_Intkz
VFMADD231SSZrb_Intkz
VFNMADD231SSZrb_Intkz
VFMSUB132SSZrb_Intkz
VFNMSUB132SSZrb_Intkz
VFMADD132SSZrb_Intkz
VFNMADD132SSZrb_Intkz
VFMSUB213SSZrb_Intkz
VFNMSUB213SSZrb_Intkz
VFMADD213SSZrb_Intkz
VFNMADD213SSZrb_Intkz
VRNDSCALESSZrb_Intkz
VSQRTSSZrb_Intkz
VCVTSS2SDZrrb_Intkz
VSUBSDZrrb_Intkz
VADDSDZrrb_Intkz
VSCALEFSDZrrb_Intkz
VMULSDZrrb_Intkz
VMINSDZrrb_Intkz
VDIVSDZrrb_Intkz
VMAXSDZrrb_Intkz
VCVTSD2SSZrrb_Intkz
VSUBSSZrrb_Intkz
VADDSSZrrb_Intkz
VSCALEFSSZrrb_Intkz
VMULSSZrrb_Intkz
VMINSSZrrb_Intkz
VDIVSSZrrb_Intkz
VMAXSSZrrb_Intkz
VFMSUB231SDZm_Intkz
VFNMSUB231SDZm_Intkz
VFMADD231SDZm_Intkz
VFNMADD231SDZm_Intkz
VFMSUB132SDZm_Intkz
VFNMSUB132SDZm_Intkz
VFMADD132SDZm_Intkz
VFNMADD132SDZm_Intkz
VFMSUB213SDZm_Intkz
VFNMSUB213SDZm_Intkz
VFMADD213SDZm_Intkz
VFNMADD213SDZm_Intkz
VRNDSCALESDZm_Intkz
VSQRTSDZm_Intkz
VFMSUB231SSZm_Intkz
VFNMSUB231SSZm_Intkz
VFMADD231SSZm_Intkz
VFNMADD231SSZm_Intkz
VFMSUB132SSZm_Intkz
VFNMSUB132SSZm_Intkz
VFMADD132SSZm_Intkz
VFNMADD132SSZm_Intkz
VFMSUB213SSZm_Intkz
VFNMSUB213SSZm_Intkz
VFMADD213SSZm_Intkz
VFNMADD213SSZm_Intkz
VRNDSCALESSZm_Intkz
VSQRTSSZm_Intkz
VCVTSS2SDZrm_Intkz
VSUBSDZrm_Intkz
VADDSDZrm_Intkz
VMULSDZrm_Intkz
VMINSDZrm_Intkz
VDIVSDZrm_Intkz
VMAXSDZrm_Intkz
VCVTSD2SSZrm_Intkz
VSUBSSZrm_Intkz
VADDSSZrm_Intkz
VMULSSZrm_Intkz
VMINSSZrm_Intkz
VDIVSSZrm_Intkz
VMAXSSZrm_Intkz
VFMSUB231SDZr_Intkz
VFNMSUB231SDZr_Intkz
VFMADD231SDZr_Intkz
VFNMADD231SDZr_Intkz
VFMSUB132SDZr_Intkz
VFNMSUB132SDZr_Intkz
VFMADD132SDZr_Intkz
VFNMADD132SDZr_Intkz
VFMSUB213SDZr_Intkz
VFNMSUB213SDZr_Intkz
VFMADD213SDZr_Intkz
VFNMADD213SDZr_Intkz
VRNDSCALESDZr_Intkz
VSQRTSDZr_Intkz
VFMSUB231SSZr_Intkz
VFNMSUB231SSZr_Intkz
VFMADD231SSZr_Intkz
VFNMADD231SSZr_Intkz
VFMSUB132SSZr_Intkz
VFNMSUB132SSZr_Intkz
VFMADD132SSZr_Intkz
VFNMADD132SSZr_Intkz
VFMSUB213SSZr_Intkz
VFNMSUB213SSZr_Intkz
VFMADD213SSZr_Intkz
VFNMADD213SSZr_Intkz
VRNDSCALESSZr_Intkz
VSQRTSSZr_Intkz
VCVTSS2SDZrr_Intkz
VSUBSDZrr_Intkz
VADDSDZrr_Intkz
VMULSDZrr_Intkz
VMINSDZrr_Intkz
VDIVSDZrr_Intkz
VMAXSDZrr_Intkz
VCVTSD2SSZrr_Intkz
VSUBSSZrr_Intkz
VADDSSZrr_Intkz
VMULSSZrr_Intkz
VMINSSZrr_Intkz
VDIVSSZrr_Intkz
VMAXSSZrr_Intkz
AL_OFFSET_TABLE__GLOBAL_OFFSET_T
THM_MOVW_PREL_NCR_ARM_THM_MOVW_PTHM_MOVW_BREL_NCR_ARM_THM_MOVW_BDR_SBREL_11_0_NCR_ARM_LDR_SBREL_HM_ALU_PREL_11_0R_ARM_THM_ALU_PRHM_TLS_DESCSEQ16R_ARM_THM_TLS_DEHM_TLS_DESCSEQ32_ALU_PCREL_23_15R_ARM_ALU_PCREL__THM_MOVW_ABS_NCR_ARM_THM_MOVW_A15_8
RM_ALU_PCREL_7_0RM_THM_MOVT_PRELR_ARM_THM_MOVT_PRM_THM_MOVT_BRELR_ARM_THM_MOVT_BRM_THM_MOVW_BRELRM_GNU_VTINHERITR_ARM_GNU_VTINHE19_12_NC
R_ARM_ALU_SBREL_27_20_CK
R_ARM_THM_JUMP24R_ARM_THM_JUMP19R_ARM_LDRS_PC_G0R_ARM_LDRS_PC_G1R_ARM_LDRS_PC_G2R_ARM_LDRS_SB_G0R_ARM_LDRS_SB_G1R_ARM_LDRS_SB_G2R_ARM_GOT_BREL12R_ARM_THM_JUMP11R_ARM_TLS_IE12GPR_ARM_PRIVATE_10R_ARM_PRIVATE_11R_ARM_PRIVATE_12R_ARM_PRIVATE_13R_ARM_PRIVATE_14R_ARM_PRIVATE_15R_ARM_TLS_TPOFF32
R_ARM_MOVW_ABS_NC
R_ARM_TLS_GOTDESR_ARM_TLS_DESCSEQ
R_ARM_GNU_VTENTRY
R_ARM_TLS_DTPMOD32
R_ARM_TLS_DTPOFFR_ARM_MOVW_PREL_NC
R_ARM_THM_MOVT_ABS
R_ARM_ALU_PC_G0_R_ARM_ALU_PC_G1_R_ARM_ALU_SB_G0_R_ARM_ALU_SB_G1_R_ARM_MOVW_BREL_R_ARM_THM_TLS_CALL
vcx1
vld20.32
vst20.32
vld40.32
vst40.32
sha1su0.32
sha256su0.32
vld21.32
vst21.32
vld41.32
vst41.32
sha1su1.32
sha256su1.32
vld42.32
vst42.32
sha256h2.32
vld43.32
vst43.32
sha1c.32
sha1h.32
sha256h.32
sha1m.32
sha1p.32
dlstp.32
wlstp.32
vcvta.s32.f32
vcvtm.s32.f32
vcvtn.s32.f32
vcvtp.s32.f32
vcvta.u32.f32
vcvtm.u32.f32
vcvtn.u32.f32
vcvtp.u32.f32
vcmla.f32
vrinta.f32
vcadd.f32
vselge.f32
vminnm.f32
vmaxnm.f32
vrintm.f32
vrintn.f32
vrintp.f32
vseleq.f32
vselvs.f32
vselgt.f32
vrintx.f32
vrintz.f32
ldc2
mrc2
mrrc2
stc2
cdp2
mcr2
mcrr2
vcx2
vcx3
dlstp.64
wlstp.64
vcvta.s32.f64
vcvtm.s32.f64
vcvtn.s32.f64
vcvtp.s32.f64
vcvta.u32.f64
vcvtm.u32.f64
vcvtn.u32.f64
vcvtp.u32.f64
vrinta.f64
vselge.f64
vminnm.f64
vmaxnm.f64
vrintm.f64
vrintn.f64
vrintp.f64
vseleq.f64
vselvs.f64
vselgt.f64
vmull.p64
vld20.16
vst20.16
vld40.16
vst40.16
vld21.16
vst21.16
vld41.16
vst41.16
vld42.16
vst42.16
vld43.16
vst43.16
dlstp.16
wlstp.16
vcvta.s32.f16
vcvtm.s32.f16
vcvtn.s32.f16
vcvtp.s32.f16
vcvta.u32.f16
vcvtm.u32.f16
vcvtn.u32.f16
vcvtp.u32.f16
vcvta.s16.f16
vcvtm.s16.f16
vcvtn.s16.f16
vcvtp.s16.f16
vcvta.u16.f16
vcvtm.u16.f16
vcvtn.u16.f16
vcvtp.u16.f16
vcmla.f16
vrinta.f16
vcadd.f16
vselge.f16
vfmal.f16
vfmsl.f16
vminnm.f16
vmaxnm.f16
vrintm.f16
vrintn.f16
vrintp.f16
vseleq.f16
vins.f16
vselvs.f16
vselgt.f16
vrintx.f16
vmovx.f16
vrintz.f16
vmmla.bf16
vfmab.bf16
vfmat.bf16
vdot.bf16
vld20.8
vst20.8
vld40.8
vst40.8
vld21.8
vst21.8
vld41.8
vst41.8
vld42.8
vst42.8
vld43.8
vst43.8
aesimc.8
aesmc.8
aesd.8
aese.8
dlstp.8
wlstp.8
vusmmla.s8
vsmmla.s8
vusdot.s8
vsdot.s8
vummla.u8
vsudot.u8
vudot.u8
vcx1a
vcx2a
vcx3a
rfeda
rfeia
crc32b
crc32cb
rfedb
rfeib
csinc
cx1d
cx2d
cx3d
setend
csneg
crc32h
crc32ch
ldc2l
stc2l
bfcsel
setpan
letp
movs
bkpt
csinv
hvc.w
udf.w
crc32w
crc32cw
pldw
cbnz
srsda
sp!, 
srsia
sp!, 
srsdb
sp!, 
srsib
sp!, 
srsda
sp, 
srsia
sp, 
srsdb
sp, 
srsib
sp, 
# XRay Function Patchable RET.
# XRay Typed Event Log.
# XRay Custom Event Log.
# XRay Function Enter.
# XRay Tail Call Exit.
# XRay Function Exit.
__brkdiv0
vld1
dcps1
vst1
vcx1
vrev32
ldc2
mrc2
mrrc2
stc2
vld2
cdp2
mcr2
mcrr2
dcps2
vst2
vcx2
vld3
dcps3
vst3
vcx3
vrev64
vld4
vst4
sxtab16
uxtab16
sxtb16
uxtb16
shsub16
uhsub16
uqsub16
ssub16
usub16
shadd16
uhadd16
uqadd16
sadd16
uadd16
ssat16
usat16
vrev16
usada8
shsub8
uhsub8
uqsub8
ssub8
usub8
usad8
shadd8
uhadd8
uqadd8
sadd8
uadd8
LIFETIME_END
PSEUDO_PROBE
BUNDLE
DBG_VALUE
DBG_INSTR_REF
DBG_LABEL
@ COMPILER BARRIER
LIFETIME_START
vcx1a
vcx2a
vcx3a
vaba
cx1da
cx2da
cx3da
ldmda
stmda
vrmlaldavha
vrmlsldavha
rfeia
vldmia
vstmia
srsia
vcmla
smmla
vnmla
vmla
vfma
vfnma
vminnma
vmaxnma
vmina
vrsra
vsra
vrinta
vcvta
vmladava
vmlaldava
vmlsldava
vmlsdava
vaddva
vaddlva
vmaxa
ldab
sxtab
uxtab
smlabb
smlalbb
smulbb
rfedb
vldmdb
vstmdb
srsdb
ldmib
stmib
vshllb
vqdmullb
vmullb
stlb
vmovlb
vqshrnb
vqrshrnb
vrshrnb
vshrnb
vqshrunb
vqrshrunb
vqmovunb
vqmovnb
vmovnb
swpb
vldrb
vstrb
ldrsb
smlatb
pkhtb
smlaltb
smultb
vcvtb
sxtb
uxtb
qdsub
vhsub
vqsub
vsub
smlawb
smulwb
ldaexb
stlexb
ldrexb
strexb
vsbc
vadc
vbic
vshlc
mrrc
smlad
smuad
vabd
vhcadd
vcadd
qdadd
vrhadd
vhadd
vpadd
vqadd
vadd
smlald
smlsld
vand
vldrd
vstrd
smlsd
smusd
ldaexd
stlexd
ldrexd
strexd
vacge
vcge
vcle
vrecpe
vcmpe
vrsqrte
vbif
vqneg
vneg
ldah
vqdmlah
vqrdmlah
sxtah
uxtah
vqdmladh
vqrdmladh
vqdmlsdh
vqrdmlsdh
stlh
vqdmulh
vqrdmulh
vrmulh
vmulh
vldrh
vstrh
vqdmlash
vqrdmlash
vqrdmlsh
ldrsh
push
revsh
sxth
uxth
vrmlaldavh
vrmlsldavh
ldaexh
stlexh
ldrexh
strexh
vsbci
vadci
vsli
vsri
ldc2l
stc2l
umaal
vabal
vpadal
vqdmlal
smlal
umlal
vmlal
vtbl
vsubl
ldcl
stcl
vabdl
vpaddl
vaddl
vpsel
sqshl
uqshl
vqshl
uqrshl
vqrshl
vrshl
vshl
# FEntry call
sqshll
uqshll
uqrshll
vshll
lsll
vqdmull
smull
umull
vmull
sqrshrl
srshrl
urshrl
asrl
lsrl
vbsl
vqdmlsl
vmlsl
vcmul
smmul
vnmul
vmul
vmovl
vlldm
vminnm
vmaxnm
vscclrm
vrintm
vlstm
vcvtm
vrsubhn
vsubhn
vraddhn
vaddhn
vpmin
vmin
vqshrn
vqrshrn
vrshrn
vshrn
vorn
vtrn
vrintn
vcvtn
vqshrun
vqrshrun
vqmovun
vmvn
vqmovn
vmovn
trap
vzip
vcmp
lctp
vctp
vrintp
vcvtp
vddup
vidup
vdup
vdwdup
viwdup
vswp
vuzp
vceq
smmlar
vldr
sqrshr
srshr
urshr
vrshr
vshr
smmulr
veor
mcrr
vorr
smmlsr
vmsr
vbrsr
vrintr
vstr
vcvtr
vmlas
vfmas
vqabs
vabs
subs
vcls
smmls
vnmls
vmls
vfms
vfnms
bxns
blxns
vrecps
vmrs
asrs
lsrs
vrsqrts
movs
ssat
usat
ttat
smlabt
pkhbt
smlalbt
smulbt
ldrbt
strbt
ldrsbt
eret
vacgt
vcgt
ldrht
strht
ldrsht
rbit
vbit
vclt
vshllt
vqdmullt
vmullt
vmovlt
vcnt
hint
vqshrnt
vqrshrnt
vrshrnt
vshrnt
vqshrunt
vqrshrunt
vqmovunt
vqmovnt
vmovnt
vpnot
ldrt
vsqrt
strt
vpst
vtst
smlatt
smlaltt
smultt
vcvtt
vjcvt
vcvt
movt
smlawt
smulwt
vext
vqshlu
vabav
vmladav
vmlaldav
vmlsldav
vmlsdav
vminnmav
vmaxnmav
vminav
vmaxav
vaddv
sdiv
udiv
vdiv
vaddlv
vminnmv
vmaxnmv
vminv
vmov
vmaxv
vsubw
vaddw
pldw
vldrw
vstrw
movw
vrmlaldavhax
vrmlsldavhax
fldmiax
fstmiax
vpmax
vmax
shsax
uhsax
uqsax
ssax
usax
vmladavax
vmlaldavax
vmlsldavax
vmlsdavax
fldmdbx
fstmdbx
vtbx
smladx
smuadx
smlaldx
smlsldx
smlsdx
smusdx
ldaex
stlex
ldrex
clrex
strex
sbfx
ubfx
vqdmladhx
vqrdmladhx
vqdmlsdhx
vqrdmlsdhx
vrmlaldavhx
vrmlsldavhx
bflx
shasx
uhasx
uqasx
sasx
uasx
vrintx
vmladavx
vmlaldavx
vmlsldavx
vmlsdavx
vclz
vrintz
hF)(pF)(UF),_F),
e)0\s0,
j"8R
I(P)"8
I(ei"8
G),oG),
G),gG),
t ,E
Et ,
t ,M
Mt ,
k ,8
8p ,
k ,Z
 `2"
@),^B),xF),
=\S"AgK#=_P#=
Q#=\S#=\S*AgK+=_P+=
Q+=\S+=\S2AgK3=_P3=
Q3=\S3=
Sr,CKj
Sr,CPj
Sr,;Kj
Sr,<Pj
S#<dO"
@),hB),
A),9E),
A),9E),
A),-E),
A),-E),
@)(/@)(q@)(
@)(;@)(}@)(
k ,[
[p ,
k ,`
E),G
A),qD),
A),qD),DA),
D),DA),
D),rB),
B),5D),DA),
D),SA),
D),SA),
B),DD),SA),&A),
D),&A),
D),bA),
D),bA),
D),&A),
B),SD),bA),5A),
D),5A),
D),qA),
D),qA),
B),&D),5A),
B),bD),qA),\s
,\s =\s =\s0=\s0=\
0A\s
=\s(=\s(=\
(A\s
E),0
"E),"E),"E),"E),
C),9E),
C),-E),
uE),Vs
k ,_
bC),
C),EE),
A),EE),
A),EE),
A),&C),QE),
A),QE),
A),QE),
A),2C),]E),
A),]E),
A),]E),
zu`@zuh
E),zup
f)0>C),iE),
A),VC),
B),JC),
\s >\s(>\s
f)0!s`@!sh
k ,
k ,
k ,
k ,
f)0=
q =\s
=\s@>\s =\
q0=\sX>\s`>\s0=\
f)0\
\sx>\s
f)0B
k ,8
8p ,
k ,[
[p ,
jo 4Uu 4
G),oG),
G),gG),
G),,G),
G),`G),
k ,8
k ,[
!2s
[p ,w
D4_D6_D8_D10
D7_D8_D9_D10
Q7_Q8_Q9_Q10
D14_D16_D18_D20
D17_D18_D19_D20
D24_D26_D28_D30
D27_D28_D29_D30
mvfr0
D9_D10_D11
D5_D7_D9_D11
Q8_Q9_Q10_Q11
R10_R11
D19_D20_D21
D15_D17_D19_D21
D29_D30_D31
D25_D27_D29_D31
Q0_Q1
R0_R1
mvfr1
D6_D8_D10_D12
D9_D10_D11_D12
Q9_Q10_Q11_Q12
D16_D18_D20_D22
D19_D20_D21_D22
D0_D2
D0_D1_D2
Q1_Q2
mvfr2
fpinst2
D7_D9_D11_D13
D11_D12_D13
Q10_Q11_Q12_Q13
D17_D19_D21_D23
D21_D22_D23
D1_D3
D1_D2_D3
Q0_Q1_Q2_Q3
R2_R3
D8_D10_D12_D14
D11_D12_D13_D14
Q11_Q12_Q13_Q14
D18_D20_D22_D24
D21_D22_D23_D24
D0_D2_D4
D1_D2_D3_D4
Q1_Q2_Q3_Q4
D9_D11_D13_D15
D13_D14_D15
Q12_Q13_Q14_Q15
D19_D21_D23_D25
D23_D24_D25
D1_D3_D5
D3_D4_D5
Q2_Q3_Q4_Q5
R4_R5
D10_D12_D14_D16
D13_D14_D15_D16
D20_D22_D24_D26
D23_D24_D25_D26
D0_D2_D4_D6
D3_D4_D5_D6
Q3_Q4_Q5_Q6
D11_D13_D15_D17
D15_D16_D17
D21_D23_D25_D27
D25_D26_D27
D1_D3_D5_D7
D5_D6_D7
Q4_Q5_Q6_Q7
R6_R7
D12_D14_D16_D18
D15_D16_D17_D18
D22_D24_D26_D28
D25_D26_D27_D28
D2_D4_D6_D8
D5_D6_D7_D8
Q5_Q6_Q7_Q8
D13_D15_D17_D19
D17_D18_D19
D23_D25_D27_D29
D27_D28_D29
D3_D5_D7_D9
D7_D8_D9
Q6_Q7_Q8_Q9
R8_R9
R12_SP
fpscr_nzcvqc
fpexc
fpsid
itstate
fpscr
apsr
cpsr
spsr
fpcxtns
fpcxts
fpinst
fpscr_nzcv
apsr_nzcv
ssbb
pssbb
nop$
yield$
wfe$
wfi$
sev$
sevl$
esb$
csdb$
vmlava$
.s16
vmlava$
.s32
vmlava$
vmlava$
.u16
vmlava$
.u32
vmlava$
vmlav$
.s16
vmlav$
.s32
vmlav$
vmlav$
.u16
vmlav$
.u32
vmlav$
vmlalva$
.s16
vmlalva$
.s32
vmlalva$
.u16
vmlalva$
.u32
vmlalv$
.s16
vmlalv$
.s32
vmlalv$
.u16
vmlalv$
.u32
vmov$
vrmlalvha$
.s32
vrmlalvha$
.u32
vrmlalvh$
.s32
vrmlalvh$
.u32
cset
cinc
csetm
cinv
cneg
dfb$
nop$
yield$
wfe$
wfi$
sev$
sevl$
esb$
eret$
D4_D6_D8_D10
D7_D8_D9_D10
Q7_Q8_Q9_Q10
D14_D16_D18_D20
D17_D18_D19_D20
D24_D26_D28_D30
D27_D28_D29_D30
MVFR0
D9_D10_D11
D5_D7_D9_D11
Q8_Q9_Q10_Q11
R10_R11
D19_D20_D21
D15_D17_D19_D21
D29_D30_D31
D25_D27_D29_D31
Q0_Q1
MVFR1
R0_R1
D6_D8_D10_D12
D9_D10_D11_D12
Q9_Q10_Q11_Q12
D16_D18_D20_D22
D19_D20_D21_D22
D0_D2
D0_D1_D2
Q1_Q2
MVFR2
FPINST2
D7_D9_D11_D13
D11_D12_D13
Q10_Q11_Q12_Q13
D17_D19_D21_D23
D21_D22_D23
D1_D3
D1_D2_D3
Q0_Q1_Q2_Q3
R2_R3
D8_D10_D12_D14
D11_D12_D13_D14
Q11_Q12_Q13_Q14
D18_D20_D22_D24
D21_D22_D23_D24
D0_D2_D4
D1_D2_D3_D4
Q1_Q2_Q3_Q4
D9_D11_D13_D15
D13_D14_D15
Q12_Q13_Q14_Q15
D19_D21_D23_D25
D23_D24_D25
D1_D3_D5
D3_D4_D5
Q2_Q3_Q4_Q5
R4_R5
D10_D12_D14_D16
D13_D14_D15_D16
D20_D22_D24_D26
D23_D24_D25_D26
D0_D2_D4_D6
D3_D4_D5_D6
Q3_Q4_Q5_Q6
D11_D13_D15_D17
D15_D16_D17
D21_D23_D25_D27
D25_D26_D27
D1_D3_D5_D7
D5_D6_D7
Q4_Q5_Q6_Q7
R6_R7
D12_D14_D16_D18
D15_D16_D17_D18
D22_D24_D26_D28
D25_D26_D27_D28
D2_D4_D6_D8
D5_D6_D7_D8
Q5_Q6_Q7_Q8
D13_D15_D17_D19
D17_D18_D19
D23_D25_D27_D29
D27_D28_D29
D3_D5_D7_D9
D7_D8_D9
Q6_Q7_Q8_Q9
R8_R9
FPSCR_NZCVQC
FPEXC
FPSID
ITSTATE
R12_SP
FPSCR
APSR
CPSR
SPSR
FPCXTNS
FPCXTS
FPINST
FPSCR_NZCV
APSR_NZCV
QQQQPR_with_ssub_0
FPWithVPR_with_ssub_0
DQuadSpc_with_ssub_0
DTripleSpc_with_ssub_0
DPairSpc_with_ssub_0
DQuad_with_ssub_0
DTriple_with_ssub_0
DPair_with_ssub_0
QQQQPR_with_ssub_12
DPR_VFP2
QPR_VFP2
DQuad_with_ssub_2
DTriple_with_ssub_2
DPair_with_ssub_2
QQQQPR_with_ssub_4
DQuadSpc_with_ssub_4
DTripleSpc_with_ssub_4
DPairSpc_with_ssub_4
DQuad_with_ssub_4
DTriple_with_ssub_4
DQuad_with_ssub_6
QQQQPR_with_dsub_0_in_DPR_8
DQuadSpc_with_dsub_0_in_DPR_8
DTripleSpc_with_dsub_0_in_DPR_8
DPairSpc_with_dsub_0_in_DPR_8
DQuad_with_dsub_0_in_DPR_8
DTriple_with_dsub_0_in_DPR_8
DPair_with_dsub_0_in_DPR_8
DQuad_with_dsub_1_in_DPR_8
DTriple_with_dsub_1_in_DPR_8
DPair_with_dsub_1_in_DPR_8
QQQQPR_with_dsub_2_in_DPR_8
DQuadSpc_with_dsub_2_in_DPR_8
DTripleSpc_with_dsub_2_in_DPR_8
DPairSpc_with_dsub_2_in_DPR_8
DQuad_with_dsub_2_in_DPR_8
DTriple_with_dsub_2_in_DPR_8
DQuad_with_dsub_3_in_DPR_8
QQQQPR_with_dsub_4_in_DPR_8
DQuadSpc_with_dsub_4_in_DPR_8
DTripleSpc_with_dsub_4_in_DPR_8
QQQQPR_with_dsub_6_in_DPR_8
DQuad_with_qsub_0_in_QPR_8
DTriple_with_qsub_0_in_QPR_8
DQuad_with_qsub_1_in_QPR_8
DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR_8
DTriple_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR_8
FPWithVPR_with_ssub_0_with_ssub_0_in_SPR_8
QQQQPR_with_ssub_8
DQuadSpc_with_ssub_8
DTripleSpc_with_ssub_8
VCCR
hGPR_and_tcGPR
tGPROdd_and_tcGPR
tGPREven_and_tcGPR
tGPREven_and_GPRnoip_and_tcGPR
GPRPair_with_gsub_0_in_tcGPR
GPRPair_with_gsub_1_in_tcGPR
GPRnopc_and_hGPR
GPRnopc_and_GPRnoip_and_hGPR
GPRwithAPSR_NZCVnosp_and_GPRnoip_and_hGPR
GPRwithAPSR_NZCVnosp_and_hGPR
GPRPairnosp_and_GPRPair_with_gsub_0_in_hGPR
rGPR
GPRPair_with_gsub_0_in_tGPR
DQuad_with_qsub_0_in_MQPR
DTriple_with_ssub_4_and_DTriple_with_qsub_0_in_MQPR
DTriple_with_dsub_2_in_DPR_8_and_DTriple_with_qsub_0_in_MQPR
DQuad_with_qsub_1_in_MQPR
DQuad_with_ssub_6_and_DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_MQPR
DQuad_with_dsub_0_in_DPR_8_and_DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_MQPR
DQuad_with_dsub_3_in_DPR_8_and_DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_MQPR
DTriple_with_dsub_0_in_DPR_8_and_DTriple_with_ssub_2_ssub_3_ssub_4_ssub_5_in_MQPR
QQQQPR
DTriple_with_qsub_0_in_QPR
DQuad_with_ssub_0_and_DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR
DTriple_with_ssub_0_and_DTriple_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR
FPWithVPR
GPRwithAPSR
GPRwithZR
cl_FPSCR_NZCV
DQuadSpc
DTripleSpc
DPairSpc
hGPR_and_tGPRwithpc
GPRnoip_and_GPRnopc
DQuad
hGPR_and_tGPROdd
tGPR_and_tGPROdd
DTriple
hGPR_and_tGPREven
tGPR_and_tGPREven
hGPR_and_GPRnoip_and_tGPREven
GPRnoip
GPRPair_with_gsub_1_in_GPRsp
GPRwithAPSRnosp
GPRwithZRnosp
GPRnoip_and_GPRwithAPSR_NZCVnosp
GPRPairnosp
DPair
GPRPair
GPRlr
FPCXTRegs
@UUU
G_FLOG10
VMOVD0
VMSR_P0
VMRS_P0
VMOVQ0
VMRS_MVFR0
SHA1SU0
SHA256SU0
t__brkdiv0
VTBL1
VMRS_MVFR1
t2DCPS1
SHA1SU1
SHA256SU1
VTBX1
CDE_CX1
t2LDRBi12
t2STRBi12
t2LDRSBi12
t2PLDi12
t2LDRHi12
t2STRHi12
t2LDRSHi12
t2PLIi12
t2LDRi12
t2STRi12
t2PLDWi12
BR_JTm_i12
t2SUBri12
t2ADDri12
t2SUBspImm12
t2ADDspImm12
MVE_VSTRB32
MVE_VSTRH32
COPY_STRUCT_BYVAL_I32
MVE_VCTP32
MVE_VDUP32
MVE_VBRSR32
MVE_VLDRBS32
MVE_VLDRHS32
MVE_VLDRBU32
MVE_VLDRHU32
MVE_VLDRWU32
MVE_VSTRWU32
MVE_VLD20_32
MVE_VST20_32
MVE_VLD40_32
MVE_VST40_32
MVE_VLD21_32
MVE_VST21_32
MVE_VLD41_32
MVE_VST41_32
MVE_VLD42_32
MVE_VST42_32
MVE_VLD43_32
MVE_VST43_32
MVE_VREV64_32
CMP_SWAP_32
MVE_DLSTP_32
MVE_WLSTP_32
MVE_VMOV_from_lane_32
MVE_VMOV_to_lane_32
VLD3dWB_fixed_Asm_32
VST3dWB_fixed_Asm_32
VLD4dWB_fixed_Asm_32
VST4dWB_fixed_Asm_32
VLD1LNdWB_fixed_Asm_32
VST1LNdWB_fixed_Asm_32
VLD2LNdWB_fixed_Asm_32
VST2LNdWB_fixed_Asm_32
VLD3LNdWB_fixed_Asm_32
VST3LNdWB_fixed_Asm_32
VLD4LNdWB_fixed_Asm_32
VST4LNdWB_fixed_Asm_32
VLD3DUPdWB_fixed_Asm_32
VLD4DUPdWB_fixed_Asm_32
VLD3qWB_fixed_Asm_32
VST3qWB_fixed_Asm_32
VLD4qWB_fixed_Asm_32
VST4qWB_fixed_Asm_32
VLD2LNqWB_fixed_Asm_32
VST2LNqWB_fixed_Asm_32
VLD3LNqWB_fixed_Asm_32
VST3LNqWB_fixed_Asm_32
VLD4LNqWB_fixed_Asm_32
VST4LNqWB_fixed_Asm_32
VLD3DUPqWB_fixed_Asm_32
VLD4DUPqWB_fixed_Asm_32
VLD3dWB_register_Asm_32
VST3dWB_register_Asm_32
VLD4dWB_register_Asm_32
VST4dWB_register_Asm_32
VLD1LNdWB_register_Asm_32
VST1LNdWB_register_Asm_32
VLD2LNdWB_register_Asm_32
VST2LNdWB_register_Asm_32
VLD3LNdWB_register_Asm_32
VST3LNdWB_register_Asm_32
VLD4LNdWB_register_Asm_32
VST4LNdWB_register_Asm_32
VLD3DUPdWB_register_Asm_32
VLD4DUPdWB_register_Asm_32
VLD3qWB_register_Asm_32
VST3qWB_register_Asm_32
VLD4qWB_register_Asm_32
VST4qWB_register_Asm_32
VLD2LNqWB_register_Asm_32
VST2LNqWB_register_Asm_32
VLD3LNqWB_register_Asm_32
VST3LNqWB_register_Asm_32
VLD4LNqWB_register_Asm_32
VST4LNqWB_register_Asm_32
VLD3DUPqWB_register_Asm_32
VLD4DUPqWB_register_Asm_32
VLD3dAsm_32
VST3dAsm_32
VLD4dAsm_32
VST4dAsm_32
VLD1LNdAsm_32
VST1LNdAsm_32
VLD2LNdAsm_32
VST2LNdAsm_32
VLD3LNdAsm_32
VST3LNdAsm_32
VLD4LNdAsm_32
VST4LNdAsm_32
VLD3DUPdAsm_32
VLD4DUPdAsm_32
VLD3qAsm_32
VST3qAsm_32
VLD4qAsm_32
VST4qAsm_32
VLD2LNqAsm_32
VST2LNqAsm_32
VLD3LNqAsm_32
VST3LNqAsm_32
VLD4LNqAsm_32
VST4LNqAsm_32
VLD3DUPqAsm_32
VLD4DUPqAsm_32
VLD2b32
VST2b32
VLD1d32
VST1d32
VLD2d32
VST2d32
VLD3d32
VST3d32
VREV64d32
VLD4d32
VST4d32
VLD1LNd32
VST1LNd32
VLD2LNd32
VST2LNd32
VLD3LNd32
VST3LNd32
VLD4LNd32
VST4LNd32
VTRNd32
VLD1DUPd32
VLD2DUPd32
VLD3DUPd32
VLD4DUPd32
VEXTd32
VCMLAv2f32
VCADDv2f32
VMOVv2f32
VCGEzv2f32
VCLEzv2f32
VCEQzv2f32
VCGTzv2f32
VCLTzv2f32
VCMLAv4f32
VCADDv4f32
MVE_VPTv4f32
VMOVv4f32
VCGEzv4f32
VCLEzv4f32
VCEQzv4f32
VCGTzv4f32
VCLTzv4f32
MVE_VCMLAf32
MVE_VFMAf32
MVE_VMINNMAf32
MVE_VMAXNMAf32
MVE_VSUBf32
MVE_VABDf32
MVE_VCADDf32
MVE_VADDf32
MVE_VNEGf32
MVE_VCMULf32
MVE_VMULf32
MVE_VMINNMf32
MVE_VMAXNMf32
MVE_VCMPf32
MVE_VABSf32
MVE_VFMSf32
MVE_VFMA_qr_Sf32
MVE_VMINNMAVf32
MVE_VMAXNMAVf32
MVE_VMINNMVf32
MVE_VMAXNMVf32
MVE_VFMA_qr_f32
MVE_VSUB_qr_f32
MVE_VADD_qr_f32
MVE_VMUL_qr_f32
MVE_VMOVimmf32
VMLAv2i32
VSUBv2i32
VADDv2i32
VQNEGv2i32
VQRDMLAHv2i32
VQDMULHv2i32
VQRDMULHv2i32
VQRDMLSHv2i32
VSLIv2i32
VSRIv2i32
VMULv2i32
VRSUBHNv2i32
VSUBHNv2i32
VRADDHNv2i32
VADDHNv2i32
VRSHRNv2i32
VSHRNv2i32
VQSHRUNv2i32
VQRSHRUNv2i32
VMVNv2i32
VMOVNv2i32
VCEQv2i32
VQABSv2i32
VABSv2i32
VCLSv2i32
VMLSv2i32
VTSTv2i32
VMOVv2i32
VCLZv2i32
VBICiv2i32
VSHLiv2i32
VORRiv2i32
VQSHLsiv2i32
VQSHLuiv2i32
VMLAslv2i32
VQRDMLAHslv2i32
VQDMULHslv2i32
VQRDMULHslv2i32
VQRDMLSHslv2i32
VQDMLALslv2i32
VQDMULLslv2i32
VQDMLSLslv2i32
VMULslv2i32
VMLSslv2i32
VABAsv2i32
VRSRAsv2i32
VSRAsv2i32
VHSUBsv2i32
VQSUBsv2i32
VABDsv2i32
VRHADDsv2i32
VHADDsv2i32
VQADDsv2i32
VCGEsv2i32
VPADALsv2i32
VPADDLsv2i32
VQSHLsv2i32
VQRSHLsv2i32
VRSHLsv2i32
VSHLsv2i32
VMINsv2i32
VQSHRNsv2i32
VQRSHRNsv2i32
VQMOVNsv2i32
VRSHRsv2i32
VSHRsv2i32
VCGTsv2i32
VMAXsv2i32
VMLALslsv2i32
VMULLslsv2i32
VMLSLslsv2i32
VABAuv2i32
VRSRAuv2i32
VSRAuv2i32
VHSUBuv2i32
VQSUBuv2i32
VABDuv2i32
VRHADDuv2i32
VHADDuv2i32
VQADDuv2i32
VCGEuv2i32
VPADALuv2i32
VPADDLuv2i32
VQSHLuv2i32
VQRSHLuv2i32
VRSHLuv2i32
VSHLuv2i32
VMINuv2i32
VQSHRNuv2i32
VQRSHRNuv2i32
VQMOVNuv2i32
VRSHRuv2i32
VSHRuv2i32
VCGTuv2i32
VMAXuv2i32
VMLALsluv2i32
VMULLsluv2i32
VMLSLsluv2i32
VQSHLsuv2i32
VQMOVNsuv2i32
VCGEzv2i32
VCLEzv2i32
VCEQzv2i32
VCGTzv2i32
VCLTzv2i32
VMLAv4i32
VSUBv4i32
VADDv4i32
VQNEGv4i32
VQRDMLAHv4i32
VQDMULHv4i32
VQRDMULHv4i32
VQRDMLSHv4i32
VSLIv4i32
VSRIv4i32
VQDMLALv4i32
VQDMULLv4i32
VQDMLSLv4i32
VMULv4i32
VMVNv4i32
VCEQv4i32
VQABSv4i32
VABSv4i32
VCLSv4i32
VMLSv4i32
MVE_VPTv4i32
VTSTv4i32
VMOVv4i32
VCLZv4i32
VBICiv4i32
VSHLiv4i32
VORRiv4i32
VQSHLsiv4i32
VQSHLuiv4i32
VMLAslv4i32
VQRDMLAHslv4i32
VQDMULHslv4i32
VQRDMULHslv4i32
VQRDMLSHslv4i32
VMULslv4i32
VMLSslv4i32
VABAsv4i32
VRSRAsv4i32
VSRAsv4i32
VHSUBsv4i32
VQSUBsv4i32
VABDsv4i32
VRHADDsv4i32
VHADDsv4i32
VQADDsv4i32
VCGEsv4i32
VABALsv4i32
VPADALsv4i32
VMLALsv4i32
VSUBLsv4i32
VABDLsv4i32
VPADDLsv4i32
VADDLsv4i32
VQSHLsv4i32
VQRSHLsv4i32
VRSHLsv4i32
VSHLsv4i32
VSHLLsv4i32
VMULLsv4i32
VMLSLsv4i32
VMOVLsv4i32
VMINsv4i32
VRSHRsv4i32
VSHRsv4i32
VCGTsv4i32
VSUBWsv4i32
VADDWsv4i32
VMAXsv4i32
VABAuv4i32
VRSRAuv4i32
VSRAuv4i32
VHSUBuv4i32
VQSUBuv4i32
VABDuv4i32
VRHADDuv4i32
VHADDuv4i32
VQADDuv4i32
VCGEuv4i32
VABALuv4i32
VPADALuv4i32
VMLALuv4i32
VSUBLuv4i32
VABDLuv4i32
VPADDLuv4i32
VADDLuv4i32
VQSHLuv4i32
VQRSHLuv4i32
VRSHLuv4i32
VSHLuv4i32
VSHLLuv4i32
VMULLuv4i32
VMLSLuv4i32
VMOVLuv4i32
VMINuv4i32
VRSHRuv4i32
VSHRuv4i32
VCGTuv4i32
VSUBWuv4i32
VADDWuv4i32
VMAXuv4i32
VQSHLsuv4i32
VCGEzv4i32
VCLEzv4i32
VCEQzv4i32
VCGTzv4i32
VCLTzv4i32
MVE_VSUBi32
MVE_VCADDi32
VPADDi32
MVE_VADDi32
MVE_VQDMULHi32
MVE_VQRDMULHi32
VSHLLi32
MVE_VMULi32
VGETLNi32
VSETLNi32
MVE_VCMPi32
MVE_VSUB_qr_i32
MVE_VADD_qr_i32
MVE_VMUL_qr_i32
MVE_VBICimmi32
MVE_VMVNimmi32
MVE_VORRimmi32
MVE_VMOVimmi32
MVE_VSHL_immi32
MVE_VSLIimm32
MVE_VSRIimm32
VLD1q32
VST1q32
VLD2q32
VST2q32
VLD3q32
VST3q32
VREV64q32
VLD4q32
VST4q32
VLD2LNq32
VST2LNq32
VLD3LNq32
VST3LNq32
VLD4LNq32
VST4LNq32
VTRNq32
VZIPq32
VLD1DUPq32
VLD3DUPq32
VLD4DUPq32
VUZPq32
VEXTq32
MVE_VPTv4s32
MVE_VMINAs32
MVE_VMAXAs32
MVE_VMULLBs32
MVE_VHSUBs32
MVE_VQSUBs32
MVE_VABDs32
MVE_VHCADDs32
MVE_VRHADDs32
MVE_VHADDs32
MVE_VQADDs32
MVE_VQNEGs32
MVE_VNEGs32
MVE_VQDMLADHs32
MVE_VQRDMLADHs32
MVE_VQDMLSDHs32
MVE_VQRDMLSDHs32
MVE_VRMULHs32
MVE_VMULHs32
MVE_VRMLALDAVHs32
MVE_VRMLSLDAVHs32
VPMINs32
MVE_VMINs32
MVE_VCMPs32
MVE_VQABSs32
MVE_VABSs32
MVE_VCLSs32
MVE_VMULLTs32
MVE_VABAVs32
MVE_VMLADAVs32
MVE_VMLALDAVs32
MVE_VMLSLDAVs32
MVE_VMLSDAVs32
MVE_VMINAVs32
MVE_VMAXAVs32
MVE_VMINVs32
MVE_VMAXVs32
VPMAXs32
MVE_VMAXs32
MVE_VQDMLADHXs32
MVE_VQRDMLADHXs32
MVE_VQDMLSDHXs32
MVE_VQRDMLSDHXs32
MVE_VCLZs32
MVE_VMLA_qr_s32
MVE_VHSUB_qr_s32
MVE_VQSUB_qr_s32
MVE_VHADD_qr_s32
MVE_VQADD_qr_s32
MVE_VQDMULH_qr_s32
MVE_VQRDMULH_qr_s32
MVE_VMLAS_qr_s32
MVE_VRMLALDAVHas32
MVE_VRMLSLDAVHas32
MVE_VMLADAVas32
MVE_VMLALDAVas32
MVE_VMLSLDAVas32
MVE_VMLSDAVas32
MVE_VQSHL_by_vecs32
MVE_VQRSHL_by_vecs32
MVE_VRSHL_by_vecs32
MVE_VSHL_by_vecs32
MVE_VQSHRNbhs32
MVE_VQRSHRNbhs32
MVE_VQSHRNths32
MVE_VQRSHRNths32
MVE_VQSHLimms32
MVE_VRSHR_imms32
MVE_VSHR_imms32
MVE_VQSHLU_imms32
MVE_VQDMLAH_qrs32
MVE_VQRDMLAH_qrs32
MVE_VQDMLASH_qrs32
MVE_VQRDMLASH_qrs32
MVE_VQSHL_qrs32
MVE_VQRSHL_qrs32
MVE_VRSHL_qrs32
MVE_VSHL_qrs32
MVE_VRMLALDAVHxs32
MVE_VRMLSLDAVHxs32
MVE_VMLADAVxs32
MVE_VMLALDAVxs32
MVE_VMLSLDAVxs32
MVE_VMLSDAVxs32
MVE_VRMLALDAVHaxs32
MVE_VRMLSLDAVHaxs32
MVE_VMLADAVaxs32
MVE_VMLALDAVaxs32
MVE_VMLSLDAVaxs32
MVE_VMLSDAVaxs32
MVE_VPTv4u32
MVE_VMULLBu32
MVE_VHSUBu32
MVE_VQSUBu32
MVE_VABDu32
MVE_VRHADDu32
MVE_VHADDu32
MVE_VQADDu32
MVE_VRMULHu32
MVE_VMULHu32
MVE_VRMLALDAVHu32
VPMINu32
MVE_VMINu32
MVE_VCMPu32
MVE_VDDUPu32
MVE_VIDUPu32
MVE_VDWDUPu32
MVE_VIWDUPu32
MVE_VMULLTu32
MVE_VABAVu32
MVE_VMLADAVu32
MVE_VMLALDAVu32
MVE_VMINVu32
MVE_VMAXVu32
VPMAXu32
MVE_VMAXu32
MVE_VMLA_qr_u32
MVE_VHSUB_qr_u32
MVE_VQSUB_qr_u32
MVE_VHADD_qr_u32
MVE_VQADD_qr_u32
MVE_VMLAS_qr_u32
MVE_VRMLALDAVHau32
MVE_VMLADAVau32
MVE_VMLALDAVau32
MVE_VQSHL_by_vecu32
MVE_VQRSHL_by_vecu32
MVE_VRSHL_by_vecu32
MVE_VSHL_by_vecu32
MVE_VQSHRNbhu32
MVE_VQRSHRNbhu32
MVE_VQSHRNthu32
MVE_VQRSHRNthu32
MVE_VQSHLimmu32
MVE_VRSHR_immu32
MVE_VSHR_immu32
MVE_VQSHL_qru32
MVE_VQRSHL_qru32
MVE_VRSHL_qru32
MVE_VSHL_qru32
t2MRC2
t2MRRC2
G_FLOG2
SHA256H2
VTBL2
t2CDP2
G_FEXP2
t2MCR2
VMRS_MVFR2
t2MCRR2
t2DCPS2
VMSR_FPINST2
VMRS_FPINST2
VTBX2
CDE_CX2
VLD2DUPd32x2
VLD2DUPd16x2
VLD2DUPd8x2
VTBL3
t2DCPS3
VTBX3
CDE_CX3
tSUBi3
tADDi3
tSUBSi3
tADDSi3
MVE_VCTP64
CMP_SWAP_64
MVE_DLSTP_64
MVE_WLSTP_64
VLD1d64
VST1d64
VSUBv1i64
VADDv1i64
VSLIv1i64
VSRIv1i64
VMOVv1i64
VSHLiv1i64
VQSHLsiv1i64
VQSHLuiv1i64
VRSRAsv1i64
VSRAsv1i64
VQSUBsv1i64
VQADDsv1i64
VQSHLsv1i64
VQRSHLsv1i64
VRSHLsv1i64
VSHLsv1i64
VRSHRsv1i64
VSHRsv1i64
VRSRAuv1i64
VSRAuv1i64
VQSUBuv1i64
VQADDuv1i64
VQSHLuv1i64
VQRSHLuv1i64
VRSHLuv1i64
VSHLuv1i64
VRSHRuv1i64
VSHRuv1i64
VQSHLsuv1i64
VSUBv2i64
VADDv2i64
VSLIv2i64
VSRIv2i64
VQDMLALv2i64
VQDMULLv2i64
VQDMLSLv2i64
VMOVv2i64
VSHLiv2i64
VQSHLsiv2i64
VQSHLuiv2i64
VRSRAsv2i64
VSRAsv2i64
VQSUBsv2i64
VQADDsv2i64
VABALsv2i64
VMLALsv2i64
VSUBLsv2i64
VABDLsv2i64
VADDLsv2i64
VQSHLsv2i64
VQRSHLsv2i64
VRSHLsv2i64
VSHLsv2i64
VSHLLsv2i64
VMULLsv2i64
VMLSLsv2i64
VMOVLsv2i64
VRSHRsv2i64
VSHRsv2i64
VSUBWsv2i64
VADDWsv2i64
VRSRAuv2i64
VSRAuv2i64
VQSUBuv2i64
VQADDuv2i64
VABALuv2i64
VMLALuv2i64
VSUBLuv2i64
VABDLuv2i64
VADDLuv2i64
VQSHLuv2i64
VQRSHLuv2i64
VRSHLuv2i64
VSHLuv2i64
VSHLLuv2i64
VMULLuv2i64
VMLSLuv2i64
VMOVLuv2i64
VRSHRuv2i64
VSHRuv2i64
VSUBWuv2i64
VADDWuv2i64
VQSHLsuv2i64
BCCi64
BCCZi64
MVE_VMOVimmi64
VMULLp64
VLD1q64
VST1q64
VEXTq64
VTBL4
VTBX4
TAILJMPr4
MLAv5
SMLALv5
UMLALv5
SMULLv5
UMULLv5
MULv5
t2SXTAB16
t2UXTAB16
MVE_VSTRB16
t2SXTB16
t2UXTB16
t2SHSUB16
t2UHSUB16
t2QSUB16
t2UQSUB16
t2SSUB16
t2USUB16
t2SHADD16
t2UHADD16
t2QADD16
t2UQADD16
t2SADD16
t2UADD16
MVE_VCTP16
MVE_VDUP16
MVE_VBRSR16
MVE_VLDRBS16
t2SSAT16
t2USAT16
MVE_VLDRBU16
MVE_VLDRHU16
MVE_VSTRHU16
t2REV16
tREV16
MVE_VLD20_16
MVE_VST20_16
MVE_VLD40_16
MVE_VST40_16
MVE_VLD21_16
MVE_VST21_16
MVE_VLD41_16
MVE_VST41_16
MVE_VREV32_16
MVE_VLD42_16
MVE_VST42_16
MVE_VLD43_16
MVE_VST43_16
MVE_VREV64_16
CMP_SWAP_16
MVE_DLSTP_16
MVE_WLSTP_16
MVE_VMOV_to_lane_16
VLD3dWB_fixed_Asm_16
VST3dWB_fixed_Asm_16
VLD4dWB_fixed_Asm_16
VST4dWB_fixed_Asm_16
VLD1LNdWB_fixed_Asm_16
VST1LNdWB_fixed_Asm_16
VLD2LNdWB_fixed_Asm_16
VST2LNdWB_fixed_Asm_16
VLD3LNdWB_fixed_Asm_16
VST3LNdWB_fixed_Asm_16
VLD4LNdWB_fixed_Asm_16
VST4LNdWB_fixed_Asm_16
VLD3DUPdWB_fixed_Asm_16
VLD4DUPdWB_fixed_Asm_16
VLD3qWB_fixed_Asm_16
VST3qWB_fixed_Asm_16
VLD4qWB_fixed_Asm_16
VST4qWB_fixed_Asm_16
VLD2LNqWB_fixed_Asm_16
VST2LNqWB_fixed_Asm_16
VLD3LNqWB_fixed_Asm_16
VST3LNqWB_fixed_Asm_16
VLD4LNqWB_fixed_Asm_16
VST4LNqWB_fixed_Asm_16
VLD3DUPqWB_fixed_Asm_16
VLD4DUPqWB_fixed_Asm_16
VLD3dWB_register_Asm_16
VST3dWB_register_Asm_16
VLD4dWB_register_Asm_16
VST4dWB_register_Asm_16
VLD1LNdWB_register_Asm_16
VST1LNdWB_register_Asm_16
VLD2LNdWB_register_Asm_16
VST2LNdWB_register_Asm_16
VLD3LNdWB_register_Asm_16
VST3LNdWB_register_Asm_16
VLD4LNdWB_register_Asm_16
VST4LNdWB_register_Asm_16
VLD3DUPdWB_register_Asm_16
VLD4DUPdWB_register_Asm_16
VLD3qWB_register_Asm_16
VST3qWB_register_Asm_16
VLD4qWB_register_Asm_16
VST4qWB_register_Asm_16
VLD2LNqWB_register_Asm_16
VST2LNqWB_register_Asm_16
VLD3LNqWB_register_Asm_16
VST3LNqWB_register_Asm_16
VLD4LNqWB_register_Asm_16
VST4LNqWB_register_Asm_16
VLD3DUPqWB_register_Asm_16
VLD4DUPqWB_register_Asm_16
VLD3dAsm_16
VST3dAsm_16
VLD4dAsm_16
VST4dAsm_16
VLD1LNdAsm_16
VST1LNdAsm_16
VLD2LNdAsm_16
VST2LNdAsm_16
VLD3LNdAsm_16
VST3LNdAsm_16
VLD4LNdAsm_16
VST4LNdAsm_16
VLD3DUPdAsm_16
VLD4DUPdAsm_16
VLD3qAsm_16
VST3qAsm_16
VLD4qAsm_16
VST4qAsm_16
VLD2LNqAsm_16
VST2LNqAsm_16
VLD3LNqAsm_16
VST3LNqAsm_16
VLD4LNqAsm_16
VST4LNqAsm_16
VLD3DUPqAsm_16
VLD4DUPqAsm_16
VLD2b16
VST2b16
VLD1d16
VST1d16
VREV32d16
VLD2d16
VST2d16
VLD3d16
VST3d16
VREV64d16
VLD4d16
VST4d16
VLD1LNd16
VST1LNd16
VLD2LNd16
VST2LNd16
VLD3LNd16
VST3LNd16
VLD4LNd16
VST4LNd16
VTRNd16
VZIPd16
VLD1DUPd16
VLD2DUPd16
VLD3DUPd16
VLD4DUPd16
VUZPd16
VEXTd16
VCMLAv4f16
VCADDv4f16
VCGEzv4f16
VCLEzv4f16
VCEQzv4f16
VCGTzv4f16
VCLTzv4f16
VCMLAv8f16
VCADDv8f16
MVE_VPTv8f16
VCGEzv8f16
VCLEzv8f16
VCEQzv8f16
VCGTzv8f16
VCLTzv8f16
MVE_VCMLAf16
MVE_VFMAf16
MVE_VMINNMAf16
MVE_VMAXNMAf16
MVE_VSUBf16
MVE_VABDf16
MVE_VCADDf16
MVE_VADDf16
MVE_VNEGf16
MVE_VCMULf16
MVE_VMULf16
MVE_VMINNMf16
MVE_VMAXNMf16
MVE_VCMPf16
MVE_VABSf16
MVE_VFMSf16
MVE_VFMA_qr_Sf16
MVE_VMINNMAVf16
MVE_VMAXNMAVf16
MVE_VMINNMVf16
MVE_VMAXNMVf16
MVE_VFMA_qr_f16
MVE_VSUB_qr_f16
MVE_VADD_qr_f16
MVE_VMUL_qr_f16
VMLAv4i16
VSUBv4i16
VADDv4i16
VQNEGv4i16
VQRDMLAHv4i16
VQDMULHv4i16
VQRDMULHv4i16
VQRDMLSHv4i16
VSLIv4i16
VSRIv4i16
VMULv4i16
VRSUBHNv4i16
VSUBHNv4i16
VRADDHNv4i16
VADDHNv4i16
VRSHRNv4i16
VSHRNv4i16
VQSHRUNv4i16
VQRSHRUNv4i16
VMVNv4i16
VMOVNv4i16
VCEQv4i16
VQABSv4i16
VABSv4i16
VCLSv4i16
VMLSv4i16
VTSTv4i16
VMOVv4i16
VCLZv4i16
VBICiv4i16
VSHLiv4i16
VORRiv4i16
VQSHLsiv4i16
VQSHLuiv4i16
VMLAslv4i16
VQRDMLAHslv4i16
VQDMULHslv4i16
VQRDMULHslv4i16
VQRDMLSHslv4i16
VQDMLALslv4i16
VQDMULLslv4i16
VQDMLSLslv4i16
VMULslv4i16
VMLSslv4i16
VABAsv4i16
VRSRAsv4i16
VSRAsv4i16
VHSUBsv4i16
VQSUBsv4i16
VABDsv4i16
VRHADDsv4i16
VHADDsv4i16
VQADDsv4i16
VCGEsv4i16
VPADALsv4i16
VPADDLsv4i16
VQSHLsv4i16
VQRSHLsv4i16
VRSHLsv4i16
VSHLsv4i16
VMINsv4i16
VQSHRNsv4i16
VQRSHRNsv4i16
VQMOVNsv4i16
VRSHRsv4i16
VSHRsv4i16
VCGTsv4i16
VMAXsv4i16
VMLALslsv4i16
VMULLslsv4i16
VMLSLslsv4i16
VABAuv4i16
VRSRAuv4i16
VSRAuv4i16
VHSUBuv4i16
VQSUBuv4i16
VABDuv4i16
VRHADDuv4i16
VHADDuv4i16
VQADDuv4i16
VCGEuv4i16
VPADALuv4i16
VPADDLuv4i16
VQSHLuv4i16
VQRSHLuv4i16
VRSHLuv4i16
VSHLuv4i16
VMINuv4i16
VQSHRNuv4i16
VQRSHRNuv4i16
VQMOVNuv4i16
VRSHRuv4i16
VSHRuv4i16
VCGTuv4i16
VMAXuv4i16
VMLALsluv4i16
VMULLsluv4i16
VMLSLsluv4i16
VQSHLsuv4i16
VQMOVNsuv4i16
VCGEzv4i16
VCLEzv4i16
VCEQzv4i16
VCGTzv4i16
VCLTzv4i16
VMLAv8i16
VSUBv8i16
VADDv8i16
VQNEGv8i16
VQRDMLAHv8i16
VQDMULHv8i16
VQRDMULHv8i16
VQRDMLSHv8i16
VSLIv8i16
VSRIv8i16
VMULv8i16
VMVNv8i16
VCEQv8i16
VQABSv8i16
VABSv8i16
VCLSv8i16
VMLSv8i16
MVE_VPTv8i16
VTSTv8i16
VMOVv8i16
VCLZv8i16
VBICiv8i16
VSHLiv8i16
VORRiv8i16
VQSHLsiv8i16
VQSHLuiv8i16
VMLAslv8i16
VQRDMLAHslv8i16
VQDMULHslv8i16
VQRDMULHslv8i16
VQRDMLSHslv8i16
VMULslv8i16
VMLSslv8i16
VABAsv8i16
VRSRAsv8i16
VSRAsv8i16
VHSUBsv8i16
VQSUBsv8i16
VABDsv8i16
VRHADDsv8i16
VHADDsv8i16
VQADDsv8i16
VCGEsv8i16
VABALsv8i16
VPADALsv8i16
VMLALsv8i16
VSUBLsv8i16
VABDLsv8i16
VPADDLsv8i16
VADDLsv8i16
VQSHLsv8i16
VQRSHLsv8i16
VRSHLsv8i16
VSHLsv8i16
VSHLLsv8i16
VMULLsv8i16
VMLSLsv8i16
VMOVLsv8i16
VMINsv8i16
VRSHRsv8i16
VSHRsv8i16
VCGTsv8i16
VSUBWsv8i16
VADDWsv8i16
VMAXsv8i16
VABAuv8i16
VRSRAuv8i16
VSRAuv8i16
VHSUBuv8i16
VQSUBuv8i16
VABDuv8i16
VRHADDuv8i16
VHADDuv8i16
VQADDuv8i16
VCGEuv8i16
VABALuv8i16
VPADALuv8i16
VMLALuv8i16
VSUBLuv8i16
VABDLuv8i16
VPADDLuv8i16
VADDLuv8i16
VQSHLuv8i16
VQRSHLuv8i16
VRSHLuv8i16
VSHLuv8i16
VSHLLuv8i16
VMULLuv8i16
VMLSLuv8i16
VMOVLuv8i16
VMINuv8i16
VRSHRuv8i16
VSHRuv8i16
VCGTuv8i16
VSUBWuv8i16
VADDWuv8i16
VMAXuv8i16
VQSHLsuv8i16
VCGEzv8i16
VCLEzv8i16
VCEQzv8i16
VCGTzv8i16
VCLTzv8i16
MVE_VSUBi16
t2MOVCCi16
MVE_VCADDi16
VPADDi16
MVE_VADDi16
MVE_VQDMULHi16
MVE_VQRDMULHi16
VSHLLi16
MVE_VMULi16
VSETLNi16
MVE_VCMPi16
t2MOVTi16
t2MOVi16
MVE_VSUB_qr_i16
MVE_VADD_qr_i16
MVE_VMUL_qr_i16
MVE_VBICimmi16
MVE_VMVNimmi16
MVE_VORRimmi16
MVE_VMOVimmi16
MVE_VSHL_immi16
MVE_VSLIimm16
MVE_VSRIimm16
MVE_VMULLBp16
MVE_VMULLTp16
VLD1q16
VST1q16
VREV32q16
VLD2q16
VST2q16
VLD3q16
VST3q16
VREV64q16
VLD4q16
VST4q16
VLD2LNq16
VST2LNq16
VLD3LNq16
VST3LNq16
VLD4LNq16
VST4LNq16
VTRNq16
VZIPq16
VLD1DUPq16
VLD3DUPq16
VLD4DUPq16
VUZPq16
VEXTq16
MVE_VPTv8s16
MVE_VMINAs16
MVE_VMAXAs16
MVE_VMULLBs16
MVE_VHSUBs16
MVE_VQSUBs16
MVE_VABDs16
MVE_VHCADDs16
MVE_VRHADDs16
MVE_VHADDs16
MVE_VQADDs16
MVE_VQNEGs16
MVE_VNEGs16
MVE_VQDMLADHs16
MVE_VQRDMLADHs16
MVE_VQDMLSDHs16
MVE_VQRDMLSDHs16
MVE_VRMULHs16
MVE_VMULHs16
VPMINs16
MVE_VMINs16
VGETLNs16
MVE_VCMPs16
MVE_VQABSs16
MVE_VABSs16
MVE_VCLSs16
MVE_VMULLTs16
MVE_VABAVs16
MVE_VMLADAVs16
MVE_VMLALDAVs16
MVE_VMLSLDAVs16
MVE_VMLSDAVs16
MVE_VMINAVs16
MVE_VMAXAVs16
MVE_VMINVs16
MVE_VMAXVs16
VPMAXs16
MVE_VMAXs16
MVE_VQDMLADHXs16
MVE_VQRDMLADHXs16
MVE_VQDMLSDHXs16
MVE_VQRDMLSDHXs16
MVE_VCLZs16
MVE_VMOV_from_lane_s16
MVE_VMLA_qr_s16
MVE_VHSUB_qr_s16
MVE_VQSUB_qr_s16
MVE_VHADD_qr_s16
MVE_VQADD_qr_s16
MVE_VQDMULH_qr_s16
MVE_VQRDMULH_qr_s16
MVE_VMLAS_qr_s16
MVE_VMLADAVas16
MVE_VMLALDAVas16
MVE_VMLSLDAVas16
MVE_VMLSDAVas16
MVE_VQSHL_by_vecs16
MVE_VQRSHL_by_vecs16
MVE_VRSHL_by_vecs16
MVE_VSHL_by_vecs16
MVE_VQSHRNbhs16
MVE_VQRSHRNbhs16
MVE_VQSHRNths16
MVE_VQRSHRNths16
MVE_VQSHLimms16
MVE_VRSHR_imms16
MVE_VSHR_imms16
MVE_VQSHLU_imms16
MVE_VQDMLAH_qrs16
MVE_VQRDMLAH_qrs16
MVE_VQDMLASH_qrs16
MVE_VQRDMLASH_qrs16
MVE_VQSHL_qrs16
MVE_VQRSHL_qrs16
MVE_VRSHL_qrs16
MVE_VSHL_qrs16
MVE_VMLADAVxs16
MVE_VMLALDAVxs16
MVE_VMLSLDAVxs16
MVE_VMLSDAVxs16
MVE_VMLADAVaxs16
MVE_VMLALDAVaxs16
MVE_VMLSLDAVaxs16
MVE_VMLSDAVaxs16
MVE_VPTv8u16
MVE_VMULLBu16
MVE_VHSUBu16
MVE_VQSUBu16
MVE_VABDu16
MVE_VRHADDu16
MVE_VHADDu16
MVE_VQADDu16
MVE_VRMULHu16
MVE_VMULHu16
VPMINu16
MVE_VMINu16
VGETLNu16
MVE_VCMPu16
MVE_VDDUPu16
MVE_VIDUPu16
MVE_VDWDUPu16
MVE_VIWDUPu16
MVE_VMULLTu16
MVE_VABAVu16
MVE_VMLADAVu16
MVE_VMLALDAVu16
MVE_VMINVu16
MVE_VMAXVu16
VPMAXu16
MVE_VMAXu16
MVE_VMOV_from_lane_u16
MVE_VMLA_qr_u16
MVE_VHSUB_qr_u16
MVE_VQSUB_qr_u16
MVE_VHADD_qr_u16
MVE_VQADD_qr_u16
MVE_VMLAS_qr_u16
MVE_VMLADAVau16
MVE_VMLALDAVau16
MVE_VQSHL_by_vecu16
MVE_VQRSHL_by_vecu16
MVE_VRSHL_by_vecu16
MVE_VSHL_by_vecu16
MVE_VQSHRNbhu16
MVE_VQRSHRNbhu16
MVE_VQSHRNthu16
MVE_VQRSHRNthu16
MVE_VQSHLimmu16
MVE_VRSHR_immu16
MVE_VSHR_immu16
MVE_VQSHL_qru16
MVE_VQRSHL_qru16
MVE_VRSHL_qru16
MVE_VSHL_qru16
t2USADA8
t2SHSUB8
t2UHSUB8
t2QSUB8
t2UQSUB8
t2SSUB8
t2USUB8
t2USAD8
t2SHADD8
t2UHADD8
t2QADD8
t2UQADD8
t2SADD8
t2UADD8
MVE_VCTP8
MVE_VDUP8
MVE_VBRSR8
MVE_VLDRBU8
MVE_VSTRBU8
MVE_VLD20_8
MVE_VST20_8
MVE_VLD40_8
MVE_VST40_8
MVE_VLD21_8
MVE_VST21_8
MVE_VLD41_8
MVE_VST41_8
MVE_VREV32_8
MVE_VLD42_8
MVE_VST42_8
MVE_VLD43_8
MVE_VST43_8
MVE_VREV64_8
MVE_VREV16_8
CMP_SWAP_8
MVE_DLSTP_8
MVE_WLSTP_8
MVE_VMOV_to_lane_8
VLD3dWB_fixed_Asm_8
VST3dWB_fixed_Asm_8
VLD4dWB_fixed_Asm_8
VST4dWB_fixed_Asm_8
VLD1LNdWB_fixed_Asm_8
VST1LNdWB_fixed_Asm_8
VLD2LNdWB_fixed_Asm_8
VST2LNdWB_fixed_Asm_8
VLD3LNdWB_fixed_Asm_8
VST3LNdWB_fixed_Asm_8
VLD4LNdWB_fixed_Asm_8
VST4LNdWB_fixed_Asm_8
VLD3DUPdWB_fixed_Asm_8
VLD4DUPdWB_fixed_Asm_8
VLD3qWB_fixed_Asm_8
VST3qWB_fixed_Asm_8
VLD4qWB_fixed_Asm_8
VST4qWB_fixed_Asm_8
VLD3DUPqWB_fixed_Asm_8
VLD4DUPqWB_fixed_Asm_8
VLD3dWB_register_Asm_8
VST3dWB_register_Asm_8
VLD4dWB_register_Asm_8
VST4dWB_register_Asm_8
VLD1LNdWB_register_Asm_8
VST1LNdWB_register_Asm_8
VLD2LNdWB_register_Asm_8
VST2LNdWB_register_Asm_8
VLD3LNdWB_register_Asm_8
VST3LNdWB_register_Asm_8
VLD4LNdWB_register_Asm_8
VST4LNdWB_register_Asm_8
VLD3DUPdWB_register_Asm_8
VLD4DUPdWB_register_Asm_8
VLD3qWB_register_Asm_8
VST3qWB_register_Asm_8
VLD4qWB_register_Asm_8
VST4qWB_register_Asm_8
VLD3DUPqWB_register_Asm_8
VLD4DUPqWB_register_Asm_8
VLD3dAsm_8
VST3dAsm_8
VLD4dAsm_8
VST4dAsm_8
VLD1LNdAsm_8
VST1LNdAsm_8
VLD2LNdAsm_8
VST2LNdAsm_8
VLD3LNdAsm_8
VST3LNdAsm_8
VLD4LNdAsm_8
VST4LNdAsm_8
VLD3DUPdAsm_8
VLD4DUPdAsm_8
VLD3qAsm_8
VST3qAsm_8
VLD4qAsm_8
VST4qAsm_8
VLD3DUPqAsm_8
VLD4DUPqAsm_8
VLD2b8
VST2b8
VLD1d8
VST1d8
VREV32d8
VLD2d8
VST2d8
VLD3d8
VST3d8
VREV64d8
VLD4d8
VST4d8
VREV16d8
VLD1LNd8
VST1LNd8
VLD2LNd8
VST2LNd8
VLD3LNd8
VST3LNd8
VLD4LNd8
VST4LNd8
VTRNd8
VZIPd8
VLD1DUPd8
VLD2DUPd8
VLD3DUPd8
VLD4DUPd8
VUZPd8
VEXTd8
VMLAv16i8
VSUBv16i8
VADDv16i8
VQNEGv16i8
VSLIv16i8
VSRIv16i8
VMULv16i8
VCEQv16i8
VQABSv16i8
VABSv16i8
VCLSv16i8
VMLSv16i8
MVE_VPTv16i8
VTSTv16i8
VMOVv16i8
VCLZv16i8
VSHLiv16i8
VQSHLsiv16i8
VQSHLuiv16i8
VABAsv16i8
VRSRAsv16i8
VSRAsv16i8
VHSUBsv16i8
VQSUBsv16i8
VABDsv16i8
VRHADDsv16i8
VHADDsv16i8
VQADDsv16i8
VCGEsv16i8
VPADALsv16i8
VPADDLsv16i8
VQSHLsv16i8
VQRSHLsv16i8
VRSHLsv16i8
VSHLsv16i8
VMINsv16i8
VRSHRsv16i8
VSHRsv16i8
VCGTsv16i8
VMAXsv16i8
VABAuv16i8
VRSRAuv16i8
VSRAuv16i8
VHSUBuv16i8
VQSUBuv16i8
VABDuv16i8
VRHADDuv16i8
VHADDuv16i8
VQADDuv16i8
VCGEuv16i8
VPADALuv16i8
VPADDLuv16i8
VQSHLuv16i8
VQRSHLuv16i8
VRSHLuv16i8
VSHLuv16i8
VMINuv16i8
VRSHRuv16i8
VSHRuv16i8
VCGTuv16i8
VMAXuv16i8
VQSHLsuv16i8
VCGEzv16i8
VCLEzv16i8
VCEQzv16i8
VCGTzv16i8
VCLTzv16i8
VMLAv8i8
VSUBv8i8
VADDv8i8
VQNEGv8i8
VSLIv8i8
VSRIv8i8
VMULv8i8
VRSUBHNv8i8
VSUBHNv8i8
VRADDHNv8i8
VADDHNv8i8
VRSHRNv8i8
VSHRNv8i8
VQSHRUNv8i8
VQRSHRUNv8i8
VMOVNv8i8
VCEQv8i8
VQABSv8i8
VABSv8i8
VCLSv8i8
VMLSv8i8
VTSTv8i8
VMOVv8i8
VCLZv8i8
VSHLiv8i8
VQSHLsiv8i8
VQSHLuiv8i8
VABAsv8i8
VRSRAsv8i8
VSRAsv8i8
VHSUBsv8i8
VQSUBsv8i8
VABDsv8i8
VRHADDsv8i8
VHADDsv8i8
VQADDsv8i8
VCGEsv8i8
VPADALsv8i8
VPADDLsv8i8
VQSHLsv8i8
VQRSHLsv8i8
VRSHLsv8i8
VSHLsv8i8
VMINsv8i8
VQSHRNsv8i8
VQRSHRNsv8i8
VQMOVNsv8i8
VRSHRsv8i8
VSHRsv8i8
VCGTsv8i8
VMAXsv8i8
VABAuv8i8
VRSRAuv8i8
VSRAuv8i8
VHSUBuv8i8
VQSUBuv8i8
VABDuv8i8
VRHADDuv8i8
VHADDuv8i8
VQADDuv8i8
VCGEuv8i8
VPADALuv8i8
VPADDLuv8i8
VQSHLuv8i8
VQRSHLuv8i8
VRSHLuv8i8
VSHLuv8i8
VMINuv8i8
VQSHRNuv8i8
VQRSHRNuv8i8
VQMOVNuv8i8
VRSHRuv8i8
VSHRuv8i8
VCGTuv8i8
VMAXuv8i8
VQSHLsuv8i8
VQMOVNsuv8i8
VCGEzv8i8
VCLEzv8i8
VCEQzv8i8
VCGTzv8i8
VCLTzv8i8
t2LDRBi8
t2STRBi8
t2LDRSBi8
MVE_VSUBi8
tSUBi8
MVE_VCADDi8
VPADDi8
MVE_VADDi8
tADDi8
t2PLDi8
t2LDRDi8
t2STRDi8
MVE_VQDMULHi8
MVE_VQRDMULHi8
t2LDRHi8
t2STRHi8
t2LDRSHi8
t2PLIi8
VSHLLi8
MVE_VMULi8
VSETLNi8
MVE_VCMPi8
tCMPi8
t2LDRi8
t2STRi8
tSUBSi8
tADDSi8
tMOVi8
t2PLDWi8
MVE_VSUB_qr_i8
MVE_VADD_qr_i8
MVE_VMUL_qr_i8
MVE_VMOVimmi8
MVE_VSHL_immi8
MVE_VSLIimm8
MVE_VSRIimm8
MVE_VMULLBp8
VMULLp8
MVE_VMULLTp8
VLD1q8
VST1q8
VREV32q8
VLD2q8
VST2q8
VLD3q8
VST3q8
VREV64q8
VLD4q8
VST4q8
VREV16q8
VTRNq8
VZIPq8
VLD1DUPq8
VLD3DUPq8
VLD4DUPq8
VUZPq8
VEXTq8
MVE_VPTv16s8
MVE_VMINAs8
MVE_VMAXAs8
MVE_VMULLBs8
MVE_VHSUBs8
MVE_VQSUBs8
MVE_VABDs8
MVE_VHCADDs8
MVE_VRHADDs8
MVE_VHADDs8
MVE_VQADDs8
MVE_VQNEGs8
MVE_VNEGs8
MVE_VQDMLADHs8
MVE_VQRDMLADHs8
MVE_VQDMLSDHs8
MVE_VQRDMLSDHs8
MVE_VRMULHs8
MVE_VMULHs8
VPMINs8
MVE_VMINs8
VGETLNs8
MVE_VCMPs8
MVE_VQABSs8
MVE_VABSs8
MVE_VCLSs8
MVE_VMULLTs8
MVE_VABAVs8
MVE_VMLADAVs8
MVE_VMLSDAVs8
MVE_VMINAVs8
MVE_VMAXAVs8
MVE_VMINVs8
MVE_VMAXVs8
VPMAXs8
MVE_VMAXs8
MVE_VQDMLADHXs8
MVE_VQRDMLADHXs8
MVE_VQDMLSDHXs8
MVE_VQRDMLSDHXs8
MVE_VCLZs8
MVE_VMOV_from_lane_s8
MVE_VMLA_qr_s8
MVE_VHSUB_qr_s8
MVE_VQSUB_qr_s8
MVE_VHADD_qr_s8
MVE_VQADD_qr_s8
MVE_VQDMULH_qr_s8
MVE_VQRDMULH_qr_s8
MVE_VMLAS_qr_s8
MVE_VMLADAVas8
MVE_VMLSDAVas8
MVE_VQSHL_by_vecs8
MVE_VQRSHL_by_vecs8
MVE_VRSHL_by_vecs8
MVE_VSHL_by_vecs8
MVE_VQSHLimms8
MVE_VRSHR_imms8
MVE_VSHR_imms8
MVE_VQSHLU_imms8
MVE_VQDMLAH_qrs8
MVE_VQRDMLAH_qrs8
MVE_VQDMLASH_qrs8
MVE_VQRDMLASH_qrs8
MVE_VQSHL_qrs8
MVE_VQRSHL_qrs8
MVE_VRSHL_qrs8
MVE_VSHL_qrs8
MVE_VMLADAVxs8
MVE_VMLSDAVxs8
MVE_VMLADAVaxs8
MVE_VMLSDAVaxs8
MVE_VPTv16u8
MVE_VMULLBu8
MVE_VHSUBu8
MVE_VQSUBu8
MVE_VABDu8
MVE_VRHADDu8
MVE_VHADDu8
MVE_VQADDu8
MVE_VRMULHu8
MVE_VMULHu8
VPMINu8
MVE_VMINu8
VGETLNu8
MVE_VCMPu8
MVE_VDDUPu8
MVE_VIDUPu8
MVE_VDWDUPu8
MVE_VIWDUPu8
MVE_VMULLTu8
MVE_VABAVu8
MVE_VMLADAVu8
MVE_VMINVu8
MVE_VMAXVu8
VPMAXu8
MVE_VMAXu8
MVE_VMOV_from_lane_u8
MVE_VMLA_qr_u8
MVE_VHSUB_qr_u8
MVE_VQSUB_qr_u8
MVE_VHADD_qr_u8
MVE_VQADD_qr_u8
MVE_VMLAS_qr_u8
MVE_VMLADAVau8
MVE_VQSHL_by_vecu8
MVE_VQRSHL_by_vecu8
MVE_VRSHL_by_vecu8
MVE_VSHL_by_vecu8
MVE_VQSHLimmu8
MVE_VRSHR_immu8
MVE_VSHR_immu8
MVE_VQSHL_qru8
MVE_VQRSHL_qru8
MVE_VRSHL_qru8
MVE_VSHL_qru8
CDE_CX1A
MVE_VRINTf32A
CDE_CX2A
CDE_CX3A
MVE_VRINTf16A
CDE_CX1DA
CDE_CX2DA
CDE_CX3DA
RFEDA
t2LDA
sysLDMDA
sysSTMDA
SRSDA
VLDMDIA
VSTMDIA
t2RFEIA
t2LDMIA
sysLDMIA
tLDMIA
t2STMIA
sysSTMIA
VLDMQIA
VSTMQIA
VLDMSIA
VSTMSIA
t2SRSIA
FLDMXIA
FSTMXIA
t2MLA
t2SMMLA
VUSMMLA
VSMMLA
VUMMLA
VMMLA
G_FMA
G_STRICT_FMA
t2TTA
t2CRC32B
t2LDAB
t2SXTAB
t2UXTAB
t2SMLABB
t2SMLALBB
t2SMULBB
t2TBB
JUMPTABLE_TBB
t2SpeculationBarrierISBDSBEndBB
t2SpeculationBarrierSBEndBB
t2CRC32CB
t2RFEDB
t2LDMDB
sysLDMDB
t2STMDB
sysSTMDB
t2SRSDB
RFEIB
sysLDMIB
sysSTMIB
SRSIB
t2STLB
t2DMB
SWPB
PICLDRB
PICSTRB
t2SB
t2DSB
t2ISB
PICLDRSB
tLDRSB
tRSB
t2TSB
t2SMLATB
t2PKHTB
t2SMLALTB
t2SMULTB
BF16_VCVTB
t2SXTB
tSXTB
t2UXTB
tUXTB
t2QDSUB
G_FSUB
G_STRICT_FSUB
G_ATOMICRMW_FSUB
t2QSUB
G_SUB
G_ATOMICRMW_SUB
t2SMLAWB
t2SMULWB
t2LDAEXB
t2STLEXB
t2LDREXB
t2STREXB
SHA1C
MVE_VSBC
tSBC
MVE_VADC
tADC
t2BFC
MVE_VBIC
tBIC
G_INTRINSIC
MVE_VSHLC
AESIMC
t2SMC
AESMC
t2CSINC
G_FPTRUNC
G_INTRINSIC_TRUNC
G_TRUNC
G_BUILD_VECTOR_TRUNC
G_DYN_STACKALLOC
VMSR_FPSCR_NZCVQC
VMRS_FPSCR_NZCVQC
t2MRC
t2MRRC
MOVr_TC
t2HVC
tSVC
VMSR_FPEXC
VMRS_FPEXC
CDE_CX1D
CDE_CX2D
CDE_CX3D
VNMLAD
t2SMLAD
VMLAD
VFMAD
G_FMAD
VFNMAD
G_INDEXED_SEXTLOAD
G_SEXTLOAD
G_INDEXED_ZEXTLOAD
G_ZEXTLOAD
G_INDEXED_LOAD
G_LOAD
VRINTAD
t2SMUAD
VSUBD
tPICADD
t2QDADD
G_VECREDUCE_FADD
G_FADD
G_VECREDUCE_SEQ_FADD
G_STRICT_FADD
G_ATOMICRMW_FADD
t2QADD
G_VECREDUCE_ADD
G_ADD
G_PTR_ADD
G_ATOMICRMW_ADD
VADDD
VSELGED
VCMPED
VNEGD
VCVTBHD
VTOSHD
VCVTTHD
VTOUHD
VMSR_FPSID
VMRS_FPSID
t2SMLALD
VFMALD
t2SMLSLD
VFMSLD
VTOSLD
VNMULD
VMULD
VTOULD
VFP_VMINNMD
VFP_VMAXNMD
VSCCLRMD
VRINTMD
G_ATOMICRMW_NAND
MVE_VAND
G_VECREDUCE_AND
G_AND
G_ATOMICRMW_AND
tAND
tSETEND
LIFETIME_END
tBRIND
G_BRCOND
VRINTND
G_INTRINSIC_ROUND
tTAILJMPdND
VSHTOD
VUHTOD
VSITOD
VUITOD
VSLTOD
VULTOD
VCMPD
VRINTPD
VLD3d32_UPD
VST3d32_UPD
VLD4d32_UPD
VST4d32_UPD
VLD1LNd32_UPD
VST1LNd32_UPD
VLD2LNd32_UPD
VST2LNd32_UPD
VLD3LNd32_UPD
VST3LNd32_UPD
VLD4LNd32_UPD
VST4LNd32_UPD
VLD3DUPd32_UPD
VLD4DUPd32_UPD
VLD3q32_UPD
VST3q32_UPD
VLD4q32_UPD
VST4q32_UPD
VLD2LNq32_UPD
VST2LNq32_UPD
VLD3LNq32_UPD
VST3LNq32_UPD
VLD4LNq32_UPD
VST4LNq32_UPD
VLD3DUPq32_UPD
VLD4DUPq32_UPD
VLD3d16_UPD
VST3d16_UPD
VLD4d16_UPD
VST4d16_UPD
VLD1LNd16_UPD
VST1LNd16_UPD
VLD2LNd16_UPD
VST2LNd16_UPD
VLD3LNd16_UPD
VST3LNd16_UPD
VLD4LNd16_UPD
VST4LNd16_UPD
VLD3DUPd16_UPD
VLD4DUPd16_UPD
VLD3q16_UPD
VST3q16_UPD
VLD4q16_UPD
VST4q16_UPD
VLD2LNq16_UPD
VST2LNq16_UPD
VLD3LNq16_UPD
VST3LNq16_UPD
VLD4LNq16_UPD
VST4LNq16_UPD
VLD3DUPq16_UPD
VLD4DUPq16_UPD
VLD3d8_UPD
VST3d8_UPD
VLD4d8_UPD
VST4d8_UPD
VLD1LNd8_UPD
VST1LNd8_UPD
VLD2LNd8_UPD
VST2LNd8_UPD
VLD3LNd8_UPD
VST3LNd8_UPD
VLD4LNd8_UPD
VST4LNd8_UPD
VLD3DUPd8_UPD
VLD4DUPd8_UPD
VLD3q8_UPD
VST3q8_UPD
VLD4q8_UPD
VST4q8_UPD
VLD3DUPq8_UPD
VLD4DUPq8_UPD
RFEDA_UPD
sysLDMDA_UPD
sysSTMDA_UPD
SRSDA_UPD
VLDMDIA_UPD
VSTMDIA_UPD
RFEIA_UPD
t2LDMIA_UPD
sysLDMIA_UPD
tLDMIA_UPD
t2STMIA_UPD
sysSTMIA_UPD
tSTMIA_UPD
VLDMSIA_UPD
VSTMSIA_UPD
t2SRSIA_UPD
FLDMXIA_UPD
FSTMXIA_UPD
VLDMDDB_UPD
VSTMDDB_UPD
RFEDB_UPD
t2LDMDB_UPD
sysLDMDB_UPD
t2STMDB_UPD
sysSTMDB_UPD
VLDMSDB_UPD
VSTMSDB_UPD
t2SRSDB_UPD
FLDMXDB_UPD
FSTMXDB_UPD
RFEIB_UPD
sysLDMIB_UPD
sysSTMIB_UPD
SRSIB_UPD
VLD3d32Pseudo_UPD
VST3d32Pseudo_UPD
VLD4d32Pseudo_UPD
VST4d32Pseudo_UPD
VLD2LNd32Pseudo_UPD
VST2LNd32Pseudo_UPD
VLD3LNd32Pseudo_UPD
VST3LNd32Pseudo_UPD
VLD4LNd32Pseudo_UPD
VST4LNd32Pseudo_UPD
VLD3DUPd32Pseudo_UPD
VLD4DUPd32Pseudo_UPD
VLD3q32Pseudo_UPD
VST3q32Pseudo_UPD
VLD4q32Pseudo_UPD
VST4q32Pseudo_UPD
VLD1LNq32Pseudo_UPD
VST1LNq32Pseudo_UPD
VLD2LNq32Pseudo_UPD
VST2LNq32Pseudo_UPD
VLD3LNq32Pseudo_UPD
VST3LNq32Pseudo_UPD
VLD4LNq32Pseudo_UPD
VST4LNq32Pseudo_UPD
VLD3d16Pseudo_UPD
VST3d16Pseudo_UPD
VLD4d16Pseudo_UPD
VST4d16Pseudo_UPD
VLD2LNd16Pseudo_UPD
VST2LNd16Pseudo_UPD
VLD3LNd16Pseudo_UPD
VST3LNd16Pseudo_UPD
VLD4LNd16Pseudo_UPD
VST4LNd16Pseudo_UPD
VLD3DUPd16Pseudo_UPD
VLD4DUPd16Pseudo_UPD
VLD3q16Pseudo_UPD
VST3q16Pseudo_UPD
VLD4q16Pseudo_UPD
VST4q16Pseudo_UPD
VLD1LNq16Pseudo_UPD
VST1LNq16Pseudo_UPD
VLD2LNq16Pseudo_UPD
VST2LNq16Pseudo_UPD
VLD3LNq16Pseudo_UPD
VST3LNq16Pseudo_UPD
VLD4LNq16Pseudo_UPD
VST4LNq16Pseudo_UPD
VLD3d8Pseudo_UPD
VST3d8Pseudo_UPD
VLD4d8Pseudo_UPD
VST4d8Pseudo_UPD
VLD2LNd8Pseudo_UPD
VST2LNd8Pseudo_UPD
VLD3LNd8Pseudo_UPD
VST3LNd8Pseudo_UPD
VLD4LNd8Pseudo_UPD
VST4LNd8Pseudo_UPD
VLD3DUPd8Pseudo_UPD
VLD4DUPd8Pseudo_UPD
VLD3q8Pseudo_UPD
VST3q8Pseudo_UPD
VLD4q8Pseudo_UPD
VST4q8Pseudo_UPD
VLD1LNq8Pseudo_UPD
VST1LNq8Pseudo_UPD
VLD1q32LowQPseudo_UPD
VST1q32LowQPseudo_UPD
VLD1q64LowQPseudo_UPD
VST1q64LowQPseudo_UPD
VLD1q16LowQPseudo_UPD
VST1q16LowQPseudo_UPD
VLD1q8LowQPseudo_UPD
VST1q8LowQPseudo_UPD
VLD1q32LowTPseudo_UPD
VST1q32LowTPseudo_UPD
VLD1q64LowTPseudo_UPD
VST1q64LowTPseudo_UPD
VLD1q16LowTPseudo_UPD
VST1q16LowTPseudo_UPD
VLD1q8LowTPseudo_UPD
VST1q8LowTPseudo_UPD
VLD3q32oddPseudo_UPD
VST3q32oddPseudo_UPD
VLD4q32oddPseudo_UPD
VST4q32oddPseudo_UPD
VLD3q16oddPseudo_UPD
VST3q16oddPseudo_UPD
VLD4q16oddPseudo_UPD
VST4q16oddPseudo_UPD
VLD3q8oddPseudo_UPD
VST3q8oddPseudo_UPD
VLD4q8oddPseudo_UPD
VST4q8oddPseudo_UPD
VSELEQD
LOAD_STACK_GUARD
VLDRD
VTOSIRD
VTOUIRD
VMOVRRD
VRINTRD
VSTRD
VCVTASD
VABSD
AESD
VNMLSD
t2SMLSD
VMLSD
VFMSD
VFNMSD
VCVTMSD
VCVTNSD
VCVTPSD
VCVTSD
t2SMUSD
VSELVSD
VSELGTD
VUSDOTD
VSDOTD
VUDOTD
BF16VDOTI_VDOTD
BF16VDOTS_VDOTD
VSQRTD
FCONSTD
VCVTAUD
VCVTMUD
VCVTNUD
VCVTPUD
VDIVD
VMOVD
t2LDAEXD
t2STLEXD
t2LDREXD
t2STREXD
VRINTXD
VCMPEZD
VTOSIZD
VTOUIZD
VCMPZD
VRINTZD
PSEUDO_PROBE
G_SSUBE
G_USUBE
SPACE
G_FENCE
REG_SEQUENCE
G_SADDE
G_UADDE
G_FMINNUM_IEEE
G_FMAXNUM_IEEE
t2LE
G_JUMP_TABLE
BUNDLE
LOCAL_ESCAPE
G_INDEXED_STORE
G_STORE
t2LDC2_PRE
t2STC2_PRE
t2LDRB_PRE
t2STRB_PRE
t2LDRSB_PRE
t2LDC_PRE
t2STC_PRE
t2LDRD_PRE
t2STRD_PRE
t2LDRH_PRE
t2STRH_PRE
t2LDRSH_PRE
t2LDC2L_PRE
t2STC2L_PRE
t2LDCL_PRE
t2STCL_PRE
t2LDR_PRE
t2STR_PRE
AESE
G_BITREVERSE
DBG_VALUE
G_GLOBAL_VALUE
G_PTRAUTH_GLOBAL_VALUE
G_MEMMOVE
G_FREEZE
G_FCANONICALIZE
t2UDF
tUDF
G_CTLZ_ZERO_UNDEF
G_CTTZ_ZERO_UNDEF
G_IMPLICIT_DEF
DBG_INSTR_REF
t2DBG
G_FNEG
t2CSNEG
EXTRACT_SUBREG
INSERT_SUBREG
G_SEXT_INREG
LDRB_PRE_REG
STRB_PRE_REG
LDR_PRE_REG
STR_PRE_REG
SUBREG_TO_REG
LDRB_POST_REG
STRB_POST_REG
LDR_POST_REG
STR_POST_REG
LDRBT_POST_REG
STRBT_POST_REG
LDRT_POST_REG
STRT_POST_REG
G_ATOMIC_CMPXCHG
G_ATOMICRMW_XCHG
G_FLOG
G_VAARG
PREALLOCATED_ARG
t2SG
SHA1H
t2CRC32H
SHA256H
t2LDAH
VNMLAH
VMLAH
VFMAH
VFNMAH
VRINTAH
t2SXTAH
t2UXTAH
t2TBH
JUMPTABLE_TBH
VSUBH
t2CRC32CH
VCVTBDH
VADDH
VCVTTDH
VSELGEH
VCMPEH
VNEGH
VTOSHH
VTOUHH
VTOSLH
t2STLH
VNMULH
G_SMULH
G_UMULH
VMULH
VTOULH
VFP_VMINNMH
VFP_VMAXNMH
VRINTMH
VRINTNH
VSHTOH
VUHTOH
VSITOH
VUITOH
VSLTOH
VULTOH
VCMPH
VRINTPH
VSELEQH
PICLDRH
VLDRH
VTOSIRH
VTOUIRH
VRINTRH
PICSTRH
VSTRH
VMOVRH
VCVTASH
VABSH
VCVTBSH
VNMLSH
VMLSH
VFMSH
VFNMSH
VCVTMSH
VINSH
VCVTNSH
VCVTPSH
PICLDRSH
tLDRSH
VCVTTSH
tPUSH
t2REVSH
tREVSH
VSELVSH
VSELGTH
VSQRTH
FCONSTH
t2SXTH
tSXTH
t2UXTH
tUXTH
VCVTAUH
VCVTMUH
VCVTNUH
VCVTPUH
VDIVH
VMOVH
t2LDAEXH
t2STLEXH
t2LDREXH
t2STREXH
VRINTXH
VCMPEZH
VTOSIZH
VTOUIZH
VCMPZH
VRINTZH
MVE_VSBCI
MVE_VADCI
VFMALDI
VFMSLDI
VUSDOTDI
VSDOTDI
VSUDOTDI
VUDOTDI
t2BFI
G_PHI
VBF16MALBQI
VFMALQI
VFMSLQI
VBF16MALTQI
VUSDOTQI
VSDOTQI
VSUDOTQI
VUDOTQI
G_FPTOSI
G_FPTOUI
G_FPOWI
t2BXJ
WIN__DBZCHK
G_PTRMASK
WIN__CHKSTK
t2UMAAL
t2SMLAL
t2UMLAL
GC_LABEL
DBG_LABEL
EH_LABEL
ANNOTATION_LABEL
ICALL_BRANCH_FUNNEL
t2SEL
t2CSEL
MVE_VPSEL
G_FSHL
MVE_SQSHL
MVE_UQSHL
MVE_UQRSHL
G_SHL
G_FCEIL
BMOVPCB_CALL
PATCHABLE_TAIL_CALL
tBLXNS_CALL
PATCHABLE_TYPED_EVENT_CALL
PATCHABLE_EVENT_CALL
tBX_CALL
BMOVPCRX_CALL
FENTRY_CALL
MVE_SQSHLL
MVE_UQSHLL
MVE_UQRSHLL
KILL
t2SMULL
t2UMULL
MVE_SQRSHRL
MVE_SRSHRL
MVE_URSHRL
MVE_LSRL
t2STL
t2MUL
G_VECREDUCE_FMUL
G_FMUL
G_VECREDUCE_SEQ_FMUL
G_STRICT_FMUL
t2SMMUL
G_VECREDUCE_MUL
G_MUL
tMUL
SHA1M
MVE_VRINTf32M
MVE_VRINTf16M
VLLDM
G_FREM
G_STRICT_FREM
G_SREM
G_UREM
LDRB_PRE_IMM
STRB_PRE_IMM
LDR_PRE_IMM
STR_PRE_IMM
LDRB_POST_IMM
STRB_POST_IMM
LDR_POST_IMM
STR_POST_IMM
LDRBT_POST_IMM
STRBT_POST_IMM
LDRT_POST_IMM
STRT_POST_IMM
t2CLRM
INLINEASM
VLSTM
G_FMINIMUM
G_FMAXIMUM
G_FMINNUM
G_FMAXNUM
t2MSR_M
t2MRS_M
MVE_VRINTf32N
MVE_VRINTf16N
t2SETPAN
G_INTRINSIC_ROUNDEVEN
G_FCOPYSIGN
G_VECREDUCE_FMIN
G_VECREDUCE_SMIN
G_SMIN
G_VECREDUCE_UMIN
G_UMIN
G_ATOMICRMW_UMIN
G_ATOMICRMW_MIN
G_FSIN
CFI_INSTRUCTION
t2LDC2_OPTION
t2STC2_OPTION
t2LDC_OPTION
t2STC_OPTION
t2LDC2L_OPTION
t2STC2L_OPTION
t2LDCL_OPTION
t2STCL_OPTION
MVE_VORN
MVE_VMVN
tMVN
tADJCALLSTACKDOWN
G_SSUBO
G_USUBO
G_SADDO
G_UADDO
G_SMULO
G_UMULO
SHA1P
MVE_VRINTf32P
MVE_VRINTf16P
STACKMAP
tTRAP
G_BSWAP
t2CDP
G_SITOFP
G_UITOFP
G_FCMP
G_ICMP
VNOP
G_CTPOP
tPOP
PATCHABLE_OP
FAULTING_OP
tADDrSP
MVE_LCTP
MVE_LETP
t2DoLoopStartTP
tADJCALLSTACKUP
PREALLOCATED_SETUP
G_FEXP
VLD1d32Q
VST1d32Q
VLD1d64Q
VST1d64Q
VLD1d16Q
VST1d16Q
VLD1d8Q
VST1d8Q
VBF16MALBQ
VFMALQ
VFMSLQ
VBF16MALTQ
VUSDOTQ
VSDOTQ
VUDOTQ
BF16VDOTI_VDOTQ
BF16VDOTS_VDOTQ
t2SMMLAR
t2MSR_AR
t2MRS_AR
t2MRSsys_AR
G_BR
INLINEASM_BR
t2MCR
t2ADR
tADR
G_BLOCK_ADDR
PICLDR
PATCHABLE_FUNCTION_ENTER
G_READCYCLECOUNTER
G_READ_REGISTER
G_WRITE_REGISTER
G_ASHR
G_FSHR
G_LSHR
MVE_SQRSHR
MVE_SRSHR
MVE_URSHR
VMOVHR
MOVPCLR
tBL_PUSHLR
t2SMMULR
t2SUBS_PC_LR
MVE_VEOR
tEOR
G_FFLOOR
tROR
G_BUILD_VECTOR
G_SHUFFLE_VECTOR
G_VECREDUCE_XOR
G_XOR
G_ATOMICRMW_XOR
G_VECREDUCE_OR
G_OR
G_ATOMICRMW_OR
VMSR_VPR
VMRS_VPR
t2MCRR
VMOVDRR
MVE_VORR
tORR
VMOVSRR
t2SMMLSR
VMSR
VMOVSR
G_INTTOPTR
PICSTR
VNMLAS
VMLAS
VFMAS
VFNMAS
VRINTAS
t2ABS
G_FABS
G_ABS
tRSBS
VSUBS
tSBCS
tADCS
VADDS
VCVTDS
VSELGES
VCMPES
G_UNMERGE_VALUES
G_MERGE_VALUES
VNEGS
VCVTBHS
VTOSHS
VCVTTHS
VTOUHS
t2DLS
t2MLS
t2SMMLS
VTOSLS
VNMULS
VMULS
VTOULS
t2WLS
VFP_VMINNMS
VFP_VMAXNMS
VSCCLRMS
VRINTMS
VRINTNS
VMSR_FPCXTNS
VMRS_FPCXTNS
tBXNS
G_FCOS
VSHTOS
VUHTOS
VSITOS
VUITOS
VSLTOS
VULTOS
tCPS
VCMPS
VRINTPS
VSELEQS
JUMPTABLE_ADDRS
VLDRS
VTOSIRS
VTOUIRS
VMRS
G_CONCAT_VECTORS
VMOVRRS
VRINTRS
VSTRS
VMOVRS
COPY_TO_REGCLASS
VCVTASS
VABSS
G_ATOMIC_CMPXCHG_WITH_SUCCESS
VNMLSS
VMLSS
VFMSS
VFNMSS
VCVTMSS
VCVTNSS
VCVTPSS
VSELVSS
G_INTRINSIC_W_SIDE_EFFECTS
VSELGTS
VSQRTS
JUMPTABLE_INSTS
FCONSTS
VMSR_FPCXTS
VMRS_FPCXTS
VCVTAUS
VCVTMUS
VCVTNUS
VCVTPUS
VDIVS
VMOVS
VRINTXS
VCMPEZS
VTOSIZS
VTOUIZS
VCMPZS
VRINTZS
VLD1d32T
VST1d32T
VLD1d64T
VST1d64T
VLD1d16T
VST1d16T
VLD1d8T
VST1d8T
G_SSUBSAT
G_USUBSAT
G_SADDSAT
G_UADDSAT
G_SSHLSAT
G_USHLSAT
t2SSAT
t2USAT
G_SMULFIXSAT
G_UMULFIXSAT
G_SDIVFIXSAT
G_UDIVFIXSAT
FMSTAT
t2TTAT
t2SMLABT
t2PKHBT
t2SMLALBT
t2SMULBT
t2LDRBT
t2STRBT
t2LDRSBT
G_EXTRACT
G_SELECT
G_BRINDIRECT
ERET
t2LDMIA_RET
PATCHABLE_RET
tPOP_RET
tBXNS_RET
tBX_RET
t2LDC2_OFFSET
t2STC2_OFFSET
t2LDC_OFFSET
t2STC_OFFSET
t2LDC2L_OFFSET
t2STC2L_OFFSET
t2LDCL_OFFSET
t2STCL_OFFSET
G_MEMSET
t2LDRHT
t2STRHT
t2LDRSHT
t2IT
t2RBIT
PATCHABLE_FUNCTION_EXIT
G_BRJT
t2TBB_JT
tTBB_JT
t2TBH_JT
tTBH_JT
t2BR_JT
t2LEApcrelJT
tLEApcrelJT
G_EXTRACT_VECTOR_ELT
G_INSERT_VECTOR_ELT
tHLT
G_FCONSTANT
G_CONSTANT
t2HINT
tHINT
STATEPOINT
PATCHPOINT
G_PTRTOINT
G_FRINT
G_INTRINSIC_LRINT
G_FNEARBYINT
MVE_VPNOT
tBKPT
G_VASTART
LIFETIME_START
t2LDRT
G_INSERT
G_FSQRT
G_STRICT_FSQRT
t2STRT
G_BITCAST
G_ADDRSPACE_CAST
VMSR_FPINST
VMRS_FPINST
t2LDC2_POST
t2STC2_POST
t2LDRB_POST
t2STRB_POST
t2LDRSB_POST
t2LDC_POST
t2STC_POST
t2LDRD_POST
t2STRD_POST
t2LDRH_POST
t2STRH_POST
t2LDRSH_POST
t2LDC2L_POST
t2STC2L_POST
t2LDCL_POST
t2STCL_POST
t2LDR_POST
t2STR_POST
LDRBT_POST
STRBT_POST
LDRT_POST
STRT_POST
MVE_VPST
tTST
t2TT
t2SMLATT
t2SMLALTT
t2SMULTT
t2TTT
BF16_VCVTT
VJCVT
BF16_VCVT
t2SMLAWT
t2SMULWT
G_FPEXT
G_SEXT
G_ANYEXT
G_ZEXT
t2REV
tREV
G_FDIV
G_STRICT_FDIV
t2SDIV
G_SDIV
t2UDIV
G_UDIV
t2CSINV
t2CRC32W
t2RFEIAW
t2RFEDBW
t2CRC32CW
G_FPOW
MVE_VRINTf32X
MVE_VRINTf16X
G_VECREDUCE_FMAX
G_VECREDUCE_SMAX
G_SMAX
G_VECREDUCE_UMAX
G_UMAX
G_ATOMICRMW_UMAX
G_ATOMICRMW_MAX
t2SHSAX
t2UHSAX
t2QSAX
t2UQSAX
t2SSAX
t2USAX
t2SMLADX
t2SMUADX
t2SMLALDX
t2SMLSLDX
t2SMLSDX
t2SMUSDX
t2LDAEX
G_FRAME_INDEX
t2STLEX
t2LDREX
t2CLREX
t2STREX
t2SBFX
t2UBFX
G_SMULFIX
G_UMULFIX
G_SDIVFIX
G_UDIVFIX
MOVPCRX
t2RRX
t2SHASX
t2UHASX
t2QASX
t2UQASX
t2SASX
t2UASX
G_MEMCPY
COPY
CONSTPOOL_ENTRY
MVE_VRINTf32Z
MVE_VRINTf16Z
tCBZ
t2CLZ
G_CTLZ
tCBNZ
G_CTTZ
MVE_VCVTs32f32a
MVE_VCVTu32f32a
MVE_VCVTs16f16a
MVE_VCVTu16f16a
MVE_VLD20_32_wb
MVE_VST20_32_wb
MVE_VLD40_32_wb
MVE_VST40_32_wb
MVE_VLD21_32_wb
MVE_VST21_32_wb
MVE_VLD41_32_wb
MVE_VST41_32_wb
MVE_VLD42_32_wb
MVE_VST42_32_wb
MVE_VLD43_32_wb
MVE_VST43_32_wb
MVE_VLD20_16_wb
MVE_VST20_16_wb
MVE_VLD40_16_wb
MVE_VST40_16_wb
MVE_VLD21_16_wb
MVE_VST21_16_wb
MVE_VLD41_16_wb
MVE_VST41_16_wb
MVE_VLD42_16_wb
MVE_VST42_16_wb
MVE_VLD43_16_wb
MVE_VST43_16_wb
MVE_VLD20_8_wb
MVE_VST20_8_wb
MVE_VLD40_8_wb
MVE_VST40_8_wb
MVE_VLD21_8_wb
MVE_VST21_8_wb
MVE_VLD41_8_wb
MVE_VST41_8_wb
MVE_VLD42_8_wb
MVE_VST42_8_wb
MVE_VLD43_8_wb
MVE_VST43_8_wb
t2Bcc
tBcc
VMOVDcc
VMOVHcc
VMOVScc
MVE_VADDVs32acc
MVE_VADDLVs32acc
MVE_VADDVu32acc
MVE_VADDLVu32acc
MVE_VADDVs16acc
MVE_VADDVu16acc
MVE_VADDVs8acc
MVE_VADDVu8acc
MVE_VADDVs32no_acc
MVE_VADDLVs32no_acc
MVE_VADDVu32no_acc
MVE_VADDLVu32no_acc
MVE_VADDVs16no_acc
MVE_VADDVu16no_acc
MVE_VADDVs8no_acc
MVE_VADDVu8no_acc
t2LoopEndDec
t2LoopDec
CDE_VCX1_vec
CDE_VCX2_vec
CDE_VCX3_vec
CDE_VCX1A_vec
CDE_VCX2A_vec
CDE_VCX3A_vec
t2BFic
t2LDRpci_pic
tLDRpci_pic
VDUPLN32d
VDUP32d
VNEGs32d
VDUPLN16d
VDUP16d
VNEGs16d
VDUPLN8d
VDUP8d
VNEGs8d
VBICd
VANDd
VRECPEd
VRSQRTEd
VBIFd
VBSLd
VORNd
VMVNd
tTAILJMPd
VBSPd
VSWPd
VEORd
VORRd
VBITd
VCNTd
BR_JTadd
t2MSRbanked
t2MRSbanked
BL_pred
BX_pred
BLX_pred
VCMLAv2f32_indexed
VCMLAv4f32_indexed
VCMLAv4f16_indexed
VCMLAv8f16_indexed
VLD2q32PseudoWB_fixed
VST2q32PseudoWB_fixed
VLD2q16PseudoWB_fixed
VST2q16PseudoWB_fixed
VLD2q8PseudoWB_fixed
VST2q8PseudoWB_fixed
VLD1d64QPseudoWB_fixed
VST1d64QPseudoWB_fixed
VLD1d64TPseudoWB_fixed
VST1d64TPseudoWB_fixed
VLD2b32wb_fixed
VST2b32wb_fixed
VLD1d32wb_fixed
VST1d32wb_fixed
VLD2d32wb_fixed
VST2d32wb_fixed
VLD1DUPd32wb_fixed
VLD2DUPd32wb_fixed
VLD1q32wb_fixed
VST1q32wb_fixed
VLD2q32wb_fixed
VST2q32wb_fixed
VLD1DUPq32wb_fixed
VLD2DUPd32x2wb_fixed
VLD2DUPd16x2wb_fixed
VLD2DUPd8x2wb_fixed
VLD1d64wb_fixed
VST1d64wb_fixed
VLD1q64wb_fixed
VST1q64wb_fixed
VLD2b16wb_fixed
VST2b16wb_fixed
VLD1d16wb_fixed
VST1d16wb_fixed
VLD2d16wb_fixed
VST2d16wb_fixed
VLD1DUPd16wb_fixed
VLD2DUPd16wb_fixed
VLD1q16wb_fixed
VST1q16wb_fixed
VLD2q16wb_fixed
VST2q16wb_fixed
VLD1DUPq16wb_fixed
VLD2b8wb_fixed
VST2b8wb_fixed
VLD1d8wb_fixed
VST1d8wb_fixed
VLD2d8wb_fixed
VST2d8wb_fixed
VLD1DUPd8wb_fixed
VLD2DUPd8wb_fixed
VLD1q8wb_fixed
VST1q8wb_fixed
VLD2q8wb_fixed
VST2q8wb_fixed
VLD1DUPq8wb_fixed
VLD1d32Qwb_fixed
VST1d32Qwb_fixed
VLD1d64Qwb_fixed
VST1d64Qwb_fixed
VLD1d16Qwb_fixed
VST1d16Qwb_fixed
VLD1d8Qwb_fixed
VST1d8Qwb_fixed
VLD1d32Twb_fixed
VST1d32Twb_fixed
VLD1d64Twb_fixed
VST1d64Twb_fixed
VLD1d16Twb_fixed
VST1d16Twb_fixed
VLD1d8Twb_fixed
VST1d8Twb_fixed
VCVTs2fd
VCVTxs2fd
VCVTu2fd
VCVTxu2fd
VMLAfd
VFMAfd
VSUBfd
VABDfd
VADDfd
VACGEfd
VCGEfd
VRECPEfd
VRSQRTEfd
VNEGfd
VMULfd
VMINfd
VCEQfd
VABSfd
VMLSfd
VFMSfd
VRECPSfd
VRSQRTSfd
VACGTfd
VCGTfd
VMAXfd
VMLAslfd
VMULslfd
VMLSslfd
VCVTs2hd
VCVTxs2hd
VCVTu2hd
VCVTxu2hd
VMLAhd
VFMAhd
VSUBhd
VABDhd
VADDhd
VACGEhd
VCGEhd
VRECPEhd
VRSQRTEhd
VNEGhd
VMULhd
VMINhd
VCEQhd
VABShd
VMLShd
VFMShd
VRECPShd
VRSQRTShd
VACGThd
VCGThd
VMAXhd
VMLAslhd
VMULslhd
VMLSslhd
t2LoopEnd
VMULpd
VCVTf2sd
VCVTh2sd
VCVTf2xsd
VCVTh2xsd
VCVTf2ud
VCVTh2ud
VCVTf2xud
VCVTh2xud
tADDframe
VLDR_P0_pre
VSTR_P0_pre
MVE_VSTRB32_pre
MVE_VSTRH32_pre
MVE_VLDRBS32_pre
MVE_VLDRHS32_pre
MVE_VLDRBU32_pre
MVE_VLDRHU32_pre
MVE_VLDRWU32_pre
MVE_VSTRWU32_pre
MVE_VSTRB16_pre
MVE_VLDRBS16_pre
MVE_VLDRBU16_pre
MVE_VLDRHU16_pre
MVE_VSTRHU16_pre
MVE_VLDRBU8_pre
MVE_VSTRBU8_pre
VLDR_FPSCR_NZCVQC_pre
VSTR_FPSCR_NZCVQC_pre
VLDR_FPSCR_pre
VSTR_FPSCR_pre
VLDR_VPR_pre
VSTR_VPR_pre
VLDR_FPCXTNS_pre
VSTR_FPCXTNS_pre
VLDR_FPCXTS_pre
VSTR_FPCXTS_pre
MVE_VLDRWU32_qi_pre
MVE_VSTRW32_qi_pre
MVE_VSTRD64_qi_pre
MVE_VLDRDU64_qi_pre
t2LEUpdate
VCVTh2f
VPADDf
VRINTANDf
NEON_VMINNMNDf
NEON_VMAXNMNDf
VRINTMNDf
VRINTNNDf
VRINTPNDf
VRINTXNDf
VRINTZNDf
VCVTANSDf
VCVTMNSDf
VCVTNNSDf
VCVTPNSDf
VCVTANUDf
VCVTMNUDf
VCVTNNUDf
VCVTPNUDf
VPMINf
VRINTANQf
NEON_VMINNMNQf
NEON_VMAXNMNQf
VRINTMNQf
VRINTNNQf
VRINTPNQf
VRINTXNQf
VRINTZNQf
VCVTANSQf
VCVTMNSQf
VCVTNNSQf
VCVTPNSQf
VCVTANUQf
VCVTMNUQf
VCVTNNUQf
VCVTPNUQf
VPMAXf
VLDR_P0_off
VSTR_P0_off
VLDR_FPSCR_NZCVQC_off
VSTR_FPSCR_NZCVQC_off
VLDR_FPSCR_off
VSTR_FPSCR_off
VLDR_VPR_off
VSTR_VPR_off
VLDR_FPCXTNS_off
VSTR_FPCXTNS_off
VLDR_FPCXTS_off
VSTR_FPCXTS_off
t2MOVsra_flag
t2MOVsrl_flag
tBX_RET_vararg
VCVTf2h
VPADDh
VRINTANDh
NEON_VMINNMNDh
NEON_VMAXNMNDh
VRINTMNDh
VRINTNNDh
VRINTPNDh
VRINTXNDh
VRINTZNDh
VCVTANSDh
VCVTMNSDh
VCVTNNSDh
VCVTPNSDh
VCVTANUDh
VCVTMNUDh
VCVTNNUDh
VCVTPNUDh
VPMINh
VRINTANQh
NEON_VMINNMNQh
NEON_VMAXNMNQh
VRINTMNQh
VRINTNNQh
VRINTPNQh
VRINTXNQh
VRINTZNQh
VCVTANSQh
VCVTMNSQh
VCVTNNSQh
VCVTPNSQh
VCVTANUQh
VCVTMNUQh
VCVTNNUQh
VCVTPNUQh
VPMAXh
MVE_VCVTf16f32bh
MVE_VRSHRNi32bh
MVE_VSHRNi32bh
MVE_VMOVNi32bh
MVE_VQDMULLs32bh
MVE_VQSHRUNs32bh
MVE_VQRSHRUNs32bh
MVE_VQMOVUNs32bh
MVE_VQMOVNs32bh
MVE_VQDMULL_qr_s32bh
MVE_VQMOVNu32bh
MVE_VCVTf32f16bh
MVE_VRSHRNi16bh
MVE_VSHRNi16bh
MVE_VMOVNi16bh
MVE_VQDMULLs16bh
MVE_VMOVLs16bh
MVE_VQSHRUNs16bh
MVE_VQRSHRUNs16bh
MVE_VQMOVUNs16bh
MVE_VQMOVNs16bh
MVE_VQDMULL_qr_s16bh
MVE_VSHLL_imms16bh
MVE_VSHLL_lws16bh
MVE_VMOVLu16bh
MVE_VQMOVNu16bh
MVE_VSHLL_immu16bh
MVE_VSHLL_lwu16bh
MVE_VMOVLs8bh
MVE_VSHLL_imms8bh
MVE_VSHLL_lws8bh
MVE_VMOVLu8bh
MVE_VSHLL_immu8bh
MVE_VSHLL_lwu8bh
Int_eh_sjlj_setup_dispatch
MVE_VCVTf16f32th
MVE_VRSHRNi32th
MVE_VSHRNi32th
MVE_VMOVNi32th
MVE_VQDMULLs32th
MVE_VQSHRUNs32th
MVE_VQRSHRUNs32th
MVE_VQMOVUNs32th
MVE_VQMOVNs32th
MVE_VQDMULL_qr_s32th
MVE_VQMOVNu32th
MVE_VCVTf32f16th
MVE_VRSHRNi16th
MVE_VSHRNi16th
MVE_VMOVNi16th
MVE_VQDMULLs16th
MVE_VMOVLs16th
MVE_VQSHRUNs16th
MVE_VQRSHRUNs16th
MVE_VQMOVUNs16th
MVE_VQMOVNs16th
MVE_VQDMULL_qr_s16th
MVE_VSHLL_imms16th
MVE_VSHLL_lws16th
MVE_VMOVLu16th
MVE_VQMOVNu16th
MVE_VSHLL_immu16th
MVE_VSHLL_lwu16th
MVE_VMOVLs8th
MVE_VSHLL_imms8th
MVE_VSHLL_lws8th
MVE_VMOVLu8th
MVE_VSHLL_immu8th
MVE_VSHLL_lwu8th
tLDRBi
tSTRBi
t2MVNCCi
t2MOVCCi
t2BFi
tLDRHi
tSTRHi
t2BFLi
MVE_LSLLi
MVE_ASRLi
LSLi
t2MVNi
tADDrSPi
tLDRi
RORi
ASRi
LSRi
MSRi
tSTRi
LDRSBTi
LDRHTi
STRHTi
LDRSHTi
t2MOVi
tBLXi
RRXi
t2LDRBpci
t2LDRSBpci
t2PLDpci
t2LDRHpci
t2LDRSHpci
t2PLIpci
t2LDRpci
tLDRpci
TCRETURNdi
LDRSBTii
LDRHTii
LDRSHTii
tSUBspi
tADDspi
tLDRspi
tSTRspi
MVE_VLDRWU32_qi
MVE_VSTRW32_qi
MVE_VSTRD64_qi
MVE_VLDRDU64_qi
t2RSBri
t2SUBri
t2SBCri
t2ADCri
t2BICri
RSCri
t2ADDri
t2ANDri
t2LSLri
tLSLri
t2CMNri
t2ORNri
TCRETURNri
t2CMPri
t2TEQri
t2EORri
t2RORri
t2ORRri
t2ASRri
tASRri
t2LSRri
tLSRri
t2RSBSri
t2SUBSri
t2ADDSri
tLSLSri
t2TSTri
MOVCCsi
MVNsi
t2MOVSsi
t2MOVsi
RSBrsi
SUBrsi
SBCrsi
ADCrsi
BICrsi
RSCrsi
ADDrsi
ANDrsi
CMPrsi
TEQrsi
EORrsi
ORRrsi
RSBSrsi
SUBSrsi
ADDSrsi
TSTrsi
CMNzrsi
TRAPNaCl
t2LEApcrel
tLEApcrel
t2LDRBpcrel
t2LDRSBpcrel
t2LDRHpcrel
t2LDRSHpcrel
t2LDRpcrel
t2MOVTi16_ga_pcrel
t2MOVi16_ga_pcrel
tLDRLIT_ga_pcrel
t2MOV_ga_pcrel
t2LDRConstPool
tLDRConstPool
t2MOVCClsl
MVE_VCVTs32f32m
MVE_VCVTu32f32m
MVE_VCVTs16f16m
MVE_VCVTu16f16m
t2SUBspImm
t2ADDspImm
t2MOVCCi32imm
t2MOVi32imm
ITasm
MVE_VCVTs32f32n
MVE_VCVTu32f32n
MVE_VCVTf32s32n
MVE_VCVTf32u32n
MVE_VCVTs16f16n
MVE_VCVTu16f16n
MVE_VCVTf16s16n
MVE_VCVTf16u16n
VLD3d32Pseudo
VST3d32Pseudo
VLD4d32Pseudo
VST4d32Pseudo
VLD2LNd32Pseudo
VST2LNd32Pseudo
VLD3LNd32Pseudo
VST3LNd32Pseudo
VLD4LNd32Pseudo
VST4LNd32Pseudo
VLD3DUPd32Pseudo
VLD4DUPd32Pseudo
VLD2q32Pseudo
VST2q32Pseudo
VLD1LNq32Pseudo
VST1LNq32Pseudo
VLD2LNq32Pseudo
VST2LNq32Pseudo
VLD3LNq32Pseudo
VST3LNq32Pseudo
VLD4LNq32Pseudo
VST4LNq32Pseudo
VTBL3Pseudo
VTBX3Pseudo
VTBL4Pseudo
VTBX4Pseudo
VLD3d16Pseudo
VST3d16Pseudo
VLD4d16Pseudo
VST4d16Pseudo
VLD2LNd16Pseudo
VST2LNd16Pseudo
VLD3LNd16Pseudo
VST3LNd16Pseudo
VLD4LNd16Pseudo
VST4LNd16Pseudo
VLD3DUPd16Pseudo
VLD4DUPd16Pseudo
VLD2q16Pseudo
VST2q16Pseudo
VLD1LNq16Pseudo
VST1LNq16Pseudo
VLD2LNq16Pseudo
VST2LNq16Pseudo
VLD3LNq16Pseudo
VST3LNq16Pseudo
VLD4LNq16Pseudo
VST4LNq16Pseudo
VLD3d8Pseudo
VST3d8Pseudo
VLD4d8Pseudo
VST4d8Pseudo
VLD2LNd8Pseudo
VST2LNd8Pseudo
VLD3LNd8Pseudo
VST3LNd8Pseudo
VLD4LNd8Pseudo
VST4LNd8Pseudo
VLD3DUPd8Pseudo
VLD4DUPd8Pseudo
VLD2q8Pseudo
VST2q8Pseudo
VLD1LNq8Pseudo
VST1LNq8Pseudo
VLD1d32QPseudo
VST1d32QPseudo
VLD1d64QPseudo
VST1d64QPseudo
VLD1d16QPseudo
VST1d16QPseudo
VLD1d8QPseudo
VST1d8QPseudo
VLD1q32HighQPseudo
VST1q32HighQPseudo
VLD1q64HighQPseudo
VST1q64HighQPseudo
VLD1q16HighQPseudo
VST1q16HighQPseudo
VLD1q8HighQPseudo
VST1q8HighQPseudo
VLD1d32TPseudo
VST1d32TPseudo
VLD1d64TPseudo
VST1d64TPseudo
VLD1d16TPseudo
VST1d16TPseudo
VLD1d8TPseudo
VST1d8TPseudo
VLD1q32HighTPseudo
VST1q32HighTPseudo
VLD1q64HighTPseudo
VST1q64HighTPseudo
VLD1q16HighTPseudo
VST1q16HighTPseudo
VLD1q8HighTPseudo
VST1q8HighTPseudo
VLD2DUPq32OddPseudo
VLD3DUPq32OddPseudo
VLD4DUPq32OddPseudo
VLD2DUPq16OddPseudo
VLD3DUPq16OddPseudo
VLD4DUPq16OddPseudo
VLD2DUPq8OddPseudo
VLD3DUPq8OddPseudo
VLD4DUPq8OddPseudo
VLD3q32oddPseudo
VST3q32oddPseudo
VLD4q32oddPseudo
VST4q32oddPseudo
VLD3q16oddPseudo
VST3q16oddPseudo
VLD4q16oddPseudo
VST4q16oddPseudo
VLD3q8oddPseudo
VST3q8oddPseudo
VLD4q8oddPseudo
VST4q8oddPseudo
t2BF_LabelPseudo
VLD2DUPq32EvenPseudo
VLD3DUPq32EvenPseudo
VLD4DUPq32EvenPseudo
VLD2DUPq16EvenPseudo
VLD3DUPq16EvenPseudo
VLD4DUPq16EvenPseudo
VLD2DUPq8EvenPseudo
VLD3DUPq8EvenPseudo
VLD4DUPq8EvenPseudo
tMOVCCr_pseudo
t2CPS1p
MVE_VCVTs32f32p
MVE_VCVTu32f32p
t2CPS2p
t2CPS3p
MVE_VCVTs16f16p
MVE_VCVTu16f16p
LDRcp
CDE_VCX1_fpdp
CDE_VCX2_fpdp
CDE_VCX3_fpdp
CDE_VCX1A_fpdp
CDE_VCX2A_fpdp
CDE_VCX3A_fpdp
t2Int_eh_sjlj_setjmp_nofp
BLX_noip
BLX_pred_noip
tBLXr_noip
tInt_WIN_eh_sjlj_longjmp
tInt_eh_sjlj_longjmp
t2Int_eh_sjlj_setjmp
tInt_eh_sjlj_setjmp
CDE_VCX1_fpsp
CDE_VCX2_fpsp
CDE_VCX3_fpsp
CDE_VCX1A_fpsp
CDE_VCX2A_fpsp
CDE_VCX3A_fpsp
Int_eh_sjlj_dispatchsetup
VDUPLN32q
VDUP32q
VNEGf32q
VNEGs32q
VDUPLN16q
VDUP16q
VNEGs16q
VDUPLN8q
VDUP8q
VNEGs8q
VBICq
VANDq
VRECPEq
VRSQRTEq
VBIFq
VBSLq
VORNq
VMVNq
VBSPq
VSWPq
VEORq
VORRq
VBITq
VCNTq
MVE_VMOV_rr_q
VCVTs2fq
VCVTxs2fq
VCVTu2fq
VCVTxu2fq
VMLAfq
VFMAfq
VSUBfq
VABDfq
VADDfq
VACGEfq
VCGEfq
VRECPEfq
VRSQRTEfq
VMULfq
VMINfq
VCEQfq
VABSfq
VMLSfq
VFMSfq
VRECPSfq
VRSQRTSfq
VACGTfq
VCGTfq
VMAXfq
VMLAslfq
VMULslfq
VMLSslfq
VCVTs2hq
VCVTxs2hq
VCVTu2hq
VCVTxu2hq
VMLAhq
VFMAhq
VSUBhq
VABDhq
VADDhq
VACGEhq
VCGEhq
VRECPEhq
VRSQRTEhq
VNEGhq
VMULhq
VMINhq
VCEQhq
VABShq
VMLShq
VFMShq
VRECPShq
VRSQRTShq
VACGThq
VCGThq
VMAXhq
VMLAslhq
VMULslhq
VMLSslhq
VMULpq
MVE_VSTRB32_rq
MVE_VSTRH32_rq
MVE_VLDRBS32_rq
MVE_VLDRHS32_rq
MVE_VLDRBU32_rq
MVE_VLDRHU32_rq
MVE_VLDRWU32_rq
MVE_VSTRW32_rq
MVE_VSTRD64_rq
MVE_VLDRDU64_rq
MVE_VSTRB16_rq
MVE_VSTRH16_rq
MVE_VLDRBS16_rq
MVE_VLDRBU16_rq
MVE_VLDRHU16_rq
MVE_VSTRB8_rq
MVE_VLDRBU8_rq
VCVTf2sq
VCVTh2sq
VCVTf2xsq
VCVTh2xsq
VCVTf2uq
VCVTh2uq
VCVTf2xuq
VCVTh2xuq
MVE_VPTv4f32r
MVE_VCMPf32r
MVE_VPTv4i32r
MVE_VCMPi32r
MVE_VPTv4s32r
MVE_VCMPs32r
MVE_VPTv4u32r
MVE_VCMPu32r
MVE_VPTv8f16r
MVE_VCMPf16r
MVE_VPTv8i16r
MVE_VCMPi16r
MVE_VPTv8s16r
MVE_VCMPs16r
MVE_VPTv8u16r
MVE_VCMPu16r
MVE_VPTv16i8r
MVE_VCMPi8r
MVE_VPTv16s8r
MVE_VCMPs8r
MVE_VPTv16u8r
MVE_VCMPu8r
tLDRBr
tSTRBr
t2MOVCCr
t2BFr
tLDRHr
tSTRHr
t2BFLr
MVE_LSLLr
MVE_ASRLr
LSLr
t2MVNr
tCMPr
tTAILJMPr
tLDRr
RORr
ASRr
LSRr
tSTRr
tBLXNSr
tMOVSr
LDRSBTr
LDRHTr
STRHTr
LDRSHTr
tBR_JTr
t2MOVr
tMOVr
tBLXr
tBfar
LDRLIT_ga_pcrel_ldr
MOV_ga_pcrel_ldr
CompilerBarrier
VLD2q32PseudoWB_register
VST2q32PseudoWB_register
VLD2q16PseudoWB_register
VST2q16PseudoWB_register
VLD2q8PseudoWB_register
VST2q8PseudoWB_register
VLD1d64QPseudoWB_register
VST1d64QPseudoWB_register
VLD1d64TPseudoWB_register
VST1d64TPseudoWB_register
VLD2b32wb_register
VST2b32wb_register
VLD1d32wb_register
VST1d32wb_register
VLD2d32wb_register
VST2d32wb_register
VLD1DUPd32wb_register
VLD2DUPd32wb_register
VLD1q32wb_register
VST1q32wb_register
VLD2q32wb_register
VST2q32wb_register
VLD1DUPq32wb_register
VLD2DUPd32x2wb_register
VLD2DUPd16x2wb_register
VLD2DUPd8x2wb_register
VLD1d64wb_register
VST1d64wb_register
VLD1q64wb_register
VST1q64wb_register
VLD2b16wb_register
VST2b16wb_register
VLD1d16wb_register
VST1d16wb_register
VLD2d16wb_register
VST2d16wb_register
VLD1DUPd16wb_register
VLD2DUPd16wb_register
VLD1q16wb_register
VST1q16wb_register
VLD2q16wb_register
VST2q16wb_register
VLD1DUPq16wb_register
VLD2b8wb_register
VST2b8wb_register
VLD1d8wb_register
VST1d8wb_register
VLD2d8wb_register
VST2d8wb_register
VLD1DUPd8wb_register
VLD2DUPd8wb_register
VLD1q8wb_register
VST1q8wb_register
VLD2q8wb_register
VST2q8wb_register
VLD1DUPq8wb_register
VLD1d32Qwb_register
VST1d32Qwb_register
VLD1d64Qwb_register
VST1d64Qwb_register
VLD1d16Qwb_register
VST1d16Qwb_register
VLD1d8Qwb_register
VST1d8Qwb_register
VLD1d32Twb_register
VST1d32Twb_register
VLD1d64Twb_register
VST1d64Twb_register
VLD1d16Twb_register
VST1d16Twb_register
VLD1d8Twb_register
VST1d8Twb_register
tCMPhir
t2MOVCCror
tADDspr
t2RSBrr
t2SUBrr
tSUBrr
t2SBCrr
t2ADCrr
t2BICrr
RSCrr
t2ADDrr
tADDrr
t2ANDrr
t2LSLrr
tLSLrr
t2ORNrr
t2CMPrr
t2TEQrr
t2EORrr
t2RORrr
t2ORRrr
t2ASRrr
tASRrr
t2LSRrr
tLSRrr
t2SUBSrr
tSUBSrr
t2ADDSrr
tADDSrr
t2TSTrr
MVE_VMOV_q_rr
tADDhirr
t2CMNzrr
MOVCCsr
MVNsr
t2MOVSsr
t2MOVsr
t2MOVCCasr
t2MOVCClsr
RSBrsr
SUBrsr
SBCrsr
ADCrsr
BICrsr
RSCrsr
ADDrsr
ANDrsr
CMPrsr
TEQrsr
EORrsr
ORRrsr
RSBSrsr
SUBSrsr
ADDSrsr
TSTrsr
CMNzrsr
t2LDRBs
t2STRBs
t2LDRSBs
t2PLDs
t2LDRHs
t2STRHs
t2LDRSHs
t2PLIs
t2MVNs
t2LDRs
t2STRs
t2PLDWs
tLDRLIT_ga_abs
LDRBrs
STRBrs
t2RSBrs
t2SUBrs
t2SBCrs
t2ADCrs
t2BICrs
t2ADDrs
PLDrs
t2ANDrs
PLIrs
t2ORNrs
t2CMPrs
t2TEQrs
LDRrs
t2EORrs
t2ORRrs
STRrs
t2RSBSrs
t2SUBSrs
t2ADDSrs
t2TSTrs
PLDWrs
BR_JTm_rs
t2CMNzrs
MRSsys
tTPsoft
t2WhileLoopStart
t2DoLoopStart
VLDR_P0_post
VSTR_P0_post
MVE_VSTRB32_post
MVE_VSTRH32_post
MVE_VLDRBS32_post
MVE_VLDRHS32_post
MVE_VLDRBU32_post
MVE_VLDRHU32_post
MVE_VLDRWU32_post
MVE_VSTRWU32_post
MVE_VSTRB16_post
MVE_VLDRBS16_post
MVE_VLDRBU16_post
MVE_VLDRHU16_post
MVE_VSTRHU16_post
MVE_VLDRBU8_post
MVE_VSTRBU8_post
VLDR_FPSCR_NZCVQC_post
VSTR_FPSCR_NZCVQC_post
VLDR_FPSCR_post
VSTR_FPSCR_post
VLDR_VPR_post
VSTR_VPR_post
VLDR_FPCXTNS_post
VSTR_FPCXTNS_post
VLDR_FPCXTS_post
VSTR_FPCXTS_post
MVE_VSTRH32_rq_u
MVE_VLDRHS32_rq_u
MVE_VLDRHU32_rq_u
MVE_VLDRWU32_rq_u
MVE_VSTRW32_rq_u
MVE_VSTRD64_rq_u
MVE_VLDRDU64_rq_u
MVE_VSTRH16_rq_u
MVE_VLDRHU16_rq_u
t2STRB_preidx
t2STRH_preidx
t2STR_preidx
STRBi_preidx
STRi_preidx
STRBr_preidx
STRr_preidx
tLDR_postidx
MVE_VCVTs32f32_fix
MVE_VCVTu32f32_fix
MVE_VCVTf32s32_fix
MVE_VCVTf32u32_fix
MVE_VCVTs16f16_fix
MVE_VCVTu16f16_fix
MVE_VCVTf16s16_fix
MVE_VCVTf16u16_fix
MVE_VCVTs32f32z
MVE_VCVTu32f32z
MVE_VCVTs16f16z
MVE_VCVTu16f16z
tCMNz
!'
'1
17
7A
AF
FP
PU
U\
\h
ho
o{
{~
EL32
R_AARCH64_P32_PREL16
MP26
R_AARCH64_P32_JULL26
R_AARCH64_P32_CAARCH64_JUMP_SLOTR_AARCH64_JUMP_SARCH64_IRELATIVER_AARCH64_IRELATARCH64_P32_ABS32R_AARCH64_P32_ABARCH64_P32_ABS16ARCH64_P32_PLT32R_AARCH64_P32_PLCH64_TLSDESC_LDRR_AARCH64_TLSDESCH64_TLSDESC_ADDCH64_TLS_TPREL64R_AARCH64_TLS_TPCH64_P32_TSTBR14R_AARCH64_P32_TSCH64_P32_TLSDESCR_AARCH64_P32_TLMOVW_GOTTPREL_G1R_AARCH64_TLSIE_MOVW_TPREL_G1_NCR_AARCH64_TLSLE_MOVW_TPREL_G0_NCLDST8_TPREL_LO12ST16_ABS_LO12_NCR_AARCH64_P32_LDST32_ABS_LO12_NCST64_ABS_LO12_NCSDESC_ADR_PREL21SDESC_ADR_PAGE21_ADD_DTPREL_HI12R_AARCH64_TLSLD__ADD_DTPREL_LO12DST8_ABS_LO12_NCD32_GOTPAGE_LO14LSGD_ADD_LO12_NCLSLD_ADD_LO12_NCLSDESC_LD_PREL19LSDESC_LD32_LO12D_MOVW_DTPREL_G2D_MOVW_DTPREL_G1D_MOVW_DTPREL_G0E_ADD_TPREL_HI12E_ADD_TPREL_LO12ADR_PREL_PG_HI21R_AARCH64_P32_ADLD32_GOT_LO12_NCTLSGD_ADR_PREL21TLSGD_ADR_PAGE21TLSLD_ADR_PREL21TLSLD_ADR_PAGE21TLSDESC_ADD_LO12OTOFF_G0
R_AARCH64_MOVW_GOTOFF_G1
OTOFF_G2
OTOFF_G3
C_OFF_G1
S_DTPREL
S_DTPMOD
R_AARCH64_LDST16R_AARCH64_LDST32R_AARCH64_LDST64R_AARCH64_TSTBR1R_AARCH64_LDST8_OVW_GOTOFF_G0_NCOVW_GOTOFF_G1_NCOVW_GOTOFF_G2_NCD64_GOTPAGE_LO15R_AARCH64_LD64_GR_AARCH64_TLSGD_LSDESC_LD64_LO12LSDESC_OFF_G0_NC32_ADR_PREL_LO2132_GOT_LD_PREL19R_AARCH64_P32_GOR_AARCH64_CONDBR19
R_AARCH64_GOTREL64
R_AARCH64_GLOB_DAT
R_AARCH64_RELATIR_AARCH64_P32_COPY
_PREL_PG_HI21_NCR_AARCH64_ADR_PRT128_ABS_LO12_NCR_AARCH64_LDST12LE_MOVW_TPREL_G2LE_MOVW_TPREL_G1LE_MOVW_TPREL_G0_MOVW_UABS_G0_NCR_AARCH64_P32_MO_ADD_ABS_LO12_NC_MOVW_PREL_G0_NC_TLSLD_LD_PREL19LD64_GOTOFF_LO15LD64_GOT_LO12_NCTLSGD_MOVW_G0_NCTLSLD_MOVW_G0_NCP32_MOVW_UABS_G0P32_MOVW_UABS_G1P32_MOVW_SABS_G0P32_LD_PREL_LO19P32_MOVW_PREL_G0P32_MOVW_PREL_G1P32_ADR_GOT_PAGEP32_TLSDESC_CALL64_ADR_PREL_LO2164_GOT_LD_PREL19R_AARCH64_GOT_LD64_TLSGD_MOVW_G164_TLSLD_MOVW_G164_P32_JUMP_SLOT64_P32_TLS_TPREL64_P32_IRELATIVER_AARCH64_P32_IRR_AARCH64_MOVW_U_MOVW_UABS_G1_NC_MOVW_UABS_G2_NCR_AARCH64_ADD_ABR_AARCH64_MOVW_P_MOVW_PREL_G1_NC_MOVW_PREL_G2_NCH64_MOVW_UABS_G0H64_MOVW_UABS_G1H64_MOVW_UABS_G2H64_MOVW_UABS_G3H64_MOVW_SABS_G0R_AARCH64_MOVW_SH64_MOVW_SABS_G1H64_MOVW_SABS_G2H64_LD_PREL_LO19R_AARCH64_LD_PREH64_MOVW_PREL_G0H64_MOVW_PREL_G1H64_MOVW_PREL_G2H64_MOVW_PREL_G3H64_ADR_GOT_PAGER_AARCH64_ADR_GOH64_TLSDESC_CALLH64_TLS_DTPMOD64R_AARCH64_TLS_DTH64_TLS_DTPREL64H64_P32_CONDBR19H64_P32_GLOB_DATR_AARCH64_P32_GLH64_P32_RELATIVER_AARCH64_P32_RER_AARCH64_PREL64R_AARCH64_PREL32R_AARCH64_PREL16R_AARCH64_JUMP26R_AARCH64_CALL26sha1su0
sha512su0
sha256su0
st64bv0
trn1
zip1
uzp1
dcps1
sm3ss1
sha1su1
sha512su1
sha256su1
sm3partw1
rax1
rev32
sha512h2
sha256h2
sabal2
uabal2
sqdmlal2
fmlal2
smlal2
umlal2
ssubl2
usubl2
sabdl2
uabdl2
saddl2
uaddl2
sshll2
ushll2
sqdmull2
pmull2
smull2
umull2
sqdmlsl2
fmlsl2
smlsl2
umlsl2
fcvtl2
rsubhn2
raddhn2
sqshrn2
uqshrn2
sqrshrn2
uqrshrn2
trn2
bfcvtn2
sqxtn2
uqxtn2
sqshrun2
sqrshrun2
sqxtun2
fcvtxn2
zip2
uzp2
dcps2
ssubw2
usubw2
saddw2
uaddw2
sm3partw2
eor3
dcps3
rev64
setf16
rev16
setf8
sm3tt1a
sm3tt2a
braa
ldraa
blraa
saba
uaba
pacda
ldadda
fadda
autda
pacga
pacia
autia
brka
fcmla
fmla
bfmmla
usmmla
ummla
fnmla
ldsmina
ldumina
brkpa
caspa
swpa
fexpa
ldclra
ldeora
srsra
ursra
ssra
usra
casa
ldseta
frinta
clasta
ldsmaxa
ldumaxa
pacdza
autdza
paciza
autiza
ld1b
ldff1b
ldnf1b
ldnt1b
stnt1b
st1b
sm3tt1b
crc32b
ld2b
st2b
sm3tt2b
ld3b
st3b
ld64b
st64b
ld4b
st4b
ldaddab
ldsminab
lduminab
swpab
brab
ldrab
blrab
ldclrab
ldeorab
casab
ldsetab
ldsmaxab
ldumaxab
crc32cb
sqdecb
uqdecb
sqincb
uqincb
pacdb
ldaddb
autdb
prfb
flogb
pacib
autib
brkb
sabalb
uabalb
ldaddalb
sqdmlalb
bfmlalb
smlalb
umlalb
ldsminalb
lduminalb
swpalb
ldclralb
ldeoralb
casalb
ldsetalb
ldsmaxalb
ldumaxalb
ssublb
usublb
sbclb
adclb
sabdlb
uabdlb
ldaddlb
saddlb
uaddlb
sshllb
ushllb
sqdmullb
pmullb
smullb
umullb
ldsminlb
lduminlb
swplb
ldclrlb
ldeorlb
caslb
sqdmlslb
fmlslb
smlslb
umlslb
ldsetlb
ldsmaxlb
ldumaxlb
rsubhnb
raddhnb
ldsminb
lduminb
sqshrnb
uqshrnb
sqrshrnb
uqrshrnb
sqxtnb
uqxtnb
sqshrunb
sqrshrunb
sqxtunb
ld1rob
brkpb
swpb
ld1rqb
ld1rb
ldarb
ldlarb
ldrb
ldclrb
stllrb
stlrb
ldeorb
ldaprb
ldtrb
strb
sttrb
ldurb
stlurb
ldapurb
sturb
ldaxrb
ldxrb
stlxrb
stxrb
ld1sb
ldff1sb
ldnf1sb
ldnt1sb
casb
fmsb
fnmsb
ld1rsb
ldrsb
ldtrsb
ldursb
ldapursb
ldsetb
ssubltb
cntb
eortb
clastb
sxtb
uxtb
fsub
shsub
uhsub
fmsub
fnmsub
sqsub
uqsub
revb
ssubwb
usubwb
saddwb
uaddwb
ldsmaxb
ldumaxb
pacdzb
autdzb
pacizb
autizb
sha1c
aesimc
aesmc
csinc
ld1d
ldff1d
ldnf1d
ldnt1d
stnt1d
st1d
ld2d
st2d
ld3d
st3d
ld4d
st4d
fmad
fnmad
ftmad
fabd
sabd
uabd
xpacd
sqdecd
uqdecd
sqincd
uqincd
fcadd
sqcadd
ldadd
fadd
srhadd
urhadd
shadd
uhadd
fmadd
fnmadd
usqadd
suqadd
prfd
nand
ld1rod
ld1rqd
ld1rd
asrd
aesd
cntd
sm4e
splice
facge
whilege
fcmge
cmpge
fscale
whilele
fcmle
cmple
fcmne
ctermne
cmpne
frecpe
urecpe
fccmpe
fcmpe
aese
pfalse
frsqrte
ursqrte
ptrue
rmif
scvtf
ucvtf
st2g
stz2g
subg
addg
fneg
sqneg
csneg
histseg
stzg
sha1h
ld1h
ldff1h
ldnf1h
ldnt1h
stnt1h
st1h
sha512h
crc32h
ld2h
st2h
ld3h
st3h
ld4h
st4h
sha256h
ldaddah
sqrdcmlah
sqrdmlah
ldsminah
lduminah
swpah
ldclrah
ldeorah
casah
ldsetah
ldsmaxah
ldumaxah
crc32ch
sqdech
uqdech
sqinch
uqinch
nmatch
ldaddh
prfh
ldaddalh
ldsminalh
lduminalh
swpalh
ldclralh
ldeoralh
casalh
ldsetalh
ldsmaxalh
ldumaxalh
ldaddlh
ldsminlh
lduminlh
swplh
ldclrlh
ldeorlh
caslh
ldsetlh
sqdmulh
sqrdmulh
smulh
umulh
ldsmaxlh
ldumaxlh
ldsminh
lduminh
ld1roh
swph
ld1rqh
ld1rh
ldarh
ldlarh
ldrh
ldclrh
stllrh
stlrh
ldeorh
ldaprh
ldtrh
strh
sttrh
ldurh
stlurh
ldapurh
sturh
ldaxrh
ldxrh
stlxrh
stxrh
ld1sh
ldff1sh
ldnf1sh
ldnt1sh
cash
sqrdmlsh
ld1rsh
ldrsh
ldtrsh
ldursh
ldapursh
ldseth
cnth
sxth
uxth
revh
ldsmaxh
ldumaxh
xpaci
whilehi
punpkhi
sunpkhi
uunpkhi
cmhi
cmphi
mvni
frinti
movi
movk
sabal
uabal
ldaddal
sqdmlal
fmlal
smlal
umlal
ldsminal
lduminal
caspal
swpal
ldclral
ldeoral
casal
ldsetal
ldsmaxal
ldumaxal
smsubl
umsubl
ssubl
usubl
sabdl
uabdl
ldaddl
smaddl
umaddl
saddl
uaddl
tcancel
fcsel
ftssel
sqshl
uqshl
sqrshl
uqrshl
srshl
urshl
sshl
ushl
sshll
ushll
sqdmull
pmull
smull
umull
ldsminl
lduminl
addpl
caspl
swpl
ldclrl
ldeorl
casl
nbsl
sqdmlsl
fmlsl
smlsl
umlsl
sysl
ldsetl
fcvtl
fmul
fnmul
pmul
ftsmul
addvl
rdvl
ldsmaxl
ldumaxl
sha1m
sbfm
ubfm
prfm
ldgm
stgm
stzgm
fminnm
fmaxnm
dupm
frintm
prfum
bsl1n
bsl2n
rsubhn
raddhn
fmin
ldsmin
ldumin
brkn
ccmn
sqshrn
uqshrn
sqrshrn
uqrshrn
frintn
bfcvtn
sqxtn
uqxtn
sqshrun
sqrshrun
sqxtun
movn
fcvtxn
whilelo
punpklo
sunpklo
uunpklo
cmplo
fcmuo
sha1p
subp
sqdecp
uqdecp
sqincp
uqincp
faddp
bdep
stgp
sadalp
uadalp
saddlp
uaddlp
fccmp
fcmp
fminnmp
fmaxnmp
ldnp
fminp
sminp
uminp
stnp
adrp
bgrp
casp
cntp
frintp
fdup
ldaxp
fmaxp
smaxp
umaxp
ldxp
stlxp
stxp
fcmeq
ctermeq
cmpeq
ld1r
ld2r
ld3r
ld4r
ldar
ldlar
fsubr
shsubr
uhsubr
sqsubr
uqsubr
rdffr
wrffr
srshr
urshr
sshr
ushr
ldclr
sqshlr
uqshlr
sqrshlr
uqrshlr
srshlr
urshlr
stllr
lslr
stlr
ldeor
ldapr
asrr
lsrr
insr
ldtr
sttr
extr
ldur
stlur
ldapur
stur
fdivr
sdivr
udivr
whilewr
ldaxr
ldxr
stlxr
stxr
brkas
brkpas
fcvtas
fabs
sqabs
brkbs
brkpbs
subs
sbcs
adcs
bics
adds
nands
ptrues
whilehs
cmhs
cmphs
whilels
fmls
fnmls
cmpls
fcvtms
brkns
orns
fcvtns
subps
frecps
fcvtps
rdffrs
eors
nors
orrs
frsqrts
fcvtzs
fjcvtzs
sqdmlalbt
ssublbt
saddlbt
sqdmlslbt
eorbt
compact
wfet
ldset
facgt
whilegt
fcmgt
cmpgt
rbit
wfit
sabalt
uabalt
sqdmlalt
bfmlalt
smlalt
umlalt
ssublt
usublt
sbclt
adclt
sabdlt
uabdlt
saddlt
uaddlt
whilelt
sshllt
ushllt
sqdmullt
pmullt
smullt
umullt
fcmlt
cmplt
sqdmlslt
fmlslt
smlslt
umlslt
fcvtlt
histcnt
rsubhnt
raddhnt
hint
sqshrnt
uqshrnt
sqrshrnt
uqrshrnt
bfcvtnt
sqxtnt
uqxtnt
sqshrunt
sqrshrunt
sqxtunt
fcvtxnt
cdot
bfdot
usdot
sudot
cnot
tstart
fsqrt
ptest
ttest
pfirst
cmtst
bfcvt
ssubwt
usubwt
saddwt
uaddwt
bext
pnext
fcvtau
sqshlu
fcvtmu
fcvtnu
fcvtpu
fcvtzu
st64bv
faddv
saddv
uaddv
andv
fdiv
sdiv
udiv
saddlv
uaddlv
fminnmv
fmaxnmv
fminv
sminv
uminv
csinv
fmov
smov
umov
eorv
fmaxv
smaxv
umaxv
ld1w
ldff1w
ldnf1w
ldnt1w
stnt1w
st1w
crc32w
ld2w
st2w
ld3w
st3w
ld4w
st4w
ssubw
usubw
crc32cw
sqdecw
uqdecw
sqincw
uqincw
saddw
uaddw
prfw
ld1row
ld1rqw
ld1rw
whilerw
ld1sw
ldff1sw
ldnf1sw
ldnt1sw
ldpsw
ld1rsw
ldrsw
ldtrsw
ldursw
ldapursw
cntw
sxtw
uxtw
revw
crc32x
frint32x
frint64x
bcax
fmax
ldsmax
ldumax
crc32cx
index
clrex
movprfx
fmulx
frecpx
frintx
fcvtx
sm4ekey
fcpy
frint32z
frint64z
braaz
blraaz
brabz
blrabz
cbnz
tbnz
frintz
movz
.tlsdesccall 
# XRay Function Patchable RET.
# XRay Typed Event Log.
# XRay Custom Event Log.
# XRay Function Enter.
# XRay Tail Call Exit.
# XRay Function Exit.
hint
hint
hint
hint
hint
hint
hint
hint
hint
hint
hint
hint
hint
LIFETIME_END
PSEUDO_PROBE
BUNDLE
DBG_VALUE
DBG_INSTR_REF
DBG_LABEL
LIFETIME_START
eretaa
eretab
xaflag
axflag
# FEntry call
iall
setffr
drps
eret
tcommit
cfinv
~8y ~X
 ~xY 
i8y iX
 ixY 
N;'p
"y"p
NC'p
NW'p
 p8Y zh
!w8y w8
 w8Y 
B+G
D7_D8_D9_D10
Q7_Q8_Q9_Q10
Z7_Z8_Z9_Z10
D17_D18_D19_D20
Q17_Q18_Q19_Q20
Z17_Z18_Z19_Z20
D27_D28_D29_D30
Q27_Q28_Q29_Q30
Z27_Z28_Z29_Z30
D29_D30_D31_D0
Q29_Q30_Q31_Q0
Z29_Z30_Z31_Z0
D8_D9_D10_D11
Q8_Q9_Q10_Q11
W10_W11
X4_X5_X6_X7_X8_X9_X10_X11
Z8_Z9_Z10_Z11
D18_D19_D20_D21
Q18_Q19_Q20_Q21
W20_W21
X14_X15_X16_X17_X18_X19_X20_X21
Z18_Z19_Z20_Z21
D28_D29_D30_D31
Q28_Q29_Q30_Q31
Z28_Z29_Z30_Z31
D30_D31_D0_D1
Q30_Q31_Q0_Q1
W0_W1
X0_X1
Z30_Z31_Z0_Z1
D9_D10_D11_D12
Q9_Q10_Q11_Q12
Z9_Z10_Z11_Z12
D19_D20_D21_D22
Q19_Q20_Q21_Q22
Z19_Z20_Z21_Z22
D31_D0_D1_D2
Q31_Q0_Q1_Q2
Z31_Z0_Z1_Z2
D10_D11_D12_D13
Q10_Q11_Q12_Q13
W12_W13
X6_X7_X8_X9_X10_X11_X12_X13
Z10_Z11_Z12_Z13
D20_D21_D22_D23
Q20_Q21_Q22_Q23
W22_W23
X16_X17_X18_X19_X20_X21_X22_X23
Z20_Z21_Z22_Z23
D0_D1_D2_D3
Q0_Q1_Q2_Q3
W2_W3
X2_X3
Z0_Z1_Z2_Z3
D11_D12_D13_D14
Q11_Q12_Q13_Q14
Z11_Z12_Z13_Z14
D21_D22_D23_D24
Q21_Q22_Q23_Q24
Z21_Z22_Z23_Z24
D1_D2_D3_D4
Q1_Q2_Q3_Q4
Z1_Z2_Z3_Z4
D12_D13_D14_D15
Q12_Q13_Q14_Q15
W14_W15
X8_X9_X10_X11_X12_X13_X14_X15
Z12_Z13_Z14_Z15
D22_D23_D24_D25
Q22_Q23_Q24_Q25
W24_W25
X18_X19_X20_X21_X22_X23_X24_X25
Z22_Z23_Z24_Z25
D2_D3_D4_D5
Q2_Q3_Q4_Q5
W4_W5
X4_X5
Z2_Z3_Z4_Z5
D13_D14_D15_D16
Q13_Q14_Q15_Q16
Z13_Z14_Z15_Z16
D23_D24_D25_D26
Q23_Q24_Q25_Q26
Z23_Z24_Z25_Z26
D3_D4_D5_D6
Q3_Q4_Q5_Q6
Z3_Z4_Z5_Z6
D14_D15_D16_D17
Q14_Q15_Q16_Q17
W16_W17
X10_X11_X12_X13_X14_X15_X16_X17
Z14_Z15_Z16_Z17
D24_D25_D26_D27
Q24_Q25_Q26_Q27
W26_W27
X20_X21_X22_X23_X24_X25_X26_X27
Z24_Z25_Z26_Z27
D4_D5_D6_D7
Q4_Q5_Q6_Q7
W6_W7
X0_X1_X2_X3_X4_X5_X6_X7
Z4_Z5_Z6_Z7
D15_D16_D17_D18
Q15_Q16_Q17_Q18
Z15_Z16_Z17_Z18
D25_D26_D27_D28
Q25_Q26_Q27_Q28
Z25_Z26_Z27_Z28
D5_D6_D7_D8
Q5_Q6_Q7_Q8
Z5_Z6_Z7_Z8
D16_D17_D18_D19
Q16_Q17_Q18_Q19
W18_W19
X12_X13_X14_X15_X16_X17_X18_X19
Z16_Z17_Z18_Z19
D26_D27_D28_D29
Q26_Q27_Q28_Q29
W28_W29
Z26_Z27_Z28_Z29
D6_D7_D8_D9
Q6_Q7_Q8_Q9
W8_W9
X2_X3_X4_X5_X6_X7_X8_X9
Z6_Z7_Z8_Z9
X22_X23_X24_X25_X26_X27_X28_FP
W30_WZR
LR_XZR
z10_hi
z20_hi
z30_hi
z0_hi
z11_hi
z21_hi
z31_hi
z1_hi
z12_hi
z22_hi
z2_hi
z13_hi
z23_hi
z3_hi
z14_hi
z24_hi
z4_hi
z15_hi
z25_hi
z5_hi
z16_hi
z26_hi
z6_hi
z17_hi
z27_hi
z7_hi
z18_hi
z28_hi
z8_hi
z19_hi
z29_hi
z9_hi
nzcv
adds
mov $
tst $
tst $
tst $
ands
tst $
movs $
/z, $
mov $
/z, $
autia1716
autiasp
autiaz
autib1716
autibsp
autibz
bics
clrex
cntb
cntb
cntd
cntd
cnth
cnth
cntw
cntw
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/z, $
mov $
/z, $
mov $
/z, $
mov $
/z, $
cset $
cinc $
csetm $
cinv $
cneg $
dcps1
dcps2
dcps3
decb
decb
decd
decd
decd
decd
dech
dech
dech
dech
decw
decw
decw
decw
ssbb
pssbb
mov $
mov $
mov $
dupm $
dupm $
dupm $
mov $
mov $
fmov $
, #0.0
mov $
fmov $
, #0.0
mov $
fmov $
, #0.0
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
nots $
/z, $
not $
/z, $
ror $
fmov $
/m, $
fmov $
/m, $
fmov $
/m, $
fmov $
fmov $
fmov $
ld1b
 , $
/z, [$
ld1b
!, $
/z, [$
ld1d
 , $
/z, [$
ld1h
 , $
/z, [$
ld1h
!, $
/z, [$
ld1sb
 , $
/z, [$
ld1sb
!, $
/z, [$
ld1sh
 , $
/z, [$
ld1sh
!, $
/z, [$
ld1sw
 , $
/z, [$
ld1w
 , $
/z, [$
ld1w
!, $
/z, [$
ldff1b
 , $
/z, [$
ldff1b
!, $
/z, [$
ldff1d
 , $
/z, [$
ldff1h
 , $
/z, [$
ldff1h
!, $
/z, [$
ldff1sb
 , $
/z, [$
ldff1sb
!, $
/z, [$
ldff1sh
 , $
/z, [$
ldff1sh
!, $
/z, [$
ldff1sw
 , $
/z, [$
ldff1w
 , $
/z, [$
ldff1w
!, $
/z, [$
yield
sevl
csdb
bti $
psb $
incb
incb
incd
incd
incd
incd
inch
inch
inch
inch
incw
incw
incw
incw
.h$
.h$
.h$
.s$
.s$
.s$
.d$
.d$
.d$
.b$
.b$
.b$
irg $
ld1b
 , $
/z, [$
ld1b
$, $
/z, [$
ld1b
%, $
/z, [$
ld1b
!, $
/z, [$
ld1d
 , $
/z, [$
&, [$
], #64
', [$
], #32
(, [$
], #64
), [$
], #32
*, [$
], #32
+, [$
], #64
,, [$
], #32
-, [$
], #64
ld1h
 , $
/z, [$
ld1h
$, $
/z, [$
ld1h
!, $
/z, [$
&, [$
], #16
', [$
], #8
(, [$
], #16
), [$
], #8
*, [$
], #8
+, [$
], #16
,, [$
], #8
-, [$
], #16
ld1rb
 , $
/z, [$
ld1rb
$, $
/z, [$
ld1rb
%, $
/z, [$
ld1rb
!, $
/z, [$
ld1rd
 , $
/z, [$
ld1rh
 , $
/z, [$
ld1rh
$, $
/z, [$
ld1rh
!, $
/z, [$
ld1rob
%, $
/z, [$
ld1rod
 , $
/z, [$
ld1roh
$, $
/z, [$
ld1row
!, $
/z, [$
ld1rqb
%, $
/z, [$
ld1rqd
 , $
/z, [$
ld1rqh
$, $
/z, [$
ld1rqw
!, $
/z, [$
ld1rsb
 , $
/z, [$
ld1rsb
$, $
/z, [$
ld1rsb
!, $
/z, [$
ld1rsh
 , $
/z, [$
ld1rsh
!, $
/z, [$
ld1rsw
 , $
/z, [$
ld1rw
 , $
/z, [$
ld1rw
!, $
/z, [$
ld1r
&, [$
], #1
ld1r
', [$
], #8
ld1r
(, [$
], #8
ld1r
), [$
], #4
ld1r
*, [$
], #2
ld1r
+, [$
], #4
ld1r
,, [$
], #1
ld1r
-, [$
], #2
ld1sb
 , $
/z, [$
ld1sb
$, $
/z, [$
ld1sb
!, $
/z, [$
ld1sh
 , $
/z, [$
ld1sh
!, $
/z, [$
ld1sw
 , $
/z, [$
&, [$
], #48
', [$
], #24
(, [$
], #48
), [$
], #24
*, [$
], #24
+, [$
], #48
,, [$
], #24
-, [$
], #48
&, [$
], #32
', [$
], #16
(, [$
], #32
), [$
], #16
*, [$
], #16
+, [$
], #32
,, [$
], #16
-, [$
], #32
ld1w
 , $
/z, [$
ld1w
!, $
/z, [$
, [$
], #2
, [$
], #4
, [$
], #8
, [$
], #1
ld2b
%, $
/z, [$
ld2d
 , $
/z, [$
ld2h
$, $
/z, [$
ld2r
&, [$
], #2
ld2r
', [$
], #16
ld2r
(, [$
], #16
ld2r
), [$
], #8
ld2r
*, [$
], #4
ld2r
+, [$
], #8
ld2r
,, [$
], #2
ld2r
-, [$
], #4
&, [$
], #32
(, [$
], #32
), [$
], #16
*, [$
], #16
+, [$
], #32
,, [$
], #16
-, [$
], #32
ld2w
!, $
/z, [$
, [$
], #4
, [$
], #8
, [$
], #16
, [$
], #2
ld3b
%, $
/z, [$
ld3d
 , $
/z, [$
ld3h
$, $
/z, [$
ld3r
&, [$
], #3
ld3r
', [$
], #24
ld3r
(, [$
], #24
ld3r
), [$
], #12
ld3r
*, [$
], #6
ld3r
+, [$
], #12
ld3r
,, [$
], #3
ld3r
-, [$
], #6
&, [$
], #48
(, [$
], #48
), [$
], #24
*, [$
], #24
+, [$
], #48
,, [$
], #24
-, [$
], #48
ld3w
!, $
/z, [$
, [$
], #6
, [$
], #12
, [$
], #24
, [$
], #3
ld4b
%, $
/z, [$
ld4d
 , $
/z, [$
&, [$
], #64
(, [$
], #64
), [$
], #32
*, [$
], #32
+, [$
], #64
,, [$
], #32
-, [$
], #64
ld4h
$, $
/z, [$
ld4r
&, [$
], #4
ld4r
', [$
], #32
ld4r
(, [$
], #32
ld4r
), [$
], #16
ld4r
*, [$
], #8
ld4r
+, [$
], #16
ld4r
,, [$
], #4
ld4r
-, [$
], #8
ld4w
!, $
/z, [$
, [$
], #8
, [$
], #16
, [$
], #32
, [$
], #4
staddb
, [$
staddh
, [$
staddlb
, [$
staddlh
, [$
staddl
, [$
stadd
, [$
ldapurb
, [$
ldapurh
, [$
ldapursb
, [$
ldapursh
, [$
ldapursw
, [$
ldapur
, [$
stclrb
, [$
stclrh
, [$
stclrlb
, [$
stclrlh
, [$
stclrl
, [$
stclr
, [$
steorb
, [$
steorh
, [$
steorlb
, [$
steorlh
, [$
steorl
, [$
steor
, [$
ldff1b
 , $
/z, [$
ldff1b
$, $
/z, [$
ldff1b
%, $
/z, [$
ldff1b
!, $
/z, [$
ldff1d
 , $
/z, [$
ldff1h
 , $
/z, [$
ldff1h
$, $
/z, [$
ldff1h
!, $
/z, [$
ldff1sb
 , $
/z, [$
ldff1sb
$, $
/z, [$
ldff1sb
!, $
/z, [$
ldff1sh
 , $
/z, [$
ldff1sh
!, $
/z, [$
ldff1sw
 , $
/z, [$
ldff1w
 , $
/z, [$
ldff1w
!, $
/z, [$
ldg $
, [$
ldnf1b
 , $
/z, [$
ldnf1b
$, $
/z, [$
ldnf1b
%, $
/z, [$
ldnf1b
!, $
/z, [$
ldnf1d
 , $
/z, [$
ldnf1h
 , $
/z, [$
ldnf1h
$, $
/z, [$
ldnf1h
!, $
/z, [$
ldnf1sb
 , $
/z, [$
ldnf1sb
$, $
/z, [$
ldnf1sb
!, $
/z, [$
ldnf1sh
 , $
/z, [$
ldnf1sh
!, $
/z, [$
ldnf1sw
 , $
/z, [$
ldnf1w
 , $
/z, [$
ldnf1w
!, $
/z, [$
ldnp
, [$
ldnt1b
%, $
/z, [$
ldnt1b
 , $
/z, [$
ldnt1b
!, $
/z, [$
ldnt1d
 , $
/z, [$
ldnt1d
 , $
/z, [$
ldnt1h
$, $
/z, [$
ldnt1h
 , $
/z, [$
ldnt1h
!, $
/z, [$
ldnt1sb
 , $
/z, [$
ldnt1sb
!, $
/z, [$
ldnt1sh
 , $
/z, [$
ldnt1sh
!, $
/z, [$
ldnt1sw
 , $
/z, [$
ldnt1w
!, $
/z, [$
ldnt1w
 , $
/z, [$
ldnt1w
!, $
/z, [$
, [$
ldpsw
, [$
ldraa
, [$
ldrab
, [$
ldrb
, [$
ldrb
, [$
, [$
, [$
ldrh
, [$
ldrh
, [$
ldrsb
, [$
ldrsb
, [$
ldrsh
, [$
ldrsh
, [$
ldrsw
, [$
ldrsw
, [$
, [$
stsetb
, [$
stseth
, [$
stsetlb
, [$
stsetlh
, [$
stsetl
, [$
stset
, [$
stsmaxb
, [$
stsmaxh
, [$
stsmaxlb
, [$
stsmaxlh
, [$
stsmaxl
, [$
stsmax
, [$
stsminb
, [$
stsminh
, [$
stsminlb
, [$
stsminlh
, [$
stsminl
, [$
stsmin
, [$
ldtrb
, [$
ldtrh
, [$
ldtrsb
, [$
ldtrsh
, [$
ldtrsw
, [$
ldtr
, [$
stumaxb
, [$
stumaxh
, [$
stumaxlb
, [$
stumaxlh
, [$
stumaxl
, [$
stumax
, [$
stuminb
, [$
stuminh
, [$
stuminlb
, [$
stuminlh
, [$
stuminl
, [$
stumin
, [$
ldurb
, [$
ldur
, [$
ldurh
, [$
ldursb
, [$
ldursh
, [$
ldursw
, [$
mneg
mvn $
.16b, $
.16b
mvn $
.8b, $
.8b
mvn $
mvn $
movs $
mov $
mov $
mov $
.16b, $
.16b
.8b, $
.8b
pacia1716
paciasp
paciaz
pacib1716
pacibsp
pacibz
prfb
3, $
, [$
prfb
3, $
, [$
prfb
3, $
, [$
prfd
3, $
, [$
prfd
3, $
, [$
prfd
3, $
, [$
prfh
3, $
, [$
prfh
3, $
, [$
prfh
3, $
, [$
prfm $
4, [$
prfm $
4, [$
prfum
4, [$
prfw
3, $
, [$
prfw
3, $
, [$
prfw
3, $
, [$
ptrues
ptrues
ptrues
ptrues
ptrue
ptrue
ptrue
ptrue
ngcs $
ngc $
asr $
sxtb $
sxth $
sxtw $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
smull
smnegl
sqdecb
sqdecb
sqdecb
sqdecb
5, $
sqdecd
sqdecd
sqdecd
sqdecd
5, $
sqdecd
sqdecd
sqdech
sqdech
sqdech
sqdech
5, $
sqdech
sqdech
sqdecw
sqdecw
sqdecw
sqdecw
5, $
sqdecw
sqdecw
sqincb
sqincb
sqincb
sqincb
5, $
sqincd
sqincd
sqincd
sqincd
5, $
sqincd
sqincd
sqinch
sqinch
sqinch
sqinch
5, $
sqinch
sqinch
sqincw
sqincw
sqincw
sqincw
5, $
sqincw
sqincw
st1b
 , $
, [$
st1b
!, $
, [$
st1d
 , $
, [$
st1h
 , $
, [$
st1h
!, $
, [$
st1w
 , $
, [$
st1w
!, $
, [$
st1b
 , $
, [$
st1b
$, $
, [$
st1b
%, $
, [$
st1b
!, $
, [$
st1d
 , $
, [$
&, [$
], #64
', [$
], #32
(, [$
], #64
), [$
], #32
*, [$
], #32
+, [$
], #64
,, [$
], #32
-, [$
], #64
st1h
 , $
, [$
st1h
$, $
, [$
st1h
!, $
, [$
&, [$
], #16
', [$
], #8
(, [$
], #16
), [$
], #8
*, [$
], #8
+, [$
], #16
,, [$
], #8
-, [$
], #16
&, [$
], #48
', [$
], #24
(, [$
], #48
), [$
], #24
*, [$
], #24
+, [$
], #48
,, [$
], #24
-, [$
], #48
&, [$
], #32
', [$
], #16
(, [$
], #32
), [$
], #16
*, [$
], #16
+, [$
], #32
,, [$
], #16
-, [$
], #32
st1w
 , $
, [$
st1w
!, $
, [$
, [$
], #2
, [$
], #4
, [$
], #8
, [$
], #1
st2b
%, $
, [$
st2d
 , $
, [$
st2g
, [$
st2h
$, $
, [$
&, [$
], #32
(, [$
], #32
), [$
], #16
*, [$
], #16
+, [$
], #32
,, [$
], #16
-, [$
], #32
st2w
!, $
, [$
, [$
], #4
, [$
], #8
, [$
], #16
, [$
], #2
st3b
%, $
, [$
st3d
 , $
, [$
st3h
$, $
, [$
&, [$
], #48
(, [$
], #48
), [$
], #24
*, [$
], #24
+, [$
], #48
,, [$
], #24
-, [$
], #48
st3w
!, $
, [$
, [$
], #6
, [$
], #12
, [$
], #24
, [$
], #3
st4b
%, $
, [$
st4d
 , $
, [$
&, [$
], #64
(, [$
], #64
), [$
], #32
*, [$
], #32
+, [$
], #64
,, [$
], #32
-, [$
], #64
st4h
$, $
, [$
st4w
!, $
, [$
, [$
], #8
, [$
], #16
, [$
], #32
, [$
], #4
, [$
stgp
, [$
stlurb
, [$
stlurh
, [$
stlur
, [$
stnp
, [$
stnt1b
%, $
, [$
stnt1b
 , $
, [$
stnt1b
!, $
, [$
stnt1d
 , $
, [$
stnt1d
 , $
, [$
stnt1h
$, $
, [$
stnt1h
 , $
, [$
stnt1h
!, $
, [$
stnt1w
!, $
, [$
stnt1w
 , $
, [$
stnt1w
!, $
, [$
, [$
strb
, [$
strb
, [$
, [$
, [$
strh
, [$
strh
, [$
, [$
sttrb
, [$
sttrh
, [$
sttr
, [$
sturb
, [$
stur
, [$
sturh
, [$
stz2g
, [$
stzg
, [$
negs $
negs $
subs
neg $
neg $
sys $
6, $
6, $
lsr $
uxtb $
uxth $
uxtw $
umull
.s$
.d$
umnegl
uqdecb
uqdecb
uqdecd
uqdecd
uqdecd
uqdecd
uqdech
uqdech
uqdech
uqdech
uqdecw
uqdecw
uqdecw
uqdecw
uqincb
uqincb
uqincd
uqincd
uqincd
uqincd
uqinch
uqinch
uqinch
uqinch
uqincw
uqincw
uqincw
uqincw
xpaclri
st64bv0
trn1
zip1
uzp1
dcps1
rax1
rev32
fcvtl2
trn2
fcvtn2
fcvtxn2
zip2
uzp2
dcps2
eor3
dcps3
rev16
braa
ldraa
blraa
saba
uaba
pacda
ldadda
fadda
autda
pacga
pacia
autia
brka
fcmla
fmla
bfmmla
usmmla
ummla
fnmla
ldsmina
ldumina
brkpa
caspa
swpa
fexpa
ldclra
ldeora
srsra
ursra
ssra
usra
casa
ldseta
frinta
clasta
ldsmaxa
ldumaxa
pacdza
autdza
paciza
autiza
ins.b
smov.b
umov.b
ld1b
ldff1b
ldnf1b
ldnt1b
stnt1b
st1b
crc32b
ld2b
st2b
ld3b
st3b
ld64b
st64b
ld4b
st4b
trn1.16b
zip1.16b
uzp1.16b
rev32.16b
rsubhn2.16b
raddhn2.16b
sqshrn2.16b
uqshrn2.16b
sqrshrn2.16b
uqrshrn2.16b
trn2.16b
sqxtn2.16b
uqxtn2.16b
sqshrun2.16b
sqrshrun2.16b
sqxtun2.16b
zip2.16b
uzp2.16b
eor3.16b
rev64.16b
rev16.16b
saba.16b
uaba.16b
mla.16b
srsra.16b
ursra.16b
ssra.16b
usra.16b
shsub.16b
uhsub.16b
sqsub.16b
uqsub.16b
bic.16b
aesimc.16b
aesmc.16b
sabd.16b
uabd.16b
srhadd.16b
urhadd.16b
shadd.16b
uhadd.16b
usqadd.16b
suqadd.16b
and.16b
aesd.16b
cmge.16b
cmle.16b
aese.16b
bif.16b
sqneg.16b
cmhi.16b
sli.16b
sri.16b
movi.16b
sqshl.16b
uqshl.16b
sqrshl.16b
uqrshl.16b
srshl.16b
urshl.16b
sshl.16b
ushl.16b
bsl.16b
pmul.16b
smin.16b
umin.16b
orn.16b
addp.16b
sminp.16b
uminp.16b
dup.16b
smaxp.16b
umaxp.16b
cmeq.16b
srshr.16b
urshr.16b
sshr.16b
ushr.16b
eor.16b
orr.16b
sqabs.16b
cmhs.16b
cls.16b
mls.16b
cmgt.16b
rbit.16b
cmlt.16b
cnt.16b
not.16b
cmtst.16b
ext.16b
sqshlu.16b
addv.16b
saddlv.16b
uaddlv.16b
sminv.16b
uminv.16b
smaxv.16b
umaxv.16b
bcax.16b
smax.16b
umax.16b
clz.16b
trn1.8b
zip1.8b
uzp1.8b
rev32.8b
trn2.8b
zip2.8b
uzp2.8b
rev64.8b
rev16.8b
saba.8b
uaba.8b
mla.8b
srsra.8b
ursra.8b
ssra.8b
usra.8b
shsub.8b
uhsub.8b
sqsub.8b
uqsub.8b
bic.8b
sabd.8b
uabd.8b
srhadd.8b
urhadd.8b
shadd.8b
uhadd.8b
usqadd.8b
suqadd.8b
and.8b
cmge.8b
cmle.8b
bif.8b
sqneg.8b
cmhi.8b
sli.8b
sri.8b
movi.8b
sqshl.8b
uqshl.8b
sqrshl.8b
uqrshl.8b
srshl.8b
urshl.8b
sshl.8b
ushl.8b
bsl.8b
pmul.8b
rsubhn.8b
raddhn.8b
smin.8b
umin.8b
sqshrn.8b
uqshrn.8b
sqrshrn.8b
uqrshrn.8b
orn.8b
sqxtn.8b
uqxtn.8b
sqshrun.8b
sqrshrun.8b
sqxtun.8b
addp.8b
sminp.8b
uminp.8b
dup.8b
smaxp.8b
umaxp.8b
cmeq.8b
srshr.8b
urshr.8b
sshr.8b
ushr.8b
eor.8b
orr.8b
sqabs.8b
cmhs.8b
cls.8b
mls.8b
cmgt.8b
rbit.8b
cmlt.8b
cnt.8b
not.8b
cmtst.8b
ext.8b
sqshlu.8b
addv.8b
saddlv.8b
uaddlv.8b
sminv.8b
uminv.8b
smaxv.8b
umaxv.8b
smax.8b
umax.8b
clz.8b
ldaddab
ldsminab
lduminab
swpab
brab
ldrab
blrab
ldclrab
ldeorab
casab
ldsetab
ldsmaxab
ldumaxab
crc32cb
sqdecb
uqdecb
sqincb
uqincb
pacdb
ldaddb
autdb
prfb
flogb
pacib
autib
brkb
sabalb
uabalb
ldaddalb
sqdmlalb
bfmlalb
smlalb
umlalb
ldsminalb
lduminalb
swpalb
ldclralb
ldeoralb
casalb
ldsetalb
ldsmaxalb
ldumaxalb
ssublb
usublb
sbclb
adclb
sabdlb
uabdlb
ldaddlb
saddlb
uaddlb
sshllb
ushllb
sqdmullb
pmullb
smullb
umullb
ldsminlb
lduminlb
swplb
ldclrlb
ldeorlb
caslb
sqdmlslb
fmlslb
smlslb
umlslb
ldsetlb
ldsmaxlb
ldumaxlb
rsubhnb
raddhnb
ldsminb
lduminb
sqshrnb
uqshrnb
sqrshrnb
uqrshrnb
sqxtnb
uqxtnb
sqshrunb
sqrshrunb
sqxtunb
ld1rob
brkpb
swpb
ld1rqb
ld1rb
ldarb
ldlarb
ldrb
ldclrb
stllrb
stlrb
ldeorb
ldaprb
ldtrb
strb
sttrb
ldurb
stlurb
ldapurb
sturb
ldaxrb
ldxrb
stlxrb
stxrb
ld1sb
ldff1sb
ldnf1sb
ldnt1sb
casb
fmsb
fnmsb
ld1rsb
ldrsb
ldtrsb
ldursb
ldapursb
ldsetb
ssubltb
cntb
eortb
clastb
sxtb
uxtb
fsub
shsub
uhsub
fmsub
fnmsub
sqsub
uqsub
revb
ssubwb
usubwb
saddwb
uaddwb
ldsmaxb
ldumaxb
pacdzb
autdzb
pacizb
autizb
aesimc
aesmc
csinc
fmla.d
fmul.d
fmls.d
ins.d
fmov.d
umov.d
fmulx.d
sadalp.1d
uadalp.1d
saddlp.1d
uaddlp.1d
ld1d
ldff1d
ldnf1d
ldnt1d
stnt1d
st1d
sha512su0.2d
trn1.2d
zip1.2d
uzp1.2d
sha512su1.2d
rax1.2d
sha512h2.2d
sabal2.2d
uabal2.2d
sqdmlal2.2d
smlal2.2d
umlal2.2d
ssubl2.2d
usubl2.2d
sabdl2.2d
uabdl2.2d
saddl2.2d
uaddl2.2d
sshll2.2d
ushll2.2d
sqdmull2.2d
smull2.2d
umull2.2d
sqdmlsl2.2d
smlsl2.2d
umlsl2.2d
trn2.2d
zip2.2d
uzp2.2d
ssubw2.2d
usubw2.2d
saddw2.2d
uaddw2.2d
fcmla.2d
fmla.2d
srsra.2d
ursra.2d
ssra.2d
usra.2d
frinta.2d
fsub.2d
sqsub.2d
uqsub.2d
fabd.2d
fcadd.2d
fadd.2d
usqadd.2d
suqadd.2d
facge.2d
fcmge.2d
fcmle.2d
frecpe.2d
frsqrte.2d
scvtf.2d
ucvtf.2d
fneg.2d
sqneg.2d
sha512h.2d
cmhi.2d
sli.2d
sri.2d
frinti.2d
movi.2d
sabal.2d
uabal.2d
sqdmlal.2d
smlal.2d
umlal.2d
ssubl.2d
usubl.2d
sabdl.2d
uabdl.2d
saddl.2d
uaddl.2d
sqshl.2d
uqshl.2d
sqrshl.2d
uqrshl.2d
srshl.2d
urshl.2d
sshl.2d
ushl.2d
sshll.2d
ushll.2d
sqdmull.2d
smull.2d
umull.2d
sqdmlsl.2d
smlsl.2d
umlsl.2d
fmul.2d
fminnm.2d
fmaxnm.2d
frintm.2d
fmin.2d
frintn.2d
faddp.2d
sadalp.2d
uadalp.2d
saddlp.2d
uaddlp.2d
fminnmp.2d
fmaxnmp.2d
fminp.2d
frintp.2d
dup.2d
fmaxp.2d
fcmeq.2d
xar.2d
srshr.2d
urshr.2d
sshr.2d
ushr.2d
fcvtas.2d
fabs.2d
sqabs.2d
cmhs.2d
fmls.2d
fcvtms.2d
fcvtns.2d
frecps.2d
fcvtps.2d
frsqrts.2d
fcvtzs.2d
facgt.2d
fcmgt.2d
fcmlt.2d
fsqrt.2d
cmtst.2d
fcvtau.2d
sqshlu.2d
fcvtmu.2d
fcvtnu.2d
fcvtpu.2d
fcvtzu.2d
fdiv.2d
fmov.2d
ssubw.2d
usubw.2d
saddw.2d
uaddw.2d
frint32x.2d
frint64x.2d
fmax.2d
fmulx.2d
frintx.2d
frint32z.2d
frint64z.2d
frintz.2d
ld2d
st2d
ld3d
st3d
ld4d
st4d
fmad
fnmad
ftmad
fabd
sabd
uabd
xpacd
sqdecd
uqdecd
sqincd
uqincd
fcadd
sqcadd
ldadd
fadd
srhadd
urhadd
shadd
uhadd
fmadd
fnmadd
usqadd
suqadd
prfd
nand
ld1rod
ld1rqd
ld1rd
asrd
aesd
cntd
sm4e
splice
facge
whilege
fcmge
cmpge
fscale
whilele
fcmle
cmple
fcmne
ctermne
cmpne
frecpe
urecpe
fccmpe
fcmpe
aese
pfalse
frsqrte
ursqrte
ptrue
scvtf
ucvtf
st2g
stz2g
subg
addg
fneg
sqneg
csneg
histseg
stzg
fmla.h
sqrdmlah.h
sqdmulh.h
sqrdmulh.h
sqrdmlsh.h
sqdmlal.h
sqdmull.h
sqdmlsl.h
fmul.h
fmls.h
ins.h
smov.h
umov.h
fmulx.h
sha1h
ld1h
ldff1h
ldnf1h
ldnt1h
stnt1h
st1h
faddp.2h
fminnmp.2h
fmaxnmp.2h
fminp.2h
fmaxp.2h
crc32h
ld2h
st2h
ld3h
st3h
trn1.4h
zip1.4h
uzp1.4h
rev32.4h
trn2.4h
zip2.4h
uzp2.4h
rev64.4h
saba.4h
uaba.4h
fcmla.4h
fmla.4h
srsra.4h
ursra.4h
ssra.4h
usra.4h
frinta.4h
fsub.4h
shsub.4h
uhsub.4h
sqsub.4h
uqsub.4h
bic.4h
fabd.4h
sabd.4h
uabd.4h
fcadd.4h
fadd.4h
srhadd.4h
urhadd.4h
shadd.4h
uhadd.4h
usqadd.4h
suqadd.4h
facge.4h
fcmge.4h
fcmle.4h
frecpe.4h
frsqrte.4h
scvtf.4h
ucvtf.4h
fneg.4h
sqneg.4h
sqrdmlah.4h
sqdmulh.4h
sqrdmulh.4h
sqrdmlsh.4h
cmhi.4h
sli.4h
mvni.4h
sri.4h
frinti.4h
movi.4h
sqshl.4h
uqshl.4h
sqrshl.4h
uqrshl.4h
srshl.4h
urshl.4h
sshl.4h
ushl.4h
fmul.4h
fminnm.4h
fmaxnm.4h
frintm.4h
rsubhn.4h
raddhn.4h
fmin.4h
smin.4h
umin.4h
sqshrn.4h
uqshrn.4h
sqrshrn.4h
uqrshrn.4h
frintn.4h
bfcvtn.4h
sqxtn.4h
uqxtn.4h
sqshrun.4h
sqrshrun.4h
sqxtun.4h
faddp.4h
sadalp.4h
uadalp.4h
saddlp.4h
uaddlp.4h
fminnmp.4h
fmaxnmp.4h
fminp.4h
sminp.4h
uminp.4h
frintp.4h
dup.4h
fmaxp.4h
smaxp.4h
umaxp.4h
fcmeq.4h
srshr.4h
urshr.4h
sshr.4h
ushr.4h
orr.4h
fcvtas.4h
fabs.4h
sqabs.4h
cmhs.4h
cls.4h
fmls.4h
fcvtms.4h
fcvtns.4h
frecps.4h
fcvtps.4h
frsqrts.4h
fcvtzs.4h
facgt.4h
fcmgt.4h
fcmlt.4h
fsqrt.4h
cmtst.4h
fcvtau.4h
sqshlu.4h
fcvtmu.4h
fcvtnu.4h
fcvtpu.4h
fcvtzu.4h
addv.4h
fdiv.4h
saddlv.4h
uaddlv.4h
fminnmv.4h
fmaxnmv.4h
fminv.4h
sminv.4h
uminv.4h
fmov.4h
fmaxv.4h
smaxv.4h
umaxv.4h
fmax.4h
smax.4h
umax.4h
fmulx.4h
frintx.4h
clz.4h
frintz.4h
ld4h
st4h
trn1.8h
zip1.8h
uzp1.8h
rev32.8h
sabal2.8h
uabal2.8h
smlal2.8h
umlal2.8h
ssubl2.8h
usubl2.8h
sabdl2.8h
uabdl2.8h
saddl2.8h
uaddl2.8h
sshll2.8h
ushll2.8h
pmull2.8h
smull2.8h
umull2.8h
smlsl2.8h
umlsl2.8h
rsubhn2.8h
raddhn2.8h
sqshrn2.8h
uqshrn2.8h
sqrshrn2.8h
uqrshrn2.8h
trn2.8h
bfcvtn2.8h
sqxtn2.8h
uqxtn2.8h
sqshrun2.8h
sqrshrun2.8h
sqxtun2.8h
zip2.8h
uzp2.8h
ssubw2.8h
usubw2.8h
saddw2.8h
uaddw2.8h
rev64.8h
saba.8h
uaba.8h
fcmla.8h
fmla.8h
srsra.8h
ursra.8h
ssra.8h
usra.8h
frinta.8h
fsub.8h
shsub.8h
uhsub.8h
sqsub.8h
uqsub.8h
bic.8h
fabd.8h
sabd.8h
uabd.8h
fcadd.8h
fadd.8h
srhadd.8h
urhadd.8h
shadd.8h
uhadd.8h
usqadd.8h
suqadd.8h
facge.8h
fcmge.8h
fcmle.8h
frecpe.8h
frsqrte.8h
scvtf.8h
ucvtf.8h
fneg.8h
sqneg.8h
sqrdmlah.8h
sqdmulh.8h
sqrdmulh.8h
sqrdmlsh.8h
cmhi.8h
sli.8h
mvni.8h
sri.8h
frinti.8h
movi.8h
sabal.8h
uabal.8h
smlal.8h
umlal.8h
ssubl.8h
usubl.8h
sabdl.8h
uabdl.8h
saddl.8h
uaddl.8h
sqshl.8h
uqshl.8h
sqrshl.8h
uqrshl.8h
srshl.8h
urshl.8h
sshl.8h
ushl.8h
sshll.8h
ushll.8h
pmull.8h
smull.8h
umull.8h
smlsl.8h
umlsl.8h
fmul.8h
fminnm.8h
fmaxnm.8h
frintm.8h
fmin.8h
smin.8h
umin.8h
frintn.8h
faddp.8h
sadalp.8h
uadalp.8h
saddlp.8h
uaddlp.8h
fminnmp.8h
fmaxnmp.8h
fminp.8h
sminp.8h
uminp.8h
frintp.8h
dup.8h
fmaxp.8h
smaxp.8h
umaxp.8h
fcmeq.8h
srshr.8h
urshr.8h
sshr.8h
ushr.8h
orr.8h
fcvtas.8h
fabs.8h
sqabs.8h
cmhs.8h
cls.8h
fmls.8h
fcvtms.8h
fcvtns.8h
frecps.8h
fcvtps.8h
frsqrts.8h
fcvtzs.8h
facgt.8h
fcmgt.8h
fcmlt.8h
fsqrt.8h
cmtst.8h
fcvtau.8h
sqshlu.8h
fcvtmu.8h
fcvtnu.8h
fcvtpu.8h
fcvtzu.8h
addv.8h
fdiv.8h
saddlv.8h
uaddlv.8h
fminnmv.8h
fmaxnmv.8h
fminv.8h
sminv.8h
uminv.8h
fmov.8h
fmaxv.8h
smaxv.8h
umaxv.8h
ssubw.8h
usubw.8h
saddw.8h
uaddw.8h
fmax.8h
smax.8h
umax.8h
fmulx.8h
frintx.8h
clz.8h
frintz.8h
ldaddah
sqrdcmlah
sqrdmlah
ldsminah
lduminah
swpah
ldclrah
ldeorah
casah
ldsetah
ldsmaxah
ldumaxah
crc32ch
sqdech
uqdech
sqinch
uqinch
nmatch
ldaddh
prfh
ldaddalh
ldsminalh
lduminalh
swpalh
ldclralh
ldeoralh
casalh
ldsetalh
ldsmaxalh
ldumaxalh
ldaddlh
ldsminlh
lduminlh
swplh
ldclrlh
ldeorlh
caslh
ldsetlh
sqdmulh
sqrdmulh
smulh
umulh
ldsmaxlh
ldumaxlh
ldsminh
lduminh
ld1roh
swph
ld1rqh
ld1rh
ldarh
ldlarh
ldrh
ldclrh
stllrh
stlrh
ldeorh
ldaprh
ldtrh
strh
sttrh
ldurh
stlurh
ldapurh
sturh
ldaxrh
ldxrh
stlxrh
stxrh
ld1sh
ldff1sh
ldnf1sh
ldnt1sh
cash
sqrdmlsh
ld1rsh
ldrsh
ldtrsh
ldursh
ldapursh
ldseth
cnth
sxth
uxth
revh
ldsmaxh
ldumaxh
xpaci
whilehi
punpkhi
sunpkhi
uunpkhi
cmhi
cmphi
frinti
movi
movk
ldaddal
sqdmlal
ldsminal
lduminal
caspal
swpal
ldclral
ldeoral
casal
ldsetal
ldsmaxal
ldumaxal
smsubl
umsubl
ldaddl
smaddl
umaddl
tcancel
fcsel
ftssel
sqshl
uqshl
sqrshl
uqrshl
srshl
urshl
sshl
ushl
sqdmull
ldsminl
lduminl
addpl
caspl
swpl
ldclrl
ldeorl
casl
nbsl
sqdmlsl
sysl
ldsetl
fcvtl
fmul
fnmul
pmul
ftsmul
addvl
rdvl
ldsmaxl
ldumaxl
sbfm
ubfm
prfm
ldgm
stgm
stzgm
fminnm
fmaxnm
dupm
frintm
prfum
bsl1n
bsl2n
fmin
ldsmin
ldumin
brkn
ccmn
sqshrn
uqshrn
sqrshrn
uqrshrn
frintn
fcvtn
sqxtn
uqxtn
sqshrun
sqrshrun
sqxtun
movn
fcvtxn
whilelo
punpklo
sunpklo
uunpklo
cmplo
fcmuo
subp
sqdecp
uqdecp
sqincp
uqincp
faddp
bdep
stgp
sadalp
uadalp
fccmp
fcmp
fminnmp
fmaxnmp
ldnp
fminp
sminp
uminp
stnp
adrp
bgrp
casp
cntp
frintp
fdup
ldaxp
fmaxp
smaxp
umaxp
ldxp
stlxp
stxp
pmull2.1q
pmull.1q
fcmeq
ctermeq
cmpeq
ld1r
ld2r
ld3r
ld4r
ldar
ldlar
fsubr
shsubr
uhsubr
sqsubr
uqsubr
rdffr
wrffr
srshr
urshr
sshr
ushr
ldclr
sqshlr
uqshlr
sqrshlr
uqrshlr
srshlr
urshlr
stllr
lslr
stlr
ldeor
ldapr
asrr
lsrr
insr
ldtr
sttr
extr
ldur
stlur
ldapur
stur
fdivr
sdivr
udivr
whilewr
ldaxr
ldxr
stlxr
stxr
fmla.s
sqrdmlah.s
sqdmulh.s
sqrdmulh.s
sqrdmlsh.s
sqdmlal.s
sqdmull.s
sqdmlsl.s
fmul.s
fmls.s
ins.s
smov.s
umov.s
fmulx.s
trn1.2s
zip1.2s
uzp1.2s
fmlal2.2s
fmlsl2.2s
trn2.2s
zip2.2s
uzp2.2s
rev64.2s
saba.2s
uaba.2s
fcmla.2s
fmla.2s
srsra.2s
ursra.2s
ssra.2s
usra.2s
frinta.2s
fsub.2s
shsub.2s
uhsub.2s
sqsub.2s
uqsub.2s
bic.2s
fabd.2s
sabd.2s
uabd.2s
fcadd.2s
fadd.2s
srhadd.2s
urhadd.2s
shadd.2s
uhadd.2s
usqadd.2s
suqadd.2s
facge.2s
fcmge.2s
fcmle.2s
frecpe.2s
urecpe.2s
frsqrte.2s
ursqrte.2s
scvtf.2s
ucvtf.2s
fneg.2s
sqneg.2s
sqrdmlah.2s
sqdmulh.2s
sqrdmulh.2s
sqrdmlsh.2s
cmhi.2s
sli.2s
mvni.2s
sri.2s
frinti.2s
movi.2s
fmlal.2s
sqshl.2s
uqshl.2s
sqrshl.2s
uqrshl.2s
srshl.2s
urshl.2s
sshl.2s
ushl.2s
fmlsl.2s
fmul.2s
fminnm.2s
fmaxnm.2s
frintm.2s
rsubhn.2s
raddhn.2s
fmin.2s
smin.2s
umin.2s
sqshrn.2s
uqshrn.2s
sqrshrn.2s
uqrshrn.2s
frintn.2s
sqxtn.2s
uqxtn.2s
sqshrun.2s
sqrshrun.2s
sqxtun.2s
faddp.2s
sadalp.2s
uadalp.2s
saddlp.2s
uaddlp.2s
fminnmp.2s
fmaxnmp.2s
fminp.2s
sminp.2s
uminp.2s
frintp.2s
dup.2s
fmaxp.2s
smaxp.2s
umaxp.2s
fcmeq.2s
srshr.2s
urshr.2s
sshr.2s
ushr.2s
orr.2s
fcvtas.2s
fabs.2s
sqabs.2s
cmhs.2s
cls.2s
fmls.2s
fcvtms.2s
fcvtns.2s
frecps.2s
fcvtps.2s
frsqrts.2s
fcvtzs.2s
facgt.2s
fcmgt.2s
fcmlt.2s
bfdot.2s
usdot.2s
udot.2s
fsqrt.2s
cmtst.2s
fcvtau.2s
sqshlu.2s
fcvtmu.2s
fcvtnu.2s
fcvtpu.2s
fcvtzu.2s
fdiv.2s
fmov.2s
frint32x.2s
frint64x.2s
fmax.2s
smax.2s
umax.2s
fmulx.2s
frintx.2s
frint32z.2s
frint64z.2s
clz.2s
frintz.2s
sha1su0.4s
sha256su0.4s
trn1.4s
zip1.4s
uzp1.4s
sm3ss1.4s
sha1su1.4s
sha256su1.4s
sm3partw1.4s
sha256h2.4s
sabal2.4s
uabal2.4s
sqdmlal2.4s
fmlal2.4s
smlal2.4s
umlal2.4s
ssubl2.4s
usubl2.4s
sabdl2.4s
uabdl2.4s
saddl2.4s
uaddl2.4s
sshll2.4s
ushll2.4s
sqdmull2.4s
smull2.4s
umull2.4s
sqdmlsl2.4s
fmlsl2.4s
smlsl2.4s
umlsl2.4s
rsubhn2.4s
raddhn2.4s
sqshrn2.4s
uqshrn2.4s
sqrshrn2.4s
uqrshrn2.4s
trn2.4s
sqxtn2.4s
uqxtn2.4s
sqshrun2.4s
sqrshrun2.4s
sqxtun2.4s
zip2.4s
uzp2.4s
ssubw2.4s
usubw2.4s
saddw2.4s
uaddw2.4s
sm3partw2.4s
rev64.4s
sm3tt1a.4s
sm3tt2a.4s
saba.4s
uaba.4s
fcmla.4s
fmla.4s
bfmmla.4s
srsra.4s
ursra.4s
ssra.4s
usra.4s
frinta.4s
sm3tt1b.4s
sm3tt2b.4s
bfmlalb.4s
fsub.4s
shsub.4s
uhsub.4s
sqsub.4s
uqsub.4s
sha1c.4s
bic.4s
fabd.4s
sabd.4s
uabd.4s
fcadd.4s
fadd.4s
srhadd.4s
urhadd.4s
shadd.4s
uhadd.4s
usqadd.4s
suqadd.4s
sm4e.4s
facge.4s
fcmge.4s
fcmle.4s
frecpe.4s
urecpe.4s
frsqrte.4s
ursqrte.4s
scvtf.4s
ucvtf.4s
fneg.4s
sqneg.4s
sha256h.4s
sqrdmlah.4s
sqdmulh.4s
sqrdmulh.4s
sqrdmlsh.4s
cmhi.4s
sli.4s
mvni.4s
sri.4s
frinti.4s
movi.4s
sabal.4s
uabal.4s
sqdmlal.4s
fmlal.4s
smlal.4s
umlal.4s
ssubl.4s
usubl.4s
sabdl.4s
uabdl.4s
saddl.4s
uaddl.4s
sqshl.4s
uqshl.4s
sqrshl.4s
uqrshl.4s
srshl.4s
urshl.4s
sshl.4s
ushl.4s
sshll.4s
ushll.4s
sqdmull.4s
smull.4s
umull.4s
sqdmlsl.4s
fmlsl.4s
smlsl.4s
umlsl.4s
fmul.4s
sha1m.4s
fminnm.4s
fmaxnm.4s
frintm.4s
fmin.4s
smin.4s
umin.4s
frintn.4s
sha1p.4s
faddp.4s
sadalp.4s
uadalp.4s
saddlp.4s
uaddlp.4s
fminnmp.4s
fmaxnmp.4s
fminp.4s
sminp.4s
uminp.4s
frintp.4s
dup.4s
fmaxp.4s
smaxp.4s
umaxp.4s
fcmeq.4s
srshr.4s
urshr.4s
sshr.4s
ushr.4s
orr.4s
fcvtas.4s
fabs.4s
sqabs.4s
cmhs.4s
cls.4s
fmls.4s
fcvtms.4s
fcvtns.4s
frecps.4s
fcvtps.4s
frsqrts.4s
fcvtzs.4s
facgt.4s
fcmgt.4s
bfmlalt.4s
fcmlt.4s
bfdot.4s
usdot.4s
udot.4s
fsqrt.4s
cmtst.4s
fcvtau.4s
sqshlu.4s
fcvtmu.4s
fcvtnu.4s
fcvtpu.4s
fcvtzu.4s
addv.4s
fdiv.4s
saddlv.4s
uaddlv.4s
fminnmv.4s
fmaxnmv.4s
fminv.4s
sminv.4s
uminv.4s
fmov.4s
fmaxv.4s
smaxv.4s
umaxv.4s
ssubw.4s
usubw.4s
saddw.4s
uaddw.4s
frint32x.4s
frint64x.4s
fmax.4s
smax.4s
umax.4s
fmulx.4s
frintx.4s
sm4ekey.4s
frint32z.4s
frint64z.4s
clz.4s
frintz.4s
brkas
brkpas
fcvtas
fabs
sqabs
brkbs
brkpbs
subs
sbcs
adcs
bics
adds
nands
ptrues
whilehs
cmhs
cmphs
whilels
fmls
fnmls
cmpls
fcvtms
brkns
orns
fcvtns
subps
frecps
fcvtps
rdffrs
eors
nors
orrs
frsqrts
fcvtzs
fjcvtzs
sqdmlalbt
ssublbt
saddlbt
sqdmlslbt
eorbt
compact
wfet
ldset
facgt
whilegt
fcmgt
cmpgt
rbit
wfit
sabalt
uabalt
sqdmlalt
bfmlalt
smlalt
umlalt
ssublt
usublt
sbclt
adclt
sabdlt
uabdlt
saddlt
uaddlt
whilelt
sshllt
ushllt
sqdmullt
pmullt
smullt
umullt
fcmlt
cmplt
sqdmlslt
fmlslt
smlslt
umlslt
fcvtlt
histcnt
rsubhnt
raddhnt
hint
sqshrnt
uqshrnt
sqrshrnt
uqrshrnt
bfcvtnt
sqxtnt
uqxtnt
sqshrunt
sqrshrunt
sqxtunt
fcvtxnt
cdot
bfdot
usdot
sudot
cnot
tstart
fsqrt
ptest
ttest
pfirst
cmtst
bfcvt
ssubwt
usubwt
saddwt
uaddwt
bext
pnext
fcvtau
sqshlu
fcvtmu
fcvtnu
fcvtpu
fcvtzu
st64bv
faddv
saddv
uaddv
andv
fdiv
sdiv
udiv
fminnmv
fmaxnmv
fminv
sminv
uminv
csinv
fmov
eorv
fmaxv
smaxv
umaxv
ld1w
ldff1w
ldnf1w
ldnt1w
stnt1w
st1w
crc32w
ld2w
st2w
ld3w
st3w
ld4w
st4w
crc32cw
sqdecw
uqdecw
sqincw
uqincw
prfw
ld1row
ld1rqw
ld1rw
whilerw
ld1sw
ldff1sw
ldnf1sw
ldnt1sw
ldpsw
ld1rsw
ldrsw
ldtrsw
ldursw
ldapursw
cntw
sxtw
uxtw
revw
crc32x
frint32x
frint64x
bcax
fmax
ldsmax
ldumax
crc32cx
index
clrex
movprfx
fmulx
frecpx
frintx
fcvtx
sm4ekey
fcpy
frint32z
frint64z
braaz
blraaz
brabz
blrabz
cbnz
tbnz
frintz
movz
.tlsdesccall 
# XRay Function Patchable RET.
# XRay Typed Event Log.
# XRay Custom Event Log.
# XRay Function Enter.
# XRay Tail Call Exit.
# XRay Function Exit.
hint
hint
hint
hint
hint
hint
hint
setf16
hint
hint
hint
hint
hint
setf8
hint
LIFETIME_END
PSEUDO_PROBE
BUNDLE
DBG_VALUE
DBG_INSTR_REF
DBG_LABEL
LIFETIME_START
eretaa
usmmla
ummla
eretab
rmif
xaflag
axflag
# FEntry call
iall
setffr
drps
eret
tcommit
cfinv
"@}@!H}@
U>!X
"peA!he
!@eA
|,!h|
!@|,
H>!X
!X'>!X
>!X8+!X
>!X3
!X.>!X
"Xn?!Xn
!Xn?
"Xn?!Xn
!Xn?
"Xn?!Xn?
"Xr>!Xr
!Xr>
"Xr>!Xr
!Xr>
"Xr>!Xr>
"X9@!X9
!X9@
"X9@!X9@
!@5?!
! 5?"95
>!X1
fA!hfA!
"XX0#
!XW?
"Xd2#
!Xg?
!Xg?
!X2@
?AB ?
!XE.
"XE4#
!XL,
!X^C
!X^C
"Xq4#
!XC,
!X[,
!X"+
!X"+
N4#(
#(,=#(w%#(
!X+-
!X+-
R(++R(+
+B+++B+
Y(++Y(+
1B++1B+
&&H
&&H?)&H?)&H
)&H$
&HB&&HW
&&Ht)&Ht)&HN
'&H'&H?'&HV*&HV*&H
-&Ho
&HK&&Ha
&&H})&H})&HV
'&H0&HH'&H^*&H^*&H
*#k(++
*#AB+
*#AB++
&H[&&Hs
)&H~
(&Hb&HX'&H
*&HP?&HP?&H
&Hd&&H}
(&Hk&H
*&HdC&HdC&H7
&H'&&H9
&&HQ)&HQ)&H!
'&H&H$'&H0*&H0*&H(+&H(+&H\
&Hn&&H
(&Hu&H
*&HlC&HlC&HA
&H1&&HD
&&H[)&H[)&H*
&H.'&H9*&H9*&H0+&H0+&Hp
v*!Xv*
"Xv*!hv*
"pv*!Xv
!Xv*
"Xv*!Xv
!Xv*
"Xv*!hv
!@v*
#P+1#X+1#X
#XL9#XL9#X
"#X9
#X09#X09#X
!#XT>!Xt
>!Xk
k+!X
/A!X
kA!Xk
!XkA
B{;!
9h[>!
"@|@!H|@
>!X\-!X\-
"@s@!Hs@
!X&,
!p!?b>!
"0u##
!@UA
"p) #
#P65&
2-!X2
!X2-
#Pd8#
fC!hf
!@fC
"pfC!Xf
!XfC
b,!Xb
!Xb,
*+!h*
!@*+
"p*+!X*
!X*+
!(R
!(R@
t'!Xt
!Xt'
"Xt'!ht
!@t'
!p"@b>"
"X >!
"HH)&
!(*?
!(@
!(@@
"Hr*&
!@a'
"pa'!ha
!@a'
! z("9z
"(z(!
! z("9z
!@j'
"pj'!hj
!@j'
#PL2#
"XzA!Xz
!XzA
#P@2#
B-!XB
!XB-
! !)"9!
"(!)&
j-!Xj
!Xj-
!@EA
"@t@!Ht@
,-!h,
!@,-
"p,-!X,
!X,-
&H;&&HO
&&Hm)&Hm)&HA
'&H &H8'&HP*&HP*&H
,&H@
! tC"9t
!X.,
!@]A
"p4 #
:-!X:
!X:-
nC!hn
!@nC
"pnC!Xn
!XnC
i,!Xi
!Xi,
2+!h2
!@2+
"p2+!X2
!X2+
!(Z
!(Z@
{'!X{
!X{'
"X{'!h{
!@{'
!p*@b>*
J-!XJ
!XJ-
q-!Xq
!Xq-
!@MA
&-!h&
!@&-
#P.2#
D7_D8_D9_D10
Q7_Q8_Q9_Q10
Z7_Z8_Z9_Z10
D17_D18_D19_D20
Q17_Q18_Q19_Q20
Z17_Z18_Z19_Z20
D27_D28_D29_D30
Q27_Q28_Q29_Q30
Z27_Z28_Z29_Z30
D29_D30_D31_D0
Q29_Q30_Q31_Q0
Z29_Z30_Z31_Z0
D8_D9_D10_D11
Q8_Q9_Q10_Q11
W10_W11
X4_X5_X6_X7_X8_X9_X10_X11
Z8_Z9_Z10_Z11
D18_D19_D20_D21
Q18_Q19_Q20_Q21
W20_W21
X14_X15_X16_X17_X18_X19_X20_X21
Z18_Z19_Z20_Z21
D28_D29_D30_D31
Q28_Q29_Q30_Q31
Z28_Z29_Z30_Z31
D30_D31_D0_D1
Q30_Q31_Q0_Q1
W0_W1
X0_X1
Z30_Z31_Z0_Z1
D9_D10_D11_D12
Q9_Q10_Q11_Q12
Z9_Z10_Z11_Z12
D19_D20_D21_D22
Q19_Q20_Q21_Q22
Z19_Z20_Z21_Z22
D31_D0_D1_D2
Q31_Q0_Q1_Q2
Z31_Z0_Z1_Z2
D10_D11_D12_D13
Q10_Q11_Q12_Q13
W12_W13
X6_X7_X8_X9_X10_X11_X12_X13
Z10_Z11_Z12_Z13
D20_D21_D22_D23
Q20_Q21_Q22_Q23
W22_W23
X16_X17_X18_X19_X20_X21_X22_X23
Z20_Z21_Z22_Z23
D0_D1_D2_D3
Q0_Q1_Q2_Q3
W2_W3
X2_X3
Z0_Z1_Z2_Z3
D11_D12_D13_D14
Q11_Q12_Q13_Q14
Z11_Z12_Z13_Z14
D21_D22_D23_D24
Q21_Q22_Q23_Q24
Z21_Z22_Z23_Z24
D1_D2_D3_D4
Q1_Q2_Q3_Q4
Z1_Z2_Z3_Z4
D12_D13_D14_D15
Q12_Q13_Q14_Q15
W14_W15
X8_X9_X10_X11_X12_X13_X14_X15
Z12_Z13_Z14_Z15
D22_D23_D24_D25
Q22_Q23_Q24_Q25
W24_W25
X18_X19_X20_X21_X22_X23_X24_X25
Z22_Z23_Z24_Z25
D2_D3_D4_D5
Q2_Q3_Q4_Q5
W4_W5
X4_X5
Z2_Z3_Z4_Z5
D13_D14_D15_D16
Q13_Q14_Q15_Q16
Z13_Z14_Z15_Z16
D23_D24_D25_D26
Q23_Q24_Q25_Q26
Z23_Z24_Z25_Z26
D3_D4_D5_D6
Q3_Q4_Q5_Q6
Z3_Z4_Z5_Z6
D14_D15_D16_D17
Q14_Q15_Q16_Q17
W16_W17
X10_X11_X12_X13_X14_X15_X16_X17
Z14_Z15_Z16_Z17
D24_D25_D26_D27
Q24_Q25_Q26_Q27
W26_W27
X20_X21_X22_X23_X24_X25_X26_X27
Z24_Z25_Z26_Z27
D4_D5_D6_D7
Q4_Q5_Q6_Q7
W6_W7
X0_X1_X2_X3_X4_X5_X6_X7
Z4_Z5_Z6_Z7
D15_D16_D17_D18
Q15_Q16_Q17_Q18
Z15_Z16_Z17_Z18
D25_D26_D27_D28
Q25_Q26_Q27_Q28
Z25_Z26_Z27_Z28
D5_D6_D7_D8
Q5_Q6_Q7_Q8
Z5_Z6_Z7_Z8
D16_D17_D18_D19
Q16_Q17_Q18_Q19
W18_W19
X12_X13_X14_X15_X16_X17_X18_X19
Z16_Z17_Z18_Z19
D26_D27_D28_D29
Q26_Q27_Q28_Q29
W28_W29
Z26_Z27_Z28_Z29
D6_D7_D8_D9
Q6_Q7_Q8_Q9
W8_W9
X2_X3_X4_X5_X6_X7_X8_X9
Z6_Z7_Z8_Z9
X22_X23_X24_X25_X26_X27_X28_FP
W30_WZR
LR_XZR
z10_hi
z20_hi
z30_hi
z0_hi
z11_hi
z21_hi
z31_hi
z1_hi
z12_hi
z22_hi
z2_hi
z13_hi
z23_hi
z3_hi
z14_hi
z24_hi
z4_hi
z15_hi
z25_hi
z5_hi
z16_hi
z26_hi
z6_hi
z17_hi
z27_hi
z7_hi
z18_hi
z28_hi
z8_hi
z19_hi
z29_hi
z9_hi
nzcv
A2X
19=
+[
$i
&1<GR]hs
)4?JU`k
"-8CNYdo
&1<GR]hs
)4?JU`k
"-8CNYdo
&1<GR]hs
)4?JU`k
"-8CNYdo
&1<GR]hs
)4?JU`k
"-8CNYdo
&1<GR]hs
)4?JU`k
"-8CNYdo
&1<GR]hs
)4?JU`k
"-8CNYdo
&1<GR]hs
)4?JU`k
"-8CNYdo
&1<GR]hs
)4?JU`k
"-8CNYdo
&1<GR]hs
)4?JU`k
"-8CNYdo
adds
mov $
tst $
tst $
tst $
ands
tst $
movs $
/z, $
mov $
/z, $
autia1716
autiasp
autiaz
autib1716
autibsp
autibz
bics
clrex
cntb
cntb
cntd
cntd
cnth
cnth
cntw
cntw
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/z, $
mov $
/z, $
mov $
/z, $
mov $
/z, $
cset $
cinc $
csetm $
cinv $
cneg $
dcps1
dcps2
dcps3
decb
decb
decd
decd
decd
decd
dech
dech
dech
dech
decw
decw
decw
decw
ssbb
pssbb
mov $
mov $
mov $
dupm $
dupm $
dupm $
mov $
mov $
fmov $
, #0.0
mov $
fmov $
, #0.0
mov $
fmov $
, #0.0
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
nots $
/z, $
not $
/z, $
ror $
fmov $
/m, $
fmov $
/m, $
fmov $
/m, $
fmov $
fmov $
fmov $
ld1b
 , $
/z, [$
ld1b
!, $
/z, [$
ld1d
 , $
/z, [$
ld1h
 , $
/z, [$
ld1h
!, $
/z, [$
ld1sb
 , $
/z, [$
ld1sb
!, $
/z, [$
ld1sh
 , $
/z, [$
ld1sh
!, $
/z, [$
ld1sw
 , $
/z, [$
ld1w
 , $
/z, [$
ld1w
!, $
/z, [$
ldff1b
 , $
/z, [$
ldff1b
!, $
/z, [$
ldff1d
 , $
/z, [$
ldff1h
 , $
/z, [$
ldff1h
!, $
/z, [$
ldff1sb
 , $
/z, [$
ldff1sb
!, $
/z, [$
ldff1sh
 , $
/z, [$
ldff1sh
!, $
/z, [$
ldff1sw
 , $
/z, [$
ldff1w
 , $
/z, [$
ldff1w
!, $
/z, [$
yield
sevl
csdb
bti $
psb $
incb
incb
incd
incd
incd
incd
inch
inch
inch
inch
incw
incw
incw
incw
mov.h
mov.h
mov.s
mov.s
mov.d
mov.d
mov.b
mov.b
irg $
ld1b
 , $
/z, [$
ld1b
$, $
/z, [$
ld1b
%, $
/z, [$
ld1b
!, $
/z, [$
ld1d
 , $
/z, [$
&, [$
], #64
', [$
], #32
(, [$
], #64
), [$
], #32
*, [$
], #32
+, [$
], #64
,, [$
], #32
-, [$
], #64
ld1h
 , $
/z, [$
ld1h
$, $
/z, [$
ld1h
!, $
/z, [$
&, [$
], #16
', [$
], #8
(, [$
], #16
), [$
], #8
*, [$
], #8
+, [$
], #16
,, [$
], #8
-, [$
], #16
ld1rb
 , $
/z, [$
ld1rb
$, $
/z, [$
ld1rb
%, $
/z, [$
ld1rb
!, $
/z, [$
ld1rd
 , $
/z, [$
ld1rh
 , $
/z, [$
ld1rh
$, $
/z, [$
ld1rh
!, $
/z, [$
ld1rob
%, $
/z, [$
ld1rod
 , $
/z, [$
ld1roh
$, $
/z, [$
ld1row
!, $
/z, [$
ld1rqb
%, $
/z, [$
ld1rqd
 , $
/z, [$
ld1rqh
$, $
/z, [$
ld1rqw
!, $
/z, [$
ld1rsb
 , $
/z, [$
ld1rsb
$, $
/z, [$
ld1rsb
!, $
/z, [$
ld1rsh
 , $
/z, [$
ld1rsh
!, $
/z, [$
ld1rsw
 , $
/z, [$
ld1rw
 , $
/z, [$
ld1rw
!, $
/z, [$
ld1r
&, [$
], #1
ld1r
', [$
], #8
ld1r
(, [$
], #8
ld1r
), [$
], #4
ld1r
*, [$
], #2
ld1r
+, [$
], #4
ld1r
,, [$
], #1
ld1r
-, [$
], #2
ld1sb
 , $
/z, [$
ld1sb
$, $
/z, [$
ld1sb
!, $
/z, [$
ld1sh
 , $
/z, [$
ld1sh
!, $
/z, [$
ld1sw
 , $
/z, [$
&, [$
], #48
', [$
], #24
(, [$
], #48
), [$
], #24
*, [$
], #24
+, [$
], #48
,, [$
], #24
-, [$
], #48
&, [$
], #32
', [$
], #16
(, [$
], #32
), [$
], #16
*, [$
], #16
+, [$
], #32
,, [$
], #16
-, [$
], #32
ld1w
 , $
/z, [$
ld1w
!, $
/z, [$
, [$
], #2
, [$
], #4
, [$
], #8
, [$
], #1
ld2b
%, $
/z, [$
ld2d
 , $
/z, [$
ld2h
$, $
/z, [$
ld2r
&, [$
], #2
ld2r
', [$
], #16
ld2r
(, [$
], #16
ld2r
), [$
], #8
ld2r
*, [$
], #4
ld2r
+, [$
], #8
ld2r
,, [$
], #2
ld2r
-, [$
], #4
&, [$
], #32
(, [$
], #32
), [$
], #16
*, [$
], #16
+, [$
], #32
,, [$
], #16
-, [$
], #32
ld2w
!, $
/z, [$
, [$
], #4
, [$
], #8
, [$
], #16
, [$
], #2
ld3b
%, $
/z, [$
ld3d
 , $
/z, [$
ld3h
$, $
/z, [$
ld3r
&, [$
], #3
ld3r
', [$
], #24
ld3r
(, [$
], #24
ld3r
), [$
], #12
ld3r
*, [$
], #6
ld3r
+, [$
], #12
ld3r
,, [$
], #3
ld3r
-, [$
], #6
&, [$
], #48
(, [$
], #48
), [$
], #24
*, [$
], #24
+, [$
], #48
,, [$
], #24
-, [$
], #48
ld3w
!, $
/z, [$
, [$
], #6
, [$
], #12
, [$
], #24
, [$
], #3
ld4b
%, $
/z, [$
ld4d
 , $
/z, [$
&, [$
], #64
(, [$
], #64
), [$
], #32
*, [$
], #32
+, [$
], #64
,, [$
], #32
-, [$
], #64
ld4h
$, $
/z, [$
ld4r
&, [$
], #4
ld4r
', [$
], #32
ld4r
(, [$
], #32
ld4r
), [$
], #16
ld4r
*, [$
], #8
ld4r
+, [$
], #16
ld4r
,, [$
], #4
ld4r
-, [$
], #8
ld4w
!, $
/z, [$
, [$
], #8
, [$
], #16
, [$
], #32
, [$
], #4
staddb
, [$
staddh
, [$
staddlb
, [$
staddlh
, [$
staddl
, [$
stadd
, [$
ldapurb
, [$
ldapurh
, [$
ldapursb
, [$
ldapursh
, [$
ldapursw
, [$
ldapur
, [$
stclrb
, [$
stclrh
, [$
stclrlb
, [$
stclrlh
, [$
stclrl
, [$
stclr
, [$
steorb
, [$
steorh
, [$
steorlb
, [$
steorlh
, [$
steorl
, [$
steor
, [$
ldff1b
 , $
/z, [$
ldff1b
$, $
/z, [$
ldff1b
%, $
/z, [$
ldff1b
!, $
/z, [$
ldff1d
 , $
/z, [$
ldff1h
 , $
/z, [$
ldff1h
$, $
/z, [$
ldff1h
!, $
/z, [$
ldff1sb
 , $
/z, [$
ldff1sb
$, $
/z, [$
ldff1sb
!, $
/z, [$
ldff1sh
 , $
/z, [$
ldff1sh
!, $
/z, [$
ldff1sw
 , $
/z, [$
ldff1w
 , $
/z, [$
ldff1w
!, $
/z, [$
ldg $
, [$
ldnf1b
 , $
/z, [$
ldnf1b
$, $
/z, [$
ldnf1b
%, $
/z, [$
ldnf1b
!, $
/z, [$
ldnf1d
 , $
/z, [$
ldnf1h
 , $
/z, [$
ldnf1h
$, $
/z, [$
ldnf1h
!, $
/z, [$
ldnf1sb
 , $
/z, [$
ldnf1sb
$, $
/z, [$
ldnf1sb
!, $
/z, [$
ldnf1sh
 , $
/z, [$
ldnf1sh
!, $
/z, [$
ldnf1sw
 , $
/z, [$
ldnf1w
 , $
/z, [$
ldnf1w
!, $
/z, [$
ldnp
, [$
ldnt1b
%, $
/z, [$
ldnt1b
 , $
/z, [$
ldnt1b
!, $
/z, [$
ldnt1d
 , $
/z, [$
ldnt1d
 , $
/z, [$
ldnt1h
$, $
/z, [$
ldnt1h
 , $
/z, [$
ldnt1h
!, $
/z, [$
ldnt1sb
 , $
/z, [$
ldnt1sb
!, $
/z, [$
ldnt1sh
 , $
/z, [$
ldnt1sh
!, $
/z, [$
ldnt1sw
 , $
/z, [$
ldnt1w
!, $
/z, [$
ldnt1w
 , $
/z, [$
ldnt1w
!, $
/z, [$
, [$
ldpsw
, [$
ldraa
, [$
ldrab
, [$
ldrb
, [$
ldrb
, [$
, [$
, [$
ldrh
, [$
ldrh
, [$
ldrsb
, [$
ldrsb
, [$
ldrsh
, [$
ldrsh
, [$
ldrsw
, [$
ldrsw
, [$
, [$
stsetb
, [$
stseth
, [$
stsetlb
, [$
stsetlh
, [$
stsetl
, [$
stset
, [$
stsmaxb
, [$
stsmaxh
, [$
stsmaxlb
, [$
stsmaxlh
, [$
stsmaxl
, [$
stsmax
, [$
stsminb
, [$
stsminh
, [$
stsminlb
, [$
stsminlh
, [$
stsminl
, [$
stsmin
, [$
ldtrb
, [$
ldtrh
, [$
ldtrsb
, [$
ldtrsh
, [$
ldtrsw
, [$
ldtr
, [$
stumaxb
, [$
stumaxh
, [$
stumaxlb
, [$
stumaxlh
, [$
stumaxl
, [$
stumax
, [$
stuminb
, [$
stuminh
, [$
stuminlb
, [$
stuminlh
, [$
stuminl
, [$
stumin
, [$
ldurb
, [$
ldur
, [$
ldurh
, [$
ldursb
, [$
ldursh
, [$
ldursw
, [$
mneg
mvn.16b $
, $
mvn.8b $
, $
mvn $
mvn $
movs $
mov $
mov $
mov $
mov.16b
, $
mov.8b
, $
pacia1716
paciasp
paciaz
pacib1716
pacibsp
pacibz
prfb
3, $
, [$
prfb
3, $
, [$
prfb
3, $
, [$
prfd
3, $
, [$
prfd
3, $
, [$
prfd
3, $
, [$
prfh
3, $
, [$
prfh
3, $
, [$
prfh
3, $
, [$
prfm $
4, [$
prfm $
4, [$
prfum
4, [$
prfw
3, $
, [$
prfw
3, $
, [$
prfw
3, $
, [$
ptrues
ptrues
ptrues
ptrues
ptrue
ptrue
ptrue
ptrue
ngcs $
ngc $
asr $
sxtb $
sxth $
sxtw $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
smull
smnegl
sqdecb
sqdecb
sqdecb
sqdecb
5, $
sqdecd
sqdecd
sqdecd
sqdecd
5, $
sqdecd
sqdecd
sqdech
sqdech
sqdech
sqdech
5, $
sqdech
sqdech
sqdecw
sqdecw
sqdecw
sqdecw
5, $
sqdecw
sqdecw
sqincb
sqincb
sqincb
sqincb
5, $
sqincd
sqincd
sqincd
sqincd
5, $
sqincd
sqincd
sqinch
sqinch
sqinch
sqinch
5, $
sqinch
sqinch
sqincw
sqincw
sqincw
sqincw
5, $
sqincw
sqincw
st1b
 , $
, [$
st1b
!, $
, [$
st1d
 , $
, [$
st1h
 , $
, [$
st1h
!, $
, [$
st1w
 , $
, [$
st1w
!, $
, [$
st1b
 , $
, [$
st1b
$, $
, [$
st1b
%, $
, [$
st1b
!, $
, [$
st1d
 , $
, [$
&, [$
], #64
', [$
], #32
(, [$
], #64
), [$
], #32
*, [$
], #32
+, [$
], #64
,, [$
], #32
-, [$
], #64
st1h
 , $
, [$
st1h
$, $
, [$
st1h
!, $
, [$
&, [$
], #16
', [$
], #8
(, [$
], #16
), [$
], #8
*, [$
], #8
+, [$
], #16
,, [$
], #8
-, [$
], #16
&, [$
], #48
', [$
], #24
(, [$
], #48
), [$
], #24
*, [$
], #24
+, [$
], #48
,, [$
], #24
-, [$
], #48
&, [$
], #32
', [$
], #16
(, [$
], #32
), [$
], #16
*, [$
], #16
+, [$
], #32
,, [$
], #16
-, [$
], #32
st1w
 , $
, [$
st1w
!, $
, [$
, [$
], #2
, [$
], #4
, [$
], #8
, [$
], #1
st2b
%, $
, [$
st2d
 , $
, [$
st2g
, [$
st2h
$, $
, [$
&, [$
], #32
(, [$
], #32
), [$
], #16
*, [$
], #16
+, [$
], #32
,, [$
], #16
-, [$
], #32
st2w
!, $
, [$
, [$
], #4
, [$
], #8
, [$
], #16
, [$
], #2
st3b
%, $
, [$
st3d
 , $
, [$
st3h
$, $
, [$
&, [$
], #48
(, [$
], #48
), [$
], #24
*, [$
], #24
+, [$
], #48
,, [$
], #24
-, [$
], #48
st3w
!, $
, [$
, [$
], #6
, [$
], #12
, [$
], #24
, [$
], #3
st4b
%, $
, [$
st4d
 , $
, [$
&, [$
], #64
(, [$
], #64
), [$
], #32
*, [$
], #32
+, [$
], #64
,, [$
], #32
-, [$
], #64
st4h
$, $
, [$
st4w
!, $
, [$
, [$
], #8
, [$
], #16
, [$
], #32
, [$
], #4
, [$
stgp
, [$
stlurb
, [$
stlurh
, [$
stlur
, [$
stnp
, [$
stnt1b
%, $
, [$
stnt1b
 , $
, [$
stnt1b
!, $
, [$
stnt1d
 , $
, [$
stnt1d
 , $
, [$
stnt1h
$, $
, [$
stnt1h
 , $
, [$
stnt1h
!, $
, [$
stnt1w
!, $
, [$
stnt1w
 , $
, [$
stnt1w
!, $
, [$
, [$
strb
, [$
strb
, [$
, [$
, [$
strh
, [$
strh
, [$
, [$
sttrb
, [$
sttrh
, [$
sttr
, [$
sturb
, [$
stur
, [$
sturh
, [$
stz2g
, [$
stzg
, [$
negs $
negs $
subs
neg $
neg $
sys $
6, $
6, $
lsr $
uxtb $
uxth $
uxtw $
umull
mov.s
mov.d
umnegl
uqdecb
uqdecb
uqdecd
uqdecd
uqdecd
uqdecd
uqdech
uqdech
uqdech
uqdech
uqdecw
uqdecw
uqdecw
uqdecw
uqincb
uqincb
uqincd
uqincd
uqincd
uqincd
uqinch
uqinch
uqinch
uqinch
uqincw
uqincw
uqincw
uqincw
xpaclri
G_FLOG10
FMOVD0
FMOVH0
FMOVS0
SHA512SU0
ST64BV0
ADR_LSL_ZZZ_D_0
ADR_SXTW_ZZZ_D_0
ADR_UXTW_ZZZ_D_0
ADR_LSL_ZZZ_S_0
G_TRN1
G_ZIP1
G_UZP1
DCPS1
SM3SS1
SHA512SU1
SM3PARTW1
RAX1
ADR_LSL_ZZZ_D_1
ADR_SXTW_ZZZ_D_1
ADR_UXTW_ZZZ_D_1
ADR_LSL_ZZZ_S_1
MSRpstateImm1
FABD32
FACGE32
FCMGE32
G_DUPLANE32
FCMEQ32
FRECPS32
FRSQRTS32
FACGT32
FCMGT32
G_REV32
FMULX32
CMP_SWAP_32
FCMLAv2f32
FMLAv2f32
FRINTAv2f32
FSUBv2f32
FABDv2f32
FCADDv2f32
FADDv2f32
FACGEv2f32
FCMGEv2f32
FRECPEv2f32
FRSQRTEv2f32
SCVTFv2f32
UCVTFv2f32
FNEGv2f32
FRINTIv2f32
FMULv2f32
FMINNMv2f32
FMAXNMv2f32
FRINTMv2f32
FMINv2f32
FRINTNv2f32
FCVTXNv2f32
FADDPv2f32
FMINNMPv2f32
FMAXNMPv2f32
FMINPv2f32
FRINTPv2f32
FMAXPv2f32
FCMEQv2f32
FCVTASv2f32
FABSv2f32
FMLSv2f32
FCVTMSv2f32
FCVTNSv2f32
FRECPSv2f32
FCVTPSv2f32
FRSQRTSv2f32
FCVTZSv2f32
FACGTv2f32
FCMGTv2f32
FSQRTv2f32
FCVTAUv2f32
FCVTMUv2f32
FCVTNUv2f32
FCVTPUv2f32
FCVTZUv2f32
FDIVv2f32
FRINT32Xv2f32
FRINT64Xv2f32
FMAXv2f32
FMULXv2f32
FRINTXv2f32
FRINT32Zv2f32
FRINT64Zv2f32
FRINTZv2f32
FCMLAv4f32
FMLAv4f32
FRINTAv4f32
FSUBv4f32
FABDv4f32
FCADDv4f32
FADDv4f32
FACGEv4f32
FCMGEv4f32
FRECPEv4f32
FRSQRTEv4f32
SCVTFv4f32
UCVTFv4f32
FNEGv4f32
FRINTIv4f32
FMULv4f32
FMINNMv4f32
FMAXNMv4f32
FRINTMv4f32
FMINv4f32
FRINTNv4f32
FCVTXNv4f32
FADDPv4f32
FMINNMPv4f32
FMAXNMPv4f32
FMINPv4f32
FRINTPv4f32
FMAXPv4f32
FCMEQv4f32
FCVTASv4f32
FABSv4f32
FMLSv4f32
FCVTMSv4f32
FCVTNSv4f32
FRECPSv4f32
FCVTPSv4f32
FRSQRTSv4f32
FCVTZSv4f32
FACGTv4f32
FCMGTv4f32
FSQRTv4f32
FCVTAUv4f32
FCVTMUv4f32
FCVTNUv4f32
FCVTPUv4f32
FCVTZUv4f32
FDIVv4f32
FRINT32Xv4f32
FRINT64Xv4f32
FMAXv4f32
FMULXv4f32
FRINTXv4f32
FRINT32Zv4f32
FRINT64Zv4f32
FRINTZv4f32
LD1i32
ST1i32
SQSUBv1i32
UQSUBv1i32
USQADDv1i32
SUQADDv1i32
FRECPEv1i32
FRSQRTEv1i32
SCVTFv1i32
UCVTFv1i32
SQNEGv1i32
SQRDMLAHv1i32
SQDMULHv1i32
SQRDMULHv1i32
SQRDMLSHv1i32
SQSHLv1i32
UQSHLv1i32
SQRSHLv1i32
UQRSHLv1i32
SQXTNv1i32
UQXTNv1i32
SQXTUNv1i32
FCVTASv1i32
SQABSv1i32
FCVTMSv1i32
FCVTNSv1i32
FCVTPSv1i32
FCVTZSv1i32
FCVTAUv1i32
FCVTMUv1i32
FCVTNUv1i32
FCVTPUv1i32
FCVTZUv1i32
FRECPXv1i32
LD2i32
ST2i32
TRN1v2i32
ZIP1v2i32
UZP1v2i32
TRN2v2i32
ZIP2v2i32
UZP2v2i32
REV64v2i32
SABAv2i32
UABAv2i32
MLAv2i32
SHSUBv2i32
UHSUBv2i32
SQSUBv2i32
UQSUBv2i32
BICv2i32
SABDv2i32
UABDv2i32
SRHADDv2i32
URHADDv2i32
SHADDv2i32
UHADDv2i32
USQADDv2i32
SUQADDv2i32
CMGEv2i32
URECPEv2i32
URSQRTEv2i32
SQNEGv2i32
SQRDMLAHv2i32
SQDMULHv2i32
SQRDMULHv2i32
SQRDMLSHv2i32
CMHIv2i32
MVNIv2i32
MOVIv2i32
SQSHLv2i32
UQSHLv2i32
SQRSHLv2i32
UQRSHLv2i32
SRSHLv2i32
URSHLv2i32
SSHLv2i32
USHLv2i32
SHLLv2i32
FCVTLv2i32
MULv2i32
SMINv2i32
UMINv2i32
FCVTNv2i32
SQXTNv2i32
UQXTNv2i32
SQXTUNv2i32
ADDPv2i32
SMINPv2i32
UMINPv2i32
SMAXPv2i32
UMAXPv2i32
CMEQv2i32
ORRv2i32
SQABSv2i32
CMHSv2i32
CLSv2i32
MLSv2i32
CMGTv2i32
CMTSTv2i32
SMAXv2i32
UMAXv2i32
CLZv2i32
RSUBHNv2i64_v2i32
RADDHNv2i64_v2i32
SADALPv4i16_v2i32
UADALPv4i16_v2i32
SADDLPv4i16_v2i32
UADDLPv4i16_v2i32
LD3i32
ST3i32
LD4i32
ST4i32
TRN1v4i32
ZIP1v4i32
UZP1v4i32
TRN2v4i32
ZIP2v4i32
UZP2v4i32
REV64v4i32
SABAv4i32
UABAv4i32
MLAv4i32
SHSUBv4i32
UHSUBv4i32
SQSUBv4i32
UQSUBv4i32
BICv4i32
SABDv4i32
UABDv4i32
SRHADDv4i32
URHADDv4i32
SHADDv4i32
UHADDv4i32
USQADDv4i32
SUQADDv4i32
CMGEv4i32
URECPEv4i32
URSQRTEv4i32
SQNEGv4i32
SQRDMLAHv4i32
SQDMULHv4i32
SQRDMULHv4i32
SQRDMLSHv4i32
CMHIv4i32
MVNIv4i32
MOVIv4i32
SQSHLv4i32
UQSHLv4i32
SQRSHLv4i32
UQRSHLv4i32
SRSHLv4i32
URSHLv4i32
SSHLv4i32
USHLv4i32
SHLLv4i32
FCVTLv4i32
MULv4i32
SMINv4i32
UMINv4i32
FCVTNv4i32
SQXTNv4i32
UQXTNv4i32
SQXTUNv4i32
ADDPv4i32
SMINPv4i32
UMINPv4i32
SMAXPv4i32
UMAXPv4i32
CMEQv4i32
ORRv4i32
SQABSv4i32
CMHSv4i32
CLSv4i32
MLSv4i32
CMGTv4i32
CMTSTv4i32
SMAXv4i32
UMAXv4i32
CLZv4i32
RSUBHNv2i64_v4i32
RADDHNv2i64_v4i32
SABALv4i16_v4i32
UABALv4i16_v4i32
SQDMLALv4i16_v4i32
SMLALv4i16_v4i32
UMLALv4i16_v4i32
SSUBLv4i16_v4i32
USUBLv4i16_v4i32
SABDLv4i16_v4i32
UABDLv4i16_v4i32
SADDLv4i16_v4i32
UADDLv4i16_v4i32
SQDMULLv4i16_v4i32
SMULLv4i16_v4i32
UMULLv4i16_v4i32
SQDMLSLv4i16_v4i32
SMLSLv4i16_v4i32
UMLSLv4i16_v4i32
SSUBWv4i16_v4i32
USUBWv4i16_v4i32
SADDWv4i16_v4i32
UADDWv4i16_v4i32
SABALv8i16_v4i32
UABALv8i16_v4i32
SQDMLALv8i16_v4i32
SMLALv8i16_v4i32
UMLALv8i16_v4i32
SSUBLv8i16_v4i32
USUBLv8i16_v4i32
SABDLv8i16_v4i32
UABDLv8i16_v4i32
SADDLv8i16_v4i32
UADDLv8i16_v4i32
SQDMULLv8i16_v4i32
SMULLv8i16_v4i32
UMULLv8i16_v4i32
SQDMLSLv8i16_v4i32
SMLSLv8i16_v4i32
UMLSLv8i16_v4i32
SADALPv8i16_v4i32
UADALPv8i16_v4i32
SADDLPv8i16_v4i32
UADDLPv8i16_v4i32
SSUBWv8i16_v4i32
USUBWv8i16_v4i32
SADDWv8i16_v4i32
UADDWv8i16_v4i32
SQDMLALi32
SQDMULLi32
SQDMLSLi32
CPYi32
UMOVvi32
SMOVvi16to32
SMOVvi8to32
JumpTableDest32
G_FLOG2
SHA512H2
G_TRN2
BFCVTN2
G_ZIP2
G_FEXP2
G_UZP2
DCPS2
SM3PARTW2
ADR_LSL_ZZZ_D_2
ADR_SXTW_ZZZ_D_2
ADR_UXTW_ZZZ_D_2
ADR_LSL_ZZZ_S_2
EOR3
DCPS3
ADR_LSL_ZZZ_D_3
ADR_SXTW_ZZZ_D_3
ADR_UXTW_ZZZ_D_3
ADR_LSL_ZZZ_S_3
FABD64
FACGE64
FCMGE64
G_DUPLANE64
FCMEQ64
FRECPS64
FRSQRTS64
FACGT64
FCMGT64
G_REV64
FMULX64
CMP_SWAP_64
FCMLAv2f64
FMLAv2f64
FRINTAv2f64
FSUBv2f64
FABDv2f64
FCADDv2f64
FADDv2f64
FACGEv2f64
FCMGEv2f64
FRECPEv2f64
FRSQRTEv2f64
SCVTFv2f64
UCVTFv2f64
FNEGv2f64
FRINTIv2f64
FMULv2f64
FMINNMv2f64
FMAXNMv2f64
FRINTMv2f64
FMINv2f64
FRINTNv2f64
FADDPv2f64
FMINNMPv2f64
FMAXNMPv2f64
FMINPv2f64
FRINTPv2f64
FMAXPv2f64
FCMEQv2f64
FCVTASv2f64
FABSv2f64
FMLSv2f64
FCVTMSv2f64
FCVTNSv2f64
FRECPSv2f64
FCVTPSv2f64
FRSQRTSv2f64
FCVTZSv2f64
FACGTv2f64
FCMGTv2f64
FSQRTv2f64
FCVTAUv2f64
FCVTMUv2f64
FCVTNUv2f64
FCVTPUv2f64
FCVTZUv2f64
FDIVv2f64
FRINT32Xv2f64
FRINT64Xv2f64
FMAXv2f64
FMULXv2f64
FRINTXv2f64
FRINT32Zv2f64
FRINT64Zv2f64
FRINTZv2f64
LD1i64
ST1i64
SQSUBv1i64
UQSUBv1i64
USQADDv1i64
SUQADDv1i64
CMGEv1i64
FRECPEv1i64
FRSQRTEv1i64
SCVTFv1i64
UCVTFv1i64
SQNEGv1i64
CMHIv1i64
SQSHLv1i64
UQSHLv1i64
SQRSHLv1i64
UQRSHLv1i64
SRSHLv1i64
URSHLv1i64
SSHLv1i64
USHLv1i64
PMULLv1i64
FCVTXNv1i64
CMEQv1i64
FCVTASv1i64
SQABSv1i64
CMHSv1i64
FCVTMSv1i64
FCVTNSv1i64
FCVTPSv1i64
FCVTZSv1i64
CMGTv1i64
CMTSTv1i64
FCVTAUv1i64
FCVTMUv1i64
FCVTNUv1i64
FCVTPUv1i64
FCVTZUv1i64
FRECPXv1i64
SADALPv2i32_v1i64
UADALPv2i32_v1i64
SADDLPv2i32_v1i64
UADDLPv2i32_v1i64
LD2i64
ST2i64
TRN1v2i64
ZIP1v2i64
UZP1v2i64
TRN2v2i64
ZIP2v2i64
UZP2v2i64
SQSUBv2i64
UQSUBv2i64
USQADDv2i64
SUQADDv2i64
CMGEv2i64
SQNEGv2i64
CMHIv2i64
SQSHLv2i64
UQSHLv2i64
SQRSHLv2i64
UQRSHLv2i64
SRSHLv2i64
URSHLv2i64
SSHLv2i64
USHLv2i64
PMULLv2i64
ADDPv2i64
CMEQv2i64
SQABSv2i64
CMHSv2i64
CMGTv2i64
CMTSTv2i64
SABALv2i32_v2i64
UABALv2i32_v2i64
SQDMLALv2i32_v2i64
SMLALv2i32_v2i64
UMLALv2i32_v2i64
SSUBLv2i32_v2i64
USUBLv2i32_v2i64
SABDLv2i32_v2i64
UABDLv2i32_v2i64
SADDLv2i32_v2i64
UADDLv2i32_v2i64
SQDMULLv2i32_v2i64
SMULLv2i32_v2i64
UMULLv2i32_v2i64
SQDMLSLv2i32_v2i64
SMLSLv2i32_v2i64
UMLSLv2i32_v2i64
SSUBWv2i32_v2i64
USUBWv2i32_v2i64
SADDWv2i32_v2i64
UADDWv2i32_v2i64
SABALv4i32_v2i64
UABALv4i32_v2i64
SQDMLALv4i32_v2i64
SMLALv4i32_v2i64
UMLALv4i32_v2i64
SSUBLv4i32_v2i64
USUBLv4i32_v2i64
SABDLv4i32_v2i64
UABDLv4i32_v2i64
SADDLv4i32_v2i64
UADDLv4i32_v2i64
SQDMULLv4i32_v2i64
SMULLv4i32_v2i64
UMULLv4i32_v2i64
SQDMLSLv4i32_v2i64
SMLSLv4i32_v2i64
UMLSLv4i32_v2i64
SADALPv4i32_v2i64
UADALPv4i32_v2i64
SADDLPv4i32_v2i64
UADDLPv4i32_v2i64
SSUBWv4i32_v2i64
USUBWv4i32_v2i64
SADDWv4i32_v2i64
UADDWv4i32_v2i64
LD3i64
ST3i64
LD4i64
ST4i64
CPYi64
UMOVvi64
SMOVvi32to64
SMOVvi16to64
SMOVvi8to64
SUBXrx64
ADDXrx64
SUBSXrx64
ADDSXrx64
MSRpstateImm4
PACIA1716
AUTIA1716
PACIB1716
AUTIB1716
FABD16
FACGE16
FCMGE16
G_DUPLANE16
SETF16
FCMEQ16
FRECPS16
FRSQRTS16
FACGT16
FCMGT16
G_REV16
FMULX16
CMP_SWAP_16
FRECPEv1f16
FRSQRTEv1f16
FCVTASv1f16
FCVTMSv1f16
FCVTNSv1f16
FCVTPSv1f16
FCVTZSv1f16
FCVTAUv1f16
FCVTMUv1f16
FCVTNUv1f16
FCVTPUv1f16
FCVTZUv1f16
FRECPXv1f16
FMLAL2v4f16
FMLSL2v4f16
FCMLAv4f16
FMLAv4f16
FRINTAv4f16
FSUBv4f16
FABDv4f16
FCADDv4f16
FADDv4f16
FACGEv4f16
FCMGEv4f16
FRECPEv4f16
FRSQRTEv4f16
SCVTFv4f16
UCVTFv4f16
FNEGv4f16
FRINTIv4f16
FMLALv4f16
FMLSLv4f16
FMULv4f16
FMINNMv4f16
FMAXNMv4f16
FRINTMv4f16
FMINv4f16
FRINTNv4f16
FADDPv4f16
FMINNMPv4f16
FMAXNMPv4f16
FMINPv4f16
FRINTPv4f16
FMAXPv4f16
FCMEQv4f16
FCVTASv4f16
FABSv4f16
FMLSv4f16
FCVTMSv4f16
FCVTNSv4f16
FRECPSv4f16
FCVTPSv4f16
FRSQRTSv4f16
FCVTZSv4f16
FACGTv4f16
FCMGTv4f16
FSQRTv4f16
FCVTAUv4f16
FCVTMUv4f16
FCVTNUv4f16
FCVTPUv4f16
FCVTZUv4f16
FDIVv4f16
FMAXv4f16
FMULXv4f16
FRINTXv4f16
FRINTZv4f16
FMLAL2lanev4f16
FMLSL2lanev4f16
FMLALlanev4f16
FMLSLlanev4f16
FMLAL2v8f16
FMLSL2v8f16
FCMLAv8f16
FMLAv8f16
FRINTAv8f16
FSUBv8f16
FABDv8f16
FCADDv8f16
FADDv8f16
FACGEv8f16
FCMGEv8f16
FRECPEv8f16
FRSQRTEv8f16
SCVTFv8f16
UCVTFv8f16
FNEGv8f16
FRINTIv8f16
FMLALv8f16
FMLSLv8f16
FMULv8f16
FMINNMv8f16
FMAXNMv8f16
FRINTMv8f16
FMINv8f16
FRINTNv8f16
FADDPv8f16
FMINNMPv8f16
FMAXNMPv8f16
FMINPv8f16
FRINTPv8f16
FMAXPv8f16
FCMEQv8f16
FCVTASv8f16
FABSv8f16
FMLSv8f16
FCVTMSv8f16
FCVTNSv8f16
FRECPSv8f16
FCVTPSv8f16
FRSQRTSv8f16
FCVTZSv8f16
FACGTv8f16
FCMGTv8f16
FSQRTv8f16
FCVTAUv8f16
FCVTMUv8f16
FCVTNUv8f16
FCVTPUv8f16
FCVTZUv8f16
FDIVv8f16
FMAXv8f16
FMULXv8f16
FRINTXv8f16
FRINTZv8f16
FMLAL2lanev8f16
FMLSL2lanev8f16
FMLALlanev8f16
FMLSLlanev8f16
BFDOTv4bf16
BF16DOTlanev4bf16
BFDOTv8bf16
BF16DOTlanev8bf16
LD1i16
ST1i16
SQSUBv1i16
UQSUBv1i16
USQADDv1i16
SUQADDv1i16
SCVTFv1i16
UCVTFv1i16
SQNEGv1i16
SQRDMLAHv1i16
SQDMULHv1i16
SQRDMULHv1i16
SQRDMLSHv1i16
SQSHLv1i16
UQSHLv1i16
SQRSHLv1i16
UQRSHLv1i16
SQXTNv1i16
UQXTNv1i16
SQXTUNv1i16
SQABSv1i16
LD2i16
ST2i16
LD3i16
ST3i16
LD4i16
ST4i16
TRN1v4i16
ZIP1v4i16
UZP1v4i16
REV32v4i16
TRN2v4i16
ZIP2v4i16
UZP2v4i16
REV64v4i16
SABAv4i16
UABAv4i16
MLAv4i16
SHSUBv4i16
UHSUBv4i16
SQSUBv4i16
UQSUBv4i16
BICv4i16
SABDv4i16
UABDv4i16
SRHADDv4i16
URHADDv4i16
SHADDv4i16
UHADDv4i16
USQADDv4i16
SUQADDv4i16
CMGEv4i16
SQNEGv4i16
SQRDMLAHv4i16
SQDMULHv4i16
SQRDMULHv4i16
SQRDMLSHv4i16
CMHIv4i16
MVNIv4i16
MOVIv4i16
SQSHLv4i16
UQSHLv4i16
SQRSHLv4i16
UQRSHLv4i16
SRSHLv4i16
URSHLv4i16
SSHLv4i16
USHLv4i16
SHLLv4i16
FCVTLv4i16
MULv4i16
SMINv4i16
UMINv4i16
FCVTNv4i16
SQXTNv4i16
UQXTNv4i16
SQXTUNv4i16
ADDPv4i16
SMINPv4i16
UMINPv4i16
SMAXPv4i16
UMAXPv4i16
CMEQv4i16
ORRv4i16
SQABSv4i16
CMHSv4i16
CLSv4i16
MLSv4i16
CMGTv4i16
CMTSTv4i16
SMAXv4i16
UMAXv4i16
CLZv4i16
RSUBHNv4i32_v4i16
RADDHNv4i32_v4i16
SADALPv8i8_v4i16
UADALPv8i8_v4i16
SADDLPv8i8_v4i16
UADDLPv8i8_v4i16
TRN1v8i16
ZIP1v8i16
UZP1v8i16
REV32v8i16
TRN2v8i16
ZIP2v8i16
UZP2v8i16
REV64v8i16
SABAv8i16
UABAv8i16
MLAv8i16
SHSUBv8i16
UHSUBv8i16
SQSUBv8i16
UQSUBv8i16
BICv8i16
SABDv8i16
UABDv8i16
SRHADDv8i16
URHADDv8i16
SHADDv8i16
UHADDv8i16
USQADDv8i16
SUQADDv8i16
CMGEv8i16
SQNEGv8i16
SQRDMLAHv8i16
SQDMULHv8i16
SQRDMULHv8i16
SQRDMLSHv8i16
CMHIv8i16
MVNIv8i16
MOVIv8i16
SQSHLv8i16
UQSHLv8i16
SQRSHLv8i16
UQRSHLv8i16
SRSHLv8i16
URSHLv8i16
SSHLv8i16
USHLv8i16
SHLLv8i16
FCVTLv8i16
MULv8i16
SMINv8i16
UMINv8i16
FCVTNv8i16
SQXTNv8i16
UQXTNv8i16
SQXTUNv8i16
ADDPv8i16
SMINPv8i16
UMINPv8i16
SMAXPv8i16
UMAXPv8i16
CMEQv8i16
ORRv8i16
SQABSv8i16
CMHSv8i16
CLSv8i16
MLSv8i16
CMGTv8i16
CMTSTv8i16
SMAXv8i16
UMAXv8i16
CLZv8i16
RSUBHNv4i32_v8i16
RADDHNv4i32_v8i16
SABALv16i8_v8i16
UABALv16i8_v8i16
SMLALv16i8_v8i16
UMLALv16i8_v8i16
SSUBLv16i8_v8i16
USUBLv16i8_v8i16
SABDLv16i8_v8i16
UABDLv16i8_v8i16
SADDLv16i8_v8i16
UADDLv16i8_v8i16
SMULLv16i8_v8i16
UMULLv16i8_v8i16
SMLSLv16i8_v8i16
UMLSLv16i8_v8i16
SADALPv16i8_v8i16
UADALPv16i8_v8i16
SADDLPv16i8_v8i16
UADDLPv16i8_v8i16
SSUBWv16i8_v8i16
USUBWv16i8_v8i16
SADDWv16i8_v8i16
UADDWv16i8_v8i16
SABALv8i8_v8i16
UABALv8i8_v8i16
SMLALv8i8_v8i16
UMLALv8i8_v8i16
SSUBLv8i8_v8i16
USUBLv8i8_v8i16
SABDLv8i8_v8i16
UABDLv8i8_v8i16
SADDLv8i8_v8i16
UADDLv8i8_v8i16
SMULLv8i8_v8i16
UMULLv8i8_v8i16
SMLSLv8i8_v8i16
UMLSLv8i8_v8i16
SSUBWv8i8_v8i16
USUBWv8i8_v8i16
SADDWv8i8_v8i16
UADDWv8i8_v8i16
SQDMLALi16
SQDMULLi16
SQDMLSLi16
CPYi16
UMOVvi16
JumpTableDest16
CMP_SWAP_128
G_DUPLANE8
SETF8
CMP_SWAP_8
LD1i8
ST1i8
SQSUBv1i8
UQSUBv1i8
USQADDv1i8
SUQADDv1i8
SQNEGv1i8
SQSHLv1i8
UQSHLv1i8
SQRSHLv1i8
UQRSHLv1i8
SQXTNv1i8
UQXTNv1i8
SQXTUNv1i8
SQABSv1i8
LD2i8
ST2i8
LD3i8
ST3i8
LD4i8
ST4i8
TRN1v16i8
ZIP1v16i8
UZP1v16i8
REV32v16i8
TRN2v16i8
ZIP2v16i8
UZP2v16i8
REV64v16i8
REV16v16i8
SABAv16i8
UABAv16i8
MLAv16i8
SHSUBv16i8
UHSUBv16i8
SQSUBv16i8
UQSUBv16i8
BICv16i8
SABDv16i8
UABDv16i8
SRHADDv16i8
URHADDv16i8
SHADDv16i8
UHADDv16i8
USQADDv16i8
SUQADDv16i8
ANDv16i8
CMGEv16i8
BIFv16i8
SQNEGv16i8
CMHIv16i8
SQSHLv16i8
UQSHLv16i8
SQRSHLv16i8
UQRSHLv16i8
SRSHLv16i8
URSHLv16i8
SSHLv16i8
USHLv16i8
SHLLv16i8
PMULLv16i8
BSLv16i8
PMULv16i8
SMINv16i8
UMINv16i8
ORNv16i8
SQXTNv16i8
UQXTNv16i8
SQXTUNv16i8
ADDPv16i8
SMINPv16i8
UMINPv16i8
BSPv16i8
SMAXPv16i8
UMAXPv16i8
CMEQv16i8
EORv16i8
ORRv16i8
SQABSv16i8
CMHSv16i8
CLSv16i8
MLSv16i8
CMGTv16i8
RBITv16i8
CNTv16i8
USDOTv16i8
UDOTv16i8
NOTv16i8
CMTSTv16i8
EXTv16i8
SMAXv16i8
UMAXv16i8
CLZv16i8
RSUBHNv8i16_v16i8
RADDHNv8i16_v16i8
USDOTlanev16i8
SUDOTlanev16i8
TRN1v8i8
ZIP1v8i8
UZP1v8i8
REV32v8i8
TRN2v8i8
ZIP2v8i8
UZP2v8i8
REV64v8i8
REV16v8i8
SABAv8i8
UABAv8i8
MLAv8i8
SHSUBv8i8
UHSUBv8i8
SQSUBv8i8
UQSUBv8i8
BICv8i8
SABDv8i8
UABDv8i8
SRHADDv8i8
URHADDv8i8
SHADDv8i8
UHADDv8i8
USQADDv8i8
SUQADDv8i8
ANDv8i8
CMGEv8i8
BIFv8i8
SQNEGv8i8
CMHIv8i8
SQSHLv8i8
UQSHLv8i8
SQRSHLv8i8
UQRSHLv8i8
SRSHLv8i8
URSHLv8i8
SSHLv8i8
USHLv8i8
SHLLv8i8
PMULLv8i8
BSLv8i8
PMULv8i8
SMINv8i8
UMINv8i8
ORNv8i8
SQXTNv8i8
UQXTNv8i8
SQXTUNv8i8
ADDPv8i8
SMINPv8i8
UMINPv8i8
BSPv8i8
SMAXPv8i8
UMAXPv8i8
CMEQv8i8
EORv8i8
ORRv8i8
SQABSv8i8
CMHSv8i8
CLSv8i8
MLSv8i8
CMGTv8i8
RBITv8i8
CNTv8i8
USDOTv8i8
UDOTv8i8
NOTv8i8
CMTSTv8i8
EXTv8i8
SMAXv8i8
UMAXv8i8
CLZv8i8
RSUBHNv8i16_v8i8
RADDHNv8i16_v8i8
USDOTlanev8i8
SUDOTlanev8i8
CPYi8
UMOVvi8
JumpTableDest8
SM3TT1A
SM3TT2A
BRAA
BLRAA
ERETAA
MOVaddrBA
PACDA
AUTDA
PACGA
PACIA
AUTIA
BFMMLA
USMMLA
UMMLA
G_FMA
G_STRICT_FMA
LDRA
BLRA
PACDZA
AUTDZA
PACIZA
AUTIZA
LD1B
LDFF1B
ST1B
SM3TT1B
LD2B
ST2B
SM3TT2B
LD3B
ST3B
LD64B
ST64B
LD4B
ST4B
LDADDAB
LDSMINAB
LDUMINAB
SWPAB
BRAB
BLRAB
LDCLRAB
LDEORAB
CASAB
ERETAB
LDSETAB
LDSMAXAB
LDUMAXAB
SpeculationBarrierISBDSBEndBB
SpeculationBarrierSBEndBB
PACDB
LDADDB
AUTDB
PACIB
AUTIB
LDADDALB
BFMLALB
LDSMINALB
LDUMINALB
SWPALB
LDCLRALB
LDEORALB
CASALB
LDSETALB
LDSMAXALB
LDUMAXALB
LDADDLB
LDSMINLB
LDUMINLB
SWPLB
LDCLRLB
LDEORLB
CASLB
LDSETLB
LDSMAXLB
LDUMAXLB
LDSMINB
LDUMINB
SWPB
LDARB
LDLARB
LDCLRB
STLLRB
STLRB
LDEORB
LDAPRB
LDAXRB
LDXRB
STLXRB
STXRB
CASB
LDSETB
G_FSUB
G_STRICT_FSUB
G_ATOMICRMW_FSUB
G_SUB
G_ATOMICRMW_SUB
LDSMAXB
LDUMAXB
PACDZB
AUTDZB
PACIZB
AUTIZB
PTRUE_B
LSL_ZPZI_UNDEF_B
ASR_ZPZI_UNDEF_B
LSR_ZPZI_UNDEF_B
SUB_ZPZZ_UNDEF_B
ADD_ZPZZ_UNDEF_B
LSL_ZPZZ_UNDEF_B
MUL_ZPZZ_UNDEF_B
SMIN_ZPZZ_UNDEF_B
UMIN_ZPZZ_UNDEF_B
ASR_ZPZZ_UNDEF_B
LSR_ZPZZ_UNDEF_B
SMAX_ZPZZ_UNDEF_B
UMAX_ZPZZ_UNDEF_B
INDEX_II_B
INDEX_RI_B
XAR_ZZZI_B
SRSRA_ZZI_B
URSRA_ZZI_B
SSRA_ZZI_B
USRA_ZZI_B
SQSHRNB_ZZI_B
UQSHRNB_ZZI_B
SQRSHRNB_ZZI_B
UQRSHRNB_ZZI_B
SQSHRUNB_ZZI_B
SQRSHRUNB_ZZI_B
SQCADD_ZZI_B
SLI_ZZI_B
SRI_ZZI_B
LSL_ZZI_B
DUP_ZZI_B
ASR_ZZI_B
LSR_ZZI_B
SQSHRNT_ZZI_B
UQSHRNT_ZZI_B
SQRSHRNT_ZZI_B
UQRSHRNT_ZZI_B
SQSHRUNT_ZZI_B
SQRSHRUNT_ZZI_B
EXT_ZZI_B
SQSUB_ZI_B
UQSUB_ZI_B
SQADD_ZI_B
UQADD_ZI_B
MUL_ZI_B
SMIN_ZI_B
UMIN_ZI_B
DUP_ZI_B
SUBR_ZI_B
SMAX_ZI_B
UMAX_ZI_B
CMPGE_PPzZI_B
CMPLE_PPzZI_B
CMPNE_PPzZI_B
CMPHI_PPzZI_B
CMPLO_PPzZI_B
CMPEQ_PPzZI_B
CMPHS_PPzZI_B
CMPLS_PPzZI_B
CMPGT_PPzZI_B
CMPLT_PPzZI_B
ASRD_ZPmI_B
SQSHL_ZPmI_B
UQSHL_ZPmI_B
LSL_ZPmI_B
SRSHR_ZPmI_B
URSHR_ZPmI_B
ASR_ZPmI_B
LSR_ZPmI_B
SQSHLU_ZPmI_B
CPY_ZPmI_B
CPY_ZPzI_B
LD1RO_B
ASRD_ZPZI_ZERO_B
SQSHL_ZPZI_ZERO_B
UQSHL_ZPZI_ZERO_B
SRSHR_ZPZI_ZERO_B
URSHR_ZPZI_ZERO_B
SQSHLU_ZPZI_ZERO_B
SUB_ZPZZ_ZERO_B
ADD_ZPZZ_ZERO_B
LSL_ZPZZ_ZERO_B
SUBR_ZPZZ_ZERO_B
ASR_ZPZZ_ZERO_B
LSR_ZPZZ_ZERO_B
TRN1_PPP_B
ZIP1_PPP_B
UZP1_PPP_B
TRN2_PPP_B
ZIP2_PPP_B
UZP2_PPP_B
CNTP_XPP_B
REV_PP_B
UQDECP_WP_B
UQINCP_WP_B
SQDECP_XP_B
UQDECP_XP_B
SQINCP_XP_B
UQINCP_XP_B
LD1RQ_B
INDEX_IR_B
INDEX_RR_B
DUP_ZR_B
INSR_ZR_B
CPY_ZPmR_B
PTRUES_B
PFIRST_B
PNEXT_B
INSR_ZV_B
CPY_ZPmV_B
WHILEGE_PWW_B
WHILELE_PWW_B
WHILEHI_PWW_B
WHILELO_PWW_B
WHILEHS_PWW_B
WHILELS_PWW_B
WHILEGT_PWW_B
WHILELT_PWW_B
WHILEGE_PXX_B
WHILELE_PXX_B
WHILEHI_PXX_B
WHILELO_PXX_B
WHILEWR_PXX_B
WHILEHS_PXX_B
WHILELS_PXX_B
WHILEGT_PXX_B
WHILELT_PXX_B
WHILERW_PXX_B
CLASTA_RPZ_B
CLASTB_RPZ_B
CLASTA_VPZ_B
CLASTB_VPZ_B
SADDV_VPZ_B
UADDV_VPZ_B
ANDV_VPZ_B
SMINV_VPZ_B
UMINV_VPZ_B
EORV_VPZ_B
SMAXV_VPZ_B
UMAXV_VPZ_B
CLASTA_ZPZ_B
CLASTB_ZPZ_B
SPLICE_ZPZ_B
SPLICE_ZPZZ_B
SEL_ZPZZ_B
TBL_ZZZZ_B
TRN1_ZZZ_B
ZIP1_ZZZ_B
UZP1_ZZZ_B
TRN2_ZZZ_B
ZIP2_ZZZ_B
UZP2_ZZZ_B
SABA_ZZZ_B
UABA_ZZZ_B
CMLA_ZZZ_B
RSUBHNB_ZZZ_B
RADDHNB_ZZZ_B
EORTB_ZZZ_B
SQSUB_ZZZ_B
UQSUB_ZZZ_B
SQADD_ZZZ_B
UQADD_ZZZ_B
AESD_ZZZ_B
LSL_WIDE_ZZZ_B
ASR_WIDE_ZZZ_B
LSR_WIDE_ZZZ_B
AESE_ZZZ_B
SQRDCMLAH_ZZZ_B
SQRDMLAH_ZZZ_B
SQDMULH_ZZZ_B
SQRDMULH_ZZZ_B
SMULH_ZZZ_B
UMULH_ZZZ_B
SQRDMLSH_ZZZ_B
TBL_ZZZ_B
PMUL_ZZZ_B
BDEP_ZZZ_B
BGRP_ZZZ_B
EORBT_ZZZ_B
RSUBHNT_ZZZ_B
RADDHNT_ZZZ_B
BEXT_ZZZ_B
TBX_ZZZ_B
SQXTNB_ZZ_B
UQXTNB_ZZ_B
SQXTUNB_ZZ_B
AESIMC_ZZ_B
AESMC_ZZ_B
SQXTNT_ZZ_B
UQXTNT_ZZ_B
SQXTUNT_ZZ_B
REV_ZZ_B
MLA_ZPmZZ_B
MSB_ZPmZZ_B
MAD_ZPmZZ_B
MLS_ZPmZZ_B
CMPGE_WIDE_PPzZZ_B
CMPLE_WIDE_PPzZZ_B
CMPNE_WIDE_PPzZZ_B
CMPHI_WIDE_PPzZZ_B
CMPLO_WIDE_PPzZZ_B
CMPEQ_WIDE_PPzZZ_B
CMPHS_WIDE_PPzZZ_B
CMPLS_WIDE_PPzZZ_B
CMPGT_WIDE_PPzZZ_B
CMPLT_WIDE_PPzZZ_B
CMPGE_PPzZZ_B
CMPNE_PPzZZ_B
NMATCH_PPzZZ_B
CMPHI_PPzZZ_B
CMPEQ_PPzZZ_B
CMPHS_PPzZZ_B
CMPGT_PPzZZ_B
SHSUB_ZPmZ_B
UHSUB_ZPmZ_B
SQSUB_ZPmZ_B
UQSUB_ZPmZ_B
BIC_ZPmZ_B
SABD_ZPmZ_B
UABD_ZPmZ_B
SRHADD_ZPmZ_B
URHADD_ZPmZ_B
SHADD_ZPmZ_B
UHADD_ZPmZ_B
USQADD_ZPmZ_B
SUQADD_ZPmZ_B
AND_ZPmZ_B
LSL_WIDE_ZPmZ_B
ASR_WIDE_ZPmZ_B
LSR_WIDE_ZPmZ_B
SQNEG_ZPmZ_B
SMULH_ZPmZ_B
UMULH_ZPmZ_B
SQSHL_ZPmZ_B
UQSHL_ZPmZ_B
SQRSHL_ZPmZ_B
UQRSHL_ZPmZ_B
SRSHL_ZPmZ_B
URSHL_ZPmZ_B
LSL_ZPmZ_B
MUL_ZPmZ_B
SMIN_ZPmZ_B
UMIN_ZPmZ_B
ADDP_ZPmZ_B
SMINP_ZPmZ_B
UMINP_ZPmZ_B
SMAXP_ZPmZ_B
UMAXP_ZPmZ_B
SHSUBR_ZPmZ_B
UHSUBR_ZPmZ_B
SQSUBR_ZPmZ_B
UQSUBR_ZPmZ_B
SQSHLR_ZPmZ_B
UQSHLR_ZPmZ_B
SQRSHLR_ZPmZ_B
UQRSHLR_ZPmZ_B
SRSHLR_ZPmZ_B
URSHLR_ZPmZ_B
LSLR_ZPmZ_B
EOR_ZPmZ_B
ORR_ZPmZ_B
ASRR_ZPmZ_B
LSRR_ZPmZ_B
ASR_ZPmZ_B
LSR_ZPmZ_B
SQABS_ZPmZ_B
CLS_ZPmZ_B
RBIT_ZPmZ_B
CNT_ZPmZ_B
CNOT_ZPmZ_B
SMAX_ZPmZ_B
UMAX_ZPmZ_B
MOVPRFX_ZPmZ_B
CLZ_ZPmZ_B
MOVPRFX_ZPzZ_B
SQDECP_XPWd_B
SQINCP_XPWd_B
AUTPAC
MOVaddrPAC
LOADgotPAC
G_INTRINSIC
G_FPTRUNC
G_INTRINSIC_TRUNC
G_TRUNC
G_BUILD_VECTOR_TRUNC
G_DYN_STACKALLOC
GLD1D
GLDFF1D
ST1D
LD2D
ST2D
LD3D
ST3D
LD4D
ST4D
G_FMAD
G_INDEXED_SEXTLOAD
G_SEXTLOAD
G_INDEXED_ZEXTLOAD
G_ZEXTLOAD
G_INDEXED_LOAD
G_LOAD
XPACD
G_VECREDUCE_FADD
G_FADD
G_VECREDUCE_SEQ_FADD
G_STRICT_FADD
G_ATOMICRMW_FADD
G_VECREDUCE_ADD
G_ADD
G_PTR_ADD
G_ATOMICRMW_ADD
GLD1D_SCALED
GLDFF1D_SCALED
PRFB_D_SCALED
PRFD_D_SCALED
GLD1H_D_SCALED
GLDFF1H_D_SCALED
PRFH_D_SCALED
GLD1SH_D_SCALED
GLDFF1SH_D_SCALED
GLD1W_D_SCALED
GLDFF1W_D_SCALED
PRFW_D_SCALED
GLD1SW_D_SCALED
GLDFF1SW_D_SCALED
GLD1D_SXTW_SCALED
GLDFF1D_SXTW_SCALED
SST1D_SXTW_SCALED
PRFB_D_SXTW_SCALED
PRFD_D_SXTW_SCALED
GLD1H_D_SXTW_SCALED
GLDFF1H_D_SXTW_SCALED
SST1H_D_SXTW_SCALED
PRFH_D_SXTW_SCALED
GLD1SH_D_SXTW_SCALED
GLDFF1SH_D_SXTW_SCALED
GLD1W_D_SXTW_SCALED
GLDFF1W_D_SXTW_SCALED
SST1W_D_SXTW_SCALED
PRFW_D_SXTW_SCALED
GLD1SW_D_SXTW_SCALED
GLDFF1SW_D_SXTW_SCALED
PRFB_S_SXTW_SCALED
PRFD_S_SXTW_SCALED
GLD1H_S_SXTW_SCALED
GLDFF1H_S_SXTW_SCALED
SST1H_S_SXTW_SCALED
PRFH_S_SXTW_SCALED
GLD1SH_S_SXTW_SCALED
GLDFF1SH_S_SXTW_SCALED
PRFW_S_SXTW_SCALED
GLD1W_SXTW_SCALED
GLDFF1W_SXTW_SCALED
SST1W_SXTW_SCALED
GLD1D_UXTW_SCALED
GLDFF1D_UXTW_SCALED
SST1D_UXTW_SCALED
PRFB_D_UXTW_SCALED
PRFD_D_UXTW_SCALED
GLD1H_D_UXTW_SCALED
GLDFF1H_D_UXTW_SCALED
SST1H_D_UXTW_SCALED
PRFH_D_UXTW_SCALED
GLD1SH_D_UXTW_SCALED
GLDFF1SH_D_UXTW_SCALED
GLD1W_D_UXTW_SCALED
GLDFF1W_D_UXTW_SCALED
SST1W_D_UXTW_SCALED
PRFW_D_UXTW_SCALED
GLD1SW_D_UXTW_SCALED
GLDFF1SW_D_UXTW_SCALED
PRFB_S_UXTW_SCALED
PRFD_S_UXTW_SCALED
GLD1H_S_UXTW_SCALED
GLDFF1H_S_UXTW_SCALED
SST1H_S_UXTW_SCALED
PRFH_S_UXTW_SCALED
GLD1SH_S_UXTW_SCALED
GLDFF1SH_S_UXTW_SCALED
PRFW_S_UXTW_SCALED
GLD1W_UXTW_SCALED
GLDFF1W_UXTW_SCALED
SST1W_UXTW_SCALED
MOVID
G_ATOMICRMW_NAND
G_VECREDUCE_AND
G_AND
G_ATOMICRMW_AND
LIFETIME_END
G_BRCOND
G_INTRINSIC_ROUND
LOAD_STACK_GUARD
FCMGE_PPzZ0_D
FCMLE_PPzZ0_D
FCMNE_PPzZ0_D
FCMEQ_PPzZ0_D
FCMGT_PPzZ0_D
FCMLT_PPzZ0_D
GLD1B_D
GLDFF1B_D
ST1B_D
GLD1SB_D
GLDFF1SB_D
PTRUE_D
LSL_ZPZI_UNDEF_D
ASR_ZPZI_UNDEF_D
LSR_ZPZI_UNDEF_D
FSUB_ZPZZ_UNDEF_D
FADD_ZPZZ_UNDEF_D
LSL_ZPZZ_UNDEF_D
FMUL_ZPZZ_UNDEF_D
FMINNM_ZPZZ_UNDEF_D
FMAXNM_ZPZZ_UNDEF_D
SMIN_ZPZZ_UNDEF_D
UMIN_ZPZZ_UNDEF_D
ASR_ZPZZ_UNDEF_D
LSR_ZPZZ_UNDEF_D
FDIV_ZPZZ_UNDEF_D
SDIV_ZPZZ_UNDEF_D
UDIV_ZPZZ_UNDEF_D
SMAX_ZPZZ_UNDEF_D
UMAX_ZPZZ_UNDEF_D
GLD1H_D
GLDFF1H_D
ST1H_D
GLD1SH_D
GLDFF1SH_D
INDEX_II_D
INDEX_RI_D
FMLA_ZZZI_D
SQDMLALB_ZZZI_D
SMLALB_ZZZI_D
UMLALB_ZZZI_D
SQDMULLB_ZZZI_D
SMULLB_ZZZI_D
UMULLB_ZZZI_D
SQDMLSLB_ZZZI_D
SMLSLB_ZZZI_D
UMLSLB_ZZZI_D
SQRDMLAH_ZZZI_D
SQDMULH_ZZZI_D
SQRDMULH_ZZZI_D
SQRDMLSH_ZZZI_D
FMUL_ZZZI_D
XAR_ZZZI_D
FMLS_ZZZI_D
SQDMLALT_ZZZI_D
SMLALT_ZZZI_D
UMLALT_ZZZI_D
SQDMULLT_ZZZI_D
SMULLT_ZZZI_D
UMULLT_ZZZI_D
SQDMLSLT_ZZZI_D
SMLSLT_ZZZI_D
UMLSLT_ZZZI_D
CDOT_ZZZI_D
SDOT_ZZZI_D
UDOT_ZZZI_D
SRSRA_ZZI_D
URSRA_ZZI_D
SSRA_ZZI_D
USRA_ZZI_D
SSHLLB_ZZI_D
USHLLB_ZZI_D
FTMAD_ZZI_D
SQCADD_ZZI_D
SLI_ZZI_D
SRI_ZZI_D
LSL_ZZI_D
DUP_ZZI_D
ASR_ZZI_D
LSR_ZZI_D
SSHLLT_ZZI_D
USHLLT_ZZI_D
SQSUB_ZI_D
UQSUB_ZI_D
SQADD_ZI_D
UQADD_ZI_D
MUL_ZI_D
SMIN_ZI_D
UMIN_ZI_D
FDUP_ZI_D
SUBR_ZI_D
SMAX_ZI_D
UMAX_ZI_D
CMPGE_PPzZI_D
CMPLE_PPzZI_D
CMPNE_PPzZI_D
CMPHI_PPzZI_D
CMPLO_PPzZI_D
CMPEQ_PPzZI_D
CMPHS_PPzZI_D
CMPLS_PPzZI_D
CMPGT_PPzZI_D
CMPLT_PPzZI_D
FSUB_ZPmI_D
FADD_ZPmI_D
ASRD_ZPmI_D
SQSHL_ZPmI_D
UQSHL_ZPmI_D
LSL_ZPmI_D
FMUL_ZPmI_D
FMINNM_ZPmI_D
FMAXNM_ZPmI_D
FMIN_ZPmI_D
FSUBR_ZPmI_D
SRSHR_ZPmI_D
URSHR_ZPmI_D
ASR_ZPmI_D
LSR_ZPmI_D
SQSHLU_ZPmI_D
FMAX_ZPmI_D
FCPY_ZPmI_D
CPY_ZPzI_D
LD1RO_D
ASRD_ZPZI_ZERO_D
SQSHL_ZPZI_ZERO_D
UQSHL_ZPZI_ZERO_D
SRSHR_ZPZI_ZERO_D
URSHR_ZPZI_ZERO_D
SQSHLU_ZPZI_ZERO_D
FSUB_ZPZZ_ZERO_D
FABD_ZPZZ_ZERO_D
FADD_ZPZZ_ZERO_D
LSL_ZPZZ_ZERO_D
FMUL_ZPZZ_ZERO_D
FMINNM_ZPZZ_ZERO_D
FMAXNM_ZPZZ_ZERO_D
FMIN_ZPZZ_ZERO_D
FSUBR_ZPZZ_ZERO_D
ASR_ZPZZ_ZERO_D
LSR_ZPZZ_ZERO_D
FDIVR_ZPZZ_ZERO_D
FDIV_ZPZZ_ZERO_D
FMAX_ZPZZ_ZERO_D
FMULX_ZPZZ_ZERO_D
TRN1_PPP_D
ZIP1_PPP_D
UZP1_PPP_D
TRN2_PPP_D
ZIP2_PPP_D
UZP2_PPP_D
CNTP_XPP_D
REV_PP_D
UQDECP_WP_D
UQINCP_WP_D
SQDECP_XP_D
UQDECP_XP_D
SQINCP_XP_D
UQINCP_XP_D
SQDECP_ZP_D
UQDECP_ZP_D
SQINCP_ZP_D
UQINCP_ZP_D
LD1RQ_D
INDEX_IR_D
INDEX_RR_D
DUP_ZR_D
INSR_ZR_D
CPY_ZPmR_D
PTRUES_D
PNEXT_D
INSR_ZV_D
CPY_ZPmV_D
GLD1W_D
GLDFF1W_D
ST1W_D
GLD1SW_D
GLDFF1SW_D
WHILEGE_PWW_D
WHILELE_PWW_D
WHILEHI_PWW_D
WHILELO_PWW_D
WHILEHS_PWW_D
WHILELS_PWW_D
WHILEGT_PWW_D
WHILELT_PWW_D
WHILEGE_PXX_D
WHILELE_PXX_D
WHILEHI_PXX_D
WHILELO_PXX_D
WHILEWR_PXX_D
WHILEHS_PXX_D
WHILELS_PXX_D
WHILEGT_PXX_D
WHILELT_PXX_D
WHILERW_PXX_D
CLASTA_RPZ_D
CLASTB_RPZ_D
FADDA_VPZ_D
CLASTA_VPZ_D
CLASTB_VPZ_D
FADDV_VPZ_D
UADDV_VPZ_D
ANDV_VPZ_D
FMINNMV_VPZ_D
FMAXNMV_VPZ_D
FMINV_VPZ_D
SMINV_VPZ_D
UMINV_VPZ_D
EORV_VPZ_D
FMAXV_VPZ_D
SMAXV_VPZ_D
UMAXV_VPZ_D
CLASTA_ZPZ_D
CLASTB_ZPZ_D
SPLICE_ZPZ_D
COMPACT_ZPZ_D
SPLICE_ZPZZ_D
SEL_ZPZZ_D
TBL_ZZZZ_D
TRN1_ZZZ_D
ZIP1_ZZZ_D
UZP1_ZZZ_D
RAX1_ZZZ_D
TRN2_ZZZ_D
ZIP2_ZZZ_D
UZP2_ZZZ_D
SABA_ZZZ_D
UABA_ZZZ_D
CMLA_ZZZ_D
FMMLA_ZZZ_D
SABALB_ZZZ_D
UABALB_ZZZ_D
SQDMLALB_ZZZ_D
SMLALB_ZZZ_D
UMLALB_ZZZ_D
SSUBLB_ZZZ_D
USUBLB_ZZZ_D
SBCLB_ZZZ_D
ADCLB_ZZZ_D
SABDLB_ZZZ_D
UABDLB_ZZZ_D
SADDLB_ZZZ_D
UADDLB_ZZZ_D
SQDMULLB_ZZZ_D
PMULLB_ZZZ_D
SMULLB_ZZZ_D
UMULLB_ZZZ_D
SQDMLSLB_ZZZ_D
SMLSLB_ZZZ_D
UMLSLB_ZZZ_D
SSUBLTB_ZZZ_D
EORTB_ZZZ_D
FSUB_ZZZ_D
SQSUB_ZZZ_D
UQSUB_ZZZ_D
SSUBWB_ZZZ_D
USUBWB_ZZZ_D
SADDWB_ZZZ_D
UADDWB_ZZZ_D
FADD_ZZZ_D
SQADD_ZZZ_D
UQADD_ZZZ_D
SQRDCMLAH_ZZZ_D
SQRDMLAH_ZZZ_D
SQDMULH_ZZZ_D
SQRDMULH_ZZZ_D
SMULH_ZZZ_D
UMULH_ZZZ_D
SQRDMLSH_ZZZ_D
TBL_ZZZ_D
FTSSEL_ZZZ_D
FMUL_ZZZ_D
FTSMUL_ZZZ_D
BDEP_ZZZ_D
BGRP_ZZZ_D
FRECPS_ZZZ_D
FRSQRTS_ZZZ_D
SQDMLALBT_ZZZ_D
SSUBLBT_ZZZ_D
SADDLBT_ZZZ_D
SQDMLSLBT_ZZZ_D
EORBT_ZZZ_D
SABALT_ZZZ_D
UABALT_ZZZ_D
SQDMLALT_ZZZ_D
SMLALT_ZZZ_D
UMLALT_ZZZ_D
SSUBLT_ZZZ_D
USUBLT_ZZZ_D
SBCLT_ZZZ_D
ADCLT_ZZZ_D
SABDLT_ZZZ_D
UABDLT_ZZZ_D
SADDLT_ZZZ_D
UADDLT_ZZZ_D
SQDMULLT_ZZZ_D
PMULLT_ZZZ_D
SMULLT_ZZZ_D
UMULLT_ZZZ_D
SQDMLSLT_ZZZ_D
SMLSLT_ZZZ_D
UMLSLT_ZZZ_D
CDOT_ZZZ_D
SDOT_ZZZ_D
UDOT_ZZZ_D
SSUBWT_ZZZ_D
USUBWT_ZZZ_D
SADDWT_ZZZ_D
UADDWT_ZZZ_D
BEXT_ZZZ_D
TBX_ZZZ_D
FEXPA_ZZ_D
FRECPE_ZZ_D
FRSQRTE_ZZ_D
SUNPKHI_ZZ_D
UUNPKHI_ZZ_D
SUNPKLO_ZZ_D
UUNPKLO_ZZ_D
REV_ZZ_D
FCMLA_ZPmZZ_D
FMLA_ZPmZZ_D
FNMLA_ZPmZZ_D
FMSB_ZPmZZ_D
FNMSB_ZPmZZ_D
FMAD_ZPmZZ_D
FNMAD_ZPmZZ_D
FADDP_ZPmZZ_D
FMINNMP_ZPmZZ_D
FMAXNMP_ZPmZZ_D
FMINP_ZPmZZ_D
FMAXP_ZPmZZ_D
FMLS_ZPmZZ_D
FNMLS_ZPmZZ_D
FACGE_PPzZZ_D
FCMGE_PPzZZ_D
CMPGE_PPzZZ_D
FCMNE_PPzZZ_D
CMPNE_PPzZZ_D
CMPHI_PPzZZ_D
FCMUO_PPzZZ_D
FCMEQ_PPzZZ_D
CMPEQ_PPzZZ_D
CMPHS_PPzZZ_D
FACGT_PPzZZ_D
FCMGT_PPzZZ_D
CMPGT_PPzZZ_D
HISTCNT_ZPzZZ_D
FRINTA_ZPmZ_D
FLOGB_ZPmZ_D
SXTB_ZPmZ_D
UXTB_ZPmZ_D
FSUB_ZPmZ_D
SHSUB_ZPmZ_D
UHSUB_ZPmZ_D
SQSUB_ZPmZ_D
UQSUB_ZPmZ_D
REVB_ZPmZ_D
BIC_ZPmZ_D
FABD_ZPmZ_D
SABD_ZPmZ_D
UABD_ZPmZ_D
FCADD_ZPmZ_D
FADD_ZPmZ_D
SRHADD_ZPmZ_D
URHADD_ZPmZ_D
SHADD_ZPmZ_D
UHADD_ZPmZ_D
USQADD_ZPmZ_D
SUQADD_ZPmZ_D
AND_ZPmZ_D
FSCALE_ZPmZ_D
FNEG_ZPmZ_D
SQNEG_ZPmZ_D
SMULH_ZPmZ_D
UMULH_ZPmZ_D
SXTH_ZPmZ_D
UXTH_ZPmZ_D
REVH_ZPmZ_D
FRINTI_ZPmZ_D
SQSHL_ZPmZ_D
UQSHL_ZPmZ_D
SQRSHL_ZPmZ_D
UQRSHL_ZPmZ_D
SRSHL_ZPmZ_D
URSHL_ZPmZ_D
LSL_ZPmZ_D
FMUL_ZPmZ_D
FMINNM_ZPmZ_D
FMAXNM_ZPmZ_D
FRINTM_ZPmZ_D
FMIN_ZPmZ_D
SMIN_ZPmZ_D
UMIN_ZPmZ_D
FRINTN_ZPmZ_D
ADDP_ZPmZ_D
SADALP_ZPmZ_D
UADALP_ZPmZ_D
SMINP_ZPmZ_D
UMINP_ZPmZ_D
FRINTP_ZPmZ_D
SMAXP_ZPmZ_D
UMAXP_ZPmZ_D
FSUBR_ZPmZ_D
SHSUBR_ZPmZ_D
UHSUBR_ZPmZ_D
SQSUBR_ZPmZ_D
UQSUBR_ZPmZ_D
SQSHLR_ZPmZ_D
UQSHLR_ZPmZ_D
SQRSHLR_ZPmZ_D
UQRSHLR_ZPmZ_D
SRSHLR_ZPmZ_D
URSHLR_ZPmZ_D
LSLR_ZPmZ_D
EOR_ZPmZ_D
ORR_ZPmZ_D
ASRR_ZPmZ_D
LSRR_ZPmZ_D
ASR_ZPmZ_D
LSR_ZPmZ_D
FDIVR_ZPmZ_D
SDIVR_ZPmZ_D
UDIVR_ZPmZ_D
FABS_ZPmZ_D
SQABS_ZPmZ_D
CLS_ZPmZ_D
RBIT_ZPmZ_D
CNT_ZPmZ_D
CNOT_ZPmZ_D
FSQRT_ZPmZ_D
FDIV_ZPmZ_D
SDIV_ZPmZ_D
UDIV_ZPmZ_D
SXTW_ZPmZ_D
UXTW_ZPmZ_D
REVW_ZPmZ_D
FMAX_ZPmZ_D
SMAX_ZPmZ_D
UMAX_ZPmZ_D
MOVPRFX_ZPmZ_D
FMULX_ZPmZ_D
FRECPX_ZPmZ_D
FRINTX_ZPmZ_D
CLZ_ZPmZ_D
FRINTZ_ZPmZ_D
MOVPRFX_ZPzZ_D
SQDECP_XPWd_D
SQINCP_XPWd_D
SCVTF_ZPmZ_DtoD
UCVTF_ZPmZ_DtoD
FCVTZS_ZPmZ_DtoD
FCVTZU_ZPmZ_DtoD
FCVTZS_ZPmZ_HtoD
FCVT_ZPmZ_HtoD
FCVTZU_ZPmZ_HtoD
SCVTF_ZPmZ_StoD
UCVTF_ZPmZ_StoD
FCVTZS_ZPmZ_StoD
FCVTLT_ZPmZ_StoD
FCVT_ZPmZ_StoD
FCVTZU_ZPmZ_StoD
SM4E
PSEUDO_PROBE
G_SSUBE
G_USUBE
SPACE
G_FENCE
REG_SEQUENCE
G_SADDE
G_UADDE
G_FMINNUM_IEEE
G_FMAXNUM_IEEE
G_JUMP_TABLE
BUNDLE
LOCAL_ESCAPE
G_INDEXED_STORE
G_STORE
PFALSE
G_BITREVERSE
DBG_VALUE
G_GLOBAL_VALUE
G_PTRAUTH_GLOBAL_VALUE
G_MEMMOVE
G_FREEZE
G_FCANONICALIZE
G_CTLZ_ZERO_UNDEF
G_CTTZ_ZERO_UNDEF
G_IMPLICIT_DEF
DBG_INSTR_REF
RMIF
XAFLAG
AXFLAG
SUBG
ADDG
G_FNEG
EXTRACT_SUBREG
INSERT_SUBREG
G_SEXT_INREG
SUBREG_TO_REG
G_ATOMIC_CMPXCHG
G_ATOMICRMW_XCHG
G_FLOG
G_VAARG
PREALLOCATED_ARG
LD1H
LDFF1H
ST1H
SHA512H
LD2H
ST2H
LD3H
ST3H
LD4H
ST4H
LDADDAH
LDSMINAH
LDUMINAH
SWPAH
LDCLRAH
LDEORAH
CASAH
LDSETAH
LDSMAXAH
LDUMAXAH
LDADDH
FMLALB_ZZZI_SHH
FMLSLB_ZZZI_SHH
FMLALT_ZZZI_SHH
FMLSLT_ZZZI_SHH
FMLALB_ZZZ_SHH
FMLSLB_ZZZ_SHH
FMLALT_ZZZ_SHH
FMLSLT_ZZZ_SHH
LDADDALH
LDSMINALH
LDUMINALH
SWPALH
LDCLRALH
LDEORALH
CASALH
LDSETALH
LDSMAXALH
LDUMAXALH
LDADDLH
LDSMINLH
LDUMINLH
SWPLH
LDCLRLH
LDEORLH
CASLH
LDSETLH
G_SMULH
G_UMULH
LDSMAXLH
LDUMAXLH
LDSMINH
LDUMINH
SWPH
LDARH
LDLARH
LDCLRH
STLLRH
STLRH
LDEORH
LDAPRH
LDAXRH
LDXRH
STLXRH
STXRH
CASH
LDSETH
LDSMAXH
LDUMAXH
FCMGE_PPzZ0_H
FCMLE_PPzZ0_H
FCMNE_PPzZ0_H
FCMEQ_PPzZ0_H
FCMGT_PPzZ0_H
FCMLT_PPzZ0_H
LD1B_H
LDFF1B_H
ST1B_H
LD1SB_H
LDFF1SB_H
PTRUE_H
LSL_ZPZI_UNDEF_H
ASR_ZPZI_UNDEF_H
LSR_ZPZI_UNDEF_H
FSUB_ZPZZ_UNDEF_H
FADD_ZPZZ_UNDEF_H
LSL_ZPZZ_UNDEF_H
FMUL_ZPZZ_UNDEF_H
FMINNM_ZPZZ_UNDEF_H
FMAXNM_ZPZZ_UNDEF_H
SMIN_ZPZZ_UNDEF_H
UMIN_ZPZZ_UNDEF_H
ASR_ZPZZ_UNDEF_H
LSR_ZPZZ_UNDEF_H
FDIV_ZPZZ_UNDEF_H
SMAX_ZPZZ_UNDEF_H
UMAX_ZPZZ_UNDEF_H
INDEX_II_H
INDEX_RI_H
FCMLA_ZZZI_H
FMLA_ZZZI_H
SQRDCMLAH_ZZZI_H
SQRDMLAH_ZZZI_H
SQDMULH_ZZZI_H
SQRDMULH_ZZZI_H
SQRDMLSH_ZZZI_H
FMUL_ZZZI_H
XAR_ZZZI_H
FMLS_ZZZI_H
SRSRA_ZZI_H
URSRA_ZZI_H
SSRA_ZZI_H
USRA_ZZI_H
SSHLLB_ZZI_H
USHLLB_ZZI_H
SQSHRNB_ZZI_H
UQSHRNB_ZZI_H
SQRSHRNB_ZZI_H
UQRSHRNB_ZZI_H
SQSHRUNB_ZZI_H
SQRSHRUNB_ZZI_H
FTMAD_ZZI_H
SQCADD_ZZI_H
SLI_ZZI_H
SRI_ZZI_H
LSL_ZZI_H
DUP_ZZI_H
ASR_ZZI_H
LSR_ZZI_H
SSHLLT_ZZI_H
USHLLT_ZZI_H
SQSHRNT_ZZI_H
UQSHRNT_ZZI_H
SQRSHRNT_ZZI_H
UQRSHRNT_ZZI_H
SQSHRUNT_ZZI_H
SQRSHRUNT_ZZI_H
SQSUB_ZI_H
UQSUB_ZI_H
SQADD_ZI_H
UQADD_ZI_H
MUL_ZI_H
SMIN_ZI_H
UMIN_ZI_H
FDUP_ZI_H
SUBR_ZI_H
SMAX_ZI_H
UMAX_ZI_H
CMPGE_PPzZI_H
CMPLE_PPzZI_H
CMPNE_PPzZI_H
CMPHI_PPzZI_H
CMPLO_PPzZI_H
CMPEQ_PPzZI_H
CMPHS_PPzZI_H
CMPLS_PPzZI_H
CMPGT_PPzZI_H
CMPLT_PPzZI_H
FSUB_ZPmI_H
FADD_ZPmI_H
ASRD_ZPmI_H
SQSHL_ZPmI_H
UQSHL_ZPmI_H
LSL_ZPmI_H
FMUL_ZPmI_H
FMINNM_ZPmI_H
FMAXNM_ZPmI_H
FMIN_ZPmI_H
FSUBR_ZPmI_H
SRSHR_ZPmI_H
URSHR_ZPmI_H
ASR_ZPmI_H
LSR_ZPmI_H
SQSHLU_ZPmI_H
FMAX_ZPmI_H
FCPY_ZPmI_H
CPY_ZPzI_H
LD1RO_H
ASRD_ZPZI_ZERO_H
SQSHL_ZPZI_ZERO_H
UQSHL_ZPZI_ZERO_H
SRSHR_ZPZI_ZERO_H
URSHR_ZPZI_ZERO_H
SQSHLU_ZPZI_ZERO_H
FSUB_ZPZZ_ZERO_H
FABD_ZPZZ_ZERO_H
FADD_ZPZZ_ZERO_H
LSL_ZPZZ_ZERO_H
FMUL_ZPZZ_ZERO_H
FMINNM_ZPZZ_ZERO_H
FMAXNM_ZPZZ_ZERO_H
FMIN_ZPZZ_ZERO_H
FSUBR_ZPZZ_ZERO_H
ASR_ZPZZ_ZERO_H
LSR_ZPZZ_ZERO_H
FDIVR_ZPZZ_ZERO_H
FDIV_ZPZZ_ZERO_H
FMAX_ZPZZ_ZERO_H
FMULX_ZPZZ_ZERO_H
TRN1_PPP_H
ZIP1_PPP_H
UZP1_PPP_H
TRN2_PPP_H
ZIP2_PPP_H
UZP2_PPP_H
CNTP_XPP_H
REV_PP_H
UQDECP_WP_H
UQINCP_WP_H
SQDECP_XP_H
UQDECP_XP_H
SQINCP_XP_H
UQINCP_XP_H
SQDECP_ZP_H
UQDECP_ZP_H
SQINCP_ZP_H
UQINCP_ZP_H
LD1RQ_H
INDEX_IR_H
INDEX_RR_H
DUP_ZR_H
INSR_ZR_H
CPY_ZPmR_H
PTRUES_H
PNEXT_H
INSR_ZV_H
CPY_ZPmV_H
WHILEGE_PWW_H
WHILELE_PWW_H
WHILEHI_PWW_H
WHILELO_PWW_H
WHILEHS_PWW_H
WHILELS_PWW_H
WHILEGT_PWW_H
WHILELT_PWW_H
WHILEGE_PXX_H
WHILELE_PXX_H
WHILEHI_PXX_H
WHILELO_PXX_H
WHILEWR_PXX_H
WHILEHS_PXX_H
WHILELS_PXX_H
WHILEGT_PXX_H
WHILELT_PXX_H
WHILERW_PXX_H
CLASTA_RPZ_H
CLASTB_RPZ_H
FADDA_VPZ_H
CLASTA_VPZ_H
CLASTB_VPZ_H
FADDV_VPZ_H
SADDV_VPZ_H
UADDV_VPZ_H
ANDV_VPZ_H
FMINNMV_VPZ_H
FMAXNMV_VPZ_H
FMINV_VPZ_H
SMINV_VPZ_H
UMINV_VPZ_H
EORV_VPZ_H
FMAXV_VPZ_H
SMAXV_VPZ_H
UMAXV_VPZ_H
CLASTA_ZPZ_H
CLASTB_ZPZ_H
SPLICE_ZPZ_H
SPLICE_ZPZZ_H
SEL_ZPZZ_H
TBL_ZZZZ_H
TRN1_ZZZ_H
ZIP1_ZZZ_H
UZP1_ZZZ_H
TRN2_ZZZ_H
ZIP2_ZZZ_H
UZP2_ZZZ_H
SABA_ZZZ_H
UABA_ZZZ_H
CMLA_ZZZ_H
SABALB_ZZZ_H
UABALB_ZZZ_H
SQDMLALB_ZZZ_H
SMLALB_ZZZ_H
UMLALB_ZZZ_H
SSUBLB_ZZZ_H
USUBLB_ZZZ_H
SABDLB_ZZZ_H
UABDLB_ZZZ_H
SADDLB_ZZZ_H
UADDLB_ZZZ_H
SQDMULLB_ZZZ_H
PMULLB_ZZZ_H
SMULLB_ZZZ_H
UMULLB_ZZZ_H
SQDMLSLB_ZZZ_H
SMLSLB_ZZZ_H
UMLSLB_ZZZ_H
RSUBHNB_ZZZ_H
RADDHNB_ZZZ_H
SSUBLTB_ZZZ_H
EORTB_ZZZ_H
FSUB_ZZZ_H
SQSUB_ZZZ_H
UQSUB_ZZZ_H
SSUBWB_ZZZ_H
USUBWB_ZZZ_H
SADDWB_ZZZ_H
UADDWB_ZZZ_H
FADD_ZZZ_H
SQADD_ZZZ_H
UQADD_ZZZ_H
LSL_WIDE_ZZZ_H
ASR_WIDE_ZZZ_H
LSR_WIDE_ZZZ_H
SQRDCMLAH_ZZZ_H
SQRDMLAH_ZZZ_H
SQDMULH_ZZZ_H
SQRDMULH_ZZZ_H
SMULH_ZZZ_H
UMULH_ZZZ_H
SQRDMLSH_ZZZ_H
TBL_ZZZ_H
FTSSEL_ZZZ_H
FMUL_ZZZ_H
FTSMUL_ZZZ_H
BDEP_ZZZ_H
BGRP_ZZZ_H
FRECPS_ZZZ_H
FRSQRTS_ZZZ_H
SQDMLALBT_ZZZ_H
SSUBLBT_ZZZ_H
SADDLBT_ZZZ_H
SQDMLSLBT_ZZZ_H
EORBT_ZZZ_H
SABALT_ZZZ_H
UABALT_ZZZ_H
SQDMLALT_ZZZ_H
SMLALT_ZZZ_H
UMLALT_ZZZ_H
SSUBLT_ZZZ_H
USUBLT_ZZZ_H
SABDLT_ZZZ_H
UABDLT_ZZZ_H
SADDLT_ZZZ_H
UADDLT_ZZZ_H
SQDMULLT_ZZZ_H
PMULLT_ZZZ_H
SMULLT_ZZZ_H
UMULLT_ZZZ_H
SQDMLSLT_ZZZ_H
SMLSLT_ZZZ_H
UMLSLT_ZZZ_H
RSUBHNT_ZZZ_H
RADDHNT_ZZZ_H
SSUBWT_ZZZ_H
USUBWT_ZZZ_H
SADDWT_ZZZ_H
UADDWT_ZZZ_H
BEXT_ZZZ_H
TBX_ZZZ_H
FEXPA_ZZ_H
SQXTNB_ZZ_H
UQXTNB_ZZ_H
SQXTUNB_ZZ_H
FRECPE_ZZ_H
FRSQRTE_ZZ_H
SUNPKHI_ZZ_H
UUNPKHI_ZZ_H
SUNPKLO_ZZ_H
UUNPKLO_ZZ_H
SQXTNT_ZZ_H
UQXTNT_ZZ_H
SQXTUNT_ZZ_H
REV_ZZ_H
FCMLA_ZPmZZ_H
FMLA_ZPmZZ_H
FNMLA_ZPmZZ_H
FMSB_ZPmZZ_H
FNMSB_ZPmZZ_H
FMAD_ZPmZZ_H
FNMAD_ZPmZZ_H
FADDP_ZPmZZ_H
FMINNMP_ZPmZZ_H
FMAXNMP_ZPmZZ_H
FMINP_ZPmZZ_H
FMAXP_ZPmZZ_H
FMLS_ZPmZZ_H
FNMLS_ZPmZZ_H
CMPGE_WIDE_PPzZZ_H
CMPLE_WIDE_PPzZZ_H
CMPNE_WIDE_PPzZZ_H
CMPHI_WIDE_PPzZZ_H
CMPLO_WIDE_PPzZZ_H
CMPEQ_WIDE_PPzZZ_H
CMPHS_WIDE_PPzZZ_H
CMPLS_WIDE_PPzZZ_H
CMPGT_WIDE_PPzZZ_H
CMPLT_WIDE_PPzZZ_H
FACGE_PPzZZ_H
FCMGE_PPzZZ_H
CMPGE_PPzZZ_H
FCMNE_PPzZZ_H
CMPNE_PPzZZ_H
NMATCH_PPzZZ_H
CMPHI_PPzZZ_H
FCMUO_PPzZZ_H
FCMEQ_PPzZZ_H
CMPEQ_PPzZZ_H
CMPHS_PPzZZ_H
FACGT_PPzZZ_H
FCMGT_PPzZZ_H
CMPGT_PPzZZ_H
FRINTA_ZPmZ_H
FLOGB_ZPmZ_H
SXTB_ZPmZ_H
UXTB_ZPmZ_H
FSUB_ZPmZ_H
SHSUB_ZPmZ_H
UHSUB_ZPmZ_H
SQSUB_ZPmZ_H
UQSUB_ZPmZ_H
REVB_ZPmZ_H
BIC_ZPmZ_H
FABD_ZPmZ_H
SABD_ZPmZ_H
UABD_ZPmZ_H
FCADD_ZPmZ_H
FADD_ZPmZ_H
SRHADD_ZPmZ_H
URHADD_ZPmZ_H
SHADD_ZPmZ_H
UHADD_ZPmZ_H
USQADD_ZPmZ_H
SUQADD_ZPmZ_H
AND_ZPmZ_H
LSL_WIDE_ZPmZ_H
ASR_WIDE_ZPmZ_H
LSR_WIDE_ZPmZ_H
FSCALE_ZPmZ_H
FNEG_ZPmZ_H
SQNEG_ZPmZ_H
SMULH_ZPmZ_H
UMULH_ZPmZ_H
FRINTI_ZPmZ_H
SQSHL_ZPmZ_H
UQSHL_ZPmZ_H
SQRSHL_ZPmZ_H
UQRSHL_ZPmZ_H
SRSHL_ZPmZ_H
URSHL_ZPmZ_H
LSL_ZPmZ_H
FMUL_ZPmZ_H
FMINNM_ZPmZ_H
FMAXNM_ZPmZ_H
FRINTM_ZPmZ_H
FMIN_ZPmZ_H
SMIN_ZPmZ_H
UMIN_ZPmZ_H
FRINTN_ZPmZ_H
ADDP_ZPmZ_H
SADALP_ZPmZ_H
UADALP_ZPmZ_H
SMINP_ZPmZ_H
UMINP_ZPmZ_H
FRINTP_ZPmZ_H
SMAXP_ZPmZ_H
UMAXP_ZPmZ_H
FSUBR_ZPmZ_H
SHSUBR_ZPmZ_H
UHSUBR_ZPmZ_H
SQSUBR_ZPmZ_H
UQSUBR_ZPmZ_H
SQSHLR_ZPmZ_H
UQSHLR_ZPmZ_H
SQRSHLR_ZPmZ_H
UQRSHLR_ZPmZ_H
SRSHLR_ZPmZ_H
URSHLR_ZPmZ_H
LSLR_ZPmZ_H
EOR_ZPmZ_H
ORR_ZPmZ_H
ASRR_ZPmZ_H
LSRR_ZPmZ_H
ASR_ZPmZ_H
LSR_ZPmZ_H
FDIVR_ZPmZ_H
FABS_ZPmZ_H
SQABS_ZPmZ_H
CLS_ZPmZ_H
RBIT_ZPmZ_H
CNT_ZPmZ_H
CNOT_ZPmZ_H
FSQRT_ZPmZ_H
FDIV_ZPmZ_H
FMAX_ZPmZ_H
SMAX_ZPmZ_H
UMAX_ZPmZ_H
MOVPRFX_ZPmZ_H
FMULX_ZPmZ_H
FRECPX_ZPmZ_H
FRINTX_ZPmZ_H
CLZ_ZPmZ_H
FRINTZ_ZPmZ_H
MOVPRFX_ZPzZ_H
SQDECP_XPWd_H
SQINCP_XPWd_H
SCVTF_ZPmZ_DtoH
UCVTF_ZPmZ_DtoH
FCVT_ZPmZ_DtoH
SCVTF_ZPmZ_HtoH
UCVTF_ZPmZ_HtoH
FCVTZS_ZPmZ_HtoH
FCVTZU_ZPmZ_HtoH
SCVTF_ZPmZ_StoH
UCVTF_ZPmZ_StoH
FCVTNT_ZPmZ_StoH
FCVT_ZPmZ_StoH
XPACI
G_PHI
XPACLRI
PRFB_PRI
PRFD_PRI
PRFH_PRI
PRFW_PRI
LDNT1B_ZRI
STNT1B_ZRI
LDNT1D_ZRI
STNT1D_ZRI
LDNT1H_ZRI
STNT1H_ZRI
LDNT1W_ZRI
STNT1W_ZRI
G_FPTOSI
AUTH_TCRETURN_BTI
TCRETURNriBTI
G_FPTOUI
G_FPOWI
LDR_PXI
STR_PXI
ADDPL_XXI
ADDVL_XXI
LDR_ZZZZXI
STR_ZZZZXI
LDR_ZZZXI
STR_ZZZXI
LDR_ZZXI
STR_ZZXI
LDR_ZXI
STR_ZXI
RDVLI_XI
PRFB_D_PZI
PRFD_D_PZI
PRFH_D_PZI
PRFW_D_PZI
PRFB_S_PZI
PRFD_S_PZI
PRFH_S_PZI
PRFW_S_PZI
USDOT_ZZZI
SUDOT_ZZZI
BFMMLA_B_ZZI
BFDOT_ZZI
EXT_ZZI
BFMMLA_T_ZZI
AND_ZI
DUPM_ZI
EOR_ZI
ORR_ZI
SQDECB_XPiWdI
SQINCB_XPiWdI
SQDECD_XPiWdI
SQINCD_XPiWdI
SQDECH_XPiWdI
SQINCH_XPiWdI
SQDECW_XPiWdI
SQINCW_XPiWdI
UQDECB_WPiI
UQINCB_WPiI
UQDECD_WPiI
UQINCD_WPiI
UQDECH_WPiI
UQINCH_WPiI
UQDECW_WPiI
UQINCW_WPiI
SQDECB_XPiI
UQDECB_XPiI
SQINCB_XPiI
UQINCB_XPiI
CNTB_XPiI
SQDECD_XPiI
UQDECD_XPiI
SQINCD_XPiI
UQINCD_XPiI
CNTD_XPiI
SQDECH_XPiI
UQDECH_XPiI
SQINCH_XPiI
UQINCH_XPiI
CNTH_XPiI
SQDECW_XPiI
UQDECW_XPiI
SQINCW_XPiI
UQINCW_XPiI
CNTW_XPiI
SQDECD_ZPiI
UQDECD_ZPiI
SQINCD_ZPiI
UQINCD_ZPiI
SQDECH_ZPiI
UQDECH_ZPiI
SQINCH_ZPiI
UQINCH_ZPiI
SQDECW_ZPiI
UQDECW_ZPiI
SQINCW_ZPiI
UQINCW_ZPiI
BRB_INJ
G_PTRMASK
LDFF1B_REAL
GLD1D_REAL
GLDFF1D_REAL
SST1D_REAL
GLD1D_SCALED_REAL
GLDFF1D_SCALED_REAL
SST1D_SCALED_SCALED_REAL
SST1H_D_SCALED_SCALED_REAL
SST1W_D_SCALED_SCALED_REAL
GLD1H_D_SCALED_REAL
GLDFF1H_D_SCALED_REAL
GLD1SH_D_SCALED_REAL
GLDFF1SH_D_SCALED_REAL
GLD1W_D_SCALED_REAL
GLDFF1W_D_SCALED_REAL
GLD1SW_D_SCALED_REAL
GLDFF1SW_D_SCALED_REAL
GLD1D_SXTW_SCALED_REAL
GLDFF1D_SXTW_SCALED_REAL
GLD1H_D_SXTW_SCALED_REAL
GLDFF1H_D_SXTW_SCALED_REAL
GLD1SH_D_SXTW_SCALED_REAL
GLDFF1SH_D_SXTW_SCALED_REAL
GLD1W_D_SXTW_SCALED_REAL
GLDFF1W_D_SXTW_SCALED_REAL
GLD1SW_D_SXTW_SCALED_REAL
GLDFF1SW_D_SXTW_SCALED_REAL
GLD1H_S_SXTW_SCALED_REAL
GLDFF1H_S_SXTW_SCALED_REAL
GLD1SH_S_SXTW_SCALED_REAL
GLDFF1SH_S_SXTW_SCALED_REAL
GLD1W_SXTW_SCALED_REAL
GLDFF1W_SXTW_SCALED_REAL
GLD1D_UXTW_SCALED_REAL
GLDFF1D_UXTW_SCALED_REAL
GLD1H_D_UXTW_SCALED_REAL
GLDFF1H_D_UXTW_SCALED_REAL
GLD1SH_D_UXTW_SCALED_REAL
GLDFF1SH_D_UXTW_SCALED_REAL
GLD1W_D_UXTW_SCALED_REAL
GLDFF1W_D_UXTW_SCALED_REAL
GLD1SW_D_UXTW_SCALED_REAL
GLDFF1SW_D_UXTW_SCALED_REAL
GLD1H_S_UXTW_SCALED_REAL
GLDFF1H_S_UXTW_SCALED_REAL
GLD1SH_S_UXTW_SCALED_REAL
GLDFF1SH_S_UXTW_SCALED_REAL
GLD1W_UXTW_SCALED_REAL
GLDFF1W_UXTW_SCALED_REAL
GLD1B_D_REAL
GLDFF1B_D_REAL
SST1B_D_REAL
GLD1SB_D_REAL
GLDFF1SB_D_REAL
GLD1H_D_REAL
GLDFF1H_D_REAL
SST1H_D_REAL
GLD1SH_D_REAL
GLDFF1SH_D_REAL
LDNT1B_ZZR_D_REAL
STNT1B_ZZR_D_REAL
LDNT1SB_ZZR_D_REAL
LDNT1D_ZZR_D_REAL
STNT1D_ZZR_D_REAL
LDNT1H_ZZR_D_REAL
STNT1H_ZZR_D_REAL
LDNT1SH_ZZR_D_REAL
LDNT1W_ZZR_D_REAL
STNT1W_ZZR_D_REAL
LDNT1SW_ZZR_D_REAL
GLD1W_D_REAL
GLDFF1W_D_REAL
SST1W_D_REAL
GLD1SW_D_REAL
GLDFF1SW_D_REAL
LDFF1H_REAL
LDFF1B_H_REAL
LDFF1SB_H_REAL
LD1B_IMM_REAL
LDNF1B_IMM_REAL
GLD1D_IMM_REAL
GLDFF1D_IMM_REAL
LDNF1D_IMM_REAL
GLD1B_D_IMM_REAL
GLDFF1B_D_IMM_REAL
LDNF1B_D_IMM_REAL
GLD1SB_D_IMM_REAL
GLDFF1SB_D_IMM_REAL
LDNF1SB_D_IMM_REAL
GLD1H_D_IMM_REAL
GLDFF1H_D_IMM_REAL
LDNF1H_D_IMM_REAL
GLD1SH_D_IMM_REAL
GLDFF1SH_D_IMM_REAL
LDNF1SH_D_IMM_REAL
GLD1W_D_IMM_REAL
GLDFF1W_D_IMM_REAL
LDNF1W_D_IMM_REAL
GLD1SW_D_IMM_REAL
GLDFF1SW_D_IMM_REAL
LDNF1SW_D_IMM_REAL
LD1H_IMM_REAL
LDNF1H_IMM_REAL
LD1B_H_IMM_REAL
LDNF1B_H_IMM_REAL
LD1SB_H_IMM_REAL
LDNF1SB_H_IMM_REAL
GLD1B_S_IMM_REAL
GLDFF1B_S_IMM_REAL
LDNF1B_S_IMM_REAL
GLD1SB_S_IMM_REAL
GLDFF1SB_S_IMM_REAL
LDNF1SB_S_IMM_REAL
GLD1H_S_IMM_REAL
GLDFF1H_S_IMM_REAL
LDNF1H_S_IMM_REAL
GLD1SH_S_IMM_REAL
GLDFF1SH_S_IMM_REAL
LDNF1SH_S_IMM_REAL
GLD1W_IMM_REAL
GLDFF1W_IMM_REAL
LDNF1W_IMM_REAL
RDFFR_P_REAL
LDFF1B_S_REAL
LDFF1SB_S_REAL
LDFF1H_S_REAL
LDFF1SH_S_REAL
LDNT1B_ZZR_S_REAL
STNT1B_ZZR_S_REAL
LDNT1SB_ZZR_S_REAL
LDNT1H_ZZR_S_REAL
STNT1H_ZZR_S_REAL
LDNT1SH_ZZR_S_REAL
LDNT1W_ZZR_S_REAL
STNT1W_ZZR_S_REAL
LDFF1W_REAL
GLD1D_SXTW_REAL
GLDFF1D_SXTW_REAL
GLD1B_D_SXTW_REAL
GLDFF1B_D_SXTW_REAL
GLD1SB_D_SXTW_REAL
GLDFF1SB_D_SXTW_REAL
GLD1H_D_SXTW_REAL
GLDFF1H_D_SXTW_REAL
GLD1SH_D_SXTW_REAL
GLDFF1SH_D_SXTW_REAL
GLD1W_D_SXTW_REAL
GLDFF1W_D_SXTW_REAL
GLD1SW_D_SXTW_REAL
GLDFF1SW_D_SXTW_REAL
GLD1B_S_SXTW_REAL
GLDFF1B_S_SXTW_REAL
GLD1SB_S_SXTW_REAL
GLDFF1SB_S_SXTW_REAL
GLD1H_S_SXTW_REAL
GLDFF1H_S_SXTW_REAL
GLD1SH_S_SXTW_REAL
GLDFF1SH_S_SXTW_REAL
GLD1W_SXTW_REAL
GLDFF1W_SXTW_REAL
GLD1D_UXTW_REAL
GLDFF1D_UXTW_REAL
GLD1B_D_UXTW_REAL
GLDFF1B_D_UXTW_REAL
GLD1SB_D_UXTW_REAL
GLDFF1SB_D_UXTW_REAL
GLD1H_D_UXTW_REAL
GLDFF1H_D_UXTW_REAL
GLD1SH_D_UXTW_REAL
GLDFF1SH_D_UXTW_REAL
GLD1W_D_UXTW_REAL
GLDFF1W_D_UXTW_REAL
GLD1SW_D_UXTW_REAL
GLDFF1SW_D_UXTW_REAL
GLD1B_S_UXTW_REAL
GLDFF1B_S_UXTW_REAL
GLD1SB_S_UXTW_REAL
GLDFF1SB_S_UXTW_REAL
GLD1H_S_UXTW_REAL
GLDFF1H_S_UXTW_REAL
GLD1SH_S_UXTW_REAL
GLDFF1SH_S_UXTW_REAL
GLD1W_UXTW_REAL
GLDFF1W_UXTW_REAL
RDFFR_PPz_REAL
GC_LABEL
DBG_LABEL
EH_LABEL
ANNOTATION_LABEL
TCANCEL
ICALL_BRANCH_FUNNEL
F128CSEL
G_FSHL
G_SHL
G_FCEIL
TLSDESCCALL
PATCHABLE_TAIL_CALL
PATCHABLE_TYPED_EVENT_CALL
PATCHABLE_EVENT_CALL
FENTRY_CALL
BRB_IALL
TCRETURNriALL
KILL
G_VECREDUCE_FMUL
G_FMUL
G_VECREDUCE_SEQ_FMUL
G_STRICT_FMUL
G_VECREDUCE_MUL
G_MUL
G_FREM
G_STRICT_FREM
G_SREM
G_UREM
LDGM
STGM
STZGM
LD1B_IMM
LDNF1B_IMM
ST1B_IMM
LD2B_IMM
ST2B_IMM
LD3B_IMM
ST3B_IMM
LD4B_IMM
ST4B_IMM
LD1RB_IMM
LD1RO_B_IMM
LD1RQ_B_IMM
GLD1D_IMM
GLDFF1D_IMM
LDNF1D_IMM
SST1D_IMM
LD2D_IMM
ST2D_IMM
LD3D_IMM
ST3D_IMM
LD4D_IMM
ST4D_IMM
LD1RD_IMM
GLD1B_D_IMM
GLDFF1B_D_IMM
LDNF1B_D_IMM
SST1B_D_IMM
LD1RB_D_IMM
GLD1SB_D_IMM
GLDFF1SB_D_IMM
LDNF1SB_D_IMM
LD1RSB_D_IMM
GLD1H_D_IMM
GLDFF1H_D_IMM
LDNF1H_D_IMM
SST1H_D_IMM
LD1RH_D_IMM
GLD1SH_D_IMM
GLDFF1SH_D_IMM
LDNF1SH_D_IMM
LD1RSH_D_IMM
LD1RO_D_IMM
LD1RQ_D_IMM
GLD1W_D_IMM
GLDFF1W_D_IMM
LDNF1W_D_IMM
SST1W_D_IMM
LD1RW_D_IMM
GLD1SW_D_IMM
GLDFF1SW_D_IMM
LDNF1SW_D_IMM
LD1H_IMM
LDNF1H_IMM
ST1H_IMM
LD2H_IMM
ST2H_IMM
LD3H_IMM
ST3H_IMM
LD4H_IMM
ST4H_IMM
LD1RH_IMM
LD1B_H_IMM
LDNF1B_H_IMM
ST1B_H_IMM
LD1RB_H_IMM
LD1SB_H_IMM
LDNF1SB_H_IMM
LD1RSB_H_IMM
LD1RO_H_IMM
LD1RQ_H_IMM
GLD1B_S_IMM
GLDFF1B_S_IMM
LDNF1B_S_IMM
SST1B_S_IMM
LD1RB_S_IMM
GLD1SB_S_IMM
GLDFF1SB_S_IMM
LDNF1SB_S_IMM
LD1RSB_S_IMM
GLD1H_S_IMM
GLDFF1H_S_IMM
LDNF1H_S_IMM
SST1H_S_IMM
LD1RH_S_IMM
GLD1SH_S_IMM
GLDFF1SH_S_IMM
LDNF1SH_S_IMM
LD1RSH_S_IMM
GLD1W_IMM
GLDFF1W_IMM
LDNF1W_IMM
SST1W_IMM
LD2W_IMM
ST2W_IMM
LD3W_IMM
ST3W_IMM
LD4W_IMM
ST4W_IMM
LD1RW_IMM
LD1RSW_IMM
LD1RO_W_IMM
LD1RQ_W_IMM
INLINEASM
G_FMINIMUM
G_FMAXIMUM
G_FMINNUM
G_FMAXNUM
G_INTRINSIC_ROUNDEVEN
G_FCOPYSIGN
G_VECREDUCE_FMIN
G_VECREDUCE_SMIN
G_SMIN
G_VECREDUCE_UMIN
G_UMIN
G_ATOMICRMW_UMIN
G_ATOMICRMW_MIN
G_FSIN
CFI_INSTRUCTION
AUTH_TCRETURN
BFCVTN
ADJCALLSTACKDOWN
G_SSUBO
G_USUBO
G_SADDO
G_UADDO
G_SMULO
G_UMULO
STACKMAP
G_BSWAP
SUBP
MOVaddrCP
G_SITOFP
G_UITOFP
SEH_AddFP
SEH_SetFP
BLRNoIP
G_FCMP
G_ICMP
G_CTPOP
PATCHABLE_OP
FAULTING_OP
SEL_PPPP
PUNPKHI_PP
PUNPKLO_PP
PTEST_PP
BRKPA_PPzPP
BRKPB_PPzPP
BIC_PPzPP
NAND_PPzPP
ORN_PPzPP
EOR_PPzPP
NOR_PPzPP
ORR_PPzPP
BRKPAS_PPzPP
BRKPBS_PPzPP
BICS_PPzPP
NANDS_PPzPP
ORNS_PPzPP
EORS_PPzPP
NORS_PPzPP
ORRS_PPzPP
ADRP
PACIASP
AUTIASP
PACIBSP
AUTIBSP
G_DUP
ADJCALLSTACKUP
PREALLOCATED_SETUP
G_FEXP
RDFFR_P
SEH_SaveFRegP
SEH_SaveRegP
BRKA_PPmP
BRKB_PPmP
BRKA_PPzP
BRKB_PPzP
BRKN_PPzP
BRKAS_PPzP
BRKBS_PPzP
BRKNS_PPzP
TLSDESC_CALLSEQ
DUP_ZZI_Q
TRN1_ZZZ_Q
ZIP1_ZZZ_Q
UZP1_ZZZ_Q
TRN2_ZZZ_Q
ZIP2_ZZZ_Q
UZP2_ZZZ_Q
PMULLB_ZZZ_Q
PMULLT_ZZZ_Q
G_BR
INLINEASM_BR
G_BLOCK_ADDR
BLRA_RVMARKER
BLR_RVMARKER
PATCHABLE_FUNCTION_ENTER
G_READCYCLECOUNTER
G_READ_REGISTER
G_WRITE_REGISTER
WRFFR
SETFFR
G_VASHR
G_ASHR
G_FSHR
G_VLSHR
G_LSHR
SEH_SaveFPLR
RET_ReallyLR
G_FFLOOR
G_BUILD_VECTOR
G_SHUFFLE_VECTOR
G_VECREDUCE_XOR
G_XOR
G_ATOMICRMW_XOR
G_VECREDUCE_OR
G_OR
G_ATOMICRMW_OR
PRFB_PRR
PRFD_PRR
PRFH_PRR
PRFS_PRR
LDNT1B_ZRR
STNT1B_ZRR
LDNT1D_ZRR
STNT1D_ZRR
LDNT1H_ZRR
STNT1H_ZRR
LDNT1W_ZRR
STNT1W_ZRR
G_INTTOPTR
G_FABS
G_ABS
HWASAN_CHECK_MEMACCESS_SHORTGRANULES
G_UNMERGE_VALUES
G_MERGE_VALUES
MOVbaseTLS
MOVaddrTLS
ADDlowTLS
G_FCOS
SUBPS
DRPS
G_CONCAT_VECTORS
COPY_TO_REGCLASS
HWASAN_CHECK_MEMACCESS
G_ATOMIC_CMPXCHG_WITH_SUCCESS
G_INTRINSIC_W_SIDE_EFFECTS
DSBnXS
FJCVTZS
FCMGE_PPzZ0_S
FCMLE_PPzZ0_S
FCMNE_PPzZ0_S
FCMEQ_PPzZ0_S
FCMGT_PPzZ0_S
FCMLT_PPzZ0_S
LD1B_S
LDFF1B_S
ST1B_S
LD1SB_S
LDFF1SB_S
PTRUE_S
LSL_ZPZI_UNDEF_S
ASR_ZPZI_UNDEF_S
LSR_ZPZI_UNDEF_S
FSUB_ZPZZ_UNDEF_S
FADD_ZPZZ_UNDEF_S
LSL_ZPZZ_UNDEF_S
FMUL_ZPZZ_UNDEF_S
FMINNM_ZPZZ_UNDEF_S
FMAXNM_ZPZZ_UNDEF_S
SMIN_ZPZZ_UNDEF_S
UMIN_ZPZZ_UNDEF_S
ASR_ZPZZ_UNDEF_S
LSR_ZPZZ_UNDEF_S
FDIV_ZPZZ_UNDEF_S
SDIV_ZPZZ_UNDEF_S
UDIV_ZPZZ_UNDEF_S
SMAX_ZPZZ_UNDEF_S
UMAX_ZPZZ_UNDEF_S
LD1H_S
LDFF1H_S
ST1H_S
LD1SH_S
LDFF1SH_S
INDEX_II_S
INDEX_RI_S
FCMLA_ZZZI_S
FMLA_ZZZI_S
SQDMLALB_ZZZI_S
SMLALB_ZZZI_S
UMLALB_ZZZI_S
SQDMULLB_ZZZI_S
SMULLB_ZZZI_S
UMULLB_ZZZI_S
SQDMLSLB_ZZZI_S
SMLSLB_ZZZI_S
UMLSLB_ZZZI_S
SQRDCMLAH_ZZZI_S
SQRDMLAH_ZZZI_S
SQDMULH_ZZZI_S
SQRDMULH_ZZZI_S
SQRDMLSH_ZZZI_S
FMUL_ZZZI_S
XAR_ZZZI_S
FMLS_ZZZI_S
SQDMLALT_ZZZI_S
SMLALT_ZZZI_S
UMLALT_ZZZI_S
SQDMULLT_ZZZI_S
SMULLT_ZZZI_S
UMULLT_ZZZI_S
SQDMLSLT_ZZZI_S
SMLSLT_ZZZI_S
UMLSLT_ZZZI_S
CDOT_ZZZI_S
SDOT_ZZZI_S
UDOT_ZZZI_S
SRSRA_ZZI_S
URSRA_ZZI_S
SSRA_ZZI_S
USRA_ZZI_S
SSHLLB_ZZI_S
USHLLB_ZZI_S
SQSHRNB_ZZI_S
UQSHRNB_ZZI_S
SQRSHRNB_ZZI_S
UQRSHRNB_ZZI_S
SQSHRUNB_ZZI_S
SQRSHRUNB_ZZI_S
FTMAD_ZZI_S
SQCADD_ZZI_S
SLI_ZZI_S
SRI_ZZI_S
LSL_ZZI_S
DUP_ZZI_S
ASR_ZZI_S
LSR_ZZI_S
SSHLLT_ZZI_S
USHLLT_ZZI_S
SQSHRNT_ZZI_S
UQSHRNT_ZZI_S
SQRSHRNT_ZZI_S
UQRSHRNT_ZZI_S
SQSHRUNT_ZZI_S
SQRSHRUNT_ZZI_S
SQSUB_ZI_S
UQSUB_ZI_S
SQADD_ZI_S
UQADD_ZI_S
MUL_ZI_S
SMIN_ZI_S
UMIN_ZI_S
FDUP_ZI_S
SUBR_ZI_S
SMAX_ZI_S
UMAX_ZI_S
CMPGE_PPzZI_S
CMPLE_PPzZI_S
CMPNE_PPzZI_S
CMPHI_PPzZI_S
CMPLO_PPzZI_S
CMPEQ_PPzZI_S
CMPHS_PPzZI_S
CMPLS_PPzZI_S
CMPGT_PPzZI_S
CMPLT_PPzZI_S
FSUB_ZPmI_S
FADD_ZPmI_S
ASRD_ZPmI_S
SQSHL_ZPmI_S
UQSHL_ZPmI_S
LSL_ZPmI_S
FMUL_ZPmI_S
FMINNM_ZPmI_S
FMAXNM_ZPmI_S
FMIN_ZPmI_S
FSUBR_ZPmI_S
SRSHR_ZPmI_S
URSHR_ZPmI_S
ASR_ZPmI_S
LSR_ZPmI_S
SQSHLU_ZPmI_S
FMAX_ZPmI_S
FCPY_ZPmI_S
CPY_ZPzI_S
ASRD_ZPZI_ZERO_S
SQSHL_ZPZI_ZERO_S
UQSHL_ZPZI_ZERO_S
SRSHR_ZPZI_ZERO_S
URSHR_ZPZI_ZERO_S
SQSHLU_ZPZI_ZERO_S
FSUB_ZPZZ_ZERO_S
FABD_ZPZZ_ZERO_S
FADD_ZPZZ_ZERO_S
LSL_ZPZZ_ZERO_S
FMUL_ZPZZ_ZERO_S
FMINNM_ZPZZ_ZERO_S
FMAXNM_ZPZZ_ZERO_S
FMIN_ZPZZ_ZERO_S
FSUBR_ZPZZ_ZERO_S
ASR_ZPZZ_ZERO_S
LSR_ZPZZ_ZERO_S
FDIVR_ZPZZ_ZERO_S
FDIV_ZPZZ_ZERO_S
FMAX_ZPZZ_ZERO_S
FMULX_ZPZZ_ZERO_S
TRN1_PPP_S
ZIP1_PPP_S
UZP1_PPP_S
TRN2_PPP_S
ZIP2_PPP_S
UZP2_PPP_S
CNTP_XPP_S
REV_PP_S
UQDECP_WP_S
UQINCP_WP_S
SQDECP_XP_S
UQDECP_XP_S
SQINCP_XP_S
UQINCP_XP_S
SQDECP_ZP_S
UQDECP_ZP_S
SQINCP_ZP_S
UQINCP_ZP_S
INDEX_IR_S
INDEX_RR_S
DUP_ZR_S
INSR_ZR_S
CPY_ZPmR_S
PTRUES_S
PNEXT_S
INSR_ZV_S
CPY_ZPmV_S
WHILEGE_PWW_S
WHILELE_PWW_S
WHILEHI_PWW_S
WHILELO_PWW_S
WHILEHS_PWW_S
WHILELS_PWW_S
WHILEGT_PWW_S
WHILELT_PWW_S
WHILEGE_PXX_S
WHILELE_PXX_S
WHILEHI_PXX_S
WHILELO_PXX_S
WHILEWR_PXX_S
WHILEHS_PXX_S
WHILELS_PXX_S
WHILEGT_PXX_S
WHILELT_PXX_S
WHILERW_PXX_S
CLASTA_RPZ_S
CLASTB_RPZ_S
FADDA_VPZ_S
CLASTA_VPZ_S
CLASTB_VPZ_S
FADDV_VPZ_S
SADDV_VPZ_S
UADDV_VPZ_S
ANDV_VPZ_S
FMINNMV_VPZ_S
FMAXNMV_VPZ_S
FMINV_VPZ_S
SMINV_VPZ_S
UMINV_VPZ_S
EORV_VPZ_S
FMAXV_VPZ_S
SMAXV_VPZ_S
UMAXV_VPZ_S
CLASTA_ZPZ_S
CLASTB_ZPZ_S
SPLICE_ZPZ_S
COMPACT_ZPZ_S
SPLICE_ZPZZ_S
SEL_ZPZZ_S
TBL_ZZZZ_S
TRN1_ZZZ_S
ZIP1_ZZZ_S
UZP1_ZZZ_S
TRN2_ZZZ_S
ZIP2_ZZZ_S
UZP2_ZZZ_S
SABA_ZZZ_S
UABA_ZZZ_S
CMLA_ZZZ_S
FMMLA_ZZZ_S
SABALB_ZZZ_S
UABALB_ZZZ_S
SQDMLALB_ZZZ_S
SMLALB_ZZZ_S
UMLALB_ZZZ_S
SSUBLB_ZZZ_S
USUBLB_ZZZ_S
SBCLB_ZZZ_S
ADCLB_ZZZ_S
SABDLB_ZZZ_S
UABDLB_ZZZ_S
SADDLB_ZZZ_S
UADDLB_ZZZ_S
SQDMULLB_ZZZ_S
SMULLB_ZZZ_S
UMULLB_ZZZ_S
SQDMLSLB_ZZZ_S
SMLSLB_ZZZ_S
UMLSLB_ZZZ_S
RSUBHNB_ZZZ_S
RADDHNB_ZZZ_S
SSUBLTB_ZZZ_S
EORTB_ZZZ_S
FSUB_ZZZ_S
SQSUB_ZZZ_S
UQSUB_ZZZ_S
SSUBWB_ZZZ_S
USUBWB_ZZZ_S
SADDWB_ZZZ_S
UADDWB_ZZZ_S
FADD_ZZZ_S
SQADD_ZZZ_S
UQADD_ZZZ_S
SM4E_ZZZ_S
LSL_WIDE_ZZZ_S
ASR_WIDE_ZZZ_S
LSR_WIDE_ZZZ_S
SQRDCMLAH_ZZZ_S
SQRDMLAH_ZZZ_S
SQDMULH_ZZZ_S
SQRDMULH_ZZZ_S
SMULH_ZZZ_S
UMULH_ZZZ_S
SQRDMLSH_ZZZ_S
TBL_ZZZ_S
FTSSEL_ZZZ_S
FMUL_ZZZ_S
FTSMUL_ZZZ_S
BDEP_ZZZ_S
BGRP_ZZZ_S
FRECPS_ZZZ_S
FRSQRTS_ZZZ_S
SQDMLALBT_ZZZ_S
SSUBLBT_ZZZ_S
SADDLBT_ZZZ_S
SQDMLSLBT_ZZZ_S
EORBT_ZZZ_S
SABALT_ZZZ_S
UABALT_ZZZ_S
SQDMLALT_ZZZ_S
SMLALT_ZZZ_S
UMLALT_ZZZ_S
SSUBLT_ZZZ_S
USUBLT_ZZZ_S
SBCLT_ZZZ_S
ADCLT_ZZZ_S
SABDLT_ZZZ_S
UABDLT_ZZZ_S
SADDLT_ZZZ_S
UADDLT_ZZZ_S
SQDMULLT_ZZZ_S
SMULLT_ZZZ_S
UMULLT_ZZZ_S
SQDMLSLT_ZZZ_S
SMLSLT_ZZZ_S
UMLSLT_ZZZ_S
RSUBHNT_ZZZ_S
RADDHNT_ZZZ_S
CDOT_ZZZ_S
SDOT_ZZZ_S
UDOT_ZZZ_S
SSUBWT_ZZZ_S
USUBWT_ZZZ_S
SADDWT_ZZZ_S
UADDWT_ZZZ_S
BEXT_ZZZ_S
TBX_ZZZ_S
SM4EKEY_ZZZ_S
FEXPA_ZZ_S
SQXTNB_ZZ_S
UQXTNB_ZZ_S
SQXTUNB_ZZ_S
FRECPE_ZZ_S
FRSQRTE_ZZ_S
SUNPKHI_ZZ_S
UUNPKHI_ZZ_S
SUNPKLO_ZZ_S
UUNPKLO_ZZ_S
SQXTNT_ZZ_S
UQXTNT_ZZ_S
SQXTUNT_ZZ_S
REV_ZZ_S
FCMLA_ZPmZZ_S
FMLA_ZPmZZ_S
FNMLA_ZPmZZ_S
FMSB_ZPmZZ_S
FNMSB_ZPmZZ_S
FMAD_ZPmZZ_S
FNMAD_ZPmZZ_S
FADDP_ZPmZZ_S
FMINNMP_ZPmZZ_S
FMAXNMP_ZPmZZ_S
FMINP_ZPmZZ_S
FMAXP_ZPmZZ_S
FMLS_ZPmZZ_S
FNMLS_ZPmZZ_S
CMPGE_WIDE_PPzZZ_S
CMPLE_WIDE_PPzZZ_S
CMPNE_WIDE_PPzZZ_S
CMPHI_WIDE_PPzZZ_S
CMPLO_WIDE_PPzZZ_S
CMPEQ_WIDE_PPzZZ_S
CMPHS_WIDE_PPzZZ_S
CMPLS_WIDE_PPzZZ_S
CMPGT_WIDE_PPzZZ_S
CMPLT_WIDE_PPzZZ_S
FACGE_PPzZZ_S
FCMGE_PPzZZ_S
CMPGE_PPzZZ_S
FCMNE_PPzZZ_S
CMPNE_PPzZZ_S
CMPHI_PPzZZ_S
FCMUO_PPzZZ_S
FCMEQ_PPzZZ_S
CMPEQ_PPzZZ_S
CMPHS_PPzZZ_S
FACGT_PPzZZ_S
FCMGT_PPzZZ_S
CMPGT_PPzZZ_S
HISTCNT_ZPzZZ_S
FRINTA_ZPmZ_S
FLOGB_ZPmZ_S
SXTB_ZPmZ_S
UXTB_ZPmZ_S
FSUB_ZPmZ_S
SHSUB_ZPmZ_S
UHSUB_ZPmZ_S
SQSUB_ZPmZ_S
UQSUB_ZPmZ_S
REVB_ZPmZ_S
BIC_ZPmZ_S
FABD_ZPmZ_S
SABD_ZPmZ_S
UABD_ZPmZ_S
FCADD_ZPmZ_S
FADD_ZPmZ_S
SRHADD_ZPmZ_S
URHADD_ZPmZ_S
SHADD_ZPmZ_S
UHADD_ZPmZ_S
USQADD_ZPmZ_S
SUQADD_ZPmZ_S
AND_ZPmZ_S
LSL_WIDE_ZPmZ_S
ASR_WIDE_ZPmZ_S
LSR_WIDE_ZPmZ_S
FSCALE_ZPmZ_S
URECPE_ZPmZ_S
URSQRTE_ZPmZ_S
FNEG_ZPmZ_S
SQNEG_ZPmZ_S
SMULH_ZPmZ_S
UMULH_ZPmZ_S
SXTH_ZPmZ_S
UXTH_ZPmZ_S
REVH_ZPmZ_S
FRINTI_ZPmZ_S
SQSHL_ZPmZ_S
UQSHL_ZPmZ_S
SQRSHL_ZPmZ_S
UQRSHL_ZPmZ_S
SRSHL_ZPmZ_S
URSHL_ZPmZ_S
LSL_ZPmZ_S
FMUL_ZPmZ_S
FMINNM_ZPmZ_S
FMAXNM_ZPmZ_S
FRINTM_ZPmZ_S
FMIN_ZPmZ_S
SMIN_ZPmZ_S
UMIN_ZPmZ_S
FRINTN_ZPmZ_S
ADDP_ZPmZ_S
SADALP_ZPmZ_S
UADALP_ZPmZ_S
SMINP_ZPmZ_S
UMINP_ZPmZ_S
FRINTP_ZPmZ_S
SMAXP_ZPmZ_S
UMAXP_ZPmZ_S
FSUBR_ZPmZ_S
SHSUBR_ZPmZ_S
UHSUBR_ZPmZ_S
SQSUBR_ZPmZ_S
UQSUBR_ZPmZ_S
SQSHLR_ZPmZ_S
UQSHLR_ZPmZ_S
SQRSHLR_ZPmZ_S
UQRSHLR_ZPmZ_S
SRSHLR_ZPmZ_S
URSHLR_ZPmZ_S
LSLR_ZPmZ_S
EOR_ZPmZ_S
ORR_ZPmZ_S
ASRR_ZPmZ_S
LSRR_ZPmZ_S
ASR_ZPmZ_S
LSR_ZPmZ_S
FDIVR_ZPmZ_S
SDIVR_ZPmZ_S
UDIVR_ZPmZ_S
FABS_ZPmZ_S
SQABS_ZPmZ_S
CLS_ZPmZ_S
RBIT_ZPmZ_S
CNT_ZPmZ_S
CNOT_ZPmZ_S
FSQRT_ZPmZ_S
FDIV_ZPmZ_S
SDIV_ZPmZ_S
UDIV_ZPmZ_S
FMAX_ZPmZ_S
SMAX_ZPmZ_S
UMAX_ZPmZ_S
MOVPRFX_ZPmZ_S
FMULX_ZPmZ_S
FRECPX_ZPmZ_S
FRINTX_ZPmZ_S
CLZ_ZPmZ_S
FRINTZ_ZPmZ_S
MOVPRFX_ZPzZ_S
SQDECP_XPWd_S
SQINCP_XPWd_S
SCVTF_ZPmZ_DtoS
UCVTF_ZPmZ_DtoS
FCVTZS_ZPmZ_DtoS
FCVTNT_ZPmZ_DtoS
FCVTXNT_ZPmZ_DtoS
FCVT_ZPmZ_DtoS
FCVTZU_ZPmZ_DtoS
FCVTX_ZPmZ_DtoS
FCVTZS_ZPmZ_HtoS
FCVTLT_ZPmZ_HtoS
FCVT_ZPmZ_HtoS
FCVTZU_ZPmZ_HtoS
SCVTF_ZPmZ_StoS
UCVTF_ZPmZ_StoS
FCVTZS_ZPmZ_StoS
FCVTZU_ZPmZ_StoS
G_SSUBSAT
G_USUBSAT
G_SADDSAT
G_UADDSAT
G_SSHLSAT
G_USHLSAT
G_SMULFIXSAT
G_UMULFIXSAT
G_SDIVFIXSAT
G_UDIVFIXSAT
G_EXTRACT
G_SELECT
G_BRINDIRECT
WFET
ERET
CATCHRET
CLEANUPRET
PATCHABLE_RET
G_MEMSET
WFIT
TCOMMIT
PATCHABLE_FUNCTION_EXIT
G_BRJT
MOVaddrJT
BFMLALT
G_EXTRACT_VECTOR_ELT
G_INSERT_VECTOR_ELT
G_FCONSTANT
G_CONSTANT
HINT
STATEPOINT
PATCHPOINT
G_PTRTOINT
G_FRINT
G_INTRINSIC_LRINT
G_FNEARBYINT
G_VASTART
TSTART
LIFETIME_START
G_INSERT
G_FSQRT
G_STRICT_FSQRT
G_BITCAST
G_ADDRSPACE_CAST
TTEST
LD1i32_POST
ST1i32_POST
LD2i32_POST
ST2i32_POST
LD3i32_POST
ST3i32_POST
LD4i32_POST
ST4i32_POST
LD1i64_POST
ST1i64_POST
LD2i64_POST
ST2i64_POST
LD3i64_POST
ST3i64_POST
LD4i64_POST
ST4i64_POST
LD1i16_POST
ST1i16_POST
LD2i16_POST
ST2i16_POST
LD3i16_POST
ST3i16_POST
LD4i16_POST
ST4i16_POST
LD1i8_POST
ST1i8_POST
LD2i8_POST
ST2i8_POST
LD3i8_POST
ST3i8_POST
LD4i8_POST
ST4i8_POST
LD1Rv16b_POST
LD2Rv16b_POST
LD3Rv16b_POST
LD4Rv16b_POST
LD1Threev16b_POST
ST1Threev16b_POST
LD3Threev16b_POST
ST3Threev16b_POST
LD1Onev16b_POST
ST1Onev16b_POST
LD1Twov16b_POST
ST1Twov16b_POST
LD2Twov16b_POST
ST2Twov16b_POST
LD1Fourv16b_POST
ST1Fourv16b_POST
LD4Fourv16b_POST
ST4Fourv16b_POST
LD1Rv8b_POST
LD2Rv8b_POST
LD3Rv8b_POST
LD4Rv8b_POST
LD1Threev8b_POST
ST1Threev8b_POST
LD3Threev8b_POST
ST3Threev8b_POST
LD1Onev8b_POST
ST1Onev8b_POST
LD1Twov8b_POST
ST1Twov8b_POST
LD2Twov8b_POST
ST2Twov8b_POST
LD1Fourv8b_POST
ST1Fourv8b_POST
LD4Fourv8b_POST
ST4Fourv8b_POST
LD1Rv1d_POST
LD2Rv1d_POST
LD3Rv1d_POST
LD4Rv1d_POST
LD1Threev1d_POST
ST1Threev1d_POST
LD1Onev1d_POST
ST1Onev1d_POST
LD1Twov1d_POST
ST1Twov1d_POST
LD1Fourv1d_POST
ST1Fourv1d_POST
LD1Rv2d_POST
LD2Rv2d_POST
LD3Rv2d_POST
LD4Rv2d_POST
LD1Threev2d_POST
ST1Threev2d_POST
LD3Threev2d_POST
ST3Threev2d_POST
LD1Onev2d_POST
ST1Onev2d_POST
LD1Twov2d_POST
ST1Twov2d_POST
LD2Twov2d_POST
ST2Twov2d_POST
LD1Fourv2d_POST
ST1Fourv2d_POST
LD4Fourv2d_POST
ST4Fourv2d_POST
LD1Rv4h_POST
LD2Rv4h_POST
LD3Rv4h_POST
LD4Rv4h_POST
LD1Threev4h_POST
ST1Threev4h_POST
LD3Threev4h_POST
ST3Threev4h_POST
LD1Onev4h_POST
ST1Onev4h_POST
LD1Twov4h_POST
ST1Twov4h_POST
LD2Twov4h_POST
ST2Twov4h_POST
LD1Fourv4h_POST
ST1Fourv4h_POST
LD4Fourv4h_POST
ST4Fourv4h_POST
LD1Rv8h_POST
LD2Rv8h_POST
LD3Rv8h_POST
LD4Rv8h_POST
LD1Threev8h_POST
ST1Threev8h_POST
LD3Threev8h_POST
ST3Threev8h_POST
LD1Onev8h_POST
ST1Onev8h_POST
LD1Twov8h_POST
ST1Twov8h_POST
LD2Twov8h_POST
ST2Twov8h_POST
LD1Fourv8h_POST
ST1Fourv8h_POST
LD4Fourv8h_POST
ST4Fourv8h_POST
LD1Rv2s_POST
LD2Rv2s_POST
LD3Rv2s_POST
LD4Rv2s_POST
LD1Threev2s_POST
ST1Threev2s_POST
LD3Threev2s_POST
ST3Threev2s_POST
LD1Onev2s_POST
ST1Onev2s_POST
LD1Twov2s_POST
ST1Twov2s_POST
LD2Twov2s_POST
ST2Twov2s_POST
LD1Fourv2s_POST
ST1Fourv2s_POST
LD4Fourv2s_POST
ST4Fourv2s_POST
LD1Rv4s_POST
LD2Rv4s_POST
LD3Rv4s_POST
LD4Rv4s_POST
LD1Threev4s_POST
ST1Threev4s_POST
LD3Threev4s_POST
ST3Threev4s_POST
LD1Onev4s_POST
ST1Onev4s_POST
LD1Twov4s_POST
ST1Twov4s_POST
LD2Twov4s_POST
ST2Twov4s_POST
LD1Fourv4s_POST
ST1Fourv4s_POST
LD4Fourv4s_POST
ST4Fourv4s_POST
BFCVT
G_FPEXT
G_SEXT
G_ANYEXT
G_ZEXT
G_EXT
MOVaddrEXT
ST64BV
G_FDIV
G_STRICT_FDIV
G_SDIV
G_UDIV
CFINV
LD1W
LDFF1W
ST1W
LD2W
ST2W
LD3W
ST3W
LD4W
ST4W
LDADDAW
LDSMINAW
LDUMINAW
CASPAW
SWPAW
LDCLRAW
LDEORAW
CASAW
LDSETAW
LDSMAXAW
LDUMAXAW
LDADDW
LDADDALW
LDSMINALW
LDUMINALW
CASPALW
SWPALW
LDCLRALW
LDEORALW
CASALW
LDSETALW
LDSMAXALW
LDUMAXALW
LDADDLW
LDSMINLW
LDUMINLW
CASPLW
SWPLW
LDCLRLW
LDEORLW
CASLW
LDSETLW
LDSMAXLW
LDUMAXLW
LDSMINW
LDUMINW
G_ADD_LOW
G_FPOW
CASPW
SWPW
LDAXPW
LDXPW
STLXPW
STXPW
LDARW
LDLARW
LDCLRW
STLLRW
STLRW
LDEORW
LDAPRW
LDAXRW
LDXRW
STLXRW
STXRW
CASW
LDSETW
GLD1D_SXTW
GLDFF1D_SXTW
SST1D_SXTW
GLD1B_D_SXTW
GLDFF1B_D_SXTW
SST1B_D_SXTW
GLD1SB_D_SXTW
GLDFF1SB_D_SXTW
GLD1H_D_SXTW
GLDFF1H_D_SXTW
SST1H_D_SXTW
GLD1SH_D_SXTW
GLDFF1SH_D_SXTW
GLD1W_D_SXTW
GLDFF1W_D_SXTW
SST1W_D_SXTW
GLD1SW_D_SXTW
GLDFF1SW_D_SXTW
GLD1B_S_SXTW
GLDFF1B_S_SXTW
SST1B_S_SXTW
GLD1SB_S_SXTW
GLDFF1SB_S_SXTW
GLD1H_S_SXTW
GLDFF1H_S_SXTW
SST1H_S_SXTW
GLD1SH_S_SXTW
GLDFF1SH_S_SXTW
GLD1W_SXTW
GLDFF1W_SXTW
SST1W_SXTW
GLD1D_UXTW
GLDFF1D_UXTW
SST1D_UXTW
GLD1B_D_UXTW
GLDFF1B_D_UXTW
SST1B_D_UXTW
GLD1SB_D_UXTW
GLDFF1SB_D_UXTW
GLD1H_D_UXTW
GLDFF1H_D_UXTW
SST1H_D_UXTW
GLD1SH_D_UXTW
GLDFF1SH_D_UXTW
GLD1W_D_UXTW
GLDFF1W_D_UXTW
SST1W_D_UXTW
GLD1SW_D_UXTW
GLDFF1SW_D_UXTW
GLD1B_S_UXTW
GLDFF1B_S_UXTW
SST1B_S_UXTW
GLD1SB_S_UXTW
GLDFF1SB_S_UXTW
GLD1H_S_UXTW
GLDFF1H_S_UXTW
SST1H_S_UXTW
GLD1SH_S_UXTW
GLDFF1SH_S_UXTW
GLD1W_UXTW
GLDFF1W_UXTW
SST1W_UXTW
CTERMNE_WW
CTERMEQ_WW
LDSMAXW
LDUMAXW
CBZW
TBZW
CBNZW
TBNZW
LD1RO_W
LD1RQ_W
SpeculationSafeValueW
LDRBBroW
STRBBroW
LDRBroW
STRBroW
LDRDroW
STRDroW
LDRHHroW
STRHHroW
LDRHroW
STRHroW
PRFMroW
LDRQroW
STRQroW
LDRSroW
STRSroW
LDRSBWroW
LDRSHWroW
LDRWroW
STRWroW
LDRSWroW
LDRSBXroW
LDRSHXroW
LDRXroW
STRXroW
BCAX
LDADDAX
G_VECREDUCE_FMAX
G_VECREDUCE_SMAX
G_SMAX
G_VECREDUCE_UMAX
G_UMAX
G_ATOMICRMW_UMAX
G_ATOMICRMW_MAX
LDSMINAX
LDUMINAX
CASPAX
SWPAX
LDCLRAX
LDEORAX
CASAX
LDSETAX
LDSMAXAX
LDUMAXAX
LDADDX
G_FRAME_INDEX
CLREX
G_SMULFIX
G_UMULFIX
G_SDIVFIX
G_UDIVFIX
LDADDALX
LDSMINALX
LDUMINALX
CASPALX
SWPALX
LDCLRALX
LDEORALX
CASALX
LDSETALX
LDSMAXALX
LDUMAXALX
LDADDLX
LDSMINLX
LDUMINLX
CASPLX
SWPLX
LDCLRLX
LDEORLX
CASLX
LDSETLX
LDSMAXLX
LDUMAXLX
LDSMINX
LDUMINX
CASPX
SWPX
LDAXPX
LDXPX
STLXPX
STXPX
LDARX
LDLARX
LDCLRX
STLLRX
STLRX
LDEORX
LDAPRX
LDAXRX
LDXRX
STLXRX
STXRX
CASX
LDSETX
LDSMAXX
LDUMAXX
CTERMNE_XX
CTERMEQ_XX
CBZX
TBZX
CBNZX
TBNZX
SEH_SaveFRegP_X
SEH_SaveRegP_X
SEH_SaveFPLR_X
SEH_SaveFReg_X
SEH_SaveReg_X
SpeculationSafeValueX
LDRBBroX
STRBBroX
LDRBroX
STRBroX
LDRDroX
STRDroX
LDRHHroX
STRHHroX
LDRHroX
STRHroX
PRFMroX
LDRQroX
STRQroX
LDRSroX
STRSroX
LDRSBWroX
LDRSHWroX
LDRWroX
STRWroX
LDRSWroX
LDRSBXroX
LDRSHXroX
LDRXroX
STRXroX
EMITBKEY
SM4ENCKEY
G_MEMCPY
COPY
BRAAZ
BLRAAZ
PACIAZ
AUTIAZ
BRABZ
BLRABZ
PACIBZ
AUTIBZ
G_CTLZ
G_CTTZ
EOR3_ZZZZ
NBSL_ZZZZ
BSL1N_ZZZZ
BSL2N_ZZZZ
BCAX_ZZZZ
BFMMLA_ZZZ
USMMLA_ZZZ
UMMLA_ZZZ
BFMMLA_B_ZZZ
BIC_ZZZ
AND_ZZZ
HISTSEG_ZZZ
EOR_ZZZ
ORR_ZZZ
BFDOT_ZZZ
USDOT_ZZZ
BFMMLA_T_ZZZ
MOVPRFX_ZZ
BFCVTNT_ZPmZ
BFCVT_ZPmZ
LD1Rv16b
LD2Rv16b
LD3Rv16b
LD4Rv16b
LD1Threev16b
ST1Threev16b
LD3Threev16b
ST3Threev16b
LD1Onev16b
ST1Onev16b
LD1Twov16b
ST1Twov16b
LD2Twov16b
ST2Twov16b
LD1Fourv16b
ST1Fourv16b
LD4Fourv16b
ST4Fourv16b
LD1Rv8b
LD2Rv8b
LD3Rv8b
LD4Rv8b
LD1Threev8b
ST1Threev8b
LD3Threev8b
ST3Threev8b
LD1Onev8b
ST1Onev8b
LD1Twov8b
ST1Twov8b
LD2Twov8b
ST2Twov8b
LD1Fourv8b
ST1Fourv8b
LD4Fourv8b
ST4Fourv8b
SQSHLb
UQSHLb
SQSHRNb
UQSHRNb
SQRSHRNb
UQRSHRNb
SQSHRUNb
SQRSHRUNb
SQSHLUb
SEH_StackAlloc
LD1Rv1d
LD2Rv1d
LD3Rv1d
LD4Rv1d
LD1Threev1d
ST1Threev1d
LD1Onev1d
ST1Onev1d
LD1Twov1d
ST1Twov1d
LD1Fourv1d
ST1Fourv1d
LD1Rv2d
LD2Rv2d
LD3Rv2d
LD4Rv2d
LD1Threev2d
ST1Threev2d
LD3Threev2d
ST3Threev2d
LD1Onev2d
ST1Onev2d
LD1Twov2d
ST1Twov2d
LD2Twov2d
ST2Twov2d
LD1Fourv2d
ST1Fourv2d
LD4Fourv2d
ST4Fourv2d
SRSRAd
URSRAd
SSRAd
USRAd
SCVTFd
UCVTFd
SLId
SRId
SQSHLd
UQSHLd
SRSHRd
URSHRd
SSHRd
USHRd
FCVTZSd
SQSHLUd
FCVTZUd
AESIMCrrTied
AESMCrrTied
XPACIuntied
LDRAAindexed
LDRABindexed
FCMLAv4f32_indexed
FMLAv1i32_indexed
SQDMULHv1i32_indexed
SQRDMULHv1i32_indexed
SQDMLALv1i32_indexed
SQDMULLv1i32_indexed
SQDMLSLv1i32_indexed
FMULv1i32_indexed
FMLSv1i32_indexed
FMULXv1i32_indexed
FMLAv2i32_indexed
SQRDMLAHv2i32_indexed
SQDMULHv2i32_indexed
SQRDMULHv2i32_indexed
SQRDMLSHv2i32_indexed
SQDMLALv2i32_indexed
SMLALv2i32_indexed
UMLALv2i32_indexed
SQDMULLv2i32_indexed
SMULLv2i32_indexed
UMULLv2i32_indexed
SQDMLSLv2i32_indexed
SMLSLv2i32_indexed
UMLSLv2i32_indexed
FMULv2i32_indexed
FMLSv2i32_indexed
FMULXv2i32_indexed
FMLAv4i32_indexed
SQRDMLAHv4i32_indexed
SQDMULHv4i32_indexed
SQRDMULHv4i32_indexed
SQRDMLSHv4i32_indexed
SQDMLALv4i32_indexed
SMLALv4i32_indexed
UMLALv4i32_indexed
SQDMULLv4i32_indexed
SMULLv4i32_indexed
UMULLv4i32_indexed
SQDMLSLv4i32_indexed
SMLSLv4i32_indexed
UMLSLv4i32_indexed
FMULv4i32_indexed
FMLSv4i32_indexed
FMULXv4i32_indexed
SQRDMLAHi32_indexed
SQRDMLSHi32_indexed
FMLAv1i64_indexed
SQDMLALv1i64_indexed
SQDMULLv1i64_indexed
SQDMLSLv1i64_indexed
FMULv1i64_indexed
FMLSv1i64_indexed
FMULXv1i64_indexed
FMLAv2i64_indexed
FMULv2i64_indexed
FMLSv2i64_indexed
FMULXv2i64_indexed
FCMLAv4f16_indexed
FCMLAv8f16_indexed
FMLAv1i16_indexed
SQDMULHv1i16_indexed
SQRDMULHv1i16_indexed
FMULv1i16_indexed
FMLSv1i16_indexed
FMULXv1i16_indexed
FMLAv4i16_indexed
SQRDMLAHv4i16_indexed
SQDMULHv4i16_indexed
SQRDMULHv4i16_indexed
SQRDMLSHv4i16_indexed
SQDMLALv4i16_indexed
SMLALv4i16_indexed
UMLALv4i16_indexed
SQDMULLv4i16_indexed
SMULLv4i16_indexed
UMULLv4i16_indexed
SQDMLSLv4i16_indexed
SMLSLv4i16_indexed
UMLSLv4i16_indexed
FMULv4i16_indexed
FMLSv4i16_indexed
FMULXv4i16_indexed
FMLAv8i16_indexed
SQRDMLAHv8i16_indexed
SQDMULHv8i16_indexed
SQRDMULHv8i16_indexed
SQRDMLSHv8i16_indexed
SQDMLALv8i16_indexed
SMLALv8i16_indexed
UMLALv8i16_indexed
SQDMULLv8i16_indexed
SMULLv8i16_indexed
UMULLv8i16_indexed
SQDMLSLv8i16_indexed
SMLSLv8i16_indexed
UMLSLv8i16_indexed
FMULv8i16_indexed
FMLSv8i16_indexed
FMULXv8i16_indexed
SQRDMLAHi16_indexed
SQRDMLSHi16_indexed
SEH_EpilogEnd
SEH_PrologEnd
TBLv16i8Three
TBXv16i8Three
TBLv8i8Three
TBXv8i8Three
BR_JumpTable
TBLv16i8One
TBXv16i8One
TBLv8i8One
TBXv8i8One
DUPv2i32lane
DUPv4i32lane
INSvi32lane
DUPv2i64lane
INSvi64lane
DUPv4i16lane
DUPv8i16lane
INSvi16lane
DUPv16i8lane
DUPv8i8lane
INSvi8lane
LDRApre
LDRBBpre
STRBBpre
LDRBpre
STRBpre
LDPDpre
STPDpre
LDRDpre
STRDpre
LDRHHpre
STRHHpre
LDRHpre
STRHpre
STGPpre
LDPQpre
STPQpre
LDRQpre
STRQpre
LDPSpre
STPSpre
LDRSpre
STRSpre
LDRSBWpre
LDRSHWpre
LDPWpre
STPWpre
LDRWpre
STRWpre
LDPSWpre
LDRSWpre
LDRSBXpre
LDRSHXpre
LDPXpre
STPXpre
LDRXpre
STRXpre
SEH_SaveFReg
SEH_SaveReg
LD1Rv4h
LD2Rv4h
LD3Rv4h
LD4Rv4h
LD1Threev4h
ST1Threev4h
LD3Threev4h
ST3Threev4h
LD1Onev4h
ST1Onev4h
LD1Twov4h
ST1Twov4h
LD2Twov4h
ST2Twov4h
LD1Fourv4h
ST1Fourv4h
LD4Fourv4h
ST4Fourv4h
LD1Rv8h
LD2Rv8h
LD3Rv8h
LD4Rv8h
LD1Threev8h
ST1Threev8h
LD3Threev8h
ST3Threev8h
LD1Onev8h
ST1Onev8h
LD1Twov8h
ST1Twov8h
LD2Twov8h
ST2Twov8h
LD1Fourv8h
ST1Fourv8h
LD4Fourv8h
ST4Fourv8h
SCVTFh
UCVTFh
SQSHLh
UQSHLh
SQSHRNh
UQSHRNh
SQRSHRNh
UQRSHRNh
SQSHRUNh
SQRSHRUNh
FCVTZSh
SQSHLUh
FCVTZUh
LDURBBi
STURBBi
LDTRBi
STTRBi
LDURBi
STLURBi
LDAPURBi
STURBi
LDPDi
LDNPDi
STNPDi
STPDi
LDURDi
STURDi
FMOVDi
LDURHHi
STURHHi
LDTRHi
STTRHi
LDURHi
STLURHi
LDAPURHi
STURHi
FMOVHi
PRFUMi
STGPi
LDPQi
LDNPQi
STNPQi
STPQi
LDURQi
STURQi
LDAPURi
LDPSi
LDNPSi
STNPSi
STPSi
LDURSi
STURSi
FMOVSi
LDTRSBWi
LDURSBWi
LDAPURSBWi
LDTRSHWi
LDURSHWi
LDAPURSHWi
MOVKWi
CCMNWi
MOVNWi
LDPWi
CCMPWi
LDNPWi
STNPWi
STPWi
LDTRWi
STTRWi
LDURWi
STLURWi
STURWi
LDPSWi
LDTRSWi
LDURSWi
LDAPURSWi
MOVZWi
LDTRSBXi
LDURSBXi
LDAPURSBXi
LDTRSHXi
LDURSHXi
LDAPURSHXi
MOVKXi
CCMNXi
MOVNXi
LDPXi
CCMPXi
LDNPXi
STNPXi
STPXi
LDTRXi
STTRXi
LDURXi
STLURXi
LDAPURXi
STURXi
MOVZXi
TCRETURNdi
FCMPEDri
FCMPDri
SCVTFSWDri
UCVTFSWDri
FCVTZSSWDri
FCVTZUSWDri
SCVTFUWDri
UCVTFUWDri
SCVTFSXDri
UCVTFSXDri
FCVTZSSXDri
FCVTZUSXDri
SCVTFUXDri
UCVTFUXDri
FCMPEHri
FCMPHri
SCVTFSWHri
UCVTFSWHri
FCVTZSSWHri
FCVTZUSWHri
SCVTFUWHri
UCVTFUWHri
SCVTFSXHri
UCVTFSXHri
FCVTZSSXHri
FCVTZUSXHri
SCVTFUXHri
UCVTFUXHri
TCRETURNri
FCMPESri
FCMPSri
SCVTFSWSri
UCVTFSWSri
FCVTZSSWSri
FCVTZUSWSri
SCVTFUWSri
UCVTFUWSri
SCVTFSXSri
UCVTFSXSri
FCVTZSSXSri
FCVTZUSXSri
SCVTFUXSri
UCVTFUXSri
SUBWri
ADDWri
ANDWri
SBFMWri
UBFMWri
EORWri
ORRWri
SUBSWri
ADDSWri
ANDSWri
SUBXri
ADDXri
ANDXri
SBFMXri
UBFMXri
EORXri
ORRXri
SUBSXri
ADDSXri
ANDSXri
EXTRWrri
EXTRXrri
LDRBBui
STRBBui
LDRBui
STRBui
LDRDui
STRDui
LDRHHui
STRHHui
LDRHui
STRHui
PRFMui
LDRQui
STRQui
LDRSui
STRSui
LDRSBWui
LDRSHWui
LDRWui
STRWui
LDRSWui
LDRSBXui
LDRSHXui
LDRXui
STRXui
LDRAAwriteback
LDRABwriteback
STGloop_wback
STZGloop_wback
IRGstack
TAGPstack
LDRDl
PRFMl
LDRQl
LDRSl
LDRWl
LDRSWl
LDRXl
StkChkIndirectCall
MVNIv2s_msl
MOVIv2s_msl
MVNIv4s_msl
MOVIv4s_msl
MOVi32imm
MOVi64imm
MOVMCSym
TBLv16i8Two
TBXv16i8Two
TBLv8i8Two
TBXv8i8Two
FADDPv2i32p
FMINNMPv2i32p
FMAXNMPv2i32p
FMINPv2i32p
FMAXPv2i32p
FADDPv2i64p
FMINNMPv2i64p
FMAXNMPv2i64p
FMINPv2i64p
FMAXPv2i64p
FADDPv2i16p
FMINNMPv2i16p
FMAXNMPv2i16p
FMINPv2i16p
FMAXPv2i16p
SEH_Nop
STGloop
STZGloop
FRINTADr
FNEGDr
FCVTHDr
FRINTIDr
FRINTMDr
FRINTNDr
FRINTPDr
FABSDr
FCVTSDr
FSQRTDr
FMOVDr
FCVTASUWDr
FCVTMSUWDr
FCVTNSUWDr
FCVTPSUWDr
FCVTZSUWDr
FCVTAUUWDr
FCVTMUUWDr
FCVTNUUWDr
FCVTPUUWDr
FCVTZUUWDr
FRINT32XDr
FRINT64XDr
FRINTXDr
FCVTASUXDr
FCVTMSUXDr
FCVTNSUXDr
FCVTPSUXDr
FCVTZSUXDr
FCVTAUUXDr
FCVTMUUXDr
FCVTNUUXDr
FCVTPUUXDr
FCVTZUUXDr
FMOVXDr
FRINT32ZDr
FRINT64ZDr
FRINTZDr
FRINTAHr
FCVTDHr
FNEGHr
FRINTIHr
FRINTMHr
FRINTNHr
FRINTPHr
FABSHr
FCVTSHr
FSQRTHr
FMOVHr
FCVTASUWHr
FCVTMSUWHr
FCVTNSUWHr
FCVTPSUWHr
FCVTZSUWHr
FCVTAUUWHr
FCVTMUUWHr
FCVTNUUWHr
FCVTPUUWHr
FCVTZUUWHr
FMOVWHr
FRINTXHr
FCVTASUXHr
FCVTMSUXHr
FCVTNSUXHr
FCVTPSUXHr
FCVTZSUXHr
FCVTAUUXHr
FCVTMUUXHr
FCVTNUUXHr
FCVTPUUXHr
FCVTZUUXHr
FMOVXHr
FRINTZHr
FRINTASr
FCVTDSr
FNEGSr
FCVTHSr
FRINTISr
FRINTMSr
FRINTNSr
FRINTPSr
FABSSr
FSQRTSr
FMOVSr
FCVTASUWSr
FCVTMSUWSr
FCVTNSUWSr
FCVTPSUWSr
FCVTZSUWSr
FCVTAUUWSr
FCVTMUUWSr
FCVTNUUWSr
FCVTPUUWSr
FCVTZUUWSr
FMOVWSr
FRINT32XSr
FRINT64XSr
FRINTXSr
FCVTASUXSr
FCVTMSUXSr
FCVTNSUXSr
FCVTPSUXSr
FCVTZSUXSr
FCVTAUUXSr
FCVTMUUXSr
FCVTNUUXSr
FCVTPUUXSr
FCVTZUUXSr
FRINT32ZSr
FRINT64ZSr
FRINTZSr
REV16Wr
SBCWr
ADCWr
CSINCWr
CSNEGWr
FMOVHWr
CSELWr
CCMNWr
CCMPWr
SBCSWr
ADCSWr
CLSWr
FMOVSWr
RBITWr
REVWr
SDIVWr
UDIVWr
LSLVWr
CSINVWr
RORVWr
ASRVWr
LSRVWr
CLZWr
REV32Xr
REV16Xr
SBCXr
ADCXr
CSINCXr
FMOVDXr
CSNEGXr
FMOVHXr
CSELXr
CCMNXr
CCMPXr
SBCSXr
ADCSXr
CLSXr
RBITXr
REVXr
SDIVXr
UDIVXr
LSLVXr
CSINVXr
RORVXr
ASRVXr
LSRVXr
CLZXr
MOVaddr
CompilerBarrier
FMOVXDHighr
FMOVDXHighr
JumpTableAnchor
DUPv2i32gpr
DUPv4i32gpr
INSvi32gpr
DUPv2i64gpr
INSvi64gpr
DUPv4i16gpr
DUPv8i16gpr
INSvi16gpr
DUPv16i8gpr
DUPv8i8gpr
INSvi8gpr
SHA256SU0rr
SHA1SU1rr
CRC32Brr
CRC32CBrr
AESIMCrr
AESMCrr
FSUBDrr
FADDDrr
FCCMPEDrr
FCMPEDrr
FMULDrr
FNMULDrr
FMINNMDrr
FMAXNMDrr
FMINDrr
FCCMPDrr
FCMPDrr
AESDrr
FDIVDrr
FMAXDrr
AESErr
SHA1Hrr
CRC32Hrr
FSUBHrr
CRC32CHrr
FADDHrr
FCCMPEHrr
FCMPEHrr
FMULHrr
FNMULHrr
SMULHrr
UMULHrr
FMINNMHrr
FMAXNMHrr
FMINHrr
FCCMPHrr
FCMPHrr
FDIVHrr
FMAXHrr
FSUBSrr
FADDSrr
FCCMPESrr
FCMPESrr
FMULSrr
FNMULSrr
FMINNMSrr
FMAXNMSrr
FMINSrr
FCCMPSrr
FCMPSrr
FDIVSrr
FMAXSrr
CRC32Wrr
SUBWrr
CRC32CWrr
BICWrr
ADDWrr
ANDWrr
EONWrr
ORNWrr
EORWrr
ORRWrr
SUBSWrr
BICSWrr
ADDSWrr
ANDSWrr
CRC32Xrr
SUBXrr
CRC32CXrr
BICXrr
ADDXrr
ANDXrr
EONXrr
ORNXrr
EORXrr
ORRXrr
SUBSXrr
BICSXrr
ADDSXrr
ANDSXrr
SHA1SU0rrr
SHA256SU1rrr
SHA256H2rrr
SHA1Crrr
FMSUBDrrr
FNMSUBDrrr
FMADDDrrr
FNMADDDrrr
FCSELDrrr
SHA256Hrrr
FMSUBHrrr
FNMSUBHrrr
FMADDHrrr
FNMADDHrrr
FCSELHrrr
SMSUBLrrr
UMSUBLrrr
SMADDLrrr
UMADDLrrr
SHA1Mrrr
SHA1Prrr
FMSUBSrrr
FNMSUBSrrr
FMADDSrrr
FNMADDSrrr
FCSELSrrr
MSUBWrrr
MADDWrrr
MSUBXrrr
MADDXrrr
TBLv16i8Four
TBXv16i8Four
TBLv8i8Four
TBXv8i8Four
LD1Rv2s
LD2Rv2s
LD3Rv2s
LD4Rv2s
LD1Threev2s
ST1Threev2s
LD3Threev2s
ST3Threev2s
LD1Onev2s
ST1Onev2s
LD1Twov2s
ST1Twov2s
LD2Twov2s
ST2Twov2s
LD1Fourv2s
ST1Fourv2s
LD4Fourv2s
ST4Fourv2s
LD1Rv4s
LD2Rv4s
LD3Rv4s
LD4Rv4s
LD1Threev4s
ST1Threev4s
LD3Threev4s
ST3Threev4s
LD1Onev4s
ST1Onev4s
LD1Twov4s
ST1Twov4s
LD2Twov4s
ST2Twov4s
LD1Fourv4s
ST1Fourv4s
LD4Fourv4s
ST4Fourv4s
SCVTFs
UCVTFs
SQSHLs
UQSHLs
SQSHRNs
UQSHRNs
SQRSHRNs
UQRSHRNs
SQSHRUNs
SQRSHRUNs
FCVTZSs
SQSHLUs
FCVTZUs
FMOVv2f32_ns
FMOVv4f32_ns
FMOVv2f64_ns
FMOVv4f16_ns
FMOVv8f16_ns
MOVIv16b_ns
MOVIv8b_ns
MOVIv2d_ns
SUBWrs
BICWrs
ADDWrs
ANDWrs
EONWrs
ORNWrs
EORWrs
ORRWrs
SUBSWrs
BICSWrs
ADDSWrs
ANDSWrs
SUBXrs
BICXrs
ADDXrs
ANDXrs
EONXrs
ORNXrs
EORXrs
ORRXrs
SUBSXrs
BICSXrs
ADDSXrs
ANDSXrs
ST2GOffset
STZ2GOffset
STGOffset
STZGOffset
SRSRAv2i32_shift
URSRAv2i32_shift
SSRAv2i32_shift
USRAv2i32_shift
SCVTFv2i32_shift
UCVTFv2i32_shift
SLIv2i32_shift
SRIv2i32_shift
SQSHLv2i32_shift
UQSHLv2i32_shift
SSHLLv2i32_shift
USHLLv2i32_shift
SQSHRNv2i32_shift
UQSHRNv2i32_shift
SQRSHRNv2i32_shift
UQRSHRNv2i32_shift
SQSHRUNv2i32_shift
SQRSHRUNv2i32_shift
SRSHRv2i32_shift
URSHRv2i32_shift
SSHRv2i32_shift
USHRv2i32_shift
FCVTZSv2i32_shift
SQSHLUv2i32_shift
FCVTZUv2i32_shift
SRSRAv4i32_shift
URSRAv4i32_shift
SSRAv4i32_shift
USRAv4i32_shift
SCVTFv4i32_shift
UCVTFv4i32_shift
SLIv4i32_shift
SRIv4i32_shift
SQSHLv4i32_shift
UQSHLv4i32_shift
SSHLLv4i32_shift
USHLLv4i32_shift
SQSHRNv4i32_shift
UQSHRNv4i32_shift
SQRSHRNv4i32_shift
UQRSHRNv4i32_shift
SQSHRUNv4i32_shift
SQRSHRUNv4i32_shift
SRSHRv4i32_shift
URSHRv4i32_shift
SSHRv4i32_shift
USHRv4i32_shift
FCVTZSv4i32_shift
SQSHLUv4i32_shift
FCVTZUv4i32_shift
SRSRAv2i64_shift
URSRAv2i64_shift
SSRAv2i64_shift
USRAv2i64_shift
SCVTFv2i64_shift
UCVTFv2i64_shift
SLIv2i64_shift
SRIv2i64_shift
SQSHLv2i64_shift
UQSHLv2i64_shift
SRSHRv2i64_shift
URSHRv2i64_shift
SSHRv2i64_shift
USHRv2i64_shift
FCVTZSv2i64_shift
SQSHLUv2i64_shift
FCVTZUv2i64_shift
SRSRAv4i16_shift
URSRAv4i16_shift
SSRAv4i16_shift
USRAv4i16_shift
SCVTFv4i16_shift
UCVTFv4i16_shift
SLIv4i16_shift
SRIv4i16_shift
SQSHLv4i16_shift
UQSHLv4i16_shift
SSHLLv4i16_shift
USHLLv4i16_shift
SQSHRNv4i16_shift
UQSHRNv4i16_shift
SQRSHRNv4i16_shift
UQRSHRNv4i16_shift
SQSHRUNv4i16_shift
SQRSHRUNv4i16_shift
SRSHRv4i16_shift
URSHRv4i16_shift
SSHRv4i16_shift
USHRv4i16_shift
FCVTZSv4i16_shift
SQSHLUv4i16_shift
FCVTZUv4i16_shift
SRSRAv8i16_shift
URSRAv8i16_shift
SSRAv8i16_shift
USRAv8i16_shift
SCVTFv8i16_shift
UCVTFv8i16_shift
SLIv8i16_shift
SRIv8i16_shift
SQSHLv8i16_shift
UQSHLv8i16_shift
SSHLLv8i16_shift
USHLLv8i16_shift
SQSHRNv8i16_shift
UQSHRNv8i16_shift
SQRSHRNv8i16_shift
UQRSHRNv8i16_shift
SQSHRUNv8i16_shift
SQRSHRUNv8i16_shift
SRSHRv8i16_shift
URSHRv8i16_shift
SSHRv8i16_shift
USHRv8i16_shift
FCVTZSv8i16_shift
SQSHLUv8i16_shift
FCVTZUv8i16_shift
SRSRAv16i8_shift
URSRAv16i8_shift
SSRAv16i8_shift
USRAv16i8_shift
SLIv16i8_shift
SRIv16i8_shift
SQSHLv16i8_shift
UQSHLv16i8_shift
SSHLLv16i8_shift
USHLLv16i8_shift
SQSHRNv16i8_shift
UQSHRNv16i8_shift
SQRSHRNv16i8_shift
UQRSHRNv16i8_shift
SQSHRUNv16i8_shift
SQRSHRUNv16i8_shift
SRSHRv16i8_shift
URSHRv16i8_shift
SSHRv16i8_shift
USHRv16i8_shift
SQSHLUv16i8_shift
SRSRAv8i8_shift
URSRAv8i8_shift
SSRAv8i8_shift
USRAv8i8_shift
SLIv8i8_shift
SRIv8i8_shift
SQSHLv8i8_shift
UQSHLv8i8_shift
SSHLLv8i8_shift
USHLLv8i8_shift
SQSHRNv8i8_shift
UQSHRNv8i8_shift
SQRSHRNv8i8_shift
UQRSHRNv8i8_shift
SQSHRUNv8i8_shift
SQRSHRUNv8i8_shift
SRSHRv8i8_shift
URSHRv8i8_shift
SSHRv8i8_shift
USHRv8i8_shift
SQSHLUv8i8_shift
LOADgot
LOADauthptrgot
SEH_EpilogStart
LDRBBpost
STRBBpost
LDRBpost
STRBpost
LDPDpost
STPDpost
LDRDpost
STRDpost
LDRHHpost
STRHHpost
LDRHpost
STRHpost
STGPpost
LDPQpost
STPQpost
LDRQpost
STRQpost
LDPSpost
STPSpost
LDRSpost
STRSpost
LDRSBWpost
LDRSHWpost
LDPWpost
STPWpost
LDRWpost
STRWpost
LDPSWpost
LDRSWpost
LDRSBXpost
LDRSHXpost
LDPXpost
STPXpost
LDRXpost
STRXpost
SYSLxt
SYSxt
StoreSwiftAsyncContext
ADDVv4i32v
SADDLVv4i32v
UADDLVv4i32v
FMINNMVv4i32v
FMAXNMVv4i32v
FMINVv4i32v
SMINVv4i32v
UMINVv4i32v
FMAXVv4i32v
SMAXVv4i32v
UMAXVv4i32v
ADDVv4i16v
SADDLVv4i16v
UADDLVv4i16v
FMINNMVv4i16v
FMAXNMVv4i16v
FMINVv4i16v
SMINVv4i16v
UMINVv4i16v
FMAXVv4i16v
SMAXVv4i16v
UMAXVv4i16v
ADDVv8i16v
SADDLVv8i16v
UADDLVv8i16v
FMINNMVv8i16v
FMAXNMVv8i16v
FMINVv8i16v
SMINVv8i16v
UMINVv8i16v
FMAXVv8i16v
SMAXVv8i16v
UMAXVv8i16v
ADDVv16i8v
SADDLVv16i8v
UADDLVv16i8v
SMINVv16i8v
UMINVv16i8v
SMAXVv16i8v
UMAXVv16i8v
ADDVv8i8v
SADDLVv8i8v
UADDLVv8i8v
SMINVv8i8v
UMINVv8i8v
SMAXVv8i8v
UMAXVv8i8v
BFMLALBIdx
BFMLALTIdx
ST2GPreIndex
STZ2GPreIndex
STGPreIndex
STZGPreIndex
ST2GPostIndex
STZ2GPostIndex
STGPostIndex
STZGPostIndex
SUBWrx
ADDWrx
SUBSWrx
ADDSWrx
SUBXrx
ADDXrx
SUBSXrx
ADDSXrx
RDFFR_PPz
RDFFRS_PPz
FCMGEv1i32rz
FCMLEv1i32rz
FCMEQv1i32rz
FCMGTv1i32rz
FCMLTv1i32rz
FCMGEv2i32rz
FCMLEv2i32rz
FCMEQv2i32rz
FCMGTv2i32rz
FCMLTv2i32rz
FCMGEv4i32rz
FCMLEv4i32rz
FCMEQv4i32rz
FCMGTv4i32rz
FCMLTv4i32rz
FCMGEv1i64rz
FCMLEv1i64rz
FCMEQv1i64rz
FCMGTv1i64rz
FCMLTv1i64rz
FCMGEv2i64rz
FCMLEv2i64rz
FCMEQv2i64rz
FCMGTv2i64rz
FCMLTv2i64rz
FCMGEv1i16rz
FCMLEv1i16rz
FCMEQv1i16rz
FCMGTv1i16rz
FCMLTv1i16rz
FCMGEv4i16rz
FCMLEv4i16rz
FCMEQv4i16rz
FCMGTv4i16rz
FCMLTv4i16rz
FCMGEv8i16rz
FCMLEv8i16rz
FCMEQv8i16rz
FCMGTv8i16rz
FCMLTv8i16rz
CMGEv16i8rz
CMLEv16i8rz
CMEQv16i8rz
CMGTv16i8rz
CMLTv16i8rz
CMGEv8i8rz
CMLEv8i8rz
CMEQv8i8rz
CMGTv8i8rz
CMLTv8i8rz
D7_D8_D9_D10
Q7_Q8_Q9_Q10
Z7_Z8_Z9_Z10
D17_D18_D19_D20
Q17_Q18_Q19_Q20
Z17_Z18_Z19_Z20
D27_D28_D29_D30
Q27_Q28_Q29_Q30
Z27_Z28_Z29_Z30
D29_D30_D31_D0
Q29_Q30_Q31_Q0
Z29_Z30_Z31_Z0
D8_D9_D10_D11
Q8_Q9_Q10_Q11
W10_W11
X4_X5_X6_X7_X8_X9_X10_X11
Z8_Z9_Z10_Z11
D18_D19_D20_D21
Q18_Q19_Q20_Q21
W20_W21
X14_X15_X16_X17_X18_X19_X20_X21
Z18_Z19_Z20_Z21
D28_D29_D30_D31
Q28_Q29_Q30_Q31
Z28_Z29_Z30_Z31
D30_D31_D0_D1
Q30_Q31_Q0_Q1
W0_W1
X0_X1
Z30_Z31_Z0_Z1
D9_D10_D11_D12
Q9_Q10_Q11_Q12
Z9_Z10_Z11_Z12
D19_D20_D21_D22
Q19_Q20_Q21_Q22
Z19_Z20_Z21_Z22
D31_D0_D1_D2
Q31_Q0_Q1_Q2
Z31_Z0_Z1_Z2
D10_D11_D12_D13
Q10_Q11_Q12_Q13
W12_W13
X6_X7_X8_X9_X10_X11_X12_X13
Z10_Z11_Z12_Z13
D20_D21_D22_D23
Q20_Q21_Q22_Q23
W22_W23
X16_X17_X18_X19_X20_X21_X22_X23
Z20_Z21_Z22_Z23
D0_D1_D2_D3
Q0_Q1_Q2_Q3
W2_W3
X2_X3
Z0_Z1_Z2_Z3
D11_D12_D13_D14
Q11_Q12_Q13_Q14
Z11_Z12_Z13_Z14
D21_D22_D23_D24
Q21_Q22_Q23_Q24
Z21_Z22_Z23_Z24
D1_D2_D3_D4
Q1_Q2_Q3_Q4
Z1_Z2_Z3_Z4
D12_D13_D14_D15
Q12_Q13_Q14_Q15
W14_W15
X8_X9_X10_X11_X12_X13_X14_X15
Z12_Z13_Z14_Z15
D22_D23_D24_D25
Q22_Q23_Q24_Q25
W24_W25
X18_X19_X20_X21_X22_X23_X24_X25
Z22_Z23_Z24_Z25
D2_D3_D4_D5
Q2_Q3_Q4_Q5
W4_W5
X4_X5
Z2_Z3_Z4_Z5
D13_D14_D15_D16
Q13_Q14_Q15_Q16
Z13_Z14_Z15_Z16
D23_D24_D25_D26
Q23_Q24_Q25_Q26
Z23_Z24_Z25_Z26
D3_D4_D5_D6
Q3_Q4_Q5_Q6
Z3_Z4_Z5_Z6
D14_D15_D16_D17
Q14_Q15_Q16_Q17
W16_W17
X10_X11_X12_X13_X14_X15_X16_X17
Z14_Z15_Z16_Z17
D24_D25_D26_D27
Q24_Q25_Q26_Q27
W26_W27
X20_X21_X22_X23_X24_X25_X26_X27
Z24_Z25_Z26_Z27
D4_D5_D6_D7
Q4_Q5_Q6_Q7
W6_W7
X0_X1_X2_X3_X4_X5_X6_X7
Z4_Z5_Z6_Z7
D15_D16_D17_D18
Q15_Q16_Q17_Q18
Z15_Z16_Z17_Z18
D25_D26_D27_D28
Q25_Q26_Q27_Q28
Z25_Z26_Z27_Z28
D5_D6_D7_D8
Q5_Q6_Q7_Q8
Z5_Z6_Z7_Z8
D16_D17_D18_D19
Q16_Q17_Q18_Q19
W18_W19
X12_X13_X14_X15_X16_X17_X18_X19
Z16_Z17_Z18_Z19
D26_D27_D28_D29
Q26_Q27_Q28_Q29
W28_W29
Z26_Z27_Z28_Z29
D6_D7_D8_D9
Q6_Q7_Q8_Q9
W8_W9
X2_X3_X4_X5_X6_X7_X8_X9
Z6_Z7_Z8_Z9
Z10_HI
Z20_HI
Z30_HI
Z0_HI
Z11_HI
Z21_HI
Z31_HI
Z1_HI
Z12_HI
Z22_HI
Z2_HI
Z13_HI
Z23_HI
Z3_HI
Z14_HI
Z24_HI
Z4_HI
Z15_HI
Z25_HI
Z5_HI
Z16_HI
Z26_HI
Z6_HI
Z17_HI
Z27_HI
Z7_HI
Z18_HI
Z28_HI
Z8_HI
Z19_HI
Z29_HI
Z9_HI
X22_X23_X24_X25_X26_X27_X28_FP
W30_WZR
LR_XZR
NZCV
FPR32
GPR32
ZPR2
ZPR3
FPR64
GPR64x8Class_with_x8sub_0_in_tcGPR64
GPR64x8Class_with_x8sub_1_in_tcGPR64
GPR64x8Class_with_x8sub_2_in_tcGPR64
GPR64x8Class_with_x8sub_3_in_tcGPR64
XSeqPairsClass_with_sube64_in_tcGPR64
XSeqPairsClass_with_subo64_in_tcGPR64
GPR64x8Class_with_x8sub_4_in_tcGPR64
GPR64x8Class_with_x8sub_5_in_tcGPR64
GPR64x8Class_with_x8sub_6_in_tcGPR64
GPR64x8Class_with_x8sub_7_in_tcGPR64
GPR64x8Class_with_x8sub_0_in_rtcGPR64
GPR64x8Class_with_x8sub_2_in_rtcGPR64
XSeqPairsClass_with_sube64_in_rtcGPR64
GPR64x8Class_with_x8sub_4_in_rtcGPR64
GPR64x8Class_with_x8sub_6_in_rtcGPR64
ZPR4
FPR16
FPR128
FPR8
DDDD
QQQQ
PPR_3b
ZPR2_with_zsub0_in_ZPR_3b
ZPR3_with_zsub0_in_ZPR_3b
ZPR4_with_zsub0_in_ZPR_3b
ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
GPR64x8Class_with_sub_32_in_GPR32arg
XSeqPairsClass_with_sub_32_in_GPR32arg
WSeqPairsClass_with_sube32_in_GPR32arg
GPR64x8Class_with_x8sub_2_in_GPR64arg
GPR64x8Class_with_x8sub_4_in_GPR64arg
GPR64x8Class_with_x8sub_6_in_GPR64arg
GPR32all
GPR64all
WSeqPairsClass_with_subo32_in_GPR32common
XSeqPairsClass_with_subo64_in_GPR64common
FPR32_lo
DDDD_with_dsub0_in_FPR64_lo
DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo
DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
ZPR2_with_dsub_in_FPR64_lo
ZPR3_with_dsub_in_FPR64_lo
ZPR4_with_dsub_in_FPR64_lo
QQQQ_with_dsub_in_FPR64_lo
FPR16_lo
QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo
QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
GPR64common_and_GPR64noip
GPR64x8Class_with_x8sub_0_in_GPR64noip
GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
XSeqPairsClass_with_sube64_in_GPR64noip
XSeqPairsClass_with_subo64_in_GPR64noip
GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
GPR64x8Class_with_x8sub_2_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
GPR32sp
GPR64sp
GPR64x8Class
WSeqPairsClass
XSeqPairsClass
GPR32sponly
GPR64sponly
! !"
! !!
! !!
! !!
! !"
! !"
! !!
! !!
! !!
! !!
! !!
! !"
! !!
! !!
! 
! 
! !!
! !!
! !!
! !!
! !!
! !!
        
        !!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$(((((((())**++++--..////,,,,,,,,00000000))**++++--..////,,,,,,,,00000000))**++++--..////,,,,,,,,00000000))**++++--..////,,,,,,,,0000000011223333556677774444444488888888112233335566777744444444888888881122333355667777444444448888888811223333556677774444444488888888
        
        !!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((99::;;;;==>>????<<<<<<<<@@@@@@@@99::;;;;==>>????<<<<<<<<@@@@@@@@99::;;;;==>>????<<<<<<<<@@@@@@@@99::;;;;==>>????<<<<<<<<@@@@@@@@99::;;;;==>>????<<<<<<<<@@@@@@@@99::;;;;==>>????<<<<<<<<@@@@@@@@99::;;;;==>>????<<<<<<<<@@@@@@@@99::;;;;==>>????<<<<<<<<@@@@@@@@
        
        !!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((AABBCCCCEEFFGGGGDDDDDDDDHHHHHHHHAABBCCCCEEFFGGGGDDDDDDDDHHHHHHHHAABBCCCCEEFFGGGGDDDDDDDDHHHHHHHHAABBCCCCEEFFGGGGDDDDDDDDHHHHHHHHIIJJKKKKMMNNOOOOLLLLLLLLPPPPPPPPIIJJKKKKMMNNOOOOLLLLLLLLPPPPPPPPIIJJKKKKMMNNOOOOLLLLLLLLPPPPPPPPIIJJKKKKMMNNOOOOLLLLLLLLPPPPPPPP
        
        !!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((QQRRSSSSUUVVWWWWTTTTTTTTXXXXXXXXQQRRSSSSUUVVWWWWTTTTTTTTXXXXXXXXQQRRSSSSUUVVWWWWTTTTTTTTXXXXXXXXQQRRSSSSUUVVWWWWTTTTTTTTXXXXXXXXQQRRSSSSUUVVWWWWTTTTTTTTXXXXXXXXQQRRSSSSUUVVWWWWTTTTTTTTXXXXXXXXQQRRSSSSUUVVWWWWTTTTTTTTXXXXXXXXQQRRSSSSUUVVWWWWTTTTTTTTXXXXXXXX
        
        !!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((
        
        !!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((
        
        !!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((
        
        !!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((
        
        !!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((YYZZ[[[[]]^^____\\\\\\\\````````YYZZ[[[[]]^^____\\\\\\\\````````YYZZ[[[[]]^^____\\\\\\\\````````YYZZ[[[[]]^^____\\\\\\\\````````aabbcccceeffggggddddddddhhhhhhhhaabbcccceeffggggddddddddhhhhhhhhaabbcccceeffggggddddddddhhhhhhhhaabbcccceeffggggddddddddhhhhhhhh
        
        !!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((iijjkkkkmmnnoooollllllllppppppppiijjkkkkmmnnoooollllllllppppppppiijjkkkkmmnnoooollllllllppppppppiijjkkkkmmnnoooollllllllppppppppiijjkkkkmmnnoooollllllllppppppppiijjkkkkmmnnoooollllllllppppppppiijjkkkkmmnnoooollllllllppppppppiijjkkkkmmnnoooollllllllpppppppp
        
        !!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((qqrrssssuuvvwwwwttttttttxxxxxxxxqqrrssssuuvvwwwwttttttttxxxxxxxxqqrrssssuuvvwwwwttttttttxxxxxxxxqqrrssssuuvvwwwwttttttttxxxxxxxxyyzz{{{{}}~~
||||||||
yyzz{{{{}}~~
||||||||
yyzz{{{{}}~~
||||||||
yyzz{{{{}}~~
||||||||
        
        !!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((
        
        !!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((
        
        !!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((
        
        !!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((
        
        !!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((!!""####%%&&''''$$$$$$$$((((((((
R S 
<#<'<P Q 
T U 
<#<'<t
 <$<(<P Q 
 <$<(<t
<#<'<
<#<'<P Q 
<#<'<t
G H F I 
;B;C;u
i:j:99:9
;WX
%:&:
:<9>9
8tv
w:y:eg
#2$2d
}~
   {
a;b;#;$;q
G:H:<
;56{ | =
!_6`6
m)n)
:yz
4(4)4[4\4;"<"
+k5l5
5m+n+3#4#}"~"
#I#J#
3J3K3_#`#8.9.N.O.3
?5@5U5V5W+X+l/m/Q"R"g"h"
*W7X7
3j2k2
*j0k0
5)5*5
" # ! $ c;d;%;&;R
I:J:7989
;78} ~ 
{|
D;E;
':(:
[ \ 
!K6L6
6a6b6
l212y$z$
9wx
3+4,4
+W5X5m5n5Y+Z+1#2#i"j"
#5#6#
3K#L#$.%.:.;.
+5,5A5B5C+D+j/k/=">"S"T"w*x*U7V7
2:2;2m2n2
*b0c0
' * % + }
e;k;';-;s
K:Q:@
;9?
:im
!M6P6
6c6i6
32{$}$
k)l)
.Y5\5o5r5[+^+
"k"n"
"7#:#
3%3(3M#P#&.).<.?.
-505C5F5E+H+4/:/?"B"U"X"y*|*
2E2H2
*d0e0
l:p:Z^
F;L;
):/:!
] c 
r222
u232q
96494 "&"
"U3X3
O/U/:7@7x2{2
52 5 0 6 n;t;0;6;b
T:Z:I
;BH
!S6V6
6l6r6
/~/4
._5b5u5x5a+d+
"q"t"
"=#@#
34373S#V#,./.B.E.
3565I5L5K+N+=/C/E"H"["^"
*(7.7
3T2W2
*f0g0
 O;U;
2:8:*
; &f l (
252z
9E4H4)"/"
#d3g3
X/^/C7I7
5= @ ; A w;};9;?;m
]:c:R
;KQ
2 2p
!Y6\6
6u6{6
4!4$4
.e5h5{5~5g+j+
"w"z"
"C#F#
3C3F3Y#\#2.5.H.K.
95<5O5R5Q+T+F/L/K"N"a"d"
*1777
3c2f2
*h0i0
 X;^;
; ;D
;:A:3
;)/o u 1
:T4W42"8"(#.#
#s3v3'
a/g/L7R7
. 5&5( , & - i;l;+;.;X
O:R:D
;=@
:jn
!N6Q6
6g6j6
|$~$
.Z5]5p5s5\+_+
"l"o"
"8#;#
3&3)3N#Q#'.*.=.@..515D5G5F+I+8/;/@"C"V"Y"z*}*#7&7
2F2I2*
m:q:[_
 J;M;;
-:0:%
a d #
974:4$"'"
"V3Y3
S/V/>7A7y2|2
53 7 1 8 r;u;4;7;c
X:[:M
;FI
!T6W6
6p6s6
.`5c5v5y5b+e+
"r"u"
">#A#
35383T#W#-.0.C.F.4575J5M5L+O+A/D/F"I"\"_"
*,7/7
3U2X2
 S;V;
6:9:.
;$'j m ,
9F4I4-"0"##&#
#e3h3"
\/_/G7J7
5> B < C {;~;=;@;n
a:g:V
;OU
 :#:
2!2t
!Z6]6
6y6|6
4"4%4
.f5i5|5
5h+k+
"x"{"
"D#G#
3D3G3Z#]#3.6.I.L.:5=5P5S5R+U+J/M/L"O"b"e"
*5787
3d2g2
 \;_;
;!;E
?:E:7
;-3s y 5
:U4X46"9",#/#
#t3w3+
e/h/P7S7
.$5'5f;
L:d:A
:R
*:B:"
0^ v  
U:d:J
CR
3:B:+
!0g v )
^:d:S
LR
<:B:4
*0p v 2
M:e:B
;S
+:C:#
1_ w !
V:e:K
DS
4:C:,
"1h w *
_:e:T
MS
=:C:5
+1q w 3
N:f:C
<T
,:D:$
2` x "
W:f:L
ET
5:D:-
#2i x +
`:f:U
NT
>:D:6
,2r x 4
) . 
/ j;m;,;/;Y
P:S:E
;>A
:ko
!O6R6
6h6k6
.[5^5q5t5]+`+
"m"p"
"9#<#
3'3*3O#R#(.+.>.A./525E5H5G+J+9/</A"D"W"Z"{*~*$7'7
2G2J2
n:r:\`
 K;N;
.:1:&
b e $
984;4%"("
"W3Z3
T/W/?7B7z2}2
54 9 
: s;v;5;8;d
Y:\:N
;GJ
!U6X6
6q6t6
.a5d5w5z5c+f+
"s"v"
"?#B#
36393U#X#..1.D.G.5585K5N5M+P+B/E/G"J"]"`"
*-707
3V2Y2
 T;W;
7:::/
;%(k n -
9G4J4."1"$#'#
#f3i3#
]/`/H7K7
5? D 
E |;
;>;A;o
b:h:W
;PV
!:$:
22Z
2"2u
![6^6
6z6}6
4#4&4
.g5j5}5
5i+l+
"y"|"
"E#H#
3E3H3[#^#4.7.J.M.;5>5Q5T5S+V+K/N/M"P"c"f"
*6797
3e2h2
 ];`;
;";F
@:F:8
;.4t z 6
:V4Y47":"-#0#
#u3x3,
f/i/Q7T7
.%5(5x
1I)J)1)2)5)6)
*])^)S)T)W)X)'2(2/202+2,2".#.
'w'x'
I6J6
-!.!}!~!L!M!
+&+'+
+;*<*Z*[*
*m.n.K)L)z4{4
1&2&
&o&p&P&Q&
$($)$
#G$H$"*
1G)H)/)0)3)4)
)[)\)Q)R)U)V)%2&2-2.2)2*2
.{'|'='>'
'G6H6
!i!j!/!0!
,{,|,
-k-l-
+o+p+'*(*=*>*
*P.Q.]4^4y3z3
%R&S&3&4&
#*$+$ *
|4}4
J-L-
-;-=-,-.-l,n,!,#,?,A,0,2,],_,N,P,
+\-^-
!k!n!1!7!
!]9c9
-m-p-
+q+w+)*,*?*E*
*R.X.
o)u)_4e4{3
%T&Z&5&;&
(w%y%w#}#y
e#h#
0^1d1
#,$/$
()(/(_(e(
%u&x&
8.919J
;6=6)6-6
!!H'N'
2/050
/N!T!
$?9E9{9~9
$(+.+
+\*b*
*o.u.n
9"/%/
(D(J(
8%9(9O-Q-
-"-$-
-@-B-1-3-q,s,&,(,D,F,5,7,b,d,S,U,
+a-c-
!!$!q!t!:!@!
!f9l9
-s-v-
+/*2*H*N*
*[.a.
x)~)h4n4
&]&c&>&D&
(|%~%
k#n#
0g1m1
#2$5$
( (2(8(h(n(
%{&~&
?6A6/636
!Z'`'
280>0
W!]!
$H9N9
$1+7+
+e*k*
*x.~.w
8(/+/
(M(S(
%T-V-
-'-)-
-E-G-6-8-v,x,+,-,I,K,:,<,g,i,X,Z,
6#6'6
+f-h-
&0,0
'!*!w!z!C!I!
!o9u9
-y-|-
+5*8*Q*W*
*d.j.
)q4w4
8(&.&
&f&l&G&M&
q#t#
0p1v1
#8$;$
$#(&(;(A(q(w(
C6E65696
!l'r'
2A0G0
`!f!
$Q9W9
%:+@+
+n*t*
8./1/
1%'('
(V(\(
9K-M-
-<->---/-m,o,",$,@,B,1,3,^,`,O,Q,6
6]-_-
!l!o!5!8!
!a9d9
-n-q-
+u+x+**-*C*F*
*V.Y.
s)v)c4f4
%X&[&9&<&
(x%z%{#~#}
f#i#
0b1e1
#-$0$
(-(0(c(f(
%v&y&
8/959K
<6>6,6.6L'O'
23060
/R!U!
$C9F9|9
$,+/+
+`*c*
*s.v.r
9#/&/
(H(K(
8&9,9P-R-
-#-%-
-A-C-2-4-r,t,',),E,G,6,8,c,e,T,V,
6 6"6b-d-
!0$0
"!%!r!u!>!A!
!j9m9
-t-w-
+0*3*L*O*
*_.b.
)l4o4
8#&&&
&a&d&B&E&
l#o#
0k1n1
#3$6$
(!(6(9(l(o(
@6B62646^'a'
2<0?0
[!^!
$L9O9
$5+8+
+i*l*
8)/,/
1 '#'
(Q(T(
%U-W-
--(-*-
-F-H-7-9-w,y,,,.,J,L,;,=,h,j,Y,[,
6&6(6g-i-
*0-0
(!+!x!{!G!J!
!s9y9
-z-}-
+!+$+
+6*9*U*X*
*h.k.
)u4x4
8,&/&
&j&m&K&N&
r#u#
0t1w1
#9$<$
$$('(?(B(u(x(
9#9W
D6F686:6p's'
2E0H0
d!g!
$U9[9
%>+A+
+r*u*
8//2/
1&')'
(Z(](
^9v9
29*6
@9X9
g9v9
I9X9
p9v9
9 966
R9X9
_9w9
39+6
A9Y9
h9w9
J9Y9
q9w9
9!976
S9Y9
`9x9
49K'
B9Z9
i9x9
K9Z9
r9x9
9"9o'
T9Z9
! !m!p!6!9!
!b9e9
-o-r-
+v+y++*.*D*G*
*W.Z.
t)w)d4g4
%Y&\&:&=&
{%|#
g#j#
0c1f1
#.$1$
(.(1(d(g(
%w&z&
80969L
M'P'
24070
/S!V!
-D9G9}9
9-+0+
+a*d*
*t.w.s
9$/'//
(I(L(
8'9-9
"0%0
#!&!s!v!?!B!
!k9n9
-u-x-
+1*4*M*P*
*`.c.
)m4p4
8$&'&
&b&e&C&F&
m#p#
0l1o1
#4$7$
("(7(:(m(p(
_'b'
2=0@0
\!_!
.M9P9
(6+9+
+j*m*
8*/-/
1!'$''
(R(U(
+0.0
)!,!y!|!H!K!
!t9z9
-{-~-
+"+%+
+7*:*V*Y*
*i.l.
)v4y4
9-&0&
&k&n&L&O&
s#v#
0u1x1
#:$=$
$%(((@(C(v(y(
9$9X
q't'
2F0I0
e!h!
.V9\9
(?+B+
+s*v*
80/3/
1''*'
([(^(
c#d#
'u'v'
a)b)
e)f)
N O Q$R$7'9'/'1'
))i)j)
8':'0'2'W
a#b#y'z';'<'q&r&
L M I$J$s&t&3'5'+'-'
'4'6','.'S
7%;%g$k$_)`)
c)d)
+%-%[$]$
K$L$z7}7
<8?8`8c8,
0+1.1
B'E'l8o8
)I%M%
%g)h)
[%]%g%i%\7_7
8!8W8Z8
1F1I1.
=%A%m$q$
/%1%_$a$
9M$N$
E8H82
04171
T'W'u8x8
O%S%
_%a%k%m%
9e7h7
'8*8 
1O1R17
C%G%s$w$
3%5%c$e$
9O$P$
N8Q88
0=1@1
f'i'~8
U%Y%%%)%
c%e%o%q%
9n7q7
0838&
1X1[1@
:%<%j$l$
,%.%\$^$
{7~7
=8@8a8g8/
0,1/1
C'F'm8p8
8L%N%
\%^%h%j%]7`7
8"8X8^8
1G1J1/
@%B%p$r$
0%2%`$b$
F8I85
05181
U'X'v8y8
R%T%"%$%
`%b%l%n%
9f7i7
(8+8#
1P1S18
F%H%v$x$
4%6%d$f$
O8U8;
0>1A1
g'j'
X%Z%(%*%
d%f%p%r%
9o7u7
1878)
1Y1\1A
98R8
Y7r7
B8R83
b7r7
$848!
K8R89
k7r7
-848'
:8S8
Z7s7
C8S84
c7s7
%858"
L8S8:
l7s7
.858(
;8T8
[7t7
D8T8
d7t7
&868
M8T8
m7t7
/868
>8A8b8h8
0-101
D'G'n8q8
^7a7
 8#8Y8_81
1H1K10
G8J8
06191
V'Y'w8z8
9g7j7
)8,8
1Q1T19
P8V8
0?1B1
h'k'
9p7v7
2888
1Z1]1B
)W$Y$n/p/
)J0L0\0^0P0R0V0X0s%t%
%u%v%
%X$Z$o/q/S$U$T$V$
K0N0]0`0Q0T0W0Z0
0$1&1
1 1"1x0z0
0|0~0
0+),)')()))*)C)D)E)F)-).);)<)7)8)9):)?)@)A)B)=)>)M)N)Y)Z)O)P)
M0O0_0a0S0U0Y0[0
0%1'1
1!1#1y0{0
llvm.vectorizer.
enceable_or_nulldereferenceable_sanitize_hwaddress
sanitize_addresse_load_hardeningspeculative_loadpointer_is_validnull_pointer_is_em_or_argmemonlyinaccessiblemem_ccessiblememonlyinaccessiblememoed-zeros-fp-mathno-signed-zeros--sample-accurateprofile-sample-aless-precise-fpmad
use-sample-profile
line-line-tablesno-inline-line-t!
kchk-strong-linkdarwin-stkchk-ststack-probe-sizegal-vector-widthmin-legal-vector
.mask.cmp.pd.256avx512.mask.cmp..mask.cmp.pd.512.mask.cmp.ps.128.mask.cmp.ps.256.mask.cmp.ps.512ckprotectorcheckstackprotectorchnt.group.barrierinvariant.group.4.thread.pointeraarch64.thread.parm.neon.vqadds.arm.neon.vqaddu.arm.neon.vqsubs.arm.neon.vqsubu.aarch64.neon.addp
ch64.neon.bfdot.aarch64.neon.bfdaarch64.neon.bfmlalb.v4f32.v16i8lalt.v4f32.v16i8mmla.v4f32.v16i8arm.neon.bfmlalbarm.neon.bfmlaltarm.neon.bfmmla.e.ss
avx512.mask.store
avx512.broadcastm
avx512.mask.sqrt.p
.mask.pbroadcastavx512.mask.pbro
avx512.kortestc.w
avx512.mask.pcmpsk.vpshufbitqmb.avx512.mask.vpsh2.mask.fpclass.pavx512.mask.fpclavx512.mask.ucmp.
avx512.cvtb2maskavx512.cvtw2maskavx512.cvtd2maskavx512.cvtq2maskssse3.pabs.b.128ssse3.pabs.w.128ssse3.pabs.d.128avx512.mask.pabsavx512.mask.pmaxu
avx512.mask.pmin2.mask.pmulu.dq.avx512.mask.pmul.dq.
avx.cvtdq2.ps.256
2.mask.cvtdq2pd.avx512.mask.cvtd.mask.cvtudq2pd.2.mask.cvtdq2ps..mask.cvtudq2ps.2.mask.cvtqq2pd.avx512.mask.cvtq.mask.cvtuqq2pd.sk.cvtuqq2ps.512q2ps.256
q2ps.512
s2pd.256
avx512.mask.cvtp.mask.vcvtph2ps.avx512.mask.vcvt
nd.load.
avx512.mask.expa.compress.store.avx512.mask.comp2.mask.compress.512.mask.expand.avx512.mask.prolavx512.mask.prorld
512.maskz.vpshldavx512.maskz.vpsrd
512.maskz.vpshrdsse42.crc32.64.8avx.vbroadcast.s512.vbroadcast.savx512.vbroadcasavx512.mask.pmovsx
avx.vbroadcastf128
2.vbroadcasti128avx2.vbroadcastimask.pmov.qd.256mask.pmov.qd.512mask.pmov.wb.256mask.pmov.wb.512avx512.mask.shuf.i
.mask.broadcastfavx512.mask.broa.mask.broadcastiavx512.pbroadcast
mask.broadcast.savx512.mask.padds.
avx512.mask.psub512.mask.paddus.512.mask.psubus.gnr.
avx512.mask.pali512.mask.valign.avx512.mask.valiavx.vinsertf128.avx2.vinserti128avx512.mask.insert
avx.vextractf128avx2.vextracti128
ract
avx512.mask.vext.df.
avx512.mask.perm.di.
2.mask.vpermil.pavx512.mask.vperf.d.
2.mask.pshufl.w.2.mask.pshufh.w.512.mask.movddupavx512.mask.movdhdup
avx512.mask.movsldup
2.mask.movshdup.512.mask.punpcklavx512.mask.punp512.mask.unpckl.avx512.mask.unpc512.mask.punpckh512.mask.unpckh.avx512.mask.and.avx512.mask.pandavx512.mask.andnn.
avx512.mask.por.avx512.mask.xor.avx512.mask.pxorl.
avx512.mask.add.avx512.mask.div.avx512.mask.mul.avx512.mask.sub.avx512.mask.max.avx512.mask.min.avx512.mask.lzcnt.
avx512.mask.psllavx512.mask.psrlavx512.mask.psraavx512.mask.move.s
dd.s
2.maskz.vfmadd.s2.mask3.vfmadd.s2.mask3.vfmsub.s.mask3.vfnmsub.savx512.mask3.vfndd.p
2.mask.vfnmadd.pavx512.mask.vfnm2.mask.vfnmsub.p2.mask3.vfmadd.p2.mask3.vfmsub.p.mask3.vfnmsub.p2.maskz.vfmadd.pmask.vfmaddsub.paddsub.p
subadd.p
2.mask.pternlog.avx512.mask.pter.maskz.pternlog.avx512.maskz.ptedd52
avx512.mask.vpma2.maskz.vpmadd52avx512.maskz.vpmmask.vpermi2var.mask.vpermt2var.rmt2var.
avx512.maskz.vpe2.mask.vpdpbusd..maskz.vpdpbusd..mask.vpdpbusds.maskz.vpdpbusds.2.mask.vpdpwssd..maskz.vpdpwssd..mask.vpdpwssds.maskz.vpdpwssds.c.load.add.f32.patomic.load.add.c.load.add.f64.p
age Info VersionClass PropertiesObjective-C Clasage Info Sectionrbage CollectionObjective-C Garb1
512.mask.vfmadd.avx512.mask.vfmaadd.
sub.
avx512.mask3.vfmavx512.maskz.vfm2.mask3.vfnmsub..mask.vfmaddsub.maskz.vfmaddsub.mask3.vfmaddsub.mask3.vfmsubadd.512.mask.pcmpeq.512.mask.pcmpgt.avx512.kortestz.f.b.
avx512.mask.pshuavx512.mask.cvtud2ps.256
sk.vcvtph2ps.128sk.vcvtph2ps.256sk.cvttps2dq.128avx512.mask.cvttsk.cvttps2dq.256var.
mask.pmul.hr.sw.h.w.
2.mask.pmulhu.w.2.mask.pmaddw.d.avx512.mask.pmadmask.pmaddubs.w.2.mask.packsswb.avx512.mask.pack2.mask.packssdw.2.mask.packuswb.2.mask.packusdw.b
mask.vpermilvar..d
2.mask.dbpsadbw.avx512.mask.dbps512.mask.vpshld.512.mask.vpshrd.ldv.
rdv.
2.maskz.vpshldv.2.maskz.vpshrdv..pmultishift.qb.2.mask.conflict.avx512.mask.conf512.mask.storeu.512.mask.store.pe.b.
e.w.
e.d.
e.q.
avx512.mask.loadnd.b
nd.w
nd.d
nd.q
nd.p
.mask.compress.b.mask.compress.w.mask.compress.d.mask.compress.q.mask.compress.p.broadcastf32x4..broadcastf64x2..broadcastf32x8..broadcastf64x4..broadcasti32x4..broadcasti64x2..broadcasti32x8..broadcasti64x4.v.
avx512.mask.pavg
loop_header_weight
round.towardzerond.tonearestawayround.tonearestafpexcept.maytrap
ount
function_entry_ction_entry_countsynthetic_functi 
JJJJJJJ
JJJJJJJJJJJ
JJJJ@
DDU!
JJJJJJJ
JJJJJJJJJJJ
JJJJ
++++
++++
..D...E
..T...D
..D...D
..D...D
..D.
MMLL
MMLL
MMLL
MMLL
LLLLMMMMMM
MMLL
MMLL
MMLL
MMLL
LLLLMMMMLLL
LLLLMMMMLLL
LLLLMMMMLL
MMLL
LLLLMMMMLLLLMMMMML
MMLL
MMLL
MMMD.
LLLLMMMMLLL
LLLLMMMMLL
MMMD.
LLLLMMMMLL
MMMD.
...D...D...D...D...D...D..D
,,,,YYYY;;;;JJJJ,,,
,,,,YYYY;;;;JJJJ,,,
,,,,,,,
,,,,,,,
,,,,,,,
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
zzzz
zzzz
;;;;JJJJ;;;;JJJJUD
,,,,YYYY;;;;JJJJU99
;;;;JJJJ;;;;JJJJUD
,,,,YYYY;;;;JJJJU
,,,,YYYY;;;;JJJJ@
PD33PD33PD33PDDDPDDDPDDDPD33PD33PD33P4
PD33PD33PD33PDDDPDDDPDDDPD33PD33PD33PD4
PD33PDDDPD33P4
PD33PDDDPD33PD4
,,,,,,,
zzzzzzz
;;;;;;;;zzz
;;;;L%
J,,JJ;;JJ;;JJ,,JL%
J;;JJ;;J;,,
zzzzYYY
JJJ,YYY
YYYYYYY
JJJJJJJ
JJJJJJJ
,,,,YYYY;;;;JJJJ
,,,,JJJ
,,,,,,,
;,,;YJJY,YY,J;;J;,,
;,,;YJJYJ;;J,,,,JJJJ;;;;;,,;YJJYJ;;J,,,,JJJJ;;;;;,,;YJJYJ;;J;,,;YJJYJ;;J;,,
,,,,;JJ
,,,,,,,,,,,
{{{{
----KKK
B|||C
 K.D0L.D [.D [.D
[BJzJ
L|LC
BYzY
[{[BJzJ
L|LCYzY
[{[BzYz
[BL|LCYzY
[{[BJzJ
L|LCYzY
[{[BzYz
Bzzz
|||C
|<|C;z
B|||C
B|||C
 K.D0L.D [.D [.D
JJJJKKKKLLLLJJJJKKKKLLLLJJJJKKKKLLLLJJJJKKKKLLLLJJJJKKKKLLLL;;;;<<<<====@ 
zzJz{{K{||L|YYYYZZZZ[[[[,,,,----
YYYYZZZZ[[[[YYYYZZZZ[[[[
zzJJ{{KK||LL;z;
zzzz{{{{
JJJJ.
zzzz
,,,,;;
YYY"
JJJJYJJYYJJYJJJJYJJYYJJYJ;;J;;;;J;;J;;;;J;;JJ;;J,,,,,,,
))))
$%&'()*+,-
./01/23
8988
BBAAA%AA
""""""""""""
CDECDDEEF
HGAAAA
"""%""""""""""""%""""""""%"
LMNMMMNMMMNMMMNMM
66666666
66666666
C$$H$$$$DEFC$$H$
%%%'&
66666666
66666666666
OPPQ
RRSSTUUVUWUUUUUUUUXXYYQQQRRRRRRRRRRRRRZRR[\T\SSS]^]]]]__T`aabcdeRfRRRRRRRggReaThiijkjjjhiijkjjjijjklkkkhiijkjjjhiijkjjjhiijkjjjhiijkjjjhiijkjjjhiijkjjjhiijkjjjhiijkjjjhiijkjjjhiijkjjj
mnnoopppqqooppnooppqqqrrppqqopppqqoopppqqnoooppoppnoooppnnoooppmnnnoonoosttuuuvvvvvvvvwxxyzyyyxyyzzzwxxyzyyy{mmnnmnnoonoopppoppqqqonoopppmnnoonooppoppqqqpqqrrrpoppqqqopr|}pq|~
~qr~}
}|pq|~
~noopppoppqqqoopr|}pq|~
~qr~}
}|pq|~
~noopppoppqqqmnnooonoopppnoopppnoqr~opr|}|pq|~
~ropr|}|mnnooonoopppnnoqr~opr|}|pq|~
~ropr|}|mnnooonooppp{mmnnnmnnooomnnooo
RRRa
`RRRRR
RZUUVUUUUUUUUUUU
XYRRTTRRRR
QQQQ
RRRRfffTRRRRVV
VVVVVVVVVVV
RRfff
RRRRRRRRTT










8
88
8
88
8888888
888888888888888888888888
88888

8


888
888888
8
88
8
88


8888













8888

8888

8888
88888888
8888888888888888





8888

8888888888888888
88

88888888888

888888888888888888888888

8888
8
















888888888











88

RaRPPRRRRRRRRRRRRRRRRRPP










88








8


88


88888888
888888

WWWWWWWWWWWWWWWWWWWWWWWW



WWWWWWWWWWWWWWWW
WWWWWWWW888
88888888



8


8




88


88


-.5555545
ccccccccc
gisterParametersNumRegisterParamCSProfileSummaryticInterpositionSemanticInterposiant SDK VersionTarget Variant Sauth.abi-versionptrauth.abi-vers
MaxInternalCountMaxFunctionCountIsPartialProfiletialProfileRatioPartialProfileRa
llvmcovmtestdata
Machine Optimization Remark Emitter
m.load.relative.llvm.load.relati
regalloc
Register Allocation
ft Minor VersionSwift Minor VersObjective-C Imag.gnu.linkonce.b..llvm.linkonce.b.gnu.linkonce.sb.llvm.linkonce.sb.
.gnu.linkonce.td.llvm.linkonce.td.
.gnu.linkonce.tb
start-after
start-before
stop-after
stop-before
__OBJC,__category,
__OBJC,__cls_refs,
__objc_classrefs
.custom_section.t_function_table__indirect_funct
__.SYMDEF SORTED
0000000000000000
----------------
                                                                                
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
LLVM_DISABLE_SYMBOLIZATION
LLVM_SYMBOLIZER_PATH
llvm.global_ctors
llvm.global_dtoremit
Debug Info Emission
linetables
CodeView Line Tables
dwarf
DWARF Emission
emit
Pseudo Probe Emission
pseudo probe
Pseudo Probe Emission
write_exception
DWARF Exception Writer
Control Flow Guard
Control Flow Guard
@UUUUUU
LDUc
prepare_parallel__kmpc_kernel_pr
-?:\,[]{}#&*!|>'"%@`
nstrument_target__llvm_profile_iAlignment from assumptions
Loop Distribution
Loop Load Elimination
Lower the matrix intrinsics
.disable
llvm.loop.unroll
llvm.loop.vectorize.followup_all
llvm.loop.vectorize.followup_vectorized
llvm.loop.vectorize.followup_epilogue
Loop Vectorization
SLP Vectorizer
Debug Info Version
$@iW
m_personality_v0__gxx_wasm_persocessCLRExceptionProcessCLRExceptt_eh_personalityrust_eh_personal__CxxFrameHandler3
_except_handler3personality_seh0__gxx_personalit__gcc_personalitx_personality_v1__xlcxx_personaly_v0
dler
__C_specific_han__gnat_eh_person
Loop Access Analysis
liveOnEntry
__cxa_pure_virtual
Optimization Remark Emitter
Z:<S
Stack Safety Local Analysis
stack-safety-local
Stack Safety Analysis
-.5555545
watchossimulator
watchos-simulator
C/C++ MSF 7.00
Microsoft C/C++ 
Optimization level. [-O0, -O1, -O2, or -O3] (default = '-O2')
disable-inlining
Do not run the inliner pass
disable-gvn-loadpre
Do not run the GVN load PRE pass
disable-lto-vectorization
Do not run loop or slp vectorization during LTO
lto-freestanding
Enable Freestanding (disable builtins / TLI) during LTO
disable-llvm-verifier
Don't run the LLVM verifier during the optimization pipeline
thinlto-mode
ThinLTO Code Generation Mode. Options: thread, out-of-process
thread
Threaded codegen
out-of-process
Local out of process using clang
Unknown PIC model
Optimization level must be between 0 and 3
libLTO
Cannot find option named '
Allocation failed
x86-warn-indirectbr
Warn on indirect jmp/call instruction
x86-experimental-lvi-inline-asm-hardening
Harden inline assembly code that may be vulnerable to Load Value Injection (LVI). This feature is experimental.
x86-legacy-mnemonics
Support legacy assembly mnemonics for B&I
invalid register name
expected stack index
invalid stack index
expected ')'
register %
 is only available in 64-bit mode
Unexpected token after '{'
Expected '}'
vex2
vex3
evex
disp8
disp32
unknown prefix
Expected identifier
jcxz
jexcz
short
setb
setnb
unord
eq_uq
false
neq_oq
eq_os
lt_oq
le_oq
unord_s
neq_us
nlt_uq
nle_uq
ord_s
eq_us
nge_uq
ngt_uq
false_os
neq_os
ge_oq
gt_oq
true_us
vcmpss
cmpss
vcmpsd
cmpsd
vcmpps
cmpps
vcmppd
cmppd
vpcmp
vpcmpub
vpcmpb
vpcmpuw
vpcmpw
vpcmpud
vpcmpd
vpcmpuq
vpcmpq
vpcom
vpcomub
vpcomb
vpcomuw
vpcomw
vpcomud
vpcomd
vpcomuq
vpcomq
data16
xacquire
xrelease
acquire
release
lock
repe
repz
repne
repnz
notrack
redundant data16 prefix
redundant data32 prefix
'data32' is not supported in 64-bit mode
callw
calll
ljmpl
fsub
fdiv
fsubr
fsubp
fdivp
fsubrp
fdivrp
movw
movl
outs
lodsb
stosb
scasb
cmpsb
movsb
movsw
movsl
movsq
smovb
xlatb
memory operand is only for determining the size, (R|E)BX will be used for the location
call
raw indirect jump instruction does not use retpoline
Reg:
DXReg
Imm:
Prefix:
Memory: ModeSize=
,Size=
,BaseReg=
,IndexReg=
,Scale=
,Disp=
,SegReg=
rip can only be used as a base register
expected memory operand after 'ptr', found register operand instead
invalid segment register
16-bit addresses cannot have a scale
BYTE
byte
WORD
word
DWORD
dword
FLOAT
float
LONG
long
FWORD
fword
DOUBLE
double
QWORD
qword
MMWORD
mmword
XWORD
xword
TBYTE
tbyte
XMMWORD
xmmword
YMMWORD
ymmword
ZMMWORD
zmmword
Expected 'PTR' or 'ptr' token!
Expected an identifier after {
Invalid rounding mode.
Expected - at this point
Expected } at this point
{sae}
unknown token in expression
expected absolute value
unknown type
unknown offset
expected identifier
Unable to lookup field reference!
Unexpected identifier!
invalid reference to undefined symbol
unexpected bracket encountered
Unexpected token type!
BaseReg/IndexReg already set!
scale factor in address must be 1, 2, 4 or 8
unexpected token!
unable to lookup expression
offset operator cannot yet handle constants
unexpected offset operator expression
cannot use more than one symbol in memory operand
TYPE
type
SIZE
size
LENGTH
length
sizeof
lengthof
expression has unknown type
Scale can't be negative
Unexpected operator!
invalid base+index expression
invalid 16-bit base register
16-bit memory operand may not include only index register
base register is 64-bit, but index register is not
base register is 32-bit, but index register is not
base register is 16-bit, but index register is not
invalid 16-bit base/index register combination
IP-relative addressing requires 64-bit mode
expected immediate expression
%eiz and %riz can only be used as index registers
%rip can only be used as a base register
expected register here
eiz and riz can only be used as index registers
expected absolute expression
scale factor without index register is ignored
%rip as base register can not have an index register
%rip is not allowed as an index register
expected scale expression
scale factor in 16-bit address must be 1
unexpected token in memory operand
Expected 1to<NUM> at this point
{1to2}
{1to4}
{1to8}
{1to16}
Invalid memory broadcast primitive.
Register k0 can't be used as write mask
Expected an op-mask register at this point
Expected a {z} mark at this point
mismatching source and destination index registers
ES:(R|E)SI
ES:(R|E)DI
memory operand is only for determining the size, 
 will be used for the location
'.att_syntax noprefix' is not supported: registers must have a '%' prefix in .att_syntax
'.intel_syntax prefix' is not supported: registers must not have a '%' prefix in .intel_syntax
.cv_fpo_proc
.cv_fpo_setframe
.cv_fpo_pushreg
.cv_fpo_stackalloc
.cv_fpo_endprologue
.cv_fpo_endproc
.seh_pushreg
.pushreg
.setframe
.savereg
.savexmm128
.pushframe
.code16
.code16gcc
.code32
.code64
unknown directive 
unexpected token in '.nops' directive
'.nops' directive with non-positive size
'.nops' directive with negative NOP size
expected parameter byte count
parameters size out of range
unexpected tokens
 in '.cv_fpo_proc' directive
 in '.cv_fpo_setframe' directive
 in '.cv_fpo_pushreg' directive
expected offset
 in '.cv_fpo_stackalloc' directive
 in '.cv_fpo_stackalign' directive
 in '.cv_fpo_endprologue' directive
 in '.cv_fpo_endproc' directive
register is not supported for use with this directive
incorrect register number for use with this directive
you must specify a stack pointer offset
you must specify an offset on the stack
expected @code
invalid instruction mnemonic '
ambiguous operand size for instruction '
unsupported instruction
immediate must be an integer in range [0, 15]
unknown instruction mnemonic
finit
fninit
fsave
fnsave
fstcw
fnstcw
fstcww
fstenv
fnstenv
fstsw
fnstsw
fstsww
fclex
fnclex
cbtw
cltd
cqto
cwtd
popw
popl
popq
retw
retl
retq
callq
cltq
cwtl
iretw
iretl
lgdtw
lgdtl
lgdtq
lidtw
lidtl
lidtq
lretw
lretl
popaw
popal
popfw
popfl
popfq
pushw
pushl
pushq
shlb
shll
shlq
shlw
sgdtw
sgdtl
sgdtq
sidtw
sidtl
sidtq
fildll
pushaw
pushal
pushfw
pushfl
pushfq
ud1l
ud1q
ud1w
verr
cmovbl
cmovbq
cmovbw
cmovel
cmoveq
cmovew
fcmovnbe
fcmove
fistpll
fldcw
leave
ushfd
ysret
sysretl
saveq
xsave64
cmovbel
cmovbeq
cmovbew
cmovael
cmovaeq
cmovaew
cmovlel
cmovleq
cmovlew
cmovgel
cmovgeq
cmovgew
cmovnel
cmovneq
cmovnew
cmovpl
cmovpq
cmovpw
cmovnpl
cmovnpq
cmovnpw
fcmovnb
fcmovbe
sttpq
fisttpll
fxsave64
ysexit
sysexitl
storq
xrstor64
xsavec64
xsaves64
cmoval
cmovaq
cmovaw
cmovll
cmovlq
cmovlw
cmovgl
cmovgq
cmovgw
movnae
fcmovb
rstorq
fxrstor64
rstorsq
xrstors64
xsaveoptq
xsaveopt64
lgdtd
lidtd
sgdtd
sidtd
cmovb
cmove
popf
cmovbe
cmovae
cmovle
cmovge
cmovne
cmovp
cmovnp
pushf
cquire
cmova
cmovl
cmovg
elease
sete
wait
loope
setbe
setae
setle
setge
setne
setp
setnp
comip
fcompi
oopnz
loopne
seta
setl
setg
fucomip
fucompi
adcb
adcl
adcq
adcw
adcx
adcxl
adcxq
addb
addl
addpd
addps
addq
addsd
addss
addsubpd
addsubps
addw
adox
adoxl
adoxq
aesdec
aesdec128kl
aesdec256kl
aesdeclast
aesdecwide128kl
aesdecwide256kl
aesenc
aesenc128kl
aesenc256kl
aesenclast
aesencwide128kl
aesencwide256kl
aesimc
aeskeygenassist
andb
andl
andn
andnl
andnpd
andnps
andnq
andpd
andps
andq
andw
arpl
bextr
bextrl
bextrq
blcfill
blcfilll
blcfillq
blci
blcic
blcicl
blcicq
blcil
blciq
blcmsk
blcmskl
blcmskq
blcs
blcsl
blcsq
blendpd
blendps
blendvpd
blendvps
blsfill
blsfilll
blsfillq
blsi
blsic
blsicl
blsicq
blsil
blsiq
blsmsk
blsmskl
blsmskq
blsr
blsrl
blsrq
bndcl
bndcn
bndcu
bndldx
bndmk
bndmov
bndstx
bound
bsfl
bsfq
bsfw
bsrl
bsrq
bsrw
bswap
bswapl
bswapq
btcl
btcq
btcw
btrl
btrq
btrw
btsl
btsq
btsw
bzhi
bzhil
bzhiq
call
calll
callq
callw
cbtw
cdqe
clac
cldemote
clflush
clflushopt
clgi
clrb
clrl
clrq
clrssbsy
clrw
cltd
cltq
clts
clui
clwb
clzero
cmova
cmovae
cmovael
cmovaeq
cmovaew
cmoval
cmovaq
cmovaw
cmovb
cmovbe
cmovbel
cmovbeq
cmovbew
cmovbl
cmovbq
cmovbw
cmove
cmovel
cmoveq
cmovew
cmovg
cmovge
cmovgel
cmovgeq
cmovgew
cmovgl
cmovgq
cmovgw
cmovl
cmovle
cmovlel
cmovleq
cmovlew
cmovll
cmovlq
cmovlw
cmovne
cmovnel
cmovneq
cmovnew
cmovno
cmovnol
cmovnoq
cmovnow
cmovnp
cmovnpl
cmovnpq
cmovnpw
cmovns
cmovnsl
cmovnsq
cmovnsw
cmovo
cmovol
cmovoq
cmovow
cmovp
cmovpl
cmovpq
cmovpw
cmovs
cmovsl
cmovsq
cmovsw
cmpb
cmpl
cmppd
cmpps
cmpq
cmps
cmpsb
cmpsd
cmpsl
cmpsq
cmpss
cmpsw
cmpw
cmpxchg
cmpxchg16b
cmpxchg8b
cmpxchgb
cmpxchgl
cmpxchgq
cmpxchgw
comisd
comiss
cpuid
cqto
crc32
crc32b
crc32l
crc32q
crc32w
cvtdq2pd
cvtdq2ps
cvtpd2dq
cvtpd2pi
cvtpd2ps
cvtpi2pd
cvtpi2ps
cvtps2dq
cvtps2pd
cvtps2pi
cvtsd2si
cvtsd2sil
cvtsd2siq
cvtsd2ss
cvtsi2sd
cvtsi2sdl
cvtsi2sdq
cvtsi2ss
cvtsi2ssl
cvtsi2ssq
cvtss2sd
cvtss2si
cvtss2sil
cvtss2siq
cvttpd2dq
cvttpd2pi
cvttps2dq
cvttps2pi
cvttsd2si
cvttsd2sil
cvttsd2siq
cvttss2si
cvttss2sil
cvttss2siq
cwde
cwtd
cwtl
data16
decb
decl
decq
decw
divb
divl
divpd
divps
divq
divsd
divss
divw
dppd
dpps
emms
encls
enclu
enclvencodekey128encodekey256
endbr32
endbr64
enqcmd
enqcmds
enter
extractps
extrq
f2xm1
fabs
fadd
faddl
faddp
fadds
fbld
fbstp
fchs
fcmovb
fcmovbe
fcmove
fcmovnb
fcmovnbe
fcmovne
fcmovnu
fcmovu
fcom
fcomi
fcoml
fcomp
fcompi
fcompl
fcompp
fcomps
fcoms
fcos
fdecstp
fdiv
fdivl
fdivp
fdivr
fdivrl
fdivrp
fdivrs
fdivs
femms
ffree
ffreep
fiadd
fiaddl
fiadds
ficom
ficoml
ficomp
ficompl
ficomps
ficoms
fidiv
fidivl
fidivr
fidivrl
fidivrs
fidivs
fild
fildl
fildll
filds
fimul
fimull
fimuls
fincstp
fist
fistl
fistp
fistpl
fistpll
fistps
fists
fisttp
fisttpl
fisttpll
fisttps
fisub
fisubl
fisubr
fisubrl
fisubrs
fisubs
fld1
fldcw
fldenv
fldl
fldl2e
fldl2t
fldlg2
fldln2
fldpi
flds
fldt
fldz
fmul
fmull
fmulp
fmuls
fnclex
fninit
fnop
fnsave
fnstcw
fnstenv
fnstsw
fpatan
fprem
fprem1
fptan
frndint
frstor
fscale
fsin
fsincos
fsqrt
fstl
fstp
fstpl
fstps
fstpt
fsts
fsub
fsubl
fsubp
fsubr
fsubrl
fsubrp
fsubrs
fsubs
ftst
fucom
fucomi
fucomp
fucompi
fucompp
fxam
fxch
fxrstor
fxrstor64
fxsave
fxsave64
fxtract
fyl2x
fyl2xp1
getsec
gf2p8affineinvqb
gf2p8affineqb
gf2p8mulb
haddpd
haddps
hreset
hsubpd
hsubps
idiv
idivb
idivl
idivq
idivw
imul
imulb
imull
imulq
imulw
incb
incl
incq
incsspd
incsspq
incw
insb
insd
insertps
insertq
insl
insw
int3
into
invd
invept
invlpg
invlpga
invpcid
invvpid
iret
iretd
iretl
iretq
iretw
jcxz
jecxz
jmpl
jmpq
jmpw
jrcxz
kaddb
kaddd
kaddq
kaddw
kandb
kandd
kandnb
kandnd
kandnq
kandnw
kandq
kandw
kmovb
kmovd
kmovq
kmovw
knotb
knotd
knotq
knotw
korb
kord
korq
kortestb
kortestd
kortestq
kortestw
korw
kshiftlb
kshiftld
kshiftlq
kshiftlw
kshiftrb
kshiftrd
kshiftrq
kshiftrw
ktestb
ktestd
ktestq
ktestw
kunpckbw
kunpckdq
kunpckwd
kxnorb
kxnord
kxnorq
kxnorw
kxorb
kxord
kxorq
kxorw
lahf
larl
larq
larw
lcall
lcalll
lcallq
lcallw
lddqu
ldmxcsr
ldsl
ldsw
ldtilecfg
leal
leaq
leave
leaw
lesl
lesw
lfence
lfsl
lfsq
lfsw
lgdt
lgdtd
lgdtl
lgdtq
lgdtw
lgsl
lgsq
lgsw
lidt
lidtd
lidtl
lidtq
lidtw
ljmp
ljmpl
ljmpq
ljmpw
lldt
lldtw
llwpcb
lmsw
lmsww
loadiwkey
lock
lods
lodsb
lodsd
lodsl
lodsq
lodsw
loop
loope
loopne
lretl
lretq
lretw
lsll
lslq
lslw
lssl
lssq
lssw
ltrw
lwpins
lwpval
lzcnt
lzcntl
lzcntq
lzcntw
maskmovdqu
maskmovq
maxpd
maxps
maxsd
maxss
mfence
minpd
minps
minsd
minss
monitor
monitorx
montmul
mov.s
movabs
movabsb
movabsl
movabsq
movabsw
movapd
movapd.s
movaps
movaps.s
movb
movb.s
movbe
movbel
movbeq
movbew
movd
movddup
movdir64b
movdiri
movdq2q
movdqa
movdqa.s
movdqu
movdqu.s
movhlps
movhpd
movhps
movl
movl.s
movlhps
movlpd
movlps
movmskpd
movmskps
movntdq
movntdqa
movnti
movntil
movntiq
movntpd
movntps
movntq
movntsd
movntss
movq
movq.s
movq2dq
movs
movsb
movsbl
movsbq
movsbw
movsd
movsd.s
movshdup
movsl
movsldup
movslq
movsq
movss
movss.s
movsw
movswl
movswq
movsx
movsxd
movupd
movupd.s
movups
movups.s
movw
movw.s
movzbl
movzbq
movzbw
movzwl
movzwq
movzx
mpsadbw
mulb
mull
mulpd
mulps
mulq
mulsd
mulss
mulw
mulx
mulxl
mulxq
mwait
mwaitx
negb
negl
negq
negw
nopl
nopq
nopw
notb
notl
notq
notw
orpd
orps
outb
outl
outs
outsb
outsd
outsl
outsw
outw
pabsb
pabsd
pabsw
packssdw
packsswb
packusdw
packuswb
paddb
paddd
paddq
paddsb
paddsw
paddusb
paddusw
paddw
palignr
pand
pandn
pause
pavgb
pavgusb
pavgw
pblendvb
pblendwpclmulhqhqdqpclmulhqlqdqpclmullqhqdqpclmullqlqdq
pclmulqdq
pcmpeqb
pcmpeqd
pcmpeqq
pcmpeqw
pcmpestri
pcmpestrm
pcmpgtb
pcmpgtd
pcmpgtq
pcmpgtw
pcmpistri
pcmpistrm
pconfig
pdep
pdepl
pdepq
pext
pextl
pextq
pextrb
pextrd
pextrq
pextrw
pf2id
pf2iw
pfacc
pfadd
pfcmpeq
pfcmpge
pfcmpgt
pfmax
pfmin
pfmul
pfnacc
pfpnacc
pfrcp
pfrcpit1
pfrcpit2
pfrsqit1
pfrsqrt
pfsub
pfsubr
phaddd
phaddsw
phaddw
phminposuw
phsubd
phsubsw
phsubw
pi2fd
pi2fw
pinsrb
pinsrd
pinsrq
pinsrw
pmaddubsw
pmaddwd
pmaxsb
pmaxsd
pmaxsw
pmaxub
pmaxud
pmaxuw
pminsb
pminsd
pminsw
pminub
pminud
pminuw
pmovmskb
pmovsxbd
pmovsxbq
pmovsxbw
pmovsxdq
pmovsxwd
pmovsxwq
pmovzxbd
pmovzxbq
pmovzxbw
pmovzxdq
pmovzxwd
pmovzxwq
pmuldq
pmulhrsw
pmulhrw
pmulhuw
pmulhw
pmulld
pmullw
pmuludq
popal
popaw
popcnt
popcntl
popcntq
popcntw
popf
popfd
popfl
popfq
popfw
popl
popq
popw
prefetch
prefetchnta
prefetcht0
prefetcht1
prefetcht2
prefetchw
prefetchwt1
psadbw
pshufb
pshufd
pshufhw
pshuflw
pshufw
psignb
psignd
psignw
pslld
pslldq
psllq
psllw
psrad
psraw
psrld
psrldq
psrlq
psrlw
psubb
psubd
psubq
psubsb
psubsw
psubusb
psubusw
psubw
pswapd
ptest
ptwrite
ptwritel
ptwriteq
punpckhbw
punpckhdq
punpckhqdq
punpckhwd
punpcklbw
punpckldq
punpcklqdq
punpcklwd
push
pushal
pushaw
pushf
pushfd
pushfl
pushfq
pushfw
pushl
pushq
pushw
pxor
rclb
rcll
rclq
rclw
rcpps
rcpss
rcrb
rcrl
rcrq
rcrw
rdfsbase
rdfsbasel
rdfsbaseq
rdgsbase
rdgsbasel
rdgsbaseq
rdmsr
rdpid
rdpkru
rdpmc
rdrand
rdrandl
rdrandq
rdrandw
rdseed
rdseedl
rdseedq
rdseedw
rdsspd
rdsspq
rdtsc
rdtscp
repne
retf
retfq
retl
retq
retw
rex64
rolb
roll
rolq
rolw
rorb
rorl
rorq
rorw
rorx
rorxl
rorxq
roundpd
roundps
roundsd
roundss
rsqrtps
rsqrtss
rstorssp
sahf
salc
sarb
sarl
sarq
sarw
sarx
sarxl
sarxq
saveprevssp
sbbb
sbbl
sbbq
sbbw
scas
scasb
scasd
scasl
scasq
scasw
seamcall
seamops
seamret
senduipi
serialize
seta
setae
setb
setbe
sete
setg
setge
setl
setle
setne
setno
setnp
setns
seto
setp
sets
setssbsy
sfence
sgdt
sgdtd
sgdtl
sgdtq
sgdtw
sha1msg1
sha1msg2
sha1nexte
sha1rnds4
sha256msg1
sha256msg2
sha256rnds2
shlb
shld
shldl
shldq
shldw
shll
shlq
shlw
shlx
shlxl
shlxq
shrb
shrd
shrdl
shrdq
shrdw
shrl
shrq
shrw
shrx
shrxl
shrxq
shufpd
shufps
sidt
sidtd
sidtl
sidtq
sidtw
skinit
sldt
sldtl
sldtq
sldtw
slwpcb
smsw
smswl
smswq
smsww
sqrtpd
sqrtps
sqrtsd
sqrtss
stac
stgi
stmxcsr
stos
stosb
stosd
stosl
stosq
stosw
strl
strq
strw
sttilecfg
stui
subb
subl
subpd
subps
subq
subsd
subss
subw
swapgs
syscall
sysenter
sysexit
sysexitl
sysexitq
sysret
sysretl
sysretq
t1mskc
t1mskcl
t1mskcq
tdcall
tdpbf16ps
tdpbssd
tdpbsud
tdpbusd
tdpbuud
test
testb
testl
testq
testui
testw
tileloadd
tileloaddt1
tilerelease
tilestored
tilezero
tpause
tzcnt
tzcntl
tzcntq
tzcntw
tzmsk
tzmskl
tzmskq
ucomisd
ucomiss
ud1l
ud1q
ud1w
uiret
umonitor
umwait
unpckhpd
unpckhps
unpcklpd
unpcklps
v4fmaddps
v4fmaddss
v4fnmaddps
v4fnmaddss
vaddpd
vaddps
vaddsd
vaddss
vaddsubpd
vaddsubps
vaesdec
vaesdeclast
vaesenc
vaesenclast
vaesimc
vaeskeygenassist
valignd
valignq
vandnpd
vandnps
vandpd
vandps
vblendmpd
vblendmps
vblendpd
vblendps
vblendvpd
vblendvps
vbroadcastf128
vbroadcastf32x2
vbroadcastf32x4
vbroadcastf32x8
vbroadcastf64x2
vbroadcastf64x4
vbroadcasti128
vbroadcasti32x2
vbroadcasti32x4
vbroadcasti32x8
vbroadcasti64x2
vbroadcasti64x4vbroadcastsdvbroadcastss
vcmppd
vcmpps
vcmpsd
vcmpss
vcomisd
vcomiss
vcompresspd
vcompressps
vcvtdq2pd
vcvtdq2ps
vcvtne2ps2bf16
vcvtneps2bf16
vcvtneps2bf16x
vcvtneps2bf16y
vcvtpd2dq
vcvtpd2dqx
vcvtpd2dqy
vcvtpd2ps
vcvtpd2psx
vcvtpd2psy
vcvtpd2qq
vcvtpd2udq
vcvtpd2udqx
vcvtpd2udqy
vcvtpd2uqq
vcvtph2ps
vcvtps2dq
vcvtps2pd
vcvtps2ph
vcvtps2qq
vcvtps2udq
vcvtps2uqq
vcvtqq2pd
vcvtqq2ps
vcvtqq2psx
vcvtqq2psy
vcvtsd2si
vcvtsd2sil
vcvtsd2siq
vcvtsd2ss
vcvtsd2usi
vcvtsd2usil
vcvtsd2usiq
vcvtsi2sd
vcvtsi2sdl
vcvtsi2sdq
vcvtsi2ss
vcvtsi2ssl
vcvtsi2ssq
vcvtss2sd
vcvtss2si
vcvtss2sil
vcvtss2siq
vcvtss2usi
vcvtss2usil
vcvtss2usiq
vcvttpd2dq
vcvttpd2dqx
vcvttpd2dqy
vcvttpd2qq
vcvttpd2udqvcvttpd2udqxvcvttpd2udqy
vcvttpd2uqq
vcvttps2dq
vcvttps2qq
vcvttps2udq
vcvttps2uqq
vcvttsd2si
vcvttsd2sil
vcvttsd2siq
vcvttsd2usivcvttsd2usilvcvttsd2usiq
vcvttss2si
vcvttss2sil
vcvttss2siq
vcvttss2usivcvttss2usilvcvttss2usiq
vcvtudq2pd
vcvtudq2ps
vcvtuqq2pd
vcvtuqq2ps
vcvtuqq2psx
vcvtuqq2psy
vcvtusi2sd
vcvtusi2sdl
vcvtusi2sdq
vcvtusi2ss
vcvtusi2ssl
vcvtusi2ssq
vdbpsadbw
vdivpd
vdivps
vdivsd
vdivss
vdpbf16ps
vdppd
vdpps
verr
verw
vexp2pd
vexp2ps
vexpandpd
vexpandpsvextractf128
vextractf32x4
vextractf32x8
vextractf64x2
vextractf64x4vextracti128
vextracti32x4
vextracti32x8
vextracti64x2
vextracti64x4
vextractps
vfixupimmpd
vfixupimmps
vfixupimmsd
vfixupimmss
vfmadd132pd
vfmadd132ps
vfmadd132sd
vfmadd132ss
vfmadd213pd
vfmadd213ps
vfmadd213sd
vfmadd213ss
vfmadd231pd
vfmadd231ps
vfmadd231sd
vfmadd231ss
vfmaddpd
vfmaddps
vfmaddsd
vfmaddss
vfmaddsub132pd
vfmaddsub132ps
vfmaddsub213pd
vfmaddsub213ps
vfmaddsub231pd
vfmaddsub231ps
vfmaddsubpd
vfmaddsubps
vfmsub132pd
vfmsub132ps
vfmsub132sd
vfmsub132ss
vfmsub213pd
vfmsub213ps
vfmsub213sd
vfmsub213ss
vfmsub231pd
vfmsub231ps
vfmsub231sd
vfmsub231ss
vfmsubadd132pd
vfmsubadd132ps
vfmsubadd213pd
vfmsubadd213ps
vfmsubadd231pd
vfmsubadd231ps
vfmsubaddpd
vfmsubaddps
vfmsubpd
vfmsubps
vfmsubsd
vfmsubssvfnmadd132pdvfnmadd132psvfnmadd132sdvfnmadd132ssvfnmadd213pdvfnmadd213psvfnmadd213sdvfnmadd213ssvfnmadd231pdvfnmadd231psvfnmadd231sdvfnmadd231ss
vfnmaddpd
vfnmaddps
vfnmaddsd
vfnmaddssvfnmsub132pdvfnmsub132psvfnmsub132sdvfnmsub132ssvfnmsub213pdvfnmsub213psvfnmsub213sdvfnmsub213ssvfnmsub231pdvfnmsub231psvfnmsub231sdvfnmsub231ss
vfnmsubpd
vfnmsubps
vfnmsubsd
vfnmsubss
vfpclasspd
vfpclasspdx
vfpclasspdy
vfpclasspdz
vfpclassps
vfpclasspsx
vfpclasspsy
vfpclasspsz
vfpclasssd
vfpclassss
vfrczpd
vfrczps
vfrczsd
vfrczss
vgatherdpd
vgatherdps
vgatherpf0dpd
vgatherpf0dps
vgatherpf0qpd
vgatherpf0qps
vgatherpf1dpd
vgatherpf1dps
vgatherpf1qpd
vgatherpf1qps
vgatherqpd
vgatherqps
vgetexppd
vgetexpps
vgetexpsd
vgetexpss
vgetmantpd
vgetmantps
vgetmantsd
vgetmantss
vgf2p8affineinvqb
vgf2p8affineqb
vgf2p8mulb
vhaddpd
vhaddps
vhsubpd
vhsubps
vinsertf128vinsertf32x4vinsertf32x8vinsertf64x2vinsertf64x4
vinserti128vinserti32x4vinserti32x8vinserti64x2vinserti64x4
vinsertps
vlddqu
vldmxcsr
vmaskmovdqu
vmaskmovpd
vmaskmovps
vmaxpd
vmaxps
vmaxsd
vmaxss
vmcall
vmclear
vmfunc
vminpd
vminps
vminsd
vminss
vmlaunch
vmload
vmmcall
vmovapd
vmovapd.s
vmovaps
vmovaps.s
vmovd
vmovddup
vmovdqa
vmovdqa.s
vmovdqa32
vmovdqa32.s
vmovdqa64
vmovdqa64.s
vmovdqu
vmovdqu.s
vmovdqu16
vmovdqu16.s
vmovdqu32
vmovdqu32.s
vmovdqu64
vmovdqu64.s
vmovdqu8
vmovdqu8.s
vmovhlps
vmovhpd
vmovhps
vmovlhps
vmovlpd
vmovlps
vmovmskpd
vmovmskps
vmovntdq
vmovntdqa
vmovntpd
vmovntps
vmovq
vmovq.s
vmovsd
vmovsd.s
vmovshdup
vmovsldup
vmovss
vmovss.s
vmovupd
vmovupd.s
vmovups
vmovups.s
vmpsadbw
vmptrld
vmptrst
vmread
vmreadl
vmreadq
vmresume
vmrun
vmsave
vmulpd
vmulps
vmulsd
vmulss
vmwrite
vmwritel
vmwriteq
vmxoff
vmxon
vorpd
vorps
vp2intersectd
vp2intersectq
vp4dpwssd
vp4dpwssds
vpabsb
vpabsd
vpabsq
vpabsw
vpackssdw
vpacksswb
vpackusdw
vpackuswb
vpaddb
vpaddd
vpaddq
vpaddsb
vpaddsw
vpaddusb
vpaddusw
vpaddw
vpalignr
vpand
vpandd
vpandn
vpandnd
vpandnq
vpandq
vpavgb
vpavgw
vpblendd
vpblendmb
vpblendmd
vpblendmq
vpblendmw
vpblendvb
vpblendwvpbroadcastbvpbroadcastd
vpbroadcastmb2q
vpbroadcastmw2dvpbroadcastqvpbroadcastw
vpclmulhqhqdq
vpclmulhqlqdq
vpclmullqhqdq
vpclmullqlqdq
vpclmulqdq
vpcmov
vpcmpb
vpcmpd
vpcmpeqb
vpcmpeqd
vpcmpeqq
vpcmpeqw
vpcmpestri
vpcmpestrm
vpcmpgtb
vpcmpgtd
vpcmpgtq
vpcmpgtw
vpcmpistri
vpcmpistrm
vpcmpq
vpcmpub
vpcmpud
vpcmpuq
vpcmpuw
vpcmpw
vpcomb
vpcomd
vpcompressb
vpcompressd
vpcompressq
vpcompressw
vpcomq
vpcomub
vpcomud
vpcomuq
vpcomuw
vpcomw
vpconflictd
vpconflictq
vpdpbusd
vpdpbusds
vpdpwssd
vpdpwssds
vperm2f128
vperm2i128
vpermb
vpermd
vpermi2b
vpermi2d
vpermi2pd
vpermi2ps
vpermi2q
vpermi2w
vpermil2pd
vpermil2ps
vpermilpd
vpermilps
vpermpd
vpermps
vpermq
vpermt2b
vpermt2d
vpermt2pd
vpermt2ps
vpermt2q
vpermt2w
vpermw
vpexpandb
vpexpandd
vpexpandq
vpexpandw
vpextrb
vpextrd
vpextrq
vpextrw
vpgatherdd
vpgatherdq
vpgatherqd
vpgatherqq
vphaddbd
vphaddbq
vphaddbw
vphaddd
vphadddq
vphaddsw
vphaddubd
vphaddubq
vphaddubw
vphaddudq
vphadduwd
vphadduwq
vphaddw
vphaddwd
vphaddwq
vphminposuw
vphsubbw
vphsubd
vphsubdq
vphsubsw
vphsubw
vphsubwd
vpinsrb
vpinsrd
vpinsrq
vpinsrw
vplzcntd
vplzcntq
vpmacsdd
vpmacsdqh
vpmacsdql
vpmacssdd
vpmacssdqh
vpmacssdql
vpmacsswd
vpmacssww
vpmacswd
vpmacsww
vpmadcsswd
vpmadcswd
vpmadd52huq
vpmadd52luq
vpmaddubsw
vpmaddwd
vpmaskmovd
vpmaskmovq
vpmaxsb
vpmaxsd
vpmaxsq
vpmaxsw
vpmaxub
vpmaxud
vpmaxuq
vpmaxuw
vpminsb
vpminsd
vpminsq
vpminsw
vpminub
vpminud
vpminuq
vpminuw
vpmovb2m
vpmovd2m
vpmovdb
vpmovdw
vpmovm2b
vpmovm2d
vpmovm2q
vpmovm2w
vpmovmskb
vpmovq2m
vpmovqb
vpmovqd
vpmovqw
vpmovsdb
vpmovsdw
vpmovsqb
vpmovsqd
vpmovsqw
vpmovswb
vpmovsxbd
vpmovsxbq
vpmovsxbw
vpmovsxdq
vpmovsxwd
vpmovsxwq
vpmovusdb
vpmovusdw
vpmovusqb
vpmovusqd
vpmovusqw
vpmovuswb
vpmovw2m
vpmovwb
vpmovzxbd
vpmovzxbq
vpmovzxbw
vpmovzxdq
vpmovzxwd
vpmovzxwq
vpmuldq
vpmulhrsw
vpmulhuw
vpmulhw
vpmulld
vpmullq
vpmullw
vpmultishiftqb
vpmuludq
vpopcntb
vpopcntd
vpopcntq
vpopcntw
vpor
vpord
vporq
vpperm
vprold
vprolq
vprolvd
vprolvq
vprord
vprorq
vprorvd
vprorvq
vprotb
vprotd
vprotq
vprotw
vpsadbw
vpscatterdd
vpscatterdq
vpscatterqd
vpscatterqq
vpshab
vpshad
vpshaq
vpshaw
vpshlb
vpshld
vpshldd
vpshldq
vpshldvd
vpshldvq
vpshldvw
vpshldw
vpshlq
vpshlw
vpshrdd
vpshrdq
vpshrdvd
vpshrdvq
vpshrdvw
vpshrdw
vpshufbvpshufbitqmb
vpshufd
vpshufhw
vpshuflw
vpsignb
vpsignd
vpsignw
vpslld
vpslldq
vpsllq
vpsllvd
vpsllvq
vpsllvw
vpsllw
vpsrad
vpsraq
vpsravd
vpsravq
vpsravw
vpsraw
vpsrld
vpsrldq
vpsrlq
vpsrlvd
vpsrlvq
vpsrlvw
vpsrlw
vpsubb
vpsubd
vpsubq
vpsubsb
vpsubsw
vpsubusb
vpsubusw
vpsubw
vpternlogd
vpternlogq
vptest
vptestmb
vptestmd
vptestmq
vptestmw
vptestnmb
vptestnmd
vptestnmq
vptestnmw
vpunpckhbw
vpunpckhdq
vpunpckhqdq
vpunpckhwd
vpunpcklbw
vpunpckldq
vpunpcklqdq
vpunpcklwd
vpxor
vpxord
vpxorq
vrangepd
vrangeps
vrangesd
vrangess
vrcp14pd
vrcp14ps
vrcp14sd
vrcp14ss
vrcp28pd
vrcp28ps
vrcp28sd
vrcp28ss
vrcpps
vrcpss
vreducepd
vreduceps
vreducesd
vreducess
vrndscalepd
vrndscaleps
vrndscalesd
vrndscaless
vroundpd
vroundps
vroundsd
vroundss
vrsqrt14pd
vrsqrt14ps
vrsqrt14sd
vrsqrt14ss
vrsqrt28pd
vrsqrt28ps
vrsqrt28sd
vrsqrt28ss
vrsqrtps
vrsqrtss
vscalefpd
vscalefps
vscalefsd
vscalefss
vscatterdpd
vscatterdps
vscatterpf0dpd
vscatterpf0dps
vscatterpf0qpd
vscatterpf0qps
vscatterpf1dpd
vscatterpf1dps
vscatterpf1qpd
vscatterpf1qps
vscatterqpd
vscatterqps
vshuff32x4
vshuff64x2
vshufi32x4
vshufi64x2
vshufpd
vshufps
vsqrtpd
vsqrtps
vsqrtsd
vsqrtss
vstmxcsr
vsubpd
vsubps
vsubsd
vsubss
vtestpd
vtestps
vucomisd
vucomiss
vunpckhpd
vunpckhps
vunpcklpd
vunpcklps
vxorpd
vxorps
vzeroall
vzeroupper
wait
wbinvd
wbnoinvd
wrfsbase
wrfsbasel
wrfsbaseq
wrgsbase
wrgsbasel
wrgsbaseq
wrmsr
wrpkru
wrssd
wrssq
wrussd
wrussq
xabort
xacquire
xadd
xaddb
xaddl
xaddq
xaddw
xbegin
xchg
xchgb
xchgl
xchgq
xchgw
xcryptcbc
xcryptcfb
xcryptctr
xcryptecb
xcryptofb
xend
xgetbv
xlatb
xorb
xorl
xorpd
xorps
xorq
xorw
xrelease
xresldtrk
xrstor
xrstor64
xrstors
xrstors64
xsave
xsave64
xsavec
xsavec64
xsaveopt
xsaveopt64
xsaves
xsaves64
xsetbv
xsha1
xsha256
xstore
xstorerng
xsusldtrk
xtest
{1to
mask, index, and destination registers should be distinct
index and destination registers should be distinct
source register '
' implicitly denotes '
' to '
' source group
can't encode '
' in an instruction requiring REX prefix
Instruction may be vulnerable to LVI and requires manual mitigation
See https://software.intel.com/security-software-guidance/insights/deep-dive-load-value-injection#specialinstructions for more information
Not 64-bit mode
64-bit mode
16-bit mode
Not 16-bit mode
32-bit mode
instruction must have size higher than 0
bwlq
ambiguous instructions require an explicit suffix (could be 
unknown use of instruction mnemonic without a size suffix
arm-implicit-it
Allow conditional instructions outdside of an IT block
always
Accept in both ISAs, emit implicit ITs in Thumb
never
Warn in ARM, reject in Thumb
Accept in ARM, reject in Thumb
thumb
Warn in ARM, emit implicit ITs in Thumb
arm-add-build-attributes
arm-asm-parser-allow-dollar-literal
arm-asm-parser-allow-odd-rt
cx1a
cx1d
cx1da
cx2a
cx2d
cx2da
cx3a
cx3d
cx3da
vcx1
vcx1a
vcx2
vcx2a
vcx3
vcx3a
tstate
apsr_nzcv
fpscr_nzcv
fpscr_nzcvqc
conditional execution not supported in Thumb1
too many conditions on IT instruction
too many conditions on VPT instruction
illegal IT block condition mask '
instruction '
' can not set flags, but 's' suffix specified
' is not predicable, but condition code specified
' is not VPT predicable, but VPT code T/E is specified
vmov
vcmp
vcvt
vcvtn
instruction 'cps' requires effect for M-class
instruction with .n (narrow) qualifier not allowed in arm mode
vmovlt
vmul
vmullt
ldrexd
destination operands must be sequential
source operands must be sequential
rfeia
srsia
vldr
vmrs
vmsr
vstr
vldmia
vstmia
vadd.f64
vadd.f32
vcmp.f64
vcmp.f32
vmov.f64
vmov.f32
vdiv.f64
vdiv.f32
vmla.f64
vmla.f32
vmul.f64
vmul.f32
vneg.f64
vneg.f32
ldmdb
rfedb
rfeib
rfeda
srsda
srsib
srsdb
stmdb
vabs
vadd
vand
vbic
vceq
vcle
veor
vmax
vmin
vmvn
vorr
vshl
vshr
vsub
vswp
vzip
vcvt.f64.s32
vcvt.f32.s32
vsqrt
vcvtr.s32.f64
vcvtr.s32.f32
vcvtr.u32.f64
vcvtr.u32.f32
vcvt.f64.u32
vcvt.f32.u32
fldmdbx
fldmiax
fstmiax
fstmdbx
vcvt.s32.f64
vcvt.s32.f32
vcvt.u32.f64
vcvt.u32.f32
vldrb.u8
qsax
sasx
ssax
uasx
usax
vldrbe.u8
vldrbt.u8
vldrd.u64
vldrh.u16
vldrw.u32
vstrb.8
shasx
shsax
uhasx
uhsax
uqasx
uqsax
vldrde.u64
vldrdt.u64
vldrhe.u16
vldrht.u16
vldrwe.u32
vldrwt.u32
vstrbe.8
vstrbt.8
vstrd.64
vstrh.16
vstrw.32
vstrde.64
vstrdt.64
vstrhe.16
vstrht.16
vstrwe.32
vstrwt.32
vrecpe.f32
vrecpe.u32
register name expected
unexpected input in .req directive.
redefinition of '
' does not match original.
fconsts
.f16
<ARMCC::
<ARMVCC::
<ccout 
(invalid)
(tttt)
(ttt)
(ttte)
(tt)
(ttet)
(tte)
(ttee)
(tett)
(tet)
(tete)
(te)
(teet)
(tee)
(teee)
<it-mask 
<coprocessor number: 
<coprocessor register: 
<coprocessor option: 
<mask: 
<banked reg: 
<ARM_MB::
<ARM_ISB::
<ARM_TSB::
<memory
 base:
 offset-imm:
 offset-reg:
 shift-type:
 shift-imm:
 alignment:
post-idx register 
<ARM_PROC::
<shift 
<so_reg_reg 
<so_reg_imm 
<ror 
<mod_imm #
<constant_pool_imm #
<bitfield 
lsb: 
, width: 
<register_list 
<vector_list 
<vector_list(all lanes) 
<vector_list(lane 
noreg
#0xd
#0xc
ishst
ishld
#0x9
#0x8
nshst
nshld
#0x5
#0x4
oshst
oshld
#0x1
#0x0
#0x2
#0x3
#0x6
#0x7
#0xa
#0xb
#0xe
csync
setend
.i16
.u16
.s16
.p16
.f32
.f64
APSR_nzcv
__brkdiv0
addw
aesd
aese
aesimc
aesmc
asrl
bfcsel
bflx
bkpt
blxns
bxns
cbnz
cdp2
cinc
cinv
clrex
clrm
cneg
crc32b
crc32cb
crc32ch
crc32cw
crc32h
crc32w
csdb
csel
cset
csetm
csinc
csinv
csneg
cx1a
cx1d
cx1da
cx2a
cx2d
cx2da
cx3a
cx3d
cx3da
dcps1
dcps2
dcps3
dlstp
eret
faddd
fadds
fcmpzd
fcmpzs
fconstd
fconsts
fldmdbx
fldmiax
fmdhr
fmdlr
fmstat
fstmdbx
fstmiax
fsubd
fsubs
hint
lctp
ldab
ldaex
ldaexb
ldaexd
ldaexh
ldah
ldc2
ldc2l
ldcl
ldmda
ldmdb
ldmib
ldrb
ldrbt
ldrd
ldrex
ldrexb
ldrexd
ldrexh
ldrh
ldrht
ldrsb
ldrsbt
ldrsh
ldrsht
ldrt
letp
lsll
lsrl
mcr2
mcrr
mcrr2
movs
movt
movw
mrc2
mrrc
mrrc2
pkhbt
pkhtb
pldw
pssbb
push
qadd
qadd16
qadd8
qasx
qdadd
qdsub
qsax
qsub
qsub16
qsub8
rbit
rev16
revsh
rfeda
rfedb
rfeia
rfeib
sadd16
sadd8
sasx
sbfx
sdiv
setend
setpan
sevl
sha1c
sha1h
sha1m
sha1p
sha1su0
sha1su1
sha256h
sha256h2
sha256su0
sha256su1
shadd16
shadd8
shasx
shsax
shsub16
shsub8
smlabb
smlabt
smlad
smladx
smlal
smlalbb
smlalbt
smlald
smlaldx
smlaltb
smlaltt
smlatb
smlatt
smlawb
smlawt
smlsd
smlsdx
smlsld
smlsldx
smmla
smmlar
smmls
smmlsr
smmul
smmulr
smuad
smuadx
smulbb
smulbt
smull
smultb
smultt
smulwb
smulwt
smusd
smusdx
sqrshr
sqrshrl
sqshl
sqshll
srsda
srsdb
srshr
srshrl
srsia
srsib
ssat
ssat16
ssax
ssbb
ssub16
ssub8
stc2
stc2l
stcl
stlb
stlex
stlexb
stlexd
stlexh
stlh
stmda
stmdb
stmib
strb
strbt
strd
strex
strexb
strexd
strexh
strh
strht
strt
subs
subw
swpb
sxtab
sxtab16
sxtah
sxtb
sxtb16
sxth
trap
ttat
uadd16
uadd8
uasx
ubfx
udiv
uhadd16
uhadd8
uhasx
uhsax
uhsub16
uhsub8
umaal
umlal
umull
uqadd16
uqadd8
uqasx
uqrshl
uqrshll
uqsax
uqshl
uqshll
uqsub16
uqsub8
urshr
urshrl
usad8
usada8
usat
usat16
usax
usub16
usub8
uxtab
uxtab16
uxtah
uxtb
uxtb16
uxth
vaba
vabal
vabav
vabd
vabdl
vabs
vacge
vacgt
vacle
vaclt
vadc
vadci
vadd
vaddhn
vaddl
vaddlv
vaddlva
vaddv
vaddva
vaddw
vand
vbic
vbif
vbit
vbrsr
vbsl
vcadd
vceq
vcge
vcgt
vcle
vcls
vclt
vclz
vcmla
vcmp
vcmpe
vcmul
vcnt
vctp
vcvt
vcvta
vcvtb
vcvtm
vcvtn
vcvtp
vcvtr
vcvtt
vcx1
vcx1a
vcx2
vcx2a
vcx3
vcx3a
vddup
vdiv
vdot
vdup
vdwdup
veor
vext
vfma
vfmab
vfmal
vfmas
vfmat
vfms
vfmsl
vfnma
vfnms
vhadd
vhcadd
vhsub
vidup
vins
viwdup
vjcvt
vld1
vld2
vld20
vld21
vld3
vld4
vld40
vld41
vld42
vld43
vldmdb
vldmia
vldr
vldrb
vldrd
vldrh
vldrw
vlldm
vlstm
vmax
vmaxa
vmaxav
vmaxnm
vmaxnma
vmaxnmav
vmaxnmv
vmaxv
vmin
vmina
vminav
vminnm
vminnma
vminnmav
vminnmv
vminv
vmla
vmladav
vmladava
vmladavax
vmladavx
vmlal
vmlaldav
vmlaldava
vmlaldavax
vmlaldavx
vmlalv
vmlalva
vmlas
vmlav
vmlava
vmls
vmlsdav
vmlsdava
vmlsdavax
vmlsdavx
vmlsl
vmlsldav
vmlsldava
vmlsldavax
vmlsldavx
vmmla
vmov
vmovl
vmovlb
vmovlt
vmovn
vmovnb
vmovnt
vmovx
vmrs
vmsr
vmul
vmulh
vmull
vmullb
vmullt
vmvn
vneg
vnmla
vnmls
vnmul
vorn
vorr
vpadal
vpadd
vpaddl
vpmax
vpmin
vpnot
vpop
vpsel
vpst
vpush
vqabs
vqadd
vqdmladh
vqdmladhx
vqdmlah
vqdmlal
vqdmlash
vqdmlsdh
vqdmlsdhx
vqdmlsl
vqdmulh
vqdmull
vqdmullb
vqdmullt
vqmovn
vqmovnb
vqmovnt
vqmovun
vqmovunb
vqmovunt
vqneg
vqrdmladh
vqrdmladhx
vqrdmlah
vqrdmlash
vqrdmlsdh
vqrdmlsdhx
vqrdmlsh
vqrdmulh
vqrshl
vqrshrn
vqrshrnb
vqrshrnt
vqrshrun
vqrshrunb
vqrshrunt
vqshl
vqshlu
vqshrn
vqshrnb
vqshrnt
vqshrun
vqshrunb
vqshrunt
vqsub
vraddhn
vrecpe
vrecps
vrev16
vrev32
vrev64
vrhadd
vrinta
vrintm
vrintn
vrintp
vrintr
vrintx
vrintz
vrmlaldavh
vrmlaldavhavrmlaldavhax
vrmlaldavhx
vrmlalvh
vrmlalvha
vrmlsldavh
vrmlsldavhavrmlsldavhax
vrmlsldavhx
vrmulh
vrshl
vrshr
vrshrn
vrshrnb
vrshrnt
vrsqrte
vrsqrts
vrsra
vrsubhn
vsbc
vsbci
vscclrm
vsdot
vseleq
vselge
vselgt
vselvs
vshl
vshlc
vshll
vshllb
vshllt
vshr
vshrn
vshrnb
vshrnt
vsli
vsmmla
vsqrt
vsra
vsri
vst1
vst2
vst20
vst21
vst3
vst4
vst40
vst41
vst42
vst43
vstmdb
vstmia
vstr
vstrb
vstrd
vstrh
vstrw
vsub
vsubhn
vsubl
vsubw
vsudot
vswp
vtbl
vtbx
vtrn
vtst
vudot
vummla
vusdot
vusmmla
vuzp
vzip
wlstp
yield
constant expression expected
register expected
'#' expected
malformed immediate expression
'lsb' operand must be an immediate
'lsb' operand must be in the range [0,31]
too few operands
'width' operand must be an immediate
'width' operand must be in the range [1,32-lsb]
illegal expression
coprocessor option must be an immediate in range [0, 255]
fconstd
immediate value out of range
apsr
nzcvq
nzcvqg
cpsr
spsr
malformed expression
expected modified immediate operand: #[0, 255], #even[0-30]
immediate operand must a number in the range [0, 255]
immediate operand must an even number in the range [0, 30]
 operand expected.
illegal shift operator
shift amount must be an immediate
immediate shift value out of range
malformed rotate expression
rotate amount must be an immediate
'ror' rotate amount must be 8, 16, or 24
'be' or 'le' operand expected
shift operator 'asr' or 'lsl' expected
malformed shift expression
'asr' shift amount must be in range [1,32]
'asr #32' shift amount not allowed in Thumb mode
'lsr' shift amount must be in range [0,31]
vector register in range Q0-Q7 expected
sequential registers in double spaced list
invalid register in register list
bad range in register list
mismatched lane index in register list
invalid register in double-spaced list (must be 'D' register')
non-contiguous register range
lane index must be empty or an integer
lane index out of range
shift must be of a register
invalid immediate shift value
expected immediate or register in shift operand
Token is not a Left Bracket
malformed memory operand
alignment specifier must be 16, 32, 64, 128, or 256 bits
Token is not a Left Curly Brace
duplicated register (
) in register list
register list not in ascending order
expected prefix identifier in operand
lower16
upper16
unexpected prefix in operand
cannot represent relocation in the current file format
unexpected token after prefix
operand must be an even-numbered register in the range [r0, r10]
operand must be a consecutive register
.short
.thumb
.arm
.thumb_func
.code
.syntax
.fnend
.cantunwind
.personality
.handlerdata
.setfp
.pad
.save
.vsave
.even
.personalityindex
.unwind_raw
.movsp
.align
.thumb_set
.inst.n
.inst.w
.eabi_attribute
.fpu
.fnstart
.object_arch
.tlsdescseq
target does not support Thumb mode
target does not support ARM mode
unexpected token in '.thumb_func' directive
unexpected token in .code directive
invalid operand to .code directive
unexpected token in .syntax directive
divided
DIVIDED
'.syntax divided' arm assembly not supported
unified
UNIFIED
unrecognized syntax mode in .syntax directive
unexpected input in '.unreq' directive
unexpected token in '.fnend' directive
.fnstart must precede .fnend directive
unexpected token in '.cantunwind' directive
.fnstart must precede .cantunwind directive
.cantunwind can't be used with .handlerdata directive
.cantunwind can't be used with .personality directive
.handlerdata was specified here
.personality was specified here
.personalityindex was specified here
unexpected input in .personality directive.
unexpected token in '.personality' directive
.fnstart must precede .personality directive
.personality can't be used with .cantunwind directive
.personality must precede .handlerdata directive
multiple personality directives
.cantunwind was specified here
unexpected token in '.handlerdata' directive
.handlerdata can't be used with .cantunwind directive
.fnstart must precede .setfp directive
.setfp must precede .handlerdata directive
frame pointer register expected
comma expected
stack pointer register expected
register should be either $sp or the latest fp register
malformed setfp offset
setfp offset must be an immediate
.fnstart must precede .pad directive
.pad must precede .handlerdata directive
malformed pad offset
pad offset must be an immediate
unexpected token in '.pad' directive
.fnstart must precede .save or .vsave directives
.save or .vsave must precede .handlerdata directive
.save expects GPR registers
.vsave expects DPR registers
unexpected token in '.personalityindex' directive
.fnstart must precede .personalityindex directive
.personalityindex cannot be used with .cantunwind
.personalityindex must precede .handlerdata directive
index must be a constant number
personality routine index should be in range [0-3]
.fnstart must precede .unwind_raw directives
offset must be a constant
expected opcode expression
opcode value must be a constant
invalid opcode
.fnstart must precede .movsp directives
unexpected .movsp directive
sp and pc are not permitted in .movsp directive
expected #constant
malformed offset expression
offset must be an immediate constant
unexpected token in '.movsp' directive
expected architecture extension name
architectural extension '
' is not allowed for the current base architecture
expected identifier after '.thumb_set'
expected comma after name '
width suffixes are invalid in ARM mode
expected expression following directive
inst.n operand is too big, use inst.w instead
inst.w
inst
 operand is too big
cannot determine Thumb instruction size, use inst.n/inst.w instead
Unknown arch name
new target does not support 
 mode, switching to 
 mode
Unknown CPU name
attribute name not recognised: 
expected numeric constant
bad string constant
unexpected token in '.eabi_attribute' directive
Unknown FPU name
unexpected token in '.fnstart' directive
.fnstart starts before the end of previous one
.fnstart was specified here
unknown architecture '
expected variable after '.tlsdescseq' directive
unexpected token in '.tlsdescseq' directive
deprecated instruction in IT block
invalid instruction
instructions in IT block must be predicable
incorrect condition in IT block; got '
', but expected '
predicated instructions must be in IT block
predicated instructions should be in IT block
instruction is not predicable
instruction must be outside of IT block or the last instruction in an IT block
instruction in VPT block must be predicable
incorrect predication in VPT block; got '
VPT predicated instructions must be in VPT block
unpredictable IT predicate sequence
r13 (SP) is an unpredictable operand to BXJ
source register and base register can't be identical
destination register and base register can't be identical
destination vector register and vector 
pointer
offset
 register can't be identical
bitfield width must be in range [1,32-lsb]
registers must be in range r0-r7
writeback operator '!' expected
writeback operator '!' not allowed when base register in register list
writeback register not allowed in register list
writeback register only allowed on system LDM if PC in register-list
system STM cannot have writeback register
destination register must match source register
registers must be in range r0-r7 or pc
registers must be in range r0-r7 or lr
source register must be the same as destination
source register must be sp if destination is sp
branch target out of range
immediate expression for mov requires :lower16: or :upper16
instruction 'esb' is not predicable, but condition code specified
instruction 'csdb' is not predicable, but condition code specified
branch location out of range or not a multiple of 2
branch target out of range or not a multiple of 2
else branch target must be 2 or 4 greater than the branch location
invalid register in register list. Valid registers are r0-r12, lr/r14 and APSR.
instruction 'ssbb' is not predicable, but condition code specified
instruction 'pssbb' is not predicable, but condition code specified
list of registers must be at least 1 and at most 16
Qd register and Qn register can't be identical
Qd register and Qm register can't be identical
Q-registers must be the same
Q-register indexes must be 2 and 0 or 3 and 1
unpredictable instruction, RdHi and RdLo must be different
coprocessor must be configured as CDE
coprocessor must be in the range [p0, p7]
coprocessor must be configured as GCP
Rt can't be R14
destination operands can't be identical
base register needs to be different from destination registers
SP may not be in the register list
PC and LR may not be in the register list simultaneously
SP and PC may not be in the register list
PC may not be in the register list
push
invalid instruction, any one of the following would fix this:
too many operands for instruction
flag setting instruction only valid outside IT block
instruction only valid inside IT block
instruction variant requires ARMv6 or later
instruction variant requires Thumb2
instruction variant requires ARMv8 or later
no flag-preserving variant of this instruction available
operand must be a register in range [r0, r14]
operand must be a register in range [r0, r12] or r14
operand must be a register in range [d0, d31]
operand must be a register in range [d0, d15]
operand must be a list of registers in range [d0, d31]
operand must be a list of registers in range [d0, d15]
operand must be a register sp
operand must be a register in range [q0, q3]
operand must be an odd-numbered register in range [r1,r11]
operand must be a register in range [d0, d7]
operand must be a register in range [q0, q7]
operand must be a register in range [r8, r15]
operand must be a register in range [r0, r7]
operand must be an even-numbered register
operand must be a register in the range [r0, r12], r14 or apsr_nzcv
operand must be a register in range [r0, r12] or r14 or zr
operand must be a register in range [r0, r15]
operand must be a register in range [r0, r14] or apsr_nzcv
operand must be a register in range [r0, r14] or zr
operand must be a register in range [q0, q15]
operand must be a register in range [s0, s15]
operand must be a register in range [s0, s31]
alignment must be 16 or omitted
alignment must be 32 or omitted
alignment must be 64 or omitted
alignment must be 64, 128 or omitted
alignment must be 64, 128, 256 or omitted
alignment must be omitted
operand must be an immediate in the range [0,15]
operand must be an immediate in the range [0,1]
operand must be an immediate in the range [0,239]
operand must be an immediate in the range [0,255]
operand must be an immediate in the range [0,31]
operand must be an immediate in the range [0,32]
operand must be an immediate in the range [0,3]
operand must be an immediate in the range [0,63]
operand must be an immediate in the range [0,65535]
operand must be an immediate in the range [0,0xffff] or a relocatable expression
operand must be an immediate in the range [0,7]
operand must be an immediate in the range [16,16]
operand must be an immediate in the range [1,15]
operand must be an immediate in the range [1,16]
operand must be an immediate in the range [1,31]
operand must be an immediate in the range [1,32]
operand must be an immediate in the range [1,7]
operand must be an immediate in the range [0,0xffffff]
operand must be an immediate in the range [256,65535]
operand must be an immediate in the range [32,32]
operand must be an immediate in the range [8,8]
operand must be an immediate in the range [8,255]
operand must be an immediate in the range [1,8]
vector increment immediate must be 1, 2, 4 or 8
saturate operand must be 48 or 64
operand must be a list of registers in range [s0, s31]
operand must be a list of two consecutive q-registers in range [q0,q7]
operand must be a list of four consecutive q-registers in range [q0,q7]
complex rotation must be 0, 90, 180 or 270
complex rotation must be 90 or 270
MVE fixed-point immediate operand must be between 1 and 32
MVE fixed-point immediate operand must be between 1 and 16
operand must be an immediate in the range [0,127]
operand must be an immediate in the range [0,511]
operand must be an immediate in the range [0,2047]
operand must be an immediate in the range [0,4095]
operand must be an immediate in the range [0,8191]
loop start is out of range or not a negative multiple of 2
condition code for floating-point comparison must be EQ, NE, LT, GT, LE or GE
condition code for sign-independent integer comparison must be EQ or NE
condition code for signed integer comparison must be EQ, NE, LT, GT, LE or GE
condition code for unsigned integer comparison must be EQ, NE, HS or HI
operand must be an immediate in the range [1,64]
loop end is out of range or not a positive multiple of 2
armv4t
armv5t
armv5te
armv6
armv6m or armv6t2
armv8m.base
armv8m.main
armv8.1m.main
mve.fp
fp registers
16-bit fp registers
64-bit fp registers
armv8.1m.main with FP or MVE
armv6t2
armv6k
armv7
armv8
armv7 or earlier
VFP2
VFP3
VFP4
double precision VFP
FPARMv8
NEON
half-float conversions
full half-float
full half-float fml
BFloat16 floating point extension
8-bit integer matrix multiply
divide in THUMB
divide in ARM
data-barriers
full-data-barrier
v7 clrex
acquire/release
mp-extensions
virtualization-extensions
TrustZone
ARMv8-M Security Extensions
thumb2
armv*m
!armv*m
arm-mode
NaCl
ilp32
.hword
.2byte
.word
.4byte
.dword
.8byte
.xword
expected '(' after @AUTH expression
expected key name in @AUTH expression
invalid key '
' in @AUTH expression
expected ',' after key in @AUTH expression
expected integer discriminator after key in @AUTH expression
too wide integer discriminator '
'in @AUTH expression
addr
expected 'addr' after discriminator in @AUTH expression
expected ')' at the end of @AUTH expression
b.eq
b.ne
b.hs
b.cs
b.lo
b.cc
b.mi
b.pl
b.vs
b.vc
b.hi
b.ls
b.ge
b.lt
b.gt
b.le
b.al
b.nv
.req
tlbi
invalid condition code
fccmp
fccmpe
fcsel
csel
csinc
csinv
csneg
csetm
unexpected token in argument list
vector register without type specifier expected
sve vector register without type specifier expected
sve predicate register without type specifier expected
register name or alias expected
unexpected input in .req directive
ignoring redefinition of register alias '
invalid vector kind qualifier
.16b
invalid operand
invalid operand for IC instruction
 requires: 
invalid operand for DC instruction
invalid operand for AT instruction
invalid operand for TLBI instruction
TLBI 
invalid operand for prediction restriction instruction
expected register operand
specified 
 op requires a register
 op does not use a register
ARMv8.1a
ARMv8.2a
ARMv8.3a
ARMv8.4a
ARMv8.5a
ARMv8.6a
ARMv8.7a
(unknown)
sha3
sha2
crypto
simd
predres
ccdp
memtag
tlb-rmi
pan-rwv
ccpp
rcpc
sve2
sve2-aes
sve2-sm4
sve2-sha3
sve2-bitperm
ls64
rdma
profile
<fpimm 
 (inexact)
<barrier 
<barrier invalid #
<shiftedimm 
, lsl #
<condcode 
<vectorlist 
<vectorindex 
<sysreg: 
<prfop 
<prfop invalid #
<register 
<imp>
uxtb
uxth
uxtw
uxtx
sxtb
sxth
sxtw
sxtx
immediate value expected for vector index
']' expected
none
nlast
last
first
nfrst
pmore
plast
tcont
tstop
fcmp
fcmpe
unexpected floating point literal
expected floating-point constant #0.0
unexpected token in operand
Only valid when first operand is register
movz
Immediate too large for register
adclb
adclt
adcs
addg
addhn
addhn2
addhnb
addhnt
addp
addpl
adds
addv
addvl
adrp
aesd
aese
aesimc
aesmc
ands
andv
asrd
asrr
asrv
autda
autdb
autdza
autdzb
autia
autia1716
autiasp
autiaz
autib
autib1716
autibsp
autibz
autiza
autizb
axflag
bcax
bdep
bext
bfcvt
bfcvtn
bfcvtn2
bfcvtnt
bfdot
bfmlalb
bfmlalt
bfmmla
bgrp
bics
blraa
blraaz
blrab
blrabz
braa
braaz
brab
brabz
brka
brkas
brkb
brkbs
brkn
brkns
brkpa
brkpas
brkpb
brkpbs
bsl1n
bsl2n
cadd
casa
casab
casah
casal
casalb
casalh
casb
cash
casl
caslb
caslh
casp
caspa
caspal
caspl
cbnz
ccmn
ccmp
cdot
cfinv
cinc
cinv
clasta
clastb
clrex
cmeq
cmge
cmgt
cmhi
cmhs
cmla
cmle
cmlo
cmls
cmlt
cmpeq
cmpge
cmpgt
cmphi
cmphs
cmple
cmplo
cmpls
cmplt
cmpne
cmpp
cmtst
cneg
cnot
cntb
cntd
cnth
cntp
cntw
compact
crc32b
crc32cb
crc32ch
crc32cw
crc32cx
crc32h
crc32w
crc32x
csdb
csel
cset
csetm
csinc
csinv
csneg
ctermeq
ctermne
dcps1
dcps2
dcps3
decb
decd
dech
decp
decw
drps
dupm
eor3
eorbt
eors
eortb
eorv
eret
eretaa
eretab
extr
fabd
fabs
facge
facgt
facle
faclt
fadd
fadda
faddp
faddv
fcadd
fccmp
fccmpe
fcmeq
fcmge
fcmgt
fcmla
fcmle
fcmlt
fcmne
fcmp
fcmpe
fcmuo
fcpy
fcsel
fcvt
fcvtas
fcvtau
fcvtl
fcvtl2
fcvtlt
fcvtms
fcvtmu
fcvtn
fcvtn2
fcvtns
fcvtnt
fcvtnu
fcvtps
fcvtpu
fcvtx
fcvtxn
fcvtxn2
fcvtxnt
fcvtzs
fcvtzu
fdiv
fdivr
fdup
fexpa
fjcvtzs
flogb
fmad
fmadd
fmax
fmaxnm
fmaxnmp
fmaxnmv
fmaxp
fmaxv
fmin
fminnm
fminnmp
fminnmv
fminp
fminv
fmla
fmlal
fmlal2
fmlalb
fmlalt
fmls
fmlsl
fmlsl2
fmlslb
fmlslt
fmmla
fmov
fmsb
fmsub
fmul
fmulx
fneg
fnmad
fnmadd
fnmla
fnmls
fnmsb
fnmsub
fnmul
frecpe
frecps
frecpx
frint32x
frint32z
frint64x
frint64z
frinta
frinti
frintm
frintn
frintp
frintx
frintz
frsqrte
frsqrts
fscale
fsqrt
fsub
fsubr
ftmad
ftsmul
ftssel
hint
histcnt
histseg
incb
incd
inch
incp
incw
index
insr
lasta
lastb
ld1b
ld1d
ld1h
ld1r
ld1rb
ld1rd
ld1rh
ld1rob
ld1rod
ld1roh
ld1row
ld1rqb
ld1rqd
ld1rqh
ld1rqw
ld1rsb
ld1rsh
ld1rsw
ld1rw
ld1sb
ld1sh
ld1sw
ld1w
ld2b
ld2d
ld2h
ld2r
ld2w
ld3b
ld3d
ld3h
ld3r
ld3w
ld4b
ld4d
ld4h
ld4r
ld4w
ld64b
ldadd
ldadda
ldaddab
ldaddah
ldaddal
ldaddalb
ldaddalh
ldaddb
ldaddh
ldaddl
ldaddlb
ldaddlh
ldapr
ldaprb
ldaprh
ldapur
ldapurb
ldapurh
ldapursb
ldapursh
ldapursw
ldar
ldarb
ldarh
ldaxp
ldaxr
ldaxrb
ldaxrh
ldclr
ldclra
ldclrab
ldclrah
ldclral
ldclralb
ldclralh
ldclrb
ldclrh
ldclrl
ldclrlb
ldclrlh
ldeor
ldeora
ldeorab
ldeorah
ldeoral
ldeoralb
ldeoralh
ldeorb
ldeorh
ldeorl
ldeorlb
ldeorlh
ldff1b
ldff1d
ldff1h
ldff1sb
ldff1sh
ldff1sw
ldff1w
ldgm
ldlar
ldlarb
ldlarh
ldnf1b
ldnf1d
ldnf1h
ldnf1sb
ldnf1sh
ldnf1sw
ldnf1w
ldnp
ldnt1b
ldnt1d
ldnt1h
ldnt1sb
ldnt1sh
ldnt1sw
ldnt1w
ldpsw
ldraa
ldrab
ldrb
ldrh
ldrsb
ldrsh
ldrsw
ldset
ldseta
ldsetab
ldsetah
ldsetal
ldsetalb
ldsetalh
ldsetb
ldseth
ldsetl
ldsetlb
ldsetlh
ldsmax
ldsmaxa
ldsmaxab
ldsmaxah
ldsmaxal
ldsmaxalb
ldsmaxalh
ldsmaxb
ldsmaxh
ldsmaxl
ldsmaxlb
ldsmaxlh
ldsmin
ldsmina
ldsminab
ldsminah
ldsminal
ldsminalb
ldsminalh
ldsminb
ldsminh
ldsminl
ldsminlb
ldsminlh
ldtr
ldtrb
ldtrh
ldtrsb
ldtrsh
ldtrsw
ldumax
ldumaxa
ldumaxab
ldumaxah
ldumaxal
ldumaxalb
ldumaxalh
ldumaxb
ldumaxh
ldumaxl
ldumaxlb
ldumaxlh
ldumin
ldumina
lduminab
lduminah
lduminal
lduminalb
lduminalh
lduminb
lduminh
lduminl
lduminlb
lduminlh
ldur
ldurb
ldurh
ldursb
ldursh
ldursw
ldxp
ldxr
ldxrb
ldxrh
lslr
lslv
lsrr
lsrv
madd
match
mneg
movi
movk
movn
movprfx
movs
movz
msub
mvni
nand
nands
nbsl
negs
ngcs
nmatch
nors
nots
orns
orrs
pacda
pacdb
pacdza
pacdzb
pacga
pacia
pacia1716
paciasp
paciaz
pacib
pacib1716
pacibsp
pacibz
paciza
pacizb
pfalse
pfirst
pmul
pmull
pmull2
pmullb
pmullt
pnext
prfb
prfd
prfh
prfm
prfum
prfw
pssbb
ptest
ptrue
ptrues
punpkhi
punpklo
raddhn
raddhn2
raddhnb
raddhnt
rax1
rbit
rdffr
rdffrs
rdvl
retaa
retab
rev16
rev32
rev64
revb
revh
revw
rmif
rorv
rshrn
rshrn2
rshrnb
rshrnt
rsubhn
rsubhn2
rsubhnb
rsubhnt
saba
sabal
sabal2
sabalb
sabalt
sabd
sabdl
sabdl2
sabdlb
sabdlt
sadalp
saddl
saddl2
saddlb
saddlbt
saddlp
saddlt
saddlv
saddv
saddw
saddw2
saddwb
saddwt
sbclb
sbclt
sbcs
sbfm
scvtf
sdiv
sdivr
sdot
setf16
setf8
setffr
sevl
sha1c
sha1h
sha1m
sha1p
sha1su0
sha1su1
sha256h
sha256h2
sha256su0
sha256su1
sha512h
sha512h2
sha512su0
sha512su1
shadd
shll
shll2
shrn
shrn2
shrnb
shrnt
shsub
shsubr
sm3partw1
sm3partw2
sm3ss1
sm3tt1a
sm3tt1b
sm3tt2a
sm3tt2b
sm4e
sm4ekey
smaddl
smax
smaxp
smaxv
smin
sminp
sminv
smlal
smlal2
smlalb
smlalt
smlsl
smlsl2
smlslb
smlslt
smmla
smnegl
smov
smsubl
smulh
smull
smull2
smullb
smullt
splice
sqabs
sqadd
sqcadd
sqdecb
sqdecd
sqdech
sqdecp
sqdecw
sqdmlal
sqdmlal2
sqdmlalb
sqdmlalbt
sqdmlalt
sqdmlsl
sqdmlsl2
sqdmlslb
sqdmlslbt
sqdmlslt
sqdmulh
sqdmull
sqdmull2
sqdmullb
sqdmullt
sqincb
sqincd
sqinch
sqincp
sqincw
sqneg
sqrdcmlah
sqrdmlah
sqrdmlsh
sqrdmulh
sqrshl
sqrshlr
sqrshrn
sqrshrn2
sqrshrnb
sqrshrnt
sqrshrun
sqrshrun2
sqrshrunb
sqrshrunt
sqshl
sqshlr
sqshlu
sqshrn
sqshrn2
sqshrnb
sqshrnt
sqshrun
sqshrun2
sqshrunb
sqshrunt
sqsub
sqsubr
sqxtn
sqxtn2
sqxtnb
sqxtnt
sqxtun
sqxtun2
sqxtunb
sqxtunt
srhadd
srshl
srshlr
srshr
srsra
ssbb
sshl
sshll
sshll2
sshllb
sshllt
sshr
ssra
ssubl
ssubl2
ssublb
ssublbt
ssublt
ssubltb
ssubw
ssubw2
ssubwb
ssubwt
st1b
st1d
st1h
st1w
st2b
st2d
st2g
st2h
st2w
st3b
st3d
st3h
st3w
st4b
st4d
st4h
st4w
st64b
st64bv
st64bv0
stadd
staddb
staddh
staddl
staddlb
staddlh
stclr
stclrb
stclrh
stclrl
stclrlb
stclrlh
steor
steorb
steorh
steorl
steorlb
steorlh
stgm
stgp
stllr
stllrb
stllrh
stlr
stlrb
stlrh
stlur
stlurb
stlurh
stlxp
stlxr
stlxrb
stlxrh
stnp
stnt1b
stnt1d
stnt1h
stnt1w
strb
strh
stset
stsetb
stseth
stsetl
stsetlb
stsetlh
stsmax
stsmaxb
stsmaxh
stsmaxl
stsmaxlb
stsmaxlh
stsmin
stsminb
stsminh
stsminl
stsminlb
stsminlh
sttr
sttrb
sttrh
stumax
stumaxb
stumaxh
stumaxl
stumaxlb
stumaxlh
stumin
stuminb
stuminh
stuminl
stuminlb
stuminlh
stur
sturb
sturh
stxp
stxr
stxrb
stxrh
stz2g
stzg
stzgm
subg
subhn
subhn2
subhnb
subhnt
subp
subps
subr
subs
sudot
sunpkhi
sunpklo
suqadd
swpa
swpab
swpah
swpal
swpalb
swpalh
swpb
swph
swpl
swplb
swplh
sxtb
sxth
sxtl
sxtl2
sxtw
sysl
tbnz
tcancel
tcommit
trn1
trn2
tstart
ttest
uaba
uabal
uabal2
uabalb
uabalt
uabd
uabdl
uabdl2
uabdlb
uabdlt
uadalp
uaddl
uaddl2
uaddlb
uaddlp
uaddlt
uaddlv
uaddv
uaddw
uaddw2
uaddwb
uaddwt
ubfm
ucvtf
udiv
udivr
udot
uhadd
uhsub
uhsubr
umaddl
umax
umaxp
umaxv
umin
uminp
uminv
umlal
umlal2
umlalb
umlalt
umlsl
umlsl2
umlslb
umlslt
ummla
umnegl
umov
umsubl
umulh
umull
umull2
umullb
umullt
uqadd
uqdecb
uqdecd
uqdech
uqdecp
uqdecw
uqincb
uqincd
uqinch
uqincp
uqincw
uqrshl
uqrshlr
uqrshrn
uqrshrn2
uqrshrnb
uqrshrnt
uqshl
uqshlr
uqshrn
uqshrn2
uqshrnb
uqshrnt
uqsub
uqsubr
uqxtn
uqxtn2
uqxtnb
uqxtnt
urecpe
urhadd
urshl
urshlr
urshr
ursqrte
ursra
usdot
ushl
ushll
ushll2
ushllb
ushllt
ushr
usmmla
usqadd
usra
usubl
usubl2
usublb
usublt
usubw
usubw2
usubwb
usubwt
uunpkhi
uunpklo
uxtb
uxth
uxtl
uxtl2
uxtw
uzp1
uzp2
wfet
wfit
whilege
whilegt
whilehi
whilehs
whilele
whilelo
whilels
whilelt
whilerw
whilewr
wrffr
xaflag
xpacd
xpaci
xpaclri
xtn2
yield
zip1
zip2
only 'lsl #+N' valid after immediate
positive shift amount required
unexpected adr label
gotpage label reference not allowed an addend
page or gotpage label reference expected
invalid operand for instruction
'csync' operand expected
immediate value expected for barrier operand
barrier operand out of range
'sy' or #imm operand expected
invalid barrier option name
invalid floating point immediate
encoded floating point value out of range
invalid floating point representation
index must be absent or #0
expected an even-numbered x-register in the range [x0,x22]
not expecting size suffix
expecting 'm' or 'z' predication
immediate value expected for prefetch operand
prefetch operand out of range, [0,
] expected
prefetch hint expected
Expected cN operand where 0 <= N <= 15
expected register
expected first even register of a consecutive same-size even/odd register pair
expected comma
expected second odd register of a consecutive same-size even/odd register pair
mismatched register size suffix
invalid number of vectors
registers must be sequential
'}' expected
vector register expected
expect relocation specifier in operand after ':'
abs_g3
abs_g2
abs_g2_nc
abs_g1
abs_g1_nc
abs_g0
abs_g0_nc
prel_g3
prel_g2
prel_g2_nc
prel_g1
prel_g1_nc
prel_g0
prel_g0_nc
dtprel_g2
dtprel_g1
dtprel_g1_nc
dtprel_g0
dtprel_g0_nc
dtprel_hi12
dtprel_lo12
dtprel_lo12_nc
pg_hi21_nc
tprel_g1_nc
tprel_g0_nc
tprel_hi12
tprel_lo12
tprel_lo12_nc
tlsdesc_lo12
gottprel_lo12
gottprel_g1
gottprel_g0_nc
tlsdesc
secrel_lo12
secrel_hi12
expect ':' after relocation specifier
condition codes AL and NV are invalid for this instruction
expected 'vl' or '#<imm>'
expected #imm after shift specifier
expected integer shift amount
expected constant '#imm' after shift specifier
.arch
.cpu
.tlsdesccall
.ltorg
.pool
.unreq
.inst
.cfi_negate_ra_state
.cfi_b_key_frame
.arch_extension
.variant_pcs
.seh_stackalloc
.seh_endprologue
.seh_save_r19r20_x
.seh_save_fplr
.seh_save_fplr_x
.seh_save_reg
.seh_save_reg_x
.seh_save_regp
.seh_save_regp_x
.seh_save_lrpair
.seh_save_freg
.seh_save_freg_x
.seh_save_fregp
.seh_save_fregp_x
.seh_set_fp
.seh_add_fp
.seh_nop
.seh_save_next
.seh_startepilogue
.seh_endepilogue
.seh_trap_frame
.seh_pushframe
.seh_context
.seh_clear_unwound_to_call
unknown arch name
unexpected token
generic
unsupported architectural extension: 
nocrypto
nosha2
noaes
nosm4
nosha3
unknown CPU name
unsupported architectural extension
expected symbol after directive
unexpected token in directive
unexpected input in .unreq directive.
in '.unreq' directive
expected expression following '.inst' directive
 in '.inst' directive
expected expression
expected constant expression
unexpected token in '.cfi_b_key_frame'
unexpected token in '.arch_extension' directive
unknown architectural extension: 
expected symbol name
unknown symbol in '.variant_pcs' directive
 in '.variant_pcs' directive
.loh
expected an identifier or a number in directive
invalid numeric identifier in directive
invalid identifier in directive
expected identifier in directive
unexpected token in '
' directive
AdrpAdrp
AdrpLdr
AdrpAddLdr
AdrpLdrGotLdr
AdrpAddStr
AdrpLdrGotStr
AdrpAdd
AdrpLdrGot
expected register in range 
 to 
expected register with even offset from x19
ubfm
expected integer in range [0, 31]
expected integer in range [1, 32]
requested insert overflows register
sbfiz
ubfiz
sbfm
bfxil
sbfx
ubfx
requested extract overflows register
movi
instruction movi.2d with immediate #0 may not function correctly on this CPU, converting to equivalent movi.16b
instruction requires:
too few operands for instruction
instruction is unpredictable when following a movprfx, suggest replacing movprfx with mov
instruction is unpredictable when following a movprfx writing to a different destination
instruction is unpredictable when following a movprfx and destination also used as non-destructive source
instruction is unpredictable when following a predicated movprfx, suggest using unpredicated movprfx
instruction is unpredictable when following a predicated movprfx using a different general predicate
instruction is unpredictable when following a predicated movprfx with a different element size
unpredictable LDP instruction, writeback base is also a destination
unpredictable LDP instruction, Rt2==Rt
unpredictable STP instruction, writeback base is also a source
unpredictable LDR instruction, writeback base is also a source
unpredictable STR instruction, writeback base is also a source
unpredictable STXR instruction, status is also a source
unpredictable STXP instruction, status is also a source
unpredictable LDRA instruction, writeback base is also a destination
invalid immediate expression
armv8.1a
armv8.2a
armv8.3a
armv8.4a
armv8.5a
armv8.6a
armv8.7a
jsconv
ccidx
complxnum
mpam
tracev8.4
sel2
rcpc-immo
fp-armv8
neon
dotprod
fullfp16
fp16fml
fuse-aes
altnzcv
frint3264
trbe
bf16
i8mm
f32mm
f64mm
wfxt
brbe
spe-eef
NegativeImmediates
ARM v8.1  Privileged Access-Never extension
ARM v8.2 UAO PState extension (psuao)
ARM v8.2 PAN AT S1E1R and AT S1E1W Variation
Target contains CONTEXTIDR_EL2 RW operand
operand must be 64-bit form of destination register
operand must be 32-bit form of destination register
operand must match destination register
instruction requires a CPU feature not currently enabled
invalid type suffix for instruction
expected AArch64 condition code
expected '[su]xt[bhw]' with optional integer in range [0, 4]
expected 'sxtx' 'uxtx' or 'lsl' with optional integer in range [0, 4]
expected compatible register, symbol or integer in range [0, 4095]
expected compatible register or logical immediate
expected 'lsl' with optional integer 0 or 16
expected 'lsl' with optional integer 0, 16, 32 or 48
expected 'lsl', 'lsr' or 'asr' with optional integer in range [0, 31]
expected 'lsl', 'lsr' or 'asr' with optional integer in range [0, 63]
expected compatible register or floating-point constant
index must be an integer in range [-32, 31].
index must be an integer in range [-16, 15].
index must be an integer in range [-8, 7].
index must be a multiple of 2 in range [-16, 14].
index must be a multiple of 3 in range [-24, 21].
index must be a multiple of 4 in range [-32, 28].
index must be a multiple of 16 in range [-128, 112].
index must be a multiple of 32 in range [-256, 224].
index must be an integer in range [-128, 127].
index must be an integer in range [-256, 255].
index must be a multiple of 16 in range [-4096, 4080].
index must be a multiple of 8 in range [-4096, 4088].
index must be a multiple of 4 in range [-256, 252].
index must be a multiple of 8 in range [-512, 504].
index must be a multiple of 16 in range [-1024, 1008].
index must be a multiple of 8 in range [0, 248].
index must be a multiple of 4 in range [0, 124].
index must be a multiple of 2 in range [0, 62].
index must be a multiple of 8 in range [0, 504].
index must be a multiple of 16 in range [0, 1008].
index must be a multiple of 4 in range [0, 252].
index must be a multiple of 2 in range [0, 126].
index must be in range [0, 63].
expected 'uxtw' or 'sxtw' with optional shift of #0
expected 'uxtw' or 'sxtw' with optional shift of #0 or #1
expected 'uxtw' or 'sxtw' with optional shift of #0 or #2
expected 'uxtw' or 'sxtw' with optional shift of #0 or #3
expected 'uxtw' or 'sxtw' with optional shift of #0 or #4
expected 'lsl' or 'sxtx' with optional shift of #0
expected 'lsl' or 'sxtx' with optional shift of #0 or #1
expected 'lsl' or 'sxtx' with optional shift of #0 or #2
expected 'lsl' or 'sxtx' with optional shift of #0 or #3
expected 'lsl' or 'sxtx' with optional shift of #0 or #4
index must be an integer in range [0, 4095].
index must be a multiple of 2 in range [0, 8190].
index must be a multiple of 4 in range [0, 16380].
index must be a multiple of 8 in range [0, 32760].
index must be a multiple of 16 in range [0, 65520].
immediate must be an integer in range [0, 1].
immediate must be an integer in range [0, 7].
immediate must be an integer in range [0, 15].
immediate must be an integer in range [0, 31].
immediate must be an integer in range [0, 63].
immediate must be an integer in range [0, 127].
immediate must be an integer in range [0, 255].
immediate must be an integer in range [0, 65535].
immediate must be an integer in range [1, 8].
immediate must be an integer in range [1, 16].
immediate must be an integer in range [1, 32].
immediate must be an integer in range [1, 64].
immediate must be an integer in range [0, 255] with a shift amount of 0
immediate must be an integer in range [0, 255] or a multiple of 256 in range [256, 65280]
immediate must be an integer in range [-128, 255] with a shift amount of 0
immediate must be an integer in range [-128, 127] or a multiple of 256 in range [-32768, 65280]
immediate must be an integer in range [-128, 127] or a multiple of 256 in range [-32768, 32512]
expected lane specifier '[1]'
vector lane must be an integer in range [0, 15].
vector lane must be an integer in range [0, 7].
vector lane must be an integer in range [0, 3].
vector lane must be an integer in range [0, 1].
vector lane must be an integer in range [0, 63].
vector lane must be an integer in range [0, 31].
expected label or encodable integer pc offset
expected readable system register
expected writable system register or pstate
complex rotation must be 0, 90, 180 or 270.
complex rotation must be 90 or 270.
unrecognized instruction mnemonic
register must be x0..x30 or xzr, without shift
register must be x0..x30 or xzr, with required shift 'lsl #1'
register must be x0..x30 or xzr, with required shift 'lsl #2'
register must be x0..x30 or xzr, with required shift 'lsl #3'
register must be x0..x30 without shift
register must be x0..x30 with required shift 'lsl #1'
register must be x0..x30 with required shift 'lsl #2'
register must be x0..x30 with required shift 'lsl #3'
invalid shift/extend specified, expected 'z[0..31].s, (uxtw|sxtw)'
invalid shift/extend specified, expected 'z[0..31].s, (uxtw|sxtw) #1'
invalid shift/extend specified, expected 'z[0..31].s, (uxtw|sxtw) #2'
invalid shift/extend specified, expected 'z[0..31].s, (uxtw|sxtw) #3'
invalid shift/extend specified, expected 'z[0..31].d, (uxtw|sxtw)'
invalid shift/extend specified, expected 'z[0..31].d, (lsl|uxtw|sxtw) #1'
invalid shift/extend specified, expected 'z[0..31].d, (lsl|uxtw|sxtw) #2'
invalid shift/extend specified, expected 'z[0..31].d, (lsl|uxtw|sxtw) #3'
invalid shift/extend specified, expected 'z[0..31].s'
invalid shift/extend specified, expected 'z[0..31].s, lsl #1'
invalid shift/extend specified, expected 'z[0..31].s, lsl #2'
invalid shift/extend specified, expected 'z[0..31].s, lsl #3'
invalid shift/extend specified, expected 'z[0..31].d'
invalid shift/extend specified, expected 'z[0..31].d, lsl #1'
invalid shift/extend specified, expected 'z[0..31].d, lsl #2'
invalid shift/extend specified, expected 'z[0..31].d, lsl #3'
expected register without element width suffix
invalid element width
Invalid restricted vector register, expected z0.b..z7.b
Invalid restricted vector register, expected z0.h..z7.h
Invalid restricted vector register, expected z0.s..z7.s
Invalid restricted vector register, expected z0.h..z15.h
Invalid restricted vector register, expected z0.s..z15.s
Invalid restricted vector register, expected z0.d..z15.d
invalid predicate pattern
invalid predicate register.
invalid restricted predicate register, expected p0..p7 (without element suffix)
invalid restricted predicate register, expected p0.b..p7.b
invalid restricted predicate register, expected p0.h..p7.h
invalid restricted predicate register, expected p0.s..p7.s
invalid restricted predicate register, expected p0.d..p7.d
Invalid floating point constant, expected 0.5 or 1.0.
Invalid floating point constant, expected 0.5 or 2.0.
Invalid floating point constant, expected 0.0 or 1.0.
, did you mean: 
 + [.-
@TLSGD
@TLSLD
@TLSLDM
@GOTTPOFF
@INDNTPOFF
@TPOFF
@DTPOFF
@NTPOFF
@GOTNTPOFF
@GOTPCREL
@GOT
@GOTOFF
@PLT
@TLVP
@SECREL32
offset 
subreg
no-rip
(%rip)
cf-protection-branch
cf-protection-return
.note.gnu.property
@feat.00
cfguard
__fltused
_fltused
__IMPORT
__pointers
X86 Assembly Printer
X86 avoid trailing call pass
x86-avoid-trailing-call
no-x86-call-frame-opt
Avoid optimizing x86 call frames for size
X86 Call Frame Optimization
x86-cf-opt
X86 Optimize Call Frame
unsupported x86 interrupt prototype
x86-cmov-conversion
NumOfSkippedCmovGroups
Number of unsupported CMOV-groups
NumOfCmovGroupCandidate
Number of CMOV-group candidates
NumOfLoopCandidate
Number of CMOV-conversion profitable loops
NumOfOptimizedCmovGroups
Number of optimized CMOV-groups
x86-cmov-converter
Enable the X86 cmov-to-branch optimization.
x86-cmov-converter-threshold
Minimum gain per loop (in cycles) threshold.
x86-cmov-converter-force-mem-operand
Convert cmovs to branches whenever they have memory operands.
X86 cmov Conversion
X86 Darwin Stack Probe Emitter Pass
x86-darwin-stack-probe-emitter
X86 Darwin Stack Probe Emitter
__chkstk_darwin
pushq   %rcx
pushq   %rax
.weak_reference ____chkstk_darwin
movq    ____chkstk_darwin@GOTPCREL(%rip), %rcx
testq   %rcx, %rcx
jnz     Lavailable
leaq    ___chkstk_darwin_llvm_probe(%rip), %rcx
Lavailable:
callq   *%rcx
popq    %rax
popq    %rcx
retq
__chkstk_darwin_llvm_probe
cmpq    $$4096, %rax
leaq    24(%rsp), %rcx
jb      Ltmp1
Ltmp2:
subq    $$4096, %rcx
testb   %cl, (%rcx)
subq    $$4096, %rax
cmpq    $$4096, %rax
ja      Ltmp2
Ltmp1:
subq    %rax, %rcx
testb   %cl, (%rcx)
retq
x86-domain-reassignment
NumClosuresConverted
Number of closures converted by the pass
disable-x86-domain-reassignment
X86: Disable Virtual Register Reassignment.
X86 Domain Reassignment Pass
x86-discriminate-memops
Generate unique debug info for each instruction with a memory operand. Should be enabled for profile-driven cache prefetching, both in the build of the binary being profiled, as well as in the build of the binary consuming the profile.
x86-bypass-prefetch-instructions
When discriminating instructions with memory operands, ignore prefetch instructions. This ensures the other memory operand instructions have the same identifiers after inserting prefetches, allowing for successive insertions.
X86 Discriminate Memory Operands
lower-amx-type
Tile Register Configure
tileconfig
Tile Register Pre-configure
: Failed to config tile register, please define the shape earlier
X86 pseudo instruction expansion pass
x86-pseudo
fixup-byte-word-insts
Change byte and word instructions to larger sizes
X86 Byte/Word Instruction Fixup
x86-fixup-bw-insts
x86-fixup-LEAs
X86 LEA Fixup
x86-disable-avoid-SFB
X86: Disable Store Forwarding Blocks fixup.
x86-sfb-inspection-limit
X86: Number of instructions backward to inspect for store forwarding blocks.
Machine code sinking
x86-avoid-SFB
X86 Avoid Store Forwarding Blocks
x86-fixup-setcc
X86 Fixup SetCC
x86-flags-copy-lowering
X86 EFLAGS copy lowering
Cannot lower EFLAGS copy unless it is defined in turn by a copy!
Cannot lower EFLAGS copy when original copy def does not dominate all uses.
No support for lowering a copy into EFLAGS when used by this instruction!
x86-codegen
X86 FP Stackifier
Stack overflow!
Access past stack top!
Cannot pop empty stack!
Stack empty??
Stack cannot be empty!
fixed input regs must be last on the x87 stack
output regs must be last on the x87 stack
clobbers must be last on the x87 stack
implicitly popped regs must be last on the x87 stack
Emitting stack probe calls on 64-bit with the large code model and indirect thunks not yet implemented.
Can't handle guaranteed tail call under win64 yet
Segmented stacks not supported on FreeBSD i386.
Emitting morestack calls on 64-bit with the large code model and thunks not yet implemented.
hipe.literals
Can't generate HiPE prologue without runtime parameters
AMD64_LEAF_WORDS
X86_LEAF_WORDS
erlang.
bif_
P_NSP_LIMIT
inc_stack_0
Segmented stacks does not support fastcall with nested function.
HiPE literal 
 required but not provided
x86-isel
NumLoadMoved
Number of loads moved below TokenFactor
x86-and-imm-shrink
Enable setting constant bits to reduce size of mask immediates
x86-promote-anyext-load
Enable promoting aligned anyext load to wider load
X86 DAG->DAG Instruction Selection
indirect-tls-seg-refs
__main
NumTailCalls
Number of tail calls
x86-experimental-pref-loop-alignment
Sets the preferable loop alignment for experiments (as log2 bytes)(the last x86-experimental-pref-loop-alignment bits of the loop header PC will be 0).
mul-constant-optimization
Replace 'mul x, Const' with more effective instructions like SHIFT, LEA, etc.
x86-experimental-unordered-atomic-isel
Use LoadSDNode and StoreSDNode instead of AtomicSDNode for unordered atomic loads and stores respectively.
_alldiv
_aulldiv
_allrem
_aullrem
_allmul
_Unwind_SjLj_Resume
__security_check_cookie
X86 interrupts may not return any value
SSE register return with SSE disabled
SSE2 register return with SSE2 disabled
X87 register return with X87 disabled
X86 interrupts may not be called directly
cannot use inalloca attribute on a register parameter
any parameter with the inalloca attribute must be the only memory argument
_tls_array
_tls_index
Cannot use segmented stacks with functions that have nested arguments.
GCC_except_table
llvm.eh.recoverfp must take a function as the first argument
register 
 is allocatable: function has no frame pointer
Invalid register name global variable
Nest register in use - reduce number of inreg parameters!
X86ISD::BSF
X86ISD::BSR
X86ISD::FSHL
X86ISD::FSHR
X86ISD::FAND
X86ISD::FANDN
X86ISD::FOR
X86ISD::FXOR
X86ISD::FILD
X86ISD::FIST
X86ISD::FP_TO_INT_IN_MEM
X86ISD::FLD
X86ISD::FST
X86ISD::CALL
X86ISD::BT
X86ISD::CMP
X86ISD::FCMP
X86ISD::STRICT_FCMP
X86ISD::STRICT_FCMPS
X86ISD::COMI
X86ISD::UCOMI
X86ISD::CMPM
X86ISD::CMPMM
X86ISD::STRICT_CMPM
X86ISD::CMPMM_SAE
X86ISD::SETCC
X86ISD::SETCC_CARRY
X86ISD::FSETCC
X86ISD::FSETCCM
X86ISD::FSETCCM_SAE
X86ISD::CMOV
X86ISD::BRCOND
X86ISD::RET_FLAG
X86ISD::IRET
X86ISD::REP_STOS
X86ISD::REP_MOVS
X86ISD::GlobalBaseReg
X86ISD::Wrapper
X86ISD::WrapperRIP
X86ISD::MOVQ2DQ
X86ISD::MOVDQ2Q
X86ISD::MMX_MOVD2W
X86ISD::MMX_MOVW2D
X86ISD::PEXTRB
X86ISD::PEXTRW
X86ISD::INSERTPS
X86ISD::PINSRB
X86ISD::PINSRW
X86ISD::PSHUFB
X86ISD::ANDNP
X86ISD::BLENDI
X86ISD::BLENDV
X86ISD::HADD
X86ISD::HSUB
X86ISD::FHADD
X86ISD::FHSUB
X86ISD::CONFLICT
X86ISD::FMAX
X86ISD::FMAXS
X86ISD::FMAX_SAE
X86ISD::FMAXS_SAE
X86ISD::FMIN
X86ISD::FMINS
X86ISD::FMIN_SAE
X86ISD::FMINS_SAE
X86ISD::FMAXC
X86ISD::FMINC
X86ISD::FRSQRT
X86ISD::FRCP
X86ISD::EXTRQI
X86ISD::INSERTQI
X86ISD::TLSADDR
X86ISD::TLSBASEADDR
X86ISD::TLSCALL
X86ISD::EH_SJLJ_SETJMP
X86ISD::EH_SJLJ_LONGJMP
X86ISD::EH_SJLJ_SETUP_DISPATCH
X86ISD::EH_RETURN
X86ISD::TC_RETURN
X86ISD::FNSTCW16m
X86ISD::LCMPXCHG_DAG
X86ISD::LCMPXCHG8_DAG
X86ISD::LCMPXCHG16_DAG
X86ISD::LCMPXCHG16_SAVE_RBX_DAG
X86ISD::LADD
X86ISD::LSUB
X86ISD::LOR
X86ISD::LXOR
X86ISD::LAND
X86ISD::VZEXT_MOVL
X86ISD::VZEXT_LOAD
X86ISD::VEXTRACT_STORE
X86ISD::VTRUNC
X86ISD::VTRUNCS
X86ISD::VTRUNCUS
X86ISD::VMTRUNC
X86ISD::VMTRUNCS
X86ISD::VMTRUNCUS
X86ISD::VTRUNCSTORES
X86ISD::VTRUNCSTOREUS
X86ISD::VMTRUNCSTORES
X86ISD::VMTRUNCSTOREUS
X86ISD::VFPEXT
X86ISD::STRICT_VFPEXT
X86ISD::VFPEXT_SAE
X86ISD::VFPEXTS
X86ISD::VFPEXTS_SAE
X86ISD::VFPROUND
X86ISD::STRICT_VFPROUND
X86ISD::VMFPROUND
X86ISD::VFPROUND_RND
X86ISD::VFPROUNDS
X86ISD::VFPROUNDS_RND
X86ISD::VSHLDQ
X86ISD::VSRLDQ
X86ISD::VSHL
X86ISD::VSRL
X86ISD::VSRA
X86ISD::VSHLI
X86ISD::VSRLI
X86ISD::VSRAI
X86ISD::VSHLV
X86ISD::VSRLV
X86ISD::VSRAV
X86ISD::VROTLI
X86ISD::VROTRI
X86ISD::VPPERM
X86ISD::CMPP
X86ISD::STRICT_CMPP
X86ISD::PCMPEQ
X86ISD::PCMPGT
X86ISD::PHMINPOS
X86ISD::ADD
X86ISD::SUB
X86ISD::ADC
X86ISD::SBB
X86ISD::SMUL
X86ISD::UMUL
X86ISD::OR
X86ISD::XOR
X86ISD::AND
X86ISD::BEXTR
X86ISD::BEXTRI
X86ISD::BZHI
X86ISD::PDEP
X86ISD::PEXT
X86ISD::MUL_IMM
X86ISD::MOVMSK
X86ISD::PTEST
X86ISD::TESTP
X86ISD::KORTEST
X86ISD::KTEST
X86ISD::KADD
X86ISD::KSHIFTL
X86ISD::KSHIFTR
X86ISD::PACKSS
X86ISD::PACKUS
X86ISD::PALIGNR
X86ISD::VALIGN
X86ISD::VSHLD
X86ISD::VSHRD
X86ISD::VSHLDV
X86ISD::VSHRDV
X86ISD::PSHUFD
X86ISD::PSHUFHW
X86ISD::PSHUFLW
X86ISD::SHUFP
X86ISD::SHUF128
X86ISD::MOVLHPS
X86ISD::MOVHLPS
X86ISD::MOVDDUP
X86ISD::MOVSHDUP
X86ISD::MOVSLDUP
X86ISD::MOVSD
X86ISD::MOVSS
X86ISD::UNPCKL
X86ISD::UNPCKH
X86ISD::VBROADCAST
X86ISD::VBROADCAST_LOAD
X86ISD::VBROADCASTM
X86ISD::SUBV_BROADCAST_LOAD
X86ISD::VPERMILPV
X86ISD::VPERMILPI
X86ISD::VPERM2X128
X86ISD::VPERMV
X86ISD::VPERMV3
X86ISD::VPERMI
X86ISD::VPTERNLOG
X86ISD::VFIXUPIMM
X86ISD::VFIXUPIMM_SAE
X86ISD::VFIXUPIMMS
X86ISD::VFIXUPIMMS_SAE
X86ISD::VRANGE
X86ISD::VRANGE_SAE
X86ISD::VRANGES
X86ISD::VRANGES_SAE
X86ISD::PMULUDQ
X86ISD::PMULDQ
X86ISD::PSADBW
X86ISD::DBPSADBW
X86ISD::VASTART_SAVE_XMM_REGS
X86ISD::VAARG_64
X86ISD::DYN_ALLOCA
X86ISD::VAARG_X32
X86ISD::MEMBARRIER
X86ISD::MFENCE
X86ISD::SEG_ALLOCA
X86ISD::PROBED_ALLOCA
X86ISD::RDRAND
X86ISD::RDSEED
X86ISD::RDPKRU
X86ISD::WRPKRU
X86ISD::VPMADDUBSW
X86ISD::VPMADDWD
X86ISD::VPSHA
X86ISD::VPSHL
X86ISD::VPCOM
X86ISD::VPCOMU
X86ISD::VPERMIL2
X86ISD::FMSUB
X86ISD::STRICT_FMSUB
X86ISD::FNMADD
X86ISD::STRICT_FNMADD
X86ISD::FNMSUB
X86ISD::STRICT_FNMSUB
X86ISD::FMADDSUB
X86ISD::FMSUBADD
X86ISD::FMADD_RND
X86ISD::FNMADD_RND
X86ISD::FMSUB_RND
X86ISD::FNMSUB_RND
X86ISD::FMADDSUB_RND
X86ISD::FMSUBADD_RND
X86ISD::VPMADD52H
X86ISD::VPMADD52L
X86ISD::VRNDSCALE
X86ISD::STRICT_VRNDSCALE
X86ISD::VRNDSCALE_SAE
X86ISD::VRNDSCALES
X86ISD::VRNDSCALES_SAE
X86ISD::VREDUCE
X86ISD::VREDUCE_SAE
X86ISD::VREDUCES
X86ISD::VREDUCES_SAE
X86ISD::VGETMANT
X86ISD::VGETMANT_SAE
X86ISD::VGETMANTS
X86ISD::VGETMANTS_SAE
X86ISD::PCMPESTR
X86ISD::PCMPISTR
X86ISD::XTEST
X86ISD::COMPRESS
X86ISD::EXPAND
X86ISD::SELECTS
X86ISD::ADDSUB
X86ISD::RCP14
X86ISD::RCP14S
X86ISD::RCP28
X86ISD::RCP28_SAE
X86ISD::RCP28S
X86ISD::RCP28S_SAE
X86ISD::EXP2
X86ISD::EXP2_SAE
X86ISD::RSQRT14
X86ISD::RSQRT14S
X86ISD::RSQRT28
X86ISD::RSQRT28_SAE
X86ISD::RSQRT28S
X86ISD::RSQRT28S_SAE
X86ISD::FADD_RND
X86ISD::FADDS
X86ISD::FADDS_RND
X86ISD::FSUB_RND
X86ISD::FSUBS
X86ISD::FSUBS_RND
X86ISD::FMUL_RND
X86ISD::FMULS
X86ISD::FMULS_RND
X86ISD::FDIV_RND
X86ISD::FDIVS
X86ISD::FDIVS_RND
X86ISD::FSQRT_RND
X86ISD::FSQRTS
X86ISD::FSQRTS_RND
X86ISD::FGETEXP
X86ISD::FGETEXP_SAE
X86ISD::FGETEXPS
X86ISD::FGETEXPS_SAE
X86ISD::SCALEF
X86ISD::SCALEF_RND
X86ISD::SCALEFS
X86ISD::SCALEFS_RND
X86ISD::AVG
X86ISD::MULHRS
X86ISD::SINT_TO_FP_RND
X86ISD::UINT_TO_FP_RND
X86ISD::CVTTP2SI
X86ISD::CVTTP2UI
X86ISD::STRICT_CVTTP2SI
X86ISD::STRICT_CVTTP2UI
X86ISD::MCVTTP2SI
X86ISD::MCVTTP2UI
X86ISD::CVTTP2SI_SAE
X86ISD::CVTTP2UI_SAE
X86ISD::CVTTS2SI
X86ISD::CVTTS2UI
X86ISD::CVTTS2SI_SAE
X86ISD::CVTTS2UI_SAE
X86ISD::CVTSI2P
X86ISD::CVTUI2P
X86ISD::STRICT_CVTSI2P
X86ISD::STRICT_CVTUI2P
X86ISD::MCVTSI2P
X86ISD::MCVTUI2P
X86ISD::VFPCLASS
X86ISD::VFPCLASSS
X86ISD::MULTISHIFT
X86ISD::SCALAR_SINT_TO_FP
X86ISD::SCALAR_SINT_TO_FP_RND
X86ISD::SCALAR_UINT_TO_FP
X86ISD::SCALAR_UINT_TO_FP_RND
X86ISD::CVTPS2PH
X86ISD::STRICT_CVTPS2PH
X86ISD::MCVTPS2PH
X86ISD::CVTPH2PS
X86ISD::STRICT_CVTPH2PS
X86ISD::CVTPH2PS_SAE
X86ISD::CVTP2SI
X86ISD::CVTP2UI
X86ISD::MCVTP2SI
X86ISD::MCVTP2UI
X86ISD::CVTP2SI_RND
X86ISD::CVTP2UI_RND
X86ISD::CVTS2SI
X86ISD::CVTS2UI
X86ISD::CVTS2SI_RND
X86ISD::CVTS2UI_RND
X86ISD::CVTNE2PS2BF16
X86ISD::CVTNEPS2BF16
X86ISD::MCVTNEPS2BF16
X86ISD::DPBF16PS
X86ISD::LWPINS
X86ISD::MGATHER
X86ISD::MSCATTER
X86ISD::VPDPBUSD
X86ISD::VPDPBUSDS
X86ISD::VPDPWSSD
X86ISD::VPDPWSSDS
X86ISD::VPSHUFBITQMB
X86ISD::GF2P8MULB
X86ISD::GF2P8AFFINEQB
X86ISD::GF2P8AFFINEINVQB
X86ISD::NT_CALL
X86ISD::NT_BRIND
X86ISD::UMWAIT
X86ISD::TPAUSE
X86ISD::ENQCMD
X86ISD::ENQCMDS
X86ISD::VP2INTERSECT
X86ISD::AESENC128KL
X86ISD::AESDEC128KL
X86ISD::AESENC256KL
X86ISD::AESDEC256KL
X86ISD::AESENCWIDE128KL
X86ISD::AESDECWIDE128KL
X86ISD::AESENCWIDE256KL
X86ISD::AESDECWIDE256KL
X86ISD::TESTUI
__morestack_allocate_stack_space
calling convention incompatible with retpoline, no available registers
bswap
bswapl
bswapq
${0:q}
=r,0,
rorw
$$8,
${0:w}
rolw
rorl
$$16,
%eax
%edx
xchgl
%eax,
Flag output operand is of invalid type
{st}
{flags}
{dirflag}
{fpsr}
__chkstk
_alloca
_chkstk
querying registration node size for function without personality
can only recover FP for 32-bit MSVC EH personality functions
EH registrations only live in functions using WinEH
llvm.x86.seh.ehregnode expects a static alloca
EHGuard only live in functions using WinEH
llvm.x86.seh.ehguard expects a static alloca
Bad address space in addrspacecast
__x86_indirect_thunk_eax
__x86_indirect_thunk_ecx
__x86_indirect_thunk_edx
__x86_indirect_thunk_edi
__x86_indirect_thunk_r11
__llvm_retpoline_eax
__llvm_retpoline_ecx
__llvm_retpoline_edx
__llvm_retpoline_edi
__llvm_retpoline_r11
__llvm_lvi_thunk_r11
~{cc}
~{flags}
~{fpsr}
~{dirflag}
{@cca}
{@ccae}
{@ccb}
{@ccbe}
{@ccc}
{@cce}
{@ccz}
{@ccg}
{@ccge}
{@ccl}
{@ccle}
{@ccna}
{@ccnb}
{@ccnc}
{@ccne}
{@ccnz}
{@ccng}
{@ccnl}
{@ccno}
{@ccnp}
{@ccns}
{@cco}
{@ccp}
{@ccs}
x86-indirect-branch-tracking
Enable X86 indirect branch tracking pass.
NumEndBranchAdded
Number of ENDBR instructions added
X86 Indirect Branch Tracking
X86 Indirect Thunks
prefetch-hints-file
Path to the prefetch hints profile. See also -x86-discriminate-memops
X86 Insert Cache Prefetches
Could not open profile: 
sample-profile-suffix-elision-policy
.part.
selected
_nta_
_t0_
_t1_
_t2_
__prefetch
blendv
castvec
disable-spill-fusing
Disable fusing of spill code into instructions
print-failed-fuse-candidates
Print instructions that the allocator wants to fuse, but the X86 backend currently can't
remat-pic-stub-load
Re-materialize load from stub in PIC mode
partial-reg-update-clearance
Clearance between two register writes for inserting XOR to avoid partial register update
undef-reg-clearance
How many idle instructions we would like before certain undef register reads
Unable to copy EFLAGS physical register!
Cannot emit physreg copy instruction
We failed to fuse operand 
x86-got-absolute-address
x86-pic-base-offset
x86-got
x86-gotoff
x86-gotpcrel
x86-plt
x86-tlsgd
x86-tlsld
x86-tlsldm
x86-gottpoff
x86-indntpoff
x86-tpoff
x86-dtpoff
x86-ntpoff
x86-gotntpoff
x86-dllimport
x86-darwin-nonlazy
x86-darwin-nonlazy-pic-base
x86-tlvp
x86-tlvp-pic-base
x86-secrel
x86-coffstub
X86 PIC Global Base Reg Initialization
Local Dynamic TLS Access Clean-up
Compressing EVEX instrs to VEX encoding when possible
x86-evex-to-vex-compress
x86-lvi-load
NumFences
Number of LFENCEs inserted for LVI mitigation
NumFunctionsConsidered
Number of functions analyzed
NumFunctionsMitigated
Number of functions for which mitigations were deployed
NumGadgets
Number of LVI gadgets detected during analysis
x86-lvi-load-opt-plugin
Specify a plugin to optimize LFENCE insertion
x86-lvi-load-no-cbranch
Don't treat conditional branches as disclosure gadgets. This may improve performance, at the cost of security.
x86-lvi-load-dot
For each function, emit a dot graph depicting potential LVI gadgets
x86-lvi-load-dot-only
For each function, emit a dot graph depicting potential LVI gadgets, and do not insert any fences
x86-lvi-load-dot-verify
For each function, emit a dot graph to stdout depicting potential LVI gadgets, used for testing purposes only
X86 LVI load hardening
X86 Load Value Injection (LVI) Load Hardening
LVI load hardening is only supported on 64-bit
Failed to load opt plugin: "
optimize_cut
Invalid optimization plugin
Speculative gadgets for "
" function
label = 
color = red, style = "dashed"
x86-lvi-ret
X86 LVI ret hardener
X86 Load Value Injection (LVI) Ret-Hardening
EVEX TO VEX Compression 
MEMBARRIER
eh_return, addr: %
CLEANUPRET
CATCHRET
TAILCALL
 {z}
__tls_get_addr
___tls_get_addr
autopadding
noautopadding
Lowering register statepoints with thunks not yet implemented.
__fentry__
Lowering patchpoint with thunks not yet implemented.
xray_event_sled_
# XRay Custom Event Log
__xray_CustomEvent
xray custom event end.
xray_typed_event_sled_
# XRay Typed Event Log
__xray_TypedEvent
xray typed event end.
disable-x86-lea-opt
X86: Disable LEA optimizations.
x86-optimize-LEAs
NumSubstLEAs
Number of LEA instruction substitutions
NumRedundantLEAs
Number of redundant LEA instructions removed
X86 LEA Optimize
X86 optimize LEA pass
X86 Atom pad short functions
X86 Partial Reduction
x86-partial-reduction
VECR
TILECFG
BNDR
SEGMENT_REG
GR32_BPSP
LOW32_ADDR_ACCESS_with_sub_32bit
GR32_BSI
GR32_SIDI
GR32_DIBP_with_GR32_SIDI
GR32_DIBP_with_LOW32_ADDR_ACCESS_with_sub_32bit
RFP32
GR8_ABCD_H_with_GR32_BSI
GR8_ABCD_L_with_GR32_BSI
VR64
TILE
GR8_NOREX
GR32_TC
GR32_BPSP_with_GR32_TC
DEBUG_REG
FR32
CONTROL_REG
GR64_NOREX
GR64_TCW64
GR32_BPSP_with_GR64_TCW64
GR8_with_GR32_DIBP
GR8_with_GR32_BSI
GR64_TC_with_GR64_TCW64
GR8_with_LOW32_ADDR_ACCESS_with_sub_32bit
GR8_with_GR64_NOREX
GR64_TC
GR8_with_GR64_TCW64
GR8_with_GR64_TC
FR32X
GR16
CSR_32
CSR_32EHRet
CSR_32_AllRegs
CSR_32_AllRegs_AVX
CSR_32_AllRegs_AVX512
CSR_32_AllRegs_SSE
CSR_32_RegCall
CSR_32_RegCall_NoSSE
CSR_64
CSR_64EHRet
CSR_64_AllRegs
CSR_64_AllRegs_AVX
CSR_64_AllRegs_AVX512
CSR_64_AllRegs_NoSSE
CSR_64_CXX_TLS_Darwin_PE
CSR_64_CXX_TLS_Darwin_ViaCopy
CSR_64_HHVM
CSR_64_Intel_OCL_BI
CSR_64_Intel_OCL_BI_AVX
CSR_64_Intel_OCL_BI_AVX512
CSR_64_MostRegs
CSR_64_RT_AllRegs
CSR_64_RT_AllRegs_AVX
CSR_64_RT_MostRegs
CSR_64_SwiftError
CSR_64_SwiftTail
CSR_64_TLS_Darwin
CSR_SysV64_RegCall
CSR_SysV64_RegCall_NoSSE
CSR_Win32_CFGuard_Check
CSR_Win32_CFGuard_Check_NoSSE
CSR_Win64
CSR_Win64_Intel_OCL_BI_AVX
CSR_Win64_Intel_OCL_BI_AVX512
CSR_Win64_NoSSE
CSR_Win64_RegCall
CSR_Win64_RegCall_NoSSE
CSR_Win64_SwiftError
CSR_Win64_SwiftTail
x86-use-base-pointer
Enable use of a base pointer for complex stack frames
no_caller_saved_registers
Stack realignment in presence of dynamic allocas is not supported withthis calling convention.
sub_8bit
sub_8bit_hi
sub_8bit_hi_phony
sub_16bit
sub_16bit_hi
sub_32bit
sub_mask_0
sub_mask_1
sub_xmm
sub_ymm
x86-use-fsrm-for-memcpy
Use fast short rep mov in memcpy lowering
x86-slh
NumCondBranchesTraced
Number of conditional branches traced
NumBranchesUntraced
Number of branches unable to trace
NumAddrRegsHardened
Number of address mode used registers hardaned
NumPostLoadRegsHardened
Number of post-load register values hardened
NumCallsOrJumpsHardened
Number of calls or jumps requiring extra hardening
NumInstsInserted
Number of instructions inserted
NumLFENCEsInserted
Number of lfence instructions inserted
x86-speculative-load-hardening
Force enable speculative load hardening
x86-slh-lfence
Use LFENCE along each conditional edge to harden against speculative loads rather than conditional movs and poisoned pointers.
x86-slh-post-load
Harden the value loaded *after* it is loaded by flushing the loaded bits to 1. This is hard to do in general but can be done easily for GPRs.
x86-slh-fence-call-and-ret
Use a full speculation fence to harden both call and ret edges rather than a lighter weight mitigation.
x86-slh-ip
Harden interprocedurally by passing our state in and out of functions in the high bits of the stack pointer.
x86-slh-loads
Sanitize loads from memory. When disable, no significant security is provided.
x86-slh-indirect
Harden indirect calls and jumps against using speculatively stored attacker controlled addresses. This is designed to mitigate Spectre v1.2 style attacks.
X86 speculative load hardener
X86 speculative load hardening
Unexpected loading branch or call!
Unable to unfold load!
Memory operand jumps should have been unfolded!
Support for 16-bit indirect branches is not implemented.
Support for 32-bit indirect branches is not implemented.
Unimplemented terminator sequence!
Cannot harden a conditional entry to a target of an indirect branch!
slh_ret_addr
x86-seses
x86-seses-enable-without-lvi-cfi
Force enable speculative execution side effect suppression. (Note: User must pass -mlvi-cfi in order to mitigate indirect branches and returns.)
x86-seses-one-lfence-per-bb
Omit all lfences other than the first to be placed in a basic block.
x86-seses-only-lfence-non-const
Only lfence before groups of terminators where at least one branch instruction has an input to the addressing mode that is a register other than %rip.
x86-seses-omit-branch-lfences
Omit all lfences before branch instructions.
X86 Speculative Execution Side Effect Suppression
x86-early-ifcvt
Enable early if-conversion on X86
64-bit code requested on a subtarget that doesn't support it!
x86-machine-combiner
tune-cpu
prefer-vector-width
prefer-vector-width=
min-legal-vector-width
min-legal-vector-width=
+soft-float,
-p270:32:32-p271:32:32-p272:64:64
-i64:32-f64:32
-f80:128
-f80:32
-f128:32
-n8:16:32:64
-n8:16:32
-a:0:32-S32
X86 Execution Domain Fix
x86-execution-domain-fix
X86 Execution Dependency Fix
x86-use-vzeroupper
Minimize AVX to SSE transition penalty
x86-vzeroupper
NumVZU
Number of vzeroupper instructions inserted
X86 vzeroupper inserter
X86 DynAlloca Expander
no-stack-arg-probe
Windows 32-bit x86 EH state insertion
_setjmp3
__CxxLongjmpUnwind
__security_cookie
cookie
frameaddr
_seh_longjmp_unwind4
_seh_longjmp_unwind
CXXExceptionRegistration
EHRegistrationNode
__ehhandler$
safeseh
SEHExceptionRegistration
Insert stores for EH state numbers
x86-winehstate
X86 insert wait instruction
ARM A15 S->D optimizer
Cortex-A9 NEON Store HW bug workaround
Cortex-A9 NEON Load HW bug workaround
Can't split up the VLDM instruction!
Unknown opcode!
__acle_se_
:lower16:
:upper16:
2.09
aeabi
denormal-fp-math
no-trapping-math
true
wchar_size
min_enum_size
$non_lazy_ptr
__imp_
.refptr.
vnop
SJLJEH
eh_setjmp begin
eh_setjmp end
ieee
preserve-sign
positive-zero
ARM Assembly Printer
llvm.ptrauth global lowering not implemented
enable-arm-3-addr-conv
Enable ARM 2-addr to 3-addr conv
pre-RA-sched
Pseudo flag setting opcodes only exist in Selection DAG
Non-flag-setting Thumb1 mov is v6-only
Unsupported register in Thumb1 push/pop
Incorrect array index for MVE_VMOV_q_rr
arm-lo16
arm-hi16
arm-coffstub
arm-got
arm-sbrel
arm-dllimport
arm-secrel
arm-nonlazy
mcount
__mcount
FPCXTRegs
GPRlr
VCCR
cl_FPSCR_NZCV
hGPR_and_tGPRwithpc
GPRsp
tGPROdd
tcGPR
hGPR
tGPROdd_with_tcGPR
tGPR
tGPR_with_tcGPR
tGPREven
hGPR_with_tGPREven
hGPR_with_tGPROdd
hGPR_with_tcGPR
tGPR_with_tGPREven
GPRwithZR
GPRwithAPSR_with_GPRwithZR
DQuad_with_dsub_0_in_DPR_8
DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_MQPR
DTriple_with_ssub_0_and_DTriple_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR
DPair_with_ssub_0
DQuad_with_ssub_0_and_DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR
DPairSpc_with_ssub_0
DQuad_with_ssub_0
DTripleSpc_with_ssub_0
QQQQPR_with_ssub_0
DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR
DTriple_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR
DTriple_with_qsub_0_in_QPR
CSR_AAPCS
CSR_AAPCS_SplitPush
CSR_AAPCS_SplitPush_SwiftError
CSR_AAPCS_SplitPush_SwiftTail
CSR_AAPCS_SwiftError
CSR_AAPCS_SwiftTail
CSR_AAPCS_ThisReturn
CSR_FIQ
CSR_FPRegs
CSR_GenericInt
CSR_NoRegs
CSR_Win_AAPCS_CFGuard_Check
CSR_iOS
CSR_iOS_CXX_TLS
CSR_iOS_CXX_TLS_PE
CSR_iOS_CXX_TLS_ViaCopy
CSR_iOS_SwiftError
CSR_iOS_SwiftTail
CSR_iOS_TLSCall
CSR_iOS_ThisReturn
interrupt
dsub_0
dsub_1
dsub_2
dsub_3
dsub_4
dsub_5
dsub_6
dsub_7
gsub_0
gsub_1
qqsub_0
qqsub_1
qsub_0
qsub_1
qsub_2
qsub_3
ssub_0
ssub_1
ssub_2
ssub_3
ssub_4
ssub_5
ssub_6
ssub_7
ssub_8
ssub_9
ssub_10
ssub_11
ssub_12
ssub_13
dsub_7_then_ssub_0
dsub_7_then_ssub_1
ssub_0_ssub_1_ssub_4_ssub_5
ssub_0_ssub_1_ssub_2_ssub_3_ssub_4_ssub_5
ssub_2_ssub_3_ssub_6_ssub_7
ssub_2_ssub_3_ssub_4_ssub_5_ssub_6_ssub_7
ssub_2_ssub_3_ssub_4_ssub_5
ssub_0_ssub_1_ssub_4_ssub_5_ssub_8_ssub_9
ssub_0_ssub_1_ssub_4_ssub_5_ssub_8_ssub_9_ssub_12_ssub_13
ssub_2_ssub_3_ssub_6_ssub_7_dsub_5
ssub_2_ssub_3_ssub_6_ssub_7_dsub_5_dsub_7
ssub_2_ssub_3_ssub_4_ssub_5_ssub_6_ssub_7_ssub_8_ssub_9
ssub_4_ssub_5_ssub_8_ssub_9
ssub_4_ssub_5_ssub_6_ssub_7_ssub_8_ssub_9
ssub_4_ssub_5_ssub_8_ssub_9_ssub_12_ssub_13
ssub_6_ssub_7_dsub_5
ssub_6_ssub_7_ssub_8_ssub_9_dsub_5
ssub_6_ssub_7_dsub_5_dsub_7
ssub_6_ssub_7_ssub_8_ssub_9
ssub_6_ssub_7_ssub_8_ssub_9_dsub_5_ssub_12_ssub_13
ssub_8_ssub_9_ssub_12_ssub_13
ssub_8_ssub_9_dsub_5_ssub_12_ssub_13
dsub_5_dsub_7
dsub_5_ssub_12_ssub_13_dsub_7
dsub_5_ssub_12_ssub_13
ssub_4_ssub_5_ssub_6_ssub_7_qsub_2
arm-cp-islands
NumCPEs
Number of constpool entries
NumSplit
Number of uncond branches inserted
NumCBrFixed
Number of cond branches fixed
NumUBrFixed
Number of uncond branches fixed
NumTBs
Number of table branches generated
NumT2CPShrunk
Number of Thumb2 constantpool instructions shrunk
NumT2BrShrunk
Number of Thumb2 immediate branches shrunk
NumCBZ
Number of CBZ / CBNZ formed
NumJTMoved
Number of jump table destination blocks moved
NumJTInserted
Number of jump table intermediate blocks inserted
NumLEInserted
Number of LE backwards branches inserted
arm-adjust-jump-tables
Adjust basic block layout to better use TB[BH]
arm-constant-island-max-iteration
The max number of iteration for converge
arm-synthesize-thumb-1-tbb
Use compressed jump tables in Thumb-1 by synthesizing an equivalent to the TBB/TBH instructions
ARM constant island placement and branch shortening pass
Constant Island pass failed to converge!
Branch Fix Up pass failed to converge!
underestimated function size
SBREL
-(LPC
verify-arm-pseudo-expand
Verify machine code after expanding ARM pseudos
ARM pseudo instruction expansion pass
arm-pseudo
After expanding ARM pseudo instructions.
__aeabi_read_tp
Can't return in GHC call convention
align-neon-spills
Align ARM NEON spills in prolog and epilog
Segmented stacks do not support vararg functions.
Segmented stacks not supported on this platform.
__STACK_LIMIT
arm-data-bank-mask
arm-assume-itcm-bankconflict
disable-shifter-op
Disable isel of shifter-op
ARM Instruction Selection
fpscr
fpexc
fpsid
fpinst
fpinst2
CPcp
mvfr0
mvfr1
mvfr2
arm-isel
NumMovwMovt
Number of GAs materialized with movw + movt
NumLoopByVals
Number of loops generated for byval arguments
NumConstpoolPromoted
Number of constants with their storage promoted into constant pools
arm-interworking
Enable / disable ARM interworking (for debugging only)
arm-promote-constant
Enable / disable promotion of unnamed_addr constants into constant pools
arm-promote-constant-max-size
Maximum size of constant to promote into a constant pool
arm-promote-constant-max-total
Maximum size of ALL constants to promote into a constant pool
mve-max-interleave-factor
Maximum interleave factor for MVE VLDn to generate.
arm-bitcode-compatibility
Enable bitcode compatibility hacks
__addsf3vfp
__subsf3vfp
__mulsf3vfp
__divsf3vfp
__adddf3vfp
__subdf3vfp
__muldf3vfp
__divdf3vfp
__eqsf2vfp
__nesf2vfp
__ltsf2vfp
__lesf2vfp
__gesf2vfp
__gtsf2vfp
__unordsf2vfp
__eqdf2vfp
__nedf2vfp
__ltdf2vfp
__ledf2vfp
__gedf2vfp
__gtdf2vfp
__unorddf2vfp
__fixdfsivfp
__fixunsdfsivfp
__fixsfsivfp
__fixunssfsivfp
__truncdfsf2vfp
__extendsfdf2vfp
__floatsidfvfp
__floatunssidfvfp
__floatsisfvfp
__floatunssisfvfp
__aeabi_dadd
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dcmpeq
__aeabi_dcmplt
__aeabi_dcmple
__aeabi_dcmpge
__aeabi_dcmpgt
__aeabi_dcmpun
__aeabi_fadd
__aeabi_fdiv
__aeabi_fmul
__aeabi_fsub
__aeabi_fcmpeq
__aeabi_fcmplt
__aeabi_fcmple
__aeabi_fcmpge
__aeabi_fcmpgt
__aeabi_fcmpun
__aeabi_d2iz
__aeabi_d2uiz
__aeabi_d2lz
__aeabi_d2ulz
__aeabi_f2iz
__aeabi_f2uiz
__aeabi_f2lz
__aeabi_f2ulz
__aeabi_d2f
__aeabi_d2h
__aeabi_f2d
__aeabi_i2d
__aeabi_ui2d
__aeabi_l2d
__aeabi_ul2d
__aeabi_i2f
__aeabi_ui2f
__aeabi_l2f
__aeabi_ul2f
__aeabi_lmul
__aeabi_llsl
__aeabi_llsr
__aeabi_lasr
__aeabi_idiv
__aeabi_ldivmod
__aeabi_uidiv
__aeabi_uldivmod
__aeabi_memcpy
__aeabi_memmove
__aeabi_memset
__stoi64
__dtoi64
__stou64
__dtou64
__i64tos
__i64tod
__u64tos
__u64tod
__divmodsi4
__udivmodsi4
__aeabi_f2h
__aeabi_h2f
__rt_sdiv
__rt_sdiv64
__rt_udiv
__rt_udiv64
__aeabi_idivmod
__aeabi_uidivmod
ARMISD::Wrapper
ARMISD::WrapperPIC
ARMISD::WrapperJT
ARMISD::COPY_STRUCT_BYVAL
ARMISD::CALL
ARMISD::CALL_PRED
ARMISD::CALL_NOLINK
ARMISD::tSECALL
ARMISD::BRCOND
ARMISD::BR_JT
ARMISD::BR2_JT
ARMISD::RET_FLAG
ARMISD::SERET_FLAG
ARMISD::INTRET_FLAG
ARMISD::PIC_ADD
ARMISD::CMP
ARMISD::CMN
ARMISD::CMPZ
ARMISD::CMPFP
ARMISD::CMPFPE
ARMISD::CMPFPw0
ARMISD::CMPFPEw0
ARMISD::BCC_i64
ARMISD::FMSTAT
ARMISD::CMOV
ARMISD::SUBS
ARMISD::SSAT
ARMISD::USAT
ARMISD::ASRL
ARMISD::LSRL
ARMISD::LSLL
ARMISD::SRL_FLAG
ARMISD::SRA_FLAG
ARMISD::RRX
ARMISD::ADDC
ARMISD::ADDE
ARMISD::SUBC
ARMISD::SUBE
ARMISD::LSLS
ARMISD::VMOVRRD
ARMISD::VMOVDRR
ARMISD::VMOVhr
ARMISD::VMOVrh
ARMISD::VMOVSR
ARMISD::EH_SJLJ_SETJMP
ARMISD::EH_SJLJ_LONGJMP
ARMISD::EH_SJLJ_SETUP_DISPATCH
ARMISD::TC_RETURN
ARMISD::THREAD_POINTER
ARMISD::DYN_ALLOC
ARMISD::MEMBARRIER_MCR
ARMISD::PRELOAD
ARMISD::WIN__CHKSTK
ARMISD::WIN__DBZCHK
ARMISD::PREDICATE_CAST
ARMISD::VECTOR_REG_CAST
ARMISD::VCMP
ARMISD::VCMPZ
ARMISD::VTST
ARMISD::VSHLs
ARMISD::VSHLu
ARMISD::VSHLIMM
ARMISD::VSHRsIMM
ARMISD::VSHRuIMM
ARMISD::VRSHRsIMM
ARMISD::VRSHRuIMM
ARMISD::VRSHRNIMM
ARMISD::VQSHLsIMM
ARMISD::VQSHLuIMM
ARMISD::VQSHLsuIMM
ARMISD::VQSHRNsIMM
ARMISD::VQSHRNuIMM
ARMISD::VQSHRNsuIMM
ARMISD::VQRSHRNsIMM
ARMISD::VQRSHRNuIMM
ARMISD::VQRSHRNsuIMM
ARMISD::VSLIIMM
ARMISD::VSRIIMM
ARMISD::VGETLANEu
ARMISD::VGETLANEs
ARMISD::VMOVIMM
ARMISD::VMVNIMM
ARMISD::VMOVFPIMM
ARMISD::VDUP
ARMISD::VDUPLANE
ARMISD::VEXT
ARMISD::VREV64
ARMISD::VREV32
ARMISD::VREV16
ARMISD::VZIP
ARMISD::VUZP
ARMISD::VTRN
ARMISD::VTBL1
ARMISD::VTBL2
ARMISD::VMOVN
ARMISD::VQMOVNs
ARMISD::VQMOVNu
ARMISD::VCVTN
ARMISD::VCVTL
ARMISD::VMULLs
ARMISD::VMULLu
ARMISD::VQDMULH
ARMISD::VADDVs
ARMISD::VADDVu
ARMISD::VADDVps
ARMISD::VADDVpu
ARMISD::VADDLVs
ARMISD::VADDLVu
ARMISD::VADDLVAs
ARMISD::VADDLVAu
ARMISD::VADDLVps
ARMISD::VADDLVpu
ARMISD::VADDLVAps
ARMISD::VADDLVApu
ARMISD::VMLAVs
ARMISD::VMLAVu
ARMISD::VMLAVps
ARMISD::VMLAVpu
ARMISD::VMLALVs
ARMISD::VMLALVu
ARMISD::VMLALVps
ARMISD::VMLALVpu
ARMISD::VMLALVAs
ARMISD::VMLALVAu
ARMISD::VMLALVAps
ARMISD::VMLALVApu
ARMISD::VMINVu
ARMISD::VMINVs
ARMISD::VMAXVu
ARMISD::VMAXVs
ARMISD::UMAAL
ARMISD::UMLAL
ARMISD::SMLAL
ARMISD::SMLALBB
ARMISD::SMLALBT
ARMISD::SMLALTB
ARMISD::SMLALTT
ARMISD::SMULWB
ARMISD::SMULWT
ARMISD::SMLALD
ARMISD::SMLALDX
ARMISD::SMLSLD
ARMISD::SMLSLDX
ARMISD::SMMLAR
ARMISD::SMMLSR
ARMISD::QADD16b
ARMISD::QSUB16b
ARMISD::QADD8b
ARMISD::QSUB8b
ARMISD::BUILD_VECTOR
ARMISD::BFI
ARMISD::VORRIMM
ARMISD::VBICIMM
ARMISD::VBSP
ARMISD::MEMCPY
ARMISD::VLD1DUP
ARMISD::VLD2DUP
ARMISD::VLD3DUP
ARMISD::VLD4DUP
ARMISD::VLD1_UPD
ARMISD::VLD2_UPD
ARMISD::VLD3_UPD
ARMISD::VLD4_UPD
ARMISD::VLD2LN_UPD
ARMISD::VLD3LN_UPD
ARMISD::VLD4LN_UPD
ARMISD::VLD1DUP_UPD
ARMISD::VLD2DUP_UPD
ARMISD::VLD3DUP_UPD
ARMISD::VLD4DUP_UPD
ARMISD::VST1_UPD
ARMISD::VST2_UPD
ARMISD::VST3_UPD
ARMISD::VST4_UPD
ARMISD::VST2LN_UPD
ARMISD::VST3LN_UPD
ARMISD::VST4LN_UPD
ARMISD::WLS
ARMISD::LE
ARMISD::LOOP_DEC
ARMISD::CSINV
ARMISD::CSNEG
ARMISD::CSINC
Unsupported calling convention
call to non-secure function would require passing arguments on stack
call to non-secure function would return value through pointer
secure entry function would return value through pointer
interrupt attribute is not supported in Thumb1
__gnu_mcount_nc
secure entry function must not be variadic
secure entry function requires arguments on stack
=l,l
ABORT
UNDEF
Unsupported interrupt attribute. If present, value must be one of: IRQ, FIQ, SWI, ABORT or UNDEF
vldN
arm-parallel-dsp
NumSMLAD
Number of smlad instructions generated
disable-arm-parallel-dsp
Disable the ARM Parallel DSP pass
arm-parallel-dsp-load-limit
Limit the number of loads analysed
Transform functions to use DSP intrinsics
arm-ldst-opt
NumLDMGened
Number of ldm instructions generated
NumSTMGened
Number of stm instructions generated
NumVLDMGened
Number of vldm instructions generated
NumVSTMGened
Number of vstm instructions generated
NumLdStMoved
Number of load / store instructions moved
NumLDRDFormed
Number of ldrd created before allocation
NumSTRDFormed
Number of strd created before allocation
NumLDRD2LDM
Number of ldrd instructions turned back into ldm
NumSTRD2STM
Number of strd instructions turned back into stm
NumLDRD2LDR
Number of ldrd instructions turned back into ldr's
NumSTRD2STR
Number of strd instructions turned back into str's
arm-assume-misaligned-load-store
Be more conservative in ARM load/store opt
arm-prera-ldst-opt-reorder-limit
ARM load / store optimization pass
ARM pre- register allocation load / store optimization pass
arm-prera-ldst-opt
arm-loloops-disable-tailpred
Disable tail-predication in the ARM LowOverheadLoop pass
ARM Low Overhead Loops pass
arm-low-overhead-loops
An attempt to perform XRay instrumentation for a Thumb function (not supported). Detected when emitting a sled.
cmse_nonsecure_entry
cmse_nonsecure_call
optimise barriers pass
FPRB
GPRB
__aeabi
__aeabi_memcpy4
__aeabi_memcpy8
__aeabi_memmove4
__aeabi_memmove8
__aeabi_memset4
__aeabi_memset8
__aeabi_memclr
__aeabi_memclr4
__aeabi_memclr8
ARM sls hardening pass
arm-sls-hardening
__llvm_slsblr_thunk_arm_r0
__llvm_slsblr_thunk_arm_r1
__llvm_slsblr_thunk_arm_r2
__llvm_slsblr_thunk_arm_r3
__llvm_slsblr_thunk_arm_r4
__llvm_slsblr_thunk_arm_r5
__llvm_slsblr_thunk_arm_r6
__llvm_slsblr_thunk_arm_r7
__llvm_slsblr_thunk_arm_r8
__llvm_slsblr_thunk_arm_r9
__llvm_slsblr_thunk_arm_r10
__llvm_slsblr_thunk_arm_r11
__llvm_slsblr_thunk_arm_sp
__llvm_slsblr_thunk_arm_pc
__llvm_slsblr_thunk_thumb_r0
__llvm_slsblr_thunk_thumb_r1
__llvm_slsblr_thunk_thumb_r2
__llvm_slsblr_thunk_thumb_r3
__llvm_slsblr_thunk_thumb_r4
__llvm_slsblr_thunk_thumb_r5
__llvm_slsblr_thunk_thumb_r6
__llvm_slsblr_thunk_thumb_r7
__llvm_slsblr_thunk_thumb_r8
__llvm_slsblr_thunk_thumb_r9
__llvm_slsblr_thunk_thumb_r10
__llvm_slsblr_thunk_thumb_r11
__llvm_slsblr_thunk_thumb_sp
__llvm_slsblr_thunk_thumb_pc
ARM Indirect Thunks
entry
Expected a variant SchedClass
arm-use-mulops
a9-754319-workaround
Enable workarounds for A9 HW bugs #754319
a9-754320-workaround
Enable workarounds for A9 HW bugs #754320
IT block support
arm-default-it
Generate IT block based on arch
arm-restrict-it
Disallow deprecated IT based on ARMv8
arm-no-restrict-it
Allow IT blocks based on ARMv7
arm-force-fast-isel
arm-enable-subreg-liveness
disable-a15-sd-optimization
Inhibit optimization of S->D register accesses on A15
arm-atomic-cfg-tidy
arm-load-store-opt
Enable ARM load/store optimization pass
arm-global-merge
use-soft-float
+soft-float
,+soft-float
+minsize
Function '
' uses ARM instructions, but the target does not support ARM mode execution.
-p:32:32
-Fi8
-i64:64
-f64:32:64
-v64:32:64-v128:32:128
-v128:64:128
-a:0:32
-n32
-S128
-S64
-S32
Target does not support the tiny CodeModel
Target does not support the kernel CodeModel
aapcs16
aapcs
ARM Execution Domain Fix
arm-execution-domain-fix
enable-arm-maskedldst
Enable the generation of masked loads and stores
disable-arm-loloops
Disable the generation of low-overhead loops
allow-arm-wlsloops
Enable the generation of WLS loops
llvm.loop.isvectorized
Possible incorrect use of EVT::getVectorNumElements() for scalable vector. Scalable flag may be dropped, use EVT::getVectorElementCount() instead
expand-all-fp-mlx
expand-limit
mlx-expansion
NumExpand
Number of fp MLA / MLS instructions expanded
ARM MLA / MLS expansion pass
enable-arm-maskedgatscat
Enable the generation of masked gathers and scatters
MVE gather/scattering lowering pass
arm-mve-gather-scatter-lowering
MVE gather/scatter lowering
gep.merged
LoopIncrement
NewPhi
PushedOutAdd
PushedOutMul
Product
IncrementPushedOutMul
ScaledIndex
StartIndex
PreIncrementStartIndex
Gather
GatherIncrement
tail-predication
MVE tail-predication pass options
disabled
Don't tail-predicate loops
enabled-no-reductions
Enable tail-predication, but not for reduction loops
enabled
Enable tail-predication, including reduction loops
force-enabled-no-reductions
Enable tail-predication, but not for reduction loops, and force this which might be unsafe
force-enabled
Enable tail-predication, including reduction loops, and force this which might be unsafe
Transform predicated vector loops to use MVE tail predication
mve-tail-predication
ARM MVE VPT block pass
arm-mve-vpt
MVE VPT block insertion pass
arm-enable-merge-loopenddec
Enable merging Loop End and Dec instructions.
ARM MVE TailPred and VPT Optimisations pass
arm-mve-vpt-opts
ARM MVE TailPred and VPT Optimisation Pass
Failed to emit Thumb1 stack adjustment
Thumb IT blocks insertion pass
old-thumb2-ifcvt
Use old-style Thumb2 if-conversion heuristics
prefer-no-csel
Prefer predicated Move to CSEL
thumb2-reduce-size
NumNarrows
Number of 32-bit instrs reduced to 16-bit ones
Num2Addrs
Number of 32-bit instrs reduced to 2addr 16-bit ones
NumLdSts
Number of 32-bit load / store reduced to 16-bit ones
t2-reduce-limit
t2-reduce-limit2
t2-reduce-limit3
Thumb2 instruction size reduce pass
Unsupported code-model for hardened jump-table
aarch64prelegalizercombinerhelper-disable-rule
Disable one or more combiner rules temporarily in the AArch64PreLegalizerCombinerHelper pass
aarch64prelegalizercombinerhelper-only-enable-rule
Disable all rules in the AArch64PreLegalizerCombinerHelper pass then re-enable the specified ones
Combine AArch64 machine instrs before legalization
aarch64-prelegalizer-combiner
AArch64PreLegalizerCombiner
Invalid rule identifier
Beginning of range should be before end of range
aarch64postlegalizercombinerhelper-disable-rule
Disable one or more combiner rules temporarily in the AArch64PostLegalizerCombinerHelper pass
aarch64postlegalizercombinerhelper-only-enable-rule
Disable all rules in the AArch64PostLegalizerCombinerHelper pass then re-enable the specified ones
Combine AArch64 MachineInstrs after legalization
aarch64-postlegalizer-combiner
AArch64PostLegalizerCombiner
aarch64postlegalizerloweringhelper-disable-rule
Disable one or more combiner rules temporarily in the AArch64PostLegalizerLoweringHelper pass
aarch64postlegalizerloweringhelper-only-enable-rule
Disable all rules in the AArch64PostLegalizerLoweringHelper pass then re-enable the specified ones
Lower AArch64 MachineInstrs after legalization
aarch64-postlegalizer-lowering
AArch64PostLegalizerLowering
Optimize AArch64 selected instructions
aarch64-post-select-optimize
AArch64 Post Select Optimizer
aarch64-a57-fp-load-balancing-force-all
Always modify dest registers regardless of color
aarch64-a57-fp-load-balancing-override
Ignore balance information, always return (1: Even, 2: Odd).
AArch64 A57 FP Load-Balancing
aarch64-a57-fp-load-balancing
A57 FP Anti-dependency breaker
aarch64-arm-compatibility
Convert ARM IR to AArch64 form
AArch64 ARM Compatibility Pass
aarch64-arm-compat
AArch64 ARM Compatibiltiy
+crc,+crypto,+fp-armv8,+lse,+neon,+ras,+rcpc,+rdm,+v8.3a,+zcm,+zcz
r7, r7
@ marker for 
fp, fp
// marker for objc_retainAutoreleaseReturnValue
intrinsic has no 64-bit counterpart
vtbx
aarch64-stret-compatibility
Convert ARM stret IR to AArch64 form
AArch64 ARM Stret Compatibility Pass
aarch64-stret-compat
AArch64 Stret Compatibiltiy
objc_msgSend_stret
objc_msgSendSuper_stret
objc_msgSendSuper2_stret
_objc_msgForward_stret
objc_msgSend
aarch64-simd-scalar-force-all
Force use of AdvSIMD scalar instructions everywhere
aarch64-simd-scalar
NumScalarInsnsUsed
Number of scalar instructions used
NumCopiesDeleted
Number of cross-class copies deleted
NumCopiesInserted
Number of cross-class copies inserted
AdvSIMD Scalar Operation Optimization
aarch64-ptrauth-auth-checks
don't test for failure
poison
poison on failure
trap
trap on failure
Check pointer authentication auth/resign failures
AArch64 Assembly Printer
branch-target-enforcement
sign-return-address
ptrauth ABI version support not yet implemented
invalid ptrauth ABI version: 
kernel
user
incompatible ptrauth ABI versions: 
) and 
), falling back to 63 (user)
__DATA
__auth_ptr
__hwasan_tag_mismatch
__hwasan_tag_mismatch_v2
.text.hot
patch
DEBUG_VALUE: 
 <- 
ptrauth-indirect-gotos
ptrauth-auth-traps
auth_success_
resign_end_
ptrauth-returns
outlined-function
on-fault: 
patchable-function-entry
xray_sled_
llvm.hwasan.check.memaccess only supported on ELF
__hwasan_check_x
_short_v2
Couldn't resolve target base/addend of llvm.ptrauth global '
Invalid AArch64 PAC Key ID '
' in llvm.ptrauth global '
Invalid AArch64 Discriminator '
 blockaddress
AArch64 Branch Targets
aarch64-branch-targets
AArch64 Local Dynamic TLS Access Clean-up
aarch64-local-dynamic-tls-cleanup
_TLS_MODULE_BASE_
aarch64-collect-loh
AArch64 Collect Linker Optimization Hint (LOH)
AArch64 Conditional Branch Tuning
aarch64-cond-br-tuning
aarch64-ccmp-limit
aarch64-stress-ccmp
aarch64-ccmp
NumConsidered
Number of ccmps considered
NumPhiRejs
Number of ccmps rejected (PHI)
NumPhysRejs
Number of ccmps rejected (Physregs)
NumPhi2Rejs
Number of ccmps rejected (PHI2)
NumHeadBranchRejs
Number of ccmps rejected (Head branch)
NumCmpBranchRejs
Number of ccmps rejected (CmpBB branch)
NumCmpTermRejs
Number of ccmps rejected (CmpBB is cbz...)
NumImmRangeRejs
Number of ccmps rejected (Imm out of range)
NumLiveDstRejs
Number of ccmps rejected (Cmp dest live)
NumMultNZCVUses
Number of ccmps rejected (NZCV used)
NumUnknNZCVDefs
Number of ccmps rejected (NZCV def unknown)
NumSpeculateRejs
Number of ccmps rejected (Can't speculate)
NumConverted
Number of ccmp instructions created
NumCompBranches
Number of cbz/cbnz branches converted
AArch64 CCMP Pass
AArch64 Conditional Compares
aarch64-dead-defs
AArch64 Dead register definitions
AArch64 Expand Hardened Pseudos
aarch64-expand-hardened-pseudos
ptrauth global offset too large, 32bit max encoding
ptrauth-calls
AArch64 pseudo instruction expansion pass
aarch64-expand-pseudo
Non-writeback variants of STGloop / STZGloop should not survive past PrologEpilogInserter.
aarch64-falkor-hwpf-fix
NumStridedLoadsMarked
Number of strided loads marked
NumCollisionsAvoided
Number of HW prefetch tag collisions avoided
NumCollisionsNotAvoided
Number of HW prefetch tag collisions not avoided due to lack of registers
falkor-hwpf
Controls which tag collisions are avoided
Falkor HW Prefetch Fix
falkor.strided.access
Falkor HW Prefetch Fix Late Phase
aarch64-falkor-hwpf-fix-late
AArch64 fix for A53 erratum 835769
aarch64-fix-cortex-a53-835769-pass
Workaround A53 erratum 835769 pass
aarch64-redzone
enable use of redzone on AArch64
reverse-csr-restore-seq
reverse the CSR restore sequence
stack-tagging-merge-settag
merge settag instruction in function epilog
aarch64-order-frame-objects
sort stack allocations
frame-info
NumRedZoneFunctions
Number of functions using red zone
  @ cfa
arm64e LR authentication requires ptrauth
Stack size cannot exceed 256MB for stack unwinding purposes
unable to claim register to authenticate LR
 * VG
Must reserve x18 to use shadow call stack
Alignment of scalable vectors > 16 bytes is not yet supported
aarch64-jump-tables
AArch64 compress jump tables pass
AArch64 Compress Jump Tables
aarch64-condopt
AArch64 CondOpt Pass
AArch64 Condition Optimizer
aarch64-copyelim
AArch64 redundant copy elimination pass
AArch64 Redundant Copy Elimination
AArch64 Instruction Selection
aarch64-lower
NumShiftInserts
Number of vector shift inserts
NumOptimizedImms
Number of times immediates were optimized
aarch64-elf-ldtls-generation
Allow AArch64 Local Dynamic TLS code generation
aarch64-enable-logical-imm
Enable AArch64 logical imm instruction optimization
aarch64-ptrauth-global-dynamic-mat
Always materialize llvm.ptrauth global references dynamically
aarch64-enable-mgather-combine
Combine extends of AArch64 masked gather intrinsics
__aarch64_cas1_relax
__aarch64_cas1_acq
__aarch64_cas1_rel
__aarch64_cas1_acq_rel
__aarch64_cas2_relax
__aarch64_cas2_acq
__aarch64_cas2_rel
__aarch64_cas2_acq_rel
__aarch64_cas4_relax
__aarch64_cas4_acq
__aarch64_cas4_rel
__aarch64_cas4_acq_rel
__aarch64_cas8_relax
__aarch64_cas8_acq
__aarch64_cas8_rel
__aarch64_cas8_acq_rel
__aarch64_cas16_relax
__aarch64_cas16_acq
__aarch64_cas16_rel
__aarch64_cas16_acq_rel
__aarch64_swp1_relax
__aarch64_swp1_acq
__aarch64_swp1_rel
__aarch64_swp1_acq_rel
__aarch64_swp2_relax
__aarch64_swp2_acq
__aarch64_swp2_rel
__aarch64_swp2_acq_rel
__aarch64_swp4_relax
__aarch64_swp4_acq
__aarch64_swp4_rel
__aarch64_swp4_acq_rel
__aarch64_swp8_relax
__aarch64_swp8_acq
__aarch64_swp8_rel
__aarch64_swp8_acq_rel
__aarch64_ldadd1_relax
__aarch64_ldadd1_acq
__aarch64_ldadd1_rel
__aarch64_ldadd1_acq_rel
__aarch64_ldadd2_relax
__aarch64_ldadd2_acq
__aarch64_ldadd2_rel
__aarch64_ldadd2_acq_rel
__aarch64_ldadd4_relax
__aarch64_ldadd4_acq
__aarch64_ldadd4_rel
__aarch64_ldadd4_acq_rel
__aarch64_ldadd8_relax
__aarch64_ldadd8_acq
__aarch64_ldadd8_rel
__aarch64_ldadd8_acq_rel
__aarch64_ldset1_relax
__aarch64_ldset1_acq
__aarch64_ldset1_rel
__aarch64_ldset1_acq_rel
__aarch64_ldset2_relax
__aarch64_ldset2_acq
__aarch64_ldset2_rel
__aarch64_ldset2_acq_rel
__aarch64_ldset4_relax
__aarch64_ldset4_acq
__aarch64_ldset4_rel
__aarch64_ldset4_acq_rel
__aarch64_ldset8_relax
__aarch64_ldset8_acq
__aarch64_ldset8_rel
__aarch64_ldset8_acq_rel
__aarch64_ldclr1_relax
__aarch64_ldclr1_acq
__aarch64_ldclr1_rel
__aarch64_ldclr1_acq_rel
__aarch64_ldclr2_relax
__aarch64_ldclr2_acq
__aarch64_ldclr2_rel
__aarch64_ldclr2_acq_rel
__aarch64_ldclr4_relax
__aarch64_ldclr4_acq
__aarch64_ldclr4_rel
__aarch64_ldclr4_acq_rel
__aarch64_ldclr8_relax
__aarch64_ldclr8_acq
__aarch64_ldclr8_rel
__aarch64_ldclr8_acq_rel
__aarch64_ldeor1_relax
__aarch64_ldeor1_acq
__aarch64_ldeor1_rel
__aarch64_ldeor1_acq_rel
__aarch64_ldeor2_relax
__aarch64_ldeor2_acq
__aarch64_ldeor2_rel
__aarch64_ldeor2_acq_rel
__aarch64_ldeor4_relax
__aarch64_ldeor4_acq
__aarch64_ldeor4_rel
__aarch64_ldeor4_acq_rel
__aarch64_ldeor8_relax
__aarch64_ldeor8_acq
__aarch64_ldeor8_rel
__aarch64_ldeor8_acq_rel
AArch64ISD::CALL
AArch64ISD::AUTH_CALL
AArch64ISD::AUTH_TC_RETURN
AArch64ISD::AUTH_CALL_RVMARKER
AArch64ISD::ADRP
AArch64ISD::ADR
AArch64ISD::ADDlow
AArch64ISD::LOADgot
AArch64ISD::RET_FLAG
AArch64ISD::BRCOND
AArch64ISD::CSEL
AArch64ISD::FCSEL
AArch64ISD::CSINV
AArch64ISD::CSNEG
AArch64ISD::CSINC
AArch64ISD::THREAD_POINTER
AArch64ISD::TLSDESC_CALLSEQ
AArch64ISD::ADD_PRED
AArch64ISD::MUL_PRED
AArch64ISD::SDIV_PRED
AArch64ISD::SHL_PRED
AArch64ISD::SMAX_PRED
AArch64ISD::SMIN_PRED
AArch64ISD::SRA_PRED
AArch64ISD::SRL_PRED
AArch64ISD::SUB_PRED
AArch64ISD::UDIV_PRED
AArch64ISD::UMAX_PRED
AArch64ISD::UMIN_PRED
AArch64ISD::FNEG_MERGE_PASSTHRU
AArch64ISD::SIGN_EXTEND_INREG_MERGE_PASSTHRU
AArch64ISD::ZERO_EXTEND_INREG_MERGE_PASSTHRU
AArch64ISD::FCEIL_MERGE_PASSTHRU
AArch64ISD::FFLOOR_MERGE_PASSTHRU
AArch64ISD::FNEARBYINT_MERGE_PASSTHRU
AArch64ISD::FRINT_MERGE_PASSTHRU
AArch64ISD::FROUND_MERGE_PASSTHRU
AArch64ISD::FROUNDEVEN_MERGE_PASSTHRU
AArch64ISD::FTRUNC_MERGE_PASSTHRU
AArch64ISD::FP_ROUND_MERGE_PASSTHRU
AArch64ISD::FP_EXTEND_MERGE_PASSTHRU
AArch64ISD::SINT_TO_FP_MERGE_PASSTHRU
AArch64ISD::UINT_TO_FP_MERGE_PASSTHRU
AArch64ISD::FCVTZU_MERGE_PASSTHRU
AArch64ISD::FCVTZS_MERGE_PASSTHRU
AArch64ISD::FSQRT_MERGE_PASSTHRU
AArch64ISD::FRECPX_MERGE_PASSTHRU
AArch64ISD::FABS_MERGE_PASSTHRU
AArch64ISD::SETCC_MERGE_ZERO
AArch64ISD::ADC
AArch64ISD::SBC
AArch64ISD::ADDS
AArch64ISD::SUBS
AArch64ISD::ADCS
AArch64ISD::SBCS
AArch64ISD::ANDS
AArch64ISD::CCMP
AArch64ISD::CCMN
AArch64ISD::FCCMP
AArch64ISD::FCMP
AArch64ISD::STRICT_FCMP
AArch64ISD::STRICT_FCMPE
AArch64ISD::DUP
AArch64ISD::DUPLANE8
AArch64ISD::DUPLANE16
AArch64ISD::DUPLANE32
AArch64ISD::DUPLANE64
AArch64ISD::MOVI
AArch64ISD::MOVIshift
AArch64ISD::MOVIedit
AArch64ISD::MOVImsl
AArch64ISD::FMOV
AArch64ISD::MVNIshift
AArch64ISD::MVNImsl
AArch64ISD::BICi
AArch64ISD::ORRi
AArch64ISD::BSP
AArch64ISD::NEG
AArch64ISD::EXTR
AArch64ISD::ZIP1
AArch64ISD::ZIP2
AArch64ISD::UZP1
AArch64ISD::UZP2
AArch64ISD::TRN1
AArch64ISD::TRN2
AArch64ISD::REV16
AArch64ISD::REV32
AArch64ISD::REV64
AArch64ISD::EXT
AArch64ISD::VSHL
AArch64ISD::VLSHR
AArch64ISD::VASHR
AArch64ISD::VSLI
AArch64ISD::VSRI
AArch64ISD::CMEQ
AArch64ISD::CMGE
AArch64ISD::CMGT
AArch64ISD::CMHI
AArch64ISD::CMHS
AArch64ISD::FCMEQ
AArch64ISD::FCMGE
AArch64ISD::FCMGT
AArch64ISD::CMEQz
AArch64ISD::CMGEz
AArch64ISD::CMGTz
AArch64ISD::CMLEz
AArch64ISD::CMLTz
AArch64ISD::FCMEQz
AArch64ISD::FCMGEz
AArch64ISD::FCMGTz
AArch64ISD::FCMLEz
AArch64ISD::FCMLTz
AArch64ISD::SADDV
AArch64ISD::UADDV
AArch64ISD::SRHADD
AArch64ISD::URHADD
AArch64ISD::SHADD
AArch64ISD::UHADD
AArch64ISD::SMINV
AArch64ISD::UMINV
AArch64ISD::SMAXV
AArch64ISD::UMAXV
AArch64ISD::SADDV_PRED
AArch64ISD::UADDV_PRED
AArch64ISD::SMAXV_PRED
AArch64ISD::UMAXV_PRED
AArch64ISD::SMINV_PRED
AArch64ISD::UMINV_PRED
AArch64ISD::ORV_PRED
AArch64ISD::EORV_PRED
AArch64ISD::ANDV_PRED
AArch64ISD::CLASTA_N
AArch64ISD::CLASTB_N
AArch64ISD::LASTA
AArch64ISD::LASTB
AArch64ISD::REV
AArch64ISD::REINTERPRET_CAST
AArch64ISD::TBL
AArch64ISD::FADD_PRED
AArch64ISD::FADDA_PRED
AArch64ISD::FADDV_PRED
AArch64ISD::FDIV_PRED
AArch64ISD::FMA_PRED
AArch64ISD::FMAXV_PRED
AArch64ISD::FMAXNM_PRED
AArch64ISD::FMAXNMV_PRED
AArch64ISD::FMINV_PRED
AArch64ISD::FMINNM_PRED
AArch64ISD::FMINNMV_PRED
AArch64ISD::FMUL_PRED
AArch64ISD::FSUB_PRED
AArch64ISD::BIT
AArch64ISD::CBZ
AArch64ISD::CBNZ
AArch64ISD::TBZ
AArch64ISD::TBNZ
AArch64ISD::TC_RETURN
AArch64ISD::PREFETCH
AArch64ISD::SITOF
AArch64ISD::UITOF
AArch64ISD::NVCAST
AArch64ISD::SQSHL_I
AArch64ISD::UQSHL_I
AArch64ISD::SRSHR_I
AArch64ISD::URSHR_I
AArch64ISD::SQSHLU_I
AArch64ISD::WrapperLarge
AArch64ISD::LD2post
AArch64ISD::LD3post
AArch64ISD::LD4post
AArch64ISD::ST2post
AArch64ISD::ST3post
AArch64ISD::ST4post
AArch64ISD::LD1x2post
AArch64ISD::LD1x3post
AArch64ISD::LD1x4post
AArch64ISD::ST1x2post
AArch64ISD::ST1x3post
AArch64ISD::ST1x4post
AArch64ISD::LD1DUPpost
AArch64ISD::LD2DUPpost
AArch64ISD::LD3DUPpost
AArch64ISD::LD4DUPpost
AArch64ISD::LD1LANEpost
AArch64ISD::LD2LANEpost
AArch64ISD::LD3LANEpost
AArch64ISD::LD4LANEpost
AArch64ISD::ST2LANEpost
AArch64ISD::ST3LANEpost
AArch64ISD::ST4LANEpost
AArch64ISD::SMULL
AArch64ISD::UMULL
AArch64ISD::FRECPE
AArch64ISD::FRECPS
AArch64ISD::FRSQRTE
AArch64ISD::FRSQRTS
AArch64ISD::STG
AArch64ISD::STZG
AArch64ISD::ST2G
AArch64ISD::STZ2G
AArch64ISD::SUNPKHI
AArch64ISD::SUNPKLO
AArch64ISD::UUNPKHI
AArch64ISD::UUNPKLO
AArch64ISD::INSR
AArch64ISD::PTEST
AArch64ISD::PTRUE
AArch64ISD::LD1_MERGE_ZERO
AArch64ISD::LD1S_MERGE_ZERO
AArch64ISD::LDNF1_MERGE_ZERO
AArch64ISD::LDNF1S_MERGE_ZERO
AArch64ISD::LDFF1_MERGE_ZERO
AArch64ISD::LDFF1S_MERGE_ZERO
AArch64ISD::LD1RQ_MERGE_ZERO
AArch64ISD::LD1RO_MERGE_ZERO
AArch64ISD::SVE_LD2_MERGE_ZERO
AArch64ISD::SVE_LD3_MERGE_ZERO
AArch64ISD::SVE_LD4_MERGE_ZERO
AArch64ISD::GLD1_MERGE_ZERO
AArch64ISD::GLD1_SCALED_MERGE_ZERO
AArch64ISD::GLD1_SXTW_MERGE_ZERO
AArch64ISD::GLD1_UXTW_MERGE_ZERO
AArch64ISD::GLD1_SXTW_SCALED_MERGE_ZERO
AArch64ISD::GLD1_UXTW_SCALED_MERGE_ZERO
AArch64ISD::GLD1_IMM_MERGE_ZERO
AArch64ISD::GLD1S_MERGE_ZERO
AArch64ISD::GLD1S_SCALED_MERGE_ZERO
AArch64ISD::GLD1S_SXTW_MERGE_ZERO
AArch64ISD::GLD1S_UXTW_MERGE_ZERO
AArch64ISD::GLD1S_SXTW_SCALED_MERGE_ZERO
AArch64ISD::GLD1S_UXTW_SCALED_MERGE_ZERO
AArch64ISD::GLD1S_IMM_MERGE_ZERO
AArch64ISD::GLDFF1_MERGE_ZERO
AArch64ISD::GLDFF1_SCALED_MERGE_ZERO
AArch64ISD::GLDFF1_SXTW_MERGE_ZERO
AArch64ISD::GLDFF1_UXTW_MERGE_ZERO
AArch64ISD::GLDFF1_SXTW_SCALED_MERGE_ZERO
AArch64ISD::GLDFF1_UXTW_SCALED_MERGE_ZERO
AArch64ISD::GLDFF1_IMM_MERGE_ZERO
AArch64ISD::GLDFF1S_MERGE_ZERO
AArch64ISD::GLDFF1S_SCALED_MERGE_ZERO
AArch64ISD::GLDFF1S_SXTW_MERGE_ZERO
AArch64ISD::GLDFF1S_UXTW_MERGE_ZERO
AArch64ISD::GLDFF1S_SXTW_SCALED_MERGE_ZERO
AArch64ISD::GLDFF1S_UXTW_SCALED_MERGE_ZERO
AArch64ISD::GLDFF1S_IMM_MERGE_ZERO
AArch64ISD::GLDNT1_MERGE_ZERO
AArch64ISD::GLDNT1_INDEX_MERGE_ZERO
AArch64ISD::GLDNT1S_MERGE_ZERO
AArch64ISD::ST1_PRED
AArch64ISD::SST1_PRED
AArch64ISD::SST1_SCALED_PRED
AArch64ISD::SST1_SXTW_PRED
AArch64ISD::SST1_UXTW_PRED
AArch64ISD::SST1_SXTW_SCALED_PRED
AArch64ISD::SST1_UXTW_SCALED_PRED
AArch64ISD::SST1_IMM_PRED
AArch64ISD::SSTNT1_PRED
AArch64ISD::SSTNT1_INDEX_PRED
AArch64ISD::LDP
AArch64ISD::STP
AArch64ISD::STNP
AArch64ISD::BITREVERSE_MERGE_PASSTHRU
AArch64ISD::BSWAP_MERGE_PASSTHRU
AArch64ISD::CTLZ_MERGE_PASSTHRU
AArch64ISD::CTPOP_MERGE_PASSTHRU
AArch64ISD::DUP_MERGE_PASSTHRU
AArch64ISD::INDEX_VECTOR
AArch64ISD::UABD
AArch64ISD::SABD
AArch64ISD::CALL_RVMARKER
No way to correctly truncate anything but float to bfloat
Unexpected type for AArch64 NEON intrinic
Unexpected type for aarch64_neon_vsli
Unsupported calling convention.
failed to perform tail call elimination on a call site marked musttail
Passing SVE types to variadic functions is currently not supported
rv_marker
Unsupported key kind for authenticating call
ELF TLS only supported in small memory model or in local exec TLS model
Unsupported offset in weak ptrauth global reference
Unsupported weak addr-div/B-key ptrauth global
Unsupported >32-bit-wide offset in ptrauth global
Offset in weak ptrauth global reference is too large
Unsupported >16-bit-wide constant discriminator in ptrauth global
jump-table-hardening
Invalid register name "
{cc}
Unsupported SPLAT_VECTOR input operand type
invalid tuple vector!
lohi
lo64
hi64
val64
__clear_cache
aarch64-tbz-offset-bits
Restrict range of TB[N]Z instructions (DEBUG)
aarch64-cbz-offset-bits
Restrict range of CB[N]Z instructions (DEBUG)
aarch64-bcc-offset-bits
Restrict range of Bcc instructions (DEBUG)
aarch64-page
aarch64-pageoff
aarch64-g3
aarch64-g2
aarch64-g1
aarch64-g0
aarch64-hi12
aarch64-coffstub
aarch64-got
aarch64-nc
aarch64-s
aarch64-tls
aarch64-dllimport
aarch64-prel
aarch64-tagged
aarch64-suppress-pair
aarch64-strided-access
_mcount
aarch64-ldst-opt
NumPairCreated
Number of load/store pair instructions generated
NumPostFolded
Number of post-index updates folded
NumPreFolded
Number of pre-index updates folded
NumUnscaledPairCreated
Number of load/store from unscaled generated
NumZeroStoresPromoted
Number of narrow zero stores promoted
NumLoadsFromStoresPromoted
Number of loads from stores promoted
aarch64-ldst-opt-reg-renaming
Controls which pairs are considered for renaming
aarch64-load-store-scan-limit
aarch64-update-scan-limit
aarch64-load-store-renaming
AArch64 load / store optimization pass
hasRedZone
<none>
sign-return-address-all
sign-return-address-key
sign-return-address-with-bkey
b_key
aarch64-stress-promote-const
Promote all vector constants
aarch64-promote-const
Number of promoted constants
NumPromotedUses
Number of promoted constants uses
AArch64 Promote Constant Pass
AArch64 Promote Constant
_PromotedConst
GPR32sponly
rtcGPR64
PPR_3b
GPR64x8Class_with_x8sub_0_in_rtcGPR64
FPR16_lo
GPR64x8Class_with_x8sub_0_in_tcGPR64
ZPR_3b
FPR16_lo_with_ZPR_3b
DD_with_dsub1_in_FPR64_lo_with_ZPR_3b
DDD_with_dsub2_in_FPR64_lo_with_ZPR_3b
DDD_with_dsub2_in_FPR64_lo_with_ZPR4_with_zsub1_in_ZPR_3b
DDDD_with_dsub3_in_FPR64_lo_with_ZPR_3b
DDDD_with_dsub3_in_FPR64_lo_with_ZPR4_with_zsub1_in_ZPR_3b
DDDD_with_dsub3_in_FPR64_lo_with_ZPR4_with_zsub2_in_ZPR_3b
FPR16_lo_with_ZPR4_with_zsub1_in_ZPR_3b
FPR8
FPR16_lo_with_ZPR4_with_zsub2_in_ZPR_3b
GPR32
FPR16_lo_with_ZPR4_with_zsub3_in_ZPR_3b
ZPR4_with_zsub3_in_ZPR_4b
ZPR_4b
FPR8_with_ZPR_3b
FPR8_with_ZPR4_with_zsub1_in_ZPR_3b
FPR8_with_ZPR4_with_zsub2_in_ZPR_3b
FPR8_with_ZPR4_with_zsub3_in_ZPR_3b
ZPR4_with_zsub2_in_ZPR_4b
FPR8_with_ZPR_4b
FPR8_with_ZPR4_with_zsub1_in_ZPR_4b
FPR8_with_ZPR4_with_zsub2_in_ZPR_4b
FPR8_with_ZPR4_with_zsub3_in_ZPR_4b
CSR_AArch64_AAPCS
CSR_AArch64_AAPCS_SCS
CSR_AArch64_AAPCS_SwiftError
CSR_AArch64_AAPCS_SwiftError_SCS
CSR_AArch64_AAPCS_SwiftTail
CSR_AArch64_AAPCS_ThisReturn
CSR_AArch64_AAPCS_X18
CSR_AArch64_AAVPCS
CSR_AArch64_AAVPCS_SCS
CSR_AArch64_AllRegs
CSR_AArch64_AllRegs_SCS
CSR_AArch64_NoRegs
CSR_AArch64_NoRegs_SCS
CSR_AArch64_RT_MostRegs
CSR_AArch64_RT_MostRegs_SCS
CSR_AArch64_SVE_AAPCS
CSR_AArch64_SVE_AAPCS_SCS
CSR_AArch64_StackProbe_Darwin
CSR_AArch64_StackProbe_Windows
CSR_AArch64_TLS_ELF
CSR_Darwin_AArch64_AAPCS
CSR_Darwin_AArch64_AAPCS_SwiftError
CSR_Darwin_AArch64_AAPCS_SwiftTail
CSR_Darwin_AArch64_AAPCS_ThisReturn
CSR_Darwin_AArch64_AAVPCS
CSR_Darwin_AArch64_CXX_TLS
CSR_Darwin_AArch64_CXX_TLS_PE
CSR_Darwin_AArch64_CXX_TLS_ViaCopy
CSR_Darwin_AArch64_RT_MostRegs
CSR_Darwin_AArch64_TLS
CSR_Win_AArch64_AAPCS
CSR_Win_AArch64_CFGuard_Check
Calling convention CFGuard_Check is unsupported on Darwin.
Calling convention SVE_VectorCall is unsupported on Darwin.
ShadowCallStack attribute not supported on Darwin.
ShadowCallStack attribute not supported with swifttail
AArch64 doesn't support function calls if any of the argument registers is reserved.
bsub
dsub
dsub0
dsub1
dsub2
dsub3
hsub
qhisub
qsub
qsub0
qsub1
qsub2
qsub3
ssub
sub_32
sube32
sube64
subo32
subo64
x8sub_0
x8sub_1
x8sub_2
x8sub_3
x8sub_4
x8sub_5
x8sub_6
x8sub_7
zsub
zsub0
zsub1
zsub2
zsub3
zsub_hi
dsub1_then_bsub
dsub1_then_hsub
dsub1_then_ssub
dsub3_then_bsub
dsub3_then_hsub
dsub3_then_ssub
dsub2_then_bsub
dsub2_then_hsub
dsub2_then_ssub
qsub1_then_bsub
qsub1_then_dsub
qsub1_then_hsub
qsub1_then_ssub
qsub3_then_bsub
qsub3_then_dsub
qsub3_then_hsub
qsub3_then_ssub
qsub2_then_bsub
qsub2_then_dsub
qsub2_then_hsub
qsub2_then_ssub
x8sub_7_then_sub_32
x8sub_6_then_sub_32
x8sub_5_then_sub_32
x8sub_4_then_sub_32
x8sub_3_then_sub_32
x8sub_2_then_sub_32
x8sub_1_then_sub_32
subo64_then_sub_32
zsub1_then_bsub
zsub1_then_dsub
zsub1_then_hsub
zsub1_then_ssub
zsub1_then_zsub
zsub1_then_zsub_hi
zsub3_then_bsub
zsub3_then_dsub
zsub3_then_hsub
zsub3_then_ssub
zsub3_then_zsub
zsub3_then_zsub_hi
zsub2_then_bsub
zsub2_then_dsub
zsub2_then_hsub
zsub2_then_ssub
zsub2_then_zsub
zsub2_then_zsub_hi
dsub0_dsub1
dsub0_dsub1_dsub2
dsub1_dsub2
dsub1_dsub2_dsub3
dsub2_dsub3
dsub_qsub1_then_dsub
dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
dsub_qsub1_then_dsub_qsub2_then_dsub
qsub0_qsub1
qsub0_qsub1_qsub2
qsub1_qsub2
qsub1_qsub2_qsub3
qsub2_qsub3
qsub1_then_dsub_qsub2_then_dsub
qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
qsub2_then_dsub_qsub3_then_dsub
sub_32_x8sub_1_then_sub_32
x8sub_0_x8sub_1
x8sub_2_x8sub_3
x8sub_4_x8sub_5
x8sub_6_x8sub_7
x8sub_6_then_sub_32_x8sub_7_then_sub_32
x8sub_4_then_sub_32_x8sub_5_then_sub_32
x8sub_2_then_sub_32_x8sub_3_then_sub_32
sub_32_subo64_then_sub_32
dsub_zsub1_then_dsub
zsub_zsub1_then_zsub
dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
dsub_zsub1_then_dsub_zsub2_then_dsub
zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
zsub_zsub1_then_zsub_zsub2_then_zsub
zsub0_zsub1
zsub0_zsub1_zsub2
zsub1_zsub2
zsub1_zsub2_zsub3
zsub2_zsub3
zsub1_then_dsub_zsub2_then_dsub
zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
zsub1_then_zsub_zsub2_then_zsub
zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
zsub2_then_dsub_zsub3_then_dsub
zsub2_then_zsub_zsub3_then_zsub
AArch64 sls hardening pass
aarch64-sls-hardening
__llvm_slsblr_thunk_x0
__llvm_slsblr_thunk_x1
__llvm_slsblr_thunk_x2
__llvm_slsblr_thunk_x3
__llvm_slsblr_thunk_x4
__llvm_slsblr_thunk_x5
__llvm_slsblr_thunk_x6
__llvm_slsblr_thunk_x7
__llvm_slsblr_thunk_x8
__llvm_slsblr_thunk_x9
__llvm_slsblr_thunk_x10
__llvm_slsblr_thunk_x11
__llvm_slsblr_thunk_x12
__llvm_slsblr_thunk_x13
__llvm_slsblr_thunk_x14
__llvm_slsblr_thunk_x15
__llvm_slsblr_thunk_x18
__llvm_slsblr_thunk_x19
__llvm_slsblr_thunk_x20
__llvm_slsblr_thunk_x21
__llvm_slsblr_thunk_x22
__llvm_slsblr_thunk_x23
__llvm_slsblr_thunk_x24
__llvm_slsblr_thunk_x25
__llvm_slsblr_thunk_x26
__llvm_slsblr_thunk_x27
__llvm_slsblr_thunk_x28
__llvm_slsblr_thunk_x29
__llvm_slsblr_thunk_x31
AArch64 Indirect Thunks
aarch64-slh-loads
Sanitize loads from memory.
AArch64 speculation hardening pass
aarch64-speculation-hardening
stack-tagging-merge-init
merge stack variable initializers with tagging when possible
stack-tagging-use-stack-safety
Use Stack Safety analysis results
stack-tagging-merge-init-scan-limit
stack-tagging-merge-init-size-limit
AArch64 Stack Tagging
aarch64-stack-tagging
.tag
basetag
stack-tagging-unchecked-ld-st
Unconditionally apply unchecked-ld-st optimization (even for large stack frames, or in the presence of variable sized allocas).
never apply unchecked-ld-st
safe
apply unchecked-ld-st when the target is definitely within range
always apply unchecked-ld-st
stack-tagging-first-slot-opt
Apply first slot optimization for stack tagging (eliminate ADDG Rt, Rn, 0, 0).
AArch64 Stack Tagging PreRA Pass
aarch64-stack-tagging-pre-ra
AArch64 Stack Tagging PreRA
AArch64 Store Pair Suppression
aarch64-stp-suppress
aarch64-early-ifcvt
Enable the early if converter pass
aarch64-use-tbi
Assume that top byte of an address is ignored
aarch64-enable-nonlazybind
Call nonlazybind functions via direct GOT load
aarch64-sve-vector-bits-max
Assume SVE vector registers are at most this big, with zero meaning no maximum size is assumed.
aarch64-sve-vector-bits-min
Assume SVE vector registers are at least this big, with zero meaning no minimum size is assumed.
aarch64-swift-hack
Convert Swift struct return to i64
AArch64 ARM Swift Hack Pass
aarch64-swift-hack-pass
AArch64 Swift Hack
swift_allocBox
swift_makeBoxUnique
swift_allocError
swift_getTypeName
swift_objc_class_unknownGetInstanceExtents
_getSwiftClassInstanceExtents
_getObjCClassInstanceExtents
swift_ObjCMirror_subscript
swift_class_getInstanceExtents
aarch64-enable-ccmp
Enable the CCMP formation pass
aarch64-enable-cond-br-tune
Enable the conditional branch tuning pass
aarch64-enable-mcr
Enable the machine combiner pass
aarch64-enable-stp-suppress
Suppress STP for AArch64
aarch64-enable-simd-scalar
Enable use of AdvSIMD scalar integer instructions
aarch64-enable-promote-const
Enable the promote constant pass
aarch64-enable-collect-loh
Enable the pass that emits the linker optimization hints (LOH)
aarch64-enable-dead-defs
Enable the pass that removes dead definitons and replaces stores to them with stores to the zero register
aarch64-enable-copyelim
Enable the redundant copy elimination pass
aarch64-enable-ldst-opt
Enable the load/store pair optimization pass
aarch64-enable-atomic-cfg-tidy
Run SimplifyCFG after expanding atomic operations to make use of cmpxchg flow-based information
aarch64-enable-early-ifcvt
Run early if-conversion
aarch64-enable-condopt
Enable the condition optimizer pass
aarch64-fix-cortex-a53-835769
Work around Cortex-A53 erratum 835769
aarch64-enable-gep-opt
Enable optimizations on complex GEPs
aarch64-enable-branch-relax
Relax out of range conditional branches
aarch64-enable-compress-jump-tables
Use smallest entry possible for jump tables
aarch64-enable-global-merge
Enable the global merge pass
aarch64-watch-bitcode-compatibility
Make thumbv7k bitcode compatible with arm64_32
aarch64-enable-loop-data-prefetch
Enable the loop data prefetch pass
aarch64-enable-global-isel-at-O
Enable GlobalISel at or below an opt level (-1 to disable)
aarch64-enable-sve-intrinsic-opts
Enable SVE intrinsic opts
aarch64-enable-falkor-hwpf-fix
aarch64-enable-branch-targets
Enable the AAcrh64 branch target pass
target-cpu
target-features
e-m:e-p:32:32-i8:8-i16:16-i64:64-S128
e-m:o-p:32:32-i64:64-i128:128-n32:64-S128
e-m:o-i64:64-i128:128-n32:64-S128
e-m:w-p:64:64-i32:32-i64:64-i128:128-n32:64-S128
e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
E-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
apple-a12
Only small, tiny and large code models are allowed on AArch64
tiny code model is only supported on ELF
buildCodeGenPipeline is not overriden
copysign
copysignf
copysignl
fabs
fabsf
fabsl
fmin
fminf
fminl
fmax
fmaxf
fmaxl
sinf
sinl
cosf
cosl
sqrt
sqrtf
sqrtl
powf
powl
exp2
exp2l
exp2f
floor
floorf
ceil
round
ffsl
labs
llabs
Compiler has made implicit assumption that TypeSize is not scalable. This may or may not lead to broken code.
Generic::Unknown Register Class
Generic::ScalarRC
Generic::VectorRC
auth_ptr$
Invalid instruction reference to address-diversified ptrauth global
enable-falkor-hwpf-unroll-fix
aarch64-sve-intrinsic-opts
SVE intrinsics optimizations
aarch64-simdinstr-opt
AArch64 SIMD instructions optimization pass
, %rax
, %ax
, %eax
, %al
, %st
, %dx
{1to2}, 
{1to4}, 
{1to8}, 
{1to16}, 
, {sae}, 
} {z}
callq
data32
{sae}, 
imm = 0x%hX
imm = 0x%X
imm = 0x%llX
%es:(
%st(0)
, st
, dx
, ax
, eax
, rax
, al
, cl
, xmm0
} {z}, 
, {sae}
es:[
st(0)
tbyte ptr 
zmmword ptr 
{rn-sae}
{rd-sae}
{ru-sae}
{rz-sae}
lock
notrack
repne
{vex}
{vex2}
{vex3}
{evex}
{disp8}
{disp32}
x86-align-branch-boundary
Control how the assembler should align branches with NOP. If the boundary's size is not 0, it should be a power of 2 and no less than 32. Branches will be aligned to prevent from being across or against the boundary of specified size. The default value 0 does not align branches.
x86-align-branch
Specify types of branches to align (plus separated list of types):
jcc      indicates conditional jumps
fused    indicates fused conditional jumps
jmp      indicates direct unconditional jumps
call     indicates direct and indirect calls
ret      indicates rets
indirect indicates indirect unconditional jumps
x86-branches-within-32B-boundaries
Align selected instructions to mitigate negative performance impact of Intel's micro code update for errata skx102.  May break assumptions about labels corresponding to particular instructions, and should be used with caution.
x86-pad-max-prefix-size
Maximum number of prefixes to use for padding
x86-pad-for-align
Pad previous instructions to implement align directives
x86-pad-for-branch-align
Pad previous instructions to implement branch alignment
invalid argument 
 to -x86-align-branch=; each element must be one of: fused, jcc, jmp, call, ret, indirect.(plus separated)
R_X86_64_NONE
R_X86_64_64
R_X86_64_PC32
R_X86_64_GOT32
R_X86_64_PLT32
R_X86_64_COPY
R_X86_64_GLOB_DAT
R_X86_64_JUMP_SLOT
R_X86_64_RELATIVE
R_X86_64_GOTPCREL
R_X86_64_32
R_X86_64_32S
R_X86_64_16
R_X86_64_PC16
R_X86_64_8
R_X86_64_PC8
R_X86_64_DTPMOD64
R_X86_64_DTPOFF64
R_X86_64_TPOFF64
R_X86_64_TLSGD
R_X86_64_TLSLD
R_X86_64_DTPOFF32
R_X86_64_GOTTPOFF
R_X86_64_TPOFF32
R_X86_64_PC64
R_X86_64_GOTOFF64
R_X86_64_GOTPC32
R_X86_64_GOT64
R_X86_64_GOTPCREL64
R_X86_64_GOTPC64
R_X86_64_GOTPLT64
R_X86_64_PLTOFF64
R_X86_64_SIZE32
R_X86_64_SIZE64
R_X86_64_GOTPC32_TLSDESC
R_X86_64_TLSDESC_CALL
R_X86_64_TLSDESC
R_X86_64_IRELATIVE
R_X86_64_GOTPCRELX
R_X86_64_REX_GOTPCRELX
R_386_NONE
R_386_32
R_386_PC32
R_386_GOT32
R_386_PLT32
R_386_COPY
R_386_GLOB_DAT
R_386_JUMP_SLOT
R_386_RELATIVE
R_386_GOTOFF
R_386_GOTPC
R_386_32PLT
R_386_TLS_TPOFF
R_386_TLS_IE
R_386_TLS_GOTIE
R_386_TLS_LE
R_386_TLS_GD
R_386_TLS_LDM
R_386_16
R_386_PC16
R_386_8
R_386_PC8
R_386_TLS_GD_32
R_386_TLS_GD_PUSH
R_386_TLS_GD_CALL
R_386_TLS_GD_POP
R_386_TLS_LDM_32
R_386_TLS_LDM_PUSH
R_386_TLS_LDM_CALL
R_386_TLS_LDM_POP
R_386_TLS_LDO_32
R_386_TLS_IE_32
R_386_TLS_LE_32
R_386_TLS_DTPMOD32
R_386_TLS_DTPOFF32
R_386_TLS_TPOFF32
R_386_TLS_GOTDESC
R_386_TLS_DESC_CALL
R_386_TLS_DESC
R_386_IRELATIVE
R_386_GOT32X
reloc_riprel_4byte
reloc_riprel_4byte_movq_load
reloc_riprel_4byte_relax
reloc_riprel_4byte_relax_rex
reloc_signed_4byte
reloc_signed_4byte_relax
reloc_global_offset_table
reloc_global_offset_table8
reloc_branch_4byte_pcrel
value of 
 is too large for field of 
 byte.
 bytes.
dir32
secidx
16bit-mode
16-bit mode (i8086)
32bit-mode
32-bit mode (80386)
3dnow
Enable 3DNow! instructions
3dnowa
Enable 3DNow! Athlon instructions
64bit
Support 64-bit instructions
64bit-mode
64-bit mode (x86_64)
Support ADX instructions
Enable AES instructions
amx-bf16
Support AMX-BF16 instructions
amx-int8
Support AMX-INT8 instructions
amx-tile
Support AMX-TILE instructions
Enable AVX instructions
avx2
Enable AVX2 instructions
avx512bf16
Support bfloat16 floating point
avx512bitalg
Enable AVX-512 Bit Algorithms
avx512bw
Enable AVX-512 Byte and Word Instructions
avx512cd
Enable AVX-512 Conflict Detection Instructions
avx512dq
Enable AVX-512 Doubleword and Quadword Instructions
avx512er
Enable AVX-512 Exponential and Reciprocal Instructions
avx512f
Enable AVX-512 instructions
avx512ifma
Enable AVX-512 Integer Fused Multiple-Add
avx512pf
Enable AVX-512 PreFetch Instructions
avx512vbmi
Enable AVX-512 Vector Byte Manipulation Instructions
avx512vbmi2
Enable AVX-512 further Vector Byte Manipulation Instructions
avx512vl
Enable AVX-512 Vector Length eXtensions
avx512vnni
Enable AVX-512 Vector Neural Network Instructions
avx512vp2intersect
Enable AVX-512 vp2intersect
avx512vpopcntdq
Enable AVX-512 Population Count Instructions
avxvnni
Support AVX_VNNI encoding
Support BMI instructions
bmi2
Support BMI2 instructions
branchfusion
CMP/TEST can be fused with conditional branches
cldemote
Enable Cache Demote
clflushopt
Flush A Cache Line Optimized
clwb
Cache Line Write Back
clzero
Enable Cache Line Zero
cmov
Enable conditional move instructions
cx16
64-bit with cmpxchg16b
Support CMPXCHG8B instructions
enqcmd
Has ENQCMD instructions
ermsb
REP MOVS/STOS are fast
f16c
Support 16-bit floating point conversion instructions
false-deps-lzcnt-tzcnt
LZCNT/TZCNT have a false dependency on dest register
false-deps-popcnt
POPCNT has a false dependency on dest register
fast-11bytenop
Target can quickly decode up to 11 byte NOPs
fast-15bytenop
Target can quickly decode up to 15 byte NOPs
fast-7bytenop
Target can quickly decode up to 7 byte NOPs
fast-bextr
Indicates that the BEXTR instruction is implemented as a single uop with good throughput
fast-gather
Indicates if gather is reasonably fast
fast-hops
Prefer horizontal vector math instructions (haddp, phsub, etc.) over normal vector instructions with shuffles
fast-lzcnt
LZCNT instructions are as fast as most simple integer ops
fast-scalar-fsqrt
Scalar SQRT is fast (disable Newton-Raphson)
fast-scalar-shift-masks
Prefer a left/right scalar logical shift pair over a shift+and pair
fast-shld-rotate
SHLD can be used as a faster rotate
fast-variable-shuffle
Shuffles with variable masks are fast
fast-vector-fsqrt
Vector SQRT is fast (disable Newton-Raphson)
fast-vector-shift-masks
Prefer a left/right vector logical shift pair over a shift+and pair
Enable three-operand fused multiple-add
fma4
Enable four-operand fused multiple-add
fsgsbase
Support FS/GS Base instructions
fsrm
REP MOVSB of short lengths is faster
fxsr
Support fxsave/fxrestore instructions
gfni
Enable Galois Field Arithmetic Instructions
hreset
Has hreset instruction
idivl-to-divb
Use 8-bit divide for positive values less than 256
idivq-to-divl
Use 32-bit divide for positive values less than 2^32
invpcid
Invalidate Process-Context Identifier
Support Key Locker kl Instructions
lea-sp
Use LEA for adjusting the stack pointer
lea-uses-ag
LEA instruction needs inputs at AG stage
lvi-cfi
Prevent indirect calls/branches from using a memory operand, and precede all indirect calls/branches from a register with an LFENCE instruction to serialize control flow. Also decompose RET instructions into a POP+LFENCE+JMP sequence.
lvi-load-hardening
Insert LFENCE instructions to prevent data speculatively injected into loads from being used maliciously.
Enable LWP instructions
lzcnt
Support LZCNT instruction
macrofusion
Various instructions can be fused with conditional branches
Enable MMX instructions
movbe
Support MOVBE instruction
movdir64b
Support movdir64b instruction
movdiri
Support movdiri instruction
mwaitx
Enable MONITORX/MWAITX timer functionality
nopl
Enable NOPL instruction
pad-short-functions
Pad short functions
pclmul
Enable packed carry-less multiplication instructions
pconfig
platform configuration instruction
Enable protection keys
popcnt
Support POPCNT instruction
prefer-128-bit
Prefer 128-bit AVX instructions
prefer-256-bit
Prefer 256-bit AVX instructions
prefer-mask-registers
Prefer AVX512 mask registers over PTEST/MOVMSK
prefetchwt1
Prefetch with Intent to Write and T1 Hint
prfchw
Support PRFCHW instructions
ptwrite
Support ptwrite instruction
rdpid
Support RDPID instructions
rdrnd
Support RDRAND instruction
rdseed
Support RDSEED instruction
retpoline
Remove speculation of indirect branches from the generated code, either by avoiding them entirely or lowering them with a speculation blocking construct
retpoline-external-thunk
When lowering an indirect call or branch using a `retpoline`, rely on the specified user provided thunk rather than emitting one ourselves. Only has effect when combined with some other retpoline feature
retpoline-indirect-branches
Remove speculation of indirect branches from the generated code
retpoline-indirect-calls
Remove speculation of indirect calls from the generated code
Support RTM instructions
sahf
Support LAHF and SAHF instructions in 64-bit mode
serialize
Has serialize instruction
seses
Prevent speculative execution side channel timing attacks by inserting a speculation barrier before memory reads, memory writes, and conditional branches. Implies LVI Control Flow integrity.
Enable Software Guard Extensions
Enable SHA instructions
shstk
Support CET Shadow-Stack instructions
slow-3ops-lea
LEA instruction with 3 ops or certain registers is slow
slow-incdec
INC and DEC instructions are slower than ADD and SUB
slow-lea
LEA instruction with certain arguments is slow
slow-pmaddwd
PMADDWD is slower than PMULLD
slow-pmulld
PMULLD instruction is slow
slow-shld
SHLD instruction is slow
slow-two-mem-ops
Two memory operand instructions are slow
slow-unaligned-mem-16
Slow unaligned 16-byte memory access
slow-unaligned-mem-32
Slow unaligned 32-byte memory access
Use software floating point features
Enable SSE instructions
sse-unaligned-mem
Allow unaligned memory operands with SSE instructions
sse2
Enable SSE2 instructions
sse3
Enable SSE3 instructions
sse4.1
Enable SSE 4.1 instructions
sse4.2
Enable SSE 4.2 instructions
sse4a
Support SSE 4a instructions
ssse3
Enable SSSE3 instructions
Enable TBM instructions
tsxldtrk
Support TSXLDTRK instructions
uintr
Has UINTR Instructions
use-glm-div-sqrt-costs
Use Goldmont specific floating point div/sqrt costs
vaes
Promote selected AES instructions to AVX512/AVX registers
vpclmulqdq
Enable vpclmulqdq instructions
vzeroupper
Should insert vzeroupper instructions
waitpkg
Wait and pause enhancements
wbnoinvd
Write Back No Invalidate
widekl
Support Key Locker wide Instructions
Enable X87 float instructions
Enable XOP instructions
xsave
Support xsave instructions
xsavec
Support xsavec instructions
xsaveopt
Support xsaveopt instructions
xsaves
Support xsaves instructions
alderlake
amdfam10
athlon
athlon-4
athlon-fx
athlon-mp
athlon-tbird
athlon-xp
athlon64
athlon64-sse3
atom
barcelona
bdver1
bdver2
bdver3
bdver4
bonnell
broadwell
btver1
btver2
c3-2
cannonlake
cascadelake
cooperlake
core-avx-i
core-avx2
core2
corei7
corei7-avx
geode
goldmont
goldmont-plus
haswell
i386
i486
i586
i686
icelake-client
icelake-server
ivybridge
k6-2
k6-3
k8-sse3
lakemont
nehalem
nocona
opteron
opteron-sse3
penryn
pentium
pentium-m
pentium-mmx
pentium2
pentium3
pentium3m
pentium4
pentium4m
pentiumpro
prescott
sandybridge
sapphirerapids
silvermont
skylake
skylake-avx512
tigerlake
tremont
westmere
winchip-c6
winchip2
x86-64-v2
x86-64-v3
x86-64-v4
yonah
znver1
znver2
znver3
+64bit-mode,-32bit-mode,-16bit-mode,+sse2
-64bit-mode,+32bit-mode,-16bit-mode
-64bit-mode,-32bit-mode,+16bit-mode
SKLDivider
SKLFPDivider
SKLPort0
SKLPort1
SKLPort2
SKLPort3
SKLPort4
SKLPort5
SKLPort6
SKLPort7
SKLPort01
SKLPort04
SKLPort05
SKLPort06
SKLPort15
SKLPort16
SKLPort23
SKLPort56
SKLPort015
SKLPort056
SKLPort237
SKLPort0156
SKLPortAny
AtomPort0
AtomPort1
AtomPort01
PdAGLU01
PdBranch
PdCount
PdDiv
PdEX
PdEX0
PdEX1
PdEX01
PdFPCVT
PdFPFMA
PdFPMAL
PdFPMMA
PdFPSTO
PdFPU
PdFPU0
PdFPU1
PdFPU2
PdFPU3
PdFPU01
PdFPU23
PdFPXBR
PdLoad
PdMul
PdStore
InvalidRegisterFile
PdFpuPRF
PdIntegerPRF
BWDivider
BWFPDivider
BWPort0
BWPort1
BWPort2
BWPort3
BWPort4
BWPort5
BWPort6
BWPort7
BWPort01
BWPort04
BWPort05
BWPort06
BWPort15
BWPort16
BWPort23
BWPort56
BWPort015
BWPort056
BWPort237
BWPort0156
BWPortAny
JALU0
JALU1
JALU01
JDiv
JFPA
JFPM
JFPU0
JFPU1
JFPU01
JFPX
JLAGU
JLSAGU
JMul
JSAGU
JSTC
JVALU
JVALU0
JVALU1
JVIMUL
JFpuPRF
JIntegerPRF
SKXDivider
SKXFPDivider
SKXPort0
SKXPort1
SKXPort2
SKXPort3
SKXPort4
SKXPort5
SKXPort6
SKXPort7
SKXPort01
SKXPort04
SKXPort05
SKXPort06
SKXPort15
SKXPort16
SKXPort23
SKXPort56
SKXPort015
SKXPort056
SKXPort237
SKXPort0156
SKXPortAny
SBDivider
SBFPDivider
SBPort0
SBPort1
SBPort4
SBPort5
SBPort01
SBPort05
SBPort15
SBPort23
SBPort015
SBPortAny
HWDivider
HWFPDivider
HWPort0
HWPort1
HWPort2
HWPort3
HWPort4
HWPort5
HWPort6
HWPort7
HWPort01
HWPort04
HWPort05
HWPort06
HWPort15
HWPort16
HWPort23
HWPort56
HWPort015
HWPort056
HWPort237
HWPort0156
HWPortAny
SLMDivider
SLMFPDivider
SLMFPMultiplier
SLM_FPC_RSV0
SLM_FPC_RSV1
SLM_FPC_RSV01
SLM_IEC_RSV0
SLM_IEC_RSV1
SLM_IEC_RSV01
SLM_MEC_RSV
ZnAGU
ZnAGU0
ZnAGU1
ZnALU
ZnALU0
ZnALU1
ZnALU2
ZnALU3
ZnALU03
ZnDivider
ZnFPU
ZnFPU0
ZnFPU1
ZnFPU2
ZnFPU3
ZnFPU01
ZnFPU02
ZnFPU03
ZnFPU12
ZnFPU13
ZnFPU23
ZnFPU013
ZnMultiplier
ZnFpuPRF
ZnIntegerPRF
Zn2AGU
Zn2AGU0
Zn2AGU1
Zn2AGU2
Zn2ALU
Zn2ALU0
Zn2ALU1
Zn2ALU2
Zn2ALU3
Zn2ALU03
Zn2Divider
Zn2FPU
Zn2FPU0
Zn2FPU1
Zn2FPU2
Zn2FPU3
Zn2FPU01
Zn2FPU02
Zn2FPU03
Zn2FPU12
Zn2FPU13
Zn2FPU23
Zn2FPU013
Zn2Multiplier
Zn2FpuPRF
Zn2IntegerPRF
masm
x86-asm-syntax
Choose style of code to emit from X86 backend:
Emit AT&T-style assembly
intel
Emit Intel-style assembly
mark-data-regions
Mark code section jump table data regions.
Cannot encode high byte register in REX-prefixed instruction
FORM: 
_GLOBAL_OFFSET_TABLE_
unsupported relocation of modified symbol
unsupported pc-relative relocation of difference
unsupported relocation with identical base
unsupported relocation with subtraction expression, symbol '
unsupported relocation of variable '
unsupported relocation of undefined symbol '
unsupported symbol modifier in relocation
unsupported symbol modifier in branch relocation
TLVP symbol modifier should have been rip-rel
32-bit absolute addressing is not supported in 64-bit mode
0x%x
Section too large, can't encode r_address (
) into 24 bits of scattered relocation entry.
32 bit reloc applied to a field with a different size
64 bit reloc applied to a field with a different size
Cannot represent this expression
unsupported relocation type
.cv_fpo_proc
.cv_fpo_endprologue
.cv_fpo_endproc
.cv_fpo_data
.cv_fpo_pushreg
.cv_fpo_stackalloc
.cv_fpo_stackalign
.cv_fpo_setframe
opening new .cv_fpo_proc before closing previous frame
directive must appear between .cv_fpo_proc and .cv_fpo_endprologue
.cv_fpo_endproc must appear after .cv_proc
missing .cv_fpo_endprologue
no FPO data found for symbol 
 + = 
$T0 
 @ = 
 .raSearch = 
$eip 
 ^ = 
$esp 
 4 + = 
 - ^ = 
$eax
$ebx
$ecx
$edx
$edi
$esi
$esp
$ebp
$eip
a frame register must be established before aligning the stack
R_ARM_NONE
R_ARM_PC24
R_ARM_ABS32
R_ARM_REL32
R_ARM_LDR_PC_G0
R_ARM_ABS16
R_ARM_ABS12
R_ARM_THM_ABS5
R_ARM_ABS8
R_ARM_SBREL32
R_ARM_THM_CALL
R_ARM_THM_PC8
R_ARM_BREL_ADJ
R_ARM_TLS_DESC
R_ARM_THM_SWI8
R_ARM_XPC25
R_ARM_THM_XPC22
R_ARM_TLS_DTPMOD32
R_ARM_TLS_DTPOFF32
R_ARM_TLS_TPOFF32
R_ARM_COPY
R_ARM_GLOB_DAT
R_ARM_JUMP_SLOT
R_ARM_RELATIVE
R_ARM_GOTOFF32
R_ARM_BASE_PREL
R_ARM_GOT_BREL
R_ARM_PLT32
R_ARM_CALL
R_ARM_JUMP24
R_ARM_THM_JUMP24
R_ARM_BASE_ABS
R_ARM_ALU_PCREL_7_0
R_ARM_ALU_PCREL_15_8
R_ARM_ALU_PCREL_23_15
R_ARM_LDR_SBREL_11_0_NC
R_ARM_ALU_SBREL_19_12_NC
R_ARM_ALU_SBREL_27_20_CK
R_ARM_TARGET1
R_ARM_SBREL31
R_ARM_V4BX
R_ARM_TARGET2
R_ARM_PREL31
R_ARM_MOVW_ABS_NC
R_ARM_MOVT_ABS
R_ARM_MOVW_PREL_NC
R_ARM_MOVT_PREL
R_ARM_THM_MOVW_ABS_NC
R_ARM_THM_MOVT_ABS
R_ARM_THM_MOVW_PREL_NC
R_ARM_THM_MOVT_PREL
R_ARM_THM_JUMP19
R_ARM_THM_JUMP6
R_ARM_THM_ALU_PREL_11_0
R_ARM_THM_PC12
R_ARM_ABS32_NOI
R_ARM_REL32_NOI
R_ARM_ALU_PC_G0_NC
R_ARM_ALU_PC_G0
R_ARM_ALU_PC_G1_NC
R_ARM_ALU_PC_G1
R_ARM_ALU_PC_G2
R_ARM_LDR_PC_G1
R_ARM_LDR_PC_G2
R_ARM_LDRS_PC_G0
R_ARM_LDRS_PC_G1
R_ARM_LDRS_PC_G2
R_ARM_LDC_PC_G0
R_ARM_LDC_PC_G1
R_ARM_LDC_PC_G2
R_ARM_ALU_SB_G0_NC
R_ARM_ALU_SB_G0
R_ARM_ALU_SB_G1_NC
R_ARM_ALU_SB_G1
R_ARM_ALU_SB_G2
R_ARM_LDR_SB_G0
R_ARM_LDR_SB_G1
R_ARM_LDR_SB_G2
R_ARM_LDRS_SB_G0
R_ARM_LDRS_SB_G1
R_ARM_LDRS_SB_G2
R_ARM_LDC_SB_G0
R_ARM_LDC_SB_G1
R_ARM_LDC_SB_G2
R_ARM_MOVW_BREL_NC
R_ARM_MOVT_BREL
R_ARM_MOVW_BREL
R_ARM_THM_MOVW_BREL_NC
R_ARM_THM_MOVT_BREL
R_ARM_THM_MOVW_BREL
R_ARM_TLS_GOTDESC
R_ARM_TLS_CALL
R_ARM_TLS_DESCSEQ
R_ARM_THM_TLS_CALL
R_ARM_PLT32_ABS
R_ARM_GOT_ABS
R_ARM_GOT_PREL
R_ARM_GOT_BREL12
R_ARM_GOTOFF12
R_ARM_GOTRELAX
R_ARM_GNU_VTENTRY
R_ARM_GNU_VTINHERIT
R_ARM_THM_JUMP11
R_ARM_THM_JUMP8
R_ARM_TLS_GD32
R_ARM_TLS_LDM32
R_ARM_TLS_LDO32
R_ARM_TLS_IE32
R_ARM_TLS_LE32
R_ARM_TLS_LDO12
R_ARM_TLS_LE12
R_ARM_TLS_IE12GP
R_ARM_PRIVATE_0
R_ARM_PRIVATE_1
R_ARM_PRIVATE_2
R_ARM_PRIVATE_3
R_ARM_PRIVATE_4
R_ARM_PRIVATE_5
R_ARM_PRIVATE_6
R_ARM_PRIVATE_7
R_ARM_PRIVATE_8
R_ARM_PRIVATE_9
R_ARM_PRIVATE_10
R_ARM_PRIVATE_11
R_ARM_PRIVATE_12
R_ARM_PRIVATE_13
R_ARM_PRIVATE_14
R_ARM_PRIVATE_15
R_ARM_ME_TOO
R_ARM_THM_TLS_DESCSEQ16
R_ARM_THM_TLS_DESCSEQ32
R_ARM_THM_BF16
R_ARM_THM_BF12
R_ARM_THM_BF18
R_ARM_IRELATIVE
fixup_arm_ldst_pcrel_12
fixup_t2_ldst_pcrel_12
fixup_arm_pcrel_10_unscaled
fixup_arm_pcrel_10
fixup_t2_pcrel_10
fixup_arm_pcrel_9
fixup_t2_pcrel_9
fixup_thumb_adr_pcrel_10
fixup_arm_adr_pcrel_12
fixup_t2_adr_pcrel_12
fixup_arm_condbranch
fixup_arm_uncondbranch
fixup_t2_condbranch
fixup_t2_uncondbranch
fixup_arm_thumb_br
fixup_arm_uncondbl
fixup_arm_condbl
fixup_arm_blx
fixup_arm_thumb_bl
fixup_arm_thumb_blx
fixup_arm_thumb_cb
fixup_arm_thumb_cp
fixup_arm_thumb_bcc
fixup_arm_movt_hi16
fixup_arm_movw_lo16
fixup_t2_movt_hi16
fixup_t2_movw_lo16
fixup_arm_mod_imm
fixup_t2_so_imm
fixup_bf_branch
fixup_bf_target
fixup_bfl_target
fixup_bfc_target
fixup_bfcsel_else_target
fixup_wls
fixup_le
out of range pc-relative fixup value
misaligned pc-relative fixup value
will be converted to nop
out of range label-relative fixup value
unexpected instruction to relax: 
bad relocation fixup type
Relocation out of range
misaligned ARM call destination
invalid value for this fixup
out of range immediate fixup value
unsupported relocation on symbol
invalid fixup for 4-byte pc-relative data relocation
invalid fixup for 1-byte data relocation
invalid fixup for 2-byte data relocation
invalid fixup for 4-byte data relocation
invalid fixup for ARM MOVT instruction
invalid fixup for ARM MOVW instruction
invalid fixup for Thumb MOVT instruction
invalid fixup for Thumb MOVW instruction
.fnstart
.fnend
.cantunwind
.personality 
.personalityindex 
.handlerdata
.setfp
.movsp
.pad
.vsave
.save
.unwind_raw 
, 0x
.eabi_attribute
.cpu
.fpu
.arch
.arch_extension
.object_arch
.inst
.tlsdescseq
.thumb_set
.ARM.extab
.text
.ARM.exidx
__aeabi_unwind_cpp_pr
.ARM.attributes
Unknown FPU: 
Unknown Arch: 
relocated expression must be 32-bit
.bf16.f32
.f64
.f16
.f32
APSR_nzcv, fpscr
pc, lr
.s16
.s32
.u16
.u32
.i32
.i16
.f16.f32
.f16.s16
.f16.u16
.f32.f16
.f32.s32
.f32.u32
.s16.f16
.s32.f32
.u16.f16
.u32.f32
.u64
.i64
.p16
.f16.f64
.f64.f16
.f64.f32
.f32.f64
.s32.f64
fpcxtns, 
fpcxts, 
fpscr_nzcvqc, 
fpscr, 
p0, 
vpr, 
fpexc, 
fpinst, 
fpinst2, 
fpsid, 
.s64
.f64.s16
.f32.s16
.f64.s32
.f16.s32
.s16.f64
.s16.f32
.s32.f16
.u16.f64
.u16.f32
.u32.f64
.u32.f16
.f64.u16
.f32.u16
.f64.u32
.f16.u32
sp, 
sp!, 
pc, lr, 
, #0
, apsr
, spsr
[], 
, fpscr
, fpcxtns
, fpcxts
, fpexc
, fpinst
, fpinst2
, fpscr_nzcvqc
, fpsid
, mvfr0
, mvfr1
, mvfr2
, p0
, vpr
[]}, 
]}, 
, #16
, #8
, #1
reg-names-std
reg-names-raw
<reg:
<imm:
vpush
vpop
csync
ssbb
pssbb
<mem:
[pc, 
, lsl 
, asr 
APSR_
SPSR
CPSR
<und>
, ror 
FIXME: relocations to absolute targets not yet implemented
can not encode offset '0x
' in resulting scattered relocation.
' can not be undefined in a subtraction expression
.code
.code
Not supported instr: 
constant value truncated (limited to 32-bit)
32bit
Prefer 32-bit Thumb instrs
8msecext
Enable support for ARMv8-M Security Extensions
Cortex-A12 ARM processors
Cortex-A15 ARM processors
Cortex-A17 ARM processors
Cortex-A32 ARM processors
Cortex-A5 ARM processors
Cortex-A7 ARM processors
a78c
Cortex-A8 ARM processors
Cortex-A9 ARM processors
a9-erratum-754319
Processor has Cortex-A9 hardware bug erratum #754319
a9-erratum-754320
Processor has Cortex-A9 hardware bug erratum #754320
aclass
Is application profile ('A' series)
acquire-release
Has v8 acquire/release (lda/ldaex  etc) instructions
armv2
ARMv2 architecture
armv2a
ARMv2a architecture
armv3
ARMv3 architecture
armv3m
ARMv3m architecture
armv4
ARMv4 architecture
ARMv4t architecture
ARMv5t architecture
ARMv5te architecture
armv5tej
ARMv5tej architecture
ARMv6 architecture
armv6-m
ARMv6m architecture
armv6j
ARMv7a architecture
ARMv6k architecture
armv6kz
ARMv6kz architecture
armv6s-m
ARMv6sm architecture
ARMv6t2 architecture
armv7-a
armv7-m
ARMv7m architecture
armv7-r
ARMv7r architecture
armv7e-m
ARMv7em architecture
armv7k
armv7s
armv7ve
ARMv7ve architecture
armv8-a
ARMv8a architecture
armv8-m.base
ARMv8mBaseline architecture
armv8-m.main
ARMv8mMainline architecture
armv8-r
ARMv8r architecture
armv8.1-a
ARMv81a architecture
armv8.1-m.main
ARMv81mMainline architecture
armv8.2-a
ARMv82a architecture
armv8.3-a
ARMv83a architecture
armv8.4-a
ARMv84a architecture
armv8.5-a
ARMv85a architecture
armv8.6-a
ARMv86a architecture
armv8.7-a
avoid-movs-shop
Avoid movs instructions with shifter operand
avoid-partial-cpsr
Avoid CPSR partial update for OOO execution
avoid-regsoreg
Avoid deprecated register-shifted reg operations
Enable support for BFloat16 instructions
Support CDE instructions
cdecp0
Coprocessor 0 ISA is CDEv1
cdecp1
Coprocessor 1 ISA is CDEv1
cdecp2
Coprocessor 2 ISA is CDEv1
cdecp3
Coprocessor 3 ISA is CDEv1
cdecp4
Coprocessor 4 ISA is CDEv1
cdecp5
Coprocessor 5 ISA is CDEv1
cdecp6
Coprocessor 6 ISA is CDEv1
cdecp7
Coprocessor 7 ISA is CDEv1
cheap-predicable-cpsr
Disable +1 predication cost for instructions updating CPSR
Enable support for CRC instructions
Enable support for Cryptography extensions
Extend FP to 32 double registers
Has data barrier (dmb/dsb) instructions
Has full data barrier (dfb) instruction
disable-postra-scheduler
Don't schedule again after register allocation
dont-widen-vmovs
Don't widen VMOVS to VMOVD
Enable support for dot product instructions
Supports DSP instructions in ARM and/or Thumb2
execute-only
Enable the generation of execute only code.
expand-fp-mlx
Expand VFP/NEON MLA/MLS instructions
exynos
Samsung Exynos processors
fp-armv8d16
Enable ARMv8 FP with only 16 d-registers
fp-armv8d16sp
Enable ARMv8 FP with only 16 d-registers and no double precision
fp-armv8sp
Enable ARMv8 FP with no double precision
fp16
Enable half-precision floating point
Enable full half-precision floating point fml instructions
fp64
Floating point unit supports double precision
fpao
Enable fast computation of positive address offsets
fpregs
Enable FP registers
fpregs16
Enable 16-bit FP registers
fpregs64
Enable 64-bit FP registers
Enable full half-precision floating point
Harden against straight line speculation across indirect calls
Harden against straight line speculation across RETurn and BranchRegister instructions
hwdiv
Enable divide instructions in Thumb
hwdiv-arm
Enable divide instructions in ARM mode
iwmmxt
iwmmxt2
krait
Qualcomm Krait processors
Enable Low Overhead Branch extensions
long-calls
Generate calls via indirect call instructions
loop-align
Prefer 32-bit alignment for loops
Cortex-M3 ARM processors
Cortex-M7 ARM processors
mclass
Is microcontroller profile ('M' series)
Supports Multiprocessing extension
muxed-units
Has muxed AGU and NEON/FPU
Support M-Class Vector Extension with integer ops
Support M-Class Vector Extension with integer and floating ops
mve1beat
Model MVE instructions as a 1 beat per tick architecture
mve2beat
Model MVE instructions as a 2 beats per tick architecture
mve4beat
Model MVE instructions as a 4 beats per tick architecture
nacl-trap
NaCl trap
Enable NEON instructions
neon-fpmovs
Convert VMOVSR, VMOVRS, VMOVS to NEON
neonfp
Use NEON for single precision FP
Neoverse-V1 ARM processors
no-branch-predictor
Has no branch predictor
no-movt
Don't use movt/movw pairs for 32-bit imms
noarm
Does not support ARM mode execution
nonpipelined-vfp
VFP instructions are not pipelined
Enable support for Performance Monitor extensions
prefer-ishst
Prefer ISHST barriers
prefer-vmovsr
Prefer VMOVSR
prof-unpr
Is profitable to unpredicate
Cortex-R4 ARM processors
Cortex-R5 ARM processors
Cortex-R52 ARM processors
Cortex-R7 ARM processors
Enable Reliability, Availability and Serviceability extensions
rclass
Is realtime profile ('R' series)
read-tp-hard
Reading thread pointer from register
reserve-r9
Reserve R9, making it unavailable as GPR
ret-addr-stack
Has return address stack
Enable v8.5a Speculation Barrier
slow-fp-brcc
FP compare + branch is slow
slow-load-D-subreg
Loading into D subregs is slow
slow-odd-reg
VLDM/VSTM starting with an odd register is slow
slow-vdup32
Has slow VDUP32 - prefer VMOV
slow-vgetlni32
Has slow VGETLNi32 - prefer VMOV
slowfpvfmx
Disable VFP / NEON FMA instructions
slowfpvmlx
Disable VFP / NEON MAC instructions
soft-float
Use software floating point features.
splat-vfp-neon
Splat register from VFP to NEON
swift
Swift ARM processors
thumb-mode
Thumb mode
Enable Thumb2 instructions
trustzone
Enable support for TrustZone security extensions
use-misched
Use the MachineScheduler
Support ARM v4T instructions
Support ARM v5T instructions
v5te
Support ARM v5TE, v5TEj, and v5TExp instructions
Support ARM v6 instructions
Support ARM v6k instructions
Support ARM v6M instructions
v6t2
Support ARM v6t2 instructions
Support ARM v7 instructions
v7clrex
Has v7 clrex instruction
Support ARM v8 instructions
v8.1m.main
Support ARM v8-1M Mainline instructions
Support ARM v8M Baseline instructions
v8m.main
Support ARM v8M Mainline instructions
vfp2
Enable VFP2 instructions
vfp2sp
Enable VFP2 instructions with no double precision
vfp3
Enable VFP3 instructions
vfp3d16
Enable VFP3 instructions with only 16 d-registers
vfp3d16sp
Enable VFP3 instructions with only 16 d-registers and no double precision
vfp3sp
Enable VFP3 instructions with no double precision
vfp4
Enable VFP4 instructions
vfp4d16
Enable VFP4 instructions with only 16 d-registers
vfp4d16sp
Enable VFP4 instructions with only 16 d-registers and no double precision
vfp4sp
Enable VFP4 instructions with no double precision
virtualization
Supports Virtualization extension
vldn-align
Check for VLDn unaligned access
vmlx-forwarding
Has multiplier accumulator forwarding
vmlx-hazards
Has VMLx hazards
wide-stride-vfp
Use a wide stride when allocating VFP registers
xscale
arm1020e
arm1020t
arm1022e
arm10e
arm10tdmi
arm1136j-s
arm1136jf-s
arm1156t2-s
arm1156t2f-s
arm1176j-s
arm1176jz-s
arm1176jzf-s
arm710t
arm720t
arm7tdmi
arm7tdmi-s
arm8
arm810
arm9
arm920
arm920t
arm922t
arm926ej-s
arm940t
arm946e-s
arm966e-s
arm968e-s
arm9e
arm9tdmi
cortex-a12
cortex-a15
cortex-a17
cortex-a32
cortex-a5
cortex-a7
cortex-a8
cortex-a9
cortex-m0
cortex-m0plus
cortex-m1
cortex-m23
cortex-m3
cortex-m33
cortex-m35p
cortex-m4
cortex-m55
cortex-m7
cortex-r4
cortex-r4f
cortex-r5
cortex-r52
cortex-r7
cortex-r8
ep9312
mpcore
mpcorenovfp
sc000
sc300
strongarm
strongarm110
strongarm1100
strongarm1110
+thumb-mode,+v4t
+nacl-trap
+noarm
applying IT instruction to more than one subsequent instruction is deprecated
use of SP in the list is deprecated
use of LR and PC simultaneously in the list is deprecated
deprecated since v7, use 'isb'
deprecated since v7, use 'dsb'
deprecated since v7, use 'dmb'
since v7, cp10 and cp11 are reserved for advanced SIMD or floating point instructions
use of SP or PC in the list is deprecated
A9UnitAGU
A9UnitALU
A9UnitB
A9UnitFP
A9UnitLS
A9UnitMul
M4Unit
M7UnitALU
M7UnitBranch
M7UnitLoad
M7UnitMAC
M7UnitSIMD
M7UnitShift1
M7UnitShift2
M7UnitStore
M7UnitVFP
M7UnitVPort
R52UnitALU
R52UnitB
R52UnitDiv
R52UnitFPALU
R52UnitFPMUL
R52UnitLd
R52UnitMAC
SwiftUnitDiv
SwiftUnitP0
SwiftUnitP1
SwiftUnitP2
SwiftUnitP01
unsupported relocation type: 
R_AARCH64_NONE
R_AARCH64_ABS64
R_AARCH64_ABS32
R_AARCH64_ABS16
R_AARCH64_PREL64
R_AARCH64_PREL32
R_AARCH64_PREL16
R_AARCH64_MOVW_UABS_G0
R_AARCH64_MOVW_UABS_G0_NC
R_AARCH64_MOVW_UABS_G1
R_AARCH64_MOVW_UABS_G1_NC
R_AARCH64_MOVW_UABS_G2
R_AARCH64_MOVW_UABS_G2_NC
R_AARCH64_MOVW_UABS_G3
R_AARCH64_MOVW_SABS_G0
R_AARCH64_MOVW_SABS_G1
R_AARCH64_MOVW_SABS_G2
R_AARCH64_LD_PREL_LO19
R_AARCH64_ADR_PREL_LO21
R_AARCH64_ADR_PREL_PG_HI21
R_AARCH64_ADR_PREL_PG_HI21_NC
R_AARCH64_ADD_ABS_LO12_NC
R_AARCH64_LDST8_ABS_LO12_NC
R_AARCH64_TSTBR14
R_AARCH64_CONDBR19
R_AARCH64_JUMP26
R_AARCH64_CALL26
R_AARCH64_LDST16_ABS_LO12_NC
R_AARCH64_LDST32_ABS_LO12_NC
R_AARCH64_LDST64_ABS_LO12_NC
R_AARCH64_MOVW_PREL_G0
R_AARCH64_MOVW_PREL_G0_NC
R_AARCH64_MOVW_PREL_G1
R_AARCH64_MOVW_PREL_G1_NC
R_AARCH64_MOVW_PREL_G2
R_AARCH64_MOVW_PREL_G2_NC
R_AARCH64_MOVW_PREL_G3
R_AARCH64_LDST128_ABS_LO12_NC
R_AARCH64_MOVW_GOTOFF_G0
R_AARCH64_MOVW_GOTOFF_G0_NC
R_AARCH64_MOVW_GOTOFF_G1
R_AARCH64_MOVW_GOTOFF_G1_NC
R_AARCH64_MOVW_GOTOFF_G2
R_AARCH64_MOVW_GOTOFF_G2_NC
R_AARCH64_MOVW_GOTOFF_G3
R_AARCH64_GOTREL64
R_AARCH64_GOTREL32
R_AARCH64_GOT_LD_PREL19
R_AARCH64_LD64_GOTOFF_LO15
R_AARCH64_ADR_GOT_PAGE
R_AARCH64_LD64_GOT_LO12_NC
R_AARCH64_LD64_GOTPAGE_LO15
R_AARCH64_PLT32
R_AARCH64_TLSGD_ADR_PREL21
R_AARCH64_TLSGD_ADR_PAGE21
R_AARCH64_TLSGD_ADD_LO12_NC
R_AARCH64_TLSGD_MOVW_G1
R_AARCH64_TLSGD_MOVW_G0_NC
R_AARCH64_TLSLD_ADR_PREL21
R_AARCH64_TLSLD_ADR_PAGE21
R_AARCH64_TLSLD_ADD_LO12_NC
R_AARCH64_TLSLD_MOVW_G1
R_AARCH64_TLSLD_MOVW_G0_NC
R_AARCH64_TLSLD_LD_PREL19
R_AARCH64_TLSLD_MOVW_DTPREL_G2
R_AARCH64_TLSLD_MOVW_DTPREL_G1
R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC
R_AARCH64_TLSLD_MOVW_DTPREL_G0
R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC
R_AARCH64_TLSLD_ADD_DTPREL_HI12
R_AARCH64_TLSLD_ADD_DTPREL_LO12
R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST8_DTPREL_LO12
R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST16_DTPREL_LO12
R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST32_DTPREL_LO12
R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST64_DTPREL_LO12
R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC
R_AARCH64_TLSIE_MOVW_GOTTPREL_G1
R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC
R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21
R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC
R_AARCH64_TLSIE_LD_GOTTPREL_PREL19
R_AARCH64_TLSLE_MOVW_TPREL_G2
R_AARCH64_TLSLE_MOVW_TPREL_G1
R_AARCH64_TLSLE_MOVW_TPREL_G1_NC
R_AARCH64_TLSLE_MOVW_TPREL_G0
R_AARCH64_TLSLE_MOVW_TPREL_G0_NC
R_AARCH64_TLSLE_ADD_TPREL_HI12
R_AARCH64_TLSLE_ADD_TPREL_LO12
R_AARCH64_TLSLE_ADD_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST8_TPREL_LO12
R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST16_TPREL_LO12
R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST32_TPREL_LO12
R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST64_TPREL_LO12
R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC
R_AARCH64_TLSDESC_LD_PREL19
R_AARCH64_TLSDESC_ADR_PREL21
R_AARCH64_TLSDESC_ADR_PAGE21
R_AARCH64_TLSDESC_LD64_LO12
R_AARCH64_TLSDESC_ADD_LO12
R_AARCH64_TLSDESC_OFF_G1
R_AARCH64_TLSDESC_OFF_G0_NC
R_AARCH64_TLSDESC_LDR
R_AARCH64_TLSDESC_ADD
R_AARCH64_TLSDESC_CALL
R_AARCH64_TLSLE_LDST128_TPREL_LO12
R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC
R_AARCH64_TLSLD_LDST128_DTPREL_LO12
R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC
R_AARCH64_COPY
R_AARCH64_GLOB_DAT
R_AARCH64_JUMP_SLOT
R_AARCH64_RELATIVE
R_AARCH64_TLS_DTPMOD64
R_AARCH64_TLS_DTPREL64
R_AARCH64_TLS_TPREL64
R_AARCH64_TLSDESC
R_AARCH64_IRELATIVE
R_AARCH64_P32_ABS32
R_AARCH64_P32_ABS16
R_AARCH64_P32_PREL32
R_AARCH64_P32_PREL16
R_AARCH64_P32_MOVW_UABS_G0
R_AARCH64_P32_MOVW_UABS_G0_NC
R_AARCH64_P32_MOVW_UABS_G1
R_AARCH64_P32_MOVW_SABS_G0
R_AARCH64_P32_LD_PREL_LO19
R_AARCH64_P32_ADR_PREL_LO21
R_AARCH64_P32_ADR_PREL_PG_HI21
R_AARCH64_P32_ADD_ABS_LO12_NC
R_AARCH64_P32_LDST8_ABS_LO12_NC
R_AARCH64_P32_LDST16_ABS_LO12_NC
R_AARCH64_P32_LDST32_ABS_LO12_NC
R_AARCH64_P32_LDST64_ABS_LO12_NC
R_AARCH64_P32_LDST128_ABS_LO12_NC
R_AARCH64_P32_TSTBR14
R_AARCH64_P32_CONDBR19
R_AARCH64_P32_JUMP26
R_AARCH64_P32_CALL26
R_AARCH64_P32_MOVW_PREL_G0
R_AARCH64_P32_MOVW_PREL_G0_NC
R_AARCH64_P32_MOVW_PREL_G1
R_AARCH64_P32_GOT_LD_PREL19
R_AARCH64_P32_ADR_GOT_PAGE
R_AARCH64_P32_LD32_GOT_LO12_NC
R_AARCH64_P32_LD32_GOTPAGE_LO14
R_AARCH64_P32_PLT32
R_AARCH64_P32_TLSGD_ADR_PREL21
R_AARCH64_P32_TLSGD_ADR_PAGE21
R_AARCH64_P32_TLSGD_ADD_LO12_NC
R_AARCH64_P32_TLSLD_ADR_PREL21
R_AARCH64_P32_TLSLD_ADR_PAGE21
R_AARCH64_P32_TLSLD_ADD_LO12_NC
R_AARCH64_P32_TLSLD_LD_PREL19
R_AARCH64_P32_TLSLD_MOVW_DTPREL_G1
R_AARCH64_P32_TLSLD_MOVW_DTPREL_G0
R_AARCH64_P32_TLSLD_MOVW_DTPREL_G0_NC
R_AARCH64_P32_TLSLD_ADD_DTPREL_HI12
R_AARCH64_P32_TLSLD_ADD_DTPREL_LO12
R_AARCH64_P32_TLSLD_ADD_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST8_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST8_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST16_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST16_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST32_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST32_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST64_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST64_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST128_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST128_DTPREL_LO12_NC
R_AARCH64_P32_TLSIE_ADR_GOTTPREL_PAGE21
R_AARCH64_P32_TLSIE_LD32_GOTTPREL_LO12_NC
R_AARCH64_P32_TLSIE_LD_GOTTPREL_PREL19
R_AARCH64_P32_TLSLE_MOVW_TPREL_G1
R_AARCH64_P32_TLSLE_MOVW_TPREL_G0
R_AARCH64_P32_TLSLE_MOVW_TPREL_G0_NC
R_AARCH64_P32_TLSLE_ADD_TPREL_HI12
R_AARCH64_P32_TLSLE_ADD_TPREL_LO12
R_AARCH64_P32_TLSLE_ADD_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST8_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST8_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST16_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST16_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST32_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST32_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST64_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST64_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST128_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST128_TPREL_LO12_NC
R_AARCH64_P32_TLSDESC_LD_PREL19
R_AARCH64_P32_TLSDESC_ADR_PREL21
R_AARCH64_P32_TLSDESC_ADR_PAGE21
R_AARCH64_P32_TLSDESC_LD32_LO12
R_AARCH64_P32_TLSDESC_ADD_LO12
R_AARCH64_P32_TLSDESC_CALL
R_AARCH64_P32_COPY
R_AARCH64_P32_GLOB_DAT
R_AARCH64_P32_JUMP_SLOT
R_AARCH64_P32_RELATIVE
R_AARCH64_P32_TLS_DTPREL
R_AARCH64_P32_TLS_DTPMOD
R_AARCH64_P32_TLS_TPREL
R_AARCH64_P32_TLSDESC
R_AARCH64_P32_IRELATIVE
fixup_aarch64_pcrel_adr_imm21
fixup_aarch64_pcrel_adrp_imm21
fixup_aarch64_add_imm12
fixup_aarch64_ldst_imm12_scale1
fixup_aarch64_ldst_imm12_scale2
fixup_aarch64_ldst_imm12_scale4
fixup_aarch64_ldst_imm12_scale8
fixup_aarch64_ldst_imm12_scale16
fixup_aarch64_ldr_pcrel_imm19
fixup_aarch64_movw
fixup_aarch64_pcrel_branch14
fixup_aarch64_pcrel_branch19
fixup_aarch64_pcrel_branch26
fixup_aarch64_pcrel_call26
fixup_aarch64_tlsdesc_call
fixup value out of range
fixup not sufficiently aligned
fixup must be 2-byte aligned
fixup must be 4-byte aligned
fixup must be 8-byte aligned
fixup must be 16-byte aligned
fixup value out of range [-0xFFFF, 0xFFFF]
relocation for a thread-local variable points to an absolute symbol
unresolved movw fixup not yet implemented
1-byte data relocations not supported
ILP32 8 byte PC relative data relocation not supported (LP64 eqv: PREL64)
invalid symbol kind for ADR relocation
invalid fixup for 32-bit pcrel ADRP instruction VK_ABS VK_NC
invalid symbol kind for ADRP relocation
Unsupported pc-relative fixup kind
ILP32 8 byte absolute data relocation not supported (LP64 eqv: ABS64)
invalid fixup for add (uimm12) instruction
invalid fixup for 8-bit load/store instruction
invalid fixup for 16-bit load/store instruction
LP64 4 byte unchecked GOT load/store relocation not supported (ILP32 eqv: LD32_GOT_LO12_NC
ILP32 4 byte checked GOT load/store relocation not supported (unchecked eqv: LD32_GOT_LO12_NC)
LP64 4 byte checked GOT load/store relocation not supported (unchecked/ILP32 eqv: LD32_GOT_LO12_NC)
LP64 32-bit load/store relocation not supported (ILP32 eqv: TLSIE_LD32_GOTTPREL_LO12_NC)
LP64 4 byte TLSDESC load/store relocation not supported (ILP32 eqv: TLSDESC_LD64_LO12)
invalid fixup for 32-bit load/store instruction fixup_aarch64_ldst_imm12_scale4
ILP32 64-bit load/store relocation not supported (LP64 eqv: LD64_GOT_LO12_NC)
ILP32 64-bit load/store relocation not supported (LP64 eqv: TLSIE_LD64_GOTTPREL_LO12_NC)
ILP32 64-bit load/store relocation not supported (LP64 eqv: TLSDESC_LD64_LO12)
invalid fixup for 64-bit load/store instruction
invalid fixup for 128-bit load/store instruction
invalid fixup for movz/movk instruction
Unknown ELF relocation type
ILP32 absolute MOV relocation not supported (LP64 eqv: MOVW_UABS_G3)
ILP32 absolute MOV relocation not supported (LP64 eqv: MOVW_UABS_G2)
ILP32 absolute MOV relocation not supported (LP64 eqv: MOVW_SABS_G2)
ILP32 absolute MOV relocation not supported (LP64 eqv: MOVW_UABS_G2_NC)
ILP32 absolute MOV relocation not supported (LP64 eqv: MOVW_SABS_G1)
ILP32 absolute MOV relocation not supported (LP64 eqv: MOVW_UABS_G1_NC)
ILP32 absolute MOV relocation not supported (LP64 eqv: TLSLD_MOVW_DTPREL_G2)
ILP32 absolute MOV relocation not supported (LP64 eqv: TLSLD_MOVW_DTPREL_G1_NC)
ILP32 absolute MOV relocation not supported (LP64 eqv: TLSLE_MOVW_TPREL_G2)
ILP32 absolute MOV relocation not supported (LP64 eqv: TLSLE_MOVW_TPREL_G1_NC)
ILP32 absolute MOV relocation not supported (LP64 eqv: TLSIE_MOVW_GOTTPREL_G1)
ILP32 absolute MOV relocation not supported (LP64 eqv: TLSIE_MOVW_GOTTPREL_G0_NC)
.inst
.variant_pcs 
.seh_stackalloc 
.seh_save_r19r20_x 
.seh_save_fplr 
.seh_save_fplr_x 
.seh_save_reg x
.seh_save_reg_x x
.seh_save_regp x
.seh_save_regp_x x
.seh_save_lrpair x
.seh_save_freg d
.seh_save_freg_x d
.seh_save_fregp d
.seh_save_fregp_x d
.seh_set_fp
.seh_add_fp 
.seh_nop
.seh_save_next
.seh_endprologue
.seh_startepilogue
.seh_endepilogue
.seh_trap_frame
.seh_pushframe
.seh_context
.seh_clear_unwound_to_call
/m, 
.16b, 
.2s, 
.2d, 
.4h, 
.4s, 
.8h, 
.8b, 
, mul 
, #0.0
/z, [
.1q, 
.1d, 
/z, 
.16b, #0
.2s, #0
.2d, #0
.4h, #0
.4s, #0
.8h, #0
.8b, #0
.2s, #0.0
.2d, #0.0
.4h, #0.0
.4s, #0.0
.8h, #0.0
.2h, 
.16b, #8
.2s, #32
.4h, #16
.4s, #32
.8h, #16
.8b, #8
, mul vl]
, #32
bfxil
movz
movn
movk
 COMPILER BARRIER
 SPACE 
acquire semantics dropped since destination is zero
tlbi
#%#llx
#%.8f
#%#016llx
ld1r
ld2r
ld3r
ld4r
aarch64-neon-syntax
Choose style of NEON code to emit from AArch64 backend:
Emit generic NEON assembly
apple
Emit Apple-style NEON assembly
.hword
.word
.xword
.weak
:lo12:
:abs_g3:
:abs_g2:
:abs_g2_s:
:abs_g2_nc:
:abs_g1:
:abs_g1_s:
:abs_g1_nc:
:abs_g0:
:abs_g0_s:
:abs_g0_nc:
:prel_g3:
:prel_g2:
:prel_g2_nc:
:prel_g1:
:prel_g1_nc:
:prel_g0:
:prel_g0_nc:
:dtprel_g2:
:dtprel_g1:
:dtprel_g1_nc:
:dtprel_g0:
:dtprel_g0_nc:
:dtprel_hi12:
:dtprel_lo12:
:dtprel_lo12_nc:
:tprel_g2:
:tprel_g1:
:tprel_g1_nc:
:tprel_g0:
:tprel_g0_nc:
:tprel_hi12:
:tprel_lo12:
:tprel_lo12_nc:
:tlsdesc_lo12:
:pg_hi21_nc:
:got:
:got_lo12:
:gottprel:
:gottprel_lo12:
:gottprel_g1:
:gottprel_g0_nc:
:tlsdesc:
:secrel_lo12:
:secrel_hi12:
@AUTH(
,addr
Auth relocation can't reference two symbols
CONTEXTIDREL2
Enable RW operand CONTEXTIDR_EL2
Cortex-A35 ARM processors
Cortex-A53 ARM processors
Cortex-A55 ARM processors
Cortex-A57 ARM processors
a64fx
Fujitsu A64FX processors
Cortex-A65 ARM processors
Cortex-A72 ARM processors
Cortex-A73 ARM processors
Cortex-A75 ARM processors
Cortex-A76 ARM processors
Cortex-A77 ARM processors
Enable AES support
aggressive-fma
Enable Aggressive FMA for floating-point.
alternate-sextload-cvt-f32-pattern
Use alternative pattern for sextload convert to f32
Enable alternative NZCV format for floating point comparisons
Enable v8.4-A Activity Monitors extension
amvs
Enable v8.6-A Activity Monitors Virtualization support
apple-a10
Apple A10
apple-a11
Apple A11
Apple A12
apple-a13
Apple A13
apple-a14
Apple A14/Firestorm
apple-a7
Apple A7 (the CPU formerly known as Cyclone)
apple-a8
Apple A8
apple-a9
Apple A9
arith-bcc-fusion
CPU fuses arithmetic+bcc operations
arith-cbz-fusion
CPU fuses arithmetic + cbz/cbnz operations
balance-fp-ops
balance mix of odd and even D-registers for fp multiply(-accumulate) ops
Enable BFloat16 Extension
Enable Branch Record Buffer Extension
Enable Branch Target Identification
call-saved-x10
Make X10 callee saved.
call-saved-x11
Make X11 callee saved.
call-saved-x12
Make X12 callee saved.
call-saved-x13
Make X13 callee saved.
call-saved-x14
Make X14 callee saved.
call-saved-x15
Make X15 callee saved.
call-saved-x18
Make X18 callee saved.
call-saved-x8
Make X8 callee saved.
call-saved-x9
Make X9 callee saved.
carmel
Nvidia Carmel processors
Enable v8.5 Cache Clean to Point of Deep Persistence
Enable v8.3-A Extend of the CCSIDR number of sets
Enable v8.2 data Cache Clean to Point of Persistence
Enable v8.3-A Floating-point complex number support
cortex-a78
Cortex-A78 ARM processors
cortex-a78c
Cortex-A78C ARM processors
cortex-r82
Cortex-R82 ARM Processors
cortex-x1
Cortex-X1 ARM processors
Enable ARMv8 CRC-32 checksum instructions
Enable cryptographic instructions
custom-cheap-as-move
Use custom handling of cheap instructions
disable-latency-sched-heuristic
Disable latency scheduling heuristic
Enable v8.4-A Data Independent Timing instructions
Enable dot product support
Enable enhanced counter virtualization extension
Enable Embedded Trace Extension
exynos-cheap-as-move
Use Exynos specific handling of cheap instructions
exynosm3
Samsung Exynos-M3 processors
exynosm4
Samsung Exynos-M4 processors
Enable Matrix Multiply FP32 Extension
Enable Matrix Multiply FP64 Extension
falkor
Qualcomm Falkor processors
Enable fine grained virtualization traps extension
Enable v8.4-A Flag Manipulation Instructions
force-32bit-jump-tables
Force jump table entries to be 32-bits wide except at MinSize
Enable ARMv8 FP
Enable FP16 FML instructions
fptoint
Enable FRInt[32|64][Z|X] instructions that round a floating-point number to an integer (in FP format) forcing it to fit into a 32- or 64-bit int
Full FP16
fuse-address
CPU fuses address generation and memory operations
CPU fuses AES crypto operations
fuse-arith-logic
CPU fuses arithmetic and logic operations
fuse-crypto-eor
CPU fuses AES/PMULL and EOR operations
fuse-csel
CPU fuses conditional select operations
fuse-literals
CPU fuses literal generation operations
harden-sls-blr
Harden against straight line speculation across BLR instructions
harden-sls-retbr
Harden against straight line speculation across RET and BR instructions
Enable Armv8.7-A HCRX_EL2 system register
Enable Matrix Multiply Int8 Extension
Enable v8.3-A JavaScript FP conversion instructions
kryo
Qualcomm Kryo processors
Enables ARM v8.1 Limited Ordering Regions extension
Enable Armv8.7-A LD64B/ST64B Accelerator Extension
Enable ARMv8.1 Large System Extension (LSE) atomic instructions
lsl-fast
CPU has a fastpath logical shift of up to 3 places
Enable v8.4-A Memory system Partitioning and Monitoring extension
Enable Memory Tagging Extension
Enable Advanced SIMD instructions
neoversee1
Neoverse E1 ARM processors
neoversen1
Neoverse N1 ARM processors
neoversen2
Neoverse N2 ARM processors
neoversev1
Neoverse V1 ARM processors
no-neg-immediates
Convert immediates and instructions to their negated or complemented equivalent when the immediate does not fit in the encoding.
Enable v8.4-A Nested Virtualization Enchancement
outline-atomics
Enable out of line atomics to support LSE instructions
Enable v8.3-A Pointer Authentication extension
Enables ARM v8.1 Privileged Access-Never extension
Enable v8.2 PAN s1e1R and s1e1W Variants
perfmon
Enable ARMv8 PMUv3 Performance Monitors extension
Enable v8.4-A PMU extension
predictable-select-expensive
Prefer likely predicted branches over selects
Enable v8.5a execution and data prediction invalidation instructions
rand
Enable Random Number generation instructions
Enable ARMv8 Reliability, Availability and Serviceability Extensions
Enable support for RCPC extension
Enable v8.4-A RCPC instructions with Immediate Offsets
Enable ARMv8.1 Rounding Double Multiply Add/Subtract instructions
reserve-x1
Reserve X1, making it unavailable as a GPR
reserve-x10
Reserve X10, making it unavailable as a GPR
reserve-x11
Reserve X11, making it unavailable as a GPR
reserve-x12
Reserve X12, making it unavailable as a GPR
reserve-x13
Reserve X13, making it unavailable as a GPR
reserve-x14
Reserve X14, making it unavailable as a GPR
reserve-x15
Reserve X15, making it unavailable as a GPR
reserve-x18
Reserve X18, making it unavailable as a GPR
reserve-x2
Reserve X2, making it unavailable as a GPR
reserve-x20
Reserve X20, making it unavailable as a GPR
reserve-x21
Reserve X21, making it unavailable as a GPR
reserve-x22
Reserve X22, making it unavailable as a GPR
reserve-x23
Reserve X23, making it unavailable as a GPR
reserve-x24
Reserve X24, making it unavailable as a GPR
reserve-x25
Reserve X25, making it unavailable as a GPR
reserve-x26
Reserve X26, making it unavailable as a GPR
reserve-x27
Reserve X27, making it unavailable as a GPR
reserve-x28
Reserve X28, making it unavailable as a GPR
reserve-x3
Reserve X3, making it unavailable as a GPR
reserve-x30
Reserve X30, making it unavailable as a GPR
reserve-x4
Reserve X4, making it unavailable as a GPR
reserve-x5
Reserve X5, making it unavailable as a GPR
reserve-x6
Reserve X6, making it unavailable as a GPR
reserve-x7
Reserve X7, making it unavailable as a GPR
reserve-x9
Reserve X9, making it unavailable as a GPR
saphira
Qualcomm Saphira processors
Enable v8.5 Speculation Barrier
Enable v8.4-A Secure Exception Level 2 extension
Enable SHA1 and SHA256 support
Enable SHA512 and SHA3 support
slow-misaligned-128store
Misaligned 128 bit stores are slow
slow-paired-128
Paired 128 bit loads and stores are slow
slow-strqro-store
STR of Q register with register offset is slow
Enable SM3 and SM4 support
Enable Statistical Profiling extension
Enable extra register in the Statistical Profiling Extension
specrestrict
Enable architectural speculation restriction
split-paired-128
Paired 128 bit loads should be split, but kept adjacent for fusion
ssbs
Enable Speculative Store Bypass Safe bit
strict-align
Disallow all unaligned memory access
Enable Scalable Vector Extension (SVE) instructions
Enable Scalable Vector Extension 2 (SVE2) instructions
Enable AES SVE2 instructions
Enable bit permutation SVE2 instructions
Enable SHA3 SVE2 instructions
Enable SM4 SVE2 instructions
tagged-globals
Use an instruction sequence for taking the address of a global that allows a memory tag in the upper address bits
thunderx
Cavium ThunderX processors
thunderx2t99
Cavium ThunderX2 processors
thunderx3t110
Marvell ThunderX3 processors
thunderxt81
thunderxt83
thunderxt88
Enable v8.4-A TLB Range and Maintenance Instructions
Enable Transactional Memory Extension
tpidr-el1
Permit use of TPIDR_EL1 for the TLS base
tpidr-el2
Permit use of TPIDR_EL2 for the TLS base
tpidr-el3
Permit use of TPIDR_EL3 for the TLS base
Enable v8.4-A Trace extension
Enable Trace Buffer Extension
tsv110
HiSilicon TS-V110 processors
uaops
Enable v8.2 UAO PState
use-aa
Use alias analysis during codegen
use-experimental-zeroing-pseudos
Hint to the compiler that the MOVPRFX instruction is merged with destructive operations
use-postra-scheduler
Schedule again after register allocation
use-reciprocal-square-root
Use the reciprocal square root approximation
v8.1a
Support ARM v8.1a instructions
v8.2a
Support ARM v8.2a instructions
v8.3a
Support ARM v8.3a instructions
v8.4a
Support ARM v8.4a instructions
v8.5a
Support ARM v8.5a instructions
v8.6a
Support ARM v8.6a instructions
v8.7a
Support ARM v8.7a instructions
Support ARM v8r instructions
Enables ARM v8.1 Virtual Host extension
Enable Armv8.7-A WFET and WFIT instruction
Enable Armv8.7-A limited-TLB-maintenance instruction
Has zero-cycle register moves
Has zero-cycle zeroing instructions
zcz-fp
Has zero-cycle zeroing instructions for FP registers
zcz-fp-workaround
The zero-cycle floating-point zeroing instruction has a bug
zcz-gp
Has zero-cycle zeroing instructions for generic registers
apple-latest
apple-m1
apple-s4
apple-s5
cortex-a34
cortex-a35
cortex-a53
cortex-a55
cortex-a57
cortex-a65
cortex-a65ae
cortex-a72
cortex-a73
cortex-a75
cortex-a76
cortex-a76ae
cortex-a77
cyclone
exynos-m3
exynos-m4
exynos-m5
lightning
neoverse-e1
neoverse-n1
neoverse-n2
neoverse-v1
vortex
InvalidUnit
CyUnitB
CyUnitBR
CyUnitFloatDiv
CyUnitI
CyUnitID
CyUnitIM
CyUnitIS
CyUnitIntDiv
CyUnitLS
CyUnitV
CyUnitVC
CyUnitVD
CyUnitVM
A53UnitALU
A53UnitB
A53UnitDiv
A53UnitFPALU
A53UnitFPMDS
A53UnitLdSt
A53UnitMAC
CortexA55UnitALU
CortexA55UnitB
CortexA55UnitDiv
CortexA55UnitFPALU
CortexA55UnitFPDIV
CortexA55UnitFPMAC
CortexA55UnitLd
CortexA55UnitMAC
CortexA55UnitSt
A57UnitB
A57UnitI
A57UnitL
A57UnitM
A57UnitS
A57UnitV
A57UnitW
A57UnitX
M3PipeF0
M3PipeF1
M3PipeF2
M3UnitA
M3UnitALU
M3UnitB
M3UnitC
M3UnitD
M3UnitFADD
M3UnitFADD0
M3UnitFADD1
M3UnitFADD2
M3UnitFCVT
M3UnitFCVT0
M3UnitFCVT1
M3UnitFDIV
M3UnitFDIV0
M3UnitFDIV1
M3UnitFMAC
M3UnitFMAC0
M3UnitFMAC1
M3UnitFMAC2
M3UnitFSQR
M3UnitFST
M3UnitFST0
M3UnitFST1
M3UnitL
M3UnitNALU
M3UnitNALU0
M3UnitNALU1
M3UnitNALU2
M3UnitNCRY
M3UnitNCRY0
M3UnitNCRY1
M3UnitNMSC
M3UnitNMUL
M3UnitNSHF
M3UnitNSHF0
M3UnitNSHF1
M3UnitNSHF2
M3UnitNSHT
M3UnitNSHT0
M3UnitNSHT1
M3UnitNSHT2
M3UnitS
M4PipeF0
M4PipeF1
M4PipeF2
M4PipeLS
M4UnitA
M4UnitALU
M4UnitB
M4UnitC
M4UnitD
M4UnitE
M4UnitFADD
M4UnitFADD0
M4UnitFADD1
M4UnitFADD2
M4UnitFADDH
M4UnitFCVT
M4UnitFCVT0
M4UnitFCVT1
M4UnitFCVTH
M4UnitFDIV
M4UnitFDIV0
M4UnitFDIV1
M4UnitFDIVH
M4UnitFMAC
M4UnitFMAC0
M4UnitFMAC1
M4UnitFMAC2
M4UnitFMACH
M4UnitFSQR
M4UnitFSQR0
M4UnitFSQR1
M4UnitFSQRH
M4UnitFST
M4UnitFST0
M4UnitFST1
M4UnitL
M4UnitL0
M4UnitL1
M4UnitNALU
M4UnitNALU0
M4UnitNALU1
M4UnitNALU2
M4UnitNALUH
M4UnitNCRY
M4UnitNCRY0
M4UnitNCRY1
M4UnitNHAD
M4UnitNMSC
M4UnitNMUL
M4UnitNMUL0
M4UnitNMUL1
M4UnitNSHF
M4UnitNSHF0
M4UnitNSHF1
M4UnitNSHFH
M4UnitNSHT
M4UnitNSHT0
M4UnitNSHT1
M4UnitNSHT2
M4UnitS
M4UnitS0
M4UnitS1
M5PipeF0
M5PipeF1
M5PipeF2
M5PipeLS
M5UnitA
M5UnitAW
M5UnitAX
M5UnitB
M5UnitC
M5UnitD
M5UnitE
M5UnitF
M5UnitFADD
M5UnitFADD0
M5UnitFADD1
M5UnitFADD2
M5UnitFCVT
M5UnitFCVT0
M5UnitFCVT1
M5UnitFDIV
M5UnitFDIV0
M5UnitFDIV1
M5UnitFMAC
M5UnitFMAC0
M5UnitFMAC1
M5UnitFMAC2
M5UnitFSQR
M5UnitFSQR0
M5UnitFSQR1
M5UnitFST
M5UnitFST0
M5UnitFST1
M5UnitL
M5UnitL0
M5UnitL1
M5UnitNALU
M5UnitNALU0
M5UnitNALU1
M5UnitNALU2
M5UnitNCRY
M5UnitNCRY0
M5UnitNCRY1
M5UnitNDOT
M5UnitNDOT0
M5UnitNDOT1
M5UnitNDOT2
M5UnitNHAD
M5UnitNMSC
M5UnitNMUL
M5UnitNMUL0
M5UnitNMUL1
M5UnitNSHF
M5UnitNSHF0
M5UnitNSHF1
M5UnitNSHT
M5UnitNSHT0
M5UnitNSHT1
M5UnitNSHT2
M5UnitS
M5UnitS0
M5UnitS1
FalkorUnitB
FalkorUnitGTOV
FalkorUnitLD
FalkorUnitSD
FalkorUnitST
FalkorUnitVSD
FalkorUnitVTOG
FalkorUnitVX
FalkorUnitVXVY
FalkorUnitVY
FalkorUnitX
FalkorUnitXY
FalkorUnitXYZ
FalkorUnitXYZB
FalkorUnitY
FalkorUnitZ
FalkorUnitZB
KryoUnitLS
KryoUnitLSA
KryoUnitLSB
KryoUnitX
KryoUnitXA
KryoUnitXB
KryoUnitXY
KryoUnitY
KryoUnitYA
KryoUnitYB
THXT8XUnitALU
THXT8XUnitBr
THXT8XUnitDiv
THXT8XUnitFPALU
THXT8XUnitFPMDS
THXT8XUnitLdSt
THXT8XUnitMAC
THX2T99Any
THX2T99F1
THX2T99F01
THX2T99I1
THX2T99I2
THX2T99I012
THX2T99LS01
THX2T99P0
THX2T99P1
THX2T99P2
THX2T99P3
THX2T99P4
THX2T99P5
THX2T99SD
THX3T110ANY
THX3T110FP23
THX3T110FP0123
THX3T110I1
THX3T110I23
THX3T110I012
THX3T110I123
THX3T110I0123
THX3T110LS
THX3T110P0
THX3T110P1
THX3T110P2
THX3T110P3
THX3T110P4
THX3T110P5
THX3T110P6FP0
THX3T110P7FP1
THX3T110P8FP2
THX3T110P9FP3
THX3T110SD
THX3T110SD0
THX3T110SIMD
TSV110UnitAB
TSV110UnitALU
TSV110UnitALUAB
TSV110UnitF
TSV110UnitFLdSt
TSV110UnitFSU1
TSV110UnitFSU2
TSV110UnitLdSt
TSV110UnitMDU
conditional branch requires assembler-local label. '
' is external.
Invalid relocation on conditional branch!
unknown AArch64 fixup kind!
PC relative absolute relocation!
unsupported relocation of local symbol '
'. Must have non-local symbol earlier in section.
addend too big for relocation
invalid PC relative auth relocation
invalid auth relocation size, must be 8 bytes
invalid auth relocation, can't reference two symbols
too wide addend '
' in auth relocation
ADR/ADRP relocations must be GOT relative
aarch64-mark-bti-property
Add .note.gnu.property with BTI to assembly files
The .note.gnu.property is not emitted because it is already present.
relocation variant 
 unsupported on COFF targets
relocation type 
: Unexpected decode table opcode!
0x%llx
32-bit X86: Pentium-Pro and above
x86-64
64-bit X86: EM64T and AMD64
armeb
ARM (big endian)
Thumb
thumbeb
Thumb (big endian)
arm64
ARM64 (little endian)
AArch64
arm64_32
ARM64 (little endian ILP32)
aarch64
AArch64 (little endian)
aarch64_be
AArch64 (big endian)
aarch64_32
AArch64 (little endian ILP32)
([[:digit:]]+)\.([[:digit:]]+)\.([[:digit:]]+)\.?([[:digit:]]*)\.?([[:digit:]]*)
^APPLE_([[:digit:]]+)_
^APPLE_1_([[:digit:]]+)\.([[:digit:]]+)\.([[:digit:]]+)\.?([[:digit:]]*)\.?([[:digit:]]*)_([[:digit:]]+)$
Invalid bitcode version
' Reader: '
print-summary-global-ids
Print the global id for each value when reading the module summary
Malformed block
Invalid bitcode signature
Invalid bitcode wrapper header
file too small to contain bitcode header
file doesn't start with bitcode header
Unexpected end of file reading %u of %u bits
Unexpected end of file reading %u of %u bytes
can't skip block: already at end of stream
can't skip to bit %zu from %llu
Invalid value
Incompatible epoch: Bitcode '
' vs current: '
branch_weights
Could not find function in stream
Trying to materialize functions before seeing function blocks
Expect SubBlock
Expect function block
 (Producer: '
' Reader: 'LLVM 
APPLE_1_
Insufficient function protos
Invalid function metadata: incoming forward references
Invalid record
Invalid ID
Invalid cast
Explicit gep type does not match pointee type of pointer operand
EXTRACTVAL: Invalid instruction with 0 indices
EXTRACTVAL: Invalid type
EXTRACTVAL: Invalid struct index
EXTRACTVAL: Invalid array index
INSERTVAL: Invalid instruction with 0 indices
INSERTVAL: Invalid type
INSERTVAL: Invalid struct index
INSERTVAL: Invalid array index
Inserted value type doesn't match aggregate type
Invalid type for value
Invalid record: operand number exceeded available operands
Explicit invoke type is not a function type
Callee is not a pointer
Callee is not of pointer to function type
Explicit invoke type does not match pointee type of callee operand
Insufficient operands to call
Explicit call type is not a function type
Callee is not a pointer type
Explicit call type does not match pointee type of callee operand
Personality function mismatch
Old-style alloca with a non-pointer type
alloca of unsized type
Load operand is not a pointer type
load of unsized type
Alignment missing from atomic load
store of unsized type
Alignment missing from atomic store
Cmpxchg operand is not a pointer type
Fast math flags indicator set for call with no FMF
Fast-math-flags specified for call without floating-point scalar or vector return type
Invalid instruction with no BB
Operand bundles found with no consumer
Never resolved value found in function
Invalid function metadata: outgoing forward refs
Invalid shufflevector operands
Invalid constant reference
Invalid constant type
Invalid type for a constant null value
Invalid gep with no operands
Explicit gep operator type does not match pointee type of pointer operand
Invalid value name
Invalid alignment value
Load/Store operand is not a pointer type
Explicit load/store type does not match pointee type of pointer operand
Cannot load/store from pointer
Never resolved function from blockaddress
target triple too late in module
datalayout too late in module
Malformed global initializer set
Invalid multiple blocks
Unknown attribute kind (
Bitwidth for integer type out of range
Invalid type
Invalid function argument type
Invalid TYPE table
Invalid vector length
Invalid TYPE table: Only named structs can be forward referenced
Expected a constant
Alias and aliasee types don't match
Invalid multiple synchronization scope names blocks
Invalid empty synchronization scope names block
Invalid global variable comdat ID
Invalid calling convention ID
Invalid function comdat ID
llvm.linker.options
Linker Options
Invalid hash length 
Invalid Summary Block: record for version expected
Invalid Summary Block: version expected
Invalid summary version 
. Version should be in the range [1-
Alias expects aliasee summary to be parsed
Name attachment that does not follow a combined record
Invalid hash that does not follow a module path
GUID 
) is 
Expected a single module
__DATA,__objc_catlist
__OBJC,__category
llvm.bitcode
Corrupted bitcode
bitcode-reader
NumMDStringLoaded
Number of MDStrings loaded
NumMDNodeTemporary
Number of MDNode::Temporary created
NumMDRecordLoaded
Number of Metadata records loaded
import-full-type-definitions
Import full type definitions for ThinLTO.
disable-ondemand-mds-loading
Force disable the lazy-loading on-demand of metadata when loading bitcode for importing.
Corrupted Metadata block
Invalid metadata: fwd refs into function blocks
Invalid record: metadata strings layout
Invalid record: metadata strings with no strings
Invalid record: metadata strings corrupt offset
Invalid record: metadata strings bad length
Invalid record: metadata strings truncated chars
Invalid metadata attachment: expect fwd ref to MDNode
Invalid metadata attachment
Conflicting METADATA_KIND records
METADATA_NAME not followed by METADATA_NAMED_NODE
Invalid named metadata: expect fwd ref to MDNode
Invalid record: Unsupported version of DISubrange
Alignment value is too large
lazyLoadOneMetadata failed jumping: 
lazyLoadOneMetadata failed advanceSkippingSubblocks: 
Can't lazyload MD, parseOneMetadata: 
Can't lazyload MD: 
Type mismatch in constant table!
 = comdat 
exactmatch
largest
noduplicates
samesize
 = type 
; Materializable
; Function Attrs: 
define 
 addrspace(
 section "
 partition "
 align 
 gc "
 prefix 
 prologue 
 personality 
!<unknown kind #
<empty name> 
!DIExpression(
!DILocation(
line
column
scope
inlinedAt
isImplicitCode
available_externally
dso_local 
hidden 
protected 
dllimport 
dllexport 
fastcc
coldcc
webkit_jscc
anyregcc
preserve_mostcc
preserve_allcc
cxx_fast_tlscc
ghccc
tailcc
cfguard_checkcc
x86_stdcallcc
x86_fastcallcc
x86_thiscallcc
x86_regcallcc
x86_vectorcallcc
intel_ocl_bicc
arm_apcscc
arm_aapcscc
arm_aapcs_vfpcc
aarch64_vector_pcs
aarch64_sve_vector_pcs
msp430_intrcc
avr_intrcc 
avr_signalcc 
ptx_kernel
ptx_device
x86_64_sysvcc
win64cc
spir_func
spir_kernel
swiftcc
swifttailcc
x86_intrcc
hhvmcc
hhvm_ccc
amdgpu_vs
amdgpu_ls
amdgpu_hs
amdgpu_es
amdgpu_gs
amdgpu_ps
amdgpu_cs
amdgpu_kernel
amdgpu_gfx
asm 
sideeffect 
alignstack 
inteldialect 
", "
<badref>
local_unnamed_addr
unnamed_addr
 comdat
<null operand!>
; uselistorder directives
uselistorder
_bb 
, { 
<badref>:
 No predecessors!
 preds = 
source_filename = "
target datalayout = "
target triple = "
module asm "
attributes #
 = { 
distinct 
<temporary!> 
!DIGlobalVariableExpression(
expr
!GenericDINode(
header
operands: {
tag: 
!DISubrange(
lowerBound
upperBound
stride
!DIEnumerator(
isUnsigned
!DIBasicType(
encoding
flags
!DIDerivedType(
baseType
extraData
dwarfAddressSpace
ptrAuthKey
ptrAuthIsAddressDiscriminated
ptrAuthExtraDiscriminator
ptrAuthIsaPointer
ptrAuthAuthenticatesNullValues
!DICompositeType(
elements
runtimeLang
vtableHolder
templateParams
identifier
dataLocation
allocated
rank
!DISubroutineType(
types
!DIFile(
checksumkind: 
checksum
!DICompileUnit(
language
producer
isOptimized
runtimeVersion
splitDebugFilename
emissionKind
enums
retainedTypes
globals
imports
macros
dwoId
splitDebugInlining
debugInfoForProfiling
nameTableKind
rangesBaseAddress
sysroot
!DISubprogram(
linkageName
scopeLine
containingType
virtualIndex
thisAdjustment
spFlags
unit
declaration
retainedNodes
thrownTypes
!DILexicalBlock(
!DILexicalBlockFile(
!DINamespace(
exportSymbols
!DIModule(
configMacros
includePath
apinotes
isDecl
!DITemplateTypeParameter(
defaulted
!DITemplateValueParameter(
!DIGlobalVariable(
isLocal
isDefinition
!DILocalVariable(
!DILabel(
!DIObjCProperty(
setter
getter
attributes
!DIImportedEntity(
entity
!DIMacro(
type: 
!DIMacroFile(
nodes
!DICommonBlock(
!DIStringType(
stringLength
stringLengthExpression
!DIGenericSubrange(
 = !{
void
bfloat
x86_fp80
fp128
ppc_fp128
metadata
x86_mmx
x86_amx
token
%"type 
opaque
<badref> = 
musttail 
tail 
notail 
 atomic
 weak
 volatile
    
          cleanup
          catch 
          filter 
 within 
] unwind 
to caller
 void
 unwind 
, ...
          to 
inalloca 
swifterror 
, align 
, addrspace(
 fast
 reassoc
 nnan
 ninf
 nsz
 arcp
 contract
 afn
 nuw
 nsw
 exact
 inbounds
 syncscope("
not_atomic
unordered
monotonic
consume
acq_rel
seq_cst
 x i32> 
zeroinitializer
i32 
 ; (
external 
addrspace(
externally_initialized 
constant 
global 
, section "
, partition "
thread_local 
thread_local(localdynamic) 
thread_local(initialexec) 
thread_local(localexec) 
alias 
ifunc 
 <<NULL ALIASEE>>
blockaddress(
dso_local_equivalent 
inrange 
<placeholder or erroneous Constant>
alwaysinline
argmemonly
builtin
cold
convergent
immarg
inalloca
inreg
inaccessiblememonly
inaccessiblemem_or_argmemonly
inlinehint
jumptable
minsize
naked
nest
nobuiltin
nocallback
nocapture
nocf_check
noduplicate
nofree
noimplicitfloat
noinline
nomerge
norecurse
noredzone
noreturn
nosync
nounwind
nonlazybind
null_pointer_is_valid
optforfuzzing
optsize
optnone
readnone
readonly
returned
returns_twice
signext
safestack
sanitize_address
sanitize_hwaddress
sanitize_memtag
sanitize_memory
sanitize_thread
shadowcallstack
speculatable
speculative_load_hardening
sspreq
sspstrong
strictfp
swiftasync
swifterror
swiftself
uwtable
willreturn
writeonly
zeroext
byref
byval
mustprogress
sret
allocsize
alignstack
less-precise-fpmad
no-inline-line-tables
no-jump-tables
profile-sample-accurate
use-sample-profile
probe-stack
darwin-stkchk-strong-link
stack-probe-size
llvm.cmdline
llvm.embedded.module
objc_retainAutoreleaseReturnValue
cast
sse2.storel.dq
sse2.sqrt.sd
avx512.kand.w
avx512.kandn.w
avx512.kor.w
avx512.kxor.w
avx512.kxnor.w
avx512.knot.w
avx512.kortestz.w
avx512.kortestc.w
sse.add.ss
sse2.add.sd
sse.sub.ss
sse2.sub.sd
sse.mul.ss
sse2.mul.sd
sse.div.ss
sse2.div.sd
.add.
.sub.
.mul.
sse41.pmaxsb
avx2.pmulu.dq
avx512.pmulu.dq.512
sse41.pmuldq
avx2.pmul.dq
avx512.pmul.dq.512
sse.cvtsi2ss
sse2.cvtsi2sd
sse.cvtsi642ss
sse2.cvtsi642sd
avx512.cvtusi2sd
sse2.cvtss2sd
avx.cvtdq2.pd.256
avx512.mask.cvtqq2ps.256
avx512.mask.cvtuqq2ps.256
sse2.cvtps2pd
avx.cvt.ps2.pd.256
avx512.mask.cvtps2pd.128
cvtu
cvtps2pd
cvtph2ps
pmovsx
sse2.psll.dq.bs
avx512.psll.dq.512
sse2.psrl.dq.bs
avx512.psrl.dq.512
sse41.pblendw
addcarry.u32
subborrow.u32
abs.ll
abs.cond
atomic.load.add.f32.p
atomic.load.add.f64.p
max.i
max.ll
max.ui
max.ull
max.cond
min.i
min.ll
min.ui
min.ull
min.cond
clz.ll
ctlz
ctlz.trunc
popc.ll
ctpop
ctpop.trunc
clang.arc.use
objc_autorelease
objc_autoreleasePoolPop
objc_autoreleasePoolPush
objc_autoreleaseReturnValue
objc_copyWeak
objc_destroyWeak
objc_initWeak
objc_loadWeak
objc_loadWeakRetained
objc_moveWeak
objc_release
objc_retain
objc_retainAutorelease
objc_retainAutoreleasedReturnValue
objc_retainBlock
objc_storeStrong
objc_storeWeak
objc_unsafeClaimAutoreleasedReturnValue
objc_retainedObject
objc_unretainedObject
objc_unretainedPointer
objc_retain_autorelease
objc_sync_enter
objc_sync_exit
objc_arc_annotation_topdown_bbstart
objc_arc_annotation_topdown_bbend
objc_arc_annotation_bottomup_bbstart
objc_arc_annotation_bottomup_bbend
Objective-C Class Properties
Objective-C Image Info Section
Swift ABI Version
Swift Major Version
Swift Minor Version
(e-m:[a-z](-p:32:32)?)(-[if]64:.*$)
no-frame-pointer-elim
no-frame-pointer-elim-non-leaf
null-pointer-is-valid
llvm.ctlz.
^arm\.neon\.vld([1234]|[234]lane)\.v[a-z0-9]*$
.p0i8
^arm\.neon\.vst([1234]|[234]lane)\.v[a-z0-9]*$
lane
arm.thread.pointer
arm.neon.bfdot.v2f32.v8i8
arm.neon.bfdot.v4f32.v16i8
aarch64.neon.bfdot.v2f32.v8i8
aarch64.neon.bfdot.v4f32.v16i8
^experimental.vector.reduce.([a-z]+)\.[a-z][0-9]+
smax
smin
^experimental.vector.reduce.v2.([a-z]+)\.[fi][0-9]+
brev32
brev64
.old
sse41.dppd
sse41.mpsadbw
avx2.mpsadbw
avx512.mask.cmp.pd.128
avx512.mask.cvtpd2dq.256
avx512.mask.cvttpd2dq.256
avx2.movntdqa
avx512.movntdqa
xop.vpcmov.256
extract
palignr
vpmovm2
max.p
min.p
pmul.hr.sw.
pmulhu.w.
pmaddw.d.
pmaddubs.w.
packsswb.
packssdw.
packuswb.
packusdw.
vpermilvar.
cvtpd2dq.256
cvtpd2ps.256
cvttpd2dq.256
cvttps2dq.128
cvttps2dq.256
dbpsadbw.
pmultishift.qb.
conflict.
pavg.
clang.arc.retainAutoreleasedReturnValueMarker
llvm.vectorizer.unroll
llvm.loop.interleave.count
llvm.loop.vectorize.
loop_header_weight
full-set
empty-set
use-dbg-addr
Use llvm.dbg.addr for all local variables
-m:o
-m:x
-m:w
-m:a
-m:e
Address space 0 can never be non-integral
Invalid address space, must be a 24bit integer
Missing size specification for pointer in datalayout string
Invalid pointer size of 0 bytes
Missing alignment specification for pointer in datalayout string
Pointer ABI alignment must be a power of 2
Pointer preferred alignment must be a power of 2
Invalid index size of 0 bytes
Sized aggregate specification in datalayout string
Missing alignment specification in datalayout string
ABI alignment specification must be >0 for non-aggregate types
Invalid ABI alignment, must be a 16bit integer
Invalid ABI alignment, must be a power of 2
Invalid preferred alignment, must be a 16bit integer
Invalid preferred alignment, must be a power of 2
Zero width native integer type in datalayout string
Alignment is neither 0 nor a power of 2
Unknown function pointer alignment type in datalayout string
Unexpected trailing characters after mangling specifier in datalayout string
Expected mangling specifier in datalayout string
Unknown mangling specifier in datalayout string
Unknown mangling in datalayout string
Unknown specifier in datalayout string
Invalid bit width, must be a 24bit integer
Preferred alignment cannot be less than the ABI alignment
Trailing separator in datalayout string
Expected token before separator in datalayout string
Invalid address space, must be a 24-bit integer
not a number, or does not fit in an unsigned int
number of bits must be a byte width multiple
heapallocsite
llvm.gcov
llvm.dbg.addr
llvm.dbg.declare
llvm.dbg.label
llvm.dbg.value
Debug Info Version
DIFlagZero
DIFlagPrivate
DIFlagProtected
DIFlagPublic
DIFlagFwdDecl
DIFlagAppleBlock
DIFlagReservedBit4
DIFlagVirtual
DIFlagArtificial
DIFlagExplicit
DIFlagPrototyped
DIFlagObjcClassComplete
DIFlagObjectPointer
DIFlagVector
DIFlagStaticMember
DIFlagLValueReference
DIFlagRValueReference
DIFlagExportSymbols
DIFlagSingleInheritance
DIFlagMultipleInheritance
DIFlagVirtualInheritance
DIFlagIntroducedVirtual
DIFlagBitField
DIFlagNoReturn
DIFlagTypePassByValue
DIFlagTypePassByReference
DIFlagEnumClass
DIFlagThunk
DIFlagNonTrivial
DIFlagBigEndian
DIFlagLittleEndian
DIFlagAllCallsDescribed
DIFlagIndirectVirtualBase
CSK_MD5
CSK_SHA1
CSK_SHA256
NoDebug
FullDebug
LineTablesOnly
DebugDirectivesOnly
Default
None
DISPFlagZero
DISPFlagVirtual
DISPFlagPureVirtual
DISPFlagLocalToUnit
DISPFlagDefinition
DISPFlagOptimized
DISPFlagPure
DISPFlagElemental
DISPFlagRecursive
DISPFlagMainSubprogram
DISPFlagDeleted
DISPFlagObjCDirect
 @[ 
pass-remarks
pattern
Enable optimization remarks from passes whose name match the given regular expression
pass-remarks-missed
Enable missed optimization remarks from passes whose name match the given regular expression
pass-remarks-analysis
Enable optimization analysis remarks from passes whose name match the given regular expression
Invalid regular expression '
' in -pass-remarks: 
srcloc
 at line 
 limit
 of 
 exceeded (
) in 
ignoring debug info with an invalid version (
ignoring invalid debug info in 
<UNKNOWN LOCATION>
 (hotness: 
: in function 
Instruction selection used fallback path for 
vscale x 
verify-dom-info
Verify dominator info (time consuming)
=============================--------------------------------
Inorder Dominator Tree: 
DFSNumbers invalid: 
 slow queries.
Roots: 
Inorder PostDominator Tree: 
Dominator Tree Construction
 <<exit node>>
Post
DominatorTree is different than a freshly computed one!
Current:
Freshly computed tree:
Tree has no parent but has roots!
Tree doesn't have a root!
Tree's root is not its parent's entry node!
Tree has different roots than freshly computed ones!
PDT roots: 
Computed roots: 
nullptr
DomTree node 
 not found by DFS walk!
CFG node 
 not found in the DomTree!
Node without an IDom 
 has a nonzero level 
Node 
 has level 
 while its IDom 
DFSIn number for the tree root is not:
Tree leaf should have DFSOut = DFSIn + 1:
Incorrect DFS numbers for:
Parent 
Child 
Second child 
All children: 
Child 
 reachable after its parent 
 is removed!
 not reachable when its sibling 
round.dynamic
round.tonearest
round.tonearestaway
round.downward
round.upward
round.towardzero
fpexcept.ignore
fpexcept.maytrap
fpexcept.strict
not_intrinsic
llvm.abs
llvm.addressofreturnaddress
llvm.adjust.trampoline
llvm.annotation
llvm.assume
llvm.bitreverse
llvm.bswap
llvm.call.preallocated.arg
llvm.call.preallocated.setup
llvm.call.preallocated.teardown
llvm.canonicalize
llvm.ceil
llvm.clear_cache
llvm.codeview.annotation
llvm.convert.from.fp16
llvm.convert.to.fp16
llvm.copysign
llvm.coro.alloc
llvm.coro.alloca.alloc
llvm.coro.alloca.free
llvm.coro.alloca.get
llvm.coro.async.context.alloc
llvm.coro.async.context.dealloc
llvm.coro.async.resume
llvm.coro.async.size.replace
llvm.coro.begin
llvm.coro.destroy
llvm.coro.done
llvm.coro.end
llvm.coro.end.async
llvm.coro.frame
llvm.coro.free
llvm.coro.id
llvm.coro.id.async
llvm.coro.id.retcon
llvm.coro.id.retcon.once
llvm.coro.noop
llvm.coro.param
llvm.coro.prepare.async
llvm.coro.prepare.retcon
llvm.coro.promise
llvm.coro.resume
llvm.coro.save
llvm.coro.size
llvm.coro.subfn.addr
llvm.coro.suspend
llvm.coro.suspend.async
llvm.coro.suspend.retcon
llvm.cos
llvm.ctlz
llvm.ctpop
llvm.cttz
llvm.debugtrap
llvm.donothing
llvm.eh.dwarf.cfa
llvm.eh.exceptioncode
llvm.eh.exceptionpointer
llvm.eh.recoverfp
llvm.eh.return.i32
llvm.eh.return.i64
llvm.eh.sjlj.callsite
llvm.eh.sjlj.functioncontext
llvm.eh.sjlj.longjmp
llvm.eh.sjlj.lsda
llvm.eh.sjlj.setjmp
llvm.eh.sjlj.setup.dispatch
llvm.eh.typeid.for
llvm.eh.unwind.init
llvm.exp
llvm.exp2
llvm.expect
llvm.expect.with.probability
llvm.experimental.constrained.ceil
llvm.experimental.constrained.cos
llvm.experimental.constrained.exp
llvm.experimental.constrained.exp2
llvm.experimental.constrained.fadd
llvm.experimental.constrained.fcmp
llvm.experimental.constrained.fcmps
llvm.experimental.constrained.fdiv
llvm.experimental.constrained.floor
llvm.experimental.constrained.fma
llvm.experimental.constrained.fmul
llvm.experimental.constrained.fmuladd
llvm.experimental.constrained.fpext
llvm.experimental.constrained.fptosi
llvm.experimental.constrained.fptoui
llvm.experimental.constrained.fptrunc
llvm.experimental.constrained.frem
llvm.experimental.constrained.fsub
llvm.experimental.constrained.llrint
llvm.experimental.constrained.llround
llvm.experimental.constrained.log
llvm.experimental.constrained.log10
llvm.experimental.constrained.log2
llvm.experimental.constrained.lrint
llvm.experimental.constrained.lround
llvm.experimental.constrained.maximum
llvm.experimental.constrained.maxnum
llvm.experimental.constrained.minimum
llvm.experimental.constrained.minnum
llvm.experimental.constrained.nearbyint
llvm.experimental.constrained.pow
llvm.experimental.constrained.powi
llvm.experimental.constrained.rint
llvm.experimental.constrained.round
llvm.experimental.constrained.roundeven
llvm.experimental.constrained.sin
llvm.experimental.constrained.sitofp
llvm.experimental.constrained.sqrt
llvm.experimental.constrained.trunc
llvm.experimental.constrained.uitofp
llvm.experimental.deoptimize
llvm.experimental.gc.relocate
llvm.experimental.gc.result
llvm.experimental.gc.statepoint
llvm.experimental.guard
llvm.experimental.patchpoint.i64
llvm.experimental.patchpoint.void
llvm.experimental.stackmap
llvm.experimental.vector.extract
llvm.experimental.vector.insert
llvm.experimental.widenable.condition
llvm.fabs
llvm.floor
llvm.flt.rounds
llvm.fma
llvm.fmuladd
llvm.fptosi.sat
llvm.fptoui.sat
llvm.frameaddress
llvm.fshl
llvm.fshr
llvm.gcread
llvm.gcroot
llvm.gcwrite
llvm.get.active.lane.mask
llvm.get.dynamic.area.offset
llvm.hwasan.check.memaccess
llvm.hwasan.check.memaccess.shortgranules
llvm.icall.branch.funnel
llvm.instrprof.increment
llvm.instrprof.increment.step
llvm.instrprof.value.profile
llvm.invariant.end
llvm.invariant.start
llvm.is.constant
llvm.launder.invariant.group
llvm.lifetime.end
llvm.lifetime.start
llvm.llrint
llvm.llround
llvm.load.relative
llvm.localaddress
llvm.localescape
llvm.localrecover
llvm.log
llvm.log10
llvm.log2
llvm.loop.decrement
llvm.loop.decrement.reg
llvm.lrint
llvm.lround
llvm.masked.compressstore
llvm.masked.expandload
llvm.masked.gather
llvm.masked.load
llvm.masked.scatter
llvm.masked.store
llvm.matrix.column.major.load
llvm.matrix.column.major.store
llvm.matrix.multiply
llvm.matrix.transpose
llvm.maximum
llvm.maxnum
llvm.memcpy
llvm.memcpy.element.unordered.atomic
llvm.memcpy.inline
llvm.memmove
llvm.memmove.element.unordered.atomic
llvm.memset
llvm.memset.element.unordered.atomic
llvm.minimum
llvm.minnum
llvm.mssa.exit.read
llvm.nearbyint
llvm.objc.arc.annotation.bottomup.bbend
llvm.objc.arc.annotation.bottomup.bbstart
llvm.objc.arc.annotation.topdown.bbend
llvm.objc.arc.annotation.topdown.bbstart
llvm.objc.autoreleasePoolPop
llvm.objc.retain.autorelease
llvm.objc.retainAutorelease
llvm.objc.retainAutoreleaseReturnValue
llvm.objc.storeStrong
llvm.objc.sync.enter
llvm.objc.sync.exit
llvm.objectsize
llvm.pcmarker
llvm.pow
llvm.powi
llvm.prefetch
llvm.preserve.array.access.index
llvm.preserve.struct.access.index
llvm.preserve.union.access.index
llvm.pseudoprobe
llvm.ptr.annotation
llvm.ptrauth.auth
llvm.ptrauth.blend
llvm.ptrauth.resign
llvm.ptrauth.sign
llvm.ptrauth.sign.generic
llvm.ptrauth.strip
llvm.ptrmask
llvm.read_register
llvm.read_volatile_register
llvm.readcyclecounter
llvm.returnaddress
llvm.rint
llvm.round
llvm.roundeven
llvm.sadd.sat
llvm.sadd.with.overflow
llvm.sdiv.fix
llvm.sdiv.fix.sat
llvm.set.loop.iterations
llvm.sideeffect
llvm.sin
llvm.smax
llvm.smin
llvm.smul.fix
llvm.smul.fix.sat
llvm.smul.with.overflow
llvm.sponentry
llvm.sqrt
llvm.ssa.copy
llvm.sshl.sat
llvm.ssub.sat
llvm.ssub.with.overflow
llvm.stackguard
llvm.stackprotector
llvm.stackrestore
llvm.stacksave
llvm.start.loop.iterations
llvm.strip.invariant.group
llvm.swift.async.context.addr
llvm.test.set.loop.iterations
llvm.thread.pointer
llvm.trap
llvm.trunc
llvm.type.checked.load
llvm.type.test
llvm.uadd.sat
llvm.uadd.with.overflow
llvm.ubsantrap
llvm.udiv.fix
llvm.udiv.fix.sat
llvm.umax
llvm.umin
llvm.umul.fix
llvm.umul.fix.sat
llvm.umul.with.overflow
llvm.ushl.sat
llvm.usub.sat
llvm.usub.with.overflow
llvm.va_copy
llvm.va_end
llvm.va_start
llvm.var.annotation
llvm.vector.reduce.add
llvm.vector.reduce.and
llvm.vector.reduce.fadd
llvm.vector.reduce.fmax
llvm.vector.reduce.fmin
llvm.vector.reduce.fmul
llvm.vector.reduce.mul
llvm.vector.reduce.or
llvm.vector.reduce.smax
llvm.vector.reduce.smin
llvm.vector.reduce.umax
llvm.vector.reduce.umin
llvm.vector.reduce.xor
llvm.vp.add
llvm.vp.and
llvm.vp.ashr
llvm.vp.lshr
llvm.vp.mul
llvm.vp.or
llvm.vp.sdiv
llvm.vp.shl
llvm.vp.srem
llvm.vp.sub
llvm.vp.udiv
llvm.vp.urem
llvm.vp.xor
llvm.vscale
llvm.write_register
llvm.xray.customevent
llvm.xray.typedevent
llvm.aarch64.addg
llvm.aarch64.clrex
llvm.aarch64.cls
llvm.aarch64.cls64
llvm.aarch64.crc32b
llvm.aarch64.crc32cb
llvm.aarch64.crc32ch
llvm.aarch64.crc32cw
llvm.aarch64.crc32cx
llvm.aarch64.crc32h
llvm.aarch64.crc32w
llvm.aarch64.crc32x
llvm.aarch64.crypto.aesd
llvm.aarch64.crypto.aese
llvm.aarch64.crypto.aesimc
llvm.aarch64.crypto.aesmc
llvm.aarch64.crypto.sha1c
llvm.aarch64.crypto.sha1h
llvm.aarch64.crypto.sha1m
llvm.aarch64.crypto.sha1p
llvm.aarch64.crypto.sha1su0
llvm.aarch64.crypto.sha1su1
llvm.aarch64.crypto.sha256h
llvm.aarch64.crypto.sha256h2
llvm.aarch64.crypto.sha256su0
llvm.aarch64.crypto.sha256su1
llvm.aarch64.dmb
llvm.aarch64.dsb
llvm.aarch64.fjcvtzs
llvm.aarch64.get.fpcr
llvm.aarch64.gmi
llvm.aarch64.hint
llvm.aarch64.irg
llvm.aarch64.irg.sp
llvm.aarch64.isb
llvm.aarch64.ldaxp
llvm.aarch64.ldaxr
llvm.aarch64.ldg
llvm.aarch64.ldxp
llvm.aarch64.ldxr
llvm.aarch64.neon.abs
llvm.aarch64.neon.addhn
llvm.aarch64.neon.addp
llvm.aarch64.neon.bfcvt
llvm.aarch64.neon.bfcvtn
llvm.aarch64.neon.bfcvtn2
llvm.aarch64.neon.bfdot
llvm.aarch64.neon.bfmlalb
llvm.aarch64.neon.bfmlalt
llvm.aarch64.neon.bfmmla
llvm.aarch64.neon.cls
llvm.aarch64.neon.fabd
llvm.aarch64.neon.facge
llvm.aarch64.neon.facgt
llvm.aarch64.neon.faddp
llvm.aarch64.neon.faddv
llvm.aarch64.neon.fcvtas
llvm.aarch64.neon.fcvtau
llvm.aarch64.neon.fcvtms
llvm.aarch64.neon.fcvtmu
llvm.aarch64.neon.fcvtns
llvm.aarch64.neon.fcvtnu
llvm.aarch64.neon.fcvtps
llvm.aarch64.neon.fcvtpu
llvm.aarch64.neon.fcvtxn
llvm.aarch64.neon.fcvtzs
llvm.aarch64.neon.fcvtzu
llvm.aarch64.neon.fmax
llvm.aarch64.neon.fmaxnm
llvm.aarch64.neon.fmaxnmp
llvm.aarch64.neon.fmaxnmv
llvm.aarch64.neon.fmaxp
llvm.aarch64.neon.fmaxv
llvm.aarch64.neon.fmin
llvm.aarch64.neon.fminnm
llvm.aarch64.neon.fminnmp
llvm.aarch64.neon.fminnmv
llvm.aarch64.neon.fminp
llvm.aarch64.neon.fminv
llvm.aarch64.neon.fmlal
llvm.aarch64.neon.fmlal2
llvm.aarch64.neon.fmlsl
llvm.aarch64.neon.fmlsl2
llvm.aarch64.neon.fmulx
llvm.aarch64.neon.frecpe
llvm.aarch64.neon.frecps
llvm.aarch64.neon.frecpx
llvm.aarch64.neon.frintn
llvm.aarch64.neon.frsqrte
llvm.aarch64.neon.frsqrts
llvm.aarch64.neon.ld1x2
llvm.aarch64.neon.ld1x3
llvm.aarch64.neon.ld1x4
llvm.aarch64.neon.ld2
llvm.aarch64.neon.ld2lane
llvm.aarch64.neon.ld2r
llvm.aarch64.neon.ld3
llvm.aarch64.neon.ld3lane
llvm.aarch64.neon.ld3r
llvm.aarch64.neon.ld4
llvm.aarch64.neon.ld4lane
llvm.aarch64.neon.ld4r
llvm.aarch64.neon.pmul
llvm.aarch64.neon.pmull
llvm.aarch64.neon.pmull64
llvm.aarch64.neon.raddhn
llvm.aarch64.neon.rbit
llvm.aarch64.neon.rshrn
llvm.aarch64.neon.rsubhn
llvm.aarch64.neon.sabd
llvm.aarch64.neon.saddlp
llvm.aarch64.neon.saddlv
llvm.aarch64.neon.saddv
llvm.aarch64.neon.scalar.sqxtn
llvm.aarch64.neon.scalar.sqxtun
llvm.aarch64.neon.scalar.uqxtn
llvm.aarch64.neon.sdot
llvm.aarch64.neon.shadd
llvm.aarch64.neon.shll
llvm.aarch64.neon.shsub
llvm.aarch64.neon.smax
llvm.aarch64.neon.smaxp
llvm.aarch64.neon.smaxv
llvm.aarch64.neon.smin
llvm.aarch64.neon.sminp
llvm.aarch64.neon.sminv
llvm.aarch64.neon.smmla
llvm.aarch64.neon.smull
llvm.aarch64.neon.sqabs
llvm.aarch64.neon.sqadd
llvm.aarch64.neon.sqdmulh
llvm.aarch64.neon.sqdmulh.lane
llvm.aarch64.neon.sqdmulh.laneq
llvm.aarch64.neon.sqdmull
llvm.aarch64.neon.sqdmulls.scalar
llvm.aarch64.neon.sqneg
llvm.aarch64.neon.sqrdmulh
llvm.aarch64.neon.sqrdmulh.lane
llvm.aarch64.neon.sqrdmulh.laneq
llvm.aarch64.neon.sqrshl
llvm.aarch64.neon.sqrshrn
llvm.aarch64.neon.sqrshrun
llvm.aarch64.neon.sqshl
llvm.aarch64.neon.sqshlu
llvm.aarch64.neon.sqshrn
llvm.aarch64.neon.sqshrun
llvm.aarch64.neon.sqsub
llvm.aarch64.neon.sqxtn
llvm.aarch64.neon.sqxtun
llvm.aarch64.neon.srhadd
llvm.aarch64.neon.srshl
llvm.aarch64.neon.sshl
llvm.aarch64.neon.sshll
llvm.aarch64.neon.st1x2
llvm.aarch64.neon.st1x3
llvm.aarch64.neon.st1x4
llvm.aarch64.neon.st2
llvm.aarch64.neon.st2lane
llvm.aarch64.neon.st3
llvm.aarch64.neon.st3lane
llvm.aarch64.neon.st4
llvm.aarch64.neon.st4lane
llvm.aarch64.neon.subhn
llvm.aarch64.neon.suqadd
llvm.aarch64.neon.tbl1
llvm.aarch64.neon.tbl2
llvm.aarch64.neon.tbl3
llvm.aarch64.neon.tbl4
llvm.aarch64.neon.tbx1
llvm.aarch64.neon.tbx2
llvm.aarch64.neon.tbx3
llvm.aarch64.neon.tbx4
llvm.aarch64.neon.uabd
llvm.aarch64.neon.uaddlp
llvm.aarch64.neon.uaddlv
llvm.aarch64.neon.uaddv
llvm.aarch64.neon.udot
llvm.aarch64.neon.uhadd
llvm.aarch64.neon.uhsub
llvm.aarch64.neon.umax
llvm.aarch64.neon.umaxp
llvm.aarch64.neon.umaxv
llvm.aarch64.neon.umin
llvm.aarch64.neon.uminp
llvm.aarch64.neon.uminv
llvm.aarch64.neon.ummla
llvm.aarch64.neon.umull
llvm.aarch64.neon.uqadd
llvm.aarch64.neon.uqrshl
llvm.aarch64.neon.uqrshrn
llvm.aarch64.neon.uqshl
llvm.aarch64.neon.uqshrn
llvm.aarch64.neon.uqsub
llvm.aarch64.neon.uqxtn
llvm.aarch64.neon.urecpe
llvm.aarch64.neon.urhadd
llvm.aarch64.neon.urshl
llvm.aarch64.neon.ursqrte
llvm.aarch64.neon.usdot
llvm.aarch64.neon.ushl
llvm.aarch64.neon.ushll
llvm.aarch64.neon.usmmla
llvm.aarch64.neon.usqadd
llvm.aarch64.neon.vcadd.rot270
llvm.aarch64.neon.vcadd.rot90
llvm.aarch64.neon.vcmla.rot0
llvm.aarch64.neon.vcmla.rot180
llvm.aarch64.neon.vcmla.rot270
llvm.aarch64.neon.vcmla.rot90
llvm.aarch64.neon.vcopy.lane
llvm.aarch64.neon.vcvtfp2fxs
llvm.aarch64.neon.vcvtfp2fxu
llvm.aarch64.neon.vcvtfp2hf
llvm.aarch64.neon.vcvtfxs2fp
llvm.aarch64.neon.vcvtfxu2fp
llvm.aarch64.neon.vcvthf2fp
llvm.aarch64.neon.vsli
llvm.aarch64.neon.vsri
llvm.aarch64.sdiv
llvm.aarch64.settag
llvm.aarch64.settag.zero
llvm.aarch64.sisd.fabd
llvm.aarch64.sisd.fcvtxn
llvm.aarch64.space
llvm.aarch64.stg
llvm.aarch64.stgp
llvm.aarch64.stlxp
llvm.aarch64.stlxr
llvm.aarch64.stxp
llvm.aarch64.stxr
llvm.aarch64.subp
llvm.aarch64.sve.abs
llvm.aarch64.sve.adclb
llvm.aarch64.sve.adclt
llvm.aarch64.sve.add
llvm.aarch64.sve.addhnb
llvm.aarch64.sve.addhnt
llvm.aarch64.sve.addp
llvm.aarch64.sve.adrb
llvm.aarch64.sve.adrd
llvm.aarch64.sve.adrh
llvm.aarch64.sve.adrw
llvm.aarch64.sve.aesd
llvm.aarch64.sve.aese
llvm.aarch64.sve.aesimc
llvm.aarch64.sve.aesmc
llvm.aarch64.sve.and
llvm.aarch64.sve.and.z
llvm.aarch64.sve.andv
llvm.aarch64.sve.asr
llvm.aarch64.sve.asr.wide
llvm.aarch64.sve.asrd
llvm.aarch64.sve.bcax
llvm.aarch64.sve.bdep.x
llvm.aarch64.sve.bext.x
llvm.aarch64.sve.bfdot
llvm.aarch64.sve.bfdot.lane
llvm.aarch64.sve.bfmlalb
llvm.aarch64.sve.bfmlalb.lane
llvm.aarch64.sve.bfmlalt
llvm.aarch64.sve.bfmlalt.lane
llvm.aarch64.sve.bfmmla
llvm.aarch64.sve.bgrp.x
llvm.aarch64.sve.bic
llvm.aarch64.sve.bic.z
llvm.aarch64.sve.brka
llvm.aarch64.sve.brka.z
llvm.aarch64.sve.brkb
llvm.aarch64.sve.brkb.z
llvm.aarch64.sve.brkn.z
llvm.aarch64.sve.brkpa.z
llvm.aarch64.sve.brkpb.z
llvm.aarch64.sve.bsl
llvm.aarch64.sve.bsl1n
llvm.aarch64.sve.bsl2n
llvm.aarch64.sve.cadd.x
llvm.aarch64.sve.cdot
llvm.aarch64.sve.cdot.lane
llvm.aarch64.sve.clasta
llvm.aarch64.sve.clasta.n
llvm.aarch64.sve.clastb
llvm.aarch64.sve.clastb.n
llvm.aarch64.sve.cls
llvm.aarch64.sve.clz
llvm.aarch64.sve.cmla.lane.x
llvm.aarch64.sve.cmla.x
llvm.aarch64.sve.cmpeq
llvm.aarch64.sve.cmpeq.wide
llvm.aarch64.sve.cmpge
llvm.aarch64.sve.cmpge.wide
llvm.aarch64.sve.cmpgt
llvm.aarch64.sve.cmpgt.wide
llvm.aarch64.sve.cmphi
llvm.aarch64.sve.cmphi.wide
llvm.aarch64.sve.cmphs
llvm.aarch64.sve.cmphs.wide
llvm.aarch64.sve.cmple.wide
llvm.aarch64.sve.cmplo.wide
llvm.aarch64.sve.cmpls.wide
llvm.aarch64.sve.cmplt.wide
llvm.aarch64.sve.cmpne
llvm.aarch64.sve.cmpne.wide
llvm.aarch64.sve.cnot
llvm.aarch64.sve.cnt
llvm.aarch64.sve.cntb
llvm.aarch64.sve.cntd
llvm.aarch64.sve.cnth
llvm.aarch64.sve.cntp
llvm.aarch64.sve.cntw
llvm.aarch64.sve.compact
llvm.aarch64.sve.convert.from.svbool
llvm.aarch64.sve.convert.to.svbool
llvm.aarch64.sve.dup
llvm.aarch64.sve.dup.x
llvm.aarch64.sve.dupq.lane
llvm.aarch64.sve.eor
llvm.aarch64.sve.eor.z
llvm.aarch64.sve.eor3
llvm.aarch64.sve.eorbt
llvm.aarch64.sve.eortb
llvm.aarch64.sve.eorv
llvm.aarch64.sve.ext
llvm.aarch64.sve.fabd
llvm.aarch64.sve.fabs
llvm.aarch64.sve.facge
llvm.aarch64.sve.facgt
llvm.aarch64.sve.fadd
llvm.aarch64.sve.fadda
llvm.aarch64.sve.faddp
llvm.aarch64.sve.faddv
llvm.aarch64.sve.fcadd
llvm.aarch64.sve.fcmla
llvm.aarch64.sve.fcmla.lane
llvm.aarch64.sve.fcmpeq
llvm.aarch64.sve.fcmpge
llvm.aarch64.sve.fcmpgt
llvm.aarch64.sve.fcmpne
llvm.aarch64.sve.fcmpuo
llvm.aarch64.sve.fcvt
llvm.aarch64.sve.fcvt.bf16f32
llvm.aarch64.sve.fcvt.f16f32
llvm.aarch64.sve.fcvt.f16f64
llvm.aarch64.sve.fcvt.f32f16
llvm.aarch64.sve.fcvt.f32f64
llvm.aarch64.sve.fcvt.f64f16
llvm.aarch64.sve.fcvt.f64f32
llvm.aarch64.sve.fcvtlt.f32f16
llvm.aarch64.sve.fcvtlt.f64f32
llvm.aarch64.sve.fcvtnt.bf16f32
llvm.aarch64.sve.fcvtnt.f16f32
llvm.aarch64.sve.fcvtnt.f32f64
llvm.aarch64.sve.fcvtx.f32f64
llvm.aarch64.sve.fcvtxnt.f32f64
llvm.aarch64.sve.fcvtzs
llvm.aarch64.sve.fcvtzs.i32f16
llvm.aarch64.sve.fcvtzs.i32f64
llvm.aarch64.sve.fcvtzs.i64f16
llvm.aarch64.sve.fcvtzs.i64f32
llvm.aarch64.sve.fcvtzu
llvm.aarch64.sve.fcvtzu.i32f16
llvm.aarch64.sve.fcvtzu.i32f64
llvm.aarch64.sve.fcvtzu.i64f16
llvm.aarch64.sve.fcvtzu.i64f32
llvm.aarch64.sve.fdiv
llvm.aarch64.sve.fdivr
llvm.aarch64.sve.fexpa.x
llvm.aarch64.sve.flogb
llvm.aarch64.sve.fmad
llvm.aarch64.sve.fmax
llvm.aarch64.sve.fmaxnm
llvm.aarch64.sve.fmaxnmp
llvm.aarch64.sve.fmaxnmv
llvm.aarch64.sve.fmaxp
llvm.aarch64.sve.fmaxv
llvm.aarch64.sve.fmin
llvm.aarch64.sve.fminnm
llvm.aarch64.sve.fminnmp
llvm.aarch64.sve.fminnmv
llvm.aarch64.sve.fminp
llvm.aarch64.sve.fminv
llvm.aarch64.sve.fmla
llvm.aarch64.sve.fmla.lane
llvm.aarch64.sve.fmlalb
llvm.aarch64.sve.fmlalb.lane
llvm.aarch64.sve.fmlalt
llvm.aarch64.sve.fmlalt.lane
llvm.aarch64.sve.fmls
llvm.aarch64.sve.fmls.lane
llvm.aarch64.sve.fmlslb
llvm.aarch64.sve.fmlslb.lane
llvm.aarch64.sve.fmlslt
llvm.aarch64.sve.fmlslt.lane
llvm.aarch64.sve.fmmla
llvm.aarch64.sve.fmsb
llvm.aarch64.sve.fmul
llvm.aarch64.sve.fmul.lane
llvm.aarch64.sve.fmulx
llvm.aarch64.sve.fneg
llvm.aarch64.sve.fnmad
llvm.aarch64.sve.fnmla
llvm.aarch64.sve.fnmls
llvm.aarch64.sve.fnmsb
llvm.aarch64.sve.frecpe.x
llvm.aarch64.sve.frecps.x
llvm.aarch64.sve.frecpx
llvm.aarch64.sve.frinta
llvm.aarch64.sve.frinti
llvm.aarch64.sve.frintm
llvm.aarch64.sve.frintn
llvm.aarch64.sve.frintp
llvm.aarch64.sve.frintx
llvm.aarch64.sve.frintz
llvm.aarch64.sve.frsqrte.x
llvm.aarch64.sve.frsqrts.x
llvm.aarch64.sve.fscale
llvm.aarch64.sve.fsqrt
llvm.aarch64.sve.fsub
llvm.aarch64.sve.fsubr
llvm.aarch64.sve.ftmad.x
llvm.aarch64.sve.ftsmul.x
llvm.aarch64.sve.ftssel.x
llvm.aarch64.sve.histcnt
llvm.aarch64.sve.histseg
llvm.aarch64.sve.index
llvm.aarch64.sve.insr
llvm.aarch64.sve.lasta
llvm.aarch64.sve.lastb
llvm.aarch64.sve.ld1
llvm.aarch64.sve.ld1.gather
llvm.aarch64.sve.ld1.gather.index
llvm.aarch64.sve.ld1.gather.scalar.offset
llvm.aarch64.sve.ld1.gather.sxtw
llvm.aarch64.sve.ld1.gather.sxtw.index
llvm.aarch64.sve.ld1.gather.uxtw
llvm.aarch64.sve.ld1.gather.uxtw.index
llvm.aarch64.sve.ld1ro
llvm.aarch64.sve.ld1rq
llvm.aarch64.sve.ld2
llvm.aarch64.sve.ld3
llvm.aarch64.sve.ld4
llvm.aarch64.sve.ldff1
llvm.aarch64.sve.ldff1.gather
llvm.aarch64.sve.ldff1.gather.index
llvm.aarch64.sve.ldff1.gather.scalar.offset
llvm.aarch64.sve.ldff1.gather.sxtw
llvm.aarch64.sve.ldff1.gather.sxtw.index
llvm.aarch64.sve.ldff1.gather.uxtw
llvm.aarch64.sve.ldff1.gather.uxtw.index
llvm.aarch64.sve.ldnf1
llvm.aarch64.sve.ldnt1
llvm.aarch64.sve.ldnt1.gather
llvm.aarch64.sve.ldnt1.gather.index
llvm.aarch64.sve.ldnt1.gather.scalar.offset
llvm.aarch64.sve.ldnt1.gather.uxtw
llvm.aarch64.sve.lsl
llvm.aarch64.sve.lsl.wide
llvm.aarch64.sve.lsr
llvm.aarch64.sve.lsr.wide
llvm.aarch64.sve.mad
llvm.aarch64.sve.match
llvm.aarch64.sve.mla
llvm.aarch64.sve.mla.lane
llvm.aarch64.sve.mls
llvm.aarch64.sve.mls.lane
llvm.aarch64.sve.msb
llvm.aarch64.sve.mul
llvm.aarch64.sve.mul.lane
llvm.aarch64.sve.nand.z
llvm.aarch64.sve.nbsl
llvm.aarch64.sve.neg
llvm.aarch64.sve.nmatch
llvm.aarch64.sve.nor.z
llvm.aarch64.sve.not
llvm.aarch64.sve.orn.z
llvm.aarch64.sve.orr
llvm.aarch64.sve.orr.z
llvm.aarch64.sve.orv
llvm.aarch64.sve.pfirst
llvm.aarch64.sve.pmul
llvm.aarch64.sve.pmullb.pair
llvm.aarch64.sve.pmullt.pair
llvm.aarch64.sve.pnext
llvm.aarch64.sve.prf
llvm.aarch64.sve.prfb.gather.index
llvm.aarch64.sve.prfb.gather.scalar.offset
llvm.aarch64.sve.prfb.gather.sxtw.index
llvm.aarch64.sve.prfb.gather.uxtw.index
llvm.aarch64.sve.prfd.gather.index
llvm.aarch64.sve.prfd.gather.scalar.offset
llvm.aarch64.sve.prfd.gather.sxtw.index
llvm.aarch64.sve.prfd.gather.uxtw.index
llvm.aarch64.sve.prfh.gather.index
llvm.aarch64.sve.prfh.gather.scalar.offset
llvm.aarch64.sve.prfh.gather.sxtw.index
llvm.aarch64.sve.prfh.gather.uxtw.index
llvm.aarch64.sve.prfw.gather.index
llvm.aarch64.sve.prfw.gather.scalar.offset
llvm.aarch64.sve.prfw.gather.sxtw.index
llvm.aarch64.sve.prfw.gather.uxtw.index
llvm.aarch64.sve.ptest.any
llvm.aarch64.sve.ptest.first
llvm.aarch64.sve.ptest.last
llvm.aarch64.sve.ptrue
llvm.aarch64.sve.punpkhi
llvm.aarch64.sve.punpklo
llvm.aarch64.sve.raddhnb
llvm.aarch64.sve.raddhnt
llvm.aarch64.sve.rax1
llvm.aarch64.sve.rbit
llvm.aarch64.sve.rdffr
llvm.aarch64.sve.rdffr.z
llvm.aarch64.sve.rev
llvm.aarch64.sve.revb
llvm.aarch64.sve.revh
llvm.aarch64.sve.revw
llvm.aarch64.sve.rshrnb
llvm.aarch64.sve.rshrnt
llvm.aarch64.sve.rsubhnb
llvm.aarch64.sve.rsubhnt
llvm.aarch64.sve.saba
llvm.aarch64.sve.sabalb
llvm.aarch64.sve.sabalt
llvm.aarch64.sve.sabd
llvm.aarch64.sve.sabdlb
llvm.aarch64.sve.sabdlt
llvm.aarch64.sve.sadalp
llvm.aarch64.sve.saddlb
llvm.aarch64.sve.saddlbt
llvm.aarch64.sve.saddlt
llvm.aarch64.sve.saddv
llvm.aarch64.sve.saddwb
llvm.aarch64.sve.saddwt
llvm.aarch64.sve.sbclb
llvm.aarch64.sve.sbclt
llvm.aarch64.sve.scvtf
llvm.aarch64.sve.scvtf.f16i32
llvm.aarch64.sve.scvtf.f16i64
llvm.aarch64.sve.scvtf.f32i64
llvm.aarch64.sve.scvtf.f64i32
llvm.aarch64.sve.sdiv
llvm.aarch64.sve.sdivr
llvm.aarch64.sve.sdot
llvm.aarch64.sve.sdot.lane
llvm.aarch64.sve.sel
llvm.aarch64.sve.setffr
llvm.aarch64.sve.shadd
llvm.aarch64.sve.shrnb
llvm.aarch64.sve.shrnt
llvm.aarch64.sve.shsub
llvm.aarch64.sve.shsubr
llvm.aarch64.sve.sli
llvm.aarch64.sve.sm4e
llvm.aarch64.sve.sm4ekey
llvm.aarch64.sve.smax
llvm.aarch64.sve.smaxp
llvm.aarch64.sve.smaxv
llvm.aarch64.sve.smin
llvm.aarch64.sve.sminp
llvm.aarch64.sve.sminv
llvm.aarch64.sve.smlalb
llvm.aarch64.sve.smlalb.lane
llvm.aarch64.sve.smlalt
llvm.aarch64.sve.smlalt.lane
llvm.aarch64.sve.smlslb
llvm.aarch64.sve.smlslb.lane
llvm.aarch64.sve.smlslt
llvm.aarch64.sve.smlslt.lane
llvm.aarch64.sve.smmla
llvm.aarch64.sve.smulh
llvm.aarch64.sve.smullb
llvm.aarch64.sve.smullb.lane
llvm.aarch64.sve.smullt
llvm.aarch64.sve.smullt.lane
llvm.aarch64.sve.splice
llvm.aarch64.sve.sqabs
llvm.aarch64.sve.sqadd
llvm.aarch64.sve.sqadd.x
llvm.aarch64.sve.sqcadd.x
llvm.aarch64.sve.sqdecb.n32
llvm.aarch64.sve.sqdecb.n64
llvm.aarch64.sve.sqdecd
llvm.aarch64.sve.sqdecd.n32
llvm.aarch64.sve.sqdecd.n64
llvm.aarch64.sve.sqdech
llvm.aarch64.sve.sqdech.n32
llvm.aarch64.sve.sqdech.n64
llvm.aarch64.sve.sqdecp
llvm.aarch64.sve.sqdecp.n32
llvm.aarch64.sve.sqdecp.n64
llvm.aarch64.sve.sqdecw
llvm.aarch64.sve.sqdecw.n32
llvm.aarch64.sve.sqdecw.n64
llvm.aarch64.sve.sqdmlalb
llvm.aarch64.sve.sqdmlalb.lane
llvm.aarch64.sve.sqdmlalbt
llvm.aarch64.sve.sqdmlalt
llvm.aarch64.sve.sqdmlalt.lane
llvm.aarch64.sve.sqdmlslb
llvm.aarch64.sve.sqdmlslb.lane
llvm.aarch64.sve.sqdmlslbt
llvm.aarch64.sve.sqdmlslt
llvm.aarch64.sve.sqdmlslt.lane
llvm.aarch64.sve.sqdmulh
llvm.aarch64.sve.sqdmulh.lane
llvm.aarch64.sve.sqdmullb
llvm.aarch64.sve.sqdmullb.lane
llvm.aarch64.sve.sqdmullt
llvm.aarch64.sve.sqdmullt.lane
llvm.aarch64.sve.sqincb.n32
llvm.aarch64.sve.sqincb.n64
llvm.aarch64.sve.sqincd
llvm.aarch64.sve.sqincd.n32
llvm.aarch64.sve.sqincd.n64
llvm.aarch64.sve.sqinch
llvm.aarch64.sve.sqinch.n32
llvm.aarch64.sve.sqinch.n64
llvm.aarch64.sve.sqincp
llvm.aarch64.sve.sqincp.n32
llvm.aarch64.sve.sqincp.n64
llvm.aarch64.sve.sqincw
llvm.aarch64.sve.sqincw.n32
llvm.aarch64.sve.sqincw.n64
llvm.aarch64.sve.sqneg
llvm.aarch64.sve.sqrdcmlah.lane.x
llvm.aarch64.sve.sqrdcmlah.x
llvm.aarch64.sve.sqrdmlah
llvm.aarch64.sve.sqrdmlah.lane
llvm.aarch64.sve.sqrdmlsh
llvm.aarch64.sve.sqrdmlsh.lane
llvm.aarch64.sve.sqrdmulh
llvm.aarch64.sve.sqrdmulh.lane
llvm.aarch64.sve.sqrshl
llvm.aarch64.sve.sqrshrnb
llvm.aarch64.sve.sqrshrnt
llvm.aarch64.sve.sqrshrunb
llvm.aarch64.sve.sqrshrunt
llvm.aarch64.sve.sqshl
llvm.aarch64.sve.sqshlu
llvm.aarch64.sve.sqshrnb
llvm.aarch64.sve.sqshrnt
llvm.aarch64.sve.sqshrunb
llvm.aarch64.sve.sqshrunt
llvm.aarch64.sve.sqsub
llvm.aarch64.sve.sqsub.x
llvm.aarch64.sve.sqsubr
llvm.aarch64.sve.sqxtnb
llvm.aarch64.sve.sqxtnt
llvm.aarch64.sve.sqxtunb
llvm.aarch64.sve.sqxtunt
llvm.aarch64.sve.srhadd
llvm.aarch64.sve.sri
llvm.aarch64.sve.srshl
llvm.aarch64.sve.srshr
llvm.aarch64.sve.srsra
llvm.aarch64.sve.sshllb
llvm.aarch64.sve.sshllt
llvm.aarch64.sve.ssra
llvm.aarch64.sve.ssublb
llvm.aarch64.sve.ssublbt
llvm.aarch64.sve.ssublt
llvm.aarch64.sve.ssubltb
llvm.aarch64.sve.ssubwb
llvm.aarch64.sve.ssubwt
llvm.aarch64.sve.st1
llvm.aarch64.sve.st1.scatter
llvm.aarch64.sve.st1.scatter.index
llvm.aarch64.sve.st1.scatter.scalar.offset
llvm.aarch64.sve.st1.scatter.sxtw
llvm.aarch64.sve.st1.scatter.sxtw.index
llvm.aarch64.sve.st1.scatter.uxtw
llvm.aarch64.sve.st1.scatter.uxtw.index
llvm.aarch64.sve.st2
llvm.aarch64.sve.st3
llvm.aarch64.sve.st4
llvm.aarch64.sve.stnt1
llvm.aarch64.sve.stnt1.scatter
llvm.aarch64.sve.stnt1.scatter.index
llvm.aarch64.sve.stnt1.scatter.scalar.offset
llvm.aarch64.sve.stnt1.scatter.uxtw
llvm.aarch64.sve.sub
llvm.aarch64.sve.subhnb
llvm.aarch64.sve.subhnt
llvm.aarch64.sve.subr
llvm.aarch64.sve.sudot.lane
llvm.aarch64.sve.sunpkhi
llvm.aarch64.sve.sunpklo
llvm.aarch64.sve.suqadd
llvm.aarch64.sve.sxtb
llvm.aarch64.sve.sxth
llvm.aarch64.sve.sxtw
llvm.aarch64.sve.tbl
llvm.aarch64.sve.tbl2
llvm.aarch64.sve.tbx
llvm.aarch64.sve.trn1
llvm.aarch64.sve.trn1q
llvm.aarch64.sve.trn2
llvm.aarch64.sve.trn2q
llvm.aarch64.sve.tuple.create2
llvm.aarch64.sve.tuple.create3
llvm.aarch64.sve.tuple.create4
llvm.aarch64.sve.tuple.get
llvm.aarch64.sve.tuple.set
llvm.aarch64.sve.uaba
llvm.aarch64.sve.uabalb
llvm.aarch64.sve.uabalt
llvm.aarch64.sve.uabd
llvm.aarch64.sve.uabdlb
llvm.aarch64.sve.uabdlt
llvm.aarch64.sve.uadalp
llvm.aarch64.sve.uaddlb
llvm.aarch64.sve.uaddlt
llvm.aarch64.sve.uaddv
llvm.aarch64.sve.uaddwb
llvm.aarch64.sve.uaddwt
llvm.aarch64.sve.ucvtf
llvm.aarch64.sve.ucvtf.f16i32
llvm.aarch64.sve.ucvtf.f16i64
llvm.aarch64.sve.ucvtf.f32i64
llvm.aarch64.sve.ucvtf.f64i32
llvm.aarch64.sve.udiv
llvm.aarch64.sve.udivr
llvm.aarch64.sve.udot
llvm.aarch64.sve.udot.lane
llvm.aarch64.sve.uhadd
llvm.aarch64.sve.uhsub
llvm.aarch64.sve.uhsubr
llvm.aarch64.sve.umax
llvm.aarch64.sve.umaxp
llvm.aarch64.sve.umaxv
llvm.aarch64.sve.umin
llvm.aarch64.sve.uminp
llvm.aarch64.sve.uminv
llvm.aarch64.sve.umlalb
llvm.aarch64.sve.umlalb.lane
llvm.aarch64.sve.umlalt
llvm.aarch64.sve.umlalt.lane
llvm.aarch64.sve.umlslb
llvm.aarch64.sve.umlslb.lane
llvm.aarch64.sve.umlslt
llvm.aarch64.sve.umlslt.lane
llvm.aarch64.sve.ummla
llvm.aarch64.sve.umulh
llvm.aarch64.sve.umullb
llvm.aarch64.sve.umullb.lane
llvm.aarch64.sve.umullt
llvm.aarch64.sve.umullt.lane
llvm.aarch64.sve.uqadd
llvm.aarch64.sve.uqadd.x
llvm.aarch64.sve.uqdecb.n32
llvm.aarch64.sve.uqdecb.n64
llvm.aarch64.sve.uqdecd
llvm.aarch64.sve.uqdecd.n32
llvm.aarch64.sve.uqdecd.n64
llvm.aarch64.sve.uqdech
llvm.aarch64.sve.uqdech.n32
llvm.aarch64.sve.uqdech.n64
llvm.aarch64.sve.uqdecp
llvm.aarch64.sve.uqdecp.n32
llvm.aarch64.sve.uqdecp.n64
llvm.aarch64.sve.uqdecw
llvm.aarch64.sve.uqdecw.n32
llvm.aarch64.sve.uqdecw.n64
llvm.aarch64.sve.uqincb.n32
llvm.aarch64.sve.uqincb.n64
llvm.aarch64.sve.uqincd
llvm.aarch64.sve.uqincd.n32
llvm.aarch64.sve.uqincd.n64
llvm.aarch64.sve.uqinch
llvm.aarch64.sve.uqinch.n32
llvm.aarch64.sve.uqinch.n64
llvm.aarch64.sve.uqincp
llvm.aarch64.sve.uqincp.n32
llvm.aarch64.sve.uqincp.n64
llvm.aarch64.sve.uqincw
llvm.aarch64.sve.uqincw.n32
llvm.aarch64.sve.uqincw.n64
llvm.aarch64.sve.uqrshl
llvm.aarch64.sve.uqrshrnb
llvm.aarch64.sve.uqrshrnt
llvm.aarch64.sve.uqshl
llvm.aarch64.sve.uqshrnb
llvm.aarch64.sve.uqshrnt
llvm.aarch64.sve.uqsub
llvm.aarch64.sve.uqsub.x
llvm.aarch64.sve.uqsubr
llvm.aarch64.sve.uqxtnb
llvm.aarch64.sve.uqxtnt
llvm.aarch64.sve.urecpe
llvm.aarch64.sve.urhadd
llvm.aarch64.sve.urshl
llvm.aarch64.sve.urshr
llvm.aarch64.sve.ursqrte
llvm.aarch64.sve.ursra
llvm.aarch64.sve.usdot
llvm.aarch64.sve.usdot.lane
llvm.aarch64.sve.ushllb
llvm.aarch64.sve.ushllt
llvm.aarch64.sve.usmmla
llvm.aarch64.sve.usqadd
llvm.aarch64.sve.usra
llvm.aarch64.sve.usublb
llvm.aarch64.sve.usublt
llvm.aarch64.sve.usubwb
llvm.aarch64.sve.usubwt
llvm.aarch64.sve.uunpkhi
llvm.aarch64.sve.uunpklo
llvm.aarch64.sve.uxtb
llvm.aarch64.sve.uxth
llvm.aarch64.sve.uxtw
llvm.aarch64.sve.uzp1
llvm.aarch64.sve.uzp1q
llvm.aarch64.sve.uzp2
llvm.aarch64.sve.uzp2q
llvm.aarch64.sve.whilege
llvm.aarch64.sve.whilegt
llvm.aarch64.sve.whilehi
llvm.aarch64.sve.whilehs
llvm.aarch64.sve.whilele
llvm.aarch64.sve.whilelo
llvm.aarch64.sve.whilels
llvm.aarch64.sve.whilelt
llvm.aarch64.sve.whilerw.b
llvm.aarch64.sve.whilerw.d
llvm.aarch64.sve.whilerw.h
llvm.aarch64.sve.whilerw.s
llvm.aarch64.sve.whilewr.b
llvm.aarch64.sve.whilewr.d
llvm.aarch64.sve.whilewr.h
llvm.aarch64.sve.whilewr.s
llvm.aarch64.sve.wrffr
llvm.aarch64.sve.xar
llvm.aarch64.sve.zip1
llvm.aarch64.sve.zip1q
llvm.aarch64.sve.zip2
llvm.aarch64.sve.zip2q
llvm.aarch64.tagp
llvm.aarch64.tcancel
llvm.aarch64.tcommit
llvm.aarch64.tstart
llvm.aarch64.ttest
llvm.aarch64.udiv
llvm.amdgcn.alignbit
llvm.amdgcn.alignbyte
llvm.amdgcn.atomic.dec
llvm.amdgcn.atomic.inc
llvm.amdgcn.ballot
llvm.amdgcn.buffer.atomic.add
llvm.amdgcn.buffer.atomic.and
llvm.amdgcn.buffer.atomic.cmpswap
llvm.amdgcn.buffer.atomic.csub
llvm.amdgcn.buffer.atomic.fadd
llvm.amdgcn.buffer.atomic.or
llvm.amdgcn.buffer.atomic.smax
llvm.amdgcn.buffer.atomic.smin
llvm.amdgcn.buffer.atomic.sub
llvm.amdgcn.buffer.atomic.swap
llvm.amdgcn.buffer.atomic.umax
llvm.amdgcn.buffer.atomic.umin
llvm.amdgcn.buffer.atomic.xor
llvm.amdgcn.buffer.load
llvm.amdgcn.buffer.load.format
llvm.amdgcn.buffer.store
llvm.amdgcn.buffer.store.format
llvm.amdgcn.buffer.wbinvl1
llvm.amdgcn.buffer.wbinvl1.sc
llvm.amdgcn.buffer.wbinvl1.vol
llvm.amdgcn.class
llvm.amdgcn.cos
llvm.amdgcn.cubeid
llvm.amdgcn.cubema
llvm.amdgcn.cubesc
llvm.amdgcn.cubetc
llvm.amdgcn.cvt.pk.i16
llvm.amdgcn.cvt.pk.u16
llvm.amdgcn.cvt.pk.u8.f32
llvm.amdgcn.cvt.pknorm.i16
llvm.amdgcn.cvt.pknorm.u16
llvm.amdgcn.cvt.pkrtz
llvm.amdgcn.dispatch.id
llvm.amdgcn.dispatch.ptr
llvm.amdgcn.div.fixup
llvm.amdgcn.div.fmas
llvm.amdgcn.div.scale
llvm.amdgcn.ds.append
llvm.amdgcn.ds.bpermute
llvm.amdgcn.ds.consume
llvm.amdgcn.ds.fadd
llvm.amdgcn.ds.fmax
llvm.amdgcn.ds.fmin
llvm.amdgcn.ds.gws.barrier
llvm.amdgcn.ds.gws.init
llvm.amdgcn.ds.gws.sema.br
llvm.amdgcn.ds.gws.sema.p
llvm.amdgcn.ds.gws.sema.release.all
llvm.amdgcn.ds.gws.sema.v
llvm.amdgcn.ds.ordered.add
llvm.amdgcn.ds.ordered.swap
llvm.amdgcn.ds.permute
llvm.amdgcn.ds.swizzle
llvm.amdgcn.else
llvm.amdgcn.end.cf
llvm.amdgcn.endpgm
llvm.amdgcn.exp
llvm.amdgcn.exp.compr
llvm.amdgcn.fcmp
llvm.amdgcn.fdiv.fast
llvm.amdgcn.fdot2
llvm.amdgcn.fma.legacy
llvm.amdgcn.fmad.ftz
llvm.amdgcn.fmed3
llvm.amdgcn.fmul.legacy
llvm.amdgcn.fract
llvm.amdgcn.frexp.exp
llvm.amdgcn.frexp.mant
llvm.amdgcn.global.atomic.csub
llvm.amdgcn.global.atomic.fadd
llvm.amdgcn.groupstaticsize
llvm.amdgcn.icmp
llvm.amdgcn.if
llvm.amdgcn.if.break
llvm.amdgcn.image.atomic.add.1d
llvm.amdgcn.image.atomic.add.1darray
llvm.amdgcn.image.atomic.add.2d
llvm.amdgcn.image.atomic.add.2darray
llvm.amdgcn.image.atomic.add.2darraymsaa
llvm.amdgcn.image.atomic.add.2dmsaa
llvm.amdgcn.image.atomic.add.3d
llvm.amdgcn.image.atomic.add.cube
llvm.amdgcn.image.atomic.and.1d
llvm.amdgcn.image.atomic.and.1darray
llvm.amdgcn.image.atomic.and.2d
llvm.amdgcn.image.atomic.and.2darray
llvm.amdgcn.image.atomic.and.2darraymsaa
llvm.amdgcn.image.atomic.and.2dmsaa
llvm.amdgcn.image.atomic.and.3d
llvm.amdgcn.image.atomic.and.cube
llvm.amdgcn.image.atomic.cmpswap.1d
llvm.amdgcn.image.atomic.cmpswap.1darray
llvm.amdgcn.image.atomic.cmpswap.2d
llvm.amdgcn.image.atomic.cmpswap.2darray
llvm.amdgcn.image.atomic.cmpswap.2darraymsaa
llvm.amdgcn.image.atomic.cmpswap.2dmsaa
llvm.amdgcn.image.atomic.cmpswap.3d
llvm.amdgcn.image.atomic.cmpswap.cube
llvm.amdgcn.image.atomic.dec.1d
llvm.amdgcn.image.atomic.dec.1darray
llvm.amdgcn.image.atomic.dec.2d
llvm.amdgcn.image.atomic.dec.2darray
llvm.amdgcn.image.atomic.dec.2darraymsaa
llvm.amdgcn.image.atomic.dec.2dmsaa
llvm.amdgcn.image.atomic.dec.3d
llvm.amdgcn.image.atomic.dec.cube
llvm.amdgcn.image.atomic.inc.1d
llvm.amdgcn.image.atomic.inc.1darray
llvm.amdgcn.image.atomic.inc.2d
llvm.amdgcn.image.atomic.inc.2darray
llvm.amdgcn.image.atomic.inc.2darraymsaa
llvm.amdgcn.image.atomic.inc.2dmsaa
llvm.amdgcn.image.atomic.inc.3d
llvm.amdgcn.image.atomic.inc.cube
llvm.amdgcn.image.atomic.or.1d
llvm.amdgcn.image.atomic.or.1darray
llvm.amdgcn.image.atomic.or.2d
llvm.amdgcn.image.atomic.or.2darray
llvm.amdgcn.image.atomic.or.2darraymsaa
llvm.amdgcn.image.atomic.or.2dmsaa
llvm.amdgcn.image.atomic.or.3d
llvm.amdgcn.image.atomic.or.cube
llvm.amdgcn.image.atomic.smax.1d
llvm.amdgcn.image.atomic.smax.1darray
llvm.amdgcn.image.atomic.smax.2d
llvm.amdgcn.image.atomic.smax.2darray
llvm.amdgcn.image.atomic.smax.2darraymsaa
llvm.amdgcn.image.atomic.smax.2dmsaa
llvm.amdgcn.image.atomic.smax.3d
llvm.amdgcn.image.atomic.smax.cube
llvm.amdgcn.image.atomic.smin.1d
llvm.amdgcn.image.atomic.smin.1darray
llvm.amdgcn.image.atomic.smin.2d
llvm.amdgcn.image.atomic.smin.2darray
llvm.amdgcn.image.atomic.smin.2darraymsaa
llvm.amdgcn.image.atomic.smin.2dmsaa
llvm.amdgcn.image.atomic.smin.3d
llvm.amdgcn.image.atomic.smin.cube
llvm.amdgcn.image.atomic.sub.1d
llvm.amdgcn.image.atomic.sub.1darray
llvm.amdgcn.image.atomic.sub.2d
llvm.amdgcn.image.atomic.sub.2darray
llvm.amdgcn.image.atomic.sub.2darraymsaa
llvm.amdgcn.image.atomic.sub.2dmsaa
llvm.amdgcn.image.atomic.sub.3d
llvm.amdgcn.image.atomic.sub.cube
llvm.amdgcn.image.atomic.swap.1d
llvm.amdgcn.image.atomic.swap.1darray
llvm.amdgcn.image.atomic.swap.2d
llvm.amdgcn.image.atomic.swap.2darray
llvm.amdgcn.image.atomic.swap.2darraymsaa
llvm.amdgcn.image.atomic.swap.2dmsaa
llvm.amdgcn.image.atomic.swap.3d
llvm.amdgcn.image.atomic.swap.cube
llvm.amdgcn.image.atomic.umax.1d
llvm.amdgcn.image.atomic.umax.1darray
llvm.amdgcn.image.atomic.umax.2d
llvm.amdgcn.image.atomic.umax.2darray
llvm.amdgcn.image.atomic.umax.2darraymsaa
llvm.amdgcn.image.atomic.umax.2dmsaa
llvm.amdgcn.image.atomic.umax.3d
llvm.amdgcn.image.atomic.umax.cube
llvm.amdgcn.image.atomic.umin.1d
llvm.amdgcn.image.atomic.umin.1darray
llvm.amdgcn.image.atomic.umin.2d
llvm.amdgcn.image.atomic.umin.2darray
llvm.amdgcn.image.atomic.umin.2darraymsaa
llvm.amdgcn.image.atomic.umin.2dmsaa
llvm.amdgcn.image.atomic.umin.3d
llvm.amdgcn.image.atomic.umin.cube
llvm.amdgcn.image.atomic.xor.1d
llvm.amdgcn.image.atomic.xor.1darray
llvm.amdgcn.image.atomic.xor.2d
llvm.amdgcn.image.atomic.xor.2darray
llvm.amdgcn.image.atomic.xor.2darraymsaa
llvm.amdgcn.image.atomic.xor.2dmsaa
llvm.amdgcn.image.atomic.xor.3d
llvm.amdgcn.image.atomic.xor.cube
llvm.amdgcn.image.bvh.intersect.ray
llvm.amdgcn.image.gather4.2d
llvm.amdgcn.image.gather4.2darray
llvm.amdgcn.image.gather4.b.2d
llvm.amdgcn.image.gather4.b.2darray
llvm.amdgcn.image.gather4.b.cl.2d
llvm.amdgcn.image.gather4.b.cl.2darray
llvm.amdgcn.image.gather4.b.cl.cube
llvm.amdgcn.image.gather4.b.cl.o.2d
llvm.amdgcn.image.gather4.b.cl.o.2darray
llvm.amdgcn.image.gather4.b.cl.o.cube
llvm.amdgcn.image.gather4.b.cube
llvm.amdgcn.image.gather4.b.o.2d
llvm.amdgcn.image.gather4.b.o.2darray
llvm.amdgcn.image.gather4.b.o.cube
llvm.amdgcn.image.gather4.c.2d
llvm.amdgcn.image.gather4.c.2darray
llvm.amdgcn.image.gather4.c.b.2d
llvm.amdgcn.image.gather4.c.b.2darray
llvm.amdgcn.image.gather4.c.b.cl.2d
llvm.amdgcn.image.gather4.c.b.cl.2darray
llvm.amdgcn.image.gather4.c.b.cl.cube
llvm.amdgcn.image.gather4.c.b.cl.o.2d
llvm.amdgcn.image.gather4.c.b.cl.o.2darray
llvm.amdgcn.image.gather4.c.b.cl.o.cube
llvm.amdgcn.image.gather4.c.b.cube
llvm.amdgcn.image.gather4.c.b.o.2d
llvm.amdgcn.image.gather4.c.b.o.2darray
llvm.amdgcn.image.gather4.c.b.o.cube
llvm.amdgcn.image.gather4.c.cl.2d
llvm.amdgcn.image.gather4.c.cl.2darray
llvm.amdgcn.image.gather4.c.cl.cube
llvm.amdgcn.image.gather4.c.cl.o.2d
llvm.amdgcn.image.gather4.c.cl.o.2darray
llvm.amdgcn.image.gather4.c.cl.o.cube
llvm.amdgcn.image.gather4.c.cube
llvm.amdgcn.image.gather4.c.l.2d
llvm.amdgcn.image.gather4.c.l.2darray
llvm.amdgcn.image.gather4.c.l.cube
llvm.amdgcn.image.gather4.c.l.o.2d
llvm.amdgcn.image.gather4.c.l.o.2darray
llvm.amdgcn.image.gather4.c.l.o.cube
llvm.amdgcn.image.gather4.c.lz.2d
llvm.amdgcn.image.gather4.c.lz.2darray
llvm.amdgcn.image.gather4.c.lz.cube
llvm.amdgcn.image.gather4.c.lz.o.2d
llvm.amdgcn.image.gather4.c.lz.o.2darray
llvm.amdgcn.image.gather4.c.lz.o.cube
llvm.amdgcn.image.gather4.c.o.2d
llvm.amdgcn.image.gather4.c.o.2darray
llvm.amdgcn.image.gather4.c.o.cube
llvm.amdgcn.image.gather4.cl.2d
llvm.amdgcn.image.gather4.cl.2darray
llvm.amdgcn.image.gather4.cl.cube
llvm.amdgcn.image.gather4.cl.o.2d
llvm.amdgcn.image.gather4.cl.o.2darray
llvm.amdgcn.image.gather4.cl.o.cube
llvm.amdgcn.image.gather4.cube
llvm.amdgcn.image.gather4.l.2d
llvm.amdgcn.image.gather4.l.2darray
llvm.amdgcn.image.gather4.l.cube
llvm.amdgcn.image.gather4.l.o.2d
llvm.amdgcn.image.gather4.l.o.2darray
llvm.amdgcn.image.gather4.l.o.cube
llvm.amdgcn.image.gather4.lz.2d
llvm.amdgcn.image.gather4.lz.2darray
llvm.amdgcn.image.gather4.lz.cube
llvm.amdgcn.image.gather4.lz.o.2d
llvm.amdgcn.image.gather4.lz.o.2darray
llvm.amdgcn.image.gather4.lz.o.cube
llvm.amdgcn.image.gather4.o.2d
llvm.amdgcn.image.gather4.o.2darray
llvm.amdgcn.image.gather4.o.cube
llvm.amdgcn.image.getlod.1d
llvm.amdgcn.image.getlod.1darray
llvm.amdgcn.image.getlod.2d
llvm.amdgcn.image.getlod.2darray
llvm.amdgcn.image.getlod.3d
llvm.amdgcn.image.getlod.cube
llvm.amdgcn.image.getresinfo.1d
llvm.amdgcn.image.getresinfo.1darray
llvm.amdgcn.image.getresinfo.2d
llvm.amdgcn.image.getresinfo.2darray
llvm.amdgcn.image.getresinfo.2darraymsaa
llvm.amdgcn.image.getresinfo.2dmsaa
llvm.amdgcn.image.getresinfo.3d
llvm.amdgcn.image.getresinfo.cube
llvm.amdgcn.image.load.1d
llvm.amdgcn.image.load.1darray
llvm.amdgcn.image.load.2d
llvm.amdgcn.image.load.2darray
llvm.amdgcn.image.load.2darraymsaa
llvm.amdgcn.image.load.2dmsaa
llvm.amdgcn.image.load.3d
llvm.amdgcn.image.load.cube
llvm.amdgcn.image.load.mip.1d
llvm.amdgcn.image.load.mip.1darray
llvm.amdgcn.image.load.mip.2d
llvm.amdgcn.image.load.mip.2darray
llvm.amdgcn.image.load.mip.3d
llvm.amdgcn.image.load.mip.cube
llvm.amdgcn.image.msaa.load.1d
llvm.amdgcn.image.msaa.load.1darray
llvm.amdgcn.image.msaa.load.2d
llvm.amdgcn.image.msaa.load.2darray
llvm.amdgcn.image.msaa.load.2darraymsaa
llvm.amdgcn.image.msaa.load.2dmsaa
llvm.amdgcn.image.msaa.load.3d
llvm.amdgcn.image.msaa.load.cube
llvm.amdgcn.image.sample.1d
llvm.amdgcn.image.sample.1darray
llvm.amdgcn.image.sample.2d
llvm.amdgcn.image.sample.2darray
llvm.amdgcn.image.sample.3d
llvm.amdgcn.image.sample.b.1d
llvm.amdgcn.image.sample.b.1darray
llvm.amdgcn.image.sample.b.2d
llvm.amdgcn.image.sample.b.2darray
llvm.amdgcn.image.sample.b.3d
llvm.amdgcn.image.sample.b.cl.1d
llvm.amdgcn.image.sample.b.cl.1darray
llvm.amdgcn.image.sample.b.cl.2d
llvm.amdgcn.image.sample.b.cl.2darray
llvm.amdgcn.image.sample.b.cl.3d
llvm.amdgcn.image.sample.b.cl.cube
llvm.amdgcn.image.sample.b.cl.o.1d
llvm.amdgcn.image.sample.b.cl.o.1darray
llvm.amdgcn.image.sample.b.cl.o.2d
llvm.amdgcn.image.sample.b.cl.o.2darray
llvm.amdgcn.image.sample.b.cl.o.3d
llvm.amdgcn.image.sample.b.cl.o.cube
llvm.amdgcn.image.sample.b.cube
llvm.amdgcn.image.sample.b.o.1d
llvm.amdgcn.image.sample.b.o.1darray
llvm.amdgcn.image.sample.b.o.2d
llvm.amdgcn.image.sample.b.o.2darray
llvm.amdgcn.image.sample.b.o.3d
llvm.amdgcn.image.sample.b.o.cube
llvm.amdgcn.image.sample.c.1d
llvm.amdgcn.image.sample.c.1darray
llvm.amdgcn.image.sample.c.2d
llvm.amdgcn.image.sample.c.2darray
llvm.amdgcn.image.sample.c.3d
llvm.amdgcn.image.sample.c.b.1d
llvm.amdgcn.image.sample.c.b.1darray
llvm.amdgcn.image.sample.c.b.2d
llvm.amdgcn.image.sample.c.b.2darray
llvm.amdgcn.image.sample.c.b.3d
llvm.amdgcn.image.sample.c.b.cl.1d
llvm.amdgcn.image.sample.c.b.cl.1darray
llvm.amdgcn.image.sample.c.b.cl.2d
llvm.amdgcn.image.sample.c.b.cl.2darray
llvm.amdgcn.image.sample.c.b.cl.3d
llvm.amdgcn.image.sample.c.b.cl.cube
llvm.amdgcn.image.sample.c.b.cl.o.1d
llvm.amdgcn.image.sample.c.b.cl.o.1darray
llvm.amdgcn.image.sample.c.b.cl.o.2d
llvm.amdgcn.image.sample.c.b.cl.o.2darray
llvm.amdgcn.image.sample.c.b.cl.o.3d
llvm.amdgcn.image.sample.c.b.cl.o.cube
llvm.amdgcn.image.sample.c.b.cube
llvm.amdgcn.image.sample.c.b.o.1d
llvm.amdgcn.image.sample.c.b.o.1darray
llvm.amdgcn.image.sample.c.b.o.2d
llvm.amdgcn.image.sample.c.b.o.2darray
llvm.amdgcn.image.sample.c.b.o.3d
llvm.amdgcn.image.sample.c.b.o.cube
llvm.amdgcn.image.sample.c.cd.1d
llvm.amdgcn.image.sample.c.cd.1darray
llvm.amdgcn.image.sample.c.cd.2d
llvm.amdgcn.image.sample.c.cd.2darray
llvm.amdgcn.image.sample.c.cd.3d
llvm.amdgcn.image.sample.c.cd.cl.1d
llvm.amdgcn.image.sample.c.cd.cl.1darray
llvm.amdgcn.image.sample.c.cd.cl.2d
llvm.amdgcn.image.sample.c.cd.cl.2darray
llvm.amdgcn.image.sample.c.cd.cl.3d
llvm.amdgcn.image.sample.c.cd.cl.cube
llvm.amdgcn.image.sample.c.cd.cl.o.1d
llvm.amdgcn.image.sample.c.cd.cl.o.1darray
llvm.amdgcn.image.sample.c.cd.cl.o.2d
llvm.amdgcn.image.sample.c.cd.cl.o.2darray
llvm.amdgcn.image.sample.c.cd.cl.o.3d
llvm.amdgcn.image.sample.c.cd.cl.o.cube
llvm.amdgcn.image.sample.c.cd.cube
llvm.amdgcn.image.sample.c.cd.o.1d
llvm.amdgcn.image.sample.c.cd.o.1darray
llvm.amdgcn.image.sample.c.cd.o.2d
llvm.amdgcn.image.sample.c.cd.o.2darray
llvm.amdgcn.image.sample.c.cd.o.3d
llvm.amdgcn.image.sample.c.cd.o.cube
llvm.amdgcn.image.sample.c.cl.1d
llvm.amdgcn.image.sample.c.cl.1darray
llvm.amdgcn.image.sample.c.cl.2d
llvm.amdgcn.image.sample.c.cl.2darray
llvm.amdgcn.image.sample.c.cl.3d
llvm.amdgcn.image.sample.c.cl.cube
llvm.amdgcn.image.sample.c.cl.o.1d
llvm.amdgcn.image.sample.c.cl.o.1darray
llvm.amdgcn.image.sample.c.cl.o.2d
llvm.amdgcn.image.sample.c.cl.o.2darray
llvm.amdgcn.image.sample.c.cl.o.3d
llvm.amdgcn.image.sample.c.cl.o.cube
llvm.amdgcn.image.sample.c.cube
llvm.amdgcn.image.sample.c.d.1d
llvm.amdgcn.image.sample.c.d.1darray
llvm.amdgcn.image.sample.c.d.2d
llvm.amdgcn.image.sample.c.d.2darray
llvm.amdgcn.image.sample.c.d.3d
llvm.amdgcn.image.sample.c.d.cl.1d
llvm.amdgcn.image.sample.c.d.cl.1darray
llvm.amdgcn.image.sample.c.d.cl.2d
llvm.amdgcn.image.sample.c.d.cl.2darray
llvm.amdgcn.image.sample.c.d.cl.3d
llvm.amdgcn.image.sample.c.d.cl.cube
llvm.amdgcn.image.sample.c.d.cl.o.1d
llvm.amdgcn.image.sample.c.d.cl.o.1darray
llvm.amdgcn.image.sample.c.d.cl.o.2d
llvm.amdgcn.image.sample.c.d.cl.o.2darray
llvm.amdgcn.image.sample.c.d.cl.o.3d
llvm.amdgcn.image.sample.c.d.cl.o.cube
llvm.amdgcn.image.sample.c.d.cube
llvm.amdgcn.image.sample.c.d.o.1d
llvm.amdgcn.image.sample.c.d.o.1darray
llvm.amdgcn.image.sample.c.d.o.2d
llvm.amdgcn.image.sample.c.d.o.2darray
llvm.amdgcn.image.sample.c.d.o.3d
llvm.amdgcn.image.sample.c.d.o.cube
llvm.amdgcn.image.sample.c.l.1d
llvm.amdgcn.image.sample.c.l.1darray
llvm.amdgcn.image.sample.c.l.2d
llvm.amdgcn.image.sample.c.l.2darray
llvm.amdgcn.image.sample.c.l.3d
llvm.amdgcn.image.sample.c.l.cube
llvm.amdgcn.image.sample.c.l.o.1d
llvm.amdgcn.image.sample.c.l.o.1darray
llvm.amdgcn.image.sample.c.l.o.2d
llvm.amdgcn.image.sample.c.l.o.2darray
llvm.amdgcn.image.sample.c.l.o.3d
llvm.amdgcn.image.sample.c.l.o.cube
llvm.amdgcn.image.sample.c.lz.1d
llvm.amdgcn.image.sample.c.lz.1darray
llvm.amdgcn.image.sample.c.lz.2d
llvm.amdgcn.image.sample.c.lz.2darray
llvm.amdgcn.image.sample.c.lz.3d
llvm.amdgcn.image.sample.c.lz.cube
llvm.amdgcn.image.sample.c.lz.o.1d
llvm.amdgcn.image.sample.c.lz.o.1darray
llvm.amdgcn.image.sample.c.lz.o.2d
llvm.amdgcn.image.sample.c.lz.o.2darray
llvm.amdgcn.image.sample.c.lz.o.3d
llvm.amdgcn.image.sample.c.lz.o.cube
llvm.amdgcn.image.sample.c.o.1d
llvm.amdgcn.image.sample.c.o.1darray
llvm.amdgcn.image.sample.c.o.2d
llvm.amdgcn.image.sample.c.o.2darray
llvm.amdgcn.image.sample.c.o.3d
llvm.amdgcn.image.sample.c.o.cube
llvm.amdgcn.image.sample.cd.1d
llvm.amdgcn.image.sample.cd.1darray
llvm.amdgcn.image.sample.cd.2d
llvm.amdgcn.image.sample.cd.2darray
llvm.amdgcn.image.sample.cd.3d
llvm.amdgcn.image.sample.cd.cl.1d
llvm.amdgcn.image.sample.cd.cl.1darray
llvm.amdgcn.image.sample.cd.cl.2d
llvm.amdgcn.image.sample.cd.cl.2darray
llvm.amdgcn.image.sample.cd.cl.3d
llvm.amdgcn.image.sample.cd.cl.cube
llvm.amdgcn.image.sample.cd.cl.o.1d
llvm.amdgcn.image.sample.cd.cl.o.1darray
llvm.amdgcn.image.sample.cd.cl.o.2d
llvm.amdgcn.image.sample.cd.cl.o.2darray
llvm.amdgcn.image.sample.cd.cl.o.3d
llvm.amdgcn.image.sample.cd.cl.o.cube
llvm.amdgcn.image.sample.cd.cube
llvm.amdgcn.image.sample.cd.o.1d
llvm.amdgcn.image.sample.cd.o.1darray
llvm.amdgcn.image.sample.cd.o.2d
llvm.amdgcn.image.sample.cd.o.2darray
llvm.amdgcn.image.sample.cd.o.3d
llvm.amdgcn.image.sample.cd.o.cube
llvm.amdgcn.image.sample.cl.1d
llvm.amdgcn.image.sample.cl.1darray
llvm.amdgcn.image.sample.cl.2d
llvm.amdgcn.image.sample.cl.2darray
llvm.amdgcn.image.sample.cl.3d
llvm.amdgcn.image.sample.cl.cube
llvm.amdgcn.image.sample.cl.o.1d
llvm.amdgcn.image.sample.cl.o.1darray
llvm.amdgcn.image.sample.cl.o.2d
llvm.amdgcn.image.sample.cl.o.2darray
llvm.amdgcn.image.sample.cl.o.3d
llvm.amdgcn.image.sample.cl.o.cube
llvm.amdgcn.image.sample.cube
llvm.amdgcn.image.sample.d.1d
llvm.amdgcn.image.sample.d.1darray
llvm.amdgcn.image.sample.d.2d
llvm.amdgcn.image.sample.d.2darray
llvm.amdgcn.image.sample.d.3d
llvm.amdgcn.image.sample.d.cl.1d
llvm.amdgcn.image.sample.d.cl.1darray
llvm.amdgcn.image.sample.d.cl.2d
llvm.amdgcn.image.sample.d.cl.2darray
llvm.amdgcn.image.sample.d.cl.3d
llvm.amdgcn.image.sample.d.cl.cube
llvm.amdgcn.image.sample.d.cl.o.1d
llvm.amdgcn.image.sample.d.cl.o.1darray
llvm.amdgcn.image.sample.d.cl.o.2d
llvm.amdgcn.image.sample.d.cl.o.2darray
llvm.amdgcn.image.sample.d.cl.o.3d
llvm.amdgcn.image.sample.d.cl.o.cube
llvm.amdgcn.image.sample.d.cube
llvm.amdgcn.image.sample.d.o.1d
llvm.amdgcn.image.sample.d.o.1darray
llvm.amdgcn.image.sample.d.o.2d
llvm.amdgcn.image.sample.d.o.2darray
llvm.amdgcn.image.sample.d.o.3d
llvm.amdgcn.image.sample.d.o.cube
llvm.amdgcn.image.sample.l.1d
llvm.amdgcn.image.sample.l.1darray
llvm.amdgcn.image.sample.l.2d
llvm.amdgcn.image.sample.l.2darray
llvm.amdgcn.image.sample.l.3d
llvm.amdgcn.image.sample.l.cube
llvm.amdgcn.image.sample.l.o.1d
llvm.amdgcn.image.sample.l.o.1darray
llvm.amdgcn.image.sample.l.o.2d
llvm.amdgcn.image.sample.l.o.2darray
llvm.amdgcn.image.sample.l.o.3d
llvm.amdgcn.image.sample.l.o.cube
llvm.amdgcn.image.sample.lz.1d
llvm.amdgcn.image.sample.lz.1darray
llvm.amdgcn.image.sample.lz.2d
llvm.amdgcn.image.sample.lz.2darray
llvm.amdgcn.image.sample.lz.3d
llvm.amdgcn.image.sample.lz.cube
llvm.amdgcn.image.sample.lz.o.1d
llvm.amdgcn.image.sample.lz.o.1darray
llvm.amdgcn.image.sample.lz.o.2d
llvm.amdgcn.image.sample.lz.o.2darray
llvm.amdgcn.image.sample.lz.o.3d
llvm.amdgcn.image.sample.lz.o.cube
llvm.amdgcn.image.sample.o.1d
llvm.amdgcn.image.sample.o.1darray
llvm.amdgcn.image.sample.o.2d
llvm.amdgcn.image.sample.o.2darray
llvm.amdgcn.image.sample.o.3d
llvm.amdgcn.image.sample.o.cube
llvm.amdgcn.image.store.1d
llvm.amdgcn.image.store.1darray
llvm.amdgcn.image.store.2d
llvm.amdgcn.image.store.2darray
llvm.amdgcn.image.store.2darraymsaa
llvm.amdgcn.image.store.2dmsaa
llvm.amdgcn.image.store.3d
llvm.amdgcn.image.store.cube
llvm.amdgcn.image.store.mip.1d
llvm.amdgcn.image.store.mip.1darray
llvm.amdgcn.image.store.mip.2d
llvm.amdgcn.image.store.mip.2darray
llvm.amdgcn.image.store.mip.3d
llvm.amdgcn.image.store.mip.cube
llvm.amdgcn.implicit.buffer.ptr
llvm.amdgcn.implicitarg.ptr
llvm.amdgcn.init.exec
llvm.amdgcn.init.exec.from.input
llvm.amdgcn.interp.mov
llvm.amdgcn.interp.p1
llvm.amdgcn.interp.p1.f16
llvm.amdgcn.interp.p2
llvm.amdgcn.interp.p2.f16
llvm.amdgcn.is.private
llvm.amdgcn.is.shared
llvm.amdgcn.kernarg.segment.ptr
llvm.amdgcn.kill
llvm.amdgcn.ldexp
llvm.amdgcn.lerp
llvm.amdgcn.log.clamp
llvm.amdgcn.loop
llvm.amdgcn.mbcnt.hi
llvm.amdgcn.mbcnt.lo
llvm.amdgcn.mfma.f32.16x16x16f16
llvm.amdgcn.mfma.f32.16x16x1f32
llvm.amdgcn.mfma.f32.16x16x2bf16
llvm.amdgcn.mfma.f32.16x16x4f16
llvm.amdgcn.mfma.f32.16x16x4f32
llvm.amdgcn.mfma.f32.16x16x8bf16
llvm.amdgcn.mfma.f32.32x32x1f32
llvm.amdgcn.mfma.f32.32x32x2bf16
llvm.amdgcn.mfma.f32.32x32x2f32
llvm.amdgcn.mfma.f32.32x32x4bf16
llvm.amdgcn.mfma.f32.32x32x4f16
llvm.amdgcn.mfma.f32.32x32x8f16
llvm.amdgcn.mfma.f32.4x4x1f32
llvm.amdgcn.mfma.f32.4x4x2bf16
llvm.amdgcn.mfma.f32.4x4x4f16
llvm.amdgcn.mfma.i32.16x16x16i8
llvm.amdgcn.mfma.i32.16x16x4i8
llvm.amdgcn.mfma.i32.32x32x4i8
llvm.amdgcn.mfma.i32.32x32x8i8
llvm.amdgcn.mfma.i32.4x4x4i8
llvm.amdgcn.mov.dpp
llvm.amdgcn.mov.dpp8
llvm.amdgcn.mqsad.pk.u16.u8
llvm.amdgcn.mqsad.u32.u8
llvm.amdgcn.msad.u8
llvm.amdgcn.mul.i24
llvm.amdgcn.mul.u24
llvm.amdgcn.permlane16
llvm.amdgcn.permlanex16
llvm.amdgcn.ps.live
llvm.amdgcn.qsad.pk.u16.u8
llvm.amdgcn.queue.ptr
llvm.amdgcn.raw.buffer.atomic.add
llvm.amdgcn.raw.buffer.atomic.and
llvm.amdgcn.raw.buffer.atomic.cmpswap
llvm.amdgcn.raw.buffer.atomic.dec
llvm.amdgcn.raw.buffer.atomic.fadd
llvm.amdgcn.raw.buffer.atomic.inc
llvm.amdgcn.raw.buffer.atomic.or
llvm.amdgcn.raw.buffer.atomic.smax
llvm.amdgcn.raw.buffer.atomic.smin
llvm.amdgcn.raw.buffer.atomic.sub
llvm.amdgcn.raw.buffer.atomic.swap
llvm.amdgcn.raw.buffer.atomic.umax
llvm.amdgcn.raw.buffer.atomic.umin
llvm.amdgcn.raw.buffer.atomic.xor
llvm.amdgcn.raw.buffer.load
llvm.amdgcn.raw.buffer.load.format
llvm.amdgcn.raw.buffer.store
llvm.amdgcn.raw.buffer.store.format
llvm.amdgcn.raw.tbuffer.load
llvm.amdgcn.raw.tbuffer.store
llvm.amdgcn.rcp
llvm.amdgcn.rcp.legacy
llvm.amdgcn.readfirstlane
llvm.amdgcn.readlane
llvm.amdgcn.reloc.constant
llvm.amdgcn.rsq
llvm.amdgcn.rsq.clamp
llvm.amdgcn.rsq.legacy
llvm.amdgcn.s.barrier
llvm.amdgcn.s.buffer.load
llvm.amdgcn.s.dcache.inv
llvm.amdgcn.s.dcache.inv.vol
llvm.amdgcn.s.dcache.wb
llvm.amdgcn.s.dcache.wb.vol
llvm.amdgcn.s.decperflevel
llvm.amdgcn.s.get.waveid.in.workgroup
llvm.amdgcn.s.getpc
llvm.amdgcn.s.getreg
llvm.amdgcn.s.incperflevel
llvm.amdgcn.s.memrealtime
llvm.amdgcn.s.memtime
llvm.amdgcn.s.sendmsg
llvm.amdgcn.s.sendmsghalt
llvm.amdgcn.s.setreg
llvm.amdgcn.s.sleep
llvm.amdgcn.s.waitcnt
llvm.amdgcn.sad.hi.u8
llvm.amdgcn.sad.u16
llvm.amdgcn.sad.u8
llvm.amdgcn.sbfe
llvm.amdgcn.sdot2
llvm.amdgcn.sdot4
llvm.amdgcn.sdot8
llvm.amdgcn.set.inactive
llvm.amdgcn.sffbh
llvm.amdgcn.sin
llvm.amdgcn.softwqm
llvm.amdgcn.sqrt
llvm.amdgcn.struct.buffer.atomic.add
llvm.amdgcn.struct.buffer.atomic.and
llvm.amdgcn.struct.buffer.atomic.cmpswap
llvm.amdgcn.struct.buffer.atomic.dec
llvm.amdgcn.struct.buffer.atomic.fadd
llvm.amdgcn.struct.buffer.atomic.inc
llvm.amdgcn.struct.buffer.atomic.or
llvm.amdgcn.struct.buffer.atomic.smax
llvm.amdgcn.struct.buffer.atomic.smin
llvm.amdgcn.struct.buffer.atomic.sub
llvm.amdgcn.struct.buffer.atomic.swap
llvm.amdgcn.struct.buffer.atomic.umax
llvm.amdgcn.struct.buffer.atomic.umin
llvm.amdgcn.struct.buffer.atomic.xor
llvm.amdgcn.struct.buffer.load
llvm.amdgcn.struct.buffer.load.format
llvm.amdgcn.struct.buffer.store
llvm.amdgcn.struct.buffer.store.format
llvm.amdgcn.struct.tbuffer.load
llvm.amdgcn.struct.tbuffer.store
llvm.amdgcn.tbuffer.load
llvm.amdgcn.tbuffer.store
llvm.amdgcn.trig.preop
llvm.amdgcn.ubfe
llvm.amdgcn.udot2
llvm.amdgcn.udot4
llvm.amdgcn.udot8
llvm.amdgcn.unreachable
llvm.amdgcn.update.dpp
llvm.amdgcn.wave.barrier
llvm.amdgcn.wavefrontsize
llvm.amdgcn.workgroup.id.x
llvm.amdgcn.workgroup.id.y
llvm.amdgcn.workgroup.id.z
llvm.amdgcn.workitem.id.x
llvm.amdgcn.workitem.id.y
llvm.amdgcn.workitem.id.z
llvm.amdgcn.wqm
llvm.amdgcn.wqm.vote
llvm.amdgcn.writelane
llvm.amdgcn.wwm
llvm.arm.cde.cx1
llvm.arm.cde.cx1a
llvm.arm.cde.cx1d
llvm.arm.cde.cx1da
llvm.arm.cde.cx2
llvm.arm.cde.cx2a
llvm.arm.cde.cx2d
llvm.arm.cde.cx2da
llvm.arm.cde.cx3
llvm.arm.cde.cx3a
llvm.arm.cde.cx3d
llvm.arm.cde.cx3da
llvm.arm.cde.vcx1
llvm.arm.cde.vcx1a
llvm.arm.cde.vcx1q
llvm.arm.cde.vcx1q.predicated
llvm.arm.cde.vcx1qa
llvm.arm.cde.vcx1qa.predicated
llvm.arm.cde.vcx2
llvm.arm.cde.vcx2a
llvm.arm.cde.vcx2q
llvm.arm.cde.vcx2q.predicated
llvm.arm.cde.vcx2qa
llvm.arm.cde.vcx2qa.predicated
llvm.arm.cde.vcx3
llvm.arm.cde.vcx3a
llvm.arm.cde.vcx3q
llvm.arm.cde.vcx3q.predicated
llvm.arm.cde.vcx3qa
llvm.arm.cde.vcx3qa.predicated
llvm.arm.cdp
llvm.arm.cdp2
llvm.arm.clrex
llvm.arm.cls
llvm.arm.cls64
llvm.arm.cmse.tt
llvm.arm.cmse.tta
llvm.arm.cmse.ttat
llvm.arm.cmse.ttt
llvm.arm.crc32b
llvm.arm.crc32cb
llvm.arm.crc32ch
llvm.arm.crc32cw
llvm.arm.crc32h
llvm.arm.crc32w
llvm.arm.dbg
llvm.arm.dmb
llvm.arm.dsb
llvm.arm.get.fpscr
llvm.arm.gnu.eabi.mcount
llvm.arm.hint
llvm.arm.isb
llvm.arm.ldaex
llvm.arm.ldaexd
llvm.arm.ldc
llvm.arm.ldc2
llvm.arm.ldc2l
llvm.arm.ldcl
llvm.arm.ldrex
llvm.arm.ldrexd
llvm.arm.mcr
llvm.arm.mcr2
llvm.arm.mcrr
llvm.arm.mcrr2
llvm.arm.mrc
llvm.arm.mrc2
llvm.arm.mrrc
llvm.arm.mrrc2
llvm.arm.mve.abd.predicated
llvm.arm.mve.abs.predicated
llvm.arm.mve.add.predicated
llvm.arm.mve.addlv
llvm.arm.mve.addlv.predicated
llvm.arm.mve.addv
llvm.arm.mve.addv.predicated
llvm.arm.mve.and.predicated
llvm.arm.mve.asrl
llvm.arm.mve.bic.predicated
llvm.arm.mve.cls.predicated
llvm.arm.mve.clz.predicated
llvm.arm.mve.eor.predicated
llvm.arm.mve.fma.predicated
llvm.arm.mve.hadd.predicated
llvm.arm.mve.hsub.predicated
llvm.arm.mve.lsll
llvm.arm.mve.max.predicated
llvm.arm.mve.maxav
llvm.arm.mve.maxav.predicated
llvm.arm.mve.maxnmav
llvm.arm.mve.maxnmav.predicated
llvm.arm.mve.maxnmv
llvm.arm.mve.maxnmv.predicated
llvm.arm.mve.maxv
llvm.arm.mve.maxv.predicated
llvm.arm.mve.min.predicated
llvm.arm.mve.minav
llvm.arm.mve.minav.predicated
llvm.arm.mve.minnmav
llvm.arm.mve.minnmav.predicated
llvm.arm.mve.minnmv
llvm.arm.mve.minnmv.predicated
llvm.arm.mve.minv
llvm.arm.mve.minv.predicated
llvm.arm.mve.mul.predicated
llvm.arm.mve.mulh.predicated
llvm.arm.mve.mull.int.predicated
llvm.arm.mve.mull.poly.predicated
llvm.arm.mve.mvn.predicated
llvm.arm.mve.neg.predicated
llvm.arm.mve.orn.predicated
llvm.arm.mve.orr.predicated
llvm.arm.mve.pred.i2v
llvm.arm.mve.pred.v2i
llvm.arm.mve.qabs.predicated
llvm.arm.mve.qadd.predicated
llvm.arm.mve.qdmulh.predicated
llvm.arm.mve.qneg.predicated
llvm.arm.mve.qrdmulh.predicated
llvm.arm.mve.qsub.predicated
llvm.arm.mve.rhadd.predicated
llvm.arm.mve.rmulh.predicated
llvm.arm.mve.shl.imm.predicated
llvm.arm.mve.shr.imm.predicated
llvm.arm.mve.sqrshr
llvm.arm.mve.sqrshrl
llvm.arm.mve.sqshl
llvm.arm.mve.sqshll
llvm.arm.mve.srshr
llvm.arm.mve.srshrl
llvm.arm.mve.sub.predicated
llvm.arm.mve.uqrshl
llvm.arm.mve.uqrshll
llvm.arm.mve.uqshl
llvm.arm.mve.uqshll
llvm.arm.mve.urshr
llvm.arm.mve.urshrl
llvm.arm.mve.vabav
llvm.arm.mve.vabav.predicated
llvm.arm.mve.vabd
llvm.arm.mve.vadc
llvm.arm.mve.vadc.predicated
llvm.arm.mve.vbrsr
llvm.arm.mve.vbrsr.predicated
llvm.arm.mve.vcaddq
llvm.arm.mve.vcaddq.predicated
llvm.arm.mve.vcls
llvm.arm.mve.vcmlaq
llvm.arm.mve.vcmlaq.predicated
llvm.arm.mve.vcmulq
llvm.arm.mve.vcmulq.predicated
llvm.arm.mve.vctp16
llvm.arm.mve.vctp32
llvm.arm.mve.vctp64
llvm.arm.mve.vctp8
llvm.arm.mve.vcvt.fix
llvm.arm.mve.vcvt.fix.predicated
llvm.arm.mve.vcvt.fp.int.predicated
llvm.arm.mve.vcvt.narrow
llvm.arm.mve.vcvt.narrow.predicated
llvm.arm.mve.vcvt.widen
llvm.arm.mve.vcvt.widen.predicated
llvm.arm.mve.vcvta
llvm.arm.mve.vcvta.predicated
llvm.arm.mve.vcvtm
llvm.arm.mve.vcvtm.predicated
llvm.arm.mve.vcvtn
llvm.arm.mve.vcvtn.predicated
llvm.arm.mve.vcvtp
llvm.arm.mve.vcvtp.predicated
llvm.arm.mve.vddup
llvm.arm.mve.vddup.predicated
llvm.arm.mve.vdwdup
llvm.arm.mve.vdwdup.predicated
llvm.arm.mve.vhadd
llvm.arm.mve.vhsub
llvm.arm.mve.vidup
llvm.arm.mve.vidup.predicated
llvm.arm.mve.viwdup
llvm.arm.mve.viwdup.predicated
llvm.arm.mve.vld2q
llvm.arm.mve.vld4q
llvm.arm.mve.vldr.gather.base
llvm.arm.mve.vldr.gather.base.predicated
llvm.arm.mve.vldr.gather.base.wb
llvm.arm.mve.vldr.gather.base.wb.predicated
llvm.arm.mve.vldr.gather.offset
llvm.arm.mve.vldr.gather.offset.predicated
llvm.arm.mve.vmaxa.predicated
llvm.arm.mve.vmaxnma.predicated
llvm.arm.mve.vmina.predicated
llvm.arm.mve.vminnma.predicated
llvm.arm.mve.vmla.n.predicated
llvm.arm.mve.vmlas.n.predicated
llvm.arm.mve.vmldava
llvm.arm.mve.vmldava.predicated
llvm.arm.mve.vmlldava
llvm.arm.mve.vmlldava.predicated
llvm.arm.mve.vmovl.predicated
llvm.arm.mve.vmovn.predicated
llvm.arm.mve.vmulh
llvm.arm.mve.vmull
llvm.arm.mve.vmull.poly
llvm.arm.mve.vqdmlad
llvm.arm.mve.vqdmlad.predicated
llvm.arm.mve.vqdmlah
llvm.arm.mve.vqdmlah.predicated
llvm.arm.mve.vqdmlash
llvm.arm.mve.vqdmlash.predicated
llvm.arm.mve.vqdmulh
llvm.arm.mve.vqdmull
llvm.arm.mve.vqdmull.predicated
llvm.arm.mve.vqmovn
llvm.arm.mve.vqmovn.predicated
llvm.arm.mve.vqrdmlah
llvm.arm.mve.vqrdmlah.predicated
llvm.arm.mve.vqrdmlash
llvm.arm.mve.vqrdmlash.predicated
llvm.arm.mve.vqrdmulh
llvm.arm.mve.vqshl.imm
llvm.arm.mve.vqshl.imm.predicated
llvm.arm.mve.vqshlu.imm
llvm.arm.mve.vqshlu.imm.predicated
llvm.arm.mve.vreinterpretq
llvm.arm.mve.vrev.predicated
llvm.arm.mve.vrhadd
llvm.arm.mve.vrinta.predicated
llvm.arm.mve.vrintm.predicated
llvm.arm.mve.vrintn
llvm.arm.mve.vrintn.predicated
llvm.arm.mve.vrintp.predicated
llvm.arm.mve.vrintx.predicated
llvm.arm.mve.vrintz.predicated
llvm.arm.mve.vrmlldavha
llvm.arm.mve.vrmlldavha.predicated
llvm.arm.mve.vrmulh
llvm.arm.mve.vrshr.imm
llvm.arm.mve.vrshr.imm.predicated
llvm.arm.mve.vsbc
llvm.arm.mve.vsbc.predicated
llvm.arm.mve.vshl.scalar
llvm.arm.mve.vshl.scalar.predicated
llvm.arm.mve.vshl.vector
llvm.arm.mve.vshl.vector.predicated
llvm.arm.mve.vshlc
llvm.arm.mve.vshlc.predicated
llvm.arm.mve.vshll.imm
llvm.arm.mve.vshll.imm.predicated
llvm.arm.mve.vshrn
llvm.arm.mve.vshrn.predicated
llvm.arm.mve.vsli
llvm.arm.mve.vsli.predicated
llvm.arm.mve.vsri
llvm.arm.mve.vsri.predicated
llvm.arm.mve.vst2q
llvm.arm.mve.vst4q
llvm.arm.mve.vstr.scatter.base
llvm.arm.mve.vstr.scatter.base.predicated
llvm.arm.mve.vstr.scatter.base.wb
llvm.arm.mve.vstr.scatter.base.wb.predicated
llvm.arm.mve.vstr.scatter.offset
llvm.arm.mve.vstr.scatter.offset.predicated
llvm.arm.neon.aesd
llvm.arm.neon.aese
llvm.arm.neon.aesimc
llvm.arm.neon.aesmc
llvm.arm.neon.bfdot
llvm.arm.neon.bfmlalb
llvm.arm.neon.bfmlalt
llvm.arm.neon.bfmmla
llvm.arm.neon.sdot
llvm.arm.neon.sha1c
llvm.arm.neon.sha1h
llvm.arm.neon.sha1m
llvm.arm.neon.sha1p
llvm.arm.neon.sha1su0
llvm.arm.neon.sha1su1
llvm.arm.neon.sha256h
llvm.arm.neon.sha256h2
llvm.arm.neon.sha256su0
llvm.arm.neon.sha256su1
llvm.arm.neon.smmla
llvm.arm.neon.udot
llvm.arm.neon.ummla
llvm.arm.neon.usdot
llvm.arm.neon.usmmla
llvm.arm.neon.vabds
llvm.arm.neon.vabdu
llvm.arm.neon.vabs
llvm.arm.neon.vacge
llvm.arm.neon.vacgt
llvm.arm.neon.vbsl
llvm.arm.neon.vcadd.rot270
llvm.arm.neon.vcadd.rot90
llvm.arm.neon.vcls
llvm.arm.neon.vcvtas
llvm.arm.neon.vcvtau
llvm.arm.neon.vcvtbfp2bf
llvm.arm.neon.vcvtfp2bf
llvm.arm.neon.vcvtfp2fxs
llvm.arm.neon.vcvtfp2fxu
llvm.arm.neon.vcvtfp2hf
llvm.arm.neon.vcvtfxs2fp
llvm.arm.neon.vcvtfxu2fp
llvm.arm.neon.vcvthf2fp
llvm.arm.neon.vcvtms
llvm.arm.neon.vcvtmu
llvm.arm.neon.vcvtns
llvm.arm.neon.vcvtnu
llvm.arm.neon.vcvtps
llvm.arm.neon.vcvtpu
llvm.arm.neon.vhadds
llvm.arm.neon.vhaddu
llvm.arm.neon.vhsubs
llvm.arm.neon.vhsubu
llvm.arm.neon.vld1
llvm.arm.neon.vld1x2
llvm.arm.neon.vld1x3
llvm.arm.neon.vld1x4
llvm.arm.neon.vld2
llvm.arm.neon.vld2dup
llvm.arm.neon.vld2lane
llvm.arm.neon.vld3
llvm.arm.neon.vld3dup
llvm.arm.neon.vld3lane
llvm.arm.neon.vld4
llvm.arm.neon.vld4dup
llvm.arm.neon.vld4lane
llvm.arm.neon.vmaxnm
llvm.arm.neon.vmaxs
llvm.arm.neon.vmaxu
llvm.arm.neon.vminnm
llvm.arm.neon.vmins
llvm.arm.neon.vminu
llvm.arm.neon.vmullp
llvm.arm.neon.vmulls
llvm.arm.neon.vmullu
llvm.arm.neon.vmulp
llvm.arm.neon.vpadals
llvm.arm.neon.vpadalu
llvm.arm.neon.vpadd
llvm.arm.neon.vpaddls
llvm.arm.neon.vpaddlu
llvm.arm.neon.vpmaxs
llvm.arm.neon.vpmaxu
llvm.arm.neon.vpmins
llvm.arm.neon.vpminu
llvm.arm.neon.vqabs
llvm.arm.neon.vqdmulh
llvm.arm.neon.vqdmull
llvm.arm.neon.vqmovns
llvm.arm.neon.vqmovnsu
llvm.arm.neon.vqmovnu
llvm.arm.neon.vqneg
llvm.arm.neon.vqrdmulh
llvm.arm.neon.vqrshiftns
llvm.arm.neon.vqrshiftnsu
llvm.arm.neon.vqrshiftnu
llvm.arm.neon.vqrshifts
llvm.arm.neon.vqrshiftu
llvm.arm.neon.vqshiftns
llvm.arm.neon.vqshiftnsu
llvm.arm.neon.vqshiftnu
llvm.arm.neon.vqshifts
llvm.arm.neon.vqshiftsu
llvm.arm.neon.vqshiftu
llvm.arm.neon.vraddhn
llvm.arm.neon.vrecpe
llvm.arm.neon.vrecps
llvm.arm.neon.vrhadds
llvm.arm.neon.vrhaddu
llvm.arm.neon.vrinta
llvm.arm.neon.vrintm
llvm.arm.neon.vrintn
llvm.arm.neon.vrintp
llvm.arm.neon.vrintx
llvm.arm.neon.vrintz
llvm.arm.neon.vrshiftn
llvm.arm.neon.vrshifts
llvm.arm.neon.vrshiftu
llvm.arm.neon.vrsqrte
llvm.arm.neon.vrsqrts
llvm.arm.neon.vrsubhn
llvm.arm.neon.vshiftins
llvm.arm.neon.vshifts
llvm.arm.neon.vshiftu
llvm.arm.neon.vst1
llvm.arm.neon.vst1x2
llvm.arm.neon.vst1x3
llvm.arm.neon.vst1x4
llvm.arm.neon.vst2
llvm.arm.neon.vst2lane
llvm.arm.neon.vst3
llvm.arm.neon.vst3lane
llvm.arm.neon.vst4
llvm.arm.neon.vst4lane
llvm.arm.neon.vtbl1
llvm.arm.neon.vtbl2
llvm.arm.neon.vtbl3
llvm.arm.neon.vtbl4
llvm.arm.neon.vtbx1
llvm.arm.neon.vtbx2
llvm.arm.neon.vtbx3
llvm.arm.neon.vtbx4
llvm.arm.qadd
llvm.arm.qadd16
llvm.arm.qadd8
llvm.arm.qasx
llvm.arm.qsax
llvm.arm.qsub
llvm.arm.qsub16
llvm.arm.qsub8
llvm.arm.sadd16
llvm.arm.sadd8
llvm.arm.sasx
llvm.arm.sel
llvm.arm.set.fpscr
llvm.arm.shadd16
llvm.arm.shadd8
llvm.arm.shasx
llvm.arm.shsax
llvm.arm.shsub16
llvm.arm.shsub8
llvm.arm.smlabb
llvm.arm.smlabt
llvm.arm.smlad
llvm.arm.smladx
llvm.arm.smlald
llvm.arm.smlaldx
llvm.arm.smlatb
llvm.arm.smlatt
llvm.arm.smlawb
llvm.arm.smlawt
llvm.arm.smlsd
llvm.arm.smlsdx
llvm.arm.smlsld
llvm.arm.smlsldx
llvm.arm.smuad
llvm.arm.smuadx
llvm.arm.smulbb
llvm.arm.smulbt
llvm.arm.smultb
llvm.arm.smultt
llvm.arm.smulwb
llvm.arm.smulwt
llvm.arm.smusd
llvm.arm.smusdx
llvm.arm.space
llvm.arm.ssat
llvm.arm.ssat16
llvm.arm.ssax
llvm.arm.ssub16
llvm.arm.ssub8
llvm.arm.stc
llvm.arm.stc2
llvm.arm.stc2l
llvm.arm.stcl
llvm.arm.stlex
llvm.arm.stlexd
llvm.arm.strex
llvm.arm.strexd
llvm.arm.sxtab16
llvm.arm.sxtb16
llvm.arm.uadd16
llvm.arm.uadd8
llvm.arm.uasx
llvm.arm.uhadd16
llvm.arm.uhadd8
llvm.arm.uhasx
llvm.arm.uhsax
llvm.arm.uhsub16
llvm.arm.uhsub8
llvm.arm.undefined
llvm.arm.uqadd16
llvm.arm.uqadd8
llvm.arm.uqasx
llvm.arm.uqsax
llvm.arm.uqsub16
llvm.arm.uqsub8
llvm.arm.usad8
llvm.arm.usada8
llvm.arm.usat
llvm.arm.usat16
llvm.arm.usax
llvm.arm.usub16
llvm.arm.usub8
llvm.arm.uxtab16
llvm.arm.uxtb16
llvm.arm.vcvtr
llvm.arm.vcvtru
llvm.bpf.btf.type.id
llvm.bpf.load.byte
llvm.bpf.load.half
llvm.bpf.load.word
llvm.bpf.passthrough
llvm.bpf.preserve.enum.value
llvm.bpf.preserve.field.info
llvm.bpf.preserve.type.info
llvm.bpf.pseudo
llvm.hexagon.A2.abs
llvm.hexagon.A2.absp
llvm.hexagon.A2.abssat
llvm.hexagon.A2.add
llvm.hexagon.A2.addh.h16.hh
llvm.hexagon.A2.addh.h16.hl
llvm.hexagon.A2.addh.h16.lh
llvm.hexagon.A2.addh.h16.ll
llvm.hexagon.A2.addh.h16.sat.hh
llvm.hexagon.A2.addh.h16.sat.hl
llvm.hexagon.A2.addh.h16.sat.lh
llvm.hexagon.A2.addh.h16.sat.ll
llvm.hexagon.A2.addh.l16.hl
llvm.hexagon.A2.addh.l16.ll
llvm.hexagon.A2.addh.l16.sat.hl
llvm.hexagon.A2.addh.l16.sat.ll
llvm.hexagon.A2.addi
llvm.hexagon.A2.addp
llvm.hexagon.A2.addpsat
llvm.hexagon.A2.addsat
llvm.hexagon.A2.addsp
llvm.hexagon.A2.and
llvm.hexagon.A2.andir
llvm.hexagon.A2.andp
llvm.hexagon.A2.aslh
llvm.hexagon.A2.asrh
llvm.hexagon.A2.combine.hh
llvm.hexagon.A2.combine.hl
llvm.hexagon.A2.combine.lh
llvm.hexagon.A2.combine.ll
llvm.hexagon.A2.combineii
llvm.hexagon.A2.combinew
llvm.hexagon.A2.max
llvm.hexagon.A2.maxp
llvm.hexagon.A2.maxu
llvm.hexagon.A2.maxup
llvm.hexagon.A2.min
llvm.hexagon.A2.minp
llvm.hexagon.A2.minu
llvm.hexagon.A2.minup
llvm.hexagon.A2.neg
llvm.hexagon.A2.negp
llvm.hexagon.A2.negsat
llvm.hexagon.A2.not
llvm.hexagon.A2.notp
llvm.hexagon.A2.or
llvm.hexagon.A2.orir
llvm.hexagon.A2.orp
llvm.hexagon.A2.roundsat
llvm.hexagon.A2.sat
llvm.hexagon.A2.satb
llvm.hexagon.A2.sath
llvm.hexagon.A2.satub
llvm.hexagon.A2.satuh
llvm.hexagon.A2.sub
llvm.hexagon.A2.subh.h16.hh
llvm.hexagon.A2.subh.h16.hl
llvm.hexagon.A2.subh.h16.lh
llvm.hexagon.A2.subh.h16.ll
llvm.hexagon.A2.subh.h16.sat.hh
llvm.hexagon.A2.subh.h16.sat.hl
llvm.hexagon.A2.subh.h16.sat.lh
llvm.hexagon.A2.subh.h16.sat.ll
llvm.hexagon.A2.subh.l16.hl
llvm.hexagon.A2.subh.l16.ll
llvm.hexagon.A2.subh.l16.sat.hl
llvm.hexagon.A2.subh.l16.sat.ll
llvm.hexagon.A2.subp
llvm.hexagon.A2.subri
llvm.hexagon.A2.subsat
llvm.hexagon.A2.svaddh
llvm.hexagon.A2.svaddhs
llvm.hexagon.A2.svadduhs
llvm.hexagon.A2.svavgh
llvm.hexagon.A2.svavghs
llvm.hexagon.A2.svnavgh
llvm.hexagon.A2.svsubh
llvm.hexagon.A2.svsubhs
llvm.hexagon.A2.svsubuhs
llvm.hexagon.A2.swiz
llvm.hexagon.A2.sxtb
llvm.hexagon.A2.sxth
llvm.hexagon.A2.sxtw
llvm.hexagon.A2.tfr
llvm.hexagon.A2.tfrih
llvm.hexagon.A2.tfril
llvm.hexagon.A2.tfrp
llvm.hexagon.A2.tfrpi
llvm.hexagon.A2.tfrsi
llvm.hexagon.A2.vabsh
llvm.hexagon.A2.vabshsat
llvm.hexagon.A2.vabsw
llvm.hexagon.A2.vabswsat
llvm.hexagon.A2.vaddb.map
llvm.hexagon.A2.vaddh
llvm.hexagon.A2.vaddhs
llvm.hexagon.A2.vaddub
llvm.hexagon.A2.vaddubs
llvm.hexagon.A2.vadduhs
llvm.hexagon.A2.vaddw
llvm.hexagon.A2.vaddws
llvm.hexagon.A2.vavgh
llvm.hexagon.A2.vavghcr
llvm.hexagon.A2.vavghr
llvm.hexagon.A2.vavgub
llvm.hexagon.A2.vavgubr
llvm.hexagon.A2.vavguh
llvm.hexagon.A2.vavguhr
llvm.hexagon.A2.vavguw
llvm.hexagon.A2.vavguwr
llvm.hexagon.A2.vavgw
llvm.hexagon.A2.vavgwcr
llvm.hexagon.A2.vavgwr
llvm.hexagon.A2.vcmpbeq
llvm.hexagon.A2.vcmpbgtu
llvm.hexagon.A2.vcmpheq
llvm.hexagon.A2.vcmphgt
llvm.hexagon.A2.vcmphgtu
llvm.hexagon.A2.vcmpweq
llvm.hexagon.A2.vcmpwgt
llvm.hexagon.A2.vcmpwgtu
llvm.hexagon.A2.vconj
llvm.hexagon.A2.vmaxb
llvm.hexagon.A2.vmaxh
llvm.hexagon.A2.vmaxub
llvm.hexagon.A2.vmaxuh
llvm.hexagon.A2.vmaxuw
llvm.hexagon.A2.vmaxw
llvm.hexagon.A2.vminb
llvm.hexagon.A2.vminh
llvm.hexagon.A2.vminub
llvm.hexagon.A2.vminuh
llvm.hexagon.A2.vminuw
llvm.hexagon.A2.vminw
llvm.hexagon.A2.vnavgh
llvm.hexagon.A2.vnavghcr
llvm.hexagon.A2.vnavghr
llvm.hexagon.A2.vnavgw
llvm.hexagon.A2.vnavgwcr
llvm.hexagon.A2.vnavgwr
llvm.hexagon.A2.vraddub
llvm.hexagon.A2.vraddub.acc
llvm.hexagon.A2.vrsadub
llvm.hexagon.A2.vrsadub.acc
llvm.hexagon.A2.vsubb.map
llvm.hexagon.A2.vsubh
llvm.hexagon.A2.vsubhs
llvm.hexagon.A2.vsubub
llvm.hexagon.A2.vsububs
llvm.hexagon.A2.vsubuhs
llvm.hexagon.A2.vsubw
llvm.hexagon.A2.vsubws
llvm.hexagon.A2.xor
llvm.hexagon.A2.xorp
llvm.hexagon.A2.zxtb
llvm.hexagon.A2.zxth
llvm.hexagon.A4.andn
llvm.hexagon.A4.andnp
llvm.hexagon.A4.bitsplit
llvm.hexagon.A4.bitspliti
llvm.hexagon.A4.boundscheck
llvm.hexagon.A4.cmpbeq
llvm.hexagon.A4.cmpbeqi
llvm.hexagon.A4.cmpbgt
llvm.hexagon.A4.cmpbgti
llvm.hexagon.A4.cmpbgtu
llvm.hexagon.A4.cmpbgtui
llvm.hexagon.A4.cmpheq
llvm.hexagon.A4.cmpheqi
llvm.hexagon.A4.cmphgt
llvm.hexagon.A4.cmphgti
llvm.hexagon.A4.cmphgtu
llvm.hexagon.A4.cmphgtui
llvm.hexagon.A4.combineir
llvm.hexagon.A4.combineri
llvm.hexagon.A4.cround.ri
llvm.hexagon.A4.cround.rr
llvm.hexagon.A4.modwrapu
llvm.hexagon.A4.orn
llvm.hexagon.A4.ornp
llvm.hexagon.A4.rcmpeq
llvm.hexagon.A4.rcmpeqi
llvm.hexagon.A4.rcmpneq
llvm.hexagon.A4.rcmpneqi
llvm.hexagon.A4.round.ri
llvm.hexagon.A4.round.ri.sat
llvm.hexagon.A4.round.rr
llvm.hexagon.A4.round.rr.sat
llvm.hexagon.A4.tlbmatch
llvm.hexagon.A4.vcmpbeq.any
llvm.hexagon.A4.vcmpbeqi
llvm.hexagon.A4.vcmpbgt
llvm.hexagon.A4.vcmpbgti
llvm.hexagon.A4.vcmpbgtui
llvm.hexagon.A4.vcmpheqi
llvm.hexagon.A4.vcmphgti
llvm.hexagon.A4.vcmphgtui
llvm.hexagon.A4.vcmpweqi
llvm.hexagon.A4.vcmpwgti
llvm.hexagon.A4.vcmpwgtui
llvm.hexagon.A4.vrmaxh
llvm.hexagon.A4.vrmaxuh
llvm.hexagon.A4.vrmaxuw
llvm.hexagon.A4.vrmaxw
llvm.hexagon.A4.vrminh
llvm.hexagon.A4.vrminuh
llvm.hexagon.A4.vrminuw
llvm.hexagon.A4.vrminw
llvm.hexagon.A5.vaddhubs
llvm.hexagon.A6.vcmpbeq.notany
llvm.hexagon.A7.clip
llvm.hexagon.A7.croundd.ri
llvm.hexagon.A7.croundd.rr
llvm.hexagon.A7.vclip
llvm.hexagon.C2.all8
llvm.hexagon.C2.and
llvm.hexagon.C2.andn
llvm.hexagon.C2.any8
llvm.hexagon.C2.bitsclr
llvm.hexagon.C2.bitsclri
llvm.hexagon.C2.bitsset
llvm.hexagon.C2.cmpeq
llvm.hexagon.C2.cmpeqi
llvm.hexagon.C2.cmpeqp
llvm.hexagon.C2.cmpgei
llvm.hexagon.C2.cmpgeui
llvm.hexagon.C2.cmpgt
llvm.hexagon.C2.cmpgti
llvm.hexagon.C2.cmpgtp
llvm.hexagon.C2.cmpgtu
llvm.hexagon.C2.cmpgtui
llvm.hexagon.C2.cmpgtup
llvm.hexagon.C2.cmplt
llvm.hexagon.C2.cmpltu
llvm.hexagon.C2.mask
llvm.hexagon.C2.mux
llvm.hexagon.C2.muxii
llvm.hexagon.C2.muxir
llvm.hexagon.C2.muxri
llvm.hexagon.C2.not
llvm.hexagon.C2.or
llvm.hexagon.C2.orn
llvm.hexagon.C2.pxfer.map
llvm.hexagon.C2.tfrpr
llvm.hexagon.C2.tfrrp
llvm.hexagon.C2.vitpack
llvm.hexagon.C2.vmux
llvm.hexagon.C2.xor
llvm.hexagon.C4.and.and
llvm.hexagon.C4.and.andn
llvm.hexagon.C4.and.or
llvm.hexagon.C4.and.orn
llvm.hexagon.C4.cmplte
llvm.hexagon.C4.cmpltei
llvm.hexagon.C4.cmplteu
llvm.hexagon.C4.cmplteui
llvm.hexagon.C4.cmpneq
llvm.hexagon.C4.cmpneqi
llvm.hexagon.C4.fastcorner9
llvm.hexagon.C4.fastcorner9.not
llvm.hexagon.C4.nbitsclr
llvm.hexagon.C4.nbitsclri
llvm.hexagon.C4.nbitsset
llvm.hexagon.C4.or.and
llvm.hexagon.C4.or.andn
llvm.hexagon.C4.or.or
llvm.hexagon.C4.or.orn
llvm.hexagon.F2.conv.d2df
llvm.hexagon.F2.conv.d2sf
llvm.hexagon.F2.conv.df2d
llvm.hexagon.F2.conv.df2d.chop
llvm.hexagon.F2.conv.df2sf
llvm.hexagon.F2.conv.df2ud
llvm.hexagon.F2.conv.df2ud.chop
llvm.hexagon.F2.conv.df2uw
llvm.hexagon.F2.conv.df2uw.chop
llvm.hexagon.F2.conv.df2w
llvm.hexagon.F2.conv.df2w.chop
llvm.hexagon.F2.conv.sf2d
llvm.hexagon.F2.conv.sf2d.chop
llvm.hexagon.F2.conv.sf2df
llvm.hexagon.F2.conv.sf2ud
llvm.hexagon.F2.conv.sf2ud.chop
llvm.hexagon.F2.conv.sf2uw
llvm.hexagon.F2.conv.sf2uw.chop
llvm.hexagon.F2.conv.sf2w
llvm.hexagon.F2.conv.sf2w.chop
llvm.hexagon.F2.conv.ud2df
llvm.hexagon.F2.conv.ud2sf
llvm.hexagon.F2.conv.uw2df
llvm.hexagon.F2.conv.uw2sf
llvm.hexagon.F2.conv.w2df
llvm.hexagon.F2.conv.w2sf
llvm.hexagon.F2.dfadd
llvm.hexagon.F2.dfclass
llvm.hexagon.F2.dfcmpeq
llvm.hexagon.F2.dfcmpge
llvm.hexagon.F2.dfcmpgt
llvm.hexagon.F2.dfcmpuo
llvm.hexagon.F2.dfimm.n
llvm.hexagon.F2.dfimm.p
llvm.hexagon.F2.dfmax
llvm.hexagon.F2.dfmin
llvm.hexagon.F2.dfmpyfix
llvm.hexagon.F2.dfmpyhh
llvm.hexagon.F2.dfmpylh
llvm.hexagon.F2.dfmpyll
llvm.hexagon.F2.dfsub
llvm.hexagon.F2.sfadd
llvm.hexagon.F2.sfclass
llvm.hexagon.F2.sfcmpeq
llvm.hexagon.F2.sfcmpge
llvm.hexagon.F2.sfcmpgt
llvm.hexagon.F2.sfcmpuo
llvm.hexagon.F2.sffixupd
llvm.hexagon.F2.sffixupn
llvm.hexagon.F2.sffixupr
llvm.hexagon.F2.sffma
llvm.hexagon.F2.sffma.lib
llvm.hexagon.F2.sffma.sc
llvm.hexagon.F2.sffms
llvm.hexagon.F2.sffms.lib
llvm.hexagon.F2.sfimm.n
llvm.hexagon.F2.sfimm.p
llvm.hexagon.F2.sfmax
llvm.hexagon.F2.sfmin
llvm.hexagon.F2.sfmpy
llvm.hexagon.F2.sfsub
llvm.hexagon.L2.loadrb.pbr
llvm.hexagon.L2.loadrb.pci
llvm.hexagon.L2.loadrb.pcr
llvm.hexagon.L2.loadrd.pbr
llvm.hexagon.L2.loadrd.pci
llvm.hexagon.L2.loadrd.pcr
llvm.hexagon.L2.loadrh.pbr
llvm.hexagon.L2.loadrh.pci
llvm.hexagon.L2.loadrh.pcr
llvm.hexagon.L2.loadri.pbr
llvm.hexagon.L2.loadri.pci
llvm.hexagon.L2.loadri.pcr
llvm.hexagon.L2.loadrub.pbr
llvm.hexagon.L2.loadrub.pci
llvm.hexagon.L2.loadrub.pcr
llvm.hexagon.L2.loadruh.pbr
llvm.hexagon.L2.loadruh.pci
llvm.hexagon.L2.loadruh.pcr
llvm.hexagon.L2.loadw.locked
llvm.hexagon.L4.loadd.locked
llvm.hexagon.M2.acci
llvm.hexagon.M2.accii
llvm.hexagon.M2.cmaci.s0
llvm.hexagon.M2.cmacr.s0
llvm.hexagon.M2.cmacs.s0
llvm.hexagon.M2.cmacs.s1
llvm.hexagon.M2.cmacsc.s0
llvm.hexagon.M2.cmacsc.s1
llvm.hexagon.M2.cmpyi.s0
llvm.hexagon.M2.cmpyr.s0
llvm.hexagon.M2.cmpyrs.s0
llvm.hexagon.M2.cmpyrs.s1
llvm.hexagon.M2.cmpyrsc.s0
llvm.hexagon.M2.cmpyrsc.s1
llvm.hexagon.M2.cmpys.s0
llvm.hexagon.M2.cmpys.s1
llvm.hexagon.M2.cmpysc.s0
llvm.hexagon.M2.cmpysc.s1
llvm.hexagon.M2.cnacs.s0
llvm.hexagon.M2.cnacs.s1
llvm.hexagon.M2.cnacsc.s0
llvm.hexagon.M2.cnacsc.s1
llvm.hexagon.M2.dpmpyss.acc.s0
llvm.hexagon.M2.dpmpyss.nac.s0
llvm.hexagon.M2.dpmpyss.rnd.s0
llvm.hexagon.M2.dpmpyss.s0
llvm.hexagon.M2.dpmpyuu.acc.s0
llvm.hexagon.M2.dpmpyuu.nac.s0
llvm.hexagon.M2.dpmpyuu.s0
llvm.hexagon.M2.hmmpyh.rs1
llvm.hexagon.M2.hmmpyh.s1
llvm.hexagon.M2.hmmpyl.rs1
llvm.hexagon.M2.hmmpyl.s1
llvm.hexagon.M2.maci
llvm.hexagon.M2.macsin
llvm.hexagon.M2.macsip
llvm.hexagon.M2.mmachs.rs0
llvm.hexagon.M2.mmachs.rs1
llvm.hexagon.M2.mmachs.s0
llvm.hexagon.M2.mmachs.s1
llvm.hexagon.M2.mmacls.rs0
llvm.hexagon.M2.mmacls.rs1
llvm.hexagon.M2.mmacls.s0
llvm.hexagon.M2.mmacls.s1
llvm.hexagon.M2.mmacuhs.rs0
llvm.hexagon.M2.mmacuhs.rs1
llvm.hexagon.M2.mmacuhs.s0
llvm.hexagon.M2.mmacuhs.s1
llvm.hexagon.M2.mmaculs.rs0
llvm.hexagon.M2.mmaculs.rs1
llvm.hexagon.M2.mmaculs.s0
llvm.hexagon.M2.mmaculs.s1
llvm.hexagon.M2.mmpyh.rs0
llvm.hexagon.M2.mmpyh.rs1
llvm.hexagon.M2.mmpyh.s0
llvm.hexagon.M2.mmpyh.s1
llvm.hexagon.M2.mmpyl.rs0
llvm.hexagon.M2.mmpyl.rs1
llvm.hexagon.M2.mmpyl.s0
llvm.hexagon.M2.mmpyl.s1
llvm.hexagon.M2.mmpyuh.rs0
llvm.hexagon.M2.mmpyuh.rs1
llvm.hexagon.M2.mmpyuh.s0
llvm.hexagon.M2.mmpyuh.s1
llvm.hexagon.M2.mmpyul.rs0
llvm.hexagon.M2.mmpyul.rs1
llvm.hexagon.M2.mmpyul.s0
llvm.hexagon.M2.mmpyul.s1
llvm.hexagon.M2.mnaci
llvm.hexagon.M2.mpy.acc.hh.s0
llvm.hexagon.M2.mpy.acc.hh.s1
llvm.hexagon.M2.mpy.acc.hl.s0
llvm.hexagon.M2.mpy.acc.hl.s1
llvm.hexagon.M2.mpy.acc.lh.s0
llvm.hexagon.M2.mpy.acc.lh.s1
llvm.hexagon.M2.mpy.acc.ll.s0
llvm.hexagon.M2.mpy.acc.ll.s1
llvm.hexagon.M2.mpy.acc.sat.hh.s0
llvm.hexagon.M2.mpy.acc.sat.hh.s1
llvm.hexagon.M2.mpy.acc.sat.hl.s0
llvm.hexagon.M2.mpy.acc.sat.hl.s1
llvm.hexagon.M2.mpy.acc.sat.lh.s0
llvm.hexagon.M2.mpy.acc.sat.lh.s1
llvm.hexagon.M2.mpy.acc.sat.ll.s0
llvm.hexagon.M2.mpy.acc.sat.ll.s1
llvm.hexagon.M2.mpy.hh.s0
llvm.hexagon.M2.mpy.hh.s1
llvm.hexagon.M2.mpy.hl.s0
llvm.hexagon.M2.mpy.hl.s1
llvm.hexagon.M2.mpy.lh.s0
llvm.hexagon.M2.mpy.lh.s1
llvm.hexagon.M2.mpy.ll.s0
llvm.hexagon.M2.mpy.ll.s1
llvm.hexagon.M2.mpy.nac.hh.s0
llvm.hexagon.M2.mpy.nac.hh.s1
llvm.hexagon.M2.mpy.nac.hl.s0
llvm.hexagon.M2.mpy.nac.hl.s1
llvm.hexagon.M2.mpy.nac.lh.s0
llvm.hexagon.M2.mpy.nac.lh.s1
llvm.hexagon.M2.mpy.nac.ll.s0
llvm.hexagon.M2.mpy.nac.ll.s1
llvm.hexagon.M2.mpy.nac.sat.hh.s0
llvm.hexagon.M2.mpy.nac.sat.hh.s1
llvm.hexagon.M2.mpy.nac.sat.hl.s0
llvm.hexagon.M2.mpy.nac.sat.hl.s1
llvm.hexagon.M2.mpy.nac.sat.lh.s0
llvm.hexagon.M2.mpy.nac.sat.lh.s1
llvm.hexagon.M2.mpy.nac.sat.ll.s0
llvm.hexagon.M2.mpy.nac.sat.ll.s1
llvm.hexagon.M2.mpy.rnd.hh.s0
llvm.hexagon.M2.mpy.rnd.hh.s1
llvm.hexagon.M2.mpy.rnd.hl.s0
llvm.hexagon.M2.mpy.rnd.hl.s1
llvm.hexagon.M2.mpy.rnd.lh.s0
llvm.hexagon.M2.mpy.rnd.lh.s1
llvm.hexagon.M2.mpy.rnd.ll.s0
llvm.hexagon.M2.mpy.rnd.ll.s1
llvm.hexagon.M2.mpy.sat.hh.s0
llvm.hexagon.M2.mpy.sat.hh.s1
llvm.hexagon.M2.mpy.sat.hl.s0
llvm.hexagon.M2.mpy.sat.hl.s1
llvm.hexagon.M2.mpy.sat.lh.s0
llvm.hexagon.M2.mpy.sat.lh.s1
llvm.hexagon.M2.mpy.sat.ll.s0
llvm.hexagon.M2.mpy.sat.ll.s1
llvm.hexagon.M2.mpy.sat.rnd.hh.s0
llvm.hexagon.M2.mpy.sat.rnd.hh.s1
llvm.hexagon.M2.mpy.sat.rnd.hl.s0
llvm.hexagon.M2.mpy.sat.rnd.hl.s1
llvm.hexagon.M2.mpy.sat.rnd.lh.s0
llvm.hexagon.M2.mpy.sat.rnd.lh.s1
llvm.hexagon.M2.mpy.sat.rnd.ll.s0
llvm.hexagon.M2.mpy.sat.rnd.ll.s1
llvm.hexagon.M2.mpy.up
llvm.hexagon.M2.mpy.up.s1
llvm.hexagon.M2.mpy.up.s1.sat
llvm.hexagon.M2.mpyd.acc.hh.s0
llvm.hexagon.M2.mpyd.acc.hh.s1
llvm.hexagon.M2.mpyd.acc.hl.s0
llvm.hexagon.M2.mpyd.acc.hl.s1
llvm.hexagon.M2.mpyd.acc.lh.s0
llvm.hexagon.M2.mpyd.acc.lh.s1
llvm.hexagon.M2.mpyd.acc.ll.s0
llvm.hexagon.M2.mpyd.acc.ll.s1
llvm.hexagon.M2.mpyd.hh.s0
llvm.hexagon.M2.mpyd.hh.s1
llvm.hexagon.M2.mpyd.hl.s0
llvm.hexagon.M2.mpyd.hl.s1
llvm.hexagon.M2.mpyd.lh.s0
llvm.hexagon.M2.mpyd.lh.s1
llvm.hexagon.M2.mpyd.ll.s0
llvm.hexagon.M2.mpyd.ll.s1
llvm.hexagon.M2.mpyd.nac.hh.s0
llvm.hexagon.M2.mpyd.nac.hh.s1
llvm.hexagon.M2.mpyd.nac.hl.s0
llvm.hexagon.M2.mpyd.nac.hl.s1
llvm.hexagon.M2.mpyd.nac.lh.s0
llvm.hexagon.M2.mpyd.nac.lh.s1
llvm.hexagon.M2.mpyd.nac.ll.s0
llvm.hexagon.M2.mpyd.nac.ll.s1
llvm.hexagon.M2.mpyd.rnd.hh.s0
llvm.hexagon.M2.mpyd.rnd.hh.s1
llvm.hexagon.M2.mpyd.rnd.hl.s0
llvm.hexagon.M2.mpyd.rnd.hl.s1
llvm.hexagon.M2.mpyd.rnd.lh.s0
llvm.hexagon.M2.mpyd.rnd.lh.s1
llvm.hexagon.M2.mpyd.rnd.ll.s0
llvm.hexagon.M2.mpyd.rnd.ll.s1
llvm.hexagon.M2.mpyi
llvm.hexagon.M2.mpysmi
llvm.hexagon.M2.mpysu.up
llvm.hexagon.M2.mpyu.acc.hh.s0
llvm.hexagon.M2.mpyu.acc.hh.s1
llvm.hexagon.M2.mpyu.acc.hl.s0
llvm.hexagon.M2.mpyu.acc.hl.s1
llvm.hexagon.M2.mpyu.acc.lh.s0
llvm.hexagon.M2.mpyu.acc.lh.s1
llvm.hexagon.M2.mpyu.acc.ll.s0
llvm.hexagon.M2.mpyu.acc.ll.s1
llvm.hexagon.M2.mpyu.hh.s0
llvm.hexagon.M2.mpyu.hh.s1
llvm.hexagon.M2.mpyu.hl.s0
llvm.hexagon.M2.mpyu.hl.s1
llvm.hexagon.M2.mpyu.lh.s0
llvm.hexagon.M2.mpyu.lh.s1
llvm.hexagon.M2.mpyu.ll.s0
llvm.hexagon.M2.mpyu.ll.s1
llvm.hexagon.M2.mpyu.nac.hh.s0
llvm.hexagon.M2.mpyu.nac.hh.s1
llvm.hexagon.M2.mpyu.nac.hl.s0
llvm.hexagon.M2.mpyu.nac.hl.s1
llvm.hexagon.M2.mpyu.nac.lh.s0
llvm.hexagon.M2.mpyu.nac.lh.s1
llvm.hexagon.M2.mpyu.nac.ll.s0
llvm.hexagon.M2.mpyu.nac.ll.s1
llvm.hexagon.M2.mpyu.up
llvm.hexagon.M2.mpyud.acc.hh.s0
llvm.hexagon.M2.mpyud.acc.hh.s1
llvm.hexagon.M2.mpyud.acc.hl.s0
llvm.hexagon.M2.mpyud.acc.hl.s1
llvm.hexagon.M2.mpyud.acc.lh.s0
llvm.hexagon.M2.mpyud.acc.lh.s1
llvm.hexagon.M2.mpyud.acc.ll.s0
llvm.hexagon.M2.mpyud.acc.ll.s1
llvm.hexagon.M2.mpyud.hh.s0
llvm.hexagon.M2.mpyud.hh.s1
llvm.hexagon.M2.mpyud.hl.s0
llvm.hexagon.M2.mpyud.hl.s1
llvm.hexagon.M2.mpyud.lh.s0
llvm.hexagon.M2.mpyud.lh.s1
llvm.hexagon.M2.mpyud.ll.s0
llvm.hexagon.M2.mpyud.ll.s1
llvm.hexagon.M2.mpyud.nac.hh.s0
llvm.hexagon.M2.mpyud.nac.hh.s1
llvm.hexagon.M2.mpyud.nac.hl.s0
llvm.hexagon.M2.mpyud.nac.hl.s1
llvm.hexagon.M2.mpyud.nac.lh.s0
llvm.hexagon.M2.mpyud.nac.lh.s1
llvm.hexagon.M2.mpyud.nac.ll.s0
llvm.hexagon.M2.mpyud.nac.ll.s1
llvm.hexagon.M2.mpyui
llvm.hexagon.M2.nacci
llvm.hexagon.M2.naccii
llvm.hexagon.M2.subacc
llvm.hexagon.M2.vabsdiffh
llvm.hexagon.M2.vabsdiffw
llvm.hexagon.M2.vcmac.s0.sat.i
llvm.hexagon.M2.vcmac.s0.sat.r
llvm.hexagon.M2.vcmpy.s0.sat.i
llvm.hexagon.M2.vcmpy.s0.sat.r
llvm.hexagon.M2.vcmpy.s1.sat.i
llvm.hexagon.M2.vcmpy.s1.sat.r
llvm.hexagon.M2.vdmacs.s0
llvm.hexagon.M2.vdmacs.s1
llvm.hexagon.M2.vdmpyrs.s0
llvm.hexagon.M2.vdmpyrs.s1
llvm.hexagon.M2.vdmpys.s0
llvm.hexagon.M2.vdmpys.s1
llvm.hexagon.M2.vmac2
llvm.hexagon.M2.vmac2es
llvm.hexagon.M2.vmac2es.s0
llvm.hexagon.M2.vmac2es.s1
llvm.hexagon.M2.vmac2s.s0
llvm.hexagon.M2.vmac2s.s1
llvm.hexagon.M2.vmac2su.s0
llvm.hexagon.M2.vmac2su.s1
llvm.hexagon.M2.vmpy2es.s0
llvm.hexagon.M2.vmpy2es.s1
llvm.hexagon.M2.vmpy2s.s0
llvm.hexagon.M2.vmpy2s.s0pack
llvm.hexagon.M2.vmpy2s.s1
llvm.hexagon.M2.vmpy2s.s1pack
llvm.hexagon.M2.vmpy2su.s0
llvm.hexagon.M2.vmpy2su.s1
llvm.hexagon.M2.vraddh
llvm.hexagon.M2.vradduh
llvm.hexagon.M2.vrcmaci.s0
llvm.hexagon.M2.vrcmaci.s0c
llvm.hexagon.M2.vrcmacr.s0
llvm.hexagon.M2.vrcmacr.s0c
llvm.hexagon.M2.vrcmpyi.s0
llvm.hexagon.M2.vrcmpyi.s0c
llvm.hexagon.M2.vrcmpyr.s0
llvm.hexagon.M2.vrcmpyr.s0c
llvm.hexagon.M2.vrcmpys.acc.s1
llvm.hexagon.M2.vrcmpys.s1
llvm.hexagon.M2.vrcmpys.s1rp
llvm.hexagon.M2.vrmac.s0
llvm.hexagon.M2.vrmpy.s0
llvm.hexagon.M2.xor.xacc
llvm.hexagon.M4.and.and
llvm.hexagon.M4.and.andn
llvm.hexagon.M4.and.or
llvm.hexagon.M4.and.xor
llvm.hexagon.M4.cmpyi.wh
llvm.hexagon.M4.cmpyi.whc
llvm.hexagon.M4.cmpyr.wh
llvm.hexagon.M4.cmpyr.whc
llvm.hexagon.M4.mac.up.s1.sat
llvm.hexagon.M4.mpyri.addi
llvm.hexagon.M4.mpyri.addr
llvm.hexagon.M4.mpyri.addr.u2
llvm.hexagon.M4.mpyrr.addi
llvm.hexagon.M4.mpyrr.addr
llvm.hexagon.M4.nac.up.s1.sat
llvm.hexagon.M4.or.and
llvm.hexagon.M4.or.andn
llvm.hexagon.M4.or.or
llvm.hexagon.M4.or.xor
llvm.hexagon.M4.pmpyw
llvm.hexagon.M4.pmpyw.acc
llvm.hexagon.M4.vpmpyh
llvm.hexagon.M4.vpmpyh.acc
llvm.hexagon.M4.vrmpyeh.acc.s0
llvm.hexagon.M4.vrmpyeh.acc.s1
llvm.hexagon.M4.vrmpyeh.s0
llvm.hexagon.M4.vrmpyeh.s1
llvm.hexagon.M4.vrmpyoh.acc.s0
llvm.hexagon.M4.vrmpyoh.acc.s1
llvm.hexagon.M4.vrmpyoh.s0
llvm.hexagon.M4.vrmpyoh.s1
llvm.hexagon.M4.xor.and
llvm.hexagon.M4.xor.andn
llvm.hexagon.M4.xor.or
llvm.hexagon.M4.xor.xacc
llvm.hexagon.M5.vdmacbsu
llvm.hexagon.M5.vdmpybsu
llvm.hexagon.M5.vmacbsu
llvm.hexagon.M5.vmacbuu
llvm.hexagon.M5.vmpybsu
llvm.hexagon.M5.vmpybuu
llvm.hexagon.M5.vrmacbsu
llvm.hexagon.M5.vrmacbuu
llvm.hexagon.M5.vrmpybsu
llvm.hexagon.M5.vrmpybuu
llvm.hexagon.M6.vabsdiffb
llvm.hexagon.M6.vabsdiffub
llvm.hexagon.M7.dcmpyiw
llvm.hexagon.M7.dcmpyiw.acc
llvm.hexagon.M7.dcmpyiwc
llvm.hexagon.M7.dcmpyiwc.acc
llvm.hexagon.M7.dcmpyrw
llvm.hexagon.M7.dcmpyrw.acc
llvm.hexagon.M7.dcmpyrwc
llvm.hexagon.M7.dcmpyrwc.acc
llvm.hexagon.M7.vdmpy
llvm.hexagon.M7.vdmpy.acc
llvm.hexagon.M7.wcmpyiw
llvm.hexagon.M7.wcmpyiw.rnd
llvm.hexagon.M7.wcmpyiwc
llvm.hexagon.M7.wcmpyiwc.rnd
llvm.hexagon.M7.wcmpyrw
llvm.hexagon.M7.wcmpyrw.rnd
llvm.hexagon.M7.wcmpyrwc
llvm.hexagon.M7.wcmpyrwc.rnd
llvm.hexagon.S2.addasl.rrri
llvm.hexagon.S2.asl.i.p
llvm.hexagon.S2.asl.i.p.acc
llvm.hexagon.S2.asl.i.p.and
llvm.hexagon.S2.asl.i.p.nac
llvm.hexagon.S2.asl.i.p.or
llvm.hexagon.S2.asl.i.p.xacc
llvm.hexagon.S2.asl.i.r
llvm.hexagon.S2.asl.i.r.acc
llvm.hexagon.S2.asl.i.r.and
llvm.hexagon.S2.asl.i.r.nac
llvm.hexagon.S2.asl.i.r.or
llvm.hexagon.S2.asl.i.r.sat
llvm.hexagon.S2.asl.i.r.xacc
llvm.hexagon.S2.asl.i.vh
llvm.hexagon.S2.asl.i.vw
llvm.hexagon.S2.asl.r.p
llvm.hexagon.S2.asl.r.p.acc
llvm.hexagon.S2.asl.r.p.and
llvm.hexagon.S2.asl.r.p.nac
llvm.hexagon.S2.asl.r.p.or
llvm.hexagon.S2.asl.r.p.xor
llvm.hexagon.S2.asl.r.r
llvm.hexagon.S2.asl.r.r.acc
llvm.hexagon.S2.asl.r.r.and
llvm.hexagon.S2.asl.r.r.nac
llvm.hexagon.S2.asl.r.r.or
llvm.hexagon.S2.asl.r.r.sat
llvm.hexagon.S2.asl.r.vh
llvm.hexagon.S2.asl.r.vw
llvm.hexagon.S2.asr.i.p
llvm.hexagon.S2.asr.i.p.acc
llvm.hexagon.S2.asr.i.p.and
llvm.hexagon.S2.asr.i.p.nac
llvm.hexagon.S2.asr.i.p.or
llvm.hexagon.S2.asr.i.p.rnd
llvm.hexagon.S2.asr.i.p.rnd.goodsyntax
llvm.hexagon.S2.asr.i.r
llvm.hexagon.S2.asr.i.r.acc
llvm.hexagon.S2.asr.i.r.and
llvm.hexagon.S2.asr.i.r.nac
llvm.hexagon.S2.asr.i.r.or
llvm.hexagon.S2.asr.i.r.rnd
llvm.hexagon.S2.asr.i.r.rnd.goodsyntax
llvm.hexagon.S2.asr.i.svw.trun
llvm.hexagon.S2.asr.i.vh
llvm.hexagon.S2.asr.i.vw
llvm.hexagon.S2.asr.r.p
llvm.hexagon.S2.asr.r.p.acc
llvm.hexagon.S2.asr.r.p.and
llvm.hexagon.S2.asr.r.p.nac
llvm.hexagon.S2.asr.r.p.or
llvm.hexagon.S2.asr.r.p.xor
llvm.hexagon.S2.asr.r.r
llvm.hexagon.S2.asr.r.r.acc
llvm.hexagon.S2.asr.r.r.and
llvm.hexagon.S2.asr.r.r.nac
llvm.hexagon.S2.asr.r.r.or
llvm.hexagon.S2.asr.r.r.sat
llvm.hexagon.S2.asr.r.svw.trun
llvm.hexagon.S2.asr.r.vh
llvm.hexagon.S2.asr.r.vw
llvm.hexagon.S2.brev
llvm.hexagon.S2.brevp
llvm.hexagon.S2.cl0
llvm.hexagon.S2.cl0p
llvm.hexagon.S2.cl1
llvm.hexagon.S2.cl1p
llvm.hexagon.S2.clb
llvm.hexagon.S2.clbnorm
llvm.hexagon.S2.clbp
llvm.hexagon.S2.clrbit.i
llvm.hexagon.S2.clrbit.r
llvm.hexagon.S2.ct0
llvm.hexagon.S2.ct0p
llvm.hexagon.S2.ct1
llvm.hexagon.S2.ct1p
llvm.hexagon.S2.deinterleave
llvm.hexagon.S2.extractu
llvm.hexagon.S2.extractu.rp
llvm.hexagon.S2.extractup
llvm.hexagon.S2.extractup.rp
llvm.hexagon.S2.insert
llvm.hexagon.S2.insert.rp
llvm.hexagon.S2.insertp
llvm.hexagon.S2.insertp.rp
llvm.hexagon.S2.interleave
llvm.hexagon.S2.lfsp
llvm.hexagon.S2.lsl.r.p
llvm.hexagon.S2.lsl.r.p.acc
llvm.hexagon.S2.lsl.r.p.and
llvm.hexagon.S2.lsl.r.p.nac
llvm.hexagon.S2.lsl.r.p.or
llvm.hexagon.S2.lsl.r.p.xor
llvm.hexagon.S2.lsl.r.r
llvm.hexagon.S2.lsl.r.r.acc
llvm.hexagon.S2.lsl.r.r.and
llvm.hexagon.S2.lsl.r.r.nac
llvm.hexagon.S2.lsl.r.r.or
llvm.hexagon.S2.lsl.r.vh
llvm.hexagon.S2.lsl.r.vw
llvm.hexagon.S2.lsr.i.p
llvm.hexagon.S2.lsr.i.p.acc
llvm.hexagon.S2.lsr.i.p.and
llvm.hexagon.S2.lsr.i.p.nac
llvm.hexagon.S2.lsr.i.p.or
llvm.hexagon.S2.lsr.i.p.xacc
llvm.hexagon.S2.lsr.i.r
llvm.hexagon.S2.lsr.i.r.acc
llvm.hexagon.S2.lsr.i.r.and
llvm.hexagon.S2.lsr.i.r.nac
llvm.hexagon.S2.lsr.i.r.or
llvm.hexagon.S2.lsr.i.r.xacc
llvm.hexagon.S2.lsr.i.vh
llvm.hexagon.S2.lsr.i.vw
llvm.hexagon.S2.lsr.r.p
llvm.hexagon.S2.lsr.r.p.acc
llvm.hexagon.S2.lsr.r.p.and
llvm.hexagon.S2.lsr.r.p.nac
llvm.hexagon.S2.lsr.r.p.or
llvm.hexagon.S2.lsr.r.p.xor
llvm.hexagon.S2.lsr.r.r
llvm.hexagon.S2.lsr.r.r.acc
llvm.hexagon.S2.lsr.r.r.and
llvm.hexagon.S2.lsr.r.r.nac
llvm.hexagon.S2.lsr.r.r.or
llvm.hexagon.S2.lsr.r.vh
llvm.hexagon.S2.lsr.r.vw
llvm.hexagon.S2.mask
llvm.hexagon.S2.packhl
llvm.hexagon.S2.parityp
llvm.hexagon.S2.setbit.i
llvm.hexagon.S2.setbit.r
llvm.hexagon.S2.shuffeb
llvm.hexagon.S2.shuffeh
llvm.hexagon.S2.shuffob
llvm.hexagon.S2.shuffoh
llvm.hexagon.S2.storerb.pbr
llvm.hexagon.S2.storerb.pci
llvm.hexagon.S2.storerb.pcr
llvm.hexagon.S2.storerd.pbr
llvm.hexagon.S2.storerd.pci
llvm.hexagon.S2.storerd.pcr
llvm.hexagon.S2.storerf.pbr
llvm.hexagon.S2.storerf.pci
llvm.hexagon.S2.storerf.pcr
llvm.hexagon.S2.storerh.pbr
llvm.hexagon.S2.storerh.pci
llvm.hexagon.S2.storerh.pcr
llvm.hexagon.S2.storeri.pbr
llvm.hexagon.S2.storeri.pci
llvm.hexagon.S2.storeri.pcr
llvm.hexagon.S2.storew.locked
llvm.hexagon.S2.svsathb
llvm.hexagon.S2.svsathub
llvm.hexagon.S2.tableidxb.goodsyntax
llvm.hexagon.S2.tableidxd.goodsyntax
llvm.hexagon.S2.tableidxh.goodsyntax
llvm.hexagon.S2.tableidxw.goodsyntax
llvm.hexagon.S2.togglebit.i
llvm.hexagon.S2.togglebit.r
llvm.hexagon.S2.tstbit.i
llvm.hexagon.S2.tstbit.r
llvm.hexagon.S2.valignib
llvm.hexagon.S2.valignrb
llvm.hexagon.S2.vcnegh
llvm.hexagon.S2.vcrotate
llvm.hexagon.S2.vrcnegh
llvm.hexagon.S2.vrndpackwh
llvm.hexagon.S2.vrndpackwhs
llvm.hexagon.S2.vsathb
llvm.hexagon.S2.vsathb.nopack
llvm.hexagon.S2.vsathub
llvm.hexagon.S2.vsathub.nopack
llvm.hexagon.S2.vsatwh
llvm.hexagon.S2.vsatwh.nopack
llvm.hexagon.S2.vsatwuh
llvm.hexagon.S2.vsatwuh.nopack
llvm.hexagon.S2.vsplatrb
llvm.hexagon.S2.vsplatrh
llvm.hexagon.S2.vspliceib
llvm.hexagon.S2.vsplicerb
llvm.hexagon.S2.vsxtbh
llvm.hexagon.S2.vsxthw
llvm.hexagon.S2.vtrunehb
llvm.hexagon.S2.vtrunewh
llvm.hexagon.S2.vtrunohb
llvm.hexagon.S2.vtrunowh
llvm.hexagon.S2.vzxtbh
llvm.hexagon.S2.vzxthw
llvm.hexagon.S4.addaddi
llvm.hexagon.S4.addi.asl.ri
llvm.hexagon.S4.addi.lsr.ri
llvm.hexagon.S4.andi.asl.ri
llvm.hexagon.S4.andi.lsr.ri
llvm.hexagon.S4.clbaddi
llvm.hexagon.S4.clbpaddi
llvm.hexagon.S4.clbpnorm
llvm.hexagon.S4.extract
llvm.hexagon.S4.extract.rp
llvm.hexagon.S4.extractp
llvm.hexagon.S4.extractp.rp
llvm.hexagon.S4.lsli
llvm.hexagon.S4.ntstbit.i
llvm.hexagon.S4.ntstbit.r
llvm.hexagon.S4.or.andi
llvm.hexagon.S4.or.andix
llvm.hexagon.S4.or.ori
llvm.hexagon.S4.ori.asl.ri
llvm.hexagon.S4.ori.lsr.ri
llvm.hexagon.S4.parity
llvm.hexagon.S4.stored.locked
llvm.hexagon.S4.subaddi
llvm.hexagon.S4.subi.asl.ri
llvm.hexagon.S4.subi.lsr.ri
llvm.hexagon.S4.vrcrotate
llvm.hexagon.S4.vrcrotate.acc
llvm.hexagon.S4.vxaddsubh
llvm.hexagon.S4.vxaddsubhr
llvm.hexagon.S4.vxaddsubw
llvm.hexagon.S4.vxsubaddh
llvm.hexagon.S4.vxsubaddhr
llvm.hexagon.S4.vxsubaddw
llvm.hexagon.S5.asrhub.rnd.sat.goodsyntax
llvm.hexagon.S5.asrhub.sat
llvm.hexagon.S5.popcountp
llvm.hexagon.S5.vasrhrnd.goodsyntax
llvm.hexagon.S6.rol.i.p
llvm.hexagon.S6.rol.i.p.acc
llvm.hexagon.S6.rol.i.p.and
llvm.hexagon.S6.rol.i.p.nac
llvm.hexagon.S6.rol.i.p.or
llvm.hexagon.S6.rol.i.p.xacc
llvm.hexagon.S6.rol.i.r
llvm.hexagon.S6.rol.i.r.acc
llvm.hexagon.S6.rol.i.r.and
llvm.hexagon.S6.rol.i.r.nac
llvm.hexagon.S6.rol.i.r.or
llvm.hexagon.S6.rol.i.r.xacc
llvm.hexagon.S6.vsplatrbp
llvm.hexagon.S6.vtrunehb.ppp
llvm.hexagon.S6.vtrunohb.ppp
llvm.hexagon.V6.extractw
llvm.hexagon.V6.extractw.128B
llvm.hexagon.V6.hi
llvm.hexagon.V6.hi.128B
llvm.hexagon.V6.lo
llvm.hexagon.V6.lo.128B
llvm.hexagon.V6.lvsplatb
llvm.hexagon.V6.lvsplatb.128B
llvm.hexagon.V6.lvsplath
llvm.hexagon.V6.lvsplath.128B
llvm.hexagon.V6.lvsplatw
llvm.hexagon.V6.lvsplatw.128B
llvm.hexagon.V6.pred.and
llvm.hexagon.V6.pred.and.128B
llvm.hexagon.V6.pred.and.n
llvm.hexagon.V6.pred.and.n.128B
llvm.hexagon.V6.pred.not
llvm.hexagon.V6.pred.not.128B
llvm.hexagon.V6.pred.or
llvm.hexagon.V6.pred.or.128B
llvm.hexagon.V6.pred.or.n
llvm.hexagon.V6.pred.or.n.128B
llvm.hexagon.V6.pred.scalar2
llvm.hexagon.V6.pred.scalar2.128B
llvm.hexagon.V6.pred.scalar2v2
llvm.hexagon.V6.pred.scalar2v2.128B
llvm.hexagon.V6.pred.typecast
llvm.hexagon.V6.pred.typecast.128B
llvm.hexagon.V6.pred.xor
llvm.hexagon.V6.pred.xor.128B
llvm.hexagon.V6.shuffeqh
llvm.hexagon.V6.shuffeqh.128B
llvm.hexagon.V6.shuffeqw
llvm.hexagon.V6.shuffeqw.128B
llvm.hexagon.V6.vS32b.nqpred.ai
llvm.hexagon.V6.vS32b.nqpred.ai.128B
llvm.hexagon.V6.vS32b.nt.nqpred.ai
llvm.hexagon.V6.vS32b.nt.nqpred.ai.128B
llvm.hexagon.V6.vS32b.nt.qpred.ai
llvm.hexagon.V6.vS32b.nt.qpred.ai.128B
llvm.hexagon.V6.vS32b.qpred.ai
llvm.hexagon.V6.vS32b.qpred.ai.128B
llvm.hexagon.V6.vabsb
llvm.hexagon.V6.vabsb.128B
llvm.hexagon.V6.vabsb.sat
llvm.hexagon.V6.vabsb.sat.128B
llvm.hexagon.V6.vabsdiffh
llvm.hexagon.V6.vabsdiffh.128B
llvm.hexagon.V6.vabsdiffub
llvm.hexagon.V6.vabsdiffub.128B
llvm.hexagon.V6.vabsdiffuh
llvm.hexagon.V6.vabsdiffuh.128B
llvm.hexagon.V6.vabsdiffw
llvm.hexagon.V6.vabsdiffw.128B
llvm.hexagon.V6.vabsh
llvm.hexagon.V6.vabsh.128B
llvm.hexagon.V6.vabsh.sat
llvm.hexagon.V6.vabsh.sat.128B
llvm.hexagon.V6.vabsw
llvm.hexagon.V6.vabsw.128B
llvm.hexagon.V6.vabsw.sat
llvm.hexagon.V6.vabsw.sat.128B
llvm.hexagon.V6.vaddb
llvm.hexagon.V6.vaddb.128B
llvm.hexagon.V6.vaddb.dv
llvm.hexagon.V6.vaddb.dv.128B
llvm.hexagon.V6.vaddbnq
llvm.hexagon.V6.vaddbnq.128B
llvm.hexagon.V6.vaddbq
llvm.hexagon.V6.vaddbq.128B
llvm.hexagon.V6.vaddbsat
llvm.hexagon.V6.vaddbsat.128B
llvm.hexagon.V6.vaddbsat.dv
llvm.hexagon.V6.vaddbsat.dv.128B
llvm.hexagon.V6.vaddcarry
llvm.hexagon.V6.vaddcarry.128B
llvm.hexagon.V6.vaddcarrysat
llvm.hexagon.V6.vaddcarrysat.128B
llvm.hexagon.V6.vaddclbh
llvm.hexagon.V6.vaddclbh.128B
llvm.hexagon.V6.vaddclbw
llvm.hexagon.V6.vaddclbw.128B
llvm.hexagon.V6.vaddh
llvm.hexagon.V6.vaddh.128B
llvm.hexagon.V6.vaddh.dv
llvm.hexagon.V6.vaddh.dv.128B
llvm.hexagon.V6.vaddhnq
llvm.hexagon.V6.vaddhnq.128B
llvm.hexagon.V6.vaddhq
llvm.hexagon.V6.vaddhq.128B
llvm.hexagon.V6.vaddhsat
llvm.hexagon.V6.vaddhsat.128B
llvm.hexagon.V6.vaddhsat.dv
llvm.hexagon.V6.vaddhsat.dv.128B
llvm.hexagon.V6.vaddhw
llvm.hexagon.V6.vaddhw.128B
llvm.hexagon.V6.vaddhw.acc
llvm.hexagon.V6.vaddhw.acc.128B
llvm.hexagon.V6.vaddubh
llvm.hexagon.V6.vaddubh.128B
llvm.hexagon.V6.vaddubh.acc
llvm.hexagon.V6.vaddubh.acc.128B
llvm.hexagon.V6.vaddubsat
llvm.hexagon.V6.vaddubsat.128B
llvm.hexagon.V6.vaddubsat.dv
llvm.hexagon.V6.vaddubsat.dv.128B
llvm.hexagon.V6.vaddububb.sat
llvm.hexagon.V6.vaddububb.sat.128B
llvm.hexagon.V6.vadduhsat
llvm.hexagon.V6.vadduhsat.128B
llvm.hexagon.V6.vadduhsat.dv
llvm.hexagon.V6.vadduhsat.dv.128B
llvm.hexagon.V6.vadduhw
llvm.hexagon.V6.vadduhw.128B
llvm.hexagon.V6.vadduhw.acc
llvm.hexagon.V6.vadduhw.acc.128B
llvm.hexagon.V6.vadduwsat
llvm.hexagon.V6.vadduwsat.128B
llvm.hexagon.V6.vadduwsat.dv
llvm.hexagon.V6.vadduwsat.dv.128B
llvm.hexagon.V6.vaddw
llvm.hexagon.V6.vaddw.128B
llvm.hexagon.V6.vaddw.dv
llvm.hexagon.V6.vaddw.dv.128B
llvm.hexagon.V6.vaddwnq
llvm.hexagon.V6.vaddwnq.128B
llvm.hexagon.V6.vaddwq
llvm.hexagon.V6.vaddwq.128B
llvm.hexagon.V6.vaddwsat
llvm.hexagon.V6.vaddwsat.128B
llvm.hexagon.V6.vaddwsat.dv
llvm.hexagon.V6.vaddwsat.dv.128B
llvm.hexagon.V6.valignb
llvm.hexagon.V6.valignb.128B
llvm.hexagon.V6.valignbi
llvm.hexagon.V6.valignbi.128B
llvm.hexagon.V6.vand
llvm.hexagon.V6.vand.128B
llvm.hexagon.V6.vandnqrt
llvm.hexagon.V6.vandnqrt.128B
llvm.hexagon.V6.vandnqrt.acc
llvm.hexagon.V6.vandnqrt.acc.128B
llvm.hexagon.V6.vandqrt
llvm.hexagon.V6.vandqrt.128B
llvm.hexagon.V6.vandqrt.acc
llvm.hexagon.V6.vandqrt.acc.128B
llvm.hexagon.V6.vandvnqv
llvm.hexagon.V6.vandvnqv.128B
llvm.hexagon.V6.vandvqv
llvm.hexagon.V6.vandvqv.128B
llvm.hexagon.V6.vandvrt
llvm.hexagon.V6.vandvrt.128B
llvm.hexagon.V6.vandvrt.acc
llvm.hexagon.V6.vandvrt.acc.128B
llvm.hexagon.V6.vaslh
llvm.hexagon.V6.vaslh.128B
llvm.hexagon.V6.vaslh.acc
llvm.hexagon.V6.vaslh.acc.128B
llvm.hexagon.V6.vaslhv
llvm.hexagon.V6.vaslhv.128B
llvm.hexagon.V6.vaslw
llvm.hexagon.V6.vaslw.128B
llvm.hexagon.V6.vaslw.acc
llvm.hexagon.V6.vaslw.acc.128B
llvm.hexagon.V6.vaslwv
llvm.hexagon.V6.vaslwv.128B
llvm.hexagon.V6.vasr.into
llvm.hexagon.V6.vasr.into.128B
llvm.hexagon.V6.vasrh
llvm.hexagon.V6.vasrh.128B
llvm.hexagon.V6.vasrh.acc
llvm.hexagon.V6.vasrh.acc.128B
llvm.hexagon.V6.vasrhbrndsat
llvm.hexagon.V6.vasrhbrndsat.128B
llvm.hexagon.V6.vasrhbsat
llvm.hexagon.V6.vasrhbsat.128B
llvm.hexagon.V6.vasrhubrndsat
llvm.hexagon.V6.vasrhubrndsat.128B
llvm.hexagon.V6.vasrhubsat
llvm.hexagon.V6.vasrhubsat.128B
llvm.hexagon.V6.vasrhv
llvm.hexagon.V6.vasrhv.128B
llvm.hexagon.V6.vasruhubrndsat
llvm.hexagon.V6.vasruhubrndsat.128B
llvm.hexagon.V6.vasruhubsat
llvm.hexagon.V6.vasruhubsat.128B
llvm.hexagon.V6.vasruwuhrndsat
llvm.hexagon.V6.vasruwuhrndsat.128B
llvm.hexagon.V6.vasruwuhsat
llvm.hexagon.V6.vasruwuhsat.128B
llvm.hexagon.V6.vasrw
llvm.hexagon.V6.vasrw.128B
llvm.hexagon.V6.vasrw.acc
llvm.hexagon.V6.vasrw.acc.128B
llvm.hexagon.V6.vasrwh
llvm.hexagon.V6.vasrwh.128B
llvm.hexagon.V6.vasrwhrndsat
llvm.hexagon.V6.vasrwhrndsat.128B
llvm.hexagon.V6.vasrwhsat
llvm.hexagon.V6.vasrwhsat.128B
llvm.hexagon.V6.vasrwuhrndsat
llvm.hexagon.V6.vasrwuhrndsat.128B
llvm.hexagon.V6.vasrwuhsat
llvm.hexagon.V6.vasrwuhsat.128B
llvm.hexagon.V6.vasrwv
llvm.hexagon.V6.vasrwv.128B
llvm.hexagon.V6.vassign
llvm.hexagon.V6.vassign.128B
llvm.hexagon.V6.vassignp
llvm.hexagon.V6.vassignp.128B
llvm.hexagon.V6.vavgb
llvm.hexagon.V6.vavgb.128B
llvm.hexagon.V6.vavgbrnd
llvm.hexagon.V6.vavgbrnd.128B
llvm.hexagon.V6.vavgh
llvm.hexagon.V6.vavgh.128B
llvm.hexagon.V6.vavghrnd
llvm.hexagon.V6.vavghrnd.128B
llvm.hexagon.V6.vavgub
llvm.hexagon.V6.vavgub.128B
llvm.hexagon.V6.vavgubrnd
llvm.hexagon.V6.vavgubrnd.128B
llvm.hexagon.V6.vavguh
llvm.hexagon.V6.vavguh.128B
llvm.hexagon.V6.vavguhrnd
llvm.hexagon.V6.vavguhrnd.128B
llvm.hexagon.V6.vavguw
llvm.hexagon.V6.vavguw.128B
llvm.hexagon.V6.vavguwrnd
llvm.hexagon.V6.vavguwrnd.128B
llvm.hexagon.V6.vavgw
llvm.hexagon.V6.vavgw.128B
llvm.hexagon.V6.vavgwrnd
llvm.hexagon.V6.vavgwrnd.128B
llvm.hexagon.V6.vcl0h
llvm.hexagon.V6.vcl0h.128B
llvm.hexagon.V6.vcl0w
llvm.hexagon.V6.vcl0w.128B
llvm.hexagon.V6.vcombine
llvm.hexagon.V6.vcombine.128B
llvm.hexagon.V6.vd0
llvm.hexagon.V6.vd0.128B
llvm.hexagon.V6.vdd0
llvm.hexagon.V6.vdd0.128B
llvm.hexagon.V6.vdealb
llvm.hexagon.V6.vdealb.128B
llvm.hexagon.V6.vdealb4w
llvm.hexagon.V6.vdealb4w.128B
llvm.hexagon.V6.vdealh
llvm.hexagon.V6.vdealh.128B
llvm.hexagon.V6.vdealvdd
llvm.hexagon.V6.vdealvdd.128B
llvm.hexagon.V6.vdelta
llvm.hexagon.V6.vdelta.128B
llvm.hexagon.V6.vdmpybus
llvm.hexagon.V6.vdmpybus.128B
llvm.hexagon.V6.vdmpybus.acc
llvm.hexagon.V6.vdmpybus.acc.128B
llvm.hexagon.V6.vdmpybus.dv
llvm.hexagon.V6.vdmpybus.dv.128B
llvm.hexagon.V6.vdmpybus.dv.acc
llvm.hexagon.V6.vdmpybus.dv.acc.128B
llvm.hexagon.V6.vdmpyhb
llvm.hexagon.V6.vdmpyhb.128B
llvm.hexagon.V6.vdmpyhb.acc
llvm.hexagon.V6.vdmpyhb.acc.128B
llvm.hexagon.V6.vdmpyhb.dv
llvm.hexagon.V6.vdmpyhb.dv.128B
llvm.hexagon.V6.vdmpyhb.dv.acc
llvm.hexagon.V6.vdmpyhb.dv.acc.128B
llvm.hexagon.V6.vdmpyhisat
llvm.hexagon.V6.vdmpyhisat.128B
llvm.hexagon.V6.vdmpyhisat.acc
llvm.hexagon.V6.vdmpyhisat.acc.128B
llvm.hexagon.V6.vdmpyhsat
llvm.hexagon.V6.vdmpyhsat.128B
llvm.hexagon.V6.vdmpyhsat.acc
llvm.hexagon.V6.vdmpyhsat.acc.128B
llvm.hexagon.V6.vdmpyhsuisat
llvm.hexagon.V6.vdmpyhsuisat.128B
llvm.hexagon.V6.vdmpyhsuisat.acc
llvm.hexagon.V6.vdmpyhsuisat.acc.128B
llvm.hexagon.V6.vdmpyhsusat
llvm.hexagon.V6.vdmpyhsusat.128B
llvm.hexagon.V6.vdmpyhsusat.acc
llvm.hexagon.V6.vdmpyhsusat.acc.128B
llvm.hexagon.V6.vdmpyhvsat
llvm.hexagon.V6.vdmpyhvsat.128B
llvm.hexagon.V6.vdmpyhvsat.acc
llvm.hexagon.V6.vdmpyhvsat.acc.128B
llvm.hexagon.V6.vdsaduh
llvm.hexagon.V6.vdsaduh.128B
llvm.hexagon.V6.vdsaduh.acc
llvm.hexagon.V6.vdsaduh.acc.128B
llvm.hexagon.V6.veqb
llvm.hexagon.V6.veqb.128B
llvm.hexagon.V6.veqb.and
llvm.hexagon.V6.veqb.and.128B
llvm.hexagon.V6.veqb.or
llvm.hexagon.V6.veqb.or.128B
llvm.hexagon.V6.veqb.xor
llvm.hexagon.V6.veqb.xor.128B
llvm.hexagon.V6.veqh
llvm.hexagon.V6.veqh.128B
llvm.hexagon.V6.veqh.and
llvm.hexagon.V6.veqh.and.128B
llvm.hexagon.V6.veqh.or
llvm.hexagon.V6.veqh.or.128B
llvm.hexagon.V6.veqh.xor
llvm.hexagon.V6.veqh.xor.128B
llvm.hexagon.V6.veqw
llvm.hexagon.V6.veqw.128B
llvm.hexagon.V6.veqw.and
llvm.hexagon.V6.veqw.and.128B
llvm.hexagon.V6.veqw.or
llvm.hexagon.V6.veqw.or.128B
llvm.hexagon.V6.veqw.xor
llvm.hexagon.V6.veqw.xor.128B
llvm.hexagon.V6.vgathermh
llvm.hexagon.V6.vgathermh.128B
llvm.hexagon.V6.vgathermhq
llvm.hexagon.V6.vgathermhq.128B
llvm.hexagon.V6.vgathermhw
llvm.hexagon.V6.vgathermhw.128B
llvm.hexagon.V6.vgathermhwq
llvm.hexagon.V6.vgathermhwq.128B
llvm.hexagon.V6.vgathermw
llvm.hexagon.V6.vgathermw.128B
llvm.hexagon.V6.vgathermwq
llvm.hexagon.V6.vgathermwq.128B
llvm.hexagon.V6.vgtb
llvm.hexagon.V6.vgtb.128B
llvm.hexagon.V6.vgtb.and
llvm.hexagon.V6.vgtb.and.128B
llvm.hexagon.V6.vgtb.or
llvm.hexagon.V6.vgtb.or.128B
llvm.hexagon.V6.vgtb.xor
llvm.hexagon.V6.vgtb.xor.128B
llvm.hexagon.V6.vgth
llvm.hexagon.V6.vgth.128B
llvm.hexagon.V6.vgth.and
llvm.hexagon.V6.vgth.and.128B
llvm.hexagon.V6.vgth.or
llvm.hexagon.V6.vgth.or.128B
llvm.hexagon.V6.vgth.xor
llvm.hexagon.V6.vgth.xor.128B
llvm.hexagon.V6.vgtub
llvm.hexagon.V6.vgtub.128B
llvm.hexagon.V6.vgtub.and
llvm.hexagon.V6.vgtub.and.128B
llvm.hexagon.V6.vgtub.or
llvm.hexagon.V6.vgtub.or.128B
llvm.hexagon.V6.vgtub.xor
llvm.hexagon.V6.vgtub.xor.128B
llvm.hexagon.V6.vgtuh
llvm.hexagon.V6.vgtuh.128B
llvm.hexagon.V6.vgtuh.and
llvm.hexagon.V6.vgtuh.and.128B
llvm.hexagon.V6.vgtuh.or
llvm.hexagon.V6.vgtuh.or.128B
llvm.hexagon.V6.vgtuh.xor
llvm.hexagon.V6.vgtuh.xor.128B
llvm.hexagon.V6.vgtuw
llvm.hexagon.V6.vgtuw.128B
llvm.hexagon.V6.vgtuw.and
llvm.hexagon.V6.vgtuw.and.128B
llvm.hexagon.V6.vgtuw.or
llvm.hexagon.V6.vgtuw.or.128B
llvm.hexagon.V6.vgtuw.xor
llvm.hexagon.V6.vgtuw.xor.128B
llvm.hexagon.V6.vgtw
llvm.hexagon.V6.vgtw.128B
llvm.hexagon.V6.vgtw.and
llvm.hexagon.V6.vgtw.and.128B
llvm.hexagon.V6.vgtw.or
llvm.hexagon.V6.vgtw.or.128B
llvm.hexagon.V6.vgtw.xor
llvm.hexagon.V6.vgtw.xor.128B
llvm.hexagon.V6.vinsertwr
llvm.hexagon.V6.vinsertwr.128B
llvm.hexagon.V6.vlalignb
llvm.hexagon.V6.vlalignb.128B
llvm.hexagon.V6.vlalignbi
llvm.hexagon.V6.vlalignbi.128B
llvm.hexagon.V6.vlsrb
llvm.hexagon.V6.vlsrb.128B
llvm.hexagon.V6.vlsrh
llvm.hexagon.V6.vlsrh.128B
llvm.hexagon.V6.vlsrhv
llvm.hexagon.V6.vlsrhv.128B
llvm.hexagon.V6.vlsrw
llvm.hexagon.V6.vlsrw.128B
llvm.hexagon.V6.vlsrwv
llvm.hexagon.V6.vlsrwv.128B
llvm.hexagon.V6.vlut4
llvm.hexagon.V6.vlut4.128B
llvm.hexagon.V6.vlutvvb
llvm.hexagon.V6.vlutvvb.128B
llvm.hexagon.V6.vlutvvb.nm
llvm.hexagon.V6.vlutvvb.nm.128B
llvm.hexagon.V6.vlutvvb.oracc
llvm.hexagon.V6.vlutvvb.oracc.128B
llvm.hexagon.V6.vlutvvb.oracci
llvm.hexagon.V6.vlutvvb.oracci.128B
llvm.hexagon.V6.vlutvvbi
llvm.hexagon.V6.vlutvvbi.128B
llvm.hexagon.V6.vlutvwh
llvm.hexagon.V6.vlutvwh.128B
llvm.hexagon.V6.vlutvwh.nm
llvm.hexagon.V6.vlutvwh.nm.128B
llvm.hexagon.V6.vlutvwh.oracc
llvm.hexagon.V6.vlutvwh.oracc.128B
llvm.hexagon.V6.vlutvwh.oracci
llvm.hexagon.V6.vlutvwh.oracci.128B
llvm.hexagon.V6.vlutvwhi
llvm.hexagon.V6.vlutvwhi.128B
llvm.hexagon.V6.vmaskedstorenq
llvm.hexagon.V6.vmaskedstorenq.128B
llvm.hexagon.V6.vmaskedstorentnq
llvm.hexagon.V6.vmaskedstorentnq.128B
llvm.hexagon.V6.vmaskedstorentq
llvm.hexagon.V6.vmaskedstorentq.128B
llvm.hexagon.V6.vmaskedstoreq
llvm.hexagon.V6.vmaskedstoreq.128B
llvm.hexagon.V6.vmaxb
llvm.hexagon.V6.vmaxb.128B
llvm.hexagon.V6.vmaxh
llvm.hexagon.V6.vmaxh.128B
llvm.hexagon.V6.vmaxub
llvm.hexagon.V6.vmaxub.128B
llvm.hexagon.V6.vmaxuh
llvm.hexagon.V6.vmaxuh.128B
llvm.hexagon.V6.vmaxw
llvm.hexagon.V6.vmaxw.128B
llvm.hexagon.V6.vminb
llvm.hexagon.V6.vminb.128B
llvm.hexagon.V6.vminh
llvm.hexagon.V6.vminh.128B
llvm.hexagon.V6.vminub
llvm.hexagon.V6.vminub.128B
llvm.hexagon.V6.vminuh
llvm.hexagon.V6.vminuh.128B
llvm.hexagon.V6.vminw
llvm.hexagon.V6.vminw.128B
llvm.hexagon.V6.vmpabus
llvm.hexagon.V6.vmpabus.128B
llvm.hexagon.V6.vmpabus.acc
llvm.hexagon.V6.vmpabus.acc.128B
llvm.hexagon.V6.vmpabusv
llvm.hexagon.V6.vmpabusv.128B
llvm.hexagon.V6.vmpabuu
llvm.hexagon.V6.vmpabuu.128B
llvm.hexagon.V6.vmpabuu.acc
llvm.hexagon.V6.vmpabuu.acc.128B
llvm.hexagon.V6.vmpabuuv
llvm.hexagon.V6.vmpabuuv.128B
llvm.hexagon.V6.vmpahb
llvm.hexagon.V6.vmpahb.128B
llvm.hexagon.V6.vmpahb.acc
llvm.hexagon.V6.vmpahb.acc.128B
llvm.hexagon.V6.vmpahhsat
llvm.hexagon.V6.vmpahhsat.128B
llvm.hexagon.V6.vmpauhb
llvm.hexagon.V6.vmpauhb.128B
llvm.hexagon.V6.vmpauhb.acc
llvm.hexagon.V6.vmpauhb.acc.128B
llvm.hexagon.V6.vmpauhuhsat
llvm.hexagon.V6.vmpauhuhsat.128B
llvm.hexagon.V6.vmpsuhuhsat
llvm.hexagon.V6.vmpsuhuhsat.128B
llvm.hexagon.V6.vmpybus
llvm.hexagon.V6.vmpybus.128B
llvm.hexagon.V6.vmpybus.acc
llvm.hexagon.V6.vmpybus.acc.128B
llvm.hexagon.V6.vmpybusv
llvm.hexagon.V6.vmpybusv.128B
llvm.hexagon.V6.vmpybusv.acc
llvm.hexagon.V6.vmpybusv.acc.128B
llvm.hexagon.V6.vmpybv
llvm.hexagon.V6.vmpybv.128B
llvm.hexagon.V6.vmpybv.acc
llvm.hexagon.V6.vmpybv.acc.128B
llvm.hexagon.V6.vmpyewuh
llvm.hexagon.V6.vmpyewuh.128B
llvm.hexagon.V6.vmpyewuh.64
llvm.hexagon.V6.vmpyewuh.64.128B
llvm.hexagon.V6.vmpyh
llvm.hexagon.V6.vmpyh.128B
llvm.hexagon.V6.vmpyh.acc
llvm.hexagon.V6.vmpyh.acc.128B
llvm.hexagon.V6.vmpyhsat.acc
llvm.hexagon.V6.vmpyhsat.acc.128B
llvm.hexagon.V6.vmpyhsrs
llvm.hexagon.V6.vmpyhsrs.128B
llvm.hexagon.V6.vmpyhss
llvm.hexagon.V6.vmpyhss.128B
llvm.hexagon.V6.vmpyhus
llvm.hexagon.V6.vmpyhus.128B
llvm.hexagon.V6.vmpyhus.acc
llvm.hexagon.V6.vmpyhus.acc.128B
llvm.hexagon.V6.vmpyhv
llvm.hexagon.V6.vmpyhv.128B
llvm.hexagon.V6.vmpyhv.acc
llvm.hexagon.V6.vmpyhv.acc.128B
llvm.hexagon.V6.vmpyhvsrs
llvm.hexagon.V6.vmpyhvsrs.128B
llvm.hexagon.V6.vmpyieoh
llvm.hexagon.V6.vmpyieoh.128B
llvm.hexagon.V6.vmpyiewh.acc
llvm.hexagon.V6.vmpyiewh.acc.128B
llvm.hexagon.V6.vmpyiewuh
llvm.hexagon.V6.vmpyiewuh.128B
llvm.hexagon.V6.vmpyiewuh.acc
llvm.hexagon.V6.vmpyiewuh.acc.128B
llvm.hexagon.V6.vmpyih
llvm.hexagon.V6.vmpyih.128B
llvm.hexagon.V6.vmpyih.acc
llvm.hexagon.V6.vmpyih.acc.128B
llvm.hexagon.V6.vmpyihb
llvm.hexagon.V6.vmpyihb.128B
llvm.hexagon.V6.vmpyihb.acc
llvm.hexagon.V6.vmpyihb.acc.128B
llvm.hexagon.V6.vmpyiowh
llvm.hexagon.V6.vmpyiowh.128B
llvm.hexagon.V6.vmpyiwb
llvm.hexagon.V6.vmpyiwb.128B
llvm.hexagon.V6.vmpyiwb.acc
llvm.hexagon.V6.vmpyiwb.acc.128B
llvm.hexagon.V6.vmpyiwh
llvm.hexagon.V6.vmpyiwh.128B
llvm.hexagon.V6.vmpyiwh.acc
llvm.hexagon.V6.vmpyiwh.acc.128B
llvm.hexagon.V6.vmpyiwub
llvm.hexagon.V6.vmpyiwub.128B
llvm.hexagon.V6.vmpyiwub.acc
llvm.hexagon.V6.vmpyiwub.acc.128B
llvm.hexagon.V6.vmpyowh
llvm.hexagon.V6.vmpyowh.128B
llvm.hexagon.V6.vmpyowh.64.acc
llvm.hexagon.V6.vmpyowh.64.acc.128B
llvm.hexagon.V6.vmpyowh.rnd
llvm.hexagon.V6.vmpyowh.rnd.128B
llvm.hexagon.V6.vmpyowh.rnd.sacc
llvm.hexagon.V6.vmpyowh.rnd.sacc.128B
llvm.hexagon.V6.vmpyowh.sacc
llvm.hexagon.V6.vmpyowh.sacc.128B
llvm.hexagon.V6.vmpyub
llvm.hexagon.V6.vmpyub.128B
llvm.hexagon.V6.vmpyub.acc
llvm.hexagon.V6.vmpyub.acc.128B
llvm.hexagon.V6.vmpyubv
llvm.hexagon.V6.vmpyubv.128B
llvm.hexagon.V6.vmpyubv.acc
llvm.hexagon.V6.vmpyubv.acc.128B
llvm.hexagon.V6.vmpyuh
llvm.hexagon.V6.vmpyuh.128B
llvm.hexagon.V6.vmpyuh.acc
llvm.hexagon.V6.vmpyuh.acc.128B
llvm.hexagon.V6.vmpyuhe
llvm.hexagon.V6.vmpyuhe.128B
llvm.hexagon.V6.vmpyuhe.acc
llvm.hexagon.V6.vmpyuhe.acc.128B
llvm.hexagon.V6.vmpyuhv
llvm.hexagon.V6.vmpyuhv.128B
llvm.hexagon.V6.vmpyuhv.acc
llvm.hexagon.V6.vmpyuhv.acc.128B
llvm.hexagon.V6.vmux
llvm.hexagon.V6.vmux.128B
llvm.hexagon.V6.vnavgb
llvm.hexagon.V6.vnavgb.128B
llvm.hexagon.V6.vnavgh
llvm.hexagon.V6.vnavgh.128B
llvm.hexagon.V6.vnavgub
llvm.hexagon.V6.vnavgub.128B
llvm.hexagon.V6.vnavgw
llvm.hexagon.V6.vnavgw.128B
llvm.hexagon.V6.vnormamth
llvm.hexagon.V6.vnormamth.128B
llvm.hexagon.V6.vnormamtw
llvm.hexagon.V6.vnormamtw.128B
llvm.hexagon.V6.vnot
llvm.hexagon.V6.vnot.128B
llvm.hexagon.V6.vor
llvm.hexagon.V6.vor.128B
llvm.hexagon.V6.vpackeb
llvm.hexagon.V6.vpackeb.128B
llvm.hexagon.V6.vpackeh
llvm.hexagon.V6.vpackeh.128B
llvm.hexagon.V6.vpackhb.sat
llvm.hexagon.V6.vpackhb.sat.128B
llvm.hexagon.V6.vpackhub.sat
llvm.hexagon.V6.vpackhub.sat.128B
llvm.hexagon.V6.vpackob
llvm.hexagon.V6.vpackob.128B
llvm.hexagon.V6.vpackoh
llvm.hexagon.V6.vpackoh.128B
llvm.hexagon.V6.vpackwh.sat
llvm.hexagon.V6.vpackwh.sat.128B
llvm.hexagon.V6.vpackwuh.sat
llvm.hexagon.V6.vpackwuh.sat.128B
llvm.hexagon.V6.vpopcounth
llvm.hexagon.V6.vpopcounth.128B
llvm.hexagon.V6.vprefixqb
llvm.hexagon.V6.vprefixqb.128B
llvm.hexagon.V6.vprefixqh
llvm.hexagon.V6.vprefixqh.128B
llvm.hexagon.V6.vprefixqw
llvm.hexagon.V6.vprefixqw.128B
llvm.hexagon.V6.vrdelta
llvm.hexagon.V6.vrdelta.128B
llvm.hexagon.V6.vrmpybub.rtt
llvm.hexagon.V6.vrmpybub.rtt.128B
llvm.hexagon.V6.vrmpybub.rtt.acc
llvm.hexagon.V6.vrmpybub.rtt.acc.128B
llvm.hexagon.V6.vrmpybus
llvm.hexagon.V6.vrmpybus.128B
llvm.hexagon.V6.vrmpybus.acc
llvm.hexagon.V6.vrmpybus.acc.128B
llvm.hexagon.V6.vrmpybusi
llvm.hexagon.V6.vrmpybusi.128B
llvm.hexagon.V6.vrmpybusi.acc
llvm.hexagon.V6.vrmpybusi.acc.128B
llvm.hexagon.V6.vrmpybusv
llvm.hexagon.V6.vrmpybusv.128B
llvm.hexagon.V6.vrmpybusv.acc
llvm.hexagon.V6.vrmpybusv.acc.128B
llvm.hexagon.V6.vrmpybv
llvm.hexagon.V6.vrmpybv.128B
llvm.hexagon.V6.vrmpybv.acc
llvm.hexagon.V6.vrmpybv.acc.128B
llvm.hexagon.V6.vrmpyub
llvm.hexagon.V6.vrmpyub.128B
llvm.hexagon.V6.vrmpyub.acc
llvm.hexagon.V6.vrmpyub.acc.128B
llvm.hexagon.V6.vrmpyub.rtt
llvm.hexagon.V6.vrmpyub.rtt.128B
llvm.hexagon.V6.vrmpyub.rtt.acc
llvm.hexagon.V6.vrmpyub.rtt.acc.128B
llvm.hexagon.V6.vrmpyubi
llvm.hexagon.V6.vrmpyubi.128B
llvm.hexagon.V6.vrmpyubi.acc
llvm.hexagon.V6.vrmpyubi.acc.128B
llvm.hexagon.V6.vrmpyubv
llvm.hexagon.V6.vrmpyubv.128B
llvm.hexagon.V6.vrmpyubv.acc
llvm.hexagon.V6.vrmpyubv.acc.128B
llvm.hexagon.V6.vror
llvm.hexagon.V6.vror.128B
llvm.hexagon.V6.vrotr
llvm.hexagon.V6.vrotr.128B
llvm.hexagon.V6.vroundhb
llvm.hexagon.V6.vroundhb.128B
llvm.hexagon.V6.vroundhub
llvm.hexagon.V6.vroundhub.128B
llvm.hexagon.V6.vrounduhub
llvm.hexagon.V6.vrounduhub.128B
llvm.hexagon.V6.vrounduwuh
llvm.hexagon.V6.vrounduwuh.128B
llvm.hexagon.V6.vroundwh
llvm.hexagon.V6.vroundwh.128B
llvm.hexagon.V6.vroundwuh
llvm.hexagon.V6.vroundwuh.128B
llvm.hexagon.V6.vrsadubi
llvm.hexagon.V6.vrsadubi.128B
llvm.hexagon.V6.vrsadubi.acc
llvm.hexagon.V6.vrsadubi.acc.128B
llvm.hexagon.V6.vsatdw
llvm.hexagon.V6.vsatdw.128B
llvm.hexagon.V6.vsathub
llvm.hexagon.V6.vsathub.128B
llvm.hexagon.V6.vsatuwuh
llvm.hexagon.V6.vsatuwuh.128B
llvm.hexagon.V6.vsatwh
llvm.hexagon.V6.vsatwh.128B
llvm.hexagon.V6.vsb
llvm.hexagon.V6.vsb.128B
llvm.hexagon.V6.vscattermh
llvm.hexagon.V6.vscattermh.128B
llvm.hexagon.V6.vscattermh.add
llvm.hexagon.V6.vscattermh.add.128B
llvm.hexagon.V6.vscattermhq
llvm.hexagon.V6.vscattermhq.128B
llvm.hexagon.V6.vscattermhw
llvm.hexagon.V6.vscattermhw.128B
llvm.hexagon.V6.vscattermhw.add
llvm.hexagon.V6.vscattermhw.add.128B
llvm.hexagon.V6.vscattermhwq
llvm.hexagon.V6.vscattermhwq.128B
llvm.hexagon.V6.vscattermw
llvm.hexagon.V6.vscattermw.128B
llvm.hexagon.V6.vscattermw.add
llvm.hexagon.V6.vscattermw.add.128B
llvm.hexagon.V6.vscattermwq
llvm.hexagon.V6.vscattermwq.128B
llvm.hexagon.V6.vsh
llvm.hexagon.V6.vsh.128B
llvm.hexagon.V6.vshufeh
llvm.hexagon.V6.vshufeh.128B
llvm.hexagon.V6.vshuffb
llvm.hexagon.V6.vshuffb.128B
llvm.hexagon.V6.vshuffeb
llvm.hexagon.V6.vshuffeb.128B
llvm.hexagon.V6.vshuffh
llvm.hexagon.V6.vshuffh.128B
llvm.hexagon.V6.vshuffob
llvm.hexagon.V6.vshuffob.128B
llvm.hexagon.V6.vshuffvdd
llvm.hexagon.V6.vshuffvdd.128B
llvm.hexagon.V6.vshufoeb
llvm.hexagon.V6.vshufoeb.128B
llvm.hexagon.V6.vshufoeh
llvm.hexagon.V6.vshufoeh.128B
llvm.hexagon.V6.vshufoh
llvm.hexagon.V6.vshufoh.128B
llvm.hexagon.V6.vsubb
llvm.hexagon.V6.vsubb.128B
llvm.hexagon.V6.vsubb.dv
llvm.hexagon.V6.vsubb.dv.128B
llvm.hexagon.V6.vsubbnq
llvm.hexagon.V6.vsubbnq.128B
llvm.hexagon.V6.vsubbq
llvm.hexagon.V6.vsubbq.128B
llvm.hexagon.V6.vsubbsat
llvm.hexagon.V6.vsubbsat.128B
llvm.hexagon.V6.vsubbsat.dv
llvm.hexagon.V6.vsubbsat.dv.128B
llvm.hexagon.V6.vsubcarry
llvm.hexagon.V6.vsubcarry.128B
llvm.hexagon.V6.vsubh
llvm.hexagon.V6.vsubh.128B
llvm.hexagon.V6.vsubh.dv
llvm.hexagon.V6.vsubh.dv.128B
llvm.hexagon.V6.vsubhnq
llvm.hexagon.V6.vsubhnq.128B
llvm.hexagon.V6.vsubhq
llvm.hexagon.V6.vsubhq.128B
llvm.hexagon.V6.vsubhsat
llvm.hexagon.V6.vsubhsat.128B
llvm.hexagon.V6.vsubhsat.dv
llvm.hexagon.V6.vsubhsat.dv.128B
llvm.hexagon.V6.vsubhw
llvm.hexagon.V6.vsubhw.128B
llvm.hexagon.V6.vsububh
llvm.hexagon.V6.vsububh.128B
llvm.hexagon.V6.vsububsat
llvm.hexagon.V6.vsububsat.128B
llvm.hexagon.V6.vsububsat.dv
llvm.hexagon.V6.vsububsat.dv.128B
llvm.hexagon.V6.vsubububb.sat
llvm.hexagon.V6.vsubububb.sat.128B
llvm.hexagon.V6.vsubuhsat
llvm.hexagon.V6.vsubuhsat.128B
llvm.hexagon.V6.vsubuhsat.dv
llvm.hexagon.V6.vsubuhsat.dv.128B
llvm.hexagon.V6.vsubuhw
llvm.hexagon.V6.vsubuhw.128B
llvm.hexagon.V6.vsubuwsat
llvm.hexagon.V6.vsubuwsat.128B
llvm.hexagon.V6.vsubuwsat.dv
llvm.hexagon.V6.vsubuwsat.dv.128B
llvm.hexagon.V6.vsubw
llvm.hexagon.V6.vsubw.128B
llvm.hexagon.V6.vsubw.dv
llvm.hexagon.V6.vsubw.dv.128B
llvm.hexagon.V6.vsubwnq
llvm.hexagon.V6.vsubwnq.128B
llvm.hexagon.V6.vsubwq
llvm.hexagon.V6.vsubwq.128B
llvm.hexagon.V6.vsubwsat
llvm.hexagon.V6.vsubwsat.128B
llvm.hexagon.V6.vsubwsat.dv
llvm.hexagon.V6.vsubwsat.dv.128B
llvm.hexagon.V6.vswap
llvm.hexagon.V6.vswap.128B
llvm.hexagon.V6.vtmpyb
llvm.hexagon.V6.vtmpyb.128B
llvm.hexagon.V6.vtmpyb.acc
llvm.hexagon.V6.vtmpyb.acc.128B
llvm.hexagon.V6.vtmpybus
llvm.hexagon.V6.vtmpybus.128B
llvm.hexagon.V6.vtmpybus.acc
llvm.hexagon.V6.vtmpybus.acc.128B
llvm.hexagon.V6.vtmpyhb
llvm.hexagon.V6.vtmpyhb.128B
llvm.hexagon.V6.vtmpyhb.acc
llvm.hexagon.V6.vtmpyhb.acc.128B
llvm.hexagon.V6.vunpackb
llvm.hexagon.V6.vunpackb.128B
llvm.hexagon.V6.vunpackh
llvm.hexagon.V6.vunpackh.128B
llvm.hexagon.V6.vunpackob
llvm.hexagon.V6.vunpackob.128B
llvm.hexagon.V6.vunpackoh
llvm.hexagon.V6.vunpackoh.128B
llvm.hexagon.V6.vunpackub
llvm.hexagon.V6.vunpackub.128B
llvm.hexagon.V6.vunpackuh
llvm.hexagon.V6.vunpackuh.128B
llvm.hexagon.V6.vxor
llvm.hexagon.V6.vxor.128B
llvm.hexagon.V6.vzb
llvm.hexagon.V6.vzb.128B
llvm.hexagon.V6.vzh
llvm.hexagon.V6.vzh.128B
llvm.hexagon.Y2.dccleana
llvm.hexagon.Y2.dccleaninva
llvm.hexagon.Y2.dcfetch
llvm.hexagon.Y2.dcinva
llvm.hexagon.Y2.dczeroa
llvm.hexagon.Y4.l2fetch
llvm.hexagon.Y5.l2fetch
llvm.hexagon.circ.ldb
llvm.hexagon.circ.ldd
llvm.hexagon.circ.ldh
llvm.hexagon.circ.ldub
llvm.hexagon.circ.lduh
llvm.hexagon.circ.ldw
llvm.hexagon.circ.stb
llvm.hexagon.circ.std
llvm.hexagon.circ.sth
llvm.hexagon.circ.sthhi
llvm.hexagon.circ.stw
llvm.hexagon.prefetch
llvm.hexagon.vmemcpy
llvm.hexagon.vmemset
llvm.mips.absq.s.ph
llvm.mips.absq.s.qb
llvm.mips.absq.s.w
llvm.mips.add.a.b
llvm.mips.add.a.d
llvm.mips.add.a.h
llvm.mips.add.a.w
llvm.mips.addq.ph
llvm.mips.addq.s.ph
llvm.mips.addq.s.w
llvm.mips.addqh.ph
llvm.mips.addqh.r.ph
llvm.mips.addqh.r.w
llvm.mips.addqh.w
llvm.mips.adds.a.b
llvm.mips.adds.a.d
llvm.mips.adds.a.h
llvm.mips.adds.a.w
llvm.mips.adds.s.b
llvm.mips.adds.s.d
llvm.mips.adds.s.h
llvm.mips.adds.s.w
llvm.mips.adds.u.b
llvm.mips.adds.u.d
llvm.mips.adds.u.h
llvm.mips.adds.u.w
llvm.mips.addsc
llvm.mips.addu.ph
llvm.mips.addu.qb
llvm.mips.addu.s.ph
llvm.mips.addu.s.qb
llvm.mips.adduh.qb
llvm.mips.adduh.r.qb
llvm.mips.addv.b
llvm.mips.addv.d
llvm.mips.addv.h
llvm.mips.addv.w
llvm.mips.addvi.b
llvm.mips.addvi.d
llvm.mips.addvi.h
llvm.mips.addvi.w
llvm.mips.addwc
llvm.mips.and.v
llvm.mips.andi.b
llvm.mips.append
llvm.mips.asub.s.b
llvm.mips.asub.s.d
llvm.mips.asub.s.h
llvm.mips.asub.s.w
llvm.mips.asub.u.b
llvm.mips.asub.u.d
llvm.mips.asub.u.h
llvm.mips.asub.u.w
llvm.mips.ave.s.b
llvm.mips.ave.s.d
llvm.mips.ave.s.h
llvm.mips.ave.s.w
llvm.mips.ave.u.b
llvm.mips.ave.u.d
llvm.mips.ave.u.h
llvm.mips.ave.u.w
llvm.mips.aver.s.b
llvm.mips.aver.s.d
llvm.mips.aver.s.h
llvm.mips.aver.s.w
llvm.mips.aver.u.b
llvm.mips.aver.u.d
llvm.mips.aver.u.h
llvm.mips.aver.u.w
llvm.mips.balign
llvm.mips.bclr.b
llvm.mips.bclr.d
llvm.mips.bclr.h
llvm.mips.bclr.w
llvm.mips.bclri.b
llvm.mips.bclri.d
llvm.mips.bclri.h
llvm.mips.bclri.w
llvm.mips.binsl.b
llvm.mips.binsl.d
llvm.mips.binsl.h
llvm.mips.binsl.w
llvm.mips.binsli.b
llvm.mips.binsli.d
llvm.mips.binsli.h
llvm.mips.binsli.w
llvm.mips.binsr.b
llvm.mips.binsr.d
llvm.mips.binsr.h
llvm.mips.binsr.w
llvm.mips.binsri.b
llvm.mips.binsri.d
llvm.mips.binsri.h
llvm.mips.binsri.w
llvm.mips.bitrev
llvm.mips.bmnz.v
llvm.mips.bmnzi.b
llvm.mips.bmz.v
llvm.mips.bmzi.b
llvm.mips.bneg.b
llvm.mips.bneg.d
llvm.mips.bneg.h
llvm.mips.bneg.w
llvm.mips.bnegi.b
llvm.mips.bnegi.d
llvm.mips.bnegi.h
llvm.mips.bnegi.w
llvm.mips.bnz.b
llvm.mips.bnz.d
llvm.mips.bnz.h
llvm.mips.bnz.v
llvm.mips.bnz.w
llvm.mips.bposge32
llvm.mips.bsel.v
llvm.mips.bseli.b
llvm.mips.bset.b
llvm.mips.bset.d
llvm.mips.bset.h
llvm.mips.bset.w
llvm.mips.bseti.b
llvm.mips.bseti.d
llvm.mips.bseti.h
llvm.mips.bseti.w
llvm.mips.bz.b
llvm.mips.bz.d
llvm.mips.bz.h
llvm.mips.bz.v
llvm.mips.bz.w
llvm.mips.ceq.b
llvm.mips.ceq.d
llvm.mips.ceq.h
llvm.mips.ceq.w
llvm.mips.ceqi.b
llvm.mips.ceqi.d
llvm.mips.ceqi.h
llvm.mips.ceqi.w
llvm.mips.cfcmsa
llvm.mips.cle.s.b
llvm.mips.cle.s.d
llvm.mips.cle.s.h
llvm.mips.cle.s.w
llvm.mips.cle.u.b
llvm.mips.cle.u.d
llvm.mips.cle.u.h
llvm.mips.cle.u.w
llvm.mips.clei.s.b
llvm.mips.clei.s.d
llvm.mips.clei.s.h
llvm.mips.clei.s.w
llvm.mips.clei.u.b
llvm.mips.clei.u.d
llvm.mips.clei.u.h
llvm.mips.clei.u.w
llvm.mips.clt.s.b
llvm.mips.clt.s.d
llvm.mips.clt.s.h
llvm.mips.clt.s.w
llvm.mips.clt.u.b
llvm.mips.clt.u.d
llvm.mips.clt.u.h
llvm.mips.clt.u.w
llvm.mips.clti.s.b
llvm.mips.clti.s.d
llvm.mips.clti.s.h
llvm.mips.clti.s.w
llvm.mips.clti.u.b
llvm.mips.clti.u.d
llvm.mips.clti.u.h
llvm.mips.clti.u.w
llvm.mips.cmp.eq.ph
llvm.mips.cmp.le.ph
llvm.mips.cmp.lt.ph
llvm.mips.cmpgdu.eq.qb
llvm.mips.cmpgdu.le.qb
llvm.mips.cmpgdu.lt.qb
llvm.mips.cmpgu.eq.qb
llvm.mips.cmpgu.le.qb
llvm.mips.cmpgu.lt.qb
llvm.mips.cmpu.eq.qb
llvm.mips.cmpu.le.qb
llvm.mips.cmpu.lt.qb
llvm.mips.copy.s.b
llvm.mips.copy.s.d
llvm.mips.copy.s.h
llvm.mips.copy.s.w
llvm.mips.copy.u.b
llvm.mips.copy.u.d
llvm.mips.copy.u.h
llvm.mips.copy.u.w
llvm.mips.ctcmsa
llvm.mips.div.s.b
llvm.mips.div.s.d
llvm.mips.div.s.h
llvm.mips.div.s.w
llvm.mips.div.u.b
llvm.mips.div.u.d
llvm.mips.div.u.h
llvm.mips.div.u.w
llvm.mips.dlsa
llvm.mips.dotp.s.d
llvm.mips.dotp.s.h
llvm.mips.dotp.s.w
llvm.mips.dotp.u.d
llvm.mips.dotp.u.h
llvm.mips.dotp.u.w
llvm.mips.dpa.w.ph
llvm.mips.dpadd.s.d
llvm.mips.dpadd.s.h
llvm.mips.dpadd.s.w
llvm.mips.dpadd.u.d
llvm.mips.dpadd.u.h
llvm.mips.dpadd.u.w
llvm.mips.dpaq.s.w.ph
llvm.mips.dpaq.sa.l.w
llvm.mips.dpaqx.s.w.ph
llvm.mips.dpaqx.sa.w.ph
llvm.mips.dpau.h.qbl
llvm.mips.dpau.h.qbr
llvm.mips.dpax.w.ph
llvm.mips.dps.w.ph
llvm.mips.dpsq.s.w.ph
llvm.mips.dpsq.sa.l.w
llvm.mips.dpsqx.s.w.ph
llvm.mips.dpsqx.sa.w.ph
llvm.mips.dpsu.h.qbl
llvm.mips.dpsu.h.qbr
llvm.mips.dpsub.s.d
llvm.mips.dpsub.s.h
llvm.mips.dpsub.s.w
llvm.mips.dpsub.u.d
llvm.mips.dpsub.u.h
llvm.mips.dpsub.u.w
llvm.mips.dpsx.w.ph
llvm.mips.extp
llvm.mips.extpdp
llvm.mips.extr.r.w
llvm.mips.extr.rs.w
llvm.mips.extr.s.h
llvm.mips.extr.w
llvm.mips.fadd.d
llvm.mips.fadd.w
llvm.mips.fcaf.d
llvm.mips.fcaf.w
llvm.mips.fceq.d
llvm.mips.fceq.w
llvm.mips.fclass.d
llvm.mips.fclass.w
llvm.mips.fcle.d
llvm.mips.fcle.w
llvm.mips.fclt.d
llvm.mips.fclt.w
llvm.mips.fcne.d
llvm.mips.fcne.w
llvm.mips.fcor.d
llvm.mips.fcor.w
llvm.mips.fcueq.d
llvm.mips.fcueq.w
llvm.mips.fcule.d
llvm.mips.fcule.w
llvm.mips.fcult.d
llvm.mips.fcult.w
llvm.mips.fcun.d
llvm.mips.fcun.w
llvm.mips.fcune.d
llvm.mips.fcune.w
llvm.mips.fdiv.d
llvm.mips.fdiv.w
llvm.mips.fexdo.h
llvm.mips.fexdo.w
llvm.mips.fexp2.d
llvm.mips.fexp2.w
llvm.mips.fexupl.d
llvm.mips.fexupl.w
llvm.mips.fexupr.d
llvm.mips.fexupr.w
llvm.mips.ffint.s.d
llvm.mips.ffint.s.w
llvm.mips.ffint.u.d
llvm.mips.ffint.u.w
llvm.mips.ffql.d
llvm.mips.ffql.w
llvm.mips.ffqr.d
llvm.mips.ffqr.w
llvm.mips.fill.b
llvm.mips.fill.d
llvm.mips.fill.h
llvm.mips.fill.w
llvm.mips.flog2.d
llvm.mips.flog2.w
llvm.mips.fmadd.d
llvm.mips.fmadd.w
llvm.mips.fmax.a.d
llvm.mips.fmax.a.w
llvm.mips.fmax.d
llvm.mips.fmax.w
llvm.mips.fmin.a.d
llvm.mips.fmin.a.w
llvm.mips.fmin.d
llvm.mips.fmin.w
llvm.mips.fmsub.d
llvm.mips.fmsub.w
llvm.mips.fmul.d
llvm.mips.fmul.w
llvm.mips.frcp.d
llvm.mips.frcp.w
llvm.mips.frint.d
llvm.mips.frint.w
llvm.mips.frsqrt.d
llvm.mips.frsqrt.w
llvm.mips.fsaf.d
llvm.mips.fsaf.w
llvm.mips.fseq.d
llvm.mips.fseq.w
llvm.mips.fsle.d
llvm.mips.fsle.w
llvm.mips.fslt.d
llvm.mips.fslt.w
llvm.mips.fsne.d
llvm.mips.fsne.w
llvm.mips.fsor.d
llvm.mips.fsor.w
llvm.mips.fsqrt.d
llvm.mips.fsqrt.w
llvm.mips.fsub.d
llvm.mips.fsub.w
llvm.mips.fsueq.d
llvm.mips.fsueq.w
llvm.mips.fsule.d
llvm.mips.fsule.w
llvm.mips.fsult.d
llvm.mips.fsult.w
llvm.mips.fsun.d
llvm.mips.fsun.w
llvm.mips.fsune.d
llvm.mips.fsune.w
llvm.mips.ftint.s.d
llvm.mips.ftint.s.w
llvm.mips.ftint.u.d
llvm.mips.ftint.u.w
llvm.mips.ftq.h
llvm.mips.ftq.w
llvm.mips.ftrunc.s.d
llvm.mips.ftrunc.s.w
llvm.mips.ftrunc.u.d
llvm.mips.ftrunc.u.w
llvm.mips.hadd.s.d
llvm.mips.hadd.s.h
llvm.mips.hadd.s.w
llvm.mips.hadd.u.d
llvm.mips.hadd.u.h
llvm.mips.hadd.u.w
llvm.mips.hsub.s.d
llvm.mips.hsub.s.h
llvm.mips.hsub.s.w
llvm.mips.hsub.u.d
llvm.mips.hsub.u.h
llvm.mips.hsub.u.w
llvm.mips.ilvev.b
llvm.mips.ilvev.d
llvm.mips.ilvev.h
llvm.mips.ilvev.w
llvm.mips.ilvl.b
llvm.mips.ilvl.d
llvm.mips.ilvl.h
llvm.mips.ilvl.w
llvm.mips.ilvod.b
llvm.mips.ilvod.d
llvm.mips.ilvod.h
llvm.mips.ilvod.w
llvm.mips.ilvr.b
llvm.mips.ilvr.d
llvm.mips.ilvr.h
llvm.mips.ilvr.w
llvm.mips.insert.b
llvm.mips.insert.d
llvm.mips.insert.h
llvm.mips.insert.w
llvm.mips.insv
llvm.mips.insve.b
llvm.mips.insve.d
llvm.mips.insve.h
llvm.mips.insve.w
llvm.mips.lbux
llvm.mips.ld.b
llvm.mips.ld.d
llvm.mips.ld.h
llvm.mips.ld.w
llvm.mips.ldi.b
llvm.mips.ldi.d
llvm.mips.ldi.h
llvm.mips.ldi.w
llvm.mips.ldr.d
llvm.mips.ldr.w
llvm.mips.lhx
llvm.mips.lsa
llvm.mips.lwx
llvm.mips.madd
llvm.mips.madd.q.h
llvm.mips.madd.q.w
llvm.mips.maddr.q.h
llvm.mips.maddr.q.w
llvm.mips.maddu
llvm.mips.maddv.b
llvm.mips.maddv.d
llvm.mips.maddv.h
llvm.mips.maddv.w
llvm.mips.maq.s.w.phl
llvm.mips.maq.s.w.phr
llvm.mips.maq.sa.w.phl
llvm.mips.maq.sa.w.phr
llvm.mips.max.a.b
llvm.mips.max.a.d
llvm.mips.max.a.h
llvm.mips.max.a.w
llvm.mips.max.s.b
llvm.mips.max.s.d
llvm.mips.max.s.h
llvm.mips.max.s.w
llvm.mips.max.u.b
llvm.mips.max.u.d
llvm.mips.max.u.h
llvm.mips.max.u.w
llvm.mips.maxi.s.b
llvm.mips.maxi.s.d
llvm.mips.maxi.s.h
llvm.mips.maxi.s.w
llvm.mips.maxi.u.b
llvm.mips.maxi.u.d
llvm.mips.maxi.u.h
llvm.mips.maxi.u.w
llvm.mips.min.a.b
llvm.mips.min.a.d
llvm.mips.min.a.h
llvm.mips.min.a.w
llvm.mips.min.s.b
llvm.mips.min.s.d
llvm.mips.min.s.h
llvm.mips.min.s.w
llvm.mips.min.u.b
llvm.mips.min.u.d
llvm.mips.min.u.h
llvm.mips.min.u.w
llvm.mips.mini.s.b
llvm.mips.mini.s.d
llvm.mips.mini.s.h
llvm.mips.mini.s.w
llvm.mips.mini.u.b
llvm.mips.mini.u.d
llvm.mips.mini.u.h
llvm.mips.mini.u.w
llvm.mips.mod.s.b
llvm.mips.mod.s.d
llvm.mips.mod.s.h
llvm.mips.mod.s.w
llvm.mips.mod.u.b
llvm.mips.mod.u.d
llvm.mips.mod.u.h
llvm.mips.mod.u.w
llvm.mips.modsub
llvm.mips.move.v
llvm.mips.msub
llvm.mips.msub.q.h
llvm.mips.msub.q.w
llvm.mips.msubr.q.h
llvm.mips.msubr.q.w
llvm.mips.msubu
llvm.mips.msubv.b
llvm.mips.msubv.d
llvm.mips.msubv.h
llvm.mips.msubv.w
llvm.mips.mthlip
llvm.mips.mul.ph
llvm.mips.mul.q.h
llvm.mips.mul.q.w
llvm.mips.mul.s.ph
llvm.mips.muleq.s.w.phl
llvm.mips.muleq.s.w.phr
llvm.mips.muleu.s.ph.qbl
llvm.mips.muleu.s.ph.qbr
llvm.mips.mulq.rs.ph
llvm.mips.mulq.rs.w
llvm.mips.mulq.s.ph
llvm.mips.mulq.s.w
llvm.mips.mulr.q.h
llvm.mips.mulr.q.w
llvm.mips.mulsa.w.ph
llvm.mips.mulsaq.s.w.ph
llvm.mips.mult
llvm.mips.multu
llvm.mips.mulv.b
llvm.mips.mulv.d
llvm.mips.mulv.h
llvm.mips.mulv.w
llvm.mips.nloc.b
llvm.mips.nloc.d
llvm.mips.nloc.h
llvm.mips.nloc.w
llvm.mips.nlzc.b
llvm.mips.nlzc.d
llvm.mips.nlzc.h
llvm.mips.nlzc.w
llvm.mips.nor.v
llvm.mips.nori.b
llvm.mips.or.v
llvm.mips.ori.b
llvm.mips.packrl.ph
llvm.mips.pckev.b
llvm.mips.pckev.d
llvm.mips.pckev.h
llvm.mips.pckev.w
llvm.mips.pckod.b
llvm.mips.pckod.d
llvm.mips.pckod.h
llvm.mips.pckod.w
llvm.mips.pcnt.b
llvm.mips.pcnt.d
llvm.mips.pcnt.h
llvm.mips.pcnt.w
llvm.mips.pick.ph
llvm.mips.pick.qb
llvm.mips.preceq.w.phl
llvm.mips.preceq.w.phr
llvm.mips.precequ.ph.qbl
llvm.mips.precequ.ph.qbla
llvm.mips.precequ.ph.qbr
llvm.mips.precequ.ph.qbra
llvm.mips.preceu.ph.qbl
llvm.mips.preceu.ph.qbla
llvm.mips.preceu.ph.qbr
llvm.mips.preceu.ph.qbra
llvm.mips.precr.qb.ph
llvm.mips.precr.sra.ph.w
llvm.mips.precr.sra.r.ph.w
llvm.mips.precrq.ph.w
llvm.mips.precrq.qb.ph
llvm.mips.precrq.rs.ph.w
llvm.mips.precrqu.s.qb.ph
llvm.mips.prepend
llvm.mips.raddu.w.qb
llvm.mips.rddsp
llvm.mips.repl.ph
llvm.mips.repl.qb
llvm.mips.sat.s.b
llvm.mips.sat.s.d
llvm.mips.sat.s.h
llvm.mips.sat.s.w
llvm.mips.sat.u.b
llvm.mips.sat.u.d
llvm.mips.sat.u.h
llvm.mips.sat.u.w
llvm.mips.shf.b
llvm.mips.shf.h
llvm.mips.shf.w
llvm.mips.shilo
llvm.mips.shll.ph
llvm.mips.shll.qb
llvm.mips.shll.s.ph
llvm.mips.shll.s.w
llvm.mips.shra.ph
llvm.mips.shra.qb
llvm.mips.shra.r.ph
llvm.mips.shra.r.qb
llvm.mips.shra.r.w
llvm.mips.shrl.ph
llvm.mips.shrl.qb
llvm.mips.sld.b
llvm.mips.sld.d
llvm.mips.sld.h
llvm.mips.sld.w
llvm.mips.sldi.b
llvm.mips.sldi.d
llvm.mips.sldi.h
llvm.mips.sldi.w
llvm.mips.sll.b
llvm.mips.sll.d
llvm.mips.sll.h
llvm.mips.sll.w
llvm.mips.slli.b
llvm.mips.slli.d
llvm.mips.slli.h
llvm.mips.slli.w
llvm.mips.splat.b
llvm.mips.splat.d
llvm.mips.splat.h
llvm.mips.splat.w
llvm.mips.splati.b
llvm.mips.splati.d
llvm.mips.splati.h
llvm.mips.splati.w
llvm.mips.sra.b
llvm.mips.sra.d
llvm.mips.sra.h
llvm.mips.sra.w
llvm.mips.srai.b
llvm.mips.srai.d
llvm.mips.srai.h
llvm.mips.srai.w
llvm.mips.srar.b
llvm.mips.srar.d
llvm.mips.srar.h
llvm.mips.srar.w
llvm.mips.srari.b
llvm.mips.srari.d
llvm.mips.srari.h
llvm.mips.srari.w
llvm.mips.srl.b
llvm.mips.srl.d
llvm.mips.srl.h
llvm.mips.srl.w
llvm.mips.srli.b
llvm.mips.srli.d
llvm.mips.srli.h
llvm.mips.srli.w
llvm.mips.srlr.b
llvm.mips.srlr.d
llvm.mips.srlr.h
llvm.mips.srlr.w
llvm.mips.srlri.b
llvm.mips.srlri.d
llvm.mips.srlri.h
llvm.mips.srlri.w
llvm.mips.st.b
llvm.mips.st.d
llvm.mips.st.h
llvm.mips.st.w
llvm.mips.str.d
llvm.mips.str.w
llvm.mips.subq.ph
llvm.mips.subq.s.ph
llvm.mips.subq.s.w
llvm.mips.subqh.ph
llvm.mips.subqh.r.ph
llvm.mips.subqh.r.w
llvm.mips.subqh.w
llvm.mips.subs.s.b
llvm.mips.subs.s.d
llvm.mips.subs.s.h
llvm.mips.subs.s.w
llvm.mips.subs.u.b
llvm.mips.subs.u.d
llvm.mips.subs.u.h
llvm.mips.subs.u.w
llvm.mips.subsus.u.b
llvm.mips.subsus.u.d
llvm.mips.subsus.u.h
llvm.mips.subsus.u.w
llvm.mips.subsuu.s.b
llvm.mips.subsuu.s.d
llvm.mips.subsuu.s.h
llvm.mips.subsuu.s.w
llvm.mips.subu.ph
llvm.mips.subu.qb
llvm.mips.subu.s.ph
llvm.mips.subu.s.qb
llvm.mips.subuh.qb
llvm.mips.subuh.r.qb
llvm.mips.subv.b
llvm.mips.subv.d
llvm.mips.subv.h
llvm.mips.subv.w
llvm.mips.subvi.b
llvm.mips.subvi.d
llvm.mips.subvi.h
llvm.mips.subvi.w
llvm.mips.vshf.b
llvm.mips.vshf.d
llvm.mips.vshf.h
llvm.mips.vshf.w
llvm.mips.wrdsp
llvm.mips.xor.v
llvm.mips.xori.b
llvm.nvvm.add.rm.d
llvm.nvvm.add.rm.f
llvm.nvvm.add.rm.ftz.f
llvm.nvvm.add.rn.d
llvm.nvvm.add.rn.f
llvm.nvvm.add.rn.ftz.f
llvm.nvvm.add.rp.d
llvm.nvvm.add.rp.f
llvm.nvvm.add.rp.ftz.f
llvm.nvvm.add.rz.d
llvm.nvvm.add.rz.f
llvm.nvvm.add.rz.ftz.f
llvm.nvvm.atomic.add.gen.f.cta
llvm.nvvm.atomic.add.gen.f.sys
llvm.nvvm.atomic.add.gen.i.cta
llvm.nvvm.atomic.add.gen.i.sys
llvm.nvvm.atomic.and.gen.i.cta
llvm.nvvm.atomic.and.gen.i.sys
llvm.nvvm.atomic.cas.gen.i.cta
llvm.nvvm.atomic.cas.gen.i.sys
llvm.nvvm.atomic.dec.gen.i.cta
llvm.nvvm.atomic.dec.gen.i.sys
llvm.nvvm.atomic.exch.gen.i.cta
llvm.nvvm.atomic.exch.gen.i.sys
llvm.nvvm.atomic.inc.gen.i.cta
llvm.nvvm.atomic.inc.gen.i.sys
llvm.nvvm.atomic.load.dec.32
llvm.nvvm.atomic.load.inc.32
llvm.nvvm.atomic.max.gen.i.cta
llvm.nvvm.atomic.max.gen.i.sys
llvm.nvvm.atomic.min.gen.i.cta
llvm.nvvm.atomic.min.gen.i.sys
llvm.nvvm.atomic.or.gen.i.cta
llvm.nvvm.atomic.or.gen.i.sys
llvm.nvvm.atomic.xor.gen.i.cta
llvm.nvvm.atomic.xor.gen.i.sys
llvm.nvvm.bar.sync
llvm.nvvm.bar.warp.sync
llvm.nvvm.barrier
llvm.nvvm.barrier.n
llvm.nvvm.barrier.sync
llvm.nvvm.barrier.sync.cnt
llvm.nvvm.barrier0
llvm.nvvm.barrier0.and
llvm.nvvm.barrier0.or
llvm.nvvm.barrier0.popc
llvm.nvvm.bitcast.d2ll
llvm.nvvm.bitcast.f2i
llvm.nvvm.bitcast.i2f
llvm.nvvm.bitcast.ll2d
llvm.nvvm.ceil.d
llvm.nvvm.ceil.f
llvm.nvvm.ceil.ftz.f
llvm.nvvm.compiler.error
llvm.nvvm.compiler.warn
llvm.nvvm.cos.approx.f
llvm.nvvm.cos.approx.ftz.f
llvm.nvvm.d2f.rm
llvm.nvvm.d2f.rm.ftz
llvm.nvvm.d2f.rn
llvm.nvvm.d2f.rn.ftz
llvm.nvvm.d2f.rp
llvm.nvvm.d2f.rp.ftz
llvm.nvvm.d2f.rz
llvm.nvvm.d2f.rz.ftz
llvm.nvvm.d2i.hi
llvm.nvvm.d2i.lo
llvm.nvvm.d2i.rm
llvm.nvvm.d2i.rn
llvm.nvvm.d2i.rp
llvm.nvvm.d2i.rz
llvm.nvvm.d2ll.rm
llvm.nvvm.d2ll.rn
llvm.nvvm.d2ll.rp
llvm.nvvm.d2ll.rz
llvm.nvvm.d2ui.rm
llvm.nvvm.d2ui.rn
llvm.nvvm.d2ui.rp
llvm.nvvm.d2ui.rz
llvm.nvvm.d2ull.rm
llvm.nvvm.d2ull.rn
llvm.nvvm.d2ull.rp
llvm.nvvm.d2ull.rz
llvm.nvvm.div.approx.f
llvm.nvvm.div.approx.ftz.f
llvm.nvvm.div.rm.d
llvm.nvvm.div.rm.f
llvm.nvvm.div.rm.ftz.f
llvm.nvvm.div.rn.d
llvm.nvvm.div.rn.f
llvm.nvvm.div.rn.ftz.f
llvm.nvvm.div.rp.d
llvm.nvvm.div.rp.f
llvm.nvvm.div.rp.ftz.f
llvm.nvvm.div.rz.d
llvm.nvvm.div.rz.f
llvm.nvvm.div.rz.ftz.f
llvm.nvvm.ex2.approx.d
llvm.nvvm.ex2.approx.f
llvm.nvvm.ex2.approx.ftz.f
llvm.nvvm.f2h.rn
llvm.nvvm.f2h.rn.ftz
llvm.nvvm.f2i.rm
llvm.nvvm.f2i.rm.ftz
llvm.nvvm.f2i.rn
llvm.nvvm.f2i.rn.ftz
llvm.nvvm.f2i.rp
llvm.nvvm.f2i.rp.ftz
llvm.nvvm.f2i.rz
llvm.nvvm.f2i.rz.ftz
llvm.nvvm.f2ll.rm
llvm.nvvm.f2ll.rm.ftz
llvm.nvvm.f2ll.rn
llvm.nvvm.f2ll.rn.ftz
llvm.nvvm.f2ll.rp
llvm.nvvm.f2ll.rp.ftz
llvm.nvvm.f2ll.rz
llvm.nvvm.f2ll.rz.ftz
llvm.nvvm.f2ui.rm
llvm.nvvm.f2ui.rm.ftz
llvm.nvvm.f2ui.rn
llvm.nvvm.f2ui.rn.ftz
llvm.nvvm.f2ui.rp
llvm.nvvm.f2ui.rp.ftz
llvm.nvvm.f2ui.rz
llvm.nvvm.f2ui.rz.ftz
llvm.nvvm.f2ull.rm
llvm.nvvm.f2ull.rm.ftz
llvm.nvvm.f2ull.rn
llvm.nvvm.f2ull.rn.ftz
llvm.nvvm.f2ull.rp
llvm.nvvm.f2ull.rp.ftz
llvm.nvvm.f2ull.rz
llvm.nvvm.f2ull.rz.ftz
llvm.nvvm.fabs.d
llvm.nvvm.fabs.f
llvm.nvvm.fabs.ftz.f
llvm.nvvm.floor.d
llvm.nvvm.floor.f
llvm.nvvm.floor.ftz.f
llvm.nvvm.fma.rm.d
llvm.nvvm.fma.rm.f
llvm.nvvm.fma.rm.ftz.f
llvm.nvvm.fma.rn.d
llvm.nvvm.fma.rn.f
llvm.nvvm.fma.rn.ftz.f
llvm.nvvm.fma.rp.d
llvm.nvvm.fma.rp.f
llvm.nvvm.fma.rp.ftz.f
llvm.nvvm.fma.rz.d
llvm.nvvm.fma.rz.f
llvm.nvvm.fma.rz.ftz.f
llvm.nvvm.fmax.d
llvm.nvvm.fmax.f
llvm.nvvm.fmax.ftz.f
llvm.nvvm.fmin.d
llvm.nvvm.fmin.f
llvm.nvvm.fmin.ftz.f
llvm.nvvm.fns
llvm.nvvm.i2d.rm
llvm.nvvm.i2d.rn
llvm.nvvm.i2d.rp
llvm.nvvm.i2d.rz
llvm.nvvm.i2f.rm
llvm.nvvm.i2f.rn
llvm.nvvm.i2f.rp
llvm.nvvm.i2f.rz
llvm.nvvm.isspacep.const
llvm.nvvm.isspacep.global
llvm.nvvm.isspacep.local
llvm.nvvm.isspacep.shared
llvm.nvvm.istypep.sampler
llvm.nvvm.istypep.surface
llvm.nvvm.istypep.texture
llvm.nvvm.ldg.global.f
llvm.nvvm.ldg.global.i
llvm.nvvm.ldg.global.p
llvm.nvvm.ldu.global.f
llvm.nvvm.ldu.global.i
llvm.nvvm.ldu.global.p
llvm.nvvm.lg2.approx.d
llvm.nvvm.lg2.approx.f
llvm.nvvm.lg2.approx.ftz.f
llvm.nvvm.ll2d.rm
llvm.nvvm.ll2d.rn
llvm.nvvm.ll2d.rp
llvm.nvvm.ll2d.rz
llvm.nvvm.ll2f.rm
llvm.nvvm.ll2f.rn
llvm.nvvm.ll2f.rp
llvm.nvvm.ll2f.rz
llvm.nvvm.lohi.i2d
llvm.nvvm.match.all.sync.i32p
llvm.nvvm.match.all.sync.i64p
llvm.nvvm.match.any.sync.i32
llvm.nvvm.match.any.sync.i64
llvm.nvvm.membar.cta
llvm.nvvm.membar.gl
llvm.nvvm.membar.sys
llvm.nvvm.mma.m8n8k4.col.col.f16.f16
llvm.nvvm.mma.m8n8k4.col.col.f32.f16
llvm.nvvm.mma.m8n8k4.col.col.f32.f32
llvm.nvvm.mma.m8n8k4.col.row.f16.f16
llvm.nvvm.mma.m8n8k4.col.row.f32.f16
llvm.nvvm.mma.m8n8k4.col.row.f32.f32
llvm.nvvm.mma.m8n8k4.row.col.f16.f16
llvm.nvvm.mma.m8n8k4.row.col.f32.f16
llvm.nvvm.mma.m8n8k4.row.col.f32.f32
llvm.nvvm.mma.m8n8k4.row.row.f16.f16
llvm.nvvm.mma.m8n8k4.row.row.f32.f16
llvm.nvvm.mma.m8n8k4.row.row.f32.f32
llvm.nvvm.move.double
llvm.nvvm.move.float
llvm.nvvm.move.i16
llvm.nvvm.move.i32
llvm.nvvm.move.i64
llvm.nvvm.move.ptr
llvm.nvvm.mul.rm.d
llvm.nvvm.mul.rm.f
llvm.nvvm.mul.rm.ftz.f
llvm.nvvm.mul.rn.d
llvm.nvvm.mul.rn.f
llvm.nvvm.mul.rn.ftz.f
llvm.nvvm.mul.rp.d
llvm.nvvm.mul.rp.f
llvm.nvvm.mul.rp.ftz.f
llvm.nvvm.mul.rz.d
llvm.nvvm.mul.rz.f
llvm.nvvm.mul.rz.ftz.f
llvm.nvvm.mul24.i
llvm.nvvm.mul24.ui
llvm.nvvm.mulhi.i
llvm.nvvm.mulhi.ll
llvm.nvvm.mulhi.ui
llvm.nvvm.mulhi.ull
llvm.nvvm.prmt
llvm.nvvm.ptr.constant.to.gen
llvm.nvvm.ptr.gen.to.constant
llvm.nvvm.ptr.gen.to.global
llvm.nvvm.ptr.gen.to.local
llvm.nvvm.ptr.gen.to.param
llvm.nvvm.ptr.gen.to.shared
llvm.nvvm.ptr.global.to.gen
llvm.nvvm.ptr.local.to.gen
llvm.nvvm.ptr.shared.to.gen
llvm.nvvm.rcp.approx.ftz.d
llvm.nvvm.rcp.rm.d
llvm.nvvm.rcp.rm.f
llvm.nvvm.rcp.rm.ftz.f
llvm.nvvm.rcp.rn.d
llvm.nvvm.rcp.rn.f
llvm.nvvm.rcp.rn.ftz.f
llvm.nvvm.rcp.rp.d
llvm.nvvm.rcp.rp.f
llvm.nvvm.rcp.rp.ftz.f
llvm.nvvm.rcp.rz.d
llvm.nvvm.rcp.rz.f
llvm.nvvm.rcp.rz.ftz.f
llvm.nvvm.read.ptx.sreg.clock
llvm.nvvm.read.ptx.sreg.clock64
llvm.nvvm.read.ptx.sreg.ctaid.w
llvm.nvvm.read.ptx.sreg.ctaid.x
llvm.nvvm.read.ptx.sreg.ctaid.y
llvm.nvvm.read.ptx.sreg.ctaid.z
llvm.nvvm.read.ptx.sreg.envreg0
llvm.nvvm.read.ptx.sreg.envreg1
llvm.nvvm.read.ptx.sreg.envreg10
llvm.nvvm.read.ptx.sreg.envreg11
llvm.nvvm.read.ptx.sreg.envreg12
llvm.nvvm.read.ptx.sreg.envreg13
llvm.nvvm.read.ptx.sreg.envreg14
llvm.nvvm.read.ptx.sreg.envreg15
llvm.nvvm.read.ptx.sreg.envreg16
llvm.nvvm.read.ptx.sreg.envreg17
llvm.nvvm.read.ptx.sreg.envreg18
llvm.nvvm.read.ptx.sreg.envreg19
llvm.nvvm.read.ptx.sreg.envreg2
llvm.nvvm.read.ptx.sreg.envreg20
llvm.nvvm.read.ptx.sreg.envreg21
llvm.nvvm.read.ptx.sreg.envreg22
llvm.nvvm.read.ptx.sreg.envreg23
llvm.nvvm.read.ptx.sreg.envreg24
llvm.nvvm.read.ptx.sreg.envreg25
llvm.nvvm.read.ptx.sreg.envreg26
llvm.nvvm.read.ptx.sreg.envreg27
llvm.nvvm.read.ptx.sreg.envreg28
llvm.nvvm.read.ptx.sreg.envreg29
llvm.nvvm.read.ptx.sreg.envreg3
llvm.nvvm.read.ptx.sreg.envreg30
llvm.nvvm.read.ptx.sreg.envreg31
llvm.nvvm.read.ptx.sreg.envreg4
llvm.nvvm.read.ptx.sreg.envreg5
llvm.nvvm.read.ptx.sreg.envreg6
llvm.nvvm.read.ptx.sreg.envreg7
llvm.nvvm.read.ptx.sreg.envreg8
llvm.nvvm.read.ptx.sreg.envreg9
llvm.nvvm.read.ptx.sreg.gridid
llvm.nvvm.read.ptx.sreg.laneid
llvm.nvvm.read.ptx.sreg.lanemask.eq
llvm.nvvm.read.ptx.sreg.lanemask.ge
llvm.nvvm.read.ptx.sreg.lanemask.gt
llvm.nvvm.read.ptx.sreg.lanemask.le
llvm.nvvm.read.ptx.sreg.lanemask.lt
llvm.nvvm.read.ptx.sreg.nctaid.w
llvm.nvvm.read.ptx.sreg.nctaid.x
llvm.nvvm.read.ptx.sreg.nctaid.y
llvm.nvvm.read.ptx.sreg.nctaid.z
llvm.nvvm.read.ptx.sreg.nsmid
llvm.nvvm.read.ptx.sreg.ntid.w
llvm.nvvm.read.ptx.sreg.ntid.x
llvm.nvvm.read.ptx.sreg.ntid.y
llvm.nvvm.read.ptx.sreg.ntid.z
llvm.nvvm.read.ptx.sreg.nwarpid
llvm.nvvm.read.ptx.sreg.pm0
llvm.nvvm.read.ptx.sreg.pm1
llvm.nvvm.read.ptx.sreg.pm2
llvm.nvvm.read.ptx.sreg.pm3
llvm.nvvm.read.ptx.sreg.smid
llvm.nvvm.read.ptx.sreg.tid.w
llvm.nvvm.read.ptx.sreg.tid.x
llvm.nvvm.read.ptx.sreg.tid.y
llvm.nvvm.read.ptx.sreg.tid.z
llvm.nvvm.read.ptx.sreg.warpid
llvm.nvvm.read.ptx.sreg.warpsize
llvm.nvvm.reflect
llvm.nvvm.rotate.b32
llvm.nvvm.rotate.b64
llvm.nvvm.rotate.right.b64
llvm.nvvm.round.d
llvm.nvvm.round.f
llvm.nvvm.round.ftz.f
llvm.nvvm.rsqrt.approx.d
llvm.nvvm.rsqrt.approx.f
llvm.nvvm.rsqrt.approx.ftz.f
llvm.nvvm.sad.i
llvm.nvvm.sad.ui
llvm.nvvm.saturate.d
llvm.nvvm.saturate.f
llvm.nvvm.saturate.ftz.f
llvm.nvvm.shfl.bfly.f32
llvm.nvvm.shfl.bfly.f32p
llvm.nvvm.shfl.bfly.i32
llvm.nvvm.shfl.bfly.i32p
llvm.nvvm.shfl.down.f32
llvm.nvvm.shfl.down.f32p
llvm.nvvm.shfl.down.i32
llvm.nvvm.shfl.down.i32p
llvm.nvvm.shfl.idx.f32
llvm.nvvm.shfl.idx.f32p
llvm.nvvm.shfl.idx.i32
llvm.nvvm.shfl.idx.i32p
llvm.nvvm.shfl.sync.bfly.f32
llvm.nvvm.shfl.sync.bfly.f32p
llvm.nvvm.shfl.sync.bfly.i32
llvm.nvvm.shfl.sync.bfly.i32p
llvm.nvvm.shfl.sync.down.f32
llvm.nvvm.shfl.sync.down.f32p
llvm.nvvm.shfl.sync.down.i32
llvm.nvvm.shfl.sync.down.i32p
llvm.nvvm.shfl.sync.idx.f32
llvm.nvvm.shfl.sync.idx.f32p
llvm.nvvm.shfl.sync.idx.i32
llvm.nvvm.shfl.sync.idx.i32p
llvm.nvvm.shfl.sync.up.f32
llvm.nvvm.shfl.sync.up.f32p
llvm.nvvm.shfl.sync.up.i32
llvm.nvvm.shfl.sync.up.i32p
llvm.nvvm.shfl.up.f32
llvm.nvvm.shfl.up.f32p
llvm.nvvm.shfl.up.i32
llvm.nvvm.shfl.up.i32p
llvm.nvvm.sin.approx.f
llvm.nvvm.sin.approx.ftz.f
llvm.nvvm.sqrt.approx.f
llvm.nvvm.sqrt.approx.ftz.f
llvm.nvvm.sqrt.f
llvm.nvvm.sqrt.rm.d
llvm.nvvm.sqrt.rm.f
llvm.nvvm.sqrt.rm.ftz.f
llvm.nvvm.sqrt.rn.d
llvm.nvvm.sqrt.rn.f
llvm.nvvm.sqrt.rn.ftz.f
llvm.nvvm.sqrt.rp.d
llvm.nvvm.sqrt.rp.f
llvm.nvvm.sqrt.rp.ftz.f
llvm.nvvm.sqrt.rz.d
llvm.nvvm.sqrt.rz.f
llvm.nvvm.sqrt.rz.ftz.f
llvm.nvvm.suld.1d.array.i16.clamp
llvm.nvvm.suld.1d.array.i16.trap
llvm.nvvm.suld.1d.array.i16.zero
llvm.nvvm.suld.1d.array.i32.clamp
llvm.nvvm.suld.1d.array.i32.trap
llvm.nvvm.suld.1d.array.i32.zero
llvm.nvvm.suld.1d.array.i64.clamp
llvm.nvvm.suld.1d.array.i64.trap
llvm.nvvm.suld.1d.array.i64.zero
llvm.nvvm.suld.1d.array.i8.clamp
llvm.nvvm.suld.1d.array.i8.trap
llvm.nvvm.suld.1d.array.i8.zero
llvm.nvvm.suld.1d.array.v2i16.clamp
llvm.nvvm.suld.1d.array.v2i16.trap
llvm.nvvm.suld.1d.array.v2i16.zero
llvm.nvvm.suld.1d.array.v2i32.clamp
llvm.nvvm.suld.1d.array.v2i32.trap
llvm.nvvm.suld.1d.array.v2i32.zero
llvm.nvvm.suld.1d.array.v2i64.clamp
llvm.nvvm.suld.1d.array.v2i64.trap
llvm.nvvm.suld.1d.array.v2i64.zero
llvm.nvvm.suld.1d.array.v2i8.clamp
llvm.nvvm.suld.1d.array.v2i8.trap
llvm.nvvm.suld.1d.array.v2i8.zero
llvm.nvvm.suld.1d.array.v4i16.clamp
llvm.nvvm.suld.1d.array.v4i16.trap
llvm.nvvm.suld.1d.array.v4i16.zero
llvm.nvvm.suld.1d.array.v4i32.clamp
llvm.nvvm.suld.1d.array.v4i32.trap
llvm.nvvm.suld.1d.array.v4i32.zero
llvm.nvvm.suld.1d.array.v4i8.clamp
llvm.nvvm.suld.1d.array.v4i8.trap
llvm.nvvm.suld.1d.array.v4i8.zero
llvm.nvvm.suld.1d.i16.clamp
llvm.nvvm.suld.1d.i16.trap
llvm.nvvm.suld.1d.i16.zero
llvm.nvvm.suld.1d.i32.clamp
llvm.nvvm.suld.1d.i32.trap
llvm.nvvm.suld.1d.i32.zero
llvm.nvvm.suld.1d.i64.clamp
llvm.nvvm.suld.1d.i64.trap
llvm.nvvm.suld.1d.i64.zero
llvm.nvvm.suld.1d.i8.clamp
llvm.nvvm.suld.1d.i8.trap
llvm.nvvm.suld.1d.i8.zero
llvm.nvvm.suld.1d.v2i16.clamp
llvm.nvvm.suld.1d.v2i16.trap
llvm.nvvm.suld.1d.v2i16.zero
llvm.nvvm.suld.1d.v2i32.clamp
llvm.nvvm.suld.1d.v2i32.trap
llvm.nvvm.suld.1d.v2i32.zero
llvm.nvvm.suld.1d.v2i64.clamp
llvm.nvvm.suld.1d.v2i64.trap
llvm.nvvm.suld.1d.v2i64.zero
llvm.nvvm.suld.1d.v2i8.clamp
llvm.nvvm.suld.1d.v2i8.trap
llvm.nvvm.suld.1d.v2i8.zero
llvm.nvvm.suld.1d.v4i16.clamp
llvm.nvvm.suld.1d.v4i16.trap
llvm.nvvm.suld.1d.v4i16.zero
llvm.nvvm.suld.1d.v4i32.clamp
llvm.nvvm.suld.1d.v4i32.trap
llvm.nvvm.suld.1d.v4i32.zero
llvm.nvvm.suld.1d.v4i8.clamp
llvm.nvvm.suld.1d.v4i8.trap
llvm.nvvm.suld.1d.v4i8.zero
llvm.nvvm.suld.2d.array.i16.clamp
llvm.nvvm.suld.2d.array.i16.trap
llvm.nvvm.suld.2d.array.i16.zero
llvm.nvvm.suld.2d.array.i32.clamp
llvm.nvvm.suld.2d.array.i32.trap
llvm.nvvm.suld.2d.array.i32.zero
llvm.nvvm.suld.2d.array.i64.clamp
llvm.nvvm.suld.2d.array.i64.trap
llvm.nvvm.suld.2d.array.i64.zero
llvm.nvvm.suld.2d.array.i8.clamp
llvm.nvvm.suld.2d.array.i8.trap
llvm.nvvm.suld.2d.array.i8.zero
llvm.nvvm.suld.2d.array.v2i16.clamp
llvm.nvvm.suld.2d.array.v2i16.trap
llvm.nvvm.suld.2d.array.v2i16.zero
llvm.nvvm.suld.2d.array.v2i32.clamp
llvm.nvvm.suld.2d.array.v2i32.trap
llvm.nvvm.suld.2d.array.v2i32.zero
llvm.nvvm.suld.2d.array.v2i64.clamp
llvm.nvvm.suld.2d.array.v2i64.trap
llvm.nvvm.suld.2d.array.v2i64.zero
llvm.nvvm.suld.2d.array.v2i8.clamp
llvm.nvvm.suld.2d.array.v2i8.trap
llvm.nvvm.suld.2d.array.v2i8.zero
llvm.nvvm.suld.2d.array.v4i16.clamp
llvm.nvvm.suld.2d.array.v4i16.trap
llvm.nvvm.suld.2d.array.v4i16.zero
llvm.nvvm.suld.2d.array.v4i32.clamp
llvm.nvvm.suld.2d.array.v4i32.trap
llvm.nvvm.suld.2d.array.v4i32.zero
llvm.nvvm.suld.2d.array.v4i8.clamp
llvm.nvvm.suld.2d.array.v4i8.trap
llvm.nvvm.suld.2d.array.v4i8.zero
llvm.nvvm.suld.2d.i16.clamp
llvm.nvvm.suld.2d.i16.trap
llvm.nvvm.suld.2d.i16.zero
llvm.nvvm.suld.2d.i32.clamp
llvm.nvvm.suld.2d.i32.trap
llvm.nvvm.suld.2d.i32.zero
llvm.nvvm.suld.2d.i64.clamp
llvm.nvvm.suld.2d.i64.trap
llvm.nvvm.suld.2d.i64.zero
llvm.nvvm.suld.2d.i8.clamp
llvm.nvvm.suld.2d.i8.trap
llvm.nvvm.suld.2d.i8.zero
llvm.nvvm.suld.2d.v2i16.clamp
llvm.nvvm.suld.2d.v2i16.trap
llvm.nvvm.suld.2d.v2i16.zero
llvm.nvvm.suld.2d.v2i32.clamp
llvm.nvvm.suld.2d.v2i32.trap
llvm.nvvm.suld.2d.v2i32.zero
llvm.nvvm.suld.2d.v2i64.clamp
llvm.nvvm.suld.2d.v2i64.trap
llvm.nvvm.suld.2d.v2i64.zero
llvm.nvvm.suld.2d.v2i8.clamp
llvm.nvvm.suld.2d.v2i8.trap
llvm.nvvm.suld.2d.v2i8.zero
llvm.nvvm.suld.2d.v4i16.clamp
llvm.nvvm.suld.2d.v4i16.trap
llvm.nvvm.suld.2d.v4i16.zero
llvm.nvvm.suld.2d.v4i32.clamp
llvm.nvvm.suld.2d.v4i32.trap
llvm.nvvm.suld.2d.v4i32.zero
llvm.nvvm.suld.2d.v4i8.clamp
llvm.nvvm.suld.2d.v4i8.trap
llvm.nvvm.suld.2d.v4i8.zero
llvm.nvvm.suld.3d.i16.clamp
llvm.nvvm.suld.3d.i16.trap
llvm.nvvm.suld.3d.i16.zero
llvm.nvvm.suld.3d.i32.clamp
llvm.nvvm.suld.3d.i32.trap
llvm.nvvm.suld.3d.i32.zero
llvm.nvvm.suld.3d.i64.clamp
llvm.nvvm.suld.3d.i64.trap
llvm.nvvm.suld.3d.i64.zero
llvm.nvvm.suld.3d.i8.clamp
llvm.nvvm.suld.3d.i8.trap
llvm.nvvm.suld.3d.i8.zero
llvm.nvvm.suld.3d.v2i16.clamp
llvm.nvvm.suld.3d.v2i16.trap
llvm.nvvm.suld.3d.v2i16.zero
llvm.nvvm.suld.3d.v2i32.clamp
llvm.nvvm.suld.3d.v2i32.trap
llvm.nvvm.suld.3d.v2i32.zero
llvm.nvvm.suld.3d.v2i64.clamp
llvm.nvvm.suld.3d.v2i64.trap
llvm.nvvm.suld.3d.v2i64.zero
llvm.nvvm.suld.3d.v2i8.clamp
llvm.nvvm.suld.3d.v2i8.trap
llvm.nvvm.suld.3d.v2i8.zero
llvm.nvvm.suld.3d.v4i16.clamp
llvm.nvvm.suld.3d.v4i16.trap
llvm.nvvm.suld.3d.v4i16.zero
llvm.nvvm.suld.3d.v4i32.clamp
llvm.nvvm.suld.3d.v4i32.trap
llvm.nvvm.suld.3d.v4i32.zero
llvm.nvvm.suld.3d.v4i8.clamp
llvm.nvvm.suld.3d.v4i8.trap
llvm.nvvm.suld.3d.v4i8.zero
llvm.nvvm.suq.array.size
llvm.nvvm.suq.channel.data.type
llvm.nvvm.suq.channel.order
llvm.nvvm.suq.depth
llvm.nvvm.suq.height
llvm.nvvm.suq.width
llvm.nvvm.sust.b.1d.array.i16.clamp
llvm.nvvm.sust.b.1d.array.i16.trap
llvm.nvvm.sust.b.1d.array.i16.zero
llvm.nvvm.sust.b.1d.array.i32.clamp
llvm.nvvm.sust.b.1d.array.i32.trap
llvm.nvvm.sust.b.1d.array.i32.zero
llvm.nvvm.sust.b.1d.array.i64.clamp
llvm.nvvm.sust.b.1d.array.i64.trap
llvm.nvvm.sust.b.1d.array.i64.zero
llvm.nvvm.sust.b.1d.array.i8.clamp
llvm.nvvm.sust.b.1d.array.i8.trap
llvm.nvvm.sust.b.1d.array.i8.zero
llvm.nvvm.sust.b.1d.array.v2i16.clamp
llvm.nvvm.sust.b.1d.array.v2i16.trap
llvm.nvvm.sust.b.1d.array.v2i16.zero
llvm.nvvm.sust.b.1d.array.v2i32.clamp
llvm.nvvm.sust.b.1d.array.v2i32.trap
llvm.nvvm.sust.b.1d.array.v2i32.zero
llvm.nvvm.sust.b.1d.array.v2i64.clamp
llvm.nvvm.sust.b.1d.array.v2i64.trap
llvm.nvvm.sust.b.1d.array.v2i64.zero
llvm.nvvm.sust.b.1d.array.v2i8.clamp
llvm.nvvm.sust.b.1d.array.v2i8.trap
llvm.nvvm.sust.b.1d.array.v2i8.zero
llvm.nvvm.sust.b.1d.array.v4i16.clamp
llvm.nvvm.sust.b.1d.array.v4i16.trap
llvm.nvvm.sust.b.1d.array.v4i16.zero
llvm.nvvm.sust.b.1d.array.v4i32.clamp
llvm.nvvm.sust.b.1d.array.v4i32.trap
llvm.nvvm.sust.b.1d.array.v4i32.zero
llvm.nvvm.sust.b.1d.array.v4i8.clamp
llvm.nvvm.sust.b.1d.array.v4i8.trap
llvm.nvvm.sust.b.1d.array.v4i8.zero
llvm.nvvm.sust.b.1d.i16.clamp
llvm.nvvm.sust.b.1d.i16.trap
llvm.nvvm.sust.b.1d.i16.zero
llvm.nvvm.sust.b.1d.i32.clamp
llvm.nvvm.sust.b.1d.i32.trap
llvm.nvvm.sust.b.1d.i32.zero
llvm.nvvm.sust.b.1d.i64.clamp
llvm.nvvm.sust.b.1d.i64.trap
llvm.nvvm.sust.b.1d.i64.zero
llvm.nvvm.sust.b.1d.i8.clamp
llvm.nvvm.sust.b.1d.i8.trap
llvm.nvvm.sust.b.1d.i8.zero
llvm.nvvm.sust.b.1d.v2i16.clamp
llvm.nvvm.sust.b.1d.v2i16.trap
llvm.nvvm.sust.b.1d.v2i16.zero
llvm.nvvm.sust.b.1d.v2i32.clamp
llvm.nvvm.sust.b.1d.v2i32.trap
llvm.nvvm.sust.b.1d.v2i32.zero
llvm.nvvm.sust.b.1d.v2i64.clamp
llvm.nvvm.sust.b.1d.v2i64.trap
llvm.nvvm.sust.b.1d.v2i64.zero
llvm.nvvm.sust.b.1d.v2i8.clamp
llvm.nvvm.sust.b.1d.v2i8.trap
llvm.nvvm.sust.b.1d.v2i8.zero
llvm.nvvm.sust.b.1d.v4i16.clamp
llvm.nvvm.sust.b.1d.v4i16.trap
llvm.nvvm.sust.b.1d.v4i16.zero
llvm.nvvm.sust.b.1d.v4i32.clamp
llvm.nvvm.sust.b.1d.v4i32.trap
llvm.nvvm.sust.b.1d.v4i32.zero
llvm.nvvm.sust.b.1d.v4i8.clamp
llvm.nvvm.sust.b.1d.v4i8.trap
llvm.nvvm.sust.b.1d.v4i8.zero
llvm.nvvm.sust.b.2d.array.i16.clamp
llvm.nvvm.sust.b.2d.array.i16.trap
llvm.nvvm.sust.b.2d.array.i16.zero
llvm.nvvm.sust.b.2d.array.i32.clamp
llvm.nvvm.sust.b.2d.array.i32.trap
llvm.nvvm.sust.b.2d.array.i32.zero
llvm.nvvm.sust.b.2d.array.i64.clamp
llvm.nvvm.sust.b.2d.array.i64.trap
llvm.nvvm.sust.b.2d.array.i64.zero
llvm.nvvm.sust.b.2d.array.i8.clamp
llvm.nvvm.sust.b.2d.array.i8.trap
llvm.nvvm.sust.b.2d.array.i8.zero
llvm.nvvm.sust.b.2d.array.v2i16.clamp
llvm.nvvm.sust.b.2d.array.v2i16.trap
llvm.nvvm.sust.b.2d.array.v2i16.zero
llvm.nvvm.sust.b.2d.array.v2i32.clamp
llvm.nvvm.sust.b.2d.array.v2i32.trap
llvm.nvvm.sust.b.2d.array.v2i32.zero
llvm.nvvm.sust.b.2d.array.v2i64.clamp
llvm.nvvm.sust.b.2d.array.v2i64.trap
llvm.nvvm.sust.b.2d.array.v2i64.zero
llvm.nvvm.sust.b.2d.array.v2i8.clamp
llvm.nvvm.sust.b.2d.array.v2i8.trap
llvm.nvvm.sust.b.2d.array.v2i8.zero
llvm.nvvm.sust.b.2d.array.v4i16.clamp
llvm.nvvm.sust.b.2d.array.v4i16.trap
llvm.nvvm.sust.b.2d.array.v4i16.zero
llvm.nvvm.sust.b.2d.array.v4i32.clamp
llvm.nvvm.sust.b.2d.array.v4i32.trap
llvm.nvvm.sust.b.2d.array.v4i32.zero
llvm.nvvm.sust.b.2d.array.v4i8.clamp
llvm.nvvm.sust.b.2d.array.v4i8.trap
llvm.nvvm.sust.b.2d.array.v4i8.zero
llvm.nvvm.sust.b.2d.i16.clamp
llvm.nvvm.sust.b.2d.i16.trap
llvm.nvvm.sust.b.2d.i16.zero
llvm.nvvm.sust.b.2d.i32.clamp
llvm.nvvm.sust.b.2d.i32.trap
llvm.nvvm.sust.b.2d.i32.zero
llvm.nvvm.sust.b.2d.i64.clamp
llvm.nvvm.sust.b.2d.i64.trap
llvm.nvvm.sust.b.2d.i64.zero
llvm.nvvm.sust.b.2d.i8.clamp
llvm.nvvm.sust.b.2d.i8.trap
llvm.nvvm.sust.b.2d.i8.zero
llvm.nvvm.sust.b.2d.v2i16.clamp
llvm.nvvm.sust.b.2d.v2i16.trap
llvm.nvvm.sust.b.2d.v2i16.zero
llvm.nvvm.sust.b.2d.v2i32.clamp
llvm.nvvm.sust.b.2d.v2i32.trap
llvm.nvvm.sust.b.2d.v2i32.zero
llvm.nvvm.sust.b.2d.v2i64.clamp
llvm.nvvm.sust.b.2d.v2i64.trap
llvm.nvvm.sust.b.2d.v2i64.zero
llvm.nvvm.sust.b.2d.v2i8.clamp
llvm.nvvm.sust.b.2d.v2i8.trap
llvm.nvvm.sust.b.2d.v2i8.zero
llvm.nvvm.sust.b.2d.v4i16.clamp
llvm.nvvm.sust.b.2d.v4i16.trap
llvm.nvvm.sust.b.2d.v4i16.zero
llvm.nvvm.sust.b.2d.v4i32.clamp
llvm.nvvm.sust.b.2d.v4i32.trap
llvm.nvvm.sust.b.2d.v4i32.zero
llvm.nvvm.sust.b.2d.v4i8.clamp
llvm.nvvm.sust.b.2d.v4i8.trap
llvm.nvvm.sust.b.2d.v4i8.zero
llvm.nvvm.sust.b.3d.i16.clamp
llvm.nvvm.sust.b.3d.i16.trap
llvm.nvvm.sust.b.3d.i16.zero
llvm.nvvm.sust.b.3d.i32.clamp
llvm.nvvm.sust.b.3d.i32.trap
llvm.nvvm.sust.b.3d.i32.zero
llvm.nvvm.sust.b.3d.i64.clamp
llvm.nvvm.sust.b.3d.i64.trap
llvm.nvvm.sust.b.3d.i64.zero
llvm.nvvm.sust.b.3d.i8.clamp
llvm.nvvm.sust.b.3d.i8.trap
llvm.nvvm.sust.b.3d.i8.zero
llvm.nvvm.sust.b.3d.v2i16.clamp
llvm.nvvm.sust.b.3d.v2i16.trap
llvm.nvvm.sust.b.3d.v2i16.zero
llvm.nvvm.sust.b.3d.v2i32.clamp
llvm.nvvm.sust.b.3d.v2i32.trap
llvm.nvvm.sust.b.3d.v2i32.zero
llvm.nvvm.sust.b.3d.v2i64.clamp
llvm.nvvm.sust.b.3d.v2i64.trap
llvm.nvvm.sust.b.3d.v2i64.zero
llvm.nvvm.sust.b.3d.v2i8.clamp
llvm.nvvm.sust.b.3d.v2i8.trap
llvm.nvvm.sust.b.3d.v2i8.zero
llvm.nvvm.sust.b.3d.v4i16.clamp
llvm.nvvm.sust.b.3d.v4i16.trap
llvm.nvvm.sust.b.3d.v4i16.zero
llvm.nvvm.sust.b.3d.v4i32.clamp
llvm.nvvm.sust.b.3d.v4i32.trap
llvm.nvvm.sust.b.3d.v4i32.zero
llvm.nvvm.sust.b.3d.v4i8.clamp
llvm.nvvm.sust.b.3d.v4i8.trap
llvm.nvvm.sust.b.3d.v4i8.zero
llvm.nvvm.sust.p.1d.array.i16.trap
llvm.nvvm.sust.p.1d.array.i32.trap
llvm.nvvm.sust.p.1d.array.i8.trap
llvm.nvvm.sust.p.1d.array.v2i16.trap
llvm.nvvm.sust.p.1d.array.v2i32.trap
llvm.nvvm.sust.p.1d.array.v2i8.trap
llvm.nvvm.sust.p.1d.array.v4i16.trap
llvm.nvvm.sust.p.1d.array.v4i32.trap
llvm.nvvm.sust.p.1d.array.v4i8.trap
llvm.nvvm.sust.p.1d.i16.trap
llvm.nvvm.sust.p.1d.i32.trap
llvm.nvvm.sust.p.1d.i8.trap
llvm.nvvm.sust.p.1d.v2i16.trap
llvm.nvvm.sust.p.1d.v2i32.trap
llvm.nvvm.sust.p.1d.v2i8.trap
llvm.nvvm.sust.p.1d.v4i16.trap
llvm.nvvm.sust.p.1d.v4i32.trap
llvm.nvvm.sust.p.1d.v4i8.trap
llvm.nvvm.sust.p.2d.array.i16.trap
llvm.nvvm.sust.p.2d.array.i32.trap
llvm.nvvm.sust.p.2d.array.i8.trap
llvm.nvvm.sust.p.2d.array.v2i16.trap
llvm.nvvm.sust.p.2d.array.v2i32.trap
llvm.nvvm.sust.p.2d.array.v2i8.trap
llvm.nvvm.sust.p.2d.array.v4i16.trap
llvm.nvvm.sust.p.2d.array.v4i32.trap
llvm.nvvm.sust.p.2d.array.v4i8.trap
llvm.nvvm.sust.p.2d.i16.trap
llvm.nvvm.sust.p.2d.i32.trap
llvm.nvvm.sust.p.2d.i8.trap
llvm.nvvm.sust.p.2d.v2i16.trap
llvm.nvvm.sust.p.2d.v2i32.trap
llvm.nvvm.sust.p.2d.v2i8.trap
llvm.nvvm.sust.p.2d.v4i16.trap
llvm.nvvm.sust.p.2d.v4i32.trap
llvm.nvvm.sust.p.2d.v4i8.trap
llvm.nvvm.sust.p.3d.i16.trap
llvm.nvvm.sust.p.3d.i32.trap
llvm.nvvm.sust.p.3d.i8.trap
llvm.nvvm.sust.p.3d.v2i16.trap
llvm.nvvm.sust.p.3d.v2i32.trap
llvm.nvvm.sust.p.3d.v2i8.trap
llvm.nvvm.sust.p.3d.v4i16.trap
llvm.nvvm.sust.p.3d.v4i32.trap
llvm.nvvm.sust.p.3d.v4i8.trap
llvm.nvvm.swap.lo.hi.b64
llvm.nvvm.tex.1d.array.grad.v4f32.f32
llvm.nvvm.tex.1d.array.grad.v4s32.f32
llvm.nvvm.tex.1d.array.grad.v4u32.f32
llvm.nvvm.tex.1d.array.level.v4f32.f32
llvm.nvvm.tex.1d.array.level.v4s32.f32
llvm.nvvm.tex.1d.array.level.v4u32.f32
llvm.nvvm.tex.1d.array.v4f32.f32
llvm.nvvm.tex.1d.array.v4f32.s32
llvm.nvvm.tex.1d.array.v4s32.f32
llvm.nvvm.tex.1d.array.v4s32.s32
llvm.nvvm.tex.1d.array.v4u32.f32
llvm.nvvm.tex.1d.array.v4u32.s32
llvm.nvvm.tex.1d.grad.v4f32.f32
llvm.nvvm.tex.1d.grad.v4s32.f32
llvm.nvvm.tex.1d.grad.v4u32.f32
llvm.nvvm.tex.1d.level.v4f32.f32
llvm.nvvm.tex.1d.level.v4s32.f32
llvm.nvvm.tex.1d.level.v4u32.f32
llvm.nvvm.tex.1d.v4f32.f32
llvm.nvvm.tex.1d.v4f32.s32
llvm.nvvm.tex.1d.v4s32.f32
llvm.nvvm.tex.1d.v4s32.s32
llvm.nvvm.tex.1d.v4u32.f32
llvm.nvvm.tex.1d.v4u32.s32
llvm.nvvm.tex.2d.array.grad.v4f32.f32
llvm.nvvm.tex.2d.array.grad.v4s32.f32
llvm.nvvm.tex.2d.array.grad.v4u32.f32
llvm.nvvm.tex.2d.array.level.v4f32.f32
llvm.nvvm.tex.2d.array.level.v4s32.f32
llvm.nvvm.tex.2d.array.level.v4u32.f32
llvm.nvvm.tex.2d.array.v4f32.f32
llvm.nvvm.tex.2d.array.v4f32.s32
llvm.nvvm.tex.2d.array.v4s32.f32
llvm.nvvm.tex.2d.array.v4s32.s32
llvm.nvvm.tex.2d.array.v4u32.f32
llvm.nvvm.tex.2d.array.v4u32.s32
llvm.nvvm.tex.2d.grad.v4f32.f32
llvm.nvvm.tex.2d.grad.v4s32.f32
llvm.nvvm.tex.2d.grad.v4u32.f32
llvm.nvvm.tex.2d.level.v4f32.f32
llvm.nvvm.tex.2d.level.v4s32.f32
llvm.nvvm.tex.2d.level.v4u32.f32
llvm.nvvm.tex.2d.v4f32.f32
llvm.nvvm.tex.2d.v4f32.s32
llvm.nvvm.tex.2d.v4s32.f32
llvm.nvvm.tex.2d.v4s32.s32
llvm.nvvm.tex.2d.v4u32.f32
llvm.nvvm.tex.2d.v4u32.s32
llvm.nvvm.tex.3d.grad.v4f32.f32
llvm.nvvm.tex.3d.grad.v4s32.f32
llvm.nvvm.tex.3d.grad.v4u32.f32
llvm.nvvm.tex.3d.level.v4f32.f32
llvm.nvvm.tex.3d.level.v4s32.f32
llvm.nvvm.tex.3d.level.v4u32.f32
llvm.nvvm.tex.3d.v4f32.f32
llvm.nvvm.tex.3d.v4f32.s32
llvm.nvvm.tex.3d.v4s32.f32
llvm.nvvm.tex.3d.v4s32.s32
llvm.nvvm.tex.3d.v4u32.f32
llvm.nvvm.tex.3d.v4u32.s32
llvm.nvvm.tex.cube.array.level.v4f32.f32
llvm.nvvm.tex.cube.array.level.v4s32.f32
llvm.nvvm.tex.cube.array.level.v4u32.f32
llvm.nvvm.tex.cube.array.v4f32.f32
llvm.nvvm.tex.cube.array.v4s32.f32
llvm.nvvm.tex.cube.array.v4u32.f32
llvm.nvvm.tex.cube.level.v4f32.f32
llvm.nvvm.tex.cube.level.v4s32.f32
llvm.nvvm.tex.cube.level.v4u32.f32
llvm.nvvm.tex.cube.v4f32.f32
llvm.nvvm.tex.cube.v4s32.f32
llvm.nvvm.tex.cube.v4u32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.array.level.v4f32.f32
llvm.nvvm.tex.unified.1d.array.level.v4s32.f32
llvm.nvvm.tex.unified.1d.array.level.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.s32
llvm.nvvm.tex.unified.1d.array.v4s32.f32
llvm.nvvm.tex.unified.1d.array.v4s32.s32
llvm.nvvm.tex.unified.1d.array.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4u32.s32
llvm.nvvm.tex.unified.1d.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.level.v4f32.f32
llvm.nvvm.tex.unified.1d.level.v4s32.f32
llvm.nvvm.tex.unified.1d.level.v4u32.f32
llvm.nvvm.tex.unified.1d.v4f32.f32
llvm.nvvm.tex.unified.1d.v4f32.s32
llvm.nvvm.tex.unified.1d.v4s32.f32
llvm.nvvm.tex.unified.1d.v4s32.s32
llvm.nvvm.tex.unified.1d.v4u32.f32
llvm.nvvm.tex.unified.1d.v4u32.s32
llvm.nvvm.tex.unified.2d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.array.level.v4f32.f32
llvm.nvvm.tex.unified.2d.array.level.v4s32.f32
llvm.nvvm.tex.unified.2d.array.level.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.s32
llvm.nvvm.tex.unified.2d.array.v4s32.f32
llvm.nvvm.tex.unified.2d.array.v4s32.s32
llvm.nvvm.tex.unified.2d.array.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4u32.s32
llvm.nvvm.tex.unified.2d.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.level.v4f32.f32
llvm.nvvm.tex.unified.2d.level.v4s32.f32
llvm.nvvm.tex.unified.2d.level.v4u32.f32
llvm.nvvm.tex.unified.2d.v4f32.f32
llvm.nvvm.tex.unified.2d.v4f32.s32
llvm.nvvm.tex.unified.2d.v4s32.f32
llvm.nvvm.tex.unified.2d.v4s32.s32
llvm.nvvm.tex.unified.2d.v4u32.f32
llvm.nvvm.tex.unified.2d.v4u32.s32
llvm.nvvm.tex.unified.3d.grad.v4f32.f32
llvm.nvvm.tex.unified.3d.grad.v4s32.f32
llvm.nvvm.tex.unified.3d.grad.v4u32.f32
llvm.nvvm.tex.unified.3d.level.v4f32.f32
llvm.nvvm.tex.unified.3d.level.v4s32.f32
llvm.nvvm.tex.unified.3d.level.v4u32.f32
llvm.nvvm.tex.unified.3d.v4f32.f32
llvm.nvvm.tex.unified.3d.v4f32.s32
llvm.nvvm.tex.unified.3d.v4s32.f32
llvm.nvvm.tex.unified.3d.v4s32.s32
llvm.nvvm.tex.unified.3d.v4u32.f32
llvm.nvvm.tex.unified.3d.v4u32.s32
llvm.nvvm.tex.unified.cube.array.level.v4f32.f32
llvm.nvvm.tex.unified.cube.array.level.v4s32.f32
llvm.nvvm.tex.unified.cube.array.level.v4u32.f32
llvm.nvvm.tex.unified.cube.array.v4f32.f32
llvm.nvvm.tex.unified.cube.array.v4s32.f32
llvm.nvvm.tex.unified.cube.array.v4u32.f32
llvm.nvvm.tex.unified.cube.level.v4f32.f32
llvm.nvvm.tex.unified.cube.level.v4s32.f32
llvm.nvvm.tex.unified.cube.level.v4u32.f32
llvm.nvvm.tex.unified.cube.v4f32.f32
llvm.nvvm.tex.unified.cube.v4s32.f32
llvm.nvvm.tex.unified.cube.v4u32.f32
llvm.nvvm.texsurf.handle
llvm.nvvm.texsurf.handle.internal
llvm.nvvm.tld4.a.2d.v4f32.f32
llvm.nvvm.tld4.a.2d.v4s32.f32
llvm.nvvm.tld4.a.2d.v4u32.f32
llvm.nvvm.tld4.b.2d.v4f32.f32
llvm.nvvm.tld4.b.2d.v4s32.f32
llvm.nvvm.tld4.b.2d.v4u32.f32
llvm.nvvm.tld4.g.2d.v4f32.f32
llvm.nvvm.tld4.g.2d.v4s32.f32
llvm.nvvm.tld4.g.2d.v4u32.f32
llvm.nvvm.tld4.r.2d.v4f32.f32
llvm.nvvm.tld4.r.2d.v4s32.f32
llvm.nvvm.tld4.r.2d.v4u32.f32
llvm.nvvm.tld4.unified.a.2d.v4f32.f32
llvm.nvvm.tld4.unified.a.2d.v4s32.f32
llvm.nvvm.tld4.unified.a.2d.v4u32.f32
llvm.nvvm.tld4.unified.b.2d.v4f32.f32
llvm.nvvm.tld4.unified.b.2d.v4s32.f32
llvm.nvvm.tld4.unified.b.2d.v4u32.f32
llvm.nvvm.tld4.unified.g.2d.v4f32.f32
llvm.nvvm.tld4.unified.g.2d.v4s32.f32
llvm.nvvm.tld4.unified.g.2d.v4u32.f32
llvm.nvvm.tld4.unified.r.2d.v4f32.f32
llvm.nvvm.tld4.unified.r.2d.v4s32.f32
llvm.nvvm.tld4.unified.r.2d.v4u32.f32
llvm.nvvm.trunc.d
llvm.nvvm.trunc.f
llvm.nvvm.trunc.ftz.f
llvm.nvvm.txq.array.size
llvm.nvvm.txq.channel.data.type
llvm.nvvm.txq.channel.order
llvm.nvvm.txq.depth
llvm.nvvm.txq.height
llvm.nvvm.txq.num.mipmap.levels
llvm.nvvm.txq.num.samples
llvm.nvvm.txq.width
llvm.nvvm.ui2d.rm
llvm.nvvm.ui2d.rn
llvm.nvvm.ui2d.rp
llvm.nvvm.ui2d.rz
llvm.nvvm.ui2f.rm
llvm.nvvm.ui2f.rn
llvm.nvvm.ui2f.rp
llvm.nvvm.ui2f.rz
llvm.nvvm.ull2d.rm
llvm.nvvm.ull2d.rn
llvm.nvvm.ull2d.rp
llvm.nvvm.ull2d.rz
llvm.nvvm.ull2f.rm
llvm.nvvm.ull2f.rn
llvm.nvvm.ull2f.rp
llvm.nvvm.ull2f.rz
llvm.nvvm.vote.all
llvm.nvvm.vote.all.sync
llvm.nvvm.vote.any
llvm.nvvm.vote.any.sync
llvm.nvvm.vote.ballot
llvm.nvvm.vote.ballot.sync
llvm.nvvm.vote.uni
llvm.nvvm.vote.uni.sync
llvm.nvvm.wmma.m16n16k16.load.a.col.f16
llvm.nvvm.wmma.m16n16k16.load.a.col.s8
llvm.nvvm.wmma.m16n16k16.load.a.col.stride.f16
llvm.nvvm.wmma.m16n16k16.load.a.col.stride.s8
llvm.nvvm.wmma.m16n16k16.load.a.col.stride.u8
llvm.nvvm.wmma.m16n16k16.load.a.col.u8
llvm.nvvm.wmma.m16n16k16.load.a.row.f16
llvm.nvvm.wmma.m16n16k16.load.a.row.s8
llvm.nvvm.wmma.m16n16k16.load.a.row.stride.f16
llvm.nvvm.wmma.m16n16k16.load.a.row.stride.s8
llvm.nvvm.wmma.m16n16k16.load.a.row.stride.u8
llvm.nvvm.wmma.m16n16k16.load.a.row.u8
llvm.nvvm.wmma.m16n16k16.load.b.col.f16
llvm.nvvm.wmma.m16n16k16.load.b.col.s8
llvm.nvvm.wmma.m16n16k16.load.b.col.stride.f16
llvm.nvvm.wmma.m16n16k16.load.b.col.stride.s8
llvm.nvvm.wmma.m16n16k16.load.b.col.stride.u8
llvm.nvvm.wmma.m16n16k16.load.b.col.u8
llvm.nvvm.wmma.m16n16k16.load.b.row.f16
llvm.nvvm.wmma.m16n16k16.load.b.row.s8
llvm.nvvm.wmma.m16n16k16.load.b.row.stride.f16
llvm.nvvm.wmma.m16n16k16.load.b.row.stride.s8
llvm.nvvm.wmma.m16n16k16.load.b.row.stride.u8
llvm.nvvm.wmma.m16n16k16.load.b.row.u8
llvm.nvvm.wmma.m16n16k16.load.c.col.f16
llvm.nvvm.wmma.m16n16k16.load.c.col.f32
llvm.nvvm.wmma.m16n16k16.load.c.col.s32
llvm.nvvm.wmma.m16n16k16.load.c.col.stride.f16
llvm.nvvm.wmma.m16n16k16.load.c.col.stride.f32
llvm.nvvm.wmma.m16n16k16.load.c.col.stride.s32
llvm.nvvm.wmma.m16n16k16.load.c.row.f16
llvm.nvvm.wmma.m16n16k16.load.c.row.f32
llvm.nvvm.wmma.m16n16k16.load.c.row.s32
llvm.nvvm.wmma.m16n16k16.load.c.row.stride.f16
llvm.nvvm.wmma.m16n16k16.load.c.row.stride.f32
llvm.nvvm.wmma.m16n16k16.load.c.row.stride.s32
llvm.nvvm.wmma.m16n16k16.mma.col.col.f16.f16
llvm.nvvm.wmma.m16n16k16.mma.col.col.f16.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.f16.f32
llvm.nvvm.wmma.m16n16k16.mma.col.col.f16.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.f32.f16
llvm.nvvm.wmma.m16n16k16.mma.col.col.f32.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.f32.f32
llvm.nvvm.wmma.m16n16k16.mma.col.col.f32.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.s8
llvm.nvvm.wmma.m16n16k16.mma.col.col.s8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.u8
llvm.nvvm.wmma.m16n16k16.mma.col.col.u8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.f16.f16
llvm.nvvm.wmma.m16n16k16.mma.col.row.f16.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.f16.f32
llvm.nvvm.wmma.m16n16k16.mma.col.row.f16.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.f32.f16
llvm.nvvm.wmma.m16n16k16.mma.col.row.f32.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.f32.f32
llvm.nvvm.wmma.m16n16k16.mma.col.row.f32.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.s8
llvm.nvvm.wmma.m16n16k16.mma.col.row.s8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.u8
llvm.nvvm.wmma.m16n16k16.mma.col.row.u8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.f16.f16
llvm.nvvm.wmma.m16n16k16.mma.row.col.f16.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.f16.f32
llvm.nvvm.wmma.m16n16k16.mma.row.col.f16.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.f32.f16
llvm.nvvm.wmma.m16n16k16.mma.row.col.f32.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.f32.f32
llvm.nvvm.wmma.m16n16k16.mma.row.col.f32.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.s8
llvm.nvvm.wmma.m16n16k16.mma.row.col.s8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.u8
llvm.nvvm.wmma.m16n16k16.mma.row.col.u8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.f16.f16
llvm.nvvm.wmma.m16n16k16.mma.row.row.f16.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.f16.f32
llvm.nvvm.wmma.m16n16k16.mma.row.row.f16.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.f32.f16
llvm.nvvm.wmma.m16n16k16.mma.row.row.f32.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.f32.f32
llvm.nvvm.wmma.m16n16k16.mma.row.row.f32.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.s8
llvm.nvvm.wmma.m16n16k16.mma.row.row.s8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.u8
llvm.nvvm.wmma.m16n16k16.mma.row.row.u8.satfinite
llvm.nvvm.wmma.m16n16k16.store.d.col.f16
llvm.nvvm.wmma.m16n16k16.store.d.col.f32
llvm.nvvm.wmma.m16n16k16.store.d.col.s32
llvm.nvvm.wmma.m16n16k16.store.d.col.stride.f16
llvm.nvvm.wmma.m16n16k16.store.d.col.stride.f32
llvm.nvvm.wmma.m16n16k16.store.d.col.stride.s32
llvm.nvvm.wmma.m16n16k16.store.d.row.f16
llvm.nvvm.wmma.m16n16k16.store.d.row.f32
llvm.nvvm.wmma.m16n16k16.store.d.row.s32
llvm.nvvm.wmma.m16n16k16.store.d.row.stride.f16
llvm.nvvm.wmma.m16n16k16.store.d.row.stride.f32
llvm.nvvm.wmma.m16n16k16.store.d.row.stride.s32
llvm.nvvm.wmma.m32n8k16.load.a.col.f16
llvm.nvvm.wmma.m32n8k16.load.a.col.s8
llvm.nvvm.wmma.m32n8k16.load.a.col.stride.f16
llvm.nvvm.wmma.m32n8k16.load.a.col.stride.s8
llvm.nvvm.wmma.m32n8k16.load.a.col.stride.u8
llvm.nvvm.wmma.m32n8k16.load.a.col.u8
llvm.nvvm.wmma.m32n8k16.load.a.row.f16
llvm.nvvm.wmma.m32n8k16.load.a.row.s8
llvm.nvvm.wmma.m32n8k16.load.a.row.stride.f16
llvm.nvvm.wmma.m32n8k16.load.a.row.stride.s8
llvm.nvvm.wmma.m32n8k16.load.a.row.stride.u8
llvm.nvvm.wmma.m32n8k16.load.a.row.u8
llvm.nvvm.wmma.m32n8k16.load.b.col.f16
llvm.nvvm.wmma.m32n8k16.load.b.col.s8
llvm.nvvm.wmma.m32n8k16.load.b.col.stride.f16
llvm.nvvm.wmma.m32n8k16.load.b.col.stride.s8
llvm.nvvm.wmma.m32n8k16.load.b.col.stride.u8
llvm.nvvm.wmma.m32n8k16.load.b.col.u8
llvm.nvvm.wmma.m32n8k16.load.b.row.f16
llvm.nvvm.wmma.m32n8k16.load.b.row.s8
llvm.nvvm.wmma.m32n8k16.load.b.row.stride.f16
llvm.nvvm.wmma.m32n8k16.load.b.row.stride.s8
llvm.nvvm.wmma.m32n8k16.load.b.row.stride.u8
llvm.nvvm.wmma.m32n8k16.load.b.row.u8
llvm.nvvm.wmma.m32n8k16.load.c.col.f16
llvm.nvvm.wmma.m32n8k16.load.c.col.f32
llvm.nvvm.wmma.m32n8k16.load.c.col.s32
llvm.nvvm.wmma.m32n8k16.load.c.col.stride.f16
llvm.nvvm.wmma.m32n8k16.load.c.col.stride.f32
llvm.nvvm.wmma.m32n8k16.load.c.col.stride.s32
llvm.nvvm.wmma.m32n8k16.load.c.row.f16
llvm.nvvm.wmma.m32n8k16.load.c.row.f32
llvm.nvvm.wmma.m32n8k16.load.c.row.s32
llvm.nvvm.wmma.m32n8k16.load.c.row.stride.f16
llvm.nvvm.wmma.m32n8k16.load.c.row.stride.f32
llvm.nvvm.wmma.m32n8k16.load.c.row.stride.s32
llvm.nvvm.wmma.m32n8k16.mma.col.col.f16.f16
llvm.nvvm.wmma.m32n8k16.mma.col.col.f16.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.f16.f32
llvm.nvvm.wmma.m32n8k16.mma.col.col.f16.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.f32.f16
llvm.nvvm.wmma.m32n8k16.mma.col.col.f32.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.f32.f32
llvm.nvvm.wmma.m32n8k16.mma.col.col.f32.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.s8
llvm.nvvm.wmma.m32n8k16.mma.col.col.s8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.u8
llvm.nvvm.wmma.m32n8k16.mma.col.col.u8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.f16.f16
llvm.nvvm.wmma.m32n8k16.mma.col.row.f16.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.f16.f32
llvm.nvvm.wmma.m32n8k16.mma.col.row.f16.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.f32.f16
llvm.nvvm.wmma.m32n8k16.mma.col.row.f32.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.f32.f32
llvm.nvvm.wmma.m32n8k16.mma.col.row.f32.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.s8
llvm.nvvm.wmma.m32n8k16.mma.col.row.s8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.u8
llvm.nvvm.wmma.m32n8k16.mma.col.row.u8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.f16.f16
llvm.nvvm.wmma.m32n8k16.mma.row.col.f16.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.f16.f32
llvm.nvvm.wmma.m32n8k16.mma.row.col.f16.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.f32.f16
llvm.nvvm.wmma.m32n8k16.mma.row.col.f32.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.f32.f32
llvm.nvvm.wmma.m32n8k16.mma.row.col.f32.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.s8
llvm.nvvm.wmma.m32n8k16.mma.row.col.s8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.u8
llvm.nvvm.wmma.m32n8k16.mma.row.col.u8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.f16.f16
llvm.nvvm.wmma.m32n8k16.mma.row.row.f16.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.f16.f32
llvm.nvvm.wmma.m32n8k16.mma.row.row.f16.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.f32.f16
llvm.nvvm.wmma.m32n8k16.mma.row.row.f32.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.f32.f32
llvm.nvvm.wmma.m32n8k16.mma.row.row.f32.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.s8
llvm.nvvm.wmma.m32n8k16.mma.row.row.s8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.u8
llvm.nvvm.wmma.m32n8k16.mma.row.row.u8.satfinite
llvm.nvvm.wmma.m32n8k16.store.d.col.f16
llvm.nvvm.wmma.m32n8k16.store.d.col.f32
llvm.nvvm.wmma.m32n8k16.store.d.col.s32
llvm.nvvm.wmma.m32n8k16.store.d.col.stride.f16
llvm.nvvm.wmma.m32n8k16.store.d.col.stride.f32
llvm.nvvm.wmma.m32n8k16.store.d.col.stride.s32
llvm.nvvm.wmma.m32n8k16.store.d.row.f16
llvm.nvvm.wmma.m32n8k16.store.d.row.f32
llvm.nvvm.wmma.m32n8k16.store.d.row.s32
llvm.nvvm.wmma.m32n8k16.store.d.row.stride.f16
llvm.nvvm.wmma.m32n8k16.store.d.row.stride.f32
llvm.nvvm.wmma.m32n8k16.store.d.row.stride.s32
llvm.nvvm.wmma.m8n32k16.load.a.col.f16
llvm.nvvm.wmma.m8n32k16.load.a.col.s8
llvm.nvvm.wmma.m8n32k16.load.a.col.stride.f16
llvm.nvvm.wmma.m8n32k16.load.a.col.stride.s8
llvm.nvvm.wmma.m8n32k16.load.a.col.stride.u8
llvm.nvvm.wmma.m8n32k16.load.a.col.u8
llvm.nvvm.wmma.m8n32k16.load.a.row.f16
llvm.nvvm.wmma.m8n32k16.load.a.row.s8
llvm.nvvm.wmma.m8n32k16.load.a.row.stride.f16
llvm.nvvm.wmma.m8n32k16.load.a.row.stride.s8
llvm.nvvm.wmma.m8n32k16.load.a.row.stride.u8
llvm.nvvm.wmma.m8n32k16.load.a.row.u8
llvm.nvvm.wmma.m8n32k16.load.b.col.f16
llvm.nvvm.wmma.m8n32k16.load.b.col.s8
llvm.nvvm.wmma.m8n32k16.load.b.col.stride.f16
llvm.nvvm.wmma.m8n32k16.load.b.col.stride.s8
llvm.nvvm.wmma.m8n32k16.load.b.col.stride.u8
llvm.nvvm.wmma.m8n32k16.load.b.col.u8
llvm.nvvm.wmma.m8n32k16.load.b.row.f16
llvm.nvvm.wmma.m8n32k16.load.b.row.s8
llvm.nvvm.wmma.m8n32k16.load.b.row.stride.f16
llvm.nvvm.wmma.m8n32k16.load.b.row.stride.s8
llvm.nvvm.wmma.m8n32k16.load.b.row.stride.u8
llvm.nvvm.wmma.m8n32k16.load.b.row.u8
llvm.nvvm.wmma.m8n32k16.load.c.col.f16
llvm.nvvm.wmma.m8n32k16.load.c.col.f32
llvm.nvvm.wmma.m8n32k16.load.c.col.s32
llvm.nvvm.wmma.m8n32k16.load.c.col.stride.f16
llvm.nvvm.wmma.m8n32k16.load.c.col.stride.f32
llvm.nvvm.wmma.m8n32k16.load.c.col.stride.s32
llvm.nvvm.wmma.m8n32k16.load.c.row.f16
llvm.nvvm.wmma.m8n32k16.load.c.row.f32
llvm.nvvm.wmma.m8n32k16.load.c.row.s32
llvm.nvvm.wmma.m8n32k16.load.c.row.stride.f16
llvm.nvvm.wmma.m8n32k16.load.c.row.stride.f32
llvm.nvvm.wmma.m8n32k16.load.c.row.stride.s32
llvm.nvvm.wmma.m8n32k16.mma.col.col.f16.f16
llvm.nvvm.wmma.m8n32k16.mma.col.col.f16.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.f16.f32
llvm.nvvm.wmma.m8n32k16.mma.col.col.f16.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.f32.f16
llvm.nvvm.wmma.m8n32k16.mma.col.col.f32.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.f32.f32
llvm.nvvm.wmma.m8n32k16.mma.col.col.f32.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.s8
llvm.nvvm.wmma.m8n32k16.mma.col.col.s8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.u8
llvm.nvvm.wmma.m8n32k16.mma.col.col.u8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.f16.f16
llvm.nvvm.wmma.m8n32k16.mma.col.row.f16.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.f16.f32
llvm.nvvm.wmma.m8n32k16.mma.col.row.f16.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.f32.f16
llvm.nvvm.wmma.m8n32k16.mma.col.row.f32.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.f32.f32
llvm.nvvm.wmma.m8n32k16.mma.col.row.f32.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.s8
llvm.nvvm.wmma.m8n32k16.mma.col.row.s8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.u8
llvm.nvvm.wmma.m8n32k16.mma.col.row.u8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.f16.f16
llvm.nvvm.wmma.m8n32k16.mma.row.col.f16.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.f16.f32
llvm.nvvm.wmma.m8n32k16.mma.row.col.f16.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.f32.f16
llvm.nvvm.wmma.m8n32k16.mma.row.col.f32.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.f32.f32
llvm.nvvm.wmma.m8n32k16.mma.row.col.f32.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.s8
llvm.nvvm.wmma.m8n32k16.mma.row.col.s8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.u8
llvm.nvvm.wmma.m8n32k16.mma.row.col.u8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.f16.f16
llvm.nvvm.wmma.m8n32k16.mma.row.row.f16.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.f16.f32
llvm.nvvm.wmma.m8n32k16.mma.row.row.f16.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.f32.f16
llvm.nvvm.wmma.m8n32k16.mma.row.row.f32.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.f32.f32
llvm.nvvm.wmma.m8n32k16.mma.row.row.f32.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.s8
llvm.nvvm.wmma.m8n32k16.mma.row.row.s8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.u8
llvm.nvvm.wmma.m8n32k16.mma.row.row.u8.satfinite
llvm.nvvm.wmma.m8n32k16.store.d.col.f16
llvm.nvvm.wmma.m8n32k16.store.d.col.f32
llvm.nvvm.wmma.m8n32k16.store.d.col.s32
llvm.nvvm.wmma.m8n32k16.store.d.col.stride.f16
llvm.nvvm.wmma.m8n32k16.store.d.col.stride.f32
llvm.nvvm.wmma.m8n32k16.store.d.col.stride.s32
llvm.nvvm.wmma.m8n32k16.store.d.row.f16
llvm.nvvm.wmma.m8n32k16.store.d.row.f32
llvm.nvvm.wmma.m8n32k16.store.d.row.s32
llvm.nvvm.wmma.m8n32k16.store.d.row.stride.f16
llvm.nvvm.wmma.m8n32k16.store.d.row.stride.f32
llvm.nvvm.wmma.m8n32k16.store.d.row.stride.s32
llvm.nvvm.wmma.m8n8k128.load.a.row.b1
llvm.nvvm.wmma.m8n8k128.load.a.row.stride.b1
llvm.nvvm.wmma.m8n8k128.load.b.col.b1
llvm.nvvm.wmma.m8n8k128.load.b.col.stride.b1
llvm.nvvm.wmma.m8n8k128.load.c.col.s32
llvm.nvvm.wmma.m8n8k128.load.c.col.stride.s32
llvm.nvvm.wmma.m8n8k128.load.c.row.s32
llvm.nvvm.wmma.m8n8k128.load.c.row.stride.s32
llvm.nvvm.wmma.m8n8k128.mma.row.col.b1
llvm.nvvm.wmma.m8n8k128.store.d.col.s32
llvm.nvvm.wmma.m8n8k128.store.d.col.stride.s32
llvm.nvvm.wmma.m8n8k128.store.d.row.s32
llvm.nvvm.wmma.m8n8k128.store.d.row.stride.s32
llvm.nvvm.wmma.m8n8k32.load.a.row.s4
llvm.nvvm.wmma.m8n8k32.load.a.row.stride.s4
llvm.nvvm.wmma.m8n8k32.load.a.row.stride.u4
llvm.nvvm.wmma.m8n8k32.load.a.row.u4
llvm.nvvm.wmma.m8n8k32.load.b.col.s4
llvm.nvvm.wmma.m8n8k32.load.b.col.stride.s4
llvm.nvvm.wmma.m8n8k32.load.b.col.stride.u4
llvm.nvvm.wmma.m8n8k32.load.b.col.u4
llvm.nvvm.wmma.m8n8k32.load.c.col.s32
llvm.nvvm.wmma.m8n8k32.load.c.col.stride.s32
llvm.nvvm.wmma.m8n8k32.load.c.row.s32
llvm.nvvm.wmma.m8n8k32.load.c.row.stride.s32
llvm.nvvm.wmma.m8n8k32.mma.row.col.s4
llvm.nvvm.wmma.m8n8k32.mma.row.col.s4.satfinite
llvm.nvvm.wmma.m8n8k32.mma.row.col.u4
llvm.nvvm.wmma.m8n8k32.mma.row.col.u4.satfinite
llvm.nvvm.wmma.m8n8k32.store.d.col.s32
llvm.nvvm.wmma.m8n8k32.store.d.col.stride.s32
llvm.nvvm.wmma.m8n8k32.store.d.row.s32
llvm.nvvm.wmma.m8n8k32.store.d.row.stride.s32
llvm.ppc.addf128.round.to.odd
llvm.ppc.altivec.crypto.vcipher
llvm.ppc.altivec.crypto.vcipherlast
llvm.ppc.altivec.crypto.vncipher
llvm.ppc.altivec.crypto.vncipherlast
llvm.ppc.altivec.crypto.vpermxor
llvm.ppc.altivec.crypto.vpmsumb
llvm.ppc.altivec.crypto.vpmsumd
llvm.ppc.altivec.crypto.vpmsumh
llvm.ppc.altivec.crypto.vpmsumw
llvm.ppc.altivec.crypto.vsbox
llvm.ppc.altivec.crypto.vshasigmad
llvm.ppc.altivec.crypto.vshasigmaw
llvm.ppc.altivec.dss
llvm.ppc.altivec.dssall
llvm.ppc.altivec.dst
llvm.ppc.altivec.dstst
llvm.ppc.altivec.dststt
llvm.ppc.altivec.dstt
llvm.ppc.altivec.lvebx
llvm.ppc.altivec.lvehx
llvm.ppc.altivec.lvewx
llvm.ppc.altivec.lvsl
llvm.ppc.altivec.lvsr
llvm.ppc.altivec.lvx
llvm.ppc.altivec.lvxl
llvm.ppc.altivec.mfvscr
llvm.ppc.altivec.mtvscr
llvm.ppc.altivec.mtvsrbm
llvm.ppc.altivec.mtvsrdm
llvm.ppc.altivec.mtvsrhm
llvm.ppc.altivec.mtvsrqm
llvm.ppc.altivec.mtvsrwm
llvm.ppc.altivec.stvebx
llvm.ppc.altivec.stvehx
llvm.ppc.altivec.stvewx
llvm.ppc.altivec.stvx
llvm.ppc.altivec.stvxl
llvm.ppc.altivec.vabsdub
llvm.ppc.altivec.vabsduh
llvm.ppc.altivec.vabsduw
llvm.ppc.altivec.vaddcuq
llvm.ppc.altivec.vaddcuw
llvm.ppc.altivec.vaddecuq
llvm.ppc.altivec.vaddeuqm
llvm.ppc.altivec.vaddsbs
llvm.ppc.altivec.vaddshs
llvm.ppc.altivec.vaddsws
llvm.ppc.altivec.vaddubs
llvm.ppc.altivec.vadduhs
llvm.ppc.altivec.vadduws
llvm.ppc.altivec.vavgsb
llvm.ppc.altivec.vavgsh
llvm.ppc.altivec.vavgsw
llvm.ppc.altivec.vavgub
llvm.ppc.altivec.vavguh
llvm.ppc.altivec.vavguw
llvm.ppc.altivec.vbpermq
llvm.ppc.altivec.vcfsx
llvm.ppc.altivec.vcfuged
llvm.ppc.altivec.vcfux
llvm.ppc.altivec.vclrlb
llvm.ppc.altivec.vclrrb
llvm.ppc.altivec.vclzdm
llvm.ppc.altivec.vclzlsbb
llvm.ppc.altivec.vcmpbfp
llvm.ppc.altivec.vcmpbfp.p
llvm.ppc.altivec.vcmpeqfp
llvm.ppc.altivec.vcmpeqfp.p
llvm.ppc.altivec.vcmpequb
llvm.ppc.altivec.vcmpequb.p
llvm.ppc.altivec.vcmpequd
llvm.ppc.altivec.vcmpequd.p
llvm.ppc.altivec.vcmpequh
llvm.ppc.altivec.vcmpequh.p
llvm.ppc.altivec.vcmpequq
llvm.ppc.altivec.vcmpequq.p
llvm.ppc.altivec.vcmpequw
llvm.ppc.altivec.vcmpequw.p
llvm.ppc.altivec.vcmpgefp
llvm.ppc.altivec.vcmpgefp.p
llvm.ppc.altivec.vcmpgtfp
llvm.ppc.altivec.vcmpgtfp.p
llvm.ppc.altivec.vcmpgtsb
llvm.ppc.altivec.vcmpgtsb.p
llvm.ppc.altivec.vcmpgtsd
llvm.ppc.altivec.vcmpgtsd.p
llvm.ppc.altivec.vcmpgtsh
llvm.ppc.altivec.vcmpgtsh.p
llvm.ppc.altivec.vcmpgtsq
llvm.ppc.altivec.vcmpgtsq.p
llvm.ppc.altivec.vcmpgtsw
llvm.ppc.altivec.vcmpgtsw.p
llvm.ppc.altivec.vcmpgtub
llvm.ppc.altivec.vcmpgtub.p
llvm.ppc.altivec.vcmpgtud
llvm.ppc.altivec.vcmpgtud.p
llvm.ppc.altivec.vcmpgtuh
llvm.ppc.altivec.vcmpgtuh.p
llvm.ppc.altivec.vcmpgtuq
llvm.ppc.altivec.vcmpgtuq.p
llvm.ppc.altivec.vcmpgtuw
llvm.ppc.altivec.vcmpgtuw.p
llvm.ppc.altivec.vcmpneb
llvm.ppc.altivec.vcmpneb.p
llvm.ppc.altivec.vcmpneh
llvm.ppc.altivec.vcmpneh.p
llvm.ppc.altivec.vcmpnew
llvm.ppc.altivec.vcmpnew.p
llvm.ppc.altivec.vcmpnezb
llvm.ppc.altivec.vcmpnezb.p
llvm.ppc.altivec.vcmpnezh
llvm.ppc.altivec.vcmpnezh.p
llvm.ppc.altivec.vcmpnezw
llvm.ppc.altivec.vcmpnezw.p
llvm.ppc.altivec.vcntmbb
llvm.ppc.altivec.vcntmbd
llvm.ppc.altivec.vcntmbh
llvm.ppc.altivec.vcntmbw
llvm.ppc.altivec.vctsxs
llvm.ppc.altivec.vctuxs
llvm.ppc.altivec.vctzdm
llvm.ppc.altivec.vctzlsbb
llvm.ppc.altivec.vdivesd
llvm.ppc.altivec.vdivesq
llvm.ppc.altivec.vdivesw
llvm.ppc.altivec.vdiveud
llvm.ppc.altivec.vdiveuq
llvm.ppc.altivec.vdiveuw
llvm.ppc.altivec.vexpandbm
llvm.ppc.altivec.vexpanddm
llvm.ppc.altivec.vexpandhm
llvm.ppc.altivec.vexpandqm
llvm.ppc.altivec.vexpandwm
llvm.ppc.altivec.vexptefp
llvm.ppc.altivec.vextddvlx
llvm.ppc.altivec.vextddvrx
llvm.ppc.altivec.vextdubvlx
llvm.ppc.altivec.vextdubvrx
llvm.ppc.altivec.vextduhvlx
llvm.ppc.altivec.vextduhvrx
llvm.ppc.altivec.vextduwvlx
llvm.ppc.altivec.vextduwvrx
llvm.ppc.altivec.vextractbm
llvm.ppc.altivec.vextractdm
llvm.ppc.altivec.vextracthm
llvm.ppc.altivec.vextractqm
llvm.ppc.altivec.vextractwm
llvm.ppc.altivec.vextsb2d
llvm.ppc.altivec.vextsb2w
llvm.ppc.altivec.vextsd2q
llvm.ppc.altivec.vextsh2d
llvm.ppc.altivec.vextsh2w
llvm.ppc.altivec.vextsw2d
llvm.ppc.altivec.vgbbd
llvm.ppc.altivec.vgnb
llvm.ppc.altivec.vinsblx
llvm.ppc.altivec.vinsbrx
llvm.ppc.altivec.vinsbvlx
llvm.ppc.altivec.vinsbvrx
llvm.ppc.altivec.vinsd
llvm.ppc.altivec.vinsdlx
llvm.ppc.altivec.vinsdrx
llvm.ppc.altivec.vinshlx
llvm.ppc.altivec.vinshrx
llvm.ppc.altivec.vinshvlx
llvm.ppc.altivec.vinshvrx
llvm.ppc.altivec.vinsw
llvm.ppc.altivec.vinswlx
llvm.ppc.altivec.vinswrx
llvm.ppc.altivec.vinswvlx
llvm.ppc.altivec.vinswvrx
llvm.ppc.altivec.vlogefp
llvm.ppc.altivec.vmaddfp
llvm.ppc.altivec.vmaxfp
llvm.ppc.altivec.vmaxsb
llvm.ppc.altivec.vmaxsd
llvm.ppc.altivec.vmaxsh
llvm.ppc.altivec.vmaxsw
llvm.ppc.altivec.vmaxub
llvm.ppc.altivec.vmaxud
llvm.ppc.altivec.vmaxuh
llvm.ppc.altivec.vmaxuw
llvm.ppc.altivec.vmhaddshs
llvm.ppc.altivec.vmhraddshs
llvm.ppc.altivec.vminfp
llvm.ppc.altivec.vminsb
llvm.ppc.altivec.vminsd
llvm.ppc.altivec.vminsh
llvm.ppc.altivec.vminsw
llvm.ppc.altivec.vminub
llvm.ppc.altivec.vminud
llvm.ppc.altivec.vminuh
llvm.ppc.altivec.vminuw
llvm.ppc.altivec.vmladduhm
llvm.ppc.altivec.vmsumcud
llvm.ppc.altivec.vmsummbm
llvm.ppc.altivec.vmsumshm
llvm.ppc.altivec.vmsumshs
llvm.ppc.altivec.vmsumubm
llvm.ppc.altivec.vmsumudm
llvm.ppc.altivec.vmsumuhm
llvm.ppc.altivec.vmsumuhs
llvm.ppc.altivec.vmulesb
llvm.ppc.altivec.vmulesd
llvm.ppc.altivec.vmulesh
llvm.ppc.altivec.vmulesw
llvm.ppc.altivec.vmuleub
llvm.ppc.altivec.vmuleud
llvm.ppc.altivec.vmuleuh
llvm.ppc.altivec.vmuleuw
llvm.ppc.altivec.vmulhsd
llvm.ppc.altivec.vmulhsw
llvm.ppc.altivec.vmulhud
llvm.ppc.altivec.vmulhuw
llvm.ppc.altivec.vmulosb
llvm.ppc.altivec.vmulosd
llvm.ppc.altivec.vmulosh
llvm.ppc.altivec.vmulosw
llvm.ppc.altivec.vmuloub
llvm.ppc.altivec.vmuloud
llvm.ppc.altivec.vmulouh
llvm.ppc.altivec.vmulouw
llvm.ppc.altivec.vnmsubfp
llvm.ppc.altivec.vpdepd
llvm.ppc.altivec.vperm
llvm.ppc.altivec.vpextd
llvm.ppc.altivec.vpkpx
llvm.ppc.altivec.vpksdss
llvm.ppc.altivec.vpksdus
llvm.ppc.altivec.vpkshss
llvm.ppc.altivec.vpkshus
llvm.ppc.altivec.vpkswss
llvm.ppc.altivec.vpkswus
llvm.ppc.altivec.vpkudus
llvm.ppc.altivec.vpkuhus
llvm.ppc.altivec.vpkuwus
llvm.ppc.altivec.vprtybd
llvm.ppc.altivec.vprtybq
llvm.ppc.altivec.vprtybw
llvm.ppc.altivec.vrefp
llvm.ppc.altivec.vrfim
llvm.ppc.altivec.vrfin
llvm.ppc.altivec.vrfip
llvm.ppc.altivec.vrfiz
llvm.ppc.altivec.vrlb
llvm.ppc.altivec.vrld
llvm.ppc.altivec.vrldmi
llvm.ppc.altivec.vrldnm
llvm.ppc.altivec.vrlh
llvm.ppc.altivec.vrlqmi
llvm.ppc.altivec.vrlqnm
llvm.ppc.altivec.vrlw
llvm.ppc.altivec.vrlwmi
llvm.ppc.altivec.vrlwnm
llvm.ppc.altivec.vrsqrtefp
llvm.ppc.altivec.vsel
llvm.ppc.altivec.vsl
llvm.ppc.altivec.vslb
llvm.ppc.altivec.vsldbi
llvm.ppc.altivec.vslh
llvm.ppc.altivec.vslo
llvm.ppc.altivec.vslv
llvm.ppc.altivec.vslw
llvm.ppc.altivec.vsr
llvm.ppc.altivec.vsrab
llvm.ppc.altivec.vsrah
llvm.ppc.altivec.vsraw
llvm.ppc.altivec.vsrb
llvm.ppc.altivec.vsrdbi
llvm.ppc.altivec.vsrh
llvm.ppc.altivec.vsro
llvm.ppc.altivec.vsrv
llvm.ppc.altivec.vsrw
llvm.ppc.altivec.vstribl
llvm.ppc.altivec.vstribl.p
llvm.ppc.altivec.vstribr
llvm.ppc.altivec.vstribr.p
llvm.ppc.altivec.vstrihl
llvm.ppc.altivec.vstrihl.p
llvm.ppc.altivec.vstrihr
llvm.ppc.altivec.vstrihr.p
llvm.ppc.altivec.vsubcuq
llvm.ppc.altivec.vsubcuw
llvm.ppc.altivec.vsubecuq
llvm.ppc.altivec.vsubeuqm
llvm.ppc.altivec.vsubsbs
llvm.ppc.altivec.vsubshs
llvm.ppc.altivec.vsubsws
llvm.ppc.altivec.vsububs
llvm.ppc.altivec.vsubuhs
llvm.ppc.altivec.vsubuws
llvm.ppc.altivec.vsum2sws
llvm.ppc.altivec.vsum4sbs
llvm.ppc.altivec.vsum4shs
llvm.ppc.altivec.vsum4ubs
llvm.ppc.altivec.vsumsws
llvm.ppc.altivec.vupkhpx
llvm.ppc.altivec.vupkhsb
llvm.ppc.altivec.vupkhsh
llvm.ppc.altivec.vupkhsw
llvm.ppc.altivec.vupklpx
llvm.ppc.altivec.vupklsb
llvm.ppc.altivec.vupklsh
llvm.ppc.altivec.vupklsw
llvm.ppc.bpermd
llvm.ppc.cfence
llvm.ppc.cfuged
llvm.ppc.cntlzdm
llvm.ppc.cnttzdm
llvm.ppc.darn
llvm.ppc.darn32
llvm.ppc.darnraw
llvm.ppc.dcba
llvm.ppc.dcbf
llvm.ppc.dcbfl
llvm.ppc.dcbflp
llvm.ppc.dcbfps
llvm.ppc.dcbi
llvm.ppc.dcbst
llvm.ppc.dcbstps
llvm.ppc.dcbt
llvm.ppc.dcbt.with.hint
llvm.ppc.dcbtst
llvm.ppc.dcbtst.with.hint
llvm.ppc.dcbz
llvm.ppc.dcbzl
llvm.ppc.divde
llvm.ppc.divdeu
llvm.ppc.divf128.round.to.odd
llvm.ppc.divwe
llvm.ppc.divweu
llvm.ppc.eieio
llvm.ppc.fmaf128.round.to.odd
llvm.ppc.get.texasr
llvm.ppc.get.texasru
llvm.ppc.get.tfhar
llvm.ppc.get.tfiar
llvm.ppc.isync
llvm.ppc.lwsync
llvm.ppc.mma.assemble.acc
llvm.ppc.mma.disassemble.acc
llvm.ppc.mma.pmxvbf16ger2
llvm.ppc.mma.pmxvbf16ger2nn
llvm.ppc.mma.pmxvbf16ger2np
llvm.ppc.mma.pmxvbf16ger2pn
llvm.ppc.mma.pmxvbf16ger2pp
llvm.ppc.mma.pmxvf16ger2
llvm.ppc.mma.pmxvf16ger2nn
llvm.ppc.mma.pmxvf16ger2np
llvm.ppc.mma.pmxvf16ger2pn
llvm.ppc.mma.pmxvf16ger2pp
llvm.ppc.mma.pmxvf32ger
llvm.ppc.mma.pmxvf32gernn
llvm.ppc.mma.pmxvf32gernp
llvm.ppc.mma.pmxvf32gerpn
llvm.ppc.mma.pmxvf32gerpp
llvm.ppc.mma.pmxvf64ger
llvm.ppc.mma.pmxvf64gernn
llvm.ppc.mma.pmxvf64gernp
llvm.ppc.mma.pmxvf64gerpn
llvm.ppc.mma.pmxvf64gerpp
llvm.ppc.mma.pmxvi16ger2
llvm.ppc.mma.pmxvi16ger2pp
llvm.ppc.mma.pmxvi16ger2s
llvm.ppc.mma.pmxvi16ger2spp
llvm.ppc.mma.pmxvi4ger8
llvm.ppc.mma.pmxvi4ger8pp
llvm.ppc.mma.pmxvi8ger4
llvm.ppc.mma.pmxvi8ger4pp
llvm.ppc.mma.pmxvi8ger4spp
llvm.ppc.mma.xvbf16ger2
llvm.ppc.mma.xvbf16ger2nn
llvm.ppc.mma.xvbf16ger2np
llvm.ppc.mma.xvbf16ger2pn
llvm.ppc.mma.xvbf16ger2pp
llvm.ppc.mma.xvf16ger2
llvm.ppc.mma.xvf16ger2nn
llvm.ppc.mma.xvf16ger2np
llvm.ppc.mma.xvf16ger2pn
llvm.ppc.mma.xvf16ger2pp
llvm.ppc.mma.xvf32ger
llvm.ppc.mma.xvf32gernn
llvm.ppc.mma.xvf32gernp
llvm.ppc.mma.xvf32gerpn
llvm.ppc.mma.xvf32gerpp
llvm.ppc.mma.xvf64ger
llvm.ppc.mma.xvf64gernn
llvm.ppc.mma.xvf64gernp
llvm.ppc.mma.xvf64gerpn
llvm.ppc.mma.xvf64gerpp
llvm.ppc.mma.xvi16ger2
llvm.ppc.mma.xvi16ger2pp
llvm.ppc.mma.xvi16ger2s
llvm.ppc.mma.xvi16ger2spp
llvm.ppc.mma.xvi4ger8
llvm.ppc.mma.xvi4ger8pp
llvm.ppc.mma.xvi8ger4
llvm.ppc.mma.xvi8ger4pp
llvm.ppc.mma.xvi8ger4spp
llvm.ppc.mma.xxmfacc
llvm.ppc.mma.xxmtacc
llvm.ppc.mma.xxsetaccz
llvm.ppc.mulf128.round.to.odd
llvm.ppc.pdepd
llvm.ppc.pextd
llvm.ppc.popcntb
llvm.ppc.readflm
llvm.ppc.scalar.extract.expq
llvm.ppc.scalar.insert.exp.qp
llvm.ppc.set.texasr
llvm.ppc.set.texasru
llvm.ppc.set.tfhar
llvm.ppc.set.tfiar
llvm.ppc.setflm
llvm.ppc.setrnd
llvm.ppc.sqrtf128.round.to.odd
llvm.ppc.subf128.round.to.odd
llvm.ppc.sync
llvm.ppc.tabort
llvm.ppc.tabortdc
llvm.ppc.tabortdci
llvm.ppc.tabortwc
llvm.ppc.tabortwci
llvm.ppc.tbegin
llvm.ppc.tcheck
llvm.ppc.tend
llvm.ppc.tendall
llvm.ppc.trechkpt
llvm.ppc.treclaim
llvm.ppc.tresume
llvm.ppc.truncf128.round.to.odd
llvm.ppc.tsr
llvm.ppc.tsuspend
llvm.ppc.ttest
llvm.ppc.vsx.assemble.pair
llvm.ppc.vsx.disassemble.pair
llvm.ppc.vsx.lxvd2x
llvm.ppc.vsx.lxvd2x.be
llvm.ppc.vsx.lxvl
llvm.ppc.vsx.lxvll
llvm.ppc.vsx.lxvp
llvm.ppc.vsx.lxvw4x
llvm.ppc.vsx.lxvw4x.be
llvm.ppc.vsx.stxvd2x
llvm.ppc.vsx.stxvd2x.be
llvm.ppc.vsx.stxvl
llvm.ppc.vsx.stxvll
llvm.ppc.vsx.stxvp
llvm.ppc.vsx.stxvw4x
llvm.ppc.vsx.stxvw4x.be
llvm.ppc.vsx.xsmaxdp
llvm.ppc.vsx.xsmindp
llvm.ppc.vsx.xvcmpeqdp
llvm.ppc.vsx.xvcmpeqdp.p
llvm.ppc.vsx.xvcmpeqsp
llvm.ppc.vsx.xvcmpeqsp.p
llvm.ppc.vsx.xvcmpgedp
llvm.ppc.vsx.xvcmpgedp.p
llvm.ppc.vsx.xvcmpgesp
llvm.ppc.vsx.xvcmpgesp.p
llvm.ppc.vsx.xvcmpgtdp
llvm.ppc.vsx.xvcmpgtdp.p
llvm.ppc.vsx.xvcmpgtsp
llvm.ppc.vsx.xvcmpgtsp.p
llvm.ppc.vsx.xvcvbf16spn
llvm.ppc.vsx.xvcvdpsp
llvm.ppc.vsx.xvcvdpsxws
llvm.ppc.vsx.xvcvdpuxws
llvm.ppc.vsx.xvcvhpsp
llvm.ppc.vsx.xvcvspbf16
llvm.ppc.vsx.xvcvspdp
llvm.ppc.vsx.xvcvsphp
llvm.ppc.vsx.xvcvsxdsp
llvm.ppc.vsx.xvcvsxwdp
llvm.ppc.vsx.xvcvuxdsp
llvm.ppc.vsx.xvcvuxwdp
llvm.ppc.vsx.xvdivdp
llvm.ppc.vsx.xvdivsp
llvm.ppc.vsx.xviexpdp
llvm.ppc.vsx.xviexpsp
llvm.ppc.vsx.xvmaxdp
llvm.ppc.vsx.xvmaxsp
llvm.ppc.vsx.xvmindp
llvm.ppc.vsx.xvminsp
llvm.ppc.vsx.xvrdpip
llvm.ppc.vsx.xvredp
llvm.ppc.vsx.xvresp
llvm.ppc.vsx.xvrspip
llvm.ppc.vsx.xvrsqrtedp
llvm.ppc.vsx.xvrsqrtesp
llvm.ppc.vsx.xvtdivdp
llvm.ppc.vsx.xvtdivsp
llvm.ppc.vsx.xvtlsbb
llvm.ppc.vsx.xvtsqrtdp
llvm.ppc.vsx.xvtsqrtsp
llvm.ppc.vsx.xvtstdcdp
llvm.ppc.vsx.xvtstdcsp
llvm.ppc.vsx.xvxexpdp
llvm.ppc.vsx.xvxexpsp
llvm.ppc.vsx.xvxsigdp
llvm.ppc.vsx.xvxsigsp
llvm.ppc.vsx.xxblendvb
llvm.ppc.vsx.xxblendvd
llvm.ppc.vsx.xxblendvh
llvm.ppc.vsx.xxblendvw
llvm.ppc.vsx.xxeval
llvm.ppc.vsx.xxextractuw
llvm.ppc.vsx.xxgenpcvbm
llvm.ppc.vsx.xxgenpcvdm
llvm.ppc.vsx.xxgenpcvhm
llvm.ppc.vsx.xxgenpcvwm
llvm.ppc.vsx.xxinsertw
llvm.ppc.vsx.xxleqv
llvm.ppc.vsx.xxpermx
llvm.r600.cube
llvm.r600.ddx
llvm.r600.ddy
llvm.r600.dot4
llvm.r600.group.barrier
llvm.r600.implicitarg.ptr
llvm.r600.kill
llvm.r600.rat.store.typed
llvm.r600.read.global.size.x
llvm.r600.read.global.size.y
llvm.r600.read.global.size.z
llvm.r600.read.local.size.x
llvm.r600.read.local.size.y
llvm.r600.read.local.size.z
llvm.r600.read.ngroups.x
llvm.r600.read.ngroups.y
llvm.r600.read.ngroups.z
llvm.r600.read.tgid.x
llvm.r600.read.tgid.y
llvm.r600.read.tgid.z
llvm.r600.read.tidig.x
llvm.r600.read.tidig.y
llvm.r600.read.tidig.z
llvm.r600.recipsqrt.clamped
llvm.r600.recipsqrt.ieee
llvm.r600.store.stream.output
llvm.r600.store.swizzle
llvm.r600.tex
llvm.r600.texc
llvm.r600.txb
llvm.r600.txbc
llvm.r600.txf
llvm.r600.txl
llvm.r600.txlc
llvm.r600.txq
llvm.riscv.masked.atomicrmw.add.i32
llvm.riscv.masked.atomicrmw.add.i64
llvm.riscv.masked.atomicrmw.max.i32
llvm.riscv.masked.atomicrmw.max.i64
llvm.riscv.masked.atomicrmw.min.i32
llvm.riscv.masked.atomicrmw.min.i64
llvm.riscv.masked.atomicrmw.nand.i32
llvm.riscv.masked.atomicrmw.nand.i64
llvm.riscv.masked.atomicrmw.sub.i32
llvm.riscv.masked.atomicrmw.sub.i64
llvm.riscv.masked.atomicrmw.umax.i32
llvm.riscv.masked.atomicrmw.umax.i64
llvm.riscv.masked.atomicrmw.umin.i32
llvm.riscv.masked.atomicrmw.umin.i64
llvm.riscv.masked.atomicrmw.xchg.i32
llvm.riscv.masked.atomicrmw.xchg.i64
llvm.riscv.masked.cmpxchg.i32
llvm.riscv.masked.cmpxchg.i64
llvm.riscv.vaadd
llvm.riscv.vaadd.mask
llvm.riscv.vaaddu
llvm.riscv.vaaddu.mask
llvm.riscv.vadc
llvm.riscv.vadd
llvm.riscv.vadd.mask
llvm.riscv.vand
llvm.riscv.vand.mask
llvm.riscv.vasub
llvm.riscv.vasub.mask
llvm.riscv.vasubu
llvm.riscv.vasubu.mask
llvm.riscv.vcompress.mask
llvm.riscv.vdiv
llvm.riscv.vdiv.mask
llvm.riscv.vdivu
llvm.riscv.vdivu.mask
llvm.riscv.vfadd
llvm.riscv.vfadd.mask
llvm.riscv.vfcvt.f.x.v
llvm.riscv.vfcvt.f.x.v.mask
llvm.riscv.vfcvt.f.xu.v
llvm.riscv.vfcvt.f.xu.v.mask
llvm.riscv.vfcvt.rtz.x.f.v
llvm.riscv.vfcvt.rtz.x.f.v.mask
llvm.riscv.vfcvt.rtz.xu.f.v
llvm.riscv.vfcvt.rtz.xu.f.v.mask
llvm.riscv.vfcvt.x.f.v
llvm.riscv.vfcvt.x.f.v.mask
llvm.riscv.vfcvt.xu.f.v
llvm.riscv.vfcvt.xu.f.v.mask
llvm.riscv.vfdiv
llvm.riscv.vfdiv.mask
llvm.riscv.vfirst
llvm.riscv.vfirst.mask
llvm.riscv.vfmacc
llvm.riscv.vfmacc.mask
llvm.riscv.vfmadd
llvm.riscv.vfmadd.mask
llvm.riscv.vfmax
llvm.riscv.vfmax.mask
llvm.riscv.vfmerge
llvm.riscv.vfmin
llvm.riscv.vfmin.mask
llvm.riscv.vfmsac
llvm.riscv.vfmsac.mask
llvm.riscv.vfmsub
llvm.riscv.vfmsub.mask
llvm.riscv.vfmul
llvm.riscv.vfmul.mask
llvm.riscv.vfmv.f.s
llvm.riscv.vfmv.s.f
llvm.riscv.vfmv.v.f
llvm.riscv.vfncvt.f.f.w
llvm.riscv.vfncvt.f.f.w.mask
llvm.riscv.vfncvt.f.x.w
llvm.riscv.vfncvt.f.x.w.mask
llvm.riscv.vfncvt.f.xu.w
llvm.riscv.vfncvt.f.xu.w.mask
llvm.riscv.vfncvt.rod.f.f.w
llvm.riscv.vfncvt.rod.f.f.w.mask
llvm.riscv.vfncvt.rtz.x.f.w
llvm.riscv.vfncvt.rtz.x.f.w.mask
llvm.riscv.vfncvt.rtz.xu.f.w
llvm.riscv.vfncvt.rtz.xu.f.w.mask
llvm.riscv.vfncvt.x.f.w
llvm.riscv.vfncvt.x.f.w.mask
llvm.riscv.vfncvt.xu.f.w
llvm.riscv.vfncvt.xu.f.w.mask
llvm.riscv.vfnmacc
llvm.riscv.vfnmacc.mask
llvm.riscv.vfnmadd
llvm.riscv.vfnmadd.mask
llvm.riscv.vfnmsac
llvm.riscv.vfnmsac.mask
llvm.riscv.vfnmsub
llvm.riscv.vfnmsub.mask
llvm.riscv.vfrdiv
llvm.riscv.vfrdiv.mask
llvm.riscv.vfredmax
llvm.riscv.vfredmax.mask
llvm.riscv.vfredmin
llvm.riscv.vfredmin.mask
llvm.riscv.vfredosum
llvm.riscv.vfredosum.mask
llvm.riscv.vfredsum
llvm.riscv.vfredsum.mask
llvm.riscv.vfrsub
llvm.riscv.vfrsub.mask
llvm.riscv.vfsgnj
llvm.riscv.vfsgnj.mask
llvm.riscv.vfsgnjn
llvm.riscv.vfsgnjn.mask
llvm.riscv.vfsgnjx
llvm.riscv.vfsgnjx.mask
llvm.riscv.vfslide1down
llvm.riscv.vfslide1down.mask
llvm.riscv.vfslide1up
llvm.riscv.vfslide1up.mask
llvm.riscv.vfsub
llvm.riscv.vfsub.mask
llvm.riscv.vfwadd
llvm.riscv.vfwadd.mask
llvm.riscv.vfwadd.w
llvm.riscv.vfwadd.w.mask
llvm.riscv.vfwcvt.f.f.v
llvm.riscv.vfwcvt.f.f.v.mask
llvm.riscv.vfwcvt.f.x.v
llvm.riscv.vfwcvt.f.x.v.mask
llvm.riscv.vfwcvt.f.xu.v
llvm.riscv.vfwcvt.f.xu.v.mask
llvm.riscv.vfwcvt.rtz.x.f.v
llvm.riscv.vfwcvt.rtz.x.f.v.mask
llvm.riscv.vfwcvt.rtz.xu.f.v
llvm.riscv.vfwcvt.rtz.xu.f.v.mask
llvm.riscv.vfwcvt.x.f.v
llvm.riscv.vfwcvt.x.f.v.mask
llvm.riscv.vfwcvt.xu.f.v
llvm.riscv.vfwcvt.xu.f.v.mask
llvm.riscv.vfwmacc
llvm.riscv.vfwmacc.mask
llvm.riscv.vfwmsac
llvm.riscv.vfwmsac.mask
llvm.riscv.vfwmul
llvm.riscv.vfwmul.mask
llvm.riscv.vfwnmacc
llvm.riscv.vfwnmacc.mask
llvm.riscv.vfwnmsac
llvm.riscv.vfwnmsac.mask
llvm.riscv.vfwredosum
llvm.riscv.vfwredosum.mask
llvm.riscv.vfwredsum
llvm.riscv.vfwredsum.mask
llvm.riscv.vfwsub
llvm.riscv.vfwsub.mask
llvm.riscv.vfwsub.w
llvm.riscv.vfwsub.w.mask
llvm.riscv.vid
llvm.riscv.vid.mask
llvm.riscv.viota
llvm.riscv.viota.mask
llvm.riscv.vle
llvm.riscv.vle.mask
llvm.riscv.vleff
llvm.riscv.vleff.mask
llvm.riscv.vlse
llvm.riscv.vlse.mask
llvm.riscv.vlxe
llvm.riscv.vlxe.mask
llvm.riscv.vmacc
llvm.riscv.vmacc.mask
llvm.riscv.vmadc
llvm.riscv.vmadc.carry.in
llvm.riscv.vmadd
llvm.riscv.vmadd.mask
llvm.riscv.vmand
llvm.riscv.vmandnot
llvm.riscv.vmax
llvm.riscv.vmax.mask
llvm.riscv.vmaxu
llvm.riscv.vmaxu.mask
llvm.riscv.vmclr
llvm.riscv.vmerge
llvm.riscv.vmfeq
llvm.riscv.vmfeq.mask
llvm.riscv.vmfge
llvm.riscv.vmfge.mask
llvm.riscv.vmfgt
llvm.riscv.vmfgt.mask
llvm.riscv.vmfle
llvm.riscv.vmfle.mask
llvm.riscv.vmflt
llvm.riscv.vmflt.mask
llvm.riscv.vmfne
llvm.riscv.vmfne.mask
llvm.riscv.vmin
llvm.riscv.vmin.mask
llvm.riscv.vminu
llvm.riscv.vminu.mask
llvm.riscv.vmnand
llvm.riscv.vmnor
llvm.riscv.vmor
llvm.riscv.vmornot
llvm.riscv.vmsbc
llvm.riscv.vmsbc.borrow.in
llvm.riscv.vmsbf
llvm.riscv.vmsbf.mask
llvm.riscv.vmseq
llvm.riscv.vmseq.mask
llvm.riscv.vmset
llvm.riscv.vmsgt
llvm.riscv.vmsgt.mask
llvm.riscv.vmsgtu
llvm.riscv.vmsgtu.mask
llvm.riscv.vmsif
llvm.riscv.vmsif.mask
llvm.riscv.vmsle
llvm.riscv.vmsle.mask
llvm.riscv.vmsleu
llvm.riscv.vmsleu.mask
llvm.riscv.vmslt
llvm.riscv.vmslt.mask
llvm.riscv.vmsltu
llvm.riscv.vmsltu.mask
llvm.riscv.vmsne
llvm.riscv.vmsne.mask
llvm.riscv.vmsof
llvm.riscv.vmsof.mask
llvm.riscv.vmul
llvm.riscv.vmul.mask
llvm.riscv.vmulh
llvm.riscv.vmulh.mask
llvm.riscv.vmulhsu
llvm.riscv.vmulhsu.mask
llvm.riscv.vmulhu
llvm.riscv.vmulhu.mask
llvm.riscv.vmv.s.x
llvm.riscv.vmv.v.v
llvm.riscv.vmv.v.x
llvm.riscv.vmv.x.s
llvm.riscv.vmxnor
llvm.riscv.vmxor
llvm.riscv.vnclip
llvm.riscv.vnclip.mask
llvm.riscv.vnclipu
llvm.riscv.vnclipu.mask
llvm.riscv.vnmsac
llvm.riscv.vnmsac.mask
llvm.riscv.vnmsub
llvm.riscv.vnmsub.mask
llvm.riscv.vnsra
llvm.riscv.vnsra.mask
llvm.riscv.vnsrl
llvm.riscv.vnsrl.mask
llvm.riscv.vor
llvm.riscv.vor.mask
llvm.riscv.vpopc
llvm.riscv.vpopc.mask
llvm.riscv.vredand
llvm.riscv.vredand.mask
llvm.riscv.vredmax
llvm.riscv.vredmax.mask
llvm.riscv.vredmaxu
llvm.riscv.vredmaxu.mask
llvm.riscv.vredmin
llvm.riscv.vredmin.mask
llvm.riscv.vredminu
llvm.riscv.vredminu.mask
llvm.riscv.vredor
llvm.riscv.vredor.mask
llvm.riscv.vredsum
llvm.riscv.vredsum.mask
llvm.riscv.vredxor
llvm.riscv.vredxor.mask
llvm.riscv.vrem
llvm.riscv.vrem.mask
llvm.riscv.vremu
llvm.riscv.vremu.mask
llvm.riscv.vrgather
llvm.riscv.vrgather.mask
llvm.riscv.vrsub
llvm.riscv.vrsub.mask
llvm.riscv.vsadd
llvm.riscv.vsadd.mask
llvm.riscv.vsaddu
llvm.riscv.vsaddu.mask
llvm.riscv.vsbc
llvm.riscv.vse
llvm.riscv.vse.mask
llvm.riscv.vsetvli
llvm.riscv.vsetvlimax
llvm.riscv.vsext
llvm.riscv.vsext.mask
llvm.riscv.vslide1down
llvm.riscv.vslide1down.mask
llvm.riscv.vslide1up
llvm.riscv.vslide1up.mask
llvm.riscv.vslidedown
llvm.riscv.vslidedown.mask
llvm.riscv.vslideup
llvm.riscv.vslideup.mask
llvm.riscv.vsll
llvm.riscv.vsll.mask
llvm.riscv.vsmul
llvm.riscv.vsmul.mask
llvm.riscv.vsra
llvm.riscv.vsra.mask
llvm.riscv.vsrl
llvm.riscv.vsrl.mask
llvm.riscv.vsse
llvm.riscv.vsse.mask
llvm.riscv.vssra
llvm.riscv.vssra.mask
llvm.riscv.vssrl
llvm.riscv.vssrl.mask
llvm.riscv.vssub
llvm.riscv.vssub.mask
llvm.riscv.vssubu
llvm.riscv.vssubu.mask
llvm.riscv.vsub
llvm.riscv.vsub.mask
llvm.riscv.vsuxe
llvm.riscv.vsuxe.mask
llvm.riscv.vsxe
llvm.riscv.vsxe.mask
llvm.riscv.vwadd
llvm.riscv.vwadd.mask
llvm.riscv.vwadd.w
llvm.riscv.vwadd.w.mask
llvm.riscv.vwaddu
llvm.riscv.vwaddu.mask
llvm.riscv.vwaddu.w
llvm.riscv.vwaddu.w.mask
llvm.riscv.vwmacc
llvm.riscv.vwmacc.mask
llvm.riscv.vwmaccsu
llvm.riscv.vwmaccsu.mask
llvm.riscv.vwmaccu
llvm.riscv.vwmaccu.mask
llvm.riscv.vwmaccus
llvm.riscv.vwmaccus.mask
llvm.riscv.vwmul
llvm.riscv.vwmul.mask
llvm.riscv.vwmulsu
llvm.riscv.vwmulsu.mask
llvm.riscv.vwmulu
llvm.riscv.vwmulu.mask
llvm.riscv.vwredsum
llvm.riscv.vwredsum.mask
llvm.riscv.vwredsumu
llvm.riscv.vwredsumu.mask
llvm.riscv.vwsub
llvm.riscv.vwsub.mask
llvm.riscv.vwsub.w
llvm.riscv.vwsub.w.mask
llvm.riscv.vwsubu
llvm.riscv.vwsubu.mask
llvm.riscv.vwsubu.w
llvm.riscv.vwsubu.w.mask
llvm.riscv.vxor
llvm.riscv.vxor.mask
llvm.riscv.vzext
llvm.riscv.vzext.mask
llvm.s390.efpc
llvm.s390.etnd
llvm.s390.lcbb
llvm.s390.ntstg
llvm.s390.ppa.txassist
llvm.s390.sfpc
llvm.s390.tabort
llvm.s390.tbegin
llvm.s390.tbegin.nofloat
llvm.s390.tbeginc
llvm.s390.tdc
llvm.s390.tend
llvm.s390.vaccb
llvm.s390.vacccq
llvm.s390.vaccf
llvm.s390.vaccg
llvm.s390.vacch
llvm.s390.vaccq
llvm.s390.vacq
llvm.s390.vaq
llvm.s390.vavgb
llvm.s390.vavgf
llvm.s390.vavgg
llvm.s390.vavgh
llvm.s390.vavglb
llvm.s390.vavglf
llvm.s390.vavglg
llvm.s390.vavglh
llvm.s390.vbperm
llvm.s390.vceqbs
llvm.s390.vceqfs
llvm.s390.vceqgs
llvm.s390.vceqhs
llvm.s390.vchbs
llvm.s390.vchfs
llvm.s390.vchgs
llvm.s390.vchhs
llvm.s390.vchlbs
llvm.s390.vchlfs
llvm.s390.vchlgs
llvm.s390.vchlhs
llvm.s390.vcksm
llvm.s390.verimb
llvm.s390.verimf
llvm.s390.verimg
llvm.s390.verimh
llvm.s390.verllb
llvm.s390.verllf
llvm.s390.verllg
llvm.s390.verllh
llvm.s390.verllvb
llvm.s390.verllvf
llvm.s390.verllvg
llvm.s390.verllvh
llvm.s390.vfaeb
llvm.s390.vfaebs
llvm.s390.vfaef
llvm.s390.vfaefs
llvm.s390.vfaeh
llvm.s390.vfaehs
llvm.s390.vfaezb
llvm.s390.vfaezbs
llvm.s390.vfaezf
llvm.s390.vfaezfs
llvm.s390.vfaezh
llvm.s390.vfaezhs
llvm.s390.vfcedbs
llvm.s390.vfcesbs
llvm.s390.vfchdbs
llvm.s390.vfchedbs
llvm.s390.vfchesbs
llvm.s390.vfchsbs
llvm.s390.vfeeb
llvm.s390.vfeebs
llvm.s390.vfeef
llvm.s390.vfeefs
llvm.s390.vfeeh
llvm.s390.vfeehs
llvm.s390.vfeezb
llvm.s390.vfeezbs
llvm.s390.vfeezf
llvm.s390.vfeezfs
llvm.s390.vfeezh
llvm.s390.vfeezhs
llvm.s390.vfeneb
llvm.s390.vfenebs
llvm.s390.vfenef
llvm.s390.vfenefs
llvm.s390.vfeneh
llvm.s390.vfenehs
llvm.s390.vfenezb
llvm.s390.vfenezbs
llvm.s390.vfenezf
llvm.s390.vfenezfs
llvm.s390.vfenezh
llvm.s390.vfenezhs
llvm.s390.vfidb
llvm.s390.vfisb
llvm.s390.vfmaxdb
llvm.s390.vfmaxsb
llvm.s390.vfmindb
llvm.s390.vfminsb
llvm.s390.vftcidb
llvm.s390.vftcisb
llvm.s390.vgfmab
llvm.s390.vgfmaf
llvm.s390.vgfmag
llvm.s390.vgfmah
llvm.s390.vgfmb
llvm.s390.vgfmf
llvm.s390.vgfmg
llvm.s390.vgfmh
llvm.s390.vistrb
llvm.s390.vistrbs
llvm.s390.vistrf
llvm.s390.vistrfs
llvm.s390.vistrh
llvm.s390.vistrhs
llvm.s390.vlbb
llvm.s390.vll
llvm.s390.vlrl
llvm.s390.vmaeb
llvm.s390.vmaef
llvm.s390.vmaeh
llvm.s390.vmahb
llvm.s390.vmahf
llvm.s390.vmahh
llvm.s390.vmaleb
llvm.s390.vmalef
llvm.s390.vmaleh
llvm.s390.vmalhb
llvm.s390.vmalhf
llvm.s390.vmalhh
llvm.s390.vmalob
llvm.s390.vmalof
llvm.s390.vmaloh
llvm.s390.vmaob
llvm.s390.vmaof
llvm.s390.vmaoh
llvm.s390.vmeb
llvm.s390.vmef
llvm.s390.vmeh
llvm.s390.vmhb
llvm.s390.vmhf
llvm.s390.vmhh
llvm.s390.vmleb
llvm.s390.vmlef
llvm.s390.vmleh
llvm.s390.vmlhb
llvm.s390.vmlhf
llvm.s390.vmlhh
llvm.s390.vmlob
llvm.s390.vmlof
llvm.s390.vmloh
llvm.s390.vmob
llvm.s390.vmof
llvm.s390.vmoh
llvm.s390.vmslg
llvm.s390.vpdi
llvm.s390.vperm
llvm.s390.vpklsf
llvm.s390.vpklsfs
llvm.s390.vpklsg
llvm.s390.vpklsgs
llvm.s390.vpklsh
llvm.s390.vpklshs
llvm.s390.vpksf
llvm.s390.vpksfs
llvm.s390.vpksg
llvm.s390.vpksgs
llvm.s390.vpksh
llvm.s390.vpkshs
llvm.s390.vsbcbiq
llvm.s390.vsbiq
llvm.s390.vscbib
llvm.s390.vscbif
llvm.s390.vscbig
llvm.s390.vscbih
llvm.s390.vscbiq
llvm.s390.vsl
llvm.s390.vslb
llvm.s390.vsld
llvm.s390.vsldb
llvm.s390.vsq
llvm.s390.vsra
llvm.s390.vsrab
llvm.s390.vsrd
llvm.s390.vsrl
llvm.s390.vsrlb
llvm.s390.vstl
llvm.s390.vstrcb
llvm.s390.vstrcbs
llvm.s390.vstrcf
llvm.s390.vstrcfs
llvm.s390.vstrch
llvm.s390.vstrchs
llvm.s390.vstrczb
llvm.s390.vstrczbs
llvm.s390.vstrczf
llvm.s390.vstrczfs
llvm.s390.vstrczh
llvm.s390.vstrczhs
llvm.s390.vstrl
llvm.s390.vstrsb
llvm.s390.vstrsf
llvm.s390.vstrsh
llvm.s390.vstrszb
llvm.s390.vstrszf
llvm.s390.vstrszh
llvm.s390.vsumb
llvm.s390.vsumgf
llvm.s390.vsumgh
llvm.s390.vsumh
llvm.s390.vsumqf
llvm.s390.vsumqg
llvm.s390.vtm
llvm.s390.vuphb
llvm.s390.vuphf
llvm.s390.vuphh
llvm.s390.vuplb
llvm.s390.vuplf
llvm.s390.vuplhb
llvm.s390.vuplhf
llvm.s390.vuplhh
llvm.s390.vuplhw
llvm.s390.vupllb
llvm.s390.vupllf
llvm.s390.vupllh
llvm.ve.vl.andm.MMM
llvm.ve.vl.andm.mmm
llvm.ve.vl.eqvm.MMM
llvm.ve.vl.eqvm.mmm
llvm.ve.vl.lsv.vvss
llvm.ve.vl.lvm.MMss
llvm.ve.vl.lvm.mmss
llvm.ve.vl.lvsd.svs
llvm.ve.vl.lvsl.svs
llvm.ve.vl.lvss.svs
llvm.ve.vl.lzvm.sml
llvm.ve.vl.negm.MM
llvm.ve.vl.negm.mm
llvm.ve.vl.nndm.MMM
llvm.ve.vl.nndm.mmm
llvm.ve.vl.orm.MMM
llvm.ve.vl.orm.mmm
llvm.ve.vl.pcvm.sml
llvm.ve.vl.pfchv.ssl
llvm.ve.vl.pfchvnc.ssl
llvm.ve.vl.pvadds.vsvMvl
llvm.ve.vl.pvadds.vsvl
llvm.ve.vl.pvadds.vsvvl
llvm.ve.vl.pvadds.vvvMvl
llvm.ve.vl.pvadds.vvvl
llvm.ve.vl.pvadds.vvvvl
llvm.ve.vl.pvaddu.vsvMvl
llvm.ve.vl.pvaddu.vsvl
llvm.ve.vl.pvaddu.vsvvl
llvm.ve.vl.pvaddu.vvvMvl
llvm.ve.vl.pvaddu.vvvl
llvm.ve.vl.pvaddu.vvvvl
llvm.ve.vl.pvand.vsvMvl
llvm.ve.vl.pvand.vsvl
llvm.ve.vl.pvand.vsvvl
llvm.ve.vl.pvand.vvvMvl
llvm.ve.vl.pvand.vvvl
llvm.ve.vl.pvand.vvvvl
llvm.ve.vl.pvbrd.vsMvl
llvm.ve.vl.pvbrd.vsl
llvm.ve.vl.pvbrd.vsvl
llvm.ve.vl.pvcmps.vsvMvl
llvm.ve.vl.pvcmps.vsvl
llvm.ve.vl.pvcmps.vsvvl
llvm.ve.vl.pvcmps.vvvMvl
llvm.ve.vl.pvcmps.vvvl
llvm.ve.vl.pvcmps.vvvvl
llvm.ve.vl.pvcmpu.vsvMvl
llvm.ve.vl.pvcmpu.vsvl
llvm.ve.vl.pvcmpu.vsvvl
llvm.ve.vl.pvcmpu.vvvMvl
llvm.ve.vl.pvcmpu.vvvl
llvm.ve.vl.pvcmpu.vvvvl
llvm.ve.vl.pvcvtsw.vvl
llvm.ve.vl.pvcvtsw.vvvl
llvm.ve.vl.pvcvtws.vvMvl
llvm.ve.vl.pvcvtws.vvl
llvm.ve.vl.pvcvtws.vvvl
llvm.ve.vl.pvcvtwsrz.vvMvl
llvm.ve.vl.pvcvtwsrz.vvl
llvm.ve.vl.pvcvtwsrz.vvvl
llvm.ve.vl.pveqv.vsvMvl
llvm.ve.vl.pveqv.vsvl
llvm.ve.vl.pveqv.vsvvl
llvm.ve.vl.pveqv.vvvMvl
llvm.ve.vl.pveqv.vvvl
llvm.ve.vl.pveqv.vvvvl
llvm.ve.vl.pvfadd.vsvMvl
llvm.ve.vl.pvfadd.vsvl
llvm.ve.vl.pvfadd.vsvvl
llvm.ve.vl.pvfadd.vvvMvl
llvm.ve.vl.pvfadd.vvvl
llvm.ve.vl.pvfadd.vvvvl
llvm.ve.vl.pvfcmp.vsvMvl
llvm.ve.vl.pvfcmp.vsvl
llvm.ve.vl.pvfcmp.vsvvl
llvm.ve.vl.pvfcmp.vvvMvl
llvm.ve.vl.pvfcmp.vvvl
llvm.ve.vl.pvfcmp.vvvvl
llvm.ve.vl.pvfmad.vsvvMvl
llvm.ve.vl.pvfmad.vsvvl
llvm.ve.vl.pvfmad.vsvvvl
llvm.ve.vl.pvfmad.vvsvMvl
llvm.ve.vl.pvfmad.vvsvl
llvm.ve.vl.pvfmad.vvsvvl
llvm.ve.vl.pvfmad.vvvvMvl
llvm.ve.vl.pvfmad.vvvvl
llvm.ve.vl.pvfmad.vvvvvl
llvm.ve.vl.pvfmax.vsvMvl
llvm.ve.vl.pvfmax.vsvl
llvm.ve.vl.pvfmax.vsvvl
llvm.ve.vl.pvfmax.vvvMvl
llvm.ve.vl.pvfmax.vvvl
llvm.ve.vl.pvfmax.vvvvl
llvm.ve.vl.pvfmin.vsvMvl
llvm.ve.vl.pvfmin.vsvl
llvm.ve.vl.pvfmin.vsvvl
llvm.ve.vl.pvfmin.vvvMvl
llvm.ve.vl.pvfmin.vvvl
llvm.ve.vl.pvfmin.vvvvl
llvm.ve.vl.pvfmkaf.Ml
llvm.ve.vl.pvfmkat.Ml
llvm.ve.vl.pvfmkseq.MvMl
llvm.ve.vl.pvfmkseq.Mvl
llvm.ve.vl.pvfmkseqnan.MvMl
llvm.ve.vl.pvfmkseqnan.Mvl
llvm.ve.vl.pvfmksge.MvMl
llvm.ve.vl.pvfmksge.Mvl
llvm.ve.vl.pvfmksgenan.MvMl
llvm.ve.vl.pvfmksgenan.Mvl
llvm.ve.vl.pvfmksgt.MvMl
llvm.ve.vl.pvfmksgt.Mvl
llvm.ve.vl.pvfmksgtnan.MvMl
llvm.ve.vl.pvfmksgtnan.Mvl
llvm.ve.vl.pvfmksle.MvMl
llvm.ve.vl.pvfmksle.Mvl
llvm.ve.vl.pvfmkslenan.MvMl
llvm.ve.vl.pvfmkslenan.Mvl
llvm.ve.vl.pvfmksloeq.mvl
llvm.ve.vl.pvfmksloeq.mvml
llvm.ve.vl.pvfmksloeqnan.mvl
llvm.ve.vl.pvfmksloeqnan.mvml
llvm.ve.vl.pvfmksloge.mvl
llvm.ve.vl.pvfmksloge.mvml
llvm.ve.vl.pvfmkslogenan.mvl
llvm.ve.vl.pvfmkslogenan.mvml
llvm.ve.vl.pvfmkslogt.mvl
llvm.ve.vl.pvfmkslogt.mvml
llvm.ve.vl.pvfmkslogtnan.mvl
llvm.ve.vl.pvfmkslogtnan.mvml
llvm.ve.vl.pvfmkslole.mvl
llvm.ve.vl.pvfmkslole.mvml
llvm.ve.vl.pvfmkslolenan.mvl
llvm.ve.vl.pvfmkslolenan.mvml
llvm.ve.vl.pvfmkslolt.mvl
llvm.ve.vl.pvfmkslolt.mvml
llvm.ve.vl.pvfmksloltnan.mvl
llvm.ve.vl.pvfmksloltnan.mvml
llvm.ve.vl.pvfmkslonan.mvl
llvm.ve.vl.pvfmkslonan.mvml
llvm.ve.vl.pvfmkslone.mvl
llvm.ve.vl.pvfmkslone.mvml
llvm.ve.vl.pvfmkslonenan.mvl
llvm.ve.vl.pvfmkslonenan.mvml
llvm.ve.vl.pvfmkslonum.mvl
llvm.ve.vl.pvfmkslonum.mvml
llvm.ve.vl.pvfmkslt.MvMl
llvm.ve.vl.pvfmkslt.Mvl
llvm.ve.vl.pvfmksltnan.MvMl
llvm.ve.vl.pvfmksltnan.Mvl
llvm.ve.vl.pvfmksnan.MvMl
llvm.ve.vl.pvfmksnan.Mvl
llvm.ve.vl.pvfmksne.MvMl
llvm.ve.vl.pvfmksne.Mvl
llvm.ve.vl.pvfmksnenan.MvMl
llvm.ve.vl.pvfmksnenan.Mvl
llvm.ve.vl.pvfmksnum.MvMl
llvm.ve.vl.pvfmksnum.Mvl
llvm.ve.vl.pvfmksupeq.mvl
llvm.ve.vl.pvfmksupeq.mvml
llvm.ve.vl.pvfmksupeqnan.mvl
llvm.ve.vl.pvfmksupeqnan.mvml
llvm.ve.vl.pvfmksupge.mvl
llvm.ve.vl.pvfmksupge.mvml
llvm.ve.vl.pvfmksupgenan.mvl
llvm.ve.vl.pvfmksupgenan.mvml
llvm.ve.vl.pvfmksupgt.mvl
llvm.ve.vl.pvfmksupgt.mvml
llvm.ve.vl.pvfmksupgtnan.mvl
llvm.ve.vl.pvfmksupgtnan.mvml
llvm.ve.vl.pvfmksuple.mvl
llvm.ve.vl.pvfmksuple.mvml
llvm.ve.vl.pvfmksuplenan.mvl
llvm.ve.vl.pvfmksuplenan.mvml
llvm.ve.vl.pvfmksuplt.mvl
llvm.ve.vl.pvfmksuplt.mvml
llvm.ve.vl.pvfmksupltnan.mvl
llvm.ve.vl.pvfmksupltnan.mvml
llvm.ve.vl.pvfmksupnan.mvl
llvm.ve.vl.pvfmksupnan.mvml
llvm.ve.vl.pvfmksupne.mvl
llvm.ve.vl.pvfmksupne.mvml
llvm.ve.vl.pvfmksupnenan.mvl
llvm.ve.vl.pvfmksupnenan.mvml
llvm.ve.vl.pvfmksupnum.mvl
llvm.ve.vl.pvfmksupnum.mvml
llvm.ve.vl.pvfmkweq.MvMl
llvm.ve.vl.pvfmkweq.Mvl
llvm.ve.vl.pvfmkweqnan.MvMl
llvm.ve.vl.pvfmkweqnan.Mvl
llvm.ve.vl.pvfmkwge.MvMl
llvm.ve.vl.pvfmkwge.Mvl
llvm.ve.vl.pvfmkwgenan.MvMl
llvm.ve.vl.pvfmkwgenan.Mvl
llvm.ve.vl.pvfmkwgt.MvMl
llvm.ve.vl.pvfmkwgt.Mvl
llvm.ve.vl.pvfmkwgtnan.MvMl
llvm.ve.vl.pvfmkwgtnan.Mvl
llvm.ve.vl.pvfmkwle.MvMl
llvm.ve.vl.pvfmkwle.Mvl
llvm.ve.vl.pvfmkwlenan.MvMl
llvm.ve.vl.pvfmkwlenan.Mvl
llvm.ve.vl.pvfmkwloeq.mvl
llvm.ve.vl.pvfmkwloeq.mvml
llvm.ve.vl.pvfmkwloeqnan.mvl
llvm.ve.vl.pvfmkwloeqnan.mvml
llvm.ve.vl.pvfmkwloge.mvl
llvm.ve.vl.pvfmkwloge.mvml
llvm.ve.vl.pvfmkwlogenan.mvl
llvm.ve.vl.pvfmkwlogenan.mvml
llvm.ve.vl.pvfmkwlogt.mvl
llvm.ve.vl.pvfmkwlogt.mvml
llvm.ve.vl.pvfmkwlogtnan.mvl
llvm.ve.vl.pvfmkwlogtnan.mvml
llvm.ve.vl.pvfmkwlole.mvl
llvm.ve.vl.pvfmkwlole.mvml
llvm.ve.vl.pvfmkwlolenan.mvl
llvm.ve.vl.pvfmkwlolenan.mvml
llvm.ve.vl.pvfmkwlolt.mvl
llvm.ve.vl.pvfmkwlolt.mvml
llvm.ve.vl.pvfmkwloltnan.mvl
llvm.ve.vl.pvfmkwloltnan.mvml
llvm.ve.vl.pvfmkwlonan.mvl
llvm.ve.vl.pvfmkwlonan.mvml
llvm.ve.vl.pvfmkwlone.mvl
llvm.ve.vl.pvfmkwlone.mvml
llvm.ve.vl.pvfmkwlonenan.mvl
llvm.ve.vl.pvfmkwlonenan.mvml
llvm.ve.vl.pvfmkwlonum.mvl
llvm.ve.vl.pvfmkwlonum.mvml
llvm.ve.vl.pvfmkwlt.MvMl
llvm.ve.vl.pvfmkwlt.Mvl
llvm.ve.vl.pvfmkwltnan.MvMl
llvm.ve.vl.pvfmkwltnan.Mvl
llvm.ve.vl.pvfmkwnan.MvMl
llvm.ve.vl.pvfmkwnan.Mvl
llvm.ve.vl.pvfmkwne.MvMl
llvm.ve.vl.pvfmkwne.Mvl
llvm.ve.vl.pvfmkwnenan.MvMl
llvm.ve.vl.pvfmkwnenan.Mvl
llvm.ve.vl.pvfmkwnum.MvMl
llvm.ve.vl.pvfmkwnum.Mvl
llvm.ve.vl.pvfmkwupeq.mvl
llvm.ve.vl.pvfmkwupeq.mvml
llvm.ve.vl.pvfmkwupeqnan.mvl
llvm.ve.vl.pvfmkwupeqnan.mvml
llvm.ve.vl.pvfmkwupge.mvl
llvm.ve.vl.pvfmkwupge.mvml
llvm.ve.vl.pvfmkwupgenan.mvl
llvm.ve.vl.pvfmkwupgenan.mvml
llvm.ve.vl.pvfmkwupgt.mvl
llvm.ve.vl.pvfmkwupgt.mvml
llvm.ve.vl.pvfmkwupgtnan.mvl
llvm.ve.vl.pvfmkwupgtnan.mvml
llvm.ve.vl.pvfmkwuple.mvl
llvm.ve.vl.pvfmkwuple.mvml
llvm.ve.vl.pvfmkwuplenan.mvl
llvm.ve.vl.pvfmkwuplenan.mvml
llvm.ve.vl.pvfmkwuplt.mvl
llvm.ve.vl.pvfmkwuplt.mvml
llvm.ve.vl.pvfmkwupltnan.mvl
llvm.ve.vl.pvfmkwupltnan.mvml
llvm.ve.vl.pvfmkwupnan.mvl
llvm.ve.vl.pvfmkwupnan.mvml
llvm.ve.vl.pvfmkwupne.mvl
llvm.ve.vl.pvfmkwupne.mvml
llvm.ve.vl.pvfmkwupnenan.mvl
llvm.ve.vl.pvfmkwupnenan.mvml
llvm.ve.vl.pvfmkwupnum.mvl
llvm.ve.vl.pvfmkwupnum.mvml
llvm.ve.vl.pvfmsb.vsvvMvl
llvm.ve.vl.pvfmsb.vsvvl
llvm.ve.vl.pvfmsb.vsvvvl
llvm.ve.vl.pvfmsb.vvsvMvl
llvm.ve.vl.pvfmsb.vvsvl
llvm.ve.vl.pvfmsb.vvsvvl
llvm.ve.vl.pvfmsb.vvvvMvl
llvm.ve.vl.pvfmsb.vvvvl
llvm.ve.vl.pvfmsb.vvvvvl
llvm.ve.vl.pvfmul.vsvMvl
llvm.ve.vl.pvfmul.vsvl
llvm.ve.vl.pvfmul.vsvvl
llvm.ve.vl.pvfmul.vvvMvl
llvm.ve.vl.pvfmul.vvvl
llvm.ve.vl.pvfmul.vvvvl
llvm.ve.vl.pvfnmad.vsvvMvl
llvm.ve.vl.pvfnmad.vsvvl
llvm.ve.vl.pvfnmad.vsvvvl
llvm.ve.vl.pvfnmad.vvsvMvl
llvm.ve.vl.pvfnmad.vvsvl
llvm.ve.vl.pvfnmad.vvsvvl
llvm.ve.vl.pvfnmad.vvvvMvl
llvm.ve.vl.pvfnmad.vvvvl
llvm.ve.vl.pvfnmad.vvvvvl
llvm.ve.vl.pvfnmsb.vsvvMvl
llvm.ve.vl.pvfnmsb.vsvvl
llvm.ve.vl.pvfnmsb.vsvvvl
llvm.ve.vl.pvfnmsb.vvsvMvl
llvm.ve.vl.pvfnmsb.vvsvl
llvm.ve.vl.pvfnmsb.vvsvvl
llvm.ve.vl.pvfnmsb.vvvvMvl
llvm.ve.vl.pvfnmsb.vvvvl
llvm.ve.vl.pvfnmsb.vvvvvl
llvm.ve.vl.pvfsub.vsvMvl
llvm.ve.vl.pvfsub.vsvl
llvm.ve.vl.pvfsub.vsvvl
llvm.ve.vl.pvfsub.vvvMvl
llvm.ve.vl.pvfsub.vvvl
llvm.ve.vl.pvfsub.vvvvl
llvm.ve.vl.pvmaxs.vsvMvl
llvm.ve.vl.pvmaxs.vsvl
llvm.ve.vl.pvmaxs.vsvvl
llvm.ve.vl.pvmaxs.vvvMvl
llvm.ve.vl.pvmaxs.vvvl
llvm.ve.vl.pvmaxs.vvvvl
llvm.ve.vl.pvmins.vsvMvl
llvm.ve.vl.pvmins.vsvl
llvm.ve.vl.pvmins.vsvvl
llvm.ve.vl.pvmins.vvvMvl
llvm.ve.vl.pvmins.vvvl
llvm.ve.vl.pvmins.vvvvl
llvm.ve.vl.pvor.vsvMvl
llvm.ve.vl.pvor.vsvl
llvm.ve.vl.pvor.vsvvl
llvm.ve.vl.pvor.vvvMvl
llvm.ve.vl.pvor.vvvl
llvm.ve.vl.pvor.vvvvl
llvm.ve.vl.pvrcp.vvl
llvm.ve.vl.pvrcp.vvvl
llvm.ve.vl.pvrsqrt.vvl
llvm.ve.vl.pvrsqrt.vvvl
llvm.ve.vl.pvrsqrtnex.vvl
llvm.ve.vl.pvrsqrtnex.vvvl
llvm.ve.vl.pvseq.vl
llvm.ve.vl.pvseq.vvl
llvm.ve.vl.pvseqlo.vl
llvm.ve.vl.pvseqlo.vvl
llvm.ve.vl.pvsequp.vl
llvm.ve.vl.pvsequp.vvl
llvm.ve.vl.pvsla.vvsMvl
llvm.ve.vl.pvsla.vvsl
llvm.ve.vl.pvsla.vvsvl
llvm.ve.vl.pvsla.vvvMvl
llvm.ve.vl.pvsla.vvvl
llvm.ve.vl.pvsla.vvvvl
llvm.ve.vl.pvsll.vvsMvl
llvm.ve.vl.pvsll.vvsl
llvm.ve.vl.pvsll.vvsvl
llvm.ve.vl.pvsll.vvvMvl
llvm.ve.vl.pvsll.vvvl
llvm.ve.vl.pvsll.vvvvl
llvm.ve.vl.pvsra.vvsMvl
llvm.ve.vl.pvsra.vvsl
llvm.ve.vl.pvsra.vvsvl
llvm.ve.vl.pvsra.vvvMvl
llvm.ve.vl.pvsra.vvvl
llvm.ve.vl.pvsra.vvvvl
llvm.ve.vl.pvsrl.vvsMvl
llvm.ve.vl.pvsrl.vvsl
llvm.ve.vl.pvsrl.vvsvl
llvm.ve.vl.pvsrl.vvvMvl
llvm.ve.vl.pvsrl.vvvl
llvm.ve.vl.pvsrl.vvvvl
llvm.ve.vl.pvsubs.vsvMvl
llvm.ve.vl.pvsubs.vsvl
llvm.ve.vl.pvsubs.vsvvl
llvm.ve.vl.pvsubs.vvvMvl
llvm.ve.vl.pvsubs.vvvl
llvm.ve.vl.pvsubs.vvvvl
llvm.ve.vl.pvsubu.vsvMvl
llvm.ve.vl.pvsubu.vsvl
llvm.ve.vl.pvsubu.vsvvl
llvm.ve.vl.pvsubu.vvvMvl
llvm.ve.vl.pvsubu.vvvl
llvm.ve.vl.pvsubu.vvvvl
llvm.ve.vl.pvxor.vsvMvl
llvm.ve.vl.pvxor.vsvl
llvm.ve.vl.pvxor.vsvvl
llvm.ve.vl.pvxor.vvvMvl
llvm.ve.vl.pvxor.vvvl
llvm.ve.vl.pvxor.vvvvl
llvm.ve.vl.svm.sMs
llvm.ve.vl.svm.sms
llvm.ve.vl.tovm.sml
llvm.ve.vl.vaddsl.vsvl
llvm.ve.vl.vaddsl.vsvmvl
llvm.ve.vl.vaddsl.vsvvl
llvm.ve.vl.vaddsl.vvvl
llvm.ve.vl.vaddsl.vvvmvl
llvm.ve.vl.vaddsl.vvvvl
llvm.ve.vl.vaddswsx.vsvl
llvm.ve.vl.vaddswsx.vsvmvl
llvm.ve.vl.vaddswsx.vsvvl
llvm.ve.vl.vaddswsx.vvvl
llvm.ve.vl.vaddswsx.vvvmvl
llvm.ve.vl.vaddswsx.vvvvl
llvm.ve.vl.vaddswzx.vsvl
llvm.ve.vl.vaddswzx.vsvmvl
llvm.ve.vl.vaddswzx.vsvvl
llvm.ve.vl.vaddswzx.vvvl
llvm.ve.vl.vaddswzx.vvvmvl
llvm.ve.vl.vaddswzx.vvvvl
llvm.ve.vl.vaddul.vsvl
llvm.ve.vl.vaddul.vsvmvl
llvm.ve.vl.vaddul.vsvvl
llvm.ve.vl.vaddul.vvvl
llvm.ve.vl.vaddul.vvvmvl
llvm.ve.vl.vaddul.vvvvl
llvm.ve.vl.vadduw.vsvl
llvm.ve.vl.vadduw.vsvmvl
llvm.ve.vl.vadduw.vsvvl
llvm.ve.vl.vadduw.vvvl
llvm.ve.vl.vadduw.vvvmvl
llvm.ve.vl.vadduw.vvvvl
llvm.ve.vl.vand.vsvl
llvm.ve.vl.vand.vsvmvl
llvm.ve.vl.vand.vsvvl
llvm.ve.vl.vand.vvvl
llvm.ve.vl.vand.vvvmvl
llvm.ve.vl.vand.vvvvl
llvm.ve.vl.vbrdd.vsl
llvm.ve.vl.vbrdd.vsmvl
llvm.ve.vl.vbrdd.vsvl
llvm.ve.vl.vbrdl.vsl
llvm.ve.vl.vbrdl.vsmvl
llvm.ve.vl.vbrdl.vsvl
llvm.ve.vl.vbrds.vsl
llvm.ve.vl.vbrds.vsmvl
llvm.ve.vl.vbrds.vsvl
llvm.ve.vl.vbrdw.vsl
llvm.ve.vl.vbrdw.vsmvl
llvm.ve.vl.vbrdw.vsvl
llvm.ve.vl.vcmpsl.vsvl
llvm.ve.vl.vcmpsl.vsvmvl
llvm.ve.vl.vcmpsl.vsvvl
llvm.ve.vl.vcmpsl.vvvl
llvm.ve.vl.vcmpsl.vvvmvl
llvm.ve.vl.vcmpsl.vvvvl
llvm.ve.vl.vcmpswsx.vsvl
llvm.ve.vl.vcmpswsx.vsvmvl
llvm.ve.vl.vcmpswsx.vsvvl
llvm.ve.vl.vcmpswsx.vvvl
llvm.ve.vl.vcmpswsx.vvvmvl
llvm.ve.vl.vcmpswsx.vvvvl
llvm.ve.vl.vcmpswzx.vsvl
llvm.ve.vl.vcmpswzx.vsvmvl
llvm.ve.vl.vcmpswzx.vsvvl
llvm.ve.vl.vcmpswzx.vvvl
llvm.ve.vl.vcmpswzx.vvvmvl
llvm.ve.vl.vcmpswzx.vvvvl
llvm.ve.vl.vcmpul.vsvl
llvm.ve.vl.vcmpul.vsvmvl
llvm.ve.vl.vcmpul.vsvvl
llvm.ve.vl.vcmpul.vvvl
llvm.ve.vl.vcmpul.vvvmvl
llvm.ve.vl.vcmpul.vvvvl
llvm.ve.vl.vcmpuw.vsvl
llvm.ve.vl.vcmpuw.vsvmvl
llvm.ve.vl.vcmpuw.vsvvl
llvm.ve.vl.vcmpuw.vvvl
llvm.ve.vl.vcmpuw.vvvmvl
llvm.ve.vl.vcmpuw.vvvvl
llvm.ve.vl.vcp.vvmvl
llvm.ve.vl.vcvtdl.vvl
llvm.ve.vl.vcvtdl.vvvl
llvm.ve.vl.vcvtds.vvl
llvm.ve.vl.vcvtds.vvvl
llvm.ve.vl.vcvtdw.vvl
llvm.ve.vl.vcvtdw.vvvl
llvm.ve.vl.vcvtld.vvl
llvm.ve.vl.vcvtld.vvmvl
llvm.ve.vl.vcvtld.vvvl
llvm.ve.vl.vcvtldrz.vvl
llvm.ve.vl.vcvtldrz.vvmvl
llvm.ve.vl.vcvtldrz.vvvl
llvm.ve.vl.vcvtsd.vvl
llvm.ve.vl.vcvtsd.vvvl
llvm.ve.vl.vcvtsw.vvl
llvm.ve.vl.vcvtsw.vvvl
llvm.ve.vl.vcvtwdsx.vvl
llvm.ve.vl.vcvtwdsx.vvmvl
llvm.ve.vl.vcvtwdsx.vvvl
llvm.ve.vl.vcvtwdsxrz.vvl
llvm.ve.vl.vcvtwdsxrz.vvmvl
llvm.ve.vl.vcvtwdsxrz.vvvl
llvm.ve.vl.vcvtwdzx.vvl
llvm.ve.vl.vcvtwdzx.vvmvl
llvm.ve.vl.vcvtwdzx.vvvl
llvm.ve.vl.vcvtwdzxrz.vvl
llvm.ve.vl.vcvtwdzxrz.vvmvl
llvm.ve.vl.vcvtwdzxrz.vvvl
llvm.ve.vl.vcvtwssx.vvl
llvm.ve.vl.vcvtwssx.vvmvl
llvm.ve.vl.vcvtwssx.vvvl
llvm.ve.vl.vcvtwssxrz.vvl
llvm.ve.vl.vcvtwssxrz.vvmvl
llvm.ve.vl.vcvtwssxrz.vvvl
llvm.ve.vl.vcvtwszx.vvl
llvm.ve.vl.vcvtwszx.vvmvl
llvm.ve.vl.vcvtwszx.vvvl
llvm.ve.vl.vcvtwszxrz.vvl
llvm.ve.vl.vcvtwszxrz.vvmvl
llvm.ve.vl.vcvtwszxrz.vvvl
llvm.ve.vl.vdivsl.vsvl
llvm.ve.vl.vdivsl.vsvmvl
llvm.ve.vl.vdivsl.vsvvl
llvm.ve.vl.vdivsl.vvsl
llvm.ve.vl.vdivsl.vvsmvl
llvm.ve.vl.vdivsl.vvsvl
llvm.ve.vl.vdivsl.vvvl
llvm.ve.vl.vdivsl.vvvmvl
llvm.ve.vl.vdivsl.vvvvl
llvm.ve.vl.vdivswsx.vsvl
llvm.ve.vl.vdivswsx.vsvmvl
llvm.ve.vl.vdivswsx.vsvvl
llvm.ve.vl.vdivswsx.vvsl
llvm.ve.vl.vdivswsx.vvsmvl
llvm.ve.vl.vdivswsx.vvsvl
llvm.ve.vl.vdivswsx.vvvl
llvm.ve.vl.vdivswsx.vvvmvl
llvm.ve.vl.vdivswsx.vvvvl
llvm.ve.vl.vdivswzx.vsvl
llvm.ve.vl.vdivswzx.vsvmvl
llvm.ve.vl.vdivswzx.vsvvl
llvm.ve.vl.vdivswzx.vvsl
llvm.ve.vl.vdivswzx.vvsmvl
llvm.ve.vl.vdivswzx.vvsvl
llvm.ve.vl.vdivswzx.vvvl
llvm.ve.vl.vdivswzx.vvvmvl
llvm.ve.vl.vdivswzx.vvvvl
llvm.ve.vl.vdivul.vsvl
llvm.ve.vl.vdivul.vsvmvl
llvm.ve.vl.vdivul.vsvvl
llvm.ve.vl.vdivul.vvsl
llvm.ve.vl.vdivul.vvsmvl
llvm.ve.vl.vdivul.vvsvl
llvm.ve.vl.vdivul.vvvl
llvm.ve.vl.vdivul.vvvmvl
llvm.ve.vl.vdivul.vvvvl
llvm.ve.vl.vdivuw.vsvl
llvm.ve.vl.vdivuw.vsvmvl
llvm.ve.vl.vdivuw.vsvvl
llvm.ve.vl.vdivuw.vvsl
llvm.ve.vl.vdivuw.vvsmvl
llvm.ve.vl.vdivuw.vvsvl
llvm.ve.vl.vdivuw.vvvl
llvm.ve.vl.vdivuw.vvvmvl
llvm.ve.vl.vdivuw.vvvvl
llvm.ve.vl.veqv.vsvl
llvm.ve.vl.veqv.vsvmvl
llvm.ve.vl.veqv.vsvvl
llvm.ve.vl.veqv.vvvl
llvm.ve.vl.veqv.vvvmvl
llvm.ve.vl.veqv.vvvvl
llvm.ve.vl.vex.vvmvl
llvm.ve.vl.vfaddd.vsvl
llvm.ve.vl.vfaddd.vsvmvl
llvm.ve.vl.vfaddd.vsvvl
llvm.ve.vl.vfaddd.vvvl
llvm.ve.vl.vfaddd.vvvmvl
llvm.ve.vl.vfaddd.vvvvl
llvm.ve.vl.vfadds.vsvl
llvm.ve.vl.vfadds.vsvmvl
llvm.ve.vl.vfadds.vsvvl
llvm.ve.vl.vfadds.vvvl
llvm.ve.vl.vfadds.vvvmvl
llvm.ve.vl.vfadds.vvvvl
llvm.ve.vl.vfcmpd.vsvl
llvm.ve.vl.vfcmpd.vsvmvl
llvm.ve.vl.vfcmpd.vsvvl
llvm.ve.vl.vfcmpd.vvvl
llvm.ve.vl.vfcmpd.vvvmvl
llvm.ve.vl.vfcmpd.vvvvl
llvm.ve.vl.vfcmps.vsvl
llvm.ve.vl.vfcmps.vsvmvl
llvm.ve.vl.vfcmps.vsvvl
llvm.ve.vl.vfcmps.vvvl
llvm.ve.vl.vfcmps.vvvmvl
llvm.ve.vl.vfcmps.vvvvl
llvm.ve.vl.vfdivd.vsvl
llvm.ve.vl.vfdivd.vsvmvl
llvm.ve.vl.vfdivd.vsvvl
llvm.ve.vl.vfdivd.vvvl
llvm.ve.vl.vfdivd.vvvmvl
llvm.ve.vl.vfdivd.vvvvl
llvm.ve.vl.vfdivs.vsvl
llvm.ve.vl.vfdivs.vsvmvl
llvm.ve.vl.vfdivs.vsvvl
llvm.ve.vl.vfdivs.vvvl
llvm.ve.vl.vfdivs.vvvmvl
llvm.ve.vl.vfdivs.vvvvl
llvm.ve.vl.vfmadd.vsvvl
llvm.ve.vl.vfmadd.vsvvmvl
llvm.ve.vl.vfmadd.vsvvvl
llvm.ve.vl.vfmadd.vvsvl
llvm.ve.vl.vfmadd.vvsvmvl
llvm.ve.vl.vfmadd.vvsvvl
llvm.ve.vl.vfmadd.vvvvl
llvm.ve.vl.vfmadd.vvvvmvl
llvm.ve.vl.vfmadd.vvvvvl
llvm.ve.vl.vfmads.vsvvl
llvm.ve.vl.vfmads.vsvvmvl
llvm.ve.vl.vfmads.vsvvvl
llvm.ve.vl.vfmads.vvsvl
llvm.ve.vl.vfmads.vvsvmvl
llvm.ve.vl.vfmads.vvsvvl
llvm.ve.vl.vfmads.vvvvl
llvm.ve.vl.vfmads.vvvvmvl
llvm.ve.vl.vfmads.vvvvvl
llvm.ve.vl.vfmaxd.vsvl
llvm.ve.vl.vfmaxd.vsvmvl
llvm.ve.vl.vfmaxd.vsvvl
llvm.ve.vl.vfmaxd.vvvl
llvm.ve.vl.vfmaxd.vvvmvl
llvm.ve.vl.vfmaxd.vvvvl
llvm.ve.vl.vfmaxs.vsvl
llvm.ve.vl.vfmaxs.vsvmvl
llvm.ve.vl.vfmaxs.vsvvl
llvm.ve.vl.vfmaxs.vvvl
llvm.ve.vl.vfmaxs.vvvmvl
llvm.ve.vl.vfmaxs.vvvvl
llvm.ve.vl.vfmind.vsvl
llvm.ve.vl.vfmind.vsvmvl
llvm.ve.vl.vfmind.vsvvl
llvm.ve.vl.vfmind.vvvl
llvm.ve.vl.vfmind.vvvmvl
llvm.ve.vl.vfmind.vvvvl
llvm.ve.vl.vfmins.vsvl
llvm.ve.vl.vfmins.vsvmvl
llvm.ve.vl.vfmins.vsvvl
llvm.ve.vl.vfmins.vvvl
llvm.ve.vl.vfmins.vvvmvl
llvm.ve.vl.vfmins.vvvvl
llvm.ve.vl.vfmkdeq.mvl
llvm.ve.vl.vfmkdeq.mvml
llvm.ve.vl.vfmkdeqnan.mvl
llvm.ve.vl.vfmkdeqnan.mvml
llvm.ve.vl.vfmkdge.mvl
llvm.ve.vl.vfmkdge.mvml
llvm.ve.vl.vfmkdgenan.mvl
llvm.ve.vl.vfmkdgenan.mvml
llvm.ve.vl.vfmkdgt.mvl
llvm.ve.vl.vfmkdgt.mvml
llvm.ve.vl.vfmkdgtnan.mvl
llvm.ve.vl.vfmkdgtnan.mvml
llvm.ve.vl.vfmkdle.mvl
llvm.ve.vl.vfmkdle.mvml
llvm.ve.vl.vfmkdlenan.mvl
llvm.ve.vl.vfmkdlenan.mvml
llvm.ve.vl.vfmkdlt.mvl
llvm.ve.vl.vfmkdlt.mvml
llvm.ve.vl.vfmkdltnan.mvl
llvm.ve.vl.vfmkdltnan.mvml
llvm.ve.vl.vfmkdnan.mvl
llvm.ve.vl.vfmkdnan.mvml
llvm.ve.vl.vfmkdne.mvl
llvm.ve.vl.vfmkdne.mvml
llvm.ve.vl.vfmkdnenan.mvl
llvm.ve.vl.vfmkdnenan.mvml
llvm.ve.vl.vfmkdnum.mvl
llvm.ve.vl.vfmkdnum.mvml
llvm.ve.vl.vfmklaf.ml
llvm.ve.vl.vfmklat.ml
llvm.ve.vl.vfmkleq.mvl
llvm.ve.vl.vfmkleq.mvml
llvm.ve.vl.vfmkleqnan.mvl
llvm.ve.vl.vfmkleqnan.mvml
llvm.ve.vl.vfmklge.mvl
llvm.ve.vl.vfmklge.mvml
llvm.ve.vl.vfmklgenan.mvl
llvm.ve.vl.vfmklgenan.mvml
llvm.ve.vl.vfmklgt.mvl
llvm.ve.vl.vfmklgt.mvml
llvm.ve.vl.vfmklgtnan.mvl
llvm.ve.vl.vfmklgtnan.mvml
llvm.ve.vl.vfmklle.mvl
llvm.ve.vl.vfmklle.mvml
llvm.ve.vl.vfmkllenan.mvl
llvm.ve.vl.vfmkllenan.mvml
llvm.ve.vl.vfmkllt.mvl
llvm.ve.vl.vfmkllt.mvml
llvm.ve.vl.vfmklltnan.mvl
llvm.ve.vl.vfmklltnan.mvml
llvm.ve.vl.vfmklnan.mvl
llvm.ve.vl.vfmklnan.mvml
llvm.ve.vl.vfmklne.mvl
llvm.ve.vl.vfmklne.mvml
llvm.ve.vl.vfmklnenan.mvl
llvm.ve.vl.vfmklnenan.mvml
llvm.ve.vl.vfmklnum.mvl
llvm.ve.vl.vfmklnum.mvml
llvm.ve.vl.vfmkseq.mvl
llvm.ve.vl.vfmkseq.mvml
llvm.ve.vl.vfmkseqnan.mvl
llvm.ve.vl.vfmkseqnan.mvml
llvm.ve.vl.vfmksge.mvl
llvm.ve.vl.vfmksge.mvml
llvm.ve.vl.vfmksgenan.mvl
llvm.ve.vl.vfmksgenan.mvml
llvm.ve.vl.vfmksgt.mvl
llvm.ve.vl.vfmksgt.mvml
llvm.ve.vl.vfmksgtnan.mvl
llvm.ve.vl.vfmksgtnan.mvml
llvm.ve.vl.vfmksle.mvl
llvm.ve.vl.vfmksle.mvml
llvm.ve.vl.vfmkslenan.mvl
llvm.ve.vl.vfmkslenan.mvml
llvm.ve.vl.vfmkslt.mvl
llvm.ve.vl.vfmkslt.mvml
llvm.ve.vl.vfmksltnan.mvl
llvm.ve.vl.vfmksltnan.mvml
llvm.ve.vl.vfmksnan.mvl
llvm.ve.vl.vfmksnan.mvml
llvm.ve.vl.vfmksne.mvl
llvm.ve.vl.vfmksne.mvml
llvm.ve.vl.vfmksnenan.mvl
llvm.ve.vl.vfmksnenan.mvml
llvm.ve.vl.vfmksnum.mvl
llvm.ve.vl.vfmksnum.mvml
llvm.ve.vl.vfmkweq.mvl
llvm.ve.vl.vfmkweq.mvml
llvm.ve.vl.vfmkweqnan.mvl
llvm.ve.vl.vfmkweqnan.mvml
llvm.ve.vl.vfmkwge.mvl
llvm.ve.vl.vfmkwge.mvml
llvm.ve.vl.vfmkwgenan.mvl
llvm.ve.vl.vfmkwgenan.mvml
llvm.ve.vl.vfmkwgt.mvl
llvm.ve.vl.vfmkwgt.mvml
llvm.ve.vl.vfmkwgtnan.mvl
llvm.ve.vl.vfmkwgtnan.mvml
llvm.ve.vl.vfmkwle.mvl
llvm.ve.vl.vfmkwle.mvml
llvm.ve.vl.vfmkwlenan.mvl
llvm.ve.vl.vfmkwlenan.mvml
llvm.ve.vl.vfmkwlt.mvl
llvm.ve.vl.vfmkwlt.mvml
llvm.ve.vl.vfmkwltnan.mvl
llvm.ve.vl.vfmkwltnan.mvml
llvm.ve.vl.vfmkwnan.mvl
llvm.ve.vl.vfmkwnan.mvml
llvm.ve.vl.vfmkwne.mvl
llvm.ve.vl.vfmkwne.mvml
llvm.ve.vl.vfmkwnenan.mvl
llvm.ve.vl.vfmkwnenan.mvml
llvm.ve.vl.vfmkwnum.mvl
llvm.ve.vl.vfmkwnum.mvml
llvm.ve.vl.vfmsbd.vsvvl
llvm.ve.vl.vfmsbd.vsvvmvl
llvm.ve.vl.vfmsbd.vsvvvl
llvm.ve.vl.vfmsbd.vvsvl
llvm.ve.vl.vfmsbd.vvsvmvl
llvm.ve.vl.vfmsbd.vvsvvl
llvm.ve.vl.vfmsbd.vvvvl
llvm.ve.vl.vfmsbd.vvvvmvl
llvm.ve.vl.vfmsbd.vvvvvl
llvm.ve.vl.vfmsbs.vsvvl
llvm.ve.vl.vfmsbs.vsvvmvl
llvm.ve.vl.vfmsbs.vsvvvl
llvm.ve.vl.vfmsbs.vvsvl
llvm.ve.vl.vfmsbs.vvsvmvl
llvm.ve.vl.vfmsbs.vvsvvl
llvm.ve.vl.vfmsbs.vvvvl
llvm.ve.vl.vfmsbs.vvvvmvl
llvm.ve.vl.vfmsbs.vvvvvl
llvm.ve.vl.vfmuld.vsvl
llvm.ve.vl.vfmuld.vsvmvl
llvm.ve.vl.vfmuld.vsvvl
llvm.ve.vl.vfmuld.vvvl
llvm.ve.vl.vfmuld.vvvmvl
llvm.ve.vl.vfmuld.vvvvl
llvm.ve.vl.vfmuls.vsvl
llvm.ve.vl.vfmuls.vsvmvl
llvm.ve.vl.vfmuls.vsvvl
llvm.ve.vl.vfmuls.vvvl
llvm.ve.vl.vfmuls.vvvmvl
llvm.ve.vl.vfmuls.vvvvl
llvm.ve.vl.vfnmadd.vsvvl
llvm.ve.vl.vfnmadd.vsvvmvl
llvm.ve.vl.vfnmadd.vsvvvl
llvm.ve.vl.vfnmadd.vvsvl
llvm.ve.vl.vfnmadd.vvsvmvl
llvm.ve.vl.vfnmadd.vvsvvl
llvm.ve.vl.vfnmadd.vvvvl
llvm.ve.vl.vfnmadd.vvvvmvl
llvm.ve.vl.vfnmadd.vvvvvl
llvm.ve.vl.vfnmads.vsvvl
llvm.ve.vl.vfnmads.vsvvmvl
llvm.ve.vl.vfnmads.vsvvvl
llvm.ve.vl.vfnmads.vvsvl
llvm.ve.vl.vfnmads.vvsvmvl
llvm.ve.vl.vfnmads.vvsvvl
llvm.ve.vl.vfnmads.vvvvl
llvm.ve.vl.vfnmads.vvvvmvl
llvm.ve.vl.vfnmads.vvvvvl
llvm.ve.vl.vfnmsbd.vsvvl
llvm.ve.vl.vfnmsbd.vsvvmvl
llvm.ve.vl.vfnmsbd.vsvvvl
llvm.ve.vl.vfnmsbd.vvsvl
llvm.ve.vl.vfnmsbd.vvsvmvl
llvm.ve.vl.vfnmsbd.vvsvvl
llvm.ve.vl.vfnmsbd.vvvvl
llvm.ve.vl.vfnmsbd.vvvvmvl
llvm.ve.vl.vfnmsbd.vvvvvl
llvm.ve.vl.vfnmsbs.vsvvl
llvm.ve.vl.vfnmsbs.vsvvmvl
llvm.ve.vl.vfnmsbs.vsvvvl
llvm.ve.vl.vfnmsbs.vvsvl
llvm.ve.vl.vfnmsbs.vvsvmvl
llvm.ve.vl.vfnmsbs.vvsvvl
llvm.ve.vl.vfnmsbs.vvvvl
llvm.ve.vl.vfnmsbs.vvvvmvl
llvm.ve.vl.vfnmsbs.vvvvvl
llvm.ve.vl.vfrmaxdfst.vvl
llvm.ve.vl.vfrmaxdfst.vvvl
llvm.ve.vl.vfrmaxdlst.vvl
llvm.ve.vl.vfrmaxdlst.vvvl
llvm.ve.vl.vfrmaxsfst.vvl
llvm.ve.vl.vfrmaxsfst.vvvl
llvm.ve.vl.vfrmaxslst.vvl
llvm.ve.vl.vfrmaxslst.vvvl
llvm.ve.vl.vfrmindfst.vvl
llvm.ve.vl.vfrmindfst.vvvl
llvm.ve.vl.vfrmindlst.vvl
llvm.ve.vl.vfrmindlst.vvvl
llvm.ve.vl.vfrminsfst.vvl
llvm.ve.vl.vfrminsfst.vvvl
llvm.ve.vl.vfrminslst.vvl
llvm.ve.vl.vfrminslst.vvvl
llvm.ve.vl.vfsqrtd.vvl
llvm.ve.vl.vfsqrtd.vvvl
llvm.ve.vl.vfsqrts.vvl
llvm.ve.vl.vfsqrts.vvvl
llvm.ve.vl.vfsubd.vsvl
llvm.ve.vl.vfsubd.vsvmvl
llvm.ve.vl.vfsubd.vsvvl
llvm.ve.vl.vfsubd.vvvl
llvm.ve.vl.vfsubd.vvvmvl
llvm.ve.vl.vfsubd.vvvvl
llvm.ve.vl.vfsubs.vsvl
llvm.ve.vl.vfsubs.vsvmvl
llvm.ve.vl.vfsubs.vsvvl
llvm.ve.vl.vfsubs.vvvl
llvm.ve.vl.vfsubs.vvvmvl
llvm.ve.vl.vfsubs.vvvvl
llvm.ve.vl.vfsumd.vvl
llvm.ve.vl.vfsumd.vvml
llvm.ve.vl.vfsums.vvl
llvm.ve.vl.vfsums.vvml
llvm.ve.vl.vgt.vvssl
llvm.ve.vl.vgt.vvssml
llvm.ve.vl.vgt.vvssmvl
llvm.ve.vl.vgt.vvssvl
llvm.ve.vl.vgtlsx.vvssl
llvm.ve.vl.vgtlsx.vvssml
llvm.ve.vl.vgtlsx.vvssmvl
llvm.ve.vl.vgtlsx.vvssvl
llvm.ve.vl.vgtlsxnc.vvssl
llvm.ve.vl.vgtlsxnc.vvssml
llvm.ve.vl.vgtlsxnc.vvssmvl
llvm.ve.vl.vgtlsxnc.vvssvl
llvm.ve.vl.vgtlzx.vvssl
llvm.ve.vl.vgtlzx.vvssml
llvm.ve.vl.vgtlzx.vvssmvl
llvm.ve.vl.vgtlzx.vvssvl
llvm.ve.vl.vgtlzxnc.vvssl
llvm.ve.vl.vgtlzxnc.vvssml
llvm.ve.vl.vgtlzxnc.vvssmvl
llvm.ve.vl.vgtlzxnc.vvssvl
llvm.ve.vl.vgtnc.vvssl
llvm.ve.vl.vgtnc.vvssml
llvm.ve.vl.vgtnc.vvssmvl
llvm.ve.vl.vgtnc.vvssvl
llvm.ve.vl.vgtu.vvssl
llvm.ve.vl.vgtu.vvssml
llvm.ve.vl.vgtu.vvssmvl
llvm.ve.vl.vgtu.vvssvl
llvm.ve.vl.vgtunc.vvssl
llvm.ve.vl.vgtunc.vvssml
llvm.ve.vl.vgtunc.vvssmvl
llvm.ve.vl.vgtunc.vvssvl
llvm.ve.vl.vld.vssl
llvm.ve.vl.vld.vssvl
llvm.ve.vl.vld2d.vssl
llvm.ve.vl.vld2d.vssvl
llvm.ve.vl.vld2dnc.vssl
llvm.ve.vl.vld2dnc.vssvl
llvm.ve.vl.vldl2dsx.vssl
llvm.ve.vl.vldl2dsx.vssvl
llvm.ve.vl.vldl2dsxnc.vssl
llvm.ve.vl.vldl2dsxnc.vssvl
llvm.ve.vl.vldl2dzx.vssl
llvm.ve.vl.vldl2dzx.vssvl
llvm.ve.vl.vldl2dzxnc.vssl
llvm.ve.vl.vldl2dzxnc.vssvl
llvm.ve.vl.vldlsx.vssl
llvm.ve.vl.vldlsx.vssvl
llvm.ve.vl.vldlsxnc.vssl
llvm.ve.vl.vldlsxnc.vssvl
llvm.ve.vl.vldlzx.vssl
llvm.ve.vl.vldlzx.vssvl
llvm.ve.vl.vldlzxnc.vssl
llvm.ve.vl.vldlzxnc.vssvl
llvm.ve.vl.vldnc.vssl
llvm.ve.vl.vldnc.vssvl
llvm.ve.vl.vldu.vssl
llvm.ve.vl.vldu.vssvl
llvm.ve.vl.vldu2d.vssl
llvm.ve.vl.vldu2d.vssvl
llvm.ve.vl.vldu2dnc.vssl
llvm.ve.vl.vldu2dnc.vssvl
llvm.ve.vl.vldunc.vssl
llvm.ve.vl.vldunc.vssvl
llvm.ve.vl.vmaxsl.vsvl
llvm.ve.vl.vmaxsl.vsvmvl
llvm.ve.vl.vmaxsl.vsvvl
llvm.ve.vl.vmaxsl.vvvl
llvm.ve.vl.vmaxsl.vvvmvl
llvm.ve.vl.vmaxsl.vvvvl
llvm.ve.vl.vmaxswsx.vsvl
llvm.ve.vl.vmaxswsx.vsvmvl
llvm.ve.vl.vmaxswsx.vsvvl
llvm.ve.vl.vmaxswsx.vvvl
llvm.ve.vl.vmaxswsx.vvvmvl
llvm.ve.vl.vmaxswsx.vvvvl
llvm.ve.vl.vmaxswzx.vsvl
llvm.ve.vl.vmaxswzx.vsvmvl
llvm.ve.vl.vmaxswzx.vsvvl
llvm.ve.vl.vmaxswzx.vvvl
llvm.ve.vl.vmaxswzx.vvvmvl
llvm.ve.vl.vmaxswzx.vvvvl
llvm.ve.vl.vminsl.vsvl
llvm.ve.vl.vminsl.vsvmvl
llvm.ve.vl.vminsl.vsvvl
llvm.ve.vl.vminsl.vvvl
llvm.ve.vl.vminsl.vvvmvl
llvm.ve.vl.vminsl.vvvvl
llvm.ve.vl.vminswsx.vsvl
llvm.ve.vl.vminswsx.vsvmvl
llvm.ve.vl.vminswsx.vsvvl
llvm.ve.vl.vminswsx.vvvl
llvm.ve.vl.vminswsx.vvvmvl
llvm.ve.vl.vminswsx.vvvvl
llvm.ve.vl.vminswzx.vsvl
llvm.ve.vl.vminswzx.vsvmvl
llvm.ve.vl.vminswzx.vsvvl
llvm.ve.vl.vminswzx.vvvl
llvm.ve.vl.vminswzx.vvvmvl
llvm.ve.vl.vminswzx.vvvvl
llvm.ve.vl.vmrg.vsvml
llvm.ve.vl.vmrg.vsvmvl
llvm.ve.vl.vmrg.vvvml
llvm.ve.vl.vmrg.vvvmvl
llvm.ve.vl.vmrgw.vsvMl
llvm.ve.vl.vmrgw.vsvMvl
llvm.ve.vl.vmrgw.vvvMl
llvm.ve.vl.vmrgw.vvvMvl
llvm.ve.vl.vmulsl.vsvl
llvm.ve.vl.vmulsl.vsvmvl
llvm.ve.vl.vmulsl.vsvvl
llvm.ve.vl.vmulsl.vvvl
llvm.ve.vl.vmulsl.vvvmvl
llvm.ve.vl.vmulsl.vvvvl
llvm.ve.vl.vmulslw.vsvl
llvm.ve.vl.vmulslw.vsvvl
llvm.ve.vl.vmulslw.vvvl
llvm.ve.vl.vmulslw.vvvvl
llvm.ve.vl.vmulswsx.vsvl
llvm.ve.vl.vmulswsx.vsvmvl
llvm.ve.vl.vmulswsx.vsvvl
llvm.ve.vl.vmulswsx.vvvl
llvm.ve.vl.vmulswsx.vvvmvl
llvm.ve.vl.vmulswsx.vvvvl
llvm.ve.vl.vmulswzx.vsvl
llvm.ve.vl.vmulswzx.vsvmvl
llvm.ve.vl.vmulswzx.vsvvl
llvm.ve.vl.vmulswzx.vvvl
llvm.ve.vl.vmulswzx.vvvmvl
llvm.ve.vl.vmulswzx.vvvvl
llvm.ve.vl.vmulul.vsvl
llvm.ve.vl.vmulul.vsvmvl
llvm.ve.vl.vmulul.vsvvl
llvm.ve.vl.vmulul.vvvl
llvm.ve.vl.vmulul.vvvmvl
llvm.ve.vl.vmulul.vvvvl
llvm.ve.vl.vmuluw.vsvl
llvm.ve.vl.vmuluw.vsvmvl
llvm.ve.vl.vmuluw.vsvvl
llvm.ve.vl.vmuluw.vvvl
llvm.ve.vl.vmuluw.vvvmvl
llvm.ve.vl.vmuluw.vvvvl
llvm.ve.vl.vmv.vsvl
llvm.ve.vl.vmv.vsvmvl
llvm.ve.vl.vmv.vsvvl
llvm.ve.vl.vor.vsvl
llvm.ve.vl.vor.vsvmvl
llvm.ve.vl.vor.vsvvl
llvm.ve.vl.vor.vvvl
llvm.ve.vl.vor.vvvmvl
llvm.ve.vl.vor.vvvvl
llvm.ve.vl.vrand.vvl
llvm.ve.vl.vrand.vvml
llvm.ve.vl.vrcpd.vvl
llvm.ve.vl.vrcpd.vvvl
llvm.ve.vl.vrcps.vvl
llvm.ve.vl.vrcps.vvvl
llvm.ve.vl.vrmaxslfst.vvl
llvm.ve.vl.vrmaxslfst.vvvl
llvm.ve.vl.vrmaxsllst.vvl
llvm.ve.vl.vrmaxsllst.vvvl
llvm.ve.vl.vrmaxswfstsx.vvl
llvm.ve.vl.vrmaxswfstsx.vvvl
llvm.ve.vl.vrmaxswfstzx.vvl
llvm.ve.vl.vrmaxswfstzx.vvvl
llvm.ve.vl.vrmaxswlstsx.vvl
llvm.ve.vl.vrmaxswlstsx.vvvl
llvm.ve.vl.vrmaxswlstzx.vvl
llvm.ve.vl.vrmaxswlstzx.vvvl
llvm.ve.vl.vrminslfst.vvl
llvm.ve.vl.vrminslfst.vvvl
llvm.ve.vl.vrminsllst.vvl
llvm.ve.vl.vrminsllst.vvvl
llvm.ve.vl.vrminswfstsx.vvl
llvm.ve.vl.vrminswfstsx.vvvl
llvm.ve.vl.vrminswfstzx.vvl
llvm.ve.vl.vrminswfstzx.vvvl
llvm.ve.vl.vrminswlstsx.vvl
llvm.ve.vl.vrminswlstsx.vvvl
llvm.ve.vl.vrminswlstzx.vvl
llvm.ve.vl.vrminswlstzx.vvvl
llvm.ve.vl.vror.vvl
llvm.ve.vl.vror.vvml
llvm.ve.vl.vrsqrtd.vvl
llvm.ve.vl.vrsqrtd.vvvl
llvm.ve.vl.vrsqrtdnex.vvl
llvm.ve.vl.vrsqrtdnex.vvvl
llvm.ve.vl.vrsqrts.vvl
llvm.ve.vl.vrsqrts.vvvl
llvm.ve.vl.vrsqrtsnex.vvl
llvm.ve.vl.vrsqrtsnex.vvvl
llvm.ve.vl.vrxor.vvl
llvm.ve.vl.vrxor.vvml
llvm.ve.vl.vsc.vvssl
llvm.ve.vl.vsc.vvssml
llvm.ve.vl.vscl.vvssl
llvm.ve.vl.vscl.vvssml
llvm.ve.vl.vsclnc.vvssl
llvm.ve.vl.vsclnc.vvssml
llvm.ve.vl.vsclncot.vvssl
llvm.ve.vl.vsclncot.vvssml
llvm.ve.vl.vsclot.vvssl
llvm.ve.vl.vsclot.vvssml
llvm.ve.vl.vscnc.vvssl
llvm.ve.vl.vscnc.vvssml
llvm.ve.vl.vscncot.vvssl
llvm.ve.vl.vscncot.vvssml
llvm.ve.vl.vscot.vvssl
llvm.ve.vl.vscot.vvssml
llvm.ve.vl.vscu.vvssl
llvm.ve.vl.vscu.vvssml
llvm.ve.vl.vscunc.vvssl
llvm.ve.vl.vscunc.vvssml
llvm.ve.vl.vscuncot.vvssl
llvm.ve.vl.vscuncot.vvssml
llvm.ve.vl.vscuot.vvssl
llvm.ve.vl.vscuot.vvssml
llvm.ve.vl.vseq.vl
llvm.ve.vl.vseq.vvl
llvm.ve.vl.vsfa.vvssl
llvm.ve.vl.vsfa.vvssmvl
llvm.ve.vl.vsfa.vvssvl
llvm.ve.vl.vshf.vvvsl
llvm.ve.vl.vshf.vvvsvl
llvm.ve.vl.vslal.vvsl
llvm.ve.vl.vslal.vvsmvl
llvm.ve.vl.vslal.vvsvl
llvm.ve.vl.vslal.vvvl
llvm.ve.vl.vslal.vvvmvl
llvm.ve.vl.vslal.vvvvl
llvm.ve.vl.vslawsx.vvsl
llvm.ve.vl.vslawsx.vvsmvl
llvm.ve.vl.vslawsx.vvsvl
llvm.ve.vl.vslawsx.vvvl
llvm.ve.vl.vslawsx.vvvmvl
llvm.ve.vl.vslawsx.vvvvl
llvm.ve.vl.vslawzx.vvsl
llvm.ve.vl.vslawzx.vvsmvl
llvm.ve.vl.vslawzx.vvsvl
llvm.ve.vl.vslawzx.vvvl
llvm.ve.vl.vslawzx.vvvmvl
llvm.ve.vl.vslawzx.vvvvl
llvm.ve.vl.vsll.vvsl
llvm.ve.vl.vsll.vvsmvl
llvm.ve.vl.vsll.vvsvl
llvm.ve.vl.vsll.vvvl
llvm.ve.vl.vsll.vvvmvl
llvm.ve.vl.vsll.vvvvl
llvm.ve.vl.vsral.vvsl
llvm.ve.vl.vsral.vvsmvl
llvm.ve.vl.vsral.vvsvl
llvm.ve.vl.vsral.vvvl
llvm.ve.vl.vsral.vvvmvl
llvm.ve.vl.vsral.vvvvl
llvm.ve.vl.vsrawsx.vvsl
llvm.ve.vl.vsrawsx.vvsmvl
llvm.ve.vl.vsrawsx.vvsvl
llvm.ve.vl.vsrawsx.vvvl
llvm.ve.vl.vsrawsx.vvvmvl
llvm.ve.vl.vsrawsx.vvvvl
llvm.ve.vl.vsrawzx.vvsl
llvm.ve.vl.vsrawzx.vvsmvl
llvm.ve.vl.vsrawzx.vvsvl
llvm.ve.vl.vsrawzx.vvvl
llvm.ve.vl.vsrawzx.vvvmvl
llvm.ve.vl.vsrawzx.vvvvl
llvm.ve.vl.vsrl.vvsl
llvm.ve.vl.vsrl.vvsmvl
llvm.ve.vl.vsrl.vvsvl
llvm.ve.vl.vsrl.vvvl
llvm.ve.vl.vsrl.vvvmvl
llvm.ve.vl.vsrl.vvvvl
llvm.ve.vl.vst.vssl
llvm.ve.vl.vst.vssml
llvm.ve.vl.vst2d.vssl
llvm.ve.vl.vst2d.vssml
llvm.ve.vl.vst2dnc.vssl
llvm.ve.vl.vst2dnc.vssml
llvm.ve.vl.vst2dncot.vssl
llvm.ve.vl.vst2dncot.vssml
llvm.ve.vl.vst2dot.vssl
llvm.ve.vl.vst2dot.vssml
llvm.ve.vl.vstl.vssl
llvm.ve.vl.vstl.vssml
llvm.ve.vl.vstl2d.vssl
llvm.ve.vl.vstl2d.vssml
llvm.ve.vl.vstl2dnc.vssl
llvm.ve.vl.vstl2dnc.vssml
llvm.ve.vl.vstl2dncot.vssl
llvm.ve.vl.vstl2dncot.vssml
llvm.ve.vl.vstl2dot.vssl
llvm.ve.vl.vstl2dot.vssml
llvm.ve.vl.vstlnc.vssl
llvm.ve.vl.vstlnc.vssml
llvm.ve.vl.vstlncot.vssl
llvm.ve.vl.vstlncot.vssml
llvm.ve.vl.vstlot.vssl
llvm.ve.vl.vstlot.vssml
llvm.ve.vl.vstnc.vssl
llvm.ve.vl.vstnc.vssml
llvm.ve.vl.vstncot.vssl
llvm.ve.vl.vstncot.vssml
llvm.ve.vl.vstot.vssl
llvm.ve.vl.vstot.vssml
llvm.ve.vl.vstu.vssl
llvm.ve.vl.vstu.vssml
llvm.ve.vl.vstu2d.vssl
llvm.ve.vl.vstu2d.vssml
llvm.ve.vl.vstu2dnc.vssl
llvm.ve.vl.vstu2dnc.vssml
llvm.ve.vl.vstu2dncot.vssl
llvm.ve.vl.vstu2dncot.vssml
llvm.ve.vl.vstu2dot.vssl
llvm.ve.vl.vstu2dot.vssml
llvm.ve.vl.vstunc.vssl
llvm.ve.vl.vstunc.vssml
llvm.ve.vl.vstuncot.vssl
llvm.ve.vl.vstuncot.vssml
llvm.ve.vl.vstuot.vssl
llvm.ve.vl.vstuot.vssml
llvm.ve.vl.vsubsl.vsvl
llvm.ve.vl.vsubsl.vsvmvl
llvm.ve.vl.vsubsl.vsvvl
llvm.ve.vl.vsubsl.vvvl
llvm.ve.vl.vsubsl.vvvmvl
llvm.ve.vl.vsubsl.vvvvl
llvm.ve.vl.vsubswsx.vsvl
llvm.ve.vl.vsubswsx.vsvmvl
llvm.ve.vl.vsubswsx.vsvvl
llvm.ve.vl.vsubswsx.vvvl
llvm.ve.vl.vsubswsx.vvvmvl
llvm.ve.vl.vsubswsx.vvvvl
llvm.ve.vl.vsubswzx.vsvl
llvm.ve.vl.vsubswzx.vsvmvl
llvm.ve.vl.vsubswzx.vsvvl
llvm.ve.vl.vsubswzx.vvvl
llvm.ve.vl.vsubswzx.vvvmvl
llvm.ve.vl.vsubswzx.vvvvl
llvm.ve.vl.vsubul.vsvl
llvm.ve.vl.vsubul.vsvmvl
llvm.ve.vl.vsubul.vsvvl
llvm.ve.vl.vsubul.vvvl
llvm.ve.vl.vsubul.vvvmvl
llvm.ve.vl.vsubul.vvvvl
llvm.ve.vl.vsubuw.vsvl
llvm.ve.vl.vsubuw.vsvmvl
llvm.ve.vl.vsubuw.vsvvl
llvm.ve.vl.vsubuw.vvvl
llvm.ve.vl.vsubuw.vvvmvl
llvm.ve.vl.vsubuw.vvvvl
llvm.ve.vl.vsuml.vvl
llvm.ve.vl.vsuml.vvml
llvm.ve.vl.vsumwsx.vvl
llvm.ve.vl.vsumwsx.vvml
llvm.ve.vl.vsumwzx.vvl
llvm.ve.vl.vsumwzx.vvml
llvm.ve.vl.vxor.vsvl
llvm.ve.vl.vxor.vsvmvl
llvm.ve.vl.vxor.vsvvl
llvm.ve.vl.vxor.vvvl
llvm.ve.vl.vxor.vvvmvl
llvm.ve.vl.vxor.vvvvl
llvm.ve.vl.xorm.MMM
llvm.ve.vl.xorm.mmm
llvm.wasm.alltrue
llvm.wasm.anytrue
llvm.wasm.avgr.unsigned
llvm.wasm.bitmask
llvm.wasm.bitselect
llvm.wasm.ceil
llvm.wasm.dot
llvm.wasm.eq
llvm.wasm.extadd.pairwise.signed
llvm.wasm.extadd.pairwise.unsigned
llvm.wasm.extmul.high.signed
llvm.wasm.extmul.high.unsigned
llvm.wasm.extmul.low.signed
llvm.wasm.extmul.low.unsigned
llvm.wasm.extract.exception
llvm.wasm.floor
llvm.wasm.get.ehselector
llvm.wasm.get.exception
llvm.wasm.landingpad.index
llvm.wasm.load16.lane
llvm.wasm.load32.lane
llvm.wasm.load32.zero
llvm.wasm.load64.lane
llvm.wasm.load64.zero
llvm.wasm.load8.lane
llvm.wasm.lsda
llvm.wasm.memory.atomic.notify
llvm.wasm.memory.atomic.wait32
llvm.wasm.memory.atomic.wait64
llvm.wasm.memory.grow
llvm.wasm.memory.size
llvm.wasm.narrow.signed
llvm.wasm.narrow.unsigned
llvm.wasm.nearest
llvm.wasm.pmax
llvm.wasm.pmin
llvm.wasm.popcnt
llvm.wasm.prefetch.nt
llvm.wasm.prefetch.t
llvm.wasm.q15mulr.saturate.signed
llvm.wasm.qfma
llvm.wasm.qfms
llvm.wasm.rethrow.in.catch
llvm.wasm.shuffle
llvm.wasm.signselect
llvm.wasm.store16.lane
llvm.wasm.store32.lane
llvm.wasm.store64.lane
llvm.wasm.store8.lane
llvm.wasm.sub.saturate.signed
llvm.wasm.sub.saturate.unsigned
llvm.wasm.swizzle
llvm.wasm.throw
llvm.wasm.tls.align
llvm.wasm.tls.base
llvm.wasm.tls.size
llvm.wasm.trunc
llvm.wasm.trunc.saturate.signed
llvm.wasm.trunc.saturate.unsigned
llvm.wasm.trunc.signed
llvm.wasm.trunc.unsigned
llvm.wasm.widen.high.signed
llvm.wasm.widen.high.unsigned
llvm.wasm.widen.low.signed
llvm.wasm.widen.low.unsigned
llvm.x86.3dnow.pavgusb
llvm.x86.3dnow.pf2id
llvm.x86.3dnow.pfacc
llvm.x86.3dnow.pfadd
llvm.x86.3dnow.pfcmpeq
llvm.x86.3dnow.pfcmpge
llvm.x86.3dnow.pfcmpgt
llvm.x86.3dnow.pfmax
llvm.x86.3dnow.pfmin
llvm.x86.3dnow.pfmul
llvm.x86.3dnow.pfrcp
llvm.x86.3dnow.pfrcpit1
llvm.x86.3dnow.pfrcpit2
llvm.x86.3dnow.pfrsqit1
llvm.x86.3dnow.pfrsqrt
llvm.x86.3dnow.pfsub
llvm.x86.3dnow.pfsubr
llvm.x86.3dnow.pi2fd
llvm.x86.3dnow.pmulhrw
llvm.x86.3dnowa.pf2iw
llvm.x86.3dnowa.pfnacc
llvm.x86.3dnowa.pfpnacc
llvm.x86.3dnowa.pi2fw
llvm.x86.3dnowa.pswapd
llvm.x86.addcarry.32
llvm.x86.addcarry.64
llvm.x86.aesdec128kl
llvm.x86.aesdec256kl
llvm.x86.aesdecwide128kl
llvm.x86.aesdecwide256kl
llvm.x86.aesenc128kl
llvm.x86.aesenc256kl
llvm.x86.aesencwide128kl
llvm.x86.aesencwide256kl
llvm.x86.aesni.aesdec
llvm.x86.aesni.aesdec.256
llvm.x86.aesni.aesdec.512
llvm.x86.aesni.aesdeclast
llvm.x86.aesni.aesdeclast.256
llvm.x86.aesni.aesdeclast.512
llvm.x86.aesni.aesenc
llvm.x86.aesni.aesenc.256
llvm.x86.aesni.aesenc.512
llvm.x86.aesni.aesenclast
llvm.x86.aesni.aesenclast.256
llvm.x86.aesni.aesenclast.512
llvm.x86.aesni.aesimc
llvm.x86.aesni.aeskeygenassist
llvm.x86.avx.addsub.pd.256
llvm.x86.avx.addsub.ps.256
llvm.x86.avx.blendv.pd.256
llvm.x86.avx.blendv.ps.256
llvm.x86.avx.cmp.pd.256
llvm.x86.avx.cmp.ps.256
llvm.x86.avx.cvt.pd2.ps.256
llvm.x86.avx.cvt.pd2dq.256
llvm.x86.avx.cvt.ps2dq.256
llvm.x86.avx.cvtt.pd2dq.256
llvm.x86.avx.cvtt.ps2dq.256
llvm.x86.avx.dp.ps.256
llvm.x86.avx.hadd.pd.256
llvm.x86.avx.hadd.ps.256
llvm.x86.avx.hsub.pd.256
llvm.x86.avx.hsub.ps.256
llvm.x86.avx.ldu.dq.256
llvm.x86.avx.maskload.pd
llvm.x86.avx.maskload.pd.256
llvm.x86.avx.maskload.ps
llvm.x86.avx.maskload.ps.256
llvm.x86.avx.maskstore.pd
llvm.x86.avx.maskstore.pd.256
llvm.x86.avx.maskstore.ps
llvm.x86.avx.maskstore.ps.256
llvm.x86.avx.max.pd.256
llvm.x86.avx.max.ps.256
llvm.x86.avx.min.pd.256
llvm.x86.avx.min.ps.256
llvm.x86.avx.movmsk.pd.256
llvm.x86.avx.movmsk.ps.256
llvm.x86.avx.ptestc.256
llvm.x86.avx.ptestnzc.256
llvm.x86.avx.ptestz.256
llvm.x86.avx.rcp.ps.256
llvm.x86.avx.round.pd.256
llvm.x86.avx.round.ps.256
llvm.x86.avx.rsqrt.ps.256
llvm.x86.avx.vpermilvar.pd
llvm.x86.avx.vpermilvar.pd.256
llvm.x86.avx.vpermilvar.ps
llvm.x86.avx.vpermilvar.ps.256
llvm.x86.avx.vtestc.pd
llvm.x86.avx.vtestc.pd.256
llvm.x86.avx.vtestc.ps
llvm.x86.avx.vtestc.ps.256
llvm.x86.avx.vtestnzc.pd
llvm.x86.avx.vtestnzc.pd.256
llvm.x86.avx.vtestnzc.ps
llvm.x86.avx.vtestnzc.ps.256
llvm.x86.avx.vtestz.pd
llvm.x86.avx.vtestz.pd.256
llvm.x86.avx.vtestz.ps
llvm.x86.avx.vtestz.ps.256
llvm.x86.avx.vzeroall
llvm.x86.avx.vzeroupper
llvm.x86.avx2.gather.d.d
llvm.x86.avx2.gather.d.d.256
llvm.x86.avx2.gather.d.pd
llvm.x86.avx2.gather.d.pd.256
llvm.x86.avx2.gather.d.ps
llvm.x86.avx2.gather.d.ps.256
llvm.x86.avx2.gather.d.q
llvm.x86.avx2.gather.d.q.256
llvm.x86.avx2.gather.q.d
llvm.x86.avx2.gather.q.d.256
llvm.x86.avx2.gather.q.pd
llvm.x86.avx2.gather.q.pd.256
llvm.x86.avx2.gather.q.ps
llvm.x86.avx2.gather.q.ps.256
llvm.x86.avx2.gather.q.q
llvm.x86.avx2.gather.q.q.256
llvm.x86.avx2.maskload.d
llvm.x86.avx2.maskload.d.256
llvm.x86.avx2.maskload.q
llvm.x86.avx2.maskload.q.256
llvm.x86.avx2.maskstore.d
llvm.x86.avx2.maskstore.d.256
llvm.x86.avx2.maskstore.q
llvm.x86.avx2.maskstore.q.256
llvm.x86.avx2.mpsadbw
llvm.x86.avx2.packssdw
llvm.x86.avx2.packsswb
llvm.x86.avx2.packusdw
llvm.x86.avx2.packuswb
llvm.x86.avx2.pavg.b
llvm.x86.avx2.pavg.w
llvm.x86.avx2.pblendvb
llvm.x86.avx2.permd
llvm.x86.avx2.permps
llvm.x86.avx2.phadd.d
llvm.x86.avx2.phadd.sw
llvm.x86.avx2.phadd.w
llvm.x86.avx2.phsub.d
llvm.x86.avx2.phsub.sw
llvm.x86.avx2.phsub.w
llvm.x86.avx2.pmadd.ub.sw
llvm.x86.avx2.pmadd.wd
llvm.x86.avx2.pmovmskb
llvm.x86.avx2.pmul.hr.sw
llvm.x86.avx2.pmulh.w
llvm.x86.avx2.pmulhu.w
llvm.x86.avx2.psad.bw
llvm.x86.avx2.pshuf.b
llvm.x86.avx2.psign.b
llvm.x86.avx2.psign.d
llvm.x86.avx2.psign.w
llvm.x86.avx2.psll.d
llvm.x86.avx2.psll.q
llvm.x86.avx2.psll.w
llvm.x86.avx2.pslli.d
llvm.x86.avx2.pslli.q
llvm.x86.avx2.pslli.w
llvm.x86.avx2.psllv.d
llvm.x86.avx2.psllv.d.256
llvm.x86.avx2.psllv.q
llvm.x86.avx2.psllv.q.256
llvm.x86.avx2.psra.d
llvm.x86.avx2.psra.w
llvm.x86.avx2.psrai.d
llvm.x86.avx2.psrai.w
llvm.x86.avx2.psrav.d
llvm.x86.avx2.psrav.d.256
llvm.x86.avx2.psrl.d
llvm.x86.avx2.psrl.q
llvm.x86.avx2.psrl.w
llvm.x86.avx2.psrli.d
llvm.x86.avx2.psrli.q
llvm.x86.avx2.psrli.w
llvm.x86.avx2.psrlv.d
llvm.x86.avx2.psrlv.d.256
llvm.x86.avx2.psrlv.q
llvm.x86.avx2.psrlv.q.256
llvm.x86.avx512.add.pd.512
llvm.x86.avx512.add.ps.512
llvm.x86.avx512.broadcastmb.128
llvm.x86.avx512.broadcastmb.256
llvm.x86.avx512.broadcastmb.512
llvm.x86.avx512.broadcastmw.128
llvm.x86.avx512.broadcastmw.256
llvm.x86.avx512.broadcastmw.512
llvm.x86.avx512.conflict.d.128
llvm.x86.avx512.conflict.d.256
llvm.x86.avx512.conflict.d.512
llvm.x86.avx512.conflict.q.128
llvm.x86.avx512.conflict.q.256
llvm.x86.avx512.conflict.q.512
llvm.x86.avx512.cvtsi2sd64
llvm.x86.avx512.cvtsi2ss32
llvm.x86.avx512.cvtsi2ss64
llvm.x86.avx512.cvttsd2si
llvm.x86.avx512.cvttsd2si64
llvm.x86.avx512.cvttsd2usi
llvm.x86.avx512.cvttsd2usi64
llvm.x86.avx512.cvttss2si
llvm.x86.avx512.cvttss2si64
llvm.x86.avx512.cvttss2usi
llvm.x86.avx512.cvttss2usi64
llvm.x86.avx512.cvtusi2ss
llvm.x86.avx512.cvtusi642sd
llvm.x86.avx512.cvtusi642ss
llvm.x86.avx512.dbpsadbw.128
llvm.x86.avx512.dbpsadbw.256
llvm.x86.avx512.dbpsadbw.512
llvm.x86.avx512.div.pd.512
llvm.x86.avx512.div.ps.512
llvm.x86.avx512.exp2.pd
llvm.x86.avx512.exp2.ps
llvm.x86.avx512.fpclass.pd.128
llvm.x86.avx512.fpclass.pd.256
llvm.x86.avx512.fpclass.pd.512
llvm.x86.avx512.fpclass.ps.128
llvm.x86.avx512.fpclass.ps.256
llvm.x86.avx512.fpclass.ps.512
llvm.x86.avx512.gather.dpd.512
llvm.x86.avx512.gather.dpi.512
llvm.x86.avx512.gather.dpq.512
llvm.x86.avx512.gather.dps.512
llvm.x86.avx512.gather.qpd.512
llvm.x86.avx512.gather.qpi.512
llvm.x86.avx512.gather.qpq.512
llvm.x86.avx512.gather.qps.512
llvm.x86.avx512.gather3div2.df
llvm.x86.avx512.gather3div2.di
llvm.x86.avx512.gather3div4.df
llvm.x86.avx512.gather3div4.di
llvm.x86.avx512.gather3div4.sf
llvm.x86.avx512.gather3div4.si
llvm.x86.avx512.gather3div8.sf
llvm.x86.avx512.gather3div8.si
llvm.x86.avx512.gather3siv2.df
llvm.x86.avx512.gather3siv2.di
llvm.x86.avx512.gather3siv4.df
llvm.x86.avx512.gather3siv4.di
llvm.x86.avx512.gather3siv4.sf
llvm.x86.avx512.gather3siv4.si
llvm.x86.avx512.gather3siv8.sf
llvm.x86.avx512.gather3siv8.si
llvm.x86.avx512.gatherpf.dpd.512
llvm.x86.avx512.gatherpf.dps.512
llvm.x86.avx512.gatherpf.qpd.512
llvm.x86.avx512.gatherpf.qps.512
llvm.x86.avx512.kadd.b
llvm.x86.avx512.kadd.d
llvm.x86.avx512.kadd.q
llvm.x86.avx512.kadd.w
llvm.x86.avx512.ktestc.b
llvm.x86.avx512.ktestc.d
llvm.x86.avx512.ktestc.q
llvm.x86.avx512.ktestc.w
llvm.x86.avx512.ktestz.b
llvm.x86.avx512.ktestz.d
llvm.x86.avx512.ktestz.q
llvm.x86.avx512.ktestz.w
llvm.x86.avx512.mask.add.sd.round
llvm.x86.avx512.mask.add.ss.round
llvm.x86.avx512.mask.cmp.pd.128
llvm.x86.avx512.mask.cmp.pd.256
llvm.x86.avx512.mask.cmp.pd.512
llvm.x86.avx512.mask.cmp.ps.128
llvm.x86.avx512.mask.cmp.ps.256
llvm.x86.avx512.mask.cmp.ps.512
llvm.x86.avx512.mask.cmp.sd
llvm.x86.avx512.mask.cmp.ss
llvm.x86.avx512.mask.compress
llvm.x86.avx512.mask.cvtpd2dq.128
llvm.x86.avx512.mask.cvtpd2dq.512
llvm.x86.avx512.mask.cvtpd2ps
llvm.x86.avx512.mask.cvtpd2ps.512
llvm.x86.avx512.mask.cvtpd2qq.128
llvm.x86.avx512.mask.cvtpd2qq.256
llvm.x86.avx512.mask.cvtpd2qq.512
llvm.x86.avx512.mask.cvtpd2udq.128
llvm.x86.avx512.mask.cvtpd2udq.256
llvm.x86.avx512.mask.cvtpd2udq.512
llvm.x86.avx512.mask.cvtpd2uqq.128
llvm.x86.avx512.mask.cvtpd2uqq.256
llvm.x86.avx512.mask.cvtpd2uqq.512
llvm.x86.avx512.mask.cvtps2dq.128
llvm.x86.avx512.mask.cvtps2dq.256
llvm.x86.avx512.mask.cvtps2dq.512
llvm.x86.avx512.mask.cvtps2pd.512
llvm.x86.avx512.mask.cvtps2qq.128
llvm.x86.avx512.mask.cvtps2qq.256
llvm.x86.avx512.mask.cvtps2qq.512
llvm.x86.avx512.mask.cvtps2udq.128
llvm.x86.avx512.mask.cvtps2udq.256
llvm.x86.avx512.mask.cvtps2udq.512
llvm.x86.avx512.mask.cvtps2uqq.128
llvm.x86.avx512.mask.cvtps2uqq.256
llvm.x86.avx512.mask.cvtps2uqq.512
llvm.x86.avx512.mask.cvtqq2ps.128
llvm.x86.avx512.mask.cvtsd2ss.round
llvm.x86.avx512.mask.cvtss2sd.round
llvm.x86.avx512.mask.cvttpd2dq.128
llvm.x86.avx512.mask.cvttpd2dq.512
llvm.x86.avx512.mask.cvttpd2qq.128
llvm.x86.avx512.mask.cvttpd2qq.256
llvm.x86.avx512.mask.cvttpd2qq.512
llvm.x86.avx512.mask.cvttpd2udq.128
llvm.x86.avx512.mask.cvttpd2udq.256
llvm.x86.avx512.mask.cvttpd2udq.512
llvm.x86.avx512.mask.cvttpd2uqq.128
llvm.x86.avx512.mask.cvttpd2uqq.256
llvm.x86.avx512.mask.cvttpd2uqq.512
llvm.x86.avx512.mask.cvttps2dq.512
llvm.x86.avx512.mask.cvttps2qq.128
llvm.x86.avx512.mask.cvttps2qq.256
llvm.x86.avx512.mask.cvttps2qq.512
llvm.x86.avx512.mask.cvttps2udq.128
llvm.x86.avx512.mask.cvttps2udq.256
llvm.x86.avx512.mask.cvttps2udq.512
llvm.x86.avx512.mask.cvttps2uqq.128
llvm.x86.avx512.mask.cvttps2uqq.256
llvm.x86.avx512.mask.cvttps2uqq.512
llvm.x86.avx512.mask.cvtuqq2ps.128
llvm.x86.avx512.mask.div.sd.round
llvm.x86.avx512.mask.div.ss.round
llvm.x86.avx512.mask.expand
llvm.x86.avx512.mask.fixupimm.pd.128
llvm.x86.avx512.mask.fixupimm.pd.256
llvm.x86.avx512.mask.fixupimm.pd.512
llvm.x86.avx512.mask.fixupimm.ps.128
llvm.x86.avx512.mask.fixupimm.ps.256
llvm.x86.avx512.mask.fixupimm.ps.512
llvm.x86.avx512.mask.fixupimm.sd
llvm.x86.avx512.mask.fixupimm.ss
llvm.x86.avx512.mask.fpclass.sd
llvm.x86.avx512.mask.fpclass.ss
llvm.x86.avx512.mask.gather.dpd.512
llvm.x86.avx512.mask.gather.dpi.512
llvm.x86.avx512.mask.gather.dpq.512
llvm.x86.avx512.mask.gather.dps.512
llvm.x86.avx512.mask.gather.qpd.512
llvm.x86.avx512.mask.gather.qpi.512
llvm.x86.avx512.mask.gather.qpq.512
llvm.x86.avx512.mask.gather.qps.512
llvm.x86.avx512.mask.gather3div2.df
llvm.x86.avx512.mask.gather3div2.di
llvm.x86.avx512.mask.gather3div4.df
llvm.x86.avx512.mask.gather3div4.di
llvm.x86.avx512.mask.gather3div4.sf
llvm.x86.avx512.mask.gather3div4.si
llvm.x86.avx512.mask.gather3div8.sf
llvm.x86.avx512.mask.gather3div8.si
llvm.x86.avx512.mask.gather3siv2.df
llvm.x86.avx512.mask.gather3siv2.di
llvm.x86.avx512.mask.gather3siv4.df
llvm.x86.avx512.mask.gather3siv4.di
llvm.x86.avx512.mask.gather3siv4.sf
llvm.x86.avx512.mask.gather3siv4.si
llvm.x86.avx512.mask.gather3siv8.sf
llvm.x86.avx512.mask.gather3siv8.si
llvm.x86.avx512.mask.getexp.pd.128
llvm.x86.avx512.mask.getexp.pd.256
llvm.x86.avx512.mask.getexp.pd.512
llvm.x86.avx512.mask.getexp.ps.128
llvm.x86.avx512.mask.getexp.ps.256
llvm.x86.avx512.mask.getexp.ps.512
llvm.x86.avx512.mask.getexp.sd
llvm.x86.avx512.mask.getexp.ss
llvm.x86.avx512.mask.getmant.pd.128
llvm.x86.avx512.mask.getmant.pd.256
llvm.x86.avx512.mask.getmant.pd.512
llvm.x86.avx512.mask.getmant.ps.128
llvm.x86.avx512.mask.getmant.ps.256
llvm.x86.avx512.mask.getmant.ps.512
llvm.x86.avx512.mask.getmant.sd
llvm.x86.avx512.mask.getmant.ss
llvm.x86.avx512.mask.max.sd.round
llvm.x86.avx512.mask.max.ss.round
llvm.x86.avx512.mask.min.sd.round
llvm.x86.avx512.mask.min.ss.round
llvm.x86.avx512.mask.mul.sd.round
llvm.x86.avx512.mask.mul.ss.round
llvm.x86.avx512.mask.pmov.db.128
llvm.x86.avx512.mask.pmov.db.256
llvm.x86.avx512.mask.pmov.db.512
llvm.x86.avx512.mask.pmov.db.mem.128
llvm.x86.avx512.mask.pmov.db.mem.256
llvm.x86.avx512.mask.pmov.db.mem.512
llvm.x86.avx512.mask.pmov.dw.128
llvm.x86.avx512.mask.pmov.dw.256
llvm.x86.avx512.mask.pmov.dw.512
llvm.x86.avx512.mask.pmov.dw.mem.128
llvm.x86.avx512.mask.pmov.dw.mem.256
llvm.x86.avx512.mask.pmov.dw.mem.512
llvm.x86.avx512.mask.pmov.qb.128
llvm.x86.avx512.mask.pmov.qb.256
llvm.x86.avx512.mask.pmov.qb.512
llvm.x86.avx512.mask.pmov.qb.mem.128
llvm.x86.avx512.mask.pmov.qb.mem.256
llvm.x86.avx512.mask.pmov.qb.mem.512
llvm.x86.avx512.mask.pmov.qd.128
llvm.x86.avx512.mask.pmov.qd.mem.128
llvm.x86.avx512.mask.pmov.qd.mem.256
llvm.x86.avx512.mask.pmov.qd.mem.512
llvm.x86.avx512.mask.pmov.qw.128
llvm.x86.avx512.mask.pmov.qw.256
llvm.x86.avx512.mask.pmov.qw.512
llvm.x86.avx512.mask.pmov.qw.mem.128
llvm.x86.avx512.mask.pmov.qw.mem.256
llvm.x86.avx512.mask.pmov.qw.mem.512
llvm.x86.avx512.mask.pmov.wb.128
llvm.x86.avx512.mask.pmov.wb.mem.128
llvm.x86.avx512.mask.pmov.wb.mem.256
llvm.x86.avx512.mask.pmov.wb.mem.512
llvm.x86.avx512.mask.pmovs.db.128
llvm.x86.avx512.mask.pmovs.db.256
llvm.x86.avx512.mask.pmovs.db.512
llvm.x86.avx512.mask.pmovs.db.mem.128
llvm.x86.avx512.mask.pmovs.db.mem.256
llvm.x86.avx512.mask.pmovs.db.mem.512
llvm.x86.avx512.mask.pmovs.dw.128
llvm.x86.avx512.mask.pmovs.dw.256
llvm.x86.avx512.mask.pmovs.dw.512
llvm.x86.avx512.mask.pmovs.dw.mem.128
llvm.x86.avx512.mask.pmovs.dw.mem.256
llvm.x86.avx512.mask.pmovs.dw.mem.512
llvm.x86.avx512.mask.pmovs.qb.128
llvm.x86.avx512.mask.pmovs.qb.256
llvm.x86.avx512.mask.pmovs.qb.512
llvm.x86.avx512.mask.pmovs.qb.mem.128
llvm.x86.avx512.mask.pmovs.qb.mem.256
llvm.x86.avx512.mask.pmovs.qb.mem.512
llvm.x86.avx512.mask.pmovs.qd.128
llvm.x86.avx512.mask.pmovs.qd.256
llvm.x86.avx512.mask.pmovs.qd.512
llvm.x86.avx512.mask.pmovs.qd.mem.128
llvm.x86.avx512.mask.pmovs.qd.mem.256
llvm.x86.avx512.mask.pmovs.qd.mem.512
llvm.x86.avx512.mask.pmovs.qw.128
llvm.x86.avx512.mask.pmovs.qw.256
llvm.x86.avx512.mask.pmovs.qw.512
llvm.x86.avx512.mask.pmovs.qw.mem.128
llvm.x86.avx512.mask.pmovs.qw.mem.256
llvm.x86.avx512.mask.pmovs.qw.mem.512
llvm.x86.avx512.mask.pmovs.wb.128
llvm.x86.avx512.mask.pmovs.wb.256
llvm.x86.avx512.mask.pmovs.wb.512
llvm.x86.avx512.mask.pmovs.wb.mem.128
llvm.x86.avx512.mask.pmovs.wb.mem.256
llvm.x86.avx512.mask.pmovs.wb.mem.512
llvm.x86.avx512.mask.pmovus.db.128
llvm.x86.avx512.mask.pmovus.db.256
llvm.x86.avx512.mask.pmovus.db.512
llvm.x86.avx512.mask.pmovus.db.mem.128
llvm.x86.avx512.mask.pmovus.db.mem.256
llvm.x86.avx512.mask.pmovus.db.mem.512
llvm.x86.avx512.mask.pmovus.dw.128
llvm.x86.avx512.mask.pmovus.dw.256
llvm.x86.avx512.mask.pmovus.dw.512
llvm.x86.avx512.mask.pmovus.dw.mem.128
llvm.x86.avx512.mask.pmovus.dw.mem.256
llvm.x86.avx512.mask.pmovus.dw.mem.512
llvm.x86.avx512.mask.pmovus.qb.128
llvm.x86.avx512.mask.pmovus.qb.256
llvm.x86.avx512.mask.pmovus.qb.512
llvm.x86.avx512.mask.pmovus.qb.mem.128
llvm.x86.avx512.mask.pmovus.qb.mem.256
llvm.x86.avx512.mask.pmovus.qb.mem.512
llvm.x86.avx512.mask.pmovus.qd.128
llvm.x86.avx512.mask.pmovus.qd.256
llvm.x86.avx512.mask.pmovus.qd.512
llvm.x86.avx512.mask.pmovus.qd.mem.128
llvm.x86.avx512.mask.pmovus.qd.mem.256
llvm.x86.avx512.mask.pmovus.qd.mem.512
llvm.x86.avx512.mask.pmovus.qw.128
llvm.x86.avx512.mask.pmovus.qw.256
llvm.x86.avx512.mask.pmovus.qw.512
llvm.x86.avx512.mask.pmovus.qw.mem.128
llvm.x86.avx512.mask.pmovus.qw.mem.256
llvm.x86.avx512.mask.pmovus.qw.mem.512
llvm.x86.avx512.mask.pmovus.wb.128
llvm.x86.avx512.mask.pmovus.wb.256
llvm.x86.avx512.mask.pmovus.wb.512
llvm.x86.avx512.mask.pmovus.wb.mem.128
llvm.x86.avx512.mask.pmovus.wb.mem.256
llvm.x86.avx512.mask.pmovus.wb.mem.512
llvm.x86.avx512.mask.range.pd.128
llvm.x86.avx512.mask.range.pd.256
llvm.x86.avx512.mask.range.pd.512
llvm.x86.avx512.mask.range.ps.128
llvm.x86.avx512.mask.range.ps.256
llvm.x86.avx512.mask.range.ps.512
llvm.x86.avx512.mask.range.sd
llvm.x86.avx512.mask.range.ss
llvm.x86.avx512.mask.reduce.pd.128
llvm.x86.avx512.mask.reduce.pd.256
llvm.x86.avx512.mask.reduce.pd.512
llvm.x86.avx512.mask.reduce.ps.128
llvm.x86.avx512.mask.reduce.ps.256
llvm.x86.avx512.mask.reduce.ps.512
llvm.x86.avx512.mask.reduce.sd
llvm.x86.avx512.mask.reduce.ss
llvm.x86.avx512.mask.rndscale.pd.128
llvm.x86.avx512.mask.rndscale.pd.256
llvm.x86.avx512.mask.rndscale.pd.512
llvm.x86.avx512.mask.rndscale.ps.128
llvm.x86.avx512.mask.rndscale.ps.256
llvm.x86.avx512.mask.rndscale.ps.512
llvm.x86.avx512.mask.rndscale.sd
llvm.x86.avx512.mask.rndscale.ss
llvm.x86.avx512.mask.scalef.pd.128
llvm.x86.avx512.mask.scalef.pd.256
llvm.x86.avx512.mask.scalef.pd.512
llvm.x86.avx512.mask.scalef.ps.128
llvm.x86.avx512.mask.scalef.ps.256
llvm.x86.avx512.mask.scalef.ps.512
llvm.x86.avx512.mask.scalef.sd
llvm.x86.avx512.mask.scalef.ss
llvm.x86.avx512.mask.scatter.dpd.512
llvm.x86.avx512.mask.scatter.dpi.512
llvm.x86.avx512.mask.scatter.dpq.512
llvm.x86.avx512.mask.scatter.dps.512
llvm.x86.avx512.mask.scatter.qpd.512
llvm.x86.avx512.mask.scatter.qpi.512
llvm.x86.avx512.mask.scatter.qpq.512
llvm.x86.avx512.mask.scatter.qps.512
llvm.x86.avx512.mask.scatterdiv2.df
llvm.x86.avx512.mask.scatterdiv2.di
llvm.x86.avx512.mask.scatterdiv4.df
llvm.x86.avx512.mask.scatterdiv4.di
llvm.x86.avx512.mask.scatterdiv4.sf
llvm.x86.avx512.mask.scatterdiv4.si
llvm.x86.avx512.mask.scatterdiv8.sf
llvm.x86.avx512.mask.scatterdiv8.si
llvm.x86.avx512.mask.scattersiv2.df
llvm.x86.avx512.mask.scattersiv2.di
llvm.x86.avx512.mask.scattersiv4.df
llvm.x86.avx512.mask.scattersiv4.di
llvm.x86.avx512.mask.scattersiv4.sf
llvm.x86.avx512.mask.scattersiv4.si
llvm.x86.avx512.mask.scattersiv8.sf
llvm.x86.avx512.mask.scattersiv8.si
llvm.x86.avx512.mask.sqrt.sd
llvm.x86.avx512.mask.sqrt.ss
llvm.x86.avx512.mask.sub.sd.round
llvm.x86.avx512.mask.sub.ss.round
llvm.x86.avx512.mask.vcvtph2ps.512
llvm.x86.avx512.mask.vcvtps2ph.128
llvm.x86.avx512.mask.vcvtps2ph.256
llvm.x86.avx512.mask.vcvtps2ph.512
llvm.x86.avx512.maskz.fixupimm.pd.128
llvm.x86.avx512.maskz.fixupimm.pd.256
llvm.x86.avx512.maskz.fixupimm.pd.512
llvm.x86.avx512.maskz.fixupimm.ps.128
llvm.x86.avx512.maskz.fixupimm.ps.256
llvm.x86.avx512.maskz.fixupimm.ps.512
llvm.x86.avx512.maskz.fixupimm.sd
llvm.x86.avx512.maskz.fixupimm.ss
llvm.x86.avx512.max.pd.512
llvm.x86.avx512.max.ps.512
llvm.x86.avx512.min.pd.512
llvm.x86.avx512.min.ps.512
llvm.x86.avx512.mul.pd.512
llvm.x86.avx512.mul.ps.512
llvm.x86.avx512.packssdw.512
llvm.x86.avx512.packsswb.512
llvm.x86.avx512.packusdw.512
llvm.x86.avx512.packuswb.512
llvm.x86.avx512.pavg.b.512
llvm.x86.avx512.pavg.w.512
llvm.x86.avx512.permvar.df.256
llvm.x86.avx512.permvar.df.512
llvm.x86.avx512.permvar.di.256
llvm.x86.avx512.permvar.di.512
llvm.x86.avx512.permvar.hi.128
llvm.x86.avx512.permvar.hi.256
llvm.x86.avx512.permvar.hi.512
llvm.x86.avx512.permvar.qi.128
llvm.x86.avx512.permvar.qi.256
llvm.x86.avx512.permvar.qi.512
llvm.x86.avx512.permvar.sf.512
llvm.x86.avx512.permvar.si.512
llvm.x86.avx512.pmaddubs.w.512
llvm.x86.avx512.pmaddw.d.512
llvm.x86.avx512.pmul.hr.sw.512
llvm.x86.avx512.pmulh.w.512
llvm.x86.avx512.pmulhu.w.512
llvm.x86.avx512.pmultishift.qb.128
llvm.x86.avx512.pmultishift.qb.256
llvm.x86.avx512.pmultishift.qb.512
llvm.x86.avx512.psad.bw.512
llvm.x86.avx512.pshuf.b.512
llvm.x86.avx512.psll.d.512
llvm.x86.avx512.psll.q.512
llvm.x86.avx512.psll.w.512
llvm.x86.avx512.pslli.d.512
llvm.x86.avx512.pslli.q.512
llvm.x86.avx512.pslli.w.512
llvm.x86.avx512.psllv.d.512
llvm.x86.avx512.psllv.q.512
llvm.x86.avx512.psllv.w.128
llvm.x86.avx512.psllv.w.256
llvm.x86.avx512.psllv.w.512
llvm.x86.avx512.psra.d.512
llvm.x86.avx512.psra.q.128
llvm.x86.avx512.psra.q.256
llvm.x86.avx512.psra.q.512
llvm.x86.avx512.psra.w.512
llvm.x86.avx512.psrai.d.512
llvm.x86.avx512.psrai.q.128
llvm.x86.avx512.psrai.q.256
llvm.x86.avx512.psrai.q.512
llvm.x86.avx512.psrai.w.512
llvm.x86.avx512.psrav.d.512
llvm.x86.avx512.psrav.q.128
llvm.x86.avx512.psrav.q.256
llvm.x86.avx512.psrav.q.512
llvm.x86.avx512.psrav.w.128
llvm.x86.avx512.psrav.w.256
llvm.x86.avx512.psrav.w.512
llvm.x86.avx512.psrl.d.512
llvm.x86.avx512.psrl.q.512
llvm.x86.avx512.psrl.w.512
llvm.x86.avx512.psrli.d.512
llvm.x86.avx512.psrli.q.512
llvm.x86.avx512.psrli.w.512
llvm.x86.avx512.psrlv.d.512
llvm.x86.avx512.psrlv.q.512
llvm.x86.avx512.psrlv.w.128
llvm.x86.avx512.psrlv.w.256
llvm.x86.avx512.psrlv.w.512
llvm.x86.avx512.pternlog.d.128
llvm.x86.avx512.pternlog.d.256
llvm.x86.avx512.pternlog.d.512
llvm.x86.avx512.pternlog.q.128
llvm.x86.avx512.pternlog.q.256
llvm.x86.avx512.pternlog.q.512
llvm.x86.avx512.rcp14.pd.128
llvm.x86.avx512.rcp14.pd.256
llvm.x86.avx512.rcp14.pd.512
llvm.x86.avx512.rcp14.ps.128
llvm.x86.avx512.rcp14.ps.256
llvm.x86.avx512.rcp14.ps.512
llvm.x86.avx512.rcp14.sd
llvm.x86.avx512.rcp14.ss
llvm.x86.avx512.rcp28.pd
llvm.x86.avx512.rcp28.ps
llvm.x86.avx512.rcp28.sd
llvm.x86.avx512.rcp28.ss
llvm.x86.avx512.rsqrt14.pd.128
llvm.x86.avx512.rsqrt14.pd.256
llvm.x86.avx512.rsqrt14.pd.512
llvm.x86.avx512.rsqrt14.ps.128
llvm.x86.avx512.rsqrt14.ps.256
llvm.x86.avx512.rsqrt14.ps.512
llvm.x86.avx512.rsqrt14.sd
llvm.x86.avx512.rsqrt14.ss
llvm.x86.avx512.rsqrt28.pd
llvm.x86.avx512.rsqrt28.ps
llvm.x86.avx512.rsqrt28.sd
llvm.x86.avx512.rsqrt28.ss
llvm.x86.avx512.scatter.dpd.512
llvm.x86.avx512.scatter.dpi.512
llvm.x86.avx512.scatter.dpq.512
llvm.x86.avx512.scatter.dps.512
llvm.x86.avx512.scatter.qpd.512
llvm.x86.avx512.scatter.qpi.512
llvm.x86.avx512.scatter.qpq.512
llvm.x86.avx512.scatter.qps.512
llvm.x86.avx512.scatterdiv2.df
llvm.x86.avx512.scatterdiv2.di
llvm.x86.avx512.scatterdiv4.df
llvm.x86.avx512.scatterdiv4.di
llvm.x86.avx512.scatterdiv4.sf
llvm.x86.avx512.scatterdiv4.si
llvm.x86.avx512.scatterdiv8.sf
llvm.x86.avx512.scatterdiv8.si
llvm.x86.avx512.scatterpf.dpd.512
llvm.x86.avx512.scatterpf.dps.512
llvm.x86.avx512.scatterpf.qpd.512
llvm.x86.avx512.scatterpf.qps.512
llvm.x86.avx512.scattersiv2.df
llvm.x86.avx512.scattersiv2.di
llvm.x86.avx512.scattersiv4.df
llvm.x86.avx512.scattersiv4.di
llvm.x86.avx512.scattersiv4.sf
llvm.x86.avx512.scattersiv4.si
llvm.x86.avx512.scattersiv8.sf
llvm.x86.avx512.scattersiv8.si
llvm.x86.avx512.sitofp.round
llvm.x86.avx512.sqrt.pd.512
llvm.x86.avx512.sqrt.ps.512
llvm.x86.avx512.sub.pd.512
llvm.x86.avx512.sub.ps.512
llvm.x86.avx512.uitofp.round
llvm.x86.avx512.vcomi.sd
llvm.x86.avx512.vcomi.ss
llvm.x86.avx512.vcvtsd2si32
llvm.x86.avx512.vcvtsd2si64
llvm.x86.avx512.vcvtsd2usi32
llvm.x86.avx512.vcvtsd2usi64
llvm.x86.avx512.vcvtss2si32
llvm.x86.avx512.vcvtss2si64
llvm.x86.avx512.vcvtss2usi32
llvm.x86.avx512.vcvtss2usi64
llvm.x86.avx512.vfmadd.f32
llvm.x86.avx512.vfmadd.f64
llvm.x86.avx512.vfmadd.pd.512
llvm.x86.avx512.vfmadd.ps.512
llvm.x86.avx512.vfmaddsub.pd.512
llvm.x86.avx512.vfmaddsub.ps.512
llvm.x86.avx512.vp2intersect.d.128
llvm.x86.avx512.vp2intersect.d.256
llvm.x86.avx512.vp2intersect.d.512
llvm.x86.avx512.vp2intersect.q.128
llvm.x86.avx512.vp2intersect.q.256
llvm.x86.avx512.vp2intersect.q.512
llvm.x86.avx512.vpdpbusd.128
llvm.x86.avx512.vpdpbusd.256
llvm.x86.avx512.vpdpbusd.512
llvm.x86.avx512.vpdpbusds.128
llvm.x86.avx512.vpdpbusds.256
llvm.x86.avx512.vpdpbusds.512
llvm.x86.avx512.vpdpwssd.128
llvm.x86.avx512.vpdpwssd.256
llvm.x86.avx512.vpdpwssd.512
llvm.x86.avx512.vpdpwssds.128
llvm.x86.avx512.vpdpwssds.256
llvm.x86.avx512.vpdpwssds.512
llvm.x86.avx512.vpermi2var.d.128
llvm.x86.avx512.vpermi2var.d.256
llvm.x86.avx512.vpermi2var.d.512
llvm.x86.avx512.vpermi2var.hi.128
llvm.x86.avx512.vpermi2var.hi.256
llvm.x86.avx512.vpermi2var.hi.512
llvm.x86.avx512.vpermi2var.pd.128
llvm.x86.avx512.vpermi2var.pd.256
llvm.x86.avx512.vpermi2var.pd.512
llvm.x86.avx512.vpermi2var.ps.128
llvm.x86.avx512.vpermi2var.ps.256
llvm.x86.avx512.vpermi2var.ps.512
llvm.x86.avx512.vpermi2var.q.128
llvm.x86.avx512.vpermi2var.q.256
llvm.x86.avx512.vpermi2var.q.512
llvm.x86.avx512.vpermi2var.qi.128
llvm.x86.avx512.vpermi2var.qi.256
llvm.x86.avx512.vpermi2var.qi.512
llvm.x86.avx512.vpermilvar.pd.512
llvm.x86.avx512.vpermilvar.ps.512
llvm.x86.avx512.vpmadd52h.uq.128
llvm.x86.avx512.vpmadd52h.uq.256
llvm.x86.avx512.vpmadd52h.uq.512
llvm.x86.avx512.vpmadd52l.uq.128
llvm.x86.avx512.vpmadd52l.uq.256
llvm.x86.avx512.vpmadd52l.uq.512
llvm.x86.avx512.vpshufbitqmb.128
llvm.x86.avx512.vpshufbitqmb.256
llvm.x86.avx512.vpshufbitqmb.512
llvm.x86.avx512bf16.cvtne2ps2bf16.128
llvm.x86.avx512bf16.cvtne2ps2bf16.256
llvm.x86.avx512bf16.cvtne2ps2bf16.512
llvm.x86.avx512bf16.cvtneps2bf16.256
llvm.x86.avx512bf16.cvtneps2bf16.512
llvm.x86.avx512bf16.dpbf16ps.128
llvm.x86.avx512bf16.dpbf16ps.256
llvm.x86.avx512bf16.dpbf16ps.512
llvm.x86.avx512bf16.mask.cvtneps2bf16.128
llvm.x86.bmi.bextr.32
llvm.x86.bmi.bextr.64
llvm.x86.bmi.bzhi.32
llvm.x86.bmi.bzhi.64
llvm.x86.bmi.pdep.32
llvm.x86.bmi.pdep.64
llvm.x86.bmi.pext.32
llvm.x86.bmi.pext.64
llvm.x86.cldemote
llvm.x86.clflushopt
llvm.x86.clrssbsy
llvm.x86.clui
llvm.x86.clwb
llvm.x86.clzero
llvm.x86.directstore32
llvm.x86.directstore64
llvm.x86.encodekey128
llvm.x86.encodekey256
llvm.x86.enqcmd
llvm.x86.enqcmds
llvm.x86.flags.read.u32
llvm.x86.flags.read.u64
llvm.x86.flags.write.u32
llvm.x86.flags.write.u64
llvm.x86.fma.vfmaddsub.pd
llvm.x86.fma.vfmaddsub.pd.256
llvm.x86.fma.vfmaddsub.ps
llvm.x86.fma.vfmaddsub.ps.256
llvm.x86.fxrstor
llvm.x86.fxrstor64
llvm.x86.fxsave
llvm.x86.fxsave64
llvm.x86.incsspd
llvm.x86.incsspq
llvm.x86.int
llvm.x86.invpcid
llvm.x86.ldtilecfg
llvm.x86.llwpcb
llvm.x86.loadiwkey
llvm.x86.lwpins32
llvm.x86.lwpins64
llvm.x86.lwpval32
llvm.x86.lwpval64
llvm.x86.mmx.emms
llvm.x86.mmx.femms
llvm.x86.mmx.maskmovq
llvm.x86.mmx.movnt.dq
llvm.x86.mmx.packssdw
llvm.x86.mmx.packsswb
llvm.x86.mmx.packuswb
llvm.x86.mmx.padd.b
llvm.x86.mmx.padd.d
llvm.x86.mmx.padd.q
llvm.x86.mmx.padd.w
llvm.x86.mmx.padds.b
llvm.x86.mmx.padds.w
llvm.x86.mmx.paddus.b
llvm.x86.mmx.paddus.w
llvm.x86.mmx.palignr.b
llvm.x86.mmx.pand
llvm.x86.mmx.pandn
llvm.x86.mmx.pavg.b
llvm.x86.mmx.pavg.w
llvm.x86.mmx.pcmpeq.b
llvm.x86.mmx.pcmpeq.d
llvm.x86.mmx.pcmpeq.w
llvm.x86.mmx.pcmpgt.b
llvm.x86.mmx.pcmpgt.d
llvm.x86.mmx.pcmpgt.w
llvm.x86.mmx.pextr.w
llvm.x86.mmx.pinsr.w
llvm.x86.mmx.pmadd.wd
llvm.x86.mmx.pmaxs.w
llvm.x86.mmx.pmaxu.b
llvm.x86.mmx.pmins.w
llvm.x86.mmx.pminu.b
llvm.x86.mmx.pmovmskb
llvm.x86.mmx.pmulh.w
llvm.x86.mmx.pmulhu.w
llvm.x86.mmx.pmull.w
llvm.x86.mmx.pmulu.dq
llvm.x86.mmx.por
llvm.x86.mmx.psad.bw
llvm.x86.mmx.psll.d
llvm.x86.mmx.psll.q
llvm.x86.mmx.psll.w
llvm.x86.mmx.pslli.d
llvm.x86.mmx.pslli.q
llvm.x86.mmx.pslli.w
llvm.x86.mmx.psra.d
llvm.x86.mmx.psra.w
llvm.x86.mmx.psrai.d
llvm.x86.mmx.psrai.w
llvm.x86.mmx.psrl.d
llvm.x86.mmx.psrl.q
llvm.x86.mmx.psrl.w
llvm.x86.mmx.psrli.d
llvm.x86.mmx.psrli.q
llvm.x86.mmx.psrli.w
llvm.x86.mmx.psub.b
llvm.x86.mmx.psub.d
llvm.x86.mmx.psub.q
llvm.x86.mmx.psub.w
llvm.x86.mmx.psubs.b
llvm.x86.mmx.psubs.w
llvm.x86.mmx.psubus.b
llvm.x86.mmx.psubus.w
llvm.x86.mmx.punpckhbw
llvm.x86.mmx.punpckhdq
llvm.x86.mmx.punpckhwd
llvm.x86.mmx.punpcklbw
llvm.x86.mmx.punpckldq
llvm.x86.mmx.punpcklwd
llvm.x86.mmx.pxor
llvm.x86.monitorx
llvm.x86.movdir64b
llvm.x86.mwaitx
llvm.x86.pclmulqdq
llvm.x86.pclmulqdq.256
llvm.x86.pclmulqdq.512
llvm.x86.ptwrite32
llvm.x86.ptwrite64
llvm.x86.rdfsbase.32
llvm.x86.rdfsbase.64
llvm.x86.rdgsbase.32
llvm.x86.rdgsbase.64
llvm.x86.rdpid
llvm.x86.rdpkru
llvm.x86.rdpmc
llvm.x86.rdrand.16
llvm.x86.rdrand.32
llvm.x86.rdrand.64
llvm.x86.rdseed.16
llvm.x86.rdseed.32
llvm.x86.rdseed.64
llvm.x86.rdsspd
llvm.x86.rdsspq
llvm.x86.rdtsc
llvm.x86.rdtscp
llvm.x86.rstorssp
llvm.x86.saveprevssp
llvm.x86.seh.ehguard
llvm.x86.seh.ehregnode
llvm.x86.seh.lsda
llvm.x86.senduipi
llvm.x86.serialize
llvm.x86.setssbsy
llvm.x86.sha1msg1
llvm.x86.sha1msg2
llvm.x86.sha1nexte
llvm.x86.sha1rnds4
llvm.x86.sha256msg1
llvm.x86.sha256msg2
llvm.x86.sha256rnds2
llvm.x86.slwpcb
llvm.x86.sse.cmp.ps
llvm.x86.sse.cmp.ss
llvm.x86.sse.comieq.ss
llvm.x86.sse.comige.ss
llvm.x86.sse.comigt.ss
llvm.x86.sse.comile.ss
llvm.x86.sse.comilt.ss
llvm.x86.sse.comineq.ss
llvm.x86.sse.cvtpd2pi
llvm.x86.sse.cvtpi2pd
llvm.x86.sse.cvtpi2ps
llvm.x86.sse.cvtps2pi
llvm.x86.sse.cvtss2si
llvm.x86.sse.cvtss2si64
llvm.x86.sse.cvttpd2pi
llvm.x86.sse.cvttps2pi
llvm.x86.sse.cvttss2si
llvm.x86.sse.cvttss2si64
llvm.x86.sse.ldmxcsr
llvm.x86.sse.max.ps
llvm.x86.sse.max.ss
llvm.x86.sse.min.ps
llvm.x86.sse.min.ss
llvm.x86.sse.movmsk.ps
llvm.x86.sse.pshuf.w
llvm.x86.sse.rcp.ps
llvm.x86.sse.rcp.ss
llvm.x86.sse.rsqrt.ps
llvm.x86.sse.rsqrt.ss
llvm.x86.sse.sfence
llvm.x86.sse.stmxcsr
llvm.x86.sse.ucomieq.ss
llvm.x86.sse.ucomige.ss
llvm.x86.sse.ucomigt.ss
llvm.x86.sse.ucomile.ss
llvm.x86.sse.ucomilt.ss
llvm.x86.sse.ucomineq.ss
llvm.x86.sse2.clflush
llvm.x86.sse2.cmp.pd
llvm.x86.sse2.cmp.sd
llvm.x86.sse2.comieq.sd
llvm.x86.sse2.comige.sd
llvm.x86.sse2.comigt.sd
llvm.x86.sse2.comile.sd
llvm.x86.sse2.comilt.sd
llvm.x86.sse2.comineq.sd
llvm.x86.sse2.cvtpd2dq
llvm.x86.sse2.cvtpd2ps
llvm.x86.sse2.cvtps2dq
llvm.x86.sse2.cvtsd2si
llvm.x86.sse2.cvtsd2si64
llvm.x86.sse2.cvtsd2ss
llvm.x86.sse2.cvttpd2dq
llvm.x86.sse2.cvttps2dq
llvm.x86.sse2.cvttsd2si
llvm.x86.sse2.cvttsd2si64
llvm.x86.sse2.lfence
llvm.x86.sse2.maskmov.dqu
llvm.x86.sse2.max.pd
llvm.x86.sse2.max.sd
llvm.x86.sse2.mfence
llvm.x86.sse2.min.pd
llvm.x86.sse2.min.sd
llvm.x86.sse2.movmsk.pd
llvm.x86.sse2.packssdw.128
llvm.x86.sse2.packsswb.128
llvm.x86.sse2.packuswb.128
llvm.x86.sse2.pause
llvm.x86.sse2.pavg.b
llvm.x86.sse2.pavg.w
llvm.x86.sse2.pmadd.wd
llvm.x86.sse2.pmovmskb.128
llvm.x86.sse2.pmulh.w
llvm.x86.sse2.pmulhu.w
llvm.x86.sse2.psad.bw
llvm.x86.sse2.psll.d
llvm.x86.sse2.psll.q
llvm.x86.sse2.psll.w
llvm.x86.sse2.pslli.d
llvm.x86.sse2.pslli.q
llvm.x86.sse2.pslli.w
llvm.x86.sse2.psra.d
llvm.x86.sse2.psra.w
llvm.x86.sse2.psrai.d
llvm.x86.sse2.psrai.w
llvm.x86.sse2.psrl.d
llvm.x86.sse2.psrl.q
llvm.x86.sse2.psrl.w
llvm.x86.sse2.psrli.d
llvm.x86.sse2.psrli.q
llvm.x86.sse2.psrli.w
llvm.x86.sse2.ucomieq.sd
llvm.x86.sse2.ucomige.sd
llvm.x86.sse2.ucomigt.sd
llvm.x86.sse2.ucomile.sd
llvm.x86.sse2.ucomilt.sd
llvm.x86.sse2.ucomineq.sd
llvm.x86.sse3.addsub.pd
llvm.x86.sse3.addsub.ps
llvm.x86.sse3.hadd.pd
llvm.x86.sse3.hadd.ps
llvm.x86.sse3.hsub.pd
llvm.x86.sse3.hsub.ps
llvm.x86.sse3.ldu.dq
llvm.x86.sse3.monitor
llvm.x86.sse3.mwait
llvm.x86.sse41.blendvpd
llvm.x86.sse41.blendvps
llvm.x86.sse41.dppd
llvm.x86.sse41.dpps
llvm.x86.sse41.insertps
llvm.x86.sse41.mpsadbw
llvm.x86.sse41.packusdw
llvm.x86.sse41.pblendvb
llvm.x86.sse41.phminposuw
llvm.x86.sse41.ptestc
llvm.x86.sse41.ptestnzc
llvm.x86.sse41.ptestz
llvm.x86.sse41.round.pd
llvm.x86.sse41.round.ps
llvm.x86.sse41.round.sd
llvm.x86.sse41.round.ss
llvm.x86.sse42.crc32.32.16
llvm.x86.sse42.crc32.32.32
llvm.x86.sse42.crc32.32.8
llvm.x86.sse42.crc32.64.64
llvm.x86.sse42.pcmpestri128
llvm.x86.sse42.pcmpestria128
llvm.x86.sse42.pcmpestric128
llvm.x86.sse42.pcmpestrio128
llvm.x86.sse42.pcmpestris128
llvm.x86.sse42.pcmpestriz128
llvm.x86.sse42.pcmpestrm128
llvm.x86.sse42.pcmpistri128
llvm.x86.sse42.pcmpistria128
llvm.x86.sse42.pcmpistric128
llvm.x86.sse42.pcmpistrio128
llvm.x86.sse42.pcmpistris128
llvm.x86.sse42.pcmpistriz128
llvm.x86.sse42.pcmpistrm128
llvm.x86.sse4a.extrq
llvm.x86.sse4a.extrqi
llvm.x86.sse4a.insertq
llvm.x86.sse4a.insertqi
llvm.x86.ssse3.pabs.b
llvm.x86.ssse3.pabs.d
llvm.x86.ssse3.pabs.w
llvm.x86.ssse3.phadd.d
llvm.x86.ssse3.phadd.d.128
llvm.x86.ssse3.phadd.sw
llvm.x86.ssse3.phadd.sw.128
llvm.x86.ssse3.phadd.w
llvm.x86.ssse3.phadd.w.128
llvm.x86.ssse3.phsub.d
llvm.x86.ssse3.phsub.d.128
llvm.x86.ssse3.phsub.sw
llvm.x86.ssse3.phsub.sw.128
llvm.x86.ssse3.phsub.w
llvm.x86.ssse3.phsub.w.128
llvm.x86.ssse3.pmadd.ub.sw
llvm.x86.ssse3.pmadd.ub.sw.128
llvm.x86.ssse3.pmul.hr.sw
llvm.x86.ssse3.pmul.hr.sw.128
llvm.x86.ssse3.pshuf.b
llvm.x86.ssse3.pshuf.b.128
llvm.x86.ssse3.psign.b
llvm.x86.ssse3.psign.b.128
llvm.x86.ssse3.psign.d
llvm.x86.ssse3.psign.d.128
llvm.x86.ssse3.psign.w
llvm.x86.ssse3.psign.w.128
llvm.x86.sttilecfg
llvm.x86.stui
llvm.x86.subborrow.32
llvm.x86.subborrow.64
llvm.x86.tbm.bextri.u32
llvm.x86.tbm.bextri.u64
llvm.x86.tdpbf16ps
llvm.x86.tdpbssd
llvm.x86.tdpbssd.internal
llvm.x86.tdpbsud
llvm.x86.tdpbusd
llvm.x86.tdpbuud
llvm.x86.testui
llvm.x86.tileloadd64
llvm.x86.tileloadd64.internal
llvm.x86.tileloaddt164
llvm.x86.tilerelease
llvm.x86.tilestored64
llvm.x86.tilestored64.internal
llvm.x86.tilezero
llvm.x86.tilezero.internal
llvm.x86.tpause
llvm.x86.umonitor
llvm.x86.umwait
llvm.x86.vcvtps2ph.128
llvm.x86.vcvtps2ph.256
llvm.x86.vgf2p8affineinvqb.128
llvm.x86.vgf2p8affineinvqb.256
llvm.x86.vgf2p8affineinvqb.512
llvm.x86.vgf2p8affineqb.128
llvm.x86.vgf2p8affineqb.256
llvm.x86.vgf2p8affineqb.512
llvm.x86.vgf2p8mulb.128
llvm.x86.vgf2p8mulb.256
llvm.x86.vgf2p8mulb.512
llvm.x86.wbinvd
llvm.x86.wbnoinvd
llvm.x86.wrfsbase.32
llvm.x86.wrfsbase.64
llvm.x86.wrgsbase.32
llvm.x86.wrgsbase.64
llvm.x86.wrpkru
llvm.x86.wrssd
llvm.x86.wrssq
llvm.x86.wrussd
llvm.x86.wrussq
llvm.x86.xabort
llvm.x86.xbegin
llvm.x86.xend
llvm.x86.xgetbv
llvm.x86.xop.vfrcz.pd
llvm.x86.xop.vfrcz.pd.256
llvm.x86.xop.vfrcz.ps
llvm.x86.xop.vfrcz.ps.256
llvm.x86.xop.vfrcz.sd
llvm.x86.xop.vfrcz.ss
llvm.x86.xop.vpermil2pd
llvm.x86.xop.vpermil2pd.256
llvm.x86.xop.vpermil2ps
llvm.x86.xop.vpermil2ps.256
llvm.x86.xop.vphaddbd
llvm.x86.xop.vphaddbq
llvm.x86.xop.vphaddbw
llvm.x86.xop.vphadddq
llvm.x86.xop.vphaddubd
llvm.x86.xop.vphaddubq
llvm.x86.xop.vphaddubw
llvm.x86.xop.vphaddudq
llvm.x86.xop.vphadduwd
llvm.x86.xop.vphadduwq
llvm.x86.xop.vphaddwd
llvm.x86.xop.vphaddwq
llvm.x86.xop.vphsubbw
llvm.x86.xop.vphsubdq
llvm.x86.xop.vphsubwd
llvm.x86.xop.vpmacsdd
llvm.x86.xop.vpmacsdqh
llvm.x86.xop.vpmacsdql
llvm.x86.xop.vpmacssdd
llvm.x86.xop.vpmacssdqh
llvm.x86.xop.vpmacssdql
llvm.x86.xop.vpmacsswd
llvm.x86.xop.vpmacssww
llvm.x86.xop.vpmacswd
llvm.x86.xop.vpmacsww
llvm.x86.xop.vpmadcsswd
llvm.x86.xop.vpmadcswd
llvm.x86.xop.vpperm
llvm.x86.xop.vpshab
llvm.x86.xop.vpshad
llvm.x86.xop.vpshaq
llvm.x86.xop.vpshaw
llvm.x86.xop.vpshlb
llvm.x86.xop.vpshld
llvm.x86.xop.vpshlq
llvm.x86.xop.vpshlw
llvm.x86.xresldtrk
llvm.x86.xrstor
llvm.x86.xrstor64
llvm.x86.xrstors
llvm.x86.xrstors64
llvm.x86.xsave
llvm.x86.xsave64
llvm.x86.xsavec
llvm.x86.xsavec64
llvm.x86.xsaveopt
llvm.x86.xsaveopt64
llvm.x86.xsaves
llvm.x86.xsaves64
llvm.x86.xsetbv
llvm.x86.xsusldtrk
llvm.x86.xtest
llvm.xcore.bitrev
llvm.xcore.checkevent
llvm.xcore.chkct
llvm.xcore.clre
llvm.xcore.clrpt
llvm.xcore.clrsr
llvm.xcore.crc32
llvm.xcore.crc8
llvm.xcore.edu
llvm.xcore.eeu
llvm.xcore.endin
llvm.xcore.freer
llvm.xcore.geted
llvm.xcore.getet
llvm.xcore.getid
llvm.xcore.getps
llvm.xcore.getr
llvm.xcore.getst
llvm.xcore.getts
llvm.xcore.in
llvm.xcore.inct
llvm.xcore.initcp
llvm.xcore.initdp
llvm.xcore.initlr
llvm.xcore.initpc
llvm.xcore.initsp
llvm.xcore.inshr
llvm.xcore.int
llvm.xcore.mjoin
llvm.xcore.msync
llvm.xcore.out
llvm.xcore.outct
llvm.xcore.outshr
llvm.xcore.outt
llvm.xcore.peek
llvm.xcore.setc
llvm.xcore.setclk
llvm.xcore.setd
llvm.xcore.setev
llvm.xcore.setps
llvm.xcore.setpsc
llvm.xcore.setpt
llvm.xcore.setrdy
llvm.xcore.setsr
llvm.xcore.settw
llvm.xcore.setv
llvm.xcore.sext
llvm.xcore.ssync
llvm.xcore.syncr
llvm.xcore.testct
llvm.xcore.testwct
llvm.xcore.waitevent
llvm.xcore.zext
Metadata
f128
value isn't a global
global isn't in section "llvm.ptrauth"
global doesn't have an initializer
global isn't a struct
global doesn't have type '{ i8*, i32, i64, i64 }'
key isn't a constant integer
address discriminator isn't a constant integer or expr
discriminator isn't a constant integer
<unknown>:
.splatinsert
.splat
 (function: 
Print Module IR
Print Function IR
marker for objc_retainAutoreleaseReturnValue
switch
indirectbr
invoke
resume
unreachable
cleanupret
catchret
catchpad
catchswitch
callbr
fneg
fmul
udiv
sdiv
urem
srem
frem
alloca
load
store
cmpxchg
atomicrmw
fence
getelementptr
zext
sext
fptrunc
fpext
fptoui
fptosi
uitofp
sitofp
inttoptr
ptrtoint
bitcast
addrspacecast
icmp
select
lshr
ashr
va_arg
extractelement
insertelement
shufflevector
extractvalue
insertvalue
landingpad
cleanuppad
freeze
<Invalid operator> 
both values to select must have same type
select values cannot have token type
vector select condition element type must be i1
selected values for vector select must be vectors
vector select requires selected vectors to have the same vector length as select condition
select condition must be i1 or <n x i1>
xchg
nand
umax
umin
fadd
<invalid operation>
unknown
mallocsize
malloc
malloccall
free
tbaa
prof
fpmath
range
tbaa.struct
invariant.load
alias.scope
noalias
nontemporal
llvm.mem.parallel_loop_access
nonnull
dereferenceable
dereferenceable_or_null
make.implicit
unpredictable
invariant.group
align
llvm.loop
section_prefix
absolute_symbol
associated
callees
irr_loop
llvm.access.group
callback
llvm.preserve.access.index
vcall_visibility
noundef
annotation
deopt
funclet
gc-transition
cfguardtarget
preallocated
gc-live
ptrauth
singlethread
error
warning
remark
note
debug-pass
Print PassManager debugging information
Disabled
disable debug output
Arguments
print pass arguments to pass to 'opt'
Structure
print pass structure before run()
Executions
print pass name before it is executed
Details
print pass details when it is executed
size-info
IRSizeChange
Pass
: IR instruction count changed from 
IRInstrsBefore
IRInstrsAfter
; Delta: 
DeltaInstrCount
Releasing pass '
Running pass '
 on module '
 on 
function
basic block
Pass '
' is not initialized.
Verify if there is a pass dependency cycle.
Required Passes:
Error: Required pass not found! Possible causes:
- Pass misconfiguration (e.g.: missing macros)
- Corruption of the global PassRegistry
*** IR Dump Before 
 ***
*** IR Dump After 
Pass Arguments: 
 -- '
' is not preserving '
 -*- '
' is the last user of following pass instances.
 Free these instances
Executing Pass '
Made Modification '
 Freeing Pass '
' on Function '
'...
' on Module '
' on Region '
' on Loop '
' on Call Graph Nodes '
Required
Preserved
Used
 Analyses:
 Uninitialized Pass
FunctionPass Manager
OptFunction
RunPass
FunctionIRSizeChange
: Function: 
OptModule
Module Pass Manager
ModulePass Manager
Function Pass Manager
function_section_prefix
__unnamed_
 /EXPORT:
 -export:
,DATA
,data
 /INCLUDE:
llvm.module.flags
PIE Level
CSProfileSummary
ProfileSummary
SemanticInterposition
ptrauth.abi-version
llvm.compiler.used
llvm.used
module-summary-index
ReadOnlyLiveGVars
Number of live global variables marked read only
WriteOnlyLiveGVars
Number of live global variables marked write only
propagate-attrs
Propagate attributes in index
import-constants-with-refs
Import constant global variables with references
digraph Summary {
  // Module: 
  subgraph cluster_
    style = filled;
    color = lightgrey;
    label = "
    node [style=filled,fillcolor=lightblue];
shape
record
style
dotted,filled
alias
Mrecord
variable
immutable
writeOnly
constant
dsoLocal
canAutoHide
preserved
fillcolor
dead
yellow
not eligible to import
    // Edges:
  // Cross-module edges:
 // 
, ffl: 
common
 [label="
"]; // defined externally
 [style=dotted]; // alias
 [style=dashed]; // ref
 [style=dashed,color=forestgreen]; // const-ref
 [style=dashed,color=violetred]; // writeOnly-ref
 // call (hotness : Unknown)
 [color=blue]; // call (hotness : Cold)
 // call (hotness : None)
 [color=brown]; // call (hotness : Hot)
 [style=bold,color=red]; // call (hotness : Critical)
 -> 
opt-bisect-limit
Maximum optimization to perform
NOT 
BISECT: 
running pass 
Unnamed pass: implement Pass::getPassName()
Pass::print not implemented for pass: '
module (
function (
Clearing all analysis results for: 
Invalidating analysis: 
time-passes
Time each pass, printing elapsed time for each on exit
time-passes-per-run
Time each pass run, printing elapsed time for each run on exit
{0} #{1}
... Pass execution timing report ...
print-before
Print IR before specified passes
print-after
Print IR after specified passes
print-before-all
Print IR before each pass
print-after-all
Print IR after each pass
print-module-scope
When printing IR for print-[before|after]{-all} always print a module IR
filter-print-funcs
function names
Only print IR for functions whose name match this for all print-[before|after][-all] options
safepoint-ir-verifier-print-only
DetailedSummary
InstrProf
CSInstrProf
SampleProfile
ProfileFormat
TotalCount
MaxCount
MaxInternalCount
MaxFunctionCount
NumCounts
NumFunctions
IsPartialProfile
PartialProfileRatio
statepoint-id
statepoint-num-patch-bytes
non-global-value-max-name-size
Maximum size for the name of non-global values.
ignore
enable-swifttailcc-musttail-check
Check that tail calls from swifttailcc functions to swifttailcc functions are marked musttail.
Base nodes must have at least two operands
Access tag nodes must have the number of operands that is a multiple of 3!
Struct tag nodes must have an odd number of operands!
Type size nodes must be constants!
Struct tag nodes have a string as their first operand
Incorrect field entry in struct type node!
Offset entries must be constants!
Bitwidth between the offsets and struct type entries must match
Offsets must be increasing!
Member size entries must be constants!
Could not find TBAA parent in struct type node
This instruction shall not have a TBAA access tag!
Old-style TBAA is no longer allowed, use struct-path TBAA instead
Access tag metadata must have either 4 or 5 operands
Struct tag metadata must have either 3 or 4 operands
Access size field must be a constant
Immutability tag on struct tag metadata must be a constant
Immutability part of the struct tag metadata must be either 0 or 1
Malformed struct tag metadata: base and access-type should be non-null and point to Metadata nodes
Access type node must be a valid scalar type
Offset must be constant integer
Cycle detected in struct path
Offset not zero at the point of scalar access
Access bit-width not the same as description bit-width
Did not see access type in access path!
Broken function found, compilation aborted!
Basic Block in function '
' does not have terminator!
Function context does not match Module context!
Functions may not have common linkage
# formal arguments must match # of arguments for function type!
Functions cannot return aggregate values!
Invalid struct return type!
Attribute after last parameter!
Attribute 'builtin' can only be applied to a callsite.
Calling convention parameter requires byval
Calling convention requires void return type
Calling convention does not allow sret
Calling convention disallows byval
Calling convention disallows preallocated
Calling convention disallows inalloca
Calling convention disallows stack byref
Calling convention does not support varargs or perfect forwarding!
Argument value does not match function argument type!
Function arguments must have first-class types!
Function takes metadata but isn't an intrinsic
Function takes token but isn't an intrinsic
Functions returns a token but isn't an intrinsic
Referencing personality function in another module!
unmaterialized function cannot have metadata
function declaration may only have a unique !dbg attachment
function declaration may not have a !prof attachment
Function declaration shouldn't have a personality routine
llvm intrinsics cannot be defined!
Entry block to function must not have predecessors!
blockaddress may not be used with the entry block!
function must have a single !dbg attachment
function !dbg attachment must be a subprogram
function definition may only have a distinct !dbg attachment
DISubprogram attached to more than one function
function must have a single !prof attachment
Invalid user of intrinsic instruction!
Global is external, but doesn't have external or weak linkage!
huge alignment values are unsupported
Only global variables can have appending linkage!
Only global arrays can have appending linkage!
Declaration may not be in a Comdat!
GlobalValue with DLLImport Storage is dso_local!
Global is marked as dllimport, but not external
GlobalValue with local linkage or non-default visibility must be dso_local!
Global is referenced by parentless instruction!
Global is referenced in a different module!
Global is used by function in a different module
; ModuleID = '
Attributes 'byval', 'inalloca', 'preallocated', 'byref', 'nest', 'sret', 'nocapture', 'nofree', 'returned', 'swiftself', 'swiftasync', and 'swifterror' do not apply to return values!
Attribute '
' does not apply to function returns
immarg attribute only applies to intrinsics
More than one parameter has attribute nest!
More than one parameter has attribute returned!
Incompatible argument and return types for 'returned' attribute
Cannot have multiple 'sret' parameters!
Attribute 'sret' is not on first or second parameter!
Cannot have multiple 'swiftself' parameters!
Cannot have multiple 'swiftasync' parameters!
Cannot have multiple 'swifterror' parameters!
inalloca isn't on the last parameter!
Attributes 'readnone and readonly' are incompatible!
Attributes 'readnone and writeonly' are incompatible!
Attributes 'readonly and writeonly' are incompatible!
Attributes 'readnone and inaccessiblemem_or_argmemonly' are incompatible!
Attributes 'readnone and inaccessiblememonly' are incompatible!
Attributes 'noinline and alwaysinline' are incompatible!
Attribute 'optnone' requires 'noinline'!
Attributes 'optsize and optnone' are incompatible!
Attributes 'minsize and optnone' are incompatible!
Attribute 'jumptable' requires 'unnamed_addr'
element size
number of elements
invalid value for 'frame-pointer' attribute: 
"patchable-function-prefix" takes an unsigned integer: 
"patchable-function-entry" takes an unsigned integer: 
Attribute 'immarg' is incompatible with other attributes
Attributes 'byval', 'inalloca', 'preallocated', 'inreg', 'nest', 'byref', and 'sret' are incompatible!
Attributes 'inalloca and readonly' are incompatible!
Attributes 'sret and returned' are incompatible!
Attributes 'zeroext and signext' are incompatible!
Wrong types for attribute: 
Attributes 'byval', 'byref', 'inalloca', and 'preallocated' do not support unsized types!
Attribute 'swifterror' only applies to parameters with pointer to pointer type!
Attribute 'byref' type does not match parameter!
Attribute 'byval' type does not match parameter!
Attribute 'preallocated' type does not match parameter!
Attribute 'byval' only applies to parameters with pointer type!
Attribute 'byref' only applies to parameters with pointer type!
Attribute 'swifterror' only applies to parameters with pointer type!
' should have an Argument
' only applies to functions!
' does not apply to functions!
'allocsize' 
 argument is out of bounds
 argument must refer to an integer parameter
swifterror value can only be loaded and stored from, or as a swifterror argument!
swifterror value should be the second operand when used by stores
swifterror value when used in a callsite should be marked with swifterror attribute
!prof annotations should have no less than 2 operands
first operand should not be null
expected string with name of the !prof annotation
function_entry_count
synthetic_function_entry_count
first operand should be 'function_entry_count' or 'synthetic_function_entry_count'
second operand should not be null
expected integer argument to function_entry_count
Invalid operand for global metadata!
DILocation not allowed within this metadata node
Expected no forward declarations!
All nodes should be resolved!
location requires a valid scope
inlined-at should be a location
scope points into the type hierarchy
invalid expression
missing variable
fragment is larger than or outside of variable
fragment covers entire variable
invalid tag
Subrange must contain count or upperBound
Subrange can have any one of count or upperBound
Count must either be a signed constant or a DIVariable
invalid subrange count
LowerBound must be signed constant or DIVariable or DIExpression
UpperBound must be signed constant or DIVariable or DIExpression
Stride must be signed constant or DIVariable or DIExpression
invalid pointer to member type
invalid scope
invalid base type
DWARF address space only applies to pointer or reference types
invalid file
invalid composite elements
invalid vtable holder
invalid reference flags
DIBlockByRefStruct on DICompositeType is no longer supported
invalid vector, expected one element of type subrange
class/union requires a filename
discriminator can only appear on variant part
dataLocation can only appear in array type
associated can only appear in array type
allocated can only appear in array type
rank can only appear in array type
invalid template params
invalid template parameter
invalid subroutine type ref
invalid checksum kind
invalid checksum length
invalid checksum
compile units must be distinct
invalid filename
invalid emission kind
invalid enum list
invalid enum type
invalid retained type list
invalid retained type
invalid global variable list
invalid global variable ref
invalid imported entity list
invalid imported entity ref
invalid macro list
invalid macro ref
inconsistent use of embedded source
line specified with no file
invalid subroutine type
invalid containing type
invalid subprogram declaration
invalid retained nodes list
invalid retained nodes, expected DILocalVariable or DILabel
subprogram definitions must be distinct
subprogram definitions must have a compile unit
invalid unit type
subprogram declarations must not have a compile unit
invalid thrown types list
invalid thrown type
DIFlagAllCallsDescribed must be attached to a definition
cannot have column info without line info
invalid local scope
invalid scope ref
anonymous module
invalid type ref
missing global variable type
invalid static data member declaration
local variable requires a valid scope
invalid type
label requires a valid scope
invalid scope for imported entity
invalid imported entity
invalid macinfo type
anonymous macro
invalid declaration
has conflicting flags
GenericSubrange must contain count or upperBound
GenericSubrange can have any one of count or upperBound
Count must be signed constant or DIVariable or DIExpression
GenericSubrange must contain lowerBound
GenericSubrange must contain stride
Expected valid value
Unexpected metadata round-trip through values
function-local metadata used outside a function
function-local metadata not in basic block
function-local metadata used in wrong function
DILocation's scope must be a DILocalScope
Failed to find DILocalScope
!dbg attachment points at wrong subprogram for function
Basic Block does not have terminator!
PHINode should have one entry for each predecessor of its parent basic block!
PHI node has multiple entries for the same basic block with different incoming values!
PHI node entries do not match predecessors!
Instruction has bogus parent pointer!
Operand is null
Found return instr that returns non-void in Function of void return type!
Function return type does not match operand type of return inst!
Terminator found in the middle of a basic block!
Instruction not embedded in basic block!
Only PHI nodes may reference their own value!
Instruction has a name, but provides a void value!
Instruction returns a non-scalar type!
Invalid use of metadata!
Instruction referencing instruction not embedded in a basic block!
Use of instruction is not an instruction!
Instruction has null operand!
Instruction operands must be first-class values!
Cannot take the address of an intrinsic!
Cannot invoke an intrinsic other than donothing, patchpoint, statepoint, coro_resume or coro_destroy
Referencing function in another module!
Referring to a basic block in another function!
Referring to an argument in another function!
Referencing global in another module!
Cannot take the address of an inline asm!
fpmath requires a floating point result!
fpmath takes one operand!
fpmath accuracy must have float type
fpmath accuracy not a positive number!
invalid fpmath accuracy!
Ranges are only for loads, calls and invokes!
nonnull applies only to pointer types
nonnull applies only to load instructions, use attributes for calls or invokes
align applies only to pointer types
align applies only to load instructions, use attributes for calls or invokes
align takes one operand!
align metadata value must be an i64!
align metadata value must be a power of 2!
alignment is larger that implementation defined limit
invalid !dbg metadata attachment
Instruction does not dominate all uses!
Invalid bitcast
inttoptr not supported for non-integral pointers
ptrtoint not supported for non-integral pointers
Unfinished range!
It should have at least one range!
The lower limit must be an integer!
The upper limit must be an integer!
Range types must match instruction type!
Range must not be empty!
Intervals are overlapping
Intervals are not in order
Intervals are contiguous
dereferenceable, dereferenceable_or_null apply only to pointer types
dereferenceable, dereferenceable_or_null apply only to load and inttoptr instructions, use attributes for calls or invokes
dereferenceable, dereferenceable_or_null take one operand!
dereferenceable, dereferenceable_or_null metadata value must be an i64!
Wrong number of InvokeInst branch_weights operands
!prof branch_weights are not allowed for this instruction
Wrong number of operands
!prof brunch_weights operand is not a const int
annotation must be a tuple
annotation must have at least one operand
operands must be strings
Entry values are only allowed in MIR
Branch condition is not 'i1' type!
Switch constants must all be same type as switch value!
Duplicate integer as switch case
Indirectbr operand must have pointer type!
Indirectbr destinations must all have pointer type!
The unwind destination does not have an exception handling instruction!
Called function must be a pointer!
Called function is not pointer to function type!
Called function is not the same type as the call!
Called function requires more parameters than were provided!
Incorrect number of arguments passed to called function!
Call parameter type does not match function signature!
speculatable attribute may not apply to call sites
preallocated as a call site attribute can only be on llvm.call.preallocated.arg
inalloca argument for call has mismatched alloca
swifterror argument for call has mismatched alloca
swifterror argument should come from an alloca or parameter
swifterror argument for call has mismatched parameter
immarg may not apply only to call sites
immarg operand has non-immediate parameter
preallocated operand either requires a preallocated bundle or the call to be musttail (but not both)
Attribute 'sret' cannot be used for vararg call arguments!
inalloca isn't on the last argument!
Function has metadata parameter but isn't an intrinsic
Function has token parameter but isn't an intrinsic
Return type cannot be token for indirect call!
Multiple deopt operand bundles
Multiple gc-transition operand bundles
Multiple funclet operand bundles
Expected exactly one funclet bundle operand
Funclet bundle operands should correspond to a FuncletPadInst
Multiple CFGuardTarget operand bundles
Expected exactly one cfguardtarget bundle operand
Multiple ptrauth operand bundles
Expected exactly two ptrauth bundle operands
Ptrauth bundle key operand must be an i32 constant
Ptrauth bundle discriminator operand must be an i64
Multiple preallocated operand bundles
Expected exactly one preallocated bundle operand
"preallocated" argument must be a token from llvm.call.preallocated.setup
Multiple gc-live operand bundles
inlinable function call in a function with debug info must have a !dbg location
Intrinsic functions should never be defined!
Intrinsic has incorrect return type!
Intrinsic has incorrect argument type!
Intrinsic was not defined with variable arguments!
Callsite was not defined with variable arguments!
Intrinsic has too few arguments!
Intrinsic name not mangled correctly for type arguments! Should be: 
tags must be valid attribute names
alignment assumptions should have 2 or 3 arguments
first argument should be a pointer
second argument should be an integer
third argument should be an integer if present
to many arguments
this attribute should have 2 arguments
the second argument should be a constant integral value
this attribute has no argument
this attribute should have one argument
info argument of llvm.coro.begin must refer to an initialized constant
info argument of llvm.coro.begin must refer to either a struct or an array
invalid llvm.dbg.declare intrinsic call 1
declare
label
alignment of arg 0 of memory intrinsic must be 0 or a power of 2
alignment of arg 1 of memory intrinsic must be 0 or a power of 2
element size of the element-wise atomic memory intrinsic must be a power of 2
incorrect alignment of the destination argument
incorrect alignment of the source argument
llvm.call.preallocated.setup argument must be a constant
Uses of llvm.call.preallocated.setup must be calls
llvm.call.preallocated.alloc arg index must be a constant
llvm.call.preallocated.alloc arg index must be between 0 and corresponding llvm.call.preallocated.setup's argument count
Can have at most one call corresponding to a llvm.call.preallocated.setup
cannot use preallocated intrinsics on a call without preallocated arguments
llvm.call.preallocated.setup arg size must be equal to number of preallocated arguments at call site
Use of llvm.call.preallocated.setup outside intrinsics must be in "preallocated" operand bundle
preallocated bundle must have token from corresponding llvm.call.preallocated.setup
llvm.call.preallocated.arg token argument must be a llvm.call.preallocated.setup
llvm.call.preallocated.arg must be called with a "preallocated" call site attribute
llvm.call.preallocated.teardown token argument must be a llvm.call.preallocated.setup
llvm.gcroot parameter #1 must be an alloca.
llvm.gcroot parameter #2 must be a constant.
llvm.gcroot parameter #1 must either be a pointer alloca, or argument #2 must be a non-null constant.
Enclosing function does not use GC.
llvm.init_trampoline parameter #2 must resolve to a function.
invalid arguments to llvm.prefetch
llvm.stackprotector parameter #2 must resolve to an alloca.
llvm.localescape used outside of entry block
multiple calls to llvm.localescape in one function
llvm.localescape only accepts static allocas
llvm.localrecover first argument must be function defined in this module
gc.statepoint support for inline assembly unimplemented
gc.result operand #1 must be from a statepoint
gc.result result type does not match wrapped callee
wrong number of arguments
gc.relocate must return a pointer or a vector of pointers
safepoints should have unique landingpads
safepoint block should be well formed
gc relocate should be linked to a statepoint
gc relocate is incorrectly tied to the statepoint
gc.relocate operand #2 must be integer offset
gc.relocate operand #3 must be integer offset
gc.relocate: statepoint base index out of bounds
gc.relocate: statepoint derived index out of bounds
gc.relocate: relocated value must be a gc pointer
gc.relocate: vector relocates to vector and pointer to pointer
gc.relocate: relocating a pointer shouldn't change its address space
eh.exceptionpointer argument must be a catchpad
get_active_lane_mask: must return a vector
get_active_lane_mask: element type is not i1
masked_load: must return a vector
masked_load: mask must be vector
masked_load: alignment must be a power of 2
masked_load: return must match pointer type
masked_load: pass through and data type must match
masked_load: vector mask must be same length as data
masked_store: mask must be vector
masked_store: alignment must be a power of 2
masked_store: storee must match pointer type
masked_store: vector mask must be same length as data
masked_gather: alignment must be 0 or a power of 2
masked_scatter: alignment must be 0 or a power of 2
experimental_guard cannot be invoked
experimental_guard must have exactly one "deopt" operand bundle
experimental_deoptimize cannot be invoked
experimental_deoptimize must have exactly one "deopt" operand bundle
experimental_deoptimize return type must match caller return type
calls to experimental_deoptimize must be followed by a return
calls to experimental_deoptimize must be followed by a return of the value computed by experimental_deoptimize
first operand of [us][add|sub|shl]_sat must be an int type or vector of ints
second operand of [us][add|sub|shl]_sat must be an int type or vector of ints
first operand of [us][mul|div]_fix[_sat] must be an int type or vector of ints
second operand of [us][mul|div]_fix[_sat] must be an int type or vector of ints
third argument of [us][mul|div]_fix[_sat] must fit within 32 bits
the scale of s[mul|div]_fix[_sat] must be less than the width of the operands
the scale of u[mul|div]_fix[_sat] must be less than or equal to the width of the operands
Intrinsic does not support vectors
bswap must be an even number of bytes
invariant_start parameter must be -1, 0 or a positive number
Result type must be an integer or floating-point type!
Vector element type mismatch of the result and first operand vector!
Vector element type mismatch of the result and second operand vector!
Result of a matrix operation does not fit in the returned vector!
Stride must be greater or equal than the number of rows!
experimental_vector_insert parameters must have the same element type.
experimental_vector_extract result must have the same element type as the input vector.
invalid arguments for constrained FP intrinsic
invalid predicate for constrained FP comparison intrinsic
Intrinsic first argument must be floating point
Intrinsic first argument and result disagree on vector use
Intrinsic result must be an integer
Intrinsic first argument and result vector lengths must be equal
Intrinsic first argument must be integer
Intrinsic result must be a floating point
Intrinsic first argument must be FP or FP vector
Intrinsic result must be FP or FP vector
Intrinsic first argument's type must be larger than result type
Intrinsic first argument's type must be smaller than result type
invalid exception behavior argument
invalid rounding mode argument
invalid llvm.dbg.
 intrinsic address/value
 intrinsic variable
 intrinsic expression
llvm.dbg.
 intrinsic requires a !dbg attachment
mismatched subprogram between llvm.dbg.
 variable and !dbg attachment
dbg intrinsic without variable
conflicting debug info for argument
 label and !dbg attachment
gc.statepoint must read and write all memory to preserve reordering restrictions required by safepoint semantics
gc.statepoint number of patchable bytes must be positive
gc.statepoint callee must be of function pointer type
gc.statepoint number of arguments to underlying call must be positive
gc.statepoint mismatch in number of vararg call args
gc.statepoint doesn't support wrapping non-void vararg functions yet
gc.statepoint mismatch in number of call args
unknown flag used in gc.statepoint flags argument
gc.statepoint call argument does not match wrapped function type
gc.statepoint number of transition arguments must be constant integer
gc.statepoint w/inline transition bundle is deprecated
gc.statepoint number of deoptimization arguments must be constant integer
gc.statepoint w/inline deopt operands is deprecated
gc.statepoint too many arguments
illegal use of statepoint token
gc.result or gc.relocate are the only value uses of a gc.statepoint
gc.result connected to wrong gc.statepoint
gc.relocate connected to wrong gc.statepoint
ResumeInst needs to be in a function with a personality.
The resume instruction should have a consistent result type inside a function.
CleanupReturnInst needs to be provided a CleanupPad
CleanupReturnInst must unwind to an EH block which is not a landingpad.
CatchReturnInst needs to be provided a CatchPad
CatchSwitchInst needs to be in a function with a personality.
CatchSwitchInst not the first non-PHI instruction in the block.
CatchSwitchInst has an invalid parent.
CatchSwitchInst must unwind to an EH block which is not a landingpad.
CatchSwitchInst cannot have empty handler list
CatchSwitchInst handlers must be catchpads
EH pad cannot be in entry block.
Block containing LandingPadInst must be jumped to only by the unwind edge of an invoke.
Block containg CatchPadInst must be jumped to only by its catchswitch.
Catchswitch cannot unwind to one of its catchpads
EH pad must be jumped to via an unwind edge
A cleanupret must exit its cleanup
EH pad cannot handle exceptions raised within it
A single unwind edge may only enter one EH pad
EH pad jumps through a cycle of pads
Callbr is currently only used for asm-goto!
Callbr successors must all have pointer type!
Using an unescaped label as a callbr argument!
Duplicate callbr destination!
Indirect label missing from arglist.
Unary operators must have same type foroperands and result!
FNeg operator only works with float types!
Both operands to a binary operator are not of the same type!
Integer arithmetic operators only work with integral types!
Integer arithmetic operators must have same type for operands and result!
Floating-point arithmetic operators only work with floating-point types!
Floating-point arithmetic operators must have same type for operands and result!
Logical operators only work with integral types!
Logical operators must have same type for operands and result!
Shifts only work with integral types!
Shift return type must be same as operands!
Allocation instruction pointer not in the stack address space!
Cannot allocate unsized type
Alloca array size must have integer type
Load operand must be a pointer.
loading unsized types is not allowed
Load cannot have Release ordering
Atomic load must specify explicit alignment
atomic load operand must have integer, pointer, or floating point type!
Non-atomic load cannot have SynchronizationScope specified
atomic memory access' size must be byte-sized
atomic memory access' operand must have a power-of-two size
Store operand must be a pointer.
Stored value type does not match pointer operand type!
storing unsized types is not allowed
Store cannot have Acquire ordering
Atomic store must specify explicit alignment
atomic store operand must have integer, pointer, or floating point type!
Non-atomic store cannot have SynchronizationScope specified
GEP base pointer is not a vector or a vector of pointers
GEP into unsized type!
GEP indexes must be integers
Invalid indices for GEP pointer type!
GEP is not of right type for indices!
Vector GEP result width doesn't match operand's
Invalid GEP index vector width
All GEP indices should be of integer type
GEP address space doesn't match type
fence instructions may only have acquire, release, acq_rel, or seq_cst ordering.
cmpxchg instructions must be atomic.
cmpxchg instructions cannot be unordered.
cmpxchg instructions failure argument shall be no stronger than the success argument
cmpxchg failure ordering cannot include release semantics
First cmpxchg operand must be a pointer.
cmpxchg operand must have integer or pointer type
Expected value type does not match pointer operand type!
atomicrmw instructions must be atomic.
atomicrmw instructions cannot be unordered.
First atomicrmw operand must be a pointer.
atomicrmw 
 operand must have integer or floating point type!
 operand must have floating point type!
 operand must have integer type!
Argument value type does not match pointer operand type!
Invalid binary operation!
Trunc only operates on integer
Trunc only produces integer
trunc source and destination must both be a vector or neither
DestTy too big for Trunc
ZExt only operates on integer
ZExt only produces an integer
zext source and destination must both be a vector or neither
Type too small for ZExt
SExt only operates on integer
SExt only produces an integer
sext source and destination must both be a vector or neither
Type too small for SExt
FPToUI source and dest must both be vector or scalar
FPToUI source must be FP or FP vector
FPToUI result must be integer or integer vector
FPToUI source and dest vector length mismatch
FPToSI source and dest must both be vector or scalar
FPToSI source must be FP or FP vector
FPToSI result must be integer or integer vector
FPToSI source and dest vector length mismatch
UIToFP source and dest must both be vector or scalar
UIToFP source must be integer or integer vector
UIToFP result must be FP or FP vector
UIToFP source and dest vector length mismatch
SIToFP source and dest must both be vector or scalar
SIToFP source must be integer or integer vector
SIToFP result must be FP or FP vector
SIToFP source and dest vector length mismatch
FPTrunc only operates on FP
FPTrunc only produces an FP
fptrunc source and destination must both be a vector or neither
DestTy too big for FPTrunc
FPExt only operates on FP
FPExt only produces an FP
fpext source and destination must both be a vector or neither
DestTy too small for FPExt
PtrToInt source must be pointer
PtrToInt result must be integral
PtrToInt type mismatch
PtrToInt Vector width mismatch
IntToPtr source must be an integral
IntToPtr result must be a pointer
IntToPtr type mismatch
IntToPtr Vector width mismatch
AddrSpaceCast source must be a pointer
AddrSpaceCast result must be a pointer
AddrSpaceCast must be between different address spaces
AddrSpaceCast vector pointer number of elements mismatch
CleanupPadInst needs to be in a function with a personality.
CleanupPadInst not the first non-PHI instruction in the block.
CleanupPadInst has an invalid parent.
FuncletPadInst must not be nested within itself
Bogus funclet pad use
Unwind edges out of a funclet pad must have the same unwind dest
Unwind edges out of a catch must have the same unwind dest as the parent catchswitch
CatchPadInst needs to be in a function with a personality.
CatchPadInst needs to be directly nested in a CatchSwitchInst.
CatchPadInst not the first non-PHI instruction in the block.
Both operands to ICmp instruction are not of the same type!
Invalid operand types for ICmp instruction
Invalid predicate in ICmp instruction!
Both operands to FCmp instruction are not of the same type!
Invalid operand types for FCmp instruction
Invalid predicate in FCmp instruction!
PHI nodes not grouped at top of basic block!
PHI nodes cannot have token type!
PHI node operands are not the same type as the result!
cannot use musttail call with inline asm
cannot guarantee tail call due to mismatched varargs
cannot guarantee tail call due to mismatched return types
cannot guarantee tail call due to mismatched calling conv
bitcast following musttail call must use the call
musttail call must precede a ret with an optional bitcast
musttail call result must be returned
musttail caller
musttail callee
cannot guarantee swifttailcc tail call for varargs function
cannot guarantee tail call due to mismatched parameter counts
cannot guarantee tail call due to mismatched parameter types
cannot guarantee tail call due to mismatched ABI impacting function attributes
inalloca attribute not allowed in swifttailcc 
inreg attribute not allowed in swifttailcc 
swifterror attribute not allowed in swifttailcc 
preallocated attribute not allowed in swifttailcc 
byref attribute not allowed in swifttailcc 
Invalid operands for select instruction!
Select values must have same type as select instruction!
User-defined operators should not live outside of a pass!
Invalid extractelement operands!
Invalid insertelement operands!
Invalid shufflevector operands!
Invalid ExtractValueInst operands!
Invalid InsertValueInst operands!
LandingPadInst needs at least one clause or to be a cleanup.
The landingpad instruction should have a consistent result type inside a function.
LandingPadInst needs to be in a function with a personality.
LandingPadInst not the first non-PHI instruction in the block.
Catch operand does not have pointer type!
Clause is neither catch nor filter!
Filter operand is not an array of constants!
EH pads can't handle each other's exceptions
all indices passed to llvm.localrecover must be less than the number of arguments passed to llvm.localescape in the parent function
Global variable initializer type does not match global variable type!
'common' global must have a zero initializer!
'common' global may not be marked constant!
'common' global may not be in a Comdat!
invalid linkage for intrinsic global variable
wrong type for intrinsic global variable
the third field of the element type is mandatory, specify i8* null to migrate from the obsoleted 2-field form
wrong initalizer for intrinsic global variable
invalid llvm.used member
members of llvm.used must be named
invalid llvm.ptrauth global: 
!dbg attachment of global variable must be a DIGlobalVariableExpression
Globals cannot contain scalable vectors
Alias should have private, internal, linkonce, weak, linkonce_odr, weak_odr, or external linkage!
Aliasee cannot be NULL!
Alias and aliasee types should match!
Aliasee should be either GlobalValue or ConstantExpr
Alias must point to a definition
Aliases cannot form a cycle
Alias cannot point to an interposable alias
llvm.dbg.cu
unrecognized named metadata node in the llvm.dbg namespace
invalid compile unit
comdat global value has private linkage
invalid requirement on flag, flag is not present in module
invalid requirement on flag, flag does not have the required value
incorrect number of operands in module flag
invalid behavior operand in module flag (expected constant integer)
invalid behavior operand in module flag (unexpected constant)
invalid ID operand in module flag (expected metadata string)
invalid value for 'max' module flag (expected constant integer)
invalid value for 'require' module flag (expected metadata pair)
invalid value for 'require' module flag (first value operand should be a string)
invalid value for 'append'-type module flag (expected a metadata node)
module flag identifiers must be unique (or of 'require' type)
wchar_size metadata requires constant integer argument
'Linker Options' named metadata no longer supported
SemanticInterposition metadata requires constant integer argument
CG Profile
expected a MDNode triple
expected an integer constant
expected a Function or null
incorrect number of operands in llvm.ident metadata
invalid value for llvm.ident metadata entry operand(the operand should be a string)
incorrect number of operands in llvm.commandline metadata
invalid value for llvm.commandline metadata entry operand(the operand should be a string)
DICompileUnit not listed in llvm.dbg.cu
All llvm.experimental.deoptimize declarations must have the same calling convention
Module Verifier
verify
in function 
<unknown>
Success
No coverage data found
Unsupported coverage format version
Truncated coverage data
Malformed coverage data
Failed to decompress coverage data (zlib)
`-arch` specifier is invalid or missing for universal binary
llvm.coveragemap
agg-antidep-debugdiv
Debug control for aggressive anti-dep breaker
agg-antidep-debugmod
llvm.eh.catch.all.value
Expand Atomic instructions
atomic-expand
expandAtomicOpToLibcall shouldn't fail for Load
expandAtomicOpToLibcall shouldn't fail for Store
success
newloaded
expandAtomicOpToLibcall shouldn't fail for CAS
atomicrmw.end
atomicrmw.start
tryagain
loaded
ValOperand_Shifted
AndOperand
AlignedAddr
PtrLSB
ShiftAmt
Mask
Inv_Mask
shifted
extracted
extended
unmasked
inserted
partword.cmpxchg.end
partword.cmpxchg.failure
partword.cmpxchg.loop
cmpxchg.end
cmpxchg.failure
cmpxchg.nostore
cmpxchg.success
cmpxchg.releasedload
cmpxchg.trystore
cmpxchg.fencedstore
cmpxchg.start
should_store
loaded.trystore
loaded.nostore
loaded.failure
loaded.exit
CmpVal_Shifted
NewVal_Shifted
partial-unrolling-threshold
Threshold for partial unrolling
branch-folder
NumDeadBlocks
Number of dead blocks removed
NumBranchOpts
Number of branches optimized
NumTailMerge
Number of block tails merged
NumHoist
Number of times common instructions are hoisted
Number of tail calls optimized
enable-tail-merge
tail-merge-threshold
Max number of predecessors to consider tail merging
tail-merge-size
Min number of instructions to consider tail merging
Control Flow Optimizer
branch-relaxation
Branch relaxation pass
BreakFalseDeps
break-false-deps
bbsections-cold-text-prefix
The text prefix to use for cold basic block clusters
.text.split.
Prepares for basic block sections, by splitting functions into clusters of basic blocks.
bbsections-prepare
Basic Block Sections Analysis
Cluster list does not follow a function name specifier.
Unsigned integer expected: '
Duplicate basic block id found '
Entry BB (0) does not begin a cluster.
Invalid profile 
unable to allocate function argument #
unable to allocate function return #
Insert symbols at valid longjmp targets for /guard:cf
CFGuardLongjmp
Control Flow Guard longjmp targets
$cfgsj_
verify-cfiinstrs
Verify Call Frame Information instructions
Check CFA info and insert CFI instructions if needed
cfi-instr-inserter
Found 
 in/out CFI information errors.
*** Inconsistent CFA register and/or offset between pred and succ ***
Pred: 
 in 
 outgoing CFA Reg:
 outgoing CFA Offset:
Succ: 
 incoming CFA Reg:
 incoming CFA Offset:
*** Inconsistent CSR Saved between pred and succ in function 
 ***
 outgoing CSR Saved: 
 incoming CSR Saved: 
codegenprepare
NumBlocksElim
Number of blocks eliminated
NumPHIsElim
Number of trivial PHIs eliminated
NumGEPsElim
Number of GEPs converted to casts
NumCmpUses
Number of uses of Cmp expressions replaced with uses of sunken Cmps
NumCastUses
Number of uses of Cast expressions replaced with uses of sunken Casts
NumMemoryInsts
Number of memory instructions whose address computations were sunk
NumMemoryInstsPhiCreated
Number of phis created when address computations were sunk to memory instructions
NumMemoryInstsSelectCreated
Number of select created when address computations were sunk to memory instructions
NumExtsMoved
Number of [s|z]ext instructions combined with loads
NumExtUses
Number of uses of [s|z]ext instructions optimized
NumAndsAdded
Number of and mask instructions added to form ext loads
NumAndUses
Number of uses of and mask instructions optimized
NumRetsDup
Number of return instructions duplicated
NumDbgValueMoved
Number of debug value instructions moved
NumSelectsExpanded
Number of selects turned into branches
NumStoreExtractExposed
Number of store(extractelement) exposed
disable-cgp-branch-opts
Disable branch optimizations in CodeGenPrepare
disable-cgp-gc-opts
Disable GC optimizations in CodeGenPrepare
disable-cgp-select2branch
Disable select to branch conversion.
addr-sink-using-gep
Address sinking in CGP using GEPs.
enable-andcmp-sinking
Enable sinkinig and/cmp into branches.
disable-cgp-store-extract
Disable store(extract) optimizations in CodeGenPrepare
stress-cgp-store-extract
Stress test store(extract) optimizations in CodeGenPrepare
disable-cgp-ext-ld-promotion
Disable ext(promotable(ld)) -> promoted(ext(ld)) optimization in CodeGenPrepare
stress-cgp-ext-ld-promotion
Stress test ext(promotable(ld)) -> promoted(ext(ld)) optimization in CodeGenPrepare
disable-preheader-prot
Disable protection against removing loop preheaders
profile-guided-section-prefix
Use profile info to add section prefix for hot/cold functions
profile-unknown-in-special-section
In profiling mode like sampleFDO, if a function doesn't have profile, we cannot tell the function is cold for sure because it may be a function newly added without ever being sampled. With the flag enabled, compiler can put such profile unknown functions into a special section, so runtime system can choose to handle it in a different way than .text section, to save RAM for example. 
cgp-freq-ratio-to-skip-merge
Skip merging empty blocks if (frequency of empty block) / (frequency of destination block) is greater than this ratio
force-split-store
Force store splitting no matter what the target query says.
cgp-type-promotion-merge
Enable merging of redundant sexts when one is dominating the other.
disable-complex-addr-modes
Disables combining addressing modes with different parts in optimizeMemoryInst.
addr-sink-new-phis
Allow creation of Phis in Address sinking.
addr-sink-new-select
Allow creation of selects in Address sinking.
addr-sink-combine-base-reg
Allow combining of BaseReg field in Address sinking.
addr-sink-combine-base-gv
Allow combining of BaseGV field in Address sinking.
addr-sink-combine-base-offs
Allow combining of BaseOffs field in Address sinking.
addr-sink-combine-scaled-reg
Allow combining of ScaledReg field in Address sinking.
cgp-split-large-offset-gep
Enable splitting large offset of GEP.
cgp-icmp-eq2icmp-st
Enable ICMP_EQ to ICMP_S(L|G)T conversion.
cgp-verify-bfi-updates
Enable BFI update verification for CodeGenPrepare.
cgp-optimize-phi-types
Enable converting phi types in CodeGenPrepare
Optimize for code generation
CodeGen Prepare
unlikely
.cond.split
promoted
math
sunkaddr
sunk_phi
cond.false
cond.end
cmpz
select.end
select.true.sink
select.false.sink
select.false
splitgep
march
Architecture to generate code for (see --version)
mcpu
Target a specific cpu type (-mcpu=help for details)
cpu-name
mattr
Target specific attributes (-mattr=help for details)
a1,+a2,-a3,...
relocation-model
Choose relocation model
static
Non-relocatable code
Fully relocatable, position independent code
dynamic-no-pic
Relocatable external references, non-relocatable code
ropi
Code and read-only data relocatable, accessed PC-relative
rwpi
Read-write data relocatable, accessed relative to static base
ropi-rwpi
Combination of ropi and rwpi
thread-model
Choose threading model
posix
POSIX thread model
single
Single thread model
code-model
Choose code model
tiny
Tiny code model
small
Small code model
Kernel code model
medium
Medium code model
large
Large code model
exception-model
exception model
default
default exception handling model
dwarf
DWARF-like CFI based exception handling
sjlj
SjLj exception handling
ARM EHABI exceptions
wineh
Windows exception model
wasm
WebAssembly exception handling
filetype
Choose a file type (not all types are supported by all targets):
Emit an assembly ('.s') file
Emit a native object ('.o') file
null
Emit nothing, for performance testing
frame-pointer
Specify frame pointer elimination optimization
Disable frame pointer elimination
non-leaf
Disable frame pointer elimination for non-leaf frame
Enable frame pointer elimination
enable-unsafe-fp-math
Enable optimizations that may decrease FP precision
enable-no-infs-fp-math
Enable FP math optimizations that assume no +-Infs
enable-no-nans-fp-math
Enable FP math optimizations that assume no NaNs
enable-no-signed-zeros-fp-math
Enable FP math optimizations that assume the sign of 0 is insignificant
enable-no-trapping-fp-math
Enable setting the FP exceptions build attribute not to use exceptions
IEEE 754 denormal numbers
the sign of a  flushed-to-zero number is preserved in the sign of 0
denormals are flushed to positive zero
Select which denormal numbers the code is permitted to require
denormal-fp-math-f32
Select which denormal numbers the code is permitted to require for float
enable-sign-dependent-rounding-fp-math
Force codegen to assume rounding mode can change dynamically
float-abi
Choose float ABI type
Target default float ABI type
soft
Soft float ABI (implied by -soft-float)
hard
Hard float ABI (uses FP registers)
fp-contract
Enable aggressive formation of fused FP ops
fast
Fuse FP ops whenever profitable
Only fuse 'blessed' FP ops.
Only fuse FP ops when the result won't be affected.
nozero-initialized-in-bss
Don't place zero-initialized symbols into bss section
vec-extabi
Enable the AIX Extended Altivec ABI.
tailcallopt
Turn fastcc calls into tail calls by (potentially) changing ABI.
disable-tail-calls
Never emit tail calls
stack-symbol-ordering
Order local stack symbols.
stack-alignment
Override default stack alignment
stackrealign
Force align the stack to the minimum alignment
trap-func
Emit a call to trap function rather than a trap instruction
use-ctors
Use .ctors instead of .init_array.
relax-elf-relocations
Emit GOTPCRELX/REX_GOTPCRELX instead of GOTPCREL on x86-64 ELF
data-sections
Emit data into separate sections
function-sections
Emit functions into separate sections
ignore-xcoff-visibility
Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
xcoff-traceback-table
Emit the XCOFF traceback table
basic-block-sections
Emit basic blocks into separate sections
all | <function list (file)> | labels | none
stack-protector-guard
Stack protector guard mode
stack-protector-guard-reg
Stack protector guard register
stack-protector-guard-offset
Stack protector guard offset
tls-size
Bit size of immediate TLS offsets
emulated-tls
Use emulated TLS model
unique-section-names
Give unique names to every section
unique-basic-block-section-names
Give unique names to every basic block section
meabi
Set EABI type (default depends on triple):
Triple default EABI version
EABI version 4
EABI version 5
EABI GNU
debugger-tune
Tune debug info for a particular debugger
lldb
SCE targets (e.g. PS4)
stack-size-section
Emit a section containing stack size metadata
addrsig
Emit an address-significance table
emit-call-site-info
Emit call site debug information, if debug information is enabled.
debug-entry-values
Enable debug info for the debug entry values.
pseudo-probe-for-profiling
Emit pseudo probes for AutoFDO
experimental-debug-variable-locations
Use experimental new value-tracking variable locations
split-machine-functions
Split out cold basic blocks from machine functions based on profile information
force-dwarf-frame-section
Always emit a debug frame section.
no-xray-index
Don't emit xray_fn_idx section
labels
Error loading basic block sections function list file: 
global
error illegal stack protector guard mode: 
unsafe-fp-math
no-infs-fp-math
no-nans-fp-math
no-signed-zeros-fp-math
trap-func-name
dead-mi-elimination
Remove dead machine instructions
Detect Dead Lanes
detect-dead-lanes
dfa-instr-limit
If present, stops packetizing after N instructions
dwarfehprepare
Prepare DWARF exceptions
Exception handling preparation
unwind_resume
exn.obj
early-ifcvt-limit
Maximum number of instructions per speculated block.
stress-early-ifcvt
Turn all knobs to 11
early-ifcvt
NumDiamondsSeen
Number of diamonds
NumDiamondsConv
Number of diamonds converted
NumTrianglesSeen
Number of triangles
NumTrianglesConv
Number of triangles converted
Early If Converter
Early If-Conversion
IfConversion
did not if-convert branch: the resulting critical path (
ResLength
) would extend the shorter leg's critical path (
MinCrit
) by more than the threshold of 
CritLimit
, which cannot be hidden by available ILP.
 cycle
 cycles
performing if-conversion on branch: the condition adds 
CondCycles
 to the critical path
, and the short leg adds another 
ShortCycles
, and the long leg adds another 
LongCycles
, each staying under the threshold of 
did not if-convert branch: the condition would add 
 exceeding the limit of 
, and the short leg would add another 
, and the long leg would add another 
Early If Predicator
early-if-predicator
Early If-predicator
view-edge-bundles
Pop up a window to show edge bundle graphs
digraph {
" [ shape=box ]
 -> "
" -> 
" -> "
" [ color=lightgray ]
EdgeBundles
Bundle Machine CFG Edges
edge-bundles
expandmemcmp
NumMemCmpCalls
Number of memcmp calls
NumMemCmpNotConstant
Number of memcmp calls without constant size
NumMemCmpGreaterThanMax
Number of memcmp calls with size greater than max size
NumMemCmpInlined
Number of inlined memcmp calls
memcmp-num-loads-per-block
The number of loads per basic block for inline expansion of memcmp that is only being compared against zero.
max-loads-per-memcmp
Set maximum number of loads used in expanded memcmp
max-loads-per-memcmp-opt-size
Set maximum number of loads used in expanded memcmp for -Os/Oz
Expand memcmp() to load/stores
endblock
phi.res
res_block
phi.src1
phi.src2
loadbb
Post-RA pseudo instruction expansion pass
postrapseudos
Expand reduction intrinsics
expand-reductions
__LLVM_FaultMaps
Insert fentry calls
fentry-insert
fentry-call
Finalize ISel and expand pseudo-instructions
finalize-isel
fixup-statepoint-caller-saved
NumSpilledRegisters
Number of spilled register
NumSpillSlotsAllocated
Number of spill slots allocated
NumSpillSlotsExtended
Number of spill slots extended
fixup-scs-extend-slot-size
Allow spill in spill slot of greater size than register size
fixup-allow-gcptr-in-csr
Allow passing GC Pointer arguments in callee saved registers
fixup-scs-enable-copy-propagation
Enable simple copy propagation during register reloading
fixup-max-csr-statepoints
Max number of statepoints allowed to pass GC Ptrs in registers
Fixup Statepoint Caller Saved
Contiguously Lay Out Funclets
funclet-layout
unsupported GC: 
 (did you remember to link and initialize the CodeGen library?)
Create Garbage Collector Module Metadata
collector-metadata
Print Garbage Collector Information
GC roots for 
[sp]
GC safe points for 
post-call
, live = {
GC Lowering
gc-lowering
Lower Garbage Collection Instructions
Analyze Machine Code For Garbage Collection
gc-analysis
enable-global-merge
global-merge-max-offset
Set maximum offset for global merge pass
global-merge-group-by-use
Improve global merge pass to look at uses
global-merge-ignore-single-use
Improve global merge pass to ignore globals only used alone
global-merge-on-const
Enable global merge pass on constants
global-merge-on-external
Enable global merge pass on external linkage
global-merge
NumMerged
Number of globals merged
Merge global variables
Merge internal globals
bss-section
data-section
relro-section
rodata-section
_MergedGlobals_
_MergedGlobals
force-hardware-loops
Force hardware loops intrinsics to be inserted
force-hardware-loop-phi
Force hardware loop counter to be updated through a phi
force-nested-hardware-loop
Force allowance of nested hardware loops
hardware-loop-decrement
Set the loop decrement value
hardware-loop-counter-bitwidth
Set the loop counter bitwidth
force-hardware-loop-guard
Force generation of loop guard intrinsic
hardware-loops
NumHWLoops
Number of loops converted to hardware loops
Hardware Loop Insertion
nested hardware-loops not supported
HWLoopNested
cannot analyze loop, irreducible control flow
HWLoopCannotAnalyze
it's not profitable to create a hardware-loop
HWLoopNotProfitable
hardware-loop not created: 
loop is not a candidate
HWLoopNoCandidate
could not safely create a loop count expression
HWLoopNotSafe
loopcnt
ifcvt-fn-start
ifcvt-fn-stop
ifcvt-limit
disable-ifcvt-simple
disable-ifcvt-simple-false
disable-ifcvt-triangle
disable-ifcvt-triangle-rev
disable-ifcvt-triangle-false
disable-ifcvt-triangle-false-rev
disable-ifcvt-diamond
disable-ifcvt-forked-diamond
ifcvt-branch-fold
if-converter
NumSimple
Number of simple if-conversions performed
NumSimpleFalse
Number of simple (F) if-conversions performed
NumTriangle
Number of triangle if-conversions performed
NumTriangleRev
Number of triangle (R) if-conversions performed
NumTriangleFalse
Number of triangle (F) if-conversions performed
NumTriangleFRev
Number of triangle (F/R) if-conversions performed
NumDiamonds
Number of diamond if-conversions performed
NumForkedDiamonds
Number of forked-diamond if-conversions performed
NumIfConvBBs
Number of if-converted blocks
NumDupBBs
Number of duplicated blocks
NumUnpred
Number of true blocks of diamonds unpredicated
If Converter
imp-null-check-page-size
The page size of the target in bytes
imp-null-max-insts-to-consider
The max number of instructions to consider hoisting loads over (the algorithm is quadratic over this number)
implicit-null-checks
NumImplicitNullChecks
Number of explicit null checks made implicit
Implicit null checks
Expand indirectbr instructions
indirectbr-expand
switch_bb
switch_value_phi
.switch_cast
NumSpilledRanges
Number of spilled live ranges
NumSnippets
Number of spilled snippets
Number of spills inserted
NumSpillsRemoved
Number of spills removed
Number of reloads inserted
NumReloadsRemoved
Number of reloads removed
NumFolded
Number of folded stack accesses
NumFoldedLoads
Number of folded loads
NumRemats
Number of rematerialized defs for spilling
disable-spill-hoist
Disable inline spill hoisting
restrict-statepoint-remat
Restrict remat for statepoint operands
lower-interleaved-accesses
Enable lowering interleaved accesses to intrinsics
Lower interleaved memory accesses to target specific intrinsics
interleaved-access
Interleaved Access Pass
interleaved-load-combine
NumInterleavedLoadCombine
Number of combined loads
disable-interleaved-load-combine
Disable combining of interleaved loads
Combine interleaved loads into wide loads and shufflevector instructions
Interleaved Load Combine Pass
interleaved.wide.ptrcast
interleaved.wide.load
interleaved.shuffle
Combined Interleaved Load
Load interleaved combined with factor 
Factor
Lazy Machine Block Frequency Analysis
lazy-machine-block-freq
live-debug-variables
Enable the live debug variables pass
livedebugvars
NumInsertedDebugValues
Number of DBG_VALUEs inserted
NumInsertedDebugLabels
Number of DBG_LABELs inserted
Debug Variable Analysis
use-segment-set-for-physregs
Use segment set for the computation of the live ranges of physregs.
********** INTERVALS **********
RegMasks:
********** MACHINEINSTRS **********
Live Interval Analysis
liveintervals
EMPTY
-phi
 weight:
lrshrink
Live Range Shrink Pass
Live Range Shrink
Live Register Matrix
liveregmatrix
 [Unknown]
Live Stack Slot Analysis
livestacks
regalloc=... not currently supported with -O0
Live Variable Analysis
livevars
trap-unreachable
Enable generating trap for unreachable
createMCCodeEmitter failed
createMCAsmBackend failed
GOFF MCObjectStreamer not implemented yet
localstackalloc
Local Stack Slot Allocation
Add __emutls_[vt]. variables for emultated TLS model
loweremutls
__emutls_t.
print-slotindexes
When printing machine IR, annotate instructions and blocks with SlotIndexes when available
.__part.
BB_END
Can't print out MachineBasicBlock because parent MachineFunction
 is null
; predecessors: 
successors: 
0x%08x
%.2f%%
liveins: 
; Irreducible loop header weight: 
<ir-block badref>
%ir-block.
address-taken
landing-pad
ehfunclet-entry
align 
bbsections 
Exception
Cold
%016llX
view-machine-block-freq-propagation-dags
Pop up a window to show a dag displaying how machine block frequencies propagate through the CFG.
view-block-layout-with-bfi
Pop up a window to show a dag displaying MBP layout and associated block frequencies of the CFG.
print-machine-bfi
Print the machine block frequency info.
MachineBlockFrequencyDAGS.
Machine Block Frequency Analysis
machine-block-freq
block-placement
NumCondBranches
Number of conditional branches
NumUncondBranches
Number of unconditional branches
CondBranchTakenFreq
Potential frequency of taking conditional branches
UncondBranchTakenFreq
Potential frequency of taking unconditional branches
align-all-blocks
Force the alignment of all blocks in the function in log2 format (e.g 4 means align on 16B boundaries).
align-all-nofallthru-blocks
Force the alignment of all blocks that have no fall-through predecessors (i.e. don't add nops that are executed). In log2 format (e.g 4 means align on 16B boundaries).
block-placement-exit-block-bias
Block frequency percentage a loop exit block needs over the original exit to be considered the new exit.
loop-to-cold-block-ratio
Outline loop blocks from loop chain if (frequency of loop) / (frequency of block) is greater than this ratio
force-loop-cold-block
Force outlining cold blocks from loops.
precise-rotation-cost
Model the cost of loop rotation more precisely by using profile data.
force-precise-rotation-cost
Force the use of precise cost loop rotation strategy.
misfetch-cost
Cost that models the probabilistic risk of an instruction misfetch due to a jump comparing to falling through, whose cost is zero.
jump-inst-cost
Cost of jump instructions.
tail-dup-placement
Perform tail duplication during placement. Creates more fallthrough opportunites in outline branches.
branch-fold-placement
Perform branch folding during placement. Reduces code size.
tail-dup-placement-threshold
Instruction cutoff for tail duplication during layout. Tail merging during layout is forced to have a threshold that won't conflict.
tail-dup-placement-aggressive-threshold
Instruction cutoff for aggressive tail duplication during layout. Used at -O3. Tail merging during layout is forced to have a threshold that won't conflict.
tail-dup-placement-penalty
Cost penalty for blocks that can avoid breaking CFG by copying. Copying can increase fallthrough, but it also increases icache pressure. This parameter controls the penalty to account for that. Percent as integer.
tail-dup-profile-percent-threshold
If profile count information is used in tail duplication cost model, the gained fall through number from tail duplication should be at least this percent of hot count.
triangle-chain-count
Number of triangle-shaped-CFG's that need to be in a row for the triangle tail duplication heuristic to kick in. 0 to disable.
Branch Probability Basic Block Placement
MBP.
Basic Block Placement Stats
block-placement-stats
static-likely-prob
branch probability threshold in percentageto be considered very likely
profile-likely-prob
branch probability threshold in percentage to be considered very likely when profile is available
Machine Branch Probability Analysis
machine-branch-prob
machine-combiner
NumInstCombined
Number of machineinst combined
machine-combiner-inc-threshold
Incremental depth computation will be used for basic blocks with more instructions.
machine-combiner-dump-subst-intrs
Dump all substituted intrs
machine-combiner-verify-pattern-order
Verify that the generated patterns are ordered by increasing latency
Machine InstCombiner
machine-cp
NumDeletes
Number of dead copies deleted
NumCopyForwards
Number of copy uses forwarded
NumCopyBackwardPropagated
Number of copy defs backward propagated
machine-cp-fwd
Controls which register COPYs are forwarded
Machine Copy Propagation Pass
machine-cse
Machine Common Subexpression Elimination
Machine Check Debug Module
mir-check-debugify
WARNING: Please run mir-debugify to generate llvm.mir.debugify metadata first.
WARNING: Instruction with empty DebugLoc in function 
WARNING: Missing line 
WARNING: Missing variable 
Machine IR debug info check: 
FAIL
PASS
Machine Debugify Module
mir-debugify
ModuleDebugify: 
llvm.mir.debugify
Machine Dominance Frontier Construction
machine-domfrontier
verify-machine-dom-info
Verify machine dominator info (time consuming)
MachineDominatorTree verification failed
MachineDominator Tree Construction
machinedomtree
Frame Objects:
  fi#
dead
variable sized
size=
, fixed
, at location [SP
align-all-functions
Force the alignment of all functions in log2 format (e.g. 4 means align on 16B boundaries).
split-stack
# Machine code for function 
Function Live Ins: 
# End machine code for function 
Jump Tables:
Constant Pool:
  cp#
, align=
FailedISel
IsSSA
Legalized
NoPHIs
NoVRegs
RegBankSelected
Selected
TracksLiveness
TiedOpsRewritten
%jump-table.
FunctionMISizeChange
MI Instruction count changed from 
MIInstrsBefore
MIInstrsAfter
Delta
Machine Function Printer
machineinstr-printer
MachineFunction Printer
mfs-psi-cutoff
Percentile profile summary cutoff used to determine cold blocks. Unused if set to zero.
mfs-count-threshold
Minimum number of times a block must be executed to be retained.
Split machine functions using profile information
machine-function-splitter
Machine Function Splitter Transformation
Unpack machine instruction bundles
unpack-mi-bundles
Finalize machine instruction bundles
finalize-mi-bundles
frame-setup 
frame-destroy 
nnan 
ninf 
nsz 
arcp 
contract 
afn 
reassoc 
nuw 
nsw 
exact 
nofpexcept 
nomerge 
UNKNOWN
 [sideeffect]
 [mayload]
 [maystore]
 [isconvergent]
 [alignstack]
 [attdialect]
 [inteldialect]
 pre-instr-symbol 
 post-instr-symbol 
 heap-alloc-marker 
 debug-instr-number 
 debug-location 
 line no:
 indirect
avoid-speculation
MachineLICM should avoid speculation
hoist-cheap-insts
MachineLICM should hoist even cheap instructions
sink-insts-to-avoid-spills
MachineLICM should sink instructions into loops to avoid register spills
hoist-const-stores
Hoist invariant stores
block-freq-ratio-threshold
Do not hoist instructions if targetblock is N times hotter than the source.
disable-hoisting-to-hotter-blocks
Disable hoisting instructions to hotter blocks
disable the feature
enable the feature when using profile data
enable the feature with/wo profile data
machinelicm
Number of machine instructions hoisted out of loops
NumLowRP
Number of instructions hoisted in low reg pressure situation
NumHighLatency
Number of high latency instructions hoisted
NumCSEed
Number of hoisted machine instructions CSEed
NumPostRAHoisted
Number of machine instructions hoisted out of loops post regalloc
NumStoreConst
Number of stores of const phys reg hoisted out of loops
NumNotHoistedDueToHotness
Number of instructions not hoisted due to block frequency
Machine Loop Invariant Code Motion
Early Machine Loop Invariant Code Motion
early-machinelicm
Machine Natural Loop Construction
machine-loops
Free MachineFunction
Machine Module Information
machinemoduleinfo
print-regmask-num-regs
Number of registers to limit to when printing regmask operands in IR dumps. unlimited = -1
%subreg.
target-flags(
<unknown>) 
<unknown target flag>
<unknown bitmask target flag>
<mcsymbol 
%fixed-stack.
%stack.
implicit-def 
implicit 
internal 
dead 
early-clobber 
renamable 
.subreg
(tied-def 
%const.
target-index(
<regmask
 more...
 ...
liveout(
<cfi directive>
intrinsic(@
intrinsic(
pred(
shufflemask(
volatile 
non-temporal 
dereferenceable 
invariant 
load 
store 
unknown-size
 into 
stack
jump-table
constant-pool
call-entry 
call-entry &
custom "
, !tbaa 
, !alias.scope 
, !noalias 
, !range 
, addrspace 
same_value 
remember_state 
restore_state 
def_cfa_register 
def_cfa_offset 
def_cfa 
rel_offset 
adjust_cfa_offset 
restore 
escape 
0x%02x
undefined 
window_save 
negate_ra_sign_state 
<unserializable cfi directive>
%dwarfreg.
<badreg>
syncscope("
machine-opt-remark-emitter
machine-outliner
NumOutlined
Number of candidates outlined
FunctionsCreated
Number of functions created
enable-linkonceodr-outlining
Enable the machine outliner on linkonceodr functions
machine-outliner-reruns
Number of times to rerun the outliner after the initial outline
Machine Outliner
Instruction mapping overflow!
NotOutliningCheaper
Did not outline 
 instructions
NumOccurrences
 locations.
 Bytes from outlining all occurrences (
OutliningCost
 >= Unoutlined instruction bytes (
NotOutliningCost
 (Also found at: 
OtherStartLoc
OUTLINED_FUNCTION_
OutlinedFunction
Saved 
OutliningBenefit
 bytes by 
outlining 
 instructions 
from 
 locations. 
(Found at: 
StartLoc
: MI instruction count changed from 
Machine Function Outliner
pipeliner
NumTrytoPipeline
Number of loops that we attempt to pipeline
NumPipelined
Number of loops software pipelined
NumNodeOrderIssues
Number of node order issues found
NumFailBranch
Pipeliner abort due to unknown branch
NumFailLoop
Pipeliner abort due to unsupported loop
NumFailPreheader
Pipeliner abort due to missing preheader
NumFailLargeMaxMII
Pipeliner abort due to MaxMII too large
NumFailZeroMII
Pipeliner abort due to zero MII
NumFailNoSchedule
Pipeliner abort due to no schedule found
NumFailZeroStage
Pipeliner abort due to zero stage
NumFailLargeMaxStage
Pipeliner abort due to too many stages
enable-pipeliner
Enable Software Pipelining
enable-pipeliner-opt-size
Enable SWP at Os.
pipeliner-max-mii
Size limit for the MII.
pipeliner-max-stages
Maximum stages allowed in the generated scheduled.
pipeliner-prune-deps
Prune dependences between unrelated Phi nodes.
pipeliner-prune-loop-carried
Prune loop carried order dependences.
pipeliner-ignore-recmii
Ignore RecMII
pipeliner-show-mask
pipeliner-dbg-res
pipeliner-annotate-for-testing
Instead of emitting the pipelined code, annotate instructions with the generated schedule for feeding into the -modulo-schedule-test pass
pipeliner-experimental-cg
Use the experimental peeling code generator for software pipelining
pipeliner-enable-copytophi
Enable CopyToPhi DAG Mutation
llvm.loop.pipeline.initiationinterval
llvm.loop.pipeline.disable
Modulo Software Pipelining
canPipelineLoop
Failed to pipeline loop
Not a single basic block: 
NumBlocks
Disabled by Pragma.
The branch can't be understood
The loop structure is not supported
No loop preheader found
schedule
Invalid Minimal Initiation Interval: 0
Minimal Initiation Interval too large: 
SwpMaxMii
Refer to -pipeliner-max-mii.
Unable to find schedule
No need to pipeline - no overlapped iterations in schedule.
Too many stages in schedule: 
numStages
SwpMaxStages
. Refer to -pipeliner-max-stages.
Pipelined succesfully!
Schedule found with Initiation Interval: 
, MaxStageCount: 
MaxStageCount
MachinePostDominatorTree verification failed
MachinePostDominator Tree Construction
machinepostdomtree
machine-region-info
enable-subreg-liveness
Enable subregister liveness tracking.
NumClustered
Number of load/store pairs clustered
misched-topdown
Force top-down list scheduling
misched-bottomup
Force bottom-up list scheduling
misched-dcpl
Print critical path length to stdout
verify-misched
Verify machine instrs before and after machine scheduling
misched-limit
Limit ready list to N instructions
misched-regpressure
Enable register pressure scheduling.
misched-cyclicpath
Enable cyclic critical path analysis.
misched-cluster
Enable memop clustering.
force-fast-cluster
Switch to fast cluster algorithm with the lost of some fusion opportunities
fast-cluster-threshold
The threshold for fast cluster
misched
Machine instruction scheduler to use
Use the target's default scheduler choice.
enable-misched
Enable the machine instruction scheduling pass.
enable-post-misched
Enable the post-ra machine instruction scheduling pass.
Critical Path(GS-RR ): 
converge
Standard converging scheduler.
Critical Path(PGS-RR ): 
ilpmax
Schedule bottom-up for max ILP
ilpmin
Schedule bottom-up for min ILP
ScheduleDAGMI::viewGraph is only available in debug builds on 
systems with Graphviz or gv!
Scheduling-Units Graph for 
Machine Instruction Scheduler
Before machine scheduling.
After machine scheduling.
:%bb. 
PostRA Machine Instruction Scheduler
postmisched
Before post machine scheduling.
After post machine scheduling.
TopQ
BotQ
machine-sink-split
Split critical edges during machine sinking
machine-sink-bfi
Use block frequency info to find successors to sink
machine-sink-split-probability-threshold
Percentage threshold for splitting single-instruction critical edge. If the branch threshold is higher than this threshold, we allow speculative execution of up to 1 instruction to avoid branching to splitted critical edge
machine-sink-load-instrs-threshold
Do not try to find alias store for a load if there is a in-path block whose instruction number is higher than this threshold.
machine-sink-load-blocks-threshold
Do not try to find alias store for a load if the block number in the straight line is higher than this threshold.
machine-sink
Number of machine instructions sunk
Number of critical edges split
NumCoalesces
Number of copies coalesced
NumPostRACopySink
Number of copies sunk after RA
PostRA Machine Sink
postra-machine-sink
mir-strip-debugify-only
Should mir-strip-debug only strip debug info from debugified modules by default
Machine Strip Debug Module
mir-strip-debug
llvm.debugify
Machine Trace Metrics
machine-trace-metrics
MinInstr
 machine code errors.
machineverifier
Bad instruction parent pointer
Instruction: 
Missing BundledPred flag, BundledSucc was set on predecessor
BundledPred flag is set, but BundledSucc not set on predecessor
No bundle header
Instruction has operand with wrong parent set
BundledSucc flag set on last instruction in block
Function has NoVRegs property but there are VReg operands
*** Bad machine code: 
- function:    
MBB has duplicate entries in its predecessor list.
MBB has duplicate entries in its successor list.
FrameSetup is after another FrameSetup
FrameDestroy is not after a FrameSetup
FrameDestroy <n> is after FrameSetup <m>
FrameDestroy <
> is after FrameSetup <
The exit stack state of a predecessor is inconsistent.
Predecessor 
 has exit state (
), while 
 has entry state (
The entry stack state of a successor is inconsistent.
Successor 
A return block ends with a FrameSetup.
A return block ends with a nonzero stack adjustment.
MBB has allocatable live-in, but isn't entry or landing-pad.
MBB has successor that isn't part of the function.
Inconsistent CFG
MBB is not in the predecessor list of the successor 
MBB has predecessor that isn't part of the function.
MBB is not in the successor list of the predecessor 
MBB has more than one landing pad successor
MBB exits via unconditional fall-through but ends with a barrier instruction!
MBB exits via unconditional fall-through but has a condition!
MBB exits via unconditional branch but doesn't contain any instructions!
MBB exits via unconditional branch but doesn't end with a barrier instruction!
MBB exits via unconditional branch but the branch isn't a terminator instruction!
MBB exits via conditional branch/fall-through but doesn't contain any instructions!
MBB exits via conditional branch/fall-through but ends with a barrier instruction!
MBB exits via conditional branch/fall-through but the branch isn't a terminator instruction!
MBB exits via conditional branch/branch but doesn't contain any instructions!
MBB exits via conditional branch/branch but doesn't end with a barrier instruction!
MBB exits via conditional branch/branch but the branch isn't a terminator instruction!
MBB exits via conditional branch/branch but there's no condition!
analyzeBranch returned invalid data!
MBB exits via jump or conditional branch, but its target isn't a CFG successor!
MBB exits via conditional branch, but its target isn't a CFG successor!
MBB conditionally falls through out of function!
MBB exits via conditional branch/fall-through but the CFG successors don't match the actual successors!
MBB has unexpected successors which are not branch targets, fallthrough, EHPads, or inlineasm_br targets.
MBB live-in list contains non-physical register
- p. register: 
- basic block: 
- instruction: 
Instruction index out of order
Last instruction was at 
Non-terminator instruction after the first terminator
First terminator was:
Too few operands
 operands expected, but 
 given.
Found PHI instruction with NoPHIs property set
Found PHI instruction after non-PHI
Unspillable Terminator does not define a reg
Unspillable Terminator expected to have at most one use!
Missing DebugLoc for debug instruction
Metadata instruction should not have a value tracking number
Missing mayLoad flag
Missing mayStore flag
Debug instruction has a slot index
Instruction inside bundle has a slot index
Missing slot index
Copy Instruction is illegal with mismatching types
Def = 
, Src = 
Copy Instruction is illegal with mismatching sizes
Def Size = 
, Src Size = 
meta operands to STATEPOINT not constant!
Too few operands on inline asm
Asm string must be an external symbol
Asm flags must be an immediate
Unknown asm flags
Missing operands in last group
Expected implicit register after groups
- operand 
:   
Unexpected generic instruction in a Selected function
Branch instruction is missing a basic block operand or isIndirectBranch property
generic instruction must use register operands
Type mismatch in generic instruction
Generic instruction is missing a virtual register type
Generic instruction cannot have physical register
Instruction cannot use a vector result type
G_CONSTANT operand must be cimm
inconsistent constant size
G_FCONSTANT operand must be fpimm
Generic memory instruction must access a pointer
Generic instruction accessing memory must have one mem operand
Generic extload must have a narrower memory type
load memory size cannot exceed result size
store memory size cannot exceed value size
Generic Instruction G_PHI has operands with incompatible/missing types
bitcast cannot convert between pointers and other types
bitcast sizes must match
bitcast must change the type
inttoptr result type must be a pointer
inttoptr source type must not be a pointer
ptrtoint source type must be a pointer
ptrtoint result type must not be a pointer
addrspacecast types must be pointers
addrspacecast must convert different address spaces
gep first operand must be a pointer
gep offset operand must not be a pointer
ptrmask result type must be a pointer
ptrmask mask type must be an integer
Generic extend/truncate can not operate on pointers
Generic extend has destination type no larger than source
Generic truncate has destination type no smaller than source
G_MERGE_VALUES cannot operate on vectors
G_MERGE_VALUES result size is inconsistent
G_MERGE_VALUES source types do not match
G_UNMERGE_VALUES destination types do not match
G_UNMERGE_VALUES source operand does not cover dest operands
G_BUILD_VECTOR must produce a vector from scalar operands
G_BUILD_VECTOR result element type must match source type
G_BUILD_VECTOR must have an operand for each elemement
G_BUILD_VECTOR source operand types are not homogeneous
G_BUILD_VECTOR_TRUNC must produce a vector from scalar operands
G_BUILD_VECTOR_TRUNC source operand types are not homogeneous
G_BUILD_VECTOR_TRUNC source operand types are not larger than dest elt type
G_CONCAT_VECTOR requires vector source and destination operands
G_CONCAT_VECTOR source operand types are not homogeneous
G_CONCAT_VECTOR num dest and source elements should match
Generic vector icmp/fcmp must preserve number of lanes
extract source must be a register
extract offset must be a constant
extract source must be larger than result
extract reads past end of register
insert source must be a register
insert offset must be a constant
inserted size must be smaller than total register
insert writes past end of register
G_JUMP_TABLE source operand must be a jump table index
G_JUMP_TABLE dest operand must have a pointer type
G_BRJT src operand 0 must be a pointer type
G_BRJT src operand 1 must be a jump table index
G_BRJT src operand 2 must be a scalar reg type
G_INTRINSIC first src operand must be an intrinsic ID
G_INTRINSIC used with intrinsic that accesses memory
G_INTRINSIC_W_SIDE_EFFECTS used with readnone intrinsic
G_SEXT_INREG expects an immediate operand #2
G_SEXT_INREG size must be >= 1
G_SEXT_INREG size must be less than source bit width
Incorrect mask operand type for G_SHUFFLE_VECTOR
Source operands must be the same type
G_SHUFFLE_VECTOR cannot change element type
Wrong result type for shufflemask
Out of bounds shuffle index
dst operand 0 must be a pointer type
src operand 1 must be a scalar reg type
src operand 2 must be an immediate type
memcpy/memmove must have 2 memory operands
wrong memory operand types
inconsistent memory operand sizes
memory instruction operand must be a pointer
inconsistent store address space
inconsistent load address space
memset must have 1 memory operand
memset memory operand must be a store
memset operand must be a pointer
inconsistent memset address space
Vector reduction requires a scalar destination type
Sequential FADD/FMUL vector reduction requires a scalar 1st operand
Sequential FADD/FMUL vector reduction must have a vector 2nd operand
Vector reduction requires vector source=
operand types must be all-vector or all-scalar
operand types must preserve number of vector elements
stack map constant to STATEPOINT not well formed!
Explicit definition must be a register
Explicit definition marked as use
Explicit definition marked as implicit
Explicit operand marked as def
Explicit operand marked as implicit
Expected a register operand.
Expected a non-register operand.
Tied use must be a register
Operand should be tied
Tied def doesn't match MCInstrDesc
Tied counterpart must be a register
Tied physical registers must match.
Explicit operand should not be tied
Extra explicit operand on non-variadic instruction
Must be tied to a register
Missing tie flags on tied operand
Inconsistent tie links
Explicit def tied to explicit use without tie constraint
Explicit def should be tied to implicit use
Two-address instruction operands must be identical
Illegal subregister index for physical register
Illegal physical register for instruction
 is not a 
 register.
isRenamable set on reserved register
Use-reg is not IsDebug in a DBG_VALUE
Generic virtual register use cannot be undef
Generic virtual register invalid in a Selected function
Generic virtual register must have a valid type
Generic virtual register must have a bank in a RegBankSelected function
Register bank is too small for virtual register
Register bank 
 too small(
) to fit 
-bits
Generic virtual register does not allow subregister index
Virtual register does not match instruction constraint
Expect register class 
 but got nothing
Invalid subregister index for virtual register
Register class 
 does not support subreg index 
Invalid register class for subregister index
 does not fully support subreg index 
No largest legal super class exists.
No matching super-reg register class.
Illegal virtual register for instruction
Expected a 
 register, but got a 
 register
PHI operand is not in the CFG
Missing fixed stack memoperand.
Instruction loads from dead spill slot
Live stack: 
Instruction stores to dead spill slot
Kill missing from LiveVariables
No live subrange at use
Virtual register has no live interval
Using an undefined physical register
Reading virtual register without a def
Using a killed virtual register
Multiple virtual register defs in SSA form
Virtual register has no Live interval
No live segment at use
Live range continues after kill flag
- liverange:   
- regunit:     
- v. register: 
- lanemask:    
- interval:    
- at:          
Inconsistent valno->def
No live segment at def
Live range continues after dead def flag
- ValNo:       
 (def 
Block ends before last instruction index
Block ends at 
 last instruction was at 
Virtual register killed in block, but needed live out.
Virtual register 
 is used after the block.
Virtual register defs don't dominate all uses.
Live in register not found to be live out from predecessor.
 not found to be live out from 
Call site info referencing instruction that is not call
Instruction has a duplicated value tracking number
Expected first PHI operand to be a register def
Unexpected flag on PHI operand
Expected first PHI operand to be a virtual register
Expected PHI operand to be a register
Expected PHI operand to be a basic block
PHI input is not a predecessor block
PHI operand is not live-out from predecessor
Missing PHI operand
 is a predecessor according to the CFG.
LiveVariables: Block missing from AliveBlocks
 must be live through the block.
LiveVariables: Block should not be in AliveBlocks
 is not needed live through the block.
Missing live interval for virtual register
 still has defs or uses
Lane masks of sub ranges overlap in live interval
Subrange lanemask is invalid
Subrange must not be empty
A Subrange is not covered by the main range
Multiple connected components in live interval
: valnos
Value not live at VNInfo def and not marked unused
Live segment at def has different VNInfo
Invalid VNInfo definition index
PHIDef VNInfo is not defined at MBB start
No instruction at VNInfo def index
Defining instruction does not modify register
Early clobber def must be at an early-clobber slot
Non-PHI, non-early clobber def must be at a register slot
Foreign valno in live segment
Live segment valno is marked unused
Bad start of live segment, no basic block
Live segment must begin at MBB entry or valno def
Bad end of live segment, no basic block
Live segment doesn't end at a valid instruction
Live segment ends at B slot of an instruction
Live segment ending at dead slot spans instructions
Live segment ending at early clobber slot must be redefined by an EC def in the same instruction
Instruction ending live segment on dead slot has no dead flag
Instruction ending live segment doesn't read the register
Register not marked live out of predecessor
 live into 
, not live before 
Different value live out of predecessor
Valno #
 live out of 
Valno #
- segment:     
Stage-
_Cycle-
Modulo Schedule test pass
modulo-schedule-test
--- ModuloScheduleTest running on BB#
Parsing post-instr symbol for 
  Stage=
, Cycle=
Implement the 'patchable-function' attribute
patchable-function
simplify-mir
Leave out unnecessary information when printing MIR
mir-debug-loc
Print MIR debug-locations
%ir.
 /* 
CustomRegMask(
alignment
exposesReturnsTwice
legalized
regBankSelected
failedISel
tracksRegLiveness
hasWinCFI
registers
liveins
calleeSavedRegisters
frameInfo
fixedStack
callSites
debugValueSubstitutions
constants
machineFunctionInfo
jumpTable
body
must be 0 or a power of two
preferred-register
virtual-reg
isFrameAddressTaken
isReturnAddressTaken
hasStackMap
hasPatchPoint
stackSize
offsetAdjustment
maxAlignment
adjustsStack
hasCalls
stackProtector
maxCallFrameSize
cvBytesOfCalleeSavedRegisters
hasOpaqueSPAdjustment
hasVAStart
hasMustTailInVarArgFunc
localFrameSize
savePoint
restorePoint
stack-id
isImmutable
isAliased
callee-saved-register
callee-saved-restored
debug-info-variable
debug-info-expression
debug-info-location
spill-slot
sgpr-spill
sve-vec
noalloc
local-offset
variable-sized
fwdArgRegs
srcinst
srcop
dstinst
dstop
isTargetSpecific
kind
entries
block-address
gp-rel64-block-address
gp-rel32-block-address
label-difference32
custom32
blocks
MIR Printing Pass
NumFused
Number of instr pairs fused
misched-fusion
Enable scheduling for macro fusion.
obfuscation-symbol-map
Specify the symbol_map output
filename.bcsymbolmap
obfuscate-preserve
<sym name>
could not open obfuscation symbol map: 
_CurrentVNode
_DynamicBufferIOBuffer
_EndVNode
_FreeHook
_VPBufferSize
_VPMaxNumValsPerSite
_VPMergeHook
____chkstk
____chkstk_ms
____gesf2
____lesf2
____ltsf2
____nesf2
___absvdi2
___absvsi2
___absvti2
___adddf3
___adddf3vfp
___addsf3
___addsf3vfp
___addvdi3
___addvsi3
___addvti3
___aeabi_drsub
___aeabi_frsub
___alloca
___ashldi3
___ashlti3
___ashrdi3
___ashrti3
___atomic_compare_exchange
___atomic_compare_exchange_1
___atomic_compare_exchange_16
___atomic_compare_exchange_2
___atomic_compare_exchange_4
___atomic_compare_exchange_8
___atomic_exchange
___atomic_exchange_1
___atomic_exchange_16
___atomic_exchange_2
___atomic_exchange_4
___atomic_exchange_8
___atomic_fetch_add_1
___atomic_fetch_add_16
___atomic_fetch_add_2
___atomic_fetch_add_4
___atomic_fetch_add_8
___atomic_fetch_and_1
___atomic_fetch_and_16
___atomic_fetch_and_2
___atomic_fetch_and_4
___atomic_fetch_and_8
___atomic_fetch_or_1
___atomic_fetch_or_16
___atomic_fetch_or_2
___atomic_fetch_or_4
___atomic_fetch_or_8
___atomic_fetch_sub_1
___atomic_fetch_sub_16
___atomic_fetch_sub_2
___atomic_fetch_sub_4
___atomic_fetch_sub_8
___atomic_fetch_xor_1
___atomic_fetch_xor_16
___atomic_fetch_xor_2
___atomic_fetch_xor_4
___atomic_fetch_xor_8
___atomic_load
___atomic_load_1
___atomic_load_16
___atomic_load_2
___atomic_load_4
___atomic_load_8
___atomic_store
___atomic_store_1
___atomic_store_16
___atomic_store_2
___atomic_store_4
___atomic_store_8
___bswapdi2
___bswapsi2
___chkstk
___chkstk_ms
___clzdi2
___clzsi2
___clzti2
___cmpdi2
___cmpti2
___cpu_indicator_init
___cpu_model
___ctzdi2
___ctzsi2
___ctzti2
___divdc3
___divdf3
___divdf3vfp
___divdi3
___divmodsi4
___divsc3
___divsf3
___divsf3vfp
___divsi3
___divtc3
___divti3
___divxc3
___emutls_get_address
___eprintf
___eqdf2
___eqdf2vfp
___eqsf2
___eqsf2vfp
___extendhfsf2
___extendsfdf2
___extendsfdf2vfp
___ffsdi2
___ffsti2
___fixdfdi
___fixdfsi
___fixdfsivfp
___fixdfti
___fixsfdi
___fixsfsi
___fixsfsivfp
___fixsfti
___fixunsdfdi
___fixunsdfsi
___fixunsdfsivfp
___fixunsdfti
___fixunssfdi
___fixunssfsi
___fixunssfsivfp
___fixunssfti
___fixunsxfdi
___fixunsxfsi
___fixunsxfti
___fixxfdi
___fixxfti
___floatdidf
___floatdisf
___floatdixf
___floatsidf
___floatsidfvfp
___floatsisf
___floatsisfvfp
___floattidf
___floattisf
___floattixf
___floatundidf
___floatundisf
___floatundixf
___floatunsidf
___floatunsisf
___floatunssidfvfp
___floatunssisfvfp
___floatuntidf
___floatuntisf
___floatuntixf
___gcov_flush
___gedf2
___gedf2vfp
___gesf2
___gesf2vfp
___gnu_f2h_ieee
___gnu_h2f_ieee
___gtdf2
___gtdf2vfp
___gtsf2
___gtsf2vfp
___ledf2
___ledf2vfp
___lesf2
___lesf2vfp
___llvm_get_function_addr
___llvm_profile_begin_counters
___llvm_profile_begin_data
___llvm_profile_begin_names
___llvm_profile_begin_vnodes
___llvm_profile_check_compatibility
___llvm_profile_dump
___llvm_profile_end_counters
___llvm_profile_end_data
___llvm_profile_end_names
___llvm_profile_end_vnodes
___llvm_profile_filename
___llvm_profile_get_data_size
___llvm_profile_get_magic
___llvm_profile_get_num_padding_bytes
___llvm_profile_get_path_prefix
___llvm_profile_get_size_for_buffer
___llvm_profile_get_size_for_buffer_internal
___llvm_profile_get_version
___llvm_profile_initialize_file
___llvm_profile_instrument_target
___llvm_profile_iterate_data
___llvm_profile_merge_from_buffer
___llvm_profile_raw_version
___llvm_profile_recursive_mkdir
___llvm_profile_register_write_file_atexit
___llvm_profile_reset_counters
___llvm_profile_runtime
___llvm_profile_set_filename
___llvm_profile_set_num_value_sites
___llvm_profile_write_buffer
___llvm_profile_write_buffer_internal
___llvm_profile_write_file
___lshrdi3
___lshrti3
___ltdf2
___ltdf2vfp
___ltsf2
___ltsf2vfp
___moddi3
___modsi3
___modti3
___muldc3
___muldf3
___muldf3vfp
___muldi3
___mulodi4
___mulosi4
___muloti4
___mulsc3
___mulsf3
___mulsf3vfp
___multc3
___multi3
___mulvdi3
___mulvsi3
___mulvti3
___mulxc3
___nedf2
___nedf2vfp
___negdf2
___negdi2
___negsf2
___negti2
___negvdi2
___negvsi2
___negvti2
___nesf2
___nesf2vfp
___paritydi2
___paritysi2
___parityti2
___popcountdi2
___popcountsi2
___popcountti2
___powidf2
___powisf2
___powixf2
___subdf3
___subdf3vfp
___subsf3
___subsf3vfp
___subvdi3
___subvsi3
___subvti3
___switch16
___switch32
___switch8
___switchu8
___sync_fetch_and_add_4
___sync_fetch_and_add_8
___sync_fetch_and_and_4
___sync_fetch_and_and_8
___sync_fetch_and_max_4
___sync_fetch_and_max_8
___sync_fetch_and_min_4
___sync_fetch_and_min_8
___sync_fetch_and_nand_4
___sync_fetch_and_nand_8
___sync_fetch_and_or_4
___sync_fetch_and_or_8
___sync_fetch_and_sub_4
___sync_fetch_and_sub_8
___sync_fetch_and_umax_4
___sync_fetch_and_umax_8
___sync_fetch_and_umin_4
___sync_fetch_and_umin_8
___sync_fetch_and_xor_4
___sync_fetch_and_xor_8
___truncdfhf2
___truncdfsf2
___truncdfsf2vfp
___truncsfhf2
___ucmpdi2
___ucmpti2
___udivdi3
___udivmoddi4
___udivmodsi4
___udivmodti4
___udivsi3
___udivti3
___umoddi3
___umodsi3
___umodti3
___unorddf2
___unorddf2vfp
___unordsf2
___unordsf2vfp
__alloca
_atomic_flag_clear
_atomic_flag_clear_explicit
_atomic_flag_test_and_set
_atomic_flag_test_and_set_explicit
_atomic_signal_fence
_atomic_thread_fence
_compilerrt_abort_impl
_getFirstValueProfRecord
_getValueProfDataSize
_getValueProfRecordHeaderSize
_getValueProfRecordNext
_getValueProfRecordNumValueData
_getValueProfRecordSize
_getValueProfRecordValueData
_llvm_delete_flush_function_list
_llvm_delete_writeout_function_list
_llvm_gcda_emit_arcs
_llvm_gcda_emit_function
_llvm_gcda_end_file
_llvm_gcda_increment_indirect_counter
_llvm_gcda_start_file
_llvm_gcda_summary_info
_llvm_gcov_init
_llvm_register_flush_function
_llvm_register_writeout_function
_llvm_writeout_files
_lprofApplyPathPrefix
_lprofBufferIOFlush
_lprofBufferIOWrite
_lprofBufferWriter
_lprofCreateBufferIO
_lprofCreateBufferIOInternal
_lprofCurFilename
_lprofDeleteBufferIO
_lprofFindFirstDirSeparator
_lprofFindLastDirSeparator
_lprofGetHostName
_lprofGetLoadModuleSignature
_lprofGetPathPrefix
_lprofGetVPDataReader
_lprofMergeValueProfData
_lprofOpenFileEx
_lprofProfileDumped
_lprofSetMaxValsPerSite
_lprofSetProfileDumped
_lprofSetupValueProfiler
_lprofValueProfNodes
_lprofWriteData
_lprofWriteDataImpl
_serializeValueProfDataFrom
_serializeValueProfRecordFrom
_objc_retain
_objc_release
_objc_autorelease
_objc_retainAutoreleasedReturnValue
_objc_retainBlock
_objc_autoreleaseReturnValue
_objc_autoreleasePoolPush
_objc_loadWeakRetained
_objc_loadWeak
_objc_destroyWeak
_objc_storeWeak
_objc_initWeak
_objc_moveWeak
_objc_copyWeak
_objc_retainedObject
_objc_unretainedObject
_objc_unretainedPointer
_objc_unsafeClaimAutoreleasedReturnValue
_objc_autoreleasePoolPop
_objc_retain_autorelease
_objc_retainAutorelease
_objc_retainAutoreleaseReturnValue
_objc_sync_enter
_objc_sync_exit
_objc_storeStrong
___gnat_eh_personality
___gxx_personality_v0
___gxx_personality_sj0
___gcc_personality_v0
___gcc_personality_sj0
___objc_personality_v0
__except_handler3
__except_handler4
___C_specific_handler
___CxxFrameHandler3
_ProcessCLRException
_rust_eh_personality
___stack_chk_fail
___stack_chk_guard
no-builtins
__obfs_tmp#
Obfuscate all strings in the module
obfuscate-module
opt-phis
Optimize machine instruction PHIs
<split-module>
Failed to read bitcode
aggressive-ext-opt
Aggressive extension optimization
disable-peephole
Disable the peephole optimizer
disable-adv-copy-opt
Disable advanced copy optimization
disable-non-allocatable-phys-copy-opt
Disable non-allocatable physical register copy optimization
rewrite-phi-limit
Limit the length of PHI chains to lookup
recurrence-chain-limit
Maximum length of recurrence chain when evaluating the benefit of commuting operands
peephole-opt
NumReuse
Number of extension results reused
NumCmps
Number of compares eliminated
NumImmFold
Number of move immediate folded
NumLoadFold
Number of loads folded
NumSelects
Number of selects optimized
NumUncoalescableCopies
Number of uncoalescable copies optimized
NumRewrittenCopies
Number of copies rewritten
NumNAPhysCopies
Number of non-allocatable physical copies removed
Peephole Optimizations
disable-phi-elim-edge-splitting
Disable critical edge splitting during PHI elimination
phi-elim-split-all-critical-edges
Split all critical edges during PHI elimination
no-phi-elim-live-out-early-exit
Do not use an early exit if isLiveOutPastPHIs returns true.
phi-node-elimination
NumLowered
Number of phis lowered
NumCriticalEdgesSplit
NumReused
Number of reused lowered phis
Eliminate PHI nodes for register allocation
post-RA-hazard-rec
Post RA hazard recognizer
NumNoops
Number of noops inserted
NumStalls
Number of pipeline stalls
NumFixedAnti
Number of fixed anti-dependencies
post-RA-scheduler
Enable scheduling after register allocation
break-anti-dependencies
Break post-RA scheduling anti-dependencies: "critical", "all", or "none"
postra-sched-debugdiv
Debug control MBBs that are scheduled
postra-sched-debugmod
Post RA top-down list latency scheduler
Pre-ISel Intrinsic Lowering
pre-isel-intrinsic-lowering
Process Implicit Definitions
processimpdefs
prologepilog
NumLeafFuncWithSpills
Number of leaf functions with CSRs
NumFuncSeen
Number of functions seen in PEI
warn-stack-size
Warn for stack size bigger than the given number
NumBytesStackSpace
Number of bytes used for stack in all functions
Prologue/Epilogue Insertion & Frame Finalization
stack size
StackSize
NumStackBytes
 stack bytes in function
Insert pseudo probe annotations for value profiling
pseudo-probe-inserter
Pseudo Probe Inserter
TargetCustom
FixedStack
Stack
JumpTable
ConstantPool
GlobalValueCallEntry
ExternalSymbolCallEntry
rdf-liveness-max-rec
Maximum recursion level
Phi-up-to-phi map with intervening defs:
phi 
 -> {
Real use map:
<noreg>
ReachingDefAnalysis
reaching-deps-analysis
NumNewQueued
Number of new live ranges queued
verify-regalloc
Verify during register allocation
Seed Live Regs
basic register allocator
Basic Register Allocator
regallocbasic
Number of stores added
Number of loads added
NumCoalesced
rafast-ignore-missing-defs
fast register allocator
Fast Register Allocator
regallocfast
inline assembly requires more registers than available
ran out of registers during register allocation
NumGlobalSplits
Number of split global live ranges
NumLocalSplits
Number of split local live ranges
NumEvicted
Number of interferences evicted
split-spill-mode
Spill mode for splitting live ranges
Optimize for size
speed
Optimize for speed
lcr-max-depth
Last chance recoloring max depth
lcr-max-interf
Last chance recoloring maximum number of considered interference at a time
exhaustive-register-search
Exhaustive Search for registers bypassing the depth and interference cutoffs of last chance recoloring
enable-local-reassign
Local reassignment can yield better allocation decisions, but may be compile time intensive
enable-deferred-spilling
Instead of spilling a variable right away, defer the actual code insertion to the end of the allocation. That way the allocator might still find a suitable coloring for this variable because of other evicted variables.
regalloc-csr-first-time-cost
Cost for first time use of callee-saved register.
consider-local-interval-cost
Consider the cost of local intervals created by a split candidate when choosing the best split candidate.
greedy
greedy register allocator
Greedy Register Allocator
Before greedy register allocator
LoopSpillReload
NumSpills
 spills 
NumFoldedSpills
 folded spills 
NumReloads
 reloads 
NumFoldedReloads
 folded reloads 
generated in loop
register allocation failed: maximum depth for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
register allocation failed: maximum interference for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
register allocation failed: maximum interference and depth for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
spill
Spiller
After spilling
After splitting live range around region
evict
Evict
local_split
Local Splitting
global_split
Global Splitting
After splitting live range around basic blocks
pbqp
PBQP register allocator
pbqp-coalescing
Attempt coalescing during PBQP register allocation.
PBQP Register Allocator
stress-regalloc
Limit all regclasses to N registers
numJoins
Number of interval joins performed
numCrossRCs
Number of cross class joins performed
numCommutes
Number of instruction commuting performed
numExtends
Number of copies extended
NumReMats
Number of instructions re-materialized
NumInflated
Number of register classes inflated
NumLaneConflicts
Number of dead lane conflicts tested
NumLaneResolves
Number of dead lane conflicts resolved
NumShrinkToUses
Number of shrinkToUses called
join-liveintervals
Coalesce copies (default=true)
terminal-rule
Apply the terminal rule
join-splitedges
Coalesce copies on split edges (default=subtarget)
join-globalcopies
Coalesce copies that span blocks (default=subtarget)
verify-coalescing
Verify machine instrs before and after register coalescing
late-remat-update-threshold
During rematerialization for a copy, if the def instruction has many other copy uses to be rematerialized, delay the multiple separate live interval update work and do them all at once after all those rematerialization are done. It will save a lot of repeated work. 
large-interval-size-threshold
If the valnos size of an interval is larger than the threshold, it is regarded as a large interval. 
large-interval-freq-threshold
For a large interval, if it is coalesed with other live intervals many times more than the threshold, stop its coalescing to control the compile time. 
Simple Register Coalescing
simple-register-coalescing
Before register coalescing
After register coalescing
Error while trying to spill 
 from class 
: Cannot scavenge register without an emergency spill slot!
Incomplete scavenging after 2nd pass
Rename Independent Subregisters
rename-independent-subregs
Rename Disconnected Subregister Components
mir-vreg-namer-use-stable-hash
Use Stable Hashing for MIR VReg Renaming
Rename Register Operands
mir-namer
Rename virtual register operands
canon-nth-function
Function number to canonicalize.
Rename Register Operands Canonically
mir-canonicalizer
Rename register operands in a canonical ordering.
print-regusage
print register usage details collected for analysis.
Clobbered Registers: 
Register Usage Information Storage
reg-usage-info
Register Usage Information Collector
RegUsageInfoCollector
Register Usage Information Collector Pass
Register Usage Information Propagation
reg-usage-propagation
ResetMachineFunction
Instruction selection failed
safe-stack
Total number of functions
NumUnsafeStackFunctions
Number of functions with unsafe stack
NumUnsafeStackRestorePointsFunctions
Number of functions that use setjmp or exceptions
NumAllocas
Total number of allocas
NumUnsafeStaticAllocas
Number of unsafe static allocas
NumUnsafeDynamicAllocas
Number of unsafe dynamic allocas
NumUnsafeByValArguments
Number of unsafe byval arguments
NumUnsafeStackRestorePoints
Number of setjmps and landingpads
safestack-use-pointer-address
safe-stack-coloring
enable safe stack coloring
Safe Stack instrumentation pass
TargetLowering instance is required
unsafe_stack_ptr
gcroot intrinsic not compatible with safestack attribute
.unsafe-byval
.unsafe
unsafe_stack_static_top
unsafe_stack_dynamic_ptr
safe-stack-layout
enable safe stack layout
enable-aa-sched-mi
Enable use of AA during MI DAG construction
use-tbaa-in-sched-mi
Enable use of TBAA during MI DAG construction
dag-maps-huge-region
The limit to use while constructing the DAG prior to scheduling, at which point a trade-off is made to avoid excessive compile time.
dag-maps-reduction-size
A huge scheduling region will have maps reduced by this many nodes at a time. Defaults to HugeRegion / 2.
<entry>
<exit>
dag.
ScheduleDAG::viewGraph is only available in debug builds on 
Shadow Stack GC Lowering
shadow-stack-gc-lowering
gc_map
gc_stackentry
llvm_gc_root_chain
gc_frame
gc_currhead
gc_frame.map
gc_root
gc_frame.next
gc_newhead
gc_cleanup
gc_savedhead
gc_map.
__gc_
gc_stackentry.
shrink-wrap
NumFunc
Number of functions
NumCandidates
Number of shrink-wrapping candidates
NumCandidatesDropped
Number of shrink-wrapping candidates dropped because of frequency
enable-shrink-wrap
enable the shrink-wrapping pass
Shrink Wrap Pass
Shrink Wrapping analysis
UnsupportedIrreducibleCFG
Irreducible CFGs are not supported yet.
UnsupportedEHFunclets
EH Funclets are not supported yet.
sjljehprepare
Prepare SjLj exceptions
SJLJ Exception Handling preparation
_Unwind_SjLj_Register
_Unwind_SjLj_Unregister
jbuf_gep
jbuf_fp_gep
jbuf_sp_gep
.tmp
fn_context
exception_gep
exn_val
exn_selector_gep
exn_selector_val
pers_fn_gep
lsda_addr
lpad.val
call_site
slotindexes
Berd
Slot index numbering
Spill Code Placement Analysis
spill-code-placement
Impossible to implement partial COPY
no-stack-coloring
Disable stack coloring
protect-from-escaped-allocas
Do not optimize lifetime zones that are broken
stackcoloring-lifetime-start-on-first-use
Treat stack lifetimes as starting on first use, not on START marker.
stack-coloring
NumMarkerSeen
Number of lifetime markers found.
StackSpaceSaved
Number of bytes saved due to merging slots.
StackSlotMerged
Number of stack slot merged.
EscapedAllocas
Number of allocas that escaped the lifetime region
Merge disjoint stack slots
enable-patchpoint-liveness
Enable PatchPoint Liveness Analysis Pass
stackmaps
NumStackMapFuncVisited
Number of functions visited
NumStackMapFuncSkipped
Number of functions skipped
NumBBsVisited
Number of basic blocks visited
NumBBsHaveNoStackmap
Number of basic blocks with no stackmap
NumStackMaps
Number of StackMaps visited
StackMap Liveness Analysis
stackmap-liveness
stackmap-version
Specify the stackmap encoding version (default = 3)
__LLVM_StackMaps
stack-protector
NumFunProtected
Number of functions protected
NumAddrTaken
Number of local variables that have their address taken.
enable-selectiondag-sp
stack-protector-buffer-size
Guard
SP_return
CallStackCheckFailBlk
__stack_smash_handler
Insert stack protectors
StackGuardSlot
StackGuard
StackProtectorRequested
Stack protection applied to function 
 due to a function attribute or command-line switch
StackProtectorAllocaOrArray
 due to a call to alloca or use of a variable length array
StackProtectorBuffer
 due to a stack allocated buffer or struct containing a buffer
StackProtectorAddressTaken
 due to the address of a local variable being taken
no-stack-slot-sharing
Suppress slot sharing during stack coloring
ssc-dce-limit
stack-slot-coloring
NumEliminated
Number of stack slots eliminated due to coloring
NumDead
Number of trivially dead stack accesses eliminated
Stack Slot Coloring
Tail Duplication
tailduplication
Early Tail Duplication
early-tailduplication
NumTails
Number of tails duplicated
NumTailDups
Number of tail duplicated blocks
NumTailDupAdded
Number of instructions added due to tail duplication
NumTailDupRemoved
Number of instructions removed due to tail duplication
NumAddedPHIs
Number of phis added
tail-dup-size
Maximum instructions to consider tail duplicating
tail-dup-indirect-size
Maximum instructions to consider tail duplicating blocks that end with indirect branches.
tail-dup-verify
Verify sanity of PHI instructions during taildup
tail-dup-limit
Malformed PHI in 
  missing input from predecessor 
Warning: malformed PHI in 
  extra input from predecessor 
  non-existing 
WinEH not implemented for this target
disable-sched-hazard
Disable hazard detection during preRA scheduling
machine-scheduler
post-RA-sched
 tiedto:$
cannot spill patchpoint subregister operand
sideeffect
mayload
maystore
isconvergent
attdialect
reguse
regdef
regdef-ec
clobber
jump-is-expensive
Do not create extra branches to split comparison logic.
min-jump-table-entries
Set minimum number of entries to use a jump table.
max-jump-table-size
Set maximum size of jump tables.
jump-table-density
Minimum density for building a jump table in a normal function
optsize-jump-table-density
Minimum density for building a jump table in an optsize function
disable-strictnode-mutation
Don't mutate strict-float node to a legalize node
min-predictable-branch
Minimum percentage (0-100) that a condition must be either true or false to assume that the condition is predictable
__addkf3
__subkf3
__mulkf3
__divkf3
__powikf2
__extendsfkf2
__extenddfkf2
__trunckfsf2
__trunckfdf2
__fixkfsi
__fixkfdi
__fixkfti
__fixunskfsi
__fixunskfdi
__fixunskfti
__floatsikf
__floatdikf
__floattikf
__floatunsikf
__floatundikf
__floatuntikf
__eqkf2
__nekf2
__gekf2
__ltkf2
__lekf2
__gtkf2
__unordkf2
__extendhfsf2
__truncsfhf2
__bzero
__sincosf_stret
__sincos_stret
sincosf
sincos
sincosl
Cannot legalize this vector
__safestack_unsafe_stack_ptr
 must have void* type
 must 
not 
be thread-local
__safestack_pointer_address
__guard_local
Invalid refinement step for -recip.
reciprocal-estimates
Funclet EH is not implemented for this target
.linker-options
invalid llvm.linker.options
llvm.dependent-libraries
.deplibs
OBJC_IMAGE_INFO
DW.ref.
.data
.DW.stub
Symbol '
' from module '
' required a section with entry-size=
 but was placed in section '
' with entry-size=
: Explicit assignment by pragma or attribute of an incompatible symbol to this section?
.GCC.command.line
.ctors
.dtors
.init_array
.fini_array
__TEXT
__constructor
__destructor
__mod_init_func
__mod_term_func
Invalid section specifier '
L_OBJC_IMAGE_INFO
Global variable '
' has an invalid section specifier '
' section type or attributes does not match previous section specifier
.CRT$XCU
.CRT$XTX
__real@
__xmm@
__ymm@
.rdata
.init_array.
__ehinfo.
.rodata.str
Objective-C GC Only
Objective-C Is Simulated
Objective-C Image Swift Version
.bss
.bss.
.tdata
.tdata.
.tbss
.tbss.
ELF COMDATs only support SelectionKind::Any, '
' cannot be lowered.
MD_associated operand is not ValueAsMetadata
.rodata.cst
.rodata
.data.rel.ro
.note
.preinit_array
.%05u
MachO doesn't support COMDATs, '
Associative COMDAT symbol '
' does not exist.
' is not a key for its COMDAT.
.tls$
.CRT$X
%05u
enable-ipra
Enable interprocedural register allocation to reduce load/store at procedure calls.
disable-post-ra
Disable Post Regalloc Scheduler
disable-branch-fold
Disable branch folding
disable-tail-duplicate
Disable tail duplication
disable-early-taildup
Disable pre-register allocation tail duplication
disable-block-placement
Disable probability-driven block placement
enable-block-placement-stats
Collect probability-driven block placement stats
disable-ssc
Disable Stack Slot Coloring
disable-machine-dce
Disable Machine Dead Code Elimination
disable-early-ifcvt
Disable Early If-conversion
disable-machine-licm
Disable Machine LICM
disable-machine-cse
Disable Machine Common Subexpression Elimination
optimize-regalloc
Enable optimized register allocation compilation path.
disable-postra-machine-licm
disable-machine-sink
Disable Machine Sinking
disable-postra-machine-sink
Disable PostRA Machine Sinking
disable-lsr
Disable Loop Strength Reduction Pass
disable-constant-hoisting
Disable ConstantHoisting
disable-cgp
Disable Codegen Prepare
disable-copyprop
Disable Copy Propagation pass
disable-partial-libcall-inlining
Disable Partial Libcall Inlining
enable-implicit-null-checks
Fold null checks into faulting memory operations
disable-mergeicmps
Disable MergeICmps Pass
print-lsr-output
Print LLVM IR produced by the loop-reduce pass
print-isel-input
Print LLVM IR input to isel pass
print-gc
Dump garbage collector data
verify-machineinstrs
Verify generated machine code
debugify-and-strip-all-safe
Debugify MIR before and Strip debug after each pass except those known to be unsafe when debug info is present
debugify-check-and-strip-all-safe
Debugify MIR before, by checking and stripping the debug info after, each pass except those known to be unsafe when debug info is present
enable-machine-outliner
Enable the machine outliner
Run on all functions guaranteed to be beneficial
Disable all outlining
fast-isel
Enable the "fast" instruction selector
global-isel
Enable the "global" instruction selector
print-after-isel
Print machine instrs after ISel
global-isel-abort
Enable abort calls when "global" instruction selection fails to lower/select an instruction
Disable the abort
Enable the abort
Disable the abort but emit a diagnostic on failure
misched-postra
Run MachineScheduler post regalloc (independent of preRA sched)
early-live-intervals
Run live interval analysis earlier in the pipeline
use-cfl-aa-in-codegen
Enable the new, experimental CFL alias analysis in CodeGen
Disable CFL-AA
steens
Enable unification-based CFL-AA
anders
Enable inclusion-based CFL-AA
both
Enable both variants of CFL-AA
Resume compilation after a specific pass
pass-name
Resume compilation before a specific pass
Stop compilation after a specific pass
Stop compilation before a specific pass
enable-split-machine-functions
Split out cold blocks from machine functions based on profile information.
disable-expand-reductions
Disable the expand reduction intrinsics pass from running
 and 
 specified!
Trying to construct TargetPassConfig without a target machine. Scheduling a CodeGen pass without a target triple set?
Cannot stop compilation after pass that is not run
*** Code after LSR ***
*** Final LLVM Code input to ISel ***
After Instruction Selection
regalloc
Register allocator to use
pick register allocator based on -O option
Must use fast (default) register allocator for unoptimized regalloc.
Target Pass Configuration
targetpassconfig
invalid pass instance specifier 
" pass is not registered.
huge-size-for-split
A threshold of live range size which may cause high compile time cost in global splitting.
no-realign-stack
$noreg
physreg
:sub(
Unit~
BadUnit~
schedmodel
Use TargetSchedModel for latency lookup
scheditins
Use InstrItineraryData for latency lookup
disable-type-promotion
Disable type promotion pass
Type Promotion
type-promotion
twoaddressinstruction
NumTwoAddressInstrs
Number of two-address instructions
NumCommuted
Number of instructions commuted to coalesce
NumAggrCommuted
Number of instructions aggressively commuted
NumConvertedTo3Addr
Number of instructions promoted to 3-address
NumReSchedUps
Number of instructions re-scheduled up
NumReSchedDowns
Number of instructions re-scheduled down
twoaddr-reschedule
Coalesce copies by rescheduling (default=true)
dataflow-edge-limit
Maximum number of dataflow edges to traverse when evaluating the benefit of commuting operands
Two-Address instruction pass
After two-address instruction pass
Remove unreachable blocks from the CFG
unreachableblockelim
Remove unreachable machine basic blocks
unreachable-mbb-elimination
The code that requested the fixed number of elements has made the assumption that this vector is not scalable. This assumption was not correct, and this may lead to broken code
ppcf128
isVoid
x86mmx
x86amx
********** REGISTER MAP **********
 -> fi#
Virtual Register Map
virtregmap
Virtual Register Rewriter
virtregrewriter
register rewriting failed: cycle in copy bundle
Prepare WebAssembly exceptions
wasmehprepare
WebAssembly Exception handling preparation
selector
__wasm_lpad_context
lpad_index_gep
lsda_gep
selector_gep
_Unwind_CallPersonality
disable-demotion
Clone multicolor basic blocks but do not demote cross scopes
disable-cleanups
Do not remove implausible terminators or other similar cleanups
demote-catchswitch-only
Demote catchswitch BBs only (for wasm EH)
Prepare Windows exceptions
winehprepare
Windows exception handling preparation
.for.
.wineh.spillslot
.wineh.reload
Cleanup funclets for the SEH personality cannot contain exceptional actions
Cleanup funclets for the MSVC++ personality cannot contain exceptional actions
Insert XRay ops
xray-instrumentation
xray-ignore-loops
An attempt to perform XRay instrumentation for an unsupported target.
xray-skip-entry
xray-skip-exit
Live DEBUG_VALUE analysis
livedebugvalues
NumInserted
Number of DBG_VALUE instructions inserted
livedebugvalues-input-bb-limit
Maximum input basic blocks before DBG_VALUE limit applies
livedebugvalues-input-dbg-value-limit
Maximum input DBG_VALUE insts supported by debug range extension
Number of DBG_VALUE instructions removed
emulate-old-livedebugvalues
Act like old LiveDebugValues did
observe-all-stack-ops
Allow non-kill spill and restores
dump-thin-cg-sccs
Dump the SCCs in the ThinLTO index's callgraph
enable-lto-internalization
Enable global value internalization in LTO
Function
.thin.
0123456789ABCDEF
__ashlhi3
__ashlsi3
__ashldi3
__ashlti3
__lshrhi3
__lshrsi3
__lshrdi3
__lshrti3
__ashrhi3
__ashrsi3
__ashrdi3
__ashrti3
__mulqi3
__mulhi3
__mulsi3
__muldi3
__multi3
__mulosi4
__mulodi4
__muloti4
__divqi3
__divhi3
__divsi3
__divdi3
__divti3
__udivqi3
__udivhi3
__udivsi3
__udivdi3
__udivti3
__modqi3
__modhi3
__modsi3
__moddi3
__modti3
__umodqi3
__umodhi3
__umodsi3
__umoddi3
__umodti3
__negsi2
__negdi2
__addsf3
__adddf3
__addxf3
__addtf3
__gcc_qadd
__subsf3
__subdf3
__subxf3
__subtf3
__gcc_qsub
__mulsf3
__muldf3
__mulxf3
__multf3
__gcc_qmul
__divsf3
__divdf3
__divxf3
__divtf3
__gcc_qdiv
fmodf
fmod
fmodl
fmaf
fmal
__powisf2
__powidf2
__powixf2
__powitf2
cbrtf
cbrt
cbrtl
logf
logl
__logf_finite
__log_finite
__logl_finite
log2f
log2
log2l
__log2f_finite
__log2_finite
__log2l_finite
log10f
log10
log10l
__log10f_finite
__log10_finite
__log10l_finite
expf
expl
__expf_finite
__exp_finite
__expl_finite
__exp2f_finite
__exp2_finite
__exp2l_finite
__powf_finite
__pow_finite
__powl_finite
ceilf
ceill
truncf
trunc
truncl
rintf
rint
rintl
nearbyintf
nearbyint
nearbyintl
roundf
roundl
roundevenf
roundeven
roundevenl
floorl
lroundf
lround
lroundl
llroundf
llround
llroundl
lrintf
lrint
lrintl
llrintf
llrint
llrintl
__gcc_stoq
__gcc_dtoq
__extendxftf2
__extenddftf2
__extendsftf2
__extendhftf2
__extendsfdf2
__extendhfdf2
__gnu_h2f_ieee
__gnu_f2h_ieee
__truncdfhf2
__truncxfhf2
__trunctfhf2
__truncdfsf2
__truncxfsf2
__trunctfsf2
__gcc_qtos
__truncxfdf2
__trunctfdf2
__gcc_qtod
__trunctfxf2
__fixhfsi
__fixhfdi
__fixhfti
__fixsfsi
__fixsfdi
__fixsfti
__fixdfsi
__fixdfdi
__fixdfti
__fixxfsi
__fixxfdi
__fixxfti
__fixtfsi
__fixtfdi
__fixtfti
__gcc_qtou
__fixunshfsi
__fixunshfdi
__fixunshfti
__fixunssfsi
__fixunssfdi
__fixunssfti
__fixunsdfsi
__fixunsdfdi
__fixunsdfti
__fixunsxfsi
__fixunsxfdi
__fixunsxfti
__fixunstfsi
__fixunstfdi
__fixunstfti
__floatsihf
__floatsisf
__floatsidf
__floatsixf
__floatsitf
__gcc_itoq
__floatdihf
__floatdisf
__floatdidf
__floatdixf
__floatditf
__floattihf
__floattisf
__floattidf
__floattixf
__floattitf
__floatunsihf
__floatunsisf
__floatunsidf
__floatunsixf
__floatunsitf
__gcc_utoq
__floatundihf
__floatundisf
__floatundidf
__floatundixf
__floatunditf
__floatuntihf
__floatuntisf
__floatuntidf
__floatuntixf
__floatuntitf
__eqsf2
__eqdf2
__eqtf2
__gcc_qeq
__nesf2
__nedf2
__netf2
__gcc_qne
__gesf2
__gedf2
__getf2
__gcc_qge
__ltsf2
__ltdf2
__lttf2
__gcc_qlt
__lesf2
__ledf2
__letf2
__gcc_qle
__gtsf2
__gtdf2
__gttf2
__gcc_qgt
__unordsf2
__unorddf2
__unordtf2
__gcc_qunord
memcpy
memmove
memset
__llvm_memcpy_element_unordered_atomic_1
__llvm_memcpy_element_unordered_atomic_2
__llvm_memcpy_element_unordered_atomic_4
__llvm_memcpy_element_unordered_atomic_8
__llvm_memcpy_element_unordered_atomic_16
__llvm_memmove_element_unordered_atomic_1
__llvm_memmove_element_unordered_atomic_2
__llvm_memmove_element_unordered_atomic_4
__llvm_memmove_element_unordered_atomic_8
__llvm_memmove_element_unordered_atomic_16
__llvm_memset_element_unordered_atomic_1
__llvm_memset_element_unordered_atomic_2
__llvm_memset_element_unordered_atomic_4
__llvm_memset_element_unordered_atomic_8
__llvm_memset_element_unordered_atomic_16
_Unwind_Resume
__sync_val_compare_and_swap_1
__sync_val_compare_and_swap_2
__sync_val_compare_and_swap_4
__sync_val_compare_and_swap_8
__sync_val_compare_and_swap_16
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_fetch_and_add_1
__sync_fetch_and_add_2
__sync_fetch_and_add_4
__sync_fetch_and_add_8
__sync_fetch_and_add_16
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_sub_16
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_and_16
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_or_16
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__sync_fetch_and_xor_16
__sync_fetch_and_nand_1
__sync_fetch_and_nand_2
__sync_fetch_and_nand_4
__sync_fetch_and_nand_8
__sync_fetch_and_nand_16
__sync_fetch_and_max_1
__sync_fetch_and_max_2
__sync_fetch_and_max_4
__sync_fetch_and_max_8
__sync_fetch_and_max_16
__sync_fetch_and_umax_1
__sync_fetch_and_umax_2
__sync_fetch_and_umax_4
__sync_fetch_and_umax_8
__sync_fetch_and_umax_16
__sync_fetch_and_min_1
__sync_fetch_and_min_2
__sync_fetch_and_min_4
__sync_fetch_and_min_8
__sync_fetch_and_min_16
__sync_fetch_and_umin_1
__sync_fetch_and_umin_2
__sync_fetch_and_umin_4
__sync_fetch_and_umin_8
__sync_fetch_and_umin_16
__atomic_load
__atomic_load_1
__atomic_load_2
__atomic_load_4
__atomic_load_8
__atomic_load_16
__atomic_store
__atomic_store_1
__atomic_store_2
__atomic_store_4
__atomic_store_8
__atomic_store_16
__atomic_exchange
__atomic_exchange_1
__atomic_exchange_2
__atomic_exchange_4
__atomic_exchange_8
__atomic_exchange_16
__atomic_compare_exchange
__atomic_compare_exchange_1
__atomic_compare_exchange_2
__atomic_compare_exchange_4
__atomic_compare_exchange_8
__atomic_compare_exchange_16
__atomic_fetch_add_1
__atomic_fetch_add_2
__atomic_fetch_add_4
__atomic_fetch_add_8
__atomic_fetch_add_16
__atomic_fetch_sub_1
__atomic_fetch_sub_2
__atomic_fetch_sub_4
__atomic_fetch_sub_8
__atomic_fetch_sub_16
__atomic_fetch_and_1
__atomic_fetch_and_2
__atomic_fetch_and_4
__atomic_fetch_and_8
__atomic_fetch_and_16
__atomic_fetch_or_1
__atomic_fetch_or_2
__atomic_fetch_or_4
__atomic_fetch_or_8
__atomic_fetch_or_16
__atomic_fetch_xor_1
__atomic_fetch_xor_2
__atomic_fetch_xor_4
__atomic_fetch_xor_8
__atomic_fetch_xor_16
__atomic_fetch_nand_1
__atomic_fetch_nand_2
__atomic_fetch_nand_4
__atomic_fetch_nand_8
__atomic_fetch_nand_16
__stack_chk_fail
__llvm_deoptimize
lto-embed-bitcode
Do not embed
optimized
Embed after all optimization passes
post-merge-pre-opt
Embed post merge, but before optimizations
Embed LLVM bitcode in object files produced by LTO
thinlto-assume-merged
Assume the input has already undergone ThinLTO function importing and the other pre-optimization pipeline changes.
<mem>
.objc_class_name_
: Could not read LTO input file: 
LLVM version 13.0.0, (clang-1300.0.29.3)
lto-discard-value-names
Strip names from Value during LTO (other than GlobalValue).
lto-module-no-asm
No assembly allowed in LTO module
lto-pass-remarks-with-hotness
With PGO, include profile count in optimization remarks
lto-pass-remarks-hotness-threshold
Minimum profile count required for an optimization remark to be output. Use 'auto' to apply the threshold from profile summary.
uint or 'auto'
lto-pass-remarks-output
Output filename for pass remarks
filename
lto-pass-remarks-filter
Only record optimization remarks from passes whose names match the given regular expression
regex
lto-pass-remarks-format
The format used for serializing remarks (default: YAML)
format
yaml
lto-stats-file
Save statistics to the specified file
ld-temp.o
__hidden#
__ir_hidden#
could not open bitcode file for writing: 
could not write bitcode file: 
lto-llvm
could not write object file: 
Broken module found, compilation aborted!
Invalid debug info found, debug info will be stripped
Error: 
Can't get an output file for the remarks
Can't get an output file for the statistics
LTOPostLink
inline asm is not allowed in the module
libLLVMLTO
Invalid argument '
', only integer or 'auto' is supported.
auto
Not an integer: %s
Linker asked to preserve available_externally global: '
Linker asked to preserve internal global: '
thinlto-synthesize-entry-counts
Synthesize entry counts based on the summary
threads
llvmcache-
Thin-%%%%%%.tmp.o
arm64e
Failed to open 
 to save optimized bitcode
Can't load module, abort.
importFunctions failed
.1.promoted.bc
.2.internalized.bc
.3.imported.bc
.4.opt.bc
ThinLTO cannot create input file: 
ThinLTO modules with incompatible triples not supported
Can't load target for this Triple: 
error: can't create module summary index for buffer: 
.thinlto.o
remark: can't link or copy from cached entry '
Can't open output '
Unexistent dir: '
index.bc
no inline asm is allowed, abort!
renameModuleForThinLTO failed
Failed to setup codegen
<in-memory object>
ThinLTO: Can't get a temporary file
ThinLTO
ThinLTO: Can't get an output file for the remarks
.0.original.bc
remark: can't reload cached file '
Could not create temporary file to materialize module
 to save module bitcode
-fthinlto-index=
-Xclang
-mrelocation-model
Clang Invocation failed for Input file: 
clang
Could not find clang executable!
thinlto.o
Could not create temporary file to store thinlto codegen output
index-
could not create temporary file for thinlto codegen output
could not open temporary file to write thinlto codegen output
Could not load output memory buffer for 
thinlto.bc
Could not write output to output file directory for
default version symbol 
 must be defined
multiple versions for 
Cannot represent a difference across sections
.strtab
ZLIB
.rela
.rel
.symtab
Undefined temporary symbol 
Undefined section reference: 
.symtab_shndx
Size expression must be absolute.
A dwo section may not contain relocations
A relocation may not refer to a dwo section
dwo only supported with ELF and Wasm
FK_NONE
FK_Data_1
FK_Data_2
FK_Data_4
FK_Data_8
FK_Data_6b
FK_PCRel_1
FK_PCRel_2
FK_PCRel_4
FK_PCRel_8
FK_GPRel_1
FK_GPRel_2
FK_GPRel_4
FK_GPRel_8
FK_DTPRel_4
FK_DTPRel_8
FK_TPRel_4
FK_TPRel_8
FK_SecRel_1
FK_SecRel_2
FK_SecRel_4
FK_SecRel_8
FK_Data_Add_1
FK_Data_Add_2
FK_Data_Add_4
FK_Data_Add_8
FK_Data_Add_6b
FK_Data_Sub_1
FK_Data_Sub_2
FK_Data_Sub_4
FK_Data_Sub_8
FK_Data_Sub_6b
dwarf-extended-loc
Disable emission of the extended flags in .loc directives.
Default for platform
Enable
Enabled
Disable
use-leb128-directives
Disable the usage of LEB128 directives, and generate .byte instead.
NO_APP
.zero
.ascii
.asciz
.byte
.short
.long
.quad
.globl
 InlineAsm Start
 InlineAsm End
.weak_reference 
.space
.note.GNU-stack
.cfi_startproc
 simple
.cfi_endproc
.syntax unified
.subsections_via_symbols
.linker_option "
.data_region
.data_region jt8
.data_region jt16
.data_region jt32
.end_data_region
.watchos_version_min
.tvos_version_min
.ios_version_min
.macosx_version_min
sdk_version 
.build_version 
macCatalyst
iossimulator
tvossimulator
watchossimulator
.ptrauth_kernel_abi_version 
.ptrauth_abi_version 
.thumb_func
.set 
.weakref 
.type
gnu_indirect_function
object
tls_object
notype
gnu_unique_object
.lglobl
.hidden
.indirect_symbol
.internal
.lazy_reference
.local
.no_dead_strip
.symbol_resolver
.alt_entry
.private_extern
.protected
.reference
.extern
.weak_definition
.weak_def_can_be_hidden
.desc
.def
.scl
.endef
.safeseh
.symidx
.secidx
.secrel32
.rva
.lcomm
unhandled linkage type
,hidden
,protected
unexpected value for Visibility type
.rename
.size
.symver 
.comm
.zerofill 
.tbss 
Don't know how to emit this value.
.uleb128 
.sleb128 
Cannot emit non-absolute expression lengths of fill.
.fill
Only power-of-two alignments are supported with .align.
.align
.p2align
.p2alignw 
.p2alignl 
.org 
.file
.ident
 md5 0x
 source 
.cfi_b_key_frame
.loc
 basic_block
 prologue_end
 epilogue_begin
 is_stmt 
 isa 
 discriminator 
.cv_file
.cv_func_id 
.cv_inline_site_id 
 inlined_at 
.cv_loc
 is_stmt 1
.cv_linetable
.cv_inline_linetable
, reg_rel, 
.cv_def_range
, subfield_reg, 
, reg, 
, frame_ptr_rel, 
.cv_stringtable
.cv_filechecksums
.cv_filechecksumoffset
.cfi_sections 
, .debug_frame
.cfi_def_cfa 
.cfi_def_cfa_offset 
.cfi_def_cfa_register 
.cfi_offset 
.cfi_personality 
.cfi_lsda 
.cfi_remember_state
.cfi_restore_state
.cfi_same_value 
.cfi_restore 
.cfi_rel_offset 
.cfi_adjust_cfa_offset 
.cfi_escape 
.cfi_return_column 
.cfi_signal_frame
.cfi_undefined 
.cfi_register 
.cfi_window_save
.cfi_negate_ra_state
.seh_proc 
.seh_endproc
.seh_endfunclet
.seh_startchained
.seh_endchained
.seh_pushreg 
.seh_setframe 
.seh_savereg 
.seh_savexmm 
.seh_pushframe
 @code
.seh_endprologue
.seh_handler 
, @unwind
, @except
.seh_handlerdata
.cg_profile 
.intel_syntax noprefix
.reloc 
.addrsig
.addrsig_sym 
encoding: [
  fixup 
offset: 
, value: 
, kind: 
.pseudoprobe
.bundle_align_mode 
.bundle_lock
 align_to_end
.bundle_unlock
expected relocatable expression
unsupported subtraction of qualified symbol
expected assembly-time absolute expression
invalid number of bytes
invalid .org offset '
' (at offset '
Fragment can't be larger than a bundle size
Padding cannot exceed 255 bytes
unable to write NOP sequence of 
 bytes
 section '
' cannot have fixups
' cannot have non-zero initializers
sleb128 and uleb128 expressions must be absolute
undefined .align directive, value size '
' is not a divisor of padding size '
unable to write nop sequence of 
illegal NOP size 
. (expected within [0, 
unable to write nop sequence of the remaining 
checksum_offset
strtab_begin
strtab_end
filechecksums_begin
filechecksums_end
linetable_begin
linetable_end
Segment for file '
' begins
as-secure-log-file-name
As secure log file name (initialized from AS_SECURE_LOG_FILE env variable)
AS_SECURE_LOG_FILE
$frame_escape_
$parent_frame_offset
__ehtable$
._Renamed..
_Renamed..
invalid symbol name from source
.group
section's multiply symbols policy does not match
debug_list_header_start
debug_list_header_end
DWARF64 mark
Length
Version
Address size
Segment selector size
debug_rnglist0_start
debug_ranges_start
llvm-mc (based on LLVM 13.0.0)
Unterminated .bundle_lock when changing a section
 changed binding to STB_GLOBAL
 changed binding to STB_WEAK
 changed binding to STB_LOCAL
Symbol: 
 redeclared as different type
Emitting values inside a locked bundle is forbidden
.comment
Reference to undefined temporary symbol 
.bundle_align_mode cannot be changed once set
.bundle_lock forbidden when bundling is disabled
.bundle_unlock forbidden when bundling is disabled
.bundle_unlock without matching lock
Empty bundle-locked group is forbidden
A Bundle can only have one Subtarget.
0x%02llx
0x%04llx
0x%08llx
0x%016llx
<<invalid>>
<<none>>
DTPOFF
DTPREL
GOTOFF
GOTREL
PCREL
GOTPCREL
GOTTPOFF
INDNTPOFF
NTPOFF
GOTNTPOFF
TLSGD
TLSLD
TLSLDM
TPOFF
TPREL
tlscall
TLVP
TLVPPAGE
TLVPPAGEOFF
PAGE
PAGEOFF
GOTPAGE
GOTPAGEOFF
SECREL32
WEAKREF
ABS8
PLTOFF
GOT_PREL
target1
target2
prel31
sbrel
tlsldo
tlsdescseq
hlo8
diff8
diff16
diff32
high
higha
higher
highera
highest
highesta
got@l
got@h
got@ha
tocbase
toc@l
toc@h
toc@ha
dtpmod
tprel@l
tprel@h
tprel@ha
tprel@high
tprel@higha
tprel@higher
tprel@highera
tprel@highest
tprel@highesta
dtprel@l
dtprel@h
dtprel@ha
dtprel@high
dtprel@higha
dtprel@higher
dtprel@highera
dtprel@highest
dtprel@highesta
got@tprel
got@tprel@l
got@tprel@h
got@tprel@ha
got@dtprel
got@dtprel@l
got@dtprel@h
got@dtprel@ha
got@tlsgd
got@tlsgd@l
got@tlsgd@h
got@tlsgd@ha
tlsgd
got@tlsld
got@tlsld@l
got@tlsld@h
got@tlsld@ha
got@pcrel
got@tlsgd@pcrel
got@tlsld@pcrel
got@tprel@pcrel
tls@pcrel
tlsld
local
notoc
IMGREL
LO16
HI16
GPREL
GDGOT
LDGOT
GDPLT
LDPLT
IEGOT
TYPEINDEX
MBREL
TLSREL
TBREL
gotpcrel32@lo
gotpcrel32@hi
rel32@lo
rel32@hi
rel64
abs32@lo
abs32@hi
pc_hi
pc_lo
got_hi
got_lo
gotoff_hi
gotoff_lo
plt_hi
plt_lo
tls_gd_hi
tls_gd_lo
tpoff_hi
tpoff_lo
dtprel
dtpoff
gotoff
gotrel
gottpoff
indntpoff
ntpoff
gotntpoff
tlsldm
tpoff
tprel
tlvppageoff
pageoff
gotpage
gotpageoff
imgrel
secrel32
pltoff
gdgot
gdplt
iegot
ldgot
ldplt
typeindex
tbrel
mbrel
tlsrel
expression could not be evaluated
' could not be evaluated in a subtraction expression
Common symbol '
' cannot be used in assignment expr
unable to evaluate offset for variable '
unable to evaluate offset to undefined symbol '
<MCOperand 
INVALID
FPImm:
Expr:(
Inst:(
UNDEFINED
<MCInst 
<MCInst #
%lld
-0x8000000000000000
-0x%llx
-8000000000000000h
-0%llxh
-%llxh
0%llxh
%llxh
deprecated
__DWARF
The usage of .zerofill is restricted to sections of ZEROFILL type. Use .zero or .space instead.
__eh_frame
__text
__data
__thread_data
__thread_bss
__thread_vars
__thread_init
__ustring
__literal4
__literal8
__literal16
__const
__textcoal_nt
__const_coal
__datacoal_nt
__common
__bss
__la_symbol_ptr
__nl_symbol_ptr
__thread_ptr
__gcc_except_tab
__LD
__compact_unwind
__debug_names
debug_names_begin
__apple_names
names_begin
__apple_objc
objc_begin
__apple_namespac
namespac_begin
__apple_types
types_begin
__swift_ast
__debug_abbrev
section_abbrev
__debug_info
section_info
__debug_line
section_line
__debug_line_str
section_line_str
__debug_frame
__debug_pubnames
__debug_pubtypes
__debug_gnu_pubn
__debug_gnu_pubt
__debug_str
__debug_str_offs
section_str_off
__debug_addr
__debug_loc
section_debug_loc
__debug_loclists
__debug_aranges
__debug_ranges
debug_range
__debug_rnglists
__debug_macinfo
debug_macinfo
__debug_macro
debug_macro
__debug_inlined
__debug_cu_index
__debug_tu_index
__LLVM_STACKMAPS
__llvm_stackmaps
__LLVM_FAULTMAPS
__llvm_faultmaps
__LLVM
__remarks
.rodata.cst4
.rodata.cst8
.rodata.cst16
.rodata.cst32
.gcc_except_table
.debug_abbrev
.debug_line
.debug_line_str
.debug_pubnames
.debug_pubtypes
.debug_gnu_pubnames
.debug_gnu_pubtypes
.debug_str
.debug_loc
.debug_aranges
.debug_ranges
.debug_macinfo
.debug_macro
.debug_names
.apple_names
.apple_objc
.apple_namespaces
.apple_types
.debug_str_offsets
.debug_addr
.debug_rnglists
.debug_loclists
.debug_info.dwo
.debug_types.dwo
.debug_abbrev.dwo
.debug_str.dwo
.debug_line.dwo
.debug_loc.dwo
.debug_str_offsets.dwo
.debug_rnglists.dwo
.debug_macinfo.dwo
.debug_macro.dwo
.debug_loclists.dwo
.debug_cu_index
.debug_tu_index
.llvm_stackmaps
.llvm_faultmaps
.stack_sizes
.pseudo_probe
.pseudo_probe_desc
.debug$S
.debug$T
.debug$H
section_debug_loclists
debug_rnglists
debug_macinfo.dwo
debug_macro.dwo
section_info_dwo
section_types_dwo
section_abbrev_dwo
skel_loc
section_str_off_dwo
addr_sec
.drectve
.pdata
.xdata
.sxdata
.gfids$y
.giats$y
.gljmp$y
.rodata.gcc_except_table
.eh_info_table
Cannot initialize MC for non-Windows COFF object files.
Cannot initialize MC for GOFF object file format
Cannot initialize MC for unknown object file format.
Cannot get DWARF comdat section for this object file format: not implemented.
.llvm_bb_addr_map
unresolved relocation offset
value evaluated as 
 is out of range.
This file format doesn't support weak aliases.
Cannot evaluate subsection number
Subsection number out of range
' cannot have instructions
unknown relocation name
.reloc offset is not relocatable
.reloc offset is negative
.reloc offset is not representable
'.fill' directive with negative repeat count has no effect
symbol in .reloc offset is not relocatable
symbol in offset has no data fragment
.reloc symbol offset is not representable
symbol used in the .reloc offset is not defined
symbol used in the .reloc offset is variable
target does not implement codeview register mapping
unknown codeview register 
sec_end
Mismatched bundle_lock/unlock directives
virtual
.linkonce
IMAGE_SCN_CNT_UNINITIALIZED_DATA
,#alloc
,#execinstr
,#write
,#exclude
,#tls
0x7000001e
unsupported type 0x
 for section 
,comdat
,unique,
.subsection
SHT_NOBITS
0123456789_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
.section
,none,
mach-o section specifier requires a segment whose length is between 1 and 16 characters
mach-o section specifier requires a segment and section separated by a comma
mach-o section specifier requires a section whose length is between 1 and 16 characters
mach-o section specifier uses an unknown section type
mach-o section specifier of type 'symbol_stubs' requires a size specifier
mach-o section specifier has invalid attribute
mach-o section specifier cannot have a stub size specified because it does not have type 'symbol_stubs'
mach-o section specifier has a malformed stub size
regular
S_REGULAR
S_ZEROFILL
cstring_literals
S_CSTRING_LITERALS
4byte_literals
S_4BYTE_LITERALS
8byte_literals
S_8BYTE_LITERALS
literal_pointers
S_LITERAL_POINTERS
non_lazy_symbol_pointers
S_NON_LAZY_SYMBOL_POINTERS
lazy_symbol_pointers
S_LAZY_SYMBOL_POINTERS
symbol_stubs
S_SYMBOL_STUBS
mod_init_funcs
S_MOD_INIT_FUNC_POINTERS
mod_term_funcs
S_MOD_TERM_FUNC_POINTERS
coalesced
S_COALESCED
S_GB_ZEROFILL
interposing
S_INTERPOSING
16byte_literals
S_16BYTE_LITERALS
S_DTRACE_DOF
S_LAZY_DYLIB_SYMBOL_POINTERS
thread_local_regular
S_THREAD_LOCAL_REGULAR
thread_local_zerofill
S_THREAD_LOCAL_ZEROFILL
thread_local_variables
S_THREAD_LOCAL_VARIABLES
thread_local_variable_pointers
S_THREAD_LOCAL_VARIABLE_POINTERS
thread_local_init_function_pointers
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
pure_instructions
S_ATTR_PURE_INSTRUCTIONS
no_toc
S_ATTR_NO_TOC
strip_static_syms
S_ATTR_STRIP_STATIC_SYMS
no_dead_strip
S_ATTR_NO_DEAD_STRIP
live_support
S_ATTR_LIVE_SUPPORT
self_modifying_code
S_ATTR_SELF_MODIFYING_CODE
debug
S_ATTR_DEBUG
S_ATTR_SOME_INSTRUCTIONS
S_ATTR_EXT_RELOC
S_ATTR_LOC_RELOC
.csect 
Unhandled storage-mapping class for .text csect
Unhandled storage-mapping class for .rodata csect.
.toc
Unhandled storage-mapping class for .data csect.
Printing for this SectionKind is unimplemented.
unsupported directive in streamer
line_table_start
this directive must appear between .cfi_startproc and .cfi_endproc directives
parent function id not introduced by .cv_func_id or .cv_inline_site_id
function id not introduced by .cv_func_id or .cv_inline_site_id
all .cv_loc directives for a function must be in the same section
invalid symbol redefinition
starting new .cfi frame before finishing the previous one
.seh_* directives are not supported on this target
.seh_ directive must appear within an active frame
Starting a function before ending the previous one!
Not all chained regions terminated!
End of a chained region outside a chained region!
Chained unwind areas can't have handlers!
Don't know what kind of handler this is!
frame register and offset can be set at most once
offset is not a multiple of 16
frame offset must be less than or equal to 240
stack allocation size must be non-zero
stack allocation size is not a multiple of 8
register save offset is not 8 byte aligned
If present, PushMachFrame must be the first UOP
EmitRawText called on an MCStreamer that doesn't support it (target backend is likely missing an AsmStreamer implementation)
Unfinished frame!
' is not a recognized feature for this target
 (ignoring feature)
' is not a recognized processor for this target
 (ignoring processor)
' is not a recognized processor for this 
target (ignoring processor)
+help
+cpuhelp
Available CPUs for this target:
  %-*s - Select the %s processor.
Available features for this target:
  %-*s - %s.
Use +feature to enable a feature, or -feature to disable it.
For example, llc -mcpu=mycpu -mattr=+feature1,-feature2
Use -mcpu or -mtune to specify the target's processor.
For example, clang --target=aarch64-unknown-linux-gui -mcpu=cortex-a35
Symbol name with unsupported characters
mc-relax-all
When used with filetype=obj, relax all fixups in the emitted object file
incremental-linker-compatible
When used with filetype=obj, emit an object file which can be used with an incremental linker
dwarf-version
Dwarf version
dwarf64
Generate debugging info in the 64-bit DWARF format
asm-show-inst
Emit internal instruction representation to assembly file
fatal-warnings
Treat warnings as errors
no-warn
Suppress all warnings
Alias for --no-warn
no-deprecated-warn
Suppress all deprecated warnings
target-abi
The name of the ABI to be targeted from the backend.
Earlier .seh_handlerdata for 
 skipped due to no unwind info at the time (.seh_handlerdata too early?), but the function later did get unwind info that can't be emitted
FuncletOrFuncEnd not set
SEH unwind data splitting not yet implemented
Failed to evaluate function length in SEH unwind info
starting a new symbol definition without completing the previous one
storage class specified outside of symbol definition
storage class value '
' out of range
symbol type specified outside of a symbol definition
type value '
ending symbol definition without starting one
alignment is limited to 32-bytes
 -aligncomm:"
Not implemented yet.
Zero fill not implemented for XCOFF.
emitXCOFFRenameDirective is not implemented yet on object generation path
unsupported relocation expression
indirect symbol '
' not in a symbol pointer or stub section
Data region not terminated
invalid 'common' alignment '
' for '
altivec
__indirect_function_table
section already has a defining function: 
': unsupported subtraction expression used in relocation.
relocations for function or section offsets are only supported in metadata sections
section symbol is required for relocation
symbol '__indirect_function_table' is not a function table
relocations against un-named temporaries are not yet supported by wasm
producers
target_features
function sections must contain one function each
function symbols must have a size set with .size
data symbols must have a size set with .size: 
.size expression must be evaluatable
data symbols must live in a data section: 
: absolute addressing not supported!
don't yet support global/event aliases
.fini_array sections are unsupported
only one .init_array section fragment supported
.init_array section should be aligned
.init_array section should be aligned for pointers
only data supported in .init_array section
.init_array section priority should start with '.'
invalid .init_array section priority
non-symbolic data in .init_array section
fixups in .init_array should be symbol references
symbols in .init_array should exist in symtab
symbols in .init_array should be for functions
CODE
DATA
__linear_memory
undefined global symbol cannot be weak
undefined event symbol cannot be weak
undefined table symbol cannot be weak
GOT.func
GOT.mem
only data supported in data sections
only byte values supported for alignment
section size does not fit in a uint32_t
symbol not found in type index space: 
linking
reloc.
.llvm_addrsig
.llvm.call-graph-profile
two sections have the same comdat
conflicting sections for symbol
.weak.
.default
' can not be undefined
assembler label '
PE COFF object files can't have more than 2147483647 sections
cannot make section 
 associative with sectionless symbol 
COFF string table is greater than 64 GB.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
64-bit XCOFF object files are not supported yet.
Unhandled mapping of read-write csect to section.
Unhandled mapping of csect to section.
Section index overflow!
Section raw data overflowed this object file.
TOCEntryOffset overflows in small code model mode
relocation for opposite term is not yet supported
relocation for paired relocatable term is not yet supported
Incremental linking not supported for XCOFF.
relocation entries overflowed; overflow section is not implemented yet
Relocation data overflowed this object file.
Latency: 
symbol stub for: 
Objc message: 
literal pool symbol address: 
literal pool for: "
Objc cfstring ref: @"
Objc message ref: 
Objc selector ref: 
Objc class ref: 
remaining size of archive too small for next archive member header 
at offset 
for 
terminator characters in archive member "
" not the correct "`\n" values for the archive member header 
name contains a leading space for archive member header at offset 
archive header truncated before the name field for archive member header at offset 
long name offset characters after the '/' are not all decimal numbers: '
' for archive member header at offset 
long name offset 
 past the end of the string table for archive member header at offset 
string table at long name offset 
not terminated
long name length characters after the #1/ are not all decimal numbers: '
long name length: 
 extends past the end of the member or archive for archive member header at offset 
characters in size field in archive header are not all decimal numbers: '
offset to next archive member past the end of the archive after member 
file too small to be an archive
__.SYMDEF
__.SYMDEF_64
__.SYMDEF_64 SORTED
/SYM64/
truncated or malformed archive (
Sections with relocations should have an address of 0
TLS Directory size (%u) is not the expected size (%llu).
COFF-i386
COFF-x86-64
COFF-ARM
COFF-ARM64
COFF-<unknown arch>
invalid section name
IMAGE_REL_AMD64_ABSOLUTE
IMAGE_REL_AMD64_ADDR64
IMAGE_REL_AMD64_ADDR32
IMAGE_REL_AMD64_ADDR32NB
IMAGE_REL_AMD64_REL32
IMAGE_REL_AMD64_REL32_1
IMAGE_REL_AMD64_REL32_2
IMAGE_REL_AMD64_REL32_3
IMAGE_REL_AMD64_REL32_4
IMAGE_REL_AMD64_REL32_5
IMAGE_REL_AMD64_SECTION
IMAGE_REL_AMD64_SECREL
IMAGE_REL_AMD64_SECREL7
IMAGE_REL_AMD64_TOKEN
IMAGE_REL_AMD64_SREL32
IMAGE_REL_AMD64_PAIR
IMAGE_REL_AMD64_SSPAN32
IMAGE_REL_ARM_ABSOLUTE
IMAGE_REL_ARM_ADDR32
IMAGE_REL_ARM_ADDR32NB
IMAGE_REL_ARM_BRANCH24
IMAGE_REL_ARM_BRANCH11
IMAGE_REL_ARM_TOKEN
IMAGE_REL_ARM_BLX24
IMAGE_REL_ARM_BLX11
IMAGE_REL_ARM_REL32
IMAGE_REL_ARM_SECTION
IMAGE_REL_ARM_SECREL
IMAGE_REL_ARM_MOV32A
IMAGE_REL_ARM_MOV32T
IMAGE_REL_ARM_BRANCH20T
IMAGE_REL_ARM_BRANCH24T
IMAGE_REL_ARM_BLX23T
IMAGE_REL_ARM_PAIR
IMAGE_REL_ARM64_ABSOLUTE
IMAGE_REL_ARM64_ADDR32
IMAGE_REL_ARM64_ADDR32NB
IMAGE_REL_ARM64_BRANCH26
IMAGE_REL_ARM64_PAGEBASE_REL21
IMAGE_REL_ARM64_REL21
IMAGE_REL_ARM64_PAGEOFFSET_12A
IMAGE_REL_ARM64_PAGEOFFSET_12L
IMAGE_REL_ARM64_SECREL
IMAGE_REL_ARM64_SECREL_LOW12A
IMAGE_REL_ARM64_SECREL_HIGH12A
IMAGE_REL_ARM64_SECREL_LOW12L
IMAGE_REL_ARM64_TOKEN
IMAGE_REL_ARM64_SECTION
IMAGE_REL_ARM64_ADDR64
IMAGE_REL_ARM64_BRANCH19
IMAGE_REL_ARM64_BRANCH14
IMAGE_REL_ARM64_REL32
IMAGE_REL_I386_ABSOLUTE
IMAGE_REL_I386_DIR16
IMAGE_REL_I386_REL16
IMAGE_REL_I386_DIR32
IMAGE_REL_I386_DIR32NB
IMAGE_REL_I386_SEG12
IMAGE_REL_I386_SECTION
IMAGE_REL_I386_SECREL
IMAGE_REL_I386_TOKEN
IMAGE_REL_I386_SECREL7
IMAGE_REL_I386_REL32
eh_fram
eh_frame
R_MIPS_NONE
R_MIPS_16
R_MIPS_32
R_MIPS_REL32
R_MIPS_26
R_MIPS_HI16
R_MIPS_LO16
R_MIPS_GPREL16
R_MIPS_LITERAL
R_MIPS_GOT16
R_MIPS_PC16
R_MIPS_CALL16
R_MIPS_GPREL32
R_MIPS_UNUSED1
R_MIPS_UNUSED2
R_MIPS_UNUSED3
R_MIPS_SHIFT5
R_MIPS_SHIFT6
R_MIPS_64
R_MIPS_GOT_DISP
R_MIPS_GOT_PAGE
R_MIPS_GOT_OFST
R_MIPS_GOT_HI16
R_MIPS_GOT_LO16
R_MIPS_SUB
R_MIPS_INSERT_A
R_MIPS_INSERT_B
R_MIPS_DELETE
R_MIPS_HIGHER
R_MIPS_HIGHEST
R_MIPS_CALL_HI16
R_MIPS_CALL_LO16
R_MIPS_SCN_DISP
R_MIPS_REL16
R_MIPS_ADD_IMMEDIATE
R_MIPS_PJUMP
R_MIPS_RELGOT
R_MIPS_JALR
R_MIPS_TLS_DTPMOD32
R_MIPS_TLS_DTPREL32
R_MIPS_TLS_DTPMOD64
R_MIPS_TLS_DTPREL64
R_MIPS_TLS_GD
R_MIPS_TLS_LDM
R_MIPS_TLS_DTPREL_HI16
R_MIPS_TLS_DTPREL_LO16
R_MIPS_TLS_GOTTPREL
R_MIPS_TLS_TPREL32
R_MIPS_TLS_TPREL64
R_MIPS_TLS_TPREL_HI16
R_MIPS_TLS_TPREL_LO16
R_MIPS_GLOB_DAT
R_MIPS_PC21_S2
R_MIPS_PC26_S2
R_MIPS_PC18_S3
R_MIPS_PC19_S2
R_MIPS_PCHI16
R_MIPS_PCLO16
R_MIPS16_26
R_MIPS16_GPREL
R_MIPS16_GOT16
R_MIPS16_CALL16
R_MIPS16_HI16
R_MIPS16_LO16
R_MIPS16_TLS_GD
R_MIPS16_TLS_LDM
R_MIPS16_TLS_DTPREL_HI16
R_MIPS16_TLS_DTPREL_LO16
R_MIPS16_TLS_GOTTPREL
R_MIPS16_TLS_TPREL_HI16
R_MIPS16_TLS_TPREL_LO16
R_MIPS_COPY
R_MIPS_JUMP_SLOT
R_MICROMIPS_26_S1
R_MICROMIPS_HI16
R_MICROMIPS_LO16
R_MICROMIPS_GPREL16
R_MICROMIPS_LITERAL
R_MICROMIPS_GOT16
R_MICROMIPS_PC7_S1
R_MICROMIPS_PC10_S1
R_MICROMIPS_PC16_S1
R_MICROMIPS_CALL16
R_MICROMIPS_GOT_DISP
R_MICROMIPS_GOT_PAGE
R_MICROMIPS_GOT_OFST
R_MICROMIPS_GOT_HI16
R_MICROMIPS_GOT_LO16
R_MICROMIPS_SUB
R_MICROMIPS_HIGHER
R_MICROMIPS_HIGHEST
R_MICROMIPS_CALL_HI16
R_MICROMIPS_CALL_LO16
R_MICROMIPS_SCN_DISP
R_MICROMIPS_JALR
R_MICROMIPS_HI0_LO16
R_MICROMIPS_TLS_GD
R_MICROMIPS_TLS_LDM
R_MICROMIPS_TLS_DTPREL_HI16
R_MICROMIPS_TLS_DTPREL_LO16
R_MICROMIPS_TLS_GOTTPREL
R_MICROMIPS_TLS_TPREL_HI16
R_MICROMIPS_TLS_TPREL_LO16
R_MICROMIPS_GPREL7_S2
R_MICROMIPS_PC23_S2
R_MICROMIPS_PC21_S1
R_MICROMIPS_PC26_S1
R_MICROMIPS_PC18_S3
R_MICROMIPS_PC19_S2
R_MIPS_NUM
R_MIPS_PC32
R_MIPS_EH
R_ARC_NONE
R_ARC_8
R_ARC_16
R_ARC_24
R_ARC_32
R_ARC_N8
R_ARC_N16
R_ARC_N24
R_ARC_N32
R_ARC_SDA
R_ARC_SECTOFF
R_ARC_S21H_PCREL
R_ARC_S21W_PCREL
R_ARC_S25H_PCREL
R_ARC_S25W_PCREL
R_ARC_SDA32
R_ARC_SDA_LDST
R_ARC_SDA_LDST1
R_ARC_SDA_LDST2
R_ARC_SDA16_LD
R_ARC_SDA16_LD1
R_ARC_SDA16_LD2
R_ARC_S13_PCREL
R_ARC_W
R_ARC_32_ME
R_ARC_32_ME_S
R_ARC_N32_ME
R_ARC_SECTOFF_ME
R_ARC_SDA32_ME
R_ARC_W_ME
R_AC_SECTOFF_U8
R_AC_SECTOFF_U8_1
R_AC_SECTOFF_U8_2
R_AC_SECTOFF_S9
R_AC_SECTOFF_S9_1
R_AC_SECTOFF_S9_2
R_ARC_SECTOFF_ME_1
R_ARC_SECTOFF_ME_2
R_ARC_SECTOFF_1
R_ARC_SECTOFF_2
R_ARC_SDA_12
R_ARC_SDA16_ST2
R_ARC_32_PCREL
R_ARC_PC32
R_ARC_GOT32
R_ARC_GOTPC32
R_ARC_PLT32
R_ARC_COPY
R_ARC_GLOB_DAT
R_ARC_JMP_SLOT
R_ARC_RELATIVE
R_ARC_GOTOFF
R_ARC_GOTPC
R_ARC_S21W_PCREL_PLT
R_ARC_S25H_PCREL_PLT
R_ARC_JLI_SECTOFF
R_ARC_TLS_DTPMOD
R_ARC_TLS_TPOFF
R_ARC_TLS_GD_GOT
R_ARC_TLS_GD_LD
R_ARC_TLS_GD_CALL
R_ARC_TLS_IE_GOT
R_ARC_TLS_DTPOFF
R_ARC_TLS_DTPOFF_S9
R_ARC_TLS_LE_S9
R_ARC_TLS_LE_32
R_ARC_S25W_PCREL_PLT
R_ARC_S21H_PCREL_PLT
R_ARC_NPS_CMEM16
R_AVR_NONE
R_AVR_32
R_AVR_7_PCREL
R_AVR_13_PCREL
R_AVR_16
R_AVR_16_PM
R_AVR_LO8_LDI
R_AVR_HI8_LDI
R_AVR_HH8_LDI
R_AVR_LO8_LDI_NEG
R_AVR_HI8_LDI_NEG
R_AVR_HH8_LDI_NEG
R_AVR_LO8_LDI_PM
R_AVR_HI8_LDI_PM
R_AVR_HH8_LDI_PM
R_AVR_LO8_LDI_PM_NEG
R_AVR_HI8_LDI_PM_NEG
R_AVR_HH8_LDI_PM_NEG
R_AVR_CALL
R_AVR_LDI
R_AVR_6
R_AVR_6_ADIW
R_AVR_MS8_LDI
R_AVR_MS8_LDI_NEG
R_AVR_LO8_LDI_GS
R_AVR_HI8_LDI_GS
R_AVR_8
R_AVR_8_LO8
R_AVR_8_HI8
R_AVR_8_HLO8
R_AVR_DIFF8
R_AVR_DIFF16
R_AVR_DIFF32
R_AVR_LDS_STS_16
R_AVR_PORT6
R_AVR_PORT5
R_HEX_NONE
R_HEX_B22_PCREL
R_HEX_B15_PCREL
R_HEX_B7_PCREL
R_HEX_LO16
R_HEX_HI16
R_HEX_32
R_HEX_16
R_HEX_8
R_HEX_GPREL16_0
R_HEX_GPREL16_1
R_HEX_GPREL16_2
R_HEX_GPREL16_3
R_HEX_HL16
R_HEX_B13_PCREL
R_HEX_B9_PCREL
R_HEX_B32_PCREL_X
R_HEX_32_6_X
R_HEX_B22_PCREL_X
R_HEX_B15_PCREL_X
R_HEX_B13_PCREL_X
R_HEX_B9_PCREL_X
R_HEX_B7_PCREL_X
R_HEX_16_X
R_HEX_12_X
R_HEX_11_X
R_HEX_10_X
R_HEX_9_X
R_HEX_8_X
R_HEX_7_X
R_HEX_6_X
R_HEX_32_PCREL
R_HEX_COPY
R_HEX_GLOB_DAT
R_HEX_JMP_SLOT
R_HEX_RELATIVE
R_HEX_PLT_B22_PCREL
R_HEX_GOTREL_LO16
R_HEX_GOTREL_HI16
R_HEX_GOTREL_32
R_HEX_GOT_LO16
R_HEX_GOT_HI16
R_HEX_GOT_32
R_HEX_GOT_16
R_HEX_DTPMOD_32
R_HEX_DTPREL_LO16
R_HEX_DTPREL_HI16
R_HEX_DTPREL_32
R_HEX_DTPREL_16
R_HEX_GD_PLT_B22_PCREL
R_HEX_GD_GOT_LO16
R_HEX_GD_GOT_HI16
R_HEX_GD_GOT_32
R_HEX_GD_GOT_16
R_HEX_IE_LO16
R_HEX_IE_HI16
R_HEX_IE_32
R_HEX_IE_GOT_LO16
R_HEX_IE_GOT_HI16
R_HEX_IE_GOT_32
R_HEX_IE_GOT_16
R_HEX_TPREL_LO16
R_HEX_TPREL_HI16
R_HEX_TPREL_32
R_HEX_TPREL_16
R_HEX_6_PCREL_X
R_HEX_GOTREL_32_6_X
R_HEX_GOTREL_16_X
R_HEX_GOTREL_11_X
R_HEX_GOT_32_6_X
R_HEX_GOT_16_X
R_HEX_GOT_11_X
R_HEX_DTPREL_32_6_X
R_HEX_DTPREL_16_X
R_HEX_DTPREL_11_X
R_HEX_GD_GOT_32_6_X
R_HEX_GD_GOT_16_X
R_HEX_GD_GOT_11_X
R_HEX_IE_32_6_X
R_HEX_IE_16_X
R_HEX_IE_GOT_32_6_X
R_HEX_IE_GOT_16_X
R_HEX_IE_GOT_11_X
R_HEX_TPREL_32_6_X
R_HEX_TPREL_16_X
R_HEX_TPREL_11_X
R_HEX_LD_PLT_B22_PCREL
R_HEX_LD_GOT_LO16
R_HEX_LD_GOT_HI16
R_HEX_LD_GOT_32
R_HEX_LD_GOT_16
R_HEX_LD_GOT_32_6_X
R_HEX_LD_GOT_16_X
R_HEX_LD_GOT_11_X
R_HEX_23_REG
R_HEX_GD_PLT_B22_PCREL_X
R_HEX_GD_PLT_B32_PCREL_X
R_HEX_LD_PLT_B22_PCREL_X
R_HEX_LD_PLT_B32_PCREL_X
R_HEX_27_REG
R_LANAI_NONE
R_LANAI_21
R_LANAI_21_F
R_LANAI_25
R_LANAI_32
R_LANAI_HI16
R_LANAI_LO16
R_PPC_NONE
R_PPC_ADDR32
R_PPC_ADDR24
R_PPC_ADDR16
R_PPC_ADDR16_LO
R_PPC_ADDR16_HI
R_PPC_ADDR16_HA
R_PPC_ADDR14
R_PPC_ADDR14_BRTAKEN
R_PPC_ADDR14_BRNTAKEN
R_PPC_REL24
R_PPC_REL14
R_PPC_REL14_BRTAKEN
R_PPC_REL14_BRNTAKEN
R_PPC_GOT16
R_PPC_GOT16_LO
R_PPC_GOT16_HI
R_PPC_GOT16_HA
R_PPC_PLTREL24
R_PPC_COPY
R_PPC_GLOB_DAT
R_PPC_JMP_SLOT
R_PPC_RELATIVE
R_PPC_LOCAL24PC
R_PPC_UADDR32
R_PPC_UADDR16
R_PPC_REL32
R_PPC_PLT32
R_PPC_PLTREL32
R_PPC_PLT16_LO
R_PPC_PLT16_HI
R_PPC_PLT16_HA
R_PPC_SDAREL16
R_PPC_SECTOFF
R_PPC_SECTOFF_LO
R_PPC_SECTOFF_HI
R_PPC_SECTOFF_HA
R_PPC_ADDR30
R_PPC_TLS
R_PPC_DTPMOD32
R_PPC_TPREL16
R_PPC_TPREL16_LO
R_PPC_TPREL16_HI
R_PPC_TPREL16_HA
R_PPC_TPREL32
R_PPC_DTPREL16
R_PPC_DTPREL16_LO
R_PPC_DTPREL16_HI
R_PPC_DTPREL16_HA
R_PPC_DTPREL32
R_PPC_GOT_TLSGD16
R_PPC_GOT_TLSGD16_LO
R_PPC_GOT_TLSGD16_HI
R_PPC_GOT_TLSGD16_HA
R_PPC_GOT_TLSLD16
R_PPC_GOT_TLSLD16_LO
R_PPC_GOT_TLSLD16_HI
R_PPC_GOT_TLSLD16_HA
R_PPC_GOT_TPREL16
R_PPC_GOT_TPREL16_LO
R_PPC_GOT_TPREL16_HI
R_PPC_GOT_TPREL16_HA
R_PPC_GOT_DTPREL16
R_PPC_GOT_DTPREL16_LO
R_PPC_GOT_DTPREL16_HI
R_PPC_GOT_DTPREL16_HA
R_PPC_TLSGD
R_PPC_TLSLD
R_PPC_IRELATIVE
R_PPC_REL16
R_PPC_REL16_LO
R_PPC_REL16_HI
R_PPC_REL16_HA
R_PPC64_NONE
R_PPC64_ADDR32
R_PPC64_ADDR24
R_PPC64_ADDR16
R_PPC64_ADDR16_LO
R_PPC64_ADDR16_HI
R_PPC64_ADDR16_HA
R_PPC64_ADDR14
R_PPC64_ADDR14_BRTAKEN
R_PPC64_ADDR14_BRNTAKEN
R_PPC64_REL24
R_PPC64_REL14
R_PPC64_REL14_BRTAKEN
R_PPC64_REL14_BRNTAKEN
R_PPC64_GOT16
R_PPC64_GOT16_LO
R_PPC64_GOT16_HI
R_PPC64_GOT16_HA
R_PPC64_COPY
R_PPC64_GLOB_DAT
R_PPC64_JMP_SLOT
R_PPC64_RELATIVE
R_PPC64_REL32
R_PPC64_ADDR64
R_PPC64_ADDR16_HIGHER
R_PPC64_ADDR16_HIGHERA
R_PPC64_ADDR16_HIGHEST
R_PPC64_ADDR16_HIGHESTA
R_PPC64_REL64
R_PPC64_TOC16
R_PPC64_TOC16_LO
R_PPC64_TOC16_HI
R_PPC64_TOC16_HA
R_PPC64_TOC
R_PPC64_ADDR16_DS
R_PPC64_ADDR16_LO_DS
R_PPC64_GOT16_DS
R_PPC64_GOT16_LO_DS
R_PPC64_TOC16_DS
R_PPC64_TOC16_LO_DS
R_PPC64_TLS
R_PPC64_DTPMOD64
R_PPC64_TPREL16
R_PPC64_TPREL16_LO
R_PPC64_TPREL16_HI
R_PPC64_TPREL16_HA
R_PPC64_TPREL64
R_PPC64_DTPREL16
R_PPC64_DTPREL16_LO
R_PPC64_DTPREL16_HI
R_PPC64_DTPREL16_HA
R_PPC64_DTPREL64
R_PPC64_GOT_TLSGD16
R_PPC64_GOT_TLSGD16_LO
R_PPC64_GOT_TLSGD16_HI
R_PPC64_GOT_TLSGD16_HA
R_PPC64_GOT_TLSLD16
R_PPC64_GOT_TLSLD16_LO
R_PPC64_GOT_TLSLD16_HI
R_PPC64_GOT_TLSLD16_HA
R_PPC64_GOT_TPREL16_DS
R_PPC64_GOT_TPREL16_LO_DS
R_PPC64_GOT_TPREL16_HI
R_PPC64_GOT_TPREL16_HA
R_PPC64_GOT_DTPREL16_DS
R_PPC64_GOT_DTPREL16_LO_DS
R_PPC64_GOT_DTPREL16_HI
R_PPC64_GOT_DTPREL16_HA
R_PPC64_TPREL16_DS
R_PPC64_TPREL16_LO_DS
R_PPC64_TPREL16_HIGHER
R_PPC64_TPREL16_HIGHERA
R_PPC64_TPREL16_HIGHEST
R_PPC64_TPREL16_HIGHESTA
R_PPC64_DTPREL16_DS
R_PPC64_DTPREL16_LO_DS
R_PPC64_DTPREL16_HIGHER
R_PPC64_DTPREL16_HIGHERA
R_PPC64_DTPREL16_HIGHEST
R_PPC64_DTPREL16_HIGHESTA
R_PPC64_TLSGD
R_PPC64_TLSLD
R_PPC64_ADDR16_HIGH
R_PPC64_ADDR16_HIGHA
R_PPC64_TPREL16_HIGH
R_PPC64_TPREL16_HIGHA
R_PPC64_DTPREL16_HIGH
R_PPC64_DTPREL16_HIGHA
R_PPC64_REL24_NOTOC
R_PPC64_PCREL_OPT
R_PPC64_PCREL34
R_PPC64_GOT_PCREL34
R_PPC64_TPREL34
R_PPC64_DTPREL34
R_PPC64_GOT_TLSGD_PCREL34
R_PPC64_GOT_TLSLD_PCREL34
R_PPC64_GOT_TPREL_PCREL34
R_PPC64_IRELATIVE
R_PPC64_REL16
R_PPC64_REL16_LO
R_PPC64_REL16_HI
R_PPC64_REL16_HA
R_RISCV_NONE
R_RISCV_32
R_RISCV_64
R_RISCV_RELATIVE
R_RISCV_COPY
R_RISCV_JUMP_SLOT
R_RISCV_TLS_DTPMOD32
R_RISCV_TLS_DTPMOD64
R_RISCV_TLS_DTPREL32
R_RISCV_TLS_DTPREL64
R_RISCV_TLS_TPREL32
R_RISCV_TLS_TPREL64
R_RISCV_BRANCH
R_RISCV_JAL
R_RISCV_CALL
R_RISCV_CALL_PLT
R_RISCV_GOT_HI20
R_RISCV_TLS_GOT_HI20
R_RISCV_TLS_GD_HI20
R_RISCV_PCREL_HI20
R_RISCV_PCREL_LO12_I
R_RISCV_PCREL_LO12_S
R_RISCV_HI20
R_RISCV_LO12_I
R_RISCV_LO12_S
R_RISCV_TPREL_HI20
R_RISCV_TPREL_LO12_I
R_RISCV_TPREL_LO12_S
R_RISCV_TPREL_ADD
R_RISCV_ADD8
R_RISCV_ADD16
R_RISCV_ADD32
R_RISCV_ADD64
R_RISCV_SUB8
R_RISCV_SUB16
R_RISCV_SUB32
R_RISCV_SUB64
R_RISCV_GNU_VTINHERIT
R_RISCV_GNU_VTENTRY
R_RISCV_ALIGN
R_RISCV_RVC_BRANCH
R_RISCV_RVC_JUMP
R_RISCV_RVC_LUI
R_RISCV_GPREL_I
R_RISCV_GPREL_S
R_RISCV_TPREL_I
R_RISCV_TPREL_S
R_RISCV_RELAX
R_RISCV_SUB6
R_RISCV_SET6
R_RISCV_SET8
R_RISCV_SET16
R_RISCV_SET32
R_RISCV_32_PCREL
R_RISCV_IRELATIVE
R_390_NONE
R_390_8
R_390_12
R_390_16
R_390_32
R_390_PC32
R_390_GOT12
R_390_GOT32
R_390_PLT32
R_390_COPY
R_390_GLOB_DAT
R_390_JMP_SLOT
R_390_RELATIVE
R_390_GOTOFF
R_390_GOTPC
R_390_GOT16
R_390_PC16
R_390_PC16DBL
R_390_PLT16DBL
R_390_PC32DBL
R_390_PLT32DBL
R_390_GOTPCDBL
R_390_64
R_390_PC64
R_390_GOT64
R_390_PLT64
R_390_GOTENT
R_390_GOTOFF16
R_390_GOTOFF64
R_390_GOTPLT12
R_390_GOTPLT16
R_390_GOTPLT32
R_390_GOTPLT64
R_390_GOTPLTENT
R_390_PLTOFF16
R_390_PLTOFF32
R_390_PLTOFF64
R_390_TLS_LOAD
R_390_TLS_GDCALL
R_390_TLS_LDCALL
R_390_TLS_GD32
R_390_TLS_GD64
R_390_TLS_GOTIE12
R_390_TLS_GOTIE32
R_390_TLS_GOTIE64
R_390_TLS_LDM32
R_390_TLS_LDM64
R_390_TLS_IE32
R_390_TLS_IE64
R_390_TLS_IEENT
R_390_TLS_LE32
R_390_TLS_LE64
R_390_TLS_LDO32
R_390_TLS_LDO64
R_390_TLS_DTPMOD
R_390_TLS_DTPOFF
R_390_TLS_TPOFF
R_390_20
R_390_GOT20
R_390_GOTPLT20
R_390_TLS_GOTIE20
R_390_IRELATIVE
R_390_PC12DBL
R_390_PLT12DBL
R_390_PC24DBL
R_390_PLT24DBL
R_SPARC_NONE
R_SPARC_8
R_SPARC_16
R_SPARC_32
R_SPARC_DISP8
R_SPARC_DISP16
R_SPARC_DISP32
R_SPARC_WDISP30
R_SPARC_WDISP22
R_SPARC_HI22
R_SPARC_22
R_SPARC_13
R_SPARC_LO10
R_SPARC_GOT10
R_SPARC_GOT13
R_SPARC_GOT22
R_SPARC_PC10
R_SPARC_PC22
R_SPARC_WPLT30
R_SPARC_COPY
R_SPARC_GLOB_DAT
R_SPARC_JMP_SLOT
R_SPARC_RELATIVE
R_SPARC_UA32
R_SPARC_PLT32
R_SPARC_HIPLT22
R_SPARC_LOPLT10
R_SPARC_PCPLT32
R_SPARC_PCPLT22
R_SPARC_PCPLT10
R_SPARC_10
R_SPARC_11
R_SPARC_64
R_SPARC_OLO10
R_SPARC_HH22
R_SPARC_HM10
R_SPARC_LM22
R_SPARC_PC_HH22
R_SPARC_PC_HM10
R_SPARC_PC_LM22
R_SPARC_WDISP16
R_SPARC_WDISP19
R_SPARC_7
R_SPARC_5
R_SPARC_6
R_SPARC_DISP64
R_SPARC_PLT64
R_SPARC_HIX22
R_SPARC_LOX10
R_SPARC_H44
R_SPARC_M44
R_SPARC_L44
R_SPARC_REGISTER
R_SPARC_UA64
R_SPARC_UA16
R_SPARC_TLS_GD_HI22
R_SPARC_TLS_GD_LO10
R_SPARC_TLS_GD_ADD
R_SPARC_TLS_GD_CALL
R_SPARC_TLS_LDM_HI22
R_SPARC_TLS_LDM_LO10
R_SPARC_TLS_LDM_ADD
R_SPARC_TLS_LDM_CALL
R_SPARC_TLS_LDO_HIX22
R_SPARC_TLS_LDO_LOX10
R_SPARC_TLS_LDO_ADD
R_SPARC_TLS_IE_HI22
R_SPARC_TLS_IE_LO10
R_SPARC_TLS_IE_LD
R_SPARC_TLS_IE_LDX
R_SPARC_TLS_IE_ADD
R_SPARC_TLS_LE_HIX22
R_SPARC_TLS_LE_LOX10
R_SPARC_TLS_DTPMOD32
R_SPARC_TLS_DTPMOD64
R_SPARC_TLS_DTPOFF32
R_SPARC_TLS_DTPOFF64
R_SPARC_TLS_TPOFF32
R_SPARC_TLS_TPOFF64
R_SPARC_GOTDATA_HIX22
R_SPARC_GOTDATA_LOX10
R_SPARC_GOTDATA_OP_HIX22
R_SPARC_GOTDATA_OP_LOX10
R_SPARC_GOTDATA_OP
R_AMDGPU_NONE
R_AMDGPU_ABS32_LO
R_AMDGPU_ABS32_HI
R_AMDGPU_ABS64
R_AMDGPU_REL32
R_AMDGPU_REL64
R_AMDGPU_ABS32
R_AMDGPU_GOTPCREL
R_AMDGPU_GOTPCREL32_LO
R_AMDGPU_GOTPCREL32_HI
R_AMDGPU_REL32_LO
R_AMDGPU_REL32_HI
R_AMDGPU_RELATIVE64
R_BPF_NONE
R_BPF_64_64
R_BPF_64_32
R_MSP430_NONE
R_MSP430_32
R_MSP430_10_PCREL
R_MSP430_16
R_MSP430_16_PCREL
R_MSP430_16_BYTE
R_MSP430_16_PCREL_BYTE
R_MSP430_2X_PCREL
R_MSP430_RL_PCREL
R_MSP430_8
R_MSP430_SYM_DIFF
R_VE_NONE
R_VE_REFLONG
R_VE_REFQUAD
R_VE_SREL32
R_VE_HI32
R_VE_LO32
R_VE_PC_HI32
R_VE_PC_LO32
R_VE_GOT32
R_VE_GOT_HI32
R_VE_GOT_LO32
R_VE_GOTOFF32
R_VE_GOTOFF_HI32
R_VE_GOTOFF_LO32
R_VE_PLT32
R_VE_PLT_HI32
R_VE_PLT_LO32
R_VE_RELATIVE
R_VE_GLOB_DAT
R_VE_JUMP_SLOT
R_VE_COPY
R_VE_DTPMOD64
R_VE_DTPOFF64
R_VE_TLS_GD_HI32
R_VE_TLS_GD_LO32
R_VE_TPOFF_HI32
R_VE_TPOFF_LO32
R_VE_CALL_HI32
R_VE_CALL_LO32
R_CKCORE_NONE
R_CKCORE_ADDR32
R_CKCORE_PCREL_IMM8_4
R_CKCORE_PCREL_IMM11_2
R_CKCORE_PCREL_IMM4_2
R_CKCORE_PCREL32
R_CKCORE_PCREL_JSR_IMM11_2
R_CKCORE_GNU_VTINHERIT
R_CKCORE_GNU_VTENTRY
R_CKCORE_RELATIVE
R_CKCORE_COPY
R_CKCORE_GLOB_DAT
R_CKCORE_JUMP_SLOT
R_CKCORE_GOTOFF
R_CKCORE_GOTPC
R_CKCORE_GOT32
R_CKCORE_PLT32
R_CKCORE_ADDRGOT
R_CKCORE_ADDRPLT
R_CKCORE_PCREL_IMM26_2
R_CKCORE_PCREL_IMM16_2
R_CKCORE_PCREL_IMM16_4
R_CKCORE_PCREL_IMM10_2
R_CKCORE_PCREL_IMM10_4
R_CKCORE_ADDR_HI16
R_CKCORE_ADDR_LO16
R_CKCORE_GOTPC_HI16
R_CKCORE_GOTPC_LO16
R_CKCORE_GOTOFF_HI16
R_CKCORE_GOTOFF_LO16
R_CKCORE_GOT12
R_CKCORE_GOT_HI16
R_CKCORE_GOT_LO16
R_CKCORE_PLT12
R_CKCORE_PLT_HI16
R_CKCORE_PLT_LO16
R_CKCORE_ADDRGOT_HI16
R_CKCORE_ADDRGOT_LO16
R_CKCORE_ADDRPLT_HI16
R_CKCORE_ADDRPLT_LO16
R_CKCORE_PCREL_JSR_IMM26_2
R_CKCORE_TOFFSET_LO16
R_CKCORE_DOFFSET_LO16
R_CKCORE_PCREL_IMM18_2
R_CKCORE_DOFFSET_IMM18
R_CKCORE_DOFFSET_IMM18_2
R_CKCORE_DOFFSET_IMM18_4
R_CKCORE_GOTOFF_IMM18
R_CKCORE_GOT_IMM18_4
R_CKCORE_PLT_IMM18_4
R_CKCORE_PCREL_IMM7_4
R_CKCORE_TLS_LE32
R_CKCORE_TLS_IE32
R_CKCORE_TLS_GD32
R_CKCORE_TLS_LDM32
R_CKCORE_TLS_LDO32
R_CKCORE_TLS_DTPMOD32
R_CKCORE_TLS_DTPOFF32
R_CKCORE_TLS_TPOFF32
R_CKCORE_PCREL_FLRW_IMM8_4
R_CKCORE_NOJSRI
R_CKCORE_CALLGRAPH
R_CKCORE_IRELATIVE
R_CKCORE_PCREL_BLOOP_IMM4_4
R_CKCORE_PCREL_BLOOP_IMM12_4
R_CKCORE_PCREL_VLRW_IMM12_1
R_CKCORE_PCREL_VLRW_IMM12_2
R_CKCORE_PCREL_VLRW_IMM12_4
R_CKCORE_PCREL_VLRW_IMM12_8
SHT_ARM_EXIDX
SHT_ARM_PREEMPTMAP
SHT_ARM_ATTRIBUTES
SHT_ARM_DEBUGOVERLAY
SHT_ARM_OVERLAYSECTION
SHT_HEX_ORDERED
SHT_X86_64_UNWIND
SHT_MIPS_REGINFO
SHT_MIPS_OPTIONS
SHT_MIPS_DWARF
SHT_MIPS_ABIFLAGS
SHT_RISCV_ATTRIBUTES
SHT_NULL
SHT_PROGBITS
SHT_SYMTAB
SHT_STRTAB
SHT_RELA
SHT_HASH
SHT_DYNAMIC
SHT_NOTE
SHT_REL
SHT_SHLIB
SHT_DYNSYM
SHT_INIT_ARRAY
SHT_FINI_ARRAY
SHT_PREINIT_ARRAY
SHT_GROUP
SHT_SYMTAB_SHNDX
SHT_RELR
SHT_ANDROID_REL
SHT_ANDROID_RELA
SHT_ANDROID_RELR
SHT_LLVM_ODRTAB
SHT_LLVM_LINKER_OPTIONS
SHT_LLVM_CALL_GRAPH_PROFILE
SHT_LLVM_ADDRSIG
SHT_LLVM_DEPENDENT_LIBRARIES
SHT_LLVM_SYMPART
SHT_LLVM_PART_EHDR
SHT_LLVM_PART_PHDR
SHT_LLVM_BB_ADDR_MAP
SHT_GNU_ATTRIBUTES
SHT_GNU_HASH
SHT_GNU_verdef
SHT_GNU_verneed
SHT_GNU_versym
File
Insufficient alignment
Invalid ELF data
Invalid ELF class
mips2
mips3
mips4
mips5
mips32
mips32r2
mips64r2
mips32r6
cnmips
mips16
micromips
r630
rs880
rv670
rv710
rv730
rv770
cedar
cypress
juniper
redwood
sumo
barts
caicos
cayman
turks
gfx600
gfx601
gfx602
gfx700
gfx701
gfx702
gfx703
gfx704
gfx705
gfx801
gfx802
gfx803
gfx805
gfx810
gfx900
gfx902
gfx904
gfx906
gfx908
gfx909
gfx90c
gfx1010
gfx1011
gfx1012
gfx1030
gfx1031
gfx1032
gfx1033
v5tej
invalid buffer: the size (
) is smaller than an ELF header (
invalid e_shentsize in ELF header: 
section header table goes past the end of the file: e_shoff = 0x
invalid number of sections specified in the NULL section's sh_size field (
invalid section header table offset (e_shoff = 0x
) or invalid number of sections specified in the first section header's sh_size field (0x
section table goes past the end of file
invalid section index: 
can't read an entry at 0x
: it goes past the end of the section (0x
section 
 has invalid sh_entsize: expected 
, but got 
 has an invalid sh_size (
) which is not a multiple of its sh_entsize (
 has a sh_offset (0x
) + sh_size (0x
) that cannot be represented
) that is greater than the file size (0x
[index 
invalid sh_type for string table section 
: expected SHT_STRTAB, but got 
SHT_STRTAB string table section 
 is empty
 is non-null terminated
st_name (0x%x) is past the end of the string table of size 0x%zx
SHT_SYMTAB_SHNDX section is linked with 
 section (expected SHT_SYMTAB/SHT_DYNSYM)
SHT_SYMTAB_SHNDX has 
 entries, but the symbol table associated has 
extended symbol index (
) is past the end of the SHT_SYMTAB_SHNDX section of size 
e_shstrndx == SHN_XINDEX, but the section header table is empty
section header string table index 
 does not exist
a section 
 has an invalid sh_name (0x
) offset which goes past the end of the section name string table
elf32-i386
elf32-iamcu
elf32-x86-64
elf32-littlearm
elf32-bigarm
elf32-avr
elf32-hexagon
elf32-lanai
elf32-mips
elf32-msp430
elf32-powerpcle
elf32-powerpc
elf32-littleriscv
elf32-csky
elf32-sparc
elf32-amdgpu
elf32-unknown
elf64-i386
elf64-x86-64
elf64-littleaarch64
elf64-bigaarch64
elf64-powerpcle
elf64-powerpc
elf64-littleriscv
elf64-s390
elf64-sparc
elf64-mips
elf64-amdgpu
elf64-bpf
elf64-ve
elf64-unknown
Invalid ELFCLASS!
Section is not SHT_RELA
llvm.object
No object file for requested architecture
The file was not recognized as a valid object file
Invalid data was encountered while parsing the file
The end of the file was unexpectedly encountered
String table must end with a null terminator
Invalid section index
Bitcode section not found in object file
Invalid symbol index
Bitcode file does not contain any modules
LLVM_OVERRIDE_PRODUCER
input module has no datalayout
Only variables can have common linkage!
Unable to determine comdat of alias!
Invalid weak external
Could not find leader
load commands extend past the end of the file
universal header architecture: 
's cputype does not match object file's mach header
Mach-O headers
load command 
 cmdsize not a multiple of 8
 cmdsize not a multiple of 4
LC_DATA_IN_CODE
data in code info
LC_LINKER_OPTIMIZATION_HINT
linker optimization hints
LC_FUNCTION_STARTS
function starts data
LC_SEGMENT_SPLIT_INFO
split info data
LC_DYLIB_CODE_SIGN_DRS
code signing RDs data
LC_CODE_SIGNATURE
code signature data
LC_DYLD_INFO
LC_DYLD_INFO_ONLY
LC_DYLD_EXPORTS_TRIE
export trie
LC_DYLD_CHAINED_FIXUPS
chained fixups
LC_UUID command 
 has incorrect cmdsize
more than one LC_UUID command
LC_SEGMENT_64
LC_SEGMENT
LC_LOAD_DYLIB
LC_LOAD_WEAK_DYLIB
LC_LAZY_LOAD_DYLIB
LC_REEXPORT_DYLIB
LC_LOAD_UPWARD_DYLIB
LC_ID_DYLINKER
LC_LOAD_DYLINKER
LC_DYLD_ENVIRONMENT
LC_VERSION_MIN_MACOSX
LC_VERSION_MIN_IPHONEOS
LC_VERSION_MIN_TVOS
LC_VERSION_MIN_WATCHOS
LC_SOURCE_VERSION command 
more than one LC_SOURCE_VERSION command
LC_MAIN command 
more than one LC_MAIN command
LC_ENCRYPTION_INFO command 
LC_ENCRYPTION_INFO
LC_ENCRYPTION_INFO_64 command 
LC_ENCRYPTION_INFO_64
 LC_SUB_FRAMEWORK cmdsize too small
LC_SUB_FRAMEWORK
sub_framework_command
umbrella
 LC_SUB_UMBRELLA cmdsize too small
LC_SUB_UMBRELLA
sub_umbrella_command
sub_umbrella
 LC_SUB_LIBRARY cmdsize too small
LC_SUB_LIBRARY
sub_library_command
sub_library
 LC_SUB_CLIENT cmdsize too small
LC_SUB_CLIENT
sub_client_command
client
LC_ROUTINES command 
more than one LC_ROUTINES and or LC_ROUTINES_64 command
LC_ROUTINES_64 command 
more than one LC_ROUTINES_64 and or LC_ROUTINES command
LC_UNIXTHREAD
more than one LC_UNIXTHREAD command
LC_THREAD
 for cmd value of: 
 is obsolete and not supported
MH_SIM_SUPPORT files only support LC_BUILD_VERSION and LC_VERSION_MIN_MACOSX load commands
LC_BUILD_VERSION and some LC_VERSION_MIN load command also found
contains LC_DYSYMTAB load command without a LC_SYMTAB load command
ilocalsym in LC_DYSYMTAB load command extends past the end of the symbol table
ilocalsym plus nlocalsym in LC_DYSYMTAB load command extends past the end of the symbol table
iextdefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iextdefsym plus nextdefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iundefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iundefsym plus nundefsym in LC_DYSYMTAB load  command extends past the end of the symbol table
no LC_ID_DYLIB load command in dynamic library filetype
bad section index: 
 for symbol at index 
bad string index: 
__bitcode
GENERIC_RELOC_VANILLA
GENERIC_RELOC_PAIR
GENERIC_RELOC_SECTDIFF
GENERIC_RELOC_PB_LA_PTR
GENERIC_RELOC_LOCAL_SECTDIFF
GENERIC_RELOC_TLV
X86_64_RELOC_UNSIGNED
X86_64_RELOC_SIGNED
X86_64_RELOC_BRANCH
X86_64_RELOC_GOT_LOAD
X86_64_RELOC_GOT
X86_64_RELOC_SUBTRACTOR
X86_64_RELOC_SIGNED_1
X86_64_RELOC_SIGNED_2
X86_64_RELOC_SIGNED_4
X86_64_RELOC_TLV
ARM_RELOC_VANILLA
ARM_RELOC_PAIR
ARM_RELOC_SECTDIFF
ARM_RELOC_LOCAL_SECTDIFF
ARM_RELOC_PB_LA_PTR
ARM_RELOC_BR24
ARM_THUMB_RELOC_BR22
ARM_THUMB_32BIT_BRANCH
ARM_RELOC_HALF
ARM_RELOC_HALF_SECTDIFF
ARM64_RELOC_UNSIGNED
ARM64_RELOC_SUBTRACTOR
ARM64_RELOC_BRANCH26
ARM64_RELOC_PAGE21
ARM64_RELOC_PAGEOFF12
ARM64_RELOC_GOT_LOAD_PAGE21
ARM64_RELOC_GOT_LOAD_PAGEOFF12
ARM64_RELOC_POINTER_TO_GOT
ARM64_RELOC_TLVP_LOAD_PAGE21
ARM64_RELOC_TLVP_LOAD_PAGEOFF12
ARM64_RELOC_ADDEND
ARM64_RELOC_AUTHENTICATED_POINTER
PPC_RELOC_VANILLA
PPC_RELOC_PAIR
PPC_RELOC_BR14
PPC_RELOC_BR24
PPC_RELOC_HI16
PPC_RELOC_LO16
PPC_RELOC_HA16
PPC_RELOC_LO14
PPC_RELOC_SECTDIFF
PPC_RELOC_PB_LA_PTR
PPC_RELOC_HI16_SECTDIFF
PPC_RELOC_LO16_SECTDIFF
PPC_RELOC_HA16_SECTDIFF
PPC_RELOC_JBSR
PPC_RELOC_LO14_SECTDIFF
PPC_RELOC_LOCAL_SECTDIFF
Requested symbol index is out of range.
getSymbolIndex() called with no symbol table symbol
Mach-O 32-bit i386
Mach-O arm
Mach-O arm64 (ILP32)
Mach-O 32-bit ppc
Mach-O 32-bit unknown
Mach-O 64-bit x86-64
Mach-O arm64
Mach-O 64-bit ppc64
Mach-O 64-bit unknown
i386-apple-darwin
x86_64-apple-darwin
x86_64h-apple-darwin
armv4t-apple-darwin
armv5e
armv5e-apple-darwin
xscale-apple-darwin
armv6-apple-darwin
armv6m
armv6m-apple-darwin
armv7-apple-darwin
armv7em
thumbv7em-apple-darwin
armv7k-apple-darwin
armv7m
thumbv7m-apple-darwin
armv7s-apple-darwin
arm64-apple-darwin
arm64e-apple-darwin
arm64_32-apple-darwin
ppc-apple-darwin
ppc64-apple-darwin
 extends past end of file
Unrecognized MachO magic number
debug_str_offs
debug_str_offsets
truncated or malformed object (
load command 0 extends past the end all load commands in the file
 with size less than 8 bytes
Structure read out-of-range
 LC_SYMTAB cmdsize too small
more than one LC_SYMTAB command
LC_SYMTAB command 
symoff field of LC_SYMTAB command 
 extends past the end of the file
struct nlist_64
struct nlist
symoff field plus nsyms field times sizeof(
) of LC_SYMTAB command 
symbol table
stroff field of LC_SYMTAB command 
stroff field plus strsize field of LC_SYMTAB command 
string table
 with a size of 
, overlaps 
 LC_DYSYMTAB cmdsize too small
more than one LC_DYSYMTAB command
LC_DYSYMTAB command 
tocoff field of LC_DYSYMTAB command 
tocoff field plus ntoc field times sizeof(struct dylib_table_of_contents) of LC_DYSYMTAB command 
table of contents
modtaboff field of LC_DYSYMTAB command 
struct dylib_module_64
struct dylib_module
modtaboff field plus nmodtab field times sizeof(
) of LC_DYSYMTAB command 
module table
extrefsymoff field of LC_DYSYMTAB command 
extrefsymoff field plus nextrefsyms field times sizeof(struct dylib_reference) of LC_DYSYMTAB command 
reference table
indirectsymoff field of LC_DYSYMTAB command 
indirectsymoff field plus nindirectsyms field times sizeof(uint32_t) of LC_DYSYMTAB command 
indirect table
extreloff field of LC_DYSYMTAB command 
extreloff field plus nextrel field times sizeof(struct relocation_info) of LC_DYSYMTAB command 
external relocation table
locreloff field of LC_DYSYMTAB command 
locreloff field plus nlocrel field times sizeof(struct relocation_info) of LC_DYSYMTAB command 
local relocation table
 cmdsize too small
more than one 
 command
 command 
dataoff field of 
dataoff field plus datasize field of 
more than one LC_DYLD_INFO and or LC_DYLD_INFO_ONLY command
rebase_off field of 
rebase_off field plus rebase_size field of 
dyld rebase info
bind_off field of 
bind_off field plus bind_size field of 
dyld bind info
weak_bind_off field of 
weak_bind_off field plus weak_bind_size field of 
dyld weak bind info
lazy_bind_off field of 
lazy_bind_off field plus lazy_bind_size field of 
dyld lazy bind info
export_off field of 
export_off field plus export_size field of 
dyld export info
LC_ID_DYLIB
more than one LC_ID_DYLIB command
LC_ID_DYLIB load command in non-dynamic library file type
 name.offset field too small, not past the end of the dylib_command struct
 name.offset field extends past the end of the load command
 library name extends past the end of the load command
 name.offset field too small, not past the end of the dylinker_command struct
 dyld name extends past the end of the load command
more than one LC_VERSION_MIN_MACOSX, LC_VERSION_MIN_IPHONEOS, LC_VERSION_MIN_TVOS or LC_VERSION_MIN_WATCHOS command
 LC_NOTE has incorrect cmdsize
offset field of LC_NOTE command 
size field plus offset field of LC_NOTE command 
LC_NOTE data
 LC_BUILD_VERSION_COMMAND has incorrect cmdsize
more than two LC_BUILD_VERSION load commands
the LC_BUILD_VERSION, command 
, platform value is not allowed when the mach header flag MH_SIM_SUPPORT is set
the two LC_BUILD_VERSION load commands are not for the platforms MACOS and MACCATALYST
 LC_RPATH cmdsize too small
 LC_RPATH path.offset field too small, not past the end of the rpath_command struct
 LC_RPATH path.offset field extends past the end of the load command
 LC_RPATH library name extends past the end of the load command
more than one LC_ENCRYPTION_INFO and or LC_ENCRYPTION_INFO_64 command
cryptoff field of 
cryptoff field plus cryptsize field of 
 LC_LINKER_OPTION cmdsize too small
 LC_LINKER_OPTION string #
 is not NULL terminated
 LC_LINKER_OPTION string count 
 does not match number of strings
.offset field too small, not past the end of the 
.offset field extends past the end of the load command
 name extends past the end of the load command
flavor in 
 extends past end of command
 count in 
 count not x86_THREAD_STATE32_COUNT for flavor number 
 which is a x86_THREAD_STATE32 flavor in 
 x86_THREAD_STATE32 extends past end of command in 
 unknown flavor (
) for flavor number 
 count not x86_THREAD_STATE_COUNT for flavor number 
 which is a x86_THREAD_STATE flavor in 
 x86_THREAD_STATE extends past end of command in 
 count not x86_FLOAT_STATE_COUNT for flavor number 
 which is a x86_FLOAT_STATE flavor in 
 x86_FLOAT_STATE extends past end of command in 
 count not x86_EXCEPTION_STATE_COUNT for flavor number 
 which is a x86_EXCEPTION_STATE flavor in 
 x86_EXCEPTION_STATE extends past end of command in 
 count not x86_THREAD_STATE64_COUNT for flavor number 
 which is a x86_THREAD_STATE64 flavor in 
 x86_THREAD_STATE64 extends past end of command in 
 count not x86_EXCEPTION_STATE64_COUNT for flavor number 
 which is a x86_EXCEPTION_STATE64 flavor in 
 x86_EXCEPTION_STATE64 extends past end of command in 
 count not ARM_THREAD_STATE_COUNT for flavor number 
 which is a ARM_THREAD_STATE flavor in 
 ARM_THREAD_STATE extends past end of command in 
 count not ARM_THREAD_STATE64_COUNT for flavor number 
 which is a ARM_THREAD_STATE64 flavor in 
 ARM_THREAD_STATE64 extends past end of command in 
 count not ARM_EXCEPTION_STATE64_COUNT for flavor number 
 which is a ARM_EXCEPTION_STATE64 flavor in 
 ARM_EXCEPTION_STATE64 extends past end of command in 
 count not PPC_THREAD_STATE_COUNT for flavor number 
 which is a PPC_THREAD_STATE flavor in 
 PPC_THREAD_STATE extends past end of command in 
unknown cputype (
) load command 
 command can't be checked
 LC_TWOLEVEL_HINTS has incorrect cmdsize
more than one LC_TWOLEVEL_HINTS command
offset field of LC_TWOLEVEL_HINTS command 
offset field plus nhints times sizeof(struct twolevel_hint) field of LC_TWOLEVEL_HINTS command 
two level hints
 extends past the end all load commands in the file
Malformed MachO file.
malformed uleb128, extends past end
uleb128 too big for uint64
malformed sleb128, extends past end
class
the mach header extends past the end of the file
 inconsistent cmdsize in 
 for the number of sections
offset field of section 
 not past the headers of the file
offset field plus size field of section 
size field of section 
 greater than the segment
addr field of section 
 less than the segment's vmaddr
addr field plus size of section 
 greater than than the segment's vmaddr plus vmsize
section contents
reloff field of section 
reloff field plus nreloc field times sizeof(struct relocation_info) of section 
section relocation entries
 fileoff field in 
 fileoff field plus filesize field in 
 filesize field in 
 greater than vmsize field
MachOUniversalBinary::ObjectForArch::getAsObjectFile() called when Parent is a nullptr
MachOUniversalBinary::ObjectForArch::getAsArchive() called when Parent is a nullptr
File too small to be a Mach-O universal file
contains zero architecture types
bad magic number
fat_arch
 structs would extend past the end of the file
offset plus size of cputype (
) cpusubtype (
) extends past the end of the file
align (2^
) too large for cputype (
) (maximum 2^
 for cputype (
) not aligned on it's alignment (2^
cputype (
) offset 
 overlaps universal headers
contains two of the same architecture (cputype (
) at offset 
, overlaps cputype (
Unknown architecture named: 
fat file does not contain 
truncated or malformed fat file (
Invalid signature
Invalid version
Cannot handle one of the minidump streams
Duplicate stream type
Bad magic number
Missing version number
Bad version number
Invalid section type: 
dylink section ended prematurely
Names must come after code section
Function named more than once
Invalid name entry
Global named more than once
Segment named more than once
Invalid named data segment
Name sub-section ended prematurely
Name section ended prematurely
Linking data must come after code section
Unexpected metadata version: 
 (Expected: 
Too many segment names
Invalid function symbol: 
Linking sub-section ended prematurely
Linking section ended prematurely
invalid function symbol index
invalid global symbol index
undefined weak global symbol
invalid table symbol index
undefined weak table symbol
invalid data symbol index
invalid data symbol offset
Section symbols must have local binding
invalid event symbol index
Invalid symbol type
Duplicate symbol name 
Bad/duplicate COMDAT name 
Unsupported COMDAT flags
Invalid COMDAT entry type
COMDAT data index out of range
Data segment in two COMDATs
COMDAT function index out of range
Function in two COMDATs
COMDAT section index out of range
Non-custom section in a COMDAT
Producers section does not have unique fields
processed-by
Producers section field is not named one of language, processed-by, or sdk
Producers section contains repeated producer
Producers section ended prematurely
Unknown feature policy prefix
Target features section contains repeated feature "
Target features section ended prematurely
Relocations not in offset order
Bad relocation function index
Bad relocation table index
Bad relocation type index
Bad relocation global index
Bad relocation event index
Bad relocation data index
Bad relocation section index
Bad relocation type: 
Bad relocation offset
Reloc section ended prematurely
dylink
Invalid signature type
Type section ended prematurely
Invalid table element type
Unexpected import kind
Import section ended prematurely
Invalid function type
Function section ended prematurely
Table section ended prematurely
Memory section ended prematurely
Event section ended prematurely
Global section ended prematurely
Invalid function export
Invalid global export
Invalid event export
Unexpected export kind
Export section ended prematurely
Invalid start function
Invalid function count
Code section ended prematurely
Invalid TableIndex
Elem section ended prematurely
Number of data segments does not match DataCount section
Invalid segment size
Data section ended prematurely
IMPORT
TABLE
MEMORY
GLOBAL
EVENT
EXPORT
START
ELEM
DATACOUNT
R_WASM_FUNCTION_INDEX_LEB
R_WASM_TABLE_INDEX_SLEB
R_WASM_TABLE_INDEX_I32
R_WASM_MEMORY_ADDR_LEB
R_WASM_MEMORY_ADDR_SLEB
R_WASM_MEMORY_ADDR_I32
R_WASM_TYPE_INDEX_LEB
R_WASM_GLOBAL_INDEX_LEB
R_WASM_FUNCTION_OFFSET_I32
R_WASM_SECTION_OFFSET_I32
R_WASM_EVENT_INDEX_LEB
R_WASM_MEMORY_ADDR_REL_SLEB
R_WASM_TABLE_INDEX_REL_SLEB
R_WASM_GLOBAL_INDEX_I32
R_WASM_MEMORY_ADDR_LEB64
R_WASM_MEMORY_ADDR_SLEB64
R_WASM_MEMORY_ADDR_I64
R_WASM_MEMORY_ADDR_REL_SLEB64
R_WASM_TABLE_INDEX_SLEB64
R_WASM_TABLE_INDEX_I64
R_WASM_TABLE_NUMBER_LEB
R_WASM_MEMORY_ADDR_TLS_SLEB
R_WASM_FUNCTION_OFFSET_I64
WASM
Zero length section
Section too large
Out of order section type: 
LEB is outside Varuint32 range
EOF while reading string
EOF while reading uint8
LEB is outside Varint32 range
LEB is outside Varuint1 range
Invalid type for ref.null
Invalid opcode in init_expr
Invalid init_expr
EOF while reading float64
: too small to be a resource file
Bad offset for string table entry
Unimplemented Debug Name
64-bit support not implemented yet
aix5coff64-rs6000
aixcoff-rs6000
static-func-full-module-prefix
Use full module build paths in the profile counter names for static functions.
static-func-strip-dirname-prefix
Strip specified level of directory name from source path in the profile counter name for static functions.
enable-name-compression
Enable name/filename string compression
,regular,live_support
-:<>/"'
__llvm_profile_raw_version
__llvm_profile_filename
__DATA,
__LLVM_COV,
.lprfd$M
.lprfc$M
.lprfn$M
.lprfv$M
.lprfnd$M
.lcovmap$M
.lcovfun$M
".lorderfile$M"
__llvm_prf_data
__llvm_prf_cnts
__llvm_prf_names
__llvm_prf_vals
__llvm_prf_vnds
__llvm_covmap
__llvm_covfun
__llvm_orderfile
Unrecognized instrumentation profile encoding format
Invalid instrumentation profile data (bad magic)
Invalid instrumentation profile data (file header is corrupt)
Unsupported instrumentation profile format version
Unsupported instrumentation profile hash type
Too much profile data
Truncated profile data
Malformed instrumentation profile data
No profile data available for function
Function control flow change detected (hash mismatch)
Function basic block count change detected (counter mismatch)
Counter overflow
Function value site count change detected (counter mismatch)
Failed to compress data (zlib)
Failed to uncompress data (zlib)
Empty raw profile file
Profile uses zlib compression but the profile reader was built without zlib support
PGOFuncName
llvm.instrprof
Desired percentile exceeds the maximum cutoff
llvm.sampleprof
Invalid sample profile data (bad magic)
Unsupported sample profile format version
Malformed sample profile data
Unrecognized sample profile encoding format
Profile encoding format unsupported for writing operations
Truncated function name table
Unimplemented feature
Ostream does not support seek
Compress failure
Uncompress failure
Zlib is unavailable
Function hash mismatch
Expected 'mangled_name:NUM:NUM', found 
Expected 'NUM[.NUM]: NUM[ mangled_name:NUM]*', found 
Found non-metadata after metadata: 
 - Offset: 
, Size: 
, Flags: 
Header Size: 
Total Sections Size: 
File Size: 
Profile data remapping cannot be applied to profile data in compact format (original mangled names are not available).
Could not create remapper: 
ProfileSummarySection
NameTableSection
ProfileSymbolListSection
FuncOffsetTableSection
FunctionMetadata
LBRProfileSection
{compressed,
fixlenmd5,
md5,
partial,
unexpected end of memory buffer: 
gcda
adcg
unexpected version: 
+spe
+lse
+rdm
+sve
+sve2
+sve2-aes
+sve2-sm4
+sve2-sha3
+sve2-bitperm
+rcpc
+brbe
+v8.1a
+v8.2a
+v8.3a
+v8.4a
+v8.5a
+v8.6a
+v8.7a
+v8r
v6sm
v6-m
v6kz
v7-a
v7-r
v7-m
v7em
v7e-m
v8-a
v8.1-a
v8.2-a
v8.3-a
v8.4-a
v8.5-a
v8.6-a
v8.7-a
v8-r
v8m.base
v8-m.base
v8-m.main
v8.1-m.main
+vfp2
-vfp2
+vfp2sp
-vfp2sp
+vfp3
-vfp3
+vfp3d16
-vfp3d16
+vfp3d16sp
-vfp3d16sp
+vfp3sp
-vfp3sp
+fp16
-fp16
+vfp4
-vfp4
+vfp4d16
-vfp4d16
+vfp4d16sp
-vfp4d16sp
+vfp4sp
-vfp4sp
+fp-armv8
-fp-armv8
+fp-armv8d16
-fp-armv8d16
+fp-armv8d16sp
-fp-armv8d16sp
+fp-armv8sp
-fp-armv8sp
+fullfp16
-fullfp16
+fp64
-fp64
+d32
-d32
+neon
-neon
+crypto
-crypto
maverick
invalid
vfpv2
vfpv3
vfpv4
vfpv3-d16
vfpv4-d16
fp4-sp-d16
vfpv4-sp-d16
fpv4-sp-d16
fp4-dp-d16
fpv4-dp-d16
fp5-sp-d16
fpv5-sp-d16
fp5-dp-d16
fpv5-dp-d16
fpv5-d16
neon-vfpv3
fp.dp
apcs-gnu
aapcs-linux
5TEJ
v7ve
7E-M
8.1-A
8.2-A
8.3-A
8.4-A
8.5-A
8.6-A
8.7-A
8-M.Baseline
8-M.Mainline
8.1-M.Mainline
vfpv3-fp16
vfpv3-d16-fp16
vfpv3xd
vfpv3xd-fp16
fp-armv8-fullfp16-d16
fp-armv8-fullfp16-sp-d16
neon-fp16
neon-vfpv4
neon-fp-armv8
crypto-neon-fp-armv8
softvfp
+crc
-crc
+sha2
-sha2
+aes
-aes
+dotprod
-dotprod
+dsp
-dsp
+mve
-mve
+mve.fp
-mve.fp
idiv
virt
+ras
-ras
+fp16fml
-fp16fml
+bf16
-bf16
+i8mm
-i8mm
+lob
-lob
+cdecp0
-cdecp0
+cdecp1
-cdecp1
+cdecp2
-cdecp2
+cdecp3
-cdecp3
+cdecp4
-cdecp4
+cdecp5
-cdecp5
+cdecp6
-cdecp6
+cdecp7
-cdecp7
String contains multiple dots
Hex strings require an exponent
Invalid character in significand
Significand has no digits
+Inf
Invalid string length
String has no digits
Invalid string
-Inf
0.0E+0
e+00
Invalid trailing hexadecimal fraction!
Exponent has no digits
Invalid character in exponent
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
Tag_File
Tag_Section
Tag_Symbol
Tag_CPU_raw_name
Tag_CPU_name
Tag_CPU_arch
Tag_CPU_arch_profile
Tag_ARM_ISA_use
Tag_THUMB_ISA_use
Tag_FP_arch
Tag_WMMX_arch
Tag_Advanced_SIMD_arch
Tag_MVE_arch
Tag_PCS_config
Tag_ABI_PCS_R9_use
Tag_ABI_PCS_RW_data
Tag_ABI_PCS_RO_data
Tag_ABI_PCS_GOT_use
Tag_ABI_PCS_wchar_t
Tag_ABI_FP_rounding
Tag_ABI_FP_denormal
Tag_ABI_FP_exceptions
Tag_ABI_FP_user_exceptions
Tag_ABI_FP_number_model
Tag_ABI_align_needed
Tag_ABI_align_preserved
Tag_ABI_enum_size
Tag_ABI_HardFP_use
Tag_ABI_VFP_args
Tag_ABI_WMMX_args
Tag_ABI_optimization_goals
Tag_ABI_FP_optimization_goals
Tag_compatibility
Tag_CPU_unaligned_access
Tag_FP_HP_extension
Tag_ABI_FP_16bit_format
Tag_MPextension_use
Tag_DIV_use
Tag_DSP_extension
Tag_nodefaults
Tag_also_compatible_with
Tag_T2EE_use
Tag_conformance
Tag_Virtualization_use
Tag_VFP_arch
Tag_VFP_HP_extension
Tag_ABI_align8_needed
Tag_ABI_align8_preserved
Pre-v4
ARM v4
ARM v4T
ARM v5T
ARM v5TE
ARM v5TEJ
ARM v6
ARM v6KZ
ARM v6T2
ARM v6K
ARM v7
ARM v6-M
ARM v6S-M
ARM v7E-M
ARM v8
ARM v8-M Baseline
ARM v8-M Mainline
ARM v8.1-M Mainline
CPU_arch
Application
Real-time
Microcontroller
Classic
Not Permitted
Permitted
ARM_ISA_use
Thumb-1
Thumb-2
THUMB_ISA_use
VFPv1
VFPv2
VFPv3
VFPv3-D16
VFPv4
VFPv4-D16
ARMv8-a FP
ARMv8-a FP-D16
FP_arch
WMMXv1
WMMXv2
WMMX_arch
NEONv1
NEONv2+FMA
ARMv8-a NEON
ARMv8.1-a NEON
Advanced_SIMD_arch
MVE integer
MVE integer and float
MVE_arch
Bare Platform
Linux Application
Linux DSO
Palm OS 2004
Reserved (Palm OS)
Symbian OS 2004
Reserved (Symbian OS)
PCS_config
Static Base
Unused
ABI_PCS_R9_use
Absolute
PC-relative
SB-relative
ABI_PCS_RW_data
ABI_PCS_RO_data
Direct
GOT-Indirect
ABI_PCS_GOT_use
2-byte
4-byte
ABI_PCS_wchar_t
IEEE-754
Runtime
ABI_FP_rounding
Sign Only
ABI_FP_denormal
ABI_FP_exceptions
ABI_FP_user_exceptions
Finite Only
RTABI
ABI_FP_number_model
8-byte alignment
4-byte alignment
Reserved
8-byte alignment, 
-byte extended alignment
Not Required
8-byte data alignment
8-byte data and code alignment
8-byte stack alignment, 
-byte data alignment
Int32
External Int32
ABI_enum_size
Single-Precision
Tag_FP_arch (deprecated)
ABI_HardFP_use
AAPCS
AAPCS VFP
ABI_VFP_args
iWMMX
ABI_WMMX_args
Speed
Aggressive Speed
Aggressive Size
Debugging
Best Debugging
ABI_optimization_goals
Accuracy
Best Accuracy
ABI_FP_optimization_goals
No Specific Requirements
AEABI Conformant
AEABI Non-Conformant
v6-style
CPU_unaligned_access
If Available
FP_HP_extension
ABI_FP_16bit_format
MPextension_use
DIV_use
DSP_extension
T2EE_use
Virtualization Extensions
TrustZone + Virtualization Extensions
Virtualization_use
Unspecified Tags UNDEFINED
Stream Error: 
An unspecified error has occurred.
The stream is too short to perform the requested operation.
The buffer size is not a multiple of the array element size.
The specified offset is invalid for the current stream.
An I/O error occurred on the file system.
0x%08x / 0x%08x = %.2f%%
llvmcache.timestamp
Can't get available size
%Y-%m-%d %H:%M:%S
%.9lu
General options
: for the 
 option: 
may only occur zero or one times!
must occur exactly one time!
>...
FALSE
False
' is invalid value for boolean argument! Try 0 or 1
' value invalid for integer argument!
' value invalid for uint argument!
' value invalid for ullong argument!
    
 (default: 
= *unknown option value*
*no default*
= *cannot print option value*
Generic Options
help-list
Display list of available options (--help-list-hidden for more)
help-list-hidden
Display list of all available options
help
Display available options (--help-hidden for more)
Alias for --help
help-hidden
Display all available options
print-options
Print non-default options after command line parsing
print-all-options
Print all option values after command line parsing
version
Display the version of this program
: CommandLine Error: Option '
' registered more than once!
inconsistency in registered CommandLine options
Cannot specify more than one option with cl::ConsumeAfter!
requires a value!
multi-valued option specified with ValueDisallowed modifier!
does not allow a value! '
' specified.
not enough values!
Could not convert UTF16 to UTF8
error - this positional option will never be matched, because it does not Require a value, and a cl::ConsumeAfter option is active!
error - option can never match, because another positional argument will match an unbounded number of values, and this option does not require a value!
' is all messed up!
: Unknown command line argument '
'.  Try: '
 --help'
: Did you mean '
This argument does not take a value.
Instead, it consumes any positional arguments until the next recognized option.
: Not enough positional command line arguments specified!
Must specify at least 
 positional argument
: See: 
 --help
: Too many positional arguments specified!
Can specify at most 
 positional arguments: See: 
must be specified at least once!
may not occur within a group!
' value invalid for floating point argument!
    =
=<value>
<empty>
  This option category has no options.
OVERVIEW: 
USAGE: 
 [subcommand]
 [options]
SUBCOMMAND '
SUBCOMMANDS:
  Type "
 <subcommand> --help" to get more help on a specific subcommand
OPTIONS:
Apple
LLVM
 version 
13.0.0
(clang-1300.0.29.3)
Optimized build
  Default target: 
  Host CPU: 
value
uint
ulong
number
string
char
cl::location(x) specified more than once!
cl::alias must only have one cl::aliasopt(...) specified!
cl::alias must have argument name specified!
cl::alias must have an cl::aliasopt(option) specified!
cl::alias must not have cl::sub(), aliased option's cl::sub() will be used!
zlib error: Z_MEM_ERROR
zlib error: Z_BUF_ERROR
zlib error: Z_STREAM_ERROR
zlib error: Z_DATA_ERROR
unexpected end of data at offset 0x%zx while reading [0x%llx, 0x%llx)
offset 0x%llx is beyond the end of data at 0x%zx
no null terminated string at offset 0x%llx
unable to decode LEB128 at offset 0x%8.8llx: %s
debug-counter
Comma separated list of debug counter skip and count
print-debug-counter
Print out debug counter info after all counters accumulated
DebugCounter Error: 
 does not have an = in it
 is not a number
-skip
 is not a registered counter
-count
 does not end with -skip or -count
 -   
unknown 
 value: 
Attribute
TagName
Description
invalid tag 0x
 at offset 0x
SectionLength
Vendor
unrecognized vendor-name: 
Size
invalid attribute size 
FileAttributes
SectionAttributes
Sections
SymbolAttributes
unrecognized tag 0x
unrecognized format-version: 0x
Section 
invalid section length 
Multiple errors:
line 
Error
Inconvertible error value. An error has occurred that could not be converted to a known std::error_code. Please file a bug.
A file error occurred.
LLVM ERROR: 
LLVM ERROR: out of memory
 at 
atomic_write_error: 
failed_to_create_uniq_file
output_stream_error
failed_to_rename_temp_file
' and '
?*[\
invalid glob pattern: 
view-background
Execute graph viewer in the background. Creates tmp file litter.
Writing '
'... 
Trying 'open' program... 
xdg-open
Trying 'xdg-open' program... 
Graphviz
Running 'Graphviz' program... 
xdot|xdot.py
Running 'xdot.py' program... 
dot|fdp|neato|twopi|circo
-Tps
-Nfontname=Courier
-Gsize=7.5,10
Running '
' program... 
--spartan
dotty
Running 'dotty' program... 
Error: Couldn't find a usable graph viewer program:
  Tried '
Remember to erase graph file: 
neato
twopi
circo
Invalid
bool
signed char
unsigned char
unsigned short
unsigned int
unsigned long
long long
unsigned long long
__int128
unsigned __int128
long double
__float128
decimal64
decimal128
decimal32
decimal16
char32_t
char16_t
char8_t
decltype(auto)
std::nullptr_t
 complex
 imaginary
noexcept
alignof (
const_cast
dynamic_cast
noexcept (
reinterpret_cast
static_cast
sizeof (
sizeof... (
typeid (
throw
%LaL
yptn
'block-literal'
this
(anonymous namespace)
operator&&
operator&
operator&=
operator=
operator()
operator,
operator~
operator delete[]
operator*
operator delete
operator/
operator/=
operator^
operator^=
operator==
operator>=
operator>
operator[]
operator<=
operator<<
operator<<=
operator<
operator-
operator-=
operator*=
operator--
operator new[]
operator!=
operator!
operator new
operator||
operator|
operator|=
operator->*
operator+
operator+=
operator++
operator->
operator?
operator%
operator%=
operator>>
operator>>=
operator<=>
 at offset 
 const
decltype(
struct
union
enum
objc_object
std::basic_string
allocator
basic_string
istream
ostream
iostream
std::basic_string<char, std::char_traits<char>, std::allocator<char> >
std::basic_istream<char, std::char_traits<char> >
std::basic_ostream<char, std::char_traits<char> >
std::basic_iostream<char, std::char_traits<char> >
basic_istream
basic_ostream
basic_iostream
string literal
template parameter object for 
vtable for 
VTT for 
typeinfo for 
typeinfo name for 
covariant return thunk to 
thread-local wrapper routine for 
thread-local initialization routine for 
virtual thunk to 
non-virtual thunk to 
guard variable for 
reference temporary for 
construction vtable for 
invocation function for block in 
Unexpected EOF
LLT_invalid
<stdin>
%.2x
BCSymbolMap Version: 2.0
BCSymbolMap Version:
warning: missing version string. Assuming 1.0.
BCSymbolMap Version: 1.0
warning: symbol map version 
is not supported. Not unobfuscating.
rng-seed
seed
Seed for the random number generator
replacement string contained trailing backslash
invalid backreference string '
Tag_stack_align
Tag_arch
Tag_unaligned_access
Tag_priv_spec
Tag_priv_spec_minor
Tag_priv_spec_revision
No unaligned access
Unaligned access
Unaligned_access
Stack alignment is 
SmallVector unable to grow. Requested capacity (
) is larger than maximum value for size type (
SmallVector capacity unable to grow. Already at maximum size 
Included from 
stats
Enable statistics output from program (available with Asserts)
stats-json
Display statistics as json data
Statistics are disabled.  
Build with asserts or with -DLLVM_FORCE_ENABLE_STATS
Expected 'kind mangled_name mangled_name', found '
Invalid kind, expected 'name', 'type', or 'encoding', found '
Manglings '
' have both been used in prior remappings. Move this remapping earlier in the file.
Could not demangle '
' as a <
>; invalid mangling?
name
track-memory
Enable -time-passes memory tracking (this may be slow)
info-output-file
File to append -stats and -timer output to
sort-timers
In the report, sort the timers in each group in wall clock time order
Error opening info-output-file '
 for appending!
%9lld  
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
   ---User Time---
   --System Time--
   --User+System--
   ---Wall Time---
  ---Mem---
  --- Name ---
Total
"time.
%.*e
.wall
.user
.sys
.mem
misc
Miscellaneous Ungrouped Timers
        -----     
  %7.4f (%5.1f%%)
amdgcn
amdil64
amdil
bpfeb
bpfel
csky
hexagon
hsail64
hsail
kalimba
lanai
le32
le64
mips64
mips64el
mips
mipsel
msp430
nvptx64
nvptx
powerpc64
powerpc64le
powerpc
powerpcle
r600
renderscript32
renderscript64
riscv32
riscv64
shave
sparc
sparcel
sparcv9
spir64
spir
s390x
tcele
wasm32
wasm64
x86_64
xcore
s390
nvvm
riscv
amdhsa
amdpal
ananas
cuda
cloudabi
contiki
darwin
dragonfly
elfiamcu
emscripten
freebsd
fuchsia
haiku
hermit
hurd
kfreebsd
linux
macosx
mesa3d
minix
nvcl
nacl
netbsd
openbsd
rtems
solaris
tvos
bridgeos
driverkit
wasi
watchos
windows
android
code16
coreclr
cygnus
eabi
eabihf
gnuabi64
gnuabin32
gnueabi
gnueabihf
gnux32
itanium
msvc
macabi
musl
musleabi
musleabihf
simulator
ppc64
ppc64le
systemz
mipsn32
mipsr6
maccatalyst
uikitformac
macos
bpf_be
bpf_le
mipseb
mips64r6
sparc64
xcoff
goff
macho
file
directory
Color Options
color
Use colors in output (default=autodetect)
error: 
warning: 
note: 
remark: 
YAML
#;/?:@&=+$,_.!~*'()[]
Cannot consume non-ascii characters
Could not find expected : for simple key
Expected quote at end of scalar
Found unexpected ':' while scanning a plain scalar
,:?[]{}
Found invalid tab character in indentation
Got empty plain scalar
Got empty alias or anchor
Expected a line break after block scalar header
Leading all-spaces line must be smaller than the block indent
A text line is less indented than the block scalar
-?:,[]{}#&*!|>'"%@`
Unrecognized character while tokenizing.
Can only iterate over the stream once
Unknown tag handle 
tag:yaml.org,2002:null
tag:yaml.org,2002:str
tag:yaml.org,2002:map
tag:yaml.org,2002:seq
Unrecognized escape code
Null key in Key Value.
Unexpected token in Key Value.
Unexpected token. Expected Key or Block End
Unexpected token. Expected Key, Flow Entry, or Flow Mapping End.
Unexpected token. Expected Block Entry or Block End.
Could not find closing ]!
Expected , between entries!
tag:yaml.org,2002:
Already encountered an anchor for this node!
Already encountered a tag for this node!
Unexpected token
not a mapping
missing required key '
unknown key '
not a sequence
unknown enumerated scalar
expected sequence of bit values
unexpected scalar in sequence of bit values
unknown bit value
unexpected scalar
Map key must be a scalar
Map value must not be empty
unknown node kind
invalid call
                
invalid boolean
invalid number
out of range number
IO failure on output stream: 
[:<:]]
[:>:]]
alnum
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
alpha
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
blank
cntrl
digit
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
lower
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
punct
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
space
upper
ABCDEFGHIJKLMNOPQRSTUVWXYZ
xdigit
0123456789ABCDEFabcdef
alert
backspace
newline
vertical-tab
form-feed
carriage-return
exclamation-mark
quotation-mark
number-sign
dollar-sign
percent-sign
ampersand
apostrophe
left-parenthesis
right-parenthesis
asterisk
plus-sign
comma
hyphen
hyphen-minus
period
full-stop
slash
solidus
three
four
five
seven
eight
nine
colon
semicolon
less-than-sign
equals-sign
greater-than-sign
question-mark
commercial-at
left-square-bracket
backslash
reverse-solidus
right-square-bracket
circumflex
circumflex-accent
underscore
low-line
grave-accent
left-brace
left-curly-bracket
vertical-line
right-brace
right-curly-bracket
tilde
REG_0x%x
REG_NOMATCH
llvm_regexec() failed to match
REG_BADPAT
invalid regular expression
REG_ECOLLATE
invalid collating element
REG_ECTYPE
invalid character class
REG_EESCAPE
trailing backslash (\)
REG_ESUBREG
invalid backreference number
REG_EBRACK
brackets ([ ]) not balanced
REG_EPAREN
parentheses not balanced
REG_EBRACE
braces not balanced
REG_BADBR
invalid repetition count(s)
REG_ERANGE
invalid character range
REG_ESPACE
out of memory
REG_BADRPT
repetition-operator operand invalid
REG_EMPTY
empty (sub)expression
REG_ASSERT
"can't happen" -- you found a bug
REG_INVARG
invalid argument to regex routine
*** unknown regexp error code ***
x86_64-apple-darwin20.1.0
hw.physicalcpu
-darwin
.0.0
0123456789abcdef
-%%%%%%
HOME
-%%%%%%.
TMPDIR
TEMP
TEMPDIR
colors
PATH
Child timed out but wouldn't die
Error waiting for child process
Program could not be executed
 (core dumped)
" doesn't exist!
Can't redirect stderr to stdout
posix_spawn failed
/dev/null
Cannot posix_spawn_file_actions_addopen
Cannot open file '
' for 
input
output
disable-symbolication
Disable symbolizing crash backtraces.
llvm-symbolizer
Unable to find target for this triple (no targets are registered)
No available targets are compatible with triple "
Cannot choose between targets "
" and "
pthread_attr_init failed
pthread_attr_setstacksize failed
pthread_create failed
pthread_join failed
pthread_attr_destroy failed
implicit-section-name
We do not support this DWARF encoding yet!
names
Header Magic
Header Version
Header Hash Function
Header Bucket Count
Header Hash Count
Header Data Length
HeaderData Die Offset Base
HeaderData Atom Count
Bucket 
Hash in Bucket 
Offset in Bucket 
Num DIEs
names_start
names_end
names_abbrev_start
names_abbrev_end
names_entries
Header: unit length
Header: version
Header: padding
Header: compilation unit count
Header: local type unit count
Header: foreign type unit count
Header: bucket count
Header: name count
Header: abbreviation table size
Header: augmentation string size
Header: augmentation string
Compilation unit 
String in Bucket 
Abbrev code
End of abbrev
End of abbrev list
End of list: 
Abbreviation code
debug_addr_
start
Length of contribution
DWARF version number
disable-debug-info-print
Disable debug info printing
asm-printer
EmittedInsts
Number of machine instrs printed
Start of file scope inline assembly
End of file scope inline assembly
llvm.pseudo_probe_desc
$local
symbol '
' is already defined
$tlv$init
_tlv_bootstrap
-- Begin function 
patchable-function-prefix
' is a protected alias
' label emitted multiple times to assembly file
implicit-def: 
InstructionMix
BasicBlock: 
BasicBlock
INST_
InstructionCount
NumInstructions
 instructions in function
avoids zero-length function
Address of block that was removed by CodeGen
func_end
-- End function
__morestack_addr
__morestack
.note.GNU-split-stack
.note.GNU-no-split-stack
llvm.init.trampoline
llvm.
.llvm_sympart
exception
function-instrument
xray-instruction-threshold
func_begin
llvm.metadata
llvm.ptrauth
llvm.global_ctors
llvm.global_dtors
unknown special variable
associated data of XXStructor list is not yet supported on AIX
llvm.ident
llvm.commandline
Unsupported usage of llvm.ptrauth global '
Unsupported expression in static initializer: 
_set_
Block address taken
Label of block must be emitted
 %bb.
no GCMetadataPrinter registered for GC: 
xray_instr_map
xray_fn_idx
xray_sleds_start
xray_sleds_end
xray-log-args
xray-always
__patchable_function_entries
target_variant_triple
-byte Reload
-byte Folded Reload
-byte Spill
-byte Folded Spill
 Reload Reuse
(long double) 
!target-index(
undef
DEBUG_LABEL: 
kill:
def 
killed 
0x%llx
Invalid size-changing cast of llvm.ptrauth global
Mismatched address discriminator in llvm.ptrauth global '
  in Loop: Header=BB
 Depth=
This 
Inner 
Loop Header: Depth=
Parent Loop BB
Child Loop BB
 Depth 
 Encoding = 
Encoding = 
DWARF64 Mark
Abbrev [
] 0x
End Of Children Mark
Abbreviation Code
absptr
omit
pcrel
uleb128
sleb128
udata4
udata8
sdata4
sdata8
pcrel udata4
pcrel sdata4
pcrel udata8
pcrel sdata8
indirect pcrel udata4
indirect pcrel sdata4
indirect pcrel udata8
indirect pcrel sdata8
indirect datarel sdata4
indirect datarel sdata8
<unknown encoding>
<inline asm>
Inline asm not supported by this streamer because we don't have an asm parser for this target
Error parsing inline asm
inline asm clobber list contains reserved registers: 
Reserved registers on the clobber list may not be preserved across the asm statement, and clobbering them may lead to undefined behaviour.
private
comment
Unknown special formatter '
' for machine instr: 
Nested variants found in inline asm string: '
Unterminated ${:foo} operand in inline asm string: '
Bad $ operand number in inline asm string: '
Bad ${:} expression in inline asm string: '
Bad ${} expression in inline asm string: '
Invalid $ operand number in inline asm string: '
invalid operand in inline asm: '
.intel_syntax
.att_syntax
trim-var-locs
debug_loc
EOM(1)
EOM(2)
EOM(3)
cu_macro_begin
_BLNK_
__stack_pointer
cu_begin
dwarfdebug
NumCSParams
Number of dbg call site params created
use-dwarf-ranges-base-address-specifier
Use base address specifiers in debug_ranges
generate-arange-section
Generate dwarf aranges
generate-type-units
Generate DWARF4 type units.
split-dwarf-cross-cu-references
Enable cross-cu references in DWO files
use-unknown-locations
Make an absence of debug location information explicit.
At top of block or after label
In all cases
Never
accel-tables
Output dwarf accelerator tables.
Disabled.
Dwarf
DWARF
dwarf-inlined-strings
Use inlined strings rather than string section.
no-dwarf-ranges-section
Disable emission .debug_ranges section.
dwarf-sections-as-references
Use sections+offset as references rather than labels.
use-gnu-debug-macro
Emit the GNU .debug_macro format with DWARF <5
dwarf-op-convert
Enable use of the DWARFv5 DW_OP_convert operator
dwarf-linkage-names
Which DWARF linkage-name attributes to emit.
Abstract
Abstract subprograms
always-use-ranges-in-v5
Always use DW_AT_ranges in DWARFv5 whenever it could allow more address pool entry sharing to reduce relocations/object size
info_string
skel_string
str_offsets_base
rnglists_table_base
rnglists_dwo_table_base
addr_table_base
loclists_table_base
Names
ObjC
namespac
Types
_begin
_end
Length of Public 
 Info
DWARF Version
Offset of Compilation Unit Info
Compilation Unit Length
DIE offset
Attributes: 
External Name
End Mark
Loc expr size
Length of ARange Set
DWARF Arange version number
Offset Into Debug Info Section
Address Size (in bytes)
Segment Size (in bytes)
ARange terminator
Line Number
Macro String
File Number
End Of Macro List Mark
Offset entry count
  base address
  base address index
  starting offset
  ending offset
  start index
  length
Macro information version
Flags: 64 bit, debug_line_offset present
Flags: 32 bit, debug_line_offset present
debug_line_offset
.debug_types
.debug_info
super-register
no DWARF register encoding
sub-register
The generated debug information is too large for the 32-bit DWARF format.
debug_ranges
Length of String Offsets Set
string offset=
__ARRAY_SIZE_TYPE__
debug_info_dwo_
debug_info_
Length of Unit
DWARF Unit Type
Offset Into Abbrev. Section
Type Signature
Type DIE Offset
action_table_base
cst_end
ttbase
@LPStart
>> Call Site 
  On exception at call site 
  Action: cleanup
  Action: 
  Call between 
    has no landing pad
    jumps to 
  On action: cleanup
  On action: 
>> Action Record 
  Catch TypeInfo 
  Filter TypeInfo 
  Cleanup
  No further actions
  Continue to action 
>> Catch TypeInfos <<
TypeInfo 
>> Filter TypeInfos <<
FilterInfo 
@TType
ttbaseref
cst_begin
Call site
-fbasic-block-sections is not yet supported on platforms that do not have general LEB128 directive support.
$cppxdata$
lsda_begin
lsda_end
Number of call sites
LabelStart
LabelEnd
FinallyFunclet
FilterFunction
CatchAll
ExceptionHandler
$stateUnwindMap$
$tryMap$
$ip2state$
MagicNumber
MaxState
UnwindMap
NumTryBlocks
TryBlockMap
IPMapEntries
IPToStateXData
UnwindHelp
ESTypeList
EHFlags
ToState
Action
$handlerMap$
TryLow
TryHigh
CatchHigh
NumCatches
HandlerArray
Adjectives
CatchObjOffset
Handler
ParentFrameOffset
GSCookieOffset
GSCookieXOROffset
EHCookieOffset
EHCookieXOROffset
dtor
catch
@?0?
@4HA
Debug section magic
CodeViewGHash
File index to string table offset subsection
String table
Magic
Section Version
Hash Algorithm
{0:X+} [{1}]
Flags and language
CPUType
Frontend version
Backend version
Null-terminated compiler version string
LF_BUILDINFO index
Inlinee lines subsection
Inlinee lines signature
Inlined function 
 starts at 
Type index of inlined function
Offset into filechecksum table
Starting line number
PtrParent
PtrEnd
Inlinee type index
Symbol subsection for 
PtrNext
Thunk section relative address
Thunk section index
Code size
Ordinal
Function name
Offset after prologue
Offset before epilogue
Function type index
Function section relative address
Function section index
Flags
FrameSize
Padding
Offset of padding
Bytes of callee saved registers
Exception handler offset
Exception handler section
Flags (defines frame register)
Call site offset
Call site section index
Call instruction length
Type index
__vtbl_ptr_type
decltype(nullptr)
HRESULT
wchar_t
long unsigned int
__wchar_t
cannot debug circular reference to unnamed type
_vptr$
TypeIndex
Lexical block name
Subsection size
Record length
Record kind: 
Symbol subsection for globals
Value
Name
DataOffset
Segment
<unnamed-tag>
`anonymous namespace'
target architecture doesn't map to a CodeView CPUType
__cpp_exception
GCC_except_table_end
Analysis containing CSE Info
cseinfo
Analysis for ComputingKnownBits
gisel-known-bits
csemib-dom-threshold
Max number of instructions to scan for CSEMIRBuilder inst dominance checks
GlobalISel Combiner
Control the rules which are enabled. These options all take a comma separated list of rules to disable and may be specified by number or number range (e.g. 1-10).
force-legal-indexing
Force all indexed operations to be legal for the GlobalISel combiner
enable-cse-in-irtranslator
Should enable CSE in irtranslator
gisel-irtranslator
GISelFailure
unable to translate constant: 
Type
unable to translate memop: 
Opcode
unable to translate in big endian mode
unable to lower function: 
Prototype
unable to lower arguments: 
unable to translate instruction: 
IRTranslator LLVM IR -> MI
irtranslator
 (in function: 
IRTranslator
gisel-select
cannot select
Select target instructions out of generic instructions
instruction-select
InstructionSelect
enable-cse-in-legalizer
Should enable CSE in Legalizer
legalizer
gisel-legalize
unable to legalize instruction
inserting blocks is not supported yet
LostDebugLoc
lost 
NumLostDebugLocs
 debug locations during pass
Legalize the Machine IR a function's Machine IR
Legalizer
disable-gisel-legality-check
Don't verify that MIR is fully legal between GlobalISel passes
Custom
Unsupported
localizer-intrablock-scan-threshold
Max number of unrelated insts to scan over during intra-block localization.
Move/duplicate certain instructions close to their use
localizer
Localizer
Mode of the RegBankSelect pass
regbankselect-fast
Run the Fast mode (default mapping)
regbankselect-greedy
Use the Greedy mode (best local mapping)
need testcase to support multiple insertion points
gisel-regbankselect
unable to map instruction
Assign register bank of generic virtual registers
regbankselect
RegBankSelect
GISelFailure: 
dagcombine
NodesCombined
Number of dag nodes combined
PreIndexedNodes
Number of pre-indexed nodes created
PostIndexedNodes
Number of post-indexed nodes created
OpsNarrowed
Number of load/op/store narrowed
LdStFP2Int
Number of fp load/store pairs transformed to int
SlicedLoads
Number of load sliced
NumFPLogicOpsConv
Number of logic ops converted to fp ops
combiner-global-alias-analysis
Enable DAG combiner's use of IR alias analysis
combiner-use-tbaa
Enable DAG combiner's use of TBAA
combiner-stress-load-slicing
Bypass the profitability model of load slicing
combiner-split-load-index
DAG combiner may split indexing from loads
combiner-store-merging
DAG combiner enable merging multiple stores into a wider store
combiner-tokenfactor-inline-limit
Limit the number of operands to inline for Token Factors
combiner-store-merge-dependence-limit
Limit the number of times for the same StoreNode and RootNode to bail out in store merging dependence check
combiner-reduce-load-op-store-width
DAG cominber enable reducing the width of load/op/store sequence
combiner-shrink-load-replace-store-with-store
DAG cominber enable load/<replace bytes>/store with a narrower store
strict-float-cast-overflow
fast-isel-sink-local-values
Sink local values in FastISel
NumFastIselSuccessIndependent
Number of insts selected by target-independent selector
NumFastIselSuccessTarget
Number of insts selected by target-specific selector
NumFastIselDead
Number of dead insts removed on failure
__sync_synchronize
abort
Don't know how to soften fpowi to fpow
Attempt at an invalid promotion-related conversion
Do not know how to expand the result of this operator!
Unable to expand MUL_FIX using MUL_LOHI.
Do not know how to expand this operator's operand!
Unable to promote scalable types using BUILD_VECTOR
enable-legalize-types-checking
Unprocessed value in a map!
Value with legal type was transformed!
Processed value not in any map!
Value in multiple maps!
 ReplacedValues
 PromotedIntegers
 SoftenedFloats
 ScalarizedVectors
 ExpandedIntegers
 ExpandedFloats
 SplitVectors
 WidenedVectors
 PromotedFloats
 SoftPromoteHalfs
Scalarization of scalable vectors is not supported.
Do not know how to scalarize the result of this operator!
Do not know how to scalarize this operator's operand!
Do not know how to split the result of this operator!
Do not know how to split this operator's operand!
Extracting a fixed-length vector from an illegal scalable vector is not yet supported
Generating widen scalable extending vector loads is not yet supported
Using element-wise loads and stores for widening operations is not supported for scalable vectors
disable-dfa-sched
Disable use of DFA during scheduling
dfa-sched-reg-pressure-threshold
Track reg pressure and switch priority to in-depth
NumBacktracks
Number of times scheduler backtracked
NumUnfolds
Number of nodes unfolded
NumDups
Number of duplicated nodes
NumPRCopies
Number of physical register copies
list-burr
Bottom-up register reduction list scheduling
Similar to list-burr but schedules in source order when possible
list-hybrid
Bottom-up register pressure aware list scheduling which tries to balance latency and register pressure
list-ilp
Bottom-up register pressure aware list scheduling which tries to balance ILP and register pressure
disable-sched-cycles
Disable cycle-level precision during preRA scheduling
disable-sched-reg-pressure
Disable regpressure priority in sched=list-ilp
disable-sched-live-uses
Disable live use priority in sched=list-ilp
disable-sched-vrcycle
Disable virtual register cycle interference checks
disable-sched-physreg-join
Disable physreg def-use affinity
disable-sched-stalls
Disable no-stall priority in sched=list-ilp
disable-sched-critical-path
Disable critical path priority in sched=list-ilp
disable-sched-height
Disable scheduled-height priority in sched=list-ilp
disable-2addr-hack
Disable scheduler's two-address hack
max-sched-reorder
Number of instructions to allow ahead of the critical path in sched=list-ilp
sched-avg-ipc
Average inst/cycle whan no target itinerary exists.
Can't handle live physical register dependency!
LoadsClustered
Number of loads clustered together
sched-high-latency-cycles
Roughly estimate the number of cycles that 'long latency'instructions take for targets with no itinerary
sunit-dag.
vliw-td
VLIW scheduler
insert-assert-align
Insert the experimental `assertalign` node.
limit-float-precision
Generate low-precision inline sequences for some float libcalls
switch-peel-threshold
Set the case probability threshold for peeling the case from a switch statement. A value greater than 100 will void this optimization
visitCatchSwitch not yet implemented!
Cannot generate unaligned atomic load
Cannot generate unaligned atomic store
Wrong result type for @llvm.get.dynamic.area.offset intrinsic!
llvm.icall.branch.funnel operand must be a GlobalValue
all llvm.icall.branch.funnel operands must refer to the same GlobalValue
This target doesn't support calls with ptrauth operand bundles.
constraint '
' expects an integer constant expression
couldn't allocate output register for constraint '
inline asm not supported yet: don't know how to handle tied indirect register inputs
inline asm error: This value type register class is not natively supported!
value out of range for constraint '
invalid operand for inline asm constraint '
Don't know how to handle indirect register inputs yet for constraint '
couldn't allocate input reg for constraint '
Unknown mismatch in getCopyFromParts!
non-trivial scalar-to-vector conversion
, possible invalid constraint for vector type
scalar-to-vector conversion failed
write to reserved register '
enable-memcpy-dag-opt
Gang up loads and stores generated by inlining of memcpy
ldstmemcpy-glue-max
Number limit for gluing ld/st of memcpy.
Unsupported element size
cannot lower memory intrinsic in address space 
dag-dump-verbose
Display more information when dumping selection DAG nodes.
<<Unknown DAG Node>>
<<Unknown Machine Node #
<<Unknown Target Node #
<<Unknown Node #
AtomicCmpSwapWithSuccess
ReadCycleCounter
GlobalTLSAddress
PtrAuthGlobalAddress
GLOBAL_OFFSET_TABLE
ADDROFRETURNADDR
FRAME_TO_ARGS_OFFSET
EH_SJLJ_SETUP_DISPATCH
Unknown intrinsic
OpaqueTargetConstant
TargetConstantFP
TargetGlobalAddress
TargetGlobalTLSAddress
TargetFrameIndex
TargetConstantPool
TargetExternalSymbol
TargetBlockAddress
annotation_label
strict_fnearbyint
strict_froundeven
insert_vector_elt
extract_vector_elt
insert_subvector
extract_subvector
scalar_to_vector
sign_extend_inreg
any_extend_vector_inreg
sign_extend_vector_inreg
zero_extend_vector_inreg
strict_fp_extend
strict_sint_to_fp
strict_uint_to_fp
strict_fp_to_sint
strict_fp_to_uint
strict_fp16_to_fp
strict_fp_to_fp16
dynamic_stackalloc
gc_transition.start
gc_transition.end
get.dynamic.area.offset
adjust_trampoline
vecreduce_seq_fadd
vecreduce_seq_fmul
<pre-inc>
<pre-dec>
<post-inc>
<post-dec>
 nofpexcept
Mem:
<APFloat(
 [TF=
<null>
, anyext
, sext
, zext
, trunc to 
, expanding
, compressing
signed
unsigned
scaled
unscaled
 offset
 [ORD=
 [ID=
 # D:
 [NoOfDbgValues=
 [NoOfDbgValues>0]
 DbgVal(Order=
(Invalidated)
(Emitted)
(SDNODE=
(SDNODE)
(CONST)
(FRAMEIX=
(VREG=
(Indirect)
isel
NumFastIselFailures
Number of instructions fast isel failed on
NumFastIselSuccess
Number of instructions fast isel selected
NumFastIselBlocks
Number of blocks selected entirely by fast isel
NumDAGBlocks
Number of blocks selected using DAG
NumDAGIselRetries
Number of times dag isel has to try another path
NumEntryBlocks
Number of entry blocks encountered
NumFastIselFailLowerArguments
Number of entry blocks where fast isel failed to lower arguments
fast-isel-abort
Enable abort calls when "fast" instruction selection fails to lower an instruction: 0 disable the abort, 1 will abort but for args, calls and terminators, 2 will also abort for argument lowering, and 3 will never fallback to SelectionDAG.
fast-isel-report-on-fallback
Emit a diagnostic when "fast" instruction selection falls back to SelectionDAG.
use-mbpi
use Machine Branch Probability Info
Instruction schedulers available (before register allocation):
Best scheduler for the target
sdag
Instruction Selection and Scheduling
combine1
DAG Combining 1
legalize_types
Type Legalization
combine_lt
DAG Combining after legalize types
legalize_vec
Vector Legalization
legalize_types2
Type Legalization 2
combine_lv
DAG Combining after legalize vectors
legalize
DAG Legalization
combine2
DAG Combining 2
Instruction Selection
sched
Instruction Scheduling
emit
Instruction Creation
cleanup
Instruction Scheduling Cleanup
sdagisel
FastISelFailure
FastISel didn't lower all arguments: 
FastISel missed call
FastISel missed terminator
FastISel missed
Could not match memory address.  Inline asm failure!
COVERED: 
INCLUDED: 
Cannot select: 
In function: 
intrinsic %
target intrinsic %
unknown intrinsic #
CROSS RC COPY
plaintext=circle
color=blue,style=dashed
 label ="
statepoint-lowering
NumSlotsAllocatedForStatepoints
Number of stack slots allocated for statepoints
NumOfStatepoints
Number of statepoint nodes encountered
StatepointMaxSlotsRequired
Maximum number of stack slots required for a singe statepoint
use-registers-for-deopt-values
Allow using registers for non pointer deopt args
max-registers-for-gc-values
Max number of VRegs allowed to pass GC pointer meta args in
statepoint-always-spill-base
Force spilling of base GC pointers
Unsupported library call operation!
Indirect operand for inline asm not a pointer!
Unsupported asm: input constraint with a matching output constraint of incompatible type!
argument to '__builtin_return_address' must be a constant integer
Expanding fminnum/fmaxnum for scalable vectors is undefined.
Cannot scalarize scalable vector loads
Cannot scalarize scalable vector stores
Cannot currently handle compressed memory with scalable vectors
__emutls_v.
__emutls_get_address
Unable to expand fixed point multiplication.
Expanding reductions for scalable vectors is undefined.
Named registers not implemented for this target
CFGuard
__guard_check_icall_fptr
__guard_dispatch_icall_fptr
guard_nocf
APSR
APSR_G
APSR_NZCVQ
APSR_NZCVQG
BASEPRI
BASEPRI_MAX
BASEPRI_NS
CONTROL
CONTROL_NS
EAPSR
EAPSR_G
EAPSR_NZCVQ
EAPSR_NZCVQG
EPSR
FAULTMASK
FAULTMASK_NS
IAPSR
IAPSR_G
IAPSR_NZCVQ
IAPSR_NZCVQG
IEPSR
IPSR
MSPLIM
MSPLIM_NS
MSP_NS
PRIMASK
PRIMASK_NS
PSPLIM
PSPLIM_NS
PSP_NS
SP_NS
XPSR
XPSR_G
XPSR_NZCVQ
XPSR_NZCVQG
ELR_HYP
LR_ABT
LR_FIQ
LR_IRQ
LR_MON
LR_SVC
LR_UND
LR_USR
R10_FIQ
R10_USR
R11_FIQ
R11_USR
R12_FIQ
R12_USR
R8_FIQ
R8_USR
R9_FIQ
R9_USR
SPSR_HYP
SPSR_MON
SPSR_SVC
SP_ABT
SP_FIQ
SP_HYP
SP_IRQ
SP_MON
SP_SVC
SP_UND
SP_USR
apsr_g
apsr_nzcvq
apsr_nzcvqg
basepri
basepri_max
basepri_ns
control
control_ns
eapsr
eapsr_g
eapsr_nzcvq
eapsr_nzcvqg
epsr
faultmask
faultmask_ns
iapsr
iapsr_g
iapsr_nzcvq
iapsr_nzcvqg
iepsr
ipsr
msplim
msplim_ns
msp_ns
primask
primask_ns
psplim
psplim_ns
psp_ns
sp_ns
xpsr
xpsr_g
xpsr_nzcvq
xpsr_nzcvqg
elr_hyp
lr_abt
lr_fiq
lr_irq
lr_mon
lr_svc
lr_und
lr_usr
r10_fiq
r10_usr
r11_fiq
r11_usr
r12_fiq
r12_usr
r8_fiq
r8_usr
r9_fiq
r9_usr
spsr_abt
spsr_fiq
spsr_hyp
spsr_irq
spsr_mon
spsr_svc
spsr_und
sp_abt
sp_fiq
sp_hyp
sp_irq
sp_mon
sp_svc
sp_und
sp_usr
S12E0R
S12E0W
S12E1R
S12E1W
S1E0R
S1E0W
S1E1R
S1E1RP
S1E1W
S1E1WP
S1E2R
S1E2W
S1E3R
S1E3W
ISHNXS
NSHNXS
OSHNXS
SYNXS
ISHLD
ISHST
NSHLD
NSHST
OSHLD
OSHST
CGDSW
CGDVAC
CGDVADP
CGDVAP
CGSW
CGVAC
CGVADP
CGVAP
CIGDSW
CIGDVAC
CIGSW
CIGVAC
CISW
CIVAC
CVAC
CVADP
CVAP
CVAU
GZVA
IGDSW
IGDVAC
IGSW
IGVAC
IVAC
IALLU
IALLUIS
IVAU
CSYNC
RCTX
PLDL1KEEP
PLDL1STRM
PLDL2KEEP
PLDL2STRM
PLDL3KEEP
PLDL3STRM
PLIL1KEEP
PLIL1STRM
PLIL2KEEP
PLIL2STRM
PLIL3KEEP
PLIL3STRM
PSTL1KEEP
PSTL1STRM
PSTL2KEEP
PSTL2STRM
PSTL3KEEP
PSTL3STRM
MUL3
MUL4
POW2
VL128
VL16
VL256
VL32
VL64
DAIFCLR
DAIFSET
SPSEL
SSBS
ACCDATA_EL1
ACTLR_EL1
ACTLR_EL2
ACTLR_EL3
AFSR0_EL1
AFSR0_EL12
AFSR0_EL2
AFSR0_EL3
AFSR1_EL1
AFSR1_EL12
AFSR1_EL2
AFSR1_EL3
AIDR_EL1
AMAIR_EL1
AMAIR_EL12
AMAIR_EL2
AMAIR_EL3
AMCFGR_EL0
AMCGCR_EL0
AMCNTENCLR0_EL0
AMCNTENCLR1_EL0
AMCNTENSET0_EL0
AMCNTENSET1_EL0
AMCR_EL0
AMEVCNTR00_EL0
AMEVCNTR01_EL0
AMEVCNTR02_EL0
AMEVCNTR03_EL0
AMEVCNTR10_EL0
AMEVCNTR110_EL0
AMEVCNTR111_EL0
AMEVCNTR112_EL0
AMEVCNTR113_EL0
AMEVCNTR114_EL0
AMEVCNTR115_EL0
AMEVCNTR11_EL0
AMEVCNTR12_EL0
AMEVCNTR13_EL0
AMEVCNTR14_EL0
AMEVCNTR15_EL0
AMEVCNTR16_EL0
AMEVCNTR17_EL0
AMEVCNTR18_EL0
AMEVCNTR19_EL0
AMEVCNTVOFF00_EL2
AMEVCNTVOFF010_EL2
AMEVCNTVOFF011_EL2
AMEVCNTVOFF012_EL2
AMEVCNTVOFF013_EL2
AMEVCNTVOFF014_EL2
AMEVCNTVOFF015_EL2
AMEVCNTVOFF01_EL2
AMEVCNTVOFF02_EL2
AMEVCNTVOFF03_EL2
AMEVCNTVOFF04_EL2
AMEVCNTVOFF05_EL2
AMEVCNTVOFF06_EL2
AMEVCNTVOFF07_EL2
AMEVCNTVOFF08_EL2
AMEVCNTVOFF09_EL2
AMEVCNTVOFF10_EL2
AMEVCNTVOFF110_EL2
AMEVCNTVOFF111_EL2
AMEVCNTVOFF112_EL2
AMEVCNTVOFF113_EL2
AMEVCNTVOFF114_EL2
AMEVCNTVOFF115_EL2
AMEVCNTVOFF11_EL2
AMEVCNTVOFF12_EL2
AMEVCNTVOFF13_EL2
AMEVCNTVOFF14_EL2
AMEVCNTVOFF15_EL2
AMEVCNTVOFF16_EL2
AMEVCNTVOFF17_EL2
AMEVCNTVOFF18_EL2
AMEVCNTVOFF19_EL2
AMEVTYPER00_EL0
AMEVTYPER01_EL0
AMEVTYPER02_EL0
AMEVTYPER03_EL0
AMEVTYPER10_EL0
AMEVTYPER110_EL0
AMEVTYPER111_EL0
AMEVTYPER112_EL0
AMEVTYPER113_EL0
AMEVTYPER114_EL0
AMEVTYPER115_EL0
AMEVTYPER11_EL0
AMEVTYPER12_EL0
AMEVTYPER13_EL0
AMEVTYPER14_EL0
AMEVTYPER15_EL0
AMEVTYPER16_EL0
AMEVTYPER17_EL0
AMEVTYPER18_EL0
AMEVTYPER19_EL0
AMUSERENR_EL0
APDAKEYHI_EL1
APDAKEYLO_EL1
APDBKEYHI_EL1
APDBKEYLO_EL1
APGAKEYHI_EL1
APGAKEYLO_EL1
APIAKEYHI_EL1
APIAKEYLO_EL1
APIBKEYHI_EL1
APIBKEYLO_EL1
BRBCR_EL1
BRBCR_EL12
BRBCR_EL2
BRBFCR_EL1
BRBIDR0_EL1
BRBINF0_EL1
BRBINF10_EL1
BRBINF11_EL1
BRBINF12_EL1
BRBINF13_EL1
BRBINF14_EL1
BRBINF15_EL1
BRBINF16_EL1
BRBINF17_EL1
BRBINF18_EL1
BRBINF19_EL1
BRBINF1_EL1
BRBINF20_EL1
BRBINF21_EL1
BRBINF22_EL1
BRBINF23_EL1
BRBINF24_EL1
BRBINF25_EL1
BRBINF26_EL1
BRBINF27_EL1
BRBINF28_EL1
BRBINF29_EL1
BRBINF2_EL1
BRBINF30_EL1
BRBINF31_EL1
BRBINF3_EL1
BRBINF4_EL1
BRBINF5_EL1
BRBINF6_EL1
BRBINF7_EL1
BRBINF8_EL1
BRBINF9_EL1
BRBINFINJ_EL1
BRBSRC0_EL1
BRBSRC10_EL1
BRBSRC11_EL1
BRBSRC12_EL1
BRBSRC13_EL1
BRBSRC14_EL1
BRBSRC15_EL1
BRBSRC16_EL1
BRBSRC17_EL1
BRBSRC18_EL1
BRBSRC19_EL1
BRBSRC1_EL1
BRBSRC20_EL1
BRBSRC21_EL1
BRBSRC22_EL1
BRBSRC23_EL1
BRBSRC24_EL1
BRBSRC25_EL1
BRBSRC26_EL1
BRBSRC27_EL1
BRBSRC28_EL1
BRBSRC29_EL1
BRBSRC2_EL1
BRBSRC30_EL1
BRBSRC31_EL1
BRBSRC3_EL1
BRBSRC4_EL1
BRBSRC5_EL1
BRBSRC6_EL1
BRBSRC7_EL1
BRBSRC8_EL1
BRBSRC9_EL1
BRBSRCINJ_EL1
BRBTGT0_EL1
BRBTGT10_EL1
BRBTGT11_EL1
BRBTGT12_EL1
BRBTGT13_EL1
BRBTGT14_EL1
BRBTGT15_EL1
BRBTGT16_EL1
BRBTGT17_EL1
BRBTGT18_EL1
BRBTGT19_EL1
BRBTGT1_EL1
BRBTGT20_EL1
BRBTGT21_EL1
BRBTGT22_EL1
BRBTGT23_EL1
BRBTGT24_EL1
BRBTGT25_EL1
BRBTGT26_EL1
BRBTGT27_EL1
BRBTGT28_EL1
BRBTGT29_EL1
BRBTGT2_EL1
BRBTGT30_EL1
BRBTGT31_EL1
BRBTGT3_EL1
BRBTGT4_EL1
BRBTGT5_EL1
BRBTGT6_EL1
BRBTGT7_EL1
BRBTGT8_EL1
BRBTGT9_EL1
BRBTGTINJ_EL1
BRBTS_EL1
CCSIDR2_EL1
CCSIDR_EL1
CLIDR_EL1
CNTFRQ_EL0
CNTHCTL_EL2
CNTHPS_CTL_EL2
CNTHPS_CVAL_EL2
CNTHPS_TVAL_EL2
CNTHP_CTL_EL2
CNTHP_CVAL_EL2
CNTHP_TVAL_EL2
CNTHVS_CTL_EL2
CNTHVS_CVAL_EL2
CNTHVS_TVAL_EL2
CNTHV_CTL_EL2
CNTHV_CVAL_EL2
CNTHV_TVAL_EL2
CNTISCALE_EL2
CNTKCTL_EL1
CNTKCTL_EL12
CNTPCTSS_EL0
CNTPCT_EL0
CNTPOFF_EL2
CNTPS_CTL_EL1
CNTPS_CVAL_EL1
CNTPS_TVAL_EL1
CNTP_CTL_EL0
CNTP_CTL_EL02
CNTP_CVAL_EL0
CNTP_CVAL_EL02
CNTP_TVAL_EL0
CNTP_TVAL_EL02
CNTSCALE_EL2
CNTVCTSS_EL0
CNTVCT_EL0
CNTVFRQ_EL2
CNTVOFF_EL2
CNTV_CTL_EL0
CNTV_CTL_EL02
CNTV_CVAL_EL0
CNTV_CVAL_EL02
CNTV_TVAL_EL0
CNTV_TVAL_EL02
CONTEXTIDR_EL1
CONTEXTIDR_EL12
CONTEXTIDR_EL2
CPACR_EL1
CPACR_EL12
CPTR_EL2
CPTR_EL3
CSSELR_EL1
CTR_EL0
CURRENTEL
DACR32_EL2
DAIF
DBGAUTHSTATUS_EL1
DBGBCR0_EL1
DBGBCR10_EL1
DBGBCR11_EL1
DBGBCR12_EL1
DBGBCR13_EL1
DBGBCR14_EL1
DBGBCR15_EL1
DBGBCR1_EL1
DBGBCR2_EL1
DBGBCR3_EL1
DBGBCR4_EL1
DBGBCR5_EL1
DBGBCR6_EL1
DBGBCR7_EL1
DBGBCR8_EL1
DBGBCR9_EL1
DBGBVR0_EL1
DBGBVR10_EL1
DBGBVR11_EL1
DBGBVR12_EL1
DBGBVR13_EL1
DBGBVR14_EL1
DBGBVR15_EL1
DBGBVR1_EL1
DBGBVR2_EL1
DBGBVR3_EL1
DBGBVR4_EL1
DBGBVR5_EL1
DBGBVR6_EL1
DBGBVR7_EL1
DBGBVR8_EL1
DBGBVR9_EL1
DBGCLAIMCLR_EL1
DBGCLAIMSET_EL1
DBGDTRRX_EL0
DBGDTRTX_EL0
DBGDTR_EL0
DBGPRCR_EL1
DBGVCR32_EL2
DBGWCR0_EL1
DBGWCR10_EL1
DBGWCR11_EL1
DBGWCR12_EL1
DBGWCR13_EL1
DBGWCR14_EL1
DBGWCR15_EL1
DBGWCR1_EL1
DBGWCR2_EL1
DBGWCR3_EL1
DBGWCR4_EL1
DBGWCR5_EL1
DBGWCR6_EL1
DBGWCR7_EL1
DBGWCR8_EL1
DBGWCR9_EL1
DBGWVR0_EL1
DBGWVR10_EL1
DBGWVR11_EL1
DBGWVR12_EL1
DBGWVR13_EL1
DBGWVR14_EL1
DBGWVR15_EL1
DBGWVR1_EL1
DBGWVR2_EL1
DBGWVR3_EL1
DBGWVR4_EL1
DBGWVR5_EL1
DBGWVR6_EL1
DBGWVR7_EL1
DBGWVR8_EL1
DBGWVR9_EL1
DCZID_EL0
DISR_EL1
DLR_EL0
DSPSR_EL0
ELR_EL1
ELR_EL12
ELR_EL2
ELR_EL3
ERRIDR_EL1
ERRSELR_EL1
ERXADDR_EL1
ERXCTLR_EL1
ERXFR_EL1
ERXMISC0_EL1
ERXMISC1_EL1
ERXMISC2_EL1
ERXMISC3_EL1
ERXPFGCDN_EL1
ERXPFGCTL_EL1
ERXPFGF_EL1
ERXSTATUS_EL1
ESR_EL1
ESR_EL12
ESR_EL2
ESR_EL3
FAR_EL1
FAR_EL12
FAR_EL2
FAR_EL3
FPCR
FPEXC32_EL2
FPSR
GCR_EL1
GMID_EL1
HACR_EL2
HCRX_EL2
HCR_EL2
HDFGRTR_EL2
HDFGWTR_EL2
HFGITR_EL2
HFGRTR_EL2
HFGWTR_EL2
HPFAR_EL2
HSTR_EL2
ICC_AP0R0_EL1
ICC_AP0R1_EL1
ICC_AP0R2_EL1
ICC_AP0R3_EL1
ICC_AP1R0_EL1
ICC_AP1R1_EL1
ICC_AP1R2_EL1
ICC_AP1R3_EL1
ICC_ASGI1R_EL1
ICC_BPR0_EL1
ICC_BPR1_EL1
ICC_CTLR_EL1
ICC_CTLR_EL3
ICC_DIR_EL1
ICC_EOIR0_EL1
ICC_EOIR1_EL1
ICC_HPPIR0_EL1
ICC_HPPIR1_EL1
ICC_IAR0_EL1
ICC_IAR1_EL1
ICC_IGRPEN0_EL1
ICC_IGRPEN1_EL1
ICC_IGRPEN1_EL3
ICC_PMR_EL1
ICC_RPR_EL1
ICC_SGI0R_EL1
ICC_SGI1R_EL1
ICC_SRE_EL1
ICC_SRE_EL2
ICC_SRE_EL3
ICH_AP0R0_EL2
ICH_AP0R1_EL2
ICH_AP0R2_EL2
ICH_AP0R3_EL2
ICH_AP1R0_EL2
ICH_AP1R1_EL2
ICH_AP1R2_EL2
ICH_AP1R3_EL2
ICH_EISR_EL2
ICH_ELRSR_EL2
ICH_HCR_EL2
ICH_LR0_EL2
ICH_LR10_EL2
ICH_LR11_EL2
ICH_LR12_EL2
ICH_LR13_EL2
ICH_LR14_EL2
ICH_LR15_EL2
ICH_LR1_EL2
ICH_LR2_EL2
ICH_LR3_EL2
ICH_LR4_EL2
ICH_LR5_EL2
ICH_LR6_EL2
ICH_LR7_EL2
ICH_LR8_EL2
ICH_LR9_EL2
ICH_MISR_EL2
ICH_VMCR_EL2
ICH_VTR_EL2
ID_AA64AFR0_EL1
ID_AA64AFR1_EL1
ID_AA64DFR0_EL1
ID_AA64DFR1_EL1
ID_AA64ISAR0_EL1
ID_AA64ISAR1_EL1
ID_AA64ISAR2_EL1
ID_AA64MMFR0_EL1
ID_AA64MMFR1_EL1
ID_AA64MMFR2_EL1
ID_AA64PFR0_EL1
ID_AA64PFR1_EL1
ID_AA64ZFR0_EL1
ID_AFR0_EL1
ID_DFR0_EL1
ID_ISAR0_EL1
ID_ISAR1_EL1
ID_ISAR2_EL1
ID_ISAR3_EL1
ID_ISAR4_EL1
ID_ISAR5_EL1
ID_ISAR6_EL1
ID_MMFR0_EL1
ID_MMFR1_EL1
ID_MMFR2_EL1
ID_MMFR3_EL1
ID_MMFR4_EL1
ID_MMFR5_EL1
ID_PFR0_EL1
ID_PFR1_EL1
ID_PFR2_EL1
IFSR32_EL2
ISR_EL1
LORC_EL1
LOREA_EL1
LORID_EL1
LORN_EL1
LORSA_EL1
MAIR_EL1
MAIR_EL12
MAIR_EL2
MAIR_EL3
MDCCINT_EL1
MDCCSR_EL0
MDCR_EL2
MDCR_EL3
MDRAR_EL1
MDSCR_EL1
MIDR_EL1
MPAM0_EL1
MPAM1_EL1
MPAM1_EL12
MPAM2_EL2
MPAM3_EL3
MPAMHCR_EL2
MPAMIDR_EL1
MPAMVPM0_EL2
MPAMVPM1_EL2
MPAMVPM2_EL2
MPAMVPM3_EL2
MPAMVPM4_EL2
MPAMVPM5_EL2
MPAMVPM6_EL2
MPAMVPM7_EL2
MPAMVPMV_EL2
MPIDR_EL1
MVFR0_EL1
MVFR1_EL1
MVFR2_EL1
NZCV
OSDLR_EL1
OSDTRRX_EL1
OSDTRTX_EL1
OSECCR_EL1
OSLAR_EL1
OSLSR_EL1
PAR_EL1
PMBIDR_EL1
PMBLIMITR_EL1
PMBPTR_EL1
PMBSR_EL1
PMCCFILTR_EL0
PMCCNTR_EL0
PMCEID0_EL0
PMCEID1_EL0
PMCNTENCLR_EL0
PMCNTENSET_EL0
PMCR_EL0
PMEVCNTR0_EL0
PMEVCNTR10_EL0
PMEVCNTR11_EL0
PMEVCNTR12_EL0
PMEVCNTR13_EL0
PMEVCNTR14_EL0
PMEVCNTR15_EL0
PMEVCNTR16_EL0
PMEVCNTR17_EL0
PMEVCNTR18_EL0
PMEVCNTR19_EL0
PMEVCNTR1_EL0
PMEVCNTR20_EL0
PMEVCNTR21_EL0
PMEVCNTR22_EL0
PMEVCNTR23_EL0
PMEVCNTR24_EL0
PMEVCNTR25_EL0
PMEVCNTR26_EL0
PMEVCNTR27_EL0
PMEVCNTR28_EL0
PMEVCNTR29_EL0
PMEVCNTR2_EL0
PMEVCNTR30_EL0
PMEVCNTR3_EL0
PMEVCNTR4_EL0
PMEVCNTR5_EL0
PMEVCNTR6_EL0
PMEVCNTR7_EL0
PMEVCNTR8_EL0
PMEVCNTR9_EL0
PMEVTYPER0_EL0
PMEVTYPER10_EL0
PMEVTYPER11_EL0
PMEVTYPER12_EL0
PMEVTYPER13_EL0
PMEVTYPER14_EL0
PMEVTYPER15_EL0
PMEVTYPER16_EL0
PMEVTYPER17_EL0
PMEVTYPER18_EL0
PMEVTYPER19_EL0
PMEVTYPER1_EL0
PMEVTYPER20_EL0
PMEVTYPER21_EL0
PMEVTYPER22_EL0
PMEVTYPER23_EL0
PMEVTYPER24_EL0
PMEVTYPER25_EL0
PMEVTYPER26_EL0
PMEVTYPER27_EL0
PMEVTYPER28_EL0
PMEVTYPER29_EL0
PMEVTYPER2_EL0
PMEVTYPER30_EL0
PMEVTYPER3_EL0
PMEVTYPER4_EL0
PMEVTYPER5_EL0
PMEVTYPER6_EL0
PMEVTYPER7_EL0
PMEVTYPER8_EL0
PMEVTYPER9_EL0
PMINTENCLR_EL1
PMINTENSET_EL1
PMMIR_EL1
PMOVSCLR_EL0
PMOVSSET_EL0
PMSCR_EL1
PMSCR_EL12
PMSCR_EL2
PMSELR_EL0
PMSEVFR_EL1
PMSFCR_EL1
PMSICR_EL1
PMSIDR_EL1
PMSIRR_EL1
PMSLATFR_EL1
PMSNEVFR_EL1
PMSWINC_EL0
PMUSERENR_EL0
PMXEVCNTR_EL0
PMXEVTYPER_EL0
REVIDR_EL1
RGSR_EL1
RMR_EL1
RMR_EL2
RMR_EL3
RNDR
RNDRRS
RVBAR_EL1
RVBAR_EL2
RVBAR_EL3
SCR_EL3
SCTLR_EL1
SCTLR_EL12
SCTLR_EL2
SCTLR_EL3
SCXTNUM_EL0
SCXTNUM_EL1
SCXTNUM_EL12
SCXTNUM_EL2
SCXTNUM_EL3
SDER32_EL2
SDER32_EL3
SPSR_ABT
SPSR_EL1
SPSR_EL12
SPSR_EL2
SPSR_EL3
SPSR_FIQ
SPSR_IRQ
SPSR_UND
SP_EL0
SP_EL1
SP_EL2
TCR_EL1
TCR_EL12
TCR_EL2
TCR_EL3
TEECR32_EL1
TEEHBR32_EL1
TFSRE0_EL1
TFSR_EL1
TFSR_EL12
TFSR_EL2
TFSR_EL3
TPIDRRO_EL0
TPIDR_EL0
TPIDR_EL1
TPIDR_EL2
TPIDR_EL3
TRBBASER_EL1
TRBIDR_EL1
TRBLIMITR_EL1
TRBMAR_EL1
TRBPTR_EL1
TRBSR_EL1
TRBTRG_EL1
TRCACATR0
TRCACATR1
TRCACATR10
TRCACATR11
TRCACATR12
TRCACATR13
TRCACATR14
TRCACATR15
TRCACATR2
TRCACATR3
TRCACATR4
TRCACATR5
TRCACATR6
TRCACATR7
TRCACATR8
TRCACATR9
TRCACVR0
TRCACVR1
TRCACVR10
TRCACVR11
TRCACVR12
TRCACVR13
TRCACVR14
TRCACVR15
TRCACVR2
TRCACVR3
TRCACVR4
TRCACVR5
TRCACVR6
TRCACVR7
TRCACVR8
TRCACVR9
TRCAUTHSTATUS
TRCAUXCTLR
TRCBBCTLR
TRCCCCTLR
TRCCIDCCTLR0
TRCCIDCCTLR1
TRCCIDCVR0
TRCCIDCVR1
TRCCIDCVR2
TRCCIDCVR3
TRCCIDCVR4
TRCCIDCVR5
TRCCIDCVR6
TRCCIDCVR7
TRCCIDR0
TRCCIDR1
TRCCIDR2
TRCCIDR3
TRCCLAIMCLR
TRCCLAIMSET
TRCCNTCTLR0
TRCCNTCTLR1
TRCCNTCTLR2
TRCCNTCTLR3
TRCCNTRLDVR0
TRCCNTRLDVR1
TRCCNTRLDVR2
TRCCNTRLDVR3
TRCCNTVR0
TRCCNTVR1
TRCCNTVR2
TRCCNTVR3
TRCCONFIGR
TRCDEVAFF0
TRCDEVAFF1
TRCDEVARCH
TRCDEVID
TRCDEVTYPE
TRCDVCMR0
TRCDVCMR1
TRCDVCMR2
TRCDVCMR3
TRCDVCMR4
TRCDVCMR5
TRCDVCMR6
TRCDVCMR7
TRCDVCVR0
TRCDVCVR1
TRCDVCVR2
TRCDVCVR3
TRCDVCVR4
TRCDVCVR5
TRCDVCVR6
TRCDVCVR7
TRCEVENTCTL0R
TRCEVENTCTL1R
TRCEXTINSELR
TRCEXTINSELR0
TRCEXTINSELR1
TRCEXTINSELR2
TRCEXTINSELR3
TRCIDR0
TRCIDR1
TRCIDR10
TRCIDR11
TRCIDR12
TRCIDR13
TRCIDR2
TRCIDR3
TRCIDR4
TRCIDR5
TRCIDR6
TRCIDR7
TRCIDR8
TRCIDR9
TRCIMSPEC0
TRCIMSPEC1
TRCIMSPEC2
TRCIMSPEC3
TRCIMSPEC4
TRCIMSPEC5
TRCIMSPEC6
TRCIMSPEC7
TRCITCTRL
TRCLAR
TRCLSR
TRCOSLAR
TRCOSLSR
TRCPDCR
TRCPDSR
TRCPIDR0
TRCPIDR1
TRCPIDR2
TRCPIDR3
TRCPIDR4
TRCPIDR5
TRCPIDR6
TRCPIDR7
TRCPRGCTLR
TRCPROCSELR
TRCQCTLR
TRCRSCTLR10
TRCRSCTLR11
TRCRSCTLR12
TRCRSCTLR13
TRCRSCTLR14
TRCRSCTLR15
TRCRSCTLR16
TRCRSCTLR17
TRCRSCTLR18
TRCRSCTLR19
TRCRSCTLR2
TRCRSCTLR20
TRCRSCTLR21
TRCRSCTLR22
TRCRSCTLR23
TRCRSCTLR24
TRCRSCTLR25
TRCRSCTLR26
TRCRSCTLR27
TRCRSCTLR28
TRCRSCTLR29
TRCRSCTLR3
TRCRSCTLR30
TRCRSCTLR31
TRCRSCTLR4
TRCRSCTLR5
TRCRSCTLR6
TRCRSCTLR7
TRCRSCTLR8
TRCRSCTLR9
TRCRSR
TRCSEQEVR0
TRCSEQEVR1
TRCSEQEVR2
TRCSEQRSTEVR
TRCSEQSTR
TRCSSCCR0
TRCSSCCR1
TRCSSCCR2
TRCSSCCR3
TRCSSCCR4
TRCSSCCR5
TRCSSCCR6
TRCSSCCR7
TRCSSCSR0
TRCSSCSR1
TRCSSCSR2
TRCSSCSR3
TRCSSCSR4
TRCSSCSR5
TRCSSCSR6
TRCSSCSR7
TRCSSPCICR0
TRCSSPCICR1
TRCSSPCICR2
TRCSSPCICR3
TRCSSPCICR4
TRCSSPCICR5
TRCSSPCICR6
TRCSSPCICR7
TRCSTALLCTLR
TRCSTATR
TRCSYNCPR
TRCTRACEIDR
TRCTSCTLR
TRCVDARCCTLR
TRCVDCTLR
TRCVDSACCTLR
TRCVICTLR
TRCVIIECTLR
TRCVIPCSSCTLR
TRCVISSCTLR
TRCVMIDCCTLR0
TRCVMIDCCTLR1
TRCVMIDCVR0
TRCVMIDCVR1
TRCVMIDCVR2
TRCVMIDCVR3
TRCVMIDCVR4
TRCVMIDCVR5
TRCVMIDCVR6
TRCVMIDCVR7
TRFCR_EL1
TRFCR_EL12
TRFCR_EL2
TTBR0_EL1
TTBR0_EL12
TTBR0_EL2
TTBR0_EL3
TTBR1_EL1
TTBR1_EL12
TTBR1_EL2
VBAR_EL1
VBAR_EL12
VBAR_EL2
VBAR_EL3
VDISR_EL2
VMPIDR_EL2
VNCR_EL2
VPIDR_EL2
VSESR_EL2
VSTCR_EL2
VSTTBR_EL2
VTCR_EL2
VTTBR_EL2
ZCR_EL1
ZCR_EL12
ZCR_EL2
ZCR_EL3
^S([0-3])_([0-7])_C([0-9]|1[0-5])_C([0-9]|1[0-5])_([0-7])$
ALLE1
ALLE1IS
ALLE1ISNXS
ALLE1NXS
ALLE1OS
ALLE1OSNXS
ALLE2
ALLE2IS
ALLE2ISNXS
ALLE2NXS
ALLE2OS
ALLE2OSNXS
ALLE3
ALLE3IS
ALLE3ISNXS
ALLE3NXS
ALLE3OS
ALLE3OSNXS
ASIDE1
ASIDE1IS
ASIDE1ISNXS
ASIDE1NXS
ASIDE1OS
ASIDE1OSNXS
IPAS2E1
IPAS2E1IS
IPAS2E1ISNXS
IPAS2E1NXS
IPAS2E1OS
IPAS2E1OSNXS
IPAS2LE1
IPAS2LE1IS
IPAS2LE1ISNXS
IPAS2LE1NXS
IPAS2LE1OS
IPAS2LE1OSNXS
RIPAS2E1
RIPAS2E1IS
RIPAS2E1ISNXS
RIPAS2E1NXS
RIPAS2E1OS
RIPAS2E1OSNXS
RIPAS2LE1
RIPAS2LE1IS
RIPAS2LE1ISNXS
RIPAS2LE1NXS
RIPAS2LE1OS
RIPAS2LE1OSNXS
RVAAE1
RVAAE1IS
RVAAE1ISNXS
RVAAE1NXS
RVAAE1OS
RVAAE1OSNXS
RVAALE1
RVAALE1IS
RVAALE1ISNXS
RVAALE1NXS
RVAALE1OS
RVAALE1OSNXS
RVAE1
RVAE1IS
RVAE1ISNXS
RVAE1NXS
RVAE1OS
RVAE1OSNXS
RVAE2
RVAE2IS
RVAE2ISNXS
RVAE2NXS
RVAE2OS
RVAE2OSNXS
RVAE3
RVAE3IS
RVAE3ISNXS
RVAE3NXS
RVAE3OS
RVAE3OSNXS
RVALE1
RVALE1IS
RVALE1ISNXS
RVALE1NXS
RVALE1OS
RVALE1OSNXS
RVALE2
RVALE2IS
RVALE2ISNXS
RVALE2NXS
RVALE2OS
RVALE2OSNXS
RVALE3
RVALE3IS
RVALE3ISNXS
RVALE3NXS
RVALE3OS
RVALE3OSNXS
VAAE1
VAAE1IS
VAAE1ISNXS
VAAE1NXS
VAAE1OS
VAAE1OSNXS
VAALE1
VAALE1IS
VAALE1ISNXS
VAALE1NXS
VAALE1OS
VAALE1OSNXS
VAE1
VAE1IS
VAE1ISNXS
VAE1NXS
VAE1OS
VAE1OSNXS
VAE2
VAE2IS
VAE2ISNXS
VAE2NXS
VAE2OS
VAE2OSNXS
VAE3
VAE3IS
VAE3ISNXS
VAE3NXS
VAE3OS
VAE3OSNXS
VALE1
VALE1IS
VALE1ISNXS
VALE1NXS
VALE1OS
VALE1OSNXS
VALE2
VALE2IS
VALE2ISNXS
VALE2NXS
VALE2OS
VALE2OSNXS
VALE3
VALE3IS
VALE3ISNXS
VALE3NXS
VALE3OS
VALE3OSNXS
VMALLE1
VMALLE1IS
VMALLE1ISNXS
VMALLE1NXS
VMALLE1OS
VMALLE1OSNXS
VMALLS12E1
VMALLS12E1IS
VMALLS12E1ISNXS
VMALLS12E1NXS
VMALLS12E1OS
VMALLS12E1OSNXS
ishnxs
nshnxs
oshnxs
synxs
pldl1keep
pldl1strm
pldl2keep
pldl2strm
pldl3keep
pldl3strm
plil1keep
plil1strm
plil2keep
plil2strm
plil3keep
plil3strm
pstl1keep
pstl1strm
pstl2keep
pstl2strm
pstl3keep
pstl3strm
mul3
mul4
pow2
vl128
vl16
vl256
vl32
vl64
half
zero
DAIFClr
DAIFSet
SPSel
APDAKeyHi_EL1
APDAKeyLo_EL1
APDBKeyHi_EL1
APDBKeyLo_EL1
APGAKeyHi_EL1
APGAKeyLo_EL1
APIAKeyHi_EL1
APIAKeyLo_EL1
APIBKeyHi_EL1
APIBKeyLo_EL1
CurrentEL
SPSR_abt
SPSR_fiq
SPSR_irq
SPSR_und
ALLE1ISnXS
ALLE1nXS
ALLE1OSnXS
ALLE2ISnXS
ALLE2nXS
ALLE2OSnXS
ALLE3ISnXS
ALLE3nXS
ALLE3OSnXS
ASIDE1ISnXS
ASIDE1nXS
ASIDE1OSnXS
IPAS2E1ISnXS
IPAS2E1nXS
IPAS2E1OSnXS
IPAS2LE1ISnXS
IPAS2LE1nXS
IPAS2LE1OSnXS
RIPAS2E1ISnXS
RIPAS2E1nXS
RIPAS2E1OSnXS
RIPAS2LE1ISnXS
RIPAS2LE1nXS
RIPAS2LE1OSnXS
RVAAE1ISnXS
RVAAE1nXS
RVAAE1OSnXS
RVAALE1ISnXS
RVAALE1nXS
RVAALE1OSnXS
RVAE1ISnXS
RVAE1nXS
RVAE1OSnXS
RVAE2ISnXS
RVAE2nXS
RVAE2OSnXS
RVAE3ISnXS
RVAE3nXS
RVAE3OSnXS
RVALE1ISnXS
RVALE1nXS
RVALE1OSnXS
RVALE2ISnXS
RVALE2nXS
RVALE2OSnXS
RVALE3ISnXS
RVALE3nXS
RVALE3OSnXS
VAAE1ISnXS
VAAE1nXS
VAAE1OSnXS
VAALE1ISnXS
VAALE1nXS
VAALE1OSnXS
VAE1ISnXS
VAE1nXS
VAE1OSnXS
VAE2ISnXS
VAE2nXS
VAE2OSnXS
VAE3ISnXS
VAE3nXS
VAE3OSnXS
VALE1ISnXS
VALE1nXS
VALE1OSnXS
VALE2ISnXS
VALE2nXS
VALE2OSnXS
VALE3ISnXS
VALE3nXS
VALE3OSnXS
VMALLE1ISnXS
VMALLE1nXS
VMALLE1OSnXS
VMALLS12E1ISnXS
VMALLS12E1nXS
VMALLS12E1OSnXS
enable-ml-inliner
Enable ML policy for inliner. Currently trained for -Oz only
Heuristics-based inliner version.
development
Use development mode (runtime-loadable model).
Use release mode (AOT-compiled model).
enable-npm-synthetic-counts
Run synthetic function entry count generation pass
^(default|thinlto-pre-link|thinlto|lto-pre-link|lto)<(O[0123sz])>$
enable-npm-pgo-inline-deferral
Enable inline deferral during PGO
enable-mem-prof
Enable memory profiler
mandatory-inlining-first
Perform mandatory inlinings module-wide, before performing inlining.
stack-safety
globals-aa
attributor
annotation2metadata
called-value-propagation
cg-profile
constmerge
cross-dso-cfi
elim-avail-extern
forceattrs
globaldce
globalopt
globalsplit
hotcoldsplit
inferattrs
instrorderfile
instrprof
ipsccp
iroutliner
lowertypetests
mergefunc
objc-arc-contract
partial-inliner
pgo-icall-prom
pgo-instr-gen
pgo-instr-use
print
rewrite-symbols
rpo-function-attrs
sample-profile
strip-dead-prototypes
wholeprogramdevirt
argpromotion
function-attrs
attributor-cgscc
inline
openmpopt
branch-prob
domtree
postdomtree
demanded-bits
domfrontier
loops
lazy-value-info
memdep
memoryssa
phi-values
regions
scalar-evolution
targetlibinfo
basic-aa
cfl-anders-aa
cfl-steens-aa
objc-arc-aa
scev-aa
scoped-noalias-aa
adce
aggressive-instcombine
assume-builder
assume-simplify
alignment-from-assumptions
annotation-remarks
bdce
bounds-checking
callsite-splitting
consthoist
constraint-elimination
correlated-propagation
div-rem-pairs
post-inline-ee-instrument
gvn-hoist
gvn-sink
instcombine
instsimplify
float2int
libcalls-shrinkwrap
inject-tli-mappings
loweratomic
lower-constant-intrinsics
lower-matrix-intrinsics
guard-widening
loop-simplify
loop-sink
loop-unroll-and-jam
loop-flatten
lowerinvoke
mem2reg
memcpyopt
mergeicmps
newgvn
jump-threading
partially-inline-libcalls
lcssa
loop-data-prefetch
loop-load-elim
loop-fusion
loop-distribute
pgo-memop-opt
reassociate
scalarize-masked-mem-intrin
separate-const-offset-from-gep
sccp
simplifycfg
slp-vectorizer
sroa
tailcallelim
vector-combine
transform-warning
asan
tsan
memprof
iv-users
canon-freeze
loop-idiom
loop-instsimplify
loop-interchange
loop-rotate
loop-deletion
loop-simplifycfg
loop-reduce
indvars
loop-predication
simple-loop-unswitch
loop-reroll
loop-versioning-licm
loop-unroll
loop-vectorize
mldst-motion
pass
llvm::
DesiredTypeName = 
forward-switch-cond
switch-to-lookup
keep-loops
hoist-common-insts
sink-common-insts
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InnerAnalysisManagerProxy<llvm::FunctionAnalysisManager, llvm::Module>]
verify-cfg-preserved
debug-pass-manager-verbose
Print all pass management debugging information. `-debug-pass-manager` must also be specified
print-changed
Print changed IRs
filter-passes
pass names
Only consider IR changes for passes whose names match for the print-changed option
print-before-changed
Print before passes that change them
arc-opt-max-ptr-states
Maximum number of ptr states the optimizer keeps track of
objc-arc-opts
Number of no-op objc calls eliminated
NumPartialNoops
Number of partially no-op objc calls eliminated
NumAutoreleases
Number of autoreleases converted to releases
NumRets
Number of return value forwarding retain+autoreleases eliminated
NumRRs
Number of retain+release paths eliminated
NumPeeps
Number of calls peephole-optimized
l_objc_msgSend_fixup_
__message_refs
__objc_classrefs
__objc_superrefs
__objc_methname
__cstring
ObjC ARC contraction
llvm.objc.retain
llvm.objc.release
llvm.objc.autorelease
llvm.objc.retainAutoreleasedReturnValue
llvm.objc.unsafeClaimAutoreleasedReturnValue
llvm.objc.retainBlock
llvm.objc.autoreleaseReturnValue
llvm.objc.autoreleasePoolPush
llvm.objc.loadWeakRetained
llvm.objc.loadWeak
llvm.objc.destroyWeak
llvm.objc.storeWeak
llvm.objc.initWeak
llvm.objc.moveWeak
llvm.objc.copyWeak
llvm.objc.retainedObject
llvm.objc.unretainedObject
llvm.objc.unretainedPointer
llvm.objc.clang.arc.use
coroutine.presplit
reuse-storage-in-coroutine-frame
Enable the optimization which would reuse the storage in the coroutine          frame for allocas whose liferanges are not overlapped, for testing purposes
index
Annotation2Metadata
.val
.idx
{0}.{1:$[.]}.val
Promote 'by reference' arguments to scalars
attributor-manifest
Determine what attributes are manifested in the IR
NumFnDeleted
Number of function deleted
NumFnWithExactDefinition
Number of functions with exact definitions
NumFnWithoutExactDefinition
Number of functions without exact definitions
NumFnShallowWrappersCreated
Number of shallow wrappers created
NumAttributesTimedOut
Number of abstract attributes timed out before fixpoint
NumAttributesValidFixpoint
Number of abstract attributes in a valid fixpoint state
NumAttributesManifested
Number of abstract attributes manifested in IR
NumAttributesFixedDueToRequiredDependences
Number of abstract attributes fixed due to required dependences
attributor-max-iterations
Maximal number of fixpoint iterations.
attributor-max-initialization-chain-length
Maximal number of chained initializations (to avoid stack overflows)
attributor-max-iterations-verify
Verify that max-iterations is a tight bound for a fixpoint
attributor-annotate-decl-cs
Annotate call sites of function declarations.
enable-heap-to-stack-conversion
attributor-allow-shallow-wrappers
Allow the Attributor to create shallow wrappers for non-exact definitions.
attributor-allow-deep-wrappers
Allow the Attributor to use IP information derived from non-exact functions via cloning
attributor-dump-dep-graph
Dump the dependency graph to dot files.
attributor-depgraph-dot-filename-prefix
The prefix used for the CallGraph dot file names.
attributor-view-dep-graph
View the dependency graph.
attributor-print-dep
Print attribute dependencies
Attributor::runTillFixpoint
[Attributor] Fixpoint iteration done after: 
 iterations
Attributor::manifestAttributes
Unexpected abstract attribute: 
 :: 
Attributor::cleanupIR
.dead
Attributor::run
::updateAA
fn_ret
cs_ret
cs_arg
set-state(< {
undef 
} >)
] for CtxI 
<<null inst>>
 at position 
 with state 
  updates 
Dependency Graph
dep_graph
.dot
Dependency graph dump to 
.internalized
Deduce and propagate attributes
Deduce and propagate attributes (CGSCC pass)
attributor-manifest-internal
Manifest Attributor internal string attributes.
max-heap-to-stack-size
attributor-max-potential-values
Maximum number of potential values to be tracked for each position.
NumAAs
Number of abstract attributes created
stack,
constant,
internal global,
external global,
argument,
inaccessible,
malloced,
unknown,
may-unwind
NumIRFunction_nounwind
Number of functions marked 'nounwind'
NumIRCS_nounwind
Number of call site marked 'nounwind'
may-sync
NumIRFunction_nosync
Number of functions marked 'nosync'
NumIRCS_nosync
Number of call site marked 'nosync'
may-recurse
NumIRFunction_norecurse
Number of functions marked 'norecurse'
NumIRCS_norecurse
Number of call site marked 'norecurse'
may-noreturn
NumIRFunction_willreturn
Number of functions marked 'willreturn'
NumIRCS_willreturn
Number of call site marked 'willreturn'
may-return
NumIRFunction_noreturn
Number of functions marked 'noreturn'
NumIRCS_noreturn
Number of call site marked 'noreturn'
returns(#
may-return(#
)[#UC: 
AAReturnedValues
NumIRFunctionReturn_KnownReturnValues
Number of function with known return values
NumIRFunctionReturn_UniqueReturnValue
Number of function with unique return
NumIRFunctionReturn_UniqueConstantReturnValue
Number of function returns replaced by constant return
NumIRArguments_returned
Number of arguments marked 'returned'
AAMemoryLocation
NumIRFunction_readnone
Number of functions marked 'readnone'
NumIRFunction_argmemonly
Number of functions marked 'argmemonly'
NumIRFunction_inaccessiblememonly
Number of functions marked 'inaccessiblememonly'
NumIRFunction_inaccessiblememorargmemonly
Number of functions marked 'inaccessiblememorargmemonly'
NumIRCS_readnone
Number of call site marked 'readnone'
may-null
NumIRFunctionReturn_nonnull
Number of function returns marked 'nonnull'
NumIRArguments_nonnull
Number of arguments marked 'nonnull'
NumIRCSReturn_nonnull
Number of call site returns marked 'nonnull'
NumIRCSArguments_nonnull
Number of call site arguments marked 'nonnull'
may-alias
NumIRFloating_noalias
Number of floating values known to be 'noalias'
NumIRArguments_noalias
Number of arguments marked 'noalias'
NumIRFunctionReturn_noalias
Number of function returns marked 'noalias'
NumIRCSReturn_noalias
Number of call site returns marked 'noalias'
NumIRCSArguments_noalias
Number of call site arguments marked 'noalias'
[priv]
[no-priv]
AAPrivatizablePtr
NumIRFloating_privatizable_ptr
Number of floating values known to be 'privatizable_ptr'
.priv
.cast
NumIRArguments_privatizable_ptr
Number of arguments marked 'privatizable_ptr'
NumIRFunctionReturn_privatizable_ptr
Number of function returns marked 'privatizable_ptr'
NumIRCSReturn_privatizable_ptr
Number of call site returns marked 'privatizable_ptr'
NumIRCSArguments_privatizable_ptr
Number of call site arguments marked 'privatizable_ptr'
unknown-dereferenceable
_or_null
_globally
AADereferenceable
NumIRFloating_dereferenceable
Number of floating values known to be 'dereferenceable'
NumIRArguments_dereferenceable
Number of arguments marked 'dereferenceable'
NumIRFunctionReturn_dereferenceable
Number of function returns marked 'dereferenceable'
NumIRCS_dereferenceable
Number of call site marked 'dereferenceable'
NumIRCSArguments_dereferenceable
Number of call site arguments marked 'dereferenceable'
align<
NumIRStore_AAAlign
Number of times alignment added to a store
NumIRLoad_AAAlign
Number of times alignment added to a load
NumIRFloating_align
Number of floating values known to be 'align'
NumIRArguments_aligned
Number of arguments marked 'aligned'
NumIRFunctionReturn_aligned
Number of function returns marked 'aligned'
NumIRCS_align
Number of call site marked 'align'
NumIRCSArguments_aligned
Number of call site arguments marked 'aligned'
known not-captured
assumed not-captured
known not-captured-maybe-returned
assumed not-captured-maybe-returned
assumed-captured
NumIRFloating_nocapture
Number of floating values known to be 'nocapture'
no-capture-maybe-returned
NumIRArguments_nocapture
Number of arguments marked 'nocapture'
NumIRCSReturn_nocapture
Number of call site returns marked 'nocapture'
NumIRCSArguments_nocapture
Number of call site arguments marked 'nocapture'
range(
AAValueConstantRange
NumIRFloating_value_range
Number of floating values known to be 'value_range'
NumIRArguments_value_range
Number of arguments marked 'value_range'
NumIRFunctionReturn_value_range
Number of function returns marked 'value_range'
NumIRCSReturn_value_range
Number of call site returns marked 'value_range'
NumIRCSArguments_value_range
Number of call site arguments marked 'value_range'
AAPotentialValues
NumIRFloating_potential_values
Number of floating values known to be 'potential_values'
NumIRArguments_potential_values
Number of arguments marked 'potential_values'
NumIRFunctionReturn_potential_values
Number of function returns marked 'potential_values'
NumIRCSReturn_potential_values
Number of call site returns marked 'potential_values'
NumIRCSArguments_potential_values
Number of call site arguments marked 'potential_values'
may-undef-or-poison
NumIRFunctionReturn_noundef
Number of function returns marked 'noundef'
NumIRArguments_noundef
Number of arguments marked 'noundef'
NumIRCSReturn_noundef
Number of call site returns marked 'noundef'
NumIRCSArguments_noundef
Number of call site arguments marked 'noundef'
simplified
maybe-simple
not-simple
NumIRFunction_value_simplify
Number of functions marked 'value_simplify'
NumIRCS_value_simplify
Number of call site marked 'value_simplify'
NumIRFloating_value_simplify
Number of floating values known to be 'value_simplify'
NumIRArguments_value_simplify
Number of arguments marked 'value_simplify'
NumIRFunctionReturn_value_simplify
Number of function returns marked 'value_simplify'
NumIRCSReturn_value_simplify
Number of call site returns marked 'value_simplify'
NumIRCSArguments_value_simplify
Number of call site arguments marked 'value_simplify'
Live[#BB 
][#TBEP 
][#KDE 
NumIRBasicBlock_AAIsDead
Number of dead basic blocks deleted.
assumed-dead
assumed-live
NumIRFloating_IsDead
Number of floating values known to be 'IsDead'
NumIRArguments_IsDead
Number of arguments marked 'IsDead'
NumIRFunctionReturn_IsDead
Number of function returns marked 'IsDead'
assumed-dead-users
NumIRCSReturn_IsDead
Number of call site returns marked 'IsDead'
NumIRCSReturn_UnusedResult
Number of call site returns marked 'UnusedResult'
NumIRCSArguments_IsDead
Number of call site arguments marked 'IsDead'
may-free
NumIRFunction_nofree
Number of functions marked 'nofree'
NumIRCS_nofree
Number of call site marked 'nofree'
NumIRFloating_nofree
Number of floating values known to be 'nofree'
NumIRArguments_nofree
Number of arguments marked 'nofree'
NumIRCSReturn_nofree
Number of call site returns marked 'nofree'
NumIRCSArguments_nofree
Number of call site arguments marked 'nofree'
[H2S] Mallocs: 
malloc_bc
calloc_bc
NumIRFunction_MallocCalls
Number of malloc/calloc/aligned_alloc calls converted to allocas
NumIRFunction_reachable
Number of functions marked 'reachable'
undefined-behavior
no-ub
AAUndefinedBehavior
NumIRInstruction_UndefinedBehaviorInstruction
Number of instructions known to have UB
AAMemoryBehavior
NumIRFunction_readonly
Number of functions marked 'readonly'
NumIRFunction_writeonly
Number of functions marked 'writeonly'
NumIRCS_readonly
Number of call site marked 'readonly'
NumIRCS_writeonly
Number of call site marked 'writeonly'
NumIRFloating_readnone
Number of floating values known to be 'readnone'
NumIRFloating_readonly
Number of floating values known to be 'readonly'
NumIRFloating_writeonly
Number of floating values known to be 'writeonly'
NumIRArguments_readnone
Number of arguments marked 'readnone'
NumIRArguments_readonly
Number of arguments marked 'readonly'
NumIRArguments_writeonly
Number of arguments marked 'writeonly'
NumIRCSArguments_readnone
Number of call site arguments marked 'readnone'
NumIRCSArguments_readonly
Number of call site arguments marked 'readonly'
NumIRCSArguments_writeonly
Number of call site arguments marked 'writeonly'
A No-Op Barrier Pass
barrier
block-extractor
NumExtracted
Number of basic blocks extracted
extract-blocks-file
A file containing list of basic blocks to extract
extract-blocks-erase-funcs
Erase the existing functions
cvp-max-functions-per-value
The maximum number of functions to track per lattice value
undefined
overdefined
untracked
unknown lattice value
unknown lattice key
Undefined  
Overdefined
Untracked  
FunctionSet
<reg> 
<mem> 
<ret> 
Called Value Propagation
Merge Duplicate Global Constants
Cross-DSO CFI
cfi.functions
__cfi_check
+thumb-mode
CallSiteTypeId
Addr
CFICheckFailData
fail
__cfi_check_fail
test
deadargelim
newret
oldret
Dead Argument Elimination
Dead Argument Hacking (BUGPOINT USE ONLY; DO NOT USE)
deadarghaX0r
Eliminate Available Externally Globals
force-attribute
Add an attribute to a function. This should be a pair of 'function-name:attribute-name', for example -force-attribute=foo:noinline. This option can be specified multiple times.
force-remove-attribute
Remove an attribute from a function. This should be a pair of 'function-name:attribute-name', for example -force-remove-attribute=foo:noinline. This option can be specified multiple times.
Force set function attributes
NumReadNone
Number of functions marked readnone
NumReadOnly
Number of functions marked readonly
NumWriteOnly
Number of functions marked writeonly
NumNoCapture
Number of arguments marked nocapture
NumReturned
Number of arguments marked returned
NumReadNoneArg
Number of arguments marked readnone
NumReadOnlyArg
Number of arguments marked readonly
NumNoAlias
Number of function returns marked noalias
NumNonNullReturn
Number of function returns marked nonnull
NumNoRecurse
Number of functions marked as norecurse
NumNoUnwind
Number of functions marked as nounwind
NumNoFree
Number of functions marked as nofree
NumWillReturn
Number of functions marked as willreturn
enable-nonnull-arg-prop
Try to propagate nonnull argument attributes from callsites to caller functions.
disable-nounwind-inference
Stop inferring nounwind attribute during function-attrs pass
disable-nofree-inference
Stop inferring nofree attribute during function-attrs pass
Deduce function attributes
Deduce function attributes in RPO
function-import
NumImportedFunctionsThinLink
Number of functions thin link decided to import
NumImportedHotFunctionsThinLink
Number of hot functions thin link decided to import
NumImportedCriticalFunctionsThinLink
Number of critical functions thin link decided to import
NumImportedGlobalVarsThinLink
Number of global variables thin link decided to import
NumImportedFunctions
Number of functions imported in backend
NumImportedGlobalVars
Number of global variables imported in backend
NumImportedModules
Number of modules imported from
NumDeadSymbols
Number of dead stripped symbols in index
NumLiveSymbols
Number of live symbols in index
import-instr-limit
Only import functions with less than N instructions
import-cutoff
Only import first N functions if N>=0 (default -1)
import-instr-evolution-factor
As we import functions, multiply the `import-instr-limit` threshold by this factor before processing newly imported functions
import-hot-evolution-factor
As we import functions called from hot callsite, multiply the `import-instr-limit` threshold by this factor before processing newly imported functions
import-hot-multiplier
Multiply the `import-instr-limit` threshold for hot callsites
import-critical-multiplier
Multiply the `import-instr-limit` threshold for critical callsites
import-cold-multiplier
Multiply the `import-instr-limit` threshold for cold callsites
print-imports
Print imported functions
print-import-failures
Print information for functions rejected for importing
compute-dead
Compute dead symbols
enable-import-metadata
Enable import metadata like 'thinlto_src_module'
summary-file
The summary file to use for function importing.
import-all-index
Import all external functions in index.
can't convert llvm.ptrauth to declaration!
thinlto_src_module
: Import 
 from 
Function Import: link error: 
Missed imports into module 
: Reason = 
, Threshold = 
, Size = 
, MaxHotness = 
, Attempts = 
GlobalVar
NotLive
TooLarge
InterposableLinkage
LocalLinkageNotInModule
NotEligible
NoInline
critical
Interposable and available_externally/linkonce_odr/weak_odr symbol
thinlto-internalize
.llvm.
enable-vfe
Enable virtual function elimination
Number of global aliases removed
Number of functions removed
NumIFuncs
Number of indirect functions removed
NumVariables
Number of global variables removed
NumVFuncs
Number of virtual functions removed
Virtual Function Elim
Dead Global Elimination
NumMarked
Number of globals marked constant
NumUnnamed
Number of globals marked unnamed_addr
NumSRA
Number of aggregate globals broken into scalars
NumHeapSRA
Number of heap objects SRA'd
NumSubstitute
Number of globals with initializers stored into them
Number of globals deleted
NumGlobUses
Number of global uses devirtualized
NumLocalized
Number of globals localized
NumShrunkToBool
Number of global vars shrunk to booleans
NumFastCallFns
Number of functions converted to fastcc
NumCtorsEvaluated
Number of static ctors evaluated
NumNestRemoved
Number of nest attributes removed
NumAliasesResolved
Number of global aliases resolved
NumAliasesRemoved
Number of global aliases eliminated
NumCXXDtorsRemoved
Number of global C++ destructors removed
NumInternalFunc
Number of internal functions
NumColdCC
Number of functions marked coldcc
enable-coldcc-stress-test
Enable stress test of coldcc by adding calling conv to all internal functions.
coldcc-rel-freq
Maximum block frequency, expressed as a percentage of caller's entry frequency, for a call site to be considered cold for enablingcoldcc
.body
newgv
.init
notinit
isneg
isnull
malloc_cont
malloc_ret_null
free_it
next
paarg
Global Variable Optimizer
Global splitter
Number of cold regions found.
Number of cold regions outlined.
hot-cold-static-analysis
hotcoldsplit-threshold
Base penalty for splitting cold code (as a multiple of TCC_Basic)
enable-cold-section
Enable placement of extracted cold functions into a separate section after hot-cold splitting.
hotcoldsplit-cold-section-name
__llvm_cold
Name for the section containing cold functions extracted by hot-cold splitting.
hotcoldsplit-max-params
Maximum number of parameters for a split function
cold.
Hot Cold Splitting
HotColdSplit
Original
 split cold code into 
Split
enable-linkonceodr-ir-outlining
Enable the IR outliner on linkonceodr functions
ir-outlining-no-cost
Debug option to outline greedily, without restriction that calculated benefit outweighs cost
_to_outline
_after_outline
outlined_ir_func_
final_block
output_block_
IR Outliner
WouldNotDecreaseSize
did not outline 
 regions due to estimated increase of 
InstructionIncrease
 instructions at locations 
DebugLoc
Outlined
outlined 
 regions with decrease of 
Benefit
Infer set function attributes
Function Integration/Inlining
NumInlined
Number of functions inlined
NumCallsDeleted
Number of call sites deleted, not inlined
Number of functions deleted because all callers found
NumMergedAllocas
Number of allocas merged together
disable-inlined-alloca-merging
inliner-function-import-stats
basic
basic statistics
verbose
printing of statistics for each inlined function
Enable inliner stats for imported functions
unavailable definition
optnone attribute
recursive
trivially dead
NoDefinition
Callee
 will not be inlined into 
Caller
 because its definition is unavailable
NotInlined
Reason
..., 
internalize
NumAliases
Number of aliases internalized
Number of functions internalized
NumGlobals
Number of global vars internalized
internalize-public-api-file
A file containing list of symbol names to preserve
internalize-public-api-list
list
A list of symbol names to preserve
llvm.global.annotations
__stack_chk_guard
WARNING: Internalize couldn't load file '
'! Continuing as if it's empty.
Internalize Global Symbols
ByteArraySizeBits
Byte array size in bits
ByteArraySizeBytes
Byte array size in bytes
NumByteArraysCreated
Number of byte arrays created
NumTypeTestCallsLowered
Number of type test calls lowered
NumTypeIdDisjointSets
Number of disjoint sets of type identifiers
lowertypetests-avoid-reuse
Try to avoid reuse of byte array addresses using aliases
lowertypetests-summary-action
lowertypetests-read-summary
Read summary from given YAML file before running pass
lowertypetests-write-summary
Write summary to given YAML file after running pass
CFI Canonical Jump Tables
cfi-canonical-jump-table
Lower type metadata
-lowertypetests-read-summary: 
-lowertypetests-write-summary: 
unexpected call to llvm.icall.branch.funnel during import phase
Second argument of llvm.type.test must be metadata
llvm.icall.branch.funnel not supported on this target
number of arguments should be odd
Expected branch funnel operand to be global value
aliases
symvers
global_addr
size_m1
byte_array
bit_mask
inline_bits
bits_use
.cfi
.cfi_jt
__cfi_global_var_init
__TEXT,__StaticInit,regular,pure_instructions
.text.startup
All operands of type metadata must have 2 elements
Bit set element may not be thread-local
A member of a type identifier may not have an explicit section
Type offset must be a constant
Type offset must be an integer constant
Type identifier may not contain both global variables and functions
Unsupported architecture for jump tables
.cfi.jumptable
-thumb-mode
jmp ${
:c}@plt
int3
int3
int3
bti c
b.w $
wasm.index
bits
NumFunctionsMerged
Number of functions merged
NumThunksWritten
Number of thunks generated
NumAliasesWritten
Number of aliases generated
NumDoubleWeak
Number of new functions created
mergefunc-sanity
How many functions in module could be used for MergeFunctions pass sanity check. '0' disables this check. Works only with '-debug' key.
mergefunc-preserve-debug-info
Preserve debug info in thunk when mergefunc transformations are made.
mergefunc-use-aliases
Allow mergefunc to create aliases
Merge Functions
openmp-opt-disable
Disable OpenMP specific optimizations.
openmp-opt-enable-merging
Enable the OpenMP region merging optimization.
openmp-print-icv-values
openmp-print-gpu-kernels
openmp-hide-memory-transfer-latency
[WIP] Tries to hide the latency of host to device memory transfers
openmp-opt
NumOpenMPRuntimeCallsDeduplicated
Number of OpenMP runtime calls deduplicated
NumOpenMPParallelRegionsDeleted
Number of OpenMP parallel regions deleted
NumOpenMPRuntimeFunctionsIdentified
Number of OpenMP runtime functions identified
NumOpenMPRuntimeFunctionUsesIdentified
Number of OpenMP runtime function uses identified
NumOpenMPTargetRegionKernels
Number of OpenMP target region entry points (=kernels) identified
NumOpenMPParallelRegionsReplacedInGPUStateMachine
Number of OpenMP parallel regions replaced with ID in GPU state machines
NumOpenMPParallelRegionsMerged
Number of OpenMP parallel regions merged
nvvm.annotations
__kmpc_barrier
__kmpc_cancel
__kmpc_cancel_barrier
__kmpc_flush
__kmpc_global_thread_num
__kmpc_fork_call
__kmpc_omp_taskwait
__kmpc_omp_taskyield
__kmpc_push_num_threads
__kmpc_push_proc_bind
__kmpc_omp_reg_task_with_affinity
omp_get_thread_num
omp_get_num_threads
omp_get_max_threads
omp_in_parallel
omp_get_dynamic
omp_get_cancellation
omp_get_nested
omp_get_schedule
omp_get_thread_limit
omp_get_supported_active_levels
omp_get_max_active_levels
omp_get_level
omp_get_ancestor_thread_num
omp_get_team_size
omp_get_active_level
omp_in_final
omp_get_proc_bind
omp_get_num_places
omp_get_num_procs
omp_get_place_proc_ids
omp_get_place_num
omp_get_partition_num_places
omp_get_partition_place_nums
omp_set_num_threads
omp_set_dynamic
omp_set_nested
omp_set_schedule
omp_set_max_active_levels
__kmpc_master
__kmpc_end_master
__kmpc_critical
__kmpc_critical_with_hint
__kmpc_end_critical
__kmpc_begin
__kmpc_end
__kmpc_reduce
__kmpc_reduce_nowait
__kmpc_end_reduce
__kmpc_end_reduce_nowait
__kmpc_ordered
__kmpc_end_ordered
__kmpc_for_static_init_4
__kmpc_for_static_init_4u
__kmpc_for_static_init_8
__kmpc_for_static_init_8u
__kmpc_for_static_fini
__kmpc_dist_dispatch_init_4
__kmpc_dist_dispatch_init_4u
__kmpc_dist_dispatch_init_8
__kmpc_dist_dispatch_init_8u
__kmpc_dispatch_init_4
__kmpc_dispatch_init_4u
__kmpc_dispatch_init_8
__kmpc_dispatch_init_8u
__kmpc_dispatch_next_4
__kmpc_dispatch_next_4u
__kmpc_dispatch_next_8
__kmpc_dispatch_next_8u
__kmpc_dispatch_fini_4
__kmpc_dispatch_fini_4u
__kmpc_dispatch_fini_8
__kmpc_dispatch_fini_8u
__kmpc_team_static_init_4
__kmpc_team_static_init_4u
__kmpc_team_static_init_8
__kmpc_team_static_init_8u
__kmpc_dist_for_static_init_4
__kmpc_dist_for_static_init_4u
__kmpc_dist_for_static_init_8
__kmpc_dist_for_static_init_8u
__kmpc_single
__kmpc_end_single
__kmpc_omp_task_alloc
__kmpc_omp_task
__kmpc_end_taskgroup
__kmpc_taskgroup
__kmpc_omp_task_begin_if0
__kmpc_omp_task_complete_if0
__kmpc_omp_task_with_deps
__kmpc_taskloop
__kmpc_omp_target_task_alloc
__kmpc_taskred_modifier_init
__kmpc_taskred_init
__kmpc_task_reduction_modifier_fini
__kmpc_task_reduction_get_th_data
__kmpc_task_reduction_init
__kmpc_task_reduction_modifier_init
__kmpc_proxy_task_completed_ooo
__kmpc_omp_wait_deps
__kmpc_cancellationpoint
__kmpc_fork_teams
__kmpc_push_num_teams
__kmpc_copyprivate
__kmpc_threadprivate_cached
__kmpc_threadprivate_register
__kmpc_doacross_init
__kmpc_doacross_post
__kmpc_doacross_wait
__kmpc_doacross_fini
__kmpc_alloc
__kmpc_free
__kmpc_init_allocator
__kmpc_destroy_allocator
__kmpc_push_target_tripcount
__tgt_target_mapper
__tgt_target_nowait_mapper
__tgt_target_teams_mapper
__tgt_target_teams_nowait_mapper
__tgt_register_requires
__tgt_target_data_begin_mapper
__tgt_target_data_begin_nowait_mapper
__tgt_target_data_begin_mapper_issue
__tgt_target_data_begin_mapper_wait
__tgt_target_data_end_mapper
__tgt_target_data_end_nowait_mapper
__tgt_target_data_update_mapper
__tgt_target_data_update_nowait_mapper
__tgt_mapper_num_components
__tgt_push_mapper_component
__kmpc_task_allow_completion_event
__kmpc_kernel_init
__kmpc_kernel_deinit
__kmpc_spmd_kernel_init
__kmpc_spmd_kernel_deinit_v2
__kmpc_kernel_prepare_parallel
__kmpc_kernel_parallel
__kmpc_kernel_end_parallel
__kmpc_serialized_parallel
__kmpc_end_serialized_parallel
__kmpc_shuffle_int32
__kmpc_nvptx_parallel_reduce_nowait_v2
__kmpc_nvptx_end_reduce_nowait
__kmpc_nvptx_teams_reduce_nowait_v2
__kmpc_shuffle_int64
__kmpc_data_sharing_init_stack
__kmpc_data_sharing_init_stack_spmd
__kmpc_data_sharing_coalesced_push_stack
__kmpc_data_sharing_push_stack
__kmpc_data_sharing_pop_stack
__kmpc_begin_sharing_variables
__kmpc_end_sharing_variables
__kmpc_get_shared_variables
__kmpc_parallel_level
__kmpc_is_spmd_exec_mode
__kmpc_get_team_static_memory
__kmpc_restore_team_static_memory
__kmpc_barrier_simple_spmd
__kmpc_warp_active_thread_mask
__kmpc_syncwarp
__last
nthreads
OMP_NUM_THREADS
active_levels
NONE
cancel
OMP_CANCELLATION
proc_bind
OMP_PROC_BIND
AADepNode Impl
OpenMPICVTracker
OpenMP ICV 
OpenMPICV
 Value: 
IMPLEMENTATION_DEFINED
OpenMPGPU
OpenMP GPU kernel 
OpenMPGPUKernel
OpenMPParallelRegionInNonSPMD
OpenMPParallelRegionInMultipleKernesl
Found a parallel region that is called in a target region but not part of a combined target construct nor nesed inside a target construct without intermediate code. This can lead to excessive register usage for unrelated target regions in the same translation unit due to spurious call edges assumed by ptxas.
Parallel region is used in 
unexpected
 ways; will not attempt to rewrite the state machine.
OMP100
[OMP100] Potentially unknown OpenMP target region caller
Parallel region is not known to be called from a unique single target region, maybe the surrounding function has external linkage?; will not attempt to rewrite the state machine use.
Specialize parallel region that is only reached from a single target region to avoid spurious call edges and excessive register usage in other target regions. (parallel region ID: 
OpenMPParallelRegion
, kernel ID: 
OpenMPTargetRegion
Target region containing the parallel region that is specialized. (parallel region ID: 
::initialize
ICVTrackerFunctionReturned
ICVTrackerCallSiteReturned
ICVTrackerCallSite
ICVTrackerFunction
no_openmp
no_openmp_routines
OpenMPParallelRegionDeletion
Parallel region in 
OpenMPParallelDelete
 deleted
handle
OpenMPGlobalization
Found thread data sharing on the GPU. 
Expect degraded performance due to data globalization.
OpenMPRuntimeCodeMotion
OpenMP runtime call 
OpenMPOptRuntime
 moved to 
OpenMPRuntimeMoves
OpenMPRuntimeDeduplicated
 deduplicated
OpenMPParallelRegionMerging
omp.par.merged
Parallel region at 
OpenMPParallelMergeFront
 merged with parallel regions at 
OpenMPParallelMerge
 merged with 
OpenMP specific optimizations
partial-inlining
NumPartialInlined
Number of callsites functions partially inlined into.
NumColdOutlinePartialInlined
Number of times functions with cold outlined regions were partially inlined into its caller(s).
NumColdRegionsFound
Number of cold single entry/exit regions found.
NumColdRegionsOutlined
Number of cold single entry/exit regions outlined.
disable-partial-inlining
Disable partial inlining
disable-mr-partial-inlining
Disable multi-region partial inlining
pi-force-live-exit-outline
Force outline regions with live exits
pi-mark-coldcc
Mark outline function calls with ColdCC
skip-partial-inlining-cost-analysis
Skip Cost Analysis
min-region-size-ratio
Minimum ratio comparing relative sizes of each outline candidate and original function
min-block-execution
Minimum block executions to consider its BranchProbabilityInfo valid
cold-branch-ratio
Minimum BranchProbability to consider a region cold.
max-num-inline-blocks
Max number of blocks to be partially inlined
max-partial-inlining
Max number of partial inlining. The default is unlimited
outline-region-freq-percent
Relative frequency of outline region to the entry block
partial-inlining-extra-penalty
A debug option to add additional penalty to the computed one.
Partial Inliner
MultiExitRegion
Region dominated by 
Block
 has more than one region exit edge.
TooCostly
 inline cost-savings smaller than 
ExtractFailed
Failed to extract region at block 
PartiallyInlined
 partially inlined into 
OutlineRegionTooSmall
 not partially inlined into callers (Original Size = 
OutlinedRegionOriginalSize
, Size of call sequence to outlined function = 
NewSize
AlwaysInline
 should always be fully inlined, not partially
 not partially inlined into 
 because it should never be inlined (cost=never)
 because too costly to inline (cost=
, threshold=
OutliningCallcostTooHigh
 runtime overhead (overhead=
Overhead
, savings=
Savings
 of making the outlined call is too high
CanBePartiallyInlined
 can be partially inlined into 
 with cost=
 (threshold=
Partially inlined into at least one caller
enable-partial-inlining
Run Partial inlinining pass
use-gvn-after-vectorization
Run GVN instead of Early CSE after vectorization passes
extra-vectorizer-passes
Run cleanup optimization passes after vectorization.
reroll-loops
Run the loop rerolling pass
enable-newgvn
Run the NewGVN pass
use-cfl-aa
Enable the new, experimental CFL alias analysis
enable-loopinterchange
Enable the new, experimental LoopInterchange Pass
enable-unroll-and-jam
Enable Unroll And Jam Pass
enable-loop-flatten
Enable the LoopFlatten Pass
prepare-for-thinlto
Enable preparation for ThinLTO.
perform-thinlto
Enable performing ThinLTO.
hot-cold-split
Enable hot-cold splitting pass
ir-outliner
Enable ir outliner pass
enable-loop-versioning-licm
Enable the experimental Loop Versioning LICM pass
disable-preinline
Disable pre-instrumentation inliner
preinline-threshold
Control the amount of inlining in pre-instrumentation inliner (default = 75)
enable-gvn-hoist
Enable the GVN hoisting pass (default = off)
disable-libcalls-shrinkwrap
Disable shrink-wrap library calls
enable-simple-loop-unswitch
Enable the simple loop unswitch pass. Also enables independent cleanup passes integrated into the loop pass manager pipeline.
enable-gvn-sink
Enable the GVN sinking pass (default = off)
enable-chr
Enable control height reduction optimization (CHR)
flattened-profile-used
Indicate the sample profile being used is flattened, i.e., no inline hierachy exists in the profile. 
enable-order-file-instrumentation
Enable order file instrumentation (default = off)
enable-matrix
Enable lowering of the matrix intrinsics
enable-constraint-elimination
Enable pass to eliminate conditions based on linear constraints.
attributor-enable
Enable the attributor inter-procedural deduction pass.
enable all attributor runs
module
enable module-wide attributor runs
cgscc
enable call graph SCC attributor runs
disable attributor runs
prune-eh
Remove unused exception handling info
NumCSInlined
Number of functions inlined with context sensitive profile
NumCSNotInlined
Number of functions not inlined with context sensitive profile
NumMismatchedProfile
Number of functions with CFG mismatched profile
NumMatchedProfile
Number of functions with CFG matched profile
sample-profile-file
Profile file loaded by -sample-profile
sample-profile-remapping-file
Profile remapping file loaded by -sample-profile
sample-profile-max-propagate-iterations
Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.
sample-profile-check-record-coverage
Emit a warning if less than N% of records in the input profile are matched to the IR.
sample-profile-check-sample-coverage
Emit a warning if less than N% of samples in the input profile are matched to the IR.
no-warn-sample-unused
Use this option to turn off/on warnings about function with samples but without debug information to use those samples. 
If the sample profile is accurate, we will mark all un-sampled callsite and function as having 0 samples. Otherwise, treat un-sampled callsites and functions conservatively as unknown. 
profile-accurate-for-symsinlist
For symbols in profile symbol list, regard their profiles to be accurate. It may be overriden by profile-sample-accurate. 
sample-profile-merge-inlinee
Merge past inlinee's profile to outline version if sample profile loader decided not to inline a call site. It will only be enabled when top-down order of profile loading is enabled. 
sample-profile-top-down-load
Do profile annotation and inlining for functions in top-down order of call graph during sample profile loading. It only works for new pass manager. 
sample-profile-inline-size
Inline cold call sites in profile loader if it's beneficial for code size.
sample-profile-cold-inline-threshold
sample-profile-inline-replay
Optimization remarks file containing inline remarks to be replayed by inlining from sample profile loader.
Sample Profile loader
Sample profile pass
Pseudo-probe-based profile requires SampleProfileProbePass
 available profile records (
%) were applied
 available profile samples (
No debug information found in function 
: Function profile not used
Callee function not available
sample-profile-inline
NotInline
previous inlining not repeated: '
' into '
InlineAttempt
previous inlining reattempted for 
hotness: '
size: '
InlineFail
incompatible inlining
AppliedSamples
Applied 
NumSamples
 samples from profile (ProbeId=
ProbeId
 samples from profile (offset: 
LineOffset
Discriminator
PopularDest
most popular destination for conditional branches at 
CondBranchesLoc
Interprocedural Sparse Conditional Constant Propagation
Strip Unused Function Prototypes
initial-synthetic-count
Initial value of synthetic entry count.
inline-synthetic-count
Initial synthetic entry count for inline functions.
cold-synthetic-count
Initial synthetic entry count for cold functions.
wholeprogramdevirt-summary-action
What to do with the summary when running this pass
Do nothing
import
Import typeid resolutions from summary and globals
export
Export typeid resolutions to summary and globals
wholeprogramdevirt-read-summary
Read summary from given bitcode or YAML file before running pass
wholeprogramdevirt-write-summary
Write summary to given bitcode or YAML file after running pass. Output file format is deduced from extension: *.bc means writing bitcode, otherwise YAML
wholeprogramdevirt-branch-funnel-threshold
Maximum number of call targets per call site to enable branch funnels
wholeprogramdevirt-print-index-based
Print index-based devirtualization messages
whole-program-visibility
Enable whole program visibility
disable-whole-program-visibility
Disable whole program visibility (overrides enabling options)
wholeprogramdevirt-skip
Prevent function(s) from being devirtualized
Whole program devirtualization
-wholeprogramdevirt-read-summary: 
-wholeprogramdevirt-write-summary: 
combined summary should contain Regular LTO module
[Regular LTO]
GlobalValueMap
TypeIdMap
WithGlobalValueDeadStripping
CfiFunctionDefs
CfiFunctionDecls
Linkage
NotEligibleToImport
Live
Local
CanAutoHide
Refs
TypeTests
TypeTestAssumeVCalls
TypeCheckedLoadVCalls
TypeTestAssumeConstVCalls
TypeCheckedLoadConstVCalls
GUID
Offset
VFunc
Args
key not an integer
TTRes
WPDRes
Kind
SizeM1BitWidth
AlignLog2
SizeM1
BitMask
InlineBits
Unsat
ByteArray
Inline
Single
AllOnes
SingleImplName
ResByArg
Indir
SingleImpl
BranchFunnel
Null
01234567
0123456789abcdefABCDEF
0123456789
Info
Byte
UniformRetVal
UniqueRetVal
VirtualConstProp
Devirtualized
devirtualized 
FunctionName
unique_member
branch_funnel
single-impl
Optimization
: devirtualized a call to 
uniform-ret-val
unique-ret-val
virtual-const-prop-1-bit
virtual-const-prop
__typeid_
+retpoline
branch-funnel
$merged
Devirtualized call to 
NumBranchesRemoved
Number of branch instructions removed
adce-remove-control-flow
adce-remove-loops
Aggressive Dead Code Elimination
Annotation Remarks
AnnotationSummary
Annotated 
 instructions with 
Bit-Tracking Dead Code Elimination
NumCallSiteSplit
Number of call-site split
callsite-splitting-duplication-threshold
Only allow instructions before a call, if their cost is below DuplicationThreshold
Call-site splitting
phi.call
NumConstantsHoisted
Number of constants hoisted
NumConstantsRebased
Number of constants rebased
consthoist-with-block-frequency
Enable the use of the block frequency analysis to reduce the chance to execute const materialization more frequently than without hoisting.
consthoist-gep
Try hoisting constant gep expressions
consthoist-min-num-to-rebase
Do not rebase if number of dependent constants of a Base is less than this number.
base_bitcast
mat_gep
mat_bitcast
const_mat
const
Constant Hoisting
NumCondsRemoved
NumWrapFlagsAdded
Number of wrapping flags added
conds-eliminated
Controls which conditions are eliminated
constraint-elimination-dump-repros
Dump IR to reproduce successful transformations.
repro
Constraint Elimination
correlated-value-propagation
NumPhis
Number of phis propagated
NumPhiCommon
Number of phis deleted via common incoming value
Number of selects propagated
NumMemAccess
Number of memory access targets propagated
Number of comparisons propagated
NumReturns
Number of return values propagated
NumDeadCases
Number of switch cases removed
NumSDivSRemsNarrowed
Number of sdivs/srems whose width was decreased
NumSDivs
Number of sdiv converted to udiv
NumUDivURemsNarrowed
Number of udivs/urems whose width was decreased
NumAShrs
Number of ashr converted to lshr
NumSRems
Number of srem converted to urem
NumSExt
Number of sext converted to zext
NumAnd
Number of ands removed
NumNW
Number of no-wrap deductions
NumNSW
Number of no-signed-wrap deductions
NumNUW
Number of no-unsigned-wrap deductions
NumAddNW
Number of no-wrap deductions for add
NumAddNSW
Number of no-signed-wrap deductions for add
NumAddNUW
Number of no-unsigned-wrap deductions for add
NumSubNW
Number of no-wrap deductions for sub
NumSubNSW
Number of no-signed-wrap deductions for sub
NumSubNUW
Number of no-unsigned-wrap deductions for sub
NumMulNW
Number of no-wrap deductions for mul
NumMulNSW
Number of no-signed-wrap deductions for mul
NumMulNUW
Number of no-unsigned-wrap deductions for mul
NumShlNW
Number of no-wrap deductions for shl
NumShlNSW
Number of no-signed-wrap deductions for shl
NumShlNUW
Number of no-unsigned-wrap deductions for shl
NumOverflows
Number of overflow checks removed
NumSaturating
Number of saturating arithmetics converted to normal arithmetics
cvp-dont-add-nowrap-flags
Value Propagation
.nonneg
.lhs.trunc
.rhs.trunc
.zext
DCEEliminated
Number of insts removed
dce-transform
Controls which instructions are eliminated
Dead Code Elimination
NumRemainingStores
Number of stores remaining after DSE
NumRedundantStores
Number of redundant stores deleted
NumFastStores
Number of stores deleted
NumFastOther
Number of other instrs removed
NumCompletePartials
Number of stores dead by later partials
NumModifiedStores
Number of stores modified
NumCFGChecks
NumCFGTries
NumCFGSuccess
NumGetDomMemoryDefPassed
Number of times a valid candidate is returned from getDomMemoryDef
NumDomMemDefChecks
Number iterations check for reads in getDomMemoryDef
dse-memoryssa
Controls which MemoryDefs are eliminated.
enable-dse-partial-overwrite-tracking
Enable partial-overwrite tracking in DSE
enable-dse-partial-store-merging
Enable partial store merging in DSE
enable-dse-memoryssa
Use the new MemorySSA-backed DSE.
dse-memoryssa-scanlimit
The number of memory instructions to scan for dead store elimination (default = 100)
dse-memoryssa-walklimit
The maximum number of steps while walking upwards to find MemoryDefs that may be killed (default = 90)
dse-memoryssa-partial-store-limit
The maximum number candidates that only partially overwrite the killing MemoryDef to consider (default = 5)
dse-memoryssa-defs-per-block-limit
The number of MemoryDefs we consider as candidates to eliminated other stores per basic block (default = 5000)
dse-memoryssa-samebb-cost
The cost of a step in the same basic block as the killing MemoryDef(default = 1)
dse-memoryssa-otherbb-cost
The cost of a step in a different basic block than the killing MemoryDef(default = 5)
dse-memoryssa-path-check-limit
The maximum number of blocks to check when trying to prove that all paths to an exit go through a killing block (default = 50)
Dead Store Elimination
NumPairs
Number of div/rem pairs
NumRecomposed
Number of instructions recomposed
NumDecomposed
Number of instructions decomposed
div-rem-pairs-transform
Controls transformations in div-rem-pairs pass
Hoist/decompose integer division and remainder
.recomposed
.frozen
.decomposed
early-cse
NumSimplify
Number of instructions simplified or DCE'd
NumCSE
Number of instructions CSE'd
NumCSECVP
Number of compare instructions CVP'd
NumCSELoad
Number of load instructions CSE'd
NumCSECall
Number of call instructions CSE'd
NumDSE
Number of trivial dead stores removed
Controls which instructions are removed
earlycse-mssa-optimization-cap
Enable imprecision in EarlyCSE in pathological cases, in exchange for faster compile. Caps the MemorySSA clobbering calls.
earlycse-debug-hash
Perform extra assertion checking to verify that SimpleValue's hash function is well-behaved w.r.t. its isEqual predicate
Early CSE
Early CSE w/ MemorySSA
early-cse-memssa
float2int-max-integer-bw
Max integer bitwidth to consider in float2int(default=64)
Float to int
GuardsEliminated
Number of eliminated guards
CondBranchEliminated
Number of eliminated conditional branches
guard-widening-widen-branch-guards
Whether or not we should widen guards  expressed as branches by widenable conditions
NumGVNInstr
Number of instructions deleted
NumGVNLoad
Number of loads deleted
NumGVNPRE
Number of instructions PRE'd
NumGVNBlocks
Number of blocks merged
NumGVNSimpl
Number of instructions simplified
NumGVNEqProp
Number of equalities propagated
NumPRELoad
Number of loads PRE'd
IsValueFullyAvailableInBlockNumSpeculationsMax
Number of blocks speculated as available in IsValueFullyAvailableInBlock(), max
MaxBBSpeculationCutoffReachedTimes
Number of times we we reached gvn-max-block-speculations cut-off preventing further exploration
enable-pre
enable-load-pre
enable-load-in-loop-pre
enable-split-backedge-in-load-pre
enable-gvn-memdep
gvn-max-num-deps
Max number of dependences to attempt Load PRE (default = 100)
gvn-max-block-speculations
Max number of blocks we're willing to speculate on (and recurse into) when deducing if a value is fully available or not in GVN (default = 600)
.pre
.pre-phi
LoadClobbered
load of type 
 not eliminated
 in favor of 
OtherAccess
 because it is clobbered by 
ClobberedBy
LoadElim
 eliminated
InfavorOfValue
Global Value Numbering
LoadPRE
load eliminated by PRE
Number of instructions hoisted
NumRemoved
Number of instructions removed
NumLoadsHoisted
Number of loads hoisted
NumLoadsRemoved
Number of loads removed
NumStoresHoisted
Number of stores hoisted
NumStoresRemoved
Number of stores removed
NumCallsHoisted
Number of calls hoisted
NumCallsRemoved
Number of calls removed
gvn-max-hoisted
Max number of instructions to hoist (default unlimited = -1)
gvn-hoist-max-bbs
Max number of basic blocks on the path between hoisting locations (default = 4, unlimited = -1)
gvn-hoist-max-depth
Hoist instructions from the beginning of the BB up to the maximum specified depth (default = 100, unlimited = -1)
gvn-hoist-max-chain-length
Maximum length of dependent chains to hoist (default = 10, unlimited = -1)
Early GVN Hoisting of Expressions
.gvnsink.split
Early GVN sinking of Expressions
irce-loop-size-cutoff
irce-print-changed-loops
irce-print-range-checks
irce-skip-profitability-checks
irce-min-runtime-iterations
irce-allow-unsigned-latch
irce-allow-narrow-latch
If set to true, IRCE may eliminate wide range checks in loops with narrow latch condition.
NumWidened
Number of indvars widened
NumReplaced
Number of exit values replaced
NumLFTR
Number of loop exit tests replaced
NumElimExt
Number of IV sign/zero extends eliminated
NumElimIV
Number of congruent IVs eliminated
verify-indvars
Verify the ScalarEvolution result after running indvars. Has no effect in release builds. (Note: this adds additional SCEV queries potentially changing the analysis result)
replexitval
Choose the strategy to replace exit value in IndVarSimplify
never replace exit value
cheap
only replace exit value when the cost is cheap
noharduse
only replace exit values when loop def likely dead
always replace exit value whenever possible
indvars-post-increment-ranges
Use post increment control-dependent ranges in IndVarSimplify
disable-lftr
Disable Linear Function Test Replace optimization
indvars-predicate-loops
Predicate conditions in read only loops
indvars-widen-indvars
Allow widening of indvars to eliminate s/zext
indvar.conv
wide.trip.count
lftr.wideiv
Induction Variable Simplification
assume-default-is-flat-addrspace
The default address space is assumed as the flat address space. This is mainly for test purpose.
Remove redundant instructions
NumThreads
Number of jumps threaded
NumFolds
Number of terminators folded
NumDupes
Number of branch blocks duplicated to eliminate phi
jump-threading-threshold
Max block size to duplicate for jump threading
jump-threading-implication-search-threshold
The number of predecessors to search for a stronger condition to use to thread over a weaker condition
print-lvi-after-jump-threading
Print the LazyValueInfo cache after JumpThreading
jump-threading-freeze-select-cond
Freeze the condition when unfolding select
jump-threading-across-loop-headers
Allow JumpThreading to thread across loop headers, for testing
LVI for function '
thread-pre-split
.thread
.thr_comm
.split-lp
select.unfold
cond.fr
Jump Threading
licm
NumCreatedBlocks
Number of blocks created
NumClonedBranches
Number of branches cloned
NumSunk
Number of instructions sunk out of loop
NumHoisted
Number of instructions hoisted out of loop
NumMovedLoads
Number of load insts hoisted or sunk
NumMovedCalls
Number of call insts hoisted or sunk
NumPromoted
Number of memory locations promoted to registers
disable-licm-promotion
Disable memory promotion in LICM pass
licm-control-flow-hoisting
Enable control flow (and PHI) hoisting in LICM
licm-coldness-threshold
Relative coldness Threshold of hoisting/sinking destination block for LICM to be considered beneficial
licm-max-num-uses-traversed
Max num uses visited for identifying load invariance in loop using invariant start (default = 8)
licm-n2-threshold
How many instruction to cross product using AA
licm-mssa-optimization-cap
Enable imprecision in LICM in pathological cases, in exchange for faster compile. Caps the MemorySSA clobbering calls.
licm-mssa-max-acc-promotion
[LICM & MemorySSA] When MSSA in LICM is disabled, this has no effect. When MSSA in LICM is enabled, then this is the maximum number of accesses allowed to be present in a loop in order to enable memory promotion.
.promoted
Loop Invariant Code Motion
SinkHoistInst
failed to sink or hoist instruction because containing block has lower frequency than destination block
.licm
InstSunk
sinking 
Inst
.split.loop.exit
.lcssa
Hoisted
hoisting 
LoadWithLoopInvariantAddressCondExecuted
failed to hoist load with loop-invariant address because load is conditionally executed
LoadWithLoopInvariantAddressInvalidated
failed to move load with loop-invariant address because the loop may invalidate its value
PromoteLoopAccessesToScalar
Moving accesses to memory location out of the loop
loopsink
NumLoopSunk
Number of instructions sunk into loop
NumLoopSunkCloned
Number of cloned instructions sunk into loop
sink-freq-percent-threshold
Do not sink instructions that require cloning unless they execute less than this percent of the time.
max-uses-for-sinking
Do not sink instructions that have too many uses.
enable-mssa-in-loop-sink
Enable MemorySSA for LoopSink in new pass manager
enable-mssa-in-legacy-loop-sink
Enable MemorySSA for LoopSink in legacy pass manager
Loop Sink
loop-delete
NeverExecutes
Loop deleted because it never executes
Loop deleted because it is invariant
Delete dead loops
loop-prefetch-writes
Prefetch write addresses
prefetch-distance
Number of instructions to prefetch ahead
min-prefetch-stride
Min stride to add prefetches
max-prefetch-iters-ahead
Max number of iterations to prefetch ahead
NumPrefetches
Number of prefetches inserted
Loop Data Prefetch
prefaddr
Prefetched
prefetched memory access
loop-distribute-verify
Turn on DominatorTree and LoopInfo verification after Loop Distribution
loop-distribute-non-if-convertible
Whether to distribute into a loop that may not be if-convertible by the loop vectorizer
loop-distribute-scev-check-threshold
The maximum number of SCEV checks allowed for Loop Distribution
loop-distribute-scev-check-threshold-with-pragma
The maximum number of SCEV checks allowed for Loop Distribution for loop marked with #pragma loop distribute(enable)
enable-loop-distribute
Enable the new, experimental LoopDistribution Pass
loop-distribute-mem
Only distribute loops with a large number of memory ops and backwards dependences with distance 1.
NumLoopsDistributed
Number of loops distributed
llvm.loop.distribute.enable
MultipleExitBlocks
multiple exit blocks
NotLoopSimplifyForm
loop is not in loop-simplify form
NotBottomTested
loop is not bottom tested
MemOpsCanBeVectorized
memory operations are safe for vectorization
NoUnsafeDeps
no unsafe dependences to isolate
DoesNotImproveMemThroughput
Unlikely to improve memory throughput.
CantIsolateUnsafeDeps
cannot isolate unsafe dependencies
RuntimeCheckWithConvergent
may not insert runtime check with convergent operation
TooManySCEVRuntimeChecks
too many SCEV run-time checks needed.
HeuristicDisabled
distribution heuristic disabled
llvm.loop.distribute.followup_all
llvm.loop.distribute.followup_fallback
llvm.loop.distribute.
loop not distributed: 
loop not distributed: failed explicitly specified loop distribution
NotDistributed
loop not distributed: use -Rpass-analysis=loop-distribute for more info
.ldist
llvm.loop.distribute.followup_sequential
llvm.loop.distribute.followup_coincident
Distribute
distributed loop
FuseCounter
Loops fused
NumFusionCandidates
Number of candidates for loop fusion
InvalidPreheader
Loop has invalid preheader
InvalidHeader
Loop has invalid header
InvalidExitingBlock
Loop has invalid exiting blocks
InvalidExitBlock
Loop has invalid exit block
InvalidLatch
Loop has invalid latch
InvalidLoop
Loop is invalid
AddressTakenBB
Basic block has address taken
MayThrowException
Loop may throw an exception
ContainsVolatileAccess
Loop contains a volatile access
NotSimplifiedForm
Loop is not in simplified form
InvalidDependencies
Dependencies prevent fusion
UnknownTripCount
Loop has unknown trip count
UncomputableTripCount
SCEV cannot compute trip count of loop
NonEqualTripCount
Loop trip counts are not the same
NonAdjacent
Loops are not adjacent
NonEmptyPreheader
Loop has a non-empty preheader with instructions that cannot be moved
FusionNotBeneficial
Fusion is not beneficial
NonIdenticalGuards
Candidates have different guards
NonEmptyExitBlock
Candidate has a non-empty exit block with instructions that cannot be moved
NonEmptyGuardBlock
Candidate has a non-empty guard block with instructions that cannot be moved
NotRotated
Candidate is not rotated
loop-fusion-dependence-analysis
Which dependence analysis should loop fusion use?
scev
Use the scalar evolution interface
Use the dependence analysis interface
Use all available analyses
loop-fusion-peel-max-count
Max number of iterations to be peeled from a loop, such that fusion can take place
NumMemSet
Number of memset's formed from loop stores
NumMemCpy
Number of memcpy's formed from loop load+stores
NumShiftUntilBitTest
Number of uncountable loops recognized as 'shift until bitttest' idiom
disable-loop-idiom-all
Options to disable Loop Idiom Recognize Pass.
disable-loop-idiom-memset
Proceed with loop idiom recognize pass, but do not convert loop(s) to memset.
disable-loop-idiom-memcpy
Proceed with loop idiom recognize pass, but do not convert loop(s) to memcpy.
use-lir-code-size-heurs
Use loop idiom recognition code size heuristics when compilingwith -Os/-Oz
Recognize loop idioms
.memset_pattern
ProcessLoopStridedStore
Transformed loop-strided store into a call to 
NewFunction
() function
FromBlock
ToBlock
ProcessLoopStoreOfLoopLoad
Formed a call to 
tcphi
tcdec
.lowbitmask
.numleadingzeros
.numactivebits
.leadingonepos
.backedgetakencount
.ivcheck
Simplify instructions in loops
LoopsInterchanged
Number of loops interchanged
loop-interchange-threshold
Interchange if you gain more than this number
Interchanges loops for cache reuse
Dependence
Cannot interchange loops due to dependences.
CallInst
Cannot interchange loops due to call instruction.
ExitingNotLatch
Loops where the latch is not the exiting block cannot be interchange currently.
UnsupportedPHIOuter
Only outer loops with induction or reduction PHI nodes can be interchanged currently.
MultiIndutionOuter
Only outer loops with 1 induction variable can be interchanged currently.
UnsupportedPHIInner
Only inner loops with induction or reduction PHI nodes can be interchange currently.
MultiInductionInner
Only inner loops with 1 induction variable can be interchanged currently.
UnsupportedStructureInner
Inner loop structure not understood currently.
NoIncrementInInner
The inner loop does not increment the induction variable.
UnsupportedInsBetweenInduction
Found unsupported instruction between induction variable increment and branch.
NoIndutionVariable
Did not find the induction variable.
NotTightlyNested
Cannot interchange loops because they are not tightly nested.
UnsupportedExitPHI
Found unsupported PHI node in loop exit.
InterchangeNotProfitable
Interchanging loops is too costly (cost=
) and it does not improve parallelism.
Interchanged
Loop interchanged with enclosing loop.
loop-flatten-cost-threshold
Limit on the cost of instructions that can be repeated due to loop flattening
loop-flatten-assume-no-overflow
Assume that the product of the two iteration limits will never overflow
loop-flatten-widen-iv
Widen the loop induction variables, if possible, so overflow checks won't reject flattening
loopflatten
Flattened
Flattened into outer loop
flatten.tripcount
flatten.trunciv
Flattens loops
runtime-check-per-loop-load-elim
Max number of memchecks allowed per eliminated load on average
loop-load-elimination-scev-check-threshold
The maximum number of SCEV checks allowed for Loop Load Elimination
NumLoopLoadEliminted
Number of loads eliminated by LLE
storeforward
load_initial
store_forwarded
<unnamed loop>
TotalConsidered
Number of guards considered
TotalWidened
Number of checks widened
loop-predication-enable-iv-truncation
loop-predication-enable-count-down-loop
loop-predication-skip-profitability-checks
loop-predication-latch-probability-scale
scale factor for the latch probability. Value should be greater than 1. Lower values are ignored
loop-predication-predicate-widenable-branches-to-deopt
Whether or not we should predicate guards expressed as widenable branches to deoptimize blocks
NumRerolledLoops
Number of rerolled loops
reroll-num-tolerated-failed-matches
The maximum number of failures to tolerate during fuzzy matching. (default: 400)
Reroll loops
reroll
exitcond
rotation-max-header-size
The default maximum header size for automatic loop rotation
rotation-prepare-for-lto
Run loop-rotation in the prepare-for-lto stage. This option should be used for testing only.
Rotate Loops
enable-loop-simplifycfg-term-folding
NumTerminatorsFolded
Number of terminators folded to unconditional branches
NumLoopBlocksDeleted
Number of loop blocks deleted
NumLoopExitsDeleted
Number of loop exiting edges deleted
Simplify loop CFG
enable-lsr-phielim
Enable LSR phi elimination
lsr-insns-cost
Add instruction count to a LSR cost model
lsr-exp-narrow
Narrow LSR complex solution using expectation of registers number
lsr-filter-same-scaled-reg
Narrow LSR search space by filtering non-optimal formulae with the same ScaledReg and Scale
lsr-backedge-indexing
Enable the generation of cross iteration indexed memops
lsr-complexity-limit
LSR search space complexity limit
lsr-setupcost-depth-limit
The limit on recursion depth for LSRs setup cost
IV.S.
IV.S.next.
.termcond
scmp
lsr.chain
Loop Strength Reduction
forget-scev-loop-unroll
Forget everything in SCEV when doing LoopUnroll, instead of just the current top-most loop. This is sometimes preferred to reduce compile time.
unroll-threshold
The cost threshold for loop unrolling
unroll-optsize-threshold
The cost threshold for loop unrolling when optimizing for size
unroll-partial-threshold
The cost threshold for partial loop unrolling
unroll-max-percent-threshold-boost
The maximum 'boost' (represented as a percentage >= 100) applied to the threshold when aggressively unrolling a loop due to the dynamic cost savings. If completely unrolling a loop will reduce the total runtime from X to Y, we boost the loop unroll threshold to DefaultThreshold*std::min(MaxPercentThresholdBoost, X/Y). This limit avoids excessive code bloat.
unroll-max-iteration-count-to-analyze
Don't allow loop unrolling to simulate more than this number ofiterations when checking full unroll profitability
unroll-count
Use this unroll count for all loops including those with unroll_count pragma values, for testing purposes
unroll-max-count
Set the max unroll count for partial and runtime unrolling, fortesting purposes
unroll-full-max-count
Set the max unroll count for full unrolling, for testing purposes
unroll-allow-partial
Allows loops to be partially unrolled until -unroll-threshold loop size is reached.
unroll-allow-remainder
Allow generation of a loop remainder (extra iterations) when unrolling a loop.
unroll-runtime
Unroll loops with run-time trip counts
unroll-max-upperbound
The max of trip count upper bound that is considered in unrolling
pragma-unroll-threshold
Unrolled size limit for loops with an unroll(full) or unroll_count pragma.
flat-loop-tripcount-threshold
If the runtime tripcount for the loop is lower than the threshold, the loop is considered as flat and will be less aggressively unrolled.
unroll-remainder
Allow the loop remainder to be unrolled.
unroll-revisit-child-loops
Enqueue and re-visit child loops in the loop PM after unrolling. This shouldn't typically be needed as child loops (or their clones) were already visited.
unroll-threshold-aggressive
Threshold (max size of unrolled loop) to use in aggressive (O3) optimizations
unroll-threshold-default
Default threshold (max size of unrolled loop), used in all but O3 optimizations
llvm.loop.unroll.count
llvm.loop.unroll.full
llvm.loop.unroll.enable
llvm.loop.unroll.runtime.disable
Unroll loops
llvm.loop.unroll.followup_all
llvm.loop.unroll.followup_remainder
llvm.loop.unroll.followup_unrolled
UnrollAsDirectedTooLarge
Unable to unroll loop as directed by unroll(enable) pragma because unrolled size is too large.
FullUnrollAsDirectedTooLarge
Unable to fully unroll loop as directed by unroll pragma because unrolled size is too large.
CantFullUnrollAsDirectedRuntimeTripCount
Unable to fully unroll loop as directed by unroll(full) pragma because loop has a runtime trip count.
DifferentUnrollCountFromDirected
Unable to unroll loop the number of times directed by unroll_count pragma because remainder loop is restricted (that could architecture specific or because the loop contains a convergent instruction) and so must have an unroll count that divides the loop trip multiple of 
TripMultiple
.  Unrolling instead 
UnrollCount
 time(s).
allow-unroll-and-jam
Allows loops to be unroll-and-jammed.
unroll-and-jam-count
Use this unroll count for all loops including those with unroll_and_jam_count pragma values, for testing purposes
unroll-and-jam-threshold
Threshold to use for inner loop when doing unroll and jam.
pragma-unroll-and-jam-threshold
Unrolled size limit for loops with an unroll_and_jam(full) or unroll_count pragma.
Unroll and Jam loops
llvm.loop.unroll_and_jam.
llvm.loop.unroll_and_jam.followup_all
llvm.loop.unroll_and_jam.followup_remainder_inner
llvm.loop.unroll_and_jam.followup_remainder_outer
llvm.loop.unroll_and_jam.followup_inner
llvm.loop.unroll_and_jam.followup_outer
llvm.loop.unroll_and_jam.count
llvm.loop.unroll_and_jam.enable
loop-unswitch
Number of guards unswitched
Number of selects unswitched
Number of simplifications of unswitched code
TotalInsts
Total number of instructions analyzed
loop-unswitch-threshold
Max loop size to unswitch
loop-unswitch-memoryssa-threshold
Max number of memory uses to explore during partial unswitching analysis
Unswitch loops
llvm.loop.unswitch.partial.disable
us-unreachable
llvm.loop.unswitch.partial
.us-lcssa
licm-versioning-invariant-threshold
LoopVersioningLICM's minimum allowed percentageof possible invariant instructions per loop
licm-versioning-max-depth-threshold
LoopVersioningLICM's threshold for maximum allowed loop nest/depth
Loop Versioning For LICM
Loop Versioning for LICM
IllegalLoopStruct
 Unsafe Loop structure
IllegalLoopInst
 Unsafe Loop Instruction
RuntimeCheck
Number of runtime checks 
RuntimeChecks
 exceeds threshold 
InvariantThreshold
Invariant load & store 
LoadAndStoreCounter
 are less then defined threshold 
IllegalLoopMemoryAccess
 Unsafe Loop memory access
IsLegalForVersioning
 Versioned loop for LICM.
 Number of runtime checks we had to insert 
LVDomain
LVAliasScope
Lower atomic intrinsics to non-atomic form
Lower constant intrinsics
lower-expect-intrinsic
ExpectIntrinsicsHandled
Number of 'expect' intrinsic instructions handled
likely-branch-weight
Weight of the branch likely to be taken (default = 2000)
unlikely-branch-weight
Weight of the branch unlikely to be taken (default = 1)
matrix-propagate-shape
Enable/disable shape propagation from matrix intrinsics to other instructions.
fuse-matrix
Enable/disable fusing matrix instructions.
fuse-matrix-tile-size
Tile size for matrix instruction fusion using square-shaped tiles.
fuse-matrix-use-loops
Generate loop nest for tiling.
force-fuse-matrix
Force matrix instruction fusion even if not profitable.
matrix-allow-contract
Allow the use of FMAs if available and profitable. This may result in different results, due to less rounding error.
matrix-default-layout
Sets the default matrix layout
column-major
Use column-major layout
row-major
Use row-major layout
alias_cont
copy
no_alias
store.begin
store.end
load.begin
load.end
continue
result.vec.
col.cast
col.load
vec.start
vec.gep
vec.cast
splat
block
matrix-lowered
Lowered with 
NumStores
 stores, 
NumLoads
 loads, 
NumComputeOps
 compute ops
additionally 
NumFPOps
 are shared with other expressions
shared with remark at line 
 column 
(reused) 
matrix
<no called fn>
stack addr
scalar
enable-memcpyopt-memoryssa
Use MemorySSA-backed MemCpyOpt.
NumMemCpyInstr
Number of memcpy instructions deleted
NumMemSetInfer
Number of memsets inferred
NumMoveToCpy
Number of memmoves converted to memcpy
NumCpyToSet
Number of memcpys converted to memset
NumCallSlot
Number of call slot optimizations performed
tmpcast
MemCpy Optimization
Merge contiguous icmps into a memcmp
MergedLoadStoreMotion
.sink.split
.sink
NumGVNInstrDeleted
NumGVNBlocksDeleted
Number of blocks deleted
NumGVNOpsSimplified
Number of Expressions simplified
NumGVNPhisAllSame
Number of PHIs whos arguments are all the same
NumGVNMaxIterations
Maximum Number of iterations it took to converge GVN
NumGVNLeaderChanges
Number of leader changes
NumGVNSortedLeaderChanges
Number of sorted leader changes
NumGVNAvoidedSortedLeaderChanges
Number of avoided sorted leader changes
NumGVNDeadStores
Number of redundant/dead stores eliminated
NumGVNPHIOfOpsCreated
Number of PHI of ops created
NumGVNPHIOfOpsEliminations
Number of things eliminated using PHI of ops
newgvn-vn
Controls which instructions are value numbered
newgvn-phi
Controls which instructions we create phi of ops for
enable-store-refinement
enable-phi-of-ops
ExpressionTypeConstant, 
 constant = 
ExpressionTypeVariable, 
 variable = 
phiofops
ExpressionTypeUnknown, 
 inst = 
etype = 
opcode = 
ExpressionTypeBasic, 
operands = {
] = 
ExpressionTypeCall, 
 represents call at 
ExpressionTypeLoad, 
 represents Load at 
 with MemoryLeader 
ExpressionTypeStore, 
 represents Store  
 with StoredValue 
 and MemoryLeader 
ExpressionTypeAggregateValue, 
, intoperands = {
ExpressionTypePhi, 
bb = 
partially-inline-libcalls-transform
Controls transformations in partially-inline-libcalls
call.sqrt
Partially inline calls to library functions
factor
reass.mul
and.ra
reass.add
.neg
Reassociate expressions
spp-print-liveset
spp-print-liveset-size
spp-print-base-pointers
spp-rematerialization-threshold
rs4gc-clobber-non-live
rs4gc-allow-statepoint-with-no-deopt-info
NumInstRemoved
NumInstReplaced
Number of instructions replaced with (simpler) instruction
IPNumInstRemoved
Number of instructions removed by IPSCCP
IPNumInstReplaced
Number of instructions replaced with (simpler) instruction by IPSCCP
Sparse Conditional Constant Propagation
NumAllocasAnalyzed
Number of allocas analyzed for replacement
NumAllocaPartitions
Number of alloca partitions formed
MaxPartitionsPerAlloca
Maximum number of partitions per alloca
NumAllocaPartitionUses
Number of alloca partition uses rewritten
MaxUsesPerAllocaPartition
Maximum number of uses of a partition
NumNewAllocas
Number of new, smaller allocas introduced
Number of allocas promoted to SSA values
NumLoadsSpeculated
Number of loads speculated to allow promotion
NumDeleted
NumVectorized
Number of vectorized aggregates
sroa-strict-inbounds
.sroa.
sroa_raw_cast
sroa_raw_idx
sroa_cast
sroa_idx
load.ext
endian_shift
insert
.extract
.shift
.trunc
.ext
.mask
.insert
load.trunc
.expand
blend
oldload
copyload
isplat
vsplat
.fca
.gep
.load
.sroa.gep
.sroa.sel
.sroa.phi
.sroa.speculated
.sroa.speculate.load.
.sroa.speculate.load.true
.sroa.speculate.load.false
SROA
Scalar Replacement Of Aggregates
scalarize-variable-insert-extract
Allow the scalarizer pass to scalarize insertelement/extractelement with variable index
scalarize-load-store
Allow the scalarizer pass to scalarize loads and store
Scalarize unsupported masked memory intrinsics
Scalarize Masked Memory Intrinsics
scalar_mask
cond.load
else
res.phi.else
cond.store
Load
ptr.phi.else
disable-separate-const-offset-from-gep
Do not separate the constant offset from a GEP instruction
reassociate-geps-verify-no-dead-code
Verify this pass produces no dead code
Split GEPs to a variadic base and a constant offset for better CSE
uglygep
idxprom
Dead instruction detected!
NumBranches
Number of branches unswitched
NumSwitches
Number of switches unswitched
NumGuards
Number of guards turned into branches for unswitching
NumTrivial
Number of unswitches that are trivial
NumCostMultiplierSkipped
Number of unswitch candidates that had their cost multiplier skipped
enable-nontrivial-unswitch
Forcibly enables non-trivial loop unswitching rather than following the configuration passed into the pass.
unswitch-threshold
The cost threshold for unswitching a loop.
enable-unswitch-cost-multiplier
Enable unswitch cost multiplier that prohibits exponential explosion in nontrivial unswitch.
unswitch-siblings-toplevel-div
Toplevel siblings divisor for cost multiplier.
unswitch-num-initial-unscaled-candidates
Number of unswitch candidates that are ignored when calculating cost multiplier.
simple-loop-unswitch-guards
If enabled, simple loop unswitching will also consider llvm.experimental.guard intrinsics as unswitch candidates.
simple-loop-unswitch-drop-non-trivial-implicit-null-checks
If enabled, drop make.implicit metadata in unswitched implicit null checks to save time analyzing if we can keep it.
Cannot unswitch because of cleanuppad in exit block
guarded
.us-phi
Simple unswitch loops
bonus-inst-threshold
Control the number of bonus instructions (default = 1)
Preserve canonical loop structure (default = true)
Convert switches to lookup tables (default = false)
Forward switch condition to phi ops (default = false)
hoist common instructions (default = false)
Sink common instructions (default = false)
NumSimpl
Number of blocks simplified
merge
Simplify the CFG
spec-exec-max-speculation-cost
Speculative execution is not applied to basic blocks where the cost of the instructions to speculatively execute exceeds this limit.
spec-exec-max-not-hoisted
Speculative execution is not applied to basic blocks where the number of instructions that would not be speculatively executed exceeds this limit.
spec-exec-only-if-divergent-target
Speculative execution is applied only to targets with divergent branches, even if the pass was configured to apply only to all targets.
Speculatively execute instructions
Speculatively execute instructions if target has divergent branches
structurizecfg-skip-uniform-regions
Force whether the StructurizeCFG pass skips uniform regions
structurizecfg-relaxed-uniform-regions
Allow relaxed uniform region checks
Tail Call Elimination
tailcall-readnone
marked as tail call candidate (readnone)
current.ret.tr
tailcall-recursion
transforming tail recursion into loop
tailrecurse
ret.tr
ret.known.tr
accumulator.tr
accumulator.ret.tr
FailedRequestedUnrolling
loop not unrolled: the optimizer was unable to perform the requested transformation; the transformation might be disabled or specified as part of an unsupported transformation ordering
FailedRequestedUnrollAndJamming
loop not unroll-and-jammed: the optimizer was unable to perform the requested transformation; the transformation might be disabled or specified as part of an unsupported transformation ordering
FailedRequestedVectorization
loop not vectorized: the optimizer was unable to perform the requested transformation; the transformation might be disabled or specified as part of an unsupported transformation ordering
FailedRequestedInterleaving
loop not interleaved: the optimizer was unable to perform the requested transformation; the transformation might be disabled or specified as part of an unsupported transformation ordering
FailedRequestedDistribution
loop not distributed: the optimizer was unable to perform the requested transformation; the transformation might be disabled or specified as part of an unsupported transformation ordering
Warn about non-applied transformations
bitcode-mdindex-threshold
Number of metadatas above which we emit an index to enable lazy-loading
bitcode-flush-threshold
The threshold (unit M) for flushing LLVM bitcode.
write-relbf-to-summary
Write relative block frequency to function summary 
Unexpected anonymous function when writing summary
.llvmbc
Value: 
Combine pattern based expressions
NumWorklistIterations
Number of instruction combining iterations performed
NumCombined
Number of insts combined
NumConstProp
Number of constant folds
NumDeadInst
Number of dead inst eliminated
NumSunkInst
Number of instructions sunk
Number of expansions
NumFactor
Number of factorizations
NumReassoc
Number of reassociations
instcombine-visit
Controls which instructions are visited
instcombine-code-sinking
Enable code sinking
instcombine-max-iterations
Limit the maximum number of instruction combining iterations
instcombine-infinite-loop-threshold
Number of instruction combining iterations considered an infinite loop
instcombine-maxarray-size
Maximum array size considered when doing a combine
instcombine-lower-dbg-declare
phi.sel
phi.cmp
phi.fr
phi.cast
narrow
phi.bo
Instruction Combining seems stuck in an infinite loop after 
 iterations.
Combine redundant instructions
.offs
addconv
gepdiff
diff.neg
notmask
.masked
.signext
bitfield
notlhs
notrhs
.simplified
.demorgan
NumSimplified
Number of library calls simplified
instcombine-guard-widening-window
How wide an instruction window to bypass looking for another guard
unmaskedload
thunk
.lobit
narrow.sel
umul
umul.val
umul.ov
umul.not.ov
.unshifted
.sext
.add
to.ptr
.ptr
.conv
sadd
sadd.result
sadd.overflow
umul.value
.highbits
storemerge
.sub
.unpack
.elt
.repack
mulbool
NegatorTotalNegationsAttempted
Negator: Number of negations attempted to be sinked
NegatorNumTreesNegated
Negator: Number of negations successfully sinked
NegatorMaxDepthVisited
Negator: Maximal traversal depth ever reached while attempting to sink negation
NegatorTimesDepthLimitReached
Negator: How many times did the traversal depth limit was reached during sinking
NegatorNumValuesVisited
Negator: Total number of values visited during attempts to sink negation
NegatorNumNegationsFoundInCache
Negator: How many negations did we retrieve/reuse from cache
NegatorMaxTotalValuesVisited
Negator: Maximal number of values ever visited while attempting to sink negation
NegatorNumInstructionsCreatedTotal
Negator: Number of new negated instructions created, total
NegatorMaxInstructionsCreated
Negator: Maximal number of new instructions created during negation attempt
NegatorNumInstructionsNegatedSuccess
Negator: Number of new negated instructions created in successful negation sinking attempts
instcombine-negator
Controls Negator transformations in InstCombine pass
instcombine-negator-enabled
Should we attempt to sink negations?
instcombine-negator-max-depth
What is the maximal lookup depth when trying to check for viability of negation sinking.
instcombine-max-num-phis
Maximum number phis to handle in intptr/ptrint folding
NumPHIsOfInsertValues
Number of phi-of-insertvalue turned into insertvalue-of-phis
NumPHIsOfExtractValues
Number of phi-of-extractvalue turned into extractvalue-of-phi
.shrunk
extract.t
instcombine-unsafe-select-transform
Enable poison-unsafe select to and/or transform
not.
masksel
.Elt
.merged
': can only link appending global with another appending global!
Appending variables with different element types!
Appending variables linked with different const'ness!
Appending variables with different alignment need to be linked!
Appending variables with different visibility need to be linked!
Appending variables with different unnamed_addr need to be linked!
Appending variables with different section name need to be linked!
Linking two modules of different data layouts: '
' is '
' whereas '
Linking two modules of different target triples: '
.text
.balign 2
.thumb
.text
.balign 4
.arm
linking module flags '
': IDs have conflicting override values in '
': IDs have conflicting behaviors in '
': IDs have conflicting values ('
' from 
 with '
': IDs have conflicting values in '
': does not have the required value
Linking COMDATs named '
': invalid selection kinds!
': noduplicates has been violated!
': ExactMatch violated!
': SameSize violated!
': COMDAT key involves incomputable alias size.
': GlobalVariable required for data dependent selection!
Linking globals named '
': symbol multiply defined!
openmp-ir-builder-optimistic-attributes
Use optimistic attributes describing 'as-if' properties of runtime calls.
;unknown;unknown;0;0;;
omp_global_thread_num
.cont
.cncl
tid.addr
zero.addr
omp.par.entry
omp.par.region
omp.par.pre_finalize
omp.par.exit
tid.addr.local
tid.addr.use
zero.addr.use
omp.par.outlined.exit
.preheader
.header
.cond
.exit
.cmp
.next
.tripcount
struct.ident_t
struct.__tgt_async_info
.reloaded
omp_parallel
enable-if-conversion
Enable if-conversion during vectorization.
pragma-vectorize-memory-check-threshold
The maximum allowed number of runtime memory checks with a vectorize(enable) pragma.
vectorize-scev-check-threshold
The maximum number of SCEV checks allowed.
pragma-vectorize-scev-check-threshold
The maximum number of SCEV checks allowed with a vectorize(enable) pragma
vectorize.width
interleave.count
vectorize.enable
isvectorized
vectorize.predicate.enable
vectorize.scalable.enable
vectorize.
interleave.
Unsupported basic block terminator
loop control flow is not understood by vectorizer
Unsupported conditional branch
Outer loop contains divergent loops
Unsupported outer loop Phi(s)
UnsupportedPhi
Found a non-int non-pointer PHI
Found an invalid PHI
Found an unidentified PHI
value that could not be identified as reduction is used outside the loop
NonReductionValueUsedOutsideLoop
Found a non-intrinsic callsite
library call cannot be vectorized. Try compiling with -fno-math-errno, -ffast-math, or similar flags
CantVectorizeLibcall
call instruction cannot be vectorized
Found unvectorizable intrinsic
intrinsic instruction cannot be vectorized
CantVectorizeIntrinsic
Found unvectorizable type
instruction return type cannot be vectorized
CantVectorizeInstructionReturnType
Store instruction cannot be vectorized
store instruction cannot be vectorized
CantVectorizeStore
nontemporal store instruction cannot be vectorized
CantVectorizeNontemporalStore
nontemporal load instruction cannot be vectorized
CantVectorizeNontemporalLoad
Value cannot be used outside the loop
value cannot be used outside the loop
ValueUsedOutsideLoop
Did not find one integer induction var
loop induction variable could not be identified
NoInductionVariable
integer loop induction variable could not be identified
NoIntegerInductionVariable
Stores to a uniform address
write to a loop invariant address could not be vectorized
CantVectorizeStoreToLoopInvariantAddress
If-conversion is disabled
if-conversion is disabled
IfConversionDisabled
Loop contains a switch statement
loop contains a switch statement
LoopContainsSwitch
Control flow cannot be substituted for a select
control flow cannot be substituted for a select
NoCFGForSelect
Loop doesn't have a legal pre-header
The loop must have a single backedge
The loop must have a unique exit block
The loop must have no live-out values if it has more than one exiting block
Unsupported outer loop
unsupported outer loop
UnsupportedOuterLoop
Too many SCEV checks needed
Too many SCEV assumptions need to be made and checked at runtime
TooManySCEVRunTimeChecks
llvm.loop.
AllDisabled
loop not vectorized: vectorization and interleaving are explicitly disabled, or the loop has already been vectorized
MissedExplicitlyDisabled
loop not vectorized: vectorization is explicitly disabled
MissedDetails
loop not vectorized
 (Force=
, Vector Width=
VectorWidth
, Interleave Count=
CantReorderFPOps
loop not vectorized: cannot prove it is safe to reorder floating-point operations
CantReorderMemOps
loop not vectorized: cannot prove it is safe to reorder memory operations
LoopsVectorized
Number of loops vectorized
LoopsAnalyzed
Number of loops analyzed for vectorization
LoopsEpilogueVectorized
Number of epilogues vectorized
enable-epilogue-vectorization
Enable vectorization of epilogue loops.
epilogue-vectorization-force-VF
When epilogue vectorization is enabled, and a value greater than 1 is specified, forces the given VF for all applicable epilogue loops.
epilogue-vectorization-minimum-VF
Only loops with vectorization factor equal to or larger than the specified value are considered for epilogue vectorization.
vectorizer-min-trip-count
Loops with a constant trip count that is smaller than this value are vectorized only if no scalar iteration overheads are incurred.
prefer-predicate-over-epilogue
Tail-folding and predication preferences over creating a scalar epilogue loop.
scalar-epilogue
Don't tail-predicate loops, create scalar epilogue
predicate-else-scalar-epilogue
prefer tail-folding, create scalar epilogue if tail folding fails.
predicate-dont-vectorize
prefers tail-folding, don't attempt vectorization if tail-folding fails.
vectorizer-maximize-bandwidth
Maximize bandwidth when selecting vectorization factor which will be determined by the smallest type in loop.
enable-interleaved-mem-accesses
Enable vectorization on interleaved memory accesses in a loop
enable-masked-interleaved-mem-accesses
Enable vectorization on masked interleaved memory accesses in a loop
tiny-trip-count-interleave-threshold
We don't interleave loops with a estimated constant trip count below this number
force-target-num-scalar-regs
A flag that overrides the target's number of scalar registers.
force-target-num-vector-regs
A flag that overrides the target's number of vector registers.
force-target-max-scalar-interleave
A flag that overrides the target's max interleave factor for scalar loops.
force-target-max-vector-interleave
A flag that overrides the target's max interleave factor for vectorized loops.
force-target-instruction-cost
A flag that overrides the target's expected cost for an instruction to a single constant value. Mostly useful for getting consistent testing.
small-loop-cost
The cost of a loop that is considered 'small' by the interleaver.
loop-vectorize-with-block-frequency
Enable the use of the block frequency analysis to access PGO heuristics minimizing code growth in cold regions and being more aggressive in hot regions.
enable-loadstore-runtime-interleave
Enable runtime interleaving until load/store ports are saturated
interleave-small-loop-scalar-reduction
Enable interleaving for loops with small iteration counts that contain scalar reductions to expose ILP.
vectorize-num-stores-pred
Max number of stores to be predicated behind an if.
enable-ind-var-reg-heur
Count the induction variable only once when interleaving
enable-cond-stores-vec
Enable if predication of stores during vectorization.
max-nested-scalar-reduction-interleave
The maximum interleave count to use when interleaving a scalar reduction in a nested loop.
prefer-inloop-reductions
Prefer in-loop vector reductions, overriding the targets preference.
prefer-predicated-reduction-select
Prefer predicating a reduction operation over an after loop select.
enable-vplan-native-path
Enable VPlan-native vectorization path with support for outer loop vectorization.
enable-vplan-predication
Enable VPlan-native vectorization path predicator with support for outer loop vectorization.
vplan-build-stress-test
Build VPlan for every supported loop nest in the function and bail out right after the build (stress test the VPlan H-CFG construction in the VPlan-native vectorization path).
interleave-loops
Enable loop interleaving in Loop vectorization passes
vectorize-loops
Run the Loop vectorization passes
broadcast
vec.ind
step.add
vec.ind.next
induction
reverse
interleaved.mask
wide.masked.vec
wide.vec
strided.vec
interleaved.vec
wide.masked.gather
wide.masked.load
wide.load
.cloned
index.next
exitcount.ptrcnt.to.int
n.rnd.up
n.mod.vf
n.vec
min.iters.check
vector.ph
scev.check
vector.scevcheck
vector.memcheck
middle.block
scalar.ph
vector.body
bc.resume.val
cast.crd
ind.end
cmp.n
cast.cmo
ind.escape
vector.recur.init
vector.recur
vector.recur.extract
vector.recur.extract.for.phi
scalar.recur.init
scalar.recur
minmax.ident
bin.rdx
bc.merge.rdx
vec.phi
next.gep
pointer.phi
ptr.ind
vector.gep
runtime pointer checks needed. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os/-Oz
CantVersionLoopWithOptForSize
runtime SCEV checks needed. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os/-Oz
runtime stride == 1 checks needed. Enable vectorization of this loop without such check by compiling with -Os/-Oz
runtime pointer checks needed. Not enabled for divergent target
CantVersionLoopWithDivergentTarget
loop trip count is one, irrelevant for vectorization
SingleIterationLoop
unable to calculate the loop count due to complex control flow
UnknownLoopCountComplexCFG
cannot optimize for size and vectorize at the same time. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os/-Oz
NoTailLoopWithOptForSize
store that is conditionally executed prevents vectorization
ConditionalStore
iter.check
vector.main.loop.iter.check
vec.epilog.
vec.epilog.iter.check
vec.epilog.ph
vec.epilog.resume.val
n.vec.remaining
min.epilog.iters.check
pred.
.entry
.continue
Pre-Entry
Initial VPlan for VF={
},UF>=1
"INTERLEAVE-GROUP with factor 
\l" +
predphi
loop not vectorized due to NoImplicitFloat attribute
NoImplicitFloat
loop not vectorized due to unsafe FP support.
UnsafeFP
VectorizationNotBeneficial
the cost-model indicates that vectorization is not beneficial
InterleavingAvoided
Ignoring UserIC, because interleaving was avoided up front
InterleavingNotBeneficial
the cost-model indicates that interleaving is not beneficial
InterleavingNotBeneficialAndDisabled
 and is explicitly disabled or interleave count is set to 1
InterleavingBeneficialButDisabled
the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1
loop not vectorized: 
offset.idx
"BRANCH-ON-MASK 
 All-One
VectorizationCodeSize
Code-size may be reduced by not forcing vectorization, or by source-code modifications eliminating the need for runtime checks (e.g., adding 'restrict').
VectorizationFactor
User-specified vectorization factor 
UserVectorizationFactor
 is unsafe, clamping to maximum safe vectorization factor 
Interleaved
interleaved loop (interleaved count: 
InterleaveCount
Vectorized
vectorized loop (vectorization width: 
, interleaved count: 
NumVectorInstructions
Number of vector instructions generated
vectorize-slp
Run the SLP vectorization passes
slp-threshold
Only vectorize if you gain more than this number 
slp-vectorize-hor
Attempt to vectorize horizontal reductions
slp-vectorize-hor-store
Attempt to vectorize horizontal reductions feeding into a store
slp-max-reg-size
Attempt to vectorize for this register size in bits
slp-max-vf
Maximum SLP vectorization factor (0=unlimited)
slp-max-store-lookup
Maximum depth of the lookup for consecutive stores.
slp-schedule-budget
Limit the size of the SLP scheduling region per block
slp-min-reg-size
slp-recursion-max-depth
Limit the recursion depth when building a vectorizable tree
slp-min-tree-size
Only vectorize small trees if they are fully vectorizable
slp-max-look-ahead-depth
The maximum look-ahead depth for operand reordering scores
slp-look-ahead-users-budget
The maximum number of users to visit while visiting the predecessors. This prevents compilation time increase.
view-slp-tree
Display the SLP trees with Graphviz
shrink.shuffle
shuffle
StoresVectorized
Stores SLP vectorized with cost 
Cost
 and with tree size 
TreeSize
VectorizedList
SLP vectorized with cost 
op.rdx
op.extra
HorSLPNotBeneficial
Vectorizing horizontal reduction is possible
but not beneficial with cost 
 and threshold 
Threshold
VectorizedHorizontalReduction
Vectorized horizontal reduction with cost 
UnsupportedType
Cannot SLP vectorize list: type 
 is unsupported by vectorizer
SmallVF
Cannot SLP vectorize list: vectorization factor 
less than 2 is not supported
NotBeneficial
List vectorization was possible but not beneficial with cost 
 >= 
Treshold
NotPossible
Cannot SLP vectorize list: vectorization was impossible
 with available vectorization factors
NumVecLoad
Number of vector loads formed
NumVecCmp
Number of vector compares formed
NumVecBO
Number of vector binops formed
NumVecCmpBO
Number of vector compare + binop formed
NumShufOfBitcast
Number of shuffles moved after bitcast
NumScalarBO
Number of scalar binops formed
NumScalarCmp
Number of scalar compares formed
disable-vector-combine
Disable all vector combine transforms
disable-binop-extract-shuffle
Disable binop extract to shuffle transforms
Optimize scalar/vector ops
shift
.scalar
active.lane.mask
"EMIT 
icmp ule
combined load
combined store
active lane mask
trip.count.minus.1
vector.body.latch
"WIDEN-CALL 
void 
call @
"WIDEN-SELECT 
 = select 
 (condition is loop invariant)
"WIDEN 
"WIDEN-INDUCTION
"WIDEN-GEP 
 = getelementptr 
"WIDEN-PHI 
"BLEND 
"REDUCE 
 + reduce.
CLONE 
REPLICATE 
 (S->V)
"PHI-PREDICATED-INSTRUCTION 
vec.iv
 = WIDEN-CANONICAL-INDUCTION
vp<%
vplan-verify-hcfg
Verify VPlan H-CFG.
asan-kernel
Enable KernelAddressSanitizer instrumentation
asan-recover
Enable recovery mode (continue-after-error).
asan-guard-against-version-mismatch
asan-instrument-reads
asan-instrument-writes
asan-instrument-atomics
asan-instrument-byval
instrument byval call arguments
asan-always-slow-path
use instrumentation with slow path for all accesses
asan-force-dynamic-shadow
Load shadow address into a local variable for each function
asan-with-ifunc
Access dynamic shadow through an ifunc global on platforms that support this
asan-with-ifunc-suppress-remat
Suppress rematerialization of dynamic shadow address by passing it through inline asm in prologue.
asan-max-ins-per-bb
maximal number of instructions to instrument in any given BB
asan-stack
Handle stack memory
asan-max-inline-poisoning-size
Inline shadow poisoning for blocks up to the given size in bytes.
asan-use-after-return
Check stack-use-after-return
asan-redzone-byval-args
Create redzones for byval arguments (extra copy required)
asan-use-after-scope
Check stack-use-after-scope
asan-globals
Handle global objects
asan-initialization-order
Handle C++ initializer order
asan-detect-invalid-pointer-pair
Instrument <, <=, >, >=, - with pointer operands
asan-detect-invalid-pointer-cmp
Instrument <, <=, >, >= with pointer operands
asan-detect-invalid-pointer-sub
Instrument - operations with pointer operands
asan-realign-stack
Realign stack to the value of this flag (power of two)
asan-instrumentation-with-call-threshold
If the function being instrumented contains more than this number of memory accesses, use callbacks instead of inline checks (-1 means never use callbacks).
asan-memory-access-callback-prefix
__asan_
asan-instrument-dynamic-allocas
instrument dynamic allocas
asan-skip-promotable-allocas
Do not instrument promotable allocas
asan-mapping-scale
scale of asan shadow mapping
asan-mapping-offset
offset of asan shadow mapping [EXPERIMENTAL]
asan-opt
Optimize instrumentation
asan-opt-same-temp
Instrument the same temp just once
asan-opt-globals
Don't instrument scalar globals
asan-opt-stack
Don't instrument scalar stack variables
asan-stack-dynamic-alloca
Use dynamic alloca to represent stack variables
asan-force-experiment
Force optimization experiment (for testing)
asan-use-private-alias
Use private aliases for global variables
asan-use-odr-indicator
Use odr indicators to improve ODR reporting
asan-globals-live-support
Use linker features to support dead code stripping of globals
asan-with-comdat
Place ASan constructors in comdat sections
asan-debug
asan-debug-stack
debug stack
asan-debug-func
asan-debug-min
asan-debug-max
NumOptimizedAccessesToGlobalVar
Number of optimized accesses to global vars
NumOptimizedAccessesToStackVar
Number of optimized accesses to stack vars
__OBJC
bounds-checking-single-trap
Use one trap block per function
ChecksAdded
Bounds checks added
ChecksSkipped
Bounds checks skipped
ChecksUnable
Bounds checks unable to add
Call Graph Profile
force-chr
Apply CHR for all functions
chr-bias-threshold
CHR considers a branch bias greater than this ratio as biased
chr-merge-threshold
CHR merges a group of N branches/selects where N >= this value
chr-module-list
Specify file to retrieve the list of modules to apply CHR to
chr-function-list
Specify file to retrieve the list of functions to apply CHR to
Reduce control height in the hot paths
Error: Couldn't read the chr-module-list file 
Error: Couldn't read the chr-function-list file 
BranchNotBiased
Branch not biased
SelectNotBiased
Select not biased
DropUnhoistableSelect
Dropped unhoistable select
DropSelectUnhoistableBranch
Dropped select due to unhoistable branch
SplitScopeFromOuter
Split scope from outer due to unhoistable branch/select 
and/or lack of common condition values
SplitScopeFromPrev
Split scope from previous due to unhoistable branch/select 
DropScopeWithOneBranchOrSelect
Drop scope with < 
CHRMergeThreshold
 biased branch(es) or select(s)
.nonchr
Merged 
NumCHRedBranches
 branches or selects
Stats
Reduced the number of branches in hot paths by 
NumBranchesDelta
 (static) and 
WeightedNumBranchesDelta
 (weighted by PGO count)
dfsan-preserve-alignment
respect alignment requirements provided by input IR
dfsan-abilist
File listing native ABI functions and how the pass treats them
dfsan-args-abi
Use the argument ABI rather than the TLS ABI
dfsan-combine-pointer-labels-on-load
Combine the label of the pointer with the label of the data when loading from memory.
dfsan-combine-pointer-labels-on-store
Combine the label of the pointer with the label of the data when storing in memory.
dfsan-debug-nonzero-labels
Insert calls to __dfsan_nonzero_label on observing a parameter, load or return with a nonzero label
dfsan-event-callbacks
Insert calls to __dfsan_*_callback functions on data events.
dfsan-fast-16-labels
Use more efficient instrumentation, limiting the number of labels to 16.
dfsan-track-select-control-flow
Propagate labels from condition values of select instructions to results.
default-gcov-version
408*
gcov-atomic-counter
Make counter updates atomic
exit
memprof-guard-against-version-mismatch
Guard against compiler/runtime version mismatch.
memprof-instrument-reads
instrument read instructions
memprof-instrument-writes
instrument write instructions
memprof-instrument-atomics
instrument atomic instructions (rmw, cmpxchg)
memprof-use-callbacks
Use callbacks instead of inline instrumentation sequences.
memprof-memory-access-callback-prefix
Prefix for memory access callbacks
__memprof_
memprof-mapping-scale
scale of memprof shadow mapping
memprof-mapping-granularity
granularity of memprof shadow mapping
memprof-debug
memprof-debug-func
Debug func
memprof-debug-min
Debug min inst
memprof-debug-max
Debug max inst
NumInstrumentedReads
Number of instrumented reads
NumInstrumentedWrites
Number of instrumented writes
msan-track-origins
Track origins (allocation sites) of poisoned memory
msan-keep-going
keep going after reporting a UMR
msan-poison-stack
poison uninitialized stack variables
msan-poison-stack-with-call
poison uninitialized stack variables with a call
msan-poison-stack-pattern
poison uninitialized stack variables with the given pattern
msan-poison-undef
poison undef temps
msan-handle-icmp
propagate shadow through ICmpEQ and ICmpNE
msan-handle-icmp-exact
exact handling of relational integer ICmp
msan-handle-lifetime-intrinsics
when possible, poison scoped variables at the beginning of the scope (slower, but more precise)
msan-handle-asm-conservative
conservative handling of inline assembly
msan-check-access-address
report accesses through a pointer which has poisoned shadow
msan-eager-checks
check arguments and return values at function call boundaries
msan-dump-strict-instructions
print out instructions with default strict semantics
msan-instrumentation-with-call-threshold
If the function being instrumented requires more than this number of checks and origin stores, use callbacks instead of inline checks (-1 means never use callbacks).
msan-kernel
Enable KernelMemorySanitizer instrumentation
msan-check-constant-shadow
Insert checks for constant shadow values
msan-with-comdat
Place MSan constructors in comdat sections
msan-and-mask
Define custom MSan AndMask
msan-xor-mask
Define custom MSan XorMask
msan-shadow-base
Define custom MSan ShadowBase
msan-origin-base
Define custom MSan OriginBase
nosanitize
NumOfPGOICallPromotion
Number of indirect call promotions.
NumOfPGOICallsites
Number of indirect call candidate sites.
disable-icp
Disable indirect call promotion
icp-cutoff
Max number of promotions for this compilation
icp-csskip
Skip Callsite up to this number for this compilation
icp-lto
Run indirect-call promotion in LTO mode
icp-samplepgo
Run indirect-call promotion in SamplePGO mode
icp-call-only
Run indirect-call promotion for call instructions only
icp-invoke-only
Run indirect-call promotion for invoke instruction only
icp-dumpafter
Dump IR after transformation happens
Use PGO instrumentation profile to promote indirect calls to direct calls.
PGOIndirectCallPromotion
UserOptions
 Not promote: User options
UnableToFindTarget
Cannot promote indirect call: target with md5sum 
target md5sum
 not found
UnableToPromote
Cannot promote indirect call to 
TargetFunction
 with count of 
Promoted
Promote indirect call to 
DirectCallee
orderfile-write-mapping
Dump functions and their MD5 hash to deobfuscate profile data
_llvm_order_file_buffer
_llvm_order_file_buffer_idx
 to save mapping file for order file instrumentation
MD5 
order_file_entry
order_file_set
Instrumentation for Order File
hash-based-counter-split
Rename counter variable of a comdat function based on cfg hash
runtime-counter-relocation
Enable relocating counters at runtime.
vp-static-alloc
Do static counter allocation for value profiler
vp-counters-per-site
The average number of profile counters allocated per value profiling site.
instrprof-atomic-counter-update-all
Make all profile counter updates atomic (for testing only)
atomic-counter-update-promoted
Do counter update using atomic fetch add  for promoted counters only
atomic-first-counter
Use atomic fetch add for first counter in a function (usually the entry counter)
do-counter-promotion
Do counter register promotion
max-counter-promotions-per-loop
Max number counter promotions per loop to avoid increasing register pressure too much
max-counter-promotions
Max number of allowed counter promotions
speculative-counter-promotion-max-exiting
The max number of exiting blocks of a loop to allow  speculative counter promotion
speculative-counter-promotion-to-loop
When the option is false, if the target block is in a loop, the promotion will be disallowed unless the promoted counter  update can be further/iteratively promoted into an acyclic  region.
iterative-counter-promotion
Allow counter promotion across the whole loop nest.
skip-ret-exit-block
Suppress counter promotion if exit blocks contain ret.
pgocount
Frontend instrumentation-based coverage lowering.
Frontend instrumentation-based coverage lowering
pgocount.promoted
__llvm_coverage_names
__llvm_profile_instrument_target
__llvm_profile_instrument_memop
__llvm_profile_counter_bias
__profd_
__profc_
__profvp_
__llvm_prf_vnodes
__llvm_prf_nm
__llvm_profile_register_functions
__llvm_profile_register_function
__llvm_profile_register_names_function
__llvm_profile_runtime
__llvm_profile_runtime_user
__llvm_profile_init
pgo-instrumentation
NumOfPGOInstrument
Number of edges instrumented.
NumOfPGOSelectInsts
Number of select instruction instrumented.
NumOfPGOMemIntrinsics
Number of mem intrinsics instrumented.
NumOfPGOEdge
Number of edges.
NumOfPGOBB
Number of basic-blocks.
NumOfPGOSplit
Number of critical edge splits.
NumOfPGOFunc
Number of functions having valid profile counts.
NumOfPGOMismatch
Number of functions having mismatch profile.
NumOfPGOMissing
Number of functions without profile.
NumOfPGOICall
Number of indirect call value instrumentations.
NumOfCSPGOInstrument
Number of edges instrumented in CSPGO.
NumOfCSPGOSelectInsts
Number of select instruction instrumented in CSPGO.
NumOfCSPGOMemIntrinsics
Number of mem intrinsics instrumented in CSPGO.
NumOfCSPGOEdge
Number of edges in CSPGO.
NumOfCSPGOBB
Number of basic-blocks in CSPGO.
NumOfCSPGOSplit
Number of critical edge splits in CSPGO.
NumOfCSPGOFunc
Number of functions having valid profile counts in CSPGO.
NumOfCSPGOMismatch
Number of functions having mismatch profile in CSPGO.
NumOfCSPGOMissing
Number of functions without profile in CSPGO.
pgo-test-profile-file
Specify the path of profile data file. This ismainly for test purpose.
pgo-test-profile-remapping-file
Specify the path of profile remapping file. This is mainly for test purpose.
disable-vp
Disable Value Profiling
icp-max-annotations
Max number of annotations for a single indirect call callsite
memop-max-annotations
Max number of preicise value annotations for a single memopintrinsic
do-comdat-renaming
Append function hash to the name of COMDAT function to avoid function hash mismatch due to the preinliner
pgo-warn-missing-function
Use this option to turn on/off warnings about missing profile data for functions.
no-pgo-warn-mismatch
Use this option to turn off/on warnings about profile cfg mismatch.
no-pgo-warn-mismatch-comdat
The option is used to turn on/off warnings about hash mismatch for comdat functions.
pgo-instr-select
Use this option to turn on/off SELECT instruction instrumentation. 
pgo-view-raw-counts
A boolean option to show CFG dag or text with raw profile counts from profile data. See also option -pgo-view-counts. To limit graph display to only one function, use filtering option -view-bfi-func-name.
pgo-instr-memop
Use this option to turn on/off memory intrinsic size profiling.
pgo-emit-branch-prob
When this option is on, the annotated branch probability will be emitted as optimization remarks: -{Rpass|pass-remarks}=pgo-instrumentation
pgo-instrument-entry
Force to instrument function entry basicblock.
pgo-fix-entry-count
Fix function entry count in profile use.
pgo-verify-hot-bfi
Print out the non-match BFI count if a hot raw profile count becomes non-hot, or a cold raw profile count becomes hot. The print is enabled under -Rpass-analysis=pgo, or internal option -pass-remakrs-analysis=pgo.
pgo-verify-bfi
Print out mismatched BFI counts after setting profile metadata The print is enabled under -Rpass-analysis=pgo, or internal option -pass-remakrs-analysis=pgo.
pgo-verify-bfi-ratio
Set the threshold for pgo-verify-big -- only print out mismatched BFI if the difference percentage is greater than this value (in percentage).
pgo-verify-bfi-cutoff
Set the threshold for pgo-verify-bfi -- skip the counts whose profile count value is below.
pgo-instr-old-cfg-hashing
Use the old CFG function hashing
 (total count : 
PGO instrumentation.
PGOInstrumentationGenPass
Read PGO instrumentation profile.
PGOInstrumentationUsePass
Create PGO instrumentation version variable for CSPGO.
pgo-instr-gen-create-var
PGOInstrumentationGenCreateVarPass
Cannot get PGOReader
Not an IR level instrumentation profile
pgo-view-counts: 
PGORawCounts_
pgo-view-raw-counts: 
 is annotated as a hot function but the profile is cold
Inconsistent number of counts in 
: the profile may be stale or there is a function name collision.
Inconsistent number of value sites for 
 profiling in "
", possibly due to the use of a stale profile.
indirect call target
memory intrinsic functions size
Count : 
Unknown\l
SELECT : { T = 
Unknown, F = Unknown }\l
, F = 
 }\l
Dump Function 
 Hash: 
  Number of Basic Blocks: 
  BB: 
FakeNode
  Number of Edges: 
 (*: Instrument, C: CriticalEdge, -: Removed)
  Edge 
  Count=
Index=
  W=
raw-Hot to BFI-nonHot
raw-Cold to BFI-Hot
bfi-verify
 Count=
 BFI_Count=
In Func 
: Num_of_BB=
, Num_of_non_zerovalue_BB=
, Num_of_mis_matching_BB=
_Zero
_One
_MinusOne
_Const
 is true with probability : 
NumOfPGOMemOPOpt
Number of memop intrinsics optimized.
NumOfPGOMemOPAnnotate
Number of memop intrinsics annotated.
pgo-memop-count-threshold
The minimum count to optimize memory intrinsic calls
disable-memop-opt
Disable optimize
pgo-memop-percent-threshold
The percentage threshold for the memory intrinsic calls optimization
pgo-memop-max-version
The max version for the optimized memory  intrinsic calls
pgo-memop-scale-count
Scale the memop size counts using the basic  block count value
pgo-memop-optimize-memcmp-bcmp
Size-specialize memcmp and bcmp calls
memop-value-prof-max-opt-size
Optimize the memop size <= this value
Optimize memory intrinsic using its size value profile
PGOMemOPSize
MemOP.Merge
MemOP.Default
MemOP.RVMerge
MemOP.Case.
memopt-opt
optimized 
Memop
 with count 
Count
 out of 
Total
Versions
 versions
poison-checking-function-local
Check that returns are non-poison (for testing)
sanitizer-coverage-level
Sanitizer Coverage. 0: none, 1: entry block, 2: all blocks, 3: all blocks and critical edges
sanitizer-coverage-trace-pc
Experimental pc tracing
sanitizer-coverage-trace-pc-guard
pc tracing with a guard
sanitizer-coverage-pc-table
create a static PC table
sanitizer-coverage-inline-8bit-counters
increments 8-bit counter for every edge
sanitizer-coverage-inline-bool-flag
sets a boolean flag for every edge
sanitizer-coverage-trace-compares
Tracing of CMP and similar instructions
sanitizer-coverage-trace-divs
Tracing of DIV instructions
sanitizer-coverage-trace-geps
Tracing of GEP instructions
sanitizer-coverage-prune-blocks
Reduce the number of instrumented blocks
sanitizer-coverage-stack-depth
max stack depth tracing
tsan-instrument-memory-accesses
Instrument memory accesses
tsan-instrument-func-entry-exit
Instrument function entry and exit
tsan-handle-cxx-exceptions
Handle C++ exceptions (insert cleanup blocks for unwinding)
tsan-instrument-atomics
Instrument atomics
tsan-instrument-memintrinsics
Instrument memintrinsics (memset/memcpy/memmove)
tsan-distinguish-volatile
Emit special instrumentation for accesses to volatiles
tsan-instrument-read-before-write
Do not eliminate read instrumentation for read-before-writes
tsan-compound-read-before-write
Emit special compound instrumentation for reads-before-writes
NumOmittedReadsBeforeWrite
Number of reads ignored due to following writes
NumAccessesWithBadSize
Number of accesses with bad size
NumInstrumentedVtableWrites
Number of vtable ptr writes
NumInstrumentedVtableReads
Number of vtable ptr reads
NumOmittedReadsFromConstantGlobals
Number of reads from constant globals
NumOmittedReadsFromVtable
Number of vtable reads
NumOmittedNonCaptured
Number of accesses ignored due to capturing
hwasan-memory-access-callback-prefix
__hwasan_
hwasan-instrument-with-calls
instrument reads and writes with callbacks
hwasan-instrument-reads
hwasan-instrument-writes
hwasan-instrument-atomics
hwasan-instrument-byval
instrument byval arguments
hwasan-recover
hwasan-instrument-stack
instrument stack (allocas)
hwasan-uar-retag-to-zero
Clear alloca tags before returning from the function to allow non-instrumented and instrumented function calls mix. When set to false, allocas are retagged before returning from the function to detect use after return.
hwasan-generate-tags-with-calls
generate new tags with runtime library calls
hwasan-globals
Instrument globals
hwasan-match-all-tag
don't report bad accesses via pointers with this tag
hwasan-kernel
Enable KernelHWAddressSanitizer instrumentation
hwasan-mapping-offset
HWASan shadow mapping offset [EXPERIMENTAL]
hwasan-with-ifunc
hwasan-with-tls
Access dynamic shadow through an thread-local pointer on platforms that support this
hwasan-record-stack-history
Record stack frames with tagged allocations in a thread-local ring buffer
hwasan-instrument-mem-intrinsics
instrument memory intrinsics
hwasan-instrument-landing-pads
instrument landing pads
hwasan-use-short-granules
use short granules in allocas and outlined checks
hwasan-instrument-personality-functions
instrument personality functions
hwasan-inline-all-checks
inline all checks
no-discriminators
Disable generation of discriminator information.
assume-preserve-all
enable preservation of all attrbitues. even those that are unlikely to be usefull
enable-knowledge-retention
enable preservation of attributes throughout code transformation
NumAssumeBuilt
Number of assume built by the assume builder
NumBundlesInAssumes
Total number of Bundles in the assume built
NumAssumesMerged
Number of assume merged by the assume simplify pass
NumAssumesRemoved
Number of assume removed by the assume simplify pass
assume-builder-counter
Controls which assumes gets created
Assume Simplify
AutoInitStore
Store inserted by -ftrivial-auto-var-init.
Store size: 
StoreSize
AutoInitUnknownInstruction
Initialization inserted by -ftrivial-auto-var-init.
AutoInitIntrinsic
AutoInitCall
 Memory operation size: 
Variables: 
VarName
VarSize
 bytes)
 Volatile: 
StoreVolatile
 Atomic: 
StoreAtomic
Call to 
UnknownLibCall
 function 
 inserted by -ftrivial-auto-var-init.
.split
lpad
lpad.phi
_crit_edge
split
.clone
cstr
chari
Return type mismatch
The number of arguments mismatch
Argument type mismatch
SRet arg to vararg function
if.true.direct_targ
if.false.orig_indirect
if.end.icp
Canonicalize Aliases
Canonicalize Freeze Instructions in Loops
aggregate-extracted-args
Aggregate arguments to code-extracted functions
lt.cast
.ret
gep_
loadgep_
.out
structArg
targetBlock
gep_reload_
.reload
.exitStub
codeRepl
newFuncRoot
debugify-quiet
Suppress verbose debugify output
debugify-level
Kind of debug info to add
locations
Locations only
location+variables
Locations and Variables
Skipping module with debug info
debugify
CheckModuleDebugify
Attach debug info to everything
check-debugify
Check debug info from -debugify
debugify-function
Attach debug info to a function
check-debugify-function
Check debug info from -debugify-function
FunctionDebugify: 
CheckFunctionDebugify
: Skipping module without debugify metadata
ERROR: dbg.value operand has size 
, but its variable has size 
.reg2mem
Instrument function entry/exit with calls to e.g. mcount() (post inlining)
instrument-function-entry-inlined
instrument-function-entry
instrument-function-exit-inlined
instrument-function-exit
mcount
.mcount
_mcount
__cyg_profile_func_enter_bare
__cyg_profile_func_enter
__cyg_profile_func_exit
Unknown instrumentation function: '
Scoped EH not supported
cleanup.lpad
guards-predicate-pass-branch-weight
The probability of a guard failing is assumed to be the reciprocal of this value (default = 1 << 20)
enable-noalias-to-md-conversion
Convert noalias attributes to metadata during inlining.
preserve-alignment-assumptions-during-inlining
Convert align attributes to assumptions during inlining.
update-return-attrs
Update return attributes on calls within inlined body
max-inst-checked-for-throw-during-inlining
the maximum number of instructions analyzed for may throw during attribute inference in inlined body
We don't inline callbr yet.
external or indirect
unsupported operand bundle
incompatible GC
incompatible personality
catch in cleanup funclet
SEH in cleanup funclet
savedstack
: argument 
.lpad-body
eh.lpad-body
------- Dumping inliner stats for [
] -------
-- List of inlined functions:
Inlined 
imported 
not imported 
function [
: #inlines = 
, #inlines_to_importing_module = 
-- Summary:
All functions: 
, imported functions: 
inlined functions
all functions
imported functions inlined anywhere
imported functions
imported functions inlined into importing module
, remaining
non-imported functions inlined anywhere
non-imported functions
non-imported functions inlined into importing module
% of 
Inject TLI Mappings
NumLCSSA
Number of live out of a loop variables
verify-loop-lcssa
Verify loop lcssa form (time consuming)
Loop-Closed SSA Form Pass
Conditionally eliminate dead library calls
cdce.call
cdce.end
Number of unreachable basic blocks removed
NumPHICSEs
Number of PHI's that got CSE'd
phicse-debug-hash
Perform extra assertion checking to verify that PHINodes's hash function is well-behaved w.r.t. its isEqual predicate
phicse-num-phi-smallsize
When the basic block contains not more than this number of PHI nodes, perform a (faster!) exhaustive search instead of set-driven one.
cond
.noexc
mask
.inv
loop-peel
NumPeeled
Number of loops peeled
unroll-peel-count
Set the unroll peeling count, for testing purposes
unroll-allow-peeling
Allows loops to be peeled when the dynamic trip count is known to be low.
unroll-allow-loop-nests-peeling
Allows loop nests to be peeled.
unroll-peel-max-count
Max average trip count which will cause loop peeling.
unroll-force-peel-count
Force a peel count regardless of profiling information.
unroll-peel-multi-deopt-exit
Allow peeling of loops with multiple deopt exits.
.peel.begin
.peel.next
.peel.newph
llvm.loop.peeled.count
.peel
NumNotRotatedDueToHeaderSize
Number of loops not rotated due to the header size
NumRotated
Number of loops rotated
loop-rotate-multi
Allow loop rotation multiple times in order to reach a better latch exit
.lr.ph
.outer
.backedge
Canonicalize natural loops
NumCompletelyUnrolled
Number of loops completely unrolled
NumUnrolled
Number of loops unrolled (completely or otherwise)
NumUnrolledNotLatch
Number of loops unrolled without a conditional latch (completely or otherwise)
unroll-runtime-epilog
Allow runtime unrolled loops to be unrolled with epilog instead of prolog.
unroll-verify-domtree
Verify domtree after unrolling
FullyUnrolled
completely unrolled loop with 
 iterations
Peeled
 peeled loop by 
PeelCount
 with a breakout at trip 
BreakoutTrip
PartialUnrolled
unrolled loop by a factor of 
 trips per branch
 with run-time trip count
completely unroll and jammed loop with 
unroll and jammed loop by a factor of 
NumRuntimeUnrolled
Number of loops unrolled with run-time trip counts
unroll-runtime-multi-exit
Allow runtime unrolling for loops with multiple exits, when epilog is generated
.new
.unr-lcssa
.epil.preheader
.prol.preheader
.prol.loopexit
xtraiter
lcmp.mod
unroll_iter
niter
.nsub
.ncmp
epil
prol
.iter
.unr
.epilog-lcssa
force-reduction-intrinsics
Force creating reduction intrinsics for testing.
llvm.loop.vectorize.width
llvm.loop.vectorize.scalable.enable
llvm.loop.unroll_and_jam.disable
llvm.loop.vectorize.enable
llvm.loop.licm_versioning.disable
rdx.minmax.cmp
rdx.minmax.select
rdx.shuf
bound0
bound1
found.conflict
conflict.rdx
memcheck.conflict
.loopexit
llvm.loop.disable_nonforced
llvm.licm.disable
loop-version-annotate-no-alias
Add no-alias annotation for instructions that are disambiguated by memchecks
lver.safe
.lver.check
.lver.orig
.lver
LVerDomain
Lower invoke and unwind, for unwindless code generators
.latch
.step
cols
rows
inner
Promote Memory to Register
anon.
Name Anon Globals
verify-predicateinfo
Verify PredicateInfo in legacy printer pass.
predicateinfo-rename
Controls which variables are renamed with predicateinfo
llvm.ssa.copy.
scev-cheap-expansion-budget
When performing SCEV expansion only if it is cheap to do, this controls the budget that is considered cheap (default = 4)
scevgep
.iv.next
indvar
indvar.next
tmp.lcssa.user
ident.check
mul.result
mul.overflow
simplifycfg-require-and-preserve-domtree
Temorary development switch used to gradually uplift SimplifyCFG into preserving DomTree,
phi-node-folding-threshold
Control the amount of phi node folding to perform (default = 2)
two-entry-phi-node-folding-threshold
Control the maximal total instruction cost that we are willing to speculatively execute to fold a 2-entry PHI node into a select (default = 4)
simplifycfg-dup-ret
Duplicate return instructions into unconditional branches
simplifycfg-hoist-common
Hoist common instructions up to the parent block
simplifycfg-sink-common
Sink common instructions down to the end block
simplifycfg-hoist-cond-stores
Hoist conditional stores if an unconditional store precedes
simplifycfg-merge-cond-stores
Hoist conditional stores even if an unconditional store does not precede - hoist multiple conditional stores into a single predicated store
simplifycfg-merge-cond-stores-aggressively
When merging conditional stores, do so even if the resultant basic blocks are unlikely to be if-converted as a result
speculate-one-expensive-inst
Allow exactly one expensive instruction to be speculatively executed
max-speculation-depth
Limit maximum recursion depth when calculating costs of speculatively executed instructions
simplifycfg-max-small-block-size
Max size of a block which is still considered small enough to thread through
simplifycfg-branch-fold-threshold
Maximum cost of combining conditions when folding branches
NumBitMaps
Number of switch instructions turned into bitmaps
NumLinearMaps
Number of switch instructions turned into linear mapping
NumLookupTables
Number of switch instructions turned into lookup tables
NumLookupTablesHoles
Number of switch instructions turned into lookup tables (holes checked)
NumTableCmpReuses
Number of reused switch table lookup compares
NumFoldValueComparisonIntoPredecessors
Number of value comparisons folded into predecessor basic blocks
NumFoldBranchToCommonDest
Number of branches folded into predecessor basic block
NumHoistCommonCode
Number of common instruction 'blocks' hoisted up to the begin block
NumHoistCommonInstrs
Number of common instructions hoisted up to the begin block
NumSinkCommonCode
Number of common instruction 'blocks' sunk down to the end block
NumSinkCommonInstrs
Number of common instructions sunk down to the end block
NumSpeculations
Number of speculative executed instructions
NumInvokes
Number of invokes with empty resume blocks simplified into calls
.not
or.cond
not.cond
and.cond
switch.edge
.fold.split
magicptr
infloop
switch.early.test
spec.store.select
spec.select
.critedge
brmerge
.mux
condstore.split
simplifycfg.merge
retval
.off
switch.selectcmp
switch.select
switch.lookup
switch.tableidx
switch.hole_check
switch.maskindex
switch.shifted
switch.lobit
switch.table.
switch.idx.cast
switch.idx.mult
switch.offset
switch.cast
switch.shiftamt
switch.downshift
switch.masked
switch.tableidx.zext
switch.gep
switch.load
inverted.cmp
.wide
iv.rem
.urem
.udiv
enable-double-float-shrink
Enable unsafe double to float shrinking for math lib calls
endptr
strcmpload
strlenfirst
memchr.bounds
memchr.bits
real
imag
isinf
reciprocal
square
cttz
isdigittmp
leninc
lhsc
lhsv
rhsc
rhsv
chardiff
sincospi
sinpi
cospi
stderr
simplify-libcalls
folded strlen(select) to select of constants
pgso
Enable the profile guided size optimizations. 
pgso-lwss-only
Apply the profile guided size optimizations only if the working set size is large (except for cold code.)
pgso-cold-code-only
Apply the profile guided size optimizations only to cold code.
pgso-cold-code-only-for-instr-pgo
Apply the profile guided size optimizations only to cold code under instrumentation PGO.
pgso-cold-code-only-for-sample-pgo
Apply the profile guided size optimizations only to cold code under sample PGO.
pgso-cold-code-only-for-partial-sample-pgo
Apply the profile guided size optimizations only to cold code under partial-profile sample PGO.
force-pgso
Force the (profiled-guided) size optimizations. 
pgso-cutoff-instr-prof
The profile guided size optimization profile summary cutoff for instrumentation profile.
pgso-cutoff-sample-prof
The profile guided size optimization profile summary cutoff for sample profile.
__llvmsplit_unnamed
rewrite-map-file
Symbol Rewrite Map
unable to read rewrite map '
unable to parse rewrite map '
DescriptorList node must be a map
rewrite type must be a scalar
rewrite descriptor must be a map
global variable
global alias
unknown rewrite type
descriptor key must be a scalar
descriptor value must be a scalar
invalid regex: 
target
transform
unknown key for function
exactly one of transform or target must be specified
descriptor Key must be a scalar
unknown Key for Global Variable
unknown key for Global Alias
Rewrite Symbols
unable to transforn 
Number of NoAlias results
NumMayAlias
Number of MayAlias results
NumMustAlias
Number of MustAlias results
disable-basic-aa
NoAlias
MustAlias
MayAlias
PartialAlias
External Alias Analysis
external-aa
Function Alias Analysis Results
print-all-alias-modref-info
print-no-aliases
print-may-aliases
print-partial-aliases
print-must-aliases
print-no-modref
print-ref
print-mod
print-modref
print-must
print-mustref
print-mustmod
print-mustmodref
evaluate-aa-metadata
alias-set-saturation-threshold
The maximum number of pointers may-alias sets may contain before degradation
assume-queries
NumAssumeQueries
Number of Queries into an assume assume bundles
NumUsefullAssumeQueries
Number of Queries into an assume assume bundles that were satisfied
assume-queries-counter
verify-assumption-cache
Enable verification of assumption cache
Assumption in scanned function not in cache
Assumption Cache Tracker
assumption-cache-tracker
basic-aa-recphi
basic-aa-force-at-least-64b
basic-aa-double-calc-bits
basicaa
SearchLimitReached
Number of times the limit to decompose GEPs is reached
SearchTimes
Number of times a GEP is decomposed
Basic Alias Analysis (stateless AA impl)
view-block-freq-propagation-dags
Pop up a window to show a dag displaying how block frequencies propagation through the CFG.
do not display graphs.
fraction
display a graph using the fractional block frequency representation.
integer
display a graph using the raw integer fractional block frequency representation.
count
display a graph using the real profile count if available.
view-bfi-func-name
The option to specify the name of the function whose CFG will be displayed.
view-hot-freq-percent
An integer in percent used to specify the hot blocks/edges to be displayed in red: a block or edge whose frequency is no less than the max frequency of the function multiplied by this percent.
pgo-view-counts
A boolean option to show CFG dag or text with block profile counts and branch probabilities right after PGO profile annotation step. The profile counts are computed using branch probabilities from the runtime profile data and block frequency propagation algorithm. To view the raw counts from the profile, use option -pgo-view-raw-counts instead. To limit graph display to only one function, use filtering option -view-bfi-func-name.
do not show.
graph
show a graph.
text
show in text.
print-bfi
Print the block frequency info.
print-bfi-func-name
The option to specify the name of the function whose block frequency info is printed.
BlockFrequencyDAGs
block-frequency-info: 
: float = 
, int = 
, count = 
, irr_loop_header_weight = 
Block Frequency Analysis
block-freq
file exists, overwriting
error writing into file
writing to the newly created file 
error opening file '
' for writing!
 done. 
digraph "
digraph unnamed {
label="
Node
 [shape=record,
label="{
}"];
color="red"
] : 
Unknown
 -> Node
label="%.1f%%"
,color="red"
check-bfi-unknown-block-queries
Check if block frequency is queried for an unknown block for debugging missed BFI updates
print-bpi
Print the branch probability info.
print-bpi-func-name
The option to specify the name of the function whose branch probability info is printed.
---- Branch Probabilities ----
edge 
 probability is 
 [HOT edge]
Branch Probability Analysis
dom-tree-reachability-max-bbs-to-explore
Max number of BBs to explore for reachability analysis
cfg-func-name
The name of a function (or its substring) whose CFG is viewed/printed.
cfg-dot-filename-prefix
The prefix used for the CFG dot file names.
cfg-hide-unreachable-paths
cfg-hide-deoptimize-paths
cfg-heat-colors
Show heat colors in CFG
cfg-raw-weights
Use raw weights for labels. Use percentages as default.
cfg-weights
Show edges labeled with weights
Inclusion-Based CFL Alias Analysis
Unification-Based CFL Alias Analysis
abort-on-max-devirt-iterations-reached
Abort when the max iterations for devirtualization CGSCC repeat pass is reached
Call graph node for function: '
Call graph node <<null function>>
>>  #uses=
  CS<
> calls 
function '
external node
No call graph has been built!
CallGraph Construction
basiccg
max-devirt-iterations
cgscc-passmgr
MaxSCCIterations
Maximum CGSCCPassMgr iterations on one SCC
CallGraph Pass Manager
Call Graph SCC Pass Manager
Print CallGraph IR
Printing <null> Function
<<null function>>
DummyCGSCCPass
capture-tracking
NumCaptured
Number of pointers maybe captured
NumNotCaptured
Number of pointers not captured
NumCapturedBefore
Number of pointers maybe captured before
NumNotCapturedBefore
Number of pointers not captured before
capture-tracking-max-uses-to-explore
Maximal number of uses to explore.
ddg-simplify
Simplify DDG by merging nodes that have less interesting edges.
ddg-pi-blocks
Create pi-block nodes.
dot-ddg-only
simple ddg dot graph
dot-ddg-filename-prefix
The prefix used for the DDG dot file names.
DemandedBits: 0x
 for 
Demanded bits analysis
TotalArrayPairs
Array pairs tested
SeparableSubscriptPairs
Separable subscript pairs
CoupledSubscriptPairs
Coupled subscript pairs
NonlinearSubscriptPairs
Nonlinear subscript pairs
ZIVapplications
ZIV applications
ZIVindependence
ZIV independence
StrongSIVapplications
Strong SIV applications
StrongSIVsuccesses
Strong SIV successes
StrongSIVindependence
Strong SIV independence
WeakCrossingSIVapplications
Weak-Crossing SIV applications
WeakCrossingSIVsuccesses
Weak-Crossing SIV successes
WeakCrossingSIVindependence
Weak-Crossing SIV independence
ExactSIVapplications
Exact SIV applications
ExactSIVsuccesses
Exact SIV successes
ExactSIVindependence
Exact SIV independence
WeakZeroSIVapplications
Weak-Zero SIV applications
WeakZeroSIVsuccesses
Weak-Zero SIV successes
WeakZeroSIVindependence
Weak-Zero SIV independence
ExactRDIVapplications
Exact RDIV applications
ExactRDIVindependence
Exact RDIV independence
SymbolicRDIVapplications
Symbolic RDIV applications
SymbolicRDIVindependence
Symbolic RDIV independence
DeltaApplications
Delta applications
DeltaSuccesses
Delta successes
DeltaIndependence
Delta independence
DeltaPropagations
Delta propagations
GCDapplications
GCD applications
GCDsuccesses
GCD successes
GCDindependence
GCD independence
BanerjeeApplications
Banerjee applications
BanerjeeIndependence
Banerjee independence
BanerjeeSuccesses
Banerjee successes
da-delinearize
Try to delinearize array references.
da-disable-delinearization-checks
Disable checks that try to statically verify validity of delinearized subscripts. Enabling this option may result in incorrect dependence vectors for languages that allow the subscript of one dimension to underflow or overflow into another dimension.
confused
consistent 
flow
anti
 splitable
Dependence Analysis
Src:
 --> Dst:
  da analyze - 
  da analyze - split level = 
, iteration = 
none!
  DomFrontier for BB 
 is:
<<exit node>>
Dominance Frontier Construction
__gnat_eh_personality
__gxx_personality_v0
__gxx_personality_sj0
__gcc_personality_v0
__gcc_personality_sj0
__objc_personality_v0
_except_handler3
__C_specific_handler
__CxxFrameHandler3
ProcessCLRException
rust_eh_personality
__gxx_wasm_personality_v0
__xlcxx_personality_v1
globalsmodref-aa
NumNonAddrTakenGlobalVars
Number of global vars without address taken
NumNonAddrTakenFunctions
Number of functions without address taken
NumNoMemFunctions
Number of functions that do not access memory
NumReadMemFunctions
Number of functions that only read memory
NumIndirectGlobalVars
Number of indirect global objects
enable-unsafe-globalsmodref-alias-results
Globals Alias Analysis
ir-similarity-identifier
IV Users for loop 
 with backedge-taken count 
 (post-inc with loop 
 in  
Printing <null> User
Induction Variable Users
icp-remaining-percent-threshold
The percentage threshold against remaining unpromoted indirect call count for the promotion
icp-total-percent-threshold
The percentage threshold against total count for the promotion
icp-max-prom
Max number of promotions for a single indirect call callsite
inline-cost
NumCallsAnalyzed
Number of call sites analyzed
inlinedefault-threshold
Default amount of inlining to perform
print-instruction-comments
Prints comments for instruction based on inline cost analysis
inline-threshold
Control the amount of inlining to perform (default = 225)
inlinehint-threshold
Threshold for inlining functions with inline hint
inline-cold-callsite-threshold
Threshold for inlining cold callsites
inline-enable-cost-benefit-analysis
Enable the cost-benefit analysis for the inliner
inline-savings-multiplier
Multiplier to multiply cycle savings by during inlining
inline-size-allowance
The maximum size of a callee that get's inlined without sufficient cycle savings
inlinecold-threshold
Threshold for inlining functions with cold attribute
hot-callsite-threshold
Threshold for hot callsites 
locally-hot-callsite-threshold
Threshold for locally hot callsites 
cold-callsite-rel-freq
Maximum block frequency, expressed as a percentage of caller's entry frequency, for a callsite to be cold in the absence of profile information.
hot-callsite-rel-freq
Minimum block frequency, expressed as a multiple of caller's entry frequency, for a callsite to be hot in the absence of profile information.
inline-cost-full
Compute the full inline cost of a call site even when the cost exceeds the threshold.
inline-caller-superset-nobuiltin
Allow inlining when caller has a superset of callee's nobuiltin attributes.
disable-gep-const-evaluation
Disables evaluation of GetElementPtr with constant operands
indirect call
unsplited coroutine call
byval arguments without alloca address space
conflicting attributes
nullptr definitions incompatible
interposable
noinline function attribute
noinline call site attribute
stack protected caller but callee requested no stack protector
stack protected callee but caller requested no stack protector
always inline attribute
empty function
contains indirect branches
blockaddress used outside of callbr
recursive call
exposes returns-twice attribute
disallowed inlining of @llvm.icall.branch.funnel
disallowed inlining of @llvm.localescape
contains VarArgs initialized with va_start
; No analysis for the instruction
; cost before = 
, cost after = 
, threshold before = 
, threshold after = 
cost delta = 
, threshold delta = 
, simplified to 
Cost over threshold.
high cost
exposes returns twice
dynamic alloca
indirect branch
uninlinable intrinsic
varargs
recursive and allocates too much stack space
Call site analysis is not favorable to inlining.
NeverInline
 has uninlinable pattern (
InlineResult
) and cost is not fully computed
. Cost is not fully computed
NumCallerCallersAnalyzed
Number of caller-callers analyzed
inline-remark-attribute
Enable adding inline-remark attribute to callsites processed by inliner but decided to be not inlined
inline-deferral-scale
Scale to limit the cost of inline deferral
inline-remark
deferred
 at callsite 
Line
Disc
(cost=always)
(cost=never)
(cost=
 not inlined into 
 because it should never be inlined 
 because too costly to inline 
IncreaseCostInOtherContexts
Not inlining. Cost of inlining 
 increases the cost of inlining 
 in other contexts
Inlined
 inlined into 
 to match profiling context
 with 
Lazy Branch Probability Analysis
lazy-branch-prob
Lazy Block Frequency Analysis
lazy-block-freq
Lazy Value Information Analysis
; LatticeVal for: '
' is: 
' in BB: '
use-gpu-divergence-analysis
turn the LegacyDivergenceAnalysis into a wrapper for GPUDivergenceAnalysis
DIVERGENT: 
           
           
DIVERGENT:     
               
Legacy Divergence Analysis
divergence
available-load-scan-limit
Use this to specify the default maximum number of instructions to scan backward from a given instruction, when searching for available loaded value
force-vector-width
Sets the SIMD width. Zero is autoselect.
force-vector-interleave
Sets the vectorization interleave count. Zero is autoselect.
runtime-memory-check-threshold
When performing memory disambiguation checks at runtime do not generate more than this number of comparisons (default = 8).
memory-check-merge-threshold
Maximum number of comparisons done when trying to merge runtime memory checks. (default = 100)
max-dependences
Maximum number of dependences collected by loop-access analysis (default = 100)
enable-mem-access-versioning
Enable symbolic stride memory access versioning
store-to-load-forwarding-conflict-detection
Enable conflict detection in loop-access analysis
Check 
Comparing group (
Against group (
Run-time memory checks:
Grouped accesses:
Group 
(Low: 
 High: 
Member: 
NoDep
Forward
ForwardButPreventsForwarding
Backward
BackwardVectorizable
BackwardVectorizableButPreventsForwarding
 -> 
NotInnerMostLoop
loop is not the innermost loop
CFGNotUnderstood
loop control flow is not understood by analyzer
CantComputeNumberOfIterations
could not determine number of loop iterations
CantVectorizeInstruction
instruction cannot be vectorized
NonSimpleLoad
read with atomic ordering or volatile read
NonSimpleStore
write with atomic ordering or volatile write
CantIdentifyArrayBounds
cannot identify array bounds
CantCheckMemDepsAtRunTime
cannot check memory dependencies at runtime
CantInsertRuntimeCheckWithConvergent
cannot add control dependency to convergent operation
UnsafeMemDep
unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
loop-accesses
Memory dependences are safe
 with a maximum dependence distance of 
 with run-time checks
Has convergent operation in loop
Report: 
Dependences:
Too many dependences, not recorded
Non vectorizable stores to invariant address were 
found in loop.
SCEV assumptions:
Expressions re-written:
default-trip-count
Use this to specify the default trip count of a loop
temporal-reuse-threshold
Use this to specify the max. distance between array elements accessed in a loop so that the elements are classified to have temporal reuse
Parallel 
Loop at depth 
 containing: 
<header>
<latch>
<exiting>
verify-loop-info
Verify loop info (time consuming)
llvm.loop.unroll.disable
llvm.loop.unroll.
llvm.loop.parallel_accesses
 (loop: 
; Preheader:
; Loop:
Printing <null> block
; Exit blocks
Natural Loop Information
RunLoopPass
<deleted loop>
<deleted>
Loop Pass Manager
Print Loop IR
LCSSA Verifier
lcssa-verification
Loop Pass Manager
disable-aligned-alloc-awareness
If the optimizer should treat aligned_alloc as an unknown function
memory-builtins
ObjectVisitorArgument
Number of arguments with unsolved size and offset
ObjectVisitorLoad
Number of load instructions with unsolved size and offset
NumCacheNonLocal
Number of fully cached non-local responses
NumCacheDirtyNonLocal
Number of dirty cached non-local responses
NumUncacheNonLocal
Number of uncached non-local responses
NumCacheNonLocalPtr
Number of fully cached non-local ptr responses
NumCacheDirtyNonLocalPtr
Number of cached, but dirty, non-local ptr responses
NumUncacheNonLocalPtr
Number of uncached non-local ptr responses
NumCacheCompleteNonLocalPtr
Number of block queries that were completely cached
memdep-block-scan-limit
The number of instructions to scan in a block in memory dependency analysis (default = 100)
memdep-block-number-limit
The number of blocks to scan during memory dependency analysis (default = 1000)
Memory Dependence Analysis
dot-cfg-mssa
file name for generated dot file
memssa-check-limit
The maximum number of stores/phis MemorySSAwill consider trying to walk past (default = 100)
enable-mssa-loop-dependency
Enable MemorySSA dependency for loop pass manager
verify-memoryssa
Enable verification of MemorySSA.
 = MemoryDef(
 = MemoryPhi(
MemoryUse(
Memory SSA
force-summary-edges-cold
Force all edges in the function summary to cold
None.
all-non-critical
All non-critical edges.
All edges.
module-summary-dot-file
File to emit dot graph of new summary into.
EnableSplitLTOUnit
Failed to open dot file 
Module summary info
module-summary-info
ObjC-ARC-Based Alias Analysis
enable-objc-arc-opts
enable/disable all ARC Optimizations
opt-remark-emitter
 is 
.phi.trans.insert
Phi Values Analysis
Post-Dominator Tree Construction
profile-summary-cutoff-hot
A count is hot if it exceeds the minimum count to reach this percentile of total counts.
profile-summary-cutoff-cold
A count is cold if it is below the minimum count to reach this percentile of total counts.
profile-summary-huge-working-set-size-threshold
The code working set size is considered huge if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
profile-summary-large-working-set-size-threshold
The code working set size is considered large if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
profile-summary-hot-count
A fixed hot count that overrides the count derived from profile-summary-cutoff-hot
profile-summary-cold-count
A fixed cold count that overrides the count derived from profile-summary-cutoff-cold
partial-profile
Specify the current profile is used as a partial profile.
scale-partial-sample-profile-working-set-size
If true, scale the working set size of the partial sample profile by the partial profile ratio to reflect the size of the program being compiled.
partial-sample-profile-working-set-size-scale-factor
The scale factor used to scale the working set size of the partial sample profile along with the partial profile ratio. This includes the factor of the profile counter per block and the factor to scale the working set size to use the same shared thresholds as PGO.
Profile summary info
profile-summary-info
Broken region found: enumerated BB not in region!
Broken region found: edges leaving the region must go to the exit node!
Broken region found: edges entering the region must go to the entry node!
<Function Return>
 => 
BB map does not match region nesting
Region tree:
End region tree
region
numRegions
The # of regions
numSimpleRegions
The # of simple regions
verify-region-info
Verify region info (time consuming)
print-region-style
style of printing regions
print no details
print regions in detail with block_iterator
print regions in detail with element_iterator
Detect single entry single exit regions
Could not open remarks file: 
NumArrayLenItCounts
Number of trip counts computed with array length
NumTripCountsComputed
Number of loops with predictable loop counts
NumTripCountsNotComputed
Number of loops without predictable loop counts
NumBruteForceTripCountsComputed
Number of loops with trip counts computed by force
scalar-evolution-max-iterations
Maximum number of iterations SCEV will symbolically execute a constant derived loop
verify-scev
Verify ScalarEvolution's backedge taken counts (slow)
verify-scev-strict
Enable stricter verification with -verify-scev is passed
verify-scev-maps
Verify no dangling value in ScalarEvolution's ExprValueMap (slow)
scev-verify-ir
Verify IR correctness when making sensitive SCEV queries (slow)
scev-mulops-inline-threshold
Threshold for inlining multiplication operands into a SCEV
scev-addops-inline-threshold
Threshold for inlining addition operands into a SCEV
scalar-evolution-max-scev-compare-depth
Maximum depth of recursive SCEV complexity comparisons
scalar-evolution-max-scev-operations-implication-depth
Maximum depth of recursive SCEV operations implication analysis
scalar-evolution-max-value-compare-depth
Maximum depth of recursive value complexity comparisons
scalar-evolution-max-arith-depth
Maximum depth of recursive arithmetics
scalar-evolution-max-constant-evolving-depth
Maximum depth of recursive constant evolving
scalar-evolution-max-cast-depth
Maximum depth of recursive SExt/ZExt/Trunc
scalar-evolution-max-add-rec-size
Max coefficients in AddRec during evolving
scalar-evolution-huge-expr-threshold
Size of the expression which is considered huge
scalar-evolution-classify-expressions
When printing analysis, include information on every instruction
scalar-evolution-use-expensive-range-sharpening
Use more powerful methods of sharpening expression ranges. May be costly in terms of compile time
(ptrtoint 
(trunc 
(zext 
(sext 
nuw><
nsw><
nw><
 umax 
 smax 
 umin 
 smin 
<nuw>
<nsw>
 /u 
sizeof(
alignof(
offsetof(
***COULDNOTCOMPUTE***
Classifying expressions for: 
  -->  
 U: 
 S: 
Exits: 
<<Unknown>>
LoopDispositions: { 
Determining loop execution counts for: 
Trip Count for 
 Changed!
Old: 
New: 
Delta: 
Equal predicate: 
 == 
 Added Flags: 
<nusw>
<nssw>
[PSE]
--> 
Variant
Invariant
Computable
Loop 
<multiple exits> 
backedge-taken count is 
Unpredictable backedge-taken count.
  exit count for 
max backedge-taken count is 
, actual taken count either this or zero.
Unpredictable max backedge-taken count. 
Loop 
Predicated backedge-taken count is 
 Predicates:
Unpredictable predicated backedge-taken count. 
Trip multiple is 
Scalar Evolution Analysis
ScalarEvolution-based Alias Analysis
NumAllocaStackSafe
Number of safe allocas
NumAllocaTotal
Number of total allocas
NumCombinedCalleeLookupTotal
Number of total callee lookups on combined index.
NumCombinedCalleeLookupFailed
Number of failed callee lookups on combined index.
NumModuleCalleeLookupTotal
Number of total callee lookups on module index.
NumModuleCalleeLookupFailed
Number of failed callee lookups on module index.
NumCombinedParamAccessesBefore
Number of total param accesses before generateParamAccessSummary.
NumCombinedParamAccessesAfter
Number of total param accesses after generateParamAccessSummary.
NumCombinedDataFlowNodes
Number of total nodes in combined index for dataflow processing.
NumIndexCalleeUnhandled
Number of index callee which are unhandled.
NumIndexCalleeMultipleWeak
Number of index callee non-unique weak.
NumIndexCalleeMultipleExternal
Number of index callee non-unique external.
stack-safety-max-iterations
stack-safety-print
stack-safety-run
 dso_preemptable
 interposable
    args uses:
      
arg{0}
[]: 
    allocas uses:
(arg
vector-library
Vector functions library
No vector functions library
Accelerate
Accelerate framework
LIBMVEC-X86
GLIBC Vector Math library
MASSV
IBM MASS vector library
SVML
Intel SVML library
??2@YAPAXI@Z
??2@YAPAXIABUnothrow_t@std@@@Z
??2@YAPEAX_K@Z
??2@YAPEAX_KAEBUnothrow_t@std@@@Z
??3@YAXPAX@Z
??3@YAXPAXABUnothrow_t@std@@@Z
??3@YAXPAXI@Z
??3@YAXPEAX@Z
??3@YAXPEAXAEBUnothrow_t@std@@@Z
??3@YAXPEAX_K@Z
??_U@YAPAXI@Z
??_U@YAPAXIABUnothrow_t@std@@@Z
??_U@YAPEAX_K@Z
??_U@YAPEAX_KAEBUnothrow_t@std@@@Z
??_V@YAXPAX@Z
??_V@YAXPAXABUnothrow_t@std@@@Z
??_V@YAXPAXI@Z
??_V@YAXPEAX@Z
??_V@YAXPEAXAEBUnothrow_t@std@@@Z
??_V@YAXPEAX_K@Z
_IO_getc
_IO_putc
_ZdaPv
_ZdaPvRKSt9nothrow_t
_ZdaPvSt11align_val_t
_ZdaPvSt11align_val_tRKSt9nothrow_t
_ZdaPvj
_ZdaPvjSt11align_val_t
_ZdaPvm
_ZdaPvmSt11align_val_t
_ZdlPv
_ZdlPvRKSt9nothrow_t
_ZdlPvSt11align_val_t
_ZdlPvSt11align_val_tRKSt9nothrow_t
_ZdlPvj
_ZdlPvjSt11align_val_t
_ZdlPvm
_ZdlPvmSt11align_val_t
_Znaj
_ZnajRKSt9nothrow_t
_ZnajSt11align_val_t
_ZnajSt11align_val_tRKSt9nothrow_t
_Znam
_ZnamRKSt9nothrow_t
_ZnamSt11align_val_t
_ZnamSt11align_val_tRKSt9nothrow_t
_Znwj
_ZnwjRKSt9nothrow_t
_ZnwjSt11align_val_t
_ZnwjSt11align_val_tRKSt9nothrow_t
_Znwm
_ZnwmRKSt9nothrow_t
_ZnwmSt11align_val_t
_ZnwmSt11align_val_tRKSt9nothrow_t
__acos_finite
__acosf_finite
__acosh_finite
__acoshf_finite
__acoshl_finite
__acosl_finite
__asin_finite
__asinf_finite
__asinl_finite
__atan2_finite
__atan2f_finite
__atan2l_finite
__atanh_finite
__atanhf_finite
__atanhl_finite
__cosh_finite
__coshf_finite
__coshl_finite
__cospi
__cospif
__cxa_atexit
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_release
__exp10_finite
__exp10f_finite
__exp10l_finite
__isoc99_scanf
__isoc99_sscanf
__memccpy_chk
__memcpy_chk
__memmove_chk
__mempcpy_chk
__memset_chk
__nvvm_reflect
__sincospi_stret
__sincospif_stret
__sinh_finite
__sinhf_finite
__sinhl_finite
__sinpi
__sinpif
__small_fprintf
__small_printf
__small_sprintf
__snprintf_chk
__sprintf_chk
__sqrt_finite
__sqrtf_finite
__sqrtl_finite
__stpcpy_chk
__stpncpy_chk
__strcat_chk
__strcpy_chk
__strdup
__strlcat_chk
__strlcpy_chk
__strlen_chk
__strncat_chk
__strncpy_chk
__strndup
__strtok_r
__vsnprintf_chk
__vsprintf_chk
access
acos
acosf
acosh
acoshf
acoshl
acosl
aligned_alloc
asin
asinf
asinh
asinhf
asinhl
asinl
atan
atan2
atan2f
atan2l
atanf
atanh
atanhf
atanhl
atanl
atof
atoi
atol
atoll
bcmp
bcopy
bzero
cabs
cabsf
cabsl
calloc
chmod
chown
clearerr
closedir
cosh
coshf
coshl
ctermid
execl
execle
execlp
execv
execvP
execve
execvp
execvpe
exp10
exp10f
exp10l
expm1
expm1f
expm1l
fclose
fdopen
feof
ferror
fflush
ffsll
fgetc
fgetc_unlocked
fgetpos
fgets
fgets_unlocked
fileno
fiprintf
flockfile
flsl
flsll
fopen
fopen64
fork
fprintf
fputc
fputc_unlocked
fputs
fputs_unlocked
fread
fread_unlocked
frexp
frexpf
frexpl
fscanf
fseek
fseeko
fseeko64
fsetpos
fstat
fstat64
fstatvfs
fstatvfs64
ftell
ftello
ftello64
ftrylockfile
funlockfile
fwrite
fwrite_unlocked
getc
getc_unlocked
getchar
getchar_unlocked
getenv
getitimer
getlogin_r
getpwnam
gets
gettimeofday
htonl
htons
iprintf
isascii
isdigit
lchown
ldexp
ldexpf
ldexpl
log1p
log1pf
log1pl
logb
logbf
logbl
lstat
lstat64
memalign
memccpy
memchr
memcmp
mempcpy
memrchr
memset_pattern16
mkdir
mktime
modf
modff
modfl
ntohl
ntohs
open
open64
opendir
pclose
perror
popen
posix_memalign
pread
printf
putc
putc_unlocked
putchar
putchar_unlocked
puts
pwrite
qsort
read
readlink
realloc
reallocf
realpath
remainder
remainderf
remainderl
remove
rename
rewind
rmdir
scanf
setbuf
setitimer
setvbuf
sinh
sinhf
sinhl
siprintf
snprintf
sprintf
sscanf
stat
stat64
statvfs
statvfs64
stpcpy
stpncpy
strcasecmp
strcat
strchr
strcmp
strcoll
strcpy
strcspn
strdup
strlcat
strlcpy
strlen
strncasecmp
strncat
strncmp
strncpy
strndup
strnlen
strpbrk
strrchr
strspn
strstr
strtod
strtof
strtok
strtok_r
strtol
strtold
strtoll
strtoul
strtoull
strxfrm
system
tanf
tanh
tanhf
tanhl
tanl
times
tmpfile
tmpfile64
toascii
uname
ungetc
unlink
unsetenv
utime
utimes
valloc
vfprintf
vfscanf
vprintf
vscanf
vsnprintf
vsprintf
vsscanf
wcslen
write
vceilf
vfabsf
llvm.fabs.f32
vfloorf
vsqrtf
llvm.sqrt.f32
vexpf
llvm.exp.f32
vexpm1f
vlogf
llvm.log.f32
vlog1pf
vlog10f
llvm.log10.f32
vlogbf
vsinf
llvm.sin.f32
vcosf
llvm.cos.f32
vtanf
vasinf
vacosf
vatanf
vsinhf
vcoshf
vtanhf
vasinhf
vacoshf
vatanhf
_ZGVbN2v_sin
_ZGVdN4v_sin
_ZGVbN4v_sinf
_ZGVdN8v_sinf
llvm.sin.f64
_ZGVbN2v_cos
_ZGVdN4v_cos
_ZGVbN4v_cosf
_ZGVdN8v_cosf
llvm.cos.f64
_ZGVbN2vv_pow
_ZGVdN4vv_pow
_ZGVbN4vv_powf
_ZGVdN8vv_powf
_ZGVbN2vv___pow_finite
_ZGVdN4vv___pow_finite
_ZGVbN4vv___powf_finite
_ZGVdN8vv___powf_finite
llvm.pow.f64
llvm.pow.f32
_ZGVbN2v_exp
_ZGVdN4v_exp
_ZGVbN4v_expf
_ZGVdN8v_expf
_ZGVbN2v___exp_finite
_ZGVdN4v___exp_finite
_ZGVbN4v___expf_finite
_ZGVdN8v___expf_finite
llvm.exp.f64
_ZGVbN2v_log
_ZGVdN4v_log
_ZGVbN4v_logf
_ZGVdN8v_logf
_ZGVbN2v___log_finite
_ZGVdN4v___log_finite
_ZGVbN4v___logf_finite
_ZGVdN8v___logf_finite
llvm.log.f64
__cbrtd2_massv
__cbrtf4_massv
__powd2_massv
__powf4_massv
__sqrtd2_massv
llvm.sqrt.f64
__sqrtf4_massv
__expd2_massv
__expf4_massv
__exp2d2_massv
llvm.exp2.f64
__exp2f4_massv
llvm.exp2.f32
__expm1d2_massv
__expm1f4_massv
__logd2_massv
__logf4_massv
__log1pd2_massv
__log1pf4_massv
__log10d2_massv
llvm.log10.f64
__log10f4_massv
__log2d2_massv
llvm.log2.f64
__log2f4_massv
llvm.log2.f32
__sind2_massv
__sinf4_massv
__cosd2_massv
__cosf4_massv
__tand2_massv
__tanf4_massv
__asind2_massv
__asinf4_massv
__acosd2_massv
__acosf4_massv
__atand2_massv
__atanf4_massv
__atan2d2_massv
__atan2f4_massv
__sinhd2_massv
__sinhf4_massv
__coshd2_massv
__coshf4_massv
__tanhd2_massv
__tanhf4_massv
__asinhd2_massv
__asinhf4_massv
__acoshd2_massv
__acoshf4_massv
__atanhd2_massv
__atanhf4_massv
__svml_sin2
__svml_sin4
__svml_sin8
__svml_sinf4
__svml_sinf8
__svml_sinf16
__svml_cos2
__svml_cos4
__svml_cos8
__svml_cosf4
__svml_cosf8
__svml_cosf16
__svml_pow2
__svml_pow4
__svml_pow8
__svml_powf4
__svml_powf8
__svml_powf16
__svml_exp2
__svml_exp4
__svml_exp8
__svml_expf4
__svml_expf8
__svml_expf16
__svml_log2
__svml_log4
__svml_log8
__svml_logf4
__svml_logf8
__svml_logf16
__svml_log22
__svml_log24
__svml_log28
__svml_log2f4
__svml_log2f8
__svml_log2f16
__svml_log102
__svml_log104
__svml_log108
__svml_log10f4
__svml_log10f8
__svml_log10f16
__svml_sqrt2
__svml_sqrt4
__svml_sqrt8
__svml_sqrtf4
__svml_sqrtf8
__svml_sqrtf16
__svml_exp22
__svml_exp24
__svml_exp28
__svml_exp2f4
__svml_exp2f8
__svml_exp2f16
fwrite$UNIX2003
fputs$UNIX2003
_cabs
_copysign
_copysignf
_logb
_logbf
__exp10
__exp10f
Target Library Information
costmodel-reduxcost
Recognize reduction patterns.
Target Transform Information
enable-tbaa
Cycle found in TBAA metadata.
Type-Based Alias Analysis
enable-scoped-noalias
Scoped NoAlias Alias Analysis
notconstant<
constantrange incl. undef <
constantrange<
constant<
dom-conditions-max-uses
value-tracking
BadAssumption
Detected conflicting code assumptions. Program may have undefined behavior, or compiler may have internal error.
max-interleave-group-factor
Maximum factor for an interleaved access group (default = 8)
_ZGV
_LLVM_
vector-function-abi-variant
Invalid sign in float literal
invalid hexadecimal floating-point constant: expected at least one significand digit
invalid hexadecimal floating-point constant: expected exponent part 'p'
invalid hexadecimal floating-point constant: expected at least one exponent digit
unterminated comment
 number
invalid binary number
invalid hexadecimal number
unterminated string constant
unterminated single quote
single quote way too long
invalid character in input
base-
missing expression
Recursive use of '
invalid assignment to '
invalid reassignment of non-absolute variable '
Need to implement createXCOFFAsmParser for XCOFF format.
.set
.equ
.equiv
.ascii
.asciz
.string
.byte
.value
.long
.int
.quad
.octa
.single
.float
.double
.align32
.balign
.balignw
.balignl
.p2align
.p2alignw
.p2alignl
.org
.fill
.zero
.extern
.globl
.global
.lazy_reference
.no_dead_strip
.symbol_resolver
.private_extern
.reference
.weak_definition
.weak_reference
.weak_def_can_be_hidden
.cold
.comm
.common
.lcomm
.abort
.include
.incbin
.rept
.rep
.irp
.irpc
.endr
.bundle_align_mode
.bundle_lock
.bundle_unlock
.ifeq
.ifge
.ifgt
.ifle
.iflt
.ifne
.ifb
.ifnb
.ifc
.ifeqs
.ifnc
.ifnes
.ifdef
.ifndef
.ifnotdef
.elseif
.else
.end
.endif
.skip
.space
.file
.line
.loc
.stabs
.cv_file
.cv_func_id
.cv_loc
.cv_linetable
.cv_inline_linetable
.cv_inline_site_id
.cv_def_range
.cv_string
.cv_stringtable
.cv_filechecksums
.cv_filechecksumoffset
.cv_fpo_data
.sleb128
.uleb128
.cfi_sections
.cfi_startproc
.cfi_endproc
.cfi_def_cfa
.cfi_def_cfa_offset
.cfi_adjust_cfa_offset
.cfi_def_cfa_register
.cfi_offset
.cfi_rel_offset
.cfi_personality
.cfi_lsda
.cfi_remember_state
.cfi_restore_state
.cfi_same_value
.cfi_restore
.cfi_escape
.cfi_return_column
.cfi_signal_frame
.cfi_undefined
.cfi_register
.cfi_window_save
.macros_on
.macros_off
.macro
.exitm
.endm
.endmacro
.purgem
.err
.error
.warning
.altmacro
.noaltmacro
.reloc
.dc.a
.dc.b
.dc.d
.dc.l
.dc.s
.dc.w
.dc.x
.dcb
.dcb.b
.dcb.d
.dcb.l
.dcb.s
.dcb.w
.dcb.x
.ds.b
.ds.d
.ds.l
.ds.p
.ds.s
.ds.w
.ds.x
.print
.addrsig
.addrsig_sym
.pseudoprobe
frame_ptr_rel
subfield_reg
reg_rel
unmatched .ifs or .elses
unassigned file number: 
 for .file directives
assembler local symbol '
' not defined
directional label undefined
unexpected token at start of statement
invalid use of pseudo-symbol '.' as a label
 not currently supported for this target
unknown directive
__emit
_EMIT
__EMIT
parsed instruction: [
unexpected token in '.if' directive
unexpected token in '.ifb' directive
unexpected token in '.ifc' directive
expected string parameter for '.ifeqs' directive
expected string parameter for '.ifnes' directive
expected comma after first string for '.ifeqs' directive
expected comma after first string for '.ifnes' directive
expected identifier after '.ifdef'
unexpected token in '.ifdef'
Encountered a .elseif that doesn't follow an .if or  an .elseif
unexpected token in '.elseif' directive
unexpected token in '.else' directive
Encountered a .else that doesn't follow  an .if or an .elseif
unexpected token in '.endif' directive
Encountered a .endif that doesn't follow an .if or .else
macros cannot be nested more than 
 levels deep.
 Use -asm-macro-max-nesting-depth to increase this limit.
.endmacro
<instantiation>
invalid argument identifier for formal argument
expected '=' after formal parameter identifier
cannot mix positional and keyword arguments
parameter named '
' does not exist for macro '
missing value for required parameter '
' in macro '
too many positional arguments
unexpected token in macro instantiation
unbalanced parentheses in macro argument
Wrong number of arguments
 in '
out of range literal value
infinity
invalid floating point literal
 in directive
p2align directive with no operand(s) is ignored
invalid alignment value
alignment must be a power of 2
alignment must be smaller than 2**32
alignment directive can never be satisfied in this many bytes, ignoring maximum bytes expression
maximum bytes expression exceeds alignment and has no effect
 in '.org' directive
unexpected token in '.fill' directive
'.fill' directive with negative size has no effect
'.fill' directive with size greater than 8 has been truncated to 8
'.fill' directive pattern has been truncated to 32-bits
unexpected token in '.zero' directive
non-local symbol required
unable to emit symbol attribute
alignment not supported on this target
unexpected token in '.comm' or '.lcomm' directive
invalid '.comm' or '.lcomm' directive size, can't be less than zero
invalid '.comm' or '.lcomm' directive alignment, can't be less than zero
unexpected token in '.abort' directive
.abort detected. Assembly stopping.
.abort '
' detected. Assembly stopping.
expected string in '.include' directive
unexpected token in '.include' directive
Could not find include file '
expected string in '.incbin' directive
unexpected token in '.incbin' directive
skip is negative
Could not find incbin file '
negative count has no effect
Count is negative
no matching '.endr' in definition
unexpected token in '.endr' directive
.endr
expected identifier in '.irp' directive
expected comma in '.irp' directive
expected End of Statement
expected identifier in '.irpc' directive
expected comma in '.irpc' directive
unexpected token in '.irpc' directive
expected end of statement
unmatched '.endr' directive
unexpected token after expression in '.bundle_align_mode' directive
invalid bundle alignment size (expected between 0 and 30)
invalid option for '.bundle_lock' directive
align_to_end
unexpected token after '.bundle_lock' directive option
unexpected token in '.bundle_unlock' directive
in '
negative file number
unexpected token in '.file' directive
explicit path specified, but no file number
MD5 checksum specified, but no file number
source
source specified, but no file number
file 0 not supported prior to DWARF-5
inconsistent use of MD5 checksums
unexpected token in '.line' directive
unexpected token in '.loc' directive
file number less than one in '.loc' directive
unassigned file number in '.loc' directive
line number less than zero in '.loc' directive
column position less than zero in '.loc' directive
is_stmt value not 0 or 1
is_stmt value not the constant value of 0 or 1
isa number less than zero
isa number not a constant value
discriminator
unknown sub-directive in '.loc' directive
unsupported directive '.stabs'
expected file number in '.cv_file' directive
file number less than one
unexpected token in '.cv_file' directive
expected checksum kind in '.cv_file' directive
file number already allocated
unexpected token in '.cv_func_id' directive
function id already allocated
expected function id in '
expected function id within range [0, UINT_MAX)
within
expected 'within' identifier in '.cv_inline_site_id' directive
inlined_at
expected 'inlined_at' identifier in '.cv_inline_site_id' directive
expected line number after 'inlined_at'
unexpected token in '.cv_inline_site_id' directive
expected integer in '
file number less than one in '
unassigned file number in '
line number less than zero in '.cv_loc' directive
column position less than zero in '.cv_loc' directive
unexpected token in '.cv_loc' directive
unknown sub-directive in '.cv_loc' directive
unexpected token in '.cv_linetable' directive
expected SourceField in '.cv_inline_linetable' directive
File id less than zero in '.cv_inline_linetable' directive
expected SourceLineNum in '.cv_inline_linetable' directive
Line number less than zero in '.cv_inline_linetable' directive
Expected End of Statement
expected comma before def_range type in .cv_def_range directive
expected def_range type in directive
expected comma before register number in .cv_def_range directive
expected register number
expected comma before offset in .cv_def_range directive
expected offset value
expected register value
expected comma before flag value in .cv_def_range directive
expected flag value
expected comma before base pointer offset in .cv_def_range directive
expected base pointer offset value
unexpected def_range type in .cv_def_range directive
 in '.cv_string' directive
 in '.cv_fpo_data' directive
Expected an identifier
.eh_frame
.debug_frame
 in '.cfi_sections' directive
simple
 in '.cfi_startproc' directive
 in '.cfi_endproc' directive
unsupported encoding.
unexpected token in '.cfi_signal_frame'
expected identifier in '.macro' directive
vararg parameter '
' should be the last parameter
macro '
' has multiple parameters named '
missing parameter qualifier for '
vararg
 is not a valid parameter qualifier for '
pointless default value for required parameter '
no matching '.endmacro' in definition
macro defined with named parameters which are not used in macro body, possible positional parameter found in body which will have no effect
unexpected '
' in file, no current macro definition
expected identifier in '.purgem' directive
unexpected token in '.purgem' directive
' is not defined
unexpected token in '.end' directive
.err encountered
.error directive invoked in source file
.error argument must be a string
.warning directive invoked in source file
.warning argument must be a string
expected end of statement in '.warning' directive
expected relocation name
expression must be relocatable
unexpected token in .reloc directive
' directive with negative repeat count has no effect
literal value out of range for directive
expected double quoted string after .print
expected identifier in '.addrsig_sym' directive
unexpected token in '.pseudoprobe' directive
unexpected expression in _emit
unexpected expression in align
literal value not a power of two greater then zero
 * $$
 + $$
byte ptr 
word ptr 
dword ptr 
qword ptr 
xword ptr 
xmmword ptr 
ymmword ptr 
while in macro instantiation
expected string
unexpected backslash at end of string
invalid hexadecimal escape sequence
invalid octal escape sequence (out of range)
invalid escape sequence (unrecognized character)
unexpected symbol modifier following '@'
invalid variant '
invalid modifier '
' (no symbols present)
invalid variant on expression '
' (already modified)
invalid token in expression
expected symbol variant after '@'
unexpected token in variant, expected ')'
expected a symbol reference
unexpected modifier on variable reference
brackets expression not supported on this target
expected '(' after operator
expected ')' in parentheses expression
expected ']' in brackets expression
expected section directive before assembly directive
.def
.scl
.endef
.secrel32
.symidx
.safeseh
.secidx
.linkonce
.rva
.seh_proc
.seh_endproc
.seh_endfunclet
.seh_startchained
.seh_endchained
.seh_handler
.seh_handlerdata
unexpected token in section switching directive
expected comdat type such as 'discard' or 'largest' after protection bits
expected comma in directive
conflicting section flags 'b' and 'd'.
.debug
one_only
discard
same_size
same_contents
associative
newest
unrecognized COMDAT type '
invalid '.secrel32' directive offset, can't be less than zero or greater than std::numeric_limits<uint32_t>::max()
cannot make section associative with .linkonce
section '
' is already linkonce
invalid '.rva' directive offset, can't be less than -2147483648 or greater than 2147483647
you must specify one or both of @unwind or @except
a handler attribute must begin with '@'
expected @unwind or @except
except
.alt_entry
.indirect_symbol
.lsym
.dump
.secure_log_unique
.secure_log_reset
.zerofill
.data_region
.end_data_region
.const
.const_data
.constructor
.cstring
.destructor
.dyld
.fvmlib_init0
.fvmlib_init1
.lazy_symbol_pointer
.linker_option
.literal16
.literal4
.literal8
.mod_init_func
.mod_term_func
.non_lazy_symbol_pointer
.thread_local_variable_pointer
.objc_cat_cls_meth
.objc_cat_inst_meth
.objc_category
.objc_class
.objc_class_names
.objc_class_vars
.objc_cls_meth
.objc_cls_refs
.objc_inst_meth
.objc_instance_vars
.objc_message_refs
.objc_meta_class
.objc_meth_var_names
.objc_meth_var_types
.objc_module_info
.objc_protocol
.objc_selector_strs
.objc_string_object
.objc_symbols
.picsymbol_stub
.static_const
.static_data
.symbol_stub
.thread_init_func
.tlv
.bridgeos_version_min
.build_version
.ptrauth_abi_version
.ptrauth_kernel_abi_version
.alt_entry must preceed symbol definition
unexpected token in '.desc' directive
indirect symbol not in a symbol pointer or stub section
expected identifier in .indirect_symbol directive
non-local symbol required in directive
unable to emit indirect symbol attribute for: 
unexpected token in '.indirect_symbol' directive
unexpected token in '.lsym' directive
directive '.lsym' is unsupported
unexpected token in '.subsections_via_symbols' directive
expected string in '.dump' or '.load' directive
unexpected token in '.dump' or '.load' directive
ignoring directive .dump for now
ignoring directive .load for now
expected identifier after '.section' directive
unexpected token in '.section' directive
section "
" is deprecated
change section name to "
unexpected token in '.secure_log_unique' directive
.secure_log_unique specified multiple times
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
can't open secure log file: 
unexpected token in '.secure_log_reset' directive
unexpected token in '.tbss' directive
invalid '.tbss' directive size, can't be less thanzero
invalid '.tbss' alignment, can't be lessthan zero
expected segment name after '.zerofill' directive
expected section name after comma in '.zerofill' directive
unexpected token in '.zerofill' directive
invalid '.zerofill' directive size, can't be less than zero
invalid '.zerofill' directive alignment, can't be less than zero
expected region type after '.data_region' directive
unknown region type in '.data_region' directive
unexpected token in '.end_data_region' directive
__dyld
__fvmlib_init0
__fvmlib_init1
expected string in '
__cat_cls_meth
__cat_inst_meth
__category
__class
__class_vars
__cls_meth
__cls_refs
__inst_meth
__instance_vars
__meta_class
__module_info
__protocol
__selector_strs
__string_object
__symbols
__picsymbol_stub
__static_const
__static_data
__symbol_stub
invalid OS update specifier, comma expected
OS update
invalid 
 major version number, integer expected
 major version number
 minor version number required, comma expected
 minor version number, integer expected
 minor version number
 version number, integer expected
 version number
sdk_version
SDK subminor
 used while targeting 
overriding previous version directive
previous definition is here
platform name expected
unknown platform name
version number required, comma expected
 in '.build_version' directive
expected integer version in '.ptrauth_abi_version' directive
invalid ptrauth ABI version number
 in '.ptrauth_abi_version' directive
expected integer version in '.ptrauth_kernel_abi_version' directive
invalid ptrauth kernel ABI version number
 in '.ptrauth_kernel_abi_version' directive
.data.rel
.section
.pushsection
.popsection
.size
.previous
.type
.ident
.symver
.version
.weakref
.weak
.local
.protected
.internal
.hidden
.subsection
.cg_profile
.rodata.
.fini
.text.
.data.
.fini_array.
.preinit_array.
expected string in directive
unknown flag
Section cannot specifiy a group name while also acting as a member of the last group
Mergeable section must specify the type
Group section must specify the type
init_array
fini_array
preinit_array
nobits
progbits
unwind
llvm_odrtab
llvm_linker_options
llvm_call_graph_profile
llvm_dependent_libraries
llvm_sympart
llvm_bb_addr_map
unknown section type
changed section type for 
, expected: 0x
changed section flags for 
changed section entsize for 
, expected: 
DWARF2 only supports one section per compilation unit
alloc
execinstr
expected '@<type>', '%<type>' or "<type>"
expected '%<type>' or "<type>"
expected the entry size
entry size must be positive
expected group name
invalid group name
invalid linkage
comdat
Linkage must be 'comdat'
expected linked-to symbol
invalid linked-to symbol
linked-to symbol is not in a section: 
unique
expected 'unique'
expected commma
unique id must be positive
unique id is too large
.popsection without corresponding .pushsection
.previous without corresponding .section
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '%<type>' or "<type>"
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '@<type>', '%<type>' or "<type>"
expected symbol type in directive
unsupported attribute in '.type' directive
unexpected token in '.type' directive
STT_OBJECT
STT_TLS
STT_COMMON
STT_NOTYPE
STT_GNU_IFUNC
unexpected token in '.ident' directive
expected a '@' in the name
unexpected token in '.version' directive
asm-macro-max-nesting-depth
The maximum nesting depth allowed for assembly macros.
expected a comma
expected integer count in '.cg_profile' directive
expected string in directive, instead got: 
.custom_section
.debug_
unknown section kind: 
Only data sections can be passive
, instead got: 
Unexepcted section flag: 
Expected label after .type directive, got: 
Expected label,@type declaration, got: 
Unknown WASM symbol type: 
llvm.codeview
An unknown CodeView error has occurred.
The buffer is not large enough to read the requested number of bytes.
The CodeView record is corrupted.
There are no records.
The requested operation is not supported.
The member record is of an unknown type.
S_COMPILE
S_REGISTER_16t
S_CONSTANT_16t
S_UDT_16t
S_SSEARCH
S_SKIP
S_CVRESERVE
S_OBJNAME_ST
S_ENDARG
S_COBOLUDT_16t
S_MANYREG_16t
S_RETURN
S_ENTRYTHIS
S_BPREL16
S_LDATA16
S_GDATA16
S_PUB16
S_LPROC16
S_GPROC16
S_THUNK16
S_BLOCK16
S_WITH16
S_LABEL16
S_CEXMODEL16
S_VFTABLE16
S_REGREL16
S_BPREL32_16t
S_LDATA32_16t
S_GDATA32_16t
S_PUB32_16t
S_LPROC32_16t
S_GPROC32_16t
S_THUNK32_ST
S_BLOCK32_ST
S_WITH32_ST
S_LABEL32_ST
S_CEXMODEL32
S_VFTABLE32_16t
S_REGREL32_16t
S_LTHREAD32_16t
S_GTHREAD32_16t
S_SLINK32
S_LPROCMIPS_16t
S_GPROCMIPS_16t
S_PROCREF_ST
S_DATAREF_ST
S_ALIGN
S_LPROCREF_ST
S_OEM
S_TI16_MAX
S_REGISTER_ST
S_CONSTANT_ST
S_UDT_ST
S_COBOLUDT_ST
S_MANYREG_ST
S_BPREL32_ST
S_LDATA32_ST
S_GDATA32_ST
S_PUB32_ST
S_LPROC32_ST
S_GPROC32_ST
S_VFTABLE32
S_REGREL32_ST
S_LTHREAD32_ST
S_GTHREAD32_ST
S_LPROCMIPS_ST
S_GPROCMIPS_ST
S_COMPILE2_ST
S_MANYREG2_ST
S_LPROCIA64_ST
S_GPROCIA64_ST
S_LOCALSLOT_ST
S_PARAMSLOT_ST
S_GMANPROC_ST
S_LMANPROC_ST
S_RESERVED1
S_RESERVED2
S_RESERVED3
S_RESERVED4
S_LMANDATA_ST
S_GMANDATA_ST
S_MANFRAMEREL_ST
S_MANREGISTER_ST
S_MANSLOT_ST
S_MANMANYREG_ST
S_MANREGREL_ST
S_MANMANYREG2_ST
S_MANTYPREF
S_UNAMESPACE_ST
S_ST_MAX
S_WITH32
S_MANYREG
S_LPROCMIPS
S_GPROCMIPS
S_MANYREG2
S_LPROCIA64
S_GPROCIA64
S_LOCALSLOT
S_PARAMSLOT
S_MANFRAMEREL
S_MANREGISTER
S_MANSLOT
S_MANMANYREG
S_MANREGREL
S_MANMANYREG2
S_DATAREF
S_ANNOTATIONREF
S_TOKENREF
S_GMANPROC
S_LMANPROC
S_ATTR_FRAMEREL
S_ATTR_REGISTER
S_ATTR_REGREL
S_ATTR_MANYREG
S_SEPCODE
S_LOCAL_2005
S_DEFRANGE_2005
S_DEFRANGE2_2005
S_DISCARDED
S_LPROCMIPS_ID
S_GPROCMIPS_ID
S_LPROCIA64_ID
S_GPROCIA64_ID
S_DEFRANGE_HLSL
S_GDATA_HLSL
S_LDATA_HLSL
S_LOCAL_DPC_GROUPSHARED
S_DEFRANGE_DPC_PTR_TAG
S_DPC_SYM_TAG_MAP
S_ARMSWITCHTABLE
S_POGODATA
S_INLINESITE2
S_MOD_TYPEREF
S_REF_MINIPDB
S_PDBMAP
S_GDATA_HLSL32
S_LDATA_HLSL32
S_GDATA_HLSL32_EX
S_LDATA_HLSL32_EX
S_FASTLINK
S_INLINEES
S_END
S_INLINESITE_END
S_PROC_ID_END
S_THUNK32
S_TRAMPOLINE
S_SECTION
S_COFFGROUP
S_EXPORT
S_LPROC32
S_GPROC32
S_LPROC32_ID
S_GPROC32_ID
S_LPROC32_DPC
S_LPROC32_DPC_ID
S_REGISTER
S_PUB32
S_PROCREF
S_LPROCREF
S_ENVBLOCK
S_INLINESITE
S_LOCAL
S_DEFRANGE
S_DEFRANGE_SUBFIELD
S_DEFRANGE_REGISTER
S_DEFRANGE_FRAMEPOINTER_REL
S_DEFRANGE_SUBFIELD_REGISTER
S_DEFRANGE_FRAMEPOINTER_REL_FULL_SCOPE
S_DEFRANGE_REGISTER_REL
S_BLOCK32
S_LABEL32
S_OBJNAME
S_COMPILE2
S_COMPILE3
S_FRAMEPROC
S_CALLSITEINFO
S_FILESTATIC
S_HEAPALLOCSITE
S_FRAMECOOKIE
S_CALLEES
S_CALLERS
S_UDT
S_COBOLUDT
S_BUILDINFO
S_BPREL32
S_REGREL32
S_CONSTANT
S_MANCONSTANT
S_LDATA32
S_GDATA32
S_LMANDATA
S_GMANDATA
S_LTHREAD32
S_GTHREAD32
S_UNAMESPACE
S_ANNOTATION
LF_POINTER
LF_MODIFIER
LF_PROCEDURE
LF_MFUNCTION
LF_LABEL
LF_ARGLIST
LF_FIELDLIST
LF_ARRAY
LF_CLASS
LF_STRUCTURE
LF_INTERFACE
LF_UNION
LF_ENUM
LF_TYPESERVER2
LF_VFTABLE
LF_VTSHAPE
LF_BITFIELD
LF_BCLASS
LF_BINTERFACE
LF_VBCLASS
LF_IVBCLASS
LF_VFUNCTAB
LF_STMEMBER
LF_METHOD
LF_MEMBER
LF_NESTTYPE
LF_ONEMETHOD
LF_ENUMERATE
LF_INDEX
LF_FUNC_ID
LF_MFUNC_ID
LF_BUILDINFO
LF_SUBSTR_LIST
LF_STRING_ID
LF_UDT_SRC_LINE
LF_UDT_MOD_SRC_LINE
LF_METHODLIST
LF_PRECOMP
LF_ENDPRECOMP
LF_MODIFIER_16t
LF_POINTER_16t
LF_ARRAY_16t
LF_CLASS_16t
LF_STRUCTURE_16t
LF_UNION_16t
LF_ENUM_16t
LF_PROCEDURE_16t
LF_MFUNCTION_16t
LF_COBOL0_16t
LF_COBOL1
LF_BARRAY_16t
LF_NULLLEAF
LF_NOTTRAN
LF_DIMARRAY_16t
LF_VFTPATH_16t
LF_PRECOMP_16t
LF_OEM_16t
LF_TYPESERVER_ST
LF_SKIP_16t
LF_ARGLIST_16t
LF_DEFARG_16t
LF_LIST
LF_FIELDLIST_16t
LF_DERIVED_16t
LF_BITFIELD_16t
LF_METHODLIST_16t
LF_DIMCONU_16t
LF_DIMCONLU_16t
LF_DIMVARU_16t
LF_DIMVARLU_16t
LF_REFSYM
LF_BCLASS_16t
LF_VBCLASS_16t
LF_IVBCLASS_16t
LF_ENUMERATE_ST
LF_FRIENDFCN_16t
LF_INDEX_16t
LF_MEMBER_16t
LF_STMEMBER_16t
LF_METHOD_16t
LF_NESTTYPE_16t
LF_VFUNCTAB_16t
LF_FRIENDCLS_16t
LF_ONEMETHOD_16t
LF_VFUNCOFF_16t
LF_TI16_MAX
LF_ARRAY_ST
LF_CLASS_ST
LF_STRUCTURE_ST
LF_UNION_ST
LF_ENUM_ST
LF_COBOL0
LF_BARRAY
LF_DIMARRAY_ST
LF_VFTPATH
LF_PRECOMP_ST
LF_OEM
LF_ALIAS_ST
LF_OEM2
LF_SKIP
LF_DEFARG_ST
LF_DERIVED
LF_DIMCONU
LF_DIMCONLU
LF_DIMVARU
LF_DIMVARLU
LF_FRIENDFCN_ST
LF_MEMBER_ST
LF_STMEMBER_ST
LF_METHOD_ST
LF_NESTTYPE_ST
LF_FRIENDCLS
LF_ONEMETHOD_ST
LF_VFUNCOFF
LF_NESTTYPEEX_ST
LF_MEMBERMODIFY_ST
LF_MANAGED_ST
LF_ST_MAX
LF_TYPESERVER
LF_DIMARRAY
LF_ALIAS
LF_DEFARG
LF_FRIENDFCN
LF_NESTTYPEEX
LF_MEMBERMODIFY
LF_MANAGED
LF_STRIDED_ARRAY
LF_HLSL
LF_MODIFIER_EX
LF_VECTOR
LF_MATRIX
LF_NUMERIC
LF_CHAR
LF_SHORT
LF_USHORT
LF_LONG
LF_ULONG
LF_REAL32
LF_REAL64
LF_REAL80
LF_REAL128
LF_QUADWORD
LF_UQUADWORD
LF_REAL48
LF_COMPLEX32
LF_COMPLEX64
LF_COMPLEX80
LF_COMPLEX128
LF_VARSTRING
LF_OCTWORD
LF_UOCTWORD
LF_DECIMAL
LF_DATE
LF_UTF8STRING
LF_REAL16
LF_PAD0
LF_PAD1
LF_PAD2
LF_PAD3
LF_PAD4
LF_PAD5
LF_PAD6
LF_PAD7
LF_PAD8
LF_PAD9
LF_PAD10
LF_PAD11
LF_PAD12
LF_PAD13
LF_PAD14
LF_PAD15
Symbols
Packed
HasConstructorOrDestructor
HasOverloadedOperator
Nested
ContainsNestedClass
HasOverloadedAssignmentOperator
HasConversionOperator
ForwardReference
Scoped
HasUniqueName
Sealed
Intrinsic
Private
Protected
Public
Pseudo
NoInherit
NoConstruct
CompilerGenerated
Vanilla
Virtual
Static
Friend
IntroducingVirtual
PureVirtual
PureIntroducingVirtual
Near16
Far16
Huge16
BasedOnSegment
BasedOnValue
BasedOnSegmentValue
BasedOnAddress
BasedOnSegmentAddress
BasedOnType
BasedOnSelf
Near32
Far32
Near64
Pointer
LValueReference
PointerToDataMember
PointerToMemberFunction
RValueReference
SingleInheritanceData
MultipleInheritanceData
VirtualInheritanceData
GeneralData
SingleInheritanceFunction
MultipleInheritanceFunction
VirtualInheritanceFunction
GeneralFunction
Const
Volatile
Unaligned
NearC
FarC
NearPascal
FarPascal
NearFast
FarFast
NearStdCall
FarStdCall
NearSysCall
FarSysCall
ThisCall
MipsCall
Generic
AlphaCall
PpcCall
SHCall
ArmCall
AM33Call
TriCall
SH5Call
M32RCall
ClrCall
NearVector
CxxReturnUdt
Constructor
ConstructorWithVirtualBases
Near
{0} {1}::*
 __unaligned
 __restrict
const 
__unaligned 
{0} {1}
{0} {1}::{2}
<unknown 0x
<vftable {0} methods>
Buffer contains invalid APSInt type
<no type>
<unknown simple type>
void*
<not translated>*
HRESULT*
signed char*
unsigned char*
char*
wchar_t*
char16_t*
char32_t*
__int8*
unsigned __int8*
short*
unsigned short*
__int16*
unsigned __int16*
long*
unsigned long*
int*
unsigned*
__int64*
unsigned __int64*
__int128*
unsigned __int128*
__half*
float*
__float48*
double*
long double*
__float128*
_Complex float*
_Complex double*
_Complex long double*
_Complex __float128*
bool*
__bool16*
__bool32*
__bool64*
 (0x
Member kind: 
ModifiedType
Modifiers
ReturnType
CallingConvention: 
FunctionOptions
NumParameters
ArgListType
ClassType
ThisType
ThisAdjustment
NumArgs
NumStrings
Attrs: 
[ Type: 
, Mode: 
, SizeOf: 
PointeeType
Representation: 
ElementType
IndexType
SizeOf
MemberCount
Properties
FieldList
DerivedFrom
VShape
NumEnumerators
UnderlyingType
FieldListType
BitSize
BitOffset
VFEntryCount
CompleteClass
OverriddenVFTable
VFPtrOffset
VFTableName
StringData
SourceFile
LineNumber
Module
ParentScope
FunctionType
Method
Guid
Mode: 
BaseType
BaseOffset
EnumValue
FieldOffset
MethodCount
MethodListIndex
VBPtrType
VBPtrOffset
VBTableIndex
ContinuationIndex
Signature
PrecompFile
Modifier
Procedure
MemberFunction
Label
ArgList
Array
Class
Struct
Interface
Union
Enum
TypeServer2
VFTable
VFTableShape
BitField
BaseClass
BaseInterface
VirtualBaseClass
IndirectVirtualBaseClass
VFPtr
StaticDataMember
OverloadedMethod
DataMember
NestedType
OneMethod
Enumerator
ListContinuation
FuncId
MemberFuncId
BuildInfo
StringList
StringId
UdtSourceLine
UdtModSourceLine
MethodOverloadList
Precomp
EndPrecomp
UnknownLeaf
LinkageName
VFTableOffset
Argument
Strings
MethodName
macOS
tvOS
watchOS
bridgeOS
iOS Simulator
tvOS Simulator
watchOS Simulator
DriverKit
malformed file
unsupported file type
!tapi-tbd-v3
!tapi-tbd-v2
!tapi-tbd
!tapi-tbd-v1
tbd-version
targets
uuids
install-name
current-version
compatibility-version
swift-abi-version
parent-umbrella
allowable-clients
reexported-libraries
exports
reexports
undefineds
ios-simulator
tvos-simulator
watchos-simulator
unparsable target
unknown architecture
unknown platform
flat_namespace
not_app_extension_safe
installapi
clients
libraries
symbols
objc-classes
objc-eh-types
objc-ivars
weak-symbols
thread-local-symbols
archs
platform
swift-version
objc-constraint
_OBJC_EHTYPE_$_
allowed-clients
re-exports
weak-def-symbols
weak-ref-symbols
retain_release
retain_release_for_simulator
retain_release_or_gc
zippered
iosmac
invalid platform
armv5
arm64v8
invalid packed version string.
invalid Swift ABI version.
invalid uuid string pair
DW_TAG_null
DW_TAG_array_type
DW_TAG_class_type
DW_TAG_entry_point
DW_TAG_enumeration_type
DW_TAG_formal_parameter
DW_TAG_imported_declaration
DW_TAG_label
DW_TAG_lexical_block
DW_TAG_member
DW_TAG_pointer_type
DW_TAG_reference_type
DW_TAG_compile_unit
DW_TAG_string_type
DW_TAG_structure_type
DW_TAG_subroutine_type
DW_TAG_typedef
DW_TAG_union_type
DW_TAG_unspecified_parameters
DW_TAG_variant
DW_TAG_common_block
DW_TAG_common_inclusion
DW_TAG_inheritance
DW_TAG_inlined_subroutine
DW_TAG_module
DW_TAG_ptr_to_member_type
DW_TAG_set_type
DW_TAG_subrange_type
DW_TAG_with_stmt
DW_TAG_access_declaration
DW_TAG_base_type
DW_TAG_catch_block
DW_TAG_const_type
DW_TAG_constant
DW_TAG_enumerator
DW_TAG_file_type
DW_TAG_friend
DW_TAG_namelist
DW_TAG_namelist_item
DW_TAG_packed_type
DW_TAG_subprogram
DW_TAG_template_type_parameter
DW_TAG_template_value_parameter
DW_TAG_thrown_type
DW_TAG_try_block
DW_TAG_variant_part
DW_TAG_variable
DW_TAG_volatile_type
DW_TAG_dwarf_procedure
DW_TAG_restrict_type
DW_TAG_interface_type
DW_TAG_namespace
DW_TAG_imported_module
DW_TAG_unspecified_type
DW_TAG_partial_unit
DW_TAG_imported_unit
DW_TAG_condition
DW_TAG_shared_type
DW_TAG_type_unit
DW_TAG_rvalue_reference_type
DW_TAG_template_alias
DW_TAG_coarray_type
DW_TAG_generic_subrange
DW_TAG_dynamic_type
DW_TAG_atomic_type
DW_TAG_call_site
DW_TAG_call_site_parameter
DW_TAG_skeleton_unit
DW_TAG_immutable_type
DW_TAG_MIPS_loop
DW_TAG_format_label
DW_TAG_function_template
DW_TAG_class_template
DW_TAG_GNU_template_template_param
DW_TAG_GNU_template_parameter_pack
DW_TAG_GNU_formal_parameter_pack
DW_TAG_GNU_call_site
DW_TAG_GNU_call_site_parameter
DW_TAG_APPLE_property
DW_TAG_APPLE_ptrauth_type
DW_TAG_BORLAND_property
DW_TAG_BORLAND_Delphi_string
DW_TAG_BORLAND_Delphi_dynamic_array
DW_TAG_BORLAND_Delphi_set
DW_TAG_BORLAND_Delphi_variant
DW_CHILDREN_no
DW_CHILDREN_yes
DW_AT_sibling
DW_AT_location
DW_AT_name
DW_AT_ordering
DW_AT_byte_size
DW_AT_bit_offset
DW_AT_bit_size
DW_AT_stmt_list
DW_AT_low_pc
DW_AT_high_pc
DW_AT_language
DW_AT_discr
DW_AT_discr_value
DW_AT_visibility
DW_AT_import
DW_AT_string_length
DW_AT_common_reference
DW_AT_comp_dir
DW_AT_const_value
DW_AT_containing_type
DW_AT_default_value
DW_AT_inline
DW_AT_is_optional
DW_AT_lower_bound
DW_AT_producer
DW_AT_prototyped
DW_AT_return_addr
DW_AT_start_scope
DW_AT_bit_stride
DW_AT_upper_bound
DW_AT_abstract_origin
DW_AT_accessibility
DW_AT_address_class
DW_AT_artificial
DW_AT_base_types
DW_AT_calling_convention
DW_AT_count
DW_AT_data_member_location
DW_AT_decl_column
DW_AT_decl_file
DW_AT_decl_line
DW_AT_declaration
DW_AT_discr_list
DW_AT_encoding
DW_AT_external
DW_AT_frame_base
DW_AT_friend
DW_AT_identifier_case
DW_AT_macro_info
DW_AT_namelist_item
DW_AT_priority
DW_AT_segment
DW_AT_specification
DW_AT_static_link
DW_AT_type
DW_AT_use_location
DW_AT_variable_parameter
DW_AT_virtuality
DW_AT_vtable_elem_location
DW_AT_allocated
DW_AT_associated
DW_AT_data_location
DW_AT_byte_stride
DW_AT_entry_pc
DW_AT_use_UTF8
DW_AT_extension
DW_AT_ranges
DW_AT_trampoline
DW_AT_call_column
DW_AT_call_file
DW_AT_call_line
DW_AT_description
DW_AT_binary_scale
DW_AT_decimal_scale
DW_AT_small
DW_AT_decimal_sign
DW_AT_digit_count
DW_AT_picture_string
DW_AT_mutable
DW_AT_threads_scaled
DW_AT_explicit
DW_AT_object_pointer
DW_AT_endianity
DW_AT_elemental
DW_AT_pure
DW_AT_recursive
DW_AT_signature
DW_AT_main_subprogram
DW_AT_data_bit_offset
DW_AT_const_expr
DW_AT_enum_class
DW_AT_linkage_name
DW_AT_string_length_bit_size
DW_AT_string_length_byte_size
DW_AT_rank
DW_AT_str_offsets_base
DW_AT_addr_base
DW_AT_rnglists_base
DW_AT_dwo_id
DW_AT_dwo_name
DW_AT_reference
DW_AT_rvalue_reference
DW_AT_macros
DW_AT_call_all_calls
DW_AT_call_all_source_calls
DW_AT_call_all_tail_calls
DW_AT_call_return_pc
DW_AT_call_value
DW_AT_call_origin
DW_AT_call_parameter
DW_AT_call_pc
DW_AT_call_tail_call
DW_AT_call_target
DW_AT_call_target_clobbered
DW_AT_call_data_location
DW_AT_call_data_value
DW_AT_noreturn
DW_AT_alignment
DW_AT_export_symbols
DW_AT_deleted
DW_AT_defaulted
DW_AT_loclists_base
DW_AT_MIPS_loop_begin
DW_AT_MIPS_tail_loop_begin
DW_AT_MIPS_epilog_begin
DW_AT_MIPS_loop_unroll_factor
DW_AT_MIPS_software_pipeline_depth
DW_AT_MIPS_linkage_name
DW_AT_MIPS_stride
DW_AT_MIPS_abstract_name
DW_AT_MIPS_clone_origin
DW_AT_MIPS_has_inlines
DW_AT_MIPS_stride_byte
DW_AT_MIPS_stride_elem
DW_AT_MIPS_ptr_dopetype
DW_AT_MIPS_allocatable_dopetype
DW_AT_MIPS_assumed_shape_dopetype
DW_AT_MIPS_assumed_size
DW_AT_sf_names
DW_AT_src_info
DW_AT_mac_info
DW_AT_src_coords
DW_AT_body_begin
DW_AT_body_end
DW_AT_GNU_vector
DW_AT_GNU_template_name
DW_AT_GNU_odr_signature
DW_AT_GNU_call_site_value
DW_AT_GNU_call_site_data_value
DW_AT_GNU_call_site_target
DW_AT_GNU_call_site_target_clobbered
DW_AT_GNU_tail_call
DW_AT_GNU_all_tail_call_sites
DW_AT_GNU_all_call_sites
DW_AT_GNU_all_source_call_sites
DW_AT_GNU_macros
DW_AT_GNU_dwo_name
DW_AT_GNU_dwo_id
DW_AT_GNU_ranges_base
DW_AT_GNU_addr_base
DW_AT_GNU_pubnames
DW_AT_GNU_pubtypes
DW_AT_GNU_discriminator
DW_AT_BORLAND_property_read
DW_AT_BORLAND_property_write
DW_AT_BORLAND_property_implements
DW_AT_BORLAND_property_index
DW_AT_BORLAND_property_default
DW_AT_BORLAND_Delphi_unit
DW_AT_BORLAND_Delphi_class
DW_AT_BORLAND_Delphi_record
DW_AT_BORLAND_Delphi_metaclass
DW_AT_BORLAND_Delphi_constructor
DW_AT_BORLAND_Delphi_destructor
DW_AT_BORLAND_Delphi_anonymous_method
DW_AT_BORLAND_Delphi_interface
DW_AT_BORLAND_Delphi_ABI
DW_AT_BORLAND_Delphi_return
DW_AT_BORLAND_Delphi_frameptr
DW_AT_BORLAND_closure
DW_AT_LLVM_include_path
DW_AT_LLVM_config_macros
DW_AT_LLVM_sysroot
DW_AT_LLVM_tag_offset
DW_AT_APPLE_ptrauth_key
DW_AT_APPLE_ptrauth_address_discriminated
DW_AT_APPLE_ptrauth_extra_discriminator
DW_AT_LLVM_apinotes
DW_AT_APPLE_ptrauth_isa_pointer
DW_AT_APPLE_ptrauth_authenticates_null_values
DW_AT_APPLE_optimized
DW_AT_APPLE_flags
DW_AT_APPLE_isa
DW_AT_APPLE_block
DW_AT_APPLE_major_runtime_vers
DW_AT_APPLE_runtime_class
DW_AT_APPLE_omit_frame_ptr
DW_AT_APPLE_property_name
DW_AT_APPLE_property_getter
DW_AT_APPLE_property_setter
DW_AT_APPLE_property_attribute
DW_AT_APPLE_objc_complete_type
DW_AT_APPLE_property
DW_AT_APPLE_objc_direct
DW_AT_APPLE_sdk
DW_FORM_addr
DW_FORM_block2
DW_FORM_block4
DW_FORM_data2
DW_FORM_data4
DW_FORM_data8
DW_FORM_string
DW_FORM_block
DW_FORM_block1
DW_FORM_data1
DW_FORM_flag
DW_FORM_sdata
DW_FORM_strp
DW_FORM_udata
DW_FORM_ref_addr
DW_FORM_ref1
DW_FORM_ref2
DW_FORM_ref4
DW_FORM_ref8
DW_FORM_ref_udata
DW_FORM_indirect
DW_FORM_sec_offset
DW_FORM_exprloc
DW_FORM_flag_present
DW_FORM_ref_sig8
DW_FORM_strx
DW_FORM_addrx
DW_FORM_ref_sup4
DW_FORM_strp_sup
DW_FORM_data16
DW_FORM_line_strp
DW_FORM_implicit_const
DW_FORM_loclistx
DW_FORM_rnglistx
DW_FORM_ref_sup8
DW_FORM_strx1
DW_FORM_strx2
DW_FORM_strx3
DW_FORM_strx4
DW_FORM_addrx1
DW_FORM_addrx2
DW_FORM_addrx3
DW_FORM_addrx4
DW_FORM_GNU_addr_index
DW_FORM_GNU_str_index
DW_FORM_GNU_ref_alt
DW_FORM_GNU_strp_alt
DW_OP_addr
DW_OP_deref
DW_OP_const1u
DW_OP_const1s
DW_OP_const2u
DW_OP_const2s
DW_OP_const4u
DW_OP_const4s
DW_OP_const8u
DW_OP_const8s
DW_OP_constu
DW_OP_consts
DW_OP_dup
DW_OP_drop
DW_OP_over
DW_OP_pick
DW_OP_swap
DW_OP_rot
DW_OP_xderef
DW_OP_abs
DW_OP_and
DW_OP_div
DW_OP_minus
DW_OP_mod
DW_OP_mul
DW_OP_neg
DW_OP_not
DW_OP_or
DW_OP_plus
DW_OP_plus_uconst
DW_OP_shl
DW_OP_shr
DW_OP_shra
DW_OP_xor
DW_OP_bra
DW_OP_eq
DW_OP_ge
DW_OP_gt
DW_OP_le
DW_OP_lt
DW_OP_ne
DW_OP_skip
DW_OP_lit0
DW_OP_lit1
DW_OP_lit2
DW_OP_lit3
DW_OP_lit4
DW_OP_lit5
DW_OP_lit6
DW_OP_lit7
DW_OP_lit8
DW_OP_lit9
DW_OP_lit10
DW_OP_lit11
DW_OP_lit12
DW_OP_lit13
DW_OP_lit14
DW_OP_lit15
DW_OP_lit16
DW_OP_lit17
DW_OP_lit18
DW_OP_lit19
DW_OP_lit20
DW_OP_lit21
DW_OP_lit22
DW_OP_lit23
DW_OP_lit24
DW_OP_lit25
DW_OP_lit26
DW_OP_lit27
DW_OP_lit28
DW_OP_lit29
DW_OP_lit30
DW_OP_lit31
DW_OP_reg0
DW_OP_reg1
DW_OP_reg2
DW_OP_reg3
DW_OP_reg4
DW_OP_reg5
DW_OP_reg6
DW_OP_reg7
DW_OP_reg8
DW_OP_reg9
DW_OP_reg10
DW_OP_reg11
DW_OP_reg12
DW_OP_reg13
DW_OP_reg14
DW_OP_reg15
DW_OP_reg16
DW_OP_reg17
DW_OP_reg18
DW_OP_reg19
DW_OP_reg20
DW_OP_reg21
DW_OP_reg22
DW_OP_reg23
DW_OP_reg24
DW_OP_reg25
DW_OP_reg26
DW_OP_reg27
DW_OP_reg28
DW_OP_reg29
DW_OP_reg30
DW_OP_reg31
DW_OP_breg0
DW_OP_breg1
DW_OP_breg2
DW_OP_breg3
DW_OP_breg4
DW_OP_breg5
DW_OP_breg6
DW_OP_breg7
DW_OP_breg8
DW_OP_breg9
DW_OP_breg10
DW_OP_breg11
DW_OP_breg12
DW_OP_breg13
DW_OP_breg14
DW_OP_breg15
DW_OP_breg16
DW_OP_breg17
DW_OP_breg18
DW_OP_breg19
DW_OP_breg20
DW_OP_breg21
DW_OP_breg22
DW_OP_breg23
DW_OP_breg24
DW_OP_breg25
DW_OP_breg26
DW_OP_breg27
DW_OP_breg28
DW_OP_breg29
DW_OP_breg30
DW_OP_breg31
DW_OP_regx
DW_OP_fbreg
DW_OP_bregx
DW_OP_piece
DW_OP_deref_size
DW_OP_xderef_size
DW_OP_nop
DW_OP_push_object_address
DW_OP_call2
DW_OP_call4
DW_OP_call_ref
DW_OP_form_tls_address
DW_OP_call_frame_cfa
DW_OP_bit_piece
DW_OP_implicit_value
DW_OP_stack_value
DW_OP_implicit_pointer
DW_OP_addrx
DW_OP_constx
DW_OP_entry_value
DW_OP_const_type
DW_OP_regval_type
DW_OP_deref_type
DW_OP_xderef_type
DW_OP_convert
DW_OP_reinterpret
DW_OP_GNU_push_tls_address
DW_OP_WASM_location
DW_OP_WASM_location_int
DW_OP_GNU_entry_value
DW_OP_GNU_addr_index
DW_OP_GNU_const_index
DW_OP_LLVM_convert
DW_OP_LLVM_fragment
DW_OP_LLVM_tag_offset
DW_OP_LLVM_entry_value
DW_ATE_address
DW_ATE_boolean
DW_ATE_complex_float
DW_ATE_float
DW_ATE_signed
DW_ATE_signed_char
DW_ATE_unsigned
DW_ATE_unsigned_char
DW_ATE_imaginary_float
DW_ATE_packed_decimal
DW_ATE_numeric_string
DW_ATE_edited
DW_ATE_signed_fixed
DW_ATE_unsigned_fixed
DW_ATE_decimal_float
DW_ATE_UTF
DW_ATE_UCS
DW_ATE_ASCII
DW_ACCESS_public
DW_ACCESS_protected
DW_ACCESS_private
DW_LANG_C89
DW_LANG_C
DW_LANG_Ada83
DW_LANG_C_plus_plus
DW_LANG_Cobol74
DW_LANG_Cobol85
DW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Pascal83
DW_LANG_Modula2
DW_LANG_Java
DW_LANG_C99
DW_LANG_Ada95
DW_LANG_Fortran95
DW_LANG_PLI
DW_LANG_ObjC
DW_LANG_ObjC_plus_plus
DW_LANG_UPC
DW_LANG_D
DW_LANG_Python
DW_LANG_OpenCL
DW_LANG_Go
DW_LANG_Modula3
DW_LANG_Haskell
DW_LANG_C_plus_plus_03
DW_LANG_C_plus_plus_11
DW_LANG_OCaml
DW_LANG_Rust
DW_LANG_C11
DW_LANG_Swift
DW_LANG_Julia
DW_LANG_Dylan
DW_LANG_C_plus_plus_14
DW_LANG_Fortran03
DW_LANG_Fortran08
DW_LANG_RenderScript
DW_LANG_BLISS
DW_LANG_Mips_Assembler
DW_LANG_GOOGLE_RenderScript
DW_LANG_BORLAND_Delphi
DW_CC_normal
DW_CC_program
DW_CC_nocall
DW_CC_pass_by_reference
DW_CC_pass_by_value
DW_CC_GNU_renesas_sh
DW_CC_GNU_borland_fastcall_i386
DW_CC_BORLAND_safecall
DW_CC_BORLAND_stdcall
DW_CC_BORLAND_pascal
DW_CC_BORLAND_msfastcall
DW_CC_BORLAND_msreturn
DW_CC_BORLAND_thiscall
DW_CC_BORLAND_fastcall
DW_CC_LLVM_vectorcall
DW_CC_LLVM_Win64
DW_CC_LLVM_X86_64SysV
DW_CC_LLVM_AAPCS
DW_CC_LLVM_AAPCS_VFP
DW_CC_LLVM_IntelOclBicc
DW_CC_LLVM_SpirFunction
DW_CC_LLVM_OpenCLKernel
DW_CC_LLVM_Swift
DW_CC_LLVM_PreserveMost
DW_CC_LLVM_PreserveAll
DW_CC_LLVM_X86RegCall
DW_CC_LLVM_SwiftTail
DW_CC_GDB_IBM_OpenCL
DW_MACINFO_define
DW_MACINFO_undef
DW_MACINFO_start_file
DW_MACINFO_end_file
DW_MACINFO_vendor_ext
DW_MACINFO_invalid
DW_MACRO_define
DW_MACRO_undef
DW_MACRO_start_file
DW_MACRO_end_file
DW_MACRO_define_strp
DW_MACRO_undef_strp
DW_MACRO_import
DW_MACRO_define_sup
DW_MACRO_undef_sup
DW_MACRO_import_sup
DW_MACRO_define_strx
DW_MACRO_undef_strx
DW_MACRO_GNU_define
DW_MACRO_GNU_undef
DW_MACRO_GNU_start_file
DW_MACRO_GNU_end_file
DW_MACRO_GNU_define_indirect
DW_MACRO_GNU_undef_indirect
DW_MACRO_GNU_transparent_include
DW_MACRO_GNU_define_indirect_alt
DW_MACRO_GNU_undef_indirect_alt
DW_MACRO_GNU_transparent_include_alt
DW_RLE_end_of_list
DW_RLE_base_addressx
DW_RLE_startx_endx
DW_RLE_startx_length
DW_RLE_offset_pair
DW_RLE_base_address
DW_RLE_start_end
DW_RLE_start_length
DW_LLE_end_of_list
DW_LLE_base_addressx
DW_LLE_startx_endx
DW_LLE_startx_length
DW_LLE_offset_pair
DW_LLE_default_location
DW_LLE_base_address
DW_LLE_start_end
DW_LLE_start_length
DW_ATOM_null
DW_ATOM_die_offset
DW_ATOM_cu_offset
DW_ATOM_die_tag
DW_ATOM_type_flags
DW_ATOM_qual_name_hash
DW_ATOM_ext_types
VARIABLE
FUNCTION
OTHER
UNUSED5
UNUSED6
UNUSED7
EXTERNAL
STATIC
DW_IDX_compile_unit
DW_IDX_type_unit
DW_IDX_die_offset
DW_IDX_parent
DW_IDX_type_hash
subtype
ptrauth ABI version is only supported on arm64e.
The ptrauth ABI version needs to fit within 6 bits.
Unsupported triple for mach-o cpu %s: %s
x86_64h
SV64
SV3264
R_POS
R_RL
R_RLA
R_NEG
R_REL
R_TOC
R_TRL
R_TRLA
R_GL
R_TCL
R_REF
R_BA
R_BR
R_RBA
R_RBR
R_TLS
R_TLS_IE
R_TLS_LD
R_TLS_LE
R_TLSM
R_TLSML
R_TOCU
R_TOCL
Container info
Remark version
External File
Remark header
Remark debug location
Remark hotness
Argument with debug location
Unknown remark format: '%s'
REMARKS
Unknown remark serializer format.
remarks-section
Emit a section containing remark diagnostics metadata. By default, this is enabled for the following formats: yaml-strtab, bitstream.
!Passed
!Missed
!Analysis
!AnalysisFPCommute
!AnalysisAliasing
!Failure
Hotness
Column
can't read more than %zu at a time, trying to read %u
can't enter sub-block: current code size is 0
can't enter sub block: already at end of stream
Abbreviation starts with an Array or a Blob
Array element type can't be an Array or a Blob
Array op not second to last
Array element type has to be an encoding of a type
Fixed or VBR abbrev record with size > MaxChunkData
Abbrev record with no operands
Invalid abbrev number
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._
Invalid encoding
@, @
a&00
@, @
a$0 P
ad80P
@, @
a&80
g&8p
ad80P
@, @
i$0 
i$8 
i&8 
 @H@
13.0.0
