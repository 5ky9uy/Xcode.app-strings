@(#)PROGRAM:IDENoticesFoundation  PROJECT:IDENotices-19161.15
Stream
Kind
IDENoticesFoundation
NoticeProvider
ProviderID
Publication
Vitality
Change
IDENoticesFoundation
NoticeBlueprintID
IDENoticesFoundation
Notice
Classification
Payload
IDENoticesFoundation
NoticeCollator
NoticeProviderFactory
NoticeBatch
BatchID
IDENoticeProviderExtension
IDENoticesFoundation
Severity
IDENoticesFoundation
NoticeOrderGenerator
/Library/Caches/com.apple.xbs/Sources/IDEFrameworks/IDEFrameworks-19161.15/IDENotices/IDENoticesFoundation/Collator/NoticeCollator.Stream.swift
primitiveInvalidate()
provide(notices:for:)
provideByOverwriting(notices:for:)
IDENoticesFoundation.Stream
_TtCC20IDENoticesFoundation14NoticeCollator6Stream
providerID
collator
generation
sources
stream outlived collator
How did the collator go nil before invalidation?
/Library/Caches/com.apple.xbs/Sources/IDEFrameworks/IDEFrameworks-19161.15/IDENotices/IDENoticesFoundation/Notice/Notice.BlueprintID.swift
IDENoticesFoundation.NoticeBlueprintID
IDENoticeBlueprintID
@32@0:8@16@24
@32@0:8@16^@24
@16@0:8
q16@0:8
c24@0:8@16
providerPath
localID
stringRepresentation
T@"NSString",N,R
hash
Tq,N,R
description
Malformed string representation: 
_TtC20IDENoticesFoundation6Notice
payload
publication
/Library/Caches/com.apple.xbs/Sources/IDEFrameworks/IDEFrameworks-19161.15/IDENotices/IDENoticesFoundation/Collator/NoticeCollator.swift
 is already registered as 
 while registering 
register(provider:)
remove(provider:)
remove(notices:)
_TtC20IDENoticesFoundation14NoticeCollator
noticesByProviderAndSource
nextGeneration
providersBySourceInPublicationOrder
noticesByPrimaryURL
noticesByKind
providers
observers
publishedNotices
publishedBatch(for:)
Inconsistent state for the published providers
resurrectedNoticesFor(sources:)
Inconsistent sources were called for the resurrected notices
 is not registered
Removed and added simultaniously
Removed item that wasn't present
Added and removed simultaniously
Added item that was already present.
All providers should have been removed by this point, but the following providerIDs were still registered: 
set(notices:for:in:)
We should never drop an update if it would have been the published batch!
_TtP20IDENoticesFoundation28IDENoticeCompatibleWorkspace_
v24@0:8@16
noticeCollator
T@"_TtC20IDENoticesFoundation14NoticeCollator",N,R
buildNoticeProvider
T@"DVTInvalidation_NSObject",N,&
@"_TtC20IDENoticesFoundation14NoticeCollator"16@0:8
@"DVTInvalidation_NSObject"16@0:8
v24@0:8@"DVTInvalidation_NSObject"16
IDENoticesFoundation.IDENoticeProviderExtension
init()
noticeProviderExtensions
T@"NSArray",N,R
#16@0:8
@24@0:8@16
v16@0:8
identifier
controllerClass
bundle
T#,N,R
Xcode.IDEKit.NoticeProvider
So24DVTInvalidation_NSObjectC
$sSY
$s20IDENoticesFoundation14NoticeProviderP
SSSg
ypSg
So8NSObjectC
SaySo19DVTDocumentLocationCG
Sg_ABt
SbIeggd_
Iegg_
$s20IDENoticesFoundation28IDENoticeCompatibleWorkspaceP
$s20IDENoticesFoundation21NoticeProviderFactoryP
_GSg
Sg_ABt
3key_
5valuetSg
yXlXp
So8NSBundleC
primitiveInvalidate
init
dealloc
.cxx_destruct
initWithProviderPath:localID:
initWithStringRepresentation:error:
stringRepresentation
hash
isEqual:
description
documentURL
noticeCollator
buildNoticeProvider
setBuildNoticeProvider:
identifier
requiredClassForKey:
bundle
noticeProviderExtensions
controllerClass
initWithExtension:
requiredExtensionPointForIdentifier:
extensions
isValid
providerID
collator
generation
sources
RawValue
test
build
analyze
project
base
qualifier
providerID
source
order
vitality
fresh
stale
added
removed
providerPath
localID
payload
publication
kind
severity
vitality
severity
kind
fullMessage
blueprintID
locations
children
typeIdentifier
noticesByProviderAndSource
nextGeneration
providersBySourceInPublicationOrder
noticesByPrimaryURL
noticesByKind
providers
observers
publishedNotices
batchID
notices
vitality
generation
providerID
source
identifier
controllerClass
bundle
notice
warning
error
_next
