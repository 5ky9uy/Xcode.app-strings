@(#)PROGRAM:ARHelper  PROJECT:RealityTools-192.5
v8@?0
com.apple.arkit.arreferenceimagemanager.processingqueue
Image detection quality estimation failed.
Adding image to quality estimation handle returned an error with code %d
ARErrorDomain
Removing image from quality estimation handle returned an error with code %d
Input pixel buffer cannot be NULL
Input pixel buffer must have format kCVPixelFormatType_OneComponent8
Could not create pixelbuffer
Could not rotate pixelbuffer
Could not mirror pixelbuffer
Error: Could not downscale pixelbuffer
Could not extract alpha channel from image
Error: Could not downscale alpha mask
Pixelbuffer must have format kCVPixelFormatType_OneComponent8
Could not scale pixelbuffer
Error: Could not create mask
Error: Could not fill buffer
Error: Could not copy buffer
-[ARReferenceImage initWithCIImage:orientation:physicalWidth:alphaInfo:addPadding:]
ARReferenceImage.m
ARCreateGrayscaleImageAndMaskFromCIImage returned error %d
Error: Could not create pixelbuffer and alpha mask
CVPixelBufferCreate returned error %d
Error: Could not create pixelbuffer
vImageOverwriteChannelsWithScalar_Planar8 returned error %d
ARCreatePixelBufferWithPaddingToFillMinimumDimension returned error %d
Error: Could not add padding to pixel buffer
Error: Could not add padding to alpha mask
ARCorrectCVPixelBufferOrientation returned error %d
Error: Could not correct orientation of pixelbuffer
Error: Could not correct orientation of alpha mask
<%@: %p name="%@" physicalSize=(%.03f, %.03f)>
An error occured when estimating the image detection quality: %@
v24@?0d8@"NSError"16
T^{__CVBuffer=},R,N,V_alphaMask
T@"ARReferenceImageManager",&,V_referenceImageManager
ar_integerValue
T@"NSUUID",R,N,V_identifier
dealloc
Tc,R
.cxx_destruct
T{CGSize=dd},R,N,V_physicalSize
T@"NSString",C,N,V_name
context
T^{__CVBuffer=},R,N,V_pixelBuffer
initWithCIImage:orientation:physicalWidth:alphaInfo:addPadding:
Td,V_estimatedQuality
T{CGSize=dd},R,N
UUID
_alphaMask
_doqHandle
_estimatedQuality
_identifier
_name
_physicalSize
_pixelBuffer
_processDataQueue
_referenceImageManager
alphaMask
currentHandler
description
dictionaryWithObjects:forKeys:count:
encodeWithCoder:
errorWithDomain:code:userInfo:
estimateQuality:completionHandler:
estimateQualityWithCompletionHandler:
estimatedQuality
extent
getUUIDBytes:
handleFailureInFunction:file:lineNumber:description:
hash
identifier
imageSize
init
initWithCGImage:
initWithCGImage:orientation:physicalWidth:
initWithCGImage:orientation:physicalWidth:addPadding:
initWithCVPixelBuffer:
initWithCoder:
initWithPixelBuffer:orientation:physicalWidth:
initWithPixelBuffer:orientation:physicalWidth:addPadding:
isEqual:
name
physicalSize
pixelBuffer
referenceImageManager
render:toCVPixelBuffer:
setEstimatedQuality:
setName:
setObject:forKeyedSubscript:
setReferenceImageManager:
sharedImageManager
sharedWeakImageManager
stringWithFormat:
stringWithUTF8String:
supportsSecureCoding
ARReferenceImageManager
ARAdditions
ARReferenceImage
NSSecureCoding
NSCoding
@16@0:8
v32@0:8@16@?24
v16@0:8
^{ODTQContext=}
@"NSObject<OS_dispatch_queue>"
Q16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
c16@0:8
@40@0:8^{CGImage=}16I24d28c36
@40@0:8^{__CVBuffer=}16I24d28c36
@36@0:8^{CGImage=}16I24d28
@36@0:8^{__CVBuffer=}16I24d28
@48@0:8@16I24d28^I36c44
{CGSize=dd}16@0:8
c24@0:8@16
v24@0:8@?16
d16@0:8
v24@0:8d16
^{__CVBuffer=}16@0:8
@"NSString"
@"ARReferenceImageManager"
^{__CVBuffer=}
@"NSUUID"
{CGSize="width"d"height"d}
@(#)PROGRAM:ARHelper  PROJECT:RealityTools-192.5
v8@?0
com.apple.arkit.arreferenceimagemanager.processingqueue
Image detection quality estimation failed.
Adding image to quality estimation handle returned an error with code %d
ARErrorDomain
Removing image from quality estimation handle returned an error with code %d
Input pixel buffer cannot be NULL
Input pixel buffer must have format kCVPixelFormatType_OneComponent8
Could not create pixelbuffer
Could not rotate pixelbuffer
Could not mirror pixelbuffer
Error: Could not downscale pixelbuffer
Could not extract alpha channel from image
Error: Could not downscale alpha mask
Pixelbuffer must have format kCVPixelFormatType_OneComponent8
Could not scale pixelbuffer
Error: Could not create mask
Error: Could not fill buffer
Error: Could not copy buffer
-[ARReferenceImage initWithCIImage:orientation:physicalWidth:alphaInfo:addPadding:]
ARReferenceImage.m
ARCreateGrayscaleImageAndMaskFromCIImage returned error %d
Error: Could not create pixelbuffer and alpha mask
CVPixelBufferCreate returned error %d
Error: Could not create pixelbuffer
vImageOverwriteChannelsWithScalar_Planar8 returned error %d
ARCreatePixelBufferWithPaddingToFillMinimumDimension returned error %d
Error: Could not add padding to pixel buffer
Error: Could not add padding to alpha mask
ARCorrectCVPixelBufferOrientation returned error %d
Error: Could not correct orientation of pixelbuffer
Error: Could not correct orientation of alpha mask
<%@: %p name="%@" physicalSize=(%.03f, %.03f)>
An error occured when estimating the image detection quality: %@
v24@?0d8@"NSError"16
T^{__CVBuffer=},R,N,V_alphaMask
T@"ARReferenceImageManager",&,V_referenceImageManager
ar_integerValue
T@"NSUUID",R,N,V_identifier
dealloc
T^{__CVBuffer=},R,N,V_pixelBuffer
.cxx_destruct
T{CGSize=dd},R,N,V_physicalSize
T@"NSString",C,N,V_name
context
TB,R
initWithCIImage:orientation:physicalWidth:alphaInfo:addPadding:
Td,V_estimatedQuality
T{CGSize=dd},R,N
UUID
_alphaMask
_doqHandle
_estimatedQuality
_identifier
_name
_physicalSize
_pixelBuffer
_processDataQueue
_referenceImageManager
alphaMask
currentHandler
description
dictionaryWithObjects:forKeys:count:
encodeWithCoder:
errorWithDomain:code:userInfo:
estimateQuality:completionHandler:
estimateQualityWithCompletionHandler:
estimatedQuality
extent
getUUIDBytes:
handleFailureInFunction:file:lineNumber:description:
hash
identifier
imageSize
init
initWithCGImage:
initWithCGImage:orientation:physicalWidth:
initWithCGImage:orientation:physicalWidth:addPadding:
initWithCVPixelBuffer:
initWithCoder:
initWithPixelBuffer:orientation:physicalWidth:
initWithPixelBuffer:orientation:physicalWidth:addPadding:
isEqual:
name
physicalSize
pixelBuffer
referenceImageManager
render:toCVPixelBuffer:
setEstimatedQuality:
setName:
setObject:forKeyedSubscript:
setReferenceImageManager:
sharedImageManager
sharedWeakImageManager
stringWithFormat:
stringWithUTF8String:
supportsSecureCoding
ARReferenceImageManager
ARAdditions
ARReferenceImage
NSSecureCoding
NSCoding
@16@0:8
v32@0:8@16@?24
v16@0:8
^{ODTQContext=}
@"NSObject<OS_dispatch_queue>"
Q16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B16@0:8
@40@0:8^{CGImage=}16I24d28B36
@40@0:8^{__CVBuffer=}16I24d28B36
@36@0:8^{CGImage=}16I24d28
@36@0:8^{__CVBuffer=}16I24d28
@48@0:8@16I24d28^I36B44
{CGSize=dd}16@0:8
B24@0:8@16
v24@0:8@?16
d16@0:8
v24@0:8d16
^{__CVBuffer=}16@0:8
@"NSString"
@"ARReferenceImageManager"
^{__CVBuffer=}
@"NSUUID"
{CGSize="width"d"height"d}
