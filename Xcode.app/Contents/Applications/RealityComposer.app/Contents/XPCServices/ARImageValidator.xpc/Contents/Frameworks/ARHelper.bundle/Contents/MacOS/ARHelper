@(#)PROGRAM:ARHelper  PROJECT:RealityTools-180.2
fffff
v8@?0
com.apple.arkit.arreferenceimagemanager.processingqueue
Image detection quality estimation failed.
Adding image to quality estimation handle returned an error with code %d
ARErrorDomain
Removing image from quality estimation handle returned an error with code %d
Input pixel buffer cannot be NULL
Input pixel buffer must have format kCVPixelFormatType_OneComponent8
Could not create pixelbuffer
Could not rotate pixelbuffer
Could not mirror pixelbuffer
Error: Could not downscale pixelbuffer
Could not extract alpha channel from image
Error: Could not downscale alpha mask
Pixelbuffer must have format kCVPixelFormatType_OneComponent8
Could not scale pixelbuffer
Error: Could not create mask
Error: Could not fill buffer
Error: Could not copy buffer
-[ARReferenceImage initWithCIImage:orientation:physicalWidth:alphaInfo:addPadding:]
ARReferenceImage.m
ARCreateGrayscaleImageAndMaskFromCIImage returned error %d
Error: Could not create pixelbuffer and alpha mask
CVPixelBufferCreate returned error %d
Error: Could not create pixelbuffer
vImageOverwriteChannelsWithScalar_Planar8 returned error %d
ARCreatePixelBufferWithPaddingToFillMinimumDimension returned error %d
Error: Could not add padding to pixel buffer
Error: Could not add padding to alpha mask
ARCorrectCVPixelBufferOrientation returned error %d
Error: Could not correct orientation of pixelbuffer
Error: Could not correct orientation of alpha mask
<%@: %p name="%@" physicalSize=(%.03f, %.03f)>
An error occured when estimating the image detection quality: %@
v24@?0d8@"NSError"16
init
identifier
ar_integerValue
pixelBuffer
physicalSize
setObject:forKeyedSubscript:
stringWithFormat:
errorWithDomain:code:userInfo:
dealloc
sharedWeakImageManager
sharedImageManager
estimateQuality:completionHandler:
.cxx_destruct
_doqHandle
_processDataQueue
getUUIDBytes:
extent
render:toCVPixelBuffer:
context
dictionaryWithObjects:forKeys:count:
initWithCGImage:
initWithCIImage:orientation:physicalWidth:alphaInfo:addPadding:
initWithCVPixelBuffer:
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
UUID
name
isEqual:
hash
estimatedQuality
setEstimatedQuality:
referenceImageManager
encodeWithCoder:
initWithCoder:
supportsSecureCoding
TB,R
initWithCGImage:orientation:physicalWidth:addPadding:
initWithPixelBuffer:orientation:physicalWidth:addPadding:
initWithCGImage:orientation:physicalWidth:
initWithPixelBuffer:orientation:physicalWidth:
description
imageSize
estimateQualityWithCompletionHandler:
setName:
setReferenceImageManager:
alphaMask
_name
_estimatedQuality
_referenceImageManager
_pixelBuffer
_alphaMask
_identifier
_physicalSize
Td,V_estimatedQuality
T@"ARReferenceImageManager",&,V_referenceImageManager
T{CGSize=dd},R,N
T^{__CVBuffer=},R,N,V_pixelBuffer
T^{__CVBuffer=},R,N,V_alphaMask
T@"NSUUID",R,N,V_identifier
T@"NSString",C,N,V_name
T{CGSize=dd},R,N,V_physicalSize
ARReferenceImageManager
ARAdditions
ARReferenceImage
NSSecureCoding
NSCoding
@16@0:8
v32@0:8@16@?24
v16@0:8
^{ODTQContext=}
@"NSObject<OS_dispatch_queue>"
Q16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B16@0:8
@40@0:8^{CGImage=}16I24d28B36
@40@0:8^{__CVBuffer=}16I24d28B36
@36@0:8^{CGImage=}16I24d28
@36@0:8^{__CVBuffer=}16I24d28
@48@0:8@16I24d28^I36B44
{CGSize=dd}16@0:8
B24@0:8@16
v24@0:8@?16
d16@0:8
v24@0:8d16
^{__CVBuffer=}16@0:8
@"NSString"
@"ARReferenceImageManager"
^{__CVBuffer=}
@"NSUUID"
{CGSize="width"d"height"d}
