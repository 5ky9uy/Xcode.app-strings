ITunesConnectFoundationAuthenticationServiceHostname
ITunesConnectFoundationAuthenticationServiceAppIdKey
No such environment variable for key: '%@'
@env:
@keychain:
%s's password: 
Unable to read password from stdin.
Unable to show allowed platforms.
Must provide username and/or password.
Could not authenticate because of an unknown error.
Failed to retrieve allowed platforms
Retrieved allowed platforms
allowed-platforms
Command failed
Unable to get authorization for username '%@' and password provided.
invalid
rejected
success
in progress
unknown (%@)
RequestUUID
Date
Status
Status Code
Status Message
Unable to get notarization info.
You must specify a uuid
No errors getting notarization info.
LogFileURL
   RequestUUID: %@
          Date: %@
        Status: %@
    LogFileURL: %@
   Status Code: %@
Status Message: %@
itc_provider
Unable to get notarization history.
Notarization History - page %lld
No items found.
Next page value: %lld
Next page value: %lld
items
first-page
last-page
next-page
No errors getting notarization history.
Failed to get notarization history
Failed to get notarization history:
Unable to upload your app for notarization.
You must specify --file.
You must specify --primary-bundle-id.
Upload succeeded but did not receive a RequestUUID.
No errors uploading '%@'.
notarization-upload
No errors uploading '%@'.
RequestUUID = %@
Unable to validate archive.
Must provide a filepath.
Must provide username and password.
No errors validating archive at %@
Unable to validate archive '%@': %@
Unable to run altool.
file
password
type
uuid
page
service-address
validate-app
upload-app
notarize-app
notarization-info
notarization-history
eval-app
eval-info
eval-history
help
primary-bundle-id
asc-provider
:t:f:p:u:s:vh
ITunesProducerServiceAddress
MZITunesProducerServiceClient
Option '%@' has already been specified.
output-format
No command (validate-app, upload-app, notarize-app, notarization-info, or notarization-history) was specified.
Only one command (validate-app, upload-app, notarize-app, notarization-info, or notarization-history) can be specified.
No filepath was specified.
No username was specified.
Exception caught
Exception caught: %@
Creating the xml property list failed: %s
%@ %@
product-metadata
dev-tools-info
$PATH
tool-version
CFBundleShortVersionString
CFBundleVersion
%@.%@
Copyright (c) 2009-2018, Apple Inc. Version %s
Usage: %s --validate-app -f <file> -t <platform> -u <username> [-p <password>]
       %s --upload-app -f <file> -t <platform> -u <username> [-p <password>]
       %s --notarize-app -f <file> --primary-bundle-id <bundle_id> -u <username> [-p <password>] [--asc-provider <provider_shortname>]
       %s --notarization-info <uuid> -u <username> [-p <password>]
       %s --notarization-history <page> -u <username> [-p <password>] [--asc-provider <provider_shortname>]
success-message
Unable to upload archive.
Unable to instantiate the ITunesSoftwareService
Failed to upload '%@': Unable to instantiate the ITunesSoftwareService
Unable to get authorization token for username '%@' and password provided.
username
No errors uploading '%@'
Errors uploading '%@': %@
 -f, --file <file>                  <file> specifies the path to the file to process.
 -t, --type {osx | ios | appletvos} Specify the platform of the file.
 -u, --username <username>          Username. Required to connect for validation, upload, and notarization.
 -p, --password <password>          Password. Required if username specified.
                                    If this argument is not supplied on the command line, it will be read from stdin.
                                    Alternatively to entering <password> in plaintext, it may also be specified using a '@keychain:'
                                    or '@env:' prefix followed by a keychain password item name or environment variable name.
                                    Example: '-p @keychain:<name>' uses the password stored in the keychain password item named <name>
                                                                   and whose Account value matches the user name specified
                                    Example: '-p @env:<variable>'  uses the value in the environment variable named <variable>
     --primary-bundle-id <bundle_id> Used with --notarize-app to uniquely identify a package.
     --asc-provider <provider_shortname> Required with --notarize-app and --notarization-history when a user account is associated with multiple
                                         providers.
 -v, --validate-app                 Validates an app archive for the App Store. The username, password, and file path to the app archive are required.
     --upload-app                   Uploads the given app archive to the App Store. The username, password, and file path to the app archive are required.
     --notarize-app                 Uploads the given app package, dmg or zip file for notarization. The file path to the package, user name,
                                    password, and --primary-bundle-id are required. --asc-provider is required for an account associated with multiple providers.
                                    If successful, the UUID associated with the upload is returned.
     --notarization-info <uuid>     Returns the status and log file URL of a package previously uploaded for notarization with the specified uuid.
                                    The user name and password are required. The log file can be retrieved with 'curl <log_file_url>'.
     --notarization-history <page>  Returns a list of all uploads submitted for notarization. <page> specifies a range of entries where 0
                                    returns the most recent number of entries. A new page value will be returned which can be used as the
                                    <page> value to the next use of --notarization-history and so forth until no more items are returned. The user name
                                    and password are required. --asc-provider is required for an account associated with multiple providers.
     --output-format {xml | normal} Specifies how the output is formatted. 'xml' displays the output in a structured format; 'normal' displays in
                                    an unstructured format (default).
 -h, --help                         Display this output.
NSAutoreleasePool
_objc_autoreleasePoolPush
_objc_autoreleasePoolPop
__TEXT
__LINKEDIT
NSArray
NSMutableArray
NSDictionary
NSOrderedSet
NSMutableOrderedSet
NSMutableDictionary
_object_setInstanceVariable
_object_setIvar
_object_copy
_objc_retain
_objc_retainBlock
_objc_release
_objc_autorelease
_objc_retainAutorelease
_objc_autoreleaseReturnValue
_objc_retainAutoreleaseReturnValue
_objc_retainAutoreleasedReturnValue
_objc_storeStrong
NSUndoManagerProxy
_targetClass
NSManagedObject
NSConstantString
NSString
NSKnownKeysMappingStrategy1
NSKnownKeysDictionary1
_objc_readClassPair
_objc_allocateClassPair
_object_getIndexedIvars
_objc_getClass
_objc_getMetaClass
_objc_getRequiredClass
_objc_lookUpClass
_objc_getProtocol
_class_getName
_protocol_getName
_objc_copyClassNamesForImage
Swift
_Tt%cSs%zu%.*s%s
_Tt%c%zu%.*s%zu%.*s%s
_TtP
_TtC
%.*s.%.*s
dictionaryWithObject:forKey:
standardUserDefaults
registerDefaultsOverAllDomains:
processInfo
environment
objectForKey:
stringWithFormat:
defaultKeychain
stringForKey:
genericPasswordForServiceName:accountName:error:
hasPrefix:
length
substringFromIndex:
UTF8String
stringWithUTF8String:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
arrayWithObjects:count:
service
allowedPlatformsWithAuthentication:forceServerCall:error:
alloc
count
initWithCapacity:
objectAtIndexedSubscript:
describeAsPlist
addObject:
numberWithInteger:
countByEnumeratingWithState:objects:count:
init
requestUUID
setObject:forKeyedSubscript:
date
status
statusCode
statusMessage
developerIDPlusInfoForPackageWithUUID:authentication:
errors
logFileURL
initWithString:
appendFormat:
objectAtIndex:
code
caseInsensitiveCompare:
longLongValue
developerIDPlusHistoryWithAuthentication:providerShortname:page:
page
items
appendString:
cStringUsingEncoding:
addObjectsFromArray:
tableFromArrayOfDictionaries:includeHeader:
numberWithLongLong:
uploadForDeveloperIDPlusAtPath:primaryBundleID:authentication:providerShortname:delegate:userInfo:
applicationTypeWithString:
validateApplicationArchiveAtPath:type:authentication:
containsObject:
registerDefaults:
class
context
addError:
dictionaryWithDictionary:
dataFromPropertyList:format:errorDescription:
initWithData:encoding:
localizedFailureReason
localizedDescription
isEqualToString:
removeObjectForKey:
mainBundle
infoDictionary
processName
authenticationContextForDefaultHostnameAndAppIdKeyWithUsername:password:error:
addEntriesFromDictionary:
stringByExpandingTildeInPath
uploadApplicationArchiveAtPath:type:authentication:delegate:userInfo:
load
drain
setObject:atIndexedSubscript:
objectForKeyedSubscript:
replaceObjectAtIndex:withObject:
setObject:atIndex:
setObject:forKey:
retain
release
autorelease
isKindOfClass:
allocWithEntity:
allocBatch:withEntity:count:
fastIndexForKnownKey:
indexForKey:
self
initialize
lengthOfBytesUsingEncoding:
getCString:maxLength:encoding:
initWithBytes:length:encoding:
keyEnumerator
nextObject
__ARCLite__
__ARCLiteIndexedSubscripting__
__ARCLiteKeyedSubscripting__
@24@0:8Q16
v32@0:8@16Q24
@24@0:8@16
v32@0:8@16@24
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleIdentifier</key>
<string>com.apple.itunes.altool</string>
<key>CFBundleVersion</key>
<string>1133</string>
<key>CFBundleShortVersionString</key>
<string>1.1</string>
</dict>
</plist>
zPLR
