init
initWithListener:eventMask:
.cxx_destruct
listener
setListener:
eventMask
setEventMask:
_listener
_eventMask
sharedSessionTapManager
alloc
_initWithPlacement:location:
sharedHIDTapManager
sharedAnnotatedSessionTapManager
_listenerLock
lock
_passiveListeners
_activeListeners
mutableCopy
unlock
_findWrapperForListener:inListeners:
addObject:
_recreateEventTapAsNeededForListenerWrappers:listenOnly:
set_passiveListeners:
set_activeListeners:
registerListener:listenOnly:forEventMask:
removeObject:
unregisterListener:listenOnly:forEventMask:
isActiveEventTap
copy
countByEnumeratingWithState:objects:count:
isGestureEvent:
eventTapManager:activelyTappedGestureEvent:cgEvent:withProxy:
respondsToSelector:
eventFromCGEvent:
isKeyboardEvent:
eventTapManager:activelyTappedKeyboardEvent:cgEvent:withProxy:
isMouseEvent:
eventTapManager:activelyTappedMouseEvent:cgEvent:withProxy:
eventTapManager:activelyTappedEvent:type:withProxy:
eventTapManager:passivelyTappedGestureEvent:withProxy:
eventTapManager:passivelyTappedKeyboardEvent:withProxy:
eventTapManager:passivelyTappedMouseEvent:withProxy:
eventTapManager:passivelyTappedEvent:type:withProxy:
_passiveEventTap
_activeEventTap
_eventsOfInterestAcrossAllListeners:
eventsOfInterest
disable
location
_tapPlacement
initWithTapLocation:priority:placement:options:eventsOfInterest:delegate:
enable
set_passiveEventTap:
set_activeEventTap:
shared
sharedTapForLocation:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
eventTap:handleEvent:type:withProxy:
registerGestureEventListener:listenOnly:
registerKeyboardEventListener:listenOnly:
registerMouseEventListener:listenOnly:
unregisterGestureEventListener:listenOnly:
unregisterKeyboardEventListener:listenOnly:
unregisterMouseEventListener:listenOnly:
unregisterListenerForAllEvents:
__tapPlacement
_location
__listenerLock
__passiveListeners
__activeListeners
__passiveEventTap
__activeEventTap
_nsTimerFired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
timerWithTimeInterval:target:selector:userInfo:repeats:
_timer
isValid
timeInterval
userInfo
fire
invalidate
_target
_selector
methodForSelector:
initWithTimeInterval:target:selector:userInfo:repeats:scheduled:
set_target:
set_selector:
set_timer:
__target
__selector
__timer
initialize
replaceSharedFactoryInstance:
setLocation:
setClickState:
setEventType:
setDelta:
setScrollWheelDelta:
setIsScrollWheelEventContinuous:
setScrollMomentumPhase:
setIsDragEvent:
isDragEvent
setIsMoveEvent:
setIsLeftButtonDown:
setIsRightButtonDown:
setIsOtherButtonDown:
setIsSynthesized:
clickState
delta
scrollWheelDelta
isScrollWheelEventContinuous
scrollMomentumPhase
isMoveEvent
isLeftButtonDown
isRightButtonDown
isOtherButtonDown
isSynthesized
stringWithFormat:
copyWithZone:
eventType
_isScrollWheelEventContinuous
_isMoveEvent
_isDragEvent
_isLeftButtonDown
_isRightButtonDown
_isOtherButtonDown
_isSynthesized
_eventType
_scrollMomentumPhase
_clickState
_delta
_scrollWheelDelta
UTF8String
cancel
dealloc
_reportingQueue
_activateOnReportingQueue
_deactivateOnReportingQueue
_moveOnReportingQueue::
_mouseHIDReportDescriptorData
numberWithInt:
dictionaryWithObjects:forKeys:count:
appendBytes:length:
initWithBytes:length:
_activated
_hidUserDevice
initWithFormat:
_mouseHIDDeviceProperties
setObject:forKeyedSubscript:
initWithProperties:
set_hidUserDevice:
_hidUserDeviceQueue
setDispatchQueue:
activate
set_activated:
_reportWithLeftButtonDown:rightButtonDown:xMovement:yMovement:
handleReport:error:
deactivate
move::
set_hidUserDeviceQueue:
set_reportingQueue:
__activated
__hidUserDevice
__hidUserDeviceQueue
__reportingQueue
stringWithCharacters:length:
set_flags:
setKeyCode:
setUnicodeCharacter:
setIsRepeatEvent:
setIsModifierChangedEvent:
setIsCommandDown:
setIsLeftCommandDown:
setIsRightCommandDown:
setIsOptionDown:
setIsLeftOptionDown:
setIsRightOptionDown:
setIsControlDown:
setIsLeftControlDown:
setIsRightControlDown:
setIsShiftDown:
setIsLeftShiftDown:
setIsRightShiftDown:
setIsFnDown:
isLeftCommandDown
isRightCommandDown
isLeftOptionDown
isRightOptionDown
isControlDown
isRightControlDown
isLeftShiftDown
isRightShiftDown
isFnDown
setIsDownEvent:
isDownEvent
isRepeatEvent
isCommandDown
isOptionDown
isShiftDown
keyCode
unicodeCharacter
isModifierChangedEvent
_flags
isDown
isRepeat
modifierMask
isLeftControlDown
_isDownEvent
_isRepeatEvent
_isModifierChangedEvent
_isCommandDown
_isLeftCommandDown
_isRightCommandDown
_isOptionDown
_isLeftOptionDown
_isRightOptionDown
_isControlDown
_isLeftControlDown
_isRightControlDown
_isShiftDown
_isLeftShiftDown
_isRightShiftDown
_isFnDown
_keyCode
_unicodeCharacter
__flags
array
allTouches
phase
arrayWithArray:
identity
string
isSynthetic
source
_nameOfSource:
count
appendFormat:
timestamp
processInfo
systemUptime
dateWithTimeIntervalSinceNow:
CGEvent
touchesMatchingPhase:inView:
touchFromNSTouch:timestamp:touchStartTimestamp:contextOrigin:
initWithTouches:eventSource:isSynthetic:previousGestureEvent:
touchStartTimestamp
compare:
numberWithUnsignedInteger:
touchMatchingIdentity:phase:
setPhase:
setTouchStartTimestamp:
sortedArrayUsingComparator:
firstObject
date
touchesMatchingPhase:
initWithNSEvent:eventSource:isSynthetic:previousGestureEvent:
initWithTouches:eventSource:isSynthetic:
touchingTouches
_isSynthetic
_source
_timestamp
_allTouches
_touchingTouches
setIsGestureEvent:
setIsDockControl:
setIsFluidTouchGesture:
setHidEventType:
setSymbolicHotKeyValue:
setSymbolicHotKeyTreatAsKeyDown:
setGestureProgress:
setZoomValue:
setZoomDeltaX:
setZoomDeltaY:
setRotationValue:
setScrollX:
setScrollY:
setScrollZ:
setSwipeProgress:
setSwipePositionX:
setSwipePositionY:
setSwipeVelocityX:
setSwipeVelocityY:
setSwipeVelocityZ:
setEventContextOriginX:
setEventContextOriginY:
isGestureEvent
isDockControl
isFluidTouchGesture
hidEventType
gestureProgress
zoomValue
zoomDeltaX
zoomDeltaY
rotationValue
scrollX
scrollY
scrollZ
swipeProgress
swipePositionX
swipePositionY
swipeVelocityX
swipeVelocityY
swipeVelocityZ
eventContextOriginX
eventContextOriginY
symbolicHotKeyValue
symbolicHotKeyTreatAsKeyDown
_isGestureEvent
_isDockControl
_isFluidTouchGesture
_symbolicHotKeyTreatAsKeyDown
_hidEventType
_gestureProgress
_zoomValue
_zoomDeltaX
_zoomDeltaY
_rotationValue
_scrollX
_scrollY
_scrollZ
_swipeProgress
_swipePositionX
_swipePositionY
_swipeVelocityX
_swipeVelocityY
_swipeVelocityZ
_eventContextOriginX
_eventContextOriginY
_symbolicHotKeyValue
doubleValue
standardDeviationOfValues:withPrecalculatedMean:
standardDeviationOfValues:
initWithMaximumTapDownDeviation:
delegate
_currentState
set_currentState:
set_firstTouchStart:
set_secondTouchStart:
_firstTouchStart
_secondTouchStart
objectAtIndexedSubscript:
set_secondTouchStartTime:
splitTapGestureRecognizer:splitTapped:
maximumTapDownDeviation
processGestureEvent:
reset
setDelegate:
_secondTouchStartTime
_maximumTapDownDeviation
_delegate
__firstTouchStart
__secondTouchStart
__secondTouchStartTime
__currentState
setDetectDevices:
_devices
set_devices:
unload
createNewDevice:
load
shouldMonitorDevice:
shouldSeizeMonitoredDevice:
openAndSeize:
device:didPostEvent:
deviceDetector:didFindDevice:
device:didUnload:
detectDevices
_detectDevices
__devices
type
deltaX
deltaY
buttonNumber
setType:
setButtonNumber:
setDeltaX:
setDeltaY:
_type
_buttonNumber
_deltaX
_deltaY
firstTouchEvent
setIdentity:
setFirstTouchEvent:
setLastTouchEvent:
_stabilizingTouches
_maximumHoldDeviation
_allowInstabilityBeforeHold
_hasBeenUnstable
timeIntervalSinceDate:
_minimumPreStabilizationDuration
_minimumHoldDuration
removeAllObjects
lastTouchEvent
_state
set_state:
set_hasBeenUnstable:
initWithMaximumHoldDeviation:minimumHoldDuration:minimumPreStabilizationDuration:allowInstabilityBeforeHold:
appendTouchEvent:
touchDuration
set_stabilizingTouches:
set_maximumHoldDeviation:
set_minimumHoldDuration:
set_minimumPreStabilizationDuration:
set_allowInstabilityBeforeHold:
__allowInstabilityBeforeHold
__hasBeenUnstable
_identity
_firstTouchEvent
_lastTouchEvent
__stabilizingTouches
__state
__maximumHoldDeviation
__minimumHoldDuration
__minimumPreStabilizationDuration
initWithFingerCount:preHoldTapCount:maximumHoldDeviation:minimumHoldDuration:minimumPreStabilizationDuration:allowInstabilityBeforeHold:
initWithFingerCount:tapCount:
_touchHistories
objectForKeyedSubscript:
maximumHoldDeviation
minimumHoldDuration
minimumPreStabilizationDuration
allowInstabilityBeforeHold
set_touchHistories:
preHoldTapCount
fingerCount
anyObject
unsignedIntegerValue
set_touchingTouches:
_preHoldTapRecognizer
_updateTouchHistoriesWithTouches:
_transitionToState:
_signalTouchesMovedAfterStabilizing:
_preStabilizationTimer
_holdStartTimeoutTimer
_holdTimer
maximumTapInterval
_holdStartTimeoutElapsed:
set_holdStartTimeoutTimer:
_minimumPreStabilizationDurationElapsed:
set_preStabilizationTimer:
_signalStartedStabilizing:
_minimumHoldDurationElapsed:
set_holdTimer:
_signalStabilized:
_signalAborted:
holdGestureRecognizer:startedStabilizing:
holdGestureRecognizer:stabilized:
holdGestureRecognizer:touchesMovedAfterStabilizing:
holdGestureRecognizer:aborted:
tapGestureRecognizer:tapped:
tapGestureRecognizer:tapAborted:
initWithFingerCount:
initWithPreHoldTapCount:
initWithFingerCount:preHoldTapCount:
initWithPreHoldTapCount:maximumHoldDeviation:minimumHoldDuration:minimumPreStabilizationDuration:allowInstabilityBeforeHold:
set_preHoldTapRecognizer:
_fingerCount
_preHoldTapCount
__touchingTouches
__touchHistories
__preStabilizationTimer
__holdStartTimeoutTimer
__holdTimer
__preHoldTapRecognizer
initWithMinimumPanDistance:minimumPinchSeparationDeviation:minimumRotateAngleDeviation:
_touchStartEvents
removeObjectAtIndex:
setObject:atIndexedSubscript:
addObjectsFromArray:
set_initialTouchSeparation:
set_initialCentroidLocation:
set_initialAngleInDegrees:
_processGestureTouchEvents:
_signalEndOfGesture
_initialTouchSeparation
_initialCentroidLocation
_initialAngleInDegrees
minimumPinchSeparationDeviation
twoFingerGestureRecognizerPinchStarted:
twoFingerGestureRecognizer:pinched:relativeSeparation:
arrayWithObjects:count:
minimumRotateAngleDeviation
twoFingerGestureRecognizerRotateStarted:
twoFingerGestureRecognizer:rotated:relativeRotation:
minimumPanDistance
twoFingerGestureRecognizerPanStarted:
twoFingerGestureRecognizer:panned:relativeDisplacement:
twoFingerGestureRecognizerPanEnded:
twoFingerGestureRecognizerPinchEnded:
twoFingerGestureRecognizerRotateEnded:
set_touchStartEvents:
_minimumPanDistance
_minimumPinchSeparationDeviation
_minimumRotateAngleDeviation
__touchStartEvents
__initialTouchSeparation
__initialAngleInDegrees
__initialCentroidLocation
initWithMinimumEventInterval:
throttlerWithMinimumInterval:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
isEqualToString:
boolValue
setNativeDisplaySize:
eventCaptureStarted
setEventCaptureStarted:
_syntheticEventPostingDispatchQueue
synthesizedTapDownUpInterval
sleepForTimeInterval:
_isNonSyntheticDFRGestureEvent:
_nonSyntheticDFRGestureNSEventFromCGEvent:
_throttler
_processNonSyntheticDFRGestureNSEvent:
performSelector:onTarget:withObject:
_previousDFRGestureEvent
set_previousDFRGestureEvent:
touchInputDevice:capturedGestureEvent:
_initWithCGEvent:eventRef:
startEventCapture
stopEventCapture
observeValueForKeyPath:ofObject:change:context:
synthesizeTapAtLocation:completionHandler:
synthesizeTouchDownAtLocation:
synthesizeTouchMoveToLocation:
synthesizeTouchUpAtLocation:
nativeDisplaySize
set_throttler:
set_syntheticEventPostingDispatchQueue:
_currentTouches
set_currentTouches:
_currentTrackedTouch
set_currentTrackedTouch:
_splitTouchStartDistance
set_splitTouchStartDistance:
_changingZoomScale
set_changingZoomScale:
_eventCaptureStarted
__changingZoomScale
_synthesizedTapDownUpInterval
__previousDFRGestureEvent
__throttler
__syntheticEventPostingDispatchQueue
__currentTouches
__currentTrackedTouch
__splitTouchStartDistance
_nativeDisplaySize
_hidDevice
intValue
_initWithHIDDevice:
isLoaded
setIsLoaded:
dictionary
_maxX
set_maxX:
_minX
set_minX:
_maxY
set_maxY:
_minY
set_minY:
setVendorID:
setProductID:
setManufacturer:
setProduct:
set_hidReportBuffer:
_hidReportBuffer
set_hidDevice:
setObject:forKey:
handleReportCallback:report:reportLength:
handleValueCallback:
deviceInfo
vendorID
productID
manufacturer
product
_isLoaded
_vendorID
_productID
_manufacturer
_product
__minX
__minY
__maxX
__maxY
__hidDevice
__hidReportBuffer
numberWithUnsignedLongLong:
initWithFingerCount:tapCount:maximumTapDownDeviation:maximumTapDownDuration:maximumTapInterval:
_mostRecentTapStartTouchEvents
removeObjectsInArray:
_abort
set_mostRecentTapStartTime:
_mostRecentTapEndTime
set_detectedTapCount:
set_tapSequenceStartingTouchEvents:
_tapSequenceStartingTouchEvents
_mostRecentTapStartTime
maximumTapDownDuration
_detectedTapCount
tapCount
_signalTapped:
set_mostRecentTapEndTime:
set_lastTouchingTouches:
_singleTapTimeoutTimer
set_singleTapTimeoutTimer:
_singleTapTimeoutElapsed:
_lastTouchingTouches
_signalTapAborted:
set_mostRecentTapStartTouchEvents:
_tapCount
_maximumTapDownDuration
_maximumTapInterval
__tapSequenceStartingTouchEvents
__mostRecentTapStartTouchEvents
__mostRecentTapStartTime
__mostRecentTapEndTime
__detectedTapCount
__singleTapTimeoutTimer
__lastTouchingTouches
_initWithEventTapLocation:
isKeyDown:
_eventSource
_setModifierFlags:
_modifierFlags
_eventTapLocation
_clearModifierFlags:
modifierFlagTable
unsignedLongLongValue
set_modifierFlags:
isAnyKeyDown
isAnyModifierDown
isCapsLockDown
downKeys
pressKey:
releaseKey:
set_eventTapLocation:
__eventSource
__eventTapLocation
__modifierFlags
set_minimumInterval:
_lastFireTime
_minimumInterval
set_lastFireTime:
set_selectorArgument:
_queuedSelectorTimer
_performQueuedBlock:
set_queuedSelectorTimer:
_selectorArgument
__minimumInterval
__lastFireTime
__selectorArgument
__queuedSelectorTimer
_repeats
nextFireTime
setNextFireTime:
setValid:
mockTimerInvalidated:
initWithTimeInterval:target:selector:userInfo:repeats:startTime:
setUserInfo:
setTimeInterval:
set_repeats:
_startTime
set_startTime:
_valid
__repeats
_userInfo
_timeInterval
_nextFireTime
__startTime
_pendingTimers
currentSimulatedTime
sortUsingSelector:
setCurrentSimulatedTime:
fireNextPendingTimer
pendingTimerCount
fireAllPendingTimers
set_pendingTimers:
_currentSimulatedTime
__pendingTimers
setSwallowAllGestureEvents:
set_availableTrackpadInfos:
set_eventCaptureStarted:
_nonSyntheticGestureEventFromCGEvent:
_processNonSyntheticGestureEvent:
swallowAllGestureEvents
_availableTrackpadInfos
numberWithLong:
initWithIdentity:location:phase:timestamp:touchStartTimestamp:
_previousGestureEvent
set_previousGestureEvent:
_swallowAllGestureEvents
__eventCaptureStarted
__previousGestureEvent
__availableTrackpadInfos
stringByAppendingString:
allKeysForObject:
allKeys
enumerateObjectsUsingBlock:
_handleHIDDevice:added:
setDeviceNotificationHandler:
setDeviceMatching:
numberWithBool:
setProperty:forKey:
_physicalKeyboardQueue
_listeners
addPointer:
_hidManager
pointerAtIndex:
removePointerAtIndex:
compact
_hidDevices
elementsMatching:
usagePage
usage
integerValue
_handleHIDElement:
setInputElementHandler:
setInputElementMatching:
_signalKey:stateChanged:
physicalKeyboard:key:stateChanged:
sharedAggregateInstance
registerListener:
unregisterListener:
set_hidManager:
set_physicalKeyboardQueue:
set_hidDevices:
set_listeners:
__hidManager
__physicalKeyboardQueue
__hidDevices
__listeners
_uninstallEventTapAnyThread
_eventTapIDQueue
_eventTapIDToEventTapInfoMap
numberWithInteger:
newInfoWithTap:
_createEventTapThreadIfNeeded
_enableOnEventTapThread
_performOnEventTapThreadAndWait:
_disableOnEventTapThread
_eventTapThread
_options
stringWithString:
appendString:
_eventTapThreadLock
detachNewThreadWithName:qualityOfService:
set_eventTapThread:
_installEventTapIfNeededOnEventTapThread
_eventTap
_setEnabled:
_reconnectOnEventTapThread
mainQueue
executeBlockAsynchronously:
executeAfterDelay:block:
isCancelled
isFinished
performSelector:onThread:withObject:waitUntilDone:
name
_continueReconnectOnMainThread
_performBlockOnMainThread:
_reconnectCount
_setReconnectCount:
_lastReconnectTimestamp
_setLastReconnectTimestamp:
_installEventTapIfNeededAnyThread
_performBlockOnMainThreadAfterDelay:block:
_eventTapID
_setEventTap:eventTapID:
_priority
_placement
_setEventTap:
_setRunLoopSource:
_uninstallEventTapOnEventTapThread
_runLoopSource
willChangeValueForKey:
didChangeValueForKey:
_eventTapForEventTapID:
automaticallyNotifiesObserversForKey:
isEnabled
_handleEventTapEvent:type:withProxy:
_isEnabled
__eventTap
__runLoopSource
_isActiveEventTap
__location
__placement
__options
__reconnectCount
_eventsOfInterest
__priority
__eventTapThreadLock
__eventTapThread
__lastReconnectTimestamp
__eventTapID
initInfoWithTap:
_tap
_fingersToTouchEvents
_lastGestureEventTimestamp
dateByAddingTimeInterval:
set_lastGestureEventTimestamp:
setTimestamp:
allValues
removeObjectsForKeys:
initForEventSource:
moveFinger:to:
moveFinger:byDeltaX:deltaY:
liftFinger:
liftAllFingers
fingerWithID:
createGestureEventAfterTimeInterval:
set_eventSource:
set_fingersToTouchEvents:
__lastGestureEventTimestamp
__fingersToTouchEvents
_downKeys
_cgEventFlagsFromDownKeys:
set_cgEventFlags:
_cgEventFlags
containsObject:
unsignedIntValue
_cgEventFlagsForModifier:
synthesizeKeyDown:
synthesizeKeyUp:
isKeySynthesizedDown:
set_downKeys:
__cgEventFlags
__downKeys
initWithMinimumFlickDistance:minimumFlickVelocity:maximumFlickDuration:
set_flickStartTouchEvent:
_flickTimeoutTimer
maximumFlickDuration
_timeoutElapsed:
set_flickTimeoutTimer:
_flickStartTouchEvent
minimumFlickDistance
minimumFlickVelocity
_signalFlickRecognized:
_signalFlickAborted:
flickGestureRecognizer:flickedAngle:
flickGestureRecognizer:aborted:
_minimumFlickDistance
_minimumFlickVelocity
_maximumFlickDuration
__flickStartTouchEvent
__flickTimeoutTimer
_matchingDictionaries
locationInView:
setDateFormat:
_nameOfPhase:
stringFromDate:
_touchStartTimestamp
_phase
_AXEEventTapListenerWrapper
AXEEventTapManager
AXEEventTapDelegate
NSObject
AXENSTimer
AXETimer
AXETimerFactory
AXETimerProviding
AXEMouseEvent
NSCopying
AXEPhysicalMouse
AXEKeyboardEvent
AXETrackingGestureEvent
AXEGestureEvent
AXEMathUtilities
AXETrackingSplitTapGestureRecognizer
AXETrackingGestureRecognizer
AXEHIDDeviceManager
AXEHIDDeviceDetectorDelegate
AXEHIDDeviceDelegate
AXEHIDEvent
AXEHIDGamePadDevice
_AXETrackingStabilizingTouchHistory
AXETrackingHoldGestureRecognizer
AXETrackingTapGestureRecognizerDelegate
AXETrackingTwoFingerGestureRecognizer
AXEDFRDevice
AXEEventTapListener
AXETrackingTouchInputDevice
AXEHIDDevice
AXETrackingTapGestureRecognizer
AXEHIDJoystickDevice
AXEKeyboard
AXEThrottler
AXEMockTimer
AXEMockTimerFactory
AXEMockTimerDelegate
AXETrackingTrackpadDevice
AXEPhysicalKeyboard
AXEEventTap
_AXEEventTapInfo
AXETrackingGestureRecognizerTestsFingerSimulator
AXEVirtualKeyboard
AXETrackingFlickGestureRecognizer
AXEHIDDeviceDetector
AXETrackingTouchEvent
@32@0:8@16Q24
v16@0:8
@16@0:8
v24@0:8@16
Q16@0:8
v24@0:8Q16
@"<AXEEventTapListener>"
@24@0:8Q16
c24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
^{__CGEvent=}44@0:8@16^{__CGEvent=}24I32^{__CGEventTapProxy=}36
^{__CGEvent=}44@0:8@"AXEEventTap"16^{__CGEvent=}24I32^{__CGEventTapProxy=}36
v36@0:8@16c24Q28
v28@0:8@16c24
@28@0:8I16Q20
Q24@0:8@16
@32@0:8@16@24
I16@0:8
@"NSLock"
@"NSArray"
@"AXEEventTap"
d16@0:8
@56@0:8d16@24:32@40c48c52
:16@0:8
v24@0:8:16
@"NSTimer"
@52@0:8d16@24:32@40c48
@"<AXETimer>"52@0:8d16@24:32@40c48
@24@0:8^{__CGEvent=}16
c24@0:8^{__CGEvent=}16
@24@0:8^{_NSZone=}16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
q16@0:8
v24@0:8q16
v20@0:8I16
v20@0:8c16
{CGPoint="x"d"y"d}
@40@0:8c16c20d24d32
v32@0:8d16d24
@"HIDUserDevice"
@"NSObject<OS_dispatch_queue>"
@"NSString"
@44@0:8@16Q24c32@36
@36@0:8@16Q24c32
@"NSDate"
v24@0:8d16
d24@0:8@16
d32@0:8@16d24
v24@0:8@"AXETrackingGestureEvent"16
@24@0:8d16
@"<AXETrackingSplitTapGestureRecognizerDelegate>"
@"AXETrackingTouchEvent"
v32@0:8@16^{__IOHIDDevice=}24
v32@0:8@"AXEHIDDeviceDetector"16^{__IOHIDDevice=}24
v32@0:8@16@24
v28@0:8@"AXEHIDDevice"16c24
v32@0:8@"AXEHIDDevice"16@"AXEHIDEvent"24
@"<AXEHIDDeviceManagerDelegate>"
@"NSMutableArray"
@44@0:8d16d24d32c40
@"<NSObject><NSCopying>"
v32@0:8@"AXETrackingTapGestureRecognizer"16@"NSArray"24
@32@0:8Q16Q24
@52@0:8Q16d24d32d40c48
@60@0:8Q16Q24d32d40d48c56
@"<AXETrackingHoldGestureRecognizerDelegate>"
@"NSMutableDictionary"
@"<AXETimer>"
@"AXETrackingTapGestureRecognizer"
@40@0:8d16d24d32
@"<AXETrackingTwoFingerGestureRecognizerDelegate>"
v40@0:8@16@24^{__CGEventTapProxy=}32
v44@0:8@16^{__CGEvent=}24I32^{__CGEventTapProxy=}36
^{__CGEvent=}48@0:8@16@24^{__CGEvent=}32^{__CGEventTapProxy=}40
v40@0:8@"AXEEventTapManager"16@"AXEGestureEvent"24^{__CGEventTapProxy=}32
v40@0:8@"AXEEventTapManager"16@"AXEKeyboardEvent"24^{__CGEventTapProxy=}32
v40@0:8@"AXEEventTapManager"16@"AXEMouseEvent"24^{__CGEventTapProxy=}32
v44@0:8@"AXEEventTapManager"16^{__CGEvent=}24I32^{__CGEventTapProxy=}36
^{__CGEvent=}48@0:8@"AXEEventTapManager"16@"AXEGestureEvent"24^{__CGEvent=}32^{__CGEventTapProxy=}40
^{__CGEvent=}48@0:8@"AXEEventTapManager"16@"AXEKeyboardEvent"24^{__CGEvent=}32^{__CGEventTapProxy=}40
^{__CGEvent=}48@0:8@"AXEEventTapManager"16@"AXEMouseEvent"24^{__CGEvent=}32^{__CGEventTapProxy=}40
^{__CGEvent=}44@0:8@"AXEEventTapManager"16^{__CGEvent=}24I32^{__CGEventTapProxy=}36
@"<AXETrackingTouchInputDeviceDelegate>"16@0:8
v24@0:8@"<AXETrackingTouchInputDeviceDelegate>"16
v48@0:8@16@24@32^v40
v40@0:8{CGPoint=dd}16@?32
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"<AXETrackingTouchInputDeviceDelegate>"
@"AXETrackingGestureEvent"
@"AXEThrottler"
@"NSSet"
@"NSTouch"
{CGSize="width"d"height"d}
@24@0:8^{__IOHIDDevice=}16
v36@0:8i16*20q28
v24@0:8^{__IOHIDValue=}16
c20@0:8c16
^{__IOHIDDevice=}16@0:8
v24@0:8^{__IOHIDDevice=}16
*16@0:8
v24@0:8*16
@"<AXEHIDDeviceDelegate>"
^{__IOHIDDevice=}
@56@0:8Q16Q24d32d40d48
@"<AXETrackingTapGestureRecognizerDelegate>"
@20@0:8I16
c24@0:8Q16
^{__CGEventSource=}16@0:8
^{__CGEventSource=}
v40@0:8:16@24@32
@60@0:8d16@24:32@40c48d52
q24@0:8@16
@"<AXEMockTimerDelegate>"
v24@0:8@"AXEMockTimer"16
v28@0:8Q16c24
@"HIDManager"
@"NSPointerArray"
@24@0:8q16
v32@0:8@16q24
@52@0:8I16^{__CFString=}20I28I32Q36@44
^{__CGEvent=}36@0:8^{__CGEvent=}16I24^{__CGEventTapProxy=}28
v24@0:8@?16
v32@0:8d16@?24
^{__CFMachPort=}16@0:8
v24@0:8^{__CFMachPort=}16
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
^{__CFMachPort=}
^{__CFRunLoopSource=}
@"<AXEEventTapDelegate>"
@"NSThread"
@24@0:8@16
@40@0:8Q16{CGPoint=dd}24
@40@0:8Q16d24d32
Q24@0:8Q16
@"NSMutableSet"
@"<AXETrackingFlickGestureRecognizerDelegate>"
^{__IOHIDManager=}16@0:8
v24@0:8^{__IOHIDManager=}16
@"<AXEHIDDeviceDetectorDelegate>"
^{__IOHIDManager=}
@56@0:8@16@24@32{CGPoint=dd}40
@64@0:8@16{CGPoint=dd}24Q40@48@56
listener
T@"<AXEEventTapListener>",W,N,V_listener
eventMask
TQ,V_eventMask
v8@?0
com.apple.coregraphics.eventTapPriority.accessibility
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
sharedHIDTapManager
T@"AXEEventTapManager",R
sharedSessionTapManager
sharedAnnotatedSessionTapManager
_tapPlacement
TI,R,N,V__tapPlacement
_listenerLock
T@"NSLock",R,N,V__listenerLock
_passiveListeners
T@"NSArray",C,N,V__passiveListeners
_activeListeners
T@"NSArray",C,N,V__activeListeners
_passiveEventTap
T@"AXEEventTap",&,N,V__passiveEventTap
_activeEventTap
T@"AXEEventTap",&,N,V__activeEventTap
location
TQ,R,N,V_location
valid
Tc,R,GisValid
timeInterval
Td,R
userInfo
T@,R
_target
T@,&,N,V__target
_selector
T:,N,V__selector
_timer
T@"NSTimer",&,N,V__timer
<%@: %@ location=%@ clickState=%ld delta=%@ scrollWheelDelta=%@ isScrollWheelEventContinuous=%d scrollMomentumPhase=%d isMoveEvent=%d isDragEvent=%d isLeftButtonDown=%d isRightButtonDown=%d isOtherButtonDown=%d
SYNTHESIZED
REAL
T{CGPoint=dd},N,V_location
clickState
Tq,N,V_clickState
eventType
TI,N,V_eventType
delta
T{CGPoint=dd},N,V_delta
scrollWheelDelta
T{CGPoint=dd},N,V_scrollWheelDelta
isScrollWheelEventContinuous
Tc,N,V_isScrollWheelEventContinuous
scrollMomentumPhase
TI,N,V_scrollMomentumPhase
isMoveEvent
Tc,N,V_isMoveEvent
isDragEvent
Tc,N,V_isDragEvent
isLeftButtonDown
Tc,N,V_isLeftButtonDown
isRightButtonDown
Tc,N,V_isRightButtonDown
isOtherButtonDown
Tc,N,V_isOtherButtonDown
isSynthesized
Tc,N,V_isSynthesized
com.apple.accessibility.AXEPhysicalMouse.%p.hidQueue
com.apple.accessibility.AXEPhysicalMouse.%p.reportingQueue
ReportDescriptor
VendorID
Product
ReportInterval
RequestTimeout
com.apple.accessibility.AXEPhysicalMouse.%p.HIDDevice
PhysicalDeviceUniqueID
_mouseHIDDeviceProperties
T@"NSDictionary",R,C,N
_mouseHIDReportDescriptorData
T@"NSData",R,C,N
_activated
Tc,N,V__activated
_hidUserDevice
T@"HIDUserDevice",&,N,V__hidUserDevice
_hidUserDeviceQueue
T@"NSObject<OS_dispatch_queue>",&,N,V__hidUserDeviceQueue
_reportingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V__reportingQueue
<%@: %@ key=%@ (%ld) isDownEvent=%d isRepeatEvent=%d isModifierChangedEvent=%d flags=0x%llx isCommandDown=%d isLeftCommandDown=%d isRightCommandDown=%d isOptionDown=%d isLeftOptionDown=%d isRightOptionDown=%d isControlDown=%d isShiftDown=%d isLeftShiftDown=%d isRightShiftDown=%d isFnDown=%d unicodeCharacter=%@
keyCode
TQ,N,V_keyCode
unicodeCharacter
T@"NSString",C,N,V_unicodeCharacter
isDownEvent
Tc,N,V_isDownEvent
isRepeatEvent
Tc,N,V_isRepeatEvent
isModifierChangedEvent
Tc,N,V_isModifierChangedEvent
isCommandDown
Tc,N,V_isCommandDown
isLeftCommandDown
Tc,N,V_isLeftCommandDown
isRightCommandDown
Tc,N,V_isRightCommandDown
isOptionDown
Tc,N,V_isOptionDown
isLeftOptionDown
Tc,N,V_isLeftOptionDown
isRightOptionDown
Tc,N,V_isRightOptionDown
isControlDown
Tc,N,V_isControlDown
isLeftControlDown
Tc,N,V_isLeftControlDown
isRightControlDown
Tc,N,V_isRightControlDown
isShiftDown
Tc,N,V_isShiftDown
isLeftShiftDown
Tc,N,V_isLeftShiftDown
isRightShiftDown
Tc,N,V_isRightShiftDown
isFnDown
Tc,N,V_isFnDown
_flags
TQ,N,V__flags
isDown
Tc,R,N
isRepeat
modifierMask
Tq,R,N
%@ %@ gesture event (%lu touches)
SYNTHETIC
  %@
q24@?0@"AXETrackingTouchEvent"8@"AXETrackingTouchEvent"16
(Undefined)
Trackpad
source
TQ,R,N,V_source
timestamp
T@"NSDate",R,N,V_timestamp
isSynthetic
Tc,R,N,V_isSynthetic
allTouches
T@"NSArray",R,N,V_allTouches
touchingTouches
T@"NSArray",R,N,V_touchingTouches
<%@: isGestureEvent=%d isDockControl=%d isFluidTouchGesture=%d hidEventType=%lu progress: %f zoom: %f zoom delta: (%f, %f) rotation: %f scroll: (%f, %f, %f) swipe progress: %f swipe position: (%f, %f) swipe velocity: (%f, %f, %f) context origin: (%f, %f) symbolic hotkey value: %ld (treat as down? %d)
isGestureEvent
Tc,N,V_isGestureEvent
isDockControl
Tc,N,V_isDockControl
isFluidTouchGesture
Tc,N,V_isFluidTouchGesture
hidEventType
TQ,N,V_hidEventType
gestureProgress
Td,N,V_gestureProgress
zoomValue
Td,N,V_zoomValue
zoomDeltaX
Td,N,V_zoomDeltaX
zoomDeltaY
Td,N,V_zoomDeltaY
rotationValue
Td,N,V_rotationValue
scrollX
Td,N,V_scrollX
scrollY
Td,N,V_scrollY
scrollZ
Td,N,V_scrollZ
swipeProgress
Td,N,V_swipeProgress
swipePositionX
Td,N,V_swipePositionX
swipePositionY
Td,N,V_swipePositionY
swipeVelocityX
Td,N,V_swipeVelocityX
swipeVelocityY
Td,N,V_swipeVelocityY
swipeVelocityZ
Td,N,V_swipeVelocityZ
eventContextOriginX
Td,N,V_eventContextOriginX
eventContextOriginY
Td,N,V_eventContextOriginY
symbolicHotKeyValue
Tq,N,V_symbolicHotKeyValue
symbolicHotKeyTreatAsKeyDown
Tc,N,V_symbolicHotKeyTreatAsKeyDown
_firstTouchStart
T@"AXETrackingTouchEvent",&,N,V__firstTouchStart
_secondTouchStart
T@"AXETrackingTouchEvent",&,N,V__secondTouchStart
_secondTouchStartTime
T@"NSDate",&,N,V__secondTouchStartTime
_currentState
TQ,N,V__currentState
maximumTapDownDeviation
Td,R,N,V_maximumTapDownDeviation
delegate
T@"<AXETrackingSplitTapGestureRecognizerDelegate>",W,N,V_delegate
shared
T@"AXEHIDDeviceManager",R,N
_devices
T@"NSMutableArray",&,N,V__devices
T@"<AXEHIDDeviceManagerDelegate>",W,N,V_delegate
detectDevices
Tc,N,V_detectDevices
%@ -- %f %f
type
TQ,N,V_type
buttonNumber
TQ,N,V_buttonNumber
deltaX
Td,N,V_deltaX
deltaY
Td,N,V_deltaY
Null
ButtonDown
ButtonUp
MouseMoved
LeftMouseDragged
RightMouseDragged
OtherMouseDragged
ScrollWheel
%@ first touch: {%@} last touch: {%@}
identity
T@"<NSObject><NSCopying>",&,N,V_identity
firstTouchEvent
T@"AXETrackingTouchEvent",&,N,V_firstTouchEvent
lastTouchEvent
T@"AXETrackingTouchEvent",&,N,V_lastTouchEvent
touchDuration
Td,R,N
_stabilizingTouches
T@"NSMutableArray",&,N,V__stabilizingTouches
_state
TQ,N,V__state
_maximumHoldDeviation
Td,N,V__maximumHoldDeviation
_minimumHoldDuration
Td,N,V__minimumHoldDuration
_minimumPreStabilizationDuration
Td,N,V__minimumPreStabilizationDuration
_allowInstabilityBeforeHold
Tc,N,V__allowInstabilityBeforeHold
_hasBeenUnstable
Tc,N,V__hasBeenUnstable
_touchingTouches
T@"NSArray",&,N,V__touchingTouches
_touchHistories
T@"NSMutableDictionary",&,N,V__touchHistories
_preStabilizationTimer
T@"<AXETimer>",&,N,V__preStabilizationTimer
_holdStartTimeoutTimer
T@"<AXETimer>",&,N,V__holdStartTimeoutTimer
_holdTimer
T@"<AXETimer>",&,N,V__holdTimer
_preHoldTapRecognizer
T@"AXETrackingTapGestureRecognizer",&,N,V__preHoldTapRecognizer
fingerCount
TQ,R,N,V_fingerCount
preHoldTapCount
TQ,R,N,V_preHoldTapCount
maximumHoldDeviation
Td,R,N,V_maximumHoldDeviation
minimumHoldDuration
Td,R,N,V_minimumHoldDuration
minimumPreStabilizationDuration
Td,R,N,V_minimumPreStabilizationDuration
allowInstabilityBeforeHold
Tc,R,N,V_allowInstabilityBeforeHold
T@"<AXETrackingHoldGestureRecognizerDelegate>",W,N,V_delegate
_touchStartEvents
T@"NSMutableArray",&,N,V__touchStartEvents
_initialTouchSeparation
Td,N,V__initialTouchSeparation
_initialCentroidLocation
T{CGPoint=dd},N,V__initialCentroidLocation
_initialAngleInDegrees
Td,N,V__initialAngleInDegrees
minimumPanDistance
Td,R,N,V_minimumPanDistance
minimumPinchSeparationDeviation
Td,R,N,V_minimumPinchSeparationDeviation
minimumRotateAngleDeviation
Td,R,N,V_minimumRotateAngleDeviation
T@"<AXETrackingTwoFingerGestureRecognizerDelegate>",W,N,V_delegate
dynamicFunctionRowAvailable
com.apple.accessibilityevents.dfrdevice.eventDispatchQueue
T@"<AXETrackingTouchInputDeviceDelegate>",W,N
nativeDisplaySize
T{CGSize=dd},N,V_nativeDisplaySize
eventCaptureStarted
Tc,N,V_eventCaptureStarted
_previousDFRGestureEvent
T@"AXETrackingGestureEvent",&,N,V__previousDFRGestureEvent
_throttler
T@"AXEThrottler",&,N,V__throttler
_syntheticEventPostingDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V__syntheticEventPostingDispatchQueue
_currentTouches
T@"NSSet",&,N,V__currentTouches
_currentTrackedTouch
T@"NSTouch",&,N,V__currentTrackedTouch
_splitTouchStartDistance
Td,N,V__splitTouchStartDistance
_changingZoomScale
Tc,N,V__changingZoomScale
synthesizedTapDownUpInterval
Td,R,N,V_synthesizedTapDownUpInterval
T@"<AXETrackingTouchInputDeviceDelegate>",W,N,V_delegate
AXEHIDServiceID
PrimaryUsagePage
PrimaryUsage
UsagePage
Usage
ProductID
Manufacturer
MaxInputReportSize
Seized
Opened
isLoaded
Tc,N,V_isLoaded
vendorID
TQ,N,V_vendorID
productID
TQ,N,V_productID
manufacturer
T@"NSString",C,N,V_manufacturer
product
T@"NSString",C,N,V_product
_minX
Td,N,V__minX
_minY
Td,N,V__minY
_maxX
Td,N,V__maxX
_maxY
Td,N,V__maxY
_hidDevice
T^{__IOHIDDevice=},N,V__hidDevice
_hidReportBuffer
T*,N,V__hidReportBuffer
T@"<AXEHIDDeviceDelegate>",W,N,V_delegate
deviceInfo
LocationID
SerialNumber
Transport
VendorIDSource
Built-In
HIDKind
HIDInterfaceID
HIDSubinterfaceID
_tapSequenceStartingTouchEvents
T@"NSArray",&,N,V__tapSequenceStartingTouchEvents
_mostRecentTapStartTouchEvents
T@"NSMutableArray",&,N,V__mostRecentTapStartTouchEvents
_mostRecentTapStartTime
T@"NSDate",&,N,V__mostRecentTapStartTime
_mostRecentTapEndTime
T@"NSDate",&,N,V__mostRecentTapEndTime
_detectedTapCount
TQ,N,V__detectedTapCount
_singleTapTimeoutTimer
T@"<AXETimer>",&,N,V__singleTapTimeoutTimer
_lastTouchingTouches
T@"NSArray",&,N,V__lastTouchingTouches
tapCount
TQ,R,N,V_tapCount
maximumTapDownDuration
Td,R,N,V_maximumTapDownDuration
maximumTapInterval
Td,R,N,V_maximumTapInterval
T@"<AXETrackingTapGestureRecognizerDelegate>",W,N,V_delegate
T@"AXEKeyboard",R
_eventTapLocation
TI,N,V__eventTapLocation
_modifierFlags
TQ,N,V__modifierFlags
isAnyKeyDown
isAnyModifierDown
isCapsLockDown
downKeys
T@"NSSet",R,C,N
_minimumInterval
Td,N,V__minimumInterval
_lastFireTime
T@"NSDate",&,N,V__lastFireTime
T@,W,N,V__target
_selectorArgument
T@,&,N,V__selectorArgument
_queuedSelectorTimer
T@"NSTimer",&,N,V__queuedSelectorTimer
T@"<AXEMockTimerDelegate>",W,N,V_delegate
T@,&,N,V_userInfo
Td,N,V_timeInterval
nextFireTime
Td,N,V_nextFireTime
Tc,N,GisValid,V_valid
_repeats
Tc,N,V__repeats
_startTime
Td,N,V__startTime
currentSimulatedTime
Td,N,V_currentSimulatedTime
_pendingTimers
T@"NSMutableArray",&,N,V__pendingTimers
pendingTimerCount
TQ,R,N
_eventCaptureStarted
Tc,N,V__eventCaptureStarted
_previousGestureEvent
T@"AXETrackingGestureEvent",&,N,V__previousGestureEvent
_availableTrackpadInfos
T@"NSArray",C,N,V__availableTrackpadInfos
swallowAllGestureEvents
Tc,N,V_swallowAllGestureEvents
menuItem.shortcut.space
v32@?0@"NSNumber"8Q16^c24
com.apple.accessibility.AXEPhysicalKeyboard.queue
v20@?0@"HIDDevice"8c16
DeviceUsagePage
DeviceUsage
com.apple.accessibility.AXEPhysicalKeyboard.hidManager.queue
IOHIDDeviceSuspend
UsageMin
UsageMax
v16@?0@"HIDElement"8
sharedAggregateInstance
T@"AXEPhysicalKeyboard",R,N
_hidManager
T@"HIDManager",&,N,V__hidManager
_physicalKeyboardQueue
T@"NSObject<OS_dispatch_queue>",&,N,V__physicalKeyboardQueue
_hidDevices
T@"NSMutableArray",&,N,V__hidDevices
_listeners
T@"NSPointerArray",&,N,V__listeners
Tc,R,N,V_isFnDown
com.apple.accessibility.AccessibilityEvents.AXEEventTap.eventTapIDQueue
AXEEventTap thread: 
Active tap 
Passive tap 
location: HID 
location: Session 
location: Annotated Session 
mask: %x
v16@?0@"AXEEventTap"8
isEnabled
Tc,S_setEnabled:
_location
TI,R,N,V__location
_priority
T@"NSString",R,C,N,V__priority
_placement
TI,R,N,V__placement
_options
TI,R,N,V__options
_eventTapThreadLock
T@"NSLock",R,N,V__eventTapThreadLock
_eventTapThread
T@"NSThread",&,V__eventTapThread
_lastReconnectTimestamp
Td,N,S_setLastReconnectTimestamp:,V__lastReconnectTimestamp
_reconnectCount
TI,N,S_setReconnectCount:,V__reconnectCount
_eventTapID
Tq,R,N,V__eventTapID
T@"<AXEEventTapDelegate>",R,W,V_delegate
isActiveEventTap
Tc,R,V_isActiveEventTap
eventsOfInterest
TQ,R,V_eventsOfInterest
T@"AXEEventTap",R,W,N,V_tap
_eventSource
TQ,N,V__eventSource
_lastGestureEventTimestamp
T@"NSDate",&,N,V__lastGestureEventTimestamp
_fingersToTouchEvents
T@"NSMutableDictionary",&,N,V__fingersToTouchEvents
T@"AXEVirtualKeyboard",R
_cgEventFlags
TQ,N,V__cgEventFlags
_downKeys
T@"NSMutableSet",&,N,V__downKeys
_flickStartTouchEvent
T@"AXETrackingTouchEvent",&,N,V__flickStartTouchEvent
_flickTimeoutTimer
T@"<AXETimer>",&,N,V__flickTimeoutTimer
minimumFlickDistance
Td,R,N,V_minimumFlickDistance
minimumFlickVelocity
Td,R,N,V_minimumFlickVelocity
maximumFlickDuration
Td,R,N,V_maximumFlickDuration
T@"<AXETrackingFlickGestureRecognizerDelegate>",W,N,V_delegate
T@"AXEHIDDeviceDetector",R,N
T^{__IOHIDManager=},N,V__hidManager
T@"<AXEHIDDeviceDetectorDelegate>",W,N,V_delegate
matched
VersionNumber
CountryCode
StandardType
DeviceUsagePairs
Reset
yyyy-MM-dd HH:mm:ss.SSS
%@ %@ [ID: %@] [event: %@ start: %@]
Began
Moved
Stationary
Ended
Cancelled
Touching
T@"NSDate",&,N,V_timestamp
touchStartTimestamp
T@"NSDate",&,N,V_touchStartTimestamp
phase
TQ,N,V_phase
T@"<NSObject><NSCopying>",R,N,V_identity
T{CGPoint=dd},R,N,V_location
__isPlatformOrVariantPlatformVersionAtLeast
/BuildRoot/Library/Caches/com.apple.xbs/Sources/clang/clang-1100.0.31.5/src/projects/compiler-rt/lib/builtins/os_version_check.c
Platform2 == PLATFORM_MACOS && "unexpected platform"
_availability_version_check
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
/System/Library/CoreServices/SystemVersion.plist
ProductVersion
%d.%d.%d
_CFMZEnabled
@ffffff
@ffffff
@(#)PROGRAM:AccessibilityEvents  PROJECT:AccessibilitySupport-1
Couldn't create HID user device with properties: %@!
Couldn't handle report %@: %@!
making device: %@
Load device: %@
%@ device: %@
Can't open device <%d>: %@
Unload device: %@
Error getting IOMasterPort
Error matching device identifier %llu
Error finding device identifier %llu
Error multiple entries matching identifier %llu
AXEEventTap: unable to detach new thread for event tap: %@
Exception raised while performing selector %@ on thread %@: %@
Exception raised while installing event tap on runloop thread: %@
Exception raised while uninstalling event tap on runloop thread: %@
===> IOHIDDeviceRef[%@] %s <===
%s -- %@
K0j0
zPLR
zPLR
