@(#)PROGRAM:AccessibilityAuditDeviceManager  PROJECT:AccessibilityAuditUI-1
D@333333
iPhone
iPhone8,2
v8@?0
iPad Pro
iPad6,8
Watch
Watch1,1
Unknown
%@ (Fake)
%@ (FakeDevice)
unknown
yyyy-MM-dd HH:mm:ss
MacBook Pro
Simulator
v16@?0@"DTXMessage"8
v12@?0c8
AXDeviceElementToken
iOSContentGroup
AXFrame
v16@?0@"AXAuditElement"8
com.apple.accessibilityInspector.event.handler
com.apple.coregraphics.eventTapPriority.accessibility
UI Test
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam sit amet rhoncus nisl. Nulla at arcu malesuada purus efficitur scelerisque non sit amet metus. Aliquam tempor tempus ipsum non aliquet. Etiam venenatis varius turpis at egestas. Fusce condimentum, nulla eget lobortis rhoncus, lorem felis tristique neque, vitae commodo orci dolor quis risus. 
In tincidunt faucibus massa, ac convallis elit elementum a. Nulla nunc ante, tincidunt eget venenatis faucibus, egestas sit amet tellus. Integer lorem metus, hendrerit sed dolor eu, mattis efficitur nisi. Vivamus suscipit posuere neque, pretium suscipit felis dapibus vel. Sed at lectus eget quam tempor scelerisque.
Lorem
Lorem
Basic
Basic_v1
NilTest
NilTestW
NilTest(W)
String
AttrString
EmptyURL
NSNull
EmptyString
SpaceString
EmptyArray
EmptyArrInline
BoolTest
BoolTestW
BoolTest(W)
TextTest
TextTestW
TextTest(W)
NumberTest
NumberTestW
NumberTest(W)
PointTest
PointTestW
PointTest(W)
SizeTest
SizeTestW
SizeTest(W)
RectTest
RectTestW
RectTest(W)
RangeTest
RangeTestW
RangeTest(W)
ElementTest
Actions
Actions_v1
Activate
Scroll
Advanced
Advanced_v1
ElementArr
ElementArrInline
TextArr
TextArrInline
RangeArr
RangeArrInline
Caption Text
SomeString
SomeAttrString
AppleTV
AppleTV5,3
com.apple.accessibility.axAuditService
v16@?0@"NSObject<OS_xpc_object>"8
dtx_shared_memory
LOCAL_DEVICE
com.apple.private.accessibility.inspection
My Computer
Simulator - iOS
ProductType
v16@?0@8
DeviceColor
ProductVersion
BuildVersion
DeviceName
ProductName
DeviceEnclosureColor
{CGPoint=dd}
v32@?0@8Q16^c24
SimDeviceSet
com.apple.accessibility.devicemonitorSIM.buildDevicesQueue
com.apple.accessibility.devicemonitorSIM.handshakeQueue
com.apple.accessibility.axAuditDaemon.deviceservice.lockdown
com.apple.instruments.dtservicehub.sim
Simulator.title
Localizable
Simulator.title2.formatter
Simulator.title1.formatter
v16@?0@"NSDictionary"8
/Applications/Xcode.app
Contents/Developer
com.apple.accessibilityAudit.deviceConnection
NotificationOptionSearchForPairedDevices
deviceError.title
deviceError.passwordProtected.message
deviceError.passwordProtected.short
deviceError.missingPairRecord.title
deviceError.missingPairRecord.message
deviceError.missingPairRecord.short
deviceError.invalidService.title
deviceError.invalidService.message
deviceError.invalidService.short
com.apple.accessibility.axAuditDaemon.remoteserver
XDMDeviceFakeIPhone
XDMAuditDeviceSettingManagerFake
XDMDeviceMonitorFake
XDMDeviceFakeIPadPro
XDMDeviceFakeWatch
XDMDeviceFake
AXAuditDeviceSettingsManagerDelegate
NSObject
AXAuditAPIHost1
DTXAllowedRPC
XDMDevice
XDMDeviceMonitor
XDMDeviceFakeOSX
XDMDeviceSIM
XDMDeviceFakeGeneric
XDMDeviceFakeATV
XDMDeviceMonitorOSX
XDMDeviceOSX
XDMDeviceFakeSimulator
XDMDeviceManager
XDMDeviceMonitorDelegate
XDMDeviceEmbedded
XDMDeviceTransportBased
XDMDeviceMonitorSIM
XDMSimulatorDeviceInfo
XDMSimulatorDeviceBooting
XDMDeviceMonitorEmbedded
XRCDevicePendingConnect
namePlaceholder
fakeDeviceName
emulationType
init
_platformSettings
setSettings:
updateCurrentValueForAllSettingsAndPostNotificationIfChanged:
createWithIdentifier:currentValue:settingType:
addObject:
hostAPIVersion
enabled
currentValueNumber
setCurrentValueNumber:
isEqual:
delegate
axAuditDeviceManager:settingDidChange:
updateSetting:withNumberValue:
updateCurrentValueForSetting:postNotificationIfChanged:
set_fakeGenericDevice:
set_fakePhoneDevice:
set_fakePadProDevice:
set_fakeSimulatorDevice:
set_fakeOSXDevice:
set_fakeWatchDevice:
set_fakeATVDevice:
_initializeFakeGenericDevice
_initializeFakeIPadDevice
_initializeFakeIPhoneDevice
_initializeFakeOSXDevice
_initializeFakeATVDevice
_initializeFakeWatchDevice
_initializeFakeSimulatorDevice
_initializeDevices
isMonitoring
beginDeviceMonitoring
_fakeGenericDevice
arrayWithObjects:count:
countByEnumeratingWithState:objects:count:
didConnect
addDevice:
sharedMonitor
_fakePhoneDevice
_fakePadProDevice
_fakeSimulatorDevice
_fakeWatchDevice
_fakeATVDevice
_fakeOSXDevice
.cxx_destruct
__fakePhoneDevice
__fakePadProDevice
__fakeSimulatorDevice
__fakeWatchDevice
__fakeATVDevice
__fakeOSXDevice
__fakeGenericDevice
T@"XDMDeviceFakeIPhone",&,N,V__fakePhoneDevice
T@"XDMDeviceFakeIPadPro",&,N,V__fakePadProDevice
T@"XDMDeviceFakeSimulator",&,N,V__fakeSimulatorDevice
T@"XDMDeviceFakeWatch",&,N,V__fakeWatchDevice
T@"XDMDeviceFakeATV",&,N,V__fakeATVDevice
T@"XDMDeviceFakeOSX",&,N,V__fakeOSXDevice
T@"XDMDeviceFakeGeneric",&,N,V__fakeGenericDevice
setRemoteAPICapabilities:
setRemoteAPIVersion:
setRunningApplications:
setAuditProtocolVersion:
stringWithFormat:
setName:
setProductName:
setBuildVersion:
deviceSettingsManagerClass
setDelegate:
startObservingChanges
cacheDeviceSettingsValues
fakeDeviceColor
fakeDeviceEnclosuerColor
sendFocusUpdate
_deviceSettingsManager
resetToDefaultAccessibilitySettings
settings
setAccessibilitySettings:
device:didUpdateAccessibilitySetting:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
productImage
inspectorFocusOnElement:
inspectorMoveInDirection:allowMovingToContainers:allowMoveToNonAXElements:
inspectorPreviewOnElement:
setInspectorMonitoredEventType:
setInspectorShowVisuals:
inspectorLockOnCurrentElement
fetchAccessibilitySettings:
updateAccessibilitySetting:withValue:
set_deviceSettingsManager:
__deviceSettingsManager
T@"AXAuditDeviceSettingsManager",&,N,V__deviceSettingsManager
Tq,R,N
UUID
UUIDString
initWithIdentifier:
string
array
device:runningAudit:
connectionStatus
setConnectionStatus:
devicePropertiesDidUpate:
_auditIssues
_auditLog
requiresAppSelectionForAuditing
_currentTime
setAuditTimestamp:
device:didFindAuditIssue:
device:didAppendAuditLog:
removeAllObjects
dateWithTimeIntervalSinceNow:
systemTimeZone
setTimeZone:
setDateFormat:
stringFromDate:
sharedManager
objectForTransportDictionary:expectedClass:
containsObject:
auditTimestamp
setTimeStamp:
_foundAuditIssue:
numberWithInteger:
applicationsDelegate
deviceAvailableApplicationsDidUpdate:
appendString:
setRunningAudit:
device:didCompleteAuditWithIssues:
name
length
productName
hostApiVersion
hostCapabilities
hostAppendAuditLog:
hostBailWithMessage:
hostFoundAuditIssue:
hostAccessibilitySettingDidChange:
hostDeviceRunningApplicationsDidChange
hostDeviceFrontmostApplicationsDidChange
hostDeviceDidCompleteAuditCategoriesWithAuditIssues:
hostAppStateChanged:
hostInspectorCurrentElementPropertiesChanged:
hostInspectorCurrentElementChanged:
hostInspectorNotificationReceived:
hostInspectorMonitoredEventTypeChanged:
integerValue
device:inspectorMonitoredEventTypeDidChange:
device:inspectorElementPropertiesDidChange:
device:inspectorFocusDidChange:
device:inspectorNotificationReceived:
isFullyConnected
didDisconnect
completeConnection
auditIssues
cleanupOnQuit
auditLog
allowTargetAllProcesses
setInspectorShowIgnoredElements:
beginAudit
requestScreenshot
beginAuditWithTypes:
clearAllAuditIssues
setAuditUIPid:
setTargetPid:
displayName
highlightIssue:
highlightIssues:
inspectorEnable:
fetchValueForProperty:completionBlock:
updateProperty:withNewValue:
enableHighlight:
fetchSpecialElement:withCompletionBlock:
fetchElementAtNormalizedDeviceCoordinate:withCompletionBlock:
didGetTargeted
setApplicationsDelegate:
deviceIdentifier
setDeviceIdentifier:
setRequiresAppSelectionForAuditing:
supportedInspectionMonitoredEventTypes
setSupportedInspectionMonitoredEventTypes:
supportsIgnoredElements
setSupportsIgnoredElements:
connectionStatusMsgShort
setConnectionStatusMsgShort:
connectionStatusErrorTitle
setConnectionStatusErrorTitle:
connectionStatusErrorMessage
setConnectionStatusErrorMessage:
remoteAPICapabilities
runningApplications
accessibilitySettings
auditProtocolVersion
buildVersion
setProductImage:
runningAudit
allSupportedAuditTypes
setAllSupportedAuditTypes:
inspectionCanNavWhileMonitoringEvents
setInspectionCanNavWhileMonitoringEvents:
set_auditIssues:
set_auditLog:
remoteAPIVersion
_requiresAppSelectionForAuditing
_supportsIgnoredElements
_runningAudit
_inspectionCanNavWhileMonitoringEvents
_delegate
_applicationsDelegate
_deviceIdentifier
_connectionStatus
_supportedInspectionMonitoredEventTypes
_connectionStatusMsgShort
_connectionStatusErrorTitle
_connectionStatusErrorMessage
_remoteAPICapabilities
_runningApplications
_accessibilitySettings
_auditProtocolVersion
_name
_productName
_buildVersion
_productImage
_auditTimestamp
_allSupportedAuditTypes
__auditIssues
__auditLog
_remoteAPIVersion
T@"NSString",&,N,V_deviceIdentifier
T@"NSMutableArray",&,N,V__auditIssues
T@"NSMutableString",&,N,V__auditLog
T@"NSArray",&,N,V_remoteAPICapabilities
T@"NSString",&,N,V_remoteAPIVersion
T@"NSArray",&,N,V_runningApplications
T@"NSArray",&,N,V_accessibilitySettings
Tq,N,V_auditProtocolVersion
T@"NSString",&,N,V_name
T@"NSString",&,N,V_productName
T@"NSString",&,N,V_buildVersion
T@"NSImage",&,N,V_productImage
T@"NSString",&,D,N
T@"NSString",C,N,V_auditTimestamp
Tc,N,V_runningAudit
Tc,N,V_requiresAppSelectionForAuditing
T@"NSArray",&,N,V_allSupportedAuditTypes
TQ,N,V_supportedInspectionMonitoredEventTypes
Tc,N,V_supportsIgnoredElements
Tc,N,V_inspectionCanNavWhileMonitoringEvents
T@"<XDMDeviceDelegate>",W,N,V_delegate
T@"<XDMDeviceApplicationsDelegate>",W,N,V_applicationsDelegate
TQ,N,V_connectionStatus
Tc,R,D,N
Tc,R,N
T@"NSString",C,N,V_connectionStatusMsgShort
T@"NSString",C,N,V_connectionStatusErrorTitle
T@"NSString",C,N,V_connectionStatusErrorMessage
T@"NSString",R,D,N
T@"NSArray",R,D,N
dictionary
set_allDevices:
setIsMonitoring:
deviceMonitorDevicesDidUpdate:
_allDevices
allValues
setObject:forKey:
didUpdateDevices
deviceWithIdentifier:
removeObjectForKey:
objectForKey:
removeDeviceWithIdentifier:
reattemptConnectionToDevice:
allDevices
removeDevice:
_isMonitoring
__allDevices
Tc,N,V_isMonitoring
T@"NSMutableDictionary",&,N,V__allDevices
T@"<XDMDeviceMonitorDelegate>",W,N,V_delegate
imageNamed:
_deviceMapTable
_deviceMapTableLock
lock
unlock
initWithKeyOptions:valueOptions:capacity:
initWithTransport:identifier:
_deviceMapTableSetObject:forKey:
connection
errorStatus
object
boolValue
deviceFetchResolvesElementsOnSimulator
messageWithSelector:objectArguments:
sendControlAsync:replyHandler:
set_shouldResolveElementsOnSimulator:
fetchShouldResolveElementsOnSimulator:
didFinishPopulatingRemoteInfo
_checkShouldResolveElementsOnSimulator
screens
count
objectAtIndex:
frame
mouseLocation
_updateCurrentElementForMousePoint:
_currentElementLocked
_lastMousePoint
shared
convertPointToBottomLeftOriginScreenCoordinateSpace:
_systemElement
set_isMouseOverAppOfInterest:
_shouldResolveElementsOnSimulator
setPlatformElementToken:
_setCurrentElement:
_isCurrentlyFetchingSimulatorLocalElement
set_isCurrentlyFetchingSimulatorLocalElement:
isEqualToString:
set_lastMousePoint:
_updateCurrentElement
_timer
set_timer:
_timerFire
_currentElement
_setMonitoredEventType:
_setCurrentElementLocked:
_enableMouseClickEventTap:
_startWatchingMouse
_stopWatchingMouse
_monitoredEventType
set_isTrackingMouseDown:
_mouseClickEventTap
_installMouseClickEventTap
_setMouseClickEventTap:
_removeMouseClickEventTap
_mapTableID
dealloc
_deviceMapTableObjectForKey:
carbonScreenPointFromCocoaScreenPoint:
_tapDetectedMouseDown:
_tapDetectedMouseDragged:
_tapDetectedMouseUp:
set_systemElement:
_isTrackingMouseDown
_isMouseOverAppOfInterest
set_mapTableID:
__currentElementLocked
__isTrackingMouseDown
__isMouseOverAppOfInterest
__shouldResolveElementsOnSimulator
__isCurrentlyFetchingSimulatorLocalElement
__mouseClickEventTap
__timer
__currentElement
__systemElement
__monitoredEventType
__mapTableID
__lastMousePoint
T^{__CFMachPort=},N,S_setMouseClickEventTap:,V__mouseClickEventTap
T@"NSObject<OS_dispatch_source>",&,N,V__timer
Tc,N,S_setCurrentElementLocked:,V__currentElementLocked
T{CGPoint=dd},N,V__lastMousePoint
T@"AXAuditElement",&,N,S_setCurrentElement:,V__currentElement
T^{__AXUIElement=},&,N,V__systemElement
TQ,N,S_setMonitoredEventType:,V__monitoredEventType
Tc,N,V__isTrackingMouseDown
Tc,N,V__isMouseOverAppOfInterest
Tc,N,V__shouldResolveElementsOnSimulator
Tc,N,V__isCurrentlyFetchingSimulatorLocalElement
TQ,N,V__mapTableID
createWithPoint:
createWithSize:
createWithRect:
createWithRange:
setTitle:
setIdentifier:
addAttribute:performsAction:humanReadable:settable:valueType:isInternal:
setDisplayInline:
setCaptionText:
setElement:
setInspectorSections:
elementAttribute
attributeName
_nilString
initWithString:
_boolAttr
numberWithBool:
null
_stringAttr
_numberAttr
_pointAttr
_sizeAttr
_rectAttr
_rangeAttr
_auditElement
set_boolAttr:
set_stringAttr:
set_numberAttr:
set_pointAttr:
set_sizeAttr:
set_rectAttr:
set_rangeAttr:
deviceAccessibilitySettings
deviceUpdateAccessibilitySetting:withValue:
set_nilString:
set_auditElement:
__boolAttr
__stringAttr
__nilString
__numberAttr
__pointAttr
__sizeAttr
__rectAttr
__rangeAttr
__auditElement
Tc,N,V__boolAttr
T@"NSString",C,N,V__stringAttr
T@"NSString",C,N,V__nilString
T@"NSNumber",&,N,V__numberAttr
T@"AXAuditPoint",&,N,V__pointAttr
T@"AXAuditSize",&,N,V__sizeAttr
T@"AXAuditRect",&,N,V__rectAttr
T@"AXAuditRange",&,N,V__rangeAttr
T@"AXAuditElement",&,N,V__auditElement
initWithLocalName:size:
sharedMemory
totalSharedMemorySize
_createOSXDevice
deviceConnectionAttempt
setDeviceConnectionAttempt:
_trySetupMacDevice
_deviceConnectionAttempt
Tq,N,V_deviceConnectionAttempt
devicePerformFinalCleanup
deviceManagerDevicesDidUpdate:
deviceTypesToMonitor
_deviceMonitorSIM
_deviceMonitorEmbedded
_deviceMonitorOSX
_deviceMonitorFake
activeDeviceMonitors
localOSXDevice
_deviceMonitorForDevice:
addObjectsFromArray:
firstObject
setDeviceTypesToMonitor:
startDeviceMonitors
_deviceTypesToMonitor
T@"<XDMDeviceManagerDelegate>",W,N,V_delegate
Tq,N,V_deviceTypesToMonitor
_device
setProductType:
_getRemoteProperty:expectedType:valueBlock:
setDeviceColor:
setProductVersion:
setDeviceEnclosureColor:
_generateDeviceImage
productType
deviceColor
deviceEnclosureColor
initWithDevice:transport:identifier:
device
populateDeviceInfo
productVersion
set_device:
_productType
_productVersion
_deviceColor
_deviceEnclosureColor
__device
T^{_AMDevice=},&,N,V__device
T@"NSString",&,N,V_productType
T@"NSString",&,N,V_productVersion
T@"NSString",&,N,V_deviceColor
T@"NSString",&,N,V_deviceEnclosureColor
_setupConnectionForTransport:
populateRemoteInfo
deviceSetAppMonitoringEnabled:
setDispatchTarget:
initWithTransport:
setMaximumEnqueueSize:
resume
setConnection:
deviceIsAuthorizedForCommunication:
deviceSetAuditUIPid:
numberWithInt:
deviceSetAuditTargetPid:
transportDictionaryForObject:
deviceHighlightIssue:
deviceHighlightIssues:
deviceInspectorFocusOnElement:
deviceInspectorSetMonitoredEventType:
deviceInspectorShowVisuals:
deviceInspectorShowIgnoredElements:
deviceInspectorLockOnCurrentElement
deviceInspectorPreviewOnElement:
numberWithUnsignedLongLong:
deviceInspectorMoveWithOptions:
deviceResetToDefaultAccessibilitySettings
deviceFetchSpecialElement:
deviceFetchElementAtNormalizedDeviceCoordinate:
valueWithBytes:objCType:
element
performsAction
deviceElement:performAction:withValue:
deviceElement:valueForAttribute:
setValue:
deviceElement:setValue:attribute:
deviceEnableHighlight:
_pendingPopulationCallbacks
_isPopulating
_didFinishPopulateRemoteInfo
set_isPopulating:
set_pendingPopulationCallbacks:
enumerateObjectsUsingBlock:
_checkDidFinishPopulateRemoteInfo
deviceCapabilities
_populateSupportedAuditTypes
deviceApiVersion
deviceInspectorCanNavWhileMonitoringEvents
deviceInspectorSupportedEventTypes
copy
deviceAllSupportedAuditTypes
arrayForTransportArray:expectedClass:
deviceRunningApplications
deviceDidGetTargeted
deviceCaptureScreenshot
_updateScreenshotImageWithInfo:completion:
addScreenshotWithInfo:timestamp:completion:
performAuditWithTypes:
deviceBeginAuditTypes:
deviceBeginAuditCaseIDs:
setTransport:
__isPopulating
_connection
__pendingPopulationCallbacks
T@"DTXConnection",&,N,V_connection
Tq,N,V__pendingPopulationCallbacks
Tc,N,V__isPopulating
_simulatorFrameworkLoaded
_seenBootingDevices
identifier
mutableCopy
state
removeObject:
_handshakeQueue
port
useLegacyHandshake
_performHandshakeOnBackgroundQueueWithPort:deviceIdentifier:useLegacyHandshake:name:productName:
_legacyFileDescriptorHandshakeWithSendPort:
fileDescriptorHandshakeWithSendPort:
_buildSimDevicesQueue
_buildDevices
_simDeviceSet
devices
UDID
runtime
lookup:error:
bundleForClass:
localizedStringForKey:value:table:
setPort:
setState:
_bootingDeviceWithIdentifier:
setSeenBootingCount:
seenBootingCount
_triggerBuildDevices
_gotSimDevices:
sharedServiceContextForDeveloperDir:error:
defaultDeviceSetWithError:
set_simDeviceSet:
registerNotificationHandlerOnQueue:handler:
set_buildSimDevicesQueue:
set_handshakeQueue:
set_seenBootingDevices:
__simDeviceSet
__buildSimDevicesQueue
__handshakeQueue
__seenBootingDevices
T@,&,N,V__simDeviceSet
T@"NSObject<OS_dispatch_queue>",&,N,V__buildSimDevicesQueue
T@"NSObject<OS_dispatch_queue>",&,N,V__handshakeQueue
T@"NSMutableArray",&,N,V__seenBootingDevices
defaultManager
mainBundle
bundlePath
stringWithUTF8String:
fileExistsAtPath:
stringByDeletingLastPathComponent
stringByAppendingPathComponent:
setUseLegacyHandshake:
_useLegacyHandshake
_port
_identifier
_state
T@"NSString",C,N,V_name
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_productName
TQ,N,V_state
TI,N,V_port
Tc,N,V_useLegacyHandshake
_seenBootingCount
Tq,N,V_seenBootingCount
pathComponents
dictionaryWithObjects:forKeys:count:
initWithDeviceRef:device:identifier:
_deviceConnectionQueue
_reattemptConnectionToDevice:status:
deviceRef
didAddDeviceToAllDevices
deviceOnMainThread
setDidAddDeviceToAllDevices:
_transportInterrupted:deviceIdentifier:
initWithConnectedSocket:disconnectAction:
_populateDevice:transport:withConnectionErr:
_devicesPendingConnect
setConnectionAttempts:
_connectToPendingDevices
_addDeviceToDevicesPendingConnect:
_connectToDevice:
connectionAttempts
_attemptConnectToDevice:
_disconnectDeviceWithID:
_deviceAttached:
_deviceDetached:
notificationStopped
set_devicesPendingConnect:
set_deviceConnectionQueue:
__devicesPendingConnect
__deviceConnectionQueue
T@"NSMutableDictionary",&,N,V__devicesPendingConnect
T@"NSObject<OS_dispatch_queue>",&,N,V__deviceConnectionQueue
setDeviceRef:
setDeviceOnMainThread:
_didAddDeviceToAllDevices
_deviceRef
_connectionAttempts
_deviceOnMainThread
T@"NSString",&,N,V_identifier
T^{_AMDevice=},&,N,V_deviceRef
Tq,N,V_connectionAttempts
Tc,N,V_didAddDeviceToAllDevices
T@"XDMDeviceEmbedded",&,N,V_deviceOnMainThread
@16@0:8
q16@0:8
v28@0:8@16c24
v32@0:8@16@24
v16@0:8
v24@0:8@16
@"XDMDeviceFakeIPhone"
@"XDMDeviceFakeIPadPro"
@"XDMDeviceFakeSimulator"
@"XDMDeviceFakeWatch"
@"XDMDeviceFakeATV"
@"XDMDeviceFakeOSX"
@"XDMDeviceFakeGeneric"
#16@0:8
c24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"AXAuditDeviceSettingsManager"16@"AXAuditDeviceSetting"24
v32@0:8Q16c24c28
v24@0:8Q16
v20@0:8c16
v24@0:8@?16
@"AXAuditDeviceSettingsManager"
@"NSNumber"16@0:8
@"NSArray"16@0:8
v24@0:8@"NSString"16
v24@0:8@"NSDictionary"16
v24@0:8@"NSNumber"16
@24@0:8@16
v20@0:8i16
v32@0:8@16@?24
v32@0:8q16@?24
v40@0:8{CGPoint=dd}16@?32
v24@0:8q16
@"<XDMDeviceDelegate>"
@"<XDMDeviceApplicationsDelegate>"
@"NSString"
@"NSArray"
@"NSImage"
@"NSMutableArray"
@"NSMutableString"
@"<XDMDeviceMonitorDelegate>"
@"NSMutableDictionary"
v32@0:8@16q24
@24@0:8q16
@32@0:8@16@24
{CGPoint=dd}32@0:8{CGPoint=dd}16
v32@0:8{CGPoint=dd}16
v24@0:8^{__CGEvent=}16
v24@0:8^{__CFMachPort=}16
^{__CFMachPort=}16@0:8
{CGPoint=dd}16@0:8
^{__AXUIElement=}16@0:8
v24@0:8^{__AXUIElement=}16
^{__CFMachPort=}
@"NSObject<OS_dispatch_source>"
@"AXAuditElement"
^{__AXUIElement=}
{CGPoint="x"d"y"d}
@"NSNumber"
@"AXAuditPoint"
@"AXAuditSize"
@"AXAuditRect"
@"AXAuditRange"
v24@0:8@"XDMDeviceMonitor"16
@"<XDMDeviceManagerDelegate>"
@40@0:8^{_AMDevice=}16@24@32
^{_AMDevice=}16@0:8
v40@0:8^{__CFString=}16#24@?32
v24@0:8^{_AMDevice=}16
^{_AMDevice=}
@"DTXConnection"
v48@0:8I16@20c28@32@40
@"NSObject<OS_dispatch_queue>"
I16@0:8
v20@0:8I16
v36@0:8@16@24i32
v32@0:8@16Q24
v32@0:8^{_AMDevice=}16@24
@"XDMDeviceEmbedded"
@(#)PROGRAM:AccessibilityAuditDeviceManager  PROJECT:AccessibilityAuditUI-1
@333333
iPhone
iPhone8,2
v8@?0
iPad Pro
iPad6,8
Watch
Watch1,1
Unknown
%@ (Fake)
%@ (FakeDevice)
unknown
yyyy-MM-dd HH:mm:ss
MacBook Pro
Simulator
v16@?0@"DTXMessage"8
v12@?0B8
AXDeviceElementToken
iOSContentGroup
AXFrame
v16@?0@"AXAuditElement"8
com.apple.accessibilityInspector.event.handler
com.apple.coregraphics.eventTapPriority.accessibility
UI Test
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam sit amet rhoncus nisl. Nulla at arcu malesuada purus efficitur scelerisque non sit amet metus. Aliquam tempor tempus ipsum non aliquet. Etiam venenatis varius turpis at egestas. Fusce condimentum, nulla eget lobortis rhoncus, lorem felis tristique neque, vitae commodo orci dolor quis risus. 
In tincidunt faucibus massa, ac convallis elit elementum a. Nulla nunc ante, tincidunt eget venenatis faucibus, egestas sit amet tellus. Integer lorem metus, hendrerit sed dolor eu, mattis efficitur nisi. Vivamus suscipit posuere neque, pretium suscipit felis dapibus vel. Sed at lectus eget quam tempor scelerisque.
Lorem
Lorem
Basic
Basic_v1
NilTest
NilTestW
NilTest(W)
String
AttrString
EmptyURL
NSNull
EmptyString
SpaceString
EmptyArray
EmptyArrInline
BoolTest
BoolTestW
BoolTest(W)
TextTest
TextTestW
TextTest(W)
NumberTest
NumberTestW
NumberTest(W)
PointTest
PointTestW
PointTest(W)
SizeTest
SizeTestW
SizeTest(W)
RectTest
RectTestW
RectTest(W)
RangeTest
RangeTestW
RangeTest(W)
ElementTest
Actions
Actions_v1
Activate
Scroll
Advanced
Advanced_v1
ElementArr
ElementArrInline
TextArr
TextArrInline
RangeArr
RangeArrInline
Caption Text
SomeString
SomeAttrString
AppleTV
AppleTV5,3
com.apple.accessibility.axAuditService
v16@?0@"NSObject<OS_xpc_object>"8
dtx_shared_memory
LOCAL_DEVICE
com.apple.private.accessibility.inspection
My Computer
Simulator - iOS
ProductType
v16@?0@8
DeviceColor
ProductVersion
BuildVersion
DeviceName
ProductName
DeviceEnclosureColor
{CGPoint=dd}
v32@?0@8Q16^B24
SimDeviceSet
com.apple.accessibility.devicemonitorSIM.buildDevicesQueue
com.apple.accessibility.devicemonitorSIM.handshakeQueue
com.apple.accessibility.axAuditDaemon.deviceservice.lockdown
com.apple.instruments.dtservicehub.sim
Simulator.title
Localizable
Simulator.title2.formatter
Simulator.title1.formatter
v16@?0@"NSDictionary"8
/Applications/Xcode.app
Contents/Developer
com.apple.accessibilityAudit.deviceConnection
NotificationOptionSearchForPairedDevices
deviceError.title
deviceError.passwordProtected.message
deviceError.passwordProtected.short
deviceError.missingPairRecord.title
deviceError.missingPairRecord.message
deviceError.missingPairRecord.short
deviceError.invalidService.title
deviceError.invalidService.message
deviceError.invalidService.short
com.apple.accessibility.axAuditDaemon.remoteserver
XDMDeviceFakeIPhone
XDMAuditDeviceSettingManagerFake
XDMDeviceMonitorFake
XDMDeviceFakeIPadPro
XDMDeviceFakeWatch
XDMDeviceFake
AXAuditDeviceSettingsManagerDelegate
NSObject
AXAuditAPIHost1
DTXAllowedRPC
XDMDevice
XDMDeviceMonitor
XDMDeviceFakeOSX
XDMDeviceSIM
XDMDeviceFakeGeneric
XDMDeviceFakeATV
XDMDeviceMonitorOSX
XDMDeviceOSX
XDMDeviceFakeSimulator
XDMDeviceManager
XDMDeviceMonitorDelegate
XDMDeviceEmbedded
XDMDeviceTransportBased
XDMDeviceMonitorSIM
XDMSimulatorDeviceInfo
XDMSimulatorDeviceBooting
XDMDeviceMonitorEmbedded
XRCDevicePendingConnect
namePlaceholder
fakeDeviceName
emulationType
init
_platformSettings
setSettings:
updateCurrentValueForAllSettingsAndPostNotificationIfChanged:
createWithIdentifier:currentValue:settingType:
addObject:
hostAPIVersion
enabled
currentValueNumber
setCurrentValueNumber:
isEqual:
delegate
axAuditDeviceManager:settingDidChange:
updateSetting:withNumberValue:
updateCurrentValueForSetting:postNotificationIfChanged:
set_fakeGenericDevice:
set_fakePhoneDevice:
set_fakePadProDevice:
set_fakeSimulatorDevice:
set_fakeOSXDevice:
set_fakeWatchDevice:
set_fakeATVDevice:
_initializeFakeGenericDevice
_initializeFakeIPadDevice
_initializeFakeIPhoneDevice
_initializeFakeOSXDevice
_initializeFakeATVDevice
_initializeFakeWatchDevice
_initializeFakeSimulatorDevice
_initializeDevices
isMonitoring
beginDeviceMonitoring
_fakeGenericDevice
arrayWithObjects:count:
countByEnumeratingWithState:objects:count:
didConnect
addDevice:
sharedMonitor
_fakePhoneDevice
_fakePadProDevice
_fakeSimulatorDevice
_fakeWatchDevice
_fakeATVDevice
_fakeOSXDevice
.cxx_destruct
__fakePhoneDevice
__fakePadProDevice
__fakeSimulatorDevice
__fakeWatchDevice
__fakeATVDevice
__fakeOSXDevice
__fakeGenericDevice
T@"XDMDeviceFakeIPhone",&,N,V__fakePhoneDevice
T@"XDMDeviceFakeIPadPro",&,N,V__fakePadProDevice
T@"XDMDeviceFakeSimulator",&,N,V__fakeSimulatorDevice
T@"XDMDeviceFakeWatch",&,N,V__fakeWatchDevice
T@"XDMDeviceFakeATV",&,N,V__fakeATVDevice
T@"XDMDeviceFakeOSX",&,N,V__fakeOSXDevice
T@"XDMDeviceFakeGeneric",&,N,V__fakeGenericDevice
setRemoteAPICapabilities:
setRemoteAPIVersion:
setRunningApplications:
setAuditProtocolVersion:
stringWithFormat:
setName:
setProductName:
setBuildVersion:
deviceSettingsManagerClass
setDelegate:
startObservingChanges
cacheDeviceSettingsValues
fakeDeviceColor
fakeDeviceEnclosuerColor
sendFocusUpdate
_deviceSettingsManager
resetToDefaultAccessibilitySettings
settings
setAccessibilitySettings:
device:didUpdateAccessibilitySetting:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
productImage
inspectorFocusOnElement:
inspectorMoveInDirection:allowMovingToContainers:allowMoveToNonAXElements:
inspectorPreviewOnElement:
setInspectorMonitoredEventType:
setInspectorShowVisuals:
inspectorLockOnCurrentElement
fetchAccessibilitySettings:
updateAccessibilitySetting:withValue:
set_deviceSettingsManager:
__deviceSettingsManager
T@"AXAuditDeviceSettingsManager",&,N,V__deviceSettingsManager
Tq,R,N
UUID
UUIDString
initWithIdentifier:
string
array
device:runningAudit:
connectionStatus
setConnectionStatus:
devicePropertiesDidUpate:
_auditIssues
_auditLog
requiresAppSelectionForAuditing
_currentTime
setAuditTimestamp:
device:didFindAuditIssue:
device:didAppendAuditLog:
removeAllObjects
dateWithTimeIntervalSinceNow:
systemTimeZone
setTimeZone:
setDateFormat:
stringFromDate:
sharedManager
objectForTransportDictionary:expectedClass:
containsObject:
auditTimestamp
setTimeStamp:
_foundAuditIssue:
numberWithInteger:
applicationsDelegate
deviceAvailableApplicationsDidUpdate:
appendString:
setRunningAudit:
device:didCompleteAuditWithIssues:
name
length
productName
hostApiVersion
hostCapabilities
hostAppendAuditLog:
hostBailWithMessage:
hostFoundAuditIssue:
hostAccessibilitySettingDidChange:
hostDeviceRunningApplicationsDidChange
hostDeviceFrontmostApplicationsDidChange
hostDeviceDidCompleteAuditCategoriesWithAuditIssues:
hostAppStateChanged:
hostInspectorCurrentElementPropertiesChanged:
hostInspectorCurrentElementChanged:
hostInspectorNotificationReceived:
hostInspectorMonitoredEventTypeChanged:
integerValue
device:inspectorMonitoredEventTypeDidChange:
device:inspectorElementPropertiesDidChange:
device:inspectorFocusDidChange:
device:inspectorNotificationReceived:
isFullyConnected
didDisconnect
completeConnection
auditIssues
cleanupOnQuit
auditLog
allowTargetAllProcesses
setInspectorShowIgnoredElements:
beginAudit
requestScreenshot
beginAuditWithTypes:
clearAllAuditIssues
setAuditUIPid:
setTargetPid:
displayName
highlightIssue:
highlightIssues:
inspectorEnable:
fetchValueForProperty:completionBlock:
updateProperty:withNewValue:
enableHighlight:
fetchSpecialElement:withCompletionBlock:
fetchElementAtNormalizedDeviceCoordinate:withCompletionBlock:
didGetTargeted
setApplicationsDelegate:
deviceIdentifier
setDeviceIdentifier:
setRequiresAppSelectionForAuditing:
supportedInspectionMonitoredEventTypes
setSupportedInspectionMonitoredEventTypes:
supportsIgnoredElements
setSupportsIgnoredElements:
connectionStatusMsgShort
setConnectionStatusMsgShort:
connectionStatusErrorTitle
setConnectionStatusErrorTitle:
connectionStatusErrorMessage
setConnectionStatusErrorMessage:
remoteAPICapabilities
runningApplications
accessibilitySettings
auditProtocolVersion
buildVersion
setProductImage:
runningAudit
allSupportedAuditTypes
setAllSupportedAuditTypes:
inspectionCanNavWhileMonitoringEvents
setInspectionCanNavWhileMonitoringEvents:
set_auditIssues:
set_auditLog:
remoteAPIVersion
_requiresAppSelectionForAuditing
_supportsIgnoredElements
_runningAudit
_inspectionCanNavWhileMonitoringEvents
_delegate
_applicationsDelegate
_deviceIdentifier
_connectionStatus
_supportedInspectionMonitoredEventTypes
_connectionStatusMsgShort
_connectionStatusErrorTitle
_connectionStatusErrorMessage
_remoteAPICapabilities
_runningApplications
_accessibilitySettings
_auditProtocolVersion
_name
_productName
_buildVersion
_productImage
_auditTimestamp
_allSupportedAuditTypes
__auditIssues
__auditLog
_remoteAPIVersion
T@"NSString",&,N,V_deviceIdentifier
T@"NSMutableArray",&,N,V__auditIssues
T@"NSMutableString",&,N,V__auditLog
T@"NSArray",&,N,V_remoteAPICapabilities
T@"NSString",&,N,V_remoteAPIVersion
T@"NSArray",&,N,V_runningApplications
T@"NSArray",&,N,V_accessibilitySettings
Tq,N,V_auditProtocolVersion
T@"NSString",&,N,V_name
T@"NSString",&,N,V_productName
T@"NSString",&,N,V_buildVersion
T@"NSImage",&,N,V_productImage
T@"NSString",&,D,N
T@"NSString",C,N,V_auditTimestamp
TB,N,V_runningAudit
TB,N,V_requiresAppSelectionForAuditing
T@"NSArray",&,N,V_allSupportedAuditTypes
TQ,N,V_supportedInspectionMonitoredEventTypes
TB,N,V_supportsIgnoredElements
TB,N,V_inspectionCanNavWhileMonitoringEvents
T@"<XDMDeviceDelegate>",W,N,V_delegate
T@"<XDMDeviceApplicationsDelegate>",W,N,V_applicationsDelegate
TQ,N,V_connectionStatus
TB,R,D,N
TB,R,N
T@"NSString",C,N,V_connectionStatusMsgShort
T@"NSString",C,N,V_connectionStatusErrorTitle
T@"NSString",C,N,V_connectionStatusErrorMessage
T@"NSString",R,D,N
T@"NSArray",R,D,N
dictionary
set_allDevices:
setIsMonitoring:
deviceMonitorDevicesDidUpdate:
_allDevices
allValues
setObject:forKey:
didUpdateDevices
deviceWithIdentifier:
removeObjectForKey:
objectForKey:
removeDeviceWithIdentifier:
reattemptConnectionToDevice:
allDevices
removeDevice:
_isMonitoring
__allDevices
TB,N,V_isMonitoring
T@"NSMutableDictionary",&,N,V__allDevices
T@"<XDMDeviceMonitorDelegate>",W,N,V_delegate
imageNamed:
_deviceMapTable
_deviceMapTableLock
lock
unlock
initWithKeyOptions:valueOptions:capacity:
initWithTransport:identifier:
_deviceMapTableSetObject:forKey:
connection
errorStatus
object
boolValue
deviceFetchResolvesElementsOnSimulator
messageWithSelector:objectArguments:
sendControlAsync:replyHandler:
set_shouldResolveElementsOnSimulator:
fetchShouldResolveElementsOnSimulator:
didFinishPopulatingRemoteInfo
_checkShouldResolveElementsOnSimulator
screens
count
objectAtIndex:
frame
mouseLocation
_updateCurrentElementForMousePoint:
_currentElementLocked
_lastMousePoint
shared
convertPointToBottomLeftOriginScreenCoordinateSpace:
_systemElement
set_isMouseOverAppOfInterest:
_shouldResolveElementsOnSimulator
setPlatformElementToken:
_setCurrentElement:
_isCurrentlyFetchingSimulatorLocalElement
set_isCurrentlyFetchingSimulatorLocalElement:
isEqualToString:
set_lastMousePoint:
_updateCurrentElement
_timer
set_timer:
_timerFire
_currentElement
_setMonitoredEventType:
_setCurrentElementLocked:
_enableMouseClickEventTap:
_startWatchingMouse
_stopWatchingMouse
_monitoredEventType
set_isTrackingMouseDown:
_mouseClickEventTap
_installMouseClickEventTap
_setMouseClickEventTap:
_removeMouseClickEventTap
_mapTableID
dealloc
_deviceMapTableObjectForKey:
carbonScreenPointFromCocoaScreenPoint:
_tapDetectedMouseDown:
_tapDetectedMouseDragged:
_tapDetectedMouseUp:
set_systemElement:
_isTrackingMouseDown
_isMouseOverAppOfInterest
set_mapTableID:
__currentElementLocked
__isTrackingMouseDown
__isMouseOverAppOfInterest
__shouldResolveElementsOnSimulator
__isCurrentlyFetchingSimulatorLocalElement
__mouseClickEventTap
__timer
__currentElement
__systemElement
__monitoredEventType
__mapTableID
__lastMousePoint
T^{__CFMachPort=},N,S_setMouseClickEventTap:,V__mouseClickEventTap
T@"NSObject<OS_dispatch_source>",&,N,V__timer
TB,N,S_setCurrentElementLocked:,V__currentElementLocked
T{CGPoint=dd},N,V__lastMousePoint
T@"AXAuditElement",&,N,S_setCurrentElement:,V__currentElement
T^{__AXUIElement=},&,N,V__systemElement
TQ,N,S_setMonitoredEventType:,V__monitoredEventType
TB,N,V__isTrackingMouseDown
TB,N,V__isMouseOverAppOfInterest
TB,N,V__shouldResolveElementsOnSimulator
TB,N,V__isCurrentlyFetchingSimulatorLocalElement
TQ,N,V__mapTableID
createWithPoint:
createWithSize:
createWithRect:
createWithRange:
setTitle:
setIdentifier:
addAttribute:performsAction:humanReadable:settable:valueType:isInternal:
setDisplayInline:
setCaptionText:
setElement:
setInspectorSections:
elementAttribute
attributeName
_nilString
initWithString:
_boolAttr
numberWithBool:
null
_stringAttr
_numberAttr
_pointAttr
_sizeAttr
_rectAttr
_rangeAttr
_auditElement
set_boolAttr:
set_stringAttr:
set_numberAttr:
set_pointAttr:
set_sizeAttr:
set_rectAttr:
set_rangeAttr:
deviceAccessibilitySettings
deviceUpdateAccessibilitySetting:withValue:
set_nilString:
set_auditElement:
__boolAttr
__stringAttr
__nilString
__numberAttr
__pointAttr
__sizeAttr
__rectAttr
__rangeAttr
__auditElement
TB,N,V__boolAttr
T@"NSString",C,N,V__stringAttr
T@"NSString",C,N,V__nilString
T@"NSNumber",&,N,V__numberAttr
T@"AXAuditPoint",&,N,V__pointAttr
T@"AXAuditSize",&,N,V__sizeAttr
T@"AXAuditRect",&,N,V__rectAttr
T@"AXAuditRange",&,N,V__rangeAttr
T@"AXAuditElement",&,N,V__auditElement
initWithLocalName:size:
sharedMemory
totalSharedMemorySize
_createOSXDevice
deviceConnectionAttempt
setDeviceConnectionAttempt:
_trySetupMacDevice
_deviceConnectionAttempt
Tq,N,V_deviceConnectionAttempt
devicePerformFinalCleanup
deviceManagerDevicesDidUpdate:
deviceTypesToMonitor
_deviceMonitorSIM
_deviceMonitorEmbedded
_deviceMonitorOSX
_deviceMonitorFake
activeDeviceMonitors
localOSXDevice
_deviceMonitorForDevice:
addObjectsFromArray:
firstObject
setDeviceTypesToMonitor:
startDeviceMonitors
_deviceTypesToMonitor
T@"<XDMDeviceManagerDelegate>",W,N,V_delegate
Tq,N,V_deviceTypesToMonitor
_device
setProductType:
_getRemoteProperty:expectedType:valueBlock:
setDeviceColor:
setProductVersion:
setDeviceEnclosureColor:
_generateDeviceImage
productType
deviceColor
deviceEnclosureColor
initWithDevice:transport:identifier:
device
populateDeviceInfo
productVersion
set_device:
_productType
_productVersion
_deviceColor
_deviceEnclosureColor
__device
T^{_AMDevice=},&,N,V__device
T@"NSString",&,N,V_productType
T@"NSString",&,N,V_productVersion
T@"NSString",&,N,V_deviceColor
T@"NSString",&,N,V_deviceEnclosureColor
_setupConnectionForTransport:
populateRemoteInfo
deviceSetAppMonitoringEnabled:
setDispatchTarget:
initWithTransport:
setMaximumEnqueueSize:
resume
setConnection:
deviceIsAuthorizedForCommunication:
deviceSetAuditUIPid:
numberWithInt:
deviceSetAuditTargetPid:
transportDictionaryForObject:
deviceHighlightIssue:
deviceHighlightIssues:
deviceInspectorFocusOnElement:
deviceInspectorSetMonitoredEventType:
deviceInspectorShowVisuals:
deviceInspectorShowIgnoredElements:
deviceInspectorLockOnCurrentElement
deviceInspectorPreviewOnElement:
numberWithUnsignedLongLong:
deviceInspectorMoveWithOptions:
deviceResetToDefaultAccessibilitySettings
deviceFetchSpecialElement:
deviceFetchElementAtNormalizedDeviceCoordinate:
valueWithBytes:objCType:
element
performsAction
deviceElement:performAction:withValue:
deviceElement:valueForAttribute:
setValue:
deviceElement:setValue:attribute:
deviceEnableHighlight:
_pendingPopulationCallbacks
_isPopulating
_didFinishPopulateRemoteInfo
set_isPopulating:
set_pendingPopulationCallbacks:
enumerateObjectsUsingBlock:
_checkDidFinishPopulateRemoteInfo
deviceCapabilities
_populateSupportedAuditTypes
deviceApiVersion
deviceInspectorCanNavWhileMonitoringEvents
deviceInspectorSupportedEventTypes
copy
deviceAllSupportedAuditTypes
arrayForTransportArray:expectedClass:
deviceRunningApplications
deviceDidGetTargeted
deviceCaptureScreenshot
_updateScreenshotImageWithInfo:completion:
addScreenshotWithInfo:timestamp:completion:
performAuditWithTypes:
deviceBeginAuditTypes:
deviceBeginAuditCaseIDs:
setTransport:
__isPopulating
_connection
__pendingPopulationCallbacks
T@"DTXConnection",&,N,V_connection
Tq,N,V__pendingPopulationCallbacks
TB,N,V__isPopulating
_simulatorFrameworkLoaded
_seenBootingDevices
identifier
mutableCopy
state
removeObject:
_handshakeQueue
port
useLegacyHandshake
_performHandshakeOnBackgroundQueueWithPort:deviceIdentifier:useLegacyHandshake:name:productName:
_legacyFileDescriptorHandshakeWithSendPort:
fileDescriptorHandshakeWithSendPort:
_buildSimDevicesQueue
_buildDevices
_simDeviceSet
devices
UDID
runtime
lookup:error:
bundleForClass:
localizedStringForKey:value:table:
setPort:
setState:
_bootingDeviceWithIdentifier:
setSeenBootingCount:
seenBootingCount
_triggerBuildDevices
_gotSimDevices:
sharedServiceContextForDeveloperDir:error:
defaultDeviceSetWithError:
set_simDeviceSet:
registerNotificationHandlerOnQueue:handler:
set_buildSimDevicesQueue:
set_handshakeQueue:
set_seenBootingDevices:
__simDeviceSet
__buildSimDevicesQueue
__handshakeQueue
__seenBootingDevices
T@,&,N,V__simDeviceSet
T@"NSObject<OS_dispatch_queue>",&,N,V__buildSimDevicesQueue
T@"NSObject<OS_dispatch_queue>",&,N,V__handshakeQueue
T@"NSMutableArray",&,N,V__seenBootingDevices
defaultManager
mainBundle
bundlePath
stringWithUTF8String:
fileExistsAtPath:
stringByDeletingLastPathComponent
stringByAppendingPathComponent:
setUseLegacyHandshake:
_useLegacyHandshake
_port
_identifier
_state
T@"NSString",C,N,V_name
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_productName
TQ,N,V_state
TI,N,V_port
TB,N,V_useLegacyHandshake
_seenBootingCount
Tq,N,V_seenBootingCount
pathComponents
dictionaryWithObjects:forKeys:count:
initWithDeviceRef:device:identifier:
_deviceConnectionQueue
_reattemptConnectionToDevice:status:
deviceRef
didAddDeviceToAllDevices
deviceOnMainThread
setDidAddDeviceToAllDevices:
_transportInterrupted:deviceIdentifier:
initWithConnectedSocket:disconnectAction:
_populateDevice:transport:withConnectionErr:
_devicesPendingConnect
setConnectionAttempts:
_connectToPendingDevices
_addDeviceToDevicesPendingConnect:
_connectToDevice:
connectionAttempts
_attemptConnectToDevice:
_disconnectDeviceWithID:
_deviceAttached:
_deviceDetached:
notificationStopped
set_devicesPendingConnect:
set_deviceConnectionQueue:
__devicesPendingConnect
__deviceConnectionQueue
T@"NSMutableDictionary",&,N,V__devicesPendingConnect
T@"NSObject<OS_dispatch_queue>",&,N,V__deviceConnectionQueue
setDeviceRef:
setDeviceOnMainThread:
_didAddDeviceToAllDevices
_deviceRef
_connectionAttempts
_deviceOnMainThread
T@"NSString",&,N,V_identifier
T^{_AMDevice=},&,N,V_deviceRef
Tq,N,V_connectionAttempts
TB,N,V_didAddDeviceToAllDevices
T@"XDMDeviceEmbedded",&,N,V_deviceOnMainThread
@16@0:8
q16@0:8
v28@0:8@16B24
v32@0:8@16@24
v16@0:8
v24@0:8@16
@"XDMDeviceFakeIPhone"
@"XDMDeviceFakeIPadPro"
@"XDMDeviceFakeSimulator"
@"XDMDeviceFakeWatch"
@"XDMDeviceFakeATV"
@"XDMDeviceFakeOSX"
@"XDMDeviceFakeGeneric"
#16@0:8
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"AXAuditDeviceSettingsManager"16@"AXAuditDeviceSetting"24
v32@0:8Q16B24B28
v24@0:8Q16
v20@0:8B16
v24@0:8@?16
@"AXAuditDeviceSettingsManager"
@"NSNumber"16@0:8
@"NSArray"16@0:8
v24@0:8@"NSString"16
v24@0:8@"NSDictionary"16
v24@0:8@"NSNumber"16
@24@0:8@16
v20@0:8i16
v32@0:8@16@?24
v32@0:8q16@?24
v40@0:8{CGPoint=dd}16@?32
v24@0:8q16
@"<XDMDeviceDelegate>"
@"<XDMDeviceApplicationsDelegate>"
@"NSString"
@"NSArray"
@"NSImage"
@"NSMutableArray"
@"NSMutableString"
@"<XDMDeviceMonitorDelegate>"
@"NSMutableDictionary"
v32@0:8@16q24
@24@0:8q16
@32@0:8@16@24
{CGPoint=dd}32@0:8{CGPoint=dd}16
v32@0:8{CGPoint=dd}16
v24@0:8^{__CGEvent=}16
v24@0:8^{__CFMachPort=}16
^{__CFMachPort=}16@0:8
{CGPoint=dd}16@0:8
^{__AXUIElement=}16@0:8
v24@0:8^{__AXUIElement=}16
^{__CFMachPort=}
@"NSObject<OS_dispatch_source>"
@"AXAuditElement"
^{__AXUIElement=}
{CGPoint="x"d"y"d}
@"NSNumber"
@"AXAuditPoint"
@"AXAuditSize"
@"AXAuditRect"
@"AXAuditRange"
v24@0:8@"XDMDeviceMonitor"16
@"<XDMDeviceManagerDelegate>"
@40@0:8^{_AMDevice=}16@24@32
^{_AMDevice=}16@0:8
v40@0:8^{__CFString=}16#24@?32
v24@0:8^{_AMDevice=}16
^{_AMDevice=}
@"DTXConnection"
v48@0:8I16@20B28@32@40
@"NSObject<OS_dispatch_queue>"
I16@0:8
v20@0:8I16
v36@0:8@16@24i32
v32@0:8@16Q24
v32@0:8^{_AMDevice=}16@24
@"XDMDeviceEmbedded"
