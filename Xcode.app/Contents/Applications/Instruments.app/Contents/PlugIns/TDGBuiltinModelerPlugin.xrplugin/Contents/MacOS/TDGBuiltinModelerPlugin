@(#)PROGRAM:TDGBuiltinModelerPlugin  PROJECT:RealityKitInstrument-1
?TDGBuiltinModelerPlugin
TableDefinitionColumns
TableValuesContainer
ColumnsType
TableEntry
OneTable
TwoTables
ThreeTables
FourTables
FiveTables
SixTables
BaseTableReadCursor
AnalysisCoreSomeSingleRowReader
OSSignpostColumns
Tick
KdebugColumns
AnalysisCore
TypedReadCursor
TableDefinition
XRAnalysisCoreTableAccess
SingleRowReader
KdebugCode
FastKdebugDecoder
DVTInstrumentsAnalysisCore
TDGBuiltinModelerPlugin
BottleneckMetric
BottleneckAggregated
BottleneckCategory
Bottleneck
RealityBottleneckStat
TDGBuiltinModelerPlugin
RealityMetricsModeler
TDGBuiltinModelerPlugin
SystemPowerState
SystemPowerImpact
RealityBottlenecks
SceneComplexity
RealityMetric
FrameComponent
CoreAnimationCommitInterval
MetalGPUIntervals
TimeInfo
TDGBuiltinModelerPlugin
Metric
InputSchema OutputSchema
SystemPowerMetric
SceneComplexityMetric
GenericREMetric
FrameComponentMetric
RECategoryMetric
RECategory
SystemPowerLevel
SceneMetric
RETimeMetric
REStat
Frame
FrameState
NSImage
TDGBuiltinModelerPlugin
ResourceBundleClass
_ACResourceInitProtocol
dealloc
T#,R
isProxy
T@"NSString",R,C
tableID
.cxx_destruct
enumerateObjectsAndIntegerKeys:
T@"NSString",?,R,C
release
TQ,R
_formatNarrative:stringAsSignature:args:
accessRights
activateWithOptions:
advanceToNextRow
appendNewRow
attributes
autorelease
bundleWithIdentifier:
class
columnIDForMnemonic:
conformsToProtocol:
debugDescription
description
formatNarrative:args:
getProcessDetails:session:
getThreadDetails:tid:
getValue:fieldIndex:
getValue:implementation:engineeringType:
hash
implClass
init
initWithBootEpoch:machAbsoluteStart:machContinuousStart:machTimeBase:startTime:timeZone:
initWithFactory:
initWithType:
isEqual:
isKindOfClass:
isMemberOfClass:
leadingEventHorizon
name
objectValue
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
populateOutputTables:usingObserverations:parameters:checkToYieldBlock:
populateSpeculationTables:parameters:
registerCustomSymbolWithName:colorName:bundle:isTemplate:
registerModelerWithIdentifier:modelerClass:
registerSystemSymbolWithName:colorName:isTemplate:
resetModelerStateWithTables:parameters:
respondsToSelector:
retain
retainCount
schema
self
setSignature:forColumn:
setString:
setString:forColumn:
setUInt32:forColumn:
setUInt64:forColumn:
setValue:forColumn:
sharedFactory
sharedManager
signature
spec
string
superclass
uint32
uint64
valueFactory
valueForColumnId:
wrappedCursor
writeCursorForTableID:
zone
XRAnalysisCoreNarrativeSupport_Swift
TDGBuiltInModelerPlugin
XRPlugin
NSObject
Q32@0:8r*16[1{__va_list_tag=II^v^v}]24
c24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8Q16
c28@0:8Q16C24
COM.APPLE.TDG.INSTRUMENTS.REALITY-METRICS
com.apple.Instruments.TDGBuiltinModelerPlugin
realitytrace
purple
frames
gauge.medium
RealityDevice14,1
Core Animation Client Commit
Core Animation Server Update
Core Animation Encoding
Core Animation GPU
RealityKit Animations GPU
Input Processing
Spatial Systems
3D Render Encoding
3D Render GPU
Video Playback
Particles Update
GPU Work Stall
Custom RealityKit Systems
RealityKit Physics
RealityKit Animations
Entity Commits
Audio Playback
Input
Core Animation Render
3D Render
RealityKit Animation
Particles
Custom Reality Systems
tableDefinition
$__lazy_storage_$_values
tableDefinitions
_TtCOO23TDGBuiltinModelerPlugin12AnalysisCore15TypedReadCursor19BaseTableReadCursor
readCursor
shouldYield
wasInterrupted
a b c 
a b 
- Look at how many audio players are concurrently playing in your app
- Minimize the number of moving audio players
- This depends on the amount, frame rate, and format of RealityView videos being rendered
- Look at the metrics in the 3D Render track in RealityKit Metrics
- Reduce the number of mesh parts, triangles and vertices of your VFX content
- Use fewer overall particle emitters and more particles per emitter instead
- Experiment with different types of VFX particle effects in Reality Composer Pro
- Lower your particle counts + experiment with size and shape of particles
- Look at the metrics in the Spatial Systems track in RealityKit Metrics
- Reduce the number of custom anchors you are using in your app and how often they are updated
- You may have too many colliders in your content or too many interactable entities layered upon one another
- Look at the metrics in the RealityKit Physics track in RealityKit Metrics
- Minimize the amount of static + dynamic rigid bodies and colliders your app is generating for its content
- Experiment with different physics shapes to minimize amount of collision calculations that need to be done
- Having more rigid bodies in the same space can have exponentially more collisions
- Non-moving, static colliders are more efficient to use than non-static ones
- Minimize any visual updates in your app that would need re-drawing
- Transform component updates, animations, material updates, asset loading, etc
- While physics simulation runs in your app, it can cause transform updates, which then also need to be synced over for rendering updates
- Consider updating animations at lower rates
- Be aware of what rendering and audio components your custom systems may also be potentially modifying / dirtying
- Minimize the amount of entity creation and destruction that your app does per frame. Avoid large amounts of creation or destruction at once
- Minimize the total number of entities in your mesh hierarchies. Flatten your assets as much as possible
- Don
t set / update properties of components that you don
t need to
- Frame pacing keeps the render server's CPU work from running too far ahead of its GPU work
- This indicates that the previous frame's GPU work is taking too long
- Look at GPU bottlenecks causing this delay from previous frames
- For high fragment work during this bottleneck
    - Optimize for any 3D overdraw
        - Experiment with different sizes of triangles for 3D geometry
        - Experiment with the shapes, sizes, and animation styles of particle emitters
        - Minimize overlapping and transparent 3D meshes, UI meshes and particles
    - Consider using Unlit or a simple custom material over default material for complex content
    - If already using a custom material, look at GPU tracks and/or use Metal System Trace template to debug and optimize GPU work further
- For high vertex work during this bottleneck
    - Look at the metrics in the 3D Rendering track in RealityKit Metrics
    - Reduce vertex/triangle count for 3D mesh / particles
- Look at the metrics in the 3D Render track in RealityKit Metrics
- Reduce the number of draw calls
    - Combine mesh parts in 3D mesh assets that share a material
        - Be wary of over-combining mesh parts and losing out heavily on FoV mesh culling optimizations
    - Reduce the number of VFX particles in particle emitters
    - Reduce the number of grounding shadows you apply to RealityKit content
- Reduce vertex/triangle count of 3D meshes + VFX content
- Minimize overlapping 3D content in your app
- Look at the metrics in the RealityKit Animations track in RealityKit Metrics
    - Reduce the number of skeletal animations in RealityKit content
    - Reduce the number of weights + vertices for skeletal animations in RealityKit content
- Use Time Profiler to figure out which custom systems in your app are the major bottleneck
- Look at callstacks of those systems to identify potential optimizations
- Identify if those custom systems need to be updated as often
- Identify the root-causes of these commits and where time is spent
    - Use Core Animation Tracks to identify updating layers and elements
    - Use the SwiftUI Instruments template to debug how/what views are being updated
    - Use Time Profiler to further debug the bottleneck's call stacks from other areas
- Optimize for bottlenecks found
- Reduce render passes + offscreen prepares in the Core Animation track of RealityKit Metrics
- Use Core Animation and SwiftUI Instruments to debug render passes further
- Minimize Core Animation offscreen passes from your app
    - Shadows, masking, rounded rectangles, blurs and vibrancy
- Optimize the amount of re-drawing needed for your app's UI elements
    - Look out for large texture re-draws touching a lot of pixels
    - Pause/stop animation updates when not needed
    - Lower the update rates of animations
    - Minimize overlapping content
    - Minimize unneeded view updates
    - Experiment with different UI layouts and elements to get a lower complexity layer tree
    - Scrolling costs increases with type, amount and resolution of vector-based media content
Initial command buffer
DeformerCommandBuffer
coreanimation.command-buffer
XRRealityMetricsModeler
v32@0:8@16@24
c48@0:8@16@24@32@?40
@16@0:8
v16@0:8
inputKdebugTable
inputTimeInfoTable
inputTickTable
inputMetalGPUIntervalsTable
inputOSSignpostTable
inputCACommitIntervalTable
outputFrameTable
outputREMetricTable
outputSceneMetricsTable
outputRealityBottlenecksTable
outputSystemPowerTable
outputSystemPowerStateTable
frameMetric
reMetrics
sceneMetrics
powerMetric
bottleneckMetrics
realityBottlenecksTickTableID
sceneMetricsTickTableID
v32@?0@8Q16*24
system-power-state
system-power-impact
reality-bottlenecks
scene-complexity-metric
execution-duration
layout-qualifier
coreanimation-commit-interval
channel-subtitle
iosurface-accesses
metal-gpu-intervals
trace-start-time
cp-user-callstack
XRAnalysisCoreSwiftModeler
v32@0:8@"<XRIntKeyedDictionaryImmutable>"16@"XRAnalysisCoreModelingParameters"24
c48@0:8@"XRAnalysisCoreTableBindingsWrapper"16@"XRAnalysisCoreReadCursorWrapper"24@"XRAnalysisCoreModelingParameters"32@?<c@?>40
v32@0:8@"XRAnalysisCoreTableBindingsWrapper"16@"XRAnalysisCoreModelingParameters"24
Frame Pacing Wait
Translucent UI Meshes
Offscreen Prepares
App Updates Received
Active Rigid Bodies
Dynamic Rigid Bodies
Static Rigid Bodies
Skeletal Animations
Shadows Vertices
Shadows Triangles
Shadows Draw Calls
Particle Vertices
Particle Triangles
Particle Draw Calls
3D Mesh Vertices
3D Mesh Triangles
3D Mesh Draw Calls
Total Verticies Submitted
Total Triangles Submitted
Total Draw Calls
System power impact was %event-concept% for %duration%
Fatal error
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
_TtC23TDGBuiltinModelerPluginP33_5D3AF4AFF4D9609FBB011EE6476783F319ResourceBundleClass
$s23TDGBuiltinModelerPlugin22TableDefinitionColumnsP
$s23TDGBuiltinModelerPlugin20TableValuesContainerP
11ColumnsType
So19XRAnalysisCoreValueCGSg
yxG1a_AAyq_G1bt
yxG1a_AAyq_G1bAAyq0_G1ct
yxG1a_AAyq_G1bAAyq0_G1cAAyq1_G1dt
yxG1a_AAyq_G1bAAyq0_G1cAAyq1_G1dAAyq2_G1et
yxG1a_AAyq_G1bAAyq0_G1cAAyq1_G1dAAyq2_G1eAAyq3_G1ft
So31XRAnalysisCoreReadCursorWrapperC
Sbyc
$s23TDGBuiltinModelerPlugin31AnalysisCoreSomeSingleRowReaderP
So25XRAnalysisCoreTableSchemaC
$sSt
y__xq_q0_q1_q2_q3_G
$sST
y__xq_q0_q1_q2_G
y__xq_q0_q1_G
y__xq_q0_G
y__xq_G
y_xG
y__xG
_A2BtG
ABGG
So19XRAnalysisCoreValueCSg
$sSY
5start_So19XRAnalysisCoreValueC7processtGG
_So19XRAnalysisCoreValueCtG
$s23TDGBuiltinModelerPlugin6MetricP
So19XRAnalysisCoreValueC
$ss12CaseIterableP
So8NSObjectC
IeyBd_
Siz_Xx
ypSg
So25XRAnalysisCoreTableSchemaCSg
Gz_Xx
So25XRAnalysisCoreTableSchemaCSgz_Xx
11InputSchema
12OutputSchema
So16XRDeviceTimeInfoCSg
5start_So19XRAnalysisCoreValueC7processtGG
5start_So19XRAnalysisCoreValueC7processtG
5start_So19XRAnalysisCoreValueC7processtGG
_So19XRAnalysisCoreValueCtG
_A2CtG
ACGG
5start_So19XRAnalysisCoreValueC7processtG
5start_So19XRAnalysisCoreValueC7processtGG
SaySo19XRAnalysisCoreValueCG
$s23TDGBuiltinModelerPlugin23_ACResourceInitProtocolP
tableDefinition
$__lazy_storage_$_values
tableDefinitions
readCursor
shouldYield
wasInterrupted
tableIDs
schema
columns
time
cpuIndex
thread
callstack
event_class
event_subclass
code
function
arg1
arg2
arg3
arg4
eventType
signpostId
signpostName
message
process
backtrace
Element
Iterator
ColumnsType
codeColumnIDCache
threadColumnIDCache
timeColumnIDCache
argsColumnsIDCache
reusableValue
event_code
RawValue
openMetrics
sharedRendererProcess
maxFrameCounts
mappedBottleneckStats
startMap
endMap
decoder
process
reusableThreadHolder
processCache
InputSchema
OutputSchema
inputRSS
inputNIS
anchoring
placement
sceneunderstanding
audioPlayerSystem
audioListenSystem
audioSessionSystem
audioMixerSystem
audioAcousticMeshSystem
caClientCommit
careContextStore
careManager
careRenderGraph
careGPUBufferExecution
custom
deformersAnimationManager
deformersMesh
deformerGPUBufferExecution
enterFramePhase
graphicsMeshECS
graphicsMeshShadowsECS
graphicsShadowClustersECS
graphicsMakeRenderGraph
graphicsCommitRenderGraph
gpuCommandBufferExecution
compositorDrawableWait
graphicsPacingWait
graphicsDrawableWait
graphicsGPUWait
networkSendSystem
networkReceiveSystem
networkPostFrame
networkPreFrame
physicsSystem
physicsSimulation
vfxRenderGraph
videoECS
stat
start
duration
caCommit
caContextLayerUpdate
caEncodingCPU
caEncodingGPU
deformations
input
mrSystems
renderingCPU
renderingGPU
video
gpuWaits
physics
animations
network
audio
category
AllCases
RawValue
inputKdebugTable
inputTimeInfoTable
inputTickTable
inputMetalGPUIntervalsTable
inputOSSignpostTable
inputCACommitIntervalTable
outputFrameTable
outputREMetricTable
outputSceneMetricsTable
outputRealityBottlenecksTable
outputSystemPowerTable
outputSystemPowerStateTable
frameMetric
reMetrics
sceneMetrics
powerMetric
bottleneckMetrics
realityBottlenecksTickTableID
sceneMetricsTickTableID
updateTime
mabsEpoch
mctEpoch
timebaseInfo
traceStartTime
start
duration
channelName
frameNumber
startLatency
eventDepth
eventLabel
state
connectionUUID
color
process
channelSubtitle
ioSurfaceAccesses
bytes
thread
transaction
narrative
severity
layoutQualifier
executionDuration
frame
stage
level
layout
importance
type
module
count
timestamp
recommendation
load
impact
sentinel
context
sharedRendererProcess
sharedRendererFPS
sharedRendererCachedFPS
frames
currentFrameCount
qualifierValue
timeInfo
decoder
process
reusableThreadHolder
processCache
openMetrics
maxFrameCounts
mappedFrameTimeMetrics
startMap
endMap
tickWidth
currentStart
drawStatsCode
meshStatsCode
vfxStatsCode
shadowStatsCode
entityCode
mrSceneCode
skeletalPoseSystemCode
physicsRigidBodiesCode
physicsActiveRigidBodiesCode
physicsCollidersCode
physicsShapes1Code
physicsShapes2Code
networkSendSystemCode
packetReceivedCode
startTickCode
caServerRenderCode
caServerOffscreenCode
caLayerManagerSemiTransparentCode
draws
triangles
verticies
entities
mesh3Ddraws
mesh3Dtriangles
mesh3Dverticies
vfx3Ddraws
vfx3Dtriangles
vfx3Dverticies
shadow3Ddraws
shadow3Dtriangles
shadow3Dverticies
customAnchors
skeletalPoses
staticRigidBodies
dynamicRigidBodies
activeRigidBodies
colliders
boxShapes
sphereShapes
capsuleShapes
planeShapes
triangleShapes
convexShapes
syncableEntities
commitsReceived
caRenderPasses
caOffscreenPrepares
caSemiTransparentLayers
drawStatsCodesEmitted
meshStatsCodesEmitted
shadowStatsCodesEmitted
vfxStatsCodesEmitted
entityCodesEmitted
mrSceneCodesEmitted
meshDeformationSystemCodesEmitted
deformationManagerSystemCodesEmitted
skeletalPoseSystemCodesEmitted
physicsRigidBodiesCodesEmitted
networkSendSystemCodesEmitted
packetReceivedCodesEmitted
caServerRenderCodesEmitted
caServerRenderOffscreenCodesEmitted
caLayerManagerSemiTransparentCodesEmitted
lastStart
lastValue
lastLevel
lastStateWrite
InputSchema
OutputSchema
submitting
root
input
drawable
rendering
encoding
pacing
start
stageTime
cpuEndTime
gpuStartTime
gpuEndTime
isValid
qualifier
inputRSS
inputNIS
anchoring
placement
sceneunderstanding
careContextStore
careManager
careRenderGraph
enterFramePhase
graphicsMeshECS
graphicsMeshShadowsECS
graphicsShadowClustersECS
graphicsMakeRenderGraph
graphicsCommitRenderGraph
graphicsPacingWait
graphicsDrawableWait
graphicsGPUWait
vfxRenderGraph
vfxEmitterECS
deformersAnimationManager
deformersMesh
audioPlayerSystem
audioListenSystem
audioSessionSystem
audioMixerSystem
audioAcousticMeshSystem
audioPreFrameUpdate
audioPostFrameUpdate
videoECS
networkSendSystem
networkReceiveSystem
networkPostFrame
networkPreFrame
custom
physicsSystem
physicsSimulation
type
duration
unknown
medium
high
care
graphics
animation
physics
audio
video
network
RawValue
@(#)PROGRAM:TDGBuiltinModelerPlugin  PROJECT:RealityKitInstrument-1
?a b c d 
TDGBuiltinModelerPlugin
TableDefinitionColumns
TableValuesContainer
ColumnsType
TableEntry
OneTable
TwoTables
ThreeTables
FourTables
FiveTables
SixTables
BaseTableReadCursor
AnalysisCoreSomeSingleRowReader
OSSignpostColumns
Tick
KdebugColumns
AnalysisCore
TypedReadCursor
TableDefinition
XRAnalysisCoreTableAccess
SingleRowReader
KdebugCode
FastKdebugDecoder
DVTInstrumentsAnalysisCore
(+/8<CIR
TDGBuiltinModelerPlugin
BottleneckMetric
BottleneckAggregated
BottleneckCategory
Bottleneck
RealityBottleneckStat
TDGBuiltinModelerPlugin
RealityMetricsModeler
TDGBuiltinModelerPlugin
SystemPowerState
SystemPowerImpact
RealityBottlenecks
SceneComplexity
RealityMetric
FrameComponent
CoreAnimationCommitInterval
MetalGPUIntervals
TimeInfo
#+?.7
!%(,/8<@DHOW`dkt}
!!!!!!!!!!!!!!!!!!!!
&)-59>BJ
),/7:AGR
'*3<E
%/2=H
TDGBuiltinModelerPlugin
Metric
InputSchema OutputSchema
SystemPowerMetric
SceneComplexityMetric
GenericREMetric
FrameComponentMetric
RECategoryMetric
RECategory
SystemPowerLevel
SceneMetric
RETimeMetric
REStat
Frame
FrameState
NSImage
TDGBuiltinModelerPlugin
ResourceBundleClass
_ACResourceInitProtocol
XRAnalysisCoreNarrativeSupport_Swift
TDGBuiltInModelerPlugin
XRPlugin
NSObject
dealloc
T#,R
isProxy
T@"NSString",R,C
tableID
.cxx_destruct
enumerateObjectsAndIntegerKeys:
T@"NSString",?,R,C
release
TQ,R
_formatNarrative:stringAsSignature:args:
accessRights
activateWithOptions:
advanceToNextRow
appendNewRow
attributes
autorelease
bundleWithIdentifier:
class
columnIDForMnemonic:
conformsToProtocol:
debugDescription
description
formatNarrative:args:
getProcessDetails:session:
getThreadDetails:tid:
getValue:fieldIndex:
getValue:implementation:engineeringType:
hash
implClass
init
initWithBootEpoch:machAbsoluteStart:machContinuousStart:machTimeBase:startTime:timeZone:
initWithFactory:
initWithType:
isEqual:
isKindOfClass:
isMemberOfClass:
leadingEventHorizon
name
objectValue
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
populateOutputTables:usingObserverations:parameters:checkToYieldBlock:
populateSpeculationTables:parameters:
registerCustomSymbolWithName:colorName:bundle:isTemplate:
registerModelerWithIdentifier:modelerClass:
registerSystemSymbolWithName:colorName:isTemplate:
resetModelerStateWithTables:parameters:
respondsToSelector:
retain
retainCount
schema
self
setSignature:forColumn:
setString:
setString:forColumn:
setUInt32:forColumn:
setUInt64:forColumn:
setValue:forColumn:
sharedFactory
sharedManager
signature
spec
string
superclass
uint32
uint64
valueFactory
valueForColumnId:
wrappedCursor
writeCursorForTableID:
zone
Q32@0:8r*16*24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8Q16
B28@0:8Q16C24
COM.APPLE.TDG.INSTRUMENTS.REALITY-METRICS
com.apple.Instruments.TDGBuiltinModelerPlugin
realitytrace
purple
frames
gauge.medium
RealityDevice14,1
Core Animation Client Commit
Core Animation Server Update
Core Animation Encoding
Core Animation GPU
RealityKit Animations GPU
Input Processing
Spatial Systems
3D Render Encoding
3D Render GPU
Video Playback
Particles Update
GPU Work Stall
Custom RealityKit Systems
RealityKit Physics
RealityKit Animations
Entity Commits
Audio Playback
Input
Core Animation Render
3D Render
RealityKit Animation
Particles
Custom Reality Systems
tableDefinition
$__lazy_storage_$_values
tableDefinitions
_TtCOO23TDGBuiltinModelerPlugin12AnalysisCore15TypedReadCursor19BaseTableReadCursor
readCursor
shouldYield
wasInterrupted
a b c 
a b 
- Look at how many audio players are concurrently playing in your app
- Minimize the number of moving audio players
- This depends on the amount, frame rate, and format of RealityView videos being rendered
- Look at the metrics in the 3D Render track in RealityKit Metrics
- Reduce the number of mesh parts, triangles and vertices of your VFX content
- Use fewer overall particle emitters and more particles per emitter instead
- Experiment with different types of VFX particle effects in Reality Composer Pro
- Lower your particle counts + experiment with size and shape of particles
- Look at the metrics in the Spatial Systems track in RealityKit Metrics
- Reduce the number of custom anchors you are using in your app and how often they are updated
- You may have too many colliders in your content or too many interactable entities layered upon one another
- Look at the metrics in the RealityKit Physics track in RealityKit Metrics
- Minimize the amount of static + dynamic rigid bodies and colliders your app is generating for its content
- Experiment with different physics shapes to minimize amount of collision calculations that need to be done
- Having more rigid bodies in the same space can have exponentially more collisions
- Non-moving, static colliders are more efficient to use than non-static ones
- Minimize any visual updates in your app that would need re-drawing
- Transform component updates, animations, material updates, asset loading, etc
- While physics simulation runs in your app, it can cause transform updates, which then also need to be synced over for rendering updates
- Consider updating animations at lower rates
- Be aware of what rendering and audio components your custom systems may also be potentially modifying / dirtying
- Minimize the amount of entity creation and destruction that your app does per frame. Avoid large amounts of creation or destruction at once
- Minimize the total number of entities in your mesh hierarchies. Flatten your assets as much as possible
- Don
t set / update properties of components that you don
t need to
- Frame pacing keeps the render server's CPU work from running too far ahead of its GPU work
- This indicates that the previous frame's GPU work is taking too long
- Look at GPU bottlenecks causing this delay from previous frames
- For high fragment work during this bottleneck
    - Optimize for any 3D overdraw
        - Experiment with different sizes of triangles for 3D geometry
        - Experiment with the shapes, sizes, and animation styles of particle emitters
        - Minimize overlapping and transparent 3D meshes, UI meshes and particles
    - Consider using Unlit or a simple custom material over default material for complex content
    - If already using a custom material, look at GPU tracks and/or use Metal System Trace template to debug and optimize GPU work further
- For high vertex work during this bottleneck
    - Look at the metrics in the 3D Rendering track in RealityKit Metrics
    - Reduce vertex/triangle count for 3D mesh / particles
- Look at the metrics in the 3D Render track in RealityKit Metrics
- Reduce the number of draw calls
    - Combine mesh parts in 3D mesh assets that share a material
        - Be wary of over-combining mesh parts and losing out heavily on FoV mesh culling optimizations
    - Reduce the number of VFX particles in particle emitters
    - Reduce the number of grounding shadows you apply to RealityKit content
- Reduce vertex/triangle count of 3D meshes + VFX content
- Minimize overlapping 3D content in your app
- Look at the metrics in the RealityKit Animations track in RealityKit Metrics
    - Reduce the number of skeletal animations in RealityKit content
    - Reduce the number of weights + vertices for skeletal animations in RealityKit content
- Use Time Profiler to figure out which custom systems in your app are the major bottleneck
- Look at callstacks of those systems to identify potential optimizations
- Identify if those custom systems need to be updated as often
- Identify the root-causes of these commits and where time is spent
    - Use Core Animation Tracks to identify updating layers and elements
    - Use the SwiftUI Instruments template to debug how/what views are being updated
    - Use Time Profiler to further debug the bottleneck's call stacks from other areas
- Optimize for bottlenecks found
- Reduce render passes + offscreen prepares in the Core Animation track of RealityKit Metrics
- Use Core Animation and SwiftUI Instruments to debug render passes further
- Minimize Core Animation offscreen passes from your app
    - Shadows, masking, rounded rectangles, blurs and vibrancy
- Optimize the amount of re-drawing needed for your app's UI elements
    - Look out for large texture re-draws touching a lot of pixels
    - Pause/stop animation updates when not needed
    - Lower the update rates of animations
    - Minimize overlapping content
    - Minimize unneeded view updates
    - Experiment with different UI layouts and elements to get a lower complexity layer tree
    - Scrolling costs increases with type, amount and resolution of vector-based media content
Initial command buffer
DeformerCommandBuffer
coreanimation.command-buffer
XRRealityMetricsModeler
v32@0:8@16@24
B48@0:8@16@24@32@?40
@16@0:8
v16@0:8
inputKdebugTable
inputTimeInfoTable
inputTickTable
inputMetalGPUIntervalsTable
inputOSSignpostTable
inputCACommitIntervalTable
outputFrameTable
outputREMetricTable
outputSceneMetricsTable
outputRealityBottlenecksTable
outputSystemPowerTable
outputSystemPowerStateTable
frameMetric
reMetrics
sceneMetrics
powerMetric
bottleneckMetrics
realityBottlenecksTickTableID
sceneMetricsTickTableID
v32@?0@8Q16^B24
system-power-state
system-power-impact
reality-bottlenecks
scene-complexity-metric
execution-duration
layout-qualifier
coreanimation-commit-interval
channel-subtitle
iosurface-accesses
metal-gpu-intervals
trace-start-time
cp-user-callstack
XRAnalysisCoreSwiftModeler
v32@0:8@"<XRIntKeyedDictionaryImmutable>"16@"XRAnalysisCoreModelingParameters"24
B48@0:8@"XRAnalysisCoreTableBindingsWrapper"16@"XRAnalysisCoreReadCursorWrapper"24@"XRAnalysisCoreModelingParameters"32@?<B@?>40
v32@0:8@"XRAnalysisCoreTableBindingsWrapper"16@"XRAnalysisCoreModelingParameters"24
Frame Pacing Wait
Translucent UI Meshes
Offscreen Prepares
App Updates Received
Active Rigid Bodies
Dynamic Rigid Bodies
Static Rigid Bodies
Skeletal Animations
Shadows Vertices
Shadows Triangles
Shadows Draw Calls
Particle Vertices
Particle Triangles
Particle Draw Calls
3D Mesh Vertices
3D Mesh Triangles
3D Mesh Draw Calls
Total Verticies Submitted
Total Triangles Submitted
Total Draw Calls
System power impact was %event-concept% for %duration%
Fatal error
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
_TtC23TDGBuiltinModelerPluginP33_5D3AF4AFF4D9609FBB011EE6476783F319ResourceBundleClass
$s23TDGBuiltinModelerPlugin22TableDefinitionColumnsP
$s23TDGBuiltinModelerPlugin20TableValuesContainerP
11ColumnsType
So19XRAnalysisCoreValueCGSg
yxG1a_AAyq_G1bt
yxG1a_AAyq_G1bAAyq0_G1ct
yxG1a_AAyq_G1bAAyq0_G1cAAyq1_G1dt
yxG1a_AAyq_G1bAAyq0_G1cAAyq1_G1dAAyq2_G1et
yxG1a_AAyq_G1bAAyq0_G1cAAyq1_G1dAAyq2_G1eAAyq3_G1ft
So31XRAnalysisCoreReadCursorWrapperC
Sbyc
$s23TDGBuiltinModelerPlugin31AnalysisCoreSomeSingleRowReaderP
So25XRAnalysisCoreTableSchemaC
$sSt
y__xq_q0_q1_q2_q3_G
$sST
y__xq_q0_q1_q2_G
y__xq_q0_q1_G
y__xq_q0_G
y__xq_G
y_xG
y__xG
_A2BtG
ABGG
So19XRAnalysisCoreValueCSg
$sSY
5start_So19XRAnalysisCoreValueC7processtGG
_So19XRAnalysisCoreValueCtG
$s23TDGBuiltinModelerPlugin6MetricP
So19XRAnalysisCoreValueC
$ss12CaseIterableP
So8NSObjectC
IeyBd_
Siz_Xx
ypSg
So25XRAnalysisCoreTableSchemaCSg
Gz_Xx
So25XRAnalysisCoreTableSchemaCSgz_Xx
11InputSchema
12OutputSchema
So16XRDeviceTimeInfoCSg
5start_So19XRAnalysisCoreValueC7processtGG
5start_So19XRAnalysisCoreValueC7processtG
5start_So19XRAnalysisCoreValueC7processtGG
_So19XRAnalysisCoreValueCtG
_A2CtG
ACGG
5start_So19XRAnalysisCoreValueC7processtG
5start_So19XRAnalysisCoreValueC7processtGG
SaySo19XRAnalysisCoreValueCG
$s23TDGBuiltinModelerPlugin23_ACResourceInitProtocolP
tableDefinition
$__lazy_storage_$_values
tableDefinitions
readCursor
shouldYield
wasInterrupted
tableIDs
schema
columns
time
cpuIndex
thread
callstack
event_class
event_subclass
code
function
arg1
arg2
arg3
arg4
eventType
signpostId
signpostName
message
process
backtrace
Element
Iterator
ColumnsType
codeColumnIDCache
threadColumnIDCache
timeColumnIDCache
argsColumnsIDCache
reusableValue
event_code
RawValue
openMetrics
sharedRendererProcess
maxFrameCounts
mappedBottleneckStats
startMap
endMap
decoder
process
reusableThreadHolder
processCache
InputSchema
OutputSchema
inputRSS
inputNIS
anchoring
placement
sceneunderstanding
audioPlayerSystem
audioListenSystem
audioSessionSystem
audioMixerSystem
audioAcousticMeshSystem
caClientCommit
careContextStore
careManager
careRenderGraph
careGPUBufferExecution
custom
deformersAnimationManager
deformersMesh
deformerGPUBufferExecution
enterFramePhase
graphicsMeshECS
graphicsMeshShadowsECS
graphicsShadowClustersECS
graphicsMakeRenderGraph
graphicsCommitRenderGraph
gpuCommandBufferExecution
compositorDrawableWait
graphicsPacingWait
graphicsDrawableWait
graphicsGPUWait
networkSendSystem
networkReceiveSystem
networkPostFrame
networkPreFrame
physicsSystem
physicsSimulation
vfxRenderGraph
videoECS
stat
start
duration
caCommit
caContextLayerUpdate
caEncodingCPU
caEncodingGPU
deformations
input
mrSystems
renderingCPU
renderingGPU
video
gpuWaits
physics
animations
network
audio
category
AllCases
RawValue
inputKdebugTable
inputTimeInfoTable
inputTickTable
inputMetalGPUIntervalsTable
inputOSSignpostTable
inputCACommitIntervalTable
outputFrameTable
outputREMetricTable
outputSceneMetricsTable
outputRealityBottlenecksTable
outputSystemPowerTable
outputSystemPowerStateTable
frameMetric
reMetrics
sceneMetrics
powerMetric
bottleneckMetrics
realityBottlenecksTickTableID
sceneMetricsTickTableID
updateTime
mabsEpoch
mctEpoch
timebaseInfo
traceStartTime
start
duration
channelName
frameNumber
startLatency
eventDepth
eventLabel
state
connectionUUID
color
process
channelSubtitle
ioSurfaceAccesses
bytes
thread
transaction
narrative
severity
layoutQualifier
executionDuration
frame
stage
level
layout
importance
type
module
count
timestamp
recommendation
load
impact
sentinel
context
sharedRendererProcess
sharedRendererFPS
sharedRendererCachedFPS
frames
currentFrameCount
qualifierValue
timeInfo
decoder
process
reusableThreadHolder
processCache
openMetrics
maxFrameCounts
mappedFrameTimeMetrics
startMap
endMap
tickWidth
currentStart
drawStatsCode
meshStatsCode
vfxStatsCode
shadowStatsCode
entityCode
mrSceneCode
skeletalPoseSystemCode
physicsRigidBodiesCode
physicsActiveRigidBodiesCode
physicsCollidersCode
physicsShapes1Code
physicsShapes2Code
networkSendSystemCode
packetReceivedCode
startTickCode
caServerRenderCode
caServerOffscreenCode
caLayerManagerSemiTransparentCode
draws
triangles
verticies
entities
mesh3Ddraws
mesh3Dtriangles
mesh3Dverticies
vfx3Ddraws
vfx3Dtriangles
vfx3Dverticies
shadow3Ddraws
shadow3Dtriangles
shadow3Dverticies
customAnchors
skeletalPoses
staticRigidBodies
dynamicRigidBodies
activeRigidBodies
colliders
boxShapes
sphereShapes
capsuleShapes
planeShapes
triangleShapes
convexShapes
syncableEntities
commitsReceived
caRenderPasses
caOffscreenPrepares
caSemiTransparentLayers
drawStatsCodesEmitted
meshStatsCodesEmitted
shadowStatsCodesEmitted
vfxStatsCodesEmitted
entityCodesEmitted
mrSceneCodesEmitted
meshDeformationSystemCodesEmitted
deformationManagerSystemCodesEmitted
skeletalPoseSystemCodesEmitted
physicsRigidBodiesCodesEmitted
networkSendSystemCodesEmitted
packetReceivedCodesEmitted
caServerRenderCodesEmitted
caServerRenderOffscreenCodesEmitted
caLayerManagerSemiTransparentCodesEmitted
lastStart
lastValue
lastLevel
lastStateWrite
InputSchema
OutputSchema
submitting
root
input
drawable
rendering
encoding
pacing
start
stageTime
cpuEndTime
gpuStartTime
gpuEndTime
isValid
qualifier
inputRSS
inputNIS
anchoring
placement
sceneunderstanding
careContextStore
careManager
careRenderGraph
enterFramePhase
graphicsMeshECS
graphicsMeshShadowsECS
graphicsShadowClustersECS
graphicsMakeRenderGraph
graphicsCommitRenderGraph
graphicsPacingWait
graphicsDrawableWait
graphicsGPUWait
vfxRenderGraph
vfxEmitterECS
deformersAnimationManager
deformersMesh
audioPlayerSystem
audioListenSystem
audioSessionSystem
audioMixerSystem
audioAcousticMeshSystem
audioPreFrameUpdate
audioPostFrameUpdate
videoECS
networkSendSystem
networkReceiveSystem
networkPostFrame
networkPreFrame
custom
physicsSystem
physicsSimulation
type
duration
unknown
medium
high
care
graphics
animation
physics
audio
video
network
RawValue
