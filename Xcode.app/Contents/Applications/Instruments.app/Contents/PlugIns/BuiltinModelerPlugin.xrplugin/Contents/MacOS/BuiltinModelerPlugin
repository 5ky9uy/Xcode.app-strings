@(#)PROGRAM:BuiltinModelerPlugin  PROJECT:Instruments-64556.9
 n;^
Qkkbal
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
xt-switch-samplecontext-switch-ssyscall-name-maptime
swift-actor-lifeswift-actor-count
-actor-executionswift-actor-execk-creation-eventswift-task-creatsk-count
swift-running-taalive-task-countswift-alive-tasktotal-task-countswift-total-taskactor-queue-sizeswift-actor-queuft-task-lifetimeswift-task-lifetask-relationshipswift-task-relatncellation-eventswift-task-canceswift-task-state
time
thread
process
core-index
thread-state
backtrace
time
thread
core-index
thread-state
arg1
arg2
arg3
arg4
function
class
subclass
code
cp-user-callstack
cp-kernel-callstack
start
duration
thread
core
state
process
cputime
waittime
priority
note
summary
start
duration
thread
state
process
priority
time
thread
event
process
priority
note
time
time
thread
state
priority
start
duration
thread
process
call
cputime
waittime
arg1
arg2
arg3
arg4
return
errno
backtrace
note
signature
time
class
subclass
code
name
start
duration
thread
core
state
process
cputime
waittime
priority
note
summary
start
duration
thread
operation
process
cputime
waittime
address
size
backtrace
start
duration
task
state
backtrace
process
thread
resume-backtrace
suspend-backtrace
narrative
timestamp
task
start
duration
parent-task
child-task
start
duration
task
start
duration
count
start
duration
count
start
duration
count
timestamp
task
thread
backtrace
start
duration
actor
task
thread
start
duration
actor
count
start
duration
count
start
duration
actor-class
actor
time
thread
process
event-type
scope
identifier
name
format-string
backtrace
subsystem
category
message
14CSwitchModeler
12XRCXXModelerI14CSwitchModeler20XRCXXRequiredSchemasIJ6KdebugEE20XRCXXOptionalSchemasIJEE18XRCXXOutputSchemasIJ7CSwitchEEE
22XRCXXModelingInterface
6KdebugIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E6KdebugE
7CSwitchIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E7CSwitchE
22SystraceSyscallModeler
12XRCXXModelerI22SystraceSyscallModeler20XRCXXRequiredSchemasIJ6Kdebug14SyscallNameMapEE20XRCXXOptionalSchemasIJ16ThreadStateTableEE18XRCXXOutputSchemasIJ7SyscallEEE
14SyscallNameMapIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E14SyscallNameMapE
16ThreadStateTableIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E16ThreadStateTableE
7SyscallIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E7SyscallE
20VirtualMemoryModeler
12XRCXXModelerI20VirtualMemoryModeler20XRCXXRequiredSchemasIJ6KdebugEE20XRCXXOptionalSchemasIJEE18XRCXXOutputSchemasIJ18VirtualMemoryTableEEE
18VirtualMemoryTableIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E18VirtualMemoryTableE
18SystemTraceModeler
12XRCXXModelerI18SystemTraceModeler20XRCXXRequiredSchemasIJ13TidPidMapping6Kdebug19ThreadSnapshotTableEE20XRCXXOptionalSchemasIJEE18XRCXXOutputSchemasIJ16ThreadStateTable13CPUStateTable18ContextSwitchTableEEE
19ThreadSnapshotTableIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E19ThreadSnapshotTableE
16ThreadStateTableIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E16ThreadStateTableE
13CPUStateTableIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E13CPUStateTableE
18ContextSwitchTableIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E18ContextSwitchTableE
13TidPidMappingIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E13TidPidMappingE
23SwiftConcurrencyModeler
12XRCXXModelerI23SwiftConcurrencyModeler20XRCXXRequiredSchemasIJ10OSSignpostEE20XRCXXOptionalSchemasIJEE18XRCXXOutputSchemasIJ9TaskState21TaskCancellationEvent16TaskRelationship12TaskLifetime14AliveTaskCount16RunningTaskCount14TotalTaskCount17TaskCreationEvent14ActorExecution14ActorQueueSize10ActorCount13ActorLifetimeEEE
10OSSignpostIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E10OSSignpostE
9TaskStateIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E9TaskStateE
21TaskCancellationEventIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E21TaskCancellationEventE
16TaskRelationshipIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E16TaskRelationshipE
12TaskLifetimeIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E12TaskLifetimeE
17TaskCreationEventIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E17TaskCreationEventE
14ActorExecutionIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E14ActorExecutionE
14ActorQueueSizeIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E14ActorQueueSizeE
13ActorLifetimeIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E13ActorLifetimeE
14AliveTaskCountIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E14AliveTaskCountE
16RunningTaskCountIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E16RunningTaskCountE
14TotalTaskCountIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E14TotalTaskCountE
10ActorCountIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E10ActorCountE
NSt3__120__shared_ptr_emplaceI17TaskCreationEventIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14AliveTaskCountIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14TotalTaskCountIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI16TaskRelationshipIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI9TaskStateIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI12TaskLifetimeIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14ActorExecutionIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI16RunningTaskCountIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI21TaskCancellationEventIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI10ActorCountIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI13ActorLifetimeIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14ActorQueueSizeIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__117bad_function_callE
NSt3__110__function6__funcIZN23SwiftConcurrencyModeler9speculateEvEUlR11XRSwiftTaskE_NS_9allocatorIS5_EEFvS4_EEE
NSt3__110__function6__baseIFvR11XRSwiftTaskEEE
ZN23SwiftConcurrencyModeler9speculateEvEUlR11XRSwiftTaskE_
NSt3__110__function6__funcIZN23SwiftConcurrencyModeler9speculateEvEUlyE_NS_9allocatorIS3_EEFvyEEE
NSt3__110__function6__baseIFvyEEE
ZN23SwiftConcurrencyModeler9speculateEvEUlyE_
XRAnalysisCoreTableAccess
BuiltinModelerPlugin
URLSessionTaskContainmentsModeler
Info
TransactionContainmentsModeler
TransactionInterval
RowIndices
LayoutManager
HTTPAggregationCollector
ProcessInfo
AggregationType
HTTPEvent
TransactionEnrichmentModeler
TransactionInterval
Request
BodyData
HAREntry
CodingKeys
KeyValue
CustomTimingsForInstruments
Response
RelativeInterval
Content
ContentEncoding
URLSessionTaskEventsModeler
TaskStartEvent
AdditionalInfo
TaskCompleteAdditionalInfo
ErrorInformation
CodingKeys
NonOverlappingIntervalsLayoutManager
LayedOutInterval
DyldLibraryLoadIntervalModeler
AggregationDrawablesColumns
URLSessionTaskEndColumns
OsSignpostColumns
URLSessionTaskStartColumns
HarLogColumns
TransactionIntervalBasicInfoColumns
TransactionDrawablesColumns
TaskDrawablesColumns
TransactionStatesColumns
TransactionIntervalFullInfoColumns
URLSessionTaskIntervalColumns
_NSURLSessionTransactionEndReason
TransactionState
URLRequestAttribution
EventType
TableDefinitionColumns
TableValuesContainer
ColumnsType
TableEntry
OneTable
TwoTables
ThreeTables
BaseTableReadCursor
AnalysisCoreSomeSingleRowReader
TypedReadCursor
AnalysisCore
SingleRowReader
TableDefinition
DyldUUIDEvent
DyldUUIDEventType
DyldTimingInterval
DyldMapImageEvent
DyldDlopenEvent
DyldDlcloseEvent
DyldLibraryLoadColumns
KdebugStringColumns
KdebugColumns
AdditionalInformation
CodingKeys
HTTPAggregationModeler
time
message
process
har-entry-json
raw-string-id
raw-string
event-type
identifier
name
backtrace
URLSessionTaskIntervalModeler
TaskStartEvent
TaskEndEvent
TaskEndValuesContainer
HAREntry
CodingKeys
createOracleFunctionInvocation
core
oracleFunctionTokenWithName:
_fixupCallstacks:userBT:process:atTime:
_fixupCallstack:atTime:
getStoredUInt64Array:
getBacktraceFragment:process:frames:
getValue:signature:engineeringType:
setArgumentIndex:value:
initWithType:
setUint64:
getValue:implementation:engineeringType:
invokeOracleFunction:invocation:
getOutput:
bindingParameters
objectForKeyedSubscript:
unsignedLongValue
schema
accessRights
name
isEqualToString:
enumerateObjectsAndIntegerKeys:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
resetModelerStateWithTables:parameters:
populateOutputTables:usingObserverations:parameters:yieldFlag:
populateSpeculationTables:parameters:
inputCount
setInputCount:
outputCount
setOutputCount:
machProcessingTime
setMachProcessingTime:
modelingActivityCompletedWithParameters:
debuggingSwapLogString:
debuggingExecuteCommand:context:
debuggingDumpWorkingMemoryForContext:
debuggingEnumerateContextStrings:
debuggingAsynchronousPanicStop
TQ,N
.cxx_destruct
.cxx_construct
_kdebugCountersBinding
_pmiCountersBinding
_cpuProfileBinding
_cpuProfilerWriteCursor
_normalizer
_fixBTOracleToken
_fixBTInvocation
_factory
_core
_hasPMICountFeature
TQ,N,VinputCount
TQ,N,VoutputCount
TQ,N,VmachProcessingTime
parameters
intValue
extractColumnIDs:forMnemonics:
primaryTimeColumnID
threadNote:kdebugData:
_recordThreadState:newState:
_recordTheadStateContextSwitch:timestamp:
_fixedBacktrace:atTime:
_recordSyscall:
_recordVM:
getProcessValue:pid:sessionUUID:
getThread:tid:process:
signature
_storedThreadAndProcessFromTID:
initWithDelegate:factory:
_recordSysload:currentTime:
isValid
getThreadDetails:tid:
getProcessDetails:session:
_cacheTID:
_record:newCPUState:
_handleThreadStateTransfer:data:parameters:
setTrailingEventHorizon:
speculationIsFinal
leadingEventHorizon
setString:
UTF8String
syscallNoteAndSignature:syscallName:
signatureFromString:engineeringType:
threadSummary:
contextSwitchNote:
threadStateFromTid:
cpuStateFromCore:
signatureOfThread:
_threadStateBinding
_contextSwitchBinding
_cpuStateBinding
_tickBinding
_systemLoadBinding
_vmBinding
_syscallNameMapBinding
_syscallBinding
_inputBindings
_tidPidMappingBinding
_threadSnapshotBinding
_threads
_cpus
_storedThreadAndProcesses
_syscallNameMap
_tidToPid
_systemLoad
_fixedBacktraces
_coreCount
_threadStateWriteCursor
_cpuStateWriteCursor
_syscallWriteCursor
_vmWriteCursor
_contextSwitchWriteCursor
_sysloadWriteCursor
_noteBuilder
__tempValue
__tempValue2
__tempStringImpl
string
objectValue
firstObject
count
lastObject
data
length
initWithData:encoding:
hasPrefix:
appendData:
setObject:forKeyedSubscript:
hasSuffix:
logErrorIfDataIsNotValidJSON:
JSONObjectWithData:options:error:
dictionary
_inputBinding
_outputBinding
_incompleteLogs
clear
rangeOfString:
initWithFactory:
_handleNewShaderPC:timestamp:
_handleExecution:
_recordInterval:
unsignedIntValue
_gpuInfoBinding
_shaderSampleBinding
_shaderIntervalBinding
_shaderListBinding
_gpuExecutionPointsBinding
_commandBufferCompletedBinding
_gpuSubmissionToCommandBufferBinding
_frameAssignmentBinding
_knownCompositorBinding
_narrativeSupport
_shaderIntervalCursor
_targetCompability
_gpuInfoMap
_activeKicks
_submissionToFrameInfo
_submissionToCommandBuffer
_cmdBufferIdToFrameAssignment
_knownCompositors
_shaderInfoMap
_activeShaders
_pendingShaders
_trackAssigners
_isInternal
_targetPid
implementationTypeFromID:
setUint32:
setUInt64ArrayWithValues:
setTypedArrayWithValues:
internalUUID
setInternalUUID:
backgroundIdentifier
setBackgroundIdentifier:
sessionName
setSessionName:
isShared
setShared:
isEphemeral
setEphemeral:
additionalInformation
setAdditionalInformation:
_shared
_ephemeral
_internalUUID
_backgroundIdentifier
_sessionName
_additionalInformation
T@"XRAnalysisCoreValue",&,N,V_internalUUID
T@"NSString",&,N,V_backgroundIdentifier
T@"NSString",&,N,V_sessionName
shared
Tc,N,GisShared,V_shared
ephemeral
Tc,N,GisEphemeral,V_ephemeral
T@"NSData",&,N,V_additionalInformation
valueFactory
setData:
arrayWithObjects:count:
setValue:forColumn:
setURLSession:forColumn:
spec
attributes
unsignedLongLongValue
_triggerInputBinding
_countersProfileBinding
_countersWriteCursor
_backtraceFixer
stringArrayValue
_PMCStringValue
_normalizedWeight
getValue:signatures:engineeringType:
formatNarrative:
threadNote:data:
delegate
setDelegate:
_delegate
T@"<XRSystraceNoteBuilderDelegate>",W,N,V_delegate
_initStateSignatureMapping
cpuStateFromSignature:
threadStateFromSignature:
formatNarrativeWithStringSignatures:
cpuStateNarrative:threadState:
vmFaultThreadStateNarrative:
syscallThreadStateNarrative:
threadStateNarrative:percentageOf:syscallName:
_threadStateSigMap
_cpuStateSigMap
T@"<XRSystraceNarrativeBuilderDelegate>",W,N,V_delegate
_getNormalizedWeight:
_getNormalizedWeightForCSwitch:
boolValue
_timeProfileBinding
_timeSampleBinding
_timeSampleWriteCursor
_sampleRateMS
_previousTimestamp
_previousState
_recordWaitingThreads
_initSoftwareCounters
_handleNewCounterValue:
_resolveSoftwareCounters
_recordInterval:unit:description:
_counterValueBinding
_counterInfoBinding
_counterIntervalBinding
_counterIntervalCursor
_counterInfoMap
_sampleProcessors
_totalOccupancy
_topPerformanceLimiter
_lastSampleIndex
stringWithFormat:
caseInsensitiveCompare:
lowercaseString
unsignedIntegerValue
_averageAndRecordStateChanges:isFinal:
_performanceStateInfoBinding
_performanceDeviceStateBinding
_kdebugBinding
_performanceDeviceStateCursor
_performanceStateInfoMap
_stateRecords
_desiredState
init
dealloc
_modeler
initWithCXXSystraceModeler:
_mod
defaultPlugInManager
extensionPointWithIdentifier:
extensionsMatchingPredicate:
countByEnumeratingWithState:objects:count:
extensionParametersForKey:
addObjectsFromArray:
modeler
valueForKey:
modelerClassName
addObject:
populateOutputTables:usingObserverations:parameters:checkToYieldBlock:
initWithSwiftModeler:
setModeler:
enumerateInstancesWithBlock:
instanceModelersInSolution:
stringWithUTF8String:
columnIDForMnemonic:
implValue
uint64
objectAtIndexedSubscript:
uint32
_handleThreadState:
_handleCPUState:
_handleSyscall:
_handleVMFault:
getValue:fieldIndex:
_recordThreadNarrative:start:duration:threadSig:processSig:backtrace:
_checkSyscallEnd:threadSig:
_cacheThreadState:
_recordCPUNarrative:start:duration:cpu:backtrace:
_cpuNarrativeBinding
_threadNarrativeBinding
_threadToSyscall
_threadMap
_cpuNarrativeWriteCursor
_threadNarrativeWriteCursor
_narrative
getArgumentAsValue:atIndex:
setOutput:
writeCursorForTableID:
advanceToNextRow
tableID
valueForColumnId:
uuidFromEngineeringValue
appendNewRow
setUInt32:forColumn:
setString:forColumn:
setUInt64:forColumn:
initWithFirst:second:
setKeyValueArray:forColumn:
copyFromReadCursor:column:toColumn:
trailingEventHorizon
getTID:process:
setUInt64Array:forColumn:
setUUID:forColumn:
getPID:sessionUUID:
columnCount
enumerateKeyValuePairs:
enumerateColumns:
coreprofile-pmi
kdebug-counters-with-kdebug-sample
kdebug-counters-with-pmi-sample
cpu-profile
v32@?0@"XRAnalysisCoreTable"8Q16^c24
target-pid
time
core-index
arg1
arg2
arg3
arg4
function
class
subclass
code
cp-kernel-callstack
counters-array
thread-state
pmi-count
process
core
weight
stack
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
kdebug
tick
syscall-name-map
tid-pid-mapping
thread-snapshot
cpu-state
context-switch
system-load
virtual-memory
syscall
vm-page-size
TODO
Running
Idle
Syscall
Unknown
Over
Partial
ThreadState
ContextSwitch
FIXBT
name
state
priority
start
duration
cputime
waittime
note
summary
event
load
ui-load
ui-load-commitment
operation
address
size
backtrace
call
return
errno
signature
Zero Fill
Page In
Copy On Write
Page Cache Hit
Non-Zero Fill
Guard Page
File Backed Page In
Anonymous Memory Page In
Decompress Memory
Decompress Memory from Swap
Copy On Read
Page Out
Handling Interrupt
XRSystraceCPUStateToString
XRSystraceModelerShared.h
false
Runnable
Interrupted
Wait
Preempted
Suspended
Terminating
Terminated
XRSystraceThreadStateToString
-[XRHTTPArchiveLoggingModeler populateOutputTables:usingObserverations:parameters:yieldFlag:]
XRHTTPArchiveLoggingModeler.mm
logMessageParts.count <= 2
logMessageParts.count == 2
logMessageParts.count == 1
logMessagePartOne.isValid
os-log
message
initColumnIDs
XRHTTPArchiveLoggingModeler.h
extractedColumns == YES
timestamp
har-entry-json
device-gpu-info
gpu-shader-profiler-sample
metal-command-buffer-frame-assignment-internal
metal-command-buffer-frame-assignment
-internal
metal-gpu-submission-to-command-buffer-id-internal
metal-gpu-submission-to-command-buffer-id
metal-gpu-execution-points-internal
metal-gpu-execution-points
metal-command-buffer-completed-internal
metal-command-buffer-completed
metal-shader-profiler-shader-list-internal
metal-shader-profiler-shader-list
metal-known-compositor-process-internal
metal-known-compositor-process
metal-shader-profiler-intervals-internal
metal-shader-profiler-intervals
Shader Timeline
Vertex
Compute
Fragment
value
XRAnalysisCoreReadCursorGetValue(streamCursor, tableID, &value)
shared
ephemeral
pmi-threshold
kdebug-counters-with-time-sample
sample-rate-micro-seconds
counters-profile
sample-type
forced off %XRCPUCoreTypeID% by %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
balanced off %XRCPUCoreTypeID% to optimize the system's CPU performance
yielding %XRCPUCoreTypeID% to %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
taken off CPU temporarily to cool the processor and surrounding hardware
made runnable by a timer expiration (handled by %XRCPUCoreTypeID%'s timer interrupt handler)
made runnable by an interrupt handler on %XRCPUCoreTypeID%
made runnable by %XRThreadTypeID% running on %XRCPUCoreTypeID%
parked waiting for new work items from dispatch
waiting for event/lock with id %XRVirtualMemoryAddressTypeID%
%thread-state% at priority %sched-priority% on %core%
%thread-state% on %core%
%thread-state% at priority %sched-priority%
%thread-state%
lost %XRCPUCoreTypeID% to %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
gave %XRCPUCoreTypeID% voluntarily to %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
%XRCPUCoreTypeID% became idle (inferred)
%XRCPUCoreTypeID% became idle
will wait for event/lock with id %XRVirtualMemoryAddressTypeID% when it blocks
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%) = %XRSizeInBytesTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, off:%XRSizeInBytesTypeID%) = %XRSizeInBytesTypeID%
| X_OK
| W_OK
| R_OK
F_OK
%XRSystemCallNameTypeID%(path, amode:%XRSymbolicArgumentTypeID%) = %XRSymbolicArgumentTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%) = %XRSymbolicArgumentTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, flags:%XRRegisterContentsTypeID%) = %XRSizeInBytesTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, flags:%XRRegisterContentsTypeID%,...) = %XRSizeInBytesTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, msg:%XRVirtualMemoryAddressTypeID%, flags:%XRRegisterContentsTypeID%) = %XRSizeInBytesTypeID%
MADV_NORMAL
MADV_RANDOM
MADV_SEQUENTIAL
MADV_WILLNEED
MADV_DONTNEED
MADV_FREE
MADV_FREE_RESUSABLE
MADV_FREE_REUSE
%XRSystemCallNameTypeID%(addr:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, advice:%XRSymbolicArgumentTypeID%)
told the kernel that %XRSizeInBytesTypeID% of memory starting at %XRVirtualMemoryAddressTypeID% became available for reuse
| PROT_READ
| PROT_WRITE
| PROT_EXEC
PROT_NONE
%XRSystemCallNameTypeID%(addr:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, prot:%XRSymbolicArgumentTypeID%)
| MAP_SHARED
| MAP_PRIVATE
| MAP_FIXED
| MAP_RENAME
| MAP_NOEXTEND
| MAP_HASSEMAPHORE
| MAP_NOCACHE
| MAP_JIT
| MAP_ANON
| MAP_FILE
| MAP_RESILIENT_CODESIGN
| MAP_RESILIENT_MEDIA
%XRSystemCallNameTypeID%(addr:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, prot:%XRSymbolicArgumentTypeID%, flags:%XRSymbolicArgumentTypeID%) = %XRVirtualMemoryAddressTypeID%
%XRSystemCallNameTypeID%
EAGAIN was returned which is normal for a non-blocking file descriptor
end-of-file was encountered
the permission bits of the file mode do not permit the requested access, or search permission is denied on a component of the path prefix.
the call failed with an errno value of %XRSymbolicErrnoValueTypeID%
the call failed with an error: %XRSymbolicErrnoValueTypeID%
Ran %XRThreadTypeID% at priority %XRSchedulingPriorityTypeID% for %XRDurationOnCPUTypeID%.
Servicing an interrupt handler, and preempting %XRThreadTypeID% for %XRDurationOnCPUTypeID%.
Servicing an interrupt handler for %XRDurationOnCPUTypeID%.
Idled waiting for work or interrupts to handle for %XRDurationOnCPUTypeID%.
Virtual memory %vm-op% took %duration%.
Called "%syscall%" for %duration-waiting%.
Called "%syscall%" for %duration-waiting%, %narrative%.
Ran for %duration-on-core% on %core% at priority %sched-priority%.
The thread was %narrative%. It waited for an available CPU for %duration-waiting% (%percent% of %syscall%'s duration) before running again at priority %sched-priority%.
The thread was %narrative%. It waited for an available CPU for %duration-waiting% before running again at priority %sched-priority%.
The thread was made runnable. It waited for an available CPU for %duration-waiting% (%percent% of %syscall%'s duration) before running again at priority %sched-priority%.
The thread was made runnable. It waited for an available CPU for %duration-waiting% before running again at priority %sched-priority%.
Interrupted for %duration-on-core% (%percent% of %syscall%'s duration) while %core% serviced an interrupt handler.
Interrupted for %duration-on-core% while %core% serviced an interrupt handler.
Preempted for %duration-on-core% (%percent% of %syscall%'s duration) because thread was %narrative%.
Preempted for %duration-on-core% because thread was %narrative.%
Preempted at priority %sched-priority% for %duration-on-core% (%percent% of %syscall%'s duration) because thread was %narrative%.
Preempted at priority %sched-priority% for %duration-on-core% because thread was %narrative%.
Preempted for %duration-on-core% (%percent% of %syscall%'s duration).
Preempted for %duration-on-core%.
Preempted at priority %sched-priority% for %duration-on-core% (%percent% of %syscall%'s duration).
Preempted at priority %sched-priority% for %duration-on-core%.
Blocked for %duration-waiting% (%percent% of %syscall%'s duration) starting at priority %sched-priority%. Thread is %narrative%.
Blocked for %duration-waiting% (%percent% of %syscall%'s duration) starting at priority %sched-priority%.
Blocked for %duration-waiting% starting at priority %sched-priority%.  Thread is %narrative%.
Blocked for %duration-waiting% starting at priority %sched-priority%.
Idle for %duration-waiting%. Thread is %narrative%.
Idle for %duration-waiting%.
getCursor
XRCXXModeling.h
_sharedState
-[XRTimeSamplerModeler _getNormalizedWeight:]
XRTimeSamplerModeler.mm
time-sample
context-switch-sample
time-profile
record-waiting-threads
gpu-counter-info
gpu-counter-value
metal-gpu-counter-intervals
-1.Total Occupancy
-2.Top Performance Limiter
Sum of Occupancy
%uint64%%string% (%string%)
counter-id
max-value
accelerator-id
description
group-index
type
ring-buffer-count
require-weighted-accumulation
sample-index
ring-buffer-index
device-name
vendor-name
mobile
label
percent-value
is-percentage
num-pcs
frame-number
pso-label
event-name
shader-type
percent-of-kick
total-kick-percent
event-priority
channel-name
event-depth
connection-UUID
pso-name
pc-start
pc-end
cmdbuffer-id
frame-color
is-compositor
gpu-submission-id
channel-id
compositor-name
consistent-state-available
consistent-state-enabled
consistent-state-sustained
consistent-state-mapping
consistent-state
desired-state
%d.%@
Percentage
limiter
occupancy
bandwidth
 GB/s
vertex
fragment
compute
tile
gpu-performance-state-info
requested-consistent-state
gpu-performance-device-state-intervals-internal
gpu-performance-device-state-intervals
v16@?0r^{XRGPUPerformanceDeviceState=QQQII}8
Radeon Pro Vega 56
Radeon Pro Vega 64
Radeon Pro Vega 64X
Radeon Pro Vega 48
Radeon Pro Vega 16
Radeon Pro Vega 20
AMD Radeon Pro Vega II
AMD Radeon Pro Vega II Duo
AMD Radeon Pro 5300M
AMD Radeon Pro 5500M
AMD Radeon Pro 5600M
AMD Radeon Pro 5300
AMD Radeon Pro 5500 XT
AMD Radeon Pro 5700
AMD Radeon Pro 5700 XT
AMD Radeon Pro W5700X
AMD Radeon Pro W5500X
Radeon Pro Navi 21 GL-XTA
com.apple.dt.instruments.modeler-factory
modeler
modelerClass
implementationClass
-[XRBuiltinModelerFactory instanceModelersInSolution:]_block_invoke
XRBuiltinModelerFactory.mm
[modelerInstance conformsToProtocol:@protocol(XRAnalysisCoreModeler)]
v20@?0@"XRAnalysisCoreModelerInstance"8C16
getWriteValue
currentWritableSchemaPositionIsValid(position)
setValue
res && "Oops, couldn't set the value."
readValue
XRCXXSystraceModelers.h
a <= kdebug.Time
(a + b) >= kdebug.Time
It2 != _lastState.end()
os-signpost
swift-task-state
swift-task-cancellation-event
swift-task-relationship
swift-task-lifetime
swift-alive-task-count
swift-running-task-count
swift-total-task-count
swift-task-creation-event
swift-actor-execution
swift-actor-queue-size
swift-actor-count
swift-actor-lifetime
task_lifetime
Begin
XRBacktraceTranslationOracle
job_run
task_wait
task_status_changed
Event
task_continuation_init
task_continuation_await
task_continuation_resume
task_continuation
actor_lifetime
actor_enqueue
actor_dequeue
actor_job_queue
operator()
Creating
Waiting
Ending
Enqueued
Continuation
Ran for %duration% on actor %swift-actor% on actor-isolated context at %text-symbol% on thread %thread% with priority %swift-task-priority%
Ran for %duration% on %thread% starting at %text-symbol% with priority %swift-task-priority%
Ran for %duration% on %thread% with priority %swift-task-priority%
Default
Utility
Background
User Initiated
Suspended for %duration%
Waited on %swift-task% task for %duration%
Reference to task was held for an additional %duration%
Was enqueued on %swift-actor% actor for %duration%
Creating for %duration%
Ran continuation for %duration% that ended with an error
Ran continuation for %duration% that ended without any errors
stringToThreadState
XRSystraceModelerShared.mm
false && "We should have all the thread states listed above."
cpu-narrative
thread-narrative
significance
narrative
certainty
XRSymbolicationEmissionOracle
XRCallstackFixupOracle
XRSymbolicationHorizonOracle
XRSymbolicationResetOracle
Cache Lookup
Blocked
QUIC
Sending Request
Waiting for Response
Receiving Response
Transaction
Task
Local Cache
Revalidated Cache
Server Push
Network Load
_transactionUUID
_taskUUID
request
response
serverIPAddress
connection
_precisionPreservingTimings
_fetchType
cache
connect
secureConnection
send
receive
base64
Symbolication
Starting for %@
Ending for %@
Ending for %s
[Error] Interval already ended
Starting for %s
com.apple.dt.Instruments
XRAnalysisCoreFunctionInvocation
@16@0:8
v28@0:8I16@20
c28@0:8^@16I24
v24@0:8@16
c24@0:8^@16
@"<XRAnalysisCoreValueFactory>"16@0:8
v28@0:8I16@"XRAnalysisCoreValue"20
v24@0:8@"XRAnalysisCoreValue"16
XRURLSessionTaskContainmentsModeler
c48@0:8@16@24@32@?40
v16@0:8
inputTableTasks
inputTableTransactions
inputTableTransactionStates
outputTable
cachedTasks
cachedTransactionColors
Did not find corresponding task interval for transaction `%{public}@` with task id: %{public}@
Did not find corresponding transaction color for transaction `%{public}@`
XRAnalysisCoreSwiftModeler
v32@0:8@"<XRIntKeyedDictionaryImmutable>"16@"XRAnalysisCoreModelingParameters"24
c48@0:8@"XRAnalysisCoreTableBindingsWrapper"16@"XRAnalysisCoreReadCursorWrapper"24@"XRAnalysisCoreModelingParameters"32@?<c@?>40
v32@0:8@"XRAnalysisCoreTableBindingsWrapper"16@"XRAnalysisCoreModelingParameters"24
XRTransactionContainmentsModeler
cachedTransactions
layoutManager
alreadyWrittenDrawables
_TtC20BuiltinModelerPluginP33_FDC95F2A35E24E849AD7B036511025EC19TransactionInterval
color
layoutQualifiers
Did not find corresponding transaction interval for transaction state `%{public}@` with transaction id: %{public}@
Transaction State
Connection Setup
_TtC20BuiltinModelerPlugin24HTTPAggregationCollector
aggregationType
count
previousTimestamp
countByProcess
previousTimestampByProcess
previouslySeenEventID
HTTP %s event %llu hasn't begin event. It's ok if event started before recording
Recieved duplications for end HTTP %s event %llu
Recieved duplications for end HTTP %s event %llu in process %llu
HTTP %s event %llu has already been handled
XRTransactionEnrichmentModeler
inputTableHarLogs
inputTableTaskEvents
outputTableTransactions
outputTableTransactionStates
jsonDecoder
sessionByTaskID
transactionsWaitingForAdditionalData
_TtC20BuiltinModelerPluginP33_22B9F748C0431C4636ACE10518D51BDC19TransactionInterval
additionalInfo
endReasonValue
Received transaction interval with invalid transaction UUID. Analysis Core value for UUID  %{public}@
Did not find corresponding transaction interval for HAR JSON for transaction: %{public}@
transaction: %{public}@ had no associated task UUID
Unknown Connection
Transaction State starts before parent transaction. Transaction ID: %{public}@, state: %{public}@, relativeStartTime: %lld ns
Cache Connection
Developer Attributed
XRURLSessionTaskEventsModeler
inputTable
outputTableTaskStarts
outputTableTaskEnds
previouslySeenTaskResumeUUIDs
cachedSessionNames
signpostIdToTaskUUID
_TtC20BuiltinModelerPluginP33_86AF25F1718F504E7B367945C515792114TaskStartEvent
traceRelativeTimestamp
taskUUID
sessionUUID
session
Did not find a task UUID for signpost id, likely because we didn't receive the corresponding task start event.
Failed to decode additional info json for task resume event.
Failed to decode additional info json for task complete event: %@
sessionDescription
isEphemeralSession
backgroundIdentifier
localizedDescription
XRDyldLibraryLoadIntervalModeler
inKdebugTable
inKdebugStringTable
outDyldLibraryTable
lastUUIDEventByThread
libraryUUIDsByPath
libraryPathsByHandle
openIntervals
dyldEvent
hasSentDyldEvent
lastSharedCacheEvent
stringBank
threadsByProcess
trackContainmentByThread
dlopen (Shared Cache)
layout-qualifier
public-task-identifier
task-description
session-is-ephemeral
resume-backtrace
request-attribution
error-localized-description
error-overall-description
is-all-processes
aggregation-type
end-reason-string
http-status-code
http-status-text
response-headers
response-mime-type
secure-connection
request-duration
waiting-for-server
response-duration
additional-info-json
layout-qualifier-for-connection-grouping
layout-qualifier-for-domain-grouping
containment-level
standalone-label
label-in-containment-hierarchy
Authentication Challenge
tableDefinition
$__lazy_storage_$_values
tableDefinitions
_TtCOO20BuiltinModelerPlugin12AnalysisCore15TypedReadCursor19BaseTableReadCursor
readCursor
shouldYield
wasInterrupted
a b c 
a b 
_TtC20BuiltinModelerPlugin18DyldTimingInterval
startTime
endTime
tracePairID
thread
trackLevel
_TtC20BuiltinModelerPlugin17DyldMapImageEvent
pathID
loadAddress
_TtC20BuiltinModelerPlugin15DyldDlopenEvent
handle
_TtC20BuiltinModelerPlugin16DyldDlcloseEvent
track-containment-level
cp-user-callstack
XRHTTPAggregationModeler
inputTaskStartEvents
inputTaskEndEvents
inputTransactionEvents
outputAggregationSummary
taskCollector
transactionCollector
v24@?0@"<XREngineeringValue>"8@"<XREngineeringValue>"16
Missing status code for transaction id: %{public}@
Invalid state for state interval: id: %{public}@, state: %{public}@
XRURLSessionTaskIntervalModeler
v32@0:8@16@24
inputTableTaskStarts
inputTableTaskEnds
intervalOutputTable
tasksLayoutManager
incompleteTaskIntervalStarts
completedTasks
_TtC20BuiltinModelerPluginP33_553A06DDDCC89470046C0190A5BC238E14TaskStartEvent
layoutQualifier
_TtC20BuiltinModelerPluginP33_553A06DDDCC89470046C0190A5BC238E12TaskEndEvent
No matching task start event for har log with task UUID %@
Task End event did not have a task UUID
No matching task resume event for complete event with task UUID %@
v28@?0C8@"XRAnalysisCoreTableColumn"12*20
Fatal error
Down-casted Array element failed to match the target type
Expected 
KeyPath<URLSessionTaskStartColumns, String>
NSArray element failed to match the Swift Array Element type
Expected 
KeyPath<URLSessionTaskEndColumns, String>
End of interval with identifier 
 was already set to 
BuiltinModelerPlugin/NonOverlappingIntervalsLayoutManager.swift
Failed to parse JSON %{public}@ due to error %{public}@
v32@?0@8Q16*24
com-apple-cfnetwork-task-intervals
com-apple-cfnetwork-harlogging-schema
com-apple-cfnetwork-task-ends
com-apple-cfnetwork-task-starts
com-apple-cfnetwork-aggregation-drawables
dyld-library-load
KeyPath<OsSignpostColumns, String>
KeyPath<TransactionIntervalBasicInfoColumns, String>
com-apple-cfnetwork-transaction-states
com-apple-cfnetwork-transaction-intervals-full-info
com-apple-cfnetwork-transaction-intervals
KeyPath<TransactionIntervalFullInfoColumns, String>
com-apple-cfnetwork-transaction-drawables
KeyPath<URLSessionTaskIntervalColumns, String>
com-apple-cfnetwork-task-drawables
XRCPUProfilerModeler
XRAnalysisCoreModeler
NSObject
XRSystraceModeler
XRHTTPArchiveLoggingModeler
XRGPUShaderProfilerModeler
XRURLSession
XRGenericCountersModeler
XRSystraceNoteBuilder
XRSystraceNarrativeBuilder
XRTimeSamplerModeler
XRGPUCountersModeler
XRGPUPerformanceStateModeler
XRCXXCSwitchModeler
NoteBuilderDelegate
XRSystraceNoteBuilderDelegate
XRCXXSystraceSyscallModeler
XRCXXVirtualMemoryModeler
XRCXXSystemTraceModeler
XRCXXSwiftConcurrencyModeler
XRAnalysisCoreSwiftModeler
XRBuiltinModelerFactory
XRAnalysisCoreModelerFactory
XRNarrativeModeler
c24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
c48@0:8r^{XRAnalysisCoreTableBindings=}16^{XRAnalysisCoreReadCursor=}24@32^Ac40
v32@0:8r^{XRAnalysisCoreTableBindings=}16@24
v24@0:8Q16
v24@0:8@16
@24@0:8@16
v24@0:8@?16
v16@0:8
v32@0:8@"<XRIntKeyedDictionaryImmutable>"16@"XRAnalysisCoreModelingParameters"24
c48@0:8r^{XRAnalysisCoreTableBindings=}16^{XRAnalysisCoreReadCursor=}24@"XRAnalysisCoreModelingParameters"32^Ac40
v32@0:8r^{XRAnalysisCoreTableBindings=}16@"XRAnalysisCoreModelingParameters"24
v24@0:8@"XRAnalysisCoreModelingParameters"16
@"NSMutableAttributedString"24@0:8@"NSMutableAttributedString"16
v32@0:8@"NSString"16@"NSString"24
@"NSString"24@0:8@"NSString"16
v24@0:8@?<v@?@"NSString">16
Q48@0:8Q16Q24@32Q40
@32@0:8Q16Q24
{XRSystracekDebugWithCountersBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"arg1Col"C"arg2Col"C"arg3Col"C"arg4Col"C"functionCol"C"classCol"C"subclassCol"C"codeCol"C"userBTCol"C"kernelBTCol"C"pmcArray"C}
{XRSystracePMIWithCountersBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"pmiCount"C"userBTCol"C"kernelBTCol"C"pmcArray"C}
{CPUSampleBinding="tableID"I"timeCol"C"threadCol"C"processCol"C"cpuCol"C"threadStateCol"C"weightCol"C"stackCol"C}
^{XRAnalysisCoreWriteCursor=}
{unique_ptr<XRPMCNormalizer, std::default_delete<XRPMCNormalizer>>="__ptr_"{__compressed_pair<XRPMCNormalizer *, std::default_delete<XRPMCNormalizer>>="__value_"^{XRPMCNormalizer}}}
@"<XRAnalysisCoreValueFactory>"
@"<XRAnalysisCoreReadOnly>"
v40@0:8Q16^{XRSystraceKdebugData=QIQQQQIIIIQiQQQQ@Q}24@32
{tuple<unsigned long long, unsigned long long>={__tuple_impl<std::__tuple_indices<0, 1>, unsigned long long, unsigned long long>=QQ}}24@0:8Q16
v24@0:8^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16
v32@0:8^{XRSystraceCPU=QQQQic}16^{XRSystraceCPU=QQQQic}24
v32@0:8^{XRSystraceSystemLoad=QQqqQQQ}16Q24
v32@0:8^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}24
v32@0:8^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16Q24
Q32@0:8Q16Q24
^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}24@0:8Q16
^{XRSystraceCPU=QQQQic}20@0:8I16
Q24@0:8Q16
{XRSystraceThreadStateBinding="tableID"I"startCol"C"durationCol"C"threadCol"C"cpuCol"C"stateCol"C"processCol"C"cpuTimeCol"C"waitTimeCol"C"priorityCol"C"noteCol"C"summaryCol"C}
{XRSystraceContextSwitchBinding="tableID"I"timeCol"C"cpuCol"C"eventCol"C"threadCol"C"processCol"C"noteCol"C"priorityCol"C}
{XRSystraceCPUStateBinding="tableID"I"startCol"C"durationCol"C"cpuCol"C"stateCol"C"threadCol"C"processCol"C"priorityCol"C}
{XRSystraceTickBinding="tableID"I"timeCol"C}
{XRSystraceSystemLoadBinding="tableID"I"startCol"C"durationCol"C"loadCol"C"uiLoadCol"C"uiLoadCommitmentCol"C}
{XRSystraceVMBinding="tableID"I"startCol"C"durationCol"C"threadCol"C"processCol"C"operationCol"C"cpuTimeCol"C"waitTimeCol"C"addressCol"C"sizeCol"C"backtraceCol"C}
{XRSystraceSyscallNameBinding="tableID"I"timeCol"C"classCol"C"subclassCol"C"codeCol"C"nameCol"C}
{XRSystraceSyscallBinding="tableID"I"startCol"C"durationCol"C"threadCol"C"processCol"C"callCol"C"cpuTimeCol"C"waitTimeCol"C"arg1Col"C"arg2Col"C"arg3Col"C"arg4Col"C"returnCol"C"errnoCol"C"backtraceCol"C"noteCol"C"signatureCol"C}
{unordered_map<unsigned long long, XRSystracekDebugBinding, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystracekDebugBinding>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{XRSystraceTIDPIDMappingBinding="tableID"I"timeCol"C"tidCol"C"pidCol"C}
{XRSystraceThreadSnapshotBinding="tableID"I"timeCol"C"threadCol"C"stateCol"C"priorityCol"C}
{unordered_map<unsigned long long, XRSystraceThread, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceThread>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceThread>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThread>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThread>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceThread>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThread>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThread>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRSystraceCPU, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceCPU>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceCPU>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, std::tuple<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::tuple<unsigned long long, unsigned long long>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, NSString *, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, NSString *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, NSString *>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, NSString *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, NSString *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, NSString *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, NSString *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, NSString *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, unsigned long long>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, unsigned long long>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{XRSystraceSystemLoad="time"Q"lastRecordTime"Q"load"q"uiLoad"q"sum"Q"uiSum"Q"weight"Q}
@"XRSystraceNoteBuilder"
@"<XRAnalysisCoreFunctionInvocation>"
@"XRAnalysisCoreValue"
@"XRAnalysisCoreImplValue"
{XRHTTPArchiveLoggingInputBinding="tableID"I"timeCol"C"messageCol"C"processCol"C"threadCol"C}
{XRHTTPArchiveLoggingOutputBinding="tableID"I"timeCol"C"processCol"C"harEventString"C}
@"NSMutableDictionary"
v24@0:8r^{XRGPUMetalGPUExecutionPoint=QQQQ}16
v32@0:8Q16Q24
v24@0:8r^{XRGPUActiveShaderInterval={XRGPUActiveKick={XRGPUMetalCommandBufferInfo={XRGPUMetalCommandBufferFrameAssignment=QQIIIQ}{XRGPUMetalGPUSubmissionToCommandBuffer=QQQQI}}QQQi@}{XRGPUShaderInfo=QQQQ@@@@@iQ}IQQ}16
{XRDeviceGPUInfoBinding="tableID"I"timestampCol"C"acceleratorIdCol"C"deviceNameCol"C"vendorNameCol"C"mobileCol"C}
{XRGPUShaderProfilerSampleBinding="tableID"I"timestampCol"C"pcCol"C"numPCCol"C}
{XRGPUShaderIntervalBinding="tableID"I"startCol"C"durationCol"C"nameCol"C"labelCol"C"psoNameCol"C"eventNameCol"C"shaderTypeCol"C"percentOfKickCol"C"totalKickPercentCol"C"colorCol"C"eventPriorityCol"C"processCol"C"gpuCol"C"channelNameCol"C"eventDepthCol"C"connectionUUIDCol"C}
{XRGPUShaderListBinding="tableID"I"timestampCol"C"nameCol"C"labelCol"C"psoNameCol"C"idCol"C"pcStartCol"C"pcEndCol"C"shaderTypeCol"C"processCol"C"gpuCol"C}
{XRGPUMetalGPUExecutionPointsBinding="tableID"I"timestampCol"C"functionCol"C"gpuSubmissionIdCol"C"channelIdCol"C}
{XRGPUMetalCommandBufferCompletedBinding="tableID"I"timestampCol"C"cmdBufferIdCol"C}
{XRGPUMetalGPUSubmissionToCommandBufferBinding="tableID"I"timestampCol"C"cmdBufferIdCol"C"gpuSubmissionIdCol"C"acceleratorIdCol"C"pidCol"C}
{XRGPUMetalCommandBufferFrameAssignmentBinding="tableID"I"timestampCol"C"cmdBufferIdCol"C"frameNumberCol"C"frameColorCol"C"isCompositorCol"C"processCol"C}
{XRGPUMetalKnownCompositorProcessBinding="tableID"I"timestampCol"C"nameCol"C"pidCol"C"processCol"C}
@"XRAnalysisCoreNarrativeSupport"
{unordered_map<unsigned long long, XRDeviceGPUInfo, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRDeviceGPUInfo>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUActiveKick, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUActiveKick>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUActiveKick>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUMetalCommandBufferInfo, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUMetalCommandBufferInfo>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUMetalCommandBufferFrameAssignment, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUMetalCommandBufferFrameAssignment>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned int, XRGPUMetalKnownCompositorProcess, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, XRGPUMetalKnownCompositorProcess>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUShaderInfoContainer, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUShaderInfoContainer>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUActiveShaderInterval, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUActiveShaderInterval>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, std::vector<XRGPUActiveShaderInterval>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::vector<XRGPUActiveShaderInterval>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
[4{XRGPUModelerTrackAssigner="currentId"I"tracks"{map<unsigned int, XRGPUModelerTrackAssigner::Track, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, XRGPUModelerTrackAssigner::Track>>>="__tree_"{__tree<std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>, std::less<unsigned int>, true>>="__value_"Q}}}}]
@"NSNumber"
v20@0:8c16
@"NSString"
@"NSData"
c28@0:8@16C24
{triggerCountersInputBinding="type"i"binding"(?="pmiBinding"{XRSystracePMIWithCountersBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"pmiCount"C"userBTCol"C"kernelBTCol"C"pmcArray"C}"timeBinding"{XRSystraceTimeWithCountersBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"userBTCol"C"kernelBTCol"C"sampleTypeCol"C"pmcArray"C})}
{CountersSampleBinding="tableID"I"timeCol"C"threadCol"C"processCol"C"cpuCol"C"threadStateCol"C"stackCol"C"weightCol"C"countersCol"C}
{unique_ptr<XRBacktraceFixer, std::default_delete<XRBacktraceFixer>>="__ptr_"{__compressed_pair<XRBacktraceFixer *, std::default_delete<XRBacktraceFixer>>="__value_"^{XRBacktraceFixer}}}
@32@0:8@16@24
Q32@0:8r^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16r^v24
Q32@0:8r^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16r^{XRSystraceKdebugData=QIQQQQIIIIQiQQQQ@Q}24
Q24@0:8r^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16
{tuple<unsigned long long, unsigned long long>={__tuple_impl<std::__tuple_indices<0, 1>, unsigned long long, unsigned long long>=QQ}}32@0:8r^{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}16r*24
@"<XRSystraceNoteBuilderDelegate>"
i24@0:8Q16
Q32@0:8r^{XRSystraceRecordedCPUState=QQQIQQQ}16^{XRSystraceRecordedThreadState=QQQIQQQQ}24
Q24@0:8r^{XRSystraceRecordedVMFault=QQQQQQ}16
Q24@0:8r^{XRSystraceRecordedSyscall=QQQQQQQQQ}16
Q40@0:8r^{XRSystraceRecordedThreadState=QQQIQQQQ}16d24Q32
{unordered_map<unsigned long long, XRSystraceThreadState, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceThreadState>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceThreadState>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRSystraceCPUState, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceCPUState>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceCPUState>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
@"<XRSystraceNarrativeBuilderDelegate>"
Q24@0:8r^{XRSystraceContextSwitchSampleData=QIQQQ@QiIQ}16
Q24@0:8r^{XRSystraceTimeData=QIQQQ@QiIQQI}16
{TimeProfileBinding="tableID"I"timeCol"C"threadCol"C"processCol"C"cpuCol"C"threadStateCol"C"weightCol"C"stackCol"C}
{XRSystraceTimeBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"userBTCol"C"kernelBTCol"C"sampleTypeCol"C}
{XRSystraceContextSwitchSampleBinding="tableID"I"timeCol"C"threadCol"C"processCol"C"cpuCol"C"threadStateCol"C"btID"C}
{unordered_map<unsigned long long, XRThreadStateType, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRThreadStateType>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRThreadStateType>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRThreadStateType>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRThreadStateType>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRThreadStateType>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRThreadStateType>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRThreadStateType>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
v24@0:8r^{XRGPUCounterValue=QIQQII}16
v40@0:8r^{XRGPUCounterInterval=QQQdIIIII@@}16r*24r*32
{XRGPUCounterValueBinding="tableID"I"timestampCol"C"counterIdCol"C"valueCol"C"acceleratorIdCol"C"sampleIndexCol"C"ringBufferIndexCol"C}
{XRGPUCounterInfoBinding="tableID"I"timestampCol"C"counterIdCol"C"nameCol"C"maxValueCol"C"acceleratorIdCol"C"descriptionCol"C"groupIndexCol"C"typeCol"C"ringBufferCountCol"C"requireWeightedAccumulationCol"C}
{XRGPUCounterIntervalBinding="tableID"I"startCol"C"durationCol"C"counterIdCol"C"nameCol"C"labelCol"C"valueCol"C"percentValueCol"C"colorCol"C"gpuCol"C"groupIndexCol"C"isPercentageCol"C"ringBufferIndexCol"C}
{unordered_map<unsigned int, XRGPUCounterInfo, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, XRGPUCounterInfo>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, XRGPUCounterInfo>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
{vector<std::unique_ptr<XRGPUCounterSampleProcessor>, std::allocator<std::unique_ptr<XRGPUCounterSampleProcessor>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::unique_ptr<XRGPUCounterSampleProcessor> *, std::allocator<std::unique_ptr<XRGPUCounterSampleProcessor>>>="__value_"^v}}
[1{XRGPUCounterInterval="start"Q"duration"Q"value"Q"percentValue"d"counterId"I"color"I"groupIndex"I"isPercentage"I"ringBufferIndex"I"name"@"NSString""gpu"@"NSString"}]
[1{XRGPUCounterTopPerformanceLimiter="interval"{XRGPUCounterInterval="start"Q"duration"Q"value"Q"percentValue"d"counterId"I"color"I"groupIndex"I"isPercentage"I"ringBufferIndex"I"name"@"NSString""gpu"@"NSString"}"counterName"@"NSString"}]
v28@0:8Q16c24
v24@0:8r^{XRGPUPerformanceDeviceState=QQQII}16
{XRGPUPerformanceStateInfoBinding="tableID"I"timestampCol"C"acceleratorIdCol"C"availableCol"C"enabledCol"C"sustainedCol"C"mappingCol"C"stateCol"C}
{XRGPUPerformanceDeviceStateBinding="tableID"I"startCol"C"durationCol"C"acceleratorIdCol"C"stateCol"C"desiredStateCol"C}
{XRSystracekDebugBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"arg1Col"C"arg2Col"C"arg3Col"C"arg4Col"C"functionCol"C"classCol"C"subclassCol"C"codeCol"C"userBTCol"C"kernelBTCol"C}
{unordered_map<unsigned long long, XRGPUPerformanceStateInfo, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUPerformanceStateInfo>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
^{XRCXXModelingInterface=^^?}
@24@0:8^v16
c48@0:8@16@24@32@?40
c48@0:8@"XRAnalysisCoreTableBindingsWrapper"16@"XRAnalysisCoreReadCursorWrapper"24@"XRAnalysisCoreModelingParameters"32@?<c@?>40
v32@0:8@"XRAnalysisCoreTableBindingsWrapper"16@"XRAnalysisCoreModelingParameters"24
v24@0:8@"XRAnalysisCoreModelerBindingSolution"16
v24@0:8^{XRSystraceRecordedThreadState=QQQIQQQQ}16
v24@0:8^{XRSystraceRecordedSyscall=QQQQQQQQQ}16
v24@0:8^{XRSystraceRecordedVMFault=QQQQQQ}16
v24@0:8^{XRSystraceRecordedCPUState=QQQIQQQ}16
v64@0:8Q16Q24Q32Q40Q48Q56
v52@0:8Q16Q24Q32I40Q44
{XRSystraceCPUNarrativeBinding="tableID"I"startCol"C"durationCol"C"cpuCol"C"significanceCol"C"narrativeCol"C"backtraceCol"C}
{XRSystraceThreadNarrativeBinding="tableID"I"startCol"C"durationCol"C"processCol"C"threadCol"C"significanceCol"C"narrativeCol"C"certaintyCol"C"backtraceCol"C}
{unordered_map<unsigned long long, XRSystraceNarrativesSyscall, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceNarrativesSyscall>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRSystraceRecordedThreadState, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceRecordedThreadState>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
@"XRSystraceNarrativeBuilder"
System Trace modeler failed to process data because a factory could not be obtained.
System trace modeler found a CPU running thread %llu but no corresponding thread state
System Trace modeler failed to find stored thread signature for thread %llu when recording CPU running it.
The table ids don't match
os_log messages are expected to be a typed array.
Unknown log format
Expected os_log argument to be binary data but it is not.
First chunk of HAR JSON string does not start with `{` but should. JSON string: %@
Final chunk of HAR JSON string does not end in `}` but should. JSON string: %@
HAR JSON Data is not a valid string
Failed to decode HAR Entry JSON string. Error: %@
GPU performance state modeler failed to process data because a factory could not be obtained.
No modeler implementation found for identifier %@
Multiple modeler implementation found for identifier '%@'. One of them will be used.
Class to load modeler with identifier '%@' was not found
yp_So32XRAnalysisCoreFunctionInvocation_ptSg
ypSg
$sSY
So8NSObjectC
IeyBd_
8taskUUID_
G0A4Infot
SSG4from_ABy
SSG2totG
ySSSgG
SaySSG
SSG4from_ABy
SSG2totG
SSG4from_ABy
SSG2totG
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
ShySSGG
SSG4from_ABy
SSG2totG
15keyByConnection_AA0aB10DomainOnlytSg
SSSg
_GGIgo_
SSG4from_ABy
SSG2totG
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
$ss12CaseIterableP
So19XRAnalysisCoreValueCG
_GSg
So19XRAnalysisCoreValueCSg
SnySiG
ySnySiGG
13transactionID_
8intervalt
13transactionID_
8intervaltSg
SSG4from_ABy
SSG2totG
SSG4from_ABy
SSG2totG
3key_
5valuetSg
3key_
5valuet
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
SdSg
SSGG
So19XRAnalysisCoreValueCG
So12XRURLSessionCSg
SSG4from_ABy
SSG2totG
SaySo19XRAnalysisCoreValueCG
SSG4from_ABy
SSG2totG
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
SDyxSay
yxq__GGG
q_Sg
SDySS
So19XRAnalysisCoreValueC5value_SS6stringtG
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
$s20BuiltinModelerPlugin22TableDefinitionColumnsP
$s20BuiltinModelerPlugin20TableValuesContainerP
11ColumnsType
So19XRAnalysisCoreValueCGSg
yxG1a_AAyq_G1bt
yxG1a_AAyq_G1bAAyq0_G1ct
So31XRAnalysisCoreReadCursorWrapperC
Sbyc
$s20BuiltinModelerPlugin31AnalysisCoreSomeSingleRowReaderP
So25XRAnalysisCoreTableSchemaC
$sSt
y__xq_q0_G
$sST
y__xq_G
y_xG
y__xG
So19XRAnalysisCoreValueC
__GG
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
ySSG
Sbz_Xx
5start_
Sg3end
Sg8harEntrytG
$s20BuiltinModelerPlugin22TaskEndValuesContainer33_553A06DDDCC89470046C0190A5BC238ELLP
5start_
Sg3end
Sg8harEntryt
3key_
5start_
Sg3end
Sg8harEntryt5valuetSg
3key_
5start_
Sg3end
Sg8harEntryt5valuet
SSG4from_ABy
SSG2totG
SSG4from_ABy
SSG2totG
5start_
Sg3end
Sg8harEntrytt
5start_
Sg3end
Sg8harEntrytG
_GGG
5start_
Sg3end
Sg8harEntrytSg
SgtSg
_GGIgo_
So19XRAnalysisCoreValueCG
SSG_G
SSGG
SSGG
yyXlG
SSG_G
SSGG
SSGG
Sg_ABt
_pSg
_A13At
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
ySo19XRAnalysisCoreValueCG
So19XRAnalysisCoreValueCG
So19XRAnalysisCoreValueC5value_SS6stringtG
SSGG
_SSt
SSG_G
SSGG
SSGG
SSG_G
SSGG
SSGG
So19XRAnalysisCoreValueCG
ySo12XRStringPairCG
ySS3key_SSSg5valuetG
SS3key_SSSg5valuet
_So19XRAnalysisCoreValueCt
_ShySSGt
ShySSGG
_GGG
SSGG
ySSG
SSGG
RawValue
inputTableTasks
inputTableTransactions
inputTableTransactionStates
outputTable
cachedTasks
cachedTransactionColors
inputTableTransactions
inputTableTransactionStates
outputTable
cachedTransactions
layoutManager
alreadyWrittenDrawables
color
layoutQualifiers
wrappedLayoutManager
rowIndexWithinSameProcessAndDomain
rowIndexWithinSameProcessAndDomainAndConnection
processID
domain
connection
aggregationType
count
previousTimestamp
countByProcess
previousTimestampByProcess
previouslySeenEventID
task
transaction
deviceSessionID
processID
AllCases
RawValue
timestamp
eventType
processInfo
intervalId
inputTableTransactions
inputTableHarLogs
inputTableTaskEvents
outputTableTransactions
outputTableTransactionStates
jsonDecoder
sessionByTaskID
transactionsWaitingForAdditionalData
additionalInfo
endReasonValue
transactionID
taskID
request
response
serverIPAddress
connection
timings
fetchType
mimeType
text
method
httpVersion
headers
postData
headersSize
bodySize
status
statusText
content
redirectURL
cacheLookup
dnsLookup
connectionEstablishment
secureConnectionEstablishment
sendingRequest
receivingResponse
name
value
RawValue
size
encoding
start
base64
inputTable
outputTableTaskStarts
outputTableTaskEnds
previouslySeenTaskResumeUUIDs
cachedSessionNames
signpostIdToTaskUUID
traceRelativeTimestamp
taskUUID
sessionUUID
additionalInfo
session
taskIdentifier
taskDescription
method
attribution
sessionDescription
isSharedSession
isEphemeralSession
backgroundIdentifier
domain
code
localizedDescription
description
error
groupedActiveIntervals
lastInsertedIntervalStart
start
identifier
rowIndex
inKdebugTable
inKdebugStringTable
outDyldLibraryTable
lastUUIDEventByThread
libraryUUIDsByPath
libraryPathsByHandle
openIntervals
dyldEvent
hasSentDyldEvent
lastSharedCacheEvent
stringBank
threadsByProcess
trackContainmentByThread
start
duration
process
domain
serverIP
session
layoutQualifier
uniqueTaskID
developerTaskID
taskDescription
sessionIsEphemeral
backtraceOfResumeCall
httpMethod
path
queryString
requestAttribution
wasSuccessful
errorDomain
errorCode
errorLocalizedDescription
errorOverallDescription
transactionId
connectionID
state
containmentLevel
standaloneLabel
labelInContainmentHierarchy
tooltip
color
taskId
layoutQualifierForConnection
layoutQualifierForDomain
label
drawableType
time
message
harJson
count
isAllProcesses
aggregationType
timestamp
backtrace
eventType
signpostId
signpostName
additionalInfo
endReason
httpStatusCode
requestHeaders
requestBody
httpVersion
endReasonString
httpStatusText
errorString
responseHeaders
responseBody
responseMimeType
redirectURL
fetchType
blockedDuration
cacheLookupDuration
dnsLookupDuration
tcpConnectionSetupDuration
secureConnectionSetupDuration
requestDuration
waitingForServerDuration
responseDuration
invalid
success
redirect
authenticationChallenge
failure
retry
tryNextProxy
RawValue
developer
user
cacheLookup
blocked
dnsLookup
tcpSetup
tlsSetup
quicSetup
request
waitingForResponse
response
begin
tableDefinition
$__lazy_storage_$_values
tableDefinitions
readCursor
shouldYield
wasInterrupted
tableID
schema
columns
ColumnsType
Element
Iterator
thread
uuidArray
loadAddress
fsid
fsidObjNo
fsidGeneration
pathID
type
map32
unmap
unmap32
sharedCache
sharedCache32
RawValue
startTime
endTime
tracePairID
thread
backtrace
trackLevel
pathID
loadAddress
handle
time
cpuIndex
thread
callstack
event_class
event_subclass
code
function
arg1
arg2
arg3
arg4
string
start
duration
process
backtrace
type
path
uuid
loadAddress
trackContainmentLevel
color
method
attribution
inputTaskStartEvents
inputTaskEndEvents
inputTransactionEvents
outputAggregationSummary
taskCollector
transactionCollector
inputTableTaskStarts
inputTableTaskEnds
inputTableHarLogs
intervalOutputTable
tasksLayoutManager
incompleteTaskIntervalStarts
completedTasks
traceRelativeTimestamp
layoutQualifier
taskUUID
serverIPAddress
fetchType
RawValue
@(#)PROGRAM:BuiltinModelerPlugin  PROJECT:Instruments-64556.9
6666666
666666666666666
666666666666
#/<<<C
 n;^
Qkkbal
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
"8Lb
*/Ftime
thread
process
core-index
thread-state
backtrace
time
thread
core-index
thread-state
arg1
arg2
arg3
arg4
function
class
subclass
code
cp-user-callstack
cp-kernel-callstack
start
duration
thread
core
state
process
cputime
waittime
priority
note
summary
start
duration
thread
state
process
priority
time
thread
event
process
priority
note
time
time
thread
state
priority
start
duration
thread
process
call
cputime
waittime
arg1
arg2
arg3
arg4
return
errno
backtrace
note
signature
time
class
subclass
code
name
start
duration
thread
core
state
process
cputime
waittime
priority
note
summary
start
duration
thread
operation
process
cputime
waittime
address
size
backtrace
start
duration
task
state
backtrace
process
thread
resume-backtrace
suspend-backtrace
narrative
timestamp
task
start
duration
parent-task
child-task
start
duration
task
start
duration
count
start
duration
count
start
duration
count
timestamp
task
thread
backtrace
start
duration
actor
task
thread
start
duration
actor
count
start
duration
count
start
duration
actor-class
actor
time
thread
process
event-type
scope
identifier
name
format-string
backtrace
subsystem
category
message
14CSwitchModeler
12XRCXXModelerI14CSwitchModeler20XRCXXRequiredSchemasIJ6KdebugEE20XRCXXOptionalSchemasIJEE18XRCXXOutputSchemasIJ7CSwitchEEE
22XRCXXModelingInterface
6KdebugIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E6KdebugE
7CSwitchIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E7CSwitchE
22SystraceSyscallModeler
12XRCXXModelerI22SystraceSyscallModeler20XRCXXRequiredSchemasIJ6Kdebug14SyscallNameMapEE20XRCXXOptionalSchemasIJ16ThreadStateTableEE18XRCXXOutputSchemasIJ7SyscallEEE
14SyscallNameMapIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E14SyscallNameMapE
16ThreadStateTableIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E16ThreadStateTableE
7SyscallIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E7SyscallE
20VirtualMemoryModeler
12XRCXXModelerI20VirtualMemoryModeler20XRCXXRequiredSchemasIJ6KdebugEE20XRCXXOptionalSchemasIJEE18XRCXXOutputSchemasIJ18VirtualMemoryTableEEE
18VirtualMemoryTableIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E18VirtualMemoryTableE
18SystemTraceModeler
12XRCXXModelerI18SystemTraceModeler20XRCXXRequiredSchemasIJ13TidPidMapping6Kdebug19ThreadSnapshotTableEE20XRCXXOptionalSchemasIJEE18XRCXXOutputSchemasIJ16ThreadStateTable13CPUStateTable18ContextSwitchTableEEE
19ThreadSnapshotTableIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E19ThreadSnapshotTableE
16ThreadStateTableIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E16ThreadStateTableE
13CPUStateTableIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E13CPUStateTableE
18ContextSwitchTableIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E18ContextSwitchTableE
13TidPidMappingIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E13TidPidMappingE
23SwiftConcurrencyModeler
12XRCXXModelerI23SwiftConcurrencyModeler20XRCXXRequiredSchemasIJ10OSSignpostEE20XRCXXOptionalSchemasIJEE18XRCXXOutputSchemasIJ9TaskState21TaskCancellationEvent16TaskRelationship12TaskLifetime14AliveTaskCount16RunningTaskCount14TotalTaskCount17TaskCreationEvent14ActorExecution14ActorQueueSize10ActorCount13ActorLifetimeEEE
10OSSignpostIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E10OSSignpostE
9TaskStateIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E9TaskStateE
21TaskCancellationEventIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E21TaskCancellationEventE
16TaskRelationshipIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E16TaskRelationshipE
12TaskLifetimeIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E12TaskLifetimeE
17TaskCreationEventIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E17TaskCreationEventE
14ActorExecutionIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E14ActorExecutionE
14ActorQueueSizeIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E14ActorQueueSizeE
13ActorLifetimeIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E13ActorLifetimeE
14AliveTaskCountIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E14AliveTaskCountE
16RunningTaskCountIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E16RunningTaskCountE
14TotalTaskCountIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E14TotalTaskCountE
10ActorCountIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E10ActorCountE
NSt3__120__shared_ptr_emplaceI17TaskCreationEventIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14AliveTaskCountIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14TotalTaskCountIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI16TaskRelationshipIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI9TaskStateIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI12TaskLifetimeIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14ActorExecutionIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI16RunningTaskCountIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI21TaskCancellationEventIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI10ActorCountIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI13ActorLifetimeIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14ActorQueueSizeIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__117bad_function_callE
NSt3__110__function6__funcIZN23SwiftConcurrencyModeler9speculateEvEUlR11XRSwiftTaskE_NS_9allocatorIS5_EEFvS4_EEE
NSt3__110__function6__baseIFvR11XRSwiftTaskEEE
ZN23SwiftConcurrencyModeler9speculateEvEUlR11XRSwiftTaskE_
NSt3__110__function6__funcIZN23SwiftConcurrencyModeler9speculateEvEUlyE_NS_9allocatorIS3_EEFvyEEE
NSt3__110__function6__baseIFvyEEE
ZN23SwiftConcurrencyModeler9speculateEvEUlyE_
(((((((
((((((((((((((((((((((((((((
XRAnalysisCoreTableAccess
BuiltinModelerPlugin
URLSessionTaskContainmentsModeler
Info
TransactionContainmentsModeler
TransactionInterval
RowIndices
LayoutManager
$.:.
HTTPAggregationCollector
ProcessInfo
AggregationType
HTTPEvent
TransactionEnrichmentModeler
TransactionInterval
Request
BodyData
HAREntry
CodingKeys
KeyValue
CustomTimingsForInstruments
Response
RelativeInterval
Content
ContentEncoding
URLSessionTaskEventsModeler
TaskStartEvent
AdditionalInfo
TaskCompleteAdditionalInfo
ErrorInformation
CodingKeys
NonOverlappingIntervalsLayoutManager
LayedOutInterval
DyldLibraryLoadIntervalModeler
AggregationDrawablesColumns
URLSessionTaskEndColumns
OsSignpostColumns
URLSessionTaskStartColumns
HarLogColumns
TransactionIntervalBasicInfoColumns
TransactionDrawablesColumns
TaskDrawablesColumns
TransactionStatesColumns
TransactionIntervalFullInfoColumns
URLSessionTaskIntervalColumns
_NSURLSessionTransactionEndReason
TransactionState
URLRequestAttribution
EventType
TableDefinitionColumns
TableValuesContainer
ColumnsType
TableEntry
OneTable
TwoTables
ThreeTables
BaseTableReadCursor
AnalysisCoreSomeSingleRowReader
TypedReadCursor
AnalysisCore
SingleRowReader
TableDefinition
DyldUUIDEvent
DyldUUIDEventType
DyldTimingInterval
DyldMapImageEvent
DyldDlopenEvent
DyldDlcloseEvent
DyldLibraryLoadColumns
KdebugStringColumns
KdebugColumns
AdditionalInformation
CodingKeys
HTTPAggregationModeler
time
message
process
har-entry-json
raw-string-id
raw-string
event-type
identifier
name
backtrace
URLSessionTaskIntervalModeler
TaskStartEvent
TaskEndEvent
TaskEndValuesContainer
HAREntry
CodingKeys
coreprofile-pmi
kdebug-counters-with-kdebug-sample
kdebug-counters-with-pmi-sample
cpu-profile
v32@?0@"XRAnalysisCoreTable"8Q16^B24
target-pid
time
core-index
arg1
arg2
arg3
arg4
function
class
subclass
code
cp-kernel-callstack
counters-array
thread-state
pmi-count
process
core
weight
stack
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
kdebug
tick
syscall-name-map
tid-pid-mapping
thread-snapshot
cpu-state
context-switch
system-load
virtual-memory
syscall
vm-page-size
TODO
Running
Idle
Syscall
Unknown
Over
Partial
ThreadState
ContextSwitch
FIXBT
name
state
priority
start
duration
cputime
waittime
note
summary
event
load
ui-load
ui-load-commitment
operation
address
size
backtrace
call
return
errno
signature
Zero Fill
Page In
Copy On Write
Page Cache Hit
Non-Zero Fill
Guard Page
File Backed Page In
Anonymous Memory Page In
Decompress Memory
Decompress Memory from Swap
Copy On Read
Page Out
Handling Interrupt
XRSystraceCPUStateToString
XRSystraceModelerShared.h
false
Runnable
Interrupted
Wait
Preempted
Suspended
Terminating
Terminated
XRSystraceThreadStateToString
-[XRHTTPArchiveLoggingModeler populateOutputTables:usingObserverations:parameters:yieldFlag:]
XRHTTPArchiveLoggingModeler.mm
logMessageParts.count <= 2
logMessageParts.count == 2
logMessageParts.count == 1
logMessagePartOne.isValid
os-log
message
initColumnIDs
XRHTTPArchiveLoggingModeler.h
extractedColumns == YES
timestamp
har-entry-json
device-gpu-info
gpu-shader-profiler-sample
metal-command-buffer-frame-assignment-internal
metal-command-buffer-frame-assignment
-internal
metal-gpu-submission-to-command-buffer-id-internal
metal-gpu-submission-to-command-buffer-id
metal-gpu-execution-points-internal
metal-gpu-execution-points
metal-command-buffer-completed-internal
metal-command-buffer-completed
metal-shader-profiler-shader-list-internal
metal-shader-profiler-shader-list
metal-known-compositor-process-internal
metal-known-compositor-process
metal-shader-profiler-intervals-internal
metal-shader-profiler-intervals
Shader Timeline
Vertex
Compute
Fragment
value
XRAnalysisCoreReadCursorGetValue(streamCursor, tableID, &value)
shared
ephemeral
pmi-threshold
kdebug-counters-with-time-sample
sample-rate-micro-seconds
counters-profile
sample-type
forced off %XRCPUCoreTypeID% by %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
balanced off %XRCPUCoreTypeID% to optimize the system's CPU performance
yielding %XRCPUCoreTypeID% to %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
taken off CPU temporarily to cool the processor and surrounding hardware
made runnable by a timer expiration (handled by %XRCPUCoreTypeID%'s timer interrupt handler)
made runnable by an interrupt handler on %XRCPUCoreTypeID%
made runnable by %XRThreadTypeID% running on %XRCPUCoreTypeID%
parked waiting for new work items from dispatch
waiting for event/lock with id %XRVirtualMemoryAddressTypeID%
%thread-state% at priority %sched-priority% on %core%
%thread-state% on %core%
%thread-state% at priority %sched-priority%
%thread-state%
lost %XRCPUCoreTypeID% to %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
gave %XRCPUCoreTypeID% voluntarily to %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
%XRCPUCoreTypeID% became idle (inferred)
%XRCPUCoreTypeID% became idle
will wait for event/lock with id %XRVirtualMemoryAddressTypeID% when it blocks
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%) = %XRSizeInBytesTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, off:%XRSizeInBytesTypeID%) = %XRSizeInBytesTypeID%
| X_OK
| W_OK
| R_OK
F_OK
0 (reachable)
%XRSystemCallNameTypeID%(path, amode:%XRSymbolicArgumentTypeID%) = %XRSymbolicArgumentTypeID%
-1 (failure)
0 (success)
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%) = %XRSymbolicArgumentTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, flags:%XRRegisterContentsTypeID%) = %XRSizeInBytesTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, flags:%XRRegisterContentsTypeID%,...) = %XRSizeInBytesTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, msg:%XRVirtualMemoryAddressTypeID%, flags:%XRRegisterContentsTypeID%) = %XRSizeInBytesTypeID%
MADV_NORMAL
MADV_RANDOM
MADV_SEQUENTIAL
MADV_WILLNEED
MADV_DONTNEED
MADV_FREE
MADV_FREE_RESUSABLE
MADV_FREE_REUSE
%XRSystemCallNameTypeID%(addr:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, advice:%XRSymbolicArgumentTypeID%)
told the kernel that %XRSizeInBytesTypeID% of memory starting at %XRVirtualMemoryAddressTypeID% became available for reuse
| PROT_READ
| PROT_WRITE
| PROT_EXEC
PROT_NONE
%XRSystemCallNameTypeID%(addr:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, prot:%XRSymbolicArgumentTypeID%)
| MAP_SHARED
| MAP_PRIVATE
| MAP_FIXED
| MAP_RENAME
| MAP_NOEXTEND
| MAP_HASSEMAPHORE
| MAP_NOCACHE
| MAP_JIT
| MAP_ANON
| MAP_FILE
| MAP_RESILIENT_CODESIGN
| MAP_RESILIENT_MEDIA
%XRSystemCallNameTypeID%(addr:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, prot:%XRSymbolicArgumentTypeID%, flags:%XRSymbolicArgumentTypeID%) = %XRVirtualMemoryAddressTypeID%
%XRSystemCallNameTypeID%
EAGAIN was returned which is normal for a non-blocking file descriptor
end-of-file was encountered
the permission bits of the file mode do not permit the requested access, or search permission is denied on a component of the path prefix.
the call failed with an errno value of %XRSymbolicErrnoValueTypeID%
the call failed with an error: %XRSymbolicErrnoValueTypeID%
Ran %XRThreadTypeID% at priority %XRSchedulingPriorityTypeID% for %XRDurationOnCPUTypeID%.
Servicing an interrupt handler, and preempting %XRThreadTypeID% for %XRDurationOnCPUTypeID%.
Servicing an interrupt handler for %XRDurationOnCPUTypeID%.
Idled waiting for work or interrupts to handle for %XRDurationOnCPUTypeID%.
Virtual memory %vm-op% took %duration%.
Called "%syscall%" for %duration-waiting%.
Called "%syscall%" for %duration-waiting%, %narrative%.
Ran for %duration-on-core% on %core% at priority %sched-priority%.
The thread was %narrative%. It waited for an available CPU for %duration-waiting% (%percent% of %syscall%'s duration) before running again at priority %sched-priority%.
The thread was %narrative%. It waited for an available CPU for %duration-waiting% before running again at priority %sched-priority%.
The thread was made runnable. It waited for an available CPU for %duration-waiting% (%percent% of %syscall%'s duration) before running again at priority %sched-priority%.
The thread was made runnable. It waited for an available CPU for %duration-waiting% before running again at priority %sched-priority%.
Interrupted for %duration-on-core% (%percent% of %syscall%'s duration) while %core% serviced an interrupt handler.
Interrupted for %duration-on-core% while %core% serviced an interrupt handler.
Preempted for %duration-on-core% (%percent% of %syscall%'s duration) because thread was %narrative%.
Preempted for %duration-on-core% because thread was %narrative.%
Preempted at priority %sched-priority% for %duration-on-core% (%percent% of %syscall%'s duration) because thread was %narrative%.
Preempted at priority %sched-priority% for %duration-on-core% because thread was %narrative%.
Preempted for %duration-on-core% (%percent% of %syscall%'s duration).
Preempted for %duration-on-core%.
Preempted at priority %sched-priority% for %duration-on-core% (%percent% of %syscall%'s duration).
Preempted at priority %sched-priority% for %duration-on-core%.
Blocked for %duration-waiting% (%percent% of %syscall%'s duration) starting at priority %sched-priority%. Thread is %narrative%.
Blocked for %duration-waiting% (%percent% of %syscall%'s duration) starting at priority %sched-priority%.
Blocked for %duration-waiting% starting at priority %sched-priority%.  Thread is %narrative%.
Blocked for %duration-waiting% starting at priority %sched-priority%.
Idle for %duration-waiting%. Thread is %narrative%.
Idle for %duration-waiting%.
getCursor
XRCXXModeling.h
_sharedState
-[XRTimeSamplerModeler _getNormalizedWeight:]
XRTimeSamplerModeler.mm
time-sample
context-switch-sample
time-profile
record-waiting-threads
gpu-counter-info
gpu-counter-value
metal-gpu-counter-intervals
-1.Total Occupancy
-2.Top Performance Limiter
Sum of Occupancy
%uint64%%string% (%string%)
counter-id
max-value
accelerator-id
description
group-index
type
ring-buffer-count
require-weighted-accumulation
sample-index
ring-buffer-index
device-name
vendor-name
mobile
label
percent-value
is-percentage
num-pcs
frame-number
pso-label
event-name
shader-type
percent-of-kick
total-kick-percent
event-priority
channel-name
event-depth
connection-UUID
pso-name
pc-start
pc-end
cmdbuffer-id
frame-color
is-compositor
gpu-submission-id
channel-id
compositor-name
consistent-state-available
consistent-state-enabled
consistent-state-sustained
consistent-state-mapping
consistent-state
desired-state
%d.%@
Percentage
limiter
occupancy
bandwidth
 GB/s
vertex
fragment
compute
tile
gpu-performance-state-info
requested-consistent-state
gpu-performance-device-state-intervals-internal
gpu-performance-device-state-intervals
v16@?0r^{XRGPUPerformanceDeviceState=QQQII}8
Radeon Pro Vega 56
Radeon Pro Vega 64
Radeon Pro Vega 64X
Radeon Pro Vega 48
Radeon Pro Vega 16
Radeon Pro Vega 20
AMD Radeon Pro Vega II
AMD Radeon Pro Vega II Duo
AMD Radeon Pro 5300M
AMD Radeon Pro 5500M
AMD Radeon Pro 5600M
AMD Radeon Pro 5300
AMD Radeon Pro 5500 XT
AMD Radeon Pro 5700
AMD Radeon Pro 5700 XT
AMD Radeon Pro W5700X
AMD Radeon Pro W5500X
Radeon Pro Navi 21 GL-XTA
com.apple.dt.instruments.modeler-factory
modeler
modelerClass
implementationClass
-[XRBuiltinModelerFactory instanceModelersInSolution:]_block_invoke
XRBuiltinModelerFactory.mm
[modelerInstance conformsToProtocol:@protocol(XRAnalysisCoreModeler)]
v20@?0@"XRAnalysisCoreModelerInstance"8C16
getWriteValue
currentWritableSchemaPositionIsValid(position)
setValue
res && "Oops, couldn't set the value."
readValue
XRCXXSystraceModelers.h
a <= kdebug.Time
(a + b) >= kdebug.Time
It2 != _lastState.end()
os-signpost
swift-task-state
swift-task-cancellation-event
swift-task-relationship
swift-task-lifetime
swift-alive-task-count
swift-running-task-count
swift-total-task-count
swift-task-creation-event
swift-actor-execution
swift-actor-queue-size
swift-actor-count
swift-actor-lifetime
task_lifetime
Begin
XRBacktraceTranslationOracle
job_run
task_wait
task_status_changed
Event
task_continuation_init
task_continuation_await
task_continuation_resume
task_continuation
actor_lifetime
actor_enqueue
actor_dequeue
actor_job_queue
operator()
Creating
Waiting
Ending
Enqueued
Continuation
Ran for %duration% on actor %swift-actor% on actor-isolated context at %text-symbol% on thread %thread% with priority %swift-task-priority%
Ran for %duration% on %thread% starting at %text-symbol% with priority %swift-task-priority%
Ran for %duration% on %thread% with priority %swift-task-priority%
Default
Utility
Background
User Initiated
Suspended for %duration%
Waited on %swift-task% task for %duration%
Reference to task was held for an additional %duration%
Was enqueued on %swift-actor% actor for %duration%
Creating for %duration%
Ran continuation for %duration% that ended with an error
Ran continuation for %duration% that ended without any errors
Supervisor
Uninterruptible
stringToThreadState
XRSystraceModelerShared.mm
false && "We should have all the thread states listed above."
cpu-narrative
thread-narrative
significance
narrative
certainty
XRSymbolicationEmissionOracle
XRCallstackFixupOracle
XRSymbolicationHorizonOracle
XRSymbolicationResetOracle
Cache Lookup
Blocked
QUIC
Sending Request
Waiting for Response
Receiving Response
Transaction
Task
Local Cache
Revalidated Cache
Server Push
Network Load
_transactionUUID
_taskUUID
request
response
serverIPAddress
connection
_precisionPreservingTimings
_fetchType
cache
connect
secureConnection
send
receive
base64
Symbolication
Starting for %@
Ending for %@
Ending for %s
[Error] Interval already ended
Starting for %s
com.apple.dt.Instruments
XRAnalysisCoreFunctionInvocation
@16@0:8
v28@0:8I16@20
B28@0:8^@16I24
v24@0:8@16
B24@0:8^@16
@"<XRAnalysisCoreValueFactory>"16@0:8
v28@0:8I16@"XRAnalysisCoreValue"20
v24@0:8@"XRAnalysisCoreValue"16
XRURLSessionTaskContainmentsModeler
B48@0:8@16@24@32@?40
v16@0:8
inputTableTasks
inputTableTransactions
inputTableTransactionStates
outputTable
cachedTasks
cachedTransactionColors
Did not find corresponding task interval for transaction `%{public}@` with task id: %{public}@
Did not find corresponding transaction color for transaction `%{public}@`
XRAnalysisCoreSwiftModeler
v32@0:8@"<XRIntKeyedDictionaryImmutable>"16@"XRAnalysisCoreModelingParameters"24
B48@0:8@"XRAnalysisCoreTableBindingsWrapper"16@"XRAnalysisCoreReadCursorWrapper"24@"XRAnalysisCoreModelingParameters"32@?<B@?>40
v32@0:8@"XRAnalysisCoreTableBindingsWrapper"16@"XRAnalysisCoreModelingParameters"24
XRTransactionContainmentsModeler
cachedTransactions
layoutManager
alreadyWrittenDrawables
_TtC20BuiltinModelerPluginP33_FDC95F2A35E24E849AD7B036511025EC19TransactionInterval
color
layoutQualifiers
Did not find corresponding transaction interval for transaction state `%{public}@` with transaction id: %{public}@
Transaction State
Connection Setup
_TtC20BuiltinModelerPlugin24HTTPAggregationCollector
aggregationType
count
previousTimestamp
countByProcess
previousTimestampByProcess
previouslySeenEventID
HTTP %s event %llu hasn't begin event. It's ok if event started before recording
Recieved duplications for end HTTP %s event %llu
Recieved duplications for end HTTP %s event %llu in process %llu
HTTP %s event %llu has already been handled
XRTransactionEnrichmentModeler
inputTableHarLogs
inputTableTaskEvents
outputTableTransactions
outputTableTransactionStates
jsonDecoder
sessionByTaskID
transactionsWaitingForAdditionalData
_TtC20BuiltinModelerPluginP33_22B9F748C0431C4636ACE10518D51BDC19TransactionInterval
additionalInfo
endReasonValue
Received transaction interval with invalid transaction UUID. Analysis Core value for UUID  %{public}@
Did not find corresponding transaction interval for HAR JSON for transaction: %{public}@
transaction: %{public}@ had no associated task UUID
Unknown Connection
Transaction State starts before parent transaction. Transaction ID: %{public}@, state: %{public}@, relativeStartTime: %lld ns
Cache Connection
Developer Attributed
XRURLSessionTaskEventsModeler
inputTable
outputTableTaskStarts
outputTableTaskEnds
previouslySeenTaskResumeUUIDs
cachedSessionNames
signpostIdToTaskUUID
_TtC20BuiltinModelerPluginP33_86AF25F1718F504E7B367945C515792114TaskStartEvent
traceRelativeTimestamp
taskUUID
sessionUUID
session
Did not find a task UUID for signpost id, likely because we didn't receive the corresponding task start event.
Failed to decode additional info json for task resume event.
Failed to decode additional info json for task complete event: %@
sessionDescription
isEphemeralSession
backgroundIdentifier
localizedDescription
XRDyldLibraryLoadIntervalModeler
inKdebugTable
inKdebugStringTable
outDyldLibraryTable
lastUUIDEventByThread
libraryUUIDsByPath
libraryPathsByHandle
openIntervals
dyldEvent
hasSentDyldEvent
lastSharedCacheEvent
stringBank
threadsByProcess
trackContainmentByThread
dlopen (Shared Cache)
layout-qualifier
public-task-identifier
task-description
session-is-ephemeral
resume-backtrace
request-attribution
error-localized-description
error-overall-description
is-all-processes
aggregation-type
end-reason-string
http-status-code
http-status-text
response-headers
response-mime-type
secure-connection
request-duration
waiting-for-server
response-duration
additional-info-json
layout-qualifier-for-connection-grouping
layout-qualifier-for-domain-grouping
containment-level
standalone-label
label-in-containment-hierarchy
Authentication Challenge
tableDefinition
$__lazy_storage_$_values
tableDefinitions
_TtCOO20BuiltinModelerPlugin12AnalysisCore15TypedReadCursor19BaseTableReadCursor
readCursor
shouldYield
wasInterrupted
a b c 
a b 
_TtC20BuiltinModelerPlugin18DyldTimingInterval
startTime
endTime
tracePairID
thread
trackLevel
_TtC20BuiltinModelerPlugin17DyldMapImageEvent
pathID
loadAddress
_TtC20BuiltinModelerPlugin15DyldDlopenEvent
handle
_TtC20BuiltinModelerPlugin16DyldDlcloseEvent
track-containment-level
cp-user-callstack
XRHTTPAggregationModeler
inputTaskStartEvents
inputTaskEndEvents
inputTransactionEvents
outputAggregationSummary
taskCollector
transactionCollector
v24@?0@"<XREngineeringValue>"8@"<XREngineeringValue>"16
Missing status code for transaction id: %{public}@
Invalid state for state interval: id: %{public}@, state: %{public}@
XRURLSessionTaskIntervalModeler
v32@0:8@16@24
inputTableTaskStarts
inputTableTaskEnds
intervalOutputTable
tasksLayoutManager
incompleteTaskIntervalStarts
completedTasks
_TtC20BuiltinModelerPluginP33_553A06DDDCC89470046C0190A5BC238E14TaskStartEvent
layoutQualifier
_TtC20BuiltinModelerPluginP33_553A06DDDCC89470046C0190A5BC238E12TaskEndEvent
No matching task start event for har log with task UUID %@
Task End event did not have a task UUID
No matching task resume event for complete event with task UUID %@
v28@?0C8@"XRAnalysisCoreTableColumn"12^B20
Fatal error
Down-casted Array element failed to match the target type
Expected 
KeyPath<URLSessionTaskStartColumns, String>
NSArray element failed to match the Swift Array Element type
Expected 
KeyPath<URLSessionTaskEndColumns, String>
End of interval with identifier 
 was already set to 
BuiltinModelerPlugin/NonOverlappingIntervalsLayoutManager.swift
Failed to parse JSON %{public}@ due to error %{public}@
v32@?0@8Q16^B24
com-apple-cfnetwork-task-intervals
com-apple-cfnetwork-harlogging-schema
com-apple-cfnetwork-task-ends
com-apple-cfnetwork-task-starts
com-apple-cfnetwork-aggregation-drawables
dyld-library-load
KeyPath<OsSignpostColumns, String>
KeyPath<TransactionIntervalBasicInfoColumns, String>
com-apple-cfnetwork-transaction-states
com-apple-cfnetwork-transaction-intervals-full-info
com-apple-cfnetwork-transaction-intervals
KeyPath<TransactionIntervalFullInfoColumns, String>
com-apple-cfnetwork-transaction-drawables
KeyPath<URLSessionTaskIntervalColumns, String>
com-apple-cfnetwork-task-drawables
XRCPUProfilerModeler
XRAnalysisCoreModeler
NSObject
XRSystraceModeler
XRHTTPArchiveLoggingModeler
XRGPUShaderProfilerModeler
XRURLSession
XRGenericCountersModeler
XRSystraceNoteBuilder
XRSystraceNarrativeBuilder
XRTimeSamplerModeler
XRGPUCountersModeler
XRGPUPerformanceStateModeler
XRCXXCSwitchModeler
NoteBuilderDelegate
XRSystraceNoteBuilderDelegate
XRCXXSystraceSyscallModeler
XRCXXVirtualMemoryModeler
XRCXXSystemTraceModeler
XRCXXSwiftConcurrencyModeler
XRAnalysisCoreSwiftModeler
XRBuiltinModelerFactory
XRAnalysisCoreModelerFactory
XRNarrativeModeler
getProcessValue:pid:sessionUUID:
caseInsensitiveCompare:
implValue
arrayWithObjects:count:
setTypedArrayWithValues:
firstObject
parameters
getValue:fieldIndex:
JSONObjectWithData:options:error:
modelerClassName
appendData:
enumerateInstancesWithBlock:
boolValue
lastObject
hasSuffix:
modeler
speculationIsFinal
extractColumnIDs:forMnemonics:
unsignedLongValue
dictionary
setString:
extensionsMatchingPredicate:
addObjectsFromArray:
bindingParameters
spec
lowercaseString
unsignedLongLongValue
hasPrefix:
defaultPlugInManager
getBacktraceFragment:process:frames:
initWithData:encoding:
setObject:forKeyedSubscript:
getThread:tid:process:
extensionPointWithIdentifier:
objectForKeyedSubscript:
intValue
unsignedIntegerValue
setUint32:
getValue:signatures:engineeringType:
stringWithUTF8String:
objectAtIndexedSubscript:
rangeOfString:
addObject:
setModeler:
countByEnumeratingWithState:objects:count:
attributes
formatNarrativeWithStringSignatures:
setUInt64ArrayWithValues:
valueForKey:
extensionParametersForKey:
data
unsignedIntValue
stringWithFormat:
getStoredUInt64Array:
formatNarrative:
signatureFromString:engineeringType:
setData:
primaryTimeColumnID
getValue:signature:engineeringType:
isEqualToString:
implementationTypeFromID:
initWithSwiftModeler:
count
length
UTF8String
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
resetModelerStateWithTables:parameters:
populateOutputTables:usingObserverations:parameters:yieldFlag:
populateSpeculationTables:parameters:
inputCount
setInputCount:
outputCount
setOutputCount:
machProcessingTime
setMachProcessingTime:
modelingActivityCompletedWithParameters:
debuggingSwapLogString:
debuggingExecuteCommand:context:
debuggingDumpWorkingMemoryForContext:
debuggingEnumerateContextStrings:
debuggingAsynchronousPanicStop
TQ,N
_fixupCallstacks:userBT:process:atTime:
_fixupCallstack:atTime:
.cxx_destruct
.cxx_construct
_kdebugCountersBinding
_pmiCountersBinding
_cpuProfileBinding
_cpuProfilerWriteCursor
_normalizer
_fixBTOracleToken
_fixBTInvocation
_factory
_core
_hasPMICountFeature
TQ,N,VinputCount
TQ,N,VoutputCount
TQ,N,VmachProcessingTime
_handleThreadStateTransfer:data:parameters:
_storedThreadAndProcessFromTID:
_cacheTID:
_recordVM:
_recordSyscall:
_record:newCPUState:
_recordSysload:currentTime:
_recordThreadState:newState:
_recordTheadStateContextSwitch:timestamp:
_fixedBacktrace:atTime:
threadStateFromTid:
cpuStateFromCore:
signatureOfThread:
_threadStateBinding
_contextSwitchBinding
_cpuStateBinding
_tickBinding
_systemLoadBinding
_vmBinding
_syscallNameMapBinding
_syscallBinding
_inputBindings
_tidPidMappingBinding
_threadSnapshotBinding
_threads
_cpus
_storedThreadAndProcesses
_syscallNameMap
_tidToPid
_systemLoad
_fixedBacktraces
_coreCount
_threadStateWriteCursor
_cpuStateWriteCursor
_syscallWriteCursor
_vmWriteCursor
_contextSwitchWriteCursor
_sysloadWriteCursor
_noteBuilder
__tempValue
__tempValue2
__tempStringImpl
logErrorIfDataIsNotValidJSON:
_inputBinding
_outputBinding
_incompleteLogs
clear
_handleExecution:
_handleNewShaderPC:timestamp:
_recordInterval:
_gpuInfoBinding
_shaderSampleBinding
_shaderIntervalBinding
_shaderListBinding
_gpuExecutionPointsBinding
_commandBufferCompletedBinding
_gpuSubmissionToCommandBufferBinding
_frameAssignmentBinding
_knownCompositorBinding
_narrativeSupport
_shaderIntervalCursor
_targetCompability
_gpuInfoMap
_activeKicks
_submissionToFrameInfo
_submissionToCommandBuffer
_cmdBufferIdToFrameAssignment
_knownCompositors
_shaderInfoMap
_activeShaders
_pendingShaders
_trackAssigners
_isInternal
_targetPid
internalUUID
setInternalUUID:
backgroundIdentifier
setBackgroundIdentifier:
sessionName
setSessionName:
isShared
setShared:
isEphemeral
setEphemeral:
additionalInformation
setAdditionalInformation:
_shared
_ephemeral
_internalUUID
_backgroundIdentifier
_sessionName
_additionalInformation
T@"XRAnalysisCoreValue",&,N,V_internalUUID
T@"NSString",&,N,V_backgroundIdentifier
T@"NSString",&,N,V_sessionName
shared
TB,N,GisShared,V_shared
ephemeral
TB,N,GisEphemeral,V_ephemeral
T@"NSData",&,N,V_additionalInformation
setURLSession:forColumn:
_triggerInputBinding
_countersProfileBinding
_countersWriteCursor
_backtraceFixer
stringArrayValue
_PMCStringValue
_normalizedWeight
initWithFactory:
initWithDelegate:factory:
threadNote:data:
threadNote:kdebugData:
threadSummary:
contextSwitchNote:
syscallNoteAndSignature:syscallName:
delegate
setDelegate:
_delegate
T@"<XRSystraceNoteBuilderDelegate>",W,N,V_delegate
_initStateSignatureMapping
cpuStateFromSignature:
threadStateFromSignature:
cpuStateNarrative:threadState:
vmFaultThreadStateNarrative:
syscallThreadStateNarrative:
threadStateNarrative:percentageOf:syscallName:
_threadStateSigMap
_cpuStateSigMap
T@"<XRSystraceNarrativeBuilderDelegate>",W,N,V_delegate
_getNormalizedWeightForCSwitch:
_getNormalizedWeight:
_timeProfileBinding
_timeSampleBinding
_timeSampleWriteCursor
_sampleRateMS
_previousTimestamp
_previousState
_recordWaitingThreads
_initSoftwareCounters
_handleNewCounterValue:
_resolveSoftwareCounters
_recordInterval:unit:description:
_counterValueBinding
_counterInfoBinding
_counterIntervalBinding
_counterIntervalCursor
_counterInfoMap
_sampleProcessors
_totalOccupancy
_topPerformanceLimiter
_lastSampleIndex
_averageAndRecordStateChanges:isFinal:
_performanceStateInfoBinding
_performanceDeviceStateBinding
_kdebugBinding
_performanceDeviceStateCursor
_performanceStateInfoMap
_stateRecords
_desiredState
init
dealloc
_modeler
initWithCXXSystraceModeler:
_mod
populateOutputTables:usingObserverations:parameters:checkToYieldBlock:
instanceModelersInSolution:
_cacheThreadState:
_checkSyscallEnd:threadSig:
_handleSyscall:
_handleThreadState:
_handleVMFault:
_handleCPUState:
_recordThreadNarrative:start:duration:threadSig:processSig:backtrace:
_recordCPUNarrative:start:duration:cpu:backtrace:
_cpuNarrativeBinding
_threadNarrativeBinding
_threadToSyscall
_threadMap
_cpuNarrativeWriteCursor
_threadNarrativeWriteCursor
_narrative
invokeOracleFunction:invocation:
oracleFunctionTokenWithName:
createOracleFunctionInvocation
setArgumentIndex:value:
getOutput:
signature
string
initWithType:
setUint64:
getValue:implementation:engineeringType:
valueFactory
getArgumentAsValue:atIndex:
setOutput:
writeCursorForTableID:
advanceToNextRow
tableID
columnIDForMnemonic:
valueForColumnId:
uuidFromEngineeringValue
appendNewRow
setUInt32:forColumn:
setString:forColumn:
uint32
uint64
isValid
setValue:forColumn:
enumerateObjectsAndIntegerKeys:
objectValue
leadingEventHorizon
setTrailingEventHorizon:
setUInt64:forColumn:
initWithFirst:second:
setKeyValueArray:forColumn:
copyFromReadCursor:column:toColumn:
trailingEventHorizon
core
getTID:process:
getThreadDetails:tid:
getProcessDetails:session:
setUInt64Array:forColumn:
setUUID:forColumn:
getPID:sessionUUID:
columnCount
enumerateKeyValuePairs:
enumerateColumns:
accessRights
schema
name
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
B48@0:8r^{XRAnalysisCoreTableBindings=}16^{XRAnalysisCoreReadCursor=}24@32^AB40
v32@0:8r^{XRAnalysisCoreTableBindings=}16@24
v24@0:8Q16
v24@0:8@16
@24@0:8@16
v24@0:8@?16
v16@0:8
v32@0:8@"<XRIntKeyedDictionaryImmutable>"16@"XRAnalysisCoreModelingParameters"24
B48@0:8r^{XRAnalysisCoreTableBindings=}16^{XRAnalysisCoreReadCursor=}24@"XRAnalysisCoreModelingParameters"32^AB40
v32@0:8r^{XRAnalysisCoreTableBindings=}16@"XRAnalysisCoreModelingParameters"24
v24@0:8@"XRAnalysisCoreModelingParameters"16
@"NSMutableAttributedString"24@0:8@"NSMutableAttributedString"16
v32@0:8@"NSString"16@"NSString"24
@"NSString"24@0:8@"NSString"16
v24@0:8@?<v@?@"NSString">16
Q48@0:8Q16Q24@32Q40
@32@0:8Q16Q24
{XRSystracekDebugWithCountersBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"arg1Col"C"arg2Col"C"arg3Col"C"arg4Col"C"functionCol"C"classCol"C"subclassCol"C"codeCol"C"userBTCol"C"kernelBTCol"C"pmcArray"C}
{XRSystracePMIWithCountersBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"pmiCount"C"userBTCol"C"kernelBTCol"C"pmcArray"C}
{CPUSampleBinding="tableID"I"timeCol"C"threadCol"C"processCol"C"cpuCol"C"threadStateCol"C"weightCol"C"stackCol"C}
^{XRAnalysisCoreWriteCursor=}
{unique_ptr<XRPMCNormalizer, std::default_delete<XRPMCNormalizer>>="__ptr_"{__compressed_pair<XRPMCNormalizer *, std::default_delete<XRPMCNormalizer>>="__value_"^{XRPMCNormalizer}}}
@"<XRAnalysisCoreValueFactory>"
@"<XRAnalysisCoreReadOnly>"
v40@0:8Q16^{XRSystraceKdebugData=QIQQQQIIIIQiQQQQ@Q}24@32
{tuple<unsigned long long, unsigned long long>={__tuple_impl<std::__tuple_indices<0, 1>, unsigned long long, unsigned long long>=QQ}}24@0:8Q16
v24@0:8^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16
v32@0:8^{XRSystraceCPU=QQQQiB}16^{XRSystraceCPU=QQQQiB}24
v32@0:8^{XRSystraceSystemLoad=QQqqQQQ}16Q24
v32@0:8^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}24
v32@0:8^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16Q24
Q32@0:8Q16Q24
^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}24@0:8Q16
^{XRSystraceCPU=QQQQiB}20@0:8I16
Q24@0:8Q16
{XRSystraceThreadStateBinding="tableID"I"startCol"C"durationCol"C"threadCol"C"cpuCol"C"stateCol"C"processCol"C"cpuTimeCol"C"waitTimeCol"C"priorityCol"C"noteCol"C"summaryCol"C}
{XRSystraceContextSwitchBinding="tableID"I"timeCol"C"cpuCol"C"eventCol"C"threadCol"C"processCol"C"noteCol"C"priorityCol"C}
{XRSystraceCPUStateBinding="tableID"I"startCol"C"durationCol"C"cpuCol"C"stateCol"C"threadCol"C"processCol"C"priorityCol"C}
{XRSystraceTickBinding="tableID"I"timeCol"C}
{XRSystraceSystemLoadBinding="tableID"I"startCol"C"durationCol"C"loadCol"C"uiLoadCol"C"uiLoadCommitmentCol"C}
{XRSystraceVMBinding="tableID"I"startCol"C"durationCol"C"threadCol"C"processCol"C"operationCol"C"cpuTimeCol"C"waitTimeCol"C"addressCol"C"sizeCol"C"backtraceCol"C}
{XRSystraceSyscallNameBinding="tableID"I"timeCol"C"classCol"C"subclassCol"C"codeCol"C"nameCol"C}
{XRSystraceSyscallBinding="tableID"I"startCol"C"durationCol"C"threadCol"C"processCol"C"callCol"C"cpuTimeCol"C"waitTimeCol"C"arg1Col"C"arg2Col"C"arg3Col"C"arg4Col"C"returnCol"C"errnoCol"C"backtraceCol"C"noteCol"C"signatureCol"C}
{unordered_map<unsigned long long, XRSystracekDebugBinding, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystracekDebugBinding>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{XRSystraceTIDPIDMappingBinding="tableID"I"timeCol"C"tidCol"C"pidCol"C}
{XRSystraceThreadSnapshotBinding="tableID"I"timeCol"C"threadCol"C"stateCol"C"priorityCol"C}
{unordered_map<unsigned long long, XRSystraceThread, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceThread>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceThread>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThread>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThread>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceThread>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThread>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThread>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRSystraceCPU, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceCPU>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceCPU>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, std::tuple<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::tuple<unsigned long long, unsigned long long>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, NSString *, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, NSString *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, NSString *>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, NSString *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, NSString *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, NSString *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, NSString *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, NSString *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, unsigned long long>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, unsigned long long>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{XRSystraceSystemLoad="time"Q"lastRecordTime"Q"load"q"uiLoad"q"sum"Q"uiSum"Q"weight"Q}
@"XRSystraceNoteBuilder"
@"<XRAnalysisCoreFunctionInvocation>"
@"XRAnalysisCoreValue"
@"XRAnalysisCoreImplValue"
{XRHTTPArchiveLoggingInputBinding="tableID"I"timeCol"C"messageCol"C"processCol"C"threadCol"C}
{XRHTTPArchiveLoggingOutputBinding="tableID"I"timeCol"C"processCol"C"harEventString"C}
@"NSMutableDictionary"
v24@0:8r^{XRGPUMetalGPUExecutionPoint=QQQQ}16
v32@0:8Q16Q24
v24@0:8r^{XRGPUActiveShaderInterval={XRGPUActiveKick={XRGPUMetalCommandBufferInfo={XRGPUMetalCommandBufferFrameAssignment=QQIIIQ}{XRGPUMetalGPUSubmissionToCommandBuffer=QQQQI}}QQQi@}{XRGPUShaderInfo=QQQQ@@@@@iQ}IQQ}16
{XRDeviceGPUInfoBinding="tableID"I"timestampCol"C"acceleratorIdCol"C"deviceNameCol"C"vendorNameCol"C"mobileCol"C}
{XRGPUShaderProfilerSampleBinding="tableID"I"timestampCol"C"pcCol"C"numPCCol"C}
{XRGPUShaderIntervalBinding="tableID"I"startCol"C"durationCol"C"nameCol"C"labelCol"C"psoNameCol"C"eventNameCol"C"shaderTypeCol"C"percentOfKickCol"C"totalKickPercentCol"C"colorCol"C"eventPriorityCol"C"processCol"C"gpuCol"C"channelNameCol"C"eventDepthCol"C"connectionUUIDCol"C}
{XRGPUShaderListBinding="tableID"I"timestampCol"C"nameCol"C"labelCol"C"psoNameCol"C"idCol"C"pcStartCol"C"pcEndCol"C"shaderTypeCol"C"processCol"C"gpuCol"C}
{XRGPUMetalGPUExecutionPointsBinding="tableID"I"timestampCol"C"functionCol"C"gpuSubmissionIdCol"C"channelIdCol"C}
{XRGPUMetalCommandBufferCompletedBinding="tableID"I"timestampCol"C"cmdBufferIdCol"C}
{XRGPUMetalGPUSubmissionToCommandBufferBinding="tableID"I"timestampCol"C"cmdBufferIdCol"C"gpuSubmissionIdCol"C"acceleratorIdCol"C"pidCol"C}
{XRGPUMetalCommandBufferFrameAssignmentBinding="tableID"I"timestampCol"C"cmdBufferIdCol"C"frameNumberCol"C"frameColorCol"C"isCompositorCol"C"processCol"C}
{XRGPUMetalKnownCompositorProcessBinding="tableID"I"timestampCol"C"nameCol"C"pidCol"C"processCol"C}
@"XRAnalysisCoreNarrativeSupport"
{unordered_map<unsigned long long, XRDeviceGPUInfo, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRDeviceGPUInfo>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUActiveKick, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUActiveKick>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUActiveKick>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUMetalCommandBufferInfo, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUMetalCommandBufferInfo>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUMetalCommandBufferFrameAssignment, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUMetalCommandBufferFrameAssignment>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned int, XRGPUMetalKnownCompositorProcess, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, XRGPUMetalKnownCompositorProcess>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUShaderInfoContainer, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUShaderInfoContainer>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUActiveShaderInterval, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUActiveShaderInterval>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, std::vector<XRGPUActiveShaderInterval>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::vector<XRGPUActiveShaderInterval>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
[4{XRGPUModelerTrackAssigner="currentId"I"tracks"{map<unsigned int, XRGPUModelerTrackAssigner::Track, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, XRGPUModelerTrackAssigner::Track>>>="__tree_"{__tree<std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>, std::less<unsigned int>, true>>="__value_"Q}}}}]
@"NSNumber"
v20@0:8B16
@"NSString"
@"NSData"
B28@0:8@16C24
{triggerCountersInputBinding="type"i"binding"(?="pmiBinding"{XRSystracePMIWithCountersBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"pmiCount"C"userBTCol"C"kernelBTCol"C"pmcArray"C}"timeBinding"{XRSystraceTimeWithCountersBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"userBTCol"C"kernelBTCol"C"sampleTypeCol"C"pmcArray"C})}
{CountersSampleBinding="tableID"I"timeCol"C"threadCol"C"processCol"C"cpuCol"C"threadStateCol"C"stackCol"C"weightCol"C"countersCol"C}
{unique_ptr<XRBacktraceFixer, std::default_delete<XRBacktraceFixer>>="__ptr_"{__compressed_pair<XRBacktraceFixer *, std::default_delete<XRBacktraceFixer>>="__value_"^{XRBacktraceFixer}}}
@32@0:8@16@24
Q32@0:8r^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16r^v24
Q32@0:8r^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16r^{XRSystraceKdebugData=QIQQQQIIIIQiQQQQ@Q}24
Q24@0:8r^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16
{tuple<unsigned long long, unsigned long long>={__tuple_impl<std::__tuple_indices<0, 1>, unsigned long long, unsigned long long>=QQ}}32@0:8r^{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}16r*24
@"<XRSystraceNoteBuilderDelegate>"
i24@0:8Q16
Q32@0:8r^{XRSystraceRecordedCPUState=QQQIQQQ}16^{XRSystraceRecordedThreadState=QQQIQQQQ}24
Q24@0:8r^{XRSystraceRecordedVMFault=QQQQQQ}16
Q24@0:8r^{XRSystraceRecordedSyscall=QQQQQQQQQ}16
Q40@0:8r^{XRSystraceRecordedThreadState=QQQIQQQQ}16d24Q32
{unordered_map<unsigned long long, XRSystraceThreadState, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceThreadState>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceThreadState>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRSystraceCPUState, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceCPUState>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceCPUState>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
@"<XRSystraceNarrativeBuilderDelegate>"
Q24@0:8r^{XRSystraceContextSwitchSampleData=QIQQQ@QiIQ}16
Q24@0:8r^{XRSystraceTimeData=QIQQQ@QiIQQI}16
{TimeProfileBinding="tableID"I"timeCol"C"threadCol"C"processCol"C"cpuCol"C"threadStateCol"C"weightCol"C"stackCol"C}
{XRSystraceTimeBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"userBTCol"C"kernelBTCol"C"sampleTypeCol"C}
{XRSystraceContextSwitchSampleBinding="tableID"I"timeCol"C"threadCol"C"processCol"C"cpuCol"C"threadStateCol"C"btID"C}
{unordered_map<unsigned long long, XRThreadStateType, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRThreadStateType>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRThreadStateType>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRThreadStateType>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRThreadStateType>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRThreadStateType>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRThreadStateType>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRThreadStateType>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
v24@0:8r^{XRGPUCounterValue=QIQQII}16
v40@0:8r^{XRGPUCounterInterval=QQQdIIIII@@}16r*24r*32
{XRGPUCounterValueBinding="tableID"I"timestampCol"C"counterIdCol"C"valueCol"C"acceleratorIdCol"C"sampleIndexCol"C"ringBufferIndexCol"C}
{XRGPUCounterInfoBinding="tableID"I"timestampCol"C"counterIdCol"C"nameCol"C"maxValueCol"C"acceleratorIdCol"C"descriptionCol"C"groupIndexCol"C"typeCol"C"ringBufferCountCol"C"requireWeightedAccumulationCol"C}
{XRGPUCounterIntervalBinding="tableID"I"startCol"C"durationCol"C"counterIdCol"C"nameCol"C"labelCol"C"valueCol"C"percentValueCol"C"colorCol"C"gpuCol"C"groupIndexCol"C"isPercentageCol"C"ringBufferIndexCol"C}
{unordered_map<unsigned int, XRGPUCounterInfo, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, XRGPUCounterInfo>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, XRGPUCounterInfo>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
{vector<std::unique_ptr<XRGPUCounterSampleProcessor>, std::allocator<std::unique_ptr<XRGPUCounterSampleProcessor>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::unique_ptr<XRGPUCounterSampleProcessor> *, std::allocator<std::unique_ptr<XRGPUCounterSampleProcessor>>>="__value_"^v}}
[1{XRGPUCounterInterval="start"Q"duration"Q"value"Q"percentValue"d"counterId"I"color"I"groupIndex"I"isPercentage"I"ringBufferIndex"I"name"@"NSString""gpu"@"NSString"}]
[1{XRGPUCounterTopPerformanceLimiter="interval"{XRGPUCounterInterval="start"Q"duration"Q"value"Q"percentValue"d"counterId"I"color"I"groupIndex"I"isPercentage"I"ringBufferIndex"I"name"@"NSString""gpu"@"NSString"}"counterName"@"NSString"}]
v28@0:8Q16B24
v24@0:8r^{XRGPUPerformanceDeviceState=QQQII}16
{XRGPUPerformanceStateInfoBinding="tableID"I"timestampCol"C"acceleratorIdCol"C"availableCol"C"enabledCol"C"sustainedCol"C"mappingCol"C"stateCol"C}
{XRGPUPerformanceDeviceStateBinding="tableID"I"startCol"C"durationCol"C"acceleratorIdCol"C"stateCol"C"desiredStateCol"C}
{XRSystracekDebugBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"arg1Col"C"arg2Col"C"arg3Col"C"arg4Col"C"functionCol"C"classCol"C"subclassCol"C"codeCol"C"userBTCol"C"kernelBTCol"C}
{unordered_map<unsigned long long, XRGPUPerformanceStateInfo, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUPerformanceStateInfo>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
^{XRCXXModelingInterface=^^?}
@24@0:8^v16
B48@0:8@16@24@32@?40
B48@0:8@"XRAnalysisCoreTableBindingsWrapper"16@"XRAnalysisCoreReadCursorWrapper"24@"XRAnalysisCoreModelingParameters"32@?<B@?>40
v32@0:8@"XRAnalysisCoreTableBindingsWrapper"16@"XRAnalysisCoreModelingParameters"24
v24@0:8@"XRAnalysisCoreModelerBindingSolution"16
v24@0:8^{XRSystraceRecordedThreadState=QQQIQQQQ}16
v24@0:8^{XRSystraceRecordedSyscall=QQQQQQQQQ}16
v24@0:8^{XRSystraceRecordedVMFault=QQQQQQ}16
v24@0:8^{XRSystraceRecordedCPUState=QQQIQQQ}16
v64@0:8Q16Q24Q32Q40Q48Q56
v52@0:8Q16Q24Q32I40Q44
{XRSystraceCPUNarrativeBinding="tableID"I"startCol"C"durationCol"C"cpuCol"C"significanceCol"C"narrativeCol"C"backtraceCol"C}
{XRSystraceThreadNarrativeBinding="tableID"I"startCol"C"durationCol"C"processCol"C"threadCol"C"significanceCol"C"narrativeCol"C"certaintyCol"C"backtraceCol"C}
{unordered_map<unsigned long long, XRSystraceNarrativesSyscall, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceNarrativesSyscall>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{unordered_map<unsigned long long, XRSystraceRecordedThreadState, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceRecordedThreadState>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
@"XRSystraceNarrativeBuilder"
System Trace modeler failed to process data because a factory could not be obtained.
System trace modeler found a CPU running thread %llu but no corresponding thread state
System Trace modeler failed to find stored thread signature for thread %llu when recording CPU running it.
The table ids don't match
os_log messages are expected to be a typed array.
Unknown log format
Expected os_log argument to be binary data but it is not.
First chunk of HAR JSON string does not start with `{` but should. JSON string: %@
Final chunk of HAR JSON string does not end in `}` but should. JSON string: %@
HAR JSON Data is not a valid string
Failed to decode HAR Entry JSON string. Error: %@
GPU performance state modeler failed to process data because a factory could not be obtained.
No modeler implementation found for identifier %@
Multiple modeler implementation found for identifier '%@'. One of them will be used.
Class to load modeler with identifier '%@' was not found
yp_So32XRAnalysisCoreFunctionInvocation_ptSg
ypSg
$sSY
So8NSObjectC
IeyBd_
8taskUUID_
G0A4Infot
SSG4from_ABy
SSG2totG
ySSSgG
SaySSG
SSG4from_ABy
SSG2totG
SSG4from_ABy
SSG2totG
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
ShySSGG
SSG4from_ABy
SSG2totG
15keyByConnection_AA0aB10DomainOnlytSg
SSSg
_GGIgo_
SSG4from_ABy
SSG2totG
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
$ss12CaseIterableP
So19XRAnalysisCoreValueCG
_GSg
So19XRAnalysisCoreValueCSg
SnySiG
ySnySiGG
13transactionID_
8intervalt
13transactionID_
8intervaltSg
SSG4from_ABy
SSG2totG
SSG4from_ABy
SSG2totG
3key_
5valuetSg
3key_
5valuet
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
SdSg
SSGG
So19XRAnalysisCoreValueCG
So12XRURLSessionCSg
SSG4from_ABy
SSG2totG
SaySo19XRAnalysisCoreValueCG
SSG4from_ABy
SSG2totG
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
SDyxSay
yxq__GGG
q_Sg
SDySS
So19XRAnalysisCoreValueC5value_SS6stringtG
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
$s20BuiltinModelerPlugin22TableDefinitionColumnsP
$s20BuiltinModelerPlugin20TableValuesContainerP
11ColumnsType
So19XRAnalysisCoreValueCGSg
yxG1a_AAyq_G1bt
yxG1a_AAyq_G1bAAyq0_G1ct
So31XRAnalysisCoreReadCursorWrapperC
Sbyc
$s20BuiltinModelerPlugin31AnalysisCoreSomeSingleRowReaderP
So25XRAnalysisCoreTableSchemaC
$sSt
y__xq_q0_G
$sST
y__xq_G
y_xG
y__xG
So19XRAnalysisCoreValueC
__GG
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
ySSG
Sbz_Xx
5start_
Sg3end
Sg8harEntrytG
$s20BuiltinModelerPlugin22TaskEndValuesContainer33_553A06DDDCC89470046C0190A5BC238ELLP
5start_
Sg3end
Sg8harEntryt
3key_
5start_
Sg3end
Sg8harEntryt5valuetSg
3key_
5start_
Sg3end
Sg8harEntryt5valuet
SSG4from_ABy
SSG2totG
SSG4from_ABy
SSG2totG
5start_
Sg3end
Sg8harEntrytt
5start_
Sg3end
Sg8harEntrytG
_GGG
5start_
Sg3end
Sg8harEntrytSg
SgtSg
_GGIgo_
So19XRAnalysisCoreValueCG
SSG_G
SSGG
SSGG
yyXlG
SSG_G
SSGG
SSGG
Sg_ABt
_pSg
_A13At
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
yqd__GSgz_
So26XRAnalysisCoreSwiftModelerRz
Rd__r__lXX
ySo19XRAnalysisCoreValueCG
So19XRAnalysisCoreValueCG
So19XRAnalysisCoreValueC5value_SS6stringtG
SSGG
_SSt
SSG_G
SSGG
SSGG
SSG_G
SSGG
SSGG
So19XRAnalysisCoreValueCG
ySo12XRStringPairCG
ySS3key_SSSg5valuetG
SS3key_SSSg5valuet
_So19XRAnalysisCoreValueCt
_ShySSGt
ShySSGG
_GGG
SSGG
ySSG
SSGG
RawValue
inputTableTasks
inputTableTransactions
inputTableTransactionStates
outputTable
cachedTasks
cachedTransactionColors
inputTableTransactions
inputTableTransactionStates
outputTable
cachedTransactions
layoutManager
alreadyWrittenDrawables
color
layoutQualifiers
wrappedLayoutManager
rowIndexWithinSameProcessAndDomain
rowIndexWithinSameProcessAndDomainAndConnection
processID
domain
connection
aggregationType
count
previousTimestamp
countByProcess
previousTimestampByProcess
previouslySeenEventID
task
transaction
deviceSessionID
processID
AllCases
RawValue
timestamp
eventType
processInfo
intervalId
inputTableTransactions
inputTableHarLogs
inputTableTaskEvents
outputTableTransactions
outputTableTransactionStates
jsonDecoder
sessionByTaskID
transactionsWaitingForAdditionalData
additionalInfo
endReasonValue
transactionID
taskID
request
response
serverIPAddress
connection
timings
fetchType
mimeType
text
method
httpVersion
headers
postData
headersSize
bodySize
status
statusText
content
redirectURL
cacheLookup
dnsLookup
connectionEstablishment
secureConnectionEstablishment
sendingRequest
receivingResponse
name
value
RawValue
size
encoding
start
base64
inputTable
outputTableTaskStarts
outputTableTaskEnds
previouslySeenTaskResumeUUIDs
cachedSessionNames
signpostIdToTaskUUID
traceRelativeTimestamp
taskUUID
sessionUUID
additionalInfo
session
taskIdentifier
taskDescription
method
attribution
sessionDescription
isSharedSession
isEphemeralSession
backgroundIdentifier
domain
code
localizedDescription
description
error
groupedActiveIntervals
lastInsertedIntervalStart
start
identifier
rowIndex
inKdebugTable
inKdebugStringTable
outDyldLibraryTable
lastUUIDEventByThread
libraryUUIDsByPath
libraryPathsByHandle
openIntervals
dyldEvent
hasSentDyldEvent
lastSharedCacheEvent
stringBank
threadsByProcess
trackContainmentByThread
start
duration
process
domain
serverIP
session
layoutQualifier
uniqueTaskID
developerTaskID
taskDescription
sessionIsEphemeral
backtraceOfResumeCall
httpMethod
path
queryString
requestAttribution
wasSuccessful
errorDomain
errorCode
errorLocalizedDescription
errorOverallDescription
transactionId
connectionID
state
containmentLevel
standaloneLabel
labelInContainmentHierarchy
tooltip
color
taskId
layoutQualifierForConnection
layoutQualifierForDomain
label
drawableType
time
message
harJson
count
isAllProcesses
aggregationType
timestamp
backtrace
eventType
signpostId
signpostName
additionalInfo
endReason
httpStatusCode
requestHeaders
requestBody
httpVersion
endReasonString
httpStatusText
errorString
responseHeaders
responseBody
responseMimeType
redirectURL
fetchType
blockedDuration
cacheLookupDuration
dnsLookupDuration
tcpConnectionSetupDuration
secureConnectionSetupDuration
requestDuration
waitingForServerDuration
responseDuration
invalid
success
redirect
authenticationChallenge
failure
retry
tryNextProxy
RawValue
developer
user
cacheLookup
blocked
dnsLookup
tcpSetup
tlsSetup
quicSetup
request
waitingForResponse
response
begin
tableDefinition
$__lazy_storage_$_values
tableDefinitions
readCursor
shouldYield
wasInterrupted
tableID
schema
columns
ColumnsType
Element
Iterator
thread
uuidArray
loadAddress
fsid
fsidObjNo
fsidGeneration
pathID
type
map32
unmap
unmap32
sharedCache
sharedCache32
RawValue
startTime
endTime
tracePairID
thread
backtrace
trackLevel
pathID
loadAddress
handle
time
cpuIndex
thread
callstack
event_class
event_subclass
code
function
arg1
arg2
arg3
arg4
string
start
duration
process
backtrace
type
path
uuid
loadAddress
trackContainmentLevel
color
method
attribution
inputTaskStartEvents
inputTaskEndEvents
inputTransactionEvents
outputAggregationSummary
taskCollector
transactionCollector
inputTableTaskStarts
inputTableTaskEnds
inputTableHarLogs
intervalOutputTable
tasksLayoutManager
incompleteTaskIntervalStarts
completedTasks
traceRelativeTimestamp
layoutQualifier
taskUUID
serverIPAddress
fetchType
RawValue
