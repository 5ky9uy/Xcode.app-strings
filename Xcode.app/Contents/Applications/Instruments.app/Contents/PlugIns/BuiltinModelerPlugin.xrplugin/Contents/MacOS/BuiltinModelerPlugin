@(#)PROGRAM:BuiltinModelerPlugin  PROJECT:Instruments-64562.5
 n;^
Qkkbal
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
syscall-name-mapxt-switch-samplecontext-switch-s-actor-executionswift-actor-execk-creation-eventswift-task-creatsk-count
swift-running-taalive-task-countswift-alive-tasktotal-task-countswift-total-taskactor-queue-sizeswift-actor-queutime
swift-actor-lifeswift-actor-count
ft-task-lifetimeswift-task-lifetask-relationshipswift-task-relatncellation-eventswift-task-canceswift-task-state
start
duration
thread
core
state
process
cputime
waittime
priority
note
summary
start
duration
thread
state
process
priority
time
thread
event
process
priority
note
time
thread
core-index
thread-state
arg1
arg2
arg3
arg4
function
class
subclass
code
cp-user-callstack
cp-kernel-callstack
time
time
thread
state
priority
start
duration
thread
process
call
cputime
waittime
arg1
arg2
arg3
arg4
return
errno
backtrace
note
signature
time
class
subclass
code
name
start
duration
thread
core
state
process
cputime
waittime
priority
note
summary
start
duration
thread
operation
process
cputime
waittime
address
size
backtrace
time
thread
process
core-index
thread-state
backtrace
start
duration
task
state
backtrace
process
thread
resume-backtrace
suspend-backtrace
narrative
timestamp
task
start
duration
parent-task
child-task
start
duration
task
start
duration
count
start
duration
count
start
duration
count
timestamp
task
thread
backtrace
start
duration
actor
task
thread
start
duration
actor
count
start
duration
count
start
duration
actor-class
actor
time
thread
process
event-type
scope
identifier
name
format-string
backtrace
subsystem
category
message
22SystraceSyscallModeler
12XRCXXModelerI22SystraceSyscallModeler20XRCXXRequiredSchemasIJ6Kdebug14SyscallNameMapEE20XRCXXOptionalSchemasIJ16ThreadStateTableEE18XRCXXOutputSchemasIJ7SyscallEEE
22XRCXXModelingInterface
6KdebugIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E6KdebugE
14SyscallNameMapIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E14SyscallNameMapE
16ThreadStateTableIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E16ThreadStateTableE
7SyscallIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E7SyscallE
20VirtualMemoryModeler
12XRCXXModelerI20VirtualMemoryModeler20XRCXXRequiredSchemasIJ6KdebugEE20XRCXXOptionalSchemasIJEE18XRCXXOutputSchemasIJ18VirtualMemoryTableEEE
18VirtualMemoryTableIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E18VirtualMemoryTableE
18SystemTraceModeler
12XRCXXModelerI18SystemTraceModeler20XRCXXRequiredSchemasIJ13TidPidMapping6Kdebug19ThreadSnapshotTableEE20XRCXXOptionalSchemasIJEE18XRCXXOutputSchemasIJ16ThreadStateTable13CPUStateTable18ContextSwitchTableEEE
19ThreadSnapshotTableIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E19ThreadSnapshotTableE
16ThreadStateTableIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E16ThreadStateTableE
13CPUStateTableIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E13CPUStateTableE
18ContextSwitchTableIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E18ContextSwitchTableE
13TidPidMappingIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E13TidPidMappingE
14CSwitchModeler
12XRCXXModelerI14CSwitchModeler20XRCXXRequiredSchemasIJ6KdebugEE20XRCXXOptionalSchemasIJEE18XRCXXOutputSchemasIJ7CSwitchEEE
7CSwitchIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E7CSwitchE
23SwiftConcurrencyModeler
12XRCXXModelerI23SwiftConcurrencyModeler20XRCXXRequiredSchemasIJ10OSSignpostEE20XRCXXOptionalSchemasIJEE18XRCXXOutputSchemasIJ9TaskState21TaskCancellationEvent16TaskRelationship12TaskLifetime14AliveTaskCount16RunningTaskCount14TotalTaskCount17TaskCreationEvent14ActorExecution14ActorQueueSize10ActorCount13ActorLifetimeEEE
10OSSignpostIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E10OSSignpostE
9TaskStateIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E9TaskStateE
21TaskCancellationEventIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E21TaskCancellationEventE
16TaskRelationshipIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E16TaskRelationshipE
12TaskLifetimeIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E12TaskLifetimeE
17TaskCreationEventIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E17TaskCreationEventE
14ActorExecutionIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E14ActorExecutionE
14ActorQueueSizeIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E14ActorQueueSizeE
13ActorLifetimeIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E13ActorLifetimeE
14AliveTaskCountIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E14AliveTaskCountE
16RunningTaskCountIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E16RunningTaskCountE
14TotalTaskCountIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E14TotalTaskCountE
10ActorCountIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E10ActorCountE
NSt3__120__shared_ptr_emplaceI17TaskCreationEventIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceINS_13unordered_setIyNS_4hashIyEENS_8equal_toIyEENS_9allocatorIyEEEENS6_IS8_EEEE
NSt3__120__shared_ptr_emplaceI14AliveTaskCountIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14TotalTaskCountIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI16TaskRelationshipIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI9TaskStateIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI12TaskLifetimeIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14ActorExecutionIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI16RunningTaskCountIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI21TaskCancellationEventIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI10ActorCountIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI13ActorLifetimeIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14ActorQueueSizeIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__117bad_function_callE
NSt3__110__function6__funcIZN23SwiftConcurrencyModeler9speculateEvEUlR11XRSwiftTaskE_NS_9allocatorIS5_EEFvS4_EEE
NSt3__110__function6__baseIFvR11XRSwiftTaskEEE
ZN23SwiftConcurrencyModeler9speculateEvEUlR11XRSwiftTaskE_
NSt3__110__function6__funcIZN23SwiftConcurrencyModeler9speculateEvEUlyE_NS_9allocatorIS3_EEFvyEEE
NSt3__110__function6__baseIFvyEEE
ZN23SwiftConcurrencyModeler9speculateEvEUlyE_
BuiltinModelerPlugin
Metric
InputSchema OutputSchema
XRAnalysisCoreTableAccess
DVTInstrumentsAnalysisCore
DYLDActivityIntervalColumns
URLSessionTaskContainmentsModeler
TransactionContainmentsModeler
TransactionInterval
RowIndices
LayoutManager
HTTPAggregationCollector
ProcessInfo
AggregationType
HTTPEvent
_taskUUIserverIP_fetchTyD
Address
KdebugStringColumns
KdebugColumns
TransactionEnrichmentModeler
TransactionInterval
Request
BodyData
HAREntry
CodingKeys
KeyValue
CustomTimingsForInstruments
Response
RelativeInterval
Content
ContentEncoding
method
httpVersheaders
postDataheadersSbodySize
size
mimeTypetext
encoding
status
statusTehttpVersheaders
content
redirectheadersSbodySize
URLSessionTaskEventsModeler
TaskStartEvent
AdditionalInfo
TaskCompleteAdditionalInfo
ErrorInformation
CodingKeys
NonOverlappingIntervalsLayoutManager
LayedOutInterval
SymbolicationModeler
AggregationDrawablesColumns
URLSessionTaskEndColumns
OsSignpostColumns
URLSessionTaskStartColumns
HarLogColumns
TransactionIntervalBasicInfoColumns
TransactionDrawablesColumns
TaskDrawablesColumns
TransactionStatesColumns
TransactionIntervalFullInfoColumns
URLSessionTaskIntervalColumns
_NSURLSessionTransactionEndReason
TransactionState
URLRequestAttribution
EventType
TableDefinitionColumns
TableValuesContainer
ColumnsType
TableEntry
OneTable
TwoTables
ThreeTables
BaseTableReadCursor
AnalysisCoreSomeSingleRowReader
TypedReadCursor
AnalysisCore
SingleRowReader
TableDefinition
DyldUUIDEvent
DyldUUIDEventType
DYLDActivityModeler
DYLDActivity
DYLDActivityType
DYLDActivityMetric
DyldLibraryLoadColumns
AdditionalInformation
CodingKeys
method
attribut
HTTPAggregationModeler
URLSessionTaskIntervalModeler
TaskStartEvent
TaskEndEvent
TaskEndValuesContainer
HAREntry
CodingKeys
_taskUUIserverIP_fetchTyD
Address
_PMCStringValue
.cxx_destruct
_counterInfoMap
T#,R
_getNormalizedWeightForCSwitch:
T@"<XRSystraceNoteBuilderDelegate>",W,N,V_delegate
_handleSyscall:
T@"NSString",&,N,V_backgroundIdentifier
_incompleteLogs
T@"NSString",R,C
_recordSyscall:
TQ,N
_storedThreadAndProcessFromTID:
TQ,N,VmachProcessingTime
_syscallNameMap
TQ,R
_trackAssigners
Tc,N,GisShared,V_shared
enumerateObjectsAndIntegerKeys:
__tempStringImpl
isProxy
__tempValue2
lowercaseString
_activeShaders
setOutputCount:
_apsStreamBinding
tableID
.cxx_construct
_backtraceFixer
JSONObjectWithData:options:error:
_cpuStateSigMap
T@"<XRSystraceNarrativeBuilderDelegate>",W,N,V_delegate
_gpuInfoBinding
T@"NSData",&,N,V_additionalInformation
_handleVMFault:
T@"NSString",&,N,V_sessionName
_pendingShaders
T@"XRAnalysisCoreValue",&,N,V_internalUUID
_shared
TQ,N,VinputCount
_syscallBinding
TQ,N,VoutputCount
_totalOccupancy
Tc,N,GisEphemeral,V_ephemeral
dealloc
UTF8String
getTID:process:
__tempValue
isValid
_activeKicks
release
_additionalInformation
setSessionName:
_averageAndRecordStateChanges:isFinal:
_backgroundIdentifier
_cacheTID:
_cacheThreadState:
_checkSyscallEnd:threadSig:
_cmdBufferIdToFrameAssignment
_commandBufferCompletedBinding
_contextSwitchBinding
_contextSwitchWriteCursor
_core
_coreCount
_counterInfoBinding
_counterIntervalBinding
_counterIntervalCursor
_counterValueBinding
_countersProfileBinding
_countersWriteCursor
_cpuNarrativeBinding
_cpuNarrativeWriteCursor
_cpuProfileBinding
_cpuProfilerWriteCursor
_cpuStateBinding
_cpuStateWriteCursor
_cpus
_delegate
_desiredState
_ephemeral
_factory
_fixBTInvocation
_fixBTOracleToken
_fixedBacktrace:atTime:
_fixedBacktraces
_fixupCallstack:atTime:
_fixupCallstacks:userBT:process:atTime:
_frameAssignmentBinding
_getNormalizedWeight:
_gpuExecutionPointsBinding
_gpuInfoMap
_gpuSubmissionToCommandBufferBinding
_handleCPUState:
_handleExecution:
_handleNewCounterValue:
_handleNewShaderInterval:
_handleNewShaderPC:timestamp:
_handleThreadState:
_handleThreadStateTransfer:data:parameters:
_hasPMICountFeature
_hasTotalOccupancy
_initSoftwareCounters
_initStateSignatureMapping
_inputBinding
_inputBindings
_internalUUID
_isInternal
_kdebugBinding
_kdebugCountersBinding
_knownCompositorBinding
_knownCompositors
_lastSampleIndex
_mod
_modeler
_narrative
_narrativeSupport
_normalizedWeight
_normalizer
_noteBuilder
_outputBinding
_performanceDeviceStateBinding
_performanceDeviceStateCursor
_performanceStateInfoBinding
_performanceStateInfoMap
_pmiCountersBinding
_previousState
_previousTimestamp
_record:newCPUState:
_recordCPUNarrative:start:duration:cpu:backtrace:
_recordInterval:
_recordInterval:unit:description:
_recordSysload:currentTime:
_recordTheadStateContextSwitch:timestamp:
_recordThreadNarrative:start:duration:threadSig:processSig:backtrace:
_recordThreadState:newState:
_recordVM:
_recordWaitingThreads
_resolveSoftwareCounters
_sampleProcessors
_sampleRateMS
_sessionName
_shaderInfoMap
_shaderIntervalBinding
_shaderIntervalCursor
_shaderListBinding
_shaderProfilerIntervalBinding
_shaderSampleBinding
_stateRecords
_storedThreadAndProcesses
_submissionToCommandBuffer
_submissionToFrameInfo
_syscallNameMapBinding
_syscallWriteCursor
_sysloadWriteCursor
_systemLoad
_systemLoadBinding
_targetCompability
_targetPid
_threadMap
_threadNarrativeBinding
_threadNarrativeWriteCursor
_threadSnapshotBinding
_threadStateBinding
_threadStateSigMap
_threadStateWriteCursor
_threadToSyscall
_threads
_tickBinding
_tidPidMappingBinding
_tidToPid
_timeProfileBinding
_timeSampleBinding
_timeSampleWriteCursor
_topPerformanceLimiter
_triggerInputBinding
_vmBinding
_vmWriteCursor
accessRights
activateWithOptions:
additionalInformation
advanceToNextRow
appendData:
appendNewRow
arrayWithObjects:count:
attributes
autorelease
backgroundIdentifier
bindingParameters
boolValue
caseInsensitiveCompare:
class
clear
columnCount
columnIDForMnemonic:
conformsToProtocol:
contextSwitchNote:
copyFromReadCursor:column:toColumn:
core
count
cpuStateFromCore:
cpuStateFromSignature:
cpuStateNarrative:threadState:
createOracleFunctionInvocation
data
debugDescription
debuggingAsynchronousPanicStop
debuggingDumpWorkingMemoryForContext:
debuggingEnumerateContextStrings:
debuggingExecuteCommand:context:
debuggingSwapLogString:
delegate
description
dictionary
enumerateColumns:
enumerateKeyValuePairs:
ephemeral
extractColumnIDs:forMnemonics:
firstObject
formatNarrative:
formatNarrative:args:
formatNarrativeWithStringSignatures:
getArgumentAsValue:atIndex:
getBacktraceFragment:process:frames:
getOutput:
getPID:sessionUUID:
getProcessDetails:session:
getProcessValue:pid:sessionUUID:
getStoredUInt64Array:
getThread:tid:process:
getThreadDetails:tid:
getValue:fieldIndex:
getValue:implementation:engineeringType:
getValue:signature:engineeringType:
getValue:signatures:engineeringType:
hasPrefix:
hasSuffix:
hash
implValue
implementationTypeFromID:
init
initWithCXXSystraceModeler:
initWithData:encoding:
initWithDelegate:factory:
initWithFactory:
initWithFirst:second:
initWithType:
inputCount
intValue
internalUUID
invokeOracleFunction:invocation:
isEphemeral
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
isShared
lastObject
leadingEventHorizon
length
logErrorIfDataIsNotValidJSON:
machProcessingTime
modelingActivityCompletedWithParameters:
name
objectAtIndexedSubscript:
objectForKeyedSubscript:
objectValue
oracleFunctionTokenWithName:
outputCount
parameters
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
populateOutputTables:usingObserverations:parameters:checkToYieldBlock:
populateOutputTables:usingObserverations:parameters:yieldFlag:
populateSpeculationTables:parameters:
primaryTimeColumnID
rangeOfString:
registerModelerWithIdentifier:modelerClass:
resetModelerStateWithTables:parameters:
respondsToSelector:
retain
retainCount
schema
self
sessionName
setAdditionalInformation:
setArgumentIndex:value:
setBackgroundIdentifier:
setData:
setDelegate:
setEphemeral:
setInputCount:
setInternalUUID:
setKeyValueArray:forColumn:
setMachProcessingTime:
setObject:forKeyedSubscript:
setOutput:
setShared:
setSignature:forColumn:
setString:
setString:forColumn:
setTrailingEventHorizon:
setTypedArrayWithValues:
setUInt32:forColumn:
setUInt64:forColumn:
setUInt64Array:forColumn:
setUInt64ArrayWithValues:
setURLSession:forColumn:
setUint32:
setUint64:
setValue:forColumn:
shared
sharedFactory
signature
signatureFromString:engineeringType:
signatureOfThread:
spec
speculationIsFinal
string
stringArrayValue
stringWithFormat:
stringWithUTF8String:
superclass
syscallNoteAndSignature:syscallName:
syscallThreadStateNarrative:
threadNote:data:
threadNote:kdebugData:
threadStateFromSignature:
threadStateFromTid:
threadStateNarrative:percentageOf:syscallName:
threadSummary:
trailingEventHorizon
uint32
uint64
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
uuidFromEngineeringValue
valueFactory
valueForColumnId:
vmFaultThreadStateNarrative:
writeCursorForTableID:
zone
coreprofile-pmi
kdebug-counters-with-kdebug-sample
kdebug-counters-with-pmi-sample
cpu-profile
v32@?0@"XRAnalysisCoreTable"8Q16*24
target-pid
time
thread
core-index
arg1
arg2
arg3
arg4
function
class
subclass
code
cp-kernel-callstack
counters-array
thread-state
pmi-count
process
core
weight
stack
vector
kdebug
tick
syscall-name-map
tid-pid-mapping
thread-snapshot
cpu-state
context-switch
system-load
virtual-memory
syscall
vm-page-size
TODO
Running
Blocked
Idle
Syscall
Unknown
Over
Partial
ThreadState
ContextSwitch
FIXBT
name
state
priority
start
duration
cputime
waittime
note
summary
event
load
ui-load
ui-load-commitment
operation
address
size
backtrace
call
return
errno
signature
Zero Fill
Page In
Copy On Write
Page Cache Hit
Non-Zero Fill
Guard Page
File Backed Page In
Anonymous Memory Page In
Decompress Memory
Decompress Memory from Swap
Copy On Read
Page Out
Handling Interrupt
XRSystraceCPUStateToString
XRSystraceModelerShared.h
false
Runnable
Interrupted
Wait
Preempted
Suspended
Terminating
Terminated
XRSystraceThreadStateToString
-[XRHTTPArchiveLoggingModeler populateOutputTables:usingObserverations:parameters:yieldFlag:]
XRHTTPArchiveLoggingModeler.mm
logMessageParts.count <= 2
logMessageParts.count == 2
logMessageParts.count == 1
logMessagePartOne.isValid
os-log
message
initColumnIDs
XRHTTPArchiveLoggingModeler.h
extractedColumns == YES
timestamp
har-entry-json
device-gpu-info
gpu-shader-profiler-sample
gpu-shader-profiler-interval
metal-command-buffer-frame-assignment-internal
metal-command-buffer-frame-assignment
-internal
metal-gpu-submission-to-command-buffer-id-internal
metal-gpu-submission-to-command-buffer-id
metal-gpu-execution-points-internal
metal-gpu-execution-points
metal-command-buffer-completed-internal
metal-command-buffer-completed
metal-shader-profiler-shader-list-internal
metal-shader-profiler-shader-list
metal-known-compositor-process-internal
metal-known-compositor-process
metal-shader-profiler-intervals-internal
metal-shader-profiler-intervals
Vertex
Fragment
Compute
Raytracing
Shader Timeline
Shader 0x%llx
value
XRAnalysisCoreReadCursorGetValue(streamCursor, tableID, &value)
shared
ephemeral
pmi-threshold
kdebug-counters-with-time-sample
sample-rate-micro-seconds
counters-profile
sample-type
forced off %XRCPUCoreTypeID% by %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
balanced off %XRCPUCoreTypeID% to optimize the system's CPU performance
yielding %XRCPUCoreTypeID% to %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
taken off CPU temporarily to cool the processor and surrounding hardware
made runnable by a timer expiration (handled by %XRCPUCoreTypeID%'s timer interrupt handler)
made runnable by an interrupt handler on %XRCPUCoreTypeID%
made runnable by %XRThreadTypeID% running on %XRCPUCoreTypeID%
parked waiting for new work items from dispatch
waiting for event/lock with id %XRVirtualMemoryAddressTypeID%
%thread-state% at priority %sched-priority% on %core%
%thread-state% on %core%
%thread-state% at priority %sched-priority%
%thread-state%
lost %XRCPUCoreTypeID% to %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
gave %XRCPUCoreTypeID% voluntarily to %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
%XRCPUCoreTypeID% became idle (inferred)
%XRCPUCoreTypeID% became idle
will wait for event/lock with id %XRVirtualMemoryAddressTypeID% when it blocks
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%) = %XRSizeInBytesTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, off:%XRSizeInBytesTypeID%) = %XRSizeInBytesTypeID%
| X_OK
| W_OK
| R_OK
F_OK
0 (reachable)
%XRSystemCallNameTypeID%(path, amode:%XRSymbolicArgumentTypeID%) = %XRSymbolicArgumentTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%) = %XRSymbolicArgumentTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, flags:%XRRegisterContentsTypeID%) = %XRSizeInBytesTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, flags:%XRRegisterContentsTypeID%,...) = %XRSizeInBytesTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, msg:%XRVirtualMemoryAddressTypeID%, flags:%XRRegisterContentsTypeID%) = %XRSizeInBytesTypeID%
MADV_NORMAL
MADV_RANDOM
MADV_SEQUENTIAL
MADV_WILLNEED
MADV_DONTNEED
MADV_FREE
MADV_FREE_RESUSABLE
MADV_FREE_REUSE
%XRSystemCallNameTypeID%(addr:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, advice:%XRSymbolicArgumentTypeID%)
told the kernel that %XRSizeInBytesTypeID% of memory starting at %XRVirtualMemoryAddressTypeID% became available for reuse
| PROT_READ
| PROT_WRITE
| PROT_EXEC
PROT_NONE
%XRSystemCallNameTypeID%(addr:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, prot:%XRSymbolicArgumentTypeID%)
| MAP_SHARED
| MAP_PRIVATE
| MAP_FIXED
| MAP_RENAME
| MAP_NOEXTEND
| MAP_HASSEMAPHORE
| MAP_NOCACHE
| MAP_JIT
| MAP_ANON
| MAP_FILE
| MAP_RESILIENT_CODESIGN
| MAP_RESILIENT_MEDIA
%XRSystemCallNameTypeID%(addr:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, prot:%XRSymbolicArgumentTypeID%, flags:%XRSymbolicArgumentTypeID%) = %XRVirtualMemoryAddressTypeID%
%XRSystemCallNameTypeID%
EAGAIN was returned which is normal for a non-blocking file descriptor
end-of-file was encountered
the permission bits of the file mode do not permit the requested access, or search permission is denied on a component of the path prefix.
the call failed with an errno value of %XRSymbolicErrnoValueTypeID%
the call failed with an error: %XRSymbolicErrnoValueTypeID%
Ran %XRThreadTypeID% at priority %XRSchedulingPriorityTypeID% for %XRDurationOnCPUTypeID%.
Servicing an interrupt handler, and preempting %XRThreadTypeID% for %XRDurationOnCPUTypeID%.
Servicing an interrupt handler for %XRDurationOnCPUTypeID%.
Idled waiting for work or interrupts to handle for %XRDurationOnCPUTypeID%.
Virtual memory %vm-op% took %duration%.
Called "%syscall%" for %duration-waiting%.
Called "%syscall%" for %duration-waiting%, %narrative%.
Ran for %duration-on-core% on %core% at priority %sched-priority%.
The thread was %narrative%. It waited for an available CPU for %duration-waiting% (%percent% of %syscall%'s duration) before running again at priority %sched-priority%.
The thread was %narrative%. It waited for an available CPU for %duration-waiting% before running again at priority %sched-priority%.
The thread was made runnable. It waited for an available CPU for %duration-waiting% (%percent% of %syscall%'s duration) before running again at priority %sched-priority%.
The thread was made runnable. It waited for an available CPU for %duration-waiting% before running again at priority %sched-priority%.
Interrupted for %duration-on-core% (%percent% of %syscall%'s duration) while %core% serviced an interrupt handler.
Interrupted for %duration-on-core% while %core% serviced an interrupt handler.
Preempted for %duration-on-core% (%percent% of %syscall%'s duration) because thread was %narrative%.
Preempted for %duration-on-core% because thread was %narrative.%
Preempted at priority %sched-priority% for %duration-on-core% (%percent% of %syscall%'s duration) because thread was %narrative%.
Preempted at priority %sched-priority% for %duration-on-core% because thread was %narrative%.
Preempted for %duration-on-core% (%percent% of %syscall%'s duration).
Preempted for %duration-on-core%.
Preempted at priority %sched-priority% for %duration-on-core% (%percent% of %syscall%'s duration).
Preempted at priority %sched-priority% for %duration-on-core%.
Blocked for %duration-waiting% (%percent% of %syscall%'s duration) starting at priority %sched-priority%. Thread is %narrative%.
Blocked for %duration-waiting% (%percent% of %syscall%'s duration) starting at priority %sched-priority%.
Blocked for %duration-waiting% starting at priority %sched-priority%.  Thread is %narrative%.
Blocked for %duration-waiting% starting at priority %sched-priority%.
Idle for %duration-waiting%. Thread is %narrative%.
Idle for %duration-waiting%.
basic_string
getCursor
XRCXXModeling.h
_sharedState
-[XRTimeSamplerModeler _getNormalizedWeight:]
XRTimeSamplerModeler.mm
time-sample
context-switch-sample
time-profile
record-waiting-threads
gpu-counter-info
gpu-counter-value
gpu-aps-stream
metal-gpu-counter-intervals
Total Occupancy
-1.Total Occupancy
-2.Top Performance Limiter
%fixed-decimal%%string% (%string%)
counter-id
max-value
accelerator-id
description
group-index
ring-buffer-count
require-weighted-accumulation
sample-interval
sample-index
ring-buffer-index
device-name
vendor-name
mobile
label
percent-value
is-percentage
num-pcs
submission-id
datamaster
frame-number
pso-label
event-name
shader-type
percent-of-kick
total-kick-percent
event-priority
channel-name
event-depth
connection-UUID
source-index
buffer-index
source-type
stream
pso-name
pc-start
pc-end
cmdbuffer-id
frame-color
is-compositor
gpu-submission-id
channel-id
compositor-name
consistent-state-available
consistent-state-enabled
consistent-state-sustained
consistent-state-mapping
consistent-state
desired-state
%d.%@
Percentage
limiter
occupancy
bandwidth
 GB/s
vertex
fragment
compute
tile
gpu-performance-state-info
requested-consistent-state
gpu-performance-device-state-intervals-internal
gpu-performance-device-state-intervals
v16@?0r^{XRGPUPerformanceDeviceState=QQQII}8
Radeon Pro Vega 56
Radeon Pro Vega 64
Radeon Pro Vega 64X
Radeon Pro Vega 48
Radeon Pro Vega 16
Radeon Pro Vega 20
AMD Radeon Pro Vega II
AMD Radeon Pro Vega II Duo
AMD Radeon Pro 5300M
AMD Radeon Pro 5500M
AMD Radeon Pro 5600M
AMD Radeon Pro 5300
AMD Radeon Pro 5500 XT
AMD Radeon Pro 5700
AMD Radeon Pro 5700 XT
AMD Radeon Pro W5700X
AMD Radeon Pro W5500X
Radeon Pro Navi 21 GL-XTA
User
Supervisor
Uninterruptible
stringToThreadState
XRSystraceModelerShared.mm
false && "We should have all the thread states listed above."
COM.APPLE.DT.INSTRUMENTS.SCHEDULING
COM.APPLE.DT.INSTRUMENTS.SYSCALLS
COM.APPLE.DT.INSTRUMENTS.VM
COM.APPLE.DT.INSTRUMENTS.THREAD-NARRATIVE
COM.APPLE.DT.INSTRUMENTS.CPU-NARRATIVE
COM.APPLE.DT.INSTRUMENTS.CONTEXT-SWITCH
COM.APPLE.CFNETWORK.HARLOGGING.MODELER
COM.APPLE.CFNETWORK.HTTP-TRACING.TRANSACTION-ENRICHMENT-MODELER
COM.APPLE.CFNETWORK.HTTP-TRACING.TRANSACTION-CONTAINMENT-MODELER
COM.APPLE.CFNETWORK.HTTP-TRACING.TASK-EVENTS-MODELER
COM.APPLE.CFNETWORK.HTTP-TRACING.TASK-INTERVAL-MODELER
COM.APPLE.CFNETWORK.HTTP-TRACING.TASK-CONTAINMENT-MODELER
COM.APPLE.CFNETWORK.HTTP-TRACING.AGGREGATION-MODELER
COM.APPLE.DT.INSTRUMENTS.CPU-PROFILER
COM.APPLE.METAL-GPU-COUNTERS
COM.APPLE.METALSYSTRACE-GPU-SHADER-PROFILER-INTERNAL
COM.APPLE.METALSYSTRACE-GPU-SHADER-PROFILER
COM.APPLE.GPU-PERFORMANCE-DEVICE-STATE
COM.APPLE.GPU-PERFORMANCE-DEVICE-STATE-INTERNAL
COM.APPLE.DT.INSTRUMENTS.GENERIC-COUNTERS
COM.APPLE.DT.INSTRUMENTS.TIME-PROFILER
COM.APPLE.DT.INSTRUMENTS.DYLD-ACTIVITY
COM.APPLE.DT.INSTRUMENTS.DYLD-TRACING.KTRACE-MODELER
COM.APPLE.DT.INSTRUMENTS.SWIFT-CONCURRENCY
readValue
XRCXXSystraceModelers.h
a <= kdebug.Time
(a + b) >= kdebug.Time
getWriteValue
currentWritableSchemaPositionIsValid(position)
setValue
res && "Oops, couldn't set the value."
It2 != _lastState.end()
os-signpost
swift-task-state
swift-task-cancellation-event
swift-task-relationship
swift-task-lifetime
swift-alive-task-count
swift-running-task-count
swift-total-task-count
swift-task-creation-event
swift-actor-execution
swift-actor-queue-size
swift-actor-count
swift-actor-lifetime
task_lifetime
Begin
XRBacktraceTranslationOracle
job_run
task_wait
task_status_changed
Event
task_continuation_init
task_continuation_await
task_continuation_resume
task_continuation
actor_lifetime
actor_enqueue
actor_dequeue
actor_job_queue
operator()
Creating
Waiting
Ending
Enqueued
Continuation
Ran for %duration% on actor %swift-actor% on actor-isolated context at %text-symbol% on thread %thread% with priority %swift-task-priority%
Ran for %duration% on %thread% starting at %text-symbol% with priority %swift-task-priority%
Ran for %duration% on %thread% with priority %swift-task-priority%
Default
Utility
Background
User Initiated
Suspended for %duration%
Waited on %swift-task% task for %duration%
Reference to task was held for an additional %duration%
Was enqueued on %swift-actor% actor for %duration%
Creating for %duration%
Ran continuation for %duration% that ended with an error
Ran continuation for %duration% that ended without any errors
cpu-narrative
thread-narrative
significance
narrative
certainty
Cache Lookup
QUIC
Sending Request
Waiting for Response
Receiving Response
Transaction
Task
Local Cache
Revalidated Cache
Server Push
Network Load
_transactionUUID
_taskUUID
request
response
serverIPAddress
connection
_precisionPreservingTimings
_fetchType
cache
connect
secureConnection
send
receive
base64
XRAnalysisCoreFunctionInvocation
@16@0:8
v28@0:8I16@20
c28@0:8^@16I24
v24@0:8@16
c24@0:8^@16
@"<XRAnalysisCoreValueFactory>"16@0:8
v28@0:8I16@"XRAnalysisCoreValue"20
v24@0:8@"XRAnalysisCoreValue"16
XRSymbolicationResetOracle
XRSymbolicationHorizonOracle
XRCallstackFixupOracle
XRSymbolicationEmissionOracle
Symbolication
Oracle Invocation for: %s
com.apple.dt.Instruments
XRURLSessionTaskContainmentsModeler
c48@0:8@16@24@32@?40
v16@0:8
inputTableTasks
inputTableTransactions
inputTableTransactionStates
outputTable
cachedTasks
cachedTransactionColors
Did not find corresponding task interval for transaction `%{public}@` with task id: %{public}@
Did not find corresponding transaction color for transaction `%{public}@`
XRAnalysisCoreSwiftModeler
v32@0:8@"<XRIntKeyedDictionaryImmutable>"16@"XRAnalysisCoreModelingParameters"24
c48@0:8@"XRAnalysisCoreTableBindingsWrapper"16@"XRAnalysisCoreReadCursorWrapper"24@"XRAnalysisCoreModelingParameters"32@?<c@?>40
v32@0:8@"XRAnalysisCoreTableBindingsWrapper"16@"XRAnalysisCoreModelingParameters"24
XRTransactionContainmentsModeler
cachedTransactions
layoutManager
alreadyWrittenDrawables
_TtC20BuiltinModelerPluginP33_FDC95F2A35E24E849AD7B036511025EC19TransactionInterval
color
layoutQualifiers
Did not find corresponding transaction interval for transaction state `%{public}@` with transaction id: %{public}@
Transaction State
Connection Setup
_TtC20BuiltinModelerPlugin24HTTPAggregationCollector
aggregationType
count
previousTimestamp
countByProcess
previousTimestampByProcess
previouslySeenEventID
HTTP %s event %llu hasn't begin event. It's ok if event started before recording
Recieved duplications for end HTTP %s event %llu
Recieved duplications for end HTTP %s event %llu in process %llu
HTTP %s event %llu has already been handled
cp-user-callstack
XRTransactionEnrichmentModeler
inputTableHarLogs
inputTableTaskEvents
outputTableTransactions
outputTableTransactionStates
jsonDecoder
sessionByTaskID
transactionsWaitingForAdditionalData
_TtC20BuiltinModelerPluginP33_22B9F748C0431C4636ACE10518D51BDC19TransactionInterval
additionalInfo
endReasonValue
Received transaction interval with invalid transaction UUID. Analysis Core value for UUID  %{public}@
Failed to parse JSON %{public}@ due to error %{public}@
Did not find corresponding transaction interval for HAR JSON for transaction: %{public}@
transaction: %{public}@ had no associated task UUID
Unknown Connection
Transaction State starts before parent transaction. Transaction ID: %{public}@, state: %{public}@, relativeStartTime: %lld ns
Cache Connection
Developer Attributed
XRURLSessionTaskEventsModeler
inputTable
outputTableTaskStarts
outputTableTaskEnds
previouslySeenTaskResumeUUIDs
cachedSessionNames
signpostIdToTaskUUID
_TtC20BuiltinModelerPluginP33_86AF25F1718F504E7B367945C515792114TaskStartEvent
traceRelativeTimestamp
taskUUID
sessionUUID
session
Did not find a task UUID for signpost id, likely because we didn't receive the corresponding task start event.
Failed to decode additional info json for task resume event.
Failed to decode additional info json for task complete event: %@
sessionDescription
isEphemeralSession
backgroundIdentifier
localizedDescription
XRSymbolicationModeler
inKdebugTable
inKdebugStringTable
outDyldLibraryTable
lastUUIDEventByThread
libraryUUIDsByPath
dyldEvent
hasSentDyldEvent
lastSharedCacheEvent
stringBank
threadsByProcess
layout-qualifier
public-task-identifier
task-description
session-is-ephemeral
resume-backtrace
request-attribution
error-localized-description
error-overall-description
is-all-processes
aggregation-type
end-reason-string
http-status-code
http-status-text
response-headers
response-mime-type
secure-connection
request-duration
waiting-for-server
response-duration
additional-info-json
layout-qualifier-for-connection-grouping
layout-qualifier-for-domain-grouping
containment-level
standalone-label
label-in-containment-hierarchy
Authentication Challenge
tableDefinition
$__lazy_storage_$_values
tableDefinitions
_TtCOO20BuiltinModelerPlugin12AnalysisCore15TypedReadCursor19BaseTableReadCursor
readCursor
shouldYield
wasInterrupted
a b c 
a b 
XRDYLDActivityModeler
metric
inputKdebugSchema
inputKdebugStringSchema
outputActivitySchema
_TtC20BuiltinModelerPluginP33_B3B49E9CBCD0A738804575E7245D668212DYLDActivity
type
Objc image init %library-address%
Building Closure
Remove image callback %text-symbol%
Add image callback %text-symbol%
Map image %file-path%
Run static initializer %text-symbol%
dlclose %file-path%
dlopen_preflight %file-path%
dlopen %file-path%
Launch Executable
Remove Image Callback
Add Image Callback
Static Initializer
dlopen_preflight
track-containment-level
XRHTTPAggregationModeler
inputTaskStartEvents
inputTaskEndEvents
inputTransactionEvents
outputAggregationSummary
taskCollector
transactionCollector
v24@?0@"<XREngineeringValue>"8@"<XREngineeringValue>"16
Missing status code for transaction id: %{public}@
Invalid state for state interval: id: %{public}@, state: %{public}@
XRURLSessionTaskIntervalModeler
v32@0:8@16@24
inputTableTaskStarts
inputTableTaskEnds
intervalOutputTable
tasksLayoutManager
incompleteTaskIntervalStarts
completedTasks
_TtC20BuiltinModelerPluginP33_553A06DDDCC89470046C0190A5BC238E14TaskStartEvent
layoutQualifier
_TtC20BuiltinModelerPluginP33_553A06DDDCC89470046C0190A5BC238E12TaskEndEvent
No matching task start event for har log with task UUID %@
Task End event did not have a task UUID
No matching task resume event for complete event with task UUID %@
v28@?0C8@"XRAnalysisCoreTableColumn"12*20
Down-casted Array element failed to match the target type
Expected 
KeyPath<URLSessionTaskStartColumns, String>
Fatal error
NSArray element failed to match the Swift Array Element type
Expected 
KeyPath<URLSessionTaskEndColumns, String>
End of interval with identifier 
 was already set to 
BuiltinModelerPlugin/NonOverlappingIntervalsLayoutManager.swift
v32@?0@8Q16*24
com-apple-cfnetwork-task-intervals
com-apple-cfnetwork-harlogging-schema
com-apple-cfnetwork-task-ends
com-apple-cfnetwork-task-starts
com-apple-cfnetwork-aggregation-drawables
(DYLDActivity in _B3B49E9CBCD0A738804575E7245D6682)
dyld-activity-interval
dyld-library-load
KeyPath<OsSignpostColumns, String>
KeyPath<TransactionIntervalBasicInfoColumns, String>
com-apple-cfnetwork-transaction-states
com-apple-cfnetwork-transaction-intervals-full-info
com-apple-cfnetwork-transaction-intervals
KeyPath<TransactionIntervalFullInfoColumns, String>
com-apple-cfnetwork-transaction-drawables
KeyPath<URLSessionTaskIntervalColumns, String>
com-apple-cfnetwork-task-drawables
XRCPUProfilerModeler
XRAnalysisCoreModeler
NSObject
XRSystraceModeler
XRHTTPArchiveLoggingModeler
XRGPUShaderProfilerModeler
XRURLSession
XRGenericCountersModeler
XRSystraceNoteBuilder
XRSystraceNarrativeBuilder
XRTimeSamplerModeler
XRGPUCountersModeler
XRGPUPerformanceStateModeler
NoteBuilderDelegate
XRSystraceNoteBuilderDelegate
XRCXXSystraceSyscallModeler
XRCXXVirtualMemoryModeler
XRCXXSystemTraceModeler
XRCXXCSwitchModeler
XRCXXSwiftConcurrencyModeler
XRBuiltInModelerPlugin
XRPlugin
XRNarrativeModeler
c24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
c48@0:8r^{XRAnalysisCoreTableBindings=}16^{XRAnalysisCoreReadCursor=}24@32^Ac40
v32@0:8r^{XRAnalysisCoreTableBindings=}16@24
v24@0:8Q16
v24@0:8@16
@24@0:8@16
v24@0:8@?16
v16@0:8
v32@0:8@"<XRIntKeyedDictionaryImmutable>"16@"XRAnalysisCoreModelingParameters"24
c48@0:8r^{XRAnalysisCoreTableBindings=}16^{XRAnalysisCoreReadCursor=}24@"XRAnalysisCoreModelingParameters"32^Ac40
v32@0:8r^{XRAnalysisCoreTableBindings=}16@"XRAnalysisCoreModelingParameters"24
v24@0:8@"XRAnalysisCoreModelingParameters"16
@"NSMutableAttributedString"24@0:8@"NSMutableAttributedString"16
v32@0:8@"NSString"16@"NSString"24
@"NSString"24@0:8@"NSString"16
v24@0:8@?<v@?@"NSString">16
Q48@0:8Q16Q24@32Q40
@32@0:8Q16Q24
{XRSystracekDebugWithCountersBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"arg1Col"C"arg2Col"C"arg3Col"C"arg4Col"C"functionCol"C"classCol"C"subclassCol"C"codeCol"C"userBTCol"C"kernelBTCol"C"pmcArray"C}
{XRSystracePMIWithCountersBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"pmiCount"C"userBTCol"C"kernelBTCol"C"pmcArray"C}
{CPUSampleBinding="tableID"I"timeCol"C"threadCol"C"processCol"C"cpuCol"C"threadStateCol"C"weightCol"C"stackCol"C}
^{XRAnalysisCoreWriteCursor=}
{unique_ptr<XRPMCNormalizer, std::default_delete<XRPMCNormalizer>>="__ptr_"{__compressed_pair<XRPMCNormalizer *, std::default_delete<XRPMCNormalizer>>="__value_"^{XRPMCNormalizer}}}
@"<XRAnalysisCoreValueFactory>"
@"<XRAnalysisCoreReadOnly>"
v40@0:8Q16^{XRSystraceKdebugData=QIQQQQIIIIQiQQQQ@Q}24@32
{tuple<unsigned long long, unsigned long long>={__tuple_impl<std::__tuple_indices<0, 1>, unsigned long long, unsigned long long>=QQ}}24@0:8Q16
v24@0:8^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16
v32@0:8^{XRSystraceCPU=QQQQic}16^{XRSystraceCPU=QQQQic}24
v32@0:8^{XRSystraceSystemLoad=QQqqQQQ}16Q24
v32@0:8^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}24
v32@0:8^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16Q24
Q32@0:8Q16Q24
^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}24@0:8Q16
^{XRSystraceCPU=QQQQic}20@0:8I16
Q24@0:8Q16
{XRSystraceThreadStateBinding="tableID"I"startCol"C"durationCol"C"threadCol"C"cpuCol"C"stateCol"C"processCol"C"cpuTimeCol"C"waitTimeCol"C"priorityCol"C"noteCol"C"summaryCol"C}
{XRSystraceContextSwitchBinding="tableID"I"timeCol"C"cpuCol"C"eventCol"C"threadCol"C"processCol"C"noteCol"C"priorityCol"C}
{XRSystraceCPUStateBinding="tableID"I"startCol"C"durationCol"C"cpuCol"C"stateCol"C"threadCol"C"processCol"C"priorityCol"C}
{XRSystraceTickBinding="tableID"I"timeCol"C}
{XRSystraceSystemLoadBinding="tableID"I"startCol"C"durationCol"C"loadCol"C"uiLoadCol"C"uiLoadCommitmentCol"C}
{XRSystraceVMBinding="tableID"I"startCol"C"durationCol"C"threadCol"C"processCol"C"operationCol"C"cpuTimeCol"C"waitTimeCol"C"addressCol"C"sizeCol"C"backtraceCol"C}
{XRSystraceSyscallNameBinding="tableID"I"timeCol"C"classCol"C"subclassCol"C"codeCol"C"nameCol"C}
{XRSystraceSyscallBinding="tableID"I"startCol"C"durationCol"C"threadCol"C"processCol"C"callCol"C"cpuTimeCol"C"waitTimeCol"C"arg1Col"C"arg2Col"C"arg3Col"C"arg4Col"C"returnCol"C"errnoCol"C"backtraceCol"C"noteCol"C"signatureCol"C}
{unordered_map<unsigned long long, XRSystracekDebugBinding, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystracekDebugBinding>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{XRSystraceTIDPIDMappingBinding="tableID"I"timeCol"C"tidCol"C"pidCol"C}
{XRSystraceThreadSnapshotBinding="tableID"I"timeCol"C"threadCol"C"stateCol"C"priorityCol"C}
{unordered_map<unsigned long long, XRSystraceThread, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceThread>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceThread>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThread>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThread>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceThread>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThread>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThread>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, XRSystraceCPU, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceCPU>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceCPU>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, std::tuple<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::tuple<unsigned long long, unsigned long long>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, NSString *, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, NSString *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, NSString *>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, NSString *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, NSString *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, NSString *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, NSString *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, NSString *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, unsigned long long>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, unsigned long long>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{XRSystraceSystemLoad="time"Q"lastRecordTime"Q"load"q"uiLoad"q"sum"Q"uiSum"Q"weight"Q}
@"XRSystraceNoteBuilder"
@"<XRAnalysisCoreFunctionInvocation>"
@"XRAnalysisCoreValue"
@"XRAnalysisCoreImplValue"
{XRHTTPArchiveLoggingInputBinding="tableID"I"timeCol"C"messageCol"C"processCol"C"threadCol"C}
{XRHTTPArchiveLoggingOutputBinding="tableID"I"timeCol"C"processCol"C"harEventString"C}
@"NSMutableDictionary"
v24@0:8r^{XRGPUMetalGPUExecutionPoint=QQQQ}16
v32@0:8Q16Q24
v24@0:8r^{XRGPUShaderProfilerInterval=QQQII}16
v24@0:8r^{XRGPUActiveShaderInterval={XRGPUActiveKick={XRGPUMetalCommandBufferInfo={XRGPUMetalCommandBufferFrameAssignment=QQIIIQ}{XRGPUMetalGPUSubmissionToCommandBuffer=QQQQI}}QQQi@}{XRGPUShaderInfo=QQQQ@@@@@iQ}IQQ}16
{XRDeviceGPUInfoBinding="tableID"I"timestampCol"C"acceleratorIdCol"C"deviceNameCol"C"vendorNameCol"C"mobileCol"C}
{XRGPUShaderProfilerSampleBinding="tableID"I"timestampCol"C"pcCol"C"numPCCol"C}
{XRGPUShaderProfilerIntervalBinding="tableID"I"startCol"C"durationCol"C"pcCol"C"submissionIdCol"C"datamasterCol"C}
{XRGPUShaderIntervalBinding="tableID"I"startCol"C"durationCol"C"nameCol"C"labelCol"C"psoNameCol"C"eventNameCol"C"shaderTypeCol"C"percentOfKickCol"C"totalKickPercentCol"C"colorCol"C"eventPriorityCol"C"processCol"C"gpuCol"C"channelNameCol"C"eventDepthCol"C"connectionUUIDCol"C}
{XRGPUShaderListBinding="tableID"I"timestampCol"C"nameCol"C"labelCol"C"psoNameCol"C"idCol"C"pcStartCol"C"pcEndCol"C"shaderTypeCol"C"processCol"C"gpuCol"C}
{XRGPUMetalGPUExecutionPointsBinding="tableID"I"timestampCol"C"functionCol"C"gpuSubmissionIdCol"C"channelIdCol"C}
{XRGPUMetalCommandBufferCompletedBinding="tableID"I"timestampCol"C"cmdBufferIdCol"C}
{XRGPUMetalGPUSubmissionToCommandBufferBinding="tableID"I"timestampCol"C"cmdBufferIdCol"C"gpuSubmissionIdCol"C"acceleratorIdCol"C"pidCol"C}
{XRGPUMetalCommandBufferFrameAssignmentBinding="tableID"I"timestampCol"C"cmdBufferIdCol"C"frameNumberCol"C"frameColorCol"C"isCompositorCol"C"processCol"C}
{XRGPUMetalKnownCompositorProcessBinding="tableID"I"timestampCol"C"nameCol"C"pidCol"C"processCol"C}
@"XRAnalysisCoreNarrativeSupport"
{unordered_map<unsigned long long, XRDeviceGPUInfo, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRDeviceGPUInfo>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUActiveKick, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUActiveKick>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUActiveKick>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUMetalCommandBufferInfo, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUMetalCommandBufferInfo>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUMetalCommandBufferFrameAssignment, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUMetalCommandBufferFrameAssignment>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned int, XRGPUMetalKnownCompositorProcess, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, XRGPUMetalKnownCompositorProcess>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::hash<unsigned int>, std::equal_to<unsigned int>>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::equal_to<unsigned int>, std::hash<unsigned int>>, std::allocator<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::hash<unsigned int>, std::equal_to<unsigned int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::equal_to<unsigned int>, std::hash<unsigned int>>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUShaderInfoContainer, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUShaderInfoContainer>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUActiveShaderInterval, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUActiveShaderInterval>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, std::vector<XRGPUActiveShaderInterval>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::vector<XRGPUActiveShaderInterval>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
[5{XRGPUModelerTrackAssigner="currentId"I"tracks"{map<unsigned int, XRGPUModelerTrackAssigner::Track, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, XRGPUModelerTrackAssigner::Track>>>="__tree_"{__tree<std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>, std::less<unsigned int>>, std::allocator<std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>, std::less<unsigned int>>>="__value_"Q}}}}]
@"NSNumber"
v20@0:8c16
@"NSString"
@"NSData"
c28@0:8@16C24
{triggerCountersInputBinding="type"i"binding"(?="pmiBinding"{XRSystracePMIWithCountersBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"pmiCount"C"userBTCol"C"kernelBTCol"C"pmcArray"C}"timeBinding"{XRSystraceTimeWithCountersBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"userBTCol"C"kernelBTCol"C"sampleTypeCol"C"pmcArray"C})}
{CountersSampleBinding="tableID"I"timeCol"C"threadCol"C"processCol"C"cpuCol"C"threadStateCol"C"stackCol"C"weightCol"C"countersCol"C}
{unique_ptr<XRBacktraceFixer, std::default_delete<XRBacktraceFixer>>="__ptr_"{__compressed_pair<XRBacktraceFixer *, std::default_delete<XRBacktraceFixer>>="__value_"^{XRBacktraceFixer}}}
@32@0:8@16@24
Q32@0:8r^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16r^v24
Q32@0:8r^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16r^{XRSystraceKdebugData=QIQQQQIIIIQiQQQQ@Q}24
Q24@0:8r^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16
{tuple<unsigned long long, unsigned long long>={__tuple_impl<std::__tuple_indices<0, 1>, unsigned long long, unsigned long long>=QQ}}32@0:8r^{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}16r*24
@"<XRSystraceNoteBuilderDelegate>"
i24@0:8Q16
Q32@0:8r^{XRSystraceRecordedCPUState=QQQIQQQ}16^{XRSystraceRecordedThreadState=QQQIQQQQ}24
Q24@0:8r^{XRSystraceRecordedVMFault=QQQQQQ}16
Q24@0:8r^{XRSystraceRecordedSyscall=QQQQQQQQQ}16
Q40@0:8r^{XRSystraceRecordedThreadState=QQQIQQQQ}16d24Q32
{unordered_map<unsigned long long, XRSystraceThreadState, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceThreadState>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceThreadState>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, XRSystraceCPUState, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceCPUState>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceCPUState>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
@"<XRSystraceNarrativeBuilderDelegate>"
Q24@0:8r^{XRSystraceContextSwitchSampleData=QIQQQ@QiIQ}16
Q24@0:8r^{XRSystraceTimeData=QIQQQ@QiIQQI}16
{TimeProfileBinding="tableID"I"timeCol"C"threadCol"C"processCol"C"cpuCol"C"threadStateCol"C"weightCol"C"stackCol"C}
{XRSystraceTimeBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"userBTCol"C"kernelBTCol"C"sampleTypeCol"C}
{XRSystraceContextSwitchSampleBinding="tableID"I"timeCol"C"threadCol"C"processCol"C"cpuCol"C"threadStateCol"C"btID"C}
{unordered_map<unsigned long long, XRThreadStateType, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRThreadStateType>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRThreadStateType>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRThreadStateType>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRThreadStateType>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRThreadStateType>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRThreadStateType>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRThreadStateType>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
v24@0:8r^{XRGPUCounterValue=QIdQII}16
v40@0:8r^{XRGPUCounterInterval=QQddIIIII@@}16r*24r*32
{XRGPUCounterValueBinding="tableID"I"timestampCol"C"counterIdCol"C"valueCol"C"acceleratorIdCol"C"sampleIndexCol"C"ringBufferIndexCol"C}
{XRGPUCounterInfoBinding="tableID"I"timestampCol"C"counterIdCol"C"nameCol"C"maxValueCol"C"acceleratorIdCol"C"descriptionCol"C"groupIndexCol"C"typeCol"C"ringBufferCountCol"C"requireWeightedAccumulationCol"C"sampleIntervalCol"C}
{XRGPUCounterIntervalBinding="tableID"I"startCol"C"durationCol"C"counterIdCol"C"nameCol"C"labelCol"C"valueCol"C"percentValueCol"C"colorCol"C"gpuCol"C"groupIndexCol"C"isPercentageCol"C"ringBufferIndexCol"C}
{XRGPUAPSStreamBinding="tableID"I"timestampCol"C"sourceIndexCol"C"bufferIndexCol"C"sourceTypeCol"C"bufferCol"C}
{unordered_map<unsigned int, XRGPUCounterInfo, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, XRGPUCounterInfo>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::hash<unsigned int>, std::equal_to<unsigned int>>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::equal_to<unsigned int>, std::hash<unsigned int>>, std::allocator<std::__hash_value_type<unsigned int, XRGPUCounterInfo>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::hash<unsigned int>, std::equal_to<unsigned int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::equal_to<unsigned int>, std::hash<unsigned int>>>="__value_"f}}}
{vector<std::unique_ptr<XRGPUCounterSampleProcessor>, std::allocator<std::unique_ptr<XRGPUCounterSampleProcessor>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::unique_ptr<XRGPUCounterSampleProcessor> *, std::allocator<std::unique_ptr<XRGPUCounterSampleProcessor>>>="__value_"^v}}
[1{XRGPUCounterInterval="start"Q"duration"Q"value"d"percentValue"d"counterId"I"color"I"groupIndex"I"isPercentage"I"ringBufferIndex"I"name"@"NSString""gpu"@"NSString"}]
[1{XRGPUCounterTopPerformanceLimiter="interval"{XRGPUCounterInterval="start"Q"duration"Q"value"d"percentValue"d"counterId"I"color"I"groupIndex"I"isPercentage"I"ringBufferIndex"I"name"@"NSString""gpu"@"NSString"}"counterName"@"NSString"}]
v28@0:8Q16c24
v24@0:8r^{XRGPUPerformanceDeviceState=QQQII}16
{XRGPUPerformanceStateInfoBinding="tableID"I"timestampCol"C"acceleratorIdCol"C"availableCol"C"enabledCol"C"sustainedCol"C"mappingCol"C"stateCol"C}
{XRGPUPerformanceDeviceStateBinding="tableID"I"startCol"C"durationCol"C"acceleratorIdCol"C"stateCol"C"desiredStateCol"C}
{XRSystracekDebugBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"arg1Col"C"arg2Col"C"arg3Col"C"arg4Col"C"functionCol"C"classCol"C"subclassCol"C"codeCol"C"userBTCol"C"kernelBTCol"C}
{unordered_map<unsigned long long, XRGPUPerformanceStateInfo, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUPerformanceStateInfo>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
@24@0:8^v16
^{XRCXXModelingInterface=^^?}
v24@0:8^{XRSystraceRecordedThreadState=QQQIQQQQ}16
v24@0:8^{XRSystraceRecordedSyscall=QQQQQQQQQ}16
v24@0:8^{XRSystraceRecordedVMFault=QQQQQQ}16
v24@0:8^{XRSystraceRecordedCPUState=QQQIQQQ}16
v64@0:8Q16Q24Q32Q40Q48Q56
v52@0:8Q16Q24Q32I40Q44
{XRSystraceCPUNarrativeBinding="tableID"I"startCol"C"durationCol"C"cpuCol"C"significanceCol"C"narrativeCol"C"backtraceCol"C}
{XRSystraceThreadNarrativeBinding="tableID"I"startCol"C"durationCol"C"processCol"C"threadCol"C"significanceCol"C"narrativeCol"C"certaintyCol"C"backtraceCol"C}
{unordered_map<unsigned long long, XRSystraceNarrativesSyscall, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceNarrativesSyscall>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, XRSystraceRecordedThreadState, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceRecordedThreadState>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
@"XRSystraceNarrativeBuilder"
System Trace modeler failed to process data because a factory could not be obtained.
System trace modeler found a CPU running thread %llu but no corresponding thread state
System Trace modeler failed to find stored thread signature for thread %llu when recording CPU running it.
The table ids don't match
os_log messages are expected to be a typed array.
Unknown log format
Expected os_log argument to be binary data but it is not.
First chunk of HAR JSON string does not start with `{` but should. JSON string: %@
Final chunk of HAR JSON string does not end in `}` but should. JSON string: %@
HAR JSON Data is not a valid string
Failed to decode HAR Entry JSON string. Error: %@
GPU performance state modeler failed to process data because a factory could not be obtained.
$s20BuiltinModelerPlugin6MetricP
11InputSchema
12OutputSchema
yyXlG
yp_So32XRAnalysisCoreFunctionInvocation_ptSg
IeyBd_
8taskUUID_
G0A4Infot
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
ySSSgG
SaySSG
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
ShySSGG
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
15keyByConnection_AA0aB10DomainOnlytSg
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
$ss12CaseIterableP
So19XRAnalysisCoreValueCG
_GSg
So19XRAnalysisCoreValueCSg
13transactionID_
8intervalt
13transactionID_
8intervaltSg
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
3key_
5valuetSg
3key_
5valuet
SdSg
SSGG
So19XRAnalysisCoreValueCG
So12XRURLSessionCSg
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
SaySo19XRAnalysisCoreValueCG
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
SDyxSay
yxq__GGG
q_Sg
SDySS
So19XRAnalysisCoreValueC5value_SS6stringtG
$s20BuiltinModelerPlugin22TableDefinitionColumnsP
$s20BuiltinModelerPlugin20TableValuesContainerP
11ColumnsType
So19XRAnalysisCoreValueCGSg
yxG1a_AAyq_G1bt
yxG1a_AAyq_G1bAAyq0_G1ct
So31XRAnalysisCoreReadCursorWrapperC
Sbyc
$s20BuiltinModelerPlugin31AnalysisCoreSomeSingleRowReaderP
So25XRAnalysisCoreTableSchemaC
$sSt
y__xq_q0_G
$sST
y__xq_G
y_xG
y__xG
SDySo19XRAnalysisCoreValueCSDyABSay
So30XRAnalysisCoreNarrativeSupportCSg
So19XRAnalysisCoreValueCSg4path_t
So19XRAnalysisCoreValueCSg7library_AC6symbolt
So19XRAnalysisCoreValueCSg6symbol_t
So19XRAnalysisCoreValueCSg7library_t
_pSg
__GG
Sbz_Xx
So8NSObjectC
5start_
Sg3end
Sg8harEntrytG
$s20BuiltinModelerPlugin22TaskEndValuesContainer33_553A06DDDCC89470046C0190A5BC238ELLP
SSSg
ypSg
5start_
Sg3end
Sg8harEntryt
3key_
5start_
Sg3end
Sg8harEntryt5valuetSg
3key_
5start_
Sg3end
Sg8harEntryt5valuet
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
5start_
Sg3end
Sg8harEntrytt
5start_
Sg3end
Sg8harEntrytG
_GGG
5start_
Sg3end
Sg8harEntrytSg
yxq__G
So19XRAnalysisCoreValueCG
SSG_G
SSGG
SSG_G
SSGG
Sg_ABt
_pSg
So25XRAnalysisCoreTableSchemaCSg
Gz_Xx
So25XRAnalysisCoreTableSchemaCSgz_Xx
ySo19XRAnalysisCoreValueCSay
ySo19XRAnalysisCoreValueCSDyACSay
So19XRAnalysisCoreValueC5value_SS6stringtG
SSGG
_SSt
So19XRAnalysisCoreValueCG
SSG_G
SSGG
ySnySiGG
SSG_G
SSGG
So19XRAnalysisCoreValueCG
ySS3key_SSSg5valuetG
SS3key_SSSg5valuet
_So19XRAnalysisCoreValueCt
_ShySSGt
ShySSGG
_GGG
ySSG
ySSG
$sSY
RawValue
start
duration
process
thread
type
description
library
symbol
path
level
backtrace
inputTableTasks
inputTableTransactions
inputTableTransactionStates
outputTable
cachedTasks
cachedTransactionColors
inputTableTransactions
inputTableTransactionStates
outputTable
cachedTransactions
layoutManager
alreadyWrittenDrawables
color
layoutQualifiers
wrappedLayoutManager
rowIndexWithinSameProcessAndDomain
rowIndexWithinSameProcessAndDomainAndConnection
processID
domain
connection
aggregationType
count
previousTimestamp
countByProcess
previousTimestampByProcess
previouslySeenEventID
task
transaction
deviceSessionID
processID
AllCases
RawValue
timestamp
eventType
processInfo
intervalId
time
cpuIndex
thread
callstack
event_class
event_subclass
code
function
arg1
arg2
arg3
arg4
string
inputTableTransactions
inputTableHarLogs
inputTableTaskEvents
outputTableTransactions
outputTableTransactionStates
jsonDecoder
sessionByTaskID
transactionsWaitingForAdditionalData
additionalInfo
endReasonValue
transactionID
taskID
request
response
serverIPAddress
connection
timings
fetchType
mimeType
text
method
httpVersion
headers
postData
headersSize
bodySize
status
statusText
content
redirectURL
cacheLookup
dnsLookup
connectionEstablishment
secureConnectionEstablishment
sendingRequest
receivingResponse
name
value
RawValue
size
encoding
start
base64
inputTable
outputTableTaskStarts
outputTableTaskEnds
previouslySeenTaskResumeUUIDs
cachedSessionNames
signpostIdToTaskUUID
traceRelativeTimestamp
taskUUID
sessionUUID
additionalInfo
session
taskIdentifier
taskDescription
method
attribution
sessionDescription
isSharedSession
isEphemeralSession
backgroundIdentifier
domain
code
localizedDescription
description
error
groupedActiveIntervals
lastInsertedIntervalStart
start
identifier
rowIndex
inKdebugTable
inKdebugStringTable
outDyldLibraryTable
lastUUIDEventByThread
libraryUUIDsByPath
dyldEvent
hasSentDyldEvent
lastSharedCacheEvent
stringBank
threadsByProcess
start
duration
process
domain
serverIP
session
layoutQualifier
uniqueTaskID
developerTaskID
taskDescription
sessionIsEphemeral
backtraceOfResumeCall
httpMethod
path
queryString
requestAttribution
wasSuccessful
errorDomain
errorCode
errorLocalizedDescription
errorOverallDescription
transactionId
connectionID
state
containmentLevel
standaloneLabel
labelInContainmentHierarchy
tooltip
color
taskId
layoutQualifierForConnection
layoutQualifierForDomain
label
drawableType
time
message
harJson
count
isAllProcesses
aggregationType
timestamp
backtrace
eventType
signpostId
signpostName
additionalInfo
endReason
httpStatusCode
requestHeaders
requestBody
httpVersion
endReasonString
httpStatusText
errorString
responseHeaders
responseBody
responseMimeType
redirectURL
fetchType
blockedDuration
cacheLookupDuration
dnsLookupDuration
tcpConnectionSetupDuration
secureConnectionSetupDuration
requestDuration
waitingForServerDuration
responseDuration
invalid
success
redirect
authenticationChallenge
failure
retry
tryNextProxy
RawValue
developer
user
cacheLookup
blocked
dnsLookup
tcpSetup
tlsSetup
quicSetup
request
waitingForResponse
response
begin
tableDefinition
$__lazy_storage_$_values
tableDefinitions
readCursor
shouldYield
wasInterrupted
tableIDs
schema
columns
ColumnsType
Element
Iterator
thread
uuidArray
loadAddress
fsid
fsidObjNo
fsidGeneration
pathID
type
map32
unmap
unmap32
sharedCache
sharedCache32
RawValue
metric
inputKdebugSchema
inputKdebugStringSchema
outputActivitySchema
start
type
backtrace
openActivities
kdebugStringTable
dyldPathTable
builder
open
openPreflight
close
staticInit
mapImage
addImageCallback
removeImageCallback
objcInit
launch
fixups
buildClosure
objcMap
InputSchema
OutputSchema
start
duration
process
thread
backtrace
type
path
uuid
loadAddress
trackContainmentLevel
color
method
attribution
inputTaskStartEvents
inputTaskEndEvents
inputTransactionEvents
outputAggregationSummary
taskCollector
transactionCollector
inputTableTaskStarts
inputTableTaskEnds
inputTableHarLogs
intervalOutputTable
tasksLayoutManager
incompleteTaskIntervalStarts
completedTasks
traceRelativeTimestamp
layoutQualifier
taskUUID
serverIPAddress
fetchType
RawValue
@(#)PROGRAM:BuiltinModelerPlugin  PROJECT:Instruments-64562.5
0000000
000000000000000
000000000000
#/<<<C
 n;^
Qkkbal
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
(((((((
((((((((((((((((((((((((((((
ONNNNNNNN
NN3N@POOOOOOOO
OO4OA
)((((((((
)((((((((
)((((((((
#+5Qstart
duration
thread
core
state
process
cputime
waittime
priority
note
summary
start
duration
thread
state
process
priority
time
thread
event
process
priority
note
time
thread
core-index
thread-state
arg1
arg2
arg3
arg4
function
class
subclass
code
cp-user-callstack
cp-kernel-callstack
time
time
thread
state
priority
start
duration
thread
process
call
cputime
waittime
arg1
arg2
arg3
arg4
return
errno
backtrace
note
signature
time
class
subclass
code
name
start
duration
thread
core
state
process
cputime
waittime
priority
note
summary
start
duration
thread
operation
process
cputime
waittime
address
size
backtrace
time
thread
process
core-index
thread-state
backtrace
start
duration
task
state
backtrace
process
thread
resume-backtrace
suspend-backtrace
narrative
timestamp
task
start
duration
parent-task
child-task
start
duration
task
start
duration
count
start
duration
count
start
duration
count
timestamp
task
thread
backtrace
start
duration
actor
task
thread
start
duration
actor
count
start
duration
count
start
duration
actor-class
actor
time
thread
process
event-type
scope
identifier
name
format-string
backtrace
subsystem
category
message
22SystraceSyscallModeler
12XRCXXModelerI22SystraceSyscallModeler20XRCXXRequiredSchemasIJ6Kdebug14SyscallNameMapEE20XRCXXOptionalSchemasIJ16ThreadStateTableEE18XRCXXOutputSchemasIJ7SyscallEEE
22XRCXXModelingInterface
6KdebugIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E6KdebugE
14SyscallNameMapIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E14SyscallNameMapE
16ThreadStateTableIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E16ThreadStateTableE
7SyscallIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E7SyscallE
20VirtualMemoryModeler
12XRCXXModelerI20VirtualMemoryModeler20XRCXXRequiredSchemasIJ6KdebugEE20XRCXXOptionalSchemasIJEE18XRCXXOutputSchemasIJ18VirtualMemoryTableEEE
18VirtualMemoryTableIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E18VirtualMemoryTableE
18SystemTraceModeler
12XRCXXModelerI18SystemTraceModeler20XRCXXRequiredSchemasIJ13TidPidMapping6Kdebug19ThreadSnapshotTableEE20XRCXXOptionalSchemasIJEE18XRCXXOutputSchemasIJ16ThreadStateTable13CPUStateTable18ContextSwitchTableEEE
19ThreadSnapshotTableIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E19ThreadSnapshotTableE
16ThreadStateTableIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E16ThreadStateTableE
13CPUStateTableIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E13CPUStateTableE
18ContextSwitchTableIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E18ContextSwitchTableE
13TidPidMappingIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E13TidPidMappingE
14CSwitchModeler
12XRCXXModelerI14CSwitchModeler20XRCXXRequiredSchemasIJ6KdebugEE20XRCXXOptionalSchemasIJEE18XRCXXOutputSchemasIJ7CSwitchEEE
7CSwitchIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E7CSwitchE
23SwiftConcurrencyModeler
12XRCXXModelerI23SwiftConcurrencyModeler20XRCXXRequiredSchemasIJ10OSSignpostEE20XRCXXOptionalSchemasIJEE18XRCXXOutputSchemasIJ9TaskState21TaskCancellationEvent16TaskRelationship12TaskLifetime14AliveTaskCount16RunningTaskCount14TotalTaskCount17TaskCreationEvent14ActorExecution14ActorQueueSize10ActorCount13ActorLifetimeEEE
10OSSignpostIL22XRCXXModelingValueType1EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType1E10OSSignpostE
9TaskStateIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E9TaskStateE
21TaskCancellationEventIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E21TaskCancellationEventE
16TaskRelationshipIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E16TaskRelationshipE
12TaskLifetimeIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E12TaskLifetimeE
17TaskCreationEventIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E17TaskCreationEventE
14ActorExecutionIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E14ActorExecutionE
14ActorQueueSizeIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E14ActorQueueSizeE
13ActorLifetimeIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E13ActorLifetimeE
14AliveTaskCountIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E14AliveTaskCountE
16RunningTaskCountIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E16RunningTaskCountE
14TotalTaskCountIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E14TotalTaskCountE
10ActorCountIL22XRCXXModelingValueType2EE
25XRCXXSchemaRepresentationIL22XRCXXModelingValueType2E10ActorCountE
NSt3__120__shared_ptr_emplaceI17TaskCreationEventIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceINS_13unordered_setIyNS_4hashIyEENS_8equal_toIyEENS_9allocatorIyEEEENS6_IS8_EEEE
NSt3__120__shared_ptr_emplaceI14AliveTaskCountIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14TotalTaskCountIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI16TaskRelationshipIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI9TaskStateIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI12TaskLifetimeIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14ActorExecutionIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI16RunningTaskCountIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI21TaskCancellationEventIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI10ActorCountIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI13ActorLifetimeIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14ActorQueueSizeIL22XRCXXModelingValueType2EENS_9allocatorIS3_EEEE
NSt3__117bad_function_callE
NSt3__110__function6__funcIZN23SwiftConcurrencyModeler9speculateEvEUlR11XRSwiftTaskE_NS_9allocatorIS5_EEFvS4_EEE
NSt3__110__function6__baseIFvR11XRSwiftTaskEEE
ZN23SwiftConcurrencyModeler9speculateEvEUlR11XRSwiftTaskE_
NSt3__110__function6__funcIZN23SwiftConcurrencyModeler9speculateEvEUlyE_NS_9allocatorIS3_EEFvyEEE
NSt3__110__function6__baseIFvyEEE
ZN23SwiftConcurrencyModeler9speculateEvEUlyE_
BuiltinModelerPlugin
Metric
InputSchema OutputSchema
XRAnalysisCoreTableAccess
DVTInstrumentsAnalysisCore
DYLDActivityIntervalColumns
%+3F
URLSessionTaskContainmentsModeler
Info
TransactionContainmentsModeler
TransactionInterval
RowIndices
LayoutManager
%+3:
HTTPAggregationCollector
ProcessInfo
AggregationType
HTTPEvent
_taskUUIserverIP_fetchTyD
Address
KdebugStringColumns
KdebugColumns
TransactionEnrichmentModeler
TransactionInterval
Request
BodyData
HAREntry
CodingKeys
KeyValue
CustomTimingsForInstruments
Response
RelativeInterval
Content
ContentEncoding
method
httpVersheaders
postDataheadersSbodySize
size
mimeTypetext
encoding
status
statusTehttpVersheaders
content
redirectheadersSbodySize
4#,/
URLSessionTaskEventsModeler
TaskStartEvent
AdditionalInfo
TaskCompleteAdditionalInfo
ErrorInformation
CodingKeys
NonOverlappingIntervalsLayoutManager
LayedOutInterval
SymbolicationModeler
AggregationDrawablesColumns
URLSessionTaskEndColumns
OsSignpostColumns
URLSessionTaskStartColumns
HarLogColumns
TransactionIntervalBasicInfoColumns
TransactionDrawablesColumns
TaskDrawablesColumns
TransactionStatesColumns
TransactionIntervalFullInfoColumns
URLSessionTaskIntervalColumns
_NSURLSessionTransactionEndReason
TransactionState
URLRequestAttribution
EventType
TableDefinitionColumns
TableValuesContainer
ColumnsType
TableEntry
OneTable
TwoTables
ThreeTables
BaseTableReadCursor
AnalysisCoreSomeSingleRowReader
TypedReadCursor
AnalysisCore
SingleRowReader
TableDefinition
DyldUUIDEvent
DyldUUIDEventType
DYLDActivityModeler
,BXm
DYLDActivity
DYLDActivityType
DYLDActivityMetric
DyldLibraryLoadColumns
AdditionalInformation
CodingKeys
method
attribut
HTTPAggregationModeler
URLSessionTaskIntervalModeler
TaskStartEvent
TaskEndEvent
TaskEndValuesContainer
HAREntry
CodingKeys
_taskUUIserverIP_fetchTyD
Address
coreprofile-pmi
kdebug-counters-with-kdebug-sample
kdebug-counters-with-pmi-sample
cpu-profile
v32@?0@"XRAnalysisCoreTable"8Q16^B24
target-pid
time
thread
core-index
arg1
arg2
arg3
arg4
function
class
subclass
code
cp-kernel-callstack
counters-array
thread-state
pmi-count
process
core
weight
stack
vector
kdebug
tick
syscall-name-map
tid-pid-mapping
thread-snapshot
cpu-state
context-switch
system-load
virtual-memory
syscall
vm-page-size
TODO
Running
Blocked
Idle
Syscall
Unknown
Over
Partial
ThreadState
ContextSwitch
FIXBT
name
state
priority
start
duration
cputime
waittime
note
summary
event
load
ui-load
ui-load-commitment
operation
address
size
backtrace
call
return
errno
signature
Zero Fill
Page In
Copy On Write
Page Cache Hit
Non-Zero Fill
Guard Page
File Backed Page In
Anonymous Memory Page In
Decompress Memory
Decompress Memory from Swap
Copy On Read
Page Out
Handling Interrupt
XRSystraceCPUStateToString
XRSystraceModelerShared.h
false
Runnable
Interrupted
Wait
Preempted
Suspended
Terminating
Terminated
XRSystraceThreadStateToString
-[XRHTTPArchiveLoggingModeler populateOutputTables:usingObserverations:parameters:yieldFlag:]
XRHTTPArchiveLoggingModeler.mm
logMessageParts.count <= 2
logMessageParts.count == 2
logMessageParts.count == 1
logMessagePartOne.isValid
os-log
message
initColumnIDs
XRHTTPArchiveLoggingModeler.h
extractedColumns == YES
timestamp
har-entry-json
device-gpu-info
gpu-shader-profiler-sample
gpu-shader-profiler-interval
metal-command-buffer-frame-assignment-internal
metal-command-buffer-frame-assignment
-internal
metal-gpu-submission-to-command-buffer-id-internal
metal-gpu-submission-to-command-buffer-id
metal-gpu-execution-points-internal
metal-gpu-execution-points
metal-command-buffer-completed-internal
metal-command-buffer-completed
metal-shader-profiler-shader-list-internal
metal-shader-profiler-shader-list
metal-known-compositor-process-internal
metal-known-compositor-process
metal-shader-profiler-intervals-internal
metal-shader-profiler-intervals
Vertex
Fragment
Compute
Raytracing
Shader Timeline
Shader 0x%llx
value
XRAnalysisCoreReadCursorGetValue(streamCursor, tableID, &value)
shared
ephemeral
pmi-threshold
kdebug-counters-with-time-sample
sample-rate-micro-seconds
counters-profile
sample-type
forced off %XRCPUCoreTypeID% by %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
balanced off %XRCPUCoreTypeID% to optimize the system's CPU performance
yielding %XRCPUCoreTypeID% to %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
taken off CPU temporarily to cool the processor and surrounding hardware
made runnable by a timer expiration (handled by %XRCPUCoreTypeID%'s timer interrupt handler)
made runnable by an interrupt handler on %XRCPUCoreTypeID%
made runnable by %XRThreadTypeID% running on %XRCPUCoreTypeID%
parked waiting for new work items from dispatch
waiting for event/lock with id %XRVirtualMemoryAddressTypeID%
%thread-state% at priority %sched-priority% on %core%
%thread-state% on %core%
%thread-state% at priority %sched-priority%
%thread-state%
lost %XRCPUCoreTypeID% to %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
gave %XRCPUCoreTypeID% voluntarily to %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
%XRCPUCoreTypeID% became idle (inferred)
%XRCPUCoreTypeID% became idle
will wait for event/lock with id %XRVirtualMemoryAddressTypeID% when it blocks
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%) = %XRSizeInBytesTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, off:%XRSizeInBytesTypeID%) = %XRSizeInBytesTypeID%
| X_OK
| W_OK
| R_OK
F_OK
0 (reachable)
%XRSystemCallNameTypeID%(path, amode:%XRSymbolicArgumentTypeID%) = %XRSymbolicArgumentTypeID%
-1 (failure)
0 (success)
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%) = %XRSymbolicArgumentTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, flags:%XRRegisterContentsTypeID%) = %XRSizeInBytesTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, flags:%XRRegisterContentsTypeID%,...) = %XRSizeInBytesTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, msg:%XRVirtualMemoryAddressTypeID%, flags:%XRRegisterContentsTypeID%) = %XRSizeInBytesTypeID%
MADV_NORMAL
MADV_RANDOM
MADV_SEQUENTIAL
MADV_WILLNEED
MADV_DONTNEED
MADV_FREE
MADV_FREE_RESUSABLE
MADV_FREE_REUSE
%XRSystemCallNameTypeID%(addr:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, advice:%XRSymbolicArgumentTypeID%)
told the kernel that %XRSizeInBytesTypeID% of memory starting at %XRVirtualMemoryAddressTypeID% became available for reuse
| PROT_READ
| PROT_WRITE
| PROT_EXEC
PROT_NONE
%XRSystemCallNameTypeID%(addr:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, prot:%XRSymbolicArgumentTypeID%)
| MAP_SHARED
| MAP_PRIVATE
| MAP_FIXED
| MAP_RENAME
| MAP_NOEXTEND
| MAP_HASSEMAPHORE
| MAP_NOCACHE
| MAP_JIT
| MAP_ANON
| MAP_FILE
| MAP_RESILIENT_CODESIGN
| MAP_RESILIENT_MEDIA
%XRSystemCallNameTypeID%(addr:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, prot:%XRSymbolicArgumentTypeID%, flags:%XRSymbolicArgumentTypeID%) = %XRVirtualMemoryAddressTypeID%
%XRSystemCallNameTypeID%
EAGAIN was returned which is normal for a non-blocking file descriptor
end-of-file was encountered
the permission bits of the file mode do not permit the requested access, or search permission is denied on a component of the path prefix.
the call failed with an errno value of %XRSymbolicErrnoValueTypeID%
the call failed with an error: %XRSymbolicErrnoValueTypeID%
Ran %XRThreadTypeID% at priority %XRSchedulingPriorityTypeID% for %XRDurationOnCPUTypeID%.
Servicing an interrupt handler, and preempting %XRThreadTypeID% for %XRDurationOnCPUTypeID%.
Servicing an interrupt handler for %XRDurationOnCPUTypeID%.
Idled waiting for work or interrupts to handle for %XRDurationOnCPUTypeID%.
Virtual memory %vm-op% took %duration%.
Called "%syscall%" for %duration-waiting%.
Called "%syscall%" for %duration-waiting%, %narrative%.
Ran for %duration-on-core% on %core% at priority %sched-priority%.
The thread was %narrative%. It waited for an available CPU for %duration-waiting% (%percent% of %syscall%'s duration) before running again at priority %sched-priority%.
The thread was %narrative%. It waited for an available CPU for %duration-waiting% before running again at priority %sched-priority%.
The thread was made runnable. It waited for an available CPU for %duration-waiting% (%percent% of %syscall%'s duration) before running again at priority %sched-priority%.
The thread was made runnable. It waited for an available CPU for %duration-waiting% before running again at priority %sched-priority%.
Interrupted for %duration-on-core% (%percent% of %syscall%'s duration) while %core% serviced an interrupt handler.
Interrupted for %duration-on-core% while %core% serviced an interrupt handler.
Preempted for %duration-on-core% (%percent% of %syscall%'s duration) because thread was %narrative%.
Preempted for %duration-on-core% because thread was %narrative.%
Preempted at priority %sched-priority% for %duration-on-core% (%percent% of %syscall%'s duration) because thread was %narrative%.
Preempted at priority %sched-priority% for %duration-on-core% because thread was %narrative%.
Preempted for %duration-on-core% (%percent% of %syscall%'s duration).
Preempted for %duration-on-core%.
Preempted at priority %sched-priority% for %duration-on-core% (%percent% of %syscall%'s duration).
Preempted at priority %sched-priority% for %duration-on-core%.
Blocked for %duration-waiting% (%percent% of %syscall%'s duration) starting at priority %sched-priority%. Thread is %narrative%.
Blocked for %duration-waiting% (%percent% of %syscall%'s duration) starting at priority %sched-priority%.
Blocked for %duration-waiting% starting at priority %sched-priority%.  Thread is %narrative%.
Blocked for %duration-waiting% starting at priority %sched-priority%.
Idle for %duration-waiting%. Thread is %narrative%.
Idle for %duration-waiting%.
basic_string
getCursor
XRCXXModeling.h
_sharedState
-[XRTimeSamplerModeler _getNormalizedWeight:]
XRTimeSamplerModeler.mm
time-sample
context-switch-sample
time-profile
record-waiting-threads
gpu-counter-info
gpu-counter-value
gpu-aps-stream
metal-gpu-counter-intervals
Total Occupancy
-1.Total Occupancy
-2.Top Performance Limiter
%fixed-decimal%%string% (%string%)
counter-id
max-value
accelerator-id
description
group-index
ring-buffer-count
require-weighted-accumulation
sample-interval
sample-index
ring-buffer-index
device-name
vendor-name
mobile
label
percent-value
is-percentage
num-pcs
submission-id
datamaster
frame-number
pso-label
event-name
shader-type
percent-of-kick
total-kick-percent
event-priority
channel-name
event-depth
connection-UUID
source-index
buffer-index
source-type
stream
pso-name
pc-start
pc-end
cmdbuffer-id
frame-color
is-compositor
gpu-submission-id
channel-id
compositor-name
consistent-state-available
consistent-state-enabled
consistent-state-sustained
consistent-state-mapping
consistent-state
desired-state
%d.%@
Percentage
limiter
occupancy
bandwidth
 GB/s
vertex
fragment
compute
tile
gpu-performance-state-info
requested-consistent-state
gpu-performance-device-state-intervals-internal
gpu-performance-device-state-intervals
v16@?0r^{XRGPUPerformanceDeviceState=QQQII}8
Radeon Pro Vega 56
Radeon Pro Vega 64
Radeon Pro Vega 64X
Radeon Pro Vega 48
Radeon Pro Vega 16
Radeon Pro Vega 20
AMD Radeon Pro Vega II
AMD Radeon Pro Vega II Duo
AMD Radeon Pro 5300M
AMD Radeon Pro 5500M
AMD Radeon Pro 5600M
AMD Radeon Pro 5300
AMD Radeon Pro 5500 XT
AMD Radeon Pro 5700
AMD Radeon Pro 5700 XT
AMD Radeon Pro W5700X
AMD Radeon Pro W5500X
Radeon Pro Navi 21 GL-XTA
User
Supervisor
Uninterruptible
stringToThreadState
XRSystraceModelerShared.mm
false && "We should have all the thread states listed above."
COM.APPLE.DT.INSTRUMENTS.SCHEDULING
COM.APPLE.DT.INSTRUMENTS.SYSCALLS
COM.APPLE.DT.INSTRUMENTS.VM
COM.APPLE.DT.INSTRUMENTS.THREAD-NARRATIVE
COM.APPLE.DT.INSTRUMENTS.CPU-NARRATIVE
COM.APPLE.DT.INSTRUMENTS.CONTEXT-SWITCH
COM.APPLE.CFNETWORK.HARLOGGING.MODELER
COM.APPLE.CFNETWORK.HTTP-TRACING.TRANSACTION-ENRICHMENT-MODELER
COM.APPLE.CFNETWORK.HTTP-TRACING.TRANSACTION-CONTAINMENT-MODELER
COM.APPLE.CFNETWORK.HTTP-TRACING.TASK-EVENTS-MODELER
COM.APPLE.CFNETWORK.HTTP-TRACING.TASK-INTERVAL-MODELER
COM.APPLE.CFNETWORK.HTTP-TRACING.TASK-CONTAINMENT-MODELER
COM.APPLE.CFNETWORK.HTTP-TRACING.AGGREGATION-MODELER
COM.APPLE.DT.INSTRUMENTS.CPU-PROFILER
COM.APPLE.METAL-GPU-COUNTERS
COM.APPLE.METALSYSTRACE-GPU-SHADER-PROFILER-INTERNAL
COM.APPLE.METALSYSTRACE-GPU-SHADER-PROFILER
COM.APPLE.GPU-PERFORMANCE-DEVICE-STATE
COM.APPLE.GPU-PERFORMANCE-DEVICE-STATE-INTERNAL
COM.APPLE.DT.INSTRUMENTS.GENERIC-COUNTERS
COM.APPLE.DT.INSTRUMENTS.TIME-PROFILER
COM.APPLE.DT.INSTRUMENTS.DYLD-ACTIVITY
COM.APPLE.DT.INSTRUMENTS.DYLD-TRACING.KTRACE-MODELER
COM.APPLE.DT.INSTRUMENTS.SWIFT-CONCURRENCY
readValue
XRCXXSystraceModelers.h
a <= kdebug.Time
(a + b) >= kdebug.Time
getWriteValue
currentWritableSchemaPositionIsValid(position)
setValue
res && "Oops, couldn't set the value."
It2 != _lastState.end()
os-signpost
swift-task-state
swift-task-cancellation-event
swift-task-relationship
swift-task-lifetime
swift-alive-task-count
swift-running-task-count
swift-total-task-count
swift-task-creation-event
swift-actor-execution
swift-actor-queue-size
swift-actor-count
swift-actor-lifetime
task_lifetime
Begin
XRBacktraceTranslationOracle
job_run
task_wait
task_status_changed
Event
task_continuation_init
task_continuation_await
task_continuation_resume
task_continuation
actor_lifetime
actor_enqueue
actor_dequeue
actor_job_queue
operator()
Creating
Waiting
Ending
Enqueued
Continuation
Ran for %duration% on actor %swift-actor% on actor-isolated context at %text-symbol% on thread %thread% with priority %swift-task-priority%
Ran for %duration% on %thread% starting at %text-symbol% with priority %swift-task-priority%
Ran for %duration% on %thread% with priority %swift-task-priority%
Default
Utility
Background
User Initiated
Suspended for %duration%
Waited on %swift-task% task for %duration%
Reference to task was held for an additional %duration%
Was enqueued on %swift-actor% actor for %duration%
Creating for %duration%
Ran continuation for %duration% that ended with an error
Ran continuation for %duration% that ended without any errors
cpu-narrative
thread-narrative
significance
narrative
certainty
Cache Lookup
QUIC
Sending Request
Waiting for Response
Receiving Response
Transaction
Task
Local Cache
Revalidated Cache
Server Push
Network Load
_transactionUUID
_taskUUID
request
response
serverIPAddress
connection
_precisionPreservingTimings
_fetchType
cache
connect
secureConnection
send
receive
base64
XRAnalysisCoreFunctionInvocation
@16@0:8
v28@0:8I16@20
B28@0:8^@16I24
v24@0:8@16
B24@0:8^@16
@"<XRAnalysisCoreValueFactory>"16@0:8
v28@0:8I16@"XRAnalysisCoreValue"20
v24@0:8@"XRAnalysisCoreValue"16
XRSymbolicationResetOracle
XRSymbolicationHorizonOracle
XRCallstackFixupOracle
XRSymbolicationEmissionOracle
Symbolication
Oracle Invocation for: %s
com.apple.dt.Instruments
XRURLSessionTaskContainmentsModeler
B48@0:8@16@24@32@?40
v16@0:8
inputTableTasks
inputTableTransactions
inputTableTransactionStates
outputTable
cachedTasks
cachedTransactionColors
Did not find corresponding task interval for transaction `%{public}@` with task id: %{public}@
Did not find corresponding transaction color for transaction `%{public}@`
XRAnalysisCoreSwiftModeler
v32@0:8@"<XRIntKeyedDictionaryImmutable>"16@"XRAnalysisCoreModelingParameters"24
B48@0:8@"XRAnalysisCoreTableBindingsWrapper"16@"XRAnalysisCoreReadCursorWrapper"24@"XRAnalysisCoreModelingParameters"32@?<B@?>40
v32@0:8@"XRAnalysisCoreTableBindingsWrapper"16@"XRAnalysisCoreModelingParameters"24
XRTransactionContainmentsModeler
cachedTransactions
layoutManager
alreadyWrittenDrawables
_TtC20BuiltinModelerPluginP33_FDC95F2A35E24E849AD7B036511025EC19TransactionInterval
color
layoutQualifiers
Did not find corresponding transaction interval for transaction state `%{public}@` with transaction id: %{public}@
Transaction State
Connection Setup
_TtC20BuiltinModelerPlugin24HTTPAggregationCollector
aggregationType
count
previousTimestamp
countByProcess
previousTimestampByProcess
previouslySeenEventID
HTTP %s event %llu hasn't begin event. It's ok if event started before recording
Recieved duplications for end HTTP %s event %llu
Recieved duplications for end HTTP %s event %llu in process %llu
HTTP %s event %llu has already been handled
cp-user-callstack
XRTransactionEnrichmentModeler
inputTableHarLogs
inputTableTaskEvents
outputTableTransactions
outputTableTransactionStates
jsonDecoder
sessionByTaskID
transactionsWaitingForAdditionalData
_TtC20BuiltinModelerPluginP33_22B9F748C0431C4636ACE10518D51BDC19TransactionInterval
additionalInfo
endReasonValue
Received transaction interval with invalid transaction UUID. Analysis Core value for UUID  %{public}@
Failed to parse JSON %{public}@ due to error %{public}@
Did not find corresponding transaction interval for HAR JSON for transaction: %{public}@
transaction: %{public}@ had no associated task UUID
Unknown Connection
Transaction State starts before parent transaction. Transaction ID: %{public}@, state: %{public}@, relativeStartTime: %lld ns
Cache Connection
Developer Attributed
XRURLSessionTaskEventsModeler
inputTable
outputTableTaskStarts
outputTableTaskEnds
previouslySeenTaskResumeUUIDs
cachedSessionNames
signpostIdToTaskUUID
_TtC20BuiltinModelerPluginP33_86AF25F1718F504E7B367945C515792114TaskStartEvent
traceRelativeTimestamp
taskUUID
sessionUUID
session
Did not find a task UUID for signpost id, likely because we didn't receive the corresponding task start event.
Failed to decode additional info json for task resume event.
Failed to decode additional info json for task complete event: %@
sessionDescription
isEphemeralSession
backgroundIdentifier
localizedDescription
XRSymbolicationModeler
inKdebugTable
inKdebugStringTable
outDyldLibraryTable
lastUUIDEventByThread
libraryUUIDsByPath
dyldEvent
hasSentDyldEvent
lastSharedCacheEvent
stringBank
threadsByProcess
layout-qualifier
public-task-identifier
task-description
session-is-ephemeral
resume-backtrace
request-attribution
error-localized-description
error-overall-description
is-all-processes
aggregation-type
end-reason-string
http-status-code
http-status-text
response-headers
response-mime-type
secure-connection
request-duration
waiting-for-server
response-duration
additional-info-json
layout-qualifier-for-connection-grouping
layout-qualifier-for-domain-grouping
containment-level
standalone-label
label-in-containment-hierarchy
Authentication Challenge
tableDefinition
$__lazy_storage_$_values
tableDefinitions
_TtCOO20BuiltinModelerPlugin12AnalysisCore15TypedReadCursor19BaseTableReadCursor
readCursor
shouldYield
wasInterrupted
a b c 
a b 
XRDYLDActivityModeler
metric
inputKdebugSchema
inputKdebugStringSchema
outputActivitySchema
_TtC20BuiltinModelerPluginP33_B3B49E9CBCD0A738804575E7245D668212DYLDActivity
type
Objc image init %library-address%
Building Closure
Remove image callback %text-symbol%
Add image callback %text-symbol%
Map image %file-path%
Run static initializer %text-symbol%
dlclose %file-path%
dlopen_preflight %file-path%
dlopen %file-path%
Launch Executable
Remove Image Callback
Add Image Callback
Static Initializer
dlopen_preflight
track-containment-level
XRHTTPAggregationModeler
inputTaskStartEvents
inputTaskEndEvents
inputTransactionEvents
outputAggregationSummary
taskCollector
transactionCollector
v24@?0@"<XREngineeringValue>"8@"<XREngineeringValue>"16
Missing status code for transaction id: %{public}@
Invalid state for state interval: id: %{public}@, state: %{public}@
XRURLSessionTaskIntervalModeler
v32@0:8@16@24
inputTableTaskStarts
inputTableTaskEnds
intervalOutputTable
tasksLayoutManager
incompleteTaskIntervalStarts
completedTasks
_TtC20BuiltinModelerPluginP33_553A06DDDCC89470046C0190A5BC238E14TaskStartEvent
layoutQualifier
_TtC20BuiltinModelerPluginP33_553A06DDDCC89470046C0190A5BC238E12TaskEndEvent
No matching task start event for har log with task UUID %@
Task End event did not have a task UUID
No matching task resume event for complete event with task UUID %@
v28@?0C8@"XRAnalysisCoreTableColumn"12^B20
Down-casted Array element failed to match the target type
Expected 
KeyPath<URLSessionTaskStartColumns, String>
Fatal error
NSArray element failed to match the Swift Array Element type
Expected 
KeyPath<URLSessionTaskEndColumns, String>
End of interval with identifier 
 was already set to 
BuiltinModelerPlugin/NonOverlappingIntervalsLayoutManager.swift
v32@?0@8Q16^B24
com-apple-cfnetwork-task-intervals
com-apple-cfnetwork-harlogging-schema
com-apple-cfnetwork-task-ends
com-apple-cfnetwork-task-starts
com-apple-cfnetwork-aggregation-drawables
(DYLDActivity in _B3B49E9CBCD0A738804575E7245D6682)
dyld-activity-interval
dyld-library-load
KeyPath<OsSignpostColumns, String>
KeyPath<TransactionIntervalBasicInfoColumns, String>
com-apple-cfnetwork-transaction-states
com-apple-cfnetwork-transaction-intervals-full-info
com-apple-cfnetwork-transaction-intervals
KeyPath<TransactionIntervalFullInfoColumns, String>
com-apple-cfnetwork-transaction-drawables
KeyPath<URLSessionTaskIntervalColumns, String>
com-apple-cfnetwork-task-drawables
XRCPUProfilerModeler
XRAnalysisCoreModeler
NSObject
XRSystraceModeler
XRHTTPArchiveLoggingModeler
XRGPUShaderProfilerModeler
XRURLSession
XRGenericCountersModeler
XRSystraceNoteBuilder
XRSystraceNarrativeBuilder
XRTimeSamplerModeler
XRGPUCountersModeler
XRGPUPerformanceStateModeler
NoteBuilderDelegate
XRSystraceNoteBuilderDelegate
XRCXXSystraceSyscallModeler
XRCXXVirtualMemoryModeler
XRCXXSystemTraceModeler
XRCXXCSwitchModeler
XRCXXSwiftConcurrencyModeler
XRBuiltInModelerPlugin
XRPlugin
XRNarrativeModeler
_PMCStringValue
.cxx_destruct
_counterInfoMap
T#,R
_getNormalizedWeightForCSwitch:
T@"<XRSystraceNoteBuilderDelegate>",W,N,V_delegate
_handleSyscall:
T@"NSString",&,N,V_backgroundIdentifier
_incompleteLogs
T@"NSString",R,C
_recordSyscall:
TB,N,GisEphemeral,V_ephemeral
_storedThreadAndProcessFromTID:
TQ,N
_syscallNameMap
TQ,N,VmachProcessingTime
_trackAssigners
TQ,R
enumerateObjectsAndIntegerKeys:
__tempStringImpl
isProxy
__tempValue2
lowercaseString
_activeShaders
setOutputCount:
_apsStreamBinding
tableID
.cxx_construct
_backtraceFixer
JSONObjectWithData:options:error:
_cpuStateSigMap
T@"<XRSystraceNarrativeBuilderDelegate>",W,N,V_delegate
_gpuInfoBinding
T@"NSData",&,N,V_additionalInformation
_handleVMFault:
T@"NSString",&,N,V_sessionName
_pendingShaders
T@"XRAnalysisCoreValue",&,N,V_internalUUID
_shared
TB,N,GisShared,V_shared
_syscallBinding
TQ,N,VinputCount
_totalOccupancy
TQ,N,VoutputCount
dealloc
UTF8String
getTID:process:
__tempValue
isValid
_activeKicks
release
_additionalInformation
setSessionName:
_averageAndRecordStateChanges:isFinal:
_backgroundIdentifier
_cacheTID:
_cacheThreadState:
_checkSyscallEnd:threadSig:
_cmdBufferIdToFrameAssignment
_commandBufferCompletedBinding
_contextSwitchBinding
_contextSwitchWriteCursor
_core
_coreCount
_counterInfoBinding
_counterIntervalBinding
_counterIntervalCursor
_counterValueBinding
_countersProfileBinding
_countersWriteCursor
_cpuNarrativeBinding
_cpuNarrativeWriteCursor
_cpuProfileBinding
_cpuProfilerWriteCursor
_cpuStateBinding
_cpuStateWriteCursor
_cpus
_delegate
_desiredState
_ephemeral
_factory
_fixBTInvocation
_fixBTOracleToken
_fixedBacktrace:atTime:
_fixedBacktraces
_fixupCallstack:atTime:
_fixupCallstacks:userBT:process:atTime:
_frameAssignmentBinding
_getNormalizedWeight:
_gpuExecutionPointsBinding
_gpuInfoMap
_gpuSubmissionToCommandBufferBinding
_handleCPUState:
_handleExecution:
_handleNewCounterValue:
_handleNewShaderInterval:
_handleNewShaderPC:timestamp:
_handleThreadState:
_handleThreadStateTransfer:data:parameters:
_hasPMICountFeature
_hasTotalOccupancy
_initSoftwareCounters
_initStateSignatureMapping
_inputBinding
_inputBindings
_internalUUID
_isInternal
_kdebugBinding
_kdebugCountersBinding
_knownCompositorBinding
_knownCompositors
_lastSampleIndex
_mod
_modeler
_narrative
_narrativeSupport
_normalizedWeight
_normalizer
_noteBuilder
_outputBinding
_performanceDeviceStateBinding
_performanceDeviceStateCursor
_performanceStateInfoBinding
_performanceStateInfoMap
_pmiCountersBinding
_previousState
_previousTimestamp
_record:newCPUState:
_recordCPUNarrative:start:duration:cpu:backtrace:
_recordInterval:
_recordInterval:unit:description:
_recordSysload:currentTime:
_recordTheadStateContextSwitch:timestamp:
_recordThreadNarrative:start:duration:threadSig:processSig:backtrace:
_recordThreadState:newState:
_recordVM:
_recordWaitingThreads
_resolveSoftwareCounters
_sampleProcessors
_sampleRateMS
_sessionName
_shaderInfoMap
_shaderIntervalBinding
_shaderIntervalCursor
_shaderListBinding
_shaderProfilerIntervalBinding
_shaderSampleBinding
_stateRecords
_storedThreadAndProcesses
_submissionToCommandBuffer
_submissionToFrameInfo
_syscallNameMapBinding
_syscallWriteCursor
_sysloadWriteCursor
_systemLoad
_systemLoadBinding
_targetCompability
_targetPid
_threadMap
_threadNarrativeBinding
_threadNarrativeWriteCursor
_threadSnapshotBinding
_threadStateBinding
_threadStateSigMap
_threadStateWriteCursor
_threadToSyscall
_threads
_tickBinding
_tidPidMappingBinding
_tidToPid
_timeProfileBinding
_timeSampleBinding
_timeSampleWriteCursor
_topPerformanceLimiter
_triggerInputBinding
_vmBinding
_vmWriteCursor
accessRights
activateWithOptions:
additionalInformation
advanceToNextRow
appendData:
appendNewRow
arrayWithObjects:count:
attributes
autorelease
backgroundIdentifier
bindingParameters
boolValue
caseInsensitiveCompare:
class
clear
columnCount
columnIDForMnemonic:
conformsToProtocol:
contextSwitchNote:
copyFromReadCursor:column:toColumn:
core
count
cpuStateFromCore:
cpuStateFromSignature:
cpuStateNarrative:threadState:
createOracleFunctionInvocation
data
debugDescription
debuggingAsynchronousPanicStop
debuggingDumpWorkingMemoryForContext:
debuggingEnumerateContextStrings:
debuggingExecuteCommand:context:
debuggingSwapLogString:
delegate
description
dictionary
enumerateColumns:
enumerateKeyValuePairs:
ephemeral
extractColumnIDs:forMnemonics:
firstObject
formatNarrative:
formatNarrative:args:
formatNarrativeWithStringSignatures:
getArgumentAsValue:atIndex:
getBacktraceFragment:process:frames:
getOutput:
getPID:sessionUUID:
getProcessDetails:session:
getProcessValue:pid:sessionUUID:
getStoredUInt64Array:
getThread:tid:process:
getThreadDetails:tid:
getValue:fieldIndex:
getValue:implementation:engineeringType:
getValue:signature:engineeringType:
getValue:signatures:engineeringType:
hasPrefix:
hasSuffix:
hash
implValue
implementationTypeFromID:
init
initWithCXXSystraceModeler:
initWithData:encoding:
initWithDelegate:factory:
initWithFactory:
initWithFirst:second:
initWithType:
inputCount
intValue
internalUUID
invokeOracleFunction:invocation:
isEphemeral
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
isShared
lastObject
leadingEventHorizon
length
logErrorIfDataIsNotValidJSON:
machProcessingTime
modelingActivityCompletedWithParameters:
name
objectAtIndexedSubscript:
objectForKeyedSubscript:
objectValue
oracleFunctionTokenWithName:
outputCount
parameters
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
populateOutputTables:usingObserverations:parameters:checkToYieldBlock:
populateOutputTables:usingObserverations:parameters:yieldFlag:
populateSpeculationTables:parameters:
primaryTimeColumnID
rangeOfString:
registerModelerWithIdentifier:modelerClass:
resetModelerStateWithTables:parameters:
respondsToSelector:
retain
retainCount
schema
self
sessionName
setAdditionalInformation:
setArgumentIndex:value:
setBackgroundIdentifier:
setData:
setDelegate:
setEphemeral:
setInputCount:
setInternalUUID:
setKeyValueArray:forColumn:
setMachProcessingTime:
setObject:forKeyedSubscript:
setOutput:
setShared:
setSignature:forColumn:
setString:
setString:forColumn:
setTrailingEventHorizon:
setTypedArrayWithValues:
setUInt32:forColumn:
setUInt64:forColumn:
setUInt64Array:forColumn:
setUInt64ArrayWithValues:
setURLSession:forColumn:
setUint32:
setUint64:
setValue:forColumn:
shared
sharedFactory
signature
signatureFromString:engineeringType:
signatureOfThread:
spec
speculationIsFinal
string
stringArrayValue
stringWithFormat:
stringWithUTF8String:
superclass
syscallNoteAndSignature:syscallName:
syscallThreadStateNarrative:
threadNote:data:
threadNote:kdebugData:
threadStateFromSignature:
threadStateFromTid:
threadStateNarrative:percentageOf:syscallName:
threadSummary:
trailingEventHorizon
uint32
uint64
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
uuidFromEngineeringValue
valueFactory
valueForColumnId:
vmFaultThreadStateNarrative:
writeCursorForTableID:
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
B48@0:8r^{XRAnalysisCoreTableBindings=}16^{XRAnalysisCoreReadCursor=}24@32^AB40
v32@0:8r^{XRAnalysisCoreTableBindings=}16@24
v24@0:8Q16
v24@0:8@16
@24@0:8@16
v24@0:8@?16
v16@0:8
v32@0:8@"<XRIntKeyedDictionaryImmutable>"16@"XRAnalysisCoreModelingParameters"24
B48@0:8r^{XRAnalysisCoreTableBindings=}16^{XRAnalysisCoreReadCursor=}24@"XRAnalysisCoreModelingParameters"32^AB40
v32@0:8r^{XRAnalysisCoreTableBindings=}16@"XRAnalysisCoreModelingParameters"24
v24@0:8@"XRAnalysisCoreModelingParameters"16
@"NSMutableAttributedString"24@0:8@"NSMutableAttributedString"16
v32@0:8@"NSString"16@"NSString"24
@"NSString"24@0:8@"NSString"16
v24@0:8@?<v@?@"NSString">16
Q48@0:8Q16Q24@32Q40
@32@0:8Q16Q24
{XRSystracekDebugWithCountersBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"arg1Col"C"arg2Col"C"arg3Col"C"arg4Col"C"functionCol"C"classCol"C"subclassCol"C"codeCol"C"userBTCol"C"kernelBTCol"C"pmcArray"C}
{XRSystracePMIWithCountersBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"pmiCount"C"userBTCol"C"kernelBTCol"C"pmcArray"C}
{CPUSampleBinding="tableID"I"timeCol"C"threadCol"C"processCol"C"cpuCol"C"threadStateCol"C"weightCol"C"stackCol"C}
^{XRAnalysisCoreWriteCursor=}
{unique_ptr<XRPMCNormalizer, std::default_delete<XRPMCNormalizer>>="__ptr_"{__compressed_pair<XRPMCNormalizer *, std::default_delete<XRPMCNormalizer>>="__value_"^{XRPMCNormalizer}}}
@"<XRAnalysisCoreValueFactory>"
@"<XRAnalysisCoreReadOnly>"
v40@0:8Q16^{XRSystraceKdebugData=QIQQQQIIIIQiQQQQ@Q}24@32
{tuple<unsigned long long, unsigned long long>={__tuple_impl<std::__tuple_indices<0, 1>, unsigned long long, unsigned long long>=QQ}}24@0:8Q16
v24@0:8^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16
v32@0:8^{XRSystraceCPU=QQQQiB}16^{XRSystraceCPU=QQQQiB}24
v32@0:8^{XRSystraceSystemLoad=QQqqQQQ}16Q24
v32@0:8^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}24
v32@0:8^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16Q24
Q32@0:8Q16Q24
^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}24@0:8Q16
^{XRSystraceCPU=QQQQiB}20@0:8I16
Q24@0:8Q16
{XRSystraceThreadStateBinding="tableID"I"startCol"C"durationCol"C"threadCol"C"cpuCol"C"stateCol"C"processCol"C"cpuTimeCol"C"waitTimeCol"C"priorityCol"C"noteCol"C"summaryCol"C}
{XRSystraceContextSwitchBinding="tableID"I"timeCol"C"cpuCol"C"eventCol"C"threadCol"C"processCol"C"noteCol"C"priorityCol"C}
{XRSystraceCPUStateBinding="tableID"I"startCol"C"durationCol"C"cpuCol"C"stateCol"C"threadCol"C"processCol"C"priorityCol"C}
{XRSystraceTickBinding="tableID"I"timeCol"C}
{XRSystraceSystemLoadBinding="tableID"I"startCol"C"durationCol"C"loadCol"C"uiLoadCol"C"uiLoadCommitmentCol"C}
{XRSystraceVMBinding="tableID"I"startCol"C"durationCol"C"threadCol"C"processCol"C"operationCol"C"cpuTimeCol"C"waitTimeCol"C"addressCol"C"sizeCol"C"backtraceCol"C}
{XRSystraceSyscallNameBinding="tableID"I"timeCol"C"classCol"C"subclassCol"C"codeCol"C"nameCol"C}
{XRSystraceSyscallBinding="tableID"I"startCol"C"durationCol"C"threadCol"C"processCol"C"callCol"C"cpuTimeCol"C"waitTimeCol"C"arg1Col"C"arg2Col"C"arg3Col"C"arg4Col"C"returnCol"C"errnoCol"C"backtraceCol"C"noteCol"C"signatureCol"C}
{unordered_map<unsigned long long, XRSystracekDebugBinding, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystracekDebugBinding>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{XRSystraceTIDPIDMappingBinding="tableID"I"timeCol"C"tidCol"C"pidCol"C}
{XRSystraceThreadSnapshotBinding="tableID"I"timeCol"C"threadCol"C"stateCol"C"priorityCol"C}
{unordered_map<unsigned long long, XRSystraceThread, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceThread>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceThread>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThread>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThread>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceThread>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThread>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThread>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, XRSystraceCPU, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceCPU>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceCPU>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPU>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, std::tuple<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::tuple<unsigned long long, unsigned long long>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::tuple<unsigned long long, unsigned long long>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, NSString *, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, NSString *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, NSString *>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, NSString *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, NSString *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, NSString *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, NSString *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, NSString *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, NSString *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, unsigned long long>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, unsigned long long>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{XRSystraceSystemLoad="time"Q"lastRecordTime"Q"load"q"uiLoad"q"sum"Q"uiSum"Q"weight"Q}
@"XRSystraceNoteBuilder"
@"<XRAnalysisCoreFunctionInvocation>"
@"XRAnalysisCoreValue"
@"XRAnalysisCoreImplValue"
{XRHTTPArchiveLoggingInputBinding="tableID"I"timeCol"C"messageCol"C"processCol"C"threadCol"C}
{XRHTTPArchiveLoggingOutputBinding="tableID"I"timeCol"C"processCol"C"harEventString"C}
@"NSMutableDictionary"
v24@0:8r^{XRGPUMetalGPUExecutionPoint=QQQQ}16
v32@0:8Q16Q24
v24@0:8r^{XRGPUShaderProfilerInterval=QQQII}16
v24@0:8r^{XRGPUActiveShaderInterval={XRGPUActiveKick={XRGPUMetalCommandBufferInfo={XRGPUMetalCommandBufferFrameAssignment=QQIIIQ}{XRGPUMetalGPUSubmissionToCommandBuffer=QQQQI}}QQQi@}{XRGPUShaderInfo=QQQQ@@@@@iQ}IQQ}16
{XRDeviceGPUInfoBinding="tableID"I"timestampCol"C"acceleratorIdCol"C"deviceNameCol"C"vendorNameCol"C"mobileCol"C}
{XRGPUShaderProfilerSampleBinding="tableID"I"timestampCol"C"pcCol"C"numPCCol"C}
{XRGPUShaderProfilerIntervalBinding="tableID"I"startCol"C"durationCol"C"pcCol"C"submissionIdCol"C"datamasterCol"C}
{XRGPUShaderIntervalBinding="tableID"I"startCol"C"durationCol"C"nameCol"C"labelCol"C"psoNameCol"C"eventNameCol"C"shaderTypeCol"C"percentOfKickCol"C"totalKickPercentCol"C"colorCol"C"eventPriorityCol"C"processCol"C"gpuCol"C"channelNameCol"C"eventDepthCol"C"connectionUUIDCol"C}
{XRGPUShaderListBinding="tableID"I"timestampCol"C"nameCol"C"labelCol"C"psoNameCol"C"idCol"C"pcStartCol"C"pcEndCol"C"shaderTypeCol"C"processCol"C"gpuCol"C}
{XRGPUMetalGPUExecutionPointsBinding="tableID"I"timestampCol"C"functionCol"C"gpuSubmissionIdCol"C"channelIdCol"C}
{XRGPUMetalCommandBufferCompletedBinding="tableID"I"timestampCol"C"cmdBufferIdCol"C}
{XRGPUMetalGPUSubmissionToCommandBufferBinding="tableID"I"timestampCol"C"cmdBufferIdCol"C"gpuSubmissionIdCol"C"acceleratorIdCol"C"pidCol"C}
{XRGPUMetalCommandBufferFrameAssignmentBinding="tableID"I"timestampCol"C"cmdBufferIdCol"C"frameNumberCol"C"frameColorCol"C"isCompositorCol"C"processCol"C}
{XRGPUMetalKnownCompositorProcessBinding="tableID"I"timestampCol"C"nameCol"C"pidCol"C"processCol"C}
@"XRAnalysisCoreNarrativeSupport"
{unordered_map<unsigned long long, XRDeviceGPUInfo, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRDeviceGPUInfo>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRDeviceGPUInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUActiveKick, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUActiveKick>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUActiveKick>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveKick>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveKick>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUMetalCommandBufferInfo, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUMetalCommandBufferInfo>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalGPUSubmissionToCommandBuffer>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUMetalCommandBufferFrameAssignment, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUMetalCommandBufferFrameAssignment>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUMetalCommandBufferFrameAssignment>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned int, XRGPUMetalKnownCompositorProcess, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, XRGPUMetalKnownCompositorProcess>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::hash<unsigned int>, std::equal_to<unsigned int>>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::equal_to<unsigned int>, std::hash<unsigned int>>, std::allocator<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::hash<unsigned int>, std::equal_to<unsigned int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, XRGPUMetalKnownCompositorProcess>, std::equal_to<unsigned int>, std::hash<unsigned int>>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUShaderInfoContainer, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUShaderInfoContainer>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUShaderInfoContainer>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, XRGPUActiveShaderInterval, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUActiveShaderInterval>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUActiveShaderInterval>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, std::vector<XRGPUActiveShaderInterval>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::vector<XRGPUActiveShaderInterval>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<XRGPUActiveShaderInterval>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
[5{XRGPUModelerTrackAssigner="currentId"I"tracks"{map<unsigned int, XRGPUModelerTrackAssigner::Track, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, XRGPUModelerTrackAssigner::Track>>>="__tree_"{__tree<std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>, std::less<unsigned int>>, std::allocator<std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, XRGPUModelerTrackAssigner::Track>, std::less<unsigned int>>>="__value_"Q}}}}]
@"NSNumber"
v20@0:8B16
@"NSString"
@"NSData"
B28@0:8@16C24
{triggerCountersInputBinding="type"i"binding"(?="pmiBinding"{XRSystracePMIWithCountersBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"pmiCount"C"userBTCol"C"kernelBTCol"C"pmcArray"C}"timeBinding"{XRSystraceTimeWithCountersBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"userBTCol"C"kernelBTCol"C"sampleTypeCol"C"pmcArray"C})}
{CountersSampleBinding="tableID"I"timeCol"C"threadCol"C"processCol"C"cpuCol"C"threadStateCol"C"stackCol"C"weightCol"C"countersCol"C}
{unique_ptr<XRBacktraceFixer, std::default_delete<XRBacktraceFixer>>="__ptr_"{__compressed_pair<XRBacktraceFixer *, std::default_delete<XRBacktraceFixer>>="__value_"^{XRBacktraceFixer}}}
@32@0:8@16@24
Q32@0:8r^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16r^v24
Q32@0:8r^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16r^{XRSystraceKdebugData=QIQQQQIIIIQiQQQQ@Q}24
Q24@0:8r^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}QQ}16
{tuple<unsigned long long, unsigned long long>={__tuple_impl<std::__tuple_indices<0, 1>, unsigned long long, unsigned long long>=QQ}}32@0:8r^{XRSystraceSyscall=QQQQQQQQQQQQQQQQi}16r*24
@"<XRSystraceNoteBuilderDelegate>"
i24@0:8Q16
Q32@0:8r^{XRSystraceRecordedCPUState=QQQIQQQ}16^{XRSystraceRecordedThreadState=QQQIQQQQ}24
Q24@0:8r^{XRSystraceRecordedVMFault=QQQQQQ}16
Q24@0:8r^{XRSystraceRecordedSyscall=QQQQQQQQQ}16
Q40@0:8r^{XRSystraceRecordedThreadState=QQQIQQQQ}16d24Q32
{unordered_map<unsigned long long, XRSystraceThreadState, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceThreadState>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceThreadState>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, XRSystraceCPUState, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceCPUState>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceCPUState>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
@"<XRSystraceNarrativeBuilderDelegate>"
Q24@0:8r^{XRSystraceContextSwitchSampleData=QIQQQ@QiIQ}16
Q24@0:8r^{XRSystraceTimeData=QIQQQ@QiIQQI}16
{TimeProfileBinding="tableID"I"timeCol"C"threadCol"C"processCol"C"cpuCol"C"threadStateCol"C"weightCol"C"stackCol"C}
{XRSystraceTimeBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"userBTCol"C"kernelBTCol"C"sampleTypeCol"C}
{XRSystraceContextSwitchSampleBinding="tableID"I"timeCol"C"threadCol"C"processCol"C"cpuCol"C"threadStateCol"C"btID"C}
{unordered_map<unsigned long long, XRThreadStateType, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRThreadStateType>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRThreadStateType>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRThreadStateType>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRThreadStateType>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRThreadStateType>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRThreadStateType>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRThreadStateType>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRThreadStateType>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
v24@0:8r^{XRGPUCounterValue=QIdQII}16
v40@0:8r^{XRGPUCounterInterval=QQddIIIII@@}16r*24r*32
{XRGPUCounterValueBinding="tableID"I"timestampCol"C"counterIdCol"C"valueCol"C"acceleratorIdCol"C"sampleIndexCol"C"ringBufferIndexCol"C}
{XRGPUCounterInfoBinding="tableID"I"timestampCol"C"counterIdCol"C"nameCol"C"maxValueCol"C"acceleratorIdCol"C"descriptionCol"C"groupIndexCol"C"typeCol"C"ringBufferCountCol"C"requireWeightedAccumulationCol"C"sampleIntervalCol"C}
{XRGPUCounterIntervalBinding="tableID"I"startCol"C"durationCol"C"counterIdCol"C"nameCol"C"labelCol"C"valueCol"C"percentValueCol"C"colorCol"C"gpuCol"C"groupIndexCol"C"isPercentageCol"C"ringBufferIndexCol"C}
{XRGPUAPSStreamBinding="tableID"I"timestampCol"C"sourceIndexCol"C"bufferIndexCol"C"sourceTypeCol"C"bufferCol"C}
{unordered_map<unsigned int, XRGPUCounterInfo, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, XRGPUCounterInfo>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::hash<unsigned int>, std::equal_to<unsigned int>>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::equal_to<unsigned int>, std::hash<unsigned int>>, std::allocator<std::__hash_value_type<unsigned int, XRGPUCounterInfo>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, XRGPUCounterInfo>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::hash<unsigned int>, std::equal_to<unsigned int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, XRGPUCounterInfo>, std::equal_to<unsigned int>, std::hash<unsigned int>>>="__value_"f}}}
{vector<std::unique_ptr<XRGPUCounterSampleProcessor>, std::allocator<std::unique_ptr<XRGPUCounterSampleProcessor>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::unique_ptr<XRGPUCounterSampleProcessor> *, std::allocator<std::unique_ptr<XRGPUCounterSampleProcessor>>>="__value_"^v}}
[1{XRGPUCounterInterval="start"Q"duration"Q"value"d"percentValue"d"counterId"I"color"I"groupIndex"I"isPercentage"I"ringBufferIndex"I"name"@"NSString""gpu"@"NSString"}]
[1{XRGPUCounterTopPerformanceLimiter="interval"{XRGPUCounterInterval="start"Q"duration"Q"value"d"percentValue"d"counterId"I"color"I"groupIndex"I"isPercentage"I"ringBufferIndex"I"name"@"NSString""gpu"@"NSString"}"counterName"@"NSString"}]
v28@0:8Q16B24
v24@0:8r^{XRGPUPerformanceDeviceState=QQQII}16
{XRGPUPerformanceStateInfoBinding="tableID"I"timestampCol"C"acceleratorIdCol"C"availableCol"C"enabledCol"C"sustainedCol"C"mappingCol"C"stateCol"C}
{XRGPUPerformanceDeviceStateBinding="tableID"I"startCol"C"durationCol"C"acceleratorIdCol"C"stateCol"C"desiredStateCol"C}
{XRSystracekDebugBinding="tableID"I"timeCol"C"threadCol"C"cpuCol"C"threadStateCol"C"arg1Col"C"arg2Col"C"arg3Col"C"arg4Col"C"functionCol"C"classCol"C"subclassCol"C"codeCol"C"userBTCol"C"kernelBTCol"C}
{unordered_map<unsigned long long, XRGPUPerformanceStateInfo, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRGPUPerformanceStateInfo>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRGPUPerformanceStateInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::unique_ptr<XRGPUPerformanceStateRecords>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
@24@0:8^v16
^{XRCXXModelingInterface=^^?}
v24@0:8^{XRSystraceRecordedThreadState=QQQIQQQQ}16
v24@0:8^{XRSystraceRecordedSyscall=QQQQQQQQQ}16
v24@0:8^{XRSystraceRecordedVMFault=QQQQQQ}16
v24@0:8^{XRSystraceRecordedCPUState=QQQIQQQ}16
v64@0:8Q16Q24Q32Q40Q48Q56
v52@0:8Q16Q24Q32I40Q44
{XRSystraceCPUNarrativeBinding="tableID"I"startCol"C"durationCol"C"cpuCol"C"significanceCol"C"narrativeCol"C"backtraceCol"C}
{XRSystraceThreadNarrativeBinding="tableID"I"startCol"C"durationCol"C"processCol"C"threadCol"C"significanceCol"C"narrativeCol"C"certaintyCol"C"backtraceCol"C}
{unordered_map<unsigned long long, XRSystraceNarrativesSyscall, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceNarrativesSyscall>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
{unordered_map<unsigned long long, XRSystraceRecordedThreadState, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, XRSystraceRecordedThreadState>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}
@"XRSystraceNarrativeBuilder"
System Trace modeler failed to process data because a factory could not be obtained.
System trace modeler found a CPU running thread %llu but no corresponding thread state
System Trace modeler failed to find stored thread signature for thread %llu when recording CPU running it.
The table ids don't match
os_log messages are expected to be a typed array.
Unknown log format
Expected os_log argument to be binary data but it is not.
First chunk of HAR JSON string does not start with `{` but should. JSON string: %@
Final chunk of HAR JSON string does not end in `}` but should. JSON string: %@
HAR JSON Data is not a valid string
Failed to decode HAR Entry JSON string. Error: %@
GPU performance state modeler failed to process data because a factory could not be obtained.
$s20BuiltinModelerPlugin6MetricP
11InputSchema
12OutputSchema
yyXlG
yp_So32XRAnalysisCoreFunctionInvocation_ptSg
IeyBd_
8taskUUID_
G0A4Infot
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
ySSSgG
SaySSG
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
ShySSGG
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
15keyByConnection_AA0aB10DomainOnlytSg
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
$ss12CaseIterableP
So19XRAnalysisCoreValueCG
_GSg
So19XRAnalysisCoreValueCSg
13transactionID_
8intervalt
13transactionID_
8intervaltSg
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
3key_
5valuetSg
3key_
5valuet
SdSg
SSGG
So19XRAnalysisCoreValueCG
So12XRURLSessionCSg
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
SaySo19XRAnalysisCoreValueCG
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
SDyxSay
yxq__GGG
q_Sg
SDySS
So19XRAnalysisCoreValueC5value_SS6stringtG
$s20BuiltinModelerPlugin22TableDefinitionColumnsP
$s20BuiltinModelerPlugin20TableValuesContainerP
11ColumnsType
So19XRAnalysisCoreValueCGSg
yxG1a_AAyq_G1bt
yxG1a_AAyq_G1bAAyq0_G1ct
So31XRAnalysisCoreReadCursorWrapperC
Sbyc
$s20BuiltinModelerPlugin31AnalysisCoreSomeSingleRowReaderP
So25XRAnalysisCoreTableSchemaC
$sSt
y__xq_q0_G
$sST
y__xq_G
y_xG
y__xG
SDySo19XRAnalysisCoreValueCSDyABSay
So30XRAnalysisCoreNarrativeSupportCSg
So19XRAnalysisCoreValueCSg4path_t
So19XRAnalysisCoreValueCSg7library_AC6symbolt
So19XRAnalysisCoreValueCSg6symbol_t
So19XRAnalysisCoreValueCSg7library_t
_pSg
__GG
Sbz_Xx
So8NSObjectC
5start_
Sg3end
Sg8harEntrytG
$s20BuiltinModelerPlugin22TaskEndValuesContainer33_553A06DDDCC89470046C0190A5BC238ELLP
SSSg
ypSg
5start_
Sg3end
Sg8harEntryt
3key_
5start_
Sg3end
Sg8harEntryt5valuetSg
3key_
5start_
Sg3end
Sg8harEntryt5valuet
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
SSG4from_ABy
SSG2totG
SSG4from_AAy
SSG2tot
5start_
Sg3end
Sg8harEntrytt
5start_
Sg3end
Sg8harEntrytG
_GGG
5start_
Sg3end
Sg8harEntrytSg
yxq__G
So19XRAnalysisCoreValueCG
SSG_G
SSGG
SSG_G
SSGG
Sg_ABt
_pSg
So25XRAnalysisCoreTableSchemaCSg
Gz_Xx
So25XRAnalysisCoreTableSchemaCSgz_Xx
ySo19XRAnalysisCoreValueCSay
ySo19XRAnalysisCoreValueCSDyACSay
So19XRAnalysisCoreValueC5value_SS6stringtG
SSGG
_SSt
So19XRAnalysisCoreValueCG
SSG_G
SSGG
ySnySiGG
SSG_G
SSGG
So19XRAnalysisCoreValueCG
ySS3key_SSSg5valuetG
SS3key_SSSg5valuet
_So19XRAnalysisCoreValueCt
_ShySSGt
ShySSGG
_GGG
ySSG
ySSG
$sSY
RawValue
start
duration
process
thread
type
description
library
symbol
path
level
backtrace
inputTableTasks
inputTableTransactions
inputTableTransactionStates
outputTable
cachedTasks
cachedTransactionColors
inputTableTransactions
inputTableTransactionStates
outputTable
cachedTransactions
layoutManager
alreadyWrittenDrawables
color
layoutQualifiers
wrappedLayoutManager
rowIndexWithinSameProcessAndDomain
rowIndexWithinSameProcessAndDomainAndConnection
processID
domain
connection
aggregationType
count
previousTimestamp
countByProcess
previousTimestampByProcess
previouslySeenEventID
task
transaction
deviceSessionID
processID
AllCases
RawValue
timestamp
eventType
processInfo
intervalId
time
cpuIndex
thread
callstack
event_class
event_subclass
code
function
arg1
arg2
arg3
arg4
string
inputTableTransactions
inputTableHarLogs
inputTableTaskEvents
outputTableTransactions
outputTableTransactionStates
jsonDecoder
sessionByTaskID
transactionsWaitingForAdditionalData
additionalInfo
endReasonValue
transactionID
taskID
request
response
serverIPAddress
connection
timings
fetchType
mimeType
text
method
httpVersion
headers
postData
headersSize
bodySize
status
statusText
content
redirectURL
cacheLookup
dnsLookup
connectionEstablishment
secureConnectionEstablishment
sendingRequest
receivingResponse
name
value
RawValue
size
encoding
start
base64
inputTable
outputTableTaskStarts
outputTableTaskEnds
previouslySeenTaskResumeUUIDs
cachedSessionNames
signpostIdToTaskUUID
traceRelativeTimestamp
taskUUID
sessionUUID
additionalInfo
session
taskIdentifier
taskDescription
method
attribution
sessionDescription
isSharedSession
isEphemeralSession
backgroundIdentifier
domain
code
localizedDescription
description
error
groupedActiveIntervals
lastInsertedIntervalStart
start
identifier
rowIndex
inKdebugTable
inKdebugStringTable
outDyldLibraryTable
lastUUIDEventByThread
libraryUUIDsByPath
dyldEvent
hasSentDyldEvent
lastSharedCacheEvent
stringBank
threadsByProcess
start
duration
process
domain
serverIP
session
layoutQualifier
uniqueTaskID
developerTaskID
taskDescription
sessionIsEphemeral
backtraceOfResumeCall
httpMethod
path
queryString
requestAttribution
wasSuccessful
errorDomain
errorCode
errorLocalizedDescription
errorOverallDescription
transactionId
connectionID
state
containmentLevel
standaloneLabel
labelInContainmentHierarchy
tooltip
color
taskId
layoutQualifierForConnection
layoutQualifierForDomain
label
drawableType
time
message
harJson
count
isAllProcesses
aggregationType
timestamp
backtrace
eventType
signpostId
signpostName
additionalInfo
endReason
httpStatusCode
requestHeaders
requestBody
httpVersion
endReasonString
httpStatusText
errorString
responseHeaders
responseBody
responseMimeType
redirectURL
fetchType
blockedDuration
cacheLookupDuration
dnsLookupDuration
tcpConnectionSetupDuration
secureConnectionSetupDuration
requestDuration
waitingForServerDuration
responseDuration
invalid
success
redirect
authenticationChallenge
failure
retry
tryNextProxy
RawValue
developer
user
cacheLookup
blocked
dnsLookup
tcpSetup
tlsSetup
quicSetup
request
waitingForResponse
response
begin
tableDefinition
$__lazy_storage_$_values
tableDefinitions
readCursor
shouldYield
wasInterrupted
tableIDs
schema
columns
ColumnsType
Element
Iterator
thread
uuidArray
loadAddress
fsid
fsidObjNo
fsidGeneration
pathID
type
map32
unmap
unmap32
sharedCache
sharedCache32
RawValue
metric
inputKdebugSchema
inputKdebugStringSchema
outputActivitySchema
start
type
backtrace
openActivities
kdebugStringTable
dyldPathTable
builder
open
openPreflight
close
staticInit
mapImage
addImageCallback
removeImageCallback
objcInit
launch
fixups
buildClosure
objcMap
InputSchema
OutputSchema
start
duration
process
thread
backtrace
type
path
uuid
loadAddress
trackContainmentLevel
color
method
attribution
inputTaskStartEvents
inputTaskEndEvents
inputTransactionEvents
outputAggregationSummary
taskCollector
transactionCollector
inputTableTaskStarts
inputTableTaskEnds
inputTableHarLogs
intervalOutputTable
tasksLayoutManager
incompleteTaskIntervalStarts
completedTasks
traceRelativeTimestamp
layoutQualifier
taskUUID
serverIPAddress
fetchType
RawValue
