@(#)PROGRAM:BuiltinModelerPlugin  PROJECT:Instruments-64540.122
 n;^
Qkkbal
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
initWithType:
schema
accessRights
primaryTimeColumnID
name
isEqualToString:
enumerateObjectsAndIntegerKeys:
threadNote:kdebugData:
_recordThreadState:newState:
_recordTheadStateContextSwitch:timestamp:
_fixedBacktrace:
_recordSyscall:
_recordVM:
getProcessValue:pid:sessionUUID:
getThread:tid:process:
signature
_storedThreadAndProcessFromTID:
createOracleFunctionInvocation
core
oracleFunctionTokenWithName:
initWithDelegate:factory:
_recordSysload:currentTime:
string
objectValue
integerValue
numberWithInteger:
setObject:forKeyedSubscript:
isValid
getThreadDetails:tid:
getProcessDetails:session:
_cacheTID:
_record:newCPUState:
_handleThreadStateTransfer:data:
setTrailingEventHorizon:
speculationIsFinal
leadingEventHorizon
setHasThousandSeparators:
setNumberStyle:
numberWithUnsignedLongLong:
stringFromNumber:
stringWithFormat:
setString:
getValue:implementation:engineeringType:
UTF8String
syscallNoteAndSignature:syscallName:
signatureFromString:engineeringType:
threadSummary:
contextSwitchNote:
getValue:signature:engineeringType:
setArgumentIndex:value:
invokeOracleFunction:invocation:
getOutput:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
resetModelerStateWithTables:parameters:
populateOutputTables:usingObserverations:parameters:yieldFlag:
populateSpeculationTables:parameters:
modelingActivityCompletedWithParameters:
debuggingSwapLogString:
debuggingExecuteCommand:context:
debuggingDumpWorkingMemoryForContext:
debuggingEnumerateContextStrings:
debuggingAsynchronousPanicStop
threadStateFromTid:
cpuStateFromCore:
signatureOfThread:
.cxx_destruct
.cxx_construct
_threadStateBinding
_contextSwitchBinding
_targetCompabilityBinding
_cpuStateBinding
_tickBinding
_systemLoadBinding
_vmBinding
_syscallNameMapBinding
_syscallBinding
_inputBindings
_tidPidMappingBinding
_threadSnapshotBinding
_threads
_cpus
_storedThreadAndProcesses
_syscallNameMap
_tidToPid
_systemLoad
_fixedBacktraces
_targetCompability
_outputCount
_inputCount
_totalTime
_coreCount
_threadStateWriteCursor
_cpuStateWriteCursor
_syscallWriteCursor
_vmWriteCursor
_contextSwitchWriteCursor
_sysloadWriteCursor
_noteBuilder
_core
_fixBTOracleToken
_fixBTInvocation
_factory
__tempValue
__tempValue2
__tempStringImpl
arrayWithObjects:count:
extractColumnIDs:forMnemonics:
initWithFactory:
formatNarrative:
delegate
setDelegate:
_delegate
_initStateSignatureMapping
cpuStateFromSignature:
threadStateFromSignature:
formatNarrativeWithStringSignatures:
cpuStateNarrative:threadState:
vmFaultThreadStateNarrative:
syscallThreadStateNarrative:
threadStateNarrative:percentageOf:syscallName:
_threadStateSigMap
_cpuStateSigMap
setWithObjects:
modeler
modelerClassName
containsObject:
setModeler:
enumerateInstancesWithBlock:
instanceModelersInSolution:
_handleThreadState:
_handleCPUState:
_handleSyscall:
_handleVMFault:
getValue:fieldIndex:
uint64
_recordThreadNarrative:start:duration:threadSig:processSig:backtrace:
_checkSyscallEnd:threadSig:
_cacheThreadState:
_recordCPUNarrative:start:duration:cpu:backtrace:
_cpuNarrativeBinding
_threadNarrativeBinding
_threadToSyscall
_threadMap
_cpuNarrativeWriteCursor
_threadNarrativeWriteCursor
_narrative
kdebug
tick
target-capability
syscall-name-map
tid-pid-mapping
thread-snapshot
thread-state
cpu-state
context-switch
system-load
virtual-memory
syscall
v32@?0@"XRAnalysisCoreTable"8Q16^c24
TODO
XRCallstackFixupOracle
com.apple.instruments.target.physical-cpus
Running
Blocked
Idle
Ready
Syscall
Unknown
Over
Partial
ThreadState
ContextSwitch
FIXBT
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
time
thread
core-index
arg1
arg2
arg3
arg4
function
class
subclass
code
cp-user-callstack
cp-kernel-callstack
name
version
state
priority
start
duration
core
process
cputime
waittime
note
summary
event
load
ui-load
ui-load-commitment
operation
address
size
backtrace
call
return
errno
signature
Zero Fill
Page In
Copy On Write
Page Cache Hit
Non-Zero Fill
Guard Page
File Backed Page In
Anonymous Memory Page In
Decompress Memory
Decompress Memory from Swap
Page Out
Handling Interrupt
XRSystraceCPUStateToString
/Library/Caches/com.apple.xbs/Sources/Instruments/Instruments-64540.122/Builtin Modeler Plugin/Shared/XRSystraceModelerShared.h
false
Runnable
Interrupted
Wait
Preempted
Suspended
Terminating
Terminated
XRSystraceThreadStateToString
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
forced off %XRCPUCoreTypeID% by %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
balanced off %XRCPUCoreTypeID% to optimize the system's CPU performance
yielding %XRCPUCoreTypeID% to %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
taken off CPU temporarily to cool the processor and surrounding hardware
made runnable by a timer expiration (handled by %XRCPUCoreTypeID%'s timer interrupt handler)
made runnable by an interrupt handler on %XRCPUCoreTypeID%
made runnable by %XRThreadTypeID% running on %XRCPUCoreTypeID%
parked waiting for new work items from dispatch
waiting for event/lock with id %XRVirtualMemoryAddressTypeID%
%thread-state% at priority %sched-priority% on %core%
%thread-state% on %core%
%thread-state% at priority %sched-priority%
%thread-state%
lost %XRCPUCoreTypeID% to %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
gave %XRCPUCoreTypeID% voluntarily to %XRThreadTypeID% with a priority of %XRSchedulingPriorityTypeID%
%XRCPUCoreTypeID% became idle (inferred)
%XRCPUCoreTypeID% became idle
will wait for event/lock with id %XRVirtualMemoryAddressTypeID% when it blocks
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%) = %XRSizeInBytesTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, off:%XRSizeInBytesTypeID%) = %XRSizeInBytesTypeID%
| X_OK
| W_OK
| R_OK
F_OK
0 (reachable)
%XRSystemCallNameTypeID%(path, amode:%XRSymbolicArgumentTypeID%) = %XRSymbolicArgumentTypeID%
-1 (failure)
0 (success)
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%) = %XRSymbolicArgumentTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, flags:%XRRegisterContentsTypeID%) = %XRSizeInBytesTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, buf:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, flags:%XRRegisterContentsTypeID%,...) = %XRSizeInBytesTypeID%
%XRSystemCallNameTypeID%(fd:%XRFileDescriptorTypeID%, msg:%XRVirtualMemoryAddressTypeID%, flags:%XRRegisterContentsTypeID%) = %XRSizeInBytesTypeID%
MADV_NORMAL
MADV_RANDOM
MADV_SEQUENTIAL
MADV_WILLNEED
MADV_DONTNEED
MADV_FREE
MADV_FREE_RESUSABLE
MADV_FREE_REUSE
%XRSystemCallNameTypeID%(addr:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, advice:%XRSymbolicArgumentTypeID%)
told the kernel that %XRSizeInBytesTypeID% of memory starting at %XRVirtualMemoryAddressTypeID% became available for reuse
| PROT_READ
| PROT_WRITE
| PROT_EXEC
PROT_NONE
%XRSystemCallNameTypeID%(addr:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, prot:%XRSymbolicArgumentTypeID%)
| MAP_SHARED
| MAP_PRIVATE
| MAP_FIXED
| MAP_RENAME
| MAP_NOEXTEND
| MAP_HASSEMAPHORE
| MAP_NOCACHE
| MAP_JIT
| MAP_ANON
| MAP_FILE
| MAP_RESILIENT_CODESIGN
| MAP_RESILIENT_MEDIA
%XRSystemCallNameTypeID%(addr:%XRVirtualMemoryAddressTypeID%, len:%XRSizeInBytesTypeID%, prot:%XRSymbolicArgumentTypeID%, flags:%XRSymbolicArgumentTypeID%) = %XRVirtualMemoryAddressTypeID%
%XRSystemCallNameTypeID%
EAGAIN was returned which is normal for a non-blocking file descriptor
end-of-file was encountered
the permission bits of the file mode do not permit the requested access, or search permission is denied on a component of the path prefix.
the call failed with an errno value of %XRSymbolicErrnoValueTypeID%
delegate
T@"<XRSystraceNoteBuilderDelegate>",W,N,V_delegate
Ran %XRThreadTypeID% at priority %XRSchedulingPriorityTypeID% for %XRDurationOnCPUTypeID%.
Servicing an interrupt handler, and preempting %XRThreadTypeID% for %XRDurationOnCPUTypeID%.
Servicing an interrupt handler for %XRDurationOnCPUTypeID%.
Idled waiting for work or interrupts to handle for %XRDurationOnCPUTypeID%.
Virtual memory %vm-op% took %duration%.
Called "%syscall%" for %duration-waiting%.
Called "%syscall%" for %duration-waiting%, %narrative%.
Ran for %duration-on-core% on %core% at priority %sched-priority%.
The thread was %narrative%. It waited for an available CPU for %duration-waiting% (%percent% of %syscall%'s duration) before running again at priority %sched-priority%.
The thread was %narrative%. It waited for an available CPU for %duration-waiting% before running again at priority %sched-priority%.
The thread was made runnable. It waited for an available CPU for %duration-waiting% (%percent% of %syscall%'s duration) before running again at priority %sched-priority%.
The thread was made runnable. It waited for an available CPU for %duration-waiting% before running again at priority %sched-priority%.
Interrupted for %duration-on-core% (%percent% of %syscall%'s duration) while %core% serviced an interrupt handler.
Interrupted for %duration-on-core% while %core% serviced an interrupt handler.
Preempted for %duration-on-core% (%percent% of %syscall%'s duration) because thread was %narrative%.
Preempted for %duration-on-core% because thread was %narrative.%
Preempted at priority %sched-priority% for %duration-on-core% (%percent% of %syscall%'s duration) because thread was %narrative%.
Preempted at priority %sched-priority% for %duration-on-core% because thread was %narrative%.
Preempted for %duration-on-core% (%percent% of %syscall%'s duration).
Preempted for %duration-on-core%.
Preempted at priority %sched-priority% for %duration-on-core% (%percent% of %syscall%'s duration).
Preempted at priority %sched-priority% for %duration-on-core%.
Blocked for %duration-waiting% (%percent% of %syscall%'s duration) starting at priority %sched-priority%. Thread is %narrative%.
Blocked for %duration-waiting% (%percent% of %syscall%'s duration) starting at priority %sched-priority%.
Blocked for %duration-waiting% starting at priority %sched-priority%.  Thread is %narrative%.
Blocked for %duration-waiting% starting at priority %sched-priority%.
Idle for %duration-waiting%. Thread is %narrative%.
Idle for %duration-waiting%.
T@"<XRSystraceNarrativeBuilderDelegate>",W,N,V_delegate
COM.APPLE.DT.INSTRUMENTS.SCHEDULING
COM.APPLE.DT.INSTRUMENTS.SYSTRACE.NATIVE
COM.APPLE.DT.INSTRUMENTS.SYSCALLS
COM.APPLE.DT.INSTRUMENTS.VM
COM.APPLE.DT.INSTRUMENTS.THREAD-NARRATIVE
COM.APPLE.DT.INSTRUMENTS.CPU-NARRATIVE
v20@?0@"XRAnalysisCoreModelerInstance"8C16
cpu-narrative
thread-narrative
significance
narrative
certainty
System Trace modeler failed to process data because a factory could not be obtained.
System trace modeler found a CPU running thread %llu but no corresponding thread state
System Trace modeler failed to find stored thread signature for thread %llu when recording CPU running it.
XRSystraceModeler
XRAnalysisCoreModeler
NSObject
XRSystraceNoteBuilder
XRSystraceNarrativeBuilder
XRBuiltinModelerFactory
XRAnalysisCoreModelerFactory
XRNarrativeModeler
c24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
c48@0:8r^{XRAnalysisCoreTableBindings=}16^{XRAnalysisCoreReadCursor=^^?I}24@32^Ac40
v32@0:8r^{XRAnalysisCoreTableBindings=}16@24
v24@0:8@16
@24@0:8@16
v24@0:8@?16
v16@0:8
v32@0:8@"<XRIntKeyedDictionaryImmutable>"16@"XRAnalysisCoreModelingParameters"24
c48@0:8r^{XRAnalysisCoreTableBindings=}16^{XRAnalysisCoreReadCursor=^^?I}24@"XRAnalysisCoreModelingParameters"32^Ac40
v32@0:8r^{XRAnalysisCoreTableBindings=}16@"XRAnalysisCoreModelingParameters"24
v24@0:8@"XRAnalysisCoreModelingParameters"16
@"NSMutableAttributedString"24@0:8@"NSMutableAttributedString"16
v32@0:8@"NSString"16@"NSString"24
@"NSString"24@0:8@"NSString"16
v24@0:8@?<v@?@"NSString">16
v32@0:8Q16^{XRSystraceKdebugData=QIQQQQIIIIQiQQQ}24
{tuple<unsigned long long, unsigned long long>={__tuple_impl<std::__1::__tuple_indices<0, 1>, unsigned long long, unsigned long long>=QQ}}24@0:8Q16
v24@0:8Q16
v24@0:8^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQ}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}Q}16
v32@0:8^{XRSystraceCPU=QQQQic}16^{XRSystraceCPU=QQQQic}24
v32@0:8^{XRSystraceSystemLoad=QQqqQQQ}16Q24
v32@0:8^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQ}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}Q}16^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQ}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}Q}24
v32@0:8^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQ}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}Q}16Q24
Q24@0:8Q16
^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQ}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}Q}24@0:8Q16
^{XRSystraceCPU=QQQQic}20@0:8I16
{XRSystraceThreadStateBinding="tableID"I"startCol"C"durationCol"C"threadCol"C"cpuCol"C"stateCol"C"processCol"C"cpuTimeCol"C"waitTimeCol"C"priorityCol"C"noteCol"C"summaryCol"C}
{XRSystraceContextSwitchBinding="tableID"I"timeCol"C"cpuCol"C"eventCol"C"threadCol"C"processCol"C"noteCol"C"priorityCol"C}
{XRSystraceTargetCompabilityBinding="tableID"I"timeCol"C"nameCol"C"versionCol"C}
{XRSystraceCPUStateBinding="tableID"I"startCol"C"durationCol"C"cpuCol"C"stateCol"C"threadCol"C"processCol"C"priorityCol"C}
{XRSystraceTickBinding="tableID"I"timeCol"C}
{XRSystraceSystemLoadBinding="tableID"I"startCol"C"durationCol"C"loadCol"C"uiLoadCol"C"uiLoadCommitmentCol"C}
{XRSystraceVMBinding="tableID"I"startCol"C"durationCol"C"threadCol"C"processCol"C"operationCol"C"cpuTimeCol"C"waitTimeCol"C"addressCol"C"sizeCol"C"backtraceCol"C}
{XRSystraceSyscallNameBinding="tableID"I"timeCol"C"classCol"C"subclassCol"C"codeCol"C"nameCol"C}
{XRSystraceSyscallBinding="tableID"I"startCol"C"durationCol"C"threadCol"C"processCol"C"callCol"C"cpuTimeCol"C"waitTimeCol"C"arg1Col"C"arg2Col"C"arg3Col"C"arg4Col"C"returnCol"C"errnoCol"C"backtraceCol"C"noteCol"C"signatureCol"C}
{unordered_map<unsigned long long, XRSystracekDebugBinding, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, XRSystracekDebugBinding> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystracekDebugBinding>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{XRSystraceTIDPIDMappingBinding="tableID"I"timeCol"C"tidCol"C"pidCol"C}
{XRSystraceThreadSnapshotBinding="tableID"I"timeCol"C"threadCol"C"stateCol"C"priorityCol"C}
{unordered_map<unsigned long long, XRSystraceThread, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, XRSystraceThread> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, XRSystraceThread>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceThread>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceThread>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, XRSystraceThread> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThread>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThread>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceThread>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceThread>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{unordered_map<unsigned long long, XRSystraceCPU, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, XRSystraceCPU> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, XRSystraceCPU>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceCPU>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceCPU>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, XRSystraceCPU> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPU>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceCPU>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceCPU>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{unordered_map<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> > > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> >, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> >, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> >, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> >, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> >, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::tuple<unsigned long long, unsigned long long> >, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{unordered_map<unsigned long long, NSString *, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, NSString *> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, NSString *>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, NSString *>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, NSString *>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, NSString *> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSString *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSString *>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSString *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSString *>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSString *>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSString *>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSString *>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSString *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSString *>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSString *>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSString *>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, NSString *>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, NSString *>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long long> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{XRSystraceSystemLoad="time"Q"lastRecordTime"Q"load"q"uiLoad"q"sum"Q"uiSum"Q"weight"Q}
@"NSMutableDictionary"
^{XRAnalysisCoreWriteCursor=}
@"XRSystraceNoteBuilder"
@"<XRAnalysisCoreReadOnly>"
@"<XRAnalysisCoreFunctionInvocation>"
@"<XRAnalysisCoreValueFactory>"
@"XRAnalysisCoreValue"
@"XRAnalysisCoreImplValue"
@32@0:8@16@24
Q32@0:8r^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQ}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}Q}16r^{XRSystraceKdebugData=QIQQQQIIIIQiQQQ}24
Q24@0:8r^{XRSystraceThread=QQiQiQQ{XRSystraceSyscall=QQQQQQQQQQQQQQQQ}{XRSystraceVMFault=QQQQQQQ}{XRSystraceContextSwitch=iQQQQ}Q}16
{tuple<unsigned long long, unsigned long long>={__tuple_impl<std::__1::__tuple_indices<0, 1>, unsigned long long, unsigned long long>=QQ}}32@0:8r^{XRSystraceSyscall=QQQQQQQQQQQQQQQQ}16r*24
@"<XRSystraceNoteBuilderDelegate>"
i24@0:8Q16
Q32@0:8r^{XRSystraceRecordedCPUState=QQQIQQQ}16^{XRSystraceRecordedThreadState=QQQIQQQQ}24
Q24@0:8r^{XRSystraceRecordedVMFault=QQQQQQ}16
Q24@0:8r^{XRSystraceRecordedSyscall=QQQQQQQQQ}16
Q40@0:8r^{XRSystraceRecordedThreadState=QQQIQQQQ}16d24Q32
{unordered_map<unsigned long long, XRSystraceThreadState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, XRSystraceThreadState> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceThreadState>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{unordered_map<unsigned long long, XRSystraceCPUState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, XRSystraceCPUState> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceCPUState>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
@"<XRSystraceNarrativeBuilderDelegate>"
v24@0:8@"XRAnalysisCoreModelerBindingSolution"16
v24@0:8^{XRSystraceRecordedThreadState=QQQIQQQQ}16
v32@0:8Q16Q24
v24@0:8^{XRSystraceRecordedSyscall=QQQQQQQQQ}16
v24@0:8^{XRSystraceRecordedVMFault=QQQQQQ}16
v24@0:8^{XRSystraceRecordedCPUState=QQQIQQQ}16
v64@0:8Q16Q24Q32Q40Q48Q56
v52@0:8Q16Q24Q32I40Q44
{XRSystraceCPUNarrativeBinding="tableID"I"startCol"C"durationCol"C"cpuCol"C"significanceCol"C"narrativeCol"C"backtraceCol"C}
{XRSystraceThreadNarrativeBinding="tableID"I"startCol"C"durationCol"C"processCol"C"threadCol"C"significanceCol"C"narrativeCol"C"certaintyCol"C"backtraceCol"C}
{unordered_map<unsigned long long, XRSystraceNarrativesSyscall, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, XRSystraceNarrativesSyscall> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceNarrativesSyscall>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{unordered_map<unsigned long long, XRSystraceRecordedThreadState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, XRSystraceRecordedThreadState> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, XRSystraceRecordedThreadState>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
^{XRAnalysisCoreWriteCursor=^^?ccc{bitset<64>=Q}{vector<_XRStorageManagerDirectAddress, std::__1::allocator<_XRStorageManagerDirectAddress> >=^{_XRStorageManagerDirectAddress}^{_XRStorageManagerDirectAddress}{__compressed_pair<_XRStorageManagerDirectAddress *, std::__1::allocator<_XRStorageManagerDirectAddress> >=^{_XRStorageManagerDirectAddress}}}Q@I^{_XRStorageManagerExternalAccessPack}^{vector<XRAnalysisCoreTableColumnInternals, std::__1::allocator<XRAnalysisCoreTableColumnInternals> >}@{_XRStorageManagerCursor=^I**B^{XRVMPagePool}{_XRStorageManagerDirectAddress=b2b30I}}}
@"XRSystraceNarrativeBuilder"
