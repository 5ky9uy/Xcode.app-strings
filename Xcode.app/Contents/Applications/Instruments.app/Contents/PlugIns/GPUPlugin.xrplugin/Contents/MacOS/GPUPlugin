@(#)PROGRAM:GPUPlugin  PROJECT:Instruments-64559.162
v8@?0
v24@?0@"JSContext"8@"JSValue"16
var %@ = 0;
var _DerivedCounterResult = [];
var _LastTimestamp = 0;
function _SetAndEvaluateRawCounterValues(numSamples) {
_DerivedCounterResult = [];
for (var sampleIndex = 0; sampleIndex < numSamples; ++sampleIndex) {
var sampleStartIndex = sampleIndex * %lu + 1;
var timestamp = (_RawCounterValues[0 + sampleIndex * %lu]) * TIMEBASE_NUMER / TIMEBASE_DENOM;
MTLStat_nSec = timestamp - _LastTimestamp; if (MTLStat_nSec > 1330000) { MTLStat_nSec = 1330000; }
TIME_SCALE = 1000.0 / 24.0; GBL_GPU_N_CLK_TIMER = MTLStat_nSec / TIME_SCALE; 
%@ = _RawCounterValues[%lu + sampleStartIndex];
%@_norm = _RawCounterValues[%lu + sampleStartIndex] / _RawCounterValues[1 + sampleStartIndex] * 100;
try { value = %@(); if (!isFinite(value)) { value = 0; } _DerivedCounterResult.push(value); } catch(err) { ErrorLog(err); _DerivedCounterResult.push(0); }
_LastTimestamp = timestamp
v16@?0@"NSString"8
ErrorLog
_RawCounterValues
_SetAndEvaluateRawCounterValues
_DerivedCounterResult
_vtx|_frg|_cmp
var MTLStat_nSec = %llu; var SAMPLE_INTERVAL_USEC = %llu;
var TIMEBASE_NUMER = %d; var TIMEBASE_DENOM = %d;
v32@?0@"NSString"8@16^c24
num_cores_per_ringbuffer
num_cores
num_mgpus
vector
basic_string
XRGPUWaitForCountersStart
XRGPUWaitForRemainingData
XRGPULoadRemainingData
XRGPULoadCountersMessage
XRGPUWaitingForGPUInfo
XRGPULoadGPUInfo
XRGPUTapDTXMessage
v16@?0@"DTXMessage"8
GPU Service reported error: %@
message
Failed to retrieve GPU info on target device
v16@?0r^{XRAnalysisCoreTableBindings=}8
Cannot find GPU device for counter collection
Cannot find GPU counters to collect
Cannot process GPU counters
mobile
Bandwidth
Percentage
Value
Cannot find GPU device for counter values
Cannot find GPU device for shader profiler values
family-name
[A|M](\d+)\D?
v32@?0r^Q8Q16Q24
Unexpected payload
accelerator-id
device-name
vendor-name
headless
low-power
removable
recommended-max-working-set-size
agx-tracecode-version
timestamp
counter-id
name
max-value
description
group-index
type
ring-buffer-count
require-weighted-accumulation
value
sample-index
ring-buffer-index
display-id
framebuffer-index
resolution
built-in
num-pcs
consistent-state-available
consistent-state-enabled
consistent-state-sustained
consistent-state-mapping
consistent-state
com.apple.instruments.server.services.gpu
com.apple.instruments.server.services.gpu.shaderprofiler
com.apple.instruments.server.services.gpu.counters
com.apple.instruments.server.services.gpu.counters.multisources
device-gpu-info
device-display-info
gpu-counter-info
counter-profile
counter-device
shader-profiler
gpu-counter-value
gpu-shader-profiler-sample
gpu-performance-state-info
requested-consistent-state
v24@?0Q8^c16
GPU Counter collection is not supported in Simulators.
Target device does not support GPU counter collection.
Try upgrading the target device to latest OS.
Target device does not support GPU counter collection. iOS 13 or later is required.
GPU Service is not available in the OS. GPU and GPU Memory info may be missing.
Shader Timeline tracing is not supported in Simulators.
Shader Timeline tracing is not supported on macOS.
Target device does not support Shader Timeline tracing. iOS 14 or later is required.
_counterGPUIndexOrAcceleratorID
.cxx_destruct
_counterRequest
JSValueRef
_handleMessage:
T@"<XRAnalysisCoreBulkLoadPanel>",&,N,V_analysisCoreBulkLoadPanel
_isDeltaCounter
T@"DTXMessage",&,N
_sampleInterval
T@"JSContext",R,N,V_context
allocNewContext
T@"NSArray",R,N,V_columns
channel
T@"NSString",R,N,V_columnName
command
T@"XRMobileAgent<XRMobileAgentVisitor>",&,N
context
T@?,C,N,V_exceptionHandler
details
TQ,R,N
initWithColumnName:columnIndex:
T^Ac,N
message
Tc,N,V_isMobileDevice
numberWithBool:
_analysisCoreBulkLoadPanel
setValue:value:
_cachedStringFromString:
toArray
.cxx_construct
_counterProfile
JSGlobalContextRef
_currentMessage
T@"<XRAnalysisCoreBulkLoadPanel>",&,N
_handleNewGPUMessage:timestamp:
T@"DTXChannel",&,N,V_channel
_isMobileDevice
T@"DTXMessage",&,N,V_replyMessageReceived
_virtualMachine
T@"JSVirtualMachine",R,N,V_virtualMachine
bulkLoadingPanelTicketForAgent:
T@"NSDictionary",&,N,V_gpuConfigurationVariables
columns
T@"XRGPUTapTableColumnMapping",R,N,V_timeColumn
containsString:
T@"XRMobileAgentTeam",&,N
dealloc
TI,R,N,V_tableID
greetingVisitor
TQ,R,N,V_columnIndex
isLocal
T^Ac,N,V_yieldNow
moveToFinished:
_advanceClock:
rawCounterCount
_cache
tableID
_channel
_clearCache
_codeGenCounterProcessing:derivedCounterNames:
_columnIndex
_columnMapping:schema:
_columnName
_columns
_context
_counterFunctionNames
_counterMaxValues
_counterMultiplier
_counterProcessors
_createAndWriteGPUInfo:deviceInfoDict:
_dataClock
_derivedCounterScript
_deviceInfoMap
_epoch
_exceptionHandler
_failedWithError:itinerary:
_filename
_fillCounterInfoTableMapping:tableID:
_fillCounterValueTableMapping:tableID:
_fillDeviceDisplayInfoTableMapping:tableID:
_fillDeviceGPUInfoTableMapping:tableID:
_fillGPUPerformanceInfoTableMapping:tableID:
_fillShaderProfilerSampleTableMapping:tableID:
_finishRecording:
_globalObject
_gpuConfigurationVariables
_gpuMapping
_handleCounterConfiguredMessage:
_handleCounterInfoMessage:acceleratorID:profile:config:ringBufferCount:sourceIndex:
_handleCounterValueMessage:acceleratorID:numSamples:sampleData:ringBufferIndex:sourceIndex:
_handleFinalData:
_handleGPUInfoMessage:
_handleRemoteServiceMessage:
_handleShaderProfilerBufferMessage:version:acceleratorID:numSamples:sampleData:ringBufferIndex:sourceIndex:
_handleStopRecording:
_hasRemoteService
_jsContext
_jsStringToString:
_jsValueToString:
_lastSample
_needsPostProcessing
_previousProcessedSample
_rawCounterNames
_replyMessageReceived
_retrieveDeviceInfoForDevice:
_sampleIndexes
_stringCache
_supportsGPUSelection
_supportsMultiSourceCounters
_supportsShaderProfiler
_tableColumnIDMapping
_tableID
_targetPerformanceState
_timeColumn
_yieldNow
acceleratorID
addIndex:
addObject:
agentForCommand:
analysisCoreBulkLoadPanel
appendFormat:
appendString:
arrayWithObjects:count:
attributes
boolValue
bytes
callFunction:withArguments:
callGlobalFunction:
callWithArguments:
cancel
columnIDForMnemonic:
columnIndex
columnName
commandPurpose
configureCounters:counterProfile:interval:windowLimit:tracingPID:
connectedDisplays
connection
consistentPerformanceState
consistentPerformanceStateAvailable
consistentPerformanceStateEnabled
consistentPerformanceStateMapping
consistentPerformanceStateSustained
copy
core
count
countByEnumeratingWithState:objects:count:
counterCount
deactivated
deviceIdentifier
deviceTimeInfo
dictionaryWithObjects:forKeys:count:
disableConsistentGPUPerformanceState
disableConsistentGPUPerformanceState:
doubleValue
enableConsistentGPUPerformanceState:acceleratorID:
enableMultiSourceCounters
enableShaderProfiler
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
error
errorStatus
evaluateScript:withSourceURL:
evaluteScript:scriptURL:
exceptionHandler
executeStopOnItinerary:
flushAllRemainingData:
flushRemainingData
getGlobalDouble:
getValue:
gpuConfigurationVariables
greetingTeam
handleCounterInfo:rawCounters:derivedCounterScript:sampleInterval:timeBase:
handleCourier:itinerary:
handleIssue:type:from:
init
initWIthTableID:columns:timeColumn:
initWithIndex:
initWithReplyDict:
initWithVirtualMachine:
instrumentsPlugInErrorWithCode:description:recoverySuggestion:
instrumentsPlugInErrorWithCode:descriptionFormat:
intValue
integerValue
isDeferred
isEqualToString:
isMobileDevice
isSimulator
isWindowed
issueResponder
lastPathComponent
length
localizedDescription
machTimeBase
makeChannelWithIdentifier:
matchesInString:options:range:
messageReplyTicketForControlMessage:agent:
messageWithSelector:objectArguments:
messageWithSelector:typesAndArguments:
minCounterCollectionInterval
mode
moveToFailed:
name
numberOfRanges
numberWithInt:
numberWithUnsignedInt:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
object
objectAtIndexedSubscript:
objectForKeyedSubscript:
parseShaderProfilerSamples:numSamples:gpuFamily:callback:
performMainThreadSafeSetup:
performanceStateInfo
populateTableIDs:block:
prepareAndEvaluateCounterValues:numElementsPerSample:numSamples:
prepareCounterNames:derivedCounterNames:
processCounterSample:numSamples:ringBufferIndex:
rangeAtIndex:
rawAttributes
recordingOptions
recordingStopped:
regularExpressionWithPattern:options:error:
remoteCapabilityVersion:
replyMessageReceived
reportFailureReason:recovery:
requestDeviceGPUInfo
returnToRunning:
schemaName
schemataByName
selectSupportedTableSpecs:command:
sendCourierToVisitWaitingRoom:message:details:
sendMessage:replyHandler:
sendMessageSync:replyHandler:
setAnalysisCoreBulkLoadPanel:
setChannel:
setExceptionHandler:
setGlobalDouble:value:
setGpuConfigurationVariables:
setGreetingTeam:
setGreetingVisitor:
setIsMobileDevice:
setMessageHandler:
setNextStop:mode:ticket:
setObject:forKeyedSubscript:
setRawArrayValue:bytes:numElements:
setReplyMessageReceived:
setYieldNow:
sharedContext
start:
startCollectingCounters
stopCollectingCounters
stopRecording:
string
stringByAppendingString:
stringByReplacingMatchesInString:options:range:withTemplate:
stringByReplacingOccurrencesOfString:withString:
stringValue
stringWithFormat:
stringWithUTF8String:
substringWithRange:
tableIDsToPopulate
tableSpecsByID
targetDevice
timeColumn
toDouble
toString
topIssueAffectingRecordingOfTableSpecs:command:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
updateTrailingEventHorizon:
valueWithObject:inContext:
virtualMachine
voteDeviceRelativeMachAbsoluteTime:
voteForEpoch:
waitingRoom
windowLimit
write:data:
write:rawData:
write:rawValue:numElements:
write:tupleData:
write:value:
yieldNow
XRGPUTapJavaScriptContext
XRGPUTapGPUCounterProcessor
XRGPUTapTableColumnMapping
XRGPUTapTableMapping
XRGPUTapAgent
XRAnalysisCoreBulkLoadingAgent
XRMinorFrameAgent
XRMobileAgentOwner
XRReplyReceivingAgent
XRGPUTapPlugIn
@16@0:8
v16@0:8
{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long={?=b1b63}Q*}{__short={?=b1b7}[0c][23c]}{__raw=[3Q]})}}}24@0:8^{OpaqueJSString=}16
{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long={?=b1b63}Q*}{__short={?=b1b7}[0c][23c]}{__raw=[3Q]})}}}24@0:8^{OpaqueJSValue=}16
c32@0:8@16@24
d32@0:8@16@24
^{OpaqueJSString=}24@0:8r*16
d24@0:8r*16
v32@0:8r*16d24
c40@0:8r*16^Q24Q32
@32@0:8@16@24
@40@0:8^Q16Q24Q32
@24@0:8@16
@?16@0:8
v24@0:8@?16
{unordered_map<std::string, OpaqueJSValue *, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, OpaqueJSValue *>>>="__table_"{__hash_table<std::__hash_value_type<std::string, OpaqueJSValue *>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, OpaqueJSValue *>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, OpaqueJSValue *>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, OpaqueJSValue *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, OpaqueJSValue *>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, OpaqueJSValue *>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}
{unordered_map<std::string, OpaqueJSString *, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, OpaqueJSString *>>>="__table_"{__hash_table<std::__hash_value_type<std::string, OpaqueJSString *>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, OpaqueJSString *>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, OpaqueJSString *>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, OpaqueJSString *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, OpaqueJSString *>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, OpaqueJSString *>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}
^{OpaqueJSValue=}
@"NSString"
@"JSVirtualMachine"
@"JSContext"
c56@0:8@16@24@32Q40@48
v24@0:8@16
^d36@0:8^Q16Q24I32
Q16@0:8
v44@0:8^Q16Q24i32@?36
c16@0:8
v20@0:8c16
@"NSMutableArray"
@"XRGPUTapJavaScriptContext"
{vector<unsigned char, std::allocator<unsigned char>>="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::allocator<unsigned char>>="__value_"*}}
{vector<unsigned int, std::allocator<unsigned int>>="__begin_"^I"__end_"^I"__end_cap_"{__compressed_pair<unsigned int *, std::allocator<unsigned int>>="__value_"^I}}
{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}
{vector<unsigned long long, std::allocator<unsigned long long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::allocator<unsigned long long>>="__value_"^Q}}
@"NSDictionary"
@32@0:8@16Q24
c32@0:8r^{XRAnalysisCoreWriteCursor=}16@24
c36@0:8r^{XRAnalysisCoreWriteCursor=}16^v24I32
@36@0:8I16@20@28
v32@0:8r^{XRAnalysisCoreWriteCursor=}16@24
v32@0:8r^{XRAnalysisCoreWriteCursor=}16^Q24
I16@0:8
@"NSArray"
@"XRGPUTapTableColumnMapping"
^Ac16@0:8
v24@0:8^Ac16
@"<XRAnalysisCoreBulkLoadPanel>"16@0:8
v24@0:8@"<XRAnalysisCoreBulkLoadPanel>"16
@"XRMobileAgent<XRMobileAgentVisitor>"16@0:8
v24@0:8@"XRMobileAgent<XRMobileAgentVisitor>"16
@"XRMobileAgentTeam"16@0:8
v24@0:8@"XRMobileAgentTeam"16
@"DTXMessage"16@0:8
v24@0:8@"DTXMessage"16
v24@0:8Q16
v32@0:8@16@24
c56@0:8Q16Q24Q32@40I48I52
c24@0:8Q16
@32@0:8r^{XRAnalysisCoreTableBindings=}16@24
c32@0:8@16Q24
c56@0:8Q16Q24Q32^Q40I48I52
c64@0:8Q16Q24Q32Q40^Q48I56I60
c24@0:8@16
v28@0:8@16I24
@"DTXMessage"
@"NSMutableDictionary"
[5[16Q]]
@"<XRAnalysisCoreBulkLoadPanel>"
@"DTXChannel"
@(#)PROGRAM:GPUPlugin  PROJECT:Instruments-64559.162
v8@?0
v24@?0@"JSContext"8@"JSValue"16
var %@ = 0;
var _DerivedCounterResult = [];
var _LastTimestamp = 0;
function _SetAndEvaluateRawCounterValues(numSamples) {
_DerivedCounterResult = [];
for (var sampleIndex = 0; sampleIndex < numSamples; ++sampleIndex) {
var sampleStartIndex = sampleIndex * %lu + 1;
var timestamp = (_RawCounterValues[0 + sampleIndex * %lu]) * TIMEBASE_NUMER / TIMEBASE_DENOM;
MTLStat_nSec = timestamp - _LastTimestamp; if (MTLStat_nSec > 1330000) { MTLStat_nSec = 1330000; }
TIME_SCALE = 1000.0 / 24.0; GBL_GPU_N_CLK_TIMER = MTLStat_nSec / TIME_SCALE; 
%@ = _RawCounterValues[%lu + sampleStartIndex];
%@_norm = _RawCounterValues[%lu + sampleStartIndex] / _RawCounterValues[1 + sampleStartIndex] * 100;
try { value = %@(); if (!isFinite(value)) { value = 0; } _DerivedCounterResult.push(value); } catch(err) { ErrorLog(err); _DerivedCounterResult.push(0); }
_LastTimestamp = timestamp
v16@?0@"NSString"8
ErrorLog
_RawCounterValues
_SetAndEvaluateRawCounterValues
_DerivedCounterResult
_vtx|_frg|_cmp
var MTLStat_nSec = %llu; var SAMPLE_INTERVAL_USEC = %llu;
var TIMEBASE_NUMER = %d; var TIMEBASE_DENOM = %d;
v32@?0@"NSString"8@16^B24
num_cores_per_ringbuffer
num_cores
num_mgpus
vector
basic_string
XRGPUWaitForCountersStart
XRGPUWaitForRemainingData
XRGPULoadRemainingData
XRGPULoadCountersMessage
XRGPUWaitingForGPUInfo
XRGPULoadGPUInfo
XRGPUTapDTXMessage
v16@?0@"DTXMessage"8
GPU Service reported error: %@
message
Failed to retrieve GPU info on target device
v16@?0r^{XRAnalysisCoreTableBindings=}8
Cannot find GPU device for counter collection
Cannot find GPU counters to collect
Cannot process GPU counters
mobile
Bandwidth
Percentage
Value
Cannot find GPU device for counter values
Cannot find GPU device for shader profiler values
family-name
[A|M](\d+)\D?
v32@?0r^Q8Q16Q24
Unexpected payload
accelerator-id
device-name
vendor-name
headless
low-power
removable
recommended-max-working-set-size
agx-tracecode-version
timestamp
counter-id
name
max-value
description
group-index
type
ring-buffer-count
require-weighted-accumulation
value
sample-index
ring-buffer-index
display-id
framebuffer-index
resolution
built-in
num-pcs
consistent-state-available
consistent-state-enabled
consistent-state-sustained
consistent-state-mapping
consistent-state
com.apple.instruments.server.services.gpu
com.apple.instruments.server.services.gpu.shaderprofiler
com.apple.instruments.server.services.gpu.counters
com.apple.instruments.server.services.gpu.counters.multisources
device-gpu-info
device-display-info
gpu-counter-info
counter-profile
counter-device
shader-profiler
gpu-counter-value
gpu-shader-profiler-sample
gpu-performance-state-info
requested-consistent-state
v24@?0Q8^B16
GPU Counter collection is not supported in Simulators.
Target device does not support GPU counter collection.
Try upgrading the target device to latest OS.
Target device does not support GPU counter collection. iOS 13 or later is required.
GPU Service is not available in the OS. GPU and GPU Memory info may be missing.
Shader Timeline tracing is not supported in Simulators.
Shader Timeline tracing is not supported on macOS.
Target device does not support Shader Timeline tracing. iOS 14 or later is required.
_counterGPUIndexOrAcceleratorID
.cxx_destruct
_counterRequest
JSValueRef
_handleMessage:
T@"<XRAnalysisCoreBulkLoadPanel>",&,N,V_analysisCoreBulkLoadPanel
_isDeltaCounter
T@"DTXMessage",&,N
_sampleInterval
T@"JSContext",R,N,V_context
allocNewContext
T@"NSArray",R,N,V_columns
channel
T@"NSString",R,N,V_columnName
command
T@"XRMobileAgent<XRMobileAgentVisitor>",&,N
context
T@?,C,N,V_exceptionHandler
details
TI,R,N,V_tableID
initWithColumnName:columnIndex:
TQ,R,N,V_columnIndex
message
T^AB,N,V_yieldNow
numberWithBool:
_analysisCoreBulkLoadPanel
setValue:value:
_cachedStringFromString:
toArray
.cxx_construct
_counterProfile
JSGlobalContextRef
_currentMessage
T@"<XRAnalysisCoreBulkLoadPanel>",&,N
_handleNewGPUMessage:timestamp:
T@"DTXChannel",&,N,V_channel
_isMobileDevice
T@"DTXMessage",&,N,V_replyMessageReceived
_virtualMachine
T@"JSVirtualMachine",R,N,V_virtualMachine
bulkLoadingPanelTicketForAgent:
T@"NSDictionary",&,N,V_gpuConfigurationVariables
columns
T@"XRGPUTapTableColumnMapping",R,N,V_timeColumn
containsString:
T@"XRMobileAgentTeam",&,N
dealloc
TB,N,V_isMobileDevice
greetingVisitor
TQ,R,N
isLocal
T^AB,N
moveToFinished:
_advanceClock:
rawCounterCount
_cache
tableID
_channel
_clearCache
_codeGenCounterProcessing:derivedCounterNames:
_columnIndex
_columnMapping:schema:
_columnName
_columns
_context
_counterFunctionNames
_counterMaxValues
_counterMultiplier
_counterProcessors
_createAndWriteGPUInfo:deviceInfoDict:
_dataClock
_derivedCounterScript
_deviceInfoMap
_epoch
_exceptionHandler
_failedWithError:itinerary:
_filename
_fillCounterInfoTableMapping:tableID:
_fillCounterValueTableMapping:tableID:
_fillDeviceDisplayInfoTableMapping:tableID:
_fillDeviceGPUInfoTableMapping:tableID:
_fillGPUPerformanceInfoTableMapping:tableID:
_fillShaderProfilerSampleTableMapping:tableID:
_finishRecording:
_globalObject
_gpuConfigurationVariables
_gpuMapping
_handleCounterConfiguredMessage:
_handleCounterInfoMessage:acceleratorID:profile:config:ringBufferCount:sourceIndex:
_handleCounterValueMessage:acceleratorID:numSamples:sampleData:ringBufferIndex:sourceIndex:
_handleFinalData:
_handleGPUInfoMessage:
_handleRemoteServiceMessage:
_handleShaderProfilerBufferMessage:version:acceleratorID:numSamples:sampleData:ringBufferIndex:sourceIndex:
_handleStopRecording:
_hasRemoteService
_jsContext
_jsStringToString:
_jsValueToString:
_lastSample
_needsPostProcessing
_previousProcessedSample
_rawCounterNames
_replyMessageReceived
_retrieveDeviceInfoForDevice:
_sampleIndexes
_stringCache
_supportsGPUSelection
_supportsMultiSourceCounters
_supportsShaderProfiler
_tableColumnIDMapping
_tableID
_targetPerformanceState
_timeColumn
_yieldNow
acceleratorID
addIndex:
addObject:
agentForCommand:
analysisCoreBulkLoadPanel
appendFormat:
appendString:
arrayWithObjects:count:
attributes
boolValue
bytes
callFunction:withArguments:
callGlobalFunction:
callWithArguments:
cancel
columnIDForMnemonic:
columnIndex
columnName
commandPurpose
configureCounters:counterProfile:interval:windowLimit:tracingPID:
connectedDisplays
connection
consistentPerformanceState
consistentPerformanceStateAvailable
consistentPerformanceStateEnabled
consistentPerformanceStateMapping
consistentPerformanceStateSustained
copy
core
count
countByEnumeratingWithState:objects:count:
counterCount
deactivated
deviceIdentifier
deviceTimeInfo
dictionaryWithObjects:forKeys:count:
disableConsistentGPUPerformanceState
disableConsistentGPUPerformanceState:
doubleValue
enableConsistentGPUPerformanceState:acceleratorID:
enableMultiSourceCounters
enableShaderProfiler
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
error
errorStatus
evaluateScript:withSourceURL:
evaluteScript:scriptURL:
exceptionHandler
executeStopOnItinerary:
flushAllRemainingData:
flushRemainingData
getGlobalDouble:
getValue:
gpuConfigurationVariables
greetingTeam
handleCounterInfo:rawCounters:derivedCounterScript:sampleInterval:timeBase:
handleCourier:itinerary:
handleIssue:type:from:
init
initWIthTableID:columns:timeColumn:
initWithIndex:
initWithReplyDict:
initWithVirtualMachine:
instrumentsPlugInErrorWithCode:description:recoverySuggestion:
instrumentsPlugInErrorWithCode:descriptionFormat:
intValue
integerValue
isDeferred
isEqualToString:
isMobileDevice
isSimulator
isWindowed
issueResponder
lastPathComponent
length
localizedDescription
machTimeBase
makeChannelWithIdentifier:
matchesInString:options:range:
messageReplyTicketForControlMessage:agent:
messageWithSelector:objectArguments:
messageWithSelector:typesAndArguments:
minCounterCollectionInterval
mode
moveToFailed:
name
numberOfRanges
numberWithInt:
numberWithUnsignedInt:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
object
objectAtIndexedSubscript:
objectForKeyedSubscript:
parseShaderProfilerSamples:numSamples:gpuFamily:callback:
performMainThreadSafeSetup:
performanceStateInfo
populateTableIDs:block:
prepareAndEvaluateCounterValues:numElementsPerSample:numSamples:
prepareCounterNames:derivedCounterNames:
processCounterSample:numSamples:ringBufferIndex:
rangeAtIndex:
rawAttributes
recordingOptions
recordingStopped:
regularExpressionWithPattern:options:error:
remoteCapabilityVersion:
replyMessageReceived
reportFailureReason:recovery:
requestDeviceGPUInfo
returnToRunning:
schemaName
schemataByName
selectSupportedTableSpecs:command:
sendCourierToVisitWaitingRoom:message:details:
sendMessage:replyHandler:
sendMessageSync:replyHandler:
setAnalysisCoreBulkLoadPanel:
setChannel:
setExceptionHandler:
setGlobalDouble:value:
setGpuConfigurationVariables:
setGreetingTeam:
setGreetingVisitor:
setIsMobileDevice:
setMessageHandler:
setNextStop:mode:ticket:
setObject:forKeyedSubscript:
setRawArrayValue:bytes:numElements:
setReplyMessageReceived:
setYieldNow:
sharedContext
start:
startCollectingCounters
stopCollectingCounters
stopRecording:
string
stringByAppendingString:
stringByReplacingMatchesInString:options:range:withTemplate:
stringByReplacingOccurrencesOfString:withString:
stringValue
stringWithFormat:
stringWithUTF8String:
substringWithRange:
tableIDsToPopulate
tableSpecsByID
targetDevice
timeColumn
toDouble
toString
topIssueAffectingRecordingOfTableSpecs:command:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
updateTrailingEventHorizon:
valueWithObject:inContext:
virtualMachine
voteDeviceRelativeMachAbsoluteTime:
voteForEpoch:
waitingRoom
windowLimit
write:data:
write:rawData:
write:rawValue:numElements:
write:tupleData:
write:value:
yieldNow
XRGPUTapJavaScriptContext
XRGPUTapGPUCounterProcessor
XRGPUTapTableColumnMapping
XRGPUTapTableMapping
XRGPUTapAgent
XRAnalysisCoreBulkLoadingAgent
XRMinorFrameAgent
XRMobileAgentOwner
XRReplyReceivingAgent
XRGPUTapPlugIn
@16@0:8
v16@0:8
{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*Qb63b1}{__short=[23c][0C]b7b1}{__raw=[3Q]})}}}24@0:8^{OpaqueJSString=}16
{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*Qb63b1}{__short=[23c][0C]b7b1}{__raw=[3Q]})}}}24@0:8^{OpaqueJSValue=}16
B32@0:8@16@24
d32@0:8@16@24
^{OpaqueJSString=}24@0:8r*16
d24@0:8r*16
v32@0:8r*16d24
B40@0:8r*16^Q24Q32
@32@0:8@16@24
@40@0:8^Q16Q24Q32
@24@0:8@16
@?16@0:8
v24@0:8@?16
{unordered_map<std::string, OpaqueJSValue *, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, OpaqueJSValue *>>>="__table_"{__hash_table<std::__hash_value_type<std::string, OpaqueJSValue *>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, OpaqueJSValue *>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, OpaqueJSValue *>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, OpaqueJSValue *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSValue *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, OpaqueJSValue *>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, OpaqueJSValue *>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}
{unordered_map<std::string, OpaqueJSString *, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, OpaqueJSString *>>>="__table_"{__hash_table<std::__hash_value_type<std::string, OpaqueJSString *>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, OpaqueJSString *>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, OpaqueJSString *>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, OpaqueJSString *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, OpaqueJSString *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, OpaqueJSString *>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, OpaqueJSString *>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}
^{OpaqueJSValue=}
@"NSString"
@"JSVirtualMachine"
@"JSContext"
B56@0:8@16@24@32Q40@48
v24@0:8@16
^d36@0:8^Q16Q24I32
Q16@0:8
v44@0:8^Q16Q24i32@?36
B16@0:8
v20@0:8B16
@"NSMutableArray"
@"XRGPUTapJavaScriptContext"
{vector<unsigned char, std::allocator<unsigned char>>="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::allocator<unsigned char>>="__value_"*}}
{vector<unsigned int, std::allocator<unsigned int>>="__begin_"^I"__end_"^I"__end_cap_"{__compressed_pair<unsigned int *, std::allocator<unsigned int>>="__value_"^I}}
{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}
{vector<unsigned long long, std::allocator<unsigned long long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::allocator<unsigned long long>>="__value_"^Q}}
@"NSDictionary"
@32@0:8@16Q24
B32@0:8r^{XRAnalysisCoreWriteCursor=}16@24
B36@0:8r^{XRAnalysisCoreWriteCursor=}16^v24I32
@36@0:8I16@20@28
v32@0:8r^{XRAnalysisCoreWriteCursor=}16@24
v32@0:8r^{XRAnalysisCoreWriteCursor=}16^Q24
I16@0:8
@"NSArray"
@"XRGPUTapTableColumnMapping"
^AB16@0:8
v24@0:8^AB16
@"<XRAnalysisCoreBulkLoadPanel>"16@0:8
v24@0:8@"<XRAnalysisCoreBulkLoadPanel>"16
@"XRMobileAgent<XRMobileAgentVisitor>"16@0:8
v24@0:8@"XRMobileAgent<XRMobileAgentVisitor>"16
@"XRMobileAgentTeam"16@0:8
v24@0:8@"XRMobileAgentTeam"16
@"DTXMessage"16@0:8
v24@0:8@"DTXMessage"16
v24@0:8Q16
v32@0:8@16@24
B56@0:8Q16Q24Q32@40I48I52
B24@0:8Q16
@32@0:8r^{XRAnalysisCoreTableBindings=}16@24
B32@0:8@16Q24
B56@0:8Q16Q24Q32^Q40I48I52
B64@0:8Q16Q24Q32Q40^Q48I56I60
B24@0:8@16
v28@0:8@16I24
@"DTXMessage"
@"NSMutableDictionary"
[5[16Q]]
@"<XRAnalysisCoreBulkLoadPanel>"
@"DTXChannel"
