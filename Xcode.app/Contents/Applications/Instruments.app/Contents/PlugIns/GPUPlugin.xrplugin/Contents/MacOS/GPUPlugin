C@(#)PROGRAM:GPUPlugin  PROJECT:Instruments-64525.9.1
v8@?0
v24@?0@"JSContext"8@"JSValue"16
var %@ = 0;
var _DerivedCounterResult = [];
var _LastTimestamp = 0;
function _SetAndEvaluateRawCounterValues(numSamples) {
_DerivedCounterResult = [];
for (var sampleIndex = 0; sampleIndex < numSamples; ++sampleIndex) {
var sampleStartIndex = sampleIndex * %lu + 1;
var timestamp = (_RawCounterValues[0 + sampleIndex * %lu]) * TIMEBASE_NUMER / TIMEBASE_DENOM;
MTLStat_nSec = timestamp - _LastTimestamp; if (MTLStat_nSec > 500000) { MTLStat_nSec = 500000; }
%@ = _RawCounterValues[%lu + sampleStartIndex];
%@_norm = _RawCounterValues[%lu + sampleStartIndex] / _RawCounterValues[1 + sampleStartIndex];
try { value = %@(); if (!isFinite(value)) { value = 0; } _DerivedCounterResult.push(value); } catch(err) { ErrorLog(err); _DerivedCounterResult.push(0); }
_LastTimestamp = timestamp
v16@?0@"NSString"8
ErrorLog
_RawCounterValues
_SetAndEvaluateRawCounterValues
_DerivedCounterResult
virtualMachine
T@"JSVirtualMachine",R,N,V_virtualMachine
context
T@"JSContext",R,N,V_context
exceptionHandler
T@?,C,N,V_exceptionHandler
-[XRGPUTapGPUCounterProcessor handleCounterInfo:rawCounters:derivedCounterScript:sampleInterval:timeBase:]
/Library/Caches/com.apple.xbs/Sources/Instruments/Instruments-64525.9.1/GPU Plugin/XRGPUTapGPUCounter.mm
counterInfo.count == DTGPUServiceCounterInfoIndex_Max
rawCounterInfo.count == DTGPUServiceRawCounterInfoIndex_Max
_vtx|_frg|_cmp
var MTLStat_nSec = %llu; var SAMPLE_INTERVAL_USEC = %llu;
var TIMEBASE_NUMER = %d; var TIMEBASE_DENOM = %d;
counterCount
TQ,R,N
rawCounterCount
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
XRGPUWaitForCountersStart
XRGPUWaitForRemainingData
XRGPULoadRemainingData
XRGPULoadCountersMessage
XRGPUWaitingForGPUInfo
XRGPULoadGPUInfo
XRGPUTapDTXMessage
columnName
T@"NSString",R,N,V_columnName
columnIndex
TQ,R,N,V_columnIndex
columns
T@"NSArray",R,N,V_columns
timeColumn
T@"XRGPUTapTableColumnMapping",R,N,V_timeColumn
tableID
TI,R,N,V_tableID
message
Failed to retrieve GPU info on target device
v16@?0r^{XRAnalysisCoreTableBindings=}8
Cannot find GPU device for counter collection
Cannot find GPU counters to collect
Cannot process GPU counters
Percentage
Value
Cannot find GPU device for counter values
Error occured in GPU service
accelerator-id
device-name
vendor-name
headless
low-power
removable
recommended-max-working-set-size
mobile
timestamp
counter-id
name
max-value
description
group-index
type
value
sample-index
display-id
framebuffer-index
resolution
built-in
com.apple.instruments.server.services.gpu
v16@?0@"DTXMessage"8
device-gpu-info
device-display-info
gpu-counter-info
counter-profile
gpu-counter-value
v24@?0Q8^c16
Metal GPU Counters is not supported on macOS
yieldNow
T^Ac,N
analysisCoreBulkLoadPanel
T@"<XRAnalysisCoreBulkLoadPanel>",&,N
greetingVisitor
T@"XRMobileAgent<XRMobileAgentVisitor>",&,N
greetingTeam
T@"XRMobileAgentTeam",&,N
replyMessageReceived
T@"DTXMessage",&,N
channel
T@"DTXChannel",&,N,V_channel
T^Ac,N,V_yieldNow
T@"<XRAnalysisCoreBulkLoadPanel>",&,N,V_analysisCoreBulkLoadPanel
T@"DTXMessage",&,N,V_replyMessageReceived
min-collection-interval
supported-counter-profiles
displays
minCounterCollectionInterval
TQ,R,N,V_minCounterCollectionInterval
acceleratorID
TQ,R,N,V_acceleratorID
counterProfiles
T@"NSArray",R,N,V_counterProfiles
T@"NSString",R,N,V_name
rawAttributes
T@"NSDictionary",R,N,V_rawAttributes
connectedDisplays
T@"NSArray",R,N,V_connectedDisplays
GPU service is not supported in the Simulator.
com.apple.instruments.server.services.gpu.counters
Target device does not support GPU counter collection.
Try upgrading the target device to latest OS.
GPU Service is not available in the OS. GPU and GPU Memory info may be missing.
init
allocNewContext
_clearCache
initWithVirtualMachine:
JSGlobalContextRef
dealloc
_jsStringToString:
lastPathComponent
copy
toString
setExceptionHandler:
evaluateScript:withSourceURL:
objectForKeyedSubscript:
callWithArguments:
toDouble
stringWithUTF8String:
JSValueRef
_cachedStringFromString:
string
countByEnumeratingWithState:objects:count:
appendFormat:
appendString:
count
_codeGenCounterProcessing:derivedCounterNames:
setObject:forKeyedSubscript:
evaluteScript:scriptURL:
setRawArrayValue:bytes:numElements:
numberWithUnsignedLong:
arrayWithObjects:count:
callFunction:withArguments:
getValue:
toArray
valueWithObject:inContext:
sharedContext
_jsValueToString:
callGlobalFunction:
setGlobalDouble:value:
getGlobalDouble:
prepareCounterNames:derivedCounterNames:
prepareAndEvaluateCounterValues:numElementsPerSample:numSamples:
setValue:value:
.cxx_destruct
.cxx_construct
virtualMachine
context
exceptionHandler
_cache
_stringCache
_globalObject
_filename
_virtualMachine
_context
_exceptionHandler
objectAtIndexedSubscript:
addObject:
intValue
doubleValue
boolValue
length
regularExpressionWithPattern:options:error:
stringByReplacingMatchesInString:options:range:withTemplate:
stringWithFormat:
stringByAppendingString:
handleCounterInfo:rawCounters:derivedCounterScript:sampleInterval:timeBase:
processCounterSample:numSamples:
counterCount
rawCounterCount
_counterFunctionNames
_rawCounterNames
_derivedCounterScript
_jsContext
_isDeltaCounter
_counterMultiplier
_counterMaxValues
_previousProcessedSample
_sampleInterval
_needsPostProcessing
write:value:
unsignedIntValue
unsignedLongLongValue
stringValue
class
isKindOfClass:
unsignedIntegerValue
bytes
numberWithUnsignedLongLong:
initWithColumnName:columnIndex:
write:data:
write:rawValue:
columnName
columnIndex
_columnName
_columnIndex
initWIthTableID:columns:timeColumn:
write:tupleData:
write:rawData:
columns
timeColumn
tableID
_tableID
_columns
_timeColumn
mode
_handleStopRecording:
replyMessageReceived
core
bulkLoadingPanelTicketForAgent:
setNextStop:mode:ticket:
_handleFinalData:
_handleRemoteServiceMessage:
_handleGPUInfoMessage:
executeStopOnItinerary:
deactivated
stopCollectingCounters
messageWithSelector:objectArguments:
messageReplyTicketForControlMessage:agent:
_finishRecording:
updateTrailingEventHorizon:
command
commandPurpose
requestDeviceGPUInfo
returnToRunning:
moveToFailed:
channel
sendMessage:replyHandler:
reportFailureReason:recovery:
details
message
errorStatus
error
localizedDescription
_failedWithError:itinerary:
handleCourier:itinerary:
setMessageHandler:
cancel
setChannel:
moveToFinished:
object
numberWithUnsignedInt:
initWithIndex:
addIndex:
_createAndWriteGPUInfo:deviceInfoDict:
minCounterCollectionInterval
populateTableIDs:block:
recordingOptions
isWindowed
windowLimit
isDeferred
configureCounters:counterProfile:interval:windowLimit:tracingPID:
messageWithSelector:typesAndArguments:
numberWithUnsignedInteger:
deviceTimeInfo
numberWithInt:
startCollectingCounters
initWithReplyDict:
acceleratorID
connectedDisplays
_advanceClock:
unsignedLongValue
_handleCounterValueMessage:acceleratorID:numSamples:sampleData:
_handleCounterInfoMessage:acceleratorID:profile:config:
_handleCounterConfiguredMessage:
_handleNewGPUMessage:timestamp:
_handleMessage:
recordingStopped:
columnIDForMnemonic:
_columnMapping:schema:
performMainThreadSafeSetup:
targetDevice
connection
remoteCapabilityVersion:
makeChannelWithIdentifier:
waitingRoom
dictionaryWithObjects:forKeys:count:
sendCourierToVisitWaitingRoom:message:details:
tableIDsToPopulate
tableSpecsByID
schemataByName
schemaName
name
isEqualToString:
_fillDeviceGPUInfoTableMapping:tableID:
_fillDeviceDisplayInfoTableMapping:tableID:
_fillCounterInfoTableMapping:tableID:
attributes
_fillCounterValueTableMapping:tableID:
enumerateIndexesUsingBlock:
isLocal
issueResponder
tapAgentFailureWithReason:recoverySuggestion:
handleIssue:type:from:
voteDeviceRelativeMachAbsoluteTime:
flushRemainingData
yieldNow
setYieldNow:
analysisCoreBulkLoadPanel
setAnalysisCoreBulkLoadPanel:
greetingVisitor
setGreetingVisitor:
greetingTeam
setGreetingTeam:
setReplyMessageReceived:
stopRecording:
start:
voteForEpoch:
flushAllRemainingData:
_currentMessage
_counterRequested
_hasRemoteService
_epoch
_sampleIndex
_counterProfile
_tableColumnIDMapping
_gpuMapping
_collectingGPU
_dataClock
_counterProcessor
_analysisCoreBulkLoadPanel
_yieldNow
_replyMessageReceived
_channel
counterProfiles
rawAttributes
_minCounterCollectionInterval
_acceleratorID
_counterProfiles
_name
_rawAttributes
_connectedDisplays
deviceIdentifier
sendMessageSync:replyHandler:
isSimulator
instrumentsPlugInErrorWithCode:descriptionWithFormat:
instrumentsPlugInErrorWithCode:description:recoverySuggestion:
_retrieveDeviceInfoForDevice:
selectSupportedTableSpecs:command:
topIssueAffectingRecordingOfTableSpecs:command:
agentForCommand:
_deviceInfoMap
XRGPUTapJavaScriptContext
XRGPUTapGPUCounterProcessor
XRGPUTapTableColumnMapping
XRGPUTapTableMapping
XRGPUTapAgent
XRAnalysisCoreBulkLoadingAgent
XRMinorFrameAgent
XRMobileAgentOwner
XRReplyReceivingAgent
XRGPUDeviceInfo
XRGPUTapPlugIn
@16@0:8
v16@0:8
{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}24@0:8^{OpaqueJSString=}16
{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}24@0:8^{OpaqueJSValue=}16
c32@0:8@16@24
d32@0:8@16@24
^{OpaqueJSString=}24@0:8r*16
d24@0:8r*16
v32@0:8r*16d24
c40@0:8r*16^Q24Q32
@32@0:8@16@24
@40@0:8^Q16Q24Q32
@24@0:8@16
@?16@0:8
v24@0:8@?16
{unordered_map<std::__1::basic_string<char>, OpaqueJSValue *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OpaqueJSValue *> > >="__table_"{__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *>, std::__1::hash<std::__1::basic_string<char> >, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSValue *>, std::__1::equal_to<std::__1::basic_string<char> >, true> >="__value_"f}}}
{unordered_map<std::__1::basic_string<char>, OpaqueJSString *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OpaqueJSString *> > >="__table_"{__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *>, std::__1::hash<std::__1::basic_string<char> >, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, OpaqueJSString *>, std::__1::equal_to<std::__1::basic_string<char> >, true> >="__value_"f}}}
^{OpaqueJSValue=}
@"NSString"
@"JSVirtualMachine"
@"JSContext"
c80@0:8@16@24@32Q40{_XRDeviceTimeInfo=QQQ{mach_timebase_info=II}}48
^d32@0:8^Q16Q24
Q16@0:8
@"NSMutableArray"
@"XRGPUTapJavaScriptContext"
{vector<unsigned char, std::__1::allocator<unsigned char> >="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >="__value_"*}}
{vector<unsigned int, std::__1::allocator<unsigned int> >="__begin_"^I"__end_"^I"__end_cap_"{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> >="__value_"^I}}
{vector<double, std::__1::allocator<double> >="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::__1::allocator<double> >="__value_"^d}}
@32@0:8@16Q24
c32@0:8r^{XRAnalysisCoreWriteCursor=}16@24
c32@0:8r^{XRAnalysisCoreWriteCursor=}16Q24
@36@0:8I16@20@28
v32@0:8r^{XRAnalysisCoreWriteCursor=}16@24
v32@0:8r^{XRAnalysisCoreWriteCursor=}16^Q24
I16@0:8
@"NSArray"
@"XRGPUTapTableColumnMapping"
^Ac16@0:8
v24@0:8^Ac16
v24@0:8@16
@"<XRAnalysisCoreBulkLoadPanel>"16@0:8
v24@0:8@"<XRAnalysisCoreBulkLoadPanel>"16
@"XRMobileAgent<XRMobileAgentVisitor>"16@0:8
v24@0:8@"XRMobileAgent<XRMobileAgentVisitor>"16
@"XRMobileAgentTeam"16@0:8
v24@0:8@"XRMobileAgentTeam"16
@"DTXMessage"16@0:8
v24@0:8@"DTXMessage"16
v24@0:8Q16
v32@0:8@16@24
c48@0:8Q16Q24Q32@40
c24@0:8Q16
@32@0:8r^{XRAnalysisCoreTableBindings=}16@24
c32@0:8@16Q24
c48@0:8Q16Q24Q32^Q40
c24@0:8@16
v28@0:8@16I24
@"DTXMessage"
@"NSMutableDictionary"
@"XRGPUTapGPUCounterProcessor"
@"<XRAnalysisCoreBulkLoadPanel>"
@"DTXChannel"
@"NSDictionary"
