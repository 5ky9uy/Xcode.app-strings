?VVVVVV
?ffffff
(@ffffff
@333333
@^^^^^^
?ffffff
?333333
333333
?333333
8@UUUUUU
?333333
?UUUUUU
?ffffff
 @~~~~~~
?______
?333333
?>>>>>>
?^^^^^^
?ffffff
?333333
???????
?WWWWWW
?@(#)PROGRAM:XcodeEdit  PROJECT:XcodeEdit-5000
PBXTextStorageDidInsertOrRemoveLineEndingsNotification
XCTextStorageDidUpdateLineRangeNotification
SyntaxColoringSizeLimit
SyntaxColoringEnabled
-[XCTextStorage setOwnedMutableAttributedString:]
/Library/Caches/com.apple.xbs/Sources/XcodeEdit/XcodeEdit-6001/PowerEdit/XCTextStorage.m
%s should be an instance inheriting from %@, but it is nil
attrStr
Assertion failed: %s
(attrStr) != nil
%s should be an instance inheriting from %@, but it is %@
[(id)(attrStr) isKindOfClass:[NSMutableAttributedString class]]
UsePowerEditParagraphInfoTable
%@[%lu]%lu
%p: line offset table (%lu bytes allocated, %lu bytes used) {
[adj=%li]
   %@
-[XCTextStorage lineRangeForCharacterRange:]
_lineOffsets.count=%lu
_lineOffsets.count >= 2
_lineOffsets.capacity=%lu, _lineOffsets.count=%lu
_lineOffsets.capacity >= _lineOffsets.count
low=%li, _lineOffsets.count-1=%lu
0 <= low && low <= _lineOffsets.count-1
lineRange.location=%lu, low=%li
lineRange.location <= low
-[XCTextStorage numberOfLines]
Line mapping: %lu bytes allocated, %lu used   Change tracking: %lu bytes allocated, %lu used
finished changing characters
string changed
EditorPerformance
edit cycle
XCDebugChangeTracking
-[XCTextStorage willReplaceCharactersInRange:withString:changeInLength:]
trimmedChangeRange.location + trimmedChangeRange.length <= replacementStringLength
[[_contents string] compare:string options:0 range:charRange] == NSOrderedSame
charLengthDelta < 0
charRange.length - replacementStringLength
trimmedChangeRange.location <= replacementStringLength
trimmedChangeRange.location <= charRange.location + charRange.length
charRange.length >= numPrefixCharsTrimmed + numSuffixCharsTrimmed
trimmedChangeRange.location == 0
trimmedChangeRange.length == replacementStringLength
charRange.length + charLengthDelta == [string length]
affectedLineRange=%@
affectedLineRange.length >= 1
numReplacementLineOffsets=%lu
numReplacementLineOffsets >= 2
replacementLineOffsets[0]=%lu
replacementLineOffsets[0] == 0
replacementLineOffsets[%lu]=%lu
replacementLineOffsets[numReplacementLineOffsets-1] == [string length]
willReplaceCharactersInRange:%@ withString:%@ changeInLength:%li (replacedChars=%@, numLinesDelta=%li, affectedLineRange=%@)
  _changes[%lu]={C:{%lu,%lu},%li L:{%lu,%lu},%li}
AffectedLineRange
Count
InitialRange
%@ {
   change history (%lu bytes allocated, %lu bytes used) {
      _changes[%03lu]={C:{%lu,%lu},%li L:{%lu,%lu},%li}}
   }
   line offset table (%lu bytes allocated, %lu bytes used) {
%@%lu
      %@
-[XCTextStorage recordCurrentTimestampWithDate:]
date
(date) != nil
[(id)(date) isKindOfClass:[NSDate class]]
_dateTimestampMappings != NULL
_numDateTimestampMappings < XC_MaxNumDateTimestampMappings
-[XCTextStorage timestampForDate:]
xcode.lang.objc
xcode.lang.c
xcode.lang.objcpp
xcode.lang.cpp
xcode.lang.java
PBXSyntaxColoring
PBXPlainText
PBXPreprocessorDirective
PBXStringConstant
PBXCharacterConstant
PBXNumericConstant
PBXDocComment
PBXLongComment
xcode.lang.simpleColoring
xcode.lang.
c.objcpp
c.objc
c.cpp
html
xcode.lang.xml
java
xclangspec
xcode.lang.xclangspec
xcsynspec
xcode.lang.xcsynspec
shell.sh
xcode.lang.sh
shell.csh
xcode.lang.csh
xcode.lang.jam
make
xcode.lang.make
shell.ruby
xcode.lang.ruby
shell.perl
xcode.lang.perl
shell.python
xcode.lang.python
javascript
xcode.lang.javascript
xcode.lang.rez
xcode.lang.man
default
xcode.syntax.identifier
xcode.syntax.entity
xcode.syntax.entity.start
xcode.syntax.keyword
xcode.syntax.attribute
-[XCTextStorage colorIdAtCharacterIndex:inTextView:effectiveRange:]
range->length != 0
xcode.syntax.preprocessor.include
xcode.syntax.definition.macro
xcode.syntax.warning
xcode.syntax.definition.function
xcode.syntax.declaration.function
xcode.syntax.definition.method
xcode.syntax.declaration.method
xcode.syntax.declaration.property
xcode.syntax.java.import
xcode.syntax.java.package
xcode.syntax.definition.class
xcode.syntax.declaration.class
xcode.syntax.typedef
name range out of bounds
topLevel
xcode.lang.xml.entity.end
xcode.lang.xml.entity.start
xcode.lang.html.entity.end
xcode.lang.html.entity.start
NSUInteger XCTextStorage_characterOffsetOfLineAtIndex(XCTextStorage *, NSUInteger)
self
(self) != nil
[(id)(self) isKindOfClass:[XCTextStorage class]]
self->_lineOffsets.count >= 2
self->_lineOffsets.capacity >= self->_lineOffsets.count
index=%lu, _lineOffsets.count=%lu
index < self->_lineOffsets.count
NSUInteger XCTextStorage_numberOfLines(XCTextStorage *)
void _XCApplyDeferredLineOffsetAdjustmentUpToIndex(XCLineOffsetTable *, NSUInteger)
lineOffsetTable != NULL
lineOffsetTable.count=%lu
lineOffsetTable->count >= 2
lineOffsetTable.capacity=%lu, lineOffsetTable.count=%lu
lineOffsetTable->capacity >= lineOffsetTable->count
index=%lu, lineOffsetTable->count=%lu
index < lineOffsetTable->count
void _XCMoveLineOffsets(XCLineOffsetTable *, NSUInteger, NSUInteger, NSUInteger)
index=%lu, length=%lu, lineOffsetTable->count=%lu
index + length <= lineOffsetTable->count
void _XCAdjustLineOffsets(XCLineOffsetTable *, NSUInteger, NSUInteger, NSInteger)
index + length == lineOffsetTable->count
lineOffsetTable.deferredAdjustmentIndex=%lu, lineOffsetTable.count=%lu
lineOffsetTable->deferredAdjustmentIndex < lineOffsetTable->count
NSPrintHeaderAndFooter
DisablePowerEditNonContiguousLayout
ShowsFoldingSidebar
Animate
TextBackgroundStyle
XCTextCentersOnScroll
TextBlockHighlightColor
None
Dynamic
Animate2
Animate3
Always
Gradient
PBXTextEditorColorsChanged
CodeFocusFollowsSelection
q24@?0@8@16
com.apple.Xcode.DevToolsInterface
Edit All in Scope
PBXInterface
XCTokenPullDownButton
xcode.syntax.completionplaceholder
xcode.syntax.preprocessor
xcode.syntax.name.partial
xcode.syntax.identifier.type
xcode.syntax.identifier.type.system
/Library/Caches/com.apple.xbs/Sources/XcodeEdit/XcodeEdit-6001/PowerEdit/XCTextView.m
<Unknown File>
Invalid parameter not satisfying: %@
(flag == YES) || (flag == NO)
shouldUseTemporaryAttributes failure: curCharRange: %@, effRange: %@, charIndex=%ld
   compRange: %@, common: %@
NSOldSelectedCharacterRange
-[XCTextView readSelectionFromPasteboard:type:]
pasteboard
(pasteboard) != nil
[(id)(pasteboard) isKindOfClass:[NSPasteboard class]]
%s should be a non-empty string, but it is nil
type
(type) != nil
%s should be a non-empty string, but it is %@
CFGetTypeID(type) == CFStringGetTypeID()
%s should be a non-empty string, but it's an empty string
![@"" isEqualToString:(type)]
Folding not enabled
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
XCTokenColorAttribute
XCRoundBoxColorAttribute
XCRoundBoxBackgroundColorAttribute
XCTextViewWillChangeFoldingNotification
XCTextViewDidChangeFoldingNotification
xcode.syntax.identifier.class
xcode.syntax.identifier.variable
void _setTokenizedEditingTokenColorForTag(XCTextView *, NSColor *, XCTokenizedEditingTokenColorTag)
<Unknown Function>
textView != nil
color != nil
(colorTag >= 0) && (colorTag < sizeof(XCTokenizedEditingTokenColorTag))
XCShowGutterChangedNotification
XCShowLineNumberInGutterChangedNotification
XCWrapLinesChangedNotification
XCWrapIndentChangedNotification
XCIndentChangedNotification
SyntaxColoringDelay
PBXWrappedLineIndentWidth
PBXSoloBraceIndentWidth
ColorIndexedSymbols
CopySourceCodeAsRichText
ShowGutter
ShowLineNumberInGutter
PBXIndentWrappedLines
XCIndentSoloBraces
XCIndentSlashSlashComments
XCAlignConsecutiveSlashSlashComments
PBXSelectToMatchingBrace
XCScrollToEndOfMatchingBrace
PBXSelectToInsideMatchingBraces
PBXShowMatchingBrace
PBXBeepOnNoMatchingBrace
XCSmartClosingBrackets
XCSelectToInsideMatchingQuotes
TIbeam.tiff
                                                                                                      
TextExtras: Exhausted stack depth for delimiter matching.  Giving up.
UseProjectBuilderShiftBehavior
Xcode: Values for user defaults keys OpeningBracesCharacters and ClosingBracesCharacters must both be present and the same length if either one is set.
OpeningBracesCharacters
ClosingBracesCharacters
Type
AltType
StartAtBOL
StartAtColumnZero
Foldable
DirtyPreviousRightEdge
Tokenizer
Couldn't load language spec for '%@' (from '%@')
Syntax
%@: "%@"
IncludeRules
.interestingOperators
.specialMacros
PowerEditCheckParseTree
PowerEditValidateParseTree
Couldn't load language spec for '%@'
#### Incremental parse doesn't match
     Full Parse: %@
     Incremental Parse: %@
xcode.syntax.name
xcode.syntax.name.tree
-[XCSourceModel typeListForSpecNames:]
/Library/Caches/com.apple.xbs/Sources/XcodeEdit/XcodeEdit-6001/PowerEdit/XCSourceModel.m
Couldn't get syntax type spec for '%@'
spec != nil
xcode.syntax.comment
xcode.syntax.comment.doc
xcode.syntax.string
xcode.syntax.character
xcode.syntax.number
xcode.syntax.method.declarator
@selector
XCLanguage
language
DTStrings
-[XCLanguageSpecification initWithPropertyListDictionary:inDomain:]
/Library/Caches/com.apple.xbs/Sources/XcodeEdit/XcodeEdit-6001/PowerEdit/XCLanguageSpecification.m
dictionary
(dictionary) != nil
[(id)(dictionary) isKindOfClass:[TSPropertyListDictionary class]]
IncludeInMenu
SourceScannerClassName
Couldn't load source scanner class "%@" for language "%@"
Start
Words
Rules
Match
StartChars
Failed to load specification for %3$@ '%1$@'. Reason: %2$@
<unknown>
Name
.keyword
children = %@
%@XCSourceModelItem<%0lx>: %@ (%ld, %ld), rel=(%ld, %ld), lang=%ld, color=%ld, tok=%@, inherit=%lc, ignore=%lc, block=%lc, volatile=%lc, dirty=%lc, children = %ld
XCSourceModelItem<%0lx>: %@ (%ld, %ld), rel=(%ld, %ld), lang=%ld, color=%ld, tok=%@, inherit=%lc, ignore=%lc, block=%lc, volatile=%lc, dirty=%lc, children = %ld
-[XCSourceModelItem validate]
/Library/Caches/com.apple.xbs/Sources/XcodeEdit/XcodeEdit-6001/PowerEdit/XCSourceModelItem.m
child->_parent == self
((NSInteger)child->_relativeLocation.location) >= 0
child->_relativeLocation.location >= lastLocation
lastLocation <= _relativeLocation.length
-[XCSourceModelItem dirtyRange:changeInLength:]
_parent == nil
-[XCSourceModelItem indexOfChildAfterLocation:]
location >= range.location
-[XCSourceModelItem _childEnclosingLocation:]
location >= _relativeLocation.location
_children
CaseSensitive
Until
AltEnd
AltUntil
AltToken
EscapeChar
Recursive
ParseEndBeforeIncludedRules
-[XCBlockScanner nextToken:]: Tossing saved token by mistake: %@
-[XCBlockScanner nextToken:]: Tossing a token by mistake: %@
-[XCBlockScanner parseRecursive:withContext:inputStream:range:dirtyRange:]
/Library/Caches/com.apple.xbs/Sources/XcodeEdit/XcodeEdit-6001/PowerEdit/XCBlockScanner.m
[item numberOfChildren] == 1
Keyword scanner "%@" shouldn't have a Tokenizer. Ignoring it.
Chars
-[XCKeywordScanner initWithPropertyListDictionary:language:]
/Library/Caches/com.apple.xbs/Sources/XcodeEdit/XcodeEdit-6001/PowerEdit/XCKeywordScanner.m
words
(words) != nil
[(id)(words) isKindOfClass:[NSArray class]]
Regex scanner "%@" shouldn't have a Tokenizer. Ignoring it.
Invalid language spec: "%@": 'Chars' given, but not 'StartChars'
-[XCRegExScanner initWithPropertyListDictionary:language:]
/Library/Caches/com.apple.xbs/Sources/XcodeEdit/XcodeEdit-6001/PowerEdit/XCRegExScanner.m
match
[(id)(match) isKindOfClass:[NSArray class]]
CaptureTypes
Warning: language spec %@ contains both CaptureTypes and IncludeRules. IncludedRules will be ignored.
capture
[(id)(capture) isKindOfClass:[NSArray class]]
Capture not found!
'%c'
'0x%lX'
'%@'
+[XCSourceTokens _tokenForString:]
/Library/Caches/com.apple.xbs/Sources/XcodeEdit/XcodeEdit-6001/PowerEdit/XCSourceTokens.m
tokens
xcode.syntax.plain
xcode.syntax.comment.doc.keyword
xcode.syntax.url
xcode.syntax.identifier.function
xcode.syntax.identifier.constant
xcode.syntax.identifier.macro
xcode.syntax.identifier.class.system
xcode.syntax.identifier.function.system
xcode.syntax.identifier.constant.system
xcode.syntax.identifier.variable.system
xcode.syntax.identifier.macro.system
Color
%.1lf
Menlo Regular
%@-%1.1f
XCDefaultSpaceWidthsByFont
XCShowNonBreakingSpace
XCShowControlCharacters
DisablePowerEditTypesetter
.color
.font
.fontSize
PBXSyntaxColoringPlainTextFont
PBXSyntaxColoringPlainTextFontSize
XCSyntaxType
Syntax Type
-[XCSyntaxTypeSpecification initWithPropertyListDictionary:inDomain:]
/Library/Caches/com.apple.xbs/Sources/XcodeEdit/XcodeEdit-6001/PowerEdit/Specifications/XCSyntaxTypeSpecification.m
IncludeInPrefs
IsMark
IgnoreToken
IsLink
URLFormat
NameFormat
OldUserDefault
Font
FontSize
-[XCRuleScanner initWithPropertyListDictionary:language:]
/Library/Caches/com.apple.xbs/Sources/XcodeEdit/XcodeEdit-6001/PowerEdit/XCRuleScanner.m
_lexer
(_lexer) != nil
[(id)(_lexer) isKindOfClass:[XCSourceScanner class]]
Invalid language spec for '%@'
-[XCFoldingTextStorage increaseDrawingDepth]
/Library/Caches/com.apple.xbs/Sources/XcodeEdit/XcodeEdit-6001/PowerEdit/XCFoldingTextStorage.m
_drawingDepth > 0
-[XCFoldingTextStorage decreaseDrawingDepth]
[({'"@
usesGraphicalPlaceholder
Tc,N,V_usesGraphicalPlaceholder
-[XCParagraphInfoTable _replaceParagraphStructsInRange:withEmptyStructsOfMinimumCapacity:]
/Library/Caches/com.apple.xbs/Sources/XcodeEdit/XcodeEdit-6001/PowerEdit/XCParagraphInfoTable.m
count=%lu
_count >= 2
capacity=%lu, count=%lu
_capacity >= _count
%@, count=%lu
paraRange.location <= _count
paraRange=%@, count=%lu
paraRange.location + paraRange.length <= _count
gapRange=%@, count=%lu
gapRange.location <= _count
numEntriesToMove > 0
_count >= paraRange.length
gapRange.length == _capacity - _count
gapRange.location + gapRange.length <= oldCapacity
numEntriesToMove > 0 || gapRange.location == _count
_offsetAdjustmentIndex <= _count
_gapIndex == paraRange.location
_capacity - _count >= minGapLength
-[XCParagraphInfoTable _applyDeferredParagraphOffsetAdjustmentUpToIndex:]
paraIndex=%lu, count=%lu
paraIndex < _count
offsetAdjustmentIndex=%lu, count=%lu
-[XCParagraphInfoTable _adjustParagraphsStartingAtIndex:byOffset:]
_paragraphs != NULL
offsetAdjustmentIndex=%lu, _count=%lu
_offsetAdjustmentIndex < _count
_paragraphs[i + GAP_ADJUSTMENT(i)].charOffset >= _offsetAdjustment
-[XCParagraphInfoTable numberOfParagraphs]
_count=%lu
_capacity=%lu, _count=%lu
-[XCParagraphInfoTable paragraphRangeForCharacterRange:]
low=%li, count-1=%lu
0 <= low && low <= _count-1
paraRange.location=%@, low=%li
paraRange.location <= low
<%@:%p:capacity=%lu:count=%lu:entries=(
       <gap>
    %2lu:[%03lu] offset=%04lu%@
-[XCParagraphInfoTable replaceParagraphsInRange:withParagraphStartOffsets:count:adjustment:changeInCharLength:]
paraRange=%@
paraRange.location >= 1
paraRange.location < _count
paraRange.location + paraRange.length < _count
offsets != NULL
numOffsets=%lu
numOffsets >= 2
numOffsets[0]=%lu
offsets[0] == 0
_offsetAdjustmentIndex >= paraRange.location
_count >= paraRange.location
malloc_size(_paragraphs) >= _capacity * sizeof(*_paragraphs)
_capacity >= _count + numOffsets - 2
paraInfo->charOffset == 0
_gapIndex <= _capacity
_count <= _capacity
-[XCParagraphInfoTable assertInternalConsistencyWithRespectToString:]
string
(string) != nil
[(id)(string) isKindOfClass:[NSString class]]
_offsetAdjustmentIndex <= _capacity
_XCCharacterOffsetOfParagraphAtIndex(self, 0) == 0
_XCMarkerArrayOfParagraphAtIndex(self, 0, NO)
(_XCMarkerArrayOfParagraphAtIndex(self, 0, __objc_no)) == nil || [(id)(_XCMarkerArrayOfParagraphAtIndex(self, 0, __objc_no)) isKindOfClass:[NSMutableArray class]]
_XCLeadingWhitespaceOfParagraphAtIndex(self, 0) == 0
paraIdx < _count
_XCCharacterOffsetOfParagraphAtIndex(self, paraIdx) == lineStart
paraIdx == _count - 2
_XCCharacterOffsetOfParagraphAtIndex(self, paraIdx) == lineEnd
remainingRange.length == 0
paraIdx == _count-1
_XCCharacterOffsetOfParagraphAtIndex(self, _count-1) == [string length]
_XCMarkerArrayOfParagraphAtIndex(self, _count-1, NO) == nil
_XCLeadingWhitespaceOfParagraphAtIndex(self, _count-1) == 0
struct XCParagraphInfo *_XCParagraphInfoAtIndex(XCParagraphInfoTable *, NSUInteger)
[(id)(self) isKindOfClass:[XCParagraphInfoTable class]]
self->_count >= 2
self->_capacity >= self->_count
_gapIndex=%lu, _count=%lu
self->_gapIndex <= self->_count
paraIndex=%lu, _count=%lu
paraIndex < self->_count
Invalid child fold
range %@ outside of parent %@
Exception: %@: Couldn't create folds from "%@"
%@XCFold<%0lx>: (%ld, %ld), rel=(%ld, %ld), children = %ld
folded.tiff
foldeddark.tiff
label
T@"NSString",C,V_label
foldStyle
TQ,V_foldStyle
centerSelectionInVisibleArea:
moveBackward:
moveBackwardAndModifySelection:
moveDown:
moveDownAndModifySelection:
moveForward:
moveForwardAndModifySelection:
moveLeft:
moveLeftAndModifySelection:
moveRight:
moveRightAndModifySelection:
moveUp:
moveUpAndModifySelection:
moveWordBackward:
moveWordBackwardAndModifySelection:
moveWordForward:
moveWordForwardAndModifySelection:
moveWordLeft:
moveWordLeftAndModifySelection:
moveWordRight:
moveWordRightAndModifySelection:
moveToBeginningOfDocument:
moveToBeginningOfDocumentAndModifySelection:
moveToBeginningOfLine:
moveToBeginningOfLineAndModifySelection:
moveToBeginningOfParagraph:
moveToBeginningOfParagraphAndModifySelection:
moveToEndOfDocument:
moveToEndOfDocumentAndModifySelection:
moveToEndOfLine:
moveToEndOfLineAndModifySelection:
moveToEndOfParagraph:
moveToEndOfParagraphAndModifySelection:
moveParagraphForwardAndModifySelection:
moveParagraphBackwardAndModifySelection:
moveToLeftEndOfLine:
moveToRightEndOfLine:
moveToLeftEndOfLineAndModifySelection:
moveToRightEndOfLineAndModifySelection:
pageDown:
pageDownAndModifySelection:
pageUp:
pageUpAndModifySelection:
scrollPageUp:
scrollPageDown:
scrollLineUp:
scrollLineDown:
selectAll:
selectParagraph:
selectLine:
selectWord:
moveSubWordForward:
moveSubWordBackward:
moveSubWordForwardAndModifySelection:
moveSubWordBackwardAndModifySelection:
scrollTabWidthLeft:
scrollTabWidthRight:
deleteForward:
deleteBackward:
deleteBackwardByDecomposingPreviousCharacter:
deleteWordForward:
deleteWordBackward:
deleteToBeginningOfLine:
deleteToEndOfLine:
deleteToBeginningOfParagraph:
deleteToEndOfParagraph:
Sidebar
Continue to Here
Add Breakpoint
Add & Edit Breakpoint
Built-in Breakpoints
Enable Breakpoint
Reveal in Breakpoints
Show Message Bubble
Collapse Message Bubble
-[XCTextSidebarView setOrientation:]
/Library/Caches/com.apple.xbs/Sources/XcodeEdit/XcodeEdit-6001/PowerEdit/XCTextSidebarView.m
%@ supports only vertical orientation
orientation == NSVerticalRuler
-[XCTextSidebarView setLineNumberFont:]
font
(font) != nil
[(id)(font) isKindOfClass:[NSFont class]]
-[XCTextSidebarView setLineNumberTextColor:]
color
(color) != nil
[(id)(color) isKindOfClass:[NSColor class]]
-[XCTextSidebarView setSidebarBackgroundColor:]
-[XCTextSidebarView setFoldbarBackgroundColor:]
-[XCTextSidebarView setBadBreakpointStripColor:]
-[XCTextSidebarView setUnknownBreakpointStripColor:]
ColorTheme
Colors
ColorThemesUpgraded
Fonts
Background
Selection
InsertionPoint
Xcode Default
My Xcode 2 Colors
PBXTextEditorBackgroundColor
PBXTextEditorSelectionBackgroundColor
PBXTextEditorInsertionPointColor
xccolortheme
%.3lf %.3lf %.3lf
%@ - %.1lf
.xccolortheme
~/Library/Application Support/Xcode/Color Themes
XCPythonScanner called as a non-lexer
xcode.lang.python.indent
xcode.lang.python.dedent
EntityNameMap
-[XCHTMLScanner actionForEndToken:inContext:inputStream:]
/Library/Caches/com.apple.xbs/Sources/XcodeEdit/XcodeEdit-6001/PowerEdit/XCHTMLScanner.m
currentContext
(currentContext) != nil
[(id)(currentContext) isKindOfClass:[XCSourceModelItem class]]
xcode.lang.c.preprocessor.identifier
xcode.lang.c.preprocessor.define.name
xcode.lang.c.identifier
xcode.lang.c.function.name
xcode.lang.c.parenexpr
xcode.lang.objc.identifier
xcode.lang.objc.classname
xcode.lang.objc.protocolname
xcode.lang.objc.categoryname
xcode.lang.objc.function.name
xcode.lang.objc.parenexpr
xcode.lang.objc.partialname
xcode.lang.objcpp.identifier
xcode.lang.objcpp.classname
xcode.lang.objcpp.protocolname
xcode.lang.objcpp.categoryname
xcode.lang.objcpp.function.name
xcode.lang.objcpp.parenexpr
textView
T@"XCTextView",R,N,V_textView
textStorage
T@"XCTextStorage",R,D,N
sourceModel
T@"XCSourceModel",R,D,N
@protocol
then
else
switch
while
return
super
.declarator
com.apple.Xcode.XcodeEdit
@implementation
@interface
case
@protected
@private
@public
protected
private
public
sizeof
typeof
FALSE
TRUE
NULL
_cmd
this
true
false
reinterpret_cast
static_cast
dynamic_cast
const_cast
=+-*/%~^?&|,><
XCBreakpointSidebarIcon
XCBreakpointsSidebarIcon
XCPendingBreakpointSidebarIcon
PBXBreakpoint
XCBreakpointTextAnnotationAccessoryViewLarge
XCBreakpointTextAnnotationAccessoryViewMedium
XCBreakpointTextAnnotationAccessoryView
XCBuildErrorSidebarIcon
XCBuildWarningSidebarIcon
XCBuildAnalyzerWarningSidebarIcon
XCBuildAnalyzerResultSidebarIcon
XCBuildAnalyzerEventStepSidebarIcon
XCBuildAnalyzerControlFlowStepSidebarIcon
XCBuildNoticeSidebarIcon
numberOfBuildNotices
TQ,R,N
numberOfBuildWarnings
numberOfBuildErrors
numberOfBuildAnalyzerWarnings
numberOfBuildAnalyzerResults
numberOfBuildAnalyzerEventSteps
numberOfBuildAnalyzerControlFlowSteps
showsWarnings
Tc,N
v24@?0Q8^c16
#error
#warning
PBXTextViewHighlightColor
XCInstructionPointerSidebarIcon
instructionPointer
T@"PBXDebugInstructionPointer",R,N,V_instrPointer
<%@:%p:para=%@>
T@"XCFoldingTextStorage",&,N,V_textStorage
paragraphRange
T{_NSRange=QQ},N,V_paraRange
sidebarMarkerIconImage
T@"NSImage",R,N
drawsSidebarMarkerIcon
sidebarMarkerAlignment
TQ,N
causesSidebarAnnotationDisplacement
Tc,R,N
wantsOmittedLineNumber
wantsInvertedLineNumber
miniaturized
Tc,N,GisMiniaturized
selected
Tc,N,GisSelected
visible
Tc,N,GisVisible
drawsBackground
drawsOverlay
drawsBorder
drawsHighlight
annotationTheme
T@"XCTextAnnotationTheme",&,N,V_annotationTheme
backgroundColor
T@"NSColor",R,N
selectedBackgroundColor
focusedBackgroundColor
topBorderColor
bottomBorderColor
topGradient
T@"NSGradient",R,N
bottomGradient
highlightOutlineColor
highlightBackgroundColor
highlightsByMask
TQ,N,V_highlightsByMask
highlightedRanges
T@"NSArray",R,N
annotationStyle
precedence
Tq,R,N
collapsed
Tc,N,GisCollapsed
isBreakpoint
isBuildNotice
isBuildWarning
isBuildError
isBuildAnalyzerWarning
isBuildAnalyzerResult
isBuildAnalyzerEventStep
isBuildAnalyzerControlFlowStep
isInstructionPointer
textAnnotation
T@"XCTextAnnotation",N,V_textAnnotation
T@"XCTextView",N,V_textView
contentLeftMargin
Td,N,V_contentLeftMargin
contentRightMargin
Td,N,V_contentRightMargin
contentTopMargin
Td,N,V_contentTopMargin
contentBottomMargin
Td,N,V_contentBottomMargin
contentRectRadiuses
T{CGSize=dd},N,V_contentRectRadiuses
position
needsParagraphSpacing
drawsShadow
T@"NSFont",&,N,V_font
contentRect
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
backgroundBezierPath
T@"NSBezierPath",R,N
overlayBezierPath
borderBezierPath
T@"NSColor",C,N,V_backgroundColor
T@"NSColor",C,N,V_selectedBackgroundColor
T@"NSColor",C,N,V_focusedBackgroundColor
T@"NSColor",C,N,V_topBorderColor
T@"NSColor",C,N,V_bottomBorderColor
T@"NSGradient",C,N,V_topGradient
T@"NSGradient",C,N,V_bottomGradient
T@"NSColor",C,N,V_highlightOutlineColor
T@"NSColor",C,N,V_highlightBackgroundColor
annotationView
T@"XCTextAnnotationView",&,N,V_annotationView
class
standardUserDefaults
numberWithInt:
dictionaryWithObject:forKey:
registerDefaults:
initWithString:
zone
allocWithZone:
initWithOwnedMutableAttributedString:
release
initWithString:attributes:
initWithAttributedString:
init
foldingEnabled
alloc
integerForKey:
length
boolForKey:withDefaultValue:
setOwnedMutableAttributedString:
defaultCenter
removeObserver:
autorelease
dealloc
finalize
isKindOfClass:
descriptionForAssertionMessage
retain
string
getLineStartOffsets:count:
boolForKey:
replaceParagraphsInRange:withParagraphStartOffsets:count:adjustment:changeInCharLength:
fontForId:
addAttribute:value:range:
edited:range:changeInLength:
addObject:
initWithTextStorage:
addFoldingStorage:
addLayoutManager:
count
objectAtIndex:
layoutManagers
containsObject:
removeLayoutManager:
removeObjectAtIndex:
appendString:
appendFormat:
stringWithFormat:
characterRangeForLineRange:
invalidateAttributesAndDisplayInRange:
doingBatchEdit:
dirtyRange:changeInLength:
countByEnumeratingWithState:objects:count:
realStorageDidReplaceCharactersInRange:withString:changeInLength:
lineRangeForRange:
invalidateAttributesInRange:
metricWithIdentifier:
checkpoint:
startedMetricForAspect:logLevel:label:isQAMetric:
setIdentifier:
monitorRunLoop
realStorageWillReplaceCharactersInRange:withString:changeInLength:
rangeNotHavingLiteralPrefixAndSuffixInCommonWithRange:ofString:
compare:options:range:
substringWithRange:
lineRangeForCharacterRange:
quotedStringRepresentation
realStorageDidUpdateLineRange:changeInLength:
valueWithRange:
dictionaryWithObjectsAndKeys:
postNotificationName:object:userInfo:
_dumpLineOffsetsTable
shortDescription
characterRangeAtTimestamp:forCharacterRange:atTimestamp:
timeIntervalSinceReferenceDate
currentTimestamp
timestampForDate:
lineRangeAtTimestamp:forLineRange:atTimestamp:
delegate
colorIdForItem:inTextView:
respondsToSelector:
colorIndexedSymbols
isEqualToString:
textStorageDidInsertOrRemoveLineEndings:
removeObserver:name:object:
setDelegate:
addObserver:selector:name:object:
validateDelegateColorHandling
invalidate
_invalidateCallback:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
sourceModel
textContainers
textView
textStorage:willEditRange:changeInLength:
processEditing
postNotificationName:object:
textStorage:didEditRange:changeInLength:
syntaxColoringDelay
_updateSourceModel:
ensureAttributesAreFixedInRange:
attributesAtIndex:effectiveRange:
attributedSubstringFromRange:
attributesAtIndex:longestEffectiveRange:inRange:
attribute:atIndex:longestEffectiveRange:inRange:
willReplaceCharactersInRange:withString:changeInLength:
replaceCharactersInRange:withString:
beginEditing
didReplaceCharactersInRange:withString:changeInLength:
endEditing
replaceCharactersInRange:withAttributedString:
setAttributes:range:
cachedSourceModel
isInPreprocessorStatementAtLocation:
isInStringConstantAtLocation:
isInCharacterConstantAtLocation:
isInNumberConstantAtLocation:
isInDocCommentAtLocation:
isInCommentAtLocation:
cachedSourceModelItemAtCharacterIndex:
range
attribute:atIndex:effectiveRange:
_isEditing
customAdvancement
boundingRectWithSize:options:attributes:
defaultAdvancement
getTabWidth
advancementForSpace
removeAttribute:range:
colorIdAtCharacterIndex:inTextView:effectiveRange:
textColorForId:
font
syntaxType
isLink
stringForItem:
urlFormat
invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:
invalidateDisplayForCharacterRange:
realStorageDidInvalidateLayoutAndDisplayInRange:
defaultParagraphStyle
mutableCopy
advancementForTab
initWithType:location:
arrayWithObject:
setTabStops:
setDefaultTabInterval:
numberWithInteger:
fixSyntaxColoringInRange:
fixAttributesInRange:
realStorageDidFixAttributesInRange:
hasPrefix:
dictionaryWithKeysAndObjects:
parse
setEndTime
enclosingItemAtLocation:
numberOfChildren
indexOfChildAfterLocation:
children
colorId
inheritsColor
parent
registerColor:
indexOfObjectIdenticalTo:
colorForId:
syntaxTypeSpecificationForId:
isMark
specificationForIdentifier:
isKindOfSpecification:
convertColorToScannerType:
builtUpNameForItem:nameRange:
nameFormat
stringByConvertingWhitespaceRunsToSingleSpaces
initWithName:type:
setRange:
setNameRange:
addChild:
addEntriesFromItem:toParent:
_topLevelSourceItem
sourceModelItemAtCharacterIndex:
isSimpleToken
langId
_identifierForUniqueId:
scanner
lexer
wordRangeInString:fromIndex:allowNonWords:
rangeOfWordAtIndex:allowNonWords:
rangeOfWordAtIndex:
doubleClickAtIndex:inRange:
nextWordFromIndex:forward:
isSubWordMovement
nextSubWordFromIndex:forward:
xcNextWordFromIndex:forward:
tabWidth
indentWidth
usesTabs
useTabs
getIndentWrappedLinesPreference
leadingWhitespacePositionsForLine:
getWrappedLineIndentWidthPreference
characterRange
lineRange
timestamp
characterRangeFromBookmark:
blockItemAtLocation:
foldableBlockItemForLineAtLocation:
foldableBlockItemForLocation:
initialize
setHasSeparateFonts:
hasSeparateFonts
_contents
stringFromUnsignedInts:count:
numberOfLines
debugInfoStringForFileNavigator
invalidateLayoutForLineRange:
breakChangeTrackingCoalescing
isDoingBatchEdit
setAnnotationAdjustmentEnabled:
isAnnotationAdjustmentEnabled
clearChangeHistory
_dumpChangeHistory
rangeAtTimestamp:forRange:atTimestamp:
recordCurrentTimestampWithDate:
characterRangeForLineRange:atDate:
scheduleLazyInvalidationForRange:
resetAdvancementForSpace
fixesAttributesLazily
setLanguage:
language
syntaxColoringEnabled
setSyntaxColoringEnabled:
subclassDoesSyntaxColoring
setSubclassDoesSyntaxColoring:
colorAtCharacterIndex:inTextView:effectiveRange:
fontAtCharacterIndex:inTextView:effectiveRange:
rawMethodList
setSubWordMovement:
getIndentWidth
getUsesTabs
indentationForWrappedLineAtIndex:
fullString
lineNumberRangeFromBookmark:
stringFromBookmark:
lineStringFromBookmark:
_paragraphInfoTable
_lineOffsets
_numDateTimestampMappings
_dateTimestampMappings
_numChanges
_changeCapacity
_changes
_tsflags
_language
_sourceModel
_sourceModelUpdater
_rangeNeedingInvalidation
_invalidationTimer
_foldingTextStorages
_textFileDocument
_advancementForSpace
RESERVED
characterRangeForParagraphRange:
numberOfParagraphs
numberWithBool:
grayColor
stringForKey:
characterAtIndex:
hasSuffix:
setValue:forKey:
textBackgroundColor
textEditorBackgroundColor
backgroundColor
whiteColor
selectedTextBackgroundColor
blackColor
controlShadowColor
controlHighlightColor
controlDarkShadowColor
controlLightHighlightColor
textContainer
setLineFragmentPadding:
layoutManager
setAllowsNonContiguousLayout:
setCentersOnScroll:
textEditorInsertionPointColor
setInsertionPointColor:
textEditorSelectionBackgroundColor
setSelectedTextAttributes:
focusLocationMayHaveChanged:
_commonInit
initWithFrame:textContainer:
initWithCoder:
replaceTextStorage:
replaceLayoutManager:
stopAnimation
textStorage
setTextStorage:keepOldLayout:
hasMarkedText
increaseDrawingDepth
insertText:replacementRange:
decreaseDrawingDepth
tokenizedEditingSelectionRange
isDrawing
subtractOutFoldsForRange:
scrollRangeToVisible:
breakUndoCoalescing
textContainerOrigin
glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:
characterRangeForGlyphRange:actualGlyphRange:
usedRectForTextContainer:
extraLineFragmentTextContainer
extraLineFragmentRect
glyphRangeForCharacterRange:actualCharacterRange:
lineFragmentUsedRectForGlyphAtIndex:effectiveRange:
array
annotationsInRange:
window
setAnimationBlockingMode:
annotationViewForTextView:
setAnnotationView:
enclosingScrollView
verticalRulerView
showsFoldbar
setShowsFoldbar:
textView:shouldDrawAnnotation:
isVisible
isMiniaturized
annotations
shouldDrawAnnotation:
visibleRect
_drawOverlayRect:
_drawRect:clip:
drawRect:
visibleAnnotations
currentContext
saveGraphicsState
setShouldAntialias:
selectedRange
glyphRangeForBoundingRect:inTextContainer:
setLineWidth:
colorWithCalibratedRed:green:blue:alpha:
annotationStyle
drawsHighlight
isParagraphEdited
highlightedRanges
paragraphRange
realStorage
rangeAtIndex:
isRealRangeFolded:
rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:
isDrawingToScreen
removeAllPoints
moveToPoint:
lineToPoint:
closePath
fill
restoreGraphicsState
isAnimating
startAnimation
setNeedsDisplayInRect:avoidAdditionalLayout:
textView:layoutManager:didLayoutGlyphsUpToCharacterIndex:
firstUnlaidCharacterIndex
bounds
convertRect:toView:
setNeedsDisplayInRect:
colorWithCalibratedHue:saturation:brightness:alpha:
blendedColorWithFraction:ofColor:
_drawBlockBackground:atLocation:forItem:dynamicItem:
backgroundStyle
isBlock
isAncestorOf:
indentForItem:
blockHighlightColor
blockDepth
_grayLevelForDepth:
initWithColorsAndLocations:
drawInRect:angle:
alternateColor
bezierPath
appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:
_drawRoundedBackgroundForItem:dynamicItem:
boundingRectForGlyphRange:inTextContainer:
_roundedRect:withRadius:
sortedArrayUsingComparator:
comparePrecedence:
sortUsingSelector:
getParagraphRect:firstLineRect:forLineNumber:
rangeContainsFolds:
drawInParagraphRect:sidebarRect:withArrowPoint:inTextView:
_setFirstLineFragmentRect:
frame
position
isHorizontallyResizable
inLiveResize
removeFromSuperview
setFrame:
superview
addSubview:
drawWithFrame:inTextView:
removeAnnotationViewFromTextView:
removeAllObjects
setLineDash:count:phase:
isEmpty
transform
graphicsPort
translateXBy:yBy:
concat
tokenizedEditingTokenBorderColor
setStroke
tokenizedEditingTokenBackgroundColor
setFill
stroke
tokenizedEditingSelectedTokenBorderColor
tokenizedEditingSelectedTokenBackgroundColor
_drawViewBackgroundInRect:
drawsBackground
foldingHoverRange
currentProgress
isTokenizedEditingEnabled
_drawTokensInRect:
setBool:forKey:
setNeedsDisplay:
initWithDuration:animationCurve:
addProgressMark:
viewDidMoveToWindow
setAcceptsMouseMovedEvents:
locationInWindow
convertPoint:fromView:
subviews
isFlipped
_mouseInside:
isEditable
_showAutoHighlightTokenMenuWithTimer:
convertScreenToBase:
convertRect:fromView:
scheduleAutoHighlightTokenMenuTimerIfNeeded
mouseMoved:
rulersVisible
mouseEntered:
mouseExited:
_toolTipTimer
scrollWheel:
hitTest:
mouseDown:
mouseUp:
mouseDragged:
rightMouseUp:
rightMouseDown:
cursorUpdate:
acceptsFirstMouse:
shouldDelayWindowOrderingForEvent:
setSelectedRange:
addInFoldsForRange:
visibleRange
folds
stringValue
foldsFromString:
foldsAreValid:
setFolds:
clearDisplayForAutoHighlightTokens
scheduleAutoHighlightTokenTimerIfNeeded
initWithObjectsAndKeys:
temporaryAttribute:atCharacterIndex:effectiveRange:
addTemporaryAttributes:forCharacterRange:
integerValue
removeTemporaryAttribute:forCharacterRange:
addTemporaryAttribute:value:forCharacterRange:
removeAllRanges
clearAutoHighlightTokenMenu
parentWindow
removeChildWindow:
orderOut:
cachedBundleWithIdentifier:
localizedStringForKey:value:table:
toggleTokenizedEditing:
addItemWithTitle:action:keyEquivalent:
setTarget:
autoHighlightTokenMenu
setAlphaValue:
currentEvent
popUpContextMenu:withEvent:forView:
addChildWindow:ordered:
characterIndexForGlyphAtIndex:
temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:
_autoHighlightTokenMenuRangeAtPoint:
_autoHighlightTokenRectAtPoint:
centerScanRect:
convertPoint:toView:
convertBaseToScreen:
alphaValue
_animateAutoHighlightTokenMenuWithTimer:
setFrameOrigin:
bundleWithIdentifier:
pathForImageResource:
initWithContentsOfFile:
size
initWithFrame:
setBordered:
setImage:
setImagePosition:
_popUpTokenMenu:
setAction:
convertSize:toView:
contentRectForFrameRect:styleMask:
initWithContentRect:styleMask:backing:defer:
setReleasedWhenClosed:
level
setLevel:
setHidesOnDeactivate:
clearColor
setBackgroundColor:
setOpaque:
contentView
_autoHighlightTokenWindowWithTokenRect:
scheduleAutoHighlightTokenMenuAnimationTimerIfNeeded
_hitTestRectForAutoHighlightTokenWindow:
_isAutoHighlightTokenMenuOverridden
isKeyWindow
firstResponder
autoHighlightTokenMenuDelay
tokenizableItemsForRealRange:
indexOfRange:
addRange:
_displayAutoHighlightTokens
autoHighlightTokenOption
autoHighlightTokenDelay
_autoHighlightTokenWithTimer:
isOpaque
rawColorId
isInTokenizableCodeAtLocation:
isIdentifier
adjoiningItemAtLocation:
registeredSourceModelItemMatcherClasses
canHandleSourceModelItem:inTextView:
initWithTextView:
matchedSourceModelItemsForSourceModelItem:
addObjectsFromArray:
identifierItemsFromItem:
placeholderItemsFromItem:
compare:options:range:locale:
compare:
undoManager
isUndoing
isRedoing
setTokenizedEditingEnabled:
subtractOutFolds:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
updateTokenizedEditingRanges
setRange:atIndex:
setTokenizedEditingSelectionRange:
initWithCapacity:
relativeCurveToPoint:controlPoint1:controlPoint2:
appendBezierPathWithRoundedRect:xRadius:yRadius:
tokenPathsForCharacterRange:displayOnly:
completionIndicatorRange
liveInlineCommonCharactersRange
commonCharactersColor
completionColor
objectForKey:
setObject:forKey:
showsControlCharacters
setShowsControlCharacters:
showsInvisibleCharacters
setShowsInvisibleCharacters:
keyWindow
getSelectToMatchingBracePreference
type
clickCount
getSelectToInsideMatchingBracesPreference
getScrollToEndOfMatchingBracePreference
getBeepOnNoMatchingBracePreference
addInFolds:
stringConstantAtLocation:
characterConstantAtLocation:
commentAtLocation:
preprocessorStatementAtLocation:
stringWithCharacters:length:
rangeOfString:options:range:
getSelectToInsideMatchingQuotesPreference
isItemParenExpression:
getShowMatchingBracePreference
userInfo
getValue:
showMatchingBraceAtLocation:
performSelector:withObject:afterDelay:
showFindIndicatorForRange:
rangeForUserTextChange
unfoldRange:
typingAttributes
shouldChangeTextInRange:replacementString:
didChangeText
PBX_doUserIndentByNumberOfLevels:
isRichText
isFieldEditor
copySourceCodeAsRichText
writablePasteboardTypes
arrayWithArray:
lineEnding
selectedRanges
appendAttributedString:
rangeValue
RTFFromRange:documentAttributes:
setData:forType:
writeRTFSelectionToPasteboard:
setString:forType:
writeSelectionToPasteboard:type:
stringForType:
XCStandardizeEndOfLineToLF
XCStandardizeEndOfLineToCR
XCStandardizeEndOfLineToCRLF
pasteboardWithUniqueName
declareTypes:owner:
readSelectionFromPasteboard:type:
releaseGlobally
rangeForBlockContainingRange:
foldRange:animateInView:
innerRange
foldRecursiveItem:animateInView:
unfoldAll
unfoldRecursiveRange:
functionsAndMethodItems
rangeOfCenterLine
foldItems:
unfoldItems:
commentBlockItems
unfoldFoldsEnclosingRange:
rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:
bezierPathWithRoundedRect:xRadius:yRadius:
appendBezierPath:
initWithStartingColor:endingColor:
drawInBezierPath:angle:
setBackgroundStyle:
setTextEditorBackgroundColor:
setTextEditorSelectionBackgroundColor:
setTextEditorInsertionPointColor:
animationShouldStart:
animationDidStop:
animationDidEnd:
animation:valueForProgress:
animation:didReachProgressMark:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retainCount
hash
superclass
description
debugDescription
layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:
layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:
layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:
layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:
layoutManager:shouldUseAction:forControlCharacterAtIndex:
layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:
layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:
layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:
layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:
layoutManagerDidInvalidateLayout:
layoutManager:didCompleteLayoutForTextContainer:atEnd:
layoutManager:textContainer:didChangeGeometryFromSize:
layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:
setTextStorage:
setAllowsCodeFolding:
allowsCodeFolding
scrollRangeToVisible:animate:
lineNumberForPoint:
lineNumberRangeForBoundingRect:
annotationsForLineNumberRange:
showAnnotationIndicatorForAnnotation:
showsFoldingSidebar
setShowsFoldingSidebar:
_charLocationForMousePoint:
setFoldingHoverRange:
drawTextAnnotationInRect:
toggleCodeFocus:
startBlockHighlighting
stopBlockHighlighting
modifierFlagsAtLastSingleMouseDown
annotationBeingDragged
annotationForSubview:
_currentLineNumber
foldString
setFoldsFromString:
isInlineCompleting
setAutoHighlightTokenOption:
setAutoHighlightTokenDelay:
setAutoHighlightTokenMenuDelay:
tokenizedEditingTokenRanges
tokenizedEditingTokenPathsForCharacterRange:
setTokenizedEditingTokenBorderColor:
setTokenizedEditingTokenBackgroundColor:
setTokenizedEditingSelectedTokenBorderColor:
setTokenizedEditingSelectedTokenBackgroundColor:
selectNextToken:
selectPreviousToken:
viewWillMoveToWindow:
PBX_toggleShowsControlCharacters:
PBX_toggleShowsInvisibleCharacters:
PBX_textViewDidChangeSelection:
PBX_nestRight:
PBX_nestLeft:
PBX_balanceParens:
fold:
foldRecursive:
foldSelection:
unfoldAll:
unfold:
unfoldRecursive:
foldAllMethods:
unfoldAllMethods:
foldAllComments:
unfoldAllComments:
setNeedsDisplayInSidebar:
sidebarView
setFoundRanges:
setCurrentFoundRange:
currentFoundRange
drawFoundRangesInRange:
setFoundRangesHighlightColor:
_pageGuideWidth
_pageGuideOutOfBoundsColor
_pageNumber
_highlightStartY
_highlightHeight
_highlightBaseColor
_observingHighlightColorChangedNotification
_isMouseInsideView
_isDoingBatchEdit
_lastSelectedRangeDuringBatchEdit
_allowsCodeFolding
_showingCodeFocus
_oldFocusLocation
_blockAnimation
_lastMouseMovedLocation
_modifierFlagsAtLastSingleMouseDown
_selectionSymbolInfo
_comparatorView
_foldingHoverRange
_foldingHoverTimer
_foldingHoverLocation
_draggedAnnotation
_annotationIndicatorAnimation
_autoHighlightTokenOption
_autoHighlightTokenDelay
_autoHighlightTokenTimer
_autoHighlightTokenRanges
_autoHighlightTokenMenuDelay
_autoHighlightTokenMenuTimer
_autoHighlightTokenMenuRange
_autoHighlightTokenMenuAnimationDuration
_autoHighlightTokenMenuAnimationTimer
_autoHighlightTokenMenuAnimationStartTime
_autoHighlightTokenWindow
_isTokenizedEditingEnabled
_tokenizedEditingTokenRanges
_tokenizedEditingEditedTokenIndex
_tokenizedEditingDeferedOffset
_tokenizedEditingSelectionRange
_tokenizedEditingTokenColors
_foundRanges
_currentFoundRange
_foundRangesHighlightColor
_animatesCurrentScroll
_disableUpdatingInsertionPointCount
functionOrMethodAtLocation:
classAtLocation:
handleFailureInFunction:file:lineNumber:description:
notificationWithName:object:userInfo:
postNotification:
textViewWillChangeFolding:
textViewDidChangeFolding:
numberWithFloat:
floatForKey:
setInteger:forKey:
setColorIndexedSymbols:
setColorIndexedSymbolsDefault:
setCopySourceCodeAsRichText:
showGutter
setShowGutter:
showLineNumberInGutter
setShowLineNumberInGutter:
wrapLines
setWrapLines:
setUseTabs:
setTabWidth:
setIndentWidth:
setIndentWrappedLinesPreference:
setWrappedLineIndentWidthPreference:
setSelectToMatchingBracePreference:
setSelectToInsideMatchingBracesPreference:
setShowMatchingBracePreference:
setBeepOnNoMatchingBracePreference:
getSoloBraceIndentWidthPreference
setSoloBraceIndentWidthPreference:
getIndentSoloBraces
setIndentSoloBraces:
getAlignConsecutiveSlashSlashComments
setAlignConsecutiveSlashSlashComments:
getIndentSlashSlashComments
setIndentSlashSlashComments:
getSmartClosingBrackets
setSmartClosingBrackets:
initWithImage:hotSpot:
IBeamCursor
getCharacters:range:
deleteCharactersInRange:
numberOfGlyphs
advancementForGlyph:
maximumAdvancement
getCharacters:
getLineStart:end:contentsEnd:forRange:
ignoreToken
isMissingSpecificationProxy
identifier
decimalDigitCharacterSet
alphanumericCharacterSet
invertedSet
uniqueId
initWithPropertyListDictionary:language:
addTokenForString:
name
saveToken:
childEnclosingLocation:
dirty
setLocation:
includedRules
token
nextCharSkippingWhitespace
predictsRule:inputStream:
nodeToReuse:forScanner:inputStream:
parse:withContext:initialToken:inputStream:range:dirtyRange:
characterIsMember:
peekCharacterInSet:
nodeForThisScanner:atLocation:inputStream:
indexOfChildBeforeLocation:
replaceObjectsInRange:withObjectsFromArray:range:
lastObject
indexOfChildAtLocation:
parseOneIncludedRule:inTree:withContext:initialToken:inputStream:range:dirtyRange:isLexing:reusedToken:
sourceModelItemWithRange:language:token:color:
setInheritsColor:
setIgnoreToken:
setIsBlock:
setNeedToDirtyRightEdges:
parseIncludedRules:inTree:withContext:initialToken:inputStream:range:dirtyRange:
setDirty:
canTokenize
langSpec
wordRangeInString:fromIndex:
whitespaceAndNewlineCharacterSet
initWithLanguageSpecification:
_langSpec
_includedRules
_lexer
_langId
_token
_colorId
_altColorId
_startAtBOL
_startAtColumnZero
_isFoldable
_ignoreToken
_inheritsColor
_altIgnoreToken
_altInheritsColor
_needToDirtyRightEdges
removeLastObject
setString:
initWithRealString:subrange:
_computeBOL
location
rangeOfCharacterFromSet:options:range:
characterSetWithCharactersInString:
setRealString:subrange:
nextChar
isAtBOL
isAtColumnZero
peekChar
peekCharSkippingWhitespace
locationOfNewlineFrom:searchBackwards:
stringWithRange:
hasSavedTokens
savedToken
_buff
_isAtBOL
_isAtColumnZero
_BOLIsKnown
_SeenOneCharAtBOL
_SeenWhitespaceAtBOL
_realString
_cheapString
_savedTokens
syntaxRules
needToDirtyRightEdges
previousItem
assignParents:
validate
diffableDescription
childAdjoiningLocation:
parenLikeItemAtLocation:
objCDeclaratorItemAtLocation:
isItemSemanticBlock:
isItemBracketExpression:
stringByAppendingString:
_builtUpNameForSubTree:nameRange:
typeListForSpecNames:
itemAtLocation:inTypeList:
nameOfItem:nameRange:scopeRange:
arrayWithObjects:
addItemsInTypeList:fromItem:toArray:
addIdentifierItemsFromItem:toArray:
addBlockItemsInTypeList:fromItem:toArray:
arrayWithCapacity:
docCommentAtLocation:
includeStatementAtLocation:
numberConstantAtLocation:
dirtyRange
itemAtLocation:ofType:
itemNameAtLocation:inTypeList:nameRange:scopeRange:
classItems
identOrKeywordItemAtLocation:
isInIncludeStatementAtLocation:
isInPlainCodeAtLocation:
isItemAngleExpression:
objCMethodNameForItem:
_textStorage
_inputStream
_sourceItems
_scanner
_dirtyRange
_batchDelta
subSpecifications
mainBundle
setWithObject:
specificationType
initWithPropertyListDictionary:inDomain:
_uniqIdForIdentifier:
objectOrNilForKey:
dictionaryOrNilForKey:
copy
localizedSpecificationTypeName
lexerKeywords
specificationTypeBaseClass
specificationTypePathExtensions
specificationRegistryName
includeInMenu
availableKeywords
_uniqueId
_includeInMenu
_scannerClass
_syntaxRules
initWithBytes:length:encoding:
setParent:
caseInsensitiveCompare:
isDeclaration
nameWithIndent
compareWithScannerItem:
setName:
childAtIndex:
setType:
nameRange
nestingLevel
setNestingLevel:
indentLevel
setIndentLevel:
initWithRange:language:token:color:
stringWithCapacity:
innerDescription:showSelf:
contextArray
dirtyRelativeRange:changeInLength:
isVolatile
offsetBy:
makeObjectsPerformSelector:withObject:
_childEnclosingLocation:
firstObject
_firstLeafItem
_lastLeafItem
precedingItem
followingItem
clearIndexedColors
makeObjectsPerformSelector:
simpleDescription
dumpContext
enclosingBlock
setColorId:
setIsOpaque:
setToken:
setIsSimpleToken:
setVolatile:
addChildren:
nextItem
_relativeLocation
_isOpaque
_dirty
_isBlock
_isIdentifier
_isSimpleToken
_isVolatile
_parent
_children
subarrayWithRange:
nextToken:withItem:inTree:withContext:initialToken:insideBlock:range:dirtyRange:reusedToken:
parseRecursive:withContext:inputStream:range:dirtyRange:
actionForEndToken:inContext:inputStream:
startString
endString
altEndString
startChar
endChar
altEndChar
escapeChar
recursive
dontIncludeEnd
parseEndBeforeIncludedRules
caseSensitive
startToken
endToken
altEndToken
altToken
addCharactersInString:
uppercaseString
substringToIndex:
substringFromIndex:
invert
initWithArrayOfStrings:caseSensitive:
containsToken:
tokenForString:
nextToken:withContext:initialToken:
_startSet
_invertedOtherSet
_keywords
_previousTokenRange
_caseSensitive
regularExpressionWithString:ignoreCase:
matchesString:
rangeForSubexpressionAtIndex:inString:
colorNameForId:
tokenForString:forRange:subItems:
nextToken:withContext:initialToken:until:subItems:
_regExes
_captureColors
_altIsSimpleToken
_tokenForString:
initWithArray:
allObjects
lowercaseString
replaceObjectAtIndex:withObject:
addArrayOfStrings:
setCaseSensitive:
allTokens
_tokens
dictionaryWithCapacity:
initWithName:colorId:
color
defaultColorForId:
scanDouble:
isAtEnd
unarchiveObjectWithData:
doubleValue
xcFontWithName:size:
archivedDataWithRootObject:
fontName
pointSize
userFixedPitchFontOfSize:
fontDescriptorWithFontAttributes:
fontWithDescriptor:size:
floatValue
sizeWithAttributes:
defaultLineHeightForFont:
xcDefaultFont
setBidiProcessingEnabled:
setTypesetter:
_fillLayoutHoleAtIndex:desiredNumberOfLines:
_characterRangeCurrentlyInAndAfterContainer:
textContainerChangedGeometry:
setTemporaryAttributes:forCharacterRange:
layoutOptions
firstTextView
drawBackgroundForGlyphRange:atPoint:
getRectsBeingDrawn:count:
blueGlassTextAnnotationTheme
highlightOutlineColor
highlightBackgroundColor
drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:
oldDefaultColor
isEqualTo:
setColor:
defaultColor
setFont:
_colorName
_color
_font
_syntaxType
stringOrNilForKey:
includeInPreferences
oldDefaultFont
_isMark
_includeInPreferences
_isLink
_urlFormat
_nameFormat
_oldDefaultName
componentsSeparatedByString:
setWithCapacity:
optional
allowMultiple
matchesToken:
_optional
_allowMultiple
_tokenSet
rangeOfString:
nextToken:withItemArray:inTree:withContext:initialToken:range:dirtyRange:
_rules
_startChar
initWithRange:
foldRealRange:label:style:
selector
invokeWithTarget:
doesNotRecognizeSelector:
methodSignatureForSelector:
columnForPositionConvertingTabs:
firstNonblankForLine:convertTabs:
getTextForLineSansBlanks:
indentLine:to:undoManager:
indentLine:onlyIfMovingRight:undoManager:
indentLineRange:undoManager:
indentCharacterRange:undoManager:
indentAtBeginningOfLineForCharacterRange:undoManager:
annotationsOfClass:inRange:
insertObject:atIndex:
_assertAnnotationIntegrity
removeAnnotationsOfClass:inRange:
fixAttachmentAttributeInRange:
addAttributes:range:
_rangeByEstimatingAttributeFixingForRange:
fontSetChanged
adjustFoldsForRange:changeInLength:
invalidateDisplayAndLayoutIfNeeded
adjustParagraphIndexBy:
setVisible:
canMerge:
merge:
removeAnnotation:
usesGraphicalPlaceholder
_copyRealStorageAttributesInRange:
invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:
foldsTouchingRange:
rangeIsInsideAFold:
foldedIconString
setAttributedString:
removeChildren:
removeObject:
findFoldWithRange:
foldsEnclosingRange:
setLabel:
setFoldStyle:
foldRealRange:
_recursivelyFoldItem:toFold:
realRangeIsInsideAFold:
unfoldRealRange:
lineBreakBeforeIndex:withinRange:
locationForOpeningBracketForClosingBracket:withArgs:
forwardInvocation:
invalidateDisplayForLineRange:
annotationsOfClass:
addAnnotation:
removeAnnotationsOfClass:
removeAnnotationsInRange:
_undoRedoAttributedSubstringFromRange:
resetDrawingDepth
lineRangeOfFoldForRange:
foldingDepthAtLocation:
unfoldRecursiveRealRange:
setUsesGraphicalPlaceholder:
_realStorage
_fixingAttributes
invalidatingOurAttrs
_drawingDepth
_topLevelFold
_usesGraphicalPlaceholder
_annotations
newlineCharacterSet
_applyDeferredParagraphOffsetAdjustmentUpToIndex:
_replaceParagraphStructsInRange:withEmptyStructsOfMinimumCapacity:
_adjustParagraphsStartingAtIndex:byOffset:
paragraphRangeForCharacterRange:
descriptionForDebugger
assertInternalConsistencyWithRespectToString:
_capacity
_count
_paragraphs
_gapIndex
_offsetAdjustmentIndex
_offsetAdjustment
exceptionWithName:reason:userInfo:
decodeFold:forParent:
propertyList
foldStyle
label
_pList
innerDescription:
_addFoldsEnclosingRange:toArray:
initWithFileWrapper:
initImageCell:
colorUsingColorSpaceName:
whiteComponent
bundleForClass:
initTextCell:
setTextColor:
attributedStringWithAttachment:
numberWithDouble:
setAttachmentCell:
findFoldContainingRange:
_label
_foldStyle
_invalidateAllRevealovers
resetCursorRects
invalidateDisplay
resignFirstResponder
_invalidateDisplayForViewStatusChange
becomeFirstResponder
becomeKeyWindow
instancesRespondToSelector:
resignKeyWindow
becomeMainWindow
selectAll:
setSelectedRanges:affinity:stillSelecting:
updateInsertionPointStateAndRestartTimer:
drawInsertionPointInRect:color:turnedOn:
scrollPoint:
scrollRectToVisible:
_scrollTo:animate:
_showFindIndicator
shouldChangeTextInRanges:replacementStrings:
_userReplaceRange:withString:
_fixDragAndDropCharRangesForChangeInRanges:replacementStrings:
performDragOperation:
setMarkedText:selectedRange:
_sizeDownIfPossible
_ensureLayoutCompleteToEndOfCharacterRange:
_ensureLayoutCompleteForVisibleRectWithExtension:
_setFrameSize:forceScroll:
_adjustedCenteredScrollRectToVisible:forceCenter:
_centeredScrollRectToVisible:forceCenter:
_scrollRangeToVisible:forceCenter:
viewWillStartLiveResize
viewDidEndLiveResize
setTypingAttributes:
accessibilitySelectedText
accessibilitySetSelectedText:
accessibilitySelectedRange
accessibilitySetSelectedRange:
accessibilityVisibleCharacterRange
accessibilitySetVisibleCharacterRange:
accessibilityInsertionPointLineNumber
accessibilityLineNumberForCharacterIndex:
accessibilityCharacterRangeForLineNumber:
accessibilityCharacterRangeForPosition:
accessibilityBoundsForCharacterRange:
accessibilityRTFForCharacterRange:
accessibilityAXAttributedStringForCharacterRange:parent:
accessibilityStyleRangeForCharacterIndex:
accessibilitySharedTextViews
accessibilitySharedCharacterRange
accessibilityAttachments
accessibilityIndexForAttachment:
accessibilityAttachmentAtIndex:
accessibilityTextLinks
accessibilityTextLinkAtIndex:
accessibilityValueAttribute
accessibilitySetValueAttribute:
accessibilitySetSelectedTextRangeAttribute:
accessibilitySelectedTextRangesAttribute
accessibilitySetSelectedTextRangesAttribute:
accessibilityNumberOfCharactersAttribute
accessibilitySetVisibleCharacterRangeAttribute:
accessibilitySharedTextUIElementsAttribute
accessibilityStringForRangeAttributeForParameter:
accessibilityRangeForIndexAttributeForParameter:
accessibilityBoundsForRangeAttributeForParameter:
accessibilityRTFForRangeAttributeForParameter:
accessibilityAttributedStringForRangeAttributeForParameter:
accessibilityStyleRangeForIndexAttributeForParameter:
_accessibilityBoundsOfChild:
doCommandBySelector:
initWithTitle:
continueToHereAction:
separatorItem
addItem:
toggleAddBreakpointMarkerAction:
addAndEditBreakpoint:
addTemplateBreakpoint:
toggleEnableBreakpointMarkerAction:
revealInBreakpointsAction:
showHideMessageBubble:
collapseExpandMessageBubble:
initWithScrollView:orientation:
setRuleThickness:
setShowsSidebar:
setSidebarBackgroundColor:
setSidebarWidth:
setSidebarInvalidStripWidth:
setDrawsLineNumbers:
toolTipsFontOfSize:
setLineNumberFont:
darkGrayColor
setLineNumberTextColor:
setFoldbarBackgroundColor:
setFoldbarWidth:
setBadBreakpointStripColor:
badBreakpointStripColor
setUnknownBreakpointStripColor:
setOrientation:
showsSidebar
sidebarWidth
foldbarWidth
setReservedThicknessForMarkers:
_updateRulerThickness
arrowCursor
orientation
redColor
sidebarRect
foldbarRect
scrollView
documentView
sidebarBackgroundColor
supportsDebugInformationForSidebar:
foldbarBackgroundColor
sidebarInvalidStripWidth
drawsLineNumbers
lineNumberFont
screenFont
containerSize
knownBreakableLineRangesForSidebar:
unknownLineRangeForSidebar:
relativeLineToPoint:
unknownBreakpointStripColor
lineNumberTextColor
causesSidebarAnnotationDisplacement
annotationViewSizeForBounds:
drawSidebarMarkerInParagraphRect:firstLineRect:annotationRect:inView:
wantsInvertedLineNumber
wantsOmittedLineNumber
UTF8String
colorWithDeviceWhite:alpha:
sortedArrayUsingSelector:
sidebarMarkerRectForParagraphRect:firstLineRect:
annotationForPoint:
defaultContextualMenu
sidebarCursor
currentCursor
_foldingHovered
sidebarView:shouldMoveAnnotation:
sidebarView:handleMouseDownInSidebar:atLineNumber:
sidebarView:willMoveAnnotation:toLineNumber:
setParagraphRange:
startPeriodicEventsAfterDelay:withPeriod:
autoscroll:
nextEventMatchingMask:
stopPeriodicEvents
sidebarView:shouldRemoveAnnotation:
disappearingItemCursor
sidebarView:handleMouseUp:onAnnotation:
sidebarView:didMoveAnnotation:
sidebarView:didRemoveAnnotation:
modifierFlags
acceptsFirstResponder
displaysTooltips
redrawLineNumbersIfNeeded
menuForEvent:
lastPointControlClicked
lastLineNumberControlClicked
lastAnnotationControlClicked
lastMarkerControlClicked
setBreakpointRangeDelegate:
breakpointRangeDelegate
_showsSidebar
_sidebarWidth
_sidebarInvalidStripWidth
_showsFoldbar
_foldbarWidth
_sidebarBackgroundColor
_foldbarBackgroundColor
_drawsLineNumbers
_lineNumberFont
_lineNumberTextColor
_annotationBeingDragged
_origLineNumberOfAnnotationBeingDragged
_draggedAnnotationHasTraveled
_hitAnnotationForContextualMenu
_mouseLocationForContextualMenu
_hitLineNumberForContextualMenu
_badBreakpointStripColor
_unknownBreakpointStripColor
_breakpointRangeDelegate
registeredSpecifications
colors
textColor
fonts
save
pathExtension
initWithPath:
defaultManager
stringByExpandingTildeInPath
contentsOfDirectoryAtPath:error:
stringByAppendingPathComponent:
_addThemesFromDirectory:toDictionary:
themeFromOldUserDefaults
allValues
pathsForResourcesOfType:inDirectory:
_addThemesFromPathList:toDictionary:
themeWithName:
systemTheme
isBuiltInTheme
userThemes
builtInThemes
fileExistsAtPath:
dictionaryWithContentsOfFile:
allKeys
lastPathComponent
stringByDeletingPathExtension
addEntriesFromDictionary:
stringByDeletingLastPathComponent
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
redComponent
greenComponent
blueComponent
writeToFile:atomically:
path
saveToPath:
currentTheme
setCurrentTheme:
setThemePath:
initWithColors:fonts:
copyFromTheme:
activate
_dict
_name
firstTextViewForTextStorage:
_setUndoRedoInProgress:
_undoRedoTextOperation:
registerUndoWithTarget:selector:object:
initWithAffectedRange:layoutManager:undoManager:replacementRange:
setAffectedRange:
setReplacementRange:
affectedRange
undoRedo:
isSupportingCoalescing
_affectedRange
_undoManager
_layoutManager
_replacementRange
_attributedString
_indentForLineWithRange:inString:
numberWithUnsignedInt:
computeContext:inString:forLocation:
nextIndentForlocation:inString:
unsignedIntValue
valueForKey:
entityMap
stringByRemovingLeadingAndTrailingWhitespaceAndNewlines
registerSourceModelItemMatcherClass:
addObjectIfAbsent:
unregisterSourceModelItemMatcherClass:
_textView
controlView
_typesetterBehavior
typesetterBehavior
defaultTypesetterBehavior
cellSizeForBounds:
titleRectForBounds:
drawingRectForBounds:
interiorBackgroundStyle
tokenForegroundColor
isMainWindow
tokenBackgroundColor
setControlView:
drawWithFrame:inView:characterIndex:layoutManager:
trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:
textView:clickedOnCell:inRect:atIndexInToken:
textView:doubleClickedOnCell:inRect:atIndexInToken:
attributedStringValue
initWithContainerSize:
addTextContainer:
removeTextContainerAtIndex:
_controlView
replacementRange
attributedString
initWithUndoTextOperation:affectedRange:layoutManager:undoManager:replacementRange:
affectedRanges
replacementRanges
willUndoRedo:
didUndoRedo:
_tokenizedEditingUndoHelper
willCoalesceAffectedRange:replacementRange:selectedRange:text:
coalesceAffectedRange:replacementRange:selectedRange:text:
didCoalesceAffectedRange:replacementRange:selectedRange:text:
_undoTextOperation
_affectedRanges
_replacementRanges
_editedTokenIndex
startingLineNumber
endingLineNumber
startingColumnNumber
endingColumnNumber
characterRangeInTextStorage:
null
isIndentable
formattingPreferences
firstColonAfterItem:inRange:
replaceCharactersInRange:withString:withUndoManager:
getIndentForLine:
drain
isAtBOL:
_parenLikeItemAtLocation:
_isItemBracketExpression:
replaceCharactersInRange:withAttributedString:withUndoManager:
indentSelection:
indentSelectionIfIndentable:
setBackgroundLayoutEnabled:
currentTextContainer
setContainerSize:
lineFragmentPadding
sharedTypesetter
getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:
setAnnotationView:forTextView:
createAnnotationViewForTextView:withFrame:
_annotationTextStorageForChracterRange:
extraLineFragmentUsedRect
setPosition:
setNeedsParagraphSpacing:
setLocation:withAdvancements:forStartOfGlyphRange:
paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:
needsParagraphSpacing
layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:
willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:
_annotationTextContainer
_annotationLayoutManager
_annotationTextStorage
_mostRecentWrappedLineIndentation
classicBlueTextAnnotationTheme
initWithBreakpoint:
setDrawsBackground:
setDrawsOverlay:
setDrawsBorder:
_breakpointDidChange:
currentMultipleMatches
lineNumber
removeAllAnnotationViews
noteThatDesiredSizeMayHaveChanged
_defaultContentFontSize
initWithNibNamed:bundle:
instantiateNibWithOwner:topLevelObjects:
breakpoint
state
pendingBreakpointSidebarIcon
originalNumberOfMultipleMatches
multipleBreakpointsSidebarIcon
breakpointSidebarIcon
drawsSidebarMarkerIcon
project
activeExecutable
breakpointsEnabled
displayState
sidebarMarkerIconImage
compositeToPoint:operation:fraction:
_defaultSidebarMarkerAlignment
_defaultAnnotationTheme
_defaultHighlightsByMask
annotationWithBreakpoint:
calculateAnnotationViewSizeForBounds:
precedence
isBreakpoint
_breakpoint
drawBackgroundInRect:
contentRect
textAnnotation
annotationTheme
contentRectRadiuses
selectedBackgroundColor
bottomBorderColor
strokeLineFromPoint:toPoint:
buildMessages
isErrorMessage
isWarningMessage
isNoticeMessage
fileLocation
addHighlightedRange:
secondaryFileLocations
_updateHighlightedRanges
isAnalyzerWarningMessage
isAnalyzerResultMessage
isAnalyzerEventStepMessage
isAnalyzerControlFlowStepMessage
showsWarnings
isBuildError
isAnalyzerStepMessage
sortUsingComparator:
isBuildAnalyzerEventStep
isBuildAnalyzerControlFlowStep
addBuildMessage:
buildMessagesToShow
redGlassTextAnnotationTheme
isBuildWarning
isBuildAnalyzerWarning
yellowGlassTextAnnotationTheme
isBuildAnalyzerResult
setAnnotationTheme:
annotationViews
_invalidateCachedMessageTextAttributes
setDrawsShadow:
_calculateAnnotationViewSizeForBounds:
buildWarningSidebarIcon
buildErrorSidebarIcon
buildAnalyzerWarningSidebarIcon
buildAnalyzerResultSidebarIcon
buildAnalyzerEventStepSidebarIcon
buildAnalyzerControlFlowStepSidebarIcon
buildNoticeSidebarIcon
_defaultAnnotationStyle
removeBuildMessage:
numberOfBuildNotices
numberOfBuildWarnings
numberOfBuildErrors
numberOfBuildAnalyzerWarnings
numberOfBuildAnalyzerResults
numberOfBuildAnalyzerEventSteps
numberOfBuildAnalyzerControlFlowSteps
setShowsWarnings:
setCollapsed:
isCollapsed
canCollapseOrExpand
_buildMessages
_numBuildNotices
_numBuildWarnings
_numBuildAnalyzerWarnings
_numBuildAnalyzerResults
_numBuildAnalyzerEventSteps
_numBuildAnalyzerControlFlowSteps
_numBuildErrors
_bmtaFlags
getWhite:alpha:
setShadowOffset:
colorWithCalibratedWhite:alpha:
setShadowColor:
setAlignment:
_firstLineFragmentRect
_cachedMessageTextAttributes
rectOfBuildMessageAtIndex:
_maxIconImageWidth
_buildMessageCounterWidthAtIndex:
rectOfBuildMessageTextAtIndex:
_cachedBadgeTextAttributes
contentLeftMargin
contentRightMargin
contentTopMargin
contentBottomMargin
rectOfBuildMessageCounterAtIndex:
removeFromSuperviewWithoutNeedingDisplay
indexOfBuildMessageAtPoint:
buildMessageTextAnnotationView:clickedOnBuildMessage:forEvent:
updateTrackingAreas
rect
removeTrackingArea:
initWithRect:options:owner:userInfo:
addTrackingArea:
removeToolTip:
enumerateIndexesUsingBlock:
removeAllIndexes
addToolTipRect:owner:userData:
addIndex:
containsIndex:
title
stringWithString:
drawWithRect:options:attributes:
isError
rectOfBuildMessageIconImageAtIndex:
compositeToPoint:operation:
_badgePath
colorWithAlphaComponent:
_currentBadgeTextAttributes
drawInRect:withAttributes:
_badgeTrianglePath
_cachedHighlightedBadgeTextAttributes
_defaultContentMargins
view:stringForToolTip:point:userData:
_badgeTrackingArea
_toolTipTags
_messageCounterWidth
_flags
categoryIdentifier
shortTitle
lowercaseLetterCharacterSet
capitalizedString
setSelectedBackgroundColor:
setFocusedBackgroundColor:
setTopBorderColor:
setBottomBorderColor:
initWithInstructionPointer:
instructionPointerSidebarIcon
highlightBaseColor
annotationWithInstructionPointer:
isInstructionPointer
instructionPointer
_instrPointer
sidebarMarkerAlignment
focusedBackgroundColor
topBorderColor
alphaComponent
topGradient
bottomGradient
_highlightedRanges
removeRangeAtIndex:
isSelected
highlightsByMask
_forcesActive
isFocusedInTextView:
isSelectedInTextView:
selectedTextAttributes
currentContextDrawingToScreen
layoutManagerOwnsFirstResponderInWindow:
secondarySelectedControlColor
_annotationBackgroundColorForTextView:
drawsOverlay
drawsBorder
_invalidateCachedBoundsSize
setTextView:
setTextAnnotation:
setDrawsSidebarMarkerIcon:
setSidebarMarkerAlignment:
setMiniaturized:
setSelected:
setDrawsHighlight:
_setForcesActive:
setHighlightsByMask:
removeHighlightedRange:
removeAllHighlightedRanges
setAnnotationStyle:
collapseButtonRect
isBuildNotice
_paraRange
_paraHash
_annotationViews
_cachedBoundsSize
_cachedSize
_annotationTheme
_highlightsByMask
_taFlags
deviceGrayColorSpace
colorUsingColorSpace:
systemFontSizeForControlSize:
setShadowBlurRadius:
messageFontOfSize:
addCursorRect:cursor:
setLineCapStyle:
setLineJoinStyle:
curveToPoint:controlPoint1:controlPoint2:
_contentBezierPathWithRect:
backgroundBezierPath
drawsShadow
_defaultContentShadow
addClip
bezierPathWithRect:
overlayBezierPath
borderBezierPath
drawOverlayInRect:
drawBorderInRect:
setContentLeftMargin:
setContentRightMargin:
setContentTopMargin:
setContentBottomMargin:
setContentRectRadiuses:
isFocused
_textAnnotation
_contentLeftMargin
_contentRightMargin
_contentTopMargin
_contentBottomMargin
_contentRectRadiuses
_tavFlags
setBottomGradient:
setHighlightOutlineColor:
setHighlightBackgroundColor:
setTopGradient:
_backgroundColor
_selectedBackgroundColor
_focusedBackgroundColor
_topBorderColor
_bottomBorderColor
_topGradient
_bottomGradient
_highlightOutlineColor
_highlightBackgroundColor
windowNumber
close
annotationView
_clearAnnotationIndicator
setFrame:display:
setAutodisplay:
setIgnoresMouseEvents:
lockFocus
displayRectIgnoringOpacity:inContext:
unlockFocus
setCurrentProgress:
_pulseAnnotationIndicator:
_fadeAnnotationIndicator:
_annotationView
_window
_originalWindowTransform
XCTextStorage
XCTextView
NSAnimationDelegate
NSObject
NSLayoutManagerDelegate
XCTextPreferences
XCTextExtras
XCSourceScanner
XCCharStream
XCSourceModel
XCLanguageSpecification
XCSourceScannerItem
XCScannerItem
XCSourceModelItem
XCBlockScanner
XCKeywordScanner
XCRegExScanner
XCSourceTokens
XCTextColorPreferences
XCTextColorExtensions
XCLayoutManager
XCTextColor
XCNumberScanner
XCSyntaxTypeSpecification
XCScannerRule
XCRuleScanner
XCFoldingTextStorage
XCParagraphInfoTable
XCParagraphMarker
XCParagraphMarkers
XCFold
FoldingSupport
XCTextSidebarView
XCColorTheme
XCUndoMultiEdits
XCPythonScanner
XCHTMLEntityScanner
XCHTMLScanner
XCSourceModelItemMatcher
XCPreprocessorItemMatcher
XCClassItemMatcher
XCCategoryItemMatcher
XCProtocolItemMatcher
XCMethodItemMatcher
XCFunctionItemMatcher
XCVariableItemMatcher
XCFoldInlineTokenAttachment
XCFoldInlineTokenAttachmentCell
XCUndoTextOperation
XCUndoReplaceCharacters
XCUndoTyping
XCTokenizedEditingUndoHelper
XCEditAdditions
DevToolsInterfaceExtensions
XCEditIndentation
XCAnnotatingTypesetter
XCBreakpointTextAnnotation
XCBreakpointTextAnnotationView
XCBuildMessageTextAnnotation
XCBuildMessageTextAnnotationView
XCInstructionPointerTextAnnotationTheme
XCInstructionPointerTextAnnotation
XCTextAnnotation
XCTextAnnotationView
XCTextAnnotationTheme
XCTextAnnotationIndicatorAnimation
v16@0:8
v20@0:8c16
c16@0:8
@16@0:8
@24@0:8@16
@32@0:8@16@24
v24@0:8@16
@32@0:8r^Q16Q24
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
Q16@0:8
v32@0:8{_NSRange=QQ}16
{_NSRange=QQ}48@0:8Q16{_NSRange=QQ}24Q40
v48@0:8{_NSRange=QQ}16@32q40
Q24@0:8@16
{_NSRange=QQ}40@0:8{_NSRange=QQ}16@32
@32@0:8Q16^{_NSRange=QQ}24
@32@0:8{_NSRange=QQ}16
@48@0:8Q16^{_NSRange=QQ}24{_NSRange=QQ}32
@56@0:8@16Q24^{_NSRange=QQ}32{_NSRange=QQ}40
v40@0:8{_NSRange=QQ}16@32
v40@0:8@16{_NSRange=QQ}24
@40@0:8@16Q24^{_NSRange=QQ}32
d16@0:8
@24@0:8Q16
q40@0:8Q16@24^{_NSRange=QQ}32
@40@0:8Q16@24^{_NSRange=QQ}32
i24@0:8q16
v32@0:8@16@24
{_NSRange=QQ}28@0:8Q16c24
{_NSRange=QQ}24@0:8Q16
{_NSRange=QQ}40@0:8Q16{_NSRange=QQ}24
Q28@0:8Q16c24
q16@0:8
Q24@0:8Q16
d24@0:8Q16
{_NSRange=QQ}24@0:8@16
@"NSMutableAttributedString"
@"XCParagraphInfoTable"
{_XCLineOffsetTable="capacity"Q"count"Q"offsets"^Q"deferredAdjustmentIndex"Q"deferredAdjustment"q}
^{_XCDateTimestampMapping=dQ}
^{_XCChangeEntry={_NSRange=QQ}q{_NSRange=QQ}q}
{?="breakChangeCoalescing"b1"linesDidChangeDuringEdit"b1"doingSubWordMovement"b1"syntaxColoringEnabled"b1"delegateHandlesColoring"b1"doingBatchEdit"b1"subclassDoesSyntaxColoring"b1"initiatedEditingEvents"b1"callingBeginEditing"b1"callingEndEditing"b1"invalidatingOurAttrs"b1"fixingAttrs"b1"disableAnnotationAdjustment"b1}
@"NSString"
@"XCSourceModel"
@"NSTimer"
{_NSRange="location"Q"length"Q}
@"NSMutableArray"
@"NSDocument"
[1^v]
i16@0:8
v20@0:8i16
c24@0:8@16
c24@0:8@"NSAnimation"16
v24@0:8@"NSAnimation"16
f28@0:8@16f24
f28@0:8@"NSAnimation"16f24
v28@0:8@16f24
v28@0:8@"NSAnimation"16f24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8@"Protocol"16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
Q72@0:8@16r^S24r^q32r^Q40@48{_NSRange=QQ}56
Q72@0:8@"NSLayoutManager"16r^S24r^q32r^Q40@"NSFont"48{_NSRange=QQ}56
d64@0:8@16Q24{CGRect={CGPoint=dd}{CGSize=dd}}32
d64@0:8@"NSLayoutManager"16Q24{CGRect={CGPoint=dd}{CGSize=dd}}32
q40@0:8@16q24Q32
q40@0:8@"NSLayoutManager"16q24Q32
c32@0:8@16Q24
c32@0:8@"NSLayoutManager"16Q24
{CGRect={CGPoint=dd}{CGSize=dd}}96@0:8@16Q24@32{CGRect={CGPoint=dd}{CGSize=dd}}40{CGPoint=dd}72Q88
{CGRect={CGPoint=dd}{CGSize=dd}}96@0:8@"NSLayoutManager"16Q24@"NSTextContainer"32{CGRect={CGPoint=dd}{CGSize=dd}}40{CGPoint=dd}72Q88
c72@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^{CGRect={CGPoint=dd}{CGSize=dd}}32N^d40@48{_NSRange=QQ}56
c72@0:8@"NSLayoutManager"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^{CGRect={CGPoint=dd}{CGSize=dd}}32N^d40@"NSTextContainer"48{_NSRange=QQ}56
v24@0:8@"NSLayoutManager"16
v36@0:8@16@24c32
v36@0:8@"NSLayoutManager"16@"NSTextContainer"24c32
v48@0:8@16@24{CGSize=dd}32
v48@0:8@"NSLayoutManager"16@"NSTextContainer"24{CGSize=dd}32
@52@0:8@16@24c32Q36^{_NSRange=QQ}44
@"NSDictionary"52@0:8@"NSLayoutManager"16@"NSDictionary"24c32Q36^{_NSRange=QQ}44
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
v28@0:8@16c24
v36@0:8{_NSRange=QQ}16c32
Q32@0:8{CGPoint=dd}16
{_NSRange=QQ}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v40@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGRect={CGPoint=dd}{CGSize=dd}}24Q32
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16c48
{_NSRange=QQ}16@0:8
d24@0:8q16
Q72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16Q48@56@64
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48
q32@0:8@16@24
@32@0:8{CGPoint=dd}16
v24@0:8Q16
v24@0:8d16
{_NSRange=QQ}32@0:8{CGPoint=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{CGPoint=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8@16{_NSRange=QQ}24q40
@36@0:8{_NSRange=QQ}16c32
v24@0:8q16
c32@0:8@16@24
@"NSColor"
@"NSAnimation"
{CGPoint="x"d"y"d}
@"XCTextSelectionSymbolInfo"
@"XCDiffComparatorView"
@"XCTextAnnotation"
@"XCTextAnnotationIndicatorAnimation"
@"DTMutableRangeArray"
@"NSWindow"
[4@"NSColor"]
@"DTRangeArray"
f16@0:8
@32@0:8@16q24
@40@0:8@16@24@32
@40@0:8@16Q24@32
q92@0:8@16@24@32q40@48{_NSRange=QQ}56^{_NSRange=QQ}72c80^c84
v80@0:8@16@24@32q40@48{_NSRange=QQ}56^{_NSRange=QQ}72
c32@0:8q16@24
@72@0:8@16@24q32@40{_NSRange=QQ}48^{_NSRange=QQ}64
{_NSRange=QQ}36@0:8@16Q24c32
{_NSRange=QQ}32@0:8@16Q24
@"XCLanguageSpecification"
@"XCSourceScanner"
S16@0:8
@"PBXCheapReusableSubstring"
v40@0:8{_NSRange=QQ}16q32
q24@0:8@16
@32@0:8@16^{_NSRange=QQ}24
^q24@0:8@16
@32@0:8Q16^q24
@32@0:8Q16@24
@40@0:8@16^{_NSRange=QQ}24^{_NSRange=QQ}32
@48@0:8Q16^q24^{_NSRange=QQ}32^{_NSRange=QQ}40
v40@0:8^q16@24@32
c24@0:8Q16
@"XCTextStorage"
@"XCCharStream"
@"XCSourceModelItem"
@24@0:8q16
@"TSPropertyListDictionary"
q24@0:8@"<XCScannerItem>"16
@"XCSourceScannerItem"
@52@0:8{_NSRange=QQ}16q32q40s48
@28@0:8@16c24
v20@0:8s16
s16@0:8
q92@0:8@16@24@32@40q48c56{_NSRange=QQ}60^{_NSRange=QQ}76^c84
i40@0:8@16@24@32
@64@0:8@16@24@32{_NSRange=QQ}40^{_NSRange=QQ}56
q40@0:8@16@24q32
@"NSCharacterSet"
@"XCSourceTokens"
q40@0:8@16^{_NSRange=QQ}24^@32
q56@0:8@16@24q32Q40^@48
@"NSMutableSet"
s24@0:8@16
@20@0:8s16
{CGSize=dd}16@0:8
@32@0:8@16d24
v32@0:8Q16Q24
v48@0:8@16@24{_NSRange=QQ}32
v48@0:8{_NSRange=QQ}16{CGPoint=dd}32
v112@0:8{_NSRange=QQ}16q32d40{CGRect={CGPoint=dd}{CGSize=dd}}48{_NSRange=QQ}80{CGPoint=dd}96
@28@0:8@16s24
@"NSFont"
@"XCSyntaxTypeSpecification"
c24@0:8q16
@"NSSet"
q80@0:8@16@24@32@40q48{_NSRange=QQ}56^{_NSRange=QQ}72
q24@0:8q16
q28@0:8q16c24
v40@0:8q16q24@32
c36@0:8q16c24@28
c40@0:8{_NSRange=QQ}16@32
@24@0:8#16
@40@0:8#16{_NSRange=QQ}24
v40@0:8#16{_NSRange=QQ}24
v24@0:8#16
c32@0:8{_NSRange=QQ}16
q24@0:8Q16
v48@0:8{_NSRange=QQ}16@32Q40
Q40@0:8Q16{_NSRange=QQ}24
Q32@0:8Q16^c24
@"XCFold"
v40@0:8{_NSRange=QQ}16Q32
v32@0:8Q16q24
v64@0:8{_NSRange=QQ}16^Q32Q40q48q56
^{XCParagraphInfo=Q@b8b8b1b1b14}
@40@0:8{_NSRange=QQ}16q32
v36@0:8@16Q24c32
v60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48c56
v32@0:8{CGPoint=dd}16
c48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
c20@0:8c16
v36@0:8{CGSize=dd}16c32
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{_NSRange=QQ}16
@40@0:8{_NSRange=QQ}16@32
v24@0:8:16
@32@0:8@16Q24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGPoint=dd}16@0:8
@"<XCTextSidebarViewBreakpointRangeDelegates>"
@"NSMutableDictionary"
@64@0:8{_NSRange=QQ}16@32@40{_NSRange=QQ}48
@"NSUndoManager"
@"NSLayoutManager"
@"NSAttributedString"
q40@0:8{_NSRange=QQ}16@32
Q32@0:8Q16@24
v40@0:8@16@24Q32
@"NSDictionary"
@"XCTextView"
{CGSize=dd}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48Q56@64
c76@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56Q64c72
@24@0:8^{_NSZone=}16
@"XCTokenizedEditingUndoHelper"
c72@0:8{_NSRange=QQ}16{_NSRange=QQ}32{_NSRange=QQ}48@64
@72@0:8@16{_NSRange=QQ}24@40@48{_NSRange=QQ}56
v72@0:8{_NSRange=QQ}16{_NSRange=QQ}32{_NSRange=QQ}48@64
@"NSUndoTextOperation"
Q40@0:8@16{_NSRange=QQ}24
v48@0:8{_NSRange=QQ}16@32@40
v104@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGRect={CGPoint=dd}{CGSize=dd}}24^{CGRect={CGPoint=dd}{CGSize=dd}}32Q40{CGRect={CGPoint=dd}{CGSize=dd}}48d80d88d96
v56@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16{_NSRange=QQ}24^{CGRect={CGPoint=dd}{CGSize=dd}}40^d48
v56@0:8{CGPoint=dd}16r^d32{_NSRange=QQ}40
d56@0:8Q16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16Q24Q32^Q40
@"NSTextContainer"
@"XCLayoutManager"
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v120@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{CGRect={CGPoint=dd}{CGSize=dd}}80@112
@"PBXBreakpoint"
{_XCBuildMessageTextAnnotationFlags="showsWarnings"b1"isCollapsed"b1"RESERVED"b30}
r^d16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8q16
q32@0:8{CGPoint=dd}16
@56@0:8@16q24{CGPoint=dd}32^v48
@"NSTrackingArea"
@"NSMutableIndexSet"
{?="_mouseIsInBadge"b1"_mouseIsDown"b1"_reserved"b30}
v104@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{CGPoint=dd}80@96
@"PBXDebugInstructionPointer"
{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"XCFoldingTextStorage"
{CGSize="width"d"height"d}
@"XCTextAnnotationTheme"
{_XCTextAnnotationFlags="drawsSidebarMarkerIcon"b1"sidebarMarkerAlignment"b4"miniaturized"b1"selected"b1"visible"b1"drawsBackground"b1"drawsOverlay"b1"drawsBorder"b1"drawsHighlight"b1"annotationStyle"b1"forcesActive"b1"RESERVED"b19}
v32@0:8{CGSize=dd}16
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
{_XCTextAnnotationViewFlags="drawsBackground"b1"drawsOverlay"b1"drawsBorder"b1"drawsShadow"b1"position"b1"needsParagraphSpacing"b1"RESERVED"b26}
@"NSGradient"
v20@0:8f16
@"XCTextAnnotationView"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
                                       
