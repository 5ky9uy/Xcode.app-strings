exists
%s:%u:
FATAL:
as: for architecture arm
virtual memory exceeded
$._ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
; .file 
End of file in string: inserted '"'
Unknown escape '\%c' in string: Ignored
End of file in string: '"' inserted
End of file in '/' '*' string: */ inserted
End-of-file after a ': \000 inserted
(%d)
EOF in comment:  Newline inserted
EOF in Comment: Newline inserted
.line 
End-of-File not at end of a line
rs_org invalid, dot past value by %d bytes
Case value %d unexpected at line %d of file "%s"
/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot11/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/cctools/cctools-1009.2/as/layout.c
Negative of non-absolute symbol %s
section difference divide by two expression, "%s" minus "%s" divide by 2 will not produce an assembly time constant
section difference relocatable subtraction expression, "%s" minus "%s" using a symbol at the end of section will not produce an assembly time constant
use a symbol with a constant value created with an assignment instead of the expression, L_const_sym = %s - %s
non-relocatable subtraction expression, "%s" minus "%s"
symbol: "%s" can't be undefined in a subtraction expression
Fixup of %lld too large for field width of %d
10.0
ARM register expected
bad or missing co-processor number
co-processor register expected
FPA register expected
VFP single precision register expected
VFP/Neon double precision register expected
Neon quad precision register expected
VFP single or double precision register expected
Neon double or quad precision register expected
VFP single, double or Neon quad precision register expected
VFP system register expected
Maverick MVF register expected
Maverick MVD register expected
Maverick MVFX register expected
Maverick MVDX register expected
Maverick MVAX register expected
Maverick DSPSC register expected
iWMMXt data register expected
iWMMXt control register expected
iWMMXt scalar register expected
XScale accumulator register expected
bad call to MD_ATOF()
unreq
thumb
code
force_thumb
thumb_func
thumb_set
even
syntax
word
2byte
4byte
8byte
file
loc_mark_labels
extend
ldouble
packed
bad instruction `%s'
s suffix on comparison instruction is deprecated
selected processor does not support `%s'
Thumb does not support conditional execution
incorrect condition in IT block
thumb conditional instruction not in IT block
cannot honor width suffix -- `%s'
width suffixes are invalid in ARM mode -- `%s'
attempt to use an ARM instruction on a Thumb-only processor -- `%s'
data:
/data
undefined symbol %s used as an immediate value
invalid constant (0x%x) after fixup
invalid literal constant: pool needs to be closer
bad immediate value for offset (%d)
bad immediate value for 8-bit offset (%d)
offset not a multiple of 4
offset out of range
shift expression is too large
invalid smc expression
invalid swi expression
invalid expression in load/store multiple
misaligned branch destination
branch out of range
conditional branch out of range
co-processor offset out of range
invalid offset, target not word aligned (0x%08x)
invalid offset, value too big (0x%08x)
Unable to process relocation for thumb opcode: %x
invalid Hi register with immediate
immediate value out of range
invalid immediate for stack address calculation
invalid immediate for address calculation (value = 0x%08x)
invalid immediate: %d is too large
invalid shift value: %d
bad offset 0x%08x (only 12 bits available for the magnitude)
bad offset 0x%08x (only 8 bits available for the magnitude)
bad offset 0x%08x (must be word-aligned)
bad offset 0x%08x (must be an 8-bit number of words)
bad relocation fixup type (%d)
unsupported relocation on symbol %s
virtual memory exhausted
invalid syntax for .req directive
invalid syntax for .dn directive
invalid syntax for .qn directive
invalid syntax for .unreq directive
unknown register alias '%s'
ignoring attempt to undefine built-in register '%s'
.bss directive not supported, use .zerofill for Mach-O files
selected processor does not support THUMB opcodes
selected processor does not support ARM opcodes
invalid instruction size selected (%d)
invalid operand to .code directive (%d) (expecting 16 or 32)
expected comma after name "%s"
unified
divided
unrecognized syntax mode "%s"
conditional infixes are deprecated in unified syntax
instruction cannot be conditional
unexpected character `%c' in type specifier
bad size %d in type specifier
 .req 
unknown register '%s' -- .req ignored
ignoring attempt to redefine built-in register '%s'
ignoring redefinition of register alias '%s'
 .dn 
 .qn 
bad type for register
expression must be constant
can't redefine the type of a register alias
you must specify a single type only
can't redefine the index of a scalar alias
scalar index must be constant
expecting ]
immediate expression requires a # prefix
bad expression
invalid constant
attempt to redefine typed alias
branch must be last instruction in IT block
%s%s
.real_start_of
instruction is always unconditional
immediate value is out of range
unrecognized relocation suffix
iWMMXt data or control register expected
APSR_
unhandled operand code %d
r15 not allowed here
bad arguments to instruction
syntax error
garbage following instruction
register operand expected, but got scalar
can't redefine type for operand
only D registers may be indexed
can't change index for operand
constant expression required
only one type should be specified for operand
vector type expected
scalar must have an index
scalar index out of range
can't use Neon quad register here
expected <Rm> or <Dm> or <Qm> operand
parse error
expected comma
:lower16:
:upper16:
constant expression expected
invalid FPA immediate expression
unrecognized CPS flag
missing CPS flags
valid endian specifiers are be or le
missing rotation field after comma
rotation can only be 0, 8, 16, or 24
SPSR
CPSR
flag for {c}psr instruction expected
condition required
'[' expected
',' expected
invalid shift
']' expected
bad range in register list
Warning: duplicated register (r%d) in register list
Warning: register range not in ascending order
missing `}'
invalid register mask
expression too complex
expecting {
register out of range in list
invalid register list
register list not in ascending order
register range not in ascending order
non-contiguous register range
register stride must be 1 or 2
mismatched element/structure types in list
don't use Rn-Rm syntax with non-unit stride
error parsing element/structure list
expected }
alignment must be constant
unknown group relocation
this group relocation is not allowed on this instruction
'}' expected at end of 'option' field
cannot combine index with option
cannot combine pre- and post-indexing
pc_g0_nc
pc_g0
pc_g1_nc
pc_g1
pc_g2
sb_g0_nc
sb_g0
sb_g1_nc
sb_g1
sb_g2
invalid rotation
shift expression expected
'LSL' or 'ASR' required
'LSL' required
'ASR' required
%s -- `%s'
trap
ands
eors
subs
adds
adcs
sbcs
orrs
bics
tsts
tstp
cmps
cmpp
cmns
cmnp
movs
mvns
ldrb
strb
stmia
stmea
ldmia
ldmfd
adrl
lsls
lsrs
asrs
rors
negs
push
rsbs
rrxs
teqs
teqp
ldrt
ldrbt
strt
strbt
stmdb
stmfd
ldmdb
ldmea
rscs
stmib
stmfa
stmda
stmed
ldmib
ldmed
ldmda
ldmfa
muls
mlas
ldcl
stcl
swpb
smull
smulls
smulleqs
smullnes
smullcss
smullhss
smullccs
smulluls
smulllos
smullmis
smullpls
smullvss
smullvcs
smullhis
smulllss
smullges
smulllts
smullgts
smullles
smullals
umull
umulls
umulleqs
umullnes
umullcss
umullhss
umullccs
umulluls
umulllos
umullmis
umullpls
umullvss
umullvcs
umullhis
umulllss
umullges
umulllts
umullgts
umullles
umullals
smlal
smlals
smlaleqs
smlalnes
smlalcss
smlalhss
smlalccs
smlaluls
smlallos
smlalmis
smlalpls
smlalvss
smlalvcs
smlalhis
smlallss
smlalges
smlallts
smlalgts
smlalles
smlalals
umlal
umlals
umlaleqs
umlalnes
umlalcss
umlalhss
umlalccs
umlaluls
umlallos
umlalmis
umlalpls
umlalvss
umlalvcs
umlalhis
umlallss
umlalges
umlallts
umlalgts
umlalles
umlalals
ldrh
strh
ldrsh
ldrsb
ldsh
ldeqsh
ldnesh
ldcssh
ldhssh
ldccsh
ldulsh
ldlosh
ldmish
ldplsh
ldvssh
ldvcsh
ldhish
ldlssh
ldgesh
ldltsh
ldgtsh
ldlesh
ldalsh
ldsb
ldeqsb
ldnesb
ldcssb
ldhssb
ldccsb
ldulsb
ldlosb
ldmisb
ldplsb
ldvssb
ldvcsb
ldhisb
ldlssb
ldgesb
ldltsb
ldgtsb
ldlesb
ldalsb
bkpt
ldc2
ldc2l
stc2
stc2l
cdp2
mcr2
mrc2
smlabb
smlatb
smlabt
smlatt
smlawb
smlawt
smlalbb
smlaltb
smlalbt
smlaltt
smulbb
smultb
smulbt
smultt
smulwb
smulwt
qadd
qdadd
qsub
qdsub
ldrd
strd
mcrr
mrrc
cpsie
cpsid
rev16
revsh
sxth
uxth
sxtb
uxtb
setend
ldrex
strex
mcrr2
mrrc2
ssat
usat
pkhbt
pkhtb
qadd16
qadd8
qaddsubx
qsub16
qsub8
qsubaddx
sadd16
sadd8
saddsubx
shadd16
shadd8
shaddsubx
shsub16
shsub8
shsubaddx
ssub16
ssub8
ssubaddx
uadd16
uadd8
uaddsubx
uhadd16
uhadd8
uhaddsubx
uhsub16
uhsub8
uhsubaddx
uqadd16
uqadd8
uqaddsubx
uqsub16
uqsub8
uqsubaddx
usub16
usub8
usubaddx
rfeia
rfeib
rfeda
rfedb
rfefd
rfefa
rfeea
rfeed
sxtah
sxtab16
sxtab
sxtb16
uxtah
uxtab16
uxtab
uxtb16
smlad
smladx
smlald
smlaldx
smlsd
smlsdx
smlsld
smlsldx
smmla
smmlar
smmls
smmlsr
smmul
smmulr
smuad
smuadx
smusd
smusdx
srsia
srsib
srsda
srsdb
ssat16
umaal
usad8
usada8
usat16
yield
ldrexd
strexd
ldrexb
ldrexh
strexb
strexh
clrex
sbfx
ubfx
movw
movt
rbit
ldrht
ldrsht
ldrsbt
strht
cbnz
ittt
itet
itte
itee
itttt
itett
ittet
iteet
ittte
itete
ittee
iteee
addw
subw
orns
sdiv
udiv
pldw
ldfs
ldfd
ldfe
ldfp
stfs
stfd
stfe
stfp
mvfs
mvfsp
mvfsm
mvfsz
mvfd
mvfdp
mvfdm
mvfdz
mvfe
mvfep
mvfem
mvfez
mnfs
mnfsp
mnfsm
mnfsz
mnfd
mnfdp
mnfdm
mnfdz
mnfe
mnfep
mnfem
mnfez
abss
abssp
abssm
abssz
absd
absdp
absdm
absdz
abse
absep
absem
absez
rnds
rndsp
rndsm
rndsz
rndd
rnddp
rnddm
rnddz
rnde
rndep
rndem
rndez
sqts
sqtsp
sqtsm
sqtsz
sqtd
sqtdp
sqtdm
sqtdz
sqte
sqtep
sqtem
sqtez
logs
logsp
logsm
logsz
logd
logdp
logdm
logdz
loge
logep
logem
logez
lgns
lgnsp
lgnsm
lgnsz
lgnd
lgndp
lgndm
lgndz
lgne
lgnep
lgnem
lgnez
exps
expsp
expsm
expsz
expd
expdp
expdm
expdz
expe
expep
expem
sins
sinsp
sinsm
sinsz
sind
sindp
sindm
sindz
sine
sinep
sinem
sinez
coss
cossp
cossm
cossz
cosd
cosdp
cosdm
cosdz
cose
cosep
cosem
cosez
tans
tansp
tansm
tansz
tand
tandp
tandm
tandz
tane
tanep
tanem
tanez
asns
asnsp
asnsm
asnsz
asnd
asndp
asndm
asndz
asne
asnep
asnem
asnez
acss
acssp
acssm
acssz
acsd
acsdp
acsdm
acsdz
acse
acsep
acsem
acsez
atns
atnsp
atnsm
atnsz
atnd
atndp
atndm
atndz
atne
atnep
atnem
atnez
urds
urdsp
urdsm
urdsz
urdd
urddp
urddm
urddz
urde
urdep
urdem
urdez
nrms
nrmsp
nrmsm
nrmsz
nrmd
nrmdp
nrmdm
nrmdz
nrme
nrmep
nrmem
nrmez
adfs
adfsp
adfsm
adfsz
adfd
adfdp
adfdm
adfdz
adfe
adfep
adfem
adfez
sufs
sufsp
sufsm
sufsz
sufd
sufdp
sufdm
sufdz
sufe
sufep
sufem
sufez
rsfs
rsfsp
rsfsm
rsfsz
rsfd
rsfdp
rsfdm
rsfdz
rsfe
rsfep
rsfem
rsfez
mufs
mufsp
mufsm
mufsz
mufd
mufdp
mufdm
mufdz
mufe
mufep
mufem
mufez
dvfs
dvfsp
dvfsm
dvfsz
dvfd
dvfdp
dvfdm
dvfdz
dvfe
dvfep
dvfem
dvfez
rdfs
rdfsp
rdfsm
rdfsz
rdfd
rdfdp
rdfdm
rdfdz
rdfe
rdfep
rdfem
rdfez
pows
powsp
powsm
powsz
powd
powdp
powdm
powdz
powe
powep
powem
powez
rpws
rpwsp
rpwsm
rpwsz
rpwd
rpwdp
rpwdm
rpwdz
rpwe
rpwep
rpwem
rpwez
rmfs
rmfsp
rmfsm
rmfsz
rmfd
rmfdp
rmfdm
rmfdz
rmfe
rmfep
rmfem
rmfez
fmls
fmlsp
fmlsm
fmlsz
fmld
fmldp
fmldm
fmldz
fmle
fmlep
fmlem
fmlez
fdvs
fdvsp
fdvsm
fdvsz
fdvd
fdvdp
fdvdm
fdvdz
fdve
fdvep
fdvem
fdvez
frds
frdsp
frdsm
frdsz
frdd
frddp
frddm
frddz
frde
frdep
frdem
frdez
pols
polsp
polsm
polsz
pold
poldp
poldm
poldz
pole
polep
polem
polez
cmfe
cnfe
flts
fltsp
fltsm
fltsz
fltd
fltdp
fltdm
fltdz
flte
fltep
fltem
fltez
fixp
fixm
fixz
fixsp
fixsm
fixsz
fixdp
fixdm
fixdz
fixep
fixem
fixez
lfmfd
lfmea
sfmfd
sfmea
fcpys
fmrs
fmsr
fmstat
fsitos
fuitos
ftosis
ftosizs
ftouis
ftouizs
fmrx
vmrs
fmxr
vmsr
flds
fsts
fldmias
fldmfds
fldmdbs
fldmeas
fldmiax
fldmfdx
fldmdbx
fldmeax
fstmias
fstmeas
fstmdbs
fstmfds
fstmiax
fstmeax
fstmdbx
fstmfdx
fabss
fnegs
fsqrts
fadds
fsubs
fmuls
fdivs
fmacs
ffmacs
fmscs
fnmuls
fnmacs
fnfmacs
fnmscs
ffnmas
ffnmss
fcmps
fcmpzs
fcmpes
fcmpezs
fcpyd
fcvtds
fcvtsd
fmdhr
fmdlr
fmrdh
fmrdl
fsitod
fuitod
ftosid
ftosizd
ftouid
ftouizd
fcvtshp
fcvthps
fcvttshp
fcvtbshp
fcvtthps
fcvtbhps
fldd
fstd
fldmiad
fldmfdd
fldmdbd
fldmead
fstmiad
fstmead
fstmdbd
fstmfdd
fabsd
fnegd
fsqrtd
faddd
fsubd
fmuld
fdivd
fmacd
ffmacd
fmscd
fnmuld
fnmacd
fnfmacd
fnmscd
ffnmad
ffnmsd
fcmpd
fcmpzd
fcmped
fcmpezd
fmsrr
fmrrs
fmdrr
fmrrd
vsqrt
vdiv
vnmul
vnmla
vnmls
vcmp
vcmpe
vpush
vpop
vcvtr
vfnma
vfnms
vfma
vfms
vmul
vmla
vmls
vadd
vsub
vabs
vneg
vldm
vldmia
vldmdb
vstm
vstmia
vstmdb
vldr
vstr
vcvt
vcvtt
vcvtb
vmov
vmovq
vaba
vabaq
vhadd
vhaddq
vrhadd
vrhaddq
vhsub
vhsubq
vqadd
vqaddq
vqsub
vqsubq
vrshl
vrshlq
vqrshl
vqrshlq
vshl
vshlq
vqshl
vqshlq
vand
vandq
vbic
vbicq
vorr
vorrq
vorn
vornq
veor
veorq
vbsl
vbslq
vbit
vbitq
vbif
vbifq
vabd
vabdq
vmax
vmaxq
vmin
vminq
vcge
vcgeq
vcgt
vcgtq
vclt
vcltq
vcle
vcleq
vceq
vceqq
vpmax
vpmin
vmlaq
vmlsq
vpadd
vaddq
vsubq
vtst
vtstq
vmulq
vqdmulh
vqdmulhq
vqrdmulh
vqrdmulhq
vacge
vacgeq
vacgt
vacgtq
vaclt
vacltq
vacle
vacleq
vrecps
vrecpsq
vrsqrts
vrsqrtsq
vabsq
vnegq
vshr
vshrq
vrshr
vrshrq
vsra
vsraq
vrsra
vrsraq
vsli
vsliq
vsri
vsriq
vqshlu
vqshluq
vqshrn
vqrshrn
vqshrun
vqrshrun
vshrn
vrshrn
vshll
vcvtq
vmvn
vmvnq
vabal
vabdl
vaddl
vsubl
vmlal
vmlsl
vaddw
vsubw
vaddhn
vraddhn
vsubhn
vrsubhn
vqdmlal
vqdmlsl
vqdmull
vmull
vext
vextq
vrev64
vrev64q
vrev32
vrev32q
vrev16
vrev16q
vdup
vdupq
vmovl
vmovn
vqmovn
vqmovun
vzip
vzipq
vuzp
vuzpq
vqabs
vqabsq
vqneg
vqnegq
vpadal
vpadalq
vpaddl
vpaddlq
vrecpe
vrecpeq
vrsqrte
vrsqrteq
vcls
vclsq
vclz
vclzq
vcnt
vcntq
vswp
vswpq
vtrn
vtrnq
vtbl
vtbx
vld1
vst1
vld2
vst2
vld3
vst3
vld4
vst4
fconsts
fconstd
fshtos
fshtod
fsltos
fsltod
fuhtos
fuhtod
fultos
fultod
ftoshs
ftoshd
ftosls
ftosld
ftouhs
ftouhd
ftouls
ftould
miaph
miabb
miabt
miatb
miatt
tandcb
tandch
tandcw
tbcstb
tbcsth
tbcstw
textrcb
textrch
textrcw
textrmub
textrmuh
textrmuw
textrmsb
textrmsh
textrmsw
tinsrb
tinsrh
tinsrw
tmcr
tmcrr
tmia
tmiaph
tmiabb
tmiabt
tmiatb
tmiatt
tmovmskb
tmovmskh
tmovmskw
tmrc
tmrrc
torcb
torch
torcw
waccb
wacch
waccw
waddbss
waddb
waddbus
waddhss
waddh
waddhus
waddwss
waddw
waddwus
waligni
walignr0
walignr1
walignr2
walignr3
wand
wandn
wavg2b
wavg2br
wavg2h
wavg2hr
wcmpeqb
wcmpeqh
wcmpeqw
wcmpgtub
wcmpgtuh
wcmpgtuw
wcmpgtsb
wcmpgtsh
wcmpgtsw
wldrb
wldrh
wldrw
wldrd
wmacs
wmacsz
wmacu
wmacuz
wmadds
wmaddu
wmaxsb
wmaxsh
wmaxsw
wmaxub
wmaxuh
wmaxuw
wminsb
wminsh
wminsw
wminub
wminuh
wminuw
wmov
wmulsm
wmulsl
wmulum
wmulul
wpackhss
wpackhus
wpackwss
wpackwus
wpackdss
wpackdus
wrorh
wrorhg
wrorw
wrorwg
wrord
wrordg
wsadb
wsadbz
wsadh
wsadhz
wshufh
wsllh
wsllhg
wsllw
wsllwg
wslld
wslldg
wsrah
wsrahg
wsraw
wsrawg
wsrad
wsradg
wsrlh
wsrlhg
wsrlw
wsrlwg
wsrld
wsrldg
wstrb
wstrh
wstrw
wstrd
wsubbss
wsubb
wsubbus
wsubhss
wsubh
wsubhus
wsubwss
wsubw
wsubwus
wunpckehub
wunpckehuh
wunpckehuw
wunpckehsb
wunpckehsh
wunpckehsw
wunpckihb
wunpckihh
wunpckihw
wunpckelub
wunpckeluh
wunpckeluw
wunpckelsb
wunpckelsh
wunpckelsw
wunpckilb
wunpckilh
wunpckilw
wxor
wzero
torvscb
torvsch
torvscw
wabsb
wabsh
wabsw
wabsdiffb
wabsdiffh
wabsdiffw
waddbhusl
waddbhusm
waddhc
waddwc
waddsubhx
wavg4
wavg4r
wmaddsn
wmaddsx
wmaddun
wmaddux
wmerge
wmiabb
wmiabt
wmiatb
wmiatt
wmiabbn
wmiabtn
wmiatbn
wmiattn
wmiawbb
wmiawbt
wmiawtb
wmiawtt
wmiawbbn
wmiawbtn
wmiawtbn
wmiawttn
wmulsmr
wmulumr
wmulwumr
wmulwsmr
wmulwum
wmulwsm
wmulwl
wqmiabb
wqmiabt
wqmiatb
wqmiatt
wqmiabbn
wqmiabtn
wqmiatbn
wqmiattn
wqmulm
wqmulmr
wqmulwm
wqmulwmr
wsubaddhx
cfldrs
cfldrd
cfldr32
cfldr64
cfstrs
cfstrd
cfstr32
cfstr64
cfmvsr
cfmvrs
cfmvdlr
cfmvrdl
cfmvdhr
cfmvrdh
cfmv64lr
cfmvr64l
cfmv64hr
cfmvr64h
cfmval32
cfmv32al
cfmvam32
cfmv32am
cfmvah32
cfmv32ah
cfmva32
cfmv32a
cfmva64
cfmv64a
cfmvsc32
cfmv32sc
cfcpys
cfcpyd
cfcvtsd
cfcvtds
cfcvt32s
cfcvt32d
cfcvt64s
cfcvt64d
cfcvts32
cfcvtd32
cftruncs32
cftruncd32
cfrshl32
cfrshl64
cfsh32
cfsh64
cfcmps
cfcmpd
cfcmp32
cfcmp64
cfabss
cfabsd
cfnegs
cfnegd
cfadds
cfaddd
cfsubs
cfsubd
cfmuls
cfmuld
cfabs32
cfabs64
cfneg32
cfneg64
cfadd32
cfadd64
cfsub32
cfsub64
cfmul32
cfmul64
cfmac32
cfmsc32
cfmadd32
cfmsub32
cfmadda32
cfmsuba32
shift must be constant
instruction not supported in Thumb16 mode
unshifted register required
lo register required
dest must overlap one source register
shift by register not allowed in thumb mode
only SUBS PC, LR, #const allowed
dest and source1 must be the same register
only lo regs allowed with immediate
invalid pseudo operation
literal pool insertion failed
instruction does not accept preindexed addressing
instruction does not accept unindexed addressing
destination register same as write-back base
source register same as write-back base
Thumb does not support this addressing mode
byte or halfword not valid for base register
r15 based store not allowed
invalid base register for register offset
Instruction does not support =N addresses
cannot use register index with PC-relative addressing
cannot use register index with this instruction
Thumb does not support negative register indexing
Thumb does not support register post-indexing
Thumb does not support register indexing with writeback
Thumb supports only LSL in shifted register indexing
shift out of range
cannot use writeback with PC-relative addressing
cannot use writeback with this instruction
cannot use post-indexing with PC-relative addressing
cannot use post-indexing with this instruction
writeback of base register is UNPREDICTABLE
writeback of base register when in register list is UNPREDICTABLE
if writeback register is in list, it must be the lowest reg in the list
Thumb load/store multiple does not support {reglist}^
value stored for r%d is UNPREDICTABLE
Thumb-2 instruction only valid in unified syntax
this instruction will write back the base register
this instruction will not write back the base register
SP not allowed in register list
LR and PC should not both be in register list
base register should not be in register list when written back
PC not allowed in register list
the only suffix valid here is '(plt)'
Thumb does not support NOP with hints
source1 and dest must be same register
ror #imm not supported
push/pop do not support {reglist}^
invalid register list to push/pop instruction
this instruction requires a post-indexed address
Rd and Rm should be different in mul
rd and rm should be different in mla
instruction does not support unindexed addressing
pc may not be used with write-back
instruction does not support writeback
Rn must not overlap other operands
'CPSR' or 'SPSR' expected
operand 1 must be FPSCR
selected FPU does not support instruction
selected processor does not support requested special purpose register
selected processor does not support requested special purpose register %x
Thumb encoding does not support an immediate here
rdhi and rdlo must be different
rdhi, rdlo and rm must all be different
instruction does not accept scaled register index
use of r15 in bx in ARM mode is not really useful
use of r15 in blx in ARM mode is not really useful
'[' expected after PLD mnemonic
post-indexed expression used in preload instruction
writeback used in preload instruction
unindexed addressing used in preload instruction
first destination register must be even
can only load two consecutive registers
r14 not allowed here
base register written back, and overlaps second destination register
index register overlaps destination register
use of r15 in bxj is not really useful
instruction not allowed in IT block
selected processor does not support 'A' form of this instruction
Thumb does not support the 2-argument form of this instruction
Thumb encoding does not support rotation
instruction does not accept this addressing mode
offset must be zero in ARM encoding
registers may not be the same
SRS base register must be r13
even register required
r14 not allowed as first register when second register is omitted
can only store two consecutive registers
bit-field extends past end of register
:lower16: not allowed this instruction
:upper16: not allowed instruction
:upper16: not allowed this instruction
PC not allowed as destination
instruction requires register index
PC is not a valid index register
instruction does not allow shifted index
'[' expected after PLI mnemonic
bad barrier type
this instruction does not support indexing
D register out of range for selected VFP version
this addressing mode requires base-register writeback
only two consecutive VFP SP registers allowed here
invalid instruction shape
types specified in both the mnemonic and operands
operand types can't be inferred
type specifier has the wrong number of parts
operand size must match register width
bad type in Neon instruction
inconsistent types in Neon instruction
invalid instruction shape (using rounding mode)
scalar out of range for multiply instruction
writeback (!) must be used for VLDMDB and VSTMDB
register list must contain at least 1 and at most 16 registers
operands 0 and 1 must be the same register
bad type for scalar
immediate out of range
VFP registers must be adjacent
operand size must be specified for immediate VMOV
immediate has bits set outside the operand size
immediate out of range for shift
immediate out of range for insert
immediate out of range for narrowing operation
elements must be smaller than reversal region
bad list length for table lookup
post-index must be a register
bad register for post-index
bad alignment
bad list type for instruction
bad size for instruction
bad list length
can't use alignment with this instruction
unsupported alignment for instruction
stride of 2 unavailable when element size is 8
only r15 allowed here
immediate operand requires iWMMXt2
fsxc
fscx
fxsc
fxcs
fcsx
fcxs
sfxc
sfcx
sxfc
sxcf
scfx
scxf
xfsc
xfcs
xsfc
xscf
xcfs
xcsf
cfsx
cfxs
csfx
csxf
cxfs
cxsf
apsr
APSR
iapsr
IAPSR
eapsr
EAPSR
xpsr
XPSR
xPSR
ipsr
IPSR
epsr
EPSR
iepsr
IEPSR
primask
PRIMASK
basepri
BASEPRI
basepri_max
BASEPRI_MAX
faultmask
FAULTMASK
control
CONTROL
cr10
cr11
cr12
cr13
cr14
cr15
CR10
CR11
CR12
CR13
CR14
CR15
fpsid
fpscr
fpexc
FPSID
FPSCR
FPEXC
mvfr1
mvfr0
MVFR1
MVFR0
mvf0
mvf1
mvf2
mvf3
mvf4
mvf5
mvf6
mvf7
mvf8
mvf9
mvf10
mvf11
mvf12
mvf13
mvf14
mvf15
mvd0
mvd1
mvd2
mvd3
mvd4
mvd5
mvd6
mvd7
mvd8
mvd9
mvd10
mvd11
mvd12
mvd13
mvd14
mvd15
mvfx0
mvfx1
mvfx2
mvfx3
mvfx4
mvfx5
mvfx6
mvfx7
mvfx8
mvfx9
mvfx10
mvfx11
mvfx12
mvfx13
mvfx14
mvfx15
mvdx0
mvdx1
mvdx2
mvdx3
mvdx4
mvdx5
mvdx6
mvdx7
mvdx8
mvdx9
mvdx10
mvdx11
mvdx12
mvdx13
mvdx14
mvdx15
MVF0
MVF1
MVF2
MVF3
MVF4
MVF5
MVF6
MVF7
MVF8
MVF9
MVF10
MVF11
MVF12
MVF13
MVF14
MVF15
MVD0
MVD1
MVD2
MVD3
MVD4
MVD5
MVD6
MVD7
MVD8
MVD9
MVD10
MVD11
MVD12
MVD13
MVD14
MVD15
MVFX0
MVFX1
MVFX2
MVFX3
MVFX4
MVFX5
MVFX6
MVFX7
MVFX8
MVFX9
MVFX10
MVFX11
MVFX12
MVFX13
MVFX14
MVFX15
MVDX0
MVDX1
MVDX2
MVDX3
MVDX4
MVDX5
MVDX6
MVDX7
MVDX8
MVDX9
MVDX10
MVDX11
MVDX12
MVDX13
MVDX14
MVDX15
mvax0
mvax1
mvax2
mvax3
dspsc
MVAX0
MVAX1
MVAX2
MVAX3
DSPSC
wr10
wr11
wr12
wr13
wr14
wr15
wR10
wR11
wR12
wR13
wR14
wR15
WR10
WR11
WR12
WR13
WR14
WR15
wcid
wCID
WCID
wcon
wCon
WCON
wcssf
wCSSF
WCSSF
wcasf
wCASF
WCASF
wcgr0
wCGR0
WCGR0
wcgr1
wCGR1
WCGR1
wcgr2
wCGR2
WCGR2
wcgr3
wCGR3
WCGR3
acc0
ACC0
unst
ishst
nshst
oshst
a.out
RC_DEBUG_OPTIONS
--gstabs
--gdwarf2
-gdwarf-2
-mcpu
%s: Flag option -%c has already been seen!
force_cpusubtype_ALL
%s: I expected a filename after -o. "%s" assumed.
%s: -R option not supported (use the .const directive)
Apple Inc version %s, 
ersion
Unknown -v option ignored
I expected a filename after -I.
dynamic
static
NEXTSTEP-deployment-target
I expected '3.2' or '3.3' after -NEXTSTEP-deployment-target.
I expected a <release_tag> after -NEXTSTEP-deployment-target.
arch_multiple
arch
can't specify more than one -arch flag 
armv4t
armv5
xscale
armv6
armv6m
armv7
armv7f
armv7s
armv7k
armv7m
armv7em
I expected 'arm' after -arch for this assembler.
I expected an <arch_type> after -arch.
%s: I don't understand '%c' flag!
-g can't be specified if -n is specified
%s: this system assembler is deprecated. Please migrate to the clang integrated assembler (`as -q').
AS_SECURE_LOG_FILE
Interrupted by signal %d
with -n a section directive must be seen before assembly can begin
Can't extend frag %d. chars
Invalid width for fill expression.
Error converting number to floating point (Exponent overflow?)
cannot create floating-point number
"%d" (instance number %d of a %s label)
symbol %s already has an index
label definition in inlineasm
Symbol "%s" is already defined as "%s"/%d.%d.%u.
Symbol %s already defined.
Inserting "%s" into symbol table failed: %s
input can't have .file dwarf directives when -g is used to generate dwarf debug info for assembly code
file number less than one
file number %ld already allocated
unassigned file number %ld
basic_block
prologue_end
epilogue_begin
is_stmt
is_stmt value not 0 or 1
unknown .loc sub-directive `%s'
expected 0 or 1
Internal error dwarf2dbg_estimate_size_before_relax() called with frag without symbol or expression
Internal error dwarf2dbg_estimate_size_before_relax() called with frag symbol with bad expression
Internal error dwarf2dbg_convert_frag() called with frag without symbol or expression
Internal error dwarf2dbg_convert_frag() called with frag symbol with bad expression
__DWARF
__debug_info
__debug_line
__debug_abbrev
__debug_aranges
__debug_ranges
internal error, p != end at the end of emit_inc_line_addr()
internal error, emit_expr() called with unexpected expression type
internal error, did not find frag in section in get_frag_fix()
%s %s, %s
Apple Inc version
absolute
section
difference
unknown
absent
bignum/flonum
Subtracting symbol "%s"(segment"%s") is too hard. Absolute segment assumed.
Missing operand value assumed absolute 0.
Left operand of %c is a %s integer 0 assumed
bignum
float
Right operand of %c is a %s integer 0 assumed
Can't relocate expression. Absolute 0 assumed.
Expression too complex: forgetting %s - %s
Relocation error. Absolute 0 assumed
Division by 0. 0 assumed.
/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot11/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/cctools/cctools-1009.2/as/expr.c
0123456789abcdefABCDEF
Backw. ref to unknown label "%lld",0 assumed.
Bad floating-point constant: exponent overflow
Bad floating-point constant: unknown error code=%d.
Missing ')' assumed
Unary operator %c ignored because bad operand follows
Expression too complex, 2 symbols forgotten: "%s" "%s"
{standard input}
Partial line at end of file ignored
%s:unknown:
as:file(%s) %s! 
Unknown error #%d.
include file name too long: "%s%s"
Couldn't find the include file: "%s"
int:t1=r1;-2147483648;2147483647;
char:t2=r2;0;127;
void:t3=3
file contains unmatched .ifs or .elses
file contains unmatched .macro and .endmacro for: %s
Expected comma after name "%s"
Repeat < 0, .space ignored
Rest of line ignored. 1st junk character valued %d (%c).
%s number illegal. Absolute 0 assumed.
Bignum
Floating-Point
No expression:  Using absolute 0
Complex expression. Absolute segment assumed.
/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot11/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/cctools/cctools-1009.2/as/read.c
0 assumed for missing expression
Value 0x%llx truncated to 0x%llx.
Bad floating literal: %s
Expected "-ed string
Symbols "%s" "%s" are undefined: absolute 0 assumed.
Symbol "%s" undefined: absolute 0 assumed.
Bad Absolute Expression, absolute 0 assumed.
This string may not contain '\0'
Can't define a macro inside another macro definition
Missing name of macro
Pseudo-op name: %s can't be a macro name
This .endmacro does not match with a preceding .macro
The macro named "%s" is already defined
error constructing pseudo-op table (%s)
align
align32
p2align
p2alignw
p2alignl
balign
balignw
balignl
private_extern
indirect_symbol
abort
ascii
asciz
byte
comm
desc
double
appfile
fill
globl
lcomm
line
long
quad
lsym
zerofill
tbss
secure_log_unique
secure_log_reset
short
single
space
sleb128
uleb128
stabd
stabn
stabs
debug_note
reference
lazy_reference
weak_reference
weak_definition
weak_def_can_be_hidden
no_dead_strip
symbol_resolver
include
macro
endmacro
endm
macros_on
macros_off
elseif
else
endif
dump
load
subsections_via_symbols
machine
inlineasmstart
inlineasmend
incbin
data_region
end_data_region
Internal error, s_align() called with bad fill_size %d
alignment not a power of 2
Alignment too large: %d. assumed.
Alignment negative. 0 assumed.
Illegal expression. current section assumed.
incompatible feature used: .indirect_symbol (must specify "-dynamic" to be used)
indirect symbol not in a symbol pointer or stub section, .indirect_symbol ignored
.abort %s detected.  Assembly stopping.
Expected comma after symbol-name
.COMMon length (%u.) <0! Ignored.
Ignoring attempt to re-define symbol
Length of .comm "%s" is already %u. Not changed to %u.
Expect comma after rep-size in .fill
Expected comma after size in .fill
.fill size clamped to %d.
Size negative: .fill ignored.
.fill size must be 0,1,2,4 or 8, .fill ignored
.fill repeat <= 0, .fill ignored
Expected comma after name
BSS length (%u.) <0! Ignored.
__DATA
__bss
Ignoring attempt to re-define symbol.
Bad expression: %s
Expected comma after segment-name
Expected section-name after comma
segment-name: %s too long (maximum %ld characters)
section-name: %s too long (maximum %ld characters)
unknown section type: %s
unknown section attribute: %s
size of stub section: %s not a proper number
missing size of stub section (%s,%s)
incompatible feature used: section type %s (must specify "-dynamic" to be used)
regular
cstring_literals
4byte_literals
8byte_literals
16byte_literals
literal_pointers
non_lazy_symbol_pointers
lazy_symbol_pointers
symbol_stubs
mod_init_funcs
mod_term_funcs
coalesced
interposing
thread_local_regular
thread_local_variables
thread_local_init_function_pointers
none
pure_instructions
no_toc
strip_static_syms
live_support
self_modifying_code
debug
__thread_bss
%s size (%lld.) <0! Ignored.
.secure_log_unique specified multiple times
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
%s:%d:%s
couldn't write to secure log file: "%s"
zero assumed for missing expression
floating point number invalid
I need a comma after symbol's name
I want a comma after the n_type expression
I want a comma after the n_other expression
I want a comma after the n_desc expression
incompatible feature used: .lazy_reference (must specify "-dynamic" to be used)
incompatible feature used: .weak_reference (must specify "-dynamic" to be used)
You can't nest if's more than %d levels deep
Encountered a .elseif that doesn't follow a .if or an .elseif
Encountered a .else that doesn't follow a .if or an .elseif
Encountered a .endif that doesn't follow a .if or .else
couldn't write to dump file: "%s"
a macro named "%s" encountered in a .load is already defined
Couldn't find the dump file: "%s"
unknown .machine argument: %s
invalid .machine argument: %s
.machine argument: %s can not be combined with previous .machine directives, -arch arguments or machine specific instructions
Couldn't find the .incbin file: "%s"
text
__TEXT
__text
const
__const
static_const
__static_const
cstring
__cstring
literal4
__literal4
literal8
__literal8
literal16
__literal16
constructor
__constructor
destructor
__destructor
fvmlib_init0
__fvmlib_init0
fvmlib_init1
__fvmlib_init1
symbol_stub
__symbol_stub
picsymbol_stub
__picsymbol_stub
non_lazy_symbol_pointer
__nl_symbol_ptr
lazy_symbol_pointer
__la_symbol_ptr
mod_init_func
__mod_init_func
mod_term_func
__mod_term_func
dyld
__dyld
data
__data
static_data
__static_data
const_data
tdata
__thread_data
__thread_vars
thread_init_func
__thread_init
objc_class
__OBJC
__class
objc_meta_class
__meta_class
objc_string_object
__string_object
objc_protocol
__protocol
objc_cat_cls_meth
__cat_cls_meth
objc_cat_inst_meth
__cat_inst_meth
objc_cls_meth
__cls_meth
objc_inst_meth
__inst_meth
objc_message_refs
__message_refs
objc_cls_refs
__cls_refs
objc_class_names
objc_module_info
__module_info
objc_symbols
__symbols
objc_category
__category
objc_meth_var_types
objc_class_vars
__class_vars
objc_instance_vars
__instance_vars
objc_meth_var_names
objc_selector_strs
__selector_strs
Unknown pseudo-op: %s
Junk character %d (%c).
You can't nest macros more than %d levels deep
mismatched parenthesis
More than 10 arguments not allowed for macros
#NO_APP
incompatible feature used: directive .%s (must specify "-dynamic" to be used)
Bad escaped character in string, '?' assumed
Expected address expression: absolute 0 assumed
Missing string
can't vm_allocate() buffer for output file of size %u
undefined symbol `%s' in operation setting `%s'
invalid sections for operation on `%s' and `%s' setting `%s'
can't create output file: %s
can't write output file
can't close output file
missing indirect symbols for section (%s,%s)
Undefined local symbol %c (%cf or %cb)
Undefined local symbol %s
Non-global symbol: %s can't be a weak_definition
Undefined symbol: %s can't be a weak_definition
Bad fx_size (0x%x) in fix_to_relocation_info()
Internal error: incorrect fx_r_type (%u) for fx_subsy != 0 in fix_to_relocation_info()
Section too large, can't encode r_address (0x%x) into 24-bits of scattered relocation entry
section type does not match previous section type
section stub size does not match previous section stub size
too many sections (maximum %d)
Can't open source file for input
O_APP
Can't close source file -- continuing
cputype 1234567890 cpusubtype 1234567890
cputype %u cpusubtype %u
little
ppc64
x86_64
x86_64h
arm64
ppc970-64
arm64_32
arm64e
i386
m68k
hppa
sparc
m88k
i860
ppc601
ppc603
ppc603e
ppc603ev
ppc604
ppc604e
ppc750
ppc7400
ppc7450
ppc970
i486
i486SX
pentium
i586
pentpro
i686
pentIIm3
pentIIm5
pentium4
m68030
m68040
hppa7100LC
veo1
veo2
veo3
veo4
arm64v8
fatal error: %s: 
 (%s)
 (%s)
virtual memory exhausted (malloc failed)
virtual memory exhausted (realloc failed)
<dict>
  <key>tool</key>
  <string>%s</string>
  <key>args</key>
  <key>diagnostics</key>
  <array>
    <dict>
      <key>level</key>
      <string>%s</string>
      <key>message</key>
    </dict>
  </array>
</dict>
error: cannot open file at %s: %s
warning
error
fatal error
dDfF
@A@A
@@@@
 @C@C
C@B@B
afds
9#J{
_ZX`]OSO
R`i;
.eNQ
Y>VPr^2>#
!ewL
~rEl{
=.3-
RD7e
RASQ
[Am-
cctools-1009.2
GNU assembler version 1.38
************************************************
*******
**************************
*********************************************************************************************************************************************************E 
exists
%s:%u:
FATAL:
as: for architecture arm
virtual memory exceeded
$._ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
; .file 
End of file in string: inserted '"'
Unknown escape '\%c' in string: Ignored
End of file in string: '"' inserted
End of file in '/' '*' string: */ inserted
End-of-file after a ': \000 inserted
(%d)
EOF in comment:  Newline inserted
EOF in Comment: Newline inserted
.line 
End-of-File not at end of a line
rs_org invalid, dot past value by %d bytes
Case value %d unexpected at line %d of file "%s"
/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot11/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/cctools/cctools-1009.2/as/layout.c
Negative of non-absolute symbol %s
section difference divide by two expression, "%s" minus "%s" divide by 2 will not produce an assembly time constant
section difference relocatable subtraction expression, "%s" minus "%s" using a symbol at the end of section will not produce an assembly time constant
use a symbol with a constant value created with an assignment instead of the expression, L_const_sym = %s - %s
non-relocatable subtraction expression, "%s" minus "%s"
symbol: "%s" can't be undefined in a subtraction expression
Fixup of %lld too large for field width of %d
10.0
ARM register expected
bad or missing co-processor number
co-processor register expected
FPA register expected
VFP single precision register expected
VFP/Neon double precision register expected
Neon quad precision register expected
VFP single or double precision register expected
Neon double or quad precision register expected
VFP single, double or Neon quad precision register expected
VFP system register expected
Maverick MVF register expected
Maverick MVD register expected
Maverick MVFX register expected
Maverick MVDX register expected
Maverick MVAX register expected
Maverick DSPSC register expected
iWMMXt data register expected
iWMMXt control register expected
iWMMXt scalar register expected
XScale accumulator register expected
bad call to MD_ATOF()
unreq
thumb
code
force_thumb
thumb_func
thumb_set
even
syntax
word
2byte
4byte
8byte
file
loc_mark_labels
extend
ldouble
packed
bad instruction `%s'
s suffix on comparison instruction is deprecated
selected processor does not support `%s'
Thumb does not support conditional execution
incorrect condition in IT block
thumb conditional instruction not in IT block
cannot honor width suffix -- `%s'
width suffixes are invalid in ARM mode -- `%s'
attempt to use an ARM instruction on a Thumb-only processor -- `%s'
data:
/data
undefined symbol %s used as an immediate value
invalid constant (0x%x) after fixup
invalid literal constant: pool needs to be closer
bad immediate value for offset (%d)
bad immediate value for 8-bit offset (%d)
offset not a multiple of 4
offset out of range
shift expression is too large
invalid smc expression
invalid swi expression
invalid expression in load/store multiple
misaligned branch destination
branch out of range
conditional branch out of range
co-processor offset out of range
invalid offset, target not word aligned (0x%08x)
invalid offset, value too big (0x%08x)
Unable to process relocation for thumb opcode: %x
invalid Hi register with immediate
immediate value out of range
invalid immediate for stack address calculation
invalid immediate for address calculation (value = 0x%08x)
invalid immediate: %d is too large
invalid shift value: %d
bad offset 0x%08x (only 12 bits available for the magnitude)
bad offset 0x%08x (only 8 bits available for the magnitude)
bad offset 0x%08x (must be word-aligned)
bad offset 0x%08x (must be an 8-bit number of words)
bad relocation fixup type (%d)
unsupported relocation on symbol %s
virtual memory exhausted
invalid syntax for .req directive
invalid syntax for .dn directive
invalid syntax for .qn directive
invalid syntax for .unreq directive
unknown register alias '%s'
ignoring attempt to undefine built-in register '%s'
.bss directive not supported, use .zerofill for Mach-O files
selected processor does not support THUMB opcodes
selected processor does not support ARM opcodes
invalid instruction size selected (%d)
invalid operand to .code directive (%d) (expecting 16 or 32)
expected comma after name "%s"
unified
divided
unrecognized syntax mode "%s"
conditional infixes are deprecated in unified syntax
instruction cannot be conditional
unexpected character `%c' in type specifier
bad size %d in type specifier
 .req 
unknown register '%s' -- .req ignored
ignoring attempt to redefine built-in register '%s'
ignoring redefinition of register alias '%s'
 .dn 
 .qn 
bad type for register
expression must be constant
can't redefine the type of a register alias
you must specify a single type only
can't redefine the index of a scalar alias
scalar index must be constant
expecting ]
immediate expression requires a # prefix
bad expression
invalid constant
attempt to redefine typed alias
branch must be last instruction in IT block
%s%s
.real_start_of
instruction is always unconditional
immediate value is out of range
unrecognized relocation suffix
iWMMXt data or control register expected
APSR_
unhandled operand code %d
r15 not allowed here
bad arguments to instruction
syntax error
garbage following instruction
register operand expected, but got scalar
can't redefine type for operand
only D registers may be indexed
can't change index for operand
constant expression required
only one type should be specified for operand
vector type expected
scalar must have an index
scalar index out of range
can't use Neon quad register here
expected <Rm> or <Dm> or <Qm> operand
parse error
expected comma
:lower16:
:upper16:
constant expression expected
invalid FPA immediate expression
unrecognized CPS flag
missing CPS flags
valid endian specifiers are be or le
missing rotation field after comma
rotation can only be 0, 8, 16, or 24
SPSR
CPSR
flag for {c}psr instruction expected
condition required
'[' expected
',' expected
invalid shift
']' expected
bad range in register list
Warning: duplicated register (r%d) in register list
Warning: register range not in ascending order
missing `}'
invalid register mask
expression too complex
expecting {
register out of range in list
invalid register list
register list not in ascending order
register range not in ascending order
non-contiguous register range
register stride must be 1 or 2
mismatched element/structure types in list
don't use Rn-Rm syntax with non-unit stride
error parsing element/structure list
expected }
alignment must be constant
unknown group relocation
this group relocation is not allowed on this instruction
'}' expected at end of 'option' field
cannot combine index with option
cannot combine pre- and post-indexing
pc_g0_nc
pc_g0
pc_g1_nc
pc_g1
pc_g2
sb_g0_nc
sb_g0
sb_g1_nc
sb_g1
sb_g2
invalid rotation
shift expression expected
'LSL' or 'ASR' required
'LSL' required
'ASR' required
%s -- `%s'
trap
ands
eors
subs
adds
adcs
sbcs
orrs
bics
tsts
tstp
cmps
cmpp
cmns
cmnp
movs
mvns
ldrb
strb
stmia
stmea
ldmia
ldmfd
adrl
lsls
lsrs
asrs
rors
negs
push
rsbs
rrxs
teqs
teqp
ldrt
ldrbt
strt
strbt
stmdb
stmfd
ldmdb
ldmea
rscs
stmib
stmfa
stmda
stmed
ldmib
ldmed
ldmda
ldmfa
muls
mlas
ldcl
stcl
swpb
smull
smulls
smulleqs
smullnes
smullcss
smullhss
smullccs
smulluls
smulllos
smullmis
smullpls
smullvss
smullvcs
smullhis
smulllss
smullges
smulllts
smullgts
smullles
smullals
umull
umulls
umulleqs
umullnes
umullcss
umullhss
umullccs
umulluls
umulllos
umullmis
umullpls
umullvss
umullvcs
umullhis
umulllss
umullges
umulllts
umullgts
umullles
umullals
smlal
smlals
smlaleqs
smlalnes
smlalcss
smlalhss
smlalccs
smlaluls
smlallos
smlalmis
smlalpls
smlalvss
smlalvcs
smlalhis
smlallss
smlalges
smlallts
smlalgts
smlalles
smlalals
umlal
umlals
umlaleqs
umlalnes
umlalcss
umlalhss
umlalccs
umlaluls
umlallos
umlalmis
umlalpls
umlalvss
umlalvcs
umlalhis
umlallss
umlalges
umlallts
umlalgts
umlalles
umlalals
ldrh
strh
ldrsh
ldrsb
ldsh
ldeqsh
ldnesh
ldcssh
ldhssh
ldccsh
ldulsh
ldlosh
ldmish
ldplsh
ldvssh
ldvcsh
ldhish
ldlssh
ldgesh
ldltsh
ldgtsh
ldlesh
ldalsh
ldsb
ldeqsb
ldnesb
ldcssb
ldhssb
ldccsb
ldulsb
ldlosb
ldmisb
ldplsb
ldvssb
ldvcsb
ldhisb
ldlssb
ldgesb
ldltsb
ldgtsb
ldlesb
ldalsb
bkpt
ldc2
ldc2l
stc2
stc2l
cdp2
mcr2
mrc2
smlabb
smlatb
smlabt
smlatt
smlawb
smlawt
smlalbb
smlaltb
smlalbt
smlaltt
smulbb
smultb
smulbt
smultt
smulwb
smulwt
qadd
qdadd
qsub
qdsub
ldrd
strd
mcrr
mrrc
cpsie
cpsid
rev16
revsh
sxth
uxth
sxtb
uxtb
setend
ldrex
strex
mcrr2
mrrc2
ssat
usat
pkhbt
pkhtb
qadd16
qadd8
qaddsubx
qsub16
qsub8
qsubaddx
sadd16
sadd8
saddsubx
shadd16
shadd8
shaddsubx
shsub16
shsub8
shsubaddx
ssub16
ssub8
ssubaddx
uadd16
uadd8
uaddsubx
uhadd16
uhadd8
uhaddsubx
uhsub16
uhsub8
uhsubaddx
uqadd16
uqadd8
uqaddsubx
uqsub16
uqsub8
uqsubaddx
usub16
usub8
usubaddx
rfeia
rfeib
rfeda
rfedb
rfefd
rfefa
rfeea
rfeed
sxtah
sxtab16
sxtab
sxtb16
uxtah
uxtab16
uxtab
uxtb16
smlad
smladx
smlald
smlaldx
smlsd
smlsdx
smlsld
smlsldx
smmla
smmlar
smmls
smmlsr
smmul
smmulr
smuad
smuadx
smusd
smusdx
srsia
srsib
srsda
srsdb
ssat16
umaal
usad8
usada8
usat16
yield
ldrexd
strexd
ldrexb
ldrexh
strexb
strexh
clrex
sbfx
ubfx
movw
movt
rbit
ldrht
ldrsht
ldrsbt
strht
cbnz
ittt
itet
itte
itee
itttt
itett
ittet
iteet
ittte
itete
ittee
iteee
addw
subw
orns
sdiv
udiv
pldw
ldfs
ldfd
ldfe
ldfp
stfs
stfd
stfe
stfp
mvfs
mvfsp
mvfsm
mvfsz
mvfd
mvfdp
mvfdm
mvfdz
mvfe
mvfep
mvfem
mvfez
mnfs
mnfsp
mnfsm
mnfsz
mnfd
mnfdp
mnfdm
mnfdz
mnfe
mnfep
mnfem
mnfez
abss
abssp
abssm
abssz
absd
absdp
absdm
absdz
abse
absep
absem
absez
rnds
rndsp
rndsm
rndsz
rndd
rnddp
rnddm
rnddz
rnde
rndep
rndem
rndez
sqts
sqtsp
sqtsm
sqtsz
sqtd
sqtdp
sqtdm
sqtdz
sqte
sqtep
sqtem
sqtez
logs
logsp
logsm
logsz
logd
logdp
logdm
logdz
loge
logep
logem
logez
lgns
lgnsp
lgnsm
lgnsz
lgnd
lgndp
lgndm
lgndz
lgne
lgnep
lgnem
lgnez
exps
expsp
expsm
expsz
expd
expdp
expdm
expdz
expe
expep
expem
sins
sinsp
sinsm
sinsz
sind
sindp
sindm
sindz
sine
sinep
sinem
sinez
coss
cossp
cossm
cossz
cosd
cosdp
cosdm
cosdz
cose
cosep
cosem
cosez
tans
tansp
tansm
tansz
tand
tandp
tandm
tandz
tane
tanep
tanem
tanez
asns
asnsp
asnsm
asnsz
asnd
asndp
asndm
asndz
asne
asnep
asnem
asnez
acss
acssp
acssm
acssz
acsd
acsdp
acsdm
acsdz
acse
acsep
acsem
acsez
atns
atnsp
atnsm
atnsz
atnd
atndp
atndm
atndz
atne
atnep
atnem
atnez
urds
urdsp
urdsm
urdsz
urdd
urddp
urddm
urddz
urde
urdep
urdem
urdez
nrms
nrmsp
nrmsm
nrmsz
nrmd
nrmdp
nrmdm
nrmdz
nrme
nrmep
nrmem
nrmez
adfs
adfsp
adfsm
adfsz
adfd
adfdp
adfdm
adfdz
adfe
adfep
adfem
adfez
sufs
sufsp
sufsm
sufsz
sufd
sufdp
sufdm
sufdz
sufe
sufep
sufem
sufez
rsfs
rsfsp
rsfsm
rsfsz
rsfd
rsfdp
rsfdm
rsfdz
rsfe
rsfep
rsfem
rsfez
mufs
mufsp
mufsm
mufsz
mufd
mufdp
mufdm
mufdz
mufe
mufep
mufem
mufez
dvfs
dvfsp
dvfsm
dvfsz
dvfd
dvfdp
dvfdm
dvfdz
dvfe
dvfep
dvfem
dvfez
rdfs
rdfsp
rdfsm
rdfsz
rdfd
rdfdp
rdfdm
rdfdz
rdfe
rdfep
rdfem
rdfez
pows
powsp
powsm
powsz
powd
powdp
powdm
powdz
powe
powep
powem
powez
rpws
rpwsp
rpwsm
rpwsz
rpwd
rpwdp
rpwdm
rpwdz
rpwe
rpwep
rpwem
rpwez
rmfs
rmfsp
rmfsm
rmfsz
rmfd
rmfdp
rmfdm
rmfdz
rmfe
rmfep
rmfem
rmfez
fmls
fmlsp
fmlsm
fmlsz
fmld
fmldp
fmldm
fmldz
fmle
fmlep
fmlem
fmlez
fdvs
fdvsp
fdvsm
fdvsz
fdvd
fdvdp
fdvdm
fdvdz
fdve
fdvep
fdvem
fdvez
frds
frdsp
frdsm
frdsz
frdd
frddp
frddm
frddz
frde
frdep
frdem
frdez
pols
polsp
polsm
polsz
pold
poldp
poldm
poldz
pole
polep
polem
polez
cmfe
cnfe
flts
fltsp
fltsm
fltsz
fltd
fltdp
fltdm
fltdz
flte
fltep
fltem
fltez
fixp
fixm
fixz
fixsp
fixsm
fixsz
fixdp
fixdm
fixdz
fixep
fixem
fixez
lfmfd
lfmea
sfmfd
sfmea
fcpys
fmrs
fmsr
fmstat
fsitos
fuitos
ftosis
ftosizs
ftouis
ftouizs
fmrx
vmrs
fmxr
vmsr
flds
fsts
fldmias
fldmfds
fldmdbs
fldmeas
fldmiax
fldmfdx
fldmdbx
fldmeax
fstmias
fstmeas
fstmdbs
fstmfds
fstmiax
fstmeax
fstmdbx
fstmfdx
fabss
fnegs
fsqrts
fadds
fsubs
fmuls
fdivs
fmacs
ffmacs
fmscs
fnmuls
fnmacs
fnfmacs
fnmscs
ffnmas
ffnmss
fcmps
fcmpzs
fcmpes
fcmpezs
fcpyd
fcvtds
fcvtsd
fmdhr
fmdlr
fmrdh
fmrdl
fsitod
fuitod
ftosid
ftosizd
ftouid
ftouizd
fcvtshp
fcvthps
fcvttshp
fcvtbshp
fcvtthps
fcvtbhps
fldd
fstd
fldmiad
fldmfdd
fldmdbd
fldmead
fstmiad
fstmead
fstmdbd
fstmfdd
fabsd
fnegd
fsqrtd
faddd
fsubd
fmuld
fdivd
fmacd
ffmacd
fmscd
fnmuld
fnmacd
fnfmacd
fnmscd
ffnmad
ffnmsd
fcmpd
fcmpzd
fcmped
fcmpezd
fmsrr
fmrrs
fmdrr
fmrrd
vsqrt
vdiv
vnmul
vnmla
vnmls
vcmp
vcmpe
vpush
vpop
vcvtr
vfnma
vfnms
vfma
vfms
vmul
vmla
vmls
vadd
vsub
vabs
vneg
vldm
vldmia
vldmdb
vstm
vstmia
vstmdb
vldr
vstr
vcvt
vcvtt
vcvtb
vmov
vmovq
vaba
vabaq
vhadd
vhaddq
vrhadd
vrhaddq
vhsub
vhsubq
vqadd
vqaddq
vqsub
vqsubq
vrshl
vrshlq
vqrshl
vqrshlq
vshl
vshlq
vqshl
vqshlq
vand
vandq
vbic
vbicq
vorr
vorrq
vorn
vornq
veor
veorq
vbsl
vbslq
vbit
vbitq
vbif
vbifq
vabd
vabdq
vmax
vmaxq
vmin
vminq
vcge
vcgeq
vcgt
vcgtq
vclt
vcltq
vcle
vcleq
vceq
vceqq
vpmax
vpmin
vmlaq
vmlsq
vpadd
vaddq
vsubq
vtst
vtstq
vmulq
vqdmulh
vqdmulhq
vqrdmulh
vqrdmulhq
vacge
vacgeq
vacgt
vacgtq
vaclt
vacltq
vacle
vacleq
vrecps
vrecpsq
vrsqrts
vrsqrtsq
vabsq
vnegq
vshr
vshrq
vrshr
vrshrq
vsra
vsraq
vrsra
vrsraq
vsli
vsliq
vsri
vsriq
vqshlu
vqshluq
vqshrn
vqrshrn
vqshrun
vqrshrun
vshrn
vrshrn
vshll
vcvtq
vmvn
vmvnq
vabal
vabdl
vaddl
vsubl
vmlal
vmlsl
vaddw
vsubw
vaddhn
vraddhn
vsubhn
vrsubhn
vqdmlal
vqdmlsl
vqdmull
vmull
vext
vextq
vrev64
vrev64q
vrev32
vrev32q
vrev16
vrev16q
vdup
vdupq
vmovl
vmovn
vqmovn
vqmovun
vzip
vzipq
vuzp
vuzpq
vqabs
vqabsq
vqneg
vqnegq
vpadal
vpadalq
vpaddl
vpaddlq
vrecpe
vrecpeq
vrsqrte
vrsqrteq
vcls
vclsq
vclz
vclzq
vcnt
vcntq
vswp
vswpq
vtrn
vtrnq
vtbl
vtbx
vld1
vst1
vld2
vst2
vld3
vst3
vld4
vst4
fconsts
fconstd
fshtos
fshtod
fsltos
fsltod
fuhtos
fuhtod
fultos
fultod
ftoshs
ftoshd
ftosls
ftosld
ftouhs
ftouhd
ftouls
ftould
miaph
miabb
miabt
miatb
miatt
tandcb
tandch
tandcw
tbcstb
tbcsth
tbcstw
textrcb
textrch
textrcw
textrmub
textrmuh
textrmuw
textrmsb
textrmsh
textrmsw
tinsrb
tinsrh
tinsrw
tmcr
tmcrr
tmia
tmiaph
tmiabb
tmiabt
tmiatb
tmiatt
tmovmskb
tmovmskh
tmovmskw
tmrc
tmrrc
torcb
torch
torcw
waccb
wacch
waccw
waddbss
waddb
waddbus
waddhss
waddh
waddhus
waddwss
waddw
waddwus
waligni
walignr0
walignr1
walignr2
walignr3
wand
wandn
wavg2b
wavg2br
wavg2h
wavg2hr
wcmpeqb
wcmpeqh
wcmpeqw
wcmpgtub
wcmpgtuh
wcmpgtuw
wcmpgtsb
wcmpgtsh
wcmpgtsw
wldrb
wldrh
wldrw
wldrd
wmacs
wmacsz
wmacu
wmacuz
wmadds
wmaddu
wmaxsb
wmaxsh
wmaxsw
wmaxub
wmaxuh
wmaxuw
wminsb
wminsh
wminsw
wminub
wminuh
wminuw
wmov
wmulsm
wmulsl
wmulum
wmulul
wpackhss
wpackhus
wpackwss
wpackwus
wpackdss
wpackdus
wrorh
wrorhg
wrorw
wrorwg
wrord
wrordg
wsadb
wsadbz
wsadh
wsadhz
wshufh
wsllh
wsllhg
wsllw
wsllwg
wslld
wslldg
wsrah
wsrahg
wsraw
wsrawg
wsrad
wsradg
wsrlh
wsrlhg
wsrlw
wsrlwg
wsrld
wsrldg
wstrb
wstrh
wstrw
wstrd
wsubbss
wsubb
wsubbus
wsubhss
wsubh
wsubhus
wsubwss
wsubw
wsubwus
wunpckehub
wunpckehuh
wunpckehuw
wunpckehsb
wunpckehsh
wunpckehsw
wunpckihb
wunpckihh
wunpckihw
wunpckelub
wunpckeluh
wunpckeluw
wunpckelsb
wunpckelsh
wunpckelsw
wunpckilb
wunpckilh
wunpckilw
wxor
wzero
torvscb
torvsch
torvscw
wabsb
wabsh
wabsw
wabsdiffb
wabsdiffh
wabsdiffw
waddbhusl
waddbhusm
waddhc
waddwc
waddsubhx
wavg4
wavg4r
wmaddsn
wmaddsx
wmaddun
wmaddux
wmerge
wmiabb
wmiabt
wmiatb
wmiatt
wmiabbn
wmiabtn
wmiatbn
wmiattn
wmiawbb
wmiawbt
wmiawtb
wmiawtt
wmiawbbn
wmiawbtn
wmiawtbn
wmiawttn
wmulsmr
wmulumr
wmulwumr
wmulwsmr
wmulwum
wmulwsm
wmulwl
wqmiabb
wqmiabt
wqmiatb
wqmiatt
wqmiabbn
wqmiabtn
wqmiatbn
wqmiattn
wqmulm
wqmulmr
wqmulwm
wqmulwmr
wsubaddhx
cfldrs
cfldrd
cfldr32
cfldr64
cfstrs
cfstrd
cfstr32
cfstr64
cfmvsr
cfmvrs
cfmvdlr
cfmvrdl
cfmvdhr
cfmvrdh
cfmv64lr
cfmvr64l
cfmv64hr
cfmvr64h
cfmval32
cfmv32al
cfmvam32
cfmv32am
cfmvah32
cfmv32ah
cfmva32
cfmv32a
cfmva64
cfmv64a
cfmvsc32
cfmv32sc
cfcpys
cfcpyd
cfcvtsd
cfcvtds
cfcvt32s
cfcvt32d
cfcvt64s
cfcvt64d
cfcvts32
cfcvtd32
cftruncs32
cftruncd32
cfrshl32
cfrshl64
cfsh32
cfsh64
cfcmps
cfcmpd
cfcmp32
cfcmp64
cfabss
cfabsd
cfnegs
cfnegd
cfadds
cfaddd
cfsubs
cfsubd
cfmuls
cfmuld
cfabs32
cfabs64
cfneg32
cfneg64
cfadd32
cfadd64
cfsub32
cfsub64
cfmul32
cfmul64
cfmac32
cfmsc32
cfmadd32
cfmsub32
cfmadda32
cfmsuba32
shift must be constant
instruction not supported in Thumb16 mode
unshifted register required
lo register required
dest must overlap one source register
shift by register not allowed in thumb mode
only SUBS PC, LR, #const allowed
dest and source1 must be the same register
only lo regs allowed with immediate
invalid pseudo operation
literal pool insertion failed
instruction does not accept preindexed addressing
instruction does not accept unindexed addressing
destination register same as write-back base
source register same as write-back base
Thumb does not support this addressing mode
byte or halfword not valid for base register
r15 based store not allowed
invalid base register for register offset
Instruction does not support =N addresses
cannot use register index with PC-relative addressing
cannot use register index with this instruction
Thumb does not support negative register indexing
Thumb does not support register post-indexing
Thumb does not support register indexing with writeback
Thumb supports only LSL in shifted register indexing
shift out of range
cannot use writeback with PC-relative addressing
cannot use writeback with this instruction
cannot use post-indexing with PC-relative addressing
cannot use post-indexing with this instruction
writeback of base register is UNPREDICTABLE
writeback of base register when in register list is UNPREDICTABLE
if writeback register is in list, it must be the lowest reg in the list
Thumb load/store multiple does not support {reglist}^
value stored for r%d is UNPREDICTABLE
Thumb-2 instruction only valid in unified syntax
this instruction will write back the base register
this instruction will not write back the base register
SP not allowed in register list
LR and PC should not both be in register list
base register should not be in register list when written back
PC not allowed in register list
the only suffix valid here is '(plt)'
Thumb does not support NOP with hints
source1 and dest must be same register
ror #imm not supported
push/pop do not support {reglist}^
invalid register list to push/pop instruction
this instruction requires a post-indexed address
Rd and Rm should be different in mul
rd and rm should be different in mla
instruction does not support unindexed addressing
pc may not be used with write-back
instruction does not support writeback
Rn must not overlap other operands
'CPSR' or 'SPSR' expected
operand 1 must be FPSCR
selected FPU does not support instruction
selected processor does not support requested special purpose register
selected processor does not support requested special purpose register %x
Thumb encoding does not support an immediate here
rdhi and rdlo must be different
rdhi, rdlo and rm must all be different
instruction does not accept scaled register index
use of r15 in bx in ARM mode is not really useful
use of r15 in blx in ARM mode is not really useful
'[' expected after PLD mnemonic
post-indexed expression used in preload instruction
writeback used in preload instruction
unindexed addressing used in preload instruction
first destination register must be even
can only load two consecutive registers
r14 not allowed here
base register written back, and overlaps second destination register
index register overlaps destination register
use of r15 in bxj is not really useful
instruction not allowed in IT block
selected processor does not support 'A' form of this instruction
Thumb does not support the 2-argument form of this instruction
Thumb encoding does not support rotation
instruction does not accept this addressing mode
offset must be zero in ARM encoding
registers may not be the same
SRS base register must be r13
even register required
r14 not allowed as first register when second register is omitted
can only store two consecutive registers
bit-field extends past end of register
:lower16: not allowed this instruction
:upper16: not allowed instruction
:upper16: not allowed this instruction
PC not allowed as destination
instruction requires register index
PC is not a valid index register
instruction does not allow shifted index
'[' expected after PLI mnemonic
bad barrier type
this instruction does not support indexing
D register out of range for selected VFP version
this addressing mode requires base-register writeback
only two consecutive VFP SP registers allowed here
invalid instruction shape
types specified in both the mnemonic and operands
operand types can't be inferred
type specifier has the wrong number of parts
operand size must match register width
bad type in Neon instruction
inconsistent types in Neon instruction
invalid instruction shape (using rounding mode)
scalar out of range for multiply instruction
writeback (!) must be used for VLDMDB and VSTMDB
register list must contain at least 1 and at most 16 registers
operands 0 and 1 must be the same register
bad type for scalar
immediate out of range
VFP registers must be adjacent
operand size must be specified for immediate VMOV
immediate has bits set outside the operand size
immediate out of range for shift
immediate out of range for insert
immediate out of range for narrowing operation
elements must be smaller than reversal region
bad list length for table lookup
post-index must be a register
bad register for post-index
bad alignment
bad list type for instruction
bad size for instruction
bad list length
can't use alignment with this instruction
unsupported alignment for instruction
stride of 2 unavailable when element size is 8
only r15 allowed here
immediate operand requires iWMMXt2
fsxc
fscx
fxsc
fxcs
fcsx
fcxs
sfxc
sfcx
sxfc
sxcf
scfx
scxf
xfsc
xfcs
xsfc
xscf
xcfs
xcsf
cfsx
cfxs
csfx
csxf
cxfs
cxsf
apsr
APSR
iapsr
IAPSR
eapsr
EAPSR
xpsr
XPSR
xPSR
ipsr
IPSR
epsr
EPSR
iepsr
IEPSR
primask
PRIMASK
basepri
BASEPRI
basepri_max
BASEPRI_MAX
faultmask
FAULTMASK
control
CONTROL
cr10
cr11
cr12
cr13
cr14
cr15
CR10
CR11
CR12
CR13
CR14
CR15
fpsid
fpscr
fpexc
FPSID
FPSCR
FPEXC
mvfr1
mvfr0
MVFR1
MVFR0
mvf0
mvf1
mvf2
mvf3
mvf4
mvf5
mvf6
mvf7
mvf8
mvf9
mvf10
mvf11
mvf12
mvf13
mvf14
mvf15
mvd0
mvd1
mvd2
mvd3
mvd4
mvd5
mvd6
mvd7
mvd8
mvd9
mvd10
mvd11
mvd12
mvd13
mvd14
mvd15
mvfx0
mvfx1
mvfx2
mvfx3
mvfx4
mvfx5
mvfx6
mvfx7
mvfx8
mvfx9
mvfx10
mvfx11
mvfx12
mvfx13
mvfx14
mvfx15
mvdx0
mvdx1
mvdx2
mvdx3
mvdx4
mvdx5
mvdx6
mvdx7
mvdx8
mvdx9
mvdx10
mvdx11
mvdx12
mvdx13
mvdx14
mvdx15
MVF0
MVF1
MVF2
MVF3
MVF4
MVF5
MVF6
MVF7
MVF8
MVF9
MVF10
MVF11
MVF12
MVF13
MVF14
MVF15
MVD0
MVD1
MVD2
MVD3
MVD4
MVD5
MVD6
MVD7
MVD8
MVD9
MVD10
MVD11
MVD12
MVD13
MVD14
MVD15
MVFX0
MVFX1
MVFX2
MVFX3
MVFX4
MVFX5
MVFX6
MVFX7
MVFX8
MVFX9
MVFX10
MVFX11
MVFX12
MVFX13
MVFX14
MVFX15
MVDX0
MVDX1
MVDX2
MVDX3
MVDX4
MVDX5
MVDX6
MVDX7
MVDX8
MVDX9
MVDX10
MVDX11
MVDX12
MVDX13
MVDX14
MVDX15
mvax0
mvax1
mvax2
mvax3
dspsc
MVAX0
MVAX1
MVAX2
MVAX3
DSPSC
wr10
wr11
wr12
wr13
wr14
wr15
wR10
wR11
wR12
wR13
wR14
wR15
WR10
WR11
WR12
WR13
WR14
WR15
wcid
wCID
WCID
wcon
wCon
WCON
wcssf
wCSSF
WCSSF
wcasf
wCASF
WCASF
wcgr0
wCGR0
WCGR0
wcgr1
wCGR1
WCGR1
wcgr2
wCGR2
WCGR2
wcgr3
wCGR3
WCGR3
acc0
ACC0
unst
ishst
nshst
oshst
a.out
RC_DEBUG_OPTIONS
--gstabs
--gdwarf2
-gdwarf-2
-mcpu
%s: Flag option -%c has already been seen!
force_cpusubtype_ALL
%s: I expected a filename after -o. "%s" assumed.
%s: -R option not supported (use the .const directive)
Apple Inc version %s, 
ersion
Unknown -v option ignored
I expected a filename after -I.
dynamic
static
NEXTSTEP-deployment-target
I expected '3.2' or '3.3' after -NEXTSTEP-deployment-target.
I expected a <release_tag> after -NEXTSTEP-deployment-target.
arch_multiple
arch
can't specify more than one -arch flag 
armv4t
armv5
xscale
armv6
armv6m
armv7
armv7f
armv7s
armv7k
armv7m
armv7em
I expected 'arm' after -arch for this assembler.
I expected an <arch_type> after -arch.
%s: I don't understand '%c' flag!
-g can't be specified if -n is specified
%s: this system assembler is deprecated. Please migrate to the clang integrated assembler (`as -q').
AS_SECURE_LOG_FILE
Interrupted by signal %d
with -n a section directive must be seen before assembly can begin
Can't extend frag %d. chars
Invalid width for fill expression.
Error converting number to floating point (Exponent overflow?)
cannot create floating-point number
"%d" (instance number %d of a %s label)
symbol %s already has an index
label definition in inlineasm
Symbol "%s" is already defined as "%s"/%d.%d.%u.
Symbol %s already defined.
Inserting "%s" into symbol table failed: %s
input can't have .file dwarf directives when -g is used to generate dwarf debug info for assembly code
file number less than one
file number %ld already allocated
unassigned file number %ld
basic_block
prologue_end
epilogue_begin
is_stmt
is_stmt value not 0 or 1
unknown .loc sub-directive `%s'
expected 0 or 1
Internal error dwarf2dbg_estimate_size_before_relax() called with frag without symbol or expression
Internal error dwarf2dbg_estimate_size_before_relax() called with frag symbol with bad expression
Internal error dwarf2dbg_convert_frag() called with frag without symbol or expression
Internal error dwarf2dbg_convert_frag() called with frag symbol with bad expression
__DWARF
__debug_info
__debug_line
__debug_abbrev
__debug_aranges
__debug_ranges
internal error, p != end at the end of emit_inc_line_addr()
internal error, emit_expr() called with unexpected expression type
internal error, did not find frag in section in get_frag_fix()
%s %s, %s
Apple Inc version
absolute
section
difference
unknown
absent
bignum/flonum
Subtracting symbol "%s"(segment"%s") is too hard. Absolute segment assumed.
Missing operand value assumed absolute 0.
Left operand of %c is a %s integer 0 assumed
bignum
float
Right operand of %c is a %s integer 0 assumed
Can't relocate expression. Absolute 0 assumed.
Expression too complex: forgetting %s - %s
Relocation error. Absolute 0 assumed
Division by 0. 0 assumed.
/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot11/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/cctools/cctools-1009.2/as/expr.c
0123456789abcdefABCDEF
Backw. ref to unknown label "%lld",0 assumed.
Bad floating-point constant: exponent overflow
Bad floating-point constant: unknown error code=%d.
Missing ')' assumed
Unary operator %c ignored because bad operand follows
Expression too complex, 2 symbols forgotten: "%s" "%s"
{standard input}
Partial line at end of file ignored
%s:unknown:
as:file(%s) %s! 
Unknown error #%d.
include file name too long: "%s%s"
Couldn't find the include file: "%s"
int:t1=r1;-2147483648;2147483647;
char:t2=r2;0;127;
void:t3=3
file contains unmatched .ifs or .elses
file contains unmatched .macro and .endmacro for: %s
Expected comma after name "%s"
Repeat < 0, .space ignored
Rest of line ignored. 1st junk character valued %d (%c).
%s number illegal. Absolute 0 assumed.
Bignum
Floating-Point
No expression:  Using absolute 0
Complex expression. Absolute segment assumed.
/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot11/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/cctools/cctools-1009.2/as/read.c
0 assumed for missing expression
Value 0x%llx truncated to 0x%llx.
Bad floating literal: %s
Expected "-ed string
Symbols "%s" "%s" are undefined: absolute 0 assumed.
Symbol "%s" undefined: absolute 0 assumed.
Bad Absolute Expression, absolute 0 assumed.
This string may not contain '\0'
Can't define a macro inside another macro definition
Missing name of macro
Pseudo-op name: %s can't be a macro name
This .endmacro does not match with a preceding .macro
The macro named "%s" is already defined
error constructing pseudo-op table (%s)
align
align32
p2align
p2alignw
p2alignl
balign
balignw
balignl
private_extern
indirect_symbol
abort
ascii
asciz
byte
comm
desc
double
appfile
fill
globl
lcomm
line
long
quad
lsym
zerofill
tbss
secure_log_unique
secure_log_reset
short
single
space
sleb128
uleb128
stabd
stabn
stabs
debug_note
reference
lazy_reference
weak_reference
weak_definition
weak_def_can_be_hidden
no_dead_strip
symbol_resolver
include
macro
endmacro
endm
macros_on
macros_off
elseif
else
endif
dump
load
subsections_via_symbols
machine
inlineasmstart
inlineasmend
incbin
data_region
end_data_region
Internal error, s_align() called with bad fill_size %d
alignment not a power of 2
Alignment too large: %d. assumed.
Alignment negative. 0 assumed.
Illegal expression. current section assumed.
incompatible feature used: .indirect_symbol (must specify "-dynamic" to be used)
indirect symbol not in a symbol pointer or stub section, .indirect_symbol ignored
.abort %s detected.  Assembly stopping.
Expected comma after symbol-name
.COMMon length (%u.) <0! Ignored.
Ignoring attempt to re-define symbol
Length of .comm "%s" is already %u. Not changed to %u.
Expect comma after rep-size in .fill
Expected comma after size in .fill
.fill size clamped to %d.
Size negative: .fill ignored.
.fill size must be 0,1,2,4 or 8, .fill ignored
.fill repeat <= 0, .fill ignored
Expected comma after name
BSS length (%u.) <0! Ignored.
__DATA
__bss
Ignoring attempt to re-define symbol.
Bad expression: %s
Expected comma after segment-name
Expected section-name after comma
segment-name: %s too long (maximum %ld characters)
section-name: %s too long (maximum %ld characters)
unknown section type: %s
unknown section attribute: %s
size of stub section: %s not a proper number
missing size of stub section (%s,%s)
incompatible feature used: section type %s (must specify "-dynamic" to be used)
regular
cstring_literals
4byte_literals
8byte_literals
16byte_literals
literal_pointers
non_lazy_symbol_pointers
lazy_symbol_pointers
symbol_stubs
mod_init_funcs
mod_term_funcs
coalesced
interposing
thread_local_regular
thread_local_variables
thread_local_init_function_pointers
none
pure_instructions
no_toc
strip_static_syms
live_support
self_modifying_code
debug
__thread_bss
%s size (%lld.) <0! Ignored.
.secure_log_unique specified multiple times
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
%s:%d:%s
couldn't write to secure log file: "%s"
zero assumed for missing expression
floating point number invalid
I need a comma after symbol's name
I want a comma after the n_type expression
I want a comma after the n_other expression
I want a comma after the n_desc expression
incompatible feature used: .lazy_reference (must specify "-dynamic" to be used)
incompatible feature used: .weak_reference (must specify "-dynamic" to be used)
You can't nest if's more than %d levels deep
Encountered a .elseif that doesn't follow a .if or an .elseif
Encountered a .else that doesn't follow a .if or an .elseif
Encountered a .endif that doesn't follow a .if or .else
couldn't write to dump file: "%s"
a macro named "%s" encountered in a .load is already defined
Couldn't find the dump file: "%s"
unknown .machine argument: %s
invalid .machine argument: %s
.machine argument: %s can not be combined with previous .machine directives, -arch arguments or machine specific instructions
Couldn't find the .incbin file: "%s"
text
__TEXT
__text
const
__const
static_const
__static_const
cstring
__cstring
literal4
__literal4
literal8
__literal8
literal16
__literal16
constructor
__constructor
destructor
__destructor
fvmlib_init0
__fvmlib_init0
fvmlib_init1
__fvmlib_init1
symbol_stub
__symbol_stub
picsymbol_stub
__picsymbol_stub
non_lazy_symbol_pointer
__nl_symbol_ptr
lazy_symbol_pointer
__la_symbol_ptr
mod_init_func
__mod_init_func
mod_term_func
__mod_term_func
dyld
__dyld
data
__data
static_data
__static_data
const_data
tdata
__thread_data
__thread_vars
thread_init_func
__thread_init
objc_class
__OBJC
__class
objc_meta_class
__meta_class
objc_string_object
__string_object
objc_protocol
__protocol
objc_cat_cls_meth
__cat_cls_meth
objc_cat_inst_meth
__cat_inst_meth
objc_cls_meth
__cls_meth
objc_inst_meth
__inst_meth
objc_message_refs
__message_refs
objc_cls_refs
__cls_refs
objc_class_names
objc_module_info
__module_info
objc_symbols
__symbols
objc_category
__category
objc_meth_var_types
objc_class_vars
__class_vars
objc_instance_vars
__instance_vars
objc_meth_var_names
objc_selector_strs
__selector_strs
Unknown pseudo-op: %s
Junk character %d (%c).
You can't nest macros more than %d levels deep
mismatched parenthesis
More than 10 arguments not allowed for macros
#NO_APP
incompatible feature used: directive .%s (must specify "-dynamic" to be used)
Bad escaped character in string, '?' assumed
Expected address expression: absolute 0 assumed
Missing string
can't vm_allocate() buffer for output file of size %u
undefined symbol `%s' in operation setting `%s'
invalid sections for operation on `%s' and `%s' setting `%s'
can't create output file: %s
can't write output file
can't close output file
missing indirect symbols for section (%s,%s)
Undefined local symbol %c (%cf or %cb)
Undefined local symbol %s
Non-global symbol: %s can't be a weak_definition
Undefined symbol: %s can't be a weak_definition
Bad fx_size (0x%x) in fix_to_relocation_info()
Internal error: incorrect fx_r_type (%u) for fx_subsy != 0 in fix_to_relocation_info()
Section too large, can't encode r_address (0x%x) into 24-bits of scattered relocation entry
section type does not match previous section type
section stub size does not match previous section stub size
too many sections (maximum %d)
Can't open source file for input
O_APP
Can't close source file -- continuing
cputype 1234567890 cpusubtype 1234567890
cputype %u cpusubtype %u
little
ppc64
x86_64
x86_64h
arm64
ppc970-64
arm64_32
arm64e
i386
m68k
hppa
sparc
m88k
i860
ppc601
ppc603
ppc603e
ppc603ev
ppc604
ppc604e
ppc750
ppc7400
ppc7450
ppc970
i486
i486SX
pentium
i586
pentpro
i686
pentIIm3
pentIIm5
pentium4
m68030
m68040
hppa7100LC
veo1
veo2
veo3
veo4
arm64v8
fatal error: %s: 
 (%s)
 (%s)
virtual memory exhausted (malloc failed)
virtual memory exhausted (realloc failed)
<dict>
  <key>tool</key>
  <string>%s</string>
  <key>args</key>
  <key>diagnostics</key>
  <array>
    <dict>
      <key>level</key>
      <string>%s</string>
      <key>message</key>
    </dict>
  </array>
</dict>
error: cannot open file at %s: %s
warning
error
fatal error
))))
 .37I
OOOO
OOOO
&&2kkkkMPkk
kkk,kk,k6AIkk&2&kkkk
dDfF
@A@A
@@@@
 @C@C
C@B@B
egeee
!%).38=BFJNRV[
9#J{
_ZX`]OSO
R`i;
.eNQ
Y>VPr^2>#
!ewL
~rEl{
=.3-
RD7e
RASQ
[Am-
cctools-1009.2
{{{{{EZlE.
ddddd.CU.
MMMMM
66666
',=$I
   !D+}   4
GNU assembler version 1.38
************************************************
*******
**************************
*********************************************************************************************************************************************************
