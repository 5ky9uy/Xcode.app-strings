?18IGVertexShaderInfo
16IGHullShaderInfo
18IGDomainShaderInfo
17IGPixelShaderInfo
10ShaderInfo
ilerPlugin.dyliblibMTLIGCCompileSt12out_of_range
St11logic_error
St9exception
kIntelMTLVendorString
MTLIGAccelDevice
MTLIGAccelDevice.m
targetData
May 26 2022
19:21:43
ForceVISAPreRAScheduler
Intel(R)
/System/Library/Extensions/AppleIntelGraphicsShared.bundle/Contents/MacOS/libMTLIGCCompilerPlugin.dylib
-[NSAccelDevice initializeDevice:deviceId:]
INTEL_%s_GT%d_%d
INTEL_%s_%s_%d
1x8x8
1x6x8
RoundDownPowerOf2
intel_types_util.h
(value > 0) && (value <= 0x80000000)
releaseStorage
IGStateHeaps.h
mStateData != NULL
mStorageObject != nil
mStorageType == StorageTypeCopyOffset
mutexLock
mutexUnlock
mutexDestroy
storeCompilerOutput
MTLIGComputePipelineState.m
pChalKernelBinaryInfo->DSHSizeInBytes >= alignedDSHSamplerStatesSize
kernelAllocator
psoAddress
mPsoGpuAddress != 0
fixedOffsetKernelAllocator
chalDecodedKernelBinary->SamplerStateOffset == samplerStateOffset
chalDecodedKernelBinary->inlineConstantAddress != 0
chalDecodedKernelBinary->inlineConstantGPUAddress != 0
chalDecodedKernelBinary->privateMemoryAddress != 0
chalDecodedKernelBinary->privateMemoryGPUAddress != 0
resourceIndex
allocateMemory
mStorageType == StorageTypeDirectAddress
mSize <= mMaxSize
offset <= mMaxSize
resizeStorage
mStorageObject == nil
allocateStorage
mStorageObject
writeState
mStorageType != StorageTypeDirectAddress
mStateData
resource
mStorageType != StorageTypeCopyOffset
allocateOffset
CHAL_NEW
chal_defs.h
*pptrElem != nullptr
MTLIGFunctionVariant
MTLIGFunctionVariant.m
!"Unhandled MTLFunctionVariant Type!\n"
extractVSCompilerOutput
pVS != NULL
device != NULL
pSerializedOutput->isSerialized()
extractPSCompilerOutput
pPS != nil
device != nil
extractHSCompilerOutput
pHS != nil
extractDSCompilerOutput
pDS != nil
allocateIndirectWithDevice
mCompilerOutputData
kernelPointer1 == 0
kernelPointer2 == 0
kernelPointer3 == 0
scratchPointer1 == 0
scratchPointer2 == 0
kernelHeapAllocator
getFreeSamplerSlot
occupiedLocationIDMask != 0xFFFF
getSamplerBindingIndex
generateInlineSamplerWithDevice
fixedAllocator
slot != IntelConstants::NUM_SAMPLER_SLOTS
getInlineConstantData
vsInfo.kernelDesc().constantDeclMask & 0x1
psInfo.kernelDesc().constantDeclMask & 0x1
hsInfo.kernelDesc().constantDeclMask & 0x1
generateInlineConstantWithDevice
constantSize
constantData
inlineConstantPushOffset
inlineConstantStatelessAddress
convertMTLInlineSamplerAddressMode
IGRenderStateConvert.h
((eInlineSamplerAddressMode)mode >= InlineSamplerAddressModeClampToBorder) && ((eInlineSamplerAddressMode)mode <= InlineSamplerAddressModeMirroredRepeat)
convertMTLInlineSamplerMinMagFilter
((eInlineSamplerMinMagFilterMode)filter >= InlineSamplerMinMagFilterNearest) && ((eInlineSamplerMinMagFilterMode)filter <= InlineSamplerMinMagFilterLinear)
convertMTLInlineSamplerMipFilter
((eInlineSamplerMipFilterMode)filter >= InlineSamplerMipFilterNone) && ((eInlineSamplerMipFilterMode)filter <= InlineSamplerMipFilterLinear)
convertMTLInlineSamplerAnisoRatio
((eInlineSamplerMaxAnisotropy)maxAnisotropy >= InlineSamplerAnisoRatio_2) && ((eInlineSamplerMaxAnisotropy)maxAnisotropy <= InlineSamplerAnisoRatio_16)
convertMTLInlineSamplerCompareFunc
((eInlineSamplerCompareFunc)func >= InlineSamplerCompareFuncNone) && ((eInlineSamplerCompareFunc)func <= InlineSamplerCompareFuncNever)
convertMTLSamplerReductionType
(mode >= MTLSamplerReductionModeWeightedAverage) && (mode <= MTLSamplerReductionModeMaximum)
allocateOffsetBorderColor
cachedBorderColorOffsets.size() < INTEL_MAX_SIZE_BORDER_COLOR_CACHE
allocateOffsetInlineSampler
cachedInlineSamplerOffsets.size() < INTEL_MAX_SIZE_INLINE_SAMPLER_CACHE
FlatBuffers 1.12.0
0123456789ABCDEF
FunctionCtx
IGFunctionHash.cpp
script != nullptr
ForceSimdWidth
IGStencilPMAHint
fallbackType
MTLIGRenderPipelineState.m
(pibMask & cibMask & tfbMask) == 0
generateIndirectCommandsWithDevice
mHWCommands.clipState.MaximumVpIndex == (g_cNumViewports - 1)
indirectBuffer
convertTessellationIndexToInt
indexType <= 2
BlendFunc
!"Unhandled Blend Operation!"
BlendFact
!"Unhandled Blend Factor!"
getMTLIntelTextureInfo
MTL_intel_texture_format_info.h
(uint8_t)pInfo->intelType == idx
pInfo
IGRenderResourceData.h
generateRegisterPatchOffset
IGRenderStateConstants.h
indexOffset < nosBufferSize
setHashDWord
index < 4
CheckLimits
processCommand
source
~FenceList
IGFenceGroup.mm
groups[index]
copyFences
bufferSizeBytes >= num_fence_indices * sizeof(uint16_t)
groups[group_index]
clearFences
com.apple.IGMetal.FenceGroupPool
v8@?0
decodeCompilerOutput
IntelCLUtils.cpp
pSerializedCSOutput->GetWithInvalidPointers()->magicIdentifier == AIR::SCompilerOutputComputeShader::MAGIC_IDENTIFIER
pSerializedCSOutput->isSerialized()
pMTLCSOutput->numSamplerDecls < USC::NUM_SAMPLER_SLOTS
__read
DecodeProgramScopePatchList
DecodeProgramBinary
patchCurbeDataInfo
GetPreferred1DThreadgroupSize
simdSize != 0
simdSize <= 32
DecodeStatelessBuffer
0 && "ArgNum >= CHAL_MAX_NUM_ARGS"
CHAL_NEW_ARRAY
*ptrArray != nullptr
MTLCompilerCreate: Compile thought IGC
MTLCompilerBuildRequestWithSerializedBitcode
MTLIntelCompilerPlugin.cpp
0 && "compilerInput is NULL"
false && "Neither Vertex nor Tess outputs have been set."
0 && "Unknown Function Type"
AIRNTInterface.cpp
AIRNTDispose
PluginCtx != nullptr
Intel
AIRNTEmitDylibImage
igCompiler != nullptr
AIRNTEmitExecutableImage
AIRNTEmitPipelineImage
AIRNTGetMostCompatibleArch
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
air-debug-post-vertex-dump-amplification-id
air-degenerate-vertex-amplification-emulation
air-raytracing-emulation
air-tls-emulation
air-16bit-texture-coordinate-emulation
mtl-fetch-compute-tessellation
mtl-vertex-linking
mtl-fragment-linking
getLegalizationPasses
mtlDevice != nullptr
/Library/GPUBundles/AppleIntelGraphicsShared.bundle/Contents/MacOS/libigcHSW.dylib
/Library/GPUBundles/AppleIntelGraphicsShared.bundle/Contents/MacOS/libigc.dylib
/System/Library/Extensions/AppleIntelGraphicsShared.bundle/Contents/MacOS/libigcHSW.dylib
CreateShaderCompilerAIR
openIGCLibrary
MTLIntelCompiler.cpp
m_pCreateShaderCompilerFn
DeleteShaderCompilerAIR
m_pDeleteShaderCompilerFn
CompileVSAIRFn
m_pCompileVSFn
CompilePSAIRFn
m_pCompilePSFn
CompileCSAIRFn
m_pCompileCSFn
DeleteVSAIR
m_pDeleteVSCompilerOutputFn
DeleteDSAIR
m_pDeleteDSCompilerOutputFn
DeleteHSAIR
m_pDeleteHSCompilerOutputFn
DeletePSAIR
m_pDeletePSCompilerOutputFn
DeleteCSAIR
m_pDeleteCSCompilerOutputFn
readBitcode
m_pReadBitcodeFn
loadSplitBuiltinModuleFromFile
m_pLoadSplitBuiltinModuleFromFileFn
deleteContext
m_pDeleteContextFn
getTargetTripleOSMajor
m_pTargetTripleFn
Couldn't open IGC Library. %s is not trusted.
Couldn't open IGC Library. Failed with error:
Couldn't open IGC Library. %s does not exist on disk.
/System/Library/Extensions/AppleIntelSKLGraphicsMTLDriver.bundle/Contents/Resources/runtime.gpuencode.split
/System/Library/Extensions/AppleIntelKBLGraphicsMTLDriver.bundle/Contents/Resources/runtime.gpuencode.split
/System/Library/Extensions/AppleIntelCNLGraphicsMTLDriver.bundle/Contents/Resources/runtime.gpuencode.split
/System/Library/Extensions/AppleIntelICLGraphicsMTLDriver.bundle/Contents/Resources/runtime.gpuencode.split
getICBFile
0 && "Unsupported platform"
/System/Library/Extensions/AppleIntelGraphicsShared.bundle/Contents/Resources/runtime.igcHSW64.split
/System/Library/Extensions/AppleIntelGraphicsShared.bundle/Contents/Resources/runtime.igc64.split
Thread group memory requested is more than MAX allowed
Number of requested constant samplers is more than MAX allowed
Texture argument cannot be used outside of an Argument Buffer when supportCommandBuffer is true
Sampler argument cannot be used outside of an Argument Buffer when supportCommandBuffer is true
[[max_total_threads_per_threadgroup]] declared in Metal doesn't match [MTLComputePipelineDescriptor maxTotalThreadsPerThreadgroup]
Function calls required for this compilation but not supported for requested [MTLComputePipelineDescriptor maxTotalThreadsPerThreadgroup]
AIR builtin function was called but no definition was found.
Number of fragment shader inputs exceeds the MAX limit
Unknown error found during compiling shader
trusted_dlopen
path != nullptr
libMTLIGCCompilerPlugin.dylib
libigc.dylib
Error: pipeline must be render or compute
No active buffer found 
bitset reset argument out of range
bitset test argument out of range
mtl-fetch-all
Couldn't determine stages for pipeline 
Fragment linking information expected but not found for pipeline 
Couldn't retrive function script name pipeline 
 at index
Couldn't create function script for pipeline 
 for function named 
air.vertex
air.patch
AIRF
mtl.serialized_link_info
arrayWithCapacity:
setCpuType:
setSubType:
setDriverVersion:
addObject:
initializeDevice:deviceId:
useNewMaxThreadsPerThreadgroupBehavior
sampleCount
supportIndirectCommandBuffers
initWithCompilerOutput:IGVariant:
tessellationPartitionMode
isTessellationFactorScaleEnabled
tessellationFactorFormat
tessellationControlPointIndexType
tessellationFactorStepFunction
_descriptorPrivate
objectForKeyedSubscript:
intValue
maxTotalThreadsPerThreadgroup
supportAddingBinaryFunctions
linkedFunctions
binaryFunctions
count
init
initWithTargetData:cacheUUID:pluginPath:device:compilerFlags:
validateWithDevice:
initWithDevice:pipelineState:
closelibISAProfilerDynLibrary
terminateDevice
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
newCommandQueue
newCommandQueueWithMaxCommandBufferCount:
heapTextureSizeAndAlignWithDescriptor:
heapBufferSizeAndAlignWithLength:options:
newHeapWithDescriptor:
newBufferWithLength:options:
newBufferWithBytes:length:options:
newBufferWithBytesNoCopy:length:options:deallocator:
newDepthStencilStateWithDescriptor:
newTextureWithDescriptor:
newTextureWithDescriptor:iosurface:plane:
newSharedTextureWithDescriptor:
newSharedTextureWithHandle:
newSamplerStateWithDescriptor:
newDefaultLibrary
newDefaultLibraryWithBundle:error:
newLibraryWithFile:error:
newLibraryWithURL:error:
newLibraryWithData:error:
newLibraryWithSource:options:error:
newLibraryWithSource:options:completionHandler:
newLibraryWithStitchedDescriptor:error:
newLibraryWithStitchedDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithFunction:error:
newComputePipelineStateWithFunction:options:reflection:error:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithDescriptor:options:completionHandler:
newFence
supportsFeatureSet:
supportsFamily:
supportsTextureSampleCount:
minimumLinearTextureAlignmentForPixelFormat:
minimumTextureBufferAlignmentForPixelFormat:
newRenderPipelineStateWithTileDescriptor:options:reflection:error:
newRenderPipelineStateWithTileDescriptor:options:completionHandler:
newRenderPipelineStateWithMeshDescriptor:error:
newRenderPipelineStateWithMeshDescriptor:options:reflection:error:
newRenderPipelineStateWithMeshDescriptor:completionHandler:
newRenderPipelineStateWithMeshDescriptor:options:completionHandler:
getDefaultSamplePositions:count:
newArgumentEncoderWithArguments:
supportsRasterizationRateMapWithLayerCount:
newRasterizationRateMapWithDescriptor:
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
newEvent
newSharedEvent
newSharedEventWithHandle:
newIOHandleWithURL:error:
newIOHandleWithURL:compressionType:error:
newIOCommandQueueWithDescriptor:error:
sparseTileSizeWithTextureType:pixelFormat:sampleCount:
sparseTileSizeInBytesForSparsePageSize:
sparseTileSizeWithTextureType:pixelFormat:sampleCount:sparsePageSize:
newCounterSampleBufferWithDescriptor:error:
sampleTimestamps:gpuTimestamp:
newArgumentEncoderWithBufferBinding:
supportsCounterSampling:
supportsVertexAmplificationCount:
newDynamicLibrary:error:
newDynamicLibraryWithURL:error:
newBinaryArchiveWithDescriptor:error:
accelerationStructureSizesWithDescriptor:
newAccelerationStructureWithSize:
newAccelerationStructureWithDescriptor:
heapAccelerationStructureSizeAndAlignWithSize:
heapAccelerationStructureSizeAndAlignWithDescriptor:
name
registryID
maxThreadsPerThreadgroup
isLowPower
isHeadless
isRemovable
hasUnifiedMemory
recommendedMaxWorkingSetSize
location
locationNumber
maxTransferRate
isDepth24Stencil8PixelFormatSupported
readWriteTextureSupport
argumentBuffersSupport
areRasterOrderGroupsSupported
supports32BitFloatFiltering
supports32BitMSAA
supportsQueryTextureLOD
supportsBCTextureCompression
supportsPullModelInterpolation
areBarycentricCoordsSupported
supportsShaderBarycentricCoordinates
currentAllocatedSize
maxThreadgroupMemoryLength
maxArgumentBufferSamplerCount
areProgrammableSamplePositionsSupported
peerGroupID
peerIndex
peerCount
sparseTileSizeInBytes
maxBufferLength
counterSets
supportsDynamicLibraries
supportsRenderDynamicLibraries
supportsRaytracing
supportsFunctionPointers
supportsFunctionPointersFromRender
supportsRaytracingFromRender
supportsPrimitiveMotionBlur
convertSparsePixelRegions:toTileRegions:withTileSize:alignmentMode:numRegions:
convertSparseTileRegions:toPixelRegions:withTileSize:numRegions:
T@"NSString",R
T{?=QQQ},R
lowPower
Tc,R,GisLowPower
headless
Tc,R,GisHeadless
removable
Tc,R,GisRemovable
Tc,R
depth24Stencil8PixelFormatSupported
Tc,R,GisDepth24Stencil8PixelFormatSupported
rasterOrderGroupsSupported
Tc,R,GareRasterOrderGroupsSupported
barycentricCoordsSupported
Tc,R,GareBarycentricCoordsSupported
programmableSamplePositionsSupported
Tc,R,GareProgrammableSamplePositionsSupported
TI,R
T@"NSArray",R
allowLibrariesFromOtherPlatforms
motionEstimatorCapabilities
newPrecompiledRenderPipelineStateWithDescriptor:options:pipelineCache:completionHandler:
newPrecompiledComputePipelineStateWithDescriptor:options:pipelineCache:completionHandler:
vendorName
familyName
productName
compilerPropagatesThreadPriority:
_setDeviceWrapper:
_deviceWrapper
deviceSupportsFeatureSet:
deviceOrFeatureProfileSupportsFeatureSet:
minLinearTextureAlignmentForPixelFormat:
requiredLinearTextureBytesPerRowForDescriptor:
minLinearTextureBaseAddressAlignmentForDescriptor:
minLinearTexturePitchAlignmentForDescriptor:mustMatchExactly:
newTextureWithSurface:buffer:
unloadShaderCaches
libraryCacheStats
pipelineCacheStats
supportsSampleCount:
newCommandQueueWithDescriptor:
newIndirectArgumentBufferLayoutWithStructType:
newArgumentEncoderWithLayout:
_removeRequested
_wasRemoved
_registerInterestNotification
newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:
newTiledTextureWithBytesNoCopy:length:deallocator:descriptor:offset:bytesPerRow:
requiredNbOfLanesForComputeGraph
supportsTextureWriteRoundingMode:
newIndirectCommandBufferWithDescriptor:maxCount:options:
newIndirectRenderCommandEncoderWithBuffer:
newIndirectComputeCommandEncoderWithBuffer:
newSharedEventWithMachPort:
setResourcesPurgeableState:newState:oldState:count:
newAccelerationStructureWithSize:resourceIndex:
isCompatibleWithAccelerationStructure:
newAccelerationStructureWithBuffer:offset:
newAccelerationStructureWithBuffer:offset:resourceIndex:
deserializePrimitiveAccelerationStructureFromBytes:withDescriptor:
deserializeInstanceAccelerationStructureFromBytes:primitiveAccelerationStructures:withDescriptor:
newAccelerationStructureWithSize:withDescriptor:
deserializePrimitiveAccelerationStructure:fromBytes:withDescriptor:
deserializeInstanceAccelerationStructure:fromBytes:primitiveAccelerationStructures:withDescriptor:
newDynamicLibrary:computeDescriptor:error:
validateDynamicLibraryDescriptor:error:
newDynamicLibraryWithDescriptor:error:
newDynamicLibraryWithURL:options:error:
newDynamicLibraryFromURL:error:
loadDynamicLibrariesForComputeDescriptor:error:
loadDynamicLibrariesForComputeDescriptor:options:error:
loadDynamicLibrariesForFunction:insertLibraries:error:
loadDynamicLibrariesForFunction:insertLibraries:options:error:
validateDynamicLibrary:state:error:
validateDynamicLibraryURL:error:
newBinaryLibraryWithOptions:url:error:
newVisibleFunctionTableWithDescriptor:
newIntersectionFunctionTableWithDescriptor:
newProfileWithExecutionSize:
newPerformanceStateAssertion:error:
supportsBufferlessClientStorageTexture
supportsComputeMemoryBarrier
supportsRenderMemoryBarrier
supportsPartialRenderMemoryBarrier
supportsArgumentBuffersTier2
supportsReadWriteTextureArgumentsTier2
supportsStreamingCodecSignaling
supportsProgrammableSamplePositions
supportsLargeFramebufferConfigs
supportsCustomBorderColor
supportsSamplerAddressModeClampToHalfBorder
supports3DBCTextures
supportsRGBA10A2Gamma
supportsBGR10A2
supportsPrimitiveRestartOverride
supportsGlobalVariableRelocation
supportsGlobalVariableRelocationRender
supportsGlobalVariableRelocationCompute
supportsTLS
supports32bpcMSAATextures
supportsVertexAmplification
supportsSamplerReductionMode
supportsPlacementHeaps
supportsOpenCLTextureWriteSwizzles
supportsInt64
supportsFixedLinePointFillDepthGradient
supportsLateEvalEvent
supportsNonZeroTextureWriteLOD
supportsSharedTextureHandles
supportsBufferPrefetchStatistics
supportsLimitedYUVFormats
supportsNonPrivateDepthStencilTextures
supportsNonPrivateMSAATextures
supportsSharedStorageHeapResources
supportsSharedStorageTextures
supportsLinearTextureFromSharedBuffer
supportsPipelineLibraries
supportsFragmentOnlyEncoders
supportsBufferWithIOSurface
supportsProgrammableBlending
supportsRenderToLinearTextures
supportsMemorylessRenderTargets
supportsFastMathInfNaNPropagation
supportsInvariantVertexPosition
supportsShaderLODAverage
supportsRelaxedTextureViewRequirements
supportsSeparateDepthStencil
supportsGPUStatistics
supportsCompressedTextureViewSPI
supportsRenderTargetTextureRotation
supportsDynamicControlPointCount
supportsIABHashForTools
supportsBinaryArchives
supportsBinaryLibraries
supportsDeadlineProfile
supportsFillTexture
supportsASTCTextureCompression
supportsExtendedYUVFormats
supportsPublicXR10Formats
supportsSRGBwrites
supportsDepthClipMode
supportsPacked32TextureBufferWrites
supports3DASTCTextures
supportsExtendedXR10Formats
supportsFragmentBufferWrites
supportsCountingOcclusionQuery
supportsBaseVertexInstanceDrawing
supportsIndirectDrawAndDispatch
supportsTessellation
supportsReadWriteBufferArguments
supportsArrayOfTextures
supportsArrayOfSamplers
supportsCombinedMSAAStoreAndResolveAction
supportsMutableTier1ArgumentBuffers
supportsSamplerCompareFunction
supportsMSAADepthResolve
supportsMSAAStencilResolve
supportsMSAADepthResolveFilter
supportsGFXIndirectCommandBuffers
supportsCMPIndirectCommandBuffers
supportsIndirectStageInRegion
supportsIndirectTextures
supportsNorm16BCubicFiltering
supportsTextureOutOfBoundsReads
supportsTextureSwizzle
supportsAlphaYUVFormats
supportsMemoryOrderAtomics
supportsQuadGroup
supportsRenderTextureWrites
supportsImageBlocks
supportsTileShaders
supportsImageBlockSampleCoverageControl
supportsNativeHardwareFP16
supportsPostDepthCoverage
supportsMipLevelsSmallerThanBlockSize
supportsNonUniformThreadgroupSize
supportsReadWriteTextureArguments
supportsReadWriteTextureCubeArguments
supportsTextureCubeArray
supportsQuadShufflesAndBroadcast
supportsConcurrentComputeDispatch
supportsRenderPassWithoutRenderTarget
supportsRasterOrderGroups
supportsRasterOrderGroupsColorAttachment
supportsREVTessellation
supportsLinearTexture2DArray
supportsNonSquareTileShaders
supportsSeparateVisibilityAndShadingRate
supports2DLinearTexArraySPI
supportsLayeredRendering
supportsViewportAndScissorArray
supportsIndirectTessellation
supportsMSAAStencilResolveFilter
supportsStencilFeedback
supportsFP32TessFactors
supportsUnalignedVertexFetch
supportsSIMDGroup
supportsShaderMinLODClamp
supportsSIMDShufflesAndBroadcast
supportsWritableArrayOfTextures
supportsVariableRateRasterization
supportsYCBCRFormats
supportsYCBCRFormatsPQ
supportsYCBCRFormats12
supportsYCBCRFormatsXR
supportsASTCHDRTextureCompression
supportsSparseTextures
supportsSparseHeaps
supportsIndirectWritableTextures
supportsStatefulDynamicLibraries
supportsSharedFunctionTables
supportsRayTracingExtendedVertexFormats
supportsHeapAccelerationStructureAllocation
supportsRayTracingPerPrimitiveData
supportsRayTracingBuffersFromTables
supportsRayTracingAccelerationStructureCPUDeserialization
supportsBlackOrWhiteSamplerBorderColors
supportsMirrorClampToEdgeSamplerMode
supportsSIMDReduction
supportsDepthClipModeClampExtended
supportsTexture2DMultisampleArray
supportsForceSeamsOnCubemaps
supportsFloat16BCubicFiltering
supportsFloat16InfNanFiltering
supportsRTZRounding
supportsAnisoSampleFix
supportsYCBCRPackedFormatsPQ
supportsYCBCRPackedFormats12
supportsYCBCRPackedFormatsXR
supportsBufferBoundsChecking
supportsForkJoin
supportsDevicePartitioning
supportsComputeCompressedTextureWrite
supportsSIMDGroupMatrix
supportsInterchangeTiled
supportsQuadReduction
supportsSIMDShuffleAndFill
supportsBfloat16Format
supportsSparseDepthAttachments
supportsAtomicUlongVoidMinMax
supportsLossyCompression
supportsAtomicFloat
supportsMeshShaders
supportsFunctionPointersFromMesh
supportsBfloat16Buffers
supportsCommandBufferJump
supportsColorSpaceConversionMatrixSelection
supportsPerPlaneCompression
supportsAtomicWaitNotify
supportsStackOverflowErrorCode
supportsRayTracingICBs
supportsPerformanceStateAssertion
bufferRobustnessSupport
deviceCreationFlags
areGPUAssertionsEnabled
setGPUAssertionsEnabled:
commandBufferErrorOptions
setCommandBufferErrorOptions:
isBCTextureCompressionSupported
targetDeviceInfo
targetDeviceArchitecture
isMagicMipmapSupported
halfFPConfig
singleFPConfig
doubleFPConfig
metalAssertionsEnabled
setMetalAssertionsEnabled:
featureProfile
limits
maxFramebufferStorageBits
linearTextureArrayAlignmentBytes
linearTextureArrayAlignmentSlice
maxTileBuffers
maxTileTextures
maxTileSamplers
maxTileInlineDataSize
minTilePixels
maxColorAttachments
maxVertexAttributes
maxVertexBuffers
maxVertexTextures
maxVertexSamplers
maxVertexInlineDataSize
maxInterpolants
maxFragmentBuffers
maxFragmentTextures
maxFragmentSamplers
maxFragmentInlineDataSize
maxComputeBuffers
maxComputeTextures
maxComputeSamplers
maxComputeInlineDataSize
maxComputeLocalMemorySizes
maxTotalComputeThreadsPerThreadgroup
maxComputeThreadgroupMemory
maxLineWidth
maxPointSize
maxVisibilityQueryOffset
minConstantBufferAlignmentBytes
minBufferNoCopyAlignmentBytes
maxTextureWidth1D
maxTextureWidth2D
maxTextureHeight2D
maxTextureWidth3D
maxTextureHeight3D
maxTextureDepth3D
maxTextureDimensionCube
maxTextureLayers
linearTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
iosurfaceReadOnlyTextureAlignmentBytes
deviceLinearTextureAlignmentBytes
deviceLinearReadOnlyTextureAlignmentBytes
maxFunctionConstantIndices
maxComputeThreadgroupMemoryAlignmentBytes
maxInterpolatedComponents
maxTessellationFactor
maxIndirectBuffers
maxIndirectTextures
maxIndirectSamplers
maxIndirectSamplersPerDevice
maxFenceInstances
maxViewportCount
maxCustomSamplePositions
maxVertexAmplificationFactor
maxVertexAmplificationCount
maxTextureBufferWidth
maxComputeAttributes
maxPredicatedNestingDepth
maxConstantBufferArguments
acceleratorPort
supportPriorityBand
sharedMemorySize
dedicatedMemorySize
indirectArgumentBufferCapabilities
isFloat32FilteringSupported
isMsaa32bSupported
isRTZRoundingSupported
defaultTextureWriteRoundingMode
isAnisoSampleFixSupported
isFixedLinePointFillDepthGradientSupported
samplerReductionModeSupport
isLargeMRTSupported
maxRasterizationRateLayerCount
isPlacementHeapSupported
GPUBVHBuilder
requiresRaytracingEmulation
pluginData
setPluginData:
requiresMeshShaderEmulation
currentPerformanceState
registerDevices
supportsPrimitiveType:
newMotionEstimationPipelineWithDescriptor:
indirectArgumentBufferDecodingData
setIndirectArgumentBufferDecodingData:
setupMPSFunctionTable:
resourcePatchingTypeForResourceType:
reserveResourceIndicesForResourceType:indices:indexCount:
reserveGPUAddressRange:
newBufferWithLength:options:gpuAddress:
newBufferWithBytes:length:options:gpuAddress:
newBufferWithBytesNoCopy:length:options:gpuAddress:deallocator:
newBufferWithDescriptor:
newLateEvalEvent
mapShaderSampleBufferWithBuffer:capacity:size:
unmapShaderSampleBuffer
newComputePipelineStateWithDescriptor:error:
newComputePipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithTileDescriptor:error:
newRenderPipelineStateWithTileDescriptor:completionHandler:
newFunctionWithGLCoreIR:functionType:
newFunctionWithGLCoreIR:inputsDescription:functionType:
newFunctionWithGLESIR:functionType:
newFunctionWithGLESIR:inputsDescription:functionType:
newFunctionWithGLIR:functionType:
newFunctionWithGLIR:inputsDescription:functionType:
getShaderCacheKeys
newGLDrawable
getSurfaceMode:width:height:forId:
getBVHBuilderLock
getRawBVHBuilderPtr
setRawBVHBuilderPtr:
newIndirectArgumentEncoderWithArguments:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithDAG:functions:error:
newLibraryWithGraphs:functions:error:
newLibraryWithGraphsSPI:functions:error:
newLibraryWithStitchedDescriptorSPI:error:
newLibraryWithDescriptor:error:
newLibraryWithDescriptor:completionHandler:
newLibraryWithDescriptorSPI:error:
newDagStringWithGraphs:
newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithCIFilters:imageFilterFunctionInfo:error:
newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:
newPipelineLibraryWithFilePath:error:
startCollectingPipelineDescriptors
startCollectingPipelineDescriptorsUsingPrefixForNames:
endCollectingPipelineDescriptors
serializeRenderPipelineDescriptor:
serializeComputePipelineDescriptor:
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
newComputePipelineDescriptorWithSerializedData:deserializationContext:
serializeStructType:
serializeStructType:version:
newStructTypeWithSerializedData:
newTextureLayoutWithDescriptor:isHeapOrBufferBacked:
copyIOSurfaceSharedTextureProperties:
newBufferWithIOSurface:
newIndirectArgumentEncoderWithLayout:
tileSizeWithSparsePageSize:textureType:pixelFormat:sampleCount:
maximumComputeSubstreams
compileVisibleFunction:withDescriptor:destinationBinaryArchive:error:
compileVisibleFunction:withDescriptor:error:
compileVisibleFunction:withDescriptor:completionHandler:
newResourceGroupFromResources:count:
deserializeCompileTimeStats:addToDictionary:
writeMeshShaderEmulatorDataStructureHeader:meshShaderPSO:scalingFactor:
shaderDebugInfoCaching
setShaderDebugInfoCaching:
isSystemDefaultDevice
isASTCPixelFormatsSupported
isFramebufferReadSupported
isQuadDataSharingSupported
sparseTexturesSupport
isRGB10A2GammaSupported
isCustomBorderColorSupported
isClampToHalfBorderSupported
Tc,R,N
gpuAssertionsEnabled
Tc,GareGPUAssertionsEnabled,SsetGPUAssertionsEnabled:
TQ,N
BCTextureCompressionSupported
Tc,R,GisBCTextureCompressionSupported
Tr^{MTLTargetDeviceArch=QI*},R
T@"MTLTargetDeviceArchitecture",R
systemDefaultDevice
Tc,R,GisSystemDefaultDevice
ASTCPixelFormatsSupported
Tc,R,GisASTCPixelFormatsSupported
framebufferReadSupported
Tc,R,GisFramebufferReadSupported
magicMipmapSupported
Tc,R,GisMagicMipmapSupported
Tc,N
Tr^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ},R
Tf,R
T{IndirectArgumentBufferCapabilities=b1b1b1b29},R
quadDataSharingSupported
Tc,R,GisQuadDataSharingSupported
float32FilteringSupported
Tc,R,GisFloat32FilteringSupported
msaa32bSupported
Tc,R,GisMsaa32bSupported
RTZRoundingSupported
Tc,R,GisRTZRoundingSupported
Tq,R
AnisoSampleFixSupported
Tc,R,GisAnisoSampleFixSupported
FixedLinePointFillDepthGradientSupported
Tc,R,GisFixedLinePointFillDepthGradientSupported
largeMRTSupported
Tc,R,GisLargeMRTSupported
RGB10A2GammaSupported
Tc,R,GisRGB10A2GammaSupported
CustomBorderColorSupported
Tc,R,GisCustomBorderColorSupported
ClampToHalfBorderSupported
Tc,R,GisClampToHalfBorderSupported
placementHeapSupported
Tc,R,GisPlacementHeapSupported
T@"MTLGPUBVHBuilder",R
T@"NSDictionary",C,N
Tq,R,N
initialKernelCommandShmemSize
initialSegmentListShmemSize
fragmentFunctionKeyWithRenderPipelineDescriptor:options:previousStateVariant:fragmentKeySize:
vertexFunctionKeyWithRenderPipelineDescriptor:options:nextStageVariant:vertexKeySize:
computeFunctionKeyWithComputePipelineDescriptor:options:keySize:
freeFragmentFunctionKey:fragmentKeySize:
freeVertexFunctionKey:vertexKeySize:
freeComputeFunctionKey:keySize:
fragmentVariantWithCompilerOutput:pipelineStatisticsOutput:
vertexVariantWithCompilerOutput:pipelineStatisticsOutput:
computeVariantWithCompilerOutput:pipelineStatisticsOutput:
newRenderPipelineWithDescriptor:vertexVariant:fragmentVariant:
newComputePipelineWithDescriptor:variant:
openlibISAProfilerDynLibrary
compiler
getScratchPageGPUAddress
getUniqueID:
getUniqueID:clampMax:
.cxx_destruct
.cxx_construct
hwCaps
hwCLCaps
waTable
clHangOnL3ParityErr
computeSSKernelDebugEnable
pipeSelectAfterMediaClear
_fenceGroupPool
bindlessHeapAllocator
samplerHeapAllocator
kernelHeapAllocator
computeKernelHeapAllocator
indirectPatchEncoder
m_IcbMaxPerThreadScratchSpaceInBytes
m_IcbKernelsNeedSLM
pipelineMutex
m_device
m_intelCompiler
m_uniqueID
m_plibISAProfilerDynHandle
m_pCompCountersFn
m_scratchPageGPUAddress
_featureProfile
_depth24Stencil8PixelFormatSupported
_magicMipmapSupported
_metalAssertionsEnabled
_halfFPConfig
_singleFPConfig
_doubleFPConfig
_maxThreadsPerThreadgroup
_maxThreadgroupMemoryLength
_rasterOrderGroupsSupported
_readWriteTextureSupport
_argumentBuffersSupport
_targetDeviceInfo
_targetDeviceExtension
_targetDeviceArchitecture
_quadDataSharingSupported
_pCommonCounterManager
Tc,R,GisMagicMipmapSupported,V_magicMipmapSupported
TQ,R,V_halfFPConfig
TQ,R,V_singleFPConfig
TQ,R,V_doubleFPConfig
Tc,N,V_metalAssertionsEnabled
TQ,R,V_featureProfile
Tc,R,GisQuadDataSharingSupported,V_quadDataSharingSupported
T{?=QQQ},R,V_maxThreadsPerThreadgroup
Tc,R,GisDepth24Stencil8PixelFormatSupported,V_depth24Stencil8PixelFormatSupported
TQ,R,V_readWriteTextureSupport
TQ,R,V_argumentBuffersSupport
Tc,R,GareRasterOrderGroupsSupported,V_rasterOrderGroupsSupported
TQ,R,V_maxThreadgroupMemoryLength
computeFunction
vendorPrivate
setCPPComputePipelineState:
CPPComputePipelineState
imageblockMemoryLengthForDimensions:
functionHandleWithFunction:
newComputePipelineStateWithAdditionalBinaryFunctions:error:
label
device
threadExecutionWidth
staticThreadgroupMemoryLength
gpuHandle
T@"<MTLDevice>",R
pipelineBinaries
functionPointerHandleWithFunction:
functionPointerHandlesWithFunctions:range:
getComputeKernelTelemetryID
textureWriteRoundingMode
allocatedSize
uniqueIdentifier
debugInstrumentationData
resourceIndex
gpuAddress
TQ,R,N
T@"MTLDebugInstrumentationData",R,&,N
descriptor
chalDecodedKernelBinaries
mHashComputePipelineID
mSupportIndirectCommandBuffers
mPsoAddress
mPsoGpuAddress
mPsoSize
mPsoNeedSLM
mPsoBuffer
mPsoHeapOffset
_staticThreadgroupMemoryLength
_maxTotalThreadsPerThreadgroup
_threadExecutionWidth
mDescriptor
mThreadsPerSubSlice
_CPPComputePipelineState
_descriptor
T^{MTLIGComputePipelineState=[3^{CHAL_DECODED_BINARY_INFO}]QB*QII@I@^vQQQ@I},V_CPPComputePipelineState
T@"MTLComputePipelineDescriptor",R,C,N,V_descriptor
contents
getCompilerOutputData
mCompilerOutputMap
mCompilerOutputData
mCompilerOutputSize
mVsCompilerSerialOut
mPsCompilerSerialOut
mHsCompilerSerialOut
mDsCompilerSerialOut
stats
inlineSamplerBindfulOffset
inlineSamplerBindlessOffsets
inlineSamplerBindlessMask
inlineSamplerLocationIndex
inlineConstantEnable
inlineConstantPushOffset
inlineConstantStatelessAddress
vsInfo
psInfo
hsInfo
dsInfo
variantID
kernelPointer1
kernelPointer2
kernelPointer3
scratchPointer1
scratchPointer2
copy
boolValue
_descriptorAtIndex:
pixelFormat
layouts
attributes
objectAtIndexedSubscript:
bufferIndex
offset
format
stepRate
stepFunction
stride
NSAccelDevice
MTLDeviceSPI
MTLDevice
NSObject
MPSPlugin
NSComputePipelineState
MTLComputePipelineStateSPI
MTLComputePipelineState
MTLPipelineStateWithProgramAddressTable
NSFunctionVariant
c24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8Q16
{?=QQ}24@0:8@16
{?=QQ}32@0:8Q16Q24
@24@0:8@16
@32@0:8Q16Q24
@40@0:8r^v16Q24Q32
@48@0:8^v16Q24Q32@?40
@40@0:8@16^{__IOSurface=}24Q32
@32@0:8@16^@24
@40@0:8@16@24^@32
v40@0:8@16@24@?32
v32@0:8@16@?24
@48@0:8@16Q24^@32^@40
v40@0:8@16Q24@?32
c24@0:8Q16
c24@0:8q16
Q24@0:8Q16
v32@0:8^{?=ff}16Q24
@40@0:8@16Q24Q32
@40@0:8@16q24^@32
{?=QQQ}40@0:8Q16Q24Q32
{?=QQQ}48@0:8Q16Q24Q32Q40
v32@0:8^Q16^Q24
{?=QQQ}24@0:8@16
{?=QQ}24@0:8Q16
{?=QQQ}16@0:8
I16@0:8
v72@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56Q64
v64@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56
@"<MTLCommandQueue>"16@0:8
@"<MTLCommandQueue>"24@0:8Q16
{?=QQ}24@0:8@"MTLTextureDescriptor"16
@"<MTLHeap>"24@0:8@"MTLHeapDescriptor"16
@"<MTLBuffer>"32@0:8Q16Q24
@"<MTLBuffer>"40@0:8r^v16Q24Q32
@"<MTLBuffer>"48@0:8^v16Q24Q32@?<v@?^vQ>40
@"<MTLDepthStencilState>"24@0:8@"MTLDepthStencilDescriptor"16
@"<MTLTexture>"24@0:8@"MTLTextureDescriptor"16
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16^{__IOSurface=}24Q32
@"<MTLTexture>"24@0:8@"MTLSharedTextureHandle"16
@"<MTLSamplerState>"24@0:8@"MTLSamplerDescriptor"16
@"<MTLLibrary>"16@0:8
@"<MTLLibrary>"32@0:8@"NSBundle"16^@24
@"<MTLLibrary>"32@0:8@"NSString"16^@24
@"<MTLLibrary>"32@0:8@"NSURL"16^@24
@"<MTLLibrary>"32@0:8@"NSObject<OS_dispatch_data>"16^@24
@"<MTLLibrary>"40@0:8@"NSString"16@"MTLCompileOptions"24^@32
v40@0:8@"NSString"16@"MTLCompileOptions"24@?<v@?@"<MTLLibrary>"@"NSError">32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptor"16^@24
v32@0:8@"MTLStitchedLibraryDescriptor"16@?<v@?@"<MTLLibrary>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineDescriptor"16^@24
@"<MTLRenderPipelineState>"48@0:8@"MTLRenderPipelineDescriptor"16Q24^@32^@40
v32@0:8@"MTLRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
v40@0:8@"MTLRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"32@0:8@"<MTLFunction>"16^@24
@"<MTLComputePipelineState>"48@0:8@"<MTLFunction>"16Q24^@32^@40
v32@0:8@"<MTLFunction>"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
v40@0:8@"<MTLFunction>"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"48@0:8@"MTLComputePipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLComputePipelineDescriptor"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLFence>"16@0:8
@"<MTLRenderPipelineState>"48@0:8@"MTLTileRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLTileRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLRenderPipelineState>"32@0:8@"MTLMeshRenderPipelineDescriptor"16^@24
@"<MTLRenderPipelineState>"48@0:8@"MTLMeshRenderPipelineDescriptor"16Q24^@32^@40
v32@0:8@"MTLMeshRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
v40@0:8@"MTLMeshRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLRasterizationRateMap>"24@0:8@"MTLRasterizationRateMapDescriptor"16
@"<MTLIndirectCommandBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLEvent>"16@0:8
@"<MTLSharedEvent>"16@0:8
@"<MTLSharedEvent>"24@0:8@"MTLSharedEventHandle"16
@"<MTLIOHandle>"32@0:8@"NSURL"16^@24
@"<MTLIOHandle>"40@0:8@"NSURL"16q24^@32
@"<MTLIOCommandQueue>"32@0:8@"MTLIOCommandQueueDescriptor"16^@24
@"<MTLCounterSampleBuffer>"32@0:8@"MTLCounterSampleBufferDescriptor"16^@24
@"<MTLArgumentEncoder>"24@0:8@"<MTLBufferBinding>"16
@"<MTLDynamicLibrary>"32@0:8@"<MTLLibrary>"16^@24
@"<MTLDynamicLibrary>"32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"32@0:8@"MTLBinaryArchiveDescriptor"16^@24
{?=QQQ}24@0:8@"MTLAccelerationStructureDescriptor"16
@"<MTLAccelerationStructure>"24@0:8Q16
@"<MTLAccelerationStructure>"24@0:8@"MTLAccelerationStructureDescriptor"16
{?=QQ}24@0:8@"MTLAccelerationStructureDescriptor"16
@"NSArray"16@0:8
v16@0:8
v48@0:8@16Q24@32@?40
v20@0:8B16
v24@0:8@16
Q24@0:8@16
Q32@0:8@16^Q24
{?=II}16@0:8
@56@0:8^v16Q24@32Q40Q48
@64@0:8^v16Q24@?32@40Q48Q56
@20@0:8I16
c44@0:8^@16Q24^Q32i40
c24@0:8{?=II}16
@32@0:8@16Q24
@32@0:8^v16@24
@40@0:8^v16@24@32
@32@0:8Q16@24
v40@0:8@16r^v24@32
v48@0:8@16r^v24@32@40
c32@0:8@16^@24
@40@0:8@16Q24^@32
@48@0:8@16@24Q32^@40
c36@0:8@16c24^@28
@40@0:8Q16@24^@32
@32@0:8q16^@24
v20@0:8c16
v24@0:8Q16
r^{MTLTargetDeviceArch=QI*}16@0:8
r^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ}16@0:8
f16@0:8
{IndirectArgumentBufferCapabilities=b1b1b1b29}16@0:8
q16@0:8
v24@0:8^{MPSFunctionTable=}16
v40@0:8Q16^Q24Q32
c32@0:8{_NSRange=QQ}16
@40@0:8Q16Q24Q32
@48@0:8r^v16Q24Q32Q40
@56@0:8^v16Q24Q32Q40@?48
c40@0:8^{?=III}16Q24Q32
@32@0:8^v16Q24
@40@0:8^v16@24Q32
^v16@0:8
i44@0:8^Q16^I24^I32I40
^{os_unfair_lock_s=I}16@0:8
@40@0:8@16r^{?=BQ^{?}}24^@32
@32@0:8@16@24
@28@0:8@16I24
@28@0:8@16c24
@24@0:8^{__IOSurface=}16
v48@0:8@16@24@32^@40
v40@0:8@16@24^@32
@32@0:8r^@16Q24
v32@0:8@16@24
v40@0:8^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIII}16@24Q32
@"MTLMotionEstimatorCapabilities"16@0:8
v48@0:8@"MTLRenderPipelineDescriptor"16Q24@"<MTLPipelineCache>"32@?<v@?@"NSArray"@"NSError">40
v48@0:8@"MTLComputePipelineDescriptor"16Q24@"<MTLPipelineCache>"32@?<v@?@"NSArray"@"NSError">40
v24@0:8@"<MTLDeviceSPI>"16
@"<MTLDevice>"16@0:8
Q24@0:8@"MTLTextureDescriptor"16
Q32@0:8@"MTLTextureDescriptor"16^Q24
@"<MTLTexture>"32@0:8Q16Q24
@"<MTLCommandQueue>"24@0:8@"MTLCommandQueueDescriptor"16
@"_MTLIndirectArgumentBufferLayout"24@0:8@"MTLStructType"16
@"<MTLArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
@"<MTLTexture>"56@0:8^v16Q24@"MTLTextureDescriptor"32Q40Q48
@"<MTLTexture>"64@0:8^v16Q24@?<v@?^vQ>32@"MTLTextureDescriptor"40Q48Q56
@"<MTLBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLIndirectRenderCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLIndirectComputeCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLSharedEvent>"20@0:8I16
@"<MTLAccelerationStructure>"32@0:8Q16Q24
@"<MTLAccelerationStructure>"32@0:8@"<MTLBuffer>"16Q24
@"<MTLAccelerationStructure>"40@0:8@"<MTLBuffer>"16Q24Q32
@"<MTLAccelerationStructure>"32@0:8^v16@"MTLAccelerationStructureDescriptor"24
@"<MTLAccelerationStructure>"40@0:8^v16@"NSArray"24@"MTLAccelerationStructureDescriptor"32
@"<MTLAccelerationStructure>"32@0:8Q16@"MTLAccelerationStructureAllocationDescriptor"24
v40@0:8@"<MTLAccelerationStructure>"16r^v24@"MTLAccelerationStructureDescriptor"32
v48@0:8@"<MTLAccelerationStructure>"16r^v24@"NSArray"32@"MTLAccelerationStructureDescriptor"40
@"<MTLDynamicLibrary>"40@0:8@"<MTLLibrary>"16@"MTLComputePipelineDescriptor"24^@32
c32@0:8@"MTLDynamicLibraryDescriptorSPI"16^@24
@"<MTLDynamicLibrary>"32@0:8@"MTLDynamicLibraryDescriptorSPI"16^@24
@"<MTLDynamicLibrary>"40@0:8@"NSURL"16Q24^@32
@"NSArray"32@0:8@"MTLComputePipelineDescriptor"16^@24
@"NSArray"40@0:8@"MTLComputePipelineDescriptor"16Q24^@32
@"NSArray"40@0:8@"MTLFunction"16@"NSArray"24^@32
@"NSArray"48@0:8@"MTLFunction"16@"NSArray"24Q32^@40
c36@0:8@"<MTLLibrary>"16c24^@28
c32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"40@0:8Q16@"NSURL"24^@32
@"<MTLVisibleFunctionTable>"24@0:8@"MTLVisibleFunctionTableDescriptor"16
@"<MTLIntersectionFunctionTable>"24@0:8@"MTLIntersectionFunctionTableDescriptor"16
@"<MTLDeadlineProfile>"24@0:8Q16
@"<MTLPerformanceStateAssertion>"32@0:8q16^@24
@"MTLTargetDeviceArchitecture"16@0:8
@"MTLGPUBVHBuilder"16@0:8
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"<MTLMotionEstimationPipeline>"24@0:8@"MTLMotionEstimationPipelineDescriptor"16
@"NSObject<OS_dispatch_data>"16@0:8
v24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLBuffer>"40@0:8Q16Q24Q32
@"<MTLBuffer>"48@0:8r^v16Q24Q32Q40
@"<MTLBuffer>"56@0:8^v16Q24Q32Q40@?<v@?^vQ>48
@"<MTLBuffer>"24@0:8@"MTLBufferDescriptor"16
@"<MTLLateEvalEvent>"16@0:8
@"<MTLComputePipelineState>"32@0:8@"MTLComputePipelineDescriptor"16^@24
v32@0:8@"MTLComputePipelineDescriptor"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLTileRenderPipelineDescriptor"16^@24
v32@0:8@"MTLTileRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLFunction>"32@0:8^v16Q24
@"<MTLFunction>"40@0:8^v16@"NSObject<OS_dispatch_data>"24Q32
@"<MTLGLDrawable>"16@0:8
v24@0:8@"MTLGPUBVHBuilder"16
@"<MTLIndirectArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLComputePipelineState>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLLibrary>"40@0:8@"NSString"16@"NSArray"24^@32
@"<MTLLibrary>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptorSPI"16^@24
@"NSString"24@0:8@"NSArray"16
@"<MTLLibrary>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLPipelineLibrarySPI>"32@0:8@"NSString"16^@24
v24@0:8@"NSString"16
@"NSData"16@0:8
@"NSObject<OS_dispatch_data>"24@0:8@"MTLRenderPipelineDescriptor"16
@"NSObject<OS_dispatch_data>"24@0:8@"MTLComputePipelineDescriptor"16
@"MTLRenderPipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"MTLComputePipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLStructType"16
@"NSObject<OS_dispatch_data>"28@0:8@"MTLStructType"16I24
@"MTLStructType"24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLTextureLayout>"28@0:8@"MTLTextureDescriptor"16c24
@"NSMutableDictionary"24@0:8@"MTLTextureDescriptor"16
@"<MTLBuffer>"24@0:8^{__IOSurface=}16
@"<MTLIndirectArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
v48@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@"<MTLBinaryArchive>"32^@40
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24^@32
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@?<v@?@"NSError">32
@"<MTLResourceGroupSPI>"32@0:8r^@16Q24
v32@0:8@"NSObject<OS_dispatch_data>"16@"NSMutableDictionary"24
v40@0:8^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIII}16@"<MTLRenderPipelineState>"24Q32
^v48@0:8@16Q24@32^Q40
^v40@0:8@16Q24^Q32
v32@0:8^v16Q24
^{MTLIGRenderPipelineState={IGRenderPipelineStateCommands={SGfx3dStateBlendStatePointers=b8b8b8b3b2b3b1b5b26}{SGfxBlendState={SGfxBlendStateHeader=b19b2b2b1b3b1b1b1b1b1}[8{SGfxBlendStateEntry=b1b1b1b1b1b3b5b5b3b5b5b1b1b1b2b1b22b4b1}]}{SGfx3dStatePsBlend=b8b8b8b3b2b3b7b1b1b5b5b5b5b1b1b1}{SGfx3dStateMultisample=b8b8b8b3b2b3b1b3b1b1b26}{SGfx3dStateSampleMask=b8b8b8b3b2b3b16b16}{SGfx3dStateSamplePattern=b8b8b8b3b2b3b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b8}{SGfx3dStateClip=b8b8b8b3b2b3b8b2b1b5b1b1b1b1b1b11b2b2b2b2b1b1b3b3b8b2b1b1b1b1b1b1b4b1b1b11b11b4}{SGfx3dStatePs=b8b8b8b3b2b3b6b58b7b1b3b1b1b1b2b1b1b8b1b3b1b1b4b6b54b1b1b1b2b1b2b1b2b1b11b9b7b1b7b1b7b9b6b58b6b58}{SGfx3dStatePsExtra=b8b8b8b3b2b3b2b1b1b1b1b1b1b1b14b1b1b1b2b1b1b1b1}{SGfx3dStateWm=b8b8b8b3b2b3b2b1b1b1b1b2b2b1b6b2b2b2b3b1b1b1b1b1b1}{SGfx3dStateVs=b8b8b8b3b2b3b6b58b7b1b4b1b1b2b1b1b8b1b3b1b1b4b6b54b4b6b1b6b3b5b7b1b1b1b7b1b12b9b8b8b5b6b5}{SGfx3dStateVfSgvs=b8b8b8b3b2b3b6b7b2b1b6b7b2b1}{SGfx3dStateVfComponentPacking=b8b8b8b3b2b3b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4}{SGfx3dStateHs=b8b8b8b3b2b3b12b1b1b2b1b1b8b1b3b2b4b4b9b12b1b1b1b6b58b4b6b54b1b3b6b1b6b2b5b1b1b1b1b1b3b32}{SGfx3dStateTe=b8b8b8b3b2b3b1b2b1b2b2b2b2b2b18ff}{SGfx3dStateDs=b8b8b8b3b2b3b6b58b7b1b5b1b1b1b1b1b8b1b3b1b1b4b6b54b4b6b1b7b2b5b7b1b1b1b2b5b1b10b9b2b8b8b5b6b5b6b58}{SGfx3dStateSbe=b8b8b8b3b2b3b5b6b5b1b1b1b1b1b1b6b1b1b2b32b32b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2}{SGfx3dStateSfBackEndSwizzle=b8b8b8b3b2b3[16{SGfx3DSFAttributeControl=b5b1b2b1b2b1b1b1b1b1}]b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4}{SGfx3dStateVertexElements={SGfx3dStateVertexElementsHeader=b8b8b8b3b2b3}[34{SGfxVertexElementState=b12b3b1b9b1b6b16b3b1b3b1b3b1b3b1}]}{SGfx3dStateVfInstancings=[34{SGfx3dStateVfInstancing=b8b8b8b3b2b3b6b2b1b23b32}]}{SGfx3dStateVertexBuffers={SGfx3dStateVertexBuffersHeader=b8b8b8b3b2b3}[33{SGfxVertexBufferState=b12b1b1b1b1b1b6b3b6b64b32}]}[4{sURBStatePackage=(?={?=[2Q]}{?=[4I]}{?=[16C]})[5{SGfx3dStateUrb=b8b8b8b3b2b3b16b9b7}][5{SGfx3dStatePushConstantAlloc=b8b8b8b3b2b3b6b10b5b11}]}]{sConstantStatePackage={SGfx3dStateConstant=b8b1b6b1b8b3b2b3{SGfx3dStateConstantBody=b16b16b16b16QQQQ}}{SGfx3dStateGatherConstant={SGfx3dStateGatherConstantHeader=b8b8b8b3b2b3b1b1b10b4b16b3b1b1b1b17b9}[254{SGfxGatherConstantEntry=b4b4b8}]}IIIIIIIIIIII(?=I{?=b1b1b1b1b1b1b1b1b1b1b1b21})}{sConstantStatePackage={SGfx3dStateConstant=b8b1b6b1b8b3b2b3{SGfx3dStateConstantBody=b16b16b16b16QQQQ}}{SGfx3dStateGatherConstant={SGfx3dStateGatherConstantHeader=b8b8b8b3b2b3b1b1b10b4b16b3b1b1b1b17b9}[254{SGfxGatherConstantEntry=b4b4b8}]}IIIIIIIIIIII(?=I{?=b1b1b1b1b1b1b1b1b1b1b1b21})}{sConstantStatePackage={SGfx3dStateConstant=b8b1b6b1b8b3b2b3{SGfx3dStateConstantBody=b16b16b16b16QQQQ}}{SGfx3dStateGatherConstant={SGfx3dStateGatherConstantHeader=b8b8b8b3b2b3b1b1b10b4b16b3b1b1b1b17b9}[254{SGfxGatherConstantEntry=b4b4b8}]}IIIIIIIIIIII(?=I{?=b1b1b1b1b1b1b1b1b1b1b1b21})}{sConstantStatePackage={SGfx3dStateConstant=b8b1b6b1b8b3b2b3{SGfx3dStateConstantBody=b16b16b16b16QQQQ}}{SGfx3dStateGatherConstant={SGfx3dStateGatherConstantHeader=b8b8b8b3b2b3b1b1b10b4b16b3b1b1b1b17b9}[254{SGfxGatherConstantEntry=b4b4b8}]}IIIIIIIIIIII(?=I{?=b1b1b1b1b1b1b1b1b1b1b1b21})}{IGPixelShaderInfo=^^?^v^v^v^v^v^vBIIIIIIIIIIIIIQ^vII{gtpinShaderInformation_s=QI*}{inlineSamplerStateInfo_s=^II^I}I[3^v][3I][3{gtpinShaderInformation_s=QI*}]}{IGVertexShaderInfo=^^?^v^v^v^v^v^vBIIIIIIIIIIIIIQ^vII{gtpinShaderInformation_s=QI*}{inlineSamplerStateInfo_s=^II^I}I}{IGHullShaderInfo=^^?^v^v^v^v^v^vBIIIIIIIIIIIIIQ^vII{gtpinShaderInformation_s=QI*}{inlineSamplerStateInfo_s=^II^I}I}{IGDomainShaderInfo=^^?^v^v^v^v^v^vBIIIIIIIIIIIIIQ^vII{gtpinShaderInformation_s=QI*}{inlineSamplerStateInfo_s=^II^I}I}{IGBindlessFallback=BIIITQQQIIII[128{IGBindlessFallbackElement=III}][16{IGBindlessFallbackElement=III}][35{IGStatelessFallbackElement=IQIi}]}{IGBindlessFallback=BIIITQQQIIII[128{IGBindlessFallbackElement=III}][16{IGBindlessFallbackElement=III}][35{IGStatelessFallbackElement=IQIi}]}{IGBindlessFallback=BIIITQQQIIII[128{IGBindlessFallbackElement=III}][16{IGBindlessFallbackElement=III}][35{IGStatelessFallbackElement=IQIi}]}{IGBindlessFallback=BIIITQQQIIII[128{IGBindlessFallbackElement=III}][16{IGBindlessFallbackElement=III}][35{IGStatelessFallbackElement=IQIi}]}[16{sSamplerToTextureMap=C[128C]}][16{sSamplerToTextureMap=C[128C]}][16{sSamplerToTextureMap=C[128C]}][16{sSamplerToTextureMap=C[128C]}]BBB[5B]BBBBBBBBIIIIIIIIQQQQIIIIIiQ*{IGIndirectCommandData=QQQQQQQQQQ}}^{IGPixelShaderInfo}^{IGVertexShaderInfo}^{IGHullShaderInfo}^{IGDomainShaderInfo}^{_WA_TABLE}^{_IntelHwCapsInfo}iiIIIIIQ@}40@0:8@16@24@32
B16@0:8
^{MTLTargetDeviceArch=QI*}16@0:8
Q20@0:8i16
Q28@0:8i16Q20
{_IntelHwCapsInfo="fRevisionID"I"fRevisionID_PCH"I"fDeviceID"I"fDeviceID_PCH"I"fGpuSku"I"fExecutionUnitCount"I"fPixelShaderMinThreads"I"fVertexShaderMaxThreads"I"fHullShaderMaxThreads"I"fDomainShaderMaxThreads"I"fGeometryShaderMaxThreads"I"fPixelShaderMaxThreads"I"fMaxFrequencyInMhz"I"fMinFrequencyInMhz"I"fNumSubSlices"I"fNumSlices"I"fL3CacheSizeInKb"I"fL3BankCount"I"fMaxFillRate"I"fMaxEuPerSubSlice"I"fDisplayTileMode"I"fLLCSizeInBytes"I""{?="fHasEDRAM"b1"fSliceShutdown"b1"fBlitLibEnable"b1"fSurfaceSizeBasedBlitDestinationBypassLLC"b1"fSurfaceSizeBasedColorBufferLLCBypass"b1}}
{_IntelHwCLCapsInfo="fTotalThreadCount"I"fNumEusPerSubSlice"I"fThreadsPerSubSlice"I"fMaxWorkGroupSize"I}
{_WA_TABLE="WaIncreaseDefaultTLBEntries"b1"WaDisSvClkGating"b1"WaDisable_MASF_ClkGating"b1"WaDisable_ISC_ClkGating"b1"WaDisable_VFE_ClkGating"b1"WaDisable_Clipper_ClkGating"b1"WaDisable_VF_ClkGating"b1"WaDisable_GS_ClkGating"b1"WaTempDisableDOPClkGating"b1"WaDisable_RCPH_RCC_RCZ_ClkGating"b1"WaDisable_ECOSKPD_Chicken_Bits"b1""b0"Wa1280Cursor"b1"WaSyncFlush"b1"Wa1stBlt"b1"WaSetupBlt"b1"WaTextImmBlt"b1"WaFlipStatus"b1"WaIIRReadEnable"b1"WaIsrFlipStatusRevert"b1"WaUserToggleIir"b1"WaDisableAsynchMMIOFlip"b1"WaNonPipelinedStateCommandFlush"b1"WaIlkEnableBothDispAndSPR"b1"WaLoadHDCPKeys"b1"WaExtendedWaitForFlush"b1"WaKVMNotificationOnConfigChange"b1"WaBitBashingForILKHDCP"b1"WaBitBashingForILKEDID"b1"WaReadAksvFromDebugRegs"b1"WaDPHDMIBlankOutIssueOnSamePort"b1"WaPruneModeWithIncorrectHsyncOffset"b1"WaEnablePartialDPSFeatures"b1"WaEnableIPLLinkLaneReversal"b1"WaSDVORxTerminationWA"b1"WaStrapStateInvalidforeDPifDisabled"b1"WaIPLPLLandDPLLRecoveryWA"b1"WaDisablePF3BeforePipeDisable"b1"WaeDPPLL162MhzWA"b1"WaEnableVGAAccessThroughIOPort"b1"WaIlkFlipMMIO"b1"WaEnableDPIdlePatternforOnlyx4Lane"b1"WaDisableRgbToYuvCSCInCenteredMode"b1"WaYuvToRgbCSCConversionDisable"b1"WaEnableClockGatingForMiWaitForEvent"b1"WaEnableVDIPerformanceChickenBits"b1"WaSimDisableVblankInterrupt"b1"WaConvertAlphaToXORCursorForxvYCC"b1"WaGTContextSaveIssue"b1"WaForceVDD"b1"WaSNBA0VSwingPreEmphasisSelect"b1"WaSNBA0FDITxPLLOn"b1"WaSNBIPLLaneCountSwitch"b1"WaGTRbRvSyncIssue"b1"WaGTRbsyncReadIssue"b1"WaSaveLastRingObj"b1"WaUseStaticWMLatencyValues"b1"WaDisableeDPAfterEnableFDIPLL"b1"WaEnableNullVSDPkt"b1"WaSyncFlushVTDFix"b1"WaFDITrainLink"b1"WaFDIAutoLinkSetTimingOverrride"b1"DisableSpritePassThroughMode"b1"WaFP16GammaEnabling"b1"WADP0ClockGatingDisable"b1""b0"Wa2DNegativeStart"b1"WaNoAsyncFlip"b1"WaBatchBufferForWaitOnEvent"b1"WaOvlFastHDownScale"b1"WaOverlayPitch"b1"WaEnableVblank"b1"Wa2ndSpritePanning"b1"WaOvHunitCounter"b1"WaOvlPipeSwitching"b1"WaPackedtoPlanar"b1"WaDisableDdbmunitClkGating"b1"WaDisableSpriteClkGating"b1"WaSpriteAsOverlay"b1"WaNoAsyncFlip180degree"b1"WaToggleRenderClockThrottle"b1"WaDisableOverlayFlipsInAwayMode"b1"WaProgramDisplayPlaneWMforSprite"b1"WaHas2CSLStubDisplay"b1"WaDisableYTileForS3D"b1"WaDPAfeOverride"b1""b0"WaOCLDisableMaxThreads"b1"WaOCLDisableBarriers"b1"WaOCLDisableImageWrites"b1"WaOCLDisableA64Messages"b1"WaOCLLimitCurbeSize"b1"WaOCLAddMSFlushForPreemption"b1"WaOCLEnableFMaxFMinPlusZero"b1"WaOCLUseLegacyTiming"b1"WaMaskUnmaskRegisterWriteForMBOinFlip"b1"WaEnsureLP7WMInPSR2"b1"WaDisableL3ErrorDetectionHangOnError"b1"WaOCLGAMRepeaterBug"b1"WaEnablePooledEuFor2x6"b1""b0"WaStallBeforePostSyncOpOnGPGPU"b1"WaForceCsStallOnTimestampQuery"b1"WaForceCsStallOnTimestampQueryOrDepthCount"b1"WaMSFWithNoWatermarkTSGHang"b1"WaAtomicFlushOnInterfaceDescriptor"b1"WaHwzFlushStrDword"b1"WaDisableSecondLevelVertexCache"b1"WaDisableHwbClockGating"b1"WaDisableDagRounding"b1"WaHwbRingSize"b1"WaBorderColorChromaKey"b1"WaMixedModeForceRead"b1"Wa4DTextureCoordinates"b1"WaMixedModeLinear"b1"WaZBiasUseVtxTransform"b1"WaFlushGWB"b1"WaEndSceneNoPrimitives"b1"WaConfirmHWBOOM"b1"WaAsyncEndSceneBPLCorrupt"b1"WaFastClearContextSwitch"b1"WaHWBExpandOBR"b1"WaIndexVertexNOP"b1"WaIndirectVerticesPRB"b1"WaHWBStaleSlowState"b1"WaDisableA2R10G10B10Target"b1"WaDisbaleIndirectLoadWideMode"b1"WaZoneInitCorruption"b1"WaFlushGWBOnBPLReset"b1"WaOneOverW"b1"WaIdleRingForSyncFlush"b1"WaWIZSingleSubspanDispatch"b1"WaDisable_RenderCache_OperationalFlush"b1"WaEnable_BugFix_RCCAllocation"b1"WaDisable_Suppress_CacheableIndicator"b1"WaDisable_WIZUnit_ScratchSpace"b1"WaStateless_Accesses_Allowed"b1"WaMiSetContext_Hang"b1"Wa_StateBaseAddress_Hang"b1"WaDisable_TexturesOnlyForA0"b1"WaDisable_Trickle_Feed"b1"WaDisableHWBAutoReportHead"b1"WaRestoreInhibit"b1"WaEnableMTConstantReadFix"b1"Wa_MI_SET_CONTEXT_Hang"b1"WaDisableStencilBufferTestOnStencilBufferDisable"b1"WaDontTurnOffCRClkInCStates"b1"WaNoopHWContextLoadRegImm"b1"WaPPGTTSteeringRegisterPresent"b1"WaVSHWBug_Option1_DisableVertexCache"b1"Wa_CS_URB_STATE_Hang"b1"WaUseMediaEngineForPaging"b1"WaInitAuxBuffersToTiled"b1"WaDisableRenderCachePipelinedFlush"b1"WaTimedSingleVertexDispatch"b1"WaDisableFastClear"b1"WaDisableHiZ"b1"WaGTDisableHiZ"b1"WaDisableHiZMSAAPerPixelLineAAEnabled"b1"WaDisableFastClearYOffsetNonX4Aligned"b1"WaDepthStallAfterFastClear"b1"WaVertexShader96And128CacheEntries"b1"WaClampSamplerArrayIndex"b1"WaSampleSeparateStencil"b1"WaForce8PSThreads"b1"WaLimitWmMaxNumThreads"b1"WaDisablePerPixelMSAA"b1"WaDisableAlphaToCoverage1x"b1"WaDisableAlphaToCoverage4x"b1"WaLd2dmsSurfaceArrayOfSize1"b1"WaDisableAlphaToCoverageDither"b1"WaForcePushConstantEvenReadLength"b1"WaDisableSQRORDClockGating"b1"WaCorrectionForCosine0"b1"WaDisableHeaderBypassForPSDepthOutput"b1"WaForceHeaderForKillPixInstructions"b1"WaDecomposePowToLogMulExp"b1"WaCSStallOnAllPipeControls"b1"WaMultisampledArrays"b1"WaDisable128bppRTClears"b1"WaGsPsdHang"b1"WaForceThreadSwitchWhenUpdateMRFBeforeSend"b1"WaFlushAfterPerspectiveDivideStateChange"b1"WaDisableSampleFromStencil"b1"WaReadAfterWriteHazard"b1"WaDisableMadSrc0Replicate"b1"WaSamplerChannelDisables"b1"WaSFCorruption"b1"WaCsStallBeforeStateCacheInvalidate"b1"WaCsStallAtEveryFourthPipecontrol"b1"WaUAVTypedWriteOverlapping"b1"WaUAVTypedReadOverwritesAllDestChannels"b1"WaPSInvocation"b1"WaUseOnlySIMD8UntypedRead"b1"WaDisableMscWithGS"b1"WaSurface3DForceHorizontalAlignment4"b1"WaUVoffsetToZeroForLd2dms"b1"WaMsaaDisableMinArrayOffset"b1"WaEnableAllCubeFacesForNonCubeSurfaces"b1"WaFlushStateCacheOnDepthRangeChange"b1"WaPerThreadScratchSpaceInGPGPUIncrease"b1"WaUseFDP3InsteadOfFDP2"b1"WaApplyAbsToFrcInstruction"b1"WaForPlusInfRoundingModeFrcInstruction"b1"WaDsNeedMoreThan138UrbHandlesAllocated"b1"WaEmulateIBFEInstrucion"b1"WaCsStallBeforeWriteCacheFlush"b1"WaShaderCalculateResourceOffsets"b1"WaUseThreadPayloadCompression"b1"WaEnableTransformedVerticesHWClipping"b1"WaDisableHiZPlanesWhenMSAAEnabled"b1"WaUnlitCentroidInterpolation"b1"WaDisableMcsForSINTFormat"b1"WaAddCallToEOTEnabled"b1"WaAlignDrawScissorRectTo2x2MSAA"b1"WaTimestampMaskDefectiveBits"b1"WaDX9MSAARasterization"b1"WaZeroUnusedSampleDGradientsParameters"b1"WaAlphaToOneOGL"b1"WaDisableMsaaFastClear"b1"WaDisableMcsFastClear"b1"WaDummyRenderForAdderIssue"b1"WaROBUnitVertexCorruption"b1"WaOGLGSVertexReordering"b1"WaOGLGSVertexReorderingTriStripAdjOnly"b1"WaGsvEnableSWTurbo"b1"WaGsvDisableTurbo"b1"WaGatherEUTimestampDispersion"b1"WaXScaledFormatConversion"b1"WaCMPInstFlagDepClearedEarly"b1"WaForceUAVOnlyToFalse"b1"WaAlphaCompareAlwaysWhenAlphaTestDisabled"b1"WaScalarAtomic"b1"WaVSThreadDispatchOverride"b1"WaL3UseSamplerForLoadDualConstant"b1"WaL3UseSamplerForVectorLoadScatter"b1"Wa1DSurfaceSIMD4x2ArrayIndexInRAddress"b1"WaIndexBufferOffsetOverflow"b1"WaBreakSimd16TernaryInstructionsIntoSimd8"b1"WaGSPullModelForPatchlistInputTopology"b1"WaGSSingleDispatchModeForTriangleInput"b1"WaForceSIMD8ForBFIInstruction"b1"WaDisable4x2SubspanOptimization"b1"WaBreakSimd16InstWhenAccIsUsedIntoSimd8"b1"WaSendMiFlushAfterMediaStateFlush"b1"WaAvcCabacDistortionBasedMinQp"b1"WaEnableDummyMovInGpgpuContextSave"b1"WaClearNotificationRegInGpgpuContextSave"b1"WaGrfDepClearOnOutstandingSamplerInGpgpuContextSave"b1"WaStoreAcc2to9InAlign16InGpgpuContextSave"b1"WaGrfDependecyClearInGpgpuContextRestore"b1"WaRestoreFCandMSGRegistersFromUpperOword"b1"WaRestoreFC4RegisterDW0fromDW1"b1"WaRestoreFc0RegistersWithOffset"b1"WaGrfScoreboardClearInGpgpuContextSave"b1"WaClearFlowControlGpgpuContextSave"b1"WaClearCr0SpfInGpgpuContextRestore"b1"WaDisableDbg0Register"b1"WaDisableRSBeforeBTPoolDisable"b1"WaUseRSChickenFor3DMidBatchPreempt"b1"WaNotifRegSwapInGpGpuContextRestore"b1"WaStoreSlmOffsetInSRDuringGpGpuPreemption"b1"WaDisableUnsafeArithmeticOperationRefactoring"b1"WaSampleGCToSampleLC"b1"WaResetMSAAStates"b1"WaCMPInstNullDstForcesThreadSwitch"b1"WaCMPInstNullDstBreaksR0Scoreboarding"b1"WaVSPreventFullTrackingFifo"b1"WaVFInvalidate"b1"WaForceHeaderForDualSourceBlendHi"b1"WaFixedFormatConversion"b1"WaForceHSPullModel"b1"WaPreventHSTessLevelsInterference"b1"WaAvoidDomainShaderCacheStall"b1"WaIndirectDispatchPredicate"b1"WaSetTriLinearFilterForLODPreclamp"b1"WaCSScratchSpaceSize"b1"WaCSNoWayToLimitScratchSpace"b1"WaInsertNopToHaltDestination"b1"WaForceL3Serialization"b1"WaHizAmbiguate8x4Aligned"b1"WaHizAmbiguateRequiredNonAlignedBeforeRender"b1"WaFlushWriteCachesOnMultisampleChange"b1"WaForceTypeConvertF32To16ToAlign1"b1"WaAdditionalMovWhenSrc1ModOnMulMach"b1"WaForceMulSrc1WordToAlign1"b1"WaDoNotPushConstantsForAllPulledGSTopologies"b1"WaCallForcesThreadSwitch"b1"WaThreadSwitchAfterCall"b1"WaDisableSIMD32PixelShaderDispatchFor2xMSAA"b1"WANOPBeetweenIndirectAdressingAndBranch"b1"WaDX9MSAAonDX10HW"b1"WaInvalidateAndHDCDeadlock"b1"WaL3WriteIncomplete"b1"WaMiUrbClearAfterMiSetContext"b1"WaForceNonZeroSBEOutputAttributeCount"b1"WaScoreboardStallBeforeStateCacheInvalidate"b1"WaDoNotUseMIReportPerfCount"b1"WaForceClearBindingTableEntries"b1"WaLimitMaxPSThreadsToPhysical"b1"WaLimitMaxHSUrbHandles"b1"WaA32StatelessMessagesRequireHeader"b1"WaNoA32ByteScatteredStatelessMessages"b1"WaNearestFilterLODClamp"b1"WaSingleSubspanDispatchOnAALinesAndPoints"b1"WaLSLMAddressDisable"b1"WaPipelineFlushCoherentLines"b1"WaDisableAuxCCSForMRTBlend"b1"WaUrbAtomics"b1"WaFlushOpOnCSStall"b1"WaPSRandomCSNotDone"b1"WaDCFlushOnL3CacheConfig"b1"WaLimitSLMSizeTo16KBOnA0"b1"WaLimitSLMSizeTo8KBOnB0"b1"WaBasicCompilationForDPInstructions"b1"WaHalfFloatSelNotAllowedWithSourceModifiers"b1"WaLowPrecWriteRTOnlyFloat"b1"WaBreakF32MixedModeIntoSimd8"b1"WaDisableDSDualPatchMode"b1"WaDispatchGRFHWIssueInGSAndHSUnit"b1"WaDisallow64BitImmMov"b1"WaDisallowDFImmMovWithSimd8"b1"WaDisableNoSrcDepSetBeforeEOTSend"b1"WaDstSubRegNumNotAllowedWithLowPrecPacked"b1"WaDisableSendsSrc0DstOverlap"b1"WaDisableSIMD16On3SrcInstr"b1"WaHeaderRequiredOnSimd16Sample16bit"b1"WaLodRequiredOnTypedMsaaUav"b1"AccWrEnNotAllowedToAcc1With16bit"b1"WaSendsSrc1Length0NotAllowed"b1"WaDisableEuBypassOnSimd16Float16"b1"WaDisableEuBypassOnSimd16Float32"b1"WaDisableThreadDispatchToEU0"b1"WaSrc1ImmHfNotAllowed"b1"WaReturnZeroforRTReadOutsidePrimitive"b1"WaCselUnsupported"b1"WaDisableDSCaching"b1"WaSubtract1FromMaxNoOfThreads"b1"WaSendColorCalcAndBlendStateTogether"b1"WaEmitVtxWhenOutVtxCntIsZero"b1"WaCsStallBeforeURBVS"b1"WaAlignIndexBuffer"b1"WaGuardbandSize"b1"WaRCCByteSharingDisableFor3DRT"b1"WaDisable4x2SubSpanOptimizationForDS"b1"WaFixCentroidInterpolationRTIR16X"b1"WaDisableIndirectDataForGPGPUWalker"b1"WaDisableIndirectDataAndFlushGPGPUWalker"b1"WaDisableIndirectDataForIndirectDispatch"b1"WaSendMediaStateFlushAfterGPGPUWalker"b1"WaDisableDeferredDeallocation"b1"WaDisablePushConstantHSGS"b1"WaEnableAllWriteChannelMask"b1"WaGather4WithGreenChannelSelectOnR32G32Float"b1"WaStateBindingTableOverfetch"b1"WaIncreaseL3CreditsForVLVB0"b1"WaUAVCoherency"b1"WAInsertNOPBetweenMathPOWDIVAnd2RegInstr"b1"WaCsStallBeforeEnabling3DstateHS"b1"WaCsStallBefore3DStateVS"b1"WaSendMiRsStoreDataImmBeforeRsSyncCommand"b1"WaB0ParityHangDisable"b1"WaDisableObjectLevelPreemptionDuringUAVDrawCall"b1"WaFlushBefore3DStateConstant"b1"WaSendExtraRSGatherConstantAndRSStoreImmCmds"b1"WaNoPreemptionWhenBarrierEnabled"b1"WaDisablePreemptionMMIOWhenBarrierEnabled"b1"WaAvoidRCZCounterRollover"b1"WaPreemptOnArbCheckOnly"b1"WaTSGStarvation"b1"WaInhibitPreemptionForOCLProfiling"b1"WaMediaStateFlushBeforePipeControl"b1"WaUAVDisableMinimumArrayElement"b1"WaDisableNonSlm"b1"Wa4x4STCOptimizationDisable"b1"WaEnsureMemCoherencyBeforeLoadRegisterMem"b1"WaClearCCStatePriorPipelineSelect"b1"WaSendDummyVFEafterPipelineSelect"b1"WaSendMIFLUSHBeforeVFE"b1"WaDisableGunitClockGating"b1"WaSetMaskForGfxBusyness"b1"WaInvalidateROCacheOnCxtSwitch"b1"WaSetRbWaitForAsyncFlip"b1"WaDisableSDEUnitClockGating"b1"WaDisableMidBatchPreempt"b1"WaDisablePerCtxtPreemptionGranularityControl"b1"WaEnablePreemptionGranularityControlByUMD"b1"WaDisableSemaphoreAndSyncFlipWait"b1"WaClearSlmSpaceAtContextSwitch"b1"WaFlushCoherentL3CacheLinesAtContextSwitch"b1"WaPerCtxtBbInvalidateRoCaches"b1"WaSetPipeControlCSStallforGPGPUAndMediaWorkloads"b1"WaDisableFenceDestinationToSLM"b1"WaDisableLSQCROPERFforOCL"b1"WaForceMinMaxGSThreadCount"b1"WaAtomicsForceCoherency"b1"WaDisableLowPrecisionWriteRTRepData"b1"WAResetN0AfterRenderTargetRead"b1"WaDisablePreemptionOnSimd32"b1"WaSetDepthToArraySizeForUAV"b1"WaIndependentAlphaBlend"b1"WaSendPushConstantsFromBTP"b1"WaSendPushConstantsFromMMIO"b1"WaSendPipeControlWithProtectedMemoryDisable"b1"WaCheckResourceFormatForNFSRivals"b1"WaDisableThreadPoolForFallout4"b1"WaNullStateDepthBufferAsD16And2d"b1"WaAvoid16KWidthForTiledSurfaces"b1"WaDisableRsInPostRestoreWaBb"b1"WaInsertGSforConstInterpolatedTrailingVertex"b1"WaForceCB0ToBeZeroWhenSendingPC"b1"WaDefaultCrossAndSubSliceHashingForSimplePS"b1"WaResetPSDoesNotWriteToRT"b1"WaPipeControlBeforeGpgpuImplicitFlushes"b1"WaEnableDSCacheWorkAround"b1"WaSampleOffsetIZ"b1"WaFlushHangWhenNonPipelineStateAndMarkerStalled"b1"WaEnableVoidExtentBlockPatchingforASTCLDRTextures"b1""b0"WaPcSlpcUseBxtGucBinaryVer1219"b1"WaRccHangDisableMCSUnrefined"b1"WaDisableGafsUnitClkGating"b1"WaToEnableHwFixForPushConstHWBug"b1"WaBlcOutputHighInverterPWMFreq"b1"Wa32bppWmWithFbc"b1"WaFbcAsynchFlipDisableFbcQueue"b1"WaFbcDisabledForOverlaySprite"b1"WaFbcLimitedTo1MBStolenMemory"b1"WaFbcOnlyForNativeModeOnLFP"b1"WaFbcOnly1to1Ratio"b1"WaFbcDisableDpfdClockGating"b1"WaFbcDisable"b1"WaFbcDisableDpfcClockGating"b1"WaFbcFlickers"b1"WaDisableFbcOnFixedMuxless"b1"WaFbcWaitForVBlankBeforeEnable"b1"WaFbcNukeOn3DBlt"b1"WaFbcExceedCdClockThreshold"b1"WaFbcCdClkFreqTooLow"b1"WaFbcDisableRleCompressionForVTD"b1"WaIpsDisableOnCdClockThreshold"b1"WaFbcRequireStrideBeMultipleOfCompressionRatio"b1"WaFbcDisableOnCompressionRatio2Or4"b1"WaFbcDisableOnNonZeroPlanePosition"b1"WaFbcProgramYTileCbStrideRegister"b1"WaFbcProgramLinTileCbStrideRegister"b1"WaFbcInvalidateCompressedLines"b1"WaFbcTurnOffFbcWatermark"b1"WaFbcHighMemBwCorruptionAvoidance"b1"WaFbcWakeMemOn"b1"WaFbcTurnOffFbcWhenHyperVisorIsUsed"b1"WaFbcNukeOnHostModify"b1"WaDisableIPS"b1"WaIpsWaitForPcodeOnDisable"b1"WaIpsDisableOnAsyncFlips"b1"WaPsrExitBlockedOnFbcNuke"b1"WaGsvGtFreq200MhzMultiple"b1"WaGsvBringDownFreqInRc6"b1"WaSkipDisplayPowerGating"b1"WaFbcEnableDuringAeroModeOnly"b1"WaFbcDontLimitCfbAllocationTo2K"b1"WaOvlSpriteCxSR"b1"WaDisableHpllOffDuringSr"b1"WaCxSRDisable"b1"WaCxSRUseFixedWmark"b1"WaCxSROnAndOffForVistaCursorSupport"b1"WaCxSRDisableDparbClockGating"b1"WaCxSRDisableHpllPowerDownForMedia"b1"WaCxSRDisableFBCWaterMark"b1"WaCxSRLimitFBCWaterMark"b1"waCxSRLimitFifo"b1"WaCxSRDisableDparbFix"b1"WaDelayFrameStart"b1"WaEmiBurstSizeMitigation"b1"WaCxSRDisableLp2Watermarks"b1"WaCxSRWmLatencyUnitIdentity"b1"WaSyncFlushWaitOnSyncFlushBit"b1"WaPsrUseSwCursor"b1"WaUseSwCursorInCommandMode"b1"WaPsrDisableFbcAndIps"b1"WaPsrForceUseLinkDisableMode"b1"WaRS2RenderRegReadHangBug"b1"WaRsForcewakeWaitTC0"b1"WaRsForcewakeDelayAckPoll"b1"WaDisableMarkerFlow"b1"WaDisableMarkerFlow2"b1"WaRsConsecutiveOptimizedWrite"b1"WaRsUseTimeoutMode"b1"WaGsvAxSteppingRegisters"b1"WaGsvHighRingFreqScalingForUlt"b1"WaRsDontPollForAckOnClearingFWBits"b1"WaRC6PavpDisableDuringKeyExchange"b1"WaGsvLimitCpuTurboInRp0"b1"WaDPSTHistogramErrorTolerance"b1"WaRsDisplayPMReq"b1"WaRsPkgCStateDisplayPMReq"b1"WaRsRCSIdleBlockedInPSMI"b1"WaRsForceSingleThreadFW"b1"WaRsDisableDecoupledMMIO"b1"WaRsClearFWBitsAtFLR"b1"WaSyncSameMMIORegAccess"b1"WaRsDoubleRc6WrlWithCoarsePowerGating"b1"WaRsDisableCoarsePowerGating"b1"WaDpstDisableDlcdGating"b1"WaIpsEnableOutsideOfVblankRegion"b1"WaIpsEnableOnMediaPlaybackOnly"b1"WaIpsDisableOnPaletteAccess"b1"WaUsePipeAFlipTimestamp"b1"WaTurboEnergyCounterMask"b1"WaRc6Ppgtt"b1"WaLaceIEModeLUT"b1"WaLaceRAMGatedClockForLPDSTAutoIndexing"b1"WaLaceIEWriteDuringPSR"b1"WaDisablePwrmtrEvent"b1"WaDisableDPSTWhenPipeBandCActive"b1"WaSkipWOPCMSetupPavp"b1"WaEnableTiledResourceTranslationTables"b1""b0"WaDisableCpClockGating"b1"WaDisableReorderBuffer"b1"WaDisableL2CacheClockGating"b1"WaLowPriorityGracePeriodDisable"b1"WaMiBatchBuffer"b1"WaBlueCorruption"b1"WaClockGatingDisable"b1"WaDisableNearestTexelRound"b1"WaFBCSetupUseRing"b1"WaFBCSetStopCompOnModify"b1"WaFBCDisablePerAlvRev"b1"WaFlushGWBBeforeReads"b1"WaDisableSnoopOnCacheWriteCyl"b1"WaDisable36BitPhysAddress"b1"WaUpdateOnCacheLineBoundary"b1"WaUpdateBCSOnCacheLineBoundary"b1"WaDisableCSUnitClockGating"b1"WaEnablePhysAddrForMiInstr"b1"Wa_Disable_C0_Fix_For_Req_Perf"b1"WaDisableCrClkThrottlingDuringC2"b1"WaClearRingBufHeadRegAtInit"b1"WaForcePhysAddrForMiStoreDword"b1"WaDisIndStatePointersForSubmit"b1"WaDpst4DIETMultiplicativeMode"b1"WaDisableMediaReset"b1"WaRenderResetOnly"b1"WaDmaBufferPadding"b1"WAGPUResetPCIRead"b1"WaInitStopRenderWatchdogCounter"b1"WaMediaResetMainRingCleanup"b1"WaVcpClkGateDisableForMediaReset"b1"WaDisableVfeClockGating"b1"WaDisableEmUnitClockGating"b1"WaDisableStcUnitClockGating"b1"WaDisableMtmUnitClockGating"b1"WaDisableHizUnitClockGating"b1"WaDisableSamplerL2L1BandwidthPerformance"b1"WaDisableTDSandwichDispatchMode"b1"WaDisableNonLRAReplacementPolicy"b1"WaDisableRCZMUnitClockGating"b1"WaDisableVS0MUnitClockGating"b1"WaDisableSFMUnitClockGating"b1"WaIlkMariUnitOverrun"b1"WaIlkFlushAfterMiSetContext"b1"WaDoNotInhibitDepthCacheFlush"b1"WaPipeControlISCFlushDisable"b1"WaDisableSVSMUnitClockGating"b1"WaDoNotUseSingleThreadGSMode"b1"WaFlushBeforeGSDisabled"b1"WaDisableHiZNonPromoted"b1"WaNoCubeCornerAddressMode"b1"WaIlkEnableDisableSuspendFlush"b1"WaRestrictURBWriteMsgLength"b1"WaDisableConstantCacheDualScattered"b1"WaDisableConstantCache"b1"WaNoPipelinedURBFenceChange"b1"WaDisableStcLraEviction"b1"WaSendPipelinedStateWithPsPushConstants"b1"WaDisableGsDwordScatteredWrites"b1"WaFlushStateCacheOnViewportScissorEnable"b1"WaSendAllDepthState"b1"WaCsStallPriorToDepthState"b1"WaDepthStallAfterAnyPSState"b1"WaSendPipeControlBeforePushConstantUpdate"b1"WaPixelShaderKillPixelHang"b1"WaDepthBiasCsStall"b1"WaValign2For96bppFormats"b1"WaValign2ForR8G8B8UINTFormat"b1"WaFlushBefore3DPrimIfTopologyFilterEnabled"b1"WaDummyRenderForAdderIssueXP"b1"WaB2BPipeControlFlush"b1"WaLimitGsUrbToTop256kb"b1"WaDisablePSDDualDispatchEnable"b1"WaSystemThreadCacheFlushEnabled"b1"WaVSRefCountFullforceMissDisable"b1"WaDSRefCountFullforceMissDisable"b1"WaPwrSrcChangeInS4"b1"WaSampleCChickenBitEnable"b1"WaAvoidPMAStall"b1"WaDisablePixelBackendOptimization"b1"WaSetCacheModeForVLV"b1"WaDisableGunitPFIClkGating"b1"WaGtWakeFifoManagement"b1"WaGsvRC0ResidencyMethod"b1"WaUseMediaScratchRegister"b1"WaPsdDispatchEnable"b1"WaEnableGunitDisplayInterruptMask"b1"WaDividePSInvocationCountBy4"b1"WaSbeConservativeCacheMode"b1"WaCPUPushConstants"b1"WaAvoidPMAStallA0Conditionals"b1"WaUseOnlySIMD8PixelShaderDispatchForMSAA"b1"WaSendLRITwice"b1"WaAvoidStcPMAStall"b1""b0"WaHDCL3Deadlock"b1"WaIommuPendingInvalidationHang"b1"WaIndexBufferBoundsCheck"b1"WaMediaResetBeforeFullReset"b1"WaDisableOverlayDSQualityFix"b1"WaDisableEUInstructionPrefetch"b1"WaSpriteRegisterUpdateViaMMIO"b1"WaAlignMIReportPerfCount"b1"WaDisableASModeReplayFifo"b1"WaEnablePAVPLiteByPAVPCOverwrite"b1"WaPAVPReadNonExistentDisplayRegister"b1"WaPAVPPreventUnsolicitedAttackDetection"b1"WaPavpClearAppIdRegisterDueToError"b1"WaEnableSpriteBUpdateForUnderflowFix"b1"WAWakeVCRDuringCSProtectionOnAndOffReq"b1"WADisplayTriggerAESKeyExpansion"b1"WaDisableSpriteDestColorKey"b1"WaInsertNoopAfterBatchEndCommand"b1"WaDisableD3D9OverlayScaling"b1"WaAlignBltUpdateGttCmdHeader"b1"WaMediaResetSpecialSequence"b1"WaWakeUp3DForRs2"b1"WaDisplayFlipAWaitAFlipBWaitB"b1"WaInsertFlushBetween3DOverlappingBlts"b1"WaDisableRc6OnWaitForEvent"b1"WaEnableAllByteWritesForLRI"b1"WaAlwaysClearIndirectStatePointersDisable"b1"WaLoadDummyCB2"b1"WaEnableLRIPostedOverrideBit"b1"WaL3RowRedundancyUnavailable"b1"WaL3ErrorRegistersInHwContext"b1"WaAdditionalMiUserIntCmdNeeded"b1"WaPSMIHandlerSemaphore"b1"WaTerminatePAVPSessionsOnSoCS0ixEntry"b1"WaInjectFlushInB2BFastCopyBlts"b1"WaAllowAsyncMMIOFlips"b1"WaDisableCtxRestoreArbitration"b1"WaDisableWaBBUse"b1"WaDisableOcaLogging"b1"WaForceL3LlcCoherencyInDescriptor"b1"WaPipeControlUpperDwordCorruption"b1"WaUseGfxModeFor3DPreemptionGranularity"b1"WaUsePseudoL3AddressingScheme"b1"WaAllowUmdToSetThreadArbitrationMode"b1"WaAllowUmdToEnableL3CycleThruZTLB"b1"WaAllowUmdToModifySamplerMode"b1"WaAllowUMDToModifyHDCChicken1"b1"WaAllowUMDToModify3DPrimitiveExtParam"b1"WaBindlessSamplerStateBoundsCheckingDefeature"b1"WaDisableGatherAtSetShader"b1"WaDisableGatherAtSetShaderCommonSlice"b1"WaAvoidBackToBackIdAndCurbeCommandsViaPipeControl"b1"FtrEnableFastAnisoL1BankingFix"b1"WaDisableRc6Wabb"b1"WaDisableBlitterFbcTracking"b1"WaDisableI2mCycleOnWRPort"b1"WaThrottleEUPerfToAvoidTDBackPressure"b1"WaDisableEnhancedSBEVertexCaching"b1"WaToggleSubsliceEnableBitsToClearCam"b1"WaDisableReplayBufferBankArbitrationOptimization"b1"WaSkip16thBindingTableIndices"b1"WaForceRenderingEnabled"b1"WaEnableFFSyncWithOutAllocate"b1"WaDisableDiscardAdjacency"b1"WaDePipelineReadFlushes"b1"WaDisableBindingTableSamplerCountPrefetch"b1"WaIncorrectSampleInfoSampleCount"b1"WaIncorrectSampleInfoPaletteIndex"b1"WaCubesAreNot2DArray"b1"WaFlushOnMaxNumberClipperThreadsChange"b1"WaEnableForceWakeForRc6WaBb"b1"WaDuplicateMiDisplayFlip"b1"WaDisablePreservingDenormsInPixelBackend"b1"WaSampleLPerformance"b1"WaWGFVertexBufferMaxIndex"b1"WaNullVertexBufferWhenZeroSize"b1"WaFlushBetweenBindingTablePointers"b1"WaHizCorruptionRenderArbWriteMaskDisable"b1"WaDisableFastClearFor16bpp"b1"WaSetNoOverlapBltCaps"b1"WaDisable128bppCopyBlt"b1"WaForceWindowerMinThreadsTo6"b1"WaUsePostSyncOpWithROCacheFlushPipeControl"b1"WaDisableRHWOOptimization"b1"WaLimitMaxGSThreads"b1"WaToggleDepthStallOnDepthWrite"b1"WaDisableVertexShaderPushConstants"b1"WaDisablePixelShaderPushConstants"b1"WaDropZEvictions"b1"WaLimitEusTo5ThreadsWhenSystemThreadPresent"b1"WaDisableRCZWatermark"b1"WaDisableHizNoDepthTestWrite"b1"WaDisableVfFix"b1"WaTlbInvalidateStoreDataAfter"b1"WaTlbInvalidateStoreDataBefore"b1"WaDisableAsyncFlipPerfMode"b1"WaEnableUrbDataShuffleMode"b1"WaDisableBlbUnitClkGating"b1"WaLimitAllowedPsThreadDependencies"b1"WaSurfaceStateBaseDwordAlignment"b1"WaVcsBcsQwordWriteCacheLineAlignment"b1"WaPipeControlBeforeWmMaxThreadCountChange"b1"WaNopWithIdWriteAfterLastFlush"b1"WaDisableDisplayFetchStrideStretching"b1"WaDapOneStateCacheLookUp"b1"WaChickenReadModifyWrite"b1"WaExtendedStateSaveRestoreAlwaysEnable"b1"WaDisableVFUnitClockGating"b1"WaDisableSOUnitClockGating"b1"WaDisableSFUnitClockGating"b1"WaDisableRCCUnitClockGating"b1"WaDisableSCUnitClockGating"b1"WaDisableIZUnitClockGating"b1"WaDisableRCPBUnitClockGating"b1"WaUseBlitterForPresent"b1"WaMbcDriverBootEnable"b1"WaReEnableInterrupts"b1"WaOverlaySynchViaVblank"b1"WaSendPipeControlBeforeNonPipelinedState"b1"WaSetCsStallPipeControlBeforeNonPipelinedState"b1"WaGTEnableMIFlush"b1"WaIdleBcsBeforeUpdateTail"b1"WaGTSyncRegister"b1"WaDummyPipelinedStateBeforeIspDisable"b1"WaDisableCacheabilityControl"b1"WaSlowFenceIdPropagation"b1"WaHardcodeMediaResetTimerClkFreq"b1"WaEnableContinueAfterPageFault"b1"WaTileWalkYIsInvalidWhenNotTiled"b1"WaSampleinfoForUnboundTextures"b1"WaMSAABandwidthOptimization"b1"WaDisableSampleLPerfFix"b1"WaDisableDopClockGating"b1"WaDisableRowChickenDopClockGating"b1"WaDisableFfDopClockGating"b1"WaDisableCSUnitLevelClockGating"b1"WaEnableFlushTlbInvalidationMode"b1"WaBCSVCSTlbInvalidationMode"b1"WaStripsFansDisableFastClipPerformanceFix"b1"WaDisableVcsIdleWhileWritingTp"b1"WaDisableEuUnitClockGatingForOA"b1"WaVerticalAlignment4Power2"b1"WaCSStallBefore3DStateGSEnableToggle"b1"WaDisableVDSUnitClockGating"b1"WaRevertDopClockGateFix2"b1"WaRevertAsynchFlushFix"b1"WaDisableTDLUnitClockGating"b1"WaFlushPipelineBeforeStreamOutState"b1"WaForceAllSOLDecls1Dword"b1"WaSendAllSOLDecls"b1"WaPostSyncOpBeforeVSState"b1"WaEnableEwaLodOnlyForAniso"b1"WaDisableEarlyCull"b1"WaFlushAfterCubeTexCordClamp"b1"WaRSPushConstantCoherencyBug"b1"WaRSStoreDataImmDeadlock"b1"WaDisablePerfMonGathering"b1"WaLoopUntilAsyncFlipLiveAddrUpdate"b1"WaReportPerfCountUseGlobalContextID"b1"WaForcePcBbFullCfgRestore"b1"WaDisableNonPresentRenderTargetChannels"b1"WaFixRenderSyncFlush"b1"WaSetupGtModeTdRowDispatch"b1"WaNoBackToBackLriInSCD"b1"WaPutSRMBetweenBackToBackLRIForDisplayReg"b1"WaGSNoDualModeWhenPrimId"b1"WaBarrierGrfReturnOffset"b1"WaPreservePayloadR0"b1"WaWaitForRingIdleIndicatorBeforeSyncFlush"b1"WaIgnoreRingIdleIndicator"b1"WaDisableVertexFifo"b1"WaSMLimitPresentDmaBufferSize"b1"WaForTogglingDopClkGatingBit"b1"WaSetIspCounterToNonZeroBeforeCsRingEnable"b1"WaDisableL3Bank2xClockGate"b1"WaInsertNoopAfterMiWaitForEvent"b1"WaDisableEUInstructionShootdown"b1"WaProgramMiArbOnOffAroundMiSetContext"b1"WaCatErrorRejectionIssue"b1"WaDisableBackToBackFlipFix"b1"WaDisplayPitchPowerOf2"b1"WaApplyL3ControlAndL3ChickenMode"b1"WaSendDummy3dPrimitveAfterSetContext"b1"WaDisableL3CacheAging"b1"WaDivideLLCHitsCounterBy16"b1"WaSaveVscRegisters"b1"WaDisableRCZUnitClockGating"b1"WaSerializeKmdDisplayAccess"b1"WaIssueContextSwitchBeforePreempt"b1"WaDisableVfePreemptionFix"b1"WaDisableRHWOOptimizationForRenderHang"b1"WaIVBInstrumentedVLV"b1"WaDisableDAPRHSClockGating"b1"WaDisableMidThreadPreempt"b1"WaDisableObjectLevelPreempt"b1"WaDisablePreemptionForVgt"b1"WaPostSyncOpBefore3DSTATEGS"b1"WaCSRUncachable"b1"WaFlushBefore3DSTATEGS"b1"WaSwitchSolVfFArbitrationPriority"b1"WaBBSNonPrivilegedBit"b1"WaAlternateSigKeys"b1"WaDisableEarlyEOT"b1"WaUseNoopClearBuffer"b1"WaDisableCCCheckIn2DPresentPath"b1"WaForceToNonPrivFifthRegisterNonFunctional"b1"WaDisableSamplerPowerBypassForSOPingPong"b1"WaLimitSizeOfSDEPolyFifo"b1"WaDisableSamplerPowerBypass"b1"WaDisableBcCentroidPerformanceOptimization"b1"WaInsertNOPViaChickenBit"b1"WaBlockMsgChannelDuringGfxReset"b1"WaForcePreemptWaitForIdleOnNonRcsEngines"b1"WaIncreaseTagClockTimer"b1"WaLRIToDEUnsupported"b1"WaDisableThreadStallDopClockGating"b1"WaDisableInstructionShootdown"b1"WaDisablePartialInstShootdown"b1"WaDisableGpGpuPreemptOnGt1"b1"WaControlPrimaryTLBUtilization"b1"WaDisableLiteRestore"b1"WaHdcDisableFetchWhenMasked"b1"WaSetVfGuardbandPreemptionVertexCount"b1"WaDisableTdsClockGating"b1"WaEnableVMEReferenceWindowCheck"b1"WaDisableContextRestoreSubsliceAck"b1"WaDisableCoherency"b1"WaEnableCoherencyHWFixes"b1"WaForceEnableNonCoherent"b1"WaForceSyncFlipWithVisibilityOff"b1"WaDisableGamClockGating"b1"WaDisDdbClkWhileProgVisibilityOn"b1""b0"DisableClockGatingForGucClocks"b1"WaProgramMgsrForCorrectSliceSpecificMmioReads"b1"WaEngineResetAfterMidThreadPreemption"b1"WaModifyVFEStateAfterGPGPUPreemption"b1"WaEnableuKernelHeaderValidFix"b1"WaEnableGoMsgToGAMDuringCPD"b1"WaGuCInitSramToZeroes"b1"WaEnableGuCBootHashCheckNotSet"b1"WaDisableGuCClockGating"b1"WaGuCForceFenceByTlbInvalidateReg"b1"WaGuCCopyHuCKernelHashToSramVar"b1"WaGuCDummyWriteBeforeFenceCycle"b1"WaGuCDisableSRAMRestoreDisable"b1""b0"WaCursor16K"b1"WaGWBFlushOnFenceChange"b1"WaGWBFlushOnGTTUpdateEvenViaGTTADDR"b1"Wa8kAlignforAsyncFlip"b1"Wa29BitDisplayAddrLimit"b1"WaForce1MBGTTSize"b1"WaIncreaseFixedSegSize"b1"WaVistaTempResourceWA"b1"WaAlignContextImage"b1"WaForceGlobalGTT"b1"WaReportPerfCountForceGlobalGTT"b1"WaOaAddressTranslation"b1"Wa2RowVerticalAlignment"b1"WaEnableRingHostMapping"b1"WaMfx2ndLevelBatchRingSizeAlign"b1"WaDisablePhysAddrBelow1MB"b1"WaMediaResetBeforePAVPCWrite"b1"WaPpgttAliasGlobalGttSpace"b1"WaClearFenceRegistersAtDriverInit"b1"WaPcmBase1MBGranularity"b1"WaRestrictPitch128KB"b1"WaAvoidLLC"b1"WaAvoidL3"b1"Wa16TileFencesOnly"b1"WaCacheHizBufferState"b1"WaL3ParitySupportDisable"b1"WaL3ParityInterruptUnmask"b1"WaEmulationSmartCacheFlush"b1"Wa32bitGeneralStateOffset"b1"Wa32bitInstructionBaseOffset"b1"WaLateL3ErrorInterrupts"b1"WaOAStatus2MemSelect"b1"Wa16MBOABufferAlignment"b1"WaL3ErrorHwHanging"b1"WaIommuUncoreUnavailable"b1"WaIommuCCInvalidationHang"b1"WaTranslationTableUnavailable"b1"WaExtIotlbInvHang"b1"WaL3IACoherencyRequiresIoMmu"b1"WaDisableIommuTEBit"b1"WaNoMinimizedTrivialSurfacePadding"b1"WaNoBufferSamplerPadding"b1"WaReusePteL3BitforSecurity"b1"WaDisableWTCaching"b1"WaSecureSegmentInPpgtt"b1"WaSetDVMSizeToStolenMemorySize"b1"WaAllPasidInvHang"b1"WaSurfaceStatePlanarYOffsetAlignBy2"b1"WaGttCachingOffByDefault"b1"WaEnableOnlyGpgpuCommandLevelPreemption"b1"WaCompressedResourceSamplerPbeMediaNewHashMode"b1"WaCompressedResourceDisplayNewHashMode"b1"WaCompressedResourceDisplayOldHashMode"b1"WaInPlaceDecompressionHang"b1"WaTouchAllSvmMemory"b1"WaIOBAddressMustBeValidInHwContext"b1"WaDisableKillLogic"b1"WaFlushTlbAfterCpuGgttWrites"b1"WaMsaa8xTileYDepthPitchAlignment"b1"WaDisableIommuAccessedDirtyBit"b1"WaDisableNullPageAsDummy"b1"WaUseVAlign16OnTileXYBpp816"b1"WaDisableRFOSelfSnoop"b1"WaDisableDynamicCreditSharing"b1"WaNoMocsEllcOnly"b1"WaGttPat0"b1"WaGttPat0WB"b1"WaGttPat0GttWbOverOsIommuEllcOnly"b1""b0"WaRestore3DBufVarMpeg"b1"WaNo2ndLevelBatchBuffer"b1"WaForceAllocationToAperture"b1"WaDisableSuppressReconPicForNonRefPic"b1"WaAddMediaStateFlushCmd"b1"WaVC1UnequalFieldHeights"b1"WaDisableLockForTranscodePerf"b1"WaInsertAVCFrameForFormatSwitchToJPEG"b1"WaDisableJPEGHSWNewFeatures"b1"WaJPEGHeightAlignYUV422H2YToNV12"b1"WaVC1DecodingMaxResolution"b1"WaParseVC1PicHeaderInSlice"b1"WaParseVC1FirstFieldPictureHeader"b1"WaParseVC1BPictureHeader"b1"WaAddVC1StuffingBytesForSPMP"b1"WaLinearMediaBlockAccess64BytePitchAlign"b1"WaLLCCachingUnsupported"b1"WaDisableMFXCryptoCopy"b1"WaDisableNonStallingScoreboard"b1"WaDisableNonStallingScoreboardBasedOnNumSlices"b1"WaResetVLineStrideInRenderCacheAfterMedia"b1"WaDisableMFX48bitAddressing"b1"WaUseVP8DecodePrivateInputBuffer"b1"WaDummyDMVBufferForMVCInterviewPred"b1"WaVeboxSliceEnable"b1"WaIs64BInstrEnabled"b1"WaDisableDSHEncryptionForWiDi"b1"WaSwWOPCMSetup"b1"WaProgramAppIDFor2VDBox"b1"WaAssumeSubblockPresent"b1"WaEnableDscale"b1"WaDisableGroupIDLoopSelect"b1"WaDisableHuCBasedDRM"b1"WaNeedHeightAlignmentForTiledYCaptureSurface"b1"WaLinearCaptureSurface"b1"WaSuperSliceHeaderPacking"b1""b0"WaProgramDpll"b1"WaADD2DetectBit"b1"WaTVDetect"b1"WaEnableSCWBPPeriodicFlush"b1"WaExtModeFSDOSBlankScreen"b1"WaTVEncoderDisable"b1"WaWaitForVBlankAfterTVDisableOREnable"b1"WaDisableCenteringDuringVGADisable"b1"WaDisableDynamicNormalWaterMark"b1"WaClosedCaptionHotplug"b1"WaSetCR17regAfterS3Resume"b1"WaDisableHPLLShutdown"b1"WaWaitForVSyncAfterPortEnable"b1"WaPF2ForDisplayPort"b1"WaDPHDMISupriousHpd"b1"WaEnablePFinMultiPlaneMode"b1"WaDPHDMIHpdEnable"b1"WaTVFullScreenHotUnplug"b1"WaRandomAnGeneration"b1"WaUse32BppForSRWM"b1"WaHDCPDoubleRead"b1"Wa9DotDisableinVGA"b1"WaHPDVrefValue"b1"WaDelayAfterSetDisplayStart"b1"WaEnablePF3ForInterlaced"b1"WaTurnDPOffAfterCPUPipe"b1"WaDisableESFVPwhenFBCisON"b1"WaClkGatingForEmbDPPortD"b1"WaUpdateFBCasPlaneStatusChanges"b1"WaWaitForVBBeforeEDPLLON"b1"WaEnablebyPassModePllForMIPI"b1"WaMipiDispShiftIssue"b1"WaMIPIDualLinkPixelOverlapCount"b1"WaEnableTxrequest_0"b1"WaMipiDPOUnitClkGateEnable"b1"WaAudioInactiveReset"b1"WaConvertorToPinMapping"b1"WaResetChickenBitForAutoLinkTrain"b1"WaPortWriteforAudioControllerinBIOS"b1"WaCheckforAudioPowerStateRegister"b1"WaCRCDisabledForMBO"b1"WaPsrSfuMaskSprite"b1"WaIsAudioControllerinLPSPWell"b1"WaForBlackFlashInMBOMode"b1"WaDisablePrimaryFlipsForMBO"b1"WaDisableLSPCONAuxTransactionInLSMode"b1"WaDoubleCursorLP3Latency"b1"WaEnableHDMI8bpcBefore12bpc"b1"WaFrameStartDelayWaForSDRRS"b1"WaHDCPDisable"b1"WaPlaneNotification"b1"WaClearPSRReset"b1"WaS3DSoftwareMode"b1"WaDisableBwgTlbClockGating"b1"WaFdiRxMiscProgramming"b1"WaMPhyProgramming"b1"WaDisableVLVClockGating_VBIIssue"b1"WaOGLCubemapWrapModes"b1"WaHSWBorderColorCalculation"b1"WaIntegerTextureSamplingEmulation"b1"WaDisableTileWInRcc"b1"WaFastClearRegistersInPrivilegedList"b1"WaSpriteYUVOffset"b1"WaEnableVBlankForOnlyActivePipe"b1"WaEDPModeSetSequenceChange"b1"WaPartitionLevelClockGatingDisable"b1"WaVLVDPAudioEnable"b1"WaVLVPMCiCLK5WriteEnable"b1"WaClearArfDependenciesBeforeEot"b1"WaDisableMADMMacros"b1"WaPMICRegisterReadWrite"b1"WaDisable1DDepthStencil"b1"WaZeroOneClearValues"b1"WaZeroOneClearValuesAtSampler"b1"WaZeroOneClearValuesMSAA"b1"WaDisableCCSClearsIfRtCompressionEnabledInGT3"b1"WaDisableLosslessCompressionForSampleL"b1"WaHizAndClearedResourcesBoundToSamplerAtSameTime"b1"WaHizAndCompressedAtSamplerAtSameTime"b1"WaDisableSamplerL2BypassForTextureCompressedFormats"b1"WaSamplerTexCoordModeMirror"b1"WaDCFlushOnCacheInvalidate"b1"WaPCFlushBeforeRTCacheFlush"b1"WaResendURBWhenGSorHSGetsEnabled"b1"WaVFComponentPackingRequiresEnabledComponent"b1"WaAuxRetryOnUnknownError"b1"WaAsyncFlipPow2Pitch"b1"WaDoubleFastClearWidthAlignment"b1"WaNoMMIOWhenPGOff"b1"WaRsNullConstantBuffer"b1"WaUseNonPrivRegisterForObjectLevelPreemption"b1"WaDisableObjectLevelPreemptionSequentialMode"b1"WaDisableObjectLevelPreemptionForInstancedDraw"b1"WaDisableObjectLevelPreemptionForDraw"b1"WaDisableObjectLevelPreemptionForGSLineStripAdj"b1"WaDisableMidObjectPreemptionForGSLineStripAdj"b1"WaDisableMidObjectPreemptionForTrifanOrPolygon"b1"WaDisableMidObjectPreemptionForLineLoop"b1"WaPsrMaskMMIOWrite"b1"WaPsrDPRSUnmaskVBlankInSRD"b1"WaPsrSfuMaskVBI"b1"WaLimitSqIdiCounterToEleven"b1"WaC6DisallowByGfxPause"b1"WaDisableMinuteIaClockGating"b1"WaDisableRepcolMessages"b1"WaPsrDPAMaskVBlankInSRD"b1"WaSendsSrc1SizeLimitWhenEOT"b1"WaDisableMixedModeLog"b1"WaDisableMixedModePow"b1"WaDisableMixedModeFdiv"b1"WaFloatMixedModeSelNotAllowedWithPackedDestination"b1"WaDisableDSPushConstantsInFusedDownModeWithOnlyTwoSubslices"b1"WaDisableVSPushConstantsInFusedDownModeWithOnlyTwoSubslices"b1"WaDisableDgMirrorFixInHalfSliceChicken5"b1"WaSetDisablePixMaskCammingAndRhwoInCommonSliceChicken"b1"WaSetMDRBunitClckGatingDisable"b1"WaSetGAPSunitClckGateDisable"b1"WaDisableAutostripInFFMode"b1"WaDisableNativeDWxDWMultiplication"b1"WADisableWriteCommitForPageFault"b1"WaDisableNullDepthBuffer"b1"WaSkipInvalidSubmitsFromOS"b1"WAGPGPUMidThreadPreemption"b1"WaEnableHGAsyncFlipLinearToTileConvert"b1"WaDisableGPGPUSlmPerfFix"b1"WaMIPICControlRegAndTERegRead"b1"WaMIPIDSIRegRead"b1"WaCompressedResourceRequiresConstVA21"b1"WaCsStallBeforeNonZeroInstanceCount"b1"WaRCFlushEvery16RTVOnBTPUpdate"b1"WaPipeControlBeforeVFCacheInvalidationEnable"b1"WaDisregardPlatformChecks"b1"WAMMCDUseSlice0Subslice0"b1"WAMMCDDisableStallBitInPipeControl"b1"WaWmMemoryReadLatency"b1"WaForceGrfInitializationAtBoot"b1"WaIntegerDivisionSourceModifierNotSupported"b1"WaMIPIPhaseDelay"b1"WaCSCDisable"b1"WaDisableObjectLevelPreemtionForVertexCount"b1"WaPlaneCxTilingFailure"b1"WaRealignCursorC"b1"WaSSCClockOverride"b1"WaCCKClkSkuIncorrect"b1"WaPixelRepeatModeFixForC0"b1"WaHPDPeriodIncorrect"b1"WaAllocateSLML3CacheCtrlOverride"b1"WaDisableObjectLevelPreemtionForInstanceId"b1"WaDisableObjectLevelPreemptionForLineLoop"b1"WaDisableObjectLevelPreemptionForTrifanOrPolygon"b1"WaForceDX10BorderColorSampleC"b1"WaForceDX10BorderColorFor64BPTTextures"b1""b0"WaHuCStreamOutOffsetIsStreamInOffsetForPAVP"b1"WaHucStreamoutEnable"b1"WaZeroHuCImemDmemAttributes"b1"WaDisableObjectLevelPreemptionForQuadStrip"b1"WaDisableObjectLevelPreemptionForLineStripAdjLineStripContPolygon"b1"WaDisable3DPreemptionDuringUAVDrawCall"b1"WaDisableRCWithAsyncFlip"b1"WaDisableHBR2"b1"WaEnableRCNV12"b1"WaEnableChickenDCPR"b1"WaEnableBandWidthLimitation"b1"WaDisableRCWithS3D"b1"WaProgramL3SqcReg1Default"b1"WaSetHdcUnitClockGatingDisableInUcgctl6"b1"WaDisableFtrSubSliceIzHashing"b1"WaDisableDither"b1"WaSPTMmioAccessSbi"b1"WaSPTMmioReadFailure"b1"WaDisablePlaneGamma"b1"WaVfPostSyncWrite"b1"WaIdleLiteRestore"b1"WaEnableYV12BugFixInHalfSliceChicken7"b1"WaDisableSFCSrcCrop"b1"WaSFC270DegreeRotation"b1"WaDisablePowerCompilerClockGating"b1"WaPreventSoftResetHangUsingGamtArbReg"b1"WaDisableDC5DC6"b1"WaIgnoreDDIAStrap"b1"WaRsRestoreWithPerCtxtBb"b1"WaRSFlushRequiredBefore3DPrimitivePreemption"b1"WaDisableHuCAuthentication"b1"WaHuCNoStreamObject"b1"WaHucBitstreamSizeLimitationEnable"b1"WaModeSwitchDummyFrame"b1"WaAddDelayInVDEncDynamicSlice"b1"WaReadVDEncOverflowStatus"b1"WaSklLpt"b1"WaDisablePreemptionDuringPavp"b1"WaUnitLevelClockGatingDisableGMBUS_PCH"b1"WaUnitLevelClockGatingDisableGMBUS_SOC"b1"WaS3DCurrentFieldLeft"b1"WaEnableForceRestoreInCtxtDescForVCS"b1"WaForceNullSurfaceTileY"b1"WaBindlessSurfaceStateModifyEnable"b1"WaPreventPavpHeavyModeContextCorruption"b1"WaDisablePreemptionForWatchdogTimer"b1"WaDisableEUChangeForSs0DisableDieRecovery"b1"WaDisableSlicePowerGating"b1"WaCur180BufAddressCalcForPipeA"b1"WaCHVBxMPOHWSupport"b1"WaCHVKxPlaneScalarSupport"b1"WaCHVMPO"b1"WaCHVDisableScalar"b1"WaDisableChickenBitTSGBarrierAckForFFSliceCS"b1"WaBindlessHeapTestSupport"b1"WaDisableCLVertexCache"b1"WaSendSEnableIndirectMsgDesc"b1"WaStructuredBufferAsRawBufferOverride"b1"WaConservativeRasterization"b1"WaMSFAfterWalkerWithoutSLMorBarriers"b1"WaDisableRendCompFeature"b1"WaDisableNonLinearGammaCheckWin7"b1"WaBarrierPerformanceFixDisable"b1"WaForceContextSaveRestoreNonCoherent"b1"WaEnableGapsTsvCreditFix"b1"WaDisableSkipCaching"b1"WaLosslessCompressionSurfaceStride"b1"WaFbcLinearSurfaceStride"b1"WaFbcPsrUpdateOnCpuHostModifyWrite"b1"Wa4kAlignUVOffsetNV12LinearSurface"b1"WaDisableIPC"b1"WaWatermarkLinesBlocks"b1"WaSamplerResponseLengthMustBeGreaterThan1"b1"WaMixModeSelInstDstNotPacked"b1"WaDisablePooledEuLoadBalancingFix"b1"WaDisablePartialResolveInVc"b1"WaDisablePreemptionWithCoherency"b1"WaReadVcrDebugRegister"b1"WaDisableHDCInvalidation"b1"WaSplitPipeControlForTlbInvalidate"b1"WaDisableSbeCacheDispatchPortSharing"b1"WaWGBoxAndWDtranscoderEnable"b1"WaEnableLbsSlaRetryTimerDecrement"b1"WaCcsTlbPrefetchDisable"b1"WaDisableTrickleFeedForNV12"b1"WaEnableSoftwarePCDDelay"b1"WaDisablePWMClockGating"b1"WaDisableSTUnitPowerOptimization"b1"WaDisablePixelMaskBasedCammingInRcpbe"b1"WaMtpRenderPowerGatingBug"b1"WaDisablePUnitMailboxMMIODisable"b1"WaSetClckGatingDisableMedia"b1"WaSetSDEunitClckGatingDisable"b1"WaSetHDCunitClckGatingDisable"b1"WaStoreMultiplePTEenable"b1"WaEnableHostToGucInterrupt"b1"WaReInitRingContextLriPostedWrite"b1"WaEnableDefaultEUCount"b1"WaCheckEU10Disabled"b1"WaC0AstcCorruptionForOddCompressedBlockSizeX"b1"WaRCCByteSharingDisableForHSWGT3"b1"WaAstcCorruptionForOddCompressedBlockSizeX"b1"WaUseYCordforPSR2"b1"WaDisableDeepLoopsUnrolling"b1"WaEnableDMCForNV12MPO"b1"WaDups1GatingDisableClockGatingForMPO"b1"WaFirstSyncFlipAfterMPOExit"b1"WaDisableSendsPreemption"b1"WaEnableSamplerGPGPUPreemptionSupport"b1"WaEnableChromaTrellisQuantization"b1"WaMIPIChangesFromBStep"b1"WaDisableMipiDsrWithExtPhyON"b1"WaDisplayYtiling"b1"WaDDdiHPDSwapUntilBStep"b1"WaOCLEnableSLMSizeGWLWA1"b1"WaOCLEnableSLMSizeGWLWA2"b1"WaGlobalDepthConstantScaleUp"b1"WaSetDCFlushOnReadOnlyInvalidate"b1"WaDisableDC5InPavpActivePeriod"b1"WaRasterisationOfDegenerateTriangles"b1"WaAvoidURBAllocationSizeMultipleOf3"b1"WaChickenBitsMidBatchPreemption"b1"WaForceWakeRenderDuringMmioTLBInvalidate"b1"WaAudioSetEPSS"b1"WaAllowUmdWriteTRTTRootTable"b1"WaDualMapUntil3DOnlyTRTT"b1"WaGucSizeUsedWhenValidatingHucCopy"b1"WaGucDisable2ElementSubmission"b1"WaDisable4KPushConstant"b1"WaClearTdlStateAckDirtyBits"b1"WaSendDummyGPGPUWalkerBeforeHSWithBarrier"b1"WaVFEStateAfterPipeControlwithMediaStateClear"b1"WaSendDummyConstantsForPS"b1"WaUseAuxSurfaceMode"b1"WaHwManagedClearConvertDepthFormat"b1"WaHwManagedClearResolveDepth"b1"WaDisableHSEightPatchIfInputControlGeq29"b1"WaRsGatherPoolEnable"b1"WaSetMipTailStartLODLargertoSurfaceLOD"b1"WaForGAMHang"b1"WaGAMWrrbClkGateDisable"b1"WaMediaPoolStateCmdInWABB"b1"WaPlanePosPlusWidthLessThanPipeHorSize"b1"WaPSR2MultipleRegionUpdateCorruption"b1"WaEnablePSRExitOn3DLutUpdate"b1"WaDisableCursorWith1LineInInterlacedMode"b1"WaEnableAccessToDisplayIO"b1"WaEnableBitBashingFor4BlockEDID"b1"WaVRRDisableBackToBackMasterFlipHWSupport"b1"WaGTCLockAcquisitionDelay"b1"WaHDCP2StatusUpdateToAudio"b1"WaCDClkPLLLockCorrection"b1"WaRCWaterMarkCalculation"b1"WaPipeControlBefore3DStateSamplePattern"b1"WaForceShaderChannelSelects"b1"WaRCCCacheMissFix"b1"WaTlbAllocationForAvcVdenc"b1"WaConextSwitchWithConcurrentTLBInvalidate"b1"WaDisableDOPRenderClkGatingAroundSubmit"b1"WaProgramL3SqcReg1DefaultForPerf"b1"WaInsertDummyPushConstPs"b1"WaClearTDRRegBeforeEOTForNonPS"b1"WaEncryptedEdramOnlyPartials"b1"WaDisableEdramForDisplayRT"b1"WaGen11SamplerDFRDefaultValue"b1"WaDisablePreemptForMediaWalkerWithGroups"b1"WaAllocateExtraVBPageForGpuMmuPageFaults"b1"WaUse3dBlitForAll"b1"WaSemaphoreWaitLiteRestore"b1"WaUse3dBlitForFBCMMIOProgramming"b1"WaHardwareTimestamps"b1"WaEnable_Vertex_Shader_Timer"b1"WaDisableScanLineInclExcl"b1"WaUse3dBlitForTiledYSrcDst"b1"Wa64bPitchFastCopyBlts"b1"WaSyncWmHzOp"b1"WaDisableDepthTestWhenEqual"b1"WaFBCRecompressFlush"b1"WaStencilWithLargeViewport"b1"WaGuCMsgChHang"b1}
{FenceGroupPool="free_list_head"{FenceGroupList="slh_first"^{FenceGroup}}"allocation_block_list_head"{FenceGroupAllocationBlockList="slh_first"^{FenceGroupAllocationBlock}}"serial_queue"@"NSObject<OS_dispatch_queue>"}
^{IGIndirectRenderPatchEncoder=[7{sIGRenderPatchState={SGfx3dStatePs=b8b8b8b3b2b3b6b58b7b1b3b1b1b1b2b1b1b8b1b3b1b1b4b6b54b1b1b1b2b1b2b1b2b1b11b9b7b1b7b1b7b9b6b58b6b58}{SGfx3dStatePsExtra=b8b8b8b3b2b3b2b1b1b1b1b1b1b1b14b1b1b1b2b1b1b1b1}{SGfx3dStateSbe=b8b8b8b3b2b3b5b6b5b1b1b1b1b1b1b6b1b1b2b32b32b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2}{SGfx3dStateSfBackEndSwizzle=b8b8b8b3b2b3[16{SGfx3DSFAttributeControl=b5b1b2b1b2b1b1b1b1b1}]b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4}{SGfx3dStateClip=b8b8b8b3b2b3b8b2b1b5b1b1b1b1b1b11b2b2b2b2b1b1b3b3b8b2b1b1b1b1b1b1b4b1b1b11b11b4}{SGfx3dStateVs=b8b8b8b3b2b3b6b58b7b1b4b1b1b2b1b1b8b1b3b1b1b4b6b54b4b6b1b6b3b5b7b1b1b1b7b1b12b9b8b8b5b6b5}{SGfx3dStateHs=b8b8b8b3b2b3b12b1b1b2b1b1b8b1b3b2b4b4b9b12b1b1b1b6b58b4b6b54b1b3b6b1b6b2b5b1b1b1b1b1b3b32}{SGfx3dStateDs=b8b8b8b3b2b3b6b58b7b1b5b1b1b1b1b1b8b1b3b1b1b4b6b54b4b6b1b7b2b5b7b1b1b1b2b5b1b10b9b2b8b8b5b6b5b6b58}{SGfx3dStateTe=b8b8b8b3b2b3b1b2b1b2b2b2b2b2b18ff}{SGfx3dStateVfSgvs=b8b8b8b3b2b3b6b7b2b1b6b7b2b1}{SGfx3dStateVfComponentPacking=b8b8b8b3b2b3b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4}{SGfx3dStateWm=b8b8b8b3b2b3b2b1b1b1b1b2b2b1b6b2b2b2b3b1b1b1b1b1b1}{SGfx3dStateUrb=b8b8b8b3b2b3b16b9b7}{SGfx3dStateUrb=b8b8b8b3b2b3b16b9b7}{SGfx3dStateUrb=b8b8b8b3b2b3b16b9b7}{SGfx3dStateUrb=b8b8b8b3b2b3b16b9b7}{SGfx3dStatePushConstantAlloc=b8b8b8b3b2b3b6b10b5b11}{SGfx3dStatePushConstantAlloc=b8b8b8b3b2b3b6b10b5b11}{SGfx3dStatePushConstantAlloc=b8b8b8b3b2b3b6b10b5b11}{SGfx3dStatePushConstantAlloc=b8b8b8b3b2b3b6b10b5b11}{SGfx3dStatePushConstantAlloc=b8b8b8b3b2b3b6b10b5b11}{SGfx3dStateSf=b8b8b8b3b2b3b1b1b8b1b1b18b2b12b1b1b2b2b10b1b3b11b1b1b1b1b10b2b2b2b1}{SGfx3dStateRaster=b8b8b8b3b2b3b1b1b1b2b2b1b1b1b2b1b1b1b1b2b3b1b2b1b1b1b5fff}{SGfx3dStateVf=b8b1b1b1b5b8b3b2b3b32}{SGfx3dStateVertexElements={SGfx3dStateVertexElementsHeader=b8b8b8b3b2b3}[34{SGfxVertexElementState=b12b3b1b9b1b6b16b3b1b3b1b3b1b3b1}]}{SGfx3dStateVfInstancings=[34{SGfx3dStateVfInstancing=b8b8b8b3b2b3b6b2b1b23b32}]}{SGfx3dStateConstant=b8b1b6b1b8b3b2b3{SGfx3dStateConstantBody=b16b16b16b16QQQQ}}{SGfx3dStateConstant=b8b1b6b1b8b3b2b3{SGfx3dStateConstantBody=b16b16b16b16QQQQ}}{SGfx3dStateConstant=b8b1b6b1b8b3b2b3{SGfx3dStateConstantBody=b16b16b16b16QQQQ}}{SGfx3dStateConstant=b8b1b6b1b8b3b2b3{SGfx3dStateConstantBody=b16b16b16b16QQQQ}}{SGfx3dStateBindingTablePointers=b8b8b8b3b2b3b5b11b16}{SGfx3dStateBindingTablePointers=b8b8b8b3b2b3b5b11b16}{SGfx3dStateBindingTablePointers=b8b8b8b3b2b3b5b11b16}{SGfx3dStateBindingTablePointers=b8b8b8b3b2b3b5b11b16}{SGfx3dStateVfTopology=b8b8b8b3b2b3b6b26}{SGfx3dPrimitive=b8b1b1b1b5b8b3b2b3b6b2b1b1b22b32b32b32b32b32}}][7{sIGRenderPatchData=IIIIIIIIIIIIIIIII^vIQQIIIQIIIBBB}]^{_WA_TABLE}^{_IntelHwCapsInfo}^{MTLIGAccelDevice}}
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"MTLCompiler"
[19{atomic<unsigned long long>="__a_"{__cxx_atomic_impl<unsigned long long, std::__cxx_atomic_base_impl<unsigned long long>>="__a_value"AQ}}]
@"NSString"
{?="width"Q"height"Q"depth"Q}
{MTLTargetDeviceArch="deviceType"Q"driverVersion"I"extension"*}
@"MTLTargetDeviceArchitecture"
^{MTLIGCommonCounterManager=}
Q40@0:8{?=QQQ}16
@"<MTLFunctionHandle>"24@0:8@"<MTLFunction>"16
@"<MTLComputePipelineState>"32@0:8@"NSArray"16^@24
@40@0:8@16{_NSRange=QQ}24
@"<MTLFunctionPointerHandleSPI>"24@0:8@"<MTLFunction>"16
@"NSArray"40@0:8@"NSArray"16{_NSRange=QQ}24
@"MTLDebugInstrumentationData"16@0:8
@32@0:8@16^{MTLIGComputePipelineState=[3^{CHAL_DECODED_BINARY_INFO}]QB*QII@I@^vQQQ@I}24
^{MTLIGComputePipelineState=[3^{CHAL_DECODED_BINARY_INFO}]QB*QII@I@^vQQQ@I}16@0:8
v24@0:8^{MTLIGComputePipelineState=[3^{CHAL_DECODED_BINARY_INFO}]QB*QII@I@^vQQQ@I}16
[3^{CHAL_DECODED_BINARY_INFO}]
@"MTLIGAccelBuffer"
@"MTLComputePipelineDescriptor"
^{MTLIGComputePipelineState=[3^{CHAL_DECODED_BINARY_INFO}]QB*QII@I@^vQQQ@I}
@32@0:8@16^v24
r^v16@0:8
@"NSObject<OS_dispatch_data>"
{unique_ptr<AIR::SCompilerOutputVertexShader, AIR::Serialization::uniqueFree<AIR::SCompilerOutputVertexShader>>="__ptr_"{__compressed_pair<AIR::SCompilerOutputVertexShader *, AIR::Serialization::uniqueFree<AIR::SCompilerOutputVertexShader>>="__value_"^{SCompilerOutputVertexShader}}}
{unique_ptr<AIR::SCompilerOutputPixelShader, AIR::Serialization::uniqueFree<AIR::SCompilerOutputPixelShader>>="__ptr_"{__compressed_pair<AIR::SCompilerOutputPixelShader *, AIR::Serialization::uniqueFree<AIR::SCompilerOutputPixelShader>>="__value_"^{SCompilerOutputPixelShader}}}
{unique_ptr<AIR::SCompilerOutputHullShader, AIR::Serialization::uniqueFree<AIR::SCompilerOutputHullShader>>="__ptr_"{__compressed_pair<AIR::SCompilerOutputHullShader *, AIR::Serialization::uniqueFree<AIR::SCompilerOutputHullShader>>="__value_"^{SCompilerOutputHullShader}}}
{unique_ptr<AIR::SCompilerOutputDomainShader, AIR::Serialization::uniqueFree<AIR::SCompilerOutputDomainShader>>="__ptr_"{__compressed_pair<AIR::SCompilerOutputDomainShader *, AIR::Serialization::uniqueFree<AIR::SCompilerOutputDomainShader>>="__value_"^{SCompilerOutputDomainShader}}}
{MTLIGCompilerStatisticsRec="kernelBinary"^v"kernelBinarySize"I"compileTimeInMilliSeconds"I"SIMDSize"C"threadMem"I}
[16I]
{IGVertexShaderInfo="_vptr$ShaderInfo"^^?"m_pKernelDescriptor"^v"m_pKernelDescriptorHigh"^v"m_pKernelDescriptorHighLocal"^v"m_pKernelOutput"^v"m_pKernelOutputHigh"^v"m_pBTILayout"^v"m_isValid"B"m_threadCount"I"m_scratchSize"I"m_scratchSizeAligned"I"m_perThreadScratchSpace"I"m_perThreadScratchSizeExp"I"m_kernelSize"I"m_kernelSizeAligned"I"m_constantBuffer0ReadLength"I"m_constantBuffer1ReadLength"I"m_constantBuffer2ReadLength"I"m_constantBuffer3ReadLength"I"m_numConstantDecls"I"m_maxConstantHandle"I"m_constantDeclMask"Q"m_pKernelProgramPtr"^v"m_kernelProgramSize"I"m_simplePushCount"I"m_gtpinShaderInfo"{gtpinShaderInformation_s="kernelId"Q"kernelProgramSize"I"pKernelProgram"*}"m_inlineSamplerStateInfo"{inlineSamplerStateInfo_s="inlineSamplerBindlessOffsets"^I"inlineSamplerBindlessMask"I"inlineSamplerLocationIndex"^I}"m_indirectionEnableMask"I}
{IGPixelShaderInfo="_vptr$ShaderInfo"^^?"m_pKernelDescriptor"^v"m_pKernelDescriptorHigh"^v"m_pKernelDescriptorHighLocal"^v"m_pKernelOutput"^v"m_pKernelOutputHigh"^v"m_pBTILayout"^v"m_isValid"B"m_threadCount"I"m_scratchSize"I"m_scratchSizeAligned"I"m_perThreadScratchSpace"I"m_perThreadScratchSizeExp"I"m_kernelSize"I"m_kernelSizeAligned"I"m_constantBuffer0ReadLength"I"m_constantBuffer1ReadLength"I"m_constantBuffer2ReadLength"I"m_constantBuffer3ReadLength"I"m_numConstantDecls"I"m_maxConstantHandle"I"m_constantDeclMask"Q"m_pKernelProgramPtr"^v"m_kernelProgramSize"I"m_simplePushCount"I"m_gtpinShaderInfo"{gtpinShaderInformation_s="kernelId"Q"kernelProgramSize"I"pKernelProgram"*}"m_inlineSamplerStateInfo"{inlineSamplerStateInfo_s="inlineSamplerBindlessOffsets"^I"inlineSamplerBindlessMask"I"inlineSamplerLocationIndex"^I}"m_indirectionEnableMask"I"m_pPsKernelProgramPtr"[3^v]"m_PsKernelProgramSize"[3I]"m_gtpinPixelShaderSimdInfo"[3{gtpinShaderInformation_s="kernelId"Q"kernelProgramSize"I"pKernelProgram"*}]}
{IGHullShaderInfo="_vptr$ShaderInfo"^^?"m_pKernelDescriptor"^v"m_pKernelDescriptorHigh"^v"m_pKernelDescriptorHighLocal"^v"m_pKernelOutput"^v"m_pKernelOutputHigh"^v"m_pBTILayout"^v"m_isValid"B"m_threadCount"I"m_scratchSize"I"m_scratchSizeAligned"I"m_perThreadScratchSpace"I"m_perThreadScratchSizeExp"I"m_kernelSize"I"m_kernelSizeAligned"I"m_constantBuffer0ReadLength"I"m_constantBuffer1ReadLength"I"m_constantBuffer2ReadLength"I"m_constantBuffer3ReadLength"I"m_numConstantDecls"I"m_maxConstantHandle"I"m_constantDeclMask"Q"m_pKernelProgramPtr"^v"m_kernelProgramSize"I"m_simplePushCount"I"m_gtpinShaderInfo"{gtpinShaderInformation_s="kernelId"Q"kernelProgramSize"I"pKernelProgram"*}"m_inlineSamplerStateInfo"{inlineSamplerStateInfo_s="inlineSamplerBindlessOffsets"^I"inlineSamplerBindlessMask"I"inlineSamplerLocationIndex"^I}"m_indirectionEnableMask"I}
{IGDomainShaderInfo="_vptr$ShaderInfo"^^?"m_pKernelDescriptor"^v"m_pKernelDescriptorHigh"^v"m_pKernelDescriptorHighLocal"^v"m_pKernelOutput"^v"m_pKernelOutputHigh"^v"m_pBTILayout"^v"m_isValid"B"m_threadCount"I"m_scratchSize"I"m_scratchSizeAligned"I"m_perThreadScratchSpace"I"m_perThreadScratchSizeExp"I"m_kernelSize"I"m_kernelSizeAligned"I"m_constantBuffer0ReadLength"I"m_constantBuffer1ReadLength"I"m_constantBuffer2ReadLength"I"m_constantBuffer3ReadLength"I"m_numConstantDecls"I"m_maxConstantHandle"I"m_constantDeclMask"Q"m_pKernelProgramPtr"^v"m_kernelProgramSize"I"m_simplePushCount"I"m_gtpinShaderInfo"{gtpinShaderInformation_s="kernelId"Q"kernelProgramSize"I"pKernelProgram"*}"m_inlineSamplerStateInfo"{inlineSamplerStateInfo_s="inlineSamplerBindlessOffsets"^I"inlineSamplerBindlessMask"I"inlineSamplerLocationIndex"^I}"m_indirectionEnableMask"I}
