ckprotectorcheckstackprotectorchnt.group.barrierinvariant.group.4.thread.pointeraarch64.thread.pdule
llvm.embedded.moe.ss
avx512.broadcastm
avx512.mask.sqrt.p
.mask.pbroadcastavx512.mask.pbro
avx512.kortestc.w
avx512.mask.pcmp2.mask.fpclass.pavx512.mask.fpclavx512.mask.cmp.p
avx512.mask.ucmp.
avx512.cvtb2maskavx512.cvtw2maskavx512.cvtd2maskavx512.cvtq2maskssse3.pabs.b.128ssse3.pabs.w.128ssse3.pabs.d.128avx512.mask.pabsavx512.mask.pmaxu
avx512.mask.pmin2.mask.pmulu.dq.avx512.mask.pmul.dq.
avx.cvtdq2.ps.256
2.mask.cvtdq2pd.avx512.mask.cvtd.mask.cvtudq2pd.avx512.mask.cvtusk.cvtudq2ps.256sk.cvtuqq2pd.256q2ps.128
q2ps.256
q2pd.256
avx512.mask.cvtqs2pd.256
avx512.mask.cvtpavx512.mask.loadu.
nd.load.
avx512.mask.expa.compress.store.avx512.mask.compsse42.crc32.64.8avx.vbroadcast.s512.vbroadcast.savx512.vbroadcasavx512.mask.pmovsx
avx.vbroadcastf128
2.vbroadcasti128avx2.vbroadcastiavx512.mask.shuf.i
.mask.broadcastfavx512.mask.broa.mask.broadcastiavx512.pbroadcast
mask.broadcast.sgnr.
avx512.mask.pali512.mask.valign.avx512.mask.valiavx.vinsertf128.avx2.vinserti128avx512.mask.insert
avx.vextractf128avx2.vextracti128
ract
avx512.mask.vext.df.
avx512.mask.perm.di.
2.mask.vpermil.pavx512.mask.vperf.d.
2.mask.pshufl.w.2.mask.pshufh.w.512.mask.movddupavx512.mask.movdhdup
avx512.mask.movsldup
2.mask.movshdup.512.mask.punpcklavx512.mask.punp512.mask.unpckl.avx512.mask.unpc512.mask.punpckh512.mask.unpckh.avx512.mask.pandn.
avx512.mask.por.avx512.mask.pxoravx512.mask.and.avx512.mask.andnavx512.mask.xor.avx512.mask.paddavx512.mask.psubl.
avx512.mask.add.avx512.mask.div.avx512.mask.mul.avx512.mask.sub.avx512.mask.max.avx512.mask.min.avx512.mask.lzcnt.
avx512.mask.psllavx512.mask.psrlavx512.mask.psraavx512.mask.move.s
avx512.mask.pavgdd.s
avx512.mask.vfma2.maskz.vfmadd.savx512.maskz.vfm2.mask3.vfmadd.savx512.mask3.vfm2.mask3.vfmsub.s.mask3.vfnmsub.savx512.mask3.vfndd.p
2.mask.vfnmadd.pavx512.mask.vfnm2.mask.vfnmsub.p2.mask3.vfmadd.p2.mask3.vfmsub.p.mask3.vfnmsub.p2.maskz.vfmadd.pmask.vfmaddsub.paddsub.p
subadd.p
2.mask.pternlog.avx512.mask.pter.maskz.pternlog.avx512.maskz.ptedd52
avx512.mask.vpma2.maskz.vpmadd52avx512.maskz.vpmmask.vpermi2var.mask.vpermt2var.rmt2var.
avx512.maskz.vpe2.mask.vpdpbusd..maskz.vpdpbusd..mask.vpdpbusds.maskz.vpdpbusds.2.mask.vpdpwssd..maskz.vpdpwssd..mask.vpdpwssds.maskz.vpdpwssds.
age Info VersionClass PropertiesObjective-C Clasage Info Section, __objc_catlist__DATA, __objc_cllvm.vectorizer.ectorizer.unroll512.mask.vfmadd.add.
sub.
2.mask3.vfnmsub..mask.vfmaddsub.maskz.vfmaddsub.mask3.vfmaddsub.mask3.vfmsubadd.512.mask.pcmpeq.512.mask.pcmpgt.avx512.kortestz.f.b.
avx512.mask.pshud2dq.256
d2ps.256
sk.cvtudq2ps.128sk.cvttps2dq.128avx512.mask.cvttsk.cvttps2dq.256var.
mask.pmul.hr.sw.h.w.
2.mask.pmulhu.w.2.mask.pmaddw.d.avx512.mask.pmadmask.pmaddubs.w.2.mask.packsswb.avx512.mask.pack2.mask.packssdw.2.mask.packuswb.2.mask.packusdw.b
mask.vpermilvar..d
2.mask.dbpsadbw.avx512.mask.dbps512.mask.vpshld.avx512.mask.vpsh512.mask.vpshrd.avx512.mask.prorv.
avx512.mask.prol512.mask.storeu.512.mask.store.pe.b.
e.w.
e.d.
e.q.
eritance
DIFlagVirtualInhtipleInheritanceDIFlagMultipleInePassByReferenceDIFlagTypePassByirectVirtualBaseDIFlagIndirectVigram
DIFlagMainSubproDIFlagStaticMember
DIFlagLittleEndian
gLValueReferenceDIFlagLValueRefegRValueReferenceDIFlagRValueRefegTypePassByValuelagObjectPointerDIFlagObjectPoinbjcClassCompleteDIFlagObjcClassCingleInheritanceDIFlagSingleInhentroducedVirtualDIFlagIntroducedllCallsDescribedDIFlagAllCallsDeBlockByrefStructDIFlagBlockByrefDIFlagAppleBlockDIFlagArtificialDIFlagPrototyped-?:\,[]{}#&*!|>'"%@`
01234567
0123456789abcdefABCDEF
0123456789
////////.
PE33
PE33
?iii?iii????????
6333733333334333m
    
!!!!!!!!
!!!!!!!!
!!!!!!!!
!!!!!!!!!!!!!!!!!!
!!!!!!
!!!!!!!!
!!!!!!!!!!!!!!!!
!!!!!!!!!!
!!!!!!!!!!
!!!!!!!!!!!!!!!!!!
!!!!
!!!!!!
!!!!!!!!!!!!!!
!!!!!!!!
!!!!!!
!!!!!!!!
!!!!!!!!!!
!!!!
!!!!!!!!
!!!!
!!!!!!!!
%%%%
####
########################
#######
##################################&
ccccccccc
round.towardzerofpexcept.maytrap
tion_entry_countsynthetic_functiount
function_entry_cllvm.global_ctors
llvm.global_dtorllvm.compiler.used
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
0000000000000000
----------------x8r7
intelgpu_icl_1x6intelgpu_icl_1x8intelgpu_skl_gt2r6
intelgpu_kbl_gt2r0
intelgpu_kbl_gt3r1
amdgpu_gfx600_nwh
legpu_g11g_8fstpapplegpu_g11g_8fgpu_gfx1010_nsgcamdgpu_gfx1010_nelgpu_skl_gt3r10intelgpu_skl_gt3
                                                                                
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
watchossimulator
gnu_unique_objecndirect_functiongnu_indirect_fun
l_parameter_packDW_TAG_GNU_formaDW_TAG_with_stmtDW_TAG_base_typeDW_TAG_file_typeDW_TAG_try_blockDW_TAG_namespaceDW_TAG_conditionDW_TAG_type_unitDW_TAG_call_siteDW_TAG_MIPS_looptemplate
DW_TAG_function_l_site_parameterlined_subroutineDW_TAG_inlined_sr_to_member_typeDW_TAG_ptr_to_mecess_declarationDW_TAG_access_dePLE_ptrauth_typeDW_TAG_APPLE_ptrRLAND_Delphi_setDW_TAG_BORLAND_D_value_parameterDW_TAG_template_e_reference_typeDW_TAG_rvalue_reND_Delphi_stringified_parametersDW_TAG_unspecifiD_Delphi_variante_type_parameterDW_TAG_GNU_call__subroutine_typeDW_TAG_subroutin_dwarf_procedureDW_TAG_dwarf_pro_imported_moduleDW_TAG_imported_G_reference_typeDW_TAG_referenceG_structure_typeDW_TAG_structureG_interface_typeDW_TAG_interfaceG_template_aliasG_immutable_typeDW_TAG_immutableG_class_templateDW_TAG_class_temG_APPLE_propertyDW_TAG_APPLE_proTAG_pointer_typeDW_TAG_pointer_tTAG_compile_unitDW_TAG_compile_uTAG_common_blockDW_TAG_common_blTAG_variant_partDW_TAG_variant_pTAG_partial_unitDW_TAG_partial_uTAG_coarray_typeDW_TAG_coarray_tTAG_dynamic_typeDW_TAG_dynamic_tTAG_format_labelDW_TAG_format_lalock
DW_TAG_lexical_btype
DW_TAG_subrange_item
DW_TAG_namelist_DW_TAG_volatile_DW_TAG_restrict_unit
DW_TAG_skeleton_site
rted_declarationenumeration_typeDW_TAG_enumeratiformal_parameterDW_TAG_formal_pacommon_inclusionDW_TAG_common_inunspecified_typegeneric_subrangeDW_TAG_generic_sBORLAND_propertyDW_TAG_BORLAND_pDW_TAG_entry_point
DW_TAG_string_type
DW_TAG_inheritance
DW_TAG_catch_block
DW_TAG_packed_tyDW_TAG_thrown_tyDW_TAG_shared_tyDW_TAG_atomic_tyDW_TAG_array_typDW_TAG_class_typDW_TAG_union_typDW_TAG_const_typDW_TAG_enumerator
DW_TAG_subprograpush_tls_addressDW_OP_GNU_push_t_GNU_const_indexDW_OP_GNU_const_OP_LLVM_fragmentDW_OP_LLVM_fragm_cfa
DW_OP_call_framealue
DW_OP_implicit_vndex
DW_OP_GNU_addr_iform_tls_addressDW_OP_form_tls_aimplicit_pointerDW_OP_implicit_ph_object_addressDW_OP_push_objecDW_OP_deref_sizeDW_OP_const_typeDW_OP_deref_typeDW_OP_plus_uconsDW_OP_xderef_sizDW_OP_stack_valuDW_OP_entry_valuDW_OP_regval_typDW_OP_xderef_typDW_OP_reinterpreATE_signed_fixedDW_ATE_signed_fiE_packed_decimalDW_ATE_packed_deE_numeric_stringDW_ATE_numeric_sE_unsigned_fixedDW_ATE_unsigned__imaginary_floatDW_ATE_imaginaryDW_ATE_signed_char
loat
DW_ATE_complex_fchar
DW_ATE_decimal_fITY_pure_virtualDW_VIRTUALITY_puRTUALITY_virtualDW_VIRTUALITY_viDW_VIRTUALITY_none
DW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Fortran03
LANG_C_plus_plusDW_LANG_C_plus_pG_ObjC_plus_plusDW_LANG_ObjC_pluG_C_plus_plus_03G_C_plus_plus_11DW_LANG_Pascal83ript
DW_LANG_RenderScGLE_RenderScriptDW_LANG_GOOGLE_RG_C_plus_plus_14G_Mips_AssemblerDW_LANG_Mips_AssG_BORLAND_DelphiDW_LANG_BORLAND_DW_CC_LLVM_Win64DW_CC_LLVM_AAPCSDW_CC_LLVM_Swiftfastcall
DW_CC_BORLAND_ms_BORLAND_stdcallDW_CC_BORLAND_st_LLVM_vectorcallDW_CC_LLVM_vecto_LLVM_X86_64SysVDW_CC_LLVM_X86_6_LLVM_X86RegCallDW_CC_LLVM_X86ReBORLAND_safecallDW_CC_BORLAND_saBORLAND_msreturnBORLAND_thiscallDW_CC_BORLAND_thBORLAND_fastcallDW_CC_BORLAND_faLLVM_PreserveAllDW_CC_LLVM_Presend_fastcall_i386DW_CC_GNU_borlans_sh
DW_CC_GNU_renesascal
DW_CC_BORLAND_pa_VFP
enCL
DW_CC_GDB_IBM_OpCC_pass_by_valueDW_CC_pass_by_vaass_by_referenceDW_CC_pass_by_reLVM_IntelOclBiccDW_CC_LLVM_IntelLVM_SpirFunctionDW_CC_LLVM_SpirFLVM_OpenCLKernelDW_CC_LLVM_OpenCLVM_PreserveMostMACINFO_end_fileDW_MACINFO_end_fCINFO_start_fileDW_MACINFO_startCINFO_vendor_extDW_MACINFO_vendoDW_MACINFO_undefDW_MACINFO_defin
<input bitcode files>
override
filename
input bitcode file which can override previously defined symbol(s)
import
function:filename
Pair of function name and filename, where function should be imported from bitcode in filename
summary-index
Module summary index filename
Override output filename
internalize
Internalize linked symbols
disable-debug-info-type-map
Don't use a uniquing type map for debug info
only-needed
Link only needed symbols
Enable binary output on terminals
disable-lazy-loading
Disable lazy module loading
Write output as LLVM assembly
Print information about actions taken
Print assembly as linked
suppress-warnings
Suppress all linking warnings
preserve-bc-uselistorder
Preserve use-list order when writing LLVM bitcode.
preserve-ll-uselistorder
Preserve use-list order when writing LLVM assembly.
llvm linker
llvm-link
Here's the assembly:
linked module is broken!
Writing bitcode...
 loading file '
input module is broken!
Linking in '
Loading '
Import parameter bad format: 
Ignoring import request for non-existent function 
 from 
Ignoring import request for weak-any function 
Importing 
print-summary-global-ids
Print the global id for each value when reading the module summary
Malformed block
Invalid record
Invalid bitcode signature
Invalid bitcode wrapper header
Unexpected end of file
Invalid value
Incompatible epoch: Bitcode '
' vs current: '
Could not find function in stream
Trying to materialize functions before seeing function blocks
Expect SubBlock
Expect function block
 (Producer: '
' Reader: 'LLVM 
Insufficient function protos
Invalid function metadata: incoming forward references
Invalid ID
Invalid cast
Explicit gep type does not match pointee type of pointer operand
EXTRACTVAL: Invalid instruction with 0 indices
EXTRACTVAL: Invalid type
EXTRACTVAL: Invalid struct index
EXTRACTVAL: Invalid array index
INSERTVAL: Invalid instruction with 0 indices
INSERTVAL: Invalid type
INSERTVAL: Invalid struct index
INSERTVAL: Invalid array index
Inserted value type doesn't match aggregate type
Invalid type for value
Explicit invoke type is not a function type
Callee is not a pointer
Callee is not of pointer to function type
Explicit invoke type does not match pointee type of callee operand
Insufficient operands to call
Personality function mismatch
Old-style alloca with a non-pointer type
Fast math flags indicator set for call with no FMF
Explicit call type is not a function type
Callee is not a pointer type
Explicit call type does not match pointee type of callee operand
Fast-math-flags specified for call without floating-point scalar or vector return type
Invalid instruction with no BB
Operand bundles found with no consumer
Never resolved value found in function
Invalid function metadata: outgoing forward refs
Invalid constant reference
Invalid constant type
Explicit gep operator type does not match pointee type of pointer operand
Invalid gep with no operands
Invalid value name
Invalid alignment value
Load/Store operand is not a pointer type
Explicit load/store type does not match pointee type of pointer operand
Cannot load/store from pointer
Never resolved function from blockaddress
Malformed global initializer set
Invalid multiple blocks
Unknown attribute kind (
Bitwidth for integer type out of range
Invalid type
Invalid function argument type
Invalid TYPE table
Invalid vector length
Invalid matrix dimensions
Invalid TYPE table: Only named structs can be forward referenced
Expected a constant
Alias and aliasee types don't match
Invalid multiple synchronization scope names blocks
Invalid empty synchronization scope names block
Invalid global variable comdat ID
Invalid calling convention ID
Invalid function comdat ID
Invalid hash length 
Invalid Summary Block: record for version expected
Invalid Summary Block: version expected
Invalid summary version 
, 1, 2, 3 or 4 expected
Alias expects aliasee summary to be parsed
Name attachment that does not follow a combined record
Invalid hash that does not follow a module path
GUID 
) is 
Expected a single module
llvm.bitcode
Corrupted bitcode
Abbreviation starts with an Array or a Blob
Array element type can't be an Array or a Blob
Array op not second to last
Array element type has to be an encoding of a type
Fixed or VBR abbrev record with size > MaxChunkData
Abbrev record with no operands
Invalid abbrev number
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._
import-full-type-definitions
Import full type definitions for ThinLTO.
disable-ondemand-mds-loading
Force disable the lazy-loading on-demand of metadata when loading bitcode for importing.
Corrupted Metadata block
Invalid metadata: fwd refs into function blocks
Invalid record: metadata strings layout
Invalid record: metadata strings with no strings
Invalid record: metadata strings corrupt offset
Invalid record: metadata strings bad length
Invalid record: metadata strings truncated chars
Invalid metadata attachment
Conflicting METADATA_KIND records
METADATA_NAME not followed by METADATA_NAMED_NODE
Invalid record: Unsupported version of DISubrange
Alignment value is too large
Can't lazyload MD
Type mismatch in constant table!
bitcode-mdindex-threshold
Number of metadatas above which we emit an index to enable lazy-loading
write-relbf-to-summary
Write relative block frequency to function summary 
Invalid encoding
APPLE_1_
ThinLTO
Unexpected anonymous function when writing summary
Default
MetaData
Map Name: 
Size: 
Value: 
Value: [null]
 Uses(
 [null]
Metadata: slot = 
Metadata: function = 
 = comdat 
exactmatch
largest
noduplicates
samesize
 = type 
; Materializable
; Function Attrs: 
define 
 section "
 align 
 gc "
 prefix 
 prologue 
 personality 
!<unknown kind #
<empty name> 
!DIExpression(
!DILocation(
line
column
scope
inlinedAt
null
external
private
internal
linkonce
linkonce_odr
weak
weak_odr
common
appending
extern_weak
available_externally
dso_local 
hidden 
protected 
dllimport 
dllexport 
fastcc
coldcc
webkit_jscc
anyregcc
preserve_mostcc
preserve_allcc
cxx_fast_tlscc
ghccc
x86_stdcallcc
x86_fastcallcc
x86_thiscallcc
x86_regcallcc
x86_vectorcallcc
intel_ocl_bicc
arm_apcscc
arm_aapcscc
arm_aapcs_vfpcc
msp430_intrcc
avr_intrcc 
avr_signalcc 
ptx_kernel
ptx_device
agx_ticc
agx_pscc
agx_vscc
agx_sscc
agx_sfcc
agx_sicc
agx_clcc
agx_dscc
agx_mrcc
x86_64_sysvcc
win64cc
spir_func
spir_kernel
swiftcc
x86_intrcc
hhvmcc
hhvm_ccc
amdgpu_vs
amdgpu_ls
amdgpu_hs
amdgpu_es
amdgpu_gs
amdgpu_ps
amdgpu_cs
amdgpu_kernel
air_intersection
asm 
sideeffect 
alignstack 
inteldialect 
", "
<badref>
local_unnamed_addr
unnamed_addr
 comdat
<null operand!>
; uselistorder directives
uselistorder
_bb 
, { 
source_filename = "
target datalayout = "
target triple = "
module asm "
attributes #
 = { 
distinct 
<temporary!> 
!DIGlobalVariableExpression(
expr
!GenericDINode(
header
operands: {
tag: 
!DISubrange(
count
lowerBound
!DIEnumerator(
name
isUnsigned
!DIBasicType(
size
encoding
!DIDerivedType(
file
baseType
offset
flags
extraData
dwarfAddressSpace
ptrAuthKey
ptrAuthIsAddressDiscriminated
ptrAuthExtraDiscriminator
!DICompositeType(
elements
runtimeLang
vtableHolder
templateParams
identifier
discriminator
!DISubroutineType(
types
!DIFile(
directory
source
checksumkind: 
checksum
!DICompileUnit(
language
producer
isOptimized
runtimeVersion
splitDebugFilename
emissionKind
enums
retainedTypes
globals
imports
macros
dwoId
splitDebugInlining
debugInfoForProfiling
gnuPubnames
!DISubprogram(
linkageName
isLocal
isDefinition
scopeLine
containingType
virtuality
virtualIndex
thisAdjustment
unit
declaration
retainedNodes
thrownTypes
!DILexicalBlock(
!DILexicalBlockFile(
!DINamespace(
exportSymbols
!DIModule(
configMacros
includePath
isysroot
!DITemplateTypeParameter(
!DITemplateValueParameter(
!DIGlobalVariable(
!DILocalVariable(
!DILabel(
!DIObjCProperty(
setter
getter
attributes
!DIImportedEntity(
entity
!DIMacro(
type: 
!DIMacroFile(
nodes
 = !{
void
half
bfloat
float
double
x86_fp80
fp128
ppc_fp128
metadata
x86_mmx
token
%"type 
 addrspace(
opaque
<badref> = 
musttail 
tail 
notail 
 atomic
 weak
 volatile
    
          cleanup
          catch 
          filter 
 within 
] unwind 
to caller
 void
 to 
 unwind 
, ...
          to 
inalloca 
swifterror 
, align 
, addrspace(
 fast
 reassoc
 nnan
 ninf
 nsz
 arcp
 contract
 afn
 nuw
 nsw
 exact
 inbounds
 syncscope("
not_atomic
unordered
monotonic
consume
acquire
release
acq_rel
seq_cst
 ; (
; <label>:
; Error: Block without parent!
 No predecessors!
 preds = 
external 
addrspace(
externally_initialized 
constant 
global 
, section "
thread_local 
thread_local(localdynamic) 
thread_local(initialexec) 
thread_local(localexec) 
alias 
ifunc 
 <<NULL ALIASEE>>
zeroinitializer
blockaddress(
none
undef
inrange 
<placeholder or erroneous Constant>
[Regular LTO]
 = module: (
path: "
", hash: (
 = typeid: (name: "
) ; guid = 
 = gv: (
name: "
guid: 
, summaries: (
 ; guid = 
(module: ^
, flags: (
linkage: 
, notEligibleToImport: 
, live: 
, dsoLocal: 
, refs: (
alias
function
variable
, aliasee: 
, insts: 
, funcFlags: (
readNone: 
, readOnly: 
, noRecurse: 
, returnDoesNotAlias: 
, calls: (
(callee: ^
, hotness: 
, relbf: 
unknown
cold
critical
, typeIdInfo: (
typeTests: (
typeTestAssumeVCalls
typeCheckedLoadVCalls
typeTestAssumeConstVCalls
typeCheckedLoadConstVCalls
vFuncId: (
, offset: 
args: (
, summary: (
, wpdResolutions: (
(offset: 
typeTestRes: (kind: 
, sizeM1BitWidth: 
, alignLog2: 
, sizeM1: 
, bitMask: 
, inlineBits: 
unsat
byteArray
inline
single
allOnes
wpdRes: (kind: 
, singleImplName: "
, resByArg: (
, byArg: (kind: 
, info: 
, byte: 
, bit: 
indir
singleImpl
branchFunnel
uniformRetVal
uniqueRetVal
virtualConstProp
sanitize_address
sanitize_hwaddress
alwaysinline
argmemonly
builtin
convergent
swifterror
swiftself
inaccessiblememonly
inaccessiblemem_or_argmemonly
inalloca
inlinehint
inreg
jumptable
minsize
naked
nest
nobuiltin
nocapture
noduplicate
noimplicitfloat
noinline
nonlazybind
noredzone
noreturn
nocf_check
norecurse
nounwind
optforfuzzing
optnone
optsize
readnone
readonly
writeonly
returned
returns_twice
signext
speculatable
sspreq
sspstrong
safestack
shadowcallstack
strictfp
sret
sanitize_thread
sanitize_memory
uwtable
zeroext
byval
alignstack
allocsize(
AS =
  { 
PAL[
 => 
profile-sample-accurate
null-pointer-is-valid
objc_retainAutoreleaseReturnValue
cast
extractelement
sse2.storel.dq
sse2.sqrt.sd
avx512.kand.w
avx512.kandn.w
avx512.kor.w
avx512.kxor.w
avx512.kxnor.w
avx512.knot.w
avx512.kortestz.w
avx512.kortestc.w
sse.add.ss
sse2.add.sd
sse.sub.ss
sse2.sub.sd
sse.mul.ss
sse2.mul.sd
sse.div.ss
sse2.div.sd
sse41.pmaxsb
avx2.pmulu.dq
avx512.pmulu.dq.512
sse41.pmuldq
avx2.pmul.dq
avx512.pmul.dq.512
sse2.cvtsi2sd
sse.cvtsi642ss
sse2.cvtsi642sd
avx512.cvtusi2sd
sse2.cvtss2sd
avx.cvtdq2.pd.256
avx512.mask.cvtdq2ps.128
avx512.mask.cvtudq2ps.128
avx512.mask.cvtqq2pd.128
avx512.mask.cvtuqq2pd.128
sse2.cvtps2pd
avx.cvt.ps2.pd.256
avx512.mask.cvtps2pd.128
cvtu
cvtps2pd
false
true
pmovsx
sse2.psll.dq.bs
avx512.psll.dq.512
avx512.psrl.dq.512
sse41.pblendw
abs.ll
abs.cond
max.ull
max.cond
min.ull
min.cond
ctlz
ctlz.trunc
ctpop
ctpop.trunc
trunc
.old
clang.arc.retainAutoreleasedReturnValueMarker
Objective-C Class Properties
llvm.ctlz.
^arm\.neon\.vld([1234]|[234]lane)\.v[a-z0-9]*$
.p0i8
^arm\.neon\.vst([1234]|[234]lane)\.v[a-z0-9]*$
lane
arm.thread.pointer
sse41.dppd
sse41.mpsadbw
avx2.mpsadbw
avx512.mask.cvttpd2dq.256
avx2.movntdqa
avx512.movntdqa
xop.vpcmov.256
extract
palignr
vpmovm2
llvm.loop.interleave.count
llvm.loop.vectorize.
.splatinsert
.splat
full-set
empty-set
use-dbg-addr
Use llvm.dbg.addr for all local variables
Address space 0 can never be non-integral
Invalid address space, must be a 24bit integer
Missing size specification for pointer in datalayout string
Invalid pointer size of 0 bytes
Missing alignment specification for pointer in datalayout string
Pointer ABI alignment must be a power of 2
Pointer preferred alignment must be a power of 2
Invalid index size of 0 bytes
Sized aggregate specification in datalayout string
Missing alignment specification in datalayout string
ABI alignment specification must be >0 for non-aggregate types
Zero width native integer type in datalayout string
Unexpected trailing characters after mangling specifier in datalayout string
Expected mangling specifier in datalayout string
Unknown mangling specifier in datalayout string
Unknown mangling in datalayout string
Unknown specifier in datalayout string
Invalid bit width, must be a 24bit integer
Invalid ABI alignment, must be a 16bit integer
Invalid preferred alignment, must be a 16bit integer
Invalid ABI alignment, must be a power of 2
Invalid preferred alignment, must be a power of 2
Preferred alignment cannot be less than the ABI alignment
Trailing separator in datalayout string
Expected token before separator in datalayout string
not a number, or does not fit in an unsigned int
number of bits must be a byte width multiple
Invalid address space, must be a 24-bit integer
llvm.dbg.declare
llvm.dbg.value
Debug Info Version
DIFlagZero
DIFlagPrivate
DIFlagProtected
DIFlagPublic
DIFlagFwdDecl
DIFlagAppleBlock
DIFlagBlockByrefStruct
DIFlagVirtual
DIFlagArtificial
DIFlagExplicit
DIFlagPrototyped
DIFlagObjcClassComplete
DIFlagObjectPointer
DIFlagVector
DIFlagStaticMember
DIFlagLValueReference
DIFlagRValueReference
DIFlagReserved
DIFlagSingleInheritance
DIFlagMultipleInheritance
DIFlagVirtualInheritance
DIFlagIntroducedVirtual
DIFlagBitField
DIFlagNoReturn
DIFlagMainSubprogram
DIFlagTypePassByValue
DIFlagTypePassByReference
DIFlagFixedEnum
DIFlagThunk
DIFlagTrivial
DIFlagBigEndian
DIFlagLittleEndian
DIFlagAllCallsDescribed
DIFlagIndirectVirtualBase
CSK_MD5
CSK_SHA1
NoDebug
FullDebug
LineTablesOnly
 @[ 
pass-remarks
pattern
Enable optimization remarks from passes whose name match the given regular expression
pass-remarks-missed
Enable missed optimization remarks from passes whose name match the given regular expression
pass-remarks-analysis
Enable optimization analysis remarks from passes whose name match the given regular expression
Invalid regular expression '
' in -pass-remarks: 
) in 
ignoring debug info with an invalid version (
ignoring invalid debug info in 
 (hotness: 
!Passed
!Missed
!Analysis
!AnalysisFPCommute
!AnalysisAliasing
!Failure
Name
DebugLoc
Function
Hotness
Args
^(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$
File
Line
Column
verify-dom-info
Verify dominator info (time consuming)
Insert 
Delete 
 -> 
PendUpdates:
Insert, 
Delete, 
(no name)
(badref), 
(no_name)
(badref)
DeletedBBs:
(no_name)(
not_intrinsic
llvm.addressofreturnaddress
llvm.adjust.trampoline
llvm.annotation
llvm.assume
llvm.bitreverse
llvm.bswap
llvm.canonicalize
llvm.ceil
llvm.clear_cache
llvm.codeview.annotation
llvm.convert.from.fp16
llvm.convert.to.fp16
llvm.copysign
llvm.coro.alloc
llvm.coro.alloca.alloc
llvm.coro.alloca.free
llvm.coro.alloca.get
llvm.coro.begin
llvm.coro.destroy
llvm.coro.done
llvm.coro.end
llvm.coro.frame
llvm.coro.free
llvm.coro.id
llvm.coro.id.retcon
llvm.coro.id.retcon.once
llvm.coro.noop
llvm.coro.param
llvm.coro.prepare.retcon
llvm.coro.promise
llvm.coro.resume
llvm.coro.save
llvm.coro.size
llvm.coro.subfn.addr
llvm.coro.suspend
llvm.coro.suspend.retcon
llvm.cos
llvm.ctlz
llvm.ctpop
llvm.cttz
llvm.dbg.addr
llvm.dbg.label
llvm.debugtrap
llvm.donothing
llvm.eh.dwarf.cfa
llvm.eh.exceptioncode
llvm.eh.exceptionpointer
llvm.eh.return.i32
llvm.eh.return.i64
llvm.eh.sjlj.callsite
llvm.eh.sjlj.functioncontext
llvm.eh.sjlj.longjmp
llvm.eh.sjlj.lsda
llvm.eh.sjlj.setjmp
llvm.eh.sjlj.setup.dispatch
llvm.eh.typeid.for
llvm.eh.unwind.init
llvm.exp
llvm.exp2
llvm.expect
llvm.experimental.constrained.cos
llvm.experimental.constrained.exp
llvm.experimental.constrained.exp2
llvm.experimental.constrained.fadd
llvm.experimental.constrained.fdiv
llvm.experimental.constrained.fma
llvm.experimental.constrained.fmul
llvm.experimental.constrained.frem
llvm.experimental.constrained.fsub
llvm.experimental.constrained.log
llvm.experimental.constrained.log10
llvm.experimental.constrained.log2
llvm.experimental.constrained.nearbyint
llvm.experimental.constrained.pow
llvm.experimental.constrained.powi
llvm.experimental.constrained.rint
llvm.experimental.constrained.sin
llvm.experimental.constrained.sqrt
llvm.experimental.deoptimize
llvm.experimental.gc.relocate
llvm.experimental.gc.result
llvm.experimental.gc.statepoint
llvm.experimental.guard
llvm.experimental.patchpoint.i64
llvm.experimental.patchpoint.void
llvm.experimental.stackmap
llvm.experimental.vector.reduce.add
llvm.experimental.vector.reduce.and
llvm.experimental.vector.reduce.fadd
llvm.experimental.vector.reduce.fmax
llvm.experimental.vector.reduce.fmin
llvm.experimental.vector.reduce.fmul
llvm.experimental.vector.reduce.mul
llvm.experimental.vector.reduce.or
llvm.experimental.vector.reduce.smax
llvm.experimental.vector.reduce.smin
llvm.experimental.vector.reduce.umax
llvm.experimental.vector.reduce.umin
llvm.experimental.vector.reduce.xor
llvm.fabs
llvm.floor
llvm.flt.rounds
llvm.fma
llvm.fmuladd
llvm.frameaddress
llvm.fshl
llvm.fshr
llvm.gcread
llvm.gcroot
llvm.gcwrite
llvm.get.dynamic.area.offset
llvm.icall.branch.funnel
llvm.init.trampoline
llvm.instrprof.increment
llvm.instrprof.increment.step
llvm.instrprof.value.profile
llvm.invariant.end
llvm.invariant.start
llvm.launder.invariant.group
llvm.lifetime.end
llvm.lifetime.start
llvm.load.relative
llvm.localaddress
llvm.localescape
llvm.localrecover
llvm.log
llvm.log10
llvm.log2
llvm.longjmp
llvm.masked.compressstore
llvm.masked.expandload
llvm.masked.gather
llvm.masked.load
llvm.masked.scatter
llvm.masked.store
llvm.matrix.add
llvm.matrix.columnwise.load
llvm.matrix.columnwise.store
llvm.matrix.extract
llvm.matrix.insert
llvm.matrix.multiply
llvm.matrix.scalar.multiply
llvm.matrix.subtract
llvm.matrix.transpose
llvm.maxnum
llvm.memcpy
llvm.memcpy.element.unordered.atomic
llvm.memmove
llvm.memmove.element.unordered.atomic
llvm.memset
llvm.memset.element.unordered.atomic
llvm.minnum
llvm.nearbyint
llvm.objectsize
llvm.pcmarker
llvm.pow
llvm.powi
llvm.prefetch
llvm.ptr.annotation
llvm.ptrauth.auth
llvm.ptrauth.blend
llvm.ptrauth.resign
llvm.ptrauth.sign
llvm.ptrauth.sign.generic
llvm.ptrauth.strip
llvm.rcp
llvm.read_register
llvm.readcyclecounter
llvm.returnaddress
llvm.rint
llvm.round
llvm.rsqrt
llvm.sadd.with.overflow
llvm.setjmp
llvm.sideeffect
llvm.siglongjmp
llvm.sigsetjmp
llvm.sin
llvm.smul.with.overflow
llvm.sqrt
llvm.ssa.copy
llvm.ssub.with.overflow
llvm.stackguard
llvm.stackprotector
llvm.stackrestore
llvm.stacksave
llvm.strip.invariant.group
llvm.thread.pointer
llvm.trap
llvm.trunc
llvm.type.checked.load
llvm.type.test
llvm.uadd.with.overflow
llvm.umul.with.overflow
llvm.usub.with.overflow
llvm.va_copy
llvm.va_end
llvm.va_start
llvm.var.annotation
llvm.write_register
llvm.xray.customevent
llvm.xray.typedevent
llvm.agx.bindless.tex.state.ptr
llvm.agx.check.bound
llvm.agx.check.bound.idx
llvm.agx.color.coverage.mask
llvm.agx.deferred.attribute.pass
llvm.agx.iraydd
llvm.agx.iraydi
llvm.agx.irayid
llvm.agx.irayii
llvm.agx.is.uniform
llvm.agx.load.got
llvm.agx.number.of.samples
llvm.agx.powr.f16
llvm.agx.powr.f32
llvm.agx.read.sample.number
llvm.agx.samplerState
llvm.agx.smp.1d.4xf
llvm.agx.smp.1d.4xh
llvm.agx.smp.1d.4xi16
llvm.agx.smp.1d.4xi32
llvm.agx.smp.1d.array.4xf
llvm.agx.smp.1d.array.4xh
llvm.agx.smp.1d.array.4xi16
llvm.agx.smp.1d.array.4xi32
llvm.agx.smp.1d.array.ci16.4xf
llvm.agx.smp.1d.array.ci16.4xh
llvm.agx.smp.1d.array.ci16.4xi16
llvm.agx.smp.1d.array.ci16.4xi32
llvm.agx.smp.1d.array.ci16.lod.4xf
llvm.agx.smp.1d.array.ci16.lod.4xh
llvm.agx.smp.1d.array.ci16.lod.4xi16
llvm.agx.smp.1d.array.ci16.lod.4xi32
llvm.agx.smp.1d.array.i.4xf
llvm.agx.smp.1d.array.i.4xh
llvm.agx.smp.1d.array.i.4xi16
llvm.agx.smp.1d.array.i.4xi32
llvm.agx.smp.1d.array.i.lod.4xf
llvm.agx.smp.1d.array.i.lod.4xh
llvm.agx.smp.1d.array.i.lod.4xi16
llvm.agx.smp.1d.array.i.lod.4xi32
llvm.agx.smp.1d.ci16.4xf
llvm.agx.smp.1d.ci16.4xh
llvm.agx.smp.1d.ci16.4xi16
llvm.agx.smp.1d.ci16.4xi32
llvm.agx.smp.1d.ci16.lod.4xf
llvm.agx.smp.1d.ci16.lod.4xh
llvm.agx.smp.1d.ci16.lod.4xi16
llvm.agx.smp.1d.ci16.lod.4xi32
llvm.agx.smp.1d.i.4xf
llvm.agx.smp.1d.i.4xh
llvm.agx.smp.1d.i.4xi16
llvm.agx.smp.1d.i.4xi32
llvm.agx.smp.1d.i.lod.4xf
llvm.agx.smp.1d.i.lod.4xh
llvm.agx.smp.1d.i.lod.4xi16
llvm.agx.smp.1d.i.lod.4xi32
llvm.agx.smp.2d.4xf
llvm.agx.smp.2d.4xh
llvm.agx.smp.2d.4xi16
llvm.agx.smp.2d.4xi32
llvm.agx.smp.2d.array.4xf
llvm.agx.smp.2d.array.4xh
llvm.agx.smp.2d.array.4xi16
llvm.agx.smp.2d.array.4xi32
llvm.agx.smp.2d.array.ci16.lod.4xf
llvm.agx.smp.2d.array.ci16.lod.4xh
llvm.agx.smp.2d.array.ci16.lod.4xi16
llvm.agx.smp.2d.array.ci16.lod.4xi32
llvm.agx.smp.2d.array.ci16.lod.offset.4xf
llvm.agx.smp.2d.array.ci16.lod.offset.4xh
llvm.agx.smp.2d.array.ci16.lod.offset.4xi16
llvm.agx.smp.2d.array.ci16.lod.offset.4xi32
llvm.agx.smp.2d.array.gather.4xf
llvm.agx.smp.2d.array.gather.4xh
llvm.agx.smp.2d.array.gather.4xi16
llvm.agx.smp.2d.array.gather.4xi32
llvm.agx.smp.2d.array.gather.offset.4xf
llvm.agx.smp.2d.array.gather.offset.4xh
llvm.agx.smp.2d.array.gather.offset.4xi16
llvm.agx.smp.2d.array.gather.offset.4xi32
llvm.agx.smp.2d.array.grad.4xf
llvm.agx.smp.2d.array.grad.4xh
llvm.agx.smp.2d.array.grad.4xi16
llvm.agx.smp.2d.array.grad.4xi32
llvm.agx.smp.2d.array.grad.offset.4xf
llvm.agx.smp.2d.array.grad.offset.4xh
llvm.agx.smp.2d.array.grad.offset.4xi16
llvm.agx.smp.2d.array.grad.offset.4xi32
llvm.agx.smp.2d.array.i.lod.4xf
llvm.agx.smp.2d.array.i.lod.4xh
llvm.agx.smp.2d.array.i.lod.4xi16
llvm.agx.smp.2d.array.i.lod.4xi32
llvm.agx.smp.2d.array.i.lod.offset.4xf
llvm.agx.smp.2d.array.i.lod.offset.4xh
llvm.agx.smp.2d.array.i.lod.offset.4xi16
llvm.agx.smp.2d.array.i.lod.offset.4xi32
llvm.agx.smp.2d.array.lod.4xf
llvm.agx.smp.2d.array.lod.4xh
llvm.agx.smp.2d.array.lod.4xi16
llvm.agx.smp.2d.array.lod.4xi32
llvm.agx.smp.2d.array.lod.offset.4xf
llvm.agx.smp.2d.array.lod.offset.4xh
llvm.agx.smp.2d.array.lod.offset.4xi16
llvm.agx.smp.2d.array.lod.offset.4xi32
llvm.agx.smp.2d.array.offset.4xf
llvm.agx.smp.2d.array.offset.4xh
llvm.agx.smp.2d.array.offset.4xi16
llvm.agx.smp.2d.array.offset.4xi32
llvm.agx.smp.2d.array.shadow.4xf
llvm.agx.smp.2d.array.shadow.4xh
llvm.agx.smp.2d.array.shadow.gather.4xf
llvm.agx.smp.2d.array.shadow.gather.4xh
llvm.agx.smp.2d.array.shadow.gather.offset.4xf
llvm.agx.smp.2d.array.shadow.gather.offset.4xh
llvm.agx.smp.2d.array.shadow.grad.4xf
llvm.agx.smp.2d.array.shadow.grad.4xh
llvm.agx.smp.2d.array.shadow.grad.offset.4xf
llvm.agx.smp.2d.array.shadow.grad.offset.4xh
llvm.agx.smp.2d.array.shadow.lod.4xf
llvm.agx.smp.2d.array.shadow.lod.4xh
llvm.agx.smp.2d.array.shadow.lod.offset.4xf
llvm.agx.smp.2d.array.shadow.lod.offset.4xh
llvm.agx.smp.2d.array.shadow.offset.4xf
llvm.agx.smp.2d.array.shadow.offset.4xh
llvm.agx.smp.2d.ci16.lod.4xf
llvm.agx.smp.2d.ci16.lod.4xh
llvm.agx.smp.2d.ci16.lod.4xi16
llvm.agx.smp.2d.ci16.lod.4xi32
llvm.agx.smp.2d.ci16.lod.offset.4xf
llvm.agx.smp.2d.ci16.lod.offset.4xh
llvm.agx.smp.2d.ci16.lod.offset.4xi16
llvm.agx.smp.2d.ci16.lod.offset.4xi32
llvm.agx.smp.2d.gather.4xf
llvm.agx.smp.2d.gather.4xh
llvm.agx.smp.2d.gather.4xi16
llvm.agx.smp.2d.gather.4xi32
llvm.agx.smp.2d.gather.offset.4xf
llvm.agx.smp.2d.gather.offset.4xh
llvm.agx.smp.2d.gather.offset.4xi16
llvm.agx.smp.2d.gather.offset.4xi32
llvm.agx.smp.2d.grad.4xf
llvm.agx.smp.2d.grad.4xh
llvm.agx.smp.2d.grad.4xi16
llvm.agx.smp.2d.grad.4xi32
llvm.agx.smp.2d.grad.offset.4xf
llvm.agx.smp.2d.grad.offset.4xh
llvm.agx.smp.2d.grad.offset.4xi16
llvm.agx.smp.2d.grad.offset.4xi32
llvm.agx.smp.2d.i.lod.4xf
llvm.agx.smp.2d.i.lod.4xh
llvm.agx.smp.2d.i.lod.4xi16
llvm.agx.smp.2d.i.lod.4xi32
llvm.agx.smp.2d.i.lod.offset.4xf
llvm.agx.smp.2d.i.lod.offset.4xh
llvm.agx.smp.2d.i.lod.offset.4xi16
llvm.agx.smp.2d.i.lod.offset.4xi32
llvm.agx.smp.2d.lod.4xf
llvm.agx.smp.2d.lod.4xh
llvm.agx.smp.2d.lod.4xi16
llvm.agx.smp.2d.lod.4xi32
llvm.agx.smp.2d.lod.offset.4xf
llvm.agx.smp.2d.lod.offset.4xh
llvm.agx.smp.2d.lod.offset.4xi16
llvm.agx.smp.2d.lod.offset.4xi32
llvm.agx.smp.2d.msaa.4xf
llvm.agx.smp.2d.msaa.4xh
llvm.agx.smp.2d.msaa.4xi16
llvm.agx.smp.2d.msaa.4xi32
llvm.agx.smp.2d.msaa.array.4xf
llvm.agx.smp.2d.msaa.array.4xh
llvm.agx.smp.2d.msaa.array.4xi16
llvm.agx.smp.2d.msaa.array.4xi32
llvm.agx.smp.2d.msaa.array.ci16.4xf
llvm.agx.smp.2d.msaa.array.ci16.4xh
llvm.agx.smp.2d.msaa.array.ci16.4xi16
llvm.agx.smp.2d.msaa.array.ci16.4xi32
llvm.agx.smp.2d.msaa.array.ci16.lod.4xf
llvm.agx.smp.2d.msaa.array.ci16.lod.4xh
llvm.agx.smp.2d.msaa.array.ci16.lod.4xi16
llvm.agx.smp.2d.msaa.array.ci16.lod.4xi32
llvm.agx.smp.2d.msaa.array.i.4xf
llvm.agx.smp.2d.msaa.array.i.4xh
llvm.agx.smp.2d.msaa.array.i.4xi16
llvm.agx.smp.2d.msaa.array.i.4xi32
llvm.agx.smp.2d.msaa.array.i.lod.4xf
llvm.agx.smp.2d.msaa.array.i.lod.4xh
llvm.agx.smp.2d.msaa.array.i.lod.4xi16
llvm.agx.smp.2d.msaa.array.i.lod.4xi32
llvm.agx.smp.2d.msaa.ci16.4xf
llvm.agx.smp.2d.msaa.ci16.4xh
llvm.agx.smp.2d.msaa.ci16.4xi16
llvm.agx.smp.2d.msaa.ci16.4xi32
llvm.agx.smp.2d.msaa.ci16.lod.4xf
llvm.agx.smp.2d.msaa.ci16.lod.4xh
llvm.agx.smp.2d.msaa.ci16.lod.4xi16
llvm.agx.smp.2d.msaa.ci16.lod.4xi32
llvm.agx.smp.2d.msaa.i.4xf
llvm.agx.smp.2d.msaa.i.4xh
llvm.agx.smp.2d.msaa.i.4xi16
llvm.agx.smp.2d.msaa.i.4xi32
llvm.agx.smp.2d.msaa.i.lod.4xf
llvm.agx.smp.2d.msaa.i.lod.4xh
llvm.agx.smp.2d.msaa.i.lod.4xi16
llvm.agx.smp.2d.msaa.i.lod.4xi32
llvm.agx.smp.2d.offset.4xf
llvm.agx.smp.2d.offset.4xh
llvm.agx.smp.2d.offset.4xi16
llvm.agx.smp.2d.offset.4xi32
llvm.agx.smp.2d.shadow.4xf
llvm.agx.smp.2d.shadow.4xh
llvm.agx.smp.2d.shadow.gather.4xf
llvm.agx.smp.2d.shadow.gather.4xh
llvm.agx.smp.2d.shadow.gather.offset.4xf
llvm.agx.smp.2d.shadow.gather.offset.4xh
llvm.agx.smp.2d.shadow.grad.4xf
llvm.agx.smp.2d.shadow.grad.4xh
llvm.agx.smp.2d.shadow.grad.offset.4xf
llvm.agx.smp.2d.shadow.grad.offset.4xh
llvm.agx.smp.2d.shadow.lod.4xf
llvm.agx.smp.2d.shadow.lod.4xh
llvm.agx.smp.2d.shadow.lod.offset.4xf
llvm.agx.smp.2d.shadow.lod.offset.4xh
llvm.agx.smp.2d.shadow.offset.4xf
llvm.agx.smp.2d.shadow.offset.4xh
llvm.agx.smp.3d.4xf
llvm.agx.smp.3d.4xh
llvm.agx.smp.3d.4xi16
llvm.agx.smp.3d.4xi32
llvm.agx.smp.3d.ci16.lod.4xf
llvm.agx.smp.3d.ci16.lod.4xh
llvm.agx.smp.3d.ci16.lod.4xi16
llvm.agx.smp.3d.ci16.lod.4xi32
llvm.agx.smp.3d.ci16.lod.offset.4xf
llvm.agx.smp.3d.ci16.lod.offset.4xh
llvm.agx.smp.3d.ci16.lod.offset.4xi16
llvm.agx.smp.3d.ci16.lod.offset.4xi32
llvm.agx.smp.3d.grad.4xf
llvm.agx.smp.3d.grad.4xh
llvm.agx.smp.3d.grad.4xi16
llvm.agx.smp.3d.grad.4xi32
llvm.agx.smp.3d.grad.offset.4xf
llvm.agx.smp.3d.grad.offset.4xh
llvm.agx.smp.3d.grad.offset.4xi16
llvm.agx.smp.3d.grad.offset.4xi32
llvm.agx.smp.3d.i.lod.4xf
llvm.agx.smp.3d.i.lod.4xh
llvm.agx.smp.3d.i.lod.4xi16
llvm.agx.smp.3d.i.lod.4xi32
llvm.agx.smp.3d.i.lod.offset.4xf
llvm.agx.smp.3d.i.lod.offset.4xh
llvm.agx.smp.3d.i.lod.offset.4xi16
llvm.agx.smp.3d.i.lod.offset.4xi32
llvm.agx.smp.3d.lod.4xf
llvm.agx.smp.3d.lod.4xh
llvm.agx.smp.3d.lod.4xi16
llvm.agx.smp.3d.lod.4xi32
llvm.agx.smp.3d.lod.offset.4xf
llvm.agx.smp.3d.lod.offset.4xh
llvm.agx.smp.3d.lod.offset.4xi16
llvm.agx.smp.3d.lod.offset.4xi32
llvm.agx.smp.3d.offset.4xf
llvm.agx.smp.3d.offset.4xh
llvm.agx.smp.3d.offset.4xi16
llvm.agx.smp.3d.offset.4xi32
llvm.agx.smp.cube.4xf
llvm.agx.smp.cube.4xh
llvm.agx.smp.cube.array.4xf
llvm.agx.smp.cube.array.4xh
llvm.agx.smp.cube.array.gather.4xf
llvm.agx.smp.cube.array.gather.4xh
llvm.agx.smp.cube.array.grad.4xf
llvm.agx.smp.cube.array.grad.4xh
llvm.agx.smp.cube.array.lod.4xf
llvm.agx.smp.cube.array.lod.4xh
llvm.agx.smp.cube.gather.4xf
llvm.agx.smp.cube.gather.4xh
llvm.agx.smp.cube.grad.4xf
llvm.agx.smp.cube.grad.4xh
llvm.agx.smp.cube.lod.4xf
llvm.agx.smp.cube.lod.4xh
llvm.agx.smp.cube.shadow.4xf
llvm.agx.smp.cube.shadow.4xh
llvm.agx.smp.cube.shadow.gather.4xf
llvm.agx.smp.cube.shadow.gather.4xh
llvm.agx.smp.cube.shadow.grad.4xf
llvm.agx.smp.cube.shadow.grad.4xh
llvm.agx.smp.cube.shadow.lod.4xf
llvm.agx.smp.cube.shadow.lod.4xh
llvm.agx.smp.cubedir.4xf
llvm.agx.smp.cubedir.4xh
llvm.agx.smp.cubedir.4xi16
llvm.agx.smp.cubedir.4xi32
llvm.agx.smp.cubedir.array.4xf
llvm.agx.smp.cubedir.array.4xh
llvm.agx.smp.cubedir.array.4xi16
llvm.agx.smp.cubedir.array.4xi32
llvm.agx.smp.cubedir.array.gather.4xf
llvm.agx.smp.cubedir.array.gather.4xh
llvm.agx.smp.cubedir.array.gather.4xi16
llvm.agx.smp.cubedir.array.gather.4xi32
llvm.agx.smp.cubedir.array.grad.4xf
llvm.agx.smp.cubedir.array.grad.4xh
llvm.agx.smp.cubedir.array.grad.4xi16
llvm.agx.smp.cubedir.array.grad.4xi32
llvm.agx.smp.cubedir.array.lod.4xf
llvm.agx.smp.cubedir.array.lod.4xh
llvm.agx.smp.cubedir.array.lod.4xi16
llvm.agx.smp.cubedir.array.lod.4xi32
llvm.agx.smp.cubedir.array.shadow.4xf
llvm.agx.smp.cubedir.array.shadow.4xh
llvm.agx.smp.cubedir.array.shadow.gather.4xf
llvm.agx.smp.cubedir.array.shadow.gather.4xh
llvm.agx.smp.cubedir.array.shadow.grad.4xf
llvm.agx.smp.cubedir.array.shadow.grad.4xh
llvm.agx.smp.cubedir.array.shadow.lod.4xf
llvm.agx.smp.cubedir.array.shadow.lod.4xh
llvm.agx.smp.cubedir.gather.4xf
llvm.agx.smp.cubedir.gather.4xh
llvm.agx.smp.cubedir.gather.4xi16
llvm.agx.smp.cubedir.gather.4xi32
llvm.agx.smp.cubedir.grad.4xf
llvm.agx.smp.cubedir.grad.4xh
llvm.agx.smp.cubedir.grad.4xi16
llvm.agx.smp.cubedir.grad.4xi32
llvm.agx.smp.cubedir.lod.4xf
llvm.agx.smp.cubedir.lod.4xh
llvm.agx.smp.cubedir.lod.4xi16
llvm.agx.smp.cubedir.lod.4xi32
llvm.agx.smp.cubedir.shadow.4xf
llvm.agx.smp.cubedir.shadow.4xh
llvm.agx.smp.cubedir.shadow.gather.4xf
llvm.agx.smp.cubedir.shadow.gather.4xh
llvm.agx.smp.cubedir.shadow.grad.4xf
llvm.agx.smp.cubedir.shadow.grad.4xh
llvm.agx.smp.cubedir.shadow.lod.4xf
llvm.agx.smp.cubedir.shadow.lod.4xh
llvm.agx.smp.cubestf.4xf
llvm.agx.smp.cubestf.4xh
llvm.agx.smp.cubestf.4xi16
llvm.agx.smp.cubestf.4xi32
llvm.agx.smp.cubestf.array.4xf
llvm.agx.smp.cubestf.array.4xh
llvm.agx.smp.cubestf.array.4xi16
llvm.agx.smp.cubestf.array.4xi32
llvm.agx.smp.cubestf.array.ci16.4xf
llvm.agx.smp.cubestf.array.ci16.4xh
llvm.agx.smp.cubestf.array.ci16.4xi16
llvm.agx.smp.cubestf.array.ci16.4xi32
llvm.agx.smp.cubestf.array.ci16.lod.4xf
llvm.agx.smp.cubestf.array.ci16.lod.4xh
llvm.agx.smp.cubestf.array.ci16.lod.4xi16
llvm.agx.smp.cubestf.array.ci16.lod.4xi32
llvm.agx.smp.cubestf.array.gather.4xf
llvm.agx.smp.cubestf.array.gather.4xh
llvm.agx.smp.cubestf.array.gather.4xi16
llvm.agx.smp.cubestf.array.gather.4xi32
llvm.agx.smp.cubestf.array.grad.4xf
llvm.agx.smp.cubestf.array.grad.4xh
llvm.agx.smp.cubestf.array.grad.4xi16
llvm.agx.smp.cubestf.array.grad.4xi32
llvm.agx.smp.cubestf.array.i.4xf
llvm.agx.smp.cubestf.array.i.4xh
llvm.agx.smp.cubestf.array.i.4xi16
llvm.agx.smp.cubestf.array.i.4xi32
llvm.agx.smp.cubestf.array.i.lod.4xf
llvm.agx.smp.cubestf.array.i.lod.4xh
llvm.agx.smp.cubestf.array.i.lod.4xi16
llvm.agx.smp.cubestf.array.i.lod.4xi32
llvm.agx.smp.cubestf.array.lod.4xf
llvm.agx.smp.cubestf.array.lod.4xh
llvm.agx.smp.cubestf.array.lod.4xi16
llvm.agx.smp.cubestf.array.lod.4xi32
llvm.agx.smp.cubestf.array.shadow.4xf
llvm.agx.smp.cubestf.array.shadow.4xh
llvm.agx.smp.cubestf.array.shadow.gather.4xf
llvm.agx.smp.cubestf.array.shadow.gather.4xh
llvm.agx.smp.cubestf.array.shadow.grad.4xf
llvm.agx.smp.cubestf.array.shadow.grad.4xh
llvm.agx.smp.cubestf.array.shadow.lod.4xf
llvm.agx.smp.cubestf.array.shadow.lod.4xh
llvm.agx.smp.cubestf.ci16.4xf
llvm.agx.smp.cubestf.ci16.4xh
llvm.agx.smp.cubestf.ci16.4xi16
llvm.agx.smp.cubestf.ci16.4xi32
llvm.agx.smp.cubestf.ci16.lod.4xf
llvm.agx.smp.cubestf.ci16.lod.4xh
llvm.agx.smp.cubestf.ci16.lod.4xi16
llvm.agx.smp.cubestf.ci16.lod.4xi32
llvm.agx.smp.cubestf.gather.4xf
llvm.agx.smp.cubestf.gather.4xh
llvm.agx.smp.cubestf.gather.4xi16
llvm.agx.smp.cubestf.gather.4xi32
llvm.agx.smp.cubestf.grad.4xf
llvm.agx.smp.cubestf.grad.4xh
llvm.agx.smp.cubestf.grad.4xi16
llvm.agx.smp.cubestf.grad.4xi32
llvm.agx.smp.cubestf.i.4xf
llvm.agx.smp.cubestf.i.4xh
llvm.agx.smp.cubestf.i.4xi16
llvm.agx.smp.cubestf.i.4xi32
llvm.agx.smp.cubestf.i.lod.4xf
llvm.agx.smp.cubestf.i.lod.4xh
llvm.agx.smp.cubestf.i.lod.4xi16
llvm.agx.smp.cubestf.i.lod.4xi32
llvm.agx.smp.cubestf.lod.4xf
llvm.agx.smp.cubestf.lod.4xh
llvm.agx.smp.cubestf.lod.4xi16
llvm.agx.smp.cubestf.lod.4xi32
llvm.agx.smp.cubestf.shadow.4xf
llvm.agx.smp.cubestf.shadow.4xh
llvm.agx.smp.cubestf.shadow.gather.4xf
llvm.agx.smp.cubestf.shadow.gather.4xh
llvm.agx.smp.cubestf.shadow.grad.4xf
llvm.agx.smp.cubestf.shadow.grad.4xh
llvm.agx.smp.cubestf.shadow.lod.4xf
llvm.agx.smp.cubestf.shadow.lod.4xh
llvm.agx.smpw.1d.array.ci16.4xf
llvm.agx.smpw.1d.array.ci16.4xf.rtz
llvm.agx.smpw.1d.array.ci16.4xh
llvm.agx.smpw.1d.array.ci16.4xh.rtz
llvm.agx.smpw.1d.array.ci16.lod.4xf
llvm.agx.smpw.1d.array.ci16.lod.4xf.rtz
llvm.agx.smpw.1d.array.ci16.lod.4xh
llvm.agx.smpw.1d.array.ci16.lod.4xh.rtz
llvm.agx.smpw.1d.array.ci16.lod.4xi16
llvm.agx.smpw.1d.array.ci16.lod.4xi32
llvm.agx.smpw.1d.array.i.4xf
llvm.agx.smpw.1d.array.i.4xf.rtz
llvm.agx.smpw.1d.array.i.4xh
llvm.agx.smpw.1d.array.i.4xh.rtz
llvm.agx.smpw.1d.array.i.lod.4xf
llvm.agx.smpw.1d.array.i.lod.4xf.rtz
llvm.agx.smpw.1d.array.i.lod.4xh
llvm.agx.smpw.1d.array.i.lod.4xh.rtz
llvm.agx.smpw.1d.array.i.lod.4xi16
llvm.agx.smpw.1d.array.i.lod.4xi32
llvm.agx.smpw.1d.ci16.4xf
llvm.agx.smpw.1d.ci16.4xf.rtz
llvm.agx.smpw.1d.ci16.4xh
llvm.agx.smpw.1d.ci16.4xh.rtz
llvm.agx.smpw.1d.ci16.lod.4xf
llvm.agx.smpw.1d.ci16.lod.4xf.rtz
llvm.agx.smpw.1d.ci16.lod.4xh
llvm.agx.smpw.1d.ci16.lod.4xh.rtz
llvm.agx.smpw.1d.ci16.lod.4xi16
llvm.agx.smpw.1d.ci16.lod.4xi32
llvm.agx.smpw.1d.i.4xf
llvm.agx.smpw.1d.i.4xf.rtz
llvm.agx.smpw.1d.i.4xh
llvm.agx.smpw.1d.i.4xh.rtz
llvm.agx.smpw.1d.i.lod.4xf
llvm.agx.smpw.1d.i.lod.4xf.rtz
llvm.agx.smpw.1d.i.lod.4xh
llvm.agx.smpw.1d.i.lod.4xh.rtz
llvm.agx.smpw.1d.i.lod.4xi16
llvm.agx.smpw.1d.i.lod.4xi32
llvm.agx.smpw.2d.array.ci16.4xf
llvm.agx.smpw.2d.array.ci16.4xf.rtz
llvm.agx.smpw.2d.array.ci16.4xh
llvm.agx.smpw.2d.array.ci16.4xh.rtz
llvm.agx.smpw.2d.array.ci16.lod.4xf
llvm.agx.smpw.2d.array.ci16.lod.4xf.rtz
llvm.agx.smpw.2d.array.ci16.lod.4xh
llvm.agx.smpw.2d.array.ci16.lod.4xh.rtz
llvm.agx.smpw.2d.array.ci16.lod.4xi16
llvm.agx.smpw.2d.array.ci16.lod.4xi32
llvm.agx.smpw.2d.array.i.4xf
llvm.agx.smpw.2d.array.i.4xf.rtz
llvm.agx.smpw.2d.array.i.4xh
llvm.agx.smpw.2d.array.i.4xh.rtz
llvm.agx.smpw.2d.array.i.lod.4xf
llvm.agx.smpw.2d.array.i.lod.4xf.rtz
llvm.agx.smpw.2d.array.i.lod.4xh
llvm.agx.smpw.2d.array.i.lod.4xh.rtz
llvm.agx.smpw.2d.array.i.lod.4xi16
llvm.agx.smpw.2d.array.i.lod.4xi32
llvm.agx.smpw.2d.ci16.4xf
llvm.agx.smpw.2d.ci16.4xf.rtz
llvm.agx.smpw.2d.ci16.4xh
llvm.agx.smpw.2d.ci16.4xh.rtz
llvm.agx.smpw.2d.ci16.lod.4xf
llvm.agx.smpw.2d.ci16.lod.4xf.rtz
llvm.agx.smpw.2d.ci16.lod.4xh
llvm.agx.smpw.2d.ci16.lod.4xh.rtz
llvm.agx.smpw.2d.ci16.lod.4xi16
llvm.agx.smpw.2d.ci16.lod.4xi32
llvm.agx.smpw.2d.i.4xf
llvm.agx.smpw.2d.i.4xf.rtz
llvm.agx.smpw.2d.i.4xh
llvm.agx.smpw.2d.i.4xh.rtz
llvm.agx.smpw.2d.i.lod.4xf
llvm.agx.smpw.2d.i.lod.4xf.rtz
llvm.agx.smpw.2d.i.lod.4xh
llvm.agx.smpw.2d.i.lod.4xh.rtz
llvm.agx.smpw.2d.i.lod.4xi16
llvm.agx.smpw.2d.i.lod.4xi32
llvm.agx.smpw.3d.ci16.4xf
llvm.agx.smpw.3d.ci16.4xf.rtz
llvm.agx.smpw.3d.ci16.4xh
llvm.agx.smpw.3d.ci16.4xh.rtz
llvm.agx.smpw.3d.ci16.lod.4xf
llvm.agx.smpw.3d.ci16.lod.4xf.rtz
llvm.agx.smpw.3d.ci16.lod.4xh
llvm.agx.smpw.3d.ci16.lod.4xh.rtz
llvm.agx.smpw.3d.ci16.lod.4xi16
llvm.agx.smpw.3d.ci16.lod.4xi32
llvm.agx.smpw.3d.i.4xf
llvm.agx.smpw.3d.i.4xf.rtz
llvm.agx.smpw.3d.i.4xh
llvm.agx.smpw.3d.i.4xh.rtz
llvm.agx.smpw.3d.i.lod.4xf
llvm.agx.smpw.3d.i.lod.4xf.rtz
llvm.agx.smpw.3d.i.lod.4xh
llvm.agx.smpw.3d.i.lod.4xh.rtz
llvm.agx.smpw.3d.i.lod.4xi16
llvm.agx.smpw.3d.i.lod.4xi32
llvm.agx.smpw.cubestf.array.ci16.4xf
llvm.agx.smpw.cubestf.array.ci16.4xf.rtz
llvm.agx.smpw.cubestf.array.ci16.4xh
llvm.agx.smpw.cubestf.array.ci16.4xh.rtz
llvm.agx.smpw.cubestf.array.ci16.lod.4xf
llvm.agx.smpw.cubestf.array.ci16.lod.4xf.rtz
llvm.agx.smpw.cubestf.array.ci16.lod.4xh
llvm.agx.smpw.cubestf.array.ci16.lod.4xh.rtz
llvm.agx.smpw.cubestf.array.ci16.lod.4xi16
llvm.agx.smpw.cubestf.array.ci16.lod.4xi32
llvm.agx.smpw.cubestf.array.i.4xf
llvm.agx.smpw.cubestf.array.i.4xf.rtz
llvm.agx.smpw.cubestf.array.i.4xh
llvm.agx.smpw.cubestf.array.i.4xh.rtz
llvm.agx.smpw.cubestf.array.i.lod.4xf
llvm.agx.smpw.cubestf.array.i.lod.4xf.rtz
llvm.agx.smpw.cubestf.array.i.lod.4xh
llvm.agx.smpw.cubestf.array.i.lod.4xh.rtz
llvm.agx.smpw.cubestf.array.i.lod.4xi16
llvm.agx.smpw.cubestf.array.i.lod.4xi32
llvm.agx.smpw.cubestf.ci16.4xf
llvm.agx.smpw.cubestf.ci16.4xf.rtz
llvm.agx.smpw.cubestf.ci16.4xh
llvm.agx.smpw.cubestf.ci16.4xh.rtz
llvm.agx.smpw.cubestf.ci16.lod.4xf
llvm.agx.smpw.cubestf.ci16.lod.4xf.rtz
llvm.agx.smpw.cubestf.ci16.lod.4xh
llvm.agx.smpw.cubestf.ci16.lod.4xh.rtz
llvm.agx.smpw.cubestf.ci16.lod.4xi16
llvm.agx.smpw.cubestf.ci16.lod.4xi32
llvm.agx.smpw.cubestf.i.4xf
llvm.agx.smpw.cubestf.i.4xf.rtz
llvm.agx.smpw.cubestf.i.4xh
llvm.agx.smpw.cubestf.i.4xh.rtz
llvm.agx.smpw.cubestf.i.lod.4xf
llvm.agx.smpw.cubestf.i.lod.4xf.rtz
llvm.agx.smpw.cubestf.i.lod.4xh
llvm.agx.smpw.cubestf.i.lod.4xh.rtz
llvm.agx.smpw.cubestf.i.lod.4xi16
llvm.agx.smpw.cubestf.i.lod.4xi32
llvm.agx.textureState
llvm.agx.tls.alloc
llvm.agx1.atanc
llvm.agx1.cl.barrier
llvm.agx1.cl.global.barrier
llvm.agx1.clamp
llvm.agx1.cmsk
llvm.agx1.cppix
llvm.agx1.cppix.agx1r1
llvm.agx1.dcf
llvm.agx1.dcfi
llvm.agx1.emitpix
llvm.agx1.emitpix.agx1r1
llvm.agx1.exit.if.zero
llvm.agx1.fitr.1xf
llvm.agx1.fitr.2xf
llvm.agx1.fitr.3xf
llvm.agx1.fitr.4xf
llvm.agx1.fitrp.1xf
llvm.agx1.fitrp.2xf
llvm.agx1.fitrp.3xf
llvm.agx1.fitrp.4xf
llvm.agx1.flushNaN
llvm.agx1.flushimg
llvm.agx1.flushpbe
llvm.agx1.ft1
llvm.agx1.fusedClampFlushNaN
llvm.agx1.gcmp
llvm.agx1.gcmp.g5
llvm.agx1.gcmp.xr.g5
llvm.agx1.gexp
llvm.agx1.gexp.g5
llvm.agx1.gexp.xr.g5
llvm.agx1.idf
llvm.agx1.imadh.g4
llvm.agx1.imgwblk.2d.16
llvm.agx1.imgwblk.2d.32
llvm.agx1.imgwblk.2d.array.16
llvm.agx1.imgwblk.2d.array.32
llvm.agx1.imgwblk.2d.array.lod.16
llvm.agx1.imgwblk.2d.array.lod.32
llvm.agx1.imgwblk.2d.lod.16
llvm.agx1.imgwblk.2d.lod.32
llvm.agx1.imgwblk.3d.16
llvm.agx1.imgwblk.3d.32
llvm.agx1.imgwblk.3d.lod.16
llvm.agx1.imgwblk.3d.lod.32
llvm.agx1.imgwblk.barrier.2d.16
llvm.agx1.imgwblk.barrier.2d.32
llvm.agx1.imgwblk.barrier.2d.array.16
llvm.agx1.imgwblk.barrier.2d.array.32
llvm.agx1.imgwblk.barrier.2d.array.lod.16
llvm.agx1.imgwblk.barrier.2d.array.lod.32
llvm.agx1.imgwblk.barrier.2d.lod.16
llvm.agx1.imgwblk.barrier.2d.lod.32
llvm.agx1.imgwblk.barrier.3d.16
llvm.agx1.imgwblk.barrier.3d.32
llvm.agx1.imgwblk.barrier.3d.lod.16
llvm.agx1.imgwblk.barrier.3d.lod.32
llvm.agx1.instance.valid
llvm.agx1.is.back.facing
llvm.agx1.itr.centroid.1xf
llvm.agx1.itr.centroid.1xh
llvm.agx1.itr.centroid.2xf
llvm.agx1.itr.centroid.2xh
llvm.agx1.itr.centroid.3xf
llvm.agx1.itr.centroid.3xh
llvm.agx1.itr.centroid.4xf
llvm.agx1.itr.centroid.4xh
llvm.agx1.itr.pixel.1xf
llvm.agx1.itr.pixel.1xh
llvm.agx1.itr.pixel.2xf
llvm.agx1.itr.pixel.2xh
llvm.agx1.itr.pixel.3xf
llvm.agx1.itr.pixel.3xh
llvm.agx1.itr.pixel.4xf
llvm.agx1.itr.pixel.4xh
llvm.agx1.itr.sample.1xf
llvm.agx1.itr.sample.1xh
llvm.agx1.itr.sample.2xf
llvm.agx1.itr.sample.2xh
llvm.agx1.itr.sample.3xf
llvm.agx1.itr.sample.3xh
llvm.agx1.itr.sample.4xf
llvm.agx1.itr.sample.4xh
llvm.agx1.itr.tmp.1xf
llvm.agx1.itr.tmp.1xh
llvm.agx1.itr.tmp.2xf
llvm.agx1.itr.tmp.2xh
llvm.agx1.itr.tmp.3xf
llvm.agx1.itr.tmp.3xh
llvm.agx1.itr.tmp.4xf
llvm.agx1.itr.tmp.4xh
llvm.agx1.itrcem.centroid.3xf
llvm.agx1.itrcem.centroid.3xh
llvm.agx1.itrcem.pixel.3xf
llvm.agx1.itrcem.pixel.3xh
llvm.agx1.itrcem.sample.3xf
llvm.agx1.itrcem.sample.3xh
llvm.agx1.itrcem.tmp.3xf
llvm.agx1.itrcem.tmp.3xh
llvm.agx1.itrcemgrad.tmp.3xf
llvm.agx1.itrproj.centroid.1xf
llvm.agx1.itrproj.centroid.1xh
llvm.agx1.itrproj.centroid.2xf
llvm.agx1.itrproj.centroid.2xh
llvm.agx1.itrproj.centroid.3xf
llvm.agx1.itrproj.centroid.3xh
llvm.agx1.itrproj.centroid.4xf
llvm.agx1.itrproj.centroid.4xh
llvm.agx1.itrproj.pixel.1xf
llvm.agx1.itrproj.pixel.1xh
llvm.agx1.itrproj.pixel.2xf
llvm.agx1.itrproj.pixel.2xh
llvm.agx1.itrproj.pixel.3xf
llvm.agx1.itrproj.pixel.3xh
llvm.agx1.itrproj.pixel.4xf
llvm.agx1.itrproj.pixel.4xh
llvm.agx1.itrproj.sample.1xf
llvm.agx1.itrproj.sample.1xh
llvm.agx1.itrproj.sample.2xf
llvm.agx1.itrproj.sample.2xh
llvm.agx1.itrproj.sample.3xf
llvm.agx1.itrproj.sample.3xh
llvm.agx1.itrproj.sample.4xf
llvm.agx1.itrproj.sample.4xh
llvm.agx1.itrproj.tmp.1xf
llvm.agx1.itrproj.tmp.1xh
llvm.agx1.itrproj.tmp.2xf
llvm.agx1.itrproj.tmp.2xh
llvm.agx1.itrproj.tmp.3xf
llvm.agx1.itrproj.tmp.3xh
llvm.agx1.itrproj.tmp.4xf
llvm.agx1.itrproj.tmp.4xh
llvm.agx1.laddr
llvm.agx1.lldiblk.1xf
llvm.agx1.lldiblk.1xh
llvm.agx1.lldiblk.2xf
llvm.agx1.lldiblk.2xh
llvm.agx1.lldiblk.3xf
llvm.agx1.lldiblk.3xh
llvm.agx1.lldiblk.4xf
llvm.agx1.lldiblk.4xh
llvm.agx1.local.x
llvm.agx1.local.y
llvm.agx1.lock
llvm.agx1.lstiblk.1xf
llvm.agx1.lstiblk.1xh
llvm.agx1.lstiblk.2xf
llvm.agx1.lstiblk.2xh
llvm.agx1.lstiblk.3xf
llvm.agx1.lstiblk.3xh
llvm.agx1.lstiblk.4xf
llvm.agx1.lstiblk.4xh
llvm.agx1.memfence
llvm.agx1.nop
llvm.agx1.nop.dbg
llvm.agx1.pack.prog
llvm.agx1.pack.rne.s32
llvm.agx1.pack.rne.u32
llvm.agx1.pack.scale.rne.s16
llvm.agx1.pack.scale.rne.s8
llvm.agx1.pack.scale.rne.u16
llvm.agx1.pack.scale.rne.u8
llvm.agx1.pixel.depthf
llvm.agx1.pixel.dfdx
llvm.agx1.pixel.dfdy
llvm.agx1.pixel.movmsk
llvm.agx1.pixel.movmsk.if.zero
llvm.agx1.pixel.readOutputRegister
llvm.agx1.pixel.readOutputRegisterWithPartitionSize
llvm.agx1.pixel.writeOutputRegister
llvm.agx1.pixel.writeOutputRegisterWithPartitionSize
llvm.agx1.read.cluster.number
llvm.agx1.read.coord.x.pixel
llvm.agx1.read.coord.x.sample
llvm.agx1.read.coord.y.pixel
llvm.agx1.read.coord.y.sample
llvm.agx1.read.pvcnt
llvm.agx1.read.sample.number
llvm.agx1.read.sg0
llvm.agx1.read.shared.reg.alloc.size
llvm.agx1.read.tvcnt
llvm.agx1.release
llvm.agx1.rev
llvm.agx1.sadd.sat
llvm.agx1.savmsk.pixel
llvm.agx1.savmsk.sample
llvm.agx1.shfl
llvm.agx1.simd.barrier
llvm.agx1.sin.g4
llvm.agx1.sin.g5
llvm.agx1.sinc
llvm.agx1.smad.sat
llvm.agx1.smsub.sat
llvm.agx1.smul.sat
llvm.agx1.ssub.sat
llvm.agx1.texture1d
llvm.agx1.texture1d.both.bi.x
llvm.agx1.texture1d.both.tri.x
llvm.agx1.texture1d.grad
llvm.agx1.texture1d.grad.both.bi.x
llvm.agx1.texture1d.grad.both.tri.x
llvm.agx1.texture1d.grad.info
llvm.agx1.texture1d.grad.write
llvm.agx1.texture1d.grad.x
llvm.agx1.texture1d.grad.xy
llvm.agx1.texture1d.grad.xyz
llvm.agx1.texture1d.info
llvm.agx1.texture1d.write
llvm.agx1.texture1d.x
llvm.agx1.texture1d.xy
llvm.agx1.texture1d.xyz
llvm.agx1.texture2d
llvm.agx1.texture2d.both.bi.x
llvm.agx1.texture2d.both.tri.x
llvm.agx1.texture2d.grad
llvm.agx1.texture2d.grad.both.bi.x
llvm.agx1.texture2d.grad.both.tri.x
llvm.agx1.texture2d.grad.info
llvm.agx1.texture2d.grad.write
llvm.agx1.texture2d.grad.x
llvm.agx1.texture2d.grad.xy
llvm.agx1.texture2d.grad.xyz
llvm.agx1.texture2d.info
llvm.agx1.texture2d.write
llvm.agx1.texture2d.x
llvm.agx1.texture2d.xy
llvm.agx1.texture2d.xyz
llvm.agx1.texture3d
llvm.agx1.texture3d.both.bi.x
llvm.agx1.texture3d.both.tri.x
llvm.agx1.texture3d.grad
llvm.agx1.texture3d.grad.both.bi.x
llvm.agx1.texture3d.grad.both.tri.x
llvm.agx1.texture3d.grad.info
llvm.agx1.texture3d.grad.write
llvm.agx1.texture3d.grad.x
llvm.agx1.texture3d.grad.xy
llvm.agx1.texture3d.grad.xyz
llvm.agx1.texture3d.info
llvm.agx1.texture3d.write
llvm.agx1.texture3d.x
llvm.agx1.texture3d.xy
llvm.agx1.texture3d.xyz
llvm.agx1.textureCube
llvm.agx1.textureCube.both.bi.x
llvm.agx1.textureCube.both.tri.x
llvm.agx1.textureCube.grad
llvm.agx1.textureCube.grad.both.bi.x
llvm.agx1.textureCube.grad.both.tri.x
llvm.agx1.textureCube.grad.info
llvm.agx1.textureCube.grad.write
llvm.agx1.textureCube.grad.x
llvm.agx1.textureCube.grad.xy
llvm.agx1.textureCube.grad.xyz
llvm.agx1.textureCube.info
llvm.agx1.textureCube.write
llvm.agx1.textureCube.x
llvm.agx1.textureCube.xy
llvm.agx1.textureCube.xyz
llvm.agx1.tsci
llvm.agx1.uadd.sat
llvm.agx1.umad.sat
llvm.agx1.umsub.sat
llvm.agx1.umul.sat
llvm.agx1.unpack.rtz.s32
llvm.agx1.unpack.rtz.u32
llvm.agx1.unpack.scale.s1616
llvm.agx1.unpack.scale.s8888
llvm.agx1.unpack.scale.u1616
llvm.agx1.unpack.scale.u8888
llvm.agx1.usub.sat
llvm.agx1.vertex.clip.write
llvm.agx1.vertex.pos.write
llvm.agx1.vertex.ptsize.write
llvm.agx1.vertex.varying.write.f32
llvm.agx1.vertex.varying.write.i32
llvm.agx1.vertex.write
llvm.agx1.vertex.writef
llvm.agx1.wop
llvm.agx1.write.sg0
llvm.agx2.backface.triangle
llvm.agx2.batch.num
llvm.agx2.bbccrc
llvm.agx2.bbccrc.noshft
llvm.agx2.bufrblk.1d
llvm.agx2.bufrblk.2d
llvm.agx2.bufwblk.1d
llvm.agx2.bufwblk.2d
llvm.agx2.centroid.itr.1xf
llvm.agx2.centroid.itr.1xh
llvm.agx2.centroid.itr.2xf
llvm.agx2.centroid.itr.2xh
llvm.agx2.centroid.itr.3xf
llvm.agx2.centroid.itr.3xh
llvm.agx2.centroid.itr.4xf
llvm.agx2.centroid.itr.4xh
llvm.agx2.centroid.itrproj.1xf
llvm.agx2.centroid.itrproj.1xh
llvm.agx2.centroid.itrproj.2xf
llvm.agx2.centroid.itrproj.2xh
llvm.agx2.centroid.itrproj.3xf
llvm.agx2.centroid.itrproj.3xh
llvm.agx2.centroid.itrproj.4xf
llvm.agx2.centroid.itrproj.4xh
llvm.agx2.clamp
llvm.agx2.cluster.num
llvm.agx2.cmsk
llvm.agx2.colcvgmsk
llvm.agx2.colcvgmsk.coords
llvm.agx2.colcvgmsk.coords.with.offset
llvm.agx2.colcvgmsk.with.offset
llvm.agx2.colcvgmsk.with.prid
llvm.agx2.context.id
llvm.agx2.coverage.mask
llvm.agx2.cppix
llvm.agx2.dispatch.threadgroup.x.size
llvm.agx2.dispatch.threadgroup.y.size
llvm.agx2.dispatch.threadgroup.z.size
llvm.agx2.dstackh
llvm.agx2.dstackl
llvm.agx2.eipnd
llvm.agx2.emitpix
llvm.agx2.exception.return.reg
llvm.agx2.exception.vector.reg
llvm.agx2.exec.state.cache.id
llvm.agx2.f16matmad4x4
llvm.agx2.f16matmad8x8
llvm.agx2.f32matmad4x4
llvm.agx2.f32matmad8x8
llvm.agx2.flushdcache
llvm.agx2.flushimg
llvm.agx2.flushpbe
llvm.agx2.forced.2x2.valid
llvm.agx2.ft1
llvm.agx2.get.layerid
llvm.agx2.get.stp.counter
llvm.agx2.gmdescpack.1d
llvm.agx2.gmdescpack.2d
llvm.agx2.image.block.depth
llvm.agx2.image.block.pp.samples
llvm.agx2.image.block.xdim
llvm.agx2.image.block.ydim
llvm.agx2.imgwblk.1d
llvm.agx2.imgwblk.1d.array
llvm.agx2.imgwblk.1d.array.lod
llvm.agx2.imgwblk.1d.array.lod.rtz
llvm.agx2.imgwblk.1d.array.rtz
llvm.agx2.imgwblk.1d.lod
llvm.agx2.imgwblk.1d.lod.rtz
llvm.agx2.imgwblk.1d.rtz
llvm.agx2.imgwblk.2d
llvm.agx2.imgwblk.2d.array
llvm.agx2.imgwblk.2d.array.lod
llvm.agx2.imgwblk.2d.array.lod.rtz
llvm.agx2.imgwblk.2d.array.rtz
llvm.agx2.imgwblk.2d.lod
llvm.agx2.imgwblk.2d.lod.rtz
llvm.agx2.imgwblk.2d.msaa
llvm.agx2.imgwblk.2d.msaa.array
llvm.agx2.imgwblk.2d.msaa.array.rtz
llvm.agx2.imgwblk.2d.msaa.rtz
llvm.agx2.imgwblk.2d.rtz
llvm.agx2.imgwblk.3d
llvm.agx2.imgwblk.3d.lod
llvm.agx2.imgwblk.3d.lod.rtz
llvm.agx2.imgwblk.3d.rtz
llvm.agx2.imgwblk.coords.1d
llvm.agx2.imgwblk.coords.1d.array
llvm.agx2.imgwblk.coords.1d.array.lod
llvm.agx2.imgwblk.coords.1d.array.lod.rtz
llvm.agx2.imgwblk.coords.1d.array.rtz
llvm.agx2.imgwblk.coords.1d.lod
llvm.agx2.imgwblk.coords.1d.lod.rtz
llvm.agx2.imgwblk.coords.1d.rtz
llvm.agx2.imgwblk.coords.2d
llvm.agx2.imgwblk.coords.2d.array
llvm.agx2.imgwblk.coords.2d.array.lod
llvm.agx2.imgwblk.coords.2d.array.lod.rtz
llvm.agx2.imgwblk.coords.2d.array.rtz
llvm.agx2.imgwblk.coords.2d.lod
llvm.agx2.imgwblk.coords.2d.lod.rtz
llvm.agx2.imgwblk.coords.2d.msaa
llvm.agx2.imgwblk.coords.2d.msaa.array
llvm.agx2.imgwblk.coords.2d.msaa.array.rtz
llvm.agx2.imgwblk.coords.2d.msaa.rtz
llvm.agx2.imgwblk.coords.2d.rtz
llvm.agx2.imgwblk.coords.3d
llvm.agx2.imgwblk.coords.3d.lod
llvm.agx2.imgwblk.coords.3d.lod.rtz
llvm.agx2.imgwblk.coords.3d.rtz
llvm.agx2.imgwblk.coords.cubestf
llvm.agx2.imgwblk.coords.cubestf.array
llvm.agx2.imgwblk.coords.cubestf.array.lod
llvm.agx2.imgwblk.coords.cubestf.array.lod.rtz
llvm.agx2.imgwblk.coords.cubestf.array.rtz
llvm.agx2.imgwblk.coords.cubestf.lod
llvm.agx2.imgwblk.coords.cubestf.lod.rtz
llvm.agx2.imgwblk.coords.cubestf.rtz
llvm.agx2.imgwblk.cubestf
llvm.agx2.imgwblk.cubestf.array
llvm.agx2.imgwblk.cubestf.array.lod
llvm.agx2.imgwblk.cubestf.array.lod.rtz
llvm.agx2.imgwblk.cubestf.array.rtz
llvm.agx2.imgwblk.cubestf.lod
llvm.agx2.imgwblk.cubestf.lod.rtz
llvm.agx2.imgwblk.cubestf.rtz
llvm.agx2.imgwblk.subset.1d
llvm.agx2.imgwblk.subset.1d.array
llvm.agx2.imgwblk.subset.1d.array.lod
llvm.agx2.imgwblk.subset.1d.array.lod.rtz
llvm.agx2.imgwblk.subset.1d.array.rtz
llvm.agx2.imgwblk.subset.1d.lod
llvm.agx2.imgwblk.subset.1d.lod.rtz
llvm.agx2.imgwblk.subset.1d.rtz
llvm.agx2.imgwblk.subset.2d
llvm.agx2.imgwblk.subset.2d.array
llvm.agx2.imgwblk.subset.2d.array.lod
llvm.agx2.imgwblk.subset.2d.array.lod.rtz
llvm.agx2.imgwblk.subset.2d.array.rtz
llvm.agx2.imgwblk.subset.2d.lod
llvm.agx2.imgwblk.subset.2d.lod.rtz
llvm.agx2.imgwblk.subset.2d.msaa
llvm.agx2.imgwblk.subset.2d.msaa.array
llvm.agx2.imgwblk.subset.2d.msaa.array.rtz
llvm.agx2.imgwblk.subset.2d.msaa.rtz
llvm.agx2.imgwblk.subset.2d.rtz
llvm.agx2.imgwblk.subset.3d
llvm.agx2.imgwblk.subset.3d.lod
llvm.agx2.imgwblk.subset.3d.lod.rtz
llvm.agx2.imgwblk.subset.3d.rtz
llvm.agx2.imgwblk.subset.coords.1d
llvm.agx2.imgwblk.subset.coords.1d.array
llvm.agx2.imgwblk.subset.coords.1d.array.lod
llvm.agx2.imgwblk.subset.coords.1d.array.lod.rtz
llvm.agx2.imgwblk.subset.coords.1d.array.rtz
llvm.agx2.imgwblk.subset.coords.1d.lod
llvm.agx2.imgwblk.subset.coords.1d.lod.rtz
llvm.agx2.imgwblk.subset.coords.1d.rtz
llvm.agx2.imgwblk.subset.coords.2d
llvm.agx2.imgwblk.subset.coords.2d.array
llvm.agx2.imgwblk.subset.coords.2d.array.lod
llvm.agx2.imgwblk.subset.coords.2d.array.lod.rtz
llvm.agx2.imgwblk.subset.coords.2d.array.rtz
llvm.agx2.imgwblk.subset.coords.2d.lod
llvm.agx2.imgwblk.subset.coords.2d.lod.rtz
llvm.agx2.imgwblk.subset.coords.2d.msaa
llvm.agx2.imgwblk.subset.coords.2d.msaa.array
llvm.agx2.imgwblk.subset.coords.2d.msaa.array.rtz
llvm.agx2.imgwblk.subset.coords.2d.msaa.rtz
llvm.agx2.imgwblk.subset.coords.2d.rtz
llvm.agx2.imgwblk.subset.coords.3d
llvm.agx2.imgwblk.subset.coords.3d.lod
llvm.agx2.imgwblk.subset.coords.3d.lod.rtz
llvm.agx2.imgwblk.subset.coords.3d.rtz
llvm.agx2.imgwblk.subset.coords.cubestf
llvm.agx2.imgwblk.subset.coords.cubestf.array
llvm.agx2.imgwblk.subset.coords.cubestf.array.lod
llvm.agx2.imgwblk.subset.coords.cubestf.array.lod.rtz
llvm.agx2.imgwblk.subset.coords.cubestf.array.rtz
llvm.agx2.imgwblk.subset.coords.cubestf.lod
llvm.agx2.imgwblk.subset.coords.cubestf.lod.rtz
llvm.agx2.imgwblk.subset.coords.cubestf.rtz
llvm.agx2.imgwblk.subset.cubestf
llvm.agx2.imgwblk.subset.cubestf.array
llvm.agx2.imgwblk.subset.cubestf.array.lod
llvm.agx2.imgwblk.subset.cubestf.array.lod.rtz
llvm.agx2.imgwblk.subset.cubestf.array.rtz
llvm.agx2.imgwblk.subset.cubestf.lod
llvm.agx2.imgwblk.subset.cubestf.lod.rtz
llvm.agx2.imgwblk.subset.cubestf.rtz
llvm.agx2.instance.number
llvm.agx2.instance.valid
llvm.agx2.istackh
llvm.agx2.istackl
llvm.agx2.itr.centroid.1xf
llvm.agx2.itr.centroid.1xh
llvm.agx2.itr.centroid.2xf
llvm.agx2.itr.centroid.2xh
llvm.agx2.itr.centroid.3xf
llvm.agx2.itr.centroid.3xh
llvm.agx2.itr.centroid.4xf
llvm.agx2.itr.centroid.4xh
llvm.agx2.itr.pixel.1xf
llvm.agx2.itr.pixel.1xh
llvm.agx2.itr.pixel.2xf
llvm.agx2.itr.pixel.2xh
llvm.agx2.itr.pixel.3xf
llvm.agx2.itr.pixel.3xh
llvm.agx2.itr.pixel.4xf
llvm.agx2.itr.pixel.4xh
llvm.agx2.itr.sample.1xf
llvm.agx2.itr.sample.1xh
llvm.agx2.itr.sample.2xf
llvm.agx2.itr.sample.2xh
llvm.agx2.itr.sample.3xf
llvm.agx2.itr.sample.3xh
llvm.agx2.itr.sample.4xf
llvm.agx2.itr.sample.4xh
llvm.agx2.itr.tmp.1xf
llvm.agx2.itr.tmp.2xf
llvm.agx2.itr.tmp.3xf
llvm.agx2.itr.tmp.4xf
llvm.agx2.itrproj.centroid.1xf
llvm.agx2.itrproj.centroid.1xh
llvm.agx2.itrproj.centroid.2xf
llvm.agx2.itrproj.centroid.2xh
llvm.agx2.itrproj.centroid.3xf
llvm.agx2.itrproj.centroid.3xh
llvm.agx2.itrproj.centroid.4xf
llvm.agx2.itrproj.centroid.4xh
llvm.agx2.itrproj.pixel.1xf
llvm.agx2.itrproj.pixel.1xh
llvm.agx2.itrproj.pixel.2xf
llvm.agx2.itrproj.pixel.2xh
llvm.agx2.itrproj.pixel.3xf
llvm.agx2.itrproj.pixel.3xh
llvm.agx2.itrproj.pixel.4xf
llvm.agx2.itrproj.pixel.4xh
llvm.agx2.itrproj.sample.1xf
llvm.agx2.itrproj.sample.1xh
llvm.agx2.itrproj.sample.2xf
llvm.agx2.itrproj.sample.2xh
llvm.agx2.itrproj.sample.3xf
llvm.agx2.itrproj.sample.3xh
llvm.agx2.itrproj.sample.4xf
llvm.agx2.itrproj.sample.4xh
llvm.agx2.itrproj.tmp.1xf
llvm.agx2.itrproj.tmp.2xf
llvm.agx2.itrproj.tmp.3xf
llvm.agx2.itrproj.tmp.4xf
llvm.agx2.linear.id
llvm.agx2.lldiblk.1xf
llvm.agx2.lldiblk.1xh
llvm.agx2.lldiblk.2xf
llvm.agx2.lldiblk.2xh
llvm.agx2.lldiblk.3xf
llvm.agx2.lldiblk.3xh
llvm.agx2.lldiblk.4xf
llvm.agx2.lldiblk.4xh
llvm.agx2.lmdescpack.1d
llvm.agx2.lmdescpack.2d
llvm.agx2.load.1xsz16.f16
llvm.agx2.load.1xsz16.f16.cachectl
llvm.agx2.load.1xsz16.i16
llvm.agx2.load.1xsz16.i16.cachectl
llvm.agx2.load.1xsz32.f32
llvm.agx2.load.1xsz32.f32.cachectl
llvm.agx2.load.1xsz32.i32
llvm.agx2.load.1xsz32.i32.cachectl
llvm.agx2.load.2xsz16.f16
llvm.agx2.load.2xsz16.f16.cachectl
llvm.agx2.load.2xsz16.i16
llvm.agx2.load.2xsz16.i16.cachectl
llvm.agx2.load.2xsz32.f32
llvm.agx2.load.2xsz32.f32.cachectl
llvm.agx2.load.2xsz32.i32
llvm.agx2.load.2xsz32.i32.cachectl
llvm.agx2.load.3xsz16.f16
llvm.agx2.load.3xsz16.f16.cachectl
llvm.agx2.load.3xsz16.i16
llvm.agx2.load.3xsz16.i16.cachectl
llvm.agx2.load.3xsz32.f32
llvm.agx2.load.3xsz32.f32.cachectl
llvm.agx2.load.3xsz32.i32
llvm.agx2.load.3xsz32.i32.cachectl
llvm.agx2.load.4xsz16.f16
llvm.agx2.load.4xsz16.f16.cachectl
llvm.agx2.load.4xsz16.i16
llvm.agx2.load.4xsz16.i16.cachectl
llvm.agx2.load.4xsz32.f32
llvm.agx2.load.4xsz32.f32.cachectl
llvm.agx2.load.4xsz32.i32
llvm.agx2.load.4xsz32.i32.cachectl
llvm.agx2.local.x
llvm.agx2.local.y
llvm.agx2.local.z
llvm.agx2.lstiblk.1xf
llvm.agx2.lstiblk.1xh
llvm.agx2.lstiblk.2xf
llvm.agx2.lstiblk.2xh
llvm.agx2.lstiblk.3xf
llvm.agx2.lstiblk.3xh
llvm.agx2.lstiblk.4xf
llvm.agx2.lstiblk.4xh
llvm.agx2.map.sg
llvm.agx2.map.tg
llvm.agx2.memory.fence
llvm.agx2.msaa.mode
llvm.agx2.msg
llvm.agx2.nop
llvm.agx2.pack.1xsz16.f16
llvm.agx2.pack.1xsz16.i16
llvm.agx2.pack.1xsz32.f32
llvm.agx2.pack.1xsz32.i32
llvm.agx2.pack.2xsz16.f16
llvm.agx2.pack.2xsz16.i16
llvm.agx2.pack.2xsz32.f32
llvm.agx2.pack.2xsz32.i32
llvm.agx2.pack.3xsz16.f16
llvm.agx2.pack.3xsz16.i16
llvm.agx2.pack.3xsz32.f32
llvm.agx2.pack.3xsz32.i32
llvm.agx2.pack.4xsz16.f16
llvm.agx2.pack.4xsz16.i16
llvm.agx2.pack.4xsz32.f32
llvm.agx2.pack.4xsz32.i32
llvm.agx2.pack.rne.s32
llvm.agx2.pack.rne.u32
llvm.agx2.pass.number
llvm.agx2.pixel.coord.x
llvm.agx2.pixel.coord.y
llvm.agx2.pixel.depthf
llvm.agx2.pixel.depthf.with.smp
llvm.agx2.pixel.dfdx
llvm.agx2.pixel.dfdy
llvm.agx2.pixel.feedback.depth
llvm.agx2.pixel.feedback.depth.stencil
llvm.agx2.pixel.feedback.stencil
llvm.agx2.pixel.itr.1xf
llvm.agx2.pixel.itr.1xh
llvm.agx2.pixel.itr.2xf
llvm.agx2.pixel.itr.2xh
llvm.agx2.pixel.itr.3xf
llvm.agx2.pixel.itr.3xh
llvm.agx2.pixel.itr.4xf
llvm.agx2.pixel.itr.4xh
llvm.agx2.pixel.itrproj.1xf
llvm.agx2.pixel.itrproj.1xh
llvm.agx2.pixel.itrproj.2xf
llvm.agx2.pixel.itrproj.2xh
llvm.agx2.pixel.itrproj.3xf
llvm.agx2.pixel.itrproj.3xh
llvm.agx2.pixel.itrproj.4xf
llvm.agx2.pixel.itrproj.4xh
llvm.agx2.pixel.movmsk.with.smp
llvm.agx2.pixel.write.coords.f16
llvm.agx2.pixel.write.coords.f32
llvm.agx2.pixel.write.coords.i16
llvm.agx2.pixel.write.coords.i32
llvm.agx2.pixel.write.f16
llvm.agx2.pixel.write.f32
llvm.agx2.pixel.write.i16
llvm.agx2.pixel.write.i32
llvm.agx2.pixrel
llvm.agx2.pixwait
llvm.agx2.pow.f16
llvm.agx2.pow.f32
llvm.agx2.powrd
llvm.agx2.previous.simd.valid.count
llvm.agx2.previous.thread.valid.count
llvm.agx2.program.type
llvm.agx2.qrefl
llvm.agx2.quad.ballot.u.32
llvm.agx2.quad.broadcast.u.i16
llvm.agx2.quad.broadcast.u.i32
llvm.agx2.quad.element
llvm.agx2.quad.group
llvm.agx2.quad.reduce.f.Add
llvm.agx2.quad.reduce.f.Max
llvm.agx2.quad.reduce.f.Min
llvm.agx2.quad.reduce.f.Mul
llvm.agx2.quad.reduce.f16.Add
llvm.agx2.quad.reduce.f16.Max
llvm.agx2.quad.reduce.f16.Min
llvm.agx2.quad.reduce.f16.Mul
llvm.agx2.quad.reduce.i.Add
llvm.agx2.quad.reduce.i.And
llvm.agx2.quad.reduce.i.Max
llvm.agx2.quad.reduce.i.Min
llvm.agx2.quad.reduce.i.Or
llvm.agx2.quad.reduce.i.Xor
llvm.agx2.quad.reduce.u.Max
llvm.agx2.quad.reduce.u.Min
llvm.agx2.quad.rotup.u.i16
llvm.agx2.quad.rotup.u.i32
llvm.agx2.quad.shuffle.down.u.i16
llvm.agx2.quad.shuffle.down.u.i32
llvm.agx2.quad.shuffle.up.u.i16
llvm.agx2.quad.shuffle.up.u.i32
llvm.agx2.quad.xor.u.i16
llvm.agx2.quad.xor.u.i32
llvm.agx2.rcp
llvm.agx2.read.coord.x.pixel
llvm.agx2.read.coord.x.sample
llvm.agx2.read.coord.y.pixel
llvm.agx2.read.coord.y.sample
llvm.agx2.read.first.lane
llvm.agx2.read.sample.number
llvm.agx2.rev
llvm.agx2.rog.texture.fence
llvm.agx2.rsqrt
llvm.agx2.sadd.sat
llvm.agx2.sample.itr.1xf
llvm.agx2.sample.itr.1xh
llvm.agx2.sample.itr.2xf
llvm.agx2.sample.itr.2xh
llvm.agx2.sample.itr.3xf
llvm.agx2.sample.itr.3xh
llvm.agx2.sample.itr.4xf
llvm.agx2.sample.itr.4xh
llvm.agx2.sample.itrproj.1xf
llvm.agx2.sample.itrproj.1xh
llvm.agx2.sample.itrproj.2xf
llvm.agx2.sample.itrproj.2xh
llvm.agx2.sample.itrproj.3xf
llvm.agx2.sample.itrproj.3xh
llvm.agx2.sample.itrproj.4xf
llvm.agx2.sample.itrproj.4xh
llvm.agx2.sample.mask.in
llvm.agx2.sample.read.1xf16
llvm.agx2.sample.read.1xf32
llvm.agx2.sample.read.1xi16
llvm.agx2.sample.read.1xi32
llvm.agx2.sample.read.2xf16
llvm.agx2.sample.read.2xf32
llvm.agx2.sample.read.2xi16
llvm.agx2.sample.read.2xi32
llvm.agx2.sample.read.3xf16
llvm.agx2.sample.read.3xf32
llvm.agx2.sample.read.3xi16
llvm.agx2.sample.read.3xi32
llvm.agx2.sample.read.4xf16
llvm.agx2.sample.read.4xf32
llvm.agx2.sample.read.4xi16
llvm.agx2.sample.read.4xi32
llvm.agx2.sample.read.coords.1xf16
llvm.agx2.sample.read.coords.1xf32
llvm.agx2.sample.read.coords.1xi16
llvm.agx2.sample.read.coords.1xi32
llvm.agx2.sample.read.coords.2xf16
llvm.agx2.sample.read.coords.2xf32
llvm.agx2.sample.read.coords.2xi16
llvm.agx2.sample.read.coords.2xi32
llvm.agx2.sample.read.coords.3xf16
llvm.agx2.sample.read.coords.3xf32
llvm.agx2.sample.read.coords.3xi16
llvm.agx2.sample.read.coords.3xi32
llvm.agx2.sample.read.coords.4xf16
llvm.agx2.sample.read.coords.4xf32
llvm.agx2.sample.read.coords.4xi16
llvm.agx2.sample.read.coords.4xi32
llvm.agx2.shfl
llvm.agx2.simd.ballot.u.32
llvm.agx2.simd.bcast.u.i16
llvm.agx2.simd.bcast.u.i32
llvm.agx2.simd.bfly.u.i16
llvm.agx2.simd.bfly.u.i32
llvm.agx2.simd.broadcast.u.i16
llvm.agx2.simd.broadcast.u.i32
llvm.agx2.simd.element
llvm.agx2.simd.group
llvm.agx2.simd.reduce.f.Add
llvm.agx2.simd.reduce.f.Max
llvm.agx2.simd.reduce.f.Min
llvm.agx2.simd.reduce.f.Mul
llvm.agx2.simd.reduce.f16.Add
llvm.agx2.simd.reduce.f16.Max
llvm.agx2.simd.reduce.f16.Min
llvm.agx2.simd.reduce.f16.Mul
llvm.agx2.simd.reduce.i.Add
llvm.agx2.simd.reduce.i.And
llvm.agx2.simd.reduce.i.Max
llvm.agx2.simd.reduce.i.Min
llvm.agx2.simd.reduce.i.Or
llvm.agx2.simd.reduce.i.Xor
llvm.agx2.simd.reduce.u.Max
llvm.agx2.simd.reduce.u.Min
llvm.agx2.simd.rotup.u.i16
llvm.agx2.simd.rotup.u.i32
llvm.agx2.simd.shff.dn.f
llvm.agx2.simd.shff.dn.i
llvm.agx2.simd.shff.up.f
llvm.agx2.simd.shff.up.i
llvm.agx2.simd.shift.down.u.i16
llvm.agx2.simd.shift.down.u.i32
llvm.agx2.simd.shift.up.u.i16
llvm.agx2.simd.shift.up.u.i32
llvm.agx2.simd.shuffle.down.u.i16
llvm.agx2.simd.shuffle.down.u.i32
llvm.agx2.simd.shuffle.u.i16
llvm.agx2.simd.shuffle.u.i32
llvm.agx2.simd.shuffle.up.u.i16
llvm.agx2.simd.shuffle.up.u.i32
llvm.agx2.simd.xor.u.i16
llvm.agx2.simd.xor.u.i32
llvm.agx2.simdgroup.barrier.with.scope
llvm.agx2.sin
llvm.agx2.sinc
llvm.agx2.smad.sat
llvm.agx2.smsub.sat
llvm.agx2.smul.sat
llvm.agx2.sqrt.step
llvm.agx2.ssub.sat
llvm.agx2.store.1xsz16.f16
llvm.agx2.store.1xsz16.f16.cachectl
llvm.agx2.store.1xsz16.i16
llvm.agx2.store.1xsz16.i16.cachectl
llvm.agx2.store.1xsz32.f32
llvm.agx2.store.1xsz32.f32.cachectl
llvm.agx2.store.1xsz32.i32
llvm.agx2.store.1xsz32.i32.cachectl
llvm.agx2.store.2xsz16.f16
llvm.agx2.store.2xsz16.f16.cachectl
llvm.agx2.store.2xsz16.i16
llvm.agx2.store.2xsz16.i16.cachectl
llvm.agx2.store.2xsz32.f32
llvm.agx2.store.2xsz32.f32.cachectl
llvm.agx2.store.2xsz32.i32
llvm.agx2.store.2xsz32.i32.cachectl
llvm.agx2.store.3xsz16.f16
llvm.agx2.store.3xsz16.f16.cachectl
llvm.agx2.store.3xsz16.i16
llvm.agx2.store.3xsz16.i16.cachectl
llvm.agx2.store.3xsz32.f32
llvm.agx2.store.3xsz32.f32.cachectl
llvm.agx2.store.3xsz32.i32
llvm.agx2.store.3xsz32.i32.cachectl
llvm.agx2.store.4xsz16.f16
llvm.agx2.store.4xsz16.f16.cachectl
llvm.agx2.store.4xsz16.i16
llvm.agx2.store.4xsz16.i16.cachectl
llvm.agx2.store.4xsz32.f32
llvm.agx2.store.4xsz32.f32.cachectl
llvm.agx2.store.4xsz32.i32
llvm.agx2.store.4xsz32.i32.cachectl
llvm.agx2.syncbuf
llvm.agx2.texture.memory.fence
llvm.agx2.thread.position.in.grid.x
llvm.agx2.thread.position.in.grid.y
llvm.agx2.thread.position.in.grid.z
llvm.agx2.threadgroup.barrier.with.scope
llvm.agx2.threadgroup.id
llvm.agx2.threadgroup.x
llvm.agx2.threadgroup.x.size
llvm.agx2.threadgroup.y
llvm.agx2.threadgroup.y.size
llvm.agx2.threadgroup.z
llvm.agx2.threadgroup.z.size
llvm.agx2.tile.id
llvm.agx2.total.simd.valid.count
llvm.agx2.total.thread.valid.count
llvm.agx2.tpp.visibility.pass
llvm.agx2.tsci
llvm.agx2.uadd.sat
llvm.agx2.umad.sat
llvm.agx2.umsub.sat
llvm.agx2.umul.sat
llvm.agx2.unmap.sg
llvm.agx2.unmap.tg
llvm.agx2.unpack.1xsz16.f16
llvm.agx2.unpack.1xsz16.i16
llvm.agx2.unpack.1xsz32.f32
llvm.agx2.unpack.1xsz32.i32
llvm.agx2.unpack.2xsz16.f16
llvm.agx2.unpack.2xsz16.i16
llvm.agx2.unpack.2xsz32.f32
llvm.agx2.unpack.2xsz32.i32
llvm.agx2.unpack.3xsz16.f16
llvm.agx2.unpack.3xsz16.i16
llvm.agx2.unpack.3xsz32.f32
llvm.agx2.unpack.3xsz32.i32
llvm.agx2.unpack.4xsz16.f16
llvm.agx2.unpack.4xsz16.i16
llvm.agx2.unpack.4xsz32.f32
llvm.agx2.unpack.4xsz32.i32
llvm.agx2.update.hw.coverage.mask.coords.i16
llvm.agx2.update.hw.coverage.mask.i16
llvm.agx2.usub.sat
llvm.agx2.util.data.hi
llvm.agx2.util.data.lo
llvm.agx2.util.func
llvm.agx2.vertex.amp.id.count
llvm.agx2.vertex.amp.id.count.i32
llvm.agx2.vertex.amp.id.mask.i32
llvm.agx2.vertex.clip.amplified.write
llvm.agx2.vertex.clip.write
llvm.agx2.vertex.layerid.amplified.write.i32
llvm.agx2.vertex.layerid.write.i32
llvm.agx2.vertex.pos.amplified.write
llvm.agx2.vertex.pos.write
llvm.agx2.vertex.ptsize.amplified.write
llvm.agx2.vertex.ptsize.write
llvm.agx2.vertex.varying.amplified.struct.write.f32
llvm.agx2.vertex.varying.amplified.struct.write.i32
llvm.agx2.vertex.varying.amplified.write.f32
llvm.agx2.vertex.varying.amplified.write.i32
llvm.agx2.vertex.varying.struct.write.f32
llvm.agx2.vertex.varying.struct.write.i32
llvm.agx2.vertex.varying.write.f32
llvm.agx2.vertex.varying.write.i32
llvm.agx2.vertex.viewportid.amplified.write.i32
llvm.agx2.vertex.viewportid.write.i32
llvm.agx2.vertex.write
llvm.agx2.vertex.writef
llvm.agx2.workgroup.id
vararg
isVoid
Metadata
bf16
f128
ppcf128
x86mmx
value isn't a global
global isn't in section "llvm.ptrauth"
global doesn't have an initializer
global isn't a struct
global doesn't have type '{ i8*, i32, i64, i64 }'
key isn't a constant integer
address discriminator isn't a constant integer or expr
discriminator isn't a constant integer
<unknown>:
switch
indirectbr
invoke
resume
unreachable
cleanupret
catchret
catchpad
catchswitch
fmul
udiv
sdiv
fdiv
urem
srem
frem
alloca
load
store
cmpxchg
atomicrmw
fence
getelementptr
zext
sext
fptrunc
fpext
fptoui
fptosi
uitofp
sitofp
inttoptr
ptrtoint
bitcast
addrspacecast
icmp
fcmp
select
call
lshr
ashr
va_arg
insertelement
shufflevector
extractvalue
insertvalue
landingpad
cleanuppad
<Invalid operator> 
both values to select must have same type
select values cannot have token type
vector select condition element type must be i1
selected values for vector select must be vectors
vector select requires selected vectors to have the same vector length as select condition
select condition must be i1 or <n x i1>
xchg
nand
umax
umin
fadd
fsub
<invalid operation>
malloc
free
tbaa
prof
fpmath
range
tbaa.struct
invariant.load
alias.scope
noalias
nontemporal
llvm.mem.parallel_loop_access
nonnull
dereferenceable
dereferenceable_or_null
make.implicit
unpredictable
invariant.group
align
llvm.loop
type
section_prefix
absolute_symbol
associated
callees
irr_loop
deopt
funclet
gc-transition
singlethread
error
warning
remark
note
debug-pass
Print PassManager debugging information
Disabled
disable debug output
Arguments
print pass arguments to pass to 'opt'
Structure
print pass structure before run()
Executions
print pass name before it is executed
Details
print pass details when it is executed
print-before
Print IR before specified passes
print-after
Print IR after specified passes
print-before-all
Print IR before each pass
print-after-all
Print IR after each pass
print-module-scope
When printing IR for print-[before|after]{-all} always print a module IR
filter-print-funcs
function names
Only print IR for functions whose name match this for all print-[before|after][-all] options
Pass
time-passes
Time each pass, printing elapsed time for each on exit
__unnamed_
 /EXPORT:
 -export:
,DATA
,data
llvm.module.flags
SDK Version
SCC (
 node
External
 (has loop)
opt-bisect-limit
Maximum optimization to perform
Two passes with the same argument (-
) attempted to be registered!
non-global-value-max-name-size
Maximum size for the name of non-global values.
Base nodes must have at least two operands
Access tag nodes must have the number of operands that is a multiple of 3!
Struct tag nodes must have an odd number of operands!
Type size nodes must be constants!
Struct tag nodes have a string as their first operand
Incorrect field entry in struct type node!
Offset entries must be constants!
Bitwidth between the offsets and struct type entries must match
Offsets must be increasing!
Member size entries must be constants!
Could not find TBAA parent in struct type node
This instruction shall not have a TBAA access tag!
Old-style TBAA is no longer allowed, use struct-path TBAA instead
Access tag metadata must have either 4 or 5 operands
Struct tag metadata must have either 3 or 4 operands
Access size field must be a constant
Immutability tag on struct tag metadata must be a constant
Immutability part of the struct tag metadata must be either 0 or 1
Malformed struct tag metadata: base and access-type should be non-null and point to Metadata nodes
Access type node must be a valid scalar type
Offset must be constant integer
Cycle detected in struct path
Offset not zero at the point of scalar access
Access bit-width not the same as description bit-width
Did not see access type in access path!
Broken module found, compilation aborted!
Basic Block in function '
' does not have terminator!
Function context does not match Module context!
Functions may not have common linkage
# formal arguments must match # of arguments for function type!
Functions cannot return aggregate values!
Invalid struct return type!
Attribute after last parameter!
Attribute 'builtin' can only be applied to a callsite.
Calling convention requires void return type
Calling convention does not allow sret
Calling convention does not support varargs or perfect forwarding!
llvm.
Argument value does not match function argument type!
Function arguments must have first-class types!
Function takes metadata but isn't an intrinsic
Function takes token but isn't an intrinsic
Functions returns a token but isn't an intrinsic
Referencing personality function in another module!
unmaterialized function cannot have metadata
function declaration may not have a !dbg attachment
function declaration may not have a !prof attachment
Function declaration shouldn't have a personality routine
llvm intrinsics cannot be defined!
Entry block to function must not have predecessors!
blockaddress may not be used with the entry block!
function must have a single !dbg attachment
function !dbg attachment must be a subprogram
DISubprogram attached to more than one function
function must have a single !prof attachment
Invalid user of intrinsic instruction!
!dbg attachment points at wrong subprogram for function
Global is external, but doesn't have external or weak linkage!
huge alignment values are unsupported
Only global variables can have appending linkage!
Only global arrays can have appending linkage!
Declaration may not be in a Comdat!
GlobalValue with DLLImport Storage is dso_local!
Global is marked as dllimport, but not external
GlobalValue with private or internal linkage must be dso_local!
GlobalValue with non default visibility must be dso_local!
Global is referenced by parentless instruction!
Global is referenced in a different module!
Global is used by function in a different module
; ModuleID = '
Attributes 'byval', 'inalloca', 'nest', 'sret', 'nocapture', 'returned', 'swiftself', and 'swifterror' do not apply to return values!
Attribute '
' does not apply to function returns
More than one parameter has attribute nest!
More than one parameter has attribute returned!
Incompatible argument and return types for 'returned' attribute
Cannot have multiple 'sret' parameters!
Attribute 'sret' is not on first or second parameter!
Cannot have multiple 'swiftself' parameters!
Cannot have multiple 'swifterror' parameters!
inalloca isn't on the last parameter!
Attributes 'readnone and readonly' are incompatible!
Attributes 'readnone and writeonly' are incompatible!
Attributes 'readonly and writeonly' are incompatible!
Attributes 'readnone and inaccessiblemem_or_argmemonly' are incompatible!
Attributes 'readnone and inaccessiblememonly' are incompatible!
Attributes 'noinline and alwaysinline' are incompatible!
Attribute 'optnone' requires 'noinline'!
Attributes 'optsize and optnone' are incompatible!
Attributes 'minsize and optnone' are incompatible!
Attribute 'jumptable' requires 'unnamed_addr'
element size
number of elements
Attributes 'byval', 'inalloca', 'inreg', 'nest', and 'sret' are incompatible!
Attributes 'inalloca and readonly' are incompatible!
Attributes 'sret and returned' are incompatible!
Attributes 'zeroext and signext' are incompatible!
Attribute 'byval' type does not match parameter!
Wrong types for attribute: 
Attributes 'byval' and 'inalloca' do not support unsized types!
Attribute 'swifterror' only applies to parameters with pointer to pointer type!
Attribute 'byval' only applies to parameters with pointer type!
Attribute 'swifterror' only applies to parameters with pointer type!
' only applies to functions!
' does not apply to functions!
'allocsize' 
 argument is out of bounds
 argument must refer to an integer parameter
swifterror value can only be loaded and stored from, or as a swifterror argument!
swifterror value should be the second operand when used by stores
swifterror value when used in a callsite should be marked with swifterror attribute
!prof annotations should have no less than 2 operands
first operand should not be null
expected string with name of the !prof annotation
first operand should be 'function_entry_count' or 'synthetic_function_entry_count'
second operand should not be null
expected integer argument to function_entry_count
Invalid operand for global metadata!
Expected no forward declarations!
All nodes should be resolved!
location requires a valid scope
inlined-at should be a location
scope points into the type hierarchy
invalid expression
missing variable
fragment is larger than or outside of variable
fragment covers entire variable
invalid tag
Count must either be a signed constant or a DIVariable
invalid subrange count
invalid pointer to member type
invalid scope
invalid base type
DWARF address space only applies to pointer or reference types
invalid file
invalid composite elements
invalid vtable holder
invalid reference flags
invalid vector, expected one element of type subrange
class/union requires a filename
discriminator can only appear on variant part
invalid template params
invalid template parameter
invalid subroutine type ref
invalid checksum kind
invalid checksum length
invalid checksum
compile units must be distinct
invalid filename
invalid emission kind
invalid enum list
invalid enum type
invalid retained type list
invalid retained type
invalid global variable list
invalid global variable ref
invalid imported entity list
invalid imported entity ref
invalid macro list
invalid macro ref
line specified with no file
invalid subroutine type
invalid containing type
invalid subprogram declaration
invalid retained nodes list
invalid retained nodes, expected DILocalVariable or DILabel
subprogram definitions must be distinct
subprogram definitions must have a compile unit
invalid unit type
subprogram declarations must not have a compile unit
invalid thrown types list
invalid thrown type
DIFlagAllCallsDescribed must be attached to a definition
cannot have column info without line info
invalid local scope
invalid scope ref
anonymous module
invalid type ref
missing global variable name
missing global variable type
invalid static data member declaration
local variable requires a valid scope
label requires a valid scope
invalid scope for imported entity
invalid imported entity
invalid macinfo type
anonymous macro
Expected valid value
Unexpected metadata round-trip through values
function-local metadata used outside a function
function-local metadata not in basic block
function-local metadata used in wrong function
Basic Block does not have terminator!
PHI nodes must have at least one entry.  If the block is dead, the PHI should be removed!
PHINode should have one entry for each predecessor of its parent basic block!
PHI node has multiple entries for the same basic block with different incoming values!
PHI node entries do not match predecessors!
Instruction has bogus parent pointer!
Operand is null
Found return instr that returns non-void in Function of void return type!
Function return type does not match operand type of return inst!
Terminator found in the middle of a basic block!
Instruction not embedded in basic block!
Only PHI nodes may reference their own value!
Instruction has a name, but provides a void value!
Instruction returns a non-scalar type!
Invalid use of metadata!
Instruction referencing instruction not embedded in a basic block!
Use of instruction is not an instruction!
Instruction has null operand!
Instruction operands must be first-class values!
Cannot take the address of an intrinsic!
Cannot invoke an intrinsic other than donothing, patchpoint, statepoint, coro_resume or coro_destroy
Referencing function in another module!
Referring to a basic block in another function!
Referring to an argument in another function!
Referencing global in another module!
Cannot take the address of an inline asm!
fpmath requires a floating point result!
fpmath takes one operand!
fpmath accuracy must have float type
fpmath accuracy not a positive number!
invalid fpmath accuracy!
Ranges are only for loads, calls and invokes!
nonnull applies only to pointer types
nonnull applies only to load instructions, use attributes for calls or invokes
align applies only to pointer types
align applies only to load instructions, use attributes for calls or invokes
align takes one operand!
align metadata value must be an i64!
align metadata value must be a power of 2!
alignment is larger that implementation defined limit
invalid !dbg metadata attachment
Instruction does not dominate all uses!
Invalid bitcast
inttoptr not supported for non-integral pointers
ptrtoint not supported for non-integral pointers
Unfinished range!
It should have at least one range!
The lower limit must be an integer!
The upper limit must be an integer!
Range types must match instruction type!
Range must not be empty!
Intervals are overlapping
Intervals are not in order
Intervals are contiguous
dereferenceable, dereferenceable_or_null apply only to pointer types
dereferenceable, dereferenceable_or_null apply only to load instructions, use attributes for calls or invokes
dereferenceable, dereferenceable_or_null take one operand!
dereferenceable, dereferenceable_or_null metadata value must be an i64!
Branch condition is not 'i1' type!
Switch constants must all be same type as switch value!
Duplicate integer as switch case
Indirectbr operand must have pointer type!
Indirectbr destinations must all have pointer type!
The unwind destination does not have an exception handling instruction!
Called function must be a pointer!
Called function is not pointer to function type!
Called function is not the same type as the call!
Called function requires more parameters than were provided!
Incorrect number of arguments passed to called function!
Call parameter type does not match function signature!
speculatable attribute may not apply to call sites
inalloca argument for call has mismatched alloca
swifterror argument for call has mismatched alloca
swifterror argument should come from an alloca or parameter
swifterror argument for call has mismatched parameter
Attribute 'sret' cannot be used for vararg call arguments!
inalloca isn't on the last argument!
Function has metadata parameter but isn't an intrinsic
Function has token parameter but isn't an intrinsic
Return type cannot be token for indirect call!
Multiple deopt operand bundles
Multiple gc-transition operand bundles
Multiple funclet operand bundles
Expected exactly one funclet bundle operand
Funclet bundle operands should correspond to a FuncletPadInst
Multiple ptrauth operand bundles
Expected exactly two ptrauth bundle operand
Ptrauth bundle key operand must be an i32 constant
Ptrauth bundle discriminator operand must be an i64
inlinable function call in a function with debug info must have a !dbg location
Intrinsic functions should never be defined!
Intrinsic has incorrect return type!
Intrinsic has incorrect argument type!
Intrinsic was not defined with variable arguments!
Callsite was not defined with variable arguments!
Intrinsic has too few arguments!
Intrinsic name not mangled correctly for type arguments! Should be: 
info argument of llvm.coro.begin must refer to an initialized constant
info argument of llvm.coro.begin must refer to either a struct or an array
is_zero_undef argument of bit counting intrinsics must be a constant int
invalid llvm.dbg.declare intrinsic call 1
declare
addr
value
label
alignment of arg 0 of memory intrinsic must be 0 or a power of 2
alignment of arg 1 of memory intrinsic must be 0 or a power of 2
isvolatile argument of memory intrinsics must be a constant int
element size of the element-wise unordered atomic memory intrinsic must be a constant int
element size of the element-wise atomic memory intrinsic must be a power of 2
constant length must be a multiple of the element size in the element-wise atomic memory intrinsic
incorrect alignment of the destination argument
incorrect alignment of the source argument
llvm.gcroot parameter #1 must be an alloca.
llvm.gcroot parameter #2 must be a constant.
llvm.gcroot parameter #1 must either be a pointer alloca, or argument #2 must be a non-null constant.
Enclosing function does not use GC.
llvm.init_trampoline parameter #2 must resolve to a function.
invalid arguments to llvm.prefetch
llvm.stackprotector parameter #2 must resolve to an alloca.
size argument of memory use markers must be a constant integer
llvm.invariant.end parameter #2 must be a constant integer
llvm.localescape used outside of entry block
multiple calls to llvm.localescape in one function
llvm.localescape only accepts static allocas
llvm.localrecover first argument must be function defined in this module
idx argument of llvm.localrecover must be a constant int
gc.statepoint support for inline assembly unimplemented
gc.result operand #1 must be from a statepoint
gc.result result type does not match wrapped callee
wrong number of arguments
gc.relocate must return a pointer or a vector of pointers
safepoints should have unique landingpads
safepoint block should be well formed
gc relocate should be linked to a statepoint
gc relocate is incorrectly tied to the statepoint
gc.relocate operand #2 must be integer offset
gc.relocate operand #3 must be integer offset
gc.relocate: statepoint base index out of bounds
gc.relocate: statepoint derived index out of bounds
gc.statepoint: insufficient arguments
gc.statement: number of call arguments must be constant integer
gc.statepoint: mismatch in number of call arguments
gc.statepoint: number of transition arguments must be a constant integer
gc.statepoint: number of deoptimization arguments must be a constant integer
gc.relocate: statepoint base index doesn't fall within the 'gc parameters' section of the statepoint call
gc.relocate: statepoint derived index doesn't fall within the 'gc parameters' section of the statepoint call
gc.relocate: relocated value must be a gc pointer
gc.relocate: vector relocates to vector and pointer to pointer
gc.relocate: relocating a pointer shouldn't change its address space
eh.exceptionpointer argument must be a catchpad
masked_load: must return a vector
masked_load: mask must be vector
masked_load: return must match pointer type
masked_load: pass through and data type must match
masked_load: vector mask must be same length as data
masked_store: mask must be vector
masked_store: storee must match pointer type
masked_store: vector mask must be same length as data
experimental_guard cannot be invoked
experimental_guard must have exactly one "deopt" operand bundle
experimental_deoptimize cannot be invoked
experimental_deoptimize must have exactly one "deopt" operand bundle
experimental_deoptimize return type must match caller return type
calls to experimental_deoptimize must be followed by a return
calls to experimental_deoptimize must be followed by a return of the value computed by experimental_deoptimize
ptrauth key must be a constant integer
invalid arguments for constrained FP intrinsic
invalid exception behavior argument
invalid rounding mode argument
invalid llvm.dbg.
 intrinsic address/value
 intrinsic variable
 intrinsic expression
llvm.dbg.
 intrinsic requires a !dbg attachment
mismatched subprogram between llvm.dbg.
 variable and !dbg attachment
BlockByRef variable without complex expression
dbg intrinsic without variable
conflicting debug info for argument
 label and !dbg attachment
gc.statepoint must read and write all memory to preserve reordering restrictions required by safepoint semantics
gc.statepoint ID must be a constant integer
gc.statepoint number of patchable bytes must be a constant integer
gc.statepoint number of patchable bytes must be positive
gc.statepoint callee must be of function pointer type
gc.statepoint number of arguments to underlying call must be constant integer
gc.statepoint number of arguments to underlying call must be positive
gc.statepoint mismatch in number of vararg call args
gc.statepoint doesn't support wrapping non-void vararg functions yet
gc.statepoint mismatch in number of call args
gc.statepoint flags must be constant integer
unknown flag used in gc.statepoint flags argument
gc.statepoint call argument does not match wrapped function type
gc.statepoint number of transition arguments must be constant integer
gc.statepoint number of transition arguments must be positive
gc.statepoint number of deoptimization arguments must be constant integer
gc.statepoint number of deoptimization arguments must be positive
gc.statepoint too few arguments according to length fields
illegal use of statepoint token
gc.result or gc.relocate are the only value uses of a gc.statepoint
gc.result connected to wrong gc.statepoint
gc.relocate connected to wrong gc.statepoint
ResumeInst needs to be in a function with a personality.
The resume instruction should have a consistent result type inside a function.
CleanupReturnInst needs to be provided a CleanupPad
CleanupReturnInst must unwind to an EH block which is not a landingpad.
CatchReturnInst needs to be provided a CatchPad
CatchSwitchInst needs to be in a function with a personality.
CatchSwitchInst not the first non-PHI instruction in the block.
CatchSwitchInst has an invalid parent.
CatchSwitchInst must unwind to an EH block which is not a landingpad.
CatchSwitchInst cannot have empty handler list
CatchSwitchInst handlers must be catchpads
EH pad cannot be in entry block.
Block containing LandingPadInst must be jumped to only by the unwind edge of an invoke.
Block containg CatchPadInst must be jumped to only by its catchswitch.
Catchswitch cannot unwind to one of its catchpads
EH pad must be jumped to via an unwind edge
A cleanupret must exit its cleanup
EH pad cannot handle exceptions raised within it
A single unwind edge may only enter one EH pad
EH pad jumps through a cycle of pads
Both operands to a binary operator are not of the same type!
Integer arithmetic operators only work with integral types!
Integer arithmetic operators must have same type for operands and result!
Floating-point arithmetic operators only work with floating-point types!
Floating-point arithmetic operators must have same type for operands and result!
Logical operators only work with integral types!
Logical operators must have same type for operands and result!
Shifts only work with integral types!
Shift return type must be same as operands!
Allocation instruction pointer not in the stack address space!
Cannot allocate unsized type
Alloca array size must have integer type
Load operand must be a pointer.
loading unsized types is not allowed
Load cannot have Release ordering
Atomic load must specify explicit alignment
atomic load operand must have integer, pointer, or floating point type!
Non-atomic load cannot have SynchronizationScope specified
atomic memory access' size must be byte-sized
atomic memory access' operand must have a power-of-two size
Store operand must be a pointer.
Stored value type does not match pointer operand type!
storing unsized types is not allowed
Store cannot have Acquire ordering
Atomic store must specify explicit alignment
atomic store operand must have integer, pointer, or floating point type!
Non-atomic store cannot have SynchronizationScope specified
GEP base pointer is not a vector or a vector of pointers
GEP into unsized type!
GEP indexes must be integers
Invalid indices for GEP pointer type!
GEP is not of right type for indices!
Vector GEP result width doesn't match operand's
Invalid GEP index vector width
All GEP indices should be of integer type
fence instructions may only have acquire, release, acq_rel, or seq_cst ordering.
cmpxchg instructions must be atomic.
cmpxchg instructions cannot be unordered.
cmpxchg instructions failure argument shall be no stronger than the success argument
cmpxchg failure ordering cannot include release semantics
First cmpxchg operand must be a pointer.
cmpxchg operand must have integer or pointer type
Expected value type does not match pointer operand type!
atomicrmw instructions must be atomic.
atomicrmw instructions cannot be unordered.
First atomicrmw operand must be a pointer.
atomicrmw 
 operand must have integer or floating point type!
 operand must have floating point type!
 operand must have integer type!
Argument value type does not match pointer operand type!
Invalid binary operation!
Trunc only operates on integer
Trunc only produces integer
trunc source and destination must both be a vector or neither
DestTy too big for Trunc
ZExt only operates on integer
ZExt only produces an integer
zext source and destination must both be a vector or neither
Type too small for ZExt
SExt only operates on integer
SExt only produces an integer
sext source and destination must both be a vector or neither
Type too small for SExt
FPToUI source and dest must both be vector or scalar
FPToUI source must be FP or FP vector
FPToUI result must be integer or integer vector
FPToUI source and dest vector length mismatch
FPToSI source and dest must both be vector or scalar
FPToSI source must be FP or FP vector
FPToSI result must be integer or integer vector
FPToSI source and dest vector length mismatch
UIToFP source and dest must both be vector or scalar
UIToFP source must be integer or integer vector
UIToFP result must be FP or FP vector
UIToFP source and dest vector length mismatch
SIToFP source and dest must both be vector or scalar
SIToFP source must be integer or integer vector
SIToFP result must be FP or FP vector
SIToFP source and dest vector length mismatch
FPTrunc only operates on FP
FPTrunc only produces an FP
fptrunc source and destination must both be a vector or neither
DestTy too big for FPTrunc
FPExt only operates on FP
FPExt only produces an FP
fpext source and destination must both be a vector or neither
DestTy too small for FPExt
PtrToInt source must be pointer
PtrToInt result must be integral
PtrToInt type mismatch
PtrToInt Vector width mismatch
IntToPtr source must be an integral
IntToPtr result must be a pointer
IntToPtr type mismatch
IntToPtr Vector width mismatch
AddrSpaceCast source must be a pointer
AddrSpaceCast result must be a pointer
AddrSpaceCast must be between different address spaces
AddrSpaceCast vector pointer number of elements mismatch
CleanupPadInst needs to be in a function with a personality.
CleanupPadInst not the first non-PHI instruction in the block.
CleanupPadInst has an invalid parent.
FuncletPadInst must not be nested within itself
Bogus funclet pad use
Unwind edges out of a funclet pad must have the same unwind dest
Unwind edges out of a catch must have the same unwind dest as the parent catchswitch
CatchPadInst needs to be in a function with a personality.
CatchPadInst needs to be directly nested in a CatchSwitchInst.
CatchPadInst not the first non-PHI instruction in the block.
Both operands to ICmp instruction are not of the same type!
Invalid operand types for ICmp instruction
Invalid predicate in ICmp instruction!
Both operands to FCmp instruction are not of the same type!
Invalid operand types for FCmp instruction
Invalid predicate in FCmp instruction!
PHI nodes not grouped at top of basic block!
PHI nodes cannot have token type!
PHI node operands are not the same type as the result!
cannot use musttail call with inline asm
cannot guarantee tail call due to mismatched parameter counts
cannot guarantee tail call due to mismatched parameter types
cannot guarantee tail call due to mismatched varargs
cannot guarantee tail call due to mismatched return types
cannot guarantee tail call due to mismatched calling conv
cannot guarantee tail call due to mismatched ABI impacting function attributes
bitcast following musttail call must use the call
musttail call must precede a ret with an optional bitcast
musttail call result must be returned
Invalid operands for select instruction!
Select values must have same type as select instruction!
User-defined operators should not live outside of a pass!
Invalid extractelement operands!
Invalid insertelement operands!
Invalid shufflevector operands!
Invalid ExtractValueInst operands!
Invalid InsertValueInst operands!
LandingPadInst needs at least one clause or to be a cleanup.
The landingpad instruction should have a consistent result type inside a function.
LandingPadInst needs to be in a function with a personality.
LandingPadInst not the first non-PHI instruction in the block.
Catch operand does not have pointer type!
Clause is neither catch nor filter!
Filter operand is not an array of constants!
EH pads can't handle each other's exceptions
all indices passed to llvm.localrecover must be less than the number of arguments passed ot llvm.localescape in the parent function
Global variable initializer type does not match global variable type!
'common' global must have a zero initializer!
'common' global may not be marked constant!
'common' global may not be in a Comdat!
llvm.global_ctors
llvm.global_dtors
invalid linkage for intrinsic global variable
wrong type for intrinsic global variable
llvm.used
llvm.compiler.used
wrong initalizer for intrinsic global variable
invalid llvm.used member
members of llvm.used must be named
invalid llvm.ptrauth global: 
!dbg attachment of global variable must be a DIGlobalVariableExpression
Alias should have private, internal, linkonce, weak, linkonce_odr, weak_odr, or external linkage!
Aliasee cannot be NULL!
Alias and aliasee types should match!
Aliasee should be either GlobalValue or ConstantExpr
Alias must point to a definition
Aliases cannot form a cycle
Alias cannot point to an interposable alias
llvm.dbg.cu
unrecognized named metadata node in the llvm.dbg namespace
invalid compile unit
comdat global value has private linkage
invalid requirement on flag, flag is not present in module
invalid requirement on flag, flag does not have the required value
incorrect number of operands in module flag
invalid behavior operand in module flag (expected constant integer)
invalid behavior operand in module flag (unexpected constant)
invalid ID operand in module flag (expected metadata string)
invalid value for 'max' module flag (expected constant integer)
invalid value for 'require' module flag (expected metadata pair)
invalid value for 'require' module flag (first value operand should be a string)
invalid value for 'append'-type module flag (expected a metadata node)
module flag identifiers must be unique (or of 'require' type)
wchar_size metadata requires constant integer argument
Linker Options
llvm.linker.options
'Linker Options' named metadata no longer supported
expected a MDNode triple
expected an integer constant
expected a Function or null
llvm.ident
incorrect number of operands in llvm.ident metadata
invalid value for llvm.ident metadata entry operand(the operand should be a string)
llvm.commandline
incorrect number of operands in llvm.commandline metadata
invalid value for llvm.commandline metadata entry operand(the operand should be a string)
DICompileUnit not listed in llvm.dbg.cu
All llvm.experimental.deoptimize declarations must have the same calling convention
Could not open input file: 
parse
Parse IR
irparse
LLVM IR Parsing
SmallVector capacity overflow during allocation
': can only link appending global with another appending global!
Appending variables with different element types!
Appending variables linked with different const'ness!
Appending variables with different alignment need to be linked!
Appending variables with different visibility need to be linked!
Appending variables with different unnamed_addr need to be linked!
Appending variables with different section name need to be linked!
Linking two modules of different data layouts: '
' is '
' whereas '
Linking two modules of different target triples: 
.text
.balign 2
.thumb
.text
.balign 4
.arm
linking module flags '
': IDs have conflicting override values
': IDs have conflicting behaviors
': IDs have conflicting values
': does not have the required value
Linking COMDATs named '
': invalid selection kinds!
': noduplicates has been violated!
': ExactMatch violated!
': SameSize violated!
': COMDAT key involves incomputable alias size.
': GlobalVariable required for data dependent selection!
Linking globals named '
': symbol multiply defined!
LLVM_OVERRIDE_PRODUCER
input module has no datalayout
Unable to determine comdat of alias!
Invalid weak external
__ashlhi3
__ashlsi3
__ashldi3
__ashlti3
__lshrhi3
__lshrsi3
__lshrdi3
__lshrti3
__ashrhi3
__ashrsi3
__ashrdi3
__ashrti3
__mulqi3
__mulhi3
__mulsi3
__muldi3
__multi3
__mulosi4
__mulodi4
__muloti4
__divqi3
__divhi3
__divsi3
__divdi3
__divti3
__udivqi3
__udivhi3
__udivsi3
__udivdi3
__udivti3
__modqi3
__modhi3
__modsi3
__moddi3
__modti3
__umodqi3
__umodhi3
__umodsi3
__umoddi3
__umodti3
__negsi2
__negdi2
__clzsi2
__clzdi2
__clzti2
__addsf3
__adddf3
__addxf3
__addtf3
__gcc_qadd
__subsf3
__subdf3
__subxf3
__subtf3
__gcc_qsub
__mulsf3
__muldf3
__mulxf3
__multf3
__gcc_qmul
__divsf3
__divdf3
__divxf3
__divtf3
__gcc_qdiv
fmodf
fmod
fmodl
fmaf
fmal
__powisf2
__powidf2
__powixf2
__powitf2
sqrtf
sqrt
sqrtl
logf
logl
__logf_finite
__log_finite
__logl_finite
log2f
log2
log2l
__log2f_finite
__log2_finite
__log2l_finite
log10f
log10
log10l
__log10f_finite
__log10_finite
__log10l_finite
expf
expl
__expf_finite
__exp_finite
__expl_finite
exp2f
exp2
exp2l
__exp2f_finite
__exp2_finite
__exp2l_finite
sinf
sinl
cosf
cosl
powf
powl
__powf_finite
__pow_finite
__powl_finite
ceilf
ceil
ceill
truncf
truncl
rintf
rint
rintl
nearbyintf
nearbyint
nearbyintl
roundf
round
roundl
floorf
floor
floorl
copysignf
copysign
copysignl
fminf
fmin
fminl
fmaxf
fmax
fmaxl
__gcc_stoq
__gcc_dtoq
__extendxftf2
__extenddftf2
__extendsftf2
__extendsfdf2
__gnu_h2f_ieee
__gnu_f2h_ieee
__truncdfhf2
__truncxfhf2
__trunctfhf2
__truncdfsf2
__truncxfsf2
__trunctfsf2
__gcc_qtos
__truncxfdf2
__trunctfdf2
__gcc_qtod
__trunctfxf2
__fixsfsi
__fixsfdi
__fixsfti
__fixdfsi
__fixdfdi
__fixdfti
__fixxfsi
__fixxfdi
__fixxfti
__fixtfsi
__fixtfdi
__fixtfti
__gcc_qtou
__fixunssfsi
__fixunssfdi
__fixunssfti
__fixunsdfsi
__fixunsdfdi
__fixunsdfti
__fixunsxfsi
__fixunsxfdi
__fixunsxfti
__fixunstfsi
__fixunstfdi
__fixunstfti
__floatsisf
__floatsidf
__floatsixf
__floatsitf
__gcc_itoq
__floatdisf
__floatdidf
__floatdixf
__floatditf
__floattisf
__floattidf
__floattixf
__floattitf
__floatunsisf
__floatunsidf
__floatunsixf
__floatunsitf
__gcc_utoq
__floatundisf
__floatundidf
__floatundixf
__floatunditf
__floatuntisf
__floatuntidf
__floatuntixf
__floatuntitf
__eqsf2
__eqdf2
__eqtf2
__gcc_qeq
__nesf2
__nedf2
__netf2
__gcc_qne
__gesf2
__gedf2
__getf2
__gcc_qge
__ltsf2
__ltdf2
__lttf2
__gcc_qlt
__lesf2
__ledf2
__letf2
__gcc_qle
__gtsf2
__gtdf2
__gttf2
__gcc_qgt
__unordsf2
__unorddf2
__unordtf2
__gcc_qunord
memcpy
memmove
memset
__llvm_memcpy_element_unordered_atomic_1
__llvm_memcpy_element_unordered_atomic_2
__llvm_memcpy_element_unordered_atomic_4
__llvm_memcpy_element_unordered_atomic_8
__llvm_memcpy_element_unordered_atomic_16
__llvm_memmove_element_unordered_atomic_1
__llvm_memmove_element_unordered_atomic_2
__llvm_memmove_element_unordered_atomic_4
__llvm_memmove_element_unordered_atomic_8
__llvm_memmove_element_unordered_atomic_16
__llvm_memset_element_unordered_atomic_1
__llvm_memset_element_unordered_atomic_2
__llvm_memset_element_unordered_atomic_4
__llvm_memset_element_unordered_atomic_8
__llvm_memset_element_unordered_atomic_16
_Unwind_Resume
__sync_val_compare_and_swap_1
__sync_val_compare_and_swap_2
__sync_val_compare_and_swap_4
__sync_val_compare_and_swap_8
__sync_val_compare_and_swap_16
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_fetch_and_add_1
__sync_fetch_and_add_2
__sync_fetch_and_add_4
__sync_fetch_and_add_8
__sync_fetch_and_add_16
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_sub_16
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_and_16
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_or_16
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__sync_fetch_and_xor_16
__sync_fetch_and_nand_1
__sync_fetch_and_nand_2
__sync_fetch_and_nand_4
__sync_fetch_and_nand_8
__sync_fetch_and_nand_16
__sync_fetch_and_max_1
__sync_fetch_and_max_2
__sync_fetch_and_max_4
__sync_fetch_and_max_8
__sync_fetch_and_max_16
__sync_fetch_and_umax_1
__sync_fetch_and_umax_2
__sync_fetch_and_umax_4
__sync_fetch_and_umax_8
__sync_fetch_and_umax_16
__sync_fetch_and_min_1
__sync_fetch_and_min_2
__sync_fetch_and_min_4
__sync_fetch_and_min_8
__sync_fetch_and_min_16
__sync_fetch_and_umin_1
__sync_fetch_and_umin_2
__sync_fetch_and_umin_4
__sync_fetch_and_umin_8
__sync_fetch_and_umin_16
__atomic_load
__atomic_load_1
__atomic_load_2
__atomic_load_4
__atomic_load_8
__atomic_load_16
__atomic_store
__atomic_store_1
__atomic_store_2
__atomic_store_4
__atomic_store_8
__atomic_store_16
__atomic_exchange
__atomic_exchange_1
__atomic_exchange_2
__atomic_exchange_4
__atomic_exchange_8
__atomic_exchange_16
__atomic_compare_exchange
__atomic_compare_exchange_1
__atomic_compare_exchange_2
__atomic_compare_exchange_4
__atomic_compare_exchange_8
__atomic_compare_exchange_16
__atomic_fetch_add_1
__atomic_fetch_add_2
__atomic_fetch_add_4
__atomic_fetch_add_8
__atomic_fetch_add_16
__atomic_fetch_sub_1
__atomic_fetch_sub_2
__atomic_fetch_sub_4
__atomic_fetch_sub_8
__atomic_fetch_sub_16
__atomic_fetch_and_1
__atomic_fetch_and_2
__atomic_fetch_and_4
__atomic_fetch_and_8
__atomic_fetch_and_16
__atomic_fetch_or_1
__atomic_fetch_or_2
__atomic_fetch_or_4
__atomic_fetch_or_8
__atomic_fetch_or_16
__atomic_fetch_xor_1
__atomic_fetch_xor_2
__atomic_fetch_xor_4
__atomic_fetch_xor_8
__atomic_fetch_xor_16
__atomic_fetch_nand_1
__atomic_fetch_nand_2
__atomic_fetch_nand_4
__atomic_fetch_nand_8
__atomic_fetch_nand_16
__llvm_deoptimize
Could not find leader
__imp_
target_variant_triple
+Inf
-Inf
0.0E+0
e+00
APInt(
0x%08x / 0x%08x = %.2f%%
General options
: for the -
 option: 
may only occur zero or one times!
must occur exactly one time!
>...
' is invalid value for boolean argument! Try 0 or 1
' value invalid for integer argument!
' value invalid for uint argument!
    =
 -   
    -
 (default: 
= *unknown option value*
*no default*
= *cannot print option value*
Generic Options
help-list
Display list of available options (-help-list-hidden for more)
help-list-hidden
Display list of all available options
help
Display available options (-help-hidden for more)
Alias for -help
help-hidden
Display all available options
print-options
Print non-default options after command line parsing
print-all-options
Print all option values after command line parsing
version
Display the version of this program
: CommandLine Error: Option '
' registered more than once!
inconsistency in registered CommandLine options
Cannot specify more than one option with cl::ConsumeAfter!
error - this positional option will never be matched, because it does not Require a value, and a cl::ConsumeAfter option is active!
error - option can never match, because another positional argument will match an unbounded number of values, and this option does not require a value!
' is all messed up!
: Unknown command line argument '
'.  Try: '
 -help'
: Did you mean '-
This argument does not take a value.
Instead, it consumes any positional arguments until the next recognized option.
: Not enough positional command line arguments specified!
Must specify at least 
 positional argument
: See: 
 -help
: Too many positional arguments specified!
Can specify at most 
 positional arguments: See: 
must be specified at least once!
may not occur within a group!
requires a value!
multi-valued option specified with ValueDisallowed modifier!
does not allow a value! '
' specified.
not enough values!
' value invalid for floating point argument!
  This option category has no options.
OVERVIEW: 
USAGE: 
 [subcommand]
 [options]
SUBCOMMAND '
SUBCOMMANDS:
  Type "
 <subcommand> -help" to get more help on a specific subcommand
OPTIONS:
Apple
LLVM
 version 
31001.638.1
Optimized build
generic
(unknown)
  Default target: 
  Host CPU: 
uint
number
string
cl::location(x) specified more than once!
cl::alias must only have one cl::aliasopt(...) specified!
cl::alias must have argument name specified!
cl::alias must have an cl::aliasopt(option) specified!
cl::alias must not have cl::sub(), aliased option's cl::sub() will be used!
Multiple errors:
Error
Multiple errors
Inconvertible error value. An error has occurred that could not be converted to a known std::error_code. Please file a bug.
LLVM ERROR: 
LLVM ERROR: out of memory
Allocation failed
view-background
Execute graph viewer in the background. Creates tmp file litter.
open
Program arguments: 
rng-seed
seed
Seed for the random number generator
0123456789
Included from 
<unknown>
<stdin>
remark: 
WARNING: You're attempting to print out a bitcode file.
This is inadvisable as it may cause display problems. If
you REALLY want to taste LLVM bitcode first-hand, you
can force output with the `-f' option.
iwmmxt
armv2
armv2a
armv3
armv3m
armv4
armv4t
armv5t
armv5te
armv5tej
5TEJ
armv6
armv6k
armv6t2
v6t2
armv6kz
v6kz
armv6-m
armv7-a
armv7ve
v7ve
armv7-r
armv7-m
armv7e-m
7E-M
v7em
armv8-a
armv8.1-a
8.1-A
v8.1a
armv8.2-a
8.2-A
v8.2a
armv8.3-a
8.3-A
v8.3a
armv8.4-a
8.4-A
v8.4a
armv8-r
armv8-m.base
8-M.Baseline
v8m.base
armv8-m.main
8-M.Mainline
v8m.main
iwmmxt2
armv7s
armv7k
v5te
v6-m
v7-a
v7-r
v7-m
v7e-m
v8-a
v8.1-a
v8.2-a
v8.3-a
v8.4-a
v8-r
v8-m.base
v8-m.main
track-memory
Enable -time-passes memory tracking (this may be slow)
info-output-file
File to append -stats and -timer output to
Error opening info-output-file '
 for appending!
%9lld  
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
   ---User Time---
   --System Time--
   --User+System--
   ---Wall Time---
  ---Mem---
  --- Name ---
Total
misc
Miscellaneous Ungrouped Timers
        -----     
  %7.4f (%5.1f%%)
aarch64
aarch64_be
mips64
mips64el
powerpc64
riscv64
sparcv9
x86_64
nvptx64
igil64
air64
le64
amdil64
hsail64
spir64
agx1
agx2
wasm64
renderscript64
wasm
ananas
cloudabi
darwin
dragonfly
freebsd
fuchsia
kfreebsd
macosx
netbsd
openbsd
solaris
windows
haiku
minix
rtems
nacl
cuda
nvcl
amdhsa
elfiamcu
tvos
watchos
bridgeos
driverkit
mesa3d
contiki
amdpal
gnueabihf
android
msvc
cygnus
invalid
xscale
macho
metallib
empty
rope:
cstring:"
std::string:"
stringref:"
smallstring:"
formatv:"
char:"
decUI:"
decI:"
decUL:"
decL:"
decULL:"
decLL:"
uhex:"
(Twine 
Color Options
color
Use colors in output (default=autodetect)
error: 
warning: 
note: 
invalid number
out of range number
IO failure on output stream: 
[:<:]]
[:>:]]
alnum
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
alpha
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
blank
cntrl
digit
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
lower
abcdefghijklmnopqrstuvwxyz
print
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
punct
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
space
upper
ABCDEFGHIJKLMNOPQRSTUVWXYZ
xdigit
0123456789ABCDEFabcdef
alert
backspace
newline
vertical-tab
form-feed
carriage-return
exclamation-mark
quotation-mark
number-sign
dollar-sign
percent-sign
ampersand
apostrophe
left-parenthesis
right-parenthesis
asterisk
plus-sign
comma
hyphen
hyphen-minus
period
full-stop
slash
solidus
zero
three
four
five
seven
eight
nine
colon
semicolon
less-than-sign
equals-sign
greater-than-sign
question-mark
commercial-at
left-square-bracket
backslash
reverse-solidus
right-square-bracket
circumflex
circumflex-accent
underscore
low-line
grave-accent
left-brace
left-curly-bracket
vertical-line
right-brace
right-curly-bracket
tilde
REG_0x%x
REG_NOMATCH
llvm_regexec() failed to match
REG_BADPAT
invalid regular expression
REG_ECOLLATE
invalid collating element
REG_ECTYPE
invalid character class
REG_EESCAPE
trailing backslash (\)
REG_ESUBREG
invalid backreference number
REG_EBRACK
brackets ([ ]) not balanced
REG_EPAREN
parentheses not balanced
REG_EBRACE
braces not balanced
REG_BADBR
invalid repetition count(s)
REG_ERANGE
invalid character range
REG_ESPACE
out of memory
REG_BADRPT
repetition-operator operand invalid
REG_EMPTY
empty (sub)expression
REG_ASSERT
"can't happen" -- you found a bug
REG_INVARG
invalid argument to regex routine
*** unknown regexp error code ***
x86_64-apple-darwin20.1.0
nehalem
westmere
sandybridge
amdfam10
bdver1
bdver2
bdver3
bdver4
znver1
ivybridge
haswell
broadwell
skylake
skylake-avx512
cannonlake
core2
penryn
k6-2
k6-3
geode
bonnell
silvermont
btver1
btver2
i386
i486
pentium
pentium-mmx
pentiumpro
pentium2
pentium3
pentium4
pentium-m
yonah
nocona
prescott
athlon
athlon-xp
k8-sse3
goldmont
goldmont-plus
-darwin
TERM
linux
PATH
disable-symbolication
Disable symbolizing crash backtraces.
llvm-symbolizer
LLVM_DISABLE_CRASH_REPORT
too many signal callbacks already registered
Unable to find target for this triple (no targets are registered)
No available targets are compatible with this triple.
Cannot choose between targets "
" and "
verify-loop-lcssa
Verify loop lcssa form (time consuming)
phi-node-folding-threshold
Control the amount of phi node folding to perform (default = 2)
simplifycfg-dup-ret
Duplicate return instructions into unconditional branches
simplifycfg-sink-common
Sink common instructions down to the end block
simplifycfg-hoist-cond-stores
Hoist conditional stores if an unconditional store precedes
simplifycfg-merge-cond-stores
Hoist conditional stores even if an unconditional store does not precede - hoist multiple conditional stores into a single predicated store
simplifycfg-merge-cond-stores-aggressively
When merging conditional stores, do so even if the resultant basic blocks are unlikely to be if-converted as a result
speculate-one-expensive-inst
Allow exactly one expensive instruction to be speculatively executed
max-speculation-depth
Limit maximum recursion depth when calculating costs of speculatively executed instructions
import-instr-limit
Only import functions with less than N instructions
import-cutoff
Only import first N functions if N>=0 (default -1)
import-instr-evolution-factor
As we import functions, multiply the `import-instr-limit` threshold by this factor before processing newly imported functions
import-hot-evolution-factor
As we import functions called from hot callsite, multiply the `import-instr-limit` threshold by this factor before processing newly imported functions
import-hot-multiplier
Multiply the `import-instr-limit` threshold for hot callsites
import-critical-multiplier
Multiply the `import-instr-limit` threshold for critical callsites
import-cold-multiplier
Multiply the `import-instr-limit` threshold for cold callsites
print-imports
Print imported functions
compute-dead
Compute dead symbols
enable-import-metadata
Enable import metadata like 'thinlto_src_module'
summary-file
The summary file to use for function importing.
import-all-index
Import all external functions in index.
thinlto_src_module
: Import 
Function Import: link error
.llvm.
internalize-public-api-file
A file containing list of symbol names to preserve
internalize-public-api-list
list
A list of symbol names to preserve
llvm.global.annotations
__stack_chk_fail
__stack_chk_guard
constant bigger than 64 bits detected!
constant bigger than 128 bits detected!
end of file in COMDAT variable name
Null bytes are not allowed in names
end of file in string constant
invalid value number (too large)!
end of file in global variable name
bitwidth for integer type out of range!
define
constant
dso_local
dso_preemptable
default
hidden
protected
externally_initialized
thread_local
initialexec
localexec
caller
from
musttail
notail
source_filename
unwind
deplibs
datalayout
volatile
atomic
syncscope
nnan
arcp
contract
reassoc
fast
exact
inbounds
inrange
addrspace
section
module
sideeffect
inteldialect
prefix
prologue
avr_intrcc
avr_signalcc
allocsize
blockaddress
distinct
uselistorder_bb
personality
cleanup
catch
filter
path
guid
summaries
linkage
notEligibleToImport
live
dsoLocal
insts
funcFlags
readNone
noRecurse
returnDoesNotAlias
calls
callee
hotness
relbf
aliasee
refs
typeIdInfo
typeTests
vFuncId
args
typeid
summary
typeTestRes
kind
sizeM1BitWidth
alignLog2
sizeM1
bitMask
inlineBits
wpdResolutions
wpdRes
singleImplName
resByArg
byArg
info
Can't read textual IR with a Context that discards named Values
expected function name in blockaddress
use of undefined type '%
use of undefined type named '
use of undefined comdat '$
use of undefined value '@
use of undefined metadata '!
use of undefined summary '^
use of undefined type id summary '^
expected top-level entity
expected 'module asm'
unknown target property
expected '=' after target triple
expected '=' after target datalayout
expected '=' after source_filename
expected '=' after deplibs
expected ']' at end of list
expected '=' after name
expected 'type' after '='
non-struct types may not be recursive
expected 'type' after name
expected 'global' or 'constant'
variable expected to be numbered '%
expected '=' in global variable
expected '=' here
expected comdat keyword
expected comdat type
unknown selection kind
redefinition of comdat '$
Expected '!' here
Expected '{' here
DIExpression
expected end of metadata node
unexpected type in metadata definition
Metadata id is already used
Expected 'gv', 'module', or 'typeid' at the start of summary entry
expected ':' at start of summary entry
expected '(' at start of summary entry
found end of file while parsing summary entry
unexpected summary kind
invalid linkage type for alias
symbol with local linkage must have default visibility
expected comma after alias or ifunc's type
invalid aliasee
An alias or ifunc must have pointer type
explicit pointee type doesn't match operand's pointee type
explicit pointee type should be a function type
redefinition of global '@
forward reference and definition of alias have different types
invalid type for global variable
forward reference and definition of global have different types
expected global section string
unknown global variable property!
expected attribute group id
expected '{' here
expected end of attribute group
attribute group has no attributes
unterminated attribute group
cannot have an attribute group reference in an attribute group
invalid use of attribute on a function
invalid use of parameter-only attribute on a function
global variable reference must have pointer type
' defined with type '
expected string constant
expected integer
expected 32-bit integer (too large)
expected localdynamic, initialexec or localexec
expected ')' after thread local model
expected '(' in address space
expected ')' in address space
invalid use of function-only attribute
invalid use of parameter-only attribute
invalid use of attribute on return type
dso_location and DLL-StorageClass mismatch
expected metadata after comma
alignment is not a power of two
huge alignments are not supported yet
expected '('
expected ')'
dereferenceable bytes must be non-zero
expected metadata or 'align'
expected metadata or 'addrspace'
'allocsize' indices can't refer to the same parameter
Expected '(' in syncscope
Expected synchronization scope name
Expected ')' in syncscope
Expected ordering on atomic instruction
stack alignment is not a power of two
expected ',' as start of index list
expected index
expected '>' at end of packed struct
void type only allowed for function results
basic block pointers are invalid
pointers to void are invalid - use i8* instead
pointer to this type is invalid
pointers to void are invalid; use i8* instead
expected '*' in address space
expected '(' in call
expected ',' in argument list
unexpected ellipsis in argument list for 
non-musttail call
musttail call in non-varargs function
expected ')' at end of argument list
expected '...' at end of argument list for musttail call in varargs function
expected ',' in input list
expected '(' in operand bundle
operand bundle set must not be empty
argument can not have void type
invalid type for function argument
invalid function return type
argument name invalid in function type
argument attributes invalid in function type
redefinition of type
forward references to non-struct type
expected '>' in packed struct
invalid element type for struct
expected '}' at end of struct
expected number in address space
expected 'x' after element count
expected ']' to close array
invalid array element type
expected 'x' after the number of columns
expected '>' to close matrix
matrix must have non-zero rows
matrix must have non-zero columns
matrix has too many rows
matrix has too many columns
invalid matrix element type
expected '>' to close vector
vector must have more than 0 elements
too many elements for vector
invalid vector element type
use of undefined value '%
' is not a basic block
invalid use of a non-first-class type
instructions returning void cannot have a name
instruction expected to be numbered '%
instruction forward referenced with type '
multiple definition of local value named '
expected value token
expected end of struct constant
expected end of packed struct
expected end of constant
constant vector must not be empty
vector elements must have integer, pointer or floating point type
vector element #
 is not of type '
expected end of array constant
invalid array element type: 
array element #
expected string
expected comma in inline asm expression
expected constraint string
expected '(' in block address expression
expected comma in block address expression
expected ')' in block address expression
expected basic block name in blockaddress
cannot take blockaddress inside a declaration
referenced value is not a basic block
cannot take address of numeric label after the function is defined
expected '(' after constantexpr cast
expected 'to' in constantexpr cast
expected ')' at end of constantexpr cast
invalid cast opcode for cast from '
' to '
expected '(' in extractvalue constantexpr
expected ')' in extractvalue constantexpr
extractvalue operand must be aggregate type
invalid indices for extractvalue
expected '(' in insertvalue constantexpr
expected comma in insertvalue constantexpr
expected ')' in insertvalue constantexpr
insertvalue operand must be aggregate type
invalid indices for insertvalue
insertvalue operand and field disagree in type: '
' instead of '
expected '(' in compare constantexpr
expected comma in compare constantexpr
expected ')' in compare constantexpr
compare operands must have the same type
fcmp requires floating point operands
icmp requires pointer or integer operands
expected '(' in binary constantexpr
expected comma in binary constantexpr
expected ')' in binary constantexpr
operands of constexpr must have same type
nuw only applies to integer operations
nsw only applies to integer operations
constexpr requires integer operands
constexpr requires fp operands
expected '(' in logical constantexpr
expected comma in logical constantexpr
expected ')' in logical constantexpr
constexpr requires integer or integer vector operands
expected '(' in constantexpr
expected comma after getelementptr's type
expected ')' in constantexpr
base of getelementptr must be a pointer
getelementptr index must be an integer
getelementptr vector index has a wrong number of elements
base element of getelementptr must be sized
invalid getelementptr indices
inrange keyword may not appear on pointer operand
expected three operands to select
expected three operands to shufflevector
invalid operands to shufflevector
expected two operands to extractelement
invalid extractelement operands
expected three operands to insertelement
invalid insertelement operands
global values must be constants
expected comdat variable
expected ')' after comdat var
comdat cannot be unnamed
expected '!' here
DILocation
DIGlobalVariableExpression
GenericDINode
DISubrange
DIEnumerator
DIBasicType
DIDerivedType
DICompositeType
DISubroutineType
DIFile
DICompileUnit
DISubprogram
DILexicalBlock
DILexicalBlockFile
DINamespace
DIModule
DITemplateTypeParameter
DITemplateValueParameter
DIGlobalVariable
DILocalVariable
DILabel
DIObjCProperty
DIImportedEntity
DIMacro
DIMacroFile
expected metadata type
missing required field 'scope'
missing required field 'tag'
missing required field 'count'
missing required field 'name'
missing required field 'value'
unsigned enumerator with negative value
missing required field 'baseType'
missing required field 'types'
missing required field 'filename'
missing required field 'directory'
'checksumkind' and 'checksum' must be provided together
missing 'distinct', required for !DICompileUnit
missing required field 'language'
missing required field 'file'
missing 'distinct', required for !DISubprogram when 'isDefinition'
missing required field 'discriminator'
missing required field 'type'
missing required field 'line'
expected '(' here
invalid DWARF op '
expected unsigned integer
element too large, limit is 
expected ')' here
missing required field 'var'
missing required field 'expr'
invalid metadata-value-metadata roundtrip
expected metadata operand
functions are not values, refer to them as pointers
invalid use of function-local name
invalid type for inline asm constraint string
integer constant must have integer type
floating point constant invalid for type
floating point constant does not have type '
null must be a pointer type
invalid type for undef constant
invalid empty array initializer
invalid type for null constant
invalid type for none constant
constant expression type mismatch
initializer with struct type has wrong # elements
packed'ness of initializer and type don't match
element 
 of struct initializer doesn't match struct element type
expected a basic block
invalid linkage for function definition
invalid linkage for function declaration
invalid function linkage type
function expected to be numbered '%
expected function name
expected '(' in function argument list
'builtin' attribute not valid on function
functions with 'sret' argument must return void
invalid forward reference to function as global value!
invalid forward reference to function '
' with wrong type!
invalid redefinition of function '
redefinition of function '@
type of definition and forward reference of '@
' disagree
redefinition of argument '%
expected '{' in function body
function body requires at least one basic block
unable to create block named '
expected '=' after instruction id
expected '=' after instruction name
found end of file when expecting more instructions
expected instruction opcode
fast-math-flags specified for select without floating-point scalar or vector return type
expected fcmp predicate (e.g. 'oeq')
expected icmp predicate (e.g. 'eq')
value doesn't match function result type '
branch condition must have 'i1' type
expected ',' after branch condition
expected ',' after true destination
expected ',' after switch condition
expected '[' with switch table
switch condition must have integer type
expected ',' after case value
duplicate case value in switch
case value is not a constant integer
expected ',' after indirectbr address
expected '[' with indirectbr
indirectbr address must have pointer type
expected ']' at end of block list
expected 'to' in invoke
expected 'unwind' in invoke
Invalid result type for LLVM function
too many arguments specified
argument is not of expected type '
not enough parameters specified for call
invoke instructions may not have an alignment
expected '[' in catchpad/cleanuppad
expected 'from' after cleanupret
expected 'unwind' in cleanupret
expected 'caller' in cleanupret
expected 'from' after catchret
expected 'to' in catchret
expected 'within' after catchswitch
expected scope value for catchswitch
expected '[' with catchswitch labels
expected ']' after catchswitch labels
expected 'unwind' after catchswitch scope
expected 'caller' in catchswitch
expected 'within' after catchpad
expected scope value for catchpad
expected 'within' after cleanuppad
expected scope value for cleanuppad
expected ',' in arithmetic operation
invalid operand type for instruction
expected ',' in logical operation
instruction requires integer or integer vector operands
expected ',' after compare value
icmp requires integer operands
expected 'to' after cast value
expected ',' after select condition
expected ',' after select value
expected ',' after vaarg operand
va_arg requires operand with first class type
expected ',' after extract value
expected ',' after insertelement value
expected ',' after shuffle mask
expected ',' after shuffle value
invalid shufflevector operands
expected '[' in phi value list
expected ']' in phi value list
phi node must have first class type
'catch' clause has an invalid type
'filter' clause has an invalid type
clause argument must be a constant
expected 'tail call', 'musttail call', or 'notail call'
fast-math-flags specified for call without floating-point scalar or vector return type
call instructions may not have an alignment
invalid type for alloca
element count must have integer type
expected comma after load's type
load operand must be a pointer to a first class type
atomic load must have explicit non-zero alignment
atomic load cannot use Release ordering
expected ',' after store operand
store operand must be a pointer
store operand must be a first class value
stored value and pointer type do not match
atomic store must have explicit non-zero alignment
atomic store cannot use Acquire ordering
expected ',' after cmpxchg address
expected ',' after cmpxchg cmp operand
cmpxchg cannot be unordered
cmpxchg failure argument shall be no stronger than the success argument
cmpxchg operand must be a pointer
compare value and pointer type do not match
new value and pointer type do not match
cmpxchg operand must be a first class value
expected binary operation in atomicrmw
expected ',' after atomicrmw address
atomicrmw cannot be unordered
atomicrmw operand must be a pointer
atomicrmw value and pointer type do not match
 operand must be an integer or floating point type
 operand must be a floating point type
 operand must be an integer
atomicrmw operand must be power-of-two byte-sized integer
fence cannot be unordered
fence cannot be monotonic
expected comma after insertvalue operand
value has no uses
value only has one use
wrong number of indexes, expected 
expected non-empty list of uselistorder indexes
expected '}' here
expected >= 2 uselistorder indexes
expected distinct uselistorder indexes in range [0, size)
expected uselistorder indexes to change the order
expected uselistorder directive
expected comma in uselistorder directive
expected comma in uselistorder_bb directive
expected function name in uselistorder_bb
invalid function forward reference in uselistorder_bb
invalid declaration in uselistorder_bb
invalid numeric label in uselistorder_bb
expected basic block name in uselistorder_bb
invalid basic block in uselistorder_bb
expected basic block in uselistorder_bb
expected ':' here
expected 'path' here
expected ',' here
expected 'hash' here
expected 'name' here
expected 'summary' here
expected 'typeTestRes' here
expected 'kind' here
unexpected TypeTestResolution kind
expected 'sizeM1BitWidth' here
expected ':'
expected optional TypeTestResolution field
expected 'wpdResolutions' here
expected 'offset' here
expected 'wpdRes' here
unexpected WholeProgramDevirtResolution kind
expected optional WholeProgramDevirtResolution field
expected 'resByArg' here
expected 'byArg here
unexpected WholeProgramDevirtResolution::ByArg kind
expected optional whole program devirt field
expected 'args' here
expected name or guid tag
expected 'summaries' here
expected summary type
expected 'insts' here
expected optional function summary field
expected 'aliasee' here
expected ':' in funcFlags
expected '(' in funcFlags
expected function flag type
expected ')' in funcFlags
expected ':' in calls
expected '(' in calls
expected 'callee' in call
expected relbf
expected ')' in call
expected ')' in calls
invalid call edge hotness
expected ':' in refs
expected '(' in refs
expected ')' in refs
expected '(' in typeIdInfo
invalid typeIdInfo list type
expected ')' in typeIdInfo
expected 'guid' here
expected 'linkage' here
expected 'notEligibleToImport' here
expected 'live' here
expected 'dsoLocal' here
expected 'module' here
expected module ID
expected GV ID
expected type
expected field label here
invalid field '
field '
' cannot be specified more than once
value for '
' too large, limit is 
' cannot be null
operands
expected DWARF tag
invalid DWARF tag
' cannot be empty
expected signed integer
' too small, limit is 
expected 'true' or 'false'
expected DWARF type attribute encoding
invalid DWARF type attribute encoding
expected debug info flag
invalid debug info flag flag '
expected DWARF language
invalid DWARF language
expected DWARF calling convention
invalid DWARF calling convention
checksumkind
expected emission kind
expected DWARF virtuality code
invalid DWARF virtuality code
expected DWARF macinfo type
invalid DWARF macinfo type
invalid hexadecimal floating-point constant: expected at least one significand digit
invalid hexadecimal floating-point constant: expected exponent part 'p'
invalid hexadecimal floating-point constant: expected at least one exponent digit
unterminated comment
invalid binary number
invalid hexdecimal number
invalid decimal number
invalid hexadecimal number
invalid octal number
unterminated single quote
single quote way too long
unterminated string constant
invalid character in input
asm-macro-max-nesting-depth
The maximum nesting depth allowed for assembly macros.
missing expression
Recursive use of '
redefinition of '
invalid assignment to '
invalid reassignment of non-absolute variable '
.set
.equ
.equiv
.ascii
.asciz
.string
.byte
.short
.value
.2byte
.long
.int
.4byte
.quad
.8byte
.octa
.single
.float
.double
.align
.align32
.balign
.balignw
.balignl
.p2align
.p2alignw
.p2alignl
.org
.fill
.zero
.extern
.globl
.global
.lazy_reference
.no_dead_strip
.symbol_resolver
.private_extern
.reference
.weak_definition
.weak_reference
.weak_def_can_be_hidden
.comm
.common
.lcomm
.abort
.include
.incbin
.code16
.code16gcc
.rept
.rep
.irp
.irpc
.endr
.bundle_align_mode
.bundle_lock
.bundle_unlock
.ifeq
.ifge
.ifgt
.ifle
.iflt
.ifne
.ifb
.ifnb
.ifc
.ifeqs
.ifnc
.ifnes
.ifdef
.ifndef
.ifnotdef
.elseif
.else
.end
.endif
.skip
.space
.line
.loc
.stabs
.cv_file
.cv_func_id
.cv_loc
.cv_linetable
.cv_inline_linetable
.cv_inline_site_id
.cv_def_range
.cv_stringtable
.cv_filechecksums
.cv_filechecksumoffset
.cv_fpo_data
.sleb128
.uleb128
.cfi_sections
.cfi_startproc
.cfi_endproc
.cfi_def_cfa
.cfi_def_cfa_offset
.cfi_adjust_cfa_offset
.cfi_def_cfa_register
.cfi_offset
.cfi_rel_offset
.cfi_personality
.cfi_lsda
.cfi_remember_state
.cfi_restore_state
.cfi_same_value
.cfi_restore
.cfi_escape
.cfi_return_column
.cfi_signal_frame
.cfi_undefined
.cfi_register
.cfi_window_save
.macros_on
.macros_off
.macro
.exitm
.endm
.endmacro
.purgem
.err
.error
.warning
.altmacro
.noaltmacro
.reloc
.dc.a
.dc.b
.dc.d
.dc.l
.dc.s
.dc.w
.dc.x
.dcb
.dcb.b
.dcb.d
.dcb.l
.dcb.s
.dcb.w
.dcb.x
.ds.b
.ds.d
.ds.l
.ds.p
.ds.s
.ds.w
.ds.x
.print
.addrsig
.addrsig_sym
unmatched .ifs or .elses
unassigned file number: 
 for .file directives
assembler local symbol '
' not defined
directional label undefined
unexpected token at start of statement
invalid use of pseudo-symbol '.' as a label
 not currently supported for this target
unknown directive
__emit
_EMIT
__EMIT
parsed instruction: [
unexpected token in '.if' directive
unexpected token in '.ifb' directive
unexpected token in '.ifc' directive
expected string parameter for '.ifeqs' directive
expected string parameter for '.ifnes' directive
expected comma after first string for '.ifeqs' directive
expected comma after first string for '.ifnes' directive
expected identifier after '.ifdef'
unexpected token in '.ifdef'
Encountered a .elseif that doesn't follow an .if or  an .elseif
unexpected token in '.elseif' directive
unexpected token in '.else' directive
Encountered a .else that doesn't follow  an .if or an .elseif
unexpected token in '.endif' directive
Encountered a .endif that doesn't follow an .if or .else
macros cannot be nested more than 
 levels deep.
 Use -asm-macro-max-nesting-depth to increase this limit.
.endmacro
<instantiation>
invalid argument identifier for formal argument
expected '=' after formal parameter identifier
cannot mix positional and keyword arguments
expected absolute expression
parameter named '
' does not exist for macro '
missing value for required parameter '
' in macro '
too many positional arguments
unexpected token in macro instantiation
unbalanced parentheses in macro argument
Wrong number of arguments
expected identifier
 in '
' directive
out of range literal value
unknown token in expression
unexpected token in directive
infinity
invalid floating point literal
 in directive
p2align directive with no operand(s) is ignored
invalid alignment value
alignment must be a power of 2
alignment directive can never be satisfied in this many bytes, ignoring maximum bytes expression
maximum bytes expression exceeds alignment and has no effect
 in '.org' directive
unexpected token in '.fill' directive
'.fill' directive with negative size has no effect
'.fill' directive with size greater than 8 has been truncated to 8
'.fill' directive pattern has been truncated to 32-bits
unexpected token in '.zero' directive
non-local symbol required
unable to emit symbol attribute
expected identifier in directive
alignment not supported on this target
unexpected token in '.comm' or '.lcomm' directive
invalid '.comm' or '.lcomm' directive size, can't be less than zero
invalid '.comm' or '.lcomm' directive alignment, can't be less than zero
unexpected token in '.abort' directive
.abort detected. Assembly stopping.
.abort '
' detected. Assembly stopping.
expected string in '.include' directive
unexpected token in '.include' directive
Could not find include file '
expected string in '.incbin' directive
unexpected token in '.incbin' directive
skip is negative
Could not find incbin file '
negative count has no effect
unexpected token in '
Count is negative
no matching '.endr' in definition
unexpected token in '.endr' directive
.endr
expected identifier in '.irp' directive
expected comma in '.irp' directive
expected End of Statement
expected identifier in '.irpc' directive
expected comma in '.irpc' directive
unexpected token in '.irpc' directive
expected end of statement
unmatched '.endr' directive
unexpected token after expression in '.bundle_align_mode' directive
invalid bundle alignment size (expected between 0 and 30)
invalid option for '.bundle_lock' directive
unexpected token after '.bundle_lock' directive option
unexpected token in '.bundle_unlock' directive
in '
negative file number
unexpected token in '.file' directive
explicit path specified, but no file number
MD5 checksum specified, but no file number
source specified, but no file number
file 0 not supported prior to DWARF-5
inconsistent use of MD5 checksums
unexpected token in '.line' directive
unexpected token in '.loc' directive
file number less than one in '.loc' directive
unassigned file number in '.loc' directive
line number less than zero in '.loc' directive
column position less than zero in '.loc' directive
is_stmt value not 0 or 1
is_stmt value not the constant value of 0 or 1
isa number less than zero
isa number not a constant value
unknown sub-directive in '.loc' directive
unsupported directive '.stabs'
expected file number in '.cv_file' directive
file number less than one
unexpected token in '.cv_file' directive
expected checksum kind in '.cv_file' directive
file number already allocated
unexpected token in '.cv_func_id' directive
function id already allocated
expected function id in '
expected function id within range [0, UINT_MAX)
expected 'within' identifier in '.cv_inline_site_id' directive
expected 'inlined_at' identifier in '.cv_inline_site_id' directive
expected line number after 'inlined_at'
unexpected token in '.cv_inline_site_id' directive
expected integer in '
file number less than one in '
unassigned file number in '
line number less than zero in '.cv_loc' directive
column position less than zero in '.cv_loc' directive
unexpected token in '.cv_loc' directive
unknown sub-directive in '.cv_loc' directive
unexpected token in '.cv_linetable' directive
expected SourceField in '.cv_inline_linetable' directive
File id less than zero in '.cv_inline_linetable' directive
expected SourceLineNum in '.cv_inline_linetable' directive
Line number less than zero in '.cv_inline_linetable' directive
Expected End of Statement
expected symbol name
unexpected tokens
 in '.cv_fpo_data' directive
Expected an identifier
 in '.cfi_startproc' directive
unsupported encoding.
unexpected token in '.cfi_signal_frame'
expected identifier in '.macro' directive
Vararg parameter '
' should be last one in the list of parameters.
macro '
' has multiple parameters named '
missing parameter qualifier for '
 is not a valid parameter qualifier for '
pointless default value for required parameter '
no matching '.endmacro' in definition
' is already defined
macro defined with named parameters which are not used in macro body, possible positional parameter found in body which will have no effect
unexpected '
' in file, no current macro definition
expected identifier in '.purgem' directive
unexpected token in '.purgem' directive
' is not defined
unexpected token in '.end' directive
.err encountered
.error directive invoked in source file
.error argument must be a string
.warning directive invoked in source file
.warning argument must be a string
expected end of statement in '.warning' directive
expression is not a constant value
expression is negative
expected comma
expected relocation name
expression must be relocatable
unexpected token in .reloc directive
unknown relocation name
' directive with negative repeat count has no effect
literal value out of range for directive
expected double quoted string after .print
expected identifier in '.addrsig_sym' directive
unexpected expression in _emit
unexpected expression in align
literal value not a power of two greater then zero
 * $$
 + $$
byte ptr 
word ptr 
dword ptr 
qword ptr 
xword ptr 
xmmword ptr 
ymmword ptr 
.even
while in macro instantiation
unexpected backslash at end of string
invalid octal escape sequence (out of range)
invalid escape sequence (unrecognized character)
unexpected symbol modifier following '@'
invalid variant '
invalid modifier '
' (no symbols present)
invalid variant on expression '
' (already modified)
invalid token in expression
expected symbol variant after '@'
unexpected token in variant, expected ')'
expected a symbol reference
unexpected modifier on variable reference
brackets expression not supported on this target
expected '(' after operator
expected ')' in parentheses expression
expected ']' in brackets expression
expected section directive before assembly directive
.def
.scl
.endef
.secrel32
.symidx
.safeseh
.secidx
.linkonce
.rva
.seh_proc
.seh_endproc
.seh_startchained
.seh_endchained
.seh_handler
.seh_handlerdata
.seh_pushreg
.seh_setframe
.seh_stackalloc
.seh_savereg
.seh_savexmm
.seh_pushframe
.seh_endprologue
unexpected token in section switching directive
expected comdat type such as 'discard' or 'largest' after protection bits
expected comma in directive
conflicting section flags 'b' and 'd'.
unrecognized COMDAT type '
invalid '.secrel32' directive offset, can't be less than zero or greater than std::numeric_limits<uint32_t>::max()
cannot make section associative with .linkonce
section '
' is already linkonce
invalid '.rva' directive offset, can't be less than -2147483648 or greater than 2147483647
you must specify one or both of @unwind or @except
a handler attribute must begin with '@'
expected @unwind or @except
register can't be represented in SEH unwind info
register number is too high
you must specify a stack pointer offset
you must specify an offset on the stack
expected @code
.alt_entry
.desc
.indirect_symbol
.lsym
.subsections_via_symbols
.dump
.load
.secure_log_unique
.secure_log_reset
.zerofill
.data_region
.end_data_region
.const
.const_data
.constructor
.cstring
.destructor
.dyld
.fvmlib_init0
.fvmlib_init1
.lazy_symbol_pointer
.linker_option
.dyld_lib
.literal16
.literal4
.literal8
.mod_init_func
.mod_term_func
.non_lazy_symbol_pointer
.thread_local_variable_pointer
.objc_cat_cls_meth
.objc_cat_inst_meth
.objc_category
.objc_class
.objc_class_names
.objc_class_vars
.objc_cls_meth
.objc_cls_refs
.objc_inst_meth
.objc_instance_vars
.objc_message_refs
.objc_meta_class
.objc_meth_var_names
.objc_meth_var_types
.objc_module_info
.objc_protocol
.objc_selector_strs
.objc_string_object
.objc_symbols
.picsymbol_stub
.static_const
.static_data
.symbol_stub
.thread_init_func
.tlv
.bridgeos_version_min
.watchos_version_min
.tvos_version_min
.ios_version_min
.macosx_version_min
.build_version
.alt_entry must preceed symbol definition
unexpected token in '.desc' directive
indirect symbol not in a symbol pointer or stub section
expected identifier in .indirect_symbol directive
non-local symbol required in directive
unable to emit indirect symbol attribute for: 
unexpected token in '.indirect_symbol' directive
unexpected token in '.lsym' directive
directive '.lsym' is unsupported
unexpected token in '.subsections_via_symbols' directive
expected string in '.dump' or '.load' directive
unexpected token in '.dump' or '.load' directive
ignoring directive .dump for now
ignoring directive .load for now
expected identifier after '.section' directive
unexpected token in '.section' directive
section "
" is deprecated
change section name to "
unexpected token in '.secure_log_unique' directive
.secure_log_unique specified multiple times
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
can't open secure log file: 
unexpected token in '.secure_log_reset' directive
unexpected token in '.tbss' directive
invalid '.tbss' directive size, can't be less thanzero
invalid '.tbss' alignment, can't be lessthan zero
expected segment name after '.zerofill' directive
expected section name after comma in '.zerofill' directive
unexpected token in '.zerofill' directive
invalid '.zerofill' directive size, can't be less than zero
invalid '.zerofill' directive alignment, can't be less than zero
expected region type after '.data_region' directive
unknown region type in '.data_region' directive
unexpected token in '.end_data_region' directive
__constructor
__destructor
__dyld
__fvmlib_init0
__fvmlib_init1
expected string in '
unexpected token in '.dyld_lib' directive
__mod_init_func
__mod_term_func
__OBJC
__cat_cls_meth
__cat_inst_meth
__category
__class
__class_vars
__cls_meth
__cls_refs
__inst_meth
__instance_vars
__message_refs
__meta_class
__module_info
__protocol
__selector_strs
__string_object
__symbols
__picsymbol_stub
__static_const
__static_data
__symbol_stub
invalid OS update specifier, comma expected
OS update
invalid 
 major version number, integer expected
 major version number
 minor version number required, comma expected
 minor version number, integer expected
 minor version number
 version number, integer expected
 version number
SDK subminor
 used while targeting 
overriding previous version directive
previous definition is here
platform name expected
unknown platform name
version number required, comma expected
 in '.build_version' directive
.data.rel
.section
.pushsection
.popsection
.size
.previous
.type
.ident
.symver
.version
.weakref
.weak
.local
.protected
.internal
.hidden
.subsection
.cg_profile
expected string in directive
unknown flag
setting incorrect section attributes for 
Section cannot specifiy a group name while also acting as a member of the last group
Mergeable section must specify the type
Group section must specify the type
.note
.init_array.
.bss.
.tbss.
.fini_array.
.preinit_array.
unknown section type
DWARF2 only supports one section per compilation unit
.rodata.cst
.rodata.
.text.
.data.
.tdata.
expected '@<type>', '%<type>' or "<type>"
expected '%<type>' or "<type>"
expected the entry size
entry size must be positive
expected group name
invalid group name
invalid linkage
Linkage must be 'comdat'
expected metadata symbol
invalid metadata symbol
symbol is not in a section: 
expected 'unique'
expected commma
unique id must be positive
unique id is too large
.popsection without corresponding .pushsection
.previous without corresponding .section
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '%<type>' or "<type>"
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '@<type>', '%<type>' or "<type>"
expected symbol type in directive
unsupported attribute in '.type' directive
unexpected token in '.type' directive
unexpected token in '.ident' directive
expected a comma
expected a '@' in the name
unexpected token in '.version' directive
expected integer count in '.cg_profile' directive
unexpected token
expected assembly-time absolute expression
invalid number of bytes
invalid .org offset '
' (at offset '
Fragment can't be larger than a bundle size
Padding cannot exceed 255 bytes
<MCAssembler
  Sections:[
    
    
  Symbols:[
           
, Index:
checksum_offset
as-secure-log-file-name
As secure log file name (initialized from AS_SECURE_LOG_FILE env variable)
AS_SECURE_LOG_FILE
inconsistent use of embedded source
<<invalid>>
<<none>>
DTPOFF
DTPREL
GOTOFF
GOTREL
GOTPCREL
GOTTPOFF
INDNTPOFF
NTPOFF
GOTNTPOFF
TLSGD
TLSLD
TLSLDM
TPOFF
TPREL
tlscall
tlsdesc
TLVP
TLVPPAGE
TLVPPAGEOFF
PAGE
PAGEOFF
GOTPAGE
GOTPAGEOFF
SECREL32
SIZE
WEAKREF
ABS8
GOT_PREL
target1
target2
prel31
sbrel
tlsldo
tlsdescseq
hlo8
diff8
diff16
diff32
high
higha
higher
highera
highest
highesta
got@l
got@h
got@ha
tocbase
toc@l
toc@h
toc@ha
dtpmod
tprel@l
tprel@h
tprel@ha
tprel@high
tprel@higha
tprel@higher
tprel@highera
tprel@highest
tprel@highesta
dtprel@l
dtprel@h
dtprel@ha
dtprel@high
dtprel@higha
dtprel@higher
dtprel@highera
dtprel@highest
dtprel@highesta
got@tprel
got@tprel@l
got@tprel@h
got@tprel@ha
got@dtprel
got@dtprel@l
got@dtprel@h
got@dtprel@ha
got@tlsgd
got@tlsgd@l
got@tlsgd@h
got@tlsgd@ha
tlsgd
got@tlsld
got@tlsld@l
got@tlsld@h
got@tlsld@ha
tlsld
local
IMGREL
PCREL
LO16
HI16
GPREL
GDGOT
LDGOT
GDPLT
LDPLT
IEGOT
TYPEINDEX
gotpcrel32@lo
gotpcrel32@hi
rel32@lo
rel32@hi
rel64
agx_lo
agx_hi
agx_ss
agx_got64
agx_got32
agx_gotss
agx_got_tls
<MCFixup
 Offset:
 Value:
 Kind:
MCAlignFragment
MCDataFragment
MCCompactEncodedInstFragment
MCFillFragment
MCRelaxableFragment
MCOrgFragment
MCDwarfFragment
MCDwarfCallFrameFragment
MCLEBFragment
MCPaddingFragment
MCSymbolIdFragment
MCCVInlineLineTableFragment
MCCVDefRangeTableFragment
MCDummyFragment
<MCFragment 
 LayoutOrder:
 HasInstructions:
 BundlePadding:
 (emit nops)
       
 Alignment:
 ValueSize:
 MaxBytesToEmit:
 Contents:[
 bytes)
       
 Fixups:[
                
 NumValues:
 Inst:
 AddrDelta:
 LineDelta:
 Signed:
 PaddingPoliciesMask:
 IsInsertionPoint:
 Size:
 InstSize:
 Sym:
 RangeStart:
 RangeEnd:
unable to evaluate offset for variable '
unable to evaluate offset to undefined symbol '
<MCOperand 
INVALID
Reg:
Imm:
FPImm:
Expr:(
Inst:(
UNDEFINED
<MCInst 
<MCInst #
__TEXT
__eh_frame
__text
__DATA
__data
__thread_data
__thread_bss
__thread_vars
__thread_init
__cstring
__ustring
__literal4
__literal8
__literal16
__const
__textcoal_nt
__const_coal
__datacoal_nt
__common
__bss
__la_symbol_ptr
__nl_symbol_ptr
__thread_ptr
__gcc_except_tab
__LD
__compact_unwind
__DWARF
__debug_names
debug_names_begin
__apple_names
names_begin
__apple_objc
objc_begin
__apple_namespac
namespac_begin
__apple_types
types_begin
__swift_ast
__debug_abbrev
section_abbrev
__debug_info
section_info
__debug_line
section_line
__debug_line_str
section_line_str
__debug_frame
__debug_pubnames
__debug_pubtypes
__debug_gnu_pubn
__debug_gnu_pubt
__debug_str
info_string
__debug_str_offs
section_str_off
__debug_loc
section_debug_loc
__debug_aranges
__debug_ranges
debug_range
__debug_rnglists
__debug_macinfo
debug_macinfo
__debug_inlined
__debug_cu_index
__debug_tu_index
__LLVM_STACKMAPS
__llvm_stackmaps
__LLVM_FAULTMAPS
__llvm_faultmaps
.bss
.text
.data
.rodata
.tdata
.tbss
.data.rel.ro
.rodata.cst4
.rodata.cst8
.rodata.cst16
.rodata.cst32
.gcc_except_table
.debug_abbrev
.debug_info
.debug_line
.debug_line_str
.debug_frame
.debug_pubnames
.debug_pubtypes
.debug_gnu_pubnames
.debug_gnu_pubtypes
.debug_str
.debug_loc
.debug_aranges
.debug_ranges
.debug_macinfo
.debug_names
.apple_names
.apple_objc
.apple_namespaces
.apple_types
.debug_str_offsets
.debug_addr
.debug_rnglists
.debug_info.dwo
.debug_types.dwo
.debug_abbrev.dwo
.debug_str.dwo
.debug_line.dwo
.debug_loc.dwo
.debug_str_offsets.dwo
.debug_rnglists.dwo
.debug_cu_index
.debug_tu_index
.llvm_stackmaps
.llvm_faultmaps
.eh_frame
.stack_sizes
.rdata
.debug$S
.debug$T
.debug$H
section_info_dwo
section_types_dwo
section_abbrev_dwo
skel_string
skel_loc
section_str_off_dwo
addr_sec
.drectve
.pdata
.xdata
.sxdata
.gfids$y
.tls$
Cannot initialize MC for non-Windows COFF object files.
Cannot initialize MC for MetalLib object files.
Cannot initialize MC for unknown object file format.
<MCSection
 Fragments:[
      
      
.linkonce
one_only
discard
same_size
same_contents
associative
newest
.section
,#alloc
,#execinstr
,#write
,#exclude
,#tls
init_array
fini_array
preinit_array
nobits
progbits
0x7000001e
llvm_odrtab
llvm_linker_options
llvm_call_graph_profile
unsupported type 0x
 for section 
,comdat
,unique,
.subsection
0123456789_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
,none,
mach-o section specifier requires a segment whose length is between 1 and 16 characters
mach-o section specifier requires a segment and section separated by a comma
mach-o section specifier requires a section whose length is between 1 and 16 characters
mach-o section specifier uses an unknown section type
mach-o section specifier of type 'symbol_stubs' requires a size specifier
mach-o section specifier has invalid attribute
mach-o section specifier cannot have a stub size specified because it does not have type 'symbol_stubs'
mach-o section specifier has a malformed stub size
regular
S_REGULAR
S_ZEROFILL
cstring_literals
S_CSTRING_LITERALS
4byte_literals
S_4BYTE_LITERALS
8byte_literals
S_8BYTE_LITERALS
literal_pointers
S_LITERAL_POINTERS
non_lazy_symbol_pointers
S_NON_LAZY_SYMBOL_POINTERS
lazy_symbol_pointers
S_LAZY_SYMBOL_POINTERS
symbol_stubs
S_SYMBOL_STUBS
mod_init_funcs
S_MOD_INIT_FUNC_POINTERS
mod_term_funcs
S_MOD_TERM_FUNC_POINTERS
coalesced
S_COALESCED
S_GB_ZEROFILL
interposing
S_INTERPOSING
16byte_literals
S_16BYTE_LITERALS
S_DTRACE_DOF
S_LAZY_DYLIB_SYMBOL_POINTERS
thread_local_regular
S_THREAD_LOCAL_REGULAR
thread_local_zerofill
S_THREAD_LOCAL_ZEROFILL
thread_local_variables
S_THREAD_LOCAL_VARIABLES
thread_local_variable_pointers
S_THREAD_LOCAL_VARIABLE_POINTERS
thread_local_init_function_pointers
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
pure_instructions
S_ATTR_PURE_INSTRUCTIONS
no_toc
S_ATTR_NO_TOC
strip_static_syms
S_ATTR_STRIP_STATIC_SYMS
no_dead_strip
S_ATTR_NO_DEAD_STRIP
live_support
S_ATTR_LIVE_SUPPORT
self_modifying_code
S_ATTR_SELF_MODIFYING_CODE
debug
S_ATTR_DEBUG
S_ATTR_SOME_INSTRUCTIONS
S_ATTR_EXT_RELOC
S_ATTR_LOC_RELOC
unsupported directive in streamer
line_table_start
this directive must appear between .cfi_startproc and .cfi_endproc directives
parent function id not introduced by .cv_func_id or .cv_inline_site_id
function id not introduced by .cv_func_id or .cv_inline_site_id
all .cv_loc directives for a function must be in the same section
invalid symbol redefinition
starting new .cfi frame before finishing the previous one
.seh_* directives are not supported on this target
.seh_ directive must appear within an active frame
Starting a function before ending the previous one!
Not all chained regions terminated!
End of a chained region outside a chained region!
Chained unwind areas can't have handlers!
Don't know what kind of handler this is!
frame register and offset can be set at most once
offset is not a multiple of 16
frame offset must be less than or equal to 240
stack allocation size must be non-zero
stack allocation size is not a multiple of 8
register save offset is not 8 byte aligned
If present, PushMachFrame must be the first UOP
EmitRawText called on an MCStreamer that doesn't support it,  something must not be fully mc'ized
Unfinished frame!
Symbol name with unsupported characters
 Off=
, Sym=
, Addend=
, FixupSection=
.file
disable-basicaa
verify-assumption-cache
Enable verification of assumption cache
basicaa-recphi
view-block-freq-propagation-dags
Pop up a window to show a dag displaying how block frequencies propagation through the CFG.
do not display graphs.
fraction
display a graph using the fractional block frequency representation.
integer
display a graph using the raw integer fractional block frequency representation.
display a graph using the real profile count if available.
view-bfi-func-name
The option to specify the name of the function whose CFG will be displayed.
view-hot-freq-percent
An integer in percent used to specify the hot blocks/edges to be displayed in red: a block or edge whose frequency is no less than the max frequency of the function multiplied by this percent.
pgo-view-counts
A boolean option to show CFG dag or text with block profile counts and branch probabilities right after PGO profile annotation step. The profile counts are computed using branch probabilities from the runtime profile data and block frequency propagation algorithm. To view the raw counts from the profile, use option -pgo-view-raw-counts instead. To limit graph display to only one function, use filtering option -view-bfi-func-name.
do not show.
graph
show a graph.
text
show in text.
print-bfi
Print the block frequency info.
print-bfi-func-name
The option to specify the name of the function whose block frequency info is printed.
print-bpi
Print the branch probability info.
print-bpi-func-name
The option to specify the name of the function whose branch probability info is printed.
Call graph node for function: '
Call graph node <<null function>>
>>  #uses=
  CS<
> calls 
function '
<<null function>><<
air.normalize_function_constant_predicate
acos
asin
atan
atan2
acosf
asinf
atanf
atan2f
cosh
coshf
fabs
fabsf
sinh
sinhf
tanh
tanf
tanhf
__acos_finite
__acosf_finite
__asin_finite
__asinf_finite
__atan2_finite
__atan2f_finite
__cosh_finite
__coshf_finite
__sinh_finite
__sinhf_finite
da-delinearize
Try to delinearize array references.
 Empty
 Any
 Point is <
 Distance is 
*X + 
*Y = 
 Line is 
enable-unsafe-globalsmodref-alias-results
icp-remaining-percent-threshold
The percentage threshold against remaining unpromoted indirect call count for the promotion
icp-total-percent-threshold
The percentage threshold against total count for the promotion
icp-max-prom
Max number of promotions for a single indirect call callsite
available-load-scan-limit
Use this to specify the default maximum number of instructions to scan backward from a given instruction, when searching for available loaded value
Loop at depth 
 containing: 
<header>
<latch>
<exiting>
verify-loop-info
Verify loop info (time consuming)
memdep-block-scan-limit
The number of instructions to scan in a block in memory dependency analysis (default = 100)
memdep-block-number-limit
The number of blocks to scan during memory dependency analysis (default = 1000)
force-summary-edges-cold
Force all edges in the function summary to cold
None.
all-non-critical
All non-critical edges.
All edges.
Cannot find option named '
enable-objc-arc-opts
enable/disable all ARC Optimizations
PHITransAddr: null
PHITransAddr: 
  Input #
 is 
profile-summary-cutoff-hot
A count is hot if it exceeds the minimum count to reach this percentile of total counts.
profile-summary-cutoff-cold
A count is cold if it is below the minimum count to reach this percentile of total counts.
If the sample profile is accurate, we will mark all un-sampled callsite as cold. Otherwise, treat un-sampled callsites as if we have no profile.
profile-summary-huge-working-set-size-threshold
The code working set size is considered huge if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
scalar-evolution-max-iterations
Maximum number of iterations SCEV will symbolically execute a constant derived loop
verify-scev
Verify ScalarEvolution's backedge taken counts (slow)
verify-scev-maps
Verify no dangling value in ScalarEvolution's ExprValueMap (slow)
scev-mulops-inline-threshold
Threshold for inlining multiplication operands into a SCEV
scev-addops-inline-threshold
Threshold for inlining addition operands into a SCEV
scalar-evolution-max-scev-compare-depth
Maximum depth of recursive SCEV complexity comparisons
scalar-evolution-max-scev-operations-implication-depth
Maximum depth of recursive SCEV operations implication analysis
scalar-evolution-max-value-compare-depth
Maximum depth of recursive value complexity comparisons
scalar-evolution-max-arith-depth
Maximum depth of recursive arithmetics
scalar-evolution-max-constant-evolving-depth
Maximum depth of recursive constant evolving
scalar-evolution-max-ext-depth
Maximum depth of recursive SExt/ZExt
scalar-evolution-max-add-rec-size
Max coefficients in AddRec during evolving
(trunc 
(zext 
(sext 
nuw><
nsw><
nw><
 umax 
 smax 
<nuw>
<nsw>
 /u 
sizeof(
alignof(
offsetof(
***COULDNOTCOMPUTE***
Equal predicate: 
 == 
 Added Flags: 
<nusw>
<nssw>
vector-library
Vector functions library
No vector functions library
Accelerate
Accelerate framework
SVML
Intel SVML library
??2@YAPAXI@Z
??2@YAPAXIABUnothrow_t@std@@@Z
??2@YAPEAX_K@Z
??2@YAPEAX_KAEBUnothrow_t@std@@@Z
??3@YAXPAX@Z
??3@YAXPAXABUnothrow_t@std@@@Z
??3@YAXPAXI@Z
??3@YAXPEAX@Z
??3@YAXPEAXAEBUnothrow_t@std@@@Z
??3@YAXPEAX_K@Z
??_U@YAPAXI@Z
??_U@YAPAXIABUnothrow_t@std@@@Z
??_U@YAPEAX_K@Z
??_U@YAPEAX_KAEBUnothrow_t@std@@@Z
??_V@YAXPAX@Z
??_V@YAXPAXABUnothrow_t@std@@@Z
??_V@YAXPAXI@Z
??_V@YAXPEAX@Z
??_V@YAXPEAXAEBUnothrow_t@std@@@Z
??_V@YAXPEAX_K@Z
_IO_getc
_IO_putc
_ZdaPv
_ZdaPvRKSt9nothrow_t
_ZdaPvSt11align_val_t
_ZdaPvSt11align_val_tRKSt9nothrow_t
_ZdaPvj
_ZdaPvm
_ZdlPv
_ZdlPvRKSt9nothrow_t
_ZdlPvSt11align_val_t
_ZdlPvSt11align_val_tRKSt9nothrow_t
_ZdlPvj
_ZdlPvm
_Znaj
_ZnajRKSt9nothrow_t
_ZnajSt11align_val_t
_ZnajSt11align_val_tRKSt9nothrow_t
_Znam
_ZnamRKSt9nothrow_t
_ZnamSt11align_val_t
_ZnamSt11align_val_tRKSt9nothrow_t
_Znwj
_ZnwjRKSt9nothrow_t
_ZnwjSt11align_val_t
_ZnwjSt11align_val_tRKSt9nothrow_t
_Znwm
_ZnwmRKSt9nothrow_t
_ZnwmSt11align_val_t
_ZnwmSt11align_val_tRKSt9nothrow_t
__acosh_finite
__acoshf_finite
__acoshl_finite
__acosl_finite
__asinl_finite
__atan2l_finite
__atanh_finite
__atanhf_finite
__atanhl_finite
__coshl_finite
__cospi
__cospif
__cxa_atexit
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_release
__exp10_finite
__exp10f_finite
__exp10l_finite
__isoc99_scanf
__isoc99_sscanf
__memcpy_chk
__memmove_chk
__memset_chk
__nvvm_reflect
__sincospi_stret
__sincospif_stret
__sinhl_finite
__sinpi
__sinpif
__sqrt_finite
__sqrtf_finite
__sqrtl_finite
__stpcpy_chk
__stpncpy_chk
__strcpy_chk
__strdup
__strncpy_chk
__strndup
__strtok_r
access
acosh
acoshf
acoshl
acosl
asinh
asinhf
asinhl
asinl
atan2l
atanh
atanhf
atanhl
atanl
atof
atoi
atol
atoll
bcmp
bcopy
bzero
cabs
cabsf
cabsl
calloc
cbrt
cbrtf
cbrtl
chmod
chown
clearerr
closedir
coshl
ctermid
exp10
exp10f
exp10l
expm1
expm1f
expm1l
fabsl
fclose
fdopen
feof
ferror
fflush
ffsl
ffsll
fgetc
fgetc_unlocked
fgetpos
fgets
fgets_unlocked
fileno
fiprintf
flockfile
flsl
flsll
fopen
fopen64
fprintf
fputc
fputc_unlocked
fputs
fputs_unlocked
fread
fread_unlocked
frexp
frexpf
frexpl
fscanf
fseek
fseeko
fseeko64
fsetpos
fstat
fstat64
fstatvfs
fstatvfs64
ftell
ftello
ftello64
ftrylockfile
funlockfile
fwrite
fwrite_unlocked
getc
getc_unlocked
getchar
getchar_unlocked
getenv
getitimer
getlogin_r
getpwnam
gets
gettimeofday
htonl
htons
iprintf
isascii
isdigit
labs
lchown
ldexp
ldexpf
ldexpl
llabs
log1p
log1pf
log1pl
logb
logbf
logbl
lstat
lstat64
memalign
memccpy
memchr
memcmp
mempcpy
memrchr
memset_pattern16
mkdir
mktime
modf
modff
modfl
ntohl
ntohs
open64
opendir
pclose
perror
popen
posix_memalign
pread
printf
putc
putc_unlocked
putchar
putchar_unlocked
puts
pwrite
qsort
read
readlink
realloc
reallocf
realpath
remove
rename
rewind
rmdir
scanf
setbuf
setitimer
setvbuf
sinhl
siprintf
snprintf
sprintf
sscanf
stat
stat64
statvfs
statvfs64
stpcpy
stpncpy
strcasecmp
strcat
strchr
strcmp
strcoll
strcpy
strcspn
strdup
strlen
strncasecmp
strncat
strncmp
strncpy
strndup
strnlen
strpbrk
strrchr
strspn
strstr
strtod
strtof
strtok
strtok_r
strtol
strtold
strtoll
strtoul
strtoull
strxfrm
system
tanhl
tanl
times
tmpfile
tmpfile64
toascii
uname
ungetc
unlink
unsetenv
utime
utimes
valloc
vfprintf
vfscanf
vprintf
vscanf
vsnprintf
vsprintf
vsscanf
wcslen
write
costmodel-reduxcost
Recognize reduction patterns.
enable-tbaa
enable-scoped-noalias
dom-conditions-max-uses
value-tracking
BadAssumption
Detected conflicting code assumptions. Program may have undefined behavior, or compiler may have internal error.
static-func-full-module-prefix
Use full module build paths in the profile counter names for static functions.
static-func-strip-dirname-prefix
Strip specified level of directory name from source path in the profile counter name for static functions.
DW_TAG_null
DW_TAG_array_type
DW_TAG_class_type
DW_TAG_entry_point
DW_TAG_enumeration_type
DW_TAG_formal_parameter
DW_TAG_imported_declaration
DW_TAG_label
DW_TAG_lexical_block
DW_TAG_member
DW_TAG_pointer_type
DW_TAG_reference_type
DW_TAG_compile_unit
DW_TAG_string_type
DW_TAG_structure_type
DW_TAG_subroutine_type
DW_TAG_typedef
DW_TAG_union_type
DW_TAG_unspecified_parameters
DW_TAG_variant
DW_TAG_common_block
DW_TAG_common_inclusion
DW_TAG_inheritance
DW_TAG_inlined_subroutine
DW_TAG_module
DW_TAG_ptr_to_member_type
DW_TAG_set_type
DW_TAG_subrange_type
DW_TAG_with_stmt
DW_TAG_access_declaration
DW_TAG_base_type
DW_TAG_catch_block
DW_TAG_const_type
DW_TAG_constant
DW_TAG_enumerator
DW_TAG_file_type
DW_TAG_friend
DW_TAG_namelist
DW_TAG_namelist_item
DW_TAG_packed_type
DW_TAG_subprogram
DW_TAG_template_type_parameter
DW_TAG_template_value_parameter
DW_TAG_thrown_type
DW_TAG_try_block
DW_TAG_variant_part
DW_TAG_variable
DW_TAG_volatile_type
DW_TAG_dwarf_procedure
DW_TAG_restrict_type
DW_TAG_interface_type
DW_TAG_namespace
DW_TAG_imported_module
DW_TAG_unspecified_type
DW_TAG_partial_unit
DW_TAG_imported_unit
DW_TAG_condition
DW_TAG_shared_type
DW_TAG_type_unit
DW_TAG_rvalue_reference_type
DW_TAG_template_alias
DW_TAG_coarray_type
DW_TAG_generic_subrange
DW_TAG_dynamic_type
DW_TAG_atomic_type
DW_TAG_call_site
DW_TAG_call_site_parameter
DW_TAG_skeleton_unit
DW_TAG_immutable_type
DW_TAG_MIPS_loop
DW_TAG_format_label
DW_TAG_function_template
DW_TAG_class_template
DW_TAG_GNU_template_template_param
DW_TAG_GNU_template_parameter_pack
DW_TAG_GNU_formal_parameter_pack
DW_TAG_GNU_call_site
DW_TAG_GNU_call_site_parameter
DW_TAG_APPLE_property
DW_TAG_APPLE_ptrauth_type
DW_TAG_BORLAND_property
DW_TAG_BORLAND_Delphi_string
DW_TAG_BORLAND_Delphi_dynamic_array
DW_TAG_BORLAND_Delphi_set
DW_TAG_BORLAND_Delphi_variant
DW_OP_addr
DW_OP_deref
DW_OP_const1u
DW_OP_const1s
DW_OP_const2u
DW_OP_const2s
DW_OP_const4u
DW_OP_const4s
DW_OP_const8u
DW_OP_const8s
DW_OP_constu
DW_OP_consts
DW_OP_dup
DW_OP_drop
DW_OP_over
DW_OP_pick
DW_OP_swap
DW_OP_rot
DW_OP_xderef
DW_OP_abs
DW_OP_and
DW_OP_div
DW_OP_minus
DW_OP_mod
DW_OP_mul
DW_OP_neg
DW_OP_not
DW_OP_or
DW_OP_plus
DW_OP_plus_uconst
DW_OP_shl
DW_OP_shr
DW_OP_shra
DW_OP_xor
DW_OP_bra
DW_OP_eq
DW_OP_ge
DW_OP_gt
DW_OP_le
DW_OP_lt
DW_OP_ne
DW_OP_skip
DW_OP_lit0
DW_OP_lit1
DW_OP_lit2
DW_OP_lit3
DW_OP_lit4
DW_OP_lit5
DW_OP_lit6
DW_OP_lit7
DW_OP_lit8
DW_OP_lit9
DW_OP_lit10
DW_OP_lit11
DW_OP_lit12
DW_OP_lit13
DW_OP_lit14
DW_OP_lit15
DW_OP_lit16
DW_OP_lit17
DW_OP_lit18
DW_OP_lit19
DW_OP_lit20
DW_OP_lit21
DW_OP_lit22
DW_OP_lit23
DW_OP_lit24
DW_OP_lit25
DW_OP_lit26
DW_OP_lit27
DW_OP_lit28
DW_OP_lit29
DW_OP_lit30
DW_OP_lit31
DW_OP_reg0
DW_OP_reg1
DW_OP_reg2
DW_OP_reg3
DW_OP_reg4
DW_OP_reg5
DW_OP_reg6
DW_OP_reg7
DW_OP_reg8
DW_OP_reg9
DW_OP_reg10
DW_OP_reg11
DW_OP_reg12
DW_OP_reg13
DW_OP_reg14
DW_OP_reg15
DW_OP_reg16
DW_OP_reg17
DW_OP_reg18
DW_OP_reg19
DW_OP_reg20
DW_OP_reg21
DW_OP_reg22
DW_OP_reg23
DW_OP_reg24
DW_OP_reg25
DW_OP_reg26
DW_OP_reg27
DW_OP_reg28
DW_OP_reg29
DW_OP_reg30
DW_OP_reg31
DW_OP_breg0
DW_OP_breg1
DW_OP_breg2
DW_OP_breg3
DW_OP_breg4
DW_OP_breg5
DW_OP_breg6
DW_OP_breg7
DW_OP_breg8
DW_OP_breg9
DW_OP_breg10
DW_OP_breg11
DW_OP_breg12
DW_OP_breg13
DW_OP_breg14
DW_OP_breg15
DW_OP_breg16
DW_OP_breg17
DW_OP_breg18
DW_OP_breg19
DW_OP_breg20
DW_OP_breg21
DW_OP_breg22
DW_OP_breg23
DW_OP_breg24
DW_OP_breg25
DW_OP_breg26
DW_OP_breg27
DW_OP_breg28
DW_OP_breg29
DW_OP_breg30
DW_OP_breg31
DW_OP_regx
DW_OP_fbreg
DW_OP_bregx
DW_OP_piece
DW_OP_deref_size
DW_OP_xderef_size
DW_OP_nop
DW_OP_push_object_address
DW_OP_call2
DW_OP_call4
DW_OP_call_ref
DW_OP_form_tls_address
DW_OP_call_frame_cfa
DW_OP_bit_piece
DW_OP_implicit_value
DW_OP_stack_value
DW_OP_implicit_pointer
DW_OP_addrx
DW_OP_constx
DW_OP_entry_value
DW_OP_const_type
DW_OP_regval_type
DW_OP_deref_type
DW_OP_xderef_type
DW_OP_convert
DW_OP_reinterpret
DW_OP_GNU_push_tls_address
DW_OP_GNU_addr_index
DW_OP_GNU_const_index
DW_OP_LLVM_fragment
DW_ATE_address
DW_ATE_boolean
DW_ATE_complex_float
DW_ATE_float
DW_ATE_signed
DW_ATE_signed_char
DW_ATE_unsigned
DW_ATE_unsigned_char
DW_ATE_imaginary_float
DW_ATE_packed_decimal
DW_ATE_numeric_string
DW_ATE_edited
DW_ATE_signed_fixed
DW_ATE_unsigned_fixed
DW_ATE_decimal_float
DW_ATE_UTF
DW_ATE_UCS
DW_ATE_ASCII
DW_VIRTUALITY_none
DW_VIRTUALITY_virtual
DW_VIRTUALITY_pure_virtual
DW_LANG_C89
DW_LANG_C
DW_LANG_Ada83
DW_LANG_C_plus_plus
DW_LANG_Cobol74
DW_LANG_Cobol85
DW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Pascal83
DW_LANG_Modula2
DW_LANG_Java
DW_LANG_C99
DW_LANG_Ada95
DW_LANG_Fortran95
DW_LANG_PLI
DW_LANG_ObjC
DW_LANG_ObjC_plus_plus
DW_LANG_UPC
DW_LANG_D
DW_LANG_Python
DW_LANG_OpenCL
DW_LANG_Go
DW_LANG_Modula3
DW_LANG_Haskell
DW_LANG_C_plus_plus_03
DW_LANG_C_plus_plus_11
DW_LANG_OCaml
DW_LANG_Rust
DW_LANG_C11
DW_LANG_Swift
DW_LANG_Julia
DW_LANG_Dylan
DW_LANG_C_plus_plus_14
DW_LANG_Fortran03
DW_LANG_Fortran08
DW_LANG_RenderScript
DW_LANG_BLISS
DW_LANG_Mips_Assembler
DW_LANG_GOOGLE_RenderScript
DW_LANG_BORLAND_Delphi
DW_CC_normal
DW_CC_program
DW_CC_nocall
DW_CC_pass_by_reference
DW_CC_pass_by_value
DW_CC_GNU_renesas_sh
DW_CC_GNU_borland_fastcall_i386
DW_CC_BORLAND_safecall
DW_CC_BORLAND_stdcall
DW_CC_BORLAND_pascal
DW_CC_BORLAND_msfastcall
DW_CC_BORLAND_msreturn
DW_CC_BORLAND_thiscall
DW_CC_BORLAND_fastcall
DW_CC_LLVM_vectorcall
DW_CC_LLVM_Win64
DW_CC_LLVM_X86_64SysV
DW_CC_LLVM_AAPCS
DW_CC_LLVM_AAPCS_VFP
DW_CC_LLVM_IntelOclBicc
DW_CC_LLVM_SpirFunction
DW_CC_LLVM_OpenCLKernel
DW_CC_LLVM_Swift
DW_CC_LLVM_PreserveMost
DW_CC_LLVM_PreserveAll
DW_CC_LLVM_X86RegCall
DW_CC_GDB_IBM_OpenCL
DW_MACINFO_define
DW_MACINFO_undef
DW_MACINFO_start_file
DW_MACINFO_end_file
DW_MACINFO_vendor_ext
DW_MACINFO_invalid
FUNCTION
R_WEBASSEMBLY_FUNCTION_INDEX_LEB
R_WEBASSEMBLY_TABLE_INDEX_SLEB
R_WEBASSEMBLY_TABLE_INDEX_I32
R_WEBASSEMBLY_MEMORY_ADDR_LEB
R_WEBASSEMBLY_MEMORY_ADDR_SLEB
R_WEBASSEMBLY_MEMORY_ADDR_I32
R_WEBASSEMBLY_TYPE_INDEX_LEB
R_WEBASSEMBLY_GLOBAL_INDEX_LEB
R_WEBASSEMBLY_FUNCTION_OFFSET_I32
R_WEBASSEMBLY_SECTION_OFFSET_I32
31001.638.1
1<Cbeu
*;;;;;;06k
B&(*
FH024R
L@TV
dfNj^Z` h
yy
yy
psvy
$+29@GNU\cjqx
!&+5=as|
!$'*
-0369?BEH
KNQWZ`flou{
RSbaa
e[^F
$$$$
DCCD
DCCC
P"Yf
>\yyy
$999
99A999HNU\d
.5=EN
-?:\,[]{}#&*!|>'"%@`
01234567
0123456789abcdefABCDEF
0123456789
 #&(,/135
7r;BOQUY]aehk
np~}|{zyxwv
#*18?BIPegq
0369
////////.
PE33
PE33
?iii?iii????????
6333733333334333m
    
!!!!!!!!
!!!!!!!!
!!!!!!!!
!!!!!!!!!!!!!!!!!!
!!!!!!
!!!!!!!!
!!!!!!!!!!!!!!!!
!!!!!!!!!!
!!!!!!!!!!
!!!!!!!!!!!!!!!!!!
!!!!
!!!!!!
!!!!!!!!!!!!!!
!!!!!!!!
!!!!!!
!!!!!!!!
!!!!!!!!!!
!!!!
!!!!!!!!
!!!!
!!!!!!!!
%%%%
####
########################
#######
##################################&
BEHK-NQTW0
ilZ]`3'
or6cu
${<~?f
  DZq
ccccccccc
!$'*-0369<?BEHKN
:F?VV
-------
--;0>3
".ee
"""111
!!!!
))))))
VVV;F
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
*<Oww
"/ll
9996
!&/u7>EMU]e
                                                                                
FsBB
PV\@FP]a
PV\@FP]a
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
222222222222222222
LPTW[22_aceiHk2HHHHHHHHHHu
wy{2}22222222222222222222222222
\\\\4
2y6y:>BF
hhhhhhh
hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh
HHHHHHH
HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH
!#%')+-/13579;=?ACEGIKMOQSUWY[]_aceg
(*,.02468
"(09Rglx
 $$$$$$$$$$$.26
(1?FJM
#Ccfjqx
:L\r
SSSSSSS
SSSS
13QS
S!$5
'*7,/D
DDDDDDD
DDDD
258BD
!*U7UG
)]]]2@]]P
)7>EIPTX\cgnuy
17Ca
* %*
!%)-
##TTTT5
**TTTTTTTT
$,7>E
4c4
"',05:?EKPUE
i"iiiy
UUSS&0
NNNPP
TTTRR
ZZZ\\\   
(-7<2A
-048;
259<
"%(+.258;>ADGJMQTX\_cfilptwz}
RVZ^
#&)-03]]]]]]]]]69<?BFILOSVZ
\"\8
<input bitcode files>
override
filename
input bitcode file which can override previously defined symbol(s)
import
function:filename
Pair of function name and filename, where function should be imported from bitcode in filename
summary-index
Module summary index filename
Override output filename
internalize
Internalize linked symbols
disable-debug-info-type-map
Don't use a uniquing type map for debug info
only-needed
Link only needed symbols
Enable binary output on terminals
disable-lazy-loading
Disable lazy module loading
Write output as LLVM assembly
Print information about actions taken
Print assembly as linked
suppress-warnings
Suppress all linking warnings
preserve-bc-uselistorder
Preserve use-list order when writing LLVM bitcode.
preserve-ll-uselistorder
Preserve use-list order when writing LLVM assembly.
llvm linker
llvm-link
Here's the assembly:
linked module is broken!
Writing bitcode...
 loading file '
input module is broken!
Linking in '
Loading '
Import parameter bad format: 
Ignoring import request for non-existent function 
 from 
Ignoring import request for weak-any function 
Importing 
Allocation failed
print-summary-global-ids
Print the global id for each value when reading the module summary
Malformed block
Invalid record
Invalid bitcode signature
Invalid bitcode wrapper header
Unexpected end of file
Invalid value
Incompatible epoch: Bitcode '
' vs current: '
Could not find function in stream
Trying to materialize functions before seeing function blocks
Expect SubBlock
Expect function block
 (Producer: '
' Reader: 'LLVM 
Insufficient function protos
Invalid function metadata: incoming forward references
Invalid ID
Invalid cast
Explicit gep type does not match pointee type of pointer operand
EXTRACTVAL: Invalid instruction with 0 indices
EXTRACTVAL: Invalid type
EXTRACTVAL: Invalid struct index
EXTRACTVAL: Invalid array index
INSERTVAL: Invalid instruction with 0 indices
INSERTVAL: Invalid type
INSERTVAL: Invalid struct index
INSERTVAL: Invalid array index
Inserted value type doesn't match aggregate type
Invalid type for value
Explicit invoke type is not a function type
Callee is not a pointer
Callee is not of pointer to function type
Explicit invoke type does not match pointee type of callee operand
Insufficient operands to call
Personality function mismatch
Old-style alloca with a non-pointer type
Fast math flags indicator set for call with no FMF
Explicit call type is not a function type
Callee is not a pointer type
Explicit call type does not match pointee type of callee operand
Fast-math-flags specified for call without floating-point scalar or vector return type
Invalid instruction with no BB
Operand bundles found with no consumer
Never resolved value found in function
Invalid function metadata: outgoing forward refs
Invalid constant reference
Invalid constant type
Explicit gep operator type does not match pointee type of pointer operand
Invalid gep with no operands
Invalid value name
Invalid alignment value
Load/Store operand is not a pointer type
Explicit load/store type does not match pointee type of pointer operand
Cannot load/store from pointer
Never resolved function from blockaddress
Malformed global initializer set
Invalid multiple blocks
Unknown attribute kind (
Bitwidth for integer type out of range
Invalid type
Invalid function argument type
Invalid TYPE table
Invalid vector length
Invalid matrix dimensions
Invalid TYPE table: Only named structs can be forward referenced
Expected a constant
Alias and aliasee types don't match
Invalid multiple synchronization scope names blocks
Invalid empty synchronization scope names block
Invalid global variable comdat ID
Invalid calling convention ID
Invalid function comdat ID
Invalid hash length 
Invalid Summary Block: record for version expected
Invalid Summary Block: version expected
Invalid summary version 
, 1, 2, 3 or 4 expected
Alias expects aliasee summary to be parsed
Name attachment that does not follow a combined record
Invalid hash that does not follow a module path
GUID 
) is 
Expected a single module
llvm.bitcode
Corrupted bitcode
Abbreviation starts with an Array or a Blob
Array element type can't be an Array or a Blob
Array op not second to last
Array element type has to be an encoding of a type
Fixed or VBR abbrev record with size > MaxChunkData
Abbrev record with no operands
Invalid abbrev number
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._
import-full-type-definitions
Import full type definitions for ThinLTO.
disable-ondemand-mds-loading
Force disable the lazy-loading on-demand of metadata when loading bitcode for importing.
Corrupted Metadata block
Invalid metadata: fwd refs into function blocks
Invalid record: metadata strings layout
Invalid record: metadata strings with no strings
Invalid record: metadata strings corrupt offset
Invalid record: metadata strings bad length
Invalid record: metadata strings truncated chars
Invalid metadata attachment
Conflicting METADATA_KIND records
METADATA_NAME not followed by METADATA_NAMED_NODE
Invalid record: Unsupported version of DISubrange
Alignment value is too large
Can't lazyload MD
Type mismatch in constant table!
bitcode-mdindex-threshold
Number of metadatas above which we emit an index to enable lazy-loading
write-relbf-to-summary
Write relative block frequency to function summary 
Invalid encoding
APPLE_1_
ThinLTO
Unexpected anonymous function when writing summary
Default
MetaData
Map Name: 
Size: 
Value: 
Value: [null]
 Uses(
 [null]
Metadata: slot = 
Metadata: function = 
 = comdat 
exactmatch
largest
noduplicates
samesize
 = type 
; Materializable
; Function Attrs: 
define 
 section "
 align 
 gc "
 prefix 
 prologue 
 personality 
!<unknown kind #
<empty name> 
!DIExpression(
!DILocation(
line
column
scope
inlinedAt
null
external
private
internal
linkonce
linkonce_odr
weak
weak_odr
common
appending
extern_weak
available_externally
dso_local 
hidden 
protected 
dllimport 
dllexport 
fastcc
coldcc
webkit_jscc
anyregcc
preserve_mostcc
preserve_allcc
cxx_fast_tlscc
ghccc
x86_stdcallcc
x86_fastcallcc
x86_thiscallcc
x86_regcallcc
x86_vectorcallcc
intel_ocl_bicc
arm_apcscc
arm_aapcscc
arm_aapcs_vfpcc
msp430_intrcc
avr_intrcc 
avr_signalcc 
ptx_kernel
ptx_device
agx_ticc
agx_pscc
agx_vscc
agx_sscc
agx_sfcc
agx_sicc
agx_clcc
agx_dscc
agx_mrcc
x86_64_sysvcc
win64cc
spir_func
spir_kernel
swiftcc
x86_intrcc
hhvmcc
hhvm_ccc
amdgpu_vs
amdgpu_ls
amdgpu_hs
amdgpu_es
amdgpu_gs
amdgpu_ps
amdgpu_cs
amdgpu_kernel
air_intersection
asm 
sideeffect 
alignstack 
inteldialect 
", "
<badref>
local_unnamed_addr
unnamed_addr
 comdat
<null operand!>
; uselistorder directives
uselistorder
_bb 
, { 
source_filename = "
target datalayout = "
target triple = "
module asm "
attributes #
 = { 
distinct 
<temporary!> 
!DIGlobalVariableExpression(
expr
!GenericDINode(
header
operands: {
tag: 
!DISubrange(
count
lowerBound
!DIEnumerator(
name
isUnsigned
!DIBasicType(
size
encoding
!DIDerivedType(
file
baseType
offset
flags
extraData
dwarfAddressSpace
ptrAuthKey
ptrAuthIsAddressDiscriminated
ptrAuthExtraDiscriminator
!DICompositeType(
elements
runtimeLang
vtableHolder
templateParams
identifier
discriminator
!DISubroutineType(
types
!DIFile(
directory
source
checksumkind: 
checksum
!DICompileUnit(
language
producer
isOptimized
runtimeVersion
splitDebugFilename
emissionKind
enums
retainedTypes
globals
imports
macros
dwoId
splitDebugInlining
debugInfoForProfiling
gnuPubnames
!DISubprogram(
linkageName
isLocal
isDefinition
scopeLine
containingType
virtuality
virtualIndex
thisAdjustment
unit
declaration
retainedNodes
thrownTypes
!DILexicalBlock(
!DILexicalBlockFile(
!DINamespace(
exportSymbols
!DIModule(
configMacros
includePath
isysroot
!DITemplateTypeParameter(
!DITemplateValueParameter(
!DIGlobalVariable(
!DILocalVariable(
!DILabel(
!DIObjCProperty(
setter
getter
attributes
!DIImportedEntity(
entity
!DIMacro(
type: 
!DIMacroFile(
nodes
 = !{
void
half
bfloat
float
double
x86_fp80
fp128
ppc_fp128
metadata
x86_mmx
token
%"type 
 addrspace(
opaque
<badref> = 
musttail 
tail 
notail 
 atomic
 weak
 volatile
    
          cleanup
          catch 
          filter 
 within 
] unwind 
to caller
 void
 to 
 unwind 
, ...
          to 
inalloca 
swifterror 
, align 
, addrspace(
 fast
 reassoc
 nnan
 ninf
 nsz
 arcp
 contract
 afn
 nuw
 nsw
 exact
 inbounds
 syncscope("
not_atomic
unordered
monotonic
consume
acquire
release
acq_rel
seq_cst
 ; (
; <label>:
; Error: Block without parent!
 No predecessors!
 preds = 
external 
addrspace(
externally_initialized 
constant 
global 
, section "
thread_local 
thread_local(localdynamic) 
thread_local(initialexec) 
thread_local(localexec) 
alias 
ifunc 
 <<NULL ALIASEE>>
zeroinitializer
blockaddress(
none
undef
inrange 
<placeholder or erroneous Constant>
[Regular LTO]
 = module: (
path: "
", hash: (
 = typeid: (name: "
) ; guid = 
 = gv: (
name: "
guid: 
, summaries: (
 ; guid = 
(module: ^
, flags: (
linkage: 
, notEligibleToImport: 
, live: 
, dsoLocal: 
, refs: (
alias
function
variable
, aliasee: 
, insts: 
, funcFlags: (
readNone: 
, readOnly: 
, noRecurse: 
, returnDoesNotAlias: 
, calls: (
(callee: ^
, hotness: 
, relbf: 
unknown
cold
critical
, typeIdInfo: (
typeTests: (
typeTestAssumeVCalls
typeCheckedLoadVCalls
typeTestAssumeConstVCalls
typeCheckedLoadConstVCalls
vFuncId: (
, offset: 
args: (
, summary: (
, wpdResolutions: (
(offset: 
typeTestRes: (kind: 
, sizeM1BitWidth: 
, alignLog2: 
, sizeM1: 
, bitMask: 
, inlineBits: 
unsat
byteArray
inline
single
allOnes
wpdRes: (kind: 
, singleImplName: "
, resByArg: (
, byArg: (kind: 
, info: 
, byte: 
, bit: 
indir
singleImpl
branchFunnel
uniformRetVal
uniqueRetVal
virtualConstProp
sanitize_address
sanitize_hwaddress
alwaysinline
argmemonly
builtin
convergent
swifterror
swiftself
inaccessiblememonly
inaccessiblemem_or_argmemonly
inalloca
inlinehint
inreg
jumptable
minsize
naked
nest
nobuiltin
nocapture
noduplicate
noimplicitfloat
noinline
nonlazybind
noredzone
noreturn
nocf_check
norecurse
nounwind
optforfuzzing
optnone
optsize
readnone
readonly
writeonly
returned
returns_twice
signext
speculatable
sspreq
sspstrong
safestack
shadowcallstack
strictfp
sret
sanitize_thread
sanitize_memory
uwtable
zeroext
byval
alignstack
allocsize(
AS =
  { 
PAL[
 => 
profile-sample-accurate
null-pointer-is-valid
objc_retainAutoreleaseReturnValue
cast
extractelement
sse2.storel.dq
sse2.sqrt.sd
avx512.kand.w
avx512.kandn.w
avx512.kor.w
avx512.kxor.w
avx512.kxnor.w
avx512.knot.w
avx512.kortestz.w
avx512.kortestc.w
sse.add.ss
sse2.add.sd
sse.sub.ss
sse2.sub.sd
sse.mul.ss
sse2.mul.sd
sse.div.ss
sse2.div.sd
sse41.pmaxsb
avx2.pmulu.dq
avx512.pmulu.dq.512
sse41.pmuldq
avx2.pmul.dq
avx512.pmul.dq.512
sse2.cvtsi2sd
sse.cvtsi642ss
sse2.cvtsi642sd
avx512.cvtusi2sd
sse2.cvtss2sd
avx.cvtdq2.pd.256
avx512.mask.cvtdq2ps.128
avx512.mask.cvtudq2ps.128
avx512.mask.cvtqq2pd.128
avx512.mask.cvtuqq2pd.128
sse2.cvtps2pd
avx.cvt.ps2.pd.256
avx512.mask.cvtps2pd.128
cvtu
cvtps2pd
false
true
pmovsx
sse2.psll.dq.bs
avx512.psll.dq.512
avx512.psrl.dq.512
sse41.pblendw
abs.i
abs.ll
abs.cond
max.i
max.ull
max.cond
min.i
min.ull
min.cond
ctlz
ctlz.trunc
ctpop
ctpop.trunc
trunc
.old
clang.arc.retainAutoreleasedReturnValueMarker
Objective-C Class Properties
llvm.ctlz.
^arm\.neon\.vld([1234]|[234]lane)\.v[a-z0-9]*$
.p0i8
^arm\.neon\.vst([1234]|[234]lane)\.v[a-z0-9]*$
lane
arm.thread.pointer
sse41.dppd
sse41.mpsadbw
avx2.mpsadbw
avx512.mask.cvttpd2dq.256
avx2.movntdqa
avx512.movntdqa
xop.vpcmov.256
extract
palignr
vpmovm2
llvm.loop.interleave.count
llvm.loop.vectorize.
.splatinsert
.splat
full-set
empty-set
use-dbg-addr
Use llvm.dbg.addr for all local variables
Address space 0 can never be non-integral
Invalid address space, must be a 24bit integer
Missing size specification for pointer in datalayout string
Invalid pointer size of 0 bytes
Missing alignment specification for pointer in datalayout string
Pointer ABI alignment must be a power of 2
Pointer preferred alignment must be a power of 2
Invalid index size of 0 bytes
Sized aggregate specification in datalayout string
Missing alignment specification in datalayout string
ABI alignment specification must be >0 for non-aggregate types
Zero width native integer type in datalayout string
Unexpected trailing characters after mangling specifier in datalayout string
Expected mangling specifier in datalayout string
Unknown mangling specifier in datalayout string
Unknown mangling in datalayout string
Unknown specifier in datalayout string
Invalid bit width, must be a 24bit integer
Invalid ABI alignment, must be a 16bit integer
Invalid preferred alignment, must be a 16bit integer
Invalid ABI alignment, must be a power of 2
Invalid preferred alignment, must be a power of 2
Preferred alignment cannot be less than the ABI alignment
Trailing separator in datalayout string
Expected token before separator in datalayout string
not a number, or does not fit in an unsigned int
number of bits must be a byte width multiple
Invalid address space, must be a 24-bit integer
llvm.dbg.declare
llvm.dbg.value
Debug Info Version
DIFlagZero
DIFlagPrivate
DIFlagProtected
DIFlagPublic
DIFlagFwdDecl
DIFlagAppleBlock
DIFlagBlockByrefStruct
DIFlagVirtual
DIFlagArtificial
DIFlagExplicit
DIFlagPrototyped
DIFlagObjcClassComplete
DIFlagObjectPointer
DIFlagVector
DIFlagStaticMember
DIFlagLValueReference
DIFlagRValueReference
DIFlagReserved
DIFlagSingleInheritance
DIFlagMultipleInheritance
DIFlagVirtualInheritance
DIFlagIntroducedVirtual
DIFlagBitField
DIFlagNoReturn
DIFlagMainSubprogram
DIFlagTypePassByValue
DIFlagTypePassByReference
DIFlagFixedEnum
DIFlagThunk
DIFlagTrivial
DIFlagBigEndian
DIFlagLittleEndian
DIFlagAllCallsDescribed
DIFlagIndirectVirtualBase
CSK_MD5
CSK_SHA1
NoDebug
FullDebug
LineTablesOnly
 @[ 
pass-remarks
pattern
Enable optimization remarks from passes whose name match the given regular expression
pass-remarks-missed
Enable missed optimization remarks from passes whose name match the given regular expression
pass-remarks-analysis
Enable optimization analysis remarks from passes whose name match the given regular expression
Invalid regular expression '
' in -pass-remarks: 
) in 
ignoring debug info with an invalid version (
ignoring invalid debug info in 
 (hotness: 
!Passed
!Missed
!Analysis
!AnalysisFPCommute
!AnalysisAliasing
!Failure
Name
DebugLoc
Function
Hotness
Args
^(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$
File
Line
Column
verify-dom-info
Verify dominator info (time consuming)
Insert 
Delete 
 -> 
PendUpdates:
Insert, 
Delete, 
(no name)
(badref), 
(no_name)
(badref)
DeletedBBs:
(no_name)(
not_intrinsic
llvm.addressofreturnaddress
llvm.adjust.trampoline
llvm.annotation
llvm.assume
llvm.bitreverse
llvm.bswap
llvm.canonicalize
llvm.ceil
llvm.clear_cache
llvm.codeview.annotation
llvm.convert.from.fp16
llvm.convert.to.fp16
llvm.copysign
llvm.coro.alloc
llvm.coro.alloca.alloc
llvm.coro.alloca.free
llvm.coro.alloca.get
llvm.coro.begin
llvm.coro.destroy
llvm.coro.done
llvm.coro.end
llvm.coro.frame
llvm.coro.free
llvm.coro.id
llvm.coro.id.retcon
llvm.coro.id.retcon.once
llvm.coro.noop
llvm.coro.param
llvm.coro.prepare.retcon
llvm.coro.promise
llvm.coro.resume
llvm.coro.save
llvm.coro.size
llvm.coro.subfn.addr
llvm.coro.suspend
llvm.coro.suspend.retcon
llvm.cos
llvm.ctlz
llvm.ctpop
llvm.cttz
llvm.dbg.addr
llvm.dbg.label
llvm.debugtrap
llvm.donothing
llvm.eh.dwarf.cfa
llvm.eh.exceptioncode
llvm.eh.exceptionpointer
llvm.eh.return.i32
llvm.eh.return.i64
llvm.eh.sjlj.callsite
llvm.eh.sjlj.functioncontext
llvm.eh.sjlj.longjmp
llvm.eh.sjlj.lsda
llvm.eh.sjlj.setjmp
llvm.eh.sjlj.setup.dispatch
llvm.eh.typeid.for
llvm.eh.unwind.init
llvm.exp
llvm.exp2
llvm.expect
llvm.experimental.constrained.cos
llvm.experimental.constrained.exp
llvm.experimental.constrained.exp2
llvm.experimental.constrained.fadd
llvm.experimental.constrained.fdiv
llvm.experimental.constrained.fma
llvm.experimental.constrained.fmul
llvm.experimental.constrained.frem
llvm.experimental.constrained.fsub
llvm.experimental.constrained.log
llvm.experimental.constrained.log10
llvm.experimental.constrained.log2
llvm.experimental.constrained.nearbyint
llvm.experimental.constrained.pow
llvm.experimental.constrained.powi
llvm.experimental.constrained.rint
llvm.experimental.constrained.sin
llvm.experimental.constrained.sqrt
llvm.experimental.deoptimize
llvm.experimental.gc.relocate
llvm.experimental.gc.result
llvm.experimental.gc.statepoint
llvm.experimental.guard
llvm.experimental.patchpoint.i64
llvm.experimental.patchpoint.void
llvm.experimental.stackmap
llvm.experimental.vector.reduce.add
llvm.experimental.vector.reduce.and
llvm.experimental.vector.reduce.fadd
llvm.experimental.vector.reduce.fmax
llvm.experimental.vector.reduce.fmin
llvm.experimental.vector.reduce.fmul
llvm.experimental.vector.reduce.mul
llvm.experimental.vector.reduce.or
llvm.experimental.vector.reduce.smax
llvm.experimental.vector.reduce.smin
llvm.experimental.vector.reduce.umax
llvm.experimental.vector.reduce.umin
llvm.experimental.vector.reduce.xor
llvm.fabs
llvm.floor
llvm.flt.rounds
llvm.fma
llvm.fmuladd
llvm.frameaddress
llvm.fshl
llvm.fshr
llvm.gcread
llvm.gcroot
llvm.gcwrite
llvm.get.dynamic.area.offset
llvm.icall.branch.funnel
llvm.init.trampoline
llvm.instrprof.increment
llvm.instrprof.increment.step
llvm.instrprof.value.profile
llvm.invariant.end
llvm.invariant.start
llvm.launder.invariant.group
llvm.lifetime.end
llvm.lifetime.start
llvm.load.relative
llvm.localaddress
llvm.localescape
llvm.localrecover
llvm.log
llvm.log10
llvm.log2
llvm.longjmp
llvm.masked.compressstore
llvm.masked.expandload
llvm.masked.gather
llvm.masked.load
llvm.masked.scatter
llvm.masked.store
llvm.matrix.add
llvm.matrix.columnwise.load
llvm.matrix.columnwise.store
llvm.matrix.extract
llvm.matrix.insert
llvm.matrix.multiply
llvm.matrix.scalar.multiply
llvm.matrix.subtract
llvm.matrix.transpose
llvm.maxnum
llvm.memcpy
llvm.memcpy.element.unordered.atomic
llvm.memmove
llvm.memmove.element.unordered.atomic
llvm.memset
llvm.memset.element.unordered.atomic
llvm.minnum
llvm.nearbyint
llvm.objectsize
llvm.pcmarker
llvm.pow
llvm.powi
llvm.prefetch
llvm.ptr.annotation
llvm.ptrauth.auth
llvm.ptrauth.blend
llvm.ptrauth.resign
llvm.ptrauth.sign
llvm.ptrauth.sign.generic
llvm.ptrauth.strip
llvm.rcp
llvm.read_register
llvm.readcyclecounter
llvm.returnaddress
llvm.rint
llvm.round
llvm.rsqrt
llvm.sadd.with.overflow
llvm.setjmp
llvm.sideeffect
llvm.siglongjmp
llvm.sigsetjmp
llvm.sin
llvm.smul.with.overflow
llvm.sqrt
llvm.ssa.copy
llvm.ssub.with.overflow
llvm.stackguard
llvm.stackprotector
llvm.stackrestore
llvm.stacksave
llvm.strip.invariant.group
llvm.thread.pointer
llvm.trap
llvm.trunc
llvm.type.checked.load
llvm.type.test
llvm.uadd.with.overflow
llvm.umul.with.overflow
llvm.usub.with.overflow
llvm.va_copy
llvm.va_end
llvm.va_start
llvm.var.annotation
llvm.write_register
llvm.xray.customevent
llvm.xray.typedevent
llvm.agx.bindless.tex.state.ptr
llvm.agx.check.bound
llvm.agx.check.bound.idx
llvm.agx.color.coverage.mask
llvm.agx.deferred.attribute.pass
llvm.agx.iraydd
llvm.agx.iraydi
llvm.agx.irayid
llvm.agx.irayii
llvm.agx.is.uniform
llvm.agx.load.got
llvm.agx.number.of.samples
llvm.agx.powr.f16
llvm.agx.powr.f32
llvm.agx.read.sample.number
llvm.agx.samplerState
llvm.agx.smp.1d.4xf
llvm.agx.smp.1d.4xh
llvm.agx.smp.1d.4xi16
llvm.agx.smp.1d.4xi32
llvm.agx.smp.1d.array.4xf
llvm.agx.smp.1d.array.4xh
llvm.agx.smp.1d.array.4xi16
llvm.agx.smp.1d.array.4xi32
llvm.agx.smp.1d.array.ci16.4xf
llvm.agx.smp.1d.array.ci16.4xh
llvm.agx.smp.1d.array.ci16.4xi16
llvm.agx.smp.1d.array.ci16.4xi32
llvm.agx.smp.1d.array.ci16.lod.4xf
llvm.agx.smp.1d.array.ci16.lod.4xh
llvm.agx.smp.1d.array.ci16.lod.4xi16
llvm.agx.smp.1d.array.ci16.lod.4xi32
llvm.agx.smp.1d.array.i.4xf
llvm.agx.smp.1d.array.i.4xh
llvm.agx.smp.1d.array.i.4xi16
llvm.agx.smp.1d.array.i.4xi32
llvm.agx.smp.1d.array.i.lod.4xf
llvm.agx.smp.1d.array.i.lod.4xh
llvm.agx.smp.1d.array.i.lod.4xi16
llvm.agx.smp.1d.array.i.lod.4xi32
llvm.agx.smp.1d.ci16.4xf
llvm.agx.smp.1d.ci16.4xh
llvm.agx.smp.1d.ci16.4xi16
llvm.agx.smp.1d.ci16.4xi32
llvm.agx.smp.1d.ci16.lod.4xf
llvm.agx.smp.1d.ci16.lod.4xh
llvm.agx.smp.1d.ci16.lod.4xi16
llvm.agx.smp.1d.ci16.lod.4xi32
llvm.agx.smp.1d.i.4xf
llvm.agx.smp.1d.i.4xh
llvm.agx.smp.1d.i.4xi16
llvm.agx.smp.1d.i.4xi32
llvm.agx.smp.1d.i.lod.4xf
llvm.agx.smp.1d.i.lod.4xh
llvm.agx.smp.1d.i.lod.4xi16
llvm.agx.smp.1d.i.lod.4xi32
llvm.agx.smp.2d.4xf
llvm.agx.smp.2d.4xh
llvm.agx.smp.2d.4xi16
llvm.agx.smp.2d.4xi32
llvm.agx.smp.2d.array.4xf
llvm.agx.smp.2d.array.4xh
llvm.agx.smp.2d.array.4xi16
llvm.agx.smp.2d.array.4xi32
llvm.agx.smp.2d.array.ci16.lod.4xf
llvm.agx.smp.2d.array.ci16.lod.4xh
llvm.agx.smp.2d.array.ci16.lod.4xi16
llvm.agx.smp.2d.array.ci16.lod.4xi32
llvm.agx.smp.2d.array.ci16.lod.offset.4xf
llvm.agx.smp.2d.array.ci16.lod.offset.4xh
llvm.agx.smp.2d.array.ci16.lod.offset.4xi16
llvm.agx.smp.2d.array.ci16.lod.offset.4xi32
llvm.agx.smp.2d.array.gather.4xf
llvm.agx.smp.2d.array.gather.4xh
llvm.agx.smp.2d.array.gather.4xi16
llvm.agx.smp.2d.array.gather.4xi32
llvm.agx.smp.2d.array.gather.offset.4xf
llvm.agx.smp.2d.array.gather.offset.4xh
llvm.agx.smp.2d.array.gather.offset.4xi16
llvm.agx.smp.2d.array.gather.offset.4xi32
llvm.agx.smp.2d.array.grad.4xf
llvm.agx.smp.2d.array.grad.4xh
llvm.agx.smp.2d.array.grad.4xi16
llvm.agx.smp.2d.array.grad.4xi32
llvm.agx.smp.2d.array.grad.offset.4xf
llvm.agx.smp.2d.array.grad.offset.4xh
llvm.agx.smp.2d.array.grad.offset.4xi16
llvm.agx.smp.2d.array.grad.offset.4xi32
llvm.agx.smp.2d.array.i.lod.4xf
llvm.agx.smp.2d.array.i.lod.4xh
llvm.agx.smp.2d.array.i.lod.4xi16
llvm.agx.smp.2d.array.i.lod.4xi32
llvm.agx.smp.2d.array.i.lod.offset.4xf
llvm.agx.smp.2d.array.i.lod.offset.4xh
llvm.agx.smp.2d.array.i.lod.offset.4xi16
llvm.agx.smp.2d.array.i.lod.offset.4xi32
llvm.agx.smp.2d.array.lod.4xf
llvm.agx.smp.2d.array.lod.4xh
llvm.agx.smp.2d.array.lod.4xi16
llvm.agx.smp.2d.array.lod.4xi32
llvm.agx.smp.2d.array.lod.offset.4xf
llvm.agx.smp.2d.array.lod.offset.4xh
llvm.agx.smp.2d.array.lod.offset.4xi16
llvm.agx.smp.2d.array.lod.offset.4xi32
llvm.agx.smp.2d.array.offset.4xf
llvm.agx.smp.2d.array.offset.4xh
llvm.agx.smp.2d.array.offset.4xi16
llvm.agx.smp.2d.array.offset.4xi32
llvm.agx.smp.2d.array.shadow.4xf
llvm.agx.smp.2d.array.shadow.4xh
llvm.agx.smp.2d.array.shadow.gather.4xf
llvm.agx.smp.2d.array.shadow.gather.4xh
llvm.agx.smp.2d.array.shadow.gather.offset.4xf
llvm.agx.smp.2d.array.shadow.gather.offset.4xh
llvm.agx.smp.2d.array.shadow.grad.4xf
llvm.agx.smp.2d.array.shadow.grad.4xh
llvm.agx.smp.2d.array.shadow.grad.offset.4xf
llvm.agx.smp.2d.array.shadow.grad.offset.4xh
llvm.agx.smp.2d.array.shadow.lod.4xf
llvm.agx.smp.2d.array.shadow.lod.4xh
llvm.agx.smp.2d.array.shadow.lod.offset.4xf
llvm.agx.smp.2d.array.shadow.lod.offset.4xh
llvm.agx.smp.2d.array.shadow.offset.4xf
llvm.agx.smp.2d.array.shadow.offset.4xh
llvm.agx.smp.2d.ci16.lod.4xf
llvm.agx.smp.2d.ci16.lod.4xh
llvm.agx.smp.2d.ci16.lod.4xi16
llvm.agx.smp.2d.ci16.lod.4xi32
llvm.agx.smp.2d.ci16.lod.offset.4xf
llvm.agx.smp.2d.ci16.lod.offset.4xh
llvm.agx.smp.2d.ci16.lod.offset.4xi16
llvm.agx.smp.2d.ci16.lod.offset.4xi32
llvm.agx.smp.2d.gather.4xf
llvm.agx.smp.2d.gather.4xh
llvm.agx.smp.2d.gather.4xi16
llvm.agx.smp.2d.gather.4xi32
llvm.agx.smp.2d.gather.offset.4xf
llvm.agx.smp.2d.gather.offset.4xh
llvm.agx.smp.2d.gather.offset.4xi16
llvm.agx.smp.2d.gather.offset.4xi32
llvm.agx.smp.2d.grad.4xf
llvm.agx.smp.2d.grad.4xh
llvm.agx.smp.2d.grad.4xi16
llvm.agx.smp.2d.grad.4xi32
llvm.agx.smp.2d.grad.offset.4xf
llvm.agx.smp.2d.grad.offset.4xh
llvm.agx.smp.2d.grad.offset.4xi16
llvm.agx.smp.2d.grad.offset.4xi32
llvm.agx.smp.2d.i.lod.4xf
llvm.agx.smp.2d.i.lod.4xh
llvm.agx.smp.2d.i.lod.4xi16
llvm.agx.smp.2d.i.lod.4xi32
llvm.agx.smp.2d.i.lod.offset.4xf
llvm.agx.smp.2d.i.lod.offset.4xh
llvm.agx.smp.2d.i.lod.offset.4xi16
llvm.agx.smp.2d.i.lod.offset.4xi32
llvm.agx.smp.2d.lod.4xf
llvm.agx.smp.2d.lod.4xh
llvm.agx.smp.2d.lod.4xi16
llvm.agx.smp.2d.lod.4xi32
llvm.agx.smp.2d.lod.offset.4xf
llvm.agx.smp.2d.lod.offset.4xh
llvm.agx.smp.2d.lod.offset.4xi16
llvm.agx.smp.2d.lod.offset.4xi32
llvm.agx.smp.2d.msaa.4xf
llvm.agx.smp.2d.msaa.4xh
llvm.agx.smp.2d.msaa.4xi16
llvm.agx.smp.2d.msaa.4xi32
llvm.agx.smp.2d.msaa.array.4xf
llvm.agx.smp.2d.msaa.array.4xh
llvm.agx.smp.2d.msaa.array.4xi16
llvm.agx.smp.2d.msaa.array.4xi32
llvm.agx.smp.2d.msaa.array.ci16.4xf
llvm.agx.smp.2d.msaa.array.ci16.4xh
llvm.agx.smp.2d.msaa.array.ci16.4xi16
llvm.agx.smp.2d.msaa.array.ci16.4xi32
llvm.agx.smp.2d.msaa.array.ci16.lod.4xf
llvm.agx.smp.2d.msaa.array.ci16.lod.4xh
llvm.agx.smp.2d.msaa.array.ci16.lod.4xi16
llvm.agx.smp.2d.msaa.array.ci16.lod.4xi32
llvm.agx.smp.2d.msaa.array.i.4xf
llvm.agx.smp.2d.msaa.array.i.4xh
llvm.agx.smp.2d.msaa.array.i.4xi16
llvm.agx.smp.2d.msaa.array.i.4xi32
llvm.agx.smp.2d.msaa.array.i.lod.4xf
llvm.agx.smp.2d.msaa.array.i.lod.4xh
llvm.agx.smp.2d.msaa.array.i.lod.4xi16
llvm.agx.smp.2d.msaa.array.i.lod.4xi32
llvm.agx.smp.2d.msaa.ci16.4xf
llvm.agx.smp.2d.msaa.ci16.4xh
llvm.agx.smp.2d.msaa.ci16.4xi16
llvm.agx.smp.2d.msaa.ci16.4xi32
llvm.agx.smp.2d.msaa.ci16.lod.4xf
llvm.agx.smp.2d.msaa.ci16.lod.4xh
llvm.agx.smp.2d.msaa.ci16.lod.4xi16
llvm.agx.smp.2d.msaa.ci16.lod.4xi32
llvm.agx.smp.2d.msaa.i.4xf
llvm.agx.smp.2d.msaa.i.4xh
llvm.agx.smp.2d.msaa.i.4xi16
llvm.agx.smp.2d.msaa.i.4xi32
llvm.agx.smp.2d.msaa.i.lod.4xf
llvm.agx.smp.2d.msaa.i.lod.4xh
llvm.agx.smp.2d.msaa.i.lod.4xi16
llvm.agx.smp.2d.msaa.i.lod.4xi32
llvm.agx.smp.2d.offset.4xf
llvm.agx.smp.2d.offset.4xh
llvm.agx.smp.2d.offset.4xi16
llvm.agx.smp.2d.offset.4xi32
llvm.agx.smp.2d.shadow.4xf
llvm.agx.smp.2d.shadow.4xh
llvm.agx.smp.2d.shadow.gather.4xf
llvm.agx.smp.2d.shadow.gather.4xh
llvm.agx.smp.2d.shadow.gather.offset.4xf
llvm.agx.smp.2d.shadow.gather.offset.4xh
llvm.agx.smp.2d.shadow.grad.4xf
llvm.agx.smp.2d.shadow.grad.4xh
llvm.agx.smp.2d.shadow.grad.offset.4xf
llvm.agx.smp.2d.shadow.grad.offset.4xh
llvm.agx.smp.2d.shadow.lod.4xf
llvm.agx.smp.2d.shadow.lod.4xh
llvm.agx.smp.2d.shadow.lod.offset.4xf
llvm.agx.smp.2d.shadow.lod.offset.4xh
llvm.agx.smp.2d.shadow.offset.4xf
llvm.agx.smp.2d.shadow.offset.4xh
llvm.agx.smp.3d.4xf
llvm.agx.smp.3d.4xh
llvm.agx.smp.3d.4xi16
llvm.agx.smp.3d.4xi32
llvm.agx.smp.3d.ci16.lod.4xf
llvm.agx.smp.3d.ci16.lod.4xh
llvm.agx.smp.3d.ci16.lod.4xi16
llvm.agx.smp.3d.ci16.lod.4xi32
llvm.agx.smp.3d.ci16.lod.offset.4xf
llvm.agx.smp.3d.ci16.lod.offset.4xh
llvm.agx.smp.3d.ci16.lod.offset.4xi16
llvm.agx.smp.3d.ci16.lod.offset.4xi32
llvm.agx.smp.3d.grad.4xf
llvm.agx.smp.3d.grad.4xh
llvm.agx.smp.3d.grad.4xi16
llvm.agx.smp.3d.grad.4xi32
llvm.agx.smp.3d.grad.offset.4xf
llvm.agx.smp.3d.grad.offset.4xh
llvm.agx.smp.3d.grad.offset.4xi16
llvm.agx.smp.3d.grad.offset.4xi32
llvm.agx.smp.3d.i.lod.4xf
llvm.agx.smp.3d.i.lod.4xh
llvm.agx.smp.3d.i.lod.4xi16
llvm.agx.smp.3d.i.lod.4xi32
llvm.agx.smp.3d.i.lod.offset.4xf
llvm.agx.smp.3d.i.lod.offset.4xh
llvm.agx.smp.3d.i.lod.offset.4xi16
llvm.agx.smp.3d.i.lod.offset.4xi32
llvm.agx.smp.3d.lod.4xf
llvm.agx.smp.3d.lod.4xh
llvm.agx.smp.3d.lod.4xi16
llvm.agx.smp.3d.lod.4xi32
llvm.agx.smp.3d.lod.offset.4xf
llvm.agx.smp.3d.lod.offset.4xh
llvm.agx.smp.3d.lod.offset.4xi16
llvm.agx.smp.3d.lod.offset.4xi32
llvm.agx.smp.3d.offset.4xf
llvm.agx.smp.3d.offset.4xh
llvm.agx.smp.3d.offset.4xi16
llvm.agx.smp.3d.offset.4xi32
llvm.agx.smp.cube.4xf
llvm.agx.smp.cube.4xh
llvm.agx.smp.cube.array.4xf
llvm.agx.smp.cube.array.4xh
llvm.agx.smp.cube.array.gather.4xf
llvm.agx.smp.cube.array.gather.4xh
llvm.agx.smp.cube.array.grad.4xf
llvm.agx.smp.cube.array.grad.4xh
llvm.agx.smp.cube.array.lod.4xf
llvm.agx.smp.cube.array.lod.4xh
llvm.agx.smp.cube.gather.4xf
llvm.agx.smp.cube.gather.4xh
llvm.agx.smp.cube.grad.4xf
llvm.agx.smp.cube.grad.4xh
llvm.agx.smp.cube.lod.4xf
llvm.agx.smp.cube.lod.4xh
llvm.agx.smp.cube.shadow.4xf
llvm.agx.smp.cube.shadow.4xh
llvm.agx.smp.cube.shadow.gather.4xf
llvm.agx.smp.cube.shadow.gather.4xh
llvm.agx.smp.cube.shadow.grad.4xf
llvm.agx.smp.cube.shadow.grad.4xh
llvm.agx.smp.cube.shadow.lod.4xf
llvm.agx.smp.cube.shadow.lod.4xh
llvm.agx.smp.cubedir.4xf
llvm.agx.smp.cubedir.4xh
llvm.agx.smp.cubedir.4xi16
llvm.agx.smp.cubedir.4xi32
llvm.agx.smp.cubedir.array.4xf
llvm.agx.smp.cubedir.array.4xh
llvm.agx.smp.cubedir.array.4xi16
llvm.agx.smp.cubedir.array.4xi32
llvm.agx.smp.cubedir.array.gather.4xf
llvm.agx.smp.cubedir.array.gather.4xh
llvm.agx.smp.cubedir.array.gather.4xi16
llvm.agx.smp.cubedir.array.gather.4xi32
llvm.agx.smp.cubedir.array.grad.4xf
llvm.agx.smp.cubedir.array.grad.4xh
llvm.agx.smp.cubedir.array.grad.4xi16
llvm.agx.smp.cubedir.array.grad.4xi32
llvm.agx.smp.cubedir.array.lod.4xf
llvm.agx.smp.cubedir.array.lod.4xh
llvm.agx.smp.cubedir.array.lod.4xi16
llvm.agx.smp.cubedir.array.lod.4xi32
llvm.agx.smp.cubedir.array.shadow.4xf
llvm.agx.smp.cubedir.array.shadow.4xh
llvm.agx.smp.cubedir.array.shadow.gather.4xf
llvm.agx.smp.cubedir.array.shadow.gather.4xh
llvm.agx.smp.cubedir.array.shadow.grad.4xf
llvm.agx.smp.cubedir.array.shadow.grad.4xh
llvm.agx.smp.cubedir.array.shadow.lod.4xf
llvm.agx.smp.cubedir.array.shadow.lod.4xh
llvm.agx.smp.cubedir.gather.4xf
llvm.agx.smp.cubedir.gather.4xh
llvm.agx.smp.cubedir.gather.4xi16
llvm.agx.smp.cubedir.gather.4xi32
llvm.agx.smp.cubedir.grad.4xf
llvm.agx.smp.cubedir.grad.4xh
llvm.agx.smp.cubedir.grad.4xi16
llvm.agx.smp.cubedir.grad.4xi32
llvm.agx.smp.cubedir.lod.4xf
llvm.agx.smp.cubedir.lod.4xh
llvm.agx.smp.cubedir.lod.4xi16
llvm.agx.smp.cubedir.lod.4xi32
llvm.agx.smp.cubedir.shadow.4xf
llvm.agx.smp.cubedir.shadow.4xh
llvm.agx.smp.cubedir.shadow.gather.4xf
llvm.agx.smp.cubedir.shadow.gather.4xh
llvm.agx.smp.cubedir.shadow.grad.4xf
llvm.agx.smp.cubedir.shadow.grad.4xh
llvm.agx.smp.cubedir.shadow.lod.4xf
llvm.agx.smp.cubedir.shadow.lod.4xh
llvm.agx.smp.cubestf.4xf
llvm.agx.smp.cubestf.4xh
llvm.agx.smp.cubestf.4xi16
llvm.agx.smp.cubestf.4xi32
llvm.agx.smp.cubestf.array.4xf
llvm.agx.smp.cubestf.array.4xh
llvm.agx.smp.cubestf.array.4xi16
llvm.agx.smp.cubestf.array.4xi32
llvm.agx.smp.cubestf.array.ci16.4xf
llvm.agx.smp.cubestf.array.ci16.4xh
llvm.agx.smp.cubestf.array.ci16.4xi16
llvm.agx.smp.cubestf.array.ci16.4xi32
llvm.agx.smp.cubestf.array.ci16.lod.4xf
llvm.agx.smp.cubestf.array.ci16.lod.4xh
llvm.agx.smp.cubestf.array.ci16.lod.4xi16
llvm.agx.smp.cubestf.array.ci16.lod.4xi32
llvm.agx.smp.cubestf.array.gather.4xf
llvm.agx.smp.cubestf.array.gather.4xh
llvm.agx.smp.cubestf.array.gather.4xi16
llvm.agx.smp.cubestf.array.gather.4xi32
llvm.agx.smp.cubestf.array.grad.4xf
llvm.agx.smp.cubestf.array.grad.4xh
llvm.agx.smp.cubestf.array.grad.4xi16
llvm.agx.smp.cubestf.array.grad.4xi32
llvm.agx.smp.cubestf.array.i.4xf
llvm.agx.smp.cubestf.array.i.4xh
llvm.agx.smp.cubestf.array.i.4xi16
llvm.agx.smp.cubestf.array.i.4xi32
llvm.agx.smp.cubestf.array.i.lod.4xf
llvm.agx.smp.cubestf.array.i.lod.4xh
llvm.agx.smp.cubestf.array.i.lod.4xi16
llvm.agx.smp.cubestf.array.i.lod.4xi32
llvm.agx.smp.cubestf.array.lod.4xf
llvm.agx.smp.cubestf.array.lod.4xh
llvm.agx.smp.cubestf.array.lod.4xi16
llvm.agx.smp.cubestf.array.lod.4xi32
llvm.agx.smp.cubestf.array.shadow.4xf
llvm.agx.smp.cubestf.array.shadow.4xh
llvm.agx.smp.cubestf.array.shadow.gather.4xf
llvm.agx.smp.cubestf.array.shadow.gather.4xh
llvm.agx.smp.cubestf.array.shadow.grad.4xf
llvm.agx.smp.cubestf.array.shadow.grad.4xh
llvm.agx.smp.cubestf.array.shadow.lod.4xf
llvm.agx.smp.cubestf.array.shadow.lod.4xh
llvm.agx.smp.cubestf.ci16.4xf
llvm.agx.smp.cubestf.ci16.4xh
llvm.agx.smp.cubestf.ci16.4xi16
llvm.agx.smp.cubestf.ci16.4xi32
llvm.agx.smp.cubestf.ci16.lod.4xf
llvm.agx.smp.cubestf.ci16.lod.4xh
llvm.agx.smp.cubestf.ci16.lod.4xi16
llvm.agx.smp.cubestf.ci16.lod.4xi32
llvm.agx.smp.cubestf.gather.4xf
llvm.agx.smp.cubestf.gather.4xh
llvm.agx.smp.cubestf.gather.4xi16
llvm.agx.smp.cubestf.gather.4xi32
llvm.agx.smp.cubestf.grad.4xf
llvm.agx.smp.cubestf.grad.4xh
llvm.agx.smp.cubestf.grad.4xi16
llvm.agx.smp.cubestf.grad.4xi32
llvm.agx.smp.cubestf.i.4xf
llvm.agx.smp.cubestf.i.4xh
llvm.agx.smp.cubestf.i.4xi16
llvm.agx.smp.cubestf.i.4xi32
llvm.agx.smp.cubestf.i.lod.4xf
llvm.agx.smp.cubestf.i.lod.4xh
llvm.agx.smp.cubestf.i.lod.4xi16
llvm.agx.smp.cubestf.i.lod.4xi32
llvm.agx.smp.cubestf.lod.4xf
llvm.agx.smp.cubestf.lod.4xh
llvm.agx.smp.cubestf.lod.4xi16
llvm.agx.smp.cubestf.lod.4xi32
llvm.agx.smp.cubestf.shadow.4xf
llvm.agx.smp.cubestf.shadow.4xh
llvm.agx.smp.cubestf.shadow.gather.4xf
llvm.agx.smp.cubestf.shadow.gather.4xh
llvm.agx.smp.cubestf.shadow.grad.4xf
llvm.agx.smp.cubestf.shadow.grad.4xh
llvm.agx.smp.cubestf.shadow.lod.4xf
llvm.agx.smp.cubestf.shadow.lod.4xh
llvm.agx.smpw.1d.array.ci16.4xf
llvm.agx.smpw.1d.array.ci16.4xf.rtz
llvm.agx.smpw.1d.array.ci16.4xh
llvm.agx.smpw.1d.array.ci16.4xh.rtz
llvm.agx.smpw.1d.array.ci16.lod.4xf
llvm.agx.smpw.1d.array.ci16.lod.4xf.rtz
llvm.agx.smpw.1d.array.ci16.lod.4xh
llvm.agx.smpw.1d.array.ci16.lod.4xh.rtz
llvm.agx.smpw.1d.array.ci16.lod.4xi16
llvm.agx.smpw.1d.array.ci16.lod.4xi32
llvm.agx.smpw.1d.array.i.4xf
llvm.agx.smpw.1d.array.i.4xf.rtz
llvm.agx.smpw.1d.array.i.4xh
llvm.agx.smpw.1d.array.i.4xh.rtz
llvm.agx.smpw.1d.array.i.lod.4xf
llvm.agx.smpw.1d.array.i.lod.4xf.rtz
llvm.agx.smpw.1d.array.i.lod.4xh
llvm.agx.smpw.1d.array.i.lod.4xh.rtz
llvm.agx.smpw.1d.array.i.lod.4xi16
llvm.agx.smpw.1d.array.i.lod.4xi32
llvm.agx.smpw.1d.ci16.4xf
llvm.agx.smpw.1d.ci16.4xf.rtz
llvm.agx.smpw.1d.ci16.4xh
llvm.agx.smpw.1d.ci16.4xh.rtz
llvm.agx.smpw.1d.ci16.lod.4xf
llvm.agx.smpw.1d.ci16.lod.4xf.rtz
llvm.agx.smpw.1d.ci16.lod.4xh
llvm.agx.smpw.1d.ci16.lod.4xh.rtz
llvm.agx.smpw.1d.ci16.lod.4xi16
llvm.agx.smpw.1d.ci16.lod.4xi32
llvm.agx.smpw.1d.i.4xf
llvm.agx.smpw.1d.i.4xf.rtz
llvm.agx.smpw.1d.i.4xh
llvm.agx.smpw.1d.i.4xh.rtz
llvm.agx.smpw.1d.i.lod.4xf
llvm.agx.smpw.1d.i.lod.4xf.rtz
llvm.agx.smpw.1d.i.lod.4xh
llvm.agx.smpw.1d.i.lod.4xh.rtz
llvm.agx.smpw.1d.i.lod.4xi16
llvm.agx.smpw.1d.i.lod.4xi32
llvm.agx.smpw.2d.array.ci16.4xf
llvm.agx.smpw.2d.array.ci16.4xf.rtz
llvm.agx.smpw.2d.array.ci16.4xh
llvm.agx.smpw.2d.array.ci16.4xh.rtz
llvm.agx.smpw.2d.array.ci16.lod.4xf
llvm.agx.smpw.2d.array.ci16.lod.4xf.rtz
llvm.agx.smpw.2d.array.ci16.lod.4xh
llvm.agx.smpw.2d.array.ci16.lod.4xh.rtz
llvm.agx.smpw.2d.array.ci16.lod.4xi16
llvm.agx.smpw.2d.array.ci16.lod.4xi32
llvm.agx.smpw.2d.array.i.4xf
llvm.agx.smpw.2d.array.i.4xf.rtz
llvm.agx.smpw.2d.array.i.4xh
llvm.agx.smpw.2d.array.i.4xh.rtz
llvm.agx.smpw.2d.array.i.lod.4xf
llvm.agx.smpw.2d.array.i.lod.4xf.rtz
llvm.agx.smpw.2d.array.i.lod.4xh
llvm.agx.smpw.2d.array.i.lod.4xh.rtz
llvm.agx.smpw.2d.array.i.lod.4xi16
llvm.agx.smpw.2d.array.i.lod.4xi32
llvm.agx.smpw.2d.ci16.4xf
llvm.agx.smpw.2d.ci16.4xf.rtz
llvm.agx.smpw.2d.ci16.4xh
llvm.agx.smpw.2d.ci16.4xh.rtz
llvm.agx.smpw.2d.ci16.lod.4xf
llvm.agx.smpw.2d.ci16.lod.4xf.rtz
llvm.agx.smpw.2d.ci16.lod.4xh
llvm.agx.smpw.2d.ci16.lod.4xh.rtz
llvm.agx.smpw.2d.ci16.lod.4xi16
llvm.agx.smpw.2d.ci16.lod.4xi32
llvm.agx.smpw.2d.i.4xf
llvm.agx.smpw.2d.i.4xf.rtz
llvm.agx.smpw.2d.i.4xh
llvm.agx.smpw.2d.i.4xh.rtz
llvm.agx.smpw.2d.i.lod.4xf
llvm.agx.smpw.2d.i.lod.4xf.rtz
llvm.agx.smpw.2d.i.lod.4xh
llvm.agx.smpw.2d.i.lod.4xh.rtz
llvm.agx.smpw.2d.i.lod.4xi16
llvm.agx.smpw.2d.i.lod.4xi32
llvm.agx.smpw.3d.ci16.4xf
llvm.agx.smpw.3d.ci16.4xf.rtz
llvm.agx.smpw.3d.ci16.4xh
llvm.agx.smpw.3d.ci16.4xh.rtz
llvm.agx.smpw.3d.ci16.lod.4xf
llvm.agx.smpw.3d.ci16.lod.4xf.rtz
llvm.agx.smpw.3d.ci16.lod.4xh
llvm.agx.smpw.3d.ci16.lod.4xh.rtz
llvm.agx.smpw.3d.ci16.lod.4xi16
llvm.agx.smpw.3d.ci16.lod.4xi32
llvm.agx.smpw.3d.i.4xf
llvm.agx.smpw.3d.i.4xf.rtz
llvm.agx.smpw.3d.i.4xh
llvm.agx.smpw.3d.i.4xh.rtz
llvm.agx.smpw.3d.i.lod.4xf
llvm.agx.smpw.3d.i.lod.4xf.rtz
llvm.agx.smpw.3d.i.lod.4xh
llvm.agx.smpw.3d.i.lod.4xh.rtz
llvm.agx.smpw.3d.i.lod.4xi16
llvm.agx.smpw.3d.i.lod.4xi32
llvm.agx.smpw.cubestf.array.ci16.4xf
llvm.agx.smpw.cubestf.array.ci16.4xf.rtz
llvm.agx.smpw.cubestf.array.ci16.4xh
llvm.agx.smpw.cubestf.array.ci16.4xh.rtz
llvm.agx.smpw.cubestf.array.ci16.lod.4xf
llvm.agx.smpw.cubestf.array.ci16.lod.4xf.rtz
llvm.agx.smpw.cubestf.array.ci16.lod.4xh
llvm.agx.smpw.cubestf.array.ci16.lod.4xh.rtz
llvm.agx.smpw.cubestf.array.ci16.lod.4xi16
llvm.agx.smpw.cubestf.array.ci16.lod.4xi32
llvm.agx.smpw.cubestf.array.i.4xf
llvm.agx.smpw.cubestf.array.i.4xf.rtz
llvm.agx.smpw.cubestf.array.i.4xh
llvm.agx.smpw.cubestf.array.i.4xh.rtz
llvm.agx.smpw.cubestf.array.i.lod.4xf
llvm.agx.smpw.cubestf.array.i.lod.4xf.rtz
llvm.agx.smpw.cubestf.array.i.lod.4xh
llvm.agx.smpw.cubestf.array.i.lod.4xh.rtz
llvm.agx.smpw.cubestf.array.i.lod.4xi16
llvm.agx.smpw.cubestf.array.i.lod.4xi32
llvm.agx.smpw.cubestf.ci16.4xf
llvm.agx.smpw.cubestf.ci16.4xf.rtz
llvm.agx.smpw.cubestf.ci16.4xh
llvm.agx.smpw.cubestf.ci16.4xh.rtz
llvm.agx.smpw.cubestf.ci16.lod.4xf
llvm.agx.smpw.cubestf.ci16.lod.4xf.rtz
llvm.agx.smpw.cubestf.ci16.lod.4xh
llvm.agx.smpw.cubestf.ci16.lod.4xh.rtz
llvm.agx.smpw.cubestf.ci16.lod.4xi16
llvm.agx.smpw.cubestf.ci16.lod.4xi32
llvm.agx.smpw.cubestf.i.4xf
llvm.agx.smpw.cubestf.i.4xf.rtz
llvm.agx.smpw.cubestf.i.4xh
llvm.agx.smpw.cubestf.i.4xh.rtz
llvm.agx.smpw.cubestf.i.lod.4xf
llvm.agx.smpw.cubestf.i.lod.4xf.rtz
llvm.agx.smpw.cubestf.i.lod.4xh
llvm.agx.smpw.cubestf.i.lod.4xh.rtz
llvm.agx.smpw.cubestf.i.lod.4xi16
llvm.agx.smpw.cubestf.i.lod.4xi32
llvm.agx.textureState
llvm.agx.tls.alloc
llvm.agx1.atanc
llvm.agx1.cl.barrier
llvm.agx1.cl.global.barrier
llvm.agx1.clamp
llvm.agx1.cmsk
llvm.agx1.cppix
llvm.agx1.cppix.agx1r1
llvm.agx1.dcf
llvm.agx1.dcfi
llvm.agx1.emitpix
llvm.agx1.emitpix.agx1r1
llvm.agx1.exit.if.zero
llvm.agx1.fitr.1xf
llvm.agx1.fitr.2xf
llvm.agx1.fitr.3xf
llvm.agx1.fitr.4xf
llvm.agx1.fitrp.1xf
llvm.agx1.fitrp.2xf
llvm.agx1.fitrp.3xf
llvm.agx1.fitrp.4xf
llvm.agx1.flushNaN
llvm.agx1.flushimg
llvm.agx1.flushpbe
llvm.agx1.ft1
llvm.agx1.fusedClampFlushNaN
llvm.agx1.gcmp
llvm.agx1.gcmp.g5
llvm.agx1.gcmp.xr.g5
llvm.agx1.gexp
llvm.agx1.gexp.g5
llvm.agx1.gexp.xr.g5
llvm.agx1.idf
llvm.agx1.imadh.g4
llvm.agx1.imgwblk.2d.16
llvm.agx1.imgwblk.2d.32
llvm.agx1.imgwblk.2d.array.16
llvm.agx1.imgwblk.2d.array.32
llvm.agx1.imgwblk.2d.array.lod.16
llvm.agx1.imgwblk.2d.array.lod.32
llvm.agx1.imgwblk.2d.lod.16
llvm.agx1.imgwblk.2d.lod.32
llvm.agx1.imgwblk.3d.16
llvm.agx1.imgwblk.3d.32
llvm.agx1.imgwblk.3d.lod.16
llvm.agx1.imgwblk.3d.lod.32
llvm.agx1.imgwblk.barrier.2d.16
llvm.agx1.imgwblk.barrier.2d.32
llvm.agx1.imgwblk.barrier.2d.array.16
llvm.agx1.imgwblk.barrier.2d.array.32
llvm.agx1.imgwblk.barrier.2d.array.lod.16
llvm.agx1.imgwblk.barrier.2d.array.lod.32
llvm.agx1.imgwblk.barrier.2d.lod.16
llvm.agx1.imgwblk.barrier.2d.lod.32
llvm.agx1.imgwblk.barrier.3d.16
llvm.agx1.imgwblk.barrier.3d.32
llvm.agx1.imgwblk.barrier.3d.lod.16
llvm.agx1.imgwblk.barrier.3d.lod.32
llvm.agx1.instance.valid
llvm.agx1.is.back.facing
llvm.agx1.itr.centroid.1xf
llvm.agx1.itr.centroid.1xh
llvm.agx1.itr.centroid.2xf
llvm.agx1.itr.centroid.2xh
llvm.agx1.itr.centroid.3xf
llvm.agx1.itr.centroid.3xh
llvm.agx1.itr.centroid.4xf
llvm.agx1.itr.centroid.4xh
llvm.agx1.itr.pixel.1xf
llvm.agx1.itr.pixel.1xh
llvm.agx1.itr.pixel.2xf
llvm.agx1.itr.pixel.2xh
llvm.agx1.itr.pixel.3xf
llvm.agx1.itr.pixel.3xh
llvm.agx1.itr.pixel.4xf
llvm.agx1.itr.pixel.4xh
llvm.agx1.itr.sample.1xf
llvm.agx1.itr.sample.1xh
llvm.agx1.itr.sample.2xf
llvm.agx1.itr.sample.2xh
llvm.agx1.itr.sample.3xf
llvm.agx1.itr.sample.3xh
llvm.agx1.itr.sample.4xf
llvm.agx1.itr.sample.4xh
llvm.agx1.itr.tmp.1xf
llvm.agx1.itr.tmp.1xh
llvm.agx1.itr.tmp.2xf
llvm.agx1.itr.tmp.2xh
llvm.agx1.itr.tmp.3xf
llvm.agx1.itr.tmp.3xh
llvm.agx1.itr.tmp.4xf
llvm.agx1.itr.tmp.4xh
llvm.agx1.itrcem.centroid.3xf
llvm.agx1.itrcem.centroid.3xh
llvm.agx1.itrcem.pixel.3xf
llvm.agx1.itrcem.pixel.3xh
llvm.agx1.itrcem.sample.3xf
llvm.agx1.itrcem.sample.3xh
llvm.agx1.itrcem.tmp.3xf
llvm.agx1.itrcem.tmp.3xh
llvm.agx1.itrcemgrad.tmp.3xf
llvm.agx1.itrproj.centroid.1xf
llvm.agx1.itrproj.centroid.1xh
llvm.agx1.itrproj.centroid.2xf
llvm.agx1.itrproj.centroid.2xh
llvm.agx1.itrproj.centroid.3xf
llvm.agx1.itrproj.centroid.3xh
llvm.agx1.itrproj.centroid.4xf
llvm.agx1.itrproj.centroid.4xh
llvm.agx1.itrproj.pixel.1xf
llvm.agx1.itrproj.pixel.1xh
llvm.agx1.itrproj.pixel.2xf
llvm.agx1.itrproj.pixel.2xh
llvm.agx1.itrproj.pixel.3xf
llvm.agx1.itrproj.pixel.3xh
llvm.agx1.itrproj.pixel.4xf
llvm.agx1.itrproj.pixel.4xh
llvm.agx1.itrproj.sample.1xf
llvm.agx1.itrproj.sample.1xh
llvm.agx1.itrproj.sample.2xf
llvm.agx1.itrproj.sample.2xh
llvm.agx1.itrproj.sample.3xf
llvm.agx1.itrproj.sample.3xh
llvm.agx1.itrproj.sample.4xf
llvm.agx1.itrproj.sample.4xh
llvm.agx1.itrproj.tmp.1xf
llvm.agx1.itrproj.tmp.1xh
llvm.agx1.itrproj.tmp.2xf
llvm.agx1.itrproj.tmp.2xh
llvm.agx1.itrproj.tmp.3xf
llvm.agx1.itrproj.tmp.3xh
llvm.agx1.itrproj.tmp.4xf
llvm.agx1.itrproj.tmp.4xh
llvm.agx1.laddr
llvm.agx1.lldiblk.1xf
llvm.agx1.lldiblk.1xh
llvm.agx1.lldiblk.2xf
llvm.agx1.lldiblk.2xh
llvm.agx1.lldiblk.3xf
llvm.agx1.lldiblk.3xh
llvm.agx1.lldiblk.4xf
llvm.agx1.lldiblk.4xh
llvm.agx1.local.x
llvm.agx1.local.y
llvm.agx1.lock
llvm.agx1.lstiblk.1xf
llvm.agx1.lstiblk.1xh
llvm.agx1.lstiblk.2xf
llvm.agx1.lstiblk.2xh
llvm.agx1.lstiblk.3xf
llvm.agx1.lstiblk.3xh
llvm.agx1.lstiblk.4xf
llvm.agx1.lstiblk.4xh
llvm.agx1.memfence
llvm.agx1.nop
llvm.agx1.nop.dbg
llvm.agx1.pack.prog
llvm.agx1.pack.rne.s32
llvm.agx1.pack.rne.u32
llvm.agx1.pack.scale.rne.s16
llvm.agx1.pack.scale.rne.s8
llvm.agx1.pack.scale.rne.u16
llvm.agx1.pack.scale.rne.u8
llvm.agx1.pixel.depthf
llvm.agx1.pixel.dfdx
llvm.agx1.pixel.dfdy
llvm.agx1.pixel.movmsk
llvm.agx1.pixel.movmsk.if.zero
llvm.agx1.pixel.readOutputRegister
llvm.agx1.pixel.readOutputRegisterWithPartitionSize
llvm.agx1.pixel.writeOutputRegister
llvm.agx1.pixel.writeOutputRegisterWithPartitionSize
llvm.agx1.read.cluster.number
llvm.agx1.read.coord.x.pixel
llvm.agx1.read.coord.x.sample
llvm.agx1.read.coord.y.pixel
llvm.agx1.read.coord.y.sample
llvm.agx1.read.pvcnt
llvm.agx1.read.sample.number
llvm.agx1.read.sg0
llvm.agx1.read.shared.reg.alloc.size
llvm.agx1.read.tvcnt
llvm.agx1.release
llvm.agx1.rev
llvm.agx1.sadd.sat
llvm.agx1.savmsk.pixel
llvm.agx1.savmsk.sample
llvm.agx1.shfl
llvm.agx1.simd.barrier
llvm.agx1.sin.g4
llvm.agx1.sin.g5
llvm.agx1.sinc
llvm.agx1.smad.sat
llvm.agx1.smsub.sat
llvm.agx1.smul.sat
llvm.agx1.ssub.sat
llvm.agx1.texture1d
llvm.agx1.texture1d.both.bi.x
llvm.agx1.texture1d.both.tri.x
llvm.agx1.texture1d.grad
llvm.agx1.texture1d.grad.both.bi.x
llvm.agx1.texture1d.grad.both.tri.x
llvm.agx1.texture1d.grad.info
llvm.agx1.texture1d.grad.write
llvm.agx1.texture1d.grad.x
llvm.agx1.texture1d.grad.xy
llvm.agx1.texture1d.grad.xyz
llvm.agx1.texture1d.info
llvm.agx1.texture1d.write
llvm.agx1.texture1d.x
llvm.agx1.texture1d.xy
llvm.agx1.texture1d.xyz
llvm.agx1.texture2d
llvm.agx1.texture2d.both.bi.x
llvm.agx1.texture2d.both.tri.x
llvm.agx1.texture2d.grad
llvm.agx1.texture2d.grad.both.bi.x
llvm.agx1.texture2d.grad.both.tri.x
llvm.agx1.texture2d.grad.info
llvm.agx1.texture2d.grad.write
llvm.agx1.texture2d.grad.x
llvm.agx1.texture2d.grad.xy
llvm.agx1.texture2d.grad.xyz
llvm.agx1.texture2d.info
llvm.agx1.texture2d.write
llvm.agx1.texture2d.x
llvm.agx1.texture2d.xy
llvm.agx1.texture2d.xyz
llvm.agx1.texture3d
llvm.agx1.texture3d.both.bi.x
llvm.agx1.texture3d.both.tri.x
llvm.agx1.texture3d.grad
llvm.agx1.texture3d.grad.both.bi.x
llvm.agx1.texture3d.grad.both.tri.x
llvm.agx1.texture3d.grad.info
llvm.agx1.texture3d.grad.write
llvm.agx1.texture3d.grad.x
llvm.agx1.texture3d.grad.xy
llvm.agx1.texture3d.grad.xyz
llvm.agx1.texture3d.info
llvm.agx1.texture3d.write
llvm.agx1.texture3d.x
llvm.agx1.texture3d.xy
llvm.agx1.texture3d.xyz
llvm.agx1.textureCube
llvm.agx1.textureCube.both.bi.x
llvm.agx1.textureCube.both.tri.x
llvm.agx1.textureCube.grad
llvm.agx1.textureCube.grad.both.bi.x
llvm.agx1.textureCube.grad.both.tri.x
llvm.agx1.textureCube.grad.info
llvm.agx1.textureCube.grad.write
llvm.agx1.textureCube.grad.x
llvm.agx1.textureCube.grad.xy
llvm.agx1.textureCube.grad.xyz
llvm.agx1.textureCube.info
llvm.agx1.textureCube.write
llvm.agx1.textureCube.x
llvm.agx1.textureCube.xy
llvm.agx1.textureCube.xyz
llvm.agx1.tsci
llvm.agx1.uadd.sat
llvm.agx1.umad.sat
llvm.agx1.umsub.sat
llvm.agx1.umul.sat
llvm.agx1.unpack.rtz.s32
llvm.agx1.unpack.rtz.u32
llvm.agx1.unpack.scale.s1616
llvm.agx1.unpack.scale.s8888
llvm.agx1.unpack.scale.u1616
llvm.agx1.unpack.scale.u8888
llvm.agx1.usub.sat
llvm.agx1.vertex.clip.write
llvm.agx1.vertex.pos.write
llvm.agx1.vertex.ptsize.write
llvm.agx1.vertex.varying.write.f32
llvm.agx1.vertex.varying.write.i32
llvm.agx1.vertex.write
llvm.agx1.vertex.writef
llvm.agx1.wop
llvm.agx1.write.sg0
llvm.agx2.backface.triangle
llvm.agx2.batch.num
llvm.agx2.bbccrc
llvm.agx2.bbccrc.noshft
llvm.agx2.bufrblk.1d
llvm.agx2.bufrblk.2d
llvm.agx2.bufwblk.1d
llvm.agx2.bufwblk.2d
llvm.agx2.centroid.itr.1xf
llvm.agx2.centroid.itr.1xh
llvm.agx2.centroid.itr.2xf
llvm.agx2.centroid.itr.2xh
llvm.agx2.centroid.itr.3xf
llvm.agx2.centroid.itr.3xh
llvm.agx2.centroid.itr.4xf
llvm.agx2.centroid.itr.4xh
llvm.agx2.centroid.itrproj.1xf
llvm.agx2.centroid.itrproj.1xh
llvm.agx2.centroid.itrproj.2xf
llvm.agx2.centroid.itrproj.2xh
llvm.agx2.centroid.itrproj.3xf
llvm.agx2.centroid.itrproj.3xh
llvm.agx2.centroid.itrproj.4xf
llvm.agx2.centroid.itrproj.4xh
llvm.agx2.clamp
llvm.agx2.cluster.num
llvm.agx2.cmsk
llvm.agx2.colcvgmsk
llvm.agx2.colcvgmsk.coords
llvm.agx2.colcvgmsk.coords.with.offset
llvm.agx2.colcvgmsk.with.offset
llvm.agx2.colcvgmsk.with.prid
llvm.agx2.context.id
llvm.agx2.coverage.mask
llvm.agx2.cppix
llvm.agx2.dispatch.threadgroup.x.size
llvm.agx2.dispatch.threadgroup.y.size
llvm.agx2.dispatch.threadgroup.z.size
llvm.agx2.dstackh
llvm.agx2.dstackl
llvm.agx2.eipnd
llvm.agx2.emitpix
llvm.agx2.exception.return.reg
llvm.agx2.exception.vector.reg
llvm.agx2.exec.state.cache.id
llvm.agx2.f16matmad4x4
llvm.agx2.f16matmad8x8
llvm.agx2.f32matmad4x4
llvm.agx2.f32matmad8x8
llvm.agx2.flushdcache
llvm.agx2.flushimg
llvm.agx2.flushpbe
llvm.agx2.forced.2x2.valid
llvm.agx2.ft1
llvm.agx2.get.layerid
llvm.agx2.get.stp.counter
llvm.agx2.gmdescpack.1d
llvm.agx2.gmdescpack.2d
llvm.agx2.image.block.depth
llvm.agx2.image.block.pp.samples
llvm.agx2.image.block.xdim
llvm.agx2.image.block.ydim
llvm.agx2.imgwblk.1d
llvm.agx2.imgwblk.1d.array
llvm.agx2.imgwblk.1d.array.lod
llvm.agx2.imgwblk.1d.array.lod.rtz
llvm.agx2.imgwblk.1d.array.rtz
llvm.agx2.imgwblk.1d.lod
llvm.agx2.imgwblk.1d.lod.rtz
llvm.agx2.imgwblk.1d.rtz
llvm.agx2.imgwblk.2d
llvm.agx2.imgwblk.2d.array
llvm.agx2.imgwblk.2d.array.lod
llvm.agx2.imgwblk.2d.array.lod.rtz
llvm.agx2.imgwblk.2d.array.rtz
llvm.agx2.imgwblk.2d.lod
llvm.agx2.imgwblk.2d.lod.rtz
llvm.agx2.imgwblk.2d.msaa
llvm.agx2.imgwblk.2d.msaa.array
llvm.agx2.imgwblk.2d.msaa.array.rtz
llvm.agx2.imgwblk.2d.msaa.rtz
llvm.agx2.imgwblk.2d.rtz
llvm.agx2.imgwblk.3d
llvm.agx2.imgwblk.3d.lod
llvm.agx2.imgwblk.3d.lod.rtz
llvm.agx2.imgwblk.3d.rtz
llvm.agx2.imgwblk.coords.1d
llvm.agx2.imgwblk.coords.1d.array
llvm.agx2.imgwblk.coords.1d.array.lod
llvm.agx2.imgwblk.coords.1d.array.lod.rtz
llvm.agx2.imgwblk.coords.1d.array.rtz
llvm.agx2.imgwblk.coords.1d.lod
llvm.agx2.imgwblk.coords.1d.lod.rtz
llvm.agx2.imgwblk.coords.1d.rtz
llvm.agx2.imgwblk.coords.2d
llvm.agx2.imgwblk.coords.2d.array
llvm.agx2.imgwblk.coords.2d.array.lod
llvm.agx2.imgwblk.coords.2d.array.lod.rtz
llvm.agx2.imgwblk.coords.2d.array.rtz
llvm.agx2.imgwblk.coords.2d.lod
llvm.agx2.imgwblk.coords.2d.lod.rtz
llvm.agx2.imgwblk.coords.2d.msaa
llvm.agx2.imgwblk.coords.2d.msaa.array
llvm.agx2.imgwblk.coords.2d.msaa.array.rtz
llvm.agx2.imgwblk.coords.2d.msaa.rtz
llvm.agx2.imgwblk.coords.2d.rtz
llvm.agx2.imgwblk.coords.3d
llvm.agx2.imgwblk.coords.3d.lod
llvm.agx2.imgwblk.coords.3d.lod.rtz
llvm.agx2.imgwblk.coords.3d.rtz
llvm.agx2.imgwblk.coords.cubestf
llvm.agx2.imgwblk.coords.cubestf.array
llvm.agx2.imgwblk.coords.cubestf.array.lod
llvm.agx2.imgwblk.coords.cubestf.array.lod.rtz
llvm.agx2.imgwblk.coords.cubestf.array.rtz
llvm.agx2.imgwblk.coords.cubestf.lod
llvm.agx2.imgwblk.coords.cubestf.lod.rtz
llvm.agx2.imgwblk.coords.cubestf.rtz
llvm.agx2.imgwblk.cubestf
llvm.agx2.imgwblk.cubestf.array
llvm.agx2.imgwblk.cubestf.array.lod
llvm.agx2.imgwblk.cubestf.array.lod.rtz
llvm.agx2.imgwblk.cubestf.array.rtz
llvm.agx2.imgwblk.cubestf.lod
llvm.agx2.imgwblk.cubestf.lod.rtz
llvm.agx2.imgwblk.cubestf.rtz
llvm.agx2.imgwblk.subset.1d
llvm.agx2.imgwblk.subset.1d.array
llvm.agx2.imgwblk.subset.1d.array.lod
llvm.agx2.imgwblk.subset.1d.array.lod.rtz
llvm.agx2.imgwblk.subset.1d.array.rtz
llvm.agx2.imgwblk.subset.1d.lod
llvm.agx2.imgwblk.subset.1d.lod.rtz
llvm.agx2.imgwblk.subset.1d.rtz
llvm.agx2.imgwblk.subset.2d
llvm.agx2.imgwblk.subset.2d.array
llvm.agx2.imgwblk.subset.2d.array.lod
llvm.agx2.imgwblk.subset.2d.array.lod.rtz
llvm.agx2.imgwblk.subset.2d.array.rtz
llvm.agx2.imgwblk.subset.2d.lod
llvm.agx2.imgwblk.subset.2d.lod.rtz
llvm.agx2.imgwblk.subset.2d.msaa
llvm.agx2.imgwblk.subset.2d.msaa.array
llvm.agx2.imgwblk.subset.2d.msaa.array.rtz
llvm.agx2.imgwblk.subset.2d.msaa.rtz
llvm.agx2.imgwblk.subset.2d.rtz
llvm.agx2.imgwblk.subset.3d
llvm.agx2.imgwblk.subset.3d.lod
llvm.agx2.imgwblk.subset.3d.lod.rtz
llvm.agx2.imgwblk.subset.3d.rtz
llvm.agx2.imgwblk.subset.coords.1d
llvm.agx2.imgwblk.subset.coords.1d.array
llvm.agx2.imgwblk.subset.coords.1d.array.lod
llvm.agx2.imgwblk.subset.coords.1d.array.lod.rtz
llvm.agx2.imgwblk.subset.coords.1d.array.rtz
llvm.agx2.imgwblk.subset.coords.1d.lod
llvm.agx2.imgwblk.subset.coords.1d.lod.rtz
llvm.agx2.imgwblk.subset.coords.1d.rtz
llvm.agx2.imgwblk.subset.coords.2d
llvm.agx2.imgwblk.subset.coords.2d.array
llvm.agx2.imgwblk.subset.coords.2d.array.lod
llvm.agx2.imgwblk.subset.coords.2d.array.lod.rtz
llvm.agx2.imgwblk.subset.coords.2d.array.rtz
llvm.agx2.imgwblk.subset.coords.2d.lod
llvm.agx2.imgwblk.subset.coords.2d.lod.rtz
llvm.agx2.imgwblk.subset.coords.2d.msaa
llvm.agx2.imgwblk.subset.coords.2d.msaa.array
llvm.agx2.imgwblk.subset.coords.2d.msaa.array.rtz
llvm.agx2.imgwblk.subset.coords.2d.msaa.rtz
llvm.agx2.imgwblk.subset.coords.2d.rtz
llvm.agx2.imgwblk.subset.coords.3d
llvm.agx2.imgwblk.subset.coords.3d.lod
llvm.agx2.imgwblk.subset.coords.3d.lod.rtz
llvm.agx2.imgwblk.subset.coords.3d.rtz
llvm.agx2.imgwblk.subset.coords.cubestf
llvm.agx2.imgwblk.subset.coords.cubestf.array
llvm.agx2.imgwblk.subset.coords.cubestf.array.lod
llvm.agx2.imgwblk.subset.coords.cubestf.array.lod.rtz
llvm.agx2.imgwblk.subset.coords.cubestf.array.rtz
llvm.agx2.imgwblk.subset.coords.cubestf.lod
llvm.agx2.imgwblk.subset.coords.cubestf.lod.rtz
llvm.agx2.imgwblk.subset.coords.cubestf.rtz
llvm.agx2.imgwblk.subset.cubestf
llvm.agx2.imgwblk.subset.cubestf.array
llvm.agx2.imgwblk.subset.cubestf.array.lod
llvm.agx2.imgwblk.subset.cubestf.array.lod.rtz
llvm.agx2.imgwblk.subset.cubestf.array.rtz
llvm.agx2.imgwblk.subset.cubestf.lod
llvm.agx2.imgwblk.subset.cubestf.lod.rtz
llvm.agx2.imgwblk.subset.cubestf.rtz
llvm.agx2.instance.number
llvm.agx2.instance.valid
llvm.agx2.istackh
llvm.agx2.istackl
llvm.agx2.itr.centroid.1xf
llvm.agx2.itr.centroid.1xh
llvm.agx2.itr.centroid.2xf
llvm.agx2.itr.centroid.2xh
llvm.agx2.itr.centroid.3xf
llvm.agx2.itr.centroid.3xh
llvm.agx2.itr.centroid.4xf
llvm.agx2.itr.centroid.4xh
llvm.agx2.itr.pixel.1xf
llvm.agx2.itr.pixel.1xh
llvm.agx2.itr.pixel.2xf
llvm.agx2.itr.pixel.2xh
llvm.agx2.itr.pixel.3xf
llvm.agx2.itr.pixel.3xh
llvm.agx2.itr.pixel.4xf
llvm.agx2.itr.pixel.4xh
llvm.agx2.itr.sample.1xf
llvm.agx2.itr.sample.1xh
llvm.agx2.itr.sample.2xf
llvm.agx2.itr.sample.2xh
llvm.agx2.itr.sample.3xf
llvm.agx2.itr.sample.3xh
llvm.agx2.itr.sample.4xf
llvm.agx2.itr.sample.4xh
llvm.agx2.itr.tmp.1xf
llvm.agx2.itr.tmp.2xf
llvm.agx2.itr.tmp.3xf
llvm.agx2.itr.tmp.4xf
llvm.agx2.itrproj.centroid.1xf
llvm.agx2.itrproj.centroid.1xh
llvm.agx2.itrproj.centroid.2xf
llvm.agx2.itrproj.centroid.2xh
llvm.agx2.itrproj.centroid.3xf
llvm.agx2.itrproj.centroid.3xh
llvm.agx2.itrproj.centroid.4xf
llvm.agx2.itrproj.centroid.4xh
llvm.agx2.itrproj.pixel.1xf
llvm.agx2.itrproj.pixel.1xh
llvm.agx2.itrproj.pixel.2xf
llvm.agx2.itrproj.pixel.2xh
llvm.agx2.itrproj.pixel.3xf
llvm.agx2.itrproj.pixel.3xh
llvm.agx2.itrproj.pixel.4xf
llvm.agx2.itrproj.pixel.4xh
llvm.agx2.itrproj.sample.1xf
llvm.agx2.itrproj.sample.1xh
llvm.agx2.itrproj.sample.2xf
llvm.agx2.itrproj.sample.2xh
llvm.agx2.itrproj.sample.3xf
llvm.agx2.itrproj.sample.3xh
llvm.agx2.itrproj.sample.4xf
llvm.agx2.itrproj.sample.4xh
llvm.agx2.itrproj.tmp.1xf
llvm.agx2.itrproj.tmp.2xf
llvm.agx2.itrproj.tmp.3xf
llvm.agx2.itrproj.tmp.4xf
llvm.agx2.linear.id
llvm.agx2.lldiblk.1xf
llvm.agx2.lldiblk.1xh
llvm.agx2.lldiblk.2xf
llvm.agx2.lldiblk.2xh
llvm.agx2.lldiblk.3xf
llvm.agx2.lldiblk.3xh
llvm.agx2.lldiblk.4xf
llvm.agx2.lldiblk.4xh
llvm.agx2.lmdescpack.1d
llvm.agx2.lmdescpack.2d
llvm.agx2.load.1xsz16.f16
llvm.agx2.load.1xsz16.f16.cachectl
llvm.agx2.load.1xsz16.i16
llvm.agx2.load.1xsz16.i16.cachectl
llvm.agx2.load.1xsz32.f32
llvm.agx2.load.1xsz32.f32.cachectl
llvm.agx2.load.1xsz32.i32
llvm.agx2.load.1xsz32.i32.cachectl
llvm.agx2.load.2xsz16.f16
llvm.agx2.load.2xsz16.f16.cachectl
llvm.agx2.load.2xsz16.i16
llvm.agx2.load.2xsz16.i16.cachectl
llvm.agx2.load.2xsz32.f32
llvm.agx2.load.2xsz32.f32.cachectl
llvm.agx2.load.2xsz32.i32
llvm.agx2.load.2xsz32.i32.cachectl
llvm.agx2.load.3xsz16.f16
llvm.agx2.load.3xsz16.f16.cachectl
llvm.agx2.load.3xsz16.i16
llvm.agx2.load.3xsz16.i16.cachectl
llvm.agx2.load.3xsz32.f32
llvm.agx2.load.3xsz32.f32.cachectl
llvm.agx2.load.3xsz32.i32
llvm.agx2.load.3xsz32.i32.cachectl
llvm.agx2.load.4xsz16.f16
llvm.agx2.load.4xsz16.f16.cachectl
llvm.agx2.load.4xsz16.i16
llvm.agx2.load.4xsz16.i16.cachectl
llvm.agx2.load.4xsz32.f32
llvm.agx2.load.4xsz32.f32.cachectl
llvm.agx2.load.4xsz32.i32
llvm.agx2.load.4xsz32.i32.cachectl
llvm.agx2.local.x
llvm.agx2.local.y
llvm.agx2.local.z
llvm.agx2.lstiblk.1xf
llvm.agx2.lstiblk.1xh
llvm.agx2.lstiblk.2xf
llvm.agx2.lstiblk.2xh
llvm.agx2.lstiblk.3xf
llvm.agx2.lstiblk.3xh
llvm.agx2.lstiblk.4xf
llvm.agx2.lstiblk.4xh
llvm.agx2.map.sg
llvm.agx2.map.tg
llvm.agx2.memory.fence
llvm.agx2.msaa.mode
llvm.agx2.msg
llvm.agx2.nop
llvm.agx2.pack.1xsz16.f16
llvm.agx2.pack.1xsz16.i16
llvm.agx2.pack.1xsz32.f32
llvm.agx2.pack.1xsz32.i32
llvm.agx2.pack.2xsz16.f16
llvm.agx2.pack.2xsz16.i16
llvm.agx2.pack.2xsz32.f32
llvm.agx2.pack.2xsz32.i32
llvm.agx2.pack.3xsz16.f16
llvm.agx2.pack.3xsz16.i16
llvm.agx2.pack.3xsz32.f32
llvm.agx2.pack.3xsz32.i32
llvm.agx2.pack.4xsz16.f16
llvm.agx2.pack.4xsz16.i16
llvm.agx2.pack.4xsz32.f32
llvm.agx2.pack.4xsz32.i32
llvm.agx2.pack.rne.s32
llvm.agx2.pack.rne.u32
llvm.agx2.pass.number
llvm.agx2.pixel.coord.x
llvm.agx2.pixel.coord.y
llvm.agx2.pixel.depthf
llvm.agx2.pixel.depthf.with.smp
llvm.agx2.pixel.dfdx
llvm.agx2.pixel.dfdy
llvm.agx2.pixel.feedback.depth
llvm.agx2.pixel.feedback.depth.stencil
llvm.agx2.pixel.feedback.stencil
llvm.agx2.pixel.itr.1xf
llvm.agx2.pixel.itr.1xh
llvm.agx2.pixel.itr.2xf
llvm.agx2.pixel.itr.2xh
llvm.agx2.pixel.itr.3xf
llvm.agx2.pixel.itr.3xh
llvm.agx2.pixel.itr.4xf
llvm.agx2.pixel.itr.4xh
llvm.agx2.pixel.itrproj.1xf
llvm.agx2.pixel.itrproj.1xh
llvm.agx2.pixel.itrproj.2xf
llvm.agx2.pixel.itrproj.2xh
llvm.agx2.pixel.itrproj.3xf
llvm.agx2.pixel.itrproj.3xh
llvm.agx2.pixel.itrproj.4xf
llvm.agx2.pixel.itrproj.4xh
llvm.agx2.pixel.movmsk.with.smp
llvm.agx2.pixel.write.coords.f16
llvm.agx2.pixel.write.coords.f32
llvm.agx2.pixel.write.coords.i16
llvm.agx2.pixel.write.coords.i32
llvm.agx2.pixel.write.f16
llvm.agx2.pixel.write.f32
llvm.agx2.pixel.write.i16
llvm.agx2.pixel.write.i32
llvm.agx2.pixrel
llvm.agx2.pixwait
llvm.agx2.pow.f16
llvm.agx2.pow.f32
llvm.agx2.powrd
llvm.agx2.previous.simd.valid.count
llvm.agx2.previous.thread.valid.count
llvm.agx2.program.type
llvm.agx2.qrefl
llvm.agx2.quad.ballot.u.32
llvm.agx2.quad.broadcast.u.i16
llvm.agx2.quad.broadcast.u.i32
llvm.agx2.quad.element
llvm.agx2.quad.group
llvm.agx2.quad.reduce.f.Add
llvm.agx2.quad.reduce.f.Max
llvm.agx2.quad.reduce.f.Min
llvm.agx2.quad.reduce.f.Mul
llvm.agx2.quad.reduce.f16.Add
llvm.agx2.quad.reduce.f16.Max
llvm.agx2.quad.reduce.f16.Min
llvm.agx2.quad.reduce.f16.Mul
llvm.agx2.quad.reduce.i.Add
llvm.agx2.quad.reduce.i.And
llvm.agx2.quad.reduce.i.Max
llvm.agx2.quad.reduce.i.Min
llvm.agx2.quad.reduce.i.Or
llvm.agx2.quad.reduce.i.Xor
llvm.agx2.quad.reduce.u.Max
llvm.agx2.quad.reduce.u.Min
llvm.agx2.quad.rotup.u.i16
llvm.agx2.quad.rotup.u.i32
llvm.agx2.quad.shuffle.down.u.i16
llvm.agx2.quad.shuffle.down.u.i32
llvm.agx2.quad.shuffle.up.u.i16
llvm.agx2.quad.shuffle.up.u.i32
llvm.agx2.quad.xor.u.i16
llvm.agx2.quad.xor.u.i32
llvm.agx2.rcp
llvm.agx2.read.coord.x.pixel
llvm.agx2.read.coord.x.sample
llvm.agx2.read.coord.y.pixel
llvm.agx2.read.coord.y.sample
llvm.agx2.read.first.lane
llvm.agx2.read.sample.number
llvm.agx2.rev
llvm.agx2.rog.texture.fence
llvm.agx2.rsqrt
llvm.agx2.sadd.sat
llvm.agx2.sample.itr.1xf
llvm.agx2.sample.itr.1xh
llvm.agx2.sample.itr.2xf
llvm.agx2.sample.itr.2xh
llvm.agx2.sample.itr.3xf
llvm.agx2.sample.itr.3xh
llvm.agx2.sample.itr.4xf
llvm.agx2.sample.itr.4xh
llvm.agx2.sample.itrproj.1xf
llvm.agx2.sample.itrproj.1xh
llvm.agx2.sample.itrproj.2xf
llvm.agx2.sample.itrproj.2xh
llvm.agx2.sample.itrproj.3xf
llvm.agx2.sample.itrproj.3xh
llvm.agx2.sample.itrproj.4xf
llvm.agx2.sample.itrproj.4xh
llvm.agx2.sample.mask.in
llvm.agx2.sample.read.1xf16
llvm.agx2.sample.read.1xf32
llvm.agx2.sample.read.1xi16
llvm.agx2.sample.read.1xi32
llvm.agx2.sample.read.2xf16
llvm.agx2.sample.read.2xf32
llvm.agx2.sample.read.2xi16
llvm.agx2.sample.read.2xi32
llvm.agx2.sample.read.3xf16
llvm.agx2.sample.read.3xf32
llvm.agx2.sample.read.3xi16
llvm.agx2.sample.read.3xi32
llvm.agx2.sample.read.4xf16
llvm.agx2.sample.read.4xf32
llvm.agx2.sample.read.4xi16
llvm.agx2.sample.read.4xi32
llvm.agx2.sample.read.coords.1xf16
llvm.agx2.sample.read.coords.1xf32
llvm.agx2.sample.read.coords.1xi16
llvm.agx2.sample.read.coords.1xi32
llvm.agx2.sample.read.coords.2xf16
llvm.agx2.sample.read.coords.2xf32
llvm.agx2.sample.read.coords.2xi16
llvm.agx2.sample.read.coords.2xi32
llvm.agx2.sample.read.coords.3xf16
llvm.agx2.sample.read.coords.3xf32
llvm.agx2.sample.read.coords.3xi16
llvm.agx2.sample.read.coords.3xi32
llvm.agx2.sample.read.coords.4xf16
llvm.agx2.sample.read.coords.4xf32
llvm.agx2.sample.read.coords.4xi16
llvm.agx2.sample.read.coords.4xi32
llvm.agx2.shfl
llvm.agx2.simd.ballot.u.32
llvm.agx2.simd.bcast.u.i16
llvm.agx2.simd.bcast.u.i32
llvm.agx2.simd.bfly.u.i16
llvm.agx2.simd.bfly.u.i32
llvm.agx2.simd.broadcast.u.i16
llvm.agx2.simd.broadcast.u.i32
llvm.agx2.simd.element
llvm.agx2.simd.group
llvm.agx2.simd.reduce.f.Add
llvm.agx2.simd.reduce.f.Max
llvm.agx2.simd.reduce.f.Min
llvm.agx2.simd.reduce.f.Mul
llvm.agx2.simd.reduce.f16.Add
llvm.agx2.simd.reduce.f16.Max
llvm.agx2.simd.reduce.f16.Min
llvm.agx2.simd.reduce.f16.Mul
llvm.agx2.simd.reduce.i.Add
llvm.agx2.simd.reduce.i.And
llvm.agx2.simd.reduce.i.Max
llvm.agx2.simd.reduce.i.Min
llvm.agx2.simd.reduce.i.Or
llvm.agx2.simd.reduce.i.Xor
llvm.agx2.simd.reduce.u.Max
llvm.agx2.simd.reduce.u.Min
llvm.agx2.simd.rotup.u.i16
llvm.agx2.simd.rotup.u.i32
llvm.agx2.simd.shff.dn.f
llvm.agx2.simd.shff.dn.i
llvm.agx2.simd.shff.up.f
llvm.agx2.simd.shff.up.i
llvm.agx2.simd.shift.down.u.i16
llvm.agx2.simd.shift.down.u.i32
llvm.agx2.simd.shift.up.u.i16
llvm.agx2.simd.shift.up.u.i32
llvm.agx2.simd.shuffle.down.u.i16
llvm.agx2.simd.shuffle.down.u.i32
llvm.agx2.simd.shuffle.u.i16
llvm.agx2.simd.shuffle.u.i32
llvm.agx2.simd.shuffle.up.u.i16
llvm.agx2.simd.shuffle.up.u.i32
llvm.agx2.simd.xor.u.i16
llvm.agx2.simd.xor.u.i32
llvm.agx2.simdgroup.barrier.with.scope
llvm.agx2.sin
llvm.agx2.sinc
llvm.agx2.smad.sat
llvm.agx2.smsub.sat
llvm.agx2.smul.sat
llvm.agx2.sqrt.step
llvm.agx2.ssub.sat
llvm.agx2.store.1xsz16.f16
llvm.agx2.store.1xsz16.f16.cachectl
llvm.agx2.store.1xsz16.i16
llvm.agx2.store.1xsz16.i16.cachectl
llvm.agx2.store.1xsz32.f32
llvm.agx2.store.1xsz32.f32.cachectl
llvm.agx2.store.1xsz32.i32
llvm.agx2.store.1xsz32.i32.cachectl
llvm.agx2.store.2xsz16.f16
llvm.agx2.store.2xsz16.f16.cachectl
llvm.agx2.store.2xsz16.i16
llvm.agx2.store.2xsz16.i16.cachectl
llvm.agx2.store.2xsz32.f32
llvm.agx2.store.2xsz32.f32.cachectl
llvm.agx2.store.2xsz32.i32
llvm.agx2.store.2xsz32.i32.cachectl
llvm.agx2.store.3xsz16.f16
llvm.agx2.store.3xsz16.f16.cachectl
llvm.agx2.store.3xsz16.i16
llvm.agx2.store.3xsz16.i16.cachectl
llvm.agx2.store.3xsz32.f32
llvm.agx2.store.3xsz32.f32.cachectl
llvm.agx2.store.3xsz32.i32
llvm.agx2.store.3xsz32.i32.cachectl
llvm.agx2.store.4xsz16.f16
llvm.agx2.store.4xsz16.f16.cachectl
llvm.agx2.store.4xsz16.i16
llvm.agx2.store.4xsz16.i16.cachectl
llvm.agx2.store.4xsz32.f32
llvm.agx2.store.4xsz32.f32.cachectl
llvm.agx2.store.4xsz32.i32
llvm.agx2.store.4xsz32.i32.cachectl
llvm.agx2.syncbuf
llvm.agx2.texture.memory.fence
llvm.agx2.thread.position.in.grid.x
llvm.agx2.thread.position.in.grid.y
llvm.agx2.thread.position.in.grid.z
llvm.agx2.threadgroup.barrier.with.scope
llvm.agx2.threadgroup.id
llvm.agx2.threadgroup.x
llvm.agx2.threadgroup.x.size
llvm.agx2.threadgroup.y
llvm.agx2.threadgroup.y.size
llvm.agx2.threadgroup.z
llvm.agx2.threadgroup.z.size
llvm.agx2.tile.id
llvm.agx2.total.simd.valid.count
llvm.agx2.total.thread.valid.count
llvm.agx2.tpp.visibility.pass
llvm.agx2.tsci
llvm.agx2.uadd.sat
llvm.agx2.umad.sat
llvm.agx2.umsub.sat
llvm.agx2.umul.sat
llvm.agx2.unmap.sg
llvm.agx2.unmap.tg
llvm.agx2.unpack.1xsz16.f16
llvm.agx2.unpack.1xsz16.i16
llvm.agx2.unpack.1xsz32.f32
llvm.agx2.unpack.1xsz32.i32
llvm.agx2.unpack.2xsz16.f16
llvm.agx2.unpack.2xsz16.i16
llvm.agx2.unpack.2xsz32.f32
llvm.agx2.unpack.2xsz32.i32
llvm.agx2.unpack.3xsz16.f16
llvm.agx2.unpack.3xsz16.i16
llvm.agx2.unpack.3xsz32.f32
llvm.agx2.unpack.3xsz32.i32
llvm.agx2.unpack.4xsz16.f16
llvm.agx2.unpack.4xsz16.i16
llvm.agx2.unpack.4xsz32.f32
llvm.agx2.unpack.4xsz32.i32
llvm.agx2.update.hw.coverage.mask.coords.i16
llvm.agx2.update.hw.coverage.mask.i16
llvm.agx2.usub.sat
llvm.agx2.util.data.hi
llvm.agx2.util.data.lo
llvm.agx2.util.func
llvm.agx2.vertex.amp.id.count
llvm.agx2.vertex.amp.id.count.i32
llvm.agx2.vertex.amp.id.mask.i32
llvm.agx2.vertex.clip.amplified.write
llvm.agx2.vertex.clip.write
llvm.agx2.vertex.layerid.amplified.write.i32
llvm.agx2.vertex.layerid.write.i32
llvm.agx2.vertex.pos.amplified.write
llvm.agx2.vertex.pos.write
llvm.agx2.vertex.ptsize.amplified.write
llvm.agx2.vertex.ptsize.write
llvm.agx2.vertex.varying.amplified.struct.write.f32
llvm.agx2.vertex.varying.amplified.struct.write.i32
llvm.agx2.vertex.varying.amplified.write.f32
llvm.agx2.vertex.varying.amplified.write.i32
llvm.agx2.vertex.varying.struct.write.f32
llvm.agx2.vertex.varying.struct.write.i32
llvm.agx2.vertex.varying.write.f32
llvm.agx2.vertex.varying.write.i32
llvm.agx2.vertex.viewportid.amplified.write.i32
llvm.agx2.vertex.viewportid.write.i32
llvm.agx2.vertex.write
llvm.agx2.vertex.writef
llvm.agx2.workgroup.id
vararg
isVoid
Metadata
bf16
f128
ppcf128
x86mmx
value isn't a global
global isn't in section "llvm.ptrauth"
global doesn't have an initializer
global isn't a struct
global doesn't have type '{ i8*, i32, i64, i64 }'
key isn't a constant integer
address discriminator isn't a constant integer or expr
discriminator isn't a constant integer
<unknown>:
switch
indirectbr
invoke
resume
unreachable
cleanupret
catchret
catchpad
catchswitch
fmul
udiv
sdiv
fdiv
urem
srem
frem
alloca
load
store
cmpxchg
atomicrmw
fence
getelementptr
zext
sext
fptrunc
fpext
fptoui
fptosi
uitofp
sitofp
inttoptr
ptrtoint
bitcast
addrspacecast
icmp
fcmp
select
call
lshr
ashr
va_arg
insertelement
shufflevector
extractvalue
insertvalue
landingpad
cleanuppad
<Invalid operator> 
both values to select must have same type
select values cannot have token type
vector select condition element type must be i1
selected values for vector select must be vectors
vector select requires selected vectors to have the same vector length as select condition
select condition must be i1 or <n x i1>
xchg
nand
umax
umin
fadd
fsub
<invalid operation>
malloc
free
tbaa
prof
fpmath
range
tbaa.struct
invariant.load
alias.scope
noalias
nontemporal
llvm.mem.parallel_loop_access
nonnull
dereferenceable
dereferenceable_or_null
make.implicit
unpredictable
invariant.group
align
llvm.loop
type
section_prefix
absolute_symbol
associated
callees
irr_loop
deopt
funclet
gc-transition
singlethread
error
warning
remark
note
debug-pass
Print PassManager debugging information
Disabled
disable debug output
Arguments
print pass arguments to pass to 'opt'
Structure
print pass structure before run()
Executions
print pass name before it is executed
Details
print pass details when it is executed
print-before
Print IR before specified passes
print-after
Print IR after specified passes
print-before-all
Print IR before each pass
print-after-all
Print IR after each pass
print-module-scope
When printing IR for print-[before|after]{-all} always print a module IR
filter-print-funcs
function names
Only print IR for functions whose name match this for all print-[before|after][-all] options
Pass
time-passes
Time each pass, printing elapsed time for each on exit
__unnamed_
 /EXPORT:
 -export:
,DATA
,data
llvm.module.flags
SDK Version
SCC (
 node
External
 (has loop)
opt-bisect-limit
Maximum optimization to perform
Two passes with the same argument (-
) attempted to be registered!
non-global-value-max-name-size
Maximum size for the name of non-global values.
Base nodes must have at least two operands
Access tag nodes must have the number of operands that is a multiple of 3!
Struct tag nodes must have an odd number of operands!
Type size nodes must be constants!
Struct tag nodes have a string as their first operand
Incorrect field entry in struct type node!
Offset entries must be constants!
Bitwidth between the offsets and struct type entries must match
Offsets must be increasing!
Member size entries must be constants!
Could not find TBAA parent in struct type node
This instruction shall not have a TBAA access tag!
Old-style TBAA is no longer allowed, use struct-path TBAA instead
Access tag metadata must have either 4 or 5 operands
Struct tag metadata must have either 3 or 4 operands
Access size field must be a constant
Immutability tag on struct tag metadata must be a constant
Immutability part of the struct tag metadata must be either 0 or 1
Malformed struct tag metadata: base and access-type should be non-null and point to Metadata nodes
Access type node must be a valid scalar type
Offset must be constant integer
Cycle detected in struct path
Offset not zero at the point of scalar access
Access bit-width not the same as description bit-width
Did not see access type in access path!
Broken module found, compilation aborted!
Basic Block in function '
' does not have terminator!
Function context does not match Module context!
Functions may not have common linkage
# formal arguments must match # of arguments for function type!
Functions cannot return aggregate values!
Invalid struct return type!
Attribute after last parameter!
Attribute 'builtin' can only be applied to a callsite.
Calling convention requires void return type
Calling convention does not allow sret
Calling convention does not support varargs or perfect forwarding!
llvm.
Argument value does not match function argument type!
Function arguments must have first-class types!
Function takes metadata but isn't an intrinsic
Function takes token but isn't an intrinsic
Functions returns a token but isn't an intrinsic
Referencing personality function in another module!
unmaterialized function cannot have metadata
function declaration may not have a !dbg attachment
function declaration may not have a !prof attachment
Function declaration shouldn't have a personality routine
llvm intrinsics cannot be defined!
Entry block to function must not have predecessors!
blockaddress may not be used with the entry block!
function must have a single !dbg attachment
function !dbg attachment must be a subprogram
DISubprogram attached to more than one function
function must have a single !prof attachment
Invalid user of intrinsic instruction!
!dbg attachment points at wrong subprogram for function
Global is external, but doesn't have external or weak linkage!
huge alignment values are unsupported
Only global variables can have appending linkage!
Only global arrays can have appending linkage!
Declaration may not be in a Comdat!
GlobalValue with DLLImport Storage is dso_local!
Global is marked as dllimport, but not external
GlobalValue with private or internal linkage must be dso_local!
GlobalValue with non default visibility must be dso_local!
Global is referenced by parentless instruction!
Global is referenced in a different module!
Global is used by function in a different module
; ModuleID = '
Attributes 'byval', 'inalloca', 'nest', 'sret', 'nocapture', 'returned', 'swiftself', and 'swifterror' do not apply to return values!
Attribute '
' does not apply to function returns
More than one parameter has attribute nest!
More than one parameter has attribute returned!
Incompatible argument and return types for 'returned' attribute
Cannot have multiple 'sret' parameters!
Attribute 'sret' is not on first or second parameter!
Cannot have multiple 'swiftself' parameters!
Cannot have multiple 'swifterror' parameters!
inalloca isn't on the last parameter!
Attributes 'readnone and readonly' are incompatible!
Attributes 'readnone and writeonly' are incompatible!
Attributes 'readonly and writeonly' are incompatible!
Attributes 'readnone and inaccessiblemem_or_argmemonly' are incompatible!
Attributes 'readnone and inaccessiblememonly' are incompatible!
Attributes 'noinline and alwaysinline' are incompatible!
Attribute 'optnone' requires 'noinline'!
Attributes 'optsize and optnone' are incompatible!
Attributes 'minsize and optnone' are incompatible!
Attribute 'jumptable' requires 'unnamed_addr'
element size
number of elements
Attributes 'byval', 'inalloca', 'inreg', 'nest', and 'sret' are incompatible!
Attributes 'inalloca and readonly' are incompatible!
Attributes 'sret and returned' are incompatible!
Attributes 'zeroext and signext' are incompatible!
Attribute 'byval' type does not match parameter!
Wrong types for attribute: 
Attributes 'byval' and 'inalloca' do not support unsized types!
Attribute 'swifterror' only applies to parameters with pointer to pointer type!
Attribute 'byval' only applies to parameters with pointer type!
Attribute 'swifterror' only applies to parameters with pointer type!
' only applies to functions!
' does not apply to functions!
'allocsize' 
 argument is out of bounds
 argument must refer to an integer parameter
swifterror value can only be loaded and stored from, or as a swifterror argument!
swifterror value should be the second operand when used by stores
swifterror value when used in a callsite should be marked with swifterror attribute
!prof annotations should have no less than 2 operands
first operand should not be null
expected string with name of the !prof annotation
first operand should be 'function_entry_count' or 'synthetic_function_entry_count'
second operand should not be null
expected integer argument to function_entry_count
Invalid operand for global metadata!
Expected no forward declarations!
All nodes should be resolved!
location requires a valid scope
inlined-at should be a location
scope points into the type hierarchy
invalid expression
missing variable
fragment is larger than or outside of variable
fragment covers entire variable
invalid tag
Count must either be a signed constant or a DIVariable
invalid subrange count
invalid pointer to member type
invalid scope
invalid base type
DWARF address space only applies to pointer or reference types
invalid file
invalid composite elements
invalid vtable holder
invalid reference flags
invalid vector, expected one element of type subrange
class/union requires a filename
discriminator can only appear on variant part
invalid template params
invalid template parameter
invalid subroutine type ref
invalid checksum kind
invalid checksum length
invalid checksum
compile units must be distinct
invalid filename
invalid emission kind
invalid enum list
invalid enum type
invalid retained type list
invalid retained type
invalid global variable list
invalid global variable ref
invalid imported entity list
invalid imported entity ref
invalid macro list
invalid macro ref
line specified with no file
invalid subroutine type
invalid containing type
invalid subprogram declaration
invalid retained nodes list
invalid retained nodes, expected DILocalVariable or DILabel
subprogram definitions must be distinct
subprogram definitions must have a compile unit
invalid unit type
subprogram declarations must not have a compile unit
invalid thrown types list
invalid thrown type
DIFlagAllCallsDescribed must be attached to a definition
cannot have column info without line info
invalid local scope
invalid scope ref
anonymous module
invalid type ref
missing global variable name
missing global variable type
invalid static data member declaration
local variable requires a valid scope
label requires a valid scope
invalid scope for imported entity
invalid imported entity
invalid macinfo type
anonymous macro
Expected valid value
Unexpected metadata round-trip through values
function-local metadata used outside a function
function-local metadata not in basic block
function-local metadata used in wrong function
Basic Block does not have terminator!
PHI nodes must have at least one entry.  If the block is dead, the PHI should be removed!
PHINode should have one entry for each predecessor of its parent basic block!
PHI node has multiple entries for the same basic block with different incoming values!
PHI node entries do not match predecessors!
Instruction has bogus parent pointer!
Operand is null
Found return instr that returns non-void in Function of void return type!
Function return type does not match operand type of return inst!
Terminator found in the middle of a basic block!
Instruction not embedded in basic block!
Only PHI nodes may reference their own value!
Instruction has a name, but provides a void value!
Instruction returns a non-scalar type!
Invalid use of metadata!
Instruction referencing instruction not embedded in a basic block!
Use of instruction is not an instruction!
Instruction has null operand!
Instruction operands must be first-class values!
Cannot take the address of an intrinsic!
Cannot invoke an intrinsic other than donothing, patchpoint, statepoint, coro_resume or coro_destroy
Referencing function in another module!
Referring to a basic block in another function!
Referring to an argument in another function!
Referencing global in another module!
Cannot take the address of an inline asm!
fpmath requires a floating point result!
fpmath takes one operand!
fpmath accuracy must have float type
fpmath accuracy not a positive number!
invalid fpmath accuracy!
Ranges are only for loads, calls and invokes!
nonnull applies only to pointer types
nonnull applies only to load instructions, use attributes for calls or invokes
align applies only to pointer types
align applies only to load instructions, use attributes for calls or invokes
align takes one operand!
align metadata value must be an i64!
align metadata value must be a power of 2!
alignment is larger that implementation defined limit
invalid !dbg metadata attachment
Instruction does not dominate all uses!
Invalid bitcast
inttoptr not supported for non-integral pointers
ptrtoint not supported for non-integral pointers
Unfinished range!
It should have at least one range!
The lower limit must be an integer!
The upper limit must be an integer!
Range types must match instruction type!
Range must not be empty!
Intervals are overlapping
Intervals are not in order
Intervals are contiguous
dereferenceable, dereferenceable_or_null apply only to pointer types
dereferenceable, dereferenceable_or_null apply only to load instructions, use attributes for calls or invokes
dereferenceable, dereferenceable_or_null take one operand!
dereferenceable, dereferenceable_or_null metadata value must be an i64!
Branch condition is not 'i1' type!
Switch constants must all be same type as switch value!
Duplicate integer as switch case
Indirectbr operand must have pointer type!
Indirectbr destinations must all have pointer type!
The unwind destination does not have an exception handling instruction!
Called function must be a pointer!
Called function is not pointer to function type!
Called function is not the same type as the call!
Called function requires more parameters than were provided!
Incorrect number of arguments passed to called function!
Call parameter type does not match function signature!
speculatable attribute may not apply to call sites
inalloca argument for call has mismatched alloca
swifterror argument for call has mismatched alloca
swifterror argument should come from an alloca or parameter
swifterror argument for call has mismatched parameter
Attribute 'sret' cannot be used for vararg call arguments!
inalloca isn't on the last argument!
Function has metadata parameter but isn't an intrinsic
Function has token parameter but isn't an intrinsic
Return type cannot be token for indirect call!
Multiple deopt operand bundles
Multiple gc-transition operand bundles
Multiple funclet operand bundles
Expected exactly one funclet bundle operand
Funclet bundle operands should correspond to a FuncletPadInst
Multiple ptrauth operand bundles
Expected exactly two ptrauth bundle operand
Ptrauth bundle key operand must be an i32 constant
Ptrauth bundle discriminator operand must be an i64
inlinable function call in a function with debug info must have a !dbg location
Intrinsic functions should never be defined!
Intrinsic has incorrect return type!
Intrinsic has incorrect argument type!
Intrinsic was not defined with variable arguments!
Callsite was not defined with variable arguments!
Intrinsic has too few arguments!
Intrinsic name not mangled correctly for type arguments! Should be: 
info argument of llvm.coro.begin must refer to an initialized constant
info argument of llvm.coro.begin must refer to either a struct or an array
is_zero_undef argument of bit counting intrinsics must be a constant int
invalid llvm.dbg.declare intrinsic call 1
declare
addr
value
label
alignment of arg 0 of memory intrinsic must be 0 or a power of 2
alignment of arg 1 of memory intrinsic must be 0 or a power of 2
isvolatile argument of memory intrinsics must be a constant int
element size of the element-wise unordered atomic memory intrinsic must be a constant int
element size of the element-wise atomic memory intrinsic must be a power of 2
constant length must be a multiple of the element size in the element-wise atomic memory intrinsic
incorrect alignment of the destination argument
incorrect alignment of the source argument
llvm.gcroot parameter #1 must be an alloca.
llvm.gcroot parameter #2 must be a constant.
llvm.gcroot parameter #1 must either be a pointer alloca, or argument #2 must be a non-null constant.
Enclosing function does not use GC.
llvm.init_trampoline parameter #2 must resolve to a function.
invalid arguments to llvm.prefetch
llvm.stackprotector parameter #2 must resolve to an alloca.
size argument of memory use markers must be a constant integer
llvm.invariant.end parameter #2 must be a constant integer
llvm.localescape used outside of entry block
multiple calls to llvm.localescape in one function
llvm.localescape only accepts static allocas
llvm.localrecover first argument must be function defined in this module
idx argument of llvm.localrecover must be a constant int
gc.statepoint support for inline assembly unimplemented
gc.result operand #1 must be from a statepoint
gc.result result type does not match wrapped callee
wrong number of arguments
gc.relocate must return a pointer or a vector of pointers
safepoints should have unique landingpads
safepoint block should be well formed
gc relocate should be linked to a statepoint
gc relocate is incorrectly tied to the statepoint
gc.relocate operand #2 must be integer offset
gc.relocate operand #3 must be integer offset
gc.relocate: statepoint base index out of bounds
gc.relocate: statepoint derived index out of bounds
gc.statepoint: insufficient arguments
gc.statement: number of call arguments must be constant integer
gc.statepoint: mismatch in number of call arguments
gc.statepoint: number of transition arguments must be a constant integer
gc.statepoint: number of deoptimization arguments must be a constant integer
gc.relocate: statepoint base index doesn't fall within the 'gc parameters' section of the statepoint call
gc.relocate: statepoint derived index doesn't fall within the 'gc parameters' section of the statepoint call
gc.relocate: relocated value must be a gc pointer
gc.relocate: vector relocates to vector and pointer to pointer
gc.relocate: relocating a pointer shouldn't change its address space
eh.exceptionpointer argument must be a catchpad
masked_load: must return a vector
masked_load: mask must be vector
masked_load: return must match pointer type
masked_load: pass through and data type must match
masked_load: vector mask must be same length as data
masked_store: mask must be vector
masked_store: storee must match pointer type
masked_store: vector mask must be same length as data
experimental_guard cannot be invoked
experimental_guard must have exactly one "deopt" operand bundle
experimental_deoptimize cannot be invoked
experimental_deoptimize must have exactly one "deopt" operand bundle
experimental_deoptimize return type must match caller return type
calls to experimental_deoptimize must be followed by a return
calls to experimental_deoptimize must be followed by a return of the value computed by experimental_deoptimize
ptrauth key must be a constant integer
invalid arguments for constrained FP intrinsic
invalid exception behavior argument
invalid rounding mode argument
invalid llvm.dbg.
 intrinsic address/value
 intrinsic variable
 intrinsic expression
llvm.dbg.
 intrinsic requires a !dbg attachment
mismatched subprogram between llvm.dbg.
 variable and !dbg attachment
BlockByRef variable without complex expression
dbg intrinsic without variable
conflicting debug info for argument
 label and !dbg attachment
gc.statepoint must read and write all memory to preserve reordering restrictions required by safepoint semantics
gc.statepoint ID must be a constant integer
gc.statepoint number of patchable bytes must be a constant integer
gc.statepoint number of patchable bytes must be positive
gc.statepoint callee must be of function pointer type
gc.statepoint number of arguments to underlying call must be constant integer
gc.statepoint number of arguments to underlying call must be positive
gc.statepoint mismatch in number of vararg call args
gc.statepoint doesn't support wrapping non-void vararg functions yet
gc.statepoint mismatch in number of call args
gc.statepoint flags must be constant integer
unknown flag used in gc.statepoint flags argument
gc.statepoint call argument does not match wrapped function type
gc.statepoint number of transition arguments must be constant integer
gc.statepoint number of transition arguments must be positive
gc.statepoint number of deoptimization arguments must be constant integer
gc.statepoint number of deoptimization arguments must be positive
gc.statepoint too few arguments according to length fields
illegal use of statepoint token
gc.result or gc.relocate are the only value uses of a gc.statepoint
gc.result connected to wrong gc.statepoint
gc.relocate connected to wrong gc.statepoint
ResumeInst needs to be in a function with a personality.
The resume instruction should have a consistent result type inside a function.
CleanupReturnInst needs to be provided a CleanupPad
CleanupReturnInst must unwind to an EH block which is not a landingpad.
CatchReturnInst needs to be provided a CatchPad
CatchSwitchInst needs to be in a function with a personality.
CatchSwitchInst not the first non-PHI instruction in the block.
CatchSwitchInst has an invalid parent.
CatchSwitchInst must unwind to an EH block which is not a landingpad.
CatchSwitchInst cannot have empty handler list
CatchSwitchInst handlers must be catchpads
EH pad cannot be in entry block.
Block containing LandingPadInst must be jumped to only by the unwind edge of an invoke.
Block containg CatchPadInst must be jumped to only by its catchswitch.
Catchswitch cannot unwind to one of its catchpads
EH pad must be jumped to via an unwind edge
A cleanupret must exit its cleanup
EH pad cannot handle exceptions raised within it
A single unwind edge may only enter one EH pad
EH pad jumps through a cycle of pads
Both operands to a binary operator are not of the same type!
Integer arithmetic operators only work with integral types!
Integer arithmetic operators must have same type for operands and result!
Floating-point arithmetic operators only work with floating-point types!
Floating-point arithmetic operators must have same type for operands and result!
Logical operators only work with integral types!
Logical operators must have same type for operands and result!
Shifts only work with integral types!
Shift return type must be same as operands!
Allocation instruction pointer not in the stack address space!
Cannot allocate unsized type
Alloca array size must have integer type
Load operand must be a pointer.
loading unsized types is not allowed
Load cannot have Release ordering
Atomic load must specify explicit alignment
atomic load operand must have integer, pointer, or floating point type!
Non-atomic load cannot have SynchronizationScope specified
atomic memory access' size must be byte-sized
atomic memory access' operand must have a power-of-two size
Store operand must be a pointer.
Stored value type does not match pointer operand type!
storing unsized types is not allowed
Store cannot have Acquire ordering
Atomic store must specify explicit alignment
atomic store operand must have integer, pointer, or floating point type!
Non-atomic store cannot have SynchronizationScope specified
GEP base pointer is not a vector or a vector of pointers
GEP into unsized type!
GEP indexes must be integers
Invalid indices for GEP pointer type!
GEP is not of right type for indices!
Vector GEP result width doesn't match operand's
Invalid GEP index vector width
All GEP indices should be of integer type
fence instructions may only have acquire, release, acq_rel, or seq_cst ordering.
cmpxchg instructions must be atomic.
cmpxchg instructions cannot be unordered.
cmpxchg instructions failure argument shall be no stronger than the success argument
cmpxchg failure ordering cannot include release semantics
First cmpxchg operand must be a pointer.
cmpxchg operand must have integer or pointer type
Expected value type does not match pointer operand type!
atomicrmw instructions must be atomic.
atomicrmw instructions cannot be unordered.
First atomicrmw operand must be a pointer.
atomicrmw 
 operand must have integer or floating point type!
 operand must have floating point type!
 operand must have integer type!
Argument value type does not match pointer operand type!
Invalid binary operation!
Trunc only operates on integer
Trunc only produces integer
trunc source and destination must both be a vector or neither
DestTy too big for Trunc
ZExt only operates on integer
ZExt only produces an integer
zext source and destination must both be a vector or neither
Type too small for ZExt
SExt only operates on integer
SExt only produces an integer
sext source and destination must both be a vector or neither
Type too small for SExt
FPToUI source and dest must both be vector or scalar
FPToUI source must be FP or FP vector
FPToUI result must be integer or integer vector
FPToUI source and dest vector length mismatch
FPToSI source and dest must both be vector or scalar
FPToSI source must be FP or FP vector
FPToSI result must be integer or integer vector
FPToSI source and dest vector length mismatch
UIToFP source and dest must both be vector or scalar
UIToFP source must be integer or integer vector
UIToFP result must be FP or FP vector
UIToFP source and dest vector length mismatch
SIToFP source and dest must both be vector or scalar
SIToFP source must be integer or integer vector
SIToFP result must be FP or FP vector
SIToFP source and dest vector length mismatch
FPTrunc only operates on FP
FPTrunc only produces an FP
fptrunc source and destination must both be a vector or neither
DestTy too big for FPTrunc
FPExt only operates on FP
FPExt only produces an FP
fpext source and destination must both be a vector or neither
DestTy too small for FPExt
PtrToInt source must be pointer
PtrToInt result must be integral
PtrToInt type mismatch
PtrToInt Vector width mismatch
IntToPtr source must be an integral
IntToPtr result must be a pointer
IntToPtr type mismatch
IntToPtr Vector width mismatch
AddrSpaceCast source must be a pointer
AddrSpaceCast result must be a pointer
AddrSpaceCast must be between different address spaces
AddrSpaceCast vector pointer number of elements mismatch
CleanupPadInst needs to be in a function with a personality.
CleanupPadInst not the first non-PHI instruction in the block.
CleanupPadInst has an invalid parent.
FuncletPadInst must not be nested within itself
Bogus funclet pad use
Unwind edges out of a funclet pad must have the same unwind dest
Unwind edges out of a catch must have the same unwind dest as the parent catchswitch
CatchPadInst needs to be in a function with a personality.
CatchPadInst needs to be directly nested in a CatchSwitchInst.
CatchPadInst not the first non-PHI instruction in the block.
Both operands to ICmp instruction are not of the same type!
Invalid operand types for ICmp instruction
Invalid predicate in ICmp instruction!
Both operands to FCmp instruction are not of the same type!
Invalid operand types for FCmp instruction
Invalid predicate in FCmp instruction!
PHI nodes not grouped at top of basic block!
PHI nodes cannot have token type!
PHI node operands are not the same type as the result!
cannot use musttail call with inline asm
cannot guarantee tail call due to mismatched parameter counts
cannot guarantee tail call due to mismatched parameter types
cannot guarantee tail call due to mismatched varargs
cannot guarantee tail call due to mismatched return types
cannot guarantee tail call due to mismatched calling conv
cannot guarantee tail call due to mismatched ABI impacting function attributes
bitcast following musttail call must use the call
musttail call must precede a ret with an optional bitcast
musttail call result must be returned
Invalid operands for select instruction!
Select values must have same type as select instruction!
User-defined operators should not live outside of a pass!
Invalid extractelement operands!
Invalid insertelement operands!
Invalid shufflevector operands!
Invalid ExtractValueInst operands!
Invalid InsertValueInst operands!
LandingPadInst needs at least one clause or to be a cleanup.
The landingpad instruction should have a consistent result type inside a function.
LandingPadInst needs to be in a function with a personality.
LandingPadInst not the first non-PHI instruction in the block.
Catch operand does not have pointer type!
Clause is neither catch nor filter!
Filter operand is not an array of constants!
EH pads can't handle each other's exceptions
all indices passed to llvm.localrecover must be less than the number of arguments passed ot llvm.localescape in the parent function
Global variable initializer type does not match global variable type!
'common' global must have a zero initializer!
'common' global may not be marked constant!
'common' global may not be in a Comdat!
llvm.global_ctors
llvm.global_dtors
invalid linkage for intrinsic global variable
wrong type for intrinsic global variable
llvm.used
llvm.compiler.used
wrong initalizer for intrinsic global variable
invalid llvm.used member
members of llvm.used must be named
invalid llvm.ptrauth global: 
!dbg attachment of global variable must be a DIGlobalVariableExpression
Alias should have private, internal, linkonce, weak, linkonce_odr, weak_odr, or external linkage!
Aliasee cannot be NULL!
Alias and aliasee types should match!
Aliasee should be either GlobalValue or ConstantExpr
Alias must point to a definition
Aliases cannot form a cycle
Alias cannot point to an interposable alias
llvm.dbg.cu
unrecognized named metadata node in the llvm.dbg namespace
invalid compile unit
comdat global value has private linkage
invalid requirement on flag, flag is not present in module
invalid requirement on flag, flag does not have the required value
incorrect number of operands in module flag
invalid behavior operand in module flag (expected constant integer)
invalid behavior operand in module flag (unexpected constant)
invalid ID operand in module flag (expected metadata string)
invalid value for 'max' module flag (expected constant integer)
invalid value for 'require' module flag (expected metadata pair)
invalid value for 'require' module flag (first value operand should be a string)
invalid value for 'append'-type module flag (expected a metadata node)
module flag identifiers must be unique (or of 'require' type)
wchar_size metadata requires constant integer argument
Linker Options
llvm.linker.options
'Linker Options' named metadata no longer supported
expected a MDNode triple
expected an integer constant
expected a Function or null
llvm.ident
incorrect number of operands in llvm.ident metadata
invalid value for llvm.ident metadata entry operand(the operand should be a string)
llvm.commandline
incorrect number of operands in llvm.commandline metadata
invalid value for llvm.commandline metadata entry operand(the operand should be a string)
DICompileUnit not listed in llvm.dbg.cu
All llvm.experimental.deoptimize declarations must have the same calling convention
Could not open input file: 
parse
Parse IR
irparse
LLVM IR Parsing
SmallVector capacity overflow during allocation
': can only link appending global with another appending global!
Appending variables with different element types!
Appending variables linked with different const'ness!
Appending variables with different alignment need to be linked!
Appending variables with different visibility need to be linked!
Appending variables with different unnamed_addr need to be linked!
Appending variables with different section name need to be linked!
Linking two modules of different data layouts: '
' is '
' whereas '
Linking two modules of different target triples: 
.text
.balign 2
.thumb
.text
.balign 4
.arm
linking module flags '
': IDs have conflicting override values
': IDs have conflicting behaviors
': IDs have conflicting values
': does not have the required value
Linking COMDATs named '
': invalid selection kinds!
': noduplicates has been violated!
': ExactMatch violated!
': SameSize violated!
': COMDAT key involves incomputable alias size.
': GlobalVariable required for data dependent selection!
Linking globals named '
': symbol multiply defined!
LLVM_OVERRIDE_PRODUCER
input module has no datalayout
Unable to determine comdat of alias!
Invalid weak external
__ashlhi3
__ashlsi3
__ashldi3
__ashlti3
__lshrhi3
__lshrsi3
__lshrdi3
__lshrti3
__ashrhi3
__ashrsi3
__ashrdi3
__ashrti3
__mulqi3
__mulhi3
__mulsi3
__muldi3
__multi3
__mulosi4
__mulodi4
__muloti4
__divqi3
__divhi3
__divsi3
__divdi3
__divti3
__udivqi3
__udivhi3
__udivsi3
__udivdi3
__udivti3
__modqi3
__modhi3
__modsi3
__moddi3
__modti3
__umodqi3
__umodhi3
__umodsi3
__umoddi3
__umodti3
__negsi2
__negdi2
__clzsi2
__clzdi2
__clzti2
__addsf3
__adddf3
__addxf3
__addtf3
__gcc_qadd
__subsf3
__subdf3
__subxf3
__subtf3
__gcc_qsub
__mulsf3
__muldf3
__mulxf3
__multf3
__gcc_qmul
__divsf3
__divdf3
__divxf3
__divtf3
__gcc_qdiv
fmodf
fmod
fmodl
fmaf
fmal
__powisf2
__powidf2
__powixf2
__powitf2
sqrtf
sqrt
sqrtl
logf
logl
__logf_finite
__log_finite
__logl_finite
log2f
log2
log2l
__log2f_finite
__log2_finite
__log2l_finite
log10f
log10
log10l
__log10f_finite
__log10_finite
__log10l_finite
expf
expl
__expf_finite
__exp_finite
__expl_finite
exp2f
exp2
exp2l
__exp2f_finite
__exp2_finite
__exp2l_finite
sinf
sinl
cosf
cosl
powf
powl
__powf_finite
__pow_finite
__powl_finite
ceilf
ceil
ceill
truncf
truncl
rintf
rint
rintl
nearbyintf
nearbyint
nearbyintl
roundf
round
roundl
floorf
floor
floorl
copysignf
copysign
copysignl
fminf
fmin
fminl
fmaxf
fmax
fmaxl
__gcc_stoq
__gcc_dtoq
__extendxftf2
__extenddftf2
__extendsftf2
__extendsfdf2
__gnu_h2f_ieee
__gnu_f2h_ieee
__truncdfhf2
__truncxfhf2
__trunctfhf2
__truncdfsf2
__truncxfsf2
__trunctfsf2
__gcc_qtos
__truncxfdf2
__trunctfdf2
__gcc_qtod
__trunctfxf2
__fixsfsi
__fixsfdi
__fixsfti
__fixdfsi
__fixdfdi
__fixdfti
__fixxfsi
__fixxfdi
__fixxfti
__fixtfsi
__fixtfdi
__fixtfti
__gcc_qtou
__fixunssfsi
__fixunssfdi
__fixunssfti
__fixunsdfsi
__fixunsdfdi
__fixunsdfti
__fixunsxfsi
__fixunsxfdi
__fixunsxfti
__fixunstfsi
__fixunstfdi
__fixunstfti
__floatsisf
__floatsidf
__floatsixf
__floatsitf
__gcc_itoq
__floatdisf
__floatdidf
__floatdixf
__floatditf
__floattisf
__floattidf
__floattixf
__floattitf
__floatunsisf
__floatunsidf
__floatunsixf
__floatunsitf
__gcc_utoq
__floatundisf
__floatundidf
__floatundixf
__floatunditf
__floatuntisf
__floatuntidf
__floatuntixf
__floatuntitf
__eqsf2
__eqdf2
__eqtf2
__gcc_qeq
__nesf2
__nedf2
__netf2
__gcc_qne
__gesf2
__gedf2
__getf2
__gcc_qge
__ltsf2
__ltdf2
__lttf2
__gcc_qlt
__lesf2
__ledf2
__letf2
__gcc_qle
__gtsf2
__gtdf2
__gttf2
__gcc_qgt
__unordsf2
__unorddf2
__unordtf2
__gcc_qunord
memcpy
memmove
memset
__llvm_memcpy_element_unordered_atomic_1
__llvm_memcpy_element_unordered_atomic_2
__llvm_memcpy_element_unordered_atomic_4
__llvm_memcpy_element_unordered_atomic_8
__llvm_memcpy_element_unordered_atomic_16
__llvm_memmove_element_unordered_atomic_1
__llvm_memmove_element_unordered_atomic_2
__llvm_memmove_element_unordered_atomic_4
__llvm_memmove_element_unordered_atomic_8
__llvm_memmove_element_unordered_atomic_16
__llvm_memset_element_unordered_atomic_1
__llvm_memset_element_unordered_atomic_2
__llvm_memset_element_unordered_atomic_4
__llvm_memset_element_unordered_atomic_8
__llvm_memset_element_unordered_atomic_16
_Unwind_Resume
__sync_val_compare_and_swap_1
__sync_val_compare_and_swap_2
__sync_val_compare_and_swap_4
__sync_val_compare_and_swap_8
__sync_val_compare_and_swap_16
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_fetch_and_add_1
__sync_fetch_and_add_2
__sync_fetch_and_add_4
__sync_fetch_and_add_8
__sync_fetch_and_add_16
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_sub_16
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_and_16
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_or_16
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__sync_fetch_and_xor_16
__sync_fetch_and_nand_1
__sync_fetch_and_nand_2
__sync_fetch_and_nand_4
__sync_fetch_and_nand_8
__sync_fetch_and_nand_16
__sync_fetch_and_max_1
__sync_fetch_and_max_2
__sync_fetch_and_max_4
__sync_fetch_and_max_8
__sync_fetch_and_max_16
__sync_fetch_and_umax_1
__sync_fetch_and_umax_2
__sync_fetch_and_umax_4
__sync_fetch_and_umax_8
__sync_fetch_and_umax_16
__sync_fetch_and_min_1
__sync_fetch_and_min_2
__sync_fetch_and_min_4
__sync_fetch_and_min_8
__sync_fetch_and_min_16
__sync_fetch_and_umin_1
__sync_fetch_and_umin_2
__sync_fetch_and_umin_4
__sync_fetch_and_umin_8
__sync_fetch_and_umin_16
__atomic_load
__atomic_load_1
__atomic_load_2
__atomic_load_4
__atomic_load_8
__atomic_load_16
__atomic_store
__atomic_store_1
__atomic_store_2
__atomic_store_4
__atomic_store_8
__atomic_store_16
__atomic_exchange
__atomic_exchange_1
__atomic_exchange_2
__atomic_exchange_4
__atomic_exchange_8
__atomic_exchange_16
__atomic_compare_exchange
__atomic_compare_exchange_1
__atomic_compare_exchange_2
__atomic_compare_exchange_4
__atomic_compare_exchange_8
__atomic_compare_exchange_16
__atomic_fetch_add_1
__atomic_fetch_add_2
__atomic_fetch_add_4
__atomic_fetch_add_8
__atomic_fetch_add_16
__atomic_fetch_sub_1
__atomic_fetch_sub_2
__atomic_fetch_sub_4
__atomic_fetch_sub_8
__atomic_fetch_sub_16
__atomic_fetch_and_1
__atomic_fetch_and_2
__atomic_fetch_and_4
__atomic_fetch_and_8
__atomic_fetch_and_16
__atomic_fetch_or_1
__atomic_fetch_or_2
__atomic_fetch_or_4
__atomic_fetch_or_8
__atomic_fetch_or_16
__atomic_fetch_xor_1
__atomic_fetch_xor_2
__atomic_fetch_xor_4
__atomic_fetch_xor_8
__atomic_fetch_xor_16
__atomic_fetch_nand_1
__atomic_fetch_nand_2
__atomic_fetch_nand_4
__atomic_fetch_nand_8
__atomic_fetch_nand_16
__llvm_deoptimize
Could not find leader
__imp_
target_variant_triple
+Inf
-Inf
0.0E+0
e+00
APInt(
0x%08x / 0x%08x = %.2f%%
General options
: for the -
 option: 
may only occur zero or one times!
must occur exactly one time!
>...
' is invalid value for boolean argument! Try 0 or 1
' value invalid for integer argument!
' value invalid for uint argument!
    =
 -   
    -
 (default: 
= *unknown option value*
*no default*
= *cannot print option value*
Generic Options
help-list
Display list of available options (-help-list-hidden for more)
help-list-hidden
Display list of all available options
help
Display available options (-help-hidden for more)
Alias for -help
help-hidden
Display all available options
print-options
Print non-default options after command line parsing
print-all-options
Print all option values after command line parsing
version
Display the version of this program
: CommandLine Error: Option '
' registered more than once!
inconsistency in registered CommandLine options
Cannot specify more than one option with cl::ConsumeAfter!
error - this positional option will never be matched, because it does not Require a value, and a cl::ConsumeAfter option is active!
error - option can never match, because another positional argument will match an unbounded number of values, and this option does not require a value!
' is all messed up!
: Unknown command line argument '
'.  Try: '
 -help'
: Did you mean '-
This argument does not take a value.
Instead, it consumes any positional arguments until the next recognized option.
: Not enough positional command line arguments specified!
Must specify at least 
 positional argument
: See: 
 -help
: Too many positional arguments specified!
Can specify at most 
 positional arguments: See: 
must be specified at least once!
may not occur within a group!
requires a value!
multi-valued option specified with ValueDisallowed modifier!
does not allow a value! '
' specified.
not enough values!
' value invalid for floating point argument!
  This option category has no options.
OVERVIEW: 
USAGE: 
 [subcommand]
 [options]
SUBCOMMAND '
SUBCOMMANDS:
  Type "
 <subcommand> -help" to get more help on a specific subcommand
OPTIONS:
Apple
LLVM
 version 
31001.638.1
Optimized build
generic
(unknown)
  Default target: 
  Host CPU: 
uint
number
string
cl::location(x) specified more than once!
cl::alias must only have one cl::aliasopt(...) specified!
cl::alias must have argument name specified!
cl::alias must have an cl::aliasopt(option) specified!
cl::alias must not have cl::sub(), aliased option's cl::sub() will be used!
Multiple errors:
Error
Multiple errors
Inconvertible error value. An error has occurred that could not be converted to a known std::error_code. Please file a bug.
LLVM ERROR: 
LLVM ERROR: out of memory
view-background
Execute graph viewer in the background. Creates tmp file litter.
open
Program arguments: 
rng-seed
seed
Seed for the random number generator
0123456789
Included from 
<unknown>
<stdin>
remark: 
WARNING: You're attempting to print out a bitcode file.
This is inadvisable as it may cause display problems. If
you REALLY want to taste LLVM bitcode first-hand, you
can force output with the `-f' option.
iwmmxt
armv2
armv2a
armv3
armv3m
armv4
armv4t
armv5t
armv5te
armv5tej
5TEJ
armv6
armv6k
armv6t2
v6t2
armv6kz
v6kz
armv6-m
armv7-a
armv7ve
v7ve
armv7-r
armv7-m
armv7e-m
7E-M
v7em
armv8-a
armv8.1-a
8.1-A
v8.1a
armv8.2-a
8.2-A
v8.2a
armv8.3-a
8.3-A
v8.3a
armv8.4-a
8.4-A
v8.4a
armv8-r
armv8-m.base
8-M.Baseline
v8m.base
armv8-m.main
8-M.Mainline
v8m.main
iwmmxt2
armv7s
armv7k
v5te
v6-m
v7-a
v7-r
v7-m
v7e-m
v8-a
v8.1-a
v8.2-a
v8.3-a
v8.4-a
v8-r
v8-m.base
v8-m.main
track-memory
Enable -time-passes memory tracking (this may be slow)
info-output-file
File to append -stats and -timer output to
Error opening info-output-file '
 for appending!
%9lld  
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
   ---User Time---
   --System Time--
   --User+System--
   ---Wall Time---
  ---Mem---
  --- Name ---
Total
misc
Miscellaneous Ungrouped Timers
        -----     
  %7.4f (%5.1f%%)
aarch64
aarch64_be
mips64
mips64el
powerpc64
riscv64
sparcv9
x86_64
nvptx64
igil64
air64
le64
amdil64
hsail64
spir64
agx0
agx1
agx2
lanai
shave
wasm64
renderscript32
renderscript64
wasm
ananas
cloudabi
darwin
dragonfly
freebsd
fuchsia
kfreebsd
macosx
netbsd
openbsd
solaris
windows
haiku
minix
rtems
nacl
cuda
nvcl
amdhsa
elfiamcu
tvos
watchos
bridgeos
driverkit
mesa3d
contiki
amdpal
gnueabihf
android
msvc
cygnus
invalid
xscale
macho
metallib
empty
rope:
cstring:"
std::string:"
stringref:"
smallstring:"
formatv:"
char:"
decUI:"
decI:"
decUL:"
decL:"
decULL:"
decLL:"
uhex:"
(Twine 
Color Options
color
Use colors in output (default=autodetect)
error: 
warning: 
note: 
invalid number
out of range number
IO failure on output stream: 
[:<:]]
[:>:]]
alnum
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
alpha
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
blank
cntrl
digit
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
lower
abcdefghijklmnopqrstuvwxyz
print
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
punct
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
space
upper
ABCDEFGHIJKLMNOPQRSTUVWXYZ
xdigit
0123456789ABCDEFabcdef
alert
backspace
newline
vertical-tab
form-feed
carriage-return
exclamation-mark
quotation-mark
number-sign
dollar-sign
percent-sign
ampersand
apostrophe
left-parenthesis
right-parenthesis
asterisk
plus-sign
comma
hyphen
hyphen-minus
period
full-stop
slash
solidus
zero
three
four
five
seven
eight
nine
colon
semicolon
less-than-sign
equals-sign
greater-than-sign
question-mark
commercial-at
left-square-bracket
backslash
reverse-solidus
right-square-bracket
circumflex
circumflex-accent
underscore
low-line
grave-accent
left-brace
left-curly-bracket
vertical-line
right-brace
right-curly-bracket
tilde
REG_0x%x
REG_NOMATCH
llvm_regexec() failed to match
REG_BADPAT
invalid regular expression
REG_ECOLLATE
invalid collating element
REG_ECTYPE
invalid character class
REG_EESCAPE
trailing backslash (\)
REG_ESUBREG
invalid backreference number
REG_EBRACK
brackets ([ ]) not balanced
REG_EPAREN
parentheses not balanced
REG_EBRACE
braces not balanced
REG_BADBR
invalid repetition count(s)
REG_ERANGE
invalid character range
REG_ESPACE
out of memory
REG_BADRPT
repetition-operator operand invalid
REG_EMPTY
empty (sub)expression
REG_ASSERT
"can't happen" -- you found a bug
REG_INVARG
invalid argument to regex routine
*** unknown regexp error code ***
x86_64-apple-darwin20.1.0
-darwin
TERM
linux
PATH
disable-symbolication
Disable symbolizing crash backtraces.
llvm-symbolizer
LLVM_DISABLE_CRASH_REPORT
too many signal callbacks already registered
Unable to find target for this triple (no targets are registered)
No available targets are compatible with this triple.
Cannot choose between targets "
" and "
verify-loop-lcssa
Verify loop lcssa form (time consuming)
phi-node-folding-threshold
Control the amount of phi node folding to perform (default = 2)
simplifycfg-dup-ret
Duplicate return instructions into unconditional branches
simplifycfg-sink-common
Sink common instructions down to the end block
simplifycfg-hoist-cond-stores
Hoist conditional stores if an unconditional store precedes
simplifycfg-merge-cond-stores
Hoist conditional stores even if an unconditional store does not precede - hoist multiple conditional stores into a single predicated store
simplifycfg-merge-cond-stores-aggressively
When merging conditional stores, do so even if the resultant basic blocks are unlikely to be if-converted as a result
speculate-one-expensive-inst
Allow exactly one expensive instruction to be speculatively executed
max-speculation-depth
Limit maximum recursion depth when calculating costs of speculatively executed instructions
import-instr-limit
Only import functions with less than N instructions
import-cutoff
Only import first N functions if N>=0 (default -1)
import-instr-evolution-factor
As we import functions, multiply the `import-instr-limit` threshold by this factor before processing newly imported functions
import-hot-evolution-factor
As we import functions called from hot callsite, multiply the `import-instr-limit` threshold by this factor before processing newly imported functions
import-hot-multiplier
Multiply the `import-instr-limit` threshold for hot callsites
import-critical-multiplier
Multiply the `import-instr-limit` threshold for critical callsites
import-cold-multiplier
Multiply the `import-instr-limit` threshold for cold callsites
print-imports
Print imported functions
compute-dead
Compute dead symbols
enable-import-metadata
Enable import metadata like 'thinlto_src_module'
summary-file
The summary file to use for function importing.
import-all-index
Import all external functions in index.
thinlto_src_module
: Import 
Function Import: link error
.llvm.
internalize-public-api-file
A file containing list of symbol names to preserve
internalize-public-api-list
list
A list of symbol names to preserve
llvm.global.annotations
__stack_chk_fail
__stack_chk_guard
constant bigger than 64 bits detected!
constant bigger than 128 bits detected!
end of file in COMDAT variable name
Null bytes are not allowed in names
end of file in string constant
invalid value number (too large)!
end of file in global variable name
bitwidth for integer type out of range!
define
constant
dso_local
dso_preemptable
default
hidden
protected
externally_initialized
thread_local
initialexec
localexec
caller
from
musttail
notail
source_filename
unwind
deplibs
datalayout
volatile
atomic
syncscope
nnan
arcp
contract
reassoc
fast
exact
inbounds
inrange
addrspace
section
module
sideeffect
inteldialect
prefix
prologue
avr_intrcc
avr_signalcc
allocsize
blockaddress
distinct
uselistorder_bb
personality
cleanup
catch
filter
path
guid
summaries
linkage
notEligibleToImport
live
dsoLocal
insts
funcFlags
readNone
noRecurse
returnDoesNotAlias
calls
callee
hotness
relbf
aliasee
refs
typeIdInfo
typeTests
vFuncId
args
typeid
summary
typeTestRes
kind
sizeM1BitWidth
alignLog2
sizeM1
bitMask
inlineBits
wpdResolutions
wpdRes
singleImplName
resByArg
byArg
info
Can't read textual IR with a Context that discards named Values
expected function name in blockaddress
use of undefined type '%
use of undefined type named '
use of undefined comdat '$
use of undefined value '@
use of undefined metadata '!
use of undefined summary '^
use of undefined type id summary '^
expected top-level entity
expected 'module asm'
unknown target property
expected '=' after target triple
expected '=' after target datalayout
expected '=' after source_filename
expected '=' after deplibs
expected ']' at end of list
expected '=' after name
expected 'type' after '='
non-struct types may not be recursive
expected 'type' after name
expected 'global' or 'constant'
variable expected to be numbered '%
expected '=' in global variable
expected '=' here
expected comdat keyword
expected comdat type
unknown selection kind
redefinition of comdat '$
Expected '!' here
Expected '{' here
DIExpression
expected end of metadata node
unexpected type in metadata definition
Metadata id is already used
Expected 'gv', 'module', or 'typeid' at the start of summary entry
expected ':' at start of summary entry
expected '(' at start of summary entry
found end of file while parsing summary entry
unexpected summary kind
invalid linkage type for alias
symbol with local linkage must have default visibility
expected comma after alias or ifunc's type
invalid aliasee
An alias or ifunc must have pointer type
explicit pointee type doesn't match operand's pointee type
explicit pointee type should be a function type
redefinition of global '@
forward reference and definition of alias have different types
invalid type for global variable
forward reference and definition of global have different types
expected global section string
unknown global variable property!
expected attribute group id
expected '{' here
expected end of attribute group
attribute group has no attributes
unterminated attribute group
cannot have an attribute group reference in an attribute group
invalid use of attribute on a function
invalid use of parameter-only attribute on a function
global variable reference must have pointer type
' defined with type '
expected string constant
expected integer
expected 32-bit integer (too large)
expected localdynamic, initialexec or localexec
expected ')' after thread local model
expected '(' in address space
expected ')' in address space
invalid use of function-only attribute
invalid use of parameter-only attribute
invalid use of attribute on return type
dso_location and DLL-StorageClass mismatch
expected metadata after comma
alignment is not a power of two
huge alignments are not supported yet
expected '('
expected ')'
dereferenceable bytes must be non-zero
expected metadata or 'align'
expected metadata or 'addrspace'
'allocsize' indices can't refer to the same parameter
Expected '(' in syncscope
Expected synchronization scope name
Expected ')' in syncscope
Expected ordering on atomic instruction
stack alignment is not a power of two
expected ',' as start of index list
expected index
expected '>' at end of packed struct
void type only allowed for function results
basic block pointers are invalid
pointers to void are invalid - use i8* instead
pointer to this type is invalid
pointers to void are invalid; use i8* instead
expected '*' in address space
expected '(' in call
expected ',' in argument list
unexpected ellipsis in argument list for 
non-musttail call
musttail call in non-varargs function
expected ')' at end of argument list
expected '...' at end of argument list for musttail call in varargs function
expected ',' in input list
expected '(' in operand bundle
operand bundle set must not be empty
argument can not have void type
invalid type for function argument
invalid function return type
argument name invalid in function type
argument attributes invalid in function type
redefinition of type
forward references to non-struct type
expected '>' in packed struct
invalid element type for struct
expected '}' at end of struct
expected number in address space
expected 'x' after element count
expected ']' to close array
invalid array element type
expected 'x' after the number of columns
expected '>' to close matrix
matrix must have non-zero rows
matrix must have non-zero columns
matrix has too many rows
matrix has too many columns
invalid matrix element type
expected '>' to close vector
vector must have more than 0 elements
too many elements for vector
invalid vector element type
use of undefined value '%
' is not a basic block
invalid use of a non-first-class type
instructions returning void cannot have a name
instruction expected to be numbered '%
instruction forward referenced with type '
multiple definition of local value named '
expected value token
expected end of struct constant
expected end of packed struct
expected end of constant
constant vector must not be empty
vector elements must have integer, pointer or floating point type
vector element #
 is not of type '
expected end of array constant
invalid array element type: 
array element #
expected string
expected comma in inline asm expression
expected constraint string
expected '(' in block address expression
expected comma in block address expression
expected ')' in block address expression
expected basic block name in blockaddress
cannot take blockaddress inside a declaration
referenced value is not a basic block
cannot take address of numeric label after the function is defined
expected '(' after constantexpr cast
expected 'to' in constantexpr cast
expected ')' at end of constantexpr cast
invalid cast opcode for cast from '
' to '
expected '(' in extractvalue constantexpr
expected ')' in extractvalue constantexpr
extractvalue operand must be aggregate type
invalid indices for extractvalue
expected '(' in insertvalue constantexpr
expected comma in insertvalue constantexpr
expected ')' in insertvalue constantexpr
insertvalue operand must be aggregate type
invalid indices for insertvalue
insertvalue operand and field disagree in type: '
' instead of '
expected '(' in compare constantexpr
expected comma in compare constantexpr
expected ')' in compare constantexpr
compare operands must have the same type
fcmp requires floating point operands
icmp requires pointer or integer operands
expected '(' in binary constantexpr
expected comma in binary constantexpr
expected ')' in binary constantexpr
operands of constexpr must have same type
nuw only applies to integer operations
nsw only applies to integer operations
constexpr requires integer operands
constexpr requires fp operands
expected '(' in logical constantexpr
expected comma in logical constantexpr
expected ')' in logical constantexpr
constexpr requires integer or integer vector operands
expected '(' in constantexpr
expected comma after getelementptr's type
expected ')' in constantexpr
base of getelementptr must be a pointer
getelementptr index must be an integer
getelementptr vector index has a wrong number of elements
base element of getelementptr must be sized
invalid getelementptr indices
inrange keyword may not appear on pointer operand
expected three operands to select
expected three operands to shufflevector
invalid operands to shufflevector
expected two operands to extractelement
invalid extractelement operands
expected three operands to insertelement
invalid insertelement operands
global values must be constants
expected comdat variable
expected ')' after comdat var
comdat cannot be unnamed
expected '!' here
DILocation
DIGlobalVariableExpression
GenericDINode
DISubrange
DIEnumerator
DIBasicType
DIDerivedType
DICompositeType
DISubroutineType
DIFile
DICompileUnit
DISubprogram
DILexicalBlock
DILexicalBlockFile
DINamespace
DIModule
DITemplateTypeParameter
DITemplateValueParameter
DIGlobalVariable
DILocalVariable
DILabel
DIObjCProperty
DIImportedEntity
DIMacro
DIMacroFile
expected metadata type
missing required field 'scope'
missing required field 'tag'
missing required field 'count'
missing required field 'name'
missing required field 'value'
unsigned enumerator with negative value
missing required field 'baseType'
missing required field 'types'
missing required field 'filename'
missing required field 'directory'
'checksumkind' and 'checksum' must be provided together
missing 'distinct', required for !DICompileUnit
missing required field 'language'
missing required field 'file'
missing 'distinct', required for !DISubprogram when 'isDefinition'
missing required field 'discriminator'
missing required field 'type'
missing required field 'line'
expected '(' here
invalid DWARF op '
expected unsigned integer
element too large, limit is 
expected ')' here
missing required field 'var'
missing required field 'expr'
invalid metadata-value-metadata roundtrip
expected metadata operand
functions are not values, refer to them as pointers
invalid use of function-local name
invalid type for inline asm constraint string
integer constant must have integer type
floating point constant invalid for type
floating point constant does not have type '
null must be a pointer type
invalid type for undef constant
invalid empty array initializer
invalid type for null constant
invalid type for none constant
constant expression type mismatch
initializer with struct type has wrong # elements
packed'ness of initializer and type don't match
element 
 of struct initializer doesn't match struct element type
expected a basic block
invalid linkage for function definition
invalid linkage for function declaration
invalid function linkage type
function expected to be numbered '%
expected function name
expected '(' in function argument list
'builtin' attribute not valid on function
functions with 'sret' argument must return void
invalid forward reference to function as global value!
invalid forward reference to function '
' with wrong type!
invalid redefinition of function '
redefinition of function '@
type of definition and forward reference of '@
' disagree
redefinition of argument '%
expected '{' in function body
function body requires at least one basic block
unable to create block named '
expected '=' after instruction id
expected '=' after instruction name
found end of file when expecting more instructions
expected instruction opcode
fast-math-flags specified for select without floating-point scalar or vector return type
expected fcmp predicate (e.g. 'oeq')
expected icmp predicate (e.g. 'eq')
value doesn't match function result type '
branch condition must have 'i1' type
expected ',' after branch condition
expected ',' after true destination
expected ',' after switch condition
expected '[' with switch table
switch condition must have integer type
expected ',' after case value
duplicate case value in switch
case value is not a constant integer
expected ',' after indirectbr address
expected '[' with indirectbr
indirectbr address must have pointer type
expected ']' at end of block list
expected 'to' in invoke
expected 'unwind' in invoke
Invalid result type for LLVM function
too many arguments specified
argument is not of expected type '
not enough parameters specified for call
invoke instructions may not have an alignment
expected '[' in catchpad/cleanuppad
expected 'from' after cleanupret
expected 'unwind' in cleanupret
expected 'caller' in cleanupret
expected 'from' after catchret
expected 'to' in catchret
expected 'within' after catchswitch
expected scope value for catchswitch
expected '[' with catchswitch labels
expected ']' after catchswitch labels
expected 'unwind' after catchswitch scope
expected 'caller' in catchswitch
expected 'within' after catchpad
expected scope value for catchpad
expected 'within' after cleanuppad
expected scope value for cleanuppad
expected ',' in arithmetic operation
invalid operand type for instruction
expected ',' in logical operation
instruction requires integer or integer vector operands
expected ',' after compare value
icmp requires integer operands
expected 'to' after cast value
expected ',' after select condition
expected ',' after select value
expected ',' after vaarg operand
va_arg requires operand with first class type
expected ',' after extract value
expected ',' after insertelement value
expected ',' after shuffle mask
expected ',' after shuffle value
invalid shufflevector operands
expected '[' in phi value list
expected ']' in phi value list
phi node must have first class type
'catch' clause has an invalid type
'filter' clause has an invalid type
clause argument must be a constant
expected 'tail call', 'musttail call', or 'notail call'
fast-math-flags specified for call without floating-point scalar or vector return type
call instructions may not have an alignment
invalid type for alloca
element count must have integer type
expected comma after load's type
load operand must be a pointer to a first class type
atomic load must have explicit non-zero alignment
atomic load cannot use Release ordering
expected ',' after store operand
store operand must be a pointer
store operand must be a first class value
stored value and pointer type do not match
atomic store must have explicit non-zero alignment
atomic store cannot use Acquire ordering
expected ',' after cmpxchg address
expected ',' after cmpxchg cmp operand
cmpxchg cannot be unordered
cmpxchg failure argument shall be no stronger than the success argument
cmpxchg operand must be a pointer
compare value and pointer type do not match
new value and pointer type do not match
cmpxchg operand must be a first class value
expected binary operation in atomicrmw
expected ',' after atomicrmw address
atomicrmw cannot be unordered
atomicrmw operand must be a pointer
atomicrmw value and pointer type do not match
 operand must be an integer or floating point type
 operand must be a floating point type
 operand must be an integer
atomicrmw operand must be power-of-two byte-sized integer
fence cannot be unordered
fence cannot be monotonic
expected comma after insertvalue operand
value has no uses
value only has one use
wrong number of indexes, expected 
expected non-empty list of uselistorder indexes
expected '}' here
expected >= 2 uselistorder indexes
expected distinct uselistorder indexes in range [0, size)
expected uselistorder indexes to change the order
expected uselistorder directive
expected comma in uselistorder directive
expected comma in uselistorder_bb directive
expected function name in uselistorder_bb
invalid function forward reference in uselistorder_bb
invalid declaration in uselistorder_bb
invalid numeric label in uselistorder_bb
expected basic block name in uselistorder_bb
invalid basic block in uselistorder_bb
expected basic block in uselistorder_bb
expected ':' here
expected 'path' here
expected ',' here
expected 'hash' here
expected 'name' here
expected 'summary' here
expected 'typeTestRes' here
expected 'kind' here
unexpected TypeTestResolution kind
expected 'sizeM1BitWidth' here
expected ':'
expected optional TypeTestResolution field
expected 'wpdResolutions' here
expected 'offset' here
expected 'wpdRes' here
unexpected WholeProgramDevirtResolution kind
expected optional WholeProgramDevirtResolution field
expected 'resByArg' here
expected 'byArg here
unexpected WholeProgramDevirtResolution::ByArg kind
expected optional whole program devirt field
expected 'args' here
expected name or guid tag
expected 'summaries' here
expected summary type
expected 'insts' here
expected optional function summary field
expected 'aliasee' here
expected ':' in funcFlags
expected '(' in funcFlags
expected function flag type
expected ')' in funcFlags
expected ':' in calls
expected '(' in calls
expected 'callee' in call
expected relbf
expected ')' in call
expected ')' in calls
invalid call edge hotness
expected ':' in refs
expected '(' in refs
expected ')' in refs
expected '(' in typeIdInfo
invalid typeIdInfo list type
expected ')' in typeIdInfo
expected 'guid' here
expected 'linkage' here
expected 'notEligibleToImport' here
expected 'live' here
expected 'dsoLocal' here
expected 'module' here
expected module ID
expected GV ID
expected type
expected field label here
invalid field '
field '
' cannot be specified more than once
value for '
' too large, limit is 
' cannot be null
operands
expected DWARF tag
invalid DWARF tag
' cannot be empty
expected signed integer
' too small, limit is 
expected 'true' or 'false'
expected DWARF type attribute encoding
invalid DWARF type attribute encoding
expected debug info flag
invalid debug info flag flag '
expected DWARF language
invalid DWARF language
expected DWARF calling convention
invalid DWARF calling convention
checksumkind
expected emission kind
expected DWARF virtuality code
invalid DWARF virtuality code
expected DWARF macinfo type
invalid DWARF macinfo type
invalid hexadecimal floating-point constant: expected at least one significand digit
invalid hexadecimal floating-point constant: expected exponent part 'p'
invalid hexadecimal floating-point constant: expected at least one exponent digit
unterminated comment
invalid binary number
invalid hexdecimal number
invalid decimal number
invalid hexadecimal number
invalid octal number
unterminated single quote
single quote way too long
unterminated string constant
invalid character in input
asm-macro-max-nesting-depth
The maximum nesting depth allowed for assembly macros.
missing expression
Recursive use of '
redefinition of '
invalid assignment to '
invalid reassignment of non-absolute variable '
.set
.equ
.equiv
.ascii
.asciz
.string
.byte
.short
.value
.2byte
.long
.int
.4byte
.quad
.8byte
.octa
.single
.float
.double
.align
.align32
.balign
.balignw
.balignl
.p2align
.p2alignw
.p2alignl
.org
.fill
.zero
.extern
.globl
.global
.lazy_reference
.no_dead_strip
.symbol_resolver
.private_extern
.reference
.weak_definition
.weak_reference
.weak_def_can_be_hidden
.comm
.common
.lcomm
.abort
.include
.incbin
.code16
.code16gcc
.rept
.rep
.irp
.irpc
.endr
.bundle_align_mode
.bundle_lock
.bundle_unlock
.ifeq
.ifge
.ifgt
.ifle
.iflt
.ifne
.ifb
.ifnb
.ifc
.ifeqs
.ifnc
.ifnes
.ifdef
.ifndef
.ifnotdef
.elseif
.else
.end
.endif
.skip
.space
.file
.line
.loc
.stabs
.cv_file
.cv_func_id
.cv_loc
.cv_linetable
.cv_inline_linetable
.cv_inline_site_id
.cv_def_range
.cv_stringtable
.cv_filechecksums
.cv_filechecksumoffset
.cv_fpo_data
.sleb128
.uleb128
.cfi_sections
.cfi_startproc
.cfi_endproc
.cfi_def_cfa
.cfi_def_cfa_offset
.cfi_adjust_cfa_offset
.cfi_def_cfa_register
.cfi_offset
.cfi_rel_offset
.cfi_personality
.cfi_lsda
.cfi_remember_state
.cfi_restore_state
.cfi_same_value
.cfi_restore
.cfi_escape
.cfi_return_column
.cfi_signal_frame
.cfi_undefined
.cfi_register
.cfi_window_save
.macros_on
.macros_off
.macro
.exitm
.endm
.endmacro
.purgem
.err
.error
.warning
.altmacro
.noaltmacro
.reloc
.dc.a
.dc.b
.dc.d
.dc.l
.dc.s
.dc.w
.dc.x
.dcb
.dcb.b
.dcb.d
.dcb.l
.dcb.s
.dcb.w
.dcb.x
.ds.b
.ds.d
.ds.l
.ds.p
.ds.s
.ds.w
.ds.x
.print
.addrsig
.addrsig_sym
unmatched .ifs or .elses
unassigned file number: 
 for .file directives
assembler local symbol '
' not defined
directional label undefined
unexpected token at start of statement
invalid use of pseudo-symbol '.' as a label
 not currently supported for this target
unknown directive
__emit
_EMIT
__EMIT
parsed instruction: [
unexpected token in '.if' directive
unexpected token in '.ifb' directive
unexpected token in '.ifc' directive
expected string parameter for '.ifeqs' directive
expected string parameter for '.ifnes' directive
expected comma after first string for '.ifeqs' directive
expected comma after first string for '.ifnes' directive
expected identifier after '.ifdef'
unexpected token in '.ifdef'
Encountered a .elseif that doesn't follow an .if or  an .elseif
unexpected token in '.elseif' directive
unexpected token in '.else' directive
Encountered a .else that doesn't follow  an .if or an .elseif
unexpected token in '.endif' directive
Encountered a .endif that doesn't follow an .if or .else
macros cannot be nested more than 
 levels deep.
 Use -asm-macro-max-nesting-depth to increase this limit.
.endmacro
<instantiation>
invalid argument identifier for formal argument
expected '=' after formal parameter identifier
cannot mix positional and keyword arguments
expected absolute expression
parameter named '
' does not exist for macro '
missing value for required parameter '
' in macro '
too many positional arguments
unexpected token in macro instantiation
unbalanced parentheses in macro argument
Wrong number of arguments
expected identifier
 in '
' directive
out of range literal value
unknown token in expression
unexpected token in directive
infinity
invalid floating point literal
 in directive
p2align directive with no operand(s) is ignored
invalid alignment value
alignment must be a power of 2
alignment directive can never be satisfied in this many bytes, ignoring maximum bytes expression
maximum bytes expression exceeds alignment and has no effect
 in '.org' directive
unexpected token in '.fill' directive
'.fill' directive with negative size has no effect
'.fill' directive with size greater than 8 has been truncated to 8
'.fill' directive pattern has been truncated to 32-bits
unexpected token in '.zero' directive
non-local symbol required
unable to emit symbol attribute
expected identifier in directive
alignment not supported on this target
unexpected token in '.comm' or '.lcomm' directive
invalid '.comm' or '.lcomm' directive size, can't be less than zero
invalid '.comm' or '.lcomm' directive alignment, can't be less than zero
unexpected token in '.abort' directive
.abort detected. Assembly stopping.
.abort '
' detected. Assembly stopping.
expected string in '.include' directive
unexpected token in '.include' directive
Could not find include file '
expected string in '.incbin' directive
unexpected token in '.incbin' directive
skip is negative
Could not find incbin file '
negative count has no effect
unexpected token in '
Count is negative
no matching '.endr' in definition
unexpected token in '.endr' directive
.endr
expected identifier in '.irp' directive
expected comma in '.irp' directive
expected End of Statement
expected identifier in '.irpc' directive
expected comma in '.irpc' directive
unexpected token in '.irpc' directive
expected end of statement
unmatched '.endr' directive
unexpected token after expression in '.bundle_align_mode' directive
invalid bundle alignment size (expected between 0 and 30)
invalid option for '.bundle_lock' directive
unexpected token after '.bundle_lock' directive option
unexpected token in '.bundle_unlock' directive
in '
negative file number
unexpected token in '.file' directive
explicit path specified, but no file number
MD5 checksum specified, but no file number
source specified, but no file number
file 0 not supported prior to DWARF-5
inconsistent use of MD5 checksums
unexpected token in '.line' directive
unexpected token in '.loc' directive
file number less than one in '.loc' directive
unassigned file number in '.loc' directive
line number less than zero in '.loc' directive
column position less than zero in '.loc' directive
is_stmt value not 0 or 1
is_stmt value not the constant value of 0 or 1
isa number less than zero
isa number not a constant value
unknown sub-directive in '.loc' directive
unsupported directive '.stabs'
expected file number in '.cv_file' directive
file number less than one
unexpected token in '.cv_file' directive
expected checksum kind in '.cv_file' directive
file number already allocated
unexpected token in '.cv_func_id' directive
function id already allocated
expected function id in '
expected function id within range [0, UINT_MAX)
expected 'within' identifier in '.cv_inline_site_id' directive
expected 'inlined_at' identifier in '.cv_inline_site_id' directive
expected line number after 'inlined_at'
unexpected token in '.cv_inline_site_id' directive
expected integer in '
file number less than one in '
unassigned file number in '
line number less than zero in '.cv_loc' directive
column position less than zero in '.cv_loc' directive
unexpected token in '.cv_loc' directive
unknown sub-directive in '.cv_loc' directive
unexpected token in '.cv_linetable' directive
expected SourceField in '.cv_inline_linetable' directive
File id less than zero in '.cv_inline_linetable' directive
expected SourceLineNum in '.cv_inline_linetable' directive
Line number less than zero in '.cv_inline_linetable' directive
Expected End of Statement
expected symbol name
unexpected tokens
 in '.cv_fpo_data' directive
Expected an identifier
 in '.cfi_startproc' directive
unsupported encoding.
unexpected token in '.cfi_signal_frame'
expected identifier in '.macro' directive
Vararg parameter '
' should be last one in the list of parameters.
macro '
' has multiple parameters named '
missing parameter qualifier for '
 is not a valid parameter qualifier for '
pointless default value for required parameter '
no matching '.endmacro' in definition
' is already defined
macro defined with named parameters which are not used in macro body, possible positional parameter found in body which will have no effect
unexpected '
' in file, no current macro definition
expected identifier in '.purgem' directive
unexpected token in '.purgem' directive
' is not defined
unexpected token in '.end' directive
.err encountered
.error directive invoked in source file
.error argument must be a string
.warning directive invoked in source file
.warning argument must be a string
expected end of statement in '.warning' directive
expression is not a constant value
expression is negative
expected comma
expected relocation name
expression must be relocatable
unexpected token in .reloc directive
unknown relocation name
' directive with negative repeat count has no effect
literal value out of range for directive
expected double quoted string after .print
expected identifier in '.addrsig_sym' directive
unexpected expression in _emit
unexpected expression in align
literal value not a power of two greater then zero
 * $$
 + $$
byte ptr 
word ptr 
dword ptr 
qword ptr 
xword ptr 
xmmword ptr 
ymmword ptr 
.even
while in macro instantiation
unexpected backslash at end of string
invalid octal escape sequence (out of range)
invalid escape sequence (unrecognized character)
unexpected symbol modifier following '@'
invalid variant '
invalid modifier '
' (no symbols present)
invalid variant on expression '
' (already modified)
invalid token in expression
expected symbol variant after '@'
unexpected token in variant, expected ')'
expected a symbol reference
unexpected modifier on variable reference
brackets expression not supported on this target
expected '(' after operator
expected ')' in parentheses expression
expected ']' in brackets expression
expected section directive before assembly directive
.def
.scl
.endef
.secrel32
.symidx
.safeseh
.secidx
.linkonce
.rva
.seh_proc
.seh_endproc
.seh_startchained
.seh_endchained
.seh_handler
.seh_handlerdata
.seh_pushreg
.seh_setframe
.seh_stackalloc
.seh_savereg
.seh_savexmm
.seh_pushframe
.seh_endprologue
unexpected token in section switching directive
expected comdat type such as 'discard' or 'largest' after protection bits
expected comma in directive
conflicting section flags 'b' and 'd'.
unrecognized COMDAT type '
invalid '.secrel32' directive offset, can't be less than zero or greater than std::numeric_limits<uint32_t>::max()
cannot make section associative with .linkonce
section '
' is already linkonce
invalid '.rva' directive offset, can't be less than -2147483648 or greater than 2147483647
you must specify one or both of @unwind or @except
a handler attribute must begin with '@'
expected @unwind or @except
register can't be represented in SEH unwind info
register number is too high
you must specify a stack pointer offset
you must specify an offset on the stack
expected @code
.alt_entry
.desc
.indirect_symbol
.lsym
.subsections_via_symbols
.dump
.load
.secure_log_unique
.secure_log_reset
.zerofill
.data_region
.end_data_region
.const
.const_data
.constructor
.cstring
.destructor
.dyld
.fvmlib_init0
.fvmlib_init1
.lazy_symbol_pointer
.linker_option
.dyld_lib
.literal16
.literal4
.literal8
.mod_init_func
.mod_term_func
.non_lazy_symbol_pointer
.thread_local_variable_pointer
.objc_cat_cls_meth
.objc_cat_inst_meth
.objc_category
.objc_class
.objc_class_names
.objc_class_vars
.objc_cls_meth
.objc_cls_refs
.objc_inst_meth
.objc_instance_vars
.objc_message_refs
.objc_meta_class
.objc_meth_var_names
.objc_meth_var_types
.objc_module_info
.objc_protocol
.objc_selector_strs
.objc_string_object
.objc_symbols
.picsymbol_stub
.static_const
.static_data
.symbol_stub
.thread_init_func
.tlv
.bridgeos_version_min
.watchos_version_min
.tvos_version_min
.ios_version_min
.macosx_version_min
.build_version
.alt_entry must preceed symbol definition
unexpected token in '.desc' directive
indirect symbol not in a symbol pointer or stub section
expected identifier in .indirect_symbol directive
non-local symbol required in directive
unable to emit indirect symbol attribute for: 
unexpected token in '.indirect_symbol' directive
unexpected token in '.lsym' directive
directive '.lsym' is unsupported
unexpected token in '.subsections_via_symbols' directive
expected string in '.dump' or '.load' directive
unexpected token in '.dump' or '.load' directive
ignoring directive .dump for now
ignoring directive .load for now
expected identifier after '.section' directive
unexpected token in '.section' directive
section "
" is deprecated
change section name to "
unexpected token in '.secure_log_unique' directive
.secure_log_unique specified multiple times
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
can't open secure log file: 
unexpected token in '.secure_log_reset' directive
unexpected token in '.tbss' directive
invalid '.tbss' directive size, can't be less thanzero
invalid '.tbss' alignment, can't be lessthan zero
expected segment name after '.zerofill' directive
expected section name after comma in '.zerofill' directive
unexpected token in '.zerofill' directive
invalid '.zerofill' directive size, can't be less than zero
invalid '.zerofill' directive alignment, can't be less than zero
expected region type after '.data_region' directive
unknown region type in '.data_region' directive
unexpected token in '.end_data_region' directive
__constructor
__destructor
__dyld
__fvmlib_init0
__fvmlib_init1
expected string in '
unexpected token in '.dyld_lib' directive
__mod_init_func
__mod_term_func
__OBJC
__cat_cls_meth
__cat_inst_meth
__category
__class
__class_vars
__cls_meth
__cls_refs
__inst_meth
__instance_vars
__message_refs
__meta_class
__module_info
__protocol
__selector_strs
__string_object
__symbols
__picsymbol_stub
__static_const
__static_data
__symbol_stub
invalid OS update specifier, comma expected
OS update
invalid 
 major version number, integer expected
 major version number
 minor version number required, comma expected
 minor version number, integer expected
 minor version number
 version number, integer expected
 version number
SDK subminor
 used while targeting 
overriding previous version directive
previous definition is here
platform name expected
unknown platform name
version number required, comma expected
 in '.build_version' directive
.data.rel
.section
.pushsection
.popsection
.size
.previous
.type
.ident
.symver
.version
.weakref
.weak
.local
.protected
.internal
.hidden
.subsection
.cg_profile
expected string in directive
unknown flag
setting incorrect section attributes for 
Section cannot specifiy a group name while also acting as a member of the last group
Mergeable section must specify the type
Group section must specify the type
.note
.init_array.
.bss.
.tbss.
.fini_array.
.preinit_array.
unknown section type
DWARF2 only supports one section per compilation unit
.rodata.cst
.rodata.
.text.
.data.
.tdata.
expected '@<type>', '%<type>' or "<type>"
expected '%<type>' or "<type>"
expected the entry size
entry size must be positive
expected group name
invalid group name
invalid linkage
Linkage must be 'comdat'
expected metadata symbol
invalid metadata symbol
symbol is not in a section: 
expected 'unique'
expected commma
unique id must be positive
unique id is too large
.popsection without corresponding .pushsection
.previous without corresponding .section
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '%<type>' or "<type>"
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '@<type>', '%<type>' or "<type>"
expected symbol type in directive
unsupported attribute in '.type' directive
unexpected token in '.type' directive
unexpected token in '.ident' directive
expected a comma
expected a '@' in the name
unexpected token in '.version' directive
expected integer count in '.cg_profile' directive
unexpected token
expected assembly-time absolute expression
invalid number of bytes
invalid .org offset '
' (at offset '
Fragment can't be larger than a bundle size
Padding cannot exceed 255 bytes
<MCAssembler
  Sections:[
    
    
  Symbols:[
           
, Index:
checksum_offset
as-secure-log-file-name
As secure log file name (initialized from AS_SECURE_LOG_FILE env variable)
AS_SECURE_LOG_FILE
inconsistent use of embedded source
<<invalid>>
<<none>>
DTPOFF
DTPREL
GOTOFF
GOTREL
GOTPCREL
GOTTPOFF
INDNTPOFF
NTPOFF
GOTNTPOFF
TLSGD
TLSLD
TLSLDM
TPOFF
TPREL
tlscall
tlsdesc
TLVP
TLVPPAGE
TLVPPAGEOFF
PAGE
PAGEOFF
GOTPAGE
GOTPAGEOFF
SECREL32
SIZE
WEAKREF
ABS8
GOT_PREL
target1
target2
prel31
sbrel
tlsldo
tlsdescseq
hlo8
diff8
diff16
diff32
high
higha
higher
highera
highest
highesta
got@l
got@h
got@ha
tocbase
toc@l
toc@h
toc@ha
dtpmod
tprel@l
tprel@h
tprel@ha
tprel@high
tprel@higha
tprel@higher
tprel@highera
tprel@highest
tprel@highesta
dtprel@l
dtprel@h
dtprel@ha
dtprel@high
dtprel@higha
dtprel@higher
dtprel@highera
dtprel@highest
dtprel@highesta
got@tprel
got@tprel@l
got@tprel@h
got@tprel@ha
got@dtprel
got@dtprel@l
got@dtprel@h
got@dtprel@ha
got@tlsgd
got@tlsgd@l
got@tlsgd@h
got@tlsgd@ha
tlsgd
got@tlsld
got@tlsld@l
got@tlsld@h
got@tlsld@ha
tlsld
local
IMGREL
PCREL
LO16
HI16
GPREL
GDGOT
LDGOT
GDPLT
LDPLT
IEGOT
TYPEINDEX
gotpcrel32@lo
gotpcrel32@hi
rel32@lo
rel32@hi
rel64
agx_lo
agx_hi
agx_ss
agx_got64
agx_got32
agx_gotss
agx_got_tls
<MCFixup
 Offset:
 Value:
 Kind:
MCAlignFragment
MCDataFragment
MCCompactEncodedInstFragment
MCFillFragment
MCRelaxableFragment
MCOrgFragment
MCDwarfFragment
MCDwarfCallFrameFragment
MCLEBFragment
MCPaddingFragment
MCSymbolIdFragment
MCCVInlineLineTableFragment
MCCVDefRangeTableFragment
MCDummyFragment
<MCFragment 
 LayoutOrder:
 HasInstructions:
 BundlePadding:
 (emit nops)
       
 Alignment:
 ValueSize:
 MaxBytesToEmit:
 Contents:[
 bytes)
       
 Fixups:[
                
 NumValues:
 Inst:
 AddrDelta:
 LineDelta:
 Signed:
 PaddingPoliciesMask:
 IsInsertionPoint:
 Size:
 InstSize:
 Sym:
 RangeStart:
 RangeEnd:
unable to evaluate offset for variable '
unable to evaluate offset to undefined symbol '
<MCOperand 
INVALID
Reg:
Imm:
FPImm:
Expr:(
Inst:(
UNDEFINED
<MCInst 
<MCInst #
__TEXT
__eh_frame
__text
__DATA
__data
__thread_data
__thread_bss
__thread_vars
__thread_init
__cstring
__ustring
__literal4
__literal8
__literal16
__const
__textcoal_nt
__const_coal
__datacoal_nt
__common
__bss
__la_symbol_ptr
__nl_symbol_ptr
__thread_ptr
__gcc_except_tab
__LD
__compact_unwind
__DWARF
__debug_names
debug_names_begin
__apple_names
names_begin
__apple_objc
objc_begin
__apple_namespac
namespac_begin
__apple_types
types_begin
__swift_ast
__debug_abbrev
section_abbrev
__debug_info
section_info
__debug_line
section_line
__debug_line_str
section_line_str
__debug_frame
__debug_pubnames
__debug_pubtypes
__debug_gnu_pubn
__debug_gnu_pubt
__debug_str
info_string
__debug_str_offs
section_str_off
__debug_loc
section_debug_loc
__debug_aranges
__debug_ranges
debug_range
__debug_rnglists
__debug_macinfo
debug_macinfo
__debug_inlined
__debug_cu_index
__debug_tu_index
__LLVM_STACKMAPS
__llvm_stackmaps
__LLVM_FAULTMAPS
__llvm_faultmaps
.bss
.text
.data
.rodata
.tdata
.tbss
.data.rel.ro
.rodata.cst4
.rodata.cst8
.rodata.cst16
.rodata.cst32
.gcc_except_table
.debug_abbrev
.debug_info
.debug_line
.debug_line_str
.debug_frame
.debug_pubnames
.debug_pubtypes
.debug_gnu_pubnames
.debug_gnu_pubtypes
.debug_str
.debug_loc
.debug_aranges
.debug_ranges
.debug_macinfo
.debug_names
.apple_names
.apple_objc
.apple_namespaces
.apple_types
.debug_str_offsets
.debug_addr
.debug_rnglists
.debug_info.dwo
.debug_types.dwo
.debug_abbrev.dwo
.debug_str.dwo
.debug_line.dwo
.debug_loc.dwo
.debug_str_offsets.dwo
.debug_rnglists.dwo
.debug_cu_index
.debug_tu_index
.llvm_stackmaps
.llvm_faultmaps
.eh_frame
.stack_sizes
.rdata
.debug$S
.debug$T
.debug$H
section_info_dwo
section_types_dwo
section_abbrev_dwo
skel_string
skel_loc
section_str_off_dwo
addr_sec
.drectve
.pdata
.xdata
.sxdata
.gfids$y
.tls$
Cannot initialize MC for non-Windows COFF object files.
Cannot initialize MC for MetalLib object files.
Cannot initialize MC for unknown object file format.
<MCSection
 Fragments:[
      
      
.linkonce
one_only
discard
same_size
same_contents
associative
newest
.section
,#alloc
,#execinstr
,#write
,#exclude
,#tls
init_array
fini_array
preinit_array
nobits
progbits
0x7000001e
llvm_odrtab
llvm_linker_options
llvm_call_graph_profile
unsupported type 0x
 for section 
,comdat
,unique,
.subsection
0123456789_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
,none,
mach-o section specifier requires a segment whose length is between 1 and 16 characters
mach-o section specifier requires a segment and section separated by a comma
mach-o section specifier requires a section whose length is between 1 and 16 characters
mach-o section specifier uses an unknown section type
mach-o section specifier of type 'symbol_stubs' requires a size specifier
mach-o section specifier has invalid attribute
mach-o section specifier cannot have a stub size specified because it does not have type 'symbol_stubs'
mach-o section specifier has a malformed stub size
regular
S_REGULAR
S_ZEROFILL
cstring_literals
S_CSTRING_LITERALS
4byte_literals
S_4BYTE_LITERALS
8byte_literals
S_8BYTE_LITERALS
literal_pointers
S_LITERAL_POINTERS
non_lazy_symbol_pointers
S_NON_LAZY_SYMBOL_POINTERS
lazy_symbol_pointers
S_LAZY_SYMBOL_POINTERS
symbol_stubs
S_SYMBOL_STUBS
mod_init_funcs
S_MOD_INIT_FUNC_POINTERS
mod_term_funcs
S_MOD_TERM_FUNC_POINTERS
coalesced
S_COALESCED
S_GB_ZEROFILL
interposing
S_INTERPOSING
16byte_literals
S_16BYTE_LITERALS
S_DTRACE_DOF
S_LAZY_DYLIB_SYMBOL_POINTERS
thread_local_regular
S_THREAD_LOCAL_REGULAR
thread_local_zerofill
S_THREAD_LOCAL_ZEROFILL
thread_local_variables
S_THREAD_LOCAL_VARIABLES
thread_local_variable_pointers
S_THREAD_LOCAL_VARIABLE_POINTERS
thread_local_init_function_pointers
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
pure_instructions
S_ATTR_PURE_INSTRUCTIONS
no_toc
S_ATTR_NO_TOC
strip_static_syms
S_ATTR_STRIP_STATIC_SYMS
no_dead_strip
S_ATTR_NO_DEAD_STRIP
live_support
S_ATTR_LIVE_SUPPORT
self_modifying_code
S_ATTR_SELF_MODIFYING_CODE
debug
S_ATTR_DEBUG
S_ATTR_SOME_INSTRUCTIONS
S_ATTR_EXT_RELOC
S_ATTR_LOC_RELOC
unsupported directive in streamer
line_table_start
this directive must appear between .cfi_startproc and .cfi_endproc directives
parent function id not introduced by .cv_func_id or .cv_inline_site_id
function id not introduced by .cv_func_id or .cv_inline_site_id
all .cv_loc directives for a function must be in the same section
invalid symbol redefinition
starting new .cfi frame before finishing the previous one
.seh_* directives are not supported on this target
.seh_ directive must appear within an active frame
Starting a function before ending the previous one!
Not all chained regions terminated!
End of a chained region outside a chained region!
Chained unwind areas can't have handlers!
Don't know what kind of handler this is!
frame register and offset can be set at most once
offset is not a multiple of 16
frame offset must be less than or equal to 240
stack allocation size must be non-zero
stack allocation size is not a multiple of 8
register save offset is not 8 byte aligned
If present, PushMachFrame must be the first UOP
EmitRawText called on an MCStreamer that doesn't support it,  something must not be fully mc'ized
Unfinished frame!
Symbol name with unsupported characters
 Off=
, Sym=
, Addend=
, FixupSection=
disable-basicaa
verify-assumption-cache
Enable verification of assumption cache
basicaa-recphi
view-block-freq-propagation-dags
Pop up a window to show a dag displaying how block frequencies propagation through the CFG.
do not display graphs.
fraction
display a graph using the fractional block frequency representation.
integer
display a graph using the raw integer fractional block frequency representation.
display a graph using the real profile count if available.
view-bfi-func-name
The option to specify the name of the function whose CFG will be displayed.
view-hot-freq-percent
An integer in percent used to specify the hot blocks/edges to be displayed in red: a block or edge whose frequency is no less than the max frequency of the function multiplied by this percent.
pgo-view-counts
A boolean option to show CFG dag or text with block profile counts and branch probabilities right after PGO profile annotation step. The profile counts are computed using branch probabilities from the runtime profile data and block frequency propagation algorithm. To view the raw counts from the profile, use option -pgo-view-raw-counts instead. To limit graph display to only one function, use filtering option -view-bfi-func-name.
do not show.
graph
show a graph.
text
show in text.
print-bfi
Print the block frequency info.
print-bfi-func-name
The option to specify the name of the function whose block frequency info is printed.
print-bpi
Print the branch probability info.
print-bpi-func-name
The option to specify the name of the function whose branch probability info is printed.
Call graph node for function: '
Call graph node <<null function>>
>>  #uses=
  CS<
> calls 
function '
<<null function>><<
air.normalize_function_constant_predicate
acos
asin
atan
atan2
acosf
asinf
atanf
atan2f
cosh
coshf
fabs
fabsf
sinh
sinhf
tanh
tanf
tanhf
__acos_finite
__acosf_finite
__asin_finite
__asinf_finite
__atan2_finite
__atan2f_finite
__cosh_finite
__coshf_finite
__sinh_finite
__sinhf_finite
da-delinearize
Try to delinearize array references.
 Empty
 Any
 Point is <
 Distance is 
*X + 
*Y = 
 Line is 
enable-unsafe-globalsmodref-alias-results
icp-remaining-percent-threshold
The percentage threshold against remaining unpromoted indirect call count for the promotion
icp-total-percent-threshold
The percentage threshold against total count for the promotion
icp-max-prom
Max number of promotions for a single indirect call callsite
available-load-scan-limit
Use this to specify the default maximum number of instructions to scan backward from a given instruction, when searching for available loaded value
Loop at depth 
 containing: 
<header>
<latch>
<exiting>
verify-loop-info
Verify loop info (time consuming)
memdep-block-scan-limit
The number of instructions to scan in a block in memory dependency analysis (default = 100)
memdep-block-number-limit
The number of blocks to scan during memory dependency analysis (default = 1000)
force-summary-edges-cold
Force all edges in the function summary to cold
None.
all-non-critical
All non-critical edges.
All edges.
Cannot find option named '
enable-objc-arc-opts
enable/disable all ARC Optimizations
PHITransAddr: null
PHITransAddr: 
  Input #
 is 
profile-summary-cutoff-hot
A count is hot if it exceeds the minimum count to reach this percentile of total counts.
profile-summary-cutoff-cold
A count is cold if it is below the minimum count to reach this percentile of total counts.
If the sample profile is accurate, we will mark all un-sampled callsite as cold. Otherwise, treat un-sampled callsites as if we have no profile.
profile-summary-huge-working-set-size-threshold
The code working set size is considered huge if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
scalar-evolution-max-iterations
Maximum number of iterations SCEV will symbolically execute a constant derived loop
verify-scev
Verify ScalarEvolution's backedge taken counts (slow)
verify-scev-maps
Verify no dangling value in ScalarEvolution's ExprValueMap (slow)
scev-mulops-inline-threshold
Threshold for inlining multiplication operands into a SCEV
scev-addops-inline-threshold
Threshold for inlining addition operands into a SCEV
scalar-evolution-max-scev-compare-depth
Maximum depth of recursive SCEV complexity comparisons
scalar-evolution-max-scev-operations-implication-depth
Maximum depth of recursive SCEV operations implication analysis
scalar-evolution-max-value-compare-depth
Maximum depth of recursive value complexity comparisons
scalar-evolution-max-arith-depth
Maximum depth of recursive arithmetics
scalar-evolution-max-constant-evolving-depth
Maximum depth of recursive constant evolving
scalar-evolution-max-ext-depth
Maximum depth of recursive SExt/ZExt
scalar-evolution-max-add-rec-size
Max coefficients in AddRec during evolving
(trunc 
(zext 
(sext 
nuw><
nsw><
nw><
 umax 
 smax 
<nuw>
<nsw>
 /u 
sizeof(
alignof(
offsetof(
***COULDNOTCOMPUTE***
Equal predicate: 
 == 
 Added Flags: 
<nusw>
<nssw>
vector-library
Vector functions library
No vector functions library
Accelerate
Accelerate framework
SVML
Intel SVML library
??2@YAPAXI@Z
??2@YAPAXIABUnothrow_t@std@@@Z
??2@YAPEAX_K@Z
??2@YAPEAX_KAEBUnothrow_t@std@@@Z
??3@YAXPAX@Z
??3@YAXPAXABUnothrow_t@std@@@Z
??3@YAXPAXI@Z
??3@YAXPEAX@Z
??3@YAXPEAXAEBUnothrow_t@std@@@Z
??3@YAXPEAX_K@Z
??_U@YAPAXI@Z
??_U@YAPAXIABUnothrow_t@std@@@Z
??_U@YAPEAX_K@Z
??_U@YAPEAX_KAEBUnothrow_t@std@@@Z
??_V@YAXPAX@Z
??_V@YAXPAXABUnothrow_t@std@@@Z
??_V@YAXPAXI@Z
??_V@YAXPEAX@Z
??_V@YAXPEAXAEBUnothrow_t@std@@@Z
??_V@YAXPEAX_K@Z
_IO_getc
_IO_putc
_ZdaPv
_ZdaPvRKSt9nothrow_t
_ZdaPvSt11align_val_t
_ZdaPvSt11align_val_tRKSt9nothrow_t
_ZdaPvj
_ZdaPvm
_ZdlPv
_ZdlPvRKSt9nothrow_t
_ZdlPvSt11align_val_t
_ZdlPvSt11align_val_tRKSt9nothrow_t
_ZdlPvj
_ZdlPvm
_Znaj
_ZnajRKSt9nothrow_t
_ZnajSt11align_val_t
_ZnajSt11align_val_tRKSt9nothrow_t
_Znam
_ZnamRKSt9nothrow_t
_ZnamSt11align_val_t
_ZnamSt11align_val_tRKSt9nothrow_t
_Znwj
_ZnwjRKSt9nothrow_t
_ZnwjSt11align_val_t
_ZnwjSt11align_val_tRKSt9nothrow_t
_Znwm
_ZnwmRKSt9nothrow_t
_ZnwmSt11align_val_t
_ZnwmSt11align_val_tRKSt9nothrow_t
__acosh_finite
__acoshf_finite
__acoshl_finite
__acosl_finite
__asinl_finite
__atan2l_finite
__atanh_finite
__atanhf_finite
__atanhl_finite
__coshl_finite
__cospi
__cospif
__cxa_atexit
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_release
__exp10_finite
__exp10f_finite
__exp10l_finite
__isoc99_scanf
__isoc99_sscanf
__memcpy_chk
__memmove_chk
__memset_chk
__nvvm_reflect
__sincospi_stret
__sincospif_stret
__sinhl_finite
__sinpi
__sinpif
__sqrt_finite
__sqrtf_finite
__sqrtl_finite
__stpcpy_chk
__stpncpy_chk
__strcpy_chk
__strdup
__strncpy_chk
__strndup
__strtok_r
access
acosh
acoshf
acoshl
acosl
asinh
asinhf
asinhl
asinl
atan2l
atanh
atanhf
atanhl
atanl
atof
atoi
atol
atoll
bcmp
bcopy
bzero
cabs
cabsf
cabsl
calloc
cbrt
cbrtf
cbrtl
chmod
chown
clearerr
closedir
coshl
ctermid
exp10
exp10f
exp10l
expm1
expm1f
expm1l
fabsl
fclose
fdopen
feof
ferror
fflush
ffsl
ffsll
fgetc
fgetc_unlocked
fgetpos
fgets
fgets_unlocked
fileno
fiprintf
flockfile
flsl
flsll
fopen
fopen64
fprintf
fputc
fputc_unlocked
fputs
fputs_unlocked
fread
fread_unlocked
frexp
frexpf
frexpl
fscanf
fseek
fseeko
fseeko64
fsetpos
fstat
fstat64
fstatvfs
fstatvfs64
ftell
ftello
ftello64
ftrylockfile
funlockfile
fwrite
fwrite_unlocked
getc
getc_unlocked
getchar
getchar_unlocked
getenv
getitimer
getlogin_r
getpwnam
gets
gettimeofday
htonl
htons
iprintf
isascii
isdigit
labs
lchown
ldexp
ldexpf
ldexpl
llabs
log1p
log1pf
log1pl
logb
logbf
logbl
lstat
lstat64
memalign
memccpy
memchr
memcmp
mempcpy
memrchr
memset_pattern16
mkdir
mktime
modf
modff
modfl
ntohl
ntohs
open64
opendir
pclose
perror
popen
posix_memalign
pread
printf
putc
putc_unlocked
putchar
putchar_unlocked
puts
pwrite
qsort
read
readlink
realloc
reallocf
realpath
remove
rename
rewind
rmdir
scanf
setbuf
setitimer
setvbuf
sinhl
siprintf
snprintf
sprintf
sscanf
stat
stat64
statvfs
statvfs64
stpcpy
stpncpy
strcasecmp
strcat
strchr
strcmp
strcoll
strcpy
strcspn
strdup
strlen
strncasecmp
strncat
strncmp
strncpy
strndup
strnlen
strpbrk
strrchr
strspn
strstr
strtod
strtof
strtok
strtok_r
strtol
strtold
strtoll
strtoul
strtoull
strxfrm
system
tanhl
tanl
times
tmpfile
tmpfile64
toascii
uname
ungetc
unlink
unsetenv
utime
utimes
valloc
vfprintf
vfscanf
vprintf
vscanf
vsnprintf
vsprintf
vsscanf
wcslen
write
costmodel-reduxcost
Recognize reduction patterns.
enable-tbaa
enable-scoped-noalias
dom-conditions-max-uses
value-tracking
BadAssumption
Detected conflicting code assumptions. Program may have undefined behavior, or compiler may have internal error.
static-func-full-module-prefix
Use full module build paths in the profile counter names for static functions.
static-func-strip-dirname-prefix
Strip specified level of directory name from source path in the profile counter name for static functions.
DW_TAG_null
DW_TAG_array_type
DW_TAG_class_type
DW_TAG_entry_point
DW_TAG_enumeration_type
DW_TAG_formal_parameter
DW_TAG_imported_declaration
DW_TAG_label
DW_TAG_lexical_block
DW_TAG_member
DW_TAG_pointer_type
DW_TAG_reference_type
DW_TAG_compile_unit
DW_TAG_string_type
DW_TAG_structure_type
DW_TAG_subroutine_type
DW_TAG_typedef
DW_TAG_union_type
DW_TAG_unspecified_parameters
DW_TAG_variant
DW_TAG_common_block
DW_TAG_common_inclusion
DW_TAG_inheritance
DW_TAG_inlined_subroutine
DW_TAG_module
DW_TAG_ptr_to_member_type
DW_TAG_set_type
DW_TAG_subrange_type
DW_TAG_with_stmt
DW_TAG_access_declaration
DW_TAG_base_type
DW_TAG_catch_block
DW_TAG_const_type
DW_TAG_constant
DW_TAG_enumerator
DW_TAG_file_type
DW_TAG_friend
DW_TAG_namelist
DW_TAG_namelist_item
DW_TAG_packed_type
DW_TAG_subprogram
DW_TAG_template_type_parameter
DW_TAG_template_value_parameter
DW_TAG_thrown_type
DW_TAG_try_block
DW_TAG_variant_part
DW_TAG_variable
DW_TAG_volatile_type
DW_TAG_dwarf_procedure
DW_TAG_restrict_type
DW_TAG_interface_type
DW_TAG_namespace
DW_TAG_imported_module
DW_TAG_unspecified_type
DW_TAG_partial_unit
DW_TAG_imported_unit
DW_TAG_condition
DW_TAG_shared_type
DW_TAG_type_unit
DW_TAG_rvalue_reference_type
DW_TAG_template_alias
DW_TAG_coarray_type
DW_TAG_generic_subrange
DW_TAG_dynamic_type
DW_TAG_atomic_type
DW_TAG_call_site
DW_TAG_call_site_parameter
DW_TAG_skeleton_unit
DW_TAG_immutable_type
DW_TAG_MIPS_loop
DW_TAG_format_label
DW_TAG_function_template
DW_TAG_class_template
DW_TAG_GNU_template_template_param
DW_TAG_GNU_template_parameter_pack
DW_TAG_GNU_formal_parameter_pack
DW_TAG_GNU_call_site
DW_TAG_GNU_call_site_parameter
DW_TAG_APPLE_property
DW_TAG_APPLE_ptrauth_type
DW_TAG_BORLAND_property
DW_TAG_BORLAND_Delphi_string
DW_TAG_BORLAND_Delphi_dynamic_array
DW_TAG_BORLAND_Delphi_set
DW_TAG_BORLAND_Delphi_variant
DW_OP_addr
DW_OP_deref
DW_OP_const1u
DW_OP_const1s
DW_OP_const2u
DW_OP_const2s
DW_OP_const4u
DW_OP_const4s
DW_OP_const8u
DW_OP_const8s
DW_OP_constu
DW_OP_consts
DW_OP_dup
DW_OP_drop
DW_OP_over
DW_OP_pick
DW_OP_swap
DW_OP_rot
DW_OP_xderef
DW_OP_abs
DW_OP_and
DW_OP_div
DW_OP_minus
DW_OP_mod
DW_OP_mul
DW_OP_neg
DW_OP_not
DW_OP_or
DW_OP_plus
DW_OP_plus_uconst
DW_OP_shl
DW_OP_shr
DW_OP_shra
DW_OP_xor
DW_OP_bra
DW_OP_eq
DW_OP_ge
DW_OP_gt
DW_OP_le
DW_OP_lt
DW_OP_ne
DW_OP_skip
DW_OP_lit0
DW_OP_lit1
DW_OP_lit2
DW_OP_lit3
DW_OP_lit4
DW_OP_lit5
DW_OP_lit6
DW_OP_lit7
DW_OP_lit8
DW_OP_lit9
DW_OP_lit10
DW_OP_lit11
DW_OP_lit12
DW_OP_lit13
DW_OP_lit14
DW_OP_lit15
DW_OP_lit16
DW_OP_lit17
DW_OP_lit18
DW_OP_lit19
DW_OP_lit20
DW_OP_lit21
DW_OP_lit22
DW_OP_lit23
DW_OP_lit24
DW_OP_lit25
DW_OP_lit26
DW_OP_lit27
DW_OP_lit28
DW_OP_lit29
DW_OP_lit30
DW_OP_lit31
DW_OP_reg0
DW_OP_reg1
DW_OP_reg2
DW_OP_reg3
DW_OP_reg4
DW_OP_reg5
DW_OP_reg6
DW_OP_reg7
DW_OP_reg8
DW_OP_reg9
DW_OP_reg10
DW_OP_reg11
DW_OP_reg12
DW_OP_reg13
DW_OP_reg14
DW_OP_reg15
DW_OP_reg16
DW_OP_reg17
DW_OP_reg18
DW_OP_reg19
DW_OP_reg20
DW_OP_reg21
DW_OP_reg22
DW_OP_reg23
DW_OP_reg24
DW_OP_reg25
DW_OP_reg26
DW_OP_reg27
DW_OP_reg28
DW_OP_reg29
DW_OP_reg30
DW_OP_reg31
DW_OP_breg0
DW_OP_breg1
DW_OP_breg2
DW_OP_breg3
DW_OP_breg4
DW_OP_breg5
DW_OP_breg6
DW_OP_breg7
DW_OP_breg8
DW_OP_breg9
DW_OP_breg10
DW_OP_breg11
DW_OP_breg12
DW_OP_breg13
DW_OP_breg14
DW_OP_breg15
DW_OP_breg16
DW_OP_breg17
DW_OP_breg18
DW_OP_breg19
DW_OP_breg20
DW_OP_breg21
DW_OP_breg22
DW_OP_breg23
DW_OP_breg24
DW_OP_breg25
DW_OP_breg26
DW_OP_breg27
DW_OP_breg28
DW_OP_breg29
DW_OP_breg30
DW_OP_breg31
DW_OP_regx
DW_OP_fbreg
DW_OP_bregx
DW_OP_piece
DW_OP_deref_size
DW_OP_xderef_size
DW_OP_nop
DW_OP_push_object_address
DW_OP_call2
DW_OP_call4
DW_OP_call_ref
DW_OP_form_tls_address
DW_OP_call_frame_cfa
DW_OP_bit_piece
DW_OP_implicit_value
DW_OP_stack_value
DW_OP_implicit_pointer
DW_OP_addrx
DW_OP_constx
DW_OP_entry_value
DW_OP_const_type
DW_OP_regval_type
DW_OP_deref_type
DW_OP_xderef_type
DW_OP_convert
DW_OP_reinterpret
DW_OP_GNU_push_tls_address
DW_OP_GNU_addr_index
DW_OP_GNU_const_index
DW_OP_LLVM_fragment
DW_ATE_address
DW_ATE_boolean
DW_ATE_complex_float
DW_ATE_float
DW_ATE_signed
DW_ATE_signed_char
DW_ATE_unsigned
DW_ATE_unsigned_char
DW_ATE_imaginary_float
DW_ATE_packed_decimal
DW_ATE_numeric_string
DW_ATE_edited
DW_ATE_signed_fixed
DW_ATE_unsigned_fixed
DW_ATE_decimal_float
DW_ATE_UTF
DW_ATE_UCS
DW_ATE_ASCII
DW_VIRTUALITY_none
DW_VIRTUALITY_virtual
DW_VIRTUALITY_pure_virtual
DW_LANG_C89
DW_LANG_C
DW_LANG_Ada83
DW_LANG_C_plus_plus
DW_LANG_Cobol74
DW_LANG_Cobol85
DW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Pascal83
DW_LANG_Modula2
DW_LANG_Java
DW_LANG_C99
DW_LANG_Ada95
DW_LANG_Fortran95
DW_LANG_PLI
DW_LANG_ObjC
DW_LANG_ObjC_plus_plus
DW_LANG_UPC
DW_LANG_D
DW_LANG_Python
DW_LANG_OpenCL
DW_LANG_Go
DW_LANG_Modula3
DW_LANG_Haskell
DW_LANG_C_plus_plus_03
DW_LANG_C_plus_plus_11
DW_LANG_OCaml
DW_LANG_Rust
DW_LANG_C11
DW_LANG_Swift
DW_LANG_Julia
DW_LANG_Dylan
DW_LANG_C_plus_plus_14
DW_LANG_Fortran03
DW_LANG_Fortran08
DW_LANG_RenderScript
DW_LANG_BLISS
DW_LANG_Mips_Assembler
DW_LANG_GOOGLE_RenderScript
DW_LANG_BORLAND_Delphi
DW_CC_normal
DW_CC_program
DW_CC_nocall
DW_CC_pass_by_reference
DW_CC_pass_by_value
DW_CC_GNU_renesas_sh
DW_CC_GNU_borland_fastcall_i386
DW_CC_BORLAND_safecall
DW_CC_BORLAND_stdcall
DW_CC_BORLAND_pascal
DW_CC_BORLAND_msfastcall
DW_CC_BORLAND_msreturn
DW_CC_BORLAND_thiscall
DW_CC_BORLAND_fastcall
DW_CC_LLVM_vectorcall
DW_CC_LLVM_Win64
DW_CC_LLVM_X86_64SysV
DW_CC_LLVM_AAPCS
DW_CC_LLVM_AAPCS_VFP
DW_CC_LLVM_IntelOclBicc
DW_CC_LLVM_SpirFunction
DW_CC_LLVM_OpenCLKernel
DW_CC_LLVM_Swift
DW_CC_LLVM_PreserveMost
DW_CC_LLVM_PreserveAll
DW_CC_LLVM_X86RegCall
DW_CC_GDB_IBM_OpenCL
DW_MACINFO_define
DW_MACINFO_undef
DW_MACINFO_start_file
DW_MACINFO_end_file
DW_MACINFO_vendor_ext
DW_MACINFO_invalid
FUNCTION
R_WEBASSEMBLY_FUNCTION_INDEX_LEB
R_WEBASSEMBLY_TABLE_INDEX_SLEB
R_WEBASSEMBLY_TABLE_INDEX_I32
R_WEBASSEMBLY_MEMORY_ADDR_LEB
R_WEBASSEMBLY_MEMORY_ADDR_SLEB
R_WEBASSEMBLY_MEMORY_ADDR_I32
R_WEBASSEMBLY_TYPE_INDEX_LEB
R_WEBASSEMBLY_GLOBAL_INDEX_LEB
R_WEBASSEMBLY_FUNCTION_OFFSET_I32
R_WEBASSEMBLY_SECTION_OFFSET_I32
31001.638.1
