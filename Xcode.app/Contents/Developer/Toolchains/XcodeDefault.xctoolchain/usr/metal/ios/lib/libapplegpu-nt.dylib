struct._sampler_t
?agx.stack_oob
agx.stack_oob
agx.stack_oob
agx.ss_bind
agx.ss_bind
FD
FO
FN
F*
FB
FC
FI
FQ
FE
F,
Ft
Fh
Fs
Fg
F 
F+
F1
Fr
Ff
Fy
Fm
Fu
Fi
FP
F%
F-
FU
F!
!&##
agx.ss_bind
agx.stack_oob
agx.ss_bind
agx.ss_bind
%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_
abcd
*)/.23519
<CF:?8;=@ABDEGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefgh
jklm
 !"#
CF?<@
DLOAH=BEIJKMNPQRSTUVWXYZ[\]^_`abcdefghijklmnopq
stuv
 !"#$
LOHDI
MUXJQEKNRSTVWYZ[\]^_`abcdefghijklmnopqrstuvwxyz
{|}~
 !"#
UXQMR
V^aSZNTW[\]_`bcdefghijklmnopq
stuv
 !"#$
^aZV[
_gj\cW]`defhiklmnopqrstuvwxyz
{|}~
 !"#$
gjc_d
hpsel`fimnoqrtuvwxyz
{|}~
 !"#$
pslhm
qy{nuiorvwxz
!"#$
y{uqv
w}rx
')+/
.-15249>
/25>
9<?C:@G
>C?G
@DHLAIP
GLHP
IMQUJRY
PUQY
RVZ^S[b 
Y^Zb 
[_cg\dk!
 bgck!
dhlpemt"
!kplt"
mquynv|#
"tyu|#
       
                 
!!!!!!!
!!!!!!!!!!!!!!!!!
"""""""
"""""""""""""""""
#######
#################
$$$$$$$$
$$$$
$$$$$$$$$$$$$$$$$$$
%%%%%%%%
%%%%
%%%%%%%%%%%%%%%%%%%
&&&&&&&&&&
&&&&&
&&&&&&&&&&&&&&&&&&&&&&&&
''''''''''
'''''
''''''''''''''''''''''''
((((((((((((
((((((
((((((((((((((((((((((((((((((((
((((
))))))))))))
))))))
))))))))))))))))))))))))))))))))
))))
**************
*******
*****************************************
****
****
****
++++++++++++++
+++++++
+++++++++++++++++++++++++++++++++++++++++
++++
++++
++++
,,,,,,,,,,,,,,,,,,
,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,
,,,,
,,,,,
,,,,,,
,,,,,
,,,,
------------------
---------
-----------------------------------------------------------
----
----
-----
------
-----
----
...................................................................................................................................................................................../////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
thread-group-siz
ver_param_bufferdriver_param_buf
R89_R90_R91_R92_R93_R94_R95_R96_R97_R98_R99_R100
R99_R100_R101_R102_R103_R104_R105_R106_R107_R108_R109_R110
R2_R3_R4_R5_R6_R7_R8_R9_R10
R109_R110_R111_R112_R113_R114_R115_R116_R117_R118_R119_R120
R9_R10_R11_R12_R13_R14_R15_R16_R17_R18_R19_R20
R19_R20_R21_R22_R23_R24_R25_R26_R27_R28_R29_R30
R29_R30_R31_R32_R33_R34_R35_R36_R37_R38_R39_R40
R39_R40_R41_R42_R43_R44_R45_R46_R47_R48_R49_R50
R49_R50_R51_R52_R53_R54_R55_R56_R57_R58_R59_R60
R59_R60_R61_R62_R63_R64_R65_R66_R67_R68_R69_R70
R69_R70_R71_R72_R73_R74_R75_R76_R77_R78_R79_R80
R79_R80_R81_R82_R83_R84_R85_R86_R87_R88_R89_R90
R90_R91_R92_R93_R94_R95_R96_R97_R98_R99_R100_R101
R100_R101_R102_R103_R104_R105_R106_R107_R108_R109_R110_R111
R0_R1_R2_R3_R4_R5_R6_R7_R8_R9_R10_R11
R110_R111_R112_R113_R114_R115_R116_R117_R118_R119_R120_R121
R10_R11_R12_R13_R14_R15_R16_R17_R18_R19_R20_R21
R20_R21_R22_R23_R24_R25_R26_R27_R28_R29_R30_R31
R30_R31_R32_R33_R34_R35_R36_R37_R38_R39_R40_R41
R40_R41_R42_R43_R44_R45_R46_R47_R48_R49_R50_R51
R50_R51_R52_R53_R54_R55_R56_R57_R58_R59_R60_R61
R60_R61_R62_R63_R64_R65_R66_R67_R68_R69_R70_R71
R70_R71_R72_R73_R74_R75_R76_R77_R78_R79_R80_R81
R80_R81_R82_R83_R84_R85_R86_R87_R88_R89_R90_R91
R0_R1
R91_R92_R93_R94_R95_R96_R97_R98_R99_R100_R101_R102
R101_R102_R103_R104_R105_R106_R107_R108_R109_R110_R111_R112
R1_R2_R3_R4_R5_R6_R7_R8_R9_R10_R11_R12
R111_R112_R113_R114_R115_R116_R117_R118_R119_R120_R121_R122
R11_R12_R13_R14_R15_R16_R17_R18_R19_R20_R21_R22
R21_R22_R23_R24_R25_R26_R27_R28_R29_R30_R31_R32
R31_R32_R33_R34_R35_R36_R37_R38_R39_R40_R41_R42
R41_R42_R43_R44_R45_R46_R47_R48_R49_R50_R51_R52
R51_R52_R53_R54_R55_R56_R57_R58_R59_R60_R61_R62
R61_R62_R63_R64_R65_R66_R67_R68_R69_R70_R71_R72
R71_R72_R73_R74_R75_R76_R77_R78_R79_R80_R81_R82
R81_R82_R83_R84_R85_R86_R87_R88_R89_R90_R91_R92
R0_R1_R2
R92_R93_R94_R95_R96_R97_R98_R99_R100_R101_R102_R103
R102_R103_R104_R105_R106_R107_R108_R109_R110_R111_R112_R113
R2_R3_R4_R5_R6_R7_R8_R9_R10_R11_R12_R13
R112_R113_R114_R115_R116_R117_R118_R119_R120_R121_R122_R123
R12_R13_R14_R15_R16_R17_R18_R19_R20_R21_R22_R23
R22_R23_R24_R25_R26_R27_R28_R29_R30_R31_R32_R33
R32_R33_R34_R35_R36_R37_R38_R39_R40_R41_R42_R43
R42_R43_R44_R45_R46_R47_R48_R49_R50_R51_R52_R53
R52_R53_R54_R55_R56_R57_R58_R59_R60_R61_R62_R63
R62_R63_R64_R65_R66_R67_R68_R69_R70_R71_R72_R73
R72_R73_R74_R75_R76_R77_R78_R79_R80_R81_R82_R83
R82_R83_R84_R85_R86_R87_R88_R89_R90_R91_R92_R93
R0_R1_R2_R3
R93_R94_R95_R96_R97_R98_R99_R100_R101_R102_R103_R104
R103_R104_R105_R106_R107_R108_R109_R110_R111_R112_R113_R114
R3_R4_R5_R6_R7_R8_R9_R10_R11_R12_R13_R14
R113_R114_R115_R116_R117_R118_R119_R120_R121_R122_R123_R124
R13_R14_R15_R16_R17_R18_R19_R20_R21_R22_R23_R24
R23_R24_R25_R26_R27_R28_R29_R30_R31_R32_R33_R34
R33_R34_R35_R36_R37_R38_R39_R40_R41_R42_R43_R44
R43_R44_R45_R46_R47_R48_R49_R50_R51_R52_R53_R54
R53_R54_R55_R56_R57_R58_R59_R60_R61_R62_R63_R64
R63_R64_R65_R66_R67_R68_R69_R70_R71_R72_R73_R74
R73_R74_R75_R76_R77_R78_R79_R80_R81_R82_R83_R84
R83_R84_R85_R86_R87_R88_R89_R90_R91_R92_R93_R94
R0_R1_R2_R3_R4
R94_R95_R96_R97_R98_R99_R100_R101_R102_R103_R104_R105
R104_R105_R106_R107_R108_R109_R110_R111_R112_R113_R114_R115
R4_R5_R6_R7_R8_R9_R10_R11_R12_R13_R14_R15
R114_R115_R116_R117_R118_R119_R120_R121_R122_R123_R124_R125
R14_R15_R16_R17_R18_R19_R20_R21_R22_R23_R24_R25
R24_R25_R26_R27_R28_R29_R30_R31_R32_R33_R34_R35
R34_R35_R36_R37_R38_R39_R40_R41_R42_R43_R44_R45
SR255
R44_R45_R46_R47_R48_R49_R50_R51_R52_R53_R54_R55
R54_R55_R56_R57_R58_R59_R60_R61_R62_R63_R64_R65
R64_R65_R66_R67_R68_R69_R70_R71_R72_R73_R74_R75
R74_R75_R76_R77_R78_R79_R80_R81_R82_R83_R84_R85
R84_R85_R86_R87_R88_R89_R90_R91_R92_R93_R94_R95
R0_R1_R2_R3_R4_R5
R95_R96_R97_R98_R99_R100_R101_R102_R103_R104_R105_R106
R105_R106_R107_R108_R109_R110_R111_R112_R113_R114_R115_R116
R5_R6_R7_R8_R9_R10_R11_R12_R13_R14_R15_R16
R115_R116_R117_R118_R119_R120_R121_R122_R123_R124_R125_R126
R15_R16_R17_R18_R19_R20_R21_R22_R23_R24_R25_R26
R25_R26_R27_R28_R29_R30_R31_R32_R33_R34_R35_R36
R35_R36_R37_R38_R39_R40_R41_R42_R43_R44_R45_R46
R45_R46_R47_R48_R49_R50_R51_R52_R53_R54_R55_R56
R55_R56_R57_R58_R59_R60_R61_R62_R63_R64_R65_R66
R65_R66_R67_R68_R69_R70_R71_R72_R73_R74_R75_R76
R75_R76_R77_R78_R79_R80_R81_R82_R83_R84_R85_R86
R85_R86_R87_R88_R89_R90_R91_R92_R93_R94_R95_R96
R0_R1_R2_R3_R4_R5_R6
R96_R97_R98_R99_R100_R101_R102_R103_R104_R105_R106_R107
R106_R107_R108_R109_R110_R111_R112_R113_R114_R115_R116_R117
R6_R7_R8_R9_R10_R11_R12_R13_R14_R15_R16_R17
R116_R117_R118_R119_R120_R121_R122_R123_R124_R125_R126_R127
R16_R17_R18_R19_R20_R21_R22_R23_R24_R25_R26_R27
R26_R27_R28_R29_R30_R31_R32_R33_R34_R35_R36_R37
R36_R37_R38_R39_R40_R41_R42_R43_R44_R45_R46_R47
R46_R47_R48_R49_R50_R51_R52_R53_R54_R55_R56_R57
R56_R57_R58_R59_R60_R61_R62_R63_R64_R65_R66_R67
R66_R67_R68_R69_R70_R71_R72_R73_R74_R75_R76_R77
R76_R77_R78_R79_R80_R81_R82_R83_R84_R85_R86_R87
R86_R87_R88_R89_R90_R91_R92_R93_R94_R95_R96_R97
R1_R2_R3_R4_R5_R6_R7
R97_R98_R99_R100_R101_R102_R103_R104_R105_R106_R107_R108
R107_R108_R109_R110_R111_R112_R113_R114_R115_R116_R117_R118
R7_R8_R9_R10_R11_R12_R13_R14_R15_R16_R17_R18
R17_R18_R19_R20_R21_R22_R23_R24_R25_R26_R27_R28
R27_R28_R29_R30_R31_R32_R33_R34_R35_R36_R37_R38
R37_R38_R39_R40_R41_R42_R43_R44_R45_R46_R47_R48
R47_R48_R49_R50_R51_R52_R53_R54_R55_R56_R57_R58
R57_R58_R59_R60_R61_R62_R63_R64_R65_R66_R67_R68
R67_R68_R69_R70_R71_R72_R73_R74_R75_R76_R77_R78
R77_R78_R79_R80_R81_R82_R83_R84_R85_R86_R87_R88
R87_R88_R89_R90_R91_R92_R93_R94_R95_R96_R97_R98
R0_R1_R2_R3_R4_R5_R6_R7_R8
R98_R99_R100_R101_R102_R103_R104_R105_R106_R107_R108_R109
R108_R109_R110_R111_R112_R113_R114_R115_R116_R117_R118_R119
R8_R9_R10_R11_R12_R13_R14_R15_R16_R17_R18_R19
R18_R19_R20_R21_R22_R23_R24_R25_R26_R27_R28_R29
R28_R29_R30_R31_R32_R33_R34_R35_R36_R37_R38_R39
R38_R39_R40_R41_R42_R43_R44_R45_R46_R47_R48_R49
R48_R49_R50_R51_R52_R53_R54_R55_R56_R57_R58_R59
R58_R59_R60_R61_R62_R63_R64_R65_R66_R67_R68_R69
R68_R69_R70_R71_R72_R73_R74_R75_R76_R77_R78_R79
R78_R79_R80_R81_R82_R83_R84_R85_R86_R87_R88_R89
R88_R89_R90_R91_R92_R93_R94_R95_R96_R97_R98_R99
R1_R2_R3_R4_R5_R6_R7_R8_R9
SR_UTILFUNC
SR_PVQUAD
SR_TVQUAD
SR_TGID
SR_WGID
SR_EMRTID
SR_CTXID
SR_EXEC_STACK_CACHE_ID
SR_LIN_ID
SR_PVSIMD
SR_TVSIMD
SR_EIPND
SR_BACKFACE
SR_PTYPE
SR_TG_X_SIZE
SR_TG_DISP_X_SIZE
SR_TG_Y_SIZE
SR_TG_DISP_Y_SIZE
SR_TG_Z_SIZE
SR_TG_DISP_Z_SIZE
SR_EX_VECREG
SR_EX_RETREG
R97H_R98L_R98H_R99L_R99H_R100L_R100H
R107H_R108L_R108H_R109L_R109H_R110L_R110H
R7H_R8L_R8H_R9L_R9H_R10L_R10H
R117H_R118L_R118H_R119L_R119H_R120L_R120H
R17H_R18L_R18H_R19L_R19H_R20L_R20H
R27H_R28L_R28H_R29L_R29H_R30L_R30H
R37H_R38L_R38H_R39L_R39H_R40L_R40H
R47H_R48L_R48H_R49L_R49H_R50L_R50H
R57H_R58L_R58H_R59L_R59H_R60L_R60H
R67H_R68L_R68H_R69L_R69H_R70L_R70H
R77H_R78L_R78H_R79L_R79H_R80L_R80H
R87H_R88L_R88H_R89L_R89H_R90L_R90H
R98H_R99L_R99H_R100L_R100H_R101L_R101H
R108H_R109L_R109H_R110L_R110H_R111L_R111H
R8H_R9L_R9H_R10L_R10H_R11L_R11H
R118H_R119L_R119H_R120L_R120H_R121L_R121H
R18H_R19L_R19H_R20L_R20H_R21L_R21H
R28H_R29L_R29H_R30L_R30H_R31L_R31H
R38H_R39L_R39H_R40L_R40H_R41L_R41H
R48H_R49L_R49H_R50L_R50H_R51L_R51H
R58H_R59L_R59H_R60L_R60H_R61L_R61H
R68H_R69L_R69H_R70L_R70H_R71L_R71H
R78H_R79L_R79H_R80L_R80H_R81L_R81H
R88H_R89L_R89H_R90L_R90H_R91L_R91H
R0H_R1L_R1H
R99H_R100L_R100H_R101L_R101H_R102L_R102H
R109H_R110L_R110H_R111L_R111H_R112L_R112H
R9H_R10L_R10H_R11L_R11H_R12L_R12H
R119H_R120L_R120H_R121L_R121H_R122L_R122H
R19H_R20L_R20H_R21L_R21H_R22L_R22H
R29H_R30L_R30H_R31L_R31H_R32L_R32H
R39H_R40L_R40H_R41L_R41H_R42L_R42H
R49H_R50L_R50H_R51L_R51H_R52L_R52H
R59H_R60L_R60H_R61L_R61H_R62L_R62H
R69H_R70L_R70H_R71L_R71H_R72L_R72H
R79H_R80L_R80H_R81L_R81H_R82L_R82H
R89H_R90L_R90H_R91L_R91H_R92L_R92H
R0H_R1L_R1H_R2L_R2H
R100H_R101L_R101H_R102L_R102H_R103L_R103H
R110H_R111L_R111H_R112L_R112H_R113L_R113H
R10H_R11L_R11H_R12L_R12H_R13L_R13H
R120H_R121L_R121H_R122L_R122H_R123L_R123H
R20H_R21L_R21H_R22L_R22H_R23L_R23H
R30H_R31L_R31H_R32L_R32H_R33L_R33H
R40H_R41L_R41H_R42L_R42H_R43L_R43H
R50H_R51L_R51H_R52L_R52H_R53L_R53H
R60H_R61L_R61H_R62L_R62H_R63L_R63H
R70H_R71L_R71H_R72L_R72H_R73L_R73H
R80H_R81L_R81H_R82L_R82H_R83L_R83H
R90H_R91L_R91H_R92L_R92H_R93L_R93H
R0H_R1L_R1H_R2L_R2H_R3L_R3H
R101H_R102L_R102H_R103L_R103H_R104L_R104H
R111H_R112L_R112H_R113L_R113H_R114L_R114H
R11H_R12L_R12H_R13L_R13H_R14L_R14H
R121H_R122L_R122H_R123L_R123H_R124L_R124H
R21H_R22L_R22H_R23L_R23H_R24L_R24H
R31H_R32L_R32H_R33L_R33H_R34L_R34H
R41H_R42L_R42H_R43L_R43H_R44L_R44H
R51H_R52L_R52H_R53L_R53H_R54L_R54H
R61H_R62L_R62H_R63L_R63H_R64L_R64H
R71H_R72L_R72H_R73L_R73H_R74L_R74H
R81H_R82L_R82H_R83L_R83H_R84L_R84H
R91H_R92L_R92H_R93L_R93H_R94L_R94H
R1H_R2L_R2H_R3L_R3H_R4L_R4H
R102H_R103L_R103H_R104L_R104H_R105L_R105H
R112H_R113L_R113H_R114L_R114H_R115L_R115H
R12H_R13L_R13H_R14L_R14H_R15L_R15H
R122H_R123L_R123H_R124L_R124H_R125L_R125H
R22H_R23L_R23H_R24L_R24H_R25L_R25H
R32H_R33L_R33H_R34L_R34H_R35L_R35H
R42H_R43L_R43H_R44L_R44H_R45L_R45H
R52H_R53L_R53H_R54L_R54H_R55L_R55H
R62H_R63L_R63H_R64L_R64H_R65L_R65H
R72H_R73L_R73H_R74L_R74H_R75L_R75H
R82H_R83L_R83H_R84L_R84H_R85L_R85H
R92H_R93L_R93H_R94L_R94H_R95L_R95H
R2H_R3L_R3H_R4L_R4H_R5L_R5H
R103H_R104L_R104H_R105L_R105H_R106L_R106H
R113H_R114L_R114H_R115L_R115H_R116L_R116H
R13H_R14L_R14H_R15L_R15H_R16L_R16H
R123H_R124L_R124H_R125L_R125H_R126L_R126H
R23H_R24L_R24H_R25L_R25H_R26L_R26H
R33H_R34L_R34H_R35L_R35H_R36L_R36H
R43H_R44L_R44H_R45L_R45H_R46L_R46H
R53H_R54L_R54H_R55L_R55H_R56L_R56H
R63H_R64L_R64H_R65L_R65H_R66L_R66H
R73H_R74L_R74H_R75L_R75H_R76L_R76H
R83H_R84L_R84H_R85L_R85H_R86L_R86H
R93H_R94L_R94H_R95L_R95H_R96L_R96H
R3H_R4L_R4H_R5L_R5H_R6L_R6H
R104H_R105L_R105H_R106L_R106H_R107L_R107H
R114H_R115L_R115H_R116L_R116H_R117L_R117H
R14H_R15L_R15H_R16L_R16H_R17L_R17H
R124H_R125L_R125H_R126L_R126H_R127L_R127H
R24H_R25L_R25H_R26L_R26H_R27L_R27H
R34H_R35L_R35H_R36L_R36H_R37L_R37H
R44H_R45L_R45H_R46L_R46H_R47L_R47H
R54H_R55L_R55H_R56L_R56H_R57L_R57H
R64H_R65L_R65H_R66L_R66H_R67L_R67H
R74H_R75L_R75H_R76L_R76H_R77L_R77H
R84H_R85L_R85H_R86L_R86H_R87L_R87H
R94H_R95L_R95H_R96L_R96H_R97L_R97H
R4H_R5L_R5H_R6L_R6H_R7L_R7H
R105H_R106L_R106H_R107L_R107H_R108L_R108H
R115H_R116L_R116H_R117L_R117H_R118L_R118H
R15H_R16L_R16H_R17L_R17H_R18L_R18H
R25H_R26L_R26H_R27L_R27H_R28L_R28H
R35H_R36L_R36H_R37L_R37H_R38L_R38H
R45H_R46L_R46H_R47L_R47H_R48L_R48H
R55H_R56L_R56H_R57L_R57H_R58L_R58H
R65H_R66L_R66H_R67L_R67H_R68L_R68H
R75H_R76L_R76H_R77L_R77H_R78L_R78H
R85H_R86L_R86H_R87L_R87H_R88L_R88H
R95H_R96L_R96H_R97L_R97H_R98L_R98H
R5H_R6L_R6H_R7L_R7H_R8L_R8H
R106H_R107L_R107H_R108L_R108H_R109L_R109H
R116H_R117L_R117H_R118L_R118H_R119L_R119H
R16H_R17L_R17H_R18L_R18H_R19L_R19H
R26H_R27L_R27H_R28L_R28H_R29L_R29H
R36H_R37L_R37H_R38L_R38H_R39L_R39H
R46H_R47L_R47H_R48L_R48H_R49L_R49H
R56H_R57L_R57H_R58L_R58H_R59L_R59H
R66H_R67L_R67H_R68L_R68H_R69L_R69H
R76H_R77L_R77H_R78L_R78H_R79L_R79H
R86H_R87L_R87H_R88L_R88H_R89L_R89H
R96H_R97L_R97H_R98L_R98H_R99L_R99H
R6H_R7L_R7H_R8L_R8H_R9L_R9H
SR_UTILDATAH
SR_DSTACKH
SR_ISTACKH
SR_ESH
SR_LIBDEPTH
SR_CVGMSK
R97L_R97H_R98L_R98H_R99L_R99H_R100L
R107L_R107H_R108L_R108H_R109L_R109H_R110L
R7L_R7H_R8L_R8H_R9L_R9H_R10L
R117L_R117H_R118L_R118H_R119L_R119H_R120L
R17L_R17H_R18L_R18H_R19L_R19H_R20L
R27L_R27H_R28L_R28H_R29L_R29H_R30L
R37L_R37H_R38L_R38H_R39L_R39H_R40L
R47L_R47H_R48L_R48H_R49L_R49H_R50L
R57L_R57H_R58L_R58H_R59L_R59H_R60L
R67L_R67H_R68L_R68H_R69L_R69H_R70L
R77L_R77H_R78L_R78H_R79L_R79H_R80L
R87L_R87H_R88L_R88H_R89L_R89H_R90L
R98L_R98H_R99L_R99H_R100L_R100H_R101L
R108L_R108H_R109L_R109H_R110L_R110H_R111L
R8L_R8H_R9L_R9H_R10L_R10H_R11L
R118L_R118H_R119L_R119H_R120L_R120H_R121L
R18L_R18H_R19L_R19H_R20L_R20H_R21L
R28L_R28H_R29L_R29H_R30L_R30H_R31L
R38L_R38H_R39L_R39H_R40L_R40H_R41L
R48L_R48H_R49L_R49H_R50L_R50H_R51L
R58L_R58H_R59L_R59H_R60L_R60H_R61L
R68L_R68H_R69L_R69H_R70L_R70H_R71L
R78L_R78H_R79L_R79H_R80L_R80H_R81L
R88L_R88H_R89L_R89H_R90L_R90H_R91L
R0L_R0H_R1L
R99L_R99H_R100L_R100H_R101L_R101H_R102L
R109L_R109H_R110L_R110H_R111L_R111H_R112L
R9L_R9H_R10L_R10H_R11L_R11H_R12L
R119L_R119H_R120L_R120H_R121L_R121H_R122L
R19L_R19H_R20L_R20H_R21L_R21H_R22L
R29L_R29H_R30L_R30H_R31L_R31H_R32L
R39L_R39H_R40L_R40H_R41L_R41H_R42L
R49L_R49H_R50L_R50H_R51L_R51H_R52L
R59L_R59H_R60L_R60H_R61L_R61H_R62L
R69L_R69H_R70L_R70H_R71L_R71H_R72L
R79L_R79H_R80L_R80H_R81L_R81H_R82L
R89L_R89H_R90L_R90H_R91L_R91H_R92L
R0L_R0H_R1L_R1H_R2L
R100L_R100H_R101L_R101H_R102L_R102H_R103L
R110L_R110H_R111L_R111H_R112L_R112H_R113L
R10L_R10H_R11L_R11H_R12L_R12H_R13L
R120L_R120H_R121L_R121H_R122L_R122H_R123L
R20L_R20H_R21L_R21H_R22L_R22H_R23L
R30L_R30H_R31L_R31H_R32L_R32H_R33L
R40L_R40H_R41L_R41H_R42L_R42H_R43L
R50L_R50H_R51L_R51H_R52L_R52H_R53L
R60L_R60H_R61L_R61H_R62L_R62H_R63L
R70L_R70H_R71L_R71H_R72L_R72H_R73L
R80L_R80H_R81L_R81H_R82L_R82H_R83L
R90L_R90H_R91L_R91H_R92L_R92H_R93L
R0L_R0H_R1L_R1H_R2L_R2H_R3L
R101L_R101H_R102L_R102H_R103L_R103H_R104L
R111L_R111H_R112L_R112H_R113L_R113H_R114L
R11L_R11H_R12L_R12H_R13L_R13H_R14L
R121L_R121H_R122L_R122H_R123L_R123H_R124L
R21L_R21H_R22L_R22H_R23L_R23H_R24L
R31L_R31H_R32L_R32H_R33L_R33H_R34L
R41L_R41H_R42L_R42H_R43L_R43H_R44L
R51L_R51H_R52L_R52H_R53L_R53H_R54L
R61L_R61H_R62L_R62H_R63L_R63H_R64L
R71L_R71H_R72L_R72H_R73L_R73H_R74L
R81L_R81H_R82L_R82H_R83L_R83H_R84L
R91L_R91H_R92L_R92H_R93L_R93H_R94L
R1L_R1H_R2L_R2H_R3L_R3H_R4L
R102L_R102H_R103L_R103H_R104L_R104H_R105L
R112L_R112H_R113L_R113H_R114L_R114H_R115L
R12L_R12H_R13L_R13H_R14L_R14H_R15L
R122L_R122H_R123L_R123H_R124L_R124H_R125L
R22L_R22H_R23L_R23H_R24L_R24H_R25L
R32L_R32H_R33L_R33H_R34L_R34H_R35L
R42L_R42H_R43L_R43H_R44L_R44H_R45L
R52L_R52H_R53L_R53H_R54L_R54H_R55L
R62L_R62H_R63L_R63H_R64L_R64H_R65L
R72L_R72H_R73L_R73H_R74L_R74H_R75L
R82L_R82H_R83L_R83H_R84L_R84H_R85L
R92L_R92H_R93L_R93H_R94L_R94H_R95L
R2L_R2H_R3L_R3H_R4L_R4H_R5L
R103L_R103H_R104L_R104H_R105L_R105H_R106L
R113L_R113H_R114L_R114H_R115L_R115H_R116L
R13L_R13H_R14L_R14H_R15L_R15H_R16L
R123L_R123H_R124L_R124H_R125L_R125H_R126L
R23L_R23H_R24L_R24H_R25L_R25H_R26L
R33L_R33H_R34L_R34H_R35L_R35H_R36L
R43L_R43H_R44L_R44H_R45L_R45H_R46L
R53L_R53H_R54L_R54H_R55L_R55H_R56L
R63L_R63H_R64L_R64H_R65L_R65H_R66L
R73L_R73H_R74L_R74H_R75L_R75H_R76L
R83L_R83H_R84L_R84H_R85L_R85H_R86L
R93L_R93H_R94L_R94H_R95L_R95H_R96L
R3L_R3H_R4L_R4H_R5L_R5H_R6L
R104L_R104H_R105L_R105H_R106L_R106H_R107L
R114L_R114H_R115L_R115H_R116L_R116H_R117L
R14L_R14H_R15L_R15H_R16L_R16H_R17L
R124L_R124H_R125L_R125H_R126L_R126H_R127L
R24L_R24H_R25L_R25H_R26L_R26H_R27L
R34L_R34H_R35L_R35H_R36L_R36H_R37L
R44L_R44H_R45L_R45H_R46L_R46H_R47L
R54L_R54H_R55L_R55H_R56L_R56H_R57L
R64L_R64H_R65L_R65H_R66L_R66H_R67L
R74L_R74H_R75L_R75H_R76L_R76H_R77L
R84L_R84H_R85L_R85H_R86L_R86H_R87L
R94L_R94H_R95L_R95H_R96L_R96H_R97L
R4L_R4H_R5L_R5H_R6L_R6H_R7L
R105L_R105H_R106L_R106H_R107L_R107H_R108L
R115L_R115H_R116L_R116H_R117L_R117H_R118L
R15L_R15H_R16L_R16H_R17L_R17H_R18L
R25L_R25H_R26L_R26H_R27L_R27H_R28L
R35L_R35H_R36L_R36H_R37L_R37H_R38L
R45L_R45H_R46L_R46H_R47L_R47H_R48L
R55L_R55H_R56L_R56H_R57L_R57H_R58L
R65L_R65H_R66L_R66H_R67L_R67H_R68L
R75L_R75H_R76L_R76H_R77L_R77H_R78L
R85L_R85H_R86L_R86H_R87L_R87H_R88L
R95L_R95H_R96L_R96H_R97L_R97H_R98L
R5L_R5H_R6L_R6H_R7L_R7H_R8L
R106L_R106H_R107L_R107H_R108L_R108H_R109L
R116L_R116H_R117L_R117H_R118L_R118H_R119L
R16L_R16H_R17L_R17H_R18L_R18H_R19L
R26L_R26H_R27L_R27H_R28L_R28H_R29L
R36L_R36H_R37L_R37H_R38L_R38H_R39L
R46L_R46H_R47L_R47H_R48L_R48H_R49L
R56L_R56H_R57L_R57H_R58L_R58H_R59L
R66L_R66H_R67L_R67H_R68L_R68H_R69L
R76L_R76H_R77L_R77H_R78L_R78H_R79L
R86L_R86H_R87L_R87H_R88L_R88H_R89L
R96L_R96H_R97L_R97H_R98L_R98H_R99L
R6L_R6H_R7L_R7H_R8L_R8H_R9L
SR_UTILDATAL
SR_INSTVAL
SR_DSTACKL
SR_ISTACKL
SR_SIMD_ELEM
SR_LIBXDIM
SR_LIBYDIM
SR_BATCHNUM
SR_INSTNUM
SR_SMPMSKIN
SMP_BATON
SR_SIMD_GRP
SR_CLUSTER
SR_STP_CTR
SR_LIBSMPS
SR_DEPTHSMPS
SR_PASS
SR_TP_IN_GRID_X
SR_TG_X
SR_LOCAL_X
SR_TP_IN_GRID_Y
SR_TG_Y
SR_LOCAL_Y
SR_TP_IN_GRID_Z
SR_TG_Z
SR_LOCAL_Z
GPR32tup12
SIR32
GPR32
GPR32tup2
GPR16tup2
GPR32tup3
GPR16tup3
GPR32tup4
GPR16tup4
GPR32tup5
GPR16tup5
GPR16
GPR32tup6
GPR16tup6
GPR32tup7
GPR16tup7
GPR32tup9
GPR32tup12_with_hsub0_in_GPR16_NOR0L
GPR16tup2_with_hsub0_in_GPR16_NOR0L
GPR16tup3_with_hsub0_in_GPR16_NOR0L
GPR32tup4_with_hsub0_in_GPR16_NOR0L
GPR16tup4_with_hsub0_in_GPR16_NOR0L
GPR32tup5_with_hsub0_in_GPR16_NOR0L
GPR16tup5_with_hsub0_in_GPR16_NOR0L
GPR32tup6_with_hsub0_in_GPR16_NOR0L
GPR16tup6_with_hsub0_in_GPR16_NOR0L
GPR32tup7_with_hsub0_in_GPR16_NOR0L
GPR16tup7_with_hsub0_in_GPR16_NOR0L
GPR32tup9_with_hsub0_in_GPR16_NOR0L
GPR16tup3_alignedrc
GPR16tup5_alignedrc
GPR16tup7_alignedrc
GPR16tup2_with_hsub0_in_GPR16_NOR0L_and_GPR16_aligned
GPR16tup3_with_hsub0_in_GPR16_NOR0L_and_GPR16_aligned
GPR16tup4_with_hsub0_in_GPR16_NOR0L_and_GPR16_aligned
GPR16tup5_with_hsub0_in_GPR16_NOR0L_and_GPR16_aligned
GPR16tup6_with_hsub0_in_GPR16_NOR0L_and_GPR16_aligned
GPR16tup7_with_hsub0_in_GPR16_NOR0L_and_GPR16_aligned
GPR16tup2_with_hsub1_in_GPR16_aligned
GPR16tup3_with_hsub1_in_GPR16_aligned
GPR16tup4_with_hsub1_in_GPR16_aligned
GPR16tup5_with_hsub1_in_GPR16_aligned
GPR16tup6_with_hsub1_in_GPR16_aligned
GPR16tup7_with_hsub1_in_GPR16_aligned
1000
2000
3000
4000
5000
6000
7000
8000
1100
2100
3100
4100
5100
6100
7100
8100
1200
2200
3200
4200
5200
6200
7200
8200
1300
2300
3300
4300
5300
6300
7300
1400
2400
3400
4400
5400
6400
7400
1500
2500
3500
4500
5500
6500
7500
1600
2600
3600
4600
5600
6600
7600
1700
2700
3700
4700
5700
6700
7700
1800
2800
3800
4800
5800
6800
7800
1900
2900
3900
4900
5900
6900
7900
1010
2010
3010
4010
5010
6010
7010
8010
1110
2110
3110
4110
5110
6110
7110
8110
1210
2210
3210
4210
5210
6210
7210
8210
1310
2310
3310
4310
5310
6310
7310
1410
2410
3410
4410
5410
6410
7410
1510
2510
3510
4510
5510
6510
7510
1610
2610
3610
4610
5610
6610
7610
1710
2710
3710
4710
5710
6710
7710
1810
2810
3810
4810
5810
6810
7810
1910
2910
3910
4910
5910
6910
7910
1020
2020
3020
4020
5020
6020
7020
8020
1120
2120
3120
4120
5120
6120
7120
8120
1220
2220
3220
4220
5220
6220
7220
8220
1320
2320
3320
4320
5320
6320
7320
1420
2420
3420
4420
5420
6420
7420
1520
2520
3520
4520
5520
6520
7520
1620
2620
3620
4620
5620
6620
7620
1720
2720
3720
4720
5720
6720
7720
1820
2820
3820
4820
5820
6820
7820
1920
2920
3920
4920
5920
6920
7920
1030
2030
3030
4030
5030
6030
7030
8030
1130
2130
3130
4130
5130
6130
7130
8130
1230
2230
3230
4230
5230
6230
7230
8230
1330
2330
3330
4330
5330
6330
7330
1430
2430
3430
4430
5430
6430
7430
1530
2530
3530
4530
5530
6530
7530
1630
2630
3630
4630
5630
6630
7630
1730
2730
3730
4730
5730
6730
7730
1830
2830
3830
4830
5830
6830
7830
1930
2930
3930
4930
5930
6930
7930
1040
2040
3040
4040
5040
6040
7040
8040
1140
2140
3140
4140
5140
6140
7140
8140
1240
2240
3240
4240
5240
6240
7240
8240
1340
2340
3340
4340
5340
6340
7340
1440
2440
3440
4440
5440
6440
7440
1540
2540
3540
4540
5540
6540
7540
1640
2640
3640
4640
5640
6640
7640
1740
2740
3740
4740
5740
6740
7740
1840
2840
3840
4840
5840
6840
7840
1940
2940
3940
4940
5940
6940
7940
1050
2050
3050
4050
5050
6050
7050
8050
1150
2150
3150
4150
5150
6150
7150
8150
1250
2250
3250
4250
5250
6250
7250
1350
2350
3350
4350
5350
6350
7350
1450
2450
3450
4450
5450
6450
7450
1550
2550
3550
4550
5550
6550
7550
1650
2650
3650
4650
5650
6650
7650
1750
2750
3750
4750
5750
6750
7750
1850
2850
3850
4850
5850
6850
7850
1950
2950
3950
4950
5950
6950
7950
1060
2060
3060
4060
5060
6060
7060
8060
1160
2160
3160
4160
5160
6160
7160
8160
1260
2260
3260
4260
5260
6260
7260
1360
2360
3360
4360
5360
6360
7360
1460
2460
3460
4460
5460
6460
7460
1560
2560
3560
4560
5560
6560
7560
1660
2660
3660
4660
5660
6660
7660
1760
2760
3760
4760
5760
6760
7760
1860
2860
3860
4860
5860
6860
7860
1960
2960
3960
4960
5960
6960
7960
1070
2070
3070
4070
5070
6070
7070
8070
1170
2170
3170
4170
5170
6170
7170
8170
1270
2270
3270
4270
5270
6270
7270
1370
2370
3370
4370
5370
6370
7370
1470
2470
3470
4470
5470
6470
7470
1570
2570
3570
4570
5570
6570
7570
1670
2670
3670
4670
5670
6670
7670
1770
2770
3770
4770
5770
6770
7770
1870
2870
3870
4870
5870
6870
7870
1970
2970
3970
4970
5970
6970
7970
1080
2080
3080
4080
5080
6080
7080
8080
1180
2180
3180
4180
5180
6180
7180
8180
1280
2280
3280
4280
5280
6280
7280
1380
2380
3380
4380
5380
6380
7380
1480
2480
3480
4480
5480
6480
7480
1580
2580
3580
4580
5580
6580
7580
1680
2680
3680
4680
5680
6680
7680
1780
2780
3780
4780
5780
6780
7780
1880
2880
3880
4880
5880
6880
7880
1980
2980
3980
4980
5980
6980
7980
1090
2090
3090
4090
5090
6090
7090
8090
1190
2190
3190
4190
5190
6190
7190
8190
1290
2290
3290
4290
5290
6290
7290
1390
2390
3390
4390
5390
6390
7390
1490
2490
3490
4490
5490
6490
7490
1590
2590
3590
4590
5590
6590
7590
1690
2690
3690
4690
5690
6690
7690
1790
2790
3790
4790
5790
6790
7790
1890
2890
3890
4890
5890
6890
7890
1990
2990
3990
4990
5990
6990
7990
1001
2001
3001
4001
5001
6001
7001
8001
1101
2101
3101
4101
5101
6101
7101
8101
1201
2201
3201
4201
5201
6201
7201
8201
1301
2301
3301
4301
5301
6301
7301
1401
2401
3401
4401
5401
6401
7401
1501
2501
3501
4501
5501
6501
7501
1601
2601
3601
4601
5601
6601
7601
1701
2701
3701
4701
5701
6701
7701
1801
2801
3801
4801
5801
6801
7801
1901
2901
3901
4901
5901
6901
7901
1011
2011
3011
4011
5011
6011
7011
8011
1111
2111
3111
4111
5111
6111
7111
8111
1211
2211
3211
4211
5211
6211
7211
8211
1311
2311
3311
4311
5311
6311
7311
1411
2411
3411
4411
5411
6411
7411
1511
2511
3511
4511
5511
6511
7511
1611
2611
3611
4611
5611
6611
7611
1711
2711
3711
4711
5711
6711
7711
1811
2811
3811
4811
5811
6811
7811
1911
2911
3911
4911
5911
6911
7911
1021
2021
3021
4021
5021
6021
7021
8021
1121
2121
3121
4121
5121
6121
7121
8121
1221
2221
3221
4221
5221
6221
7221
8221
1321
2321
3321
4321
5321
6321
7321
1421
2421
3421
4421
5421
6421
7421
1521
2521
3521
4521
5521
6521
7521
1621
2621
3621
4621
5621
6621
7621
1721
2721
3721
4721
5721
6721
7721
1821
2821
3821
4821
5821
6821
7821
1921
2921
3921
4921
5921
6921
7921
1031
2031
3031
4031
5031
6031
7031
8031
1131
2131
3131
4131
5131
6131
7131
8131
1231
2231
3231
4231
5231
6231
7231
8231
1331
2331
3331
4331
5331
6331
7331
1431
2431
3431
4431
5431
6431
7431
1531
2531
3531
4531
5531
6531
7531
1631
2631
3631
4631
5631
6631
7631
1731
2731
3731
4731
5731
6731
7731
1831
2831
3831
4831
5831
6831
7831
1931
2931
3931
4931
5931
6931
7931
1041
2041
3041
4041
5041
6041
7041
8041
1141
2141
3141
4141
5141
6141
7141
8141
1241
2241
3241
4241
5241
6241
7241
8241
1341
2341
3341
4341
5341
6341
7341
1441
2441
3441
4441
5441
6441
7441
1541
2541
3541
4541
5541
6541
7541
1641
2641
3641
4641
5641
6641
7641
1741
2741
3741
4741
5741
6741
7741
1841
2841
3841
4841
5841
6841
7841
1941
2941
3941
4941
5941
6941
7941
1051
2051
3051
4051
5051
6051
7051
8051
1151
2151
3151
4151
5151
6151
7151
8151
1251
2251
3251
4251
5251
6251
7251
1351
2351
3351
4351
5351
6351
7351
1451
2451
3451
4451
5451
6451
7451
1551
2551
3551
4551
5551
6551
7551
1651
2651
3651
4651
5651
6651
7651
1751
2751
3751
4751
5751
6751
7751
1851
2851
3851
4851
5851
6851
7851
1951
2951
3951
4951
5951
6951
7951
1061
2061
3061
4061
5061
6061
7061
8061
1161
2161
3161
4161
5161
6161
7161
8161
1261
2261
3261
4261
5261
6261
7261
1361
2361
3361
4361
5361
6361
7361
1461
2461
3461
4461
5461
6461
7461
1561
2561
3561
4561
5561
6561
7561
1661
2661
3661
4661
5661
6661
7661
1761
2761
3761
4761
5761
6761
7761
1861
2861
3861
4861
5861
6861
7861
1961
2961
3961
4961
5961
6961
7961
1071
2071
3071
4071
5071
6071
7071
8071
1171
2171
3171
4171
5171
6171
7171
8171
1271
2271
3271
4271
5271
6271
7271
1371
2371
3371
4371
5371
6371
7371
1471
2471
3471
4471
5471
6471
7471
1571
2571
3571
4571
5571
6571
7571
1671
2671
3671
4671
5671
6671
7671
1771
2771
3771
4771
5771
6771
7771
1871
2871
3871
4871
5871
6871
7871
1971
2971
3971
4971
5971
6971
7971
1081
2081
3081
4081
5081
6081
7081
8081
1181
2181
3181
4181
5181
6181
7181
8181
1281
2281
3281
4281
5281
6281
7281
1381
2381
3381
4381
5381
6381
7381
1481
2481
3481
4481
5481
6481
7481
1581
2581
3581
4581
5581
6581
7581
1681
2681
3681
4681
5681
6681
7681
1781
2781
3781
4781
5781
6781
7781
1881
2881
3881
4881
5881
6881
7881
1981
2981
3981
4981
5981
6981
7981
1091
2091
3091
4091
5091
6091
7091
8091
1191
2191
3191
4191
5191
6191
7191
8191
1291
2291
3291
4291
5291
6291
7291
1391
2391
3391
4391
5391
6391
7391
1491
2491
3491
4491
5491
6491
7491
1591
2591
3591
4591
5591
6591
7591
1691
2691
3691
4691
5691
6691
7691
1791
2791
3791
4791
5791
6791
7791
1891
2891
3891
4891
5891
6891
7891
1991
2991
3991
4991
5991
6991
7991
1002
2002
3002
4002
5002
6002
7002
8002
1102
2102
3102
4102
5102
6102
7102
8102
1202
2202
3202
4202
5202
6202
7202
8202
1302
2302
3302
4302
5302
6302
7302
1402
2402
3402
4402
5402
6402
7402
1502
2502
3502
4502
5502
6502
7502
1602
2602
3602
4602
5602
6602
7602
1702
2702
3702
4702
5702
6702
7702
1802
2802
3802
4802
5802
6802
7802
1902
2902
3902
4902
5902
6902
7902
1012
2012
3012
4012
5012
6012
7012
8012
1112
2112
3112
4112
5112
6112
7112
8112
1212
2212
3212
4212
5212
6212
7212
8212
1312
2312
3312
4312
5312
6312
7312
1412
2412
3412
4412
5412
6412
7412
1512
2512
3512
4512
5512
6512
7512
1612
2612
3612
4612
5612
6612
7612
1712
2712
3712
4712
5712
6712
7712
1812
2812
3812
4812
5812
6812
7812
1912
2912
3912
4912
5912
6912
7912
1022
2022
3022
4022
5022
6022
7022
8022
1122
2122
3122
4122
5122
6122
7122
8122
1222
2222
3222
4222
5222
6222
7222
8222
1322
2322
3322
4322
5322
6322
7322
1422
2422
3422
4422
5422
6422
7422
1522
2522
3522
4522
5522
6522
7522
1622
2622
3622
4622
5622
6622
7622
1722
2722
3722
4722
5722
6722
7722
1822
2822
3822
4822
5822
6822
7822
1922
2922
3922
4922
5922
6922
7922
1032
2032
3032
4032
5032
6032
7032
8032
1132
2132
3132
4132
5132
6132
7132
8132
1232
2232
3232
4232
5232
6232
7232
8232
1332
2332
3332
4332
5332
6332
7332
1432
2432
3432
4432
5432
6432
7432
1532
2532
3532
4532
5532
6532
7532
1632
2632
3632
4632
5632
6632
7632
1732
2732
3732
4732
5732
6732
7732
1832
2832
3832
4832
5832
6832
7832
1932
2932
3932
4932
5932
6932
7932
1042
2042
3042
4042
5042
6042
7042
8042
1142
2142
3142
4142
5142
6142
7142
8142
1242
2242
3242
4242
5242
6242
7242
8242
1342
2342
3342
4342
5342
6342
7342
1442
2442
3442
4442
5442
6442
7442
1542
2542
3542
4542
5542
6542
7542
1642
2642
3642
4642
5642
6642
7642
1742
2742
3742
4742
5742
6742
7742
1842
2842
3842
4842
5842
6842
7842
1942
2942
3942
4942
5942
6942
7942
1052
2052
3052
4052
5052
6052
7052
8052
1152
2152
3152
4152
5152
6152
7152
8152
1252
2252
3252
4252
5252
6252
7252
1352
2352
3352
4352
5352
6352
7352
1452
2452
3452
4452
5452
6452
7452
1552
2552
3552
4552
5552
6552
7552
1652
2652
3652
4652
5652
6652
7652
1752
2752
3752
4752
5752
6752
7752
1852
2852
3852
4852
5852
6852
7852
1952
2952
3952
4952
5952
6952
7952
1062
2062
3062
4062
5062
6062
7062
8062
1162
2162
3162
4162
5162
6162
7162
8162
1262
2262
3262
4262
5262
6262
7262
1362
2362
3362
4362
5362
6362
7362
1462
2462
3462
4462
5462
6462
7462
1562
2562
3562
4562
5562
6562
7562
1662
2662
3662
4662
5662
6662
7662
1762
2762
3762
4762
5762
6762
7762
1862
2862
3862
4862
5862
6862
7862
1962
2962
3962
4962
5962
6962
7962
1072
2072
3072
4072
5072
6072
7072
8072
1172
2172
3172
4172
5172
6172
7172
8172
1272
2272
3272
4272
5272
6272
7272
1372
2372
3372
4372
5372
6372
7372
1472
2472
3472
4472
5472
6472
7472
1572
2572
3572
4572
5572
6572
7572
1672
2672
3672
4672
5672
6672
7672
1772
2772
3772
4772
5772
6772
7772
1872
2872
3872
4872
5872
6872
7872
1972
2972
3972
4972
5972
6972
7972
1082
2082
3082
4082
5082
6082
7082
8082
1182
2182
3182
4182
5182
6182
7182
8182
1282
2282
3282
4282
5282
6282
7282
1382
2382
3382
4382
5382
6382
7382
1482
2482
3482
4482
5482
6482
7482
1582
2582
3582
4582
5582
6582
7582
1682
2682
3682
4682
5682
6682
7682
1782
2782
3782
4782
5782
6782
7782
1882
2882
3882
4882
5882
6882
7882
1982
2982
3982
4982
5982
6982
7982
1092
2092
3092
4092
5092
6092
7092
8092
1192
2192
3192
4192
5192
6192
7192
8192
1292
2292
3292
4292
5292
6292
7292
1392
2392
3392
4392
5392
6392
7392
1492
2492
3492
4492
5492
6492
7492
1592
2592
3592
4592
5592
6592
7592
1692
2692
3692
4692
5692
6692
7692
1792
2792
3792
4792
5792
6792
7792
1892
2892
3892
4892
5892
6892
7892
1992
2992
3992
4992
5992
6992
7992
1003
2003
3003
4003
5003
6003
7003
8003
1103
2103
3103
4103
5103
6103
7103
8103
1203
2203
3203
4203
5203
6203
7203
8203
1303
2303
3303
4303
5303
6303
7303
1403
2403
3403
4403
5403
6403
7403
1503
2503
3503
4503
5503
6503
7503
1603
2603
3603
4603
5603
6603
7603
1703
2703
3703
4703
5703
6703
7703
1803
2803
3803
4803
5803
6803
7803
1903
2903
3903
4903
5903
6903
7903
1013
2013
3013
4013
5013
6013
7013
8013
1113
2113
3113
4113
5113
6113
7113
8113
1213
2213
3213
4213
5213
6213
7213
8213
1313
2313
3313
4313
5313
6313
7313
1413
2413
3413
4413
5413
6413
7413
1513
2513
3513
4513
5513
6513
7513
1613
2613
3613
4613
5613
6613
7613
1713
2713
3713
4713
5713
6713
7713
1813
2813
3813
4813
5813
6813
7813
1913
2913
3913
4913
5913
6913
7913
1023
2023
3023
4023
5023
6023
7023
8023
1123
2123
3123
4123
5123
6123
7123
8123
1223
2223
3223
4223
5223
6223
7223
8223
1323
2323
3323
4323
5323
6323
7323
1423
2423
3423
4423
5423
6423
7423
1523
2523
3523
4523
5523
6523
7523
1623
2623
3623
4623
5623
6623
7623
1723
2723
3723
4723
5723
6723
7723
1823
2823
3823
4823
5823
6823
7823
1923
2923
3923
4923
5923
6923
7923
1033
2033
3033
4033
5033
6033
7033
8033
1133
2133
3133
4133
5133
6133
7133
8133
1233
2233
3233
4233
5233
6233
7233
8233
1333
2333
3333
4333
5333
6333
7333
1433
2433
3433
4433
5433
6433
7433
1533
2533
3533
4533
5533
6533
7533
1633
2633
3633
4633
5633
6633
7633
1733
2733
3733
4733
5733
6733
7733
1833
2833
3833
4833
5833
6833
7833
1933
2933
3933
4933
5933
6933
7933
1043
2043
3043
4043
5043
6043
7043
8043
1143
2143
3143
4143
5143
6143
7143
8143
1243
2243
3243
4243
5243
6243
7243
8243
1343
2343
3343
4343
5343
6343
7343
1443
2443
3443
4443
5443
6443
7443
1543
2543
3543
4543
5543
6543
7543
1643
2643
3643
4643
5643
6643
7643
1743
2743
3743
4743
5743
6743
7743
1843
2843
3843
4843
5843
6843
7843
1943
2943
3943
4943
5943
6943
7943
1053
2053
3053
4053
5053
6053
7053
8053
1153
2153
3153
4153
5153
6153
7153
8153
1253
2253
3253
4253
5253
6253
7253
1353
2353
3353
4353
5353
6353
7353
1453
2453
3453
4453
5453
6453
7453
1553
2553
3553
4553
5553
6553
7553
1653
2653
3653
4653
5653
6653
7653
1753
2753
3753
4753
5753
6753
7753
1853
2853
3853
4853
5853
6853
7853
1953
2953
3953
4953
5953
6953
7953
1063
2063
3063
4063
5063
6063
7063
8063
1163
2163
3163
4163
5163
6163
7163
8163
1263
2263
3263
4263
5263
6263
7263
1363
2363
3363
4363
5363
6363
7363
1463
2463
3463
4463
5463
6463
7463
1563
2563
3563
4563
5563
6563
7563
1663
2663
3663
4663
5663
6663
7663
1763
2763
3763
4763
5763
6763
7763
1863
2863
3863
4863
5863
6863
7863
1963
2963
3963
4963
5963
6963
7963
1073
2073
3073
4073
5073
6073
7073
8073
1173
2173
3173
4173
5173
6173
7173
8173
1273
2273
3273
4273
5273
6273
7273
1373
2373
3373
4373
5373
6373
7373
1473
2473
3473
4473
5473
6473
7473
1573
2573
3573
4573
5573
6573
7573
1673
2673
3673
4673
5673
6673
7673
1773
2773
3773
4773
5773
6773
7773
1873
2873
3873
4873
5873
6873
7873
1973
2973
3973
4973
5973
6973
7973
1083
2083
3083
4083
5083
6083
7083
8083
1183
2183
3183
4183
5183
6183
7183
8183
1283
2283
3283
4283
5283
6283
7283
1383
2383
3383
4383
5383
6383
7383
1483
2483
3483
4483
5483
6483
7483
1583
2583
3583
4583
5583
6583
7583
1683
2683
3683
4683
5683
6683
7683
1783
2783
3783
4783
5783
6783
7783
1883
2883
3883
4883
5883
6883
7883
1983
2983
3983
4983
5983
6983
7983
1093
2093
3093
4093
5093
6093
7093
8093
1193
2193
3193
4193
5193
6193
7193
8193
1293
2293
3293
4293
5293
6293
7293
1393
2393
3393
4393
5393
6393
7393
1493
2493
3493
4493
5493
6493
7493
1593
2593
3593
4593
5593
6593
7593
1693
2693
3693
4693
5693
6693
7693
1793
2793
3793
4793
5793
6793
7793
1893
2893
3893
4893
5893
6893
7893
1993
2993
3993
4993
5993
6993
7993
1004
2004
3004
4004
5004
6004
7004
8004
1104
2104
3104
4104
5104
6104
7104
8104
1204
2204
3204
4204
5204
6204
7204
8204
1304
2304
3304
4304
5304
6304
7304
1404
2404
3404
4404
5404
6404
7404
1504
2504
3504
4504
5504
6504
7504
1604
2604
3604
4604
5604
6604
7604
1704
2704
3704
4704
5704
6704
7704
1804
2804
3804
4804
5804
6804
7804
1904
2904
3904
4904
5904
6904
7904
1014
2014
3014
4014
5014
6014
7014
8014
1114
2114
3114
4114
5114
6114
7114
8114
1214
2214
3214
4214
5214
6214
7214
8214
1314
2314
3314
4314
5314
6314
7314
1414
2414
3414
4414
5414
6414
7414
1514
2514
3514
4514
5514
6514
7514
1614
2614
3614
4614
5614
6614
7614
1714
2714
3714
4714
5714
6714
7714
1814
2814
3814
4814
5814
6814
7814
1914
2914
3914
4914
5914
6914
7914
1024
2024
3024
4024
5024
6024
7024
8024
1124
2124
3124
4124
5124
6124
7124
8124
1224
2224
3224
4224
5224
6224
7224
8224
1324
2324
3324
4324
5324
6324
7324
1424
2424
3424
4424
5424
6424
7424
1524
2524
3524
4524
5524
6524
7524
1624
2624
3624
4624
5624
6624
7624
1724
2724
3724
4724
5724
6724
7724
1824
2824
3824
4824
5824
6824
7824
1924
2924
3924
4924
5924
6924
7924
1034
2034
3034
4034
5034
6034
7034
8034
1134
2134
3134
4134
5134
6134
7134
8134
1234
2234
3234
4234
5234
6234
7234
8234
1334
2334
3334
4334
5334
6334
7334
1434
2434
3434
4434
5434
6434
7434
1534
2534
3534
4534
5534
6534
7534
1634
2634
3634
4634
5634
6634
7634
1734
2734
3734
4734
5734
6734
7734
1834
2834
3834
4834
5834
6834
7834
1934
2934
3934
4934
5934
6934
7934
1044
2044
3044
4044
5044
6044
7044
8044
1144
2144
3144
4144
5144
6144
7144
8144
1244
2244
3244
4244
5244
6244
7244
8244
1344
2344
3344
4344
5344
6344
7344
1444
2444
3444
4444
5444
6444
7444
1544
2544
3544
4544
5544
6544
7544
1644
2644
3644
4644
5644
6644
7644
1744
2744
3744
4744
5744
6744
7744
1844
2844
3844
4844
5844
6844
7844
1944
2944
3944
4944
5944
6944
7944
1054
2054
3054
4054
5054
6054
7054
8054
1154
2154
3154
4154
5154
6154
7154
8154
1254
2254
3254
4254
5254
6254
7254
1354
2354
3354
4354
5354
6354
7354
1454
2454
3454
4454
5454
6454
7454
1554
2554
3554
4554
5554
6554
7554
1654
2654
3654
4654
5654
6654
7654
1754
2754
3754
4754
5754
6754
7754
1854
2854
3854
4854
5854
6854
7854
1954
2954
3954
4954
5954
6954
7954
1064
2064
3064
4064
5064
6064
7064
8064
1164
2164
3164
4164
5164
6164
7164
8164
1264
2264
3264
4264
5264
6264
7264
1364
2364
3364
4364
5364
6364
7364
1464
2464
3464
4464
5464
6464
7464
1564
2564
3564
4564
5564
6564
7564
1664
2664
3664
4664
5664
6664
7664
1764
2764
3764
4764
5764
6764
7764
1864
2864
3864
4864
5864
6864
7864
1964
2964
3964
4964
5964
6964
7964
1074
2074
3074
4074
5074
6074
7074
8074
1174
2174
3174
4174
5174
6174
7174
8174
1274
2274
3274
4274
5274
6274
7274
1374
2374
3374
4374
5374
6374
7374
1474
2474
3474
4474
5474
6474
7474
1574
2574
3574
4574
5574
6574
7574
1674
2674
3674
4674
5674
6674
7674
1774
2774
3774
4774
5774
6774
7774
1874
2874
3874
4874
5874
6874
7874
1974
2974
3974
4974
5974
6974
7974
1084
2084
3084
4084
5084
6084
7084
8084
1184
2184
3184
4184
5184
6184
7184
8184
1284
2284
3284
4284
5284
6284
7284
1384
2384
3384
4384
5384
6384
7384
1484
2484
3484
4484
5484
6484
7484
1584
2584
3584
4584
5584
6584
7584
1684
2684
3684
4684
5684
6684
7684
1784
2784
3784
4784
5784
6784
7784
1884
2884
3884
4884
5884
6884
7884
1984
2984
3984
4984
5984
6984
7984
1094
2094
3094
4094
5094
6094
7094
8094
1194
2194
3194
4194
5194
6194
7194
8194
1294
2294
3294
4294
5294
6294
7294
1394
2394
3394
4394
5394
6394
7394
1494
2494
3494
4494
5494
6494
7494
1594
2594
3594
4594
5594
6594
7594
1694
2694
3694
4694
5694
6694
7694
1794
2794
3794
4794
5794
6794
7794
1894
2894
3894
4894
5894
6894
7894
1994
2994
3994
4994
5994
6994
7994
1005
2005
3005
4005
5005
6005
7005
8005
1105
2105
3105
4105
5105
6105
7105
8105
1205
2205
3205
4205
5205
6205
7205
8205
1305
2305
3305
4305
5305
6305
7305
1405
2405
3405
4405
5405
6405
7405
1505
2505
3505
4505
5505
6505
7505
1605
2605
3605
4605
5605
6605
7605
1705
2705
3705
4705
5705
6705
7705
1805
2805
3805
4805
5805
6805
7805
1905
2905
3905
4905
5905
6905
7905
1015
2015
3015
4015
5015
6015
7015
8015
1115
2115
3115
4115
5115
6115
7115
8115
1215
2215
3215
4215
5215
6215
7215
8215
1315
2315
3315
4315
5315
6315
7315
1415
2415
3415
4415
5415
6415
7415
1515
2515
3515
4515
5515
6515
7515
1615
2615
3615
4615
5615
6615
7615
1715
2715
3715
4715
5715
6715
7715
1815
2815
3815
4815
5815
6815
7815
1915
2915
3915
4915
5915
6915
7915
1025
2025
3025
4025
5025
6025
7025
8025
1125
2125
3125
4125
5125
6125
7125
8125
1225
2225
3225
4225
5225
6225
7225
8225
1325
2325
3325
4325
5325
6325
7325
1425
2425
3425
4425
5425
6425
7425
1525
2525
3525
4525
5525
6525
7525
1625
2625
3625
4625
5625
6625
7625
1725
2725
3725
4725
5725
6725
7725
1825
2825
3825
4825
5825
6825
7825
1925
2925
3925
4925
5925
6925
7925
1035
2035
3035
4035
5035
6035
7035
8035
1135
2135
3135
4135
5135
6135
7135
8135
1235
2235
3235
4235
5235
6235
7235
8235
1335
2335
3335
4335
5335
6335
7335
1435
2435
3435
4435
5435
6435
7435
1535
2535
3535
4535
5535
6535
7535
1635
2635
3635
4635
5635
6635
7635
1735
2735
3735
4735
5735
6735
7735
1835
2835
3835
4835
5835
6835
7835
1935
2935
3935
4935
5935
6935
7935
1045
2045
3045
4045
5045
6045
7045
8045
1145
2145
3145
4145
5145
6145
7145
8145
1245
2245
3245
4245
5245
6245
7245
8245
1345
2345
3345
4345
5345
6345
7345
1445
2445
3445
4445
5445
6445
7445
1545
2545
3545
4545
5545
6545
7545
1645
2645
3645
4645
5645
6645
7645
1745
2745
3745
4745
5745
6745
7745
1845
2845
3845
4845
5845
6845
7845
1945
2945
3945
4945
5945
6945
7945
1055
2055
3055
4055
5055
6055
7055
8055
1155
2155
3155
4155
5155
6155
7155
8155
1255
2255
3255
4255
5255
6255
7255
1355
2355
3355
4355
5355
6355
7355
1455
2455
3455
4455
5455
6455
7455
1555
2555
3555
4555
5555
6555
7555
1655
2655
3655
4655
5655
6655
7655
1755
2755
3755
4755
5755
6755
7755
1855
2855
3855
4855
5855
6855
7855
1955
2955
3955
4955
5955
6955
7955
1065
2065
3065
4065
5065
6065
7065
8065
1165
2165
3165
4165
5165
6165
7165
8165
1265
2265
3265
4265
5265
6265
7265
1365
2365
3365
4365
5365
6365
7365
1465
2465
3465
4465
5465
6465
7465
1565
2565
3565
4565
5565
6565
7565
1665
2665
3665
4665
5665
6665
7665
1765
2765
3765
4765
5765
6765
7765
1865
2865
3865
4865
5865
6865
7865
1965
2965
3965
4965
5965
6965
7965
1075
2075
3075
4075
5075
6075
7075
8075
1175
2175
3175
4175
5175
6175
7175
8175
1275
2275
3275
4275
5275
6275
7275
1375
2375
3375
4375
5375
6375
7375
1475
2475
3475
4475
5475
6475
7475
1575
2575
3575
4575
5575
6575
7575
1675
2675
3675
4675
5675
6675
7675
1775
2775
3775
4775
5775
6775
7775
1875
2875
3875
4875
5875
6875
7875
1975
2975
3975
4975
5975
6975
7975
1085
2085
3085
4085
5085
6085
7085
8085
1185
2185
3185
4185
5185
6185
7185
8185
1285
2285
3285
4285
5285
6285
7285
1385
2385
3385
4385
5385
6385
7385
1485
2485
3485
4485
5485
6485
7485
1585
2585
3585
4585
5585
6585
7585
1685
2685
3685
4685
5685
6685
7685
1785
2785
3785
4785
5785
6785
7785
1885
2885
3885
4885
5885
6885
7885
1985
2985
3985
4985
5985
6985
7985
1095
2095
3095
4095
5095
6095
7095
8095
1195
2195
3195
4195
5195
6195
7195
8195
1295
2295
3295
4295
5295
6295
7295
1395
2395
3395
4395
5395
6395
7395
1495
2495
3495
4495
5495
6495
7495
1595
2595
3595
4595
5595
6595
7595
1695
2695
3695
4695
5695
6695
7695
1795
2795
3795
4795
5795
6795
7795
1895
2895
3895
4895
5895
6895
7895
1995
2995
3995
4995
5995
6995
7995
1006
2006
3006
4006
5006
6006
7006
8006
1106
2106
3106
4106
5106
6106
7106
8106
1206
2206
3206
4206
5206
6206
7206
8206
1306
2306
3306
4306
5306
6306
7306
1406
2406
3406
4406
5406
6406
7406
1506
2506
3506
4506
5506
6506
7506
1606
2606
3606
4606
5606
6606
7606
1706
2706
3706
4706
5706
6706
7706
1806
2806
3806
4806
5806
6806
7806
1906
2906
3906
4906
5906
6906
7906
1016
2016
3016
4016
5016
6016
7016
8016
1116
2116
3116
4116
5116
6116
7116
8116
1216
2216
3216
4216
5216
6216
7216
8216
1316
2316
3316
4316
5316
6316
7316
1416
2416
3416
4416
5416
6416
7416
1516
2516
3516
4516
5516
6516
7516
1616
2616
3616
4616
5616
6616
7616
1716
2716
3716
4716
5716
6716
7716
1816
2816
3816
4816
5816
6816
7816
1916
2916
3916
4916
5916
6916
7916
1026
2026
3026
4026
5026
6026
7026
8026
1126
2126
3126
4126
5126
6126
7126
8126
1226
2226
3226
4226
5226
6226
7226
8226
1326
2326
3326
4326
5326
6326
7326
1426
2426
3426
4426
5426
6426
7426
1526
2526
3526
4526
5526
6526
7526
1626
2626
3626
4626
5626
6626
7626
1726
2726
3726
4726
5726
6726
7726
1826
2826
3826
4826
5826
6826
7826
1926
2926
3926
4926
5926
6926
7926
1036
2036
3036
4036
5036
6036
7036
8036
1136
2136
3136
4136
5136
6136
7136
8136
1236
2236
3236
4236
5236
6236
7236
8236
1336
2336
3336
4336
5336
6336
7336
1436
2436
3436
4436
5436
6436
7436
1536
2536
3536
4536
5536
6536
7536
1636
2636
3636
4636
5636
6636
7636
1736
2736
3736
4736
5736
6736
7736
1836
2836
3836
4836
5836
6836
7836
1936
2936
3936
4936
5936
6936
7936
1046
2046
3046
4046
5046
6046
7046
8046
1146
2146
3146
4146
5146
6146
7146
8146
1246
2246
3246
4246
5246
6246
7246
8246
1346
2346
3346
4346
5346
6346
7346
1446
2446
3446
4446
5446
6446
7446
1546
2546
3546
4546
5546
6546
7546
1646
2646
3646
4646
5646
6646
7646
1746
2746
3746
4746
5746
6746
7746
1846
2846
3846
4846
5846
6846
7846
1946
2946
3946
4946
5946
6946
7946
1056
2056
3056
4056
5056
6056
7056
8056
1156
2156
3156
4156
5156
6156
7156
8156
1256
2256
3256
4256
5256
6256
7256
1356
2356
3356
4356
5356
6356
7356
1456
2456
3456
4456
5456
6456
7456
1556
2556
3556
4556
5556
6556
7556
1656
2656
3656
4656
5656
6656
7656
1756
2756
3756
4756
5756
6756
7756
1856
2856
3856
4856
5856
6856
7856
1956
2956
3956
4956
5956
6956
7956
1066
2066
3066
4066
5066
6066
7066
8066
1166
2166
3166
4166
5166
6166
7166
8166
1266
2266
3266
4266
5266
6266
7266
1366
2366
3366
4366
5366
6366
7366
1466
2466
3466
4466
5466
6466
7466
1566
2566
3566
4566
5566
6566
7566
1666
2666
3666
4666
5666
6666
7666
1766
2766
3766
4766
5766
6766
7766
1866
2866
3866
4866
5866
6866
7866
1966
2966
3966
4966
5966
6966
7966
1076
2076
3076
4076
5076
6076
7076
8076
1176
2176
3176
4176
5176
6176
7176
8176
1276
2276
3276
4276
5276
6276
7276
1376
2376
3376
4376
5376
6376
7376
1476
2476
3476
4476
5476
6476
7476
1576
2576
3576
4576
5576
6576
7576
1676
2676
3676
4676
5676
6676
7676
1776
2776
3776
4776
5776
6776
7776
1876
2876
3876
4876
5876
6876
7876
1976
2976
3976
4976
5976
6976
7976
1086
2086
3086
4086
5086
6086
7086
8086
1186
2186
3186
4186
5186
6186
7186
8186
1286
2286
3286
4286
5286
6286
7286
1386
2386
3386
4386
5386
6386
7386
1486
2486
3486
4486
5486
6486
7486
1586
2586
3586
4586
5586
6586
7586
1686
2686
3686
4686
5686
6686
7686
1786
2786
3786
4786
5786
6786
7786
1886
2886
3886
4886
5886
6886
7886
1986
2986
3986
4986
5986
6986
7986
1096
2096
3096
4096
5096
6096
7096
8096
1196
2196
3196
4196
5196
6196
7196
8196
1296
2296
3296
4296
5296
6296
7296
1396
2396
3396
4396
5396
6396
7396
1496
2496
3496
4496
5496
6496
7496
1596
2596
3596
4596
5596
6596
7596
1696
2696
3696
4696
5696
6696
7696
1796
2796
3796
4796
5796
6796
7796
1896
2896
3896
4896
5896
6896
7896
1996
2996
3996
4996
5996
6996
7996
1007
2007
3007
4007
5007
6007
7007
8007
1107
2107
3107
4107
5107
6107
7107
8107
1207
2207
3207
4207
5207
6207
7207
8207
1307
2307
3307
4307
5307
6307
7307
1407
2407
3407
4407
5407
6407
7407
1507
2507
3507
4507
5507
6507
7507
1607
2607
3607
4607
5607
6607
7607
1707
2707
3707
4707
5707
6707
7707
1807
2807
3807
4807
5807
6807
7807
1907
2907
3907
4907
5907
6907
7907
1017
2017
3017
4017
5017
6017
7017
8017
1117
2117
3117
4117
5117
6117
7117
8117
1217
2217
3217
4217
5217
6217
7217
8217
1317
2317
3317
4317
5317
6317
7317
1417
2417
3417
4417
5417
6417
7417
1517
2517
3517
4517
5517
6517
7517
1617
2617
3617
4617
5617
6617
7617
1717
2717
3717
4717
5717
6717
7717
1817
2817
3817
4817
5817
6817
7817
1917
2917
3917
4917
5917
6917
7917
1027
2027
3027
4027
5027
6027
7027
8027
1127
2127
3127
4127
5127
6127
7127
8127
1227
2227
3227
4227
5227
6227
7227
8227
1327
2327
3327
4327
5327
6327
7327
1427
2427
3427
4427
5427
6427
7427
1527
2527
3527
4527
5527
6527
7527
1627
2627
3627
4627
5627
6627
7627
1727
2727
3727
4727
5727
6727
7727
1827
2827
3827
4827
5827
6827
7827
1927
2927
3927
4927
5927
6927
7927
1037
2037
3037
4037
5037
6037
7037
8037
1137
2137
3137
4137
5137
6137
7137
8137
1237
2237
3237
4237
5237
6237
7237
8237
1337
2337
3337
4337
5337
6337
7337
1437
2437
3437
4437
5437
6437
7437
1537
2537
3537
4537
5537
6537
7537
1637
2637
3637
4637
5637
6637
7637
1737
2737
3737
4737
5737
6737
7737
1837
2837
3837
4837
5837
6837
7837
1937
2937
3937
4937
5937
6937
7937
1047
2047
3047
4047
5047
6047
7047
8047
1147
2147
3147
4147
5147
6147
7147
8147
1247
2247
3247
4247
5247
6247
7247
8247
1347
2347
3347
4347
5347
6347
7347
1447
2447
3447
4447
5447
6447
7447
1547
2547
3547
4547
5547
6547
7547
1647
2647
3647
4647
5647
6647
7647
1747
2747
3747
4747
5747
6747
7747
1847
2847
3847
4847
5847
6847
7847
1947
2947
3947
4947
5947
6947
7947
1057
2057
3057
4057
5057
6057
7057
8057
1157
2157
3157
4157
5157
6157
7157
8157
1257
2257
3257
4257
5257
6257
7257
1357
2357
3357
4357
5357
6357
7357
1457
2457
3457
4457
5457
6457
7457
1557
2557
3557
4557
5557
6557
7557
1657
2657
3657
4657
5657
6657
7657
1757
2757
3757
4757
5757
6757
7757
1857
2857
3857
4857
5857
6857
7857
1957
2957
3957
4957
5957
6957
7957
1067
2067
3067
4067
5067
6067
7067
8067
1167
2167
3167
4167
5167
6167
7167
8167
1267
2267
3267
4267
5267
6267
7267
1367
2367
3367
4367
5367
6367
7367
1467
2467
3467
4467
5467
6467
7467
1567
2567
3567
4567
5567
6567
7567
1667
2667
3667
4667
5667
6667
7667
1767
2767
3767
4767
5767
6767
7767
1867
2867
3867
4867
5867
6867
7867
1967
2967
3967
4967
5967
6967
7967
1077
2077
3077
4077
5077
6077
7077
8077
1177
2177
3177
4177
5177
6177
7177
8177
1277
2277
3277
4277
5277
6277
7277
1377
2377
3377
4377
5377
6377
7377
1477
2477
3477
4477
5477
6477
7477
1577
2577
3577
4577
5577
6577
7577
1677
2677
3677
4677
5677
6677
7677
1777
2777
3777
4777
5777
6777
7777
1877
2877
3877
4877
5877
6877
7877
1977
2977
3977
4977
5977
6977
7977
1087
2087
3087
4087
5087
6087
7087
8087
1187
2187
3187
4187
5187
6187
7187
8187
1287
2287
3287
4287
5287
6287
7287
1387
2387
3387
4387
5387
6387
7387
1487
2487
3487
4487
5487
6487
7487
1587
2587
3587
4587
5587
6587
7587
1687
2687
3687
4687
5687
6687
7687
1787
2787
3787
4787
5787
6787
7787
1887
2887
3887
4887
5887
6887
7887
1987
2987
3987
4987
5987
6987
7987
1097
2097
3097
4097
5097
6097
7097
8097
1197
2197
3197
4197
5197
6197
7197
8197
1297
2297
3297
4297
5297
6297
7297
1397
2397
3397
4397
5397
6397
7397
1497
2497
3497
4497
5497
6497
7497
1597
2597
3597
4597
5597
6597
7597
1697
2697
3697
4697
5697
6697
7697
1797
2797
3797
4797
5797
6797
7797
1897
2897
3897
4897
5897
6897
7897
1997
2997
3997
4997
5997
6997
7997
1008
2008
3008
4008
5008
6008
7008
8008
1108
2108
3108
4108
5108
6108
7108
8108
1208
2208
3208
4208
5208
6208
7208
8208
1308
2308
3308
4308
5308
6308
7308
1408
2408
3408
4408
5408
6408
7408
1508
2508
3508
4508
5508
6508
7508
1608
2608
3608
4608
5608
6608
7608
1708
2708
3708
4708
5708
6708
7708
1808
2808
3808
4808
5808
6808
7808
1908
2908
3908
4908
5908
6908
7908
1018
2018
3018
4018
5018
6018
7018
8018
1118
2118
3118
4118
5118
6118
7118
8118
1218
2218
3218
4218
5218
6218
7218
8218
1318
2318
3318
4318
5318
6318
7318
1418
2418
3418
4418
5418
6418
7418
1518
2518
3518
4518
5518
6518
7518
1618
2618
3618
4618
5618
6618
7618
1718
2718
3718
4718
5718
6718
7718
1818
2818
3818
4818
5818
6818
7818
1918
2918
3918
4918
5918
6918
7918
1028
2028
3028
4028
5028
6028
7028
8028
1128
2128
3128
4128
5128
6128
7128
8128
1228
2228
3228
4228
5228
6228
7228
8228
1328
2328
3328
4328
5328
6328
7328
1428
2428
3428
4428
5428
6428
7428
1528
2528
3528
4528
5528
6528
7528
1628
2628
3628
4628
5628
6628
7628
1728
2728
3728
4728
5728
6728
7728
1828
2828
3828
4828
5828
6828
7828
1928
2928
3928
4928
5928
6928
7928
1038
2038
3038
4038
5038
6038
7038
8038
1138
2138
3138
4138
5138
6138
7138
8138
1238
2238
3238
4238
5238
6238
7238
8238
1338
2338
3338
4338
5338
6338
7338
1438
2438
3438
4438
5438
6438
7438
1538
2538
3538
4538
5538
6538
7538
1638
2638
3638
4638
5638
6638
7638
1738
2738
3738
4738
5738
6738
7738
1838
2838
3838
4838
5838
6838
7838
1938
2938
3938
4938
5938
6938
7938
1048
2048
3048
4048
5048
6048
7048
8048
1148
2148
3148
4148
5148
6148
7148
8148
1248
2248
3248
4248
5248
6248
7248
8248
1348
2348
3348
4348
5348
6348
7348
1448
2448
3448
4448
5448
6448
7448
1548
2548
3548
4548
5548
6548
7548
1648
2648
3648
4648
5648
6648
7648
1748
2748
3748
4748
5748
6748
7748
1848
2848
3848
4848
5848
6848
7848
1948
2948
3948
4948
5948
6948
7948
1058
2058
3058
4058
5058
6058
7058
8058
1158
2158
3158
4158
5158
6158
7158
8158
1258
2258
3258
4258
5258
6258
7258
1358
2358
3358
4358
5358
6358
7358
1458
2458
3458
4458
5458
6458
7458
1558
2558
3558
4558
5558
6558
7558
1658
2658
3658
4658
5658
6658
7658
1758
2758
3758
4758
5758
6758
7758
1858
2858
3858
4858
5858
6858
7858
1958
2958
3958
4958
5958
6958
7958
1068
2068
3068
4068
5068
6068
7068
8068
1168
2168
3168
4168
5168
6168
7168
8168
1268
2268
3268
4268
5268
6268
7268
1368
2368
3368
4368
5368
6368
7368
1468
2468
3468
4468
5468
6468
7468
1568
2568
3568
4568
5568
6568
7568
1668
2668
3668
4668
5668
6668
7668
1768
2768
3768
4768
5768
6768
7768
1868
2868
3868
4868
5868
6868
7868
1968
2968
3968
4968
5968
6968
7968
1078
2078
3078
4078
5078
6078
7078
8078
1178
2178
3178
4178
5178
6178
7178
8178
1278
2278
3278
4278
5278
6278
7278
1378
2378
3378
4378
5378
6378
7378
1478
2478
3478
4478
5478
6478
7478
1578
2578
3578
4578
5578
6578
7578
1678
2678
3678
4678
5678
6678
7678
1778
2778
3778
4778
5778
6778
7778
1878
2878
3878
4878
5878
6878
7878
1978
2978
3978
4978
5978
6978
7978
1088
2088
3088
4088
5088
6088
7088
8088
1188
2188
3188
4188
5188
6188
7188
8188
1288
2288
3288
4288
5288
6288
7288
1388
2388
3388
4388
5388
6388
7388
1488
2488
3488
4488
5488
6488
7488
1588
2588
3588
4588
5588
6588
7588
1688
2688
3688
4688
5688
6688
7688
1788
2788
3788
4788
5788
6788
7788
1888
2888
3888
4888
5888
6888
7888
1988
2988
3988
4988
5988
6988
7988
1098
2098
3098
4098
5098
6098
7098
8098
1198
2198
3198
4198
5198
6198
7198
8198
1298
2298
3298
4298
5298
6298
7298
1398
2398
3398
4398
5398
6398
7398
1498
2498
3498
4498
5498
6498
7498
1598
2598
3598
4598
5598
6598
7598
1698
2698
3698
4698
5698
6698
7698
1798
2798
3798
4798
5798
6798
7798
1898
2898
3898
4898
5898
6898
7898
1998
2998
3998
4998
5998
6998
7998
1009
2009
3009
4009
5009
6009
7009
8009
1109
2109
3109
4109
5109
6109
7109
8109
1209
2209
3209
4209
5209
6209
7209
8209
1309
2309
3309
4309
5309
6309
7309
1409
2409
3409
4409
5409
6409
7409
1509
2509
3509
4509
5509
6509
7509
1609
2609
3609
4609
5609
6609
7609
1709
2709
3709
4709
5709
6709
7709
1809
2809
3809
4809
5809
6809
7809
1909
2909
3909
4909
5909
6909
7909
1019
2019
3019
4019
5019
6019
7019
8019
1119
2119
3119
4119
5119
6119
7119
8119
1219
2219
3219
4219
5219
6219
7219
8219
1319
2319
3319
4319
5319
6319
7319
1419
2419
3419
4419
5419
6419
7419
1519
2519
3519
4519
5519
6519
7519
1619
2619
3619
4619
5619
6619
7619
1719
2719
3719
4719
5719
6719
7719
1819
2819
3819
4819
5819
6819
7819
1919
2919
3919
4919
5919
6919
7919
1029
2029
3029
4029
5029
6029
7029
8029
1129
2129
3129
4129
5129
6129
7129
8129
1229
2229
3229
4229
5229
6229
7229
8229
1329
2329
3329
4329
5329
6329
7329
1429
2429
3429
4429
5429
6429
7429
1529
2529
3529
4529
5529
6529
7529
1629
2629
3629
4629
5629
6629
7629
1729
2729
3729
4729
5729
6729
7729
1829
2829
3829
4829
5829
6829
7829
1929
2929
3929
4929
5929
6929
7929
1039
2039
3039
4039
5039
6039
7039
8039
1139
2139
3139
4139
5139
6139
7139
8139
1239
2239
3239
4239
5239
6239
7239
8239
1339
2339
3339
4339
5339
6339
7339
1439
2439
3439
4439
5439
6439
7439
1539
2539
3539
4539
5539
6539
7539
1639
2639
3639
4639
5639
6639
7639
1739
2739
3739
4739
5739
6739
7739
1839
2839
3839
4839
5839
6839
7839
1939
2939
3939
4939
5939
6939
7939
1049
2049
3049
4049
5049
6049
7049
8049
1149
2149
3149
4149
5149
6149
7149
8149
1249
2249
3249
4249
5249
6249
7249
1349
2349
3349
4349
5349
6349
7349
1449
2449
3449
4449
5449
6449
7449
1549
2549
3549
4549
5549
6549
7549
1649
2649
3649
4649
5649
6649
7649
1749
2749
3749
4749
5749
6749
7749
1849
2849
3849
4849
5849
6849
7849
1949
2949
3949
4949
5949
6949
7949
1059
2059
3059
4059
5059
6059
7059
8059
1159
2159
3159
4159
5159
6159
7159
8159
1259
2259
3259
4259
5259
6259
7259
1359
2359
3359
4359
5359
6359
7359
1459
2459
3459
4459
5459
6459
7459
1559
2559
3559
4559
5559
6559
7559
1659
2659
3659
4659
5659
6659
7659
1759
2759
3759
4759
5759
6759
7759
1859
2859
3859
4859
5859
6859
7859
1959
2959
3959
4959
5959
6959
7959
1069
2069
3069
4069
5069
6069
7069
8069
1169
2169
3169
4169
5169
6169
7169
8169
1269
2269
3269
4269
5269
6269
7269
1369
2369
3369
4369
5369
6369
7369
1469
2469
3469
4469
5469
6469
7469
1569
2569
3569
4569
5569
6569
7569
1669
2669
3669
4669
5669
6669
7669
1769
2769
3769
4769
5769
6769
7769
1869
2869
3869
4869
5869
6869
7869
1969
2969
3969
4969
5969
6969
7969
1079
2079
3079
4079
5079
6079
7079
8079
1179
2179
3179
4179
5179
6179
7179
8179
1279
2279
3279
4279
5279
6279
7279
1379
2379
3379
4379
5379
6379
7379
1479
2479
3479
4479
5479
6479
7479
1579
2579
3579
4579
5579
6579
7579
1679
2679
3679
4679
5679
6679
7679
1779
2779
3779
4779
5779
6779
7779
1879
2879
3879
4879
5879
6879
7879
1979
2979
3979
4979
5979
6979
7979
1089
2089
3089
4089
5089
6089
7089
8089
1189
2189
3189
4189
5189
6189
7189
8189
1289
2289
3289
4289
5289
6289
7289
1389
2389
3389
4389
5389
6389
7389
1489
2489
3489
4489
5489
6489
7489
1589
2589
3589
4589
5589
6589
7589
1689
2689
3689
4689
5689
6689
7689
1789
2789
3789
4789
5789
6789
7789
1889
2889
3889
4889
5889
6889
7889
1989
2989
3989
4989
5989
6989
7989
1099
2099
3099
4099
5099
6099
7099
8099
1199
2199
3199
4199
5199
6199
7199
8199
1299
2299
3299
4299
5299
6299
7299
1399
2399
3399
4399
5399
6399
7399
1499
2499
3499
4499
5499
6499
7499
1599
2599
3599
4599
5599
6599
7599
1699
2699
3699
4699
5699
6699
7699
1799
2799
3799
4799
5799
6799
7799
1899
2899
3899
4899
5899
6899
7899
1999
2999
3999
4999
5999
6999
7999
S$T$U$V$W$X$Y$Z$[$\$]$^$_$`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$t$u$v$w$x$y$z${$|$}$~$
% %!%"%#%$%%%&%'%(%)%*%+%,%-%.%/%0%1%2%3%4%5%6%7%8%9%:%;%<%=%>%?%@%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%
I I!I"I#I$I%I&I'I(I)I*I+I,I-I.I/I0I1I2I3I4I5I6I7I8I9I:I;I<I=I>I?I@IAIBICIDIEIFIGIHIIIJIKILIMINIOIPIQIRISITIUIVIWIXIYIZI[I\I]I^I_I`IaIbIcIdIeIfIgIhIiIjIkIlImInIoIpIqIrIsItIuIvIwIxIyIzI{I|I}I
) )!)")
*#)$)%)&)
.}.|.~.
i.h.j.e.d.f.
342444/4.404'4
1(/(-(3()('(%(+(!(
(#(9(7(5(
A2@2C2=2<2?2G2F2
!&##
    
!!!!
""""
####
$$$$$
%%%%%
&&&&&
'''''
(((((
)))))
*****
+++++
,,,,,
------
......
//////
000000
111111
222222
333333
444444
555555
6666666
6666
7777777
7777
8888888
8888
9999999
9999
:::::::
::::
;;;;;;;
;;;;
<<<<<<<
<<<<
=======
====
>>>>>>>
>>>>
????????
????
?????
????
????
@@@@@@@@
@@@@
@@@@@
@@@@
@@@@
AAAAAAAA
AAAA
AAAAA
AAAA
AAAA
BBBBBBBB
BBBB
BBBBB
BBBB
BBBB
CCCCCCCC
CCCC
CCCCC
CCCC
CCCC
DDDDDDDD
DDDD
DDDDD
DDDD
DDDD
EEEEEEEE
EEEE
EEEEE
EEEE
EEEE
FFFFFFFF
FFFF
FFFFF
FFFF
FFFF
GGGGGGGG
GGGG
GGGGG
GGGG
GGGG
HHHHHHHHH
HHHH
HHHHHH
HHHH
HHHHH
HHHHHH
IIIIIIIII
IIII
IIIIII
IIII
IIIII
IIIIII
JJJJJJJJJ
JJJJ
JJJJJJ
JJJJ
JJJJJ
JJJJJJ
KKKKKKKKK
KKKK
KKKKKK
KKKK
KKKKK
KKKKKK
LLLLLLLLL
LLLL
LLLLLL
LLLL
LLLLL
LLLLLL
MMMMMMMMM
MMMM
MMMMMM
MMMM
MMMMM
MMMMMM
NNNNNNNNN
NNNN
NNNNNN
NNNN
NNNNN
NNNNNN
OOOOOOOOO
OOOO
OOOOOO
OOOO
OOOOO
OOOOOO
PPPPPPPPP
PPPP
PPPPPP
PPPP
PPPPP
PPPPPP
QQQQQQQQQQ
QQQQQ
QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ
RRRRRRRRRR
RRRRR
RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR
SSSSSSSSSS
SSSSS
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
TTTTTTTTTT
TTTTT
TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT
UUUUUUUUUU
UUUUU
UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU
VVVVVVVVVV
VVVVV
VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
WWWWWWWWWW
WWWWW
WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW
XXXXXXXXXX
XXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
YYYYYYYYYY
YYYYY
YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY
ZZZZZZZZZZZ
ZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
[[[[[[[[[[[
[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
\\\\\\\\\\\
\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
]]]]]]]]]]]
]]]]]
]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
^^^^^^^^^^^
^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
___________
_____
_________________________________________________
```````````
`````
`````````````````````````````````````````````````
aaaaaaaaaaa
aaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
bbbbbbbbbbb
bbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
cccccccccccc
cccccc
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
dddddddddddd
dddddd
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd
eeeeeeeeeeee
eeeeee
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
ffffffffffff
ffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
gggggggggggg
gggggg
ggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg
hhhhhhhhhhhh
hhhhhh
hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh
iiiiiiiiiiii
iiiiii
iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
jjjjjjjjjjjj
jjjjjj
jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj
kkkkkkkkkkkk
kkkkkk
kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk
lllllllllllll
llllll
lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
mmmmmmmmmmmmm
mmmmmm
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
nnnnnnnnnnnnn
nnnnnn
nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
ooooooooooooo
oooooo
ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
ppppppppppppp
pppppp
ppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp
qqqqqqqqqqqqq
qqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
rrrrrrrrrrrrr
rrrrrr
rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr
sssssssssssss
ssssss
sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss
ttttttttttttt
tttttt
ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt
uuuuuuuuuuuuuu
uuuuuuu
uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
vvvvvvvvvvvvvv
vvvvvvv
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
wwwwwwwwwwwwww
wwwwwww
wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
xxxxxxxxxxxxxx
xxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
yyyyyyyyyyyyyy
yyyyyyy
yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
zzzzzzzzzzzzzz
zzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
{{{{{{{{{{{{{{
{{{{{{{
{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{
||||||||||||||
|||||||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
}}}}}}}}}}}}}}
}}}}}}}
}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
~~~~~~~~~~~~~~~
~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
long unsigned in
.catch.all.valuellvm.eh.catch.al
Machine Optimization Remark Emitter
Debug Info Version
m.load.relative.llvm.load.relatiternally_definedair.externally_d
regalloc
Register Allocation
Objective-C Imagrbage CollectionObjective-C Garb
option-unspecifi
agx.stack_oob
local_per_threadcl_local_per_thrcl_local_internaconstant_literalconstant_samplerthread_invariantagx.dylib_bindings
agc.dylib_base
r_words_indirectagc.sampler_wordxture_heap.writeexture_heap.readagx.ss_bind
agc.main
VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100
SR100
R85_R86_R87_R88_R89_R90_R91_R92_R93_R94_R95_R96_R97_R98_R99_R100
VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200
SR200
R185_R186_R187_R188_R189_R190_R191_R192_R193_R194_R195_R196_R197_R198_R199_R200
SR300
SR400
SR500
VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110
SR110
R95_R96_R97_R98_R99_R100_R101_R102_R103_R104_R105_R106_R107_R108_R109_R110
VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210
SR210
R195_R196_R197_R198_R199_R200_R201_R202_R203_R204_R205_R206_R207_R208_R209_R210
SR310
SR410
SR510
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10
SR10
R0_R1_R2_R3_R4_R5_R6_R7_R8_R9_R10
VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120
SR120
R105_R106_R107_R108_R109_R110_R111_R112_R113_R114_R115_R116_R117_R118_R119_R120
VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220
SR220
R205_R206_R207_R208_R209_R210_R211_R212_R213_R214_R215_R216_R217_R218_R219_R220
SR320
SR420
VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20
SR20
R5_R6_R7_R8_R9_R10_R11_R12_R13_R14_R15_R16_R17_R18_R19_R20
VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130
SR130
R115_R116_R117_R118_R119_R120_R121_R122_R123_R124_R125_R126_R127_R128_R129_R130
VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230
SR230
R215_R216_R217_R218_R219_R220_R221_R222_R223_R224_R225_R226_R227_R228_R229_R230
SR330
SR430
VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30
SR30
R15_R16_R17_R18_R19_R20_R21_R22_R23_R24_R25_R26_R27_R28_R29_R30
VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140
SR140
R125_R126_R127_R128_R129_R130_R131_R132_R133_R134_R135_R136_R137_R138_R139_R140
VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240
SR240
R225_R226_R227_R228_R229_R230_R231_R232_R233_R234_R235_R236_R237_R238_R239_R240
SR340
SR440
VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40
SR40
R25_R26_R27_R28_R29_R30_R31_R32_R33_R34_R35_R36_R37_R38_R39_R40
VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150
SR150
R135_R136_R137_R138_R139_R140_R141_R142_R143_R144_R145_R146_R147_R148_R149_R150
VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247_VI248_VI249_VI250
SR250
R235_R236_R237_R238_R239_R240_R241_R242_R243_R244_R245_R246_R247_R248_R249_R250
SR350
SR450
VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50
SR50
R35_R36_R37_R38_R39_R40_R41_R42_R43_R44_R45_R46_R47_R48_R49_R50
VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160
SR160
R145_R146_R147_R148_R149_R150_R151_R152_R153_R154_R155_R156_R157_R158_R159_R160
SR260
SR360
SR460
VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60
SR60
R45_R46_R47_R48_R49_R50_R51_R52_R53_R54_R55_R56_R57_R58_R59_R60
VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170
SR170
R155_R156_R157_R158_R159_R160_R161_R162_R163_R164_R165_R166_R167_R168_R169_R170
SR270
SR370
SR470
VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70
SR70
R55_R56_R57_R58_R59_R60_R61_R62_R63_R64_R65_R66_R67_R68_R69_R70
VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180
SR180
R165_R166_R167_R168_R169_R170_R171_R172_R173_R174_R175_R176_R177_R178_R179_R180
SR280
SR380
SR480
VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80
SR80
R65_R66_R67_R68_R69_R70_R71_R72_R73_R74_R75_R76_R77_R78_R79_R80
VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190
SR190
R175_R176_R177_R178_R179_R180_R181_R182_R183_R184_R185_R186_R187_R188_R189_R190
SR290
SR390
SR490
VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90
SR90
R75_R76_R77_R78_R79_R80_R81_R82_R83_R84_R85_R86_R87_R88_R89_R90
VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101
SR101
R86_R87_R88_R89_R90_R91_R92_R93_R94_R95_R96_R97_R98_R99_R100_R101
VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201
SR201
R186_R187_R188_R189_R190_R191_R192_R193_R194_R195_R196_R197_R198_R199_R200_R201
SR301
SR401
SR501
VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111
SR111
R96_R97_R98_R99_R100_R101_R102_R103_R104_R105_R106_R107_R108_R109_R110_R111
VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211
SR211
R196_R197_R198_R199_R200_R201_R202_R203_R204_R205_R206_R207_R208_R209_R210_R211
SR311
SR411
SR511
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11
SR11
R0_R1_R2_R3_R4_R5_R6_R7_R8_R9_R10_R11
VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121
SR121
R106_R107_R108_R109_R110_R111_R112_R113_R114_R115_R116_R117_R118_R119_R120_R121
VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221
SR221
R206_R207_R208_R209_R210_R211_R212_R213_R214_R215_R216_R217_R218_R219_R220_R221
SR321
SR421
VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21
SR21
R6_R7_R8_R9_R10_R11_R12_R13_R14_R15_R16_R17_R18_R19_R20_R21
VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131
SR131
R116_R117_R118_R119_R120_R121_R122_R123_R124_R125_R126_R127_R128_R129_R130_R131
VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231
SR231
R216_R217_R218_R219_R220_R221_R222_R223_R224_R225_R226_R227_R228_R229_R230_R231
SR331
SR431
VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31
SR31
R16_R17_R18_R19_R20_R21_R22_R23_R24_R25_R26_R27_R28_R29_R30_R31
VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141
SR141
R126_R127_R128_R129_R130_R131_R132_R133_R134_R135_R136_R137_R138_R139_R140_R141
VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241
SR241
R226_R227_R228_R229_R230_R231_R232_R233_R234_R235_R236_R237_R238_R239_R240_R241
SR341
SR441
VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41
SR41
R26_R27_R28_R29_R30_R31_R32_R33_R34_R35_R36_R37_R38_R39_R40_R41
VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151
SR151
R136_R137_R138_R139_R140_R141_R142_R143_R144_R145_R146_R147_R148_R149_R150_R151
VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247_VI248_VI249_VI250_VI251
SR251
R236_R237_R238_R239_R240_R241_R242_R243_R244_R245_R246_R247_R248_R249_R250_R251
SR351
SR451
VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51
SR51
R36_R37_R38_R39_R40_R41_R42_R43_R44_R45_R46_R47_R48_R49_R50_R51
VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161
SR161
R146_R147_R148_R149_R150_R151_R152_R153_R154_R155_R156_R157_R158_R159_R160_R161
SR261
SR361
SR461
VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61
SR61
R46_R47_R48_R49_R50_R51_R52_R53_R54_R55_R56_R57_R58_R59_R60_R61
VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171
SR171
R156_R157_R158_R159_R160_R161_R162_R163_R164_R165_R166_R167_R168_R169_R170_R171
SR271
SR371
SR471
VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71
SR71
R56_R57_R58_R59_R60_R61_R62_R63_R64_R65_R66_R67_R68_R69_R70_R71
VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181
SR181
R166_R167_R168_R169_R170_R171_R172_R173_R174_R175_R176_R177_R178_R179_R180_R181
SR281
SR381
SR481
VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81
SR81
R66_R67_R68_R69_R70_R71_R72_R73_R74_R75_R76_R77_R78_R79_R80_R81
VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191
SR191
R176_R177_R178_R179_R180_R181_R182_R183_R184_R185_R186_R187_R188_R189_R190_R191
SR291
SR391
SR491
VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91
SR91
R76_R77_R78_R79_R80_R81_R82_R83_R84_R85_R86_R87_R88_R89_R90_R91
VI0_VI1
R0_R1
VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102
SR102
R87_R88_R89_R90_R91_R92_R93_R94_R95_R96_R97_R98_R99_R100_R101_R102
VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202
SR202
R187_R188_R189_R190_R191_R192_R193_R194_R195_R196_R197_R198_R199_R200_R201_R202
SR302
SR402
SR502
VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112
SR112
R97_R98_R99_R100_R101_R102_R103_R104_R105_R106_R107_R108_R109_R110_R111_R112
VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212
SR212
R197_R198_R199_R200_R201_R202_R203_R204_R205_R206_R207_R208_R209_R210_R211_R212
SR312
SR412
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12
SR12
R0_R1_R2_R3_R4_R5_R6_R7_R8_R9_R10_R11_R12
VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122
SR122
R107_R108_R109_R110_R111_R112_R113_R114_R115_R116_R117_R118_R119_R120_R121_R122
VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222
SR222
R207_R208_R209_R210_R211_R212_R213_R214_R215_R216_R217_R218_R219_R220_R221_R222
SR322
SR422
VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22
SR22
R7_R8_R9_R10_R11_R12_R13_R14_R15_R16_R17_R18_R19_R20_R21_R22
VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132
SR132
R117_R118_R119_R120_R121_R122_R123_R124_R125_R126_R127_R128_R129_R130_R131_R132
VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232
SR232
R217_R218_R219_R220_R221_R222_R223_R224_R225_R226_R227_R228_R229_R230_R231_R232
SR332
SR432
VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32
SR32
R17_R18_R19_R20_R21_R22_R23_R24_R25_R26_R27_R28_R29_R30_R31_R32
VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142
SR142
R127_R128_R129_R130_R131_R132_R133_R134_R135_R136_R137_R138_R139_R140_R141_R142
VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242
SR242
R227_R228_R229_R230_R231_R232_R233_R234_R235_R236_R237_R238_R239_R240_R241_R242
SR342
SR442
VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42
SR42
R27_R28_R29_R30_R31_R32_R33_R34_R35_R36_R37_R38_R39_R40_R41_R42
VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152
SR152
R137_R138_R139_R140_R141_R142_R143_R144_R145_R146_R147_R148_R149_R150_R151_R152
VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247_VI248_VI249_VI250_VI251_VI252
SR252
R237_R238_R239_R240_R241_R242_R243_R244_R245_R246_R247_R248_R249_R250_R251_R252
SR352
SR452
VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52
SR52
R37_R38_R39_R40_R41_R42_R43_R44_R45_R46_R47_R48_R49_R50_R51_R52
VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162
SR162
R147_R148_R149_R150_R151_R152_R153_R154_R155_R156_R157_R158_R159_R160_R161_R162
SR262
SR362
SR462
VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62
SR62
R47_R48_R49_R50_R51_R52_R53_R54_R55_R56_R57_R58_R59_R60_R61_R62
VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172
SR172
R157_R158_R159_R160_R161_R162_R163_R164_R165_R166_R167_R168_R169_R170_R171_R172
SR272
SR372
SR472
VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72
SR72
R57_R58_R59_R60_R61_R62_R63_R64_R65_R66_R67_R68_R69_R70_R71_R72
VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182
SR182
R167_R168_R169_R170_R171_R172_R173_R174_R175_R176_R177_R178_R179_R180_R181_R182
SR282
SR382
SR482
VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82
SR82
R67_R68_R69_R70_R71_R72_R73_R74_R75_R76_R77_R78_R79_R80_R81_R82
VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192
SR192
R177_R178_R179_R180_R181_R182_R183_R184_R185_R186_R187_R188_R189_R190_R191_R192
SR292
SR392
SR492
VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92
SR92
R77_R78_R79_R80_R81_R82_R83_R84_R85_R86_R87_R88_R89_R90_R91_R92
VI0_VI1_VI2
R0_R1_R2
VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103
SR103
R88_R89_R90_R91_R92_R93_R94_R95_R96_R97_R98_R99_R100_R101_R102_R103
VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203
SR203
R188_R189_R190_R191_R192_R193_R194_R195_R196_R197_R198_R199_R200_R201_R202_R203
SR303
SR403
SR503
VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113
SR113
R98_R99_R100_R101_R102_R103_R104_R105_R106_R107_R108_R109_R110_R111_R112_R113
VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213
SR213
R198_R199_R200_R201_R202_R203_R204_R205_R206_R207_R208_R209_R210_R211_R212_R213
SR313
SR413
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13
SR13
R0_R1_R2_R3_R4_R5_R6_R7_R8_R9_R10_R11_R12_R13
VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123
SR123
R108_R109_R110_R111_R112_R113_R114_R115_R116_R117_R118_R119_R120_R121_R122_R123
VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223
SR223
R208_R209_R210_R211_R212_R213_R214_R215_R216_R217_R218_R219_R220_R221_R222_R223
SR323
SR423
VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23
SR23
R8_R9_R10_R11_R12_R13_R14_R15_R16_R17_R18_R19_R20_R21_R22_R23
VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133
SR133
R118_R119_R120_R121_R122_R123_R124_R125_R126_R127_R128_R129_R130_R131_R132_R133
VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233
SR233
R218_R219_R220_R221_R222_R223_R224_R225_R226_R227_R228_R229_R230_R231_R232_R233
SR333
SR433
VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33
SR33
R18_R19_R20_R21_R22_R23_R24_R25_R26_R27_R28_R29_R30_R31_R32_R33
VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143
SR143
R128_R129_R130_R131_R132_R133_R134_R135_R136_R137_R138_R139_R140_R141_R142_R143
VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243
SR243
R228_R229_R230_R231_R232_R233_R234_R235_R236_R237_R238_R239_R240_R241_R242_R243
SR343
SR443
VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43
SR43
R28_R29_R30_R31_R32_R33_R34_R35_R36_R37_R38_R39_R40_R41_R42_R43
VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153
SR153
R138_R139_R140_R141_R142_R143_R144_R145_R146_R147_R148_R149_R150_R151_R152_R153
VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247_VI248_VI249_VI250_VI251_VI252_VI253
SR253
R238_R239_R240_R241_R242_R243_R244_R245_R246_R247_R248_R249_R250_R251_R252_R253
SR353
SR453
VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53
SR53
R38_R39_R40_R41_R42_R43_R44_R45_R46_R47_R48_R49_R50_R51_R52_R53
VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163
SR163
R148_R149_R150_R151_R152_R153_R154_R155_R156_R157_R158_R159_R160_R161_R162_R163
SR263
SR363
SR463
VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63
SR63
R48_R49_R50_R51_R52_R53_R54_R55_R56_R57_R58_R59_R60_R61_R62_R63
VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173
SR173
R158_R159_R160_R161_R162_R163_R164_R165_R166_R167_R168_R169_R170_R171_R172_R173
SR273
SR373
SR473
VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73
SR73
R58_R59_R60_R61_R62_R63_R64_R65_R66_R67_R68_R69_R70_R71_R72_R73
VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183
SR183
R168_R169_R170_R171_R172_R173_R174_R175_R176_R177_R178_R179_R180_R181_R182_R183
SR283
SR383
SR483
VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83
SR83
R68_R69_R70_R71_R72_R73_R74_R75_R76_R77_R78_R79_R80_R81_R82_R83
VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193
SR193
R178_R179_R180_R181_R182_R183_R184_R185_R186_R187_R188_R189_R190_R191_R192_R193
SR293
SR393
SR493
VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93
SR93
R78_R79_R80_R81_R82_R83_R84_R85_R86_R87_R88_R89_R90_R91_R92_R93
VI0_VI1_VI2_VI3
R0_R1_R2_R3
VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104
SR104
R89_R90_R91_R92_R93_R94_R95_R96_R97_R98_R99_R100_R101_R102_R103_R104
VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204
SR204
R189_R190_R191_R192_R193_R194_R195_R196_R197_R198_R199_R200_R201_R202_R203_R204
SR304
SR404
SR504
VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114
SR114
R99_R100_R101_R102_R103_R104_R105_R106_R107_R108_R109_R110_R111_R112_R113_R114
VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214
SR214
R199_R200_R201_R202_R203_R204_R205_R206_R207_R208_R209_R210_R211_R212_R213_R214
SR314
SR414
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14
SR14
R0_R1_R2_R3_R4_R5_R6_R7_R8_R9_R10_R11_R12_R13_R14
VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124
SR124
R109_R110_R111_R112_R113_R114_R115_R116_R117_R118_R119_R120_R121_R122_R123_R124
VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224
SR224
R209_R210_R211_R212_R213_R214_R215_R216_R217_R218_R219_R220_R221_R222_R223_R224
SR324
SR424
VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24
SR24
R9_R10_R11_R12_R13_R14_R15_R16_R17_R18_R19_R20_R21_R22_R23_R24
VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134
SR134
R119_R120_R121_R122_R123_R124_R125_R126_R127_R128_R129_R130_R131_R132_R133_R134
VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234
SR234
R219_R220_R221_R222_R223_R224_R225_R226_R227_R228_R229_R230_R231_R232_R233_R234
SR334
SR434
VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34
SR34
R19_R20_R21_R22_R23_R24_R25_R26_R27_R28_R29_R30_R31_R32_R33_R34
VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144
SR144
R129_R130_R131_R132_R133_R134_R135_R136_R137_R138_R139_R140_R141_R142_R143_R144
VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244
SR244
R229_R230_R231_R232_R233_R234_R235_R236_R237_R238_R239_R240_R241_R242_R243_R244
SR344
SR444
VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44
SR44
R29_R30_R31_R32_R33_R34_R35_R36_R37_R38_R39_R40_R41_R42_R43_R44
VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154
SR154
R139_R140_R141_R142_R143_R144_R145_R146_R147_R148_R149_R150_R151_R152_R153_R154
VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247_VI248_VI249_VI250_VI251_VI252_VI253_VI254
SR254
R239_R240_R241_R242_R243_R244_R245_R246_R247_R248_R249_R250_R251_R252_R253_R254
SR354
SR454
VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54
SR54
R39_R40_R41_R42_R43_R44_R45_R46_R47_R48_R49_R50_R51_R52_R53_R54
VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164
SR164
R149_R150_R151_R152_R153_R154_R155_R156_R157_R158_R159_R160_R161_R162_R163_R164
SR264
SR364
SR464
VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64
SR64
R49_R50_R51_R52_R53_R54_R55_R56_R57_R58_R59_R60_R61_R62_R63_R64
VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174
SR174
R159_R160_R161_R162_R163_R164_R165_R166_R167_R168_R169_R170_R171_R172_R173_R174
SR274
SR374
SR474
VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74
SR74
R59_R60_R61_R62_R63_R64_R65_R66_R67_R68_R69_R70_R71_R72_R73_R74
VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184
SR184
R169_R170_R171_R172_R173_R174_R175_R176_R177_R178_R179_R180_R181_R182_R183_R184
SR284
SR384
SR484
VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84
SR84
R69_R70_R71_R72_R73_R74_R75_R76_R77_R78_R79_R80_R81_R82_R83_R84
VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194
SR194
R179_R180_R181_R182_R183_R184_R185_R186_R187_R188_R189_R190_R191_R192_R193_R194
SR294
SR394
SR494
VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94
SR94
R79_R80_R81_R82_R83_R84_R85_R86_R87_R88_R89_R90_R91_R92_R93_R94
VI0_VI1_VI2_VI3_VI4
R0_R1_R2_R3_R4
VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105
SR105
R90_R91_R92_R93_R94_R95_R96_R97_R98_R99_R100_R101_R102_R103_R104_R105
VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205
SR205
R190_R191_R192_R193_R194_R195_R196_R197_R198_R199_R200_R201_R202_R203_R204_R205
SR305
SR405
SR505
VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115
SR115
R100_R101_R102_R103_R104_R105_R106_R107_R108_R109_R110_R111_R112_R113_R114_R115
VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215
SR215
R200_R201_R202_R203_R204_R205_R206_R207_R208_R209_R210_R211_R212_R213_R214_R215
SR315
SR415
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15
SR15
R0_R1_R2_R3_R4_R5_R6_R7_R8_R9_R10_R11_R12_R13_R14_R15
VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125
SR125
R110_R111_R112_R113_R114_R115_R116_R117_R118_R119_R120_R121_R122_R123_R124_R125
VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225
SR225
R210_R211_R212_R213_R214_R215_R216_R217_R218_R219_R220_R221_R222_R223_R224_R225
SR325
SR425
VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25
SR25
R10_R11_R12_R13_R14_R15_R16_R17_R18_R19_R20_R21_R22_R23_R24_R25
VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135
SR135
R120_R121_R122_R123_R124_R125_R126_R127_R128_R129_R130_R131_R132_R133_R134_R135
VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235
SR235
R220_R221_R222_R223_R224_R225_R226_R227_R228_R229_R230_R231_R232_R233_R234_R235
SR335
SR435
VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35
SR35
R20_R21_R22_R23_R24_R25_R26_R27_R28_R29_R30_R31_R32_R33_R34_R35
VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145
SR145
R130_R131_R132_R133_R134_R135_R136_R137_R138_R139_R140_R141_R142_R143_R144_R145
VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245
SR245
R230_R231_R232_R233_R234_R235_R236_R237_R238_R239_R240_R241_R242_R243_R244_R245
SR345
SR445
VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45
SR45
R30_R31_R32_R33_R34_R35_R36_R37_R38_R39_R40_R41_R42_R43_R44_R45
VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155
SR155
R140_R141_R142_R143_R144_R145_R146_R147_R148_R149_R150_R151_R152_R153_R154_R155
VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247_VI248_VI249_VI250_VI251_VI252_VI253_VI254_VI255
SR255
R240_R241_R242_R243_R244_R245_R246_R247_R248_R249_R250_R251_R252_R253_R254_R255
SR355
SR455
VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55
SR55
R40_R41_R42_R43_R44_R45_R46_R47_R48_R49_R50_R51_R52_R53_R54_R55
VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165
SR165
R150_R151_R152_R153_R154_R155_R156_R157_R158_R159_R160_R161_R162_R163_R164_R165
SR265
SR365
SR465
VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65
SR65
R50_R51_R52_R53_R54_R55_R56_R57_R58_R59_R60_R61_R62_R63_R64_R65
VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175
SR175
R160_R161_R162_R163_R164_R165_R166_R167_R168_R169_R170_R171_R172_R173_R174_R175
SR275
SR375
SR475
VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75
SR75
R60_R61_R62_R63_R64_R65_R66_R67_R68_R69_R70_R71_R72_R73_R74_R75
VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185
SR185
R170_R171_R172_R173_R174_R175_R176_R177_R178_R179_R180_R181_R182_R183_R184_R185
SR285
SR385
SR485
VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85
SR85
R70_R71_R72_R73_R74_R75_R76_R77_R78_R79_R80_R81_R82_R83_R84_R85
VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195
SR195
R180_R181_R182_R183_R184_R185_R186_R187_R188_R189_R190_R191_R192_R193_R194_R195
SR295
SR395
SR495
VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95
SR95
R80_R81_R82_R83_R84_R85_R86_R87_R88_R89_R90_R91_R92_R93_R94_R95
VI0_VI1_VI2_VI3_VI4_VI5
R0_R1_R2_R3_R4_R5
VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106
SR106
R91_R92_R93_R94_R95_R96_R97_R98_R99_R100_R101_R102_R103_R104_R105_R106
VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206
SR206
R191_R192_R193_R194_R195_R196_R197_R198_R199_R200_R201_R202_R203_R204_R205_R206
SR306
SR406
SR506
VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116
SR116
R101_R102_R103_R104_R105_R106_R107_R108_R109_R110_R111_R112_R113_R114_R115_R116
VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216
SR216
R201_R202_R203_R204_R205_R206_R207_R208_R209_R210_R211_R212_R213_R214_R215_R216
SR316
SR416
VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16
SR16
R1_R2_R3_R4_R5_R6_R7_R8_R9_R10_R11_R12_R13_R14_R15_R16
VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126
SR126
R111_R112_R113_R114_R115_R116_R117_R118_R119_R120_R121_R122_R123_R124_R125_R126
VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226
SR226
R211_R212_R213_R214_R215_R216_R217_R218_R219_R220_R221_R222_R223_R224_R225_R226
SR326
SR426
VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26
SR26
R11_R12_R13_R14_R15_R16_R17_R18_R19_R20_R21_R22_R23_R24_R25_R26
VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136
SR136
R121_R122_R123_R124_R125_R126_R127_R128_R129_R130_R131_R132_R133_R134_R135_R136
VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236
SR236
R221_R222_R223_R224_R225_R226_R227_R228_R229_R230_R231_R232_R233_R234_R235_R236
SR336
SR436
VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36
SR36
R21_R22_R23_R24_R25_R26_R27_R28_R29_R30_R31_R32_R33_R34_R35_R36
VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146
SR146
R131_R132_R133_R134_R135_R136_R137_R138_R139_R140_R141_R142_R143_R144_R145_R146
VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246
SR246
R231_R232_R233_R234_R235_R236_R237_R238_R239_R240_R241_R242_R243_R244_R245_R246
SR346
SR446
VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46
SR46
R31_R32_R33_R34_R35_R36_R37_R38_R39_R40_R41_R42_R43_R44_R45_R46
VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156
SR156
R141_R142_R143_R144_R145_R146_R147_R148_R149_R150_R151_R152_R153_R154_R155_R156
SR256
SR356
SR456
VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56
SR56
R41_R42_R43_R44_R45_R46_R47_R48_R49_R50_R51_R52_R53_R54_R55_R56
VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166
SR166
R151_R152_R153_R154_R155_R156_R157_R158_R159_R160_R161_R162_R163_R164_R165_R166
SR266
SR366
SR466
VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66
SR66
R51_R52_R53_R54_R55_R56_R57_R58_R59_R60_R61_R62_R63_R64_R65_R66
VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176
SR176
R161_R162_R163_R164_R165_R166_R167_R168_R169_R170_R171_R172_R173_R174_R175_R176
SR276
SR376
SR476
VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76
SR76
R61_R62_R63_R64_R65_R66_R67_R68_R69_R70_R71_R72_R73_R74_R75_R76
VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186
SR186
R171_R172_R173_R174_R175_R176_R177_R178_R179_R180_R181_R182_R183_R184_R185_R186
SR286
SR386
SR486
VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86
SR86
R71_R72_R73_R74_R75_R76_R77_R78_R79_R80_R81_R82_R83_R84_R85_R86
VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196
SR196
R181_R182_R183_R184_R185_R186_R187_R188_R189_R190_R191_R192_R193_R194_R195_R196
SR296
SR396
SR496
VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96
SR96
R81_R82_R83_R84_R85_R86_R87_R88_R89_R90_R91_R92_R93_R94_R95_R96
VI0_VI1_VI2_VI3_VI4_VI5_VI6
R0_R1_R2_R3_R4_R5_R6
VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107
SR107
R92_R93_R94_R95_R96_R97_R98_R99_R100_R101_R102_R103_R104_R105_R106_R107
VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207
SR207
R192_R193_R194_R195_R196_R197_R198_R199_R200_R201_R202_R203_R204_R205_R206_R207
SR307
SR407
SR507
VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117
SR117
R102_R103_R104_R105_R106_R107_R108_R109_R110_R111_R112_R113_R114_R115_R116_R117
VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217
SR217
R202_R203_R204_R205_R206_R207_R208_R209_R210_R211_R212_R213_R214_R215_R216_R217
SR317
SR417
VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17
SR17
R2_R3_R4_R5_R6_R7_R8_R9_R10_R11_R12_R13_R14_R15_R16_R17
VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127
SR127
R112_R113_R114_R115_R116_R117_R118_R119_R120_R121_R122_R123_R124_R125_R126_R127
VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227
SR227
R212_R213_R214_R215_R216_R217_R218_R219_R220_R221_R222_R223_R224_R225_R226_R227
SR327
SR427
VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27
SR27
R12_R13_R14_R15_R16_R17_R18_R19_R20_R21_R22_R23_R24_R25_R26_R27
VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137
SR137
R122_R123_R124_R125_R126_R127_R128_R129_R130_R131_R132_R133_R134_R135_R136_R137
VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237
SR237
R222_R223_R224_R225_R226_R227_R228_R229_R230_R231_R232_R233_R234_R235_R236_R237
SR337
SR437
VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37
SR37
R22_R23_R24_R25_R26_R27_R28_R29_R30_R31_R32_R33_R34_R35_R36_R37
VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147
SR147
R132_R133_R134_R135_R136_R137_R138_R139_R140_R141_R142_R143_R144_R145_R146_R147
VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247
SR247
R232_R233_R234_R235_R236_R237_R238_R239_R240_R241_R242_R243_R244_R245_R246_R247
SR347
SR447
VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47
SR47
R32_R33_R34_R35_R36_R37_R38_R39_R40_R41_R42_R43_R44_R45_R46_R47
VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157
SR157
R142_R143_R144_R145_R146_R147_R148_R149_R150_R151_R152_R153_R154_R155_R156_R157
SR257
SR357
SR457
VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57
SR57
R42_R43_R44_R45_R46_R47_R48_R49_R50_R51_R52_R53_R54_R55_R56_R57
VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167
SR167
R152_R153_R154_R155_R156_R157_R158_R159_R160_R161_R162_R163_R164_R165_R166_R167
SR267
SR367
SR467
VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67
SR67
R52_R53_R54_R55_R56_R57_R58_R59_R60_R61_R62_R63_R64_R65_R66_R67
VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177
SR177
R162_R163_R164_R165_R166_R167_R168_R169_R170_R171_R172_R173_R174_R175_R176_R177
SR277
SR377
SR477
VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77
SR77
R62_R63_R64_R65_R66_R67_R68_R69_R70_R71_R72_R73_R74_R75_R76_R77
VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187
SR187
R172_R173_R174_R175_R176_R177_R178_R179_R180_R181_R182_R183_R184_R185_R186_R187
SR287
SR387
SR487
VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87
SR87
R72_R73_R74_R75_R76_R77_R78_R79_R80_R81_R82_R83_R84_R85_R86_R87
VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197
SR197
R182_R183_R184_R185_R186_R187_R188_R189_R190_R191_R192_R193_R194_R195_R196_R197
SR297
SR397
SR497
VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97
SR97
R82_R83_R84_R85_R86_R87_R88_R89_R90_R91_R92_R93_R94_R95_R96_R97
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7
R0_R1_R2_R3_R4_R5_R6_R7
VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108
SR108
R93_R94_R95_R96_R97_R98_R99_R100_R101_R102_R103_R104_R105_R106_R107_R108
VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208
SR208
R193_R194_R195_R196_R197_R198_R199_R200_R201_R202_R203_R204_R205_R206_R207_R208
SR308
SR408
SR508
VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118
SR118
R103_R104_R105_R106_R107_R108_R109_R110_R111_R112_R113_R114_R115_R116_R117_R118
VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218
SR218
R203_R204_R205_R206_R207_R208_R209_R210_R211_R212_R213_R214_R215_R216_R217_R218
SR318
SR418
VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18
SR18
R3_R4_R5_R6_R7_R8_R9_R10_R11_R12_R13_R14_R15_R16_R17_R18
VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128
SR128
R113_R114_R115_R116_R117_R118_R119_R120_R121_R122_R123_R124_R125_R126_R127_R128
VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228
SR228
R213_R214_R215_R216_R217_R218_R219_R220_R221_R222_R223_R224_R225_R226_R227_R228
SR328
SR428
VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28
SR28
R13_R14_R15_R16_R17_R18_R19_R20_R21_R22_R23_R24_R25_R26_R27_R28
VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138
SR138
R123_R124_R125_R126_R127_R128_R129_R130_R131_R132_R133_R134_R135_R136_R137_R138
VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238
SR238
R223_R224_R225_R226_R227_R228_R229_R230_R231_R232_R233_R234_R235_R236_R237_R238
SR338
SR438
VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38
SR38
R23_R24_R25_R26_R27_R28_R29_R30_R31_R32_R33_R34_R35_R36_R37_R38
VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148
SR148
R133_R134_R135_R136_R137_R138_R139_R140_R141_R142_R143_R144_R145_R146_R147_R148
VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247_VI248
SR248
R233_R234_R235_R236_R237_R238_R239_R240_R241_R242_R243_R244_R245_R246_R247_R248
SR348
SR448
VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48
SR48
R33_R34_R35_R36_R37_R38_R39_R40_R41_R42_R43_R44_R45_R46_R47_R48
VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158
SR158
R143_R144_R145_R146_R147_R148_R149_R150_R151_R152_R153_R154_R155_R156_R157_R158
SR258
SR358
SR458
VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58
SR58
R43_R44_R45_R46_R47_R48_R49_R50_R51_R52_R53_R54_R55_R56_R57_R58
VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168
SR168
R153_R154_R155_R156_R157_R158_R159_R160_R161_R162_R163_R164_R165_R166_R167_R168
SR268
SR368
SR468
VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68
SR68
R53_R54_R55_R56_R57_R58_R59_R60_R61_R62_R63_R64_R65_R66_R67_R68
VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178
SR178
R163_R164_R165_R166_R167_R168_R169_R170_R171_R172_R173_R174_R175_R176_R177_R178
SR278
SR378
SR478
VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78
SR78
R63_R64_R65_R66_R67_R68_R69_R70_R71_R72_R73_R74_R75_R76_R77_R78
VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188
SR188
R173_R174_R175_R176_R177_R178_R179_R180_R181_R182_R183_R184_R185_R186_R187_R188
SR288
SR388
SR488
VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88
SR88
R73_R74_R75_R76_R77_R78_R79_R80_R81_R82_R83_R84_R85_R86_R87_R88
VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198
SR198
R183_R184_R185_R186_R187_R188_R189_R190_R191_R192_R193_R194_R195_R196_R197_R198
SR298
SR398
SR498
VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98
SR98
R83_R84_R85_R86_R87_R88_R89_R90_R91_R92_R93_R94_R95_R96_R97_R98
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8
R0_R1_R2_R3_R4_R5_R6_R7_R8
VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109
SR109
R94_R95_R96_R97_R98_R99_R100_R101_R102_R103_R104_R105_R106_R107_R108_R109
VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209
SR209
R194_R195_R196_R197_R198_R199_R200_R201_R202_R203_R204_R205_R206_R207_R208_R209
SR309
SR409
SR509
VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119
SR119
R104_R105_R106_R107_R108_R109_R110_R111_R112_R113_R114_R115_R116_R117_R118_R119
VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219
SR219
R204_R205_R206_R207_R208_R209_R210_R211_R212_R213_R214_R215_R216_R217_R218_R219
SR319
SR419
VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19
SR19
R4_R5_R6_R7_R8_R9_R10_R11_R12_R13_R14_R15_R16_R17_R18_R19
VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129
SR129
R114_R115_R116_R117_R118_R119_R120_R121_R122_R123_R124_R125_R126_R127_R128_R129
VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229
SR229
R214_R215_R216_R217_R218_R219_R220_R221_R222_R223_R224_R225_R226_R227_R228_R229
SR329
SR429
VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29
SR29
R14_R15_R16_R17_R18_R19_R20_R21_R22_R23_R24_R25_R26_R27_R28_R29
VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139
SR139
R124_R125_R126_R127_R128_R129_R130_R131_R132_R133_R134_R135_R136_R137_R138_R139
VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239
SR239
R224_R225_R226_R227_R228_R229_R230_R231_R232_R233_R234_R235_R236_R237_R238_R239
SR339
SR439
VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39
SR39
R24_R25_R26_R27_R28_R29_R30_R31_R32_R33_R34_R35_R36_R37_R38_R39
VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149
SR149
R134_R135_R136_R137_R138_R139_R140_R141_R142_R143_R144_R145_R146_R147_R148_R149
VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247_VI248_VI249
SR249
R234_R235_R236_R237_R238_R239_R240_R241_R242_R243_R244_R245_R246_R247_R248_R249
SR349
SR449
VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49
SR49
R34_R35_R36_R37_R38_R39_R40_R41_R42_R43_R44_R45_R46_R47_R48_R49
VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159
SR159
R144_R145_R146_R147_R148_R149_R150_R151_R152_R153_R154_R155_R156_R157_R158_R159
SR259
SR359
SR459
VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59
SR59
R44_R45_R46_R47_R48_R49_R50_R51_R52_R53_R54_R55_R56_R57_R58_R59
VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169
SR169
R154_R155_R156_R157_R158_R159_R160_R161_R162_R163_R164_R165_R166_R167_R168_R169
SR269
SR369
SR469
VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69
SR69
R54_R55_R56_R57_R58_R59_R60_R61_R62_R63_R64_R65_R66_R67_R68_R69
VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179
SR179
R164_R165_R166_R167_R168_R169_R170_R171_R172_R173_R174_R175_R176_R177_R178_R179
SR279
SR379
SR479
VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79
SR79
R64_R65_R66_R67_R68_R69_R70_R71_R72_R73_R74_R75_R76_R77_R78_R79
VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189
SR189
R174_R175_R176_R177_R178_R179_R180_R181_R182_R183_R184_R185_R186_R187_R188_R189
SR289
SR389
SR489
VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89
SR89
R74_R75_R76_R77_R78_R79_R80_R81_R82_R83_R84_R85_R86_R87_R88_R89
VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199
SR199
R184_R185_R186_R187_R188_R189_R190_R191_R192_R193_R194_R195_R196_R197_R198_R199
SR299
SR399
SR499
VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99
SR99
R84_R85_R86_R87_R88_R89_R90_R91_R92_R93_R94_R95_R96_R97_R98_R99
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9
R0_R1_R2_R3_R4_R5_R6_R7_R8_R9
VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H
R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L_R100H
VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H
R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L_R200H
VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H
R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L_R110H
VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H
R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L_R210H
VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H
R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L_R10H
VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H
R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L_R120H
VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H
R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L_R220H
VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H
R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L_R20H
VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H
R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L_R130H
VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H
R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L_R230H
VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H
R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L_R30H
VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H
R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L_R140H
VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H
R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L_R240H
VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H
R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L_R40H
VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H
R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L_R150H
VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H
R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L_R250H
VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H
R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L_R50H
VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H
R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L_R160H
VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H
R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L_R60H
VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H
R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L_R170H
VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H
R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L_R70H
VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H
R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L_R180H
VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H
R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L_R80H
VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H
R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L_R190H
VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H
R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L_R90H
VI0H
VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H
R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L_R101H
VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H
R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L_R201H
VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H
R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L_R111H
VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H
R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L_R211H
VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H
R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L_R11H
VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H
R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L_R121H
VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H
R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L_R221H
VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H
R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L_R21H
VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H
R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L_R131H
VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H
R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L_R231H
VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H
R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L_R31H
VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H
R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L_R141H
VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H
R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L_R241H
VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H
R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L_R41H
VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H
R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L_R151H
VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H
R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L_R251H
VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H
R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L_R51H
VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H
R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L_R161H
VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H
R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L_R61H
VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H
R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L_R171H
VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H
R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L_R71H
VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H
R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L_R181H
VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H
R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L_R81H
VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H
R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L_R191H
VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H
R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L_R91H
VI0H_VI1L_VI1H
R0H_R1L_R1H
VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H
R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L_R102H
VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H
R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L_R202H
VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H
R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L_R112H
VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H
R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L_R212H
VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H
R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L_R12H
VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H
R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L_R122H
VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H
R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L_R222H
VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H
R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L_R22H
VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H
R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L_R132H
VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H
R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L_R232H
VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H
R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L_R32H
VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H
R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L_R142H
VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H
R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L_R242H
VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H
R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L_R42H
VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H
R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L_R152H
VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H_VI252L_VI252H
R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L_R251H_R252L_R252H
VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H
R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L_R52H
VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H
R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L_R162H
VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H
R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L_R62H
VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H
R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L_R172H
VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H
R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L_R72H
VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H
R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L_R182H
VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H
R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L_R82H
VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H
R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L_R192H
VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H
R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L_R92H
VI0H_VI1L_VI1H_VI2L_VI2H
R0H_R1L_R1H_R2L_R2H
VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H
R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L_R103H
VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H
R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L_R203H
VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H
R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L_R113H
VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H
R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L_R213H
VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H
R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L_R13H
VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H
R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L_R123H
VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H
R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L_R223H
VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H
R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L_R23H
VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H
R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L_R133H
VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H
R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L_R233H
VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H
R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L_R33H
VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H
R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L_R143H
VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H
R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L_R243H
VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H
R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L_R43H
VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H
R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L_R153H
VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H_VI252L_VI252H_VI253L_VI253H
R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L_R251H_R252L_R252H_R253L_R253H
VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H
R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L_R53H
VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H
R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L_R163H
VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H
R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L_R63H
VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H
R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L_R173H
VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H
R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L_R73H
VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H
R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L_R183H
VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H
R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L_R83H
VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H
R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L_R193H
VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H
R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L_R93H
VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H
R0H_R1L_R1H_R2L_R2H_R3L_R3H
VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H
R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L_R104H
VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H
R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L_R204H
VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H
R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L_R114H
VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H
R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L_R214H
VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H
R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L_R14H
VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H
R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L_R124H
VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H
R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L_R224H
VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H
R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L_R24H
VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H
R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L_R134H
VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H
R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L_R234H
VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H
R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L_R34H
VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H
R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L_R144H
VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H
R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L_R244H
VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H
R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L_R44H
VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H
R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L_R154H
VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H_VI252L_VI252H_VI253L_VI253H_VI254L_VI254H
R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L_R251H_R252L_R252H_R253L_R253H_R254L_R254H
VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H
R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L_R54H
VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H
R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L_R164H
VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H
R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L_R64H
VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H
R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L_R174H
VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H
R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L_R74H
VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H
R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L_R184H
VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H
R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L_R84H
VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H
R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L_R194H
VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H
R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L_R94H
VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H
R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L_R4H
VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H
R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L_R105H
VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H
R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L_R205H
VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H
R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L_R115H
VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H
R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L_R215H
VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H
R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L_R15H
VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H
R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L_R125H
VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H
R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L_R225H
VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H
R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L_R25H
VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H
R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L_R135H
VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H
R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L_R235H
VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H
R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L_R35H
VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H
R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L_R145H
VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H
R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L_R245H
VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H
R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L_R45H
VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H
R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L_R155H
VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H_VI252L_VI252H_VI253L_VI253H_VI254L_VI254H_VI255L_VI255H
R248H_R249L_R249H_R250L_R250H_R251L_R251H_R252L_R252H_R253L_R253H_R254L_R254H_R255L_R255H
VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H
R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L_R55H
VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H
R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L_R165H
VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H
R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L_R65H
VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H
R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L_R175H
VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H
R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L_R75H
VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H
R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L_R185H
VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H
R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L_R85H
VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H
R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L_R195H
VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H
R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L_R95H
VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H
R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L_R5H
VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H
R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L_R106H
VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H
R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L_R206H
VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H
R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L_R116H
VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H
R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L_R216H
VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H
R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L_R16H
VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H
R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L_R126H
VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H
R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L_R226H
VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H
R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L_R26H
VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H
R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L_R136H
VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H
R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L_R236H
VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H
R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L_R36H
VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H
R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L_R146H
VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H
R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L_R246H
VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H
R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L_R46H
VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H
R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L_R156H
VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H
R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L_R56H
VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H
R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L_R166H
VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H
R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L_R66H
VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H
R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L_R176H
VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H
R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L_R76H
VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H
R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L_R186H
VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H
R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L_R86H
VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H
R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L_R196H
VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H
R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L_R96H
VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H
R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L_R6H
VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H
R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L_R107H
VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H
R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L_R207H
VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H
R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L_R117H
VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H
R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L_R217H
VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H
R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L_R17H
VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H
R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L_R127H
VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H
R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L_R227H
VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H
R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L_R27H
VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H
R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L_R137H
VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H
R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L_R237H
VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H
R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L_R37H
VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H
R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L_R147H
VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H
R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L_R247H
VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H
R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L_R47H
VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H
R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L_R157H
VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H
R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L_R57H
VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H
R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L_R167H
VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H
R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L_R67H
VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H
R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L_R177H
VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H
R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L_R77H
VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H
R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L_R187H
VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H
R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L_R87H
VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H
R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L_R197H
VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H
R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L_R97H
VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H
R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L_R7H
VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H
R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L_R108H
VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H
R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L_R208H
VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H
R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L_R118H
VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H
R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L_R218H
VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H
R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L_R18H
VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H
R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L_R128H
VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H
R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L_R228H
VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H
R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L_R28H
VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H
R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L_R138H
VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H
R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L_R238H
VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H
R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L_R38H
VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H
R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L_R148H
VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H
R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L_R248H
VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H
R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L_R48H
VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H
R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L_R158H
VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H
R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L_R58H
VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H
R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L_R168H
VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H
R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L_R68H
VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H
R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L_R178H
VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H
R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L_R78H
VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H
R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L_R188H
VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H
R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L_R88H
VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H
R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L_R198H
VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H
R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L_R98H
VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H
R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L_R8H
VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H
R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L_R109H
VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H
R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L_R209H
VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H
R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L_R119H
VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H
R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L_R219H
VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H
R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L_R19H
VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H
R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L_R129H
VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H
R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L_R229H
VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H
R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L_R29H
VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H
R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L_R139H
VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H
R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L_R239H
VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H
R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L_R39H
VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H
R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L_R149H
VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H
R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L_R249H
VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H
R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L_R49H
VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H
R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L_R159H
VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H
R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L_R59H
VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H
R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L_R169H
VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H
R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L_R69H
VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H
R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L_R179H
VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H
R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L_R79H
VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H
R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L_R189H
VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H
R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L_R89H
VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H
R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L_R199H
VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H
R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L_R99H
VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H
R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L_R9H
VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L
R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L
VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L
R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L
VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L
R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L
VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L
R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L
VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L
R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L
VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L
R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L
VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L
R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L
VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L
R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L
VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L
R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L
VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L
R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L
VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L
R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L
VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L
R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L
VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L
R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L
VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L
R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L
VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L
R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L
VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L
R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L
VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L
R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L
VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L
R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L
VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L
R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L
VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L
R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L
VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L
R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L
VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L
R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L
VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L
R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L
VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L
R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L
VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L
R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L
VI0L
VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L
R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L
VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L
R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L
VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L
R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L
VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L
R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L
VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L
R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L
VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L
R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L
VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L
R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L
VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L
R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L
VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L
R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L
VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L
R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L
VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L
R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L
VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L
R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L
VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L
R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L
VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L
R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L
VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L
R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L
VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L
R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L
VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L
R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L
VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L
R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L
VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L
R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L
VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L
R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L
VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L
R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L
VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L
R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L
VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L
R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L
VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L
R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L
VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L
R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L
VI0L_VI0H_VI1L
R0L_R0H_R1L
VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L
R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L
VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L
R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L
VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L
R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L
VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L
R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L
VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L
R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L
VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L
R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L
VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L
R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L
VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L
R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L
VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L
R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L
VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L
R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L
VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L
R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L
VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L
R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L
VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L
R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L
VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L
R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L
VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L
R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L
VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H_VI252L
R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L_R251H_R252L
VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L
R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L
VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L
R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L
VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L
R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L
VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L
R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L
VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L
R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L
VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L
R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L
VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L
R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L
VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L
R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L
VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L
R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L
VI0L_VI0H_VI1L_VI1H_VI2L
R0L_R0H_R1L_R1H_R2L
VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L
R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L
VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L
R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L
VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L
R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L
VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L
R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L
VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L
R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L
VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L
R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L
VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L
R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L
VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L
R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L
VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L
R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L
VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L
R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L
VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L
R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L
VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L
R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L
VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L
R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L
VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L
R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L
VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L
R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L
VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H_VI252L_VI252H_VI253L
R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L_R251H_R252L_R252H_R253L
VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L
R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L
VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L
R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L
VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L
R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L
VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L
R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L
VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L
R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L
VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L
R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L
VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L
R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L
VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L
R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L
VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L
R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L
VI0L_VI0H_VI1L_VI1H_VI2L_VI2H_VI3L
R0L_R0H_R1L_R1H_R2L_R2H_R3L
VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L
R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L
VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L
R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L
VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L
R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L
VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L
R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L
VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L
R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L
VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L
R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L
VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L
R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L
VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L
R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L
VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L
R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L
VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L
R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L
VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L
R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L
VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L
R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L
VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L
R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L
VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L
R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L
VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L
R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L
VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H_VI252L_VI252H_VI253L_VI253H_VI254L
R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L_R251H_R252L_R252H_R253L_R253H_R254L
VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L
R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L
VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L
R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L
VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L
R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L
VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L
R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L
VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L
R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L
VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L
R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L
VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L
R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L
VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L
R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L
VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L
R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L
VI0L_VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L
R0L_R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L
VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L
R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L
VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L
R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L
VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L
R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L
VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L
R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L
VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L
R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L
VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L
R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L
VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L
R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L
VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L
R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L
VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L
R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L
VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L
R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L
VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L
R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L
VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L
R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L
VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L
R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L
VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L
R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L
VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L
R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L
VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H_VI252L_VI252H_VI253L_VI253H_VI254L_VI254H_VI255L
R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L_R251H_R252L_R252H_R253L_R253H_R254L_R254H_R255L
VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L
R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L
VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L
R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L
VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L
R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L
VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L
R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L
VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L
R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L
VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L
R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L
VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L
R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L
VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L
R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L
VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L
R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L
VI0L_VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L
R0L_R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L
VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L
R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L
VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L
R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L
VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L
R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L
VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L
R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L
VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L
R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L
VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L
R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L
VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L
R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L
VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L
R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L
VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L
R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L
VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L
R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L
VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L
R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L
VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L
R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L
VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L
R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L
VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L
R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L
VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L
R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L
VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L
R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L
VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L
R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L
VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L
R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L
VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L
R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L
VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L
R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L
VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L
R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L
VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L
R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L
VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L
R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L
VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L
R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L
VI0L_VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L
R0L_R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L
VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L
R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L
VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L
R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L
VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L
R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L
VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L
R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L
VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L
R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L
VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L
R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L
VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L
R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L
VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L
R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L
VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L
R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L
VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L
R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L
VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L
R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L
VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L
R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L
VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L
R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L
VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L
R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L
VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L
R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L
VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L
R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L
VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L
R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L
VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L
R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L
VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L
R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L
VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L
R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L
VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L
R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L
VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L
R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L
VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L
R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L
VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L
R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L
VI0L_VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L
R0L_R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L
VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L
R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L
VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L
R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L
VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L
R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L
VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L
R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L
VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L
R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L
VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L
R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L
VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L
R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L
VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L
R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L
VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L
R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L
VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L
R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L
VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L
R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L
VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L
R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L
VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L
R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L
VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L
R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L
VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L
R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L
VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L
R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L
VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L
R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L
VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L
R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L
VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L
R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L
VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L
R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L
VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L
R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L
VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L
R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L
VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L
R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L
VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L
R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L
VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L
R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L
VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L
R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L
VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L
R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L
VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L
R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L
VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L
R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L
VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L
R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L
VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L
R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L
VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L
R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L
VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L
R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L
VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L
R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L
VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L
R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L
VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L
R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L
VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L
R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L
VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L
R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L
VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L
R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L
VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L
R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L
VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L
R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L
VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L
R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L
VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L
R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L
VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L
R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L
VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L
R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L
VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L
R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L
VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L
R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L
VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L
R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L
VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L
R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L
VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L
R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L
GPR32tup10
GPR16tup10
GPR32tup11
GPR16tup11
GPR32tup12
GPR16tup12
SIR32
VIR32
GPR32
TR32
GPR32tup2
GPR16tup2
GPR32tup13
GPR16tup13
GPR32tup3
GPR16tup3
GPR32tup14
GPR16tup14
GPR32tup4
GPR16tup4
GPR32tup15
GPR16tup15
GPR32tup5
GPR16tup5
GPR32tup10_with_hsub0_in_VIR16
GPR16tup10_with_hsub0_in_VIR16
GPR32tup11_with_hsub0_in_VIR16
GPR16tup11_with_hsub0_in_VIR16
GPR32tup12_with_hsub0_in_VIR16
GPR16tup12_with_hsub0_in_VIR16
GPR16tup2_with_hsub0_in_VIR16
GPR32tup13_with_hsub0_in_VIR16
GPR16tup13_with_hsub0_in_VIR16
GPR16tup3_with_hsub0_in_VIR16
GPR32tup14_with_hsub0_in_VIR16
GPR16tup14_with_hsub0_in_VIR16
GPR16tup4_with_hsub0_in_VIR16
GPR32tup15_with_hsub0_in_VIR16
GPR16tup15_with_hsub0_in_VIR16
GPR16tup5_with_hsub0_in_VIR16
GPR32tup16_with_hsub0_in_VIR16
GPR16tup16_with_hsub0_in_VIR16
GPR16tup6_with_hsub0_in_VIR16
GPR16tup7_with_hsub0_in_VIR16
GPR16tup8_with_hsub0_in_VIR16
GPR32tup9_with_hsub0_in_VIR16
GPR16tup9_with_hsub0_in_VIR16
GPR16
GPR32tup10_with_hsub0_in_TR16
GPR16tup10_with_hsub0_in_TR16
GPR32tup11_with_hsub0_in_TR16
GPR16tup11_with_hsub0_in_TR16
GPR32tup12_with_hsub0_in_TR16
GPR16tup12_with_hsub0_in_TR16
GPR16tup2_with_hsub0_in_TR16
GPR32tup13_with_hsub0_in_TR16
GPR16tup13_with_hsub0_in_TR16
GPR16tup3_with_hsub0_in_TR16
GPR32tup14_with_hsub0_in_TR16
GPR16tup14_with_hsub0_in_TR16
GPR16tup4_with_hsub0_in_TR16
GPR32tup15_with_hsub0_in_TR16
GPR16tup15_with_hsub0_in_TR16
GPR16tup5_with_hsub0_in_TR16
GPR32tup16_with_hsub0_in_TR16
GPR16tup16_with_hsub0_in_TR16
GPR16tup6_with_hsub0_in_TR16
GPR16tup7_with_hsub0_in_TR16
GPR16tup8_with_hsub0_in_TR16
GPR32tup9_with_hsub0_in_TR16
GPR16tup9_with_hsub0_in_TR16
GPR32tup16
GPR16tup16
GPR32tup6
GPR16tup6
GPR32tup7
GPR16tup7
GPR32tup8
GPR16tup8
GPR32tup9
GPR16tup9
GPR32noSR
TR32tup2_rc
TR32tup3_rc
TR32tup4_rc
TR32tup6_rc
GPR16tup11_alignedrc
GPR16tup13_alignedrc
GPR16tup3_alignedrc
GPR16tup15_alignedrc
GPR16tup5_alignedrc
GPR16tup7_alignedrc
GPR16tup9_alignedrc
GPR16tup10_with_hsub0_in_VIR16_aligned
GPR16tup11_with_hsub0_in_VIR16_aligned
GPR16tup12_with_hsub0_in_VIR16_aligned
GPR16tup13_with_hsub0_in_VIR16_aligned
GPR16tup3_with_hsub0_in_VIR16_aligned
GPR16tup14_with_hsub0_in_VIR16_aligned
GPR16tup4_with_hsub0_in_VIR16_aligned
GPR16tup15_with_hsub0_in_VIR16_aligned
GPR16tup5_with_hsub0_in_VIR16_aligned
GPR16tup16_with_hsub0_in_VIR16_aligned
GPR16tup6_with_hsub0_in_VIR16_aligned
GPR16tup7_with_hsub0_in_VIR16_aligned
GPR16tup8_with_hsub0_in_VIR16_aligned
GPR16tup9_with_hsub0_in_VIR16_aligned
GPR16tup10_with_hsub1_in_VIR16_aligned
GPR16tup11_with_hsub1_in_VIR16_aligned
GPR16tup12_with_hsub1_in_VIR16_aligned
GPR16tup2_with_hsub1_in_VIR16_aligned
GPR16tup13_with_hsub1_in_VIR16_aligned
GPR16tup3_with_hsub1_in_VIR16_aligned
GPR16tup14_with_hsub1_in_VIR16_aligned
GPR16tup4_with_hsub1_in_VIR16_aligned
GPR16tup15_with_hsub1_in_VIR16_aligned
GPR16tup5_with_hsub1_in_VIR16_aligned
GPR16tup16_with_hsub1_in_VIR16_aligned
GPR16tup6_with_hsub1_in_VIR16_aligned
GPR16tup7_with_hsub1_in_VIR16_aligned
GPR16tup8_with_hsub1_in_VIR16_aligned
GPR16tup9_with_hsub1_in_VIR16_aligned
GPR16tup10_with_hsub1_in_GPR16_aligned
GPR16tup11_with_hsub1_in_GPR16_aligned
GPR16tup12_with_hsub1_in_GPR16_aligned
GPR16tup2_with_hsub1_in_GPR16_aligned
GPR16tup13_with_hsub1_in_GPR16_aligned
GPR16tup3_with_hsub1_in_GPR16_aligned
GPR16tup14_with_hsub1_in_GPR16_aligned
GPR16tup4_with_hsub1_in_GPR16_aligned
GPR16tup15_with_hsub1_in_GPR16_aligned
GPR16tup5_with_hsub1_in_GPR16_aligned
GPR16tup16_with_hsub1_in_GPR16_aligned
GPR16tup6_with_hsub1_in_GPR16_aligned
GPR16tup7_with_hsub1_in_GPR16_aligned
GPR16tup8_with_hsub1_in_GPR16_aligned
GPR16tup9_with_hsub1_in_GPR16_aligned
GPR16tup10_with_hsub0_in_TR16_aligned
GPR16tup11_with_hsub0_in_TR16_aligned
GPR16tup13_with_hsub0_in_TR16_aligned
GPR16tup3_with_hsub0_in_TR16_aligned
GPR16tup14_with_hsub0_in_TR16_aligned
GPR16tup15_with_hsub0_in_TR16_aligned
GPR16tup5_with_hsub0_in_TR16_aligned
GPR16tup16_with_hsub0_in_TR16_aligned
GPR16tup7_with_hsub0_in_TR16_aligned
GPR16tup9_with_hsub0_in_TR16_aligned
GPR16tup10_with_hsub1_in_TR16_aligned
GPR16tup11_with_hsub1_in_TR16_aligned
GPR16tup12_with_hsub1_in_TR16_aligned
GPR16tup2_with_hsub1_in_TR16_aligned
GPR16tup13_with_hsub1_in_TR16_aligned
GPR16tup3_with_hsub1_in_TR16_aligned
GPR16tup14_with_hsub1_in_TR16_aligned
GPR16tup4_with_hsub1_in_TR16_aligned
GPR16tup15_with_hsub1_in_TR16_aligned
GPR16tup5_with_hsub1_in_TR16_aligned
GPR16tup16_with_hsub1_in_TR16_aligned
GPR16tup6_with_hsub1_in_TR16_aligned
GPR16tup7_with_hsub1_in_TR16_aligned
GPR16tup8_with_hsub1_in_TR16_aligned
GPR16tup9_with_hsub1_in_TR16_aligned
6 6!6"6#6$6%6&6'6(6)6*6+6,6-6.6/606162636465666768696:6;6<6=6>6?6@6A6B6C6D6E6F6G6H6I6J6K6L6M6N6O6P6Q6R6S6T6U6V6W6X6Y6Z6[6\6]6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6w6x6y6z6{6|6}6~6
6 6!6"6#6$6%6&6'6(6)6*6+6,6-6.6/606162636465666768696:6;6<6=6>6?6@6A6B6C6D6E6F6G6H6I6J6K6L6M6N6O6P6Q6R6S6T6U6V6W6X6Y6Z6[6\6]6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6w6x6y6z6{6|6}6~6
878
8 7 8!7!8"7"8#7#8$7$8%7%8&7&8'7'8(7(8)7)8*7*8+7+8,7,8-7-8.7.8/7/80708171827283738474857586768777887889798:7:8;7;8<7<8=7=8>7>8?7?8@7@8A7A8B7B8C7C8D7D8E7E8F7F8G7G8H7H8I7I8J7J8K7K8L7L8M7M8N7N8O7O8P7P8Q7Q8R7R8S7S8T7T8U7U8V7V8W7W8X7X8Y7Y8Z7Z8[7[8\7\8]7]8^7^8_7_8`7`8a7a8b7b8c7c8d7d8e7e8f7f8g7g8h7h8i7i8j7j8k7k8l7l8m7m8n7n8o7o8p7p8q7q8r7r8s7s8t7t8u7u8v7v8w7w8x7x8y7y8z7z8{7{8|7|8}7}8~7~8
8 8!8"8#8$8%8&8'8(8)8*8+8,8-8.8/808182838485868788898:8;8<8=8>8?8@8A8B8C8D8E8F8G8H8I8J8K8L8M8N8O8P8Q8R8S8T8U8V8W8X8Y8Z8[8\8]8^8_8`8a8b8c8d8e8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}8~8
878
8 7 8!7!8"7"8#7#8$7$8%7%8&7&8'7'8(7(8)7)8*7*8+7+8,7,8-7-8.7.8/7/80708171827283738474857586768777887889798:7:8;7;8<7<8=7=8>7>8?7?8@7@8A7A8B7B8C7C8D7D8E7E8F7F8G7G8H7H8I7I8J7J8K7K8L7L8M7M8N7N8O7O8P7P8Q7Q8R7R8S7S8T7T8U7U8V7V8W7W8X7X8Y7Y8Z7Z8[7[8\7\8]7]8^7^8_7_8`7`8a7a8b7b8c7c8d7d8e7e8f7f8g7g8h7h8i7i8j7j8k7k8l7l8m7m8n7n8o7o8p7p8q7q8r7r8s7s8t7t8u7u8v7v8w7w8x7x8y7y8z7z8{7{8|7|8}7}8~7~8
7 7!7"7#7$7%7&7'7(7)7*7+7,7-7.7/707172737475767778797:7;7<7=7>7?7@7A7B7C7D7E7F7G7H7I7J7K7L7M7N7O7P7Q7R7S7T7U7V7W7X7Y7Z7[7\7]7^7_7`7a7b7c7d7e7f7g7h7i7j7k7l7m7n7o7p7q7r7s7t7u7v7w7x7y7z7{7|7}7~7
8 8!8"8#8$8%8&8'8(8)8*8+8,8-8.8/808182838485868788898:8;8<8=8>8?8@8A8B8C8D8E8F8G8H8I8J8K8L8M8N8O8P8Q8R8S8T8U8V8W8X8Y8Z8[8\8]8^8_8`8a8b8c8d8e8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}8~8
7 7!7"7#7$7%7&7'7(7)7*7+7,7-7.7/707172737475767778797:7;7<7=7>7?7@7A7B7C7D7E7F7G7H7I7J7K7L7M7N7O7P7Q7R7S7T7U7V7W7X7Y7Z7[7\7]7^7_7`7a7b7c7d7e7f7g7h7i7j7k7l7m7n7o7p7q7r7s7t7u7v7w7x7y7z7{7|7}7~7
Iz9I{9
9}IS$
I I!I"I#I$I%I&I'I(I)I*I+I,I-I.I/I0I1I2I3I4I5I6I7I8I9I:I;I<I=I>I?I@IAIBICIDIEIFIGIHIIIJIKILIMINIOIPIQIRISITIUIVIWIXIYIZI[I\I]I^I_I`IaIbIcIdIeIfIgIhIiIjIkIlImInIoIpIqIrIsItIuIvIwIxIyIzI{I|I}IS$T$U$V$W$X$Y$Z$[$\$]$^$_$`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$t$u$v$w$x$y$z${$|$}$~$
% %!%"%#%$%%%&%'%(%)%*%+%,%-%.%/%0%1%2%3%4%5%6%7%8%9%:%;%<%=%>%?%@%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%
Iz9I{9
9 9!9"9#9$9%9&9'9(9)9*9+9,9-9.9/909192939495969798999:9;9<9=9>9?9@9A9B9C9D9E9F9G9H9I9J9K9L9M9N9O9P9Q9R9S9T9U9V9W9X9Y9Z9[9\9]9^9_9`9a9b9c9d9e9f9g9h9i9j9k9l9m9n9o9p9q9r9s9t9u9v9w9x9y9z9{9|9}9~9
I I!I"I#I$I%I&I'I(I)I*I+I,I-I.I/I0I1I2I3I4I5I6I7I8I9I:I;I<I=I>I?I@IAIBICIDIEIFIGIHIIIJIKILIMINIOIPIQIRISITIUIVIWIXIYIZI[I\I]I^I_I`IaIbIcIdIeIfIgIhIiIjIkIlImInIoIpIqIrIsItIuIvIwIxIyIzI{I|I}I
?S$T$U$V$W$X$Y$Z$[$\$]$^$_$`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$t$u$v$w$x$y$z${$|$}$~$
% %!%"%#%$%%%&%'%(%)%*%+%,%-%.%/%0%1%2%3%4%5%6%7%8%9%:%;%<%=%>%?%@%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%
9 9!9"9#9$9%9&9'9(9)9*9+9,9-9.9/909192939495969798999:9;9<9=9>9?9@9A9B9C9D9E9F9G9H9I9J9K9L9M9N9O9P9Q9R9S9T9U9V9W9X9Y9Z9[9\9]9^9_9`9a9b9c9d9e9f9g9h9i9j9k9l9m9n9o9p9q9r9s9t9u9v9w9x9y9z9{9|9}9~9
;!: ;":!;#:";$:#;%:$;&:%;':&;(:';):(;*:);+:*;,:+;-:,;.:-;/:.;0:/;1:0;2:1;3:2;4:3;5:4;6:5;7:6;8:7;9:8;::9;;::;<:;;=:<;>:=;?:>;@:?;A:@;B:A;C:B;D:C;E:D;F:E;G:F;H:G;I:H;J:I;K:J;L:K;M:L;N:M;O:N;P:O;Q:P;R:Q;S:R;T:S;U:T;V:U;W:V;X:W;Y:X;Z:Y;[:Z;\:[;]:\;^:];_:^;`:_;a:`;b:a;c:b;d:c;e:d;f:e;g:f;h:g;i:h;j:i;k:j;l:k;m:l;n:m;o:n;p:o;q:p;r:q;s:r;t:s;u:t;v:u;w:v;x:w;y:x;z:y;{:z;|:{;}:|;~:};
; ;!;";#;$;%;&;';(;);*;+;,;-;.;/;0;1;2;3;4;5;6;7;8;9;:;;;<;=;>;?;@;A;B;C;D;E;F;G;H;I;J;K;L;M;N;O;P;Q;R;S;T;U;V;W;X;Y;Z;[;\;];^;_;`;a;b;c;d;e;f;g;h;i;j;k;l;m;n;o;p;q;r;s;t;u;v;w;x;y;z;{;|;};~;
;!: ;":!;#:";$:#;%:$;&:%;':&;(:';):(;*:);+:*;,:+;-:,;.:-;/:.;0:/;1:0;2:1;3:2;4:3;5:4;6:5;7:6;8:7;9:8;::9;;::;<:;;=:<;>:=;?:>;@:?;A:@;B:A;C:B;D:C;E:D;F:E;G:F;H:G;I:H;J:I;K:J;L:K;M:L;N:M;O:N;P:O;Q:P;R:Q;S:R;T:S;U:T;V:U;W:V;X:W;Y:X;Z:Y;[:Z;\:[;]:\;^:];_:^;`:_;a:`;b:a;c:b;d:c;e:d;f:e;g:f;h:g;i:h;j:i;k:j;l:k;m:l;n:m;o:n;p:o;q:p;r:q;s:r;t:s;u:t;v:u;w:v;x:w;y:x;z:y;{:z;|:{;}:|;~:};
: :!:":#:$:%:&:':(:):*:+:,:-:.:/:0:1:2:3:4:5:6:7:8:9:::;:<:=:>:?:@:A:B:C:D:E:F:G:H:I:J:K:L:M:N:O:P:Q:R:S:T:U:V:W:X:Y:Z:[:\:]:^:_:`:a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:}:~:
; ;!;";#;$;%;&;';(;);*;+;,;-;.;/;0;1;2;3;4;5;6;7;8;9;:;;;<;=;>;?;@;A;B;C;D;E;F;G;H;I;J;K;L;M;N;O;P;Q;R;S;T;U;V;W;X;Y;Z;[;\;];^;_;`;a;b;c;d;e;f;g;h;i;j;k;l;m;n;o;p;q;r;s;t;u;v;w;x;y;z;{;|;};~;
: :!:":#:$:%:&:':(:):*:+:,:-:.:/:0:1:2:3:4:5:6:7:8:9:::;:<:=:>:?:@:A:B:C:D:E:F:G:H:I:J:K:L:M:N:O:P:Q:R:S:T:U:V:W:X:Y:Z:[:\:]:^:_:`:a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:}:~:
Ju<Jv<
<{JR%
J J!J"J#J$J%J&J'J(J)J*J+J,J-J.J/J0J1J2J3J4J5J6J7J8J9J:J;J<J=J>J?J@JAJBJCJDJEJFJGJHJIJJJKJLJMJNJOJPJQJRJSJTJUJVJWJXJYJZJ[J\J]J^J_J`JaJbJcJdJeJfJgJhJiJjJkJlJmJnJoJpJqJrJsJtJuJvJwJxJyJzJ{JR%S%T%U%V%W%X%Y%Z%[%\%]%^%_%`%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%r%s%t%u%v%w%x%y%z%{%|%}%~%
& &!&"&#&$&%&&&'&(&)&*&+&,&-&.&/&0&1&2&3&4&5&6&7&8&9&:&;&<&=&>&?&@&A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&
Ju<Jv<
< <!<"<#<$<%<&<'<(<)<*<+<,<-<.</<0<1<2<3<4<5<6<7<8<9<:<;<<<=<><?<@<A<B<C<D<E<F<G<H<I<J<K<L<M<N<O<P<Q<R<S<T<U<V<W<X<Y<Z<[<\<]<^<_<`<a<b<c<d<e<f<g<h<i<j<k<l<m<n<o<p<q<r<s<t<u<v<w<x<y<z<{<|<}<~<
J J!J"J#J$J%J&J'J(J)J*J+J,J-J.J/J0J1J2J3J4J5J6J7J8J9J:J;J<J=J>J?J@JAJBJCJDJEJFJGJHJIJJJKJLJMJNJOJPJQJRJSJTJUJVJWJXJYJZJ[J\J]J^J_J`JaJbJcJdJeJfJgJhJiJjJkJlJmJnJoJpJqJrJsJtJuJvJwJxJyJzJ{J
R%S%T%U%V%W%X%Y%Z%[%\%]%^%_%`%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%r%s%t%u%v%w%x%y%z%{%|%}%~%
& &!&"&#&$&%&&&'&(&)&*&+&,&-&.&/&0&1&2&3&4&5&6&7&8&9&:&;&<&=&>&?&@&A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&
< <!<"<#<$<%<&<'<(<)<*<+<,<-<.</<0<1<2<3<4<5<6<7<8<9<:<;<<<=<><?<@<A<B<C<D<E<F<G<H<I<J<K<L<M<N<O<P<Q<R<S<T<U<V<W<X<Y<Z<[<\<]<^<_<`<a<b<c<d<e<f<g<h<i<j<k<l<m<n<o<p<q<r<s<t<u<v<w<x<y<z<{<|<}<~<
>"= >#=!>$=">%=#>&=$>'=%>(=&>)='>*=(>+=)>,=*>-=+>.=,>/=->0=.>1=/>2=0>3=1>4=2>5=3>6=4>7=5>8=6>9=7>:=8>;=9><=:>==;>>=<>?==>@=>>A=?>B=@>C=A>D=B>E=C>F=D>G=E>H=F>I=G>J=H>K=I>L=J>M=K>N=L>O=M>P=N>Q=O>R=P>S=Q>T=R>U=S>V=T>W=U>X=V>Y=W>Z=X>[=Y>\=Z>]=[>^=\>_=]>`=^>a=_>b=`>c=a>d=b>e=c>f=d>g=e>h=f>i=g>j=h>k=i>l=j>m=k>n=l>o=m>p=n>q=o>r=p>s=q>t=r>u=s>v=t>w=u>x=v>y=w>z=x>{=y>|=z>}={>~=|>
> >!>">#>$>%>&>'>(>)>*>+>,>->.>/>0>1>2>3>4>5>6>7>8>9>:>;><>=>>>?>@>A>B>C>D>E>F>G>H>I>J>K>L>M>N>O>P>Q>R>S>T>U>V>W>X>Y>Z>[>\>]>^>_>`>a>b>c>d>e>f>g>h>i>j>k>l>m>n>o>p>q>r>s>t>u>v>w>x>y>z>{>|>}>~>
>"= >#=!>$=">%=#>&=$>'=%>(=&>)='>*=(>+=)>,=*>-=+>.=,>/=->0=.>1=/>2=0>3=1>4=2>5=3>6=4>7=5>8=6>9=7>:=8>;=9><=:>==;>>=<>?==>@=>>A=?>B=@>C=A>D=B>E=C>F=D>G=E>H=F>I=G>J=H>K=I>L=J>M=K>N=L>O=M>P=N>Q=O>R=P>S=Q>T=R>U=S>V=T>W=U>X=V>Y=W>Z=X>[=Y>\=Z>]=[>^=\>_=]>`=^>a=_>b=`>c=a>d=b>e=c>f=d>g=e>h=f>i=g>j=h>k=i>l=j>m=k>n=l>o=m>p=n>q=o>r=p>s=q>t=r>u=s>v=t>w=u>x=v>y=w>z=x>{=y>|=z>}={>~=|>
= =!="=#=$=%=&='=(=)=*=+=,=-=.=/=0=1=2=3=4=5=6=7=8=9=:=;=<===>=?=@=A=B=C=D=E=F=G=H=I=J=K=L=M=N=O=P=Q=R=S=T=U=V=W=X=Y=Z=[=\=]=^=_=`=a=b=c=d=e=f=g=h=i=j=k=l=m=n=o=p=q=r=s=t=u=v=w=x=y=z={=|=}=~=
> >!>">#>$>%>&>'>(>)>*>+>,>->.>/>0>1>2>3>4>5>6>7>8>9>:>;><>=>>>?>@>A>B>C>D>E>F>G>H>I>J>K>L>M>N>O>P>Q>R>S>T>U>V>W>X>Y>Z>[>\>]>^>_>`>a>b>c>d>e>f>g>h>i>j>k>l>m>n>o>p>q>r>s>t>u>v>w>x>y>z>{>|>}>~>
= =!="=#=$=%=&='=(=)=*=+=,=-=.=/=0=1=2=3=4=5=6=7=8=9=:=;=<===>=?=@=A=B=C=D=E=F=G=H=I=J=K=L=M=N=O=P=Q=R=S=T=U=V=W=X=Y=Z=[=\=]=^=_=`=a=b=c=d=e=f=g=h=i=j=k=l=m=n=o=p=q=r=s=t=u=v=w=x=y=z={=|=}=~=
Kn?Ko?
?xKP&
|J}J~J
K K!K"K#K$K%K&K'K(K)K*K+K,K-K.K/K0K1K2K3K4K5K6K7K8K9K:K;K<K=K>K?K@KAKBKCKDKEKFKGKHKIKJKKKLKMKNKOKPKQKRKSKTKUKVKWKXKYKZK[K\K]K^K_K`KaKbKcKdKeKfKgKhKiKjKkKlKmKnKoKpKqKrKsKtKuKvKwKxKP&Q&R&S&T&U&V&W&X&Y&Z&[&\&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x&y&z&{&|&}&~&
' '!'"'#'$'%'&'''(')'*'+','-'.'/'0'1'2'3'4'5'6'7'8'9':';'<'='>'?'@'A'B'C'D'E'F'G'H'I'J'K'L'
Kn?Ko?
? ?!?"?#?$?%?&?'?(?)?*?+?,?-?.?/?0?1?2?3?4?5?6?7?8?9?:?;?<?=?>???@?A?B?C?D?E?F?G?H?I?J?K?L?M?N?O?P?Q?R?S?T?U?V?W?X?Y?Z?[?\?]?^?_?`?a?b?c?d?e?f?g?h?i?j?k?l?m?n?o?p?q?r?s?t?u?v?w?x?y?z?{?|?}?~?
|J}J~J
K K!K"K#K$K%K&K'K(K)K*K+K,K-K.K/K0K1K2K3K4K5K6K7K8K9K:K;K<K=K>K?K@KAKBKCKDKEKFKGKHKIKJKKKLKMKNKOKPKQKRKSKTKUKVKWKXKYKZK[K\K]K^K_K`KaKbKcKdKeKfKgKhKiKjKkKlKmKnKoKpKqKrKsKtKuKvKwKxK
P&Q&R&S&T&U&V&W&X&Y&Z&[&\&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x&y&z&{&|&}&~&
' '!'"'#'$'%'&'''(')'*'+','-'.'/'0'1'2'3'4'5'6'7'8'9':';'<'='>'?'@'A'B'C'D'E'F'G'H'I'J'K'L'
? ?!?"?#?$?%?&?'?(?)?*?+?,?-?.?/?0?1?2?3?4?5?6?7?8?9?:?;?<?=?>???@?A?B?C?D?E?F?G?H?I?J?K?L?M?N?O?P?Q?R?S?T?U?V?W?X?Y?Z?[?\?]?^?_?`?a?b?c?d?e?f?g?h?i?j?k?l?m?n?o?p?q?r?s?t?u?v?w?x?y?z?{?|?}?~?
A#@ A$@!A%@"A&@#A'@$A(@%A)@&A*@'A+@(A,@)A-@*A.@+A/@,A0@-A1@.A2@/A3@0A4@1A5@2A6@3A7@4A8@5A9@6A:@7A;@8A<@9A=@:A>@;A?@<A@@=AA@>AB@?AC@@AD@AAE@BAF@CAG@DAH@EAI@FAJ@GAK@HAL@IAM@JAN@KAO@LAP@MAQ@NAR@OAS@PAT@QAU@RAV@SAW@TAX@UAY@VAZ@WA[@XA\@YA]@ZA^@[A_@\A`@]Aa@^Ab@_Ac@`Ad@aAe@bAf@cAg@dAh@eAi@fAj@gAk@hAl@iAm@jAn@kAo@lAp@mAq@nAr@oAs@pAt@qAu@rAv@sAw@tAx@uAy@vAz@wA{@xA|@yA}@zA~@{A
A A!A"A#A$A%A&A'A(A)A*A+A,A-A.A/A0A1A2A3A4A5A6A7A8A9A:A;A<A=A>A?A@AAABACADAEAFAGAHAIAJAKALAMANAOAPAQARASATAUAVAWAXAYAZA[A\A]A^A_A`AaAbAcAdAeAfAgAhAiAjAkAlAmAnAoApAqArAsAtAuAvAwAxAyAzA{A|A}A~A
A#@ A$@!A%@"A&@#A'@$A(@%A)@&A*@'A+@(A,@)A-@*A.@+A/@,A0@-A1@.A2@/A3@0A4@1A5@2A6@3A7@4A8@5A9@6A:@7A;@8A<@9A=@:A>@;A?@<A@@=AA@>AB@?AC@@AD@AAE@BAF@CAG@DAH@EAI@FAJ@GAK@HAL@IAM@JAN@KAO@LAP@MAQ@NAR@OAS@PAT@QAU@RAV@SAW@TAX@UAY@VAZ@WA[@XA\@YA]@ZA^@[A_@\A`@]Aa@^Ab@_Ac@`Ad@aAe@bAf@cAg@dAh@eAi@fAj@gAk@hAl@iAm@jAn@kAo@lAp@mAq@nAr@oAs@pAt@qAu@rAv@sAw@tAx@uAy@vAz@wA{@xA|@yA}@zA~@{A
@ @!@"@#@$@%@&@'@(@)@*@+@,@-@.@/@0@1@2@3@4@5@6@7@8@9@:@;@<@=@>@?@@@A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@[@\@]@^@_@`@a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@{@|@}@~@
A A!A"A#A$A%A&A'A(A)A*A+A,A-A.A/A0A1A2A3A4A5A6A7A8A9A:A;A<A=A>A?A@AAABACADAEAFAGAHAIAJAKALAMANAOAPAQARASATAUAVAWAXAYAZA[A\A]A^A_A`AaAbAcAdAeAfAgAhAiAjAkAlAmAnAoApAqArAsAtAuAvAwAxAyAzA{A|A}A~A
@ @!@"@#@$@%@&@'@(@)@*@+@,@-@.@/@0@1@2@3@4@5@6@7@8@9@:@;@<@=@>@?@@@A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@[@\@]@^@_@`@a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@{@|@}@~@
yK/,zK0,{K1,|K2,}K3,~K4,
-VL-WL
-jL -kL!-lL"-mL#-nL$-oL%-pL&-qL'-rL(-sL)-tLM'
yKzK{K|K}K~K
L L!L"L#L$L%L&L'L(L)L*L+L,L-L.L/L0L1L2L3L4L5L6L7L8L9L:L;L<L=L>L?L@LALBLCLDLELFLGLHLILJLKLLLMLNLOLPLQLRLSLTLULVLWLXLYLZL[L\L]L^L_L`LaLbLcLdLeLfLgLhLiLjLkLlLmLnLoLpLqLrLsLtLM'N'O'P'Q'R'S'T'U'V'W'X'Y'Z'['\']'^'_'`'a'b'c'd'e'f'g'h'i'j'k'l'm'n'o'p'q'r's't'u'v'w'x'y'z'{'|'}'~'
( (!("(#($(%(&('((()(*(+(,(-(.(/(0(1(2(3(4(5(6(7(8(9(:(;(<(=(>(?(@(A(B(C(D(E(F(G(H(
yK/,zK0,{K1,|K2,}K3,~K4,
-VL-WL
-jL -kL!-lL"-mL#-nL$-oL%-pL&-qL'-rL(-sL)-tL
/,0,1,2,3,4,5,6,7,8,9,:,;,<,=,>,?,@,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,[,\,],^,_,`,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,{,|,},~,
- -!-"-#-$-%-&-'-(-)-
M'N'O'P'Q'R'S'T'U'V'W'X'Y'Z'['\']'^'_'`'a'b'c'd'e'f'g'h'i'j'k'l'm'n'o'p'q'r's't'u'v'w'x'y'z'{'|'}'~'
( (!("(#($(%(&('((()(*(+(,(-(.(/(0(1(2(3(4(5(6(7(8(9(:(;(<(=(>(?(@(A(B(C(D(E(F(G(H(
yKzK{K|K}K~K
L L!L"L#L$L%L&L'L(L)L*L+L,L-L.L/L0L1L2L3L4L5L6L7L8L9L:L;L<L=L>L?L@LALBLCLDLELFLGLHLILJLKLLLMLNLOLPLQLRLSLTLULVLWLXLYLZL[L\L]L^L_L`LaLbLcLdLeLfLgLhLiLjLkLlLmLnLoLpLqLrLsLtL
?/,0,1,2,3,4,5,6,7,8,9,:,;,<,=,>,?,@,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,[,\,],^,_,`,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,{,|,},~,
- -!-"-#-$-%-&-'-(-)-
%.*-&.+-'.,-(.--)..-*./-+.0-,.1--.2-..3-/.4-0.5-1.6-2.7-3.8-4.9-5.:-6.;-7.<-8.=-9.>-:.?-;.@-<.A-=.B->.C-?.D-@.E-A.F-B.G-C.H-D.I-E.J-F.K-G.L-H.M-I.N-J.O-K.P-L.Q-M.R-N.S-O.T-P.U-Q.V-R.W-S.X-T.Y-U.Z-V.[-W.\-X.]-Y.^-Z._-[.`-\.a-].b-^.c-_.d-`.e-a.f-b.g-c.h-d.i-e.j-f.k-g.l-h.m-i.n-j.o-k.p-l.q-m.r-n.s-o.t-p.u-q.v-r.w-s.x-t.y-u.z-v.{-w.|-x.}-y.~-z.
%.&.'.(.).*.+.,.-.../.0.1.2.3.4.5.6.7.8.9.:.;.<.=.>.?.@.A.B.C.D.E.F.G.H.I.J.K.L.M.N.O.P.Q.R.S.T.U.V.W.X.Y.Z.[.\.].^._.`.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.{.|.}.~.
%.*-&.+-'.,-(.--)..-*./-+.0-,.1--.2-..3-/.4-0.5-1.6-2.7-3.8-4.9-5.:-6.;-7.<-8.=-9.>-:.?-;.@-<.A-=.B->.C-?.D-@.E-A.F-B.G-C.H-D.I-E.J-F.K-G.L-H.M-I.N-J.O-K.P-L.Q-M.R-N.S-O.T-P.U-Q.V-R.W-S.X-T.Y-U.Z-V.[-W.\-X.]-Y.^-Z._-[.`-\.a-].b-^.c-_.d-`.e-a.f-b.g-c.h-d.i-e.j-f.k-g.l-h.m-i.n-j.o-k.p-l.q-m.r-n.s-o.t-p.u-q.v-r.w-s.x-t.y-u.z-v.{-w.|-x.}-y.~-z.
*-+-,---.-/-0-1-2-3-4-5-6-7-8-9-:-;-<-=->-?-@-A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-W-X-Y-Z-[-\-]-^-_-`-a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z-{-|-}-~-
. .!.".#.$.
%.&.'.(.).*.+.,.-.../.0.1.2.3.4.5.6.7.8.9.:.;.<.=.>.?.@.A.B.C.D.E.F.G.H.I.J.K.L.M.N.O.P.Q.R.S.T.U.V.W.X.Y.Z.[.\.].^._.`.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.{.|.}.~.
*-+-,---.-/-0-1-2-3-4-5-6-7-8-9-:-;-<-=->-?-@-A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-W-X-Y-Z-[-\-]-^-_-`-a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z-{-|-}-~-
. .!.".#.$.
uL /vL!/wL"/xL#/yL$/zL%/{L&/|L'/}L(/~L)/
0aM0bM
0oMI(
uLvLwLxLyLzL{L|L}L~L
M M!M"M#M$M%M&M'M(M)M*M+M,M-M.M/M0M1M2M3M4M5M6M7M8M9M:M;M<M=M>M?M@MAMBMCMDMEMFMGMHMIMJMKMLMMMNMOMPMQMRMSMTMUMVMWMXMYMZM[M\M]M^M_M`MaMbMcMdMeMfMgMhMiMjMkMlMmMnMoMI(J(K(L(M(N(O(P(Q(R(S(T(U(V(W(X(Y(Z([(\(](^(_(`(a(b(c(d(e(f(g(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(}(~(
) )!)")#)$)%)&)')()))*)+),)-).)/)0)1)2)3)4)5)6)7)8)9):);)<)=)>)?)@)A)B)C)
uL /vL!/wL"/xL#/yL$/zL%/{L&/|L'/}L(/~L)/
0aM0bM
 /!/"/#/$/%/&/'/(/)/*/+/,/-/.///0/1/2/3/4/5/6/7/8/9/:/;/</=/>/?/@/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/[/\/]/^/_/`/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/{/|/}/~/
uLvLwLxLyLzL{L|L}L~L
M M!M"M#M$M%M&M'M(M)M*M+M,M-M.M/M0M1M2M3M4M5M6M7M8M9M:M;M<M=M>M?M@MAMBMCMDMEMFMGMHMIMJMKMLMMMNMOMPMQMRMSMTMUMVMWMXMYMZM[M\M]M^M_M`MaMbMcMdMeMfMgMhMiMjMkMlMmMnMoM
I(J(K(L(M(N(O(P(Q(R(S(T(U(V(W(X(Y(Z([(\(](^(_(`(a(b(c(d(e(f(g(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(}(~(
) )!)")#)$)%)&)')()))*)+),)-).)/)0)1)2)3)4)5)6)7)8)9):);)<)=)>)?)@)A)B)C)
 /!/"/#/$/%/&/'/(/)/*/+/,/-/.///0/1/2/3/4/5/6/7/8/9/:/;/</=/>/?/@/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/[/\/]/^/_/`/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/{/|/}/~/
1%0 1&0!1'0"1(0#1)0$1*0%1+0&1,0'1-0(1.0)1/0*100+110,120-130.140/150016011702180319041:051;061<071=081>091?0:1@0;1A0<1B0=1C0>1D0?1E0@1F0A1G0B1H0C1I0D1J0E1K0F1L0G1M0H1N0I1O0J1P0K1Q0L1R0M1S0N1T0O1U0P1V0Q1W0R1X0S1Y0T1Z0U1[0V1\0W1]0X1^0Y1_0Z1`0[1a0\1b0]1c0^1d0_1e0`1f0a1g0b1h0c1i0d1j0e1k0f1l0g1m0h1n0i1o0j1p0k1q0l1r0m1s0n1t0o1u0p1v0q1w0r1x0s1y0t1z0u1{0v1|0w1}0x1~0y1
1 1!1"1#1$1%1&1'1(1)1*1+1,1-1.1/101112131415161718191:1;1<1=1>1?1@1A1B1C1D1E1F1G1H1I1J1K1L1M1N1O1P1Q1R1S1T1U1V1W1X1Y1Z1[1\1]1^1_1`1a1b1c1d1e1f1g1h1i1j1k1l1m1n1o1p1q1r1s1t1u1v1w1x1y1z1{1|1}1~1
1%0 1&0!1'0"1(0#1)0$1*0%1+0&1,0'1-0(1.0)1/0*100+110,120-130.140/150016011702180319041:051;061<071=081>091?0:1@0;1A0<1B0=1C0>1D0?1E0@1F0A1G0B1H0C1I0D1J0E1K0F1L0G1M0H1N0I1O0J1P0K1Q0L1R0M1S0N1T0O1U0P1V0Q1W0R1X0S1Y0T1Z0U1[0V1\0W1]0X1^0Y1_0Z1`0[1a0\1b0]1c0^1d0_1e0`1f0a1g0b1h0c1i0d1j0e1k0f1l0g1m0h1n0i1o0j1p0k1q0l1r0m1s0n1t0o1u0p1v0q1w0r1x0s1y0t1z0u1{0v1|0w1}0x1~0y1
0 0!0"0#0$0%0&0'0(0)0*0+0,0-0.0/000102030405060708090:0;0<0=0>0?0@0A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0[0\0]0^0_0`0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0{0|0}0~0
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
1 1!1"1#1$1%1&1'1(1)1*1+1,1-1.1/101112131415161718191:1;1<1=1>1?1@1A1B1C1D1E1F1G1H1I1J1K1L1M1N1O1P1Q1R1S1T1U1V1W1X1Y1Z1[1\1]1^1_1`1a1b1c1d1e1f1g1h1i1j1k1l1m1n1o1p1q1r1s1t1u1v1w1x1y1z1{1|1}1~1
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
0 0!0"0#0$0%0&0'0(0)0*0+0,0-0.0/000102030405060708090:0;0<0=0>0?0@0A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0[0\0]0^0_0`0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0{0|0}0~0
3iND)
pMqMrMsMtMuMvMwMxMyMzM{M|M}M~M
N N!N"N#N$N%N&N'N(N)N*N+N,N-N.N/N0N1N2N3N4N5N6N7N8N9N:N;N<N=N>N?N@NANBNCNDNENFNGNHNINJNKNLNMNNNONPNQNRNSNTNUNVNWNXNYNZN[N\N]N^N_N`NaNbNcNdNeNfNgNhNiND)E)F)G)H)I)J)K)L)M)N)O)P)Q)R)S)T)U)V)W)X)Y)Z)[)\)])^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)v)w)x)y)z){)|)})~)
* *!*"*#*$*%*&*'*(*)***+*,*-*.*/*0*1*2*3*4*5*6*7*8*9*:*;*<*=*
2 2!2"2#2$2%2&2'2(2)2*2+2,2-2.2/202122232425262728292:2;2<2=2>2?2@2A2B2C2D2E2F2G2H2I2J2K2L2M2N2O2P2Q2R2S2T2U2V2W2X2Y2Z2[2\2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2q2r2s2t2u2v2w2x2y2z2{2|2}2~2
D)E)F)G)H)I)J)K)L)M)N)O)P)Q)R)S)T)U)V)W)X)Y)Z)[)\)])^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)v)w)x)y)z){)|)})~)
* *!*"*#*$*%*&*'*(*)***+*,*-*.*/*0*1*2*3*4*5*6*7*8*9*:*;*<*=*
pMqMrMsMtMuMvMwMxMyMzM{M|M}M~M
N N!N"N#N$N%N&N'N(N)N*N+N,N-N.N/N0N1N2N3N4N5N6N7N8N9N:N;N<N=N>N?N@NANBNCNDNENFNGNHNINJNKNLNMNNNONPNQNRNSNTNUNVNWNXNYNZN[N\N]N^N_N`NaNbNcNdNeNfNgNhNiN
2 2!2"2#2$2%2&2'2(2)2*2+2,2-2.2/202122232425262728292:2;2<2=2>2?2@2A2B2C2D2E2F2G2H2I2J2K2L2M2N2O2P2Q2R2S2T2U2V2W2X2Y2Z2[2\2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2q2r2s2t2u2v2w2x2y2z2{2|2}2~2
4&3 4'3!4(3"4)3#4*3$4+3%4,3&4-3'4.3(4/3)403*413+423,433-443.453/46304731483249334:344;354<364=374>384?394@3:4A3;4B3<4C3=4D3>4E3?4F3@4G3A4H3B4I3C4J3D4K3E4L3F4M3G4N3H4O3I4P3J4Q3K4R3L4S3M4T3N4U3O4V3P4W3Q4X3R4Y3S4Z3T4[3U4\3V4]3W4^3X4_3Y4`3Z4a3[4b3\4c3]4d3^4e3_4f3`4g3a4h3b4i3c4j3d4k3e4l3f4m3g4n3h4o3i4p3j4q3k4r3l4s3m4t3n4u3o4v3p4w3q4x3r4y3s4z3t4{3u4|3v4}3w4~3x4
4 4!4"4#4$4%4&4'4(4)4*4+4,4-4.4/404142434445464748494:4;4<4=4>4?4@4A4B4C4D4E4F4G4H4I4J4K4L4M4N4O4P4Q4R4S4T4U4V4W4X4Y4Z4[4\4]4^4_4`4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x4y4z4{4|4}4~4
4&3 4'3!4(3"4)3#4*3$4+3%4,3&4-3'4.3(4/3)403*413+423,433-443.453/46304731483249334:344;354<364=374>384?394@3:4A3;4B3<4C3=4D3>4E3?4F3@4G3A4H3B4I3C4J3D4K3E4L3F4M3G4N3H4O3I4P3J4Q3K4R3L4S3M4T3N4U3O4V3P4W3Q4X3R4Y3S4Z3T4[3U4\3V4]3W4^3X4_3Y4`3Z4a3[4b3\4c3]4d3^4e3_4f3`4g3a4h3b4i3c4j3d4k3e4l3f4m3g4n3h4o3i4p3j4q3k4r3l4s3m4t3n4u3o4v3p4w3q4x3r4y3s4z3t4{3u4|3v4}3w4~3x4
3 3!3"3#3$3%3&3'3(3)3*3+3,3-3.3/303132333435363738393:3;3<3=3>3?3@3A3B3C3D3E3F3G3H3I3J3K3L3M3N3O3P3Q3R3S3T3U3V3W3X3Y3Z3[3\3]3^3_3`3a3b3c3d3e3f3g3h3i3j3k3l3m3n3o3p3q3r3s3t3u3v3w3x3y3z3{3|3}3~3
4 4!4"4#4$4%4&4'4(4)4*4+4,4-4.4/404142434445464748494:4;4<4=4>4?4@4A4B4C4D4E4F4G4H4I4J4K4L4M4N4O4P4Q4R4S4T4U4V4W4X4Y4Z4[4\4]4^4_4`4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x4y4z4{4|4}4~4
3 3!3"3#3$3%3&3'3(3)3*3+3,3-3.3/303132333435363738393:3;3<3=3>3?3@3A3B3C3D3E3F3G3H3I3J3K3L3M3N3O3P3Q3R3S3T3U3V3W3X3Y3Z3[3\3]3^3_3`3a3b3c3d3e3f3g3h3i3j3k3l3m3n3o3p3q3r3s3t3u3v3w3x3y3z3{3|3}3~3
5}N5~N
5bO>*
jNkNlNmNnNoNpNqNrNsNtNuNvNwNxNyNzN{N|N}N~N
O O!O"O#O$O%O&O'O(O)O*O+O,O-O.O/O0O1O2O3O4O5O6O7O8O9O:O;O<O=O>O?O@OAOBOCODOEOFOGOHOIOJOKOLOMONOOOPOQOROSOTOUOVOWOXOYOZO[O\O]O^O_O`OaObO>*?*@*A*B*C*D*E*F*G*H*I*J*K*L*M*N*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*\*]*^*_*`*a*b*c*d*e*f*g*h*i*j*k*l*m*n*o*p*q*r*s*t*u*v*w*x*y*z*{*|*}*~*
+ +!+"+#+$+%+&+'+(+)+*+++,+-+.+/+0+1+2+3+4+5+6+
5}N5~N
5 5!5"5#5$5%5&5'5(5)5*5+5,5-5.5/505152535455565758595:5;5<5=5>5?5@5A5B5C5D5E5F5G5H5I5J5K5L5M5N5O5P5Q5R5S5T5U5V5W5X5Y5Z5[5\5]5^5_5`5a5b5c5d5e5f5g5h5i5j5k5l5m5n5o5p5q5r5s5t5u5v5w5x5y5z5{5|5}5~5
>*?*@*A*B*C*D*E*F*G*H*I*J*K*L*M*N*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*\*]*^*_*`*a*b*c*d*e*f*g*h*i*j*k*l*m*n*o*p*q*r*s*t*u*v*w*x*y*z*{*|*}*~*
+ +!+"+#+$+%+&+'+(+)+*+++,+-+.+/+0+1+2+3+4+5+6+
jNkNlNmNnNoNpNqNrNsNtNuNvNwNxNyNzN{N|N}N~N
O O!O"O#O$O%O&O'O(O)O*O+O,O-O.O/O0O1O2O3O4O5O6O7O8O9O:O;O<O=O>O?O@OAOBOCODOEOFOGOHOIOJOKOLOMONOOOPOQOROSOTOUOVOWOXOYOZO[O\O]O^O_O`OaObO
5 5!5"5#5$5%5&5'5(5)5*5+5,5-5.5/505152535455565758595:5;5<5=5>5?5@5A5B5C5D5E5F5G5H5I5J5K5L5M5N5O5P5Q5R5S5T5U5V5W5X5Y5Z5[5\5]5^5_5`5a5b5c5d5e5f5g5h5i5j5k5l5m5n5o5p5q5r5s5t5u5v5w5x5y5z5{5|5}5~5
cOdOeOfOgOhOiOjOkOlOmOnOoOpOqOrOsOtOuOvOwOxOyOzO{O|O}O~O
P P!P"P#P$P%P&P'P(P)P*P+P,P-P.P/P0P1P2P3P4P5P6P7P8P9P:P;P<P=P>P?P@PAPBPCPDPEPFPGPHPIPJPKPLPMPNPOPPPQPRPSPTPUPVPWPXPYPZP7+8+9+:+;+<+=+>+?+@+A+B+C+D+E+F+G+H+I+J+K+L+M+N+O+P+Q+R+S+T+U+V+W+X+Y+Z+[+\+]+^+_+`+a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t+u+v+w+x+y+z+{+|+}+~+
, ,!,",#,$,%,&,',(,),*,+,,,-,.,
7+8+9+:+;+<+=+>+?+@+A+B+C+D+E+F+G+H+I+J+K+L+M+N+O+P+Q+R+S+T+U+V+W+X+Y+Z+[+\+]+^+_+`+a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t+u+v+w+x+y+z+{+|+}+~+
, ,!,",#,$,%,&,',(,),*,+,,,-,.,
cOdOeOfOgOhOiOjOkOlOmOnOoOpOqOrOsOtOuOvOwOxOyOzO{O|O}O~O
P P!P"P#P$P%P&P'P(P)P*P+P,P-P.P/P0P1P2P3P4P5P6P7P8P9P:P;P<P=P>P?P@PAPBPCPDPEPFPGPHPIPJPKPLPMPNPOPPPQPRPSPTPUPVPWPXPYPZP
B B!B"B#B$B%B&B'B(B)B*B+B,B-B.B/B0B1B2B3B4B5B6B7B8B9B:B;B<B=B>B?B@BABBBCBDBEBFBGBHBIBJBKBLBMBNBOBPBQBRBSBTBUBVBWBXBYBZB[B\B]B^B_B`BaBbBcBdBeBfBgBhBiBjBkBlBmBnBoBpBqBrBsBtBuBvBwBxByBzB{B|B}B~B
B B!B"B#B$B%B&B'B(B)B*B+B,B-B.B/B0B1B2B3B4B5B6B7B8B9B:B;B<B=B>B?B@BABBBCBDBEBFBGBHBIBJBKBLBMBNBOBPBQBRBSBTBUBVBWBXBYBZB[B\B]B^B_B`BaBbBcBdBeBfBgBhBiBjBkBlBmBnBoBpBqBrBsBtBuBvBwBxByBzB{B|B}B~B
C C!C"C#C$C%C&C'C(C)C*C+C,C-C.C/C0C1C2C3C4C5C6C7C8C9C:C;C<C=C>C?C@CACBCCCDCECFCGCHCICJCKCLCMCNCOCPCQCRCSCTCUCVCWCXCYCZC[C\C]C^C_C`CaCbCcCdCeCfCgChCiCjCkClCmCnCoCpCqCrCsCtCuCvCwCxCyCzC{C|C}C~C
C C!C"C#C$C%C&C'C(C)C*C+C,C-C.C/C0C1C2C3C4C5C6C7C8C9C:C;C<C=C>C?C@CACBCCCDCECFCGCHCICJCKCLCMCNCOCPCQCRCSCTCUCVCWCXCYCZC[C\C]C^C_C`CaCbCcCdCeCfCgChCiCjCkClCmCnCoCpCqCrCsCtCuCvCwCxCyCzC{C|C}C~C
D D!D"D#D$D%D&D'D(D)D*D+D,D-D.D/D0D1D2D3D4D5D6D7D8D9D:D;D<D=D>D?D@DADBDCDDDEDFDGDHDIDJDKDLDMDNDODPDQDRDSDTDUDVDWDXDYDZD[D\D]D^D_D`DaDbDcDdDeDfDgDhDiDjDkDlDmDnDoDpDqDrDsDtDuDvDwDxDyDzD{D|D}D~D
   ! " # $ % & ' ( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ] ^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | } ~ 
   ! " # $ % & ' ( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ] ^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | } ~ 
D D!D"D#D$D%D&D'D(D)D*D+D,D-D.D/D0D1D2D3D4D5D6D7D8D9D:D;D<D=D>D?D@DADBDCDDDEDFDGDHDIDJDKDLDMDNDODPDQDRDSDTDUDVDWDXDYDZD[D\D]D^D_D`DaDbDcDdDeDfDgDhDiDjDkDlDmDnDoDpDqDrDsDtDuDvDwDxDyDzD{D|D}D~D
E E!E"E#E$E%E&E'E(E)E*E+E,E-E.E/E0E1E2E3E4E5E6E7E8E9E:E;E<E=E>E?E@EAEBECEDEEEFEGEHEIEJEKELEMENEOEPEQERESETEUEVEWEXEYEZE[E\E]E^E_E`EaEbEcEdEeEfEgEhEiEjEkElEmEnEoEpEqErEsEtEuEvEwExEyEzE{E|E}E~E
! !!!"!#!$!%!&!'!(!)!*!+!,!-!.!/!0!1!2!3!4!5!6!7!8!9!:!;!<!=!>!?!@!A!B!C!D!E!F!G!H!I!J!K!L!M!N!O!P!Q!R!S!T!U!V!W!X!Y!Z![!\!]!^!_!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!o!p!q!r!s!t!u!v!w!x!y!z!{!|!
! !!!"!#!$!%!&!'!(!)!*!+!,!-!.!/!0!1!2!3!4!5!6!7!8!9!:!;!<!=!>!?!@!A!B!C!D!E!F!G!H!I!J!K!L!M!N!O!P!Q!R!S!T!U!V!W!X!Y!Z![!\!]!^!_!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!o!p!q!r!s!t!u!v!w!x!y!z!{!|!
E E!E"E#E$E%E&E'E(E)E*E+E,E-E.E/E0E1E2E3E4E5E6E7E8E9E:E;E<E=E>E?E@EAEBECEDEEEFEGEHEIEJEKELEMENEOEPEQERESETEUEVEWEXEYEZE[E\E]E^E_E`EaEbEcEdEeEfEgEhEiEjEkElEmEnEoEpEqErEsEtEuEvEwExEyEzE{E|E}E~E
F F!F"F#F$F%F&F'F(F)F*F+F,F-F.F/F0F1F2F3F4F5F6F7F8F9F:F;F<F=F>F?F@FAFBFCFDFEFFFGFHFIFJFKFLFMFNFOFPFQFRFSFTFUFVFWFXFYFZF[F\F]F^F_F`FaFbFcFdFeFfFgFhFiFjFkFlFmFnFoFpFqFrFsFtFuFvFwFxFyFzF{F|F}F~F
F}!~!
" "!"""#"$"%"&"'"(")"*"+","-"."/"0"1"2"3"4"5"6"7"8"9":";"<"=">"?"@"A"B"C"D"E"F"G"H"I"J"K"L"M"N"O"P"Q"R"S"T"U"V"W"X"Y"Z"["\"]"^"_"`"a"b"c"d"e"f"g"h"i"j"k"l"m"n"o"
}!~!
" "!"""#"$"%"&"'"(")"*"+","-"."/"0"1"2"3"4"5"6"7"8"9":";"<"=">"?"@"A"B"C"D"E"F"G"H"I"J"K"L"M"N"O"P"Q"R"S"T"U"V"W"X"Y"Z"["\"]"^"_"`"a"b"c"d"e"f"g"h"i"j"k"l"m"n"o"
F F!F"F#F$F%F&F'F(F)F*F+F,F-F.F/F0F1F2F3F4F5F6F7F8F9F:F;F<F=F>F?F@FAFBFCFDFEFFFGFHFIFJFKFLFMFNFOFPFQFRFSFTFUFVFWFXFYFZF[F\F]F^F_F`FaFbFcFdFeFfFgFhFiFjFkFlFmFnFoFpFqFrFsFtFuFvFwFxFyFzF{F|F}F~F
G G!G"G#G$G%G&G'G(G)G*G+G,G-G.G/G0G1G2G3G4G5G6G7G8G9G:G;G<G=G>G?G@GAGBGCGDGEGFGGGHGIGJGKGLGMGNGOGPGQGRGSGTGUGVGWGXGYGZG[G\G]G^G_G`GaGbGcGdGeGfGgGhGiGjGkGlGmGnGoGpGqGrGsGtGuGvGwGxGyGzG{G|G}G~G
Gp"q"r"s"t"u"v"w"x"y"z"{"|"}"~"
# #!#"###$#%#&#'#(#)#*#+#,#-#.#/#0#1#2#3#4#5#6#7#8#9#:#;#<#=#>#?#@#A#B#C#D#E#F#G#H#I#J#K#L#M#N#O#P#Q#R#S#T#U#V#W#X#Y#Z#[#\#]#^#_#`#a#
p"q"r"s"t"u"v"w"x"y"z"{"|"}"~"
# #!#"###$#%#&#'#(#)#*#+#,#-#.#/#0#1#2#3#4#5#6#7#8#9#:#;#<#=#>#?#@#A#B#C#D#E#F#G#H#I#J#K#L#M#N#O#P#Q#R#S#T#U#V#W#X#Y#Z#[#\#]#^#_#`#a#
G G!G"G#G$G%G&G'G(G)G*G+G,G-G.G/G0G1G2G3G4G5G6G7G8G9G:G;G<G=G>G?G@GAGBGCGDGEGFGGGHGIGJGKGLGMGNGOGPGQGRGSGTGUGVGWGXGYGZG[G\G]G^G_G`GaGbGcGdGeGfGgGhGiGjGkGlGmGnGoGpGqGrGsGtGuGvGwGxGyGzG{G|G}G~G
H H!H"H#H$H%H&H'H(H)H*H+H,H-H.H/H0H1H2H3H4H5H6H7H8H9H:H;H<H=H>H?H@HAHBHCHDHEHFHGHHHIHJHKHLHMHNHOHPHQHRHSHTHUHVHWHXHYHZH[H\H]H^H_H`HaHbHcHdHeHfHgHhHiHjHkHlHmHnHoHpHqHrHsHtHuHvHwHxHyHzH{H|H}H~Hb#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#s#t#u#v#w#x#y#z#{#|#}#~#
$ $!$"$#$$$%$&$'$($)$*$+$,$-$.$/$0$1$2$3$4$5$6$7$8$9$:$;$<$=$>$?$@$A$B$C$D$E$F$G$H$I$J$K$L$M$N$O$P$Q$R$
b#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#s#t#u#v#w#x#y#z#{#|#}#~#
$ $!$"$#$$$%$&$'$($)$*$+$,$-$.$/$0$1$2$3$4$5$6$7$8$9$:$;$<$=$>$?$@$A$B$C$D$E$F$G$H$I$J$K$L$M$N$O$P$Q$R$
H H!H"H#H$H%H&H'H(H)H*H+H,H-H.H/H0H1H2H3H4H5H6H7H8H9H:H;H<H=H>H?H@HAHBHCHDHEHFHGHHHIHJHKHLHMHNHOHPHQHRHSHTHUHVHWHXHYHZH[H\H]H^H_H`HaHbHcHdHeHfHgHhHiHjHkHlHmHnHoHpHqHrHsHtHuHvHwHxHyHzH{H|H}H~H
10000
11000
12000
13000
4000
5000
6000
7000
8000
9000
10100
11100
12100
13100
4100
5100
6100
7100
8100
9100
10200
11200
12200
13200
4200
5200
6200
7200
8200
9200
10300
11300
12300
13300
4300
5300
6300
7300
8300
9300
10400
11400
12400
3400
4400
5400
6400
7400
8400
9400
10500
11500
12500
3500
4500
5500
6500
7500
8500
9500
10600
11600
12600
3600
4600
5600
6600
7600
8600
9600
10700
11700
12700
3700
4700
5700
6700
7700
8700
9700
10800
11800
12800
3800
4800
5800
6800
7800
8800
9800
10900
11900
12900
3900
4900
5900
6900
7900
8900
9900
10010
11010
12010
13010
4010
5010
6010
7010
8010
9010
10110
11110
12110
13110
4110
5110
6110
7110
8110
9110
10210
11210
12210
13210
4210
5210
6210
7210
8210
9210
10310
11310
12310
13310
4310
5310
6310
7310
8310
9310
10410
11410
12410
3410
4410
5410
6410
7410
8410
9410
10510
11510
12510
3510
4510
5510
6510
7510
8510
9510
10610
11610
12610
3610
4610
5610
6610
7610
8610
9610
10710
11710
12710
3710
4710
5710
6710
7710
8710
9710
10810
11810
12810
3810
4810
5810
6810
7810
8810
9810
10910
11910
12910
3910
4910
5910
6910
7910
8910
9910
10020
11020
12020
13020
4020
5020
6020
7020
8020
9020
10120
11120
12120
13120
4120
5120
6120
7120
8120
9120
10220
11220
12220
13220
4220
5220
6220
7220
8220
9220
10320
11320
12320
13320
4320
5320
6320
7320
8320
9320
10420
11420
12420
3420
4420
5420
6420
7420
8420
9420
10520
11520
12520
3520
4520
5520
6520
7520
8520
9520
10620
11620
12620
3620
4620
5620
6620
7620
8620
9620
10720
11720
12720
3720
4720
5720
6720
7720
8720
9720
10820
11820
12820
3820
4820
5820
6820
7820
8820
9820
10920
11920
12920
3920
4920
5920
6920
7920
8920
9920
10030
11030
12030
13030
4030
5030
6030
7030
8030
9030
10130
11130
12130
13130
4130
5130
6130
7130
8130
9130
10230
11230
12230
13230
4230
5230
6230
7230
8230
9230
10330
11330
12330
13330
4330
5330
6330
7330
8330
9330
10430
11430
12430
3430
4430
5430
6430
7430
8430
9430
10530
11530
12530
3530
4530
5530
6530
7530
8530
9530
10630
11630
12630
3630
4630
5630
6630
7630
8630
9630
10730
11730
12730
3730
4730
5730
6730
7730
8730
9730
10830
11830
12830
3830
4830
5830
6830
7830
8830
9830
10930
11930
12930
3930
4930
5930
6930
7930
8930
9930
10040
11040
12040
13040
4040
5040
6040
7040
8040
9040
10140
11140
12140
13140
4140
5140
6140
7140
8140
9140
10240
11240
12240
13240
4240
5240
6240
7240
8240
9240
10340
11340
12340
13340
4340
5340
6340
7340
8340
9340
10440
11440
12440
3440
4440
5440
6440
7440
8440
9440
10540
11540
12540
3540
4540
5540
6540
7540
8540
9540
10640
11640
12640
3640
4640
5640
6640
7640
8640
9640
10740
11740
12740
3740
4740
5740
6740
7740
8740
9740
10840
11840
12840
3840
4840
5840
6840
7840
8840
9840
10940
11940
12940
3940
4940
5940
6940
7940
8940
9940
10050
11050
12050
13050
4050
5050
6050
7050
8050
9050
10150
11150
12150
13150
4150
5150
6150
7150
8150
9150
10250
11250
12250
13250
4250
5250
6250
7250
8250
9250
10350
11350
12350
13350
4350
5350
6350
7350
8350
9350
10450
11450
12450
3450
4450
5450
6450
7450
8450
9450
10550
11550
12550
3550
4550
5550
6550
7550
8550
9550
10650
11650
12650
3650
4650
5650
6650
7650
8650
9650
10750
11750
12750
3750
4750
5750
6750
7750
8750
9750
10850
11850
12850
3850
4850
5850
6850
7850
8850
9850
10950
11950
12950
3950
4950
5950
6950
7950
8950
9950
10060
11060
12060
13060
4060
5060
6060
7060
8060
9060
10160
11160
12160
13160
4160
5160
6160
7160
8160
9160
10260
11260
12260
13260
4260
5260
6260
7260
8260
9260
10360
11360
12360
13360
4360
5360
6360
7360
8360
9360
10460
11460
12460
3460
4460
5460
6460
7460
8460
9460
10560
11560
12560
3560
4560
5560
6560
7560
8560
9560
10660
11660
12660
3660
4660
5660
6660
7660
8660
9660
10760
11760
12760
3760
4760
5760
6760
7760
8760
9760
10860
11860
12860
3860
4860
5860
6860
7860
8860
9860
10960
11960
12960
3960
4960
5960
6960
7960
8960
9960
10070
11070
12070
13070
4070
5070
6070
7070
8070
9070
10170
11170
12170
13170
4170
5170
6170
7170
8170
9170
10270
11270
12270
13270
4270
5270
6270
7270
8270
9270
10370
11370
12370
13370
4370
5370
6370
7370
8370
9370
10470
11470
12470
3470
4470
5470
6470
7470
8470
9470
10570
11570
12570
3570
4570
5570
6570
7570
8570
9570
10670
11670
12670
3670
4670
5670
6670
7670
8670
9670
10770
11770
12770
3770
4770
5770
6770
7770
8770
9770
10870
11870
12870
3870
4870
5870
6870
7870
8870
9870
10970
11970
12970
3970
4970
5970
6970
7970
8970
9970
10080
11080
12080
13080
4080
5080
6080
7080
8080
9080
10180
11180
12180
13180
4180
5180
6180
7180
8180
9180
10280
11280
12280
13280
4280
5280
6280
7280
8280
9280
10380
11380
12380
13380
4380
5380
6380
7380
8380
9380
10480
11480
12480
3480
4480
5480
6480
7480
8480
9480
10580
11580
12580
3580
4580
5580
6580
7580
8580
9580
10680
11680
12680
3680
4680
5680
6680
7680
8680
9680
10780
11780
12780
3780
4780
5780
6780
7780
8780
9780
10880
11880
12880
3880
4880
5880
6880
7880
8880
9880
10980
11980
12980
3980
4980
5980
6980
7980
8980
9980
10090
11090
12090
13090
4090
5090
6090
7090
8090
9090
10190
11190
12190
13190
4190
5190
6190
7190
8190
9190
10290
11290
12290
13290
4290
5290
6290
7290
8290
9290
10390
11390
12390
3390
4390
5390
6390
7390
8390
9390
10490
11490
12490
3490
4490
5490
6490
7490
8490
9490
10590
11590
12590
3590
4590
5590
6590
7590
8590
9590
10690
11690
12690
3690
4690
5690
6690
7690
8690
9690
10790
11790
12790
3790
4790
5790
6790
7790
8790
9790
10890
11890
12890
3890
4890
5890
6890
7890
8890
9890
10990
11990
12990
3990
4990
5990
6990
7990
8990
9990
10001
11001
12001
13001
4001
5001
6001
7001
8001
9001
10101
11101
12101
13101
4101
5101
6101
7101
8101
9101
10201
11201
12201
13201
4201
5201
6201
7201
8201
9201
10301
11301
12301
13301
4301
5301
6301
7301
8301
9301
10401
11401
12401
3401
4401
5401
6401
7401
8401
9401
10501
11501
12501
3501
4501
5501
6501
7501
8501
9501
10601
11601
12601
3601
4601
5601
6601
7601
8601
9601
10701
11701
12701
3701
4701
5701
6701
7701
8701
9701
10801
11801
12801
3801
4801
5801
6801
7801
8801
9801
10901
11901
12901
3901
4901
5901
6901
7901
8901
9901
10011
11011
12011
13011
4011
5011
6011
7011
8011
9011
10111
11111
12111
13111
4111
5111
6111
7111
8111
9111
10211
11211
12211
13211
4211
5211
6211
7211
8211
9211
10311
11311
12311
13311
4311
5311
6311
7311
8311
9311
10411
11411
12411
3411
4411
5411
6411
7411
8411
9411
10511
11511
12511
3511
4511
5511
6511
7511
8511
9511
10611
11611
12611
3611
4611
5611
6611
7611
8611
9611
10711
11711
12711
3711
4711
5711
6711
7711
8711
9711
10811
11811
12811
3811
4811
5811
6811
7811
8811
9811
10911
11911
12911
3911
4911
5911
6911
7911
8911
9911
10021
11021
12021
13021
4021
5021
6021
7021
8021
9021
10121
11121
12121
13121
4121
5121
6121
7121
8121
9121
10221
11221
12221
13221
4221
5221
6221
7221
8221
9221
10321
11321
12321
13321
4321
5321
6321
7321
8321
9321
10421
11421
12421
3421
4421
5421
6421
7421
8421
9421
10521
11521
12521
3521
4521
5521
6521
7521
8521
9521
10621
11621
12621
3621
4621
5621
6621
7621
8621
9621
10721
11721
12721
3721
4721
5721
6721
7721
8721
9721
10821
11821
12821
3821
4821
5821
6821
7821
8821
9821
10921
11921
12921
3921
4921
5921
6921
7921
8921
9921
10031
11031
12031
13031
4031
5031
6031
7031
8031
9031
10131
11131
12131
13131
4131
5131
6131
7131
8131
9131
10231
11231
12231
13231
4231
5231
6231
7231
8231
9231
10331
11331
12331
13331
4331
5331
6331
7331
8331
9331
10431
11431
12431
3431
4431
5431
6431
7431
8431
9431
10531
11531
12531
3531
4531
5531
6531
7531
8531
9531
10631
11631
12631
3631
4631
5631
6631
7631
8631
9631
10731
11731
12731
3731
4731
5731
6731
7731
8731
9731
10831
11831
12831
3831
4831
5831
6831
7831
8831
9831
10931
11931
12931
3931
4931
5931
6931
7931
8931
9931
10041
11041
12041
13041
4041
5041
6041
7041
8041
9041
10141
11141
12141
13141
4141
5141
6141
7141
8141
9141
10241
11241
12241
13241
4241
5241
6241
7241
8241
9241
10341
11341
12341
13341
4341
5341
6341
7341
8341
9341
10441
11441
12441
3441
4441
5441
6441
7441
8441
9441
10541
11541
12541
3541
4541
5541
6541
7541
8541
9541
10641
11641
12641
3641
4641
5641
6641
7641
8641
9641
10741
11741
12741
3741
4741
5741
6741
7741
8741
9741
10841
11841
12841
3841
4841
5841
6841
7841
8841
9841
10941
11941
12941
3941
4941
5941
6941
7941
8941
9941
10051
11051
12051
13051
4051
5051
6051
7051
8051
9051
10151
11151
12151
13151
4151
5151
6151
7151
8151
9151
10251
11251
12251
13251
4251
5251
6251
7251
8251
9251
10351
11351
12351
13351
4351
5351
6351
7351
8351
9351
10451
11451
12451
3451
4451
5451
6451
7451
8451
9451
10551
11551
12551
3551
4551
5551
6551
7551
8551
9551
10651
11651
12651
3651
4651
5651
6651
7651
8651
9651
10751
11751
12751
3751
4751
5751
6751
7751
8751
9751
10851
11851
12851
3851
4851
5851
6851
7851
8851
9851
10951
11951
12951
3951
4951
5951
6951
7951
8951
9951
10061
11061
12061
13061
4061
5061
6061
7061
8061
9061
10161
11161
12161
13161
4161
5161
6161
7161
8161
9161
10261
11261
12261
13261
4261
5261
6261
7261
8261
9261
10361
11361
12361
13361
4361
5361
6361
7361
8361
9361
10461
11461
12461
3461
4461
5461
6461
7461
8461
9461
10561
11561
12561
3561
4561
5561
6561
7561
8561
9561
10661
11661
12661
3661
4661
5661
6661
7661
8661
9661
10761
11761
12761
3761
4761
5761
6761
7761
8761
9761
10861
11861
12861
3861
4861
5861
6861
7861
8861
9861
10961
11961
12961
3961
4961
5961
6961
7961
8961
9961
10071
11071
12071
13071
4071
5071
6071
7071
8071
9071
10171
11171
12171
13171
4171
5171
6171
7171
8171
9171
10271
11271
12271
13271
4271
5271
6271
7271
8271
9271
10371
11371
12371
13371
4371
5371
6371
7371
8371
9371
10471
11471
12471
3471
4471
5471
6471
7471
8471
9471
10571
11571
12571
3571
4571
5571
6571
7571
8571
9571
10671
11671
12671
3671
4671
5671
6671
7671
8671
9671
10771
11771
12771
3771
4771
5771
6771
7771
8771
9771
10871
11871
12871
3871
4871
5871
6871
7871
8871
9871
10971
11971
12971
3971
4971
5971
6971
7971
8971
9971
10081
11081
12081
13081
4081
5081
6081
7081
8081
9081
10181
11181
12181
13181
4181
5181
6181
7181
8181
9181
10281
11281
12281
13281
4281
5281
6281
7281
8281
9281
10381
11381
12381
13381
4381
5381
6381
7381
8381
9381
10481
11481
12481
3481
4481
5481
6481
7481
8481
9481
10581
11581
12581
3581
4581
5581
6581
7581
8581
9581
10681
11681
12681
3681
4681
5681
6681
7681
8681
9681
10781
11781
12781
3781
4781
5781
6781
7781
8781
9781
10881
11881
12881
3881
4881
5881
6881
7881
8881
9881
10981
11981
12981
3981
4981
5981
6981
7981
8981
9981
10091
11091
12091
13091
4091
5091
6091
7091
8091
9091
10191
11191
12191
13191
4191
5191
6191
7191
8191
9191
10291
11291
12291
13291
4291
5291
6291
7291
8291
9291
10391
11391
12391
3391
4391
5391
6391
7391
8391
9391
10491
11491
12491
3491
4491
5491
6491
7491
8491
9491
10591
11591
12591
3591
4591
5591
6591
7591
8591
9591
10691
11691
12691
3691
4691
5691
6691
7691
8691
9691
10791
11791
12791
3791
4791
5791
6791
7791
8791
9791
10891
11891
12891
3891
4891
5891
6891
7891
8891
9891
10991
11991
12991
3991
4991
5991
6991
7991
8991
9991
10002
11002
12002
13002
4002
5002
6002
7002
8002
9002
10102
11102
12102
13102
4102
5102
6102
7102
8102
9102
10202
11202
12202
13202
4202
5202
6202
7202
8202
9202
10302
11302
12302
13302
4302
5302
6302
7302
8302
9302
10402
11402
12402
3402
4402
5402
6402
7402
8402
9402
10502
11502
12502
3502
4502
5502
6502
7502
8502
9502
10602
11602
12602
3602
4602
5602
6602
7602
8602
9602
10702
11702
12702
3702
4702
5702
6702
7702
8702
9702
10802
11802
12802
3802
4802
5802
6802
7802
8802
9802
10902
11902
12902
3902
4902
5902
6902
7902
8902
9902
10012
11012
12012
13012
4012
5012
6012
7012
8012
9012
10112
11112
12112
13112
4112
5112
6112
7112
8112
9112
10212
11212
12212
13212
4212
5212
6212
7212
8212
9212
10312
11312
12312
13312
4312
5312
6312
7312
8312
9312
10412
11412
12412
3412
4412
5412
6412
7412
8412
9412
10512
11512
12512
3512
4512
5512
6512
7512
8512
9512
10612
11612
12612
3612
4612
5612
6612
7612
8612
9612
10712
11712
12712
3712
4712
5712
6712
7712
8712
9712
10812
11812
12812
3812
4812
5812
6812
7812
8812
9812
10912
11912
12912
3912
4912
5912
6912
7912
8912
9912
10022
11022
12022
13022
4022
5022
6022
7022
8022
9022
10122
11122
12122
13122
4122
5122
6122
7122
8122
9122
10222
11222
12222
13222
4222
5222
6222
7222
8222
9222
10322
11322
12322
13322
4322
5322
6322
7322
8322
9322
10422
11422
12422
3422
4422
5422
6422
7422
8422
9422
10522
11522
12522
3522
4522
5522
6522
7522
8522
9522
10622
11622
12622
3622
4622
5622
6622
7622
8622
9622
10722
11722
12722
3722
4722
5722
6722
7722
8722
9722
10822
11822
12822
3822
4822
5822
6822
7822
8822
9822
10922
11922
12922
3922
4922
5922
6922
7922
8922
9922
10032
11032
12032
13032
4032
5032
6032
7032
8032
9032
10132
11132
12132
13132
4132
5132
6132
7132
8132
9132
10232
11232
12232
13232
4232
5232
6232
7232
8232
9232
10332
11332
12332
13332
4332
5332
6332
7332
8332
9332
10432
11432
12432
3432
4432
5432
6432
7432
8432
9432
10532
11532
12532
3532
4532
5532
6532
7532
8532
9532
10632
11632
12632
3632
4632
5632
6632
7632
8632
9632
10732
11732
12732
3732
4732
5732
6732
7732
8732
9732
10832
11832
12832
3832
4832
5832
6832
7832
8832
9832
10932
11932
12932
3932
4932
5932
6932
7932
8932
9932
10042
11042
12042
13042
4042
5042
6042
7042
8042
9042
10142
11142
12142
13142
4142
5142
6142
7142
8142
9142
10242
11242
12242
13242
4242
5242
6242
7242
8242
9242
10342
11342
12342
13342
4342
5342
6342
7342
8342
9342
10442
11442
12442
3442
4442
5442
6442
7442
8442
9442
10542
11542
12542
3542
4542
5542
6542
7542
8542
9542
10642
11642
12642
3642
4642
5642
6642
7642
8642
9642
10742
11742
12742
3742
4742
5742
6742
7742
8742
9742
10842
11842
12842
3842
4842
5842
6842
7842
8842
9842
10942
11942
12942
3942
4942
5942
6942
7942
8942
9942
10052
11052
12052
13052
4052
5052
6052
7052
8052
9052
10152
11152
12152
13152
4152
5152
6152
7152
8152
9152
10252
11252
12252
13252
4252
5252
6252
7252
8252
9252
10352
11352
12352
13352
4352
5352
6352
7352
8352
9352
10452
11452
12452
3452
4452
5452
6452
7452
8452
9452
10552
11552
12552
3552
4552
5552
6552
7552
8552
9552
10652
11652
12652
3652
4652
5652
6652
7652
8652
9652
10752
11752
12752
3752
4752
5752
6752
7752
8752
9752
10852
11852
12852
3852
4852
5852
6852
7852
8852
9852
10952
11952
12952
3952
4952
5952
6952
7952
8952
9952
10062
11062
12062
13062
4062
5062
6062
7062
8062
9062
10162
11162
12162
13162
4162
5162
6162
7162
8162
9162
10262
11262
12262
13262
4262
5262
6262
7262
8262
9262
10362
11362
12362
13362
4362
5362
6362
7362
8362
9362
10462
11462
12462
3462
4462
5462
6462
7462
8462
9462
10562
11562
12562
3562
4562
5562
6562
7562
8562
9562
10662
11662
12662
3662
4662
5662
6662
7662
8662
9662
10762
11762
12762
3762
4762
5762
6762
7762
8762
9762
10862
11862
12862
3862
4862
5862
6862
7862
8862
9862
10962
11962
12962
3962
4962
5962
6962
7962
8962
9962
10072
11072
12072
13072
4072
5072
6072
7072
8072
9072
10172
11172
12172
13172
4172
5172
6172
7172
8172
9172
10272
11272
12272
13272
4272
5272
6272
7272
8272
9272
10372
11372
12372
13372
4372
5372
6372
7372
8372
9372
10472
11472
12472
3472
4472
5472
6472
7472
8472
9472
10572
11572
12572
3572
4572
5572
6572
7572
8572
9572
10672
11672
12672
3672
4672
5672
6672
7672
8672
9672
10772
11772
12772
3772
4772
5772
6772
7772
8772
9772
10872
11872
12872
3872
4872
5872
6872
7872
8872
9872
10972
11972
12972
3972
4972
5972
6972
7972
8972
9972
10082
11082
12082
13082
4082
5082
6082
7082
8082
9082
10182
11182
12182
13182
4182
5182
6182
7182
8182
9182
10282
11282
12282
13282
4282
5282
6282
7282
8282
9282
10382
11382
12382
3382
4382
5382
6382
7382
8382
9382
10482
11482
12482
3482
4482
5482
6482
7482
8482
9482
10582
11582
12582
3582
4582
5582
6582
7582
8582
9582
10682
11682
12682
3682
4682
5682
6682
7682
8682
9682
10782
11782
12782
3782
4782
5782
6782
7782
8782
9782
10882
11882
12882
3882
4882
5882
6882
7882
8882
9882
10982
11982
12982
3982
4982
5982
6982
7982
8982
9982
10092
11092
12092
13092
4092
5092
6092
7092
8092
9092
10192
11192
12192
13192
4192
5192
6192
7192
8192
9192
10292
11292
12292
13292
4292
5292
6292
7292
8292
9292
10392
11392
12392
3392
4392
5392
6392
7392
8392
9392
10492
11492
12492
3492
4492
5492
6492
7492
8492
9492
10592
11592
12592
3592
4592
5592
6592
7592
8592
9592
10692
11692
12692
3692
4692
5692
6692
7692
8692
9692
10792
11792
12792
3792
4792
5792
6792
7792
8792
9792
10892
11892
12892
3892
4892
5892
6892
7892
8892
9892
10992
11992
12992
3992
4992
5992
6992
7992
8992
9992
10003
11003
12003
13003
4003
5003
6003
7003
8003
9003
10103
11103
12103
13103
4103
5103
6103
7103
8103
9103
10203
11203
12203
13203
4203
5203
6203
7203
8203
9203
10303
11303
12303
13303
4303
5303
6303
7303
8303
9303
10403
11403
12403
3403
4403
5403
6403
7403
8403
9403
10503
11503
12503
3503
4503
5503
6503
7503
8503
9503
10603
11603
12603
3603
4603
5603
6603
7603
8603
9603
10703
11703
12703
3703
4703
5703
6703
7703
8703
9703
10803
11803
12803
3803
4803
5803
6803
7803
8803
9803
10903
11903
12903
3903
4903
5903
6903
7903
8903
9903
10013
11013
12013
13013
4013
5013
6013
7013
8013
9013
10113
11113
12113
13113
4113
5113
6113
7113
8113
9113
10213
11213
12213
13213
4213
5213
6213
7213
8213
9213
10313
11313
12313
13313
4313
5313
6313
7313
8313
9313
10413
11413
12413
3413
4413
5413
6413
7413
8413
9413
10513
11513
12513
3513
4513
5513
6513
7513
8513
9513
10613
11613
12613
3613
4613
5613
6613
7613
8613
9613
10713
11713
12713
3713
4713
5713
6713
7713
8713
9713
10813
11813
12813
3813
4813
5813
6813
7813
8813
9813
10913
11913
12913
3913
4913
5913
6913
7913
8913
9913
10023
11023
12023
13023
4023
5023
6023
7023
8023
9023
10123
11123
12123
13123
4123
5123
6123
7123
8123
9123
10223
11223
12223
13223
4223
5223
6223
7223
8223
9223
10323
11323
12323
13323
4323
5323
6323
7323
8323
9323
10423
11423
12423
3423
4423
5423
6423
7423
8423
9423
10523
11523
12523
3523
4523
5523
6523
7523
8523
9523
10623
11623
12623
3623
4623
5623
6623
7623
8623
9623
10723
11723
12723
3723
4723
5723
6723
7723
8723
9723
10823
11823
12823
3823
4823
5823
6823
7823
8823
9823
10923
11923
12923
3923
4923
5923
6923
7923
8923
9923
10033
11033
12033
13033
4033
5033
6033
7033
8033
9033
10133
11133
12133
13133
4133
5133
6133
7133
8133
9133
10233
11233
12233
13233
4233
5233
6233
7233
8233
9233
10333
11333
12333
13333
4333
5333
6333
7333
8333
9333
10433
11433
12433
3433
4433
5433
6433
7433
8433
9433
10533
11533
12533
3533
4533
5533
6533
7533
8533
9533
10633
11633
12633
3633
4633
5633
6633
7633
8633
9633
10733
11733
12733
3733
4733
5733
6733
7733
8733
9733
10833
11833
12833
3833
4833
5833
6833
7833
8833
9833
10933
11933
12933
3933
4933
5933
6933
7933
8933
9933
10043
11043
12043
13043
4043
5043
6043
7043
8043
9043
10143
11143
12143
13143
4143
5143
6143
7143
8143
9143
10243
11243
12243
13243
4243
5243
6243
7243
8243
9243
10343
11343
12343
13343
4343
5343
6343
7343
8343
9343
10443
11443
12443
3443
4443
5443
6443
7443
8443
9443
10543
11543
12543
3543
4543
5543
6543
7543
8543
9543
10643
11643
12643
3643
4643
5643
6643
7643
8643
9643
10743
11743
12743
3743
4743
5743
6743
7743
8743
9743
10843
11843
12843
3843
4843
5843
6843
7843
8843
9843
10943
11943
12943
3943
4943
5943
6943
7943
8943
9943
10053
11053
12053
13053
4053
5053
6053
7053
8053
9053
10153
11153
12153
13153
4153
5153
6153
7153
8153
9153
10253
11253
12253
13253
4253
5253
6253
7253
8253
9253
10353
11353
12353
13353
4353
5353
6353
7353
8353
9353
10453
11453
12453
3453
4453
5453
6453
7453
8453
9453
10553
11553
12553
3553
4553
5553
6553
7553
8553
9553
10653
11653
12653
3653
4653
5653
6653
7653
8653
9653
10753
11753
12753
3753
4753
5753
6753
7753
8753
9753
10853
11853
12853
3853
4853
5853
6853
7853
8853
9853
10953
11953
12953
3953
4953
5953
6953
7953
8953
9953
10063
11063
12063
13063
4063
5063
6063
7063
8063
9063
10163
11163
12163
13163
4163
5163
6163
7163
8163
9163
10263
11263
12263
13263
4263
5263
6263
7263
8263
9263
10363
11363
12363
13363
4363
5363
6363
7363
8363
9363
10463
11463
12463
3463
4463
5463
6463
7463
8463
9463
10563
11563
12563
3563
4563
5563
6563
7563
8563
9563
10663
11663
12663
3663
4663
5663
6663
7663
8663
9663
10763
11763
12763
3763
4763
5763
6763
7763
8763
9763
10863
11863
12863
3863
4863
5863
6863
7863
8863
9863
10963
11963
12963
3963
4963
5963
6963
7963
8963
9963
10073
11073
12073
13073
4073
5073
6073
7073
8073
9073
10173
11173
12173
13173
4173
5173
6173
7173
8173
9173
10273
11273
12273
13273
4273
5273
6273
7273
8273
9273
10373
11373
12373
13373
4373
5373
6373
7373
8373
9373
10473
11473
12473
3473
4473
5473
6473
7473
8473
9473
10573
11573
12573
3573
4573
5573
6573
7573
8573
9573
10673
11673
12673
3673
4673
5673
6673
7673
8673
9673
10773
11773
12773
3773
4773
5773
6773
7773
8773
9773
10873
11873
12873
3873
4873
5873
6873
7873
8873
9873
10973
11973
12973
3973
4973
5973
6973
7973
8973
9973
10083
11083
12083
13083
4083
5083
6083
7083
8083
9083
10183
11183
12183
13183
4183
5183
6183
7183
8183
9183
10283
11283
12283
13283
4283
5283
6283
7283
8283
9283
10383
11383
12383
3383
4383
5383
6383
7383
8383
9383
10483
11483
12483
3483
4483
5483
6483
7483
8483
9483
10583
11583
12583
3583
4583
5583
6583
7583
8583
9583
10683
11683
12683
3683
4683
5683
6683
7683
8683
9683
10783
11783
12783
3783
4783
5783
6783
7783
8783
9783
10883
11883
12883
3883
4883
5883
6883
7883
8883
9883
10983
11983
12983
3983
4983
5983
6983
7983
8983
9983
10093
11093
12093
13093
4093
5093
6093
7093
8093
9093
10193
11193
12193
13193
4193
5193
6193
7193
8193
9193
10293
11293
12293
13293
4293
5293
6293
7293
8293
9293
10393
11393
12393
3393
4393
5393
6393
7393
8393
9393
10493
11493
12493
3493
4493
5493
6493
7493
8493
9493
10593
11593
12593
3593
4593
5593
6593
7593
8593
9593
10693
11693
12693
3693
4693
5693
6693
7693
8693
9693
10793
11793
12793
3793
4793
5793
6793
7793
8793
9793
10893
11893
12893
3893
4893
5893
6893
7893
8893
9893
10993
11993
12993
3993
4993
5993
6993
7993
8993
9993
10004
11004
12004
13004
4004
5004
6004
7004
8004
9004
10104
11104
12104
13104
4104
5104
6104
7104
8104
9104
10204
11204
12204
13204
4204
5204
6204
7204
8204
9204
10304
11304
12304
13304
4304
5304
6304
7304
8304
9304
10404
11404
12404
3404
4404
5404
6404
7404
8404
9404
10504
11504
12504
3504
4504
5504
6504
7504
8504
9504
10604
11604
12604
3604
4604
5604
6604
7604
8604
9604
10704
11704
12704
3704
4704
5704
6704
7704
8704
9704
10804
11804
12804
3804
4804
5804
6804
7804
8804
9804
10904
11904
12904
3904
4904
5904
6904
7904
8904
9904
10014
11014
12014
13014
4014
5014
6014
7014
8014
9014
10114
11114
12114
13114
4114
5114
6114
7114
8114
9114
10214
11214
12214
13214
4214
5214
6214
7214
8214
9214
10314
11314
12314
13314
4314
5314
6314
7314
8314
9314
10414
11414
12414
3414
4414
5414
6414
7414
8414
9414
10514
11514
12514
3514
4514
5514
6514
7514
8514
9514
10614
11614
12614
3614
4614
5614
6614
7614
8614
9614
10714
11714
12714
3714
4714
5714
6714
7714
8714
9714
10814
11814
12814
3814
4814
5814
6814
7814
8814
9814
10914
11914
12914
3914
4914
5914
6914
7914
8914
9914
10024
11024
12024
13024
4024
5024
6024
7024
8024
9024
10124
11124
12124
13124
4124
5124
6124
7124
8124
9124
10224
11224
12224
13224
4224
5224
6224
7224
8224
9224
10324
11324
12324
13324
4324
5324
6324
7324
8324
9324
10424
11424
12424
3424
4424
5424
6424
7424
8424
9424
10524
11524
12524
3524
4524
5524
6524
7524
8524
9524
10624
11624
12624
3624
4624
5624
6624
7624
8624
9624
10724
11724
12724
3724
4724
5724
6724
7724
8724
9724
10824
11824
12824
3824
4824
5824
6824
7824
8824
9824
10924
11924
12924
3924
4924
5924
6924
7924
8924
9924
10034
11034
12034
13034
4034
5034
6034
7034
8034
9034
10134
11134
12134
13134
4134
5134
6134
7134
8134
9134
10234
11234
12234
13234
4234
5234
6234
7234
8234
9234
10334
11334
12334
13334
4334
5334
6334
7334
8334
9334
10434
11434
12434
3434
4434
5434
6434
7434
8434
9434
10534
11534
12534
3534
4534
5534
6534
7534
8534
9534
10634
11634
12634
3634
4634
5634
6634
7634
8634
9634
10734
11734
12734
3734
4734
5734
6734
7734
8734
9734
10834
11834
12834
3834
4834
5834
6834
7834
8834
9834
10934
11934
12934
3934
4934
5934
6934
7934
8934
9934
10044
11044
12044
13044
4044
5044
6044
7044
8044
9044
10144
11144
12144
13144
4144
5144
6144
7144
8144
9144
10244
11244
12244
13244
4244
5244
6244
7244
8244
9244
10344
11344
12344
13344
4344
5344
6344
7344
8344
9344
10444
11444
12444
3444
4444
5444
6444
7444
8444
9444
10544
11544
12544
3544
4544
5544
6544
7544
8544
9544
10644
11644
12644
3644
4644
5644
6644
7644
8644
9644
10744
11744
12744
3744
4744
5744
6744
7744
8744
9744
10844
11844
12844
3844
4844
5844
6844
7844
8844
9844
10944
11944
12944
3944
4944
5944
6944
7944
8944
9944
10054
11054
12054
13054
4054
5054
6054
7054
8054
9054
10154
11154
12154
13154
4154
5154
6154
7154
8154
9154
10254
11254
12254
13254
4254
5254
6254
7254
8254
9254
10354
11354
12354
13354
4354
5354
6354
7354
8354
9354
10454
11454
12454
3454
4454
5454
6454
7454
8454
9454
10554
11554
12554
3554
4554
5554
6554
7554
8554
9554
10654
11654
12654
3654
4654
5654
6654
7654
8654
9654
10754
11754
12754
3754
4754
5754
6754
7754
8754
9754
10854
11854
12854
3854
4854
5854
6854
7854
8854
9854
10954
11954
12954
3954
4954
5954
6954
7954
8954
9954
10064
11064
12064
13064
4064
5064
6064
7064
8064
9064
10164
11164
12164
13164
4164
5164
6164
7164
8164
9164
10264
11264
12264
13264
4264
5264
6264
7264
8264
9264
10364
11364
12364
13364
4364
5364
6364
7364
8364
9364
10464
11464
12464
3464
4464
5464
6464
7464
8464
9464
10564
11564
12564
3564
4564
5564
6564
7564
8564
9564
10664
11664
12664
3664
4664
5664
6664
7664
8664
9664
10764
11764
12764
3764
4764
5764
6764
7764
8764
9764
10864
11864
12864
3864
4864
5864
6864
7864
8864
9864
10964
11964
12964
3964
4964
5964
6964
7964
8964
9964
10074
11074
12074
13074
4074
5074
6074
7074
8074
9074
10174
11174
12174
13174
4174
5174
6174
7174
8174
9174
10274
11274
12274
13274
4274
5274
6274
7274
8274
9274
10374
11374
12374
13374
4374
5374
6374
7374
8374
9374
10474
11474
12474
3474
4474
5474
6474
7474
8474
9474
10574
11574
12574
3574
4574
5574
6574
7574
8574
9574
10674
11674
12674
3674
4674
5674
6674
7674
8674
9674
10774
11774
12774
3774
4774
5774
6774
7774
8774
9774
10874
11874
12874
3874
4874
5874
6874
7874
8874
9874
10974
11974
12974
3974
4974
5974
6974
7974
8974
9974
10084
11084
12084
13084
4084
5084
6084
7084
8084
9084
10184
11184
12184
13184
4184
5184
6184
7184
8184
9184
10284
11284
12284
13284
4284
5284
6284
7284
8284
9284
10384
11384
12384
3384
4384
5384
6384
7384
8384
9384
10484
11484
12484
3484
4484
5484
6484
7484
8484
9484
10584
11584
12584
3584
4584
5584
6584
7584
8584
9584
10684
11684
12684
3684
4684
5684
6684
7684
8684
9684
10784
11784
12784
3784
4784
5784
6784
7784
8784
9784
10884
11884
12884
3884
4884
5884
6884
7884
8884
9884
10984
11984
12984
3984
4984
5984
6984
7984
8984
9984
10094
11094
12094
13094
4094
5094
6094
7094
8094
9094
10194
11194
12194
13194
4194
5194
6194
7194
8194
9194
10294
11294
12294
13294
4294
5294
6294
7294
8294
9294
10394
11394
12394
3394
4394
5394
6394
7394
8394
9394
10494
11494
12494
3494
4494
5494
6494
7494
8494
9494
10594
11594
12594
3594
4594
5594
6594
7594
8594
9594
10694
11694
12694
3694
4694
5694
6694
7694
8694
9694
10794
11794
12794
3794
4794
5794
6794
7794
8794
9794
10894
11894
12894
3894
4894
5894
6894
7894
8894
9894
10994
11994
12994
3994
4994
5994
6994
7994
8994
9994
10005
11005
12005
13005
4005
5005
6005
7005
8005
9005
10105
11105
12105
13105
4105
5105
6105
7105
8105
9105
10205
11205
12205
13205
4205
5205
6205
7205
8205
9205
10305
11305
12305
13305
4305
5305
6305
7305
8305
9305
10405
11405
12405
3405
4405
5405
6405
7405
8405
9405
10505
11505
12505
3505
4505
5505
6505
7505
8505
9505
10605
11605
12605
3605
4605
5605
6605
7605
8605
9605
10705
11705
12705
3705
4705
5705
6705
7705
8705
9705
10805
11805
12805
3805
4805
5805
6805
7805
8805
9805
10905
11905
12905
3905
4905
5905
6905
7905
8905
9905
10015
11015
12015
13015
4015
5015
6015
7015
8015
9015
10115
11115
12115
13115
4115
5115
6115
7115
8115
9115
10215
11215
12215
13215
4215
5215
6215
7215
8215
9215
10315
11315
12315
13315
4315
5315
6315
7315
8315
9315
10415
11415
12415
3415
4415
5415
6415
7415
8415
9415
10515
11515
12515
3515
4515
5515
6515
7515
8515
9515
10615
11615
12615
3615
4615
5615
6615
7615
8615
9615
10715
11715
12715
3715
4715
5715
6715
7715
8715
9715
10815
11815
12815
3815
4815
5815
6815
7815
8815
9815
10915
11915
12915
3915
4915
5915
6915
7915
8915
9915
10025
11025
12025
13025
4025
5025
6025
7025
8025
9025
10125
11125
12125
13125
4125
5125
6125
7125
8125
9125
10225
11225
12225
13225
4225
5225
6225
7225
8225
9225
10325
11325
12325
13325
4325
5325
6325
7325
8325
9325
10425
11425
12425
3425
4425
5425
6425
7425
8425
9425
10525
11525
12525
3525
4525
5525
6525
7525
8525
9525
10625
11625
12625
3625
4625
5625
6625
7625
8625
9625
10725
11725
12725
3725
4725
5725
6725
7725
8725
9725
10825
11825
12825
3825
4825
5825
6825
7825
8825
9825
10925
11925
12925
3925
4925
5925
6925
7925
8925
9925
10035
11035
12035
13035
4035
5035
6035
7035
8035
9035
10135
11135
12135
13135
4135
5135
6135
7135
8135
9135
10235
11235
12235
13235
4235
5235
6235
7235
8235
9235
10335
11335
12335
13335
4335
5335
6335
7335
8335
9335
10435
11435
12435
3435
4435
5435
6435
7435
8435
9435
10535
11535
12535
3535
4535
5535
6535
7535
8535
9535
10635
11635
12635
3635
4635
5635
6635
7635
8635
9635
10735
11735
12735
3735
4735
5735
6735
7735
8735
9735
10835
11835
12835
3835
4835
5835
6835
7835
8835
9835
10935
11935
12935
3935
4935
5935
6935
7935
8935
9935
10045
11045
12045
13045
4045
5045
6045
7045
8045
9045
10145
11145
12145
13145
4145
5145
6145
7145
8145
9145
10245
11245
12245
13245
4245
5245
6245
7245
8245
9245
10345
11345
12345
13345
4345
5345
6345
7345
8345
9345
10445
11445
12445
3445
4445
5445
6445
7445
8445
9445
10545
11545
12545
3545
4545
5545
6545
7545
8545
9545
10645
11645
12645
3645
4645
5645
6645
7645
8645
9645
10745
11745
12745
3745
4745
5745
6745
7745
8745
9745
10845
11845
12845
3845
4845
5845
6845
7845
8845
9845
10945
11945
12945
3945
4945
5945
6945
7945
8945
9945
10055
11055
12055
13055
4055
5055
6055
7055
8055
9055
10155
11155
12155
13155
4155
5155
6155
7155
8155
9155
10255
11255
12255
13255
4255
5255
6255
7255
8255
9255
10355
11355
12355
13355
4355
5355
6355
7355
8355
9355
10455
11455
12455
3455
4455
5455
6455
7455
8455
9455
10555
11555
12555
3555
4555
5555
6555
7555
8555
9555
10655
11655
12655
3655
4655
5655
6655
7655
8655
9655
10755
11755
12755
3755
4755
5755
6755
7755
8755
9755
10855
11855
12855
3855
4855
5855
6855
7855
8855
9855
10955
11955
12955
3955
4955
5955
6955
7955
8955
9955
10065
11065
12065
13065
4065
5065
6065
7065
8065
9065
10165
11165
12165
13165
4165
5165
6165
7165
8165
9165
10265
11265
12265
13265
4265
5265
6265
7265
8265
9265
10365
11365
12365
13365
4365
5365
6365
7365
8365
9365
10465
11465
12465
3465
4465
5465
6465
7465
8465
9465
10565
11565
12565
3565
4565
5565
6565
7565
8565
9565
10665
11665
12665
3665
4665
5665
6665
7665
8665
9665
10765
11765
12765
3765
4765
5765
6765
7765
8765
9765
10865
11865
12865
3865
4865
5865
6865
7865
8865
9865
10965
11965
12965
3965
4965
5965
6965
7965
8965
9965
10075
11075
12075
13075
4075
5075
6075
7075
8075
9075
10175
11175
12175
13175
4175
5175
6175
7175
8175
9175
10275
11275
12275
13275
4275
5275
6275
7275
8275
9275
10375
11375
12375
13375
4375
5375
6375
7375
8375
9375
10475
11475
12475
3475
4475
5475
6475
7475
8475
9475
10575
11575
12575
3575
4575
5575
6575
7575
8575
9575
10675
11675
12675
3675
4675
5675
6675
7675
8675
9675
10775
11775
12775
3775
4775
5775
6775
7775
8775
9775
10875
11875
12875
3875
4875
5875
6875
7875
8875
9875
10975
11975
12975
3975
4975
5975
6975
7975
8975
9975
10085
11085
12085
13085
4085
5085
6085
7085
8085
9085
10185
11185
12185
13185
4185
5185
6185
7185
8185
9185
10285
11285
12285
13285
4285
5285
6285
7285
8285
9285
10385
11385
12385
3385
4385
5385
6385
7385
8385
9385
10485
11485
12485
3485
4485
5485
6485
7485
8485
9485
10585
11585
12585
3585
4585
5585
6585
7585
8585
9585
10685
11685
12685
3685
4685
5685
6685
7685
8685
9685
10785
11785
12785
3785
4785
5785
6785
7785
8785
9785
10885
11885
12885
3885
4885
5885
6885
7885
8885
9885
10985
11985
12985
3985
4985
5985
6985
7985
8985
9985
10095
11095
12095
13095
4095
5095
6095
7095
8095
9095
10195
11195
12195
13195
4195
5195
6195
7195
8195
9195
10295
11295
12295
13295
4295
5295
6295
7295
8295
9295
10395
11395
12395
3395
4395
5395
6395
7395
8395
9395
10495
11495
12495
3495
4495
5495
6495
7495
8495
9495
10595
11595
12595
3595
4595
5595
6595
7595
8595
9595
10695
11695
12695
3695
4695
5695
6695
7695
8695
9695
10795
11795
12795
3795
4795
5795
6795
7795
8795
9795
10895
11895
12895
3895
4895
5895
6895
7895
8895
9895
10995
11995
12995
3995
4995
5995
6995
7995
8995
9995
10006
11006
12006
13006
4006
5006
6006
7006
8006
9006
10106
11106
12106
13106
4106
5106
6106
7106
8106
9106
10206
11206
12206
13206
4206
5206
6206
7206
8206
9206
10306
11306
12306
13306
4306
5306
6306
7306
8306
9306
10406
11406
12406
3406
4406
5406
6406
7406
8406
9406
10506
11506
12506
3506
4506
5506
6506
7506
8506
9506
10606
11606
12606
3606
4606
5606
6606
7606
8606
9606
10706
11706
12706
3706
4706
5706
6706
7706
8706
9706
10806
11806
12806
3806
4806
5806
6806
7806
8806
9806
10906
11906
12906
3906
4906
5906
6906
7906
8906
9906
10016
11016
12016
13016
4016
5016
6016
7016
8016
9016
10116
11116
12116
13116
4116
5116
6116
7116
8116
9116
10216
11216
12216
13216
4216
5216
6216
7216
8216
9216
10316
11316
12316
13316
4316
5316
6316
7316
8316
9316
10416
11416
12416
3416
4416
5416
6416
7416
8416
9416
10516
11516
12516
3516
4516
5516
6516
7516
8516
9516
10616
11616
12616
3616
4616
5616
6616
7616
8616
9616
10716
11716
12716
3716
4716
5716
6716
7716
8716
9716
10816
11816
12816
3816
4816
5816
6816
7816
8816
9816
10916
11916
12916
3916
4916
5916
6916
7916
8916
9916
10026
11026
12026
13026
4026
5026
6026
7026
8026
9026
10126
11126
12126
13126
4126
5126
6126
7126
8126
9126
10226
11226
12226
13226
4226
5226
6226
7226
8226
9226
10326
11326
12326
13326
4326
5326
6326
7326
8326
9326
10426
11426
12426
3426
4426
5426
6426
7426
8426
9426
10526
11526
12526
3526
4526
5526
6526
7526
8526
9526
10626
11626
12626
3626
4626
5626
6626
7626
8626
9626
10726
11726
12726
3726
4726
5726
6726
7726
8726
9726
10826
11826
12826
3826
4826
5826
6826
7826
8826
9826
10926
11926
12926
3926
4926
5926
6926
7926
8926
9926
10036
11036
12036
13036
4036
5036
6036
7036
8036
9036
10136
11136
12136
13136
4136
5136
6136
7136
8136
9136
10236
11236
12236
13236
4236
5236
6236
7236
8236
9236
10336
11336
12336
13336
4336
5336
6336
7336
8336
9336
10436
11436
12436
3436
4436
5436
6436
7436
8436
9436
10536
11536
12536
3536
4536
5536
6536
7536
8536
9536
10636
11636
12636
3636
4636
5636
6636
7636
8636
9636
10736
11736
12736
3736
4736
5736
6736
7736
8736
9736
10836
11836
12836
3836
4836
5836
6836
7836
8836
9836
10936
11936
12936
3936
4936
5936
6936
7936
8936
9936
10046
11046
12046
13046
4046
5046
6046
7046
8046
9046
10146
11146
12146
13146
4146
5146
6146
7146
8146
9146
10246
11246
12246
13246
4246
5246
6246
7246
8246
9246
10346
11346
12346
13346
4346
5346
6346
7346
8346
9346
10446
11446
12446
3446
4446
5446
6446
7446
8446
9446
10546
11546
12546
3546
4546
5546
6546
7546
8546
9546
10646
11646
12646
3646
4646
5646
6646
7646
8646
9646
10746
11746
12746
3746
4746
5746
6746
7746
8746
9746
10846
11846
12846
3846
4846
5846
6846
7846
8846
9846
10946
11946
12946
3946
4946
5946
6946
7946
8946
9946
10056
11056
12056
13056
4056
5056
6056
7056
8056
9056
10156
11156
12156
13156
4156
5156
6156
7156
8156
9156
10256
11256
12256
13256
4256
5256
6256
7256
8256
9256
10356
11356
12356
13356
4356
5356
6356
7356
8356
9356
10456
11456
12456
3456
4456
5456
6456
7456
8456
9456
10556
11556
12556
3556
4556
5556
6556
7556
8556
9556
10656
11656
12656
3656
4656
5656
6656
7656
8656
9656
10756
11756
12756
3756
4756
5756
6756
7756
8756
9756
10856
11856
12856
3856
4856
5856
6856
7856
8856
9856
10956
11956
12956
3956
4956
5956
6956
7956
8956
9956
10066
11066
12066
13066
4066
5066
6066
7066
8066
9066
10166
11166
12166
13166
4166
5166
6166
7166
8166
9166
10266
11266
12266
13266
4266
5266
6266
7266
8266
9266
10366
11366
12366
13366
4366
5366
6366
7366
8366
9366
10466
11466
12466
3466
4466
5466
6466
7466
8466
9466
10566
11566
12566
3566
4566
5566
6566
7566
8566
9566
10666
11666
12666
3666
4666
5666
6666
7666
8666
9666
10766
11766
12766
3766
4766
5766
6766
7766
8766
9766
10866
11866
12866
3866
4866
5866
6866
7866
8866
9866
10966
11966
12966
3966
4966
5966
6966
7966
8966
9966
10076
11076
12076
13076
4076
5076
6076
7076
8076
9076
10176
11176
12176
13176
4176
5176
6176
7176
8176
9176
10276
11276
12276
13276
4276
5276
6276
7276
8276
9276
10376
11376
12376
13376
4376
5376
6376
7376
8376
9376
10476
11476
12476
3476
4476
5476
6476
7476
8476
9476
10576
11576
12576
3576
4576
5576
6576
7576
8576
9576
10676
11676
12676
3676
4676
5676
6676
7676
8676
9676
10776
11776
12776
3776
4776
5776
6776
7776
8776
9776
10876
11876
12876
3876
4876
5876
6876
7876
8876
9876
10976
11976
12976
3976
4976
5976
6976
7976
8976
9976
10086
11086
12086
13086
4086
5086
6086
7086
8086
9086
10186
11186
12186
13186
4186
5186
6186
7186
8186
9186
10286
11286
12286
13286
4286
5286
6286
7286
8286
9286
10386
11386
12386
3386
4386
5386
6386
7386
8386
9386
10486
11486
12486
3486
4486
5486
6486
7486
8486
9486
10586
11586
12586
3586
4586
5586
6586
7586
8586
9586
10686
11686
12686
3686
4686
5686
6686
7686
8686
9686
10786
11786
12786
3786
4786
5786
6786
7786
8786
9786
10886
11886
12886
3886
4886
5886
6886
7886
8886
9886
10986
11986
12986
3986
4986
5986
6986
7986
8986
9986
10096
11096
12096
13096
4096
5096
6096
7096
8096
9096
10196
11196
12196
13196
4196
5196
6196
7196
8196
9196
10296
11296
12296
13296
4296
5296
6296
7296
8296
9296
10396
11396
12396
3396
4396
5396
6396
7396
8396
9396
10496
11496
12496
3496
4496
5496
6496
7496
8496
9496
10596
11596
12596
3596
4596
5596
6596
7596
8596
9596
10696
11696
12696
3696
4696
5696
6696
7696
8696
9696
10796
11796
12796
3796
4796
5796
6796
7796
8796
9796
10896
11896
12896
3896
4896
5896
6896
7896
8896
9896
10996
11996
12996
3996
4996
5996
6996
7996
8996
9996
10007
11007
12007
13007
4007
5007
6007
7007
8007
9007
10107
11107
12107
13107
4107
5107
6107
7107
8107
9107
10207
11207
12207
13207
4207
5207
6207
7207
8207
9207
10307
11307
12307
13307
4307
5307
6307
7307
8307
9307
10407
11407
12407
3407
4407
5407
6407
7407
8407
9407
10507
11507
12507
3507
4507
5507
6507
7507
8507
9507
10607
11607
12607
3607
4607
5607
6607
7607
8607
9607
10707
11707
12707
3707
4707
5707
6707
7707
8707
9707
10807
11807
12807
3807
4807
5807
6807
7807
8807
9807
10907
11907
12907
3907
4907
5907
6907
7907
8907
9907
10017
11017
12017
13017
4017
5017
6017
7017
8017
9017
10117
11117
12117
13117
4117
5117
6117
7117
8117
9117
10217
11217
12217
13217
4217
5217
6217
7217
8217
9217
10317
11317
12317
13317
4317
5317
6317
7317
8317
9317
10417
11417
12417
3417
4417
5417
6417
7417
8417
9417
10517
11517
12517
3517
4517
5517
6517
7517
8517
9517
10617
11617
12617
3617
4617
5617
6617
7617
8617
9617
10717
11717
12717
3717
4717
5717
6717
7717
8717
9717
10817
11817
12817
3817
4817
5817
6817
7817
8817
9817
10917
11917
12917
3917
4917
5917
6917
7917
8917
9917
10027
11027
12027
13027
4027
5027
6027
7027
8027
9027
10127
11127
12127
13127
4127
5127
6127
7127
8127
9127
10227
11227
12227
13227
4227
5227
6227
7227
8227
9227
10327
11327
12327
13327
4327
5327
6327
7327
8327
9327
10427
11427
12427
3427
4427
5427
6427
7427
8427
9427
10527
11527
12527
3527
4527
5527
6527
7527
8527
9527
10627
11627
12627
3627
4627
5627
6627
7627
8627
9627
10727
11727
12727
3727
4727
5727
6727
7727
8727
9727
10827
11827
12827
3827
4827
5827
6827
7827
8827
9827
10927
11927
12927
3927
4927
5927
6927
7927
8927
9927
10037
11037
12037
13037
4037
5037
6037
7037
8037
9037
10137
11137
12137
13137
4137
5137
6137
7137
8137
9137
10237
11237
12237
13237
4237
5237
6237
7237
8237
9237
10337
11337
12337
13337
4337
5337
6337
7337
8337
9337
10437
11437
12437
3437
4437
5437
6437
7437
8437
9437
10537
11537
12537
3537
4537
5537
6537
7537
8537
9537
10637
11637
12637
3637
4637
5637
6637
7637
8637
9637
10737
11737
12737
3737
4737
5737
6737
7737
8737
9737
10837
11837
12837
3837
4837
5837
6837
7837
8837
9837
10937
11937
12937
3937
4937
5937
6937
7937
8937
9937
10047
11047
12047
13047
4047
5047
6047
7047
8047
9047
10147
11147
12147
13147
4147
5147
6147
7147
8147
9147
10247
11247
12247
13247
4247
5247
6247
7247
8247
9247
10347
11347
12347
13347
4347
5347
6347
7347
8347
9347
10447
11447
12447
3447
4447
5447
6447
7447
8447
9447
10547
11547
12547
3547
4547
5547
6547
7547
8547
9547
10647
11647
12647
3647
4647
5647
6647
7647
8647
9647
10747
11747
12747
3747
4747
5747
6747
7747
8747
9747
10847
11847
12847
3847
4847
5847
6847
7847
8847
9847
10947
11947
12947
3947
4947
5947
6947
7947
8947
9947
10057
11057
12057
13057
4057
5057
6057
7057
8057
9057
10157
11157
12157
13157
4157
5157
6157
7157
8157
9157
10257
11257
12257
13257
4257
5257
6257
7257
8257
9257
10357
11357
12357
13357
4357
5357
6357
7357
8357
9357
10457
11457
12457
3457
4457
5457
6457
7457
8457
9457
10557
11557
12557
3557
4557
5557
6557
7557
8557
9557
10657
11657
12657
3657
4657
5657
6657
7657
8657
9657
10757
11757
12757
3757
4757
5757
6757
7757
8757
9757
10857
11857
12857
3857
4857
5857
6857
7857
8857
9857
10957
11957
12957
3957
4957
5957
6957
7957
8957
9957
10067
11067
12067
13067
4067
5067
6067
7067
8067
9067
10167
11167
12167
13167
4167
5167
6167
7167
8167
9167
10267
11267
12267
13267
4267
5267
6267
7267
8267
9267
10367
11367
12367
13367
4367
5367
6367
7367
8367
9367
10467
11467
12467
3467
4467
5467
6467
7467
8467
9467
10567
11567
12567
3567
4567
5567
6567
7567
8567
9567
10667
11667
12667
3667
4667
5667
6667
7667
8667
9667
10767
11767
12767
3767
4767
5767
6767
7767
8767
9767
10867
11867
12867
3867
4867
5867
6867
7867
8867
9867
10967
11967
12967
3967
4967
5967
6967
7967
8967
9967
10077
11077
12077
13077
4077
5077
6077
7077
8077
9077
10177
11177
12177
13177
4177
5177
6177
7177
8177
9177
10277
11277
12277
13277
4277
5277
6277
7277
8277
9277
10377
11377
12377
13377
4377
5377
6377
7377
8377
9377
10477
11477
12477
3477
4477
5477
6477
7477
8477
9477
10577
11577
12577
3577
4577
5577
6577
7577
8577
9577
10677
11677
12677
3677
4677
5677
6677
7677
8677
9677
10777
11777
12777
3777
4777
5777
6777
7777
8777
9777
10877
11877
12877
3877
4877
5877
6877
7877
8877
9877
10977
11977
12977
3977
4977
5977
6977
7977
8977
9977
10087
11087
12087
13087
4087
5087
6087
7087
8087
9087
10187
11187
12187
13187
4187
5187
6187
7187
8187
9187
10287
11287
12287
13287
4287
5287
6287
7287
8287
9287
10387
11387
12387
3387
4387
5387
6387
7387
8387
9387
10487
11487
12487
3487
4487
5487
6487
7487
8487
9487
10587
11587
12587
3587
4587
5587
6587
7587
8587
9587
10687
11687
12687
3687
4687
5687
6687
7687
8687
9687
10787
11787
12787
3787
4787
5787
6787
7787
8787
9787
10887
11887
12887
3887
4887
5887
6887
7887
8887
9887
10987
11987
12987
3987
4987
5987
6987
7987
8987
9987
10097
11097
12097
13097
4097
5097
6097
7097
8097
9097
10197
11197
12197
13197
4197
5197
6197
7197
8197
9197
10297
11297
12297
13297
4297
5297
6297
7297
8297
9297
10397
11397
12397
3397
4397
5397
6397
7397
8397
9397
10497
11497
12497
3497
4497
5497
6497
7497
8497
9497
10597
11597
12597
3597
4597
5597
6597
7597
8597
9597
10697
11697
12697
3697
4697
5697
6697
7697
8697
9697
10797
11797
12797
3797
4797
5797
6797
7797
8797
9797
10897
11897
12897
3897
4897
5897
6897
7897
8897
9897
10997
11997
12997
3997
4997
5997
6997
7997
8997
9997
10008
11008
12008
13008
4008
5008
6008
7008
8008
9008
10108
11108
12108
13108
4108
5108
6108
7108
8108
9108
10208
11208
12208
13208
4208
5208
6208
7208
8208
9208
10308
11308
12308
13308
4308
5308
6308
7308
8308
9308
10408
11408
12408
3408
4408
5408
6408
7408
8408
9408
10508
11508
12508
3508
4508
5508
6508
7508
8508
9508
10608
11608
12608
3608
4608
5608
6608
7608
8608
9608
10708
11708
12708
3708
4708
5708
6708
7708
8708
9708
10808
11808
12808
3808
4808
5808
6808
7808
8808
9808
10908
11908
12908
3908
4908
5908
6908
7908
8908
9908
10018
11018
12018
13018
4018
5018
6018
7018
8018
9018
10118
11118
12118
13118
4118
5118
6118
7118
8118
9118
10218
11218
12218
13218
4218
5218
6218
7218
8218
9218
10318
11318
12318
13318
4318
5318
6318
7318
8318
9318
10418
11418
12418
3418
4418
5418
6418
7418
8418
9418
10518
11518
12518
3518
4518
5518
6518
7518
8518
9518
10618
11618
12618
3618
4618
5618
6618
7618
8618
9618
10718
11718
12718
3718
4718
5718
6718
7718
8718
9718
10818
11818
12818
3818
4818
5818
6818
7818
8818
9818
10918
11918
12918
3918
4918
5918
6918
7918
8918
9918
10028
11028
12028
13028
4028
5028
6028
7028
8028
9028
10128
11128
12128
13128
4128
5128
6128
7128
8128
9128
10228
11228
12228
13228
4228
5228
6228
7228
8228
9228
10328
11328
12328
13328
4328
5328
6328
7328
8328
9328
10428
11428
12428
3428
4428
5428
6428
7428
8428
9428
10528
11528
12528
3528
4528
5528
6528
7528
8528
9528
10628
11628
12628
3628
4628
5628
6628
7628
8628
9628
10728
11728
12728
3728
4728
5728
6728
7728
8728
9728
10828
11828
12828
3828
4828
5828
6828
7828
8828
9828
10928
11928
12928
3928
4928
5928
6928
7928
8928
9928
10038
11038
12038
13038
4038
5038
6038
7038
8038
9038
10138
11138
12138
13138
4138
5138
6138
7138
8138
9138
10238
11238
12238
13238
4238
5238
6238
7238
8238
9238
10338
11338
12338
13338
4338
5338
6338
7338
8338
9338
10438
11438
12438
3438
4438
5438
6438
7438
8438
9438
10538
11538
12538
3538
4538
5538
6538
7538
8538
9538
10638
11638
12638
3638
4638
5638
6638
7638
8638
9638
10738
11738
12738
3738
4738
5738
6738
7738
8738
9738
10838
11838
12838
3838
4838
5838
6838
7838
8838
9838
10938
11938
12938
3938
4938
5938
6938
7938
8938
9938
10048
11048
12048
13048
4048
5048
6048
7048
8048
9048
10148
11148
12148
13148
4148
5148
6148
7148
8148
9148
10248
11248
12248
13248
4248
5248
6248
7248
8248
9248
10348
11348
12348
13348
4348
5348
6348
7348
8348
9348
10448
11448
12448
3448
4448
5448
6448
7448
8448
9448
10548
11548
12548
3548
4548
5548
6548
7548
8548
9548
10648
11648
12648
3648
4648
5648
6648
7648
8648
9648
10748
11748
12748
3748
4748
5748
6748
7748
8748
9748
10848
11848
12848
3848
4848
5848
6848
7848
8848
9848
10948
11948
12948
3948
4948
5948
6948
7948
8948
9948
10058
11058
12058
13058
4058
5058
6058
7058
8058
9058
10158
11158
12158
13158
4158
5158
6158
7158
8158
9158
10258
11258
12258
13258
4258
5258
6258
7258
8258
9258
10358
11358
12358
13358
4358
5358
6358
7358
8358
9358
10458
11458
12458
3458
4458
5458
6458
7458
8458
9458
10558
11558
12558
3558
4558
5558
6558
7558
8558
9558
10658
11658
12658
3658
4658
5658
6658
7658
8658
9658
10758
11758
12758
3758
4758
5758
6758
7758
8758
9758
10858
11858
12858
3858
4858
5858
6858
7858
8858
9858
10958
11958
12958
3958
4958
5958
6958
7958
8958
9958
10068
11068
12068
13068
4068
5068
6068
7068
8068
9068
10168
11168
12168
13168
4168
5168
6168
7168
8168
9168
10268
11268
12268
13268
4268
5268
6268
7268
8268
9268
10368
11368
12368
13368
4368
5368
6368
7368
8368
9368
10468
11468
12468
3468
4468
5468
6468
7468
8468
9468
10568
11568
12568
3568
4568
5568
6568
7568
8568
9568
10668
11668
12668
3668
4668
5668
6668
7668
8668
9668
10768
11768
12768
3768
4768
5768
6768
7768
8768
9768
10868
11868
12868
3868
4868
5868
6868
7868
8868
9868
10968
11968
12968
3968
4968
5968
6968
7968
8968
9968
10078
11078
12078
13078
4078
5078
6078
7078
8078
9078
10178
11178
12178
13178
4178
5178
6178
7178
8178
9178
10278
11278
12278
13278
4278
5278
6278
7278
8278
9278
10378
11378
12378
13378
4378
5378
6378
7378
8378
9378
10478
11478
12478
3478
4478
5478
6478
7478
8478
9478
10578
11578
12578
3578
4578
5578
6578
7578
8578
9578
10678
11678
12678
3678
4678
5678
6678
7678
8678
9678
10778
11778
12778
3778
4778
5778
6778
7778
8778
9778
10878
11878
12878
3878
4878
5878
6878
7878
8878
9878
10978
11978
12978
3978
4978
5978
6978
7978
8978
9978
10088
11088
12088
13088
4088
5088
6088
7088
8088
9088
10188
11188
12188
13188
4188
5188
6188
7188
8188
9188
10288
11288
12288
13288
4288
5288
6288
7288
8288
9288
10388
11388
12388
3388
4388
5388
6388
7388
8388
9388
10488
11488
12488
3488
4488
5488
6488
7488
8488
9488
10588
11588
12588
3588
4588
5588
6588
7588
8588
9588
10688
11688
12688
3688
4688
5688
6688
7688
8688
9688
10788
11788
12788
3788
4788
5788
6788
7788
8788
9788
10888
11888
12888
3888
4888
5888
6888
7888
8888
9888
10988
11988
12988
3988
4988
5988
6988
7988
8988
9988
10098
11098
12098
13098
4098
5098
6098
7098
8098
9098
10198
11198
12198
13198
4198
5198
6198
7198
8198
9198
10298
11298
12298
13298
4298
5298
6298
7298
8298
9298
10398
11398
12398
3398
4398
5398
6398
7398
8398
9398
10498
11498
12498
3498
4498
5498
6498
7498
8498
9498
10598
11598
12598
3598
4598
5598
6598
7598
8598
9598
10698
11698
12698
3698
4698
5698
6698
7698
8698
9698
10798
11798
12798
3798
4798
5798
6798
7798
8798
9798
10898
11898
12898
3898
4898
5898
6898
7898
8898
9898
10998
11998
12998
3998
4998
5998
6998
7998
8998
9998
10009
11009
12009
13009
4009
5009
6009
7009
8009
9009
10109
11109
12109
13109
4109
5109
6109
7109
8109
9109
10209
11209
12209
13209
4209
5209
6209
7209
8209
9209
10309
11309
12309
13309
4309
5309
6309
7309
8309
9309
10409
11409
12409
3409
4409
5409
6409
7409
8409
9409
10509
11509
12509
3509
4509
5509
6509
7509
8509
9509
10609
11609
12609
3609
4609
5609
6609
7609
8609
9609
10709
11709
12709
3709
4709
5709
6709
7709
8709
9709
10809
11809
12809
3809
4809
5809
6809
7809
8809
9809
10909
11909
12909
3909
4909
5909
6909
7909
8909
9909
10019
11019
12019
13019
4019
5019
6019
7019
8019
9019
10119
11119
12119
13119
4119
5119
6119
7119
8119
9119
10219
11219
12219
13219
4219
5219
6219
7219
8219
9219
10319
11319
12319
13319
4319
5319
6319
7319
8319
9319
10419
11419
12419
3419
4419
5419
6419
7419
8419
9419
10519
11519
12519
3519
4519
5519
6519
7519
8519
9519
10619
11619
12619
3619
4619
5619
6619
7619
8619
9619
10719
11719
12719
3719
4719
5719
6719
7719
8719
9719
10819
11819
12819
3819
4819
5819
6819
7819
8819
9819
10919
11919
12919
3919
4919
5919
6919
7919
8919
9919
10029
11029
12029
13029
4029
5029
6029
7029
8029
9029
10129
11129
12129
13129
4129
5129
6129
7129
8129
9129
10229
11229
12229
13229
4229
5229
6229
7229
8229
9229
10329
11329
12329
13329
4329
5329
6329
7329
8329
9329
10429
11429
12429
3429
4429
5429
6429
7429
8429
9429
10529
11529
12529
3529
4529
5529
6529
7529
8529
9529
10629
11629
12629
3629
4629
5629
6629
7629
8629
9629
10729
11729
12729
3729
4729
5729
6729
7729
8729
9729
10829
11829
12829
3829
4829
5829
6829
7829
8829
9829
10929
11929
12929
3929
4929
5929
6929
7929
8929
9929
10039
11039
12039
13039
4039
5039
6039
7039
8039
9039
10139
11139
12139
13139
4139
5139
6139
7139
8139
9139
10239
11239
12239
13239
4239
5239
6239
7239
8239
9239
10339
11339
12339
13339
4339
5339
6339
7339
8339
9339
10439
11439
12439
3439
4439
5439
6439
7439
8439
9439
10539
11539
12539
3539
4539
5539
6539
7539
8539
9539
10639
11639
12639
3639
4639
5639
6639
7639
8639
9639
10739
11739
12739
3739
4739
5739
6739
7739
8739
9739
10839
11839
12839
3839
4839
5839
6839
7839
8839
9839
10939
11939
12939
3939
4939
5939
6939
7939
8939
9939
10049
11049
12049
13049
4049
5049
6049
7049
8049
9049
10149
11149
12149
13149
4149
5149
6149
7149
8149
9149
10249
11249
12249
13249
4249
5249
6249
7249
8249
9249
10349
11349
12349
13349
4349
5349
6349
7349
8349
9349
10449
11449
12449
3449
4449
5449
6449
7449
8449
9449
10549
11549
12549
3549
4549
5549
6549
7549
8549
9549
10649
11649
12649
3649
4649
5649
6649
7649
8649
9649
10749
11749
12749
3749
4749
5749
6749
7749
8749
9749
10849
11849
12849
3849
4849
5849
6849
7849
8849
9849
10949
11949
12949
3949
4949
5949
6949
7949
8949
9949
10059
11059
12059
13059
4059
5059
6059
7059
8059
9059
10159
11159
12159
13159
4159
5159
6159
7159
8159
9159
10259
11259
12259
13259
4259
5259
6259
7259
8259
9259
10359
11359
12359
13359
4359
5359
6359
7359
8359
9359
10459
11459
12459
3459
4459
5459
6459
7459
8459
9459
10559
11559
12559
3559
4559
5559
6559
7559
8559
9559
10659
11659
12659
3659
4659
5659
6659
7659
8659
9659
10759
11759
12759
3759
4759
5759
6759
7759
8759
9759
10859
11859
12859
3859
4859
5859
6859
7859
8859
9859
10959
11959
12959
3959
4959
5959
6959
7959
8959
9959
10069
11069
12069
13069
4069
5069
6069
7069
8069
9069
10169
11169
12169
13169
4169
5169
6169
7169
8169
9169
10269
11269
12269
13269
4269
5269
6269
7269
8269
9269
10369
11369
12369
13369
4369
5369
6369
7369
8369
9369
10469
11469
12469
3469
4469
5469
6469
7469
8469
9469
10569
11569
12569
3569
4569
5569
6569
7569
8569
9569
10669
11669
12669
3669
4669
5669
6669
7669
8669
9669
10769
11769
12769
3769
4769
5769
6769
7769
8769
9769
10869
11869
12869
3869
4869
5869
6869
7869
8869
9869
10969
11969
12969
3969
4969
5969
6969
7969
8969
9969
10079
11079
12079
13079
4079
5079
6079
7079
8079
9079
10179
11179
12179
13179
4179
5179
6179
7179
8179
9179
10279
11279
12279
13279
4279
5279
6279
7279
8279
9279
10379
11379
12379
13379
4379
5379
6379
7379
8379
9379
10479
11479
12479
3479
4479
5479
6479
7479
8479
9479
10579
11579
12579
3579
4579
5579
6579
7579
8579
9579
10679
11679
12679
3679
4679
5679
6679
7679
8679
9679
10779
11779
12779
3779
4779
5779
6779
7779
8779
9779
10879
11879
12879
3879
4879
5879
6879
7879
8879
9879
10979
11979
12979
3979
4979
5979
6979
7979
8979
9979
10089
11089
12089
13089
4089
5089
6089
7089
8089
9089
10189
11189
12189
13189
4189
5189
6189
7189
8189
9189
10289
11289
12289
13289
4289
5289
6289
7289
8289
9289
10389
11389
12389
3389
4389
5389
6389
7389
8389
9389
10489
11489
12489
3489
4489
5489
6489
7489
8489
9489
10589
11589
12589
3589
4589
5589
6589
7589
8589
9589
10689
11689
12689
3689
4689
5689
6689
7689
8689
9689
10789
11789
12789
3789
4789
5789
6789
7789
8789
9789
10889
11889
12889
3889
4889
5889
6889
7889
8889
9889
10989
11989
12989
3989
4989
5989
6989
7989
8989
9989
10099
11099
12099
13099
4099
5099
6099
7099
8099
9099
10199
11199
12199
13199
4199
5199
6199
7199
8199
9199
10299
11299
12299
13299
4299
5299
6299
7299
8299
9299
10399
11399
12399
3399
4399
5399
6399
7399
8399
9399
10499
11499
12499
3499
4499
5499
6499
7499
8499
9499
10599
11599
12599
3599
4599
5599
6599
7599
8599
9599
10699
11699
12699
3699
4699
5699
6699
7699
8699
9699
10799
11799
12799
3799
4799
5799
6799
7799
8799
9799
10899
11899
12899
3899
4899
5899
6899
7899
8899
9899
10999
11999
12999
3999
4999
5999
6999
7999
8999
9999
agx.ss_bind
__cxa_pure_virtual
.disable
Loop Vectorization
SLP Vectorizer
nstrument_target__llvm_profile_iAlignment from assumptions
Loop Distribution
Loop Load Elimination
gc.safepoint_poll
statepoint-example
read-spill-bytesper-thread-spillant_heap_indicesconstant_heap_inriver_parametersria.driver_paramay_extended_dataria.ray_extendedria.token_bufferria.ray_core_data
Request.ShaderType
driver_parameter
XTRA_LLVM_ATTRIBAGX_EXTRA_LLVM_ARequest.ShaderID
Loop Versioning
Cost Model Analysis
Delinearization
m_personality_v0__gxx_wasm_persocessCLRExceptionProcessCLRExceptt_eh_personalityrust_eh_personal__CxxFrameHandler3
_except_handler3_except_handler4personality_seh0__gxx_personalit__gcc_personality_v0
dler
__C_specific_han__gnat_eh_person_personality_sj0c_personality_v0__objc_personali
memset_pattern16agx.loader.state
agc.sampler_heap
Loop Access Analysis
llvm.loop.unroll.
liveOnEntry
objc_storeStrongobjc_destroyWeakloadWeakRetainedobjc_loadWeakRetnretainedPointerobjc_unretainedPetainAutoreleaseobjc_retainAutorunretainedObjectobjc_unretainedOc_retainedObjectobjc_retainedObjtoreleasePoolPopobjc_autoreleasetain_autoreleaseobjc_retain_autoleaseReturnValueobjc_retainBlockPoolPush
Optimization Remark Emitter
watchossimulator
gnu_unique_objecndirect_functiongnu_indirect_fun
__objc_classrefs
.custom_section.
llvm.vectorizer.
ckprotectorcheckstackprotectorchnt.group.barrierinvariant.group.4.thread.pointeraarch64.thread.pdule
llvm.embedded.moe.ss
avx512.broadcastm
avx512.mask.sqrt.p
.mask.pbroadcastavx512.mask.pbroavx512.kortestc.w
avx512.mask.pcmp2.mask.fpclass.pavx512.mask.fpclavx512.mask.cmp.p
avx512.mask.ucmpavx512.cvtb2maskavx512.cvtw2maskavx512.cvtd2maskavx512.cvtq2maskssse3.pabs.b.128ssse3.pabs.w.128ssse3.pabs.d.128avx512.mask.pabsavx512.mask.pmaxu
avx512.mask.pmin2.mask.pmulu.dq.avx512.mask.pmul.dq.
avx.cvtdq2.ps.256
2.mask.cvtdq2pd.avx512.mask.cvtd.mask.cvtudq2pd.avx512.mask.cvtusk.cvtudq2ps.256sk.cvtuqq2pd.256q2ps.128
q2ps.256
q2pd.256
avx512.mask.cvtqs2pd.256
avx512.mask.cvtpavx512.mask.loadu.
nd.load.
avx512.mask.expa.compress.store.avx512.mask.compsse42.crc32.64.8avx.vbroadcast.s512.vbroadcast.savx512.vbroadcasavx512.mask.pmovsx
avx.vbroadcastf128
2.vbroadcasti128avx2.vbroadcastiavx512.mask.shuf.i
.mask.broadcastfavx512.mask.broa.mask.broadcastiavx512.pbroadcasmask.broadcast.sgnr.
avx512.mask.pali512.mask.valign.avx512.mask.valiavx.vinsertf128.avx2.vinserti128avx512.mask.insert
avx.vextractf128avx2.vextracti128
ract
avx512.mask.vext.df.
avx512.mask.perm.di.
2.mask.vpermil.pavx512.mask.vperf.d.
2.mask.pshufl.w.2.mask.pshufh.w.512.mask.movddupavx512.mask.movdhdup
avx512.mask.movsldup
2.mask.movshdup.512.mask.punpcklavx512.mask.punp512.mask.unpckl.avx512.mask.unpc512.mask.punpckh512.mask.unpckh.avx512.mask.pandn.
avx512.mask.por.avx512.mask.pxoravx512.mask.and.avx512.mask.andnavx512.mask.xor.avx512.mask.paddavx512.mask.psubl.
avx512.mask.add.avx512.mask.div.avx512.mask.mul.avx512.mask.sub.avx512.mask.max.avx512.mask.min.avx512.mask.lzcnt.
avx512.mask.psllavx512.mask.psrlavx512.mask.psraavx512.mask.move.s
avx512.mask.pavgdd.s
avx512.mask.vfma2.maskz.vfmadd.savx512.maskz.vfm2.mask3.vfmadd.savx512.mask3.vfm2.mask3.vfmsub.s.mask3.vfnmsub.savx512.mask3.vfndd.p
2.mask.vfnmadd.pavx512.mask.vfnm2.mask.vfnmsub.p2.mask3.vfmadd.p2.mask3.vfmsub.p.mask3.vfnmsub.p2.maskz.vfmadd.pmask.vfmaddsub.paddsub.p
subadd.p
2.mask.pternlog.avx512.mask.pter.maskz.pternlog.avx512.maskz.ptedd52
avx512.mask.vpma2.maskz.vpmadd52avx512.maskz.vpmmask.vpermi2var.mask.vpermt2var.rmt2var.
avx512.maskz.vpe2.mask.vpdpbusd..maskz.vpdpbusd..mask.vpdpbusds.maskz.vpdpbusds.2.mask.vpdpwssd..maskz.vpdpwssd..mask.vpdpwssds.maskz.vpdpwssds.
age Info VersionClass PropertiesObjective-C Clasage Info Section, __objc_catlist__DATA, __objc_cectorizer.unroll512.mask.vfmadd.add.
sub.
2.mask3.vfnmsub..mask.vfmaddsub.maskz.vfmaddsub.mask3.vfmaddsub.mask3.vfmsubadd.512.mask.pcmpeq.512.mask.pcmpgt.avx512.kortestz.f.b.
avx512.mask.pshud2dq.256
d2ps.256
sk.cvtudq2ps.128sk.cvttps2dq.128avx512.mask.cvttsk.cvttps2dq.256var.
mask.pmul.hr.sw.h.w.
2.mask.pmulhu.w.2.mask.pmaddw.d.avx512.mask.pmadmask.pmaddubs.w.2.mask.packsswb.avx512.mask.pack2.mask.packssdw.2.mask.packuswb.2.mask.packusdw.b
mask.vpermilvar..d
2.mask.dbpsadbw.avx512.mask.dbps512.mask.vpshld.avx512.mask.vpsh512.mask.vpshrd.avx512.mask.prorv.
avx512.mask.prol512.mask.storeu.512.mask.store.pe.b.
e.w.
e.d.
e.q.
loop_header_weight
sanitize_hwaddress
sanitize_addressi
eritance
DIFlagVirtualInhtipleInheritanceDIFlagMultipleInePassByReferenceDIFlagTypePassByirectVirtualBaseDIFlagIndirectVigram
DIFlagMainSubproDIFlagStaticMember
DIFlagLittleEndian
gLValueReferenceDIFlagLValueRefegRValueReferenceDIFlagRValueRefegTypePassByValuelagObjectPointerDIFlagObjectPoinbjcClassCompleteDIFlagObjcClassCingleInheritanceDIFlagSingleInhentroducedVirtualDIFlagIntroducedllCallsDescribedDIFlagAllCallsDeBlockByrefStructDIFlagBlockByrefDIFlagAppleBlockDIFlagArtificialDIFlagPrototyped
-?:\,[]{}#&*!|>'"%@`
01234567
0123456789abcdefABCDEF
0123456789
////////.
PE33
PE33
?iii?iii????????
6333733333334333m
    
!!!!!!!!
!!!!!!!!
!!!!!!!!
!!!!!!!!!!!!!!!!!!
!!!!!!
!!!!!!!!
!!!!!!!!!!!!!!!!
!!!!!!!!!!
!!!!!!!!!!
!!!!!!!!!!!!!!!!!!
!!!!
!!!!!!
!!!!!!!!!!!!!!
!!!!!!!!
!!!!!!
!!!!!!!!
!!!!!!!!!!
!!!!
!!!!!!!!
!!!!
!!!!!!!!
%%%%
####
########################
#######
##################################&
ccccccccc
round.towardzerofpexcept.maytrap
tion_entry_countsynthetic_functiount
function_entry_cllvm.global_ctors
llvm.global_dtorllvm.compiler.used
l_parameter_packDW_TAG_GNU_formaDW_TAG_with_stmtDW_TAG_base_typeDW_TAG_file_typeDW_TAG_try_blockDW_TAG_namespaceDW_TAG_conditionDW_TAG_type_unitDW_TAG_call_siteDW_TAG_MIPS_looptemplate
DW_TAG_function_l_site_parameterlined_subroutineDW_TAG_inlined_sr_to_member_typeDW_TAG_ptr_to_mecess_declarationDW_TAG_access_dePLE_ptrauth_typeDW_TAG_APPLE_ptrRLAND_Delphi_setDW_TAG_BORLAND_D_value_parameterDW_TAG_template_e_reference_typeDW_TAG_rvalue_reND_Delphi_stringified_parametersDW_TAG_unspecifiD_Delphi_variante_type_parameterDW_TAG_GNU_call__subroutine_typeDW_TAG_subroutin_dwarf_procedureDW_TAG_dwarf_pro_imported_moduleDW_TAG_imported_G_reference_typeDW_TAG_referenceG_structure_typeDW_TAG_structureG_interface_typeDW_TAG_interfaceG_template_aliasG_immutable_typeDW_TAG_immutableG_class_templateDW_TAG_class_temG_APPLE_propertyDW_TAG_APPLE_proTAG_pointer_typeDW_TAG_pointer_tTAG_compile_unitDW_TAG_compile_uTAG_common_blockDW_TAG_common_blTAG_variant_partDW_TAG_variant_pTAG_partial_unitDW_TAG_partial_uTAG_coarray_typeDW_TAG_coarray_tTAG_dynamic_typeDW_TAG_dynamic_tTAG_format_labelDW_TAG_format_lalock
DW_TAG_lexical_btype
DW_TAG_subrange_item
DW_TAG_namelist_DW_TAG_volatile_DW_TAG_restrict_unit
DW_TAG_skeleton_site
rted_declarationenumeration_typeDW_TAG_enumeratiformal_parameterDW_TAG_formal_pacommon_inclusionDW_TAG_common_inunspecified_typegeneric_subrangeDW_TAG_generic_sBORLAND_propertyDW_TAG_BORLAND_pDW_TAG_entry_point
DW_TAG_string_tyDW_TAG_inheritance
DW_TAG_catch_block
DW_TAG_packed_tyDW_TAG_thrown_tyDW_TAG_shared_tyDW_TAG_atomic_tyDW_TAG_array_typDW_TAG_class_typDW_TAG_union_typDW_TAG_const_typDW_TAG_enumerator
DW_TAG_subprograpush_tls_addressDW_OP_GNU_push_t_GNU_const_indexDW_OP_GNU_const_OP_LLVM_fragmentDW_OP_LLVM_fragm_cfa
DW_OP_call_framealue
DW_OP_implicit_vndex
DW_OP_GNU_addr_iform_tls_addressDW_OP_form_tls_aimplicit_pointerDW_OP_implicit_ph_object_addressDW_OP_push_objecDW_OP_deref_sizeDW_OP_const_typeDW_OP_deref_typeDW_OP_plus_uconsDW_OP_xderef_sizDW_OP_stack_valuDW_OP_entry_valuDW_OP_regval_typDW_OP_xderef_typDW_OP_reinterpreATE_signed_fixedDW_ATE_signed_fiE_packed_decimalDW_ATE_packed_deE_numeric_stringDW_ATE_numeric_sE_unsigned_fixedDW_ATE_unsigned__imaginary_floatDW_ATE_imaginaryDW_ATE_signed_char
loat
DW_ATE_complex_fchar
DW_ATE_decimal_fITY_pure_virtualDW_VIRTUALITY_puRTUALITY_virtualDW_VIRTUALITY_viDW_VIRTUALITY_none
DW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Fortran03
LANG_C_plus_plusDW_LANG_C_plus_pG_ObjC_plus_plusDW_LANG_ObjC_pluG_C_plus_plus_03G_C_plus_plus_11DW_LANG_Pascal83ript
DW_LANG_RenderScGLE_RenderScriptDW_LANG_GOOGLE_RG_C_plus_plus_14G_Mips_AssemblerDW_LANG_Mips_AssG_BORLAND_DelphiDW_LANG_BORLAND_DW_CC_LLVM_Win64DW_CC_LLVM_AAPCSDW_CC_LLVM_Swiftfastcall
DW_CC_BORLAND_ms_BORLAND_stdcallDW_CC_BORLAND_st_LLVM_vectorcallDW_CC_LLVM_vecto_LLVM_X86_64SysVDW_CC_LLVM_X86_6_LLVM_X86RegCallDW_CC_LLVM_X86ReBORLAND_safecallDW_CC_BORLAND_saBORLAND_msreturnBORLAND_thiscallDW_CC_BORLAND_thBORLAND_fastcallDW_CC_BORLAND_faLLVM_PreserveAllDW_CC_LLVM_Presend_fastcall_i386DW_CC_GNU_borlans_sh
DW_CC_GNU_renesascal
DW_CC_BORLAND_pa_VFP
enCL
DW_CC_GDB_IBM_OpCC_pass_by_valueDW_CC_pass_by_vaass_by_referenceDW_CC_pass_by_reLVM_IntelOclBiccDW_CC_LLVM_IntelLVM_SpirFunctionDW_CC_LLVM_SpirFLVM_OpenCLKernelDW_CC_LLVM_OpenCLVM_PreserveMostMACINFO_end_fileDW_MACINFO_end_fCINFO_start_fileDW_MACINFO_startCINFO_vendor_extDW_MACINFO_vendoDW_MACINFO_undefDW_MACINFO_defin
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
 n;^
Qkkbal
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
ion:
BCSymbolMap Version: 1.0
0000000000000000
Y@----------------x8r7
intelgpu_icl_1x6intelgpu_icl_1x8intelgpu_skl_gt2r6
intelgpu_kbl_gt2r0
intelgpu_kbl_gt3r1
amdgpu_gfx600_nwh
legpu_g11g_8fstpapplegpu_g11g_8fgpu_gfx1010_nsgcamdgpu_gfx1010_nelgpu_skl_gt3r10intelgpu_skl_gt3
                                                                                
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
St12out_of_range
St11logic_error
St9exception
olation_functionair.interpolatioair.arg_type_namair.render_targe
operties
air.mesh_grid_prair.vertex_outpu
air.base_instancrtex
air.ring_edge_veair.edge_tessellair.inside_tesseint_index_bufferair.control_poinosition_in_patchair.position_in_.indirect_bufferair.indirect_bufn_function_tableair.intersectionair.command_bufft_command_bufferair.indirect_come_pipeline_stateair.compute_pipee_function_tableair.visible_funcr_pipeline_stateair.render_pipelndirect_constantair.indirect_conconstant.i32.v2f32
constant.i32.v2i)
x_in_threadgroupair.thread_indexposition_in_gridair.thread_positage_in_grid_sizeair.stage_in_grid_origin
air.threadgroup_8
rget_array_indexay_index
air.viewport_arrair.fragment_input
air.front_facingarycentric_coordair.barycentric_air.primitive_idster_sample_maskair.raster_samplolor_sample_maskair.color_sampleair.sample_mask_in
.depth_qualifierair.depth_qualifffer
array<texture_butexFetchFunctionair.vertexFetchFaccessible_inputair.inaccessible.default_uniformair.default_uniftersection_queryair.allocate_int_visible_functioget_null_visible_intersection_fu_compute_command_pipeline_state_set_pipeline_stanique_identifierget_unique_identration_structure_acceleration_stobal_constructoragc.global_constagx.textureStatellvm.agx.texture
air.clip_distanc
.convert.u.i32.fair.convert.u.i3
ffffff
b0$
8p@T
h!<e
*U"K
>}"P
O(hX
/_PP
",X@
`B L
1!@&
bB@M
TV3A@
lB1`L
C$|z
C$?*
\6p"
H!*D
H,+H
0D"aA
H6,H
Hp-@
0D:sA
Hy.@
0Dr{A
H'<@
H-=L
H;>P+
H/?83
H+H@=
H)I@g
H'J@q
0DzW
H"LD=
H(MDg
H.NDq
C$:'
0DJ}
HtX4
C$],
H:Y4
H;ZH
C$X-
Hi[H
Hi\4
Hp]H=
H~^Hg
H0iH
0DjQ#
H>jH#
C$Z5
HlkH+
0DJc#
HzlL
C$x7
Hbz4
H2|0
Hb~<
0D*A
0DJI
0DRS
C$=F
0D2s
C${G
0Db}
C$1L
!R+&
!RI&
f2q^
}&PN
!Rz'QN
C$4T
0DbK
0D:uE*
0DZwE:
!R:.
!RJ.Q~
C$V_
v0FP
p`8e
NK-5
P$v`
air.compile.denorms_disableair.compile.fast_math_disableair.compile.framebuffer_fetch_enableApple metal version 31001.638 (metalfe-31001.638.1)Metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/gen4/math_half.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/gen4_common/math.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/math_half.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/math.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/integer.metalwchar_sizeair.max_device_buffersair.max_constant_buffersair.max_threadgroup_buffersair.max_texturesair.max_read_write_texturesair.max_samplersfloatomnipotent charSimple C++ TBAAbranch_weightsint_ZTS9TableLine
 , 7
m0r#
m@r#
cPr#
c`r#
A2C
Ea0C@
0L} 
0X~ 
eYb 
7H*,M
2Kc+
T  A
2,Ap
2,B0
05f0
r)@@@
2K0t
   ,
?T    
0K@t
\0bp
|27m
A0@n.
G D
vnA!@
\0bp
|3Gq
A0@p.
G D
xnA!@
bool
A0@B.(&
F
\PB 
h#7T
1bP !
1K0T
T  A
2,Ap
2,B0
05f0
(2bP !
a0rA
!(F
sX`
(2bP !
a0rA
!(F
sX`
`0bP !
 (LR
(2bP !
a0rA
!(F
sX`
`0bP !
 (LR
dAF
 V/
(2bP !
a0rA
rAIA
AMAL7
 t.
@.Pp
(2bP !
a0rA
rAIA
AMAL7
 t.
@.Pp
*\0b+
2bP !
(2bP !
a0rA
rAIA
AMAL7
 t.
@.Pp
*\0b+
2bP !
!8F
A0@|/(!
^0sW@
YPB
A0@f&
T  A
2,Ap
2,B0
$(Kv
*0sf
q=~Q
T  A
2,Ap
2,B0
$(Kv
*0sf
tA/X
2|a/P
q=~Q
T  A
2,Ap
2,B0
$(Kv
*0sf
tA/X
2|a/P
 PEL
&h 0
q=~Q
\D!@`
<PDU
#MTe]X
ET%M*
F1bp
B1bp
C1bp
#pO|D
(2bp
\ $#
D2bp
\`$#
#8oW
%8*Id
AF
`0Fp
 \.
`0FP
 V.
bF
B0F2
 Z.
%(*Id
`0FP
 T.
g7FP
2bpt!
5bpt!
5bpt!
5bpt!
5bpt!
5bpt!
4bpt!
4bpt!
4bpt!
TK $-
4KPT
5K`t
 T.
-2(b
 \.
<:p*RA
-6(b
GAB
DL7DP0bp
\0bP !
sAQA
T7bp
`>Cu
~^eso
#Hg|
A0bP
1%x2
]@x#
$RJ %
`>Cu
~^eso
#Hg|
A0bP
]@|#
$RJ %
1bpt!
4bpt!
FAB
PnB1
`>Cu
~^eso
#Hg|
A0bP
]@|#
$RJ %
1bpt!
4bpt!
FAB
PnB1
0l@4
0l@(
[1bP
@9A
D0l@
0l@d
ERB
 )>@
T   D
A8hA
A0@RO
%HjA
A9F
2,L0bp
[PB
P@ (
`>Cu
2Y0
FPp`
vvPA
7x
2dH0
7 }
A0@|0hF
A0@~0(
R#($
A0@RJ(
E @
?T   D
A0K 
2@Gpo
O<9
A9F
2DR0bp
N1X@
[PB
P@ @
#8K]=
2TDPL
Y=[(!
s,n
B0KP
Jh%4
ZB-h
8E0bpt!
QA]@
`1bp
 RAX
TZ QJ
1bpt!
F0bpt!
1bP !
Q1"D)2"
G0bpt!
70%
E @H
DYP1X@
!@`
4@ 
&4B0
s,I
7$r@
7<v@
s,P"s
2s,
7T~ 
2PV0
YPi0
"Ha/
 RA.
2lZP
1bpt!
E0bpt!
!D0bpt!
G0bpt!
F0bpt!
aP7
uAAD
iQD
G0bpt!
M*! 0
&$D1
`?YT
]Pl#
 }sT 
2LLp
|~WA9
0bpt!
BgPA=@
$RJ %
1bpt!
P@ H
?T    
r0bp
4r0bp
<r0bp
Dr0bp
Lr0bp
6;`f
C L7
  PC:
0bP !
0bpt!
 wWR
#`u}d
# K^
28B0
j0bp
q0bp
,A3P
"Da
QD #
7#0*
dN~c
tbPE
2lAP
28OP
2bpt!
uPD #
xPC 
0bpt!
wwF`T
2`[0
2dZP
 3'7
C L7
]0|#
]p|#
@@@@
 Hvc
20D0
(k0bp
0k0bp
8k0bp
\QB@
C L7
z0bp
z0bp
z0bp
 zPI"
RB*H
0bP !
48F
!-0@
e0bp
gvCP
p AEf
]0bP !
^0bP !
2bP !
ap~A
T,P"(
^0X@
7 p@
28D0
p0bp
p0bp
Q@F
 z/
7dR0
@\`PB
b@7
!T,r@ 
L7B0
2,H0
2$J0P1
RA,\
r)@@@
2K0t
q=~q
Y0bP !
1bpt!
2bP !
;K0t\
h0bP
Y0bP !
1bpt!
S1bP !
tC 4
   ,
?T    
@s9c
EPA
0K@t
2(FP
wxFQ
/8MED
   ,
?T    
@{9c
EPA
0K@t
2(FP
wxFQ
EPA
20Np
/8MED
/8MED
   ,
?T    
EPA
,A1P
 $pP
2<KP
P00F
/8MED
/8MED
/8MED
BX ]
Z0bP !
\q!,(
1LA(d
 ZF
BX0]
;K`t\BA
sS 
 j-
D'{8
@ZF
BX@]
`!
;K`t\Ba
sS0
 l-
'|8
[0bP !
\q!,h
\q!,
2bP !
[ -#
\q!,
2bP !
2 IP
2bP !
[0-#
\q!,
2bP !
2 IPG
2bP !
2,LPG+
2bP !
n8"f
A0@ZN
BXp]
2bP !
1bpt!
n8$f
A0@\N
2bP !
1bpt!
LAF
KpHC!
n8&f
A0@^N
2bP !
1bpt!
NAF
KpLC1
2LT0
C1bP !
E$7
7 j
\q!,
B3KP
2(G0
Z0bP !
\q!,
7 k
\q!,
B3KP
2(G0
Z0bP !
\q!,
28O0
B1bP !
7 l
\q!,
B3KP
2(G0
Z0bP !
\q!,
28O0
B1bP !
2PQ0
\0bP !
\q!,@
YPB
`?YT
2 B0
E0bp
L7bp
P7Kp
D1bp
] t#
D7bp
]`t#
7}
20KP
$~0bp
,~0bp
4~0bp
<~0bp
`?YT
2 B0
E0bp
L7bp
P7Kp
D1bp
] t#
D7bp
]`t#
7}
20KP
$~0bp
,~0bp
4~0bp
<~0bp
0bPt!
`?YT
2 B0
E0bp
L7bp
P7Kp
D1bp
] t#
D7bp
]`t#
7}
20KP
$~0bp
,~0bp
4~0bp
<~0bp
0bPt!
2p[P
_H$ 1bp
0 1bp
@ 1K
KD1bp
 1bp
 1bp
 btT 
,>R[
A0@~
|6WA9
0bpt!
1bPt!
2LK0bP
A,0%
C L7
0bP !
0bpt!
E\7
C L7
e1bp
 eQI"
`PA9
4bpt!
0bP !
O|s
D Hq
A0@~
|6WA9
0bpt!
1bPt!
2LK0bP
A,0%
C L7
0bP !
0bpt!
E\7
C L7
e1bp
 eQI"
`PA9
4bpt!
0bP !
O|s
@&0bp
c2bp
c2bp
 'Rf
1bPt!
*XE+`
$RJ %
1bpt!
0bpt!
A0bPt!
A0bP
pCP/L
C L7
gPA9
4bpt!
n1X@
f1X0
A0@~
|6WA9
0bpt!
1bPt!
2LK0bP
A,0%
C L7
0bP !
0bpt!
E\7
C L7
e1bp
 eQI"
`PA9
4bpt!
0bP !
O|s
@&0bp
c2bp
c2bp
 'Rf
1bPt!
*XE+`
$RJ %
1bpt!
0bpt!
A0bPt!
A0bP
pCP/L
C L7
gPA9
4bpt!
 60bp
a3bp
a3bp
1bPt!
*TG+P
$RJ %
1bpt!
0bpt!
A0bPt!
B0bP
pC0?L
C L7
kPA9
4bpt!
j3X@
b3X0
P@ 
 wWR
#`u}d
# K^
28A0
2$JPh
2,LP|0
1bpt!
a$F
 $@b
(Tlp
QAHt
 wWR
#`u}d
# K^
28A0
2$JPh
2,LP|0
1bpt!
a$F
 $@b
(Tlp
z1bp
>Q
}2bp
p0bP
S0bp
qF1X@
 wWR
#`u}d
# K^
28A0
2$JPh
2,LP|0
1bpt!
a$F
 $@b
(Tlp
z1bp
>Q
}2bp
p0bP
S0bp
"DF
 0Bd
DD.X
7<&B
H%2bp
qT2X@
?T    
2LA0
A0K0
2LD0
t0bpt!
8t0bp
@t0bp
Ht0bp
2HPp
WA9
4bpt!
[AKh
&-F
(-F
C L7
r1bp
 rQI"
RBhH
aPA9
4bpt!
>}
  ~c
T'
HLa.X
aD!$
& FA@ 
P@ H
?T    
2LA0
A0K0
2LD0
t0bpt!
8t0bp
@t0bp
Ht0bp
2HPp
WA9
4bpt!
[AKh
&-F
(-F
C L7
r1bp
 rQI"
RBhH
aPA9
4bpt!
>}
  ~c
T'
HLa.X
>2bpt!
@>2bp
V`&{
f 7
P+0bp
 A>
FAB
P@ 
?T    
2LA0
A0K0
2LD0
t0bpt!
8t0bp
@t0bp
Ht0bp
2HPp
WA9
4bpt!
[AKh
&-F
(-F
C L7
r1bp
 rQI"
RBhH
aPA9
4bpt!
>}
  ~c
T'
HLa.X
>2bpt!
@>2bp
V`&{
f 7
P+0bp
n`hF
ffF
 xff
hfF
B0bP
C L7
  PC
<3bp
 <SI"
hPA9
4bpt!
M0K`
R!8b
!uF
  Rg
#uF
,>R[{
,!F
>}3
2bpt!
PD #
0bpt!
T.xT
wF`T
,!F
>}3
2bpt!
PD #
0bpt!
T.xT
wF`T
J%<*
k?#0*p
T,^%X
@0X@
,!F
>}3
2bpt!
PD #
0bpt!
T.xT
wF`T
J%<*
k?#0*p
T,^%X
A0@r0
7fA
2dZPE!#
f1bpt!
2bpt!
iQC 
t1bpt!
tQD #
^|1bpt!
1bpt!
QD #
\0XP
@@@@
 Hvc
 z'7
2,Ip
|sWA9
0bpt!
2DX0
< 1bp
$1bp
$1bp
D0Kp
 &?8
@@@@
 Hvc
 z'7
2,Ip
|sWA9
0bpt!
2DX0
< 1bp
$1bp
$1bp
D0Kp
 &?8
G_(%
4}1bp
b 7
P@ \
@@@@
 Hvc
 z'7
2,Ip
|sWA9
0bpt!
2DX0
< 1bp
$1bp
$1bp
D0Kp
 &?8
G_(%
4}1bp
b 7
7(%
d`"J
,%2bp
AS"#
<02bp
\QB@
P#42X
H@##
42bp
AA##
42bp
c"u#A
0bP !
o Jg
A0b`
>{+
 HF
2@I0
2@Jpm
bG2
7X0.
0bpt!
SI"#
0bpt!
0bpt!
B0F2
0LB#
0bpt!
$2bpt!
0bpt!
0bpt!
0bpt!
Xnj9
E @
$)a 
A0b`
>|+
 HF
2@I0
2@Jpm
bG2
7X0.
0bpt!
SI"#
0bpt!
0bpt!
zba%z
0LB#
-1bpt!
$2bpt!
-1bpt!
:1bpt!
;1bpt!
A0@X
|0bp
|PF 
}0bp
}0bp
tC He
A0@X
|0bp
|PF 
}0bp
}0bp
tC He
 f/
xA(^
A0@X
|0bp
|PF 
}0bp
}0bp
tC He
 f/
xA(^
_0bP !
QA #
 1bp
2KpU
,1Kp
L%X5
`P'1
 \0"
`0FP
A0@R
20G0
20H0bP
`0FP
A0@R
20G0
20H0bP
 P/
`0FP
A0@R
20G0
20H0bP
 P/
_1bP !
2TVP
H%X5
58F
!-0@
20MP
)1bp
<A5)
AOH<1bp
rAL7
EPF]
GA@ @
58F
!-0@
20MP
)1bp
<A5)
AOH<1bp
rAL7
EPF]
~$+8
)DF
J%-0@
H%k 
L2X0
58F
!-0@
20MP
)1bp
<A5)
AOH<1bp
rAL7
EPF]
~$+8
)DF
J%-0@
H%k 
V0.7
2p]P
2x_P
@9ATP+p
J0bp
TP2i
Pf#P
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
~pF
PB:
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
~pF
PB:
h17
E0bP !
A0bP !
2bP !
Pv1bp
Hso
4bPt!
sCP
4bPt!
sCP
4bPt!
sCP
,>R[
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
~pF
PB:
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
~pF
PB:
h17
E0bP !
A0bP !
2bP !
Pv1bp
Hso
`>Cu
~^eso
#Hg|
2 E0bP
A)0%
`>Cu
~^eso
#Hg|
2 E0bP
A)0%
20I0bP
`>Cu
~^eso
#Hg|
2 E0bP
A)0%
20I0bP
2@M0bP
C L7
/1bp
 /QI"
0bP !
0bpt!
)8se
PnB1
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
FAB
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
C?7
20I0bP
A;0%
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
C?7
20I0bP
A;0%
31bp
31bp
0bpt!
8!sf
FAB
PnB1
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
FAB
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
C?7
20I0bP
A;0%
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
C?7
20I0bP
A;0%
31bp
31bp
0bpt!
8!sf
FAB
PnB1
A0b`
0bpt!
$2bpt!
0bpt!
0bpt!
0bpt!
1P#8#
*$sf
552bpt!
0bpt!
SI"#
0bpt!
PT u
<eY2bpt!
0bpt!
0)8Zp
C0b`
A'~F-
,KF
F2
K= T
E @
E @
A0b`
0bpt!
$2bpt!
0bpt!
GvE 
0bpt!
0bpt!
1P#8#
*$sf
u52bpt!
-1bpt!
WI"#
.1bpt!
9QT E
|eY2bpt!
;1bpt!
`0Fp
A0@Z
]0bP !
QA #
T)1
`0Fp
A0@Z
]0bP !
QA #
T)1
A0@f
`0Fp
A0@Z
]0bP !
QA #
T)1
A0@f
_1bP !
2TVP&!D
$1bp
%1bp
`P+1
 \8"
`0FP
A0@T
wPI 
`0FP
A0@T
wPI 
A0@P
CF
`0FP
A0@T
wPI 
A0@P
CF
2`S0
2`T0bP
BM7
g0bp
gPP 
l@L7
A0bP !
0bpt!
]0bP !
L{0bp
RA!#
B0bP !
7~B.
2$JP
vb-F
A0@`0
2`N0
>0
i.F
 n1
0 b#
v|C
>w
qP!AT
R2X@
g0bp
gPP 
l@L7
A0bP !
0bpt!
]0bP !
L{0bp
RA!#
B0bP !
7~B.
2$JP
vb-F
A0@`0
2`N0
>0
i.F
 n1
0 b#
v|C
>w
qP!AT
0#f2bP
n(lD
72bp
<BL7
A0bp
Lk2bp
T`/i
P/YC
>a`
B4X@
g0bp
gPP 
l@L7
A0bP !
0bpt!
]0bP !
L{0bp
RA!#
B0bP !
7~B.
2$JP
vb-F
A0@`0
2`N0
>0
i.F
 n1
0 b#
v|C
>w
qP!AT
0#f2bP
n(lD
72bp
<BL7
A0bp
Lk2bp
T`/i
P/YC
>a`
z4 j&
H'-0@
 N5
4 B'
 (av
4bPt!
sCP
4bPt!
sCP
4bPt!
sCP
,>R[
g7FP
A0b`
QA #
[ \#
[0\#
[@\#
[pX#
cPA #
r0bpt!
r0bpt!
 q0bpt!
1lA.d
g7FP
2bpt!
6bpt!
6bpt!
6bpt!
6bpt!
6bpt!
5bpt!
5bpt!
5bpt!
UK 4-
4KPT
5K`t
2bpt!
s0bpt!
r0bpt!
0bpt!
E$4K
g7FP
A0b`
QA #
[ d#
[0d#
[@d#
[p`#
cPA #
t0bpt!
t0bpt!
 s0bpt!
ZAf
$'8?p
B0b`
0bpt!
0bpt!
2<PPDB
4s[
2bpt!
0bpt!
0bpt!
`z'A
A0@Z
82bp
A0@Z
82bp
R"@
  Pb
A0@Z
82bp
R"@
  Pb
2`S0
2`T0bP
A1bP !
A0bP !
n1bp
 nQJ 
82bp
y1bp
y1bp
A0@R
-3(b
20G0
20H0bP
A0@R
-3(b
20G0
20H0bP
A0@v
,~p*
@ M 
A0@R
-3(b
20G0
20H0bP
A0@v
,~p*
zba%z
QA #
21bp
9QO 
tC P
[aQ
r0bp
7wC 
r0bp
WwE 
\v0bp
dv0bp
lv0bp
tv0bp
ZAK
jAf
QpF
v/(R
<17
E0bP !
A0bP !
2bP !
ZBnd
Pk1bp
^Ds
eaj0Xp
r0bp
7wC 
r0bp
WwE 
\v0bp
dv0bp
lv0bp
tv0bp
ZAK
jAf
QpF
v/(R
<17
E0bP !
A0bP !
2bP !
ZBnd
Pk1bp
^Ds
RDK
$-0@
eaj0Xp
r0bp
7wC 
r0bp
WwE 
\v0bp
dv0bp
lv0bp
tv0bp
ZAK
jAf
QpF
v/(R
<17
E0bP !
A0bP !
2bP !
ZBnd
Pk1bp
^Ds
RDK
$-0@
 V.X
jE.X
J0bP !
A0bP !
+0bpt!
1bpt!
eab3Xp
eaj0Xp
dN~c
!top
2lAP
28OP^
2bpt!
xPD #
{PC 
0bpt!
;K`U+xT
wF`T 
2`[0
2dZPC.
bPEK
v0bP
11bpt!
7(3A
4QC 
?1bpt!
2bpt!
7p?
 (1
dN~c
!top
2lAP
28OP^
2bpt!
xPD #
{PC 
0bpt!
;K`U+xT
wF`T 
2`[0
2dZPC.
bPEK
v0bP
11bpt!
7(3A
4QC 
?1bpt!
2bpt!
7p?
APHm
A0@x1
BPE!#
1bpt!
1bpt!
2bpt!
F`TP
,A+7p
@0Xp
dN~c
!top
2lAP
28OP^
2bpt!
xPD #
{PC 
0bpt!
;K`U+xT
wF`T 
2`[0
2dZPC.
bPEK
v0bP
11bpt!
7(3A
4QC 
?1bpt!
2bpt!
7p?
APHm
A0@x1
BPE!#
1bpt!
1bpt!
2bpt!
F`TP
,A+7p
A0@@3
2bpt!
2bpt!
RD #
2bpt!
A.0K
p3X@
r1Xp
 (1
#8K]=
A`A
A0@\
aPg@
C0KP
,A5bP
"~|P
p!F
tC@
c1bp
QAZ@
 D0bpt!
A0bpt!
cP7
A-HT
k`Bb :c
?d0P
k@Cb@Cc@CdP
y(R"
E0bpt!
A0@H3
V@.<
J0K@
?x9>
 ^q0
7 =
!,H@
\p!6
 mF
5x~(
HH.X
,A/T
DYb5X@
"ia&
h2XP
! B2X0
"ia&
&4B0
&4B0
#8K]=
A`A
A0@\
aPg@
C0KP
,A5bP
"~|P
p!F
tC@
c1bp
QAZ@
 D0bpt!
A0bpt!
cP7
A-HT
k`Bb :c
?d0P
k@Cb@Cc@CdP
y(R"
E0bpt!
A0@H3
V@.<
J0K@
?x9>
 ^q0
7 =
!,H@
\p!6
 mF
5x~(
HH.X
,A/T
pCPK
s,n
S0K0
S0K0
r`)b
nP^J
VpSZ
"rj/
AT@ZP
o5bp
W0bP
[0K`
Q` D
G0bpt!
s@b}@
0bP
A3bP
1bpt!
F0bpt!
,>R[
@;X@
DYn9X@
!@P
"ia&
v6XP
! N6X0
H"Da(
DYV1X@
4@p 
&4B0
8|aB1
Da,
P@ 
Da,
#8K]=
A`A
A0@\
aPg@
C0KP
,A5bP
"~|P
p!F
tC@
c1bp
QAZ@
 D0bpt!
A0bpt!
cP7
A-HT
k`Bb :c
?d0P
k@Cb@Cc@CdP
y(R"
E0bpt!
A0@H3
V@.<
J0K@
?x9>
 ^q0
7 =
!,H@
\p!6
 mF
HH.X
,A/T
pCPK
s,n
S0K0
S0K0
r`)b
nP^J
VpSZ
"rj/
AT@ZP
o5bp
W0bP
[0K`
Q` D
G0bpt!
s@b}@
0bP
A3bP
1bpt!
F0bpt!
F-(!
/^"8c
V`jh
!x51
A&h"
A0@`;
[0K 
!090
7d
Z v p
HOJ+=
A0@F>hF
A0@H>(
L?X@
DYz=X@
"ia&
! Z:X0
H"Da(K
DYb5X@
"ia&
h2XP
! B2X0
"ia&
[PB
,&4B0
8ZbB1
Da,
P@ 
NaB#
7<y@
s,P"s
7l~
7p{ 
2DS0
TA-P
PA8@
A0bpt!
0bP
A3bP
_-HT
P91D
1bpt!
F0bpt!
Io(7
Vp"j
3hF
Pp/<p
<p/=
Pp/<p
(7!!
 I 
7<y@
s,P"s
7l~
7p{ 
2DS0
TA-P
PA8@
A0bpt!
0bP
A3bP
_-HT
P91D
1bpt!
F0bpt!
Io(7
Vp"j
3hF
Pp/<p
<p/=
Pp/<p
Ep7c
6bPB
6M0K 
C7d0
7xz
:bPB
HG- 
8E0bpt!
1bpt!
F0bpt!
1bP !
BTO$Ri
E0bpt!
7g47
"@Td
[PB
P@ 
&$D1
7<y@
s,P"s
7l~
7p{ 
2DS0
TA-P
PA8@
A0bpt!
0bP
A3bP
_-HT
P91D
1bpt!
F0bpt!
Io(7
Vp"j
3hF
P`/<`
/=(!W
A9F
Ep7c
6bPB
6M0K 
C7d0
7xz
:bPB
HG- 
8E0bpt!
1bpt!
F0bpt!
1bP !
BTO$Ri
E0bpt!
7g47
"@Td
C('|:a
4()b
TJJ
RXAH
 *p)
$F"(
A0@R3
D0bp
E @<
8PbB1
 I 
!Hdp
20APB
!T,
!F2P1
H"!
ZA/l5
2\R0
L7EP
"LBK(
q!S~
!Hdp
20APB
!T,
!F2P1
H"!
ZA/l5
2\R0
L7EP
"LBK(
Xl5b
 `gQ
'T,r
L7B0
A0P1
T,C
Hhs
@Du}#
!Hdp
20APB
!T,
!F2P1
H"!
ZA/l5
2\R0
L7EP
"LBK(
Xl5b
 `gQ
'T,r
L7B0
A0P1
T,C
Hhs
A0bP
[Ry`A
pC`"f`
q!Sm
T0X0
F0X@
A0b`
>|32l
4MF
~.HDa
0bpt!
0bpt!
0bpt!
0bpt!
1bpt!
0bpt!
0bpt!
0bpt!
0bpt!
"1bpt!
4MF
.HFa
0bpt!
0bpt!
0bpt!
0bpt!
1bpt!
0bpt!
0bpt!
0bpt!
0bpt!
#1bpt!
Znr9
b'F
C'F
A.F
B.F
B.F
D.F
"/F
!/F
|00J
 8Hc
>0
 HHc
>1
!B0X
A0b`
>}36m
~.8Ha
0F2
552bpt!
0bpt!
0bpt!
82bpt!
0bpt!
0bpt!
0bpt!
1bpt!
0bpt!
2bpt!
0bpt!
2bpt!
 $1bpt!
'~J@
v@4!
?$s
vBf
E0b`
/ xb
/8vb
",F
!,F
b.F
a.F
d.F
A/F
>0
 @Jc
>1
t10X
u52bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
'b"#
&2bpt!
$&2bpt!
!F1X
r)@@@
2K0t
q=~q
r)@@@
2K0t
  tp
q=~q
r)@@@
2K0t
  tp
[Q u
1pAKd
q=~q
r)@@@
2K0t
q=~q
r)@@@
2K0t
  tp
q=~q
r)@@@
2K0t
  tp
[Q u
1pAKd
q=~q
0T',
-`A
0T',
-`A
0T',
#`A
0T',
#`A
0T%TZ
p%tZ
0T%TZ
p%tZ
t%0Z
sQR
t%0Z
sQR
0T',
-`A
!Dd0
0T',
-`A
!Dd0
0T',
#`A
!Dd0
0T',
#`A
!Dd0
0T%TZ
p%tZ
0T%TZ
p%tZ
t%0Z
!PhP
t%0Z
!PhP
0T',
-`A
!Dd0
[PB
0T',
-`A
!Dd0
[PB
0T',
#`A
!Dd0
[PB
0T',
#`A
!Dd0
[PB
0T%TZ
p%tZ
0T%TZ
p%tZ
Z @@
t%0Z
!PhP
t%0Z
!PhP
0T',
NX ',
sQB
0T',
sQB
0T',
NX ',
sQB
0T',
sQB
sQR
sQR
0T',
NX ',
!Lgp
0T',
!Lgp
0T',
NX ',
!Lgp
0T',
!Lgp
!PhP
!PhP
0T',
NX ',
!Lgp
[PB
0T',
!Lgp
[PB
0T',
NX ',
!Lgp
[PB
0T',
!Lgp
[PB
[PB
Z @@
[PB
!PhP
[PB
!PhP
[PB
JpXp
D5b`t!
D5b`t!
D5b`t!
P-k0
D5b`t!
6b`t!
C@ls
D5b`t!
6b`t!
C@ls
D5b`t!
6b`t!
C@ls
2hD*
D5b`t!
6b`t!
,>R[
D5b`t!
6b`t!
,>R[
D5b`t!
6b`t!
,>R[
2hD*l
]( ZP@
D5b`t!
D5b`t!
D5b`t!
]( ZP@
.p%@f
 \pA
a"Ra
D5b`t!
6b`t!
C@ls
D5b`t!
6b`t!
C@ls
D5b`t!
6b`t!
C@ls
]( ZP@
.p%@f
 \pA
,A2P
,>R[
a"Ra
D5b`t!
6b`t!
,>R[
D5b`t!
6b`t!
,>R[
D5b`t!
6b`t!
,>R[
]( ZP@4f
.p%@f
 \pA
,A2P
,>r[
a"Ra
0bPt!
\p!2
4bPt!
4bPt!
4bPt!
0bPt!
a!Ra
4bPt!
,>R[
4bPt!
,>R[
4bPt!
,>R[
0bPt!
!LfP
a!Ra
2TD*
4bPt!
4bPt!
4bPt!
0bPt!
!LfP
bak
a!Ra
2TD*l
E0jB
U8jB
E$jB
U,jB
0T',
-`A
0T',
-`A
0T',
#`A
0T',
#`A
@X'\
@X'\
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
sk`
0T',
-`A
!Dd0
0T',
-`A
!Dd0
0T',
#`A
!Dd0
0T',
#`A
!Dd0
@X'\
!He0
@X'\
!He0
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
H@%|
0T',
-`A
!Dd0
[PB
0T',
-`A
!Dd0
[PB
0T',
#`A
!Dd0
[PB
0T',
#`A
!Dd0
[PB
@X'\
!He0
`!c
[PB
@X'\
!He0
`!c
[PB
E<jB
UDjB
@- $
L7H0
[PB
E0jB
U8jB
H@%g
H@%|
0PE+
[PB
E0jB
U8jB
E$jB
U,jB
nX 7,
aAX 
nX 7,
aAX H@
BX H@
ehXB
@- $
L7H`
ETXD
nX 7,
!Xi0
aAX 
!Xi0
nX 7,
!Xi0
aAX H@
!Xi0
!\k0
BX H@
!\k0
ehXB
@- $
L7H`
ZC+`
ETXD
PI(`%
nX 7,
!Xi0
[PB
aAX 
!Xi0
[PB
nX 7,
!Xi0
[PB
aAX H@
!Xi0
[PB
!\k0
[PB
BX H@
!\k0
[PB
ehXB
@- $
L7H`
ZC+`
[PB
ETXD
PI(`%
[PB
 dp
&,bR
R6,!
2:,!
E4jB
U<jB
$,BR
".5!
*25!
 dp
*JAM
elXB
@- $
$,BR
".5!
*25!
 dp
*JAM
L7H``
elXB
@- $
PA*`
PJ,`
$,BR
".5!
*25!
 dp
*JAM
L7H``
sqQ
n0X@
elXB
@- $
PA*`
PJ,`
[PB
\UCT i
sQR
sQR
HZCp
hZCp
0ZCp
sQR
!PhP
!PhP
HZCp
hZCp
0ZCp
!PhP
Wa0D
!PhP
pZd D
[PB
!PhP
pZb D
[PB
HZCp
hZCp
[PB
0ZCp
!PhP
Wa0D
!pn0
[PB
`?YT
]Pl#
 }sT 
`?YT
2 B0
E0bp
L7bp
P7Kp
D1bp
] t#
D7bp
]`t#
7}
20KP
$~0bp
,~0bp
4~0bp
<~0bp
#Uvq
`?YT
2 B0
E0bp
L7bp
P7Kp
D1bp
] t#
D7bp
]`t#
7}
20KP
$~0bp
,~0bp
4~0bp
<~0bp
0bPt!
#Uwq
`?YT
2 B0
E0bp
L7bp
P7Kp
D1bp
] t#
D7bp
]`t#
7}
20KP
$~0bp
,~0bp
4~0bp
<~0bp
0bPt!
2p[P
_H$ 1bp
0 1bp
@ 1K
KD1bp
 1bp
 1bp
 btT 
#Uxq
FA G
<P$M9
lnA5
FA G
<P$M1
2LLp
|~WA9
0bpt!
BgPA=@
$RJ %
1bpt!
Lf}`
0(7AA
A0@~
|6WA9
0bpt!
1bPt!
2LK0bP
A,0%
C L7
0bP !
0bpt!
E\7
C L7
e1bp
 eQI"
`PA9
4bpt!
0bP !
O|s
tTvq
N Da
A0@~
|6WA9
0bpt!
1bPt!
2LK0bP
A,0%
C L7
0bP !
0bpt!
E\7
C L7
e1bp
 eQI"
`PA9
4bpt!
0bP !
O|s
@&0bp
c2bp
c2bp
 'Rf
1bPt!
*XE+`
$RJ %
1bpt!
0bpt!
A0bPt!
A0bP
pCP/L
C L7
gPA9
4bpt!
tTwq
0k7AA
A0@~
|6WA9
0bpt!
1bPt!
2LK0bP
A,0%
C L7
0bP !
0bpt!
E\7
C L7
e1bp
 eQI"
`PA9
4bpt!
0bP !
O|s
@&0bp
c2bp
c2bp
 'Rf
1bPt!
*XE+`
$RJ %
1bpt!
0bpt!
A0bPt!
A0bP
pCP/L
C L7
gPA9
4bpt!
 60bp
a3bp
a3bp
1bPt!
*TG+P
$RJ %
1bpt!
0bpt!
A0bPt!
B0bP
pC0?L
C L7
kPA9
4bpt!
N Da
 wWR
#`u}d
# K^
28B0
j0bp
q0bp
,A3P
 wWR
#`u}d
# K^
28A0
2$JPh
2,LP|0
1bpt!
a$F
 $@b
(Tlp
 wWR
#`u}d
# K^
28A0
2$JPh
2,LP|0
1bpt!
a$F
 $@b
(Tlp
z1bp
>Q
}2bp
p0bP
S0bp
qF1X@
 wWR
#`u}d
# K^
28A0
2$JPh
2,LP|0
1bpt!
a$F
 $@b
(Tlp
z1bp
>Q
}2bp
p0bP
S0bp
"DF
 0Bd
DD.X
7<&B
H%2bp
qT2X@
QDB 
QDB 
FA G
<P$Mf
FA G
<P$M=
rnA5
FA G
<P$M4
\nA5
?T    
r0bpt!
4r0bp
<r0bp
Dr0bp
Lr0bp
6;`f
C L7
  PC:
0bP !
0bpt!
?T    
2LA0
A0K0
2LD0
t0bpt!
8t0bp
@t0bp
Ht0bp
2HPp
WA9
4bpt!
[AKh
&-F
(-F
C L7
r1bp
 rQI"
RBhH
aPA9
4bpt!
>}
  ~c
T'
HLa.X
HHsTvq
?T    
2LA0
A0K0
2LD0
t0bpt!
8t0bp
@t0bp
Ht0bp
2HPp
WA9
4bpt!
[AKh
&-F
(-F
C L7
r1bp
 rQI"
RBhH
aPA9
4bpt!
>}
  ~c
T'
HLa.X
>2bpt!
@>2bp
V`&{
f 7
P+0bp
D!$
?T    
2LA0
A0K0
2LD0
t0bpt!
8t0bp
@t0bp
Ht0bp
2HPp
WA9
4bpt!
[AKh
&-F
(-F
C L7
r1bp
 rQI"
RBhH
aPA9
4bpt!
>}
  ~c
T'
HLa.X
>2bpt!
@>2bp
V`&{
f 7
P+0bp
n`hF
ffF
 xff
hfF
B0bP
C L7
  PC
<3bp
 <SI"
hPA9
4bpt!
M0K`
R!8b
!uF
  Rg
#uF
D!$JY
`nA5
7#0*
,!F
>}3
2bpt!
PD #
0bpt!
T.xT
wF`T
,!F
>}3
2bpt!
PD #
0bpt!
T.xT
wF`T
J%<*
k?#0*p
T,^%X
,!F
>}3
2bpt!
PD #
0bpt!
T.xT
wF`T
J%<*
k?#0*p
T,^%X
A0@r0
7fA
2dZPE!#
f1bpt!
2bpt!
iQC 
t1bpt!
tQD #
^|1bpt!
1bpt!
QD #
@@@@
 Hvc
20D0
(k0bp
0k0bp
8k0bp
\QB@
C L7
z0bp
z0bp
z0bp
 zPI"
RB*H
0bP !
@@@@
 Hvc
 z'7
2,Ip
|sWA9
0bpt!
2DX0
< 1bp
$1bp
$1bp
D0Kp
 &?8
@@@@
 Hvc
 z'7
2,Ip
|sWA9
0bpt!
2DX0
< 1bp
$1bp
$1bp
D0Kp
 &?8
G_(%
4}1bp
b 7
GAB
@@@@
 Hvc
 z'7
2,Ip
|sWA9
0bpt!
2DX0
< 1bp
$1bp
$1bp
D0Kp
 &?8
G_(%
4}1bp
b 7
7(%
d`"J
,%2bp
AS"#
<02bp
\QB@
P#42X
H@##
42bp
AA##
42bp
c"u#A
0bP !
o Jg
FA G
<P$M3
bF
B0F2
A0b`
>{+
 HF
2@I0
2@Jpm
bG2
7X0.
0bpt!
SI"#
0bpt!
0bpt!
B0F2
0LB#
0bpt!
$2bpt!
0bpt!
0bpt!
0bpt!
Xnj9
A0b`
>|+
 HF
2@I0
2@Jpm
bG2
7X0.
0bpt!
SI"#
0bpt!
0bpt!
zba%z
0LB#
-1bpt!
$2bpt!
-1bpt!
:1bpt!
;1bpt!
 Z.
%(*Id
A0@X
|0bp
|PF 
}0bp
}0bp
tC He
A0@X
|0bp
|PF 
}0bp
}0bp
tC He
 f/
xA(^
A0@X
|0bp
|PF 
}0bp
}0bp
tC He
 f/
xA(^
_0bP !
QA #
 1bp
2KpU
,1Kp
L%X5
`P'1
 \0"
`0FP
 T.
#=Hq
`0FP
A0@R
20G0
20H0bP
#=He
`0FP
A0@R
20G0
20H0bP
 P/
#=Hu
`0FP
A0@R
20G0
20H0bP
 P/
_1bP !
2TVP
H%X5
48F
!-0@
GAB
58F
!-0@
20MP
)1bp
<A5)
AOH<1bp
rAL7
EPF]
tTvq
58F
!-0@
20MP
)1bp
<A5)
AOH<1bp
rAL7
EPF]
~$+8
)DF
J%-0@
H%k 
tTwq
58F
!-0@
20MP
)1bp
<A5)
AOH<1bp
rAL7
EPF]
~$+8
)DF
J%-0@
H%k 
V0.7
2p]P
2x_P
@9ATP+p
J0bp
TP2i
Pf#P
tTxq
FA G
<P$M/
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
~pF
PB:
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
~pF
PB:
h17
E0bP !
A0bP !
2bP !
Pv1bp
Hso
4bPt!
sCP
4bPt!
sCP
4bPt!
sCP
,>R[
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
~pF
PB:
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
~pF
PB:
h17
E0bP !
A0bP !
2bP !
Pv1bp
Hso
`>Cu
~^eso
#Hg|
A0bP
1%x2
]@x#
$RJ %
1bpt!
4bpt!
`>Cu
~^eso
#Hg|
2 E0bP
A)0%
`>Cu
~^eso
#Hg|
2 E0bP
A)0%
20I0bP
`>Cu
~^eso
#Hg|
2 E0bP
A)0%
20I0bP
2@M0bP
C L7
/1bp
 /QI"
0bP !
0bpt!
)8se
`>Cu
~^eso
#Hg|
A0bP
]@|#
$RJ %
1bpt!
4bpt!
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
aWvq
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
C?7
20I0bP
A;0%
aWwq
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
C?7
20I0bP
A;0%
31bp
31bp
0bpt!
8!sf
aWxq
`>Cu
~^eso
#Hg|
A0bP
]@|#
$RJ %
1bpt!
4bpt!
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
C?7
20I0bP
A;0%
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
C?7
20I0bP
A;0%
31bp
31bp
0bpt!
8!sf
!$@b$D
$L"%Pb%T
%\B&b
&vB'r
$FB$J
%VB%Z
%d"&`
&hb&p
&lb't"'|
'x",
@ Da
<P$MTe]X
!$@b$D
$L"%Pb%T
%\B&b
&vB'r
%8*Id
AF
A0b`
0bpt!
$2bpt!
0bpt!
0bpt!
0bpt!
1P#8#
*$sf
552bpt!
0bpt!
SI"#
0bpt!
PT u
<eY2bpt!
0bpt!
0)8Zp
C0b`
A'~F-
,KF
F2
K= T
$)a 
A0b`
0bpt!
$2bpt!
0bpt!
GvE 
0bpt!
0bpt!
1P#8#
*$sf
u52bpt!
-1bpt!
WI"#
.1bpt!
9QT E
|eY2bpt!
;1bpt!
`0Fp
 \.
`0Fp
A0@Z
]0bP !
QA #
T)1
`0Fp
A0@Z
]0bP !
QA #
T)1
A0@f
`0Fp
A0@Z
]0bP !
QA #
T)1
A0@f
_1bP !
2TVP&!D
$1bp
%1bp
`P+1
 \8"
FA G
<P$MTe]X
`0FP
 V.
`0FP
A0@T
wPI 
`0FP
A0@T
wPI 
A0@P
CF
`0FP
A0@T
wPI 
A0@P
CF
2`S0
2`T0bP
BM7
FA G
<P$MTe]X
e0bp
gvCP
p AEf
]0bP !
^0bP !
2bP !
ap~A
T,P"(
^0X`B
g0bp
gPP 
l@L7
A0bP !
0bpt!
]0bP !
L{0bp
RA!#
B0bP !
7~B.
2$JP
vb-F
A0@`0
2`N0
>0
i.F
 n1
0 b#
v|C
>w
qP!AT
KHsTvq
R2X`B
g0bp
gPP 
l@L7
A0bP !
0bpt!
]0bP !
L{0bp
RA!#
B0bP !
7~B.
2$JP
vb-F
A0@`0
2`N0
>0
i.F
 n1
0 b#
v|C
>w
qP!AT
0#f2bP
n(lD
72bp
<BL7
A0bp
Lk2bp
T`/i
P/YC
>a`
KHsTwq
B4X`B
g0bp
gPP 
l@L7
A0bP !
0bpt!
]0bP !
L{0bp
RA!#
B0bP !
7~B.
2$JP
vb-F
A0@`0
2`N0
>0
i.F
 n1
0 b#
v|C
>w
qP!AT
0#f2bP
n(lD
72bp
<BL7
A0bp
Lk2bp
T`/i
P/YC
>a`
z4 j&
H'-0@
 N5
4 B'
 (av
KHsTxq
5X`B
dnA5
4bPt!
sCP
4bPt!
sCP
4bPt!
sCP
,>R[
g7FP
2bpt!
5bpt!
5bpt!
5bpt!
5bpt!
5bpt!
4bpt!
4bpt!
4bpt!
TK $-
4KPT
5K`t
g7FP
A0b`
QA #
[ \#
[0\#
[@\#
[pX#
cPA #
r0bpt!
r0bpt!
 q0bpt!
1lA.d
g7FP
2bpt!
6bpt!
6bpt!
6bpt!
6bpt!
6bpt!
5bpt!
5bpt!
5bpt!
UK 4-
4KPT
5K`t
2bpt!
s0bpt!
r0bpt!
0bpt!
E$4K
g7FP
A0b`
QA #
[ d#
[0d#
[@d#
[p`#
cPA #
t0bpt!
t0bpt!
 s0bpt!
ZAf
$'8?p
B0b`
0bpt!
0bpt!
2<PPDB
4s[
2bpt!
0bpt!
0bpt!
`z'A
 \.
<:p*RA
-6(b
A0@Z
82bp
A0@Z
82bp
R"@
  Pb
A0@Z
82bp
R"@
  Pb
2`S0
2`T0bP
A1bP !
A0bP !
n1bp
 nQJ 
82bp
y1bp
y1bp
3ITe]X
 T.
-2(b
A0@R
-3(b
20G0
20H0bP
A0@R
-3(b
20G0
20H0bP
A0@v
,~p*
A0@R
-3(b
20G0
20H0bP
A0@v
,~p*
zba%z
QA #
21bp
9QO 
tC P
[aQ
@ Da
`82(
$BB$F
%RB%V
&bB&f
'rB'v
5Tc5R
5dc6b
6rC7pc7n
FRDEV
EBDDF
DrDGv
GbDFf
TREUV
VBETF
TbEVn
WrEWv
_@&dDfdH
dP&eTfeX
e`&fdffh
fp&gtfgx
o@'tDgtH
tP'uTguX
u`'vdgvh
vp'wtgwx
XnA>
7 p@
28D0
p0bp
p0bp
Q@F
 z/
r0bp
7wC 
r0bp
WwE 
\v0bp
dv0bp
lv0bp
tv0bp
ZAK
jAf
QpF
v/(R
<17
E0bP !
A0bP !
2bP !
ZBnd
Pk1bp
^Ds
O@sTvq
r0bp
7wC 
r0bp
WwE 
\v0bp
dv0bp
lv0bp
tv0bp
ZAK
jAf
QpF
v/(R
<17
E0bP !
A0bP !
2bP !
ZBnd
Pk1bp
^Ds
RDK
$-0@
O@sTwq
GAB
r0bp
7wC 
r0bp
WwE 
\v0bp
dv0bp
lv0bp
tv0bp
ZAK
jAf
QpF
v/(R
<17
E0bP !
A0bP !
2bP !
ZBnd
Pk1bp
^Ds
RDK
$-0@
 V.X
jE.X
J0bP !
A0bP !
+0bpt!
1bpt!
O@sTxq
DJEY
fnA5
dN~c
tbPE
2lAP
28OP
2bpt!
uPD #
xPC 
0bpt!
wwF`T
2`[0
2dZP
dN~c
!top
2lAP
28OP^
2bpt!
xPD #
{PC 
0bpt!
;K`U+xT
wF`T 
2`[0
2dZPC.
bPEK
v0bP
11bpt!
7(3A
4QC 
?1bpt!
2bpt!
7p?
`1X@
 (1
dN~c
!top
2lAP
28OP^
2bpt!
xPD #
{PC 
0bpt!
;K`U+xT
wF`T 
2`[0
2dZPC.
bPEK
v0bP
11bpt!
7(3A
4QC 
?1bpt!
2bpt!
7p?
APHm
A0@x1
BPE!#
1bpt!
1bpt!
2bpt!
F`TP
,A+7p
@AB
dN~c
!top
2lAP
28OP^
2bpt!
xPD #
{PC 
0bpt!
;K`U+xT
wF`T 
2`[0
2dZPC.
bPEK
v0bP
11bpt!
7(3A
4QC 
?1bpt!
2bpt!
7p?
APHm
A0@x1
BPE!#
1bpt!
1bpt!
2bpt!
F`TP
,A+7p
A0@@3
2bpt!
2bpt!
RD #
2bpt!
A.0K
D4X@
@AB
FA G
$]VEi
3ITe]X
bnA5
#8K]=
2TDPL
Y=[(!
s,n
B0KP
Jh%4
ZB-h
8E0bpt!
QA]@
`1bp
 RAX
TZ QJ
1bpt!
F0bpt!
1bP !
Q1"D)2"
G0bpt!
70%
B2XP
4@p Ia
,(7AA
#8K]=
A`A
A0@\
aPg@
C0KP
,A5bP
"~|P
p!F
tC@
c1bp
QAZ@
 D0bpt!
A0bpt!
cP7
A-HT
k`Bb :c
?d0P
k@Cb@Cc@CdP
y(R"
E0bpt!
A0@H3
V@.<
J0K@
?x9>
 ^q0
7 =
!,H@
\p!6
 mF
5x~(
HH.X
,A/T
a J3X
r0X0
#8K]=
A`A
A0@\
aPg@
C0KP
,A5bP
"~|P
p!F
tC@
c1bp
QAZ@
 D0bpt!
A0bpt!
cP7
A-HT
k`Bb :c
?d0P
k@Cb@Cc@CdP
y(R"
E0bpt!
A0@H3
V@.<
J0K@
?x9>
 ^q0
7 =
!,H@
\p!6
 mF
5x~(
HH.X
,A/T
pCPK
s,n
S0K0
S0K0
r`)b
nP^J
VpSZ
"rj/
AT@ZP
o5bp
W0bP
[0K`
Q` D
G0bpt!
s@b}@
0bP
A3bP
1bpt!
F0bpt!
,>R[
a V7X
AYJ7X@
~4X0
 @ X
#8K]=
A`A
A0@\
aPg@
C0KP
,A5bP
"~|P
p!F
tC@
c1bp
QAZ@
 D0bpt!
A0bpt!
cP7
A-HT
k`Bb :c
?d0P
k@Cb@Cc@CdP
y(R"
E0bpt!
A0@H3
V@.<
J0K@
?x9>
 ^q0
7 =
!,H@
\p!6
 mF
HH.X
,A/T
pCPK
s,n
S0K0
S0K0
r`)b
nP^J
VpSZ
"rj/
AT@ZP
o5bp
W0bP
[0K`
Q` D
G0bpt!
s@b}@
0bP
A3bP
1bpt!
F0bpt!
F-(!
/^"8c
V`jh
!x51
A&h"
A0@`;
[0K 
!090
7d
Z v p
HOJ+=
A0@F>hF
A0@H>(
J?XP
a b;X
AYV;X@
D!@
FAB
s,I
7$r@
7<v@
s,P"s
2s,
7T~ 
2PV0
YPi0
"Ha/
 RA.
2lZP
1bpt!
E0bpt!
!D0bpt!
G0bpt!
F0bpt!
aP7
uAAD
iQD
G0bpt!
M*! 0
 (7!9
7<y@
s,P"s
7l~
7p{ 
2DS0
TA-P
PA8@
A0bpt!
0bP
A3bP
_-HT
P91D
1bpt!
F0bpt!
Io(7
Vp"j
3hF
Pp/<p
<p/=
Pp/<p
7<y@
s,P"s
7l~
7p{ 
2DS0
TA-P
PA8@
A0bpt!
0bP
A3bP
_-HT
P91D
1bpt!
F0bpt!
Io(7
Vp"j
3hF
Pp/<p
<p/=
Pp/<p
Ep7c
6bPB
6M0K 
C7d0
7xz
:bPB
HG- 
8E0bpt!
1bpt!
F0bpt!
1bP !
BTO$Ri
E0bpt!
7g47
"@Td
7<y@
s,P"s
7l~
7p{ 
2DS0
TA-P
PA8@
A0bpt!
0bP
A3bP
_-HT
P91D
1bpt!
F0bpt!
Io(7
Vp"j
3hF
P`/<`
/=(!W
A9F
Ep7c
6bPB
6M0K 
C7d0
7xz
:bPB
HG- 
8E0bpt!
1bpt!
F0bpt!
1bP !
BTO$Ri
E0bpt!
7g47
"@Td
C('|:a
4()b
TJJ
RXAH
 *p)
$F"(
A0@R3
D0bp
#Da
$BB$F
%RB%V
&bB&f
'rB'v
5BC4RC5
6bC6j
<rC7
#D@DDRDEN
FbDFj
G~dGx
LrDG
FpDL
O@%TDeTH
TP%UTeUX
U`%VdeVh
Vp%WteWx
_@&dDfdH
dP&eTfeX
e`&fdffh
fp&gtfgx
o@'tDgtH
tP'uTguX
u`'vdgvh
vp'wtgwx
k`,h
bA\0
FA G
MTe]X
8R4Q
Ee]X
FA G
MTe]X
$BB$F
%RB%V
&bB&f
'rB'v
4VC5R
6fC6n
6jC7r
8R4Q
@"$Db$H
$P"%Tb%X
%`"&db&h
&p"'tb'x
B<xc<
=|#=
#5T#?VC?Xc?Z
Dd#DfCDF
ERDEV
FbDFf
GrDGv
OjCT
Op#7tc7
7dR0
@\`PB
b@7
!T,r@ 
L7B0
2,H0
2$J0P1
RA,\
!Hdp
20APB
!T,
!F2P1
H"!
ZA/l5
2\R0
L7EP
"LBK(
^0XP
!Hdp
20APB
!T,
!F2P1
H"!
ZA/l5
2\R0
L7EP
"LBK(
Xl5b
 `gQ
'T,r
L7B0
A0P1
T,C
Hhs
3Twq
q!Sn
d1XP
 &
!Hdp
20APB
!T,
!F2P1
H"!
ZA/l5
2\R0
L7EP
"LBK(
Xl5b
 `gQ
'T,r
L7B0
A0P1
T,C
Hhs
A0bP
[Ry`A
pC`"f`
q!Sm
j2XP
^0XP
%N"%Lb%T
%XB&b
&hb&j
'zB'v
&nB,
/BC4F
5RC5V
6bC6f
7rC7v
#DDdDH
DP$ETdEX
E`$FddFh
Fp$GtdGx
O@%TDeTH
TP%UTeUX
U`%VdeVh
Vp%WteWx
_@&dDfdH
dP&eTfeX
e`&fdffh
fp&gtfgx
tBGtF
uRGuV
vbGvnnA
FAB
a$P"%T
$Nb%H
%`"&Z
%db&h
&p"'tb'x
/@#4Dc4HC,Jc,L
-V#-XC-Z
6bC6f
7rC7v
?D$DJ
DVDER
FfDFn
FjDGr
$N`nA;
@ Da
<P$M`
mTe]l
""2"$R"&r"(
#22#4R#6
&a"&cB&eb&g
'q"'sB'ub'w
"2%c2$s2#
31#33C35c37
3>#6;
3:C6i
6ks6h
6ec6m
7q#7n
6sC7uc7w
B!$B
?#DB%dB'
C24C4TC6tC8
Fb4FdTFftFh
Gr4GtTGvtGx
R"5R$UR&uR(
S25S4US6uS8
Vb5VdUVfuVh
Wr5WtUWvuWx
b"6b$Vb&vb(
c26c4Vc6vc8
fb6fdVffvfh
gr6gtVgvvgx
r"7r$Wr&wr(
s27s4Ws6ws8
vb7vdWvfwvh
wr7wtWwvwwx
$Tb%
4\C5^
6b#5P#4J
4Dc4L
4BETFE6f
6n#M
MrDGp
G|$L
FhdUV
7rC7\DE^
Fb$EPDFf
DBdDL
7zc>
Fff&fl
ftfgp&g\
dbEVf
eRFeD&dV
WzeW
W~%\
e\p%Wt
&|zG|
|xgw
|bGv`
vl'wt
nLGtN
uR't@GuV
L08
T0X
\0x
PD1
RL18
TT1X
V\1x
Xd1
Zl1
\t1
^|1
L28
T2X
\2x
L38
T3X
\3x
4^gq
KH#8Rq
A0b`
>|32l
4MF
~.HDa
0bpt!
0bpt!
0bpt!
0bpt!
1bpt!
0bpt!
0bpt!
0bpt!
0bpt!
"1bpt!
KH#8Re
4MF
.HFa
0bpt!
0bpt!
0bpt!
0bpt!
1bpt!
0bpt!
0bpt!
0bpt!
0bpt!
#1bpt!
Znr9
b'F
C'F
A.F
B.F
B.F
D.F
"/F
!/F
|00J
 8Hc
>0
 HHc
>1
KH#8Ru
4@ $
A0b`
>}36m
~.8Ha
0F2
552bpt!
0bpt!
0bpt!
82bpt!
0bpt!
0bpt!
0bpt!
1bpt!
0bpt!
2bpt!
0bpt!
2bpt!
 $1bpt!
'~J@
v@4!
?$s
vBf
E0b`
/ xb
/8vb
",F
!,F
b.F
a.F
d.F
A/F
>0
 @Jc
>1
t10X
u52bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
'b"#
&2bpt!
$&2bpt!
KH#8R
4@ $
$9
%FB%V"%^
%d"&`
&p"'tb'x
4BC4F
5RC5V
6bC6f
7|c7~C7
DBDDF
ERDEV
FbDFf
Fp$GnDGldGj
L|$LzDL
TBETF
UREUV
VbEVf
WrEW~
dBFdF
eRFeV
fbFff
fvFgx&gz
tNGtP'uB
uZgu\
uT'vd
vrGwn
H0(
P0H
X0h
?@1
QH1(
SP1H
UX1h
W`1
Yh1
[p1
]x1
H2(
<B`e
" B":
@"$Db$H
%NB%R
&^B&b
'nB'r
,~B,
6r#9
Q*%S"
Ub%X
Yr%Z
tR'}
'zb'
'w2)
33;34K35
9#5Q
P35?
UK5Uc
Wk5W
}{7w
F0 
N0@
V0`
QF1 
SN1@
UV1`
W^1
Yf1
[n1
]v1
_~1
F2 
N2@
V2`
F3 
N3@
V3`
<B`e
@"$Db$H
%NB%R
&^B&b
'nB'r
,~B,
%RB%V
4P#5Tc5X
5\#<
#=p#7tc7x
5`#6dc6h
4BC4F
/`"&db&h
&pb>
"'tb'x
GrDGv
G~DN
?@$DDdDHdO
O@%TDeT\
E`$FddFh
DP$ETdEX
TP%UTeUX
Vp%WteWx
U`%VdeVh
fbFff
grFgvFdF
eRFeV
o@'tD'm
vbGvf
wrGwv
uRGuV
'}bH
L08
T0X
|0@
\0x
PB1
QH1(
SP1H
UX1h
W`1
Yh1
[p1
]x1
H2(
P2H
X2h
X3h
\3x
\5x
HP(A
PPHAA
XPhA
PHCA
HQ(E
PQHEA
XQhE
QHGA
HR(I
PRHIA%
XRhI
RHKA-
HS(M
PSHMA5
XShM
SHOA=
HT(Q
PTHQAE
XThQ
THSAM
HU(U
PUHUAU
XUhU
UHWA]
HV(Y
PVHYAe
XVhY
VH[Am
HW(]
PWH]Au
XWh]
WH_A}
HX(a
PXHaA
XXha
XHcA
HY(e
PYHeA
XYhe
YHgA
HZ(i
PZHiA
XZhi
ZHkA
H[(m
P[HmA
X[hm
[HoA
H\(q
P\HqA
X\hq
\HsA
H](u
P]HuA
X]hu
]HwA
H^(y
P^HyA
X^hy
^H{A
H_(}
P_H}A
X_h}
$BB$F
$VB%X"%Z
$d"&f
'xb't"'
.`nAo
#2*#3:#4J#5Z#6j#7z#8
%R*%S:%TJ%UZ%Vj%Wz%X
'r*'s:'tJ'uZ'vj'wz'x
0T',
-`A
0T',
-`A
0T',
#`A
0T',
#`A
0T%TZ
p%tZ
0T%TZ
p%tZ
t%0Z
sQR
t%0Z
sQR
0T',
-`A
!Dd0
0T',
-`A
!Dd0
0T',
#`A
!Dd0
0T',
#`A
!Dd0
0T%TZ
p%tZ
0T%TZ
p%tZ
t%0Z
!PhP
t%0Z
!PhP
0T',
-`A
!Dd0
0T',
-`A
!Dd0
0T',
#`A
!Dd0
0T',
#`A
!Dd0
0T%TZ
p%tZ
0T%TZ
p%tZ
Z @@
t%0Z
!PhP
t%0Z
!PhP
0T',
NX ',
sQB
0T',
sQB
0T',
NX ',
sQB
0T',
sQB
sQR
sQR
0T',
NX ',
!Lgp
0T',
!Lgp
0T',
NX ',
!Lgp
0T',
!Lgp
!PhP
!PhP
0T',
NX ',
!Lgp
0T',
!Lgp
0T',
NX ',
!Lgp
0T',
!Lgp
Z @@
!PhP
!PhP
JpXp
D5b`t!
D5b`t!
D5b`t!
P-k0
D5b`t!
6b`t!
C@ls
D5b`t!
6b`t!
C@ls
D5b`t!
6b`t!
C@ls
\Fyp
2hD*
D5b`t!
6b`t!
,>R[
D5b`t!
6b`t!
,>R[
D5b`t!
6b`t!
,>R[
2hD*l
]( ZP@
D5b`t!
D5b`t!
D5b`t!
]( ZP@
.p%@f
 \pA
a"Ra
D5b`t!
6b`t!
C@ls
D5b`t!
6b`t!
C@ls
D5b`t!
6b`t!
C@ls
]( ZP@
.p%@f
 \pA
,A2P
,>R[
a"Ra
D5b`t!
6b`t!
,>R[
D5b`t!
6b`t!
,>R[
D5b`t!
6b`t!
,>R[
]( ZP@4f
.p%@f
 \pA
,A2P
a"Ra
r*'s:'tJ
b!|j!
#2*#3:#4J#5
J%UZ%Vj
")Wz%X
E0jB
U8jB
E$jB
U,jB
0T',
-`A
0T',
-`A
0T',
#`A
0T',
#`A
@X'\
@X'\
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
sk`
0T',
-`A
!Dd0
0T',
-`A
!Dd0
0T',
#`A
!Dd0
0T',
#`A
!Dd0
@X'\
!He0
@X'\
!He0
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
H@%|
0T',
-`A
!Dd0
0T',
-`A
!Dd0
0T',
#`A
!Dd0
0T',
#`A
!Dd0
@X'\
!He0
`!c
@X'\
!He0
`!c
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
H@%|
0PE+
E0jB
U8jB
E$jB
U,jB
nX 7,
aAX 
nX 7,
aAX H@
BX H@
ehXB
@- $
L7H`
ETXD
nX 7,
!Xi0
aAX 
!Xi0
nX 7,
!Xi0
aAX H@
!Xi0
!\k0
BX H@
!\k0
ehXB
@- $
L7H`
ZC+`
ETXD
PI(`%
nX 7,
!Xi0
aAX 
!Xi0
nX 7,
!Xi0
aAX H@
!Xi0
!\k0
BX H@
!\k0
ehXB
@- $
L7H`
ZC+`
ETXD
PI(`%
 dp
&,bR
R6,!
2:,!
E4jB
U<jB
$,BR
".5!
*25!
 dp
*JAM
elXB
@- $
$,BR
".5!
*25!
 dp
*JAM
L7H``
elXB
@- $
PA*`
PJ,`
$,BR
".5!
*25!
 dp
*JAM
L7H``
sqQ
n0X@
elXB
@- $
PA*`
PJ,`
$BB$F
%RB%V
&bB&f
'rB'v
4BC4F
5RC5V
6bC6f
7rC7v
DBDDF
ERDEV
FbDFf
GzDL
TBETF
UREVf
VbEUV
WrEWv
dBFdF
eRFeV
fbFff
grFl
tBGo
uRGuV
vbGvf
wrGwv
\UCT i
sQR
sQR
HZCp
hZCp
0ZCp
sQR
!PhP
!PhP
HZCp
hZCp
0ZCp
!PhP
Wa0D
!PhP
pZd D
!PhP
pZb D
HZCp
hZCp
Db$H
$P"%T
&^B&b
'nB'r
"4FC4J
0ZCp
!PhP
Wa0D
!pn0
$BB$F
%RB%V
'rB'v
&bB&f
B4Bc4@
"5PC5Nc5L
5X#6`C6f
7rC7v
DBDDF
ERDEV
FbDFf
GrDGv
TBETF
UREUV
VbEVf
WrEWv
dBFdF
eRFeV
fbFff
grFgv
tBGtF
uRGuV
vbGvf
wrGwv
0bPt!
\p!2
4bPt!
4bPt!
4bPt!
0bPt!
a!Ra
4bPt!
,>R[
4bPt!
,>R[
4bPt!
,>R[
0bPt!
!LfP
a!Ra
2TD*
4bPt!
4bPt!
4bPt!
0bPt!
!LfP
bak
a!Ra
2TD*l
$BB$F
%RB%V
&bB&f
'rB'v
4RC5V
4bC6BC4rC7n
DBDDF
ERDEV
FbDFf
GrDGv
DOBET
TREUF
VbEVf
WrEWv
dBFdF
eRFeV
fbFff
grFgv
tBGtF
uRGuV
vbGvf
wrGwv
"!""#B"%b"'
#1"#3B#5b#7
&a"&cB&eb&g
'q"'sB'ub'w
2!#2#C2%c2'
31#33C35c37
6a#6cC6ec6g
7q#7sC7uc7w
B!$B#DB%dB'
C1$C3DC5dC7
Fa$FcDFedFg
Gq$GsDGudGw
R!%R#ER%eR'
S1%S3ES5eS7
Va%VcEVeeVg
Wq%WsEWueWw
_(Vb&vb)
b"6b+
fa&f;
ccFfeff7Fc5fcg
fo&gsFgu
fkfgw
r!'r#'
"!""#B"%b"'
#1"#3B#5b#7
&a"&cB&eb&g
'q"'sB'ub'w
2!#2#C2%c2'
31#33C35c37
6cC6ec6g
7q#7sC7uc7w
B!$B#DB%dB'
C1$C3DC5dC7
Fa$FcDFedFg
Gq$GsDGudGw
R!%R#ER%eR'
S1%S3ES5eS7
Va%VcEVeeVg
Wq%WsEWueWw
b!&b#Fb%fb'
c1&c3Fc5fc7
fa&fcFfeffg
gq&gsFgufgw
r!'r#
6r#42
Ub%Z
rR'q
yj'w
32+33;34K35[36k37{38
5R+5S;5TK5U[5Vk5W{5X
5r+7s;7tK7u[7vk7w{7x
J00
R0P
Z0p
PB1
RJ10
TR1P
VZ1p
Xb1
Zj1
\r1
^z1
J20
R2P
Z2p
J30
R3P
Z3p
0X!(
3xQ:
BXC)
EHTk
SH%?
* )>
x*0;>
*0N>
+p}>
-PI?
H.@l?
8 YH
9p_H
:`YI
<`{O
=`+Z
x?P;]
?`h^
hI0Zk
L )~
L0/~
XM N~
M ~~
xXP-
8Y ~
xZP
x[@N
X^p}
8h`o
Xh |
_ZL9TwoOverPi_ZL8expTable_ZL10exp10Table_ZL18asConstRange_hi_in_ZL18asConstRange_lo_in_ZL19asConstRange_hi_out_ZL19asConstRange_lo_out__sin_for_halfllvm.agx1.sinc.f32air.ldexp.f16add2float__metal_tanf32_internalair.ldexp.f32air.clamp.s.i32air.convert.f.f32.u.i64air.convert.f.f32.u.i32reduceair.fma.f32air.convert.s.i32.f.f32air.convert.f.f32.s.i32air.fabs.f32reduce_tan__nan_half__isnan_or_isinf_half__reflect_negate__metal_copysignf16__reduce_2_common__reduce_2_sin__reduce_2_cosair.sinpi.f16air.cospi.f16air.tanpi.f16__metal_ldexpf16_basicair.cospi.v2f16air.cospi.v3f16air.cospi.v4f16air.sinpi.v2f16air.sinpi.v3f16air.sinpi.v4f16air.tanpi.v2f16air.tanpi.v3f16air.tanpi.v4f16air.ldexp.v2f16air.ldexp.v3f16air.ldexp.v4f16__isnan_or_isinf__isinf__isnormal__isnan__nan__inf__exponent__mantissa__metal_copysignf32cosPolyllvm.fmuladd.f32__metal_rcpf32sinPolycospiPolysinpiPolytanpiPolyfast_cospiPolyfast_sinpiPolyfast_tanpiPoly__metal_sinf32llvm.lifetime.start.p0i8llvm.lifetime.end.p0i8__metal_sinpif32__metal_fast_sinpif32__metal_cosf32__metal_cospif32__metal_fast_cospif32__metal_tanf32__metal_fast_tanpif32__metal_tanpif32__metal_sincosf32__metal_expf32_kernel__metal_expf32__metal_exp10f32__metal_logf32__metal_log2f32__metal_log10f32__metal_add12f__metal_add22f__metal_add12condf__metal_add22condf__metal_mul12f__metal_mul22f__metal_mul122f__metal_log2_precise__metal_pow_common__metal_pow_internal__metal_powr_internal__metal_powf32__metal_powrf32__metal_acosf32__metal_acoshf32__metal_asinhf32__metal_asinf32atanfPoly__metal_atanf32__metal_atan2f32__metal_log1pf32__metal_atanhf32__metal_coshf32__metal_sinhf32__metal_tanhf32__metal_fmodf32air.fast_ldexp.f32air.convert.u.i64.f.f32air.convert.u.i32.f.f32air.convert.s.i64.f.f32air.convert.u.i64.f.f16air.convert.s.i64.f.f16air.convert.f.v2f32.u.v2i64air.convert.f.v3f32.u.v3i64air.convert.f.v4f32.u.v4i64air.convert.u.v2i64.f.v2f32air.convert.u.v3i64.f.v3f32air.convert.u.v4i64.f.v4f32air.convert.u.v2i64.f.v2f16air.convert.u.v3i64.f.v3f16air.convert.u.v4i64.f.v4f16air.convert.s.v2i64.f.v2f32air.convert.s.v3i64.f.v3f32air.convert.s.v4i64.f.v4f32air.convert.s.v2i64.f.v2f16air.convert.s.v3i64.f.v3f16air.convert.s.v4i64.f.v4f16__metal_acosv2f32__metal_acosv3f32__metal_acosv4f32__metal_acoshv2f32__metal_acoshv3f32__metal_acoshv4f32__metal_asinv2f32__metal_asinv3f32__metal_asinv4f32__metal_asinhv2f32__metal_asinhv3f32__metal_asinhv4f32__metal_atanv2f32__metal_atanv3f32__metal_atanv4f32__metal_atanhv2f32__metal_atanhv3f32__metal_atanhv4f32__metal_cosv2f32__metal_cosv3f32__metal_cosv4f32__metal_cospiv2f32__metal_cospiv3f32__metal_cospiv4f32__metal_fast_cospiv2f32__metal_fast_cospiv3f32__metal_fast_cospiv4f32__metal_coshv2f32__metal_coshv3f32__metal_coshv4f32__metal_expv2f32__metal_expv3f32__metal_expv4f32__metal_exp2v2f32__metal_exp2v3f32__metal_exp2v4f32__metal_exp10v2f32__metal_exp10v3f32__metal_exp10v4f32__metal_logv2f32__metal_logv3f32__metal_logv4f32__metal_log2v2f32__metal_log2v3f32__metal_log2v4f32__metal_log10v2f32__metal_log10v3f32__metal_log10v4f32__metal_sinv2f32__metal_sinv3f32__metal_sinv4f32__metal_sinpiv2f32__metal_sinpiv3f32__metal_sinpiv4f32__metal_fast_sinpiv2f32__metal_fast_sinpiv3f32__metal_fast_sinpiv4f32__metal_sinhv2f32__metal_sinhv3f32__metal_sinhv4f32__metal_sqrtv2f32__metal_sqrtv3f32__metal_sqrtv4f32__metal_tanv2f32__metal_tanv3f32__metal_tanv4f32__metal_tanpiv2f32__metal_tanpiv3f32__metal_tanpiv4f32__metal_fast_tanpiv2f32__metal_fast_tanpiv3f32__metal_fast_tanpiv4f32__metal_tanhv2f32__metal_tanhv3f32__metal_tanhv4f32__metal_atan2v2f32__metal_atan2v3f32__metal_atan2v4f32__metal_powv2f32__metal_powv3f32__metal_powv4f32__metal_powrv2f32__metal_powrv3f32__metal_powrv4f32__metal_fmodv2f32__metal_fmodv3f32__metal_fmodv4f32__metal_sincosv2f32__metal_sincosv3f32__metal_sincosv4f32air.ldexp.v2f32air.ldexp.v3f32air.ldexp.v4f32air.fast_ldexp.v2f32air.fast_ldexp.v3f32air.fast_ldexp.v4f32air_hadd_s_i8air_hadd_u_i8air_hadd_s_i16air_hadd_u_i16air_hadd_s_i32air_hadd_u_i32air_hadd_s_i64air_hadd_u_i64air_hadd_s_v2i8air_hadd_u_v2i8air_hadd_s_v2i16air_hadd_u_v2i16air_hadd_s_v2i32air_hadd_u_v2i32air_hadd_s_v2i64air_hadd_u_v2i64air_hadd_s_v3i8air_hadd_u_v3i8air_hadd_s_v3i16air_hadd_u_v3i16air_hadd_s_v3i32air_hadd_u_v3i32air_hadd_s_v3i64air_hadd_u_v3i64air_hadd_s_v4i8air_hadd_u_v4i8air_hadd_s_v4i16air_hadd_u_v4i16air_hadd_s_v4i32air_hadd_u_v4i32air_hadd_s_v4i64air_hadd_u_v4i64air_rhadd_s_i8air_rhadd_u_i8air_rhadd_s_i16air_rhadd_u_i16air_rhadd_s_i32air_rhadd_u_i32air_rhadd_s_i64air_rhadd_u_i64air_rhadd_s_v2i8air_rhadd_u_v2i8air_rhadd_s_v2i16air_rhadd_u_v2i16air_rhadd_s_v2i32air_rhadd_u_v2i32air_rhadd_s_v2i64air_rhadd_u_v2i64air_rhadd_s_v3i8air_rhadd_u_v3i8air_rhadd_s_v3i16air_rhadd_u_v3i16air_rhadd_s_v3i32air_rhadd_u_v3i32air_rhadd_s_v3i64air_rhadd_u_v3i64air_rhadd_s_v4i8air_rhadd_u_v4i8air_rhadd_s_v4i16air_rhadd_u_v4i16air_rhadd_s_v4i32air_rhadd_u_v4i32air_rhadd_s_v4i64air_rhadd_u_v4i64air_clz_i8air_clz_i16air_clz_i32air_clz_i64air_clz_v2i8air_clz_v2i16air_clz_v2i32air_clz_v2i64air_clz_v3i8air_clz_v3i16air_clz_v3i32air_clz_v3i64air_clz_v4i8air_clz_v4i16air_clz_v4i32air_clz_v4i64air_ctz_i8air_ctz_i16air_ctz_i32air_ctz_i64air_ctz_v2i8air_ctz_v2i16air_ctz_v2i32air_ctz_v2i64air_ctz_v3i8air_ctz_v3i16air_ctz_v3i32air_ctz_v3i64air_ctz_v4i8air_ctz_v4i16air_ctz_v4i32air_ctz_v4i64air_popcount_i8air_popcount_i16air_popcount_i32air_popcount_i64air_popcount_v2i8air_popcount_v2i16air_popcount_v2i32air_popcount_v2i64air_popcount_v3i8air_popcount_v3i16air_popcount_v3i32air_popcount_v3i64air_popcount_v4i8air_popcount_v4i16air_popcount_v4i32air_popcount_v4i64air_mul_hi_s_i8air_mul_hi_u_i8air_mul_hi_s_i16air_mul_hi_u_i16air_mul_hi_s_i32air_mul_hi_u_i32air_mul_hi_s_i64air.abs.s.i64air_mul_hi_u_i64air_mul_hi_s_v2i8air_mul_hi_u_v2i8air_mul_hi_s_v2i16air_mul_hi_u_v2i16air_mul_hi_s_v2i32air_mul_hi_u_v2i32air_mul_hi_s_v2i64air_mul_hi_u_v2i64air_mul_hi_s_v3i8air_mul_hi_u_v3i8air_mul_hi_s_v3i16air_mul_hi_u_v3i16air_mul_hi_s_v3i32air_mul_hi_u_v3i32air_mul_hi_s_v3i64air_mul_hi_u_v3i64air_mul_hi_s_v4i8air_mul_hi_u_v4i8air_mul_hi_s_v4i16air_mul_hi_u_v4i16air_mul_hi_s_v4i32air_mul_hi_u_v4i32air_mul_hi_s_v4i64air_mul_hi_u_v4i64air_mad_hi_s_i8air_mad_hi_u_i8air_mad_hi_s_i16air_mad_hi_u_i16air_mad_hi_s_i32air_mad_hi_u_i32air_mad_hi_s_i64air_mad_hi_u_i64air_mad_hi_s_v2i8air_mad_hi_u_v2i8air_mad_hi_s_v2i16air_mad_hi_u_v2i16air_mad_hi_s_v2i32air_mad_hi_u_v2i32air_mad_hi_s_v2i64air_mad_hi_u_v2i64air_mad_hi_s_v3i8air_mad_hi_u_v3i8air_mad_hi_s_v3i16air_mad_hi_u_v3i16air_mad_hi_s_v3i32air_mad_hi_u_v3i32air_mad_hi_s_v3i64air_mad_hi_u_v3i64air_mad_hi_s_v4i8air_mad_hi_u_v4i8air_mad_hi_s_v4i16air_mad_hi_u_v4i16air_mad_hi_s_v4i32air_mad_hi_u_v4i32air_mad_hi_s_v4i64air_mad_hi_u_v4i64air_mad_sat_s_i64air_mad_sat_u_i64air_mad_sat_s_v2i64air_mad_sat_u_v2i64air_mad_sat_s_v3i64air_mad_sat_u_v3i64air_mad_sat_s_v4i64air_mad_sat_u_v4i64air_rotate_i8air_rotate_i16air_rotate_i32air_rotate_i64air_rotate_v2i8air_rotate_v2i16air_rotate_v2i32air_rotate_v2i64air_rotate_v3i8air_rotate_v3i16air_rotate_v3i32air_rotate_v3i64air_rotate_v4i8air_rotate_v4i16air_rotate_v4i32air_rotate_v4i64air.acos.f32air.acos.v2f32air.acos.v3f32air.acos.v4f32air.acosh.f32air.acosh.v2f32air.acosh.v3f32air.acosh.v4f32air.asin.f32air.asin.v2f32air.asin.v3f32air.asin.v4f32air.asinh.f32air.asinh.v2f32air.asinh.v3f32air.asinh.v4f32air.atan.f32air.atan.v2f32air.atan.v3f32air.atan.v4f32air.atanh.f32air.atanh.v2f32air.atanh.v3f32air.atanh.v4f32air.cos.f32air.cos.v2f32air.cos.v3f32air.cos.v4f32air.cospi.f32air.cospi.v2f32air.cospi.v3f32air.cospi.v4f32air.fast_cospi.f32air.fast_cospi.v2f32air.fast_cospi.v3f32air.fast_cospi.v4f32air.cosh.f32air.cosh.v2f32air.cosh.v3f32air.cosh.v4f32air.exp.f32air.exp.v2f32air.exp.v3f32air.exp.v4f32air.exp2.f32llvm.exp2.f32air.exp2.v2f32air.exp2.v3f32air.exp2.v4f32air.exp10.f32air.exp10.v2f32air.exp10.v3f32air.exp10.v4f32air.log.f32air.log.v2f32air.log.v3f32air.log.v4f32air.log2.f32air.log2.v2f32air.log2.v3f32air.log2.v4f32air.log10.f32air.log10.v2f32air.log10.v3f32air.log10.v4f32air.sin.f32air.sin.v2f32air.sin.v3f32air.sin.v4f32air.sinpi.f32air.sinpi.v2f32air.sinpi.v3f32air.sinpi.v4f32air.fast_sinpi.f32air.fast_sinpi.v2f32air.fast_sinpi.v3f32air.fast_sinpi.v4f32air.sinh.f32air.sinh.v2f32air.sinh.v3f32air.sinh.v4f32air.sqrt.f32llvm.sqrt.f32air.sqrt.v2f32air.sqrt.v3f32air.sqrt.v4f32air.tan.f32air.tan.v2f32air.tan.v3f32air.tan.v4f32air.tanpi.f32air.tanpi.v2f32air.tanpi.v3f32air.tanpi.v4f32air.fast_tanpi.f32air.fast_tanpi.v2f32air.fast_tanpi.v3f32air.fast_tanpi.v4f32air.tanh.f32air.tanh.v2f32air.tanh.v3f32air.tanh.v4f32air.atan2.f32air.atan2.v2f32air.atan2.v3f32air.atan2.v4f32air.pow.f32air.pow.v2f32air.pow.v3f32air.pow.v4f32air.powr.f32air.powr.v2f32air.powr.v3f32air.powr.v4f32air.fmod.f32air.fmod.v2f32air.fmod.v3f32air.fmod.v4f32air.sincos.f32air.sincos.v2f32air.sincos.v3f32air.sincos.v4f32_Z14__agx_smul_satssllvm.agx1.smul.sat.i16_Z14__agx_umul_satttllvm.agx1.umul.sat.i16_Z14__agx_ssub_satssllvm.agx1.ssub.sat.i16_Z14__agx_ssub_satiillvm.agx1.ssub.sat.i32_Z14__agx_usub_satttllvm.agx1.usub.sat.i16_Z14__agx_usub_satjjllvm.agx1.usub.sat.i32_Z10__agx_ctlzcbllvm.ctlz.i8_Z10__agx_ctlzsbllvm.ctlz.i16_Z10__agx_ctlzibllvm.ctlz.i32_Z10__agx_cttzcbllvm.cttz.i8_Z10__agx_cttzsbllvm.cttz.i16_Z10__agx_cttzibllvm.cttz.i32_Z11__agx_ctpopcllvm.ctpop.i8_Z11__agx_ctpopsllvm.ctpop.i16_Z11__agx_ctpopillvm.ctpop.i32air.hadd.s.i8air.hadd.u.i8air.hadd.s.i16air.hadd.u.i16air.hadd.s.i32air.hadd.u.i32air.hadd.s.i64air.hadd.u.i64air.hadd.s.v2i8air.hadd.u.v2i8air.hadd.s.v2i16air.hadd.u.v2i16air.hadd.s.v2i32air.hadd.u.v2i32air.hadd.s.v2i64air.hadd.u.v2i64air.hadd.s.v3i8air.hadd.u.v3i8air.hadd.s.v3i16air.hadd.u.v3i16air.hadd.s.v3i32air.hadd.u.v3i32air.hadd.s.v3i64air.hadd.u.v3i64air.hadd.s.v4i8air.hadd.u.v4i8air.hadd.s.v4i16air.hadd.u.v4i16air.hadd.s.v4i32air.hadd.u.v4i32air.hadd.s.v4i64air.hadd.u.v4i64air.rhadd.s.i8air.rhadd.u.i8air.rhadd.s.i16air.rhadd.u.i16air.rhadd.s.i32air.rhadd.u.i32air.rhadd.s.i64air.rhadd.u.i64air.rhadd.s.v2i8air.rhadd.u.v2i8air.rhadd.s.v2i16air.rhadd.u.v2i16air.rhadd.s.v2i32air.rhadd.u.v2i32air.rhadd.s.v2i64air.rhadd.u.v2i64air.rhadd.s.v3i8air.rhadd.u.v3i8air.rhadd.s.v3i16air.rhadd.u.v3i16air.rhadd.s.v3i32air.rhadd.u.v3i32air.rhadd.s.v3i64air.rhadd.u.v3i64air.rhadd.s.v4i8air.rhadd.u.v4i8air.rhadd.s.v4i16air.rhadd.u.v4i16air.rhadd.s.v4i32air.rhadd.u.v4i32air.rhadd.s.v4i64air.rhadd.u.v4i64air.clz.i8air.clz.i16air.clz.i32air.clz.i64air.clz.v2i8air.clz.v2i16air.clz.v2i32air.clz.v2i64air.clz.v3i8air.clz.v3i16air.clz.v3i32air.clz.v3i64air.clz.v4i8air.clz.v4i16air.clz.v4i32air.clz.v4i64air.ctz.i8air.ctz.i16air.ctz.i32air.ctz.i64air.ctz.v2i8air.ctz.v2i16air.ctz.v2i32air.ctz.v2i64air.ctz.v3i8air.ctz.v3i16air.ctz.v3i32air.ctz.v3i64air.ctz.v4i8air.ctz.v4i16air.ctz.v4i32air.ctz.v4i64air.mul_hi.s.i8air.mul_hi.u.i8air.mul_hi.s.i16air.mul_hi.u.i16air.mul_hi.s.i32air.mul_hi.u.i32air.mul_hi.s.i64air.mul_hi.u.i64air.mul_hi.s.v2i8air.mul_hi.u.v2i8air.mul_hi.s.v2i16air.mul_hi.u.v2i16air.mul_hi.s.v2i32air.mul_hi.u.v2i32air.mul_hi.s.v2i64air.mul_hi.u.v2i64air.mul_hi.s.v3i8air.mul_hi.u.v3i8air.mul_hi.s.v3i16air.mul_hi.u.v3i16air.mul_hi.s.v3i32air.mul_hi.u.v3i32air.mul_hi.s.v3i64air.mul_hi.u.v3i64air.mul_hi.s.v4i8air.mul_hi.u.v4i8air.mul_hi.s.v4i16air.mul_hi.u.v4i16air.mul_hi.s.v4i32air.mul_hi.u.v4i32air.mul_hi.s.v4i64air.mul_hi.u.v4i64air.mad_hi.s.i8air.mad_hi.u.i8air.mad_hi.s.i16air.mad_hi.u.i16air.mad_hi.s.i32air.mad_hi.u.i32air.mad_hi.s.i64air.mad_hi.u.i64air.mad_hi.s.v2i8air.mad_hi.u.v2i8air.mad_hi.s.v2i16air.mad_hi.u.v2i16air.mad_hi.s.v2i32air.mad_hi.u.v2i32air.mad_hi.s.v2i64air.mad_hi.u.v2i64air.mad_hi.s.v3i8air.mad_hi.u.v3i8air.mad_hi.s.v3i16air.mad_hi.u.v3i16air.mad_hi.s.v3i32air.mad_hi.u.v3i32air.mad_hi.s.v3i64air.mad_hi.u.v3i64air.mad_hi.s.v4i8air.mad_hi.u.v4i8air.mad_hi.s.v4i16air.mad_hi.u.v4i16air.mad_hi.s.v4i32air.mad_hi.u.v4i32air.mad_hi.s.v4i64air.mad_hi.u.v4i64air.mad_sat.s.i64air.mad_sat.u.i64air.mad_sat.s.v2i64air.mad_sat.u.v2i64air.mad_sat.s.v3i64air.mad_sat.u.v3i64air.mad_sat.s.v4i64air.mad_sat.u.v4i64air.rotate.i8air.rotate.i16air.rotate.i32air.rotate.i64air.rotate.v2i8air.rotate.v2i16air.rotate.v2i32air.rotate.v2i64air.rotate.v3i8air.rotate.v3i16air.rotate.v3i32air.rotate.v3i64air.rotate.v4i8air.rotate.v4i16air.rotate.v4i32air.rotate.v4i64air.popcount.i8air.popcount.i16air.popcount.i32air.popcount.i64air.popcount.v2i8air.popcount.v2i16air.popcount.v2i32air.popcount.v2i64air.popcount.v3i8air.popcount.v3i16air.popcount.v3i32air.popcount.v3i64air.popcount.v4i8air.popcount.v4i16air.popcount.v4i32air.popcount.v4i6431001.638.1air64-apple-macosx11.0.0llvm-link
b0$
"(X@
<!(E
6\!,
9(L)N
#hP
l AE
!Eex
!U*&
$I(a!P
*T(b!h
+W(c!
-Z(d!
l2"
 B*I
`B L
1!(&
kB1X
c,x7
C$Xa
:z, 
C$rs2
H1p8
C$p
0DbA
H9(\
0DzI
0DrQ
0DZY
Hx+<
0Dja
Hj/@
Hg88
Ho9<|
H%:<
Hg=l 
H4HD(
C$T$$
0DrI"R
H?IH&
HiJH*
C$~&"
0DZu
C$3,$
H*Y\*
H:Z@.
H`[L3
Hn\P?
C$^.
Hb]8g
H>^@q
C$V/
H<_@{
0DRA
H:h@
C$S4
H1i<g
0D"Q#
H5jDq
C$S5
0DRY#
H;kD{
HalD
H#m4
Hmo4
HnxH
H|yH%
H|z4
C$u="
!RO"Q
0DrK$
0Db]
0D"e
0DZu
C$sG
\0iL
C$QL
Z5qT
f7qL
C$^N
!Rj'
r<qT
\=qP
!R^*
0D2M
lTq\
C$xU
0D"]
-+VY
0Dbg
0DBi
N+Mj
0D*k
!R]+
{+Mj
!R+.P\
)/Q\
K2Mn
0D:U
0D:W&R
0DJmF
C$uo
px{j
v0FP
p@=u
P$v`
air.compile.denorms_disableair.compile.fast_math_disableair.compile.framebuffer_fetch_enableApple metal version 31001.638 (metalfe-31001.638.1)Metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/gen10_common/math_half.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/gen10_common/simdgroup.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/gen4_common/math.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/math_half.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/math.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/integer.metalwchar_sizeair.max_device_buffersair.max_constant_buffersair.max_threadgroup_buffersair.max_texturesair.max_read_write_texturesair.max_samplersomnipotent charSimple C++ TBAAshortintfloatbranch_weights_ZTS9TableLine
h`z#
Ic0C@
3W(
MPA #
B3bp
7K T,B
2Bp
 @F
A0@R/
A0@L/
D.Xp
D.Xp
_ x#
 (1Xb
@@@@
@`F
A0bp
%wGAT@\
A0@v/
=#8F
A0@x/
A0@v/
=#8F
A0@x/
sN@
A0@v/
=#8F
A0@x/
sN@
?#8F
A0@Po
A0@Z/
!`h0bP
A0@ro
A0@|/
A0@Po
A0@Z/
!`h0bP
A0@ro
A0@|/
A0@Po
A0@Z/
!`h0bP
A0@ro
A0@|/
A0@@0
7K T,B`
sM 
A0p\O
A0@N/
7K T,B`
sM 
A0p\O
A0@N/
A0@h/
@.Xp
7K T,B`
sM 
A0p\O
A0@N/
A0@h/
@.Xp
A0@~/(8(b
 H`0
 H`0
A0ph
PsE
 H`0
A0ph
6!F
A0@^/
6!F
A0@^/
7K T,B`
sM0
,!F
A0@V/
7K T,B`
sM0
,!F
A0@V/
7K T,B`
sM0
,!F
A0@V/
^ <#
^ <#
A0bp
yPE 
A0K`T
^ <#
A0bp
yPE 
A0K`T
b0(\!
D0bP
A0@l/
^oB1
D0bP
A0@l/
)sN`
D0bP
A0@l/
)sN`
28P0bP
^oB1
hPj0
2$J0bP
A0p@0@F
A0pB0P
[0F
hPj0
2$J0bP
A0p@0@F
A0pB0P
[0F
2DR0bP
A1K0
2\X0bP
UA #
!1bP
hP*1
(Z0Xp
hPj0
2$J0bP
A0p@0@F
A0pB0P
[0F
2DR0bP
A1K0
2\X0bP
UA #
!1bP
hP*1
p1bP
A0bP
1@F
WA #
q1bP
hPz1
*,1
@@@@
? 3
A0pzO
@@@@
A0pzO
@@@@
A0pzO
A0pb0P
 0
H#l
`A!@@
oA!@
loA!@ {
H#l
`A!@@
oA!@
"0b@
b%0t
7w
A!j ;
ApT@
L7TO0
b%0t
L7<H0
@9h0
"0b@
a0b@
 h0
V hA!t![
L7TO0
0IE1
#<.P
"0b@
c0b@
 h0
p"hP
"hA!
HpT0"
L7TO0
0#AS
7b
aE1?"
AA`"
bR'c
ir'c
j2&c
2l@0A
2|^Q
sO]x
b%0t
70
L7<H0
@9h0
7j
6hPB
l%a#
A5b#
E1i#
AAj#
e0Pq
w#;``
n@!F
N@74
L78G0
n@!V
?hPB
CPB-4
C`B&
"0b@
l0b@
 h0
L70F0
F)a$
A9b$
{dF{
"0b@
o0b@
 h0
@Rh0
L70F0
C@S<
>9`
7m
$hPZ
z{@~
BZ `Ki
b%0t
A1&&
AA'&
c#FB
c>6l@
c*6l@
1Ffc
8ffc
9&cc
<vg``
n@!F
Y@74
L78G0
A){&[
vg4$
0k~6l@
@k~6l@
nhPB
&s``
n@!F
\@74
L78G0
A)6'
C`vf
^9h's{
zrGD
b{ 0
0T(
`0l@
n@!V
78
,T(
b%0t
L70F0
A@74
L78G0
-T(
d0l@
c0l@
 `KI
0T(
BPPk
B/T(
f0l@
f0l@
OIW`
 Sn_
.A(l
  vQX0
$(, 
!@@
P=X0
v<X0
d:X0
p7X0
  T6X0
!@@
B5X0
Z4X0
H4X@
z2X@
p2X0
mXf]T%MP
D!@
mXf]T%MP
D!@
@&
p0v#
7Tp
T(o` C
n@!&
7s
PTgP
A%h ;
A5i ;
T(o
"0b@
AA%"!;
A5#!;
TAb%(t
7s
2XUP
V tA5k![
T(o
h#6.P
"0b@
c0b@
 h0
T(o
n@!&
PTgP
xvi 0
7-
"hPB
A1,"
AA-"
P#c2
`#/2
0#er
n@!&
7w
PTgP
A1t"[
AAu"[
R/`0
T(o
/hPB
A%&#
A5'#
p3e3
P3gs
n@!&
7y
PTgP
A1v#
AAw#
T(}
p;h0
SB`0
BhPB
C$DA
n@!V
7i
FhPB
A1h$
AAi$
GyDA
Jl4l@
 Jl4l@
PGs4
n@!&
PTgP
BPH
BPPH
S:5l@
S&5l@
S&5l@
S$5l@
/%Vc
6EVc
:UW`0
T(}
WhPB
A%m%
n@!&
[hPB
BPIk
n@!&
7'
PTgP
A1$&[
AA%&[
CPc5FA
c<6l@
c(6l@
c(6l@
7j
gfFA
sfjc
t&gc
{Fgc
khPB
^92
^9;Wr
Psc7
`s/7
0sew
n@!&
7w
PTgP
A1t'[
AAu'[
T(}
P{h0
7&
7i
;.P
"0b@
~0b@
 h0
b0l@
b0l@
OIw`
`+A(l
  `PX0
!@@
^<X0
^8X0
T7X0
@7X`
f5X0
\5X0
!@@
\2X@
R2X0
mXf]T%MP
D!@
mXf]T%MP
D!@
T(a0
A)c ;
T(aP
N"PA
V \A)
T(a
T(a
T(a
)\A)
ve 0
b%$t
"0b@
e0b@
 h0
 VBB'
'eBA
 *m2l@
0*m2l@
A*k2l@
wR'c
T(o
f*PA
"0b@
g0b@
 h0
 VBB'
: .c3;
b%$t
^9r
a7=CA
^9{S6
$h`7d
T(o
"0b@
k0b@
 h0
T(u
+\A)
CpB'4l@
Ap!Ds
@Du}
B5X@
V3X0
L3X0
FAB
T(a0
A)c ;
T(aP
N"PA
V \A)
T(a
T(a
T(a
)\A)
ve 0
b%$t
"0b@
e0b@
 h0
 VBB'
'eBA
 *m2l@
0*m2l@
A*k2l@
wR'c
T(o
f*PA
"0b@
g0b@
 h0
 VBB'
:0.c3;
b%$t
^9r
a7=CA
^9{S6
$h`7d
T(o
"0b@
k0b@
 h0
T(u
+\A)
CpB'4l@
Ap!Ds
@Du}
B5X@
V3X0
L3X0
FAB
r)@@@
2K0t
   ,
?T    
EPA
0KPT
Bp~
M[0K`X3
A0@x/
Q\0K`XC
A0@z/
 j0x
\0X0
G D
oA!@
bool
F
@0F
zDEA
 0AIAL7
A1bP
T  A
2,ApM
2,B0
05f0
@G*(
(2bP
1K0T
(2bP
1K0T
(2bP
1K0T
dAF
A0@l0 j
h0sX
(2bP
_PB 
(2bP
_PB 
 (FR
(2bP
_PB 
 (FR
$[A+
@.Xp
A0@f&
rTp\
q=~Q
rTp\
q=~Q
rTp\
A.Xp
q=~Q
F1bp
B1bp
C1bp
#pO|D
tzFP
tzFP
(2bp
^ $#
D2bp
^`$#
TzD0
TzD0
#8oW
tzFP
@F
`0Fp
A0@`
`0FP
A0@Z
 y+
 HF
aF
A0@^
%(*Id
`0FP
A0@Xo
g7FP
E$4KP
A0@Xo
-2(b
A0@`
<:p*RA
-6(b
4MF
6 N!
DL7DP0bp
\0bP
yR7bp
_@u#
 |#
@!-0@
 |#
@!-0@
`>Cu
~^eso
#Hg|
A0bPx!
_Px#
@)WA9
^oB1
`>Cu
~^eso
#Hg|
A0bPx!
1%|2
_P|#
@*WA9
4bpx!
P@ 
`>Cu
~^eso
#Hg|
A0bPx!
1%|2
_P|#
@*WA9
4bpx!
P@ 
0l@4
A!DTp@
00K0T
0l@P
D0l@
0l@d
ERB
A0@V0
%`jA
T   D
A8HA
Qp?S
2,L0bp
F2X@
DYt0X@
 8
7ja
A0@~1(
H#($
A0@H2
?T   D
A0K 
2@Gpo
A0@t0 
vB.P
\2X@
#8K]=
2TDPL
A0@Z0
A0@b0
s(m
B0KP
P\cp
A%H"
783A
<DPD
:1bp
AO7
PCZHij!U
Q` D
G0bpx!
A3bPx!
Q+"D),"
G0bpx!
DYR2X@
!@p
4@ 
s(IA{
7$r@
7<v@
s(P
2s(
7T~ 
2PV0
YPi0
"Ha/
 RA.
2lZP
1bpx!
E0bpx!
!D0bpx!
G0bpx!
F0bpx!
_-HT
1bpx!
F0bpx!
M*! 0
DYJ1X@
&$D1
`?YT
2 B0
E0bp
6KpT
D1bp
_ l#
_`l#
xDyBL7
e0bp
e0bp
e0bp
e0bp
$RJ %
1bpx!
` 7
2LLp
@}WA9
4bpx!
C L7
4bpx!
!(H1X0
?T    
t L7
r0bp
2 G0bp
@r0bp
@`D"
0bPx!
2HO0bPx!
0bpx!
 wWR
#`u}d
# K^
28A0
7pt@
t0bp
2$JP
u0bp
u0bp
O0bp
QD #
(!F
dN~c
tbPE
2lAP
6bPx!
u0bpx!
 MA-w
1bpx!
RA #
0bpx!
2bpx!
*|1bpx!
2bpx!
PD #
b0X@
GAB
_@|#
$RJ %
1bpx!
P@ 
@@@@
 Hvc
7$l
F0bp
P~pE
2,H0bPx!
z0bp
z0bp
$RJ %
1bpx!
BRA,
!,.1
@F
@F
48F
5@F
!-0@
 :
SD"
B0X0
j@L7
A0bP
1bpx!
ZB.d
Py0bp
RA!#
^0bp
1bpx!
l1X@
D0XPB
`t0bp
pt0bp
VAK
fAf
Q@F
 9XAZ
FAB
7dR0
@\`PB
Vpm5
x `^
@E*4
BT(
6X!0
bT(
T(C
2$J0P
r)@@@
2K0t
q=~q
Y0bP
rA9A
h0bP
Y0bP
sAMA
   ,
?T    
0KPT
2(FP
wxFQ
/8MED
   ,
?T    
0KPT
2(FP
wxFQ
/8MED
/8MED
   ,
?T    
'xAQ
 $pP
TPD!A
(sh
/8MED
/8MED
/8MED
V.((
1bpx!
1LA(d
a@T 
sS 
Z.()
b@T 
sS0
2,LPG*
1bpx!
Z0bP
;K`t
Z0bP
;K`t
2 IP
1bpx!
sW 
Z0bP
;K`t
2 IPG
1bpx!
[0bP
n8"f
A0@dO
(!Xk
2(F0
2 J0
h0bP
A1bP
n8$f
A0@fO
f.(+
(!Xs
2(F0
2 J0
h0bP
A1bP
J/(T
n8&f
A0@hO
(!X{
2(F0
2 J0
h0bP
A1bP
2PP0
2HT0
h0bP
1bpx!
B3K@
E$7
7 j
s[
k 7
7 l
2$J0
1bpx!
7 k
s\
l 7
7 m
2$J0
1bpx!
28O0
-h 8
X4sZ
7 l
s]
m 7
7 n
2$J0
1bpx!
28O0
-h 8
X4sZ
\0bP
tC 4
`?YT
7\0
^0Kp7 
yI7bp
M7bp
yA7bp
_0t#
E7bp
2@I0
28M0bp
$~0bp
4~0bp
~0bp
~0bPx!
`?YT
7\0
^0Kp7 
yI7bp
M7bp
yA7bp
_0t#
E7bp
2@I0
28M0bp
$~0bp
4~0bp
~0bp
~0bPx!
2`Q0
C0Kp
2XU0bp
0bPx!
`?YT
7\0
^0Kp7 
yI7bp
M7bp
yA7bp
_0t#
E7bp
2@I0
28M0bp
$~0bp
4~0bp
~0bp
~0bPx!
2`Q0
C0Kp
2XU0bp
0bPx!
2p[P
, 1bp
< 1bp
 1bp
yV0X
C L7
g0bp
g0bp
g0bp
@5WA9
4bpx!
C L7
0bpx!
PA-D
A7
2HO0bPx!
A>0%
0bpx!
E\7
AY0%
e1bp
e1bp
4bpx!
d 7
C L7
aPA9
$RJ %
1bpx!
O|s
,>R[g
!(H3X0
x0X0
C L7
g0bp
g0bp
g0bp
@5WA9
4bpx!
C L7
0bpx!
PA-D
A7
2HO0bPx!
A>0%
0bpx!
E\7
AY0%
e1bp
e1bp
4bpx!
d 7
C L7
aPA9
$RJ %
1bpx!
O|s
pC0&L
C L7
c2bp
 cRI"
dPA9
1bPx!
h 7
*0bp
0bpx!
A0bPx!
A0bPx!
KP/#
AQ/#
4bpx!
,>r[g
!(D5X0
|2X@
t2X0
!(L1X0
D Hq
P@ 
D Hq
P@  
C L7
g0bp
g0bp
g0bp
@5WA9
4bpx!
C L7
0bpx!
PA-D
A7
2HO0bPx!
A>0%
0bpx!
E\7
AY0%
e1bp
e1bp
4bpx!
d 7
C L7
aPA9
$RJ %
1bpx!
O|s
pC0&L
C L7
c2bp
 cRI"
dPA9
1bPx!
h 7
*0bp
0bpx!
A0bPx!
A0bPx!
KP/#
AQ/#
4bpx!
C L7
a3bp
 aSI"
hPA9
1bPx!
l 7
:0bp
0bpx!
A0bPx!
B0bPx!
O0?#
A1?#
"$e?A
4bpx!
,>R[
!(@7X0
x4X@
p4X0
!(H3X0
x0X0
D Hq
 wWR
#`u}d
# K^
l0bp
l0bp
p Ay
v0bp
w0bp
2,LPx
1bpx!
 :
2LT0bp
 W
 [
 $@b
 wWR
#`u}d
# K^
l0bp
l0bp
p Ay
v0bp
w0bp
2,LPx
1bpx!
 :
2LT0bp
 W
 [
 $@b
1bPx!
y1bp
|1bp
APf`
}1bp
}1bp
S0bp
& FA
 wWR
#`u}d
# K^
l0bp
l0bp
p Ay
v0bp
w0bp
2,LPx
1bpx!
 :
2LT0bp
 W
 [
 $@b
1bPx!
y1bp
|1bp
APf`
}1bp
}1bp
S0bp
& FA
?T    
 2bpx!
tPL 
<t0bp
Lt0bp
6<`f
a 7
2HPp
WA9
&-F
 }
(-F
r1bp
r1bp
4bpx!
 8~c
 q
T'
HLa.P
& FA@ 
P@ H
?T    
 2bpx!
tPL 
<t0bp
Lt0bp
6<`f
a 7
2HPp
WA9
&-F
 }
(-F
r1bp
r1bp
4bpx!
 8~c
 q
T'
HLa.P
70?
<>2bp
L>2bp
V`&Z
pC`.
A0bPx!
J@+#
AA+#
"u+A
4bpx!
!QD0X@
P@ 
?T    
 2bpx!
tPL 
<t0bp
Lt0bp
6<`f
a 7
2HPp
WA9
&-F
 }
(-F
r1bp
r1bp
4bpx!
 8~c
 q
T'
HLa.P
70?
<>2bp
L>2bp
V`&Z
pC`.
A0bPx!
J@+#
AA+#
"u+A
4bpx!
fAf
n jF
gfF
ifF
V@3z
7pn
30bp
<3bp
<3bp
0bpx!
!uF
 (Rg
#uF
FABl
nP*b
Z*(+
daA
2$JPE!#
0bpx!
2bpx!
2,LP
vF`T
0bpx!
"<sq
l0X@
nP*b
Z*(+
daA
2$JPE!#
0bpx!
2bpx!
2,LP
vF`T
0bpx!
"<sq
Hb$F
=#0*
N1X@
H0XP
nP*b
Z*(+
daA
2$JPE!#
0bpx!
2bpx!
2,LP
vF`T
0bpx!
"<sq
Hb$F
=#0*
RA #
yAmt
 (z
j1XP
0d0XP
@@@@
 Hvc
7(m
(m0bp
0m0bp
8m0bp
(\QB@
|0bp
|0bp
L,A
G=(%
J\QB@
C L7
  PCI
$1bp
 $QI"
4bpx!
 X42
@@@@
 Hvc
7(m
(m0bp
0m0bp
8m0bp
(\QB@
|0bp
|0bp
L,A
G=(%
J\QB@
C L7
  PCI
$1bp
 $QI"
4bpx!
 X42
7$~
2|^0bp
_(}1bp
8}1bp
d 7
0bpx!
@@@@
 Hvc
7(m
(m0bp
0m0bp
8m0bp
(\QB@
|0bp
|0bp
L,A
G=(%
J\QB@
C L7
  PCI
$1bp
 $QI"
4bpx!
 X42
7$~
2|^0bp
_(}1bp
8}1bp
d 7
0bpx!
B #c
7(%
f`"J
,%2bp
AS"#
<02bp
\QB@
*fD+
42bp
42bp
$RJ %
1bpx!
o Jg
A0b`
%0fo
%8*Id
0bpx!
$2bpx!
0bpx!
DvA+
0bpx!
0bpx!
E @
';b`
7P0.@
0bpx!
SI"#
0bpx!
0bpx!
 HF
r Ia
H0X`
A0b`
%0fo
%8*Id
0bpx!
$2bpx!
0bpx!
0bpx!
0bpx!
F3
dG3
-1bpx!
$2bpx!
-1bpx!
:1bpx!
;1bpx!
r Ia
z0X`
$)a 
E @
r Ia
]0bP
|PF 
}0bp
tC He
]0bP
|PF 
}0bp
tC He
A0@j0(F
 4
]0bP
|PF 
}0bp
tC He
A0@j0(F
 4
Vb!
 1bp
UI"#
!1bp
^0XP
`0FP
20G0
20H0bPx!
`0FP
20G0
20H0bPx!
ZAf
ZAf
`0FP
20G0
20H0bPx!
ZAf
ZAf
2`S0
2`T0bPx!
2TVP
H%X5
P0XP
2 f
58F
6@F
 0
!-0@
 ;
TH"
20MP
)1bp
<A5)
D0bP
A0bP
P<1bp
RA!#
E0bp
E0bP
A0bP
A0bp
~0bp
E0bP
A0bP
2 f
58F
6@F
 0
!-0@
 ;
TH"
20MP
)1bp
<A5)
D0bP
A0bP
P<1bp
RA!#
E0bp
E0bP
A0bP
A0bp
~0bp
E0bP
A0bP
)DF
1 t$
FEK 
@*(d
Z3X0
2 f
58F
6@F
 0
!-0@
 ;
TH"
20MP
)1bp
<A5)
D0bP
A0bP
P<1bp
RA!#
E0bp
E0bP
A0bP
A0bp
~0bp
E0bP
A0bP
)DF
1 t$
FEK 
@*(d
pC1+
 2bp
C0+#
J0bP
A0bP
TP2i
/0bpx!
L+3bp
 }#
0@F
^0bp
!`B>
 }#
0@F
^0bp
!`B>
~pF
"-0@
 }#
0@F
^0bp
!`B>
~pF
"-0@
2PQ0
2PS0
E0bP
A0bP
A0bp
Pv1bp
Hso
4bPx!
sCP
4bPx!
sCP
,>R[
4bPx!
sCP
 }#
0@F
^0bp
!`B>
 }#
0@F
^0bp
!`B>
~pF
"-0@
 }#
0@F
^0bp
!`B>
~pF
"-0@
2PQ0
2PS0
E0bP
A0bP
A0bp
Pv1bp
Hso
`>Cu
~^eso
#Hg|
`0bp
`0bp
`0bp
`0bp
$RJ %
1bpx!
2 E0bPx!
*HA+ 
$RJ %
1bpx!
`>Cu
~^eso
#Hg|
`0bp
`0bp
`0bp
`0bp
$RJ %
1bpx!
2 E0bPx!
*HA+ 
$RJ %
1bpx!
20I0bPx!
P@  
`>Cu
~^eso
#Hg|
`0bp
`0bp
`0bp
`0bp
$RJ %
1bpx!
2 E0bPx!
*HA+ 
$RJ %
1bpx!
20I0bPx!
C L7
/1bp
 /QI"
4bpx!
P@ @
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
C?7
20I0bPx!
A;0%
P@  
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
C?7
20I0bPx!
A;0%
2@M0bPx!
31bp
31bp
AH!
P@ @
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
C?7
20I0bPx!
A;0%
P@  
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
C?7
20I0bPx!
A;0%
2@M0bPx!
31bp
31bp
AH!
P@ @
A0b`
%0fo
,KF
B0F3
_H9U
552bpx!
0bpx!
SI"#
0bpx!
PT e
<eY2bpx!
0bpx!
E @
E @
';b`
%8*Id
 ~+
2@I0
2@Jpm
dG3
0bpx!
$2bpx!
0bpx!
DvA+
0bpx!
0bpx!
1P#8#
*$sf
';b`
A0b`
%0fo
,KF
B0F3
_X9V
552bpx!
0bpx!
SI"#
0bpx!
<eY2bpx!
0bpx!
0)8Zx
C0b`
zba%z
u52bpx!
-1bpx!
WI"#
.1bpx!
9QT E
|eY2bpx!
;1bpx!
`0Fp
_1bP
QA #
~0bp
T)1
`0Fp
_1bP
QA #
~0bp
T)1
 5
 7
`0Fp
_1bP
QA #
~0bp
T)1
 5
 7
_0bP
*1Kp
%QM 
Lsc
`0FP
]0bP
w0bp
`0FP
]0bP
w0bp
`Af
`Af
`0FP
]0bP
w0bp
`Af
`Af
2`S0
2`T0bPx!
2TVP
7$g@
1bpx!
P{0bp
RA!#
^0bp
1bpx!
ZBId
ba'
2<PP
 u
h#-0@
0 b#
 =
@*(d
;KpU
`3X@
R0X0
7$g@
1bpx!
P{0bp
RA!#
^0bp
1bpx!
ZBId
ba'
2<PP
 u
h#-0@
0 b#
 =
@*(d
;KpU
n(lD
72bp
<BL7
H0bP
A0bP
J0bp
J0bP
A0bP
A0bp
J0bP
A0bP
T`/i
P/YC
>a`
P5X@
B2X0
7$g@
1bpx!
P{0bp
RA!#
^0bp
1bpx!
ZBId
ba'
2<PP
 u
h#-0@
0 b#
 =
@*(d
;KpU
n(lD
72bp
<BL7
H0bP
A0bP
J0bp
J0bP
A0bP
A0bp
J0bP
A0bP
T`/i
P/YC
>a`
V03p
NaG
DaG
F'+H
ilF
6Z~p:ZB
@7X@
 D!
4bPx!
sCP
4bPx!
sCP
,>R[
4bPx!
sCP
g7FP
A0b`
2DPDB
EmJT`
,A1P
$81x
A0b`
2bpx!
r0bpx!
q0bpx!
g7FP
';b`
ToAr
E$4KP
0ou@
';b`
cPA #
s0bpx!
s0bpx!
 r0bpx!
XAf
$'8?x
B0b`
2bpx!
0bpx!
0bpx!
`0X0
g7FP
A0b`
2DPDB
EuJT`
,A1P
1|A(
$81x
A0b`
2bpx!
t0bpx!
s0bpx!
';b`
PA #
0bpx!
0bpx!
0bpx!
,A4P
1lA>
0*8]x
C0b`
2bpx!
0bpx!
0bpx!
Pz'A
F 7
F 7
0(F
 0Pb
@ M 
F 7
0(F
 0Pb
2TVPp!D
n1bp
n1bp
y1bp
y1bp
-3(b
20G0
20H0bPx!
-3(b
20G0
20H0bPx!
 9
 =
-|(b
@ M 
-3(b
20G0
20H0bPx!
 9
 =
-|(b
2`S0
2`T0bPx!
2QF 
(2bp
91bp
7$r@
7Xw
2 G0bp
\v0bp
lv0bp
r/(R
A0@L1
2@QP
 &`b
 ]
 rj
2lY0
7$=AL7
E0bP
A0bP
YCnd
F6Y
eax1Xp
7$r@
7Xw
2 G0bp
\v0bp
lv0bp
r/(R
A0@L1
2@QP
 &`b
 ]
 rj
2lY0
7$=AL7
E0bP
A0bP
YCnd
F6Y
1bPx!
RDK
TDJ
)EF
eax1Xp
7$r@
7Xw
2 G0bp
\v0bp
lv0bp
r/(R
A0@L1
2@QP
 &`b
 ]
 rj
2lY0
7$=AL7
E0bP
A0bP
YCnd
F6Y
1bPx!
RDK
TDJ
)EF
PEWF
J0bP
A0bP
T`3i
P3YC
w _j
eap4Xp
eax1Xp
dN~c
!top
2lAP
x0bpx!
 MA-z
1bpx!
RA #
0bpx!
2bpx!
U+|1bpx!
2bpx!
PD #
v0bPx!
RPM@
fQC 
p1bpx!
2bpx!
dN~c
!top
2lAP
x0bpx!
 MA-z
1bpx!
RA #
0bpx!
2bpx!
U+|1bpx!
2bpx!
PD #
v0bPx!
RPM@
fQC 
p1bpx!
2bpx!
`CoP
2bpx!
1bpx!
QD #
2bpx!
L3X@
N1Xp
h0X@
dN~c
!top
2lAP
x0bpx!
 MA-z
1bpx!
RA #
0bpx!
2bpx!
U+|1bpx!
2bpx!
PD #
v0bPx!
RPM@
fQC 
p1bpx!
2bpx!
`CoP
2bpx!
1bpx!
QD #
2bpx!
v('N
0bPx!
2bpx!
2bpx!
J@e*B
2bpx!
2bpx!
2bpx!
~4X@
`oA1
C,L`
#8K]=
A`A
aPf0
C0KP
,A5bPx!
1bPx!
n8`"
XAIh%1
TB-P
8E0bpx!
=1bp
PAk@
RZ[H
 D0bpx!
A0bpx!
@!CTo
 D0bpx!
H0bpx!
1bPx!
TP'z
0bPx!
1bPx!
A\x%
B!(>@
K0K 
@[w@[p@[r@[s@[v@[z@[{@[}@[~@[
 [o0P
01bPx!
B0Kp
(Bmn
pC Fa0
E @
DYX6X@
H"Da(
E @i
DYX2X@
H"Da(
&4B0
#8K]=
A`A
aPf0
C0KP
,A5bPx!
1bPx!
n8`"
XAIh%1
TB-P
8E0bpx!
=1bp
PAk@
RZ[H
 D0bpx!
A0bpx!
@!CTo
 D0bpx!
H0bpx!
1bPx!
TP'z
0bPx!
1bPx!
A\x%
B!(>@
K0K 
@[w@[p@[r@[s@[v@[z@[{@[}@[~@[
 [o0P
01bPx!
B0Kp
(Bmn
pC Fa0
J0PA
AbI
*`%
np'Y
pC0O`PC
T NP
zA>
pCPSbPC
tC@
`+P)
S=5bp
0bPx!
T0VP
Y!QJ
1bpx!
F0bpx!
0bPx!
 D0bpx!
X0bpx!
AbL7
1bPx!
E @i
DYX:X@
H"Da(
E @
DYX6X@
H"Da(
E @i
DYX2X@
H"Da(
P@ 
&(@AB
naB#
#8K]=
A`A
aPf0
C0KP
,A5bPx!
1bPx!
n8`"
XAIh%1
TB-P
8E0bpx!
=1bp
PAk@
RZ[H
 D0bpx!
A0bpx!
@!CTo
 D0bpx!
H0bpx!
1bPx!
TP'z
0bPx!
1bPx!
A\x%
B!(>@
K0K 
@[w@[p@[r@[s@[v@[z@[{@[}@[~@[
 [o0P
01bPx!
B0Kp
(Bmn
A9F
pC Fa0
J0PA
AbI
*`%
np'Y
pC0O`PC
T NP
zA>
pCPSbPC
tC@
`+P)
S=5bp
0bPx!
T0VP
Y!QJ
1bpx!
F0bpx!
0bPx!
 D0bpx!
X0bpx!
AbL7
1bPx!
TPgz
0bPx!
1bPx!
A'v"(>@7
N :!
,AXt
X0?A
\0K@
7 1
#,H@
A0@B>
j`;)
>hF
-LPH
E0bp
ea'f1
E @
DYX>X@
H"Da(
E @i
DYX:X@
H"Da(
E @
DYX6X@
H"Da(
E @i
DYX2X@
H"Da(
[PB
B\Lh
$&4B0
8taB1
Da,
7<y@
s(P
7l~
7p{ 
2DS0
TA-P
8E0bpx!
=DPD
PA8@
A0bpx!
A3bPx!
BTO(Ro
E0bpx!
7m17
Io(7
Vp"j
V`3p
A0@^5
VP/:
B0bp
DYJ4X@
8HaB1
&4H
7<y@
s(P
7l~
7p{ 
2DS0
TA-P
8E0bpx!
=DPD
PA8@
A0bpx!
A3bPx!
BTO(Ro
E0bpx!
7m17
Io(7
Vp"j
V`3p
A0@^5
VP/:
B0bp
s(I*
78o#L7
78tC
M0K 
M0K 
7lx
tC@
EP;#
0bPx!
1bpx!
F0bpx!
0bPx!
 D0bpx!
R0bpx!
AbL7
1bPx!
,>R[
DYD7X@
E @,
^oBB
 I 
7<y@
s(P
7l~
7p{ 
2DS0
TA-P
8E0bpx!
=DPD
PA8@
A0bpx!
A3bPx!
BTO(Ro
E0bpx!
7m17
Io(7
Vp"j
V`3p
A0@^5
VP/:
B0bp
s(I*
78o#L7
78tC
M0K 
M0K 
7lx
tC@
EP;#
0bPx!
1bpx!
F0bpx!
0bPx!
 D0bpx!
R0bpx!
AbL7
1bPx!
H'0(!
!a'2
3P)1(!
",H@
[AHa
:hF
$F"(
A0@R;
D0bp
@1X@
`oA1
P@ 
&$D1
8HaB1
&4H
!Hdp
20APB
 `aP
2,F0
L7EP
"FAK
$T(
QF5P
q!S~
!Hdp
20APB
 `aP
2,F0
L7EP
"FAK
$T(
QF5P
7(;
[0bPx!
Xl5b
 `gQ
'T(r
L7B0
T(C
Hhs
@Du}#
\0X0
N0X@
@0X0
!Hdp
20APB
 `aP
2,F0
L7EP
"FAK
$T(
QF5P
7(;
[0bPx!
Xl5b
 `gQ
'T(r
L7B0
T(C
Hhs
A0bPx!
[Myh
7/
6X!0
k T(r
L7B0
T(C
 lPA
q!Sm
b1X0
T1X@
F1X0
f0XP
A0b`
%0ho
z.@Da
6 n! 
552bpx!
0bpx!
0bpx!
82bpx!
0bpx!
0bpx!
0bpx!
1bpx!
0bpx!
2bpx!
0bpx!
2bpx!
 "1bpx!
?$s
!N0X
';b`
|.@Fa
6 p!(
_(;s
552bpx!
0bpx!
0bpx!
82bpx!
0bpx!
0bpx!
0bpx!
1bpx!
0bpx!
2bpx!
0bpx!
2bpx!
 #1bpx!
v@3!
?$s
tBf
E0b`
xb'F
`'F
?c'tb
D'F
B.F
A.F
D.F
!/F
 @Hc
 0
!P1X
A0b`
%0ho
2@I0
2@Jp
dG3
0bpx!
0bpx!
0bpx!
0bpx!
1bpx!
0bpx!
0bpx!
0bpx!
4{A"
0bpx!
$1bpx!
';b`
3xb'F
/@vb
4MF
F3
6 v#(
dG3
n10X
u52bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
'b"#
&2bpx!
$&2bpx!
!T2X
q D*
a `oA1
r)@@@
2K0t
q=~q
r)@@@
2K0t
  tp
q=~q
r)@@@
2K0t
  tp
q=~q
[PB
r)@@@
2K0t
q=~q
r)@@@
2K0t
  tp
q=~q
r)@@@
2K0t
  tp
q=~q
[PB
0T'(
)`A
0T'(
)`A
0T'(
I`A
0T'(
I`A
0T%TZ
p%tZ
0T%TZ
p%tZ
t%0Z
sQR
t%0Z
sQR
0T'(
)`A
!Dd0
0T'(
)`A
!Dd0
0T'(
I`A
!Dd0
0T'(
I`A
!Dd0
0T%TZ
p%tZ
0T%TZ
p%tZ
t%0Z
!PhP
t%0Z
!PhP
0T'(
)`A
!Dd0
[PB
0T'(
)`A
!Dd0
[PB
0T'(
I`A
!Dd0
[PB
0T'(
I`A
!Dd0
[PB
0T%TZ
p%tZ
0T%TZ
p%tZ
Z @@
t%0Z
!PhP
t%0Z
!PhP
0T'(
NP '(
sQB
0T'(
sQB
0T'(
NP '(
sQB
0T'(
sQB
sQR
sQR
0T'(
NP '(
!Lgp
0T'(
!Lgp
0T'(
NP '(
!Lgp
0T'(
!Lgp
!PhP
!PhP
0T'(
NP '(
!Lgp
[PB
0T'(
!Lgp
[PB
0T'(
NP '(
!Lgp
[PB
0T'(
!Lgp
[PB
[PB
Z @@
[PB
!PhP
[PB
!PhP
[PB
JpXp
D5b`x!
D5b`x!
D5b`x!
P-k0
D5b`x!
6b`x!
C@ls
D5b`x!
6b`x!
C@ls
D5b`x!
6b`x!
C@ls
,>R[
D5b`x!
6b`x!
D5b`x!
6b`x!
D5b`x!
6b`x!
,>r[
( RP@
D5b`x!
D5b`x!
D5b`x!
( RP@Dc
F/
`5p%@f
F/
B(.@!s
,>R[
a"^a
D5b`x!
6b`x!
C@ls
D5b`x!
6b`x!
C@ls
D5b`x!
6b`x!
C@ls
( RP@4g
F/
`5p%@f
F/
B(.@!c
,A2P
,>r[
a"^a
D5b`x!
6b`x!
D5b`x!
6b`x!
D5b`x!
6b`x!
( RP@tg
F/
`5p%@f
F/
B(.@!c
,A2P
a"^a
0bPx!
4bPx!
4bPx!
4bPx!
(ba
0bPx!
,>R[
a!^a
4bPx!
4bPx!
4bPx!
(ba
0bPx!
!LfP
,>R[
,>r[
a!^a
4bPx!
4bPx!
4bPx!
(ba
0bPx!
!LfP
(bak
,>R[
,>r[
a!^a
E0jB
U8jB
E$jB
U,jB
0T'(
)`A
0T'(
)`A
0T'(
I`A
0T'(
I`A
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
sk`
0T'(
)`A
!Dd0
0T'(
)`A
!Dd0
0T'(
I`A
!Dd0
0T'(
I`A
!Dd0
!He0
!He0
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
H@%|
0T'(
)`A
!Dd0
[PB
0T'(
)`A
!Dd0
[PB
0T'(
I`A
!Dd0
[PB
0T'(
I`A
!Dd0
[PB
!He0
`!c
[PB
!He0
`!c
[PB
E<jB
UDjB
@- $
L7H0
[PB
E0jB
U8jB
H@%g
H@%|
0PE+
[PB
E0jB
U8jB
E$jB
U,jB
nP 7(
AAX 
nP 7(
AAX H@
EX H@
ehXB
@- $
L7H`
ETXD
nP 7(
!Xi0
AAX 
!Xi0
nP 7(
!Xi0
AAX H@
!Xi0
!\k0
EX H@
!\k0
ehXB
@- $
L7H`
ZC+`
ETXD
PI(`%
nP 7(
!Xi0
[PB
AAX 
!Xi0
[PB
nP 7(
!Xi0
[PB
AAX H@
!Xi0
[PB
!\k0
[PB
EX H@
!\k0
[PB
ehXB
@- $
L7H`
ZC+`
[PB
ETXD
PI(`%
[PB
 dp
&,bR
R6,!
2:,!
E4jB
U<jB
$,BR
".5!
*25!
 dp
*JAM
L0X@
elXB
@- $
$,BR
".5!
*25!
 dp
*JAM
L7H``
elXB
@- $
PA*`
PJ,`
^0X@
$,BR
".5!
*25!
 dp
*JAM
L7H``
sqQ
|1X@
elXB
@- $
PA*`
PJ,`
[PB
\UCT i
sQR
sQR
HZCp
hZCp
0ZCp
sQR
!PhP
!PhP
HZCp
hZCp
0ZCp
!PhP
Wa0D
!PhP
pZd D
[PB
!PhP
pZb D
[PB
HZCp
hZCp
[PB
0ZCp
!PhP
Wa0D
!pn0
[PB
`?YT
2 B0
E0bp
6KpT
D1bp
_ l#
_`l#
xDyBL7
`?YT
7\0
^0Kp7 
yI7bp
M7bp
yA7bp
_0t#
E7bp
2@I0
28M0bp
$~0bp
4~0bp
~0bp
~0bPx!
#Uvq
`?YT
7\0
^0Kp7 
yI7bp
M7bp
yA7bp
_0t#
E7bp
2@I0
28M0bp
$~0bp
4~0bp
~0bp
~0bPx!
2`Q0
C0Kp
2XU0bp
0bPx!
#Uwq
`?YT
7\0
^0Kp7 
yI7bp
M7bp
yA7bp
_0t#
E7bp
2@I0
28M0bp
$~0bp
4~0bp
~0bp
~0bPx!
2`Q0
C0Kp
2XU0bp
0bPx!
2p[P
, 1bp
< 1bp
 1bp
#Uxq
FA G
<P$M
zoA5
FA G
<P$M
e0bp
e0bp
e0bp
e0bp
$RJ %
1bpx!
` 7
2LLp
@}WA9
4bpx!
C L7
4bpx!
C L7
g0bp
g0bp
g0bp
@5WA9
4bpx!
C L7
0bpx!
PA-D
A7
2HO0bPx!
A>0%
0bpx!
E\7
AY0%
e1bp
e1bp
4bpx!
d 7
C L7
aPA9
$RJ %
1bpx!
O|s
,>R[g
tTvq
C L7
g0bp
g0bp
g0bp
@5WA9
4bpx!
C L7
0bpx!
PA-D
A7
2HO0bPx!
A>0%
0bpx!
E\7
AY0%
e1bp
e1bp
4bpx!
d 7
C L7
aPA9
$RJ %
1bpx!
O|s
pC0&L
C L7
c2bp
 cRI"
dPA9
1bPx!
h 7
*0bp
0bpx!
A0bPx!
A0bPx!
KP/#
AQ/#
4bpx!
,>r[g
tTwq
C L7
g0bp
g0bp
g0bp
@5WA9
4bpx!
C L7
0bpx!
PA-D
A7
2HO0bPx!
A>0%
0bpx!
E\7
AY0%
e1bp
e1bp
4bpx!
d 7
C L7
aPA9
$RJ %
1bpx!
O|s
pC0&L
C L7
c2bp
 cRI"
dPA9
1bPx!
h 7
*0bp
0bpx!
A0bPx!
A0bPx!
KP/#
AQ/#
4bpx!
C L7
a3bp
 aSI"
hPA9
1bPx!
l 7
:0bp
0bpx!
A0bPx!
B0bPx!
O0?#
A1?#
"$e?A
4bpx!
,>R[
FAB
 wWR
#`u}d
# K^
28A0
7pt@
t0bp
2$JP
u0bp
u0bp
O0bp
 wWR
#`u}d
# K^
l0bp
l0bp
p Ay
v0bp
w0bp
2,LPx
1bpx!
 :
2LT0bp
 W
 [
 $@b
 wWR
#`u}d
# K^
l0bp
l0bp
p Ay
v0bp
w0bp
2,LPx
1bpx!
 :
2LT0bp
 W
 [
 $@b
1bPx!
y1bp
|1bp
APf`
}1bp
}1bp
S0bp
 wWR
#`u}d
# K^
l0bp
l0bp
p Ay
v0bp
w0bp
2,LPx
1bpx!
 :
2LT0bp
 W
 [
 $@b
1bPx!
y1bp
|1bp
APf`
}1bp
}1bp
S0bp
FA G
<P$M
FA G
<P$M
xoA5
FA G
<P$M
?T    
t L7
r0bpx!
2 G0bp
@r0bp
@`D"
0bPx!
2HO0bPx!
0bpx!
?T    
 2bpx!
tPL 
<t0bp
Lt0bp
6<`f
a 7
2HPp
WA9
&-F
 }
(-F
r1bp
r1bp
4bpx!
 8~c
 q
T'
HLa.P
HHsTvq
D!$
?T    
 2bpx!
tPL 
<t0bp
Lt0bp
6<`f
a 7
2HPp
WA9
&-F
 }
(-F
r1bp
r1bp
4bpx!
 8~c
 q
T'
HLa.P
70?
<>2bp
L>2bp
V`&Z
pC`.
A0bPx!
J@+#
AA+#
"u+A
4bpx!
D!$
?T    
 2bpx!
tPL 
<t0bp
Lt0bp
6<`f
a 7
2HPp
WA9
&-F
 }
(-F
r1bp
r1bp
4bpx!
 8~c
 q
T'
HLa.P
70?
<>2bp
L>2bp
V`&Z
pC`.
A0bPx!
J@+#
AA+#
"u+A
4bpx!
fAf
n jF
gfF
ifF
V@3z
7pn
30bp
<3bp
<3bp
0bpx!
!uF
 (Rg
#uF
D!$
D!$
FA G
<P$M
(!F
nP*b
Z*(+
daA
2$JPE!#
0bpx!
2bpx!
2,LP
vF`T
0bpx!
"<sq
nP*b
Z*(+
daA
2$JPE!#
0bpx!
2bpx!
2,LP
vF`T
0bpx!
"<sq
Hb$F
=#0*
nP*b
Z*(+
daA
2$JPE!#
0bpx!
2bpx!
2,LP
vF`T
0bpx!
"<sq
Hb$F
=#0*
RA #
yAmt
@@@@
 Hvc
7$l
F0bp
P~pE
2,H0bPx!
z0bp
z0bp
$RJ %
1bpx!
BRA,
!,.1
@@@@
 Hvc
7(m
(m0bp
0m0bp
8m0bp
(\QB@
|0bp
|0bp
L,A
G=(%
J\QB@
C L7
  PCI
$1bp
 $QI"
4bpx!
 X42
@@@@
 Hvc
7(m
(m0bp
0m0bp
8m0bp
(\QB@
|0bp
|0bp
L,A
G=(%
J\QB@
C L7
  PCI
$1bp
 $QI"
4bpx!
 X42
7$~
2|^0bp
_(}1bp
8}1bp
d 7
0bpx!
@@@@
 Hvc
7(m
(m0bp
0m0bp
8m0bp
(\QB@
|0bp
|0bp
L,A
G=(%
J\QB@
C L7
  PCI
$1bp
 $QI"
4bpx!
 X42
7$~
2|^0bp
_(}1bp
8}1bp
d 7
0bpx!
B #c
7(%
f`"J
,%2bp
AS"#
<02bp
\QB@
*fD+
42bp
42bp
$RJ %
1bpx!
o Jg
@1XP
FA G
<P$M
roA5
 y+
 HF
aF
A0b`
%0fo
%8*Id
0bpx!
$2bpx!
0bpx!
DvA+
0bpx!
0bpx!
';b`
7P0.@
0bpx!
SI"#
0bpx!
0bpx!
 HF
A0b`
%0fo
%8*Id
0bpx!
$2bpx!
0bpx!
0bpx!
0bpx!
F3
dG3
-1bpx!
$2bpx!
-1bpx!
:1bpx!
;1bpx!
A0@^
%(*Id
]0bP
|PF 
}0bp
tC He
]0bP
|PF 
}0bp
tC He
A0@j0(F
 4
]0bP
|PF 
}0bp
tC He
A0@j0(F
 4
Vb!
 1bp
UI"#
!1bp
^0XP
`0FP
A0@Xo
#=Hq
`0FP
20G0
20H0bPx!
#=He
`0FP
20G0
20H0bPx!
ZAf
ZAf
#=Hu
`0FP
20G0
20H0bPx!
ZAf
ZAf
2`S0
2`T0bPx!
2TVP
H%X5
P0XP
@F
@F
48F
5@F
!-0@
 :
SD"
GAB
2 f
58F
6@F
 0
!-0@
 ;
TH"
20MP
)1bp
<A5)
D0bP
A0bP
P<1bp
RA!#
E0bp
E0bP
A0bP
A0bp
~0bp
E0bP
A0bP
tTvq
2 f
58F
6@F
 0
!-0@
 ;
TH"
20MP
)1bp
<A5)
D0bP
A0bP
P<1bp
RA!#
E0bp
E0bP
A0bP
A0bp
~0bp
E0bP
A0bP
)DF
1 t$
FEK 
@*(d
tTwq
2 f
58F
6@F
 0
!-0@
 ;
TH"
20MP
)1bp
<A5)
D0bP
A0bP
P<1bp
RA!#
E0bp
E0bP
A0bP
A0bp
~0bp
E0bP
A0bP
)DF
1 t$
FEK 
@*(d
pC1+
 2bp
C0+#
J0bP
A0bP
TP2i
/0bpx!
L+3bp
tTxq
FA G
<P$M
 |#
@!-0@
 }#
0@F
^0bp
!`B>
 }#
0@F
^0bp
!`B>
~pF
"-0@
 }#
0@F
^0bp
!`B>
~pF
"-0@
2PQ0
2PS0
E0bP
A0bP
A0bp
Pv1bp
Hso
4bPx!
sCP
4bPx!
sCP
,>R[
4bPx!
sCP
 |#
@!-0@
 }#
0@F
^0bp
!`B>
 }#
0@F
^0bp
!`B>
~pF
"-0@
 }#
0@F
^0bp
!`B>
~pF
"-0@
2PQ0
2PS0
E0bP
A0bP
A0bp
Pv1bp
Hso
`>Cu
~^eso
#Hg|
A0bPx!
_Px#
@)WA9
4bpx!
`>Cu
~^eso
#Hg|
`0bp
`0bp
`0bp
`0bp
$RJ %
1bpx!
2 E0bPx!
*HA+ 
$RJ %
1bpx!
`>Cu
~^eso
#Hg|
`0bp
`0bp
`0bp
`0bp
$RJ %
1bpx!
2 E0bPx!
*HA+ 
$RJ %
1bpx!
20I0bPx!
`>Cu
~^eso
#Hg|
`0bp
`0bp
`0bp
`0bp
$RJ %
1bpx!
2 E0bPx!
*HA+ 
$RJ %
1bpx!
20I0bPx!
C L7
/1bp
 /QI"
4bpx!
`>Cu
~^eso
#Hg|
A0bPx!
1%|2
_P|#
@*WA9
4bpx!
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
aWvq
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
C?7
20I0bPx!
A;0%
aWwq
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
C?7
20I0bPx!
A;0%
2@M0bPx!
31bp
31bp
aWxq
`>Cu
~^eso
#Hg|
A0bPx!
1%|2
_P|#
@*WA9
4bpx!
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
C?7
20I0bPx!
A;0%
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
C?7
20I0bPx!
A;0%
2@M0bPx!
31bp
31bp
!$@b$D
$L"%Pb%T
%\B&b
&vB'r
$FB$J
%VB%Z
%d"&`
&hb&p
&lb't"'|
'x",
@ Da
<P$MTe]X
!$@b$D
$L"%Pb%T
%\B&b
&vB'r
@F
A0b`
%0fo
,KF
B0F3
_H9U
552bpx!
0bpx!
SI"#
0bpx!
PT e
<eY2bpx!
0bpx!
';b`
%8*Id
 ~+
2@I0
2@Jpm
dG3
0bpx!
$2bpx!
0bpx!
DvA+
0bpx!
0bpx!
1P#8#
*$sf
';b`
A0b`
%0fo
,KF
B0F3
_X9V
552bpx!
0bpx!
SI"#
0bpx!
<eY2bpx!
0bpx!
0)8Zx
C0b`
zba%z
u52bpx!
-1bpx!
WI"#
.1bpx!
9QT E
|eY2bpx!
;1bpx!
`0Fp
A0@`
`0Fp
_1bP
QA #
~0bp
T)1
`0Fp
_1bP
QA #
~0bp
T)1
 5
 7
`0Fp
_1bP
QA #
~0bp
T)1
 5
 7
_0bP
*1Kp
%QM 
Lsc
@ Da
MTe]X
8R4Q
`0FP
A0@Z
`0FP
]0bP
w0bp
`0FP
]0bP
w0bp
`Af
`Af
`0FP
]0bP
w0bp
`Af
`Af
2`S0
2`T0bPx!
2TVP
@ Da
MTe]X
j@L7
A0bP
1bpx!
ZB.d
Py0bp
RA!#
^0bp
1bpx!
l1X`B
7$g@
1bpx!
P{0bp
RA!#
^0bp
1bpx!
ZBId
ba'
2<PP
 u
h#-0@
0 b#
 =
@*(d
;KpU
KHsTvq
`3X`B
7$g@
1bpx!
P{0bp
RA!#
^0bp
1bpx!
ZBId
ba'
2<PP
 u
h#-0@
0 b#
 =
@*(d
;KpU
n(lD
72bp
<BL7
H0bP
A0bP
J0bp
J0bP
A0bP
A0bp
J0bP
A0bP
T`/i
P/YC
>a`
KHsTwq
P5X`B
7$g@
1bpx!
P{0bp
RA!#
^0bp
1bpx!
ZBId
ba'
2<PP
 u
h#-0@
0 b#
 =
@*(d
;KpU
n(lD
72bp
<BL7
H0bP
A0bP
J0bp
J0bP
A0bP
A0bp
J0bP
A0bP
T`/i
P/YC
>a`
V03p
NaG
DaG
F'+H
ilF
6Z~p:ZB
KHsTxq
@7X`B
roA5
4bPx!
sCP
4bPx!
sCP
,>R[
4bPx!
sCP
g7FP
E$4KP
g7FP
A0b`
2DPDB
EmJT`
,A1P
$81x
A0b`
2bpx!
r0bpx!
q0bpx!
g7FP
';b`
ToAr
E$4KP
0ou@
';b`
cPA #
s0bpx!
s0bpx!
 r0bpx!
XAf
$'8?x
B0b`
2bpx!
0bpx!
0bpx!
g7FP
A0b`
2DPDB
EuJT`
,A1P
1|A(
$81x
A0b`
2bpx!
t0bpx!
s0bpx!
';b`
PA #
0bpx!
0bpx!
0bpx!
,A4P
1lA>
0*8]x
C0b`
2bpx!
0bpx!
0bpx!
Pz'A
A0@`
<:p*RA
-6(b
F 7
F 7
0(F
 0Pb
F 7
0(F
 0Pb
2TVPp!D
n1bp
n1bp
y1bp
y1bp
3ITe]X
A0@Xo
-2(b
-3(b
20G0
20H0bPx!
-3(b
20G0
20H0bPx!
 9
 =
-|(b
-3(b
20G0
20H0bPx!
 9
 =
-|(b
2`S0
2`T0bPx!
2QF 
(2bp
91bp
3ITe]X
<P$MTe]X
@"$Db$H
$P"%Tb%X
%`"&db&h
&p"'tb'x
/Bc/D
4Nc4PC5V#5X
5\C6f#6h
5l#7t
E`$ETdEX
DP$DDdDH$GtdGx
Fp$FddFh$L
O@%UTeUX
U`%TDeTH%Vd
Vp%WteWxeVh
dBFdF
eRFeV
fbFff
grFgv
tBGtF
uRGuV
vbGvf
wrGwv
`t0bp
pt0bp
VAK
fAf
Q@F
 9XAZ
7$r@
7Xw
2 G0bp
\v0bp
lv0bp
r/(R
A0@L1
2@QP
 &`b
 ]
 rj
2lY0
7$=AL7
E0bP
A0bP
YCnd
F6Y
O@sTvq
7$r@
7Xw
2 G0bp
\v0bp
lv0bp
r/(R
A0@L1
2@QP
 &`b
 ]
 rj
2lY0
7$=AL7
E0bP
A0bP
YCnd
F6Y
1bPx!
RDK
TDJ
)EF
O@sTwq
GAB
7$r@
7Xw
2 G0bp
\v0bp
lv0bp
r/(R
A0@L1
2@QP
 &`b
 ]
 rj
2lY0
7$=AL7
E0bP
A0bP
YCnd
F6Y
1bPx!
RDK
TDJ
)EF
PEWF
J0bP
A0bP
T`3i
P3YC
w _j
O@sTxq
DJEY
FA G
<P$M
GAB
dN~c
tbPE
2lAP
6bPx!
u0bpx!
 MA-w
1bpx!
RA #
0bpx!
2bpx!
*|1bpx!
2bpx!
PD #
dN~c
!top
2lAP
x0bpx!
 MA-z
1bpx!
RA #
0bpx!
2bpx!
U+|1bpx!
2bpx!
PD #
v0bPx!
RPM@
fQC 
p1bpx!
2bpx!
n2X@
dN~c
!top
2lAP
x0bpx!
 MA-z
1bpx!
RA #
0bpx!
2bpx!
U+|1bpx!
2bpx!
PD #
v0bPx!
RPM@
fQC 
p1bpx!
2bpx!
`CoP
2bpx!
1bpx!
QD #
2bpx!
0`0X
@AB
dN~c
!top
2lAP
x0bpx!
 MA-z
1bpx!
RA #
0bpx!
2bpx!
U+|1bpx!
2bpx!
PD #
v0bPx!
RPM@
fQC 
p1bpx!
2bpx!
`CoP
2bpx!
1bpx!
QD #
2bpx!
v('N
0bPx!
2bpx!
2bpx!
J@e*B
2bpx!
2bpx!
2bpx!
R5X@
@AB
(L1X@
FA G
$]VEi
3ITe]X
poA5
#8K]=
2TDPL
A0@Z0
A0@b0
s(m
B0KP
P\cp
A%H"
783A
<DPD
:1bp
AO7
PCZHij!U
Q` D
G0bpx!
A3bPx!
Q+"D),"
G0bpx!
D3XP
$)B
#8K]=
A`A
aPf0
C0KP
,A5bPx!
1bPx!
n8`"
XAIh%1
TB-P
8E0bpx!
=1bp
PAk@
RZ[H
 D0bpx!
A0bpx!
@!CTo
 D0bpx!
H0bpx!
1bPx!
TP'z
0bPx!
1bPx!
A\x%
B!(>@
K0K 
@[w@[p@[r@[s@[v@[z@[{@[}@[~@[
 [o0P
01bPx!
B0Kp
(Bmn
pC Fa0
a T4X`
`0AA
#8K]=
A`A
aPf0
C0KP
,A5bPx!
1bPx!
n8`"
XAIh%1
TB-P
8E0bpx!
=1bp
PAk@
RZ[H
 D0bpx!
A0bpx!
@!CTo
 D0bpx!
H0bpx!
1bPx!
TP'z
0bPx!
1bPx!
A\x%
B!(>@
K0K 
@[w@[p@[r@[s@[v@[z@[{@[}@[~@[
 [o0P
01bPx!
B0Kp
(Bmn
pC Fa0
J0PA
AbI
*`%
np'Y
pC0O`PC
T NP
zA>
pCPSbPC
tC@
`+P)
S=5bp
0bPx!
T0VP
Y!QJ
1bpx!
F0bpx!
0bPx!
 D0bpx!
X0bpx!
AbL7
1bPx!
a T8X`
  V1X0
4@p Ia
#8K]=
A`A
aPf0
C0KP
,A5bPx!
1bPx!
n8`"
XAIh%1
TB-P
8E0bpx!
=1bp
PAk@
RZ[H
 D0bpx!
A0bpx!
@!CTo
 D0bpx!
H0bpx!
1bPx!
TP'z
0bPx!
1bPx!
A\x%
B!(>@
K0K 
@[w@[p@[r@[s@[v@[z@[{@[}@[~@[
 [o0P
01bPx!
B0Kp
(Bmn
A9F
pC Fa0
J0PA
AbI
*`%
np'Y
pC0O`PC
T NP
zA>
pCPSbPC
tC@
`+P)
S=5bp
0bPx!
T0VP
Y!QJ
1bpx!
F0bpx!
0bPx!
 D0bpx!
X0bpx!
AbL7
1bPx!
TPgz
0bPx!
1bPx!
A'v"(>@7
N :!
,AXt
X0?A
\0K@
7 1
#,H@
A0@B>
j`;)
>hF
-LPH
E0bp
ea'f1
a T<X`
  V5X0
4@p Ia
s(IA{
7$r@
7<v@
s(P
2s(
7T~ 
2PV0
YPi0
"Ha/
 RA.
2lZP
1bpx!
E0bpx!
!D0bpx!
G0bpx!
F0bpx!
_-HT
1bpx!
F0bpx!
M*! 0
7<y@
s(P
7l~
7p{ 
2DS0
TA-P
8E0bpx!
=DPD
PA8@
A0bpx!
A3bPx!
BTO(Ro
E0bpx!
7m17
Io(7
Vp"j
V`3p
A0@^5
VP/:
B0bp
D0Xp
7<y@
s(P
7l~
7p{ 
2DS0
TA-P
8E0bpx!
=DPD
PA8@
A0bpx!
A3bPx!
BTO(Ro
E0bpx!
7m17
Io(7
Vp"j
V`3p
A0@^5
VP/:
B0bp
s(I*
78o#L7
78tC
M0K 
M0K 
7lx
tC@
EP;#
0bPx!
1bpx!
F0bpx!
0bPx!
 D0bpx!
R0bpx!
AbL7
1bPx!
#Da
FAB
7<y@
s(P
7l~
7p{ 
2DS0
TA-P
8E0bpx!
=DPD
PA8@
A0bpx!
A3bPx!
BTO(Ro
E0bpx!
7m17
Io(7
Vp"j
V`3p
A0@^5
VP/:
B0bp
s(I*
78o#L7
78tC
M0K 
M0K 
7lx
tC@
EP;#
0bPx!
1bpx!
F0bpx!
0bPx!
 D0bpx!
R0bpx!
AbL7
1bPx!
H'0(!
!a'2
3P)1(!
",H@
[AHa
:hF
$F"(
A0@R;
D0bp
#Da
B2XP
#2*#3:#4J#5Z#6j#7z#8
%R*%S:%TJ%UZ%Vj%Wz%X
'r*'s:'tJ'uZ'vj'wz'x
z)^X
FA G
MTe]X
@ X
mTe]P$M`
8R4Q
*>0
72#8r
<P$M
4@ Da
k0,h
FA G
MTe]Z
8R4Q
FA G
@"$Db$H
$P"%Tb%X
%`"&db&h
&p"'tb'x
/D#4@
4Hc4P
4Lc5T#5\
5X#6`
5hc6d
6t#7pc7x
FA G
MTe]X
!"#B"%b"'
#1"#3B#5b#7
&a"&cB&eb&g
'q"'sB'ub'w
$DB%F"%H
%V"&`
%fB&
/lb/
4rb4D
4Lc'P#5Tc5X
5`#6dc6h
6p#7vC7
7|"<
7dR0
@\`PB
Vpm5
x `^
@E*4
BT(
6X!0
bT(
T(C
2$J0P
`0XP
!Hdp
20APB
 `aP
2,F0
L7EP
"FAK
$T(
QF5P
l1XP
!Hdp
20APB
 `aP
2,F0
L7EP
"FAK
$T(
QF5P
7(;
[0bPx!
Xl5b
 `gQ
'T(r
L7B0
T(C
Hhs
3Twq
q!Sn
r2XP
f0XP
!Hdp
20APB
 `aP
2,F0
L7EP
"FAK
$T(
QF5P
7(;
[0bPx!
Xl5b
 `gQ
'T(r
L7B0
T(C
Hhs
A0bPx!
[Myh
7/
6X!0
k T(r
L7B0
T(C
 lPA
q!Sm
x3XP
l1XP
3ITe]X
?FDDH
ERDENdEX
E`dFh
Fn$Fp$Gv
GzDG|
HeTD%TN
TJ%UPEUbEV^
WrEWz
@"$Db$H
dP"dD&%F
dLf%N
eX"eT
e`&fdffh
fp&gtfgx
&hb&n
&xb'zB'|"'~
tBGtF
uRGuV
uZG-
5J#5H
vbGvf
wrGwv
JH6hc6l
tc7x
4QUd]
v@ Da
<P$M`
mTe]l
"!""#B"%b"'
#1"#3B#5b#7
&a"&cB&eb&g
'q"'sB'ub'w
2!#2#C2+
2/S2&
35c37334
31#39
6a#6cC6ec6g
7r37tS7vs7x
B"4B$TB&tB(
C24C4TC6tC8
Fb4FdTFftFh
Gr4GtTGvtGx
R"5R$UR&uR(
S25S4US6uS8
Vb5VdUVfuVh
Wr5WtUWvuWx
b"6b$Vb&vb(
c26c4Vc6vc8
fb6fdVffvfh
gr6gtVgvvgx
r"7r$Wr&wr(
s27s4Ws6ws8
vb7vdWvfwvh
$Tb%
4\C5^
6b#5P#4J
4Dc4L
4BETFE6f
6n#M
MrDGp
G|$L
FhdUV
7rC7\DE^
Fb$EPDFf
DBdDL
7zc>
Fff&fl
ftfgp&g\
dbEVf
eRFeD&dV
WzeW
W~%\
e\p%Wt
&|zG|
|xgw
|bGv`
vl'wt
nLGtN
uR't@GuV
L08
T0X
\0x
PD1
RL18
TT1X
V\1x
Xd1
Zl1
\t1
^|1
L28
T2X
\2x
L38
T3X
\3x
4^gq
9i!:
4MF
6 N!
KH#8Rq
A0b`
%0ho
z.@Da
6 n! 
552bpx!
0bpx!
0bpx!
82bpx!
0bpx!
0bpx!
0bpx!
1bpx!
0bpx!
2bpx!
0bpx!
2bpx!
 "1bpx!
?$s
KH#8Re
4@ $
';b`
|.@Fa
6 p!(
_(;s
552bpx!
0bpx!
0bpx!
82bpx!
0bpx!
0bpx!
0bpx!
1bpx!
0bpx!
2bpx!
0bpx!
2bpx!
 #1bpx!
v@3!
?$s
tBf
E0b`
xb'F
`'F
?c'tb
D'F
B.F
A.F
D.F
!/F
 @Hc
 0
KH#8Ru
4@ $
A0b`
%0ho
2@I0
2@Jp
dG3
0bpx!
0bpx!
0bpx!
0bpx!
1bpx!
0bpx!
0bpx!
0bpx!
4{A"
0bpx!
$1bpx!
';b`
3xb'F
/@vb
4MF
F3
6 v#(
dG3
n10X
u52bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
'b"#
&2bpx!
$&2bpx!
KH#8R
4@ $
r@ Da
<P$MTe]X
"!""#B"%b"'
#1"#3B#5b#7
&a"&cB&eb&g
'q"'sB'ub'w
2!#2#C2%c2'
31#33C35c37
6a#6cC6ec6g
7q#7sC7uc7w
C1$C3DC5dC7
Fa$FcDF
:edF
c;q$G
s;tTG
R!%R#ER%eR'
S1%S3ES5eS7
Va%VcEVeeVg
Wq%WsEWueWw
b!&b#Fb%fb'
c1&c3Fc5fc7
fa&fcFfeffg
gq&gsFgufgw
&B!4o
fo$TB
vB(tr
r!'r#Gr%gr
F0 
N0@
V0`
QF1 
SN1@
UV1`
W^1
Yf1
[n1
]v1
_~1
F2 
N2@
V2`
p2@
J30
R3`
Z3x
$BB$F
$T"%Xb%\
%d"&hb&l
&t"'xb'|
rNA
vMZEA
$@#4
%RB%
b-bB&
'~"'x
'|b't
5RC5V
6bC6
c<rC7
DBDD|
Dp$Gt
FddFRDEbdE\
EXDL
TJEUDeT^
Uf%Vd
%\z%Wt
WpE_
_P&eJ&dD
eZFe\
eVffhFfj&fl
fnFgv&gx
uTguR
u`'vN
uLGvf
vBGt@'|
'}rGwp
L08
T0X
\0x
PD1
RL18
TT1X
V\1x
Xd1
Zl1
\t1
^|1
L28
T2X
\2x
L38
T3X
\3x
@"$Db$H
4R#Y
%_*%S:%TJ%UZ%Vj%Wz%X
J00
R0P
Z0p
7j0
?@1
QF1 
SN1@
UV1`
W^1
Yf1
[n1
]v1
_~1
F2 
N2@
V2`
F3`
V3p
j3 
FP A
NP@A!
VP`A
P@C!
FQ E
NQ@E!
VQ`E
Q@G!
FR I
NR@I!%
VR`I
R@K!-
FS M
NS@M!5
VS`M
S@O!=
FT Q
NT@Q!E
VT`Q
T@S!M
FU U
NU@U!U
VU`U
U@W!]
FV Y
NV@Y!e
VV`Y
V@[!m
FW ]
NW@]!u
VW`]
W@_!}
FX a
NX@a!
VX`a
X@c!
FY e
NY@e!
VY`e
Y@g!
FZ i
NZ@i!
VZ`i
Z@k!
F[ m
N[@m!
V[`m
[@o!
F\ q
N\@q!
V\`q
\@s!
F] u
N]@u!
V]`u
]@w!
F^ y
N^@y!
V^`y
^@{!
F_ }
N_@}!
V_`}
rNA
vMZEA
@"$Db$H
$P"%Tb%X
%`"&db&h
&p"'tb'x
/@#4Dc4H
4P#5Tc5X
bC6f
7rC7vC
0T'(
)`A
0T'(
)`A
0T'(
I`A
0T'(
I`A
0T%TZ
p%tZ
0T%TZ
p%tZ
t%0Z
sQR
t%0Z
sQR
0T'(
)`A
!Dd0
0T'(
)`A
!Dd0
0T'(
I`A
!Dd0
0T'(
I`A
!Dd0
0T%TZ
p%tZ
0T%TZ
p%tZ
t%0Z
!PhP
t%0Z
!PhP
0T'(
)`A
!Dd0
0T'(
)`A
!Dd0
0T'(
I`A
!Dd0
0T'(
I`A
!Dd0
0T%TZ
p%tZ
0T%TZ
p%tZ
Z @@
t%0Z
!PhP
t%0Z
!PhP
0T'(
NP '(
sQB
0T'(
sQB
0T'(
NP '(
sQB
0T'(
sQB
sQR
sQR
0T'(
NP '(
!Lgp
0T'(
!Lgp
0T'(
NP '(
!Lgp
0T'(
!Lgp
!PhP
!PhP
0T'(
NP '(
!Lgp
0T'(
!Lgp
0T'(
NP '(
!Lgp
0T'(
!Lgp
Z @@
!PhP
!PhP
$BB$F
%RB%V
&bB&f
'rB'v
4BC4F
5RC5V
6bC6f
7rC7v
DBDDF
ERDEV
FbDFf
GrDGv
TBETF
UREUV
VbEVf
WrEWv
dBFdF
 eTfeX
fbFf
grFgv
o@'tDgtH
tP'u
u`'vdgv
,wtgwx
JpXp
D5b`x!
D5b`x!
D5b`x!
P-k0
D5b`x!
6b`x!
C@ls
D5b`x!
6b`x!
C@ls
D5b`x!
6b`x!
C@ls
,>R[
D5b`x!
6b`x!
D5b`x!
6b`x!
D5b`x!
6b`x!
,>r[
( RP@
D5b`x!
D5b`x!
D5b`x!
( RP@Dc
F/
`5p%@f
F/
B(.@!s
,>R[
a"^a
D5b`x!
6b`x!
C@ls
D5b`x!
6b`x!
C@ls
D5b`x!
6b`x!
C@ls
( RP@4g
F/
`5p%@f
F/
B(.@!c
,A2P
,>r[
a"^a
D5b`x!
6b`x!
D5b`x!
6b`x!
D5b`x!
6b`x!
( RP@tg
F/
`5p%@f
F/
B(.@!c
,A2P
a"^a
r*'s:'tJ
b!|j!
#2*#3:#4J#5
J%UZ%Vj
")Wz%X
E0jB
U8jB
E$jB
U,jB
0T'(
)`A
0T'(
)`A
0T'(
I`A
0T'(
I`A
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
sk`
0T'(
)`A
!Dd0
0T'(
)`A
!Dd0
0T'(
I`A
!Dd0
0T'(
I`A
!Dd0
!He0
!He0
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
H@%|
0T'(
)`A
!Dd0
0T'(
)`A
!Dd0
0T'(
I`A
!Dd0
0T'(
I`A
!Dd0
!He0
`!c
!He0
`!c
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
H@%|
0PE+
E0jB
U8jB
E$jB
U,jB
nP 7(
AAX 
nP 7(
AAX H@
EX H@
ehXB
@- $
L7H`
ETXD
nP 7(
!Xi0
AAX 
!Xi0
nP 7(
!Xi0
AAX H@
!Xi0
!\k0
EX H@
!\k0
ehXB
@- $
L7H`
ZC+`
ETXD
PI(`%
nP 7(
!Xi0
AAX 
!Xi0
nP 7(
!Xi0
AAX H@
!Xi0
!\k0
EX H@
!\k0
ehXB
@- $
L7H`
ZC+`
ETXD
PI(`%
 dp
&,bR
R6,!
2:,!
E4jB
U<jB
$,BR
".5!
*25!
 dp
*JAM
L0X@
elXB
@- $
$,BR
".5!
*25!
 dp
*JAM
L7H``
elXB
@- $
PA*`
PJ,`
^0X@
$,BR
".5!
*25!
 dp
*JAM
L7H``
sqQ
|1X@
elXB
@- $
PA*`
PJ,`
\UCT i
sQR
sQR
HZCp
hZCp
0ZCp
sQR
!PhP
!PhP
HZCp
hZCp
0ZCp
!PhP
Wa0D
!PhP
pZd D
!PhP
pZb D
HZCp
hZCp
Db$H
$P"%T
&^B&b
'nB'r
"4FC4J
0ZCp
!PhP
Wa0D
!pn0
F0 
N0@
V0`
QF1 
SN1@
UV1`
W^1
Yf1
[n1
]v1
_~1
R2P
Z2p
F3 
N3@
V3`
^3@
@"$Db$H
&p"'tb'x
6bC6f
7rC7v
TdEX
@ Da
<P$MTe]X
0bPx!
4bPx!
4bPx!
4bPx!
(ba
0bPx!
,>R[
a!^a
4bPx!
4bPx!
4bPx!
(ba
0bPx!
!LfP
,>R[
,>r[
a!^a
4bPx!
4bPx!
4bPx!
(ba
0bPx!
!LfP
(bak
,>R[
,>r[
a!^a
$BB$F
%RB%V
&bB&f
'rB'v
4RC5V
4bC6BC4rC7n
DBDDF
ERDEV
FbDFf
GrDGv
DOBET
TREUF
VbEVf
WrEWv
dBFdF
eRFeV
fbFff
grFgv
tBGtF
uRGuV
vbGvf
wrGwv
@ Da
<P$MTe]X
""2"$R"&r"(
#22#4R#6r#8
&b2&dR&fr&h
'r2'tR'vr'x
2"32$S2&s2(
32334S36s38
6b36dS6fs6h
7r37tS7vs7x
B"4B$TB&tB(
C24C4TC6tC8
Fb4FdTFftFh
Gr4GtTGvtGx
R"5R$UR&uR(
S25S4US6uS8
Vb5VdUVfuVh
Wr5WtUWvuWx
W~eZ
b%fb'
b*Fb!&b#
_26c?
c:6fdVffvc4Vc6vfh
fr6gtVgl
fvvg{
r"7r9
@"$Db$H
$P"%Tb%X
%`"&db&h
&p"'tb'x
/@#4Dc4H
4P#5Tc5X
5`#6dc6h
6p#7tc7x
?@$DDdDH
DP$ETdEX
E`$FddFh
Fp$GtdGx
O@%TDeTH
TP%UTeUX
U`%VdeVh
Vp%WteWx
_@&dDfdH
dP&eTfeX
e`&fdffh
fp&gtfgx
o@'tDgtH
tP'uTguX
u`'vdgvh
vp'wtgwx
L08
T0X
\0x
PD1
RL18
TT1X
V\1x
Xd1
Zl1
\t1
^|1
L28
T2X
\2x
L38
T3X
\3x
JP0A
RPPAa
ZPpA
PPCa
QXd)
H(`{9
(p-:
(@x:
()pm;
)0y=
h,PK
,P(K
-0*K
H8 -L
(9p}L
; ?M
;0MM
;0NM
;`OM
<PZM
x<pmM
<p|M
>P]N
8>0nN
x>@zN
XHP>[
H@O\
8IPH]
XJ0{_
J@ih
K lj
L l
L@>l
L0zl
x]p
8^`O
X^Ph
x^Po
8i0j
_ZL9TwoOverPi_ZL8expTable_ZL10exp10Table_ZL18asConstRange_hi_in_ZL18asConstRange_lo_in_ZL19asConstRange_hi_out_ZL19asConstRange_lo_out__sin_for_halfllvm.agx2.sinc.f32__isnan_half__isposinf_half__isneginf_half__isinf_half__isnegzero_halfair.tan.f16air.fma.f32llvm.agx2.rcp.f32air.acosh.f16llvm.agx2.rsqrt.f32air.fast_log.f32air.asinh.f16air.fabs.f16air.fabs.f32air.tanh.f16air.fast_exp.f32agx.air.fract.f16.fastair.floor.f16air.fmin.f16agx.air.fract.f16.nonfastair.cosh.f16llvm.exp2.f32air.sinh.f16air.atanh.f16air.fast_log2.f32air.atan2.f16air.atan.f16air.ldexp.f16air.clamp.s.i32air.acosh.v2f16air.acosh.v3f16air.acosh.v4f16air.asinh.v2f16air.asinh.v3f16air.asinh.v4f16air.atanh.v2f16air.atanh.v3f16air.atanh.v4f16agx.air.fract.v2f16.fastagx.air.fract.v2f16.nonfastagx.air.fract.v3f16.fastagx.air.fract.v3f16.nonfastagx.air.fract.v4f16.fastagx.air.fract.v4f16.nonfastair.cosh.v2f16air.cosh.v3f16air.cosh.v4f16air.sinh.v2f16air.sinh.v3f16air.sinh.v4f16air.tan.v2f16air.tan.v3f16air.tan.v4f16air.tanh.v2f16air.tanh.v3f16air.tanh.v4f16air.atan2.v2f16air.atan2.v3f16air.atan2.v4f16air.atan.v2f16air.atan.v3f16air.atan.v4f16air.simdgroup_async_copy_1d.read_Z42__metal_simdgroup_async_copy_1d_impl_step2ILb1EEviPU14MTLthreadgrouphPU9MTLdevicehillvm.agx2.previous.simd.valid.countllvm.agx2.total.simd.valid.countair.simdgroup_async_copy_1d.write_Z42__metal_simdgroup_async_copy_1d_impl_step2ILb0EEviPU14MTLthreadgrouphPU9MTLdevicehiair.simdgroup_async_copy_2d.read_Z46__metal_simdgroup_async_copy_2d_emulated_step1ILb1ELb0EEvmmPU9MTLdevicehmmDv2_mPU14MTLthreadgrouphmmS2_Dv2_liair.simdgroup_async_copy_2d.write_Z46__metal_simdgroup_async_copy_2d_emulated_step1ILb0ELb0EEvmmPU9MTLdevicehmmDv2_mPU14MTLthreadgrouphmmS2_Dv2_liair.simdgroup_async_copy_2d.read.unchecked_Z46__metal_simdgroup_async_copy_2d_emulated_step1ILb1ELb1EEvmmPU9MTLdevicehmmDv2_mPU14MTLthreadgrouphmmS2_Dv2_liair.simdgroup_async_copy_2d.write.unchecked_Z46__metal_simdgroup_async_copy_2d_emulated_step1ILb0ELb1EEvmmPU9MTLdevicehmmDv2_mPU14MTLthreadgrouphmmS2_Dv2_liadd2float__metal_tanf32_internalair.ldexp.f32air.convert.f.f32.u.i64air.convert.f.f32.u.i32reduceair.convert.s.i32.f.f32air.convert.f.f32.s.i32reduce_tan__nan_half__isnan_or_isinf_half__reflect_negate__metal_copysignf16__reduce_2_common__reduce_2_sin__reduce_2_cosair.sinpi.f16air.cospi.f16air.tanpi.f16__metal_ldexpf16_basicair.cospi.v2f16air.cospi.v3f16air.cospi.v4f16air.sinpi.v2f16air.sinpi.v3f16air.sinpi.v4f16air.tanpi.v2f16air.tanpi.v3f16air.tanpi.v4f16air.ldexp.v2f16air.ldexp.v3f16air.ldexp.v4f16__isnan_or_isinf__isinf__isnormal__isnan__nan__inf__exponent__mantissa__metal_copysignf32cosPolyllvm.fmuladd.f32__metal_rcpf32sinPolycospiPolysinpiPolytanpiPolyfast_cospiPolyfast_sinpiPolyfast_tanpiPoly__metal_sinf32llvm.lifetime.start.p0i8llvm.lifetime.end.p0i8__metal_sinpif32__metal_fast_sinpif32__metal_cosf32__metal_cospif32__metal_fast_cospif32__metal_tanf32__metal_fast_tanpif32__metal_tanpif32__metal_sincosf32__metal_expf32_kernel__metal_expf32__metal_exp10f32__metal_logf32__metal_log2f32__metal_log10f32__metal_add12f__metal_add22f__metal_add12condf__metal_add22condf__metal_mul12f__metal_mul22f__metal_mul122f__metal_log2_precise__metal_pow_common__metal_pow_internal__metal_powr_internal__metal_powf32__metal_powrf32__metal_acosf32__metal_acoshf32__metal_asinhf32__metal_asinf32atanfPoly__metal_atanf32__metal_atan2f32__metal_log1pf32__metal_atanhf32__metal_coshf32__metal_sinhf32__metal_tanhf32__metal_fmodf32air.fast_ldexp.f32air.convert.u.i64.f.f32air.convert.u.i32.f.f32air.convert.s.i64.f.f32air.convert.u.i64.f.f16air.convert.s.i64.f.f16air.convert.f.v2f32.u.v2i64air.convert.f.v3f32.u.v3i64air.convert.f.v4f32.u.v4i64air.convert.u.v2i64.f.v2f32air.convert.u.v3i64.f.v3f32air.convert.u.v4i64.f.v4f32air.convert.u.v2i64.f.v2f16air.convert.u.v3i64.f.v3f16air.convert.u.v4i64.f.v4f16air.convert.s.v2i64.f.v2f32air.convert.s.v3i64.f.v3f32air.convert.s.v4i64.f.v4f32air.convert.s.v2i64.f.v2f16air.convert.s.v3i64.f.v3f16air.convert.s.v4i64.f.v4f16__metal_acosv2f32__metal_acosv3f32__metal_acosv4f32__metal_acoshv2f32__metal_acoshv3f32__metal_acoshv4f32__metal_asinv2f32__metal_asinv3f32__metal_asinv4f32__metal_asinhv2f32__metal_asinhv3f32__metal_asinhv4f32__metal_atanv2f32__metal_atanv3f32__metal_atanv4f32__metal_atanhv2f32__metal_atanhv3f32__metal_atanhv4f32__metal_cosv2f32__metal_cosv3f32__metal_cosv4f32__metal_cospiv2f32__metal_cospiv3f32__metal_cospiv4f32__metal_fast_cospiv2f32__metal_fast_cospiv3f32__metal_fast_cospiv4f32__metal_coshv2f32__metal_coshv3f32__metal_coshv4f32__metal_expv2f32__metal_expv3f32__metal_expv4f32__metal_exp2v2f32__metal_exp2v3f32__metal_exp2v4f32__metal_exp10v2f32__metal_exp10v3f32__metal_exp10v4f32__metal_logv2f32__metal_logv3f32__metal_logv4f32__metal_log2v2f32__metal_log2v3f32__metal_log2v4f32__metal_log10v2f32__metal_log10v3f32__metal_log10v4f32__metal_sinv2f32__metal_sinv3f32__metal_sinv4f32__metal_sinpiv2f32__metal_sinpiv3f32__metal_sinpiv4f32__metal_fast_sinpiv2f32__metal_fast_sinpiv3f32__metal_fast_sinpiv4f32__metal_sinhv2f32__metal_sinhv3f32__metal_sinhv4f32__metal_sqrtv2f32__metal_sqrtv3f32__metal_sqrtv4f32__metal_tanv2f32__metal_tanv3f32__metal_tanv4f32__metal_tanpiv2f32__metal_tanpiv3f32__metal_tanpiv4f32__metal_fast_tanpiv2f32__metal_fast_tanpiv3f32__metal_fast_tanpiv4f32__metal_tanhv2f32__metal_tanhv3f32__metal_tanhv4f32__metal_atan2v2f32__metal_atan2v3f32__metal_atan2v4f32__metal_powv2f32__metal_powv3f32__metal_powv4f32__metal_powrv2f32__metal_powrv3f32__metal_powrv4f32__metal_fmodv2f32__metal_fmodv3f32__metal_fmodv4f32__metal_sincosv2f32__metal_sincosv3f32__metal_sincosv4f32air.ldexp.v2f32air.ldexp.v3f32air.ldexp.v4f32air.fast_ldexp.v2f32air.fast_ldexp.v3f32air.fast_ldexp.v4f32air_hadd_s_i8air_hadd_u_i8air_hadd_s_i16air_hadd_u_i16air_hadd_s_i32air_hadd_u_i32air_hadd_s_i64air_hadd_u_i64air_hadd_s_v2i8air_hadd_u_v2i8air_hadd_s_v2i16air_hadd_u_v2i16air_hadd_s_v2i32air_hadd_u_v2i32air_hadd_s_v2i64air_hadd_u_v2i64air_hadd_s_v3i8air_hadd_u_v3i8air_hadd_s_v3i16air_hadd_u_v3i16air_hadd_s_v3i32air_hadd_u_v3i32air_hadd_s_v3i64air_hadd_u_v3i64air_hadd_s_v4i8air_hadd_u_v4i8air_hadd_s_v4i16air_hadd_u_v4i16air_hadd_s_v4i32air_hadd_u_v4i32air_hadd_s_v4i64air_hadd_u_v4i64air_rhadd_s_i8air_rhadd_u_i8air_rhadd_s_i16air_rhadd_u_i16air_rhadd_s_i32air_rhadd_u_i32air_rhadd_s_i64air_rhadd_u_i64air_rhadd_s_v2i8air_rhadd_u_v2i8air_rhadd_s_v2i16air_rhadd_u_v2i16air_rhadd_s_v2i32air_rhadd_u_v2i32air_rhadd_s_v2i64air_rhadd_u_v2i64air_rhadd_s_v3i8air_rhadd_u_v3i8air_rhadd_s_v3i16air_rhadd_u_v3i16air_rhadd_s_v3i32air_rhadd_u_v3i32air_rhadd_s_v3i64air_rhadd_u_v3i64air_rhadd_s_v4i8air_rhadd_u_v4i8air_rhadd_s_v4i16air_rhadd_u_v4i16air_rhadd_s_v4i32air_rhadd_u_v4i32air_rhadd_s_v4i64air_rhadd_u_v4i64air_clz_i8air_clz_i16air_clz_i32air_clz_i64air_clz_v2i8air_clz_v2i16air_clz_v2i32air_clz_v2i64air_clz_v3i8air_clz_v3i16air_clz_v3i32air_clz_v3i64air_clz_v4i8air_clz_v4i16air_clz_v4i32air_clz_v4i64air_ctz_i8air_ctz_i16air_ctz_i32air_ctz_i64air_ctz_v2i8air_ctz_v2i16air_ctz_v2i32air_ctz_v2i64air_ctz_v3i8air_ctz_v3i16air_ctz_v3i32air_ctz_v3i64air_ctz_v4i8air_ctz_v4i16air_ctz_v4i32air_ctz_v4i64air_popcount_i8air_popcount_i16air_popcount_i32air_popcount_i64air_popcount_v2i8air_popcount_v2i16air_popcount_v2i32air_popcount_v2i64air_popcount_v3i8air_popcount_v3i16air_popcount_v3i32air_popcount_v3i64air_popcount_v4i8air_popcount_v4i16air_popcount_v4i32air_popcount_v4i64air_mul_hi_s_i8air_mul_hi_u_i8air_mul_hi_s_i16air_mul_hi_u_i16air_mul_hi_s_i32air_mul_hi_u_i32air_mul_hi_s_i64air.abs.s.i64air_mul_hi_u_i64air_mul_hi_s_v2i8air_mul_hi_u_v2i8air_mul_hi_s_v2i16air_mul_hi_u_v2i16air_mul_hi_s_v2i32air_mul_hi_u_v2i32air_mul_hi_s_v2i64air_mul_hi_u_v2i64air_mul_hi_s_v3i8air_mul_hi_u_v3i8air_mul_hi_s_v3i16air_mul_hi_u_v3i16air_mul_hi_s_v3i32air_mul_hi_u_v3i32air_mul_hi_s_v3i64air_mul_hi_u_v3i64air_mul_hi_s_v4i8air_mul_hi_u_v4i8air_mul_hi_s_v4i16air_mul_hi_u_v4i16air_mul_hi_s_v4i32air_mul_hi_u_v4i32air_mul_hi_s_v4i64air_mul_hi_u_v4i64air_mad_hi_s_i8air_mad_hi_u_i8air_mad_hi_s_i16air_mad_hi_u_i16air_mad_hi_s_i32air_mad_hi_u_i32air_mad_hi_s_i64air_mad_hi_u_i64air_mad_hi_s_v2i8air_mad_hi_u_v2i8air_mad_hi_s_v2i16air_mad_hi_u_v2i16air_mad_hi_s_v2i32air_mad_hi_u_v2i32air_mad_hi_s_v2i64air_mad_hi_u_v2i64air_mad_hi_s_v3i8air_mad_hi_u_v3i8air_mad_hi_s_v3i16air_mad_hi_u_v3i16air_mad_hi_s_v3i32air_mad_hi_u_v3i32air_mad_hi_s_v3i64air_mad_hi_u_v3i64air_mad_hi_s_v4i8air_mad_hi_u_v4i8air_mad_hi_s_v4i16air_mad_hi_u_v4i16air_mad_hi_s_v4i32air_mad_hi_u_v4i32air_mad_hi_s_v4i64air_mad_hi_u_v4i64air_mad_sat_s_i64air_mad_sat_u_i64air_mad_sat_s_v2i64air_mad_sat_u_v2i64air_mad_sat_s_v3i64air_mad_sat_u_v3i64air_mad_sat_s_v4i64air_mad_sat_u_v4i64air_rotate_i8air_rotate_i16air_rotate_i32air_rotate_i64air_rotate_v2i8air_rotate_v2i16air_rotate_v2i32air_rotate_v2i64air_rotate_v3i8air_rotate_v3i16air_rotate_v3i32air_rotate_v3i64air_rotate_v4i8air_rotate_v4i16air_rotate_v4i32air_rotate_v4i64air.acos.f32air.acos.v2f32air.acos.v3f32air.acos.v4f32air.acosh.f32air.acosh.v2f32air.acosh.v3f32air.acosh.v4f32air.asin.f32air.asin.v2f32air.asin.v3f32air.asin.v4f32air.asinh.f32air.asinh.v2f32air.asinh.v3f32air.asinh.v4f32air.atan.f32air.atan.v2f32air.atan.v3f32air.atan.v4f32air.atanh.f32air.atanh.v2f32air.atanh.v3f32air.atanh.v4f32air.cos.f32air.cos.v2f32air.cos.v3f32air.cos.v4f32air.cospi.f32air.cospi.v2f32air.cospi.v3f32air.cospi.v4f32air.fast_cospi.f32air.fast_cospi.v2f32air.fast_cospi.v3f32air.fast_cospi.v4f32air.cosh.f32air.cosh.v2f32air.cosh.v3f32air.cosh.v4f32air.exp.f32air.exp.v2f32air.exp.v3f32air.exp.v4f32air.exp2.f32air.exp2.v2f32air.exp2.v3f32air.exp2.v4f32air.exp10.f32air.exp10.v2f32air.exp10.v3f32air.exp10.v4f32air.log.f32air.log.v2f32air.log.v3f32air.log.v4f32air.log2.f32air.log2.v2f32air.log2.v3f32air.log2.v4f32air.log10.f32air.log10.v2f32air.log10.v3f32air.log10.v4f32air.sin.f32air.sin.v2f32air.sin.v3f32air.sin.v4f32air.sinpi.f32air.sinpi.v2f32air.sinpi.v3f32air.sinpi.v4f32air.fast_sinpi.f32air.fast_sinpi.v2f32air.fast_sinpi.v3f32air.fast_sinpi.v4f32air.sinh.f32air.sinh.v2f32air.sinh.v3f32air.sinh.v4f32air.sqrt.f32llvm.sqrt.f32air.sqrt.v2f32air.sqrt.v3f32air.sqrt.v4f32air.tan.f32air.tan.v2f32air.tan.v3f32air.tan.v4f32air.tanpi.f32air.tanpi.v2f32air.tanpi.v3f32air.tanpi.v4f32air.fast_tanpi.f32air.fast_tanpi.v2f32air.fast_tanpi.v3f32air.fast_tanpi.v4f32air.tanh.f32air.tanh.v2f32air.tanh.v3f32air.tanh.v4f32air.atan2.f32air.atan2.v2f32air.atan2.v3f32air.atan2.v4f32air.pow.f32air.pow.v2f32air.pow.v3f32air.pow.v4f32air.powr.f32air.powr.v2f32air.powr.v3f32air.powr.v4f32air.fmod.f32air.fmod.v2f32air.fmod.v3f32air.fmod.v4f32air.sincos.f32air.sincos.v2f32air.sincos.v3f32air.sincos.v4f32_Z14__agx_smul_satssllvm.agx1.smul.sat.i16_Z14__agx_umul_satttllvm.agx1.umul.sat.i16_Z14__agx_ssub_satssllvm.agx1.ssub.sat.i16_Z14__agx_ssub_satiillvm.agx1.ssub.sat.i32_Z14__agx_usub_satttllvm.agx1.usub.sat.i16_Z14__agx_usub_satjjllvm.agx1.usub.sat.i32_Z10__agx_ctlzcbllvm.ctlz.i8_Z10__agx_ctlzsbllvm.ctlz.i16_Z10__agx_ctlzibllvm.ctlz.i32_Z10__agx_cttzcbllvm.cttz.i8_Z10__agx_cttzsbllvm.cttz.i16_Z10__agx_cttzibllvm.cttz.i32_Z11__agx_ctpopcllvm.ctpop.i8_Z11__agx_ctpopsllvm.ctpop.i16_Z11__agx_ctpopillvm.ctpop.i32air.hadd.s.i8air.hadd.u.i8air.hadd.s.i16air.hadd.u.i16air.hadd.s.i32air.hadd.u.i32air.hadd.s.i64air.hadd.u.i64air.hadd.s.v2i8air.hadd.u.v2i8air.hadd.s.v2i16air.hadd.u.v2i16air.hadd.s.v2i32air.hadd.u.v2i32air.hadd.s.v2i64air.hadd.u.v2i64air.hadd.s.v3i8air.hadd.u.v3i8air.hadd.s.v3i16air.hadd.u.v3i16air.hadd.s.v3i32air.hadd.u.v3i32air.hadd.s.v3i64air.hadd.u.v3i64air.hadd.s.v4i8air.hadd.u.v4i8air.hadd.s.v4i16air.hadd.u.v4i16air.hadd.s.v4i32air.hadd.u.v4i32air.hadd.s.v4i64air.hadd.u.v4i64air.rhadd.s.i8air.rhadd.u.i8air.rhadd.s.i16air.rhadd.u.i16air.rhadd.s.i32air.rhadd.u.i32air.rhadd.s.i64air.rhadd.u.i64air.rhadd.s.v2i8air.rhadd.u.v2i8air.rhadd.s.v2i16air.rhadd.u.v2i16air.rhadd.s.v2i32air.rhadd.u.v2i32air.rhadd.s.v2i64air.rhadd.u.v2i64air.rhadd.s.v3i8air.rhadd.u.v3i8air.rhadd.s.v3i16air.rhadd.u.v3i16air.rhadd.s.v3i32air.rhadd.u.v3i32air.rhadd.s.v3i64air.rhadd.u.v3i64air.rhadd.s.v4i8air.rhadd.u.v4i8air.rhadd.s.v4i16air.rhadd.u.v4i16air.rhadd.s.v4i32air.rhadd.u.v4i32air.rhadd.s.v4i64air.rhadd.u.v4i64air.clz.i8air.clz.i16air.clz.i32air.clz.i64air.clz.v2i8air.clz.v2i16air.clz.v2i32air.clz.v2i64air.clz.v3i8air.clz.v3i16air.clz.v3i32air.clz.v3i64air.clz.v4i8air.clz.v4i16air.clz.v4i32air.clz.v4i64air.ctz.i8air.ctz.i16air.ctz.i32air.ctz.i64air.ctz.v2i8air.ctz.v2i16air.ctz.v2i32air.ctz.v2i64air.ctz.v3i8air.ctz.v3i16air.ctz.v3i32air.ctz.v3i64air.ctz.v4i8air.ctz.v4i16air.ctz.v4i32air.ctz.v4i64air.mul_hi.s.i8air.mul_hi.u.i8air.mul_hi.s.i16air.mul_hi.u.i16air.mul_hi.s.i32air.mul_hi.u.i32air.mul_hi.s.i64air.mul_hi.u.i64air.mul_hi.s.v2i8air.mul_hi.u.v2i8air.mul_hi.s.v2i16air.mul_hi.u.v2i16air.mul_hi.s.v2i32air.mul_hi.u.v2i32air.mul_hi.s.v2i64air.mul_hi.u.v2i64air.mul_hi.s.v3i8air.mul_hi.u.v3i8air.mul_hi.s.v3i16air.mul_hi.u.v3i16air.mul_hi.s.v3i32air.mul_hi.u.v3i32air.mul_hi.s.v3i64air.mul_hi.u.v3i64air.mul_hi.s.v4i8air.mul_hi.u.v4i8air.mul_hi.s.v4i16air.mul_hi.u.v4i16air.mul_hi.s.v4i32air.mul_hi.u.v4i32air.mul_hi.s.v4i64air.mul_hi.u.v4i64air.mad_hi.s.i8air.mad_hi.u.i8air.mad_hi.s.i16air.mad_hi.u.i16air.mad_hi.s.i32air.mad_hi.u.i32air.mad_hi.s.i64air.mad_hi.u.i64air.mad_hi.s.v2i8air.mad_hi.u.v2i8air.mad_hi.s.v2i16air.mad_hi.u.v2i16air.mad_hi.s.v2i32air.mad_hi.u.v2i32air.mad_hi.s.v2i64air.mad_hi.u.v2i64air.mad_hi.s.v3i8air.mad_hi.u.v3i8air.mad_hi.s.v3i16air.mad_hi.u.v3i16air.mad_hi.s.v3i32air.mad_hi.u.v3i32air.mad_hi.s.v3i64air.mad_hi.u.v3i64air.mad_hi.s.v4i8air.mad_hi.u.v4i8air.mad_hi.s.v4i16air.mad_hi.u.v4i16air.mad_hi.s.v4i32air.mad_hi.u.v4i32air.mad_hi.s.v4i64air.mad_hi.u.v4i64air.mad_sat.s.i64air.mad_sat.u.i64air.mad_sat.s.v2i64air.mad_sat.u.v2i64air.mad_sat.s.v3i64air.mad_sat.u.v3i64air.mad_sat.s.v4i64air.mad_sat.u.v4i64air.rotate.i8air.rotate.i16air.rotate.i32air.rotate.i64air.rotate.v2i8air.rotate.v2i16air.rotate.v2i32air.rotate.v2i64air.rotate.v3i8air.rotate.v3i16air.rotate.v3i32air.rotate.v3i64air.rotate.v4i8air.rotate.v4i16air.rotate.v4i32air.rotate.v4i64air.popcount.i8air.popcount.i16air.popcount.i32air.popcount.i64air.popcount.v2i8air.popcount.v2i16air.popcount.v2i32air.popcount.v2i64air.popcount.v3i8air.popcount.v3i16air.popcount.v3i32air.popcount.v3i64air.popcount.v4i8air.popcount.v4i16air.popcount.v4i32air.popcount.v4i6431001.638.1air64-apple-macosx11.0.0llvm-link
b0$
mEX4
X @6
WpLO
C$z8
P$v`
wchar_sizeair.max_device_buffersair.max_constant_buffersair.max_threadgroup_buffersair.max_texturesair.max_read_write_texturesair.max_samplersair.compile.denorms_disableair.compile.fast_math_enableair.compile.framebuffer_fetch_enableApple metal version 31001.638 (metalfe-31001.638.1)Metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/raytracing/raytracing_runtime_nop.metal
$D3
0@D4
dL3
ksi{#
c+s1c
air.get_size_intersection_function_tableagc.illegal_raytracing_function_callair.get_null_intersection_function_tableair.is_null_intersection_function_tableair.get_unique_identifier_intersection_function_tableair.get_null_primitive_acceleration_structureair.is_null_primitive_acceleration_structureair.get_unique_identifier_primitive_acceleration_structureair.get_null_instance_acceleration_structureair.is_null_instance_acceleration_structureair.get_unique_identifier_instance_acceleration_structureair.intersectair.intersect.triangle_dataair.intersect.instancingair.intersect.instancing.triangle_dataair.intersect.instancing.world_space_dataair.intersect.instancing.triangle_data.world_space_data31001.638.1air64-apple-macosx13.0.0/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/raytracing/raytracing_runtime_nop.metal
b0$
P`"tA
#e@F
WpLO
C$va
P$v`
wchar_sizeair.max_device_buffersair.max_constant_buffersair.max_threadgroup_buffersair.max_texturesair.max_read_write_texturesair.max_samplersair.compile.denorms_disableair.compile.fast_math_enableair.compile.framebuffer_fetch_enableApple metal version 31001.638 (metalfe-31001.638.1)Metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/raytracing/raytracing_runtime_emulation.metal
$D3
0@D4
dL3
ksi{#
c+s1c
_Z5asb64mair.get_size_intersection_function_tableagc.illegal_raytracing_function_callair.get_null_intersection_function_tableair.is_null_intersection_function_tableair.get_unique_identifier_intersection_function_tableair.get_null_primitive_acceleration_structureair.is_null_primitive_acceleration_structureair.get_unique_identifier_primitive_acceleration_structureair.get_null_instance_acceleration_structureair.is_null_instance_acceleration_structureair.get_unique_identifier_instance_acceleration_structureair.intersectair.intersect.triangle_dataair.intersect.instancingair.intersect.instancing.triangle_dataair.intersect.instancing.world_space_dataair.intersect.instancing.triangle_data.world_space_data31001.638.1air64-apple-macosx13.0.0/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/raytracing/raytracing_runtime_emulation.metal
__TEXT
__GPU_METADATA
__GPU_LD_MD
B c0
s2R"
b$C4 
S6r&
<`A
>2.Q
P%@Fpg`
RwbVr
ftGd$T
Wfvv
F4VL
DXeH
uJTZ7j
ld\EL
n6~UNt^
agc.coefficient_w
agc.coefficient_depth
agc.coefficient_point_coord
agc.coefficient_primitive_id
agc.coefficient_barycentric_coord
agc.buffer_pointers
agc.sampler_words
agc.sampler_es1_lod_bias
agc.sampler_unique_id
agc.sampler_heap_index
agc.constant_sampler_words
agc.read_image_words
agc.write_image_words
agc.image_dim
agc.image_array_info
agc.image_mipmap_count
agc.image_sample_count
agc.image_pack_format
agc.image_base_level
agc.image_unique_id
agc.image_heap_index
agc.sampler_state_struct_ptr
agc.image_state_struct_ptr
agc.constant_sampler_unique_id
BFBS
AGCCodeTranslator.PrimitiveType
Triangle
Line
Point
AGCCodeTranslator.TessellationType
None
AGCCodeTranslator.StepFunction
PerPatchPerInstance
PerInstance
PerPatch
Constant
AGCCodeTranslator.PartitionMode
FractionalEven
FractionalOdd
Integer
Pow2
AGCCodeTranslator.PatchType
Quad
Triangle
AGCCodeTranslator.ComputeVIRegType
CtxSwitchSizeHI
CtxSwitchSizeLO
CtxSwitchDataHI
CtxSwitchDataLO
LocalIdYZ
LocalIdZ
LocalIdY
LocalIdX
AGCCodeTranslator.FragmentShaderDepthQualifier
Less
Greater
AGCCodeTranslator.VertexShaderVaryingType
Deferred
Primitive
Flat
Linear
AGCCodeTranslator.VertexShaderBuiltinType
PatchREV
PatchID
PatchV
PatchU
TFVertexID
VertexFetchID
VertexID
InstanceFetchID
InstanceID
None
AGCCodeTranslator.BorderColor
OpaqueWhite
OpaqueBlack
TransparentBlack
AGCCodeTranslator.SamplerCompareFunction
Always
NotEqual
Equal
GreaterEqual
Greater
LessEqual
Less
Never
None
AGCCodeTranslator.SamplerMinMagFilter
Bicubic
Linear
Nearest
AGCCodeTranslator.SamplerMipFilter
Linear
Nearest
NotMipmapped
AGCCodeTranslator.SamplerAddressMode
ClampToBorderColor
ClampToZero
MirrorRepeat
Repeat
MirrorClampToEdge
ClampToEdge
AGCCodeTranslator.VertexShaderOutputType
Varying0
ClipDist0
FogCoord
PointSize
BackFaceColor
FrontFaceColor
Position
AGCCodeTranslator.CompileReply
mesh_info
object_info
intersection_info
mtl_post_tessellation_info
mtl_fragment_info
mtl_vertex_info
compute_info
fragment_info
vertex_info
common_info
AGCCodeTranslator.MeshShaderInfo
max_amp_count
primattr_present
needs_threadgroup_counts
max_total_threads_per_threadgroup
primattr_amplified
point_size_amplified
position_amplified
primitive_culled_present
layer_id_present
viewport_id_present
clip_distance_count
point_size_present
out_iterator
force_unclamped_z
amplified_generic_varying_counts
shared_generic_varying_counts
total_amplified_primitive_size
total_shared_primitive_size
total_amplified_tg_size
total_shared_tg_size
total_amplified_vertex_size
total_shared_vertex_size
primitive_type
max_primitive_count
max_vertex_count
threadgroup_dim
AGCCodeTranslator.ObjectShaderInfo
max_total_threads_per_threadgroup
payload_alignment
payload_size
max_threadgroups_per_mesh
threadgroup_dim
AGCCodeTranslator.uint3
AGCCodeTranslator.IntersectionFunctionInfo
max_parallel_leaves_pot
threads_per_leaf_pot
user_payload_alignment
user_payload_size
driver_payload_size
AGCCodeTranslator.ShaderStatistics
compiler_timings
instruction_count
plugin_abs_time
AGCCodeTranslator.PerformanceNumber
abs_time
name
AGCCodeTranslator.InstructionCount
control
total
AGCCodeTranslator.MTLVaryingTypes
types
AGCCodeTranslator.MTLVaryingSemantics
semantics
AGCCodeTranslator.MTLPostTessellationInfo
needs_rev
tessellation_type
max_tessellation_factor
tessellation_factor_scale_enable
step_function
partition_mode
patch_type
AGCCodeTranslator.MTLFragmentInfo
early_fragment_test
has_primitive_buffer_read
manufacture_unlinked_varyings
has_ordered_side_effects
has_side_effects
write_sample_mask_present
discard_present
force_unclamped_z
out_iterator
varying_index_override
varying_types
varying_semantics
AGCCodeTranslator.MTLVertexInfo
varying_types
varying_semantics
builtins
attribs
input_reg_count
AGCCodeTranslator.MTLVertexAttribInput
base_after_divisor
divisor
stride_in_words
offset_in_words
size_in_words
is_instanced
arg_no
register_offset
AGCCodeTranslator.MTLVertexBuiltin
builtin_type
register_offset
AGCCodeTranslator.ComputeKernelInfo
max_total_threads_per_threadgroup
wg_padding_enabled
global_atomics_present
local_atomics_present
vi_inputs
AGCCodeTranslator.ComputeVIInput
type
register_offset
AGCCodeTranslator.FragmentShaderInfo
depth_qualifier
phase_offset
output_mrt_mask_override
input_mrt_mask_override
disable_triangle_merging
AGCCodeTranslator.VertexShaderInfo
transform_feedback_vertex_stride
transform_feedback_buffer_mode
transform_feedback_varying
out_iterator
force_unclamped_z
amplified_generic_varying_counts
shared_generic_varying_counts
clip_distance_count
total_amplified_vertex_size
total_shared_vertex_size
point_size_present
rhw_present
vertex_inputs
AGCCodeTranslator.ComponentCountInfo
component_count_f32_npc
component_count_f32_flat
component_count_f32_linear
component_count_f16_npc
component_count_f16_flat
component_count_f16_linear
AGCCodeTranslator.VertexShaderTransformFeedbackVarying
buffer_offset
buffer_id
uvws_offset
output_size
AGCCodeTranslator.VertexShaderOutIterator
semantic
type
offset_f32
offset_f16
is_f16
AGCCodeTranslator.VertexInputs
builtin_data
attrib_data
AGCCodeTranslator.VertexBuiltinData
register_offset
builtin_type
type
code
component_count
AGCCodeTranslator.VertexAttribData
register_offset
type
code
component_count
AGCCodeTranslator.ShaderInfo
ray_user_payload_alignment
ray_user_payload_size
ray_driver_payload_size
requires_linktime_barrier_patching
has_simdgroup_atomic_notify
has_observable_side_effect
has_threadgroup_barrier
tls_infos
tls_alignment
tls_size
force_dylib_base
is_user_shader
has_hw_buffer_bounds_checking_safety
has_hw_buffer_bounds_checking
buffer_bindings_gpuva_masks
texture_write_mask
bindless_sampler_gather_mask
bindless_texture_gather_write_mask_upper
bindless_texture_gather_write_mask_lower
bindless_texture_gather_mask_upper
bindless_texture_gather_mask_lower
is_instrumented_for_debugging
debug_name
main_offset
const_calc_phase_offset
constant_sampler_air_bitmasks
constant_samplers
debug_type
debug_id
debug_info
AGCCodeTranslator.TLSInfo
offset
name
AGCCodeTranslator.BufferGPUVAMask
gpuva_63_40
bindpoint_index
AGCCodeTranslator.ConstantSampler
bits
border_color
lod_max
lod_min
max_aniso
compare
normalized
mip_filter
min_filter
mag_filter
r_mode
t_mode
s_mode
BFBS
AGCCodeTranslatorG11.CompileReply
common_info
vertex_info
AGCCodeTranslatorG11.ShaderInfo
visible_functions
AGCCodeTranslatorG11.VisibleFunction
offset
name
AGCCodeTranslatorG11.VertexShaderInfo
layer_id_amplified
viewport_id_amplified
point_size_amplified
position_amplified
layer_id_present
viewport_id_present
BFBS
AGCCodeTranslatorG10.CompileReply
common_info
tile_info
fragment_info
compute_info
AGCCodeTranslatorG10.ShaderInfo
visible_functions
AGCCodeTranslatorG10.VisibleFunction
offset
name
AGCCodeTranslatorG10.TileShaderInfo
max_total_threads_per_threadgroup
image_block_sample_length
has_quad_builtins
force_cvr
AGCCodeTranslatorG10.FragmentShaderInfo
image_block_sample_length
explicit_lib
must_shade
has_post_depth_coverage
AGCCodeTranslatorG10.ExplicitLIBInfo
rog_coverage_mask_hi
rog_coverage_mask
AGCCodeTranslatorG10.ComputeKernelInfo
can_optimize_tg_for_execution_width
image_block_data_size
agc.main
agc.finalize
e-p:64:64:64-f32:32:32-i64:64:64-i32:32:32-i16:16:16-v32:32:32-n32-S64
agc.coefficient
agc.read_vi.f32
agx1-apple-ios
agx2-apple-ios
Optimized
Lowered
override-extra-attrib
Accept mismatch between AGX_EXTRA_LLVM_ATTRIB in the Metadata and the environment.
PipelineType
OutputSelection
EnableOpt
Request.Options.FastIsel
Request.Options.FastMath
Request.Options.FPContract
Request.Options.RelocModel
EnableLogging
Unexpected null ConfigMD
Compute
Graphic
Driver
DynamicLibrary
None
Textual
Binary
TextualAndBinary
Strict
Standard
Fast
Static
show-mc-encoding
Show encoding in .s output
Unknown GPU 
Available targets:
TargetFeatures=
Cannot create the TargetMachine
Warning
Info
Performance
Timing
Assembly
[Performance Stats] Instructions: 
 ; Registers: 
 ...
[Timing] 
enable-driver-opt-passes
Enable optimization passes in driver pipeline
disable-fast-math-module-flag
Turn of FastMath module flag for this compilation
agx-debugify
Synthesize debug info before compilation
Cannot create MCInstrInfo
Assembly parsing is not enabled for this target
Error during assembler.
Can't initialize CodeEmitter
Can't initialize AsmBackend
Can't initialize ObjStreamer
Can't create pipeline, unknown CodeGenOutput requested.
unknown type
Driver shader with opt requested (won't honor)
Unknown pipeline type
Can't initialize backend, unhandled OutputSelection
Can't initialize backend
/Library/Logs/Metal
utility
LogLoweredShaders
llvm-agx-shader-
.%%%%%%%%.ll
agx-asm-injection
AsmInjection info file
agx.shaderHash
agxcompiler.config
Request.ShaderID
Request.ShaderType
Fail to open asm shader file: 
Asm injection failed
Fail to open injection file: 
agx.segments
agx1-apple-ios
agx2-apple-ios
-dualphantom
sdag
combine1
legalize_types
combine_lt
legalize_vec
legalize_types2
combine_lv
legalize
combine2
isel
sched
emit
irtranslator
legalizer
regbankselect
instruction-select
agx2-prelegalizer-combiner
agx2-postlegalizer-combiner
Start
------ 
compilation flags for
compilation key description for
Translator Metadata
Target Translator Metadata
Other
LLVM IR
shader 
 ------
Unable to lower addrspacecast
g11g-b0
g12m-a0
g12g-b0
g12x
g13s-a0
g13s-b0
g13c-a0
g13c-b0
g13d-a0
g13d-b0
g14p-a0
g14p-b0
g14g-a0
g14g-b0
// no-op MFUNI for improved clausing
tpp_functions
NumFullRateInstructions
NumHalfRateInstructions
NumQuarterRateInstructions
NumSixthRateInstructions
NumEighthRateInstructions
RateScaledInstructions
MoveInstructions
ImmInstructions
ComplexInstructions
UniformMoveInstructions
UniformLoadInstructions
UniformMoveBytes
UniformLoadBytes
TotalStallCycles
ImmStallCycles
F16StallCycles
F32StallCycles
ComplexStallCycles
TotalMathCycles
TotalMathClauses
ShortClauseInefficiency
AfterPixwaitInstructions
UnpairedMoveInstructions
RegisterFileWritebacks
MoveInstructionWritebacks
RegistersForwarded
PixwaitInstructions
ForwardedIterates
LoadCoefInstructions
NumLoops
TotalLoopInsts
TotalLoopDataInsts
UniformRegisterCount
TextureRegisterCount
SamplerRegisterCount
SpillBufferSize
InvalidScheduleClasses
agx.interpolations
AGX2 Assembly Printer
Unsupported calling convention
Extensions not implemented yet
AGX2 Specific CodeGen Prepare
agx2-codegen-prepare
AGX2 Specific CodeGen Prepare CFGMod
agx2-codegen-prepare-cfgmod
AGX2 Specific CodeGen Prepare: CFG Modifying Part
Unsupported pack/unpack format: 
AGX2 Common Store Backfiller
agx2-common-store-backfiller
AGX2 Common Store Backfiller Pass
AGX2 constant merger pass
AGX2 Expand Pseudos
agx2-expand-pseudos
AGX2 expand pseudo inst pass
AGX2 Image Cache Bit
agx2-image-cache
AGX2 Image Cache Bit Pass
OptimizeImageCacheBits
SampleWriteOverride
SampleReadOverride
ImageWriteBlockOverride
AGX2 IDep Insertion Pass
Unhandled instruction with local fence
AGX2 IDep Insertion
agx2-idep
Unhandled number of load bytes.
agx2-f16
agx2-f32
agx2-uni64
agx2-cf96
agx2-tex192
agx2-uni96
agx2-uni160
agx2-abs32-lo
agx2-abs32-hi
agx2-got64
agx2-got32
agx2-gotss
agx2-got-tls
agx2-addrspace-private
agx2-addrspace-device
agx2-addrspace-device-constant
agx2-addrspace-threadgroup
agx2-addrspace-sampler
agx2-addrspace-texture
agx2-addrspace-coefficients
agx2-addrspace-threadgroup-private
agx2-addrspace-device-private
agx2-addrspace-device-threadgroup
agx2-addrspace-system
agx2-addrspace-uniform
MemoryWriteCacheCtl
MemoryWriteL2Pers
AGX2 iterator forwarding pass
AGX2 Instruction Selection
Unsupported stack access
agx2-isel
DynamicStackStore
 byte dynamic stack store
 byte static stack load
samplesnoalias
constimage(
image(
SampleReadL2Pers
Invalid sample LOD operand for architecture
MemoryReadCacheCtl
SampleReadCacheCtl
SampleWriteCacheCtl
SampleWriteL2Pers
AGX2ISD::FRET
AGX2ISD::VRET
AGX2ISD::READ_SHARED
AGX2ISD::READ_COEFF
AGX2ISD::WRITE_UNIFORM
AGX2ISD::READ_ADDRESS
AGX2ISD::ITR
AGX2ISD::ITR_PROJ
AGX2ISD::ITR_SAT
AGX2ISD::ITR_PROJ_SAT
AGX2ISD::ITR_16x2
AGX2ISD::ITR_PROJ_16x2
AGX2ISD::ITR_3D
AGX2ISD::ITR_PROJ_16x3
AGX2ISD::ITR_4D
AGX2ISD::ITR_PROJ_16x4
AGX2ISD::ITR_32x2
AGX2ISD::ITR_PROJ_32x2
AGX2ISD::ITR_32x3
AGX2ISD::ITR_PROJ_32x3
AGX2ISD::ITR_32x4
AGX2ISD::ITR_PROJ_32x4
AGX2ISD::RCP
AGX2ISD::RSQRT
AGX2ISD::SQRTSTEP
AGX2ISD::QREFL
AGX2ISD::F16DIVSTEP
AGX2ISD::FPTOS8
AGX2ISD::FPTOU8
AGX2ISD::FPTOS8_SCALE
AGX2ISD::FPTOU8_SCALE
AGX2ISD::F16MATMAD4x4
AGX2ISD::F16MATMAD8x8
AGX2ISD::F32MATMAD4x4
AGX2ISD::F32MATMAD8x8
AGX2ISD::SIMDSHFFUPI
AGX2ISD::SIMDSHFFDNI
AGX2ISD::SIMDSHFFUPF
AGX2ISD::SIMDSHFFDNF
AGX2ISD::SPILL8
AGX2ISD::SPILL16
AGX2ISD::SPILL32
AGX2ISD::SPILL48
AGX2ISD::SPILL64
AGX2ISD::SPILL96
AGX2ISD::SPILL128
AGX2ISD::RELOAD8
AGX2ISD::RELOAD16
AGX2ISD::RELOAD32
AGX2ISD::RELOAD48
AGX2ISD::RELOAD64
AGX2ISD::RELOAD96
AGX2ISD::RELOAD128
AGX2ISD::BIT_EXTRACT
AGX2ISD::SELECT_CC_NNAN
AGX2ISD::FLUSH_DENORM
agx2-lower
Invalid sample offset in sample mode itr/itrproj. Only 0, 1, 2, and 3 are supported sample mode offsets.
 + (
-byte load from 
-byte store to  
There are no dynamically indexed uniform loads on G10
enable-cse-in-agx2-iselprepare
Should enable CSE in AGX2 ISel Prepare
fma-shff-hoist-depth-agx2
Should hoist instructions to allow forming fma.shff up to this hoist depth.
AGX_FMA_SHFF_HOIST_DEPTH
Preprocess instructions before the instruction selector
agx2iselprep
AGX2ISelPrepare
Loading 32-bit sized data into 16-bit registers is undefined.
Indirect only supported on G12
Unsupported sqrt intrinsic.
ImageWriteBlockCacheCtl
ImageWriteBlockL2Pers
Invalid offset type
libaccess
]: {
AtomicCacheCtl
AtomicL2Pers
Unknown integer predicate
agx2-post-ra-peephole-regs-live-over-calls
Show the number of registers live over each call
AGX2 Post RA Peephole
agx2-post-ra-peephole
AGX2 post-RA peephole pass
Registers live over call instance: 
bb: 
: caller: 
: callee: 
  gpr16h: 
  gpr16l: 
AGX2 pseudo wait placement pass
agx2-pseudo-wait
CSR_AGX2_INTER
CSR_AGX2_PR
agx2-huge-life-span
Consider any live-interval with a size bigger than this number as being too expensive to break down in region splitting. This is to avoid high compile time. The size of a live-range is the cumulative distance covered by a live-interval in terms of SlotIndex.
Unable to materialize frameindex: invalid opcode!
Unable to materialize frameindex: invalid shift!
Unable to materialize spill!
agx2-rematerialize-large-programs
Use scaling rematerializations limit (100000 virtual registers) or user a supplied value that grows with program size beyond that value
AGX2 Rematerialize
agx2-rematerialize
AGX2 rematerialize pass
Custom AGX2 scheduler.
AvailableMathQ
AvailableMoveQ
AvailableImmQ
AvailableAsyncQ
AvailableLoadLikeQ
AvailableStoreLikeQ
AvailableMovMskQ
AvailableOtherQ
agx2-set-spill-to-lm-tgt-threadgroup-size
Option to set the threadgroup size for the Set Spill to LM Target pass
agx2-set-spill-to-lm-tgt-default-lower-bound
Minimum number of registers we allocate for functions we don't know when processing the representative function (cprog in particular)
agx2-set-spill-to-lm-tgt-spilling-room
Number of memory slots (1 slot == 4 Bytes) we should give to account for spilling heuristic imperfection.
agx2-set-spill-to-lm-tgt-occupancy-limit
Occupancy limit in percent over which the shaders are not even considered for spilling to LM
agx2-set-spill-to-lm-tgt-handle-unspillable
Enable the handling of unspillable live-range (unsafe)
agx2-set-spill-to-lm-tgt-print-liveness
agx2-set-spill-to-lm-tgt-print-regpressure
Print the full regpressure information
Check if we should force spilling to LM
agx2-set-spill-to-lm-tgt
AGX2SetSpillToLMTarget
AGX_SPILL_TO_LM_THREADGROUP_SIZE
cacl1_cacl2
bypl1_cacl2
bypl1_bypl2
disable-agx2-fma-contraction
agx2-new-scheduler
Use the new AGX2 scheduling heuristics
agx2-run-set-spill-to-lm-tgt
Use the optimization that decides how much to spill to LM
enable-agx2-canonicalize-passes
Enable canonicalization passes
disable-agx2-combining
enable-agx2-memop-verifier
Enable verification of presence of Mem Operands
agx2-replace-fast-math-with-relaxed
Add relaxed-math flags to fp operations that have fast.
AGX2 TOC Optimizer
agx2-toc-optimization
AGX2 TOC Optimizer Pass
agx2-frag-sync-func-calls-side-effects
Assume whether or not unknown functions have side effects
Add Frag Sync operations where needed
agx2-frag-sync
driver_param_buffer
Shader has no exit block
AGX2 verifier of memory operands for instructions
Instruction should have MemOp: 
Some instructions should have memory operands
AGX_PER_THREAD_LM_SPILL_BYTES
AGX_THREAD_GROUP_SIZE
AGX_LM_SPILL_LAYOUT_SOA
 disqualified use: 
, ExecutionRate=
LM Spill candidates:
  Spill FI#
 (UsageRate: 
AGX2 nopifier pass
AGX2 repair matmad
agx2-repair-matmad
AGX2 Repair MatMad pass
enable-agx2-postlegalizer-combiner
Enable the agx2 post legalization machine instruction combiner
enable-cse-in-agx2-postlegalizer-combiner
Should enable CSE in AGX2 Postlegalizer Combiner
Combine agx2 machine instrs after legalization
AGX2PostLegalizerCombiner
enable-agx2-postselection-combiner
Enable the agx2 post selection machine instruction combiner
Combine agx2 machine instrs after selection
agx2-postselection-combiner
AGX2PostSelectionCombiner
enable-agx2-prelegalizer-combiner
Enable the agx2 pre legalization machine instruction combiner
enable-cse-in-agx2-prelegalizer-combiner
Should enable CSE in AGX2 Prelegalizer Combiner
Combine agx2 machine instrs before legalization
AGX2PreLegalizerCombiner
Experimental copy LICM pass
agx2-copy-licm
-1.0
AddRelaxedMathFlags
add-relaxed-math-flags
New AGX2 scheduler
TopQ
BotQ
AGX2 lmspill
agx2-lmspill
AGX2 LM spill pass
Invalid multiply factor
Analysis containing CSE Info
cseinfo
Analysis for ComputingKnownBits
gisel-known-bits
GlobalISel Combiner
Control the rules which are enabled. These options all take a comma separated list of rules to disable and may be specified by number or number range (e.g. 1-10).
enable-cse-in-irtranslator
Should enable CSE in irtranslator
gisel-irtranslator
GISelFailure
unable to translate constant: 
unable to translate memop: 
Opcode
unable to translate in big endian mode
unable to lower arguments due to swiftself: 
Prototype
unable to lower arguments: 
unable to translate instruction: 
IRTranslator LLVM IR -> MI
 (in function: 
IRTranslator
gisel-select
cannot select
VReg has no regclass after selection
VReg's low-level type and register class have different sizes
inserting blocks is not supported yet
Select target instructions out of generic instructions
InstructionSelect
enable-cse-in-legalizer
Should enable CSE in Legalizer
gisel-legalize
LostDebugLoc
lost 
NumLostDebugLocs
 debug locations during pass
Legalize the Machine IR a function's Machine IR
unable to legalize instruction
Legalizer
disable-gisel-legality-check
Don't verify that MIR is fully legal between GlobalISel passes
Move/duplicate certain instructions close to their use
localizer
Localizer
Mode of the RegBankSelect pass
regbankselect-fast
Run the Fast mode (default mapping)
regbankselect-greedy
Use the Greedy mode (best local mapping)
gisel-regbankselect
unable to map instruction
impossible
saturated
Assign register bank of generic virtual registers
RegBankSelect
(ID:
, Size:
isValid:
Number of Covered register classes: 
Covered register classes:
], RegBank = 
#BreakDown: 
ID: 
 Cost: 
 Mapping: 
{ Idx: 
 Map: 
Mapping for 
with 
Populated indices (CellNumber, IndexInNewVRegs): 
Mapping ID: 
Operand Mapping: 
Assign the only register bank
single-regbankselect
SingleRegBankSelect
already reported
denied
denied by sandbox
too frequent
quota exceeded
GISelFailure: 
Context:
ContextInst
fixup_agx2_ba_7_1
fixup_agx2_ba_15_1
fixup_agx2_ba_23_1
fixup_agx2_ba_31_1
fixup_agx2_br_7_1
fixup_agx2_br_15_1
fixup_agx2_br_23_1
fixup_agx2_br_31_1
Relocation with symbol difference is not supported.
unsupported relocation on symbol (
FIXME: relocations to absolute targets not yet implemented
Emitted non-G14 instruction for G14
Emitted non-G13 instruction for G13
Emitted non-G12 instruction for G12
Emitted non-G11 instruction for G11
Emitted non-G10 instruction for G10
Instruction not annotated as valid for any ISA
64b-atomics
Enable 64-bit atomics
aluregcount
Display ALU register counts as comments
always-enable-switch-opt
Enable experimental optimization pass for switches. Ignoring heuristics.
alwaysinsertbbcprotection
When inserting BBC protection consider every instruction being bound checked
atpp
Enable Two Pass Punchthrough. Always.
bypassl2atomics
Bypass L2 for atomics
cluster-num
Enable SWWA for remapping cluster num SR.
colorloop-v2
Version 2 of the color loop.
colorloop-v2-unroll
Version 2 of the color loop. Unrolled
constantvaryingdetectwwa
Tell the driver to disable Constant Varying detection in HW for those varying that are used as W in ITRPROJ but are not position W
cprog
Enable constant program hoisting
cprog-allloops
Enable hoisting of all loops in Constant Programs
cprog-cfghoist
Enable CFG hoisting in Constant Programs
cprog-ghoist
Enable Global hoisting in Constant Programs
disable-halfrate-f32-fallback
Disable the scheduler falling back to half rate F32 in high register pressure situations
disable-structurizer
Run without the structurizer enabled.
disablelmoobwaoptimizations
Disable optimizations done for the Localmemory OOB WAs
enable-switch-opt
Enable experimental optimization pass for switches
explicmcopy
Experimental LICM Copy pass
f16divstep
Enable use of F16DivStep if available
forcedis2x2
Force Dis2x2 placement at the beginning of the shader
forceg11restriction
Disable selecting of Uniform in arithmetic instructions
forceindirectcalls
Force all direct calls to use indirect call mode.
forcel1caching
Force buffer caching in the L1
forcel2wti
Force bypassing all the caches in global memops
fp32-atomics
Enable FP32 atomics
frag-pixrel
Place a pixrel instruction at the beginning of fragment and MRC shaders.
fullratef32
This architecture has a full rate F32 unit available
Enable G10 instructions
g10g11
Enable G10/G11 instructions
g10g11g12
Enable G10/G11/G12 instructions
Enable G11 instructions
g11g12
Enable G11/G12 instructions
Enable G12 instructions
g12-local-backfiller
Enable backfilling of g12 local base addresses
g12-oldlibtrunc
Use the old truncation mode for LIB instructions on G12
g12g13
Enable G12/G13 instructions
Enable G13 instructions
g13g14
Enable G13/G14 instructions
g13stk
Enable the new G13 stack instructions
Enable G14 instructions
gin-217
Enable SWWA for GIN-217
gin-220
Enable SWWA for GIN-220
gin-255
Enable software workaround for GIN-255. Radar 38867941
gin-481-expand
Enable SWWA for GIN-481-Expansion
gin-481-nopcopy
Enable SWWA for GIN-481 which adds a Nop before and a Copy after a i64 op
gin-795
Enable SWWA for GIN-795
hasdirectsamplemask
Sample mask produced by pixinfo can be directly used by lldsmp
hoist-nop-end
Hoist nop.end instructions.
idep
Use IDEP bit feature.
ifonlytpp
Do not emit an if-else for tpp shaders, but an if structure
imgcacheopt
Enable optimization sample/image instructions cache optimizations
imgwriteswithlowpersistence
Emit all image writes operations with low-persistence
initallregs
Force all used registers to be initialized
initcoords
Force implicit LOD coordinates to be initialized
insertnop
Insert a NOP at the beginning of every user shader
itrremat
Rematerialize iterates next to samples.
lldsmpalwaysovrd
Emit all LLDSMP with sample mask Override set
local-idep
Enable Local memory/imgblk instructions idep
local-memory-oob
Hardware has local memory out of bounds checking enabled
localfence
Local memory instructions have fence
localidepwawfence
Local memory instructions have a fence for WAW conflicts implemented using idep. Radar 56132709
localmemoryoobaddressingwa_v2
Workaround that put the address in the base, but offsets it by 16-bytes and uses the offset to bring it back into range.
lowmovmsk
Don't aggressively hoist movmsk above all else.
matmadwithopconstraints
MatMad instructions have operand overlapping constraints not caught by tablegen and need late fixup. Radar 47111584
memsyncdetect
Enable detection of memory synchronization detection for setting cache policies
multiple-l2s
Indicates the target is configured with multiple L2s.
nbarrier
Use NBarrier feature.
nbarrier-global-load-block
Use NBarrier feature, but only on loads.
nbarrier-sample-block
Use NBarrier feature, but only on samples.
nbarrier-sample-start
Use NBarrier feature on the first sample.
nbarrierbranch
Use NBarrier feature before branches.
nbarriermath
Use NBarrier feature on math blocks.
nbarriermath16
Use NBarrier feature on math blocks every 16 instructions.
nbarriermath32
Use NBarrier feature on math blocks every 32 instructions.
nbarriermath48
Use NBarrier feature on math blocks every 48 instructions.
nbarriermath64
Use NBarrier feature on math blocks every 64 instructions.
needsbbcmetadataprotection
When using hardware buffer bound checking access to bound metadata needs to be protectedby a syncbuf before running a subsequent shader
nobypl1
Disable bypass L1 cache for texture write instructions.
nodmapromotion
Disable steps in DMA Promotion that put things in uniforms
nolatencyhide
Disable latency-hiding when it breaks clauses.
noloadvec
Stop vectorization of loads
nopromotebindless
Do not promote bindless indices to uniforms
oldstructurizer
Enforce the usage of the classic GPUCFGStructurizer
perthreadlu
Enable per-thread last-use hints
precisecfg
Force the CFG to be fully structurized
prid
Enable PRID synchronization instructions
printregpress
Prints register pressure on assembly output
rdar28936425
Requires rdar 28936425 WA
rdar28960183
Requires rdar 28960183 WA
rdar29313450
Requires rdar 29313450 WA
rdar38476775
Requires rdar 38476775 WA
rdar45513962
Requires rdar 45513962 WA
removeatomics
For experiments: remove atomic instructions where possible
removeglobalmem
For experiments: remove global mem instructions where possible
removelocalmem
For experiments: remove local mem instructions where possible
removemath
For experiments: remove math instructions where possible
removetexturemem
For experiments: remove texture mem instructions where possible
sinkimagewrites
Sink image writes to bunch them together
sqrtstep
Enable new Sqrt Step expansion
sqrtstepscale
Enable scaling hack in new Sqrt Step expansion
support-soft-fault
This architecture support soft fault (i.e. HW will return 0 when loading from an invalid address
toc12
Use a 12-entry TOC.
toc16
Use a 16-entry TOC.
toc20
Use a 20-entry TOC.
toc24
Use a 24-entry TOC.
toc4
Use a 4-entry TOC.
toc6
Use a 6-entry TOC.
toc7
Use a 7-entry TOC.
toc8
Use a 8-entry TOC.
Enable Two Pass Punchthrough
twoforcel2wti
Force bypassing all the TextureWriteOnly in global memops
uniformconstants
Promote some constants to uniform registers.
unroll-colorloop
Always unroll the color loop.
unroll-samplerate
Unroll the loops to sample-rate
zeroindexbindless
Promote offset resource tables for bindless to uniforms
Select the g10 processor
Select the g10p-b0 processor
Select the g11 processor
Select the g11g-a0 processor
Select the g11g-b0 processor
Select the g11m-a0 processor
Select the g11m-b0 processor
Select the g11p-a0 processor
Select the g11p-b0 processor
Select the g12 processor
g12g-a0
Select the g12g-a0 processor
Select the g12m-a0 processor
Select the g12p-a0 processor
Select the g12p-b0 processor
Select the g12x processor
Select the g13 processor
g13-fullf32
Select the g13-fullf32 processor
Select the g13c-a0 processor
Select the g13c-b0 processor
Select the g13d-a0 processor
Select the g13d-b0 processor
Select the g13g-a0 processor
Select the g13g-b0 processor
g13g-b0-nofullf32
Select the g13g-b0-nofullf32 processor
Select the g13p-a0 processor
Select the g13p-b0 processor
Select the g13s-a0 processor
Select the g13s-b0 processor
Select the g14 processor
g14-nofullf32
Select the g14-nofullf32 processor
g14g
Select the g14g processor
Select the g14p processor
G10UnitF16
G10UnitF32
G10UnitIssue
G10UnitIssueControl
G10UnitMAD
G10UnitMOV
G10UnitSMTP
WriteBIT
WriteADD
WriteMOV
WriteF32
WriteINT
WriteCND
WriteF16
WriteFMAT4x4_16_ReadNORM_ReadNORM_ReadNORM
WriteFMAT8x8_16_ReadNORM_ReadNORM_ReadNORM
WriteF32Sat_ReadNORM_ReadNORM
WriteF32Sat_ReadNORM_ReadCONV
WriteF32Sat_ReadCONV_ReadNORM
WriteF32Sat_ReadCONV_ReadCONV
WriteF32_ReadNORM_ReadNORM
WriteF32_ReadNORM_ReadCONV
WriteF32_ReadCONV_ReadNORM
WriteF32_ReadCONV_ReadCONV
WriteF32Grad
WriteFEXP
WriteF32Sat_ReadNORM_ReadNORM_ReadNORM
WriteF32Sat_ReadNORM_ReadNORM_ReadCONV
WriteF32Sat_ReadNORM_ReadCONV_ReadNORM
WriteF32Sat_ReadNORM_ReadCONV_ReadCONV
WriteF32Sat_ReadCONV_ReadNORM_ReadNORM
WriteF32Sat_ReadCONV_ReadNORM_ReadCONV
WriteF32Sat_ReadCONV_ReadCONV_ReadNORM
WriteF32Sat_ReadCONV_ReadCONV_ReadCONV
WriteF32_ReadNORM_ReadNORM_ReadNORM
WriteF32_ReadNORM_ReadNORM_ReadCONV
WriteF32_ReadNORM_ReadCONV_ReadNORM
WriteF32_ReadNORM_ReadCONV_ReadCONV
WriteF32_ReadCONV_ReadNORM_ReadNORM
WriteF32_ReadCONV_ReadNORM_ReadCONV
WriteF32_ReadCONV_ReadCONV_ReadNORM
WriteF32_ReadCONV_ReadCONV_ReadCONV
WriteF32Sat_ReadNORM_ReadNORM_ReadNORM_ReadNORM
WriteF32Sat_ReadNORM_ReadNORM_ReadCONV_ReadNORM
WriteF32Sat_ReadNORM_ReadCONV_ReadNORM_ReadNORM
WriteF32Sat_ReadNORM_ReadCONV_ReadCONV_ReadNORM
WriteF32Sat_ReadCONV_ReadNORM_ReadNORM_ReadCONV
WriteF32Sat_ReadCONV_ReadNORM_ReadCONV_ReadCONV
WriteF32Sat_ReadCONV_ReadCONV_ReadNORM_ReadCONV
WriteF32Sat_ReadCONV_ReadCONV_ReadCONV_ReadCONV
WriteF32_ReadNORM_ReadNORM_ReadNORM_ReadNORM
WriteF32_ReadNORM_ReadNORM_ReadCONV_ReadNORM
WriteF32_ReadNORM_ReadCONV_ReadNORM_ReadNORM
WriteF32_ReadNORM_ReadCONV_ReadCONV_ReadNORM
WriteF32_ReadCONV_ReadNORM_ReadNORM_ReadCONV
WriteF32_ReadCONV_ReadNORM_ReadCONV_ReadCONV
WriteF32_ReadCONV_ReadCONV_ReadNORM_ReadCONV
WriteF32_ReadCONV_ReadCONV_ReadCONV_ReadCONV
WriteFLOG
WriteFMAT4x4_32_ReadNORM_ReadNORM_ReadNORM
WriteFMAT4x4_32_ReadNORM_ReadNORM_ReadCONV
WriteFMAT4x4_32_ReadNORM_ReadCONV_ReadNORM
WriteFMAT4x4_32_ReadNORM_ReadCONV_ReadCONV
WriteFMAT4x4_32_ReadCONV_ReadNORM_ReadNORM
WriteFMAT4x4_32_ReadCONV_ReadNORM_ReadCONV
WriteFMAT4x4_32_ReadCONV_ReadCONV_ReadNORM
WriteFMAT4x4_32_ReadCONV_ReadCONV_ReadCONV
WriteFMAT4x4_32Conv_ReadNORM_ReadNORM_ReadNORM
WriteFMAT4x4_32Conv_ReadNORM_ReadNORM_ReadCONV
WriteFMAT4x4_32Conv_ReadNORM_ReadCONV_ReadNORM
WriteFMAT4x4_32Conv_ReadNORM_ReadCONV_ReadCONV
WriteFMAT4x4_32Conv_ReadCONV_ReadNORM_ReadNORM
WriteFMAT4x4_32Conv_ReadCONV_ReadNORM_ReadCONV
WriteFMAT4x4_32Conv_ReadCONV_ReadCONV_ReadNORM
WriteFMAT4x4_32Conv_ReadCONV_ReadCONV_ReadCONV
WriteFMAT8x8_32_ReadNORM_ReadNORM_ReadNORM
WriteFMAT8x8_32_ReadNORM_ReadNORM_ReadCONV
WriteFMAT8x8_32_ReadNORM_ReadCONV_ReadNORM
WriteFMAT8x8_32_ReadNORM_ReadCONV_ReadCONV
WriteFMAT8x8_32_ReadCONV_ReadNORM_ReadNORM
WriteFMAT8x8_32_ReadCONV_ReadNORM_ReadCONV
WriteFMAT8x8_32_ReadCONV_ReadCONV_ReadNORM
WriteFMAT8x8_32_ReadCONV_ReadCONV_ReadCONV
WriteFMAT8x8_32Conv_ReadNORM_ReadNORM_ReadNORM
WriteFMAT8x8_32Conv_ReadNORM_ReadNORM_ReadCONV
WriteFMAT8x8_32Conv_ReadNORM_ReadCONV_ReadNORM
WriteFMAT8x8_32Conv_ReadNORM_ReadCONV_ReadCONV
WriteFMAT8x8_32Conv_ReadCONV_ReadNORM_ReadNORM
WriteFMAT8x8_32Conv_ReadCONV_ReadNORM_ReadCONV
WriteFMAT8x8_32Conv_ReadCONV_ReadCONV_ReadNORM
WriteFMAT8x8_32Conv_ReadCONV_ReadCONV_ReadCONV
WriteBIT_ReadNORM_ReadNORM_ReadNORM
WriteRCP
WriteRSQRT
WriteSINC
WriteSEL_ReadNORM_ReadNORM_ReadSEL_ReadSEL
WriteINT64
WriteITR
WriteIMM
WriteGMEMStackImm
WriteGMEMStackReg
WriteGMEMUniformImm
WriteGMEMUniformReg
WriteSIMD
WriteQUAD
G11UnitF16
G11UnitF32
G11UnitIssue
G11UnitIssueControl
G11UnitMAD
G11UnitMOV
G11UnitSMTP
G12UnitF16
G12UnitF32
G12UnitIssue
G12UnitIssueControl
G12UnitMAD
G12UnitMOV
G12UnitSMTP
G13UnitF16
G13UnitF32
G13UnitIssue
G13UnitIssueControl
G13UnitMAD
G13UnitSMTP
@rpath/libLLVMInternal.dylib
LLVMInitializeAGX2InstPrinterTgt
LLVMInitializeAGX2AsmParserTgt
.gpu "
unsupported
AGX2
AGX1 Assembly Printer
llvm.ptrauth global lowering not implemented
TotalInstructions
DataInstructions
LatencyHidingInstructions
SharedBankConflicts
ALUInstructions
F16Instructions
F32Instructions
Int16Instructions
Int32Instructions
ControlDataSwitches
ControlInstructions
WDFInstructions
BranchInstructions
SampleInstructions
TextureWriteInstructions
IterateInstructions
GlobalLoadInstructions
GlobalStoreInstructions
LocalLoadInstructions
LocalStoreInstructions
StackLoadInstructions
StackStoreInstructions
ThreadgroupAtomicInstructions
DeviceAtomicInstructions
TempRegisterCount
SharedRegisterCount
VIRegisterCount
CoeffRegisterCount
ImageStateBindingsBytes
SamplerStateBindingsBytes
StackBytes
balanced
Balanced scheduler for AGX1.
AGX1 Specific CodeGen Prepare
AGX1 Specific CodeGen Prepare: CFG Modifying Part
early.exit
early.exit.br
skip.early.exit
exit.cond
agx1-codegen-prepare
AGX1 Common Store backfiller pass
AGX1 expand pseudo inst pass
Unexpected OpCode
IDFCMode
IDFSLCMode
max-agx1-fast-isel
Limit the AGX1 "fast" instruction selector
Unspecified SampleMode for G4Itr
Flat SampleMode not implemented for G4Itr
Unspecified SampleMode for G5Itr
Flat SampleMode not implemented for G5Itr
Unspecified SampleMode for G5ItrProj
Flat SampleMode not implemented for G5ItrProj
agx1-shr16
agx1-shr32
agx1-shr64
agx1-shr96
agx1-shr128
agx1-shr192
agx1-addrspace-stack
agx1-addrspace-global-rw
agx1-addrspace-global-ro
agx1-addrspace-coeff
agx1-addrspace-shared
Unknown select opcode!
AGX1 Instruction Selection
SMPWriteCMode
SMPCMode
SMPWriteSLCMode
SMPSLCMode
grad_1d not supported on architecture!
ImageReadPersist
ImageReadTPUCohMode
ImageReadMCUCohMode
ImageReadSLCCohMode
agx1-isel
DynamicSpill
DynamicStackSpill
 byte dynamic stack spill
StaticSpill
StaticStackStore
 byte static stack store
DynamicReload
DynamicStackLoad
 byte dynamic stack load
StaticReload
StaticStackLoad
Unspecified SampleMode for G4 FITR
Flat SampleMode not implemented for G4 FITR
Unspecified SampleMode for G5 FITR
Flat SampleMode not implemented for G5 FITR
Unspecified SampleMode for G4 FITR_PROJ
Flat SampleMode not implemented for G4 FITR_PROJ
Unspecified SampleMode for G5 FITR_PROJ
Flat SampleMode not implemented for G5 FITR_PROJ
Unspecified SampleMode for G5 FITR_CEM
Flat SampleMode not implemented for G5 FITR_CEM
Unspecified SampleMode for G4 FITR_SAT
Flat SampleMode not implemented for G4 FITR_SAT
Unspecified SampleMode for G5 FITR_SAT
Flat SampleMode not implemented for G5 FITR_SAT
Unspecified SampleMode for G4 FITR_PROJ_SAT
Flat SampleMode not implemented for G4 FITR_PROJ_SAT
Unspecified SampleMode for G5 FITR_PROJ_SAT
Flat SampleMode not implemented for G5 FITR_PROJ_SAT
Unspecified SampleMode for G5 FITR_CEM_SAT
Flat SampleMode not implemented for G5 FITR_CEM_SAT
StoreMCUCohMode
StoreSLCCohMode
StoreCMode
StoreSLCMode
LoadCMode
LoadSLCMode
Unimplemented pack opcode!
ImageWritePersist
ImageWriteTPUCohMode
ImageWriteMCUCohMode
ImageWriteSLCCohMode
LoadSLCCohMode
AGX1ISD::FRET
AGX1ISD::VRET
AGX1ISD::PHASE_SEL
AGX1ISD::PHASE_SMP
AGX1ISD::READ_SHARED
AGX1ISD::READ_COEFF
AGX1ISD::FITR
AGX1ISD::FITR_PROJ
AGX1ISD::FITR_CEM
AGX1ISD::FITR_SAT
AGX1ISD::FITR_PROJ_SAT
AGX1ISD::FITR_CEM_SAT
AGX1ISD::FITR_TMP
AGX1ISD::FITR_PROJ_TMP
AGX1ISD::FITR_CEM_TMP
AGX1ISD::FITR_CEMGRAD_TMP
AGX1ISD::FITR_TMP_SAT
AGX1ISD::FITR_PROJ_TMP_SAT
AGX1ISD::FITR_CEM_TMP_SAT
AGX1ISD::FITR_CEMGRAD_TMP_SAT
AGX1ISD::FITR_16x2
AGX1ISD::FITR_PROJ_16x2
AGX1ISD::FITR_3D
AGX1ISD::FITR_PROJ_16x3
AGX1ISD::FITR_4D
AGX1ISD::FITR_PROJ_16x4
AGX1ISD::FITR_32x2
AGX1ISD::FITR_PROJ_32x2
AGX1ISD::FITR_32x3
AGX1ISD::FITR_PROJ_32x3
AGX1ISD::FITR_32x4
AGX1ISD::FITR_PROJ_32x4
AGX1ISD::IMADH
AGX1ISD::IMSUBH
AGX1ISD::IMADHS
AGX1ISD::IMSUBHS
AGX1ISD::RCP
AGX1ISD::RSQRT
AGX1ISD::RSQRTFROMSQRT
AGX1ISD::QREFL
AGX1ISD::INSERT
AGX1ISD::EXTRACT
AGX1ISD::FPTOS8
AGX1ISD::FPTOU8
AGX1ISD::FPTOS8_SCALE
AGX1ISD::FPTOU8_SCALE
AGX1ISD::ATOMIC_LOCAL_G4
AGX1ISD::ATOMIC_LOCAL_G5
AGX1ISD::ATOMIC_LOCAL_CMPXCHG_G4
AGX1ISD::ATOMIC_LOCAL_CMPXCHG_G5
AGX1ISD::ATOMIC_GLOBAL_ADD
AGX1ISD::ATOMIC_GLOBAL_SUB
AGX1ISD::ATOMIC_GLOBAL_XCHG
AGX1ISD::ATOMIC_GLOBAL_UMIN
AGX1ISD::ATOMIC_GLOBAL_IMIN
AGX1ISD::ATOMIC_GLOBAL_UMAX
AGX1ISD::ATOMIC_GLOBAL_IMAX
AGX1ISD::ATOMIC_GLOBAL_AND
AGX1ISD::ATOMIC_GLOBAL_OR
AGX1ISD::ATOMIC_GLOBAL_XOR
AGX1ISD::ATOMIC_GLOBAL_CMPXCHG_G4
AGX1ISD::ATOMIC_GLOBAL_CMPXCHG_G5
AGX1ISD::GAMMA_CMP_G5
AGX1ISD::GAMMA_EXP_G5
AGX1ISD::SPILL8
AGX1ISD::SPILL16
AGX1ISD::SPILL32
AGX1ISD::SPILL64
AGX1ISD::SPILL96
AGX1ISD::SPILL128
AGX1ISD::SPILL256
AGX1ISD::RELOAD8
AGX1ISD::RELOAD16
AGX1ISD::RELOAD32
AGX1ISD::RELOAD64
AGX1ISD::RELOAD96
AGX1ISD::RELOAD128
AGX1ISD::RELOAD160
AGX1ISD::RELOAD192
AGX1ISD::RELOAD224
AGX1ISD::RELOAD256
AGX1ISD::LADDR
AGX1ISD::ADDH
AGX1ISD::SUBH
AGX1ISD::FMIX
AGX1ISD::BIT_EXTRACT
Atomic operations only support i32
Unsupported address space for atomic operation
Not yet supported!
agx1-lower
SlowMathFAddWithZero
A floating point add with zero cannot be optimized away because fast-math is disabled.
SlowMathFMulWithZero
A floating point mul with zero cannot be optimized away because fast-math is disabled.
Invalid sin intrinsic for architecture!
Unsupported vector width!
This call was not recognized as an intrinsic: 
Unexpected ext type for load
DeviceLoadAddrMode
Zero-extended device memory load cannot fold addr mode
Load from unsupported address space: 
Unknown store opcode!
DeviceStoreAddrMode
Zero-extended device memory store cannot fold addr mode
Store from unsupported address space: 
GAtomCMode
GAtomSLCMode
Unaligned shared/coeff register accesses are not supported
__clear_cache
Named registers not implemented for this target
Store of byte to local memory is unsupported
Store of byte to shared memory is unsupported
AGX1 iterator forwarding pass
Unhandled target index type!
AGX1 post-RA peephole pass
AGX1 pseudo wait placement pass
TR16_aligned
VIR16_aligned
GPR16_aligned
TR16
VIR16
GPR16_aligned+TR16
GPR16_aligned+VIR16
GPR16
GPR32
Unable to materialize spill/reload!
hsub0
hsub1
hsub2
hsub3
hsub4
hsub5
hsub6
hsub7
hsub8
hsub9
hsub10
hsub11
hsub12
hsub13
hsub14
hsub15
hsub16
hsub17
hsub18
hsub19
hsub20
hsub21
hsub22
hsub23
hsub24
hsub25
hsub26
hsub27
hsub28
hsub29
hsub30
hsub31
sub0
sub1
sub2
sub3
sub4
sub5
sub6
sub7
sub8
sub9
sub10
sub11
sub12
sub13
sub14
sub15
hsub0_hsub1_hsub2
hsub0_hsub1_hsub2_hsub3
hsub0_hsub1_hsub2_hsub3_hsub4
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8
hsub1_hsub2
hsub1_hsub2_hsub3
hsub1_hsub2_hsub3_hsub4_hsub5
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9
hsub2_hsub3_hsub4
hsub2_hsub3_hsub4_hsub5
hsub2_hsub3_hsub4_hsub5_hsub6
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9
hsub3_hsub4
hsub3_hsub4_hsub5
hsub3_hsub4_hsub5_hsub6_hsub7
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9
hsub4_hsub5_hsub6
hsub4_hsub5_hsub6_hsub7
hsub4_hsub5_hsub6_hsub7_hsub8
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9
hsub5_hsub6
hsub5_hsub6_hsub7
hsub5_hsub6_hsub7_hsub8_hsub9
hsub6_hsub7_hsub8
hsub6_hsub7_hsub8_hsub9
hsub7_hsub8
hsub7_hsub8_hsub9
hsub1_hsub2_hsub3_hsub4
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8
hsub3_hsub4_hsub5_hsub6
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8
hsub5_hsub6_hsub7_hsub8
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10
hsub6_hsub7_hsub8_hsub9_hsub10
hsub8_hsub9_hsub10
hsub9_hsub10
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10
hsub7_hsub8_hsub9_hsub10
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11
hsub7_hsub8_hsub9_hsub10_hsub11
hsub8_hsub9_hsub10_hsub11
hsub9_hsub10_hsub11
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12
hsub8_hsub9_hsub10_hsub11_hsub12
hsub10_hsub11_hsub12
hsub11_hsub12
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12
hsub9_hsub10_hsub11_hsub12
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub9_hsub10_hsub11_hsub12_hsub13
hsub10_hsub11_hsub12_hsub13
hsub11_hsub12_hsub13
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub10_hsub11_hsub12_hsub13_hsub14
hsub12_hsub13_hsub14
hsub13_hsub14
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub11_hsub12_hsub13_hsub14
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub11_hsub12_hsub13_hsub14_hsub15
hsub12_hsub13_hsub14_hsub15
hsub13_hsub14_hsub15
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub12_hsub13_hsub14_hsub15_hsub16
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub13_hsub14_hsub15_hsub16
hsub13_hsub14_hsub15_hsub16_hsub17
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub14_hsub15_hsub16
hsub14_hsub15_hsub16_hsub17_hsub18
hsub15_hsub16
hsub15_hsub16_hsub17
hsub15_hsub16_hsub17_hsub18
hsub15_hsub16_hsub17_hsub18_hsub19
hsub16_hsub17_hsub18
hsub17_hsub18
hsub17_hsub18_hsub19
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub14_hsub15_hsub16_hsub17
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub16_hsub17_hsub18_hsub19
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub16_hsub17_hsub18_hsub19_hsub20
hsub17_hsub18_hsub19_hsub20
hsub17_hsub18_hsub19_hsub20_hsub21
hsub18_hsub19_hsub20
hsub19_hsub20
hsub19_hsub20_hsub21
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub18_hsub19_hsub20_hsub21
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub18_hsub19_hsub20_hsub21_hsub22
hsub19_hsub20_hsub21_hsub22
hsub19_hsub20_hsub21_hsub22_hsub23
hsub20_hsub21_hsub22
hsub21_hsub22
hsub21_hsub22_hsub23
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub20_hsub21_hsub22_hsub23
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub20_hsub21_hsub22_hsub23_hsub24
hsub21_hsub22_hsub23_hsub24
hsub21_hsub22_hsub23_hsub24_hsub25
hsub22_hsub23_hsub24
hsub23_hsub24
hsub23_hsub24_hsub25
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub22_hsub23_hsub24_hsub25
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub22_hsub23_hsub24_hsub25_hsub26
hsub23_hsub24_hsub25_hsub26
hsub23_hsub24_hsub25_hsub26_hsub27
hsub24_hsub25_hsub26
hsub25_hsub26
hsub25_hsub26_hsub27
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub24_hsub25_hsub26_hsub27
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub24_hsub25_hsub26_hsub27_hsub28
hsub25_hsub26_hsub27_hsub28
hsub25_hsub26_hsub27_hsub28_hsub29
hsub26_hsub27_hsub28
hsub27_hsub28
hsub27_hsub28_hsub29
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub26_hsub27_hsub28_hsub29
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub26_hsub27_hsub28_hsub29_hsub30
hsub27_hsub28_hsub29_hsub30
hsub27_hsub28_hsub29_hsub30_hsub31
hsub28_hsub29_hsub30
hsub29_hsub30
hsub29_hsub30_hsub31
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub28_hsub29_hsub30_hsub31
Custom AGX1 scheduler.
AvailableQ
AvailableITRQ
AvailableSMPQ
AvailableLocalPixQ
Expected a variant SchedClass
disable-agx1-fma-contraction
FMA contraction at IR level
disable-agx1-combining
Disable combining instructions in to wider tuples
enable-balanced-sched
Enables balanced scheduler for AGX1.
target-cpu
target-features
After codegen DCE pass
After Machine LICM, CSE and Sinking passes
After codegen peephole optimization pass
e-m:o
-p:64:64:64
-p:64:64:64-p3:32:64:64
:32:64:64
-i64:64:64-i32:32:32-i16:16:16-v32:32:32-n32
-S128
-S64
lp64
lm32
Not implemented for the (sub)target
AGX1 TOC optimizer pass
AGX1WAR_RDAR16355991
AGX1 WAR RDAR16355991 pass
AGX1PhaseEndAlignment
AGX1 phase.end Alignment pass
combiner-global-alias-analysis
Enable DAG combiner's use of IR alias analysis
combiner-use-tbaa
Enable DAG combiner's use of TBAA
combiner-stress-load-slicing
Bypass the profitability model of load slicing
combiner-split-load-index
DAG combiner may split indexing from loads
strict-float-cast-overflow
fast-isel-sink-local-values
Sink local values in FastISel
__sync_synchronize
abort
Attempt at an invalid promotion-related conversion
enable-legalize-types-checking
Unprocessed value in a map!
Value with legal type was transformed!
Processed value not in any map!
Value in multiple maps!
 ReplacedValues
 PromotedIntegers
 SoftenedFloats
 ScalarizedVectors
 ExpandedIntegers
 ExpandedFloats
 SplitVectors
 WidenedVectors
 PromotedFloats
Do not know how to scalarize the result of this operator!
Do not know how to scalarize this operator's operand!
Do not know how to split the result of this operator!
Do not know how to split this operator's operand!
disable-dfa-sched
Disable use of DFA during scheduling
dfa-sched-reg-pressure-threshold
Track reg pressure and switch priority to in-depth
list-burr
Bottom-up register reduction list scheduling
Similar to list-burr but schedules in source order when possible
list-hybrid
Bottom-up register pressure aware list scheduling which tries to balance latency and register pressure
list-ilp
Bottom-up register pressure aware list scheduling which tries to balance ILP and register pressure
disable-sched-cycles
Disable cycle-level precision during preRA scheduling
disable-sched-reg-pressure
Disable regpressure priority in sched=list-ilp
disable-sched-live-uses
Disable live use priority in sched=list-ilp
disable-sched-vrcycle
Disable virtual register cycle interference checks
disable-sched-physreg-join
Disable physreg def-use affinity
disable-sched-stalls
Disable no-stall priority in sched=list-ilp
disable-sched-critical-path
Disable critical path priority in sched=list-ilp
disable-sched-height
Disable scheduled-height priority in sched=list-ilp
disable-2addr-hack
Disable scheduler's two-address hack
max-sched-reorder
Number of instructions to allow ahead of the critical path in sched=list-ilp
sched-avg-ipc
Average inst/cycle whan no target itinerary exists.
Can't handle live physical register dependency!
Height 
sched-high-latency-cycles
Roughly estimate the number of cycles that 'long latency'instructions take for targets with no itinerary
PHYS REG COPY
sunit-dag.
vliw-td
VLIW scheduler
limit-float-precision
Generate low-precision inline sequences for some float libcalls
switch-peel-threshold
Set the case probability threshold for peeling the case from a switch statement. A value greater than 100 will void this optimization
visitCatchSwitch not yet implemented!
Cannot generate unaligned atomic load
Cannot generate unaligned atomic store
_setjmp
_longjmp
Wrong result type for @llvm.get.dynamic.area.offset intrinsic!
annotation
trap-func-name
llvm.icall.branch.funnel operand must be a GlobalValue
all llvm.icall.branch.funnel operands must refer to the same GlobalValue
This target doesn't support calls with ptrauth operand bundles.
Cannot lower direct authenticated call to unauthenticated target
couldn't allocate output register for constraint '
inline asm not supported yet: don't know how to handle tied indirect register inputs
inline asm error: This value type register class is not natively supported!
invalid operand for inline asm constraint '
Don't know how to handle indirect register inputs yet for constraint '
couldn't allocate input reg for constraint '
non-trivial scalar-to-vector conversion
, possible invalid constraint for vector type
scalar-to-vector conversion failed
enable-memcpy-dag-opt
Gang up loads and stores generated by inlining of memcpy
ldstmemcpy-glue-max
Number limit for gluing ld/st of memcpy.
Unsupported element size
cannot lower memory intrinsic in address space 
dag-dump-verbose
Display more information when dumping selection DAG nodes.
<<Unknown DAG Node>>
<<Unknown Machine Node #
<<Unknown Target Node #
<<Unknown Node #
Prefetch
AtomicFence
AtomicCmpSwap
AtomicCmpSwapWithSuccess
AtomicSwap
AtomicLoadAdd
AtomicLoadSub
AtomicLoadAnd
AtomicLoadClr
AtomicLoadOr
AtomicLoadXor
AtomicLoadNand
AtomicLoadMin
AtomicLoadMax
AtomicLoadUMin
AtomicLoadUMax
AtomicLoad
AtomicStore
PCMarker
ReadCycleCounter
SrcValue
MDNode
EntryToken
TokenFactor
AssertSext
AssertZext
BasicBlock
ValueType
Register
RegisterMask
OpaqueConstant
Constant
ConstantFP
GlobalAddress
GlobalTLSAddress
FrameIndex
GLOBAL_OFFSET_TABLE
RETURNADDR
ADDROFRETURNADDR
FRAMEADDR
LOCAL_RECOVER
READ_REGISTER
WRITE_REGISTER
FRAME_TO_ARGS_OFFSET
EH_DWARF_CFA
EH_RETURN
EH_SJLJ_SETJMP
EH_SJLJ_LONGJMP
EH_SJLJ_SETUP_DISPATCH
TargetIndex
ExternalSymbol
BlockAddress
BUILD_VECTOR
OpaqueTargetConstant
TargetConstant
TargetConstantFP
TargetGlobalAddress
TargetGlobalTLSAddress
TargetFrameIndex
TargetJumpTable
TargetConstantPool
TargetExternalSymbol
MCSymbol
TargetBlockAddress
CopyToReg
CopyFromReg
merge_values
inlineasm
eh_label
handlenode
fminnum
fmaxnum
fminnan
fmaxnan
fneg
fsqrt
strict_fsqrt
fsin
strict_fsin
fcos
strict_fcos
fsincos
ftrunc
ffloor
fceil
frint
strict_frint
fnearbyint
strict_fnearbyint
fround
fexp
strict_fexp
fexp2
strict_fexp2
flog
strict_flog
flog2
strict_flog2
flog10
strict_flog10
mulhu
mulhs
smul_lohi
umul_lohi
sdivrem
udivrem
rotl
rotr
strict_fadd
strict_fsub
strict_fmul
strict_fdiv
strict_fma
fmad
strict_frem
fcopysign
fgetsign
fcanonicalize
fpow
strict_fpow
smin
fpowi
strict_fpowi
setcc
setcccarry
vselect
select_cc
insert_vector_elt
extract_vector_elt
concat_vectors
insert_subvector
extract_subvector
scalar_to_vector
vector_shuffle
carry_false
addc
adde
addcarry
saddo
uaddo
ssubo
usubo
smulo
umulo
sube
subcarry
shl_parts
sra_parts
srl_parts
sign_extend
zero_extend
any_extend
sign_extend_inreg
any_extend_vector_inreg
sign_extend_vector_inreg
zero_extend_vector_inreg
truncate
fp_round
flt_rounds
fp_round_inreg
fp_extend
sint_to_fp
uint_to_fp
fp_to_sint
fp_to_uint
fp16_to_fp
fp_to_fp16
brind
br_jt
brcond
br_cc
callseq_start
callseq_end
masked_load
masked_store
masked_gather
masked_scatter
vaarg
vacopy
vaend
vastart
dynamic_stackalloc
extract_element
build_pair
stacksave
stackrestore
trap
debugtrap
gc_transition.start
gc_transition.end
get.dynamic.area.offset
bitreverse
bswap
cttz_zero_undef
ctlz_zero_undef
init_trampoline
adjust_trampoline
setoeq
setogt
setoge
setolt
setole
setone
seto
setuo
setueq
setugt
setuge
setult
setule
setune
seteq
setgt
setge
setlt
setle
setne
settrue
settrue2
setfalse
setfalse2
vecreduce_fadd
vecreduce_strict_fadd
vecreduce_fmul
vecreduce_strict_fmul
vecreduce_add
vecreduce_mul
vecreduce_and
vecreduce_or
vecreduce_xor
vecreduce_smax
vecreduce_smin
vecreduce_umax
vecreduce_umin
vecreduce_fmax
vecreduce_fmin
<pre-inc>
<pre-dec>
<post-inc>
<post-dec>
 vector-reduction
Mem:
<APFloat(
 [TF=
<null>
, anyext
, sext
, zext
, trunc to 
 [ORD=
 [ID=
# D:
 DbgVal
SelectionDAG has 
 nodes:
fast-isel-abort
Enable abort calls when "fast" instruction selection fails to lower an instruction: 0 disable the abort, 1 will abort but for args, calls and terminators, 2 will also abort for argument lowering, and 3 will never fallback to SelectionDAG.
fast-isel-report-on-fallback
Emit a diagnostic when "fast" instruction selection falls back to SelectionDAG.
use-mbpi
use Machine Branch Probability Info
pre-RA-sched
Instruction schedulers available (before register allocation):
Best scheduler for the target
Instruction Selection and Scheduling
DAG Combining 1
Type Legalization
DAG Combining after legalize types
Vector Legalization
Type Legalization 2
DAG Combining after legalize vectors
DAG Legalization
verify-nobrcond1
Verify No Brcond 1
DAG Combining 2
verify-nobrcond2
Verify No Brcond 2
Instruction Selection
Instruction Scheduling
Instruction Creation
Instruction Scheduling Cleanup
sdagisel
FastISelFailure
FastISel didn't lower all arguments: 
FastISel missed call
FastISel missed terminator
FastISel missed
Could not match memory address.  Inline asm failure!
COVERED: 
INCLUDED: 
Cannot select: 
In function: 
intrinsic %
target intrinsic %
unknown intrinsic #
Found BRCOND after combine2
Found BRCOND before combine2
Found wrong-typed BRCOND after combine2
Found wrong-typed BRCOND before combine2
CROSS RC COPY
plaintext=circle
GraphRoot
color=blue,style=dashed
 label ="
Unsupported library call operation!
Indirect operand for inline asm not a pointer!
Unsupported asm: input constraint with a matching output constraint of incompatible type!
__emutls_get_address
names
Header Magic
Header Version
Header Hash Function
Header Bucket Count
Header Hash Count
Header Data Length
HeaderData Die Offset Base
HeaderData Atom Count
Bucket 
Hash in Bucket 
Offset in Bucket 
Num DIEs
names_start
names_end
names_abbrev_start
names_abbrev_end
names_entries
Header: unit length
Header: version
Header: padding
Header: compilation unit count
Header: local type unit count
Header: foreign type unit count
Header: bucket count
Header: name count
Header: abbreviation table size
Header: augmentation string size
Header: augmentation string
Compilation unit 
String in Bucket 
Abbrev code
End of abbrev
End of abbrev list
End of list: 
Abbreviation code
>> Catch TypeInfos <<
TypeInfo 
>> Filter TypeInfos <<
FilterInfo 
print-schedule
Print 'sched: [latency:throughput]' in .s output
Start of file scope inline assembly
End of file scope inline assembly
Debug Info Emission
linetables
CodeView Line Tables
dwarf
DWARF Emission
write_exception
DWARF Exception Writer
cfguard
Control Flow Guard
Control Flow Guard Tables
' is already defined
$tlv$init
_tlv_bootstrap
-- Begin function 
Address taken block that was later removed
' is a protected alias
' label emitted multiple times to assembly file
implicit-def: 
asm-printer
InstructionCount
NumInstructions
 instructions in function
avoids zero-length function
Address of block that was removed by CodeGen
func_end
-- End function
__morestack_addr
__morestack
.note.GNU-split-stack
.note.GNU-no-split-stack
exception
func_begin
Unsupported usage of llvm.ptrauth global '
Unsupported expression in static initializer: 
_set_
Block address taken
 %bb.
no GCMetadataPrinter registered for GC: 
__DATA
target_variant_triple
-byte Reload
-byte Folded Reload
-byte Spill
-byte Folded Spill
 Reload Reuse
DEBUG_VALUE: 
 <- 
(long double) 
DEBUG_LABEL: 
kill:
def 
killed 
0x%llx
Invalid size-changing cast of llvm.ptrauth global
Mismatched address discriminator in llvm.ptrauth global '
  in Loop: Header=BB
 Depth=
This 
Inner 
Loop Header: Depth=
Parent Loop BB
Child Loop BB
 Depth 
 Encoding = 
Encoding = 
Abbrev [
] 0x
End Of Children Mark
Abbreviation Code
absptr
omit
uleb128
sleb128
udata4
udata8
sdata4
sdata8
pcrel udata4
pcrel sdata4
pcrel udata8
pcrel sdata8
indirect pcrel udata4
indirect pcrel sdata4
indirect pcrel udata8
indirect pcrel sdata8
<unknown encoding>
<inline asm>
Inline asm not supported by this streamer because we don't have an asm parser for this target
Error parsing inline asm
comment
Unknown special formatter '
' for machine instr: 
Nested variants found in inline asm string: '
Unterminated ${:foo} operand in inline asm string: '
Bad $ operand number in inline asm string: '
Bad ${:} expression in inline asm string: '
Bad ${} expression in inline asm string: '
Invalid $ operand number in inline asm string: '
invalid operand in inline asm: '
.intel_syntax
.att_syntax
DbgValueHistoryMap:
<unknown location>
   Begin: 
   End  : 
debug_loc
EOM(1)
EOM(2)
Abbreviation @
0x%lx
: Size: 
Blk[
Die: 
, Offset: 
, Size: 
Int: 
  0x
Expr: 
Lbl: 
Del: 
String: 
InlineString: 
Die: 0x%lx
ExprLoc
LocList: 
EOM(3)
cu_macro_begin
debug_ranges
cu_begin
Loc = { reg=
disable-debug-info-print
Disable debug info printing
use-dwarf-ranges-base-address-specifier
Use base address specifiers in debug_ranges
generate-arange-section
Generate dwarf aranges
generate-type-units
Generate DWARF4 type units.
split-dwarf-cross-cu-references
Enable cross-cu references in DWO files
use-unknown-locations
Make an absence of debug location information explicit.
At top of block or after label
Enable
In all cases
Disable
Never
accel-tables
Output dwarf accelerator tables.
Default for platform
Disabled.
Dwarf
DWARF
dwarf-inlined-strings
Use inlined strings rather than string section.
Enabled
no-dwarf-pub-sections
Disable emission of DWARF pub sections.
no-dwarf-ranges-section
Disable emission .debug_ranges section.
dwarf-sections-as-references
Use sections+offset as references rather than labels.
dwarf-linkage-names
Which DWARF linkage-name attributes to emit.
Abstract
Abstract subprograms
writer
DWARF Debug Writer
str_offsets_base
rnglists_table_base
Names
ObjC
namespac
Types
Length of Public 
 Info
_begin
_end
DWARF Version
Offset of Compilation Unit Info
Compilation Unit Length
DIE offset
Kind: 
External Name
End Mark
Loc expr size
Length of ARange Set
DWARF Arange version number
Offset Into Debug Info Section
Address Size (in bytes)
Segment Size (in bytes)
ARange terminator
End Of Macro List Mark
debug_rnglist_table_start
debug_rnglist_table_end
  base address
  starting offset
  ending offset
  start
  length
super-register
no DWARF register encoding
sub-register
string offset=
(anonymous namespace)
__ARRAY_SIZE_TYPE__
Length of Unit
DWARF version number
DWARF Unit Type
Offset Into Abbrev. Section
Type Signature
Type DIE Offset
GCC_except_table
@LPStart
@TType
ttbaseref
ttbase
cst_begin
cst_end
Call site
>> Call Site 
  On exception at call site 
  Action: cleanup
  Action: 
  Call between 
    has no landing pad
    jumps to 
  On action: cleanup
  On action: 
>> Action Record 
  Catch TypeInfo 
  Filter TypeInfo 
  Cleanup
  No further actions
  Continue to action 
safeseh
$cppxdata$
lsda_begin
lsda_end
Number of call sites
LabelStart
LabelEnd
FinallyFunclet
FilterFunction
CatchAll
ExceptionHandler
$stateUnwindMap$
$tryMap$
$ip2state$
MagicNumber
MaxState
UnwindMap
NumTryBlocks
TryBlockMap
IPMapEntries
IPToStateXData
UnwindHelp
ESTypeList
EHFlags
ToState
Action
$handlerMap$
TryLow
TryHigh
CatchHigh
NumCatches
HandlerArray
Adjectives
CatchObjOffset
Handler
ParentFrameOffset
GSCookieOffset
GSCookieXOROffset
EHCookieOffset
EHCookieXOROffset
dtor
@?0?
@4HA
emit-codeview-ghash-section
Debug section magic
File index to string table offset subsection
String table
Magic
Section Version
Hash Algorithm
{0:X+} [{1}]
Record length
Record kind: S_COMPILE3
Flags and language
CPUType
Frontend version
Backend version
Null-terminated compiler version string
Inlinee lines subsection
Inlinee lines signature
Inlined function 
 starts at 
Type index of inlined function
Offset into filechecksum table
Starting line number
Record kind: S_INLINESITE
PtrParent
PtrEnd
Inlinee type index
Record kind: S_INLINESITE_END
Symbol subsection for 
Record kind: S_THUNK32
PtrNext
Thunk section relative address
Thunk section index
Ordinal
Function name
Record kind: S_PROC_ID_END
Record kind: S_LPROC32_ID
Record kind: S_GPROC32_ID
Offset after prologue
Offset before epilogue
Function type index
Function section relative address
Function section index
Flags
Record kind: S_ANNOTATION
cannot debug circular reference to unnamed type
Record kind: S_LOCAL
TypeIndex
Record kind: S_BLOCK32
Lexical block name
Record kind: S_END
Subsection size
Record kind: S_UDT
Symbol subsection for globals
Record kind: S_LTHREAD32
Record kind: S_LDATA32
Record kind: S_GTHREAD32
Record kind: S_GDATA32
DataOffset
Segment
target architecture doesn't map to a CodeView CPUType
<unnamed-tag>
`anonymous namespace'
agg-antidep-debugdiv
Debug control for aggressive anti-dep breaker
agg-antidep-debugmod
Expand Atomic instructions
atomic-expand
success
newloaded
atomicrmw.end
atomicrmw.start
tryagain
loaded
ValOperand_Shifted
AlignedAddr
PtrLSB
ShiftAmt
Mask
Inv_Mask
partword.cmpxchg.end
partword.cmpxchg.failure
partword.cmpxchg.loop
cmpxchg.end
cmpxchg.failure
cmpxchg.nostore
cmpxchg.success
cmpxchg.releasedload
cmpxchg.trystore
cmpxchg.fencedstore
cmpxchg.start
should_store
partial-unrolling-threshold
Threshold for partial unrolling
enable-tail-merge
tail-merge-threshold
Max number of predecessors to consider tail merging
tail-merge-size
Min number of instructions to consider tail merging
Control Flow Optimizer
branch-folder
%bb.%u
offset=%08x
size=%#x
Branch relaxation pass
branch-relaxation
verify-cfiinstrs
Verify Call Frame Information instructions
Check CFA info and insert CFI instructions if needed
cfi-instr-inserter
Found 
 in/out CFI information errors.
*** Inconsistent CFA register and/or offset between pred and succ ***
Pred: 
 outgoing CFA Reg:
 outgoing CFA Offset:
Succ: 
 incoming CFA Reg:
 incoming CFA Offset:
disable-cgp-branch-opts
Disable branch optimizations in CodeGenPrepare
disable-cgp-gc-opts
Disable GC optimizations in CodeGenPrepare
disable-cgp-select2branch
Disable select to branch conversion.
addr-sink-using-gep
Address sinking in CGP using GEPs.
enable-andcmp-sinking
Enable sinkinig and/cmp into branches.
disable-cgp-store-extract
Disable store(extract) optimizations in CodeGenPrepare
stress-cgp-store-extract
Stress test store(extract) optimizations in CodeGenPrepare
disable-cgp-ext-ld-promotion
Disable ext(promotable(ld)) -> promoted(ext(ld)) optimization in CodeGenPrepare
stress-cgp-ext-ld-promotion
Stress test ext(promotable(ld)) -> promoted(ext(ld)) optimization in CodeGenPrepare
disable-preheader-prot
Disable protection against removing loop preheaders
profile-guided-section-prefix
Use profile info to add section prefix for hot/cold functions
cgp-freq-ratio-to-skip-merge
Skip merging empty blocks if (frequency of empty block) / (frequency of destination block) is greater than this ratio
force-split-store
Force store splitting no matter what the target query says.
cgp-type-promotion-merge
Enable merging of redundant sexts when one is dominating the other.
disable-complex-addr-modes
Disables combining addressing modes with different parts in optimizeMemoryInst.
addr-sink-new-phis
Allow creation of Phis in Address sinking.
addr-sink-new-select
Allow creation of selects in Address sinking.
addr-sink-combine-base-reg
Allow combining of BaseReg field in Address sinking.
addr-sink-combine-base-gv
Allow combining of BaseGV field in Address sinking.
addr-sink-combine-base-offs
Allow combining of BaseOffs field in Address sinking.
addr-sink-combine-scaled-reg
Allow combining of ScaledReg field in Address sinking.
cgp-split-large-offset-gep
Enable splitting large offset of GEP.
Optimize for code generation
codegenprepare
CodeGen Prepare
.hot
.unlikely
.cond.split
promoted
uadd.overflow
uadd
overflow
sunkaddr
sunk_phi
cond.false
cond.end
cmpz
select.end
select.true.sink
select.false.sink
select.false
splitgep
(inbounds)
Base:
Remove dead machine instructions
dead-mi-elimination
Detect Dead Lanes
detect-dead-lanes
dfa-instr-limit
If present, stops packetizing after N instructions
Prepare DWARF exceptions
dwarfehprepare
Exception handling preparation
unwind_resume
exn.obj
early-ifcvt-limit
Maximum number of instructions per speculated block.
stress-early-ifcvt
Turn all knobs to 11
Early If Converter
early-ifcvt
Early If-Conversion
view-edge-bundles
Pop up a window to show edge bundle graphs
digraph {
" [ shape=box ]
" -> 
" -> "
" [ color=lightgray ]
EdgeBundles
Bundle Machine CFG Edges
edge-bundles
Expand ISel Pseudo-instructions
expand-isel-pseudos
memcmp-num-loads-per-block
The number of loads per basic block for inline expansion of memcmp that is only being compared against zero.
Expand memcmp() to load/stores
expandmemcmp
endblock
phi.res
res_block
phi.src1
phi.src2
loadbb
Post-RA pseudo instruction expansion pass
postrapseudos
Expand reduction intrinsics
expand-reductions
Insert fentry calls
fentry-insert
fentry-call
Contiguously Lay Out Funclets
funclet-layout
unsupported GC: 
 (did you remember to link and initialize the CodeGen library?)
Create Garbage Collector Module Metadata
collector-metadata
Print Garbage Collector Information
GC roots for 
[sp]
GC safe points for 
, live = {
pre-call
post-call
GC Lowering
gc-lowering
Lower Garbage Collection Instructions
Analyze Machine Code For Garbage Collection
gc-analysis
ifcvt-fn-start
ifcvt-fn-stop
ifcvt-limit
disable-ifcvt-simple
disable-ifcvt-simple-false
disable-ifcvt-triangle
disable-ifcvt-triangle-rev
disable-ifcvt-triangle-false
disable-ifcvt-triangle-false-rev
disable-ifcvt-diamond
disable-ifcvt-forked-diamond
ifcvt-branch-fold
If Converter
if-converter
imp-null-check-page-size
The page size of the target in bytes
imp-null-max-insts-to-consider
The max number of instructions to consider hoisting loads over (the algorithm is quadratic over this number)
Implicit null checks
implicit-null-checks
Expand indirectbr instructions
indirectbr-expand
switch_bb
switch_value_phi
.switch_cast
disable-spill-hoist
Disable inline spill hoisting
lower-interleaved-accesses
Enable lowering interleaved accesses to intrinsics
Lower interleaved memory accesses to target specific intrinsics
interleaved-access
Interleaved Access Pass
Latency Priority Queue
  Number of Queue Entries: 
Lazy Machine Block Frequency Analysis
lazy-machine-block-freq
DFSIn: 
 DFSOut: 
Abstract Scope
Children ...
Live DEBUG_VALUE analysis
livedebugvalues
live-debug-variables
Enable the live debug variables pass
Debug Variable Analysis
livedebugvars
********** DEBUG VARIABLES **********
 ind
 Loc
use-segment-set-for-physregs
Use segment set for the computation of the live ranges of physregs.
RegMasks:
********** MACHINEINSTRS **********
Live Interval Analysis
liveintervals
EMPTY
-phi
 weight:
Clean updater: 
Null updater.
 updater with gap = 
, last start = 
  Area 1:
  Spills:
  Area 2:
Live Registers:
 (uninitialized)
 (empty)
Live Range Shrink Pass
lrshrink
Live Range Shrink
Live Register Matrix
liveregmatrix
********** INTERVALS **********
 [Unknown]
Live Stack Slot Analysis
livestacks
  Alive in blocks: 
  Killed by:
 No instructions.
    #
regalloc=... not currently supported with -O0
Live Variable Analysis
livevars
trap-unreachable
Enable generating trap for unreachable
Local Stack Slot Allocation
localstackalloc
Add __emutls_[vt]. variables for emultated TLS model
loweremutls
__emutls_v.
__emutls_t.
Can't print out MachineBasicBlock because parent MachineFunction
 is null
<ir-block badref>
%ir-block.
address-taken
landing-pad
align 
; predecessors: 
successors: 
0x%08x
%.2f%%
liveins: 
; Irreducible loop header weight: 
%bb.
%08X
view-machine-block-freq-propagation-dags
Pop up a window to show a dag displaying how machine block frequencies propagate through the CFG.
view-block-layout-with-bfi
Pop up a window to show a dag displaying MBP layout and associated block frequencies of the CFG.
print-machine-bfi
Print the machine block frequency info.
MachineBlockFrequencyDAGS.
Machine Block Frequency Analysis
machine-block-freq
align-all-blocks
Force the alignment of all blocks in the function.
align-all-nofallthru-blocks
Force the alignment of all blocks that have no fall-through predecessors (i.e. don't add nops that are executed).
block-placement-exit-block-bias
Block frequency percentage a loop exit block needs over the original exit to be considered the new exit.
loop-to-cold-block-ratio
Outline loop blocks from loop chain if (frequency of loop) / (frequency of block) is greater than this ratio
force-loop-cold-block
Force outlining cold blocks from loops.
precise-rotation-cost
Model the cost of loop rotation more precisely by using profile data.
force-precise-rotation-cost
Force the use of precise cost loop rotation strategy.
misfetch-cost
Cost that models the probabilistic risk of an instruction misfetch due to a jump comparing to falling through, whose cost is zero.
jump-inst-cost
Cost of jump instructions.
tail-dup-placement
Perform tail duplication during placement. Creates more fallthrough opportunites in outline branches.
branch-fold-placement
Perform branch folding during placement. Reduces code size.
tail-dup-placement-threshold
Instruction cutoff for tail duplication during layout. Tail merging during layout is forced to have a threshold that won't conflict.
tail-dup-placement-aggressive-threshold
Instruction cutoff for aggressive tail duplication during layout. Used at -O3. Tail merging during layout is forced to have a threshold that won't conflict.
tail-dup-placement-penalty
Cost penalty for blocks that can avoid breaking CFG by copying. Copying can increase fallthrough, but it also increases icache pressure. This parameter controls the penalty to account for that. Percent as integer.
triangle-chain-count
Number of triangle-shaped-CFG's that need to be in a row for the triangle tail duplication heuristic to kick in. 0 to disable.
Branch Probability Basic Block Placement
block-placement
MBP.
Basic Block Placement Stats
block-placement-stats
static-likely-prob
branch probability threshold in percentageto be considered very likely
profile-likely-prob
branch probability threshold in percentage to be considered very likely when profile is available
Machine Branch Probability Analysis
machine-branch-prob
machine-combiner-inc-threshold
Incremental depth computation will be used for basic blocks with more instructions.
machine-combiner-dump-subst-intrs
Dump all substituted intrs
machine-combiner-verify-pattern-order
Verify that the generated patterns are ordered by increasing latency
Machine InstCombiner
machine-combiner
machine-cp-fwd
Controls which register COPYs are forwarded
Machine Copy Propagation Pass
machine-cp
Machine Common Subexpression Elimination
machine-cse
Machine Debugify Module
mir-debugify
Machine Dominance Frontier Construction
machine-domfrontier
verify-machine-dom-info
Verify machine dominator info (time consuming)
MachineDominatorTree for function 
 is not up to date!
Computed:
Actual:
MachineDominator Tree Construction
machinedomtree
Frame Objects:
  fi#
dead
variable sized
size=
, fixed
, at location [SP
align-all-functions
Force the alignment of all functions.
no-realign-stack
split-stack
# Machine code for function 
Function Live Ins: 
# End machine code for function 
systems with Graphviz or gv!
Jump Tables:
Constant Pool:
  cp#
, align=
FailedISel
IsSSA
Legalized
NoPHIs
NoVRegs
RegBankSelected
Selected
TracksLiveness
%jump-table.
Machine Function Printer
MachineFunction Printer
Unpack machine instruction bundles
unpack-mi-bundles
Finalize machine instruction bundles
finalize-mi-bundles
frame-setup 
frame-destroy 
nnan 
ninf 
nsz 
arcp 
contract 
afn 
reassoc 
nuw 
nsw 
exact 
UNKNOWN
 [sideeffect]
 [mayload]
 [maystore]
 [isconvergent]
 [alignstack]
 [attdialect]
 [inteldialect]
:[reguse
:[regdef
:[regdef-ec
:[clobber
:[imm
:[mem
:[??
 tiedto:$
 debug-location 
 :: 
 line no:
 indirect
avoid-speculation
MachineLICM should avoid speculation
hoist-cheap-insts
MachineLICM should hoist even cheap instructions
sink-insts-to-avoid-spills
MachineLICM should sink instructions into loops to avoid register spills
hoist-const-stores
Hoist invariant stores
Machine Loop Invariant Code Motion
machinelicm
Early Machine Loop Invariant Code Motion
early-machinelicm
Machine Natural Loop Construction
machine-loops
Machine Module Information
machinemoduleinfo
Free MachineFunction
print-regmask-num-regs
Number of registers to limit to when printing regmask operands in IR dumps. unlimited = -1
%subreg.
target-flags(
<unknown>) 
<unknown target flag>
<unknown bitmask target flag>
<mcsymbol 
%fixed-stack.
%stack.
implicit-def 
implicit 
internal 
dead 
undef 
early-clobber 
debug-use 
renamable 
.subreg
(tied-def 
%const.
target-index(
<regmask
 more...
liveout(
<cfi directive>
intrinsic(@
intrinsic(
pred(
MIR_PSEUDO_SRC_HACK
volatile 
non-temporal 
dereferenceable 
invariant 
load 
 into 
stack
jump-table
constant-pool
call-entry 
call-entry &
custom "
unknown-address
, !tbaa 
, !alias.scope 
, !noalias 
, !range 
, addrspace 
same_value 
remember_state 
restore_state 
def_cfa_register 
def_cfa_offset 
def_cfa 
rel_offset 
adjust_cfa_offset 
restore 
escape 
0x%02x
undefined 
register 
window_save 
<unserializable cfi directive>
%dwarfreg.
<badreg>
syncscope("
machine-opt-remark-emitter
enable-linkonceodr-outlining
Enable the machine outliner on linkonceodr functions
Machine Outliner
Instruction mapping overflow!
machine-outliner
NotOutliningCheaper
Did not outline 
 instructions
NumOccurrences
 locations.
 Bytes from outlining all occurrences (
OutliningCost
 >= Unoutlined instruction bytes (
NotOutliningCost
 (Also found at: 
OtherStartLoc
OUTLINED_FUNCTION_
OutlinedFunction
Saved 
OutliningBenefit
 bytes by 
outlining 
 instructions 
from 
 locations. 
(Found at: 
StartLoc
Machine Function Outliner
enable-pipeliner
Enable Software Pipelining
enable-pipeliner-opt-size
Enable SWP at Os.
pipeliner-max-mii
Size limit for the MII.
pipeliner-max-stages
Maximum stages allowed in the generated scheduled.
pipeliner-prune-deps
Prune dependences between unrelated Phi nodes.
pipeliner-prune-loop-carried
Prune loop carried order dependences.
pipeliner-ignore-recmii
Ignore RecMII
Num nodes 
 rec 
 mov 
 depth 
 col 
   SU(
Modulo Software Pipelining
pipeliner
cycle 
MachinePostDominator Tree Construction
machinepostdomtree
machine-region-info
enable-subreg-liveness
Enable subregister liveness tracking.
misched-topdown
Force top-down list scheduling
misched-bottomup
Force bottom-up list scheduling
misched-dcpl
Print critical path length to stdout
misched-limit
Limit ready list to N instructions
misched-regpressure
Enable register pressure scheduling.
misched-cyclicpath
Enable cyclic critical path analysis.
misched-cluster
Enable memop clustering.
verify-misched
Verify machine instrs before and after machine scheduling
Machine instruction scheduler to use
Use the target's default scheduler choice.
enable-misched
Enable the machine instruction scheduling pass.
enable-post-misched
Enable the post-ra machine instruction scheduling pass.
Queue 
Missing SUnit
  Pressure Diff      : 
  Single Issue       : 
true;
false;
  Retired: 
  Executed: 
  Critical: 
  ExpectedLatency: 
  - Resource
  - Latency
 limited.
GenericScheduler RegionPolicy: 
 ShouldTrackPressure=
 OnlyTopDown=
 OnlyBottomUp=
Critical Path(GS-RR ): 
converge
Standard converging scheduler.
Critical Path(PGS-RR ): 
ilpmax
Schedule bottom-up for max ILP
ilpmin
Schedule bottom-up for min ILP
ScheduleDAGMI::viewGraph is only available in debug builds on 
Scheduling-Units Graph for 
Machine Instruction Scheduler
machine-scheduler
Before machine scheduling.
After machine scheduling.
:%bb. 
PostRA Machine Instruction Scheduler
postmisched
Before post machine scheduling.
After post machine scheduling.
MOps
machine-sink-split
Split critical edges during machine sinking
machine-sink-bfi
Use block frequency info to find successors to sink
machine-sink-split-probability-threshold
Percentage threshold for splitting single-instruction critical edge. If the branch threshold is higher than this threshold, we allow speculative execution of up to 1 instruction to avoid branching to splitted critical edge
Machine code sinking
machine-sink
PostRA Machine Sink
postra-machine-sink
mir-strip-debugify-only
Should mir-strip-debug only strip debug info from debugified modules by default
Machine Strip Debug Module
mir-strip-debug
Machine Trace Metrics
machine-trace-metrics
MinInstr
 machine code errors.
machineverifier
Bad instruction parent pointer
Instruction: 
Missing BundledPred flag, BundledSucc was set on predecessor
BundledPred flag is set, but BundledSucc not set on predecessor
No bundle header
Instruction has operand with wrong parent set
BundledSucc flag set on last instruction in block
Function has NoVRegs property but there are VReg operands
*** Bad machine code: 
 ***
- function:    
MBB has duplicate entries in its predecessor list.
MBB has duplicate entries in its successor list.
FrameSetup is after another FrameSetup
FrameDestroy is not after a FrameSetup
FrameDestroy <n> is after FrameSetup <m>
FrameDestroy <
> is after FrameSetup <
The exit stack state of a predecessor is inconsistent.
Predecessor 
 has exit state (
), while 
 has entry state (
The entry stack state of a successor is inconsistent.
Successor 
A return block ends with a FrameSetup.
A return block ends with a nonzero stack adjustment.
MBB has allocatable live-in, but isn't entry or landing-pad.
MBB has successor that isn't part of the function.
Inconsistent CFG
MBB is not in the predecessor list of the successor 
MBB has predecessor that isn't part of the function.
MBB is not in the successor list of the predecessor 
MBB has more than one landing pad successor
MBB exits via unconditional fall-through but doesn't have exactly one CFG successor!
MBB exits via unconditional fall-through but its successor differs from its CFG successor!
MBB exits via unconditional fall-through but ends with a barrier instruction!
MBB exits via unconditional fall-through but has a condition!
MBB exits via unconditional branch but doesn't have exactly one CFG successor!
MBB exits via unconditional branch but the CFG successor doesn't match the actual successor!
MBB exits via unconditional branch but doesn't contain any instructions!
MBB exits via unconditional branch but doesn't end with a barrier instruction!
MBB exits via unconditional branch but the branch isn't a terminator instruction!
MBB conditionally falls through out of function!
MBB exits via conditional branch/fall-through but only has one CFG successor!
MBB exits via conditional branch/fall-through but the CFG successor don't match the actual successor!
MBB exits via conditional branch/fall-through but doesn't have exactly two CFG successors!
MBB exits via conditional branch/fall-through but the CFG successors don't match the actual successors!
MBB exits via conditional branch/fall-through but doesn't contain any instructions!
MBB exits via conditional branch/fall-through but ends with a barrier instruction!
MBB exits via conditional branch/fall-through but the branch isn't a terminator instruction!
MBB exits via conditional branch/branch through but only has one CFG successor!
MBB exits via conditional branch/branch through but the CFG successor don't match the actual successor!
MBB exits via conditional branch/branch but doesn't have exactly two CFG successors!
MBB exits via conditional branch/branch but the CFG successors don't match the actual successors!
MBB exits via conditional branch/branch but doesn't contain any instructions!
MBB exits via conditional branch/branch but doesn't end with a barrier instruction!
MBB exits via conditional branch/branch but the branch isn't a terminator instruction!
MBB exits via conditinal branch/branch but there's no condition!
AnalyzeBranch returned invalid data!
MBB live-in list contains non-physical register
- basic block: 
- instruction: 
Instruction index out of order
Last instruction was at 
Non-terminator instruction after the first terminator
First terminator was:
Too few operands
 operands expected, but 
 given.
Found PHI instruction with NoPHIs property set
Found PHI instruction after non-PHI
Missing mayLoad flag
Missing mayStore flag
Debug instruction has a slot index
Instruction inside bundle has a slot index
Missing slot index
Unexpected generic instruction in a Selected function
Type mismatch in generic instruction
Generic instruction is missing a virtual register type
Generic instruction cannot have physical register
Instruction cannot use a vector result type
G_CONSTANT operand must be cimm
inconsistent constant size
G_FCONSTANT operand must be fpimm
Generic instruction accessing memory must have one mem operand
Generic Instruction G_PHI has operands with incompatible/missing types
bitcast cannot convert between pointers and other types
bitcast sizes must match
Generic extend/truncate can not operate on pointers
Generic extend/truncate must be all-vector or all-scalar
Generic vector extend/truncate must preserve number of lanes
Generic extend has destination type no larger than source
Generic truncate has destination type no smaller than source
G_MERGE_VALUES cannot operate on vectors
G_UNMERGE_VALUES destination types do not match
G_UNMERGE_VALUES source operand does not cover dest operands
G_BUILD_VECTOR must produce a vector from scalar operands
G_BUILD_VECTOR source operand types are not homogeneous
G_BUILD_VECTOR src operands total size don't match dest size.
G_BUILD_VECTOR_TRUNC must produce a vector from scalar operands
G_BUILD_VECTOR_TRUNC source operand types are not homogeneous
G_BUILD_VECTOR_TRUNC source operand types are not larger than dest elt type
G_CONCAT_VECTOR requires vector source and destination operands
G_CONCAT_VECTOR source operand types are not homogeneous
G_CONCAT_VECTOR num dest and source elements should match
G_SEXT_INREG expects an immediate operand #2
G_SEXT_INREG size must be >= 1
G_SEXT_INREG size must be less than source bit width
Copy Instruction is illegal with mismatching types
Def = 
, Src = 
Copy Instruction is illegal with mismatching sizes
Def Size = 
, Src Size = 
Generic vector icmp/fcmp must preserve number of lanes
meta operands to STATEPOINT not constant!
Too few operands on inline asm
Asm string must be an external symbol
Asm flags must be an immediate
Unknown asm flags
Missing operands in last group
Expected implicit register after groups
- operand 
:   
operand types must be all-vector or all-scalar
operand types must preserve number of vector elements
Explicit definition must be a register
Explicit definition marked as use
Explicit definition marked as implicit
Explicit operand marked as def
Explicit operand marked as implicit
Tied use must be a register
Operand should be tied
Tied def doesn't match MCInstrDesc
Tied counterpart must be a register
Tied physical registers must match.
Explicit operand should not be tied
Extra explicit operand on non-variadic instruction
Must be tied to a register
Missing tie flags on tied operand
Inconsistent tie links
Explicit def tied to explicit use without tie constraint
Explicit def should be tied to implicit use
Two-address instruction operands must be identical
Illegal subregister index for physical register
Illegal physical register for instruction
 is not a 
 register.
isRenamable set on reserved register
Use-reg is not IsDebug in a DBG_VALUE
Generic virtual register invalid in a Selected function
Generic virtual register must have a valid type
Generic virtual register must have a bank in a RegBankSelected function
Register bank is too small for virtual register
Register bank 
 too small(
) to fit 
-bits
Generic virtual register does not subregister index
Virtual register does not match instruction constraint
Expect register class 
 but got nothing
Invalid subregister index for virtual register
Register class 
 does not support subreg index 
Invalid register class for subregister index
 does not fully support subreg index 
No largest legal super class exists.
No matching super-reg register class.
Illegal virtual register for instruction
Expected a 
 register, but got a 
 register
PHI operand is not in the CFG
Missing fixed stack memoperand.
Instruction loads from dead spill slot
Live stack: 
Instruction stores to dead spill slot
Kill missing from LiveVariables
No live subrange at use
Virtual register has no live interval
Using an undefined physical register
Reading virtual register without a def
Using a killed virtual register
Multiple virtual register defs in SSA form
Virtual register has no Live interval
No live segment at use
Live range continues after kill flag
- liverange:   
- regunit:     
- v. register: 
- lanemask:    
- interval:    
- at:          
Inconsistent valno->def
No live segment at def
Live range continues after dead def flag
- ValNo:       
 (def 
Block ends before last instruction index
Block ends at 
 last instruction was at 
Virtual register killed in block, but needed live out.
Virtual register 
 is used after the block.
Virtual register defs don't dominate all uses.
Expected first PHI operand to be a register def
Unexpected flag on PHI operand
Expected first PHI operand to be a virtual register
Expected PHI operand to be a register
Expected PHI operand to be a basic block
PHI input is not a predecessor block
PHI operand is not live-out from predecessor
Missing PHI operand
 is a predecessor according to the CFG.
LiveVariables: Block missing from AliveBlocks
 must be live through the block.
LiveVariables: Block should not be in AliveBlocks
 is not needed live through the block.
Missing live interval for virtual register
 still has defs or uses
Lane masks of sub ranges overlap in live interval
Subrange lanemask is invalid
Subrange must not be empty
A Subrange is not covered by the main range
Multiple connected components in live interval
: valnos
Value not live at VNInfo def and not marked unused
Live segment at def has different VNInfo
Invalid VNInfo definition index
PHIDef VNInfo is not defined at MBB start
No instruction at VNInfo def index
Defining instruction does not modify register
Early clobber def must be at an early-clobber slot
Non-PHI, non-early clobber def must be at a register slot
Foreign valno in live segment
Live segment valno is marked unused
Bad start of live segment, no basic block
Live segment must begin at MBB entry or valno def
Bad end of live segment, no basic block
Live segment doesn't end at a valid instruction
Live segment ends at B slot of an instruction
Live segment ending at dead slot spans instructions
Live segment ending at early clobber slot must be redefined by an EC def in the same instruction
Instruction ending live segment on dead slot has no dead flag
Instruction ending live segment doesn't read the register
Register not marked live out of predecessor
 live into 
, not live before 
Different value live out of predecessor
Valno #
 live out of 
Valno #
- segment:     
Implement the 'patchable-function' attribute
patchable-function
simplify-mir
Leave out unnecessary information when printing MIR
mir-debug-loc
Print MIR debug-locations
<unnamed alloca>
%ir.
CustomRegMask(
alignment
exposesReturnsTwice
legalized
regBankSelected
selected
failedISel
tracksRegLiveness
registers
liveins
calleeSavedRegisters
frameInfo
fixedStack
constants
jumpTable
body
class
preferred-register
virtual-reg
isFrameAddressTaken
isReturnAddressTaken
hasStackMap
hasPatchPoint
stackSize
offsetAdjustment
maxAlignment
adjustsStack
hasCalls
stackProtector
maxCallFrameSize
hasOpaqueSPAdjustment
hasVAStart
hasMustTailInVarArgFunc
localFrameSize
savePoint
restorePoint
stack-id
isImmutable
isAliased
callee-saved-register
callee-saved-restored
debug-info-variable
debug-info-expression
debug-info-location
spill-slot
local-offset
variable-sized
isTargetSpecific
entries
block-address
gp-rel64-block-address
gp-rel32-block-address
label-difference32
custom32
blocks
MIR Printing Pass
obfuscation-symbol-map
Specify the symbol_map output
filename.bcsymbolmap
obfuscate-preserve
<sym name>
__hidden#
__ir_hidden#
could not open obfuscation symbol map: 
_CurrentVNode
_DynamicBufferIOBuffer
_EndVNode
_FreeHook
_VPBufferSize
_VPMaxNumValsPerSite
_VPMergeHook
____chkstk
____chkstk_ms
____gesf2
____lesf2
____ltsf2
____nesf2
___absvdi2
___absvsi2
___absvti2
___adddf3
___adddf3vfp
___addsf3
___addsf3vfp
___addvdi3
___addvsi3
___addvti3
___aeabi_drsub
___aeabi_frsub
___alloca
___ashldi3
___ashlti3
___ashrdi3
___ashrti3
___atomic_compare_exchange
___atomic_compare_exchange_1
___atomic_compare_exchange_16
___atomic_compare_exchange_2
___atomic_compare_exchange_4
___atomic_compare_exchange_8
___atomic_exchange
___atomic_exchange_1
___atomic_exchange_16
___atomic_exchange_2
___atomic_exchange_4
___atomic_exchange_8
___atomic_fetch_add_1
___atomic_fetch_add_16
___atomic_fetch_add_2
___atomic_fetch_add_4
___atomic_fetch_add_8
___atomic_fetch_and_1
___atomic_fetch_and_16
___atomic_fetch_and_2
___atomic_fetch_and_4
___atomic_fetch_and_8
___atomic_fetch_or_1
___atomic_fetch_or_16
___atomic_fetch_or_2
___atomic_fetch_or_4
___atomic_fetch_or_8
___atomic_fetch_sub_1
___atomic_fetch_sub_16
___atomic_fetch_sub_2
___atomic_fetch_sub_4
___atomic_fetch_sub_8
___atomic_fetch_xor_1
___atomic_fetch_xor_16
___atomic_fetch_xor_2
___atomic_fetch_xor_4
___atomic_fetch_xor_8
___atomic_load
___atomic_load_1
___atomic_load_16
___atomic_load_2
___atomic_load_4
___atomic_load_8
___atomic_store
___atomic_store_1
___atomic_store_16
___atomic_store_2
___atomic_store_4
___atomic_store_8
___bswapdi2
___bswapsi2
___chkstk
___chkstk_ms
___clzdi2
___clzsi2
___clzti2
___cmpdi2
___cmpti2
___cpu_indicator_init
___cpu_model
___ctzdi2
___ctzsi2
___ctzti2
___divdc3
___divdf3
___divdf3vfp
___divdi3
___divmodsi4
___divsc3
___divsf3
___divsf3vfp
___divsi3
___divtc3
___divti3
___divxc3
___emutls_get_address
___eprintf
___eqdf2
___eqdf2vfp
___eqsf2
___eqsf2vfp
___extendhfsf2
___extendsfdf2
___extendsfdf2vfp
___ffsdi2
___ffsti2
___fixdfdi
___fixdfsi
___fixdfsivfp
___fixdfti
___fixsfdi
___fixsfsi
___fixsfsivfp
___fixsfti
___fixunsdfdi
___fixunsdfsi
___fixunsdfsivfp
___fixunsdfti
___fixunssfdi
___fixunssfsi
___fixunssfsivfp
___fixunssfti
___fixunsxfdi
___fixunsxfsi
___fixunsxfti
___fixxfdi
___fixxfti
___floatdidf
___floatdisf
___floatdixf
___floatsidf
___floatsidfvfp
___floatsisf
___floatsisfvfp
___floattidf
___floattisf
___floattixf
___floatundidf
___floatundisf
___floatundixf
___floatunsidf
___floatunsisf
___floatunssidfvfp
___floatunssisfvfp
___floatuntidf
___floatuntisf
___floatuntixf
___gcov_flush
___gedf2
___gedf2vfp
___gesf2
___gesf2vfp
___gnu_f2h_ieee
___gnu_h2f_ieee
___gtdf2
___gtdf2vfp
___gtsf2
___gtsf2vfp
___ledf2
___ledf2vfp
___lesf2
___lesf2vfp
___llvm_get_function_addr
___llvm_profile_begin_counters
___llvm_profile_begin_data
___llvm_profile_begin_names
___llvm_profile_begin_vnodes
___llvm_profile_check_compatibility
___llvm_profile_dump
___llvm_profile_end_counters
___llvm_profile_end_data
___llvm_profile_end_names
___llvm_profile_end_vnodes
___llvm_profile_filename
___llvm_profile_get_data_size
___llvm_profile_get_magic
___llvm_profile_get_num_padding_bytes
___llvm_profile_get_path_prefix
___llvm_profile_get_size_for_buffer
___llvm_profile_get_size_for_buffer_internal
___llvm_profile_get_version
___llvm_profile_initialize_file
___llvm_profile_instrument_target
___llvm_profile_iterate_data
___llvm_profile_merge_from_buffer
___llvm_profile_raw_version
___llvm_profile_recursive_mkdir
___llvm_profile_register_write_file_atexit
___llvm_profile_reset_counters
___llvm_profile_runtime
___llvm_profile_set_filename
___llvm_profile_set_num_value_sites
___llvm_profile_write_buffer
___llvm_profile_write_buffer_internal
___llvm_profile_write_file
___lshrdi3
___lshrti3
___ltdf2
___ltdf2vfp
___ltsf2
___ltsf2vfp
___moddi3
___modsi3
___modti3
___muldc3
___muldf3
___muldf3vfp
___muldi3
___mulodi4
___mulosi4
___muloti4
___mulsc3
___mulsf3
___mulsf3vfp
___multc3
___multi3
___mulvdi3
___mulvsi3
___mulvti3
___mulxc3
___nedf2
___nedf2vfp
___negdf2
___negdi2
___negsf2
___negti2
___negvdi2
___negvsi2
___negvti2
___nesf2
___nesf2vfp
___paritydi2
___paritysi2
___parityti2
___popcountdi2
___popcountsi2
___popcountti2
___powidf2
___powisf2
___powixf2
___subdf3
___subdf3vfp
___subsf3
___subsf3vfp
___subvdi3
___subvsi3
___subvti3
___switch16
___switch32
___switch8
___switchu8
___sync_fetch_and_add_4
___sync_fetch_and_add_8
___sync_fetch_and_and_4
___sync_fetch_and_and_8
___sync_fetch_and_max_4
___sync_fetch_and_max_8
___sync_fetch_and_min_4
___sync_fetch_and_min_8
___sync_fetch_and_nand_4
___sync_fetch_and_nand_8
___sync_fetch_and_or_4
___sync_fetch_and_or_8
___sync_fetch_and_sub_4
___sync_fetch_and_sub_8
___sync_fetch_and_umax_4
___sync_fetch_and_umax_8
___sync_fetch_and_umin_4
___sync_fetch_and_umin_8
___sync_fetch_and_xor_4
___sync_fetch_and_xor_8
___truncdfhf2
___truncdfsf2
___truncdfsf2vfp
___truncsfhf2
___ucmpdi2
___ucmpti2
___udivdi3
___udivmoddi4
___udivmodsi4
___udivmodti4
___udivsi3
___udivti3
___umoddi3
___umodsi3
___umodti3
___unorddf2
___unorddf2vfp
___unordsf2
___unordsf2vfp
__alloca
_atomic_flag_clear
_atomic_flag_clear_explicit
_atomic_flag_test_and_set
_atomic_flag_test_and_set_explicit
_atomic_signal_fence
_atomic_thread_fence
_compilerrt_abort_impl
_getFirstValueProfRecord
_getValueProfDataSize
_getValueProfRecordHeaderSize
_getValueProfRecordNext
_getValueProfRecordNumValueData
_getValueProfRecordSize
_getValueProfRecordValueData
_llvm_delete_flush_function_list
_llvm_delete_writeout_function_list
_llvm_gcda_emit_arcs
_llvm_gcda_emit_function
_llvm_gcda_end_file
_llvm_gcda_increment_indirect_counter
_llvm_gcda_start_file
_llvm_gcda_summary_info
_llvm_gcov_init
_llvm_register_flush_function
_llvm_register_writeout_function
_llvm_writeout_files
_lprofApplyPathPrefix
_lprofBufferIOFlush
_lprofBufferIOWrite
_lprofBufferWriter
_lprofCreateBufferIO
_lprofCreateBufferIOInternal
_lprofCurFilename
_lprofDeleteBufferIO
_lprofFindFirstDirSeparator
_lprofFindLastDirSeparator
_lprofGetHostName
_lprofGetLoadModuleSignature
_lprofGetPathPrefix
_lprofGetVPDataReader
_lprofMergeValueProfData
_lprofOpenFileEx
_lprofProfileDumped
_lprofSetMaxValsPerSite
_lprofSetProfileDumped
_lprofSetupValueProfiler
_lprofValueProfNodes
_lprofWriteData
_lprofWriteDataImpl
_serializeValueProfDataFrom
_serializeValueProfRecordFrom
_objc_retain
_objc_release
_objc_autorelease
_objc_retainAutoreleasedReturnValue
_objc_retainBlock
_objc_autoreleaseReturnValue
_objc_autoreleasePoolPush
_objc_loadWeakRetained
_objc_loadWeak
_objc_destroyWeak
_objc_storeWeak
_objc_initWeak
_objc_moveWeak
_objc_copyWeak
_objc_retainedObject
_objc_unretainedObject
_objc_unretainedPointer
_objc_unsafeClaimAutoreleasedReturnValue
_objc_autoreleasePoolPop
_objc_retain_autorelease
_objc_retainAutorelease
_objc_retainAutoreleaseReturnValue
_objc_sync_enter
_objc_sync_exit
_objc_storeStrong
___gnat_eh_personality
___gxx_personality_v0
___gxx_personality_sj0
___gcc_personality_v0
___gcc_personality_sj0
___objc_personality_v0
__except_handler3
__except_handler4
___C_specific_handler
___CxxFrameHandler3
_ProcessCLRException
_rust_eh_personality
___stack_chk_fail
___stack_chk_guard
__obfs_tmp#
Obfuscate all strings in the module
obfuscate-module
Optimize machine instruction PHIs
opt-phis
aggressive-ext-opt
Aggressive extension optimization
disable-peephole
Disable the peephole optimizer
disable-adv-copy-opt
Disable advanced copy optimization
disable-non-allocatable-phys-copy-opt
Disable non-allocatable physical register copy optimization
rewrite-phi-limit
Limit the length of PHI chains to lookup
recurrence-chain-limit
Maximum length of recurrence chain when evaluating the benefit of commuting operands
Peephole Optimizations
peephole-opt
disable-phi-elim-edge-splitting
Disable critical edge splitting during PHI elimination
phi-elim-split-all-critical-edges
Split all critical edges during PHI elimination
no-phi-elim-live-out-early-exit
Do not use an early exit if isLiveOutPastPHIs returns true.
Eliminate PHI nodes for register allocation
phi-node-elimination
Post RA hazard recognizer
post-RA-hazard-rec
post-RA-scheduler
Enable scheduling after register allocation
break-anti-dependencies
Break post-RA scheduling anti-dependencies: "critical", "all", or "none"
postra-sched-debugdiv
Debug control MBBs that are scheduled
postra-sched-debugmod
**** NOOP ****
Post RA top-down list latency scheduler
Pre-ISel Intrinsic Lowering
pre-isel-intrinsic-lowering
Process Implicit Definitions
processimpdefs
warn-stack-size
Warn for stack size bigger than the given number
Prologue/Epilogue Insertion & Frame Finalization
prologepilog
stack size
StackSize
NumStackBytes
 stack bytes in function
TargetCustom
FixedStack
Stack
JumpTable
ConstantPool
GlobalValueCallEntry
ExternalSymbolCallEntry
verify-regalloc
Verify during register allocation
Seed Live Regs
basic register allocator
Basic Register Allocator
regallocbasic
fast register allocator
Fast Register Allocator
regallocfast
inline assembly requires more registers than available
ran out of registers during register allocation
split-spill-mode
Spill mode for splitting live ranges
Default
Optimize for size
speed
Optimize for speed
lcr-max-depth
Last chance recoloring max depth
lcr-max-interf
Last chance recoloring maximum number of considered interference at a time
exhaustive-register-search
Exhaustive Search for registers bypassing the depth and interference cutoffs of last chance recoloring
enable-local-reassign
Local reassignment can yield better allocation decisions, but may be compile time intensive
enable-deferred-spilling
Instead of spilling a variable right away, defer the actual code insertion to the end of the allocation. That way the allocator might still find a suitable coloring for this variable because of other evicted variables.
regalloc-csr-first-time-cost
Cost for first time use of callee-saved register.
condsider-local-interval-cost
Consider the cost of local intervals created by a split candidate when choosing the best split candidate.
greedy
greedy register allocator
Greedy Register Allocator
Before greedy register allocator
LoopSpillReload
NumSpills
 spills 
NumFoldedSpills
 folded spills 
NumReloads
 reloads 
NumFoldedReloads
 folded reloads 
generated in loop
register allocation failed: maximum depth for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
register allocation failed: maximum interference for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
register allocation failed: maximum interference and depth for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
Spiller
After spilling
After splitting live range around region
evict
Evict
local_split
Local Splitting
global_split
Global Splitting
After splitting live range around basic blocks
stress-regalloc
Limit all regclasses to N registers
join-liveintervals
Coalesce copies (default=true)
terminal-rule
Apply the terminal rule
join-splitedges
Coalesce copies on split edges (default=subtarget)
join-globalcopies
Coalesce copies that span blocks (default=subtarget)
verify-coalescing
Verify machine instrs before and after register coalescing
Simple Register Coalescing
simple-register-coalescing
Before register coalescing
After register coalescing
Max Pressure: 
Live In: 
Live Out: 
Curr Pressure: 
Error while trying to spill 
 from class 
: Cannot scavenge register without an emergency spill slot!
Incomplete scavenging after 2nd pass
Rename Independent Subregisters
rename-independent-subregs
Rename Disconnected Subregister Components
Rename Register Operands
mir-namer
Rename virtual register operands
canon-nth-function
Function number to canonicalize.
Rename Register Operands Canonically
mir-canonicalizer
Rename register operands in a canonical ordering.
print-regusage
print register usage details collected for analysis.
Clobbered Registers: 
Register Usage Information Storage
reg-usage-info
Register Usage Information Collector
RegUsageInfoCollector
Register Usage Information Collector Pass
Register Usage Information Propagation
reg-usage-propagation
ResetMachineFunction
Instruction selection failed
safestack-use-pointer-address
Safe Stack instrumentation pass
safe-stack
TargetLowering instance is required
__safestack_pointer_address
unsafe_stack_ptr
gcroot intrinsic not compatible with safestack attribute
.unsafe-byval
.unsafe
unsafe_stack_static_top
unsafe_stack_dynamic_ptr
safe-stack-coloring
enable safe stack coloring
Allocas:
Block liveness:
  BB [
): begin 
, end 
, livein 
, liveout 
Alloca liveness:
safe-stack-layout
enable safe stack layout
Stack regions:
), range 
Stack objects:
  at 
Scalarize unsupported masked memory intrinsics
scalarize-masked-mem-intrin
Scalarize Masked Memory Intrinsics
res.phi.else
cond.load
else
res.phi.select
cond.store
Load
ToLoad
ToStore
Data
Anti
Out 
Ord 
 Latency=
 Reg=
 Barrier
 Memory
 Artificial
 Weak
 Cluster
  # preds left       : 
  # succs left       : 
  # weak preds left  : 
  # weak succs left  : 
  # rdefs left       : 
  Latency            : 
  Depth              : 
  Height             : 
EntrySU
ExitSU
  Predecessors:
  Successors:
enable-aa-sched-mi
Enable use of AA during MI DAG construction
use-tbaa-in-sched-mi
Enable use of TBAA during MI DAG construction
dag-maps-huge-region
The limit to use while constructing the DAG prior to scheduling, at which point a trade-off is made to avoid excessive compile time.
dag-maps-reduction-size
A huge scheduling region will have maps reduced by this many nodes at a time. Defaults to HugeRegion / 2.
<entry>
<exit>
dag.
BADILP
ScheduleDAG::viewGraph is only available in debug builds on 
Scoreboard:
Shadow Stack GC Lowering
shadow-stack-gc-lowering
shadow-stack
gc_map
gc_stackentry
llvm_gc_root_chain
gc_frame
gc_currhead
gc_frame.map
gc_root
gc_frame.next
gc_newhead
gc_cleanup
gc_savedhead
gc_map.
__gc_
gc_stackentry.
enable-shrink-wrap
enable the shrink-wrapping pass
Shrink Wrap Pass
shrink-wrap
Shrink Wrapping analysis
UnsupportedIrreducibleCFG
Irreducible CFGs are not supported yet.
UnsupportedEHFunclets
EH Funclets are not supported yet.
SJLJ Exception Handling preparation
_Unwind_SjLj_Register
_Unwind_SjLj_Unregister
jbuf_gep
jbuf_fp_gep
jbuf_sp_gep
.tmp
fn_context
exception_gep
exn_val
exn_selector_gep
exn_selector_val
pers_fn_gep
lsda_addr
lpad.val
call_site
Berd
Slot index numbering
slotindexes
Spill Code Placement Analysis
spill-code-placement
 empty
Impossible to implement partial COPY
no-stack-coloring
Disable stack coloring
protect-from-escaped-allocas
Do not optimize lifetime zones that are broken
stackcoloring-lifetime-start-on-first-use
Treat stack lifetimes as starting on first use, not on START marker.
 : { 
BEGIN
LIVE_IN
LIVE_OUT
Inspecting block #
Interval[
Merge disjoint stack slots
stack-coloring
enable-patchpoint-liveness
Enable PatchPoint Liveness Analysis Pass
StackMap Liveness Analysis
stackmap-liveness
stackmap-version
Specify the stackmap encoding version (default = 3)
enable-selectiondag-sp
stack-protector-buffer-size
Guard
SP_return
CallStackCheckFailBlk
__stack_smash_handler
Insert stack protectors
stack-protector
StackGuardSlot
StackGuard
StackProtectorRequested
Stack protection applied to function 
 due to a function attribute or command-line switch
StackProtectorAllocaOrArray
 due to a call to alloca or use of a variable length array
StackProtectorBuffer
 due to a stack allocated buffer or struct containing a buffer
StackProtectorAddressTaken
 due to the address of a local variable being taken
no-stack-slot-sharing
Suppress slot sharing during stack coloring
ssc-dce-limit
Stack Slot Coloring
stack-slot-coloring
Tail Duplication
tailduplication
Early Tail Duplication
early-tailduplication
tail-dup-size
Maximum instructions to consider tail duplicating
tail-dup-indirect-size
Maximum instructions to consider tail duplicating blocks that end with indirect branches.
tail-dup-verify
Verify sanity of PHI instructions during taildup
tail-dup-limit
Malformed PHI in 
  missing input from predecessor 
Warning: malformed PHI in 
  extra input from predecessor 
  non-existing 
no-frame-pointer-elim
WinEH not implemented for this target
disable-sched-hazard
Disable hazard detection during preRA scheduling
.space
misched
post-RA-sched
cannot spill patchpoint subregister operand
jump-is-expensive
Do not create extra branches to split comparison logic.
min-jump-table-entries
Set minimum number of entries to use a jump table.
max-jump-table-size
Set maximum size of jump tables; zero for no limit.
jump-table-density
Minimum density for building a jump table in a normal function
optsize-jump-table-density
Minimum density for building a jump table in an optsize function
min-predictable-branch
Minimum percentage (0-100) that a condition must be either true or false to assume that the condition is predictable
__ashlhi3
__ashlsi3
__ashldi3
__ashlti3
__lshrhi3
__lshrsi3
__lshrdi3
__lshrti3
__ashrhi3
__ashrsi3
__ashrdi3
__ashrti3
__mulqi3
__mulhi3
__mulsi3
__muldi3
__multi3
__mulosi4
__mulodi4
__muloti4
__divqi3
__divhi3
__divsi3
__divdi3
__divti3
__udivqi3
__udivhi3
__udivsi3
__udivdi3
__udivti3
__modqi3
__modhi3
__modsi3
__moddi3
__modti3
__umodqi3
__umodhi3
__umodsi3
__umoddi3
__umodti3
__negsi2
__negdi2
__clzsi2
__clzdi2
__clzti2
__addsf3
__adddf3
__addxf3
__addtf3
__gcc_qadd
__subsf3
__subdf3
__subxf3
__subtf3
__gcc_qsub
__mulsf3
__muldf3
__mulxf3
__multf3
__gcc_qmul
__divsf3
__divdf3
__divxf3
__divtf3
__gcc_qdiv
fmaf
fmal
__powisf2
__powidf2
__powixf2
__powitf2
__gcc_stoq
__gcc_dtoq
__extendxftf2
__extenddftf2
__extendsftf2
__extendsfdf2
__gnu_h2f_ieee
__gnu_f2h_ieee
__truncdfhf2
__truncxfhf2
__trunctfhf2
__truncdfsf2
__truncxfsf2
__trunctfsf2
__gcc_qtos
__truncxfdf2
__trunctfdf2
__gcc_qtod
__trunctfxf2
__fixsfsi
__fixsfdi
__fixsfti
__fixdfsi
__fixdfdi
__fixdfti
__fixxfsi
__fixxfdi
__fixxfti
__fixtfsi
__fixtfdi
__fixtfti
__gcc_qtou
__fixunssfsi
__fixunssfdi
__fixunssfti
__fixunsdfsi
__fixunsdfdi
__fixunsdfti
__fixunsxfsi
__fixunsxfdi
__fixunsxfti
__fixunstfsi
__fixunstfdi
__fixunstfti
__floatsisf
__floatsidf
__floatsixf
__floatsitf
__gcc_itoq
__floatdisf
__floatdidf
__floatdixf
__floatditf
__floattisf
__floattidf
__floattixf
__floattitf
__floatunsisf
__floatunsidf
__floatunsixf
__floatunsitf
__gcc_utoq
__floatundisf
__floatundidf
__floatundixf
__floatunditf
__floatuntisf
__floatuntidf
__floatuntixf
__floatuntitf
__eqsf2
__eqdf2
__eqtf2
__gcc_qeq
__nesf2
__nedf2
__netf2
__gcc_qne
__gesf2
__gedf2
__getf2
__gcc_qge
__ltsf2
__ltdf2
__lttf2
__gcc_qlt
__lesf2
__ledf2
__letf2
__gcc_qle
__gtsf2
__gtdf2
__gttf2
__gcc_qgt
__unordsf2
__unorddf2
__unordtf2
__gcc_qunord
__llvm_memcpy_element_unordered_atomic_1
__llvm_memcpy_element_unordered_atomic_2
__llvm_memcpy_element_unordered_atomic_4
__llvm_memcpy_element_unordered_atomic_8
__llvm_memcpy_element_unordered_atomic_16
__llvm_memmove_element_unordered_atomic_1
__llvm_memmove_element_unordered_atomic_2
__llvm_memmove_element_unordered_atomic_4
__llvm_memmove_element_unordered_atomic_8
__llvm_memmove_element_unordered_atomic_16
__llvm_memset_element_unordered_atomic_1
__llvm_memset_element_unordered_atomic_2
__llvm_memset_element_unordered_atomic_4
__llvm_memset_element_unordered_atomic_8
__llvm_memset_element_unordered_atomic_16
_Unwind_Resume
__sync_val_compare_and_swap_1
__sync_val_compare_and_swap_2
__sync_val_compare_and_swap_4
__sync_val_compare_and_swap_8
__sync_val_compare_and_swap_16
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_fetch_and_add_1
__sync_fetch_and_add_2
__sync_fetch_and_add_4
__sync_fetch_and_add_8
__sync_fetch_and_add_16
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_sub_16
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_and_16
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_or_16
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__sync_fetch_and_xor_16
__sync_fetch_and_nand_1
__sync_fetch_and_nand_2
__sync_fetch_and_nand_4
__sync_fetch_and_nand_8
__sync_fetch_and_nand_16
__sync_fetch_and_max_1
__sync_fetch_and_max_2
__sync_fetch_and_max_4
__sync_fetch_and_max_8
__sync_fetch_and_max_16
__sync_fetch_and_umax_1
__sync_fetch_and_umax_2
__sync_fetch_and_umax_4
__sync_fetch_and_umax_8
__sync_fetch_and_umax_16
__sync_fetch_and_min_1
__sync_fetch_and_min_2
__sync_fetch_and_min_4
__sync_fetch_and_min_8
__sync_fetch_and_min_16
__sync_fetch_and_umin_1
__sync_fetch_and_umin_2
__sync_fetch_and_umin_4
__sync_fetch_and_umin_8
__sync_fetch_and_umin_16
__atomic_load
__atomic_load_1
__atomic_load_2
__atomic_load_4
__atomic_load_8
__atomic_load_16
__atomic_store
__atomic_store_1
__atomic_store_2
__atomic_store_4
__atomic_store_8
__atomic_store_16
__atomic_exchange
__atomic_exchange_1
__atomic_exchange_2
__atomic_exchange_4
__atomic_exchange_8
__atomic_exchange_16
__atomic_compare_exchange
__atomic_compare_exchange_1
__atomic_compare_exchange_2
__atomic_compare_exchange_4
__atomic_compare_exchange_8
__atomic_compare_exchange_16
__atomic_fetch_add_1
__atomic_fetch_add_2
__atomic_fetch_add_4
__atomic_fetch_add_8
__atomic_fetch_add_16
__atomic_fetch_sub_1
__atomic_fetch_sub_2
__atomic_fetch_sub_4
__atomic_fetch_sub_8
__atomic_fetch_sub_16
__atomic_fetch_and_1
__atomic_fetch_and_2
__atomic_fetch_and_4
__atomic_fetch_and_8
__atomic_fetch_and_16
__atomic_fetch_or_1
__atomic_fetch_or_2
__atomic_fetch_or_4
__atomic_fetch_or_8
__atomic_fetch_or_16
__atomic_fetch_xor_1
__atomic_fetch_xor_2
__atomic_fetch_xor_4
__atomic_fetch_xor_8
__atomic_fetch_xor_16
__atomic_fetch_nand_1
__atomic_fetch_nand_2
__atomic_fetch_nand_4
__atomic_fetch_nand_8
__atomic_fetch_nand_16
__extendhfsf2
__truncsfhf2
__bzero
__sincosf_stret
__sincos_stret
sincosf
sincos
sincosl
__safestack_unsafe_stack_ptr
 must have void* type
 must 
be thread-local
__guard_local
Invalid refinement step for -recip.
reciprocal-estimates
Funclet EH is not implemented for this target
We do not support this DWARF encoding yet!
bss-section
rodata-section
data-section
implicit-section-name
__constructor
__destructor
__mod_init_func
__mod_term_func
Invalid section specifier '
L_OBJC_IMAGE_INFO
Global variable '
' has an invalid section specifier '
' section type or attributes does not match previous section specifier
$non_lazy_ptr
.init_array.
Objective-C GC Only
Objective-C Is Simulated
Objective-C Image Swift Version
.bss.
.tdata.
.tbss.
' cannot be lowered.
.note
.rodata.cst
MachO doesn't support COMDATs, '
no-frame-pointer-elim-non-leaf
enable-ipra
Enable interprocedural register allocation to reduce load/store at procedure calls.
disable-post-ra
Disable Post Regalloc Scheduler
disable-branch-fold
Disable branch folding
disable-tail-duplicate
Disable tail duplication
disable-early-taildup
Disable pre-register allocation tail duplication
disable-block-placement
Disable probability-driven block placement
enable-block-placement-stats
Collect probability-driven block placement stats
disable-ssc
Disable Stack Slot Coloring
disable-machine-dce
Disable Machine Dead Code Elimination
disable-early-ifcvt
Disable Early If-conversion
disable-machine-licm
Disable Machine LICM
disable-machine-cse
Disable Machine Common Subexpression Elimination
optimize-regalloc
Enable optimized register allocation compilation path.
disable-postra-machine-licm
disable-machine-sink
Disable Machine Sinking
disable-postra-machine-sink
Disable PostRA Machine Sinking
disable-lsr
Disable Loop Strength Reduction Pass
disable-constant-hoisting
Disable ConstantHoisting
disable-cgp
Disable Codegen Prepare
disable-copyprop
Disable Copy Propagation pass
disable-partial-libcall-inlining
Disable Partial Libcall Inlining
enable-implicit-null-checks
Fold null checks into faulting memory operations
disable-mergeicmps
Disable MergeICmps Pass
print-lsr-output
Print LLVM IR produced by the loop-reduce pass
print-isel-input
Print LLVM IR input to isel pass
print-gc
Dump garbage collector data
verify-machineinstrs
Verify generated machine code
debugify-and-strip-all-safe
Debugify MIR before and Strip debug after each pass except those known to be unsafe when debug info is present
enable-machine-outliner
Enable the machine outliner
Run on all functions guaranteed to be beneficial
Disable all outlining
fast-isel
Enable the "fast" instruction selector
global-isel
Enable the "global" instruction selector
print-machineinstrs
Print machine instrs
pass-name
option-unspecified
global-isel-abort
Enable abort calls when "global" instruction selection fails to lower/select an instruction
Disable the abort
Enable the abort
Disable the abort but emit a diagnostic on failure
misched-postra
Run MachineScheduler post regalloc (independent of preRA sched)
early-live-intervals
Run live interval analysis earlier in the pipeline
use-cfl-aa-in-codegen
Enable the new, experimental CFL alias analysis in CodeGen
Disable CFL-AA
steens
Enable unification-based CFL-AA
anders
Enable inclusion-based CFL-AA
both
Enable both variants of CFL-AA
start-after
start-before
stop-after
stop-before
Resume compilation after a specific pass
Resume compilation before a specific pass
Stop compilation after a specific pass
Stop compilation before a specific pass
 and 
 specified!
Trying to construct TargetPassConfig without a target machine. Scheduling a CodeGen pass without a target triple set?
After 
Cannot stop compilation after pass that is not run
*** Code after LSR ***
*** Final LLVM Code input to ISel ***
regalloc
Register allocator to use
machineinstr-printer
After Instruction Selection
Must use fast (default) register allocator for unoptimized regalloc.
pick register allocator based on -O option
After pre Register Coalescer passes
After pre Machine Scheduler passes
After post Machine Scheduling passes
Target Pass Configuration
targetpassconfig
" pass is not registered.
huge-size-for-split
A threshold of live range size which may cause high compile time cost in global splitting.
stackrealign
$noreg
physreg
:sub(
Unit~
BadUnit~
schedmodel
Use TargetSchedModel for latency lookup
scheditins
Use InstrItineraryData for latency lookup
 sched: [
:%2.2f
twoaddr-reschedule
Coalesce copies by rescheduling (default=true)
dataflow-edge-limit
Maximum number of dataflow edges to traverse when evaluating the benefit of commuting operands
Two-Address instruction pass
twoaddressinstruction
After two-address instruction pass
Remove unreachable blocks from the CFG
unreachableblockelim
Remove unreachable machine basic blocks
unreachable-mbb-elimination
i128
glue
v1i1
v2i1
v4i1
v8i1
v16i1
v32i1
v64i1
v128i1
v512i1
v1024i1
v1i8
v8i8
v16i8
v32i8
v64i8
v128i8
v256i8
v1i16
v2i16
v4i16
v8i16
v16i16
v32i16
v64i16
v128i16
v1i32
v2i32
v4i32
v8i32
v16i32
v32i32
v64i32
v1i64
v2i64
v4i64
v8i64
v16i64
v32i64
v1i128
v1f32
v2f32
v2f16
v4f16
v8f16
v4f32
v8f32
v16f32
v1f64
v2f64
v4f64
v8f64
Untyped
ExceptRef
********** REGISTER MAP **********
 -> fi#
Virtual Register Map
virtregmap
Virtual Register Rewriter
virtregrewriter
register rewriting failed: cycle in copy bundle
Prepare WebAssembly exceptions
wasmehprepare
WebAssembly Exception handling preparation
__wasm_lpad_context
lpad_index_gep
lsda_gep
selector_gep
_Unwind_CallPersonality
__clang_call_terminate
selector
disable-demotion
Clone multicolor basic blocks but do not demote cross scopes
disable-cleanups
Do not remove implausible terminators or other similar cleanups
demote-catchswitch-only
Demote catchswitch BBs only (for wasm EH)
Prepare Windows exceptions
winehprepare
Windows exception handling preparation
.for.
.wineh.spillslot
.wineh.reload
Cleanup funclets for the SEH personality cannot contain exceptional actions
Cleanup funclets for the MSVC++ personality cannot contain exceptional actions
Insert XRay ops
xray-instrumentation
xray-instruction-threshold
An attempt to perform XRay instrumentation for an unsupported target.
agx-expand-builtins-default-device
Default subtarget for testing purposes with `opt`
AGX Expand Builtins
agx-expand-builtins
agc.texture_heap.read
LayerID not supported.
temporary inlining workarounds
inline-prep-hack
add alwaysinline
addalwaysinline
Performance-critical inlining decisions
agx-must-inline
AddFastMathFlags
add-fast-math-flags
move allocas to local memory
allocas-to-lm
linear_id
_lm_alloca
cl_local_per_thread
_lm_add
_lm_mul
_lm_base
_trunc
atomicoptimize-isg12-default
Set the default value for the IsG12 function
atomicoptimize-datadiverge
Set the default value for optimizing divergent data
Optimize GPU atomics
atomic-optimize
GPU Atomic Optimize pass
AGX_DisableGlobalAtomic
AGX_DisableLocalAtomic
AGX_AtomicOpt_SupportDivergentData
skip_uniform_atomics
constant_driver
.atomicsplit
.atomic
.after
GPU atomics helper thread workaround
atomic-helper-wa
GPU Atomic Helper Thread Workaround Pass
bisect-helper-shader-maxid-file
Output file where the biggest shader id seen so far is written
bisect-helper-shaderids-filter
shaderid1[,...]
List of shader IDs to run the bisect pass on. When unset will run on all shaders
bisect-helper-run-on-unknown-ids
Decide whether or not the bisecting pass should run on modules without shader ids
bisect-helper-bbs-file
basefilename
Base filename where the list of basic blocks will be written. This creates several files named <basefilename><#ShaderID>. The file format is "FuncName:BBName[;BBName...]"
bisect-helper-ensure-bb-names
Set this option to make sure all basic blocks have a name. For optimized builds, this is not uncommon to have blocks missing names, since a lot of thing that this pass does rely on blocks having names, this option is here to fix the name of these blocks.
bisect-helper-run-extract-block
Base filename for the files that list the basic blocks that need to be extracted. This reads several files named <basefilename><#ShaderID>. The file format is "FuncName:BBName[;BBName...]"
bisect-helper-funcs-file
Base filename where the list of functions will be written. This creates several files named <basefilename><#ShaderID>. The file format is "FuncName"
bisect-helper-set-funcs-attrs
Base filename for the files that list the functions that need to be tagged with 'no-gisel'. This reads several files named <basefilename><#ShaderID>. The file format is "FuncName"
bisect-helper-split-bbs-file
Base filename for the files tha list the basic blocks to be split. This reads several files named <basefilename><#ShaderID>. The file format is "FuncName BBName"
bisect-helper-split-bbs-out-file
Base filename for the files that will contain the list of basic blocks created/considered by splitting ( "-bisect-helper-split-bbs-out-file"). This writes several files named <basefilename><#ShaderID>. The file format is "FuncName BBName"
bisect-helper-split-nb-insts
Split the each bb listed in "-bisect-helper-split-bbs-out-file" after that many instructions
Print information about modules, tag functions and extract basic blocks
bisect-helper
bisect-helper-named
 Function not found: 
no-gisel
Addition of Metal buffer bound checking
bound-checking
Add bound checks to memory operations
mtl.lm_size
mtl.buffer_len
mtl.reporting_data
disable-cfg-structure
Disable trying to structure the CFG.
Perform full structurization of the CFG
Structurize CFG for GPU execution
cfg-structurize
Exit
ExitPhi
pnMove
IdxExit
IdxCmp
.duplicated
Conservative local memory fence insertion
conservative-lm-fencing
Conservative Local Memory Fencing
sink insts into loops
delicm
Extend memory references
extend-memory-references
Extend Memory References
Expand dynamic allocas
expand-allocas
Dynamic alloca expander
threshold
single-threshold
simple-switch-threshold
flatten-cutoff
Flatten control flow
gpu-flattencfg
switchcmp
float atomics emulation
float-atomics-emulation
SW emulation of float atomics
.post.atomic.emu
.atomic.emu
max-fma-contraction
Limit the fma-contraction pass
fma-contraction
disable-cfg-nesting
Disable trying to fixup the CFG to nested form.
Fixup CFG to nest basic blocks
cfg-nest
Join
.duppred
.duploop
Perform GPU-specific code gen preparation
gpu-codegen-prepare
GPU-specific code gen preparation
Allocate common store registers
common-store-alloc
Target triple must be set to agx2
Unknown section on a global variable
Global variables in address space 
 are not valid.
Ran out of shared registers after textures
Ran out of shared registers after samplers
Ran out of shared registers after driver constants
Ran out of shared registers after parameters
Ran out of shared registers after invariants
Ran out of shared registers after promoted buffers
Ran out of shared registers after constant literals
Ran out of shared registers after MSAA address
Ran out of shared registers after bindings
MD node agx.dylib_bindings must exist for dylib or kernel calling dylibs.
Expect a global variable with an initializer or an external global variable declaration.
Coefficient registers overflow
common-store-alloc-legacy
Target triple must be set to agx0/agx1
agc.dylib_base
agc.texture_heap.write
agc.texture_heap.texture_buffer_length
disable-alloca-promoter
Disable the alloca promoter step
  Buffer info for 
    Type: 
(nullptr)
    Size: 
(uninitialized)
 (unpromotable uses)
 (all promotable uses)
    Intervals:
      [
accessing [
 bytes)
interval size: 
value:
nullptr (dynamic)
GPU DMA Promotion
promotedConstantAlloca
constant_literals
literalsbuffer
literals_buffer
memorycache
memory_cache
GPU PIC Lowering
pic-lowering
air.dyld_lib_table
air.dyld_str_table
air.dyld_lib_table and air.dyld_str_table must be present together.
llvm.dyld.libs
GPU specific noalias metadata placement
gpu-noalias-metadata
Samples
Shrink load and store instructions
ls-shrinker
GPU Load and Store Shrinker
force-scalar-opt
Run the scalar optimization for all shaders, effectively ignoring the metadata and environment variable that normally control that optimization
scalar-opt-print-summary
Print the summary of the scalar optimization shaders (print nothing if the optimization doesn't run)
scalar-opt-print-liveness
Print the full liveness information
scalar-opt-print-regpressure
Print the reg pressure information
scalar-opt-print-divergence-analysis
Print the results of the divergence analysis
scalar-opt-harvest-stats
Print statistic about GPR and scalar usages but don't do any transformation
Scalar promotion optimization
scalar-promotion
Scalar promotion
New DivergenceAnalysis
Analyze: 
Empty: nothing to analyze
Collect liveness information
Perform dataflow analysis
Start iteration 
Changed livein 
 old: 
 new: 
Changed liveout 
End iteration 
_liveout
Exceed peak at: 
Exceed peak with scalar at: 
_rev
===== 
 - RegPressure for 
 =====
-peak: 
 + scalar(
-max: 
 | scalar(
) | uniform(
-livein: 
) + uniform(
-liveout: 
) + uniform (
-livethru: 
 + uniform(
-AccPressure: 
 - '
' ID: 
 - Peak pressure: 
) | 
) | AccGPR16Pressure(
) | AccScalarPressure(
) | AccUniformPressure(
) | AccInstrsFreq(
) | AccScalarInstrsFreq(
) | AvgRegFootPrintWScalar(
) | AvgRegFootPrint(
===== Liveness for 
Divergence analysis results for: 
scalar_slot
base_x_lanes
base_i8_ptr
_reload
_tail
_execOnce
pvSIMD
is_first_active_lane
Merge loops
loopmerge
GPU Loop Merge
lm.joinbb
oop No-op Analysis Pass
loop-noop-analysis
Loop No-op Analysis Pass
lower-driver-params-set-range
Optimization to set range metadata whenever possible
Lower driver parameters
lower-driver-params
driverparambuffer
dparamcache
driver_parameter_cached
memmove-expansion-threshold
Don't expand MemMove if the size is bigger than this number
Lower memory intrinsics
lower-mem-intrinsics
GPU Lower Memory Intrinsics
memcpy.split
copy_forward_loop
copy_backwards
copy_forward
memmove.done
copy_backwards_loop
memset.split
memset_loop
Transform the object shader into multiple slices
multi-path-os-transform
Multi Path Object Shader Transform
twostage.entry
twostage.ret
.gOS
.dOS1
dOS.entry
gOS_pass
dOS_pass
Version 2 of the color loop
Version 2 of the color loop, unrolled
Always unroll the color loop
multirate-unroll-force-no
Make the unroll heuristic always return false
direct-smpmsk
PreHeader
Header
BodyBegin
BodyEnd
PreLatch
Latch
Transform the shader to enable MultiRate mode
multirate-transform
MultiRate Transformation Pass
multirate_transform
msaa_ph.safe
msaa_h.safe
msaa_prelatch.safe
msaa_latch.safe
msaa_exit.safe
amp.id.load
skip-cond
smp-mask
orig-col-msk
orig-col-msk-16
col-mask
cvg-msk-next
col-mask-16
cvg-mask-next-16
smp-num
smp-num-next
amp.count
amp-count
amp-count-next
amp-mask
amp-mask-count
coverage_mask
msaa_first.blending
msaa_cond.blending
msaa_last.blending
msaa_cond1.blending
msaa_cond2.blending
msaa_cond3.blending
msaa_ph.blending
msaa_h.blending
msaa_body.blending
msaa_prelatch.blending
msaa_latch.blending
msaa_exit.blending
col-mask-shift
msaa_ph.feedback
msaa_h.feedback
msaa_body.feedback
msaa_prelatch.feedback
msaa_latch.feedback
msaa_exit.feedback
msaa_switch.entry
msaa_switch.second
msaa_switch.exit
msaa_switch.4x
msaa_switch.2x
msaa_switch.nomsaa
msaa_inter.exit
msaa.mode
msaa_pb
Optimize GPU fence instructions
optimize-fences
GPU fence optimizer
Optimize movmsk
optimize-movmsk
Optimize lowering of switches
gpu-optimize-switches
switch_pdom
switch_prepdom
indirectbr_bb
sw_cond
ptr_cast
ptr_trunc
cprog-loop-delete
Apply loop deletion in constant-programs
cprog-cfg-hoist
Apply CFG hoisting in constant-programs
cprog-gmem-hoist
Apply GMem hoisting in constant-programs
cprog-max-frontier
Force max frontier size in constant-programs in 16-bit units
cprog-can-read-from-uniforms
Can the constant programs read uniforms
cprog-hoist-agx3-uni-lod
Hoist and emit format conversions for uniform LOD in AGX3
Generation of constant programs
constant-programs
AGX_CPROG_CAN_HOIST_GLOAD_OUT_OF_CTRFLOW
agx.support.soft.fault
agx.uniform
AGX_CPROG_IGNORE_PROFIT
unique_exit
.cprog
return.cprog
computed_constants
thread_invariant
.cfg
new_gep
rangedLdToOrigLd
Unsupported instruction in uniform function
gather_buffer
_addr
_typed_addr
_value
Invariant Extraction
extract-invariants
thread_invariants.temp
invariant
atom_loop.header
atom_loop.body
atom_loop.latch
wa_true_bb
wa_false2_bb
por0
por2
replace-buffer-with-const-list-candidates
List and print out all the candidates for replacement
Replace buffer content with constants
replace-buffer-with-const
/bufferMappingForShader
.txt
/buffers
Found shader: 
Found candidate address for buffer 
 sizeInBits(
/buffer-
.buf
scalarize-cutoff
scalarize-maxldst-width
Max architectural width of LD/ST instructions
Scalarize
scalarize
tail call flag removal
tail-call-flag-removal
deferred-attribute-pass
Enable deferred VS attribute shading pass
tpp-smp-ratio
Definitely do if redundant sample ratio is less than
tpp-cost-ratio
Transform if all else is inconclusive and redundant cost ratio is less than
tpp-clique-overhead
Transform if the latency of the shader is at least this amount
Transform the shader to enable two pass punchthrough
two-pass-punchthrough
Two Pass Punchthrough
.visibility-section
tpp.visibility.return
tpp.entry
tpp.return
visibility-pass
attribute-pass
is-visibility
agx.dma-list
.vi_trimmed
TrimVertexDMAList
trim-vi-dma-list
trivial indirect call promotion
trivial-call-promotion
Optimize alloca instructions
optimize-allocas
GPU Optimize Allocas Pass
sampler_state
Gather stored buffers and resources
gather-stored-resources
agc.simd_permute_emulation_scratchpad
fixup_fb_static_constants
fixup_agx1_ba_7_1
fixup_agx1_ba_8
fixup_agx1_ba_15_9
fixup_agx1_ba_23_16
fixup_agx1_ba_24
fixup_agx1_ba_31_25
fixup_agx1_br_7_1
fixup_agx1_br_8
fixup_agx1_br_15_9
fixup_agx1_br_23_16
fixup_agx1_br_24
fixup_agx1_br_31_25
Unknown relocation!
unexpected instruction to relax: 
unsupported relocation on symbol
Not supported instr: 
Temp register used when temp registers were disallowed!
Too many cached reads specified!
async-waw
Use WAW protection on inorder async ops
dis2x2
Enable Dis2x2 bit
disallow-temp-regs
Disallow temp register usage
dualphantom
Enable a dual phantom configuration.
dvsa
Enable deferred vertex shader attribute computation
experimental
Enable experimental compilation
Enable G4 instructions
Enable G5 instructions
Enable G9 instructions
gpucfg
Use GPUCFGLowering pass
lastuse
Enable last-use hints
loadstorepersist1
Set Load/Store Persist to 1
loadstorepersist2
Set Load/Store Persist to 2
loadstorepersist3
Set Load/Store Persist to 3
multiphantom
Enable multi-Phantom atomics
no-forwarding-edges
Assume no forwarding edges
no-smpproj
Disable SMP projective mode.
noswap
Disable Swap generation
rdar14624178
Requires rdar 14624178 WA
rdar14691945
Requires rdar 14691945 WA
rdar16355991
Requires rdar 16355991 WA
rdar16406497
Requires rdar 16406497 WA
rdar16687190
Requires rdar 16687190 WA
rdar18754994
Requires rdar 18754994 WA
rdar18765481
Requires rdar 18765481 WA
rdar18846813
Requires rdar 18846813 WA
rdar19787938
Requires rdar 19787938 WA
rdar19851354
Requires rdar 19851354 WA
rdar24151408
Requires rdar 24151408 WA
samplepersist1
Set Sample Persist to 1
samplepersist2
Set Sample Persist to 2
samplepersist3
Set Sample Persist to 3
smpfwd
Enable ITR->SMP forwarding bits.
subreg-liveness
Enable subregister liveness tracking
Enable Transient Operand Cache (TOC) hints
Select the g4 processor
g4g-a1
Select the g4g-a1 processor
g4p-b1
Select the g4p-b1 processor
Select the g5 processor
g5g-a1
Select the g5g-a1 processor
Select the g5p-b0 processor
Select the g9 processor
g9g-a0
Select the g9g-a0 processor
g9g-a1
Select the g9g-a1 processor
g9p-a0
Select the g9p-a0 processor
g9p-b0
Select the g9p-b0 processor
InvalidUnit
G4UnitALU
G4UnitCTRL
G4UnitITR
G4UnitSMP
InvalidSchedClass
WriteLMEM
WriteALU
WriteCTRL
WriteALU_ReadDFD
WriteGMEM
WriteITR1
WriteITR10
WriteITRP10
WriteITR11
WriteITRP11
WriteITR12
WriteITRP12
WriteITR13
WriteITRP13
WriteITR14
WriteITRP14
WriteITR15
WriteITRP15
WriteITR16
WriteITRP16
WriteITRP1
WriteITR2
WriteITRP2
WriteITR3
WriteITRP3
WriteITR4
WriteITRP4
WriteITR5
WriteITRP5
WriteITR6
WriteITRP6
WriteITR7
WriteITRP7
WriteITR8
WriteITRP8
WriteITR9
WriteITRP9
WriteSMP
WriteUVSW
COPY
WriteNothing
G5UnitALU
G5UnitCTRL
G5UnitITR
G5UnitSMP
AGX1
AGX pre-RA Analysis pass
AGX Pre RA Analysis
agx-pre-ra-analysis
print-gpucfglower-cfgunloopifier
Print a DAG showing the CFG unloopified representation
print-gpucfglower-controlgraph
Print a DAG showing the control graph
print-gpucfglower-flowanalyzer
Print a DAG showing the flow analysis
CFG Lowering
gpu-cfg-lower
GPU Control Flow Lowering
CFGUnloopifier
ControlGraph
FlowAnalyzer
style=bold
style=filled,color="#00ff0080"
(null-bb)
style=dotted,minlen=5
color=lightgrey,
dir=back
 (NodePtr=
EntryNestingLevel=
ExitNestingLevel=
UnstructuredID=
PrologExtraCndEnds=
LoopEndPrologs=
UnstructuredCndEnd
SkipUnstructuredSuccessorEmit
InvertPredicate
LoopBegin
IfBegin
IfElseBegin
ElseBegin
UnstructuredProlog
LoopEndEpilog
LoopBackedge
LoopBreak
OptimizedUnstructuredLoopExit
OptimizedLoopEpilog
style="grey,dotted"
GPU Conditional Flattener
gpu-cond-flatten
GPU conditional flattener
GPU Iterate Combiner
gpu-itr-combine
GPU Specific Iterate Combine
print-perf-diags-for-loops-only
Print performance statistic diagnostics ignoring all instructions outside of loops
agx.compiler_counters
agx.telemetry_statistics
LLVM_AGX_STUFF_LM_SPILL_SIZE_TO_COEFF
agx.common_store_dma
__GPU_VIDMALIST
__GPU_STATS
__counters
__GPU_METADATA_2
Literal constant used when compiling for shared library
__vertex
__fragment
__compute
cl_local_internal
disable-gpu-sample-sink
Disable the GPUSampleSink pass
disable-gpu-sample-sink-unspill-budgeting
Disable the GPUSampleSink unspillable register budgeting
GPU Sample Sink
gpu-sample-sink
GPU sample sinking pass
GPU Wait Placement
gpu-wait-placement
GPU wait placement pass
print-detailed-perf-diags
Print detailed performance statistic diagnostics
"Instrs":
NumThirdRateInstructions
NumFifthRateInstructions
NumTwelfthRateInstructions
NumSixteenthRateInstructions
RegsAllocated
GPRUnusableOccupancy
SampleInstrs
GlobalLdInstrs
GlobalStInstrs
StackLdInstrs
StackStInstrs
BrInstrs
VertexInRegs
RegsUsed
NonG15Instructions
StackSz
WaitAndStallTime
IntegralRegPressure
IntegralIRSTKPressure
IntegralGPRPressure
NumDeactivations
NumTagChecks
TotalIssueTime
TotalShaderLatency
TotalTimeInChannel
TotalCycleCount
UL1ReadsWrites
GPRsLiveOut
IRsLiveOut
STKsLiveOut
, "DataInstrs":
, "ControlInstrs":
, "MoveInstrs":
, "ImmInstrs":
, "ALUInstrs":
, "Int16Instrs":
, "Int32Instrs":
, "FP16Instrs":
, "FP32Instrs":
, "LocalLdInstrs":
, "LocalStInstrs":
, "ComplexInstrs":
, "AtomicInstrs":
, "UniformMoveInstrs":
, "UniformLdInstrs":
, "UniformMoveSz":
, "UniformLdSz":
, "LatencyHidingInstrs":
, "TotalStallCycles":
, "ImmStallCycles":
, "F16StallCycles":
, "F32StallCycles":
, "ComplexStallCycles":
, "MathCycles":
, "MathClauses":
, "ShortClauseInefficiency":
, "AfterPixwaitInstrs":
, "UnpairedMoveInstrs":
, "RegWrbacks":
, "MoveInstrWrbacks":
, "RegsFwded":
, "WDFInstrs":
, "IterateInstrs":
, "ForwardedIterates":
, "LoadCoefInstrs":
, "CoeffRegs":
, "UniformRegs":
, "TextureRegs":
, "SamplerRegs":
, "CProgInstrs":
, "ImgStateBdgSz":
, "SmpStateBdgSz":
, "ThreadInvStackSz":
, "ControlDataSwitches":
, "NumLoops":
Inliner for always_inline functions
always-inline
argpromotion
Promote 'by reference' arguments to scalars
A No-Op Barrier Pass
barrier
extract-blocks-file
A file containing list of basic blocks to extract
extract-blocks-erase-funcs
Erase the existing functions
Extract basic blocks from module
extract-blocks
BlockExtractor couldn't load the file.
Missing bbs name
Invalid function name specified in the input file
Invalid block name specified in the input file
Invalid basic block
cvp-max-functions-per-value
The maximum number of functions to track per lattice value
undefined
overdefined
untracked
unknown lattice value
unknown lattice key
Undefined  
Overdefined
Untracked  
FunctionSet
<reg> 
<mem> 
<ret> 
Called Value Propagation
called-value-propagation
constmerge
Merge Duplicate Global Constants
Cross-DSO CFI
cross-dso-cfi
cfi.functions
__cfi_check
+thumb-mode
CallSiteTypeId
Addr
CFICheckFailData
entry
exit
fail
__cfi_check_fail
test
newret
oldret
Dead Argument Elimination
deadargelim
Dead Argument Hacking (BUGPOINT USE ONLY; DO NOT USE)
deadarghaX0r
elim-avail-extern
Eliminate Available Externally Globals
force-attribute
Add an attribute to a function. This should be a pair of 'function-name:attribute-name', for example -force-attribute=foo:noinline. This option can be specified multiple times.
Force set function attributes
forceattrs
enable-nonnull-arg-prop
Try to propagate nonnull argument attributes from callsites to caller functions.
disable-nounwind-inference
Stop inferring nounwind attribute during function-attrs pass
functionattrs
Deduce function attributes
Deduce function attributes in RPO
rpo-functionattrs
import-instr-limit
Only import functions with less than N instructions
import-cutoff
Only import first N functions if N>=0 (default -1)
import-instr-evolution-factor
As we import functions, multiply the `import-instr-limit` threshold by this factor before processing newly imported functions
import-hot-evolution-factor
As we import functions called from hot callsite, multiply the `import-instr-limit` threshold by this factor before processing newly imported functions
import-hot-multiplier
Multiply the `import-instr-limit` threshold for hot callsites
import-critical-multiplier
Multiply the `import-instr-limit` threshold for critical callsites
import-cold-multiplier
Multiply the `import-instr-limit` threshold for cold callsites
print-imports
Print imported functions
compute-dead
Compute dead symbols
enable-import-metadata
Enable import metadata like 'thinlto_src_module'
summary-file
The summary file to use for function importing.
import-all-index
Import all external functions in index.
thinlto_src_module
: Import 
Function Import: link error
function-import
error: -function-import requires -summary-file
Error loading file '
Error renaming module
Error importing module: 
Abort
Summary Based Function Import
Function Importing
.llvm.
Dead Global Elimination
globaldce
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InnerAnalysisManagerProxy<llvm::FunctionAnalysisManager, llvm::Module>]
DesiredTypeName = 
enable-coldcc-stress-test
Enable stress test of coldcc by adding calling conv to all internal functions.
coldcc-rel-freq
Maximum block frequency, expressed as a percentage of caller's entry frequency, for a call site to be considered cold for enablingcoldcc
globalopt
newgv
.init
.val
notinit
isneg
isnull
malloc_cont
malloc_ret_null
free_it
next
llvm.metadata
Global Variable Optimizer
Global splitter
globalsplit
hot-cold-static-analysis
min-outlining-thresh
Code size threshold for outlining within a single BB (as a multiple of TCC_Basic)
hotcoldsplit
cold.
HotColdSplit
Original
 split cold code into 
Split
Hot Cold Splitting
Interprocedural constant propagation
ipconstprop
main
Infer set function attributes
inferattrs
Function Integration/Inlining
disable-inlined-alloca-merging
inliner-function-import-stats
basic
basic statistics
verbose
printing of statistics for each inlined function
Enable inliner stats for imported functions
NoDefinition
 will not be inlined into 
Caller
 because its definition is unavailable
NotInlined
AlwaysInline
Inlined
 inlined into 
 with cost=always
 with cost=
Cost
 (threshold=
Threshold
 not inlined into 
 because it should never be inlined (cost=never)
TooCostly
 because too costly to inline (cost=
, threshold=
IncreaseCostInOtherContexts
Not inlining. Cost of inlining 
 increases the cost of inlining 
 in other contexts
internalize-public-api-file
A file containing list of symbol names to preserve
internalize-public-api-list
list
A list of symbol names to preserve
llvm.global.annotations
__stack_chk_fail
__stack_chk_guard
internalize
WARNING: Internalize couldn't load file '
'! Continuing as if it's empty.
Internalize Global Symbols
Extract loops into new functions
loop-extract
Extract at most one loop into a new function
loop-extract-single
lowertypetests-avoid-reuse
Try to avoid reuse of byte array addresses using aliases
lowertypetests-summary-action
What to do with the summary when running this pass
Do nothing
Import typeid resolutions from summary and globals
export
Export typeid resolutions to summary and globals
lowertypetests-read-summary
Read summary from given YAML file before running pass
lowertypetests-write-summary
Write summary to given YAML file after running pass
offset 
Lower type metadata
lowertypetests
-lowertypetests-read-summary: 
-lowertypetests-write-summary: 
GlobalValueMap
TypeIdMap
WithGlobalValueDeadStripping
CfiFunctionDefs
CfiFunctionDecls
Linkage
NotEligibleToImport
Live
Local
Refs
TypeTests
TypeTestAssumeVCalls
TypeCheckedLoadVCalls
TypeTestAssumeConstVCalls
TypeCheckedLoadConstVCalls
GUID
Offset
VFunc
key not an integer
TTRes
WPDRes
Kind
SizeM1BitWidth
AlignLog2
SizeM1
BitMask
InlineBits
Unsat
ByteArray
Inline
Single
AllOnes
SingleImplName
ResByArg
Indir
SingleImpl
BranchFunnel
Byte
UniformRetVal
UniqueRetVal
VirtualConstProp
unexpected call to llvm.icall.branch.funnel during import phase
Second argument of llvm.type.test must be metadata
llvm.icall.branch.funnel not supported on this target
number of arguments should be odd
Expected branch funnel operand to be global value
aliases
symvers
.symver 
Second argument of llvm.type.test must be a metadata string
global_addr
size_m1
byte_array
bit_mask
inline_bits
__typeid_
bits_use
.cfi
.cfi_jt
__cfi_global_var_init
__TEXT,__StaticInit,regular,pure_instructions
.text.startup
All operands of type metadata must have 2 elements
Bit set element may not be thread-local
A member of a type identifier may not have an explicit section
Type offset must be a constant
Type offset must be an integer constant
Type identifier may not contain both global variables and functions
Unsupported architecture for jump tables
.cfi.jumptable
-thumb-mode
jmp ${
:c}@plt
int3
int3
int3
b.w $
wasm.index
bits
mergefunc-sanity
How many functions in module could be used for MergeFunctions pass sanity check. '0' disables this check. Works only with '-debug' key.
mergefunc-preserve-debug-info
Preserve debug info in thunk when mergefunc transformations are made.
Merge Functions
mergefunc
disable-partial-inlining
Disable partial inlining
disable-mr-partial-inlining
Disable multi-region partial inlining
pi-force-live-exit-outline
Force outline regions with live exits
pi-mark-coldcc
Mark outline function calls with ColdCC
skip-partial-inlining-cost-analysis
Skip Cost Analysis
min-region-size-ratio
Minimum ratio comparing relative sizes of each outline candidate and original function
min-block-execution
Minimum block executions to consider its BranchProbabilityInfo valid
cold-branch-ratio
Minimum BranchProbability to consider a region cold.
max-num-inline-blocks
Max number of blocks to be partially inlined
max-partial-inlining
Max number of partial inlining. The default is unlimited
outline-region-freq-percent
Relative frequency of outline region to the entry block
partial-inlining-extra-penalty
A debug option to add additional penalty to the computed one.
Partial Inliner
partial-inliner
partial-inlining
MultiExitRegion
Region dominated by 
Block
 has more than one region exit edge.
 inline cost-savings smaller than 
ExtractFailed
Failed to extract region at block 
PartiallyInlined
 partially inlined into 
OutlineRegionTooSmall
 not partially inlined into callers (Original Size = 
OutlinedRegionOriginalSize
, Size of call sequence to outlined function = 
NewSize
 should always be fully inlined, not partially
 not partially inlined into 
OutliningCallcostTooHigh
 runtime overhead (overhead=
Overhead
, savings=
Savings
 of making the outlined call is too high
CanBePartiallyInlined
 can be partially inlined into 
Partially inlined into at least one caller
Remove unused exception handling info
prune-eh
sample-profile-file
Profile file loaded by -sample-profile
sample-profile-max-propagate-iterations
Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.
sample-profile-check-record-coverage
Emit a warning if less than N% of records in the input profile are matched to the IR.
sample-profile-check-sample-coverage
Emit a warning if less than N% of samples in the input profile are matched to the IR.
no-warn-sample-unused
Use this option to turn off/on warnings about function with samples but without debug information to use those samples. 
Sample Profile loader
sample-profile
Sample profile pass
Could not open profile: 
 available profile records (
%) were applied
 available profile samples (
No debug information found in function 
: Function profile not used
Callee function not available
Not inline
incompatible inlining
HotInline
inlined hot callee '
' into '
AppliedSamples
Applied 
NumSamples
 samples from profile (offset: 
LineOffset
Discriminator
PopularDest
most popular destination for conditional branches at 
CondBranchesLoc
Interprocedural Sparse Conditional Constant Propagation
ipsccp
strip-dead-prototypes
Strip Unused Function Prototypes
Strip all symbols from a module
strip
Strip all symbols, except dbg symbols, from a module
strip-nondebug
Strip all llvm.dbg.declare intrinsics
strip-debug-declare
Strip debug info for unused symbols
strip-dead-debug-info
wholeprogramdevirt-summary-action
wholeprogramdevirt-read-summary
wholeprogramdevirt-write-summary
wholeprogramdevirt-branch-funnel-threshold
Maximum number of call targets per call site to enable branch funnels
Whole program devirtualization
wholeprogramdevirt
-wholeprogramdevirt-read-summary: 
-wholeprogramdevirt-write-summary: 
Devirtualized
devirtualized 
FunctionName
unique_member
branch_funnel
single-impl
Optimization
: devirtualized a call to 
uniform-ret-val
unique-ret-val
virtual-const-prop-1-bit
virtual-const-prop
+retpoline
branch-funnel
$merged
disable-icp
Disable indirect call promotion
icp-cutoff
Max number of promotions for this compilation
icp-csskip
Skip Callsite up to this number for this compilation
icp-lto
Run indirect-call promotion in LTO mode
icp-samplepgo
Run indirect-call promotion in SamplePGO mode
icp-call-only
Run indirect-call promotion for call instructions only
icp-invoke-only
Run indirect-call promotion for invoke instruction only
icp-dumpafter
Dump IR after transformation happens
pgo-icall-prom
Count
Promoted
Promote indirect call to 
DirectCallee
 with count 
Vectorize load and store instructions
load-store-vectorizer
GPU Load and Store Vectorizer
enable-if-conversion
Enable if-conversion during vectorization.
pragma-vectorize-memory-check-threshold
The maximum allowed number of runtime memory checks with a vectorize(enable) pragma.
vectorize-scev-check-threshold
The maximum number of SCEV checks allowed.
pragma-vectorize-scev-check-threshold
The maximum number of SCEV checks allowed with a vectorize(enable) pragma
vectorize.width
interleave.count
vectorize.enable
isvectorized
loop control flow is not understood by vectorizer
NeitherInductionNorReduction
value could not be identified as an induction or reduction variable
control flow not understood by vectorizer
NonReductionValueUsedOutsideLoop
value that could not be identified as reduction is used outside the loop
CantVectorizeCall
call instruction cannot be vectorized
CantVectorizeIntrinsic
intrinsic instruction cannot be vectorized
CantVectorizeInstructionReturnType
instruction return type cannot be vectorized
CantVectorizeStore
store instruction cannot be vectorized
ValueUsedOutsideLoop
value cannot be used outside the loop
NoInductionVariable
loop induction variable could not be identified
CantVectorizeStoreToLoopInvariantAddress
write to a loop invariant address could not be vectorized
IfConversionDisabled
if-conversion is disabled
LoopContainsSwitch
loop contains a switch statement
NoCFGForSelect
control flow cannot be substituted for a select
TooManySCEVRunTimeChecks
Too many SCEV assumptions need to be made and checked 
at runtime
llvm.loop.
AllDisabled
loop not vectorized: vectorization and interleaving are explicitly disabled, or the loop has already been vectorized
MissedExplicitlyDisabled
loop not vectorized: vectorization is explicitly disabled
MissedDetails
loop not vectorized
 (Force=
, Vector Width=
VectorWidth
, Interleave Count=
CantReorderFPOps
loop not vectorized: cannot prove it is safe to reorder floating-point operations
CantReorderMemOps
loop not vectorized: cannot prove it is safe to reorder memory operations
vectorizer-min-trip-count
Loops with a constant trip count that is smaller than this value are vectorized only if no scalar iteration overheads are incurred.
vectorizer-maximize-bandwidth
Maximize bandwidth when selecting vectorization factor which will be determined by the smallest type in loop.
enable-interleaved-mem-accesses
Enable vectorization on interleaved memory accesses in a loop
max-interleave-group-factor
Maximum factor for an interleaved access group (default = 8)
force-target-num-scalar-regs
A flag that overrides the target's number of scalar registers.
force-target-num-vector-regs
A flag that overrides the target's number of vector registers.
force-target-max-scalar-interleave
A flag that overrides the target's max interleave factor for scalar loops.
force-target-max-vector-interleave
A flag that overrides the target's max interleave factor for vectorized loops.
force-target-instruction-cost
A flag that overrides the target's expected cost for an instruction to a single constant value. Mostly useful for getting consistent testing.
small-loop-cost
The cost of a loop that is considered 'small' by the interleaver.
loop-vectorize-with-block-frequency
Enable the use of the block frequency analysis to access PGO heuristics minimizing code growth in cold regions and being more aggressive in hot regions.
enable-loadstore-runtime-interleave
Enable runtime interleaving until load/store ports are saturated
vectorize-num-stores-pred
Max number of stores to be predicated behind an if.
enable-ind-var-reg-heur
Count the induction variable only once when interleaving
enable-cond-stores-vec
Enable if predication of stores during vectorization.
max-nested-scalar-reduction-interleave
The maximum interleave count to use when interleaving a scalar reduction in a nested loop.
enable-vplan-native-path
Enable VPlan-native vectorization path with support for outer loop vectorization.
vplan-build-stress-test
Build VPlan for every supported loop nest in the function and bail out right after the build (stress test the VPlan H-CFG construction in the VPlan-native vectorization path).
broadcast
vec.ind
step.add
vec.ind.next
offset.idx
reverse
wide.vec
strided.vec
interleaved.vec
wide.masked.gather
wide.masked.load
wide.load
.cloned
index
index.next
exitcount.ptrcnt.to.int
n.mod.vf
n.vec
min.iters.check
vector.ph
scev.check
vector.scevcheck
vector.memcheck
vector.body
middle.block
scalar.ph
bc.resume.val
cast.crd
ind.end
cmp.n
cast.cmo
ind.escape
vector.recur.init
vector.recur
vector.recur.extract
vector.recur.extract.for.phi
scalar.recur.init
scalar.recur
minmax.ident
bc.merge.rdx
vec.phi
next.gep
CantVersionLoopWithDivergentTarget
runtime pointer checks needed. Not enabled for divergent target
CantVersionLoopWithOptForSize
runtime pointer checks needed. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os/-Oz
UnknownLoopCountComplexCFG
unable to calculate the loop count due to complex control flow
NoTailLoopWithOptForSize
cannot optimize for size and vectorize at the same time. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os/-Oz
ConditionalStore
store that is conditionally executed prevents vectorization
pred.
.entry
.continue
Pre-Entry
Initial VPlan for VF={
},UF>=1
"INTERLEAVE-GROUP with factor 
predphi
NoImplicitFloat
loop not vectorized due to NoImplicitFloat attribute
UnsafeFP
loop not vectorized due to unsafe FP support.
VectorizationNotBeneficial
the cost-model indicates that vectorization is not beneficial
InterleavingNotBeneficial
the cost-model indicates that interleaving is not beneficial
InterleavingNotBeneficialAndDisabled
 and is explicitly disabled or interleave count is set to 1
InterleavingBeneficialButDisabled
the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1
loop-vectorize
FailedRequestedVectorization
loop not vectorized: 
failed explicitly specified loop vectorization
FailedRequestedInterleaving
loop not interleaved: 
failed explicitly specified loop interleaving
"BRANCH-ON-MASK 
 All-One
Interleaved
interleaved loop (interleaved count: 
InterleaveCount
Vectorized
vectorized loop (vectorization width: 
VectorizationFactor
, interleaved count: 
slp-threshold
Only vectorize if you gain more than this number 
slp-vectorize-hor
Attempt to vectorize horizontal reductions
slp-vectorize-hor-store
Attempt to vectorize horizontal reductions feeding into a store
slp-max-reg-size
Attempt to vectorize for this register size in bits
slp-schedule-budget
Limit the size of the SLP scheduling region per block
slp-min-reg-size
slp-recursion-max-depth
Limit the recursion depth when building a vectorizable tree
slp-min-tree-size
Only vectorize small trees if they are fully vectorizable
view-slp-tree
Display the SLP trees with Graphviz
SLP: Spill Cost = 
SLP: Extract Cost = 
SLP: Total Cost = 
shuffle
reorder_shuffle
slp-vectorizer
StoresVectorized
Stores SLP vectorized with cost 
 and with tree size 
TreeSize
VectorizedList
SLP vectorized with cost 
op.rdx
op.extra
HorSLPNotBeneficial
Vectorizing horizontal reduction is possible
but not beneficial with cost 
 and threshold 
VectorizedHorizontalReduction
Vectorized horizontal reduction with cost 
rdx.shuf.l
rdx.shuf.r
color=red
<splat> 
 <extract>
SmallVF
Cannot SLP vectorize list: vectorization factor 
less than 2 is not supported
UnsupportedType
Cannot SLP vectorize list: type 
 is unsupported by vectorizer
NotBeneficial
List vectorization was possible but not beneficial with cost 
 >= 
Treshold
NotPossible
Cannot SLP vectorize list: vectorization was impossible
 with available vectorization factors
"EMIT 
vector.body.latch
"WIDEN\l"
"WIDEN-INDUCTION
"WIDEN-PHI 
"BLEND 
CLONE 
REPLICATE 
 (S->V)
"PHI-PREDICATED-INSTRUCTION 
"WIDEN 
vplan-verify-hcfg
Verify VPlan H-CFG.
adce-remove-control-flow
adce-remove-loops
adce
Aggressive Dead Code Elimination
alignment-from-assumptions
bdce
Bit-Tracking Dead Code Elimination
callsite-splitting-duplication-threshold
Only allow instructions before a call, if their cost is below DuplicationThreshold
Call-site splitting
callsite-splitting
phi.call
consthoist-with-block-frequency
Enable the use of the block frequency analysis to reduce the chance to execute const materialization more frequently than without hoisting.
const_mat
const
Constant Hoisting
consthoist
Simple constant propagation
constprop
cvp-dont-process-adds
Value Propagation
correlated-propagation
.lhs.trunc
.rhs.trunc
.zext
Dead Instruction Elimination
Dead Code Elimination
enable-dse-partial-overwrite-tracking
Enable partial-overwrite tracking in DSE
enable-dse-partial-store-merging
Enable partial store merging in DSE
Dead Store Elimination
Hoist/decompose integer division and remainder
div-rem-pairs
early-cse
Controls which instructions are removed
Early CSE
Early CSE w/ MemorySSA
early-cse-memssa
Flatten the CFG
flattencfg
float2int-max-integer-bw
Max integer bitwidth to consider in float2int(default=64)
Float to int
float2int
Base: 
 Offset: 
 Length: 
wide.chk
guard-widening
Widen guards
Widen guards (within a single loop, as a loop pass)
loop-guard-widening
enable-pre
enable-load-pre
max-recurse-depth
Max recurse depth (default = 1000)
.pre
.pre-phi
LoadClobbered
load of type 
 not eliminated
 in favor of 
OtherAccess
 because it is clobbered by 
ClobberedBy
LoadElim
 eliminated
InfavorOfValue
LoadPRE
load eliminated by PRE
gvn-max-hoisted
Max number of instructions to hoist (default unlimited = -1)
gvn-hoist-max-bbs
Max number of basic blocks on the path between hoisting locations (default = 4, unlimited = -1)
gvn-hoist-max-depth
Hoist instructions from the beginning of the BB up to the maximum specified depth (default = 100, unlimited = -1)
gvn-hoist-max-chain-length
Maximum length of dependent chains to hoist (default = 10, unlimited = -1)
gvn-hoist
Early GVN Hoisting of Expressions
.gvnsink.split
gvn-sink
Early GVN sinking of Expressions
irce-loop-size-cutoff
irce-print-changed-loops
irce-print-range-checks
irce-max-exit-prob-reciprocal
irce-skip-profitability-checks
irce-allow-unsigned-latch
InductiveRangeCheck:
  Kind: 
  Begin: 
  Step: 
  End: 
  CheckUse: 
 Operand: 
RANGE_CHECK_UNKNOWN
RANGE_CHECK_UPPER
RANGE_CHECK_LOWER
RANGE_CHECK_BOTH
Inductive range check elimination
irce
irce: looking at loop 
irce: loop has 
 inductive range checks: 
indvar.start
irce.loop.clone
exit.preloop.at
exit.mainloop.at
preloop
postloop
mainloop
.exit.selector
.pseudo.exit
.copy
indvar.end
llvm.loop.vectorize.enable
llvm.loop.licm_versioning.disable
llvm.loop.distribute.enable
irce: in function 
constrained 
verify-indvars
Verify the ScalarEvolution result after running indvars
replexitval
Choose the strategy to replace exit value in IndVarSimplify
never
never replace exit value
cheap
only replace exit value when the cost is cheap
always
always replace exit value whenever possible
indvars-post-increment-ranges
Use post increment control-dependent ranges in IndVarSimplify
disable-lftr
Disable Linear Function Test Replace optimization
indvars
.int
indvar.conv
.wide
wide.trip.count
lftr.wideiv
exitcond
lftr.limit
Induction Variable Simplification
Infer address spaces
infer-address-spaces
Remove redundant instructions
instsimplify
jump-threading-threshold
Max block size to duplicate for jump threading
jump-threading-implication-search-threshold
The number of predecessors to search for a stronger condition to use to thread over a weaker condition
print-lvi-after-jump-threading
Print the LazyValueInfo cache after JumpThreading
thread-pre-split
.thr_comm
.thread
select.unfold
Jump Threading
jump-threading
disable-licm-promotion
Disable memory promotion in LICM pass
licm-max-num-uses-traversed
Max num uses visited for identifying load invariance in loop using invariant start (default = 8)
.promoted
Loop Invariant Code Motion
licm
agx.reduce.reg.pressure
InstSunk
sinking 
Inst
.split.loop.exit
.lcssa
Hoisted
hoisting 
LoadWithLoopInvariantAddressCondExecuted
failed to hoist load with loop-invariant address because load is conditionally executed
LoadWithLoopInvariantAddressInvalidated
failed to move load with loop-invariant address because the loop may invalidate its value
PromoteLoopAccessesToScalar
Moving accesses to memory location out of the loop
sink-freq-percent-threshold
Do not sink instructions that require cloning unless they execute less than this percent of the time.
max-uses-for-sinking
Do not sink instructions that have too many uses.
Loop Sink
loop-sink
Delete dead loops
loop-deletion
loop-prefetch-writes
Prefetch write addresses
prefetch-distance
Number of instructions to prefetch ahead
min-prefetch-stride
Min stride to add prefetches
max-prefetch-iters-ahead
Max number of iterations to prefetch ahead
Loop Data Prefetch
loop-data-prefetch
prefaddr
Prefetched
prefetched memory access
loop-distribute-verify
Turn on DominatorTree and LoopInfo verification after Loop Distribution
loop-distribute-non-if-convertible
Whether to distribute into a loop that may not be if-convertible by the loop vectorizer
loop-distribute-scev-check-threshold
The maximum number of SCEV checks allowed for Loop Distribution
loop-distribute-scev-check-threshold-with-pragma
The maximum number of SCEV checks allowed for Loop Distribution for loop marked with #pragma loop distribute(enable)
enable-loop-distribute
Enable the new, experimental LoopDistribution Pass
MultipleExitBlocks
multiple exit blocks
NotLoopSimplifyForm
loop is not in loop-simplify form
MemOpsCanBeVectorized
memory operations are safe for vectorization
NoUnsafeDeps
no unsafe dependences to isolate
CantIsolateUnsafeDeps
cannot isolate unsafe dependencies
TooManySCEVRuntimeChecks
too many SCEV run-time checks needed.
loop-distribute
loop not distributed: 
loop not distributed: failed explicitly specified loop distribution
NotDistributed
loop not distributed: use -Rpass-analysis=loop-distribute for more info
.ldist
Distribute
distributed loop
use-lir-code-size-heurs
Use loop idiom recognition code size heuristics when compilingwith -Os/-Oz
Recognize loop idioms
loop-idiom
.memset_pattern
tcphi
tcdec
loop-instsimplify
Simplify instructions in loops
loop-interchange-threshold
Interchange if you gain more than this number
Interchanges loops for cache reuse
loop-interchange
Dependence
Cannot interchange loops due to dependences.
CallInst
Cannot interchange loops due to call instruction.
ExitingNotLatch
Loops where the latch is not the exiting block cannot be interchange currently.
UnsupportedPHIInner
Only inner loops with induction or reduction PHI nodes can be interchange currently.
MultiInductionInner
Only inner loops with 1 induction variable can be interchanged currently.
UnsupportedPHIOuter
Only outer loops with induction or reduction PHI nodes can be interchanged currently.
ReductionsOuter
Outer loops with reductions cannot be interchangeed currently.
MultiIndutionOuter
Only outer loops with 1 induction variable can be interchanged currently.
UnsupportedStructureInner
Inner loop structure not understood currently.
NoLCSSAPHIOuterInner
Only inner loops with LCSSA PHIs can be interchange currently.
NoIncrementInInner
The inner loop does not increment the induction variable.
UnsupportedInsBetweenInduction
Found unsupported instruction between induction variable increment and branch.
NoIndutionVariable
Did not find the induction variable.
NotTightlyNested
Cannot interchange loops because they are not tightly nested.
UnsupportedExitPHI
Found unsupported PHI node in loop exit.
InterchangeNotProfitable
Interchanging loops is too costly (cost=
) and it does not improve parallelism.
Interchanged
Loop interchanged with enclosing loop.
runtime-check-per-loop-load-elim
Max number of memchecks allowed per eliminated load on average
loop-load-elimination-scev-check-threshold
The maximum number of SCEV checks allowed for Loop Load Elimination
loop-load-elim
storeforward
load_initial
store_forwarded
loop-predication-enable-iv-truncation
loop-predication-enable-count-down-loop
loop-predication-skip-profitability-checks
loop-predication-latch-probability-scale
scale factor for the latch probability. Value should be greater than 1. Lower values are ignored
Loop predication
loop-predication
reroll-num-tolerated-failed-matches
The maximum number of failures to tolerate during fuzzy matching. (default: 400)
Reroll loops
loop-reroll
reroll
rotation-max-header-size
The default maximum header size for automatic loop rotation
Rotate Loops
loop-rotate
Simplify loop CFG
loop-simplifycfg
enable-lsr-phielim
Enable LSR phi elimination
lsr-insns-cost
Add instruction count to a LSR cost model
lsr-exp-narrow
Narrow LSR complex solution using expectation of registers number
lsr-filter-same-scaled-reg
Narrow LSR search space by filtering non-optimal formulae with the same ScaledReg and Scale
[NumUses=
reg(
**error: HasBaseReg**
**error: !HasBaseReg**
*reg(
imm(
 instruction
 reg
, with addrec cost 
, plus 
 IV mul
 base add
 scale cost
 imm cost
 setup cost
UserInst=
store 
, OperandValToReplace=
, PostIncLoop=
, Offset=
LSR Use: Kind=
Basic
Special
ICmpZero
Address of 
pointer
 in addrspace(
, Offsets={
, all-fixups-outside-loop
, widest fixup type: 
in formulae referencing 
 in use 
 , add offset 
LSR has identified the following interesting factors and types: 
LSR is examining the following fixup sites:
LSR is examining the following uses:
IV.S.
IV.S.next.
.termcond
scmp
lsr.chain
Loop Strength Reduction
loop-reduce
unroll-threshold
The cost threshold for loop unrolling
unroll-partial-threshold
The cost threshold for partial loop unrolling
unroll-max-percent-threshold-boost
The maximum 'boost' (represented as a percentage >= 100) applied to the threshold when aggressively unrolling a loop due to the dynamic cost savings. If completely unrolling a loop will reduce the total runtime from X to Y, we boost the loop unroll threshold to DefaultThreshold*std::min(MaxPercentThresholdBoost, X/Y). This limit avoids excessive code bloat.
unroll-max-iteration-count-to-analyze
Don't allow loop unrolling to simulate more than this number ofiterations when checking full unroll profitability
unroll-count
Use this unroll count for all loops including those with unroll_count pragma values, for testing purposes
unroll-max-count
Set the max unroll count for partial and runtime unrolling, fortesting purposes
unroll-full-max-count
Set the max unroll count for full unrolling, for testing purposes
unroll-peel-count
Set the unroll peeling count, for testing purposes
unroll-allow-partial
Allows loops to be partially unrolled until -unroll-threshold loop size is reached.
unroll-allow-remainder
Allow generation of a loop remainder (extra iterations) when unrolling a loop.
unroll-runtime
Unroll loops with run-time trip counts
unroll-max-upperbound
The max of trip count upper bound that is considered in unrolling
pragma-unroll-threshold
Unrolled size limit for loops with an unroll(full) or unroll_count pragma.
flat-loop-tripcount-threshold
If the runtime tripcount for the loop is lower than the threshold, the loop is considered as flat and will be less aggressively unrolled.
unroll-allow-peeling
Allows loops to be peeled when the dynamic trip count is known to be low.
unroll-remainder
Allow the loop remainder to be unrolled.
unroll-revisit-child-loops
Enqueue and re-visit child loops in the loop PM after unrolling. This shouldn't typically be needed as child loops (or their clones) were already visited.
llvm.loop.unroll.count
llvm.loop.unroll.full
llvm.loop.unroll.enable
llvm.loop.unroll.runtime.disable
Unroll loops
loop-unroll
<unnamed loop>
llvm.loop.unroll.disable
UnrollAsDirectedTooLarge
Unable to unroll loop as directed by unroll(enable) pragma because unrolled size is too large.
FullUnrollAsDirectedTooLarge
Unable to fully unroll loop as directed by unroll pragma because unrolled size is too large.
CantFullUnrollAsDirectedRuntimeTripCount
Unable to fully unroll loop as directed by unroll(full) pragma because loop has a runtime trip count.
DifferentUnrollCountFromDirected
Unable to unroll loop the number of times directed by unroll_count pragma because remainder loop is restricted (that could architecture specific or because the loop contains a convergent instruction) and so must have an unroll count that divides the loop trip multiple of 
TripMultiple
.  Unrolling instead 
UnrollCount
 time(s).
allow-unroll-and-jam
Allows loops to be unroll-and-jammed.
unroll-and-jam-count
Use this unroll count for all loops including those with unroll_and_jam_count pragma values, for testing purposes
unroll-and-jam-threshold
Threshold to use for inner loop when doing unroll and jam.
pragma-unroll-and-jam-threshold
Unrolled size limit for loops with an unroll_and_jam(full) or unroll_count pragma.
Unroll and Jam loops
loop-unroll-and-jam
llvm.loop.unroll_and_jam.
llvm.loop.unroll_and_jam.disable
llvm.loop.unroll_and_jam.count
llvm.loop.unroll_and_jam.enable
loop-unswitch-threshold
Max loop size to unswitch
Unswitch loops
loop-unswitch
us-unreachable
.us-lcssa
licm-versioning-invariant-threshold
LoopVersioningLICM's minimum allowed percentageof possible invariant instructions per loop
licm-versioning-max-depth-threshold
LoopVersioningLICM's threshold for maximum allowed loop nest/depth
Loop Versioning For LICM
loop-versioning-licm
Loop Versioning for LICM
IllegalLoopStruct
 Unsafe Loop structure
IllegalLoopInst
 Unsafe Loop Instruction
RuntimeCheck
Number of runtime checks 
RuntimeChecks
 exceeds threshold 
InvariantThreshold
Invariant load & store 
LoadAndStoreCounter
 are less then defined threshold 
IllegalLoopMemoryAccess
 Unsafe Loop memory access
IsLegalForVersioning
 Versioned loop for LICM.
 Number of runtime checks we had to insert 
LVDomain
LVAliasScope
Lower atomic intrinsics to non-atomic form
loweratomic
likely-branch-weight
Weight of the branch likely to be taken (default = 2000)
unlikely-branch-weight
Weight of the branch unlikely to be taken (default = 1)
Lower 'expect' Intrinsics
lower-expect
guards-predicate-pass-branch-weight
The probability of a guard failing is assumed to be the reciprocal of this value (default = 1 << 20)
Lower the guard intrinsic to normal control flow
lower-guard-intrinsic
guarded
deoptcall
spill
splat
block
scalar
Lower operations on the matrix type
lower-matrix-type
MemCpy Optimization
memcpyopt
Merge contiguous icmps into a memcmp
mergeicmps
MergedLoadStoreMotion
mldst-motion
Nary reassociation
nary-reassociate
newgvn-vn
Controls which instructions are value numbered
newgvn-phi
Controls which instructions we create phi of ops for
enable-store-refinement
enable-phi-of-ops
Global Value Numbering
newgvn
ExpressionTypeConstant, 
 constant = 
ExpressionTypeVariable, 
 variable = 
phiofops
ExpressionTypeUnknown, 
 inst = 
etype = 
opcode = 
ExpressionTypeBasic, 
operands = {
] = 
ExpressionTypeCall, 
 represents call at 
ExpressionTypeLoad, 
 represents Load at 
 with MemoryLeader 
ExpressionTypeStore, 
 represents Store  
 with StoredValue 
 and MemoryLeader 
ExpressionTypeAggregateValue, 
, intoperands = {
ExpressionTypePhi, 
bb = 
call.sqrt
Partially inline calls to library functions
partially-inline-libcalls
spp-all-backedges
spp-counted-loop-trip-width
spp-split-backedge
spp-no-entry
spp-no-call
spp-no-backedge
gc.safepoint_poll
Place Backedge Safepoints
place-backedge-safepoints-impl
Place Safepoints
place-safepoints
factor
reass.mul
reassociate
and.ra
reass.add
.neg
Reassociate expressions
Demote all values to stack slots
reg2mem
reg2mem alloca point
spp-print-liveset
spp-print-liveset-size
spp-print-base-pointers
spp-rematerialization-threshold
rs4gc-clobber-non-live
rs4gc-allow-statepoint-with-no-deopt-info
Make relocations explicit at statepoints
rewrite-statepoints-for-gc
Base Pairs: (w/Relocation)
 derived 
 base 
__tmp_use
Live Variables:
Safepoint For: 
Number live values: 
Base Pairs (w/o Relocation):
base_ee
is_base_value
.base
base_phi
base_select
base_ie
base_sv
.remat
__llvm_deoptimize
safepoint_token
statepoint_token
deopt-lowering
.relocated
.casted
Sparse Conditional Constant Propagation
sccp
sroa-random-shuffle-slices
sroa-strict-inbounds
Can't analyze slices for alloca: 
  A pointer to this alloca escaped by:
Slices of alloca: 
.sroa.
 slice #
 (splittable)
  used by: 
sroa_raw_cast
sroa_raw_idx
sroa_cast
sroa_idx
sroa
load.ext
endian_shift
insert
.extract
extract
.shift
.trunc
.ext
.mask
.insert
load.trunc
.expand
blend
oldload
copyload
isplat
vsplat
.splatinsert
.splat
.fca
.gep
.load
.sroa.speculated
.sroa.speculate.load.
.sroa.speculate.load.true
.sroa.speculate.load.false
SROA
Scalar Replacement Of Aggregates
Scalarize vector operations
scalarizer
scalarize-load-store
Allow the scalarizer pass to scalarize loads and store
.upto
disable-separate-const-offset-from-gep
Do not separate the constant offset from a GEP instruction
reassociate-geps-verify-no-dead-code
Verify this pass produces no dead code
Split GEPs to a variadic base and a constant offset for better CSE
separate-const-offset-from-gep
idxprom
Dead instruction detected!
enable-nontrivial-unswitch
Forcibly enables non-trivial loop unswitching rather than following the configuration passed into the pass.
unswitch-threshold
The cost threshold for unswitching a loop.
simple-loop-unswitch
.us-phi
Simple unswitch loops
bonus-inst-threshold
Control the number of bonus instructions (default = 1)
keep-loops
Preserve canonical loop structure (default = true)
switch-to-lookup
Convert switches to lookup tables (default = false)
forward-switch-cond
Forward switch condition to phi ops (default = false)
sink-common-insts
Sink common instructions (default = false)
simplifycfg
Simplify the CFG
sink
Code sinking
spec-exec-max-speculation-cost
Speculative execution is not applied to basic blocks where the cost of the instructions to speculatively execute exceeds this limit.
spec-exec-max-not-hoisted
Speculative execution is not applied to basic blocks where the number of instructions that would not be speculatively executed exceeds this limit.
spec-exec-only-if-divergent-target
Speculative execution is applied only to targets with divergent branches, even if the pass was configured to apply only to all targets.
Speculatively execute instructions
speculative-execution
Speculatively execute instructions if target has divergent branches
Straight line strength reduction
slsr
structurizecfg-skip-uniform-regions
Force whether the StructurizeCFG pass skips uniform regions
Structurize the CFG
structurizecfg
Structurize control flow
structurizecfg.uniform
entry.orig
Flow
Tail Call Elimination
tailcallelim
disable-tail-calls
tailcall-readnone
marked as tail call candidate (readnone)
tailrecurse
accumulator.tr
tailcall-recursion
transforming tail recursion into loop
': can only link appending global with another appending global!
Appending variables with different element types!
Appending variables linked with different const'ness!
Appending variables with different alignment need to be linked!
Appending variables with different visibility need to be linked!
Appending variables with different unnamed_addr need to be linked!
Appending variables with different section name need to be linked!
Linking two modules of different data layouts: '
' is '
' whereas '
Linking two modules of different target triples: 
.text
.balign 2
.thumb
.text
.balign 4
.arm
linking module flags '
': IDs have conflicting override values
': IDs have conflicting behaviors
': IDs have conflicting values
': does not have the required value
Linking COMDATs named '
': invalid selection kinds!
': noduplicates has been violated!
': ExactMatch violated!
': SameSize violated!
': COMDAT key involves incomputable alias size.
': GlobalVariable required for data dependent selection!
Linking globals named '
': symbol multiply defined!
parse
Parse IR
irparse
LLVM IR Parsing
constant bigger than 64 bits detected!
constant bigger than 128 bits detected!
end of file in COMDAT variable name
Null bytes are not allowed in names
end of file in string constant
invalid value number (too large)!
end of file in global variable name
bitwidth for integer type out of range!
define
constant
dso_local
dso_preemptable
hidden
protected
externally_initialized
thread_local
initialexec
localexec
caller
from
musttail
notail
source_filename
unwind
deplibs
datalayout
volatile
syncscope
nnan
arcp
contract
reassoc
fast
exact
inbounds
inrange
addrspace
section
module
sideeffect
inteldialect
prefix
prologue
avr_intrcc
avr_signalcc
blockaddress
distinct
uselistorder_bb
personality
catch
filter
path
guid
summaries
linkage
notEligibleToImport
live
dsoLocal
insts
funcFlags
readNone
noRecurse
returnDoesNotAlias
calls
callee
hotness
relbf
aliasee
refs
typeIdInfo
typeTests
vFuncId
args
typeid
summary
typeTestRes
kind
sizeM1BitWidth
alignLog2
sizeM1
bitMask
inlineBits
wpdResolutions
wpdRes
singleImplName
resByArg
byArg
info
Can't read textual IR with a Context that discards named Values
expected function name in blockaddress
use of undefined type '%
use of undefined type named '
use of undefined comdat '$
use of undefined value '@
use of undefined metadata '!
use of undefined summary '^
use of undefined type id summary '^
expected top-level entity
expected 'module asm'
unknown target property
expected '=' after target triple
expected '=' after target datalayout
expected '=' after source_filename
expected '=' after deplibs
expected ']' at end of list
expected '=' after name
expected 'type' after '='
non-struct types may not be recursive
expected 'type' after name
expected 'global' or 'constant'
variable expected to be numbered '%
expected '=' in global variable
expected '=' here
expected comdat keyword
expected comdat type
unknown selection kind
redefinition of comdat '$
Expected '!' here
Expected '{' here
DIExpression
expected end of metadata node
unexpected type in metadata definition
Metadata id is already used
Expected 'gv', 'module', or 'typeid' at the start of summary entry
expected ':' at start of summary entry
expected '(' at start of summary entry
found end of file while parsing summary entry
unexpected summary kind
invalid linkage type for alias
symbol with local linkage must have default visibility
expected comma after alias or ifunc's type
invalid aliasee
An alias or ifunc must have pointer type
explicit pointee type doesn't match operand's pointee type
explicit pointee type should be a function type
redefinition of global '@
forward reference and definition of alias have different types
invalid type for global variable
forward reference and definition of global have different types
expected global section string
unknown global variable property!
expected attribute group id
expected '{' here
expected end of attribute group
attribute group has no attributes
unterminated attribute group
cannot have an attribute group reference in an attribute group
invalid use of attribute on a function
invalid use of parameter-only attribute on a function
global variable reference must have pointer type
' defined with type '
expected string constant
expected integer
expected 32-bit integer (too large)
expected localdynamic, initialexec or localexec
expected ')' after thread local model
expected '(' in address space
expected ')' in address space
invalid use of function-only attribute
invalid use of parameter-only attribute
invalid use of attribute on return type
dso_location and DLL-StorageClass mismatch
expected metadata after comma
alignment is not a power of two
huge alignments are not supported yet
expected '('
expected ')'
dereferenceable bytes must be non-zero
expected metadata or 'align'
expected metadata or 'addrspace'
'allocsize' indices can't refer to the same parameter
Expected '(' in syncscope
Expected synchronization scope name
Expected ')' in syncscope
Expected ordering on atomic instruction
stack alignment is not a power of two
expected ',' as start of index list
expected index
expected '>' at end of packed struct
void type only allowed for function results
basic block pointers are invalid
pointers to void are invalid - use i8* instead
pointer to this type is invalid
pointers to void are invalid; use i8* instead
expected '*' in address space
expected '(' in call
expected ',' in argument list
unexpected ellipsis in argument list for 
non-musttail call
musttail call in non-varargs function
expected ')' at end of argument list
expected '...' at end of argument list for musttail call in varargs function
expected ',' in input list
expected '(' in operand bundle
operand bundle set must not be empty
argument can not have void type
invalid type for function argument
invalid function return type
argument name invalid in function type
argument attributes invalid in function type
redefinition of type
forward references to non-struct type
expected '>' in packed struct
invalid element type for struct
expected '}' at end of struct
expected number in address space
expected 'x' after element count
expected ']' to close array
invalid array element type
expected 'x' after the number of columns
expected '>' to close matrix
matrix must have non-zero rows
matrix must have non-zero columns
matrix has too many rows
matrix has too many columns
invalid matrix element type
expected '>' to close vector
vector must have more than 0 elements
too many elements for vector
invalid vector element type
use of undefined value '%
' is not a basic block
invalid use of a non-first-class type
instructions returning void cannot have a name
instruction expected to be numbered '%
instruction forward referenced with type '
multiple definition of local value named '
expected value token
expected end of struct constant
expected end of packed struct
expected end of constant
constant vector must not be empty
vector elements must have integer, pointer or floating point type
vector element #
 is not of type '
expected end of array constant
invalid array element type: 
array element #
expected string
expected comma in inline asm expression
expected constraint string
expected '(' in block address expression
expected comma in block address expression
expected ')' in block address expression
expected basic block name in blockaddress
cannot take blockaddress inside a declaration
referenced value is not a basic block
cannot take address of numeric label after the function is defined
expected '(' after constantexpr cast
expected 'to' in constantexpr cast
expected ')' at end of constantexpr cast
invalid cast opcode for cast from '
' to '
expected '(' in extractvalue constantexpr
expected ')' in extractvalue constantexpr
extractvalue operand must be aggregate type
invalid indices for extractvalue
expected '(' in insertvalue constantexpr
expected comma in insertvalue constantexpr
expected ')' in insertvalue constantexpr
insertvalue operand must be aggregate type
invalid indices for insertvalue
insertvalue operand and field disagree in type: '
' instead of '
expected '(' in compare constantexpr
expected comma in compare constantexpr
expected ')' in compare constantexpr
compare operands must have the same type
fcmp requires floating point operands
icmp requires pointer or integer operands
expected '(' in binary constantexpr
expected comma in binary constantexpr
expected ')' in binary constantexpr
operands of constexpr must have same type
nuw only applies to integer operations
nsw only applies to integer operations
constexpr requires integer operands
constexpr requires fp operands
expected '(' in logical constantexpr
expected comma in logical constantexpr
expected ')' in logical constantexpr
constexpr requires integer or integer vector operands
expected '(' in constantexpr
expected comma after getelementptr's type
expected ')' in constantexpr
base of getelementptr must be a pointer
getelementptr index must be an integer
getelementptr vector index has a wrong number of elements
base element of getelementptr must be sized
invalid getelementptr indices
inrange keyword may not appear on pointer operand
expected three operands to select
expected three operands to shufflevector
invalid operands to shufflevector
expected two operands to extractelement
invalid extractelement operands
expected three operands to insertelement
invalid insertelement operands
global values must be constants
expected comdat variable
expected ')' after comdat var
comdat cannot be unnamed
expected '!' here
DILocation
DIGlobalVariableExpression
GenericDINode
DISubrange
DIEnumerator
DIBasicType
DIDerivedType
DICompositeType
DISubroutineType
DIFile
DICompileUnit
DISubprogram
DILexicalBlock
DILexicalBlockFile
DINamespace
DIModule
DITemplateTypeParameter
DITemplateValueParameter
DIGlobalVariable
DILocalVariable
DILabel
DIObjCProperty
DIImportedEntity
DIMacro
DIMacroFile
expected metadata type
missing required field 'scope'
missing required field 'tag'
missing required field 'count'
missing required field 'name'
missing required field 'value'
unsigned enumerator with negative value
missing required field 'baseType'
missing required field 'types'
missing required field 'filename'
missing required field 'directory'
'checksumkind' and 'checksum' must be provided together
missing 'distinct', required for !DICompileUnit
missing required field 'language'
missing required field 'file'
missing 'distinct', required for !DISubprogram when 'isDefinition'
missing required field 'discriminator'
missing required field 'type'
missing required field 'line'
expected '(' here
invalid DWARF op '
expected unsigned integer
element too large, limit is 
expected ')' here
missing required field 'var'
missing required field 'expr'
invalid metadata-value-metadata roundtrip
expected metadata operand
functions are not values, refer to them as pointers
invalid use of function-local name
invalid type for inline asm constraint string
integer constant must have integer type
floating point constant invalid for type
floating point constant does not have type '
null must be a pointer type
invalid type for undef constant
invalid empty array initializer
invalid type for null constant
invalid type for none constant
constant expression type mismatch
initializer with struct type has wrong # elements
packed'ness of initializer and type don't match
element 
 of struct initializer doesn't match struct element type
expected a basic block
invalid linkage for function definition
invalid linkage for function declaration
invalid function linkage type
function expected to be numbered '%
expected function name
expected '(' in function argument list
'builtin' attribute not valid on function
functions with 'sret' argument must return void
invalid forward reference to function as global value!
invalid forward reference to function '
' with wrong type!
invalid redefinition of function '
redefinition of function '@
type of definition and forward reference of '@
' disagree
redefinition of argument '%
expected '{' in function body
function body requires at least one basic block
unable to create block named '
expected '=' after instruction id
expected '=' after instruction name
found end of file when expecting more instructions
expected instruction opcode
fast-math-flags specified for select without floating-point scalar or vector return type
expected fcmp predicate (e.g. 'oeq')
expected icmp predicate (e.g. 'eq')
value doesn't match function result type '
branch condition must have 'i1' type
expected ',' after branch condition
expected ',' after true destination
expected ',' after switch condition
expected '[' with switch table
switch condition must have integer type
expected ',' after case value
duplicate case value in switch
case value is not a constant integer
expected ',' after indirectbr address
expected '[' with indirectbr
indirectbr address must have pointer type
expected ']' at end of block list
expected 'to' in invoke
expected 'unwind' in invoke
Invalid result type for LLVM function
too many arguments specified
argument is not of expected type '
not enough parameters specified for call
invoke instructions may not have an alignment
expected '[' in catchpad/cleanuppad
expected 'from' after cleanupret
expected 'unwind' in cleanupret
expected 'caller' in cleanupret
expected 'from' after catchret
expected 'to' in catchret
expected 'within' after catchswitch
expected scope value for catchswitch
expected '[' with catchswitch labels
expected ']' after catchswitch labels
expected 'unwind' after catchswitch scope
expected 'caller' in catchswitch
expected 'within' after catchpad
expected scope value for catchpad
expected 'within' after cleanuppad
expected scope value for cleanuppad
expected ',' in arithmetic operation
invalid operand type for instruction
expected ',' in logical operation
instruction requires integer or integer vector operands
expected ',' after compare value
icmp requires integer operands
expected 'to' after cast value
expected ',' after select condition
expected ',' after select value
expected ',' after vaarg operand
va_arg requires operand with first class type
expected ',' after extract value
expected ',' after insertelement value
expected ',' after shuffle mask
expected ',' after shuffle value
invalid shufflevector operands
expected '[' in phi value list
expected ']' in phi value list
phi node must have first class type
'catch' clause has an invalid type
'filter' clause has an invalid type
clause argument must be a constant
expected 'tail call', 'musttail call', or 'notail call'
fast-math-flags specified for call without floating-point scalar or vector return type
call instructions may not have an alignment
invalid type for alloca
element count must have integer type
expected comma after load's type
load operand must be a pointer to a first class type
atomic load must have explicit non-zero alignment
atomic load cannot use Release ordering
expected ',' after store operand
store operand must be a pointer
store operand must be a first class value
stored value and pointer type do not match
atomic store must have explicit non-zero alignment
atomic store cannot use Acquire ordering
expected ',' after cmpxchg address
expected ',' after cmpxchg cmp operand
cmpxchg cannot be unordered
cmpxchg failure argument shall be no stronger than the success argument
cmpxchg operand must be a pointer
compare value and pointer type do not match
new value and pointer type do not match
cmpxchg operand must be a first class value
expected binary operation in atomicrmw
expected ',' after atomicrmw address
atomicrmw cannot be unordered
atomicrmw operand must be a pointer
atomicrmw value and pointer type do not match
 operand must be an integer or floating point type
 operand must be a floating point type
 operand must be an integer
atomicrmw operand must be power-of-two byte-sized integer
fence cannot be unordered
fence cannot be monotonic
expected comma after insertvalue operand
value has no uses
value only has one use
wrong number of indexes, expected 
expected non-empty list of uselistorder indexes
expected '}' here
expected >= 2 uselistorder indexes
expected distinct uselistorder indexes in range [0, size)
expected uselistorder indexes to change the order
expected uselistorder directive
expected comma in uselistorder directive
expected comma in uselistorder_bb directive
expected function name in uselistorder_bb
invalid function forward reference in uselistorder_bb
invalid declaration in uselistorder_bb
invalid numeric label in uselistorder_bb
expected basic block name in uselistorder_bb
invalid basic block in uselistorder_bb
expected basic block in uselistorder_bb
expected ':' here
expected 'path' here
expected ',' here
expected 'hash' here
expected 'name' here
expected 'summary' here
expected 'typeTestRes' here
expected 'kind' here
unexpected TypeTestResolution kind
expected 'sizeM1BitWidth' here
expected ':'
expected optional TypeTestResolution field
expected 'wpdResolutions' here
expected 'offset' here
expected 'wpdRes' here
unexpected WholeProgramDevirtResolution kind
expected optional WholeProgramDevirtResolution field
expected 'resByArg' here
expected 'byArg here
unexpected WholeProgramDevirtResolution::ByArg kind
expected optional whole program devirt field
expected 'args' here
expected name or guid tag
expected 'summaries' here
expected summary type
expected 'insts' here
expected optional function summary field
expected 'aliasee' here
expected ':' in funcFlags
expected '(' in funcFlags
expected function flag type
expected ')' in funcFlags
expected ':' in calls
expected '(' in calls
expected 'callee' in call
expected relbf
expected ')' in call
expected ')' in calls
invalid call edge hotness
expected ':' in refs
expected '(' in refs
expected ')' in refs
expected '(' in typeIdInfo
invalid typeIdInfo list type
expected ')' in typeIdInfo
expected 'guid' here
expected 'linkage' here
expected 'notEligibleToImport' here
expected 'live' here
expected 'dsoLocal' here
expected 'module' here
expected module ID
expected GV ID
expected type
expected field label here
invalid field '
field '
' cannot be specified more than once
value for '
' too large, limit is 
' cannot be null
operands
expected DWARF tag
invalid DWARF tag
' cannot be empty
expected signed integer
' too small, limit is 
expected 'true' or 'false'
expected DWARF type attribute encoding
invalid DWARF type attribute encoding
expected debug info flag
invalid debug info flag flag '
expected DWARF language
invalid DWARF language
expected DWARF calling convention
invalid DWARF calling convention
checksumkind
expected emission kind
expected DWARF virtuality code
invalid DWARF virtuality code
expected DWARF macinfo type
invalid DWARF macinfo type
Could not open input file: 
agx-instcombine
instcombine-visit
Controls which instructions are visited
expensive-combines
Enable expensive instruction combines
instcombine-maxarray-size
Maximum array size considered when doing a combine
instcombine-lower-dbg-declare
phitmp
instcombine
Combine redundant instructions
.offs
.idx
addconv
diff.neg
notmask
.masked
and.shrunk
bitfield
notlhs
notrhs
.demorgan
instcombine-guard-widening-window
How wide an instruction window to bypass looking for another guard
blendv
exec
thunk
nvptx-f32ftz
unmaskedload
castvec
tmpcast
.lobit
.unshifted
.sext
.add
to.ptr
.ptr
.conv
sadd
sadd.result
sadd.overflow
umul
umul.value
.cast
storemerge
.unpack
.elt
.repack
suba
subc
mulconv
mulsqrt
instcombine-max-num-phis
Maximum number phis to handle in intptr/ptrint folding
.shrunk
extract.t
narrow
not.
.inv
.Elt
.lhs
.rhs
agx.driver_parameters_dma
memorytocheck
disableindexopt
useaddsatindex
checkstores
checkatomics
hardware_support
agx.local.store.spill
per-thread-spill-bytes
soa-layout
thread-group-size
per-thread-alloca-bytes
soa-layout-alloca
TargetGPU
agx.prid
extendintsext
extendintzext
extendint
Unable to replace a constant with instructions
driver_parameters
0x1p+32
agx.
min-temp-reg-limit
temp-reg-limit
Pick mode of operation for agx-shader-canonicalizer:
agx-canon-dedup
Strip all metadata that does not change assembly output (or WILL in undesirable way), drop most type and value names. Optimal for IR deduplication purposes
agx-canon-test
Only strip metadata that we don't care to have in OfflineIR suite and regression tests
Drop redundant metadata, assign empty names to most of the values
agx-shader-canonicalizer
air.language_version
air.source_file_name
air.requestHash
air.sampler_states
air.max_device_buffers
air.max_constant_buffers
air.max_threadgroup_buffers
air.max_textures
air.max_read_write_textures
air.max_samplers
GitHash
no-discriminators
Disable generation of discriminator information.
Add DWARF path discriminators
add-discriminators
.split-lp
lpad
lpad.phi
_crit_edge
split
.clone
Break critical edges in CFG
break-crit-edges
cstr
chari
Return type mismatch
The number of arguments mismatch
Argument type mismatch
if.true.direct_targ
if.false.orig_indirect
if.end.icp
.split
aggregate-extracted-args
Aggregate arguments to code-extracted functions
.ret
gep_
loadgep_
.out
.loc
structArg
targetBlock
gep_reload_
.reload
.exitStub
codeRepl
newFuncRoot
debugify-quiet
Suppress verbose debugify output
debugify-level
Kind of debug info to add
locations
Locations only
location+variables
Locations and Variables
Skipping module with debug info
debugify
llvm.debugify
ModuleDebugify: 
CheckModuleDebugify
Attach debug info to everything
check-debugify
Check debug info from -debugify
debugify-function
Attach debug info to a function
check-debugify-function
Check debug info from -debugify-function
FunctionDebugify: 
CheckFunctionDebugify
Skipping module without debugify metadata
ERROR: Instruction with empty DebugLoc in function 
WARNING: Missing line 
WARNING: Missing variable 
FAIL
PASS
ERROR: dbg.value operand has size 
, but its variable has size 
.reg2mem
Instrument function entry/exit with calls to e.g. mcount() (pre inlining)
ee-instrument
Instrument function entry/exit with calls to e.g. mcount() (post inlining)
post-inline-ee-instrument
instrument-function-entry-inlined
instrument-function-entry
instrument-function-exit-inlined
instrument-function-exit
.mcount
__gnu_mcount_nc
_mcount
mcount
__mcount
_mcount
__cyg_profile_func_enter_bare
__cyg_profile_func_enter
__cyg_profile_func_exit
Unknown instrumentation function: '
Scoped EH not supported
cleanup.lpad
enable-noalias-to-md-conversion
Convert noalias attributes to metadata during inlining.
preserve-alignment-assumptions-during-inlining
Convert align attributes to assumptions during inlining.
savedstack
.exit
ptrint
offsetcast
offsetptr
maskedptr
maskcond
agx1
agx2
: argument 
.body
.lpad-body
eh.lpad-body
_udiv-special-cases
udiv-end
udiv-loop-exit
udiv-do-while
udiv-preheader
udiv-bb1
------- Dumping inliner stats for [
] -------
-- List of inlined functions:
Inlined 
imported 
not imported 
function [
: #inlines = 
, #inlines_to_importing_module = 
-- Summary:
All functions: 
, imported functions: 
inlined functions
all functions
imported functions inlined anywhere
imported functions
imported functions inlined into importing module
, remaining
non-imported functions inlined anywhere
non-imported functions
non-imported functions inlined into importing module
% of 
Assign names to anonymous instructions
instnamer
verify-loop-lcssa
Verify loop lcssa form (time consuming)
lcssa
Loop-Closed SSA Form Pass
Conditionally eliminate dead library calls
libcalls-shrinkwrap
cdce.call
cdce.end
cond
.noexc
gc-leaf-function
.lr.ph
.preheader
.outer
loop-simplify
.backedge
Canonicalize natural loops
unroll-runtime-epilog
Allow runtime unrolled loops to be unrolled with epilog instead of prolog.
unroll-verify-domtree
Verify domtree after unrolling
FullyUnrolled
completely unrolled loop with 
 iterations
Peeled
 peeled loop by 
PeelCount
 with a breakout at trip 
BreakoutTrip
PartialUnrolled
unrolled loop by a factor of 
 with 
 trips per branch
 with run-time trip count
completely unroll and jammed loop with 
unroll and jammed loop by a factor of 
unroll-peel-max-count
Max average trip count which will cause loop peeling.
unroll-force-peel-count
Force a peel count regardless of profiling information.
.peel.begin
.peel.next
.peel.newph
.peel
unroll-runtime-multi-exit
Allow runtime unrolling for loops with multiple exits, when epilog is generated
.new
.unr-lcssa
.epil.preheader
.prol.preheader
.prol.loopexit
xtraiter
lcmp.mod
unroll_iter
niter
.nsub
.ncmp
epil
prol
.iter
.cmp
.unr
.epilog-lcssa
rdx.minmax.cmp
rdx.minmax.select
induction
bin.rdx
rdx.shuf
.loopexit
loop-version-annotate-no-alias
Add no-alias annotation for instructions that are disambiguated by memchecks
lver.safe
.lver.check
.lver.orig
.lver
LVerDomain
loop-versioning
Lower invoke and unwind, for unwindless code generators
lowerinvoke
Lower SwitchInst's to branches
lowerswitch
NewDefault
NodeBlock
Pivot
LeafBlock
SwitchLeaf
mem2reg
Promote Memory to Register
Assign new names to everything
metarenamer
global
struct.
quux
barney
snork
blam
hoge
wibble
wobble
widget
wombat
eggs
pluto
spam
anon.
Provide a name to nameless globals
name-anon-globals
Name Anon Globals
verify-predicateinfo
Verify PredicateInfo in legacy printer pass.
predicateinfo-rename
Controls which variables are renamed with predicateinfo
PredicateInfo Printer
print-predicateinfo
llvm.ssa.copy.
; Has predicate info
; branch predicate info { TrueEdge: 
 Comparison:
 Edge: [
; switch predicate info { CaseValue: 
 Switch:
; assume predicate info {
Strip gc.relocates inserted through RewriteStatepointsForGC
strip-gc-relocates
phi-node-folding-threshold
Control the amount of phi node folding to perform (default = 2)
simplifycfg-dup-ret
Duplicate return instructions into unconditional branches
simplifycfg-sink-common
Sink common instructions down to the end block
simplifycfg-hoist-cond-stores
Hoist conditional stores if an unconditional store precedes
simplifycfg-merge-cond-stores
Hoist conditional stores even if an unconditional store does not precede - hoist multiple conditional stores into a single predicated store
simplifycfg-merge-cond-stores-aggressively
When merging conditional stores, do so even if the resultant basic blocks are unlikely to be if-converted as a result
speculate-one-expensive-inst
Allow exactly one expensive instruction to be speculatively executed
max-speculation-depth
Limit maximum recursion depth when calculating costs of speculatively executed instructions
.not
.old
or.cond
not.cond
and.cond
.sink.split
.sink
switch.edge
.fold.split
magicptr
infloop
switch.early.test
spec.store.select
spec.select
.critedge
brmerge
.mux
condstore.split
simplifycfg.merge
retval
.off
switch.selectcmp
switch.select
switch.lookup
switch.tableidx
switch.hole_check
switch.maskindex
switch.shifted
switch.lobit
switch.table.
switch.idx.cast
switch.idx.mult
switch.offset
switch.cast
switch.shiftamt
switch.downshift
switch.masked
switch.tableidx.zext
switch.gep
switch.load
inverted.cmp
iv.rem
.urem
.udiv
enable-double-float-shrink
Enable unsafe double to float shrinking for math lib calls
endptr
strcmpload
strlenfirst
memchr.bounds
memchr.bits
lhsc
lhsv
rhsc
rhsv
chardiff
real
imag
reciprocal
square
isinf
logmul
cttz
isdigittmp
leninc
sincospi
sinpi
cospi
simplify-libcalls
folded strlen(select) to select of constants
Strip all debug info except linetables
strip-nonlinetable-debuginfo
rewrite-map-file
Symbol Rewrite Map
unable to read rewrite map '
unable to parse rewrite map '
DescriptorList node must be a map
rewrite type must be a scalar
rewrite descriptor must be a map
unknown rewrite type
descriptor key must be a scalar
descriptor value must be a scalar
invalid regex: 
unknown key for function
exactly one of transform or target must be specified
descriptor Key must be a scalar
unknown Key for Global Variable
unknown key for Global Alias
Rewrite Symbols
rewrite-symbols
unable to transforn 
UnifiedUnreachableBlock
UnifiedReturnBlock
UnifiedRetVal
Unify function exit nodes
mergereturn
no-trapping-math
denormal-fp-math
preserve-sign
disable-basicaa
NoAlias
MustAlias
MayAlias
PartialAlias
External Alias Analysis
external-aa
Function Alias Analysis Results
print-all-alias-modref-info
print-no-aliases
print-may-aliases
print-partial-aliases
print-must-aliases
print-no-modref
print-ref
print-mod
print-modref
print-must
print-mustref
print-mustmod
print-mustmodref
evaluate-aa-metadata
Function: 
 pointers, 
 call sites
NoModRef
Just Mod
Just Ref
Both ModRef
Must
Just Mod (MustAlias)
Just Ref (MustAlias)
Both ModRef (MustAlias)
===== Alias Analysis Evaluator Report =====
  Alias Analysis Evaluator Summary: No pointers!
 Total Alias Queries Performed
 no alias responses 
 may alias responses 
 partial alias responses 
 must alias responses 
  Alias Analysis Evaluator Pointer Alias Summary: 
  Alias Analysis Mod/Ref Evaluator Summary: no mod/ref!
 Total ModRef Queries Performed
 no mod/ref responses 
 mod responses 
 ref responses 
 mod & ref responses 
 must responses 
 must mod responses 
 must ref responses 
 must mod & ref responses 
  Alias Analysis Evaluator Mod/Ref Summary: 
 <-> 
:  Ptr: 
Exhaustive Alias Analysis Precision Evaluator
aa-eval
alias-set-saturation-threshold
The maximum number of pointers may-alias sets may contain before degradation
  AliasSet[
must
 alias, 
No access 
Ref       
Mod       
Mod/Ref   
[volatile] 
 forwarding to 
Pointers: 
 Unknown instructions: 
Alias Set Tracker: 
 alias sets for 
 pointer values.
Alias Set Printer
print-alias-sets
Alias sets for function '
verify-assumption-cache
Enable verification of assumption cache
Assumption in scanned function not in cache
Assumption Cache Tracker
assumption-cache-tracker
basicaa-recphi
basicaa
Basic Alias Analysis (stateless AA impl)
view-block-freq-propagation-dags
Pop up a window to show a dag displaying how block frequencies propagation through the CFG.
do not display graphs.
fraction
display a graph using the fractional block frequency representation.
integer
display a graph using the raw integer fractional block frequency representation.
display a graph using the real profile count if available.
view-bfi-func-name
The option to specify the name of the function whose CFG will be displayed.
view-hot-freq-percent
An integer in percent used to specify the hot blocks/edges to be displayed in red: a block or edge whose frequency is no less than the max frequency of the function multiplied by this percent.
pgo-view-counts
A boolean option to show CFG dag or text with block profile counts and branch probabilities right after PGO profile annotation step. The profile counts are computed using branch probabilities from the runtime profile data and block frequency propagation algorithm. To view the raw counts from the profile, use option -pgo-view-raw-counts instead. To limit graph display to only one function, use filtering option -view-bfi-func-name.
do not show.
graph
show a graph.
text
show in text.
print-bfi
Print the block frequency info.
print-bfi-func-name
The option to specify the name of the function whose block frequency info is printed.
BlockFrequencyDAGs
block-frequency-info: 
: float = 
, int = 
, count = 
, irr_loop_header_weight = 
Block Frequency Analysis
block-freq
file exists, overwriting
error writing into file
error opening file '
' for writing!
 done. 
digraph "
digraph unnamed {
label="
Node
 [shape=record,
label="{
}"];
color="red"
Unknown
|<s64>truncated...
 -> Node
label="%.1f%%"
,color="red"
print-bpi
Print the branch probability info.
print-bpi-func-name
The option to specify the name of the function whose branch probability info is printed.
---- Branch Probabilities ----
edge 
 probability is 
 [HOT edge]
Branch Probability Analysis
branch-prob
cfg-func-name
The name of a function (or its substring) whose CFG is viewed/printed.
View CFG of function
view-cfg
View CFG of function (with no function bodies)
view-cfg-only
Print CFG of function to 'dot' file
dot-cfg
cfg.
CFG for '
Print CFG of function to 'dot' file (with no function bodies)
dot-cfg-only
Inclusion-Based CFL Alias Analysis
cfl-anders-aa
Unification-Based CFL Alias Analysis
cfl-steens-aa
..., 
Call graph node for function: '
Call graph node <<null function>>
>>  #uses=
  CS<
> calls 
function '
<<null function>><<
No call graph has been built!
CallGraph Construction
basiccg
Print a call graph
print-callgraph
max-cg-scc-iterations
CallGraph Pass Manager
Call Graph SCC Pass Manager
Print CallGraph IR
Printing <null> Function
DummyCGSCCPass
View call graph
view-callgraph
Print call graph to 'dot' file
dot-callgraph
callgraph
Call graph
external node
cost-kind
Target cost kind
throughput
Reciprocal throughput
latency
Instruction latency
code-size
Code size
cost-model
Cost Model: Found an estimated cost of 
Cost Model: Unknown cost
 for instruction: 
air.normalize_function_constant_predicate
delinearize
Delinearization on function 
Inst:
In Loop with Header: 
AccessFunction: 
failed to delinearize
Base offset: 
ArrayDecl[UnknownSize]
 with elements of 
 bytes.
ArrayRef
DemandedBits: 0x
 for 
Demanded bits analysis
demanded-bits
da-delinearize
Try to delinearize array references.
 Empty
 Any
 Point is <
 Distance is 
*X + 
*Y = 
 Line is 
confused
consistent 
flow
anti
 splitable
Dependence Analysis
da analyze - 
da analyze - split level = 
, iteration = 
none!
DIVERGENT: 
           
           
DIVERGENT:     
               
Divergence Analysis
divergence
View dominance tree of function
view-dom
View dominance tree of function (with no function bodies)
view-dom-only
View postdominance tree of function
view-postdom
View postdominance tree of function (with no function bodies)
view-postdom-only
Print dominance tree of function to 'dot' file
dot-dom
Print dominance tree of function to 'dot' file (with no function bodies)
dot-dom-only
Print postdominance tree of function to 'dot' file
dot-postdom
Print postdominance tree of function to 'dot' file (with no function bodies)
dot-postdom-only
.dot
Writing '
'...
 for '
' function
  error opening file for writing!
Dominator tree
Post dominance root node
\l...
domonly
postdom
Post dominator tree
postdomonly
  DomFrontier for BB 
 is:
<<exit node>>
Dominance Frontier Construction
domfrontier
__gnat_eh_personality
__gxx_personality_v0
__gxx_personality_sj0
__gcc_personality_v0
__gcc_personality_sj0
__objc_personality_v0
_except_handler3
__C_specific_handler
__CxxFrameHandler3
ProcessCLRException
rust_eh_personality
__gxx_wasm_personality_v0
enable-unsafe-globalsmodref-alias-results
Globals Alias Analysis
globals-aa
memset_pattern16
GPU Alias Analysis
gpu-aa
Shared
Coefficient
Driver Parameter Memory
Texture
Sampler
Uniform
Local Memory
Function Groups
function-groups
.thread_invariants
.constant_program
.constant_program.cfg
should not call subgroup_begin() on simple function group
should not call subgroup_end() on simple function group
Too many resources of type '
' used: 
Literal constant support for weirdly sized int type not yet implemented
Literal constant support for weirdly sized FP type not yet implemented
Unsupported literal constant
Simple function group @
  Functions: [ 
  GlobalValueLiteralConstantOffsetMap:
    [
  LiteralConstants:
  RegisterOffsets:
]: { idx: 
 size: 
 type: 
TEXTURE
SAMPLER
SAMPLER_CONSTANT
DRIVER_CONSTANT
BUFFER_BINDING
DRIVER_PARAM
DRIVER_PARAM_MEMORY
MEM_CACHE
THREAD_INVARIANT
CONSTANT_LITERALS
LITERALS_BUFFER
GROUP_ID_X
GROUP_ID_Y
GROUP_ID_Z
BARRIER_COUNTER
COEFFICIENT_W
COEFFICIENT
LOCAL_MEM
SPILL
LAST_TYPE
_agx_dylib_id
dma-promotion
.sample_invariants
ComplexFunctionGroup::
insertMember
 not implemented
removeMember
getNumMembers
hasMember
global_resource_clear
getVIDMAList
setVIDMAList
getVIRemap
setVIRemap
getGlobalValueLiteralConstantOffset
global_value_literal_constant_offset_begin
global_value_literal_constant_offset_end
global_value_literal_constant_offset_empty
bound_checking_uniform_alloc_begin
bound_checking_uniform_alloc_end
literal_constant_begin
literal_constant_end
literal_constant_at
setAmpIdCount
hasReadLiteralConstantLocation
getSharedRegisterLiteralConstantBase
getCPROGHasCalls
setCPROGHasCalls
setCommonStoreRegisterForGlobal
hasSharedRegisterAllocations
hasCoefficientRegisterAllocations
getAllocatedCoeffRegisterBytes
allocateConstantLiteralForGlobalValue
allocateBoundCheckingUniform
getNextAvailableResourceAllocationForSize
allocateResourceForSize
allocateRegisterForDylib
allocateRegisterForBindlessSamplerBase
resetAllocationForType
allocate32BitSharedRegisters
emitGlobalConstant
emitExternGlobal
Assuming only one exit function.
getRepresentativeFunction
onGlobalValueErased
Complex function group with subgroups: {
getBindlessSamplerBaseSize
Cannot print function groups without a module
Function 
's group contains:
IV Users for loop 
 with backedge-taken count 
 (post-inc with loop 
 in  
Printing <null> User
Induction Variable Users
iv-users
icp-remaining-percent-threshold
The percentage threshold against remaining unpromoted indirect call count for the promotion
icp-total-percent-threshold
The percentage threshold against total count for the promotion
icp-max-prom
Max number of promotions for a single indirect call callsite
inline-threshold
Control the amount of inlining to perform (default = 225)
inlinehint-threshold
Threshold for inlining functions with inline hint
inline-cold-callsite-threshold
Threshold for inlining cold callsites
inlinecold-threshold
Threshold for inlining functions with cold attribute
hot-callsite-threshold
Threshold for hot callsites 
locally-hot-callsite-threshold
Threshold for locally hot callsites 
cold-callsite-rel-freq
Maxmimum block frequency, expressed as a percentage of caller's entry frequency, for a callsite to be cold in the absence of profile information.
hot-callsite-rel-freq
Minimum block frequency, expressed as a multiple of caller's entry frequency, for a callsite to be hot in the absence of profile information.
inline-cost-full
Compute the full inline cost of a call site even when the cost exceeds the threshold.
      NumConstantArgs: 
      NumConstantOffsetPtrArgs: 
      NumAllocaArgs: 
      NumConstantPtrCmps: 
      NumConstantPtrDiffs: 
      NumInstructionsSimplified: 
      NumInstructions: 
      SROACostSavings: 
      SROACostSavingsLost: 
      LoadEliminationCost: 
      ContainsNoDuplicateCall: 
      Cost: 
      Threshold: 
inline-cost
NeverInline
Callee
 has uninlinable pattern and cost is not fully computed
 is recursive and allocates too much stack space. Cost is not fully computed
Counts the various types of Instructions
instcount
-------------------------------------------------------------
Interval Contents:
Interval Predecessors:
Interval Successors:
Interval Partition Construction
intervals
Lazy Branch Probability Analysis
lazy-branch-prob
Lazy Block Frequency Analysis
lazy-block-freq
 -> "
Lazy Value Information Analysis
lazy-value-info
; LatticeVal for: '
' is: 
' in BB: '
Lazy Value Info Printer Pass
print-lazy-value-info
LVI for function '
Statically lint-checks LLVM IR
lint
Unusual: Unnamed function with non-local linkage
Unusual: Return statement in function with noreturn attribute
Unusual: Returning alloca value
Undefined behavior: indirectbr with no destinations
Undefined behavior: Null pointer dereference
Undefined behavior: Undef pointer dereference
Unusual: All-ones pointer dereference
Unusual: Address one pointer dereference
Undefined behavior: Write to read-only memory
Undefined behavior: Write to text section
Unusual: Load from function body
Undefined behavior: Load from block address
Undefined behavior: Call to block address
Undefined behavior: Branch to non-blockaddress
Undefined behavior: Buffer overflow
Undefined behavior: Memory reference address is misaligned
Undefined behavior: Caller and callee calling convention differ
Undefined behavior: Call argument count mismatches callee argument count
Undefined behavior: Call return type mismatches callee return type
Undefined behavior: Call argument type mismatches callee parameter type
Unusual: noalias argument aliases another argument
Undefined behavior: Call with "tail" keyword references alloca
Undefined behavior: memcpy source and destination overlap
Undefined behavior: va_start called in a non-varargs function
Unusual: unreachable immediately preceded by instruction without side effects
Undefined result: sub(undef, undef)
Undefined behavior: Division by zero
Undefined result: Shift count out of range
Undefined result: xor(undef, undef)
Pessimization: Static alloca outside of entry block
Undefined result: extractelement index out of range
Undefined result: insertelement index out of range
available-load-scan-limit
Use this to specify the default maximum number of instructions to scan backward from a given instruction, when searching for available loaded value
force-vector-width
Sets the SIMD width. Zero is autoselect.
force-vector-interleave
Sets the vectorization interleave count. Zero is autoselect.
runtime-memory-check-threshold
When performing memory disambiguation checks at runtime do not generate more than this number of comparisons (default = 8).
memory-check-merge-threshold
Maximum number of comparisons done when trying to merge runtime memory checks. (default = 100)
max-dependences
Maximum number of dependences collected by loop-access analysis (default = 100)
enable-mem-access-versioning
Enable symbolic stride memory access versioning
store-to-load-forwarding-conflict-detection
Enable conflict detection in loop-access analysis
Check 
Comparing group (
Against group (
Run-time memory checks:
Grouped accesses:
Group 
(Low: 
 High: 
Member: 
NoDep
Forward
ForwardButPreventsForwarding
Backward
BackwardVectorizable
BackwardVectorizableButPreventsForwarding
 -> 
NotInnerMostLoop
loop is not the innermost loop
CFGNotUnderstood
loop control flow is not understood by analyzer
CantComputeNumberOfIterations
could not determine number of loop iterations
NonSimpleLoad
read with atomic ordering or volatile read
CantVectorizeInstruction
instruction cannot be vectorized
NonSimpleStore
write with atomic ordering or volatile write
CantIdentifyArrayBounds
cannot identify array bounds
CantCheckMemDepsAtRunTime
cannot check memory dependencies at runtime
UnsafeMemDep
unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
loop-accesses
bound0
bound1
found.conflict
conflict.rdx
memcheck.conflict
Memory dependences are safe
 with a maximum dependence distance of 
 bytes
 with run-time checks
Report: 
Dependences:
Too many dependences, not recorded
Store to invariant address was 
not 
found in loop.
SCEV assumptions:
Expressions re-written:
enable-mssa-loop-dependency
Enable MemorySSA dependency for loop pass manager
Loop at depth 
 containing: 
<header>
<latch>
<exiting>
verify-loop-info
Verify loop info (time consuming)
llvm.loop.unroll.
 (loop: 
; Preheader:
; Loop:
Printing <null> block
; Exit blocks
Natural Loop Information
loops
<deleted loop>
<deleted>
Loop Pass Manager
Print Loop IR
LCSSA Verifier
lcssa-verification
Loop Pass Manager
Print MemDeps of function
print-memdeps
 in block 
 from: 
Clobber
NonFuncLocal
Memory Dereferenciblity of pointers in function
print-memderefs
The following are dereferenceable:
(aligned)
(unaligned)
memdep-block-scan-limit
The number of instructions to scan in a block in memory dependency analysis (default = 100)
memdep-block-number-limit
The number of blocks to scan during memory dependency analysis (default = 1000)
memdep
Memory Dependence Analysis
memssa-check-limit
The maximum number of stores/phis MemorySSAwill consider trying to walk past (default = 100)
verify-memoryssa
Verify MemorySSA in legacy printer pass.
 = MemoryDef(
 = MemoryPhi(
MemoryUse(
Memory SSA
memoryssa
Memory SSA Printer
print-memoryssa
Decodes module-level debug info
module-debuginfo
Compile unit: 
unknown-language(
Subprogram: 
Global variable: 
Type:
unknown-encoding(
unknown-tag(
 (identifier: '
force-summary-edges-cold
Force all edges in the function summary to cold
None.
all-non-critical
All non-critical edges.
All edges.
ThinLTO
Module Summary Analysis
module-summary-analysis
Instructions which execute on loop entry
print-mustexecute
 ; (mustexec in 
 loops: 
 ; (mustexec in: 
ObjC-ARC-Based Alias Analysis
objc-arc-aa
enable-objc-arc-opts
enable/disable all ARC Optimizations
objc_retainAutoreleasedReturnValue
objc_unsafeClaimAutoreleasedReturnValue
llvm.arc.annotation.topdown.bbstart
llvm.arc.annotation.topdown.bbend
llvm.arc.annotation.bottomup.bbstart
llvm.arc.annotation.bottomup.bbend
opt-remark-emitter
PHITransAddr: null
PHITransAddr: 
  Input #
 is 
.phi.trans.insert
Phi Values Analysis
phi-values
Post-Dominator Tree Construction
postdomtree
profile-summary-cutoff-hot
A count is hot if it exceeds the minimum count to reach this percentile of total counts.
profile-summary-cutoff-cold
A count is cold if it is below the minimum count to reach this percentile of total counts.
If the sample profile is accurate, we will mark all un-sampled callsite as cold. Otherwise, treat un-sampled callsites as if we have no profile.
profile-summary-huge-working-set-size-threshold
The code working set size is considered huge if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
Desired percentile exceeds the maximum cutoff
Profile summary info
profile-summary-info
Broken region found: enumerated BB not in region!
Broken region found: edges leaving the region must go to the exit node!
Broken region found: edges entering the region must go to the entry node!
<Function Return>
BB map does not match region nesting
Region tree:
End region tree
verify-region-info
Verify region info (time consuming)
print-region-style
style of printing regions
print no details
print regions in detail with block_iterator
print regions in detail with element_iterator
Detect single entry single exit regions
regions
Region Pass Manager
Print Region IR
Printing <null> Block
Region Pass Manager
only-simple-regions
Show only simple regions in the graphviz viewer
Print regions of function to 'dot' file
dot-regions
Print regions of function to 'dot' file (with no function bodies)
dot-regions-only
View regions of function
view-regions
View regions of function (with no function bodies)
view-regions-only
Region Graph
Not implemented
constraint=false
colorscheme = "paired12"
subgraph cluster_
label = "";
style = filled;
color = 
style = solid;
Node
regonly
scalar-evolution-max-iterations
Maximum number of iterations SCEV will symbolically execute a constant derived loop
verify-scev
Verify ScalarEvolution's backedge taken counts (slow)
verify-scev-maps
Verify no dangling value in ScalarEvolution's ExprValueMap (slow)
scev-mulops-inline-threshold
Threshold for inlining multiplication operands into a SCEV
scev-addops-inline-threshold
Threshold for inlining addition operands into a SCEV
scalar-evolution-max-scev-compare-depth
Maximum depth of recursive SCEV complexity comparisons
scalar-evolution-max-scev-operations-implication-depth
Maximum depth of recursive SCEV operations implication analysis
scalar-evolution-max-value-compare-depth
Maximum depth of recursive value complexity comparisons
scalar-evolution-max-arith-depth
Maximum depth of recursive arithmetics
scalar-evolution-max-constant-evolving-depth
Maximum depth of recursive constant evolving
scalar-evolution-max-ext-depth
Maximum depth of recursive SExt/ZExt
scalar-evolution-max-add-rec-size
Max coefficients in AddRec during evolving
(trunc 
(zext 
(sext 
nuw><
nsw><
nw><
 umax 
 smax 
<nuw>
<nsw>
 /u 
sizeof(
alignof(
offsetof(
***COULDNOTCOMPUTE***
Classifying expressions for: 
  -->  
 U: 
 S: 
Exits: 
<<Unknown>>
LoopDispositions: { 
Determining loop execution counts for: 
Trip Count Changed!
Old: 
New: 
Delta: 
Equal predicate: 
 == 
 Added Flags: 
<nusw>
<nssw>
[PSE]
--> 
scalar-evolution
Variant
Invariant
Computable
Loop 
<multiple exits> 
backedge-taken count is 
Unpredictable backedge-taken count. 
Loop 
max backedge-taken count is 
, actual taken count either this or zero.
Unpredictable max backedge-taken count. 
Predicated backedge-taken count is 
 Predicates:
Unpredictable predicated backedge-taken count. 
Trip multiple is 
Scalar Evolution Analysis
ScalarEvolution-based Alias Analysis
scev-aa
uglygep
scevgep
.iv.next
indvar
indvar.next
smax
ident.check
mul.result
mul.overflow
vector-library
Vector functions library
none
No vector functions library
Accelerate
Accelerate framework
SVML
Intel SVML library
??2@YAPAXI@Z
??2@YAPAXIABUnothrow_t@std@@@Z
??2@YAPEAX_K@Z
??2@YAPEAX_KAEBUnothrow_t@std@@@Z
??3@YAXPAX@Z
??3@YAXPAXABUnothrow_t@std@@@Z
??3@YAXPAXI@Z
??3@YAXPEAX@Z
??3@YAXPEAXAEBUnothrow_t@std@@@Z
??3@YAXPEAX_K@Z
??_U@YAPAXI@Z
??_U@YAPAXIABUnothrow_t@std@@@Z
??_U@YAPEAX_K@Z
??_U@YAPEAX_KAEBUnothrow_t@std@@@Z
??_V@YAXPAX@Z
??_V@YAXPAXABUnothrow_t@std@@@Z
??_V@YAXPAXI@Z
??_V@YAXPEAX@Z
??_V@YAXPEAXAEBUnothrow_t@std@@@Z
??_V@YAXPEAX_K@Z
_IO_getc
_IO_putc
_ZdaPv
_ZdaPvRKSt9nothrow_t
_ZdaPvSt11align_val_t
_ZdaPvSt11align_val_tRKSt9nothrow_t
_ZdaPvj
_ZdaPvm
_ZdlPv
_ZdlPvRKSt9nothrow_t
_ZdlPvSt11align_val_t
_ZdlPvSt11align_val_tRKSt9nothrow_t
_ZdlPvj
_ZdlPvm
_Znaj
_ZnajRKSt9nothrow_t
_ZnajSt11align_val_t
_ZnajSt11align_val_tRKSt9nothrow_t
_Znam
_ZnamRKSt9nothrow_t
_ZnamSt11align_val_t
_ZnamSt11align_val_tRKSt9nothrow_t
_Znwj
_ZnwjRKSt9nothrow_t
_ZnwjSt11align_val_t
_ZnwjSt11align_val_tRKSt9nothrow_t
_Znwm
_ZnwmRKSt9nothrow_t
_ZnwmSt11align_val_t
_ZnwmSt11align_val_tRKSt9nothrow_t
__acos_finite
__acosf_finite
__acosh_finite
__acoshf_finite
__acoshl_finite
__acosl_finite
__asin_finite
__asinf_finite
__asinl_finite
__atan2_finite
__atan2f_finite
__atan2l_finite
__atanh_finite
__atanhf_finite
__atanhl_finite
__cosh_finite
__coshf_finite
__coshl_finite
__cospi
__cospif
__cxa_atexit
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_release
__exp10_finite
__exp10f_finite
__exp10l_finite
__exp2_finite
__exp2f_finite
__exp2l_finite
__exp_finite
__expf_finite
__expl_finite
__isoc99_scanf
__isoc99_sscanf
__log10_finite
__log10f_finite
__log10l_finite
__log2_finite
__log2f_finite
__log2l_finite
__log_finite
__logf_finite
__logl_finite
__memcpy_chk
__memmove_chk
__memset_chk
__nvvm_reflect
__pow_finite
__powf_finite
__powl_finite
__sincospi_stret
__sincospif_stret
__sinh_finite
__sinhf_finite
__sinhl_finite
__sinpi
__sinpif
__sqrt_finite
__sqrtf_finite
__sqrtl_finite
__stpcpy_chk
__stpncpy_chk
__strcpy_chk
__strdup
__strncpy_chk
__strndup
__strtok_r
access
acosf
acosh
acoshf
acoshl
acosl
asinf
asinh
asinhf
asinhl
asinl
atan2
atan2f
atan2l
atanf
atanh
atanhf
atanhl
atanl
atof
atoi
atol
atoll
bcmp
bcopy
bzero
cabs
cabsf
cabsl
calloc
cbrt
cbrtf
cbrtl
ceilf
ceill
chmod
chown
clearerr
closedir
copysign
copysignf
copysignl
cosf
coshf
coshl
cosl
ctermid
exp10
exp10f
exp10l
exp2
exp2f
exp2l
expf
expl
expm1
expm1f
expm1l
fabsf
fabsl
fclose
fdopen
feof
ferror
fflush
ffsl
ffsll
fgetc
fgetc_unlocked
fgetpos
fgets
fgets_unlocked
fileno
fiprintf
flockfile
floor
floorf
floorl
flsl
flsll
fmax
fmaxf
fmaxl
fminf
fminl
fmod
fmodf
fmodl
fopen
fopen64
fprintf
fputc
fputc_unlocked
fputs
fputs_unlocked
fread
fread_unlocked
frexp
frexpf
frexpl
fscanf
fseek
fseeko
fseeko64
fsetpos
fstat
fstat64
fstatvfs
fstatvfs64
ftell
ftello
ftello64
ftrylockfile
funlockfile
fwrite
fwrite_unlocked
getc
getc_unlocked
getchar
getchar_unlocked
getenv
getitimer
getlogin_r
getpwnam
gets
gettimeofday
htonl
htons
iprintf
isascii
isdigit
labs
lchown
ldexp
ldexpf
ldexpl
llabs
log10
log10f
log10l
log1p
log1pf
log1pl
log2
log2f
log2l
logb
logbf
logbl
logf
logl
lstat
lstat64
memalign
memccpy
memchr
memcmp
memcpy
memmove
mempcpy
memrchr
memset
mkdir
mktime
modf
modff
modfl
nearbyint
nearbyintf
nearbyintl
ntohl
ntohs
open
open64
opendir
pclose
perror
popen
posix_memalign
powf
powl
pread
printf
putc
putc_unlocked
putchar
putchar_unlocked
puts
pwrite
qsort
read
readlink
realloc
reallocf
realpath
remove
rename
rewind
rintf
rintl
rmdir
round
roundf
roundl
scanf
setbuf
setitimer
setvbuf
sinf
sinh
sinhf
sinhl
sinl
siprintf
snprintf
sprintf
sqrtf
sqrtl
sscanf
stat
stat64
statvfs
statvfs64
stpcpy
stpncpy
strcasecmp
strcat
strchr
strcmp
strcoll
strcpy
strcspn
strdup
strlen
strncasecmp
strncat
strncmp
strncpy
strndup
strnlen
strpbrk
strrchr
strspn
strstr
strtod
strtof
strtok
strtok_r
strtol
strtold
strtoll
strtoul
strtoull
strxfrm
system
tanf
tanhf
tanhl
tanl
times
tmpfile
tmpfile64
toascii
truncf
truncl
uname
ungetc
unlink
unsetenv
utime
utimes
valloc
vfprintf
vfscanf
vprintf
vscanf
vsnprintf
vsprintf
vsscanf
wcslen
vceilf
vfabsf
llvm.fabs.f32
vfloorf
vsqrtf
llvm.sqrt.f32
vexpf
llvm.exp.f32
vexpm1f
vlogf
llvm.log.f32
vlog1pf
vlog10f
llvm.log10.f32
vlogbf
vsinf
llvm.sin.f32
vcosf
llvm.cos.f32
vtanf
vasinf
vacosf
vatanf
vsinhf
vcoshf
vtanhf
vasinhf
vacoshf
vatanhf
__svml_sin2
__svml_sin4
__svml_sin8
__svml_sinf4
__svml_sinf8
__svml_sinf16
llvm.sin.f64
__svml_cos2
__svml_cos4
__svml_cos8
__svml_cosf4
__svml_cosf8
__svml_cosf16
llvm.cos.f64
__svml_pow2
__svml_pow4
__svml_pow8
__svml_powf4
__svml_powf8
__svml_powf16
llvm.pow.f64
llvm.pow.f32
__svml_exp2
__svml_exp4
__svml_exp8
__svml_expf4
__svml_expf8
__svml_expf16
llvm.exp.f64
__svml_log2
__svml_log4
__svml_log8
__svml_logf4
__svml_logf8
__svml_logf16
llvm.log.f64
fwrite$UNIX2003
fputs$UNIX2003
_copysign
__exp10
__exp10f
Target Library Information
targetlibinfo
costmodel-reduxcost
Recognize reduction patterns.
Target Transform Information
enable-tbaa
Cycle found in TBAA metadata.
Type-Based Alias Analysis
enable-scoped-noalias
Scoped NoAlias Alias Analysis
scoped-noalias
notconstant<
constantrange<
constant<
dom-conditions-max-uses
value-tracking
BadAssumption
Detected conflicting code assumptions. Program may have undefined behavior, or compiler may have internal error.
static-func-full-module-prefix
Use full module build paths in the profile counter names for static functions.
static-func-strip-dirname-prefix
Strip specified level of directory name from source path in the profile counter name for static functions.
, calls:
 sampled lines
Samples collected in the function's body {
No samples collected in the function's body
Samples collected in inlined callsites {
: inlined callee: 
No inlined callsites in this function
llvm.sampleprof
Success
Invalid sample profile data (bad magic)
Unsupported sample profile format version
Too much profile data
Truncated profile data
Malformed sample profile data
Unrecognized sample profile encoding format
Profile encoding format unsupported for writing operations
Truncated function name table
Unimplemented feature
Counter overflow
Expected 'mangled_name:NUM:NUM', found 
Expected 'NUM[.NUM]: NUM[ mangled_name:NUM]*', found 
Unexpected end of memory buffer: 
adcg
Unexpected file type: 
Unexpected version: 
invalid hexadecimal floating-point constant: expected at least one significand digit
invalid hexadecimal floating-point constant: expected exponent part 'p'
invalid hexadecimal floating-point constant: expected at least one exponent digit
unterminated comment
invalid binary number
invalid hexdecimal number
invalid decimal number
invalid hexadecimal number
invalid octal number
unterminated single quote
single quote way too long
unterminated string constant
invalid character in input
asm-macro-max-nesting-depth
The maximum nesting depth allowed for assembly macros.
missing expression
Recursive use of '
redefinition of '
invalid assignment to '
invalid reassignment of non-absolute variable '
.set
.equ
.equiv
.ascii
.asciz
.string
.byte
.short
.value
.2byte
.long
.4byte
.quad
.8byte
.octa
.single
.float
.double
.align
.align32
.balign
.balignw
.balignl
.p2align
.p2alignw
.p2alignl
.org
.fill
.zero
.extern
.globl
.global
.lazy_reference
.no_dead_strip
.symbol_resolver
.private_extern
.reference
.weak_definition
.weak_reference
.weak_def_can_be_hidden
.comm
.common
.lcomm
.abort
.include
.incbin
.code16
.code16gcc
.rept
.rep
.irp
.irpc
.endr
.bundle_align_mode
.bundle_lock
.bundle_unlock
.ifeq
.ifge
.ifgt
.ifle
.iflt
.ifne
.ifb
.ifnb
.ifc
.ifeqs
.ifnc
.ifnes
.ifdef
.ifndef
.ifnotdef
.elseif
.else
.end
.endif
.skip
.line
.stabs
.cv_file
.cv_func_id
.cv_loc
.cv_linetable
.cv_inline_linetable
.cv_inline_site_id
.cv_def_range
.cv_stringtable
.cv_filechecksums
.cv_filechecksumoffset
.cv_fpo_data
.sleb128
.uleb128
.cfi_sections
.cfi_startproc
.cfi_endproc
.cfi_def_cfa
.cfi_def_cfa_offset
.cfi_adjust_cfa_offset
.cfi_def_cfa_register
.cfi_offset
.cfi_rel_offset
.cfi_personality
.cfi_lsda
.cfi_remember_state
.cfi_restore_state
.cfi_same_value
.cfi_restore
.cfi_escape
.cfi_return_column
.cfi_signal_frame
.cfi_undefined
.cfi_register
.cfi_window_save
.macros_on
.macros_off
.macro
.exitm
.endm
.endmacro
.purgem
.err
.error
.warning
.altmacro
.noaltmacro
.reloc
.dc.a
.dc.b
.dc.d
.dc.l
.dc.s
.dc.w
.dc.x
.dcb
.dcb.b
.dcb.d
.dcb.l
.dcb.s
.dcb.w
.dcb.x
.ds.b
.ds.d
.ds.l
.ds.p
.ds.s
.ds.w
.ds.x
.print
.addrsig
.addrsig_sym
unmatched .ifs or .elses
unassigned file number: 
 for .file directives
assembler local symbol '
' not defined
directional label undefined
unexpected token at start of statement
invalid use of pseudo-symbol '.' as a label
 not currently supported for this target
unknown directive
__emit
_EMIT
__EMIT
parsed instruction: [
unexpected token in '.if' directive
unexpected token in '.ifb' directive
unexpected token in '.ifc' directive
expected string parameter for '.ifeqs' directive
expected string parameter for '.ifnes' directive
expected comma after first string for '.ifeqs' directive
expected comma after first string for '.ifnes' directive
expected identifier after '.ifdef'
unexpected token in '.ifdef'
Encountered a .elseif that doesn't follow an .if or  an .elseif
unexpected token in '.elseif' directive
unexpected token in '.else' directive
Encountered a .else that doesn't follow  an .if or an .elseif
unexpected token in '.endif' directive
Encountered a .endif that doesn't follow an .if or .else
macros cannot be nested more than 
 levels deep.
 Use -asm-macro-max-nesting-depth to increase this limit.
.endmacro
<instantiation>
invalid argument identifier for formal argument
expected '=' after formal parameter identifier
cannot mix positional and keyword arguments
expected absolute expression
parameter named '
' does not exist for macro '
missing value for required parameter '
' in macro '
too many positional arguments
unexpected token in macro instantiation
unbalanced parentheses in macro argument
Wrong number of arguments
expected identifier
 in '
' directive
out of range literal value
unknown token in expression
unexpected token in directive
infinity
invalid floating point literal
 in directive
p2align directive with no operand(s) is ignored
invalid alignment value
alignment must be a power of 2
alignment directive can never be satisfied in this many bytes, ignoring maximum bytes expression
maximum bytes expression exceeds alignment and has no effect
 in '.org' directive
unexpected token in '.fill' directive
'.fill' directive with negative size has no effect
'.fill' directive with size greater than 8 has been truncated to 8
'.fill' directive pattern has been truncated to 32-bits
unexpected token in '.zero' directive
non-local symbol required
unable to emit symbol attribute
expected identifier in directive
alignment not supported on this target
unexpected token in '.comm' or '.lcomm' directive
invalid '.comm' or '.lcomm' directive size, can't be less than zero
invalid '.comm' or '.lcomm' directive alignment, can't be less than zero
unexpected token in '.abort' directive
.abort detected. Assembly stopping.
.abort '
' detected. Assembly stopping.
expected string in '.include' directive
unexpected token in '.include' directive
Could not find include file '
expected string in '.incbin' directive
unexpected token in '.incbin' directive
skip is negative
Could not find incbin file '
negative count has no effect
unexpected token in '
Count is negative
no matching '.endr' in definition
unexpected token in '.endr' directive
.endr
expected identifier in '.irp' directive
expected comma in '.irp' directive
expected End of Statement
expected identifier in '.irpc' directive
expected comma in '.irpc' directive
unexpected token in '.irpc' directive
expected end of statement
unmatched '.endr' directive
unexpected token after expression in '.bundle_align_mode' directive
invalid bundle alignment size (expected between 0 and 30)
invalid option for '.bundle_lock' directive
unexpected token after '.bundle_lock' directive option
unexpected token in '.bundle_unlock' directive
in '
negative file number
unexpected token in '.file' directive
explicit path specified, but no file number
MD5 checksum specified, but no file number
source specified, but no file number
file 0 not supported prior to DWARF-5
inconsistent use of MD5 checksums
unexpected token in '.line' directive
unexpected token in '.loc' directive
file number less than one in '.loc' directive
unassigned file number in '.loc' directive
line number less than zero in '.loc' directive
column position less than zero in '.loc' directive
is_stmt value not 0 or 1
is_stmt value not the constant value of 0 or 1
isa number less than zero
isa number not a constant value
unknown sub-directive in '.loc' directive
unsupported directive '.stabs'
expected file number in '.cv_file' directive
file number less than one
unexpected token in '.cv_file' directive
expected checksum kind in '.cv_file' directive
file number already allocated
unexpected token in '.cv_func_id' directive
function id already allocated
expected function id in '
expected function id within range [0, UINT_MAX)
expected 'within' identifier in '.cv_inline_site_id' directive
expected 'inlined_at' identifier in '.cv_inline_site_id' directive
expected line number after 'inlined_at'
unexpected token in '.cv_inline_site_id' directive
expected integer in '
file number less than one in '
unassigned file number in '
line number less than zero in '.cv_loc' directive
column position less than zero in '.cv_loc' directive
unexpected token in '.cv_loc' directive
unknown sub-directive in '.cv_loc' directive
unexpected token in '.cv_linetable' directive
expected SourceField in '.cv_inline_linetable' directive
File id less than zero in '.cv_inline_linetable' directive
expected SourceLineNum in '.cv_inline_linetable' directive
Line number less than zero in '.cv_inline_linetable' directive
Expected End of Statement
expected symbol name
unexpected tokens
 in '.cv_fpo_data' directive
Expected an identifier
 in '.cfi_startproc' directive
unsupported encoding.
unexpected token in '.cfi_signal_frame'
expected identifier in '.macro' directive
Vararg parameter '
' should be last one in the list of parameters.
macro '
' has multiple parameters named '
missing parameter qualifier for '
 is not a valid parameter qualifier for '
pointless default value for required parameter '
no matching '.endmacro' in definition
macro defined with named parameters which are not used in macro body, possible positional parameter found in body which will have no effect
unexpected '
' in file, no current macro definition
expected identifier in '.purgem' directive
unexpected token in '.purgem' directive
' is not defined
unexpected token in '.end' directive
.err encountered
.error directive invoked in source file
.error argument must be a string
.warning directive invoked in source file
.warning argument must be a string
expected end of statement in '.warning' directive
expression is not a constant value
expression is negative
expected comma
expected relocation name
expression must be relocatable
unexpected token in .reloc directive
unknown relocation name
' directive with negative repeat count has no effect
literal value out of range for directive
expected double quoted string after .print
expected identifier in '.addrsig_sym' directive
unexpected expression in _emit
unexpected expression in align
literal value not a power of two greater then zero
 * $$
 + $$
byte ptr 
word ptr 
dword ptr 
qword ptr 
xword ptr 
xmmword ptr 
ymmword ptr 
.even
while in macro instantiation
unexpected backslash at end of string
invalid octal escape sequence (out of range)
invalid escape sequence (unrecognized character)
unexpected symbol modifier following '@'
invalid variant '
invalid modifier '
' (no symbols present)
invalid variant on expression '
' (already modified)
invalid token in expression
expected symbol variant after '@'
unexpected token in variant, expected ')'
expected a symbol reference
unexpected modifier on variable reference
brackets expression not supported on this target
expected '(' after operator
expected ')' in parentheses expression
expected ']' in brackets expression
expected section directive before assembly directive
.def
.scl
.endef
.secrel32
.symidx
.safeseh
.secidx
.linkonce
.rva
.seh_proc
.seh_endproc
.seh_startchained
.seh_endchained
.seh_handler
.seh_handlerdata
.seh_pushreg
.seh_setframe
.seh_stackalloc
.seh_savereg
.seh_savexmm
.seh_pushframe
.seh_endprologue
unexpected token in section switching directive
expected comdat type such as 'discard' or 'largest' after protection bits
expected comma in directive
conflicting section flags 'b' and 'd'.
unrecognized COMDAT type '
invalid '.secrel32' directive offset, can't be less than zero or greater than std::numeric_limits<uint32_t>::max()
cannot make section associative with .linkonce
section '
' is already linkonce
invalid '.rva' directive offset, can't be less than -2147483648 or greater than 2147483647
you must specify one or both of @unwind or @except
a handler attribute must begin with '@'
expected @unwind or @except
register can't be represented in SEH unwind info
register number is too high
you must specify a stack pointer offset
you must specify an offset on the stack
expected @code
.alt_entry
.indirect_symbol
.lsym
.dump
.secure_log_unique
.secure_log_reset
.zerofill
.data_region
.end_data_region
.const
.const_data
.constructor
.cstring
.destructor
.dyld
.fvmlib_init0
.fvmlib_init1
.lazy_symbol_pointer
.linker_option
.dyld_lib
.literal16
.literal4
.literal8
.mod_init_func
.mod_term_func
.non_lazy_symbol_pointer
.thread_local_variable_pointer
.objc_cat_cls_meth
.objc_cat_inst_meth
.objc_category
.objc_class
.objc_class_names
.objc_class_vars
.objc_cls_meth
.objc_cls_refs
.objc_inst_meth
.objc_instance_vars
.objc_message_refs
.objc_meta_class
.objc_meth_var_names
.objc_meth_var_types
.objc_module_info
.objc_protocol
.objc_selector_strs
.objc_string_object
.objc_symbols
.picsymbol_stub
.static_const
.static_data
.symbol_stub
.thread_init_func
.tlv
.bridgeos_version_min
.build_version
.alt_entry must preceed symbol definition
unexpected token in '.desc' directive
indirect symbol not in a symbol pointer or stub section
expected identifier in .indirect_symbol directive
non-local symbol required in directive
unable to emit indirect symbol attribute for: 
unexpected token in '.indirect_symbol' directive
unexpected token in '.lsym' directive
directive '.lsym' is unsupported
unexpected token in '.subsections_via_symbols' directive
expected string in '.dump' or '.load' directive
unexpected token in '.dump' or '.load' directive
ignoring directive .dump for now
ignoring directive .load for now
expected identifier after '.section' directive
unexpected token in '.section' directive
section "
" is deprecated
change section name to "
unexpected token in '.secure_log_unique' directive
.secure_log_unique specified multiple times
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
can't open secure log file: 
unexpected token in '.secure_log_reset' directive
unexpected token in '.tbss' directive
invalid '.tbss' directive size, can't be less thanzero
invalid '.tbss' alignment, can't be lessthan zero
expected segment name after '.zerofill' directive
expected section name after comma in '.zerofill' directive
unexpected token in '.zerofill' directive
invalid '.zerofill' directive size, can't be less than zero
invalid '.zerofill' directive alignment, can't be less than zero
expected region type after '.data_region' directive
unknown region type in '.data_region' directive
unexpected token in '.end_data_region' directive
__dyld
__fvmlib_init0
__fvmlib_init1
expected string in '
unexpected token in '.dyld_lib' directive
__OBJC
__cat_cls_meth
__cat_inst_meth
__category
__class
__class_vars
__cls_meth
__cls_refs
__inst_meth
__instance_vars
__message_refs
__meta_class
__module_info
__protocol
__selector_strs
__string_object
__symbols
__picsymbol_stub
__static_const
__static_data
__symbol_stub
invalid OS update specifier, comma expected
OS update
invalid 
 major version number, integer expected
 major version number
 minor version number required, comma expected
 minor version number, integer expected
 minor version number
 version number, integer expected
 version number
SDK subminor
 used while targeting 
overriding previous version directive
previous definition is here
platform name expected
unknown platform name
version number required, comma expected
 in '.build_version' directive
.data.rel
.section
.pushsection
.popsection
.size
.previous
.type
.ident
.symver
.version
.weakref
.weak
.local
.protected
.internal
.hidden
.subsection
.cg_profile
expected string in directive
unknown flag
setting incorrect section attributes for 
Section cannot specifiy a group name while also acting as a member of the last group
Mergeable section must specify the type
Group section must specify the type
.fini_array.
.preinit_array.
unknown section type
DWARF2 only supports one section per compilation unit
.rodata.
.text.
.data.
expected '@<type>', '%<type>' or "<type>"
expected '%<type>' or "<type>"
expected the entry size
entry size must be positive
expected group name
invalid group name
invalid linkage
Linkage must be 'comdat'
expected metadata symbol
invalid metadata symbol
symbol is not in a section: 
expected 'unique'
expected commma
unique id must be positive
unique id is too large
.popsection without corresponding .pushsection
.previous without corresponding .section
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '%<type>' or "<type>"
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '@<type>', '%<type>' or "<type>"
expected symbol type in directive
unsupported attribute in '.type' directive
unexpected token in '.type' directive
unexpected token in '.ident' directive
expected a comma
expected a '@' in the name
unexpected token in '.version' directive
expected integer count in '.cg_profile' directive
unexpected token
A @@ version cannot be undefined
Multiple symbol versions defined for 
No relocation available to represent this relative expression
Cannot represent a difference across sections
.strtab
.llvm.call-graph-profile
.llvm_addrsig
ZLIB
.rela
.rel
.symtab
Undefined temporary symbol
.symtab_shndxr
Size expression must be absolute.
A dwo section may not contain relocations
A relocation may not refer to a dwo section
dwo only supported with ELF
FK_Data_1
FK_Data_2
FK_Data_4
FK_Data_8
FK_PCRel_1
FK_PCRel_2
FK_PCRel_4
FK_PCRel_8
FK_GPRel_1
FK_GPRel_2
FK_GPRel_4
FK_GPRel_8
FK_DTPRel_4
FK_DTPRel_8
FK_TPRel_4
FK_TPRel_8
FK_SecRel_1
FK_SecRel_2
FK_SecRel_4
FK_SecRel_8
FK_Data_Add_1
FK_Data_Add_2
FK_Data_Add_4
FK_Data_Add_8
FK_Data_Sub_1
FK_Data_Sub_2
FK_Data_Sub_4
FK_Data_Sub_8
dwarf-extended-loc
Disable emission of the extended flags in .loc directives.
NO_APP
.code32
.code64
.zero
.ascii
.asciz
.byte
.short
.long
.quad
.globl
.weak
 InlineAsm Start
 InlineAsm End
.weak_reference 
.space
.cfi_startproc
 simple
.cfi_endproc
.syntax unified
.subsections_via_symbols
.linker_option "
.dyld_lib "
.data_region
.data_region jt8
.data_region jt16
.data_region jt32
.end_data_region
.watchos_version_min
.tvos_version_min
.ios_version_min
.macosx_version_min
sdk_version 
.build_version 
iossimulator
tvossimulator
watchossimulator
.thumb_func
.set 
.weakref 
.type
gnu_indirect_function
object
tls_object
notype
gnu_unique_object
.hidden
.indirect_symbol
.internal
.lazy_reference
.local
.no_dead_strip
.symbol_resolver
.alt_entry
.private_extern
.protected
.reference
.weak_definition
.weak_def_can_be_hidden
.desc
.def
.scl
.endef
.safeseh
.symidx
.secidx
.secrel32
.rva
.size
AdrpAdrp
AdrpLdr
AdrpAddLdr
AdrpLdrGotLdr
AdrpAddStr
AdrpLdrGotStr
AdrpAdd
AdrpLdrGot
.loh
.comm
.lcomm
.zerofill 
.tbss 
Don't know how to emit this value.
.uleb128 
.sleb128 
.fill
, 0x
.p2align
.p2alignw 
.p2alignl 
.org 
.file
.ident
 md5 0x
 source 
.loc
 basic_block
 prologue_end
 epilogue_begin
 is_stmt 
 isa 
 discriminator 
.cv_file
.cv_func_id 
.cv_inline_site_id 
 inlined_at 
.cv_loc
.cv_linetable
.cv_inline_linetable
.cv_def_range
.cv_stringtable
.cv_filechecksums
.cv_filechecksumoffset
.cv_fpo_data
.cfi_sections 
, .debug_frame
.cfi_def_cfa 
.cfi_def_cfa_offset 
.cfi_def_cfa_register 
.cfi_offset 
.cfi_personality 
.cfi_lsda 
.cfi_remember_state
.cfi_restore_state
.cfi_same_value 
.cfi_restore 
.cfi_rel_offset 
.cfi_adjust_cfa_offset 
.cfi_escape 
.cfi_return_column 
.cfi_signal_frame
.cfi_undefined 
.cfi_register 
.cfi_window_save
.seh_proc 
.seh_endproc
.seh_startchained
.seh_endchained
.seh_pushreg 
.seh_setframe 
.seh_stackalloc 
.seh_savereg 
.seh_savexmm 
.seh_pushframe
 @code
.seh_endprologue
.seh_handler 
, @unwind
, @except
.seh_handlerdata
.cg_profile 
.intel_syntax noprefix
.reloc 
.addrsig
.addrsig_sym 
encoding: [
  fixup 
offset: 
, kind: 
.bundle_align_mode 
.bundle_lock
 align_to_end
.bundle_unlock
expected relocatable expression
unsupported subtraction of qualified symbol
expected assembly-time absolute expression
invalid number of bytes
invalid .org offset '
' (at offset '
unable to write NOP sequence of 
cannot have fixups in virtual section!
non-zero initializer found in section '
non-zero initializer found in virtual section
sleb128 and uleb128 expressions must be absolute
<MCAssembler
  Sections:[
    
    
  Symbols:[
           
, Index:
undefined .align directive, value size '
' is not a divisor of padding size '
unable to write nop sequence of 
checksum_offset
strtab_begin
strtab_end
filechecksums_begin
filechecksums_end
linetable_begin
linetable_end
Segment for file '
' begins
as-secure-log-file-name
As secure log file name (initialized from AS_SECURE_LOG_FILE env variable)
AS_SECURE_LOG_FILE
$frame_escape_
$parent_frame_offset
__ehtable$
.group
inconsistent use of embedded source
llvm-mc (based on LLVM 31001.638.1)
Fragment can't be larger than a bundle size
Padding cannot exceed 255 bytes
Unterminated .bundle_lock when changing a section
Symbol: 
 redeclared as different type
Emitting values inside a locked bundle is forbidden
.comment
Reference to undefined temporary symbol 
.bundle_align_mode cannot be changed once set
.bundle_lock forbidden when bundling is disabled
.bundle_unlock forbidden when bundling is disabled
.bundle_unlock without matching lock
Empty bundle-locked group is forbidden
A Bundle can only have one Subtarget.
<<invalid>>
<<none>>
DTPOFF
DTPREL
GOTOFF
GOTREL
GOTPCREL
GOTTPOFF
INDNTPOFF
NTPOFF
GOTNTPOFF
TLSGD
TLSLD
TLSLDM
TPOFF
TPREL
tlscall
tlsdesc
TLVP
TLVPPAGE
TLVPPAGEOFF
PAGE
PAGEOFF
GOTPAGE
GOTPAGEOFF
SECREL32
SIZE
WEAKREF
ABS8
GOT_PREL
target1
target2
prel31
sbrel
tlsldo
tlsdescseq
hlo8
diff8
diff16
diff32
high
higha
higher
highera
highest
highesta
got@l
got@h
got@ha
tocbase
toc@l
toc@h
toc@ha
dtpmod
tprel@l
tprel@h
tprel@ha
tprel@high
tprel@higha
tprel@higher
tprel@highera
tprel@highest
tprel@highesta
dtprel@l
dtprel@h
dtprel@ha
dtprel@high
dtprel@higha
dtprel@higher
dtprel@highera
dtprel@highest
dtprel@highesta
got@tprel
got@tprel@l
got@tprel@h
got@tprel@ha
got@dtprel
got@dtprel@l
got@dtprel@h
got@dtprel@ha
got@tlsgd
got@tlsgd@l
got@tlsgd@h
got@tlsgd@ha
tlsgd
got@tlsld
got@tlsld@l
got@tlsld@h
got@tlsld@ha
tlsld
IMGREL
PCREL
LO16
HI16
GPREL
GDGOT
LDGOT
GDPLT
LDPLT
IEGOT
TYPEINDEX
gotpcrel32@lo
gotpcrel32@hi
rel32@lo
rel32@hi
rel64
agx_lo
agx_hi
agx_ss
agx_got64
agx_got32
agx_gotss
agx_got_tls
pcrel
expression could not be evaluated
' could not be evaluated in a subtraction expression
Common symbol '
' cannot be used in assignment expr
<MCFixup
 Offset:
 Value:
 Kind:
MCAlignFragment
MCDataFragment
MCCompactEncodedInstFragment
MCFillFragment
MCRelaxableFragment
MCOrgFragment
MCDwarfFragment
MCDwarfCallFrameFragment
MCLEBFragment
MCPaddingFragment
MCSymbolIdFragment
MCCVInlineLineTableFragment
MCCVDefRangeTableFragment
MCDummyFragment
<MCFragment 
 LayoutOrder:
 HasInstructions:
 BundlePadding:
 (emit nops)
       
 Alignment:
 ValueSize:
 MaxBytesToEmit:
 Contents:[
       
 Fixups:[
                
 NumValues:
 Inst:
 AddrDelta:
 LineDelta:
 Signed:
 PaddingPoliciesMask:
 IsInsertionPoint:
 Size:
 InstSize:
 Sym:
 RangeStart:
 RangeEnd:
unable to evaluate offset for variable '
unable to evaluate offset to undefined symbol '
<MCOperand 
INVALID
Reg:
Imm:
FPImm:
Expr:(
Inst:(
UNDEFINED
<MCInst 
<MCInst #
The usage of .zerofill is restricted to sections of ZEROFILL type. Use .zero or .space instead.
__TEXT
__eh_frame
__text
__data
__thread_data
__thread_bss
__thread_vars
__thread_init
__cstring
__ustring
__literal4
__literal8
__literal16
__textcoal_nt
__const_coal
__datacoal_nt
__bss
__la_symbol_ptr
__nl_symbol_ptr
__thread_ptr
__gcc_except_tab
__LD
__compact_unwind
__debug_names
debug_names_begin
__apple_names
names_begin
__apple_objc
objc_begin
__apple_namespac
namespac_begin
__apple_types
types_begin
__swift_ast
__debug_abbrev
section_abbrev
__debug_info
section_info
__debug_line
section_line
__debug_line_str
section_line_str
__debug_frame
__debug_pubnames
__debug_pubtypes
__debug_gnu_pubn
__debug_gnu_pubt
__debug_str
info_string
__debug_str_offs
section_str_off
__debug_loc
section_debug_loc
__debug_aranges
__debug_ranges
debug_range
__debug_rnglists
__debug_macinfo
debug_macinfo
__debug_inlined
__debug_cu_index
__debug_tu_index
__LLVM_STACKMAPS
__llvm_stackmaps
__LLVM_FAULTMAPS
__llvm_faultmaps
.bss
.text
.data
.rodata
.tdata
.tbss
.data.rel.ro
.rodata.cst4
.rodata.cst8
.rodata.cst16
.rodata.cst32
.gcc_except_table
.debug_abbrev
.debug_info
.debug_line
.debug_line_str
.debug_frame
.debug_pubnames
.debug_pubtypes
.debug_gnu_pubnames
.debug_gnu_pubtypes
.debug_str
.debug_loc
.debug_aranges
.debug_ranges
.debug_macinfo
.debug_names
.apple_names
.apple_objc
.apple_namespaces
.apple_types
.debug_str_offsets
.debug_addr
.debug_rnglists
.debug_info.dwo
.debug_types.dwo
.debug_abbrev.dwo
.debug_str.dwo
.debug_line.dwo
.debug_loc.dwo
.debug_str_offsets.dwo
.debug_rnglists.dwo
.debug_cu_index
.debug_tu_index
.llvm_stackmaps
.llvm_faultmaps
.eh_frame
.stack_sizes
.rdata
.debug$S
.debug$T
.debug$H
section_info_dwo
section_types_dwo
section_abbrev_dwo
skel_string
skel_loc
section_str_off_dwo
addr_sec
.drectve
.pdata
.xdata
.sxdata
.gfids$y
.tls$
Cannot initialize MC for non-Windows COFF object files.
Cannot initialize MC for MetalLib object files.
Cannot initialize MC for unknown object file format.
.debug_types
Cannot get DWARF types section for this object file format: not implemented.
value evaluated as 
 is out of range.
This file format doesn't support weak aliases.
Cannot evaluate subsection number
Subsection number out of range
'.fill' directive with negative repeat count has no effect
target does not implement codeview register mapping
unknown codeview register
sec_end
Mismatched bundle_lock/unlock directives
<MCSection
 Fragments:[
      
      
.linkonce
one_only
discard
same_size
same_contents
associative
newest
.section
,#alloc
,#execinstr
,#write
,#exclude
,#tls
init_array
fini_array
preinit_array
nobits
progbits
0x7000001e
llvm_odrtab
llvm_linker_options
llvm_call_graph_profile
unsupported type 0x
 for section 
,comdat
,unique,
.subsection
0123456789_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
,none,
mach-o section specifier requires a segment whose length is between 1 and 16 characters
mach-o section specifier requires a segment and section separated by a comma
mach-o section specifier requires a section whose length is between 1 and 16 characters
mach-o section specifier uses an unknown section type
mach-o section specifier of type 'symbol_stubs' requires a size specifier
mach-o section specifier has invalid attribute
mach-o section specifier cannot have a stub size specified because it does not have type 'symbol_stubs'
mach-o section specifier has a malformed stub size
regular
S_REGULAR
S_ZEROFILL
cstring_literals
S_CSTRING_LITERALS
4byte_literals
S_4BYTE_LITERALS
8byte_literals
S_8BYTE_LITERALS
literal_pointers
S_LITERAL_POINTERS
non_lazy_symbol_pointers
S_NON_LAZY_SYMBOL_POINTERS
lazy_symbol_pointers
S_LAZY_SYMBOL_POINTERS
symbol_stubs
S_SYMBOL_STUBS
mod_init_funcs
S_MOD_INIT_FUNC_POINTERS
mod_term_funcs
S_MOD_TERM_FUNC_POINTERS
coalesced
S_COALESCED
S_GB_ZEROFILL
interposing
S_INTERPOSING
16byte_literals
S_16BYTE_LITERALS
S_DTRACE_DOF
S_LAZY_DYLIB_SYMBOL_POINTERS
thread_local_regular
S_THREAD_LOCAL_REGULAR
thread_local_zerofill
S_THREAD_LOCAL_ZEROFILL
thread_local_variables
S_THREAD_LOCAL_VARIABLES
thread_local_variable_pointers
S_THREAD_LOCAL_VARIABLE_POINTERS
thread_local_init_function_pointers
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
pure_instructions
S_ATTR_PURE_INSTRUCTIONS
no_toc
S_ATTR_NO_TOC
strip_static_syms
S_ATTR_STRIP_STATIC_SYMS
no_dead_strip
S_ATTR_NO_DEAD_STRIP
live_support
S_ATTR_LIVE_SUPPORT
self_modifying_code
S_ATTR_SELF_MODIFYING_CODE
debug
S_ATTR_DEBUG
S_ATTR_SOME_INSTRUCTIONS
S_ATTR_EXT_RELOC
S_ATTR_LOC_RELOC
unsupported directive in streamer
line_table_start
this directive must appear between .cfi_startproc and .cfi_endproc directives
parent function id not introduced by .cv_func_id or .cv_inline_site_id
function id not introduced by .cv_func_id or .cv_inline_site_id
all .cv_loc directives for a function must be in the same section
invalid symbol redefinition
starting new .cfi frame before finishing the previous one
.seh_* directives are not supported on this target
.seh_ directive must appear within an active frame
Starting a function before ending the previous one!
Not all chained regions terminated!
End of a chained region outside a chained region!
Chained unwind areas can't have handlers!
Don't know what kind of handler this is!
frame register and offset can be set at most once
offset is not a multiple of 16
frame offset must be less than or equal to 240
stack allocation size must be non-zero
stack allocation size is not a multiple of 8
register save offset is not 8 byte aligned
If present, PushMachFrame must be the first UOP
EmitRawText called on an MCStreamer that doesn't support it,  something must not be fully mc'ized
Unfinished frame!
' is not a recognized processor for this target
 (ignoring processor)
Symbol name with unsupported characters
indirect symbol '
' not in a symbol pointer or stub section
Data region not terminated
invalid 'common' alignment '
' for '
' is not a recognized feature for this target
 (ignoring feature)
+help
Available CPUs for this target:
  %-*s - %s.
Available features for this target:
Use +feature to enable a feature, or -feature to disable it.
For example, llc -mcpu=mycpu -mattr=+feature1,-feature2
 Off=
, Sym=
, Addend=
, FixupSection=
section already has a defining function: 
relocations for function or section offsets are only supported in metadata sections
section symbol is required for relocation
relocations against un-named temporaries are not yet supported by wasm
__linear_memory
__indirect_function_table
undefined global symbol cannot be weak
section name and begin symbol should match: 
function sections must contain one function each
function symbols must have a size set with .size
data symbols must have a size set with .size: 
.size expression must be evaluatable
don't yet support defined globals
don't yet support global aliases
.fini_array sections are unsupported
only one .init_array section fragment supported
.init_array section should be aligned
.init_array section should be aligned for pointers
only data supported in .init_array section
.init_array section priority should start with '.'
invalid .init_array section priority
non-symbolic data in .init_array section
fixups in .init_array should be symbol references
symbols in .init_array should be for functions
symbols in .init_array should exist in symbtab
CODE
DATA
only data supported in data sections
only byte values supported for alignment
section size does not fit in a uint32_t
symbol not found in wasm index space: 
symbol not found in type index space: 
linking
two sections have the same comdat
conflicting sections for symbol
.weak.
.default
symbol '
' can not be undefined
assembler label '
' can not be undefined in a subtraction expression
PE COFF object files can't have more than 2147483647 sections
Missing associated COMDAT section for section 
.file
COFF string table is greater than 64 GB.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
CodeView Error: 
llvm.codeview
An unknown error has occurred.
The buffer is not large enough to read the requested number of bytes.
The CodeView record is corrupted.
There are no records
The requested operation is not supported.
The member record is of an unknown type.
0123456789ABCDEF
{0} {1}::*
 const
 __unaligned
 __restrict
const 
__unaligned 
{0} {1}
{0} {1}::{2}
<field list>
<vftable {0} methods>
Buffer contains invalid APSInt type
LF_POINTER
LF_MODIFIER
LF_PROCEDURE
LF_MFUNCTION
LF_LABEL
LF_ARGLIST
LF_FIELDLIST
LF_ARRAY
LF_CLASS
LF_STRUCTURE
LF_INTERFACE
LF_UNION
LF_ENUM
LF_TYPESERVER2
LF_VFTABLE
LF_VTSHAPE
LF_BITFIELD
LF_BCLASS
LF_BINTERFACE
LF_VBCLASS
LF_IVBCLASS
LF_VFUNCTAB
LF_STMEMBER
LF_METHOD
LF_MEMBER
LF_NESTTYPE
LF_ONEMETHOD
LF_ENUMERATE
LF_INDEX
LF_FUNC_ID
LF_MFUNC_ID
LF_BUILDINFO
LF_SUBSTR_LIST
LF_STRING_ID
LF_UDT_SRC_LINE
LF_UDT_MOD_SRC_LINE
LF_METHODLIST
LF_PRECOMP
LF_ENDPRECOMP
LF_MODIFIER_16t
LF_POINTER_16t
LF_ARRAY_16t
LF_CLASS_16t
LF_STRUCTURE_16t
LF_UNION_16t
LF_ENUM_16t
LF_PROCEDURE_16t
LF_MFUNCTION_16t
LF_COBOL0_16t
LF_COBOL1
LF_BARRAY_16t
LF_NULLLEAF
LF_NOTTRAN
LF_DIMARRAY_16t
LF_VFTPATH_16t
LF_PRECOMP_16t
LF_OEM_16t
LF_TYPESERVER_ST
LF_SKIP_16t
LF_ARGLIST_16t
LF_DEFARG_16t
LF_LIST
LF_FIELDLIST_16t
LF_DERIVED_16t
LF_BITFIELD_16t
LF_METHODLIST_16t
LF_DIMCONU_16t
LF_DIMCONLU_16t
LF_DIMVARU_16t
LF_DIMVARLU_16t
LF_REFSYM
LF_BCLASS_16t
LF_VBCLASS_16t
LF_IVBCLASS_16t
LF_ENUMERATE_ST
LF_FRIENDFCN_16t
LF_INDEX_16t
LF_MEMBER_16t
LF_STMEMBER_16t
LF_METHOD_16t
LF_NESTTYPE_16t
LF_VFUNCTAB_16t
LF_FRIENDCLS_16t
LF_ONEMETHOD_16t
LF_VFUNCOFF_16t
LF_TI16_MAX
LF_ARRAY_ST
LF_CLASS_ST
LF_STRUCTURE_ST
LF_UNION_ST
LF_ENUM_ST
LF_COBOL0
LF_BARRAY
LF_DIMARRAY_ST
LF_VFTPATH
LF_PRECOMP_ST
LF_OEM
LF_ALIAS_ST
LF_OEM2
LF_SKIP
LF_DEFARG_ST
LF_DERIVED
LF_DIMCONU
LF_DIMCONLU
LF_DIMVARU
LF_DIMVARLU
LF_FRIENDFCN_ST
LF_MEMBER_ST
LF_STMEMBER_ST
LF_METHOD_ST
LF_NESTTYPE_ST
LF_FRIENDCLS
LF_ONEMETHOD_ST
LF_VFUNCOFF
LF_NESTTYPEEX_ST
LF_MEMBERMODIFY_ST
LF_MANAGED_ST
LF_ST_MAX
LF_TYPESERVER
LF_DIMARRAY
LF_ALIAS
LF_DEFARG
LF_FRIENDFCN
LF_NESTTYPEEX
LF_MEMBERMODIFY
LF_MANAGED
LF_STRIDED_ARRAY
LF_HLSL
LF_MODIFIER_EX
LF_VECTOR
LF_MATRIX
LF_NUMERIC
LF_CHAR
LF_SHORT
LF_USHORT
LF_LONG
LF_ULONG
LF_REAL32
LF_REAL64
LF_REAL80
LF_REAL128
LF_QUADWORD
LF_UQUADWORD
LF_REAL48
LF_COMPLEX32
LF_COMPLEX64
LF_COMPLEX80
LF_COMPLEX128
LF_VARSTRING
LF_OCTWORD
LF_UOCTWORD
LF_DECIMAL
LF_DATE
LF_UTF8STRING
LF_REAL16
LF_PAD0
LF_PAD1
LF_PAD2
LF_PAD3
LF_PAD4
LF_PAD5
LF_PAD6
LF_PAD7
LF_PAD8
LF_PAD9
LF_PAD10
LF_PAD11
LF_PAD12
LF_PAD13
LF_PAD14
LF_PAD15
Packed
HasConstructorOrDestructor
HasOverloadedOperator
Nested
ContainsNestedClass
HasOverloadedAssignmentOperator
HasConversionOperator
ForwardReference
Scoped
HasUniqueName
Sealed
Intrinsic
Private
Protected
Public
Pseudo
NoInherit
NoConstruct
CompilerGenerated
Vanilla
Virtual
Friend
IntroducingVirtual
PureVirtual
PureIntroducingVirtual
Near16
Far16
Huge16
BasedOnSegment
BasedOnValue
BasedOnSegmentValue
BasedOnAddress
BasedOnSegmentAddress
BasedOnType
BasedOnSelf
Near32
Far32
Near64
Pointer
LValueReference
PointerToDataMember
PointerToMemberFunction
RValueReference
SingleInheritanceData
MultipleInheritanceData
VirtualInheritanceData
GeneralData
SingleInheritanceFunction
MultipleInheritanceFunction
VirtualInheritanceFunction
GeneralFunction
Const
Volatile
Unaligned
NearC
FarC
NearPascal
FarPascal
NearFast
FarFast
NearStdCall
FarStdCall
NearSysCall
FarSysCall
ThisCall
MipsCall
Generic
AlphaCall
PpcCall
SHCall
ArmCall
AM33Call
TriCall
SH5Call
M32RCall
ClrCall
NearVector
CxxReturnUdt
Constructor
ConstructorWithVirtualBases
Near
TypeLeafKind
LeafData
StringData
NumArgs
ArgType
NumStrings
Strings
MemberCount
Properties
FieldList
DerivedFrom
VShape
SizeOf
LinkageName
NumEnumerators
UnderlyingType
FieldListType
ElementType
IndexType
CompleteClass
OverriddenVFTable
VFPtrOffset
VFTableName
MethodName
ClassType
FunctionType
ReturnType
CallingConvention
FunctionOptions
NumParameters
ArgListType
ThisType
ThisAdjustment
Method
VFTableOffset
ParentScope
Guid
PointeeType
PointerAttributes
PtrType
PtrMode
IsFlat
IsConst
IsVolatile
IsUnaligned
IsRestrict
Representation
ModifiedType
Modifiers
BitSize
BitOffset
VFEntryCount
SourceFile
LineNumber
Module
AccessSpecifier
MethodKind
MethodOptions
UnknownMember
MethodCount
MethodListIndex
FieldOffset
EnumValue
BaseType
BaseOffset
VBPtrType
VBPtrOffset
VBTableIndex
ContinuationIndex
Mode
StartIndex
Signature
PrecompFile
Modifier
Procedure
MemberFunction
Label
ArgList
Array
Class
Struct
Interface
Enum
TypeServer2
VFTable
VFTableShape
BitField
BaseClass
BaseInterface
VirtualBaseClass
IndirectVirtualBaseClass
VFPtr
StaticDataMember
OverloadedMethod
DataMember
NestedType
OneMethod
Enumerator
ListContinuation
FuncId
MemberFuncId
BuildInfo
StringList
StringId
UdtSourceLine
UdtModSourceLine
MethodOverloadList
Precomp
EndPrecomp
UnknownLeaf
 [ (
void*
<not translated>*
HRESULT*
signed char*
unsigned char*
char*
wchar_t*
char16_t*
char32_t*
__int8*
unsigned __int8*
short*
unsigned short*
__int16*
unsigned __int16*
long*
unsigned long*
int*
unsigned*
__int64*
unsigned __int64*
__int128*
unsigned __int128*
__half*
float*
__float48*
double*
long double*
__float128*
_Complex float*
_Complex double*
_Complex long double*
_Complex __float128*
bool*
__bool16*
__bool32*
__bool64*
<no type>
<unknown simple type>
print-summary-global-ids
Print the global id for each value when reading the module summary
Malformed block
Invalid record
Invalid bitcode signature
Invalid bitcode wrapper header
Unexpected end of file
Invalid value
Incompatible epoch: Bitcode '
' vs current: '
Could not find function in stream
Trying to materialize functions before seeing function blocks
Expect SubBlock
Expect function block
 (Producer: '
' Reader: 'LLVM 
APPLE_1_
Insufficient function protos
Invalid function metadata: incoming forward references
Invalid ID
Invalid cast
Explicit gep type does not match pointee type of pointer operand
EXTRACTVAL: Invalid instruction with 0 indices
EXTRACTVAL: Invalid type
EXTRACTVAL: Invalid struct index
EXTRACTVAL: Invalid array index
INSERTVAL: Invalid instruction with 0 indices
INSERTVAL: Invalid type
INSERTVAL: Invalid struct index
INSERTVAL: Invalid array index
Inserted value type doesn't match aggregate type
Invalid type for value
Explicit invoke type is not a function type
Callee is not a pointer
Callee is not of pointer to function type
Explicit invoke type does not match pointee type of callee operand
Insufficient operands to call
Personality function mismatch
Old-style alloca with a non-pointer type
Fast math flags indicator set for call with no FMF
Explicit call type is not a function type
Callee is not a pointer type
Explicit call type does not match pointee type of callee operand
Fast-math-flags specified for call without floating-point scalar or vector return type
Invalid instruction with no BB
Operand bundles found with no consumer
Never resolved value found in function
Invalid function metadata: outgoing forward refs
Invalid constant reference
Invalid constant type
Explicit gep operator type does not match pointee type of pointer operand
Invalid gep with no operands
Invalid value name
Invalid alignment value
Load/Store operand is not a pointer type
Explicit load/store type does not match pointee type of pointer operand
Cannot load/store from pointer
Never resolved function from blockaddress
Malformed global initializer set
Invalid multiple blocks
Unknown attribute kind (
Bitwidth for integer type out of range
Invalid type
Invalid function argument type
Invalid TYPE table
Invalid vector length
Invalid matrix dimensions
Invalid TYPE table: Only named structs can be forward referenced
Expected a constant
Alias and aliasee types don't match
Invalid multiple synchronization scope names blocks
Invalid empty synchronization scope names block
Invalid global variable comdat ID
Invalid calling convention ID
Invalid function comdat ID
Invalid hash length 
Invalid Summary Block: record for version expected
Invalid Summary Block: version expected
Invalid summary version 
, 1, 2, 3 or 4 expected
Alias expects aliasee summary to be parsed
Name attachment that does not follow a combined record
Invalid hash that does not follow a module path
GUID 
) is 
Expected a single module
llvm.bitcode
Corrupted bitcode
Abbreviation starts with an Array or a Blob
Array element type can't be an Array or a Blob
Array op not second to last
Array element type has to be an encoding of a type
Fixed or VBR abbrev record with size > MaxChunkData
Abbrev record with no operands
Invalid abbrev number
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._
Invalid encoding
import-full-type-definitions
Import full type definitions for ThinLTO.
disable-ondemand-mds-loading
Force disable the lazy-loading on-demand of metadata when loading bitcode for importing.
Corrupted Metadata block
Invalid metadata: fwd refs into function blocks
Invalid record: metadata strings layout
Invalid record: metadata strings with no strings
Invalid record: metadata strings corrupt offset
Invalid record: metadata strings bad length
Invalid record: metadata strings truncated chars
Invalid metadata attachment
Conflicting METADATA_KIND records
METADATA_NAME not followed by METADATA_NAMED_NODE
Invalid record: Unsupported version of DISubrange
Alignment value is too large
Can't lazyload MD
Type mismatch in constant table!
 = comdat 
exactmatch
largest
noduplicates
samesize
 = type 
; Materializable
; Function Attrs: 
define 
 section "
 align 
 gc "
 prefix 
 prologue 
 personality 
!<unknown kind #
<empty name> 
!DIExpression(
!DILocation(
line
column
scope
inlinedAt
external
internal
linkonce
linkonce_odr
weak
weak_odr
common
appending
extern_weak
available_externally
dso_local 
hidden 
protected 
dllimport 
dllexport 
fastcc
coldcc
webkit_jscc
anyregcc
preserve_mostcc
preserve_allcc
cxx_fast_tlscc
ghccc
x86_stdcallcc
x86_fastcallcc
x86_thiscallcc
x86_regcallcc
x86_vectorcallcc
intel_ocl_bicc
arm_apcscc
arm_aapcscc
arm_aapcs_vfpcc
msp430_intrcc
avr_intrcc 
avr_signalcc 
ptx_kernel
ptx_device
agx_ticc
agx_pscc
agx_vscc
agx_sscc
agx_sfcc
agx_sicc
agx_clcc
agx_dscc
agx_mrcc
x86_64_sysvcc
win64cc
spir_func
spir_kernel
swiftcc
x86_intrcc
hhvmcc
hhvm_ccc
amdgpu_vs
amdgpu_ls
amdgpu_hs
amdgpu_es
amdgpu_gs
amdgpu_ps
amdgpu_cs
amdgpu_kernel
air_intersection
asm 
sideeffect 
alignstack 
inteldialect 
", "
<badref>
local_unnamed_addr
unnamed_addr
 comdat
<null operand!>
; uselistorder directives
uselistorder
_bb 
, { 
source_filename = "
target datalayout = "
target triple = "
module asm "
attributes #
 = { 
distinct 
<temporary!> 
!DIGlobalVariableExpression(
expr
!GenericDINode(
header
operands: {
tag: 
!DISubrange(
lowerBound
!DIEnumerator(
name
isUnsigned
!DIBasicType(
size
encoding
!DIDerivedType(
file
baseType
offset
flags
extraData
dwarfAddressSpace
ptrAuthKey
ptrAuthIsAddressDiscriminated
ptrAuthExtraDiscriminator
!DICompositeType(
elements
runtimeLang
vtableHolder
templateParams
discriminator
!DISubroutineType(
types
!DIFile(
filename
directory
source
checksumkind: 
checksum
!DICompileUnit(
language
producer
isOptimized
runtimeVersion
splitDebugFilename
emissionKind
enums
retainedTypes
globals
imports
macros
dwoId
splitDebugInlining
debugInfoForProfiling
gnuPubnames
!DISubprogram(
linkageName
isLocal
isDefinition
scopeLine
containingType
virtuality
virtualIndex
thisAdjustment
unit
declaration
retainedNodes
thrownTypes
!DILexicalBlock(
!DILexicalBlockFile(
!DINamespace(
exportSymbols
!DIModule(
configMacros
includePath
isysroot
!DITemplateTypeParameter(
!DITemplateValueParameter(
!DIGlobalVariable(
!DILocalVariable(
!DILabel(
!DIObjCProperty(
setter
getter
attributes
!DIImportedEntity(
entity
!DIMacro(
type: 
!DIMacroFile(
nodes
 = !{
void
bfloat
x86_fp80
fp128
ppc_fp128
metadata
x86_mmx
token
%"type 
 addrspace(
opaque
<badref> = 
musttail 
tail 
notail 
 atomic
 weak
 volatile
    
          cleanup
          catch 
          filter 
 within 
] unwind 
to caller
 void
 from 
 unwind 
, ...
          to 
inalloca 
swifterror 
, align 
, addrspace(
 fast
 reassoc
 nnan
 ninf
 nsz
 arcp
 contract
 afn
 nuw
 nsw
 exact
 inbounds
 syncscope("
not_atomic
unordered
monotonic
consume
acquire
release
acq_rel
seq_cst
 ; (
; <label>:
; Error: Block without parent!
 No predecessors!
 preds = 
external 
addrspace(
externally_initialized 
constant 
global 
, section "
thread_local 
thread_local(localdynamic) 
thread_local(initialexec) 
thread_local(localexec) 
alias 
ifunc 
 <<NULL ALIASEE>>
zeroinitializer
blockaddress(
undef
inrange 
<placeholder or erroneous Constant>
[Regular LTO]
 = module: (
path: "
", hash: (
 = typeid: (name: "
) ; guid = 
 = gv: (
name: "
guid: 
, summaries: (
 ; guid = 
(module: ^
, flags: (
linkage: 
, notEligibleToImport: 
, live: 
, dsoLocal: 
, refs: (
alias
variable
, aliasee: 
, insts: 
, funcFlags: (
readNone: 
, readOnly: 
, noRecurse: 
, returnDoesNotAlias: 
, calls: (
(callee: ^
, hotness: 
, relbf: 
critical
, typeIdInfo: (
typeTests: (
typeTestAssumeVCalls
typeCheckedLoadVCalls
typeTestAssumeConstVCalls
typeCheckedLoadConstVCalls
vFuncId: (
, offset: 
args: (
, summary: (
, wpdResolutions: (
(offset: 
typeTestRes: (kind: 
, sizeM1BitWidth: 
, alignLog2: 
, sizeM1: 
, bitMask: 
, inlineBits: 
unsat
byteArray
inline
single
allOnes
wpdRes: (kind: 
, singleImplName: "
, resByArg: (
, byArg: (kind: 
, info: 
, byte: 
, bit: 
indir
singleImpl
branchFunnel
uniformRetVal
uniqueRetVal
virtualConstProp
sanitize_address
sanitize_hwaddress
alwaysinline
argmemonly
builtin
convergent
swifterror
swiftself
inaccessiblememonly
inaccessiblemem_or_argmemonly
inalloca
inlinehint
inreg
jumptable
minsize
nest
nobuiltin
nocapture
noduplicate
noimplicitfloat
noinline
nonlazybind
noredzone
noreturn
nocf_check
norecurse
nounwind
optforfuzzing
optnone
optsize
readnone
readonly
writeonly
returned
returns_twice
signext
speculatable
sspreq
sspstrong
safestack
shadowcallstack
strictfp
sret
sanitize_thread
sanitize_memory
uwtable
zeroext
cold
byval
alignstack
allocsize(
AS =
  { 
PAL[
 => 
invariance-late-reassoc
invariance-late-contract
invariance-late-unsafe-fp-math
no-signed-zeros-fp-math
unsafe-fp-math
no-jump-tables
profile-sample-accurate
probe-stack
stack-probe-size
min-legal-vector-width
null-pointer-is-valid
less-precise-fpmad
objc_retainAutoreleaseReturnValue
cast
sse2.storel.dq
sse2.sqrt.sd
avx512.kand.w
avx512.kandn.w
avx512.kor.w
avx512.kxor.w
avx512.kxnor.w
avx512.knot.w
avx512.kortestz.w
avx512.kortestc.w
sse.add.ss
sse2.add.sd
sse.sub.ss
sse2.sub.sd
sse.mul.ss
sse2.mul.sd
sse.div.ss
sse2.div.sd
sse41.pmaxsb
avx2.pmulu.dq
avx512.pmulu.dq.512
sse41.pmuldq
avx2.pmul.dq
avx512.pmul.dq.512
sse2.cvtsi2sd
sse.cvtsi642ss
sse2.cvtsi642sd
avx512.cvtusi2sd
sse2.cvtss2sd
avx.cvtdq2.pd.256
avx512.mask.cvtdq2ps.128
avx512.mask.cvtudq2ps.128
avx512.mask.cvtqq2pd.128
avx512.mask.cvtuqq2pd.128
sse2.cvtps2pd
avx.cvt.ps2.pd.256
avx512.mask.cvtps2pd.128
cvtu
cvtps2pd
pmovsx
sse2.psll.dq.bs
avx512.psll.dq.512
avx512.psrl.dq.512
sse41.pblendw
abs.ll
abs.cond
max.ull
max.cond
min.ull
min.cond
ctlz
ctlz.trunc
ctpop
ctpop.trunc
clang.arc.retainAutoreleasedReturnValueMarker
Objective-C Class Properties
Objective-C Image Info Section
llvm.ctlz.
^arm\.neon\.vld([1234]|[234]lane)\.v[a-z0-9]*$
.p0i8
^arm\.neon\.vst([1234]|[234]lane)\.v[a-z0-9]*$
lane
arm.thread.pointer
lifetime.start
lifetime.end
sse41.dppd
sse41.mpsadbw
avx2.mpsadbw
avx512.mask.cvttpd2dq.256
avx2.movntdqa
avx512.movntdqa
xop.vpcmov.256
palignr
vpmovm2
llvm.loop.interleave.count
llvm.loop.vectorize.
full-set
empty-set
Printing <null> Type
allocsize
use-dbg-addr
Use llvm.dbg.addr for all local variables
Address space 0 can never be non-integral
Invalid address space, must be a 24bit integer
Missing size specification for pointer in datalayout string
Invalid pointer size of 0 bytes
Missing alignment specification for pointer in datalayout string
Pointer ABI alignment must be a power of 2
Pointer preferred alignment must be a power of 2
Invalid index size of 0 bytes
Sized aggregate specification in datalayout string
Missing alignment specification in datalayout string
ABI alignment specification must be >0 for non-aggregate types
Zero width native integer type in datalayout string
Unexpected trailing characters after mangling specifier in datalayout string
Expected mangling specifier in datalayout string
Unknown mangling specifier in datalayout string
Unknown mangling in datalayout string
Unknown specifier in datalayout string
Invalid bit width, must be a 24bit integer
Invalid ABI alignment, must be a 16bit integer
Invalid preferred alignment, must be a 16bit integer
Invalid ABI alignment, must be a power of 2
Invalid preferred alignment, must be a power of 2
Preferred alignment cannot be less than the ABI alignment
Trailing separator in datalayout string
Expected token before separator in datalayout string
not a number, or does not fit in an unsigned int
number of bits must be a byte width multiple
Invalid address space, must be a 24-bit integer
llvm.gcov
Debug Info Version
DIFlagZero
DIFlagPrivate
DIFlagProtected
DIFlagPublic
DIFlagFwdDecl
DIFlagAppleBlock
DIFlagBlockByrefStruct
DIFlagVirtual
DIFlagArtificial
DIFlagExplicit
DIFlagPrototyped
DIFlagObjcClassComplete
DIFlagObjectPointer
DIFlagVector
DIFlagStaticMember
DIFlagLValueReference
DIFlagRValueReference
DIFlagReserved
DIFlagSingleInheritance
DIFlagMultipleInheritance
DIFlagVirtualInheritance
DIFlagIntroducedVirtual
DIFlagBitField
DIFlagNoReturn
DIFlagMainSubprogram
DIFlagTypePassByValue
DIFlagTypePassByReference
DIFlagFixedEnum
DIFlagThunk
DIFlagTrivial
DIFlagBigEndian
DIFlagLittleEndian
DIFlagAllCallsDescribed
DIFlagIndirectVirtualBase
CSK_MD5
CSK_SHA1
NoDebug
FullDebug
LineTablesOnly
 @[ 
pass-remarks
pattern
Enable optimization remarks from passes whose name match the given regular expression
pass-remarks-missed
Enable missed optimization remarks from passes whose name match the given regular expression
pass-remarks-analysis
Enable optimization analysis remarks from passes whose name match the given regular expression
Invalid regular expression '
' in -pass-remarks: 
srcloc
 at line 
 limit
 of 
 exceeded (
) in 
ignoring debug info with an invalid version (
ignoring invalid debug info in 
<UNKNOWN LOCATION>
 (hotness: 
Instruction selection used fallback path for 
!Passed
!Missed
!Analysis
!AnalysisFPCommute
!AnalysisAliasing
!Failure
Name
DebugLoc
Function
Hotness
Args
String
^(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$
File
Line
Column
verify-dom-info
Verify dominator info (time consuming)
=============================--------------------------------
Inorder Dominator Tree: 
DFSNumbers invalid: 
 slow queries.
Inorder PostDominator Tree: 
Roots: 
Insert 
Delete 
 -> 
PendUpdates:
Insert, 
Delete, 
(no name)
(badref), 
(no_name)
(badref)
DeletedBBs:
(no_name)(
Dominator Tree Construction
domtree
nullptr
not_intrinsic
llvm.addressofreturnaddress
llvm.adjust.trampoline
llvm.annotation
llvm.bitreverse
llvm.bswap
llvm.canonicalize
llvm.ceil
llvm.clear_cache
llvm.codeview.annotation
llvm.convert.from.fp16
llvm.convert.to.fp16
llvm.copysign
llvm.coro.alloc
llvm.coro.alloca.alloc
llvm.coro.alloca.free
llvm.coro.alloca.get
llvm.coro.begin
llvm.coro.destroy
llvm.coro.done
llvm.coro.end
llvm.coro.frame
llvm.coro.free
llvm.coro.id
llvm.coro.id.retcon
llvm.coro.id.retcon.once
llvm.coro.noop
llvm.coro.param
llvm.coro.prepare.retcon
llvm.coro.promise
llvm.coro.resume
llvm.coro.save
llvm.coro.size
llvm.coro.subfn.addr
llvm.coro.suspend
llvm.coro.suspend.retcon
llvm.cos
llvm.ctlz
llvm.ctpop
llvm.cttz
llvm.dbg.addr
llvm.dbg.declare
llvm.dbg.label
llvm.dbg.value
llvm.debugtrap
llvm.donothing
llvm.eh.dwarf.cfa
llvm.eh.exceptioncode
llvm.eh.exceptionpointer
llvm.eh.return.i32
llvm.eh.return.i64
llvm.eh.sjlj.callsite
llvm.eh.sjlj.functioncontext
llvm.eh.sjlj.longjmp
llvm.eh.sjlj.lsda
llvm.eh.sjlj.setjmp
llvm.eh.sjlj.setup.dispatch
llvm.eh.typeid.for
llvm.eh.unwind.init
llvm.exp
llvm.expect
llvm.experimental.constrained.cos
llvm.experimental.constrained.exp
llvm.experimental.constrained.exp2
llvm.experimental.constrained.fadd
llvm.experimental.constrained.fdiv
llvm.experimental.constrained.fma
llvm.experimental.constrained.fmul
llvm.experimental.constrained.frem
llvm.experimental.constrained.fsub
llvm.experimental.constrained.log
llvm.experimental.constrained.log10
llvm.experimental.constrained.log2
llvm.experimental.constrained.nearbyint
llvm.experimental.constrained.pow
llvm.experimental.constrained.powi
llvm.experimental.constrained.rint
llvm.experimental.constrained.sin
llvm.experimental.constrained.sqrt
llvm.experimental.deoptimize
llvm.experimental.gc.relocate
llvm.experimental.gc.result
llvm.experimental.gc.statepoint
llvm.experimental.guard
llvm.experimental.patchpoint.i64
llvm.experimental.patchpoint.void
llvm.experimental.stackmap
llvm.experimental.vector.reduce.add
llvm.experimental.vector.reduce.and
llvm.experimental.vector.reduce.fadd
llvm.experimental.vector.reduce.fmax
llvm.experimental.vector.reduce.fmin
llvm.experimental.vector.reduce.fmul
llvm.experimental.vector.reduce.mul
llvm.experimental.vector.reduce.or
llvm.experimental.vector.reduce.smax
llvm.experimental.vector.reduce.smin
llvm.experimental.vector.reduce.umax
llvm.experimental.vector.reduce.umin
llvm.experimental.vector.reduce.xor
llvm.fabs
llvm.floor
llvm.flt.rounds
llvm.fma
llvm.fmuladd
llvm.frameaddress
llvm.fshl
llvm.fshr
llvm.gcread
llvm.gcroot
llvm.gcwrite
llvm.get.dynamic.area.offset
llvm.icall.branch.funnel
llvm.init.trampoline
llvm.instrprof.increment
llvm.instrprof.increment.step
llvm.instrprof.value.profile
llvm.invariant.end
llvm.invariant.start
llvm.launder.invariant.group
llvm.lifetime.end
llvm.lifetime.start
llvm.load.relative
llvm.localaddress
llvm.localescape
llvm.localrecover
llvm.log10
llvm.longjmp
llvm.masked.compressstore
llvm.masked.expandload
llvm.masked.gather
llvm.masked.load
llvm.masked.scatter
llvm.masked.store
llvm.matrix.add
llvm.matrix.columnwise.load
llvm.matrix.columnwise.store
llvm.matrix.extract
llvm.matrix.insert
llvm.matrix.multiply
llvm.matrix.scalar.multiply
llvm.matrix.subtract
llvm.matrix.transpose
llvm.maxnum
llvm.memcpy
llvm.memcpy.element.unordered.atomic
llvm.memmove
llvm.memmove.element.unordered.atomic
llvm.memset
llvm.memset.element.unordered.atomic
llvm.minnum
llvm.nearbyint
llvm.objectsize
llvm.pcmarker
llvm.pow
llvm.powi
llvm.prefetch
llvm.ptr.annotation
llvm.ptrauth.auth
llvm.ptrauth.blend
llvm.ptrauth.resign
llvm.ptrauth.sign
llvm.ptrauth.sign.generic
llvm.ptrauth.strip
llvm.rcp
llvm.read_register
llvm.readcyclecounter
llvm.returnaddress
llvm.rint
llvm.round
llvm.sadd.with.overflow
llvm.setjmp
llvm.sideeffect
llvm.siglongjmp
llvm.sigsetjmp
llvm.sin
llvm.smul.with.overflow
llvm.sqrt
llvm.ssa.copy
llvm.ssub.with.overflow
llvm.stackguard
llvm.stackprotector
llvm.stackrestore
llvm.stacksave
llvm.strip.invariant.group
llvm.thread.pointer
llvm.trap
llvm.trunc
llvm.type.checked.load
llvm.type.test
llvm.uadd.with.overflow
llvm.umul.with.overflow
llvm.usub.with.overflow
llvm.va_copy
llvm.va_end
llvm.va_start
llvm.var.annotation
llvm.write_register
llvm.xray.customevent
llvm.xray.typedevent
llvm.agx.bindless.tex.state.ptr
llvm.agx.check.bound
llvm.agx.check.bound.idx
llvm.agx.color.coverage.mask
llvm.agx.deferred.attribute.pass
llvm.agx.iraydd
llvm.agx.iraydi
llvm.agx.irayid
llvm.agx.irayii
llvm.agx.load.got
llvm.agx.number.of.samples
llvm.agx.read.sample.number
llvm.agx.samplerState
llvm.agx.smp.1d.4xf
llvm.agx.smp.1d.4xh
llvm.agx.smp.1d.4xi16
llvm.agx.smp.1d.4xi32
llvm.agx.smp.1d.array.4xf
llvm.agx.smp.1d.array.4xh
llvm.agx.smp.1d.array.4xi16
llvm.agx.smp.1d.array.4xi32
llvm.agx.smp.1d.array.ci16.4xf
llvm.agx.smp.1d.array.ci16.4xh
llvm.agx.smp.1d.array.ci16.4xi16
llvm.agx.smp.1d.array.ci16.4xi32
llvm.agx.smp.1d.array.ci16.lod.4xf
llvm.agx.smp.1d.array.ci16.lod.4xh
llvm.agx.smp.1d.array.ci16.lod.4xi16
llvm.agx.smp.1d.array.ci16.lod.4xi32
llvm.agx.smp.1d.array.i.4xf
llvm.agx.smp.1d.array.i.4xh
llvm.agx.smp.1d.array.i.4xi16
llvm.agx.smp.1d.array.i.4xi32
llvm.agx.smp.1d.array.i.lod.4xf
llvm.agx.smp.1d.array.i.lod.4xh
llvm.agx.smp.1d.array.i.lod.4xi16
llvm.agx.smp.1d.array.i.lod.4xi32
llvm.agx.smp.1d.ci16.4xf
llvm.agx.smp.1d.ci16.4xh
llvm.agx.smp.1d.ci16.4xi16
llvm.agx.smp.1d.ci16.4xi32
llvm.agx.smp.1d.ci16.lod.4xf
llvm.agx.smp.1d.ci16.lod.4xh
llvm.agx.smp.1d.ci16.lod.4xi16
llvm.agx.smp.1d.ci16.lod.4xi32
llvm.agx.smp.1d.i.4xf
llvm.agx.smp.1d.i.4xh
llvm.agx.smp.1d.i.4xi16
llvm.agx.smp.1d.i.4xi32
llvm.agx.smp.1d.i.lod.4xf
llvm.agx.smp.1d.i.lod.4xh
llvm.agx.smp.1d.i.lod.4xi16
llvm.agx.smp.1d.i.lod.4xi32
llvm.agx.smp.2d.4xf
llvm.agx.smp.2d.4xh
llvm.agx.smp.2d.4xi16
llvm.agx.smp.2d.4xi32
llvm.agx.smp.2d.array.4xf
llvm.agx.smp.2d.array.4xh
llvm.agx.smp.2d.array.4xi16
llvm.agx.smp.2d.array.4xi32
llvm.agx.smp.2d.array.ci16.lod.4xf
llvm.agx.smp.2d.array.ci16.lod.4xh
llvm.agx.smp.2d.array.ci16.lod.4xi16
llvm.agx.smp.2d.array.ci16.lod.4xi32
llvm.agx.smp.2d.array.ci16.lod.offset.4xf
llvm.agx.smp.2d.array.ci16.lod.offset.4xh
llvm.agx.smp.2d.array.ci16.lod.offset.4xi16
llvm.agx.smp.2d.array.ci16.lod.offset.4xi32
llvm.agx.smp.2d.array.gather.4xf
llvm.agx.smp.2d.array.gather.4xh
llvm.agx.smp.2d.array.gather.4xi16
llvm.agx.smp.2d.array.gather.4xi32
llvm.agx.smp.2d.array.gather.offset.4xf
llvm.agx.smp.2d.array.gather.offset.4xh
llvm.agx.smp.2d.array.gather.offset.4xi16
llvm.agx.smp.2d.array.gather.offset.4xi32
llvm.agx.smp.2d.array.grad.4xf
llvm.agx.smp.2d.array.grad.4xh
llvm.agx.smp.2d.array.grad.4xi16
llvm.agx.smp.2d.array.grad.4xi32
llvm.agx.smp.2d.array.grad.offset.4xf
llvm.agx.smp.2d.array.grad.offset.4xh
llvm.agx.smp.2d.array.grad.offset.4xi16
llvm.agx.smp.2d.array.grad.offset.4xi32
llvm.agx.smp.2d.array.i.lod.4xf
llvm.agx.smp.2d.array.i.lod.4xh
llvm.agx.smp.2d.array.i.lod.4xi16
llvm.agx.smp.2d.array.i.lod.4xi32
llvm.agx.smp.2d.array.i.lod.offset.4xf
llvm.agx.smp.2d.array.i.lod.offset.4xh
llvm.agx.smp.2d.array.i.lod.offset.4xi16
llvm.agx.smp.2d.array.i.lod.offset.4xi32
llvm.agx.smp.2d.array.lod.4xf
llvm.agx.smp.2d.array.lod.4xh
llvm.agx.smp.2d.array.lod.4xi16
llvm.agx.smp.2d.array.lod.4xi32
llvm.agx.smp.2d.array.lod.offset.4xf
llvm.agx.smp.2d.array.lod.offset.4xh
llvm.agx.smp.2d.array.lod.offset.4xi16
llvm.agx.smp.2d.array.lod.offset.4xi32
llvm.agx.smp.2d.array.offset.4xf
llvm.agx.smp.2d.array.offset.4xh
llvm.agx.smp.2d.array.offset.4xi16
llvm.agx.smp.2d.array.offset.4xi32
llvm.agx.smp.2d.array.shadow.4xf
llvm.agx.smp.2d.array.shadow.4xh
llvm.agx.smp.2d.array.shadow.gather.4xf
llvm.agx.smp.2d.array.shadow.gather.4xh
llvm.agx.smp.2d.array.shadow.gather.offset.4xf
llvm.agx.smp.2d.array.shadow.gather.offset.4xh
llvm.agx.smp.2d.array.shadow.grad.4xf
llvm.agx.smp.2d.array.shadow.grad.4xh
llvm.agx.smp.2d.array.shadow.grad.offset.4xf
llvm.agx.smp.2d.array.shadow.grad.offset.4xh
llvm.agx.smp.2d.array.shadow.lod.4xf
llvm.agx.smp.2d.array.shadow.lod.4xh
llvm.agx.smp.2d.array.shadow.lod.offset.4xf
llvm.agx.smp.2d.array.shadow.lod.offset.4xh
llvm.agx.smp.2d.array.shadow.offset.4xf
llvm.agx.smp.2d.array.shadow.offset.4xh
llvm.agx.smp.2d.ci16.lod.4xf
llvm.agx.smp.2d.ci16.lod.4xh
llvm.agx.smp.2d.ci16.lod.4xi16
llvm.agx.smp.2d.ci16.lod.4xi32
llvm.agx.smp.2d.ci16.lod.offset.4xf
llvm.agx.smp.2d.ci16.lod.offset.4xh
llvm.agx.smp.2d.ci16.lod.offset.4xi16
llvm.agx.smp.2d.ci16.lod.offset.4xi32
llvm.agx.smp.2d.gather.4xf
llvm.agx.smp.2d.gather.4xh
llvm.agx.smp.2d.gather.4xi16
llvm.agx.smp.2d.gather.4xi32
llvm.agx.smp.2d.gather.offset.4xf
llvm.agx.smp.2d.gather.offset.4xh
llvm.agx.smp.2d.gather.offset.4xi16
llvm.agx.smp.2d.gather.offset.4xi32
llvm.agx.smp.2d.grad.4xf
llvm.agx.smp.2d.grad.4xh
llvm.agx.smp.2d.grad.4xi16
llvm.agx.smp.2d.grad.4xi32
llvm.agx.smp.2d.grad.offset.4xf
llvm.agx.smp.2d.grad.offset.4xh
llvm.agx.smp.2d.grad.offset.4xi16
llvm.agx.smp.2d.grad.offset.4xi32
llvm.agx.smp.2d.i.lod.4xf
llvm.agx.smp.2d.i.lod.4xh
llvm.agx.smp.2d.i.lod.4xi16
llvm.agx.smp.2d.i.lod.4xi32
llvm.agx.smp.2d.i.lod.offset.4xf
llvm.agx.smp.2d.i.lod.offset.4xh
llvm.agx.smp.2d.i.lod.offset.4xi16
llvm.agx.smp.2d.i.lod.offset.4xi32
llvm.agx.smp.2d.lod.4xf
llvm.agx.smp.2d.lod.4xh
llvm.agx.smp.2d.lod.4xi16
llvm.agx.smp.2d.lod.4xi32
llvm.agx.smp.2d.lod.offset.4xf
llvm.agx.smp.2d.lod.offset.4xh
llvm.agx.smp.2d.lod.offset.4xi16
llvm.agx.smp.2d.lod.offset.4xi32
llvm.agx.smp.2d.msaa.4xf
llvm.agx.smp.2d.msaa.4xh
llvm.agx.smp.2d.msaa.4xi16
llvm.agx.smp.2d.msaa.4xi32
llvm.agx.smp.2d.msaa.array.4xf
llvm.agx.smp.2d.msaa.array.4xh
llvm.agx.smp.2d.msaa.array.4xi16
llvm.agx.smp.2d.msaa.array.4xi32
llvm.agx.smp.2d.msaa.array.ci16.4xf
llvm.agx.smp.2d.msaa.array.ci16.4xh
llvm.agx.smp.2d.msaa.array.ci16.4xi16
llvm.agx.smp.2d.msaa.array.ci16.4xi32
llvm.agx.smp.2d.msaa.array.ci16.lod.4xf
llvm.agx.smp.2d.msaa.array.ci16.lod.4xh
llvm.agx.smp.2d.msaa.array.ci16.lod.4xi16
llvm.agx.smp.2d.msaa.array.ci16.lod.4xi32
llvm.agx.smp.2d.msaa.array.i.4xf
llvm.agx.smp.2d.msaa.array.i.4xh
llvm.agx.smp.2d.msaa.array.i.4xi16
llvm.agx.smp.2d.msaa.array.i.4xi32
llvm.agx.smp.2d.msaa.array.i.lod.4xf
llvm.agx.smp.2d.msaa.array.i.lod.4xh
llvm.agx.smp.2d.msaa.array.i.lod.4xi16
llvm.agx.smp.2d.msaa.array.i.lod.4xi32
llvm.agx.smp.2d.msaa.ci16.4xf
llvm.agx.smp.2d.msaa.ci16.4xh
llvm.agx.smp.2d.msaa.ci16.4xi16
llvm.agx.smp.2d.msaa.ci16.4xi32
llvm.agx.smp.2d.msaa.ci16.lod.4xf
llvm.agx.smp.2d.msaa.ci16.lod.4xh
llvm.agx.smp.2d.msaa.ci16.lod.4xi16
llvm.agx.smp.2d.msaa.ci16.lod.4xi32
llvm.agx.smp.2d.msaa.i.4xf
llvm.agx.smp.2d.msaa.i.4xh
llvm.agx.smp.2d.msaa.i.4xi16
llvm.agx.smp.2d.msaa.i.4xi32
llvm.agx.smp.2d.msaa.i.lod.4xf
llvm.agx.smp.2d.msaa.i.lod.4xh
llvm.agx.smp.2d.msaa.i.lod.4xi16
llvm.agx.smp.2d.msaa.i.lod.4xi32
llvm.agx.smp.2d.offset.4xf
llvm.agx.smp.2d.offset.4xh
llvm.agx.smp.2d.offset.4xi16
llvm.agx.smp.2d.offset.4xi32
llvm.agx.smp.2d.shadow.4xf
llvm.agx.smp.2d.shadow.4xh
llvm.agx.smp.2d.shadow.gather.4xf
llvm.agx.smp.2d.shadow.gather.4xh
llvm.agx.smp.2d.shadow.gather.offset.4xf
llvm.agx.smp.2d.shadow.gather.offset.4xh
llvm.agx.smp.2d.shadow.grad.4xf
llvm.agx.smp.2d.shadow.grad.4xh
llvm.agx.smp.2d.shadow.grad.offset.4xf
llvm.agx.smp.2d.shadow.grad.offset.4xh
llvm.agx.smp.2d.shadow.lod.4xf
llvm.agx.smp.2d.shadow.lod.4xh
llvm.agx.smp.2d.shadow.lod.offset.4xf
llvm.agx.smp.2d.shadow.lod.offset.4xh
llvm.agx.smp.2d.shadow.offset.4xf
llvm.agx.smp.2d.shadow.offset.4xh
llvm.agx.smp.3d.4xf
llvm.agx.smp.3d.4xh
llvm.agx.smp.3d.4xi16
llvm.agx.smp.3d.4xi32
llvm.agx.smp.3d.ci16.lod.4xf
llvm.agx.smp.3d.ci16.lod.4xh
llvm.agx.smp.3d.ci16.lod.4xi16
llvm.agx.smp.3d.ci16.lod.4xi32
llvm.agx.smp.3d.ci16.lod.offset.4xf
llvm.agx.smp.3d.ci16.lod.offset.4xh
llvm.agx.smp.3d.ci16.lod.offset.4xi16
llvm.agx.smp.3d.ci16.lod.offset.4xi32
llvm.agx.smp.3d.grad.4xf
llvm.agx.smp.3d.grad.4xh
llvm.agx.smp.3d.grad.4xi16
llvm.agx.smp.3d.grad.4xi32
llvm.agx.smp.3d.grad.offset.4xf
llvm.agx.smp.3d.grad.offset.4xh
llvm.agx.smp.3d.grad.offset.4xi16
llvm.agx.smp.3d.grad.offset.4xi32
llvm.agx.smp.3d.i.lod.4xf
llvm.agx.smp.3d.i.lod.4xh
llvm.agx.smp.3d.i.lod.4xi16
llvm.agx.smp.3d.i.lod.4xi32
llvm.agx.smp.3d.i.lod.offset.4xf
llvm.agx.smp.3d.i.lod.offset.4xh
llvm.agx.smp.3d.i.lod.offset.4xi16
llvm.agx.smp.3d.i.lod.offset.4xi32
llvm.agx.smp.3d.lod.4xf
llvm.agx.smp.3d.lod.4xh
llvm.agx.smp.3d.lod.4xi16
llvm.agx.smp.3d.lod.4xi32
llvm.agx.smp.3d.lod.offset.4xf
llvm.agx.smp.3d.lod.offset.4xh
llvm.agx.smp.3d.lod.offset.4xi16
llvm.agx.smp.3d.lod.offset.4xi32
llvm.agx.smp.3d.offset.4xf
llvm.agx.smp.3d.offset.4xh
llvm.agx.smp.3d.offset.4xi16
llvm.agx.smp.3d.offset.4xi32
llvm.agx.smp.cube.4xf
llvm.agx.smp.cube.4xh
llvm.agx.smp.cube.array.4xf
llvm.agx.smp.cube.array.4xh
llvm.agx.smp.cube.array.gather.4xf
llvm.agx.smp.cube.array.gather.4xh
llvm.agx.smp.cube.array.grad.4xf
llvm.agx.smp.cube.array.grad.4xh
llvm.agx.smp.cube.array.lod.4xf
llvm.agx.smp.cube.array.lod.4xh
llvm.agx.smp.cube.gather.4xf
llvm.agx.smp.cube.gather.4xh
llvm.agx.smp.cube.grad.4xf
llvm.agx.smp.cube.grad.4xh
llvm.agx.smp.cube.lod.4xf
llvm.agx.smp.cube.lod.4xh
llvm.agx.smp.cube.shadow.4xf
llvm.agx.smp.cube.shadow.4xh
llvm.agx.smp.cube.shadow.gather.4xf
llvm.agx.smp.cube.shadow.gather.4xh
llvm.agx.smp.cube.shadow.grad.4xf
llvm.agx.smp.cube.shadow.grad.4xh
llvm.agx.smp.cube.shadow.lod.4xf
llvm.agx.smp.cube.shadow.lod.4xh
llvm.agx.smp.cubedir.4xf
llvm.agx.smp.cubedir.4xh
llvm.agx.smp.cubedir.4xi16
llvm.agx.smp.cubedir.4xi32
llvm.agx.smp.cubedir.array.4xf
llvm.agx.smp.cubedir.array.4xh
llvm.agx.smp.cubedir.array.4xi16
llvm.agx.smp.cubedir.array.4xi32
llvm.agx.smp.cubedir.array.gather.4xf
llvm.agx.smp.cubedir.array.gather.4xh
llvm.agx.smp.cubedir.array.gather.4xi16
llvm.agx.smp.cubedir.array.gather.4xi32
llvm.agx.smp.cubedir.array.grad.4xf
llvm.agx.smp.cubedir.array.grad.4xh
llvm.agx.smp.cubedir.array.grad.4xi16
llvm.agx.smp.cubedir.array.grad.4xi32
llvm.agx.smp.cubedir.array.lod.4xf
llvm.agx.smp.cubedir.array.lod.4xh
llvm.agx.smp.cubedir.array.lod.4xi16
llvm.agx.smp.cubedir.array.lod.4xi32
llvm.agx.smp.cubedir.array.shadow.4xf
llvm.agx.smp.cubedir.array.shadow.4xh
llvm.agx.smp.cubedir.array.shadow.gather.4xf
llvm.agx.smp.cubedir.array.shadow.gather.4xh
llvm.agx.smp.cubedir.array.shadow.grad.4xf
llvm.agx.smp.cubedir.array.shadow.grad.4xh
llvm.agx.smp.cubedir.array.shadow.lod.4xf
llvm.agx.smp.cubedir.array.shadow.lod.4xh
llvm.agx.smp.cubedir.gather.4xf
llvm.agx.smp.cubedir.gather.4xh
llvm.agx.smp.cubedir.gather.4xi16
llvm.agx.smp.cubedir.gather.4xi32
llvm.agx.smp.cubedir.grad.4xf
llvm.agx.smp.cubedir.grad.4xh
llvm.agx.smp.cubedir.grad.4xi16
llvm.agx.smp.cubedir.grad.4xi32
llvm.agx.smp.cubedir.lod.4xf
llvm.agx.smp.cubedir.lod.4xh
llvm.agx.smp.cubedir.lod.4xi16
llvm.agx.smp.cubedir.lod.4xi32
llvm.agx.smp.cubedir.shadow.4xf
llvm.agx.smp.cubedir.shadow.4xh
llvm.agx.smp.cubedir.shadow.gather.4xf
llvm.agx.smp.cubedir.shadow.gather.4xh
llvm.agx.smp.cubedir.shadow.grad.4xf
llvm.agx.smp.cubedir.shadow.grad.4xh
llvm.agx.smp.cubedir.shadow.lod.4xf
llvm.agx.smp.cubedir.shadow.lod.4xh
llvm.agx.smp.cubestf.4xf
llvm.agx.smp.cubestf.4xh
llvm.agx.smp.cubestf.4xi16
llvm.agx.smp.cubestf.4xi32
llvm.agx.smp.cubestf.array.4xf
llvm.agx.smp.cubestf.array.4xh
llvm.agx.smp.cubestf.array.4xi16
llvm.agx.smp.cubestf.array.4xi32
llvm.agx.smp.cubestf.array.ci16.4xf
llvm.agx.smp.cubestf.array.ci16.4xh
llvm.agx.smp.cubestf.array.ci16.4xi16
llvm.agx.smp.cubestf.array.ci16.4xi32
llvm.agx.smp.cubestf.array.ci16.lod.4xf
llvm.agx.smp.cubestf.array.ci16.lod.4xh
llvm.agx.smp.cubestf.array.ci16.lod.4xi16
llvm.agx.smp.cubestf.array.ci16.lod.4xi32
llvm.agx.smp.cubestf.array.gather.4xf
llvm.agx.smp.cubestf.array.gather.4xh
llvm.agx.smp.cubestf.array.gather.4xi16
llvm.agx.smp.cubestf.array.gather.4xi32
llvm.agx.smp.cubestf.array.grad.4xf
llvm.agx.smp.cubestf.array.grad.4xh
llvm.agx.smp.cubestf.array.grad.4xi16
llvm.agx.smp.cubestf.array.grad.4xi32
llvm.agx.smp.cubestf.array.i.4xf
llvm.agx.smp.cubestf.array.i.4xh
llvm.agx.smp.cubestf.array.i.4xi16
llvm.agx.smp.cubestf.array.i.4xi32
llvm.agx.smp.cubestf.array.i.lod.4xf
llvm.agx.smp.cubestf.array.i.lod.4xh
llvm.agx.smp.cubestf.array.i.lod.4xi16
llvm.agx.smp.cubestf.array.i.lod.4xi32
llvm.agx.smp.cubestf.array.lod.4xf
llvm.agx.smp.cubestf.array.lod.4xh
llvm.agx.smp.cubestf.array.lod.4xi16
llvm.agx.smp.cubestf.array.lod.4xi32
llvm.agx.smp.cubestf.array.shadow.4xf
llvm.agx.smp.cubestf.array.shadow.4xh
llvm.agx.smp.cubestf.array.shadow.gather.4xf
llvm.agx.smp.cubestf.array.shadow.gather.4xh
llvm.agx.smp.cubestf.array.shadow.grad.4xf
llvm.agx.smp.cubestf.array.shadow.grad.4xh
llvm.agx.smp.cubestf.array.shadow.lod.4xf
llvm.agx.smp.cubestf.array.shadow.lod.4xh
llvm.agx.smp.cubestf.ci16.4xf
llvm.agx.smp.cubestf.ci16.4xh
llvm.agx.smp.cubestf.ci16.4xi16
llvm.agx.smp.cubestf.ci16.4xi32
llvm.agx.smp.cubestf.ci16.lod.4xf
llvm.agx.smp.cubestf.ci16.lod.4xh
llvm.agx.smp.cubestf.ci16.lod.4xi16
llvm.agx.smp.cubestf.ci16.lod.4xi32
llvm.agx.smp.cubestf.gather.4xf
llvm.agx.smp.cubestf.gather.4xh
llvm.agx.smp.cubestf.gather.4xi16
llvm.agx.smp.cubestf.gather.4xi32
llvm.agx.smp.cubestf.grad.4xf
llvm.agx.smp.cubestf.grad.4xh
llvm.agx.smp.cubestf.grad.4xi16
llvm.agx.smp.cubestf.grad.4xi32
llvm.agx.smp.cubestf.i.4xf
llvm.agx.smp.cubestf.i.4xh
llvm.agx.smp.cubestf.i.4xi16
llvm.agx.smp.cubestf.i.4xi32
llvm.agx.smp.cubestf.i.lod.4xf
llvm.agx.smp.cubestf.i.lod.4xh
llvm.agx.smp.cubestf.i.lod.4xi16
llvm.agx.smp.cubestf.i.lod.4xi32
llvm.agx.smp.cubestf.lod.4xf
llvm.agx.smp.cubestf.lod.4xh
llvm.agx.smp.cubestf.lod.4xi16
llvm.agx.smp.cubestf.lod.4xi32
llvm.agx.smp.cubestf.shadow.4xf
llvm.agx.smp.cubestf.shadow.4xh
llvm.agx.smp.cubestf.shadow.gather.4xf
llvm.agx.smp.cubestf.shadow.gather.4xh
llvm.agx.smp.cubestf.shadow.grad.4xf
llvm.agx.smp.cubestf.shadow.grad.4xh
llvm.agx.smp.cubestf.shadow.lod.4xf
llvm.agx.smp.cubestf.shadow.lod.4xh
llvm.agx.smpw.1d.array.ci16.4xf
llvm.agx.smpw.1d.array.ci16.4xf.rtz
llvm.agx.smpw.1d.array.ci16.4xh
llvm.agx.smpw.1d.array.ci16.4xh.rtz
llvm.agx.smpw.1d.array.ci16.lod.4xf
llvm.agx.smpw.1d.array.ci16.lod.4xf.rtz
llvm.agx.smpw.1d.array.ci16.lod.4xh
llvm.agx.smpw.1d.array.ci16.lod.4xh.rtz
llvm.agx.smpw.1d.array.ci16.lod.4xi16
llvm.agx.smpw.1d.array.ci16.lod.4xi32
llvm.agx.smpw.1d.array.i.4xf
llvm.agx.smpw.1d.array.i.4xf.rtz
llvm.agx.smpw.1d.array.i.4xh
llvm.agx.smpw.1d.array.i.4xh.rtz
llvm.agx.smpw.1d.array.i.lod.4xf
llvm.agx.smpw.1d.array.i.lod.4xf.rtz
llvm.agx.smpw.1d.array.i.lod.4xh
llvm.agx.smpw.1d.array.i.lod.4xh.rtz
llvm.agx.smpw.1d.array.i.lod.4xi16
llvm.agx.smpw.1d.array.i.lod.4xi32
llvm.agx.smpw.1d.ci16.4xf
llvm.agx.smpw.1d.ci16.4xf.rtz
llvm.agx.smpw.1d.ci16.4xh
llvm.agx.smpw.1d.ci16.4xh.rtz
llvm.agx.smpw.1d.ci16.lod.4xf
llvm.agx.smpw.1d.ci16.lod.4xf.rtz
llvm.agx.smpw.1d.ci16.lod.4xh
llvm.agx.smpw.1d.ci16.lod.4xh.rtz
llvm.agx.smpw.1d.ci16.lod.4xi16
llvm.agx.smpw.1d.ci16.lod.4xi32
llvm.agx.smpw.1d.i.4xf
llvm.agx.smpw.1d.i.4xf.rtz
llvm.agx.smpw.1d.i.4xh
llvm.agx.smpw.1d.i.4xh.rtz
llvm.agx.smpw.1d.i.lod.4xf
llvm.agx.smpw.1d.i.lod.4xf.rtz
llvm.agx.smpw.1d.i.lod.4xh
llvm.agx.smpw.1d.i.lod.4xh.rtz
llvm.agx.smpw.1d.i.lod.4xi16
llvm.agx.smpw.1d.i.lod.4xi32
llvm.agx.smpw.2d.array.ci16.4xf
llvm.agx.smpw.2d.array.ci16.4xf.rtz
llvm.agx.smpw.2d.array.ci16.4xh
llvm.agx.smpw.2d.array.ci16.4xh.rtz
llvm.agx.smpw.2d.array.ci16.lod.4xf
llvm.agx.smpw.2d.array.ci16.lod.4xf.rtz
llvm.agx.smpw.2d.array.ci16.lod.4xh
llvm.agx.smpw.2d.array.ci16.lod.4xh.rtz
llvm.agx.smpw.2d.array.ci16.lod.4xi16
llvm.agx.smpw.2d.array.ci16.lod.4xi32
llvm.agx.smpw.2d.array.i.4xf
llvm.agx.smpw.2d.array.i.4xf.rtz
llvm.agx.smpw.2d.array.i.4xh
llvm.agx.smpw.2d.array.i.4xh.rtz
llvm.agx.smpw.2d.array.i.lod.4xf
llvm.agx.smpw.2d.array.i.lod.4xf.rtz
llvm.agx.smpw.2d.array.i.lod.4xh
llvm.agx.smpw.2d.array.i.lod.4xh.rtz
llvm.agx.smpw.2d.array.i.lod.4xi16
llvm.agx.smpw.2d.array.i.lod.4xi32
llvm.agx.smpw.2d.ci16.4xf
llvm.agx.smpw.2d.ci16.4xf.rtz
llvm.agx.smpw.2d.ci16.4xh
llvm.agx.smpw.2d.ci16.4xh.rtz
llvm.agx.smpw.2d.ci16.lod.4xf
llvm.agx.smpw.2d.ci16.lod.4xf.rtz
llvm.agx.smpw.2d.ci16.lod.4xh
llvm.agx.smpw.2d.ci16.lod.4xh.rtz
llvm.agx.smpw.2d.ci16.lod.4xi16
llvm.agx.smpw.2d.ci16.lod.4xi32
llvm.agx.smpw.2d.i.4xf
llvm.agx.smpw.2d.i.4xf.rtz
llvm.agx.smpw.2d.i.4xh
llvm.agx.smpw.2d.i.4xh.rtz
llvm.agx.smpw.2d.i.lod.4xf
llvm.agx.smpw.2d.i.lod.4xf.rtz
llvm.agx.smpw.2d.i.lod.4xh
llvm.agx.smpw.2d.i.lod.4xh.rtz
llvm.agx.smpw.2d.i.lod.4xi16
llvm.agx.smpw.2d.i.lod.4xi32
llvm.agx.smpw.3d.ci16.4xf
llvm.agx.smpw.3d.ci16.4xf.rtz
llvm.agx.smpw.3d.ci16.4xh
llvm.agx.smpw.3d.ci16.4xh.rtz
llvm.agx.smpw.3d.ci16.lod.4xf
llvm.agx.smpw.3d.ci16.lod.4xf.rtz
llvm.agx.smpw.3d.ci16.lod.4xh
llvm.agx.smpw.3d.ci16.lod.4xh.rtz
llvm.agx.smpw.3d.ci16.lod.4xi16
llvm.agx.smpw.3d.ci16.lod.4xi32
llvm.agx.smpw.3d.i.4xf
llvm.agx.smpw.3d.i.4xf.rtz
llvm.agx.smpw.3d.i.4xh
llvm.agx.smpw.3d.i.4xh.rtz
llvm.agx.smpw.3d.i.lod.4xf
llvm.agx.smpw.3d.i.lod.4xf.rtz
llvm.agx.smpw.3d.i.lod.4xh
llvm.agx.smpw.3d.i.lod.4xh.rtz
llvm.agx.smpw.3d.i.lod.4xi16
llvm.agx.smpw.3d.i.lod.4xi32
llvm.agx.smpw.cubestf.array.ci16.4xf
llvm.agx.smpw.cubestf.array.ci16.4xf.rtz
llvm.agx.smpw.cubestf.array.ci16.4xh
llvm.agx.smpw.cubestf.array.ci16.4xh.rtz
llvm.agx.smpw.cubestf.array.ci16.lod.4xf
llvm.agx.smpw.cubestf.array.ci16.lod.4xf.rtz
llvm.agx.smpw.cubestf.array.ci16.lod.4xh
llvm.agx.smpw.cubestf.array.ci16.lod.4xh.rtz
llvm.agx.smpw.cubestf.array.ci16.lod.4xi16
llvm.agx.smpw.cubestf.array.ci16.lod.4xi32
llvm.agx.smpw.cubestf.array.i.4xf
llvm.agx.smpw.cubestf.array.i.4xf.rtz
llvm.agx.smpw.cubestf.array.i.4xh
llvm.agx.smpw.cubestf.array.i.4xh.rtz
llvm.agx.smpw.cubestf.array.i.lod.4xf
llvm.agx.smpw.cubestf.array.i.lod.4xf.rtz
llvm.agx.smpw.cubestf.array.i.lod.4xh
llvm.agx.smpw.cubestf.array.i.lod.4xh.rtz
llvm.agx.smpw.cubestf.array.i.lod.4xi16
llvm.agx.smpw.cubestf.array.i.lod.4xi32
llvm.agx.smpw.cubestf.ci16.4xf
llvm.agx.smpw.cubestf.ci16.4xf.rtz
llvm.agx.smpw.cubestf.ci16.4xh
llvm.agx.smpw.cubestf.ci16.4xh.rtz
llvm.agx.smpw.cubestf.ci16.lod.4xf
llvm.agx.smpw.cubestf.ci16.lod.4xf.rtz
llvm.agx.smpw.cubestf.ci16.lod.4xh
llvm.agx.smpw.cubestf.ci16.lod.4xh.rtz
llvm.agx.smpw.cubestf.ci16.lod.4xi16
llvm.agx.smpw.cubestf.ci16.lod.4xi32
llvm.agx.smpw.cubestf.i.4xf
llvm.agx.smpw.cubestf.i.4xf.rtz
llvm.agx.smpw.cubestf.i.4xh
llvm.agx.smpw.cubestf.i.4xh.rtz
llvm.agx.smpw.cubestf.i.lod.4xf
llvm.agx.smpw.cubestf.i.lod.4xf.rtz
llvm.agx.smpw.cubestf.i.lod.4xh
llvm.agx.smpw.cubestf.i.lod.4xh.rtz
llvm.agx.smpw.cubestf.i.lod.4xi16
llvm.agx.smpw.cubestf.i.lod.4xi32
llvm.agx.textureState
llvm.agx.tls.alloc
llvm.agx1.atanc
llvm.agx1.clamp
llvm.agx1.cppix
llvm.agx1.cppix.agx1r1
llvm.agx1.dcf
llvm.agx1.dcfi
llvm.agx1.emitpix
llvm.agx1.emitpix.agx1r1
llvm.agx1.fitr.1xf
llvm.agx1.fitr.2xf
llvm.agx1.fitr.3xf
llvm.agx1.fitr.4xf
llvm.agx1.fitrp.1xf
llvm.agx1.fitrp.2xf
llvm.agx1.fitrp.3xf
llvm.agx1.fitrp.4xf
llvm.agx1.flushpbe
llvm.agx1.ft1
llvm.agx1.fusedClampFlushNaN
llvm.agx1.gcmp
llvm.agx1.gcmp.g5
llvm.agx1.gcmp.xr.g5
llvm.agx1.gexp
llvm.agx1.gexp.g5
llvm.agx1.gexp.xr.g5
llvm.agx1.idf
llvm.agx1.imadh.g4
llvm.agx1.imgwblk.2d.16
llvm.agx1.imgwblk.2d.32
llvm.agx1.imgwblk.2d.array.16
llvm.agx1.imgwblk.2d.array.32
llvm.agx1.imgwblk.2d.array.lod.16
llvm.agx1.imgwblk.2d.array.lod.32
llvm.agx1.imgwblk.2d.lod.16
llvm.agx1.imgwblk.2d.lod.32
llvm.agx1.imgwblk.3d.16
llvm.agx1.imgwblk.3d.32
llvm.agx1.imgwblk.3d.lod.16
llvm.agx1.imgwblk.3d.lod.32
llvm.agx1.imgwblk.barrier.2d.16
llvm.agx1.imgwblk.barrier.2d.32
llvm.agx1.imgwblk.barrier.2d.array.16
llvm.agx1.imgwblk.barrier.2d.array.32
llvm.agx1.imgwblk.barrier.2d.array.lod.16
llvm.agx1.imgwblk.barrier.2d.array.lod.32
llvm.agx1.imgwblk.barrier.2d.lod.16
llvm.agx1.imgwblk.barrier.2d.lod.32
llvm.agx1.imgwblk.barrier.3d.16
llvm.agx1.imgwblk.barrier.3d.32
llvm.agx1.imgwblk.barrier.3d.lod.16
llvm.agx1.imgwblk.barrier.3d.lod.32
llvm.agx1.instance.valid
llvm.agx1.is.back.facing
llvm.agx1.itr.centroid.1xf
llvm.agx1.itr.centroid.1xh
llvm.agx1.itr.centroid.2xh
llvm.agx1.itr.centroid.3xf
llvm.agx1.itr.centroid.3xh
llvm.agx1.itr.centroid.4xh
llvm.agx1.itr.pixel.1xf
llvm.agx1.itr.pixel.1xh
llvm.agx1.itr.pixel.2xf
llvm.agx1.itr.pixel.2xh
llvm.agx1.itr.pixel.3xf
llvm.agx1.itr.pixel.3xh
llvm.agx1.itr.pixel.4xf
llvm.agx1.itr.pixel.4xh
llvm.agx1.itr.sample.1xf
llvm.agx1.itr.sample.1xh
llvm.agx1.itr.sample.2xh
llvm.agx1.itr.sample.3xf
llvm.agx1.itr.sample.3xh
llvm.agx1.itr.sample.4xh
llvm.agx1.itr.tmp.1xf
llvm.agx1.itr.tmp.1xh
llvm.agx1.itr.tmp.2xf
llvm.agx1.itr.tmp.2xh
llvm.agx1.itr.tmp.3xf
llvm.agx1.itr.tmp.3xh
llvm.agx1.itr.tmp.4xf
llvm.agx1.itr.tmp.4xh
llvm.agx1.itrcem.centroid.3xf
llvm.agx1.itrcem.centroid.3xh
llvm.agx1.itrcem.pixel.3xf
llvm.agx1.itrcem.pixel.3xh
llvm.agx1.itrcem.sample.3xf
llvm.agx1.itrcem.sample.3xh
llvm.agx1.itrcem.tmp.3xf
llvm.agx1.itrcem.tmp.3xh
llvm.agx1.itrproj.centroid.1xf
llvm.agx1.itrproj.centroid.1xh
llvm.agx1.itrproj.centroid.2xh
llvm.agx1.itrproj.centroid.3xf
llvm.agx1.itrproj.centroid.3xh
llvm.agx1.itrproj.centroid.4xh
llvm.agx1.itrproj.pixel.1xf
llvm.agx1.itrproj.pixel.1xh
llvm.agx1.itrproj.pixel.2xf
llvm.agx1.itrproj.pixel.2xh
llvm.agx1.itrproj.pixel.3xf
llvm.agx1.itrproj.pixel.3xh
llvm.agx1.itrproj.pixel.4xf
llvm.agx1.itrproj.pixel.4xh
llvm.agx1.itrproj.sample.1xf
llvm.agx1.itrproj.sample.1xh
llvm.agx1.itrproj.sample.2xh
llvm.agx1.itrproj.sample.3xf
llvm.agx1.itrproj.sample.3xh
llvm.agx1.itrproj.sample.4xh
llvm.agx1.itrproj.tmp.1xf
llvm.agx1.itrproj.tmp.1xh
llvm.agx1.itrproj.tmp.2xf
llvm.agx1.itrproj.tmp.2xh
llvm.agx1.itrproj.tmp.3xf
llvm.agx1.itrproj.tmp.3xh
llvm.agx1.itrproj.tmp.4xf
llvm.agx1.itrproj.tmp.4xh
llvm.agx1.laddr
llvm.agx1.lldiblk.1xf
llvm.agx1.lldiblk.1xh
llvm.agx1.lldiblk.2xf
llvm.agx1.lldiblk.2xh
llvm.agx1.lldiblk.3xf
llvm.agx1.lldiblk.3xh
llvm.agx1.lldiblk.4xf
llvm.agx1.lldiblk.4xh
llvm.agx1.local.x
llvm.agx1.local.y
llvm.agx1.lock
llvm.agx1.lstiblk.1xf
llvm.agx1.lstiblk.1xh
llvm.agx1.lstiblk.2xf
llvm.agx1.lstiblk.2xh
llvm.agx1.lstiblk.3xf
llvm.agx1.lstiblk.3xh
llvm.agx1.lstiblk.4xf
llvm.agx1.lstiblk.4xh
llvm.agx1.nop
llvm.agx1.nop.dbg
llvm.agx1.pack.prog
llvm.agx1.pack.rne.s32
llvm.agx1.pack.scale.rne.u16
llvm.agx1.pixel.dfdx
llvm.agx1.pixel.dfdy
llvm.agx1.pixel.movmsk
llvm.agx1.pixel.movmsk.if.zero
llvm.agx1.pixel.readOutputRegister
llvm.agx1.pixel.writeOutputRegister
llvm.agx1.read.cluster.number
llvm.agx1.read.coord.x.sample
llvm.agx1.read.coord.y.pixel
llvm.agx1.read.coord.y.sample
llvm.agx1.read.pvcnt
llvm.agx1.read.sg0
llvm.agx1.read.tvcnt
llvm.agx1.release
llvm.agx1.rev
llvm.agx1.sadd.sat
llvm.agx1.savmsk.pixel
llvm.agx1.savmsk.sample
llvm.agx1.shfl
llvm.agx1.simd.barrier
llvm.agx1.sin.g4
llvm.agx1.sin.g5
llvm.agx1.sinc
llvm.agx1.smad.sat
llvm.agx1.smsub.sat
llvm.agx1.smul.sat
llvm.agx1.ssub.sat
llvm.agx1.texture1d
llvm.agx1.texture1d.both.bi.x
llvm.agx1.texture1d.both.tri.x
llvm.agx1.texture1d.grad
llvm.agx1.texture1d.grad.both.bi.x
llvm.agx1.texture1d.grad.both.tri.x
llvm.agx1.texture1d.grad.info
llvm.agx1.texture1d.grad.write
llvm.agx1.texture1d.grad.x
llvm.agx1.texture1d.grad.xy
llvm.agx1.texture1d.grad.xyz
llvm.agx1.texture1d.info
llvm.agx1.texture1d.write
llvm.agx1.texture1d.x
llvm.agx1.texture1d.xy
llvm.agx1.texture1d.xyz
llvm.agx1.texture2d
llvm.agx1.texture2d.both.bi.x
llvm.agx1.texture2d.both.tri.x
llvm.agx1.texture2d.grad
llvm.agx1.texture2d.grad.both.bi.x
llvm.agx1.texture2d.grad.both.tri.x
llvm.agx1.texture2d.grad.info
llvm.agx1.texture2d.grad.write
llvm.agx1.texture2d.grad.x
llvm.agx1.texture2d.grad.xy
llvm.agx1.texture2d.grad.xyz
llvm.agx1.texture2d.info
llvm.agx1.texture2d.write
llvm.agx1.texture2d.x
llvm.agx1.texture2d.xy
llvm.agx1.texture2d.xyz
llvm.agx1.texture3d
llvm.agx1.texture3d.both.bi.x
llvm.agx1.texture3d.both.tri.x
llvm.agx1.texture3d.grad
llvm.agx1.texture3d.grad.both.bi.x
llvm.agx1.texture3d.grad.both.tri.x
llvm.agx1.texture3d.grad.info
llvm.agx1.texture3d.grad.write
llvm.agx1.texture3d.grad.x
llvm.agx1.texture3d.grad.xy
llvm.agx1.texture3d.grad.xyz
llvm.agx1.texture3d.info
llvm.agx1.texture3d.write
llvm.agx1.texture3d.x
llvm.agx1.texture3d.xy
llvm.agx1.texture3d.xyz
llvm.agx1.textureCube
llvm.agx1.textureCube.both.bi.x
llvm.agx1.textureCube.both.tri.x
llvm.agx1.textureCube.grad
llvm.agx1.textureCube.grad.both.bi.x
llvm.agx1.textureCube.grad.both.tri.x
llvm.agx1.textureCube.grad.info
llvm.agx1.textureCube.grad.write
llvm.agx1.textureCube.grad.x
llvm.agx1.textureCube.grad.xy
llvm.agx1.textureCube.grad.xyz
llvm.agx1.textureCube.info
llvm.agx1.textureCube.write
llvm.agx1.textureCube.x
llvm.agx1.textureCube.xy
llvm.agx1.textureCube.xyz
llvm.agx1.tsci
llvm.agx1.uadd.sat
llvm.agx1.umad.sat
llvm.agx1.umsub.sat
llvm.agx1.umul.sat
llvm.agx1.unpack.rtz.s32
llvm.agx1.unpack.rtz.u32
llvm.agx1.unpack.scale.s1616
llvm.agx1.unpack.scale.u1616
llvm.agx1.usub.sat
llvm.agx1.vertex.pos.write
llvm.agx1.vertex.varying.write.i32
llvm.agx1.vertex.write
llvm.agx1.vertex.writef
llvm.agx1.write.sg0
llvm.agx2.backface.triangle
llvm.agx2.batch.num
llvm.agx2.bbccrc
llvm.agx2.bbccrc.noshft
llvm.agx2.bufrblk.1d
llvm.agx2.bufrblk.2d
llvm.agx2.centroid.itr.1xh
llvm.agx2.centroid.itr.2xf
llvm.agx2.centroid.itr.2xh
llvm.agx2.centroid.itr.3xh
llvm.agx2.centroid.itr.4xf
llvm.agx2.centroid.itr.4xh
llvm.agx2.centroid.itrproj.1xh
llvm.agx2.centroid.itrproj.2xf
llvm.agx2.centroid.itrproj.2xh
llvm.agx2.centroid.itrproj.3xh
llvm.agx2.centroid.itrproj.4xf
llvm.agx2.centroid.itrproj.4xh
llvm.agx2.cluster.num
llvm.agx2.colcvgmsk
llvm.agx2.colcvgmsk.coords
llvm.agx2.colcvgmsk.coords.with.offset
llvm.agx2.colcvgmsk.with.offset
llvm.agx2.colcvgmsk.with.prid
llvm.agx2.context.id
llvm.agx2.coverage.mask
llvm.agx2.cppix
llvm.agx2.dispatch.threadgroup.x.size
llvm.agx2.dispatch.threadgroup.y.size
llvm.agx2.dispatch.threadgroup.z.size
llvm.agx2.dstackh
llvm.agx2.dstackl
llvm.agx2.eipnd
llvm.agx2.emitpix
llvm.agx2.exception.return.reg
llvm.agx2.exception.vector.reg
llvm.agx2.exec.state.cache.id
llvm.agx2.f16matmad8x8
llvm.agx2.f32matmad8x8
llvm.agx2.flushdcache
llvm.agx2.flushpbe
llvm.agx2.forced.2x2.valid
llvm.agx2.ft1
llvm.agx2.get.layerid
llvm.agx2.get.stp.counter
llvm.agx2.gmdescpack.1d
llvm.agx2.gmdescpack.2d
llvm.agx2.image.block.depth
llvm.agx2.image.block.pp.samples
llvm.agx2.image.block.xdim
llvm.agx2.imgwblk.1d
llvm.agx2.imgwblk.1d.array
llvm.agx2.imgwblk.1d.array.lod
llvm.agx2.imgwblk.1d.array.lod.rtz
llvm.agx2.imgwblk.1d.array.rtz
llvm.agx2.imgwblk.1d.lod
llvm.agx2.imgwblk.1d.lod.rtz
llvm.agx2.imgwblk.1d.rtz
llvm.agx2.imgwblk.2d
llvm.agx2.imgwblk.2d.array
llvm.agx2.imgwblk.2d.array.lod
llvm.agx2.imgwblk.2d.array.lod.rtz
llvm.agx2.imgwblk.2d.array.rtz
llvm.agx2.imgwblk.2d.lod
llvm.agx2.imgwblk.2d.lod.rtz
llvm.agx2.imgwblk.2d.msaa
llvm.agx2.imgwblk.2d.msaa.array
llvm.agx2.imgwblk.2d.msaa.array.rtz
llvm.agx2.imgwblk.2d.msaa.rtz
llvm.agx2.imgwblk.2d.rtz
llvm.agx2.imgwblk.3d
llvm.agx2.imgwblk.3d.lod
llvm.agx2.imgwblk.3d.lod.rtz
llvm.agx2.imgwblk.3d.rtz
llvm.agx2.imgwblk.coords.1d
llvm.agx2.imgwblk.coords.1d.array
llvm.agx2.imgwblk.coords.1d.array.lod
llvm.agx2.imgwblk.coords.1d.array.lod.rtz
llvm.agx2.imgwblk.coords.1d.array.rtz
llvm.agx2.imgwblk.coords.1d.lod
llvm.agx2.imgwblk.coords.1d.lod.rtz
llvm.agx2.imgwblk.coords.1d.rtz
llvm.agx2.imgwblk.coords.2d
llvm.agx2.imgwblk.coords.2d.array
llvm.agx2.imgwblk.coords.2d.array.lod
llvm.agx2.imgwblk.coords.2d.array.lod.rtz
llvm.agx2.imgwblk.coords.2d.array.rtz
llvm.agx2.imgwblk.coords.2d.lod
llvm.agx2.imgwblk.coords.2d.lod.rtz
llvm.agx2.imgwblk.coords.2d.msaa
llvm.agx2.imgwblk.coords.2d.msaa.array
llvm.agx2.imgwblk.coords.2d.msaa.array.rtz
llvm.agx2.imgwblk.coords.2d.msaa.rtz
llvm.agx2.imgwblk.coords.2d.rtz
llvm.agx2.imgwblk.coords.3d
llvm.agx2.imgwblk.coords.3d.lod
llvm.agx2.imgwblk.coords.3d.lod.rtz
llvm.agx2.imgwblk.coords.3d.rtz
llvm.agx2.imgwblk.coords.cubestf
llvm.agx2.imgwblk.coords.cubestf.array
llvm.agx2.imgwblk.coords.cubestf.array.lod
llvm.agx2.imgwblk.coords.cubestf.array.lod.rtz
llvm.agx2.imgwblk.coords.cubestf.array.rtz
llvm.agx2.imgwblk.coords.cubestf.lod
llvm.agx2.imgwblk.coords.cubestf.lod.rtz
llvm.agx2.imgwblk.coords.cubestf.rtz
llvm.agx2.imgwblk.cubestf
llvm.agx2.imgwblk.cubestf.array
llvm.agx2.imgwblk.cubestf.array.lod
llvm.agx2.imgwblk.cubestf.array.lod.rtz
llvm.agx2.imgwblk.cubestf.array.rtz
llvm.agx2.imgwblk.cubestf.lod
llvm.agx2.imgwblk.cubestf.lod.rtz
llvm.agx2.imgwblk.cubestf.rtz
llvm.agx2.imgwblk.subset.1d
llvm.agx2.imgwblk.subset.1d.array
llvm.agx2.imgwblk.subset.1d.array.lod
llvm.agx2.imgwblk.subset.1d.array.lod.rtz
llvm.agx2.imgwblk.subset.1d.array.rtz
llvm.agx2.imgwblk.subset.1d.lod
llvm.agx2.imgwblk.subset.1d.lod.rtz
llvm.agx2.imgwblk.subset.1d.rtz
llvm.agx2.imgwblk.subset.2d
llvm.agx2.imgwblk.subset.2d.array
llvm.agx2.imgwblk.subset.2d.array.lod
llvm.agx2.imgwblk.subset.2d.array.lod.rtz
llvm.agx2.imgwblk.subset.2d.array.rtz
llvm.agx2.imgwblk.subset.2d.lod
llvm.agx2.imgwblk.subset.2d.lod.rtz
llvm.agx2.imgwblk.subset.2d.msaa
llvm.agx2.imgwblk.subset.2d.msaa.array
llvm.agx2.imgwblk.subset.2d.msaa.array.rtz
llvm.agx2.imgwblk.subset.2d.msaa.rtz
llvm.agx2.imgwblk.subset.2d.rtz
llvm.agx2.imgwblk.subset.3d
llvm.agx2.imgwblk.subset.3d.lod
llvm.agx2.imgwblk.subset.3d.lod.rtz
llvm.agx2.imgwblk.subset.3d.rtz
llvm.agx2.imgwblk.subset.coords.1d
llvm.agx2.imgwblk.subset.coords.1d.array
llvm.agx2.imgwblk.subset.coords.1d.array.lod
llvm.agx2.imgwblk.subset.coords.1d.array.lod.rtz
llvm.agx2.imgwblk.subset.coords.1d.array.rtz
llvm.agx2.imgwblk.subset.coords.1d.lod
llvm.agx2.imgwblk.subset.coords.1d.lod.rtz
llvm.agx2.imgwblk.subset.coords.1d.rtz
llvm.agx2.imgwblk.subset.coords.2d
llvm.agx2.imgwblk.subset.coords.2d.array
llvm.agx2.imgwblk.subset.coords.2d.array.lod
llvm.agx2.imgwblk.subset.coords.2d.array.lod.rtz
llvm.agx2.imgwblk.subset.coords.2d.array.rtz
llvm.agx2.imgwblk.subset.coords.2d.lod
llvm.agx2.imgwblk.subset.coords.2d.lod.rtz
llvm.agx2.imgwblk.subset.coords.2d.msaa
llvm.agx2.imgwblk.subset.coords.2d.msaa.array
llvm.agx2.imgwblk.subset.coords.2d.msaa.array.rtz
llvm.agx2.imgwblk.subset.coords.2d.msaa.rtz
llvm.agx2.imgwblk.subset.coords.2d.rtz
llvm.agx2.imgwblk.subset.coords.3d
llvm.agx2.imgwblk.subset.coords.3d.lod
llvm.agx2.imgwblk.subset.coords.3d.lod.rtz
llvm.agx2.imgwblk.subset.coords.3d.rtz
llvm.agx2.imgwblk.subset.coords.cubestf
llvm.agx2.imgwblk.subset.coords.cubestf.array
llvm.agx2.imgwblk.subset.coords.cubestf.array.lod
llvm.agx2.imgwblk.subset.coords.cubestf.array.lod.rtz
llvm.agx2.imgwblk.subset.coords.cubestf.array.rtz
llvm.agx2.imgwblk.subset.coords.cubestf.lod
llvm.agx2.imgwblk.subset.coords.cubestf.lod.rtz
llvm.agx2.imgwblk.subset.coords.cubestf.rtz
llvm.agx2.imgwblk.subset.cubestf
llvm.agx2.imgwblk.subset.cubestf.array
llvm.agx2.imgwblk.subset.cubestf.array.lod
llvm.agx2.imgwblk.subset.cubestf.array.lod.rtz
llvm.agx2.imgwblk.subset.cubestf.array.rtz
llvm.agx2.imgwblk.subset.cubestf.lod
llvm.agx2.imgwblk.subset.cubestf.lod.rtz
llvm.agx2.imgwblk.subset.cubestf.rtz
llvm.agx2.instance.number
llvm.agx2.instance.valid
llvm.agx2.istackh
llvm.agx2.istackl
llvm.agx2.itr.centroid.1xf
llvm.agx2.itr.centroid.1xh
llvm.agx2.itr.centroid.2xf
llvm.agx2.itr.centroid.2xh
llvm.agx2.itr.centroid.3xf
llvm.agx2.itr.centroid.3xh
llvm.agx2.itr.centroid.4xf
llvm.agx2.itr.centroid.4xh
llvm.agx2.itr.pixel.1xf
llvm.agx2.itr.pixel.1xh
llvm.agx2.itr.pixel.2xf
llvm.agx2.itr.pixel.2xh
llvm.agx2.itr.pixel.3xf
llvm.agx2.itr.pixel.3xh
llvm.agx2.itr.pixel.4xf
llvm.agx2.itr.pixel.4xh
llvm.agx2.itr.sample.1xf
llvm.agx2.itr.sample.1xh
llvm.agx2.itr.sample.2xf
llvm.agx2.itr.sample.2xh
llvm.agx2.itr.sample.3xf
llvm.agx2.itr.sample.3xh
llvm.agx2.itr.sample.4xf
llvm.agx2.itr.sample.4xh
llvm.agx2.itr.tmp.1xf
llvm.agx2.itr.tmp.2xf
llvm.agx2.itr.tmp.3xf
llvm.agx2.itr.tmp.4xf
llvm.agx2.itrproj.centroid.1xf
llvm.agx2.itrproj.centroid.1xh
llvm.agx2.itrproj.centroid.2xf
llvm.agx2.itrproj.centroid.2xh
llvm.agx2.itrproj.centroid.3xf
llvm.agx2.itrproj.centroid.3xh
llvm.agx2.itrproj.centroid.4xf
llvm.agx2.itrproj.centroid.4xh
llvm.agx2.itrproj.pixel.1xf
llvm.agx2.itrproj.pixel.1xh
llvm.agx2.itrproj.pixel.2xf
llvm.agx2.itrproj.pixel.2xh
llvm.agx2.itrproj.pixel.3xf
llvm.agx2.itrproj.pixel.3xh
llvm.agx2.itrproj.pixel.4xf
llvm.agx2.itrproj.pixel.4xh
llvm.agx2.itrproj.sample.1xf
llvm.agx2.itrproj.sample.1xh
llvm.agx2.itrproj.sample.2xf
llvm.agx2.itrproj.sample.2xh
llvm.agx2.itrproj.sample.3xf
llvm.agx2.itrproj.sample.3xh
llvm.agx2.itrproj.sample.4xf
llvm.agx2.itrproj.sample.4xh
llvm.agx2.itrproj.tmp.1xf
llvm.agx2.itrproj.tmp.2xf
llvm.agx2.itrproj.tmp.3xf
llvm.agx2.itrproj.tmp.4xf
llvm.agx2.linear.id
llvm.agx2.lldiblk.1xf
llvm.agx2.lldiblk.1xh
llvm.agx2.lldiblk.2xf
llvm.agx2.lldiblk.2xh
llvm.agx2.lldiblk.3xf
llvm.agx2.lldiblk.3xh
llvm.agx2.lldiblk.4xf
llvm.agx2.lldiblk.4xh
llvm.agx2.lmdescpack.1d
llvm.agx2.lmdescpack.2d
llvm.agx2.load.1xsz16.f16
llvm.agx2.load.1xsz16.f16.cachectl
llvm.agx2.load.1xsz16.i16
llvm.agx2.load.1xsz16.i16.cachectl
llvm.agx2.load.1xsz32.f32
llvm.agx2.load.1xsz32.f32.cachectl
llvm.agx2.load.1xsz32.i32
llvm.agx2.load.1xsz32.i32.cachectl
llvm.agx2.load.2xsz16.f16
llvm.agx2.load.2xsz16.f16.cachectl
llvm.agx2.load.2xsz16.i16
llvm.agx2.load.2xsz16.i16.cachectl
llvm.agx2.load.2xsz32.f32
llvm.agx2.load.2xsz32.f32.cachectl
llvm.agx2.load.2xsz32.i32
llvm.agx2.load.2xsz32.i32.cachectl
llvm.agx2.load.3xsz16.f16
llvm.agx2.load.3xsz16.f16.cachectl
llvm.agx2.load.3xsz16.i16
llvm.agx2.load.3xsz16.i16.cachectl
llvm.agx2.load.3xsz32.f32
llvm.agx2.load.3xsz32.f32.cachectl
llvm.agx2.load.3xsz32.i32
llvm.agx2.load.3xsz32.i32.cachectl
llvm.agx2.load.4xsz16.f16
llvm.agx2.load.4xsz16.f16.cachectl
llvm.agx2.load.4xsz16.i16
llvm.agx2.load.4xsz16.i16.cachectl
llvm.agx2.load.4xsz32.f32
llvm.agx2.load.4xsz32.f32.cachectl
llvm.agx2.load.4xsz32.i32
llvm.agx2.load.4xsz32.i32.cachectl
llvm.agx2.local.x
llvm.agx2.local.y
llvm.agx2.local.z
llvm.agx2.lstiblk.1xf
llvm.agx2.lstiblk.1xh
llvm.agx2.lstiblk.2xf
llvm.agx2.lstiblk.2xh
llvm.agx2.lstiblk.3xf
llvm.agx2.lstiblk.3xh
llvm.agx2.lstiblk.4xf
llvm.agx2.lstiblk.4xh
llvm.agx2.map.sg
llvm.agx2.map.tg
llvm.agx2.msaa.mode
llvm.agx2.msg
llvm.agx2.nop
llvm.agx2.pack.1xsz16.f16
llvm.agx2.pack.1xsz16.i16
llvm.agx2.pack.1xsz32.f32
llvm.agx2.pack.1xsz32.i32
llvm.agx2.pack.2xsz16.f16
llvm.agx2.pack.2xsz16.i16
llvm.agx2.pack.2xsz32.f32
llvm.agx2.pack.2xsz32.i32
llvm.agx2.pack.3xsz16.f16
llvm.agx2.pack.3xsz16.i16
llvm.agx2.pack.3xsz32.f32
llvm.agx2.pack.3xsz32.i32
llvm.agx2.pack.4xsz16.f16
llvm.agx2.pack.4xsz16.i16
llvm.agx2.pack.4xsz32.f32
llvm.agx2.pack.4xsz32.i32
llvm.agx2.pack.rne.s32
llvm.agx2.pass.number
llvm.agx2.pixel.coord.x
llvm.agx2.pixel.coord.y
llvm.agx2.pixel.depthf
llvm.agx2.pixel.depthf.with.smp
llvm.agx2.pixel.dfdx
llvm.agx2.pixel.dfdy
llvm.agx2.pixel.feedback.depth
llvm.agx2.pixel.feedback.depth.stencil
llvm.agx2.pixel.feedback.stencil
llvm.agx2.pixel.itr.1xh
llvm.agx2.pixel.itr.2xh
llvm.agx2.pixel.itr.3xh
llvm.agx2.pixel.itr.4xh
llvm.agx2.pixel.itrproj.1xh
llvm.agx2.pixel.itrproj.2xh
llvm.agx2.pixel.itrproj.3xh
llvm.agx2.pixel.itrproj.4xh
llvm.agx2.pixel.movmsk.with.smp
llvm.agx2.pixel.write.coords.f16
llvm.agx2.pixel.write.coords.f32
llvm.agx2.pixel.write.coords.i16
llvm.agx2.pixel.write.coords.i32
llvm.agx2.pixel.write.f16
llvm.agx2.pixel.write.f32
llvm.agx2.pixel.write.i16
llvm.agx2.pixel.write.i32
llvm.agx2.pixrel
llvm.agx2.pixwait
llvm.agx2.pow.f16
llvm.agx2.pow.f32
llvm.agx2.powrd
llvm.agx2.program.type
llvm.agx2.qrefl
llvm.agx2.quad.ballot.u.32
llvm.agx2.quad.broadcast.u.i16
llvm.agx2.quad.broadcast.u.i32
llvm.agx2.quad.element
llvm.agx2.quad.reduce.f.Add
llvm.agx2.quad.reduce.f.Max
llvm.agx2.quad.reduce.f.Min
llvm.agx2.quad.reduce.f.Mul
llvm.agx2.quad.reduce.f16.Add
llvm.agx2.quad.reduce.f16.Max
llvm.agx2.quad.reduce.f16.Min
llvm.agx2.quad.reduce.f16.Mul
llvm.agx2.quad.reduce.i.Add
llvm.agx2.quad.reduce.i.And
llvm.agx2.quad.reduce.i.Max
llvm.agx2.quad.reduce.i.Min
llvm.agx2.quad.reduce.i.Or
llvm.agx2.quad.reduce.i.Xor
llvm.agx2.quad.reduce.u.Max
llvm.agx2.quad.reduce.u.Min
llvm.agx2.quad.rotup.u.i16
llvm.agx2.quad.rotup.u.i32
llvm.agx2.quad.shuffle.down.u.i16
llvm.agx2.quad.shuffle.down.u.i32
llvm.agx2.quad.shuffle.up.u.i16
llvm.agx2.quad.shuffle.up.u.i32
llvm.agx2.quad.xor.u.i16
llvm.agx2.quad.xor.u.i32
llvm.agx2.rcp
llvm.agx2.read.coord.x.pixel
llvm.agx2.read.coord.x.sample
llvm.agx2.read.coord.y.pixel
llvm.agx2.read.coord.y.sample
llvm.agx2.read.first.lane
llvm.agx2.read.sample.number
llvm.agx2.rev
llvm.agx2.rog.texture.fence
llvm.agx2.rsqrt
llvm.agx2.sadd.sat
llvm.agx2.sample.itr.1xh
llvm.agx2.sample.itr.2xf
llvm.agx2.sample.itr.2xh
llvm.agx2.sample.itr.3xh
llvm.agx2.sample.itr.4xf
llvm.agx2.sample.itr.4xh
llvm.agx2.sample.itrproj.1xh
llvm.agx2.sample.itrproj.2xf
llvm.agx2.sample.itrproj.2xh
llvm.agx2.sample.itrproj.3xh
llvm.agx2.sample.itrproj.4xf
llvm.agx2.sample.itrproj.4xh
llvm.agx2.sample.mask.in
llvm.agx2.sample.read.1xf16
llvm.agx2.sample.read.1xf32
llvm.agx2.sample.read.1xi16
llvm.agx2.sample.read.1xi32
llvm.agx2.sample.read.2xf16
llvm.agx2.sample.read.2xf32
llvm.agx2.sample.read.2xi16
llvm.agx2.sample.read.2xi32
llvm.agx2.sample.read.3xf16
llvm.agx2.sample.read.3xf32
llvm.agx2.sample.read.3xi16
llvm.agx2.sample.read.3xi32
llvm.agx2.sample.read.4xf16
llvm.agx2.sample.read.4xf32
llvm.agx2.sample.read.4xi16
llvm.agx2.sample.read.4xi32
llvm.agx2.sample.read.coords.1xf16
llvm.agx2.sample.read.coords.1xf32
llvm.agx2.sample.read.coords.1xi16
llvm.agx2.sample.read.coords.1xi32
llvm.agx2.sample.read.coords.2xf16
llvm.agx2.sample.read.coords.2xf32
llvm.agx2.sample.read.coords.2xi16
llvm.agx2.sample.read.coords.2xi32
llvm.agx2.sample.read.coords.3xf16
llvm.agx2.sample.read.coords.3xf32
llvm.agx2.sample.read.coords.3xi16
llvm.agx2.sample.read.coords.3xi32
llvm.agx2.sample.read.coords.4xf16
llvm.agx2.sample.read.coords.4xf32
llvm.agx2.sample.read.coords.4xi16
llvm.agx2.sample.read.coords.4xi32
llvm.agx2.shfl
llvm.agx2.simd.ballot.u.32
llvm.agx2.simd.bcast.u.i16
llvm.agx2.simd.bcast.u.i32
llvm.agx2.simd.bfly.u.i16
llvm.agx2.simd.bfly.u.i32
llvm.agx2.simd.broadcast.u.i16
llvm.agx2.simd.broadcast.u.i32
llvm.agx2.simd.group
llvm.agx2.simd.reduce.f.Add
llvm.agx2.simd.reduce.f.Max
llvm.agx2.simd.reduce.f.Min
llvm.agx2.simd.reduce.f.Mul
llvm.agx2.simd.reduce.f16.Add
llvm.agx2.simd.reduce.f16.Max
llvm.agx2.simd.reduce.f16.Min
llvm.agx2.simd.reduce.f16.Mul
llvm.agx2.simd.reduce.i.Add
llvm.agx2.simd.reduce.i.And
llvm.agx2.simd.reduce.i.Max
llvm.agx2.simd.reduce.i.Min
llvm.agx2.simd.reduce.i.Or
llvm.agx2.simd.reduce.i.Xor
llvm.agx2.simd.reduce.u.Max
llvm.agx2.simd.reduce.u.Min
llvm.agx2.simd.rotup.u.i16
llvm.agx2.simd.rotup.u.i32
llvm.agx2.simd.shff.dn.f
llvm.agx2.simd.shff.dn.i
llvm.agx2.simd.shff.up.f
llvm.agx2.simd.shff.up.i
llvm.agx2.simd.shift.down.u.i16
llvm.agx2.simd.shift.down.u.i32
llvm.agx2.simd.shift.up.u.i16
llvm.agx2.simd.shift.up.u.i32
llvm.agx2.simd.shuffle.down.u.i16
llvm.agx2.simd.shuffle.down.u.i32
llvm.agx2.simd.shuffle.u.i16
llvm.agx2.simd.shuffle.u.i32
llvm.agx2.simd.shuffle.up.u.i16
llvm.agx2.simd.shuffle.up.u.i32
llvm.agx2.simd.xor.u.i16
llvm.agx2.simd.xor.u.i32
llvm.agx2.simdgroup.barrier.with.scope
llvm.agx2.sin
llvm.agx2.sinc
llvm.agx2.smad.sat
llvm.agx2.smsub.sat
llvm.agx2.smul.sat
llvm.agx2.sqrt.step
llvm.agx2.ssub.sat
llvm.agx2.store.1xsz16.f16
llvm.agx2.store.1xsz16.f16.cachectl
llvm.agx2.store.1xsz16.i16
llvm.agx2.store.1xsz16.i16.cachectl
llvm.agx2.store.1xsz32.f32
llvm.agx2.store.1xsz32.f32.cachectl
llvm.agx2.store.1xsz32.i32
llvm.agx2.store.1xsz32.i32.cachectl
llvm.agx2.store.2xsz16.f16
llvm.agx2.store.2xsz16.f16.cachectl
llvm.agx2.store.2xsz16.i16
llvm.agx2.store.2xsz16.i16.cachectl
llvm.agx2.store.2xsz32.f32
llvm.agx2.store.2xsz32.f32.cachectl
llvm.agx2.store.2xsz32.i32
llvm.agx2.store.2xsz32.i32.cachectl
llvm.agx2.store.3xsz16.f16
llvm.agx2.store.3xsz16.f16.cachectl
llvm.agx2.store.3xsz16.i16
llvm.agx2.store.3xsz16.i16.cachectl
llvm.agx2.store.3xsz32.f32
llvm.agx2.store.3xsz32.f32.cachectl
llvm.agx2.store.3xsz32.i32
llvm.agx2.store.3xsz32.i32.cachectl
llvm.agx2.store.4xsz16.f16
llvm.agx2.store.4xsz16.f16.cachectl
llvm.agx2.store.4xsz16.i16
llvm.agx2.store.4xsz16.i16.cachectl
llvm.agx2.store.4xsz32.f32
llvm.agx2.store.4xsz32.f32.cachectl
llvm.agx2.store.4xsz32.i32
llvm.agx2.store.4xsz32.i32.cachectl
llvm.agx2.texture.memory.fence
llvm.agx2.thread.position.in.grid.x
llvm.agx2.thread.position.in.grid.y
llvm.agx2.thread.position.in.grid.z
llvm.agx2.threadgroup.id
llvm.agx2.threadgroup.x
llvm.agx2.threadgroup.x.size
llvm.agx2.threadgroup.y
llvm.agx2.threadgroup.y.size
llvm.agx2.threadgroup.z
llvm.agx2.threadgroup.z.size
llvm.agx2.tile.id
llvm.agx2.total.thread.valid.count
llvm.agx2.tpp.visibility.pass
llvm.agx2.tsci
llvm.agx2.uadd.sat
llvm.agx2.umad.sat
llvm.agx2.umsub.sat
llvm.agx2.umul.sat
llvm.agx2.unmap.sg
llvm.agx2.unmap.tg
llvm.agx2.unpack.1xsz16.f16
llvm.agx2.unpack.1xsz16.i16
llvm.agx2.unpack.1xsz32.f32
llvm.agx2.unpack.1xsz32.i32
llvm.agx2.unpack.2xsz16.f16
llvm.agx2.unpack.2xsz16.i16
llvm.agx2.unpack.2xsz32.f32
llvm.agx2.unpack.2xsz32.i32
llvm.agx2.unpack.3xsz16.f16
llvm.agx2.unpack.3xsz16.i16
llvm.agx2.unpack.3xsz32.f32
llvm.agx2.unpack.3xsz32.i32
llvm.agx2.unpack.4xsz16.f16
llvm.agx2.unpack.4xsz16.i16
llvm.agx2.unpack.4xsz32.f32
llvm.agx2.unpack.4xsz32.i32
llvm.agx2.update.hw.coverage.mask.coords.i16
llvm.agx2.update.hw.coverage.mask.i16
llvm.agx2.usub.sat
llvm.agx2.util.data.hi
llvm.agx2.util.data.lo
llvm.agx2.util.func
llvm.agx2.vertex.amp.id.count
llvm.agx2.vertex.clip.write
llvm.agx2.vertex.layerid.write.i32
llvm.agx2.vertex.pos.amplified.write
llvm.agx2.vertex.ptsize.write
llvm.agx2.vertex.varying.amplified.struct.write.f32
llvm.agx2.vertex.varying.amplified.struct.write.i32
llvm.agx2.vertex.varying.amplified.write.i32
llvm.agx2.vertex.varying.struct.write.f32
llvm.agx2.vertex.varying.struct.write.i32
llvm.agx2.vertex.varying.write.f32
llvm.agx2.vertex.viewportid.write.i32
llvm.agx2.vertex.write
llvm.agx2.vertex.writef
llvm.agx2.workgroup.id
vararg
isVoid
Metadata
bf16
f128
ppcf128
x86mmx
value isn't a global
global isn't in section "llvm.ptrauth"
global doesn't have an initializer
global isn't a struct
global doesn't have type '{ i8*, i32, i64, i64 }'
key isn't a constant integer
address discriminator isn't a constant integer or expr
discriminator isn't a constant integer
<unknown>:
 (function: 
Print module to stderr
print-module
Print Module IR
Print function to stderr
print-function
Print Function IR
Print BB to stderr
print-bb
Print BasicBlock IR
switch
indirectbr
invoke
resume
unreachable
cleanupret
catchret
catchpad
catchswitch
fmul
udiv
sdiv
fdiv
urem
srem
frem
alloca
load
cmpxchg
atomicrmw
getelementptr
trunc
zext
sext
fptrunc
fpext
fptoui
fptosi
uitofp
sitofp
inttoptr
ptrtoint
bitcast
addrspacecast
icmp
fcmp
select
call
lshr
ashr
va_arg
extractelement
insertelement
shufflevector
extractvalue
insertvalue
landingpad
cleanuppad
<Invalid operator> 
branch_weights
both values to select must have same type
select values cannot have token type
vector select condition element type must be i1
selected values for vector select must be vectors
vector select requires selected vectors to have the same vector length as select condition
select condition must be i1 or <n x i1>
xchg
nand
umax
umin
fadd
fsub
<invalid operation>
unknown
mallocsize
malloc
malloccall
free
tbaa
prof
fpmath
range
tbaa.struct
invariant.load
alias.scope
noalias
nontemporal
llvm.mem.parallel_loop_access
nonnull
dereferenceable
dereferenceable_or_null
make.implicit
unpredictable
invariant.group
align
llvm.loop
type
section_prefix
absolute_symbol
associated
irr_loop
deopt
funclet
gc-transition
singlethread
error
warning
remark
note
debug-pass
Print PassManager debugging information
Disabled
disable debug output
Arguments
print pass arguments to pass to 'opt'
Structure
print pass structure before run()
Executions
print pass name before it is executed
Details
print pass details when it is executed
print-before
Print IR before specified passes
print-after
Print IR after specified passes
print-before-all
Print IR before each pass
print-after-all
Print IR after each pass
print-module-scope
When printing IR for print-[before|after]{-all} always print a module IR
filter-print-funcs
function names
Only print IR for functions whose name match this for all print-[before|after][-all] options
size-info
IRSizeChange
Pass
: IR instruction count changed from 
IRInstrsBefore
 to 
IRInstrsAfter
; Delta: 
DeltaInstrCount
Releasing pass '
Running pass '
 on module '
 on 
function
basic block
value
Pass '
' is not initialized.
Verify if there is a pass dependency cycle.
Required Passes:
Error: Required pass not found! Possible causes:
- Pass misconfiguration (e.g.: missing macros)
- Corruption of the global PassRegistry
*** IR Dump Before 
) ***
*** IR Dump After 
Pass Arguments: 
 -- '
' is not preserving '
 -*- '
' is the last user of following pass instances.
 Free these instances
Executing Pass '
Made Modification '
 Freeing Pass '
' on BasicBlock '
'...
' on Function '
' on Module '
' on Region '
' on Loop '
' on Call Graph Nodes '
Required
Preserved
Used
 Analyses:
 Uninitialized Pass
FunctionPass Manager
time-passes
Time each pass, printing elapsed time for each on exit
Cannot find option named '
Module Pass Manager
ModulePass Manager
pass
... Pass execution timing report ...
BasicBlock Pass Manager
BasicBlockPass Manager
Function Pass Manager
Error reading bitcode file: 
cl::location(x) specified more than once!
function_section_prefix
__unnamed_
llvm.module.flags
Dwarf Version
CodeView
PIC Level
PIE Level
ProfileSummary
RtLibUseGOT
SDK Version
Target Variant SDK Version
 node
External
 (has loop)
opt-bisect-limit
Maximum optimization to perform
module (
function (
basic block (
) in function (
region
loop
SCC (
<<null function>>
NOT 
BISECT: 
running pass 
Unnamed pass: implement Pass::getPassName()
Pass::print not implemented for pass: '
Two passes with the same argument (-
) attempted to be registered!
SmallVector capacity overflow during allocation
Invalidating all non-preserved analyses for: 
Invalidating analysis: 
Running analysis: 
safepoint-ir-verifier-print-only
safepoint verifier
Verifying gc pointers in function: 
No illegal uses found by SafepointIRVerifier in: 
Illegal use of unrelocated value found!
Def: 
Use: 
Safepoint IR Verifier
verify-safepoint-ir
InstrProf
SampleProfile
DetailedSummary
ProfileFormat
TotalCount
MaxCount
MaxInternalCount
MaxFunctionCount
NumCounts
NumFunctions
statepoint-id
statepoint-num-patch-bytes
non-global-value-max-name-size
Maximum size for the name of non-global values.
Base nodes must have at least two operands
Access tag nodes must have the number of operands that is a multiple of 3!
Struct tag nodes must have an odd number of operands!
Type size nodes must be constants!
Struct tag nodes have a string as their first operand
Incorrect field entry in struct type node!
Offset entries must be constants!
Bitwidth between the offsets and struct type entries must match
Offsets must be increasing!
Member size entries must be constants!
Could not find TBAA parent in struct type node
This instruction shall not have a TBAA access tag!
Old-style TBAA is no longer allowed, use struct-path TBAA instead
Access tag metadata must have either 4 or 5 operands
Struct tag metadata must have either 3 or 4 operands
Access size field must be a constant
Immutability tag on struct tag metadata must be a constant
Immutability part of the struct tag metadata must be either 0 or 1
Malformed struct tag metadata: base and access-type should be non-null and point to Metadata nodes
Access type node must be a valid scalar type
Offset must be constant integer
Cycle detected in struct path
Offset not zero at the point of scalar access
Access bit-width not the same as description bit-width
Did not see access type in access path!
Broken module found, compilation aborted!
Broken function found, compilation aborted!
Basic Block in function '
' does not have terminator!
Function context does not match Module context!
Functions may not have common linkage
# formal arguments must match # of arguments for function type!
Functions cannot return aggregate values!
Invalid struct return type!
Attribute after last parameter!
Attribute 'builtin' can only be applied to a callsite.
Calling convention requires void return type
Calling convention does not allow sret
Calling convention does not support varargs or perfect forwarding!
llvm.
Argument value does not match function argument type!
Function arguments must have first-class types!
Function takes metadata but isn't an intrinsic
Function takes token but isn't an intrinsic
Functions returns a token but isn't an intrinsic
Referencing personality function in another module!
unmaterialized function cannot have metadata
function declaration may not have a !dbg attachment
function declaration may not have a !prof attachment
Function declaration shouldn't have a personality routine
llvm intrinsics cannot be defined!
Entry block to function must not have predecessors!
blockaddress may not be used with the entry block!
function must have a single !dbg attachment
function !dbg attachment must be a subprogram
DISubprogram attached to more than one function
function must have a single !prof attachment
Invalid user of intrinsic instruction!
!dbg attachment points at wrong subprogram for function
Global is external, but doesn't have external or weak linkage!
huge alignment values are unsupported
Only global variables can have appending linkage!
Only global arrays can have appending linkage!
Declaration may not be in a Comdat!
GlobalValue with DLLImport Storage is dso_local!
Global is marked as dllimport, but not external
GlobalValue with private or internal linkage must be dso_local!
GlobalValue with non default visibility must be dso_local!
Global is referenced by parentless instruction!
Global is referenced in a different module!
Global is used by function in a different module
; ModuleID = '
Attributes 'byval', 'inalloca', 'nest', 'sret', 'nocapture', 'returned', 'swiftself', and 'swifterror' do not apply to return values!
Attribute '
' does not apply to function returns
More than one parameter has attribute nest!
More than one parameter has attribute returned!
Incompatible argument and return types for 'returned' attribute
Cannot have multiple 'sret' parameters!
Attribute 'sret' is not on first or second parameter!
Cannot have multiple 'swiftself' parameters!
Cannot have multiple 'swifterror' parameters!
inalloca isn't on the last parameter!
Attributes 'readnone and readonly' are incompatible!
Attributes 'readnone and writeonly' are incompatible!
Attributes 'readonly and writeonly' are incompatible!
Attributes 'readnone and inaccessiblemem_or_argmemonly' are incompatible!
Attributes 'readnone and inaccessiblememonly' are incompatible!
Attributes 'noinline and alwaysinline' are incompatible!
Attribute 'optnone' requires 'noinline'!
Attributes 'optsize and optnone' are incompatible!
Attributes 'minsize and optnone' are incompatible!
Attribute 'jumptable' requires 'unnamed_addr'
element size
number of elements
Attributes 'byval', 'inalloca', 'inreg', 'nest', and 'sret' are incompatible!
Attributes 'inalloca and readonly' are incompatible!
Attributes 'sret and returned' are incompatible!
Attributes 'zeroext and signext' are incompatible!
Attribute 'byval' type does not match parameter!
Wrong types for attribute: 
Attributes 'byval' and 'inalloca' do not support unsized types!
Attribute 'swifterror' only applies to parameters with pointer to pointer type!
Attribute 'byval' only applies to parameters with pointer type!
Attribute 'swifterror' only applies to parameters with pointer type!
' only applies to functions!
' does not apply to functions!
'allocsize' 
 argument is out of bounds
 argument must refer to an integer parameter
swifterror value can only be loaded and stored from, or as a swifterror argument!
swifterror value should be the second operand when used by stores
swifterror value when used in a callsite should be marked with swifterror attribute
!prof annotations should have no less than 2 operands
first operand should not be null
expected string with name of the !prof annotation
function_entry_count
synthetic_function_entry_count
first operand should be 'function_entry_count' or 'synthetic_function_entry_count'
second operand should not be null
expected integer argument to function_entry_count
Invalid operand for global metadata!
Expected no forward declarations!
All nodes should be resolved!
location requires a valid scope
inlined-at should be a location
scope points into the type hierarchy
invalid expression
missing variable
fragment is larger than or outside of variable
fragment covers entire variable
invalid tag
Count must either be a signed constant or a DIVariable
invalid subrange count
invalid pointer to member type
invalid scope
invalid base type
DWARF address space only applies to pointer or reference types
invalid file
invalid composite elements
invalid vtable holder
invalid reference flags
invalid vector, expected one element of type subrange
class/union requires a filename
discriminator can only appear on variant part
invalid template params
invalid template parameter
invalid subroutine type ref
invalid checksum kind
invalid checksum length
invalid checksum
compile units must be distinct
invalid filename
invalid emission kind
invalid enum list
invalid enum type
invalid retained type list
invalid retained type
invalid global variable list
invalid global variable ref
invalid imported entity list
invalid imported entity ref
invalid macro list
invalid macro ref
line specified with no file
invalid subroutine type
invalid containing type
invalid subprogram declaration
invalid retained nodes list
invalid retained nodes, expected DILocalVariable or DILabel
subprogram definitions must be distinct
subprogram definitions must have a compile unit
invalid unit type
subprogram declarations must not have a compile unit
invalid thrown types list
invalid thrown type
DIFlagAllCallsDescribed must be attached to a definition
cannot have column info without line info
invalid local scope
invalid scope ref
anonymous module
invalid type ref
missing global variable name
missing global variable type
invalid static data member declaration
local variable requires a valid scope
label requires a valid scope
invalid scope for imported entity
invalid imported entity
invalid macinfo type
anonymous macro
Expected valid value
Unexpected metadata round-trip through values
function-local metadata used outside a function
function-local metadata not in basic block
function-local metadata used in wrong function
Basic Block does not have terminator!
PHI nodes must have at least one entry.  If the block is dead, the PHI should be removed!
PHINode should have one entry for each predecessor of its parent basic block!
PHI node has multiple entries for the same basic block with different incoming values!
PHI node entries do not match predecessors!
Instruction has bogus parent pointer!
Operand is null
Found return instr that returns non-void in Function of void return type!
Function return type does not match operand type of return inst!
Terminator found in the middle of a basic block!
Instruction not embedded in basic block!
Only PHI nodes may reference their own value!
Instruction has a name, but provides a void value!
Instruction returns a non-scalar type!
Invalid use of metadata!
Instruction referencing instruction not embedded in a basic block!
Use of instruction is not an instruction!
Instruction has null operand!
Instruction operands must be first-class values!
Cannot take the address of an intrinsic!
Cannot invoke an intrinsic other than donothing, patchpoint, statepoint, coro_resume or coro_destroy
Referencing function in another module!
Referring to a basic block in another function!
Referring to an argument in another function!
Referencing global in another module!
Cannot take the address of an inline asm!
fpmath requires a floating point result!
fpmath takes one operand!
fpmath accuracy must have float type
fpmath accuracy not a positive number!
invalid fpmath accuracy!
Ranges are only for loads, calls and invokes!
nonnull applies only to pointer types
nonnull applies only to load instructions, use attributes for calls or invokes
align applies only to pointer types
align applies only to load instructions, use attributes for calls or invokes
align takes one operand!
align metadata value must be an i64!
align metadata value must be a power of 2!
alignment is larger that implementation defined limit
invalid !dbg metadata attachment
Instruction does not dominate all uses!
Invalid bitcast
inttoptr not supported for non-integral pointers
ptrtoint not supported for non-integral pointers
Unfinished range!
It should have at least one range!
The lower limit must be an integer!
The upper limit must be an integer!
Range types must match instruction type!
Range must not be empty!
Intervals are overlapping
Intervals are not in order
Intervals are contiguous
dereferenceable, dereferenceable_or_null apply only to pointer types
dereferenceable, dereferenceable_or_null apply only to load instructions, use attributes for calls or invokes
dereferenceable, dereferenceable_or_null take one operand!
dereferenceable, dereferenceable_or_null metadata value must be an i64!
Branch condition is not 'i1' type!
Switch constants must all be same type as switch value!
Duplicate integer as switch case
Indirectbr operand must have pointer type!
Indirectbr destinations must all have pointer type!
The unwind destination does not have an exception handling instruction!
Called function must be a pointer!
Called function is not pointer to function type!
Called function is not the same type as the call!
Called function requires more parameters than were provided!
Incorrect number of arguments passed to called function!
Call parameter type does not match function signature!
speculatable attribute may not apply to call sites
inalloca argument for call has mismatched alloca
swifterror argument for call has mismatched alloca
swifterror argument should come from an alloca or parameter
swifterror argument for call has mismatched parameter
Attribute 'sret' cannot be used for vararg call arguments!
inalloca isn't on the last argument!
Function has metadata parameter but isn't an intrinsic
Function has token parameter but isn't an intrinsic
Return type cannot be token for indirect call!
Multiple deopt operand bundles
Multiple gc-transition operand bundles
Multiple funclet operand bundles
Expected exactly one funclet bundle operand
Funclet bundle operands should correspond to a FuncletPadInst
ptrauth
Multiple ptrauth operand bundles
Expected exactly two ptrauth bundle operand
Ptrauth bundle key operand must be an i32 constant
Ptrauth bundle discriminator operand must be an i64
inlinable function call in a function with debug info must have a !dbg location
Intrinsic functions should never be defined!
Intrinsic has incorrect return type!
Intrinsic has incorrect argument type!
Intrinsic was not defined with variable arguments!
Callsite was not defined with variable arguments!
Intrinsic has too few arguments!
Intrinsic name not mangled correctly for type arguments! Should be: 
info argument of llvm.coro.begin must refer to an initialized constant
info argument of llvm.coro.begin must refer to either a struct or an array
is_zero_undef argument of bit counting intrinsics must be a constant int
invalid llvm.dbg.declare intrinsic call 1
declare
addr
label
alignment of arg 0 of memory intrinsic must be 0 or a power of 2
alignment of arg 1 of memory intrinsic must be 0 or a power of 2
isvolatile argument of memory intrinsics must be a constant int
element size of the element-wise unordered atomic memory intrinsic must be a constant int
element size of the element-wise atomic memory intrinsic must be a power of 2
constant length must be a multiple of the element size in the element-wise atomic memory intrinsic
incorrect alignment of the destination argument
incorrect alignment of the source argument
llvm.gcroot parameter #1 must be an alloca.
llvm.gcroot parameter #2 must be a constant.
llvm.gcroot parameter #1 must either be a pointer alloca, or argument #2 must be a non-null constant.
Enclosing function does not use GC.
llvm.init_trampoline parameter #2 must resolve to a function.
invalid arguments to llvm.prefetch
llvm.stackprotector parameter #2 must resolve to an alloca.
size argument of memory use markers must be a constant integer
llvm.invariant.end parameter #2 must be a constant integer
llvm.localescape used outside of entry block
multiple calls to llvm.localescape in one function
llvm.localescape only accepts static allocas
llvm.localrecover first argument must be function defined in this module
idx argument of llvm.localrecover must be a constant int
gc.statepoint support for inline assembly unimplemented
gc.result operand #1 must be from a statepoint
gc.result result type does not match wrapped callee
wrong number of arguments
gc.relocate must return a pointer or a vector of pointers
safepoints should have unique landingpads
safepoint block should be well formed
gc relocate should be linked to a statepoint
gc relocate is incorrectly tied to the statepoint
gc.relocate operand #2 must be integer offset
gc.relocate operand #3 must be integer offset
gc.relocate: statepoint base index out of bounds
gc.relocate: statepoint derived index out of bounds
gc.statepoint: insufficient arguments
gc.statement: number of call arguments must be constant integer
gc.statepoint: mismatch in number of call arguments
gc.statepoint: number of transition arguments must be a constant integer
gc.statepoint: number of deoptimization arguments must be a constant integer
gc.relocate: statepoint base index doesn't fall within the 'gc parameters' section of the statepoint call
gc.relocate: statepoint derived index doesn't fall within the 'gc parameters' section of the statepoint call
gc.relocate: relocated value must be a gc pointer
gc.relocate: vector relocates to vector and pointer to pointer
gc.relocate: relocating a pointer shouldn't change its address space
eh.exceptionpointer argument must be a catchpad
masked_load: must return a vector
masked_load: mask must be vector
masked_load: return must match pointer type
masked_load: pass through and data type must match
masked_load: vector mask must be same length as data
masked_store: mask must be vector
masked_store: storee must match pointer type
masked_store: vector mask must be same length as data
experimental_guard cannot be invoked
experimental_guard must have exactly one "deopt" operand bundle
experimental_deoptimize cannot be invoked
experimental_deoptimize must have exactly one "deopt" operand bundle
experimental_deoptimize return type must match caller return type
calls to experimental_deoptimize must be followed by a return
calls to experimental_deoptimize must be followed by a return of the value computed by experimental_deoptimize
ptrauth key must be a constant integer
invalid arguments for constrained FP intrinsic
invalid exception behavior argument
invalid rounding mode argument
invalid llvm.dbg.
 intrinsic address/value
 intrinsic variable
 intrinsic expression
llvm.dbg.
 intrinsic requires a !dbg attachment
mismatched subprogram between llvm.dbg.
 variable and !dbg attachment
BlockByRef variable without complex expression
dbg intrinsic without variable
conflicting debug info for argument
 label and !dbg attachment
gc.statepoint must read and write all memory to preserve reordering restrictions required by safepoint semantics
gc.statepoint ID must be a constant integer
gc.statepoint number of patchable bytes must be a constant integer
gc.statepoint number of patchable bytes must be positive
gc.statepoint callee must be of function pointer type
gc.statepoint number of arguments to underlying call must be constant integer
gc.statepoint number of arguments to underlying call must be positive
gc.statepoint mismatch in number of vararg call args
gc.statepoint doesn't support wrapping non-void vararg functions yet
gc.statepoint mismatch in number of call args
gc.statepoint flags must be constant integer
unknown flag used in gc.statepoint flags argument
gc.statepoint call argument does not match wrapped function type
gc.statepoint number of transition arguments must be constant integer
gc.statepoint number of transition arguments must be positive
gc.statepoint number of deoptimization arguments must be constant integer
gc.statepoint number of deoptimization arguments must be positive
gc.statepoint too few arguments according to length fields
illegal use of statepoint token
gc.result or gc.relocate are the only value uses of a gc.statepoint
gc.result connected to wrong gc.statepoint
gc.relocate connected to wrong gc.statepoint
ResumeInst needs to be in a function with a personality.
The resume instruction should have a consistent result type inside a function.
CleanupReturnInst needs to be provided a CleanupPad
CleanupReturnInst must unwind to an EH block which is not a landingpad.
CatchReturnInst needs to be provided a CatchPad
CatchSwitchInst needs to be in a function with a personality.
CatchSwitchInst not the first non-PHI instruction in the block.
CatchSwitchInst has an invalid parent.
CatchSwitchInst must unwind to an EH block which is not a landingpad.
CatchSwitchInst cannot have empty handler list
CatchSwitchInst handlers must be catchpads
EH pad cannot be in entry block.
Block containing LandingPadInst must be jumped to only by the unwind edge of an invoke.
Block containg CatchPadInst must be jumped to only by its catchswitch.
Catchswitch cannot unwind to one of its catchpads
EH pad must be jumped to via an unwind edge
A cleanupret must exit its cleanup
EH pad cannot handle exceptions raised within it
A single unwind edge may only enter one EH pad
EH pad jumps through a cycle of pads
Both operands to a binary operator are not of the same type!
Integer arithmetic operators only work with integral types!
Integer arithmetic operators must have same type for operands and result!
Floating-point arithmetic operators only work with floating-point types!
Floating-point arithmetic operators must have same type for operands and result!
Logical operators only work with integral types!
Logical operators must have same type for operands and result!
Shifts only work with integral types!
Shift return type must be same as operands!
Allocation instruction pointer not in the stack address space!
Cannot allocate unsized type
Alloca array size must have integer type
Load operand must be a pointer.
loading unsized types is not allowed
Load cannot have Release ordering
Atomic load must specify explicit alignment
atomic load operand must have integer, pointer, or floating point type!
Non-atomic load cannot have SynchronizationScope specified
atomic memory access' size must be byte-sized
atomic memory access' operand must have a power-of-two size
Store operand must be a pointer.
Stored value type does not match pointer operand type!
storing unsized types is not allowed
Store cannot have Acquire ordering
Atomic store must specify explicit alignment
atomic store operand must have integer, pointer, or floating point type!
Non-atomic store cannot have SynchronizationScope specified
GEP base pointer is not a vector or a vector of pointers
GEP into unsized type!
GEP indexes must be integers
Invalid indices for GEP pointer type!
GEP is not of right type for indices!
Vector GEP result width doesn't match operand's
Invalid GEP index vector width
All GEP indices should be of integer type
fence instructions may only have acquire, release, acq_rel, or seq_cst ordering.
cmpxchg instructions must be atomic.
cmpxchg instructions cannot be unordered.
cmpxchg instructions failure argument shall be no stronger than the success argument
cmpxchg failure ordering cannot include release semantics
First cmpxchg operand must be a pointer.
cmpxchg operand must have integer or pointer type
Expected value type does not match pointer operand type!
atomicrmw instructions must be atomic.
atomicrmw instructions cannot be unordered.
First atomicrmw operand must be a pointer.
atomicrmw 
 operand must have integer or floating point type!
 operand must have floating point type!
 operand must have integer type!
Argument value type does not match pointer operand type!
Invalid binary operation!
Trunc only operates on integer
Trunc only produces integer
trunc source and destination must both be a vector or neither
DestTy too big for Trunc
ZExt only operates on integer
ZExt only produces an integer
zext source and destination must both be a vector or neither
Type too small for ZExt
SExt only operates on integer
SExt only produces an integer
sext source and destination must both be a vector or neither
Type too small for SExt
FPToUI source and dest must both be vector or scalar
FPToUI source must be FP or FP vector
FPToUI result must be integer or integer vector
FPToUI source and dest vector length mismatch
FPToSI source and dest must both be vector or scalar
FPToSI source must be FP or FP vector
FPToSI result must be integer or integer vector
FPToSI source and dest vector length mismatch
UIToFP source and dest must both be vector or scalar
UIToFP source must be integer or integer vector
UIToFP result must be FP or FP vector
UIToFP source and dest vector length mismatch
SIToFP source and dest must both be vector or scalar
SIToFP source must be integer or integer vector
SIToFP result must be FP or FP vector
SIToFP source and dest vector length mismatch
FPTrunc only operates on FP
FPTrunc only produces an FP
fptrunc source and destination must both be a vector or neither
DestTy too big for FPTrunc
FPExt only operates on FP
FPExt only produces an FP
fpext source and destination must both be a vector or neither
DestTy too small for FPExt
PtrToInt source must be pointer
PtrToInt result must be integral
PtrToInt type mismatch
PtrToInt Vector width mismatch
IntToPtr source must be an integral
IntToPtr result must be a pointer
IntToPtr type mismatch
IntToPtr Vector width mismatch
AddrSpaceCast source must be a pointer
AddrSpaceCast result must be a pointer
AddrSpaceCast must be between different address spaces
AddrSpaceCast vector pointer number of elements mismatch
CleanupPadInst needs to be in a function with a personality.
CleanupPadInst not the first non-PHI instruction in the block.
CleanupPadInst has an invalid parent.
FuncletPadInst must not be nested within itself
Bogus funclet pad use
Unwind edges out of a funclet pad must have the same unwind dest
Unwind edges out of a catch must have the same unwind dest as the parent catchswitch
CatchPadInst needs to be in a function with a personality.
CatchPadInst needs to be directly nested in a CatchSwitchInst.
CatchPadInst not the first non-PHI instruction in the block.
Both operands to ICmp instruction are not of the same type!
Invalid operand types for ICmp instruction
Invalid predicate in ICmp instruction!
Both operands to FCmp instruction are not of the same type!
Invalid operand types for FCmp instruction
Invalid predicate in FCmp instruction!
PHI nodes not grouped at top of basic block!
PHI nodes cannot have token type!
PHI node operands are not the same type as the result!
cannot use musttail call with inline asm
cannot guarantee tail call due to mismatched parameter counts
cannot guarantee tail call due to mismatched parameter types
cannot guarantee tail call due to mismatched varargs
cannot guarantee tail call due to mismatched return types
cannot guarantee tail call due to mismatched calling conv
cannot guarantee tail call due to mismatched ABI impacting function attributes
bitcast following musttail call must use the call
musttail call must precede a ret with an optional bitcast
musttail call result must be returned
Invalid operands for select instruction!
Select values must have same type as select instruction!
User-defined operators should not live outside of a pass!
Invalid extractelement operands!
Invalid insertelement operands!
Invalid shufflevector operands!
Invalid ExtractValueInst operands!
Invalid InsertValueInst operands!
LandingPadInst needs at least one clause or to be a cleanup.
The landingpad instruction should have a consistent result type inside a function.
LandingPadInst needs to be in a function with a personality.
LandingPadInst not the first non-PHI instruction in the block.
Catch operand does not have pointer type!
Clause is neither catch nor filter!
Filter operand is not an array of constants!
EH pads can't handle each other's exceptions
all indices passed to llvm.localrecover must be less than the number of arguments passed ot llvm.localescape in the parent function
Global variable initializer type does not match global variable type!
'common' global must have a zero initializer!
'common' global may not be marked constant!
'common' global may not be in a Comdat!
llvm.global_ctors
llvm.global_dtors
invalid linkage for intrinsic global variable
wrong type for intrinsic global variable
llvm.used
llvm.compiler.used
wrong initalizer for intrinsic global variable
invalid llvm.used member
members of llvm.used must be named
invalid llvm.ptrauth global: 
!dbg attachment of global variable must be a DIGlobalVariableExpression
Alias should have private, internal, linkonce, weak, linkonce_odr, weak_odr, or external linkage!
Aliasee cannot be NULL!
Alias and aliasee types should match!
Aliasee should be either GlobalValue or ConstantExpr
Alias must point to a definition
Aliases cannot form a cycle
Alias cannot point to an interposable alias
unrecognized named metadata node in the llvm.dbg namespace
invalid compile unit
comdat global value has private linkage
invalid requirement on flag, flag is not present in module
invalid requirement on flag, flag does not have the required value
incorrect number of operands in module flag
invalid behavior operand in module flag (expected constant integer)
invalid behavior operand in module flag (unexpected constant)
invalid ID operand in module flag (expected metadata string)
invalid value for 'max' module flag (expected constant integer)
invalid value for 'require' module flag (expected metadata pair)
invalid value for 'require' module flag (first value operand should be a string)
invalid value for 'append'-type module flag (expected a metadata node)
module flag identifiers must be unique (or of 'require' type)
wchar_size
wchar_size metadata requires constant integer argument
Linker Options
llvm.linker.options
'Linker Options' named metadata no longer supported
expected a MDNode triple
expected an integer constant
expected a Function or null
llvm.ident
incorrect number of operands in llvm.ident metadata
invalid value for llvm.ident metadata entry operand(the operand should be a string)
llvm.commandline
incorrect number of operands in llvm.commandline metadata
invalid value for llvm.commandline metadata entry operand(the operand should be a string)
DICompileUnit not listed in llvm.dbg.cu
All llvm.experimental.deoptimize declarations must have the same calling convention
Module Verifier
verify
DW_TAG_null
DW_TAG_array_type
DW_TAG_class_type
DW_TAG_entry_point
DW_TAG_enumeration_type
DW_TAG_formal_parameter
DW_TAG_imported_declaration
DW_TAG_label
DW_TAG_lexical_block
DW_TAG_member
DW_TAG_pointer_type
DW_TAG_reference_type
DW_TAG_compile_unit
DW_TAG_string_type
DW_TAG_structure_type
DW_TAG_subroutine_type
DW_TAG_typedef
DW_TAG_union_type
DW_TAG_unspecified_parameters
DW_TAG_variant
DW_TAG_common_block
DW_TAG_common_inclusion
DW_TAG_inheritance
DW_TAG_inlined_subroutine
DW_TAG_module
DW_TAG_ptr_to_member_type
DW_TAG_set_type
DW_TAG_subrange_type
DW_TAG_with_stmt
DW_TAG_access_declaration
DW_TAG_base_type
DW_TAG_catch_block
DW_TAG_const_type
DW_TAG_constant
DW_TAG_enumerator
DW_TAG_file_type
DW_TAG_friend
DW_TAG_namelist
DW_TAG_namelist_item
DW_TAG_packed_type
DW_TAG_subprogram
DW_TAG_template_type_parameter
DW_TAG_template_value_parameter
DW_TAG_thrown_type
DW_TAG_try_block
DW_TAG_variant_part
DW_TAG_variable
DW_TAG_volatile_type
DW_TAG_dwarf_procedure
DW_TAG_restrict_type
DW_TAG_interface_type
DW_TAG_namespace
DW_TAG_imported_module
DW_TAG_unspecified_type
DW_TAG_partial_unit
DW_TAG_imported_unit
DW_TAG_condition
DW_TAG_shared_type
DW_TAG_type_unit
DW_TAG_rvalue_reference_type
DW_TAG_template_alias
DW_TAG_coarray_type
DW_TAG_generic_subrange
DW_TAG_dynamic_type
DW_TAG_atomic_type
DW_TAG_call_site
DW_TAG_call_site_parameter
DW_TAG_skeleton_unit
DW_TAG_immutable_type
DW_TAG_MIPS_loop
DW_TAG_format_label
DW_TAG_function_template
DW_TAG_class_template
DW_TAG_GNU_template_template_param
DW_TAG_GNU_template_parameter_pack
DW_TAG_GNU_formal_parameter_pack
DW_TAG_GNU_call_site
DW_TAG_GNU_call_site_parameter
DW_TAG_APPLE_property
DW_TAG_APPLE_ptrauth_type
DW_TAG_BORLAND_property
DW_TAG_BORLAND_Delphi_string
DW_TAG_BORLAND_Delphi_dynamic_array
DW_TAG_BORLAND_Delphi_set
DW_TAG_BORLAND_Delphi_variant
DW_CHILDREN_no
DW_CHILDREN_yes
DW_AT_sibling
DW_AT_location
DW_AT_name
DW_AT_ordering
DW_AT_byte_size
DW_AT_bit_offset
DW_AT_bit_size
DW_AT_stmt_list
DW_AT_low_pc
DW_AT_high_pc
DW_AT_language
DW_AT_discr
DW_AT_discr_value
DW_AT_visibility
DW_AT_import
DW_AT_string_length
DW_AT_common_reference
DW_AT_comp_dir
DW_AT_const_value
DW_AT_containing_type
DW_AT_default_value
DW_AT_inline
DW_AT_is_optional
DW_AT_lower_bound
DW_AT_producer
DW_AT_prototyped
DW_AT_return_addr
DW_AT_start_scope
DW_AT_bit_stride
DW_AT_upper_bound
DW_AT_abstract_origin
DW_AT_accessibility
DW_AT_address_class
DW_AT_artificial
DW_AT_base_types
DW_AT_calling_convention
DW_AT_count
DW_AT_data_member_location
DW_AT_decl_column
DW_AT_decl_file
DW_AT_decl_line
DW_AT_declaration
DW_AT_discr_list
DW_AT_encoding
DW_AT_external
DW_AT_frame_base
DW_AT_friend
DW_AT_identifier_case
DW_AT_macro_info
DW_AT_namelist_item
DW_AT_priority
DW_AT_segment
DW_AT_specification
DW_AT_static_link
DW_AT_type
DW_AT_use_location
DW_AT_variable_parameter
DW_AT_virtuality
DW_AT_vtable_elem_location
DW_AT_allocated
DW_AT_associated
DW_AT_data_location
DW_AT_byte_stride
DW_AT_entry_pc
DW_AT_use_UTF8
DW_AT_extension
DW_AT_ranges
DW_AT_trampoline
DW_AT_call_column
DW_AT_call_file
DW_AT_call_line
DW_AT_description
DW_AT_binary_scale
DW_AT_decimal_scale
DW_AT_small
DW_AT_decimal_sign
DW_AT_digit_count
DW_AT_picture_string
DW_AT_mutable
DW_AT_threads_scaled
DW_AT_explicit
DW_AT_object_pointer
DW_AT_endianity
DW_AT_elemental
DW_AT_pure
DW_AT_recursive
DW_AT_signature
DW_AT_main_subprogram
DW_AT_data_bit_offset
DW_AT_const_expr
DW_AT_enum_class
DW_AT_linkage_name
DW_AT_string_length_bit_size
DW_AT_string_length_byte_size
DW_AT_rank
DW_AT_str_offsets_base
DW_AT_addr_base
DW_AT_rnglists_base
DW_AT_dwo_id
DW_AT_dwo_name
DW_AT_reference
DW_AT_rvalue_reference
DW_AT_macros
DW_AT_call_all_calls
DW_AT_call_all_source_calls
DW_AT_call_all_tail_calls
DW_AT_call_return_pc
DW_AT_call_value
DW_AT_call_origin
DW_AT_call_parameter
DW_AT_call_pc
DW_AT_call_tail_call
DW_AT_call_target
DW_AT_call_target_clobbered
DW_AT_call_data_location
DW_AT_call_data_value
DW_AT_noreturn
DW_AT_alignment
DW_AT_export_symbols
DW_AT_deleted
DW_AT_defaulted
DW_AT_loclists_base
DW_AT_MIPS_loop_begin
DW_AT_MIPS_tail_loop_begin
DW_AT_MIPS_epilog_begin
DW_AT_MIPS_loop_unroll_factor
DW_AT_MIPS_software_pipeline_depth
DW_AT_MIPS_linkage_name
DW_AT_MIPS_stride
DW_AT_MIPS_abstract_name
DW_AT_MIPS_clone_origin
DW_AT_MIPS_has_inlines
DW_AT_MIPS_stride_byte
DW_AT_MIPS_stride_elem
DW_AT_MIPS_ptr_dopetype
DW_AT_MIPS_allocatable_dopetype
DW_AT_MIPS_assumed_shape_dopetype
DW_AT_MIPS_assumed_size
DW_AT_sf_names
DW_AT_src_info
DW_AT_mac_info
DW_AT_src_coords
DW_AT_body_begin
DW_AT_body_end
DW_AT_GNU_vector
DW_AT_GNU_template_name
DW_AT_GNU_odr_signature
DW_AT_GNU_call_site_value
DW_AT_GNU_all_call_sites
DW_AT_GNU_macros
DW_AT_GNU_dwo_name
DW_AT_GNU_dwo_id
DW_AT_GNU_ranges_base
DW_AT_GNU_addr_base
DW_AT_GNU_pubnames
DW_AT_GNU_pubtypes
DW_AT_GNU_discriminator
DW_AT_BORLAND_property_read
DW_AT_BORLAND_property_write
DW_AT_BORLAND_property_implements
DW_AT_BORLAND_property_index
DW_AT_BORLAND_property_default
DW_AT_BORLAND_Delphi_unit
DW_AT_BORLAND_Delphi_class
DW_AT_BORLAND_Delphi_record
DW_AT_BORLAND_Delphi_metaclass
DW_AT_BORLAND_Delphi_constructor
DW_AT_BORLAND_Delphi_destructor
DW_AT_BORLAND_Delphi_anonymous_method
DW_AT_BORLAND_Delphi_interface
DW_AT_BORLAND_Delphi_ABI
DW_AT_BORLAND_Delphi_return
DW_AT_BORLAND_Delphi_frameptr
DW_AT_BORLAND_closure
DW_AT_LLVM_include_path
DW_AT_LLVM_config_macros
DW_AT_LLVM_isysroot
DW_AT_APPLE_ptrauth_key
DW_AT_APPLE_ptrauth_address_discriminated
DW_AT_APPLE_ptrauth_extra_discriminator
DW_AT_APPLE_optimized
DW_AT_APPLE_flags
DW_AT_APPLE_isa
DW_AT_APPLE_block
DW_AT_APPLE_major_runtime_vers
DW_AT_APPLE_runtime_class
DW_AT_APPLE_omit_frame_ptr
DW_AT_APPLE_property_name
DW_AT_APPLE_property_getter
DW_AT_APPLE_property_setter
DW_AT_APPLE_property_attribute
DW_AT_APPLE_objc_complete_type
DW_AT_APPLE_property
DW_FORM_addr
DW_FORM_block2
DW_FORM_block4
DW_FORM_data2
DW_FORM_data4
DW_FORM_data8
DW_FORM_string
DW_FORM_block
DW_FORM_block1
DW_FORM_data1
DW_FORM_flag
DW_FORM_sdata
DW_FORM_strp
DW_FORM_udata
DW_FORM_ref_addr
DW_FORM_ref1
DW_FORM_ref2
DW_FORM_ref4
DW_FORM_ref8
DW_FORM_ref_udata
DW_FORM_indirect
DW_FORM_sec_offset
DW_FORM_exprloc
DW_FORM_flag_present
DW_FORM_ref_sig8
DW_FORM_strx
DW_FORM_addrx
DW_FORM_ref_sup4
DW_FORM_strp_sup
DW_FORM_data16
DW_FORM_line_strp
DW_FORM_implicit_const
DW_FORM_loclistx
DW_FORM_rnglistx
DW_FORM_ref_sup8
DW_FORM_strx1
DW_FORM_strx2
DW_FORM_strx3
DW_FORM_strx4
DW_FORM_addrx1
DW_FORM_addrx2
DW_FORM_addrx3
DW_FORM_addrx4
DW_FORM_GNU_addr_index
DW_FORM_GNU_str_index
DW_FORM_GNU_ref_alt
DW_FORM_GNU_strp_alt
DW_OP_addr
DW_OP_deref
DW_OP_const1u
DW_OP_const1s
DW_OP_const2u
DW_OP_const2s
DW_OP_const4u
DW_OP_const4s
DW_OP_const8u
DW_OP_const8s
DW_OP_constu
DW_OP_consts
DW_OP_dup
DW_OP_drop
DW_OP_over
DW_OP_pick
DW_OP_swap
DW_OP_rot
DW_OP_xderef
DW_OP_abs
DW_OP_and
DW_OP_div
DW_OP_minus
DW_OP_mod
DW_OP_mul
DW_OP_neg
DW_OP_not
DW_OP_or
DW_OP_plus
DW_OP_plus_uconst
DW_OP_shl
DW_OP_shr
DW_OP_shra
DW_OP_xor
DW_OP_bra
DW_OP_eq
DW_OP_ge
DW_OP_gt
DW_OP_le
DW_OP_lt
DW_OP_ne
DW_OP_skip
DW_OP_lit0
DW_OP_lit1
DW_OP_lit2
DW_OP_lit3
DW_OP_lit4
DW_OP_lit5
DW_OP_lit6
DW_OP_lit7
DW_OP_lit8
DW_OP_lit9
DW_OP_lit10
DW_OP_lit11
DW_OP_lit12
DW_OP_lit13
DW_OP_lit14
DW_OP_lit15
DW_OP_lit16
DW_OP_lit17
DW_OP_lit18
DW_OP_lit19
DW_OP_lit20
DW_OP_lit21
DW_OP_lit22
DW_OP_lit23
DW_OP_lit24
DW_OP_lit25
DW_OP_lit26
DW_OP_lit27
DW_OP_lit28
DW_OP_lit29
DW_OP_lit30
DW_OP_lit31
DW_OP_reg0
DW_OP_reg1
DW_OP_reg2
DW_OP_reg3
DW_OP_reg4
DW_OP_reg5
DW_OP_reg6
DW_OP_reg7
DW_OP_reg8
DW_OP_reg9
DW_OP_reg10
DW_OP_reg11
DW_OP_reg12
DW_OP_reg13
DW_OP_reg14
DW_OP_reg15
DW_OP_reg16
DW_OP_reg17
DW_OP_reg18
DW_OP_reg19
DW_OP_reg20
DW_OP_reg21
DW_OP_reg22
DW_OP_reg23
DW_OP_reg24
DW_OP_reg25
DW_OP_reg26
DW_OP_reg27
DW_OP_reg28
DW_OP_reg29
DW_OP_reg30
DW_OP_reg31
DW_OP_breg0
DW_OP_breg1
DW_OP_breg2
DW_OP_breg3
DW_OP_breg4
DW_OP_breg5
DW_OP_breg6
DW_OP_breg7
DW_OP_breg8
DW_OP_breg9
DW_OP_breg10
DW_OP_breg11
DW_OP_breg12
DW_OP_breg13
DW_OP_breg14
DW_OP_breg15
DW_OP_breg16
DW_OP_breg17
DW_OP_breg18
DW_OP_breg19
DW_OP_breg20
DW_OP_breg21
DW_OP_breg22
DW_OP_breg23
DW_OP_breg24
DW_OP_breg25
DW_OP_breg26
DW_OP_breg27
DW_OP_breg28
DW_OP_breg29
DW_OP_breg30
DW_OP_breg31
DW_OP_regx
DW_OP_fbreg
DW_OP_bregx
DW_OP_piece
DW_OP_deref_size
DW_OP_xderef_size
DW_OP_nop
DW_OP_push_object_address
DW_OP_call2
DW_OP_call4
DW_OP_call_ref
DW_OP_form_tls_address
DW_OP_call_frame_cfa
DW_OP_bit_piece
DW_OP_implicit_value
DW_OP_stack_value
DW_OP_implicit_pointer
DW_OP_addrx
DW_OP_constx
DW_OP_entry_value
DW_OP_const_type
DW_OP_regval_type
DW_OP_deref_type
DW_OP_xderef_type
DW_OP_convert
DW_OP_reinterpret
DW_OP_GNU_push_tls_address
DW_OP_GNU_addr_index
DW_OP_GNU_const_index
DW_OP_LLVM_fragment
DW_ATE_address
DW_ATE_boolean
DW_ATE_complex_float
DW_ATE_float
DW_ATE_signed
DW_ATE_signed_char
DW_ATE_unsigned
DW_ATE_unsigned_char
DW_ATE_imaginary_float
DW_ATE_packed_decimal
DW_ATE_numeric_string
DW_ATE_edited
DW_ATE_signed_fixed
DW_ATE_unsigned_fixed
DW_ATE_decimal_float
DW_ATE_UTF
DW_ATE_UCS
DW_ATE_ASCII
DW_ACCESS_public
DW_ACCESS_protected
DW_ACCESS_private
DW_VIRTUALITY_none
DW_VIRTUALITY_virtual
DW_VIRTUALITY_pure_virtual
DW_LANG_C89
DW_LANG_C
DW_LANG_Ada83
DW_LANG_C_plus_plus
DW_LANG_Cobol74
DW_LANG_Cobol85
DW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Pascal83
DW_LANG_Modula2
DW_LANG_Java
DW_LANG_C99
DW_LANG_Ada95
DW_LANG_Fortran95
DW_LANG_PLI
DW_LANG_ObjC
DW_LANG_ObjC_plus_plus
DW_LANG_UPC
DW_LANG_D
DW_LANG_Python
DW_LANG_OpenCL
DW_LANG_Go
DW_LANG_Modula3
DW_LANG_Haskell
DW_LANG_C_plus_plus_03
DW_LANG_C_plus_plus_11
DW_LANG_OCaml
DW_LANG_Rust
DW_LANG_C11
DW_LANG_Swift
DW_LANG_Julia
DW_LANG_Dylan
DW_LANG_C_plus_plus_14
DW_LANG_Fortran03
DW_LANG_Fortran08
DW_LANG_RenderScript
DW_LANG_BLISS
DW_LANG_Mips_Assembler
DW_LANG_GOOGLE_RenderScript
DW_LANG_BORLAND_Delphi
DW_CC_normal
DW_CC_program
DW_CC_nocall
DW_CC_pass_by_reference
DW_CC_pass_by_value
DW_CC_GNU_renesas_sh
DW_CC_GNU_borland_fastcall_i386
DW_CC_BORLAND_safecall
DW_CC_BORLAND_stdcall
DW_CC_BORLAND_pascal
DW_CC_BORLAND_msfastcall
DW_CC_BORLAND_msreturn
DW_CC_BORLAND_thiscall
DW_CC_BORLAND_fastcall
DW_CC_LLVM_vectorcall
DW_CC_LLVM_Win64
DW_CC_LLVM_X86_64SysV
DW_CC_LLVM_AAPCS
DW_CC_LLVM_AAPCS_VFP
DW_CC_LLVM_IntelOclBicc
DW_CC_LLVM_SpirFunction
DW_CC_LLVM_OpenCLKernel
DW_CC_LLVM_Swift
DW_CC_LLVM_PreserveMost
DW_CC_LLVM_PreserveAll
DW_CC_LLVM_X86RegCall
DW_CC_GDB_IBM_OpenCL
DW_MACINFO_define
DW_MACINFO_undef
DW_MACINFO_start_file
DW_MACINFO_end_file
DW_MACINFO_vendor_ext
DW_MACINFO_invalid
DW_RLE_end_of_list
DW_RLE_offset_pair
DW_RLE_base_address
DW_RLE_start_length
DW_ATOM_null
DW_ATOM_die_offset
DW_ATOM_cu_offset
DW_ATOM_die_tag
DW_ATOM_type_flags
DW_ATOM_qual_name_hash
DW_ATOM_ext_types
TYPE
VARIABLE
FUNCTION
OTHER
UNUSED5
UNUSED6
UNUSED7
EXTERNAL
STATIC
DW_IDX_compile_unit
DW_IDX_type_unit
DW_IDX_die_offset
DW_IDX_parent
DW_IDX_type_hash
R_WEBASSEMBLY_FUNCTION_INDEX_LEB
R_WEBASSEMBLY_TABLE_INDEX_SLEB
R_WEBASSEMBLY_TABLE_INDEX_I32
R_WEBASSEMBLY_MEMORY_ADDR_LEB
R_WEBASSEMBLY_MEMORY_ADDR_SLEB
R_WEBASSEMBLY_MEMORY_ADDR_I32
R_WEBASSEMBLY_TYPE_INDEX_LEB
R_WEBASSEMBLY_GLOBAL_INDEX_LEB
R_WEBASSEMBLY_FUNCTION_OFFSET_I32
R_WEBASSEMBLY_SECTION_OFFSET_I32
+Inf
-Inf
0.0E+0
e+00
APInt(
Stream Error: 
An unspecified error has occurred.
The stream is too short to perform the requested operation.
The buffer size is not a multiple of the array element size.
The specified offset is invalid for the current stream.
An I/O error occurred on the file system.
0x%08x / 0x%08x = %.2f%%
%Y-%m-%d %H:%M:%S
%.9lu
General options
: for the -
 option: 
may only occur zero or one times!
must occur exactly one time!
>...
' is invalid value for boolean argument! Try 0 or 1
' value invalid for integer argument!
' value invalid for uint argument!
    -
 (default: 
= *unknown option value*
*no default*
= *cannot print option value*
Generic Options
help-list
Display list of available options (-help-list-hidden for more)
help-list-hidden
Display list of all available options
help
Display available options (-help-hidden for more)
Alias for -help
help-hidden
Display all available options
print-options
Print non-default options after command line parsing
print-all-options
Print all option values after command line parsing
version
Display the version of this program
: CommandLine Error: Option '
' registered more than once!
inconsistency in registered CommandLine options
Cannot specify more than one option with cl::ConsumeAfter!
' value invalid for floating point argument!
  This option category has no options.
OVERVIEW: 
USAGE: 
 [subcommand]
 [options]
SUBCOMMAND '
SUBCOMMANDS:
  Type "
 <subcommand> -help" to get more help on a specific subcommand
OPTIONS:
Apple
LLVM
 version 
31001.638.1
Optimized build
(unknown)
  Default target: 
  Host CPU: 
number
cl::alias must only have one cl::aliasopt(...) specified!
cl::alias must have argument name specified!
cl::alias must have an cl::aliasopt(option) specified!
cl::alias must not have cl::sub(), aliased option's cl::sub() will be used!
debug-counter
Comma separated list of debug counter skip and count
DebugCounter Error: 
 does not have an = in it
 is not a number
 is not a registered counter
 does not end with -skip or -count
Counters and values:
    =
 -   
Multiple errors:
Error
Multiple errors
Inconvertible error value. An error has occurred that could not be converted to a known std::error_code. Please file a bug.
LLVM ERROR: 
LLVM ERROR: out of memory
UNREACHABLE executed
 at 
Allocation failed
view-background
Execute graph viewer in the background. Creates tmp file litter.
Error: 
'... 
Trying 'open' program... 
xdg-open
Trying 'xdg-open' program... 
Graphviz
Running 'Graphviz' program... 
xdot|xdot.py
Running 'xdot.py' program... 
dot|fdp|neato|twopi|circo
-Tps
-Nfontname=Courier
-Gsize=7.5,10
Running '
' program... 
--spartan
dotty
Running 'dotty' program... 
Error: Couldn't find a usable graph viewer program:
  Tried '
Remember to erase graph file: 
neato
twopi
circo
LLT_invalid
<stdin>
BCSymbolMap Version: 2.0
warning: missing version string. Assuming 1.0.
warning: symbol map version 
is not supported. Not unobfuscating.
rng-seed
seed
Seed for the random number generator
replacement string contained trailing backslash
0123456789
invalid backreference string '
Included from 
<unknown>
note: 
remark: 
stats
Enable statistics output from program (available with Asserts)
stats-json
Display statistics as json data
iwmmxt
-fp16
armv2
armv2a
armv3
armv3m
armv4
armv4t
armv5t
armv5te
armv5tej
5TEJ
armv6
armv6k
armv6t2
v6t2
armv6kz
v6kz
armv6-m
armv7-a
armv7ve
v7ve
armv7-r
armv7-m
armv7e-m
7E-M
v7em
armv8-a
armv8.1-a
8.1-A
v8.1a
armv8.2-a
8.2-A
v8.2a
armv8.3-a
8.3-A
v8.3a
armv8.4-a
8.4-A
v8.4a
armv8-r
armv8-m.base
8-M.Baseline
v8m.base
armv8-m.main
8-M.Mainline
v8m.main
iwmmxt2
armv7s
armv7k
v5te
v6-m
v7-a
v7-r
v7-m
v7e-m
v8-a
v8.1-a
v8.2-a
v8.3-a
v8.4-a
v8-r
v8-m.base
v8-m.main
track-memory
Enable -time-passes memory tracking (this may be slow)
info-output-file
File to append -stats and -timer output to
Error opening info-output-file '
 for appending!
%9lld  
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
   ---User Time---
   --System Time--
   --User+System--
   ---Wall Time---
  ---Mem---
  --- Name ---
Total
misc
Miscellaneous Ungrouped Timers
        -----     
  %7.4f (%5.1f%%)
i386
ananas
cloudabi
darwin
dragonfly
freebsd
fuchsia
kfreebsd
linux
macosx
netbsd
openbsd
solaris
windows
haiku
minix
rtems
nacl
cuda
nvcl
amdhsa
elfiamcu
tvos
watchos
bridgeos
driverkit
mesa3d
contiki
amdpal
gnuabin32
gnuabi64
gnueabihf
gnueabi
gnux32
code16
eabi
eabihf
android
musl
musleabi
musleabihf
msvc
itanium
cygnus
coreclr
simulator
macabi
maccatalyst
macos
invalid
cortex-a8
i486
xscale
empty
rope:
cstring:"
std::string:"
stringref:"
smallstring:"
formatv:"
char:"
decUI:"
decI:"
decUL:"
decL:"
decULL:"
decLL:"
uhex:"
(Twine 
YAML
#;/?:@&=+$,_.!~*'()[]
Not dealing with this yet
Could not find expected : for simple key
Expected quote at end of scalar
Found unexpected ':' while scanning a plain scalar
Found invalid tab character in indentation
Got empty plain scalar
Got empty alias or anchor
Expected a line break after block scalar header
Leading all-spaces line must be smaller than the block indent
A text line is less indented than the block scalar
-?:,[]{}#&*!|>'"%@`
Unrecognized character while tokenizing.
Can only iterate over the stream once
Unknown tag handle 
tag:yaml.org,2002:null
tag:yaml.org,2002:str
tag:yaml.org,2002:map
tag:yaml.org,2002:seq
Unrecognized escape code!
Unexpected token in Key Value.
Unexpected token. Expected Key or Block End
Unexpected token. Expected Key, Flow Entry, or Flow Mapping End.
Unexpected token. Expected Block Entry or Block End.
Could not find closing ]!
Expected , between entries!
tag:yaml.org,2002:
Already encountered an anchor for this node!
Already encountered a tag for this node!
Unexpected token
not a mapping
missing required key '
unknown key '
not a sequence
unknown enumerated scalar
expected sequence of bit values
unexpected scalar in sequence of bit values
unknown bit value
unexpected scalar
Map key must be a scalar
Map value must not be empty
unknown node kind
invalid call
                
invalid boolean
invalid number
out of range number
Null
IO failure on output stream: 
[:<:]]
[:>:]]
alnum
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
alpha
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
blank
cntrl
digit
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
lower
abcdefghijklmnopqrstuvwxyz
print
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
punct
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
space
upper
ABCDEFGHIJKLMNOPQRSTUVWXYZ
xdigit
0123456789ABCDEFabcdef
alert
backspace
newline
vertical-tab
form-feed
carriage-return
exclamation-mark
quotation-mark
number-sign
dollar-sign
percent-sign
ampersand
apostrophe
left-parenthesis
right-parenthesis
asterisk
plus-sign
comma
hyphen
hyphen-minus
period
full-stop
slash
solidus
zero
three
four
five
seven
eight
nine
colon
semicolon
less-than-sign
equals-sign
greater-than-sign
question-mark
commercial-at
left-square-bracket
backslash
reverse-solidus
right-square-bracket
circumflex
circumflex-accent
underscore
low-line
grave-accent
left-brace
left-curly-bracket
vertical-line
right-brace
right-curly-bracket
tilde
REG_0x%x
REG_NOMATCH
llvm_regexec() failed to match
REG_BADPAT
invalid regular expression
REG_ECOLLATE
invalid collating element
REG_ECTYPE
invalid character class
REG_EESCAPE
trailing backslash (\)
REG_ESUBREG
invalid backreference number
REG_EBRACK
brackets ([ ]) not balanced
REG_EPAREN
parentheses not balanced
REG_EBRACE
braces not balanced
REG_BADBR
invalid repetition count(s)
REG_ERANGE
invalid character range
REG_ESPACE
out of memory
REG_BADRPT
repetition-operator operand invalid
REG_EMPTY
empty (sub)expression
REG_ASSERT
"can't happen" -- you found a bug
REG_INVARG
invalid argument to regex routine
*** unknown regexp error code ***
x86_64-apple-darwin20.1.0
nehalem
westmere
sandybridge
amdfam10
bdver1
bdver2
bdver3
bdver4
znver1
ivybridge
haswell
broadwell
skylake
skylake-avx512
cannonlake
core2
penryn
k6-2
k6-3
geode
bonnell
silvermont
btver1
btver2
pentium
pentium-mmx
pentiumpro
pentium2
pentium3
pentium4
pentium-m
yonah
nocona
prescott
athlon
athlon-xp
k8-sse3
goldmont
goldmont-plus
-darwin
-%%%%%%
0123456789abcdef
-%%%%%%.
TMPDIR
TEMP
TEMPDIR
/var/tmp/
TERM
PATH
Child timed out but wouldn't die
Child timed out
Error waiting for child process
Program could not be executed
 (core dumped)
Executable "
" doesn't exist!
Can't redirect stderr to stdout
posix_spawn failed
Couldn't fork
/dev/null
Cannot dup2
Cannot open file '
' for 
input
output
disable-symbolication
Disable symbolizing crash backtraces.
llvm-symbolizer
Unable to find target for this triple (no targets are registered)
No available targets are compatible with this triple.
Cannot choose between targets "
" and "
    
byte
double
string
warning: 
error: 
hash
cpp_type
naked
required
native_custom_alloc
native_inline
nested_flatbuffer
apple_internal
 in 
force_align
, value: 
asin
NONE
Type
Length
Union
import
identifier
std::unique_ptr
_generated
csharp_partial
cpp_ptr_type_get
cpp_str_flex_ctor
native_type
native_default
private
 out of 
BFBS
true
bit_flags
bit_flags_all
bit_flags_none
null
Error: pipeline must be render or compute
No active buffer found 
bitset reset argument out of range
bitset test argument out of range
AGC_STATUS_LOG_PREFIX
AGC_DISABLE_GIN793_SWWA
AGCEnv
static const char *AGCEnv::getValue(const char *)
Number of varying components(
exceeds the limit (
Threadgroup memory size (
exceeds the maximum threadgroup memory allowed (
: Kernel specified max total threads per threadgroup (
must match compute pipeline specified max total threads per threadgroup (
: Specified total max threads per threadgroup (
exceeds the maximum total threads per threadgroup supported (
.load.
threadgroup memory not supported in fragment shaders
Texture writes not supported in fragment shaders
early_fragment_tests
_center
_centroid
_sample
_offset
_perspective
_no_perspective
air.interpolate
agc.pull_model_
_component_coefficients
Raster order group for imageblock field 
 in output struct (
) does not match raster order group in input struct (
Inconsistent raster_order_group() for color[
] : 
v28@?0^{Type=^{LLVMContext}b8b24I^^{Type}}8^v16I24
agx.lib_valid_bytes
[[front_facing]]
[[point_coord]]
[[depth]]
[[stencil]]
[[sample_mask]]
[[viewport_array_index]]
[[amplification_id]]
[[amplification_count]]
interpolation of attributes
discard_fragment()
threadgroup_barrier()
 unsupported in fragment functions bound to tile pipelines
agc.per_prim_varying.
xyzw
.agc_comp.
__telemetry
__DWARF
__helpers
__const
__common
<< Rest of the status file truncated>>
fragment
Vertex
intersection-(user)
AGC_STATUS_LOG_DRIVER_SHADERS
deprecated
shared
original_order
streaming
idempotent
cpp_ptr_type
cpp_str_type
flexbuffer
AGCFragmentContextStateAGP
fragmentOnly
openglMode
enableHLSLDiscardSemantics
blendState[0]: 
blendState[1]: 
blendState[2]: 
blendState[3]: 
blendState[4]: 
blendState[5]: 
blendState[6]: 
blendState[7]: 
AGCFragmentContextState
fragmentState
colorMaskState
AGCFragmentState
GL and Metal state:
alphaToCoverage
alphaToOne
sampleCoverage
GL specific state:
depthStencilWriteDisabled
logicOp
logicOpState
alphaTest
alphaTestFunc
smoothPoints
pointSpriteEnabled
outputPointSize
shaderDebugEnable
AGCLogicOp_Unknown
AGCLogicOp_CLEAR
AGCLogicOp_AND
AGCLogicOp_AND_REV
AGCLogicOp_COPY
AGCLogicOp_AND_INV
AGCLogicOp_XOR
AGCLogicOp_OR
AGCLogicOp_NOR
AGCLogicOp_EQUIV
AGCLogicOp_INV
AGCLogicOp_OR_REV
AGCLogicOp_COPY_INV
AGCLogicOp_OR_INV
AGCLogicOp_NAND
AGCLogicOp_SET
AGCLogicOp_NOOP
AGCCompareFunction_NONE
AGCCompareFunction_NEVER
AGCCompareFunction_LESS
AGCCompareFunction_LEQUAL
AGCCompareFunction_GREATER
AGCCompareFunction_GEQUAL
AGCCompareFunction_EQUAL
AGCCompareFunction_NOTEQUAL
AGCCompareFunction_ALWAYS
AGCColorMaskState
redEnableBits
greenEnableBits
blueEnableBits
alphaEnableBits
AGCBlendState
enabled
srcA
dstA
equation
equationA
AGCBlendFactor_Unknown
AGCBlendFactor_ZERO
AGCBlendFactor_ONE
AGCBlendFactor_SRC_COLOR
AGCBlendFactor_ONE_MINUS_SRC_COLOR
AGCBlendFactor_SRC_ALPHA
AGCBlendFactor_ONE_MINUS_SRC_ALPHA
AGCBlendFactor_DST_COLOR
AGCBlendFactor_ONE_MINUS_DST_COLOR
AGCBlendFactor_DST_ALPHA
AGCBlendFactor_ONE_MINUS_DST_ALPHA
AGCBlendFactor_SRC_ALPHA_SATURATE
AGCBlendFactor_CONST_COLOR
AGCBlendFactor_ONE_MINUS_CONST_COLOR
AGCBlendFactor_CONST_ALPHA
AGCBlendFactor_ONE_MINUS_CONST_ALPHA
AGCBlendFactor_SRC1_COLOR
AGCBlendFactor_ONE_MINUS_SRC1_COLOR
AGCBlendFactor_SRC1_ALPHA
AGCBlendFactor_ONE_MINUS_SRC1_ALPHA
AGCBlendEquation_Unknown
AGCBlendEquation_MIN
AGCBlendEquation_MAX
AGCBlendEquation_ADD
AGCBlendEquation_SUB
AGCBlendEquation_REVSUB
AGCBlendEquation_ADD_OVERRIDE_BLEND_SRC_COLOR
 <<exit node>>
__agc.ctx_switch
mesh_analysis
Translator
Target 
Unable to parse IDL: 
------ Start %s Metadata %s shader %d ------
------ End %s Metadata %s shader %d ------
air.mesh
agc.driver_constants.amp_count
bounds_check_failed
bounds_check_done
air.gpe.emit_nop_token
air.set_position_mesh
air.set_point_size_mesh
air.set_clip_distance_mesh
air.set_render_target_array_index_mesh
air.set_viewport_array_index_mesh
air.set_primitive_id_mesh
air.set_primitive_culled_mesh
air.set_index_mesh
air.set_indices_mesh.v2i8
air.set_indices_mesh.v4i8
air.set_vertex_data_mesh
air.set_primitive_data_mesh
air.set_primitive_count_mesh
.v3i8
.v3i16
.v3i32
.v3f16
.v3f32
air.mesh_type_info
air.clip_distance_array_size
air.primitive_culled
agc.per_prim.primitive_address
agc.per_prim.primitive_address_2
agc.per_prim.primitive_id
Following fragment input(s) mismatching mesh shader output type(s) or not written by mesh shader: 
` mismatching mesh shader output type(s) or not written by mesh shader
air.vertex_data
air.primitive_data
air.mesh_vertex_data
air.mesh_primitive_data
agc.main.aux.passthrough_vertex
air.gpe.get_grid_properties_no_os
air.gpe.get_grid_properties
agc.gpe.grid_properties
air.gpe.emit_non_indexed_primitive_draw_token
air.gpe.emit_primitive_draw_token
air.line
air.point
air.triangle
mesh
AGCMeshContextStateAGP
maxVertexAmplificationCount
addDefaultPointSize
noObjectShader
air.work_group_size
agc.gpe.get_payload_buffer
agc.mesh_emulation_state_t
agc.mesh_state_buffer
agc.gpe_object_state_base
agc.gpe_mesh_state_base
air.gpe.get_allocation_base
agc.gpe.payload_buffer
agc.gpe.object_metadata
agc.gpe.mesh_metadata
agc.gpe.vdm_stream
agc.gpe.index_buffer
agc.gpe.vertex_buffer
agc.gpe.primitive_buffer
agc.address_space_mutate.temp
agc.rewritten_struct
air.object
air.max_mesh_work_groups
agc.ms_childcount
air.set_threadgroups_per_grid_mesh_properties
agc.gpe.get_payload_id
AGCObjectContextStateAGP
bufferBoundsCheckMode
disableDMAPromotion
agc.view_mappings_pointer_global
Texture writes not supported in vertex shaders
air.get_vertex_id.i32
air.get_vertex_id.i16
air.get_instance_id.i32
air.get_instance_id.i16
air.get_base_instance.i32
air.get_base_vertex.i32
base_vertex
air.get_base_vertex.i16
base_instance
air.get_base_instance.i16
air.amplification_mask
Following fragment input(s) mismatching vertex shader output type(s) or not written by vertex shader: 
Fragment input(s) `
` mismatching vertex shader output type(s) or not written by vertex shader
agx.vertex_amp_mode
count
mask
------ Start flat varying analysis for %s shader %u  ------
Promoted varying: {semantic: "%s", flat_components: %s%s%s%s}
------ End flat varying analysis for %s shader %u  ------
After inliner in AGCLLVMAGPVertexShaderRegular::simplifyGenericIR
AGX_MTL_TESSELLATION_VS_WRITETHROUGH
.elem
.sum
Cannot DMA promote %s : pointer bitcast to non-pointer type
DMA promotion %s : truncated extend bitcast pattern
DMA promotion %s : reinterpreted array bitcast pattern
DMA promotion %s : truncate to smaller sized type pattern
DMA promotion %s : unrecognized GEP bitcast pattern: 
bitcast: %s
load:    %s
DMA promotion %s : can't combine bitcast types
DMA promotion %s : GEP-of-bitcast can't combine bitcast types
Cannot DMA promote %s : unknown GEP-of-bitcast use
Cannot DMA promote %s : GEP-of-bitcast needs to index to a scalar
DMA promotion %s : reinterpreted array bitcast pattern (through struct-array GEP)
Cannot DMA promote %s : unknown GEP bitcast use
Cannot DMA promote %s : GEP not used in a load
Cannot DMA promote %s : found a non-GEP use
Cannot DMA promote %s : GEP not indexed with instance_id/vertex_id
Cannot DMA promote %s: GEP indexed with index type not matching base type
Cannot DMA promote %s: GEP indexed with vertex_id and divisor with bias
Cannot DMA promote %s : GEP indexed inconsistently
Will not coerce strided access %s : GEP not indexed with instance_id/vertex_id
Will not coerce strided access %s : GEP indexed inconsistently
agc.struct.coerced_arg
Will not coerce pointer %s : type size %u not a multiple of 4
arg%d.%d
arg%d
Cannot DMA promote %s : type size %u not a multiple of 4
Cannot DMA promote %s : ran out of vi's, need %u, already allocated %u, limit %u
vertex_input
DMA promoting %s to VI, attribute size = %u words, only words [%u .. %u] actually used
DMA Entry = {reg_offset: %u, size : %u, offset %u, stride; %u, instanced: %s, div: %u, base_after_divisor: %s}
false
air.patch
MTLTessellationFactorFormat and inside_tessellation_factor shader input type mismatch
MTLTessellationFactorFormat and edge_tessellation_factor shader input type mismatch
agc.control_point_index_buffer
air.get_num_patch_control_points
agc.instance_id_bias
agc.patch_index_buffer_enabled
agc.patch_start
agc.patch_count
agc.base_instance
agc.instance_count
agc.patch_count_multiplier
agc.patch_count_shift
agc.instance_count_multiplier
agc.instance_count_shift
agc.pc_times_ic_multiplier
agc.agc.pc_times_ic_shift
agc.is_outer_edge_draw
agc.num_patch_control_points
agc.instance_stride_in_tf_units
agc.patch_index_buffer
patch_id_merge
patch_id_indirect
agc.tessellation_factor_buffer
tess_factor_struct
agc.internal_draw_index_offset
agc.internal_per_patch_id
agc.internal_per_patch_data
agc.one_over_inner_tess_table
agc.vertex_location_in_patch.uv
generated(
vertex
post-tessellation-vertex-hw
post-tessellation-vertex-sw
AGCVertexContextStateAGP
partition_mode
step_function
vertex_amplification_mode
manufactureUnlinkedVaryings
customBorderColor
flatVaryingAnalysis
positionInvariance
disableFMAFold
Pow2
Integer
FractionalOdd
FractionalEven
PerPatch
PerInstance
PerPatchPerInstance
VertexAmplificationModeCount
VertexAmplificationModeMask
air.imageblock_index
float2
float3
float4
packed_float
packed_float2
packed_float3
packed_float4
half2
half3
half4
packed_half
packed_half2
packed_half3
packed_half4
int2
int3
int4
packed_int
packed_int2
packed_int3
packed_int4
uint2
uint3
uint4
packed_uint
packed_uint2
packed_uint3
packed_uint4
short2
short3
short4
packed_short
packed_short2
packed_short3
packed_short4
ushort2
ushort3
ushort4
packed_ushort
packed_ushort2
packed_ushort3
packed_ushort4
char2
char3
char4
packed_char
packed_char2
packed_char3
packed_char4
uchar2
uchar3
uchar4
packed_uchar
packed_uchar2
packed_uchar3
packed_uchar4
bool2
bool3
bool4
packed_bool
packed_bool2
packed_bool3
packed_bool4
float2x2
float2x3
float2x4
float3x2
float3x3
float3x4
float4x2
float4x3
float4x4
half2x2
half2x3
half2x4
half3x2
half3x3
half3x4
half4x2
half4x3
half4x4
atan_merge
less_than_one
not_less_than_one
llvm.fma.
llvm.agx.powr.f16
llvm.agx.powr.f32
llvm.ctpop.i16
Unsupported float atomic operation for given target.
AGC_ENABLE_IS_UNIFORM_STRIPPING
llvm.assume
llvm.agx.is.uniform
f.f16
f.f32
s.i8
s.i16
s.i32
s.i64
u.i1
u.i8
u.i16
u.i32
u.i64
.rne
.rtp
.rtn
.?rnd?
.sat
.rgb10a2.v4f
.rgb10.v3f
unorm.rgb565.v3f
unorm4x8.srgb.v4f
unorm.rg11b10f.v3f
unorm.rgb9e5.v3f
.sub
.xor
.and
.min
.max
local
.max.u.i64
.min.u.i64
.xchg.i32
.cmpxchg.weak.i32
.store.i32
.load.i32
global.add.f32
global.sub.f32
global.xchg.f32
global.cmpxchg.weak.f32
global.store.f32
global.load.f32
acos
atan
powr
cosh
tanh
rint
ceil
fabs
fmin
fract
rsqrt
sqrt
fast_acos
fast_asin
fast_atan
fast_atan2
fast_exp10
fast_log10
fast_acosh
fast_asinh
fast_atanh
fast_pow
fast_powr
fast_cosh
fast_sinh
fast_tanh
fast_cos
fast_sin
fast_tan
fast_sincos
fast_round
fast_fmod
fast_mod
fast_exp
fast_exp2
fast_ldexp
fast_log
fast_log2
fast_rsqrt
fast_sqrt
fast_ceil
fast_fabs
fast_floor
fast_fract
fast_rint
fast_trunc
fast_fmax
fast_fmin
gamma_expand
gamma_compress
gamma_expand_xr
gamma_compress_xr
convert
pack
unpack
abs_diff
add_sat
sub_sat
hadd
rhadd
clamp
mad_hi
mad_sat
mul_hi
rotate
popcount
extract_bits
insert_bits
reverse_bits
any_msb
all_msb
saturate
sign
fast_clamp
fast_saturate
dfdx
dfdy
fwidth
atomic
assert
get_simd_width
get_thread_execution_width
simdgroup
is_uniform
mul24
mad24
min3
fmin3
fast_fmin3
max3
fmax3
fast_fmax3
median3
fmedian3
fast_fmedian3
get_unique_identifier_compute_pipeline_state
get_unique_identifier_render_pipeline_state
get_unique_identifier_indirect_command_buffer
get_unique_identifier_visible_function_table
get_threads_per_simdgroup
quad_broadcast
quad_shuffle
quad_shuffle_up
quad_shuffle_down
quad_shuffle_xor
quad_shuffle_rotate_up
quad_shuffle_rotate_down
get_quad_element
get_warped_coordinates
get_dewarped_coordinates
map_screen_to_physical_coordinates
map_physical_to_screen_coordinates
quad_ballot
simd_broadcast
simd_ballot
simd_shuffle
simd_shuffle_up
simd_shuffle_down
simd_shuffle_xor
simd_shuffle_rotate_up
simd_shuffle_rotate_down
get_thread_index_in_simdgroup
get_simdgroup_index_in_threadgroup
simd_active_threads_mask
quad_active_threads_mask
simd_all
simd_any
quad_all
quad_any
simdgroup_matrix_8x8_load
simdgroup_matrix_8x8_store
simdgroup_matrix_8x8_multiply_accumulate
simdgroup_matrix_8x8_init_diag
simdgroup_matrix_8x8_init_filled
quad_and
quad_or
quad_xor
quad_product
quad_sum
quad_max
quad_min
quad_prefix_inclusive_product
quad_prefix_inclusive_sum
quad_prefix_exclusive_product
quad_prefix_exclusive_sum
quad_is_helper_thread
quad_is_first
quad_broadcast_first
simd_and
simd_or
simd_xor
simd_product
simd_sum
simd_max
simd_min
simd_prefix_inclusive_product
simd_prefix_inclusive_sum
simd_prefix_exclusive_product
simd_prefix_exclusive_sum
simd_is_helper_thread
simd_is_first
simd_broadcast_first
simd_shuffle_and_fill_up
simd_shuffle_and_fill_down
quad_shuffle_and_fill_up
quad_shuffle_and_fill_down
get_simdgroup_size
get_thread_position_in_grid
get_position
get_sample_id
get_vertex_id
get_instance_id
get_amplification_id
get_patch_id
get_render_target_array_index
asin_merge
le_point_7
gt_point_7
acos_merge
fence
store
diag
quad_
down
AGC_SIMD_ROTATE_AS_SHUFFLE_AND_FILL
Simplify Identity: %s(%s)
llvm.log
llvm.exp2
llvm.log2
llvm.rsqrt
local-store
AGX_LM_SPILL_ID_MIN
AGX_LM_SPILL_ID_MAX
AGX_LM_SPILL_SIZE
AGX_LM_SPILL_SGPR
agx.sgpr_emulation
cl_local
air.simdgroup.barrier
conservativelmfencing
agc.stagein_buffer_pointer.
agc.lm_size
gin793.loop.end
gin793.loop.begin
local_size
air.get_global_linear_id.i32
air.get_global_linear_id.i16
agc.local_slice_and_linear_size
agc.local_slice_mul_and_shift
agc.local_xdim_mul_and_shift
agc.indirect_wg_count_buffer_pointer.
agx.group_id_
cl_group_id_
kernel_entry
early_out_block
agc.barrier_target_count
agc.barrier_counter
cl_barrier
agc.mem_fence_addr
gpuGatherOffsets
gpu_gather_compute
pdsPatchUpOffsets
pds_patchup_compute
cei_pds_gen_gen1
cei_pds_gen_gen2
cei_pds_gen_range_exec_gen1
cei_pds_gen_range_exec_gen2
agc.lib_size_in_bytes
agc.indirect_wg_size_buffer_pointer.
agc.fast_integer_divide_buffer_pointer
agc.split_dispatch_parameters.
air.get_simdgroups_per_threadgroup.i32
air.get_simdgroups_per_threadgroup.i16
air.get_dispatch_simdgroups_per_threadgroup.i32
air.get_dispatch_simdgroups_per_threadgroup.i16
air.get_thread_index_in_simdgroup.i32
air.get_thread_index_in_simdgroup.i16
air.get_simdgroup_index_in_threadgroup.i32
air.get_simdgroup_index_in_threadgroup.i16
MSAA imageblock features are not available to compute kernels
cei_esl_gen_range_exec_gen1
cei_esl_gen_range_exec_gen2
cei_esl_gen_range_exec_gen3
indirectCommandBuffer
params
cei_patch_exec_gen4
cei_patch_exec_gen5
cei_range_exec_gen4
cei_range_exec_gen5
gpu_gather_compute_gen2
per_dispatch_info
os_alloc_mailbox_gpuva
ms_alloc_mailbox_gpuva
gpe_umd
per_kick_info
alloc_mailbox_gpuva
gpe_setup
os_free_mailbox_gpuva
gpe_post_os
ms_free_mailbox_gpuva
gpe_pre_ms
cei_esl_gen_gen1
cei_esl_gen_gen2
cei_esl_gen_gen3
progress_marker_compute
markerBuffer
left
right
passLinkAddress
failLinkAddress
linkToken
agc.computePredicateCompare
compute_control_flow_predicate_g5
compute_control_flow_predicate_g9
compute_control_flow_predicate_g10
compute_control_flow_predicate_g11
compute_control_flow_predicate_g12
compute_control_flow_predicate_g13
compute_control_flow_predicate_g14
bvh_encode_init_default
bvh_encode_init_motion
bvh_calc_offsets_default
bvh_calc_offsets_motion
bvh_encode_nodes_default
bvh_encode_nodes_motion
bvh_encode_leaves_tris_default
bvh_encode_leaves_tris_motion
bvh_encode_leaves_tri_pairs_default
bvh_encode_leaves_tri_pairs_motion
bvh_encode_leaves_bboxes_default
bvh_encode_leaves_bboxes_motion
bvh_encode_leaves_instances_default
bvh_encode_leaves_instances_user_id
bvh_encode_leaves_instances_motion
bvh_serialize
bvh_deserialize
bvh_write_indirect_args
bvh_write_double_indirect_args
bvh_serialize_write_meta
bvh_get_serialized_size
bvh_get_deserialized_size
bvh_get_instance_bounds_default
bvh_get_instance_bounds_user_id
bvh_get_instance_bounds_motion
bvh_get_compacted_size_32
bvh_get_compacted_size_64
bvh_copy
bvh_copy_explicit
bvh_copy_motion_transforms
bvh_add_constant
bvh_node_allocation_init
bvh_node_allocation_loop_calc_sizes_default
bvh_node_allocation_loop_calc_sizes_motion
bvh_node_allocation_loop_prefix_sum
bvh_node_allocation_loop_allocate_default
bvh_node_allocation_loop_allocate_motion
bvh_node_allocation_loop_finish
bvh_clear
bvh_tri_pairs_calc_connectivity
bvh_tri_pairs_calc_connectivity_two_directional
bvh_tri_pairs_do_pairing
bvh_tri_pairs_do_pairing_parallel
bvh_refit_leaf_nodes_tris_default
bvh_refit_leaf_nodes_tri_pairs_default
bvh_refit_leaf_nodes_bboxes_default
bvh_refit_interior_nodes_default
bvh_refit_root_node_default
compareEqual
compareNotEqual
compareGreater
compareGreaterOrEqual
compareLess
compareLessOrEqual
gpu-gather-compute-driver-legacy
pds-patchup-compute-driver-legacy
compute-ei-range-exec
compute-ei-patch
gpu-gather-compute-driver-gen3
geometry-pipeline-emulation-umd-shader
geometry-pipeline-emulation-setup-shader
geometry-pipeline-emulation-post-os-shader
geometry-pipeline-emulation-pre-ms-shader
compute-progress-marker-driver-gen3
compute-control-flow-predicate-gen3
compute-progress-marker-driver-legacy
compute-control-flow-predicate-legacy
AGCComputeStateAGP
mutableBuffers
wgSizeMultipleOfSIMDWidth
genCompilerStatistics
genTelemetryStatistics
disableTextureRWBoundsCheck
debugInstrumentationEnabled
textureWriteFPRoundingMode
execute-indirect-compute-driver-legacy
execute-indirect-range-exec-compute-driver-legacy
execute-indirect-range-exec-compute-driver-g10
execute-indirect-compute-driver-g10
compute-bvh-builder
air.dylib
agx.enable_got
agx.loader.state
air.visible_function_references
air.visible_function_reference
dynamic-library
AGCDynamicLibraryStateAGP
air.fragment
air.rounding_mode
air.fragment_rate
color
air.post_depth_coverage
agx.color_sample_rate
agx.fragment_rate
rasterization
agx.sample_mapping
Fragment shaders do not support shader declared threadgroup variables
agc.alpha_test_ref
feedback_output
AGC_RETURN_FOR_DEPTH_FEEDBACK_DISCARD
discard_bool
agc.coverage
agc.front_direction
air.primitive_id
primitive_id not supported for this device
barycentric_coords not supported for this device
air.get_num_samples.i32
air.get_sample_position.v2f32
agc.sample_positions
agc.provoking_vertex_index
agc.blend_color
agc.viewport_depth_range_pointer_global
AGC_CLAMP_TO_F16_LIMITS
AGC_F32_TO_F16_RTZ
bool
char
int8_t
uchar
uint8_t
unsigned char
int16_t
uint16_t
unsigned short
int32_t
uint32_t
unsigned int
air.implicit_imageblock_data
air.get_imageblock_width
air.get_imageblock_height
air.get_imageblock_samples
air.get_imageblock_num_colors
air.get_color_coverage_mask
air.load
air.store
.imageblock
.implicit_imageblock
loop.done
loop.forward
loop.reverse
llvm.agx2.image.block.ydim
8unorm
8snorm
16unorm
16snorm
air.raster_order_group
air.location_index
air.arg_type_name
air.indirect_argument
air.indirect_constant
air.arg_type_size
air.address_space
air.indirect_command_buffer
air.command_buffer
air.compute_pipeline_state
air.render_pipeline_state
air.perspective
air.flat
air.no_perspective
air.center
air.centroid
air.sample
uint
short
ushort
float
half
implicit
explicit
air.imageblock_data_size
air.arg_type_align_size
air.alias_implicit_imageblock
air.alias_implicit_imageblock_render_target
Aliasing implicit image block at unset color attachment: 
air.struct_type_info
air.imageblock_master
Large MRT not supported with explicit image blocks
air.render_target
air.buffer_size
air.binding
agx.asm_statistics
air.max_work_group_size
air.uniform_atomics_mode
AGC_DISABLE_ATOMIC_OPTIMIZATIONS
disabled
dynamic-enabled
static-enabled
Tile shaders do not support shader declared threadgroup variables
agx.sample_rate
v24@?0r^v8r^{LIBStructFieldInfo=IIIII^{Type}B}16
agc.tile.dispatch.dim.x
agc.tile.dispatch.dim.y
quad_x
quad_y
num_quads_x
air.get_global_size.i32
air.get_global_size.i16
air.get_global_id.i32
air.get_global_id.i16
air.get_local_size.i32
air.get_local_size.i16
air.get_local_id.i32
air.get_local_id.i16
air.get_local_linear_id.i32
air.get_local_linear_id.i16
air.get_num_groups.i32
air.get_num_groups.i16
air.get_group_id.i32
air.get_group_id.i16
air.get_dispatch_local_size.i32
air.get_dispatch_local_size.i16
air.get_quadgroups_per_threadgroup.i32
air.get_quadgroups_per_threadgroup.i16
air.get_dispatch_quadgroups_per_threadgroup.i32
air.get_dispatch_quadgroups_per_threadgroup.i16
air.get_quad_group.i32
air.get_quad_group.i16
tile
AGCTileState
maxTotalThreadsPerThreadgroup
dispatchSizeMatchesTileSize
AGCDrawBufferState
enabledBits
sampleCount
colorSampleCount
outputPartitionSize
LIBSpilling
unused
encoded : 
encoded[0]
encoded[1]
encoded[2]
encoded[3]
encoded[4]
encoded[5]
encoded[6]
encoded[7]
AGCDrawBuffer
pbeSourceFormat
numWrittenComponents
gammaCorrection
preEmitSwizzle
outputPartitionOffset
AGCEncodedDrawBufferPBESourceFormatTypeInvalid
AGCEncodedDrawBufferPBESourceFormatTypeSRGBUnorm8
AGCEncodedDrawBufferPBESourceFormatTypeSnorm8
AGCEncodedDrawBufferPBESourceFormatTypeUnorm8
AGCEncodedDrawBufferPBESourceFormatTypeSint8
AGCEncodedDrawBufferPBESourceFormatTypeUint8
AGCEncodedDrawBufferPBESourceFormatTypeSnorm16
AGCEncodedDrawBufferPBESourceFormatTypeUnorm16
AGCEncodedDrawBufferPBESourceFormatTypeSint16
AGCEncodedDrawBufferPBESourceFormatTypeUint16
AGCEncodedDrawBufferPBESourceFormatTypeSint32
AGCEncodedDrawBufferPBESourceFormatTypeUint32
AGCEncodedDrawBufferPBESourceFormatTypeF16
AGCEncodedDrawBufferPBESourceFormatTypeF16SignedClamped
AGCEncodedDrawBufferPBESourceFormatTypeF16UnsignedClamped
AGCEncodedDrawBufferPBESourceFormatTypeXR10
AGCEncodedDrawBufferPBESourceFormatTypeXRF16
AGCEncodedDrawBufferPBESourceFormatTypeF32
AGCEncodedDrawBufferPBESourceFormatTypeUint1010102
AGCEncodedDrawBufferPBESourceFormatTypeUnorm1010102
AGCEncodedDrawBufferPBESourceFormatTypeF9e5
AGCEncodedDrawBufferPBESourceFormatTypeF111110
PreEmitSwizzleRGBA
PreEmitSwizzleBGRA
PreEmitSwizzleRABG
PreEmitSwizzleRAGB
PreEmitSwizzleGABR
PreEmitSwizzleGBRA
air.sample_texture_
air.sample_depth_
air.sample_compare_texture_
air.sample_compare_depth_
air.read_texture_
air.read_depth_
air.write_texture_
air.write_depth_
air.gather_texture_
air.gather_depth_
air.gather_compare_texture_
air.gather_compare_depth_
air.read_texture_buffer_1d
air.write_texture_buffer_1d
air.calculate_clamped_lod_texture_
air.calculate_clamped_lod_depth_
air.calculate_unclamped_lod_texture_
air.calculate_unclamped_lod_depth_
1d_array
2d_array
cube
cube_array
.rte
.v4f32
.v4f16
.u.v4i32
.s.v4i32
.u.v4i16
.s.v4i16
_grad
2d_ms_array
2d_ms
.i32
air.write_imageblock_slice_to_texture_
air.get_width_texture_
air.get_width_depth_
air.get_height_texture_
air.get_height_depth_
air.get_depth_texture_
air.get_array_size_texture_
air.get_array_size_depth_
air.get_num_mip_levels_texture_
air.get_num_mip_levels_depth_
air.get_num_samples_texture_
air.get_num_samples_depth_
air.get_width_texture_buffer_1d
air.fence_texture_
buffer_1d
texture_buffer_1d
texture_1d
texture_1d_array
texture_2d
texture_2d_array
texture_3d
texture_cube
texture_cube_array
texture_2d_ms
texture_2d_ms_array
depth_2d
depth_2d_array
depth_cube
depth_cube_array
depth_2d_ms
depth_2d_ms_array
air.is_null_
air.get_null_
air.get_unique_identifier_
.i16.s.v4i32
.i16.u.v4i32
air.atomic_load_explicit_
air.atomic_store_explicit_
air.atomic_xchg_explicit_
air.atomic_cmpxchg_weak_explicit_
air.atomic_fetch_
_explicit_
sampler
air.get_vertex_id
air.vertex_id
air.get_instance_id
air.instance_id
air.get_base_vertex
air.base_vertex
air.get_base_instance
air.base_instance
air.get_global_id
air.thread_position_in_grid
air.get_local_id
air.thread_position_in_threadgroup
air.get_local_linear_id
air.thread_index_in_threadgroup
air.get_group_id
air.threadgroup_position_in_grid
air.get_global_size
air.threads_per_grid
air.get_local_size
air.threads_per_threadgroup
air.get_num_groups
air.threadgroups_per_grid
air.get_thread_execution_width
air.thread_execution_width
air.get_dispatch_local_size
air.dispatch_threads_per_threadgroup
air.get_quad_element
air.thread_index_in_quadgroup
air.get_quad_group
air.quadgroup_index_in_threadgroup
air.get_quadgroups_per_threadgroup
air.quadgroups_per_threadgroup
air.get_dispatch_quadgroups_per_threadgroup
air.dispatch_quadgroups_per_threadgroup
air.get_threads_per_simdgroup
air.threads_per_simdgroup
air.get_thread_index_in_simdgroup
air.thread_index_in_simdgroup
air.get_simdgroup_index_in_threadgroup
air.simdgroup_index_in_threadgroup
air.get_simdgroups_per_threadgroup
air.simdgroups_per_threadgroup
air.get_dispatch_simdgroups_per_threadgroup
air.dispatch_simdgroups_per_threadgroup
air.pixel_position_in_tile
air.pixels_per_tile
air.tile_index
air.get_patch_id
air.patch_id
air.get_amplification_id
air.get_render_target_array_index
air.get_intersection_params_intersection_query
air.get_world_space_ray_origin_intersection_query
air.get_world_space_ray_direction_intersection_query
air.get_ray_min_distance_intersection_query
air.get_candidate_intersection_type_intersection_query
air.get_candidate_triangle_distance_intersection_query
air.is_candidate_non_opaque_bounding_box_intersection_query
air.get_candidate_geometry_id_intersection_query
air.get_candidate_primitive_id_intersection_query
air.get_candidate_instance_id_intersection_query
air.get_candidate_user_instance_id_intersection_query
air.get_candidate_object_to_world_transform_intersection_query
air.get_candidate_world_to_object_transform_intersection_query
air.get_candidate_triangle_barycentric_coord_intersection_query
air.is_candidate_triangle_front_facing_intersection_query
air.get_candidate_ray_origin_intersection_query
air.get_candidate_ray_direction_intersection_query
air.get_candidate_primitive_data_intersection_query
air.get_committed_intersection_type_intersection_query
air.get_committed_distance_intersection_query
air.get_committed_geometry_id_intersection_query
air.get_committed_primitive_id_intersection_query
air.get_committed_instance_id_intersection_query
air.get_committed_user_instance_id_intersection_query
air.get_committed_object_to_world_transform_intersection_query
air.get_committed_world_to_object_transform_intersection_query
air.get_committed_triangle_barycentric_coord_intersection_query
air.is_committed_triangle_front_facing_intersection_query
air.get_committed_ray_origin_intersection_query
air.get_committed_ray_direction_intersection_query
air.get_committed_primitive_data_intersection_query
air.intersect
.instancing
.triangle_data
.world_space_data
.primitive_motion
.instance_motion
.extended_limits
air.allocate_intersection_query
air.reset_intersection_query
air.next_intersection_query
air.abort_intersection_query
air.commit_triangle_intersection_intersection_query
air.commit_bounding_box_intersection_intersection_query
air.deallocate_intersection_query
agc.driver.api_texture.
agc.driver.api_sampler.
agc.driver.ab_texture.
agc.driver.ab_sampler.
air.compile_options
air.compile.fast_math_disable
Fragment_State_Program
OpenGL ES GLSL
no-infs-fp-math
no-nans-fp-math
air.visible
llvm.dbg.cu
air.vertexFetchFunction
function-instrument
------ Compiling function : %s ------
.fast
.nonfast
agc.
air.
Disabling non-inlined functions for ES1 vertex shader
air.imageblock_data
air.imageblock
Inlining all functions due to use of image blocks
air.indirect_buffer
Inlining all functions due to use of indirect argument buffer
air.texture
Inlining all texture functions due to the use of a RW texture
AGX_STRESS_NO_INLINING
AGX_FORCE_LATE_INLINING
AGX_FORCE_OPTSIZE
AGX_ENABLE_INTERSECTION_CALL
air.external_initializations
buffer_bindings
oob_check_enable
MTL_COMPAT_NO_OOB_FAULT
wrapper_exit
agx.max_work_group_size
get_null_intersection_function_table
get_size_command_buffer
get_data_pointer_primitive_acceleration_structure
get_data_pointer_instance_acceleration_structure
sw_ads_heap_index
sw_ads_pointer
resource_index
heap_offset
agc.trace_buffer_vertex_id
agc.trace_buffer_instance_id
agc.trace_buffer_amplification_id
agc.trace_buffer_patch_id
agc.trace_buffer_render_target_array_index
agc.global_constructors
allocate_tls_end
allocate_tls
loop_global_constructors
agc.global_constructor_call
agc.global_constructor_call_node
agc.force_indirect_function_call_support
void_return
agc.stage_specific_dylib_global.
callees
air.function_groups
air.version
air.get_null_simdgroup_event
air.is_null_simdgroup_event
air.wait_simdgroup_events
AGC_DEBUG_LLVM_IR
------ Build Request Info ------
hash: %s
------ End Build Request Info ------
air.shaderSource
generic
------ Compilation flags for %s shader %u ------
Object fast-math flags: {nonan=%d, noinf=%d, nosignedzero=%d, allowrcp=%d, unsafealgebra=%d}
Target fast-math flags: {nonan=%d, noinf=%d, nosignedzero=%d, allowrcp=%d, unsafealgebra=%d}
Codegen fast-math options: { finite-math=%d, unsafe-fp-math=%d, less_pecise_fmad=%d}
------ End compilation flags for %s shader %u ------
after RemoveAndForwardAllocaStores
after simplifyGenericIR
after initCompile
after setupShaderInputs
after setupBufferAliasInfo
after setupStackOOBCheck
after setupInterpolationFunctions
after setupArgumentBuffers
after replaceSimdgroupAtomicWaitNotify
after setupThreadLocalStorage
after setupShaderWrapper
after setupShaderOutputs
after cleanupShaderIR
After setupIndirectSamplers
After allocateTexturesAndSamplers
after setupImageBlocks
after replaceTexturesAndSamplers
after simplifyTrigIdentities
after optimizeThreadgroupBarriers
after markInvariantOutputs
after replaceFunctionGroups
after replaceSimdgroupAsyncCopy
after replacePreRuntimeLinkBuiltins
after linking rt runtime
after linking gpe runtime
after linking ei runtime
after linking vf runtime
after linking texture atomic runtime
AGC_ENABLE_F16_FASTMATH_BUILTINS
after replace f16 builtins
after linking metal runtime
AGC_ENABLE_PRECISE_MATH
after linking precise metal runtime
after replaceIndirectResources
after replaceRaytracingFunctions
after replaceBuiltins
after promoteGlobalConstants
after improveDMAPromotionOpportunity
after prunePRIDsOfDeletedGlobals
after bindDylibResources
after finalizeDriverBindings
after overrideFunctionAttributesAndLinkage
after overrideExternallyInitializedLinkage
after generateAuxiliaryShaders
agc.byval.
agc.local_buffer_pointers.
agc.buffer_pointers.
agx.buffer.alias.domain
agx.buffer.alias.scopes
agc.buffer_pointers_array.
Total number of indirect argument buffer resources exceeded for
buffer(
): Argument buffer participates in modification as well as resource use
constant_gep
texture_gep
sampler_gep
buffer_gep
texture_load
sampler_load
buffer_load
): Unable to map argument buffer access to resource
): Argument buffer accessed with non-zero array index
bindless_index
bindless_index_as_ptr
write
read_gather
write_gather
agc.texture_heap.
pick_sampler
non_constant_sampler
constant_sampler
agc.sampler_heap.
agx.samplerHeapBufferIndex
agc.pipeline_state_heap.
agx.pipelineStateHeapBufferIndex
agc.indirect_command_buffer_heap.
agx.indirectCommandBufferHeapBufferIndex
agc.intersection_function_table_heap.
agx.intersectionFunctionTableHeapBufferIndex
agc.visible_function_table_heap.
agx.visibleFunctionTableHeapBufferIndex
agc.bvh_state_words_heap.
agc.sw_ads_heap.
scs_per_kick_configuration
agc.scs_per_kick_configuration.
agc.scs_per_shader_configuration.
packedFormat
AGX_FORCE_CS_SAMPLERS
agc.es1_sampler_lod_bias
!!!! Perf: Argument %s: failed to patten match the array of texture/sampler, spilling!!
air.byval
air.buffer
air.visible_function_table
air.primitive_acceleration_structure
air.instance_acceleration_structure
air.intersection_function_table
agc.const_sampler_heap_index_
agc.const_sampler_state_struct_ptr_
_agx_const_ss.
agc.const_sampler_state_words_
Read or write to cube texture not supported
Large MRT not supported with image block write
sample
sample_compare
gather_compare
sampler argument for 
 must be known at compile time
The specified rounding mode is not supported on this device.
agc.nnorm_sampler_wrapper_1d
agc.nnorm_sampler_wrapper_non_1d
agc.nnorm_sampler_1d
agc.nnorm_sampler_non_1d
skip_texture_buffer_write
texture_buffer_write
packedFormatAndAlpha
llvm.agx
llvm.agx2
agx2.air.indirect.format
agx.air.indirect
cleanup
indirect.switch.case
indirect.tex.write.end
%s: image or sample GV %s still has references: 
void AGCLLVMUserObject::cleanupSamplerGlobalVariables()
AGC_FORCE_BINDLESS
AGC_MAX_TEXTURE_REGISTERS
----- Texture allocations ------
[%08x - %08x] TS%d - TS%d
[%08x - %08x] bindless
loaded_sampler_heap_index
loaded_sampler_heap_index_ptr
AGC_FORCE_BINDLESS_HEAP
Indirect samplers are not supported
Could not statically determine the target of a texture write
Could not resolve texture/sampler references
Total number of textures and samplers (
) exceeds GPU allowance.
com.apple.agx
Encountered unlowered function call to 
agc.illegal_visible_function_call
Error: Encountered unsupported visible function call
agc.illegal_raytracing_function_call
Error: Encountered unsupported ray tracing function call
air.arg_name
air.get_size_intersection_function_table
air.atomic.global
air.simdgroup_atomic.global.notify
air.wg.barrier
simdgroup_atomic
AGC_YIELD_FORCE_BARRIER
AGC_YIELD_INSERT_BARRIER_FOR_DYLIB
AGX_DISABLE_STACK_OOB_CHECK
agx.stack_oob
.r8unorm
.r8snorm
.r16unorm
.r16snorm
.rg8unorm
.rg8snorm
.rg16unorm
.rg16snorm
.rgba8unorm
.srgba8unorm
.rgba8snorm
.rgba16unorm
.rgba16snorm
.rgb10a2
.rg11b10f
.rgb9e5
.v2i8
.v2i16
.v2i32
.v4i8
.v4i16
.v4i32
air.discard_fragment
_indirect
TF entry: (buf %d, slot %d, size %d) =  uvs(%d)
air.vertex
Vertex_State_Program
agc.driver_constants.
air.shared
air.position
air.invariant
air.clip_distance
air.point_size
air.viewport_array_index
air.render_target_array_index
AGC_DISABLE_VARYING_SPLITTING
AGC_FORCE_VARYING_SPLITTING
air.amplification_id
air.amplification_count
 type does not match between vertex and fragment function
air.vertex_transform_feedback
agc.tf_buffer
return_block
tf_write_block
agc.tf_writes_enable
AGC_POS_INVARIANCE
ConstantTypeDriverClearColor
ConstantTypeDriverSliceIndex
ConstantTypeDriverPBERotationMatrix
ConstantTypeDriverPBEState
ConstantTypeDriverFramebufferSlotAddress
ConstantTypeDriverEmitInfo
ConstantTypeDriverBlitTextureSrcLevel
ConstantTypeImageWidth
ConstantTypeImageHeight
ConstantTypeImageDepth
ConstantTypeImageDim2D
ConstantTypeImageDim3D
ConstantTypeImageArrayInfo
ConstantTypeImagePackFormat
ConstantTypeImageChannel
ConstantTypeImageChannelOrder
ConstantTypeImageMipmapCount
ConstantTypeImageSampleCount
ConstantTypeImageSampler
ConstantTypeLodBias
ConstantTypePhaseExecAddress
ConstantTypeVertexPointSizeAdjust
ConstantTypeVertexAttribInfo
ConstantTypeVertexDivisorScale
ConstantTypeFragmentFrontFaceAdjust
ConstantTypeFragmentAlphaTestRef
ConstantTypeFragmentCoordYAdjust
ConstantTypeFragmentBlendColor
ConstantTypeFragmentSampleCoverageState
ConstantTypeComputeGlobalOffsetX
ConstantTypeComputeGlobalOffsetY
ConstantTypeComputeGlobalOffsetZ
ConstantTypeComputeGlobalSizeX
ConstantTypeComputeGlobalSizeY
ConstantTypeComputeGlobalSizeZ
ConstantTypeComputeLocalSizeX
ConstantTypeComputeLocalSizeY
ConstantTypeComputeLocalSizeZ
ConstantTypeComputeNumGroupsX
ConstantTypeComputeNumGroupsY
ConstantTypeComputeNumGroupsZ
ConstantTypeComputeWorkDim
ConstantTypeComputeBarrierTargetCount
ConstantTypeComputeLocalArgumentOffset
ConstantTypeComputeMemFenceAddr
ConstantTypeComputeLocalSliceAndLinearSize
ConstantTypeComputeLocalSliceMulAndShift
ConstantTypeComputeLocalXDimMulAndShift
ConstantTypeComputeImageArraySize
ConstantTypeDriverTFWritesEnabled
ConstantTypeDriverTFBufferAddress
ConstantTypeBlitBufferSource
ConstantTypeBlitBufferDestination
ConstantTypeDriverPointSize
ConstantTypeTileDispatchDimX
ConstantTypeTileDispatchDimY
ConstantTypeTileCountX
ConstantTypeTileCountY
ConstantTypeLIBSizeInBytes
ConstantTypeBoundTextureMask
ConstantTypePatchID
ConstantTypePatchStart
ConstantTypeImageBaseLevel
ConstantTypeDriverConditionalEmitMask
ConstantTypeDriverBufferAddress
ConstantTypeBlitBufferWidth
ConstantTypeBlitBufferHeight
ConstantTypeBlitBufferStride
ConstantTypeBlitBufferViewStride
ConstantTypeBlitRegionOffsets
ConstantTypeBlitAddressRemappingFactor
ConstantTypeBlitTextureSlice
ConstantTypeComputeStageInGridOrigin
ConstantTypeComputeStageInGridSize
ConstantTypeVertexDummyDraw
ConstantTypeFragmentSamplePosition
ConstantTypeImageState
ConstantTypeBlitMipgenViewLevel
ConstantTypeBlitMipgenFirstLevel
ConstantTypeBlitMipgenFirstLevelSize
ConstantTypeBlitMipgenNumPasses
ConstantTypeBlitMipgenFirstSlice
ConstantTypeBlitMipgenNumSlices
ConstantTypeComputeLocalArgumentSize
ConstantTypeVertexAmplificationCount
ConstantTypeVertexAmplificationMask
ConstantTypeBlitDestOffsets
ConstantTypeBlitTextureSliceWrite
ConstantTypeBlitDestSizes
ConstantTypeBlitStepX
ConstantTypeBlitStepY
ConstantTypeBlitStepZ
ConstantTypeTextureHeapAddress
ConstantTypeImageHeapIndex
ConstantTypeSkipUniformAtomics
ConstantTypeTileWidth
ConstantTypeTileHeight
ConstantTypeImageUniqueID
ConstantTypeSamplerUniqueID
ConstantTypeTextureBaseAddress
ConstantTypeSparseQueueAddress
ConstantTypeBlitDestPaddedSizes
ConstantTypeBlitDestPaddedOffsets
ConstantTypeBlitSourceIndex
ConstantTypeBlitDestIndex
ConstantTypeDriverEMRTTileBufferAddress
ConstantTypeDriverEMRTSpilledPartitionSize
ConstantTypeDriverEMRTMaxConcurrentTiles
ConstantTypeLayeredVRREnabled
ConstantTypeBufferLength
ConstantTypeBufferBase
ConstantTypeThreadgroupMemorySize
ConstantTypeFragmentProvokingVertexIndex
ConstantTypeSamplerHeapIndex
ConstantTypeConstantSamplerHeapIndex
ConstantTypeTileOffsetX
ConstantTypeTileOffsetY
ConstantTypeTileDispatchRenderTargetArrayIndex
ConstantTypeGeometryPipelineEmulationStateAddress
ConstantTypeObjectAllocationMailbox
ConstantTypeMeshAllocationMailbox
ConstantTypeDriverClearColorArray
ConstantTypeDriverSliceIndexArray
ConstantTypeDriverPBERotationMatrixArray
ConstantTypeDriverDrawBufferState
ConstantTypeDriverBgoState
ConstantTypeDriverEmitInfoArray
ConstantTypeSparseQueueAddressArray
ConstantTypeTextureBaseAddressArray
ConstantTypeDriverEotStateKey
------ Start compilation key description for %s shader %u  ------
------ End compilation key description for %s shader %u  ------
agc.passthrough_vertex
passthrough_size
pad_size
agc.vertex_attrib_info
agc.tile_dispatch_vertex_point
agc.pointsize_info
agc.tile.width
agc.tile.height
agc.tile.offset.x
agc.tile.offset.y
{ /* No compilation key */ }
agc.tile.scale.x
agc.tile.scale.y
agc.tile.count.x
agc.tile.count.y
agc.tile.size.x
agc.tile.size.y
agc.tile.layer_index
passthrough
passthrough_vertexfetch
tile_dispatch_vertex_point
tile_dispatch_vertex_rect(base)
tile_dispatch_vertex_rect(per_layer_region)
tile_dispatch_vertex_rect(indirect)
tile_dispatch_vertex_rect(indirect/per_layer_region)
tile_dispatch_vertex_rect(layer_index)
tile_dispatch_vertex_rect(layer_index/per_layer_region)
tile_dispatch_vertex_rect(layer_index/indirect)
tile_dispatch_vertex_rect(layer_index/indirect/per_layer_region)
agc.tile_dispatch_vertex_rect
/metal_rt.metallib
UseGlobalISel
agc.global_constructor
AGC_ENABLE_UNSAFE_MATH
__GPU_REMARKS_MD
__GPU_LD_MD
__GPU_ARCH_LD_MD
__GPU_STATS_MD
backend
------ Start USC %s shader %u (compiler assembly) -------
AGC_ENABLE_STATUS_FILE_TIMING
Diag: %s 
------ End USC %s shader %u (compiler assembly) -------
readBitcode
AGC_DUMP_MACHO
------ Start dump mach-O for %s shader %u ------
------ End dump mach-O for %s shader %u ------
%s shader %u (%s)
------ Start LLVM IR %s -------
; %u instructions
------ End LLVM IR %s -------
%s shader %u (shader source)
Graphics
------ Start %s %s -------
------ End %s %s -------
AGC_ENABLE_TG_BOUNDS_CHECKING
agx.boundcheck
hardware_safety_check
checkdmapromotable
fullptrcheck
reporting
agx.compute_driver_bindings
agx.driver_bindings
agx.speculative_bindings
agx.dylib_bindings
Warning (Undefined behavior): integer drawbuffer format, but shader is writing floating point
agx.common.store.limits
const-calc
AGC_TEMP_REGS_IN_BYTES
agx.unified.store.limits
com.apple.Metal
print module
Before 
 (No change)
 ------
verify module
AGC: %s:%d:%s: *** Module verification failed %s pass '%s' : %s
agc_llvm_object.cpp
runOnModule
before
after
Module verification failed %s pass '%s' : %s
compute
compute-program
Create Plan failed:
__TEXT_CONST
__DATA_COMMON
__GPU_METADATA
__GPU_STATS__counters
__GPU_STATS__telemetry
v28@?0r^{_CompilerData=*QC^{relocation_info}I}8^^{section_64}16I24
AGC_ENABLE_ATOMIC_OPTIMIZATIONS_VERTEX_FRAGMENT
AGC_SKIP_TEXTURE_OOB_CHECKS
^{Value=^{Type}^{Use}Cb1b7Sb28b1b1b1b1}16@?0^{Value=^{Type}^{Use}Cb1b7Sb28b1b1b1b1}8
^{Value=^{Type}^{Use}Cb1b7Sb28b1b1b1b1}32@?0^{Value=^{Type}^{Use}Cb1b7Sb28b1b1b1b1}8^{Value=^{Type}^{Use}Cb1b7Sb28b1b1b1b1}16^{Value=^{Type}^{Use}Cb1b7Sb28b1b1b1b1}24
AGC_BIAS_F2I_VARYING
AGX_G10_IMAGE_WRITE_CACHE_CTL
AGX_IMAGE_WRITE_PERSISTANCE
MemoryReadL2Pers
air.fract.f16
air.fract.v2f16
air.fract.v3f16
air.fract.v4f16
-smpfwd
AGC_FLOAT_TO_FLOAT_RTZ_HW
is_float16_texture
end_write_image
SET_TOP_NIBBLE
NOPACK
FP32
FP16_NO_PACK
FP16_UNORM_POW2
FP16_UNORM16
FP16_UNORM8
UNSET_TOP_NIBBLE
FP16_UNORM10_OR_XR10
FP16_UNORM10
FP16_RGBXR10
FP16_OTHER_RGBXR10
FP16_ARGBV16
FP16_SRGBXR10_OR_SARGBV16
FP16_SRGBXR10
FP16_SARGBV16
LoadMCUCohMode
%s shader %u (driver disassembler)
------ Start USC %s -------
[Inst 
, offset 
 0x%04x
------- End USC %s --------
runtime.gen4.bc
llvm.agx1.cl.barrier
llvm.agx1.cl.global.barrier
llvm.agx1.memfence
llvm.agx1.sadd.sat.i16
llvm.agx1.sadd.sat.i32
llvm.agx1.uadd.sat.i16
llvm.agx1.uadd.sat.i32
llvm.agx1.ssub.sat.i16
llvm.agx1.ssub.sat.i32
llvm.agx1.usub.sat.i16
llvm.agx1.usub.sat.i32
llvm.agx1.smad.sat.i16
llvm.agx1.umad.sat.i16
llvm.agx1.flushNaN
llvm.agx1.atanc.f32
llvm.agx1.atanc.f16
llvm.agx1.sin.g5.f32
llvm.agx1.sin.g5.f16
llvm.agx1.itr.sample.2xf
llvm.agx1.itr.sample.4xf
llvm.agx1.itr.centroid.2xf
llvm.agx1.itr.centroid.4xf
llvm.agx1.itrproj.sample.2xf
llvm.agx1.itrproj.sample.4xf
llvm.agx1.itrproj.centroid.2xf
llvm.agx1.itrproj.centroid.4xf
llvm.agx1.itrcemgrad.tmp.3xf
llvm.agx1.imgwblk
llvm.agx1.lldiblk
llvm.agx1.lstiblk
llvm.agx1.pack.prog.i32.f32
llvm.agx1.pack.rne.u32
llvm.agx1.unpack.scale.s8888
llvm.agx1.unpack.scale.u8888
llvm.agx1.vertex.varying.write.f32
llvm.agx1.vertex.ptsize.write
llvm.agx1.vertex.clip.write
llvm.agx1.pixel.depthf
llvm.agx1.pixel.readOutputRegisterWithPartitionSize
llvm.agx1.pixel.writeOutputRegisterWithPartitionSize
llvm.agx1.pixel.dfdx.f32
llvm.agx1.pixel.dfdy.f32
llvm.agx1.pixel.dfdx.f16
llvm.agx1.pixel.dfdy.f16
llvm.agx1.read.coord.x.pixel
llvm.agx1.read.sample.number
llvm.agx1.exit.if.zero
llvm.agx1.wop
llvm.agx1.read.shared.reg.alloc.size
llvm.agx1.pack.scale.rne.s8
llvm.agx1.pack.scale.rne.u8
llvm.agx1.pack.scale.rne.s16
llvm.agx1.pack.prog.i16.f32
llvm.agx1.gcmp.g5.i32.f32
llvm.agx1.gcmp.g5.i16.f16
llvm.agx1.gexp.g5.f32
llvm.agx1.gexp.g5.f16
llvm.agx1.gcmp.xr.g5.i32.f32
llvm.agx1.gcmp.xr.g5.i16.f16
llvm.agx1.gexp.xr.g5.f32
llvm.agx1.gexp.xr.g5.f16
llvm.agx1.cmsk
llvm.agx1.flushimg
llvm.agx1.local.
.ci16
.msaa
.shadow
.cube
.grad
.gather
.offset
.4xi16
.4xi32
.4xh
.4xf
.i16
runtime.gen10.bc
raytracing_runtime_nop.bc
llvm.agx2.threadgroup.barrier.with.scope
llvm.agx2.memory.fence
llvm.agx2.sadd.sat.i16
llvm.agx2.sadd.sat.i32
llvm.agx2.uadd.sat.i16
llvm.agx2.uadd.sat.i32
llvm.agx2.ssub.sat.i16
llvm.agx2.ssub.sat.i32
llvm.agx2.usub.sat.i16
llvm.agx2.usub.sat.i32
llvm.agx2.smad.sat.i16
llvm.agx2.smad.sat.i32
llvm.agx2.umad.sat.i16
llvm.agx2.umad.sat.i32
llvm.agx2.clamp
llvm.agx2.atanc.f32
llvm.agx2.atanc.f16
llvm.agx2.sin.f32
llvm.agx2.sin.f16
llvm.minnum.f16
llvm.minnum.f32
llvm.maxnum.f16
llvm.maxnum.f32
llvm.agx2.pixel.itr.1xf
llvm.agx2.pixel.itr.2xf
llvm.agx2.pixel.itr.3xf
llvm.agx2.pixel.itr.4xf
llvm.agx2.sample.itr.1xf
llvm.agx2.sample.itr.3xf
llvm.agx2.centroid.itr.1xf
llvm.agx2.centroid.itr.3xf
llvm.agx2.pixel.itrproj.1xf
llvm.agx2.pixel.itrproj.2xf
llvm.agx2.pixel.itrproj.3xf
llvm.agx2.pixel.itrproj.4xf
llvm.agx2.sample.itrproj.1xf
llvm.agx2.sample.itrproj.3xf
llvm.agx2.centroid.itrproj.1xf
llvm.agx2.centroid.itrproj.3xf
llvm.agx.smp
llvm.agx.smpw
llvm.agx2.imgwblk
llvm.agx2.lldiblk
llvm.agx2.lstiblk
llvm.agx2.pack.prog.i32.f32
llvm.agx2.pack.rne.u32
llvm.agx2.load.
llvm.agx2.store.
llvm.agx2.vertex.varying.write.i32
llvm.agx2.vertex.pos.write
llvm.agx2.sample.read.
llvm.agx2.pixel.write.
llvm.agx2.pixel.dfdx.f32
llvm.agx2.pixel.dfdy.f32
llvm.agx2.pixel.dfdx.f16
llvm.agx2.pixel.dfdy.f16
llvm.agx2.read.shared.reg.alloc.size
llvm.agx2.idf
llvm.agx2.cppix.agx1r1
llvm.agx2.pack.prog.i16.f32
llvm.agx2.cmsk
llvm.agx2.flushimg
llvm.agx2.quad.broadcast
llvm.agx2.quad.shuffle.up
llvm.agx2.quad.shuffle.down
llvm.agx2.quad.xor
llvm.agx2.unpack.
llvm.agx2.pack.
AGX_FORCE_INLINING
AGX_G10_DISABLE_MUST_SHADE
image_state
AGX_G10_DISABLE_PRID
r8unorm
r8snorm
r16unorm
r16snorm
sr8unorm
rg8unorm
rg8snorm
rg16unorm
rg16snorm
srg8unorm
rg11b10f
rgb9e5
rgba8unorm
rgba8snorm
rgba16unorm
rgba16snorm
srgba8unorm
rgb10a2
v2i8
v3i8
v4i8
v3i16
v3i32
v3f16
v3f32
AGC_SHARED_REGS_BYTES
AGC_SHARED_REGS_BYTES_COMPUTE
read_prid
write_prid
constant_heap_indices
AGX_G10_DISABLE_TILE_FRAGMENT_SYNC
fixed
wait_sample
wait_tile
release_at_end
itr_x
itr_y
done
agc.emit_info
.subset
.coords
.array
.lod
.rtz
default
render_target_index
image_block_merge
explicit_origin_and_size
implicit_origin_and_size
OffsetLessThanSize_Read
OffsetGreaterThanSize_Read
OffsetLessThanSizeEnd_Read
OffsetLessThanSize_Write
OffsetGreaterThanSize_Write
OffsetLessThanSizeEnd_Write
agc.eMRT_tile_buffer_address
agc.eMRT_spilled_partition_size
agc.eMRT_max_concurrent_tiles
llvm.agx2.update.hw.coverage.mask.
coords.i16
rgba
snorm
unorm
 indirect buffers (
 indirect textures (
llvm.agx2.local.
llvm.agx2.threadgroup.
llvm.agx2.dispatch.threadgroup.
llvm.agx2.thread.position.in.grid.
llvm.agx2.quad.group
.u.i32
.u.i16
llvm.ctpop.i32
llvm.cttz.i32
coords.
llvm.cttz.i16
Allocation failed
llvm.agx2.pixel.feedback
.depth
.stencil
.2d.msaa
.1d.array
.2d.array
.2d.msaa.array
.cubestf
.cubestf.array
raytracing_runtime_emulation.bc
llvm.agx2.simd.bcast
llvm.agx2.simd.shuffle
llvm.agx2.simd.shift.up
llvm.agx2.simd.shift.down
llvm.agx2.simd.bfly
llvm.agx2.simd.rotup
llvm.agx2.quad.rotup
llvm.agx2.simd.ballot
llvm.agx2.quad.ballot
llvm.agx2.vertex.amp.id.count.i32
llvm.agx2.vertex.amp.id.mask.i32
llvm.agx2.vertex.varying.amplified.write.f32
llvm.agx2.vertex.ptsize.amplified.write
llvm.agx2.vertex.clip.amplified.write
llvm.agx2.vertex.viewportid.amplified.write.i32
llvm.agx2.vertex.layerid.amplified.write.i32
llvm.agx2.bufwblk.2d
llvm.agx2.bufwblk.1d
air.simdgroup_async_copy_1d
air.simdgroup_async_copy_2d
llvm.agx2.f32matmad4x4
llvm.agx2.f16matmad4x4
llvm.agx2.quad.reduce.
llvm.agx2.simd.reduce.
llvm.agx2.previous.simd.valid.count
llvm.agx2.previous.thread.valid.count
llvm.agx2.total.simd.valid.count
llvm.agx2.syncbuf
llvm.agx2.simd.element
.u.32
_and
_xor
simd_
prefix_
prefix_inclusive_sum
prefix_inclusive_product
_max
_min
_product
_sum
f16.
prefix_inclusive_
quad
reduce.int.prod.merge
reduce.int.prod.fast
reduce.int.prod.slow
 buffers (
 textures (
 samplers (
addr_elem
addr_vectorized
.v2f16
.v2f32
llvm.agx2.object.childcount.store
llvm.agx2.object.childcount.write
llvm.agx2.enable.all.threads
llvm.agx2.object.payload.ptr
llvm.agx2.mesh.primitive.data.ptr
llvm.agx2.allocate.uvb
llvm.agx2.wait.fence
llvm.agx2.mesh.index.write
llvm.agx2.mesh.primattr.write
llvm.agx2.mesh.varying.write
.read
.write
async.copy.merge
async.copy.emulation
async.copy.dma
.unchecked
if.first.active.lane.end
async.copy.waiton
bufrblk
bufwblk
merge
.block
.merge
llvm.agx2.simd.shff
SimplifyGenericIR: %u alloca's, Removed %u loads, %u stores, %u other out of %u insts, total %4.2f %c insts
SimplifyGenericIR: %u alloca's, unable to simplify the IR
RemoveAndForwardAllocaStores: removed %u instructions
air.fma
.f32
.f16
applegpu
[AGX] Plugin interface not implemented: 
AIRNTEmitAssembly
AIRNTEmitObject
Failed to initialize AGX backend for target architecture.
AIRNTEmitExecutableImage
AGX key factory does not exist for target architecture.
Unsupported pipeline script.
/System/Library/PrivateFrameworks/AGXCompilerCore.framework/EnvVars.txt
serialize
AGC_ENABLE_STATUS_FILE
AGC_CLIENT_PROCESS_NAME
agc_status_
deserialize
Unsupported translator option: 
** Compilation failed with error: %s **
Internal compiler error.
Running LLVM version %d (and AGC version %d.%d.%d).
AGC_ENABLE_STATUS_FILE_STDERR
AGC: %s:%d:%s: *** Failed to create: %s, with error code %d
agc_file_printer.h
initPrinter
agc_mtl_status
AGC_STATUS_FILE_NO_PID
AGC_STATUS_FILE_MAX_SIZE_IN_BYTES
AGC: %s:%d:%s: *** Failed to modify: %s, with error code %d
AGC_STATUS_LOG_DIRECTORY
HOME
/Library/Logs/
AGXCompilerHost
AGC: %s:%d:%s: !!! Unsupported AGCTargetArch
agc_compile_common.h
std::string AGCTargetArchToLLVMString(AGCTargetArch)
g5p-b0
g10p-b0
g11p-a0
g11m-a0
g11g-a0
g11p-b0
g11m-b0
g12p-a0
g12p-b0
g13p-a0
g13g-a0
g13p-b0
g13g-b0
Active environment variable values:
AGX_EXTRA_LLVM_ATTRIB
Cannot read module: 
Error parsing bitcode file: 
Unsupported target triple: 
Cannot create AGC LLVM object.
Error occurred composing compiler reply.
air.kernel
g14p
air-degenerate-vertex-amplification-emulation
air-raytracing-emulation
mtl-fetch-all
v8@?0
Logging shader %s
Read preference %s: %d
Could not create dir %s (%s)
Could not create file %s (%s)
Writing lowered shader to %s
fallback report generated (but might not be delivered)
fallback report suppressed (unknown error %d)
fallback report suppressed (%s)
%s: %s[%lu] = %s[%lu]
All predecessors of the indirect sampler call have an unconditional branch, may need more code changes to handle this
Encountered unlowered function call to %s
AGC: AGC: %s:%d:%s: *** Module verification failed %s pass '%s' : %s
parseIR from file '%s' failed with error: %{public}s
Reading environment variables from '%s'
Skipped line with no '=' character in EnvVars.txt
Skipped line with empty variable name in EnvVars.txt
Read unknown variable from EnvVars.txt: %s
%s[%lu] = %s[%lu]
%s(){
%s = %s
%s[%lu] = %s[%lu]
AGC: AGC: %s:%d:%s: *** Failed to create: %s, with error code %d
AGC: AGC: %s:%d:%s: *** Failed to modify: %s, with error code %d
AGC: AGC: %s:%d:%s: !!! Unsupported AGCTargetArch
agx.stack_oob
333333&
333333&
EEEUb
Ubfbf
bfEEEUb
Ubfbf
"%(+.1
"%(+.1
,92agx.stack_oob
````
````
````
````
""````
""````
""````
%%llllll
%%llllll
%%llllll
%%llll
''llll
''llll
''llll
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%''''''''''''''''''''''''''''''''''''))))))))))))))))))))))))))))))))))))
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
222222222222222222222222222222222222
afGk%
FFFFFFFFF
FFFFFF
LLLLLLLLL
LLLLLL
?????????
??????
(((((((((
((((((
$$$$$$$$$
$$$$$$
         
      
KMOQS
UW
+ + + + + 
+ + + + + + + + + + + + + + + + + + w
+ + + + + 
0!0!
0!0!0!0!0!
0!0!
0!0!
0!0!
0!0!
0!0!0!0!0!0!
0!0!
0!0!0!0!
0!0!0!0!0!0!0!0!0!0!0!0!
0!0!
0!0!0!0!
0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!
0!0!
0!0!0!0!0!0!
0!0!
0!0!0!0!
0!0!0!0!0!0!0!0!0!0!0!0!
0!0!
0!0!0!0!
"$
W!W!7
W!W!W!W!W!W!C
W!W!I
W!W!W!W!O
agx.stack_oob
agx.ss_bind
;0;0;0;0;0;0f
s0s0
s0s0s0s0
s0s0s0s0s0s0W
s0s0i
s0s0
<1<1<1<1Y
<1<1<1
1s11As!!!!
#'+/27<AEJNS
agx.ss_bind
FD
FO
FN
F*
FB
FC
FI
FQ
FE
F,
Ft
Fh
Fs
Fg
F 
F+
F1
Fr
Ff
Fy
Fm
Fu
Fi
FP
F%
F-
FU
F!
!&##
!$'*-0369<?BEHKNQTWZ]`cfqiloqrux{~
>'>'>'>'
T'T'T'T'T'T'T'T'
{'{'{'
{'{'
{'{'{'
{'{'{'{'{'{'
{'{'
{'{'{'{'{'{'
{'{'{'
_#z#
VVVVI;
ad%Ap
g(D*
y|=Y
GJNQp2
@\B(*
lD!!57-U;t
:=ADc%
(* H.g
agx.ss_bind
#############
############
 /"$
!#%'
 "$&
".@%C14F7:IL
KNQTWZ]`cfE
Hi{l~or
fhjlnp
xz|~
xFz|~
x#x#+
x#x#x#x#x#x#
x#x#%
x#x#
x#x#a
x#x#x#
x#x#x#x#
x#x#x#x#x#x#x#
x#x#
x#x#7
x#x#y
x#x#x#x#x#
ad%Ap
g(D*
y|=Y
GJNQp2
@\B(*
lD!!57-U;t
:=ADc%
(* H.g
agx.stack_oob
agx.ss_bind
^=?Aagx.ss_bind
%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_
abcd
*)/.23519
<CF:?8;=@ABDEGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefgh
jklm
 !"#
CF?<@
DLOAH=BEIJKMNPQRSTUVWXYZ[\]^_`abcdefghijklmnopq
stuv
 !"#$
LOHDI
MUXJQEKNRSTVWYZ[\]^_`abcdefghijklmnopqrstuvwxyz
{|}~
 !"#
UXQMR
V^aSZNTW[\]_`bcdefghijklmnopq
stuv
 !"#$
^aZV[
_gj\cW]`defhiklmnopqrstuvwxyz
{|}~
 !"#$
gjc_d
hpsel`fimnoqrtuvwxyz
{|}~
 !"#$
pslhm
qy{nuiorvwxz
!"#$
y{uqv
w}rx
')+/
.-15249>
/25>
9<?C:@G
>C?G
@DHLAIP
GLHP
IMQUJRY
PUQY
RVZ^S[b 
Y^Zb 
[_cg\dk!
 bgck!
dhlpemt"
!kplt"
mquynv|#
"tyu|#
       
                 
!!!!!!!
!!!!!!!!!!!!!!!!!
"""""""
"""""""""""""""""
#######
#################
$$$$$$$$
$$$$
$$$$$$$$$$$$$$$$$$$
%%%%%%%%
%%%%
%%%%%%%%%%%%%%%%%%%
&&&&&&&&&&
&&&&&
&&&&&&&&&&&&&&&&&&&&&&&&
''''''''''
'''''
''''''''''''''''''''''''
((((((((((((
((((((
((((((((((((((((((((((((((((((((
((((
))))))))))))
))))))
))))))))))))))))))))))))))))))))
))))
**************
*******
*****************************************
****
****
****
++++++++++++++
+++++++
+++++++++++++++++++++++++++++++++++++++++
++++
++++
++++
,,,,,,,,,,,,,,,,,,
,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,
,,,,
,,,,,
,,,,,,
,,,,,
,,,,
------------------
---------
-----------------------------------------------------------
----
----
-----
------
-----
----
...................................................................................................................................................................................../////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
!%)-39>
T\`dhlrw
?3?6????C
444.
18Bfk
\\\\ \
".$)
qqqqqqw
""qqqqqqqqqq
@@@.;;
UUUUUUUUUU
$*06=D
HHHH
 "$&(*
,.0246
8:<>@B
HJLN
PRTVXZ
\^`bdf
hjlnpr
tvxz|~
R89_R90_R91_R92_R93_R94_R95_R96_R97_R98_R99_R100
R99_R100_R101_R102_R103_R104_R105_R106_R107_R108_R109_R110
R2_R3_R4_R5_R6_R7_R8_R9_R10
R109_R110_R111_R112_R113_R114_R115_R116_R117_R118_R119_R120
R9_R10_R11_R12_R13_R14_R15_R16_R17_R18_R19_R20
R19_R20_R21_R22_R23_R24_R25_R26_R27_R28_R29_R30
R29_R30_R31_R32_R33_R34_R35_R36_R37_R38_R39_R40
R39_R40_R41_R42_R43_R44_R45_R46_R47_R48_R49_R50
R49_R50_R51_R52_R53_R54_R55_R56_R57_R58_R59_R60
R59_R60_R61_R62_R63_R64_R65_R66_R67_R68_R69_R70
R69_R70_R71_R72_R73_R74_R75_R76_R77_R78_R79_R80
R79_R80_R81_R82_R83_R84_R85_R86_R87_R88_R89_R90
R90_R91_R92_R93_R94_R95_R96_R97_R98_R99_R100_R101
R100_R101_R102_R103_R104_R105_R106_R107_R108_R109_R110_R111
R0_R1_R2_R3_R4_R5_R6_R7_R8_R9_R10_R11
R110_R111_R112_R113_R114_R115_R116_R117_R118_R119_R120_R121
R10_R11_R12_R13_R14_R15_R16_R17_R18_R19_R20_R21
R20_R21_R22_R23_R24_R25_R26_R27_R28_R29_R30_R31
R30_R31_R32_R33_R34_R35_R36_R37_R38_R39_R40_R41
R40_R41_R42_R43_R44_R45_R46_R47_R48_R49_R50_R51
R50_R51_R52_R53_R54_R55_R56_R57_R58_R59_R60_R61
R60_R61_R62_R63_R64_R65_R66_R67_R68_R69_R70_R71
R70_R71_R72_R73_R74_R75_R76_R77_R78_R79_R80_R81
R80_R81_R82_R83_R84_R85_R86_R87_R88_R89_R90_R91
R0_R1
R91_R92_R93_R94_R95_R96_R97_R98_R99_R100_R101_R102
R101_R102_R103_R104_R105_R106_R107_R108_R109_R110_R111_R112
R1_R2_R3_R4_R5_R6_R7_R8_R9_R10_R11_R12
R111_R112_R113_R114_R115_R116_R117_R118_R119_R120_R121_R122
R11_R12_R13_R14_R15_R16_R17_R18_R19_R20_R21_R22
R21_R22_R23_R24_R25_R26_R27_R28_R29_R30_R31_R32
R31_R32_R33_R34_R35_R36_R37_R38_R39_R40_R41_R42
R41_R42_R43_R44_R45_R46_R47_R48_R49_R50_R51_R52
R51_R52_R53_R54_R55_R56_R57_R58_R59_R60_R61_R62
R61_R62_R63_R64_R65_R66_R67_R68_R69_R70_R71_R72
R71_R72_R73_R74_R75_R76_R77_R78_R79_R80_R81_R82
R81_R82_R83_R84_R85_R86_R87_R88_R89_R90_R91_R92
R0_R1_R2
R92_R93_R94_R95_R96_R97_R98_R99_R100_R101_R102_R103
R102_R103_R104_R105_R106_R107_R108_R109_R110_R111_R112_R113
R2_R3_R4_R5_R6_R7_R8_R9_R10_R11_R12_R13
R112_R113_R114_R115_R116_R117_R118_R119_R120_R121_R122_R123
R12_R13_R14_R15_R16_R17_R18_R19_R20_R21_R22_R23
R22_R23_R24_R25_R26_R27_R28_R29_R30_R31_R32_R33
R32_R33_R34_R35_R36_R37_R38_R39_R40_R41_R42_R43
R42_R43_R44_R45_R46_R47_R48_R49_R50_R51_R52_R53
R52_R53_R54_R55_R56_R57_R58_R59_R60_R61_R62_R63
R62_R63_R64_R65_R66_R67_R68_R69_R70_R71_R72_R73
R72_R73_R74_R75_R76_R77_R78_R79_R80_R81_R82_R83
R82_R83_R84_R85_R86_R87_R88_R89_R90_R91_R92_R93
R0_R1_R2_R3
R93_R94_R95_R96_R97_R98_R99_R100_R101_R102_R103_R104
R103_R104_R105_R106_R107_R108_R109_R110_R111_R112_R113_R114
R3_R4_R5_R6_R7_R8_R9_R10_R11_R12_R13_R14
R113_R114_R115_R116_R117_R118_R119_R120_R121_R122_R123_R124
R13_R14_R15_R16_R17_R18_R19_R20_R21_R22_R23_R24
R23_R24_R25_R26_R27_R28_R29_R30_R31_R32_R33_R34
R33_R34_R35_R36_R37_R38_R39_R40_R41_R42_R43_R44
R43_R44_R45_R46_R47_R48_R49_R50_R51_R52_R53_R54
R53_R54_R55_R56_R57_R58_R59_R60_R61_R62_R63_R64
R63_R64_R65_R66_R67_R68_R69_R70_R71_R72_R73_R74
R73_R74_R75_R76_R77_R78_R79_R80_R81_R82_R83_R84
R83_R84_R85_R86_R87_R88_R89_R90_R91_R92_R93_R94
R0_R1_R2_R3_R4
R94_R95_R96_R97_R98_R99_R100_R101_R102_R103_R104_R105
R104_R105_R106_R107_R108_R109_R110_R111_R112_R113_R114_R115
R4_R5_R6_R7_R8_R9_R10_R11_R12_R13_R14_R15
R114_R115_R116_R117_R118_R119_R120_R121_R122_R123_R124_R125
R14_R15_R16_R17_R18_R19_R20_R21_R22_R23_R24_R25
R24_R25_R26_R27_R28_R29_R30_R31_R32_R33_R34_R35
R34_R35_R36_R37_R38_R39_R40_R41_R42_R43_R44_R45
SR255
R44_R45_R46_R47_R48_R49_R50_R51_R52_R53_R54_R55
R54_R55_R56_R57_R58_R59_R60_R61_R62_R63_R64_R65
R64_R65_R66_R67_R68_R69_R70_R71_R72_R73_R74_R75
R74_R75_R76_R77_R78_R79_R80_R81_R82_R83_R84_R85
R84_R85_R86_R87_R88_R89_R90_R91_R92_R93_R94_R95
R0_R1_R2_R3_R4_R5
R95_R96_R97_R98_R99_R100_R101_R102_R103_R104_R105_R106
R105_R106_R107_R108_R109_R110_R111_R112_R113_R114_R115_R116
R5_R6_R7_R8_R9_R10_R11_R12_R13_R14_R15_R16
R115_R116_R117_R118_R119_R120_R121_R122_R123_R124_R125_R126
R15_R16_R17_R18_R19_R20_R21_R22_R23_R24_R25_R26
R25_R26_R27_R28_R29_R30_R31_R32_R33_R34_R35_R36
R35_R36_R37_R38_R39_R40_R41_R42_R43_R44_R45_R46
R45_R46_R47_R48_R49_R50_R51_R52_R53_R54_R55_R56
R55_R56_R57_R58_R59_R60_R61_R62_R63_R64_R65_R66
R65_R66_R67_R68_R69_R70_R71_R72_R73_R74_R75_R76
R75_R76_R77_R78_R79_R80_R81_R82_R83_R84_R85_R86
R85_R86_R87_R88_R89_R90_R91_R92_R93_R94_R95_R96
R0_R1_R2_R3_R4_R5_R6
R96_R97_R98_R99_R100_R101_R102_R103_R104_R105_R106_R107
R106_R107_R108_R109_R110_R111_R112_R113_R114_R115_R116_R117
R6_R7_R8_R9_R10_R11_R12_R13_R14_R15_R16_R17
R116_R117_R118_R119_R120_R121_R122_R123_R124_R125_R126_R127
R16_R17_R18_R19_R20_R21_R22_R23_R24_R25_R26_R27
R26_R27_R28_R29_R30_R31_R32_R33_R34_R35_R36_R37
R36_R37_R38_R39_R40_R41_R42_R43_R44_R45_R46_R47
R46_R47_R48_R49_R50_R51_R52_R53_R54_R55_R56_R57
R56_R57_R58_R59_R60_R61_R62_R63_R64_R65_R66_R67
R66_R67_R68_R69_R70_R71_R72_R73_R74_R75_R76_R77
R76_R77_R78_R79_R80_R81_R82_R83_R84_R85_R86_R87
R86_R87_R88_R89_R90_R91_R92_R93_R94_R95_R96_R97
R1_R2_R3_R4_R5_R6_R7
R97_R98_R99_R100_R101_R102_R103_R104_R105_R106_R107_R108
R107_R108_R109_R110_R111_R112_R113_R114_R115_R116_R117_R118
R7_R8_R9_R10_R11_R12_R13_R14_R15_R16_R17_R18
R17_R18_R19_R20_R21_R22_R23_R24_R25_R26_R27_R28
R27_R28_R29_R30_R31_R32_R33_R34_R35_R36_R37_R38
R37_R38_R39_R40_R41_R42_R43_R44_R45_R46_R47_R48
R47_R48_R49_R50_R51_R52_R53_R54_R55_R56_R57_R58
R57_R58_R59_R60_R61_R62_R63_R64_R65_R66_R67_R68
R67_R68_R69_R70_R71_R72_R73_R74_R75_R76_R77_R78
R77_R78_R79_R80_R81_R82_R83_R84_R85_R86_R87_R88
R87_R88_R89_R90_R91_R92_R93_R94_R95_R96_R97_R98
R0_R1_R2_R3_R4_R5_R6_R7_R8
R98_R99_R100_R101_R102_R103_R104_R105_R106_R107_R108_R109
R108_R109_R110_R111_R112_R113_R114_R115_R116_R117_R118_R119
R8_R9_R10_R11_R12_R13_R14_R15_R16_R17_R18_R19
R18_R19_R20_R21_R22_R23_R24_R25_R26_R27_R28_R29
R28_R29_R30_R31_R32_R33_R34_R35_R36_R37_R38_R39
R38_R39_R40_R41_R42_R43_R44_R45_R46_R47_R48_R49
R48_R49_R50_R51_R52_R53_R54_R55_R56_R57_R58_R59
R58_R59_R60_R61_R62_R63_R64_R65_R66_R67_R68_R69
R68_R69_R70_R71_R72_R73_R74_R75_R76_R77_R78_R79
R78_R79_R80_R81_R82_R83_R84_R85_R86_R87_R88_R89
R88_R89_R90_R91_R92_R93_R94_R95_R96_R97_R98_R99
R1_R2_R3_R4_R5_R6_R7_R8_R9
SR_UTILFUNC
SR_PVQUAD
SR_TVQUAD
SR_TGID
SR_WGID
SR_EMRTID
SR_CTXID
SR_EXEC_STACK_CACHE_ID
SR_LIN_ID
SR_PVSIMD
SR_TVSIMD
SR_EIPND
SR_BACKFACE
SR_PTYPE
SR_TG_X_SIZE
SR_TG_DISP_X_SIZE
SR_TG_Y_SIZE
SR_TG_DISP_Y_SIZE
SR_TG_Z_SIZE
SR_TG_DISP_Z_SIZE
SR_EX_VECREG
SR_EX_RETREG
R97H_R98L_R98H_R99L_R99H_R100L_R100H
R107H_R108L_R108H_R109L_R109H_R110L_R110H
R7H_R8L_R8H_R9L_R9H_R10L_R10H
R117H_R118L_R118H_R119L_R119H_R120L_R120H
R17H_R18L_R18H_R19L_R19H_R20L_R20H
R27H_R28L_R28H_R29L_R29H_R30L_R30H
R37H_R38L_R38H_R39L_R39H_R40L_R40H
R47H_R48L_R48H_R49L_R49H_R50L_R50H
R57H_R58L_R58H_R59L_R59H_R60L_R60H
R67H_R68L_R68H_R69L_R69H_R70L_R70H
R77H_R78L_R78H_R79L_R79H_R80L_R80H
R87H_R88L_R88H_R89L_R89H_R90L_R90H
R98H_R99L_R99H_R100L_R100H_R101L_R101H
R108H_R109L_R109H_R110L_R110H_R111L_R111H
R8H_R9L_R9H_R10L_R10H_R11L_R11H
R118H_R119L_R119H_R120L_R120H_R121L_R121H
R18H_R19L_R19H_R20L_R20H_R21L_R21H
R28H_R29L_R29H_R30L_R30H_R31L_R31H
R38H_R39L_R39H_R40L_R40H_R41L_R41H
R48H_R49L_R49H_R50L_R50H_R51L_R51H
R58H_R59L_R59H_R60L_R60H_R61L_R61H
R68H_R69L_R69H_R70L_R70H_R71L_R71H
R78H_R79L_R79H_R80L_R80H_R81L_R81H
R88H_R89L_R89H_R90L_R90H_R91L_R91H
R0H_R1L_R1H
R99H_R100L_R100H_R101L_R101H_R102L_R102H
R109H_R110L_R110H_R111L_R111H_R112L_R112H
R9H_R10L_R10H_R11L_R11H_R12L_R12H
R119H_R120L_R120H_R121L_R121H_R122L_R122H
R19H_R20L_R20H_R21L_R21H_R22L_R22H
R29H_R30L_R30H_R31L_R31H_R32L_R32H
R39H_R40L_R40H_R41L_R41H_R42L_R42H
R49H_R50L_R50H_R51L_R51H_R52L_R52H
R59H_R60L_R60H_R61L_R61H_R62L_R62H
R69H_R70L_R70H_R71L_R71H_R72L_R72H
R79H_R80L_R80H_R81L_R81H_R82L_R82H
R89H_R90L_R90H_R91L_R91H_R92L_R92H
R0H_R1L_R1H_R2L_R2H
R100H_R101L_R101H_R102L_R102H_R103L_R103H
R110H_R111L_R111H_R112L_R112H_R113L_R113H
R10H_R11L_R11H_R12L_R12H_R13L_R13H
R120H_R121L_R121H_R122L_R122H_R123L_R123H
R20H_R21L_R21H_R22L_R22H_R23L_R23H
R30H_R31L_R31H_R32L_R32H_R33L_R33H
R40H_R41L_R41H_R42L_R42H_R43L_R43H
R50H_R51L_R51H_R52L_R52H_R53L_R53H
R60H_R61L_R61H_R62L_R62H_R63L_R63H
R70H_R71L_R71H_R72L_R72H_R73L_R73H
R80H_R81L_R81H_R82L_R82H_R83L_R83H
R90H_R91L_R91H_R92L_R92H_R93L_R93H
R0H_R1L_R1H_R2L_R2H_R3L_R3H
R101H_R102L_R102H_R103L_R103H_R104L_R104H
R111H_R112L_R112H_R113L_R113H_R114L_R114H
R11H_R12L_R12H_R13L_R13H_R14L_R14H
R121H_R122L_R122H_R123L_R123H_R124L_R124H
R21H_R22L_R22H_R23L_R23H_R24L_R24H
R31H_R32L_R32H_R33L_R33H_R34L_R34H
R41H_R42L_R42H_R43L_R43H_R44L_R44H
R51H_R52L_R52H_R53L_R53H_R54L_R54H
R61H_R62L_R62H_R63L_R63H_R64L_R64H
R71H_R72L_R72H_R73L_R73H_R74L_R74H
R81H_R82L_R82H_R83L_R83H_R84L_R84H
R91H_R92L_R92H_R93L_R93H_R94L_R94H
R1H_R2L_R2H_R3L_R3H_R4L_R4H
R102H_R103L_R103H_R104L_R104H_R105L_R105H
R112H_R113L_R113H_R114L_R114H_R115L_R115H
R12H_R13L_R13H_R14L_R14H_R15L_R15H
R122H_R123L_R123H_R124L_R124H_R125L_R125H
R22H_R23L_R23H_R24L_R24H_R25L_R25H
R32H_R33L_R33H_R34L_R34H_R35L_R35H
R42H_R43L_R43H_R44L_R44H_R45L_R45H
R52H_R53L_R53H_R54L_R54H_R55L_R55H
R62H_R63L_R63H_R64L_R64H_R65L_R65H
R72H_R73L_R73H_R74L_R74H_R75L_R75H
R82H_R83L_R83H_R84L_R84H_R85L_R85H
R92H_R93L_R93H_R94L_R94H_R95L_R95H
R2H_R3L_R3H_R4L_R4H_R5L_R5H
R103H_R104L_R104H_R105L_R105H_R106L_R106H
R113H_R114L_R114H_R115L_R115H_R116L_R116H
R13H_R14L_R14H_R15L_R15H_R16L_R16H
R123H_R124L_R124H_R125L_R125H_R126L_R126H
R23H_R24L_R24H_R25L_R25H_R26L_R26H
R33H_R34L_R34H_R35L_R35H_R36L_R36H
R43H_R44L_R44H_R45L_R45H_R46L_R46H
R53H_R54L_R54H_R55L_R55H_R56L_R56H
R63H_R64L_R64H_R65L_R65H_R66L_R66H
R73H_R74L_R74H_R75L_R75H_R76L_R76H
R83H_R84L_R84H_R85L_R85H_R86L_R86H
R93H_R94L_R94H_R95L_R95H_R96L_R96H
R3H_R4L_R4H_R5L_R5H_R6L_R6H
R104H_R105L_R105H_R106L_R106H_R107L_R107H
R114H_R115L_R115H_R116L_R116H_R117L_R117H
R14H_R15L_R15H_R16L_R16H_R17L_R17H
R124H_R125L_R125H_R126L_R126H_R127L_R127H
R24H_R25L_R25H_R26L_R26H_R27L_R27H
R34H_R35L_R35H_R36L_R36H_R37L_R37H
R44H_R45L_R45H_R46L_R46H_R47L_R47H
R54H_R55L_R55H_R56L_R56H_R57L_R57H
R64H_R65L_R65H_R66L_R66H_R67L_R67H
R74H_R75L_R75H_R76L_R76H_R77L_R77H
R84H_R85L_R85H_R86L_R86H_R87L_R87H
R94H_R95L_R95H_R96L_R96H_R97L_R97H
R4H_R5L_R5H_R6L_R6H_R7L_R7H
R105H_R106L_R106H_R107L_R107H_R108L_R108H
R115H_R116L_R116H_R117L_R117H_R118L_R118H
R15H_R16L_R16H_R17L_R17H_R18L_R18H
R25H_R26L_R26H_R27L_R27H_R28L_R28H
R35H_R36L_R36H_R37L_R37H_R38L_R38H
R45H_R46L_R46H_R47L_R47H_R48L_R48H
R55H_R56L_R56H_R57L_R57H_R58L_R58H
R65H_R66L_R66H_R67L_R67H_R68L_R68H
R75H_R76L_R76H_R77L_R77H_R78L_R78H
R85H_R86L_R86H_R87L_R87H_R88L_R88H
R95H_R96L_R96H_R97L_R97H_R98L_R98H
R5H_R6L_R6H_R7L_R7H_R8L_R8H
R106H_R107L_R107H_R108L_R108H_R109L_R109H
R116H_R117L_R117H_R118L_R118H_R119L_R119H
R16H_R17L_R17H_R18L_R18H_R19L_R19H
R26H_R27L_R27H_R28L_R28H_R29L_R29H
R36H_R37L_R37H_R38L_R38H_R39L_R39H
R46H_R47L_R47H_R48L_R48H_R49L_R49H
R56H_R57L_R57H_R58L_R58H_R59L_R59H
R66H_R67L_R67H_R68L_R68H_R69L_R69H
R76H_R77L_R77H_R78L_R78H_R79L_R79H
R86H_R87L_R87H_R88L_R88H_R89L_R89H
R96H_R97L_R97H_R98L_R98H_R99L_R99H
R6H_R7L_R7H_R8L_R8H_R9L_R9H
SR_UTILDATAH
SR_DSTACKH
SR_ISTACKH
SR_ESH
SR_LIBDEPTH
SR_CVGMSK
R97L_R97H_R98L_R98H_R99L_R99H_R100L
R107L_R107H_R108L_R108H_R109L_R109H_R110L
R7L_R7H_R8L_R8H_R9L_R9H_R10L
R117L_R117H_R118L_R118H_R119L_R119H_R120L
R17L_R17H_R18L_R18H_R19L_R19H_R20L
R27L_R27H_R28L_R28H_R29L_R29H_R30L
R37L_R37H_R38L_R38H_R39L_R39H_R40L
R47L_R47H_R48L_R48H_R49L_R49H_R50L
R57L_R57H_R58L_R58H_R59L_R59H_R60L
R67L_R67H_R68L_R68H_R69L_R69H_R70L
R77L_R77H_R78L_R78H_R79L_R79H_R80L
R87L_R87H_R88L_R88H_R89L_R89H_R90L
R98L_R98H_R99L_R99H_R100L_R100H_R101L
R108L_R108H_R109L_R109H_R110L_R110H_R111L
R8L_R8H_R9L_R9H_R10L_R10H_R11L
R118L_R118H_R119L_R119H_R120L_R120H_R121L
R18L_R18H_R19L_R19H_R20L_R20H_R21L
R28L_R28H_R29L_R29H_R30L_R30H_R31L
R38L_R38H_R39L_R39H_R40L_R40H_R41L
R48L_R48H_R49L_R49H_R50L_R50H_R51L
R58L_R58H_R59L_R59H_R60L_R60H_R61L
R68L_R68H_R69L_R69H_R70L_R70H_R71L
R78L_R78H_R79L_R79H_R80L_R80H_R81L
R88L_R88H_R89L_R89H_R90L_R90H_R91L
R0L_R0H_R1L
R99L_R99H_R100L_R100H_R101L_R101H_R102L
R109L_R109H_R110L_R110H_R111L_R111H_R112L
R9L_R9H_R10L_R10H_R11L_R11H_R12L
R119L_R119H_R120L_R120H_R121L_R121H_R122L
R19L_R19H_R20L_R20H_R21L_R21H_R22L
R29L_R29H_R30L_R30H_R31L_R31H_R32L
R39L_R39H_R40L_R40H_R41L_R41H_R42L
R49L_R49H_R50L_R50H_R51L_R51H_R52L
R59L_R59H_R60L_R60H_R61L_R61H_R62L
R69L_R69H_R70L_R70H_R71L_R71H_R72L
R79L_R79H_R80L_R80H_R81L_R81H_R82L
R89L_R89H_R90L_R90H_R91L_R91H_R92L
R0L_R0H_R1L_R1H_R2L
R100L_R100H_R101L_R101H_R102L_R102H_R103L
R110L_R110H_R111L_R111H_R112L_R112H_R113L
R10L_R10H_R11L_R11H_R12L_R12H_R13L
R120L_R120H_R121L_R121H_R122L_R122H_R123L
R20L_R20H_R21L_R21H_R22L_R22H_R23L
R30L_R30H_R31L_R31H_R32L_R32H_R33L
R40L_R40H_R41L_R41H_R42L_R42H_R43L
R50L_R50H_R51L_R51H_R52L_R52H_R53L
R60L_R60H_R61L_R61H_R62L_R62H_R63L
R70L_R70H_R71L_R71H_R72L_R72H_R73L
R80L_R80H_R81L_R81H_R82L_R82H_R83L
R90L_R90H_R91L_R91H_R92L_R92H_R93L
R0L_R0H_R1L_R1H_R2L_R2H_R3L
R101L_R101H_R102L_R102H_R103L_R103H_R104L
R111L_R111H_R112L_R112H_R113L_R113H_R114L
R11L_R11H_R12L_R12H_R13L_R13H_R14L
R121L_R121H_R122L_R122H_R123L_R123H_R124L
R21L_R21H_R22L_R22H_R23L_R23H_R24L
R31L_R31H_R32L_R32H_R33L_R33H_R34L
R41L_R41H_R42L_R42H_R43L_R43H_R44L
R51L_R51H_R52L_R52H_R53L_R53H_R54L
R61L_R61H_R62L_R62H_R63L_R63H_R64L
R71L_R71H_R72L_R72H_R73L_R73H_R74L
R81L_R81H_R82L_R82H_R83L_R83H_R84L
R91L_R91H_R92L_R92H_R93L_R93H_R94L
R1L_R1H_R2L_R2H_R3L_R3H_R4L
R102L_R102H_R103L_R103H_R104L_R104H_R105L
R112L_R112H_R113L_R113H_R114L_R114H_R115L
R12L_R12H_R13L_R13H_R14L_R14H_R15L
R122L_R122H_R123L_R123H_R124L_R124H_R125L
R22L_R22H_R23L_R23H_R24L_R24H_R25L
R32L_R32H_R33L_R33H_R34L_R34H_R35L
R42L_R42H_R43L_R43H_R44L_R44H_R45L
R52L_R52H_R53L_R53H_R54L_R54H_R55L
R62L_R62H_R63L_R63H_R64L_R64H_R65L
R72L_R72H_R73L_R73H_R74L_R74H_R75L
R82L_R82H_R83L_R83H_R84L_R84H_R85L
R92L_R92H_R93L_R93H_R94L_R94H_R95L
R2L_R2H_R3L_R3H_R4L_R4H_R5L
R103L_R103H_R104L_R104H_R105L_R105H_R106L
R113L_R113H_R114L_R114H_R115L_R115H_R116L
R13L_R13H_R14L_R14H_R15L_R15H_R16L
R123L_R123H_R124L_R124H_R125L_R125H_R126L
R23L_R23H_R24L_R24H_R25L_R25H_R26L
R33L_R33H_R34L_R34H_R35L_R35H_R36L
R43L_R43H_R44L_R44H_R45L_R45H_R46L
R53L_R53H_R54L_R54H_R55L_R55H_R56L
R63L_R63H_R64L_R64H_R65L_R65H_R66L
R73L_R73H_R74L_R74H_R75L_R75H_R76L
R83L_R83H_R84L_R84H_R85L_R85H_R86L
R93L_R93H_R94L_R94H_R95L_R95H_R96L
R3L_R3H_R4L_R4H_R5L_R5H_R6L
R104L_R104H_R105L_R105H_R106L_R106H_R107L
R114L_R114H_R115L_R115H_R116L_R116H_R117L
R14L_R14H_R15L_R15H_R16L_R16H_R17L
R124L_R124H_R125L_R125H_R126L_R126H_R127L
R24L_R24H_R25L_R25H_R26L_R26H_R27L
R34L_R34H_R35L_R35H_R36L_R36H_R37L
R44L_R44H_R45L_R45H_R46L_R46H_R47L
R54L_R54H_R55L_R55H_R56L_R56H_R57L
R64L_R64H_R65L_R65H_R66L_R66H_R67L
R74L_R74H_R75L_R75H_R76L_R76H_R77L
R84L_R84H_R85L_R85H_R86L_R86H_R87L
R94L_R94H_R95L_R95H_R96L_R96H_R97L
R4L_R4H_R5L_R5H_R6L_R6H_R7L
R105L_R105H_R106L_R106H_R107L_R107H_R108L
R115L_R115H_R116L_R116H_R117L_R117H_R118L
R15L_R15H_R16L_R16H_R17L_R17H_R18L
R25L_R25H_R26L_R26H_R27L_R27H_R28L
R35L_R35H_R36L_R36H_R37L_R37H_R38L
R45L_R45H_R46L_R46H_R47L_R47H_R48L
R55L_R55H_R56L_R56H_R57L_R57H_R58L
R65L_R65H_R66L_R66H_R67L_R67H_R68L
R75L_R75H_R76L_R76H_R77L_R77H_R78L
R85L_R85H_R86L_R86H_R87L_R87H_R88L
R95L_R95H_R96L_R96H_R97L_R97H_R98L
R5L_R5H_R6L_R6H_R7L_R7H_R8L
R106L_R106H_R107L_R107H_R108L_R108H_R109L
R116L_R116H_R117L_R117H_R118L_R118H_R119L
R16L_R16H_R17L_R17H_R18L_R18H_R19L
R26L_R26H_R27L_R27H_R28L_R28H_R29L
R36L_R36H_R37L_R37H_R38L_R38H_R39L
R46L_R46H_R47L_R47H_R48L_R48H_R49L
R56L_R56H_R57L_R57H_R58L_R58H_R59L
R66L_R66H_R67L_R67H_R68L_R68H_R69L
R76L_R76H_R77L_R77H_R78L_R78H_R79L
R86L_R86H_R87L_R87H_R88L_R88H_R89L
R96L_R96H_R97L_R97H_R98L_R98H_R99L
R6L_R6H_R7L_R7H_R8L_R8H_R9L
SR_UTILDATAL
SR_INSTVAL
SR_DSTACKL
SR_ISTACKL
SR_SIMD_ELEM
SR_LIBXDIM
SR_LIBYDIM
SR_BATCHNUM
SR_INSTNUM
SR_SMPMSKIN
SMP_BATON
SR_SIMD_GRP
SR_CLUSTER
SR_STP_CTR
SR_LIBSMPS
SR_DEPTHSMPS
SR_PASS
SR_TP_IN_GRID_X
SR_TG_X
SR_LOCAL_X
SR_TP_IN_GRID_Y
SR_TG_Y
SR_LOCAL_Y
SR_TP_IN_GRID_Z
SR_TG_Z
SR_LOCAL_Z
GPR32tup12
SIR32
GPR32
GPR32tup2
GPR16tup2
GPR32tup3
GPR16tup3
GPR32tup4
GPR16tup4
GPR32tup5
GPR16tup5
GPR16
GPR32tup6
GPR16tup6
GPR32tup7
GPR16tup7
GPR32tup9
GPR32tup12_with_hsub0_in_GPR16_NOR0L
GPR16tup2_with_hsub0_in_GPR16_NOR0L
GPR16tup3_with_hsub0_in_GPR16_NOR0L
GPR32tup4_with_hsub0_in_GPR16_NOR0L
GPR16tup4_with_hsub0_in_GPR16_NOR0L
GPR32tup5_with_hsub0_in_GPR16_NOR0L
GPR16tup5_with_hsub0_in_GPR16_NOR0L
GPR32tup6_with_hsub0_in_GPR16_NOR0L
GPR16tup6_with_hsub0_in_GPR16_NOR0L
GPR32tup7_with_hsub0_in_GPR16_NOR0L
GPR16tup7_with_hsub0_in_GPR16_NOR0L
GPR32tup9_with_hsub0_in_GPR16_NOR0L
GPR16tup3_alignedrc
GPR16tup5_alignedrc
GPR16tup7_alignedrc
GPR16tup2_with_hsub0_in_GPR16_NOR0L_and_GPR16_aligned
GPR16tup3_with_hsub0_in_GPR16_NOR0L_and_GPR16_aligned
GPR16tup4_with_hsub0_in_GPR16_NOR0L_and_GPR16_aligned
GPR16tup5_with_hsub0_in_GPR16_NOR0L_and_GPR16_aligned
GPR16tup6_with_hsub0_in_GPR16_NOR0L_and_GPR16_aligned
GPR16tup7_with_hsub0_in_GPR16_NOR0L_and_GPR16_aligned
GPR16tup2_with_hsub1_in_GPR16_aligned
GPR16tup3_with_hsub1_in_GPR16_aligned
GPR16tup4_with_hsub1_in_GPR16_aligned
GPR16tup5_with_hsub1_in_GPR16_aligned
GPR16tup6_with_hsub1_in_GPR16_aligned
GPR16tup7_with_hsub1_in_GPR16_aligned
1000
2000
3000
4000
5000
6000
7000
8000
1100
2100
3100
4100
5100
6100
7100
8100
1200
2200
3200
4200
5200
6200
7200
8200
1300
2300
3300
4300
5300
6300
7300
1400
2400
3400
4400
5400
6400
7400
1500
2500
3500
4500
5500
6500
7500
1600
2600
3600
4600
5600
6600
7600
1700
2700
3700
4700
5700
6700
7700
1800
2800
3800
4800
5800
6800
7800
1900
2900
3900
4900
5900
6900
7900
1010
2010
3010
4010
5010
6010
7010
8010
1110
2110
3110
4110
5110
6110
7110
8110
1210
2210
3210
4210
5210
6210
7210
8210
1310
2310
3310
4310
5310
6310
7310
1410
2410
3410
4410
5410
6410
7410
1510
2510
3510
4510
5510
6510
7510
1610
2610
3610
4610
5610
6610
7610
1710
2710
3710
4710
5710
6710
7710
1810
2810
3810
4810
5810
6810
7810
1910
2910
3910
4910
5910
6910
7910
1020
2020
3020
4020
5020
6020
7020
8020
1120
2120
3120
4120
5120
6120
7120
8120
1220
2220
3220
4220
5220
6220
7220
8220
1320
2320
3320
4320
5320
6320
7320
1420
2420
3420
4420
5420
6420
7420
1520
2520
3520
4520
5520
6520
7520
1620
2620
3620
4620
5620
6620
7620
1720
2720
3720
4720
5720
6720
7720
1820
2820
3820
4820
5820
6820
7820
1920
2920
3920
4920
5920
6920
7920
1030
2030
3030
4030
5030
6030
7030
8030
1130
2130
3130
4130
5130
6130
7130
8130
1230
2230
3230
4230
5230
6230
7230
8230
1330
2330
3330
4330
5330
6330
7330
1430
2430
3430
4430
5430
6430
7430
1530
2530
3530
4530
5530
6530
7530
1630
2630
3630
4630
5630
6630
7630
1730
2730
3730
4730
5730
6730
7730
1830
2830
3830
4830
5830
6830
7830
1930
2930
3930
4930
5930
6930
7930
1040
2040
3040
4040
5040
6040
7040
8040
1140
2140
3140
4140
5140
6140
7140
8140
1240
2240
3240
4240
5240
6240
7240
8240
1340
2340
3340
4340
5340
6340
7340
1440
2440
3440
4440
5440
6440
7440
1540
2540
3540
4540
5540
6540
7540
1640
2640
3640
4640
5640
6640
7640
1740
2740
3740
4740
5740
6740
7740
1840
2840
3840
4840
5840
6840
7840
1940
2940
3940
4940
5940
6940
7940
1050
2050
3050
4050
5050
6050
7050
8050
1150
2150
3150
4150
5150
6150
7150
8150
1250
2250
3250
4250
5250
6250
7250
1350
2350
3350
4350
5350
6350
7350
1450
2450
3450
4450
5450
6450
7450
1550
2550
3550
4550
5550
6550
7550
1650
2650
3650
4650
5650
6650
7650
1750
2750
3750
4750
5750
6750
7750
1850
2850
3850
4850
5850
6850
7850
1950
2950
3950
4950
5950
6950
7950
1060
2060
3060
4060
5060
6060
7060
8060
1160
2160
3160
4160
5160
6160
7160
8160
1260
2260
3260
4260
5260
6260
7260
1360
2360
3360
4360
5360
6360
7360
1460
2460
3460
4460
5460
6460
7460
1560
2560
3560
4560
5560
6560
7560
1660
2660
3660
4660
5660
6660
7660
1760
2760
3760
4760
5760
6760
7760
1860
2860
3860
4860
5860
6860
7860
1960
2960
3960
4960
5960
6960
7960
1070
2070
3070
4070
5070
6070
7070
8070
1170
2170
3170
4170
5170
6170
7170
8170
1270
2270
3270
4270
5270
6270
7270
1370
2370
3370
4370
5370
6370
7370
1470
2470
3470
4470
5470
6470
7470
1570
2570
3570
4570
5570
6570
7570
1670
2670
3670
4670
5670
6670
7670
1770
2770
3770
4770
5770
6770
7770
1870
2870
3870
4870
5870
6870
7870
1970
2970
3970
4970
5970
6970
7970
1080
2080
3080
4080
5080
6080
7080
8080
1180
2180
3180
4180
5180
6180
7180
8180
1280
2280
3280
4280
5280
6280
7280
1380
2380
3380
4380
5380
6380
7380
1480
2480
3480
4480
5480
6480
7480
1580
2580
3580
4580
5580
6580
7580
1680
2680
3680
4680
5680
6680
7680
1780
2780
3780
4780
5780
6780
7780
1880
2880
3880
4880
5880
6880
7880
1980
2980
3980
4980
5980
6980
7980
1090
2090
3090
4090
5090
6090
7090
8090
1190
2190
3190
4190
5190
6190
7190
8190
1290
2290
3290
4290
5290
6290
7290
1390
2390
3390
4390
5390
6390
7390
1490
2490
3490
4490
5490
6490
7490
1590
2590
3590
4590
5590
6590
7590
1690
2690
3690
4690
5690
6690
7690
1790
2790
3790
4790
5790
6790
7790
1890
2890
3890
4890
5890
6890
7890
1990
2990
3990
4990
5990
6990
7990
1001
2001
3001
4001
5001
6001
7001
8001
1101
2101
3101
4101
5101
6101
7101
8101
1201
2201
3201
4201
5201
6201
7201
8201
1301
2301
3301
4301
5301
6301
7301
1401
2401
3401
4401
5401
6401
7401
1501
2501
3501
4501
5501
6501
7501
1601
2601
3601
4601
5601
6601
7601
1701
2701
3701
4701
5701
6701
7701
1801
2801
3801
4801
5801
6801
7801
1901
2901
3901
4901
5901
6901
7901
1011
2011
3011
4011
5011
6011
7011
8011
1111
2111
3111
4111
5111
6111
7111
8111
1211
2211
3211
4211
5211
6211
7211
8211
1311
2311
3311
4311
5311
6311
7311
1411
2411
3411
4411
5411
6411
7411
1511
2511
3511
4511
5511
6511
7511
1611
2611
3611
4611
5611
6611
7611
1711
2711
3711
4711
5711
6711
7711
1811
2811
3811
4811
5811
6811
7811
1911
2911
3911
4911
5911
6911
7911
1021
2021
3021
4021
5021
6021
7021
8021
1121
2121
3121
4121
5121
6121
7121
8121
1221
2221
3221
4221
5221
6221
7221
8221
1321
2321
3321
4321
5321
6321
7321
1421
2421
3421
4421
5421
6421
7421
1521
2521
3521
4521
5521
6521
7521
1621
2621
3621
4621
5621
6621
7621
1721
2721
3721
4721
5721
6721
7721
1821
2821
3821
4821
5821
6821
7821
1921
2921
3921
4921
5921
6921
7921
1031
2031
3031
4031
5031
6031
7031
8031
1131
2131
3131
4131
5131
6131
7131
8131
1231
2231
3231
4231
5231
6231
7231
8231
1331
2331
3331
4331
5331
6331
7331
1431
2431
3431
4431
5431
6431
7431
1531
2531
3531
4531
5531
6531
7531
1631
2631
3631
4631
5631
6631
7631
1731
2731
3731
4731
5731
6731
7731
1831
2831
3831
4831
5831
6831
7831
1931
2931
3931
4931
5931
6931
7931
1041
2041
3041
4041
5041
6041
7041
8041
1141
2141
3141
4141
5141
6141
7141
8141
1241
2241
3241
4241
5241
6241
7241
8241
1341
2341
3341
4341
5341
6341
7341
1441
2441
3441
4441
5441
6441
7441
1541
2541
3541
4541
5541
6541
7541
1641
2641
3641
4641
5641
6641
7641
1741
2741
3741
4741
5741
6741
7741
1841
2841
3841
4841
5841
6841
7841
1941
2941
3941
4941
5941
6941
7941
1051
2051
3051
4051
5051
6051
7051
8051
1151
2151
3151
4151
5151
6151
7151
8151
1251
2251
3251
4251
5251
6251
7251
1351
2351
3351
4351
5351
6351
7351
1451
2451
3451
4451
5451
6451
7451
1551
2551
3551
4551
5551
6551
7551
1651
2651
3651
4651
5651
6651
7651
1751
2751
3751
4751
5751
6751
7751
1851
2851
3851
4851
5851
6851
7851
1951
2951
3951
4951
5951
6951
7951
1061
2061
3061
4061
5061
6061
7061
8061
1161
2161
3161
4161
5161
6161
7161
8161
1261
2261
3261
4261
5261
6261
7261
1361
2361
3361
4361
5361
6361
7361
1461
2461
3461
4461
5461
6461
7461
1561
2561
3561
4561
5561
6561
7561
1661
2661
3661
4661
5661
6661
7661
1761
2761
3761
4761
5761
6761
7761
1861
2861
3861
4861
5861
6861
7861
1961
2961
3961
4961
5961
6961
7961
1071
2071
3071
4071
5071
6071
7071
8071
1171
2171
3171
4171
5171
6171
7171
8171
1271
2271
3271
4271
5271
6271
7271
1371
2371
3371
4371
5371
6371
7371
1471
2471
3471
4471
5471
6471
7471
1571
2571
3571
4571
5571
6571
7571
1671
2671
3671
4671
5671
6671
7671
1771
2771
3771
4771
5771
6771
7771
1871
2871
3871
4871
5871
6871
7871
1971
2971
3971
4971
5971
6971
7971
1081
2081
3081
4081
5081
6081
7081
8081
1181
2181
3181
4181
5181
6181
7181
8181
1281
2281
3281
4281
5281
6281
7281
1381
2381
3381
4381
5381
6381
7381
1481
2481
3481
4481
5481
6481
7481
1581
2581
3581
4581
5581
6581
7581
1681
2681
3681
4681
5681
6681
7681
1781
2781
3781
4781
5781
6781
7781
1881
2881
3881
4881
5881
6881
7881
1981
2981
3981
4981
5981
6981
7981
1091
2091
3091
4091
5091
6091
7091
8091
1191
2191
3191
4191
5191
6191
7191
8191
1291
2291
3291
4291
5291
6291
7291
1391
2391
3391
4391
5391
6391
7391
1491
2491
3491
4491
5491
6491
7491
1591
2591
3591
4591
5591
6591
7591
1691
2691
3691
4691
5691
6691
7691
1791
2791
3791
4791
5791
6791
7791
1891
2891
3891
4891
5891
6891
7891
1991
2991
3991
4991
5991
6991
7991
1002
2002
3002
4002
5002
6002
7002
8002
1102
2102
3102
4102
5102
6102
7102
8102
1202
2202
3202
4202
5202
6202
7202
8202
1302
2302
3302
4302
5302
6302
7302
1402
2402
3402
4402
5402
6402
7402
1502
2502
3502
4502
5502
6502
7502
1602
2602
3602
4602
5602
6602
7602
1702
2702
3702
4702
5702
6702
7702
1802
2802
3802
4802
5802
6802
7802
1902
2902
3902
4902
5902
6902
7902
1012
2012
3012
4012
5012
6012
7012
8012
1112
2112
3112
4112
5112
6112
7112
8112
1212
2212
3212
4212
5212
6212
7212
8212
1312
2312
3312
4312
5312
6312
7312
1412
2412
3412
4412
5412
6412
7412
1512
2512
3512
4512
5512
6512
7512
1612
2612
3612
4612
5612
6612
7612
1712
2712
3712
4712
5712
6712
7712
1812
2812
3812
4812
5812
6812
7812
1912
2912
3912
4912
5912
6912
7912
1022
2022
3022
4022
5022
6022
7022
8022
1122
2122
3122
4122
5122
6122
7122
8122
1222
2222
3222
4222
5222
6222
7222
8222
1322
2322
3322
4322
5322
6322
7322
1422
2422
3422
4422
5422
6422
7422
1522
2522
3522
4522
5522
6522
7522
1622
2622
3622
4622
5622
6622
7622
1722
2722
3722
4722
5722
6722
7722
1822
2822
3822
4822
5822
6822
7822
1922
2922
3922
4922
5922
6922
7922
1032
2032
3032
4032
5032
6032
7032
8032
1132
2132
3132
4132
5132
6132
7132
8132
1232
2232
3232
4232
5232
6232
7232
8232
1332
2332
3332
4332
5332
6332
7332
1432
2432
3432
4432
5432
6432
7432
1532
2532
3532
4532
5532
6532
7532
1632
2632
3632
4632
5632
6632
7632
1732
2732
3732
4732
5732
6732
7732
1832
2832
3832
4832
5832
6832
7832
1932
2932
3932
4932
5932
6932
7932
1042
2042
3042
4042
5042
6042
7042
8042
1142
2142
3142
4142
5142
6142
7142
8142
1242
2242
3242
4242
5242
6242
7242
8242
1342
2342
3342
4342
5342
6342
7342
1442
2442
3442
4442
5442
6442
7442
1542
2542
3542
4542
5542
6542
7542
1642
2642
3642
4642
5642
6642
7642
1742
2742
3742
4742
5742
6742
7742
1842
2842
3842
4842
5842
6842
7842
1942
2942
3942
4942
5942
6942
7942
1052
2052
3052
4052
5052
6052
7052
8052
1152
2152
3152
4152
5152
6152
7152
8152
1252
2252
3252
4252
5252
6252
7252
1352
2352
3352
4352
5352
6352
7352
1452
2452
3452
4452
5452
6452
7452
1552
2552
3552
4552
5552
6552
7552
1652
2652
3652
4652
5652
6652
7652
1752
2752
3752
4752
5752
6752
7752
1852
2852
3852
4852
5852
6852
7852
1952
2952
3952
4952
5952
6952
7952
1062
2062
3062
4062
5062
6062
7062
8062
1162
2162
3162
4162
5162
6162
7162
8162
1262
2262
3262
4262
5262
6262
7262
1362
2362
3362
4362
5362
6362
7362
1462
2462
3462
4462
5462
6462
7462
1562
2562
3562
4562
5562
6562
7562
1662
2662
3662
4662
5662
6662
7662
1762
2762
3762
4762
5762
6762
7762
1862
2862
3862
4862
5862
6862
7862
1962
2962
3962
4962
5962
6962
7962
1072
2072
3072
4072
5072
6072
7072
8072
1172
2172
3172
4172
5172
6172
7172
8172
1272
2272
3272
4272
5272
6272
7272
1372
2372
3372
4372
5372
6372
7372
1472
2472
3472
4472
5472
6472
7472
1572
2572
3572
4572
5572
6572
7572
1672
2672
3672
4672
5672
6672
7672
1772
2772
3772
4772
5772
6772
7772
1872
2872
3872
4872
5872
6872
7872
1972
2972
3972
4972
5972
6972
7972
1082
2082
3082
4082
5082
6082
7082
8082
1182
2182
3182
4182
5182
6182
7182
8182
1282
2282
3282
4282
5282
6282
7282
1382
2382
3382
4382
5382
6382
7382
1482
2482
3482
4482
5482
6482
7482
1582
2582
3582
4582
5582
6582
7582
1682
2682
3682
4682
5682
6682
7682
1782
2782
3782
4782
5782
6782
7782
1882
2882
3882
4882
5882
6882
7882
1982
2982
3982
4982
5982
6982
7982
1092
2092
3092
4092
5092
6092
7092
8092
1192
2192
3192
4192
5192
6192
7192
8192
1292
2292
3292
4292
5292
6292
7292
1392
2392
3392
4392
5392
6392
7392
1492
2492
3492
4492
5492
6492
7492
1592
2592
3592
4592
5592
6592
7592
1692
2692
3692
4692
5692
6692
7692
1792
2792
3792
4792
5792
6792
7792
1892
2892
3892
4892
5892
6892
7892
1992
2992
3992
4992
5992
6992
7992
1003
2003
3003
4003
5003
6003
7003
8003
1103
2103
3103
4103
5103
6103
7103
8103
1203
2203
3203
4203
5203
6203
7203
8203
1303
2303
3303
4303
5303
6303
7303
1403
2403
3403
4403
5403
6403
7403
1503
2503
3503
4503
5503
6503
7503
1603
2603
3603
4603
5603
6603
7603
1703
2703
3703
4703
5703
6703
7703
1803
2803
3803
4803
5803
6803
7803
1903
2903
3903
4903
5903
6903
7903
1013
2013
3013
4013
5013
6013
7013
8013
1113
2113
3113
4113
5113
6113
7113
8113
1213
2213
3213
4213
5213
6213
7213
8213
1313
2313
3313
4313
5313
6313
7313
1413
2413
3413
4413
5413
6413
7413
1513
2513
3513
4513
5513
6513
7513
1613
2613
3613
4613
5613
6613
7613
1713
2713
3713
4713
5713
6713
7713
1813
2813
3813
4813
5813
6813
7813
1913
2913
3913
4913
5913
6913
7913
1023
2023
3023
4023
5023
6023
7023
8023
1123
2123
3123
4123
5123
6123
7123
8123
1223
2223
3223
4223
5223
6223
7223
8223
1323
2323
3323
4323
5323
6323
7323
1423
2423
3423
4423
5423
6423
7423
1523
2523
3523
4523
5523
6523
7523
1623
2623
3623
4623
5623
6623
7623
1723
2723
3723
4723
5723
6723
7723
1823
2823
3823
4823
5823
6823
7823
1923
2923
3923
4923
5923
6923
7923
1033
2033
3033
4033
5033
6033
7033
8033
1133
2133
3133
4133
5133
6133
7133
8133
1233
2233
3233
4233
5233
6233
7233
8233
1333
2333
3333
4333
5333
6333
7333
1433
2433
3433
4433
5433
6433
7433
1533
2533
3533
4533
5533
6533
7533
1633
2633
3633
4633
5633
6633
7633
1733
2733
3733
4733
5733
6733
7733
1833
2833
3833
4833
5833
6833
7833
1933
2933
3933
4933
5933
6933
7933
1043
2043
3043
4043
5043
6043
7043
8043
1143
2143
3143
4143
5143
6143
7143
8143
1243
2243
3243
4243
5243
6243
7243
8243
1343
2343
3343
4343
5343
6343
7343
1443
2443
3443
4443
5443
6443
7443
1543
2543
3543
4543
5543
6543
7543
1643
2643
3643
4643
5643
6643
7643
1743
2743
3743
4743
5743
6743
7743
1843
2843
3843
4843
5843
6843
7843
1943
2943
3943
4943
5943
6943
7943
1053
2053
3053
4053
5053
6053
7053
8053
1153
2153
3153
4153
5153
6153
7153
8153
1253
2253
3253
4253
5253
6253
7253
1353
2353
3353
4353
5353
6353
7353
1453
2453
3453
4453
5453
6453
7453
1553
2553
3553
4553
5553
6553
7553
1653
2653
3653
4653
5653
6653
7653
1753
2753
3753
4753
5753
6753
7753
1853
2853
3853
4853
5853
6853
7853
1953
2953
3953
4953
5953
6953
7953
1063
2063
3063
4063
5063
6063
7063
8063
1163
2163
3163
4163
5163
6163
7163
8163
1263
2263
3263
4263
5263
6263
7263
1363
2363
3363
4363
5363
6363
7363
1463
2463
3463
4463
5463
6463
7463
1563
2563
3563
4563
5563
6563
7563
1663
2663
3663
4663
5663
6663
7663
1763
2763
3763
4763
5763
6763
7763
1863
2863
3863
4863
5863
6863
7863
1963
2963
3963
4963
5963
6963
7963
1073
2073
3073
4073
5073
6073
7073
8073
1173
2173
3173
4173
5173
6173
7173
8173
1273
2273
3273
4273
5273
6273
7273
1373
2373
3373
4373
5373
6373
7373
1473
2473
3473
4473
5473
6473
7473
1573
2573
3573
4573
5573
6573
7573
1673
2673
3673
4673
5673
6673
7673
1773
2773
3773
4773
5773
6773
7773
1873
2873
3873
4873
5873
6873
7873
1973
2973
3973
4973
5973
6973
7973
1083
2083
3083
4083
5083
6083
7083
8083
1183
2183
3183
4183
5183
6183
7183
8183
1283
2283
3283
4283
5283
6283
7283
1383
2383
3383
4383
5383
6383
7383
1483
2483
3483
4483
5483
6483
7483
1583
2583
3583
4583
5583
6583
7583
1683
2683
3683
4683
5683
6683
7683
1783
2783
3783
4783
5783
6783
7783
1883
2883
3883
4883
5883
6883
7883
1983
2983
3983
4983
5983
6983
7983
1093
2093
3093
4093
5093
6093
7093
8093
1193
2193
3193
4193
5193
6193
7193
8193
1293
2293
3293
4293
5293
6293
7293
1393
2393
3393
4393
5393
6393
7393
1493
2493
3493
4493
5493
6493
7493
1593
2593
3593
4593
5593
6593
7593
1693
2693
3693
4693
5693
6693
7693
1793
2793
3793
4793
5793
6793
7793
1893
2893
3893
4893
5893
6893
7893
1993
2993
3993
4993
5993
6993
7993
1004
2004
3004
4004
5004
6004
7004
8004
1104
2104
3104
4104
5104
6104
7104
8104
1204
2204
3204
4204
5204
6204
7204
8204
1304
2304
3304
4304
5304
6304
7304
1404
2404
3404
4404
5404
6404
7404
1504
2504
3504
4504
5504
6504
7504
1604
2604
3604
4604
5604
6604
7604
1704
2704
3704
4704
5704
6704
7704
1804
2804
3804
4804
5804
6804
7804
1904
2904
3904
4904
5904
6904
7904
1014
2014
3014
4014
5014
6014
7014
8014
1114
2114
3114
4114
5114
6114
7114
8114
1214
2214
3214
4214
5214
6214
7214
8214
1314
2314
3314
4314
5314
6314
7314
1414
2414
3414
4414
5414
6414
7414
1514
2514
3514
4514
5514
6514
7514
1614
2614
3614
4614
5614
6614
7614
1714
2714
3714
4714
5714
6714
7714
1814
2814
3814
4814
5814
6814
7814
1914
2914
3914
4914
5914
6914
7914
1024
2024
3024
4024
5024
6024
7024
8024
1124
2124
3124
4124
5124
6124
7124
8124
1224
2224
3224
4224
5224
6224
7224
8224
1324
2324
3324
4324
5324
6324
7324
1424
2424
3424
4424
5424
6424
7424
1524
2524
3524
4524
5524
6524
7524
1624
2624
3624
4624
5624
6624
7624
1724
2724
3724
4724
5724
6724
7724
1824
2824
3824
4824
5824
6824
7824
1924
2924
3924
4924
5924
6924
7924
1034
2034
3034
4034
5034
6034
7034
8034
1134
2134
3134
4134
5134
6134
7134
8134
1234
2234
3234
4234
5234
6234
7234
8234
1334
2334
3334
4334
5334
6334
7334
1434
2434
3434
4434
5434
6434
7434
1534
2534
3534
4534
5534
6534
7534
1634
2634
3634
4634
5634
6634
7634
1734
2734
3734
4734
5734
6734
7734
1834
2834
3834
4834
5834
6834
7834
1934
2934
3934
4934
5934
6934
7934
1044
2044
3044
4044
5044
6044
7044
8044
1144
2144
3144
4144
5144
6144
7144
8144
1244
2244
3244
4244
5244
6244
7244
8244
1344
2344
3344
4344
5344
6344
7344
1444
2444
3444
4444
5444
6444
7444
1544
2544
3544
4544
5544
6544
7544
1644
2644
3644
4644
5644
6644
7644
1744
2744
3744
4744
5744
6744
7744
1844
2844
3844
4844
5844
6844
7844
1944
2944
3944
4944
5944
6944
7944
1054
2054
3054
4054
5054
6054
7054
8054
1154
2154
3154
4154
5154
6154
7154
8154
1254
2254
3254
4254
5254
6254
7254
1354
2354
3354
4354
5354
6354
7354
1454
2454
3454
4454
5454
6454
7454
1554
2554
3554
4554
5554
6554
7554
1654
2654
3654
4654
5654
6654
7654
1754
2754
3754
4754
5754
6754
7754
1854
2854
3854
4854
5854
6854
7854
1954
2954
3954
4954
5954
6954
7954
1064
2064
3064
4064
5064
6064
7064
8064
1164
2164
3164
4164
5164
6164
7164
8164
1264
2264
3264
4264
5264
6264
7264
1364
2364
3364
4364
5364
6364
7364
1464
2464
3464
4464
5464
6464
7464
1564
2564
3564
4564
5564
6564
7564
1664
2664
3664
4664
5664
6664
7664
1764
2764
3764
4764
5764
6764
7764
1864
2864
3864
4864
5864
6864
7864
1964
2964
3964
4964
5964
6964
7964
1074
2074
3074
4074
5074
6074
7074
8074
1174
2174
3174
4174
5174
6174
7174
8174
1274
2274
3274
4274
5274
6274
7274
1374
2374
3374
4374
5374
6374
7374
1474
2474
3474
4474
5474
6474
7474
1574
2574
3574
4574
5574
6574
7574
1674
2674
3674
4674
5674
6674
7674
1774
2774
3774
4774
5774
6774
7774
1874
2874
3874
4874
5874
6874
7874
1974
2974
3974
4974
5974
6974
7974
1084
2084
3084
4084
5084
6084
7084
8084
1184
2184
3184
4184
5184
6184
7184
8184
1284
2284
3284
4284
5284
6284
7284
1384
2384
3384
4384
5384
6384
7384
1484
2484
3484
4484
5484
6484
7484
1584
2584
3584
4584
5584
6584
7584
1684
2684
3684
4684
5684
6684
7684
1784
2784
3784
4784
5784
6784
7784
1884
2884
3884
4884
5884
6884
7884
1984
2984
3984
4984
5984
6984
7984
1094
2094
3094
4094
5094
6094
7094
8094
1194
2194
3194
4194
5194
6194
7194
8194
1294
2294
3294
4294
5294
6294
7294
1394
2394
3394
4394
5394
6394
7394
1494
2494
3494
4494
5494
6494
7494
1594
2594
3594
4594
5594
6594
7594
1694
2694
3694
4694
5694
6694
7694
1794
2794
3794
4794
5794
6794
7794
1894
2894
3894
4894
5894
6894
7894
1994
2994
3994
4994
5994
6994
7994
1005
2005
3005
4005
5005
6005
7005
8005
1105
2105
3105
4105
5105
6105
7105
8105
1205
2205
3205
4205
5205
6205
7205
8205
1305
2305
3305
4305
5305
6305
7305
1405
2405
3405
4405
5405
6405
7405
1505
2505
3505
4505
5505
6505
7505
1605
2605
3605
4605
5605
6605
7605
1705
2705
3705
4705
5705
6705
7705
1805
2805
3805
4805
5805
6805
7805
1905
2905
3905
4905
5905
6905
7905
1015
2015
3015
4015
5015
6015
7015
8015
1115
2115
3115
4115
5115
6115
7115
8115
1215
2215
3215
4215
5215
6215
7215
8215
1315
2315
3315
4315
5315
6315
7315
1415
2415
3415
4415
5415
6415
7415
1515
2515
3515
4515
5515
6515
7515
1615
2615
3615
4615
5615
6615
7615
1715
2715
3715
4715
5715
6715
7715
1815
2815
3815
4815
5815
6815
7815
1915
2915
3915
4915
5915
6915
7915
1025
2025
3025
4025
5025
6025
7025
8025
1125
2125
3125
4125
5125
6125
7125
8125
1225
2225
3225
4225
5225
6225
7225
8225
1325
2325
3325
4325
5325
6325
7325
1425
2425
3425
4425
5425
6425
7425
1525
2525
3525
4525
5525
6525
7525
1625
2625
3625
4625
5625
6625
7625
1725
2725
3725
4725
5725
6725
7725
1825
2825
3825
4825
5825
6825
7825
1925
2925
3925
4925
5925
6925
7925
1035
2035
3035
4035
5035
6035
7035
8035
1135
2135
3135
4135
5135
6135
7135
8135
1235
2235
3235
4235
5235
6235
7235
8235
1335
2335
3335
4335
5335
6335
7335
1435
2435
3435
4435
5435
6435
7435
1535
2535
3535
4535
5535
6535
7535
1635
2635
3635
4635
5635
6635
7635
1735
2735
3735
4735
5735
6735
7735
1835
2835
3835
4835
5835
6835
7835
1935
2935
3935
4935
5935
6935
7935
1045
2045
3045
4045
5045
6045
7045
8045
1145
2145
3145
4145
5145
6145
7145
8145
1245
2245
3245
4245
5245
6245
7245
8245
1345
2345
3345
4345
5345
6345
7345
1445
2445
3445
4445
5445
6445
7445
1545
2545
3545
4545
5545
6545
7545
1645
2645
3645
4645
5645
6645
7645
1745
2745
3745
4745
5745
6745
7745
1845
2845
3845
4845
5845
6845
7845
1945
2945
3945
4945
5945
6945
7945
1055
2055
3055
4055
5055
6055
7055
8055
1155
2155
3155
4155
5155
6155
7155
8155
1255
2255
3255
4255
5255
6255
7255
1355
2355
3355
4355
5355
6355
7355
1455
2455
3455
4455
5455
6455
7455
1555
2555
3555
4555
5555
6555
7555
1655
2655
3655
4655
5655
6655
7655
1755
2755
3755
4755
5755
6755
7755
1855
2855
3855
4855
5855
6855
7855
1955
2955
3955
4955
5955
6955
7955
1065
2065
3065
4065
5065
6065
7065
8065
1165
2165
3165
4165
5165
6165
7165
8165
1265
2265
3265
4265
5265
6265
7265
1365
2365
3365
4365
5365
6365
7365
1465
2465
3465
4465
5465
6465
7465
1565
2565
3565
4565
5565
6565
7565
1665
2665
3665
4665
5665
6665
7665
1765
2765
3765
4765
5765
6765
7765
1865
2865
3865
4865
5865
6865
7865
1965
2965
3965
4965
5965
6965
7965
1075
2075
3075
4075
5075
6075
7075
8075
1175
2175
3175
4175
5175
6175
7175
8175
1275
2275
3275
4275
5275
6275
7275
1375
2375
3375
4375
5375
6375
7375
1475
2475
3475
4475
5475
6475
7475
1575
2575
3575
4575
5575
6575
7575
1675
2675
3675
4675
5675
6675
7675
1775
2775
3775
4775
5775
6775
7775
1875
2875
3875
4875
5875
6875
7875
1975
2975
3975
4975
5975
6975
7975
1085
2085
3085
4085
5085
6085
7085
8085
1185
2185
3185
4185
5185
6185
7185
8185
1285
2285
3285
4285
5285
6285
7285
1385
2385
3385
4385
5385
6385
7385
1485
2485
3485
4485
5485
6485
7485
1585
2585
3585
4585
5585
6585
7585
1685
2685
3685
4685
5685
6685
7685
1785
2785
3785
4785
5785
6785
7785
1885
2885
3885
4885
5885
6885
7885
1985
2985
3985
4985
5985
6985
7985
1095
2095
3095
4095
5095
6095
7095
8095
1195
2195
3195
4195
5195
6195
7195
8195
1295
2295
3295
4295
5295
6295
7295
1395
2395
3395
4395
5395
6395
7395
1495
2495
3495
4495
5495
6495
7495
1595
2595
3595
4595
5595
6595
7595
1695
2695
3695
4695
5695
6695
7695
1795
2795
3795
4795
5795
6795
7795
1895
2895
3895
4895
5895
6895
7895
1995
2995
3995
4995
5995
6995
7995
1006
2006
3006
4006
5006
6006
7006
8006
1106
2106
3106
4106
5106
6106
7106
8106
1206
2206
3206
4206
5206
6206
7206
8206
1306
2306
3306
4306
5306
6306
7306
1406
2406
3406
4406
5406
6406
7406
1506
2506
3506
4506
5506
6506
7506
1606
2606
3606
4606
5606
6606
7606
1706
2706
3706
4706
5706
6706
7706
1806
2806
3806
4806
5806
6806
7806
1906
2906
3906
4906
5906
6906
7906
1016
2016
3016
4016
5016
6016
7016
8016
1116
2116
3116
4116
5116
6116
7116
8116
1216
2216
3216
4216
5216
6216
7216
8216
1316
2316
3316
4316
5316
6316
7316
1416
2416
3416
4416
5416
6416
7416
1516
2516
3516
4516
5516
6516
7516
1616
2616
3616
4616
5616
6616
7616
1716
2716
3716
4716
5716
6716
7716
1816
2816
3816
4816
5816
6816
7816
1916
2916
3916
4916
5916
6916
7916
1026
2026
3026
4026
5026
6026
7026
8026
1126
2126
3126
4126
5126
6126
7126
8126
1226
2226
3226
4226
5226
6226
7226
8226
1326
2326
3326
4326
5326
6326
7326
1426
2426
3426
4426
5426
6426
7426
1526
2526
3526
4526
5526
6526
7526
1626
2626
3626
4626
5626
6626
7626
1726
2726
3726
4726
5726
6726
7726
1826
2826
3826
4826
5826
6826
7826
1926
2926
3926
4926
5926
6926
7926
1036
2036
3036
4036
5036
6036
7036
8036
1136
2136
3136
4136
5136
6136
7136
8136
1236
2236
3236
4236
5236
6236
7236
8236
1336
2336
3336
4336
5336
6336
7336
1436
2436
3436
4436
5436
6436
7436
1536
2536
3536
4536
5536
6536
7536
1636
2636
3636
4636
5636
6636
7636
1736
2736
3736
4736
5736
6736
7736
1836
2836
3836
4836
5836
6836
7836
1936
2936
3936
4936
5936
6936
7936
1046
2046
3046
4046
5046
6046
7046
8046
1146
2146
3146
4146
5146
6146
7146
8146
1246
2246
3246
4246
5246
6246
7246
8246
1346
2346
3346
4346
5346
6346
7346
1446
2446
3446
4446
5446
6446
7446
1546
2546
3546
4546
5546
6546
7546
1646
2646
3646
4646
5646
6646
7646
1746
2746
3746
4746
5746
6746
7746
1846
2846
3846
4846
5846
6846
7846
1946
2946
3946
4946
5946
6946
7946
1056
2056
3056
4056
5056
6056
7056
8056
1156
2156
3156
4156
5156
6156
7156
8156
1256
2256
3256
4256
5256
6256
7256
1356
2356
3356
4356
5356
6356
7356
1456
2456
3456
4456
5456
6456
7456
1556
2556
3556
4556
5556
6556
7556
1656
2656
3656
4656
5656
6656
7656
1756
2756
3756
4756
5756
6756
7756
1856
2856
3856
4856
5856
6856
7856
1956
2956
3956
4956
5956
6956
7956
1066
2066
3066
4066
5066
6066
7066
8066
1166
2166
3166
4166
5166
6166
7166
8166
1266
2266
3266
4266
5266
6266
7266
1366
2366
3366
4366
5366
6366
7366
1466
2466
3466
4466
5466
6466
7466
1566
2566
3566
4566
5566
6566
7566
1666
2666
3666
4666
5666
6666
7666
1766
2766
3766
4766
5766
6766
7766
1866
2866
3866
4866
5866
6866
7866
1966
2966
3966
4966
5966
6966
7966
1076
2076
3076
4076
5076
6076
7076
8076
1176
2176
3176
4176
5176
6176
7176
8176
1276
2276
3276
4276
5276
6276
7276
1376
2376
3376
4376
5376
6376
7376
1476
2476
3476
4476
5476
6476
7476
1576
2576
3576
4576
5576
6576
7576
1676
2676
3676
4676
5676
6676
7676
1776
2776
3776
4776
5776
6776
7776
1876
2876
3876
4876
5876
6876
7876
1976
2976
3976
4976
5976
6976
7976
1086
2086
3086
4086
5086
6086
7086
8086
1186
2186
3186
4186
5186
6186
7186
8186
1286
2286
3286
4286
5286
6286
7286
1386
2386
3386
4386
5386
6386
7386
1486
2486
3486
4486
5486
6486
7486
1586
2586
3586
4586
5586
6586
7586
1686
2686
3686
4686
5686
6686
7686
1786
2786
3786
4786
5786
6786
7786
1886
2886
3886
4886
5886
6886
7886
1986
2986
3986
4986
5986
6986
7986
1096
2096
3096
4096
5096
6096
7096
8096
1196
2196
3196
4196
5196
6196
7196
8196
1296
2296
3296
4296
5296
6296
7296
1396
2396
3396
4396
5396
6396
7396
1496
2496
3496
4496
5496
6496
7496
1596
2596
3596
4596
5596
6596
7596
1696
2696
3696
4696
5696
6696
7696
1796
2796
3796
4796
5796
6796
7796
1896
2896
3896
4896
5896
6896
7896
1996
2996
3996
4996
5996
6996
7996
1007
2007
3007
4007
5007
6007
7007
8007
1107
2107
3107
4107
5107
6107
7107
8107
1207
2207
3207
4207
5207
6207
7207
8207
1307
2307
3307
4307
5307
6307
7307
1407
2407
3407
4407
5407
6407
7407
1507
2507
3507
4507
5507
6507
7507
1607
2607
3607
4607
5607
6607
7607
1707
2707
3707
4707
5707
6707
7707
1807
2807
3807
4807
5807
6807
7807
1907
2907
3907
4907
5907
6907
7907
1017
2017
3017
4017
5017
6017
7017
8017
1117
2117
3117
4117
5117
6117
7117
8117
1217
2217
3217
4217
5217
6217
7217
8217
1317
2317
3317
4317
5317
6317
7317
1417
2417
3417
4417
5417
6417
7417
1517
2517
3517
4517
5517
6517
7517
1617
2617
3617
4617
5617
6617
7617
1717
2717
3717
4717
5717
6717
7717
1817
2817
3817
4817
5817
6817
7817
1917
2917
3917
4917
5917
6917
7917
1027
2027
3027
4027
5027
6027
7027
8027
1127
2127
3127
4127
5127
6127
7127
8127
1227
2227
3227
4227
5227
6227
7227
8227
1327
2327
3327
4327
5327
6327
7327
1427
2427
3427
4427
5427
6427
7427
1527
2527
3527
4527
5527
6527
7527
1627
2627
3627
4627
5627
6627
7627
1727
2727
3727
4727
5727
6727
7727
1827
2827
3827
4827
5827
6827
7827
1927
2927
3927
4927
5927
6927
7927
1037
2037
3037
4037
5037
6037
7037
8037
1137
2137
3137
4137
5137
6137
7137
8137
1237
2237
3237
4237
5237
6237
7237
8237
1337
2337
3337
4337
5337
6337
7337
1437
2437
3437
4437
5437
6437
7437
1537
2537
3537
4537
5537
6537
7537
1637
2637
3637
4637
5637
6637
7637
1737
2737
3737
4737
5737
6737
7737
1837
2837
3837
4837
5837
6837
7837
1937
2937
3937
4937
5937
6937
7937
1047
2047
3047
4047
5047
6047
7047
8047
1147
2147
3147
4147
5147
6147
7147
8147
1247
2247
3247
4247
5247
6247
7247
8247
1347
2347
3347
4347
5347
6347
7347
1447
2447
3447
4447
5447
6447
7447
1547
2547
3547
4547
5547
6547
7547
1647
2647
3647
4647
5647
6647
7647
1747
2747
3747
4747
5747
6747
7747
1847
2847
3847
4847
5847
6847
7847
1947
2947
3947
4947
5947
6947
7947
1057
2057
3057
4057
5057
6057
7057
8057
1157
2157
3157
4157
5157
6157
7157
8157
1257
2257
3257
4257
5257
6257
7257
1357
2357
3357
4357
5357
6357
7357
1457
2457
3457
4457
5457
6457
7457
1557
2557
3557
4557
5557
6557
7557
1657
2657
3657
4657
5657
6657
7657
1757
2757
3757
4757
5757
6757
7757
1857
2857
3857
4857
5857
6857
7857
1957
2957
3957
4957
5957
6957
7957
1067
2067
3067
4067
5067
6067
7067
8067
1167
2167
3167
4167
5167
6167
7167
8167
1267
2267
3267
4267
5267
6267
7267
1367
2367
3367
4367
5367
6367
7367
1467
2467
3467
4467
5467
6467
7467
1567
2567
3567
4567
5567
6567
7567
1667
2667
3667
4667
5667
6667
7667
1767
2767
3767
4767
5767
6767
7767
1867
2867
3867
4867
5867
6867
7867
1967
2967
3967
4967
5967
6967
7967
1077
2077
3077
4077
5077
6077
7077
8077
1177
2177
3177
4177
5177
6177
7177
8177
1277
2277
3277
4277
5277
6277
7277
1377
2377
3377
4377
5377
6377
7377
1477
2477
3477
4477
5477
6477
7477
1577
2577
3577
4577
5577
6577
7577
1677
2677
3677
4677
5677
6677
7677
1777
2777
3777
4777
5777
6777
7777
1877
2877
3877
4877
5877
6877
7877
1977
2977
3977
4977
5977
6977
7977
1087
2087
3087
4087
5087
6087
7087
8087
1187
2187
3187
4187
5187
6187
7187
8187
1287
2287
3287
4287
5287
6287
7287
1387
2387
3387
4387
5387
6387
7387
1487
2487
3487
4487
5487
6487
7487
1587
2587
3587
4587
5587
6587
7587
1687
2687
3687
4687
5687
6687
7687
1787
2787
3787
4787
5787
6787
7787
1887
2887
3887
4887
5887
6887
7887
1987
2987
3987
4987
5987
6987
7987
1097
2097
3097
4097
5097
6097
7097
8097
1197
2197
3197
4197
5197
6197
7197
8197
1297
2297
3297
4297
5297
6297
7297
1397
2397
3397
4397
5397
6397
7397
1497
2497
3497
4497
5497
6497
7497
1597
2597
3597
4597
5597
6597
7597
1697
2697
3697
4697
5697
6697
7697
1797
2797
3797
4797
5797
6797
7797
1897
2897
3897
4897
5897
6897
7897
1997
2997
3997
4997
5997
6997
7997
1008
2008
3008
4008
5008
6008
7008
8008
1108
2108
3108
4108
5108
6108
7108
8108
1208
2208
3208
4208
5208
6208
7208
8208
1308
2308
3308
4308
5308
6308
7308
1408
2408
3408
4408
5408
6408
7408
1508
2508
3508
4508
5508
6508
7508
1608
2608
3608
4608
5608
6608
7608
1708
2708
3708
4708
5708
6708
7708
1808
2808
3808
4808
5808
6808
7808
1908
2908
3908
4908
5908
6908
7908
1018
2018
3018
4018
5018
6018
7018
8018
1118
2118
3118
4118
5118
6118
7118
8118
1218
2218
3218
4218
5218
6218
7218
8218
1318
2318
3318
4318
5318
6318
7318
1418
2418
3418
4418
5418
6418
7418
1518
2518
3518
4518
5518
6518
7518
1618
2618
3618
4618
5618
6618
7618
1718
2718
3718
4718
5718
6718
7718
1818
2818
3818
4818
5818
6818
7818
1918
2918
3918
4918
5918
6918
7918
1028
2028
3028
4028
5028
6028
7028
8028
1128
2128
3128
4128
5128
6128
7128
8128
1228
2228
3228
4228
5228
6228
7228
8228
1328
2328
3328
4328
5328
6328
7328
1428
2428
3428
4428
5428
6428
7428
1528
2528
3528
4528
5528
6528
7528
1628
2628
3628
4628
5628
6628
7628
1728
2728
3728
4728
5728
6728
7728
1828
2828
3828
4828
5828
6828
7828
1928
2928
3928
4928
5928
6928
7928
1038
2038
3038
4038
5038
6038
7038
8038
1138
2138
3138
4138
5138
6138
7138
8138
1238
2238
3238
4238
5238
6238
7238
8238
1338
2338
3338
4338
5338
6338
7338
1438
2438
3438
4438
5438
6438
7438
1538
2538
3538
4538
5538
6538
7538
1638
2638
3638
4638
5638
6638
7638
1738
2738
3738
4738
5738
6738
7738
1838
2838
3838
4838
5838
6838
7838
1938
2938
3938
4938
5938
6938
7938
1048
2048
3048
4048
5048
6048
7048
8048
1148
2148
3148
4148
5148
6148
7148
8148
1248
2248
3248
4248
5248
6248
7248
8248
1348
2348
3348
4348
5348
6348
7348
1448
2448
3448
4448
5448
6448
7448
1548
2548
3548
4548
5548
6548
7548
1648
2648
3648
4648
5648
6648
7648
1748
2748
3748
4748
5748
6748
7748
1848
2848
3848
4848
5848
6848
7848
1948
2948
3948
4948
5948
6948
7948
1058
2058
3058
4058
5058
6058
7058
8058
1158
2158
3158
4158
5158
6158
7158
8158
1258
2258
3258
4258
5258
6258
7258
1358
2358
3358
4358
5358
6358
7358
1458
2458
3458
4458
5458
6458
7458
1558
2558
3558
4558
5558
6558
7558
1658
2658
3658
4658
5658
6658
7658
1758
2758
3758
4758
5758
6758
7758
1858
2858
3858
4858
5858
6858
7858
1958
2958
3958
4958
5958
6958
7958
1068
2068
3068
4068
5068
6068
7068
8068
1168
2168
3168
4168
5168
6168
7168
8168
1268
2268
3268
4268
5268
6268
7268
1368
2368
3368
4368
5368
6368
7368
1468
2468
3468
4468
5468
6468
7468
1568
2568
3568
4568
5568
6568
7568
1668
2668
3668
4668
5668
6668
7668
1768
2768
3768
4768
5768
6768
7768
1868
2868
3868
4868
5868
6868
7868
1968
2968
3968
4968
5968
6968
7968
1078
2078
3078
4078
5078
6078
7078
8078
1178
2178
3178
4178
5178
6178
7178
8178
1278
2278
3278
4278
5278
6278
7278
1378
2378
3378
4378
5378
6378
7378
1478
2478
3478
4478
5478
6478
7478
1578
2578
3578
4578
5578
6578
7578
1678
2678
3678
4678
5678
6678
7678
1778
2778
3778
4778
5778
6778
7778
1878
2878
3878
4878
5878
6878
7878
1978
2978
3978
4978
5978
6978
7978
1088
2088
3088
4088
5088
6088
7088
8088
1188
2188
3188
4188
5188
6188
7188
8188
1288
2288
3288
4288
5288
6288
7288
1388
2388
3388
4388
5388
6388
7388
1488
2488
3488
4488
5488
6488
7488
1588
2588
3588
4588
5588
6588
7588
1688
2688
3688
4688
5688
6688
7688
1788
2788
3788
4788
5788
6788
7788
1888
2888
3888
4888
5888
6888
7888
1988
2988
3988
4988
5988
6988
7988
1098
2098
3098
4098
5098
6098
7098
8098
1198
2198
3198
4198
5198
6198
7198
8198
1298
2298
3298
4298
5298
6298
7298
1398
2398
3398
4398
5398
6398
7398
1498
2498
3498
4498
5498
6498
7498
1598
2598
3598
4598
5598
6598
7598
1698
2698
3698
4698
5698
6698
7698
1798
2798
3798
4798
5798
6798
7798
1898
2898
3898
4898
5898
6898
7898
1998
2998
3998
4998
5998
6998
7998
1009
2009
3009
4009
5009
6009
7009
8009
1109
2109
3109
4109
5109
6109
7109
8109
1209
2209
3209
4209
5209
6209
7209
8209
1309
2309
3309
4309
5309
6309
7309
1409
2409
3409
4409
5409
6409
7409
1509
2509
3509
4509
5509
6509
7509
1609
2609
3609
4609
5609
6609
7609
1709
2709
3709
4709
5709
6709
7709
1809
2809
3809
4809
5809
6809
7809
1909
2909
3909
4909
5909
6909
7909
1019
2019
3019
4019
5019
6019
7019
8019
1119
2119
3119
4119
5119
6119
7119
8119
1219
2219
3219
4219
5219
6219
7219
8219
1319
2319
3319
4319
5319
6319
7319
1419
2419
3419
4419
5419
6419
7419
1519
2519
3519
4519
5519
6519
7519
1619
2619
3619
4619
5619
6619
7619
1719
2719
3719
4719
5719
6719
7719
1819
2819
3819
4819
5819
6819
7819
1919
2919
3919
4919
5919
6919
7919
1029
2029
3029
4029
5029
6029
7029
8029
1129
2129
3129
4129
5129
6129
7129
8129
1229
2229
3229
4229
5229
6229
7229
8229
1329
2329
3329
4329
5329
6329
7329
1429
2429
3429
4429
5429
6429
7429
1529
2529
3529
4529
5529
6529
7529
1629
2629
3629
4629
5629
6629
7629
1729
2729
3729
4729
5729
6729
7729
1829
2829
3829
4829
5829
6829
7829
1929
2929
3929
4929
5929
6929
7929
1039
2039
3039
4039
5039
6039
7039
8039
1139
2139
3139
4139
5139
6139
7139
8139
1239
2239
3239
4239
5239
6239
7239
8239
1339
2339
3339
4339
5339
6339
7339
1439
2439
3439
4439
5439
6439
7439
1539
2539
3539
4539
5539
6539
7539
1639
2639
3639
4639
5639
6639
7639
1739
2739
3739
4739
5739
6739
7739
1839
2839
3839
4839
5839
6839
7839
1939
2939
3939
4939
5939
6939
7939
1049
2049
3049
4049
5049
6049
7049
8049
1149
2149
3149
4149
5149
6149
7149
8149
1249
2249
3249
4249
5249
6249
7249
1349
2349
3349
4349
5349
6349
7349
1449
2449
3449
4449
5449
6449
7449
1549
2549
3549
4549
5549
6549
7549
1649
2649
3649
4649
5649
6649
7649
1749
2749
3749
4749
5749
6749
7749
1849
2849
3849
4849
5849
6849
7849
1949
2949
3949
4949
5949
6949
7949
1059
2059
3059
4059
5059
6059
7059
8059
1159
2159
3159
4159
5159
6159
7159
8159
1259
2259
3259
4259
5259
6259
7259
1359
2359
3359
4359
5359
6359
7359
1459
2459
3459
4459
5459
6459
7459
1559
2559
3559
4559
5559
6559
7559
1659
2659
3659
4659
5659
6659
7659
1759
2759
3759
4759
5759
6759
7759
1859
2859
3859
4859
5859
6859
7859
1959
2959
3959
4959
5959
6959
7959
1069
2069
3069
4069
5069
6069
7069
8069
1169
2169
3169
4169
5169
6169
7169
8169
1269
2269
3269
4269
5269
6269
7269
1369
2369
3369
4369
5369
6369
7369
1469
2469
3469
4469
5469
6469
7469
1569
2569
3569
4569
5569
6569
7569
1669
2669
3669
4669
5669
6669
7669
1769
2769
3769
4769
5769
6769
7769
1869
2869
3869
4869
5869
6869
7869
1969
2969
3969
4969
5969
6969
7969
1079
2079
3079
4079
5079
6079
7079
8079
1179
2179
3179
4179
5179
6179
7179
8179
1279
2279
3279
4279
5279
6279
7279
1379
2379
3379
4379
5379
6379
7379
1479
2479
3479
4479
5479
6479
7479
1579
2579
3579
4579
5579
6579
7579
1679
2679
3679
4679
5679
6679
7679
1779
2779
3779
4779
5779
6779
7779
1879
2879
3879
4879
5879
6879
7879
1979
2979
3979
4979
5979
6979
7979
1089
2089
3089
4089
5089
6089
7089
8089
1189
2189
3189
4189
5189
6189
7189
8189
1289
2289
3289
4289
5289
6289
7289
1389
2389
3389
4389
5389
6389
7389
1489
2489
3489
4489
5489
6489
7489
1589
2589
3589
4589
5589
6589
7589
1689
2689
3689
4689
5689
6689
7689
1789
2789
3789
4789
5789
6789
7789
1889
2889
3889
4889
5889
6889
7889
1989
2989
3989
4989
5989
6989
7989
1099
2099
3099
4099
5099
6099
7099
8099
1199
2199
3199
4199
5199
6199
7199
8199
1299
2299
3299
4299
5299
6299
7299
1399
2399
3399
4399
5399
6399
7399
1499
2499
3499
4499
5499
6499
7499
1599
2599
3599
4599
5599
6599
7599
1699
2699
3699
4699
5699
6699
7699
1799
2799
3799
4799
5799
6799
7799
1899
2899
3899
4899
5899
6899
7899
1999
2999
3999
4999
5999
6999
7999
!$'*-047:=@CGJMPhhhhhhSVY\_b
''))DD++--//1133557799;;==??AA
!!##%%''))++--//
S$T$U$V$W$X$Y$Z$[$\$]$^$_$`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$t$u$v$w$x$y$z${$|$}$~$
% %!%"%#%$%%%&%'%(%)%*%+%,%-%.%/%0%1%2%3%4%5%6%7%8%9%:%;%<%=%>%?%@%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%
I I!I"I#I$I%I&I'I(I)I*I+I,I-I.I/I0I1I2I3I4I5I6I7I8I9I:I;I<I=I>I?I@IAIBICIDIEIFIGIHIIIJIKILIMINIOIPIQIRISITIUIVIWIXIYIZI[I\I]I^I_I`IaIbIcIdIeIfIgIhIiIjIkIlImInIoIpIqIrIsItIuIvIwIxIyIzI{I|I}I
KKNN!!QQ%%UU
))YY--ll1144qq77<<\\uu
zz~~
CC``GG
ffff [&1
) )!)")
*#)$)%)&)
.}.|.~.
i.h.j.e.d.f.
342444/4.404'4
1(/(-(3()('(%(+(!(
(#(9(7(5(
A2@2C2=2<2?2G2F2
$*06<BHNTZ
ahou
/=/=/=/=V/=/=/=
/=/=
/=/=/=/=/=/=/=/=
/=/=/=/=/=
Z=Z=Z=Z=Z=Z=Z=Z=Z=Z=
Z=Z=
Z=Z=Z=
o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7
9o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7
9/:o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7q(
2q(q(q(q(
2q(q(q(q(
2q(q(q(q(
2q(q(q(q(
2q(q(q(q(
2q(q(q(q(
2q(q(q(q(
2q(q(q(b
QV\S
!&##
!$'*-0369<?BEHKNQTWZ]`cfilorux{
D(D(D(D(D(D(
v(v(v(v(v(v(v(v(v(v(
v(v(v(v(v(v(v(I
v(v(v(v(v(
v(v(
v(v(v(~
C!C!C!8
C!C!C!C!C!C!C!C!
D&D&D&D&D&D&+
D&D&D&D&D&D&D&D&D&D&D&D&D&D&D&D&D&D&D&D&
KKNN!!QQ%%UU
))YY--ll1144qq77<<\\uu
zz~~
CC``GG
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmwwwwwwmmwwwmmwwwwwwwwwmmwwwmmwwwwwwwwwmmwwwmmwwwwwwwwwmmwwwmmwww
FFffFFfffFFFffFFfffFFFffFFfffFFFffFFfffFFFffFFfffFFFffFFfffFFFffFFfffFFFffFFfffFFFffFFfffFFFffFFfffFFFffFFfffFFFffFFfffFFFffFFfffFFFffFFfffF
 )2:BJRZ
 )2:BJRZ
"1DWjy
#5ISj





OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO




q]uay}
  ##&&)),,//225588;;>>AAGGDD
  ##&&)),,//225588;;>>AAGGDD?
    
!!!!
""""
####
$$$$$
%%%%%
&&&&&
'''''
(((((
)))))
*****
+++++
,,,,,
------
......
//////
000000
111111
222222
333333
444444
555555
6666666
6666
7777777
7777
8888888
8888
9999999
9999
:::::::
::::
;;;;;;;
;;;;
<<<<<<<
<<<<
=======
====
>>>>>>>
>>>>
????????
????
?????
????
????
@@@@@@@@
@@@@
@@@@@
@@@@
@@@@
AAAAAAAA
AAAA
AAAAA
AAAA
AAAA
BBBBBBBB
BBBB
BBBBB
BBBB
BBBB
CCCCCCCC
CCCC
CCCCC
CCCC
CCCC
DDDDDDDD
DDDD
DDDDD
DDDD
DDDD
EEEEEEEE
EEEE
EEEEE
EEEE
EEEE
FFFFFFFF
FFFF
FFFFF
FFFF
FFFF
GGGGGGGG
GGGG
GGGGG
GGGG
GGGG
HHHHHHHHH
HHHH
HHHHHH
HHHH
HHHHH
HHHHHH
IIIIIIIII
IIII
IIIIII
IIII
IIIII
IIIIII
JJJJJJJJJ
JJJJ
JJJJJJ
JJJJ
JJJJJ
JJJJJJ
KKKKKKKKK
KKKK
KKKKKK
KKKK
KKKKK
KKKKKK
LLLLLLLLL
LLLL
LLLLLL
LLLL
LLLLL
LLLLLL
MMMMMMMMM
MMMM
MMMMMM
MMMM
MMMMM
MMMMMM
NNNNNNNNN
NNNN
NNNNNN
NNNN
NNNNN
NNNNNN
OOOOOOOOO
OOOO
OOOOOO
OOOO
OOOOO
OOOOOO
PPPPPPPPP
PPPP
PPPPPP
PPPP
PPPPP
PPPPPP
QQQQQQQQQQ
QQQQQ
QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ
RRRRRRRRRR
RRRRR
RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR
SSSSSSSSSS
SSSSS
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
TTTTTTTTTT
TTTTT
TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT
UUUUUUUUUU
UUUUU
UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU
VVVVVVVVVV
VVVVV
VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
WWWWWWWWWW
WWWWW
WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW
XXXXXXXXXX
XXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
YYYYYYYYYY
YYYYY
YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY
ZZZZZZZZZZZ
ZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
[[[[[[[[[[[
[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
\\\\\\\\\\\
\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
]]]]]]]]]]]
]]]]]
]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
^^^^^^^^^^^
^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
___________
_____
_________________________________________________
```````````
`````
`````````````````````````````````````````````````
aaaaaaaaaaa
aaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
bbbbbbbbbbb
bbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
cccccccccccc
cccccc
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
dddddddddddd
dddddd
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd
eeeeeeeeeeee
eeeeee
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
ffffffffffff
ffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
gggggggggggg
gggggg
ggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg
hhhhhhhhhhhh
hhhhhh
hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh
iiiiiiiiiiii
iiiiii
iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
jjjjjjjjjjjj
jjjjjj
jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj
kkkkkkkkkkkk
kkkkkk
kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk
lllllllllllll
llllll
lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
mmmmmmmmmmmmm
mmmmmm
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
nnnnnnnnnnnnn
nnnnnn
nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
ooooooooooooo
oooooo
ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
ppppppppppppp
pppppp
ppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp
qqqqqqqqqqqqq
qqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
rrrrrrrrrrrrr
rrrrrr
rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr
sssssssssssss
ssssss
sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss
ttttttttttttt
tttttt
ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt
uuuuuuuuuuuuuu
uuuuuuu
uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
vvvvvvvvvvvvvv
vvvvvvv
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
wwwwwwwwwwwwww
wwwwwww
wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
xxxxxxxxxxxxxx
xxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
yyyyyyyyyyyyyy
yyyyyyy
yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
zzzzzzzzzzzzzz
zzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
{{{{{{{{{{{{{{
{{{{{{{
{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{
||||||||||||||
|||||||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
}}}}}}}}}}}}}}
}}}}}}}
}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
~~~~~~~~~~~~~~~
~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<DMY
8:888<
J`JJJb
VhVVVj*
bpbbbr6
nxnnnzB
*8DHR[g
$*oo
PVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPV-
PVPVPV1
PVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPV\
PVPV
PVPVPV
PVPVPVPVPVPVPVPVPV
PVPVPV
PVPVPV
PVPVPVPV+
PVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPV
?KDOO
iiiiii
6'+/t
 $$)-$$ 15
<<<#!!AU
UU59UEUUUUUUUUU++UUUUUU1UUUMUUU
..$3$3))
IMRV
''1Z
5dAEh#
SSSSSSSSS48+SSSSSS<%@D
kkkkkkkkkkkkkkkkk
kkkkkkkkkkkkkkkkkk3k
7;kkk?Cgkk
GKOSkkkk
[kkk
kc 4$4444
4444
(444,6

y
s=i)iiAEiIiiiiiiiiiiiiiiiiii)))iiiiMiQiiii)))
Uii)YEIMQQQQQQQ
,xx0
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;x?xx[OxSxCG(
 $xxxx
Wxxx
xcxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgxK
++++
$6666
6666
qqqq***``qqq`qqqqqdddqqqqqhhhqqqqqqqqqqqqqqqqlllqqq
~///~~~~33~~~3~~~+++~~~~~
~~~~
'+(
'+/37;?
$6[[
INTnn
"4KK
EEEEEEEEEEEEE
____________________"________
3<<:
yy/EH
?7;0F&
yfqjh(({~
JQV\bh
#)7=C
INSX]
)8D:
"%(+.147
$GG$$GGGGGGGGGGGGGGu
GGGGGG$$$$$$$$$$GGGG$$
LLVM0700
!%)/
8?FM
@@@[
 -MM
INTII
ttttttttt
ttt+t
tttttttt
",mm
"bb<bAINbbbbbbbS
'+[~~~~~~~n(
HdHHH
YbYYYs
wtyttt{
%6ALRX^s
,,,,,
99999#2
!,YY
ERKII
!$'*-037:&
Machine Optimization Remark Emitter
0<5OO
eeeee
regalloc
Register Allocation
#Fi{
@MFII
#(-27
--------
66666666
$$$$$$$$
$$$$$$$$jMs
ssYsss^sssssssss`sssMK
=AeeeeC"~
]Y22LLJLL
($^^
agx.stack_oob
ccc<cO
agx.dylib_bindings
agc.dylib_base
MMM<
AMFss
%;[[
agx.ss_bind
#)7u
1=6agc.main
LEF^WXZ\
orHJ
!=Y}
VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100
SR100
R85_R86_R87_R88_R89_R90_R91_R92_R93_R94_R95_R96_R97_R98_R99_R100
VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200
SR200
R185_R186_R187_R188_R189_R190_R191_R192_R193_R194_R195_R196_R197_R198_R199_R200
SR300
SR400
SR500
VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110
SR110
R95_R96_R97_R98_R99_R100_R101_R102_R103_R104_R105_R106_R107_R108_R109_R110
VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210
SR210
R195_R196_R197_R198_R199_R200_R201_R202_R203_R204_R205_R206_R207_R208_R209_R210
SR310
SR410
SR510
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10
SR10
R0_R1_R2_R3_R4_R5_R6_R7_R8_R9_R10
VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120
SR120
R105_R106_R107_R108_R109_R110_R111_R112_R113_R114_R115_R116_R117_R118_R119_R120
VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220
SR220
R205_R206_R207_R208_R209_R210_R211_R212_R213_R214_R215_R216_R217_R218_R219_R220
SR320
SR420
VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20
SR20
R5_R6_R7_R8_R9_R10_R11_R12_R13_R14_R15_R16_R17_R18_R19_R20
VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130
SR130
R115_R116_R117_R118_R119_R120_R121_R122_R123_R124_R125_R126_R127_R128_R129_R130
VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230
SR230
R215_R216_R217_R218_R219_R220_R221_R222_R223_R224_R225_R226_R227_R228_R229_R230
SR330
SR430
VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30
SR30
R15_R16_R17_R18_R19_R20_R21_R22_R23_R24_R25_R26_R27_R28_R29_R30
VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140
SR140
R125_R126_R127_R128_R129_R130_R131_R132_R133_R134_R135_R136_R137_R138_R139_R140
VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240
SR240
R225_R226_R227_R228_R229_R230_R231_R232_R233_R234_R235_R236_R237_R238_R239_R240
SR340
SR440
VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40
SR40
R25_R26_R27_R28_R29_R30_R31_R32_R33_R34_R35_R36_R37_R38_R39_R40
VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150
SR150
R135_R136_R137_R138_R139_R140_R141_R142_R143_R144_R145_R146_R147_R148_R149_R150
VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247_VI248_VI249_VI250
SR250
R235_R236_R237_R238_R239_R240_R241_R242_R243_R244_R245_R246_R247_R248_R249_R250
SR350
SR450
VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50
SR50
R35_R36_R37_R38_R39_R40_R41_R42_R43_R44_R45_R46_R47_R48_R49_R50
VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160
SR160
R145_R146_R147_R148_R149_R150_R151_R152_R153_R154_R155_R156_R157_R158_R159_R160
SR260
SR360
SR460
VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60
SR60
R45_R46_R47_R48_R49_R50_R51_R52_R53_R54_R55_R56_R57_R58_R59_R60
VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170
SR170
R155_R156_R157_R158_R159_R160_R161_R162_R163_R164_R165_R166_R167_R168_R169_R170
SR270
SR370
SR470
VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70
SR70
R55_R56_R57_R58_R59_R60_R61_R62_R63_R64_R65_R66_R67_R68_R69_R70
VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180
SR180
R165_R166_R167_R168_R169_R170_R171_R172_R173_R174_R175_R176_R177_R178_R179_R180
SR280
SR380
SR480
VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80
SR80
R65_R66_R67_R68_R69_R70_R71_R72_R73_R74_R75_R76_R77_R78_R79_R80
VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190
SR190
R175_R176_R177_R178_R179_R180_R181_R182_R183_R184_R185_R186_R187_R188_R189_R190
SR290
SR390
SR490
VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90
SR90
R75_R76_R77_R78_R79_R80_R81_R82_R83_R84_R85_R86_R87_R88_R89_R90
VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101
SR101
R86_R87_R88_R89_R90_R91_R92_R93_R94_R95_R96_R97_R98_R99_R100_R101
VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201
SR201
R186_R187_R188_R189_R190_R191_R192_R193_R194_R195_R196_R197_R198_R199_R200_R201
SR301
SR401
SR501
VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111
SR111
R96_R97_R98_R99_R100_R101_R102_R103_R104_R105_R106_R107_R108_R109_R110_R111
VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211
SR211
R196_R197_R198_R199_R200_R201_R202_R203_R204_R205_R206_R207_R208_R209_R210_R211
SR311
SR411
SR511
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11
SR11
R0_R1_R2_R3_R4_R5_R6_R7_R8_R9_R10_R11
VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121
SR121
R106_R107_R108_R109_R110_R111_R112_R113_R114_R115_R116_R117_R118_R119_R120_R121
VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221
SR221
R206_R207_R208_R209_R210_R211_R212_R213_R214_R215_R216_R217_R218_R219_R220_R221
SR321
SR421
VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21
SR21
R6_R7_R8_R9_R10_R11_R12_R13_R14_R15_R16_R17_R18_R19_R20_R21
VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131
SR131
R116_R117_R118_R119_R120_R121_R122_R123_R124_R125_R126_R127_R128_R129_R130_R131
VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231
SR231
R216_R217_R218_R219_R220_R221_R222_R223_R224_R225_R226_R227_R228_R229_R230_R231
SR331
SR431
VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31
SR31
R16_R17_R18_R19_R20_R21_R22_R23_R24_R25_R26_R27_R28_R29_R30_R31
VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141
SR141
R126_R127_R128_R129_R130_R131_R132_R133_R134_R135_R136_R137_R138_R139_R140_R141
VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241
SR241
R226_R227_R228_R229_R230_R231_R232_R233_R234_R235_R236_R237_R238_R239_R240_R241
SR341
SR441
VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41
SR41
R26_R27_R28_R29_R30_R31_R32_R33_R34_R35_R36_R37_R38_R39_R40_R41
VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151
SR151
R136_R137_R138_R139_R140_R141_R142_R143_R144_R145_R146_R147_R148_R149_R150_R151
VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247_VI248_VI249_VI250_VI251
SR251
R236_R237_R238_R239_R240_R241_R242_R243_R244_R245_R246_R247_R248_R249_R250_R251
SR351
SR451
VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51
SR51
R36_R37_R38_R39_R40_R41_R42_R43_R44_R45_R46_R47_R48_R49_R50_R51
VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161
SR161
R146_R147_R148_R149_R150_R151_R152_R153_R154_R155_R156_R157_R158_R159_R160_R161
SR261
SR361
SR461
VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61
SR61
R46_R47_R48_R49_R50_R51_R52_R53_R54_R55_R56_R57_R58_R59_R60_R61
VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171
SR171
R156_R157_R158_R159_R160_R161_R162_R163_R164_R165_R166_R167_R168_R169_R170_R171
SR271
SR371
SR471
VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71
SR71
R56_R57_R58_R59_R60_R61_R62_R63_R64_R65_R66_R67_R68_R69_R70_R71
VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181
SR181
R166_R167_R168_R169_R170_R171_R172_R173_R174_R175_R176_R177_R178_R179_R180_R181
SR281
SR381
SR481
VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81
SR81
R66_R67_R68_R69_R70_R71_R72_R73_R74_R75_R76_R77_R78_R79_R80_R81
VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191
SR191
R176_R177_R178_R179_R180_R181_R182_R183_R184_R185_R186_R187_R188_R189_R190_R191
SR291
SR391
SR491
VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91
SR91
R76_R77_R78_R79_R80_R81_R82_R83_R84_R85_R86_R87_R88_R89_R90_R91
VI0_VI1
R0_R1
VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102
SR102
R87_R88_R89_R90_R91_R92_R93_R94_R95_R96_R97_R98_R99_R100_R101_R102
VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202
SR202
R187_R188_R189_R190_R191_R192_R193_R194_R195_R196_R197_R198_R199_R200_R201_R202
SR302
SR402
SR502
VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112
SR112
R97_R98_R99_R100_R101_R102_R103_R104_R105_R106_R107_R108_R109_R110_R111_R112
VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212
SR212
R197_R198_R199_R200_R201_R202_R203_R204_R205_R206_R207_R208_R209_R210_R211_R212
SR312
SR412
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12
SR12
R0_R1_R2_R3_R4_R5_R6_R7_R8_R9_R10_R11_R12
VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122
SR122
R107_R108_R109_R110_R111_R112_R113_R114_R115_R116_R117_R118_R119_R120_R121_R122
VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222
SR222
R207_R208_R209_R210_R211_R212_R213_R214_R215_R216_R217_R218_R219_R220_R221_R222
SR322
SR422
VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22
SR22
R7_R8_R9_R10_R11_R12_R13_R14_R15_R16_R17_R18_R19_R20_R21_R22
VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132
SR132
R117_R118_R119_R120_R121_R122_R123_R124_R125_R126_R127_R128_R129_R130_R131_R132
VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232
SR232
R217_R218_R219_R220_R221_R222_R223_R224_R225_R226_R227_R228_R229_R230_R231_R232
SR332
SR432
VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32
SR32
R17_R18_R19_R20_R21_R22_R23_R24_R25_R26_R27_R28_R29_R30_R31_R32
VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142
SR142
R127_R128_R129_R130_R131_R132_R133_R134_R135_R136_R137_R138_R139_R140_R141_R142
VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242
SR242
R227_R228_R229_R230_R231_R232_R233_R234_R235_R236_R237_R238_R239_R240_R241_R242
SR342
SR442
VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42
SR42
R27_R28_R29_R30_R31_R32_R33_R34_R35_R36_R37_R38_R39_R40_R41_R42
VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152
SR152
R137_R138_R139_R140_R141_R142_R143_R144_R145_R146_R147_R148_R149_R150_R151_R152
VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247_VI248_VI249_VI250_VI251_VI252
SR252
R237_R238_R239_R240_R241_R242_R243_R244_R245_R246_R247_R248_R249_R250_R251_R252
SR352
SR452
VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52
SR52
R37_R38_R39_R40_R41_R42_R43_R44_R45_R46_R47_R48_R49_R50_R51_R52
VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162
SR162
R147_R148_R149_R150_R151_R152_R153_R154_R155_R156_R157_R158_R159_R160_R161_R162
SR262
SR362
SR462
VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62
SR62
R47_R48_R49_R50_R51_R52_R53_R54_R55_R56_R57_R58_R59_R60_R61_R62
VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172
SR172
R157_R158_R159_R160_R161_R162_R163_R164_R165_R166_R167_R168_R169_R170_R171_R172
SR272
SR372
SR472
VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72
SR72
R57_R58_R59_R60_R61_R62_R63_R64_R65_R66_R67_R68_R69_R70_R71_R72
VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182
SR182
R167_R168_R169_R170_R171_R172_R173_R174_R175_R176_R177_R178_R179_R180_R181_R182
SR282
SR382
SR482
VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82
SR82
R67_R68_R69_R70_R71_R72_R73_R74_R75_R76_R77_R78_R79_R80_R81_R82
VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192
SR192
R177_R178_R179_R180_R181_R182_R183_R184_R185_R186_R187_R188_R189_R190_R191_R192
SR292
SR392
SR492
VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92
SR92
R77_R78_R79_R80_R81_R82_R83_R84_R85_R86_R87_R88_R89_R90_R91_R92
VI0_VI1_VI2
R0_R1_R2
VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103
SR103
R88_R89_R90_R91_R92_R93_R94_R95_R96_R97_R98_R99_R100_R101_R102_R103
VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203
SR203
R188_R189_R190_R191_R192_R193_R194_R195_R196_R197_R198_R199_R200_R201_R202_R203
SR303
SR403
SR503
VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113
SR113
R98_R99_R100_R101_R102_R103_R104_R105_R106_R107_R108_R109_R110_R111_R112_R113
VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213
SR213
R198_R199_R200_R201_R202_R203_R204_R205_R206_R207_R208_R209_R210_R211_R212_R213
SR313
SR413
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13
SR13
R0_R1_R2_R3_R4_R5_R6_R7_R8_R9_R10_R11_R12_R13
VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123
SR123
R108_R109_R110_R111_R112_R113_R114_R115_R116_R117_R118_R119_R120_R121_R122_R123
VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223
SR223
R208_R209_R210_R211_R212_R213_R214_R215_R216_R217_R218_R219_R220_R221_R222_R223
SR323
SR423
VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23
SR23
R8_R9_R10_R11_R12_R13_R14_R15_R16_R17_R18_R19_R20_R21_R22_R23
VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133
SR133
R118_R119_R120_R121_R122_R123_R124_R125_R126_R127_R128_R129_R130_R131_R132_R133
VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233
SR233
R218_R219_R220_R221_R222_R223_R224_R225_R226_R227_R228_R229_R230_R231_R232_R233
SR333
SR433
VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33
SR33
R18_R19_R20_R21_R22_R23_R24_R25_R26_R27_R28_R29_R30_R31_R32_R33
VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143
SR143
R128_R129_R130_R131_R132_R133_R134_R135_R136_R137_R138_R139_R140_R141_R142_R143
VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243
SR243
R228_R229_R230_R231_R232_R233_R234_R235_R236_R237_R238_R239_R240_R241_R242_R243
SR343
SR443
VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43
SR43
R28_R29_R30_R31_R32_R33_R34_R35_R36_R37_R38_R39_R40_R41_R42_R43
VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153
SR153
R138_R139_R140_R141_R142_R143_R144_R145_R146_R147_R148_R149_R150_R151_R152_R153
VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247_VI248_VI249_VI250_VI251_VI252_VI253
SR253
R238_R239_R240_R241_R242_R243_R244_R245_R246_R247_R248_R249_R250_R251_R252_R253
SR353
SR453
VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53
SR53
R38_R39_R40_R41_R42_R43_R44_R45_R46_R47_R48_R49_R50_R51_R52_R53
VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163
SR163
R148_R149_R150_R151_R152_R153_R154_R155_R156_R157_R158_R159_R160_R161_R162_R163
SR263
SR363
SR463
VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63
SR63
R48_R49_R50_R51_R52_R53_R54_R55_R56_R57_R58_R59_R60_R61_R62_R63
VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173
SR173
R158_R159_R160_R161_R162_R163_R164_R165_R166_R167_R168_R169_R170_R171_R172_R173
SR273
SR373
SR473
VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73
SR73
R58_R59_R60_R61_R62_R63_R64_R65_R66_R67_R68_R69_R70_R71_R72_R73
VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183
SR183
R168_R169_R170_R171_R172_R173_R174_R175_R176_R177_R178_R179_R180_R181_R182_R183
SR283
SR383
SR483
VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83
SR83
R68_R69_R70_R71_R72_R73_R74_R75_R76_R77_R78_R79_R80_R81_R82_R83
VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193
SR193
R178_R179_R180_R181_R182_R183_R184_R185_R186_R187_R188_R189_R190_R191_R192_R193
SR293
SR393
SR493
VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93
SR93
R78_R79_R80_R81_R82_R83_R84_R85_R86_R87_R88_R89_R90_R91_R92_R93
VI0_VI1_VI2_VI3
R0_R1_R2_R3
VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104
SR104
R89_R90_R91_R92_R93_R94_R95_R96_R97_R98_R99_R100_R101_R102_R103_R104
VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204
SR204
R189_R190_R191_R192_R193_R194_R195_R196_R197_R198_R199_R200_R201_R202_R203_R204
SR304
SR404
SR504
VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114
SR114
R99_R100_R101_R102_R103_R104_R105_R106_R107_R108_R109_R110_R111_R112_R113_R114
VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214
SR214
R199_R200_R201_R202_R203_R204_R205_R206_R207_R208_R209_R210_R211_R212_R213_R214
SR314
SR414
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14
SR14
R0_R1_R2_R3_R4_R5_R6_R7_R8_R9_R10_R11_R12_R13_R14
VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124
SR124
R109_R110_R111_R112_R113_R114_R115_R116_R117_R118_R119_R120_R121_R122_R123_R124
VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224
SR224
R209_R210_R211_R212_R213_R214_R215_R216_R217_R218_R219_R220_R221_R222_R223_R224
SR324
SR424
VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24
SR24
R9_R10_R11_R12_R13_R14_R15_R16_R17_R18_R19_R20_R21_R22_R23_R24
VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134
SR134
R119_R120_R121_R122_R123_R124_R125_R126_R127_R128_R129_R130_R131_R132_R133_R134
VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234
SR234
R219_R220_R221_R222_R223_R224_R225_R226_R227_R228_R229_R230_R231_R232_R233_R234
SR334
SR434
VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34
SR34
R19_R20_R21_R22_R23_R24_R25_R26_R27_R28_R29_R30_R31_R32_R33_R34
VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144
SR144
R129_R130_R131_R132_R133_R134_R135_R136_R137_R138_R139_R140_R141_R142_R143_R144
VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244
SR244
R229_R230_R231_R232_R233_R234_R235_R236_R237_R238_R239_R240_R241_R242_R243_R244
SR344
SR444
VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44
SR44
R29_R30_R31_R32_R33_R34_R35_R36_R37_R38_R39_R40_R41_R42_R43_R44
VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154
SR154
R139_R140_R141_R142_R143_R144_R145_R146_R147_R148_R149_R150_R151_R152_R153_R154
VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247_VI248_VI249_VI250_VI251_VI252_VI253_VI254
SR254
R239_R240_R241_R242_R243_R244_R245_R246_R247_R248_R249_R250_R251_R252_R253_R254
SR354
SR454
VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54
SR54
R39_R40_R41_R42_R43_R44_R45_R46_R47_R48_R49_R50_R51_R52_R53_R54
VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164
SR164
R149_R150_R151_R152_R153_R154_R155_R156_R157_R158_R159_R160_R161_R162_R163_R164
SR264
SR364
SR464
VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64
SR64
R49_R50_R51_R52_R53_R54_R55_R56_R57_R58_R59_R60_R61_R62_R63_R64
VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174
SR174
R159_R160_R161_R162_R163_R164_R165_R166_R167_R168_R169_R170_R171_R172_R173_R174
SR274
SR374
SR474
VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74
SR74
R59_R60_R61_R62_R63_R64_R65_R66_R67_R68_R69_R70_R71_R72_R73_R74
VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184
SR184
R169_R170_R171_R172_R173_R174_R175_R176_R177_R178_R179_R180_R181_R182_R183_R184
SR284
SR384
SR484
VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84
SR84
R69_R70_R71_R72_R73_R74_R75_R76_R77_R78_R79_R80_R81_R82_R83_R84
VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194
SR194
R179_R180_R181_R182_R183_R184_R185_R186_R187_R188_R189_R190_R191_R192_R193_R194
SR294
SR394
SR494
VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94
SR94
R79_R80_R81_R82_R83_R84_R85_R86_R87_R88_R89_R90_R91_R92_R93_R94
VI0_VI1_VI2_VI3_VI4
R0_R1_R2_R3_R4
VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105
SR105
R90_R91_R92_R93_R94_R95_R96_R97_R98_R99_R100_R101_R102_R103_R104_R105
VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205
SR205
R190_R191_R192_R193_R194_R195_R196_R197_R198_R199_R200_R201_R202_R203_R204_R205
SR305
SR405
SR505
VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115
SR115
R100_R101_R102_R103_R104_R105_R106_R107_R108_R109_R110_R111_R112_R113_R114_R115
VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215
SR215
R200_R201_R202_R203_R204_R205_R206_R207_R208_R209_R210_R211_R212_R213_R214_R215
SR315
SR415
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15
SR15
R0_R1_R2_R3_R4_R5_R6_R7_R8_R9_R10_R11_R12_R13_R14_R15
VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125
SR125
R110_R111_R112_R113_R114_R115_R116_R117_R118_R119_R120_R121_R122_R123_R124_R125
VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225
SR225
R210_R211_R212_R213_R214_R215_R216_R217_R218_R219_R220_R221_R222_R223_R224_R225
SR325
SR425
VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25
SR25
R10_R11_R12_R13_R14_R15_R16_R17_R18_R19_R20_R21_R22_R23_R24_R25
VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135
SR135
R120_R121_R122_R123_R124_R125_R126_R127_R128_R129_R130_R131_R132_R133_R134_R135
VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235
SR235
R220_R221_R222_R223_R224_R225_R226_R227_R228_R229_R230_R231_R232_R233_R234_R235
SR335
SR435
VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35
SR35
R20_R21_R22_R23_R24_R25_R26_R27_R28_R29_R30_R31_R32_R33_R34_R35
VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145
SR145
R130_R131_R132_R133_R134_R135_R136_R137_R138_R139_R140_R141_R142_R143_R144_R145
VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245
SR245
R230_R231_R232_R233_R234_R235_R236_R237_R238_R239_R240_R241_R242_R243_R244_R245
SR345
SR445
VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45
SR45
R30_R31_R32_R33_R34_R35_R36_R37_R38_R39_R40_R41_R42_R43_R44_R45
VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155
SR155
R140_R141_R142_R143_R144_R145_R146_R147_R148_R149_R150_R151_R152_R153_R154_R155
VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247_VI248_VI249_VI250_VI251_VI252_VI253_VI254_VI255
SR255
R240_R241_R242_R243_R244_R245_R246_R247_R248_R249_R250_R251_R252_R253_R254_R255
SR355
SR455
VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55
SR55
R40_R41_R42_R43_R44_R45_R46_R47_R48_R49_R50_R51_R52_R53_R54_R55
VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165
SR165
R150_R151_R152_R153_R154_R155_R156_R157_R158_R159_R160_R161_R162_R163_R164_R165
SR265
SR365
SR465
VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65
SR65
R50_R51_R52_R53_R54_R55_R56_R57_R58_R59_R60_R61_R62_R63_R64_R65
VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175
SR175
R160_R161_R162_R163_R164_R165_R166_R167_R168_R169_R170_R171_R172_R173_R174_R175
SR275
SR375
SR475
VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75
SR75
R60_R61_R62_R63_R64_R65_R66_R67_R68_R69_R70_R71_R72_R73_R74_R75
VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185
SR185
R170_R171_R172_R173_R174_R175_R176_R177_R178_R179_R180_R181_R182_R183_R184_R185
SR285
SR385
SR485
VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85
SR85
R70_R71_R72_R73_R74_R75_R76_R77_R78_R79_R80_R81_R82_R83_R84_R85
VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195
SR195
R180_R181_R182_R183_R184_R185_R186_R187_R188_R189_R190_R191_R192_R193_R194_R195
SR295
SR395
SR495
VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95
SR95
R80_R81_R82_R83_R84_R85_R86_R87_R88_R89_R90_R91_R92_R93_R94_R95
VI0_VI1_VI2_VI3_VI4_VI5
R0_R1_R2_R3_R4_R5
VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106
SR106
R91_R92_R93_R94_R95_R96_R97_R98_R99_R100_R101_R102_R103_R104_R105_R106
VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206
SR206
R191_R192_R193_R194_R195_R196_R197_R198_R199_R200_R201_R202_R203_R204_R205_R206
SR306
SR406
SR506
VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116
SR116
R101_R102_R103_R104_R105_R106_R107_R108_R109_R110_R111_R112_R113_R114_R115_R116
VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216
SR216
R201_R202_R203_R204_R205_R206_R207_R208_R209_R210_R211_R212_R213_R214_R215_R216
SR316
SR416
VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16
SR16
R1_R2_R3_R4_R5_R6_R7_R8_R9_R10_R11_R12_R13_R14_R15_R16
VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126
SR126
R111_R112_R113_R114_R115_R116_R117_R118_R119_R120_R121_R122_R123_R124_R125_R126
VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226
SR226
R211_R212_R213_R214_R215_R216_R217_R218_R219_R220_R221_R222_R223_R224_R225_R226
SR326
SR426
VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26
SR26
R11_R12_R13_R14_R15_R16_R17_R18_R19_R20_R21_R22_R23_R24_R25_R26
VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136
SR136
R121_R122_R123_R124_R125_R126_R127_R128_R129_R130_R131_R132_R133_R134_R135_R136
VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236
SR236
R221_R222_R223_R224_R225_R226_R227_R228_R229_R230_R231_R232_R233_R234_R235_R236
SR336
SR436
VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36
SR36
R21_R22_R23_R24_R25_R26_R27_R28_R29_R30_R31_R32_R33_R34_R35_R36
VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146
SR146
R131_R132_R133_R134_R135_R136_R137_R138_R139_R140_R141_R142_R143_R144_R145_R146
VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246
SR246
R231_R232_R233_R234_R235_R236_R237_R238_R239_R240_R241_R242_R243_R244_R245_R246
SR346
SR446
VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46
SR46
R31_R32_R33_R34_R35_R36_R37_R38_R39_R40_R41_R42_R43_R44_R45_R46
VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156
SR156
R141_R142_R143_R144_R145_R146_R147_R148_R149_R150_R151_R152_R153_R154_R155_R156
SR256
SR356
SR456
VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56
SR56
R41_R42_R43_R44_R45_R46_R47_R48_R49_R50_R51_R52_R53_R54_R55_R56
VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166
SR166
R151_R152_R153_R154_R155_R156_R157_R158_R159_R160_R161_R162_R163_R164_R165_R166
SR266
SR366
SR466
VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66
SR66
R51_R52_R53_R54_R55_R56_R57_R58_R59_R60_R61_R62_R63_R64_R65_R66
VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176
SR176
R161_R162_R163_R164_R165_R166_R167_R168_R169_R170_R171_R172_R173_R174_R175_R176
SR276
SR376
SR476
VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76
SR76
R61_R62_R63_R64_R65_R66_R67_R68_R69_R70_R71_R72_R73_R74_R75_R76
VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186
SR186
R171_R172_R173_R174_R175_R176_R177_R178_R179_R180_R181_R182_R183_R184_R185_R186
SR286
SR386
SR486
VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86
SR86
R71_R72_R73_R74_R75_R76_R77_R78_R79_R80_R81_R82_R83_R84_R85_R86
VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196
SR196
R181_R182_R183_R184_R185_R186_R187_R188_R189_R190_R191_R192_R193_R194_R195_R196
SR296
SR396
SR496
VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96
SR96
R81_R82_R83_R84_R85_R86_R87_R88_R89_R90_R91_R92_R93_R94_R95_R96
VI0_VI1_VI2_VI3_VI4_VI5_VI6
R0_R1_R2_R3_R4_R5_R6
VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107
SR107
R92_R93_R94_R95_R96_R97_R98_R99_R100_R101_R102_R103_R104_R105_R106_R107
VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207
SR207
R192_R193_R194_R195_R196_R197_R198_R199_R200_R201_R202_R203_R204_R205_R206_R207
SR307
SR407
SR507
VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117
SR117
R102_R103_R104_R105_R106_R107_R108_R109_R110_R111_R112_R113_R114_R115_R116_R117
VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217
SR217
R202_R203_R204_R205_R206_R207_R208_R209_R210_R211_R212_R213_R214_R215_R216_R217
SR317
SR417
VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17
SR17
R2_R3_R4_R5_R6_R7_R8_R9_R10_R11_R12_R13_R14_R15_R16_R17
VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127
SR127
R112_R113_R114_R115_R116_R117_R118_R119_R120_R121_R122_R123_R124_R125_R126_R127
VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227
SR227
R212_R213_R214_R215_R216_R217_R218_R219_R220_R221_R222_R223_R224_R225_R226_R227
SR327
SR427
VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27
SR27
R12_R13_R14_R15_R16_R17_R18_R19_R20_R21_R22_R23_R24_R25_R26_R27
VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137
SR137
R122_R123_R124_R125_R126_R127_R128_R129_R130_R131_R132_R133_R134_R135_R136_R137
VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237
SR237
R222_R223_R224_R225_R226_R227_R228_R229_R230_R231_R232_R233_R234_R235_R236_R237
SR337
SR437
VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37
SR37
R22_R23_R24_R25_R26_R27_R28_R29_R30_R31_R32_R33_R34_R35_R36_R37
VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147
SR147
R132_R133_R134_R135_R136_R137_R138_R139_R140_R141_R142_R143_R144_R145_R146_R147
VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247
SR247
R232_R233_R234_R235_R236_R237_R238_R239_R240_R241_R242_R243_R244_R245_R246_R247
SR347
SR447
VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47
SR47
R32_R33_R34_R35_R36_R37_R38_R39_R40_R41_R42_R43_R44_R45_R46_R47
VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157
SR157
R142_R143_R144_R145_R146_R147_R148_R149_R150_R151_R152_R153_R154_R155_R156_R157
SR257
SR357
SR457
VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57
SR57
R42_R43_R44_R45_R46_R47_R48_R49_R50_R51_R52_R53_R54_R55_R56_R57
VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167
SR167
R152_R153_R154_R155_R156_R157_R158_R159_R160_R161_R162_R163_R164_R165_R166_R167
SR267
SR367
SR467
VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67
SR67
R52_R53_R54_R55_R56_R57_R58_R59_R60_R61_R62_R63_R64_R65_R66_R67
VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177
SR177
R162_R163_R164_R165_R166_R167_R168_R169_R170_R171_R172_R173_R174_R175_R176_R177
SR277
SR377
SR477
VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77
SR77
R62_R63_R64_R65_R66_R67_R68_R69_R70_R71_R72_R73_R74_R75_R76_R77
VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187
SR187
R172_R173_R174_R175_R176_R177_R178_R179_R180_R181_R182_R183_R184_R185_R186_R187
SR287
SR387
SR487
VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87
SR87
R72_R73_R74_R75_R76_R77_R78_R79_R80_R81_R82_R83_R84_R85_R86_R87
VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197
SR197
R182_R183_R184_R185_R186_R187_R188_R189_R190_R191_R192_R193_R194_R195_R196_R197
SR297
SR397
SR497
VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97
SR97
R82_R83_R84_R85_R86_R87_R88_R89_R90_R91_R92_R93_R94_R95_R96_R97
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7
R0_R1_R2_R3_R4_R5_R6_R7
VI93_VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108
SR108
R93_R94_R95_R96_R97_R98_R99_R100_R101_R102_R103_R104_R105_R106_R107_R108
VI193_VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208
SR208
R193_R194_R195_R196_R197_R198_R199_R200_R201_R202_R203_R204_R205_R206_R207_R208
SR308
SR408
SR508
VI103_VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118
SR118
R103_R104_R105_R106_R107_R108_R109_R110_R111_R112_R113_R114_R115_R116_R117_R118
VI203_VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218
SR218
R203_R204_R205_R206_R207_R208_R209_R210_R211_R212_R213_R214_R215_R216_R217_R218
SR318
SR418
VI3_VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18
SR18
R3_R4_R5_R6_R7_R8_R9_R10_R11_R12_R13_R14_R15_R16_R17_R18
VI113_VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128
SR128
R113_R114_R115_R116_R117_R118_R119_R120_R121_R122_R123_R124_R125_R126_R127_R128
VI213_VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228
SR228
R213_R214_R215_R216_R217_R218_R219_R220_R221_R222_R223_R224_R225_R226_R227_R228
SR328
SR428
VI13_VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28
SR28
R13_R14_R15_R16_R17_R18_R19_R20_R21_R22_R23_R24_R25_R26_R27_R28
VI123_VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138
SR138
R123_R124_R125_R126_R127_R128_R129_R130_R131_R132_R133_R134_R135_R136_R137_R138
VI223_VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238
SR238
R223_R224_R225_R226_R227_R228_R229_R230_R231_R232_R233_R234_R235_R236_R237_R238
SR338
SR438
VI23_VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38
SR38
R23_R24_R25_R26_R27_R28_R29_R30_R31_R32_R33_R34_R35_R36_R37_R38
VI133_VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148
SR148
R133_R134_R135_R136_R137_R138_R139_R140_R141_R142_R143_R144_R145_R146_R147_R148
VI233_VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247_VI248
SR248
R233_R234_R235_R236_R237_R238_R239_R240_R241_R242_R243_R244_R245_R246_R247_R248
SR348
SR448
VI33_VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48
SR48
R33_R34_R35_R36_R37_R38_R39_R40_R41_R42_R43_R44_R45_R46_R47_R48
VI143_VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158
SR158
R143_R144_R145_R146_R147_R148_R149_R150_R151_R152_R153_R154_R155_R156_R157_R158
SR258
SR358
SR458
VI43_VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58
SR58
R43_R44_R45_R46_R47_R48_R49_R50_R51_R52_R53_R54_R55_R56_R57_R58
VI153_VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168
SR168
R153_R154_R155_R156_R157_R158_R159_R160_R161_R162_R163_R164_R165_R166_R167_R168
SR268
SR368
SR468
VI53_VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68
SR68
R53_R54_R55_R56_R57_R58_R59_R60_R61_R62_R63_R64_R65_R66_R67_R68
VI163_VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178
SR178
R163_R164_R165_R166_R167_R168_R169_R170_R171_R172_R173_R174_R175_R176_R177_R178
SR278
SR378
SR478
VI63_VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78
SR78
R63_R64_R65_R66_R67_R68_R69_R70_R71_R72_R73_R74_R75_R76_R77_R78
VI173_VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188
SR188
R173_R174_R175_R176_R177_R178_R179_R180_R181_R182_R183_R184_R185_R186_R187_R188
SR288
SR388
SR488
VI73_VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88
SR88
R73_R74_R75_R76_R77_R78_R79_R80_R81_R82_R83_R84_R85_R86_R87_R88
VI183_VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198
SR198
R183_R184_R185_R186_R187_R188_R189_R190_R191_R192_R193_R194_R195_R196_R197_R198
SR298
SR398
SR498
VI83_VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98
SR98
R83_R84_R85_R86_R87_R88_R89_R90_R91_R92_R93_R94_R95_R96_R97_R98
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8
R0_R1_R2_R3_R4_R5_R6_R7_R8
VI94_VI95_VI96_VI97_VI98_VI99_VI100_VI101_VI102_VI103_VI104_VI105_VI106_VI107_VI108_VI109
SR109
R94_R95_R96_R97_R98_R99_R100_R101_R102_R103_R104_R105_R106_R107_R108_R109
VI194_VI195_VI196_VI197_VI198_VI199_VI200_VI201_VI202_VI203_VI204_VI205_VI206_VI207_VI208_VI209
SR209
R194_R195_R196_R197_R198_R199_R200_R201_R202_R203_R204_R205_R206_R207_R208_R209
SR309
SR409
SR509
VI104_VI105_VI106_VI107_VI108_VI109_VI110_VI111_VI112_VI113_VI114_VI115_VI116_VI117_VI118_VI119
SR119
R104_R105_R106_R107_R108_R109_R110_R111_R112_R113_R114_R115_R116_R117_R118_R119
VI204_VI205_VI206_VI207_VI208_VI209_VI210_VI211_VI212_VI213_VI214_VI215_VI216_VI217_VI218_VI219
SR219
R204_R205_R206_R207_R208_R209_R210_R211_R212_R213_R214_R215_R216_R217_R218_R219
SR319
SR419
VI4_VI5_VI6_VI7_VI8_VI9_VI10_VI11_VI12_VI13_VI14_VI15_VI16_VI17_VI18_VI19
SR19
R4_R5_R6_R7_R8_R9_R10_R11_R12_R13_R14_R15_R16_R17_R18_R19
VI114_VI115_VI116_VI117_VI118_VI119_VI120_VI121_VI122_VI123_VI124_VI125_VI126_VI127_VI128_VI129
SR129
R114_R115_R116_R117_R118_R119_R120_R121_R122_R123_R124_R125_R126_R127_R128_R129
VI214_VI215_VI216_VI217_VI218_VI219_VI220_VI221_VI222_VI223_VI224_VI225_VI226_VI227_VI228_VI229
SR229
R214_R215_R216_R217_R218_R219_R220_R221_R222_R223_R224_R225_R226_R227_R228_R229
SR329
SR429
VI14_VI15_VI16_VI17_VI18_VI19_VI20_VI21_VI22_VI23_VI24_VI25_VI26_VI27_VI28_VI29
SR29
R14_R15_R16_R17_R18_R19_R20_R21_R22_R23_R24_R25_R26_R27_R28_R29
VI124_VI125_VI126_VI127_VI128_VI129_VI130_VI131_VI132_VI133_VI134_VI135_VI136_VI137_VI138_VI139
SR139
R124_R125_R126_R127_R128_R129_R130_R131_R132_R133_R134_R135_R136_R137_R138_R139
VI224_VI225_VI226_VI227_VI228_VI229_VI230_VI231_VI232_VI233_VI234_VI235_VI236_VI237_VI238_VI239
SR239
R224_R225_R226_R227_R228_R229_R230_R231_R232_R233_R234_R235_R236_R237_R238_R239
SR339
SR439
VI24_VI25_VI26_VI27_VI28_VI29_VI30_VI31_VI32_VI33_VI34_VI35_VI36_VI37_VI38_VI39
SR39
R24_R25_R26_R27_R28_R29_R30_R31_R32_R33_R34_R35_R36_R37_R38_R39
VI134_VI135_VI136_VI137_VI138_VI139_VI140_VI141_VI142_VI143_VI144_VI145_VI146_VI147_VI148_VI149
SR149
R134_R135_R136_R137_R138_R139_R140_R141_R142_R143_R144_R145_R146_R147_R148_R149
VI234_VI235_VI236_VI237_VI238_VI239_VI240_VI241_VI242_VI243_VI244_VI245_VI246_VI247_VI248_VI249
SR249
R234_R235_R236_R237_R238_R239_R240_R241_R242_R243_R244_R245_R246_R247_R248_R249
SR349
SR449
VI34_VI35_VI36_VI37_VI38_VI39_VI40_VI41_VI42_VI43_VI44_VI45_VI46_VI47_VI48_VI49
SR49
R34_R35_R36_R37_R38_R39_R40_R41_R42_R43_R44_R45_R46_R47_R48_R49
VI144_VI145_VI146_VI147_VI148_VI149_VI150_VI151_VI152_VI153_VI154_VI155_VI156_VI157_VI158_VI159
SR159
R144_R145_R146_R147_R148_R149_R150_R151_R152_R153_R154_R155_R156_R157_R158_R159
SR259
SR359
SR459
VI44_VI45_VI46_VI47_VI48_VI49_VI50_VI51_VI52_VI53_VI54_VI55_VI56_VI57_VI58_VI59
SR59
R44_R45_R46_R47_R48_R49_R50_R51_R52_R53_R54_R55_R56_R57_R58_R59
VI154_VI155_VI156_VI157_VI158_VI159_VI160_VI161_VI162_VI163_VI164_VI165_VI166_VI167_VI168_VI169
SR169
R154_R155_R156_R157_R158_R159_R160_R161_R162_R163_R164_R165_R166_R167_R168_R169
SR269
SR369
SR469
VI54_VI55_VI56_VI57_VI58_VI59_VI60_VI61_VI62_VI63_VI64_VI65_VI66_VI67_VI68_VI69
SR69
R54_R55_R56_R57_R58_R59_R60_R61_R62_R63_R64_R65_R66_R67_R68_R69
VI164_VI165_VI166_VI167_VI168_VI169_VI170_VI171_VI172_VI173_VI174_VI175_VI176_VI177_VI178_VI179
SR179
R164_R165_R166_R167_R168_R169_R170_R171_R172_R173_R174_R175_R176_R177_R178_R179
SR279
SR379
SR479
VI64_VI65_VI66_VI67_VI68_VI69_VI70_VI71_VI72_VI73_VI74_VI75_VI76_VI77_VI78_VI79
SR79
R64_R65_R66_R67_R68_R69_R70_R71_R72_R73_R74_R75_R76_R77_R78_R79
VI174_VI175_VI176_VI177_VI178_VI179_VI180_VI181_VI182_VI183_VI184_VI185_VI186_VI187_VI188_VI189
SR189
R174_R175_R176_R177_R178_R179_R180_R181_R182_R183_R184_R185_R186_R187_R188_R189
SR289
SR389
SR489
VI74_VI75_VI76_VI77_VI78_VI79_VI80_VI81_VI82_VI83_VI84_VI85_VI86_VI87_VI88_VI89
SR89
R74_R75_R76_R77_R78_R79_R80_R81_R82_R83_R84_R85_R86_R87_R88_R89
VI184_VI185_VI186_VI187_VI188_VI189_VI190_VI191_VI192_VI193_VI194_VI195_VI196_VI197_VI198_VI199
SR199
R184_R185_R186_R187_R188_R189_R190_R191_R192_R193_R194_R195_R196_R197_R198_R199
SR299
SR399
SR499
VI84_VI85_VI86_VI87_VI88_VI89_VI90_VI91_VI92_VI93_VI94_VI95_VI96_VI97_VI98_VI99
SR99
R84_R85_R86_R87_R88_R89_R90_R91_R92_R93_R94_R95_R96_R97_R98_R99
VI0_VI1_VI2_VI3_VI4_VI5_VI6_VI7_VI8_VI9
R0_R1_R2_R3_R4_R5_R6_R7_R8_R9
VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H
R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L_R100H
VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H
R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L_R200H
VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H
R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L_R110H
VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H
R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L_R210H
VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H
R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L_R10H
VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H
R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L_R120H
VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H
R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L_R220H
VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H
R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L_R20H
VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H
R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L_R130H
VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H
R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L_R230H
VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H
R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L_R30H
VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H
R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L_R140H
VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H
R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L_R240H
VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H
R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L_R40H
VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H
R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L_R150H
VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H
R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L_R250H
VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H
R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L_R50H
VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H
R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L_R160H
VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H
R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L_R60H
VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H
R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L_R170H
VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H
R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L_R70H
VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H
R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L_R180H
VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H
R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L_R80H
VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H
R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L_R190H
VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H
R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L_R90H
VI0H
VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H
R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L_R101H
VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H
R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L_R201H
VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H
R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L_R111H
VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H
R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L_R211H
VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H
R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L_R11H
VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H
R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L_R121H
VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H
R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L_R221H
VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H
R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L_R21H
VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H
R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L_R131H
VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H
R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L_R231H
VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H
R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L_R31H
VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H
R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L_R141H
VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H
R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L_R241H
VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H
R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L_R41H
VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H
R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L_R151H
VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H
R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L_R251H
VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H
R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L_R51H
VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H
R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L_R161H
VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H
R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L_R61H
VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H
R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L_R171H
VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H
R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L_R71H
VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H
R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L_R181H
VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H
R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L_R81H
VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H
R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L_R191H
VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H
R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L_R91H
VI0H_VI1L_VI1H
R0H_R1L_R1H
VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H
R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L_R102H
VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H
R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L_R202H
VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H
R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L_R112H
VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H
R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L_R212H
VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H
R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L_R12H
VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H
R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L_R122H
VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H
R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L_R222H
VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H
R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L_R22H
VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H
R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L_R132H
VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H
R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L_R232H
VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H
R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L_R32H
VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H
R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L_R142H
VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H
R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L_R242H
VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H
R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L_R42H
VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H
R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L_R152H
VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H_VI252L_VI252H
R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L_R251H_R252L_R252H
VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H
R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L_R52H
VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H
R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L_R162H
VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H
R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L_R62H
VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H
R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L_R172H
VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H
R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L_R72H
VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H
R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L_R182H
VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H
R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L_R82H
VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H
R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L_R192H
VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H
R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L_R92H
VI0H_VI1L_VI1H_VI2L_VI2H
R0H_R1L_R1H_R2L_R2H
VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H
R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L_R103H
VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H
R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L_R203H
VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H
R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L_R113H
VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H
R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L_R213H
VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H
R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L_R13H
VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H
R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L_R123H
VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H
R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L_R223H
VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H
R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L_R23H
VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H
R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L_R133H
VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H
R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L_R233H
VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H
R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L_R33H
VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H
R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L_R143H
VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H
R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L_R243H
VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H
R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L_R43H
VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H
R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L_R153H
VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H_VI252L_VI252H_VI253L_VI253H
R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L_R251H_R252L_R252H_R253L_R253H
VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H
R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L_R53H
VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H
R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L_R163H
VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H
R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L_R63H
VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H
R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L_R173H
VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H
R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L_R73H
VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H
R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L_R183H
VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H
R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L_R83H
VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H
R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L_R193H
VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H
R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L_R93H
VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H
R0H_R1L_R1H_R2L_R2H_R3L_R3H
VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H
R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L_R104H
VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H
R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L_R204H
VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H
R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L_R114H
VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H
R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L_R214H
VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H
R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L_R14H
VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H
R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L_R124H
VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H
R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L_R224H
VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H
R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L_R24H
VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H
R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L_R134H
VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H
R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L_R234H
VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H
R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L_R34H
VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H
R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L_R144H
VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H
R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L_R244H
VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H
R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L_R44H
VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H
R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L_R154H
VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H_VI252L_VI252H_VI253L_VI253H_VI254L_VI254H
R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L_R251H_R252L_R252H_R253L_R253H_R254L_R254H
VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H
R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L_R54H
VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H
R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L_R164H
VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H
R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L_R64H
VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H
R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L_R174H
VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H
R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L_R74H
VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H
R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L_R184H
VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H
R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L_R84H
VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H
R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L_R194H
VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H
R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L_R94H
VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H
R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L_R4H
VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H
R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L_R105H
VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H
R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L_R205H
VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H
R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L_R115H
VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H
R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L_R215H
VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H
R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L_R15H
VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H
R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L_R125H
VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H
R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L_R225H
VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H
R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L_R25H
VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H
R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L_R135H
VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H
R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L_R235H
VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H
R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L_R35H
VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H
R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L_R145H
VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H
R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L_R245H
VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H
R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L_R45H
VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H
R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L_R155H
VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H_VI252L_VI252H_VI253L_VI253H_VI254L_VI254H_VI255L_VI255H
R248H_R249L_R249H_R250L_R250H_R251L_R251H_R252L_R252H_R253L_R253H_R254L_R254H_R255L_R255H
VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H
R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L_R55H
VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H
R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L_R165H
VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H
R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L_R65H
VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H
R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L_R175H
VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H
R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L_R75H
VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H
R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L_R185H
VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H
R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L_R85H
VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H
R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L_R195H
VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H
R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L_R95H
VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H
R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L_R5H
VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H
R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L_R106H
VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H
R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L_R206H
VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H
R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L_R116H
VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H
R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L_R216H
VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H
R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L_R16H
VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H
R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L_R126H
VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H
R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L_R226H
VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H
R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L_R26H
VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H
R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L_R136H
VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H
R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L_R236H
VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H
R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L_R36H
VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H
R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L_R146H
VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H
R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L_R246H
VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H
R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L_R46H
VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H
R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L_R156H
VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H
R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L_R56H
VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H
R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L_R166H
VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H
R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L_R66H
VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H
R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L_R176H
VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H
R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L_R76H
VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H
R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L_R186H
VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H
R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L_R86H
VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H
R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L_R196H
VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H
R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L_R96H
VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H
R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L_R6H
VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H
R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L_R107H
VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H
R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L_R207H
VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H
R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L_R117H
VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H
R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L_R217H
VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H
R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L_R17H
VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H
R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L_R127H
VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H
R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L_R227H
VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H
R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L_R27H
VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H
R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L_R137H
VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H
R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L_R237H
VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H
R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L_R37H
VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H
R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L_R147H
VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H
R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L_R247H
VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H
R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L_R47H
VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H
R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L_R157H
VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H
R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L_R57H
VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H
R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L_R167H
VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H
R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L_R67H
VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H
R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L_R177H
VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H
R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L_R77H
VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H
R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L_R187H
VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H
R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L_R87H
VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H
R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L_R197H
VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H
R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L_R97H
VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H
R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L_R7H
VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H
R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L_R108H
VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H
R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L_R208H
VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H
R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L_R118H
VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H
R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L_R218H
VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H
R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L_R18H
VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H
R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L_R128H
VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H
R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L_R228H
VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H
R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L_R28H
VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H
R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L_R138H
VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H
R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L_R238H
VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H
R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L_R38H
VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H
R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L_R148H
VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H
R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L_R248H
VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H
R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L_R48H
VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H
R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L_R158H
VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H
R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L_R58H
VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H
R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L_R168H
VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H
R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L_R68H
VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H
R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L_R178H
VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H
R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L_R78H
VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H
R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L_R188H
VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H
R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L_R88H
VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H
R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L_R198H
VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H
R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L_R98H
VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H
R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L_R8H
VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H
R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L_R109H
VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H
R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L_R209H
VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H
R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L_R119H
VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H
R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L_R219H
VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H
R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L_R19H
VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H
R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L_R129H
VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H
R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L_R229H
VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H
R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L_R29H
VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H
R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L_R139H
VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H
R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L_R239H
VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H
R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L_R39H
VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H
R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L_R149H
VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H
R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L_R249H
VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H
R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L_R49H
VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H
R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L_R159H
VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H
R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L_R59H
VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H
R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L_R169H
VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H
R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L_R69H
VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H
R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L_R179H
VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H
R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L_R79H
VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H
R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L_R189H
VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H
R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L_R89H
VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H
R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L_R199H
VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H
R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L_R99H
VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H
R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L_R9H
VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L
R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L
VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L
R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L
VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L
R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L
VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L
R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L
VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L
R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L
VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L
R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L
VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L
R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L
VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L
R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L
VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L
R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L
VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L
R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L
VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L
R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L
VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L
R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L
VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L
R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L
VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L
R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L
VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L
R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L
VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L
R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L
VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L
R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L
VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L
R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L
VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L
R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L
VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L
R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L
VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L
R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L
VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L
R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L
VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L
R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L
VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L
R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L
VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L
R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L
VI0L
VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L
R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L
VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L
R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L
VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L
R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L
VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L
R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L
VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L
R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L
VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L
R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L
VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L
R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L
VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L
R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L
VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L
R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L
VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L
R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L
VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L
R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L
VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L
R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L
VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L
R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L
VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L
R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L
VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L
R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L
VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L
R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L
VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L
R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L
VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L
R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L
VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L
R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L
VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L
R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L
VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L
R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L
VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L
R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L
VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L
R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L
VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L
R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L
VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L
R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L
VI0L_VI0H_VI1L
R0L_R0H_R1L
VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L
R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L
VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L
R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L
VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L
R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L
VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L
R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L
VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L
R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L
VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L
R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L
VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L
R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L
VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L
R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L
VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L
R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L
VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L
R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L
VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L
R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L
VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L
R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L
VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L
R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L
VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L
R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L
VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L
R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L
VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H_VI252L
R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L_R251H_R252L
VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L
R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L
VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L
R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L
VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L
R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L
VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L
R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L
VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L
R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L
VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L
R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L
VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L
R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L
VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L
R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L
VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L
R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L
VI0L_VI0H_VI1L_VI1H_VI2L
R0L_R0H_R1L_R1H_R2L
VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L
R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L
VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L
R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L
VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L
R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L
VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L
R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L
VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L
R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L
VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L
R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L
VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L
R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L
VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L
R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L
VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L
R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L
VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L
R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L
VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L
R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L
VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L
R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L
VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L
R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L
VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L
R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L
VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L
R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L
VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H_VI252L_VI252H_VI253L
R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L_R251H_R252L_R252H_R253L
VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L
R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L
VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L
R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L
VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L
R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L
VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L
R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L
VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L
R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L
VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L
R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L
VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L
R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L
VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L
R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L
VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L
R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L
VI0L_VI0H_VI1L_VI1H_VI2L_VI2H_VI3L
R0L_R0H_R1L_R1H_R2L_R2H_R3L
VI96H_VI97L_VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L
R96H_R97L_R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L
VI196H_VI197L_VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L
R196H_R197L_R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L
VI106H_VI107L_VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L
R106H_R107L_R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L
VI206H_VI207L_VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L
R206H_R207L_R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L
VI6H_VI7L_VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L
R6H_R7L_R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L
VI116H_VI117L_VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L
R116H_R117L_R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L
VI216H_VI217L_VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L
R216H_R217L_R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L
VI16H_VI17L_VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L
R16H_R17L_R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L
VI126H_VI127L_VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L
R126H_R127L_R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L
VI226H_VI227L_VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L
R226H_R227L_R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L
VI26H_VI27L_VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L
R26H_R27L_R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L
VI136H_VI137L_VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L
R136H_R137L_R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L
VI236H_VI237L_VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L
R236H_R237L_R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L
VI36H_VI37L_VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L
R36H_R37L_R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L
VI146H_VI147L_VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L
R146H_R147L_R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L
VI246H_VI247L_VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H_VI252L_VI252H_VI253L_VI253H_VI254L
R246H_R247L_R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L_R251H_R252L_R252H_R253L_R253H_R254L
VI46H_VI47L_VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L
R46H_R47L_R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L
VI156H_VI157L_VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L
R156H_R157L_R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L
VI56H_VI57L_VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L
R56H_R57L_R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L
VI166H_VI167L_VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L
R166H_R167L_R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L
VI66H_VI67L_VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L
R66H_R67L_R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L
VI176H_VI177L_VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L
R176H_R177L_R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L
VI76H_VI77L_VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L
R76H_R77L_R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L
VI186H_VI187L_VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L
R186H_R187L_R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L
VI86H_VI87L_VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L
R86H_R87L_R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L
VI0L_VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L
R0L_R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L
VI97H_VI98L_VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L
R97H_R98L_R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L
VI197H_VI198L_VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L
R197H_R198L_R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L
VI107H_VI108L_VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L
R107H_R108L_R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L
VI207H_VI208L_VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L
R207H_R208L_R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L
VI7H_VI8L_VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L
R7H_R8L_R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L
VI117H_VI118L_VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L
R117H_R118L_R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L
VI217H_VI218L_VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L
R217H_R218L_R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L
VI17H_VI18L_VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L
R17H_R18L_R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L
VI127H_VI128L_VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L
R127H_R128L_R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L
VI227H_VI228L_VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L
R227H_R228L_R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L
VI27H_VI28L_VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L
R27H_R28L_R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L
VI137H_VI138L_VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L
R137H_R138L_R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L
VI237H_VI238L_VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L
R237H_R238L_R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L
VI37H_VI38L_VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L
R37H_R38L_R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L
VI147H_VI148L_VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L
R147H_R148L_R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L
VI247H_VI248L_VI248H_VI249L_VI249H_VI250L_VI250H_VI251L_VI251H_VI252L_VI252H_VI253L_VI253H_VI254L_VI254H_VI255L
R247H_R248L_R248H_R249L_R249H_R250L_R250H_R251L_R251H_R252L_R252H_R253L_R253H_R254L_R254H_R255L
VI47H_VI48L_VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L
R47H_R48L_R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L
VI157H_VI158L_VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L
R157H_R158L_R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L
VI57H_VI58L_VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L
R57H_R58L_R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L
VI167H_VI168L_VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L
R167H_R168L_R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L
VI67H_VI68L_VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L
R67H_R68L_R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L
VI177H_VI178L_VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L
R177H_R178L_R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L
VI77H_VI78L_VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L
R77H_R78L_R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L
VI187H_VI188L_VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L
R187H_R188L_R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L
VI87H_VI88L_VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L
R87H_R88L_R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L
VI0L_VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L
R0L_R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L
VI98H_VI99L_VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L
R98H_R99L_R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L
VI198H_VI199L_VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L
R198H_R199L_R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L
VI108H_VI109L_VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L
R108H_R109L_R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L
VI208H_VI209L_VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L
R208H_R209L_R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L
VI8H_VI9L_VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L
R8H_R9L_R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L
VI118H_VI119L_VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L
R118H_R119L_R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L
VI218H_VI219L_VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L
R218H_R219L_R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L
VI18H_VI19L_VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L
R18H_R19L_R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L
VI128H_VI129L_VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L
R128H_R129L_R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L
VI228H_VI229L_VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L
R228H_R229L_R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L
VI28H_VI29L_VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L
R28H_R29L_R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L
VI138H_VI139L_VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L
R138H_R139L_R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L
VI238H_VI239L_VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L
R238H_R239L_R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L
VI38H_VI39L_VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L
R38H_R39L_R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L
VI148H_VI149L_VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L
R148H_R149L_R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L
VI48H_VI49L_VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L
R48H_R49L_R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L
VI158H_VI159L_VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L
R158H_R159L_R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L
VI58H_VI59L_VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L
R58H_R59L_R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L
VI168H_VI169L_VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L
R168H_R169L_R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L
VI68H_VI69L_VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L
R68H_R69L_R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L
VI178H_VI179L_VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L
R178H_R179L_R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L
VI78H_VI79L_VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L
R78H_R79L_R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L
VI188H_VI189L_VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L
R188H_R189L_R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L
VI88H_VI89L_VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L
R88H_R89L_R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L
VI0L_VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L
R0L_R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L
VI99H_VI100L_VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L
R99H_R100L_R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L
VI199H_VI200L_VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L
R199H_R200L_R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L
VI109H_VI110L_VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L
R109H_R110L_R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L
VI209H_VI210L_VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L
R209H_R210L_R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L
VI9H_VI10L_VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L
R9H_R10L_R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L
VI119H_VI120L_VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L
R119H_R120L_R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L
VI219H_VI220L_VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L
R219H_R220L_R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L
VI19H_VI20L_VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L
R19H_R20L_R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L
VI129H_VI130L_VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L
R129H_R130L_R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L
VI229H_VI230L_VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L
R229H_R230L_R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L
VI29H_VI30L_VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L
R29H_R30L_R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L
VI139H_VI140L_VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L
R139H_R140L_R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L
VI239H_VI240L_VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L
R239H_R240L_R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L
VI39H_VI40L_VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L
R39H_R40L_R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L
VI149H_VI150L_VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L
R149H_R150L_R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L
VI49H_VI50L_VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L
R49H_R50L_R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L
VI159H_VI160L_VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L
R159H_R160L_R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L
VI59H_VI60L_VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L
R59H_R60L_R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L
VI169H_VI170L_VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L
R169H_R170L_R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L
VI69H_VI70L_VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L
R69H_R70L_R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L
VI179H_VI180L_VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L
R179H_R180L_R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L
VI79H_VI80L_VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L
R79H_R80L_R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L
VI189H_VI190L_VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L
R189H_R190L_R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L
VI89H_VI90L_VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L
R89H_R90L_R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L
VI0L_VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L
R0L_R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L
VI100H_VI101L_VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L
R100H_R101L_R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L
VI200H_VI201L_VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L
R200H_R201L_R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L
VI110H_VI111L_VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L
R110H_R111L_R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L
VI210H_VI211L_VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L
R210H_R211L_R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L
VI10H_VI11L_VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L
R10H_R11L_R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L
VI120H_VI121L_VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L
R120H_R121L_R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L
VI220H_VI221L_VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L
R220H_R221L_R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L
VI20H_VI21L_VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L
R20H_R21L_R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L
VI130H_VI131L_VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L
R130H_R131L_R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L
VI230H_VI231L_VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L
R230H_R231L_R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L
VI30H_VI31L_VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L
R30H_R31L_R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L
VI140H_VI141L_VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L
R140H_R141L_R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L
VI240H_VI241L_VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L
R240H_R241L_R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L
VI40H_VI41L_VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L
R40H_R41L_R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L
VI150H_VI151L_VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L
R150H_R151L_R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L
VI50H_VI51L_VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L
R50H_R51L_R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L
VI160H_VI161L_VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L
R160H_R161L_R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L
VI60H_VI61L_VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L
R60H_R61L_R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L
VI170H_VI171L_VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L
R170H_R171L_R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L
VI70H_VI71L_VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L
R70H_R71L_R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L
VI180H_VI181L_VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L
R180H_R181L_R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L
VI80H_VI81L_VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L
R80H_R81L_R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L
VI190H_VI191L_VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L
R190H_R191L_R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L
VI90H_VI91L_VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L
R90H_R91L_R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L
VI0H_VI1L_VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L
R0H_R1L_R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L
VI101H_VI102L_VI102H_VI103L_VI103H_VI104L_VI104H_VI105L_VI105H_VI106L_VI106H_VI107L_VI107H_VI108L_VI108H_VI109L
R101H_R102L_R102H_R103L_R103H_R104L_R104H_R105L_R105H_R106L_R106H_R107L_R107H_R108L_R108H_R109L
VI201H_VI202L_VI202H_VI203L_VI203H_VI204L_VI204H_VI205L_VI205H_VI206L_VI206H_VI207L_VI207H_VI208L_VI208H_VI209L
R201H_R202L_R202H_R203L_R203H_R204L_R204H_R205L_R205H_R206L_R206H_R207L_R207H_R208L_R208H_R209L
VI111H_VI112L_VI112H_VI113L_VI113H_VI114L_VI114H_VI115L_VI115H_VI116L_VI116H_VI117L_VI117H_VI118L_VI118H_VI119L
R111H_R112L_R112H_R113L_R113H_R114L_R114H_R115L_R115H_R116L_R116H_R117L_R117H_R118L_R118H_R119L
VI211H_VI212L_VI212H_VI213L_VI213H_VI214L_VI214H_VI215L_VI215H_VI216L_VI216H_VI217L_VI217H_VI218L_VI218H_VI219L
R211H_R212L_R212H_R213L_R213H_R214L_R214H_R215L_R215H_R216L_R216H_R217L_R217H_R218L_R218H_R219L
VI11H_VI12L_VI12H_VI13L_VI13H_VI14L_VI14H_VI15L_VI15H_VI16L_VI16H_VI17L_VI17H_VI18L_VI18H_VI19L
R11H_R12L_R12H_R13L_R13H_R14L_R14H_R15L_R15H_R16L_R16H_R17L_R17H_R18L_R18H_R19L
VI121H_VI122L_VI122H_VI123L_VI123H_VI124L_VI124H_VI125L_VI125H_VI126L_VI126H_VI127L_VI127H_VI128L_VI128H_VI129L
R121H_R122L_R122H_R123L_R123H_R124L_R124H_R125L_R125H_R126L_R126H_R127L_R127H_R128L_R128H_R129L
VI221H_VI222L_VI222H_VI223L_VI223H_VI224L_VI224H_VI225L_VI225H_VI226L_VI226H_VI227L_VI227H_VI228L_VI228H_VI229L
R221H_R222L_R222H_R223L_R223H_R224L_R224H_R225L_R225H_R226L_R226H_R227L_R227H_R228L_R228H_R229L
VI21H_VI22L_VI22H_VI23L_VI23H_VI24L_VI24H_VI25L_VI25H_VI26L_VI26H_VI27L_VI27H_VI28L_VI28H_VI29L
R21H_R22L_R22H_R23L_R23H_R24L_R24H_R25L_R25H_R26L_R26H_R27L_R27H_R28L_R28H_R29L
VI131H_VI132L_VI132H_VI133L_VI133H_VI134L_VI134H_VI135L_VI135H_VI136L_VI136H_VI137L_VI137H_VI138L_VI138H_VI139L
R131H_R132L_R132H_R133L_R133H_R134L_R134H_R135L_R135H_R136L_R136H_R137L_R137H_R138L_R138H_R139L
VI231H_VI232L_VI232H_VI233L_VI233H_VI234L_VI234H_VI235L_VI235H_VI236L_VI236H_VI237L_VI237H_VI238L_VI238H_VI239L
R231H_R232L_R232H_R233L_R233H_R234L_R234H_R235L_R235H_R236L_R236H_R237L_R237H_R238L_R238H_R239L
VI31H_VI32L_VI32H_VI33L_VI33H_VI34L_VI34H_VI35L_VI35H_VI36L_VI36H_VI37L_VI37H_VI38L_VI38H_VI39L
R31H_R32L_R32H_R33L_R33H_R34L_R34H_R35L_R35H_R36L_R36H_R37L_R37H_R38L_R38H_R39L
VI141H_VI142L_VI142H_VI143L_VI143H_VI144L_VI144H_VI145L_VI145H_VI146L_VI146H_VI147L_VI147H_VI148L_VI148H_VI149L
R141H_R142L_R142H_R143L_R143H_R144L_R144H_R145L_R145H_R146L_R146H_R147L_R147H_R148L_R148H_R149L
VI241H_VI242L_VI242H_VI243L_VI243H_VI244L_VI244H_VI245L_VI245H_VI246L_VI246H_VI247L_VI247H_VI248L_VI248H_VI249L
R241H_R242L_R242H_R243L_R243H_R244L_R244H_R245L_R245H_R246L_R246H_R247L_R247H_R248L_R248H_R249L
VI41H_VI42L_VI42H_VI43L_VI43H_VI44L_VI44H_VI45L_VI45H_VI46L_VI46H_VI47L_VI47H_VI48L_VI48H_VI49L
R41H_R42L_R42H_R43L_R43H_R44L_R44H_R45L_R45H_R46L_R46H_R47L_R47H_R48L_R48H_R49L
VI151H_VI152L_VI152H_VI153L_VI153H_VI154L_VI154H_VI155L_VI155H_VI156L_VI156H_VI157L_VI157H_VI158L_VI158H_VI159L
R151H_R152L_R152H_R153L_R153H_R154L_R154H_R155L_R155H_R156L_R156H_R157L_R157H_R158L_R158H_R159L
VI51H_VI52L_VI52H_VI53L_VI53H_VI54L_VI54H_VI55L_VI55H_VI56L_VI56H_VI57L_VI57H_VI58L_VI58H_VI59L
R51H_R52L_R52H_R53L_R53H_R54L_R54H_R55L_R55H_R56L_R56H_R57L_R57H_R58L_R58H_R59L
VI161H_VI162L_VI162H_VI163L_VI163H_VI164L_VI164H_VI165L_VI165H_VI166L_VI166H_VI167L_VI167H_VI168L_VI168H_VI169L
R161H_R162L_R162H_R163L_R163H_R164L_R164H_R165L_R165H_R166L_R166H_R167L_R167H_R168L_R168H_R169L
VI61H_VI62L_VI62H_VI63L_VI63H_VI64L_VI64H_VI65L_VI65H_VI66L_VI66H_VI67L_VI67H_VI68L_VI68H_VI69L
R61H_R62L_R62H_R63L_R63H_R64L_R64H_R65L_R65H_R66L_R66H_R67L_R67H_R68L_R68H_R69L
VI171H_VI172L_VI172H_VI173L_VI173H_VI174L_VI174H_VI175L_VI175H_VI176L_VI176H_VI177L_VI177H_VI178L_VI178H_VI179L
R171H_R172L_R172H_R173L_R173H_R174L_R174H_R175L_R175H_R176L_R176H_R177L_R177H_R178L_R178H_R179L
VI71H_VI72L_VI72H_VI73L_VI73H_VI74L_VI74H_VI75L_VI75H_VI76L_VI76H_VI77L_VI77H_VI78L_VI78H_VI79L
R71H_R72L_R72H_R73L_R73H_R74L_R74H_R75L_R75H_R76L_R76H_R77L_R77H_R78L_R78H_R79L
VI181H_VI182L_VI182H_VI183L_VI183H_VI184L_VI184H_VI185L_VI185H_VI186L_VI186H_VI187L_VI187H_VI188L_VI188H_VI189L
R181H_R182L_R182H_R183L_R183H_R184L_R184H_R185L_R185H_R186L_R186H_R187L_R187H_R188L_R188H_R189L
VI81H_VI82L_VI82H_VI83L_VI83H_VI84L_VI84H_VI85L_VI85H_VI86L_VI86H_VI87L_VI87H_VI88L_VI88H_VI89L
R81H_R82L_R82H_R83L_R83H_R84L_R84H_R85L_R85H_R86L_R86H_R87L_R87H_R88L_R88H_R89L
VI191H_VI192L_VI192H_VI193L_VI193H_VI194L_VI194H_VI195L_VI195H_VI196L_VI196H_VI197L_VI197H_VI198L_VI198H_VI199L
R191H_R192L_R192H_R193L_R193H_R194L_R194H_R195L_R195H_R196L_R196H_R197L_R197H_R198L_R198H_R199L
VI91H_VI92L_VI92H_VI93L_VI93H_VI94L_VI94H_VI95L_VI95H_VI96L_VI96H_VI97L_VI97H_VI98L_VI98H_VI99L
R91H_R92L_R92H_R93L_R93H_R94L_R94H_R95L_R95H_R96L_R96H_R97L_R97H_R98L_R98H_R99L
VI1H_VI2L_VI2H_VI3L_VI3H_VI4L_VI4H_VI5L_VI5H_VI6L_VI6H_VI7L_VI7H_VI8L_VI8H_VI9L
R1H_R2L_R2H_R3L_R3H_R4L_R4H_R5L_R5H_R6L_R6H_R7L_R7H_R8L_R8H_R9L
GPR32tup10
GPR16tup10
GPR32tup11
GPR16tup11
GPR32tup12
GPR16tup12
SIR32
VIR32
GPR32
TR32
GPR32tup2
GPR16tup2
GPR32tup13
GPR16tup13
GPR32tup3
GPR16tup3
GPR32tup14
GPR16tup14
GPR32tup4
GPR16tup4
GPR32tup15
GPR16tup15
GPR32tup5
GPR16tup5
GPR32tup10_with_hsub0_in_VIR16
GPR16tup10_with_hsub0_in_VIR16
GPR32tup11_with_hsub0_in_VIR16
GPR16tup11_with_hsub0_in_VIR16
GPR32tup12_with_hsub0_in_VIR16
GPR16tup12_with_hsub0_in_VIR16
GPR16tup2_with_hsub0_in_VIR16
GPR32tup13_with_hsub0_in_VIR16
GPR16tup13_with_hsub0_in_VIR16
GPR16tup3_with_hsub0_in_VIR16
GPR32tup14_with_hsub0_in_VIR16
GPR16tup14_with_hsub0_in_VIR16
GPR16tup4_with_hsub0_in_VIR16
GPR32tup15_with_hsub0_in_VIR16
GPR16tup15_with_hsub0_in_VIR16
GPR16tup5_with_hsub0_in_VIR16
GPR32tup16_with_hsub0_in_VIR16
GPR16tup16_with_hsub0_in_VIR16
GPR16tup6_with_hsub0_in_VIR16
GPR16tup7_with_hsub0_in_VIR16
GPR16tup8_with_hsub0_in_VIR16
GPR32tup9_with_hsub0_in_VIR16
GPR16tup9_with_hsub0_in_VIR16
GPR16
GPR32tup10_with_hsub0_in_TR16
GPR16tup10_with_hsub0_in_TR16
GPR32tup11_with_hsub0_in_TR16
GPR16tup11_with_hsub0_in_TR16
GPR32tup12_with_hsub0_in_TR16
GPR16tup12_with_hsub0_in_TR16
GPR16tup2_with_hsub0_in_TR16
GPR32tup13_with_hsub0_in_TR16
GPR16tup13_with_hsub0_in_TR16
GPR16tup3_with_hsub0_in_TR16
GPR32tup14_with_hsub0_in_TR16
GPR16tup14_with_hsub0_in_TR16
GPR16tup4_with_hsub0_in_TR16
GPR32tup15_with_hsub0_in_TR16
GPR16tup15_with_hsub0_in_TR16
GPR16tup5_with_hsub0_in_TR16
GPR32tup16_with_hsub0_in_TR16
GPR16tup16_with_hsub0_in_TR16
GPR16tup6_with_hsub0_in_TR16
GPR16tup7_with_hsub0_in_TR16
GPR16tup8_with_hsub0_in_TR16
GPR32tup9_with_hsub0_in_TR16
GPR16tup9_with_hsub0_in_TR16
GPR32tup16
GPR16tup16
GPR32tup6
GPR16tup6
GPR32tup7
GPR16tup7
GPR32tup8
GPR16tup8
GPR32tup9
GPR16tup9
GPR32noSR
TR32tup2_rc
TR32tup3_rc
TR32tup4_rc
TR32tup6_rc
GPR16tup11_alignedrc
GPR16tup13_alignedrc
GPR16tup3_alignedrc
GPR16tup15_alignedrc
GPR16tup5_alignedrc
GPR16tup7_alignedrc
GPR16tup9_alignedrc
GPR16tup10_with_hsub0_in_VIR16_aligned
GPR16tup11_with_hsub0_in_VIR16_aligned
GPR16tup12_with_hsub0_in_VIR16_aligned
GPR16tup13_with_hsub0_in_VIR16_aligned
GPR16tup3_with_hsub0_in_VIR16_aligned
GPR16tup14_with_hsub0_in_VIR16_aligned
GPR16tup4_with_hsub0_in_VIR16_aligned
GPR16tup15_with_hsub0_in_VIR16_aligned
GPR16tup5_with_hsub0_in_VIR16_aligned
GPR16tup16_with_hsub0_in_VIR16_aligned
GPR16tup6_with_hsub0_in_VIR16_aligned
GPR16tup7_with_hsub0_in_VIR16_aligned
GPR16tup8_with_hsub0_in_VIR16_aligned
GPR16tup9_with_hsub0_in_VIR16_aligned
GPR16tup10_with_hsub1_in_VIR16_aligned
GPR16tup11_with_hsub1_in_VIR16_aligned
GPR16tup12_with_hsub1_in_VIR16_aligned
GPR16tup2_with_hsub1_in_VIR16_aligned
GPR16tup13_with_hsub1_in_VIR16_aligned
GPR16tup3_with_hsub1_in_VIR16_aligned
GPR16tup14_with_hsub1_in_VIR16_aligned
GPR16tup4_with_hsub1_in_VIR16_aligned
GPR16tup15_with_hsub1_in_VIR16_aligned
GPR16tup5_with_hsub1_in_VIR16_aligned
GPR16tup16_with_hsub1_in_VIR16_aligned
GPR16tup6_with_hsub1_in_VIR16_aligned
GPR16tup7_with_hsub1_in_VIR16_aligned
GPR16tup8_with_hsub1_in_VIR16_aligned
GPR16tup9_with_hsub1_in_VIR16_aligned
GPR16tup10_with_hsub1_in_GPR16_aligned
GPR16tup11_with_hsub1_in_GPR16_aligned
GPR16tup12_with_hsub1_in_GPR16_aligned
GPR16tup2_with_hsub1_in_GPR16_aligned
GPR16tup13_with_hsub1_in_GPR16_aligned
GPR16tup3_with_hsub1_in_GPR16_aligned
GPR16tup14_with_hsub1_in_GPR16_aligned
GPR16tup4_with_hsub1_in_GPR16_aligned
GPR16tup15_with_hsub1_in_GPR16_aligned
GPR16tup5_with_hsub1_in_GPR16_aligned
GPR16tup16_with_hsub1_in_GPR16_aligned
GPR16tup6_with_hsub1_in_GPR16_aligned
GPR16tup7_with_hsub1_in_GPR16_aligned
GPR16tup8_with_hsub1_in_GPR16_aligned
GPR16tup9_with_hsub1_in_GPR16_aligned
GPR16tup10_with_hsub0_in_TR16_aligned
GPR16tup11_with_hsub0_in_TR16_aligned
GPR16tup13_with_hsub0_in_TR16_aligned
GPR16tup3_with_hsub0_in_TR16_aligned
GPR16tup14_with_hsub0_in_TR16_aligned
GPR16tup15_with_hsub0_in_TR16_aligned
GPR16tup5_with_hsub0_in_TR16_aligned
GPR16tup16_with_hsub0_in_TR16_aligned
GPR16tup7_with_hsub0_in_TR16_aligned
GPR16tup9_with_hsub0_in_TR16_aligned
GPR16tup10_with_hsub1_in_TR16_aligned
GPR16tup11_with_hsub1_in_TR16_aligned
GPR16tup12_with_hsub1_in_TR16_aligned
GPR16tup2_with_hsub1_in_TR16_aligned
GPR16tup13_with_hsub1_in_TR16_aligned
GPR16tup3_with_hsub1_in_TR16_aligned
GPR16tup14_with_hsub1_in_TR16_aligned
GPR16tup4_with_hsub1_in_TR16_aligned
GPR16tup15_with_hsub1_in_TR16_aligned
GPR16tup5_with_hsub1_in_TR16_aligned
GPR16tup16_with_hsub1_in_TR16_aligned
GPR16tup6_with_hsub1_in_TR16_aligned
GPR16tup7_with_hsub1_in_TR16_aligned
GPR16tup8_with_hsub1_in_TR16_aligned
GPR16tup9_with_hsub1_in_TR16_aligned
6 6!6"6#6$6%6&6'6(6)6*6+6,6-6.6/606162636465666768696:6;6<6=6>6?6@6A6B6C6D6E6F6G6H6I6J6K6L6M6N6O6P6Q6R6S6T6U6V6W6X6Y6Z6[6\6]6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6w6x6y6z6{6|6}6~6
6 6!6"6#6$6%6&6'6(6)6*6+6,6-6.6/606162636465666768696:6;6<6=6>6?6@6A6B6C6D6E6F6G6H6I6J6K6L6M6N6O6P6Q6R6S6T6U6V6W6X6Y6Z6[6\6]6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6w6x6y6z6{6|6}6~6
878
8 7 8!7!8"7"8#7#8$7$8%7%8&7&8'7'8(7(8)7)8*7*8+7+8,7,8-7-8.7.8/7/80708171827283738474857586768777887889798:7:8;7;8<7<8=7=8>7>8?7?8@7@8A7A8B7B8C7C8D7D8E7E8F7F8G7G8H7H8I7I8J7J8K7K8L7L8M7M8N7N8O7O8P7P8Q7Q8R7R8S7S8T7T8U7U8V7V8W7W8X7X8Y7Y8Z7Z8[7[8\7\8]7]8^7^8_7_8`7`8a7a8b7b8c7c8d7d8e7e8f7f8g7g8h7h8i7i8j7j8k7k8l7l8m7m8n7n8o7o8p7p8q7q8r7r8s7s8t7t8u7u8v7v8w7w8x7x8y7y8z7z8{7{8|7|8}7}8~7~8
8 8!8"8#8$8%8&8'8(8)8*8+8,8-8.8/808182838485868788898:8;8<8=8>8?8@8A8B8C8D8E8F8G8H8I8J8K8L8M8N8O8P8Q8R8S8T8U8V8W8X8Y8Z8[8\8]8^8_8`8a8b8c8d8e8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}8~8
878
8 7 8!7!8"7"8#7#8$7$8%7%8&7&8'7'8(7(8)7)8*7*8+7+8,7,8-7-8.7.8/7/80708171827283738474857586768777887889798:7:8;7;8<7<8=7=8>7>8?7?8@7@8A7A8B7B8C7C8D7D8E7E8F7F8G7G8H7H8I7I8J7J8K7K8L7L8M7M8N7N8O7O8P7P8Q7Q8R7R8S7S8T7T8U7U8V7V8W7W8X7X8Y7Y8Z7Z8[7[8\7\8]7]8^7^8_7_8`7`8a7a8b7b8c7c8d7d8e7e8f7f8g7g8h7h8i7i8j7j8k7k8l7l8m7m8n7n8o7o8p7p8q7q8r7r8s7s8t7t8u7u8v7v8w7w8x7x8y7y8z7z8{7{8|7|8}7}8~7~8
7 7!7"7#7$7%7&7'7(7)7*7+7,7-7.7/707172737475767778797:7;7<7=7>7?7@7A7B7C7D7E7F7G7H7I7J7K7L7M7N7O7P7Q7R7S7T7U7V7W7X7Y7Z7[7\7]7^7_7`7a7b7c7d7e7f7g7h7i7j7k7l7m7n7o7p7q7r7s7t7u7v7w7x7y7z7{7|7}7~7
8 8!8"8#8$8%8&8'8(8)8*8+8,8-8.8/808182838485868788898:8;8<8=8>8?8@8A8B8C8D8E8F8G8H8I8J8K8L8M8N8O8P8Q8R8S8T8U8V8W8X8Y8Z8[8\8]8^8_8`8a8b8c8d8e8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}8~8
7 7!7"7#7$7%7&7'7(7)7*7+7,7-7.7/707172737475767778797:7;7<7=7>7?7@7A7B7C7D7E7F7G7H7I7J7K7L7M7N7O7P7Q7R7S7T7U7V7W7X7Y7Z7[7\7]7^7_7`7a7b7c7d7e7f7g7h7i7j7k7l7m7n7o7p7q7r7s7t7u7v7w7x7y7z7{7|7}7~7
Iz9I{9
9}IS$
I I!I"I#I$I%I&I'I(I)I*I+I,I-I.I/I0I1I2I3I4I5I6I7I8I9I:I;I<I=I>I?I@IAIBICIDIEIFIGIHIIIJIKILIMINIOIPIQIRISITIUIVIWIXIYIZI[I\I]I^I_I`IaIbIcIdIeIfIgIhIiIjIkIlImInIoIpIqIrIsItIuIvIwIxIyIzI{I|I}IS$T$U$V$W$X$Y$Z$[$\$]$^$_$`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$t$u$v$w$x$y$z${$|$}$~$
% %!%"%#%$%%%&%'%(%)%*%+%,%-%.%/%0%1%2%3%4%5%6%7%8%9%:%;%<%=%>%?%@%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%
Iz9I{9
9 9!9"9#9$9%9&9'9(9)9*9+9,9-9.9/909192939495969798999:9;9<9=9>9?9@9A9B9C9D9E9F9G9H9I9J9K9L9M9N9O9P9Q9R9S9T9U9V9W9X9Y9Z9[9\9]9^9_9`9a9b9c9d9e9f9g9h9i9j9k9l9m9n9o9p9q9r9s9t9u9v9w9x9y9z9{9|9}9~9
I I!I"I#I$I%I&I'I(I)I*I+I,I-I.I/I0I1I2I3I4I5I6I7I8I9I:I;I<I=I>I?I@IAIBICIDIEIFIGIHIIIJIKILIMINIOIPIQIRISITIUIVIWIXIYIZI[I\I]I^I_I`IaIbIcIdIeIfIgIhIiIjIkIlImInIoIpIqIrIsItIuIvIwIxIyIzI{I|I}I
?S$T$U$V$W$X$Y$Z$[$\$]$^$_$`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$t$u$v$w$x$y$z${$|$}$~$
% %!%"%#%$%%%&%'%(%)%*%+%,%-%.%/%0%1%2%3%4%5%6%7%8%9%:%;%<%=%>%?%@%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%
9 9!9"9#9$9%9&9'9(9)9*9+9,9-9.9/909192939495969798999:9;9<9=9>9?9@9A9B9C9D9E9F9G9H9I9J9K9L9M9N9O9P9Q9R9S9T9U9V9W9X9Y9Z9[9\9]9^9_9`9a9b9c9d9e9f9g9h9i9j9k9l9m9n9o9p9q9r9s9t9u9v9w9x9y9z9{9|9}9~9
;!: ;":!;#:";$:#;%:$;&:%;':&;(:';):(;*:);+:*;,:+;-:,;.:-;/:.;0:/;1:0;2:1;3:2;4:3;5:4;6:5;7:6;8:7;9:8;::9;;::;<:;;=:<;>:=;?:>;@:?;A:@;B:A;C:B;D:C;E:D;F:E;G:F;H:G;I:H;J:I;K:J;L:K;M:L;N:M;O:N;P:O;Q:P;R:Q;S:R;T:S;U:T;V:U;W:V;X:W;Y:X;Z:Y;[:Z;\:[;]:\;^:];_:^;`:_;a:`;b:a;c:b;d:c;e:d;f:e;g:f;h:g;i:h;j:i;k:j;l:k;m:l;n:m;o:n;p:o;q:p;r:q;s:r;t:s;u:t;v:u;w:v;x:w;y:x;z:y;{:z;|:{;}:|;~:};
; ;!;";#;$;%;&;';(;);*;+;,;-;.;/;0;1;2;3;4;5;6;7;8;9;:;;;<;=;>;?;@;A;B;C;D;E;F;G;H;I;J;K;L;M;N;O;P;Q;R;S;T;U;V;W;X;Y;Z;[;\;];^;_;`;a;b;c;d;e;f;g;h;i;j;k;l;m;n;o;p;q;r;s;t;u;v;w;x;y;z;{;|;};~;
;!: ;":!;#:";$:#;%:$;&:%;':&;(:';):(;*:);+:*;,:+;-:,;.:-;/:.;0:/;1:0;2:1;3:2;4:3;5:4;6:5;7:6;8:7;9:8;::9;;::;<:;;=:<;>:=;?:>;@:?;A:@;B:A;C:B;D:C;E:D;F:E;G:F;H:G;I:H;J:I;K:J;L:K;M:L;N:M;O:N;P:O;Q:P;R:Q;S:R;T:S;U:T;V:U;W:V;X:W;Y:X;Z:Y;[:Z;\:[;]:\;^:];_:^;`:_;a:`;b:a;c:b;d:c;e:d;f:e;g:f;h:g;i:h;j:i;k:j;l:k;m:l;n:m;o:n;p:o;q:p;r:q;s:r;t:s;u:t;v:u;w:v;x:w;y:x;z:y;{:z;|:{;}:|;~:};
: :!:":#:$:%:&:':(:):*:+:,:-:.:/:0:1:2:3:4:5:6:7:8:9:::;:<:=:>:?:@:A:B:C:D:E:F:G:H:I:J:K:L:M:N:O:P:Q:R:S:T:U:V:W:X:Y:Z:[:\:]:^:_:`:a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:}:~:
; ;!;";#;$;%;&;';(;);*;+;,;-;.;/;0;1;2;3;4;5;6;7;8;9;:;;;<;=;>;?;@;A;B;C;D;E;F;G;H;I;J;K;L;M;N;O;P;Q;R;S;T;U;V;W;X;Y;Z;[;\;];^;_;`;a;b;c;d;e;f;g;h;i;j;k;l;m;n;o;p;q;r;s;t;u;v;w;x;y;z;{;|;};~;
: :!:":#:$:%:&:':(:):*:+:,:-:.:/:0:1:2:3:4:5:6:7:8:9:::;:<:=:>:?:@:A:B:C:D:E:F:G:H:I:J:K:L:M:N:O:P:Q:R:S:T:U:V:W:X:Y:Z:[:\:]:^:_:`:a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:}:~:
Ju<Jv<
<{JR%
J J!J"J#J$J%J&J'J(J)J*J+J,J-J.J/J0J1J2J3J4J5J6J7J8J9J:J;J<J=J>J?J@JAJBJCJDJEJFJGJHJIJJJKJLJMJNJOJPJQJRJSJTJUJVJWJXJYJZJ[J\J]J^J_J`JaJbJcJdJeJfJgJhJiJjJkJlJmJnJoJpJqJrJsJtJuJvJwJxJyJzJ{JR%S%T%U%V%W%X%Y%Z%[%\%]%^%_%`%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%r%s%t%u%v%w%x%y%z%{%|%}%~%
& &!&"&#&$&%&&&'&(&)&*&+&,&-&.&/&0&1&2&3&4&5&6&7&8&9&:&;&<&=&>&?&@&A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&
Ju<Jv<
< <!<"<#<$<%<&<'<(<)<*<+<,<-<.</<0<1<2<3<4<5<6<7<8<9<:<;<<<=<><?<@<A<B<C<D<E<F<G<H<I<J<K<L<M<N<O<P<Q<R<S<T<U<V<W<X<Y<Z<[<\<]<^<_<`<a<b<c<d<e<f<g<h<i<j<k<l<m<n<o<p<q<r<s<t<u<v<w<x<y<z<{<|<}<~<
J J!J"J#J$J%J&J'J(J)J*J+J,J-J.J/J0J1J2J3J4J5J6J7J8J9J:J;J<J=J>J?J@JAJBJCJDJEJFJGJHJIJJJKJLJMJNJOJPJQJRJSJTJUJVJWJXJYJZJ[J\J]J^J_J`JaJbJcJdJeJfJgJhJiJjJkJlJmJnJoJpJqJrJsJtJuJvJwJxJyJzJ{J
R%S%T%U%V%W%X%Y%Z%[%\%]%^%_%`%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%r%s%t%u%v%w%x%y%z%{%|%}%~%
& &!&"&#&$&%&&&'&(&)&*&+&,&-&.&/&0&1&2&3&4&5&6&7&8&9&:&;&<&=&>&?&@&A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&
< <!<"<#<$<%<&<'<(<)<*<+<,<-<.</<0<1<2<3<4<5<6<7<8<9<:<;<<<=<><?<@<A<B<C<D<E<F<G<H<I<J<K<L<M<N<O<P<Q<R<S<T<U<V<W<X<Y<Z<[<\<]<^<_<`<a<b<c<d<e<f<g<h<i<j<k<l<m<n<o<p<q<r<s<t<u<v<w<x<y<z<{<|<}<~<
>"= >#=!>$=">%=#>&=$>'=%>(=&>)='>*=(>+=)>,=*>-=+>.=,>/=->0=.>1=/>2=0>3=1>4=2>5=3>6=4>7=5>8=6>9=7>:=8>;=9><=:>==;>>=<>?==>@=>>A=?>B=@>C=A>D=B>E=C>F=D>G=E>H=F>I=G>J=H>K=I>L=J>M=K>N=L>O=M>P=N>Q=O>R=P>S=Q>T=R>U=S>V=T>W=U>X=V>Y=W>Z=X>[=Y>\=Z>]=[>^=\>_=]>`=^>a=_>b=`>c=a>d=b>e=c>f=d>g=e>h=f>i=g>j=h>k=i>l=j>m=k>n=l>o=m>p=n>q=o>r=p>s=q>t=r>u=s>v=t>w=u>x=v>y=w>z=x>{=y>|=z>}={>~=|>
> >!>">#>$>%>&>'>(>)>*>+>,>->.>/>0>1>2>3>4>5>6>7>8>9>:>;><>=>>>?>@>A>B>C>D>E>F>G>H>I>J>K>L>M>N>O>P>Q>R>S>T>U>V>W>X>Y>Z>[>\>]>^>_>`>a>b>c>d>e>f>g>h>i>j>k>l>m>n>o>p>q>r>s>t>u>v>w>x>y>z>{>|>}>~>
>"= >#=!>$=">%=#>&=$>'=%>(=&>)='>*=(>+=)>,=*>-=+>.=,>/=->0=.>1=/>2=0>3=1>4=2>5=3>6=4>7=5>8=6>9=7>:=8>;=9><=:>==;>>=<>?==>@=>>A=?>B=@>C=A>D=B>E=C>F=D>G=E>H=F>I=G>J=H>K=I>L=J>M=K>N=L>O=M>P=N>Q=O>R=P>S=Q>T=R>U=S>V=T>W=U>X=V>Y=W>Z=X>[=Y>\=Z>]=[>^=\>_=]>`=^>a=_>b=`>c=a>d=b>e=c>f=d>g=e>h=f>i=g>j=h>k=i>l=j>m=k>n=l>o=m>p=n>q=o>r=p>s=q>t=r>u=s>v=t>w=u>x=v>y=w>z=x>{=y>|=z>}={>~=|>
= =!="=#=$=%=&='=(=)=*=+=,=-=.=/=0=1=2=3=4=5=6=7=8=9=:=;=<===>=?=@=A=B=C=D=E=F=G=H=I=J=K=L=M=N=O=P=Q=R=S=T=U=V=W=X=Y=Z=[=\=]=^=_=`=a=b=c=d=e=f=g=h=i=j=k=l=m=n=o=p=q=r=s=t=u=v=w=x=y=z={=|=}=~=
> >!>">#>$>%>&>'>(>)>*>+>,>->.>/>0>1>2>3>4>5>6>7>8>9>:>;><>=>>>?>@>A>B>C>D>E>F>G>H>I>J>K>L>M>N>O>P>Q>R>S>T>U>V>W>X>Y>Z>[>\>]>^>_>`>a>b>c>d>e>f>g>h>i>j>k>l>m>n>o>p>q>r>s>t>u>v>w>x>y>z>{>|>}>~>
= =!="=#=$=%=&='=(=)=*=+=,=-=.=/=0=1=2=3=4=5=6=7=8=9=:=;=<===>=?=@=A=B=C=D=E=F=G=H=I=J=K=L=M=N=O=P=Q=R=S=T=U=V=W=X=Y=Z=[=\=]=^=_=`=a=b=c=d=e=f=g=h=i=j=k=l=m=n=o=p=q=r=s=t=u=v=w=x=y=z={=|=}=~=
Kn?Ko?
?xKP&
|J}J~J
K K!K"K#K$K%K&K'K(K)K*K+K,K-K.K/K0K1K2K3K4K5K6K7K8K9K:K;K<K=K>K?K@KAKBKCKDKEKFKGKHKIKJKKKLKMKNKOKPKQKRKSKTKUKVKWKXKYKZK[K\K]K^K_K`KaKbKcKdKeKfKgKhKiKjKkKlKmKnKoKpKqKrKsKtKuKvKwKxKP&Q&R&S&T&U&V&W&X&Y&Z&[&\&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x&y&z&{&|&}&~&
' '!'"'#'$'%'&'''(')'*'+','-'.'/'0'1'2'3'4'5'6'7'8'9':';'<'='>'?'@'A'B'C'D'E'F'G'H'I'J'K'L'
Kn?Ko?
? ?!?"?#?$?%?&?'?(?)?*?+?,?-?.?/?0?1?2?3?4?5?6?7?8?9?:?;?<?=?>???@?A?B?C?D?E?F?G?H?I?J?K?L?M?N?O?P?Q?R?S?T?U?V?W?X?Y?Z?[?\?]?^?_?`?a?b?c?d?e?f?g?h?i?j?k?l?m?n?o?p?q?r?s?t?u?v?w?x?y?z?{?|?}?~?
|J}J~J
K K!K"K#K$K%K&K'K(K)K*K+K,K-K.K/K0K1K2K3K4K5K6K7K8K9K:K;K<K=K>K?K@KAKBKCKDKEKFKGKHKIKJKKKLKMKNKOKPKQKRKSKTKUKVKWKXKYKZK[K\K]K^K_K`KaKbKcKdKeKfKgKhKiKjKkKlKmKnKoKpKqKrKsKtKuKvKwKxK
P&Q&R&S&T&U&V&W&X&Y&Z&[&\&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x&y&z&{&|&}&~&
' '!'"'#'$'%'&'''(')'*'+','-'.'/'0'1'2'3'4'5'6'7'8'9':';'<'='>'?'@'A'B'C'D'E'F'G'H'I'J'K'L'
? ?!?"?#?$?%?&?'?(?)?*?+?,?-?.?/?0?1?2?3?4?5?6?7?8?9?:?;?<?=?>???@?A?B?C?D?E?F?G?H?I?J?K?L?M?N?O?P?Q?R?S?T?U?V?W?X?Y?Z?[?\?]?^?_?`?a?b?c?d?e?f?g?h?i?j?k?l?m?n?o?p?q?r?s?t?u?v?w?x?y?z?{?|?}?~?
A#@ A$@!A%@"A&@#A'@$A(@%A)@&A*@'A+@(A,@)A-@*A.@+A/@,A0@-A1@.A2@/A3@0A4@1A5@2A6@3A7@4A8@5A9@6A:@7A;@8A<@9A=@:A>@;A?@<A@@=AA@>AB@?AC@@AD@AAE@BAF@CAG@DAH@EAI@FAJ@GAK@HAL@IAM@JAN@KAO@LAP@MAQ@NAR@OAS@PAT@QAU@RAV@SAW@TAX@UAY@VAZ@WA[@XA\@YA]@ZA^@[A_@\A`@]Aa@^Ab@_Ac@`Ad@aAe@bAf@cAg@dAh@eAi@fAj@gAk@hAl@iAm@jAn@kAo@lAp@mAq@nAr@oAs@pAt@qAu@rAv@sAw@tAx@uAy@vAz@wA{@xA|@yA}@zA~@{A
A A!A"A#A$A%A&A'A(A)A*A+A,A-A.A/A0A1A2A3A4A5A6A7A8A9A:A;A<A=A>A?A@AAABACADAEAFAGAHAIAJAKALAMANAOAPAQARASATAUAVAWAXAYAZA[A\A]A^A_A`AaAbAcAdAeAfAgAhAiAjAkAlAmAnAoApAqArAsAtAuAvAwAxAyAzA{A|A}A~A
A#@ A$@!A%@"A&@#A'@$A(@%A)@&A*@'A+@(A,@)A-@*A.@+A/@,A0@-A1@.A2@/A3@0A4@1A5@2A6@3A7@4A8@5A9@6A:@7A;@8A<@9A=@:A>@;A?@<A@@=AA@>AB@?AC@@AD@AAE@BAF@CAG@DAH@EAI@FAJ@GAK@HAL@IAM@JAN@KAO@LAP@MAQ@NAR@OAS@PAT@QAU@RAV@SAW@TAX@UAY@VAZ@WA[@XA\@YA]@ZA^@[A_@\A`@]Aa@^Ab@_Ac@`Ad@aAe@bAf@cAg@dAh@eAi@fAj@gAk@hAl@iAm@jAn@kAo@lAp@mAq@nAr@oAs@pAt@qAu@rAv@sAw@tAx@uAy@vAz@wA{@xA|@yA}@zA~@{A
@ @!@"@#@$@%@&@'@(@)@*@+@,@-@.@/@0@1@2@3@4@5@6@7@8@9@:@;@<@=@>@?@@@A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@[@\@]@^@_@`@a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@{@|@}@~@
A A!A"A#A$A%A&A'A(A)A*A+A,A-A.A/A0A1A2A3A4A5A6A7A8A9A:A;A<A=A>A?A@AAABACADAEAFAGAHAIAJAKALAMANAOAPAQARASATAUAVAWAXAYAZA[A\A]A^A_A`AaAbAcAdAeAfAgAhAiAjAkAlAmAnAoApAqArAsAtAuAvAwAxAyAzA{A|A}A~A
@ @!@"@#@$@%@&@'@(@)@*@+@,@-@.@/@0@1@2@3@4@5@6@7@8@9@:@;@<@=@>@?@@@A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@[@\@]@^@_@`@a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@{@|@}@~@
yK/,zK0,{K1,|K2,}K3,~K4,
-VL-WL
-jL -kL!-lL"-mL#-nL$-oL%-pL&-qL'-rL(-sL)-tLM'
yKzK{K|K}K~K
L L!L"L#L$L%L&L'L(L)L*L+L,L-L.L/L0L1L2L3L4L5L6L7L8L9L:L;L<L=L>L?L@LALBLCLDLELFLGLHLILJLKLLLMLNLOLPLQLRLSLTLULVLWLXLYLZL[L\L]L^L_L`LaLbLcLdLeLfLgLhLiLjLkLlLmLnLoLpLqLrLsLtLM'N'O'P'Q'R'S'T'U'V'W'X'Y'Z'['\']'^'_'`'a'b'c'd'e'f'g'h'i'j'k'l'm'n'o'p'q'r's't'u'v'w'x'y'z'{'|'}'~'
( (!("(#($(%(&('((()(*(+(,(-(.(/(0(1(2(3(4(5(6(7(8(9(:(;(<(=(>(?(@(A(B(C(D(E(F(G(H(
yK/,zK0,{K1,|K2,}K3,~K4,
-VL-WL
-jL -kL!-lL"-mL#-nL$-oL%-pL&-qL'-rL(-sL)-tL
/,0,1,2,3,4,5,6,7,8,9,:,;,<,=,>,?,@,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,[,\,],^,_,`,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,{,|,},~,
- -!-"-#-$-%-&-'-(-)-
M'N'O'P'Q'R'S'T'U'V'W'X'Y'Z'['\']'^'_'`'a'b'c'd'e'f'g'h'i'j'k'l'm'n'o'p'q'r's't'u'v'w'x'y'z'{'|'}'~'
( (!("(#($(%(&('((()(*(+(,(-(.(/(0(1(2(3(4(5(6(7(8(9(:(;(<(=(>(?(@(A(B(C(D(E(F(G(H(
yKzK{K|K}K~K
L L!L"L#L$L%L&L'L(L)L*L+L,L-L.L/L0L1L2L3L4L5L6L7L8L9L:L;L<L=L>L?L@LALBLCLDLELFLGLHLILJLKLLLMLNLOLPLQLRLSLTLULVLWLXLYLZL[L\L]L^L_L`LaLbLcLdLeLfLgLhLiLjLkLlLmLnLoLpLqLrLsLtL
?/,0,1,2,3,4,5,6,7,8,9,:,;,<,=,>,?,@,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,[,\,],^,_,`,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,{,|,},~,
- -!-"-#-$-%-&-'-(-)-
%.*-&.+-'.,-(.--)..-*./-+.0-,.1--.2-..3-/.4-0.5-1.6-2.7-3.8-4.9-5.:-6.;-7.<-8.=-9.>-:.?-;.@-<.A-=.B->.C-?.D-@.E-A.F-B.G-C.H-D.I-E.J-F.K-G.L-H.M-I.N-J.O-K.P-L.Q-M.R-N.S-O.T-P.U-Q.V-R.W-S.X-T.Y-U.Z-V.[-W.\-X.]-Y.^-Z._-[.`-\.a-].b-^.c-_.d-`.e-a.f-b.g-c.h-d.i-e.j-f.k-g.l-h.m-i.n-j.o-k.p-l.q-m.r-n.s-o.t-p.u-q.v-r.w-s.x-t.y-u.z-v.{-w.|-x.}-y.~-z.
%.&.'.(.).*.+.,.-.../.0.1.2.3.4.5.6.7.8.9.:.;.<.=.>.?.@.A.B.C.D.E.F.G.H.I.J.K.L.M.N.O.P.Q.R.S.T.U.V.W.X.Y.Z.[.\.].^._.`.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.{.|.}.~.
%.*-&.+-'.,-(.--)..-*./-+.0-,.1--.2-..3-/.4-0.5-1.6-2.7-3.8-4.9-5.:-6.;-7.<-8.=-9.>-:.?-;.@-<.A-=.B->.C-?.D-@.E-A.F-B.G-C.H-D.I-E.J-F.K-G.L-H.M-I.N-J.O-K.P-L.Q-M.R-N.S-O.T-P.U-Q.V-R.W-S.X-T.Y-U.Z-V.[-W.\-X.]-Y.^-Z._-[.`-\.a-].b-^.c-_.d-`.e-a.f-b.g-c.h-d.i-e.j-f.k-g.l-h.m-i.n-j.o-k.p-l.q-m.r-n.s-o.t-p.u-q.v-r.w-s.x-t.y-u.z-v.{-w.|-x.}-y.~-z.
*-+-,---.-/-0-1-2-3-4-5-6-7-8-9-:-;-<-=->-?-@-A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-W-X-Y-Z-[-\-]-^-_-`-a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z-{-|-}-~-
. .!.".#.$.
%.&.'.(.).*.+.,.-.../.0.1.2.3.4.5.6.7.8.9.:.;.<.=.>.?.@.A.B.C.D.E.F.G.H.I.J.K.L.M.N.O.P.Q.R.S.T.U.V.W.X.Y.Z.[.\.].^._.`.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.{.|.}.~.
*-+-,---.-/-0-1-2-3-4-5-6-7-8-9-:-;-<-=->-?-@-A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-W-X-Y-Z-[-\-]-^-_-`-a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z-{-|-}-~-
. .!.".#.$.
uL /vL!/wL"/xL#/yL$/zL%/{L&/|L'/}L(/~L)/
0aM0bM
0oMI(
uLvLwLxLyLzL{L|L}L~L
M M!M"M#M$M%M&M'M(M)M*M+M,M-M.M/M0M1M2M3M4M5M6M7M8M9M:M;M<M=M>M?M@MAMBMCMDMEMFMGMHMIMJMKMLMMMNMOMPMQMRMSMTMUMVMWMXMYMZM[M\M]M^M_M`MaMbMcMdMeMfMgMhMiMjMkMlMmMnMoMI(J(K(L(M(N(O(P(Q(R(S(T(U(V(W(X(Y(Z([(\(](^(_(`(a(b(c(d(e(f(g(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(}(~(
) )!)")#)$)%)&)')()))*)+),)-).)/)0)1)2)3)4)5)6)7)8)9):);)<)=)>)?)@)A)B)C)
uL /vL!/wL"/xL#/yL$/zL%/{L&/|L'/}L(/~L)/
0aM0bM
 /!/"/#/$/%/&/'/(/)/*/+/,/-/.///0/1/2/3/4/5/6/7/8/9/:/;/</=/>/?/@/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/[/\/]/^/_/`/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/{/|/}/~/
uLvLwLxLyLzL{L|L}L~L
M M!M"M#M$M%M&M'M(M)M*M+M,M-M.M/M0M1M2M3M4M5M6M7M8M9M:M;M<M=M>M?M@MAMBMCMDMEMFMGMHMIMJMKMLMMMNMOMPMQMRMSMTMUMVMWMXMYMZM[M\M]M^M_M`MaMbMcMdMeMfMgMhMiMjMkMlMmMnMoM
I(J(K(L(M(N(O(P(Q(R(S(T(U(V(W(X(Y(Z([(\(](^(_(`(a(b(c(d(e(f(g(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(}(~(
) )!)")#)$)%)&)')()))*)+),)-).)/)0)1)2)3)4)5)6)7)8)9):);)<)=)>)?)@)A)B)C)
? /!/"/#/$/%/&/'/(/)/*/+/,/-/.///0/1/2/3/4/5/6/7/8/9/:/;/</=/>/?/@/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/[/\/]/^/_/`/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/{/|/}/~/
1%0 1&0!1'0"1(0#1)0$1*0%1+0&1,0'1-0(1.0)1/0*100+110,120-130.140/150016011702180319041:051;061<071=081>091?0:1@0;1A0<1B0=1C0>1D0?1E0@1F0A1G0B1H0C1I0D1J0E1K0F1L0G1M0H1N0I1O0J1P0K1Q0L1R0M1S0N1T0O1U0P1V0Q1W0R1X0S1Y0T1Z0U1[0V1\0W1]0X1^0Y1_0Z1`0[1a0\1b0]1c0^1d0_1e0`1f0a1g0b1h0c1i0d1j0e1k0f1l0g1m0h1n0i1o0j1p0k1q0l1r0m1s0n1t0o1u0p1v0q1w0r1x0s1y0t1z0u1{0v1|0w1}0x1~0y1
1 1!1"1#1$1%1&1'1(1)1*1+1,1-1.1/101112131415161718191:1;1<1=1>1?1@1A1B1C1D1E1F1G1H1I1J1K1L1M1N1O1P1Q1R1S1T1U1V1W1X1Y1Z1[1\1]1^1_1`1a1b1c1d1e1f1g1h1i1j1k1l1m1n1o1p1q1r1s1t1u1v1w1x1y1z1{1|1}1~1
1%0 1&0!1'0"1(0#1)0$1*0%1+0&1,0'1-0(1.0)1/0*100+110,120-130.140/150016011702180319041:051;061<071=081>091?0:1@0;1A0<1B0=1C0>1D0?1E0@1F0A1G0B1H0C1I0D1J0E1K0F1L0G1M0H1N0I1O0J1P0K1Q0L1R0M1S0N1T0O1U0P1V0Q1W0R1X0S1Y0T1Z0U1[0V1\0W1]0X1^0Y1_0Z1`0[1a0\1b0]1c0^1d0_1e0`1f0a1g0b1h0c1i0d1j0e1k0f1l0g1m0h1n0i1o0j1p0k1q0l1r0m1s0n1t0o1u0p1v0q1w0r1x0s1y0t1z0u1{0v1|0w1}0x1~0y1
0 0!0"0#0$0%0&0'0(0)0*0+0,0-0.0/000102030405060708090:0;0<0=0>0?0@0A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0[0\0]0^0_0`0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0{0|0}0~0
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
1 1!1"1#1$1%1&1'1(1)1*1+1,1-1.1/101112131415161718191:1;1<1=1>1?1@1A1B1C1D1E1F1G1H1I1J1K1L1M1N1O1P1Q1R1S1T1U1V1W1X1Y1Z1[1\1]1^1_1`1a1b1c1d1e1f1g1h1i1j1k1l1m1n1o1p1q1r1s1t1u1v1w1x1y1z1{1|1}1~1
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
0 0!0"0#0$0%0&0'0(0)0*0+0,0-0.0/000102030405060708090:0;0<0=0>0?0@0A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0[0\0]0^0_0`0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0{0|0}0~0
3iND)
pMqMrMsMtMuMvMwMxMyMzM{M|M}M~M
N N!N"N#N$N%N&N'N(N)N*N+N,N-N.N/N0N1N2N3N4N5N6N7N8N9N:N;N<N=N>N?N@NANBNCNDNENFNGNHNINJNKNLNMNNNONPNQNRNSNTNUNVNWNXNYNZN[N\N]N^N_N`NaNbNcNdNeNfNgNhNiND)E)F)G)H)I)J)K)L)M)N)O)P)Q)R)S)T)U)V)W)X)Y)Z)[)\)])^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)v)w)x)y)z){)|)})~)
* *!*"*#*$*%*&*'*(*)***+*,*-*.*/*0*1*2*3*4*5*6*7*8*9*:*;*<*=*
2 2!2"2#2$2%2&2'2(2)2*2+2,2-2.2/202122232425262728292:2;2<2=2>2?2@2A2B2C2D2E2F2G2H2I2J2K2L2M2N2O2P2Q2R2S2T2U2V2W2X2Y2Z2[2\2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2q2r2s2t2u2v2w2x2y2z2{2|2}2~2
D)E)F)G)H)I)J)K)L)M)N)O)P)Q)R)S)T)U)V)W)X)Y)Z)[)\)])^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)v)w)x)y)z){)|)})~)
* *!*"*#*$*%*&*'*(*)***+*,*-*.*/*0*1*2*3*4*5*6*7*8*9*:*;*<*=*
?pMqMrMsMtMuMvMwMxMyMzM{M|M}M~M
N N!N"N#N$N%N&N'N(N)N*N+N,N-N.N/N0N1N2N3N4N5N6N7N8N9N:N;N<N=N>N?N@NANBNCNDNENFNGNHNINJNKNLNMNNNONPNQNRNSNTNUNVNWNXNYNZN[N\N]N^N_N`NaNbNcNdNeNfNgNhNiN
2 2!2"2#2$2%2&2'2(2)2*2+2,2-2.2/202122232425262728292:2;2<2=2>2?2@2A2B2C2D2E2F2G2H2I2J2K2L2M2N2O2P2Q2R2S2T2U2V2W2X2Y2Z2[2\2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2q2r2s2t2u2v2w2x2y2z2{2|2}2~2
4&3 4'3!4(3"4)3#4*3$4+3%4,3&4-3'4.3(4/3)403*413+423,433-443.453/46304731483249334:344;354<364=374>384?394@3:4A3;4B3<4C3=4D3>4E3?4F3@4G3A4H3B4I3C4J3D4K3E4L3F4M3G4N3H4O3I4P3J4Q3K4R3L4S3M4T3N4U3O4V3P4W3Q4X3R4Y3S4Z3T4[3U4\3V4]3W4^3X4_3Y4`3Z4a3[4b3\4c3]4d3^4e3_4f3`4g3a4h3b4i3c4j3d4k3e4l3f4m3g4n3h4o3i4p3j4q3k4r3l4s3m4t3n4u3o4v3p4w3q4x3r4y3s4z3t4{3u4|3v4}3w4~3x4
4 4!4"4#4$4%4&4'4(4)4*4+4,4-4.4/404142434445464748494:4;4<4=4>4?4@4A4B4C4D4E4F4G4H4I4J4K4L4M4N4O4P4Q4R4S4T4U4V4W4X4Y4Z4[4\4]4^4_4`4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x4y4z4{4|4}4~4
4&3 4'3!4(3"4)3#4*3$4+3%4,3&4-3'4.3(4/3)403*413+423,433-443.453/46304731483249334:344;354<364=374>384?394@3:4A3;4B3<4C3=4D3>4E3?4F3@4G3A4H3B4I3C4J3D4K3E4L3F4M3G4N3H4O3I4P3J4Q3K4R3L4S3M4T3N4U3O4V3P4W3Q4X3R4Y3S4Z3T4[3U4\3V4]3W4^3X4_3Y4`3Z4a3[4b3\4c3]4d3^4e3_4f3`4g3a4h3b4i3c4j3d4k3e4l3f4m3g4n3h4o3i4p3j4q3k4r3l4s3m4t3n4u3o4v3p4w3q4x3r4y3s4z3t4{3u4|3v4}3w4~3x4
3 3!3"3#3$3%3&3'3(3)3*3+3,3-3.3/303132333435363738393:3;3<3=3>3?3@3A3B3C3D3E3F3G3H3I3J3K3L3M3N3O3P3Q3R3S3T3U3V3W3X3Y3Z3[3\3]3^3_3`3a3b3c3d3e3f3g3h3i3j3k3l3m3n3o3p3q3r3s3t3u3v3w3x3y3z3{3|3}3~3
4 4!4"4#4$4%4&4'4(4)4*4+4,4-4.4/404142434445464748494:4;4<4=4>4?4@4A4B4C4D4E4F4G4H4I4J4K4L4M4N4O4P4Q4R4S4T4U4V4W4X4Y4Z4[4\4]4^4_4`4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x4y4z4{4|4}4~4
3 3!3"3#3$3%3&3'3(3)3*3+3,3-3.3/303132333435363738393:3;3<3=3>3?3@3A3B3C3D3E3F3G3H3I3J3K3L3M3N3O3P3Q3R3S3T3U3V3W3X3Y3Z3[3\3]3^3_3`3a3b3c3d3e3f3g3h3i3j3k3l3m3n3o3p3q3r3s3t3u3v3w3x3y3z3{3|3}3~3
5}N5~N
5bO>*
jNkNlNmNnNoNpNqNrNsNtNuNvNwNxNyNzN{N|N}N~N
O O!O"O#O$O%O&O'O(O)O*O+O,O-O.O/O0O1O2O3O4O5O6O7O8O9O:O;O<O=O>O?O@OAOBOCODOEOFOGOHOIOJOKOLOMONOOOPOQOROSOTOUOVOWOXOYOZO[O\O]O^O_O`OaObO>*?*@*A*B*C*D*E*F*G*H*I*J*K*L*M*N*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*\*]*^*_*`*a*b*c*d*e*f*g*h*i*j*k*l*m*n*o*p*q*r*s*t*u*v*w*x*y*z*{*|*}*~*
+ +!+"+#+$+%+&+'+(+)+*+++,+-+.+/+0+1+2+3+4+5+6+
5}N5~N
5 5!5"5#5$5%5&5'5(5)5*5+5,5-5.5/505152535455565758595:5;5<5=5>5?5@5A5B5C5D5E5F5G5H5I5J5K5L5M5N5O5P5Q5R5S5T5U5V5W5X5Y5Z5[5\5]5^5_5`5a5b5c5d5e5f5g5h5i5j5k5l5m5n5o5p5q5r5s5t5u5v5w5x5y5z5{5|5}5~5
>*?*@*A*B*C*D*E*F*G*H*I*J*K*L*M*N*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*\*]*^*_*`*a*b*c*d*e*f*g*h*i*j*k*l*m*n*o*p*q*r*s*t*u*v*w*x*y*z*{*|*}*~*
+ +!+"+#+$+%+&+'+(+)+*+++,+-+.+/+0+1+2+3+4+5+6+
jNkNlNmNnNoNpNqNrNsNtNuNvNwNxNyNzN{N|N}N~N
O O!O"O#O$O%O&O'O(O)O*O+O,O-O.O/O0O1O2O3O4O5O6O7O8O9O:O;O<O=O>O?O@OAOBOCODOEOFOGOHOIOJOKOLOMONOOOPOQOROSOTOUOVOWOXOYOZO[O\O]O^O_O`OaObO
5 5!5"5#5$5%5&5'5(5)5*5+5,5-5.5/505152535455565758595:5;5<5=5>5?5@5A5B5C5D5E5F5G5H5I5J5K5L5M5N5O5P5Q5R5S5T5U5V5W5X5Y5Z5[5\5]5^5_5`5a5b5c5d5e5f5g5h5i5j5k5l5m5n5o5p5q5r5s5t5u5v5w5x5y5z5{5|5}5~5
cOdOeOfOgOhOiOjOkOlOmOnOoOpOqOrOsOtOuOvOwOxOyOzO{O|O}O~O
P P!P"P#P$P%P&P'P(P)P*P+P,P-P.P/P0P1P2P3P4P5P6P7P8P9P:P;P<P=P>P?P@PAPBPCPDPEPFPGPHPIPJPKPLPMPNPOPPPQPRPSPTPUPVPWPXPYPZP7+8+9+:+;+<+=+>+?+@+A+B+C+D+E+F+G+H+I+J+K+L+M+N+O+P+Q+R+S+T+U+V+W+X+Y+Z+[+\+]+^+_+`+a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t+u+v+w+x+y+z+{+|+}+~+
, ,!,",#,$,%,&,',(,),*,+,,,-,.,
7+8+9+:+;+<+=+>+?+@+A+B+C+D+E+F+G+H+I+J+K+L+M+N+O+P+Q+R+S+T+U+V+W+X+Y+Z+[+\+]+^+_+`+a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t+u+v+w+x+y+z+{+|+}+~+
, ,!,",#,$,%,&,',(,),*,+,,,-,.,
cOdOeOfOgOhOiOjOkOlOmOnOoOpOqOrOsOtOuOvOwOxOyOzO{O|O}O~O
P P!P"P#P$P%P&P'P(P)P*P+P,P-P.P/P0P1P2P3P4P5P6P7P8P9P:P;P<P=P>P?P@PAPBPCPDPEPFPGPHPIPJPKPLPMPNPOPPPQPRPSPTPUPVPWPXPYPZP
B B!B"B#B$B%B&B'B(B)B*B+B,B-B.B/B0B1B2B3B4B5B6B7B8B9B:B;B<B=B>B?B@BABBBCBDBEBFBGBHBIBJBKBLBMBNBOBPBQBRBSBTBUBVBWBXBYBZB[B\B]B^B_B`BaBbBcBdBeBfBgBhBiBjBkBlBmBnBoBpBqBrBsBtBuBvBwBxByBzB{B|B}B~B
B B!B"B#B$B%B&B'B(B)B*B+B,B-B.B/B0B1B2B3B4B5B6B7B8B9B:B;B<B=B>B?B@BABBBCBDBEBFBGBHBIBJBKBLBMBNBOBPBQBRBSBTBUBVBWBXBYBZB[B\B]B^B_B`BaBbBcBdBeBfBgBhBiBjBkBlBmBnBoBpBqBrBsBtBuBvBwBxByBzB{B|B}B~B
C C!C"C#C$C%C&C'C(C)C*C+C,C-C.C/C0C1C2C3C4C5C6C7C8C9C:C;C<C=C>C?C@CACBCCCDCECFCGCHCICJCKCLCMCNCOCPCQCRCSCTCUCVCWCXCYCZC[C\C]C^C_C`CaCbCcCdCeCfCgChCiCjCkClCmCnCoCpCqCrCsCtCuCvCwCxCyCzC{C|C}C~C
C C!C"C#C$C%C&C'C(C)C*C+C,C-C.C/C0C1C2C3C4C5C6C7C8C9C:C;C<C=C>C?C@CACBCCCDCECFCGCHCICJCKCLCMCNCOCPCQCRCSCTCUCVCWCXCYCZC[C\C]C^C_C`CaCbCcCdCeCfCgChCiCjCkClCmCnCoCpCqCrCsCtCuCvCwCxCyCzC{C|C}C~C
D D!D"D#D$D%D&D'D(D)D*D+D,D-D.D/D0D1D2D3D4D5D6D7D8D9D:D;D<D=D>D?D@DADBDCDDDEDFDGDHDIDJDKDLDMDNDODPDQDRDSDTDUDVDWDXDYDZD[D\D]D^D_D`DaDbDcDdDeDfDgDhDiDjDkDlDmDnDoDpDqDrDsDtDuDvDwDxDyDzD{D|D}D~D
   ! " # $ % & ' ( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ] ^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | } ~ 
   ! " # $ % & ' ( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ] ^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | } ~ 
D D!D"D#D$D%D&D'D(D)D*D+D,D-D.D/D0D1D2D3D4D5D6D7D8D9D:D;D<D=D>D?D@DADBDCDDDEDFDGDHDIDJDKDLDMDNDODPDQDRDSDTDUDVDWDXDYDZD[D\D]D^D_D`DaDbDcDdDeDfDgDhDiDjDkDlDmDnDoDpDqDrDsDtDuDvDwDxDyDzD{D|D}D~D
E E!E"E#E$E%E&E'E(E)E*E+E,E-E.E/E0E1E2E3E4E5E6E7E8E9E:E;E<E=E>E?E@EAEBECEDEEEFEGEHEIEJEKELEMENEOEPEQERESETEUEVEWEXEYEZE[E\E]E^E_E`EaEbEcEdEeEfEgEhEiEjEkElEmEnEoEpEqErEsEtEuEvEwExEyEzE{E|E}E~E
! !!!"!#!$!%!&!'!(!)!*!+!,!-!.!/!0!1!2!3!4!5!6!7!8!9!:!;!<!=!>!?!@!A!B!C!D!E!F!G!H!I!J!K!L!M!N!O!P!Q!R!S!T!U!V!W!X!Y!Z![!\!]!^!_!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!o!p!q!r!s!t!u!v!w!x!y!z!{!|!
! !!!"!#!$!%!&!'!(!)!*!+!,!-!.!/!0!1!2!3!4!5!6!7!8!9!:!;!<!=!>!?!@!A!B!C!D!E!F!G!H!I!J!K!L!M!N!O!P!Q!R!S!T!U!V!W!X!Y!Z![!\!]!^!_!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!o!p!q!r!s!t!u!v!w!x!y!z!{!|!
E E!E"E#E$E%E&E'E(E)E*E+E,E-E.E/E0E1E2E3E4E5E6E7E8E9E:E;E<E=E>E?E@EAEBECEDEEEFEGEHEIEJEKELEMENEOEPEQERESETEUEVEWEXEYEZE[E\E]E^E_E`EaEbEcEdEeEfEgEhEiEjEkElEmEnEoEpEqErEsEtEuEvEwExEyEzE{E|E}E~E
F F!F"F#F$F%F&F'F(F)F*F+F,F-F.F/F0F1F2F3F4F5F6F7F8F9F:F;F<F=F>F?F@FAFBFCFDFEFFFGFHFIFJFKFLFMFNFOFPFQFRFSFTFUFVFWFXFYFZF[F\F]F^F_F`FaFbFcFdFeFfFgFhFiFjFkFlFmFnFoFpFqFrFsFtFuFvFwFxFyFzF{F|F}F~F
F}!~!
" "!"""#"$"%"&"'"(")"*"+","-"."/"0"1"2"3"4"5"6"7"8"9":";"<"=">"?"@"A"B"C"D"E"F"G"H"I"J"K"L"M"N"O"P"Q"R"S"T"U"V"W"X"Y"Z"["\"]"^"_"`"a"b"c"d"e"f"g"h"i"j"k"l"m"n"o"
}!~!
" "!"""#"$"%"&"'"(")"*"+","-"."/"0"1"2"3"4"5"6"7"8"9":";"<"=">"?"@"A"B"C"D"E"F"G"H"I"J"K"L"M"N"O"P"Q"R"S"T"U"V"W"X"Y"Z"["\"]"^"_"`"a"b"c"d"e"f"g"h"i"j"k"l"m"n"o"
F F!F"F#F$F%F&F'F(F)F*F+F,F-F.F/F0F1F2F3F4F5F6F7F8F9F:F;F<F=F>F?F@FAFBFCFDFEFFFGFHFIFJFKFLFMFNFOFPFQFRFSFTFUFVFWFXFYFZF[F\F]F^F_F`FaFbFcFdFeFfFgFhFiFjFkFlFmFnFoFpFqFrFsFtFuFvFwFxFyFzF{F|F}F~F
G G!G"G#G$G%G&G'G(G)G*G+G,G-G.G/G0G1G2G3G4G5G6G7G8G9G:G;G<G=G>G?G@GAGBGCGDGEGFGGGHGIGJGKGLGMGNGOGPGQGRGSGTGUGVGWGXGYGZG[G\G]G^G_G`GaGbGcGdGeGfGgGhGiGjGkGlGmGnGoGpGqGrGsGtGuGvGwGxGyGzG{G|G}G~G
Gp"q"r"s"t"u"v"w"x"y"z"{"|"}"~"
# #!#"###$#%#&#'#(#)#*#+#,#-#.#/#0#1#2#3#4#5#6#7#8#9#:#;#<#=#>#?#@#A#B#C#D#E#F#G#H#I#J#K#L#M#N#O#P#Q#R#S#T#U#V#W#X#Y#Z#[#\#]#^#_#`#a#
?p"q"r"s"t"u"v"w"x"y"z"{"|"}"~"
# #!#"###$#%#&#'#(#)#*#+#,#-#.#/#0#1#2#3#4#5#6#7#8#9#:#;#<#=#>#?#@#A#B#C#D#E#F#G#H#I#J#K#L#M#N#O#P#Q#R#S#T#U#V#W#X#Y#Z#[#\#]#^#_#`#a#
G G!G"G#G$G%G&G'G(G)G*G+G,G-G.G/G0G1G2G3G4G5G6G7G8G9G:G;G<G=G>G?G@GAGBGCGDGEGFGGGHGIGJGKGLGMGNGOGPGQGRGSGTGUGVGWGXGYGZG[G\G]G^G_G`GaGbGcGdGeGfGgGhGiGjGkGlGmGnGoGpGqGrGsGtGuGvGwGxGyGzG{G|G}G~G
H H!H"H#H$H%H&H'H(H)H*H+H,H-H.H/H0H1H2H3H4H5H6H7H8H9H:H;H<H=H>H?H@HAHBHCHDHEHFHGHHHIHJHKHLHMHNHOHPHQHRHSHTHUHVHWHXHYHZH[H\H]H^H_H`HaHbHcHdHeHfHgHhHiHjHkHlHmHnHoHpHqHrHsHtHuHvHwHxHyHzH{H|H}H~Hb#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#s#t#u#v#w#x#y#z#{#|#}#~#
$ $!$"$#$$$%$&$'$($)$*$+$,$-$.$/$0$1$2$3$4$5$6$7$8$9$:$;$<$=$>$?$@$A$B$C$D$E$F$G$H$I$J$K$L$M$N$O$P$Q$R$
b#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#s#t#u#v#w#x#y#z#{#|#}#~#
$ $!$"$#$$$%$&$'$($)$*$+$,$-$.$/$0$1$2$3$4$5$6$7$8$9$:$;$<$=$>$?$@$A$B$C$D$E$F$G$H$I$J$K$L$M$N$O$P$Q$R$
H H!H"H#H$H%H&H'H(H)H*H+H,H-H.H/H0H1H2H3H4H5H6H7H8H9H:H;H<H=H>H?H@HAHBHCHDHEHFHGHHHIHJHKHLHMHNHOHPHQHRHSHTHUHVHWHXHYHZH[H\H]H^H_H`HaHbHcHdHeHfHgHhHiHjHkHlHmHnHoHpHqHrHsHtHuHvHwHxHyHzH{H|H}H~H
10000
11000
12000
13000
4000
5000
6000
7000
8000
9000
10100
11100
12100
13100
4100
5100
6100
7100
8100
9100
10200
11200
12200
13200
4200
5200
6200
7200
8200
9200
10300
11300
12300
13300
4300
5300
6300
7300
8300
9300
10400
11400
12400
3400
4400
5400
6400
7400
8400
9400
10500
11500
12500
3500
4500
5500
6500
7500
8500
9500
10600
11600
12600
3600
4600
5600
6600
7600
8600
9600
10700
11700
12700
3700
4700
5700
6700
7700
8700
9700
10800
11800
12800
3800
4800
5800
6800
7800
8800
9800
10900
11900
12900
3900
4900
5900
6900
7900
8900
9900
10010
11010
12010
13010
4010
5010
6010
7010
8010
9010
10110
11110
12110
13110
4110
5110
6110
7110
8110
9110
10210
11210
12210
13210
4210
5210
6210
7210
8210
9210
10310
11310
12310
13310
4310
5310
6310
7310
8310
9310
10410
11410
12410
3410
4410
5410
6410
7410
8410
9410
10510
11510
12510
3510
4510
5510
6510
7510
8510
9510
10610
11610
12610
3610
4610
5610
6610
7610
8610
9610
10710
11710
12710
3710
4710
5710
6710
7710
8710
9710
10810
11810
12810
3810
4810
5810
6810
7810
8810
9810
10910
11910
12910
3910
4910
5910
6910
7910
8910
9910
10020
11020
12020
13020
4020
5020
6020
7020
8020
9020
10120
11120
12120
13120
4120
5120
6120
7120
8120
9120
10220
11220
12220
13220
4220
5220
6220
7220
8220
9220
10320
11320
12320
13320
4320
5320
6320
7320
8320
9320
10420
11420
12420
3420
4420
5420
6420
7420
8420
9420
10520
11520
12520
3520
4520
5520
6520
7520
8520
9520
10620
11620
12620
3620
4620
5620
6620
7620
8620
9620
10720
11720
12720
3720
4720
5720
6720
7720
8720
9720
10820
11820
12820
3820
4820
5820
6820
7820
8820
9820
10920
11920
12920
3920
4920
5920
6920
7920
8920
9920
10030
11030
12030
13030
4030
5030
6030
7030
8030
9030
10130
11130
12130
13130
4130
5130
6130
7130
8130
9130
10230
11230
12230
13230
4230
5230
6230
7230
8230
9230
10330
11330
12330
13330
4330
5330
6330
7330
8330
9330
10430
11430
12430
3430
4430
5430
6430
7430
8430
9430
10530
11530
12530
3530
4530
5530
6530
7530
8530
9530
10630
11630
12630
3630
4630
5630
6630
7630
8630
9630
10730
11730
12730
3730
4730
5730
6730
7730
8730
9730
10830
11830
12830
3830
4830
5830
6830
7830
8830
9830
10930
11930
12930
3930
4930
5930
6930
7930
8930
9930
10040
11040
12040
13040
4040
5040
6040
7040
8040
9040
10140
11140
12140
13140
4140
5140
6140
7140
8140
9140
10240
11240
12240
13240
4240
5240
6240
7240
8240
9240
10340
11340
12340
13340
4340
5340
6340
7340
8340
9340
10440
11440
12440
3440
4440
5440
6440
7440
8440
9440
10540
11540
12540
3540
4540
5540
6540
7540
8540
9540
10640
11640
12640
3640
4640
5640
6640
7640
8640
9640
10740
11740
12740
3740
4740
5740
6740
7740
8740
9740
10840
11840
12840
3840
4840
5840
6840
7840
8840
9840
10940
11940
12940
3940
4940
5940
6940
7940
8940
9940
10050
11050
12050
13050
4050
5050
6050
7050
8050
9050
10150
11150
12150
13150
4150
5150
6150
7150
8150
9150
10250
11250
12250
13250
4250
5250
6250
7250
8250
9250
10350
11350
12350
13350
4350
5350
6350
7350
8350
9350
10450
11450
12450
3450
4450
5450
6450
7450
8450
9450
10550
11550
12550
3550
4550
5550
6550
7550
8550
9550
10650
11650
12650
3650
4650
5650
6650
7650
8650
9650
10750
11750
12750
3750
4750
5750
6750
7750
8750
9750
10850
11850
12850
3850
4850
5850
6850
7850
8850
9850
10950
11950
12950
3950
4950
5950
6950
7950
8950
9950
10060
11060
12060
13060
4060
5060
6060
7060
8060
9060
10160
11160
12160
13160
4160
5160
6160
7160
8160
9160
10260
11260
12260
13260
4260
5260
6260
7260
8260
9260
10360
11360
12360
13360
4360
5360
6360
7360
8360
9360
10460
11460
12460
3460
4460
5460
6460
7460
8460
9460
10560
11560
12560
3560
4560
5560
6560
7560
8560
9560
10660
11660
12660
3660
4660
5660
6660
7660
8660
9660
10760
11760
12760
3760
4760
5760
6760
7760
8760
9760
10860
11860
12860
3860
4860
5860
6860
7860
8860
9860
10960
11960
12960
3960
4960
5960
6960
7960
8960
9960
10070
11070
12070
13070
4070
5070
6070
7070
8070
9070
10170
11170
12170
13170
4170
5170
6170
7170
8170
9170
10270
11270
12270
13270
4270
5270
6270
7270
8270
9270
10370
11370
12370
13370
4370
5370
6370
7370
8370
9370
10470
11470
12470
3470
4470
5470
6470
7470
8470
9470
10570
11570
12570
3570
4570
5570
6570
7570
8570
9570
10670
11670
12670
3670
4670
5670
6670
7670
8670
9670
10770
11770
12770
3770
4770
5770
6770
7770
8770
9770
10870
11870
12870
3870
4870
5870
6870
7870
8870
9870
10970
11970
12970
3970
4970
5970
6970
7970
8970
9970
10080
11080
12080
13080
4080
5080
6080
7080
8080
9080
10180
11180
12180
13180
4180
5180
6180
7180
8180
9180
10280
11280
12280
13280
4280
5280
6280
7280
8280
9280
10380
11380
12380
13380
4380
5380
6380
7380
8380
9380
10480
11480
12480
3480
4480
5480
6480
7480
8480
9480
10580
11580
12580
3580
4580
5580
6580
7580
8580
9580
10680
11680
12680
3680
4680
5680
6680
7680
8680
9680
10780
11780
12780
3780
4780
5780
6780
7780
8780
9780
10880
11880
12880
3880
4880
5880
6880
7880
8880
9880
10980
11980
12980
3980
4980
5980
6980
7980
8980
9980
10090
11090
12090
13090
4090
5090
6090
7090
8090
9090
10190
11190
12190
13190
4190
5190
6190
7190
8190
9190
10290
11290
12290
13290
4290
5290
6290
7290
8290
9290
10390
11390
12390
3390
4390
5390
6390
7390
8390
9390
10490
11490
12490
3490
4490
5490
6490
7490
8490
9490
10590
11590
12590
3590
4590
5590
6590
7590
8590
9590
10690
11690
12690
3690
4690
5690
6690
7690
8690
9690
10790
11790
12790
3790
4790
5790
6790
7790
8790
9790
10890
11890
12890
3890
4890
5890
6890
7890
8890
9890
10990
11990
12990
3990
4990
5990
6990
7990
8990
9990
10001
11001
12001
13001
4001
5001
6001
7001
8001
9001
10101
11101
12101
13101
4101
5101
6101
7101
8101
9101
10201
11201
12201
13201
4201
5201
6201
7201
8201
9201
10301
11301
12301
13301
4301
5301
6301
7301
8301
9301
10401
11401
12401
3401
4401
5401
6401
7401
8401
9401
10501
11501
12501
3501
4501
5501
6501
7501
8501
9501
10601
11601
12601
3601
4601
5601
6601
7601
8601
9601
10701
11701
12701
3701
4701
5701
6701
7701
8701
9701
10801
11801
12801
3801
4801
5801
6801
7801
8801
9801
10901
11901
12901
3901
4901
5901
6901
7901
8901
9901
10011
11011
12011
13011
4011
5011
6011
7011
8011
9011
10111
11111
12111
13111
4111
5111
6111
7111
8111
9111
10211
11211
12211
13211
4211
5211
6211
7211
8211
9211
10311
11311
12311
13311
4311
5311
6311
7311
8311
9311
10411
11411
12411
3411
4411
5411
6411
7411
8411
9411
10511
11511
12511
3511
4511
5511
6511
7511
8511
9511
10611
11611
12611
3611
4611
5611
6611
7611
8611
9611
10711
11711
12711
3711
4711
5711
6711
7711
8711
9711
10811
11811
12811
3811
4811
5811
6811
7811
8811
9811
10911
11911
12911
3911
4911
5911
6911
7911
8911
9911
10021
11021
12021
13021
4021
5021
6021
7021
8021
9021
10121
11121
12121
13121
4121
5121
6121
7121
8121
9121
10221
11221
12221
13221
4221
5221
6221
7221
8221
9221
10321
11321
12321
13321
4321
5321
6321
7321
8321
9321
10421
11421
12421
3421
4421
5421
6421
7421
8421
9421
10521
11521
12521
3521
4521
5521
6521
7521
8521
9521
10621
11621
12621
3621
4621
5621
6621
7621
8621
9621
10721
11721
12721
3721
4721
5721
6721
7721
8721
9721
10821
11821
12821
3821
4821
5821
6821
7821
8821
9821
10921
11921
12921
3921
4921
5921
6921
7921
8921
9921
10031
11031
12031
13031
4031
5031
6031
7031
8031
9031
10131
11131
12131
13131
4131
5131
6131
7131
8131
9131
10231
11231
12231
13231
4231
5231
6231
7231
8231
9231
10331
11331
12331
13331
4331
5331
6331
7331
8331
9331
10431
11431
12431
3431
4431
5431
6431
7431
8431
9431
10531
11531
12531
3531
4531
5531
6531
7531
8531
9531
10631
11631
12631
3631
4631
5631
6631
7631
8631
9631
10731
11731
12731
3731
4731
5731
6731
7731
8731
9731
10831
11831
12831
3831
4831
5831
6831
7831
8831
9831
10931
11931
12931
3931
4931
5931
6931
7931
8931
9931
10041
11041
12041
13041
4041
5041
6041
7041
8041
9041
10141
11141
12141
13141
4141
5141
6141
7141
8141
9141
10241
11241
12241
13241
4241
5241
6241
7241
8241
9241
10341
11341
12341
13341
4341
5341
6341
7341
8341
9341
10441
11441
12441
3441
4441
5441
6441
7441
8441
9441
10541
11541
12541
3541
4541
5541
6541
7541
8541
9541
10641
11641
12641
3641
4641
5641
6641
7641
8641
9641
10741
11741
12741
3741
4741
5741
6741
7741
8741
9741
10841
11841
12841
3841
4841
5841
6841
7841
8841
9841
10941
11941
12941
3941
4941
5941
6941
7941
8941
9941
10051
11051
12051
13051
4051
5051
6051
7051
8051
9051
10151
11151
12151
13151
4151
5151
6151
7151
8151
9151
10251
11251
12251
13251
4251
5251
6251
7251
8251
9251
10351
11351
12351
13351
4351
5351
6351
7351
8351
9351
10451
11451
12451
3451
4451
5451
6451
7451
8451
9451
10551
11551
12551
3551
4551
5551
6551
7551
8551
9551
10651
11651
12651
3651
4651
5651
6651
7651
8651
9651
10751
11751
12751
3751
4751
5751
6751
7751
8751
9751
10851
11851
12851
3851
4851
5851
6851
7851
8851
9851
10951
11951
12951
3951
4951
5951
6951
7951
8951
9951
10061
11061
12061
13061
4061
5061
6061
7061
8061
9061
10161
11161
12161
13161
4161
5161
6161
7161
8161
9161
10261
11261
12261
13261
4261
5261
6261
7261
8261
9261
10361
11361
12361
13361
4361
5361
6361
7361
8361
9361
10461
11461
12461
3461
4461
5461
6461
7461
8461
9461
10561
11561
12561
3561
4561
5561
6561
7561
8561
9561
10661
11661
12661
3661
4661
5661
6661
7661
8661
9661
10761
11761
12761
3761
4761
5761
6761
7761
8761
9761
10861
11861
12861
3861
4861
5861
6861
7861
8861
9861
10961
11961
12961
3961
4961
5961
6961
7961
8961
9961
10071
11071
12071
13071
4071
5071
6071
7071
8071
9071
10171
11171
12171
13171
4171
5171
6171
7171
8171
9171
10271
11271
12271
13271
4271
5271
6271
7271
8271
9271
10371
11371
12371
13371
4371
5371
6371
7371
8371
9371
10471
11471
12471
3471
4471
5471
6471
7471
8471
9471
10571
11571
12571
3571
4571
5571
6571
7571
8571
9571
10671
11671
12671
3671
4671
5671
6671
7671
8671
9671
10771
11771
12771
3771
4771
5771
6771
7771
8771
9771
10871
11871
12871
3871
4871
5871
6871
7871
8871
9871
10971
11971
12971
3971
4971
5971
6971
7971
8971
9971
10081
11081
12081
13081
4081
5081
6081
7081
8081
9081
10181
11181
12181
13181
4181
5181
6181
7181
8181
9181
10281
11281
12281
13281
4281
5281
6281
7281
8281
9281
10381
11381
12381
13381
4381
5381
6381
7381
8381
9381
10481
11481
12481
3481
4481
5481
6481
7481
8481
9481
10581
11581
12581
3581
4581
5581
6581
7581
8581
9581
10681
11681
12681
3681
4681
5681
6681
7681
8681
9681
10781
11781
12781
3781
4781
5781
6781
7781
8781
9781
10881
11881
12881
3881
4881
5881
6881
7881
8881
9881
10981
11981
12981
3981
4981
5981
6981
7981
8981
9981
10091
11091
12091
13091
4091
5091
6091
7091
8091
9091
10191
11191
12191
13191
4191
5191
6191
7191
8191
9191
10291
11291
12291
13291
4291
5291
6291
7291
8291
9291
10391
11391
12391
3391
4391
5391
6391
7391
8391
9391
10491
11491
12491
3491
4491
5491
6491
7491
8491
9491
10591
11591
12591
3591
4591
5591
6591
7591
8591
9591
10691
11691
12691
3691
4691
5691
6691
7691
8691
9691
10791
11791
12791
3791
4791
5791
6791
7791
8791
9791
10891
11891
12891
3891
4891
5891
6891
7891
8891
9891
10991
11991
12991
3991
4991
5991
6991
7991
8991
9991
10002
11002
12002
13002
4002
5002
6002
7002
8002
9002
10102
11102
12102
13102
4102
5102
6102
7102
8102
9102
10202
11202
12202
13202
4202
5202
6202
7202
8202
9202
10302
11302
12302
13302
4302
5302
6302
7302
8302
9302
10402
11402
12402
3402
4402
5402
6402
7402
8402
9402
10502
11502
12502
3502
4502
5502
6502
7502
8502
9502
10602
11602
12602
3602
4602
5602
6602
7602
8602
9602
10702
11702
12702
3702
4702
5702
6702
7702
8702
9702
10802
11802
12802
3802
4802
5802
6802
7802
8802
9802
10902
11902
12902
3902
4902
5902
6902
7902
8902
9902
10012
11012
12012
13012
4012
5012
6012
7012
8012
9012
10112
11112
12112
13112
4112
5112
6112
7112
8112
9112
10212
11212
12212
13212
4212
5212
6212
7212
8212
9212
10312
11312
12312
13312
4312
5312
6312
7312
8312
9312
10412
11412
12412
3412
4412
5412
6412
7412
8412
9412
10512
11512
12512
3512
4512
5512
6512
7512
8512
9512
10612
11612
12612
3612
4612
5612
6612
7612
8612
9612
10712
11712
12712
3712
4712
5712
6712
7712
8712
9712
10812
11812
12812
3812
4812
5812
6812
7812
8812
9812
10912
11912
12912
3912
4912
5912
6912
7912
8912
9912
10022
11022
12022
13022
4022
5022
6022
7022
8022
9022
10122
11122
12122
13122
4122
5122
6122
7122
8122
9122
10222
11222
12222
13222
4222
5222
6222
7222
8222
9222
10322
11322
12322
13322
4322
5322
6322
7322
8322
9322
10422
11422
12422
3422
4422
5422
6422
7422
8422
9422
10522
11522
12522
3522
4522
5522
6522
7522
8522
9522
10622
11622
12622
3622
4622
5622
6622
7622
8622
9622
10722
11722
12722
3722
4722
5722
6722
7722
8722
9722
10822
11822
12822
3822
4822
5822
6822
7822
8822
9822
10922
11922
12922
3922
4922
5922
6922
7922
8922
9922
10032
11032
12032
13032
4032
5032
6032
7032
8032
9032
10132
11132
12132
13132
4132
5132
6132
7132
8132
9132
10232
11232
12232
13232
4232
5232
6232
7232
8232
9232
10332
11332
12332
13332
4332
5332
6332
7332
8332
9332
10432
11432
12432
3432
4432
5432
6432
7432
8432
9432
10532
11532
12532
3532
4532
5532
6532
7532
8532
9532
10632
11632
12632
3632
4632
5632
6632
7632
8632
9632
10732
11732
12732
3732
4732
5732
6732
7732
8732
9732
10832
11832
12832
3832
4832
5832
6832
7832
8832
9832
10932
11932
12932
3932
4932
5932
6932
7932
8932
9932
10042
11042
12042
13042
4042
5042
6042
7042
8042
9042
10142
11142
12142
13142
4142
5142
6142
7142
8142
9142
10242
11242
12242
13242
4242
5242
6242
7242
8242
9242
10342
11342
12342
13342
4342
5342
6342
7342
8342
9342
10442
11442
12442
3442
4442
5442
6442
7442
8442
9442
10542
11542
12542
3542
4542
5542
6542
7542
8542
9542
10642
11642
12642
3642
4642
5642
6642
7642
8642
9642
10742
11742
12742
3742
4742
5742
6742
7742
8742
9742
10842
11842
12842
3842
4842
5842
6842
7842
8842
9842
10942
11942
12942
3942
4942
5942
6942
7942
8942
9942
10052
11052
12052
13052
4052
5052
6052
7052
8052
9052
10152
11152
12152
13152
4152
5152
6152
7152
8152
9152
10252
11252
12252
13252
4252
5252
6252
7252
8252
9252
10352
11352
12352
13352
4352
5352
6352
7352
8352
9352
10452
11452
12452
3452
4452
5452
6452
7452
8452
9452
10552
11552
12552
3552
4552
5552
6552
7552
8552
9552
10652
11652
12652
3652
4652
5652
6652
7652
8652
9652
10752
11752
12752
3752
4752
5752
6752
7752
8752
9752
10852
11852
12852
3852
4852
5852
6852
7852
8852
9852
10952
11952
12952
3952
4952
5952
6952
7952
8952
9952
10062
11062
12062
13062
4062
5062
6062
7062
8062
9062
10162
11162
12162
13162
4162
5162
6162
7162
8162
9162
10262
11262
12262
13262
4262
5262
6262
7262
8262
9262
10362
11362
12362
13362
4362
5362
6362
7362
8362
9362
10462
11462
12462
3462
4462
5462
6462
7462
8462
9462
10562
11562
12562
3562
4562
5562
6562
7562
8562
9562
10662
11662
12662
3662
4662
5662
6662
7662
8662
9662
10762
11762
12762
3762
4762
5762
6762
7762
8762
9762
10862
11862
12862
3862
4862
5862
6862
7862
8862
9862
10962
11962
12962
3962
4962
5962
6962
7962
8962
9962
10072
11072
12072
13072
4072
5072
6072
7072
8072
9072
10172
11172
12172
13172
4172
5172
6172
7172
8172
9172
10272
11272
12272
13272
4272
5272
6272
7272
8272
9272
10372
11372
12372
13372
4372
5372
6372
7372
8372
9372
10472
11472
12472
3472
4472
5472
6472
7472
8472
9472
10572
11572
12572
3572
4572
5572
6572
7572
8572
9572
10672
11672
12672
3672
4672
5672
6672
7672
8672
9672
10772
11772
12772
3772
4772
5772
6772
7772
8772
9772
10872
11872
12872
3872
4872
5872
6872
7872
8872
9872
10972
11972
12972
3972
4972
5972
6972
7972
8972
9972
10082
11082
12082
13082
4082
5082
6082
7082
8082
9082
10182
11182
12182
13182
4182
5182
6182
7182
8182
9182
10282
11282
12282
13282
4282
5282
6282
7282
8282
9282
10382
11382
12382
3382
4382
5382
6382
7382
8382
9382
10482
11482
12482
3482
4482
5482
6482
7482
8482
9482
10582
11582
12582
3582
4582
5582
6582
7582
8582
9582
10682
11682
12682
3682
4682
5682
6682
7682
8682
9682
10782
11782
12782
3782
4782
5782
6782
7782
8782
9782
10882
11882
12882
3882
4882
5882
6882
7882
8882
9882
10982
11982
12982
3982
4982
5982
6982
7982
8982
9982
10092
11092
12092
13092
4092
5092
6092
7092
8092
9092
10192
11192
12192
13192
4192
5192
6192
7192
8192
9192
10292
11292
12292
13292
4292
5292
6292
7292
8292
9292
10392
11392
12392
3392
4392
5392
6392
7392
8392
9392
10492
11492
12492
3492
4492
5492
6492
7492
8492
9492
10592
11592
12592
3592
4592
5592
6592
7592
8592
9592
10692
11692
12692
3692
4692
5692
6692
7692
8692
9692
10792
11792
12792
3792
4792
5792
6792
7792
8792
9792
10892
11892
12892
3892
4892
5892
6892
7892
8892
9892
10992
11992
12992
3992
4992
5992
6992
7992
8992
9992
10003
11003
12003
13003
4003
5003
6003
7003
8003
9003
10103
11103
12103
13103
4103
5103
6103
7103
8103
9103
10203
11203
12203
13203
4203
5203
6203
7203
8203
9203
10303
11303
12303
13303
4303
5303
6303
7303
8303
9303
10403
11403
12403
3403
4403
5403
6403
7403
8403
9403
10503
11503
12503
3503
4503
5503
6503
7503
8503
9503
10603
11603
12603
3603
4603
5603
6603
7603
8603
9603
10703
11703
12703
3703
4703
5703
6703
7703
8703
9703
10803
11803
12803
3803
4803
5803
6803
7803
8803
9803
10903
11903
12903
3903
4903
5903
6903
7903
8903
9903
10013
11013
12013
13013
4013
5013
6013
7013
8013
9013
10113
11113
12113
13113
4113
5113
6113
7113
8113
9113
10213
11213
12213
13213
4213
5213
6213
7213
8213
9213
10313
11313
12313
13313
4313
5313
6313
7313
8313
9313
10413
11413
12413
3413
4413
5413
6413
7413
8413
9413
10513
11513
12513
3513
4513
5513
6513
7513
8513
9513
10613
11613
12613
3613
4613
5613
6613
7613
8613
9613
10713
11713
12713
3713
4713
5713
6713
7713
8713
9713
10813
11813
12813
3813
4813
5813
6813
7813
8813
9813
10913
11913
12913
3913
4913
5913
6913
7913
8913
9913
10023
11023
12023
13023
4023
5023
6023
7023
8023
9023
10123
11123
12123
13123
4123
5123
6123
7123
8123
9123
10223
11223
12223
13223
4223
5223
6223
7223
8223
9223
10323
11323
12323
13323
4323
5323
6323
7323
8323
9323
10423
11423
12423
3423
4423
5423
6423
7423
8423
9423
10523
11523
12523
3523
4523
5523
6523
7523
8523
9523
10623
11623
12623
3623
4623
5623
6623
7623
8623
9623
10723
11723
12723
3723
4723
5723
6723
7723
8723
9723
10823
11823
12823
3823
4823
5823
6823
7823
8823
9823
10923
11923
12923
3923
4923
5923
6923
7923
8923
9923
10033
11033
12033
13033
4033
5033
6033
7033
8033
9033
10133
11133
12133
13133
4133
5133
6133
7133
8133
9133
10233
11233
12233
13233
4233
5233
6233
7233
8233
9233
10333
11333
12333
13333
4333
5333
6333
7333
8333
9333
10433
11433
12433
3433
4433
5433
6433
7433
8433
9433
10533
11533
12533
3533
4533
5533
6533
7533
8533
9533
10633
11633
12633
3633
4633
5633
6633
7633
8633
9633
10733
11733
12733
3733
4733
5733
6733
7733
8733
9733
10833
11833
12833
3833
4833
5833
6833
7833
8833
9833
10933
11933
12933
3933
4933
5933
6933
7933
8933
9933
10043
11043
12043
13043
4043
5043
6043
7043
8043
9043
10143
11143
12143
13143
4143
5143
6143
7143
8143
9143
10243
11243
12243
13243
4243
5243
6243
7243
8243
9243
10343
11343
12343
13343
4343
5343
6343
7343
8343
9343
10443
11443
12443
3443
4443
5443
6443
7443
8443
9443
10543
11543
12543
3543
4543
5543
6543
7543
8543
9543
10643
11643
12643
3643
4643
5643
6643
7643
8643
9643
10743
11743
12743
3743
4743
5743
6743
7743
8743
9743
10843
11843
12843
3843
4843
5843
6843
7843
8843
9843
10943
11943
12943
3943
4943
5943
6943
7943
8943
9943
10053
11053
12053
13053
4053
5053
6053
7053
8053
9053
10153
11153
12153
13153
4153
5153
6153
7153
8153
9153
10253
11253
12253
13253
4253
5253
6253
7253
8253
9253
10353
11353
12353
13353
4353
5353
6353
7353
8353
9353
10453
11453
12453
3453
4453
5453
6453
7453
8453
9453
10553
11553
12553
3553
4553
5553
6553
7553
8553
9553
10653
11653
12653
3653
4653
5653
6653
7653
8653
9653
10753
11753
12753
3753
4753
5753
6753
7753
8753
9753
10853
11853
12853
3853
4853
5853
6853
7853
8853
9853
10953
11953
12953
3953
4953
5953
6953
7953
8953
9953
10063
11063
12063
13063
4063
5063
6063
7063
8063
9063
10163
11163
12163
13163
4163
5163
6163
7163
8163
9163
10263
11263
12263
13263
4263
5263
6263
7263
8263
9263
10363
11363
12363
13363
4363
5363
6363
7363
8363
9363
10463
11463
12463
3463
4463
5463
6463
7463
8463
9463
10563
11563
12563
3563
4563
5563
6563
7563
8563
9563
10663
11663
12663
3663
4663
5663
6663
7663
8663
9663
10763
11763
12763
3763
4763
5763
6763
7763
8763
9763
10863
11863
12863
3863
4863
5863
6863
7863
8863
9863
10963
11963
12963
3963
4963
5963
6963
7963
8963
9963
10073
11073
12073
13073
4073
5073
6073
7073
8073
9073
10173
11173
12173
13173
4173
5173
6173
7173
8173
9173
10273
11273
12273
13273
4273
5273
6273
7273
8273
9273
10373
11373
12373
13373
4373
5373
6373
7373
8373
9373
10473
11473
12473
3473
4473
5473
6473
7473
8473
9473
10573
11573
12573
3573
4573
5573
6573
7573
8573
9573
10673
11673
12673
3673
4673
5673
6673
7673
8673
9673
10773
11773
12773
3773
4773
5773
6773
7773
8773
9773
10873
11873
12873
3873
4873
5873
6873
7873
8873
9873
10973
11973
12973
3973
4973
5973
6973
7973
8973
9973
10083
11083
12083
13083
4083
5083
6083
7083
8083
9083
10183
11183
12183
13183
4183
5183
6183
7183
8183
9183
10283
11283
12283
13283
4283
5283
6283
7283
8283
9283
10383
11383
12383
3383
4383
5383
6383
7383
8383
9383
10483
11483
12483
3483
4483
5483
6483
7483
8483
9483
10583
11583
12583
3583
4583
5583
6583
7583
8583
9583
10683
11683
12683
3683
4683
5683
6683
7683
8683
9683
10783
11783
12783
3783
4783
5783
6783
7783
8783
9783
10883
11883
12883
3883
4883
5883
6883
7883
8883
9883
10983
11983
12983
3983
4983
5983
6983
7983
8983
9983
10093
11093
12093
13093
4093
5093
6093
7093
8093
9093
10193
11193
12193
13193
4193
5193
6193
7193
8193
9193
10293
11293
12293
13293
4293
5293
6293
7293
8293
9293
10393
11393
12393
3393
4393
5393
6393
7393
8393
9393
10493
11493
12493
3493
4493
5493
6493
7493
8493
9493
10593
11593
12593
3593
4593
5593
6593
7593
8593
9593
10693
11693
12693
3693
4693
5693
6693
7693
8693
9693
10793
11793
12793
3793
4793
5793
6793
7793
8793
9793
10893
11893
12893
3893
4893
5893
6893
7893
8893
9893
10993
11993
12993
3993
4993
5993
6993
7993
8993
9993
10004
11004
12004
13004
4004
5004
6004
7004
8004
9004
10104
11104
12104
13104
4104
5104
6104
7104
8104
9104
10204
11204
12204
13204
4204
5204
6204
7204
8204
9204
10304
11304
12304
13304
4304
5304
6304
7304
8304
9304
10404
11404
12404
3404
4404
5404
6404
7404
8404
9404
10504
11504
12504
3504
4504
5504
6504
7504
8504
9504
10604
11604
12604
3604
4604
5604
6604
7604
8604
9604
10704
11704
12704
3704
4704
5704
6704
7704
8704
9704
10804
11804
12804
3804
4804
5804
6804
7804
8804
9804
10904
11904
12904
3904
4904
5904
6904
7904
8904
9904
10014
11014
12014
13014
4014
5014
6014
7014
8014
9014
10114
11114
12114
13114
4114
5114
6114
7114
8114
9114
10214
11214
12214
13214
4214
5214
6214
7214
8214
9214
10314
11314
12314
13314
4314
5314
6314
7314
8314
9314
10414
11414
12414
3414
4414
5414
6414
7414
8414
9414
10514
11514
12514
3514
4514
5514
6514
7514
8514
9514
10614
11614
12614
3614
4614
5614
6614
7614
8614
9614
10714
11714
12714
3714
4714
5714
6714
7714
8714
9714
10814
11814
12814
3814
4814
5814
6814
7814
8814
9814
10914
11914
12914
3914
4914
5914
6914
7914
8914
9914
10024
11024
12024
13024
4024
5024
6024
7024
8024
9024
10124
11124
12124
13124
4124
5124
6124
7124
8124
9124
10224
11224
12224
13224
4224
5224
6224
7224
8224
9224
10324
11324
12324
13324
4324
5324
6324
7324
8324
9324
10424
11424
12424
3424
4424
5424
6424
7424
8424
9424
10524
11524
12524
3524
4524
5524
6524
7524
8524
9524
10624
11624
12624
3624
4624
5624
6624
7624
8624
9624
10724
11724
12724
3724
4724
5724
6724
7724
8724
9724
10824
11824
12824
3824
4824
5824
6824
7824
8824
9824
10924
11924
12924
3924
4924
5924
6924
7924
8924
9924
10034
11034
12034
13034
4034
5034
6034
7034
8034
9034
10134
11134
12134
13134
4134
5134
6134
7134
8134
9134
10234
11234
12234
13234
4234
5234
6234
7234
8234
9234
10334
11334
12334
13334
4334
5334
6334
7334
8334
9334
10434
11434
12434
3434
4434
5434
6434
7434
8434
9434
10534
11534
12534
3534
4534
5534
6534
7534
8534
9534
10634
11634
12634
3634
4634
5634
6634
7634
8634
9634
10734
11734
12734
3734
4734
5734
6734
7734
8734
9734
10834
11834
12834
3834
4834
5834
6834
7834
8834
9834
10934
11934
12934
3934
4934
5934
6934
7934
8934
9934
10044
11044
12044
13044
4044
5044
6044
7044
8044
9044
10144
11144
12144
13144
4144
5144
6144
7144
8144
9144
10244
11244
12244
13244
4244
5244
6244
7244
8244
9244
10344
11344
12344
13344
4344
5344
6344
7344
8344
9344
10444
11444
12444
3444
4444
5444
6444
7444
8444
9444
10544
11544
12544
3544
4544
5544
6544
7544
8544
9544
10644
11644
12644
3644
4644
5644
6644
7644
8644
9644
10744
11744
12744
3744
4744
5744
6744
7744
8744
9744
10844
11844
12844
3844
4844
5844
6844
7844
8844
9844
10944
11944
12944
3944
4944
5944
6944
7944
8944
9944
10054
11054
12054
13054
4054
5054
6054
7054
8054
9054
10154
11154
12154
13154
4154
5154
6154
7154
8154
9154
10254
11254
12254
13254
4254
5254
6254
7254
8254
9254
10354
11354
12354
13354
4354
5354
6354
7354
8354
9354
10454
11454
12454
3454
4454
5454
6454
7454
8454
9454
10554
11554
12554
3554
4554
5554
6554
7554
8554
9554
10654
11654
12654
3654
4654
5654
6654
7654
8654
9654
10754
11754
12754
3754
4754
5754
6754
7754
8754
9754
10854
11854
12854
3854
4854
5854
6854
7854
8854
9854
10954
11954
12954
3954
4954
5954
6954
7954
8954
9954
10064
11064
12064
13064
4064
5064
6064
7064
8064
9064
10164
11164
12164
13164
4164
5164
6164
7164
8164
9164
10264
11264
12264
13264
4264
5264
6264
7264
8264
9264
10364
11364
12364
13364
4364
5364
6364
7364
8364
9364
10464
11464
12464
3464
4464
5464
6464
7464
8464
9464
10564
11564
12564
3564
4564
5564
6564
7564
8564
9564
10664
11664
12664
3664
4664
5664
6664
7664
8664
9664
10764
11764
12764
3764
4764
5764
6764
7764
8764
9764
10864
11864
12864
3864
4864
5864
6864
7864
8864
9864
10964
11964
12964
3964
4964
5964
6964
7964
8964
9964
10074
11074
12074
13074
4074
5074
6074
7074
8074
9074
10174
11174
12174
13174
4174
5174
6174
7174
8174
9174
10274
11274
12274
13274
4274
5274
6274
7274
8274
9274
10374
11374
12374
13374
4374
5374
6374
7374
8374
9374
10474
11474
12474
3474
4474
5474
6474
7474
8474
9474
10574
11574
12574
3574
4574
5574
6574
7574
8574
9574
10674
11674
12674
3674
4674
5674
6674
7674
8674
9674
10774
11774
12774
3774
4774
5774
6774
7774
8774
9774
10874
11874
12874
3874
4874
5874
6874
7874
8874
9874
10974
11974
12974
3974
4974
5974
6974
7974
8974
9974
10084
11084
12084
13084
4084
5084
6084
7084
8084
9084
10184
11184
12184
13184
4184
5184
6184
7184
8184
9184
10284
11284
12284
13284
4284
5284
6284
7284
8284
9284
10384
11384
12384
3384
4384
5384
6384
7384
8384
9384
10484
11484
12484
3484
4484
5484
6484
7484
8484
9484
10584
11584
12584
3584
4584
5584
6584
7584
8584
9584
10684
11684
12684
3684
4684
5684
6684
7684
8684
9684
10784
11784
12784
3784
4784
5784
6784
7784
8784
9784
10884
11884
12884
3884
4884
5884
6884
7884
8884
9884
10984
11984
12984
3984
4984
5984
6984
7984
8984
9984
10094
11094
12094
13094
4094
5094
6094
7094
8094
9094
10194
11194
12194
13194
4194
5194
6194
7194
8194
9194
10294
11294
12294
13294
4294
5294
6294
7294
8294
9294
10394
11394
12394
3394
4394
5394
6394
7394
8394
9394
10494
11494
12494
3494
4494
5494
6494
7494
8494
9494
10594
11594
12594
3594
4594
5594
6594
7594
8594
9594
10694
11694
12694
3694
4694
5694
6694
7694
8694
9694
10794
11794
12794
3794
4794
5794
6794
7794
8794
9794
10894
11894
12894
3894
4894
5894
6894
7894
8894
9894
10994
11994
12994
3994
4994
5994
6994
7994
8994
9994
10005
11005
12005
13005
4005
5005
6005
7005
8005
9005
10105
11105
12105
13105
4105
5105
6105
7105
8105
9105
10205
11205
12205
13205
4205
5205
6205
7205
8205
9205
10305
11305
12305
13305
4305
5305
6305
7305
8305
9305
10405
11405
12405
3405
4405
5405
6405
7405
8405
9405
10505
11505
12505
3505
4505
5505
6505
7505
8505
9505
10605
11605
12605
3605
4605
5605
6605
7605
8605
9605
10705
11705
12705
3705
4705
5705
6705
7705
8705
9705
10805
11805
12805
3805
4805
5805
6805
7805
8805
9805
10905
11905
12905
3905
4905
5905
6905
7905
8905
9905
10015
11015
12015
13015
4015
5015
6015
7015
8015
9015
10115
11115
12115
13115
4115
5115
6115
7115
8115
9115
10215
11215
12215
13215
4215
5215
6215
7215
8215
9215
10315
11315
12315
13315
4315
5315
6315
7315
8315
9315
10415
11415
12415
3415
4415
5415
6415
7415
8415
9415
10515
11515
12515
3515
4515
5515
6515
7515
8515
9515
10615
11615
12615
3615
4615
5615
6615
7615
8615
9615
10715
11715
12715
3715
4715
5715
6715
7715
8715
9715
10815
11815
12815
3815
4815
5815
6815
7815
8815
9815
10915
11915
12915
3915
4915
5915
6915
7915
8915
9915
10025
11025
12025
13025
4025
5025
6025
7025
8025
9025
10125
11125
12125
13125
4125
5125
6125
7125
8125
9125
10225
11225
12225
13225
4225
5225
6225
7225
8225
9225
10325
11325
12325
13325
4325
5325
6325
7325
8325
9325
10425
11425
12425
3425
4425
5425
6425
7425
8425
9425
10525
11525
12525
3525
4525
5525
6525
7525
8525
9525
10625
11625
12625
3625
4625
5625
6625
7625
8625
9625
10725
11725
12725
3725
4725
5725
6725
7725
8725
9725
10825
11825
12825
3825
4825
5825
6825
7825
8825
9825
10925
11925
12925
3925
4925
5925
6925
7925
8925
9925
10035
11035
12035
13035
4035
5035
6035
7035
8035
9035
10135
11135
12135
13135
4135
5135
6135
7135
8135
9135
10235
11235
12235
13235
4235
5235
6235
7235
8235
9235
10335
11335
12335
13335
4335
5335
6335
7335
8335
9335
10435
11435
12435
3435
4435
5435
6435
7435
8435
9435
10535
11535
12535
3535
4535
5535
6535
7535
8535
9535
10635
11635
12635
3635
4635
5635
6635
7635
8635
9635
10735
11735
12735
3735
4735
5735
6735
7735
8735
9735
10835
11835
12835
3835
4835
5835
6835
7835
8835
9835
10935
11935
12935
3935
4935
5935
6935
7935
8935
9935
10045
11045
12045
13045
4045
5045
6045
7045
8045
9045
10145
11145
12145
13145
4145
5145
6145
7145
8145
9145
10245
11245
12245
13245
4245
5245
6245
7245
8245
9245
10345
11345
12345
13345
4345
5345
6345
7345
8345
9345
10445
11445
12445
3445
4445
5445
6445
7445
8445
9445
10545
11545
12545
3545
4545
5545
6545
7545
8545
9545
10645
11645
12645
3645
4645
5645
6645
7645
8645
9645
10745
11745
12745
3745
4745
5745
6745
7745
8745
9745
10845
11845
12845
3845
4845
5845
6845
7845
8845
9845
10945
11945
12945
3945
4945
5945
6945
7945
8945
9945
10055
11055
12055
13055
4055
5055
6055
7055
8055
9055
10155
11155
12155
13155
4155
5155
6155
7155
8155
9155
10255
11255
12255
13255
4255
5255
6255
7255
8255
9255
10355
11355
12355
13355
4355
5355
6355
7355
8355
9355
10455
11455
12455
3455
4455
5455
6455
7455
8455
9455
10555
11555
12555
3555
4555
5555
6555
7555
8555
9555
10655
11655
12655
3655
4655
5655
6655
7655
8655
9655
10755
11755
12755
3755
4755
5755
6755
7755
8755
9755
10855
11855
12855
3855
4855
5855
6855
7855
8855
9855
10955
11955
12955
3955
4955
5955
6955
7955
8955
9955
10065
11065
12065
13065
4065
5065
6065
7065
8065
9065
10165
11165
12165
13165
4165
5165
6165
7165
8165
9165
10265
11265
12265
13265
4265
5265
6265
7265
8265
9265
10365
11365
12365
13365
4365
5365
6365
7365
8365
9365
10465
11465
12465
3465
4465
5465
6465
7465
8465
9465
10565
11565
12565
3565
4565
5565
6565
7565
8565
9565
10665
11665
12665
3665
4665
5665
6665
7665
8665
9665
10765
11765
12765
3765
4765
5765
6765
7765
8765
9765
10865
11865
12865
3865
4865
5865
6865
7865
8865
9865
10965
11965
12965
3965
4965
5965
6965
7965
8965
9965
10075
11075
12075
13075
4075
5075
6075
7075
8075
9075
10175
11175
12175
13175
4175
5175
6175
7175
8175
9175
10275
11275
12275
13275
4275
5275
6275
7275
8275
9275
10375
11375
12375
13375
4375
5375
6375
7375
8375
9375
10475
11475
12475
3475
4475
5475
6475
7475
8475
9475
10575
11575
12575
3575
4575
5575
6575
7575
8575
9575
10675
11675
12675
3675
4675
5675
6675
7675
8675
9675
10775
11775
12775
3775
4775
5775
6775
7775
8775
9775
10875
11875
12875
3875
4875
5875
6875
7875
8875
9875
10975
11975
12975
3975
4975
5975
6975
7975
8975
9975
10085
11085
12085
13085
4085
5085
6085
7085
8085
9085
10185
11185
12185
13185
4185
5185
6185
7185
8185
9185
10285
11285
12285
13285
4285
5285
6285
7285
8285
9285
10385
11385
12385
3385
4385
5385
6385
7385
8385
9385
10485
11485
12485
3485
4485
5485
6485
7485
8485
9485
10585
11585
12585
3585
4585
5585
6585
7585
8585
9585
10685
11685
12685
3685
4685
5685
6685
7685
8685
9685
10785
11785
12785
3785
4785
5785
6785
7785
8785
9785
10885
11885
12885
3885
4885
5885
6885
7885
8885
9885
10985
11985
12985
3985
4985
5985
6985
7985
8985
9985
10095
11095
12095
13095
4095
5095
6095
7095
8095
9095
10195
11195
12195
13195
4195
5195
6195
7195
8195
9195
10295
11295
12295
13295
4295
5295
6295
7295
8295
9295
10395
11395
12395
3395
4395
5395
6395
7395
8395
9395
10495
11495
12495
3495
4495
5495
6495
7495
8495
9495
10595
11595
12595
3595
4595
5595
6595
7595
8595
9595
10695
11695
12695
3695
4695
5695
6695
7695
8695
9695
10795
11795
12795
3795
4795
5795
6795
7795
8795
9795
10895
11895
12895
3895
4895
5895
6895
7895
8895
9895
10995
11995
12995
3995
4995
5995
6995
7995
8995
9995
10006
11006
12006
13006
4006
5006
6006
7006
8006
9006
10106
11106
12106
13106
4106
5106
6106
7106
8106
9106
10206
11206
12206
13206
4206
5206
6206
7206
8206
9206
10306
11306
12306
13306
4306
5306
6306
7306
8306
9306
10406
11406
12406
3406
4406
5406
6406
7406
8406
9406
10506
11506
12506
3506
4506
5506
6506
7506
8506
9506
10606
11606
12606
3606
4606
5606
6606
7606
8606
9606
10706
11706
12706
3706
4706
5706
6706
7706
8706
9706
10806
11806
12806
3806
4806
5806
6806
7806
8806
9806
10906
11906
12906
3906
4906
5906
6906
7906
8906
9906
10016
11016
12016
13016
4016
5016
6016
7016
8016
9016
10116
11116
12116
13116
4116
5116
6116
7116
8116
9116
10216
11216
12216
13216
4216
5216
6216
7216
8216
9216
10316
11316
12316
13316
4316
5316
6316
7316
8316
9316
10416
11416
12416
3416
4416
5416
6416
7416
8416
9416
10516
11516
12516
3516
4516
5516
6516
7516
8516
9516
10616
11616
12616
3616
4616
5616
6616
7616
8616
9616
10716
11716
12716
3716
4716
5716
6716
7716
8716
9716
10816
11816
12816
3816
4816
5816
6816
7816
8816
9816
10916
11916
12916
3916
4916
5916
6916
7916
8916
9916
10026
11026
12026
13026
4026
5026
6026
7026
8026
9026
10126
11126
12126
13126
4126
5126
6126
7126
8126
9126
10226
11226
12226
13226
4226
5226
6226
7226
8226
9226
10326
11326
12326
13326
4326
5326
6326
7326
8326
9326
10426
11426
12426
3426
4426
5426
6426
7426
8426
9426
10526
11526
12526
3526
4526
5526
6526
7526
8526
9526
10626
11626
12626
3626
4626
5626
6626
7626
8626
9626
10726
11726
12726
3726
4726
5726
6726
7726
8726
9726
10826
11826
12826
3826
4826
5826
6826
7826
8826
9826
10926
11926
12926
3926
4926
5926
6926
7926
8926
9926
10036
11036
12036
13036
4036
5036
6036
7036
8036
9036
10136
11136
12136
13136
4136
5136
6136
7136
8136
9136
10236
11236
12236
13236
4236
5236
6236
7236
8236
9236
10336
11336
12336
13336
4336
5336
6336
7336
8336
9336
10436
11436
12436
3436
4436
5436
6436
7436
8436
9436
10536
11536
12536
3536
4536
5536
6536
7536
8536
9536
10636
11636
12636
3636
4636
5636
6636
7636
8636
9636
10736
11736
12736
3736
4736
5736
6736
7736
8736
9736
10836
11836
12836
3836
4836
5836
6836
7836
8836
9836
10936
11936
12936
3936
4936
5936
6936
7936
8936
9936
10046
11046
12046
13046
4046
5046
6046
7046
8046
9046
10146
11146
12146
13146
4146
5146
6146
7146
8146
9146
10246
11246
12246
13246
4246
5246
6246
7246
8246
9246
10346
11346
12346
13346
4346
5346
6346
7346
8346
9346
10446
11446
12446
3446
4446
5446
6446
7446
8446
9446
10546
11546
12546
3546
4546
5546
6546
7546
8546
9546
10646
11646
12646
3646
4646
5646
6646
7646
8646
9646
10746
11746
12746
3746
4746
5746
6746
7746
8746
9746
10846
11846
12846
3846
4846
5846
6846
7846
8846
9846
10946
11946
12946
3946
4946
5946
6946
7946
8946
9946
10056
11056
12056
13056
4056
5056
6056
7056
8056
9056
10156
11156
12156
13156
4156
5156
6156
7156
8156
9156
10256
11256
12256
13256
4256
5256
6256
7256
8256
9256
10356
11356
12356
13356
4356
5356
6356
7356
8356
9356
10456
11456
12456
3456
4456
5456
6456
7456
8456
9456
10556
11556
12556
3556
4556
5556
6556
7556
8556
9556
10656
11656
12656
3656
4656
5656
6656
7656
8656
9656
10756
11756
12756
3756
4756
5756
6756
7756
8756
9756
10856
11856
12856
3856
4856
5856
6856
7856
8856
9856
10956
11956
12956
3956
4956
5956
6956
7956
8956
9956
10066
11066
12066
13066
4066
5066
6066
7066
8066
9066
10166
11166
12166
13166
4166
5166
6166
7166
8166
9166
10266
11266
12266
13266
4266
5266
6266
7266
8266
9266
10366
11366
12366
13366
4366
5366
6366
7366
8366
9366
10466
11466
12466
3466
4466
5466
6466
7466
8466
9466
10566
11566
12566
3566
4566
5566
6566
7566
8566
9566
10666
11666
12666
3666
4666
5666
6666
7666
8666
9666
10766
11766
12766
3766
4766
5766
6766
7766
8766
9766
10866
11866
12866
3866
4866
5866
6866
7866
8866
9866
10966
11966
12966
3966
4966
5966
6966
7966
8966
9966
10076
11076
12076
13076
4076
5076
6076
7076
8076
9076
10176
11176
12176
13176
4176
5176
6176
7176
8176
9176
10276
11276
12276
13276
4276
5276
6276
7276
8276
9276
10376
11376
12376
13376
4376
5376
6376
7376
8376
9376
10476
11476
12476
3476
4476
5476
6476
7476
8476
9476
10576
11576
12576
3576
4576
5576
6576
7576
8576
9576
10676
11676
12676
3676
4676
5676
6676
7676
8676
9676
10776
11776
12776
3776
4776
5776
6776
7776
8776
9776
10876
11876
12876
3876
4876
5876
6876
7876
8876
9876
10976
11976
12976
3976
4976
5976
6976
7976
8976
9976
10086
11086
12086
13086
4086
5086
6086
7086
8086
9086
10186
11186
12186
13186
4186
5186
6186
7186
8186
9186
10286
11286
12286
13286
4286
5286
6286
7286
8286
9286
10386
11386
12386
3386
4386
5386
6386
7386
8386
9386
10486
11486
12486
3486
4486
5486
6486
7486
8486
9486
10586
11586
12586
3586
4586
5586
6586
7586
8586
9586
10686
11686
12686
3686
4686
5686
6686
7686
8686
9686
10786
11786
12786
3786
4786
5786
6786
7786
8786
9786
10886
11886
12886
3886
4886
5886
6886
7886
8886
9886
10986
11986
12986
3986
4986
5986
6986
7986
8986
9986
10096
11096
12096
13096
4096
5096
6096
7096
8096
9096
10196
11196
12196
13196
4196
5196
6196
7196
8196
9196
10296
11296
12296
13296
4296
5296
6296
7296
8296
9296
10396
11396
12396
3396
4396
5396
6396
7396
8396
9396
10496
11496
12496
3496
4496
5496
6496
7496
8496
9496
10596
11596
12596
3596
4596
5596
6596
7596
8596
9596
10696
11696
12696
3696
4696
5696
6696
7696
8696
9696
10796
11796
12796
3796
4796
5796
6796
7796
8796
9796
10896
11896
12896
3896
4896
5896
6896
7896
8896
9896
10996
11996
12996
3996
4996
5996
6996
7996
8996
9996
10007
11007
12007
13007
4007
5007
6007
7007
8007
9007
10107
11107
12107
13107
4107
5107
6107
7107
8107
9107
10207
11207
12207
13207
4207
5207
6207
7207
8207
9207
10307
11307
12307
13307
4307
5307
6307
7307
8307
9307
10407
11407
12407
3407
4407
5407
6407
7407
8407
9407
10507
11507
12507
3507
4507
5507
6507
7507
8507
9507
10607
11607
12607
3607
4607
5607
6607
7607
8607
9607
10707
11707
12707
3707
4707
5707
6707
7707
8707
9707
10807
11807
12807
3807
4807
5807
6807
7807
8807
9807
10907
11907
12907
3907
4907
5907
6907
7907
8907
9907
10017
11017
12017
13017
4017
5017
6017
7017
8017
9017
10117
11117
12117
13117
4117
5117
6117
7117
8117
9117
10217
11217
12217
13217
4217
5217
6217
7217
8217
9217
10317
11317
12317
13317
4317
5317
6317
7317
8317
9317
10417
11417
12417
3417
4417
5417
6417
7417
8417
9417
10517
11517
12517
3517
4517
5517
6517
7517
8517
9517
10617
11617
12617
3617
4617
5617
6617
7617
8617
9617
10717
11717
12717
3717
4717
5717
6717
7717
8717
9717
10817
11817
12817
3817
4817
5817
6817
7817
8817
9817
10917
11917
12917
3917
4917
5917
6917
7917
8917
9917
10027
11027
12027
13027
4027
5027
6027
7027
8027
9027
10127
11127
12127
13127
4127
5127
6127
7127
8127
9127
10227
11227
12227
13227
4227
5227
6227
7227
8227
9227
10327
11327
12327
13327
4327
5327
6327
7327
8327
9327
10427
11427
12427
3427
4427
5427
6427
7427
8427
9427
10527
11527
12527
3527
4527
5527
6527
7527
8527
9527
10627
11627
12627
3627
4627
5627
6627
7627
8627
9627
10727
11727
12727
3727
4727
5727
6727
7727
8727
9727
10827
11827
12827
3827
4827
5827
6827
7827
8827
9827
10927
11927
12927
3927
4927
5927
6927
7927
8927
9927
10037
11037
12037
13037
4037
5037
6037
7037
8037
9037
10137
11137
12137
13137
4137
5137
6137
7137
8137
9137
10237
11237
12237
13237
4237
5237
6237
7237
8237
9237
10337
11337
12337
13337
4337
5337
6337
7337
8337
9337
10437
11437
12437
3437
4437
5437
6437
7437
8437
9437
10537
11537
12537
3537
4537
5537
6537
7537
8537
9537
10637
11637
12637
3637
4637
5637
6637
7637
8637
9637
10737
11737
12737
3737
4737
5737
6737
7737
8737
9737
10837
11837
12837
3837
4837
5837
6837
7837
8837
9837
10937
11937
12937
3937
4937
5937
6937
7937
8937
9937
10047
11047
12047
13047
4047
5047
6047
7047
8047
9047
10147
11147
12147
13147
4147
5147
6147
7147
8147
9147
10247
11247
12247
13247
4247
5247
6247
7247
8247
9247
10347
11347
12347
13347
4347
5347
6347
7347
8347
9347
10447
11447
12447
3447
4447
5447
6447
7447
8447
9447
10547
11547
12547
3547
4547
5547
6547
7547
8547
9547
10647
11647
12647
3647
4647
5647
6647
7647
8647
9647
10747
11747
12747
3747
4747
5747
6747
7747
8747
9747
10847
11847
12847
3847
4847
5847
6847
7847
8847
9847
10947
11947
12947
3947
4947
5947
6947
7947
8947
9947
10057
11057
12057
13057
4057
5057
6057
7057
8057
9057
10157
11157
12157
13157
4157
5157
6157
7157
8157
9157
10257
11257
12257
13257
4257
5257
6257
7257
8257
9257
10357
11357
12357
13357
4357
5357
6357
7357
8357
9357
10457
11457
12457
3457
4457
5457
6457
7457
8457
9457
10557
11557
12557
3557
4557
5557
6557
7557
8557
9557
10657
11657
12657
3657
4657
5657
6657
7657
8657
9657
10757
11757
12757
3757
4757
5757
6757
7757
8757
9757
10857
11857
12857
3857
4857
5857
6857
7857
8857
9857
10957
11957
12957
3957
4957
5957
6957
7957
8957
9957
10067
11067
12067
13067
4067
5067
6067
7067
8067
9067
10167
11167
12167
13167
4167
5167
6167
7167
8167
9167
10267
11267
12267
13267
4267
5267
6267
7267
8267
9267
10367
11367
12367
13367
4367
5367
6367
7367
8367
9367
10467
11467
12467
3467
4467
5467
6467
7467
8467
9467
10567
11567
12567
3567
4567
5567
6567
7567
8567
9567
10667
11667
12667
3667
4667
5667
6667
7667
8667
9667
10767
11767
12767
3767
4767
5767
6767
7767
8767
9767
10867
11867
12867
3867
4867
5867
6867
7867
8867
9867
10967
11967
12967
3967
4967
5967
6967
7967
8967
9967
10077
11077
12077
13077
4077
5077
6077
7077
8077
9077
10177
11177
12177
13177
4177
5177
6177
7177
8177
9177
10277
11277
12277
13277
4277
5277
6277
7277
8277
9277
10377
11377
12377
13377
4377
5377
6377
7377
8377
9377
10477
11477
12477
3477
4477
5477
6477
7477
8477
9477
10577
11577
12577
3577
4577
5577
6577
7577
8577
9577
10677
11677
12677
3677
4677
5677
6677
7677
8677
9677
10777
11777
12777
3777
4777
5777
6777
7777
8777
9777
10877
11877
12877
3877
4877
5877
6877
7877
8877
9877
10977
11977
12977
3977
4977
5977
6977
7977
8977
9977
10087
11087
12087
13087
4087
5087
6087
7087
8087
9087
10187
11187
12187
13187
4187
5187
6187
7187
8187
9187
10287
11287
12287
13287
4287
5287
6287
7287
8287
9287
10387
11387
12387
3387
4387
5387
6387
7387
8387
9387
10487
11487
12487
3487
4487
5487
6487
7487
8487
9487
10587
11587
12587
3587
4587
5587
6587
7587
8587
9587
10687
11687
12687
3687
4687
5687
6687
7687
8687
9687
10787
11787
12787
3787
4787
5787
6787
7787
8787
9787
10887
11887
12887
3887
4887
5887
6887
7887
8887
9887
10987
11987
12987
3987
4987
5987
6987
7987
8987
9987
10097
11097
12097
13097
4097
5097
6097
7097
8097
9097
10197
11197
12197
13197
4197
5197
6197
7197
8197
9197
10297
11297
12297
13297
4297
5297
6297
7297
8297
9297
10397
11397
12397
3397
4397
5397
6397
7397
8397
9397
10497
11497
12497
3497
4497
5497
6497
7497
8497
9497
10597
11597
12597
3597
4597
5597
6597
7597
8597
9597
10697
11697
12697
3697
4697
5697
6697
7697
8697
9697
10797
11797
12797
3797
4797
5797
6797
7797
8797
9797
10897
11897
12897
3897
4897
5897
6897
7897
8897
9897
10997
11997
12997
3997
4997
5997
6997
7997
8997
9997
10008
11008
12008
13008
4008
5008
6008
7008
8008
9008
10108
11108
12108
13108
4108
5108
6108
7108
8108
9108
10208
11208
12208
13208
4208
5208
6208
7208
8208
9208
10308
11308
12308
13308
4308
5308
6308
7308
8308
9308
10408
11408
12408
3408
4408
5408
6408
7408
8408
9408
10508
11508
12508
3508
4508
5508
6508
7508
8508
9508
10608
11608
12608
3608
4608
5608
6608
7608
8608
9608
10708
11708
12708
3708
4708
5708
6708
7708
8708
9708
10808
11808
12808
3808
4808
5808
6808
7808
8808
9808
10908
11908
12908
3908
4908
5908
6908
7908
8908
9908
10018
11018
12018
13018
4018
5018
6018
7018
8018
9018
10118
11118
12118
13118
4118
5118
6118
7118
8118
9118
10218
11218
12218
13218
4218
5218
6218
7218
8218
9218
10318
11318
12318
13318
4318
5318
6318
7318
8318
9318
10418
11418
12418
3418
4418
5418
6418
7418
8418
9418
10518
11518
12518
3518
4518
5518
6518
7518
8518
9518
10618
11618
12618
3618
4618
5618
6618
7618
8618
9618
10718
11718
12718
3718
4718
5718
6718
7718
8718
9718
10818
11818
12818
3818
4818
5818
6818
7818
8818
9818
10918
11918
12918
3918
4918
5918
6918
7918
8918
9918
10028
11028
12028
13028
4028
5028
6028
7028
8028
9028
10128
11128
12128
13128
4128
5128
6128
7128
8128
9128
10228
11228
12228
13228
4228
5228
6228
7228
8228
9228
10328
11328
12328
13328
4328
5328
6328
7328
8328
9328
10428
11428
12428
3428
4428
5428
6428
7428
8428
9428
10528
11528
12528
3528
4528
5528
6528
7528
8528
9528
10628
11628
12628
3628
4628
5628
6628
7628
8628
9628
10728
11728
12728
3728
4728
5728
6728
7728
8728
9728
10828
11828
12828
3828
4828
5828
6828
7828
8828
9828
10928
11928
12928
3928
4928
5928
6928
7928
8928
9928
10038
11038
12038
13038
4038
5038
6038
7038
8038
9038
10138
11138
12138
13138
4138
5138
6138
7138
8138
9138
10238
11238
12238
13238
4238
5238
6238
7238
8238
9238
10338
11338
12338
13338
4338
5338
6338
7338
8338
9338
10438
11438
12438
3438
4438
5438
6438
7438
8438
9438
10538
11538
12538
3538
4538
5538
6538
7538
8538
9538
10638
11638
12638
3638
4638
5638
6638
7638
8638
9638
10738
11738
12738
3738
4738
5738
6738
7738
8738
9738
10838
11838
12838
3838
4838
5838
6838
7838
8838
9838
10938
11938
12938
3938
4938
5938
6938
7938
8938
9938
10048
11048
12048
13048
4048
5048
6048
7048
8048
9048
10148
11148
12148
13148
4148
5148
6148
7148
8148
9148
10248
11248
12248
13248
4248
5248
6248
7248
8248
9248
10348
11348
12348
13348
4348
5348
6348
7348
8348
9348
10448
11448
12448
3448
4448
5448
6448
7448
8448
9448
10548
11548
12548
3548
4548
5548
6548
7548
8548
9548
10648
11648
12648
3648
4648
5648
6648
7648
8648
9648
10748
11748
12748
3748
4748
5748
6748
7748
8748
9748
10848
11848
12848
3848
4848
5848
6848
7848
8848
9848
10948
11948
12948
3948
4948
5948
6948
7948
8948
9948
10058
11058
12058
13058
4058
5058
6058
7058
8058
9058
10158
11158
12158
13158
4158
5158
6158
7158
8158
9158
10258
11258
12258
13258
4258
5258
6258
7258
8258
9258
10358
11358
12358
13358
4358
5358
6358
7358
8358
9358
10458
11458
12458
3458
4458
5458
6458
7458
8458
9458
10558
11558
12558
3558
4558
5558
6558
7558
8558
9558
10658
11658
12658
3658
4658
5658
6658
7658
8658
9658
10758
11758
12758
3758
4758
5758
6758
7758
8758
9758
10858
11858
12858
3858
4858
5858
6858
7858
8858
9858
10958
11958
12958
3958
4958
5958
6958
7958
8958
9958
10068
11068
12068
13068
4068
5068
6068
7068
8068
9068
10168
11168
12168
13168
4168
5168
6168
7168
8168
9168
10268
11268
12268
13268
4268
5268
6268
7268
8268
9268
10368
11368
12368
13368
4368
5368
6368
7368
8368
9368
10468
11468
12468
3468
4468
5468
6468
7468
8468
9468
10568
11568
12568
3568
4568
5568
6568
7568
8568
9568
10668
11668
12668
3668
4668
5668
6668
7668
8668
9668
10768
11768
12768
3768
4768
5768
6768
7768
8768
9768
10868
11868
12868
3868
4868
5868
6868
7868
8868
9868
10968
11968
12968
3968
4968
5968
6968
7968
8968
9968
10078
11078
12078
13078
4078
5078
6078
7078
8078
9078
10178
11178
12178
13178
4178
5178
6178
7178
8178
9178
10278
11278
12278
13278
4278
5278
6278
7278
8278
9278
10378
11378
12378
13378
4378
5378
6378
7378
8378
9378
10478
11478
12478
3478
4478
5478
6478
7478
8478
9478
10578
11578
12578
3578
4578
5578
6578
7578
8578
9578
10678
11678
12678
3678
4678
5678
6678
7678
8678
9678
10778
11778
12778
3778
4778
5778
6778
7778
8778
9778
10878
11878
12878
3878
4878
5878
6878
7878
8878
9878
10978
11978
12978
3978
4978
5978
6978
7978
8978
9978
10088
11088
12088
13088
4088
5088
6088
7088
8088
9088
10188
11188
12188
13188
4188
5188
6188
7188
8188
9188
10288
11288
12288
13288
4288
5288
6288
7288
8288
9288
10388
11388
12388
3388
4388
5388
6388
7388
8388
9388
10488
11488
12488
3488
4488
5488
6488
7488
8488
9488
10588
11588
12588
3588
4588
5588
6588
7588
8588
9588
10688
11688
12688
3688
4688
5688
6688
7688
8688
9688
10788
11788
12788
3788
4788
5788
6788
7788
8788
9788
10888
11888
12888
3888
4888
5888
6888
7888
8888
9888
10988
11988
12988
3988
4988
5988
6988
7988
8988
9988
10098
11098
12098
13098
4098
5098
6098
7098
8098
9098
10198
11198
12198
13198
4198
5198
6198
7198
8198
9198
10298
11298
12298
13298
4298
5298
6298
7298
8298
9298
10398
11398
12398
3398
4398
5398
6398
7398
8398
9398
10498
11498
12498
3498
4498
5498
6498
7498
8498
9498
10598
11598
12598
3598
4598
5598
6598
7598
8598
9598
10698
11698
12698
3698
4698
5698
6698
7698
8698
9698
10798
11798
12798
3798
4798
5798
6798
7798
8798
9798
10898
11898
12898
3898
4898
5898
6898
7898
8898
9898
10998
11998
12998
3998
4998
5998
6998
7998
8998
9998
10009
11009
12009
13009
4009
5009
6009
7009
8009
9009
10109
11109
12109
13109
4109
5109
6109
7109
8109
9109
10209
11209
12209
13209
4209
5209
6209
7209
8209
9209
10309
11309
12309
13309
4309
5309
6309
7309
8309
9309
10409
11409
12409
3409
4409
5409
6409
7409
8409
9409
10509
11509
12509
3509
4509
5509
6509
7509
8509
9509
10609
11609
12609
3609
4609
5609
6609
7609
8609
9609
10709
11709
12709
3709
4709
5709
6709
7709
8709
9709
10809
11809
12809
3809
4809
5809
6809
7809
8809
9809
10909
11909
12909
3909
4909
5909
6909
7909
8909
9909
10019
11019
12019
13019
4019
5019
6019
7019
8019
9019
10119
11119
12119
13119
4119
5119
6119
7119
8119
9119
10219
11219
12219
13219
4219
5219
6219
7219
8219
9219
10319
11319
12319
13319
4319
5319
6319
7319
8319
9319
10419
11419
12419
3419
4419
5419
6419
7419
8419
9419
10519
11519
12519
3519
4519
5519
6519
7519
8519
9519
10619
11619
12619
3619
4619
5619
6619
7619
8619
9619
10719
11719
12719
3719
4719
5719
6719
7719
8719
9719
10819
11819
12819
3819
4819
5819
6819
7819
8819
9819
10919
11919
12919
3919
4919
5919
6919
7919
8919
9919
10029
11029
12029
13029
4029
5029
6029
7029
8029
9029
10129
11129
12129
13129
4129
5129
6129
7129
8129
9129
10229
11229
12229
13229
4229
5229
6229
7229
8229
9229
10329
11329
12329
13329
4329
5329
6329
7329
8329
9329
10429
11429
12429
3429
4429
5429
6429
7429
8429
9429
10529
11529
12529
3529
4529
5529
6529
7529
8529
9529
10629
11629
12629
3629
4629
5629
6629
7629
8629
9629
10729
11729
12729
3729
4729
5729
6729
7729
8729
9729
10829
11829
12829
3829
4829
5829
6829
7829
8829
9829
10929
11929
12929
3929
4929
5929
6929
7929
8929
9929
10039
11039
12039
13039
4039
5039
6039
7039
8039
9039
10139
11139
12139
13139
4139
5139
6139
7139
8139
9139
10239
11239
12239
13239
4239
5239
6239
7239
8239
9239
10339
11339
12339
13339
4339
5339
6339
7339
8339
9339
10439
11439
12439
3439
4439
5439
6439
7439
8439
9439
10539
11539
12539
3539
4539
5539
6539
7539
8539
9539
10639
11639
12639
3639
4639
5639
6639
7639
8639
9639
10739
11739
12739
3739
4739
5739
6739
7739
8739
9739
10839
11839
12839
3839
4839
5839
6839
7839
8839
9839
10939
11939
12939
3939
4939
5939
6939
7939
8939
9939
10049
11049
12049
13049
4049
5049
6049
7049
8049
9049
10149
11149
12149
13149
4149
5149
6149
7149
8149
9149
10249
11249
12249
13249
4249
5249
6249
7249
8249
9249
10349
11349
12349
13349
4349
5349
6349
7349
8349
9349
10449
11449
12449
3449
4449
5449
6449
7449
8449
9449
10549
11549
12549
3549
4549
5549
6549
7549
8549
9549
10649
11649
12649
3649
4649
5649
6649
7649
8649
9649
10749
11749
12749
3749
4749
5749
6749
7749
8749
9749
10849
11849
12849
3849
4849
5849
6849
7849
8849
9849
10949
11949
12949
3949
4949
5949
6949
7949
8949
9949
10059
11059
12059
13059
4059
5059
6059
7059
8059
9059
10159
11159
12159
13159
4159
5159
6159
7159
8159
9159
10259
11259
12259
13259
4259
5259
6259
7259
8259
9259
10359
11359
12359
13359
4359
5359
6359
7359
8359
9359
10459
11459
12459
3459
4459
5459
6459
7459
8459
9459
10559
11559
12559
3559
4559
5559
6559
7559
8559
9559
10659
11659
12659
3659
4659
5659
6659
7659
8659
9659
10759
11759
12759
3759
4759
5759
6759
7759
8759
9759
10859
11859
12859
3859
4859
5859
6859
7859
8859
9859
10959
11959
12959
3959
4959
5959
6959
7959
8959
9959
10069
11069
12069
13069
4069
5069
6069
7069
8069
9069
10169
11169
12169
13169
4169
5169
6169
7169
8169
9169
10269
11269
12269
13269
4269
5269
6269
7269
8269
9269
10369
11369
12369
13369
4369
5369
6369
7369
8369
9369
10469
11469
12469
3469
4469
5469
6469
7469
8469
9469
10569
11569
12569
3569
4569
5569
6569
7569
8569
9569
10669
11669
12669
3669
4669
5669
6669
7669
8669
9669
10769
11769
12769
3769
4769
5769
6769
7769
8769
9769
10869
11869
12869
3869
4869
5869
6869
7869
8869
9869
10969
11969
12969
3969
4969
5969
6969
7969
8969
9969
10079
11079
12079
13079
4079
5079
6079
7079
8079
9079
10179
11179
12179
13179
4179
5179
6179
7179
8179
9179
10279
11279
12279
13279
4279
5279
6279
7279
8279
9279
10379
11379
12379
13379
4379
5379
6379
7379
8379
9379
10479
11479
12479
3479
4479
5479
6479
7479
8479
9479
10579
11579
12579
3579
4579
5579
6579
7579
8579
9579
10679
11679
12679
3679
4679
5679
6679
7679
8679
9679
10779
11779
12779
3779
4779
5779
6779
7779
8779
9779
10879
11879
12879
3879
4879
5879
6879
7879
8879
9879
10979
11979
12979
3979
4979
5979
6979
7979
8979
9979
10089
11089
12089
13089
4089
5089
6089
7089
8089
9089
10189
11189
12189
13189
4189
5189
6189
7189
8189
9189
10289
11289
12289
13289
4289
5289
6289
7289
8289
9289
10389
11389
12389
3389
4389
5389
6389
7389
8389
9389
10489
11489
12489
3489
4489
5489
6489
7489
8489
9489
10589
11589
12589
3589
4589
5589
6589
7589
8589
9589
10689
11689
12689
3689
4689
5689
6689
7689
8689
9689
10789
11789
12789
3789
4789
5789
6789
7789
8789
9789
10889
11889
12889
3889
4889
5889
6889
7889
8889
9889
10989
11989
12989
3989
4989
5989
6989
7989
8989
9989
10099
11099
12099
13099
4099
5099
6099
7099
8099
9099
10199
11199
12199
13199
4199
5199
6199
7199
8199
9199
10299
11299
12299
13299
4299
5299
6299
7299
8299
9299
10399
11399
12399
3399
4399
5399
6399
7399
8399
9399
10499
11499
12499
3499
4499
5499
6499
7499
8499
9499
10599
11599
12599
3599
4599
5599
6599
7599
8599
9599
10699
11699
12699
3699
4699
5699
6699
7699
8699
9699
10799
11799
12799
3799
4799
5799
6799
7799
8799
9799
10899
11899
12899
3899
4899
5899
6899
7899
8899
9899
10999
11999
12999
3999
4999
5999
6999
7999
8999
9999
agx.ss_bind
RRRR
SSSS
:F?nn
LZRII
=IB\\
Loop Vectorization
%SLP Vectorizer
Alignment from assumptions
!+>)<
|U]emu
|U]emu
GUMLoop Distribution
Loop Load Elimination
%,38=K
 -dd
O]Utt
1>7rr
222222222222222222
LPTW[22_aceiHk2HHHHHHHHHHu
wy{2}22222222222222222222222222
\\\\4
2y6y:>BF
hhhhhhh
hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh
HHHHHHH
HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH
!#%')+-/13579;=?ACEGIKMOQSUWY[]_aceg
(*,.02468
"(09Rglx
 $$$$$$$$$$$.26
!#%')+-/1357
9;=?ACEGIKMOiQ
SUWY[
]_aceg
''''
''
''''
QQ
'''''
'''''''
'''''
QQ
QQQQQQ
QQQQQQ
QQQQQQ
QQQQQQ
)))
 BBBB'
GYbr{
#1%3AQCS
((99BB
333333333
'/9CSM
Z``ZZZZZZZ`Z 
 -MM
Loop Versioning
W\ad
EbJbO
YDzzzzD
$$$$$$$$
&&&&&&&&        """"""""
!!!!!!!!
""""''''''''########%%%%%%%%""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
########
8Qg|
 ( < R g } 
!4!K!c!{!
"0"E"Y"m"
#0#D#W#k#
$'$=$S$h$~$
%!%'%.%0%?%E%K%M%T%Z%i%k%n%p%r%t%w%y%{%}%
&$&+&-&>&D&J&L&S&Y&m&o&r&t&v&x&{&}&
3(."
DP\
HR]WW
&3WW
BPH4nnn:nnnnn
#&nT
nnnnDe
^^^@^^^
^^F^^^
$4nnn:nnnnn
#&nT
nnnnDe
^^^@^^^
^^F^^^
$,7>E
Cost Model Analysis
4c4
@Delinearization
....
agx.loader.state
"',05:?EKPU
Loop Access Analysis
liveOnEntry
Optimization Remark Emitter
i"iiiy
UUSS&0
#Fi|
1DYY
DJQl
NNNPP
TTTRR
ZZZ\\\   
(-7<2A
(1?FJM
#Ccfjqx
:L\r
SSSSSSS
SSSS
13QS
S!$5
'*7,/D
DDDDDDD
DDDD
258BD
!*U7UG
)]]]2@]]P
47<@EINX\`einqvzj
Y\`cg
RXcl
3Jbz
)7>EIPTX\cgnuy
17Ca
* %*
!%)-
UUUUUUUU-UTUDU
N36U
UQ:A
##TTTT5
**TTTTTTTT
%2SS
asm)
"B\cII
8@HO////////W
(;Occccm
yeyim
HKNRU
\_beh
hknruy
1DYY
1DYY
1<Cbeu
*;;;;;;06k
B&(*
FH024R
L@TV
dfNj^Z` h
yy
yy
!&+5=as|
!$'*
-0369?BEH
KNQWZ`flou{
RSbaa
e[^F
$$$$
DCCD
DCCC
P"Yf
>\yyy
$999
99A999HNU\d
-<Hc
.5=EN
-?:\,[]{}#&*!|>'"%@`
01234567
0123456789abcdefABCDEF
0123456789
Zh`
 #&(,/135
7r;BOQUY]aehk
np~}|{zyxwv
#*18?BIPegq
0369
////////.
PE33
PE33
?iii?iii????????
6333733333334333m
    
!!!!!!!!
!!!!!!!!
!!!!!!!!
!!!!!!!!!!!!!!!!!!
!!!!!!
!!!!!!!!
!!!!!!!!!!!!!!!!
!!!!!!!!!!
!!!!!!!!!!
!!!!!!!!!!!!!!!!!!
!!!!
!!!!!!
!!!!!!!!!!!!!!
!!!!!!!!
!!!!!!
!!!!!!!!
!!!!!!!!!!
!!!!
!!!!!!!!
!!!!
!!!!!!!!
%%%%
####
########################
#######
##################################&
BEHK-NQTW0
ilZ]`3'
or6cu
${<~?f
  DZq
ccccccccc
!$'*-0369<?BEHKN
:F?VV
-------
--;0>3
".ee
"""1115
-048;
259<
jmpsw
nqtwz}
$'*-0369<?BEHKNQTWZ]`dhlpsvy|
"%(+.258;>ADGJMQTX\_cfilptwz}
RVZ^
#&)-03]]]]]]]]]69<?BFILOSVZ
\"\8
!!!!
))))))
VVV;F
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
 n;^
Qkkbal
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
*<Oww
"/ll
!&/u7>EMU]e
111111
$$$$/$>
                                                                                
FsBB
PV\@FP]a
PV\@FP]a
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
3WWWWWWWWWWWWWWWWF)
\)d!l
))))
St12out_of_range
St11logic_error
St9exception
ffffff
!3>I
ATg
.LLLL;
/'*-
=*FXj
*<bb
"'hh

(IQt
$G'G*
GGGGG
"9%9(9+
b0$
8p@T
h!<e
*U"K
>}"P
O(hX
/_PP
",X@
`B L
1!@&
bB@M
TV3A@
lB1`L
C$|z
C$?*
\6p"
H!*D
H,+H
0D"aA
H6,H
Hp-@
0D:sA
Hy.@
0Dr{A
H'<@
H-=L
H;>P+
H/?83
H+H@=
H)I@g
H'J@q
0DzW
H"LD=
H(MDg
H.NDq
C$:'
0DJ}
HtX4
C$],
H:Y4
H;ZH
C$X-
Hi[H
Hi\4
Hp]H=
H~^Hg
H0iH
0DjQ#
H>jH#
C$Z5
HlkH+
0DJc#
HzlL
C$x7
Hbz4
H2|0
Hb~<
0D*A
0DJI
0DRS
C$=F
0D2s
C${G
0Db}
C$1L
!R+&
!RI&
f2q^
}&PN
!Rz'QN
C$4T
0DbK
0D:uE*
0DZwE:
!R:.
!RJ.Q~
C$V_
v0FP
p`8e
NK-5
P$v`
air.compile.denorms_disableair.compile.fast_math_disableair.compile.framebuffer_fetch_enableApple metal version 31001.638 (metalfe-31001.638.1)Metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/gen4/math_half.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/gen4_common/math.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/math_half.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/math.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/integer.metalwchar_sizeair.max_device_buffersair.max_constant_buffersair.max_threadgroup_buffersair.max_texturesair.max_read_write_texturesair.max_samplersfloatomnipotent charSimple C++ TBAAbranch_weightsint_ZTS9TableLine
 , 7
m0r#
m@r#
cPr#
c`r#
A2C
Ea0C@
0L} 
0X~ 
eYb 
7H*,M
2Kc+
T  A
2,Ap
2,B0
05f0
r)@@@
2K0t
   ,
?T    
0K@t
\0bp
|27m
A0@n.
G D
vnA!@
\0bp
|3Gq
A0@p.
G D
xnA!@
bool
A0@B.(&
F
\PB 
h#7T
1bP !
1K0T
T  A
2,Ap
2,B0
05f0
(2bP !
a0rA
!(F
sX`
(2bP !
a0rA
!(F
sX`
`0bP !
 (LR
(2bP !
a0rA
!(F
sX`
`0bP !
 (LR
dAF
 V/
(2bP !
a0rA
rAIA
AMAL7
 t.
@.Pp
(2bP !
a0rA
rAIA
AMAL7
 t.
@.Pp
*\0b+
2bP !
(2bP !
a0rA
rAIA
AMAL7
 t.
@.Pp
*\0b+
2bP !
!8F
A0@|/(!
^0sW@
YPB
A0@f&
T  A
2,Ap
2,B0
$(Kv
*0sf
q=~Q
T  A
2,Ap
2,B0
$(Kv
*0sf
tA/X
2|a/P
q=~Q
T  A
2,Ap
2,B0
$(Kv
*0sf
tA/X
2|a/P
 PEL
&h 0
q=~Q
\D!@`
<PDU
#MTe]X
ET%M*
F1bp
B1bp
C1bp
#pO|D
(2bp
\ $#
D2bp
\`$#
#8oW
%8*Id
AF
`0Fp
 \.
`0FP
 V.
bF
B0F2
 Z.
%(*Id
`0FP
 T.
g7FP
2bpt!
5bpt!
5bpt!
5bpt!
5bpt!
5bpt!
4bpt!
4bpt!
4bpt!
TK $-
4KPT
5K`t
 T.
-2(b
 \.
<:p*RA
-6(b
GAB
DL7DP0bp
\0bP !
sAQA
T7bp
`>Cu
~^eso
#Hg|
A0bP
1%x2
]@x#
$RJ %
`>Cu
~^eso
#Hg|
A0bP
]@|#
$RJ %
1bpt!
4bpt!
FAB
PnB1
`>Cu
~^eso
#Hg|
A0bP
]@|#
$RJ %
1bpt!
4bpt!
FAB
PnB1
0l@4
0l@(
[1bP
@9A
D0l@
0l@d
ERB
 )>@
T   D
A8hA
A0@RO
%HjA
A9F
2,L0bp
[PB
P@ (
`>Cu
2Y0
FPp`
vvPA
7x
2dH0
7 }
A0@|0hF
A0@~0(
R#($
A0@RJ(
E @
?T   D
A0K 
2@Gpo
O<9
A9F
2DR0bp
N1X@
[PB
P@ @
#8K]=
2TDPL
Y=[(!
s,n
B0KP
Jh%4
ZB-h
8E0bpt!
QA]@
`1bp
 RAX
TZ QJ
1bpt!
F0bpt!
1bP !
Q1"D)2"
G0bpt!
70%
E @H
DYP1X@
!@`
4@ 
&4B0
s,I
7$r@
7<v@
s,P"s
2s,
7T~ 
2PV0
YPi0
"Ha/
 RA.
2lZP
1bpt!
E0bpt!
!D0bpt!
G0bpt!
F0bpt!
aP7
uAAD
iQD
G0bpt!
M*! 0
&$D1
`?YT
]Pl#
 }sT 
2LLp
|~WA9
0bpt!
BgPA=@
$RJ %
1bpt!
P@ H
?T    
r0bp
4r0bp
<r0bp
Dr0bp
Lr0bp
6;`f
C L7
  PC:
0bP !
0bpt!
 wWR
#`u}d
# K^
28B0
j0bp
q0bp
,A3P
"Da
QD #
7#0*
dN~c
tbPE
2lAP
28OP
2bpt!
uPD #
xPC 
0bpt!
wwF`T
2`[0
2dZP
 3'7
C L7
]0|#
]p|#
@@@@
 Hvc
20D0
(k0bp
0k0bp
8k0bp
\QB@
C L7
z0bp
z0bp
z0bp
 zPI"
RB*H
0bP !
48F
!-0@
e0bp
gvCP
p AEf
]0bP !
^0bP !
2bP !
ap~A
T,P"(
^0X@
7 p@
28D0
p0bp
p0bp
Q@F
 z/
7dR0
@\`PB
b@7
!T,r@ 
L7B0
2,H0
2$J0P1
RA,\
r)@@@
2K0t
q=~q
Y0bP !
1bpt!
2bP !
;K0t\
h0bP
Y0bP !
1bpt!
S1bP !
tC 4
   ,
?T    
@s9c
EPA
0K@t
2(FP
wxFQ
/8MED
   ,
?T    
@{9c
EPA
0K@t
2(FP
wxFQ
EPA
20Np
/8MED
/8MED
   ,
?T    
EPA
,A1P
 $pP
2<KP
P00F
/8MED
/8MED
/8MED
BX ]
Z0bP !
\q!,(
1LA(d
 ZF
BX0]
;K`t\BA
sS 
 j-
D'{8
@ZF
BX@]
`!
;K`t\Ba
sS0
 l-
'|8
[0bP !
\q!,h
\q!,
2bP !
[ -#
\q!,
2bP !
2 IP
2bP !
[0-#
\q!,
2bP !
2 IPG
2bP !
2,LPG+
2bP !
n8"f
A0@ZN
BXp]
2bP !
1bpt!
n8$f
A0@\N
2bP !
1bpt!
LAF
KpHC!
n8&f
A0@^N
2bP !
1bpt!
NAF
KpLC1
2LT0
C1bP !
E$7
7 j
\q!,
B3KP
2(G0
Z0bP !
\q!,
7 k
\q!,
B3KP
2(G0
Z0bP !
\q!,
28O0
B1bP !
7 l
\q!,
B3KP
2(G0
Z0bP !
\q!,
28O0
B1bP !
2PQ0
\0bP !
\q!,@
YPB
`?YT
2 B0
E0bp
L7bp
P7Kp
D1bp
] t#
D7bp
]`t#
7}
20KP
$~0bp
,~0bp
4~0bp
<~0bp
`?YT
2 B0
E0bp
L7bp
P7Kp
D1bp
] t#
D7bp
]`t#
7}
20KP
$~0bp
,~0bp
4~0bp
<~0bp
0bPt!
`?YT
2 B0
E0bp
L7bp
P7Kp
D1bp
] t#
D7bp
]`t#
7}
20KP
$~0bp
,~0bp
4~0bp
<~0bp
0bPt!
2p[P
_H$ 1bp
0 1bp
@ 1K
KD1bp
 1bp
 1bp
 btT 
,>R[
A0@~
|6WA9
0bpt!
1bPt!
2LK0bP
A,0%
C L7
0bP !
0bpt!
E\7
C L7
e1bp
 eQI"
`PA9
4bpt!
0bP !
O|s
D Hq
A0@~
|6WA9
0bpt!
1bPt!
2LK0bP
A,0%
C L7
0bP !
0bpt!
E\7
C L7
e1bp
 eQI"
`PA9
4bpt!
0bP !
O|s
@&0bp
c2bp
c2bp
 'Rf
1bPt!
*XE+`
$RJ %
1bpt!
0bpt!
A0bPt!
A0bP
pCP/L
C L7
gPA9
4bpt!
n1X@
f1X0
A0@~
|6WA9
0bpt!
1bPt!
2LK0bP
A,0%
C L7
0bP !
0bpt!
E\7
C L7
e1bp
 eQI"
`PA9
4bpt!
0bP !
O|s
@&0bp
c2bp
c2bp
 'Rf
1bPt!
*XE+`
$RJ %
1bpt!
0bpt!
A0bPt!
A0bP
pCP/L
C L7
gPA9
4bpt!
 60bp
a3bp
a3bp
1bPt!
*TG+P
$RJ %
1bpt!
0bpt!
A0bPt!
B0bP
pC0?L
C L7
kPA9
4bpt!
j3X@
b3X0
P@ 
 wWR
#`u}d
# K^
28A0
2$JPh
2,LP|0
1bpt!
a$F
 $@b
(Tlp
QAHt
 wWR
#`u}d
# K^
28A0
2$JPh
2,LP|0
1bpt!
a$F
 $@b
(Tlp
z1bp
>Q
}2bp
p0bP
S0bp
qF1X@
 wWR
#`u}d
# K^
28A0
2$JPh
2,LP|0
1bpt!
a$F
 $@b
(Tlp
z1bp
>Q
}2bp
p0bP
S0bp
"DF
 0Bd
DD.X
7<&B
H%2bp
qT2X@
?T    
2LA0
A0K0
2LD0
t0bpt!
8t0bp
@t0bp
Ht0bp
2HPp
WA9
4bpt!
[AKh
&-F
(-F
C L7
r1bp
 rQI"
RBhH
aPA9
4bpt!
>}
  ~c
T'
HLa.X
aD!$
& FA@ 
P@ H
?T    
2LA0
A0K0
2LD0
t0bpt!
8t0bp
@t0bp
Ht0bp
2HPp
WA9
4bpt!
[AKh
&-F
(-F
C L7
r1bp
 rQI"
RBhH
aPA9
4bpt!
>}
  ~c
T'
HLa.X
>2bpt!
@>2bp
V`&{
f 7
P+0bp
 A>
FAB
P@ 
?T    
2LA0
A0K0
2LD0
t0bpt!
8t0bp
@t0bp
Ht0bp
2HPp
WA9
4bpt!
[AKh
&-F
(-F
C L7
r1bp
 rQI"
RBhH
aPA9
4bpt!
>}
  ~c
T'
HLa.X
>2bpt!
@>2bp
V`&{
f 7
P+0bp
n`hF
ffF
 xff
hfF
B0bP
C L7
  PC
<3bp
 <SI"
hPA9
4bpt!
M0K`
R!8b
!uF
  Rg
#uF
,>R[{
,!F
>}3
2bpt!
PD #
0bpt!
T.xT
wF`T
,!F
>}3
2bpt!
PD #
0bpt!
T.xT
wF`T
J%<*
k?#0*p
T,^%X
@0X@
,!F
>}3
2bpt!
PD #
0bpt!
T.xT
wF`T
J%<*
k?#0*p
T,^%X
A0@r0
7fA
2dZPE!#
f1bpt!
2bpt!
iQC 
t1bpt!
tQD #
^|1bpt!
1bpt!
QD #
\0XP
@@@@
 Hvc
 z'7
2,Ip
|sWA9
0bpt!
2DX0
< 1bp
$1bp
$1bp
D0Kp
 &?8
@@@@
 Hvc
 z'7
2,Ip
|sWA9
0bpt!
2DX0
< 1bp
$1bp
$1bp
D0Kp
 &?8
G_(%
4}1bp
b 7
P@ \
@@@@
 Hvc
 z'7
2,Ip
|sWA9
0bpt!
2DX0
< 1bp
$1bp
$1bp
D0Kp
 &?8
G_(%
4}1bp
b 7
7(%
d`"J
,%2bp
AS"#
<02bp
\QB@
P#42X
H@##
42bp
AA##
42bp
c"u#A
0bP !
o Jg
A0b`
>{+
 HF
2@I0
2@Jpm
bG2
7X0.
0bpt!
SI"#
0bpt!
0bpt!
B0F2
0LB#
0bpt!
$2bpt!
0bpt!
0bpt!
0bpt!
Xnj9
E @
$)a 
A0b`
>|+
 HF
2@I0
2@Jpm
bG2
7X0.
0bpt!
SI"#
0bpt!
0bpt!
zba%z
0LB#
-1bpt!
$2bpt!
-1bpt!
:1bpt!
;1bpt!
A0@X
|0bp
|PF 
}0bp
}0bp
tC He
A0@X
|0bp
|PF 
}0bp
}0bp
tC He
 f/
xA(^
A0@X
|0bp
|PF 
}0bp
}0bp
tC He
 f/
xA(^
_0bP !
QA #
 1bp
2KpU
,1Kp
L%X5
`P'1
 \0"
`0FP
A0@R
20G0
20H0bP
`0FP
A0@R
20G0
20H0bP
 P/
`0FP
A0@R
20G0
20H0bP
 P/
_1bP !
2TVP
H%X5
58F
!-0@
20MP
)1bp
<A5)
AOH<1bp
rAL7
EPF]
GA@ @
58F
!-0@
20MP
)1bp
<A5)
AOH<1bp
rAL7
EPF]
~$+8
)DF
J%-0@
H%k 
L2X0
58F
!-0@
20MP
)1bp
<A5)
AOH<1bp
rAL7
EPF]
~$+8
)DF
J%-0@
H%k 
V0.7
2p]P
2x_P
@9ATP+p
J0bp
TP2i
Pf#P
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
~pF
PB:
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
~pF
PB:
h17
E0bP !
A0bP !
2bP !
Pv1bp
Hso
4bPt!
sCP
4bPt!
sCP
4bPt!
sCP
,>R[
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
~pF
PB:
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
~pF
PB:
h17
E0bP !
A0bP !
2bP !
Pv1bp
Hso
`>Cu
~^eso
#Hg|
2 E0bP
A)0%
`>Cu
~^eso
#Hg|
2 E0bP
A)0%
20I0bP
`>Cu
~^eso
#Hg|
2 E0bP
A)0%
20I0bP
2@M0bP
C L7
/1bp
 /QI"
0bP !
0bpt!
)8se
PnB1
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
FAB
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
C?7
20I0bP
A;0%
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
C?7
20I0bP
A;0%
31bp
31bp
0bpt!
8!sf
FAB
PnB1
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
FAB
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
C?7
20I0bP
A;0%
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
C?7
20I0bP
A;0%
31bp
31bp
0bpt!
8!sf
FAB
PnB1
A0b`
0bpt!
$2bpt!
0bpt!
0bpt!
0bpt!
1P#8#
*$sf
552bpt!
0bpt!
SI"#
0bpt!
PT u
<eY2bpt!
0bpt!
0)8Zp
C0b`
A'~F-
,KF
F2
K= T
E @
E @
A0b`
0bpt!
$2bpt!
0bpt!
GvE 
0bpt!
0bpt!
1P#8#
*$sf
u52bpt!
-1bpt!
WI"#
.1bpt!
9QT E
|eY2bpt!
;1bpt!
`0Fp
A0@Z
]0bP !
QA #
T)1
`0Fp
A0@Z
]0bP !
QA #
T)1
A0@f
`0Fp
A0@Z
]0bP !
QA #
T)1
A0@f
_1bP !
2TVP&!D
$1bp
%1bp
`P+1
 \8"
`0FP
A0@T
wPI 
`0FP
A0@T
wPI 
A0@P
CF
`0FP
A0@T
wPI 
A0@P
CF
2`S0
2`T0bP
BM7
g0bp
gPP 
l@L7
A0bP !
0bpt!
]0bP !
L{0bp
RA!#
B0bP !
7~B.
2$JP
vb-F
A0@`0
2`N0
>0
i.F
 n1
0 b#
v|C
>w
qP!AT
R2X@
g0bp
gPP 
l@L7
A0bP !
0bpt!
]0bP !
L{0bp
RA!#
B0bP !
7~B.
2$JP
vb-F
A0@`0
2`N0
>0
i.F
 n1
0 b#
v|C
>w
qP!AT
0#f2bP
n(lD
72bp
<BL7
A0bp
Lk2bp
T`/i
P/YC
>a`
B4X@
g0bp
gPP 
l@L7
A0bP !
0bpt!
]0bP !
L{0bp
RA!#
B0bP !
7~B.
2$JP
vb-F
A0@`0
2`N0
>0
i.F
 n1
0 b#
v|C
>w
qP!AT
0#f2bP
n(lD
72bp
<BL7
A0bp
Lk2bp
T`/i
P/YC
>a`
z4 j&
H'-0@
 N5
4 B'
 (av
4bPt!
sCP
4bPt!
sCP
4bPt!
sCP
,>R[
g7FP
A0b`
QA #
[ \#
[0\#
[@\#
[pX#
cPA #
r0bpt!
r0bpt!
 q0bpt!
1lA.d
g7FP
2bpt!
6bpt!
6bpt!
6bpt!
6bpt!
6bpt!
5bpt!
5bpt!
5bpt!
UK 4-
4KPT
5K`t
2bpt!
s0bpt!
r0bpt!
0bpt!
E$4K
g7FP
A0b`
QA #
[ d#
[0d#
[@d#
[p`#
cPA #
t0bpt!
t0bpt!
 s0bpt!
ZAf
$'8?p
B0b`
0bpt!
0bpt!
2<PPDB
4s[
2bpt!
0bpt!
0bpt!
`z'A
A0@Z
82bp
A0@Z
82bp
R"@
  Pb
A0@Z
82bp
R"@
  Pb
2`S0
2`T0bP
A1bP !
A0bP !
n1bp
 nQJ 
82bp
y1bp
y1bp
A0@R
-3(b
20G0
20H0bP
A0@R
-3(b
20G0
20H0bP
A0@v
,~p*
@ M 
A0@R
-3(b
20G0
20H0bP
A0@v
,~p*
zba%z
QA #
21bp
9QO 
tC P
[aQ
r0bp
7wC 
r0bp
WwE 
\v0bp
dv0bp
lv0bp
tv0bp
ZAK
jAf
QpF
v/(R
<17
E0bP !
A0bP !
2bP !
ZBnd
Pk1bp
^Ds
eaj0Xp
r0bp
7wC 
r0bp
WwE 
\v0bp
dv0bp
lv0bp
tv0bp
ZAK
jAf
QpF
v/(R
<17
E0bP !
A0bP !
2bP !
ZBnd
Pk1bp
^Ds
RDK
$-0@
eaj0Xp
r0bp
7wC 
r0bp
WwE 
\v0bp
dv0bp
lv0bp
tv0bp
ZAK
jAf
QpF
v/(R
<17
E0bP !
A0bP !
2bP !
ZBnd
Pk1bp
^Ds
RDK
$-0@
 V.X
jE.X
J0bP !
A0bP !
+0bpt!
1bpt!
eab3Xp
eaj0Xp
dN~c
!top
2lAP
28OP^
2bpt!
xPD #
{PC 
0bpt!
;K`U+xT
wF`T 
2`[0
2dZPC.
bPEK
v0bP
11bpt!
7(3A
4QC 
?1bpt!
2bpt!
7p?
 (1
dN~c
!top
2lAP
28OP^
2bpt!
xPD #
{PC 
0bpt!
;K`U+xT
wF`T 
2`[0
2dZPC.
bPEK
v0bP
11bpt!
7(3A
4QC 
?1bpt!
2bpt!
7p?
APHm
A0@x1
BPE!#
1bpt!
1bpt!
2bpt!
F`TP
,A+7p
@0Xp
dN~c
!top
2lAP
28OP^
2bpt!
xPD #
{PC 
0bpt!
;K`U+xT
wF`T 
2`[0
2dZPC.
bPEK
v0bP
11bpt!
7(3A
4QC 
?1bpt!
2bpt!
7p?
APHm
A0@x1
BPE!#
1bpt!
1bpt!
2bpt!
F`TP
,A+7p
A0@@3
2bpt!
2bpt!
RD #
2bpt!
A.0K
p3X@
r1Xp
 (1
#8K]=
A`A
A0@\
aPg@
C0KP
,A5bP
"~|P
p!F
tC@
c1bp
QAZ@
 D0bpt!
A0bpt!
cP7
A-HT
k`Bb :c
?d0P
k@Cb@Cc@CdP
y(R"
E0bpt!
A0@H3
V@.<
J0K@
?x9>
 ^q0
7 =
!,H@
\p!6
 mF
5x~(
HH.X
,A/T
DYb5X@
"ia&
h2XP
! B2X0
"ia&
&4B0
&4B0
#8K]=
A`A
A0@\
aPg@
C0KP
,A5bP
"~|P
p!F
tC@
c1bp
QAZ@
 D0bpt!
A0bpt!
cP7
A-HT
k`Bb :c
?d0P
k@Cb@Cc@CdP
y(R"
E0bpt!
A0@H3
V@.<
J0K@
?x9>
 ^q0
7 =
!,H@
\p!6
 mF
5x~(
HH.X
,A/T
pCPK
s,n
S0K0
S0K0
r`)b
nP^J
VpSZ
"rj/
AT@ZP
o5bp
W0bP
[0K`
Q` D
G0bpt!
s@b}@
0bP
A3bP
1bpt!
F0bpt!
,>R[
@;X@
DYn9X@
!@P
"ia&
v6XP
! N6X0
H"Da(
DYV1X@
4@p 
&4B0
8|aB1
Da,
P@ 
Da,
#8K]=
A`A
A0@\
aPg@
C0KP
,A5bP
"~|P
p!F
tC@
c1bp
QAZ@
 D0bpt!
A0bpt!
cP7
A-HT
k`Bb :c
?d0P
k@Cb@Cc@CdP
y(R"
E0bpt!
A0@H3
V@.<
J0K@
?x9>
 ^q0
7 =
!,H@
\p!6
 mF
HH.X
,A/T
pCPK
s,n
S0K0
S0K0
r`)b
nP^J
VpSZ
"rj/
AT@ZP
o5bp
W0bP
[0K`
Q` D
G0bpt!
s@b}@
0bP
A3bP
1bpt!
F0bpt!
F-(!
/^"8c
V`jh
!x51
A&h"
A0@`;
[0K 
!090
7d
Z v p
HOJ+=
A0@F>hF
A0@H>(
L?X@
DYz=X@
"ia&
! Z:X0
H"Da(K
DYb5X@
"ia&
h2XP
! B2X0
"ia&
[PB
,&4B0
8ZbB1
Da,
P@ 
NaB#
7<y@
s,P"s
7l~
7p{ 
2DS0
TA-P
PA8@
A0bpt!
0bP
A3bP
_-HT
P91D
1bpt!
F0bpt!
Io(7
Vp"j
3hF
Pp/<p
<p/=
Pp/<p
(7!!
 I 
7<y@
s,P"s
7l~
7p{ 
2DS0
TA-P
PA8@
A0bpt!
0bP
A3bP
_-HT
P91D
1bpt!
F0bpt!
Io(7
Vp"j
3hF
Pp/<p
<p/=
Pp/<p
Ep7c
6bPB
6M0K 
C7d0
7xz
:bPB
HG- 
8E0bpt!
1bpt!
F0bpt!
1bP !
BTO$Ri
E0bpt!
7g47
"@Td
[PB
P@ 
&$D1
7<y@
s,P"s
7l~
7p{ 
2DS0
TA-P
PA8@
A0bpt!
0bP
A3bP
_-HT
P91D
1bpt!
F0bpt!
Io(7
Vp"j
3hF
P`/<`
/=(!W
A9F
Ep7c
6bPB
6M0K 
C7d0
7xz
:bPB
HG- 
8E0bpt!
1bpt!
F0bpt!
1bP !
BTO$Ri
E0bpt!
7g47
"@Td
C('|:a
4()b
TJJ
RXAH
 *p)
$F"(
A0@R3
D0bp
E @<
8PbB1
 I 
!Hdp
20APB
!T,
!F2P1
H"!
ZA/l5
2\R0
L7EP
"LBK(
q!S~
!Hdp
20APB
!T,
!F2P1
H"!
ZA/l5
2\R0
L7EP
"LBK(
Xl5b
 `gQ
'T,r
L7B0
A0P1
T,C
Hhs
@Du}#
!Hdp
20APB
!T,
!F2P1
H"!
ZA/l5
2\R0
L7EP
"LBK(
Xl5b
 `gQ
'T,r
L7B0
A0P1
T,C
Hhs
A0bP
[Ry`A
pC`"f`
q!Sm
T0X0
F0X@
A0b`
>|32l
4MF
~.HDa
0bpt!
0bpt!
0bpt!
0bpt!
1bpt!
0bpt!
0bpt!
0bpt!
0bpt!
"1bpt!
4MF
.HFa
0bpt!
0bpt!
0bpt!
0bpt!
1bpt!
0bpt!
0bpt!
0bpt!
0bpt!
#1bpt!
Znr9
b'F
C'F
A.F
B.F
B.F
D.F
"/F
!/F
|00J
 8Hc
>0
 HHc
>1
!B0X
A0b`
>}36m
~.8Ha
0F2
552bpt!
0bpt!
0bpt!
82bpt!
0bpt!
0bpt!
0bpt!
1bpt!
0bpt!
2bpt!
0bpt!
2bpt!
 $1bpt!
'~J@
v@4!
?$s
vBf
E0b`
/ xb
/8vb
",F
!,F
b.F
a.F
d.F
A/F
>0
 @Jc
>1
t10X
u52bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
'b"#
&2bpt!
$&2bpt!
!F1X
r)@@@
2K0t
q=~q
r)@@@
2K0t
  tp
q=~q
r)@@@
2K0t
  tp
[Q u
1pAKd
q=~q
r)@@@
2K0t
q=~q
r)@@@
2K0t
  tp
q=~q
r)@@@
2K0t
  tp
[Q u
1pAKd
q=~q
0T',
-`A
0T',
-`A
0T',
#`A
0T',
#`A
0T%TZ
p%tZ
0T%TZ
p%tZ
t%0Z
sQR
t%0Z
sQR
0T',
-`A
!Dd0
0T',
-`A
!Dd0
0T',
#`A
!Dd0
0T',
#`A
!Dd0
0T%TZ
p%tZ
0T%TZ
p%tZ
t%0Z
!PhP
t%0Z
!PhP
0T',
-`A
!Dd0
[PB
0T',
-`A
!Dd0
[PB
0T',
#`A
!Dd0
[PB
0T',
#`A
!Dd0
[PB
0T%TZ
p%tZ
0T%TZ
p%tZ
Z @@
t%0Z
!PhP
t%0Z
!PhP
0T',
NX ',
sQB
0T',
sQB
0T',
NX ',
sQB
0T',
sQB
sQR
sQR
0T',
NX ',
!Lgp
0T',
!Lgp
0T',
NX ',
!Lgp
0T',
!Lgp
!PhP
!PhP
0T',
NX ',
!Lgp
[PB
0T',
!Lgp
[PB
0T',
NX ',
!Lgp
[PB
0T',
!Lgp
[PB
[PB
Z @@
[PB
!PhP
[PB
!PhP
[PB
JpXp
D5b`t!
D5b`t!
D5b`t!
P-k0
D5b`t!
6b`t!
C@ls
D5b`t!
6b`t!
C@ls
D5b`t!
6b`t!
C@ls
2hD*
D5b`t!
6b`t!
,>R[
D5b`t!
6b`t!
,>R[
D5b`t!
6b`t!
,>R[
2hD*l
]( ZP@
D5b`t!
D5b`t!
D5b`t!
]( ZP@
.p%@f
 \pA
a"Ra
D5b`t!
6b`t!
C@ls
D5b`t!
6b`t!
C@ls
D5b`t!
6b`t!
C@ls
]( ZP@
.p%@f
 \pA
,A2P
,>R[
a"Ra
D5b`t!
6b`t!
,>R[
D5b`t!
6b`t!
,>R[
D5b`t!
6b`t!
,>R[
]( ZP@4f
.p%@f
 \pA
,A2P
,>r[
a"Ra
0bPt!
\p!2
4bPt!
4bPt!
4bPt!
0bPt!
a!Ra
4bPt!
,>R[
4bPt!
,>R[
4bPt!
,>R[
0bPt!
!LfP
a!Ra
2TD*
4bPt!
4bPt!
4bPt!
0bPt!
!LfP
bak
a!Ra
2TD*l
E0jB
U8jB
E$jB
U,jB
0T',
-`A
0T',
-`A
0T',
#`A
0T',
#`A
@X'\
@X'\
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
sk`
0T',
-`A
!Dd0
0T',
-`A
!Dd0
0T',
#`A
!Dd0
0T',
#`A
!Dd0
@X'\
!He0
@X'\
!He0
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
H@%|
0T',
-`A
!Dd0
[PB
0T',
-`A
!Dd0
[PB
0T',
#`A
!Dd0
[PB
0T',
#`A
!Dd0
[PB
@X'\
!He0
`!c
[PB
@X'\
!He0
`!c
[PB
E<jB
UDjB
@- $
L7H0
[PB
E0jB
U8jB
H@%g
H@%|
0PE+
[PB
E0jB
U8jB
E$jB
U,jB
nX 7,
aAX 
nX 7,
aAX H@
BX H@
ehXB
@- $
L7H`
ETXD
nX 7,
!Xi0
aAX 
!Xi0
nX 7,
!Xi0
aAX H@
!Xi0
!\k0
BX H@
!\k0
ehXB
@- $
L7H`
ZC+`
ETXD
PI(`%
nX 7,
!Xi0
[PB
aAX 
!Xi0
[PB
nX 7,
!Xi0
[PB
aAX H@
!Xi0
[PB
!\k0
[PB
BX H@
!\k0
[PB
ehXB
@- $
L7H`
ZC+`
[PB
ETXD
PI(`%
[PB
 dp
&,bR
R6,!
2:,!
E4jB
U<jB
$,BR
".5!
*25!
 dp
*JAM
elXB
@- $
$,BR
".5!
*25!
 dp
*JAM
L7H``
elXB
@- $
PA*`
PJ,`
$,BR
".5!
*25!
 dp
*JAM
L7H``
sqQ
n0X@
elXB
@- $
PA*`
PJ,`
[PB
\UCT i
sQR
sQR
HZCp
hZCp
0ZCp
sQR
!PhP
!PhP
HZCp
hZCp
0ZCp
!PhP
Wa0D
!PhP
pZd D
[PB
!PhP
pZb D
[PB
HZCp
hZCp
[PB
0ZCp
!PhP
Wa0D
!pn0
[PB
`?YT
]Pl#
 }sT 
`?YT
2 B0
E0bp
L7bp
P7Kp
D1bp
] t#
D7bp
]`t#
7}
20KP
$~0bp
,~0bp
4~0bp
<~0bp
#Uvq
`?YT
2 B0
E0bp
L7bp
P7Kp
D1bp
] t#
D7bp
]`t#
7}
20KP
$~0bp
,~0bp
4~0bp
<~0bp
0bPt!
#Uwq
`?YT
2 B0
E0bp
L7bp
P7Kp
D1bp
] t#
D7bp
]`t#
7}
20KP
$~0bp
,~0bp
4~0bp
<~0bp
0bPt!
2p[P
_H$ 1bp
0 1bp
@ 1K
KD1bp
 1bp
 1bp
 btT 
#Uxq
FA G
<P$M9
lnA5
FA G
<P$M1
2LLp
|~WA9
0bpt!
BgPA=@
$RJ %
1bpt!
Lf}`
0(7AA
A0@~
|6WA9
0bpt!
1bPt!
2LK0bP
A,0%
C L7
0bP !
0bpt!
E\7
C L7
e1bp
 eQI"
`PA9
4bpt!
0bP !
O|s
tTvq
N Da
A0@~
|6WA9
0bpt!
1bPt!
2LK0bP
A,0%
C L7
0bP !
0bpt!
E\7
C L7
e1bp
 eQI"
`PA9
4bpt!
0bP !
O|s
@&0bp
c2bp
c2bp
 'Rf
1bPt!
*XE+`
$RJ %
1bpt!
0bpt!
A0bPt!
A0bP
pCP/L
C L7
gPA9
4bpt!
tTwq
0k7AA
A0@~
|6WA9
0bpt!
1bPt!
2LK0bP
A,0%
C L7
0bP !
0bpt!
E\7
C L7
e1bp
 eQI"
`PA9
4bpt!
0bP !
O|s
@&0bp
c2bp
c2bp
 'Rf
1bPt!
*XE+`
$RJ %
1bpt!
0bpt!
A0bPt!
A0bP
pCP/L
C L7
gPA9
4bpt!
 60bp
a3bp
a3bp
1bPt!
*TG+P
$RJ %
1bpt!
0bpt!
A0bPt!
B0bP
pC0?L
C L7
kPA9
4bpt!
N Da
 wWR
#`u}d
# K^
28B0
j0bp
q0bp
,A3P
 wWR
#`u}d
# K^
28A0
2$JPh
2,LP|0
1bpt!
a$F
 $@b
(Tlp
 wWR
#`u}d
# K^
28A0
2$JPh
2,LP|0
1bpt!
a$F
 $@b
(Tlp
z1bp
>Q
}2bp
p0bP
S0bp
qF1X@
 wWR
#`u}d
# K^
28A0
2$JPh
2,LP|0
1bpt!
a$F
 $@b
(Tlp
z1bp
>Q
}2bp
p0bP
S0bp
"DF
 0Bd
DD.X
7<&B
H%2bp
qT2X@
QDB 
QDB 
FA G
<P$Mf
FA G
<P$M=
rnA5
FA G
<P$M4
\nA5
?T    
r0bpt!
4r0bp
<r0bp
Dr0bp
Lr0bp
6;`f
C L7
  PC:
0bP !
0bpt!
?T    
2LA0
A0K0
2LD0
t0bpt!
8t0bp
@t0bp
Ht0bp
2HPp
WA9
4bpt!
[AKh
&-F
(-F
C L7
r1bp
 rQI"
RBhH
aPA9
4bpt!
>}
  ~c
T'
HLa.X
HHsTvq
?T    
2LA0
A0K0
2LD0
t0bpt!
8t0bp
@t0bp
Ht0bp
2HPp
WA9
4bpt!
[AKh
&-F
(-F
C L7
r1bp
 rQI"
RBhH
aPA9
4bpt!
>}
  ~c
T'
HLa.X
>2bpt!
@>2bp
V`&{
f 7
P+0bp
D!$
?T    
2LA0
A0K0
2LD0
t0bpt!
8t0bp
@t0bp
Ht0bp
2HPp
WA9
4bpt!
[AKh
&-F
(-F
C L7
r1bp
 rQI"
RBhH
aPA9
4bpt!
>}
  ~c
T'
HLa.X
>2bpt!
@>2bp
V`&{
f 7
P+0bp
n`hF
ffF
 xff
hfF
B0bP
C L7
  PC
<3bp
 <SI"
hPA9
4bpt!
M0K`
R!8b
!uF
  Rg
#uF
D!$JY
`nA5
7#0*
,!F
>}3
2bpt!
PD #
0bpt!
T.xT
wF`T
,!F
>}3
2bpt!
PD #
0bpt!
T.xT
wF`T
J%<*
k?#0*p
T,^%X
,!F
>}3
2bpt!
PD #
0bpt!
T.xT
wF`T
J%<*
k?#0*p
T,^%X
A0@r0
7fA
2dZPE!#
f1bpt!
2bpt!
iQC 
t1bpt!
tQD #
^|1bpt!
1bpt!
QD #
@@@@
 Hvc
20D0
(k0bp
0k0bp
8k0bp
\QB@
C L7
z0bp
z0bp
z0bp
 zPI"
RB*H
0bP !
@@@@
 Hvc
 z'7
2,Ip
|sWA9
0bpt!
2DX0
< 1bp
$1bp
$1bp
D0Kp
 &?8
@@@@
 Hvc
 z'7
2,Ip
|sWA9
0bpt!
2DX0
< 1bp
$1bp
$1bp
D0Kp
 &?8
G_(%
4}1bp
b 7
GAB
@@@@
 Hvc
 z'7
2,Ip
|sWA9
0bpt!
2DX0
< 1bp
$1bp
$1bp
D0Kp
 &?8
G_(%
4}1bp
b 7
7(%
d`"J
,%2bp
AS"#
<02bp
\QB@
P#42X
H@##
42bp
AA##
42bp
c"u#A
0bP !
o Jg
FA G
<P$M3
bF
B0F2
A0b`
>{+
 HF
2@I0
2@Jpm
bG2
7X0.
0bpt!
SI"#
0bpt!
0bpt!
B0F2
0LB#
0bpt!
$2bpt!
0bpt!
0bpt!
0bpt!
Xnj9
A0b`
>|+
 HF
2@I0
2@Jpm
bG2
7X0.
0bpt!
SI"#
0bpt!
0bpt!
zba%z
0LB#
-1bpt!
$2bpt!
-1bpt!
:1bpt!
;1bpt!
 Z.
%(*Id
A0@X
|0bp
|PF 
}0bp
}0bp
tC He
A0@X
|0bp
|PF 
}0bp
}0bp
tC He
 f/
xA(^
A0@X
|0bp
|PF 
}0bp
}0bp
tC He
 f/
xA(^
_0bP !
QA #
 1bp
2KpU
,1Kp
L%X5
`P'1
 \0"
`0FP
 T.
#=Hq
`0FP
A0@R
20G0
20H0bP
#=He
`0FP
A0@R
20G0
20H0bP
 P/
#=Hu
`0FP
A0@R
20G0
20H0bP
 P/
_1bP !
2TVP
H%X5
48F
!-0@
GAB
58F
!-0@
20MP
)1bp
<A5)
AOH<1bp
rAL7
EPF]
tTvq
58F
!-0@
20MP
)1bp
<A5)
AOH<1bp
rAL7
EPF]
~$+8
)DF
J%-0@
H%k 
tTwq
58F
!-0@
20MP
)1bp
<A5)
AOH<1bp
rAL7
EPF]
~$+8
)DF
J%-0@
H%k 
V0.7
2p]P
2x_P
@9ATP+p
J0bp
TP2i
Pf#P
tTxq
FA G
<P$M/
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
~pF
PB:
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
~pF
PB:
h17
E0bP !
A0bP !
2bP !
Pv1bp
Hso
4bPt!
sCP
4bPt!
sCP
4bPt!
sCP
,>R[
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
~pF
PB:
 v.
D!-0@
@*(d
2(F0
B0bp
2bP !
a@{A
!`B>
7~AU
~pF
PB:
h17
E0bP !
A0bP !
2bP !
Pv1bp
Hso
`>Cu
~^eso
#Hg|
A0bP
1%x2
]@x#
$RJ %
1bpt!
4bpt!
`>Cu
~^eso
#Hg|
2 E0bP
A)0%
`>Cu
~^eso
#Hg|
2 E0bP
A)0%
20I0bP
`>Cu
~^eso
#Hg|
2 E0bP
A)0%
20I0bP
2@M0bP
C L7
/1bp
 /QI"
0bP !
0bpt!
)8se
`>Cu
~^eso
#Hg|
A0bP
]@|#
$RJ %
1bpt!
4bpt!
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
aWvq
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
C?7
20I0bP
A;0%
aWwq
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
C?7
20I0bP
A;0%
31bp
31bp
0bpt!
8!sf
aWxq
`>Cu
~^eso
#Hg|
A0bP
]@|#
$RJ %
1bpt!
4bpt!
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
C?7
20I0bP
A;0%
`>Cu
~^eso
#Hg|
|-WA9
0bpt!
C L7
0bP !
C?7
20I0bP
A;0%
31bp
31bp
0bpt!
8!sf
!$@b$D
$L"%Pb%T
%\B&b
&vB'r
$FB$J
%VB%Z
%d"&`
&hb&p
&lb't"'|
'x",
@ Da
<P$MTe]X
!$@b$D
$L"%Pb%T
%\B&b
&vB'r
%8*Id
AF
A0b`
0bpt!
$2bpt!
0bpt!
0bpt!
0bpt!
1P#8#
*$sf
552bpt!
0bpt!
SI"#
0bpt!
PT u
<eY2bpt!
0bpt!
0)8Zp
C0b`
A'~F-
,KF
F2
K= T
$)a 
A0b`
0bpt!
$2bpt!
0bpt!
GvE 
0bpt!
0bpt!
1P#8#
*$sf
u52bpt!
-1bpt!
WI"#
.1bpt!
9QT E
|eY2bpt!
;1bpt!
`0Fp
 \.
`0Fp
A0@Z
]0bP !
QA #
T)1
`0Fp
A0@Z
]0bP !
QA #
T)1
A0@f
`0Fp
A0@Z
]0bP !
QA #
T)1
A0@f
_1bP !
2TVP&!D
$1bp
%1bp
`P+1
 \8"
FA G
<P$MTe]X
`0FP
 V.
`0FP
A0@T
wPI 
`0FP
A0@T
wPI 
A0@P
CF
`0FP
A0@T
wPI 
A0@P
CF
2`S0
2`T0bP
BM7
FA G
<P$MTe]X
e0bp
gvCP
p AEf
]0bP !
^0bP !
2bP !
ap~A
T,P"(
^0X`B
g0bp
gPP 
l@L7
A0bP !
0bpt!
]0bP !
L{0bp
RA!#
B0bP !
7~B.
2$JP
vb-F
A0@`0
2`N0
>0
i.F
 n1
0 b#
v|C
>w
qP!AT
KHsTvq
R2X`B
g0bp
gPP 
l@L7
A0bP !
0bpt!
]0bP !
L{0bp
RA!#
B0bP !
7~B.
2$JP
vb-F
A0@`0
2`N0
>0
i.F
 n1
0 b#
v|C
>w
qP!AT
0#f2bP
n(lD
72bp
<BL7
A0bp
Lk2bp
T`/i
P/YC
>a`
KHsTwq
B4X`B
g0bp
gPP 
l@L7
A0bP !
0bpt!
]0bP !
L{0bp
RA!#
B0bP !
7~B.
2$JP
vb-F
A0@`0
2`N0
>0
i.F
 n1
0 b#
v|C
>w
qP!AT
0#f2bP
n(lD
72bp
<BL7
A0bp
Lk2bp
T`/i
P/YC
>a`
z4 j&
H'-0@
 N5
4 B'
 (av
KHsTxq
5X`B
dnA5
4bPt!
sCP
4bPt!
sCP
4bPt!
sCP
,>R[
g7FP
2bpt!
5bpt!
5bpt!
5bpt!
5bpt!
5bpt!
4bpt!
4bpt!
4bpt!
TK $-
4KPT
5K`t
g7FP
A0b`
QA #
[ \#
[0\#
[@\#
[pX#
cPA #
r0bpt!
r0bpt!
 q0bpt!
1lA.d
g7FP
2bpt!
6bpt!
6bpt!
6bpt!
6bpt!
6bpt!
5bpt!
5bpt!
5bpt!
UK 4-
4KPT
5K`t
2bpt!
s0bpt!
r0bpt!
0bpt!
E$4K
g7FP
A0b`
QA #
[ d#
[0d#
[@d#
[p`#
cPA #
t0bpt!
t0bpt!
 s0bpt!
ZAf
$'8?p
B0b`
0bpt!
0bpt!
2<PPDB
4s[
2bpt!
0bpt!
0bpt!
`z'A
 \.
<:p*RA
-6(b
A0@Z
82bp
A0@Z
82bp
R"@
  Pb
A0@Z
82bp
R"@
  Pb
2`S0
2`T0bP
A1bP !
A0bP !
n1bp
 nQJ 
82bp
y1bp
y1bp
3ITe]X
 T.
-2(b
A0@R
-3(b
20G0
20H0bP
A0@R
-3(b
20G0
20H0bP
A0@v
,~p*
A0@R
-3(b
20G0
20H0bP
A0@v
,~p*
zba%z
QA #
21bp
9QO 
tC P
[aQ
@ Da
`82(
$BB$F
%RB%V
&bB&f
'rB'v
5Tc5R
5dc6b
6rC7pc7n
FRDEV
EBDDF
DrDGv
GbDFf
TREUV
VBETF
TbEVn
WrEWv
_@&dDfdH
dP&eTfeX
e`&fdffh
fp&gtfgx
o@'tDgtH
tP'uTguX
u`'vdgvh
vp'wtgwx
XnA>
7 p@
28D0
p0bp
p0bp
Q@F
 z/
r0bp
7wC 
r0bp
WwE 
\v0bp
dv0bp
lv0bp
tv0bp
ZAK
jAf
QpF
v/(R
<17
E0bP !
A0bP !
2bP !
ZBnd
Pk1bp
^Ds
O@sTvq
r0bp
7wC 
r0bp
WwE 
\v0bp
dv0bp
lv0bp
tv0bp
ZAK
jAf
QpF
v/(R
<17
E0bP !
A0bP !
2bP !
ZBnd
Pk1bp
^Ds
RDK
$-0@
O@sTwq
GAB
r0bp
7wC 
r0bp
WwE 
\v0bp
dv0bp
lv0bp
tv0bp
ZAK
jAf
QpF
v/(R
<17
E0bP !
A0bP !
2bP !
ZBnd
Pk1bp
^Ds
RDK
$-0@
 V.X
jE.X
J0bP !
A0bP !
+0bpt!
1bpt!
O@sTxq
DJEY
fnA5
dN~c
tbPE
2lAP
28OP
2bpt!
uPD #
xPC 
0bpt!
wwF`T
2`[0
2dZP
dN~c
!top
2lAP
28OP^
2bpt!
xPD #
{PC 
0bpt!
;K`U+xT
wF`T 
2`[0
2dZPC.
bPEK
v0bP
11bpt!
7(3A
4QC 
?1bpt!
2bpt!
7p?
`1X@
 (1
dN~c
!top
2lAP
28OP^
2bpt!
xPD #
{PC 
0bpt!
;K`U+xT
wF`T 
2`[0
2dZPC.
bPEK
v0bP
11bpt!
7(3A
4QC 
?1bpt!
2bpt!
7p?
APHm
A0@x1
BPE!#
1bpt!
1bpt!
2bpt!
F`TP
,A+7p
@AB
dN~c
!top
2lAP
28OP^
2bpt!
xPD #
{PC 
0bpt!
;K`U+xT
wF`T 
2`[0
2dZPC.
bPEK
v0bP
11bpt!
7(3A
4QC 
?1bpt!
2bpt!
7p?
APHm
A0@x1
BPE!#
1bpt!
1bpt!
2bpt!
F`TP
,A+7p
A0@@3
2bpt!
2bpt!
RD #
2bpt!
A.0K
D4X@
@AB
FA G
$]VEi
3ITe]X
bnA5
#8K]=
2TDPL
Y=[(!
s,n
B0KP
Jh%4
ZB-h
8E0bpt!
QA]@
`1bp
 RAX
TZ QJ
1bpt!
F0bpt!
1bP !
Q1"D)2"
G0bpt!
70%
B2XP
4@p Ia
,(7AA
#8K]=
A`A
A0@\
aPg@
C0KP
,A5bP
"~|P
p!F
tC@
c1bp
QAZ@
 D0bpt!
A0bpt!
cP7
A-HT
k`Bb :c
?d0P
k@Cb@Cc@CdP
y(R"
E0bpt!
A0@H3
V@.<
J0K@
?x9>
 ^q0
7 =
!,H@
\p!6
 mF
5x~(
HH.X
,A/T
a J3X
r0X0
#8K]=
A`A
A0@\
aPg@
C0KP
,A5bP
"~|P
p!F
tC@
c1bp
QAZ@
 D0bpt!
A0bpt!
cP7
A-HT
k`Bb :c
?d0P
k@Cb@Cc@CdP
y(R"
E0bpt!
A0@H3
V@.<
J0K@
?x9>
 ^q0
7 =
!,H@
\p!6
 mF
5x~(
HH.X
,A/T
pCPK
s,n
S0K0
S0K0
r`)b
nP^J
VpSZ
"rj/
AT@ZP
o5bp
W0bP
[0K`
Q` D
G0bpt!
s@b}@
0bP
A3bP
1bpt!
F0bpt!
,>R[
a V7X
AYJ7X@
~4X0
 @ X
#8K]=
A`A
A0@\
aPg@
C0KP
,A5bP
"~|P
p!F
tC@
c1bp
QAZ@
 D0bpt!
A0bpt!
cP7
A-HT
k`Bb :c
?d0P
k@Cb@Cc@CdP
y(R"
E0bpt!
A0@H3
V@.<
J0K@
?x9>
 ^q0
7 =
!,H@
\p!6
 mF
HH.X
,A/T
pCPK
s,n
S0K0
S0K0
r`)b
nP^J
VpSZ
"rj/
AT@ZP
o5bp
W0bP
[0K`
Q` D
G0bpt!
s@b}@
0bP
A3bP
1bpt!
F0bpt!
F-(!
/^"8c
V`jh
!x51
A&h"
A0@`;
[0K 
!090
7d
Z v p
HOJ+=
A0@F>hF
A0@H>(
J?XP
a b;X
AYV;X@
D!@
FAB
s,I
7$r@
7<v@
s,P"s
2s,
7T~ 
2PV0
YPi0
"Ha/
 RA.
2lZP
1bpt!
E0bpt!
!D0bpt!
G0bpt!
F0bpt!
aP7
uAAD
iQD
G0bpt!
M*! 0
 (7!9
7<y@
s,P"s
7l~
7p{ 
2DS0
TA-P
PA8@
A0bpt!
0bP
A3bP
_-HT
P91D
1bpt!
F0bpt!
Io(7
Vp"j
3hF
Pp/<p
<p/=
Pp/<p
7<y@
s,P"s
7l~
7p{ 
2DS0
TA-P
PA8@
A0bpt!
0bP
A3bP
_-HT
P91D
1bpt!
F0bpt!
Io(7
Vp"j
3hF
Pp/<p
<p/=
Pp/<p
Ep7c
6bPB
6M0K 
C7d0
7xz
:bPB
HG- 
8E0bpt!
1bpt!
F0bpt!
1bP !
BTO$Ri
E0bpt!
7g47
"@Td
7<y@
s,P"s
7l~
7p{ 
2DS0
TA-P
PA8@
A0bpt!
0bP
A3bP
_-HT
P91D
1bpt!
F0bpt!
Io(7
Vp"j
3hF
P`/<`
/=(!W
A9F
Ep7c
6bPB
6M0K 
C7d0
7xz
:bPB
HG- 
8E0bpt!
1bpt!
F0bpt!
1bP !
BTO$Ri
E0bpt!
7g47
"@Td
C('|:a
4()b
TJJ
RXAH
 *p)
$F"(
A0@R3
D0bp
#Da
$BB$F
%RB%V
&bB&f
'rB'v
5BC4RC5
6bC6j
<rC7
#D@DDRDEN
FbDFj
G~dGx
LrDG
FpDL
O@%TDeTH
TP%UTeUX
U`%VdeVh
Vp%WteWx
_@&dDfdH
dP&eTfeX
e`&fdffh
fp&gtfgx
o@'tDgtH
tP'uTguX
u`'vdgvh
vp'wtgwx
k`,h
bA\0
FA G
MTe]X
8R4Q
Ee]X
FA G
MTe]X
$BB$F
%RB%V
&bB&f
'rB'v
4VC5R
6fC6n
6jC7r
8R4Q
@"$Db$H
$P"%Tb%X
%`"&db&h
&p"'tb'x
B<xc<
=|#=
#5T#?VC?Xc?Z
Dd#DfCDF
ERDEV
FbDFf
GrDGv
OjCT
Op#7tc7
7dR0
@\`PB
b@7
!T,r@ 
L7B0
2,H0
2$J0P1
RA,\
!Hdp
20APB
!T,
!F2P1
H"!
ZA/l5
2\R0
L7EP
"LBK(
^0XP
!Hdp
20APB
!T,
!F2P1
H"!
ZA/l5
2\R0
L7EP
"LBK(
Xl5b
 `gQ
'T,r
L7B0
A0P1
T,C
Hhs
3Twq
q!Sn
d1XP
 &
!Hdp
20APB
!T,
!F2P1
H"!
ZA/l5
2\R0
L7EP
"LBK(
Xl5b
 `gQ
'T,r
L7B0
A0P1
T,C
Hhs
A0bP
[Ry`A
pC`"f`
q!Sm
j2XP
^0XP
%N"%Lb%T
%XB&b
&hb&j
'zB'v
&nB,
/BC4F
5RC5V
6bC6f
7rC7v
#DDdDH
DP$ETdEX
E`$FddFh
Fp$GtdGx
O@%TDeTH
TP%UTeUX
U`%VdeVh
Vp%WteWx
_@&dDfdH
dP&eTfeX
e`&fdffh
fp&gtfgx
tBGtF
uRGuV
vbGvnnA
FAB
a$P"%T
$Nb%H
%`"&Z
%db&h
&p"'tb'x
/@#4Dc4HC,Jc,L
-V#-XC-Z
6bC6f
7rC7v
?D$DJ
DVDER
FfDFn
FjDGr
$N`nA;
@ Da
<P$M`
mTe]l
""2"$R"&r"(
#22#4R#6
&a"&cB&eb&g
'q"'sB'ub'w
"2%c2$s2#
31#33C35c37
3>#6;
3:C6i
6ks6h
6ec6m
7q#7n
6sC7uc7w
B!$B
?#DB%dB'
C24C4TC6tC8
Fb4FdTFftFh
Gr4GtTGvtGx
R"5R$UR&uR(
S25S4US6uS8
Vb5VdUVfuVh
Wr5WtUWvuWx
b"6b$Vb&vb(
c26c4Vc6vc8
fb6fdVffvfh
gr6gtVgvvgx
r"7r$Wr&wr(
s27s4Ws6ws8
vb7vdWvfwvh
wr7wtWwvwwx
$Tb%
4\C5^
6b#5P#4J
4Dc4L
4BETFE6f
6n#M
MrDGp
G|$L
FhdUV
7rC7\DE^
Fb$EPDFf
DBdDL
7zc>
Fff&fl
ftfgp&g\
dbEVf
eRFeD&dV
WzeW
W~%\
e\p%Wt
&|zG|
|xgw
|bGv`
vl'wt
nLGtN
uR't@GuV
L08
T0X
\0x
PD1
RL18
TT1X
V\1x
Xd1
Zl1
\t1
^|1
L28
T2X
\2x
L38
T3X
\3x
4^gq
KH#8Rq
A0b`
>|32l
4MF
~.HDa
0bpt!
0bpt!
0bpt!
0bpt!
1bpt!
0bpt!
0bpt!
0bpt!
0bpt!
"1bpt!
KH#8Re
4MF
.HFa
0bpt!
0bpt!
0bpt!
0bpt!
1bpt!
0bpt!
0bpt!
0bpt!
0bpt!
#1bpt!
Znr9
b'F
C'F
A.F
B.F
B.F
D.F
"/F
!/F
|00J
 8Hc
>0
 HHc
>1
KH#8Ru
4@ $
A0b`
>}36m
~.8Ha
0F2
552bpt!
0bpt!
0bpt!
82bpt!
0bpt!
0bpt!
0bpt!
1bpt!
0bpt!
2bpt!
0bpt!
2bpt!
 $1bpt!
'~J@
v@4!
?$s
vBf
E0b`
/ xb
/8vb
",F
!,F
b.F
a.F
d.F
A/F
>0
 @Jc
>1
t10X
u52bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
1bpt!
'b"#
&2bpt!
$&2bpt!
KH#8R
4@ $
$9
%FB%V"%^
%d"&`
&p"'tb'x
4BC4F
5RC5V
6bC6f
7|c7~C7
DBDDF
ERDEV
FbDFf
Fp$GnDGldGj
L|$LzDL
TBETF
UREUV
VbEVf
WrEW~
dBFdF
eRFeV
fbFff
fvFgx&gz
tNGtP'uB
uZgu\
uT'vd
vrGwn
H0(
P0H
X0h
?@1
QH1(
SP1H
UX1h
W`1
Yh1
[p1
]x1
H2(
<B`e
" B":
@"$Db$H
%NB%R
&^B&b
'nB'r
,~B,
6r#9
Q*%S"
Ub%X
Yr%Z
tR'}
'zb'
'w2)
33;34K35
9#5Q
P35?
UK5Uc
Wk5W
}{7w
F0 
N0@
V0`
QF1 
SN1@
UV1`
W^1
Yf1
[n1
]v1
_~1
F2 
N2@
V2`
F3 
N3@
V3`
<B`e
@"$Db$H
%NB%R
&^B&b
'nB'r
,~B,
%RB%V
4P#5Tc5X
5\#<
#=p#7tc7x
5`#6dc6h
4BC4F
/`"&db&h
&pb>
"'tb'x
GrDGv
G~DN
?@$DDdDHdO
O@%TDeT\
E`$FddFh
DP$ETdEX
TP%UTeUX
Vp%WteWx
U`%VdeVh
fbFff
grFgvFdF
eRFeV
o@'tD'm
vbGvf
wrGwv
uRGuV
'}bH
L08
T0X
|0@
\0x
PB1
QH1(
SP1H
UX1h
W`1
Yh1
[p1
]x1
H2(
P2H
X2h
X3h
\3x
\5x
HP(A
PPHAA
XPhA
PHCA
HQ(E
PQHEA
XQhE
QHGA
HR(I
PRHIA%
XRhI
RHKA-
HS(M
PSHMA5
XShM
SHOA=
HT(Q
PTHQAE
XThQ
THSAM
HU(U
PUHUAU
XUhU
UHWA]
HV(Y
PVHYAe
XVhY
VH[Am
HW(]
PWH]Au
XWh]
WH_A}
HX(a
PXHaA
XXha
XHcA
HY(e
PYHeA
XYhe
YHgA
HZ(i
PZHiA
XZhi
ZHkA
H[(m
P[HmA
X[hm
[HoA
H\(q
P\HqA
X\hq
\HsA
H](u
P]HuA
X]hu
]HwA
H^(y
P^HyA
X^hy
^H{A
H_(}
P_H}A
X_h}
$BB$F
$VB%X"%Z
$d"&f
'xb't"'
.`nAo
#2*#3:#4J#5Z#6j#7z#8
%R*%S:%TJ%UZ%Vj%Wz%X
'r*'s:'tJ'uZ'vj'wz'x
0T',
-`A
0T',
-`A
0T',
#`A
0T',
#`A
0T%TZ
p%tZ
0T%TZ
p%tZ
t%0Z
sQR
t%0Z
sQR
0T',
-`A
!Dd0
0T',
-`A
!Dd0
0T',
#`A
!Dd0
0T',
#`A
!Dd0
0T%TZ
p%tZ
0T%TZ
p%tZ
t%0Z
!PhP
t%0Z
!PhP
0T',
-`A
!Dd0
0T',
-`A
!Dd0
0T',
#`A
!Dd0
0T',
#`A
!Dd0
0T%TZ
p%tZ
0T%TZ
p%tZ
Z @@
t%0Z
!PhP
t%0Z
!PhP
0T',
NX ',
sQB
0T',
sQB
0T',
NX ',
sQB
0T',
sQB
sQR
sQR
0T',
NX ',
!Lgp
0T',
!Lgp
0T',
NX ',
!Lgp
0T',
!Lgp
!PhP
!PhP
0T',
NX ',
!Lgp
0T',
!Lgp
0T',
NX ',
!Lgp
0T',
!Lgp
Z @@
!PhP
!PhP
JpXp
D5b`t!
D5b`t!
D5b`t!
P-k0
D5b`t!
6b`t!
C@ls
D5b`t!
6b`t!
C@ls
D5b`t!
6b`t!
C@ls
\Fyp
2hD*
D5b`t!
6b`t!
,>R[
D5b`t!
6b`t!
,>R[
D5b`t!
6b`t!
,>R[
2hD*l
]( ZP@
D5b`t!
D5b`t!
D5b`t!
]( ZP@
.p%@f
 \pA
a"Ra
D5b`t!
6b`t!
C@ls
D5b`t!
6b`t!
C@ls
D5b`t!
6b`t!
C@ls
]( ZP@
.p%@f
 \pA
,A2P
,>R[
a"Ra
D5b`t!
6b`t!
,>R[
D5b`t!
6b`t!
,>R[
D5b`t!
6b`t!
,>R[
]( ZP@4f
.p%@f
 \pA
,A2P
a"Ra
r*'s:'tJ
b!|j!
#2*#3:#4J#5
J%UZ%Vj
")Wz%X
E0jB
U8jB
E$jB
U,jB
0T',
-`A
0T',
-`A
0T',
#`A
0T',
#`A
@X'\
@X'\
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
sk`
0T',
-`A
!Dd0
0T',
-`A
!Dd0
0T',
#`A
!Dd0
0T',
#`A
!Dd0
@X'\
!He0
@X'\
!He0
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
H@%|
0T',
-`A
!Dd0
0T',
-`A
!Dd0
0T',
#`A
!Dd0
0T',
#`A
!Dd0
@X'\
!He0
`!c
@X'\
!He0
`!c
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
H@%|
0PE+
E0jB
U8jB
E$jB
U,jB
nX 7,
aAX 
nX 7,
aAX H@
BX H@
ehXB
@- $
L7H`
ETXD
nX 7,
!Xi0
aAX 
!Xi0
nX 7,
!Xi0
aAX H@
!Xi0
!\k0
BX H@
!\k0
ehXB
@- $
L7H`
ZC+`
ETXD
PI(`%
nX 7,
!Xi0
aAX 
!Xi0
nX 7,
!Xi0
aAX H@
!Xi0
!\k0
BX H@
!\k0
ehXB
@- $
L7H`
ZC+`
ETXD
PI(`%
 dp
&,bR
R6,!
2:,!
E4jB
U<jB
$,BR
".5!
*25!
 dp
*JAM
elXB
@- $
$,BR
".5!
*25!
 dp
*JAM
L7H``
elXB
@- $
PA*`
PJ,`
$,BR
".5!
*25!
 dp
*JAM
L7H``
sqQ
n0X@
elXB
@- $
PA*`
PJ,`
$BB$F
%RB%V
&bB&f
'rB'v
4BC4F
5RC5V
6bC6f
7rC7v
DBDDF
ERDEV
FbDFf
GzDL
TBETF
UREVf
VbEUV
WrEWv
dBFdF
eRFeV
fbFff
grFl
tBGo
uRGuV
vbGvf
wrGwv
\UCT i
sQR
sQR
HZCp
hZCp
0ZCp
sQR
!PhP
!PhP
HZCp
hZCp
0ZCp
!PhP
Wa0D
!PhP
pZd D
!PhP
pZb D
HZCp
hZCp
Db$H
$P"%T
&^B&b
'nB'r
"4FC4J
0ZCp
!PhP
Wa0D
!pn0
$BB$F
%RB%V
'rB'v
&bB&f
B4Bc4@
"5PC5Nc5L
5X#6`C6f
7rC7v
DBDDF
ERDEV
FbDFf
GrDGv
TBETF
UREUV
VbEVf
WrEWv
dBFdF
eRFeV
fbFff
grFgv
tBGtF
uRGuV
vbGvf
wrGwv
0bPt!
\p!2
4bPt!
4bPt!
4bPt!
0bPt!
a!Ra
4bPt!
,>R[
4bPt!
,>R[
4bPt!
,>R[
0bPt!
!LfP
a!Ra
2TD*
4bPt!
4bPt!
4bPt!
0bPt!
!LfP
bak
a!Ra
2TD*l
$BB$F
%RB%V
&bB&f
'rB'v
4RC5V
4bC6BC4rC7n
DBDDF
ERDEV
FbDFf
GrDGv
DOBET
TREUF
VbEVf
WrEWv
dBFdF
eRFeV
fbFff
grFgv
tBGtF
uRGuV
vbGvf
wrGwv
"!""#B"%b"'
#1"#3B#5b#7
&a"&cB&eb&g
'q"'sB'ub'w
2!#2#C2%c2'
31#33C35c37
6a#6cC6ec6g
7q#7sC7uc7w
B!$B#DB%dB'
C1$C3DC5dC7
Fa$FcDFedFg
Gq$GsDGudGw
R!%R#ER%eR'
S1%S3ES5eS7
Va%VcEVeeVg
Wq%WsEWueWw
_(Vb&vb)
b"6b+
fa&f;
ccFfeff7Fc5fcg
fo&gsFgu
fkfgw
r!'r#'
"!""#B"%b"'
#1"#3B#5b#7
&a"&cB&eb&g
'q"'sB'ub'w
2!#2#C2%c2'
31#33C35c37
6cC6ec6g
7q#7sC7uc7w
B!$B#DB%dB'
C1$C3DC5dC7
Fa$FcDFedFg
Gq$GsDGudGw
R!%R#ER%eR'
S1%S3ES5eS7
Va%VcEVeeVg
Wq%WsEWueWw
b!&b#Fb%fb'
c1&c3Fc5fc7
fa&fcFfeffg
gq&gsFgufgw
r!'r#
6r#42
Ub%Z
rR'q
yj'w
32+33;34K35[36k37{38
5R+5S;5TK5U[5Vk5W{5X
5r+7s;7tK7u[7vk7w{7x
J00
R0P
Z0p
PB1
RJ10
TR1P
VZ1p
Xb1
Zj1
\r1
^z1
J20
R2P
Z2p
J30
R3P
Z3p
0X!(
3xQ:
BXC)
EHTk
SH%?
* )>
x*0;>
*0N>
+p}>
-PI?
H.@l?
8 YH
9p_H
:`YI
<`{O
=`+Z
x?P;]
?`h^
hI0Zk
L )~
L0/~
XM N~
M ~~
xXP-
8Y ~
xZP
x[@N
X^p}
8h`o
Xh |
_ZL9TwoOverPi_ZL8expTable_ZL10exp10Table_ZL18asConstRange_hi_in_ZL18asConstRange_lo_in_ZL19asConstRange_hi_out_ZL19asConstRange_lo_out__sin_for_halfllvm.agx1.sinc.f32air.ldexp.f16add2float__metal_tanf32_internalair.ldexp.f32air.clamp.s.i32air.convert.f.f32.u.i64air.convert.f.f32.u.i32reduceair.fma.f32air.convert.s.i32.f.f32air.convert.f.f32.s.i32air.fabs.f32reduce_tan__nan_half__isnan_or_isinf_half__reflect_negate__metal_copysignf16__reduce_2_common__reduce_2_sin__reduce_2_cosair.sinpi.f16air.cospi.f16air.tanpi.f16__metal_ldexpf16_basicair.cospi.v2f16air.cospi.v3f16air.cospi.v4f16air.sinpi.v2f16air.sinpi.v3f16air.sinpi.v4f16air.tanpi.v2f16air.tanpi.v3f16air.tanpi.v4f16air.ldexp.v2f16air.ldexp.v3f16air.ldexp.v4f16__isnan_or_isinf__isinf__isnormal__isnan__nan__inf__exponent__mantissa__metal_copysignf32cosPolyllvm.fmuladd.f32__metal_rcpf32sinPolycospiPolysinpiPolytanpiPolyfast_cospiPolyfast_sinpiPolyfast_tanpiPoly__metal_sinf32llvm.lifetime.start.p0i8llvm.lifetime.end.p0i8__metal_sinpif32__metal_fast_sinpif32__metal_cosf32__metal_cospif32__metal_fast_cospif32__metal_tanf32__metal_fast_tanpif32__metal_tanpif32__metal_sincosf32__metal_expf32_kernel__metal_expf32__metal_exp10f32__metal_logf32__metal_log2f32__metal_log10f32__metal_add12f__metal_add22f__metal_add12condf__metal_add22condf__metal_mul12f__metal_mul22f__metal_mul122f__metal_log2_precise__metal_pow_common__metal_pow_internal__metal_powr_internal__metal_powf32__metal_powrf32__metal_acosf32__metal_acoshf32__metal_asinhf32__metal_asinf32atanfPoly__metal_atanf32__metal_atan2f32__metal_log1pf32__metal_atanhf32__metal_coshf32__metal_sinhf32__metal_tanhf32__metal_fmodf32air.fast_ldexp.f32air.convert.u.i64.f.f32air.convert.u.i32.f.f32air.convert.s.i64.f.f32air.convert.u.i64.f.f16air.convert.s.i64.f.f16air.convert.f.v2f32.u.v2i64air.convert.f.v3f32.u.v3i64air.convert.f.v4f32.u.v4i64air.convert.u.v2i64.f.v2f32air.convert.u.v3i64.f.v3f32air.convert.u.v4i64.f.v4f32air.convert.u.v2i64.f.v2f16air.convert.u.v3i64.f.v3f16air.convert.u.v4i64.f.v4f16air.convert.s.v2i64.f.v2f32air.convert.s.v3i64.f.v3f32air.convert.s.v4i64.f.v4f32air.convert.s.v2i64.f.v2f16air.convert.s.v3i64.f.v3f16air.convert.s.v4i64.f.v4f16__metal_acosv2f32__metal_acosv3f32__metal_acosv4f32__metal_acoshv2f32__metal_acoshv3f32__metal_acoshv4f32__metal_asinv2f32__metal_asinv3f32__metal_asinv4f32__metal_asinhv2f32__metal_asinhv3f32__metal_asinhv4f32__metal_atanv2f32__metal_atanv3f32__metal_atanv4f32__metal_atanhv2f32__metal_atanhv3f32__metal_atanhv4f32__metal_cosv2f32__metal_cosv3f32__metal_cosv4f32__metal_cospiv2f32__metal_cospiv3f32__metal_cospiv4f32__metal_fast_cospiv2f32__metal_fast_cospiv3f32__metal_fast_cospiv4f32__metal_coshv2f32__metal_coshv3f32__metal_coshv4f32__metal_expv2f32__metal_expv3f32__metal_expv4f32__metal_exp2v2f32__metal_exp2v3f32__metal_exp2v4f32__metal_exp10v2f32__metal_exp10v3f32__metal_exp10v4f32__metal_logv2f32__metal_logv3f32__metal_logv4f32__metal_log2v2f32__metal_log2v3f32__metal_log2v4f32__metal_log10v2f32__metal_log10v3f32__metal_log10v4f32__metal_sinv2f32__metal_sinv3f32__metal_sinv4f32__metal_sinpiv2f32__metal_sinpiv3f32__metal_sinpiv4f32__metal_fast_sinpiv2f32__metal_fast_sinpiv3f32__metal_fast_sinpiv4f32__metal_sinhv2f32__metal_sinhv3f32__metal_sinhv4f32__metal_sqrtv2f32__metal_sqrtv3f32__metal_sqrtv4f32__metal_tanv2f32__metal_tanv3f32__metal_tanv4f32__metal_tanpiv2f32__metal_tanpiv3f32__metal_tanpiv4f32__metal_fast_tanpiv2f32__metal_fast_tanpiv3f32__metal_fast_tanpiv4f32__metal_tanhv2f32__metal_tanhv3f32__metal_tanhv4f32__metal_atan2v2f32__metal_atan2v3f32__metal_atan2v4f32__metal_powv2f32__metal_powv3f32__metal_powv4f32__metal_powrv2f32__metal_powrv3f32__metal_powrv4f32__metal_fmodv2f32__metal_fmodv3f32__metal_fmodv4f32__metal_sincosv2f32__metal_sincosv3f32__metal_sincosv4f32air.ldexp.v2f32air.ldexp.v3f32air.ldexp.v4f32air.fast_ldexp.v2f32air.fast_ldexp.v3f32air.fast_ldexp.v4f32air_hadd_s_i8air_hadd_u_i8air_hadd_s_i16air_hadd_u_i16air_hadd_s_i32air_hadd_u_i32air_hadd_s_i64air_hadd_u_i64air_hadd_s_v2i8air_hadd_u_v2i8air_hadd_s_v2i16air_hadd_u_v2i16air_hadd_s_v2i32air_hadd_u_v2i32air_hadd_s_v2i64air_hadd_u_v2i64air_hadd_s_v3i8air_hadd_u_v3i8air_hadd_s_v3i16air_hadd_u_v3i16air_hadd_s_v3i32air_hadd_u_v3i32air_hadd_s_v3i64air_hadd_u_v3i64air_hadd_s_v4i8air_hadd_u_v4i8air_hadd_s_v4i16air_hadd_u_v4i16air_hadd_s_v4i32air_hadd_u_v4i32air_hadd_s_v4i64air_hadd_u_v4i64air_rhadd_s_i8air_rhadd_u_i8air_rhadd_s_i16air_rhadd_u_i16air_rhadd_s_i32air_rhadd_u_i32air_rhadd_s_i64air_rhadd_u_i64air_rhadd_s_v2i8air_rhadd_u_v2i8air_rhadd_s_v2i16air_rhadd_u_v2i16air_rhadd_s_v2i32air_rhadd_u_v2i32air_rhadd_s_v2i64air_rhadd_u_v2i64air_rhadd_s_v3i8air_rhadd_u_v3i8air_rhadd_s_v3i16air_rhadd_u_v3i16air_rhadd_s_v3i32air_rhadd_u_v3i32air_rhadd_s_v3i64air_rhadd_u_v3i64air_rhadd_s_v4i8air_rhadd_u_v4i8air_rhadd_s_v4i16air_rhadd_u_v4i16air_rhadd_s_v4i32air_rhadd_u_v4i32air_rhadd_s_v4i64air_rhadd_u_v4i64air_clz_i8air_clz_i16air_clz_i32air_clz_i64air_clz_v2i8air_clz_v2i16air_clz_v2i32air_clz_v2i64air_clz_v3i8air_clz_v3i16air_clz_v3i32air_clz_v3i64air_clz_v4i8air_clz_v4i16air_clz_v4i32air_clz_v4i64air_ctz_i8air_ctz_i16air_ctz_i32air_ctz_i64air_ctz_v2i8air_ctz_v2i16air_ctz_v2i32air_ctz_v2i64air_ctz_v3i8air_ctz_v3i16air_ctz_v3i32air_ctz_v3i64air_ctz_v4i8air_ctz_v4i16air_ctz_v4i32air_ctz_v4i64air_popcount_i8air_popcount_i16air_popcount_i32air_popcount_i64air_popcount_v2i8air_popcount_v2i16air_popcount_v2i32air_popcount_v2i64air_popcount_v3i8air_popcount_v3i16air_popcount_v3i32air_popcount_v3i64air_popcount_v4i8air_popcount_v4i16air_popcount_v4i32air_popcount_v4i64air_mul_hi_s_i8air_mul_hi_u_i8air_mul_hi_s_i16air_mul_hi_u_i16air_mul_hi_s_i32air_mul_hi_u_i32air_mul_hi_s_i64air.abs.s.i64air_mul_hi_u_i64air_mul_hi_s_v2i8air_mul_hi_u_v2i8air_mul_hi_s_v2i16air_mul_hi_u_v2i16air_mul_hi_s_v2i32air_mul_hi_u_v2i32air_mul_hi_s_v2i64air_mul_hi_u_v2i64air_mul_hi_s_v3i8air_mul_hi_u_v3i8air_mul_hi_s_v3i16air_mul_hi_u_v3i16air_mul_hi_s_v3i32air_mul_hi_u_v3i32air_mul_hi_s_v3i64air_mul_hi_u_v3i64air_mul_hi_s_v4i8air_mul_hi_u_v4i8air_mul_hi_s_v4i16air_mul_hi_u_v4i16air_mul_hi_s_v4i32air_mul_hi_u_v4i32air_mul_hi_s_v4i64air_mul_hi_u_v4i64air_mad_hi_s_i8air_mad_hi_u_i8air_mad_hi_s_i16air_mad_hi_u_i16air_mad_hi_s_i32air_mad_hi_u_i32air_mad_hi_s_i64air_mad_hi_u_i64air_mad_hi_s_v2i8air_mad_hi_u_v2i8air_mad_hi_s_v2i16air_mad_hi_u_v2i16air_mad_hi_s_v2i32air_mad_hi_u_v2i32air_mad_hi_s_v2i64air_mad_hi_u_v2i64air_mad_hi_s_v3i8air_mad_hi_u_v3i8air_mad_hi_s_v3i16air_mad_hi_u_v3i16air_mad_hi_s_v3i32air_mad_hi_u_v3i32air_mad_hi_s_v3i64air_mad_hi_u_v3i64air_mad_hi_s_v4i8air_mad_hi_u_v4i8air_mad_hi_s_v4i16air_mad_hi_u_v4i16air_mad_hi_s_v4i32air_mad_hi_u_v4i32air_mad_hi_s_v4i64air_mad_hi_u_v4i64air_mad_sat_s_i64air_mad_sat_u_i64air_mad_sat_s_v2i64air_mad_sat_u_v2i64air_mad_sat_s_v3i64air_mad_sat_u_v3i64air_mad_sat_s_v4i64air_mad_sat_u_v4i64air_rotate_i8air_rotate_i16air_rotate_i32air_rotate_i64air_rotate_v2i8air_rotate_v2i16air_rotate_v2i32air_rotate_v2i64air_rotate_v3i8air_rotate_v3i16air_rotate_v3i32air_rotate_v3i64air_rotate_v4i8air_rotate_v4i16air_rotate_v4i32air_rotate_v4i64air.acos.f32air.acos.v2f32air.acos.v3f32air.acos.v4f32air.acosh.f32air.acosh.v2f32air.acosh.v3f32air.acosh.v4f32air.asin.f32air.asin.v2f32air.asin.v3f32air.asin.v4f32air.asinh.f32air.asinh.v2f32air.asinh.v3f32air.asinh.v4f32air.atan.f32air.atan.v2f32air.atan.v3f32air.atan.v4f32air.atanh.f32air.atanh.v2f32air.atanh.v3f32air.atanh.v4f32air.cos.f32air.cos.v2f32air.cos.v3f32air.cos.v4f32air.cospi.f32air.cospi.v2f32air.cospi.v3f32air.cospi.v4f32air.fast_cospi.f32air.fast_cospi.v2f32air.fast_cospi.v3f32air.fast_cospi.v4f32air.cosh.f32air.cosh.v2f32air.cosh.v3f32air.cosh.v4f32air.exp.f32air.exp.v2f32air.exp.v3f32air.exp.v4f32air.exp2.f32llvm.exp2.f32air.exp2.v2f32air.exp2.v3f32air.exp2.v4f32air.exp10.f32air.exp10.v2f32air.exp10.v3f32air.exp10.v4f32air.log.f32air.log.v2f32air.log.v3f32air.log.v4f32air.log2.f32air.log2.v2f32air.log2.v3f32air.log2.v4f32air.log10.f32air.log10.v2f32air.log10.v3f32air.log10.v4f32air.sin.f32air.sin.v2f32air.sin.v3f32air.sin.v4f32air.sinpi.f32air.sinpi.v2f32air.sinpi.v3f32air.sinpi.v4f32air.fast_sinpi.f32air.fast_sinpi.v2f32air.fast_sinpi.v3f32air.fast_sinpi.v4f32air.sinh.f32air.sinh.v2f32air.sinh.v3f32air.sinh.v4f32air.sqrt.f32llvm.sqrt.f32air.sqrt.v2f32air.sqrt.v3f32air.sqrt.v4f32air.tan.f32air.tan.v2f32air.tan.v3f32air.tan.v4f32air.tanpi.f32air.tanpi.v2f32air.tanpi.v3f32air.tanpi.v4f32air.fast_tanpi.f32air.fast_tanpi.v2f32air.fast_tanpi.v3f32air.fast_tanpi.v4f32air.tanh.f32air.tanh.v2f32air.tanh.v3f32air.tanh.v4f32air.atan2.f32air.atan2.v2f32air.atan2.v3f32air.atan2.v4f32air.pow.f32air.pow.v2f32air.pow.v3f32air.pow.v4f32air.powr.f32air.powr.v2f32air.powr.v3f32air.powr.v4f32air.fmod.f32air.fmod.v2f32air.fmod.v3f32air.fmod.v4f32air.sincos.f32air.sincos.v2f32air.sincos.v3f32air.sincos.v4f32_Z14__agx_smul_satssllvm.agx1.smul.sat.i16_Z14__agx_umul_satttllvm.agx1.umul.sat.i16_Z14__agx_ssub_satssllvm.agx1.ssub.sat.i16_Z14__agx_ssub_satiillvm.agx1.ssub.sat.i32_Z14__agx_usub_satttllvm.agx1.usub.sat.i16_Z14__agx_usub_satjjllvm.agx1.usub.sat.i32_Z10__agx_ctlzcbllvm.ctlz.i8_Z10__agx_ctlzsbllvm.ctlz.i16_Z10__agx_ctlzibllvm.ctlz.i32_Z10__agx_cttzcbllvm.cttz.i8_Z10__agx_cttzsbllvm.cttz.i16_Z10__agx_cttzibllvm.cttz.i32_Z11__agx_ctpopcllvm.ctpop.i8_Z11__agx_ctpopsllvm.ctpop.i16_Z11__agx_ctpopillvm.ctpop.i32air.hadd.s.i8air.hadd.u.i8air.hadd.s.i16air.hadd.u.i16air.hadd.s.i32air.hadd.u.i32air.hadd.s.i64air.hadd.u.i64air.hadd.s.v2i8air.hadd.u.v2i8air.hadd.s.v2i16air.hadd.u.v2i16air.hadd.s.v2i32air.hadd.u.v2i32air.hadd.s.v2i64air.hadd.u.v2i64air.hadd.s.v3i8air.hadd.u.v3i8air.hadd.s.v3i16air.hadd.u.v3i16air.hadd.s.v3i32air.hadd.u.v3i32air.hadd.s.v3i64air.hadd.u.v3i64air.hadd.s.v4i8air.hadd.u.v4i8air.hadd.s.v4i16air.hadd.u.v4i16air.hadd.s.v4i32air.hadd.u.v4i32air.hadd.s.v4i64air.hadd.u.v4i64air.rhadd.s.i8air.rhadd.u.i8air.rhadd.s.i16air.rhadd.u.i16air.rhadd.s.i32air.rhadd.u.i32air.rhadd.s.i64air.rhadd.u.i64air.rhadd.s.v2i8air.rhadd.u.v2i8air.rhadd.s.v2i16air.rhadd.u.v2i16air.rhadd.s.v2i32air.rhadd.u.v2i32air.rhadd.s.v2i64air.rhadd.u.v2i64air.rhadd.s.v3i8air.rhadd.u.v3i8air.rhadd.s.v3i16air.rhadd.u.v3i16air.rhadd.s.v3i32air.rhadd.u.v3i32air.rhadd.s.v3i64air.rhadd.u.v3i64air.rhadd.s.v4i8air.rhadd.u.v4i8air.rhadd.s.v4i16air.rhadd.u.v4i16air.rhadd.s.v4i32air.rhadd.u.v4i32air.rhadd.s.v4i64air.rhadd.u.v4i64air.clz.i8air.clz.i16air.clz.i32air.clz.i64air.clz.v2i8air.clz.v2i16air.clz.v2i32air.clz.v2i64air.clz.v3i8air.clz.v3i16air.clz.v3i32air.clz.v3i64air.clz.v4i8air.clz.v4i16air.clz.v4i32air.clz.v4i64air.ctz.i8air.ctz.i16air.ctz.i32air.ctz.i64air.ctz.v2i8air.ctz.v2i16air.ctz.v2i32air.ctz.v2i64air.ctz.v3i8air.ctz.v3i16air.ctz.v3i32air.ctz.v3i64air.ctz.v4i8air.ctz.v4i16air.ctz.v4i32air.ctz.v4i64air.mul_hi.s.i8air.mul_hi.u.i8air.mul_hi.s.i16air.mul_hi.u.i16air.mul_hi.s.i32air.mul_hi.u.i32air.mul_hi.s.i64air.mul_hi.u.i64air.mul_hi.s.v2i8air.mul_hi.u.v2i8air.mul_hi.s.v2i16air.mul_hi.u.v2i16air.mul_hi.s.v2i32air.mul_hi.u.v2i32air.mul_hi.s.v2i64air.mul_hi.u.v2i64air.mul_hi.s.v3i8air.mul_hi.u.v3i8air.mul_hi.s.v3i16air.mul_hi.u.v3i16air.mul_hi.s.v3i32air.mul_hi.u.v3i32air.mul_hi.s.v3i64air.mul_hi.u.v3i64air.mul_hi.s.v4i8air.mul_hi.u.v4i8air.mul_hi.s.v4i16air.mul_hi.u.v4i16air.mul_hi.s.v4i32air.mul_hi.u.v4i32air.mul_hi.s.v4i64air.mul_hi.u.v4i64air.mad_hi.s.i8air.mad_hi.u.i8air.mad_hi.s.i16air.mad_hi.u.i16air.mad_hi.s.i32air.mad_hi.u.i32air.mad_hi.s.i64air.mad_hi.u.i64air.mad_hi.s.v2i8air.mad_hi.u.v2i8air.mad_hi.s.v2i16air.mad_hi.u.v2i16air.mad_hi.s.v2i32air.mad_hi.u.v2i32air.mad_hi.s.v2i64air.mad_hi.u.v2i64air.mad_hi.s.v3i8air.mad_hi.u.v3i8air.mad_hi.s.v3i16air.mad_hi.u.v3i16air.mad_hi.s.v3i32air.mad_hi.u.v3i32air.mad_hi.s.v3i64air.mad_hi.u.v3i64air.mad_hi.s.v4i8air.mad_hi.u.v4i8air.mad_hi.s.v4i16air.mad_hi.u.v4i16air.mad_hi.s.v4i32air.mad_hi.u.v4i32air.mad_hi.s.v4i64air.mad_hi.u.v4i64air.mad_sat.s.i64air.mad_sat.u.i64air.mad_sat.s.v2i64air.mad_sat.u.v2i64air.mad_sat.s.v3i64air.mad_sat.u.v3i64air.mad_sat.s.v4i64air.mad_sat.u.v4i64air.rotate.i8air.rotate.i16air.rotate.i32air.rotate.i64air.rotate.v2i8air.rotate.v2i16air.rotate.v2i32air.rotate.v2i64air.rotate.v3i8air.rotate.v3i16air.rotate.v3i32air.rotate.v3i64air.rotate.v4i8air.rotate.v4i16air.rotate.v4i32air.rotate.v4i64air.popcount.i8air.popcount.i16air.popcount.i32air.popcount.i64air.popcount.v2i8air.popcount.v2i16air.popcount.v2i32air.popcount.v2i64air.popcount.v3i8air.popcount.v3i16air.popcount.v3i32air.popcount.v3i64air.popcount.v4i8air.popcount.v4i16air.popcount.v4i32air.popcount.v4i6431001.638.1air64-apple-macosx11.0.0llvm-link
b0$
"(X@
<!(E
6\!,
9(L)N
#hP
l AE
!Eex
!U*&
$I(a!P
*T(b!h
+W(c!
-Z(d!
l2"
 B*I
`B L
1!(&
kB1X
c,x7
C$Xa
:z, 
C$rs2
H1p8
C$p
0DbA
H9(\
0DzI
0DrQ
0DZY
Hx+<
0Dja
Hj/@
Hg88
Ho9<|
H%:<
Hg=l 
H4HD(
C$T$$
0DrI"R
H?IH&
HiJH*
C$~&"
0DZu
C$3,$
H*Y\*
H:Z@.
H`[L3
Hn\P?
C$^.
Hb]8g
H>^@q
C$V/
H<_@{
0DRA
H:h@
C$S4
H1i<g
0D"Q#
H5jDq
C$S5
0DRY#
H;kD{
HalD
H#m4
Hmo4
HnxH
H|yH%
H|z4
C$u="
!RO"Q
0DrK$
0Db]
0D"e
0DZu
C$sG
\0iL
C$QL
Z5qT
f7qL
C$^N
!Rj'
r<qT
\=qP
!R^*
0D2M
lTq\
C$xU
0D"]
-+VY
0Dbg
0DBi
N+Mj
0D*k
!R]+
{+Mj
!R+.P\
)/Q\
K2Mn
0D:U
0D:W&R
0DJmF
C$uo
px{j
v0FP
p@=u
P$v`
air.compile.denorms_disableair.compile.fast_math_disableair.compile.framebuffer_fetch_enableApple metal version 31001.638 (metalfe-31001.638.1)Metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/gen10_common/math_half.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/gen10_common/simdgroup.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/gen4_common/math.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/math_half.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/math.metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/integer.metalwchar_sizeair.max_device_buffersair.max_constant_buffersair.max_threadgroup_buffersair.max_texturesair.max_read_write_texturesair.max_samplersomnipotent charSimple C++ TBAAshortintfloatbranch_weights_ZTS9TableLine
h`z#
Ic0C@
3W(
MPA #
B3bp
7K T,B
2Bp
 @F
A0@R/
A0@L/
D.Xp
D.Xp
_ x#
 (1Xb
@@@@
@`F
A0bp
%wGAT@\
A0@v/
=#8F
A0@x/
A0@v/
=#8F
A0@x/
sN@
A0@v/
=#8F
A0@x/
sN@
?#8F
A0@Po
A0@Z/
!`h0bP
A0@ro
A0@|/
A0@Po
A0@Z/
!`h0bP
A0@ro
A0@|/
A0@Po
A0@Z/
!`h0bP
A0@ro
A0@|/
A0@@0
7K T,B`
sM 
A0p\O
A0@N/
7K T,B`
sM 
A0p\O
A0@N/
A0@h/
@.Xp
7K T,B`
sM 
A0p\O
A0@N/
A0@h/
@.Xp
A0@~/(8(b
 H`0
 H`0
A0ph
PsE
 H`0
A0ph
6!F
A0@^/
6!F
A0@^/
7K T,B`
sM0
,!F
A0@V/
7K T,B`
sM0
,!F
A0@V/
7K T,B`
sM0
,!F
A0@V/
^ <#
^ <#
A0bp
yPE 
A0K`T
^ <#
A0bp
yPE 
A0K`T
b0(\!
D0bP
A0@l/
^oB1
D0bP
A0@l/
)sN`
D0bP
A0@l/
)sN`
28P0bP
^oB1
hPj0
2$J0bP
A0p@0@F
A0pB0P
[0F
hPj0
2$J0bP
A0p@0@F
A0pB0P
[0F
2DR0bP
A1K0
2\X0bP
UA #
!1bP
hP*1
(Z0Xp
hPj0
2$J0bP
A0p@0@F
A0pB0P
[0F
2DR0bP
A1K0
2\X0bP
UA #
!1bP
hP*1
p1bP
A0bP
1@F
WA #
q1bP
hPz1
*,1
@@@@
? 3
A0pzO
@@@@
A0pzO
@@@@
A0pzO
A0pb0P
 0
H#l
`A!@@
oA!@
loA!@ {
H#l
`A!@@
oA!@
"0b@
b%0t
7w
A!j ;
ApT@
L7TO0
b%0t
L7<H0
@9h0
"0b@
a0b@
 h0
V hA!t![
L7TO0
0IE1
#<.P
"0b@
c0b@
 h0
p"hP
"hA!
HpT0"
L7TO0
0#AS
7b
aE1?"
AA`"
bR'c
ir'c
j2&c
2l@0A
2|^Q
sO]x
b%0t
70
L7<H0
@9h0
7j
6hPB
l%a#
A5b#
E1i#
AAj#
e0Pq
w#;``
n@!F
N@74
L78G0
n@!V
?hPB
CPB-4
C`B&
"0b@
l0b@
 h0
L70F0
F)a$
A9b$
{dF{
"0b@
o0b@
 h0
@Rh0
L70F0
C@S<
>9`
7m
$hPZ
z{@~
BZ `Ki
b%0t
A1&&
AA'&
c#FB
c>6l@
c*6l@
1Ffc
8ffc
9&cc
<vg``
n@!F
Y@74
L78G0
A){&[
vg4$
0k~6l@
@k~6l@
nhPB
&s``
n@!F
\@74
L78G0
A)6'
C`vf
^9h's{
zrGD
b{ 0
0T(
`0l@
n@!V
78
,T(
b%0t
L70F0
A@74
L78G0
-T(
d0l@
c0l@
 `KI
0T(
BPPk
B/T(
f0l@
f0l@
OIW`
 Sn_
.A(l
  vQX0
$(, 
!@@
P=X0
v<X0
d:X0
p7X0
  T6X0
!@@
B5X0
Z4X0
H4X@
z2X@
p2X0
mXf]T%MP
D!@
mXf]T%MP
D!@
@&
p0v#
7Tp
T(o` C
n@!&
7s
PTgP
A%h ;
A5i ;
T(o
"0b@
AA%"!;
A5#!;
TAb%(t
7s
2XUP
V tA5k![
T(o
h#6.P
"0b@
c0b@
 h0
T(o
n@!&
PTgP
xvi 0
7-
"hPB
A1,"
AA-"
P#c2
`#/2
0#er
n@!&
7w
PTgP
A1t"[
AAu"[
R/`0
T(o
/hPB
A%&#
A5'#
p3e3
P3gs
n@!&
7y
PTgP
A1v#
AAw#
T(}
p;h0
SB`0
BhPB
C$DA
n@!V
7i
FhPB
A1h$
AAi$
GyDA
Jl4l@
 Jl4l@
PGs4
n@!&
PTgP
BPH
BPPH
S:5l@
S&5l@
S&5l@
S$5l@
/%Vc
6EVc
:UW`0
T(}
WhPB
A%m%
n@!&
[hPB
BPIk
n@!&
7'
PTgP
A1$&[
AA%&[
CPc5FA
c<6l@
c(6l@
c(6l@
7j
gfFA
sfjc
t&gc
{Fgc
khPB
^92
^9;Wr
Psc7
`s/7
0sew
n@!&
7w
PTgP
A1t'[
AAu'[
T(}
P{h0
7&
7i
;.P
"0b@
~0b@
 h0
b0l@
b0l@
OIw`
`+A(l
  `PX0
!@@
^<X0
^8X0
T7X0
@7X`
f5X0
\5X0
!@@
\2X@
R2X0
mXf]T%MP
D!@
mXf]T%MP
D!@
T(a0
A)c ;
T(aP
N"PA
V \A)
T(a
T(a
T(a
)\A)
ve 0
b%$t
"0b@
e0b@
 h0
 VBB'
'eBA
 *m2l@
0*m2l@
A*k2l@
wR'c
T(o
f*PA
"0b@
g0b@
 h0
 VBB'
: .c3;
b%$t
^9r
a7=CA
^9{S6
$h`7d
T(o
"0b@
k0b@
 h0
T(u
+\A)
CpB'4l@
Ap!Ds
@Du}
B5X@
V3X0
L3X0
FAB
T(a0
A)c ;
T(aP
N"PA
V \A)
T(a
T(a
T(a
)\A)
ve 0
b%$t
"0b@
e0b@
 h0
 VBB'
'eBA
 *m2l@
0*m2l@
A*k2l@
wR'c
T(o
f*PA
"0b@
g0b@
 h0
 VBB'
:0.c3;
b%$t
^9r
a7=CA
^9{S6
$h`7d
T(o
"0b@
k0b@
 h0
T(u
+\A)
CpB'4l@
Ap!Ds
@Du}
B5X@
V3X0
L3X0
FAB
r)@@@
2K0t
   ,
?T    
EPA
0KPT
Bp~
M[0K`X3
A0@x/
Q\0K`XC
A0@z/
 j0x
\0X0
G D
oA!@
bool
F
@0F
zDEA
 0AIAL7
A1bP
T  A
2,ApM
2,B0
05f0
@G*(
(2bP
1K0T
(2bP
1K0T
(2bP
1K0T
dAF
A0@l0 j
h0sX
(2bP
_PB 
(2bP
_PB 
 (FR
(2bP
_PB 
 (FR
$[A+
@.Xp
A0@f&
rTp\
q=~Q
rTp\
q=~Q
rTp\
A.Xp
q=~Q
F1bp
B1bp
C1bp
#pO|D
tzFP
tzFP
(2bp
^ $#
D2bp
^`$#
TzD0
TzD0
#8oW
tzFP
@F
`0Fp
A0@`
`0FP
A0@Z
 y+
 HF
aF
A0@^
%(*Id
`0FP
A0@Xo
g7FP
E$4KP
A0@Xo
-2(b
A0@`
<:p*RA
-6(b
4MF
6 N!
DL7DP0bp
\0bP
yR7bp
_@u#
 |#
@!-0@
 |#
@!-0@
`>Cu
~^eso
#Hg|
A0bPx!
_Px#
@)WA9
^oB1
`>Cu
~^eso
#Hg|
A0bPx!
1%|2
_P|#
@*WA9
4bpx!
P@ 
`>Cu
~^eso
#Hg|
A0bPx!
1%|2
_P|#
@*WA9
4bpx!
P@ 
0l@4
A!DTp@
00K0T
0l@P
D0l@
0l@d
ERB
A0@V0
%`jA
T   D
A8HA
Qp?S
2,L0bp
F2X@
DYt0X@
 8
7ja
A0@~1(
H#($
A0@H2
?T   D
A0K 
2@Gpo
A0@t0 
vB.P
\2X@
#8K]=
2TDPL
A0@Z0
A0@b0
s(m
B0KP
P\cp
A%H"
783A
<DPD
:1bp
AO7
PCZHij!U
Q` D
G0bpx!
A3bPx!
Q+"D),"
G0bpx!
DYR2X@
!@p
4@ 
s(IA{
7$r@
7<v@
s(P
2s(
7T~ 
2PV0
YPi0
"Ha/
 RA.
2lZP
1bpx!
E0bpx!
!D0bpx!
G0bpx!
F0bpx!
_-HT
1bpx!
F0bpx!
M*! 0
DYJ1X@
&$D1
`?YT
2 B0
E0bp
6KpT
D1bp
_ l#
_`l#
xDyBL7
e0bp
e0bp
e0bp
e0bp
$RJ %
1bpx!
` 7
2LLp
@}WA9
4bpx!
C L7
4bpx!
!(H1X0
?T    
t L7
r0bp
2 G0bp
@r0bp
@`D"
0bPx!
2HO0bPx!
0bpx!
 wWR
#`u}d
# K^
28A0
7pt@
t0bp
2$JP
u0bp
u0bp
O0bp
QD #
(!F
dN~c
tbPE
2lAP
6bPx!
u0bpx!
 MA-w
1bpx!
RA #
0bpx!
2bpx!
*|1bpx!
2bpx!
PD #
b0X@
GAB
_@|#
$RJ %
1bpx!
P@ 
@@@@
 Hvc
7$l
F0bp
P~pE
2,H0bPx!
z0bp
z0bp
$RJ %
1bpx!
BRA,
!,.1
@F
@F
48F
5@F
!-0@
 :
SD"
B0X0
j@L7
A0bP
1bpx!
ZB.d
Py0bp
RA!#
^0bp
1bpx!
l1X@
D0XPB
`t0bp
pt0bp
VAK
fAf
Q@F
 9XAZ
FAB
7dR0
@\`PB
Vpm5
x `^
@E*4
BT(
6X!0
bT(
T(C
2$J0P
r)@@@
2K0t
q=~q
Y0bP
rA9A
h0bP
Y0bP
sAMA
   ,
?T    
0KPT
2(FP
wxFQ
/8MED
   ,
?T    
0KPT
2(FP
wxFQ
/8MED
/8MED
   ,
?T    
'xAQ
 $pP
TPD!A
(sh
/8MED
/8MED
/8MED
V.((
1bpx!
1LA(d
a@T 
sS 
Z.()
b@T 
sS0
2,LPG*
1bpx!
Z0bP
;K`t
Z0bP
;K`t
2 IP
1bpx!
sW 
Z0bP
;K`t
2 IPG
1bpx!
[0bP
n8"f
A0@dO
(!Xk
2(F0
2 J0
h0bP
A1bP
n8$f
A0@fO
f.(+
(!Xs
2(F0
2 J0
h0bP
A1bP
J/(T
n8&f
A0@hO
(!X{
2(F0
2 J0
h0bP
A1bP
2PP0
2HT0
h0bP
1bpx!
B3K@
E$7
7 j
s[
k 7
7 l
2$J0
1bpx!
7 k
s\
l 7
7 m
2$J0
1bpx!
28O0
-h 8
X4sZ
7 l
s]
m 7
7 n
2$J0
1bpx!
28O0
-h 8
X4sZ
\0bP
tC 4
`?YT
7\0
^0Kp7 
yI7bp
M7bp
yA7bp
_0t#
E7bp
2@I0
28M0bp
$~0bp
4~0bp
~0bp
~0bPx!
`?YT
7\0
^0Kp7 
yI7bp
M7bp
yA7bp
_0t#
E7bp
2@I0
28M0bp
$~0bp
4~0bp
~0bp
~0bPx!
2`Q0
C0Kp
2XU0bp
0bPx!
`?YT
7\0
^0Kp7 
yI7bp
M7bp
yA7bp
_0t#
E7bp
2@I0
28M0bp
$~0bp
4~0bp
~0bp
~0bPx!
2`Q0
C0Kp
2XU0bp
0bPx!
2p[P
, 1bp
< 1bp
 1bp
yV0X
C L7
g0bp
g0bp
g0bp
@5WA9
4bpx!
C L7
0bpx!
PA-D
A7
2HO0bPx!
A>0%
0bpx!
E\7
AY0%
e1bp
e1bp
4bpx!
d 7
C L7
aPA9
$RJ %
1bpx!
O|s
,>R[g
!(H3X0
x0X0
C L7
g0bp
g0bp
g0bp
@5WA9
4bpx!
C L7
0bpx!
PA-D
A7
2HO0bPx!
A>0%
0bpx!
E\7
AY0%
e1bp
e1bp
4bpx!
d 7
C L7
aPA9
$RJ %
1bpx!
O|s
pC0&L
C L7
c2bp
 cRI"
dPA9
1bPx!
h 7
*0bp
0bpx!
A0bPx!
A0bPx!
KP/#
AQ/#
4bpx!
,>r[g
!(D5X0
|2X@
t2X0
!(L1X0
D Hq
P@ 
D Hq
P@  
C L7
g0bp
g0bp
g0bp
@5WA9
4bpx!
C L7
0bpx!
PA-D
A7
2HO0bPx!
A>0%
0bpx!
E\7
AY0%
e1bp
e1bp
4bpx!
d 7
C L7
aPA9
$RJ %
1bpx!
O|s
pC0&L
C L7
c2bp
 cRI"
dPA9
1bPx!
h 7
*0bp
0bpx!
A0bPx!
A0bPx!
KP/#
AQ/#
4bpx!
C L7
a3bp
 aSI"
hPA9
1bPx!
l 7
:0bp
0bpx!
A0bPx!
B0bPx!
O0?#
A1?#
"$e?A
4bpx!
,>R[
!(@7X0
x4X@
p4X0
!(H3X0
x0X0
D Hq
 wWR
#`u}d
# K^
l0bp
l0bp
p Ay
v0bp
w0bp
2,LPx
1bpx!
 :
2LT0bp
 W
 [
 $@b
 wWR
#`u}d
# K^
l0bp
l0bp
p Ay
v0bp
w0bp
2,LPx
1bpx!
 :
2LT0bp
 W
 [
 $@b
1bPx!
y1bp
|1bp
APf`
}1bp
}1bp
S0bp
& FA
 wWR
#`u}d
# K^
l0bp
l0bp
p Ay
v0bp
w0bp
2,LPx
1bpx!
 :
2LT0bp
 W
 [
 $@b
1bPx!
y1bp
|1bp
APf`
}1bp
}1bp
S0bp
& FA
?T    
 2bpx!
tPL 
<t0bp
Lt0bp
6<`f
a 7
2HPp
WA9
&-F
 }
(-F
r1bp
r1bp
4bpx!
 8~c
 q
T'
HLa.P
& FA@ 
P@ H
?T    
 2bpx!
tPL 
<t0bp
Lt0bp
6<`f
a 7
2HPp
WA9
&-F
 }
(-F
r1bp
r1bp
4bpx!
 8~c
 q
T'
HLa.P
70?
<>2bp
L>2bp
V`&Z
pC`.
A0bPx!
J@+#
AA+#
"u+A
4bpx!
!QD0X@
P@ 
?T    
 2bpx!
tPL 
<t0bp
Lt0bp
6<`f
a 7
2HPp
WA9
&-F
 }
(-F
r1bp
r1bp
4bpx!
 8~c
 q
T'
HLa.P
70?
<>2bp
L>2bp
V`&Z
pC`.
A0bPx!
J@+#
AA+#
"u+A
4bpx!
fAf
n jF
gfF
ifF
V@3z
7pn
30bp
<3bp
<3bp
0bpx!
!uF
 (Rg
#uF
FABl
nP*b
Z*(+
daA
2$JPE!#
0bpx!
2bpx!
2,LP
vF`T
0bpx!
"<sq
l0X@
nP*b
Z*(+
daA
2$JPE!#
0bpx!
2bpx!
2,LP
vF`T
0bpx!
"<sq
Hb$F
=#0*
N1X@
H0XP
nP*b
Z*(+
daA
2$JPE!#
0bpx!
2bpx!
2,LP
vF`T
0bpx!
"<sq
Hb$F
=#0*
RA #
yAmt
 (z
j1XP
0d0XP
@@@@
 Hvc
7(m
(m0bp
0m0bp
8m0bp
(\QB@
|0bp
|0bp
L,A
G=(%
J\QB@
C L7
  PCI
$1bp
 $QI"
4bpx!
 X42
@@@@
 Hvc
7(m
(m0bp
0m0bp
8m0bp
(\QB@
|0bp
|0bp
L,A
G=(%
J\QB@
C L7
  PCI
$1bp
 $QI"
4bpx!
 X42
7$~
2|^0bp
_(}1bp
8}1bp
d 7
0bpx!
@@@@
 Hvc
7(m
(m0bp
0m0bp
8m0bp
(\QB@
|0bp
|0bp
L,A
G=(%
J\QB@
C L7
  PCI
$1bp
 $QI"
4bpx!
 X42
7$~
2|^0bp
_(}1bp
8}1bp
d 7
0bpx!
B #c
7(%
f`"J
,%2bp
AS"#
<02bp
\QB@
*fD+
42bp
42bp
$RJ %
1bpx!
o Jg
A0b`
%0fo
%8*Id
0bpx!
$2bpx!
0bpx!
DvA+
0bpx!
0bpx!
E @
';b`
7P0.@
0bpx!
SI"#
0bpx!
0bpx!
 HF
r Ia
H0X`
A0b`
%0fo
%8*Id
0bpx!
$2bpx!
0bpx!
0bpx!
0bpx!
F3
dG3
-1bpx!
$2bpx!
-1bpx!
:1bpx!
;1bpx!
r Ia
z0X`
$)a 
E @
r Ia
]0bP
|PF 
}0bp
tC He
]0bP
|PF 
}0bp
tC He
A0@j0(F
 4
]0bP
|PF 
}0bp
tC He
A0@j0(F
 4
Vb!
 1bp
UI"#
!1bp
^0XP
`0FP
20G0
20H0bPx!
`0FP
20G0
20H0bPx!
ZAf
ZAf
`0FP
20G0
20H0bPx!
ZAf
ZAf
2`S0
2`T0bPx!
2TVP
H%X5
P0XP
2 f
58F
6@F
 0
!-0@
 ;
TH"
20MP
)1bp
<A5)
D0bP
A0bP
P<1bp
RA!#
E0bp
E0bP
A0bP
A0bp
~0bp
E0bP
A0bP
2 f
58F
6@F
 0
!-0@
 ;
TH"
20MP
)1bp
<A5)
D0bP
A0bP
P<1bp
RA!#
E0bp
E0bP
A0bP
A0bp
~0bp
E0bP
A0bP
)DF
1 t$
FEK 
@*(d
Z3X0
2 f
58F
6@F
 0
!-0@
 ;
TH"
20MP
)1bp
<A5)
D0bP
A0bP
P<1bp
RA!#
E0bp
E0bP
A0bP
A0bp
~0bp
E0bP
A0bP
)DF
1 t$
FEK 
@*(d
pC1+
 2bp
C0+#
J0bP
A0bP
TP2i
/0bpx!
L+3bp
 }#
0@F
^0bp
!`B>
 }#
0@F
^0bp
!`B>
~pF
"-0@
 }#
0@F
^0bp
!`B>
~pF
"-0@
2PQ0
2PS0
E0bP
A0bP
A0bp
Pv1bp
Hso
4bPx!
sCP
4bPx!
sCP
,>R[
4bPx!
sCP
 }#
0@F
^0bp
!`B>
 }#
0@F
^0bp
!`B>
~pF
"-0@
 }#
0@F
^0bp
!`B>
~pF
"-0@
2PQ0
2PS0
E0bP
A0bP
A0bp
Pv1bp
Hso
`>Cu
~^eso
#Hg|
`0bp
`0bp
`0bp
`0bp
$RJ %
1bpx!
2 E0bPx!
*HA+ 
$RJ %
1bpx!
`>Cu
~^eso
#Hg|
`0bp
`0bp
`0bp
`0bp
$RJ %
1bpx!
2 E0bPx!
*HA+ 
$RJ %
1bpx!
20I0bPx!
P@  
`>Cu
~^eso
#Hg|
`0bp
`0bp
`0bp
`0bp
$RJ %
1bpx!
2 E0bPx!
*HA+ 
$RJ %
1bpx!
20I0bPx!
C L7
/1bp
 /QI"
4bpx!
P@ @
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
C?7
20I0bPx!
A;0%
P@  
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
C?7
20I0bPx!
A;0%
2@M0bPx!
31bp
31bp
AH!
P@ @
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
C?7
20I0bPx!
A;0%
P@  
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
C?7
20I0bPx!
A;0%
2@M0bPx!
31bp
31bp
AH!
P@ @
A0b`
%0fo
,KF
B0F3
_H9U
552bpx!
0bpx!
SI"#
0bpx!
PT e
<eY2bpx!
0bpx!
E @
E @
';b`
%8*Id
 ~+
2@I0
2@Jpm
dG3
0bpx!
$2bpx!
0bpx!
DvA+
0bpx!
0bpx!
1P#8#
*$sf
';b`
A0b`
%0fo
,KF
B0F3
_X9V
552bpx!
0bpx!
SI"#
0bpx!
<eY2bpx!
0bpx!
0)8Zx
C0b`
zba%z
u52bpx!
-1bpx!
WI"#
.1bpx!
9QT E
|eY2bpx!
;1bpx!
`0Fp
_1bP
QA #
~0bp
T)1
`0Fp
_1bP
QA #
~0bp
T)1
 5
 7
`0Fp
_1bP
QA #
~0bp
T)1
 5
 7
_0bP
*1Kp
%QM 
Lsc
`0FP
]0bP
w0bp
`0FP
]0bP
w0bp
`Af
`Af
`0FP
]0bP
w0bp
`Af
`Af
2`S0
2`T0bPx!
2TVP
7$g@
1bpx!
P{0bp
RA!#
^0bp
1bpx!
ZBId
ba'
2<PP
 u
h#-0@
0 b#
 =
@*(d
;KpU
`3X@
R0X0
7$g@
1bpx!
P{0bp
RA!#
^0bp
1bpx!
ZBId
ba'
2<PP
 u
h#-0@
0 b#
 =
@*(d
;KpU
n(lD
72bp
<BL7
H0bP
A0bP
J0bp
J0bP
A0bP
A0bp
J0bP
A0bP
T`/i
P/YC
>a`
P5X@
B2X0
7$g@
1bpx!
P{0bp
RA!#
^0bp
1bpx!
ZBId
ba'
2<PP
 u
h#-0@
0 b#
 =
@*(d
;KpU
n(lD
72bp
<BL7
H0bP
A0bP
J0bp
J0bP
A0bP
A0bp
J0bP
A0bP
T`/i
P/YC
>a`
V03p
NaG
DaG
F'+H
ilF
6Z~p:ZB
@7X@
 D!
4bPx!
sCP
4bPx!
sCP
,>R[
4bPx!
sCP
g7FP
A0b`
2DPDB
EmJT`
,A1P
$81x
A0b`
2bpx!
r0bpx!
q0bpx!
g7FP
';b`
ToAr
E$4KP
0ou@
';b`
cPA #
s0bpx!
s0bpx!
 r0bpx!
XAf
$'8?x
B0b`
2bpx!
0bpx!
0bpx!
`0X0
g7FP
A0b`
2DPDB
EuJT`
,A1P
1|A(
$81x
A0b`
2bpx!
t0bpx!
s0bpx!
';b`
PA #
0bpx!
0bpx!
0bpx!
,A4P
1lA>
0*8]x
C0b`
2bpx!
0bpx!
0bpx!
Pz'A
F 7
F 7
0(F
 0Pb
@ M 
F 7
0(F
 0Pb
2TVPp!D
n1bp
n1bp
y1bp
y1bp
-3(b
20G0
20H0bPx!
-3(b
20G0
20H0bPx!
 9
 =
-|(b
@ M 
-3(b
20G0
20H0bPx!
 9
 =
-|(b
2`S0
2`T0bPx!
2QF 
(2bp
91bp
7$r@
7Xw
2 G0bp
\v0bp
lv0bp
r/(R
A0@L1
2@QP
 &`b
 ]
 rj
2lY0
7$=AL7
E0bP
A0bP
YCnd
F6Y
eax1Xp
7$r@
7Xw
2 G0bp
\v0bp
lv0bp
r/(R
A0@L1
2@QP
 &`b
 ]
 rj
2lY0
7$=AL7
E0bP
A0bP
YCnd
F6Y
1bPx!
RDK
TDJ
)EF
eax1Xp
7$r@
7Xw
2 G0bp
\v0bp
lv0bp
r/(R
A0@L1
2@QP
 &`b
 ]
 rj
2lY0
7$=AL7
E0bP
A0bP
YCnd
F6Y
1bPx!
RDK
TDJ
)EF
PEWF
J0bP
A0bP
T`3i
P3YC
w _j
eap4Xp
eax1Xp
dN~c
!top
2lAP
x0bpx!
 MA-z
1bpx!
RA #
0bpx!
2bpx!
U+|1bpx!
2bpx!
PD #
v0bPx!
RPM@
fQC 
p1bpx!
2bpx!
dN~c
!top
2lAP
x0bpx!
 MA-z
1bpx!
RA #
0bpx!
2bpx!
U+|1bpx!
2bpx!
PD #
v0bPx!
RPM@
fQC 
p1bpx!
2bpx!
`CoP
2bpx!
1bpx!
QD #
2bpx!
L3X@
N1Xp
h0X@
dN~c
!top
2lAP
x0bpx!
 MA-z
1bpx!
RA #
0bpx!
2bpx!
U+|1bpx!
2bpx!
PD #
v0bPx!
RPM@
fQC 
p1bpx!
2bpx!
`CoP
2bpx!
1bpx!
QD #
2bpx!
v('N
0bPx!
2bpx!
2bpx!
J@e*B
2bpx!
2bpx!
2bpx!
~4X@
`oA1
C,L`
#8K]=
A`A
aPf0
C0KP
,A5bPx!
1bPx!
n8`"
XAIh%1
TB-P
8E0bpx!
=1bp
PAk@
RZ[H
 D0bpx!
A0bpx!
@!CTo
 D0bpx!
H0bpx!
1bPx!
TP'z
0bPx!
1bPx!
A\x%
B!(>@
K0K 
@[w@[p@[r@[s@[v@[z@[{@[}@[~@[
 [o0P
01bPx!
B0Kp
(Bmn
pC Fa0
E @
DYX6X@
H"Da(
E @i
DYX2X@
H"Da(
&4B0
#8K]=
A`A
aPf0
C0KP
,A5bPx!
1bPx!
n8`"
XAIh%1
TB-P
8E0bpx!
=1bp
PAk@
RZ[H
 D0bpx!
A0bpx!
@!CTo
 D0bpx!
H0bpx!
1bPx!
TP'z
0bPx!
1bPx!
A\x%
B!(>@
K0K 
@[w@[p@[r@[s@[v@[z@[{@[}@[~@[
 [o0P
01bPx!
B0Kp
(Bmn
pC Fa0
J0PA
AbI
*`%
np'Y
pC0O`PC
T NP
zA>
pCPSbPC
tC@
`+P)
S=5bp
0bPx!
T0VP
Y!QJ
1bpx!
F0bpx!
0bPx!
 D0bpx!
X0bpx!
AbL7
1bPx!
E @i
DYX:X@
H"Da(
E @
DYX6X@
H"Da(
E @i
DYX2X@
H"Da(
P@ 
&(@AB
naB#
#8K]=
A`A
aPf0
C0KP
,A5bPx!
1bPx!
n8`"
XAIh%1
TB-P
8E0bpx!
=1bp
PAk@
RZ[H
 D0bpx!
A0bpx!
@!CTo
 D0bpx!
H0bpx!
1bPx!
TP'z
0bPx!
1bPx!
A\x%
B!(>@
K0K 
@[w@[p@[r@[s@[v@[z@[{@[}@[~@[
 [o0P
01bPx!
B0Kp
(Bmn
A9F
pC Fa0
J0PA
AbI
*`%
np'Y
pC0O`PC
T NP
zA>
pCPSbPC
tC@
`+P)
S=5bp
0bPx!
T0VP
Y!QJ
1bpx!
F0bpx!
0bPx!
 D0bpx!
X0bpx!
AbL7
1bPx!
TPgz
0bPx!
1bPx!
A'v"(>@7
N :!
,AXt
X0?A
\0K@
7 1
#,H@
A0@B>
j`;)
>hF
-LPH
E0bp
ea'f1
E @
DYX>X@
H"Da(
E @i
DYX:X@
H"Da(
E @
DYX6X@
H"Da(
E @i
DYX2X@
H"Da(
[PB
B\Lh
$&4B0
8taB1
Da,
7<y@
s(P
7l~
7p{ 
2DS0
TA-P
8E0bpx!
=DPD
PA8@
A0bpx!
A3bPx!
BTO(Ro
E0bpx!
7m17
Io(7
Vp"j
V`3p
A0@^5
VP/:
B0bp
DYJ4X@
8HaB1
&4H
7<y@
s(P
7l~
7p{ 
2DS0
TA-P
8E0bpx!
=DPD
PA8@
A0bpx!
A3bPx!
BTO(Ro
E0bpx!
7m17
Io(7
Vp"j
V`3p
A0@^5
VP/:
B0bp
s(I*
78o#L7
78tC
M0K 
M0K 
7lx
tC@
EP;#
0bPx!
1bpx!
F0bpx!
0bPx!
 D0bpx!
R0bpx!
AbL7
1bPx!
,>R[
DYD7X@
E @,
^oBB
 I 
7<y@
s(P
7l~
7p{ 
2DS0
TA-P
8E0bpx!
=DPD
PA8@
A0bpx!
A3bPx!
BTO(Ro
E0bpx!
7m17
Io(7
Vp"j
V`3p
A0@^5
VP/:
B0bp
s(I*
78o#L7
78tC
M0K 
M0K 
7lx
tC@
EP;#
0bPx!
1bpx!
F0bpx!
0bPx!
 D0bpx!
R0bpx!
AbL7
1bPx!
H'0(!
!a'2
3P)1(!
",H@
[AHa
:hF
$F"(
A0@R;
D0bp
@1X@
`oA1
P@ 
&$D1
8HaB1
&4H
!Hdp
20APB
 `aP
2,F0
L7EP
"FAK
$T(
QF5P
q!S~
!Hdp
20APB
 `aP
2,F0
L7EP
"FAK
$T(
QF5P
7(;
[0bPx!
Xl5b
 `gQ
'T(r
L7B0
T(C
Hhs
@Du}#
\0X0
N0X@
@0X0
!Hdp
20APB
 `aP
2,F0
L7EP
"FAK
$T(
QF5P
7(;
[0bPx!
Xl5b
 `gQ
'T(r
L7B0
T(C
Hhs
A0bPx!
[Myh
7/
6X!0
k T(r
L7B0
T(C
 lPA
q!Sm
b1X0
T1X@
F1X0
f0XP
A0b`
%0ho
z.@Da
6 n! 
552bpx!
0bpx!
0bpx!
82bpx!
0bpx!
0bpx!
0bpx!
1bpx!
0bpx!
2bpx!
0bpx!
2bpx!
 "1bpx!
?$s
!N0X
';b`
|.@Fa
6 p!(
_(;s
552bpx!
0bpx!
0bpx!
82bpx!
0bpx!
0bpx!
0bpx!
1bpx!
0bpx!
2bpx!
0bpx!
2bpx!
 #1bpx!
v@3!
?$s
tBf
E0b`
xb'F
`'F
?c'tb
D'F
B.F
A.F
D.F
!/F
 @Hc
 0
!P1X
A0b`
%0ho
2@I0
2@Jp
dG3
0bpx!
0bpx!
0bpx!
0bpx!
1bpx!
0bpx!
0bpx!
0bpx!
4{A"
0bpx!
$1bpx!
';b`
3xb'F
/@vb
4MF
F3
6 v#(
dG3
n10X
u52bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
'b"#
&2bpx!
$&2bpx!
!T2X
q D*
a `oA1
r)@@@
2K0t
q=~q
r)@@@
2K0t
  tp
q=~q
r)@@@
2K0t
  tp
q=~q
[PB
r)@@@
2K0t
q=~q
r)@@@
2K0t
  tp
q=~q
r)@@@
2K0t
  tp
q=~q
[PB
0T'(
)`A
0T'(
)`A
0T'(
I`A
0T'(
I`A
0T%TZ
p%tZ
0T%TZ
p%tZ
t%0Z
sQR
t%0Z
sQR
0T'(
)`A
!Dd0
0T'(
)`A
!Dd0
0T'(
I`A
!Dd0
0T'(
I`A
!Dd0
0T%TZ
p%tZ
0T%TZ
p%tZ
t%0Z
!PhP
t%0Z
!PhP
0T'(
)`A
!Dd0
[PB
0T'(
)`A
!Dd0
[PB
0T'(
I`A
!Dd0
[PB
0T'(
I`A
!Dd0
[PB
0T%TZ
p%tZ
0T%TZ
p%tZ
Z @@
t%0Z
!PhP
t%0Z
!PhP
0T'(
NP '(
sQB
0T'(
sQB
0T'(
NP '(
sQB
0T'(
sQB
sQR
sQR
0T'(
NP '(
!Lgp
0T'(
!Lgp
0T'(
NP '(
!Lgp
0T'(
!Lgp
!PhP
!PhP
0T'(
NP '(
!Lgp
[PB
0T'(
!Lgp
[PB
0T'(
NP '(
!Lgp
[PB
0T'(
!Lgp
[PB
[PB
Z @@
[PB
!PhP
[PB
!PhP
[PB
JpXp
D5b`x!
D5b`x!
D5b`x!
P-k0
D5b`x!
6b`x!
C@ls
D5b`x!
6b`x!
C@ls
D5b`x!
6b`x!
C@ls
,>R[
D5b`x!
6b`x!
D5b`x!
6b`x!
D5b`x!
6b`x!
,>r[
( RP@
D5b`x!
D5b`x!
D5b`x!
( RP@Dc
F/
`5p%@f
F/
B(.@!s
,>R[
a"^a
D5b`x!
6b`x!
C@ls
D5b`x!
6b`x!
C@ls
D5b`x!
6b`x!
C@ls
( RP@4g
F/
`5p%@f
F/
B(.@!c
,A2P
,>r[
a"^a
D5b`x!
6b`x!
D5b`x!
6b`x!
D5b`x!
6b`x!
( RP@tg
F/
`5p%@f
F/
B(.@!c
,A2P
a"^a
0bPx!
4bPx!
4bPx!
4bPx!
(ba
0bPx!
,>R[
a!^a
4bPx!
4bPx!
4bPx!
(ba
0bPx!
!LfP
,>R[
,>r[
a!^a
4bPx!
4bPx!
4bPx!
(ba
0bPx!
!LfP
(bak
,>R[
,>r[
a!^a
E0jB
U8jB
E$jB
U,jB
0T'(
)`A
0T'(
)`A
0T'(
I`A
0T'(
I`A
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
sk`
0T'(
)`A
!Dd0
0T'(
)`A
!Dd0
0T'(
I`A
!Dd0
0T'(
I`A
!Dd0
!He0
!He0
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
H@%|
0T'(
)`A
!Dd0
[PB
0T'(
)`A
!Dd0
[PB
0T'(
I`A
!Dd0
[PB
0T'(
I`A
!Dd0
[PB
!He0
`!c
[PB
!He0
`!c
[PB
E<jB
UDjB
@- $
L7H0
[PB
E0jB
U8jB
H@%g
H@%|
0PE+
[PB
E0jB
U8jB
E$jB
U,jB
nP 7(
AAX 
nP 7(
AAX H@
EX H@
ehXB
@- $
L7H`
ETXD
nP 7(
!Xi0
AAX 
!Xi0
nP 7(
!Xi0
AAX H@
!Xi0
!\k0
EX H@
!\k0
ehXB
@- $
L7H`
ZC+`
ETXD
PI(`%
nP 7(
!Xi0
[PB
AAX 
!Xi0
[PB
nP 7(
!Xi0
[PB
AAX H@
!Xi0
[PB
!\k0
[PB
EX H@
!\k0
[PB
ehXB
@- $
L7H`
ZC+`
[PB
ETXD
PI(`%
[PB
 dp
&,bR
R6,!
2:,!
E4jB
U<jB
$,BR
".5!
*25!
 dp
*JAM
L0X@
elXB
@- $
$,BR
".5!
*25!
 dp
*JAM
L7H``
elXB
@- $
PA*`
PJ,`
^0X@
$,BR
".5!
*25!
 dp
*JAM
L7H``
sqQ
|1X@
elXB
@- $
PA*`
PJ,`
[PB
\UCT i
sQR
sQR
HZCp
hZCp
0ZCp
sQR
!PhP
!PhP
HZCp
hZCp
0ZCp
!PhP
Wa0D
!PhP
pZd D
[PB
!PhP
pZb D
[PB
HZCp
hZCp
[PB
0ZCp
!PhP
Wa0D
!pn0
[PB
`?YT
2 B0
E0bp
6KpT
D1bp
_ l#
_`l#
xDyBL7
`?YT
7\0
^0Kp7 
yI7bp
M7bp
yA7bp
_0t#
E7bp
2@I0
28M0bp
$~0bp
4~0bp
~0bp
~0bPx!
#Uvq
`?YT
7\0
^0Kp7 
yI7bp
M7bp
yA7bp
_0t#
E7bp
2@I0
28M0bp
$~0bp
4~0bp
~0bp
~0bPx!
2`Q0
C0Kp
2XU0bp
0bPx!
#Uwq
`?YT
7\0
^0Kp7 
yI7bp
M7bp
yA7bp
_0t#
E7bp
2@I0
28M0bp
$~0bp
4~0bp
~0bp
~0bPx!
2`Q0
C0Kp
2XU0bp
0bPx!
2p[P
, 1bp
< 1bp
 1bp
#Uxq
FA G
<P$M
zoA5
FA G
<P$M
e0bp
e0bp
e0bp
e0bp
$RJ %
1bpx!
` 7
2LLp
@}WA9
4bpx!
C L7
4bpx!
C L7
g0bp
g0bp
g0bp
@5WA9
4bpx!
C L7
0bpx!
PA-D
A7
2HO0bPx!
A>0%
0bpx!
E\7
AY0%
e1bp
e1bp
4bpx!
d 7
C L7
aPA9
$RJ %
1bpx!
O|s
,>R[g
tTvq
C L7
g0bp
g0bp
g0bp
@5WA9
4bpx!
C L7
0bpx!
PA-D
A7
2HO0bPx!
A>0%
0bpx!
E\7
AY0%
e1bp
e1bp
4bpx!
d 7
C L7
aPA9
$RJ %
1bpx!
O|s
pC0&L
C L7
c2bp
 cRI"
dPA9
1bPx!
h 7
*0bp
0bpx!
A0bPx!
A0bPx!
KP/#
AQ/#
4bpx!
,>r[g
tTwq
C L7
g0bp
g0bp
g0bp
@5WA9
4bpx!
C L7
0bpx!
PA-D
A7
2HO0bPx!
A>0%
0bpx!
E\7
AY0%
e1bp
e1bp
4bpx!
d 7
C L7
aPA9
$RJ %
1bpx!
O|s
pC0&L
C L7
c2bp
 cRI"
dPA9
1bPx!
h 7
*0bp
0bpx!
A0bPx!
A0bPx!
KP/#
AQ/#
4bpx!
C L7
a3bp
 aSI"
hPA9
1bPx!
l 7
:0bp
0bpx!
A0bPx!
B0bPx!
O0?#
A1?#
"$e?A
4bpx!
,>R[
FAB
 wWR
#`u}d
# K^
28A0
7pt@
t0bp
2$JP
u0bp
u0bp
O0bp
 wWR
#`u}d
# K^
l0bp
l0bp
p Ay
v0bp
w0bp
2,LPx
1bpx!
 :
2LT0bp
 W
 [
 $@b
 wWR
#`u}d
# K^
l0bp
l0bp
p Ay
v0bp
w0bp
2,LPx
1bpx!
 :
2LT0bp
 W
 [
 $@b
1bPx!
y1bp
|1bp
APf`
}1bp
}1bp
S0bp
 wWR
#`u}d
# K^
l0bp
l0bp
p Ay
v0bp
w0bp
2,LPx
1bpx!
 :
2LT0bp
 W
 [
 $@b
1bPx!
y1bp
|1bp
APf`
}1bp
}1bp
S0bp
FA G
<P$M
FA G
<P$M
xoA5
FA G
<P$M
?T    
t L7
r0bpx!
2 G0bp
@r0bp
@`D"
0bPx!
2HO0bPx!
0bpx!
?T    
 2bpx!
tPL 
<t0bp
Lt0bp
6<`f
a 7
2HPp
WA9
&-F
 }
(-F
r1bp
r1bp
4bpx!
 8~c
 q
T'
HLa.P
HHsTvq
D!$
?T    
 2bpx!
tPL 
<t0bp
Lt0bp
6<`f
a 7
2HPp
WA9
&-F
 }
(-F
r1bp
r1bp
4bpx!
 8~c
 q
T'
HLa.P
70?
<>2bp
L>2bp
V`&Z
pC`.
A0bPx!
J@+#
AA+#
"u+A
4bpx!
D!$
?T    
 2bpx!
tPL 
<t0bp
Lt0bp
6<`f
a 7
2HPp
WA9
&-F
 }
(-F
r1bp
r1bp
4bpx!
 8~c
 q
T'
HLa.P
70?
<>2bp
L>2bp
V`&Z
pC`.
A0bPx!
J@+#
AA+#
"u+A
4bpx!
fAf
n jF
gfF
ifF
V@3z
7pn
30bp
<3bp
<3bp
0bpx!
!uF
 (Rg
#uF
D!$
D!$
FA G
<P$M
(!F
nP*b
Z*(+
daA
2$JPE!#
0bpx!
2bpx!
2,LP
vF`T
0bpx!
"<sq
nP*b
Z*(+
daA
2$JPE!#
0bpx!
2bpx!
2,LP
vF`T
0bpx!
"<sq
Hb$F
=#0*
nP*b
Z*(+
daA
2$JPE!#
0bpx!
2bpx!
2,LP
vF`T
0bpx!
"<sq
Hb$F
=#0*
RA #
yAmt
@@@@
 Hvc
7$l
F0bp
P~pE
2,H0bPx!
z0bp
z0bp
$RJ %
1bpx!
BRA,
!,.1
@@@@
 Hvc
7(m
(m0bp
0m0bp
8m0bp
(\QB@
|0bp
|0bp
L,A
G=(%
J\QB@
C L7
  PCI
$1bp
 $QI"
4bpx!
 X42
@@@@
 Hvc
7(m
(m0bp
0m0bp
8m0bp
(\QB@
|0bp
|0bp
L,A
G=(%
J\QB@
C L7
  PCI
$1bp
 $QI"
4bpx!
 X42
7$~
2|^0bp
_(}1bp
8}1bp
d 7
0bpx!
@@@@
 Hvc
7(m
(m0bp
0m0bp
8m0bp
(\QB@
|0bp
|0bp
L,A
G=(%
J\QB@
C L7
  PCI
$1bp
 $QI"
4bpx!
 X42
7$~
2|^0bp
_(}1bp
8}1bp
d 7
0bpx!
B #c
7(%
f`"J
,%2bp
AS"#
<02bp
\QB@
*fD+
42bp
42bp
$RJ %
1bpx!
o Jg
@1XP
FA G
<P$M
roA5
 y+
 HF
aF
A0b`
%0fo
%8*Id
0bpx!
$2bpx!
0bpx!
DvA+
0bpx!
0bpx!
';b`
7P0.@
0bpx!
SI"#
0bpx!
0bpx!
 HF
A0b`
%0fo
%8*Id
0bpx!
$2bpx!
0bpx!
0bpx!
0bpx!
F3
dG3
-1bpx!
$2bpx!
-1bpx!
:1bpx!
;1bpx!
A0@^
%(*Id
]0bP
|PF 
}0bp
tC He
]0bP
|PF 
}0bp
tC He
A0@j0(F
 4
]0bP
|PF 
}0bp
tC He
A0@j0(F
 4
Vb!
 1bp
UI"#
!1bp
^0XP
`0FP
A0@Xo
#=Hq
`0FP
20G0
20H0bPx!
#=He
`0FP
20G0
20H0bPx!
ZAf
ZAf
#=Hu
`0FP
20G0
20H0bPx!
ZAf
ZAf
2`S0
2`T0bPx!
2TVP
H%X5
P0XP
@F
@F
48F
5@F
!-0@
 :
SD"
GAB
2 f
58F
6@F
 0
!-0@
 ;
TH"
20MP
)1bp
<A5)
D0bP
A0bP
P<1bp
RA!#
E0bp
E0bP
A0bP
A0bp
~0bp
E0bP
A0bP
tTvq
2 f
58F
6@F
 0
!-0@
 ;
TH"
20MP
)1bp
<A5)
D0bP
A0bP
P<1bp
RA!#
E0bp
E0bP
A0bP
A0bp
~0bp
E0bP
A0bP
)DF
1 t$
FEK 
@*(d
tTwq
2 f
58F
6@F
 0
!-0@
 ;
TH"
20MP
)1bp
<A5)
D0bP
A0bP
P<1bp
RA!#
E0bp
E0bP
A0bP
A0bp
~0bp
E0bP
A0bP
)DF
1 t$
FEK 
@*(d
pC1+
 2bp
C0+#
J0bP
A0bP
TP2i
/0bpx!
L+3bp
tTxq
FA G
<P$M
 |#
@!-0@
 }#
0@F
^0bp
!`B>
 }#
0@F
^0bp
!`B>
~pF
"-0@
 }#
0@F
^0bp
!`B>
~pF
"-0@
2PQ0
2PS0
E0bP
A0bP
A0bp
Pv1bp
Hso
4bPx!
sCP
4bPx!
sCP
,>R[
4bPx!
sCP
 |#
@!-0@
 }#
0@F
^0bp
!`B>
 }#
0@F
^0bp
!`B>
~pF
"-0@
 }#
0@F
^0bp
!`B>
~pF
"-0@
2PQ0
2PS0
E0bP
A0bP
A0bp
Pv1bp
Hso
`>Cu
~^eso
#Hg|
A0bPx!
_Px#
@)WA9
4bpx!
`>Cu
~^eso
#Hg|
`0bp
`0bp
`0bp
`0bp
$RJ %
1bpx!
2 E0bPx!
*HA+ 
$RJ %
1bpx!
`>Cu
~^eso
#Hg|
`0bp
`0bp
`0bp
`0bp
$RJ %
1bpx!
2 E0bPx!
*HA+ 
$RJ %
1bpx!
20I0bPx!
`>Cu
~^eso
#Hg|
`0bp
`0bp
`0bp
`0bp
$RJ %
1bpx!
2 E0bPx!
*HA+ 
$RJ %
1bpx!
20I0bPx!
C L7
/1bp
 /QI"
4bpx!
`>Cu
~^eso
#Hg|
A0bPx!
1%|2
_P|#
@*WA9
4bpx!
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
aWvq
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
C?7
20I0bPx!
A;0%
aWwq
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
C?7
20I0bPx!
A;0%
2@M0bPx!
31bp
31bp
aWxq
`>Cu
~^eso
#Hg|
A0bPx!
1%|2
_P|#
@*WA9
4bpx!
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
C?7
20I0bPx!
A;0%
`>Cu
~^eso
#Hg|
C L7
a0bp
a0bp
a0bp
 aPI"
0bpx!
C?7
20I0bPx!
A;0%
2@M0bPx!
31bp
31bp
!$@b$D
$L"%Pb%T
%\B&b
&vB'r
$FB$J
%VB%Z
%d"&`
&hb&p
&lb't"'|
'x",
@ Da
<P$MTe]X
!$@b$D
$L"%Pb%T
%\B&b
&vB'r
@F
A0b`
%0fo
,KF
B0F3
_H9U
552bpx!
0bpx!
SI"#
0bpx!
PT e
<eY2bpx!
0bpx!
';b`
%8*Id
 ~+
2@I0
2@Jpm
dG3
0bpx!
$2bpx!
0bpx!
DvA+
0bpx!
0bpx!
1P#8#
*$sf
';b`
A0b`
%0fo
,KF
B0F3
_X9V
552bpx!
0bpx!
SI"#
0bpx!
<eY2bpx!
0bpx!
0)8Zx
C0b`
zba%z
u52bpx!
-1bpx!
WI"#
.1bpx!
9QT E
|eY2bpx!
;1bpx!
`0Fp
A0@`
`0Fp
_1bP
QA #
~0bp
T)1
`0Fp
_1bP
QA #
~0bp
T)1
 5
 7
`0Fp
_1bP
QA #
~0bp
T)1
 5
 7
_0bP
*1Kp
%QM 
Lsc
@ Da
MTe]X
8R4Q
`0FP
A0@Z
`0FP
]0bP
w0bp
`0FP
]0bP
w0bp
`Af
`Af
`0FP
]0bP
w0bp
`Af
`Af
2`S0
2`T0bPx!
2TVP
@ Da
MTe]X
j@L7
A0bP
1bpx!
ZB.d
Py0bp
RA!#
^0bp
1bpx!
l1X`B
7$g@
1bpx!
P{0bp
RA!#
^0bp
1bpx!
ZBId
ba'
2<PP
 u
h#-0@
0 b#
 =
@*(d
;KpU
KHsTvq
`3X`B
7$g@
1bpx!
P{0bp
RA!#
^0bp
1bpx!
ZBId
ba'
2<PP
 u
h#-0@
0 b#
 =
@*(d
;KpU
n(lD
72bp
<BL7
H0bP
A0bP
J0bp
J0bP
A0bP
A0bp
J0bP
A0bP
T`/i
P/YC
>a`
KHsTwq
P5X`B
7$g@
1bpx!
P{0bp
RA!#
^0bp
1bpx!
ZBId
ba'
2<PP
 u
h#-0@
0 b#
 =
@*(d
;KpU
n(lD
72bp
<BL7
H0bP
A0bP
J0bp
J0bP
A0bP
A0bp
J0bP
A0bP
T`/i
P/YC
>a`
V03p
NaG
DaG
F'+H
ilF
6Z~p:ZB
KHsTxq
@7X`B
roA5
4bPx!
sCP
4bPx!
sCP
,>R[
4bPx!
sCP
g7FP
E$4KP
g7FP
A0b`
2DPDB
EmJT`
,A1P
$81x
A0b`
2bpx!
r0bpx!
q0bpx!
g7FP
';b`
ToAr
E$4KP
0ou@
';b`
cPA #
s0bpx!
s0bpx!
 r0bpx!
XAf
$'8?x
B0b`
2bpx!
0bpx!
0bpx!
g7FP
A0b`
2DPDB
EuJT`
,A1P
1|A(
$81x
A0b`
2bpx!
t0bpx!
s0bpx!
';b`
PA #
0bpx!
0bpx!
0bpx!
,A4P
1lA>
0*8]x
C0b`
2bpx!
0bpx!
0bpx!
Pz'A
A0@`
<:p*RA
-6(b
F 7
F 7
0(F
 0Pb
F 7
0(F
 0Pb
2TVPp!D
n1bp
n1bp
y1bp
y1bp
3ITe]X
A0@Xo
-2(b
-3(b
20G0
20H0bPx!
-3(b
20G0
20H0bPx!
 9
 =
-|(b
-3(b
20G0
20H0bPx!
 9
 =
-|(b
2`S0
2`T0bPx!
2QF 
(2bp
91bp
3ITe]X
<P$MTe]X
@"$Db$H
$P"%Tb%X
%`"&db&h
&p"'tb'x
/Bc/D
4Nc4PC5V#5X
5\C6f#6h
5l#7t
E`$ETdEX
DP$DDdDH$GtdGx
Fp$FddFh$L
O@%UTeUX
U`%TDeTH%Vd
Vp%WteWxeVh
dBFdF
eRFeV
fbFff
grFgv
tBGtF
uRGuV
vbGvf
wrGwv
`t0bp
pt0bp
VAK
fAf
Q@F
 9XAZ
7$r@
7Xw
2 G0bp
\v0bp
lv0bp
r/(R
A0@L1
2@QP
 &`b
 ]
 rj
2lY0
7$=AL7
E0bP
A0bP
YCnd
F6Y
O@sTvq
7$r@
7Xw
2 G0bp
\v0bp
lv0bp
r/(R
A0@L1
2@QP
 &`b
 ]
 rj
2lY0
7$=AL7
E0bP
A0bP
YCnd
F6Y
1bPx!
RDK
TDJ
)EF
O@sTwq
GAB
7$r@
7Xw
2 G0bp
\v0bp
lv0bp
r/(R
A0@L1
2@QP
 &`b
 ]
 rj
2lY0
7$=AL7
E0bP
A0bP
YCnd
F6Y
1bPx!
RDK
TDJ
)EF
PEWF
J0bP
A0bP
T`3i
P3YC
w _j
O@sTxq
DJEY
FA G
<P$M
GAB
dN~c
tbPE
2lAP
6bPx!
u0bpx!
 MA-w
1bpx!
RA #
0bpx!
2bpx!
*|1bpx!
2bpx!
PD #
dN~c
!top
2lAP
x0bpx!
 MA-z
1bpx!
RA #
0bpx!
2bpx!
U+|1bpx!
2bpx!
PD #
v0bPx!
RPM@
fQC 
p1bpx!
2bpx!
n2X@
dN~c
!top
2lAP
x0bpx!
 MA-z
1bpx!
RA #
0bpx!
2bpx!
U+|1bpx!
2bpx!
PD #
v0bPx!
RPM@
fQC 
p1bpx!
2bpx!
`CoP
2bpx!
1bpx!
QD #
2bpx!
0`0X
@AB
dN~c
!top
2lAP
x0bpx!
 MA-z
1bpx!
RA #
0bpx!
2bpx!
U+|1bpx!
2bpx!
PD #
v0bPx!
RPM@
fQC 
p1bpx!
2bpx!
`CoP
2bpx!
1bpx!
QD #
2bpx!
v('N
0bPx!
2bpx!
2bpx!
J@e*B
2bpx!
2bpx!
2bpx!
R5X@
@AB
(L1X@
FA G
$]VEi
3ITe]X
poA5
#8K]=
2TDPL
A0@Z0
A0@b0
s(m
B0KP
P\cp
A%H"
783A
<DPD
:1bp
AO7
PCZHij!U
Q` D
G0bpx!
A3bPx!
Q+"D),"
G0bpx!
D3XP
$)B
#8K]=
A`A
aPf0
C0KP
,A5bPx!
1bPx!
n8`"
XAIh%1
TB-P
8E0bpx!
=1bp
PAk@
RZ[H
 D0bpx!
A0bpx!
@!CTo
 D0bpx!
H0bpx!
1bPx!
TP'z
0bPx!
1bPx!
A\x%
B!(>@
K0K 
@[w@[p@[r@[s@[v@[z@[{@[}@[~@[
 [o0P
01bPx!
B0Kp
(Bmn
pC Fa0
a T4X`
`0AA
#8K]=
A`A
aPf0
C0KP
,A5bPx!
1bPx!
n8`"
XAIh%1
TB-P
8E0bpx!
=1bp
PAk@
RZ[H
 D0bpx!
A0bpx!
@!CTo
 D0bpx!
H0bpx!
1bPx!
TP'z
0bPx!
1bPx!
A\x%
B!(>@
K0K 
@[w@[p@[r@[s@[v@[z@[{@[}@[~@[
 [o0P
01bPx!
B0Kp
(Bmn
pC Fa0
J0PA
AbI
*`%
np'Y
pC0O`PC
T NP
zA>
pCPSbPC
tC@
`+P)
S=5bp
0bPx!
T0VP
Y!QJ
1bpx!
F0bpx!
0bPx!
 D0bpx!
X0bpx!
AbL7
1bPx!
a T8X`
  V1X0
4@p Ia
#8K]=
A`A
aPf0
C0KP
,A5bPx!
1bPx!
n8`"
XAIh%1
TB-P
8E0bpx!
=1bp
PAk@
RZ[H
 D0bpx!
A0bpx!
@!CTo
 D0bpx!
H0bpx!
1bPx!
TP'z
0bPx!
1bPx!
A\x%
B!(>@
K0K 
@[w@[p@[r@[s@[v@[z@[{@[}@[~@[
 [o0P
01bPx!
B0Kp
(Bmn
A9F
pC Fa0
J0PA
AbI
*`%
np'Y
pC0O`PC
T NP
zA>
pCPSbPC
tC@
`+P)
S=5bp
0bPx!
T0VP
Y!QJ
1bpx!
F0bpx!
0bPx!
 D0bpx!
X0bpx!
AbL7
1bPx!
TPgz
0bPx!
1bPx!
A'v"(>@7
N :!
,AXt
X0?A
\0K@
7 1
#,H@
A0@B>
j`;)
>hF
-LPH
E0bp
ea'f1
a T<X`
  V5X0
4@p Ia
s(IA{
7$r@
7<v@
s(P
2s(
7T~ 
2PV0
YPi0
"Ha/
 RA.
2lZP
1bpx!
E0bpx!
!D0bpx!
G0bpx!
F0bpx!
_-HT
1bpx!
F0bpx!
M*! 0
7<y@
s(P
7l~
7p{ 
2DS0
TA-P
8E0bpx!
=DPD
PA8@
A0bpx!
A3bPx!
BTO(Ro
E0bpx!
7m17
Io(7
Vp"j
V`3p
A0@^5
VP/:
B0bp
D0Xp
7<y@
s(P
7l~
7p{ 
2DS0
TA-P
8E0bpx!
=DPD
PA8@
A0bpx!
A3bPx!
BTO(Ro
E0bpx!
7m17
Io(7
Vp"j
V`3p
A0@^5
VP/:
B0bp
s(I*
78o#L7
78tC
M0K 
M0K 
7lx
tC@
EP;#
0bPx!
1bpx!
F0bpx!
0bPx!
 D0bpx!
R0bpx!
AbL7
1bPx!
#Da
FAB
7<y@
s(P
7l~
7p{ 
2DS0
TA-P
8E0bpx!
=DPD
PA8@
A0bpx!
A3bPx!
BTO(Ro
E0bpx!
7m17
Io(7
Vp"j
V`3p
A0@^5
VP/:
B0bp
s(I*
78o#L7
78tC
M0K 
M0K 
7lx
tC@
EP;#
0bPx!
1bpx!
F0bpx!
0bPx!
 D0bpx!
R0bpx!
AbL7
1bPx!
H'0(!
!a'2
3P)1(!
",H@
[AHa
:hF
$F"(
A0@R;
D0bp
#Da
B2XP
#2*#3:#4J#5Z#6j#7z#8
%R*%S:%TJ%UZ%Vj%Wz%X
'r*'s:'tJ'uZ'vj'wz'x
z)^X
FA G
MTe]X
@ X
mTe]P$M`
8R4Q
*>0
72#8r
<P$M
4@ Da
k0,h
FA G
MTe]Z
8R4Q
FA G
@"$Db$H
$P"%Tb%X
%`"&db&h
&p"'tb'x
/D#4@
4Hc4P
4Lc5T#5\
5X#6`
5hc6d
6t#7pc7x
FA G
MTe]X
!"#B"%b"'
#1"#3B#5b#7
&a"&cB&eb&g
'q"'sB'ub'w
$DB%F"%H
%V"&`
%fB&
/lb/
4rb4D
4Lc'P#5Tc5X
5`#6dc6h
6p#7vC7
7|"<
7dR0
@\`PB
Vpm5
x `^
@E*4
BT(
6X!0
bT(
T(C
2$J0P
`0XP
!Hdp
20APB
 `aP
2,F0
L7EP
"FAK
$T(
QF5P
l1XP
!Hdp
20APB
 `aP
2,F0
L7EP
"FAK
$T(
QF5P
7(;
[0bPx!
Xl5b
 `gQ
'T(r
L7B0
T(C
Hhs
3Twq
q!Sn
r2XP
f0XP
!Hdp
20APB
 `aP
2,F0
L7EP
"FAK
$T(
QF5P
7(;
[0bPx!
Xl5b
 `gQ
'T(r
L7B0
T(C
Hhs
A0bPx!
[Myh
7/
6X!0
k T(r
L7B0
T(C
 lPA
q!Sm
x3XP
l1XP
3ITe]X
?FDDH
ERDENdEX
E`dFh
Fn$Fp$Gv
GzDG|
HeTD%TN
TJ%UPEUbEV^
WrEWz
@"$Db$H
dP"dD&%F
dLf%N
eX"eT
e`&fdffh
fp&gtfgx
&hb&n
&xb'zB'|"'~
tBGtF
uRGuV
uZG-
5J#5H
vbGvf
wrGwv
JH6hc6l
tc7x
4QUd]
v@ Da
<P$M`
mTe]l
"!""#B"%b"'
#1"#3B#5b#7
&a"&cB&eb&g
'q"'sB'ub'w
2!#2#C2+
2/S2&
35c37334
31#39
6a#6cC6ec6g
7r37tS7vs7x
B"4B$TB&tB(
C24C4TC6tC8
Fb4FdTFftFh
Gr4GtTGvtGx
R"5R$UR&uR(
S25S4US6uS8
Vb5VdUVfuVh
Wr5WtUWvuWx
b"6b$Vb&vb(
c26c4Vc6vc8
fb6fdVffvfh
gr6gtVgvvgx
r"7r$Wr&wr(
s27s4Ws6ws8
vb7vdWvfwvh
$Tb%
4\C5^
6b#5P#4J
4Dc4L
4BETFE6f
6n#M
MrDGp
G|$L
FhdUV
7rC7\DE^
Fb$EPDFf
DBdDL
7zc>
Fff&fl
ftfgp&g\
dbEVf
eRFeD&dV
WzeW
W~%\
e\p%Wt
&|zG|
|xgw
|bGv`
vl'wt
nLGtN
uR't@GuV
L08
T0X
\0x
PD1
RL18
TT1X
V\1x
Xd1
Zl1
\t1
^|1
L28
T2X
\2x
L38
T3X
\3x
4^gq
9i!:
4MF
6 N!
KH#8Rq
A0b`
%0ho
z.@Da
6 n! 
552bpx!
0bpx!
0bpx!
82bpx!
0bpx!
0bpx!
0bpx!
1bpx!
0bpx!
2bpx!
0bpx!
2bpx!
 "1bpx!
?$s
KH#8Re
4@ $
';b`
|.@Fa
6 p!(
_(;s
552bpx!
0bpx!
0bpx!
82bpx!
0bpx!
0bpx!
0bpx!
1bpx!
0bpx!
2bpx!
0bpx!
2bpx!
 #1bpx!
v@3!
?$s
tBf
E0b`
xb'F
`'F
?c'tb
D'F
B.F
A.F
D.F
!/F
 @Hc
 0
KH#8Ru
4@ $
A0b`
%0ho
2@I0
2@Jp
dG3
0bpx!
0bpx!
0bpx!
0bpx!
1bpx!
0bpx!
0bpx!
0bpx!
4{A"
0bpx!
$1bpx!
';b`
3xb'F
/@vb
4MF
F3
6 v#(
dG3
n10X
u52bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
1bpx!
'b"#
&2bpx!
$&2bpx!
KH#8R
4@ $
r@ Da
<P$MTe]X
"!""#B"%b"'
#1"#3B#5b#7
&a"&cB&eb&g
'q"'sB'ub'w
2!#2#C2%c2'
31#33C35c37
6a#6cC6ec6g
7q#7sC7uc7w
C1$C3DC5dC7
Fa$FcDF
:edF
c;q$G
s;tTG
R!%R#ER%eR'
S1%S3ES5eS7
Va%VcEVeeVg
Wq%WsEWueWw
b!&b#Fb%fb'
c1&c3Fc5fc7
fa&fcFfeffg
gq&gsFgufgw
&B!4o
fo$TB
vB(tr
r!'r#Gr%gr
F0 
N0@
V0`
QF1 
SN1@
UV1`
W^1
Yf1
[n1
]v1
_~1
F2 
N2@
V2`
p2@
J30
R3`
Z3x
$BB$F
$T"%Xb%\
%d"&hb&l
&t"'xb'|
rNA
vMZEA
$@#4
%RB%
b-bB&
'~"'x
'|b't
5RC5V
6bC6
c<rC7
DBDD|
Dp$Gt
FddFRDEbdE\
EXDL
TJEUDeT^
Uf%Vd
%\z%Wt
WpE_
_P&eJ&dD
eZFe\
eVffhFfj&fl
fnFgv&gx
uTguR
u`'vN
uLGvf
vBGt@'|
'}rGwp
L08
T0X
\0x
PD1
RL18
TT1X
V\1x
Xd1
Zl1
\t1
^|1
L28
T2X
\2x
L38
T3X
\3x
@"$Db$H
4R#Y
%_*%S:%TJ%UZ%Vj%Wz%X
J00
R0P
Z0p
7j0
?@1
QF1 
SN1@
UV1`
W^1
Yf1
[n1
]v1
_~1
F2 
N2@
V2`
F3`
V3p
j3 
FP A
NP@A!
VP`A
P@C!
FQ E
NQ@E!
VQ`E
Q@G!
FR I
NR@I!%
VR`I
R@K!-
FS M
NS@M!5
VS`M
S@O!=
FT Q
NT@Q!E
VT`Q
T@S!M
FU U
NU@U!U
VU`U
U@W!]
FV Y
NV@Y!e
VV`Y
V@[!m
FW ]
NW@]!u
VW`]
W@_!}
FX a
NX@a!
VX`a
X@c!
FY e
NY@e!
VY`e
Y@g!
FZ i
NZ@i!
VZ`i
Z@k!
F[ m
N[@m!
V[`m
[@o!
F\ q
N\@q!
V\`q
\@s!
F] u
N]@u!
V]`u
]@w!
F^ y
N^@y!
V^`y
^@{!
F_ }
N_@}!
V_`}
rNA
vMZEA
@"$Db$H
$P"%Tb%X
%`"&db&h
&p"'tb'x
/@#4Dc4H
4P#5Tc5X
bC6f
7rC7vC
0T'(
)`A
0T'(
)`A
0T'(
I`A
0T'(
I`A
0T%TZ
p%tZ
0T%TZ
p%tZ
t%0Z
sQR
t%0Z
sQR
0T'(
)`A
!Dd0
0T'(
)`A
!Dd0
0T'(
I`A
!Dd0
0T'(
I`A
!Dd0
0T%TZ
p%tZ
0T%TZ
p%tZ
t%0Z
!PhP
t%0Z
!PhP
0T'(
)`A
!Dd0
0T'(
)`A
!Dd0
0T'(
I`A
!Dd0
0T'(
I`A
!Dd0
0T%TZ
p%tZ
0T%TZ
p%tZ
Z @@
t%0Z
!PhP
t%0Z
!PhP
0T'(
NP '(
sQB
0T'(
sQB
0T'(
NP '(
sQB
0T'(
sQB
sQR
sQR
0T'(
NP '(
!Lgp
0T'(
!Lgp
0T'(
NP '(
!Lgp
0T'(
!Lgp
!PhP
!PhP
0T'(
NP '(
!Lgp
0T'(
!Lgp
0T'(
NP '(
!Lgp
0T'(
!Lgp
Z @@
!PhP
!PhP
$BB$F
%RB%V
&bB&f
'rB'v
4BC4F
5RC5V
6bC6f
7rC7v
DBDDF
ERDEV
FbDFf
GrDGv
TBETF
UREUV
VbEVf
WrEWv
dBFdF
 eTfeX
fbFf
grFgv
o@'tDgtH
tP'u
u`'vdgv
,wtgwx
JpXp
D5b`x!
D5b`x!
D5b`x!
P-k0
D5b`x!
6b`x!
C@ls
D5b`x!
6b`x!
C@ls
D5b`x!
6b`x!
C@ls
,>R[
D5b`x!
6b`x!
D5b`x!
6b`x!
D5b`x!
6b`x!
,>r[
( RP@
D5b`x!
D5b`x!
D5b`x!
( RP@Dc
F/
`5p%@f
F/
B(.@!s
,>R[
a"^a
D5b`x!
6b`x!
C@ls
D5b`x!
6b`x!
C@ls
D5b`x!
6b`x!
C@ls
( RP@4g
F/
`5p%@f
F/
B(.@!c
,A2P
,>r[
a"^a
D5b`x!
6b`x!
D5b`x!
6b`x!
D5b`x!
6b`x!
( RP@tg
F/
`5p%@f
F/
B(.@!c
,A2P
a"^a
r*'s:'tJ
b!|j!
#2*#3:#4J#5
J%UZ%Vj
")Wz%X
E0jB
U8jB
E$jB
U,jB
0T'(
)`A
0T'(
)`A
0T'(
I`A
0T'(
I`A
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
sk`
0T'(
)`A
!Dd0
0T'(
)`A
!Dd0
0T'(
I`A
!Dd0
0T'(
I`A
!Dd0
!He0
!He0
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
H@%|
0T'(
)`A
!Dd0
0T'(
)`A
!Dd0
0T'(
I`A
!Dd0
0T'(
I`A
!Dd0
!He0
`!c
!He0
`!c
E<jB
UDjB
@- $
L7H0
E0jB
U8jB
H@%g
H@%|
0PE+
E0jB
U8jB
E$jB
U,jB
nP 7(
AAX 
nP 7(
AAX H@
EX H@
ehXB
@- $
L7H`
ETXD
nP 7(
!Xi0
AAX 
!Xi0
nP 7(
!Xi0
AAX H@
!Xi0
!\k0
EX H@
!\k0
ehXB
@- $
L7H`
ZC+`
ETXD
PI(`%
nP 7(
!Xi0
AAX 
!Xi0
nP 7(
!Xi0
AAX H@
!Xi0
!\k0
EX H@
!\k0
ehXB
@- $
L7H`
ZC+`
ETXD
PI(`%
 dp
&,bR
R6,!
2:,!
E4jB
U<jB
$,BR
".5!
*25!
 dp
*JAM
L0X@
elXB
@- $
$,BR
".5!
*25!
 dp
*JAM
L7H``
elXB
@- $
PA*`
PJ,`
^0X@
$,BR
".5!
*25!
 dp
*JAM
L7H``
sqQ
|1X@
elXB
@- $
PA*`
PJ,`
\UCT i
sQR
sQR
HZCp
hZCp
0ZCp
sQR
!PhP
!PhP
HZCp
hZCp
0ZCp
!PhP
Wa0D
!PhP
pZd D
!PhP
pZb D
HZCp
hZCp
Db$H
$P"%T
&^B&b
'nB'r
"4FC4J
0ZCp
!PhP
Wa0D
!pn0
F0 
N0@
V0`
QF1 
SN1@
UV1`
W^1
Yf1
[n1
]v1
_~1
R2P
Z2p
F3 
N3@
V3`
^3@
@"$Db$H
&p"'tb'x
6bC6f
7rC7v
TdEX
@ Da
<P$MTe]X
0bPx!
4bPx!
4bPx!
4bPx!
(ba
0bPx!
,>R[
a!^a
4bPx!
4bPx!
4bPx!
(ba
0bPx!
!LfP
,>R[
,>r[
a!^a
4bPx!
4bPx!
4bPx!
(ba
0bPx!
!LfP
(bak
,>R[
,>r[
a!^a
$BB$F
%RB%V
&bB&f
'rB'v
4RC5V
4bC6BC4rC7n
DBDDF
ERDEV
FbDFf
GrDGv
DOBET
TREUF
VbEVf
WrEWv
dBFdF
eRFeV
fbFff
grFgv
tBGtF
uRGuV
vbGvf
wrGwv
@ Da
<P$MTe]X
""2"$R"&r"(
#22#4R#6r#8
&b2&dR&fr&h
'r2'tR'vr'x
2"32$S2&s2(
32334S36s38
6b36dS6fs6h
7r37tS7vs7x
B"4B$TB&tB(
C24C4TC6tC8
Fb4FdTFftFh
Gr4GtTGvtGx
R"5R$UR&uR(
S25S4US6uS8
Vb5VdUVfuVh
Wr5WtUWvuWx
W~eZ
b%fb'
b*Fb!&b#
_26c?
c:6fdVffvc4Vc6vfh
fr6gtVgl
fvvg{
r"7r9
@"$Db$H
$P"%Tb%X
%`"&db&h
&p"'tb'x
/@#4Dc4H
4P#5Tc5X
5`#6dc6h
6p#7tc7x
?@$DDdDH
DP$ETdEX
E`$FddFh
Fp$GtdGx
O@%TDeTH
TP%UTeUX
U`%VdeVh
Vp%WteWx
_@&dDfdH
dP&eTfeX
e`&fdffh
fp&gtfgx
o@'tDgtH
tP'uTguX
u`'vdgvh
vp'wtgwx
L08
T0X
\0x
PD1
RL18
TT1X
V\1x
Xd1
Zl1
\t1
^|1
L28
T2X
\2x
L38
T3X
\3x
JP0A
RPPAa
ZPpA
PPCa
QXd)
H(`{9
(p-:
(@x:
()pm;
)0y=
h,PK
,P(K
-0*K
H8 -L
(9p}L
; ?M
;0MM
;0NM
;`OM
<PZM
x<pmM
<p|M
>P]N
8>0nN
x>@zN
XHP>[
H@O\
8IPH]
XJ0{_
J@ih
K lj
L l
L@>l
L0zl
x]p
8^`O
X^Ph
x^Po
8i0j
_ZL9TwoOverPi_ZL8expTable_ZL10exp10Table_ZL18asConstRange_hi_in_ZL18asConstRange_lo_in_ZL19asConstRange_hi_out_ZL19asConstRange_lo_out__sin_for_halfllvm.agx2.sinc.f32__isnan_half__isposinf_half__isneginf_half__isinf_half__isnegzero_halfair.tan.f16air.fma.f32llvm.agx2.rcp.f32air.acosh.f16llvm.agx2.rsqrt.f32air.fast_log.f32air.asinh.f16air.fabs.f16air.fabs.f32air.tanh.f16air.fast_exp.f32agx.air.fract.f16.fastair.floor.f16air.fmin.f16agx.air.fract.f16.nonfastair.cosh.f16llvm.exp2.f32air.sinh.f16air.atanh.f16air.fast_log2.f32air.atan2.f16air.atan.f16air.ldexp.f16air.clamp.s.i32air.acosh.v2f16air.acosh.v3f16air.acosh.v4f16air.asinh.v2f16air.asinh.v3f16air.asinh.v4f16air.atanh.v2f16air.atanh.v3f16air.atanh.v4f16agx.air.fract.v2f16.fastagx.air.fract.v2f16.nonfastagx.air.fract.v3f16.fastagx.air.fract.v3f16.nonfastagx.air.fract.v4f16.fastagx.air.fract.v4f16.nonfastair.cosh.v2f16air.cosh.v3f16air.cosh.v4f16air.sinh.v2f16air.sinh.v3f16air.sinh.v4f16air.tan.v2f16air.tan.v3f16air.tan.v4f16air.tanh.v2f16air.tanh.v3f16air.tanh.v4f16air.atan2.v2f16air.atan2.v3f16air.atan2.v4f16air.atan.v2f16air.atan.v3f16air.atan.v4f16air.simdgroup_async_copy_1d.read_Z42__metal_simdgroup_async_copy_1d_impl_step2ILb1EEviPU14MTLthreadgrouphPU9MTLdevicehillvm.agx2.previous.simd.valid.countllvm.agx2.total.simd.valid.countair.simdgroup_async_copy_1d.write_Z42__metal_simdgroup_async_copy_1d_impl_step2ILb0EEviPU14MTLthreadgrouphPU9MTLdevicehiair.simdgroup_async_copy_2d.read_Z46__metal_simdgroup_async_copy_2d_emulated_step1ILb1ELb0EEvmmPU9MTLdevicehmmDv2_mPU14MTLthreadgrouphmmS2_Dv2_liair.simdgroup_async_copy_2d.write_Z46__metal_simdgroup_async_copy_2d_emulated_step1ILb0ELb0EEvmmPU9MTLdevicehmmDv2_mPU14MTLthreadgrouphmmS2_Dv2_liair.simdgroup_async_copy_2d.read.unchecked_Z46__metal_simdgroup_async_copy_2d_emulated_step1ILb1ELb1EEvmmPU9MTLdevicehmmDv2_mPU14MTLthreadgrouphmmS2_Dv2_liair.simdgroup_async_copy_2d.write.unchecked_Z46__metal_simdgroup_async_copy_2d_emulated_step1ILb0ELb1EEvmmPU9MTLdevicehmmDv2_mPU14MTLthreadgrouphmmS2_Dv2_liadd2float__metal_tanf32_internalair.ldexp.f32air.convert.f.f32.u.i64air.convert.f.f32.u.i32reduceair.convert.s.i32.f.f32air.convert.f.f32.s.i32reduce_tan__nan_half__isnan_or_isinf_half__reflect_negate__metal_copysignf16__reduce_2_common__reduce_2_sin__reduce_2_cosair.sinpi.f16air.cospi.f16air.tanpi.f16__metal_ldexpf16_basicair.cospi.v2f16air.cospi.v3f16air.cospi.v4f16air.sinpi.v2f16air.sinpi.v3f16air.sinpi.v4f16air.tanpi.v2f16air.tanpi.v3f16air.tanpi.v4f16air.ldexp.v2f16air.ldexp.v3f16air.ldexp.v4f16__isnan_or_isinf__isinf__isnormal__isnan__nan__inf__exponent__mantissa__metal_copysignf32cosPolyllvm.fmuladd.f32__metal_rcpf32sinPolycospiPolysinpiPolytanpiPolyfast_cospiPolyfast_sinpiPolyfast_tanpiPoly__metal_sinf32llvm.lifetime.start.p0i8llvm.lifetime.end.p0i8__metal_sinpif32__metal_fast_sinpif32__metal_cosf32__metal_cospif32__metal_fast_cospif32__metal_tanf32__metal_fast_tanpif32__metal_tanpif32__metal_sincosf32__metal_expf32_kernel__metal_expf32__metal_exp10f32__metal_logf32__metal_log2f32__metal_log10f32__metal_add12f__metal_add22f__metal_add12condf__metal_add22condf__metal_mul12f__metal_mul22f__metal_mul122f__metal_log2_precise__metal_pow_common__metal_pow_internal__metal_powr_internal__metal_powf32__metal_powrf32__metal_acosf32__metal_acoshf32__metal_asinhf32__metal_asinf32atanfPoly__metal_atanf32__metal_atan2f32__metal_log1pf32__metal_atanhf32__metal_coshf32__metal_sinhf32__metal_tanhf32__metal_fmodf32air.fast_ldexp.f32air.convert.u.i64.f.f32air.convert.u.i32.f.f32air.convert.s.i64.f.f32air.convert.u.i64.f.f16air.convert.s.i64.f.f16air.convert.f.v2f32.u.v2i64air.convert.f.v3f32.u.v3i64air.convert.f.v4f32.u.v4i64air.convert.u.v2i64.f.v2f32air.convert.u.v3i64.f.v3f32air.convert.u.v4i64.f.v4f32air.convert.u.v2i64.f.v2f16air.convert.u.v3i64.f.v3f16air.convert.u.v4i64.f.v4f16air.convert.s.v2i64.f.v2f32air.convert.s.v3i64.f.v3f32air.convert.s.v4i64.f.v4f32air.convert.s.v2i64.f.v2f16air.convert.s.v3i64.f.v3f16air.convert.s.v4i64.f.v4f16__metal_acosv2f32__metal_acosv3f32__metal_acosv4f32__metal_acoshv2f32__metal_acoshv3f32__metal_acoshv4f32__metal_asinv2f32__metal_asinv3f32__metal_asinv4f32__metal_asinhv2f32__metal_asinhv3f32__metal_asinhv4f32__metal_atanv2f32__metal_atanv3f32__metal_atanv4f32__metal_atanhv2f32__metal_atanhv3f32__metal_atanhv4f32__metal_cosv2f32__metal_cosv3f32__metal_cosv4f32__metal_cospiv2f32__metal_cospiv3f32__metal_cospiv4f32__metal_fast_cospiv2f32__metal_fast_cospiv3f32__metal_fast_cospiv4f32__metal_coshv2f32__metal_coshv3f32__metal_coshv4f32__metal_expv2f32__metal_expv3f32__metal_expv4f32__metal_exp2v2f32__metal_exp2v3f32__metal_exp2v4f32__metal_exp10v2f32__metal_exp10v3f32__metal_exp10v4f32__metal_logv2f32__metal_logv3f32__metal_logv4f32__metal_log2v2f32__metal_log2v3f32__metal_log2v4f32__metal_log10v2f32__metal_log10v3f32__metal_log10v4f32__metal_sinv2f32__metal_sinv3f32__metal_sinv4f32__metal_sinpiv2f32__metal_sinpiv3f32__metal_sinpiv4f32__metal_fast_sinpiv2f32__metal_fast_sinpiv3f32__metal_fast_sinpiv4f32__metal_sinhv2f32__metal_sinhv3f32__metal_sinhv4f32__metal_sqrtv2f32__metal_sqrtv3f32__metal_sqrtv4f32__metal_tanv2f32__metal_tanv3f32__metal_tanv4f32__metal_tanpiv2f32__metal_tanpiv3f32__metal_tanpiv4f32__metal_fast_tanpiv2f32__metal_fast_tanpiv3f32__metal_fast_tanpiv4f32__metal_tanhv2f32__metal_tanhv3f32__metal_tanhv4f32__metal_atan2v2f32__metal_atan2v3f32__metal_atan2v4f32__metal_powv2f32__metal_powv3f32__metal_powv4f32__metal_powrv2f32__metal_powrv3f32__metal_powrv4f32__metal_fmodv2f32__metal_fmodv3f32__metal_fmodv4f32__metal_sincosv2f32__metal_sincosv3f32__metal_sincosv4f32air.ldexp.v2f32air.ldexp.v3f32air.ldexp.v4f32air.fast_ldexp.v2f32air.fast_ldexp.v3f32air.fast_ldexp.v4f32air_hadd_s_i8air_hadd_u_i8air_hadd_s_i16air_hadd_u_i16air_hadd_s_i32air_hadd_u_i32air_hadd_s_i64air_hadd_u_i64air_hadd_s_v2i8air_hadd_u_v2i8air_hadd_s_v2i16air_hadd_u_v2i16air_hadd_s_v2i32air_hadd_u_v2i32air_hadd_s_v2i64air_hadd_u_v2i64air_hadd_s_v3i8air_hadd_u_v3i8air_hadd_s_v3i16air_hadd_u_v3i16air_hadd_s_v3i32air_hadd_u_v3i32air_hadd_s_v3i64air_hadd_u_v3i64air_hadd_s_v4i8air_hadd_u_v4i8air_hadd_s_v4i16air_hadd_u_v4i16air_hadd_s_v4i32air_hadd_u_v4i32air_hadd_s_v4i64air_hadd_u_v4i64air_rhadd_s_i8air_rhadd_u_i8air_rhadd_s_i16air_rhadd_u_i16air_rhadd_s_i32air_rhadd_u_i32air_rhadd_s_i64air_rhadd_u_i64air_rhadd_s_v2i8air_rhadd_u_v2i8air_rhadd_s_v2i16air_rhadd_u_v2i16air_rhadd_s_v2i32air_rhadd_u_v2i32air_rhadd_s_v2i64air_rhadd_u_v2i64air_rhadd_s_v3i8air_rhadd_u_v3i8air_rhadd_s_v3i16air_rhadd_u_v3i16air_rhadd_s_v3i32air_rhadd_u_v3i32air_rhadd_s_v3i64air_rhadd_u_v3i64air_rhadd_s_v4i8air_rhadd_u_v4i8air_rhadd_s_v4i16air_rhadd_u_v4i16air_rhadd_s_v4i32air_rhadd_u_v4i32air_rhadd_s_v4i64air_rhadd_u_v4i64air_clz_i8air_clz_i16air_clz_i32air_clz_i64air_clz_v2i8air_clz_v2i16air_clz_v2i32air_clz_v2i64air_clz_v3i8air_clz_v3i16air_clz_v3i32air_clz_v3i64air_clz_v4i8air_clz_v4i16air_clz_v4i32air_clz_v4i64air_ctz_i8air_ctz_i16air_ctz_i32air_ctz_i64air_ctz_v2i8air_ctz_v2i16air_ctz_v2i32air_ctz_v2i64air_ctz_v3i8air_ctz_v3i16air_ctz_v3i32air_ctz_v3i64air_ctz_v4i8air_ctz_v4i16air_ctz_v4i32air_ctz_v4i64air_popcount_i8air_popcount_i16air_popcount_i32air_popcount_i64air_popcount_v2i8air_popcount_v2i16air_popcount_v2i32air_popcount_v2i64air_popcount_v3i8air_popcount_v3i16air_popcount_v3i32air_popcount_v3i64air_popcount_v4i8air_popcount_v4i16air_popcount_v4i32air_popcount_v4i64air_mul_hi_s_i8air_mul_hi_u_i8air_mul_hi_s_i16air_mul_hi_u_i16air_mul_hi_s_i32air_mul_hi_u_i32air_mul_hi_s_i64air.abs.s.i64air_mul_hi_u_i64air_mul_hi_s_v2i8air_mul_hi_u_v2i8air_mul_hi_s_v2i16air_mul_hi_u_v2i16air_mul_hi_s_v2i32air_mul_hi_u_v2i32air_mul_hi_s_v2i64air_mul_hi_u_v2i64air_mul_hi_s_v3i8air_mul_hi_u_v3i8air_mul_hi_s_v3i16air_mul_hi_u_v3i16air_mul_hi_s_v3i32air_mul_hi_u_v3i32air_mul_hi_s_v3i64air_mul_hi_u_v3i64air_mul_hi_s_v4i8air_mul_hi_u_v4i8air_mul_hi_s_v4i16air_mul_hi_u_v4i16air_mul_hi_s_v4i32air_mul_hi_u_v4i32air_mul_hi_s_v4i64air_mul_hi_u_v4i64air_mad_hi_s_i8air_mad_hi_u_i8air_mad_hi_s_i16air_mad_hi_u_i16air_mad_hi_s_i32air_mad_hi_u_i32air_mad_hi_s_i64air_mad_hi_u_i64air_mad_hi_s_v2i8air_mad_hi_u_v2i8air_mad_hi_s_v2i16air_mad_hi_u_v2i16air_mad_hi_s_v2i32air_mad_hi_u_v2i32air_mad_hi_s_v2i64air_mad_hi_u_v2i64air_mad_hi_s_v3i8air_mad_hi_u_v3i8air_mad_hi_s_v3i16air_mad_hi_u_v3i16air_mad_hi_s_v3i32air_mad_hi_u_v3i32air_mad_hi_s_v3i64air_mad_hi_u_v3i64air_mad_hi_s_v4i8air_mad_hi_u_v4i8air_mad_hi_s_v4i16air_mad_hi_u_v4i16air_mad_hi_s_v4i32air_mad_hi_u_v4i32air_mad_hi_s_v4i64air_mad_hi_u_v4i64air_mad_sat_s_i64air_mad_sat_u_i64air_mad_sat_s_v2i64air_mad_sat_u_v2i64air_mad_sat_s_v3i64air_mad_sat_u_v3i64air_mad_sat_s_v4i64air_mad_sat_u_v4i64air_rotate_i8air_rotate_i16air_rotate_i32air_rotate_i64air_rotate_v2i8air_rotate_v2i16air_rotate_v2i32air_rotate_v2i64air_rotate_v3i8air_rotate_v3i16air_rotate_v3i32air_rotate_v3i64air_rotate_v4i8air_rotate_v4i16air_rotate_v4i32air_rotate_v4i64air.acos.f32air.acos.v2f32air.acos.v3f32air.acos.v4f32air.acosh.f32air.acosh.v2f32air.acosh.v3f32air.acosh.v4f32air.asin.f32air.asin.v2f32air.asin.v3f32air.asin.v4f32air.asinh.f32air.asinh.v2f32air.asinh.v3f32air.asinh.v4f32air.atan.f32air.atan.v2f32air.atan.v3f32air.atan.v4f32air.atanh.f32air.atanh.v2f32air.atanh.v3f32air.atanh.v4f32air.cos.f32air.cos.v2f32air.cos.v3f32air.cos.v4f32air.cospi.f32air.cospi.v2f32air.cospi.v3f32air.cospi.v4f32air.fast_cospi.f32air.fast_cospi.v2f32air.fast_cospi.v3f32air.fast_cospi.v4f32air.cosh.f32air.cosh.v2f32air.cosh.v3f32air.cosh.v4f32air.exp.f32air.exp.v2f32air.exp.v3f32air.exp.v4f32air.exp2.f32air.exp2.v2f32air.exp2.v3f32air.exp2.v4f32air.exp10.f32air.exp10.v2f32air.exp10.v3f32air.exp10.v4f32air.log.f32air.log.v2f32air.log.v3f32air.log.v4f32air.log2.f32air.log2.v2f32air.log2.v3f32air.log2.v4f32air.log10.f32air.log10.v2f32air.log10.v3f32air.log10.v4f32air.sin.f32air.sin.v2f32air.sin.v3f32air.sin.v4f32air.sinpi.f32air.sinpi.v2f32air.sinpi.v3f32air.sinpi.v4f32air.fast_sinpi.f32air.fast_sinpi.v2f32air.fast_sinpi.v3f32air.fast_sinpi.v4f32air.sinh.f32air.sinh.v2f32air.sinh.v3f32air.sinh.v4f32air.sqrt.f32llvm.sqrt.f32air.sqrt.v2f32air.sqrt.v3f32air.sqrt.v4f32air.tan.f32air.tan.v2f32air.tan.v3f32air.tan.v4f32air.tanpi.f32air.tanpi.v2f32air.tanpi.v3f32air.tanpi.v4f32air.fast_tanpi.f32air.fast_tanpi.v2f32air.fast_tanpi.v3f32air.fast_tanpi.v4f32air.tanh.f32air.tanh.v2f32air.tanh.v3f32air.tanh.v4f32air.atan2.f32air.atan2.v2f32air.atan2.v3f32air.atan2.v4f32air.pow.f32air.pow.v2f32air.pow.v3f32air.pow.v4f32air.powr.f32air.powr.v2f32air.powr.v3f32air.powr.v4f32air.fmod.f32air.fmod.v2f32air.fmod.v3f32air.fmod.v4f32air.sincos.f32air.sincos.v2f32air.sincos.v3f32air.sincos.v4f32_Z14__agx_smul_satssllvm.agx1.smul.sat.i16_Z14__agx_umul_satttllvm.agx1.umul.sat.i16_Z14__agx_ssub_satssllvm.agx1.ssub.sat.i16_Z14__agx_ssub_satiillvm.agx1.ssub.sat.i32_Z14__agx_usub_satttllvm.agx1.usub.sat.i16_Z14__agx_usub_satjjllvm.agx1.usub.sat.i32_Z10__agx_ctlzcbllvm.ctlz.i8_Z10__agx_ctlzsbllvm.ctlz.i16_Z10__agx_ctlzibllvm.ctlz.i32_Z10__agx_cttzcbllvm.cttz.i8_Z10__agx_cttzsbllvm.cttz.i16_Z10__agx_cttzibllvm.cttz.i32_Z11__agx_ctpopcllvm.ctpop.i8_Z11__agx_ctpopsllvm.ctpop.i16_Z11__agx_ctpopillvm.ctpop.i32air.hadd.s.i8air.hadd.u.i8air.hadd.s.i16air.hadd.u.i16air.hadd.s.i32air.hadd.u.i32air.hadd.s.i64air.hadd.u.i64air.hadd.s.v2i8air.hadd.u.v2i8air.hadd.s.v2i16air.hadd.u.v2i16air.hadd.s.v2i32air.hadd.u.v2i32air.hadd.s.v2i64air.hadd.u.v2i64air.hadd.s.v3i8air.hadd.u.v3i8air.hadd.s.v3i16air.hadd.u.v3i16air.hadd.s.v3i32air.hadd.u.v3i32air.hadd.s.v3i64air.hadd.u.v3i64air.hadd.s.v4i8air.hadd.u.v4i8air.hadd.s.v4i16air.hadd.u.v4i16air.hadd.s.v4i32air.hadd.u.v4i32air.hadd.s.v4i64air.hadd.u.v4i64air.rhadd.s.i8air.rhadd.u.i8air.rhadd.s.i16air.rhadd.u.i16air.rhadd.s.i32air.rhadd.u.i32air.rhadd.s.i64air.rhadd.u.i64air.rhadd.s.v2i8air.rhadd.u.v2i8air.rhadd.s.v2i16air.rhadd.u.v2i16air.rhadd.s.v2i32air.rhadd.u.v2i32air.rhadd.s.v2i64air.rhadd.u.v2i64air.rhadd.s.v3i8air.rhadd.u.v3i8air.rhadd.s.v3i16air.rhadd.u.v3i16air.rhadd.s.v3i32air.rhadd.u.v3i32air.rhadd.s.v3i64air.rhadd.u.v3i64air.rhadd.s.v4i8air.rhadd.u.v4i8air.rhadd.s.v4i16air.rhadd.u.v4i16air.rhadd.s.v4i32air.rhadd.u.v4i32air.rhadd.s.v4i64air.rhadd.u.v4i64air.clz.i8air.clz.i16air.clz.i32air.clz.i64air.clz.v2i8air.clz.v2i16air.clz.v2i32air.clz.v2i64air.clz.v3i8air.clz.v3i16air.clz.v3i32air.clz.v3i64air.clz.v4i8air.clz.v4i16air.clz.v4i32air.clz.v4i64air.ctz.i8air.ctz.i16air.ctz.i32air.ctz.i64air.ctz.v2i8air.ctz.v2i16air.ctz.v2i32air.ctz.v2i64air.ctz.v3i8air.ctz.v3i16air.ctz.v3i32air.ctz.v3i64air.ctz.v4i8air.ctz.v4i16air.ctz.v4i32air.ctz.v4i64air.mul_hi.s.i8air.mul_hi.u.i8air.mul_hi.s.i16air.mul_hi.u.i16air.mul_hi.s.i32air.mul_hi.u.i32air.mul_hi.s.i64air.mul_hi.u.i64air.mul_hi.s.v2i8air.mul_hi.u.v2i8air.mul_hi.s.v2i16air.mul_hi.u.v2i16air.mul_hi.s.v2i32air.mul_hi.u.v2i32air.mul_hi.s.v2i64air.mul_hi.u.v2i64air.mul_hi.s.v3i8air.mul_hi.u.v3i8air.mul_hi.s.v3i16air.mul_hi.u.v3i16air.mul_hi.s.v3i32air.mul_hi.u.v3i32air.mul_hi.s.v3i64air.mul_hi.u.v3i64air.mul_hi.s.v4i8air.mul_hi.u.v4i8air.mul_hi.s.v4i16air.mul_hi.u.v4i16air.mul_hi.s.v4i32air.mul_hi.u.v4i32air.mul_hi.s.v4i64air.mul_hi.u.v4i64air.mad_hi.s.i8air.mad_hi.u.i8air.mad_hi.s.i16air.mad_hi.u.i16air.mad_hi.s.i32air.mad_hi.u.i32air.mad_hi.s.i64air.mad_hi.u.i64air.mad_hi.s.v2i8air.mad_hi.u.v2i8air.mad_hi.s.v2i16air.mad_hi.u.v2i16air.mad_hi.s.v2i32air.mad_hi.u.v2i32air.mad_hi.s.v2i64air.mad_hi.u.v2i64air.mad_hi.s.v3i8air.mad_hi.u.v3i8air.mad_hi.s.v3i16air.mad_hi.u.v3i16air.mad_hi.s.v3i32air.mad_hi.u.v3i32air.mad_hi.s.v3i64air.mad_hi.u.v3i64air.mad_hi.s.v4i8air.mad_hi.u.v4i8air.mad_hi.s.v4i16air.mad_hi.u.v4i16air.mad_hi.s.v4i32air.mad_hi.u.v4i32air.mad_hi.s.v4i64air.mad_hi.u.v4i64air.mad_sat.s.i64air.mad_sat.u.i64air.mad_sat.s.v2i64air.mad_sat.u.v2i64air.mad_sat.s.v3i64air.mad_sat.u.v3i64air.mad_sat.s.v4i64air.mad_sat.u.v4i64air.rotate.i8air.rotate.i16air.rotate.i32air.rotate.i64air.rotate.v2i8air.rotate.v2i16air.rotate.v2i32air.rotate.v2i64air.rotate.v3i8air.rotate.v3i16air.rotate.v3i32air.rotate.v3i64air.rotate.v4i8air.rotate.v4i16air.rotate.v4i32air.rotate.v4i64air.popcount.i8air.popcount.i16air.popcount.i32air.popcount.i64air.popcount.v2i8air.popcount.v2i16air.popcount.v2i32air.popcount.v2i64air.popcount.v3i8air.popcount.v3i16air.popcount.v3i32air.popcount.v3i64air.popcount.v4i8air.popcount.v4i16air.popcount.v4i32air.popcount.v4i6431001.638.1air64-apple-macosx11.0.0llvm-link
b0$
mEX4
X @6
WpLO
C$z8
P$v`
wchar_sizeair.max_device_buffersair.max_constant_buffersair.max_threadgroup_buffersair.max_texturesair.max_read_write_texturesair.max_samplersair.compile.denorms_disableair.compile.fast_math_enableair.compile.framebuffer_fetch_enableApple metal version 31001.638 (metalfe-31001.638.1)Metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/raytracing/raytracing_runtime_nop.metal
$D3
0@D4
dL3
ksi{#
c+s1c
air.get_size_intersection_function_tableagc.illegal_raytracing_function_callair.get_null_intersection_function_tableair.is_null_intersection_function_tableair.get_unique_identifier_intersection_function_tableair.get_null_primitive_acceleration_structureair.is_null_primitive_acceleration_structureair.get_unique_identifier_primitive_acceleration_structureair.get_null_instance_acceleration_structureair.is_null_instance_acceleration_structureair.get_unique_identifier_instance_acceleration_structureair.intersectair.intersect.triangle_dataair.intersect.instancingair.intersect.instancing.triangle_dataair.intersect.instancing.world_space_dataair.intersect.instancing.triangle_data.world_space_data31001.638.1air64-apple-macosx13.0.0/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/raytracing/raytracing_runtime_nop.metal
b0$
P`"tA
#e@F
WpLO
C$va
P$v`
wchar_sizeair.max_device_buffersair.max_constant_buffersair.max_threadgroup_buffersair.max_texturesair.max_read_write_texturesair.max_samplersair.compile.denorms_disableair.compile.fast_math_enableair.compile.framebuffer_fetch_enableApple metal version 31001.638 (metalfe-31001.638.1)Metal/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/raytracing/raytracing_runtime_emulation.metal
$D3
0@D4
dL3
ksi{#
c+s1c
_Z5asb64mair.get_size_intersection_function_tableagc.illegal_raytracing_function_callair.get_null_intersection_function_tableair.is_null_intersection_function_tableair.get_unique_identifier_intersection_function_tableair.get_null_primitive_acceleration_structureair.is_null_primitive_acceleration_structureair.get_unique_identifier_primitive_acceleration_structureair.get_null_instance_acceleration_structureair.is_null_instance_acceleration_structureair.get_unique_identifier_instance_acceleration_structureair.intersectair.intersect.triangle_dataair.intersect.instancingair.intersect.instancing.triangle_dataair.intersect.instancing.world_space_dataair.intersect.instancing.triangle_data.world_space_data31001.638.1air64-apple-macosx13.0.0/System/Volumes/Data/SWE/Apps/DT/BuildRoots/BuildRoot8/ActiveBuildRoot/Library/Caches/com.apple.xbs/Sources/AppleEmbeddedGPUDrivers/AppleEmbeddedGPUDrivers-227.2.8/Compiler/runtime/raytracing/raytracing_runtime_emulation.metal
__TEXT
__GPU_METADATA
__GPU_LD_MD
B c0
s2R"
b$C4 
S6r&
<`A
>2.Q
P%@Fpg`
RwbVr
ftGd$T
Wfvv
F4VL
DXeH
uJTZ7j
ld\EL
n6~UNt^
agc.coefficient_w
agc.coefficient_depth
agc.coefficient_point_coord
agc.coefficient_primitive_id
agc.coefficient_barycentric_coord
agc.buffer_pointers
agc.sampler_words
agc.sampler_es1_lod_bias
agc.sampler_unique_id
agc.sampler_heap_index
agc.constant_sampler_words
agc.read_image_words
agc.write_image_words
agc.image_dim
agc.image_array_info
agc.image_mipmap_count
agc.image_sample_count
agc.image_pack_format
agc.image_base_level
agc.image_unique_id
agc.image_heap_index
agc.sampler_state_struct_ptr
agc.image_state_struct_ptr
agc.constant_sampler_unique_id
BFBS
AGCCodeTranslator.PrimitiveType
Triangle
Line
Point
AGCCodeTranslator.TessellationType
None
AGCCodeTranslator.StepFunction
PerPatchPerInstance
PerInstance
PerPatch
Constant
AGCCodeTranslator.PartitionMode
FractionalEven
FractionalOdd
Integer
Pow2
AGCCodeTranslator.PatchType
Quad
Triangle
AGCCodeTranslator.ComputeVIRegType
CtxSwitchSizeHI
CtxSwitchSizeLO
CtxSwitchDataHI
CtxSwitchDataLO
LocalIdYZ
LocalIdZ
LocalIdY
LocalIdX
AGCCodeTranslator.FragmentShaderDepthQualifier
Less
Greater
AGCCodeTranslator.VertexShaderVaryingType
Deferred
Primitive
Flat
Linear
AGCCodeTranslator.VertexShaderBuiltinType
PatchREV
PatchID
PatchV
PatchU
TFVertexID
VertexFetchID
VertexID
InstanceFetchID
InstanceID
None
AGCCodeTranslator.BorderColor
OpaqueWhite
OpaqueBlack
TransparentBlack
AGCCodeTranslator.SamplerCompareFunction
Always
NotEqual
Equal
GreaterEqual
Greater
LessEqual
Less
Never
None
AGCCodeTranslator.SamplerMinMagFilter
Bicubic
Linear
Nearest
AGCCodeTranslator.SamplerMipFilter
Linear
Nearest
NotMipmapped
AGCCodeTranslator.SamplerAddressMode
ClampToBorderColor
ClampToZero
MirrorRepeat
Repeat
MirrorClampToEdge
ClampToEdge
AGCCodeTranslator.VertexShaderOutputType
Varying0
ClipDist0
FogCoord
PointSize
BackFaceColor
FrontFaceColor
Position
AGCCodeTranslator.CompileReply
mesh_info
object_info
intersection_info
mtl_post_tessellation_info
mtl_fragment_info
mtl_vertex_info
compute_info
fragment_info
vertex_info
common_info
AGCCodeTranslator.MeshShaderInfo
max_amp_count
primattr_present
needs_threadgroup_counts
max_total_threads_per_threadgroup
primattr_amplified
point_size_amplified
position_amplified
primitive_culled_present
layer_id_present
viewport_id_present
clip_distance_count
point_size_present
out_iterator
force_unclamped_z
amplified_generic_varying_counts
shared_generic_varying_counts
total_amplified_primitive_size
total_shared_primitive_size
total_amplified_tg_size
total_shared_tg_size
total_amplified_vertex_size
total_shared_vertex_size
primitive_type
max_primitive_count
max_vertex_count
threadgroup_dim
AGCCodeTranslator.ObjectShaderInfo
max_total_threads_per_threadgroup
payload_alignment
payload_size
max_threadgroups_per_mesh
threadgroup_dim
AGCCodeTranslator.uint3
AGCCodeTranslator.IntersectionFunctionInfo
max_parallel_leaves_pot
threads_per_leaf_pot
user_payload_alignment
user_payload_size
driver_payload_size
AGCCodeTranslator.ShaderStatistics
compiler_timings
instruction_count
plugin_abs_time
AGCCodeTranslator.PerformanceNumber
abs_time
name
AGCCodeTranslator.InstructionCount
control
total
AGCCodeTranslator.MTLVaryingTypes
types
AGCCodeTranslator.MTLVaryingSemantics
semantics
AGCCodeTranslator.MTLPostTessellationInfo
needs_rev
tessellation_type
max_tessellation_factor
tessellation_factor_scale_enable
step_function
partition_mode
patch_type
AGCCodeTranslator.MTLFragmentInfo
early_fragment_test
has_primitive_buffer_read
manufacture_unlinked_varyings
has_ordered_side_effects
has_side_effects
write_sample_mask_present
discard_present
force_unclamped_z
out_iterator
varying_index_override
varying_types
varying_semantics
AGCCodeTranslator.MTLVertexInfo
varying_types
varying_semantics
builtins
attribs
input_reg_count
AGCCodeTranslator.MTLVertexAttribInput
base_after_divisor
divisor
stride_in_words
offset_in_words
size_in_words
is_instanced
arg_no
register_offset
AGCCodeTranslator.MTLVertexBuiltin
builtin_type
register_offset
AGCCodeTranslator.ComputeKernelInfo
max_total_threads_per_threadgroup
wg_padding_enabled
global_atomics_present
local_atomics_present
vi_inputs
AGCCodeTranslator.ComputeVIInput
type
register_offset
AGCCodeTranslator.FragmentShaderInfo
depth_qualifier
phase_offset
output_mrt_mask_override
input_mrt_mask_override
disable_triangle_merging
AGCCodeTranslator.VertexShaderInfo
transform_feedback_vertex_stride
transform_feedback_buffer_mode
transform_feedback_varying
out_iterator
force_unclamped_z
amplified_generic_varying_counts
shared_generic_varying_counts
clip_distance_count
total_amplified_vertex_size
total_shared_vertex_size
point_size_present
rhw_present
vertex_inputs
AGCCodeTranslator.ComponentCountInfo
component_count_f32_npc
component_count_f32_flat
component_count_f32_linear
component_count_f16_npc
component_count_f16_flat
component_count_f16_linear
AGCCodeTranslator.VertexShaderTransformFeedbackVarying
buffer_offset
buffer_id
uvws_offset
output_size
AGCCodeTranslator.VertexShaderOutIterator
semantic
type
offset_f32
offset_f16
is_f16
AGCCodeTranslator.VertexInputs
builtin_data
attrib_data
AGCCodeTranslator.VertexBuiltinData
register_offset
builtin_type
type
code
component_count
AGCCodeTranslator.VertexAttribData
register_offset
type
code
component_count
AGCCodeTranslator.ShaderInfo
ray_user_payload_alignment
ray_user_payload_size
ray_driver_payload_size
requires_linktime_barrier_patching
has_simdgroup_atomic_notify
has_observable_side_effect
has_threadgroup_barrier
tls_infos
tls_alignment
tls_size
force_dylib_base
is_user_shader
has_hw_buffer_bounds_checking_safety
has_hw_buffer_bounds_checking
buffer_bindings_gpuva_masks
texture_write_mask
bindless_sampler_gather_mask
bindless_texture_gather_write_mask_upper
bindless_texture_gather_write_mask_lower
bindless_texture_gather_mask_upper
bindless_texture_gather_mask_lower
is_instrumented_for_debugging
debug_name
main_offset
const_calc_phase_offset
constant_sampler_air_bitmasks
constant_samplers
debug_type
debug_id
debug_info
AGCCodeTranslator.TLSInfo
offset
name
AGCCodeTranslator.BufferGPUVAMask
gpuva_63_40
bindpoint_index
AGCCodeTranslator.ConstantSampler
bits
border_color
lod_max
lod_min
max_aniso
compare
normalized
mip_filter
min_filter
mag_filter
r_mode
t_mode
s_mode
BFBS
AGCCodeTranslatorG11.CompileReply
common_info
vertex_info
AGCCodeTranslatorG11.ShaderInfo
visible_functions
AGCCodeTranslatorG11.VisibleFunction
offset
name
AGCCodeTranslatorG11.VertexShaderInfo
layer_id_amplified
viewport_id_amplified
point_size_amplified
position_amplified
layer_id_present
viewport_id_present
BFBS
AGCCodeTranslatorG10.CompileReply
common_info
tile_info
fragment_info
compute_info
AGCCodeTranslatorG10.ShaderInfo
visible_functions
AGCCodeTranslatorG10.VisibleFunction
offset
name
AGCCodeTranslatorG10.TileShaderInfo
max_total_threads_per_threadgroup
image_block_sample_length
has_quad_builtins
force_cvr
AGCCodeTranslatorG10.FragmentShaderInfo
image_block_sample_length
explicit_lib
must_shade
has_post_depth_coverage
AGCCodeTranslatorG10.ExplicitLIBInfo
rog_coverage_mask_hi
rog_coverage_mask
AGCCodeTranslatorG10.ComputeKernelInfo
can_optimize_tg_for_execution_width
image_block_data_size
agc.main
agc.finalize
e-p:64:64:64-f32:32:32-i64:64:64-i32:32:32-i16:16:16-v32:32:32-n32-S64
agc.coefficient
agc.read_vi.f32
agx1-apple-ios
agx2-apple-ios
Optimized
Lowered
override-extra-attrib
Accept mismatch between AGX_EXTRA_LLVM_ATTRIB in the Metadata and the environment.
PipelineType
OutputSelection
EnableOpt
Request.Options.FastIsel
Request.Options.FastMath
Request.Options.FPContract
Request.Options.RelocModel
EnableLogging
Unexpected null ConfigMD
Compute
Graphic
Driver
DynamicLibrary
None
Textual
Binary
TextualAndBinary
Strict
Standard
Fast
Static
show-mc-encoding
Show encoding in .s output
Unknown GPU 
Available targets:
TargetFeatures=
Cannot create the TargetMachine
Warning
Info
Performance
Timing
Assembly
[Performance Stats] Instructions: 
 ; Registers: 
 ...
[Timing] 
enable-driver-opt-passes
Enable optimization passes in driver pipeline
disable-fast-math-module-flag
Turn of FastMath module flag for this compilation
agx-debugify
Synthesize debug info before compilation
Cannot create MCInstrInfo
Assembly parsing is not enabled for this target
Error during assembler.
Can't initialize CodeEmitter
Can't initialize AsmBackend
Can't initialize ObjStreamer
Can't create pipeline, unknown CodeGenOutput requested.
unknown type
Driver shader with opt requested (won't honor)
Unknown pipeline type
air.visible
Can't initialize backend, unhandled OutputSelection
Can't initialize backend
/Library/Logs/Metal
utility
LogLoweredShaders
com.apple.Metal
llvm-agx-shader-
.%%%%%%%%.ll
agx-asm-injection
AsmInjection info file
agx.shaderHash
agxcompiler.config
Request.ShaderID
Request.ShaderType
Fail to open asm shader file: 
Asm injection failed
Fail to open injection file: 
agx.segments
agx1-apple-ios
agx2-apple-ios
-dualphantom
sdag
combine1
legalize_types
combine_lt
legalize_vec
legalize_types2
combine_lv
legalize
combine2
isel
sched
emit
irtranslator
legalizer
regbankselect
instruction-select
agx2-prelegalizer-combiner
agx2-postlegalizer-combiner
Start
------ 
compilation flags for
compilation key description for
Translator Metadata
Target Translator Metadata
Other
LLVM IR
shader 
 ------
Unable to lower addrspacecast
g10p-b0
g11m-a0
g11m-b0
g11p-a0
g11p-b0
g11g-a0
g11g-b0
g12m-a0
g12p-a0
g12p-b0
g12g-b0
g12x
g13p-a0
g13p-b0
g13g-a0
g13g-b0
g13s-a0
g13s-b0
g13c-a0
g13c-b0
g13d-a0
g13d-b0
g14p-a0
g14p-b0
g14g-a0
g14g-b0
// no-op MFUNI for improved clausing
tpp_functions
NumFullRateInstructions
NumHalfRateInstructions
NumQuarterRateInstructions
NumSixthRateInstructions
NumEighthRateInstructions
RateScaledInstructions
MoveInstructions
ImmInstructions
ComplexInstructions
UniformMoveInstructions
UniformLoadInstructions
UniformMoveBytes
UniformLoadBytes
TotalStallCycles
ImmStallCycles
F16StallCycles
F32StallCycles
ComplexStallCycles
TotalMathCycles
TotalMathClauses
ShortClauseInefficiency
AfterPixwaitInstructions
UnpairedMoveInstructions
RegisterFileWritebacks
MoveInstructionWritebacks
RegistersForwarded
PixwaitInstructions
ForwardedIterates
LoadCoefInstructions
NumLoops
TotalLoopInsts
TotalLoopDataInsts
UniformRegisterCount
TextureRegisterCount
SamplerRegisterCount
SpillBufferSize
InvalidScheduleClasses
agx.interpolations
AGX2 Assembly Printer
Unsupported calling convention
Extensions not implemented yet
AGX2 Specific CodeGen Prepare
agx2-codegen-prepare
AGX2 Specific CodeGen Prepare CFGMod
agx2-codegen-prepare-cfgmod
AGX2 Specific CodeGen Prepare: CFG Modifying Part
Unsupported pack/unpack format: 
AGX2 Common Store Backfiller
agx2-common-store-backfiller
AGX2 Common Store Backfiller Pass
AGX2 constant merger pass
AGX2 Expand Pseudos
agx2-expand-pseudos
AGX2 expand pseudo inst pass
AGX2 Image Cache Bit
agx2-image-cache
AGX2 Image Cache Bit Pass
OptimizeImageCacheBits
SampleWriteOverride
SampleReadOverride
ImageWriteBlockOverride
AGX2 IDep Insertion Pass
Unhandled instruction with local fence
AGX2 IDep Insertion
agx2-idep
Unhandled number of load bytes.
agx2-f16
agx2-f32
agx2-uni64
agx2-cf96
agx2-tex192
agx2-uni96
agx2-uni160
agx2-abs32-lo
agx2-abs32-hi
agx2-got64
agx2-got32
agx2-gotss
agx2-got-tls
agx2-addrspace-private
agx2-addrspace-device
agx2-addrspace-device-constant
agx2-addrspace-threadgroup
agx2-addrspace-sampler
agx2-addrspace-texture
agx2-addrspace-coefficients
agx2-addrspace-threadgroup-private
agx2-addrspace-device-private
agx2-addrspace-device-threadgroup
agx2-addrspace-system
agx2-addrspace-uniform
MemoryWriteCacheCtl
MemoryWriteL2Pers
AGX2 iterator forwarding pass
AGX2 Instruction Selection
Unsupported stack access
agx2-isel
DynamicStackStore
 byte dynamic stack store
 byte static stack load
samplesnoalias
constimage(
image(
SampleReadL2Pers
Invalid sample LOD operand for architecture
MemoryReadCacheCtl
SampleReadCacheCtl
SampleWriteCacheCtl
SampleWriteL2Pers
AGX2ISD::FRET
AGX2ISD::VRET
AGX2ISD::READ_SHARED
AGX2ISD::READ_COEFF
AGX2ISD::WRITE_UNIFORM
AGX2ISD::READ_ADDRESS
AGX2ISD::ITR
AGX2ISD::ITR_PROJ
AGX2ISD::ITR_SAT
AGX2ISD::ITR_PROJ_SAT
AGX2ISD::ITR_16x2
AGX2ISD::ITR_PROJ_16x2
AGX2ISD::ITR_3D
AGX2ISD::ITR_PROJ_16x3
AGX2ISD::ITR_4D
AGX2ISD::ITR_PROJ_16x4
AGX2ISD::ITR_32x2
AGX2ISD::ITR_PROJ_32x2
AGX2ISD::ITR_32x3
AGX2ISD::ITR_PROJ_32x3
AGX2ISD::ITR_32x4
AGX2ISD::ITR_PROJ_32x4
AGX2ISD::RCP
AGX2ISD::RSQRT
AGX2ISD::SQRTSTEP
AGX2ISD::QREFL
AGX2ISD::F16DIVSTEP
AGX2ISD::FPTOS8
AGX2ISD::FPTOU8
AGX2ISD::FPTOS8_SCALE
AGX2ISD::FPTOU8_SCALE
AGX2ISD::F16MATMAD4x4
AGX2ISD::F16MATMAD8x8
AGX2ISD::F32MATMAD4x4
AGX2ISD::F32MATMAD8x8
AGX2ISD::SIMDSHFFUPI
AGX2ISD::SIMDSHFFDNI
AGX2ISD::SIMDSHFFUPF
AGX2ISD::SIMDSHFFDNF
AGX2ISD::SPILL8
AGX2ISD::SPILL16
AGX2ISD::SPILL32
AGX2ISD::SPILL48
AGX2ISD::SPILL64
AGX2ISD::SPILL96
AGX2ISD::SPILL128
AGX2ISD::RELOAD8
AGX2ISD::RELOAD16
AGX2ISD::RELOAD32
AGX2ISD::RELOAD48
AGX2ISD::RELOAD64
AGX2ISD::RELOAD96
AGX2ISD::RELOAD128
AGX2ISD::BIT_EXTRACT
AGX2ISD::SELECT_CC_NNAN
AGX2ISD::FLUSH_DENORM
agx2-lower
Invalid sample offset in sample mode itr/itrproj. Only 0, 1, 2, and 3 are supported sample mode offsets.
 + (
-byte load from 
-byte store to  
There are no dynamically indexed uniform loads on G10
enable-cse-in-agx2-iselprepare
Should enable CSE in AGX2 ISel Prepare
fma-shff-hoist-depth-agx2
Should hoist instructions to allow forming fma.shff up to this hoist depth.
AGX_FMA_SHFF_HOIST_DEPTH
Preprocess instructions before the instruction selector
agx2iselprep
AGX2ISelPrepare
Loading 32-bit sized data into 16-bit registers is undefined.
Indirect only supported on G12
Unsupported sqrt intrinsic.
MemoryReadL2Pers
ImageWriteBlockCacheCtl
ImageWriteBlockL2Pers
Invalid offset type
libaccess
]: {
AtomicCacheCtl
AtomicL2Pers
Unknown integer predicate
agx2-post-ra-peephole-regs-live-over-calls
Show the number of registers live over each call
AGX2 Post RA Peephole
agx2-post-ra-peephole
AGX2 post-RA peephole pass
Registers live over call instance: 
bb: 
: caller: 
: callee: 
  gpr16h: 
  gpr16l: 
AGX2 pseudo wait placement pass
agx2-pseudo-wait
CSR_AGX2_INTER
CSR_AGX2_PR
agx2-huge-life-span
Consider any live-interval with a size bigger than this number as being too expensive to break down in region splitting. This is to avoid high compile time. The size of a live-range is the cumulative distance covered by a live-interval in terms of SlotIndex.
Unable to materialize frameindex: invalid opcode!
Unable to materialize frameindex: invalid shift!
Unable to materialize spill!
agx2-rematerialize-large-programs
Use scaling rematerializations limit (100000 virtual registers) or user a supplied value that grows with program size beyond that value
AGX2 Rematerialize
agx2-rematerialize
AGX2 rematerialize pass
Custom AGX2 scheduler.
AvailableMathQ
AvailableMoveQ
AvailableImmQ
AvailableAsyncQ
AvailableLoadLikeQ
AvailableStoreLikeQ
AvailableMovMskQ
AvailableOtherQ
agx2-set-spill-to-lm-tgt-threadgroup-size
Option to set the threadgroup size for the Set Spill to LM Target pass
agx2-set-spill-to-lm-tgt-default-lower-bound
Minimum number of registers we allocate for functions we don't know when processing the representative function (cprog in particular)
agx2-set-spill-to-lm-tgt-spilling-room
Number of memory slots (1 slot == 4 Bytes) we should give to account for spilling heuristic imperfection.
agx2-set-spill-to-lm-tgt-occupancy-limit
Occupancy limit in percent over which the shaders are not even considered for spilling to LM
agx2-set-spill-to-lm-tgt-handle-unspillable
Enable the handling of unspillable live-range (unsafe)
agx2-set-spill-to-lm-tgt-print-liveness
agx2-set-spill-to-lm-tgt-print-regpressure
Print the full regpressure information
Check if we should force spilling to LM
agx2-set-spill-to-lm-tgt
AGX2SetSpillToLMTarget
AGX_SPILL_TO_LM_THREADGROUP_SIZE
cacl1_cacl2
bypl1_cacl2
bypl1_bypl2
disable-agx2-fma-contraction
agx2-new-scheduler
Use the new AGX2 scheduling heuristics
agx2-run-set-spill-to-lm-tgt
Use the optimization that decides how much to spill to LM
enable-agx2-canonicalize-passes
Enable canonicalization passes
disable-agx2-combining
enable-agx2-memop-verifier
Enable verification of presence of Mem Operands
agx2-replace-fast-math-with-relaxed
Add relaxed-math flags to fp operations that have fast.
AGX2 TOC Optimizer
agx2-toc-optimization
AGX2 TOC Optimizer Pass
agx2-frag-sync-func-calls-side-effects
Assume whether or not unknown functions have side effects
Add Frag Sync operations where needed
agx2-frag-sync
driver_param_buffer
Shader has no exit block
AGX2 verifier of memory operands for instructions
Instruction should have MemOp: 
Some instructions should have memory operands
AGX_PER_THREAD_LM_SPILL_BYTES
AGX_THREAD_GROUP_SIZE
AGX_LM_SPILL_LAYOUT_SOA
 disqualified use: 
, ExecutionRate=
LM Spill candidates:
  Spill FI#
 (UsageRate: 
AGX2 nopifier pass
AGX2 repair matmad
agx2-repair-matmad
AGX2 Repair MatMad pass
enable-agx2-postlegalizer-combiner
Enable the agx2 post legalization machine instruction combiner
enable-cse-in-agx2-postlegalizer-combiner
Should enable CSE in AGX2 Postlegalizer Combiner
Combine agx2 machine instrs after legalization
AGX2PostLegalizerCombiner
enable-agx2-postselection-combiner
Enable the agx2 post selection machine instruction combiner
Combine agx2 machine instrs after selection
agx2-postselection-combiner
AGX2PostSelectionCombiner
enable-agx2-prelegalizer-combiner
Enable the agx2 pre legalization machine instruction combiner
enable-cse-in-agx2-prelegalizer-combiner
Should enable CSE in AGX2 Prelegalizer Combiner
Combine agx2 machine instrs before legalization
AGX2PreLegalizerCombiner
Experimental copy LICM pass
agx2-copy-licm
-1.0
AddRelaxedMathFlags
add-relaxed-math-flags
New AGX2 scheduler
TopQ
BotQ
AGX2 lmspill
agx2-lmspill
AGX2 LM spill pass
Invalid multiply factor
Analysis containing CSE Info
cseinfo
Analysis for ComputingKnownBits
gisel-known-bits
GlobalISel Combiner
Control the rules which are enabled. These options all take a comma separated list of rules to disable and may be specified by number or number range (e.g. 1-10).
enable-cse-in-irtranslator
Should enable CSE in irtranslator
gisel-irtranslator
GISelFailure
unable to translate constant: 
unable to translate memop: 
Opcode
unable to translate in big endian mode
unable to lower arguments due to swiftself: 
Prototype
unable to lower arguments: 
unable to translate instruction: 
IRTranslator LLVM IR -> MI
 (in function: 
IRTranslator
gisel-select
cannot select
VReg has no regclass after selection
VReg's low-level type and register class have different sizes
inserting blocks is not supported yet
Select target instructions out of generic instructions
InstructionSelect
enable-cse-in-legalizer
Should enable CSE in Legalizer
gisel-legalize
LostDebugLoc
lost 
NumLostDebugLocs
 debug locations during pass
Legalize the Machine IR a function's Machine IR
unable to legalize instruction
Legalizer
disable-gisel-legality-check
Don't verify that MIR is fully legal between GlobalISel passes
Move/duplicate certain instructions close to their use
localizer
Localizer
Mode of the RegBankSelect pass
regbankselect-fast
Run the Fast mode (default mapping)
regbankselect-greedy
Use the Greedy mode (best local mapping)
gisel-regbankselect
unable to map instruction
impossible
saturated
Assign register bank of generic virtual registers
RegBankSelect
(ID:
, Size:
isValid:
Number of Covered register classes: 
Covered register classes:
], RegBank = 
#BreakDown: 
ID: 
 Cost: 
 Mapping: 
{ Idx: 
 Map: 
Mapping for 
with 
Populated indices (CellNumber, IndexInNewVRegs): 
Mapping ID: 
Operand Mapping: 
Assign the only register bank
single-regbankselect
SingleRegBankSelect
already reported
denied
denied by sandbox
too frequent
quota exceeded
disabled
GISelFailure: 
not whitelisted
Context:
ContextInst
fixup_agx2_ba_7_1
fixup_agx2_ba_15_1
fixup_agx2_ba_23_1
fixup_agx2_ba_31_1
fixup_agx2_br_7_1
fixup_agx2_br_15_1
fixup_agx2_br_23_1
fixup_agx2_br_31_1
Relocation with symbol difference is not supported.
unsupported relocation on symbol (
FIXME: relocations to absolute targets not yet implemented
Emitted non-G14 instruction for G14
Emitted non-G13 instruction for G13
Emitted non-G12 instruction for G12
Emitted non-G11 instruction for G11
Emitted non-G10 instruction for G10
Instruction not annotated as valid for any ISA
64b-atomics
Enable 64-bit atomics
aluregcount
Display ALU register counts as comments
always-enable-switch-opt
Enable experimental optimization pass for switches. Ignoring heuristics.
alwaysinsertbbcprotection
When inserting BBC protection consider every instruction being bound checked
atpp
Enable Two Pass Punchthrough. Always.
bypassl2atomics
Bypass L2 for atomics
cluster-num
Enable SWWA for remapping cluster num SR.
colorloop-v2
Version 2 of the color loop.
colorloop-v2-unroll
Version 2 of the color loop. Unrolled
constantvaryingdetectwwa
Tell the driver to disable Constant Varying detection in HW for those varying that are used as W in ITRPROJ but are not position W
cprog
Enable constant program hoisting
cprog-allloops
Enable hoisting of all loops in Constant Programs
cprog-cfghoist
Enable CFG hoisting in Constant Programs
cprog-ghoist
Enable Global hoisting in Constant Programs
disable-halfrate-f32-fallback
Disable the scheduler falling back to half rate F32 in high register pressure situations
disable-structurizer
Run without the structurizer enabled.
disablelmoobwaoptimizations
Disable optimizations done for the Localmemory OOB WAs
enable-switch-opt
Enable experimental optimization pass for switches
explicmcopy
Experimental LICM Copy pass
f16divstep
Enable use of F16DivStep if available
forcedis2x2
Force Dis2x2 placement at the beginning of the shader
forceg11restriction
Disable selecting of Uniform in arithmetic instructions
forceindirectcalls
Force all direct calls to use indirect call mode.
forcel1caching
Force buffer caching in the L1
forcel2wti
Force bypassing all the caches in global memops
fp32-atomics
Enable FP32 atomics
frag-pixrel
Place a pixrel instruction at the beginning of fragment and MRC shaders.
fullratef32
This architecture has a full rate F32 unit available
Enable G10 instructions
g10g11
Enable G10/G11 instructions
g10g11g12
Enable G10/G11/G12 instructions
Enable G11 instructions
g11g12
Enable G11/G12 instructions
Enable G12 instructions
g12-local-backfiller
Enable backfilling of g12 local base addresses
g12-oldlibtrunc
Use the old truncation mode for LIB instructions on G12
g12g13
Enable G12/G13 instructions
Enable G13 instructions
g13g14
Enable G13/G14 instructions
g13stk
Enable the new G13 stack instructions
Enable G14 instructions
gin-217
Enable SWWA for GIN-217
gin-220
Enable SWWA for GIN-220
gin-255
Enable software workaround for GIN-255. Radar 38867941
gin-481-expand
Enable SWWA for GIN-481-Expansion
gin-481-nopcopy
Enable SWWA for GIN-481 which adds a Nop before and a Copy after a i64 op
gin-795
Enable SWWA for GIN-795
hasdirectsamplemask
Sample mask produced by pixinfo can be directly used by lldsmp
hoist-nop-end
Hoist nop.end instructions.
idep
Use IDEP bit feature.
ifonlytpp
Do not emit an if-else for tpp shaders, but an if structure
imgcacheopt
Enable optimization sample/image instructions cache optimizations
imgwriteswithlowpersistence
Emit all image writes operations with low-persistence
initallregs
Force all used registers to be initialized
initcoords
Force implicit LOD coordinates to be initialized
insertnop
Insert a NOP at the beginning of every user shader
itrremat
Rematerialize iterates next to samples.
lldsmpalwaysovrd
Emit all LLDSMP with sample mask Override set
local-idep
Enable Local memory/imgblk instructions idep
local-memory-oob
Hardware has local memory out of bounds checking enabled
localfence
Local memory instructions have fence
localidepwawfence
Local memory instructions have a fence for WAW conflicts implemented using idep. Radar 56132709
localmemoryoobaddressingwa_v2
Workaround that put the address in the base, but offsets it by 16-bytes and uses the offset to bring it back into range.
lowmovmsk
Don't aggressively hoist movmsk above all else.
matmadwithopconstraints
MatMad instructions have operand overlapping constraints not caught by tablegen and need late fixup. Radar 47111584
memsyncdetect
Enable detection of memory synchronization detection for setting cache policies
multiple-l2s
Indicates the target is configured with multiple L2s.
nbarrier
Use NBarrier feature.
nbarrier-global-load-block
Use NBarrier feature, but only on loads.
nbarrier-sample-block
Use NBarrier feature, but only on samples.
nbarrier-sample-start
Use NBarrier feature on the first sample.
nbarrierbranch
Use NBarrier feature before branches.
nbarriermath
Use NBarrier feature on math blocks.
nbarriermath16
Use NBarrier feature on math blocks every 16 instructions.
nbarriermath32
Use NBarrier feature on math blocks every 32 instructions.
nbarriermath48
Use NBarrier feature on math blocks every 48 instructions.
nbarriermath64
Use NBarrier feature on math blocks every 64 instructions.
needsbbcmetadataprotection
When using hardware buffer bound checking access to bound metadata needs to be protectedby a syncbuf before running a subsequent shader
nobypl1
Disable bypass L1 cache for texture write instructions.
nodmapromotion
Disable steps in DMA Promotion that put things in uniforms
nolatencyhide
Disable latency-hiding when it breaks clauses.
noloadvec
Stop vectorization of loads
nopromotebindless
Do not promote bindless indices to uniforms
oldstructurizer
Enforce the usage of the classic GPUCFGStructurizer
perthreadlu
Enable per-thread last-use hints
precisecfg
Force the CFG to be fully structurized
prid
Enable PRID synchronization instructions
printregpress
Prints register pressure on assembly output
rdar28936425
Requires rdar 28936425 WA
rdar28960183
Requires rdar 28960183 WA
rdar29313450
Requires rdar 29313450 WA
rdar38476775
Requires rdar 38476775 WA
rdar45513962
Requires rdar 45513962 WA
removeatomics
For experiments: remove atomic instructions where possible
removeglobalmem
For experiments: remove global mem instructions where possible
removelocalmem
For experiments: remove local mem instructions where possible
removemath
For experiments: remove math instructions where possible
removetexturemem
For experiments: remove texture mem instructions where possible
sinkimagewrites
Sink image writes to bunch them together
sqrtstep
Enable new Sqrt Step expansion
sqrtstepscale
Enable scaling hack in new Sqrt Step expansion
support-soft-fault
This architecture support soft fault (i.e. HW will return 0 when loading from an invalid address
toc12
Use a 12-entry TOC.
toc16
Use a 16-entry TOC.
toc20
Use a 20-entry TOC.
toc24
Use a 24-entry TOC.
toc4
Use a 4-entry TOC.
toc6
Use a 6-entry TOC.
toc7
Use a 7-entry TOC.
toc8
Use a 8-entry TOC.
Enable Two Pass Punchthrough
twoforcel2wti
Force bypassing all the TextureWriteOnly in global memops
uniformconstants
Promote some constants to uniform registers.
unroll-colorloop
Always unroll the color loop.
unroll-samplerate
Unroll the loops to sample-rate
zeroindexbindless
Promote offset resource tables for bindless to uniforms
Select the g10 processor
Select the g10p-b0 processor
Select the g11 processor
Select the g11g-a0 processor
Select the g11g-b0 processor
Select the g11m-a0 processor
Select the g11m-b0 processor
Select the g11p-a0 processor
Select the g11p-b0 processor
Select the g12 processor
g12g-a0
Select the g12g-a0 processor
Select the g12m-a0 processor
Select the g12p-a0 processor
Select the g12p-b0 processor
Select the g12x processor
Select the g13 processor
g13-fullf32
Select the g13-fullf32 processor
Select the g13c-a0 processor
Select the g13c-b0 processor
Select the g13d-a0 processor
Select the g13d-b0 processor
Select the g13g-a0 processor
Select the g13g-b0 processor
g13g-b0-nofullf32
Select the g13g-b0-nofullf32 processor
Select the g13p-a0 processor
Select the g13p-b0 processor
Select the g13s-a0 processor
Select the g13s-b0 processor
Select the g14 processor
g14-nofullf32
Select the g14-nofullf32 processor
g14g
Select the g14g processor
g14p
Select the g14p processor
G10UnitF16
G10UnitF32
G10UnitIssue
G10UnitIssueControl
G10UnitMAD
G10UnitMOV
G10UnitSMTP
WriteBIT
WriteADD
WriteMOV
WriteF32
WriteINT
WriteCND
WriteF16
WriteFMAT4x4_16_ReadNORM_ReadNORM_ReadNORM
WriteFMAT8x8_16_ReadNORM_ReadNORM_ReadNORM
WriteF32Sat_ReadNORM_ReadNORM
WriteF32Sat_ReadNORM_ReadCONV
WriteF32Sat_ReadCONV_ReadNORM
WriteF32Sat_ReadCONV_ReadCONV
WriteF32_ReadNORM_ReadNORM
WriteF32_ReadNORM_ReadCONV
WriteF32_ReadCONV_ReadNORM
WriteF32_ReadCONV_ReadCONV
WriteF32Grad
WriteFEXP
WriteF32Sat_ReadNORM_ReadNORM_ReadNORM
WriteF32Sat_ReadNORM_ReadNORM_ReadCONV
WriteF32Sat_ReadNORM_ReadCONV_ReadNORM
WriteF32Sat_ReadNORM_ReadCONV_ReadCONV
WriteF32Sat_ReadCONV_ReadNORM_ReadNORM
WriteF32Sat_ReadCONV_ReadNORM_ReadCONV
WriteF32Sat_ReadCONV_ReadCONV_ReadNORM
WriteF32Sat_ReadCONV_ReadCONV_ReadCONV
WriteF32_ReadNORM_ReadNORM_ReadNORM
WriteF32_ReadNORM_ReadNORM_ReadCONV
WriteF32_ReadNORM_ReadCONV_ReadNORM
WriteF32_ReadNORM_ReadCONV_ReadCONV
WriteF32_ReadCONV_ReadNORM_ReadNORM
WriteF32_ReadCONV_ReadNORM_ReadCONV
WriteF32_ReadCONV_ReadCONV_ReadNORM
WriteF32_ReadCONV_ReadCONV_ReadCONV
WriteF32Sat_ReadNORM_ReadNORM_ReadNORM_ReadNORM
WriteF32Sat_ReadNORM_ReadNORM_ReadCONV_ReadNORM
WriteF32Sat_ReadNORM_ReadCONV_ReadNORM_ReadNORM
WriteF32Sat_ReadNORM_ReadCONV_ReadCONV_ReadNORM
WriteF32Sat_ReadCONV_ReadNORM_ReadNORM_ReadCONV
WriteF32Sat_ReadCONV_ReadNORM_ReadCONV_ReadCONV
WriteF32Sat_ReadCONV_ReadCONV_ReadNORM_ReadCONV
WriteF32Sat_ReadCONV_ReadCONV_ReadCONV_ReadCONV
WriteF32_ReadNORM_ReadNORM_ReadNORM_ReadNORM
WriteF32_ReadNORM_ReadNORM_ReadCONV_ReadNORM
WriteF32_ReadNORM_ReadCONV_ReadNORM_ReadNORM
WriteF32_ReadNORM_ReadCONV_ReadCONV_ReadNORM
WriteF32_ReadCONV_ReadNORM_ReadNORM_ReadCONV
WriteF32_ReadCONV_ReadNORM_ReadCONV_ReadCONV
WriteF32_ReadCONV_ReadCONV_ReadNORM_ReadCONV
WriteF32_ReadCONV_ReadCONV_ReadCONV_ReadCONV
WriteFLOG
WriteFMAT4x4_32_ReadNORM_ReadNORM_ReadNORM
WriteFMAT4x4_32_ReadNORM_ReadNORM_ReadCONV
WriteFMAT4x4_32_ReadNORM_ReadCONV_ReadNORM
WriteFMAT4x4_32_ReadNORM_ReadCONV_ReadCONV
WriteFMAT4x4_32_ReadCONV_ReadNORM_ReadNORM
WriteFMAT4x4_32_ReadCONV_ReadNORM_ReadCONV
WriteFMAT4x4_32_ReadCONV_ReadCONV_ReadNORM
WriteFMAT4x4_32_ReadCONV_ReadCONV_ReadCONV
WriteFMAT4x4_32Conv_ReadNORM_ReadNORM_ReadNORM
WriteFMAT4x4_32Conv_ReadNORM_ReadNORM_ReadCONV
WriteFMAT4x4_32Conv_ReadNORM_ReadCONV_ReadNORM
WriteFMAT4x4_32Conv_ReadNORM_ReadCONV_ReadCONV
WriteFMAT4x4_32Conv_ReadCONV_ReadNORM_ReadNORM
WriteFMAT4x4_32Conv_ReadCONV_ReadNORM_ReadCONV
WriteFMAT4x4_32Conv_ReadCONV_ReadCONV_ReadNORM
WriteFMAT4x4_32Conv_ReadCONV_ReadCONV_ReadCONV
WriteFMAT8x8_32_ReadNORM_ReadNORM_ReadNORM
WriteFMAT8x8_32_ReadNORM_ReadNORM_ReadCONV
WriteFMAT8x8_32_ReadNORM_ReadCONV_ReadNORM
WriteFMAT8x8_32_ReadNORM_ReadCONV_ReadCONV
WriteFMAT8x8_32_ReadCONV_ReadNORM_ReadNORM
WriteFMAT8x8_32_ReadCONV_ReadNORM_ReadCONV
WriteFMAT8x8_32_ReadCONV_ReadCONV_ReadNORM
WriteFMAT8x8_32_ReadCONV_ReadCONV_ReadCONV
WriteFMAT8x8_32Conv_ReadNORM_ReadNORM_ReadNORM
WriteFMAT8x8_32Conv_ReadNORM_ReadNORM_ReadCONV
WriteFMAT8x8_32Conv_ReadNORM_ReadCONV_ReadNORM
WriteFMAT8x8_32Conv_ReadNORM_ReadCONV_ReadCONV
WriteFMAT8x8_32Conv_ReadCONV_ReadNORM_ReadNORM
WriteFMAT8x8_32Conv_ReadCONV_ReadNORM_ReadCONV
WriteFMAT8x8_32Conv_ReadCONV_ReadCONV_ReadNORM
WriteFMAT8x8_32Conv_ReadCONV_ReadCONV_ReadCONV
WriteBIT_ReadNORM_ReadNORM_ReadNORM
WriteRCP
WriteRSQRT
WriteSINC
WriteSEL_ReadNORM_ReadNORM_ReadSEL_ReadSEL
WriteINT64
WriteITR
WriteIMM
WriteGMEMStackImm
WriteGMEMStackReg
WriteGMEMUniformImm
WriteGMEMUniformReg
WriteSIMD
WriteQUAD
G11UnitF16
G11UnitF32
G11UnitIssue
G11UnitIssueControl
G11UnitMAD
G11UnitMOV
G11UnitSMTP
G12UnitF16
G12UnitF32
G12UnitIssue
G12UnitIssueControl
G12UnitMAD
G12UnitMOV
G12UnitSMTP
G13UnitF16
G13UnitF32
G13UnitIssue
G13UnitIssueControl
G13UnitMAD
G13UnitSMTP
@rpath/libLLVMInternal.dylib
LLVMInitializeAGX2InstPrinterTgt
LLVMInitializeAGX2AsmParserTgt
.gpu "
unsupported
AGX2
AGX1 Assembly Printer
llvm.ptrauth global lowering not implemented
agx.sample_rate
TotalInstructions
DataInstructions
LatencyHidingInstructions
SharedBankConflicts
ALUInstructions
F16Instructions
F32Instructions
Int16Instructions
Int32Instructions
ControlDataSwitches
ControlInstructions
WDFInstructions
BranchInstructions
SampleInstructions
TextureWriteInstructions
IterateInstructions
GlobalLoadInstructions
GlobalStoreInstructions
LocalLoadInstructions
LocalStoreInstructions
StackLoadInstructions
StackStoreInstructions
ThreadgroupAtomicInstructions
DeviceAtomicInstructions
TempRegisterCount
SharedRegisterCount
VIRegisterCount
CoeffRegisterCount
ImageStateBindingsBytes
SamplerStateBindingsBytes
StackBytes
balanced
Balanced scheduler for AGX1.
AGX1 Specific CodeGen Prepare
AGX1 Specific CodeGen Prepare: CFG Modifying Part
early.exit
early.exit.br
skip.early.exit
exit.cond
agx1-codegen-prepare
AGX1 Common Store backfiller pass
AGX1 expand pseudo inst pass
Unexpected OpCode
IDFCMode
IDFSLCMode
max-agx1-fast-isel
Limit the AGX1 "fast" instruction selector
Unspecified SampleMode for G4Itr
Flat SampleMode not implemented for G4Itr
Unspecified SampleMode for G5Itr
Flat SampleMode not implemented for G5Itr
Unspecified SampleMode for G5ItrProj
Flat SampleMode not implemented for G5ItrProj
agx1-shr16
agx1-shr32
agx1-shr64
agx1-shr96
agx1-shr128
agx1-shr192
agx1-addrspace-stack
agx1-addrspace-global-rw
agx1-addrspace-global-ro
agx1-addrspace-coeff
agx1-addrspace-shared
Unknown select opcode!
AGX1 Instruction Selection
SMPWriteCMode
SMPCMode
SMPWriteSLCMode
SMPSLCMode
grad_1d not supported on architecture!
ImageReadPersist
ImageReadTPUCohMode
ImageReadMCUCohMode
ImageReadSLCCohMode
agx1-isel
DynamicSpill
DynamicStackSpill
 byte dynamic stack spill
StaticSpill
StaticStackStore
 byte static stack store
DynamicReload
DynamicStackLoad
 byte dynamic stack load
StaticReload
StaticStackLoad
Unspecified SampleMode for G4 FITR
Flat SampleMode not implemented for G4 FITR
Unspecified SampleMode for G5 FITR
Flat SampleMode not implemented for G5 FITR
Unspecified SampleMode for G4 FITR_PROJ
Flat SampleMode not implemented for G4 FITR_PROJ
Unspecified SampleMode for G5 FITR_PROJ
Flat SampleMode not implemented for G5 FITR_PROJ
Unspecified SampleMode for G5 FITR_CEM
Flat SampleMode not implemented for G5 FITR_CEM
Unspecified SampleMode for G4 FITR_SAT
Flat SampleMode not implemented for G4 FITR_SAT
Unspecified SampleMode for G5 FITR_SAT
Flat SampleMode not implemented for G5 FITR_SAT
Unspecified SampleMode for G4 FITR_PROJ_SAT
Flat SampleMode not implemented for G4 FITR_PROJ_SAT
Unspecified SampleMode for G5 FITR_PROJ_SAT
Flat SampleMode not implemented for G5 FITR_PROJ_SAT
Unspecified SampleMode for G5 FITR_CEM_SAT
Flat SampleMode not implemented for G5 FITR_CEM_SAT
StoreMCUCohMode
StoreSLCCohMode
StoreCMode
StoreSLCMode
LoadCMode
LoadSLCMode
Unimplemented pack opcode!
ImageWritePersist
ImageWriteTPUCohMode
ImageWriteMCUCohMode
ImageWriteSLCCohMode
LoadMCUCohMode
LoadSLCCohMode
AGX1ISD::FRET
AGX1ISD::VRET
AGX1ISD::PHASE_SEL
AGX1ISD::PHASE_SMP
AGX1ISD::READ_SHARED
AGX1ISD::READ_COEFF
AGX1ISD::FITR
AGX1ISD::FITR_PROJ
AGX1ISD::FITR_CEM
AGX1ISD::FITR_SAT
AGX1ISD::FITR_PROJ_SAT
AGX1ISD::FITR_CEM_SAT
AGX1ISD::FITR_TMP
AGX1ISD::FITR_PROJ_TMP
AGX1ISD::FITR_CEM_TMP
AGX1ISD::FITR_CEMGRAD_TMP
AGX1ISD::FITR_TMP_SAT
AGX1ISD::FITR_PROJ_TMP_SAT
AGX1ISD::FITR_CEM_TMP_SAT
AGX1ISD::FITR_CEMGRAD_TMP_SAT
AGX1ISD::FITR_16x2
AGX1ISD::FITR_PROJ_16x2
AGX1ISD::FITR_3D
AGX1ISD::FITR_PROJ_16x3
AGX1ISD::FITR_4D
AGX1ISD::FITR_PROJ_16x4
AGX1ISD::FITR_32x2
AGX1ISD::FITR_PROJ_32x2
AGX1ISD::FITR_32x3
AGX1ISD::FITR_PROJ_32x3
AGX1ISD::FITR_32x4
AGX1ISD::FITR_PROJ_32x4
AGX1ISD::IMADH
AGX1ISD::IMSUBH
AGX1ISD::IMADHS
AGX1ISD::IMSUBHS
AGX1ISD::RCP
AGX1ISD::RSQRT
AGX1ISD::RSQRTFROMSQRT
AGX1ISD::QREFL
AGX1ISD::INSERT
AGX1ISD::EXTRACT
AGX1ISD::FPTOS8
AGX1ISD::FPTOU8
AGX1ISD::FPTOS8_SCALE
AGX1ISD::FPTOU8_SCALE
AGX1ISD::ATOMIC_LOCAL_G4
AGX1ISD::ATOMIC_LOCAL_G5
AGX1ISD::ATOMIC_LOCAL_CMPXCHG_G4
AGX1ISD::ATOMIC_LOCAL_CMPXCHG_G5
AGX1ISD::ATOMIC_GLOBAL_ADD
AGX1ISD::ATOMIC_GLOBAL_SUB
AGX1ISD::ATOMIC_GLOBAL_XCHG
AGX1ISD::ATOMIC_GLOBAL_UMIN
AGX1ISD::ATOMIC_GLOBAL_IMIN
AGX1ISD::ATOMIC_GLOBAL_UMAX
AGX1ISD::ATOMIC_GLOBAL_IMAX
AGX1ISD::ATOMIC_GLOBAL_AND
AGX1ISD::ATOMIC_GLOBAL_OR
AGX1ISD::ATOMIC_GLOBAL_XOR
AGX1ISD::ATOMIC_GLOBAL_CMPXCHG_G4
AGX1ISD::ATOMIC_GLOBAL_CMPXCHG_G5
AGX1ISD::GAMMA_CMP_G5
AGX1ISD::GAMMA_EXP_G5
AGX1ISD::SPILL8
AGX1ISD::SPILL16
AGX1ISD::SPILL32
AGX1ISD::SPILL64
AGX1ISD::SPILL96
AGX1ISD::SPILL128
AGX1ISD::SPILL256
AGX1ISD::RELOAD8
AGX1ISD::RELOAD16
AGX1ISD::RELOAD32
AGX1ISD::RELOAD64
AGX1ISD::RELOAD96
AGX1ISD::RELOAD128
AGX1ISD::RELOAD160
AGX1ISD::RELOAD192
AGX1ISD::RELOAD224
AGX1ISD::RELOAD256
AGX1ISD::LADDR
AGX1ISD::ADDH
AGX1ISD::SUBH
AGX1ISD::FMIX
AGX1ISD::BIT_EXTRACT
Atomic operations only support i32
Unsupported address space for atomic operation
Not yet supported!
agx1-lower
SlowMathFAddWithZero
A floating point add with zero cannot be optimized away because fast-math is disabled.
SlowMathFMulWithZero
A floating point mul with zero cannot be optimized away because fast-math is disabled.
Invalid sin intrinsic for architecture!
Unsupported vector width!
This call was not recognized as an intrinsic: 
Unexpected ext type for load
DeviceLoadAddrMode
Zero-extended device memory load cannot fold addr mode
Load from unsupported address space: 
Unknown store opcode!
DeviceStoreAddrMode
Zero-extended device memory store cannot fold addr mode
Store from unsupported address space: 
GAtomCMode
GAtomSLCMode
Unaligned shared/coeff register accesses are not supported
__clear_cache
Named registers not implemented for this target
Store of byte to local memory is unsupported
Store of byte to shared memory is unsupported
AGX1 iterator forwarding pass
Unhandled target index type!
AGX1 post-RA peephole pass
AGX1 pseudo wait placement pass
TR16_aligned
VIR16_aligned
GPR16_aligned
TR16
VIR16
GPR16_aligned+TR16
GPR16_aligned+VIR16
GPR16
GPR32
Unable to materialize spill/reload!
hsub0
hsub1
hsub2
hsub3
hsub4
hsub5
hsub6
hsub7
hsub8
hsub9
hsub10
hsub11
hsub12
hsub13
hsub14
hsub15
hsub16
hsub17
hsub18
hsub19
hsub20
hsub21
hsub22
hsub23
hsub24
hsub25
hsub26
hsub27
hsub28
hsub29
hsub30
hsub31
sub0
sub1
sub2
sub3
sub4
sub5
sub6
sub7
sub8
sub9
sub10
sub11
sub12
sub13
sub14
sub15
hsub0_hsub1_hsub2
hsub0_hsub1_hsub2_hsub3
hsub0_hsub1_hsub2_hsub3_hsub4
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8
hsub1_hsub2
hsub1_hsub2_hsub3
hsub1_hsub2_hsub3_hsub4_hsub5
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9
hsub2_hsub3_hsub4
hsub2_hsub3_hsub4_hsub5
hsub2_hsub3_hsub4_hsub5_hsub6
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9
hsub3_hsub4
hsub3_hsub4_hsub5
hsub3_hsub4_hsub5_hsub6_hsub7
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9
hsub4_hsub5_hsub6
hsub4_hsub5_hsub6_hsub7
hsub4_hsub5_hsub6_hsub7_hsub8
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9
hsub5_hsub6
hsub5_hsub6_hsub7
hsub5_hsub6_hsub7_hsub8_hsub9
hsub6_hsub7_hsub8
hsub6_hsub7_hsub8_hsub9
hsub7_hsub8
hsub7_hsub8_hsub9
hsub1_hsub2_hsub3_hsub4
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8
hsub3_hsub4_hsub5_hsub6
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8
hsub5_hsub6_hsub7_hsub8
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10
hsub6_hsub7_hsub8_hsub9_hsub10
hsub8_hsub9_hsub10
hsub9_hsub10
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10
hsub7_hsub8_hsub9_hsub10
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11
hsub7_hsub8_hsub9_hsub10_hsub11
hsub8_hsub9_hsub10_hsub11
hsub9_hsub10_hsub11
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12
hsub8_hsub9_hsub10_hsub11_hsub12
hsub10_hsub11_hsub12
hsub11_hsub12
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12
hsub9_hsub10_hsub11_hsub12
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub9_hsub10_hsub11_hsub12_hsub13
hsub10_hsub11_hsub12_hsub13
hsub11_hsub12_hsub13
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub10_hsub11_hsub12_hsub13_hsub14
hsub12_hsub13_hsub14
hsub13_hsub14
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub11_hsub12_hsub13_hsub14
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub11_hsub12_hsub13_hsub14_hsub15
hsub12_hsub13_hsub14_hsub15
hsub13_hsub14_hsub15
hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub12_hsub13_hsub14_hsub15_hsub16
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub13_hsub14_hsub15_hsub16
hsub13_hsub14_hsub15_hsub16_hsub17
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub14_hsub15_hsub16
hsub14_hsub15_hsub16_hsub17_hsub18
hsub15_hsub16
hsub15_hsub16_hsub17
hsub15_hsub16_hsub17_hsub18
hsub15_hsub16_hsub17_hsub18_hsub19
hsub16_hsub17_hsub18
hsub17_hsub18
hsub17_hsub18_hsub19
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub14_hsub15_hsub16_hsub17
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub16_hsub17_hsub18_hsub19
hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub16_hsub17_hsub18_hsub19_hsub20
hsub17_hsub18_hsub19_hsub20
hsub17_hsub18_hsub19_hsub20_hsub21
hsub18_hsub19_hsub20
hsub19_hsub20
hsub19_hsub20_hsub21
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub18_hsub19_hsub20_hsub21
hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub18_hsub19_hsub20_hsub21_hsub22
hsub19_hsub20_hsub21_hsub22
hsub19_hsub20_hsub21_hsub22_hsub23
hsub20_hsub21_hsub22
hsub21_hsub22
hsub21_hsub22_hsub23
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub20_hsub21_hsub22_hsub23
hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub19_hsub20_hsub21_hsub22_hsub23_hsub24
hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub20_hsub21_hsub22_hsub23_hsub24
hsub21_hsub22_hsub23_hsub24
hsub21_hsub22_hsub23_hsub24_hsub25
hsub22_hsub23_hsub24
hsub23_hsub24
hsub23_hsub24_hsub25
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub22_hsub23_hsub24_hsub25
hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub21_hsub22_hsub23_hsub24_hsub25_hsub26
hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub22_hsub23_hsub24_hsub25_hsub26
hsub23_hsub24_hsub25_hsub26
hsub23_hsub24_hsub25_hsub26_hsub27
hsub24_hsub25_hsub26
hsub25_hsub26
hsub25_hsub26_hsub27
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub24_hsub25_hsub26_hsub27
hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub23_hsub24_hsub25_hsub26_hsub27_hsub28
hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub24_hsub25_hsub26_hsub27_hsub28
hsub25_hsub26_hsub27_hsub28
hsub25_hsub26_hsub27_hsub28_hsub29
hsub26_hsub27_hsub28
hsub27_hsub28
hsub27_hsub28_hsub29
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub26_hsub27_hsub28_hsub29
hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub25_hsub26_hsub27_hsub28_hsub29_hsub30
hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub26_hsub27_hsub28_hsub29_hsub30
hsub27_hsub28_hsub29_hsub30
hsub27_hsub28_hsub29_hsub30_hsub31
hsub28_hsub29_hsub30
hsub29_hsub30
hsub29_hsub30_hsub31
hsub0_hsub1_hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29
hsub2_hsub3_hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub4_hsub5_hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub6_hsub7_hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub8_hsub9_hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub10_hsub11_hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub12_hsub13_hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub14_hsub15_hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub16_hsub17_hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub18_hsub19_hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub20_hsub21_hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub22_hsub23_hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub24_hsub25_hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub26_hsub27_hsub28_hsub29_hsub30_hsub31
hsub28_hsub29_hsub30_hsub31
Custom AGX1 scheduler.
AvailableQ
AvailableITRQ
AvailableSMPQ
AvailableLocalPixQ
Expected a variant SchedClass
disable-agx1-fma-contraction
FMA contraction at IR level
disable-agx1-combining
Disable combining instructions in to wider tuples
enable-balanced-sched
Enables balanced scheduler for AGX1.
target-cpu
target-features
After codegen DCE pass
After Machine LICM, CSE and Sinking passes
After codegen peephole optimization pass
e-m:o
-p:64:64:64
-p:64:64:64-p3:32:64:64
:32:64:64
-i64:64:64-i32:32:32-i16:16:16-v32:32:32-n32
-S128
-S64
lp64
lm32
Not implemented for the (sub)target
AGX1 TOC optimizer pass
AGX1WAR_RDAR16355991
AGX1 WAR RDAR16355991 pass
AGX1PhaseEndAlignment
AGX1 phase.end Alignment pass
combiner-global-alias-analysis
Enable DAG combiner's use of IR alias analysis
combiner-use-tbaa
Enable DAG combiner's use of TBAA
combiner-stress-load-slicing
Bypass the profitability model of load slicing
combiner-split-load-index
DAG combiner may split indexing from loads
strict-float-cast-overflow
fast-isel-sink-local-values
Sink local values in FastISel
__sync_synchronize
abort
Attempt at an invalid promotion-related conversion
enable-legalize-types-checking
Unprocessed value in a map!
Value with legal type was transformed!
Processed value not in any map!
Value in multiple maps!
 ReplacedValues
 PromotedIntegers
 SoftenedFloats
 ScalarizedVectors
 ExpandedIntegers
 ExpandedFloats
 SplitVectors
 WidenedVectors
 PromotedFloats
Do not know how to scalarize the result of this operator!
Do not know how to scalarize this operator's operand!
Do not know how to split the result of this operator!
Do not know how to split this operator's operand!
disable-dfa-sched
Disable use of DFA during scheduling
dfa-sched-reg-pressure-threshold
Track reg pressure and switch priority to in-depth
list-burr
Bottom-up register reduction list scheduling
Similar to list-burr but schedules in source order when possible
list-hybrid
Bottom-up register pressure aware list scheduling which tries to balance latency and register pressure
list-ilp
Bottom-up register pressure aware list scheduling which tries to balance ILP and register pressure
disable-sched-cycles
Disable cycle-level precision during preRA scheduling
disable-sched-reg-pressure
Disable regpressure priority in sched=list-ilp
disable-sched-live-uses
Disable live use priority in sched=list-ilp
disable-sched-vrcycle
Disable virtual register cycle interference checks
disable-sched-physreg-join
Disable physreg def-use affinity
disable-sched-stalls
Disable no-stall priority in sched=list-ilp
disable-sched-critical-path
Disable critical path priority in sched=list-ilp
disable-sched-height
Disable scheduled-height priority in sched=list-ilp
disable-2addr-hack
Disable scheduler's two-address hack
max-sched-reorder
Number of instructions to allow ahead of the critical path in sched=list-ilp
sched-avg-ipc
Average inst/cycle whan no target itinerary exists.
Can't handle live physical register dependency!
Height 
sched-high-latency-cycles
Roughly estimate the number of cycles that 'long latency'instructions take for targets with no itinerary
PHYS REG COPY
sunit-dag.
vliw-td
VLIW scheduler
limit-float-precision
Generate low-precision inline sequences for some float libcalls
switch-peel-threshold
Set the case probability threshold for peeling the case from a switch statement. A value greater than 100 will void this optimization
visitCatchSwitch not yet implemented!
Cannot generate unaligned atomic load
Cannot generate unaligned atomic store
_setjmp
_longjmp
Wrong result type for @llvm.get.dynamic.area.offset intrinsic!
annotation
trap-func-name
llvm.icall.branch.funnel operand must be a GlobalValue
all llvm.icall.branch.funnel operands must refer to the same GlobalValue
This target doesn't support calls with ptrauth operand bundles.
Cannot lower direct authenticated call to unauthenticated target
couldn't allocate output register for constraint '
inline asm not supported yet: don't know how to handle tied indirect register inputs
inline asm error: This value type register class is not natively supported!
invalid operand for inline asm constraint '
Don't know how to handle indirect register inputs yet for constraint '
couldn't allocate input reg for constraint '
non-trivial scalar-to-vector conversion
, possible invalid constraint for vector type
scalar-to-vector conversion failed
enable-memcpy-dag-opt
Gang up loads and stores generated by inlining of memcpy
ldstmemcpy-glue-max
Number limit for gluing ld/st of memcpy.
Unsupported element size
cannot lower memory intrinsic in address space 
dag-dump-verbose
Display more information when dumping selection DAG nodes.
<<Unknown DAG Node>>
<<Unknown Machine Node #
<<Unknown Target Node #
<<Unknown Node #
Prefetch
AtomicFence
AtomicCmpSwap
AtomicCmpSwapWithSuccess
AtomicSwap
AtomicLoadAdd
AtomicLoadSub
AtomicLoadAnd
AtomicLoadClr
AtomicLoadOr
AtomicLoadXor
AtomicLoadNand
AtomicLoadMin
AtomicLoadMax
AtomicLoadUMin
AtomicLoadUMax
AtomicLoad
AtomicStore
PCMarker
ReadCycleCounter
SrcValue
MDNode
EntryToken
TokenFactor
AssertSext
AssertZext
BasicBlock
ValueType
Register
RegisterMask
OpaqueConstant
Constant
ConstantFP
GlobalAddress
GlobalTLSAddress
FrameIndex
GLOBAL_OFFSET_TABLE
RETURNADDR
ADDROFRETURNADDR
FRAMEADDR
LOCAL_RECOVER
READ_REGISTER
WRITE_REGISTER
FRAME_TO_ARGS_OFFSET
EH_DWARF_CFA
EH_RETURN
EH_SJLJ_SETJMP
EH_SJLJ_LONGJMP
EH_SJLJ_SETUP_DISPATCH
TargetIndex
ExternalSymbol
BlockAddress
BUILD_VECTOR
OpaqueTargetConstant
TargetConstant
TargetConstantFP
TargetGlobalAddress
TargetGlobalTLSAddress
TargetFrameIndex
TargetJumpTable
TargetConstantPool
TargetExternalSymbol
MCSymbol
TargetBlockAddress
CopyToReg
CopyFromReg
merge_values
inlineasm
eh_label
handlenode
fminnum
fmaxnum
fminnan
fmaxnan
fneg
fsqrt
strict_fsqrt
fsin
strict_fsin
fcos
strict_fcos
fsincos
ftrunc
ffloor
fceil
frint
strict_frint
fnearbyint
strict_fnearbyint
fround
fexp
strict_fexp
fexp2
strict_fexp2
flog
strict_flog
flog2
strict_flog2
flog10
strict_flog10
mulhu
mulhs
smul_lohi
umul_lohi
sdivrem
udivrem
rotl
rotr
strict_fadd
strict_fsub
strict_fmul
strict_fdiv
strict_fma
fmad
strict_frem
fcopysign
fgetsign
fcanonicalize
fpow
strict_fpow
smin
fpowi
strict_fpowi
setcc
setcccarry
vselect
select_cc
insert_vector_elt
extract_vector_elt
concat_vectors
insert_subvector
extract_subvector
scalar_to_vector
vector_shuffle
carry_false
addc
adde
addcarry
saddo
uaddo
ssubo
usubo
smulo
umulo
sube
subcarry
shl_parts
sra_parts
srl_parts
sign_extend
zero_extend
any_extend
sign_extend_inreg
any_extend_vector_inreg
sign_extend_vector_inreg
zero_extend_vector_inreg
truncate
fp_round
flt_rounds
fp_round_inreg
fp_extend
sint_to_fp
uint_to_fp
fp_to_sint
fp_to_uint
fp16_to_fp
fp_to_fp16
brind
br_jt
brcond
br_cc
callseq_start
callseq_end
masked_load
masked_store
masked_gather
masked_scatter
vaarg
vacopy
vaend
vastart
dynamic_stackalloc
extract_element
build_pair
stacksave
stackrestore
trap
debugtrap
gc_transition.start
gc_transition.end
get.dynamic.area.offset
bitreverse
bswap
cttz_zero_undef
ctlz_zero_undef
init_trampoline
adjust_trampoline
setoeq
setogt
setoge
setolt
setole
setone
seto
setuo
setueq
setugt
setuge
setult
setule
setune
seteq
setgt
setge
setlt
setle
setne
settrue
settrue2
setfalse
setfalse2
vecreduce_fadd
vecreduce_strict_fadd
vecreduce_fmul
vecreduce_strict_fmul
vecreduce_add
vecreduce_mul
vecreduce_and
vecreduce_or
vecreduce_xor
vecreduce_smax
vecreduce_smin
vecreduce_umax
vecreduce_umin
vecreduce_fmax
vecreduce_fmin
<pre-inc>
<pre-dec>
<post-inc>
<post-dec>
 vector-reduction
Mem:
<APFloat(
 [TF=
<null>
, anyext
, sext
, zext
, trunc to 
 [ORD=
 [ID=
# D:
 DbgVal
SelectionDAG has 
 nodes:
fast-isel-abort
Enable abort calls when "fast" instruction selection fails to lower an instruction: 0 disable the abort, 1 will abort but for args, calls and terminators, 2 will also abort for argument lowering, and 3 will never fallback to SelectionDAG.
fast-isel-report-on-fallback
Emit a diagnostic when "fast" instruction selection falls back to SelectionDAG.
use-mbpi
use Machine Branch Probability Info
pre-RA-sched
Instruction schedulers available (before register allocation):
Best scheduler for the target
Instruction Selection and Scheduling
DAG Combining 1
Type Legalization
DAG Combining after legalize types
Vector Legalization
Type Legalization 2
DAG Combining after legalize vectors
DAG Legalization
verify-nobrcond1
Verify No Brcond 1
DAG Combining 2
verify-nobrcond2
Verify No Brcond 2
Instruction Selection
Instruction Scheduling
Instruction Creation
Instruction Scheduling Cleanup
sdagisel
FastISelFailure
FastISel didn't lower all arguments: 
FastISel missed call
FastISel missed terminator
FastISel missed
Could not match memory address.  Inline asm failure!
COVERED: 
INCLUDED: 
Cannot select: 
In function: 
intrinsic %
target intrinsic %
unknown intrinsic #
Found BRCOND after combine2
Found BRCOND before combine2
Found wrong-typed BRCOND after combine2
Found wrong-typed BRCOND before combine2
CROSS RC COPY
plaintext=circle
GraphRoot
color=blue,style=dashed
 label ="
Unsupported library call operation!
Indirect operand for inline asm not a pointer!
Unsupported asm: input constraint with a matching output constraint of incompatible type!
__emutls_get_address
names
Header Magic
Header Version
Header Hash Function
Header Bucket Count
Header Hash Count
Header Data Length
HeaderData Die Offset Base
HeaderData Atom Count
Bucket 
Hash in Bucket 
Offset in Bucket 
Num DIEs
names_start
names_end
names_abbrev_start
names_abbrev_end
names_entries
Header: unit length
Header: version
Header: padding
Header: compilation unit count
Header: local type unit count
Header: foreign type unit count
Header: bucket count
Header: name count
Header: abbreviation table size
Header: augmentation string size
Header: augmentation string
Compilation unit 
String in Bucket 
Abbrev code
End of abbrev
End of abbrev list
End of list: 
Abbreviation code
>> Catch TypeInfos <<
TypeInfo 
>> Filter TypeInfos <<
FilterInfo 
print-schedule
Print 'sched: [latency:throughput]' in .s output
Start of file scope inline assembly
End of file scope inline assembly
Debug Info Emission
linetables
CodeView Line Tables
dwarf
DWARF Emission
write_exception
DWARF Exception Writer
cfguard
Control Flow Guard
Control Flow Guard Tables
symbol '
' is already defined
$tlv$init
_tlv_bootstrap
-- Begin function 
Address taken block that was later removed
' is a protected alias
' label emitted multiple times to assembly file
implicit-def: 
asm-printer
InstructionCount
NumInstructions
 instructions in function
avoids zero-length function
Address of block that was removed by CodeGen
func_end
-- End function
__morestack_addr
__morestack
.note.GNU-split-stack
.note.GNU-no-split-stack
exception
func_begin
Unsupported usage of llvm.ptrauth global '
Unsupported expression in static initializer: 
_set_
Block address taken
 %bb.
no GCMetadataPrinter registered for GC: 
__DATA
function-instrument
target_variant_triple
-byte Reload
-byte Folded Reload
-byte Spill
-byte Folded Spill
 Reload Reuse
DEBUG_VALUE: 
 <- 
(long double) 
DEBUG_LABEL: 
kill:
def 
killed 
0x%llx
Invalid size-changing cast of llvm.ptrauth global
Mismatched address discriminator in llvm.ptrauth global '
  in Loop: Header=BB
 Depth=
This 
Inner 
Loop Header: Depth=
Parent Loop BB
Child Loop BB
 Depth 
 Encoding = 
Encoding = 
Abbrev [
] 0x
End Of Children Mark
Abbreviation Code
absptr
omit
uleb128
sleb128
udata4
udata8
sdata4
sdata8
pcrel udata4
pcrel sdata4
pcrel udata8
pcrel sdata8
indirect pcrel udata4
indirect pcrel sdata4
indirect pcrel udata8
indirect pcrel sdata8
<unknown encoding>
<inline asm>
Inline asm not supported by this streamer because we don't have an asm parser for this target
Error parsing inline asm
comment
Unknown special formatter '
' for machine instr: 
Nested variants found in inline asm string: '
Unterminated ${:foo} operand in inline asm string: '
Bad $ operand number in inline asm string: '
Bad ${:} expression in inline asm string: '
Bad ${} expression in inline asm string: '
Invalid $ operand number in inline asm string: '
invalid operand in inline asm: '
.intel_syntax
.att_syntax
DbgValueHistoryMap:
<unknown location>
   Begin: 
   End  : 
debug_loc
EOM(1)
EOM(2)
Abbreviation @
0x%lx
: Size: 
Blk[
Die: 
, Offset: 
, Size: 
Int: 
  0x
Expr: 
Lbl: 
Del: 
String: 
InlineString: 
Die: 0x%lx
ExprLoc
LocList: 
EOM(3)
cu_macro_begin
debug_ranges
cu_begin
Loc = { reg=
disable-debug-info-print
Disable debug info printing
use-dwarf-ranges-base-address-specifier
Use base address specifiers in debug_ranges
generate-arange-section
Generate dwarf aranges
generate-type-units
Generate DWARF4 type units.
split-dwarf-cross-cu-references
Enable cross-cu references in DWO files
use-unknown-locations
Make an absence of debug location information explicit.
At top of block or after label
Enable
In all cases
Disable
Never
accel-tables
Output dwarf accelerator tables.
Default for platform
Disabled.
Dwarf
DWARF
dwarf-inlined-strings
Use inlined strings rather than string section.
Enabled
no-dwarf-pub-sections
Disable emission of DWARF pub sections.
no-dwarf-ranges-section
Disable emission .debug_ranges section.
dwarf-sections-as-references
Use sections+offset as references rather than labels.
dwarf-linkage-names
Which DWARF linkage-name attributes to emit.
Abstract
Abstract subprograms
writer
DWARF Debug Writer
str_offsets_base
rnglists_table_base
Names
ObjC
namespac
Types
Length of Public 
 Info
_begin
_end
DWARF Version
Offset of Compilation Unit Info
Compilation Unit Length
DIE offset
Kind: 
External Name
End Mark
Loc expr size
Length of ARange Set
DWARF Arange version number
Offset Into Debug Info Section
Address Size (in bytes)
Segment Size (in bytes)
ARange terminator
End Of Macro List Mark
debug_rnglist_table_start
debug_rnglist_table_end
  base address
  starting offset
  ending offset
  start
  length
super-register
no DWARF register encoding
sub-register
string offset=
(anonymous namespace)
__ARRAY_SIZE_TYPE__
Length of Unit
DWARF version number
DWARF Unit Type
Offset Into Abbrev. Section
Type Signature
Type DIE Offset
GCC_except_table
@LPStart
@TType
ttbaseref
ttbase
cst_begin
cst_end
Call site
>> Call Site 
  On exception at call site 
  Action: cleanup
  Action: 
  Call between 
    has no landing pad
    jumps to 
  On action: cleanup
  On action: 
>> Action Record 
  Catch TypeInfo 
  Filter TypeInfo 
  Cleanup
  No further actions
  Continue to action 
safeseh
$cppxdata$
lsda_begin
lsda_end
Number of call sites
LabelStart
LabelEnd
FinallyFunclet
FilterFunction
CatchAll
ExceptionHandler
$stateUnwindMap$
$tryMap$
$ip2state$
MagicNumber
MaxState
UnwindMap
NumTryBlocks
TryBlockMap
IPMapEntries
IPToStateXData
UnwindHelp
ESTypeList
EHFlags
ToState
Action
$handlerMap$
TryLow
TryHigh
CatchHigh
NumCatches
HandlerArray
Adjectives
CatchObjOffset
Handler
ParentFrameOffset
GSCookieOffset
GSCookieXOROffset
EHCookieOffset
EHCookieXOROffset
dtor
@?0?
@4HA
emit-codeview-ghash-section
Debug section magic
File index to string table offset subsection
String table
Magic
Section Version
Hash Algorithm
{0:X+} [{1}]
Record length
Record kind: S_COMPILE3
Flags and language
CPUType
Frontend version
Backend version
Null-terminated compiler version string
Inlinee lines subsection
Inlinee lines signature
Inlined function 
 starts at 
Type index of inlined function
Offset into filechecksum table
Starting line number
Record kind: S_INLINESITE
PtrParent
PtrEnd
Inlinee type index
Record kind: S_INLINESITE_END
Symbol subsection for 
Record kind: S_THUNK32
PtrNext
Thunk section relative address
Thunk section index
Ordinal
Function name
Record kind: S_PROC_ID_END
Record kind: S_LPROC32_ID
Record kind: S_GPROC32_ID
Offset after prologue
Offset before epilogue
Function type index
Function section relative address
Function section index
Flags
Record kind: S_ANNOTATION
cannot debug circular reference to unnamed type
Record kind: S_LOCAL
TypeIndex
Record kind: S_BLOCK32
Lexical block name
Record kind: S_END
Subsection size
Record kind: S_UDT
Symbol subsection for globals
Record kind: S_LTHREAD32
Record kind: S_LDATA32
Record kind: S_GTHREAD32
Record kind: S_GDATA32
DataOffset
Segment
target architecture doesn't map to a CodeView CPUType
<unnamed-tag>
`anonymous namespace'
agg-antidep-debugdiv
Debug control for aggressive anti-dep breaker
agg-antidep-debugmod
Expand Atomic instructions
atomic-expand
success
newloaded
atomicrmw.end
atomicrmw.start
tryagain
loaded
ValOperand_Shifted
AlignedAddr
PtrLSB
ShiftAmt
Mask
Inv_Mask
partword.cmpxchg.end
partword.cmpxchg.failure
partword.cmpxchg.loop
cmpxchg.end
cmpxchg.failure
cmpxchg.nostore
cmpxchg.success
cmpxchg.releasedload
cmpxchg.trystore
cmpxchg.fencedstore
cmpxchg.start
should_store
partial-unrolling-threshold
Threshold for partial unrolling
enable-tail-merge
tail-merge-threshold
Max number of predecessors to consider tail merging
tail-merge-size
Min number of instructions to consider tail merging
Control Flow Optimizer
branch-folder
%bb.%u
offset=%08x
size=%#x
Branch relaxation pass
branch-relaxation
verify-cfiinstrs
Verify Call Frame Information instructions
Check CFA info and insert CFI instructions if needed
cfi-instr-inserter
Found 
 in/out CFI information errors.
*** Inconsistent CFA register and/or offset between pred and succ ***
Pred: 
 outgoing CFA Reg:
 outgoing CFA Offset:
Succ: 
 incoming CFA Reg:
 incoming CFA Offset:
disable-cgp-branch-opts
Disable branch optimizations in CodeGenPrepare
disable-cgp-gc-opts
Disable GC optimizations in CodeGenPrepare
disable-cgp-select2branch
Disable select to branch conversion.
addr-sink-using-gep
Address sinking in CGP using GEPs.
enable-andcmp-sinking
Enable sinkinig and/cmp into branches.
disable-cgp-store-extract
Disable store(extract) optimizations in CodeGenPrepare
stress-cgp-store-extract
Stress test store(extract) optimizations in CodeGenPrepare
disable-cgp-ext-ld-promotion
Disable ext(promotable(ld)) -> promoted(ext(ld)) optimization in CodeGenPrepare
stress-cgp-ext-ld-promotion
Stress test ext(promotable(ld)) -> promoted(ext(ld)) optimization in CodeGenPrepare
disable-preheader-prot
Disable protection against removing loop preheaders
profile-guided-section-prefix
Use profile info to add section prefix for hot/cold functions
cgp-freq-ratio-to-skip-merge
Skip merging empty blocks if (frequency of empty block) / (frequency of destination block) is greater than this ratio
force-split-store
Force store splitting no matter what the target query says.
cgp-type-promotion-merge
Enable merging of redundant sexts when one is dominating the other.
disable-complex-addr-modes
Disables combining addressing modes with different parts in optimizeMemoryInst.
addr-sink-new-phis
Allow creation of Phis in Address sinking.
addr-sink-new-select
Allow creation of selects in Address sinking.
addr-sink-combine-base-reg
Allow combining of BaseReg field in Address sinking.
addr-sink-combine-base-gv
Allow combining of BaseGV field in Address sinking.
addr-sink-combine-base-offs
Allow combining of BaseOffs field in Address sinking.
addr-sink-combine-scaled-reg
Allow combining of ScaledReg field in Address sinking.
cgp-split-large-offset-gep
Enable splitting large offset of GEP.
Optimize for code generation
codegenprepare
CodeGen Prepare
.hot
.unlikely
.cond.split
promoted
uadd.overflow
uadd
overflow
sunkaddr
sunk_phi
cond.false
cond.end
cmpz
select.end
select.true.sink
select.false.sink
select.false
splitgep
(inbounds)
Base:
Remove dead machine instructions
dead-mi-elimination
Detect Dead Lanes
detect-dead-lanes
dfa-instr-limit
If present, stops packetizing after N instructions
Prepare DWARF exceptions
dwarfehprepare
Exception handling preparation
unwind_resume
exn.obj
early-ifcvt-limit
Maximum number of instructions per speculated block.
stress-early-ifcvt
Turn all knobs to 11
Early If Converter
early-ifcvt
Early If-Conversion
view-edge-bundles
Pop up a window to show edge bundle graphs
digraph {
" [ shape=box ]
" -> 
" -> "
" [ color=lightgray ]
EdgeBundles
Bundle Machine CFG Edges
edge-bundles
Expand ISel Pseudo-instructions
expand-isel-pseudos
memcmp-num-loads-per-block
The number of loads per basic block for inline expansion of memcmp that is only being compared against zero.
Expand memcmp() to load/stores
expandmemcmp
endblock
phi.res
res_block
phi.src1
phi.src2
loadbb
Post-RA pseudo instruction expansion pass
postrapseudos
Expand reduction intrinsics
expand-reductions
Insert fentry calls
fentry-insert
fentry-call
Contiguously Lay Out Funclets
funclet-layout
unsupported GC: 
 (did you remember to link and initialize the CodeGen library?)
Create Garbage Collector Module Metadata
collector-metadata
Print Garbage Collector Information
GC roots for 
[sp]
GC safe points for 
, live = {
pre-call
post-call
GC Lowering
gc-lowering
Lower Garbage Collection Instructions
Analyze Machine Code For Garbage Collection
gc-analysis
ifcvt-fn-start
ifcvt-fn-stop
ifcvt-limit
disable-ifcvt-simple
disable-ifcvt-simple-false
disable-ifcvt-triangle
disable-ifcvt-triangle-rev
disable-ifcvt-triangle-false
disable-ifcvt-triangle-false-rev
disable-ifcvt-diamond
disable-ifcvt-forked-diamond
ifcvt-branch-fold
If Converter
if-converter
imp-null-check-page-size
The page size of the target in bytes
imp-null-max-insts-to-consider
The max number of instructions to consider hoisting loads over (the algorithm is quadratic over this number)
Implicit null checks
implicit-null-checks
Expand indirectbr instructions
indirectbr-expand
switch_bb
switch_value_phi
.switch_cast
disable-spill-hoist
Disable inline spill hoisting
lower-interleaved-accesses
Enable lowering interleaved accesses to intrinsics
Lower interleaved memory accesses to target specific intrinsics
interleaved-access
Interleaved Access Pass
Latency Priority Queue
  Number of Queue Entries: 
Lazy Machine Block Frequency Analysis
lazy-machine-block-freq
DFSIn: 
 DFSOut: 
Abstract Scope
Children ...
Live DEBUG_VALUE analysis
livedebugvalues
live-debug-variables
Enable the live debug variables pass
Debug Variable Analysis
livedebugvars
********** DEBUG VARIABLES **********
 ind
 Loc
use-segment-set-for-physregs
Use segment set for the computation of the live ranges of physregs.
RegMasks:
********** MACHINEINSTRS **********
Live Interval Analysis
liveintervals
EMPTY
-phi
 weight:
Clean updater: 
Null updater.
 updater with gap = 
, last start = 
  Area 1:
  Spills:
  Area 2:
Live Registers:
 (uninitialized)
 (empty)
Live Range Shrink Pass
lrshrink
Live Range Shrink
Live Register Matrix
liveregmatrix
********** INTERVALS **********
 [Unknown]
Live Stack Slot Analysis
livestacks
  Alive in blocks: 
  Killed by:
 No instructions.
    #
regalloc=... not currently supported with -O0
Live Variable Analysis
livevars
trap-unreachable
Enable generating trap for unreachable
Local Stack Slot Allocation
localstackalloc
Add __emutls_[vt]. variables for emultated TLS model
loweremutls
__emutls_v.
__emutls_t.
Can't print out MachineBasicBlock because parent MachineFunction
 is null
<ir-block badref>
%ir-block.
address-taken
landing-pad
align 
; predecessors: 
successors: 
0x%08x
%.2f%%
liveins: 
; Irreducible loop header weight: 
%bb.
%08X
view-machine-block-freq-propagation-dags
Pop up a window to show a dag displaying how machine block frequencies propagate through the CFG.
view-block-layout-with-bfi
Pop up a window to show a dag displaying MBP layout and associated block frequencies of the CFG.
print-machine-bfi
Print the machine block frequency info.
MachineBlockFrequencyDAGS.
Machine Block Frequency Analysis
machine-block-freq
align-all-blocks
Force the alignment of all blocks in the function.
align-all-nofallthru-blocks
Force the alignment of all blocks that have no fall-through predecessors (i.e. don't add nops that are executed).
block-placement-exit-block-bias
Block frequency percentage a loop exit block needs over the original exit to be considered the new exit.
loop-to-cold-block-ratio
Outline loop blocks from loop chain if (frequency of loop) / (frequency of block) is greater than this ratio
force-loop-cold-block
Force outlining cold blocks from loops.
precise-rotation-cost
Model the cost of loop rotation more precisely by using profile data.
force-precise-rotation-cost
Force the use of precise cost loop rotation strategy.
misfetch-cost
Cost that models the probabilistic risk of an instruction misfetch due to a jump comparing to falling through, whose cost is zero.
jump-inst-cost
Cost of jump instructions.
tail-dup-placement
Perform tail duplication during placement. Creates more fallthrough opportunites in outline branches.
branch-fold-placement
Perform branch folding during placement. Reduces code size.
tail-dup-placement-threshold
Instruction cutoff for tail duplication during layout. Tail merging during layout is forced to have a threshold that won't conflict.
tail-dup-placement-aggressive-threshold
Instruction cutoff for aggressive tail duplication during layout. Used at -O3. Tail merging during layout is forced to have a threshold that won't conflict.
tail-dup-placement-penalty
Cost penalty for blocks that can avoid breaking CFG by copying. Copying can increase fallthrough, but it also increases icache pressure. This parameter controls the penalty to account for that. Percent as integer.
triangle-chain-count
Number of triangle-shaped-CFG's that need to be in a row for the triangle tail duplication heuristic to kick in. 0 to disable.
Branch Probability Basic Block Placement
block-placement
MBP.
Basic Block Placement Stats
block-placement-stats
static-likely-prob
branch probability threshold in percentageto be considered very likely
profile-likely-prob
branch probability threshold in percentage to be considered very likely when profile is available
Machine Branch Probability Analysis
machine-branch-prob
machine-combiner-inc-threshold
Incremental depth computation will be used for basic blocks with more instructions.
machine-combiner-dump-subst-intrs
Dump all substituted intrs
machine-combiner-verify-pattern-order
Verify that the generated patterns are ordered by increasing latency
Machine InstCombiner
machine-combiner
machine-cp-fwd
Controls which register COPYs are forwarded
Machine Copy Propagation Pass
machine-cp
Machine Common Subexpression Elimination
machine-cse
Machine Debugify Module
mir-debugify
Machine Dominance Frontier Construction
machine-domfrontier
verify-machine-dom-info
Verify machine dominator info (time consuming)
MachineDominatorTree for function 
 is not up to date!
Computed:
Actual:
MachineDominator Tree Construction
machinedomtree
Frame Objects:
  fi#
dead
variable sized
size=
, fixed
, at location [SP
align-all-functions
Force the alignment of all functions.
no-realign-stack
split-stack
# Machine code for function 
Function Live Ins: 
# End machine code for function 
systems with Graphviz or gv!
Jump Tables:
Constant Pool:
  cp#
, align=
FailedISel
IsSSA
Legalized
NoPHIs
NoVRegs
RegBankSelected
Selected
TracksLiveness
%jump-table.
Machine Function Printer
MachineFunction Printer
Unpack machine instruction bundles
unpack-mi-bundles
Finalize machine instruction bundles
finalize-mi-bundles
frame-setup 
frame-destroy 
nnan 
ninf 
nsz 
arcp 
contract 
afn 
reassoc 
nuw 
nsw 
exact 
UNKNOWN
 [sideeffect]
 [mayload]
 [maystore]
 [isconvergent]
 [alignstack]
 [attdialect]
 [inteldialect]
:[reguse
:[regdef
:[regdef-ec
:[clobber
:[imm
:[mem
:[??
 tiedto:$
 debug-location 
 :: 
 line no:
 indirect
avoid-speculation
MachineLICM should avoid speculation
hoist-cheap-insts
MachineLICM should hoist even cheap instructions
sink-insts-to-avoid-spills
MachineLICM should sink instructions into loops to avoid register spills
hoist-const-stores
Hoist invariant stores
Machine Loop Invariant Code Motion
machinelicm
Early Machine Loop Invariant Code Motion
early-machinelicm
Machine Natural Loop Construction
machine-loops
Machine Module Information
machinemoduleinfo
Free MachineFunction
print-regmask-num-regs
Number of registers to limit to when printing regmask operands in IR dumps. unlimited = -1
%subreg.
target-flags(
<unknown>) 
<unknown target flag>
<unknown bitmask target flag>
<mcsymbol 
%fixed-stack.
%stack.
implicit-def 
implicit 
internal 
dead 
undef 
early-clobber 
debug-use 
renamable 
.subreg
(tied-def 
%const.
target-index(
<regmask
 more...
liveout(
<cfi directive>
intrinsic(@
intrinsic(
pred(
MIR_PSEUDO_SRC_HACK
volatile 
non-temporal 
dereferenceable 
invariant 
load 
 into 
stack
jump-table
constant-pool
call-entry 
call-entry &
custom "
unknown-address
, !tbaa 
, !alias.scope 
, !noalias 
, !range 
, addrspace 
same_value 
remember_state 
restore_state 
def_cfa_register 
def_cfa_offset 
def_cfa 
rel_offset 
adjust_cfa_offset 
restore 
escape 
0x%02x
undefined 
register 
window_save 
<unserializable cfi directive>
%dwarfreg.
<badreg>
syncscope("
machine-opt-remark-emitter
enable-linkonceodr-outlining
Enable the machine outliner on linkonceodr functions
Machine Outliner
Instruction mapping overflow!
machine-outliner
NotOutliningCheaper
Did not outline 
 instructions
NumOccurrences
 locations.
 Bytes from outlining all occurrences (
OutliningCost
 >= Unoutlined instruction bytes (
NotOutliningCost
 (Also found at: 
OtherStartLoc
OUTLINED_FUNCTION_
OutlinedFunction
Saved 
OutliningBenefit
 bytes by 
outlining 
 instructions 
from 
 locations. 
(Found at: 
StartLoc
Machine Function Outliner
enable-pipeliner
Enable Software Pipelining
enable-pipeliner-opt-size
Enable SWP at Os.
pipeliner-max-mii
Size limit for the MII.
pipeliner-max-stages
Maximum stages allowed in the generated scheduled.
pipeliner-prune-deps
Prune dependences between unrelated Phi nodes.
pipeliner-prune-loop-carried
Prune loop carried order dependences.
pipeliner-ignore-recmii
Ignore RecMII
Num nodes 
 rec 
 mov 
 depth 
 col 
   SU(
Modulo Software Pipelining
pipeliner
cycle 
MachinePostDominator Tree Construction
machinepostdomtree
machine-region-info
enable-subreg-liveness
Enable subregister liveness tracking.
misched-topdown
Force top-down list scheduling
misched-bottomup
Force bottom-up list scheduling
misched-dcpl
Print critical path length to stdout
misched-limit
Limit ready list to N instructions
misched-regpressure
Enable register pressure scheduling.
misched-cyclicpath
Enable cyclic critical path analysis.
misched-cluster
Enable memop clustering.
verify-misched
Verify machine instrs before and after machine scheduling
Machine instruction scheduler to use
Use the target's default scheduler choice.
enable-misched
Enable the machine instruction scheduling pass.
enable-post-misched
Enable the post-ra machine instruction scheduling pass.
Queue 
Missing SUnit
  Pressure Diff      : 
  Single Issue       : 
true;
false;
  Retired: 
  Executed: 
  Critical: 
  ExpectedLatency: 
  - Resource
  - Latency
 limited.
GenericScheduler RegionPolicy: 
 ShouldTrackPressure=
 OnlyTopDown=
 OnlyBottomUp=
Critical Path(GS-RR ): 
converge
Standard converging scheduler.
Critical Path(PGS-RR ): 
ilpmax
Schedule bottom-up for max ILP
ilpmin
Schedule bottom-up for min ILP
ScheduleDAGMI::viewGraph is only available in debug builds on 
Scheduling-Units Graph for 
Machine Instruction Scheduler
machine-scheduler
Before machine scheduling.
After machine scheduling.
:%bb. 
PostRA Machine Instruction Scheduler
postmisched
Before post machine scheduling.
After post machine scheduling.
MOps
machine-sink-split
Split critical edges during machine sinking
machine-sink-bfi
Use block frequency info to find successors to sink
machine-sink-split-probability-threshold
Percentage threshold for splitting single-instruction critical edge. If the branch threshold is higher than this threshold, we allow speculative execution of up to 1 instruction to avoid branching to splitted critical edge
Machine code sinking
machine-sink
PostRA Machine Sink
postra-machine-sink
mir-strip-debugify-only
Should mir-strip-debug only strip debug info from debugified modules by default
Machine Strip Debug Module
mir-strip-debug
Machine Trace Metrics
machine-trace-metrics
MinInstr
 machine code errors.
machineverifier
Bad instruction parent pointer
Instruction: 
Missing BundledPred flag, BundledSucc was set on predecessor
BundledPred flag is set, but BundledSucc not set on predecessor
No bundle header
Instruction has operand with wrong parent set
BundledSucc flag set on last instruction in block
Function has NoVRegs property but there are VReg operands
*** Bad machine code: 
 ***
- function:    
MBB has duplicate entries in its predecessor list.
MBB has duplicate entries in its successor list.
FrameSetup is after another FrameSetup
FrameDestroy is not after a FrameSetup
FrameDestroy <n> is after FrameSetup <m>
FrameDestroy <
> is after FrameSetup <
The exit stack state of a predecessor is inconsistent.
Predecessor 
 has exit state (
), while 
 has entry state (
The entry stack state of a successor is inconsistent.
Successor 
A return block ends with a FrameSetup.
A return block ends with a nonzero stack adjustment.
MBB has allocatable live-in, but isn't entry or landing-pad.
MBB has successor that isn't part of the function.
Inconsistent CFG
MBB is not in the predecessor list of the successor 
MBB has predecessor that isn't part of the function.
MBB is not in the successor list of the predecessor 
MBB has more than one landing pad successor
MBB exits via unconditional fall-through but doesn't have exactly one CFG successor!
MBB exits via unconditional fall-through but its successor differs from its CFG successor!
MBB exits via unconditional fall-through but ends with a barrier instruction!
MBB exits via unconditional fall-through but has a condition!
MBB exits via unconditional branch but doesn't have exactly one CFG successor!
MBB exits via unconditional branch but the CFG successor doesn't match the actual successor!
MBB exits via unconditional branch but doesn't contain any instructions!
MBB exits via unconditional branch but doesn't end with a barrier instruction!
MBB exits via unconditional branch but the branch isn't a terminator instruction!
MBB conditionally falls through out of function!
MBB exits via conditional branch/fall-through but only has one CFG successor!
MBB exits via conditional branch/fall-through but the CFG successor don't match the actual successor!
MBB exits via conditional branch/fall-through but doesn't have exactly two CFG successors!
MBB exits via conditional branch/fall-through but the CFG successors don't match the actual successors!
MBB exits via conditional branch/fall-through but doesn't contain any instructions!
MBB exits via conditional branch/fall-through but ends with a barrier instruction!
MBB exits via conditional branch/fall-through but the branch isn't a terminator instruction!
MBB exits via conditional branch/branch through but only has one CFG successor!
MBB exits via conditional branch/branch through but the CFG successor don't match the actual successor!
MBB exits via conditional branch/branch but doesn't have exactly two CFG successors!
MBB exits via conditional branch/branch but the CFG successors don't match the actual successors!
MBB exits via conditional branch/branch but doesn't contain any instructions!
MBB exits via conditional branch/branch but doesn't end with a barrier instruction!
MBB exits via conditional branch/branch but the branch isn't a terminator instruction!
MBB exits via conditinal branch/branch but there's no condition!
AnalyzeBranch returned invalid data!
MBB live-in list contains non-physical register
- basic block: 
- instruction: 
Instruction index out of order
Last instruction was at 
Non-terminator instruction after the first terminator
First terminator was:
Too few operands
 operands expected, but 
 given.
Found PHI instruction with NoPHIs property set
Found PHI instruction after non-PHI
Missing mayLoad flag
Missing mayStore flag
Debug instruction has a slot index
Instruction inside bundle has a slot index
Missing slot index
Unexpected generic instruction in a Selected function
Type mismatch in generic instruction
Generic instruction is missing a virtual register type
Generic instruction cannot have physical register
Instruction cannot use a vector result type
G_CONSTANT operand must be cimm
inconsistent constant size
G_FCONSTANT operand must be fpimm
Generic instruction accessing memory must have one mem operand
Generic Instruction G_PHI has operands with incompatible/missing types
bitcast cannot convert between pointers and other types
bitcast sizes must match
Generic extend/truncate can not operate on pointers
Generic extend/truncate must be all-vector or all-scalar
Generic vector extend/truncate must preserve number of lanes
Generic extend has destination type no larger than source
Generic truncate has destination type no smaller than source
G_MERGE_VALUES cannot operate on vectors
G_UNMERGE_VALUES destination types do not match
G_UNMERGE_VALUES source operand does not cover dest operands
G_BUILD_VECTOR must produce a vector from scalar operands
G_BUILD_VECTOR source operand types are not homogeneous
G_BUILD_VECTOR src operands total size don't match dest size.
G_BUILD_VECTOR_TRUNC must produce a vector from scalar operands
G_BUILD_VECTOR_TRUNC source operand types are not homogeneous
G_BUILD_VECTOR_TRUNC source operand types are not larger than dest elt type
G_CONCAT_VECTOR requires vector source and destination operands
G_CONCAT_VECTOR source operand types are not homogeneous
G_CONCAT_VECTOR num dest and source elements should match
G_SEXT_INREG expects an immediate operand #2
G_SEXT_INREG size must be >= 1
G_SEXT_INREG size must be less than source bit width
Copy Instruction is illegal with mismatching types
Def = 
, Src = 
Copy Instruction is illegal with mismatching sizes
Def Size = 
, Src Size = 
Generic vector icmp/fcmp must preserve number of lanes
meta operands to STATEPOINT not constant!
Too few operands on inline asm
Asm string must be an external symbol
Asm flags must be an immediate
Unknown asm flags
Missing operands in last group
Expected implicit register after groups
- operand 
:   
operand types must be all-vector or all-scalar
operand types must preserve number of vector elements
Explicit definition must be a register
Explicit definition marked as use
Explicit definition marked as implicit
Explicit operand marked as def
Explicit operand marked as implicit
Tied use must be a register
Operand should be tied
Tied def doesn't match MCInstrDesc
Tied counterpart must be a register
Tied physical registers must match.
Explicit operand should not be tied
Extra explicit operand on non-variadic instruction
Must be tied to a register
Missing tie flags on tied operand
Inconsistent tie links
Explicit def tied to explicit use without tie constraint
Explicit def should be tied to implicit use
Two-address instruction operands must be identical
Illegal subregister index for physical register
Illegal physical register for instruction
 is not a 
 register.
isRenamable set on reserved register
Use-reg is not IsDebug in a DBG_VALUE
Generic virtual register invalid in a Selected function
Generic virtual register must have a valid type
Generic virtual register must have a bank in a RegBankSelected function
Register bank is too small for virtual register
Register bank 
 too small(
) to fit 
-bits
Generic virtual register does not subregister index
Virtual register does not match instruction constraint
Expect register class 
 but got nothing
Invalid subregister index for virtual register
Register class 
 does not support subreg index 
Invalid register class for subregister index
 does not fully support subreg index 
No largest legal super class exists.
No matching super-reg register class.
Illegal virtual register for instruction
Expected a 
 register, but got a 
 register
PHI operand is not in the CFG
Missing fixed stack memoperand.
Instruction loads from dead spill slot
Live stack: 
Instruction stores to dead spill slot
Kill missing from LiveVariables
No live subrange at use
Virtual register has no live interval
Using an undefined physical register
Reading virtual register without a def
Using a killed virtual register
Multiple virtual register defs in SSA form
Virtual register has no Live interval
No live segment at use
Live range continues after kill flag
- liverange:   
- regunit:     
- v. register: 
- lanemask:    
- interval:    
- at:          
Inconsistent valno->def
No live segment at def
Live range continues after dead def flag
- ValNo:       
 (def 
Block ends before last instruction index
Block ends at 
 last instruction was at 
Virtual register killed in block, but needed live out.
Virtual register 
 is used after the block.
Virtual register defs don't dominate all uses.
Expected first PHI operand to be a register def
Unexpected flag on PHI operand
Expected first PHI operand to be a virtual register
Expected PHI operand to be a register
Expected PHI operand to be a basic block
PHI input is not a predecessor block
PHI operand is not live-out from predecessor
Missing PHI operand
 is a predecessor according to the CFG.
LiveVariables: Block missing from AliveBlocks
 must be live through the block.
LiveVariables: Block should not be in AliveBlocks
 is not needed live through the block.
Missing live interval for virtual register
 still has defs or uses
Lane masks of sub ranges overlap in live interval
Subrange lanemask is invalid
Subrange must not be empty
A Subrange is not covered by the main range
Multiple connected components in live interval
: valnos
Value not live at VNInfo def and not marked unused
Live segment at def has different VNInfo
Invalid VNInfo definition index
PHIDef VNInfo is not defined at MBB start
No instruction at VNInfo def index
Defining instruction does not modify register
Early clobber def must be at an early-clobber slot
Non-PHI, non-early clobber def must be at a register slot
Foreign valno in live segment
Live segment valno is marked unused
Bad start of live segment, no basic block
Live segment must begin at MBB entry or valno def
Bad end of live segment, no basic block
Live segment doesn't end at a valid instruction
Live segment ends at B slot of an instruction
Live segment ending at dead slot spans instructions
Live segment ending at early clobber slot must be redefined by an EC def in the same instruction
Instruction ending live segment on dead slot has no dead flag
Instruction ending live segment doesn't read the register
Register not marked live out of predecessor
 live into 
, not live before 
Different value live out of predecessor
Valno #
 live out of 
Valno #
- segment:     
Implement the 'patchable-function' attribute
patchable-function
simplify-mir
Leave out unnecessary information when printing MIR
mir-debug-loc
Print MIR debug-locations
<unnamed alloca>
%ir.
CustomRegMask(
alignment
exposesReturnsTwice
legalized
regBankSelected
selected
failedISel
tracksRegLiveness
registers
liveins
calleeSavedRegisters
frameInfo
fixedStack
constants
jumpTable
body
class
preferred-register
virtual-reg
isFrameAddressTaken
isReturnAddressTaken
hasStackMap
hasPatchPoint
stackSize
offsetAdjustment
maxAlignment
adjustsStack
hasCalls
stackProtector
maxCallFrameSize
hasOpaqueSPAdjustment
hasVAStart
hasMustTailInVarArgFunc
localFrameSize
savePoint
restorePoint
stack-id
isImmutable
isAliased
callee-saved-register
callee-saved-restored
debug-info-variable
debug-info-expression
debug-info-location
spill-slot
local-offset
variable-sized
isTargetSpecific
entries
block-address
gp-rel64-block-address
gp-rel32-block-address
label-difference32
custom32
blocks
MIR Printing Pass
obfuscation-symbol-map
Specify the symbol_map output
filename.bcsymbolmap
obfuscate-preserve
<sym name>
__hidden#
__ir_hidden#
could not open obfuscation symbol map: 
_CurrentVNode
_DynamicBufferIOBuffer
_EndVNode
_FreeHook
_VPBufferSize
_VPMaxNumValsPerSite
_VPMergeHook
____chkstk
____chkstk_ms
____gesf2
____lesf2
____ltsf2
____nesf2
___absvdi2
___absvsi2
___absvti2
___adddf3
___adddf3vfp
___addsf3
___addsf3vfp
___addvdi3
___addvsi3
___addvti3
___aeabi_drsub
___aeabi_frsub
___alloca
___ashldi3
___ashlti3
___ashrdi3
___ashrti3
___atomic_compare_exchange
___atomic_compare_exchange_1
___atomic_compare_exchange_16
___atomic_compare_exchange_2
___atomic_compare_exchange_4
___atomic_compare_exchange_8
___atomic_exchange
___atomic_exchange_1
___atomic_exchange_16
___atomic_exchange_2
___atomic_exchange_4
___atomic_exchange_8
___atomic_fetch_add_1
___atomic_fetch_add_16
___atomic_fetch_add_2
___atomic_fetch_add_4
___atomic_fetch_add_8
___atomic_fetch_and_1
___atomic_fetch_and_16
___atomic_fetch_and_2
___atomic_fetch_and_4
___atomic_fetch_and_8
___atomic_fetch_or_1
___atomic_fetch_or_16
___atomic_fetch_or_2
___atomic_fetch_or_4
___atomic_fetch_or_8
___atomic_fetch_sub_1
___atomic_fetch_sub_16
___atomic_fetch_sub_2
___atomic_fetch_sub_4
___atomic_fetch_sub_8
___atomic_fetch_xor_1
___atomic_fetch_xor_16
___atomic_fetch_xor_2
___atomic_fetch_xor_4
___atomic_fetch_xor_8
___atomic_load
___atomic_load_1
___atomic_load_16
___atomic_load_2
___atomic_load_4
___atomic_load_8
___atomic_store
___atomic_store_1
___atomic_store_16
___atomic_store_2
___atomic_store_4
___atomic_store_8
___bswapdi2
___bswapsi2
___chkstk
___chkstk_ms
___clzdi2
___clzsi2
___clzti2
___cmpdi2
___cmpti2
___cpu_indicator_init
___cpu_model
___ctzdi2
___ctzsi2
___ctzti2
___divdc3
___divdf3
___divdf3vfp
___divdi3
___divmodsi4
___divsc3
___divsf3
___divsf3vfp
___divsi3
___divtc3
___divti3
___divxc3
___emutls_get_address
___eprintf
___eqdf2
___eqdf2vfp
___eqsf2
___eqsf2vfp
___extendhfsf2
___extendsfdf2
___extendsfdf2vfp
___ffsdi2
___ffsti2
___fixdfdi
___fixdfsi
___fixdfsivfp
___fixdfti
___fixsfdi
___fixsfsi
___fixsfsivfp
___fixsfti
___fixunsdfdi
___fixunsdfsi
___fixunsdfsivfp
___fixunsdfti
___fixunssfdi
___fixunssfsi
___fixunssfsivfp
___fixunssfti
___fixunsxfdi
___fixunsxfsi
___fixunsxfti
___fixxfdi
___fixxfti
___floatdidf
___floatdisf
___floatdixf
___floatsidf
___floatsidfvfp
___floatsisf
___floatsisfvfp
___floattidf
___floattisf
___floattixf
___floatundidf
___floatundisf
___floatundixf
___floatunsidf
___floatunsisf
___floatunssidfvfp
___floatunssisfvfp
___floatuntidf
___floatuntisf
___floatuntixf
___gcov_flush
___gedf2
___gedf2vfp
___gesf2
___gesf2vfp
___gnu_f2h_ieee
___gnu_h2f_ieee
___gtdf2
___gtdf2vfp
___gtsf2
___gtsf2vfp
___ledf2
___ledf2vfp
___lesf2
___lesf2vfp
___llvm_get_function_addr
___llvm_profile_begin_counters
___llvm_profile_begin_data
___llvm_profile_begin_names
___llvm_profile_begin_vnodes
___llvm_profile_check_compatibility
___llvm_profile_dump
___llvm_profile_end_counters
___llvm_profile_end_data
___llvm_profile_end_names
___llvm_profile_end_vnodes
___llvm_profile_filename
___llvm_profile_get_data_size
___llvm_profile_get_magic
___llvm_profile_get_num_padding_bytes
___llvm_profile_get_path_prefix
___llvm_profile_get_size_for_buffer
___llvm_profile_get_size_for_buffer_internal
___llvm_profile_get_version
___llvm_profile_initialize_file
___llvm_profile_instrument_target
___llvm_profile_iterate_data
___llvm_profile_merge_from_buffer
___llvm_profile_raw_version
___llvm_profile_recursive_mkdir
___llvm_profile_register_write_file_atexit
___llvm_profile_reset_counters
___llvm_profile_runtime
___llvm_profile_set_filename
___llvm_profile_set_num_value_sites
___llvm_profile_write_buffer
___llvm_profile_write_buffer_internal
___llvm_profile_write_file
___lshrdi3
___lshrti3
___ltdf2
___ltdf2vfp
___ltsf2
___ltsf2vfp
___moddi3
___modsi3
___modti3
___muldc3
___muldf3
___muldf3vfp
___muldi3
___mulodi4
___mulosi4
___muloti4
___mulsc3
___mulsf3
___mulsf3vfp
___multc3
___multi3
___mulvdi3
___mulvsi3
___mulvti3
___mulxc3
___nedf2
___nedf2vfp
___negdf2
___negdi2
___negsf2
___negti2
___negvdi2
___negvsi2
___negvti2
___nesf2
___nesf2vfp
___paritydi2
___paritysi2
___parityti2
___popcountdi2
___popcountsi2
___popcountti2
___powidf2
___powisf2
___powixf2
___subdf3
___subdf3vfp
___subsf3
___subsf3vfp
___subvdi3
___subvsi3
___subvti3
___switch16
___switch32
___switch8
___switchu8
___sync_fetch_and_add_4
___sync_fetch_and_add_8
___sync_fetch_and_and_4
___sync_fetch_and_and_8
___sync_fetch_and_max_4
___sync_fetch_and_max_8
___sync_fetch_and_min_4
___sync_fetch_and_min_8
___sync_fetch_and_nand_4
___sync_fetch_and_nand_8
___sync_fetch_and_or_4
___sync_fetch_and_or_8
___sync_fetch_and_sub_4
___sync_fetch_and_sub_8
___sync_fetch_and_umax_4
___sync_fetch_and_umax_8
___sync_fetch_and_umin_4
___sync_fetch_and_umin_8
___sync_fetch_and_xor_4
___sync_fetch_and_xor_8
___truncdfhf2
___truncdfsf2
___truncdfsf2vfp
___truncsfhf2
___ucmpdi2
___ucmpti2
___udivdi3
___udivmoddi4
___udivmodsi4
___udivmodti4
___udivsi3
___udivti3
___umoddi3
___umodsi3
___umodti3
___unorddf2
___unorddf2vfp
___unordsf2
___unordsf2vfp
__alloca
_atomic_flag_clear
_atomic_flag_clear_explicit
_atomic_flag_test_and_set
_atomic_flag_test_and_set_explicit
_atomic_signal_fence
_atomic_thread_fence
_compilerrt_abort_impl
_getFirstValueProfRecord
_getValueProfDataSize
_getValueProfRecordHeaderSize
_getValueProfRecordNext
_getValueProfRecordNumValueData
_getValueProfRecordSize
_getValueProfRecordValueData
_llvm_delete_flush_function_list
_llvm_delete_writeout_function_list
_llvm_gcda_emit_arcs
_llvm_gcda_emit_function
_llvm_gcda_end_file
_llvm_gcda_increment_indirect_counter
_llvm_gcda_start_file
_llvm_gcda_summary_info
_llvm_gcov_init
_llvm_register_flush_function
_llvm_register_writeout_function
_llvm_writeout_files
_lprofApplyPathPrefix
_lprofBufferIOFlush
_lprofBufferIOWrite
_lprofBufferWriter
_lprofCreateBufferIO
_lprofCreateBufferIOInternal
_lprofCurFilename
_lprofDeleteBufferIO
_lprofFindFirstDirSeparator
_lprofFindLastDirSeparator
_lprofGetHostName
_lprofGetLoadModuleSignature
_lprofGetPathPrefix
_lprofGetVPDataReader
_lprofMergeValueProfData
_lprofOpenFileEx
_lprofProfileDumped
_lprofSetMaxValsPerSite
_lprofSetProfileDumped
_lprofSetupValueProfiler
_lprofValueProfNodes
_lprofWriteData
_lprofWriteDataImpl
_serializeValueProfDataFrom
_serializeValueProfRecordFrom
_objc_retain
_objc_release
_objc_autorelease
_objc_retainAutoreleasedReturnValue
_objc_retainBlock
_objc_autoreleaseReturnValue
_objc_autoreleasePoolPush
_objc_loadWeakRetained
_objc_loadWeak
_objc_destroyWeak
_objc_storeWeak
_objc_initWeak
_objc_moveWeak
_objc_copyWeak
_objc_retainedObject
_objc_unretainedObject
_objc_unretainedPointer
_objc_unsafeClaimAutoreleasedReturnValue
_objc_autoreleasePoolPop
_objc_retain_autorelease
_objc_retainAutorelease
_objc_retainAutoreleaseReturnValue
_objc_sync_enter
_objc_sync_exit
_objc_storeStrong
___gnat_eh_personality
___gxx_personality_v0
___gxx_personality_sj0
___gcc_personality_v0
___gcc_personality_sj0
___objc_personality_v0
__except_handler3
__except_handler4
___C_specific_handler
___CxxFrameHandler3
_ProcessCLRException
_rust_eh_personality
___stack_chk_fail
___stack_chk_guard
__obfs_tmp#
Obfuscate all strings in the module
obfuscate-module
Optimize machine instruction PHIs
opt-phis
aggressive-ext-opt
Aggressive extension optimization
disable-peephole
Disable the peephole optimizer
disable-adv-copy-opt
Disable advanced copy optimization
disable-non-allocatable-phys-copy-opt
Disable non-allocatable physical register copy optimization
rewrite-phi-limit
Limit the length of PHI chains to lookup
recurrence-chain-limit
Maximum length of recurrence chain when evaluating the benefit of commuting operands
Peephole Optimizations
peephole-opt
disable-phi-elim-edge-splitting
Disable critical edge splitting during PHI elimination
phi-elim-split-all-critical-edges
Split all critical edges during PHI elimination
no-phi-elim-live-out-early-exit
Do not use an early exit if isLiveOutPastPHIs returns true.
Eliminate PHI nodes for register allocation
phi-node-elimination
Post RA hazard recognizer
post-RA-hazard-rec
post-RA-scheduler
Enable scheduling after register allocation
break-anti-dependencies
Break post-RA scheduling anti-dependencies: "critical", "all", or "none"
postra-sched-debugdiv
Debug control MBBs that are scheduled
postra-sched-debugmod
**** NOOP ****
Post RA top-down list latency scheduler
Pre-ISel Intrinsic Lowering
pre-isel-intrinsic-lowering
Process Implicit Definitions
processimpdefs
warn-stack-size
Warn for stack size bigger than the given number
Prologue/Epilogue Insertion & Frame Finalization
prologepilog
stack size
StackSize
NumStackBytes
 stack bytes in function
TargetCustom
FixedStack
Stack
JumpTable
ConstantPool
GlobalValueCallEntry
ExternalSymbolCallEntry
verify-regalloc
Verify during register allocation
Seed Live Regs
basic register allocator
Basic Register Allocator
regallocbasic
fast register allocator
Fast Register Allocator
regallocfast
inline assembly requires more registers than available
ran out of registers during register allocation
split-spill-mode
Spill mode for splitting live ranges
Default
Optimize for size
speed
Optimize for speed
lcr-max-depth
Last chance recoloring max depth
lcr-max-interf
Last chance recoloring maximum number of considered interference at a time
exhaustive-register-search
Exhaustive Search for registers bypassing the depth and interference cutoffs of last chance recoloring
enable-local-reassign
Local reassignment can yield better allocation decisions, but may be compile time intensive
enable-deferred-spilling
Instead of spilling a variable right away, defer the actual code insertion to the end of the allocation. That way the allocator might still find a suitable coloring for this variable because of other evicted variables.
regalloc-csr-first-time-cost
Cost for first time use of callee-saved register.
condsider-local-interval-cost
Consider the cost of local intervals created by a split candidate when choosing the best split candidate.
greedy
greedy register allocator
Greedy Register Allocator
Before greedy register allocator
LoopSpillReload
NumSpills
 spills 
NumFoldedSpills
 folded spills 
NumReloads
 reloads 
NumFoldedReloads
 folded reloads 
generated in loop
register allocation failed: maximum depth for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
register allocation failed: maximum interference for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
register allocation failed: maximum interference and depth for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
Spiller
After spilling
After splitting live range around region
evict
Evict
local_split
Local Splitting
global_split
Global Splitting
After splitting live range around basic blocks
stress-regalloc
Limit all regclasses to N registers
join-liveintervals
Coalesce copies (default=true)
terminal-rule
Apply the terminal rule
join-splitedges
Coalesce copies on split edges (default=subtarget)
join-globalcopies
Coalesce copies that span blocks (default=subtarget)
verify-coalescing
Verify machine instrs before and after register coalescing
Simple Register Coalescing
simple-register-coalescing
Before register coalescing
After register coalescing
Max Pressure: 
Live In: 
Live Out: 
Curr Pressure: 
Error while trying to spill 
 from class 
: Cannot scavenge register without an emergency spill slot!
Incomplete scavenging after 2nd pass
Rename Independent Subregisters
rename-independent-subregs
Rename Disconnected Subregister Components
Rename Register Operands
mir-namer
Rename virtual register operands
canon-nth-function
Function number to canonicalize.
Rename Register Operands Canonically
mir-canonicalizer
Rename register operands in a canonical ordering.
print-regusage
print register usage details collected for analysis.
Clobbered Registers: 
Register Usage Information Storage
reg-usage-info
Register Usage Information Collector
RegUsageInfoCollector
Register Usage Information Collector Pass
Register Usage Information Propagation
reg-usage-propagation
ResetMachineFunction
Instruction selection failed
safestack-use-pointer-address
Safe Stack instrumentation pass
safe-stack
TargetLowering instance is required
__safestack_pointer_address
unsafe_stack_ptr
gcroot intrinsic not compatible with safestack attribute
.unsafe-byval
.unsafe
unsafe_stack_static_top
unsafe_stack_dynamic_ptr
safe-stack-coloring
enable safe stack coloring
Allocas:
Block liveness:
  BB [
): begin 
, end 
, livein 
, liveout 
Alloca liveness:
safe-stack-layout
enable safe stack layout
Stack regions:
), range 
Stack objects:
  at 
Scalarize unsupported masked memory intrinsics
scalarize-masked-mem-intrin
Scalarize Masked Memory Intrinsics
res.phi.else
cond.load
else
res.phi.select
cond.store
Load
ToLoad
ToStore
Data
Anti
Out 
Ord 
 Latency=
 Reg=
 Barrier
 Memory
 Artificial
 Weak
 Cluster
  # preds left       : 
  # succs left       : 
  # weak preds left  : 
  # weak succs left  : 
  # rdefs left       : 
  Latency            : 
  Depth              : 
  Height             : 
EntrySU
ExitSU
  Predecessors:
  Successors:
enable-aa-sched-mi
Enable use of AA during MI DAG construction
use-tbaa-in-sched-mi
Enable use of TBAA during MI DAG construction
dag-maps-huge-region
The limit to use while constructing the DAG prior to scheduling, at which point a trade-off is made to avoid excessive compile time.
dag-maps-reduction-size
A huge scheduling region will have maps reduced by this many nodes at a time. Defaults to HugeRegion / 2.
<entry>
<exit>
dag.
BADILP
ScheduleDAG::viewGraph is only available in debug builds on 
Scoreboard:
Shadow Stack GC Lowering
shadow-stack-gc-lowering
shadow-stack
gc_map
gc_stackentry
llvm_gc_root_chain
gc_frame
gc_currhead
gc_frame.map
gc_root
gc_frame.next
gc_newhead
gc_cleanup
gc_savedhead
gc_map.
__gc_
gc_stackentry.
enable-shrink-wrap
enable the shrink-wrapping pass
Shrink Wrap Pass
shrink-wrap
Shrink Wrapping analysis
UnsupportedIrreducibleCFG
Irreducible CFGs are not supported yet.
UnsupportedEHFunclets
EH Funclets are not supported yet.
SJLJ Exception Handling preparation
_Unwind_SjLj_Register
_Unwind_SjLj_Unregister
jbuf_gep
jbuf_fp_gep
jbuf_sp_gep
.tmp
fn_context
exception_gep
exn_val
exn_selector_gep
exn_selector_val
pers_fn_gep
lsda_addr
lpad.val
call_site
Berd
Slot index numbering
slotindexes
Spill Code Placement Analysis
spill-code-placement
 empty
Impossible to implement partial COPY
no-stack-coloring
Disable stack coloring
protect-from-escaped-allocas
Do not optimize lifetime zones that are broken
stackcoloring-lifetime-start-on-first-use
Treat stack lifetimes as starting on first use, not on START marker.
 : { 
BEGIN
LIVE_IN
LIVE_OUT
Inspecting block #
Interval[
Merge disjoint stack slots
stack-coloring
enable-patchpoint-liveness
Enable PatchPoint Liveness Analysis Pass
StackMap Liveness Analysis
stackmap-liveness
stackmap-version
Specify the stackmap encoding version (default = 3)
enable-selectiondag-sp
stack-protector-buffer-size
Guard
SP_return
CallStackCheckFailBlk
__stack_smash_handler
Insert stack protectors
stack-protector
StackGuardSlot
StackGuard
StackProtectorRequested
Stack protection applied to function 
 due to a function attribute or command-line switch
StackProtectorAllocaOrArray
 due to a call to alloca or use of a variable length array
StackProtectorBuffer
 due to a stack allocated buffer or struct containing a buffer
StackProtectorAddressTaken
 due to the address of a local variable being taken
no-stack-slot-sharing
Suppress slot sharing during stack coloring
ssc-dce-limit
Stack Slot Coloring
stack-slot-coloring
Tail Duplication
tailduplication
Early Tail Duplication
early-tailduplication
tail-dup-size
Maximum instructions to consider tail duplicating
tail-dup-indirect-size
Maximum instructions to consider tail duplicating blocks that end with indirect branches.
tail-dup-verify
Verify sanity of PHI instructions during taildup
tail-dup-limit
Malformed PHI in 
  missing input from predecessor 
Warning: malformed PHI in 
  extra input from predecessor 
  non-existing 
no-frame-pointer-elim
WinEH not implemented for this target
disable-sched-hazard
Disable hazard detection during preRA scheduling
.space
misched
post-RA-sched
cannot spill patchpoint subregister operand
jump-is-expensive
Do not create extra branches to split comparison logic.
min-jump-table-entries
Set minimum number of entries to use a jump table.
max-jump-table-size
Set maximum size of jump tables; zero for no limit.
jump-table-density
Minimum density for building a jump table in a normal function
optsize-jump-table-density
Minimum density for building a jump table in an optsize function
min-predictable-branch
Minimum percentage (0-100) that a condition must be either true or false to assume that the condition is predictable
__ashlhi3
__ashlsi3
__ashldi3
__ashlti3
__lshrhi3
__lshrsi3
__lshrdi3
__lshrti3
__ashrhi3
__ashrsi3
__ashrdi3
__ashrti3
__mulqi3
__mulhi3
__mulsi3
__muldi3
__multi3
__mulosi4
__mulodi4
__muloti4
__divqi3
__divhi3
__divsi3
__divdi3
__divti3
__udivqi3
__udivhi3
__udivsi3
__udivdi3
__udivti3
__modqi3
__modhi3
__modsi3
__moddi3
__modti3
__umodqi3
__umodhi3
__umodsi3
__umoddi3
__umodti3
__negsi2
__negdi2
__clzsi2
__clzdi2
__clzti2
__addsf3
__adddf3
__addxf3
__addtf3
__gcc_qadd
__subsf3
__subdf3
__subxf3
__subtf3
__gcc_qsub
__mulsf3
__muldf3
__mulxf3
__multf3
__gcc_qmul
__divsf3
__divdf3
__divxf3
__divtf3
__gcc_qdiv
fmaf
fmal
__powisf2
__powidf2
__powixf2
__powitf2
__gcc_stoq
__gcc_dtoq
__extendxftf2
__extenddftf2
__extendsftf2
__extendsfdf2
__gnu_h2f_ieee
__gnu_f2h_ieee
__truncdfhf2
__truncxfhf2
__trunctfhf2
__truncdfsf2
__truncxfsf2
__trunctfsf2
__gcc_qtos
__truncxfdf2
__trunctfdf2
__gcc_qtod
__trunctfxf2
__fixsfsi
__fixsfdi
__fixsfti
__fixdfsi
__fixdfdi
__fixdfti
__fixxfsi
__fixxfdi
__fixxfti
__fixtfsi
__fixtfdi
__fixtfti
__gcc_qtou
__fixunssfsi
__fixunssfdi
__fixunssfti
__fixunsdfsi
__fixunsdfdi
__fixunsdfti
__fixunsxfsi
__fixunsxfdi
__fixunsxfti
__fixunstfsi
__fixunstfdi
__fixunstfti
__floatsisf
__floatsidf
__floatsixf
__floatsitf
__gcc_itoq
__floatdisf
__floatdidf
__floatdixf
__floatditf
__floattisf
__floattidf
__floattixf
__floattitf
__floatunsisf
__floatunsidf
__floatunsixf
__floatunsitf
__gcc_utoq
__floatundisf
__floatundidf
__floatundixf
__floatunditf
__floatuntisf
__floatuntidf
__floatuntixf
__floatuntitf
__eqsf2
__eqdf2
__eqtf2
__gcc_qeq
__nesf2
__nedf2
__netf2
__gcc_qne
__gesf2
__gedf2
__getf2
__gcc_qge
__ltsf2
__ltdf2
__lttf2
__gcc_qlt
__lesf2
__ledf2
__letf2
__gcc_qle
__gtsf2
__gtdf2
__gttf2
__gcc_qgt
__unordsf2
__unorddf2
__unordtf2
__gcc_qunord
__llvm_memcpy_element_unordered_atomic_1
__llvm_memcpy_element_unordered_atomic_2
__llvm_memcpy_element_unordered_atomic_4
__llvm_memcpy_element_unordered_atomic_8
__llvm_memcpy_element_unordered_atomic_16
__llvm_memmove_element_unordered_atomic_1
__llvm_memmove_element_unordered_atomic_2
__llvm_memmove_element_unordered_atomic_4
__llvm_memmove_element_unordered_atomic_8
__llvm_memmove_element_unordered_atomic_16
__llvm_memset_element_unordered_atomic_1
__llvm_memset_element_unordered_atomic_2
__llvm_memset_element_unordered_atomic_4
__llvm_memset_element_unordered_atomic_8
__llvm_memset_element_unordered_atomic_16
_Unwind_Resume
__sync_val_compare_and_swap_1
__sync_val_compare_and_swap_2
__sync_val_compare_and_swap_4
__sync_val_compare_and_swap_8
__sync_val_compare_and_swap_16
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_fetch_and_add_1
__sync_fetch_and_add_2
__sync_fetch_and_add_4
__sync_fetch_and_add_8
__sync_fetch_and_add_16
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_sub_16
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_and_16
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_or_16
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__sync_fetch_and_xor_16
__sync_fetch_and_nand_1
__sync_fetch_and_nand_2
__sync_fetch_and_nand_4
__sync_fetch_and_nand_8
__sync_fetch_and_nand_16
__sync_fetch_and_max_1
__sync_fetch_and_max_2
__sync_fetch_and_max_4
__sync_fetch_and_max_8
__sync_fetch_and_max_16
__sync_fetch_and_umax_1
__sync_fetch_and_umax_2
__sync_fetch_and_umax_4
__sync_fetch_and_umax_8
__sync_fetch_and_umax_16
__sync_fetch_and_min_1
__sync_fetch_and_min_2
__sync_fetch_and_min_4
__sync_fetch_and_min_8
__sync_fetch_and_min_16
__sync_fetch_and_umin_1
__sync_fetch_and_umin_2
__sync_fetch_and_umin_4
__sync_fetch_and_umin_8
__sync_fetch_and_umin_16
__atomic_load
__atomic_load_1
__atomic_load_2
__atomic_load_4
__atomic_load_8
__atomic_load_16
__atomic_store
__atomic_store_1
__atomic_store_2
__atomic_store_4
__atomic_store_8
__atomic_store_16
__atomic_exchange
__atomic_exchange_1
__atomic_exchange_2
__atomic_exchange_4
__atomic_exchange_8
__atomic_exchange_16
__atomic_compare_exchange
__atomic_compare_exchange_1
__atomic_compare_exchange_2
__atomic_compare_exchange_4
__atomic_compare_exchange_8
__atomic_compare_exchange_16
__atomic_fetch_add_1
__atomic_fetch_add_2
__atomic_fetch_add_4
__atomic_fetch_add_8
__atomic_fetch_add_16
__atomic_fetch_sub_1
__atomic_fetch_sub_2
__atomic_fetch_sub_4
__atomic_fetch_sub_8
__atomic_fetch_sub_16
__atomic_fetch_and_1
__atomic_fetch_and_2
__atomic_fetch_and_4
__atomic_fetch_and_8
__atomic_fetch_and_16
__atomic_fetch_or_1
__atomic_fetch_or_2
__atomic_fetch_or_4
__atomic_fetch_or_8
__atomic_fetch_or_16
__atomic_fetch_xor_1
__atomic_fetch_xor_2
__atomic_fetch_xor_4
__atomic_fetch_xor_8
__atomic_fetch_xor_16
__atomic_fetch_nand_1
__atomic_fetch_nand_2
__atomic_fetch_nand_4
__atomic_fetch_nand_8
__atomic_fetch_nand_16
__extendhfsf2
__truncsfhf2
__bzero
__sincosf_stret
__sincos_stret
sincosf
sincos
sincosl
__safestack_unsafe_stack_ptr
 must have void* type
 must 
be thread-local
__guard_local
Invalid refinement step for -recip.
reciprocal-estimates
Funclet EH is not implemented for this target
We do not support this DWARF encoding yet!
bss-section
rodata-section
data-section
implicit-section-name
__constructor
__destructor
__mod_init_func
__mod_term_func
Invalid section specifier '
L_OBJC_IMAGE_INFO
Global variable '
' has an invalid section specifier '
' section type or attributes does not match previous section specifier
$non_lazy_ptr
.init_array.
Objective-C GC Only
Objective-C Is Simulated
Objective-C Image Swift Version
.bss.
.tdata.
.tbss.
' cannot be lowered.
.note
.rodata.cst
MachO doesn't support COMDATs, '
no-frame-pointer-elim-non-leaf
enable-ipra
Enable interprocedural register allocation to reduce load/store at procedure calls.
disable-post-ra
Disable Post Regalloc Scheduler
disable-branch-fold
Disable branch folding
disable-tail-duplicate
Disable tail duplication
disable-early-taildup
Disable pre-register allocation tail duplication
disable-block-placement
Disable probability-driven block placement
enable-block-placement-stats
Collect probability-driven block placement stats
disable-ssc
Disable Stack Slot Coloring
disable-machine-dce
Disable Machine Dead Code Elimination
disable-early-ifcvt
Disable Early If-conversion
disable-machine-licm
Disable Machine LICM
disable-machine-cse
Disable Machine Common Subexpression Elimination
optimize-regalloc
Enable optimized register allocation compilation path.
disable-postra-machine-licm
disable-machine-sink
Disable Machine Sinking
disable-postra-machine-sink
Disable PostRA Machine Sinking
disable-lsr
Disable Loop Strength Reduction Pass
disable-constant-hoisting
Disable ConstantHoisting
disable-cgp
Disable Codegen Prepare
disable-copyprop
Disable Copy Propagation pass
disable-partial-libcall-inlining
Disable Partial Libcall Inlining
enable-implicit-null-checks
Fold null checks into faulting memory operations
disable-mergeicmps
Disable MergeICmps Pass
print-lsr-output
Print LLVM IR produced by the loop-reduce pass
print-isel-input
Print LLVM IR input to isel pass
print-gc
Dump garbage collector data
verify-machineinstrs
Verify generated machine code
debugify-and-strip-all-safe
Debugify MIR before and Strip debug after each pass except those known to be unsafe when debug info is present
enable-machine-outliner
Enable the machine outliner
Run on all functions guaranteed to be beneficial
Disable all outlining
fast-isel
Enable the "fast" instruction selector
global-isel
Enable the "global" instruction selector
print-machineinstrs
Print machine instrs
pass-name
option-unspecified
global-isel-abort
Enable abort calls when "global" instruction selection fails to lower/select an instruction
Disable the abort
Enable the abort
Disable the abort but emit a diagnostic on failure
misched-postra
Run MachineScheduler post regalloc (independent of preRA sched)
early-live-intervals
Run live interval analysis earlier in the pipeline
use-cfl-aa-in-codegen
Enable the new, experimental CFL alias analysis in CodeGen
Disable CFL-AA
steens
Enable unification-based CFL-AA
anders
Enable inclusion-based CFL-AA
both
Enable both variants of CFL-AA
start-after
start-before
stop-after
stop-before
Resume compilation after a specific pass
Resume compilation before a specific pass
Stop compilation after a specific pass
Stop compilation before a specific pass
 and 
 specified!
Trying to construct TargetPassConfig without a target machine. Scheduling a CodeGen pass without a target triple set?
After 
Cannot stop compilation after pass that is not run
*** Code after LSR ***
*** Final LLVM Code input to ISel ***
regalloc
Register allocator to use
machineinstr-printer
After Instruction Selection
Must use fast (default) register allocator for unoptimized regalloc.
pick register allocator based on -O option
After pre Register Coalescer passes
After pre Machine Scheduler passes
After post Machine Scheduling passes
Target Pass Configuration
targetpassconfig
" pass is not registered.
huge-size-for-split
A threshold of live range size which may cause high compile time cost in global splitting.
stackrealign
$noreg
physreg
:sub(
Unit~
BadUnit~
schedmodel
Use TargetSchedModel for latency lookup
scheditins
Use InstrItineraryData for latency lookup
 sched: [
:%2.2f
twoaddr-reschedule
Coalesce copies by rescheduling (default=true)
dataflow-edge-limit
Maximum number of dataflow edges to traverse when evaluating the benefit of commuting operands
Two-Address instruction pass
twoaddressinstruction
After two-address instruction pass
Remove unreachable blocks from the CFG
unreachableblockelim
Remove unreachable machine basic blocks
unreachable-mbb-elimination
i128
glue
v1i1
v2i1
v4i1
v8i1
v16i1
v32i1
v64i1
v128i1
v512i1
v1024i1
v1i8
v2i8
v4i8
v8i8
v16i8
v32i8
v64i8
v128i8
v256i8
v1i16
v2i16
v4i16
v8i16
v16i16
v32i16
v64i16
v128i16
v1i32
v2i32
v4i32
v8i32
v16i32
v32i32
v64i32
v1i64
v2i64
v4i64
v8i64
v16i64
v32i64
v1i128
v1f32
v2f32
v2f16
v4f16
v8f16
v4f32
v8f32
v16f32
v1f64
v2f64
v4f64
v8f64
Untyped
ExceptRef
********** REGISTER MAP **********
 -> fi#
Virtual Register Map
virtregmap
Virtual Register Rewriter
virtregrewriter
register rewriting failed: cycle in copy bundle
Prepare WebAssembly exceptions
wasmehprepare
WebAssembly Exception handling preparation
__wasm_lpad_context
lpad_index_gep
lsda_gep
selector_gep
_Unwind_CallPersonality
__clang_call_terminate
selector
disable-demotion
Clone multicolor basic blocks but do not demote cross scopes
disable-cleanups
Do not remove implausible terminators or other similar cleanups
demote-catchswitch-only
Demote catchswitch BBs only (for wasm EH)
Prepare Windows exceptions
winehprepare
Windows exception handling preparation
.for.
.wineh.spillslot
.wineh.reload
Cleanup funclets for the SEH personality cannot contain exceptional actions
Cleanup funclets for the MSVC++ personality cannot contain exceptional actions
Insert XRay ops
xray-instrumentation
xray-instruction-threshold
An attempt to perform XRay instrumentation for an unsupported target.
agx-expand-builtins-default-device
Default subtarget for testing purposes with `opt`
AGX Expand Builtins
agx-expand-builtins
agc.texture_heap.read
LayerID not supported.
temporary inlining workarounds
inline-prep-hack
add alwaysinline
addalwaysinline
Performance-critical inlining decisions
agx-must-inline
AddFastMathFlags
add-fast-math-flags
move allocas to local memory
allocas-to-lm
linear_id
_lm_alloca
cl_local_per_thread
_lm_add
_lm_mul
_lm_base
_trunc
atomicoptimize-isg12-default
Set the default value for the IsG12 function
atomicoptimize-datadiverge
Set the default value for optimizing divergent data
Optimize GPU atomics
atomic-optimize
GPU Atomic Optimize pass
AGX_DisableGlobalAtomic
AGX_DisableLocalAtomic
air.uniform_atomics_mode
AGX_AtomicOpt_SupportDivergentData
skip_uniform_atomics
constant_driver
.atomicsplit
.atomic
.after
GPU atomics helper thread workaround
atomic-helper-wa
GPU Atomic Helper Thread Workaround Pass
bisect-helper-shader-maxid-file
Output file where the biggest shader id seen so far is written
bisect-helper-shaderids-filter
shaderid1[,...]
List of shader IDs to run the bisect pass on. When unset will run on all shaders
bisect-helper-run-on-unknown-ids
Decide whether or not the bisecting pass should run on modules without shader ids
bisect-helper-bbs-file
basefilename
Base filename where the list of basic blocks will be written. This creates several files named <basefilename><#ShaderID>. The file format is "FuncName:BBName[;BBName...]"
bisect-helper-ensure-bb-names
Set this option to make sure all basic blocks have a name. For optimized builds, this is not uncommon to have blocks missing names, since a lot of thing that this pass does rely on blocks having names, this option is here to fix the name of these blocks.
bisect-helper-run-extract-block
Base filename for the files that list the basic blocks that need to be extracted. This reads several files named <basefilename><#ShaderID>. The file format is "FuncName:BBName[;BBName...]"
bisect-helper-funcs-file
Base filename where the list of functions will be written. This creates several files named <basefilename><#ShaderID>. The file format is "FuncName"
bisect-helper-set-funcs-attrs
Base filename for the files that list the functions that need to be tagged with 'no-gisel'. This reads several files named <basefilename><#ShaderID>. The file format is "FuncName"
bisect-helper-split-bbs-file
Base filename for the files tha list the basic blocks to be split. This reads several files named <basefilename><#ShaderID>. The file format is "FuncName BBName"
bisect-helper-split-bbs-out-file
Base filename for the files that will contain the list of basic blocks created/considered by splitting ( "-bisect-helper-split-bbs-out-file"). This writes several files named <basefilename><#ShaderID>. The file format is "FuncName BBName"
bisect-helper-split-nb-insts
Split the each bb listed in "-bisect-helper-split-bbs-out-file" after that many instructions
Print information about modules, tag functions and extract basic blocks
bisect-helper
bisect-helper-named
 Function not found: 
no-gisel
Addition of Metal buffer bound checking
bound-checking
Add bound checks to memory operations
mtl.lm_size
oob_check_enable
mtl.buffer_len
mtl.reporting_data
disable-cfg-structure
Disable trying to structure the CFG.
Perform full structurization of the CFG
Structurize CFG for GPU execution
cfg-structurize
Exit
ExitPhi
pnMove
IdxExit
IdxCmp
.duplicated
Conservative local memory fence insertion
conservative-lm-fencing
Conservative Local Memory Fencing
conservativelmfencing
sink insts into loops
delicm
Extend memory references
extend-memory-references
Extend Memory References
Expand dynamic allocas
expand-allocas
Dynamic alloca expander
threshold
single-threshold
simple-switch-threshold
flatten-cutoff
Flatten control flow
gpu-flattencfg
switchcmp
float atomics emulation
float-atomics-emulation
SW emulation of float atomics
.post.atomic.emu
.atomic.emu
max-fma-contraction
Limit the fma-contraction pass
fma-contraction
disable-cfg-nesting
Disable trying to fixup the CFG to nested form.
Fixup CFG to nest basic blocks
cfg-nest
Join
.duppred
.duploop
Perform GPU-specific code gen preparation
gpu-codegen-prepare
GPU-specific code gen preparation
Allocate common store registers
common-store-alloc
Target triple must be set to agx2
Unknown section on a global variable
Global variables in address space 
 are not valid.
Ran out of shared registers after textures
Ran out of shared registers after samplers
Ran out of shared registers after driver constants
Ran out of shared registers after parameters
Ran out of shared registers after invariants
Ran out of shared registers after promoted buffers
Ran out of shared registers after constant literals
Ran out of shared registers after MSAA address
Ran out of shared registers after bindings
MD node agx.dylib_bindings must exist for dylib or kernel calling dylibs.
Expect a global variable with an initializer or an external global variable declaration.
Coefficient registers overflow
common-store-alloc-legacy
Target triple must be set to agx0/agx1
agc.dylib_base
agc.texture_heap.write
agc.texture_heap.texture_buffer_length
disable-alloca-promoter
Disable the alloca promoter step
  Buffer info for 
    Type: 
(nullptr)
    Size: 
(uninitialized)
 (unpromotable uses)
 (all promotable uses)
    Intervals:
      [
accessing [
 bytes)
interval size: 
value:
nullptr (dynamic)
GPU DMA Promotion
promotedConstantAlloca
constant_literals
literalsbuffer
literals_buffer
memorycache
memory_cache
read_prid
write_prid
GPU PIC Lowering
pic-lowering
air.dyld_lib_table
air.dyld_str_table
air.dyld_lib_table and air.dyld_str_table must be present together.
llvm.dyld.libs
GPU specific noalias metadata placement
gpu-noalias-metadata
Samples
Shrink load and store instructions
ls-shrinker
GPU Load and Store Shrinker
force-scalar-opt
Run the scalar optimization for all shaders, effectively ignoring the metadata and environment variable that normally control that optimization
scalar-opt-print-summary
Print the summary of the scalar optimization shaders (print nothing if the optimization doesn't run)
scalar-opt-print-liveness
Print the full liveness information
scalar-opt-print-regpressure
Print the reg pressure information
scalar-opt-print-divergence-analysis
Print the results of the divergence analysis
scalar-opt-harvest-stats
Print statistic about GPR and scalar usages but don't do any transformation
Scalar promotion optimization
scalar-promotion
Scalar promotion
agx.sgpr_emulation
New DivergenceAnalysis
Analyze: 
Empty: nothing to analyze
Collect liveness information
Perform dataflow analysis
Start iteration 
Changed livein 
 old: 
 new: 
Changed liveout 
End iteration 
_liveout
Exceed peak at: 
Exceed peak with scalar at: 
_rev
===== 
 - RegPressure for 
 =====
-peak: 
 + scalar(
-max: 
 | scalar(
) | uniform(
-livein: 
) + uniform(
-liveout: 
) + uniform (
-livethru: 
 + uniform(
-AccPressure: 
 - '
' ID: 
 - Peak pressure: 
) | 
) | AccGPR16Pressure(
) | AccScalarPressure(
) | AccUniformPressure(
) | AccInstrsFreq(
) | AccScalarInstrsFreq(
) | AvgRegFootPrintWScalar(
) | AvgRegFootPrint(
===== Liveness for 
Divergence analysis results for: 
scalar_slot
base_x_lanes
base_i8_ptr
_reload
_tail
_execOnce
pvSIMD
is_first_active_lane
Merge loops
loopmerge
GPU Loop Merge
lm.joinbb
oop No-op Analysis Pass
loop-noop-analysis
Loop No-op Analysis Pass
lower-driver-params-set-range
Optimization to set range metadata whenever possible
Lower driver parameters
lower-driver-params
driverparambuffer
dparamcache
driver_parameter_cached
memmove-expansion-threshold
Don't expand MemMove if the size is bigger than this number
Lower memory intrinsics
lower-mem-intrinsics
GPU Lower Memory Intrinsics
memcpy.split
copy_forward_loop
copy_backwards
copy_forward
memmove.done
copy_backwards_loop
memset.split
memset_loop
Transform the object shader into multiple slices
multi-path-os-transform
Multi Path Object Shader Transform
twostage.entry
twostage.ret
.gOS
.dOS1
dOS.entry
gOS_pass
dOS_pass
Version 2 of the color loop
Version 2 of the color loop, unrolled
Always unroll the color loop
multirate-unroll-force-no
Make the unroll heuristic always return false
direct-smpmsk
PreHeader
Header
BodyBegin
BodyEnd
PreLatch
Latch
Transform the shader to enable MultiRate mode
multirate-transform
MultiRate Transformation Pass
multirate_transform
agx.color_sample_rate
agx.fragment_rate
agx.sample_mapping
msaa_ph.safe
msaa_h.safe
msaa_prelatch.safe
msaa_latch.safe
msaa_exit.safe
amp.id.load
skip-cond
smp-mask
orig-col-msk
orig-col-msk-16
col-mask
cvg-msk-next
col-mask-16
cvg-mask-next-16
smp-num
smp-num-next
amp.count
amp-count
amp-count-next
amp-mask
amp-mask-count
coverage_mask
msaa_first.blending
msaa_cond.blending
msaa_last.blending
msaa_cond1.blending
msaa_cond2.blending
msaa_cond3.blending
msaa_ph.blending
msaa_h.blending
msaa_body.blending
msaa_prelatch.blending
msaa_latch.blending
msaa_exit.blending
col-mask-shift
msaa_ph.feedback
msaa_h.feedback
msaa_body.feedback
msaa_prelatch.feedback
msaa_latch.feedback
msaa_exit.feedback
msaa_switch.entry
msaa_switch.second
msaa_switch.exit
msaa_switch.4x
msaa_switch.2x
msaa_switch.nomsaa
msaa_inter.exit
msaa.mode
msaa_pb
Optimize GPU fence instructions
optimize-fences
GPU fence optimizer
agx.max_work_group_size
Optimize movmsk
optimize-movmsk
Optimize lowering of switches
gpu-optimize-switches
switch_pdom
switch_prepdom
indirectbr_bb
sw_cond
ptr_cast
ptr_trunc
cprog-loop-delete
Apply loop deletion in constant-programs
cprog-cfg-hoist
Apply CFG hoisting in constant-programs
cprog-gmem-hoist
Apply GMem hoisting in constant-programs
cprog-max-frontier
Force max frontier size in constant-programs in 16-bit units
cprog-can-read-from-uniforms
Can the constant programs read uniforms
cprog-hoist-agx3-uni-lod
Hoist and emit format conversions for uniform LOD in AGX3
Generation of constant programs
constant-programs
AGX_CPROG_CAN_HOIST_GLOAD_OUT_OF_CTRFLOW
agx.support.soft.fault
agx.uniform
AGX_CPROG_IGNORE_PROFIT
unique_exit
.cprog
return.cprog
computed_constants
thread_invariant
.cfg
new_gep
rangedLdToOrigLd
Unsupported instruction in uniform function
gather_buffer
_addr
_typed_addr
_value
Invariant Extraction
extract-invariants
thread_invariants.temp
invariant
atom_loop.header
atom_loop.body
atom_loop.latch
wa_true_bb
wa_false2_bb
por0
por2
replace-buffer-with-const-list-candidates
List and print out all the candidates for replacement
Replace buffer content with constants
replace-buffer-with-const
/bufferMappingForShader
.txt
/buffers
Found shader: 
Found candidate address for buffer 
 sizeInBits(
/buffer-
.buf
scalarize-cutoff
scalarize-maxldst-width
Max architectural width of LD/ST instructions
Scalarize
scalarize
tail call flag removal
tail-call-flag-removal
deferred-attribute-pass
Enable deferred VS attribute shading pass
tpp-smp-ratio
Definitely do if redundant sample ratio is less than
tpp-cost-ratio
Transform if all else is inconclusive and redundant cost ratio is less than
tpp-clique-overhead
Transform if the latency of the shader is at least this amount
Transform the shader to enable two pass punchthrough
two-pass-punchthrough
Two Pass Punchthrough
.visibility-section
tpp.visibility.return
tpp.entry
tpp.return
visibility-pass
attribute-pass
is-visibility
agx.dma-list
.vi_trimmed
TrimVertexDMAList
trim-vi-dma-list
trivial indirect call promotion
trivial-call-promotion
Optimize alloca instructions
optimize-allocas
GPU Optimize Allocas Pass
sampler_state
Gather stored buffers and resources
gather-stored-resources
agc.simd_permute_emulation_scratchpad
fixup_fb_static_constants
fixup_agx1_ba_7_1
fixup_agx1_ba_8
fixup_agx1_ba_15_9
fixup_agx1_ba_23_16
fixup_agx1_ba_24
fixup_agx1_ba_31_25
fixup_agx1_br_7_1
fixup_agx1_br_8
fixup_agx1_br_15_9
fixup_agx1_br_23_16
fixup_agx1_br_24
fixup_agx1_br_31_25
Unknown relocation!
unexpected instruction to relax: 
unsupported relocation on symbol
Not supported instr: 
Temp register used when temp registers were disallowed!
Too many cached reads specified!
async-waw
Use WAW protection on inorder async ops
dis2x2
Enable Dis2x2 bit
disallow-temp-regs
Disallow temp register usage
dualphantom
Enable a dual phantom configuration.
dvsa
Enable deferred vertex shader attribute computation
experimental
Enable experimental compilation
Enable G4 instructions
Enable G5 instructions
Enable G9 instructions
gpucfg
Use GPUCFGLowering pass
lastuse
Enable last-use hints
loadstorepersist1
Set Load/Store Persist to 1
loadstorepersist2
Set Load/Store Persist to 2
loadstorepersist3
Set Load/Store Persist to 3
multiphantom
Enable multi-Phantom atomics
no-forwarding-edges
Assume no forwarding edges
no-smpproj
Disable SMP projective mode.
noswap
Disable Swap generation
rdar14624178
Requires rdar 14624178 WA
rdar14691945
Requires rdar 14691945 WA
rdar16355991
Requires rdar 16355991 WA
rdar16406497
Requires rdar 16406497 WA
rdar16687190
Requires rdar 16687190 WA
rdar18754994
Requires rdar 18754994 WA
rdar18765481
Requires rdar 18765481 WA
rdar18846813
Requires rdar 18846813 WA
rdar19787938
Requires rdar 19787938 WA
rdar19851354
Requires rdar 19851354 WA
rdar24151408
Requires rdar 24151408 WA
samplepersist1
Set Sample Persist to 1
samplepersist2
Set Sample Persist to 2
samplepersist3
Set Sample Persist to 3
smpfwd
Enable ITR->SMP forwarding bits.
subreg-liveness
Enable subregister liveness tracking
Enable Transient Operand Cache (TOC) hints
Select the g4 processor
g4g-a1
Select the g4g-a1 processor
g4p-b1
Select the g4p-b1 processor
Select the g5 processor
g5g-a1
Select the g5g-a1 processor
g5p-b0
Select the g5p-b0 processor
Select the g9 processor
g9g-a0
Select the g9g-a0 processor
g9g-a1
Select the g9g-a1 processor
g9p-a0
Select the g9p-a0 processor
g9p-b0
Select the g9p-b0 processor
InvalidUnit
G4UnitALU
G4UnitCTRL
G4UnitITR
G4UnitSMP
InvalidSchedClass
WriteLMEM
WriteALU
WriteCTRL
WriteALU_ReadDFD
WriteGMEM
WriteITR1
WriteITR10
WriteITRP10
WriteITR11
WriteITRP11
WriteITR12
WriteITRP12
WriteITR13
WriteITRP13
WriteITR14
WriteITRP14
WriteITR15
WriteITRP15
WriteITR16
WriteITRP16
WriteITRP1
WriteITR2
WriteITRP2
WriteITR3
WriteITRP3
WriteITR4
WriteITRP4
WriteITR5
WriteITRP5
WriteITR6
WriteITRP6
WriteITR7
WriteITRP7
WriteITR8
WriteITRP8
WriteITR9
WriteITRP9
WriteSMP
WriteUVSW
COPY
WriteNothing
G5UnitALU
G5UnitCTRL
G5UnitITR
G5UnitSMP
AGX1
AGX pre-RA Analysis pass
AGX Pre RA Analysis
agx-pre-ra-analysis
print-gpucfglower-cfgunloopifier
Print a DAG showing the CFG unloopified representation
print-gpucfglower-controlgraph
Print a DAG showing the control graph
print-gpucfglower-flowanalyzer
Print a DAG showing the flow analysis
CFG Lowering
gpu-cfg-lower
GPU Control Flow Lowering
CFGUnloopifier
ControlGraph
FlowAnalyzer
style=bold
style=filled,color="#00ff0080"
(null-bb)
style=dotted,minlen=5
color=lightgrey,
dir=back
 (NodePtr=
EntryNestingLevel=
ExitNestingLevel=
UnstructuredID=
PrologExtraCndEnds=
LoopEndPrologs=
UnstructuredCndEnd
SkipUnstructuredSuccessorEmit
InvertPredicate
LoopBegin
IfBegin
IfElseBegin
ElseBegin
UnstructuredProlog
LoopEndEpilog
LoopBackedge
LoopBreak
OptimizedUnstructuredLoopExit
OptimizedLoopEpilog
style="grey,dotted"
GPU Conditional Flattener
gpu-cond-flatten
GPU conditional flattener
GPU Iterate Combiner
gpu-itr-combine
GPU Specific Iterate Combine
print-perf-diags-for-loops-only
Print performance statistic diagnostics ignoring all instructions outside of loops
agx.asm_statistics
agx.compiler_counters
agx.telemetry_statistics
LLVM_AGX_STUFF_LM_SPILL_SIZE_TO_COEFF
__GPU_METADATA
agx.common_store_dma
__GPU_VIDMALIST
__GPU_STATS
__counters
__telemetry
__GPU_METADATA_2
Literal constant used when compiling for shared library
__vertex
__fragment
__compute
__helpers
cl_local_internal
disable-gpu-sample-sink
Disable the GPUSampleSink pass
disable-gpu-sample-sink-unspill-budgeting
Disable the GPUSampleSink unspillable register budgeting
GPU Sample Sink
gpu-sample-sink
GPU sample sinking pass
GPU Wait Placement
gpu-wait-placement
GPU wait placement pass
print-detailed-perf-diags
Print detailed performance statistic diagnostics
"Instrs":
NumThirdRateInstructions
NumFifthRateInstructions
NumTwelfthRateInstructions
NumSixteenthRateInstructions
RegsAllocated
GPRUnusableOccupancy
SampleInstrs
GlobalLdInstrs
GlobalStInstrs
StackLdInstrs
StackStInstrs
BrInstrs
VertexInRegs
RegsUsed
NonG15Instructions
StackSz
WaitAndStallTime
IntegralRegPressure
IntegralIRSTKPressure
IntegralGPRPressure
NumDeactivations
NumTagChecks
TotalIssueTime
TotalShaderLatency
TotalTimeInChannel
TotalCycleCount
UL1ReadsWrites
GPRsLiveOut
IRsLiveOut
STKsLiveOut
, "DataInstrs":
, "ControlInstrs":
, "MoveInstrs":
, "ImmInstrs":
, "ALUInstrs":
, "Int16Instrs":
, "Int32Instrs":
, "FP16Instrs":
, "FP32Instrs":
, "LocalLdInstrs":
, "LocalStInstrs":
, "ComplexInstrs":
, "AtomicInstrs":
, "UniformMoveInstrs":
, "UniformLdInstrs":
, "UniformMoveSz":
, "UniformLdSz":
, "LatencyHidingInstrs":
, "TotalStallCycles":
, "ImmStallCycles":
, "F16StallCycles":
, "F32StallCycles":
, "ComplexStallCycles":
, "MathCycles":
, "MathClauses":
, "ShortClauseInefficiency":
, "AfterPixwaitInstrs":
, "UnpairedMoveInstrs":
, "RegWrbacks":
, "MoveInstrWrbacks":
, "RegsFwded":
, "WDFInstrs":
, "IterateInstrs":
, "ForwardedIterates":
, "LoadCoefInstrs":
, "CoeffRegs":
, "UniformRegs":
, "TextureRegs":
, "SamplerRegs":
, "CProgInstrs":
, "ImgStateBdgSz":
, "SmpStateBdgSz":
, "ThreadInvStackSz":
, "ControlDataSwitches":
, "NumLoops":
Inliner for always_inline functions
always-inline
argpromotion
Promote 'by reference' arguments to scalars
A No-Op Barrier Pass
barrier
extract-blocks-file
A file containing list of basic blocks to extract
extract-blocks-erase-funcs
Erase the existing functions
Extract basic blocks from module
extract-blocks
BlockExtractor couldn't load the file.
Missing bbs name
Invalid function name specified in the input file
Invalid block name specified in the input file
Invalid basic block
cvp-max-functions-per-value
The maximum number of functions to track per lattice value
undefined
overdefined
untracked
unknown lattice value
unknown lattice key
Undefined  
Overdefined
Untracked  
FunctionSet
<reg> 
<mem> 
<ret> 
Called Value Propagation
called-value-propagation
constmerge
Merge Duplicate Global Constants
Cross-DSO CFI
cross-dso-cfi
cfi.functions
__cfi_check
+thumb-mode
CallSiteTypeId
Addr
CFICheckFailData
entry
exit
fail
__cfi_check_fail
test
newret
oldret
Dead Argument Elimination
deadargelim
Dead Argument Hacking (BUGPOINT USE ONLY; DO NOT USE)
deadarghaX0r
elim-avail-extern
Eliminate Available Externally Globals
force-attribute
Add an attribute to a function. This should be a pair of 'function-name:attribute-name', for example -force-attribute=foo:noinline. This option can be specified multiple times.
Force set function attributes
forceattrs
enable-nonnull-arg-prop
Try to propagate nonnull argument attributes from callsites to caller functions.
disable-nounwind-inference
Stop inferring nounwind attribute during function-attrs pass
functionattrs
Deduce function attributes
Deduce function attributes in RPO
rpo-functionattrs
import-instr-limit
Only import functions with less than N instructions
import-cutoff
Only import first N functions if N>=0 (default -1)
import-instr-evolution-factor
As we import functions, multiply the `import-instr-limit` threshold by this factor before processing newly imported functions
import-hot-evolution-factor
As we import functions called from hot callsite, multiply the `import-instr-limit` threshold by this factor before processing newly imported functions
import-hot-multiplier
Multiply the `import-instr-limit` threshold for hot callsites
import-critical-multiplier
Multiply the `import-instr-limit` threshold for critical callsites
import-cold-multiplier
Multiply the `import-instr-limit` threshold for cold callsites
print-imports
Print imported functions
compute-dead
Compute dead symbols
enable-import-metadata
Enable import metadata like 'thinlto_src_module'
summary-file
The summary file to use for function importing.
import-all-index
Import all external functions in index.
thinlto_src_module
: Import 
Function Import: link error
function-import
error: -function-import requires -summary-file
Error loading file '
Error renaming module
Error importing module: 
Abort
Summary Based Function Import
Function Importing
.llvm.
Dead Global Elimination
globaldce
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InnerAnalysisManagerProxy<llvm::FunctionAnalysisManager, llvm::Module>]
DesiredTypeName = 
enable-coldcc-stress-test
Enable stress test of coldcc by adding calling conv to all internal functions.
coldcc-rel-freq
Maximum block frequency, expressed as a percentage of caller's entry frequency, for a call site to be considered cold for enablingcoldcc
globalopt
newgv
.init
.val
notinit
isneg
isnull
malloc_cont
malloc_ret_null
free_it
next
llvm.metadata
Global Variable Optimizer
Global splitter
globalsplit
hot-cold-static-analysis
min-outlining-thresh
Code size threshold for outlining within a single BB (as a multiple of TCC_Basic)
hotcoldsplit
cold.
HotColdSplit
Original
 split cold code into 
Split
Hot Cold Splitting
Interprocedural constant propagation
ipconstprop
main
Infer set function attributes
inferattrs
Function Integration/Inlining
disable-inlined-alloca-merging
inliner-function-import-stats
basic
basic statistics
verbose
printing of statistics for each inlined function
Enable inliner stats for imported functions
NoDefinition
 will not be inlined into 
Caller
 because its definition is unavailable
NotInlined
AlwaysInline
Inlined
 inlined into 
 with cost=always
 with cost=
Cost
 (threshold=
Threshold
 not inlined into 
 because it should never be inlined (cost=never)
TooCostly
 because too costly to inline (cost=
, threshold=
IncreaseCostInOtherContexts
Not inlining. Cost of inlining 
 increases the cost of inlining 
 in other contexts
internalize-public-api-file
A file containing list of symbol names to preserve
internalize-public-api-list
list
A list of symbol names to preserve
llvm.global.annotations
__stack_chk_fail
__stack_chk_guard
internalize
WARNING: Internalize couldn't load file '
'! Continuing as if it's empty.
Internalize Global Symbols
Extract loops into new functions
loop-extract
Extract at most one loop into a new function
loop-extract-single
lowertypetests-avoid-reuse
Try to avoid reuse of byte array addresses using aliases
lowertypetests-summary-action
What to do with the summary when running this pass
Do nothing
Import typeid resolutions from summary and globals
export
Export typeid resolutions to summary and globals
lowertypetests-read-summary
Read summary from given YAML file before running pass
lowertypetests-write-summary
Write summary to given YAML file after running pass
offset 
Lower type metadata
lowertypetests
-lowertypetests-read-summary: 
-lowertypetests-write-summary: 
GlobalValueMap
TypeIdMap
WithGlobalValueDeadStripping
CfiFunctionDefs
CfiFunctionDecls
Linkage
NotEligibleToImport
Live
Local
Refs
TypeTests
TypeTestAssumeVCalls
TypeCheckedLoadVCalls
TypeTestAssumeConstVCalls
TypeCheckedLoadConstVCalls
GUID
Offset
VFunc
key not an integer
TTRes
WPDRes
Kind
SizeM1BitWidth
AlignLog2
SizeM1
BitMask
InlineBits
Unsat
ByteArray
Inline
Single
AllOnes
SingleImplName
ResByArg
Indir
SingleImpl
BranchFunnel
Byte
UniformRetVal
UniqueRetVal
VirtualConstProp
unexpected call to llvm.icall.branch.funnel during import phase
Second argument of llvm.type.test must be metadata
llvm.icall.branch.funnel not supported on this target
number of arguments should be odd
Expected branch funnel operand to be global value
aliases
symvers
.symver 
Second argument of llvm.type.test must be a metadata string
global_addr
size_m1
byte_array
bit_mask
inline_bits
__typeid_
bits_use
.cfi
.cfi_jt
__cfi_global_var_init
__TEXT,__StaticInit,regular,pure_instructions
.text.startup
All operands of type metadata must have 2 elements
Bit set element may not be thread-local
A member of a type identifier may not have an explicit section
Type offset must be a constant
Type offset must be an integer constant
Type identifier may not contain both global variables and functions
Unsupported architecture for jump tables
.cfi.jumptable
-thumb-mode
jmp ${
:c}@plt
int3
int3
int3
b.w $
wasm.index
bits
mergefunc-sanity
How many functions in module could be used for MergeFunctions pass sanity check. '0' disables this check. Works only with '-debug' key.
mergefunc-preserve-debug-info
Preserve debug info in thunk when mergefunc transformations are made.
Merge Functions
mergefunc
disable-partial-inlining
Disable partial inlining
disable-mr-partial-inlining
Disable multi-region partial inlining
pi-force-live-exit-outline
Force outline regions with live exits
pi-mark-coldcc
Mark outline function calls with ColdCC
skip-partial-inlining-cost-analysis
Skip Cost Analysis
min-region-size-ratio
Minimum ratio comparing relative sizes of each outline candidate and original function
min-block-execution
Minimum block executions to consider its BranchProbabilityInfo valid
cold-branch-ratio
Minimum BranchProbability to consider a region cold.
max-num-inline-blocks
Max number of blocks to be partially inlined
max-partial-inlining
Max number of partial inlining. The default is unlimited
outline-region-freq-percent
Relative frequency of outline region to the entry block
partial-inlining-extra-penalty
A debug option to add additional penalty to the computed one.
Partial Inliner
partial-inliner
partial-inlining
MultiExitRegion
Region dominated by 
Block
 has more than one region exit edge.
 inline cost-savings smaller than 
ExtractFailed
Failed to extract region at block 
PartiallyInlined
 partially inlined into 
OutlineRegionTooSmall
 not partially inlined into callers (Original Size = 
OutlinedRegionOriginalSize
, Size of call sequence to outlined function = 
NewSize
 should always be fully inlined, not partially
 not partially inlined into 
OutliningCallcostTooHigh
 runtime overhead (overhead=
Overhead
, savings=
Savings
 of making the outlined call is too high
CanBePartiallyInlined
 can be partially inlined into 
Partially inlined into at least one caller
Remove unused exception handling info
prune-eh
sample-profile-file
Profile file loaded by -sample-profile
sample-profile-max-propagate-iterations
Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.
sample-profile-check-record-coverage
Emit a warning if less than N% of records in the input profile are matched to the IR.
sample-profile-check-sample-coverage
Emit a warning if less than N% of samples in the input profile are matched to the IR.
no-warn-sample-unused
Use this option to turn off/on warnings about function with samples but without debug information to use those samples. 
Sample Profile loader
sample-profile
Sample profile pass
Could not open profile: 
 available profile records (
%) were applied
 available profile samples (
No debug information found in function 
: Function profile not used
Callee function not available
Not inline
incompatible inlining
HotInline
inlined hot callee '
' into '
AppliedSamples
Applied 
NumSamples
 samples from profile (offset: 
LineOffset
Discriminator
PopularDest
most popular destination for conditional branches at 
CondBranchesLoc
Interprocedural Sparse Conditional Constant Propagation
ipsccp
strip-dead-prototypes
Strip Unused Function Prototypes
Strip all symbols from a module
strip
Strip all symbols, except dbg symbols, from a module
strip-nondebug
Strip all llvm.dbg.declare intrinsics
strip-debug-declare
Strip debug info for unused symbols
strip-dead-debug-info
wholeprogramdevirt-summary-action
wholeprogramdevirt-read-summary
wholeprogramdevirt-write-summary
wholeprogramdevirt-branch-funnel-threshold
Maximum number of call targets per call site to enable branch funnels
Whole program devirtualization
wholeprogramdevirt
-wholeprogramdevirt-read-summary: 
-wholeprogramdevirt-write-summary: 
Devirtualized
devirtualized 
FunctionName
unique_member
branch_funnel
single-impl
Optimization
: devirtualized a call to 
uniform-ret-val
unique-ret-val
virtual-const-prop-1-bit
virtual-const-prop
+retpoline
branch-funnel
$merged
disable-icp
Disable indirect call promotion
icp-cutoff
Max number of promotions for this compilation
icp-csskip
Skip Callsite up to this number for this compilation
icp-lto
Run indirect-call promotion in LTO mode
icp-samplepgo
Run indirect-call promotion in SamplePGO mode
icp-call-only
Run indirect-call promotion for call instructions only
icp-invoke-only
Run indirect-call promotion for invoke instruction only
icp-dumpafter
Dump IR after transformation happens
pgo-icall-prom
Count
Promoted
Promote indirect call to 
DirectCallee
 with count 
Vectorize load and store instructions
load-store-vectorizer
GPU Load and Store Vectorizer
enable-if-conversion
Enable if-conversion during vectorization.
pragma-vectorize-memory-check-threshold
The maximum allowed number of runtime memory checks with a vectorize(enable) pragma.
vectorize-scev-check-threshold
The maximum number of SCEV checks allowed.
pragma-vectorize-scev-check-threshold
The maximum number of SCEV checks allowed with a vectorize(enable) pragma
vectorize.width
interleave.count
vectorize.enable
isvectorized
loop control flow is not understood by vectorizer
NeitherInductionNorReduction
value could not be identified as an induction or reduction variable
control flow not understood by vectorizer
NonReductionValueUsedOutsideLoop
value that could not be identified as reduction is used outside the loop
CantVectorizeCall
call instruction cannot be vectorized
CantVectorizeIntrinsic
intrinsic instruction cannot be vectorized
CantVectorizeInstructionReturnType
instruction return type cannot be vectorized
CantVectorizeStore
store instruction cannot be vectorized
ValueUsedOutsideLoop
value cannot be used outside the loop
NoInductionVariable
loop induction variable could not be identified
CantVectorizeStoreToLoopInvariantAddress
write to a loop invariant address could not be vectorized
IfConversionDisabled
if-conversion is disabled
LoopContainsSwitch
loop contains a switch statement
NoCFGForSelect
control flow cannot be substituted for a select
TooManySCEVRunTimeChecks
Too many SCEV assumptions need to be made and checked 
at runtime
llvm.loop.
AllDisabled
loop not vectorized: vectorization and interleaving are explicitly disabled, or the loop has already been vectorized
MissedExplicitlyDisabled
loop not vectorized: vectorization is explicitly disabled
MissedDetails
loop not vectorized
 (Force=
, Vector Width=
VectorWidth
, Interleave Count=
CantReorderFPOps
loop not vectorized: cannot prove it is safe to reorder floating-point operations
CantReorderMemOps
loop not vectorized: cannot prove it is safe to reorder memory operations
vectorizer-min-trip-count
Loops with a constant trip count that is smaller than this value are vectorized only if no scalar iteration overheads are incurred.
vectorizer-maximize-bandwidth
Maximize bandwidth when selecting vectorization factor which will be determined by the smallest type in loop.
enable-interleaved-mem-accesses
Enable vectorization on interleaved memory accesses in a loop
max-interleave-group-factor
Maximum factor for an interleaved access group (default = 8)
force-target-num-scalar-regs
A flag that overrides the target's number of scalar registers.
force-target-num-vector-regs
A flag that overrides the target's number of vector registers.
force-target-max-scalar-interleave
A flag that overrides the target's max interleave factor for scalar loops.
force-target-max-vector-interleave
A flag that overrides the target's max interleave factor for vectorized loops.
force-target-instruction-cost
A flag that overrides the target's expected cost for an instruction to a single constant value. Mostly useful for getting consistent testing.
small-loop-cost
The cost of a loop that is considered 'small' by the interleaver.
loop-vectorize-with-block-frequency
Enable the use of the block frequency analysis to access PGO heuristics minimizing code growth in cold regions and being more aggressive in hot regions.
enable-loadstore-runtime-interleave
Enable runtime interleaving until load/store ports are saturated
vectorize-num-stores-pred
Max number of stores to be predicated behind an if.
enable-ind-var-reg-heur
Count the induction variable only once when interleaving
enable-cond-stores-vec
Enable if predication of stores during vectorization.
max-nested-scalar-reduction-interleave
The maximum interleave count to use when interleaving a scalar reduction in a nested loop.
enable-vplan-native-path
Enable VPlan-native vectorization path with support for outer loop vectorization.
vplan-build-stress-test
Build VPlan for every supported loop nest in the function and bail out right after the build (stress test the VPlan H-CFG construction in the VPlan-native vectorization path).
broadcast
vec.ind
step.add
vec.ind.next
offset.idx
reverse
wide.vec
strided.vec
interleaved.vec
wide.masked.gather
wide.masked.load
wide.load
.cloned
index
index.next
exitcount.ptrcnt.to.int
n.mod.vf
n.vec
min.iters.check
vector.ph
scev.check
vector.scevcheck
vector.memcheck
vector.body
middle.block
scalar.ph
bc.resume.val
cast.crd
ind.end
cmp.n
cast.cmo
ind.escape
vector.recur.init
vector.recur
vector.recur.extract
vector.recur.extract.for.phi
scalar.recur.init
scalar.recur
minmax.ident
bc.merge.rdx
vec.phi
next.gep
CantVersionLoopWithDivergentTarget
runtime pointer checks needed. Not enabled for divergent target
CantVersionLoopWithOptForSize
runtime pointer checks needed. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os/-Oz
UnknownLoopCountComplexCFG
unable to calculate the loop count due to complex control flow
NoTailLoopWithOptForSize
cannot optimize for size and vectorize at the same time. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os/-Oz
ConditionalStore
store that is conditionally executed prevents vectorization
pred.
.entry
.continue
Pre-Entry
Initial VPlan for VF={
},UF>=1
"INTERLEAVE-GROUP with factor 
predphi
NoImplicitFloat
loop not vectorized due to NoImplicitFloat attribute
UnsafeFP
loop not vectorized due to unsafe FP support.
VectorizationNotBeneficial
the cost-model indicates that vectorization is not beneficial
InterleavingNotBeneficial
the cost-model indicates that interleaving is not beneficial
InterleavingNotBeneficialAndDisabled
 and is explicitly disabled or interleave count is set to 1
InterleavingBeneficialButDisabled
the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1
loop-vectorize
FailedRequestedVectorization
loop not vectorized: 
failed explicitly specified loop vectorization
FailedRequestedInterleaving
loop not interleaved: 
failed explicitly specified loop interleaving
"BRANCH-ON-MASK 
 All-One
Interleaved
interleaved loop (interleaved count: 
InterleaveCount
Vectorized
vectorized loop (vectorization width: 
VectorizationFactor
, interleaved count: 
slp-threshold
Only vectorize if you gain more than this number 
slp-vectorize-hor
Attempt to vectorize horizontal reductions
slp-vectorize-hor-store
Attempt to vectorize horizontal reductions feeding into a store
slp-max-reg-size
Attempt to vectorize for this register size in bits
slp-schedule-budget
Limit the size of the SLP scheduling region per block
slp-min-reg-size
slp-recursion-max-depth
Limit the recursion depth when building a vectorizable tree
slp-min-tree-size
Only vectorize small trees if they are fully vectorizable
view-slp-tree
Display the SLP trees with Graphviz
SLP: Spill Cost = 
SLP: Extract Cost = 
SLP: Total Cost = 
shuffle
reorder_shuffle
slp-vectorizer
StoresVectorized
Stores SLP vectorized with cost 
 and with tree size 
TreeSize
VectorizedList
SLP vectorized with cost 
op.rdx
op.extra
HorSLPNotBeneficial
Vectorizing horizontal reduction is possible
but not beneficial with cost 
 and threshold 
VectorizedHorizontalReduction
Vectorized horizontal reduction with cost 
rdx.shuf.l
rdx.shuf.r
color=red
<splat> 
 <extract>
SmallVF
Cannot SLP vectorize list: vectorization factor 
less than 2 is not supported
UnsupportedType
Cannot SLP vectorize list: type 
 is unsupported by vectorizer
NotBeneficial
List vectorization was possible but not beneficial with cost 
 >= 
Treshold
NotPossible
Cannot SLP vectorize list: vectorization was impossible
 with available vectorization factors
"EMIT 
vector.body.latch
"WIDEN\l"
"WIDEN-INDUCTION
"WIDEN-PHI 
"BLEND 
CLONE 
REPLICATE 
 (S->V)
"PHI-PREDICATED-INSTRUCTION 
"WIDEN 
TopRegion
vplan-verify-hcfg
Verify VPlan H-CFG.
adce-remove-control-flow
adce-remove-loops
adce
Aggressive Dead Code Elimination
alignment-from-assumptions
bdce
Bit-Tracking Dead Code Elimination
callsite-splitting-duplication-threshold
Only allow instructions before a call, if their cost is below DuplicationThreshold
Call-site splitting
callsite-splitting
phi.call
consthoist-with-block-frequency
Enable the use of the block frequency analysis to reduce the chance to execute const materialization more frequently than without hoisting.
const_mat
const
Constant Hoisting
consthoist
Simple constant propagation
constprop
cvp-dont-process-adds
Value Propagation
correlated-propagation
.lhs.trunc
.rhs.trunc
.zext
Dead Instruction Elimination
Dead Code Elimination
enable-dse-partial-overwrite-tracking
Enable partial-overwrite tracking in DSE
enable-dse-partial-store-merging
Enable partial store merging in DSE
Dead Store Elimination
Hoist/decompose integer division and remainder
div-rem-pairs
early-cse
Controls which instructions are removed
Early CSE
Early CSE w/ MemorySSA
early-cse-memssa
Flatten the CFG
flattencfg
float2int-max-integer-bw
Max integer bitwidth to consider in float2int(default=64)
Float to int
float2int
Base: 
 Offset: 
 Length: 
wide.chk
guard-widening
Widen guards
Widen guards (within a single loop, as a loop pass)
loop-guard-widening
enable-pre
enable-load-pre
max-recurse-depth
Max recurse depth (default = 1000)
.pre
.pre-phi
LoadClobbered
load of type 
 not eliminated
 in favor of 
OtherAccess
 because it is clobbered by 
ClobberedBy
LoadElim
 eliminated
InfavorOfValue
LoadPRE
load eliminated by PRE
gvn-max-hoisted
Max number of instructions to hoist (default unlimited = -1)
gvn-hoist-max-bbs
Max number of basic blocks on the path between hoisting locations (default = 4, unlimited = -1)
gvn-hoist-max-depth
Hoist instructions from the beginning of the BB up to the maximum specified depth (default = 100, unlimited = -1)
gvn-hoist-max-chain-length
Maximum length of dependent chains to hoist (default = 10, unlimited = -1)
gvn-hoist
Early GVN Hoisting of Expressions
.gvnsink.split
gvn-sink
Early GVN sinking of Expressions
irce-loop-size-cutoff
irce-print-changed-loops
irce-print-range-checks
irce-max-exit-prob-reciprocal
irce-skip-profitability-checks
irce-allow-unsigned-latch
InductiveRangeCheck:
  Kind: 
  Begin: 
  Step: 
  End: 
  CheckUse: 
 Operand: 
RANGE_CHECK_UNKNOWN
RANGE_CHECK_UPPER
RANGE_CHECK_LOWER
RANGE_CHECK_BOTH
Inductive range check elimination
irce
irce: looking at loop 
irce: loop has 
 inductive range checks: 
indvar.start
irce.loop.clone
exit.preloop.at
exit.mainloop.at
preloop
postloop
mainloop
.exit.selector
.pseudo.exit
.copy
indvar.end
llvm.loop.vectorize.enable
llvm.loop.licm_versioning.disable
llvm.loop.distribute.enable
irce: in function 
constrained 
verify-indvars
Verify the ScalarEvolution result after running indvars
replexitval
Choose the strategy to replace exit value in IndVarSimplify
never
never replace exit value
cheap
only replace exit value when the cost is cheap
always
always replace exit value whenever possible
indvars-post-increment-ranges
Use post increment control-dependent ranges in IndVarSimplify
disable-lftr
Disable Linear Function Test Replace optimization
indvars
.int
indvar.conv
.wide
wide.trip.count
lftr.wideiv
exitcond
lftr.limit
Induction Variable Simplification
Infer address spaces
infer-address-spaces
Remove redundant instructions
instsimplify
jump-threading-threshold
Max block size to duplicate for jump threading
jump-threading-implication-search-threshold
The number of predecessors to search for a stronger condition to use to thread over a weaker condition
print-lvi-after-jump-threading
Print the LazyValueInfo cache after JumpThreading
thread-pre-split
.thr_comm
.thread
select.unfold
Jump Threading
jump-threading
disable-licm-promotion
Disable memory promotion in LICM pass
licm-max-num-uses-traversed
Max num uses visited for identifying load invariance in loop using invariant start (default = 8)
.promoted
Loop Invariant Code Motion
licm
agx.reduce.reg.pressure
InstSunk
sinking 
Inst
.split.loop.exit
.lcssa
Hoisted
hoisting 
LoadWithLoopInvariantAddressCondExecuted
failed to hoist load with loop-invariant address because load is conditionally executed
LoadWithLoopInvariantAddressInvalidated
failed to move load with loop-invariant address because the loop may invalidate its value
PromoteLoopAccessesToScalar
Moving accesses to memory location out of the loop
sink-freq-percent-threshold
Do not sink instructions that require cloning unless they execute less than this percent of the time.
max-uses-for-sinking
Do not sink instructions that have too many uses.
Loop Sink
loop-sink
Delete dead loops
loop-deletion
loop-prefetch-writes
Prefetch write addresses
prefetch-distance
Number of instructions to prefetch ahead
min-prefetch-stride
Min stride to add prefetches
max-prefetch-iters-ahead
Max number of iterations to prefetch ahead
Loop Data Prefetch
loop-data-prefetch
prefaddr
Prefetched
prefetched memory access
loop-distribute-verify
Turn on DominatorTree and LoopInfo verification after Loop Distribution
loop-distribute-non-if-convertible
Whether to distribute into a loop that may not be if-convertible by the loop vectorizer
loop-distribute-scev-check-threshold
The maximum number of SCEV checks allowed for Loop Distribution
loop-distribute-scev-check-threshold-with-pragma
The maximum number of SCEV checks allowed for Loop Distribution for loop marked with #pragma loop distribute(enable)
enable-loop-distribute
Enable the new, experimental LoopDistribution Pass
MultipleExitBlocks
multiple exit blocks
NotLoopSimplifyForm
loop is not in loop-simplify form
MemOpsCanBeVectorized
memory operations are safe for vectorization
NoUnsafeDeps
no unsafe dependences to isolate
CantIsolateUnsafeDeps
cannot isolate unsafe dependencies
TooManySCEVRuntimeChecks
too many SCEV run-time checks needed.
loop-distribute
loop not distributed: 
loop not distributed: failed explicitly specified loop distribution
NotDistributed
loop not distributed: use -Rpass-analysis=loop-distribute for more info
.ldist
Distribute
distributed loop
use-lir-code-size-heurs
Use loop idiom recognition code size heuristics when compilingwith -Os/-Oz
Recognize loop idioms
loop-idiom
.memset_pattern
tcphi
tcdec
loop-instsimplify
Simplify instructions in loops
loop-interchange-threshold
Interchange if you gain more than this number
Interchanges loops for cache reuse
loop-interchange
Dependence
Cannot interchange loops due to dependences.
CallInst
Cannot interchange loops due to call instruction.
ExitingNotLatch
Loops where the latch is not the exiting block cannot be interchange currently.
UnsupportedPHIInner
Only inner loops with induction or reduction PHI nodes can be interchange currently.
MultiInductionInner
Only inner loops with 1 induction variable can be interchanged currently.
UnsupportedPHIOuter
Only outer loops with induction or reduction PHI nodes can be interchanged currently.
ReductionsOuter
Outer loops with reductions cannot be interchangeed currently.
MultiIndutionOuter
Only outer loops with 1 induction variable can be interchanged currently.
UnsupportedStructureInner
Inner loop structure not understood currently.
NoLCSSAPHIOuterInner
Only inner loops with LCSSA PHIs can be interchange currently.
NoIncrementInInner
The inner loop does not increment the induction variable.
UnsupportedInsBetweenInduction
Found unsupported instruction between induction variable increment and branch.
NoIndutionVariable
Did not find the induction variable.
NotTightlyNested
Cannot interchange loops because they are not tightly nested.
UnsupportedExitPHI
Found unsupported PHI node in loop exit.
InterchangeNotProfitable
Interchanging loops is too costly (cost=
) and it does not improve parallelism.
Interchanged
Loop interchanged with enclosing loop.
runtime-check-per-loop-load-elim
Max number of memchecks allowed per eliminated load on average
loop-load-elimination-scev-check-threshold
The maximum number of SCEV checks allowed for Loop Load Elimination
loop-load-elim
storeforward
load_initial
store_forwarded
loop-predication-enable-iv-truncation
loop-predication-enable-count-down-loop
loop-predication-skip-profitability-checks
loop-predication-latch-probability-scale
scale factor for the latch probability. Value should be greater than 1. Lower values are ignored
Loop predication
loop-predication
reroll-num-tolerated-failed-matches
The maximum number of failures to tolerate during fuzzy matching. (default: 400)
Reroll loops
loop-reroll
reroll
rotation-max-header-size
The default maximum header size for automatic loop rotation
Rotate Loops
loop-rotate
Simplify loop CFG
loop-simplifycfg
enable-lsr-phielim
Enable LSR phi elimination
lsr-insns-cost
Add instruction count to a LSR cost model
lsr-exp-narrow
Narrow LSR complex solution using expectation of registers number
lsr-filter-same-scaled-reg
Narrow LSR search space by filtering non-optimal formulae with the same ScaledReg and Scale
[NumUses=
reg(
**error: HasBaseReg**
**error: !HasBaseReg**
*reg(
imm(
 instruction
 reg
, with addrec cost 
, plus 
 IV mul
 base add
 scale cost
 imm cost
 setup cost
UserInst=
store 
, OperandValToReplace=
, PostIncLoop=
, Offset=
LSR Use: Kind=
Basic
Special
ICmpZero
Address of 
pointer
 in addrspace(
, Offsets={
, all-fixups-outside-loop
, widest fixup type: 
in formulae referencing 
 in use 
 , add offset 
LSR has identified the following interesting factors and types: 
LSR is examining the following fixup sites:
LSR is examining the following uses:
IV.S.
IV.S.next.
.termcond
scmp
lsr.chain
Loop Strength Reduction
loop-reduce
unroll-threshold
The cost threshold for loop unrolling
unroll-partial-threshold
The cost threshold for partial loop unrolling
unroll-max-percent-threshold-boost
The maximum 'boost' (represented as a percentage >= 100) applied to the threshold when aggressively unrolling a loop due to the dynamic cost savings. If completely unrolling a loop will reduce the total runtime from X to Y, we boost the loop unroll threshold to DefaultThreshold*std::min(MaxPercentThresholdBoost, X/Y). This limit avoids excessive code bloat.
unroll-max-iteration-count-to-analyze
Don't allow loop unrolling to simulate more than this number ofiterations when checking full unroll profitability
unroll-count
Use this unroll count for all loops including those with unroll_count pragma values, for testing purposes
unroll-max-count
Set the max unroll count for partial and runtime unrolling, fortesting purposes
unroll-full-max-count
Set the max unroll count for full unrolling, for testing purposes
unroll-peel-count
Set the unroll peeling count, for testing purposes
unroll-allow-partial
Allows loops to be partially unrolled until -unroll-threshold loop size is reached.
unroll-allow-remainder
Allow generation of a loop remainder (extra iterations) when unrolling a loop.
unroll-runtime
Unroll loops with run-time trip counts
unroll-max-upperbound
The max of trip count upper bound that is considered in unrolling
pragma-unroll-threshold
Unrolled size limit for loops with an unroll(full) or unroll_count pragma.
flat-loop-tripcount-threshold
If the runtime tripcount for the loop is lower than the threshold, the loop is considered as flat and will be less aggressively unrolled.
unroll-allow-peeling
Allows loops to be peeled when the dynamic trip count is known to be low.
unroll-remainder
Allow the loop remainder to be unrolled.
unroll-revisit-child-loops
Enqueue and re-visit child loops in the loop PM after unrolling. This shouldn't typically be needed as child loops (or their clones) were already visited.
llvm.loop.unroll.count
llvm.loop.unroll.full
llvm.loop.unroll.enable
llvm.loop.unroll.runtime.disable
Unroll loops
loop-unroll
<unnamed loop>
llvm.loop.unroll.disable
UnrollAsDirectedTooLarge
Unable to unroll loop as directed by unroll(enable) pragma because unrolled size is too large.
FullUnrollAsDirectedTooLarge
Unable to fully unroll loop as directed by unroll pragma because unrolled size is too large.
CantFullUnrollAsDirectedRuntimeTripCount
Unable to fully unroll loop as directed by unroll(full) pragma because loop has a runtime trip count.
DifferentUnrollCountFromDirected
Unable to unroll loop the number of times directed by unroll_count pragma because remainder loop is restricted (that could architecture specific or because the loop contains a convergent instruction) and so must have an unroll count that divides the loop trip multiple of 
TripMultiple
.  Unrolling instead 
UnrollCount
 time(s).
allow-unroll-and-jam
Allows loops to be unroll-and-jammed.
unroll-and-jam-count
Use this unroll count for all loops including those with unroll_and_jam_count pragma values, for testing purposes
unroll-and-jam-threshold
Threshold to use for inner loop when doing unroll and jam.
pragma-unroll-and-jam-threshold
Unrolled size limit for loops with an unroll_and_jam(full) or unroll_count pragma.
Unroll and Jam loops
loop-unroll-and-jam
llvm.loop.unroll_and_jam.
llvm.loop.unroll_and_jam.disable
llvm.loop.unroll_and_jam.count
llvm.loop.unroll_and_jam.enable
loop-unswitch-threshold
Max loop size to unswitch
Unswitch loops
loop-unswitch
us-unreachable
.us-lcssa
licm-versioning-invariant-threshold
LoopVersioningLICM's minimum allowed percentageof possible invariant instructions per loop
licm-versioning-max-depth-threshold
LoopVersioningLICM's threshold for maximum allowed loop nest/depth
Loop Versioning For LICM
loop-versioning-licm
Loop Versioning for LICM
IllegalLoopStruct
 Unsafe Loop structure
IllegalLoopInst
 Unsafe Loop Instruction
RuntimeCheck
Number of runtime checks 
RuntimeChecks
 exceeds threshold 
InvariantThreshold
Invariant load & store 
LoadAndStoreCounter
 are less then defined threshold 
IllegalLoopMemoryAccess
 Unsafe Loop memory access
IsLegalForVersioning
 Versioned loop for LICM.
 Number of runtime checks we had to insert 
LVDomain
LVAliasScope
Lower atomic intrinsics to non-atomic form
loweratomic
likely-branch-weight
Weight of the branch likely to be taken (default = 2000)
unlikely-branch-weight
Weight of the branch unlikely to be taken (default = 1)
Lower 'expect' Intrinsics
lower-expect
guards-predicate-pass-branch-weight
The probability of a guard failing is assumed to be the reciprocal of this value (default = 1 << 20)
Lower the guard intrinsic to normal control flow
lower-guard-intrinsic
guarded
deoptcall
spill
splat
block
scalar
Lower operations on the matrix type
lower-matrix-type
MemCpy Optimization
memcpyopt
Merge contiguous icmps into a memcmp
mergeicmps
MergedLoadStoreMotion
mldst-motion
Nary reassociation
nary-reassociate
newgvn-vn
Controls which instructions are value numbered
newgvn-phi
Controls which instructions we create phi of ops for
enable-store-refinement
enable-phi-of-ops
Global Value Numbering
newgvn
ExpressionTypeConstant, 
 constant = 
ExpressionTypeVariable, 
 variable = 
phiofops
ExpressionTypeUnknown, 
 inst = 
etype = 
opcode = 
ExpressionTypeBasic, 
operands = {
] = 
ExpressionTypeCall, 
 represents call at 
ExpressionTypeLoad, 
 represents Load at 
 with MemoryLeader 
ExpressionTypeStore, 
 represents Store  
 with StoredValue 
 and MemoryLeader 
ExpressionTypeAggregateValue, 
, intoperands = {
ExpressionTypePhi, 
bb = 
call.sqrt
Partially inline calls to library functions
partially-inline-libcalls
spp-all-backedges
spp-counted-loop-trip-width
spp-split-backedge
spp-no-entry
spp-no-call
spp-no-backedge
gc.safepoint_poll
Place Backedge Safepoints
place-backedge-safepoints-impl
Place Safepoints
place-safepoints
factor
reass.mul
reassociate
and.ra
reass.add
.neg
Reassociate expressions
Demote all values to stack slots
reg2mem
reg2mem alloca point
spp-print-liveset
spp-print-liveset-size
spp-print-base-pointers
spp-rematerialization-threshold
rs4gc-clobber-non-live
rs4gc-allow-statepoint-with-no-deopt-info
Make relocations explicit at statepoints
rewrite-statepoints-for-gc
Base Pairs: (w/Relocation)
 derived 
 base 
__tmp_use
Live Variables:
Safepoint For: 
Number live values: 
Base Pairs (w/o Relocation):
base_ee
is_base_value
.base
base_phi
base_select
base_ie
base_sv
.remat
__llvm_deoptimize
safepoint_token
statepoint_token
deopt-lowering
.relocated
.casted
Sparse Conditional Constant Propagation
sccp
sroa-random-shuffle-slices
sroa-strict-inbounds
Can't analyze slices for alloca: 
  A pointer to this alloca escaped by:
Slices of alloca: 
.sroa.
 slice #
 (splittable)
  used by: 
sroa_raw_cast
sroa_raw_idx
sroa_cast
sroa_idx
sroa
load.ext
endian_shift
insert
.extract
extract
.shift
.trunc
.ext
.mask
.insert
load.trunc
.expand
blend
oldload
copyload
isplat
vsplat
.splatinsert
.splat
.fca
.gep
.load
.sroa.speculated
.sroa.speculate.load.
.sroa.speculate.load.true
.sroa.speculate.load.false
SROA
Scalar Replacement Of Aggregates
Scalarize vector operations
scalarizer
scalarize-load-store
Allow the scalarizer pass to scalarize loads and store
.upto
disable-separate-const-offset-from-gep
Do not separate the constant offset from a GEP instruction
reassociate-geps-verify-no-dead-code
Verify this pass produces no dead code
Split GEPs to a variadic base and a constant offset for better CSE
separate-const-offset-from-gep
idxprom
Dead instruction detected!
enable-nontrivial-unswitch
Forcibly enables non-trivial loop unswitching rather than following the configuration passed into the pass.
unswitch-threshold
The cost threshold for unswitching a loop.
simple-loop-unswitch
.us-phi
Simple unswitch loops
bonus-inst-threshold
Control the number of bonus instructions (default = 1)
keep-loops
Preserve canonical loop structure (default = true)
switch-to-lookup
Convert switches to lookup tables (default = false)
forward-switch-cond
Forward switch condition to phi ops (default = false)
sink-common-insts
Sink common instructions (default = false)
merge
simplifycfg
Simplify the CFG
sink
Code sinking
spec-exec-max-speculation-cost
Speculative execution is not applied to basic blocks where the cost of the instructions to speculatively execute exceeds this limit.
spec-exec-max-not-hoisted
Speculative execution is not applied to basic blocks where the number of instructions that would not be speculatively executed exceeds this limit.
spec-exec-only-if-divergent-target
Speculative execution is applied only to targets with divergent branches, even if the pass was configured to apply only to all targets.
Speculatively execute instructions
speculative-execution
Speculatively execute instructions if target has divergent branches
Straight line strength reduction
slsr
structurizecfg-skip-uniform-regions
Force whether the StructurizeCFG pass skips uniform regions
Structurize the CFG
structurizecfg
Structurize control flow
structurizecfg.uniform
entry.orig
Flow
Tail Call Elimination
tailcallelim
disable-tail-calls
tailcall-readnone
marked as tail call candidate (readnone)
tailrecurse
accumulator.tr
tailcall-recursion
transforming tail recursion into loop
': can only link appending global with another appending global!
Appending variables with different element types!
Appending variables linked with different const'ness!
Appending variables with different alignment need to be linked!
Appending variables with different visibility need to be linked!
Appending variables with different unnamed_addr need to be linked!
Appending variables with different section name need to be linked!
Linking two modules of different data layouts: '
' is '
' whereas '
Linking two modules of different target triples: 
.text
.balign 2
.thumb
.text
.balign 4
.arm
linking module flags '
': IDs have conflicting override values
': IDs have conflicting behaviors
': IDs have conflicting values
': does not have the required value
Linking COMDATs named '
': invalid selection kinds!
': noduplicates has been violated!
': ExactMatch violated!
': SameSize violated!
': COMDAT key involves incomputable alias size.
': GlobalVariable required for data dependent selection!
Linking globals named '
': symbol multiply defined!
parse
Parse IR
irparse
LLVM IR Parsing
constant bigger than 64 bits detected!
constant bigger than 128 bits detected!
end of file in COMDAT variable name
Null bytes are not allowed in names
end of file in string constant
invalid value number (too large)!
end of file in global variable name
bitwidth for integer type out of range!
define
constant
dso_local
dso_preemptable
hidden
protected
externally_initialized
thread_local
initialexec
localexec
caller
from
musttail
notail
source_filename
unwind
deplibs
datalayout
volatile
atomic
syncscope
nnan
arcp
contract
reassoc
fast
exact
inbounds
inrange
addrspace
section
module
sideeffect
inteldialect
prefix
prologue
avr_intrcc
avr_signalcc
blockaddress
distinct
uselistorder_bb
personality
cleanup
catch
filter
path
guid
summaries
linkage
notEligibleToImport
live
dsoLocal
insts
funcFlags
readNone
noRecurse
returnDoesNotAlias
calls
callee
hotness
relbf
aliasee
refs
typeIdInfo
typeTests
vFuncId
args
typeid
summary
typeTestRes
kind
sizeM1BitWidth
alignLog2
sizeM1
bitMask
inlineBits
wpdResolutions
wpdRes
singleImplName
resByArg
byArg
info
Can't read textual IR with a Context that discards named Values
expected function name in blockaddress
use of undefined type '%
use of undefined type named '
use of undefined comdat '$
use of undefined value '@
use of undefined metadata '!
use of undefined summary '^
use of undefined type id summary '^
expected top-level entity
expected 'module asm'
unknown target property
expected '=' after target triple
expected '=' after target datalayout
expected '=' after source_filename
expected '=' after deplibs
expected ']' at end of list
expected '=' after name
expected 'type' after '='
non-struct types may not be recursive
expected 'type' after name
expected 'global' or 'constant'
variable expected to be numbered '%
expected '=' in global variable
expected '=' here
expected comdat keyword
expected comdat type
unknown selection kind
redefinition of comdat '$
Expected '!' here
Expected '{' here
DIExpression
expected end of metadata node
unexpected type in metadata definition
Metadata id is already used
Expected 'gv', 'module', or 'typeid' at the start of summary entry
expected ':' at start of summary entry
expected '(' at start of summary entry
found end of file while parsing summary entry
unexpected summary kind
invalid linkage type for alias
symbol with local linkage must have default visibility
expected comma after alias or ifunc's type
invalid aliasee
An alias or ifunc must have pointer type
explicit pointee type doesn't match operand's pointee type
explicit pointee type should be a function type
redefinition of global '@
forward reference and definition of alias have different types
invalid type for global variable
forward reference and definition of global have different types
expected global section string
unknown global variable property!
expected attribute group id
expected '{' here
expected end of attribute group
attribute group has no attributes
unterminated attribute group
cannot have an attribute group reference in an attribute group
invalid use of attribute on a function
invalid use of parameter-only attribute on a function
global variable reference must have pointer type
' defined with type '
expected string constant
expected integer
expected 32-bit integer (too large)
expected localdynamic, initialexec or localexec
expected ')' after thread local model
expected '(' in address space
expected ')' in address space
invalid use of function-only attribute
invalid use of parameter-only attribute
invalid use of attribute on return type
dso_location and DLL-StorageClass mismatch
expected metadata after comma
alignment is not a power of two
huge alignments are not supported yet
expected '('
expected ')'
dereferenceable bytes must be non-zero
expected metadata or 'align'
expected metadata or 'addrspace'
'allocsize' indices can't refer to the same parameter
Expected '(' in syncscope
Expected synchronization scope name
Expected ')' in syncscope
Expected ordering on atomic instruction
stack alignment is not a power of two
expected ',' as start of index list
expected index
expected '>' at end of packed struct
void type only allowed for function results
basic block pointers are invalid
pointers to void are invalid - use i8* instead
pointer to this type is invalid
pointers to void are invalid; use i8* instead
expected '*' in address space
expected '(' in call
expected ',' in argument list
unexpected ellipsis in argument list for 
non-musttail call
musttail call in non-varargs function
expected ')' at end of argument list
expected '...' at end of argument list for musttail call in varargs function
expected ',' in input list
expected '(' in operand bundle
operand bundle set must not be empty
argument can not have void type
invalid type for function argument
invalid function return type
argument name invalid in function type
argument attributes invalid in function type
redefinition of type
forward references to non-struct type
expected '>' in packed struct
invalid element type for struct
expected '}' at end of struct
expected number in address space
expected 'x' after element count
expected ']' to close array
invalid array element type
expected 'x' after the number of columns
expected '>' to close matrix
matrix must have non-zero rows
matrix must have non-zero columns
matrix has too many rows
matrix has too many columns
invalid matrix element type
expected '>' to close vector
vector must have more than 0 elements
too many elements for vector
invalid vector element type
use of undefined value '%
' is not a basic block
invalid use of a non-first-class type
instructions returning void cannot have a name
instruction expected to be numbered '%
instruction forward referenced with type '
multiple definition of local value named '
expected value token
expected end of struct constant
expected end of packed struct
expected end of constant
constant vector must not be empty
vector elements must have integer, pointer or floating point type
vector element #
 is not of type '
expected end of array constant
invalid array element type: 
array element #
expected string
expected comma in inline asm expression
expected constraint string
expected '(' in block address expression
expected comma in block address expression
expected ')' in block address expression
expected basic block name in blockaddress
cannot take blockaddress inside a declaration
referenced value is not a basic block
cannot take address of numeric label after the function is defined
expected '(' after constantexpr cast
expected 'to' in constantexpr cast
expected ')' at end of constantexpr cast
invalid cast opcode for cast from '
' to '
expected '(' in extractvalue constantexpr
expected ')' in extractvalue constantexpr
extractvalue operand must be aggregate type
invalid indices for extractvalue
expected '(' in insertvalue constantexpr
expected comma in insertvalue constantexpr
expected ')' in insertvalue constantexpr
insertvalue operand must be aggregate type
invalid indices for insertvalue
insertvalue operand and field disagree in type: '
' instead of '
expected '(' in compare constantexpr
expected comma in compare constantexpr
expected ')' in compare constantexpr
compare operands must have the same type
fcmp requires floating point operands
icmp requires pointer or integer operands
expected '(' in binary constantexpr
expected comma in binary constantexpr
expected ')' in binary constantexpr
operands of constexpr must have same type
nuw only applies to integer operations
nsw only applies to integer operations
constexpr requires integer operands
constexpr requires fp operands
expected '(' in logical constantexpr
expected comma in logical constantexpr
expected ')' in logical constantexpr
constexpr requires integer or integer vector operands
expected '(' in constantexpr
expected comma after getelementptr's type
expected ')' in constantexpr
base of getelementptr must be a pointer
getelementptr index must be an integer
getelementptr vector index has a wrong number of elements
base element of getelementptr must be sized
invalid getelementptr indices
inrange keyword may not appear on pointer operand
expected three operands to select
expected three operands to shufflevector
invalid operands to shufflevector
expected two operands to extractelement
invalid extractelement operands
expected three operands to insertelement
invalid insertelement operands
global values must be constants
expected comdat variable
expected ')' after comdat var
comdat cannot be unnamed
expected '!' here
DILocation
DIGlobalVariableExpression
GenericDINode
DISubrange
DIEnumerator
DIBasicType
DIDerivedType
DICompositeType
DISubroutineType
DIFile
DICompileUnit
DISubprogram
DILexicalBlock
DILexicalBlockFile
DINamespace
DIModule
DITemplateTypeParameter
DITemplateValueParameter
DIGlobalVariable
DILocalVariable
DILabel
DIObjCProperty
DIImportedEntity
DIMacro
DIMacroFile
expected metadata type
missing required field 'scope'
missing required field 'tag'
missing required field 'count'
missing required field 'name'
missing required field 'value'
unsigned enumerator with negative value
missing required field 'baseType'
missing required field 'types'
missing required field 'filename'
missing required field 'directory'
'checksumkind' and 'checksum' must be provided together
missing 'distinct', required for !DICompileUnit
missing required field 'language'
missing required field 'file'
missing 'distinct', required for !DISubprogram when 'isDefinition'
missing required field 'discriminator'
missing required field 'type'
missing required field 'line'
expected '(' here
invalid DWARF op '
expected unsigned integer
element too large, limit is 
expected ')' here
missing required field 'var'
missing required field 'expr'
invalid metadata-value-metadata roundtrip
expected metadata operand
functions are not values, refer to them as pointers
invalid use of function-local name
invalid type for inline asm constraint string
integer constant must have integer type
floating point constant invalid for type
floating point constant does not have type '
null must be a pointer type
invalid type for undef constant
invalid empty array initializer
invalid type for null constant
invalid type for none constant
constant expression type mismatch
initializer with struct type has wrong # elements
packed'ness of initializer and type don't match
element 
 of struct initializer doesn't match struct element type
expected a basic block
invalid linkage for function definition
invalid linkage for function declaration
invalid function linkage type
function expected to be numbered '%
expected function name
expected '(' in function argument list
'builtin' attribute not valid on function
functions with 'sret' argument must return void
invalid forward reference to function as global value!
invalid forward reference to function '
' with wrong type!
invalid redefinition of function '
redefinition of function '@
type of definition and forward reference of '@
' disagree
redefinition of argument '%
expected '{' in function body
function body requires at least one basic block
unable to create block named '
expected '=' after instruction id
expected '=' after instruction name
found end of file when expecting more instructions
expected instruction opcode
fast-math-flags specified for select without floating-point scalar or vector return type
expected fcmp predicate (e.g. 'oeq')
expected icmp predicate (e.g. 'eq')
value doesn't match function result type '
branch condition must have 'i1' type
expected ',' after branch condition
expected ',' after true destination
expected ',' after switch condition
expected '[' with switch table
switch condition must have integer type
expected ',' after case value
duplicate case value in switch
case value is not a constant integer
expected ',' after indirectbr address
expected '[' with indirectbr
indirectbr address must have pointer type
expected ']' at end of block list
expected 'to' in invoke
expected 'unwind' in invoke
Invalid result type for LLVM function
too many arguments specified
argument is not of expected type '
not enough parameters specified for call
invoke instructions may not have an alignment
expected '[' in catchpad/cleanuppad
expected 'from' after cleanupret
expected 'unwind' in cleanupret
expected 'caller' in cleanupret
expected 'from' after catchret
expected 'to' in catchret
expected 'within' after catchswitch
expected scope value for catchswitch
expected '[' with catchswitch labels
expected ']' after catchswitch labels
expected 'unwind' after catchswitch scope
expected 'caller' in catchswitch
expected 'within' after catchpad
expected scope value for catchpad
expected 'within' after cleanuppad
expected scope value for cleanuppad
expected ',' in arithmetic operation
invalid operand type for instruction
expected ',' in logical operation
instruction requires integer or integer vector operands
expected ',' after compare value
icmp requires integer operands
expected 'to' after cast value
expected ',' after select condition
expected ',' after select value
expected ',' after vaarg operand
va_arg requires operand with first class type
expected ',' after extract value
expected ',' after insertelement value
expected ',' after shuffle mask
expected ',' after shuffle value
invalid shufflevector operands
expected '[' in phi value list
expected ']' in phi value list
phi node must have first class type
'catch' clause has an invalid type
'filter' clause has an invalid type
clause argument must be a constant
expected 'tail call', 'musttail call', or 'notail call'
fast-math-flags specified for call without floating-point scalar or vector return type
call instructions may not have an alignment
invalid type for alloca
element count must have integer type
expected comma after load's type
load operand must be a pointer to a first class type
atomic load must have explicit non-zero alignment
atomic load cannot use Release ordering
expected ',' after store operand
store operand must be a pointer
store operand must be a first class value
stored value and pointer type do not match
atomic store must have explicit non-zero alignment
atomic store cannot use Acquire ordering
expected ',' after cmpxchg address
expected ',' after cmpxchg cmp operand
cmpxchg cannot be unordered
cmpxchg failure argument shall be no stronger than the success argument
cmpxchg operand must be a pointer
compare value and pointer type do not match
new value and pointer type do not match
cmpxchg operand must be a first class value
expected binary operation in atomicrmw
expected ',' after atomicrmw address
atomicrmw cannot be unordered
atomicrmw operand must be a pointer
atomicrmw value and pointer type do not match
 operand must be an integer or floating point type
 operand must be a floating point type
 operand must be an integer
atomicrmw operand must be power-of-two byte-sized integer
fence cannot be unordered
fence cannot be monotonic
expected comma after insertvalue operand
value has no uses
value only has one use
wrong number of indexes, expected 
expected non-empty list of uselistorder indexes
expected '}' here
expected >= 2 uselistorder indexes
expected distinct uselistorder indexes in range [0, size)
expected uselistorder indexes to change the order
expected uselistorder directive
expected comma in uselistorder directive
expected comma in uselistorder_bb directive
expected function name in uselistorder_bb
invalid function forward reference in uselistorder_bb
invalid declaration in uselistorder_bb
invalid numeric label in uselistorder_bb
expected basic block name in uselistorder_bb
invalid basic block in uselistorder_bb
expected basic block in uselistorder_bb
expected ':' here
expected 'path' here
expected ',' here
expected 'hash' here
expected 'name' here
expected 'summary' here
expected 'typeTestRes' here
expected 'kind' here
unexpected TypeTestResolution kind
expected 'sizeM1BitWidth' here
expected ':'
expected optional TypeTestResolution field
expected 'wpdResolutions' here
expected 'offset' here
expected 'wpdRes' here
unexpected WholeProgramDevirtResolution kind
expected optional WholeProgramDevirtResolution field
expected 'resByArg' here
expected 'byArg here
unexpected WholeProgramDevirtResolution::ByArg kind
expected optional whole program devirt field
expected 'args' here
expected name or guid tag
expected 'summaries' here
expected summary type
expected 'insts' here
expected optional function summary field
expected 'aliasee' here
expected ':' in funcFlags
expected '(' in funcFlags
expected function flag type
expected ')' in funcFlags
expected ':' in calls
expected '(' in calls
expected 'callee' in call
expected relbf
expected ')' in call
expected ')' in calls
invalid call edge hotness
expected ':' in refs
expected '(' in refs
expected ')' in refs
expected '(' in typeIdInfo
invalid typeIdInfo list type
expected ')' in typeIdInfo
expected 'guid' here
expected 'linkage' here
expected 'notEligibleToImport' here
expected 'live' here
expected 'dsoLocal' here
expected 'module' here
expected module ID
expected GV ID
expected type
expected field label here
invalid field '
field '
' cannot be specified more than once
value for '
' too large, limit is 
' cannot be null
operands
expected DWARF tag
invalid DWARF tag
' cannot be empty
expected signed integer
' too small, limit is 
expected 'true' or 'false'
expected DWARF type attribute encoding
invalid DWARF type attribute encoding
expected debug info flag
invalid debug info flag flag '
expected DWARF language
invalid DWARF language
expected DWARF calling convention
invalid DWARF calling convention
checksumkind
expected emission kind
expected DWARF virtuality code
invalid DWARF virtuality code
expected DWARF macinfo type
invalid DWARF macinfo type
Could not open input file: 
agx-instcombine
instcombine-visit
Controls which instructions are visited
expensive-combines
Enable expensive instruction combines
instcombine-maxarray-size
Maximum array size considered when doing a combine
instcombine-lower-dbg-declare
phitmp
instcombine
Combine redundant instructions
.offs
.idx
addconv
diff.neg
notmask
.masked
and.shrunk
bitfield
notlhs
notrhs
.demorgan
instcombine-guard-widening-window
How wide an instruction window to bypass looking for another guard
blendv
exec
thunk
nvptx-f32ftz
unmaskedload
castvec
tmpcast
.lobit
.unshifted
.sext
.add
to.ptr
.ptr
.conv
sadd
sadd.result
sadd.overflow
umul
umul.value
.cast
storemerge
.sub
.unpack
.elt
.repack
suba
subc
mulconv
rsqrt
mulsqrt
instcombine-max-num-phis
Maximum number phis to handle in intptr/ptrint folding
.shrunk
extract.t
narrow
not.
.inv
.Elt
.lhs
.rhs
agx.driver_parameters_dma
agx.compute_driver_bindings
agx.boundcheck
checkdmapromotable
memorytocheck
disableindexopt
useaddsatindex
fullptrcheck
checkstores
checkatomics
hardware_support
agx.local.store.spill
per-thread-spill-bytes
soa-layout
thread-group-size
per-thread-alloca-bytes
soa-layout-alloca
agx.speculative_bindings
agx.lib_valid_bytes
TargetGPU
agx.prid
extendintsext
extendintzext
extendint
Unable to replace a constant with instructions
driver_parameters
0x1p+32
buffer_bindings
agx.
.offset
agx.unified.store.limits
min-temp-reg-limit
temp-reg-limit
Pick mode of operation for agx-shader-canonicalizer:
agx-canon-dedup
Strip all metadata that does not change assembly output (or WILL in undesirable way), drop most type and value names. Optimal for IR deduplication purposes
agx-canon-test
Only strip metadata that we don't care to have in OfflineIR suite and regression tests
Drop redundant metadata, assign empty names to most of the values
agx-shader-canonicalizer
air.language_version
air.version
air.source_file_name
air.requestHash
air.compile_options
air.sampler_states
air.max_device_buffers
air.max_constant_buffers
air.max_threadgroup_buffers
air.max_textures
air.max_read_write_textures
air.max_samplers
GitHash
agx.driver_bindings
no-discriminators
Disable generation of discriminator information.
Add DWARF path discriminators
add-discriminators
.split-lp
lpad
lpad.phi
_crit_edge
split
.clone
Break critical edges in CFG
break-crit-edges
cstr
chari
Return type mismatch
The number of arguments mismatch
Argument type mismatch
if.true.direct_targ
if.false.orig_indirect
if.end.icp
.split
aggregate-extracted-args
Aggregate arguments to code-extracted functions
.ret
extracted
gep_
loadgep_
.out
.loc
structArg
targetBlock
gep_reload_
.reload
.exitStub
codeRepl
newFuncRoot
debugify-quiet
Suppress verbose debugify output
debugify-level
Kind of debug info to add
locations
Locations only
location+variables
Locations and Variables
Skipping module with debug info
debugify
llvm.debugify
ModuleDebugify: 
CheckModuleDebugify
Attach debug info to everything
check-debugify
Check debug info from -debugify
debugify-function
Attach debug info to a function
check-debugify-function
Check debug info from -debugify-function
FunctionDebugify: 
CheckFunctionDebugify
Skipping module without debugify metadata
ERROR: Instruction with empty DebugLoc in function 
WARNING: Missing line 
WARNING: Missing variable 
FAIL
PASS
ERROR: dbg.value operand has size 
, but its variable has size 
.reg2mem
Instrument function entry/exit with calls to e.g. mcount() (pre inlining)
ee-instrument
Instrument function entry/exit with calls to e.g. mcount() (post inlining)
post-inline-ee-instrument
instrument-function-entry-inlined
instrument-function-entry
instrument-function-exit-inlined
instrument-function-exit
.mcount
__gnu_mcount_nc
_mcount
mcount
__mcount
_mcount
__cyg_profile_func_enter_bare
__cyg_profile_func_enter
__cyg_profile_func_exit
Unknown instrumentation function: '
Scoped EH not supported
cleanup.lpad
enable-noalias-to-md-conversion
Convert noalias attributes to metadata during inlining.
preserve-alignment-assumptions-during-inlining
Convert align attributes to assumptions during inlining.
savedstack
.exit
ptrint
offsetcast
offsetptr
maskedptr
maskcond
agx1
agx2
: argument 
.body
.lpad-body
eh.lpad-body
_udiv-special-cases
udiv-end
udiv-loop-exit
udiv-do-while
udiv-preheader
udiv-bb1
------- Dumping inliner stats for [
] -------
-- List of inlined functions:
Inlined 
imported 
not imported 
function [
: #inlines = 
, #inlines_to_importing_module = 
-- Summary:
All functions: 
, imported functions: 
inlined functions
all functions
imported functions inlined anywhere
imported functions
imported functions inlined into importing module
, remaining
non-imported functions inlined anywhere
non-imported functions
non-imported functions inlined into importing module
% of 
Assign names to anonymous instructions
instnamer
verify-loop-lcssa
Verify loop lcssa form (time consuming)
lcssa
Loop-Closed SSA Form Pass
Conditionally eliminate dead library calls
libcalls-shrinkwrap
cdce.call
cdce.end
cond
.noexc
gc-leaf-function
.lr.ph
.preheader
.outer
loop-simplify
.backedge
Canonicalize natural loops
unroll-runtime-epilog
Allow runtime unrolled loops to be unrolled with epilog instead of prolog.
unroll-verify-domtree
Verify domtree after unrolling
FullyUnrolled
completely unrolled loop with 
 iterations
Peeled
 peeled loop by 
PeelCount
 with a breakout at trip 
BreakoutTrip
PartialUnrolled
unrolled loop by a factor of 
 with 
 trips per branch
 with run-time trip count
completely unroll and jammed loop with 
unroll and jammed loop by a factor of 
unroll-peel-max-count
Max average trip count which will cause loop peeling.
unroll-force-peel-count
Force a peel count regardless of profiling information.
.peel.begin
.peel.next
.peel.newph
.peel
unroll-runtime-multi-exit
Allow runtime unrolling for loops with multiple exits, when epilog is generated
.new
.unr-lcssa
.epil.preheader
.prol.preheader
.prol.loopexit
xtraiter
lcmp.mod
unroll_iter
niter
.nsub
.ncmp
epil
prol
.iter
.cmp
.unr
.epilog-lcssa
rdx.minmax.cmp
rdx.minmax.select
induction
bin.rdx
rdx.shuf
.loopexit
loop-version-annotate-no-alias
Add no-alias annotation for instructions that are disambiguated by memchecks
lver.safe
.lver.check
.lver.orig
.lver
LVerDomain
loop-versioning
Lower invoke and unwind, for unwindless code generators
lowerinvoke
Lower SwitchInst's to branches
lowerswitch
NewDefault
NodeBlock
Pivot
LeafBlock
SwitchLeaf
mem2reg
Promote Memory to Register
Assign new names to everything
metarenamer
global
struct.
quux
barney
snork
blam
hoge
wibble
wobble
widget
wombat
eggs
pluto
spam
anon.
Provide a name to nameless globals
name-anon-globals
Name Anon Globals
verify-predicateinfo
Verify PredicateInfo in legacy printer pass.
predicateinfo-rename
Controls which variables are renamed with predicateinfo
PredicateInfo Printer
print-predicateinfo
llvm.ssa.copy.
; Has predicate info
; branch predicate info { TrueEdge: 
 Comparison:
 Edge: [
; switch predicate info { CaseValue: 
 Switch:
; assume predicate info {
Strip gc.relocates inserted through RewriteStatepointsForGC
strip-gc-relocates
phi-node-folding-threshold
Control the amount of phi node folding to perform (default = 2)
simplifycfg-dup-ret
Duplicate return instructions into unconditional branches
simplifycfg-sink-common
Sink common instructions down to the end block
simplifycfg-hoist-cond-stores
Hoist conditional stores if an unconditional store precedes
simplifycfg-merge-cond-stores
Hoist conditional stores even if an unconditional store does not precede - hoist multiple conditional stores into a single predicated store
simplifycfg-merge-cond-stores-aggressively
When merging conditional stores, do so even if the resultant basic blocks are unlikely to be if-converted as a result
speculate-one-expensive-inst
Allow exactly one expensive instruction to be speculatively executed
max-speculation-depth
Limit maximum recursion depth when calculating costs of speculatively executed instructions
.not
.old
or.cond
not.cond
and.cond
.sink.split
.sink
switch.edge
.fold.split
magicptr
infloop
switch.early.test
spec.store.select
spec.select
.critedge
brmerge
.mux
condstore.split
simplifycfg.merge
retval
.off
switch.selectcmp
switch.select
switch.lookup
switch.tableidx
switch.hole_check
switch.maskindex
switch.shifted
switch.lobit
switch.table.
switch.idx.cast
switch.idx.mult
switch.offset
switch.cast
switch.shiftamt
switch.downshift
switch.masked
switch.tableidx.zext
switch.gep
switch.load
inverted.cmp
iv.rem
.urem
.udiv
enable-double-float-shrink
Enable unsafe double to float shrinking for math lib calls
endptr
strcmpload
strlenfirst
memchr.bounds
memchr.bits
lhsc
lhsv
rhsc
rhsv
chardiff
real
imag
reciprocal
square
isinf
logmul
cttz
isdigittmp
leninc
sincospi
sinpi
cospi
simplify-libcalls
folded strlen(select) to select of constants
Strip all debug info except linetables
strip-nonlinetable-debuginfo
rewrite-map-file
Symbol Rewrite Map
unable to read rewrite map '
unable to parse rewrite map '
DescriptorList node must be a map
rewrite type must be a scalar
rewrite descriptor must be a map
unknown rewrite type
descriptor key must be a scalar
descriptor value must be a scalar
invalid regex: 
unknown key for function
exactly one of transform or target must be specified
descriptor Key must be a scalar
unknown Key for Global Variable
unknown key for Global Alias
Rewrite Symbols
rewrite-symbols
unable to transforn 
UnifiedUnreachableBlock
UnifiedReturnBlock
UnifiedRetVal
Unify function exit nodes
mergereturn
no-trapping-math
denormal-fp-math
preserve-sign
disable-basicaa
NoAlias
MustAlias
MayAlias
PartialAlias
External Alias Analysis
external-aa
Function Alias Analysis Results
print-all-alias-modref-info
print-no-aliases
print-may-aliases
print-partial-aliases
print-must-aliases
print-no-modref
print-ref
print-mod
print-modref
print-must
print-mustref
print-mustmod
print-mustmodref
evaluate-aa-metadata
Function: 
 pointers, 
 call sites
NoModRef
Just Mod
Just Ref
Both ModRef
Must
Just Mod (MustAlias)
Just Ref (MustAlias)
Both ModRef (MustAlias)
===== Alias Analysis Evaluator Report =====
  Alias Analysis Evaluator Summary: No pointers!
 Total Alias Queries Performed
 no alias responses 
 may alias responses 
 partial alias responses 
 must alias responses 
  Alias Analysis Evaluator Pointer Alias Summary: 
  Alias Analysis Mod/Ref Evaluator Summary: no mod/ref!
 Total ModRef Queries Performed
 no mod/ref responses 
 mod responses 
 ref responses 
 mod & ref responses 
 must responses 
 must mod responses 
 must ref responses 
 must mod & ref responses 
  Alias Analysis Evaluator Mod/Ref Summary: 
 <-> 
:  Ptr: 
Exhaustive Alias Analysis Precision Evaluator
aa-eval
alias-set-saturation-threshold
The maximum number of pointers may-alias sets may contain before degradation
  AliasSet[
must
 alias, 
No access 
Ref       
Mod       
Mod/Ref   
[volatile] 
 forwarding to 
Pointers: 
 Unknown instructions: 
Alias Set Tracker: 
 alias sets for 
 pointer values.
Alias Set Printer
print-alias-sets
Alias sets for function '
verify-assumption-cache
Enable verification of assumption cache
Assumption in scanned function not in cache
Assumption Cache Tracker
assumption-cache-tracker
basicaa-recphi
basicaa
Basic Alias Analysis (stateless AA impl)
view-block-freq-propagation-dags
Pop up a window to show a dag displaying how block frequencies propagation through the CFG.
do not display graphs.
fraction
display a graph using the fractional block frequency representation.
integer
display a graph using the raw integer fractional block frequency representation.
display a graph using the real profile count if available.
view-bfi-func-name
The option to specify the name of the function whose CFG will be displayed.
view-hot-freq-percent
An integer in percent used to specify the hot blocks/edges to be displayed in red: a block or edge whose frequency is no less than the max frequency of the function multiplied by this percent.
pgo-view-counts
A boolean option to show CFG dag or text with block profile counts and branch probabilities right after PGO profile annotation step. The profile counts are computed using branch probabilities from the runtime profile data and block frequency propagation algorithm. To view the raw counts from the profile, use option -pgo-view-raw-counts instead. To limit graph display to only one function, use filtering option -view-bfi-func-name.
do not show.
graph
show a graph.
text
show in text.
print-bfi
Print the block frequency info.
print-bfi-func-name
The option to specify the name of the function whose block frequency info is printed.
BlockFrequencyDAGs
block-frequency-info: 
: float = 
, int = 
, count = 
, irr_loop_header_weight = 
Block Frequency Analysis
block-freq
file exists, overwriting
error writing into file
error opening file '
' for writing!
 done. 
digraph "
digraph unnamed {
label="
Node
 [shape=record,
label="{
}"];
color="red"
] : 
Unknown
|<s64>truncated...
 -> Node
label="%.1f%%"
,color="red"
print-bpi
Print the branch probability info.
print-bpi-func-name
The option to specify the name of the function whose branch probability info is printed.
---- Branch Probabilities ----
edge 
 probability is 
 [HOT edge]
Branch Probability Analysis
branch-prob
cfg-func-name
The name of a function (or its substring) whose CFG is viewed/printed.
View CFG of function
view-cfg
View CFG of function (with no function bodies)
view-cfg-only
Print CFG of function to 'dot' file
dot-cfg
cfg.
CFG for '
Print CFG of function to 'dot' file (with no function bodies)
dot-cfg-only
Inclusion-Based CFL Alias Analysis
cfl-anders-aa
Unification-Based CFL Alias Analysis
cfl-steens-aa
..., 
Call graph node for function: '
Call graph node <<null function>>
>>  #uses=
  CS<
> calls 
function '
<<null function>><<
No call graph has been built!
CallGraph Construction
basiccg
Print a call graph
print-callgraph
max-cg-scc-iterations
CallGraph Pass Manager
Call Graph SCC Pass Manager
Print CallGraph IR
Printing <null> Function
DummyCGSCCPass
View call graph
view-callgraph
Print call graph to 'dot' file
dot-callgraph
callgraph
Call graph
external node
cost-kind
Target cost kind
throughput
Reciprocal throughput
latency
Instruction latency
code-size
Code size
cost-model
Cost Model: Found an estimated cost of 
Cost Model: Unknown cost
 for instruction: 
air.normalize_function_constant_predicate
delinearize
Delinearization on function 
Inst:
In Loop with Header: 
AccessFunction: 
failed to delinearize
Base offset: 
ArrayDecl[UnknownSize]
 with elements of 
 bytes.
ArrayRef
DemandedBits: 0x
 for 
Demanded bits analysis
demanded-bits
da-delinearize
Try to delinearize array references.
 Empty
 Any
 Point is <
 Distance is 
*X + 
*Y = 
 Line is 
confused
consistent 
flow
anti
 splitable
Dependence Analysis
da analyze - 
da analyze - split level = 
, iteration = 
none!
DIVERGENT: 
           
           
DIVERGENT:     
               
Divergence Analysis
divergence
View dominance tree of function
view-dom
View dominance tree of function (with no function bodies)
view-dom-only
View postdominance tree of function
view-postdom
View postdominance tree of function (with no function bodies)
view-postdom-only
Print dominance tree of function to 'dot' file
dot-dom
Print dominance tree of function to 'dot' file (with no function bodies)
dot-dom-only
Print postdominance tree of function to 'dot' file
dot-postdom
Print postdominance tree of function to 'dot' file (with no function bodies)
dot-postdom-only
.dot
Writing '
'...
 for '
' function
  error opening file for writing!
Dominator tree
Post dominance root node
\l...
domonly
postdom
Post dominator tree
postdomonly
  DomFrontier for BB 
 is:
<<exit node>>
Dominance Frontier Construction
domfrontier
__gnat_eh_personality
__gxx_personality_v0
__gxx_personality_sj0
__gcc_personality_v0
__gcc_personality_sj0
__objc_personality_v0
_except_handler3
__C_specific_handler
__CxxFrameHandler3
ProcessCLRException
rust_eh_personality
__gxx_wasm_personality_v0
enable-unsafe-globalsmodref-alias-results
Globals Alias Analysis
globals-aa
memset_pattern16
GPU Alias Analysis
gpu-aa
Shared
Coefficient
Driver Parameter Memory
Texture
Sampler
Uniform
Local Memory
Function Groups
function-groups
.thread_invariants
.constant_program
.constant_program.cfg
should not call subgroup_begin() on simple function group
should not call subgroup_end() on simple function group
Too many resources of type '
' used: 
Literal constant support for weirdly sized int type not yet implemented
Literal constant support for weirdly sized FP type not yet implemented
Unsupported literal constant
Simple function group @
  Functions: [ 
  GlobalValueLiteralConstantOffsetMap:
    [
  LiteralConstants:
  RegisterOffsets:
]: { idx: 
 size: 
 type: 
TEXTURE
SAMPLER
SAMPLER_CONSTANT
DRIVER_CONSTANT
BUFFER_BINDING
DRIVER_PARAM
DRIVER_PARAM_MEMORY
MEM_CACHE
THREAD_INVARIANT
CONSTANT_LITERALS
LITERALS_BUFFER
GROUP_ID_X
GROUP_ID_Y
GROUP_ID_Z
BARRIER_COUNTER
COEFFICIENT_W
COEFFICIENT
LOCAL_MEM
SPILL
LAST_TYPE
_agx_dylib_id
agx.common.store.limits
dma-promotion
agx.vertex_amp_mode
.sample_invariants
ComplexFunctionGroup::
insertMember
 not implemented
removeMember
getNumMembers
hasMember
global_resource_clear
getVIDMAList
setVIDMAList
getVIRemap
setVIRemap
getGlobalValueLiteralConstantOffset
global_value_literal_constant_offset_begin
global_value_literal_constant_offset_end
global_value_literal_constant_offset_empty
bound_checking_uniform_alloc_begin
bound_checking_uniform_alloc_end
literal_constant_begin
literal_constant_end
literal_constant_at
setAmpIdCount
hasReadLiteralConstantLocation
getSharedRegisterLiteralConstantBase
getCPROGHasCalls
setCPROGHasCalls
setCommonStoreRegisterForGlobal
hasSharedRegisterAllocations
hasCoefficientRegisterAllocations
getAllocatedCoeffRegisterBytes
allocateConstantLiteralForGlobalValue
allocateBoundCheckingUniform
getNextAvailableResourceAllocationForSize
allocateResourceForSize
allocateRegisterForDylib
allocateRegisterForBindlessSamplerBase
resetAllocationForType
allocate32BitSharedRegisters
emitGlobalConstant
emitExternGlobal
Assuming only one exit function.
getRepresentativeFunction
onGlobalValueErased
Complex function group with subgroups: {
getBindlessSamplerBaseSize
Cannot print function groups without a module
Function 
's group contains:
IV Users for loop 
 with backedge-taken count 
 (post-inc with loop 
 in  
Printing <null> User
Induction Variable Users
iv-users
icp-remaining-percent-threshold
The percentage threshold against remaining unpromoted indirect call count for the promotion
icp-total-percent-threshold
The percentage threshold against total count for the promotion
icp-max-prom
Max number of promotions for a single indirect call callsite
inline-threshold
Control the amount of inlining to perform (default = 225)
inlinehint-threshold
Threshold for inlining functions with inline hint
inline-cold-callsite-threshold
Threshold for inlining cold callsites
inlinecold-threshold
Threshold for inlining functions with cold attribute
hot-callsite-threshold
Threshold for hot callsites 
locally-hot-callsite-threshold
Threshold for locally hot callsites 
cold-callsite-rel-freq
Maxmimum block frequency, expressed as a percentage of caller's entry frequency, for a callsite to be cold in the absence of profile information.
hot-callsite-rel-freq
Minimum block frequency, expressed as a multiple of caller's entry frequency, for a callsite to be hot in the absence of profile information.
inline-cost-full
Compute the full inline cost of a call site even when the cost exceeds the threshold.
      NumConstantArgs: 
      NumConstantOffsetPtrArgs: 
      NumAllocaArgs: 
      NumConstantPtrCmps: 
      NumConstantPtrDiffs: 
      NumInstructionsSimplified: 
      NumInstructions: 
      SROACostSavings: 
      SROACostSavingsLost: 
      LoadEliminationCost: 
      ContainsNoDuplicateCall: 
      Cost: 
      Threshold: 
inline-cost
NeverInline
Callee
 has uninlinable pattern and cost is not fully computed
 is recursive and allocates too much stack space. Cost is not fully computed
Counts the various types of Instructions
instcount
-------------------------------------------------------------
Interval Contents:
Interval Predecessors:
Interval Successors:
Interval Partition Construction
intervals
Lazy Branch Probability Analysis
lazy-branch-prob
Lazy Block Frequency Analysis
lazy-block-freq
 -> "
Lazy Value Information Analysis
lazy-value-info
; LatticeVal for: '
' is: 
' in BB: '
Lazy Value Info Printer Pass
print-lazy-value-info
LVI for function '
Statically lint-checks LLVM IR
lint
Unusual: Unnamed function with non-local linkage
Unusual: Return statement in function with noreturn attribute
Unusual: Returning alloca value
Undefined behavior: indirectbr with no destinations
Undefined behavior: Null pointer dereference
Undefined behavior: Undef pointer dereference
Unusual: All-ones pointer dereference
Unusual: Address one pointer dereference
Undefined behavior: Write to read-only memory
Undefined behavior: Write to text section
Unusual: Load from function body
Undefined behavior: Load from block address
Undefined behavior: Call to block address
Undefined behavior: Branch to non-blockaddress
Undefined behavior: Buffer overflow
Undefined behavior: Memory reference address is misaligned
Undefined behavior: Caller and callee calling convention differ
Undefined behavior: Call argument count mismatches callee argument count
Undefined behavior: Call return type mismatches callee return type
Undefined behavior: Call argument type mismatches callee parameter type
Unusual: noalias argument aliases another argument
Undefined behavior: Call with "tail" keyword references alloca
Undefined behavior: memcpy source and destination overlap
Undefined behavior: va_start called in a non-varargs function
Unusual: unreachable immediately preceded by instruction without side effects
Undefined result: sub(undef, undef)
Undefined behavior: Division by zero
Undefined result: Shift count out of range
Undefined result: xor(undef, undef)
Pessimization: Static alloca outside of entry block
Undefined result: extractelement index out of range
Undefined result: insertelement index out of range
available-load-scan-limit
Use this to specify the default maximum number of instructions to scan backward from a given instruction, when searching for available loaded value
force-vector-width
Sets the SIMD width. Zero is autoselect.
force-vector-interleave
Sets the vectorization interleave count. Zero is autoselect.
runtime-memory-check-threshold
When performing memory disambiguation checks at runtime do not generate more than this number of comparisons (default = 8).
memory-check-merge-threshold
Maximum number of comparisons done when trying to merge runtime memory checks. (default = 100)
max-dependences
Maximum number of dependences collected by loop-access analysis (default = 100)
enable-mem-access-versioning
Enable symbolic stride memory access versioning
store-to-load-forwarding-conflict-detection
Enable conflict detection in loop-access analysis
Check 
Comparing group (
Against group (
Run-time memory checks:
Grouped accesses:
Group 
(Low: 
 High: 
Member: 
NoDep
Forward
ForwardButPreventsForwarding
Backward
BackwardVectorizable
BackwardVectorizableButPreventsForwarding
 -> 
NotInnerMostLoop
loop is not the innermost loop
CFGNotUnderstood
loop control flow is not understood by analyzer
CantComputeNumberOfIterations
could not determine number of loop iterations
NonSimpleLoad
read with atomic ordering or volatile read
CantVectorizeInstruction
instruction cannot be vectorized
NonSimpleStore
write with atomic ordering or volatile write
CantIdentifyArrayBounds
cannot identify array bounds
CantCheckMemDepsAtRunTime
cannot check memory dependencies at runtime
UnsafeMemDep
unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
loop-accesses
bound0
bound1
found.conflict
conflict.rdx
memcheck.conflict
Memory dependences are safe
 with a maximum dependence distance of 
 bytes
 with run-time checks
Report: 
Dependences:
Too many dependences, not recorded
Store to invariant address was 
not 
found in loop.
SCEV assumptions:
Expressions re-written:
enable-mssa-loop-dependency
Enable MemorySSA dependency for loop pass manager
Loop at depth 
 containing: 
<header>
<latch>
<exiting>
verify-loop-info
Verify loop info (time consuming)
llvm.loop.unroll.
 (loop: 
; Preheader:
; Loop:
Printing <null> block
; Exit blocks
Natural Loop Information
loops
<deleted loop>
<deleted>
Loop Pass Manager
Print Loop IR
LCSSA Verifier
lcssa-verification
Loop Pass Manager
Print MemDeps of function
print-memdeps
 in block 
 from: 
Clobber
NonFuncLocal
Memory Dereferenciblity of pointers in function
print-memderefs
The following are dereferenceable:
(aligned)
(unaligned)
memdep-block-scan-limit
The number of instructions to scan in a block in memory dependency analysis (default = 100)
memdep-block-number-limit
The number of blocks to scan during memory dependency analysis (default = 1000)
memdep
Memory Dependence Analysis
memssa-check-limit
The maximum number of stores/phis MemorySSAwill consider trying to walk past (default = 100)
verify-memoryssa
Verify MemorySSA in legacy printer pass.
 = MemoryDef(
 = MemoryPhi(
MemoryUse(
Memory SSA
memoryssa
Memory SSA Printer
print-memoryssa
Decodes module-level debug info
module-debuginfo
Compile unit: 
unknown-language(
Subprogram: 
Global variable: 
Type:
unknown-encoding(
unknown-tag(
 (identifier: '
force-summary-edges-cold
Force all edges in the function summary to cold
None.
all-non-critical
All non-critical edges.
All edges.
ThinLTO
Module Summary Analysis
module-summary-analysis
Instructions which execute on loop entry
print-mustexecute
 ; (mustexec in 
 loops: 
 ; (mustexec in: 
ObjC-ARC-Based Alias Analysis
objc-arc-aa
enable-objc-arc-opts
enable/disable all ARC Optimizations
objc_retainAutoreleasedReturnValue
objc_unsafeClaimAutoreleasedReturnValue
llvm.arc.annotation.topdown.bbstart
llvm.arc.annotation.topdown.bbend
llvm.arc.annotation.bottomup.bbstart
llvm.arc.annotation.bottomup.bbend
opt-remark-emitter
PHITransAddr: null
PHITransAddr: 
  Input #
 is 
.phi.trans.insert
Phi Values Analysis
phi-values
Post-Dominator Tree Construction
postdomtree
profile-summary-cutoff-hot
A count is hot if it exceeds the minimum count to reach this percentile of total counts.
profile-summary-cutoff-cold
A count is cold if it is below the minimum count to reach this percentile of total counts.
If the sample profile is accurate, we will mark all un-sampled callsite as cold. Otherwise, treat un-sampled callsites as if we have no profile.
profile-summary-huge-working-set-size-threshold
The code working set size is considered huge if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
Desired percentile exceeds the maximum cutoff
Profile summary info
profile-summary-info
Broken region found: enumerated BB not in region!
Broken region found: edges leaving the region must go to the exit node!
Broken region found: edges entering the region must go to the entry node!
<Function Return>
BB map does not match region nesting
Region tree:
End region tree
verify-region-info
Verify region info (time consuming)
print-region-style
style of printing regions
print no details
print regions in detail with block_iterator
print regions in detail with element_iterator
Detect single entry single exit regions
regions
Region Pass Manager
Print Region IR
Printing <null> Block
Region Pass Manager
only-simple-regions
Show only simple regions in the graphviz viewer
Print regions of function to 'dot' file
dot-regions
Print regions of function to 'dot' file (with no function bodies)
dot-regions-only
View regions of function
view-regions
View regions of function (with no function bodies)
view-regions-only
Region Graph
Not implemented
constraint=false
colorscheme = "paired12"
subgraph cluster_
label = "";
style = filled;
color = 
style = solid;
Node
regonly
scalar-evolution-max-iterations
Maximum number of iterations SCEV will symbolically execute a constant derived loop
verify-scev
Verify ScalarEvolution's backedge taken counts (slow)
verify-scev-maps
Verify no dangling value in ScalarEvolution's ExprValueMap (slow)
scev-mulops-inline-threshold
Threshold for inlining multiplication operands into a SCEV
scev-addops-inline-threshold
Threshold for inlining addition operands into a SCEV
scalar-evolution-max-scev-compare-depth
Maximum depth of recursive SCEV complexity comparisons
scalar-evolution-max-scev-operations-implication-depth
Maximum depth of recursive SCEV operations implication analysis
scalar-evolution-max-value-compare-depth
Maximum depth of recursive value complexity comparisons
scalar-evolution-max-arith-depth
Maximum depth of recursive arithmetics
scalar-evolution-max-constant-evolving-depth
Maximum depth of recursive constant evolving
scalar-evolution-max-ext-depth
Maximum depth of recursive SExt/ZExt
scalar-evolution-max-add-rec-size
Max coefficients in AddRec during evolving
(trunc 
(zext 
(sext 
nuw><
nsw><
nw><
 umax 
 smax 
<nuw>
<nsw>
 /u 
sizeof(
alignof(
offsetof(
***COULDNOTCOMPUTE***
Classifying expressions for: 
  -->  
 U: 
 S: 
Exits: 
<<Unknown>>
LoopDispositions: { 
Determining loop execution counts for: 
Trip Count Changed!
Old: 
New: 
Delta: 
Equal predicate: 
 == 
 Added Flags: 
<nusw>
<nssw>
[PSE]
--> 
scalar-evolution
Variant
Invariant
Computable
Loop 
<multiple exits> 
backedge-taken count is 
Unpredictable backedge-taken count. 
Loop 
max backedge-taken count is 
, actual taken count either this or zero.
Unpredictable max backedge-taken count. 
Predicated backedge-taken count is 
 Predicates:
Unpredictable predicated backedge-taken count. 
Trip multiple is 
Scalar Evolution Analysis
ScalarEvolution-based Alias Analysis
scev-aa
uglygep
scevgep
.iv.next
indvar
indvar.next
smax
ident.check
mul.result
mul.overflow
vector-library
Vector functions library
none
No vector functions library
Accelerate
Accelerate framework
SVML
Intel SVML library
??2@YAPAXI@Z
??2@YAPAXIABUnothrow_t@std@@@Z
??2@YAPEAX_K@Z
??2@YAPEAX_KAEBUnothrow_t@std@@@Z
??3@YAXPAX@Z
??3@YAXPAXABUnothrow_t@std@@@Z
??3@YAXPAXI@Z
??3@YAXPEAX@Z
??3@YAXPEAXAEBUnothrow_t@std@@@Z
??3@YAXPEAX_K@Z
??_U@YAPAXI@Z
??_U@YAPAXIABUnothrow_t@std@@@Z
??_U@YAPEAX_K@Z
??_U@YAPEAX_KAEBUnothrow_t@std@@@Z
??_V@YAXPAX@Z
??_V@YAXPAXABUnothrow_t@std@@@Z
??_V@YAXPAXI@Z
??_V@YAXPEAX@Z
??_V@YAXPEAXAEBUnothrow_t@std@@@Z
??_V@YAXPEAX_K@Z
_IO_getc
_IO_putc
_ZdaPv
_ZdaPvRKSt9nothrow_t
_ZdaPvSt11align_val_t
_ZdaPvSt11align_val_tRKSt9nothrow_t
_ZdaPvj
_ZdaPvm
_ZdlPv
_ZdlPvRKSt9nothrow_t
_ZdlPvSt11align_val_t
_ZdlPvSt11align_val_tRKSt9nothrow_t
_ZdlPvj
_ZdlPvm
_Znaj
_ZnajRKSt9nothrow_t
_ZnajSt11align_val_t
_ZnajSt11align_val_tRKSt9nothrow_t
_Znam
_ZnamRKSt9nothrow_t
_ZnamSt11align_val_t
_ZnamSt11align_val_tRKSt9nothrow_t
_Znwj
_ZnwjRKSt9nothrow_t
_ZnwjSt11align_val_t
_ZnwjSt11align_val_tRKSt9nothrow_t
_Znwm
_ZnwmRKSt9nothrow_t
_ZnwmSt11align_val_t
_ZnwmSt11align_val_tRKSt9nothrow_t
__acos_finite
__acosf_finite
__acosh_finite
__acoshf_finite
__acoshl_finite
__acosl_finite
__asin_finite
__asinf_finite
__asinl_finite
__atan2_finite
__atan2f_finite
__atan2l_finite
__atanh_finite
__atanhf_finite
__atanhl_finite
__cosh_finite
__coshf_finite
__coshl_finite
__cospi
__cospif
__cxa_atexit
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_release
__exp10_finite
__exp10f_finite
__exp10l_finite
__exp2_finite
__exp2f_finite
__exp2l_finite
__exp_finite
__expf_finite
__expl_finite
__isoc99_scanf
__isoc99_sscanf
__log10_finite
__log10f_finite
__log10l_finite
__log2_finite
__log2f_finite
__log2l_finite
__log_finite
__logf_finite
__logl_finite
__memcpy_chk
__memmove_chk
__memset_chk
__nvvm_reflect
__pow_finite
__powf_finite
__powl_finite
__sincospi_stret
__sincospif_stret
__sinh_finite
__sinhf_finite
__sinhl_finite
__sinpi
__sinpif
__sqrt_finite
__sqrtf_finite
__sqrtl_finite
__stpcpy_chk
__stpncpy_chk
__strcpy_chk
__strdup
__strncpy_chk
__strndup
__strtok_r
access
acosf
acosh
acoshf
acoshl
acosl
asinf
asinh
asinhf
asinhl
asinl
atan2
atan2f
atan2l
atanf
atanh
atanhf
atanhl
atanl
atof
atoi
atol
atoll
bcmp
bcopy
bzero
cabs
cabsf
cabsl
calloc
cbrt
cbrtf
cbrtl
ceil
ceilf
ceill
chmod
chown
clearerr
closedir
copysign
copysignf
copysignl
cosf
cosh
coshf
coshl
cosl
ctermid
exp10
exp10f
exp10l
exp2
exp2f
exp2l
expf
expl
expm1
expm1f
expm1l
fabs
fabsf
fabsl
fclose
fdopen
feof
ferror
fflush
ffsl
ffsll
fgetc
fgetc_unlocked
fgetpos
fgets
fgets_unlocked
fileno
fiprintf
flockfile
floor
floorf
floorl
flsl
flsll
fmax
fmaxf
fmaxl
fmin
fminf
fminl
fmod
fmodf
fmodl
fopen
fopen64
fprintf
fputc
fputc_unlocked
fputs
fputs_unlocked
fread
fread_unlocked
frexp
frexpf
frexpl
fscanf
fseek
fseeko
fseeko64
fsetpos
fstat
fstat64
fstatvfs
fstatvfs64
ftell
ftello
ftello64
ftrylockfile
funlockfile
fwrite
fwrite_unlocked
getc
getc_unlocked
getchar
getchar_unlocked
getenv
getitimer
getlogin_r
getpwnam
gets
gettimeofday
htonl
htons
iprintf
isascii
isdigit
labs
lchown
ldexp
ldexpf
ldexpl
llabs
log10
log10f
log10l
log1p
log1pf
log1pl
log2
log2f
log2l
logb
logbf
logbl
logf
logl
lstat
lstat64
memalign
memccpy
memchr
memcmp
memcpy
memmove
mempcpy
memrchr
memset
mkdir
mktime
modf
modff
modfl
nearbyint
nearbyintf
nearbyintl
ntohl
ntohs
open
open64
opendir
pclose
perror
popen
posix_memalign
powf
powl
pread
printf
putc
putc_unlocked
putchar
putchar_unlocked
puts
pwrite
qsort
read
readlink
realloc
reallocf
realpath
remove
rename
rewind
rint
rintf
rintl
rmdir
round
roundf
roundl
scanf
setbuf
setitimer
setvbuf
sinf
sinh
sinhf
sinhl
sinl
siprintf
snprintf
sprintf
sqrt
sqrtf
sqrtl
sscanf
stat
stat64
statvfs
statvfs64
stpcpy
stpncpy
strcasecmp
strcat
strchr
strcmp
strcoll
strcpy
strcspn
strdup
strlen
strncasecmp
strncat
strncmp
strncpy
strndup
strnlen
strpbrk
strrchr
strspn
strstr
strtod
strtof
strtok
strtok_r
strtol
strtold
strtoll
strtoul
strtoull
strxfrm
system
tanf
tanh
tanhf
tanhl
tanl
times
tmpfile
tmpfile64
toascii
truncf
truncl
uname
ungetc
unlink
unsetenv
utime
utimes
valloc
vfprintf
vfscanf
vprintf
vscanf
vsnprintf
vsprintf
vsscanf
wcslen
write
vceilf
vfabsf
llvm.fabs.f32
vfloorf
vsqrtf
llvm.sqrt.f32
vexpf
llvm.exp.f32
vexpm1f
vlogf
llvm.log.f32
vlog1pf
vlog10f
llvm.log10.f32
vlogbf
vsinf
llvm.sin.f32
vcosf
llvm.cos.f32
vtanf
vasinf
vacosf
vatanf
vsinhf
vcoshf
vtanhf
vasinhf
vacoshf
vatanhf
__svml_sin2
__svml_sin4
__svml_sin8
__svml_sinf4
__svml_sinf8
__svml_sinf16
llvm.sin.f64
__svml_cos2
__svml_cos4
__svml_cos8
__svml_cosf4
__svml_cosf8
__svml_cosf16
llvm.cos.f64
__svml_pow2
__svml_pow4
__svml_pow8
__svml_powf4
__svml_powf8
__svml_powf16
llvm.pow.f64
llvm.pow.f32
__svml_exp2
__svml_exp4
__svml_exp8
__svml_expf4
__svml_expf8
__svml_expf16
llvm.exp.f64
__svml_log2
__svml_log4
__svml_log8
__svml_logf4
__svml_logf8
__svml_logf16
llvm.log.f64
fwrite$UNIX2003
fputs$UNIX2003
_copysign
__exp10
__exp10f
Target Library Information
targetlibinfo
costmodel-reduxcost
Recognize reduction patterns.
Target Transform Information
enable-tbaa
Cycle found in TBAA metadata.
Type-Based Alias Analysis
enable-scoped-noalias
Scoped NoAlias Alias Analysis
scoped-noalias
notconstant<
constantrange<
constant<
dom-conditions-max-uses
value-tracking
BadAssumption
Detected conflicting code assumptions. Program may have undefined behavior, or compiler may have internal error.
static-func-full-module-prefix
Use full module build paths in the profile counter names for static functions.
static-func-strip-dirname-prefix
Strip specified level of directory name from source path in the profile counter name for static functions.
, calls:
 sampled lines
Samples collected in the function's body {
No samples collected in the function's body
Samples collected in inlined callsites {
: inlined callee: 
No inlined callsites in this function
llvm.sampleprof
Success
Invalid sample profile data (bad magic)
Unsupported sample profile format version
Too much profile data
Truncated profile data
Malformed sample profile data
Unrecognized sample profile encoding format
Profile encoding format unsupported for writing operations
Truncated function name table
Unimplemented feature
Counter overflow
Expected 'mangled_name:NUM:NUM', found 
Expected 'NUM[.NUM]: NUM[ mangled_name:NUM]*', found 
Unexpected end of memory buffer: 
adcg
Unexpected file type: 
Unexpected version: 
invalid hexadecimal floating-point constant: expected at least one significand digit
invalid hexadecimal floating-point constant: expected exponent part 'p'
invalid hexadecimal floating-point constant: expected at least one exponent digit
unterminated comment
invalid binary number
invalid hexdecimal number
invalid decimal number
invalid hexadecimal number
invalid octal number
unterminated single quote
single quote way too long
unterminated string constant
invalid character in input
asm-macro-max-nesting-depth
The maximum nesting depth allowed for assembly macros.
missing expression
Recursive use of '
redefinition of '
invalid assignment to '
invalid reassignment of non-absolute variable '
.set
.equ
.equiv
.ascii
.asciz
.string
.byte
.short
.value
.2byte
.long
.4byte
.quad
.8byte
.octa
.single
.float
.double
.align
.align32
.balign
.balignw
.balignl
.p2align
.p2alignw
.p2alignl
.org
.fill
.zero
.extern
.globl
.global
.lazy_reference
.no_dead_strip
.symbol_resolver
.private_extern
.reference
.weak_definition
.weak_reference
.weak_def_can_be_hidden
.comm
.common
.lcomm
.abort
.include
.incbin
.code16
.code16gcc
.rept
.rep
.irp
.irpc
.endr
.bundle_align_mode
.bundle_lock
.bundle_unlock
.ifeq
.ifge
.ifgt
.ifle
.iflt
.ifne
.ifb
.ifnb
.ifc
.ifeqs
.ifnc
.ifnes
.ifdef
.ifndef
.ifnotdef
.elseif
.else
.end
.endif
.skip
.file
.line
.stabs
.cv_file
.cv_func_id
.cv_loc
.cv_linetable
.cv_inline_linetable
.cv_inline_site_id
.cv_def_range
.cv_stringtable
.cv_filechecksums
.cv_filechecksumoffset
.cv_fpo_data
.sleb128
.uleb128
.cfi_sections
.cfi_startproc
.cfi_endproc
.cfi_def_cfa
.cfi_def_cfa_offset
.cfi_adjust_cfa_offset
.cfi_def_cfa_register
.cfi_offset
.cfi_rel_offset
.cfi_personality
.cfi_lsda
.cfi_remember_state
.cfi_restore_state
.cfi_same_value
.cfi_restore
.cfi_escape
.cfi_return_column
.cfi_signal_frame
.cfi_undefined
.cfi_register
.cfi_window_save
.macros_on
.macros_off
.macro
.exitm
.endm
.endmacro
.purgem
.err
.error
.warning
.altmacro
.noaltmacro
.reloc
.dc.a
.dc.b
.dc.d
.dc.l
.dc.s
.dc.w
.dc.x
.dcb
.dcb.b
.dcb.d
.dcb.l
.dcb.s
.dcb.w
.dcb.x
.ds.b
.ds.d
.ds.l
.ds.p
.ds.s
.ds.w
.ds.x
.print
.addrsig
.addrsig_sym
unmatched .ifs or .elses
unassigned file number: 
 for .file directives
assembler local symbol '
' not defined
directional label undefined
unexpected token at start of statement
invalid use of pseudo-symbol '.' as a label
 not currently supported for this target
unknown directive
__emit
_EMIT
__EMIT
parsed instruction: [
unexpected token in '.if' directive
unexpected token in '.ifb' directive
unexpected token in '.ifc' directive
expected string parameter for '.ifeqs' directive
expected string parameter for '.ifnes' directive
expected comma after first string for '.ifeqs' directive
expected comma after first string for '.ifnes' directive
expected identifier after '.ifdef'
unexpected token in '.ifdef'
Encountered a .elseif that doesn't follow an .if or  an .elseif
unexpected token in '.elseif' directive
unexpected token in '.else' directive
Encountered a .else that doesn't follow  an .if or an .elseif
unexpected token in '.endif' directive
Encountered a .endif that doesn't follow an .if or .else
macros cannot be nested more than 
 levels deep.
 Use -asm-macro-max-nesting-depth to increase this limit.
.endmacro
<instantiation>
invalid argument identifier for formal argument
expected '=' after formal parameter identifier
cannot mix positional and keyword arguments
expected absolute expression
parameter named '
' does not exist for macro '
missing value for required parameter '
' in macro '
too many positional arguments
unexpected token in macro instantiation
unbalanced parentheses in macro argument
Wrong number of arguments
expected identifier
 in '
' directive
out of range literal value
unknown token in expression
unexpected token in directive
infinity
invalid floating point literal
 in directive
p2align directive with no operand(s) is ignored
invalid alignment value
alignment must be a power of 2
alignment directive can never be satisfied in this many bytes, ignoring maximum bytes expression
maximum bytes expression exceeds alignment and has no effect
 in '.org' directive
unexpected token in '.fill' directive
'.fill' directive with negative size has no effect
'.fill' directive with size greater than 8 has been truncated to 8
'.fill' directive pattern has been truncated to 32-bits
unexpected token in '.zero' directive
non-local symbol required
unable to emit symbol attribute
expected identifier in directive
alignment not supported on this target
unexpected token in '.comm' or '.lcomm' directive
invalid '.comm' or '.lcomm' directive size, can't be less than zero
invalid '.comm' or '.lcomm' directive alignment, can't be less than zero
unexpected token in '.abort' directive
.abort detected. Assembly stopping.
.abort '
' detected. Assembly stopping.
expected string in '.include' directive
unexpected token in '.include' directive
Could not find include file '
expected string in '.incbin' directive
unexpected token in '.incbin' directive
skip is negative
Could not find incbin file '
negative count has no effect
unexpected token in '
Count is negative
no matching '.endr' in definition
unexpected token in '.endr' directive
.endr
expected identifier in '.irp' directive
expected comma in '.irp' directive
expected End of Statement
expected identifier in '.irpc' directive
expected comma in '.irpc' directive
unexpected token in '.irpc' directive
expected end of statement
unmatched '.endr' directive
unexpected token after expression in '.bundle_align_mode' directive
invalid bundle alignment size (expected between 0 and 30)
invalid option for '.bundle_lock' directive
unexpected token after '.bundle_lock' directive option
unexpected token in '.bundle_unlock' directive
in '
negative file number
unexpected token in '.file' directive
explicit path specified, but no file number
MD5 checksum specified, but no file number
source specified, but no file number
file 0 not supported prior to DWARF-5
inconsistent use of MD5 checksums
unexpected token in '.line' directive
unexpected token in '.loc' directive
file number less than one in '.loc' directive
unassigned file number in '.loc' directive
line number less than zero in '.loc' directive
column position less than zero in '.loc' directive
is_stmt value not 0 or 1
is_stmt value not the constant value of 0 or 1
isa number less than zero
isa number not a constant value
unknown sub-directive in '.loc' directive
unsupported directive '.stabs'
expected file number in '.cv_file' directive
file number less than one
unexpected token in '.cv_file' directive
expected checksum kind in '.cv_file' directive
file number already allocated
unexpected token in '.cv_func_id' directive
function id already allocated
expected function id in '
expected function id within range [0, UINT_MAX)
expected 'within' identifier in '.cv_inline_site_id' directive
expected 'inlined_at' identifier in '.cv_inline_site_id' directive
expected line number after 'inlined_at'
unexpected token in '.cv_inline_site_id' directive
expected integer in '
file number less than one in '
unassigned file number in '
line number less than zero in '.cv_loc' directive
column position less than zero in '.cv_loc' directive
unexpected token in '.cv_loc' directive
unknown sub-directive in '.cv_loc' directive
unexpected token in '.cv_linetable' directive
expected SourceField in '.cv_inline_linetable' directive
File id less than zero in '.cv_inline_linetable' directive
expected SourceLineNum in '.cv_inline_linetable' directive
Line number less than zero in '.cv_inline_linetable' directive
Expected End of Statement
expected symbol name
unexpected tokens
 in '.cv_fpo_data' directive
Expected an identifier
 in '.cfi_startproc' directive
unsupported encoding.
unexpected token in '.cfi_signal_frame'
expected identifier in '.macro' directive
Vararg parameter '
' should be last one in the list of parameters.
macro '
' has multiple parameters named '
missing parameter qualifier for '
 is not a valid parameter qualifier for '
pointless default value for required parameter '
no matching '.endmacro' in definition
macro defined with named parameters which are not used in macro body, possible positional parameter found in body which will have no effect
unexpected '
' in file, no current macro definition
expected identifier in '.purgem' directive
unexpected token in '.purgem' directive
' is not defined
unexpected token in '.end' directive
.err encountered
.error directive invoked in source file
.error argument must be a string
.warning directive invoked in source file
.warning argument must be a string
expected end of statement in '.warning' directive
expression is not a constant value
expression is negative
expected comma
expected relocation name
expression must be relocatable
unexpected token in .reloc directive
unknown relocation name
' directive with negative repeat count has no effect
literal value out of range for directive
expected double quoted string after .print
expected identifier in '.addrsig_sym' directive
unexpected expression in _emit
unexpected expression in align
literal value not a power of two greater then zero
 * $$
 + $$
byte ptr 
word ptr 
dword ptr 
qword ptr 
xword ptr 
xmmword ptr 
ymmword ptr 
.even
while in macro instantiation
unexpected backslash at end of string
invalid octal escape sequence (out of range)
invalid escape sequence (unrecognized character)
unexpected symbol modifier following '@'
invalid variant '
invalid modifier '
' (no symbols present)
invalid variant on expression '
' (already modified)
invalid token in expression
expected symbol variant after '@'
unexpected token in variant, expected ')'
expected a symbol reference
unexpected modifier on variable reference
brackets expression not supported on this target
expected '(' after operator
expected ')' in parentheses expression
expected ']' in brackets expression
expected section directive before assembly directive
.def
.scl
.endef
.secrel32
.symidx
.safeseh
.secidx
.linkonce
.rva
.seh_proc
.seh_endproc
.seh_startchained
.seh_endchained
.seh_handler
.seh_handlerdata
.seh_pushreg
.seh_setframe
.seh_stackalloc
.seh_savereg
.seh_savexmm
.seh_pushframe
.seh_endprologue
unexpected token in section switching directive
expected comdat type such as 'discard' or 'largest' after protection bits
expected comma in directive
conflicting section flags 'b' and 'd'.
unrecognized COMDAT type '
invalid '.secrel32' directive offset, can't be less than zero or greater than std::numeric_limits<uint32_t>::max()
cannot make section associative with .linkonce
section '
' is already linkonce
invalid '.rva' directive offset, can't be less than -2147483648 or greater than 2147483647
you must specify one or both of @unwind or @except
a handler attribute must begin with '@'
expected @unwind or @except
register can't be represented in SEH unwind info
register number is too high
you must specify a stack pointer offset
you must specify an offset on the stack
expected @code
.alt_entry
.indirect_symbol
.lsym
.dump
.secure_log_unique
.secure_log_reset
.zerofill
.data_region
.end_data_region
.const
.const_data
.constructor
.cstring
.destructor
.dyld
.fvmlib_init0
.fvmlib_init1
.lazy_symbol_pointer
.linker_option
.dyld_lib
.literal16
.literal4
.literal8
.mod_init_func
.mod_term_func
.non_lazy_symbol_pointer
.thread_local_variable_pointer
.objc_cat_cls_meth
.objc_cat_inst_meth
.objc_category
.objc_class
.objc_class_names
.objc_class_vars
.objc_cls_meth
.objc_cls_refs
.objc_inst_meth
.objc_instance_vars
.objc_message_refs
.objc_meta_class
.objc_meth_var_names
.objc_meth_var_types
.objc_module_info
.objc_protocol
.objc_selector_strs
.objc_string_object
.objc_symbols
.picsymbol_stub
.static_const
.static_data
.symbol_stub
.thread_init_func
.tlv
.bridgeos_version_min
.build_version
.alt_entry must preceed symbol definition
unexpected token in '.desc' directive
indirect symbol not in a symbol pointer or stub section
expected identifier in .indirect_symbol directive
non-local symbol required in directive
unable to emit indirect symbol attribute for: 
unexpected token in '.indirect_symbol' directive
unexpected token in '.lsym' directive
directive '.lsym' is unsupported
unexpected token in '.subsections_via_symbols' directive
expected string in '.dump' or '.load' directive
unexpected token in '.dump' or '.load' directive
ignoring directive .dump for now
ignoring directive .load for now
expected identifier after '.section' directive
unexpected token in '.section' directive
section "
" is deprecated
change section name to "
unexpected token in '.secure_log_unique' directive
.secure_log_unique specified multiple times
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
can't open secure log file: 
unexpected token in '.secure_log_reset' directive
unexpected token in '.tbss' directive
invalid '.tbss' directive size, can't be less thanzero
invalid '.tbss' alignment, can't be lessthan zero
expected segment name after '.zerofill' directive
expected section name after comma in '.zerofill' directive
unexpected token in '.zerofill' directive
invalid '.zerofill' directive size, can't be less than zero
invalid '.zerofill' directive alignment, can't be less than zero
expected region type after '.data_region' directive
unknown region type in '.data_region' directive
unexpected token in '.end_data_region' directive
__dyld
__fvmlib_init0
__fvmlib_init1
expected string in '
unexpected token in '.dyld_lib' directive
__OBJC
__cat_cls_meth
__cat_inst_meth
__category
__class
__class_vars
__cls_meth
__cls_refs
__inst_meth
__instance_vars
__message_refs
__meta_class
__module_info
__protocol
__selector_strs
__string_object
__symbols
__picsymbol_stub
__static_const
__static_data
__symbol_stub
invalid OS update specifier, comma expected
OS update
invalid 
 major version number, integer expected
 major version number
 minor version number required, comma expected
 minor version number, integer expected
 minor version number
 version number, integer expected
 version number
SDK subminor
 used while targeting 
overriding previous version directive
previous definition is here
platform name expected
unknown platform name
version number required, comma expected
 in '.build_version' directive
.data.rel
.section
.pushsection
.popsection
.size
.previous
.type
.ident
.symver
.version
.weakref
.weak
.local
.protected
.internal
.hidden
.subsection
.cg_profile
expected string in directive
unknown flag
setting incorrect section attributes for 
Section cannot specifiy a group name while also acting as a member of the last group
Mergeable section must specify the type
Group section must specify the type
.fini_array.
.preinit_array.
unknown section type
DWARF2 only supports one section per compilation unit
.rodata.
.text.
.data.
expected '@<type>', '%<type>' or "<type>"
expected '%<type>' or "<type>"
expected the entry size
entry size must be positive
expected group name
invalid group name
invalid linkage
Linkage must be 'comdat'
expected metadata symbol
invalid metadata symbol
symbol is not in a section: 
expected 'unique'
expected commma
unique id must be positive
unique id is too large
.popsection without corresponding .pushsection
.previous without corresponding .section
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '%<type>' or "<type>"
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '@<type>', '%<type>' or "<type>"
expected symbol type in directive
unsupported attribute in '.type' directive
unexpected token in '.type' directive
unexpected token in '.ident' directive
expected a comma
expected a '@' in the name
unexpected token in '.version' directive
expected integer count in '.cg_profile' directive
unexpected token
A @@ version cannot be undefined
Multiple symbol versions defined for 
No relocation available to represent this relative expression
' can not be undefined in a subtraction expression
Cannot represent a difference across sections
.strtab
.llvm.call-graph-profile
.llvm_addrsig
ZLIB
.rela
.rel
.symtab
Undefined temporary symbol
.symtab_shndxr
Size expression must be absolute.
A dwo section may not contain relocations
A relocation may not refer to a dwo section
dwo only supported with ELF
FK_Data_1
FK_Data_2
FK_Data_4
FK_Data_8
FK_PCRel_1
FK_PCRel_2
FK_PCRel_4
FK_PCRel_8
FK_GPRel_1
FK_GPRel_2
FK_GPRel_4
FK_GPRel_8
FK_DTPRel_4
FK_DTPRel_8
FK_TPRel_4
FK_TPRel_8
FK_SecRel_1
FK_SecRel_2
FK_SecRel_4
FK_SecRel_8
FK_Data_Add_1
FK_Data_Add_2
FK_Data_Add_4
FK_Data_Add_8
FK_Data_Sub_1
FK_Data_Sub_2
FK_Data_Sub_4
FK_Data_Sub_8
dwarf-extended-loc
Disable emission of the extended flags in .loc directives.
NO_APP
.code32
.code64
.zero
.ascii
.asciz
.byte
.short
.long
.quad
.globl
.weak
 InlineAsm Start
 InlineAsm End
.weak_reference 
.space
.cfi_startproc
 simple
.cfi_endproc
.syntax unified
.subsections_via_symbols
.linker_option "
.dyld_lib "
.data_region
.data_region jt8
.data_region jt16
.data_region jt32
.end_data_region
.watchos_version_min
.tvos_version_min
.ios_version_min
.macosx_version_min
sdk_version 
.build_version 
iossimulator
tvossimulator
watchossimulator
.thumb_func
.set 
.weakref 
.type
gnu_indirect_function
object
tls_object
notype
gnu_unique_object
.hidden
.indirect_symbol
.internal
.lazy_reference
.local
.no_dead_strip
.symbol_resolver
.alt_entry
.private_extern
.protected
.reference
.weak_definition
.weak_def_can_be_hidden
.desc
.def
.scl
.endef
.safeseh
.symidx
.secidx
.secrel32
.rva
.size
AdrpAdrp
AdrpLdr
AdrpAddLdr
AdrpLdrGotLdr
AdrpAddStr
AdrpLdrGotStr
AdrpAdd
AdrpLdrGot
.loh
.comm
.lcomm
.zerofill 
.tbss 
Don't know how to emit this value.
.uleb128 
.sleb128 
.fill
, 0x
.p2align
.p2alignw 
.p2alignl 
.org 
.file
.ident
 md5 0x
 source 
.loc
 basic_block
 prologue_end
 epilogue_begin
 is_stmt 
 isa 
 discriminator 
.cv_file
.cv_func_id 
.cv_inline_site_id 
 inlined_at 
.cv_loc
.cv_linetable
.cv_inline_linetable
.cv_def_range
.cv_stringtable
.cv_filechecksums
.cv_filechecksumoffset
.cv_fpo_data
.cfi_sections 
, .debug_frame
.cfi_def_cfa 
.cfi_def_cfa_offset 
.cfi_def_cfa_register 
.cfi_offset 
.cfi_personality 
.cfi_lsda 
.cfi_remember_state
.cfi_restore_state
.cfi_same_value 
.cfi_restore 
.cfi_rel_offset 
.cfi_adjust_cfa_offset 
.cfi_escape 
.cfi_return_column 
.cfi_signal_frame
.cfi_undefined 
.cfi_register 
.cfi_window_save
.seh_proc 
.seh_endproc
.seh_startchained
.seh_endchained
.seh_pushreg 
.seh_setframe 
.seh_stackalloc 
.seh_savereg 
.seh_savexmm 
.seh_pushframe
 @code
.seh_endprologue
.seh_handler 
, @unwind
, @except
.seh_handlerdata
.cg_profile 
.intel_syntax noprefix
.reloc 
.addrsig
.addrsig_sym 
encoding: [
  fixup 
offset: 
, kind: 
.bundle_align_mode 
.bundle_lock
 align_to_end
.bundle_unlock
expected relocatable expression
unsupported subtraction of qualified symbol
expected assembly-time absolute expression
invalid number of bytes
invalid .org offset '
' (at offset '
unable to write NOP sequence of 
cannot have fixups in virtual section!
non-zero initializer found in section '
non-zero initializer found in virtual section
sleb128 and uleb128 expressions must be absolute
<MCAssembler
  Sections:[
    
    
  Symbols:[
           
, Index:
undefined .align directive, value size '
' is not a divisor of padding size '
unable to write nop sequence of 
checksum_offset
strtab_begin
strtab_end
filechecksums_begin
filechecksums_end
linetable_begin
linetable_end
Segment for file '
' begins
as-secure-log-file-name
As secure log file name (initialized from AS_SECURE_LOG_FILE env variable)
AS_SECURE_LOG_FILE
$frame_escape_
$parent_frame_offset
__ehtable$
.group
inconsistent use of embedded source
llvm-mc (based on LLVM 31001.638.1)
Fragment can't be larger than a bundle size
Padding cannot exceed 255 bytes
Unterminated .bundle_lock when changing a section
Symbol: 
 redeclared as different type
Emitting values inside a locked bundle is forbidden
.comment
Reference to undefined temporary symbol 
.bundle_align_mode cannot be changed once set
.bundle_lock forbidden when bundling is disabled
.bundle_unlock forbidden when bundling is disabled
.bundle_unlock without matching lock
Empty bundle-locked group is forbidden
A Bundle can only have one Subtarget.
<<invalid>>
<<none>>
DTPOFF
DTPREL
GOTOFF
GOTREL
GOTPCREL
GOTTPOFF
INDNTPOFF
NTPOFF
GOTNTPOFF
TLSGD
TLSLD
TLSLDM
TPOFF
TPREL
tlscall
tlsdesc
TLVP
TLVPPAGE
TLVPPAGEOFF
PAGE
PAGEOFF
GOTPAGE
GOTPAGEOFF
SECREL32
SIZE
WEAKREF
ABS8
GOT_PREL
target1
target2
prel31
sbrel
tlsldo
tlsdescseq
hlo8
diff8
diff16
diff32
high
higha
higher
highera
highest
highesta
got@l
got@h
got@ha
tocbase
toc@l
toc@h
toc@ha
dtpmod
tprel@l
tprel@h
tprel@ha
tprel@high
tprel@higha
tprel@higher
tprel@highera
tprel@highest
tprel@highesta
dtprel@l
dtprel@h
dtprel@ha
dtprel@high
dtprel@higha
dtprel@higher
dtprel@highera
dtprel@highest
dtprel@highesta
got@tprel
got@tprel@l
got@tprel@h
got@tprel@ha
got@dtprel
got@dtprel@l
got@dtprel@h
got@dtprel@ha
got@tlsgd
got@tlsgd@l
got@tlsgd@h
got@tlsgd@ha
tlsgd
got@tlsld
got@tlsld@l
got@tlsld@h
got@tlsld@ha
tlsld
local
IMGREL
PCREL
LO16
HI16
GPREL
GDGOT
LDGOT
GDPLT
LDPLT
IEGOT
TYPEINDEX
gotpcrel32@lo
gotpcrel32@hi
rel32@lo
rel32@hi
rel64
agx_lo
agx_hi
agx_ss
agx_got64
agx_got32
agx_gotss
agx_got_tls
pcrel
expression could not be evaluated
' could not be evaluated in a subtraction expression
Common symbol '
' cannot be used in assignment expr
<MCFixup
 Offset:
 Value:
 Kind:
MCAlignFragment
MCDataFragment
MCCompactEncodedInstFragment
MCFillFragment
MCRelaxableFragment
MCOrgFragment
MCDwarfFragment
MCDwarfCallFrameFragment
MCLEBFragment
MCPaddingFragment
MCSymbolIdFragment
MCCVInlineLineTableFragment
MCCVDefRangeTableFragment
MCDummyFragment
<MCFragment 
 LayoutOrder:
 HasInstructions:
 BundlePadding:
 (emit nops)
       
 Alignment:
 ValueSize:
 MaxBytesToEmit:
 Contents:[
       
 Fixups:[
                
 NumValues:
 Inst:
 AddrDelta:
 LineDelta:
 Signed:
 PaddingPoliciesMask:
 IsInsertionPoint:
 Size:
 InstSize:
 Sym:
 RangeStart:
 RangeEnd:
unable to evaluate offset for variable '
unable to evaluate offset to undefined symbol '
<MCOperand 
INVALID
Reg:
Imm:
FPImm:
Expr:(
Inst:(
UNDEFINED
<MCInst 
<MCInst #
The usage of .zerofill is restricted to sections of ZEROFILL type. Use .zero or .space instead.
__TEXT
__eh_frame
__text
__data
__thread_data
__thread_bss
__thread_vars
__thread_init
__cstring
__ustring
__literal4
__literal8
__literal16
__const
__textcoal_nt
__const_coal
__datacoal_nt
__common
__bss
__la_symbol_ptr
__nl_symbol_ptr
__thread_ptr
__gcc_except_tab
__LD
__compact_unwind
__DWARF
__debug_names
debug_names_begin
__apple_names
names_begin
__apple_objc
objc_begin
__apple_namespac
namespac_begin
__apple_types
types_begin
__swift_ast
__debug_abbrev
section_abbrev
__debug_info
section_info
__debug_line
section_line
__debug_line_str
section_line_str
__debug_frame
__debug_pubnames
__debug_pubtypes
__debug_gnu_pubn
__debug_gnu_pubt
__debug_str
info_string
__debug_str_offs
section_str_off
__debug_loc
section_debug_loc
__debug_aranges
__debug_ranges
debug_range
__debug_rnglists
__debug_macinfo
debug_macinfo
__debug_inlined
__debug_cu_index
__debug_tu_index
__LLVM_STACKMAPS
__llvm_stackmaps
__LLVM_FAULTMAPS
__llvm_faultmaps
.bss
.text
.data
.rodata
.tdata
.tbss
.data.rel.ro
.rodata.cst4
.rodata.cst8
.rodata.cst16
.rodata.cst32
.gcc_except_table
.debug_abbrev
.debug_info
.debug_line
.debug_line_str
.debug_frame
.debug_pubnames
.debug_pubtypes
.debug_gnu_pubnames
.debug_gnu_pubtypes
.debug_str
.debug_loc
.debug_aranges
.debug_ranges
.debug_macinfo
.debug_names
.apple_names
.apple_objc
.apple_namespaces
.apple_types
.debug_str_offsets
.debug_addr
.debug_rnglists
.debug_info.dwo
.debug_types.dwo
.debug_abbrev.dwo
.debug_str.dwo
.debug_line.dwo
.debug_loc.dwo
.debug_str_offsets.dwo
.debug_rnglists.dwo
.debug_cu_index
.debug_tu_index
.llvm_stackmaps
.llvm_faultmaps
.eh_frame
.stack_sizes
.rdata
.debug$S
.debug$T
.debug$H
section_info_dwo
section_types_dwo
section_abbrev_dwo
skel_string
skel_loc
section_str_off_dwo
addr_sec
.drectve
.pdata
.xdata
.sxdata
.gfids$y
.tls$
Cannot initialize MC for non-Windows COFF object files.
Cannot initialize MC for MetalLib object files.
Cannot initialize MC for unknown object file format.
.debug_types
Cannot get DWARF types section for this object file format: not implemented.
value evaluated as 
 is out of range.
This file format doesn't support weak aliases.
Cannot evaluate subsection number
Subsection number out of range
'.fill' directive with negative repeat count has no effect
target does not implement codeview register mapping
unknown codeview register
sec_end
Mismatched bundle_lock/unlock directives
<MCSection
 Fragments:[
      
      
.linkonce
one_only
discard
same_size
same_contents
associative
newest
.section
,#alloc
,#execinstr
,#write
,#exclude
,#tls
init_array
fini_array
preinit_array
nobits
progbits
0x7000001e
llvm_odrtab
llvm_linker_options
llvm_call_graph_profile
unsupported type 0x
 for section 
,comdat
,unique,
.subsection
0123456789_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
,none,
mach-o section specifier requires a segment whose length is between 1 and 16 characters
mach-o section specifier requires a segment and section separated by a comma
mach-o section specifier requires a section whose length is between 1 and 16 characters
mach-o section specifier uses an unknown section type
mach-o section specifier of type 'symbol_stubs' requires a size specifier
mach-o section specifier has invalid attribute
mach-o section specifier cannot have a stub size specified because it does not have type 'symbol_stubs'
mach-o section specifier has a malformed stub size
regular
S_REGULAR
S_ZEROFILL
cstring_literals
S_CSTRING_LITERALS
4byte_literals
S_4BYTE_LITERALS
8byte_literals
S_8BYTE_LITERALS
literal_pointers
S_LITERAL_POINTERS
non_lazy_symbol_pointers
S_NON_LAZY_SYMBOL_POINTERS
lazy_symbol_pointers
S_LAZY_SYMBOL_POINTERS
symbol_stubs
S_SYMBOL_STUBS
mod_init_funcs
S_MOD_INIT_FUNC_POINTERS
mod_term_funcs
S_MOD_TERM_FUNC_POINTERS
coalesced
S_COALESCED
S_GB_ZEROFILL
interposing
S_INTERPOSING
16byte_literals
S_16BYTE_LITERALS
S_DTRACE_DOF
S_LAZY_DYLIB_SYMBOL_POINTERS
thread_local_regular
S_THREAD_LOCAL_REGULAR
thread_local_zerofill
S_THREAD_LOCAL_ZEROFILL
thread_local_variables
S_THREAD_LOCAL_VARIABLES
thread_local_variable_pointers
S_THREAD_LOCAL_VARIABLE_POINTERS
thread_local_init_function_pointers
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
pure_instructions
S_ATTR_PURE_INSTRUCTIONS
no_toc
S_ATTR_NO_TOC
strip_static_syms
S_ATTR_STRIP_STATIC_SYMS
no_dead_strip
S_ATTR_NO_DEAD_STRIP
live_support
S_ATTR_LIVE_SUPPORT
self_modifying_code
S_ATTR_SELF_MODIFYING_CODE
debug
S_ATTR_DEBUG
S_ATTR_SOME_INSTRUCTIONS
S_ATTR_EXT_RELOC
S_ATTR_LOC_RELOC
unsupported directive in streamer
line_table_start
this directive must appear between .cfi_startproc and .cfi_endproc directives
parent function id not introduced by .cv_func_id or .cv_inline_site_id
function id not introduced by .cv_func_id or .cv_inline_site_id
all .cv_loc directives for a function must be in the same section
invalid symbol redefinition
starting new .cfi frame before finishing the previous one
.seh_* directives are not supported on this target
.seh_ directive must appear within an active frame
Starting a function before ending the previous one!
Not all chained regions terminated!
End of a chained region outside a chained region!
Chained unwind areas can't have handlers!
Don't know what kind of handler this is!
frame register and offset can be set at most once
offset is not a multiple of 16
frame offset must be less than or equal to 240
stack allocation size must be non-zero
stack allocation size is not a multiple of 8
register save offset is not 8 byte aligned
If present, PushMachFrame must be the first UOP
EmitRawText called on an MCStreamer that doesn't support it,  something must not be fully mc'ized
Unfinished frame!
' is not a recognized processor for this target
 (ignoring processor)
Symbol name with unsupported characters
indirect symbol '
' not in a symbol pointer or stub section
Data region not terminated
invalid 'common' alignment '
' for '
' is not a recognized feature for this target
 (ignoring feature)
+help
Available CPUs for this target:
  %-*s - %s.
Available features for this target:
Use +feature to enable a feature, or -feature to disable it.
For example, llc -mcpu=mycpu -mattr=+feature1,-feature2
 Off=
, Sym=
, Addend=
, FixupSection=
section already has a defining function: 
relocations for function or section offsets are only supported in metadata sections
section symbol is required for relocation
relocations against un-named temporaries are not yet supported by wasm
__linear_memory
__indirect_function_table
undefined global symbol cannot be weak
section name and begin symbol should match: 
function sections must contain one function each
function symbols must have a size set with .size
data symbols must have a size set with .size: 
.size expression must be evaluatable
don't yet support defined globals
don't yet support global aliases
.fini_array sections are unsupported
only one .init_array section fragment supported
.init_array section should be aligned
.init_array section should be aligned for pointers
only data supported in .init_array section
.init_array section priority should start with '.'
invalid .init_array section priority
non-symbolic data in .init_array section
fixups in .init_array should be symbol references
symbols in .init_array should be for functions
symbols in .init_array should exist in symbtab
CODE
DATA
only data supported in data sections
only byte values supported for alignment
section size does not fit in a uint32_t
symbol not found in wasm index space: 
symbol not found in type index space: 
linking
two sections have the same comdat
conflicting sections for symbol
.weak.
.default
' can not be undefined
assembler label '
PE COFF object files can't have more than 2147483647 sections
Missing associated COMDAT section for section 
COFF string table is greater than 64 GB.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
CodeView Error: 
llvm.codeview
An unknown error has occurred.
The buffer is not large enough to read the requested number of bytes.
The CodeView record is corrupted.
There are no records
The requested operation is not supported.
The member record is of an unknown type.
0123456789ABCDEF
<unknown UDT>
{0} {1}::*
 const
 __unaligned
 __restrict
const 
__unaligned 
{0} {1}
{0} {1}::{2}
<field list>
<vftable {0} methods>
Buffer contains invalid APSInt type
LF_POINTER
LF_MODIFIER
LF_PROCEDURE
LF_MFUNCTION
LF_LABEL
LF_ARGLIST
LF_FIELDLIST
LF_ARRAY
LF_CLASS
LF_STRUCTURE
LF_INTERFACE
LF_UNION
LF_ENUM
LF_TYPESERVER2
LF_VFTABLE
LF_VTSHAPE
LF_BITFIELD
LF_BCLASS
LF_BINTERFACE
LF_VBCLASS
LF_IVBCLASS
LF_VFUNCTAB
LF_STMEMBER
LF_METHOD
LF_MEMBER
LF_NESTTYPE
LF_ONEMETHOD
LF_ENUMERATE
LF_INDEX
LF_FUNC_ID
LF_MFUNC_ID
LF_BUILDINFO
LF_SUBSTR_LIST
LF_STRING_ID
LF_UDT_SRC_LINE
LF_UDT_MOD_SRC_LINE
LF_METHODLIST
LF_PRECOMP
LF_ENDPRECOMP
LF_MODIFIER_16t
LF_POINTER_16t
LF_ARRAY_16t
LF_CLASS_16t
LF_STRUCTURE_16t
LF_UNION_16t
LF_ENUM_16t
LF_PROCEDURE_16t
LF_MFUNCTION_16t
LF_COBOL0_16t
LF_COBOL1
LF_BARRAY_16t
LF_NULLLEAF
LF_NOTTRAN
LF_DIMARRAY_16t
LF_VFTPATH_16t
LF_PRECOMP_16t
LF_OEM_16t
LF_TYPESERVER_ST
LF_SKIP_16t
LF_ARGLIST_16t
LF_DEFARG_16t
LF_LIST
LF_FIELDLIST_16t
LF_DERIVED_16t
LF_BITFIELD_16t
LF_METHODLIST_16t
LF_DIMCONU_16t
LF_DIMCONLU_16t
LF_DIMVARU_16t
LF_DIMVARLU_16t
LF_REFSYM
LF_BCLASS_16t
LF_VBCLASS_16t
LF_IVBCLASS_16t
LF_ENUMERATE_ST
LF_FRIENDFCN_16t
LF_INDEX_16t
LF_MEMBER_16t
LF_STMEMBER_16t
LF_METHOD_16t
LF_NESTTYPE_16t
LF_VFUNCTAB_16t
LF_FRIENDCLS_16t
LF_ONEMETHOD_16t
LF_VFUNCOFF_16t
LF_TI16_MAX
LF_ARRAY_ST
LF_CLASS_ST
LF_STRUCTURE_ST
LF_UNION_ST
LF_ENUM_ST
LF_COBOL0
LF_BARRAY
LF_DIMARRAY_ST
LF_VFTPATH
LF_PRECOMP_ST
LF_OEM
LF_ALIAS_ST
LF_OEM2
LF_SKIP
LF_DEFARG_ST
LF_DERIVED
LF_DIMCONU
LF_DIMCONLU
LF_DIMVARU
LF_DIMVARLU
LF_FRIENDFCN_ST
LF_MEMBER_ST
LF_STMEMBER_ST
LF_METHOD_ST
LF_NESTTYPE_ST
LF_FRIENDCLS
LF_ONEMETHOD_ST
LF_VFUNCOFF
LF_NESTTYPEEX_ST
LF_MEMBERMODIFY_ST
LF_MANAGED_ST
LF_ST_MAX
LF_TYPESERVER
LF_DIMARRAY
LF_ALIAS
LF_DEFARG
LF_FRIENDFCN
LF_NESTTYPEEX
LF_MEMBERMODIFY
LF_MANAGED
LF_STRIDED_ARRAY
LF_HLSL
LF_MODIFIER_EX
LF_VECTOR
LF_MATRIX
LF_NUMERIC
LF_CHAR
LF_SHORT
LF_USHORT
LF_LONG
LF_ULONG
LF_REAL32
LF_REAL64
LF_REAL80
LF_REAL128
LF_QUADWORD
LF_UQUADWORD
LF_REAL48
LF_COMPLEX32
LF_COMPLEX64
LF_COMPLEX80
LF_COMPLEX128
LF_VARSTRING
LF_OCTWORD
LF_UOCTWORD
LF_DECIMAL
LF_DATE
LF_UTF8STRING
LF_REAL16
LF_PAD0
LF_PAD1
LF_PAD2
LF_PAD3
LF_PAD4
LF_PAD5
LF_PAD6
LF_PAD7
LF_PAD8
LF_PAD9
LF_PAD10
LF_PAD11
LF_PAD12
LF_PAD13
LF_PAD14
LF_PAD15
Packed
HasConstructorOrDestructor
HasOverloadedOperator
Nested
ContainsNestedClass
HasOverloadedAssignmentOperator
HasConversionOperator
ForwardReference
Scoped
HasUniqueName
Sealed
Intrinsic
Private
Protected
Public
Pseudo
NoInherit
NoConstruct
CompilerGenerated
Vanilla
Virtual
Friend
IntroducingVirtual
PureVirtual
PureIntroducingVirtual
Near16
Far16
Huge16
BasedOnSegment
BasedOnValue
BasedOnSegmentValue
BasedOnAddress
BasedOnSegmentAddress
BasedOnType
BasedOnSelf
Near32
Far32
Near64
Pointer
LValueReference
PointerToDataMember
PointerToMemberFunction
RValueReference
SingleInheritanceData
MultipleInheritanceData
VirtualInheritanceData
GeneralData
SingleInheritanceFunction
MultipleInheritanceFunction
VirtualInheritanceFunction
GeneralFunction
Const
Volatile
Unaligned
NearC
FarC
NearPascal
FarPascal
NearFast
FarFast
NearStdCall
FarStdCall
NearSysCall
FarSysCall
ThisCall
MipsCall
Generic
AlphaCall
PpcCall
SHCall
ArmCall
AM33Call
TriCall
SH5Call
M32RCall
ClrCall
NearVector
CxxReturnUdt
Constructor
ConstructorWithVirtualBases
Near
TypeLeafKind
LeafData
StringData
NumArgs
ArgType
NumStrings
Strings
MemberCount
Properties
FieldList
DerivedFrom
VShape
SizeOf
LinkageName
NumEnumerators
UnderlyingType
FieldListType
ElementType
IndexType
CompleteClass
OverriddenVFTable
VFPtrOffset
VFTableName
MethodName
ClassType
FunctionType
ReturnType
CallingConvention
FunctionOptions
NumParameters
ArgListType
ThisType
ThisAdjustment
Method
VFTableOffset
ParentScope
Guid
PointeeType
PointerAttributes
PtrType
PtrMode
IsFlat
IsConst
IsVolatile
IsUnaligned
IsRestrict
Representation
ModifiedType
Modifiers
BitSize
BitOffset
VFEntryCount
SourceFile
LineNumber
Module
AccessSpecifier
MethodKind
MethodOptions
UnknownMember
MethodCount
MethodListIndex
FieldOffset
EnumValue
BaseType
BaseOffset
VBPtrType
VBPtrOffset
VBTableIndex
ContinuationIndex
Mode
StartIndex
Signature
PrecompFile
Modifier
Procedure
MemberFunction
Label
ArgList
Array
Class
Struct
Interface
Enum
TypeServer2
VFTable
VFTableShape
BitField
BaseClass
BaseInterface
VirtualBaseClass
IndirectVirtualBaseClass
VFPtr
StaticDataMember
OverloadedMethod
DataMember
NestedType
OneMethod
Enumerator
ListContinuation
FuncId
MemberFuncId
BuildInfo
StringList
StringId
UdtSourceLine
UdtModSourceLine
MethodOverloadList
Precomp
EndPrecomp
UnknownLeaf
 [ (
void*
<not translated>*
HRESULT*
signed char*
unsigned char*
char*
wchar_t*
char16_t*
char32_t*
__int8*
unsigned __int8*
short*
unsigned short*
__int16*
unsigned __int16*
long*
unsigned long*
int*
unsigned*
__int64*
unsigned __int64*
__int128*
unsigned __int128*
__half*
float*
__float48*
double*
long double*
__float128*
_Complex float*
_Complex double*
_Complex long double*
_Complex __float128*
bool*
__bool16*
__bool32*
__bool64*
<no type>
<unknown simple type>
print-summary-global-ids
Print the global id for each value when reading the module summary
Malformed block
Invalid record
Invalid bitcode signature
Invalid bitcode wrapper header
Unexpected end of file
Invalid value
Incompatible epoch: Bitcode '
' vs current: '
Could not find function in stream
Trying to materialize functions before seeing function blocks
Expect SubBlock
Expect function block
 (Producer: '
' Reader: 'LLVM 
APPLE_1_
Insufficient function protos
Invalid function metadata: incoming forward references
Invalid ID
Invalid cast
Explicit gep type does not match pointee type of pointer operand
EXTRACTVAL: Invalid instruction with 0 indices
EXTRACTVAL: Invalid type
EXTRACTVAL: Invalid struct index
EXTRACTVAL: Invalid array index
INSERTVAL: Invalid instruction with 0 indices
INSERTVAL: Invalid type
INSERTVAL: Invalid struct index
INSERTVAL: Invalid array index
Inserted value type doesn't match aggregate type
Invalid type for value
Explicit invoke type is not a function type
Callee is not a pointer
Callee is not of pointer to function type
Explicit invoke type does not match pointee type of callee operand
Insufficient operands to call
Personality function mismatch
Old-style alloca with a non-pointer type
Fast math flags indicator set for call with no FMF
Explicit call type is not a function type
Callee is not a pointer type
Explicit call type does not match pointee type of callee operand
Fast-math-flags specified for call without floating-point scalar or vector return type
Invalid instruction with no BB
Operand bundles found with no consumer
Never resolved value found in function
Invalid function metadata: outgoing forward refs
Invalid constant reference
Invalid constant type
Explicit gep operator type does not match pointee type of pointer operand
Invalid gep with no operands
Invalid value name
Invalid alignment value
Load/Store operand is not a pointer type
Explicit load/store type does not match pointee type of pointer operand
Cannot load/store from pointer
Never resolved function from blockaddress
Malformed global initializer set
Invalid multiple blocks
Unknown attribute kind (
Bitwidth for integer type out of range
Invalid type
Invalid function argument type
Invalid TYPE table
Invalid vector length
Invalid matrix dimensions
Invalid TYPE table: Only named structs can be forward referenced
Expected a constant
Alias and aliasee types don't match
Invalid multiple synchronization scope names blocks
Invalid empty synchronization scope names block
Invalid global variable comdat ID
Invalid calling convention ID
Invalid function comdat ID
Invalid hash length 
Invalid Summary Block: record for version expected
Invalid Summary Block: version expected
Invalid summary version 
, 1, 2, 3 or 4 expected
Alias expects aliasee summary to be parsed
Name attachment that does not follow a combined record
Invalid hash that does not follow a module path
GUID 
) is 
Expected a single module
llvm.bitcode
Corrupted bitcode
Abbreviation starts with an Array or a Blob
Array element type can't be an Array or a Blob
Array op not second to last
Array element type has to be an encoding of a type
Fixed or VBR abbrev record with size > MaxChunkData
Abbrev record with no operands
Invalid abbrev number
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._
Invalid encoding
import-full-type-definitions
Import full type definitions for ThinLTO.
disable-ondemand-mds-loading
Force disable the lazy-loading on-demand of metadata when loading bitcode for importing.
Corrupted Metadata block
Invalid metadata: fwd refs into function blocks
Invalid record: metadata strings layout
Invalid record: metadata strings with no strings
Invalid record: metadata strings corrupt offset
Invalid record: metadata strings bad length
Invalid record: metadata strings truncated chars
Invalid metadata attachment
Conflicting METADATA_KIND records
METADATA_NAME not followed by METADATA_NAMED_NODE
Invalid record: Unsupported version of DISubrange
Alignment value is too large
Can't lazyload MD
Type mismatch in constant table!
 = comdat 
exactmatch
largest
noduplicates
samesize
 = type 
; Materializable
; Function Attrs: 
define 
 section "
 align 
 gc "
 prefix 
 prologue 
 personality 
!<unknown kind #
<empty name> 
!DIExpression(
!DILocation(
line
column
scope
inlinedAt
external
internal
linkonce
linkonce_odr
weak
weak_odr
common
appending
extern_weak
available_externally
dso_local 
hidden 
protected 
dllimport 
dllexport 
fastcc
coldcc
webkit_jscc
anyregcc
preserve_mostcc
preserve_allcc
cxx_fast_tlscc
ghccc
x86_stdcallcc
x86_fastcallcc
x86_thiscallcc
x86_regcallcc
x86_vectorcallcc
intel_ocl_bicc
arm_apcscc
arm_aapcscc
arm_aapcs_vfpcc
msp430_intrcc
avr_intrcc 
avr_signalcc 
ptx_kernel
ptx_device
agx_ticc
agx_pscc
agx_vscc
agx_sscc
agx_sfcc
agx_sicc
agx_clcc
agx_dscc
agx_mrcc
x86_64_sysvcc
win64cc
spir_func
spir_kernel
swiftcc
x86_intrcc
hhvmcc
hhvm_ccc
amdgpu_vs
amdgpu_ls
amdgpu_hs
amdgpu_es
amdgpu_gs
amdgpu_ps
amdgpu_cs
amdgpu_kernel
air_intersection
asm 
sideeffect 
alignstack 
inteldialect 
", "
<badref>
local_unnamed_addr
unnamed_addr
 comdat
<null operand!>
; uselistorder directives
uselistorder
_bb 
, { 
source_filename = "
target datalayout = "
target triple = "
module asm "
attributes #
 = { 
distinct 
<temporary!> 
!DIGlobalVariableExpression(
expr
!GenericDINode(
header
operands: {
tag: 
!DISubrange(
count
lowerBound
!DIEnumerator(
name
isUnsigned
!DIBasicType(
size
encoding
!DIDerivedType(
file
baseType
offset
flags
extraData
dwarfAddressSpace
ptrAuthKey
ptrAuthIsAddressDiscriminated
ptrAuthExtraDiscriminator
!DICompositeType(
elements
runtimeLang
vtableHolder
templateParams
discriminator
!DISubroutineType(
types
!DIFile(
filename
directory
source
checksumkind: 
checksum
!DICompileUnit(
language
producer
isOptimized
runtimeVersion
splitDebugFilename
emissionKind
enums
retainedTypes
globals
imports
macros
dwoId
splitDebugInlining
debugInfoForProfiling
gnuPubnames
!DISubprogram(
linkageName
isLocal
isDefinition
scopeLine
containingType
virtuality
virtualIndex
thisAdjustment
unit
declaration
retainedNodes
thrownTypes
!DILexicalBlock(
!DILexicalBlockFile(
!DINamespace(
exportSymbols
!DIModule(
configMacros
includePath
isysroot
!DITemplateTypeParameter(
!DITemplateValueParameter(
!DIGlobalVariable(
!DILocalVariable(
!DILabel(
!DIObjCProperty(
setter
getter
attributes
!DIImportedEntity(
entity
!DIMacro(
type: 
!DIMacroFile(
nodes
 = !{
void
bfloat
x86_fp80
fp128
ppc_fp128
metadata
x86_mmx
token
%"type 
 addrspace(
opaque
<badref> = 
musttail 
tail 
notail 
 atomic
 weak
 volatile
    
          cleanup
          catch 
          filter 
 within 
] unwind 
to caller
 void
 from 
 unwind 
, ...
          to 
inalloca 
swifterror 
, align 
, addrspace(
 fast
 reassoc
 nnan
 ninf
 nsz
 arcp
 contract
 afn
 nuw
 nsw
 exact
 inbounds
 syncscope("
not_atomic
unordered
monotonic
consume
acquire
release
acq_rel
seq_cst
 ; (
; <label>:
; Error: Block without parent!
 No predecessors!
 preds = 
external 
addrspace(
externally_initialized 
constant 
global 
, section "
thread_local 
thread_local(localdynamic) 
thread_local(initialexec) 
thread_local(localexec) 
alias 
ifunc 
 <<NULL ALIASEE>>
zeroinitializer
blockaddress(
undef
inrange 
<placeholder or erroneous Constant>
[Regular LTO]
 = module: (
path: "
", hash: (
 = typeid: (name: "
) ; guid = 
 = gv: (
name: "
guid: 
, summaries: (
 ; guid = 
(module: ^
, flags: (
linkage: 
, notEligibleToImport: 
, live: 
, dsoLocal: 
, refs: (
alias
variable
, aliasee: 
, insts: 
, funcFlags: (
readNone: 
, readOnly: 
, noRecurse: 
, returnDoesNotAlias: 
, calls: (
(callee: ^
, hotness: 
, relbf: 
critical
, typeIdInfo: (
typeTests: (
typeTestAssumeVCalls
typeCheckedLoadVCalls
typeTestAssumeConstVCalls
typeCheckedLoadConstVCalls
vFuncId: (
, offset: 
args: (
, summary: (
, wpdResolutions: (
(offset: 
typeTestRes: (kind: 
, sizeM1BitWidth: 
, alignLog2: 
, sizeM1: 
, bitMask: 
, inlineBits: 
unsat
byteArray
inline
single
allOnes
wpdRes: (kind: 
, singleImplName: "
, resByArg: (
, byArg: (kind: 
, info: 
, byte: 
, bit: 
indir
singleImpl
branchFunnel
uniformRetVal
uniqueRetVal
virtualConstProp
sanitize_address
sanitize_hwaddress
alwaysinline
argmemonly
builtin
convergent
swifterror
swiftself
inaccessiblememonly
inaccessiblemem_or_argmemonly
inalloca
inlinehint
inreg
jumptable
minsize
nest
nobuiltin
nocapture
noduplicate
noimplicitfloat
noinline
nonlazybind
noredzone
noreturn
nocf_check
norecurse
nounwind
optforfuzzing
optnone
optsize
readnone
readonly
writeonly
returned
returns_twice
signext
speculatable
sspreq
sspstrong
safestack
shadowcallstack
strictfp
sret
sanitize_thread
sanitize_memory
uwtable
zeroext
cold
byval
alignstack
allocsize(
AS =
  { 
PAL[
 => 
invariance-late-reassoc
invariance-late-contract
invariance-late-unsafe-fp-math
no-signed-zeros-fp-math
unsafe-fp-math
no-jump-tables
profile-sample-accurate
probe-stack
stack-probe-size
min-legal-vector-width
null-pointer-is-valid
less-precise-fpmad
no-infs-fp-math
no-nans-fp-math
objc_retainAutoreleaseReturnValue
cast
sse2.storel.dq
sse2.sqrt.sd
avx512.kand.w
avx512.kandn.w
avx512.kor.w
avx512.kxor.w
avx512.kxnor.w
avx512.knot.w
avx512.kortestz.w
avx512.kortestc.w
sse.add.ss
sse2.add.sd
sse.sub.ss
sse2.sub.sd
sse.mul.ss
sse2.mul.sd
sse.div.ss
sse2.div.sd
sse41.pmaxsb
avx2.pmulu.dq
avx512.pmulu.dq.512
sse41.pmuldq
avx2.pmul.dq
avx512.pmul.dq.512
sse2.cvtsi2sd
sse.cvtsi642ss
sse2.cvtsi642sd
avx512.cvtusi2sd
sse2.cvtss2sd
avx.cvtdq2.pd.256
avx512.mask.cvtdq2ps.128
avx512.mask.cvtudq2ps.128
avx512.mask.cvtqq2pd.128
avx512.mask.cvtuqq2pd.128
sse2.cvtps2pd
avx.cvt.ps2.pd.256
avx512.mask.cvtps2pd.128
cvtu
cvtps2pd
pmovsx
sse2.psll.dq.bs
avx512.psll.dq.512
avx512.psrl.dq.512
sse41.pblendw
abs.i
abs.ll
abs.cond
max.i
max.ull
max.cond
min.i
min.ull
min.cond
ctlz
ctlz.trunc
ctpop
ctpop.trunc
clang.arc.retainAutoreleasedReturnValueMarker
Objective-C Class Properties
Objective-C Image Info Section
llvm.ctlz.
^arm\.neon\.vld([1234]|[234]lane)\.v[a-z0-9]*$
.p0i8
^arm\.neon\.vst([1234]|[234]lane)\.v[a-z0-9]*$
lane
arm.thread.pointer
lifetime.start
lifetime.end
sse41.dppd
sse41.mpsadbw
avx2.mpsadbw
avx512.mask.cvttpd2dq.256
avx2.movntdqa
avx512.movntdqa
xop.vpcmov.256
palignr
vpmovm2
llvm.loop.interleave.count
llvm.loop.vectorize.
full-set
empty-set
Printing <null> Type
allocsize
use-dbg-addr
Use llvm.dbg.addr for all local variables
Address space 0 can never be non-integral
Invalid address space, must be a 24bit integer
Missing size specification for pointer in datalayout string
Invalid pointer size of 0 bytes
Missing alignment specification for pointer in datalayout string
Pointer ABI alignment must be a power of 2
Pointer preferred alignment must be a power of 2
Invalid index size of 0 bytes
Sized aggregate specification in datalayout string
Missing alignment specification in datalayout string
ABI alignment specification must be >0 for non-aggregate types
Zero width native integer type in datalayout string
Unexpected trailing characters after mangling specifier in datalayout string
Expected mangling specifier in datalayout string
Unknown mangling specifier in datalayout string
Unknown mangling in datalayout string
Unknown specifier in datalayout string
Invalid bit width, must be a 24bit integer
Invalid ABI alignment, must be a 16bit integer
Invalid preferred alignment, must be a 16bit integer
Invalid ABI alignment, must be a power of 2
Invalid preferred alignment, must be a power of 2
Preferred alignment cannot be less than the ABI alignment
Trailing separator in datalayout string
Expected token before separator in datalayout string
not a number, or does not fit in an unsigned int
number of bits must be a byte width multiple
Invalid address space, must be a 24-bit integer
llvm.gcov
Debug Info Version
DIFlagZero
DIFlagPrivate
DIFlagProtected
DIFlagPublic
DIFlagFwdDecl
DIFlagAppleBlock
DIFlagBlockByrefStruct
DIFlagVirtual
DIFlagArtificial
DIFlagExplicit
DIFlagPrototyped
DIFlagObjcClassComplete
DIFlagObjectPointer
DIFlagVector
DIFlagStaticMember
DIFlagLValueReference
DIFlagRValueReference
DIFlagReserved
DIFlagSingleInheritance
DIFlagMultipleInheritance
DIFlagVirtualInheritance
DIFlagIntroducedVirtual
DIFlagBitField
DIFlagNoReturn
DIFlagMainSubprogram
DIFlagTypePassByValue
DIFlagTypePassByReference
DIFlagFixedEnum
DIFlagThunk
DIFlagTrivial
DIFlagBigEndian
DIFlagLittleEndian
DIFlagAllCallsDescribed
DIFlagIndirectVirtualBase
CSK_MD5
CSK_SHA1
NoDebug
FullDebug
LineTablesOnly
 @[ 
pass-remarks
pattern
Enable optimization remarks from passes whose name match the given regular expression
pass-remarks-missed
Enable missed optimization remarks from passes whose name match the given regular expression
pass-remarks-analysis
Enable optimization analysis remarks from passes whose name match the given regular expression
Invalid regular expression '
' in -pass-remarks: 
srcloc
 at line 
 limit
 of 
 exceeded (
) in 
ignoring debug info with an invalid version (
ignoring invalid debug info in 
<UNKNOWN LOCATION>
 (hotness: 
Instruction selection used fallback path for 
!Passed
!Missed
!Analysis
!AnalysisFPCommute
!AnalysisAliasing
!Failure
Name
DebugLoc
Function
Hotness
Args
String
^(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$
File
Line
Column
verify-dom-info
Verify dominator info (time consuming)
=============================--------------------------------
Inorder Dominator Tree: 
DFSNumbers invalid: 
 slow queries.
Inorder PostDominator Tree: 
Roots: 
Insert 
Delete 
 -> 
PendUpdates:
Insert, 
Delete, 
(no name)
(badref), 
(no_name)
(badref)
DeletedBBs:
(no_name)(
Dominator Tree Construction
domtree
 <<exit node>>
nullptr
not_intrinsic
llvm.addressofreturnaddress
llvm.adjust.trampoline
llvm.annotation
llvm.assume
llvm.bitreverse
llvm.bswap
llvm.canonicalize
llvm.ceil
llvm.clear_cache
llvm.codeview.annotation
llvm.convert.from.fp16
llvm.convert.to.fp16
llvm.copysign
llvm.coro.alloc
llvm.coro.alloca.alloc
llvm.coro.alloca.free
llvm.coro.alloca.get
llvm.coro.begin
llvm.coro.destroy
llvm.coro.done
llvm.coro.end
llvm.coro.frame
llvm.coro.free
llvm.coro.id
llvm.coro.id.retcon
llvm.coro.id.retcon.once
llvm.coro.noop
llvm.coro.param
llvm.coro.prepare.retcon
llvm.coro.promise
llvm.coro.resume
llvm.coro.save
llvm.coro.size
llvm.coro.subfn.addr
llvm.coro.suspend
llvm.coro.suspend.retcon
llvm.cos
llvm.ctlz
llvm.ctpop
llvm.cttz
llvm.dbg.addr
llvm.dbg.declare
llvm.dbg.label
llvm.dbg.value
llvm.debugtrap
llvm.donothing
llvm.eh.dwarf.cfa
llvm.eh.exceptioncode
llvm.eh.exceptionpointer
llvm.eh.return.i32
llvm.eh.return.i64
llvm.eh.sjlj.callsite
llvm.eh.sjlj.functioncontext
llvm.eh.sjlj.longjmp
llvm.eh.sjlj.lsda
llvm.eh.sjlj.setjmp
llvm.eh.sjlj.setup.dispatch
llvm.eh.typeid.for
llvm.eh.unwind.init
llvm.exp
llvm.exp2
llvm.expect
llvm.experimental.constrained.cos
llvm.experimental.constrained.exp
llvm.experimental.constrained.exp2
llvm.experimental.constrained.fadd
llvm.experimental.constrained.fdiv
llvm.experimental.constrained.fma
llvm.experimental.constrained.fmul
llvm.experimental.constrained.frem
llvm.experimental.constrained.fsub
llvm.experimental.constrained.log
llvm.experimental.constrained.log10
llvm.experimental.constrained.log2
llvm.experimental.constrained.nearbyint
llvm.experimental.constrained.pow
llvm.experimental.constrained.powi
llvm.experimental.constrained.rint
llvm.experimental.constrained.sin
llvm.experimental.constrained.sqrt
llvm.experimental.deoptimize
llvm.experimental.gc.relocate
llvm.experimental.gc.result
llvm.experimental.gc.statepoint
llvm.experimental.guard
llvm.experimental.patchpoint.i64
llvm.experimental.patchpoint.void
llvm.experimental.stackmap
llvm.experimental.vector.reduce.add
llvm.experimental.vector.reduce.and
llvm.experimental.vector.reduce.fadd
llvm.experimental.vector.reduce.fmax
llvm.experimental.vector.reduce.fmin
llvm.experimental.vector.reduce.fmul
llvm.experimental.vector.reduce.mul
llvm.experimental.vector.reduce.or
llvm.experimental.vector.reduce.smax
llvm.experimental.vector.reduce.smin
llvm.experimental.vector.reduce.umax
llvm.experimental.vector.reduce.umin
llvm.experimental.vector.reduce.xor
llvm.fabs
llvm.floor
llvm.flt.rounds
llvm.fma
llvm.fmuladd
llvm.frameaddress
llvm.fshl
llvm.fshr
llvm.gcread
llvm.gcroot
llvm.gcwrite
llvm.get.dynamic.area.offset
llvm.icall.branch.funnel
llvm.init.trampoline
llvm.instrprof.increment
llvm.instrprof.increment.step
llvm.instrprof.value.profile
llvm.invariant.end
llvm.invariant.start
llvm.launder.invariant.group
llvm.lifetime.end
llvm.lifetime.start
llvm.load.relative
llvm.localaddress
llvm.localescape
llvm.localrecover
llvm.log
llvm.log10
llvm.log2
llvm.longjmp
llvm.masked.compressstore
llvm.masked.expandload
llvm.masked.gather
llvm.masked.load
llvm.masked.scatter
llvm.masked.store
llvm.matrix.add
llvm.matrix.columnwise.load
llvm.matrix.columnwise.store
llvm.matrix.extract
llvm.matrix.insert
llvm.matrix.multiply
llvm.matrix.scalar.multiply
llvm.matrix.subtract
llvm.matrix.transpose
llvm.maxnum
llvm.memcpy
llvm.memcpy.element.unordered.atomic
llvm.memmove
llvm.memmove.element.unordered.atomic
llvm.memset
llvm.memset.element.unordered.atomic
llvm.minnum
llvm.nearbyint
llvm.objectsize
llvm.pcmarker
llvm.pow
llvm.powi
llvm.prefetch
llvm.ptr.annotation
llvm.ptrauth.auth
llvm.ptrauth.blend
llvm.ptrauth.resign
llvm.ptrauth.sign
llvm.ptrauth.sign.generic
llvm.ptrauth.strip
llvm.rcp
llvm.read_register
llvm.readcyclecounter
llvm.returnaddress
llvm.rint
llvm.round
llvm.rsqrt
llvm.sadd.with.overflow
llvm.setjmp
llvm.sideeffect
llvm.siglongjmp
llvm.sigsetjmp
llvm.sin
llvm.smul.with.overflow
llvm.sqrt
llvm.ssa.copy
llvm.ssub.with.overflow
llvm.stackguard
llvm.stackprotector
llvm.stackrestore
llvm.stacksave
llvm.strip.invariant.group
llvm.thread.pointer
llvm.trap
llvm.trunc
llvm.type.checked.load
llvm.type.test
llvm.uadd.with.overflow
llvm.umul.with.overflow
llvm.usub.with.overflow
llvm.va_copy
llvm.va_end
llvm.va_start
llvm.var.annotation
llvm.write_register
llvm.xray.customevent
llvm.xray.typedevent
llvm.agx.bindless.tex.state.ptr
llvm.agx.check.bound
llvm.agx.check.bound.idx
llvm.agx.color.coverage.mask
llvm.agx.deferred.attribute.pass
llvm.agx.iraydd
llvm.agx.iraydi
llvm.agx.irayid
llvm.agx.irayii
llvm.agx.is.uniform
llvm.agx.load.got
llvm.agx.number.of.samples
llvm.agx.powr.f16
llvm.agx.powr.f32
llvm.agx.read.sample.number
llvm.agx.samplerState
llvm.agx.smp.1d.4xf
llvm.agx.smp.1d.4xh
llvm.agx.smp.1d.4xi16
llvm.agx.smp.1d.4xi32
llvm.agx.smp.1d.array.4xf
llvm.agx.smp.1d.array.4xh
llvm.agx.smp.1d.array.4xi16
llvm.agx.smp.1d.array.4xi32
llvm.agx.smp.1d.array.ci16.4xf
llvm.agx.smp.1d.array.ci16.4xh
llvm.agx.smp.1d.array.ci16.4xi16
llvm.agx.smp.1d.array.ci16.4xi32
llvm.agx.smp.1d.array.ci16.lod.4xf
llvm.agx.smp.1d.array.ci16.lod.4xh
llvm.agx.smp.1d.array.ci16.lod.4xi16
llvm.agx.smp.1d.array.ci16.lod.4xi32
llvm.agx.smp.1d.array.i.4xf
llvm.agx.smp.1d.array.i.4xh
llvm.agx.smp.1d.array.i.4xi16
llvm.agx.smp.1d.array.i.4xi32
llvm.agx.smp.1d.array.i.lod.4xf
llvm.agx.smp.1d.array.i.lod.4xh
llvm.agx.smp.1d.array.i.lod.4xi16
llvm.agx.smp.1d.array.i.lod.4xi32
llvm.agx.smp.1d.ci16.4xf
llvm.agx.smp.1d.ci16.4xh
llvm.agx.smp.1d.ci16.4xi16
llvm.agx.smp.1d.ci16.4xi32
llvm.agx.smp.1d.ci16.lod.4xf
llvm.agx.smp.1d.ci16.lod.4xh
llvm.agx.smp.1d.ci16.lod.4xi16
llvm.agx.smp.1d.ci16.lod.4xi32
llvm.agx.smp.1d.i.4xf
llvm.agx.smp.1d.i.4xh
llvm.agx.smp.1d.i.4xi16
llvm.agx.smp.1d.i.4xi32
llvm.agx.smp.1d.i.lod.4xf
llvm.agx.smp.1d.i.lod.4xh
llvm.agx.smp.1d.i.lod.4xi16
llvm.agx.smp.1d.i.lod.4xi32
llvm.agx.smp.2d.4xf
llvm.agx.smp.2d.4xh
llvm.agx.smp.2d.4xi16
llvm.agx.smp.2d.4xi32
llvm.agx.smp.2d.array.4xf
llvm.agx.smp.2d.array.4xh
llvm.agx.smp.2d.array.4xi16
llvm.agx.smp.2d.array.4xi32
llvm.agx.smp.2d.array.ci16.lod.4xf
llvm.agx.smp.2d.array.ci16.lod.4xh
llvm.agx.smp.2d.array.ci16.lod.4xi16
llvm.agx.smp.2d.array.ci16.lod.4xi32
llvm.agx.smp.2d.array.ci16.lod.offset.4xf
llvm.agx.smp.2d.array.ci16.lod.offset.4xh
llvm.agx.smp.2d.array.ci16.lod.offset.4xi16
llvm.agx.smp.2d.array.ci16.lod.offset.4xi32
llvm.agx.smp.2d.array.gather.4xf
llvm.agx.smp.2d.array.gather.4xh
llvm.agx.smp.2d.array.gather.4xi16
llvm.agx.smp.2d.array.gather.4xi32
llvm.agx.smp.2d.array.gather.offset.4xf
llvm.agx.smp.2d.array.gather.offset.4xh
llvm.agx.smp.2d.array.gather.offset.4xi16
llvm.agx.smp.2d.array.gather.offset.4xi32
llvm.agx.smp.2d.array.grad.4xf
llvm.agx.smp.2d.array.grad.4xh
llvm.agx.smp.2d.array.grad.4xi16
llvm.agx.smp.2d.array.grad.4xi32
llvm.agx.smp.2d.array.grad.offset.4xf
llvm.agx.smp.2d.array.grad.offset.4xh
llvm.agx.smp.2d.array.grad.offset.4xi16
llvm.agx.smp.2d.array.grad.offset.4xi32
llvm.agx.smp.2d.array.i.lod.4xf
llvm.agx.smp.2d.array.i.lod.4xh
llvm.agx.smp.2d.array.i.lod.4xi16
llvm.agx.smp.2d.array.i.lod.4xi32
llvm.agx.smp.2d.array.i.lod.offset.4xf
llvm.agx.smp.2d.array.i.lod.offset.4xh
llvm.agx.smp.2d.array.i.lod.offset.4xi16
llvm.agx.smp.2d.array.i.lod.offset.4xi32
llvm.agx.smp.2d.array.lod.4xf
llvm.agx.smp.2d.array.lod.4xh
llvm.agx.smp.2d.array.lod.4xi16
llvm.agx.smp.2d.array.lod.4xi32
llvm.agx.smp.2d.array.lod.offset.4xf
llvm.agx.smp.2d.array.lod.offset.4xh
llvm.agx.smp.2d.array.lod.offset.4xi16
llvm.agx.smp.2d.array.lod.offset.4xi32
llvm.agx.smp.2d.array.offset.4xf
llvm.agx.smp.2d.array.offset.4xh
llvm.agx.smp.2d.array.offset.4xi16
llvm.agx.smp.2d.array.offset.4xi32
llvm.agx.smp.2d.array.shadow.4xf
llvm.agx.smp.2d.array.shadow.4xh
llvm.agx.smp.2d.array.shadow.gather.4xf
llvm.agx.smp.2d.array.shadow.gather.4xh
llvm.agx.smp.2d.array.shadow.gather.offset.4xf
llvm.agx.smp.2d.array.shadow.gather.offset.4xh
llvm.agx.smp.2d.array.shadow.grad.4xf
llvm.agx.smp.2d.array.shadow.grad.4xh
llvm.agx.smp.2d.array.shadow.grad.offset.4xf
llvm.agx.smp.2d.array.shadow.grad.offset.4xh
llvm.agx.smp.2d.array.shadow.lod.4xf
llvm.agx.smp.2d.array.shadow.lod.4xh
llvm.agx.smp.2d.array.shadow.lod.offset.4xf
llvm.agx.smp.2d.array.shadow.lod.offset.4xh
llvm.agx.smp.2d.array.shadow.offset.4xf
llvm.agx.smp.2d.array.shadow.offset.4xh
llvm.agx.smp.2d.ci16.lod.4xf
llvm.agx.smp.2d.ci16.lod.4xh
llvm.agx.smp.2d.ci16.lod.4xi16
llvm.agx.smp.2d.ci16.lod.4xi32
llvm.agx.smp.2d.ci16.lod.offset.4xf
llvm.agx.smp.2d.ci16.lod.offset.4xh
llvm.agx.smp.2d.ci16.lod.offset.4xi16
llvm.agx.smp.2d.ci16.lod.offset.4xi32
llvm.agx.smp.2d.gather.4xf
llvm.agx.smp.2d.gather.4xh
llvm.agx.smp.2d.gather.4xi16
llvm.agx.smp.2d.gather.4xi32
llvm.agx.smp.2d.gather.offset.4xf
llvm.agx.smp.2d.gather.offset.4xh
llvm.agx.smp.2d.gather.offset.4xi16
llvm.agx.smp.2d.gather.offset.4xi32
llvm.agx.smp.2d.grad.4xf
llvm.agx.smp.2d.grad.4xh
llvm.agx.smp.2d.grad.4xi16
llvm.agx.smp.2d.grad.4xi32
llvm.agx.smp.2d.grad.offset.4xf
llvm.agx.smp.2d.grad.offset.4xh
llvm.agx.smp.2d.grad.offset.4xi16
llvm.agx.smp.2d.grad.offset.4xi32
llvm.agx.smp.2d.i.lod.4xf
llvm.agx.smp.2d.i.lod.4xh
llvm.agx.smp.2d.i.lod.4xi16
llvm.agx.smp.2d.i.lod.4xi32
llvm.agx.smp.2d.i.lod.offset.4xf
llvm.agx.smp.2d.i.lod.offset.4xh
llvm.agx.smp.2d.i.lod.offset.4xi16
llvm.agx.smp.2d.i.lod.offset.4xi32
llvm.agx.smp.2d.lod.4xf
llvm.agx.smp.2d.lod.4xh
llvm.agx.smp.2d.lod.4xi16
llvm.agx.smp.2d.lod.4xi32
llvm.agx.smp.2d.lod.offset.4xf
llvm.agx.smp.2d.lod.offset.4xh
llvm.agx.smp.2d.lod.offset.4xi16
llvm.agx.smp.2d.lod.offset.4xi32
llvm.agx.smp.2d.msaa.4xf
llvm.agx.smp.2d.msaa.4xh
llvm.agx.smp.2d.msaa.4xi16
llvm.agx.smp.2d.msaa.4xi32
llvm.agx.smp.2d.msaa.array.4xf
llvm.agx.smp.2d.msaa.array.4xh
llvm.agx.smp.2d.msaa.array.4xi16
llvm.agx.smp.2d.msaa.array.4xi32
llvm.agx.smp.2d.msaa.array.ci16.4xf
llvm.agx.smp.2d.msaa.array.ci16.4xh
llvm.agx.smp.2d.msaa.array.ci16.4xi16
llvm.agx.smp.2d.msaa.array.ci16.4xi32
llvm.agx.smp.2d.msaa.array.ci16.lod.4xf
llvm.agx.smp.2d.msaa.array.ci16.lod.4xh
llvm.agx.smp.2d.msaa.array.ci16.lod.4xi16
llvm.agx.smp.2d.msaa.array.ci16.lod.4xi32
llvm.agx.smp.2d.msaa.array.i.4xf
llvm.agx.smp.2d.msaa.array.i.4xh
llvm.agx.smp.2d.msaa.array.i.4xi16
llvm.agx.smp.2d.msaa.array.i.4xi32
llvm.agx.smp.2d.msaa.array.i.lod.4xf
llvm.agx.smp.2d.msaa.array.i.lod.4xh
llvm.agx.smp.2d.msaa.array.i.lod.4xi16
llvm.agx.smp.2d.msaa.array.i.lod.4xi32
llvm.agx.smp.2d.msaa.ci16.4xf
llvm.agx.smp.2d.msaa.ci16.4xh
llvm.agx.smp.2d.msaa.ci16.4xi16
llvm.agx.smp.2d.msaa.ci16.4xi32
llvm.agx.smp.2d.msaa.ci16.lod.4xf
llvm.agx.smp.2d.msaa.ci16.lod.4xh
llvm.agx.smp.2d.msaa.ci16.lod.4xi16
llvm.agx.smp.2d.msaa.ci16.lod.4xi32
llvm.agx.smp.2d.msaa.i.4xf
llvm.agx.smp.2d.msaa.i.4xh
llvm.agx.smp.2d.msaa.i.4xi16
llvm.agx.smp.2d.msaa.i.4xi32
llvm.agx.smp.2d.msaa.i.lod.4xf
llvm.agx.smp.2d.msaa.i.lod.4xh
llvm.agx.smp.2d.msaa.i.lod.4xi16
llvm.agx.smp.2d.msaa.i.lod.4xi32
llvm.agx.smp.2d.offset.4xf
llvm.agx.smp.2d.offset.4xh
llvm.agx.smp.2d.offset.4xi16
llvm.agx.smp.2d.offset.4xi32
llvm.agx.smp.2d.shadow.4xf
llvm.agx.smp.2d.shadow.4xh
llvm.agx.smp.2d.shadow.gather.4xf
llvm.agx.smp.2d.shadow.gather.4xh
llvm.agx.smp.2d.shadow.gather.offset.4xf
llvm.agx.smp.2d.shadow.gather.offset.4xh
llvm.agx.smp.2d.shadow.grad.4xf
llvm.agx.smp.2d.shadow.grad.4xh
llvm.agx.smp.2d.shadow.grad.offset.4xf
llvm.agx.smp.2d.shadow.grad.offset.4xh
llvm.agx.smp.2d.shadow.lod.4xf
llvm.agx.smp.2d.shadow.lod.4xh
llvm.agx.smp.2d.shadow.lod.offset.4xf
llvm.agx.smp.2d.shadow.lod.offset.4xh
llvm.agx.smp.2d.shadow.offset.4xf
llvm.agx.smp.2d.shadow.offset.4xh
llvm.agx.smp.3d.4xf
llvm.agx.smp.3d.4xh
llvm.agx.smp.3d.4xi16
llvm.agx.smp.3d.4xi32
llvm.agx.smp.3d.ci16.lod.4xf
llvm.agx.smp.3d.ci16.lod.4xh
llvm.agx.smp.3d.ci16.lod.4xi16
llvm.agx.smp.3d.ci16.lod.4xi32
llvm.agx.smp.3d.ci16.lod.offset.4xf
llvm.agx.smp.3d.ci16.lod.offset.4xh
llvm.agx.smp.3d.ci16.lod.offset.4xi16
llvm.agx.smp.3d.ci16.lod.offset.4xi32
llvm.agx.smp.3d.grad.4xf
llvm.agx.smp.3d.grad.4xh
llvm.agx.smp.3d.grad.4xi16
llvm.agx.smp.3d.grad.4xi32
llvm.agx.smp.3d.grad.offset.4xf
llvm.agx.smp.3d.grad.offset.4xh
llvm.agx.smp.3d.grad.offset.4xi16
llvm.agx.smp.3d.grad.offset.4xi32
llvm.agx.smp.3d.i.lod.4xf
llvm.agx.smp.3d.i.lod.4xh
llvm.agx.smp.3d.i.lod.4xi16
llvm.agx.smp.3d.i.lod.4xi32
llvm.agx.smp.3d.i.lod.offset.4xf
llvm.agx.smp.3d.i.lod.offset.4xh
llvm.agx.smp.3d.i.lod.offset.4xi16
llvm.agx.smp.3d.i.lod.offset.4xi32
llvm.agx.smp.3d.lod.4xf
llvm.agx.smp.3d.lod.4xh
llvm.agx.smp.3d.lod.4xi16
llvm.agx.smp.3d.lod.4xi32
llvm.agx.smp.3d.lod.offset.4xf
llvm.agx.smp.3d.lod.offset.4xh
llvm.agx.smp.3d.lod.offset.4xi16
llvm.agx.smp.3d.lod.offset.4xi32
llvm.agx.smp.3d.offset.4xf
llvm.agx.smp.3d.offset.4xh
llvm.agx.smp.3d.offset.4xi16
llvm.agx.smp.3d.offset.4xi32
llvm.agx.smp.cube.4xf
llvm.agx.smp.cube.4xh
llvm.agx.smp.cube.array.4xf
llvm.agx.smp.cube.array.4xh
llvm.agx.smp.cube.array.gather.4xf
llvm.agx.smp.cube.array.gather.4xh
llvm.agx.smp.cube.array.grad.4xf
llvm.agx.smp.cube.array.grad.4xh
llvm.agx.smp.cube.array.lod.4xf
llvm.agx.smp.cube.array.lod.4xh
llvm.agx.smp.cube.gather.4xf
llvm.agx.smp.cube.gather.4xh
llvm.agx.smp.cube.grad.4xf
llvm.agx.smp.cube.grad.4xh
llvm.agx.smp.cube.lod.4xf
llvm.agx.smp.cube.lod.4xh
llvm.agx.smp.cube.shadow.4xf
llvm.agx.smp.cube.shadow.4xh
llvm.agx.smp.cube.shadow.gather.4xf
llvm.agx.smp.cube.shadow.gather.4xh
llvm.agx.smp.cube.shadow.grad.4xf
llvm.agx.smp.cube.shadow.grad.4xh
llvm.agx.smp.cube.shadow.lod.4xf
llvm.agx.smp.cube.shadow.lod.4xh
llvm.agx.smp.cubedir.4xf
llvm.agx.smp.cubedir.4xh
llvm.agx.smp.cubedir.4xi16
llvm.agx.smp.cubedir.4xi32
llvm.agx.smp.cubedir.array.4xf
llvm.agx.smp.cubedir.array.4xh
llvm.agx.smp.cubedir.array.4xi16
llvm.agx.smp.cubedir.array.4xi32
llvm.agx.smp.cubedir.array.gather.4xf
llvm.agx.smp.cubedir.array.gather.4xh
llvm.agx.smp.cubedir.array.gather.4xi16
llvm.agx.smp.cubedir.array.gather.4xi32
llvm.agx.smp.cubedir.array.grad.4xf
llvm.agx.smp.cubedir.array.grad.4xh
llvm.agx.smp.cubedir.array.grad.4xi16
llvm.agx.smp.cubedir.array.grad.4xi32
llvm.agx.smp.cubedir.array.lod.4xf
llvm.agx.smp.cubedir.array.lod.4xh
llvm.agx.smp.cubedir.array.lod.4xi16
llvm.agx.smp.cubedir.array.lod.4xi32
llvm.agx.smp.cubedir.array.shadow.4xf
llvm.agx.smp.cubedir.array.shadow.4xh
llvm.agx.smp.cubedir.array.shadow.gather.4xf
llvm.agx.smp.cubedir.array.shadow.gather.4xh
llvm.agx.smp.cubedir.array.shadow.grad.4xf
llvm.agx.smp.cubedir.array.shadow.grad.4xh
llvm.agx.smp.cubedir.array.shadow.lod.4xf
llvm.agx.smp.cubedir.array.shadow.lod.4xh
llvm.agx.smp.cubedir.gather.4xf
llvm.agx.smp.cubedir.gather.4xh
llvm.agx.smp.cubedir.gather.4xi16
llvm.agx.smp.cubedir.gather.4xi32
llvm.agx.smp.cubedir.grad.4xf
llvm.agx.smp.cubedir.grad.4xh
llvm.agx.smp.cubedir.grad.4xi16
llvm.agx.smp.cubedir.grad.4xi32
llvm.agx.smp.cubedir.lod.4xf
llvm.agx.smp.cubedir.lod.4xh
llvm.agx.smp.cubedir.lod.4xi16
llvm.agx.smp.cubedir.lod.4xi32
llvm.agx.smp.cubedir.shadow.4xf
llvm.agx.smp.cubedir.shadow.4xh
llvm.agx.smp.cubedir.shadow.gather.4xf
llvm.agx.smp.cubedir.shadow.gather.4xh
llvm.agx.smp.cubedir.shadow.grad.4xf
llvm.agx.smp.cubedir.shadow.grad.4xh
llvm.agx.smp.cubedir.shadow.lod.4xf
llvm.agx.smp.cubedir.shadow.lod.4xh
llvm.agx.smp.cubestf.4xf
llvm.agx.smp.cubestf.4xh
llvm.agx.smp.cubestf.4xi16
llvm.agx.smp.cubestf.4xi32
llvm.agx.smp.cubestf.array.4xf
llvm.agx.smp.cubestf.array.4xh
llvm.agx.smp.cubestf.array.4xi16
llvm.agx.smp.cubestf.array.4xi32
llvm.agx.smp.cubestf.array.ci16.4xf
llvm.agx.smp.cubestf.array.ci16.4xh
llvm.agx.smp.cubestf.array.ci16.4xi16
llvm.agx.smp.cubestf.array.ci16.4xi32
llvm.agx.smp.cubestf.array.ci16.lod.4xf
llvm.agx.smp.cubestf.array.ci16.lod.4xh
llvm.agx.smp.cubestf.array.ci16.lod.4xi16
llvm.agx.smp.cubestf.array.ci16.lod.4xi32
llvm.agx.smp.cubestf.array.gather.4xf
llvm.agx.smp.cubestf.array.gather.4xh
llvm.agx.smp.cubestf.array.gather.4xi16
llvm.agx.smp.cubestf.array.gather.4xi32
llvm.agx.smp.cubestf.array.grad.4xf
llvm.agx.smp.cubestf.array.grad.4xh
llvm.agx.smp.cubestf.array.grad.4xi16
llvm.agx.smp.cubestf.array.grad.4xi32
llvm.agx.smp.cubestf.array.i.4xf
llvm.agx.smp.cubestf.array.i.4xh
llvm.agx.smp.cubestf.array.i.4xi16
llvm.agx.smp.cubestf.array.i.4xi32
llvm.agx.smp.cubestf.array.i.lod.4xf
llvm.agx.smp.cubestf.array.i.lod.4xh
llvm.agx.smp.cubestf.array.i.lod.4xi16
llvm.agx.smp.cubestf.array.i.lod.4xi32
llvm.agx.smp.cubestf.array.lod.4xf
llvm.agx.smp.cubestf.array.lod.4xh
llvm.agx.smp.cubestf.array.lod.4xi16
llvm.agx.smp.cubestf.array.lod.4xi32
llvm.agx.smp.cubestf.array.shadow.4xf
llvm.agx.smp.cubestf.array.shadow.4xh
llvm.agx.smp.cubestf.array.shadow.gather.4xf
llvm.agx.smp.cubestf.array.shadow.gather.4xh
llvm.agx.smp.cubestf.array.shadow.grad.4xf
llvm.agx.smp.cubestf.array.shadow.grad.4xh
llvm.agx.smp.cubestf.array.shadow.lod.4xf
llvm.agx.smp.cubestf.array.shadow.lod.4xh
llvm.agx.smp.cubestf.ci16.4xf
llvm.agx.smp.cubestf.ci16.4xh
llvm.agx.smp.cubestf.ci16.4xi16
llvm.agx.smp.cubestf.ci16.4xi32
llvm.agx.smp.cubestf.ci16.lod.4xf
llvm.agx.smp.cubestf.ci16.lod.4xh
llvm.agx.smp.cubestf.ci16.lod.4xi16
llvm.agx.smp.cubestf.ci16.lod.4xi32
llvm.agx.smp.cubestf.gather.4xf
llvm.agx.smp.cubestf.gather.4xh
llvm.agx.smp.cubestf.gather.4xi16
llvm.agx.smp.cubestf.gather.4xi32
llvm.agx.smp.cubestf.grad.4xf
llvm.agx.smp.cubestf.grad.4xh
llvm.agx.smp.cubestf.grad.4xi16
llvm.agx.smp.cubestf.grad.4xi32
llvm.agx.smp.cubestf.i.4xf
llvm.agx.smp.cubestf.i.4xh
llvm.agx.smp.cubestf.i.4xi16
llvm.agx.smp.cubestf.i.4xi32
llvm.agx.smp.cubestf.i.lod.4xf
llvm.agx.smp.cubestf.i.lod.4xh
llvm.agx.smp.cubestf.i.lod.4xi16
llvm.agx.smp.cubestf.i.lod.4xi32
llvm.agx.smp.cubestf.lod.4xf
llvm.agx.smp.cubestf.lod.4xh
llvm.agx.smp.cubestf.lod.4xi16
llvm.agx.smp.cubestf.lod.4xi32
llvm.agx.smp.cubestf.shadow.4xf
llvm.agx.smp.cubestf.shadow.4xh
llvm.agx.smp.cubestf.shadow.gather.4xf
llvm.agx.smp.cubestf.shadow.gather.4xh
llvm.agx.smp.cubestf.shadow.grad.4xf
llvm.agx.smp.cubestf.shadow.grad.4xh
llvm.agx.smp.cubestf.shadow.lod.4xf
llvm.agx.smp.cubestf.shadow.lod.4xh
llvm.agx.smpw.1d.array.ci16.4xf
llvm.agx.smpw.1d.array.ci16.4xf.rtz
llvm.agx.smpw.1d.array.ci16.4xh
llvm.agx.smpw.1d.array.ci16.4xh.rtz
llvm.agx.smpw.1d.array.ci16.lod.4xf
llvm.agx.smpw.1d.array.ci16.lod.4xf.rtz
llvm.agx.smpw.1d.array.ci16.lod.4xh
llvm.agx.smpw.1d.array.ci16.lod.4xh.rtz
llvm.agx.smpw.1d.array.ci16.lod.4xi16
llvm.agx.smpw.1d.array.ci16.lod.4xi32
llvm.agx.smpw.1d.array.i.4xf
llvm.agx.smpw.1d.array.i.4xf.rtz
llvm.agx.smpw.1d.array.i.4xh
llvm.agx.smpw.1d.array.i.4xh.rtz
llvm.agx.smpw.1d.array.i.lod.4xf
llvm.agx.smpw.1d.array.i.lod.4xf.rtz
llvm.agx.smpw.1d.array.i.lod.4xh
llvm.agx.smpw.1d.array.i.lod.4xh.rtz
llvm.agx.smpw.1d.array.i.lod.4xi16
llvm.agx.smpw.1d.array.i.lod.4xi32
llvm.agx.smpw.1d.ci16.4xf
llvm.agx.smpw.1d.ci16.4xf.rtz
llvm.agx.smpw.1d.ci16.4xh
llvm.agx.smpw.1d.ci16.4xh.rtz
llvm.agx.smpw.1d.ci16.lod.4xf
llvm.agx.smpw.1d.ci16.lod.4xf.rtz
llvm.agx.smpw.1d.ci16.lod.4xh
llvm.agx.smpw.1d.ci16.lod.4xh.rtz
llvm.agx.smpw.1d.ci16.lod.4xi16
llvm.agx.smpw.1d.ci16.lod.4xi32
llvm.agx.smpw.1d.i.4xf
llvm.agx.smpw.1d.i.4xf.rtz
llvm.agx.smpw.1d.i.4xh
llvm.agx.smpw.1d.i.4xh.rtz
llvm.agx.smpw.1d.i.lod.4xf
llvm.agx.smpw.1d.i.lod.4xf.rtz
llvm.agx.smpw.1d.i.lod.4xh
llvm.agx.smpw.1d.i.lod.4xh.rtz
llvm.agx.smpw.1d.i.lod.4xi16
llvm.agx.smpw.1d.i.lod.4xi32
llvm.agx.smpw.2d.array.ci16.4xf
llvm.agx.smpw.2d.array.ci16.4xf.rtz
llvm.agx.smpw.2d.array.ci16.4xh
llvm.agx.smpw.2d.array.ci16.4xh.rtz
llvm.agx.smpw.2d.array.ci16.lod.4xf
llvm.agx.smpw.2d.array.ci16.lod.4xf.rtz
llvm.agx.smpw.2d.array.ci16.lod.4xh
llvm.agx.smpw.2d.array.ci16.lod.4xh.rtz
llvm.agx.smpw.2d.array.ci16.lod.4xi16
llvm.agx.smpw.2d.array.ci16.lod.4xi32
llvm.agx.smpw.2d.array.i.4xf
llvm.agx.smpw.2d.array.i.4xf.rtz
llvm.agx.smpw.2d.array.i.4xh
llvm.agx.smpw.2d.array.i.4xh.rtz
llvm.agx.smpw.2d.array.i.lod.4xf
llvm.agx.smpw.2d.array.i.lod.4xf.rtz
llvm.agx.smpw.2d.array.i.lod.4xh
llvm.agx.smpw.2d.array.i.lod.4xh.rtz
llvm.agx.smpw.2d.array.i.lod.4xi16
llvm.agx.smpw.2d.array.i.lod.4xi32
llvm.agx.smpw.2d.ci16.4xf
llvm.agx.smpw.2d.ci16.4xf.rtz
llvm.agx.smpw.2d.ci16.4xh
llvm.agx.smpw.2d.ci16.4xh.rtz
llvm.agx.smpw.2d.ci16.lod.4xf
llvm.agx.smpw.2d.ci16.lod.4xf.rtz
llvm.agx.smpw.2d.ci16.lod.4xh
llvm.agx.smpw.2d.ci16.lod.4xh.rtz
llvm.agx.smpw.2d.ci16.lod.4xi16
llvm.agx.smpw.2d.ci16.lod.4xi32
llvm.agx.smpw.2d.i.4xf
llvm.agx.smpw.2d.i.4xf.rtz
llvm.agx.smpw.2d.i.4xh
llvm.agx.smpw.2d.i.4xh.rtz
llvm.agx.smpw.2d.i.lod.4xf
llvm.agx.smpw.2d.i.lod.4xf.rtz
llvm.agx.smpw.2d.i.lod.4xh
llvm.agx.smpw.2d.i.lod.4xh.rtz
llvm.agx.smpw.2d.i.lod.4xi16
llvm.agx.smpw.2d.i.lod.4xi32
llvm.agx.smpw.3d.ci16.4xf
llvm.agx.smpw.3d.ci16.4xf.rtz
llvm.agx.smpw.3d.ci16.4xh
llvm.agx.smpw.3d.ci16.4xh.rtz
llvm.agx.smpw.3d.ci16.lod.4xf
llvm.agx.smpw.3d.ci16.lod.4xf.rtz
llvm.agx.smpw.3d.ci16.lod.4xh
llvm.agx.smpw.3d.ci16.lod.4xh.rtz
llvm.agx.smpw.3d.ci16.lod.4xi16
llvm.agx.smpw.3d.ci16.lod.4xi32
llvm.agx.smpw.3d.i.4xf
llvm.agx.smpw.3d.i.4xf.rtz
llvm.agx.smpw.3d.i.4xh
llvm.agx.smpw.3d.i.4xh.rtz
llvm.agx.smpw.3d.i.lod.4xf
llvm.agx.smpw.3d.i.lod.4xf.rtz
llvm.agx.smpw.3d.i.lod.4xh
llvm.agx.smpw.3d.i.lod.4xh.rtz
llvm.agx.smpw.3d.i.lod.4xi16
llvm.agx.smpw.3d.i.lod.4xi32
llvm.agx.smpw.cubestf.array.ci16.4xf
llvm.agx.smpw.cubestf.array.ci16.4xf.rtz
llvm.agx.smpw.cubestf.array.ci16.4xh
llvm.agx.smpw.cubestf.array.ci16.4xh.rtz
llvm.agx.smpw.cubestf.array.ci16.lod.4xf
llvm.agx.smpw.cubestf.array.ci16.lod.4xf.rtz
llvm.agx.smpw.cubestf.array.ci16.lod.4xh
llvm.agx.smpw.cubestf.array.ci16.lod.4xh.rtz
llvm.agx.smpw.cubestf.array.ci16.lod.4xi16
llvm.agx.smpw.cubestf.array.ci16.lod.4xi32
llvm.agx.smpw.cubestf.array.i.4xf
llvm.agx.smpw.cubestf.array.i.4xf.rtz
llvm.agx.smpw.cubestf.array.i.4xh
llvm.agx.smpw.cubestf.array.i.4xh.rtz
llvm.agx.smpw.cubestf.array.i.lod.4xf
llvm.agx.smpw.cubestf.array.i.lod.4xf.rtz
llvm.agx.smpw.cubestf.array.i.lod.4xh
llvm.agx.smpw.cubestf.array.i.lod.4xh.rtz
llvm.agx.smpw.cubestf.array.i.lod.4xi16
llvm.agx.smpw.cubestf.array.i.lod.4xi32
llvm.agx.smpw.cubestf.ci16.4xf
llvm.agx.smpw.cubestf.ci16.4xf.rtz
llvm.agx.smpw.cubestf.ci16.4xh
llvm.agx.smpw.cubestf.ci16.4xh.rtz
llvm.agx.smpw.cubestf.ci16.lod.4xf
llvm.agx.smpw.cubestf.ci16.lod.4xf.rtz
llvm.agx.smpw.cubestf.ci16.lod.4xh
llvm.agx.smpw.cubestf.ci16.lod.4xh.rtz
llvm.agx.smpw.cubestf.ci16.lod.4xi16
llvm.agx.smpw.cubestf.ci16.lod.4xi32
llvm.agx.smpw.cubestf.i.4xf
llvm.agx.smpw.cubestf.i.4xf.rtz
llvm.agx.smpw.cubestf.i.4xh
llvm.agx.smpw.cubestf.i.4xh.rtz
llvm.agx.smpw.cubestf.i.lod.4xf
llvm.agx.smpw.cubestf.i.lod.4xf.rtz
llvm.agx.smpw.cubestf.i.lod.4xh
llvm.agx.smpw.cubestf.i.lod.4xh.rtz
llvm.agx.smpw.cubestf.i.lod.4xi16
llvm.agx.smpw.cubestf.i.lod.4xi32
llvm.agx.textureState
llvm.agx.tls.alloc
llvm.agx1.atanc
llvm.agx1.cl.barrier
llvm.agx1.cl.global.barrier
llvm.agx1.clamp
llvm.agx1.cmsk
llvm.agx1.cppix
llvm.agx1.cppix.agx1r1
llvm.agx1.dcf
llvm.agx1.dcfi
llvm.agx1.emitpix
llvm.agx1.emitpix.agx1r1
llvm.agx1.exit.if.zero
llvm.agx1.fitr.1xf
llvm.agx1.fitr.2xf
llvm.agx1.fitr.3xf
llvm.agx1.fitr.4xf
llvm.agx1.fitrp.1xf
llvm.agx1.fitrp.2xf
llvm.agx1.fitrp.3xf
llvm.agx1.fitrp.4xf
llvm.agx1.flushNaN
llvm.agx1.flushimg
llvm.agx1.flushpbe
llvm.agx1.ft1
llvm.agx1.fusedClampFlushNaN
llvm.agx1.gcmp
llvm.agx1.gcmp.g5
llvm.agx1.gcmp.xr.g5
llvm.agx1.gexp
llvm.agx1.gexp.g5
llvm.agx1.gexp.xr.g5
llvm.agx1.idf
llvm.agx1.imadh.g4
llvm.agx1.imgwblk.2d.16
llvm.agx1.imgwblk.2d.32
llvm.agx1.imgwblk.2d.array.16
llvm.agx1.imgwblk.2d.array.32
llvm.agx1.imgwblk.2d.array.lod.16
llvm.agx1.imgwblk.2d.array.lod.32
llvm.agx1.imgwblk.2d.lod.16
llvm.agx1.imgwblk.2d.lod.32
llvm.agx1.imgwblk.3d.16
llvm.agx1.imgwblk.3d.32
llvm.agx1.imgwblk.3d.lod.16
llvm.agx1.imgwblk.3d.lod.32
llvm.agx1.imgwblk.barrier.2d.16
llvm.agx1.imgwblk.barrier.2d.32
llvm.agx1.imgwblk.barrier.2d.array.16
llvm.agx1.imgwblk.barrier.2d.array.32
llvm.agx1.imgwblk.barrier.2d.array.lod.16
llvm.agx1.imgwblk.barrier.2d.array.lod.32
llvm.agx1.imgwblk.barrier.2d.lod.16
llvm.agx1.imgwblk.barrier.2d.lod.32
llvm.agx1.imgwblk.barrier.3d.16
llvm.agx1.imgwblk.barrier.3d.32
llvm.agx1.imgwblk.barrier.3d.lod.16
llvm.agx1.imgwblk.barrier.3d.lod.32
llvm.agx1.instance.valid
llvm.agx1.is.back.facing
llvm.agx1.itr.centroid.1xf
llvm.agx1.itr.centroid.1xh
llvm.agx1.itr.centroid.2xf
llvm.agx1.itr.centroid.2xh
llvm.agx1.itr.centroid.3xf
llvm.agx1.itr.centroid.3xh
llvm.agx1.itr.centroid.4xf
llvm.agx1.itr.centroid.4xh
llvm.agx1.itr.pixel.1xf
llvm.agx1.itr.pixel.1xh
llvm.agx1.itr.pixel.2xf
llvm.agx1.itr.pixel.2xh
llvm.agx1.itr.pixel.3xf
llvm.agx1.itr.pixel.3xh
llvm.agx1.itr.pixel.4xf
llvm.agx1.itr.pixel.4xh
llvm.agx1.itr.sample.1xf
llvm.agx1.itr.sample.1xh
llvm.agx1.itr.sample.2xf
llvm.agx1.itr.sample.2xh
llvm.agx1.itr.sample.3xf
llvm.agx1.itr.sample.3xh
llvm.agx1.itr.sample.4xf
llvm.agx1.itr.sample.4xh
llvm.agx1.itr.tmp.1xf
llvm.agx1.itr.tmp.1xh
llvm.agx1.itr.tmp.2xf
llvm.agx1.itr.tmp.2xh
llvm.agx1.itr.tmp.3xf
llvm.agx1.itr.tmp.3xh
llvm.agx1.itr.tmp.4xf
llvm.agx1.itr.tmp.4xh
llvm.agx1.itrcem.centroid.3xf
llvm.agx1.itrcem.centroid.3xh
llvm.agx1.itrcem.pixel.3xf
llvm.agx1.itrcem.pixel.3xh
llvm.agx1.itrcem.sample.3xf
llvm.agx1.itrcem.sample.3xh
llvm.agx1.itrcem.tmp.3xf
llvm.agx1.itrcem.tmp.3xh
llvm.agx1.itrcemgrad.tmp.3xf
llvm.agx1.itrproj.centroid.1xf
llvm.agx1.itrproj.centroid.1xh
llvm.agx1.itrproj.centroid.2xf
llvm.agx1.itrproj.centroid.2xh
llvm.agx1.itrproj.centroid.3xf
llvm.agx1.itrproj.centroid.3xh
llvm.agx1.itrproj.centroid.4xf
llvm.agx1.itrproj.centroid.4xh
llvm.agx1.itrproj.pixel.1xf
llvm.agx1.itrproj.pixel.1xh
llvm.agx1.itrproj.pixel.2xf
llvm.agx1.itrproj.pixel.2xh
llvm.agx1.itrproj.pixel.3xf
llvm.agx1.itrproj.pixel.3xh
llvm.agx1.itrproj.pixel.4xf
llvm.agx1.itrproj.pixel.4xh
llvm.agx1.itrproj.sample.1xf
llvm.agx1.itrproj.sample.1xh
llvm.agx1.itrproj.sample.2xf
llvm.agx1.itrproj.sample.2xh
llvm.agx1.itrproj.sample.3xf
llvm.agx1.itrproj.sample.3xh
llvm.agx1.itrproj.sample.4xf
llvm.agx1.itrproj.sample.4xh
llvm.agx1.itrproj.tmp.1xf
llvm.agx1.itrproj.tmp.1xh
llvm.agx1.itrproj.tmp.2xf
llvm.agx1.itrproj.tmp.2xh
llvm.agx1.itrproj.tmp.3xf
llvm.agx1.itrproj.tmp.3xh
llvm.agx1.itrproj.tmp.4xf
llvm.agx1.itrproj.tmp.4xh
llvm.agx1.laddr
llvm.agx1.lldiblk.1xf
llvm.agx1.lldiblk.1xh
llvm.agx1.lldiblk.2xf
llvm.agx1.lldiblk.2xh
llvm.agx1.lldiblk.3xf
llvm.agx1.lldiblk.3xh
llvm.agx1.lldiblk.4xf
llvm.agx1.lldiblk.4xh
llvm.agx1.local.x
llvm.agx1.local.y
llvm.agx1.lock
llvm.agx1.lstiblk.1xf
llvm.agx1.lstiblk.1xh
llvm.agx1.lstiblk.2xf
llvm.agx1.lstiblk.2xh
llvm.agx1.lstiblk.3xf
llvm.agx1.lstiblk.3xh
llvm.agx1.lstiblk.4xf
llvm.agx1.lstiblk.4xh
llvm.agx1.memfence
llvm.agx1.nop
llvm.agx1.nop.dbg
llvm.agx1.pack.prog
llvm.agx1.pack.rne.s32
llvm.agx1.pack.rne.u32
llvm.agx1.pack.scale.rne.s16
llvm.agx1.pack.scale.rne.s8
llvm.agx1.pack.scale.rne.u16
llvm.agx1.pack.scale.rne.u8
llvm.agx1.pixel.depthf
llvm.agx1.pixel.dfdx
llvm.agx1.pixel.dfdy
llvm.agx1.pixel.movmsk
llvm.agx1.pixel.movmsk.if.zero
llvm.agx1.pixel.readOutputRegister
llvm.agx1.pixel.readOutputRegisterWithPartitionSize
llvm.agx1.pixel.writeOutputRegister
llvm.agx1.pixel.writeOutputRegisterWithPartitionSize
llvm.agx1.read.cluster.number
llvm.agx1.read.coord.x.pixel
llvm.agx1.read.coord.x.sample
llvm.agx1.read.coord.y.pixel
llvm.agx1.read.coord.y.sample
llvm.agx1.read.pvcnt
llvm.agx1.read.sample.number
llvm.agx1.read.sg0
llvm.agx1.read.shared.reg.alloc.size
llvm.agx1.read.tvcnt
llvm.agx1.release
llvm.agx1.rev
llvm.agx1.sadd.sat
llvm.agx1.savmsk.pixel
llvm.agx1.savmsk.sample
llvm.agx1.shfl
llvm.agx1.simd.barrier
llvm.agx1.sin.g4
llvm.agx1.sin.g5
llvm.agx1.sinc
llvm.agx1.smad.sat
llvm.agx1.smsub.sat
llvm.agx1.smul.sat
llvm.agx1.ssub.sat
llvm.agx1.texture1d
llvm.agx1.texture1d.both.bi.x
llvm.agx1.texture1d.both.tri.x
llvm.agx1.texture1d.grad
llvm.agx1.texture1d.grad.both.bi.x
llvm.agx1.texture1d.grad.both.tri.x
llvm.agx1.texture1d.grad.info
llvm.agx1.texture1d.grad.write
llvm.agx1.texture1d.grad.x
llvm.agx1.texture1d.grad.xy
llvm.agx1.texture1d.grad.xyz
llvm.agx1.texture1d.info
llvm.agx1.texture1d.write
llvm.agx1.texture1d.x
llvm.agx1.texture1d.xy
llvm.agx1.texture1d.xyz
llvm.agx1.texture2d
llvm.agx1.texture2d.both.bi.x
llvm.agx1.texture2d.both.tri.x
llvm.agx1.texture2d.grad
llvm.agx1.texture2d.grad.both.bi.x
llvm.agx1.texture2d.grad.both.tri.x
llvm.agx1.texture2d.grad.info
llvm.agx1.texture2d.grad.write
llvm.agx1.texture2d.grad.x
llvm.agx1.texture2d.grad.xy
llvm.agx1.texture2d.grad.xyz
llvm.agx1.texture2d.info
llvm.agx1.texture2d.write
llvm.agx1.texture2d.x
llvm.agx1.texture2d.xy
llvm.agx1.texture2d.xyz
llvm.agx1.texture3d
llvm.agx1.texture3d.both.bi.x
llvm.agx1.texture3d.both.tri.x
llvm.agx1.texture3d.grad
llvm.agx1.texture3d.grad.both.bi.x
llvm.agx1.texture3d.grad.both.tri.x
llvm.agx1.texture3d.grad.info
llvm.agx1.texture3d.grad.write
llvm.agx1.texture3d.grad.x
llvm.agx1.texture3d.grad.xy
llvm.agx1.texture3d.grad.xyz
llvm.agx1.texture3d.info
llvm.agx1.texture3d.write
llvm.agx1.texture3d.x
llvm.agx1.texture3d.xy
llvm.agx1.texture3d.xyz
llvm.agx1.textureCube
llvm.agx1.textureCube.both.bi.x
llvm.agx1.textureCube.both.tri.x
llvm.agx1.textureCube.grad
llvm.agx1.textureCube.grad.both.bi.x
llvm.agx1.textureCube.grad.both.tri.x
llvm.agx1.textureCube.grad.info
llvm.agx1.textureCube.grad.write
llvm.agx1.textureCube.grad.x
llvm.agx1.textureCube.grad.xy
llvm.agx1.textureCube.grad.xyz
llvm.agx1.textureCube.info
llvm.agx1.textureCube.write
llvm.agx1.textureCube.x
llvm.agx1.textureCube.xy
llvm.agx1.textureCube.xyz
llvm.agx1.tsci
llvm.agx1.uadd.sat
llvm.agx1.umad.sat
llvm.agx1.umsub.sat
llvm.agx1.umul.sat
llvm.agx1.unpack.rtz.s32
llvm.agx1.unpack.rtz.u32
llvm.agx1.unpack.scale.s1616
llvm.agx1.unpack.scale.s8888
llvm.agx1.unpack.scale.u1616
llvm.agx1.unpack.scale.u8888
llvm.agx1.usub.sat
llvm.agx1.vertex.clip.write
llvm.agx1.vertex.pos.write
llvm.agx1.vertex.ptsize.write
llvm.agx1.vertex.varying.write.f32
llvm.agx1.vertex.varying.write.i32
llvm.agx1.vertex.write
llvm.agx1.vertex.writef
llvm.agx1.wop
llvm.agx1.write.sg0
llvm.agx2.backface.triangle
llvm.agx2.batch.num
llvm.agx2.bbccrc
llvm.agx2.bbccrc.noshft
llvm.agx2.bufrblk.1d
llvm.agx2.bufrblk.2d
llvm.agx2.bufwblk.1d
llvm.agx2.bufwblk.2d
llvm.agx2.centroid.itr.1xf
llvm.agx2.centroid.itr.1xh
llvm.agx2.centroid.itr.2xf
llvm.agx2.centroid.itr.2xh
llvm.agx2.centroid.itr.3xf
llvm.agx2.centroid.itr.3xh
llvm.agx2.centroid.itr.4xf
llvm.agx2.centroid.itr.4xh
llvm.agx2.centroid.itrproj.1xf
llvm.agx2.centroid.itrproj.1xh
llvm.agx2.centroid.itrproj.2xf
llvm.agx2.centroid.itrproj.2xh
llvm.agx2.centroid.itrproj.3xf
llvm.agx2.centroid.itrproj.3xh
llvm.agx2.centroid.itrproj.4xf
llvm.agx2.centroid.itrproj.4xh
llvm.agx2.clamp
llvm.agx2.cluster.num
llvm.agx2.cmsk
llvm.agx2.colcvgmsk
llvm.agx2.colcvgmsk.coords
llvm.agx2.colcvgmsk.coords.with.offset
llvm.agx2.colcvgmsk.with.offset
llvm.agx2.colcvgmsk.with.prid
llvm.agx2.context.id
llvm.agx2.coverage.mask
llvm.agx2.cppix
llvm.agx2.dispatch.threadgroup.x.size
llvm.agx2.dispatch.threadgroup.y.size
llvm.agx2.dispatch.threadgroup.z.size
llvm.agx2.dstackh
llvm.agx2.dstackl
llvm.agx2.eipnd
llvm.agx2.emitpix
llvm.agx2.exception.return.reg
llvm.agx2.exception.vector.reg
llvm.agx2.exec.state.cache.id
llvm.agx2.f16matmad4x4
llvm.agx2.f16matmad8x8
llvm.agx2.f32matmad4x4
llvm.agx2.f32matmad8x8
llvm.agx2.flushdcache
llvm.agx2.flushimg
llvm.agx2.flushpbe
llvm.agx2.forced.2x2.valid
llvm.agx2.ft1
llvm.agx2.get.layerid
llvm.agx2.get.stp.counter
llvm.agx2.gmdescpack.1d
llvm.agx2.gmdescpack.2d
llvm.agx2.image.block.depth
llvm.agx2.image.block.pp.samples
llvm.agx2.image.block.xdim
llvm.agx2.image.block.ydim
llvm.agx2.imgwblk.1d
llvm.agx2.imgwblk.1d.array
llvm.agx2.imgwblk.1d.array.lod
llvm.agx2.imgwblk.1d.array.lod.rtz
llvm.agx2.imgwblk.1d.array.rtz
llvm.agx2.imgwblk.1d.lod
llvm.agx2.imgwblk.1d.lod.rtz
llvm.agx2.imgwblk.1d.rtz
llvm.agx2.imgwblk.2d
llvm.agx2.imgwblk.2d.array
llvm.agx2.imgwblk.2d.array.lod
llvm.agx2.imgwblk.2d.array.lod.rtz
llvm.agx2.imgwblk.2d.array.rtz
llvm.agx2.imgwblk.2d.lod
llvm.agx2.imgwblk.2d.lod.rtz
llvm.agx2.imgwblk.2d.msaa
llvm.agx2.imgwblk.2d.msaa.array
llvm.agx2.imgwblk.2d.msaa.array.rtz
llvm.agx2.imgwblk.2d.msaa.rtz
llvm.agx2.imgwblk.2d.rtz
llvm.agx2.imgwblk.3d
llvm.agx2.imgwblk.3d.lod
llvm.agx2.imgwblk.3d.lod.rtz
llvm.agx2.imgwblk.3d.rtz
llvm.agx2.imgwblk.coords.1d
llvm.agx2.imgwblk.coords.1d.array
llvm.agx2.imgwblk.coords.1d.array.lod
llvm.agx2.imgwblk.coords.1d.array.lod.rtz
llvm.agx2.imgwblk.coords.1d.array.rtz
llvm.agx2.imgwblk.coords.1d.lod
llvm.agx2.imgwblk.coords.1d.lod.rtz
llvm.agx2.imgwblk.coords.1d.rtz
llvm.agx2.imgwblk.coords.2d
llvm.agx2.imgwblk.coords.2d.array
llvm.agx2.imgwblk.coords.2d.array.lod
llvm.agx2.imgwblk.coords.2d.array.lod.rtz
llvm.agx2.imgwblk.coords.2d.array.rtz
llvm.agx2.imgwblk.coords.2d.lod
llvm.agx2.imgwblk.coords.2d.lod.rtz
llvm.agx2.imgwblk.coords.2d.msaa
llvm.agx2.imgwblk.coords.2d.msaa.array
llvm.agx2.imgwblk.coords.2d.msaa.array.rtz
llvm.agx2.imgwblk.coords.2d.msaa.rtz
llvm.agx2.imgwblk.coords.2d.rtz
llvm.agx2.imgwblk.coords.3d
llvm.agx2.imgwblk.coords.3d.lod
llvm.agx2.imgwblk.coords.3d.lod.rtz
llvm.agx2.imgwblk.coords.3d.rtz
llvm.agx2.imgwblk.coords.cubestf
llvm.agx2.imgwblk.coords.cubestf.array
llvm.agx2.imgwblk.coords.cubestf.array.lod
llvm.agx2.imgwblk.coords.cubestf.array.lod.rtz
llvm.agx2.imgwblk.coords.cubestf.array.rtz
llvm.agx2.imgwblk.coords.cubestf.lod
llvm.agx2.imgwblk.coords.cubestf.lod.rtz
llvm.agx2.imgwblk.coords.cubestf.rtz
llvm.agx2.imgwblk.cubestf
llvm.agx2.imgwblk.cubestf.array
llvm.agx2.imgwblk.cubestf.array.lod
llvm.agx2.imgwblk.cubestf.array.lod.rtz
llvm.agx2.imgwblk.cubestf.array.rtz
llvm.agx2.imgwblk.cubestf.lod
llvm.agx2.imgwblk.cubestf.lod.rtz
llvm.agx2.imgwblk.cubestf.rtz
llvm.agx2.imgwblk.subset.1d
llvm.agx2.imgwblk.subset.1d.array
llvm.agx2.imgwblk.subset.1d.array.lod
llvm.agx2.imgwblk.subset.1d.array.lod.rtz
llvm.agx2.imgwblk.subset.1d.array.rtz
llvm.agx2.imgwblk.subset.1d.lod
llvm.agx2.imgwblk.subset.1d.lod.rtz
llvm.agx2.imgwblk.subset.1d.rtz
llvm.agx2.imgwblk.subset.2d
llvm.agx2.imgwblk.subset.2d.array
llvm.agx2.imgwblk.subset.2d.array.lod
llvm.agx2.imgwblk.subset.2d.array.lod.rtz
llvm.agx2.imgwblk.subset.2d.array.rtz
llvm.agx2.imgwblk.subset.2d.lod
llvm.agx2.imgwblk.subset.2d.lod.rtz
llvm.agx2.imgwblk.subset.2d.msaa
llvm.agx2.imgwblk.subset.2d.msaa.array
llvm.agx2.imgwblk.subset.2d.msaa.array.rtz
llvm.agx2.imgwblk.subset.2d.msaa.rtz
llvm.agx2.imgwblk.subset.2d.rtz
llvm.agx2.imgwblk.subset.3d
llvm.agx2.imgwblk.subset.3d.lod
llvm.agx2.imgwblk.subset.3d.lod.rtz
llvm.agx2.imgwblk.subset.3d.rtz
llvm.agx2.imgwblk.subset.coords.1d
llvm.agx2.imgwblk.subset.coords.1d.array
llvm.agx2.imgwblk.subset.coords.1d.array.lod
llvm.agx2.imgwblk.subset.coords.1d.array.lod.rtz
llvm.agx2.imgwblk.subset.coords.1d.array.rtz
llvm.agx2.imgwblk.subset.coords.1d.lod
llvm.agx2.imgwblk.subset.coords.1d.lod.rtz
llvm.agx2.imgwblk.subset.coords.1d.rtz
llvm.agx2.imgwblk.subset.coords.2d
llvm.agx2.imgwblk.subset.coords.2d.array
llvm.agx2.imgwblk.subset.coords.2d.array.lod
llvm.agx2.imgwblk.subset.coords.2d.array.lod.rtz
llvm.agx2.imgwblk.subset.coords.2d.array.rtz
llvm.agx2.imgwblk.subset.coords.2d.lod
llvm.agx2.imgwblk.subset.coords.2d.lod.rtz
llvm.agx2.imgwblk.subset.coords.2d.msaa
llvm.agx2.imgwblk.subset.coords.2d.msaa.array
llvm.agx2.imgwblk.subset.coords.2d.msaa.array.rtz
llvm.agx2.imgwblk.subset.coords.2d.msaa.rtz
llvm.agx2.imgwblk.subset.coords.2d.rtz
llvm.agx2.imgwblk.subset.coords.3d
llvm.agx2.imgwblk.subset.coords.3d.lod
llvm.agx2.imgwblk.subset.coords.3d.lod.rtz
llvm.agx2.imgwblk.subset.coords.3d.rtz
llvm.agx2.imgwblk.subset.coords.cubestf
llvm.agx2.imgwblk.subset.coords.cubestf.array
llvm.agx2.imgwblk.subset.coords.cubestf.array.lod
llvm.agx2.imgwblk.subset.coords.cubestf.array.lod.rtz
llvm.agx2.imgwblk.subset.coords.cubestf.array.rtz
llvm.agx2.imgwblk.subset.coords.cubestf.lod
llvm.agx2.imgwblk.subset.coords.cubestf.lod.rtz
llvm.agx2.imgwblk.subset.coords.cubestf.rtz
llvm.agx2.imgwblk.subset.cubestf
llvm.agx2.imgwblk.subset.cubestf.array
llvm.agx2.imgwblk.subset.cubestf.array.lod
llvm.agx2.imgwblk.subset.cubestf.array.lod.rtz
llvm.agx2.imgwblk.subset.cubestf.array.rtz
llvm.agx2.imgwblk.subset.cubestf.lod
llvm.agx2.imgwblk.subset.cubestf.lod.rtz
llvm.agx2.imgwblk.subset.cubestf.rtz
llvm.agx2.instance.number
llvm.agx2.instance.valid
llvm.agx2.istackh
llvm.agx2.istackl
llvm.agx2.itr.centroid.1xf
llvm.agx2.itr.centroid.1xh
llvm.agx2.itr.centroid.2xf
llvm.agx2.itr.centroid.2xh
llvm.agx2.itr.centroid.3xf
llvm.agx2.itr.centroid.3xh
llvm.agx2.itr.centroid.4xf
llvm.agx2.itr.centroid.4xh
llvm.agx2.itr.pixel.1xf
llvm.agx2.itr.pixel.1xh
llvm.agx2.itr.pixel.2xf
llvm.agx2.itr.pixel.2xh
llvm.agx2.itr.pixel.3xf
llvm.agx2.itr.pixel.3xh
llvm.agx2.itr.pixel.4xf
llvm.agx2.itr.pixel.4xh
llvm.agx2.itr.sample.1xf
llvm.agx2.itr.sample.1xh
llvm.agx2.itr.sample.2xf
llvm.agx2.itr.sample.2xh
llvm.agx2.itr.sample.3xf
llvm.agx2.itr.sample.3xh
llvm.agx2.itr.sample.4xf
llvm.agx2.itr.sample.4xh
llvm.agx2.itr.tmp.1xf
llvm.agx2.itr.tmp.2xf
llvm.agx2.itr.tmp.3xf
llvm.agx2.itr.tmp.4xf
llvm.agx2.itrproj.centroid.1xf
llvm.agx2.itrproj.centroid.1xh
llvm.agx2.itrproj.centroid.2xf
llvm.agx2.itrproj.centroid.2xh
llvm.agx2.itrproj.centroid.3xf
llvm.agx2.itrproj.centroid.3xh
llvm.agx2.itrproj.centroid.4xf
llvm.agx2.itrproj.centroid.4xh
llvm.agx2.itrproj.pixel.1xf
llvm.agx2.itrproj.pixel.1xh
llvm.agx2.itrproj.pixel.2xf
llvm.agx2.itrproj.pixel.2xh
llvm.agx2.itrproj.pixel.3xf
llvm.agx2.itrproj.pixel.3xh
llvm.agx2.itrproj.pixel.4xf
llvm.agx2.itrproj.pixel.4xh
llvm.agx2.itrproj.sample.1xf
llvm.agx2.itrproj.sample.1xh
llvm.agx2.itrproj.sample.2xf
llvm.agx2.itrproj.sample.2xh
llvm.agx2.itrproj.sample.3xf
llvm.agx2.itrproj.sample.3xh
llvm.agx2.itrproj.sample.4xf
llvm.agx2.itrproj.sample.4xh
llvm.agx2.itrproj.tmp.1xf
llvm.agx2.itrproj.tmp.2xf
llvm.agx2.itrproj.tmp.3xf
llvm.agx2.itrproj.tmp.4xf
llvm.agx2.linear.id
llvm.agx2.lldiblk.1xf
llvm.agx2.lldiblk.1xh
llvm.agx2.lldiblk.2xf
llvm.agx2.lldiblk.2xh
llvm.agx2.lldiblk.3xf
llvm.agx2.lldiblk.3xh
llvm.agx2.lldiblk.4xf
llvm.agx2.lldiblk.4xh
llvm.agx2.lmdescpack.1d
llvm.agx2.lmdescpack.2d
llvm.agx2.load.1xsz16.f16
llvm.agx2.load.1xsz16.f16.cachectl
llvm.agx2.load.1xsz16.i16
llvm.agx2.load.1xsz16.i16.cachectl
llvm.agx2.load.1xsz32.f32
llvm.agx2.load.1xsz32.f32.cachectl
llvm.agx2.load.1xsz32.i32
llvm.agx2.load.1xsz32.i32.cachectl
llvm.agx2.load.2xsz16.f16
llvm.agx2.load.2xsz16.f16.cachectl
llvm.agx2.load.2xsz16.i16
llvm.agx2.load.2xsz16.i16.cachectl
llvm.agx2.load.2xsz32.f32
llvm.agx2.load.2xsz32.f32.cachectl
llvm.agx2.load.2xsz32.i32
llvm.agx2.load.2xsz32.i32.cachectl
llvm.agx2.load.3xsz16.f16
llvm.agx2.load.3xsz16.f16.cachectl
llvm.agx2.load.3xsz16.i16
llvm.agx2.load.3xsz16.i16.cachectl
llvm.agx2.load.3xsz32.f32
llvm.agx2.load.3xsz32.f32.cachectl
llvm.agx2.load.3xsz32.i32
llvm.agx2.load.3xsz32.i32.cachectl
llvm.agx2.load.4xsz16.f16
llvm.agx2.load.4xsz16.f16.cachectl
llvm.agx2.load.4xsz16.i16
llvm.agx2.load.4xsz16.i16.cachectl
llvm.agx2.load.4xsz32.f32
llvm.agx2.load.4xsz32.f32.cachectl
llvm.agx2.load.4xsz32.i32
llvm.agx2.load.4xsz32.i32.cachectl
llvm.agx2.local.x
llvm.agx2.local.y
llvm.agx2.local.z
llvm.agx2.lstiblk.1xf
llvm.agx2.lstiblk.1xh
llvm.agx2.lstiblk.2xf
llvm.agx2.lstiblk.2xh
llvm.agx2.lstiblk.3xf
llvm.agx2.lstiblk.3xh
llvm.agx2.lstiblk.4xf
llvm.agx2.lstiblk.4xh
llvm.agx2.map.sg
llvm.agx2.map.tg
llvm.agx2.memory.fence
llvm.agx2.msaa.mode
llvm.agx2.msg
llvm.agx2.nop
llvm.agx2.pack.1xsz16.f16
llvm.agx2.pack.1xsz16.i16
llvm.agx2.pack.1xsz32.f32
llvm.agx2.pack.1xsz32.i32
llvm.agx2.pack.2xsz16.f16
llvm.agx2.pack.2xsz16.i16
llvm.agx2.pack.2xsz32.f32
llvm.agx2.pack.2xsz32.i32
llvm.agx2.pack.3xsz16.f16
llvm.agx2.pack.3xsz16.i16
llvm.agx2.pack.3xsz32.f32
llvm.agx2.pack.3xsz32.i32
llvm.agx2.pack.4xsz16.f16
llvm.agx2.pack.4xsz16.i16
llvm.agx2.pack.4xsz32.f32
llvm.agx2.pack.4xsz32.i32
llvm.agx2.pack.rne.s32
llvm.agx2.pack.rne.u32
llvm.agx2.pass.number
llvm.agx2.pixel.coord.x
llvm.agx2.pixel.coord.y
llvm.agx2.pixel.depthf
llvm.agx2.pixel.depthf.with.smp
llvm.agx2.pixel.dfdx
llvm.agx2.pixel.dfdy
llvm.agx2.pixel.feedback.depth
llvm.agx2.pixel.feedback.depth.stencil
llvm.agx2.pixel.feedback.stencil
llvm.agx2.pixel.itr.1xf
llvm.agx2.pixel.itr.1xh
llvm.agx2.pixel.itr.2xf
llvm.agx2.pixel.itr.2xh
llvm.agx2.pixel.itr.3xf
llvm.agx2.pixel.itr.3xh
llvm.agx2.pixel.itr.4xf
llvm.agx2.pixel.itr.4xh
llvm.agx2.pixel.itrproj.1xf
llvm.agx2.pixel.itrproj.1xh
llvm.agx2.pixel.itrproj.2xf
llvm.agx2.pixel.itrproj.2xh
llvm.agx2.pixel.itrproj.3xf
llvm.agx2.pixel.itrproj.3xh
llvm.agx2.pixel.itrproj.4xf
llvm.agx2.pixel.itrproj.4xh
llvm.agx2.pixel.movmsk.with.smp
llvm.agx2.pixel.write.coords.f16
llvm.agx2.pixel.write.coords.f32
llvm.agx2.pixel.write.coords.i16
llvm.agx2.pixel.write.coords.i32
llvm.agx2.pixel.write.f16
llvm.agx2.pixel.write.f32
llvm.agx2.pixel.write.i16
llvm.agx2.pixel.write.i32
llvm.agx2.pixrel
llvm.agx2.pixwait
llvm.agx2.pow.f16
llvm.agx2.pow.f32
llvm.agx2.powrd
llvm.agx2.previous.simd.valid.count
llvm.agx2.previous.thread.valid.count
llvm.agx2.program.type
llvm.agx2.qrefl
llvm.agx2.quad.ballot.u.32
llvm.agx2.quad.broadcast.u.i16
llvm.agx2.quad.broadcast.u.i32
llvm.agx2.quad.element
llvm.agx2.quad.group
llvm.agx2.quad.reduce.f.Add
llvm.agx2.quad.reduce.f.Max
llvm.agx2.quad.reduce.f.Min
llvm.agx2.quad.reduce.f.Mul
llvm.agx2.quad.reduce.f16.Add
llvm.agx2.quad.reduce.f16.Max
llvm.agx2.quad.reduce.f16.Min
llvm.agx2.quad.reduce.f16.Mul
llvm.agx2.quad.reduce.i.Add
llvm.agx2.quad.reduce.i.And
llvm.agx2.quad.reduce.i.Max
llvm.agx2.quad.reduce.i.Min
llvm.agx2.quad.reduce.i.Or
llvm.agx2.quad.reduce.i.Xor
llvm.agx2.quad.reduce.u.Max
llvm.agx2.quad.reduce.u.Min
llvm.agx2.quad.rotup.u.i16
llvm.agx2.quad.rotup.u.i32
llvm.agx2.quad.shuffle.down.u.i16
llvm.agx2.quad.shuffle.down.u.i32
llvm.agx2.quad.shuffle.up.u.i16
llvm.agx2.quad.shuffle.up.u.i32
llvm.agx2.quad.xor.u.i16
llvm.agx2.quad.xor.u.i32
llvm.agx2.rcp
llvm.agx2.read.coord.x.pixel
llvm.agx2.read.coord.x.sample
llvm.agx2.read.coord.y.pixel
llvm.agx2.read.coord.y.sample
llvm.agx2.read.first.lane
llvm.agx2.read.sample.number
llvm.agx2.rev
llvm.agx2.rog.texture.fence
llvm.agx2.rsqrt
llvm.agx2.sadd.sat
llvm.agx2.sample.itr.1xf
llvm.agx2.sample.itr.1xh
llvm.agx2.sample.itr.2xf
llvm.agx2.sample.itr.2xh
llvm.agx2.sample.itr.3xf
llvm.agx2.sample.itr.3xh
llvm.agx2.sample.itr.4xf
llvm.agx2.sample.itr.4xh
llvm.agx2.sample.itrproj.1xf
llvm.agx2.sample.itrproj.1xh
llvm.agx2.sample.itrproj.2xf
llvm.agx2.sample.itrproj.2xh
llvm.agx2.sample.itrproj.3xf
llvm.agx2.sample.itrproj.3xh
llvm.agx2.sample.itrproj.4xf
llvm.agx2.sample.itrproj.4xh
llvm.agx2.sample.mask.in
llvm.agx2.sample.read.1xf16
llvm.agx2.sample.read.1xf32
llvm.agx2.sample.read.1xi16
llvm.agx2.sample.read.1xi32
llvm.agx2.sample.read.2xf16
llvm.agx2.sample.read.2xf32
llvm.agx2.sample.read.2xi16
llvm.agx2.sample.read.2xi32
llvm.agx2.sample.read.3xf16
llvm.agx2.sample.read.3xf32
llvm.agx2.sample.read.3xi16
llvm.agx2.sample.read.3xi32
llvm.agx2.sample.read.4xf16
llvm.agx2.sample.read.4xf32
llvm.agx2.sample.read.4xi16
llvm.agx2.sample.read.4xi32
llvm.agx2.sample.read.coords.1xf16
llvm.agx2.sample.read.coords.1xf32
llvm.agx2.sample.read.coords.1xi16
llvm.agx2.sample.read.coords.1xi32
llvm.agx2.sample.read.coords.2xf16
llvm.agx2.sample.read.coords.2xf32
llvm.agx2.sample.read.coords.2xi16
llvm.agx2.sample.read.coords.2xi32
llvm.agx2.sample.read.coords.3xf16
llvm.agx2.sample.read.coords.3xf32
llvm.agx2.sample.read.coords.3xi16
llvm.agx2.sample.read.coords.3xi32
llvm.agx2.sample.read.coords.4xf16
llvm.agx2.sample.read.coords.4xf32
llvm.agx2.sample.read.coords.4xi16
llvm.agx2.sample.read.coords.4xi32
llvm.agx2.shfl
llvm.agx2.simd.ballot.u.32
llvm.agx2.simd.bcast.u.i16
llvm.agx2.simd.bcast.u.i32
llvm.agx2.simd.bfly.u.i16
llvm.agx2.simd.bfly.u.i32
llvm.agx2.simd.broadcast.u.i16
llvm.agx2.simd.broadcast.u.i32
llvm.agx2.simd.element
llvm.agx2.simd.group
llvm.agx2.simd.reduce.f.Add
llvm.agx2.simd.reduce.f.Max
llvm.agx2.simd.reduce.f.Min
llvm.agx2.simd.reduce.f.Mul
llvm.agx2.simd.reduce.f16.Add
llvm.agx2.simd.reduce.f16.Max
llvm.agx2.simd.reduce.f16.Min
llvm.agx2.simd.reduce.f16.Mul
llvm.agx2.simd.reduce.i.Add
llvm.agx2.simd.reduce.i.And
llvm.agx2.simd.reduce.i.Max
llvm.agx2.simd.reduce.i.Min
llvm.agx2.simd.reduce.i.Or
llvm.agx2.simd.reduce.i.Xor
llvm.agx2.simd.reduce.u.Max
llvm.agx2.simd.reduce.u.Min
llvm.agx2.simd.rotup.u.i16
llvm.agx2.simd.rotup.u.i32
llvm.agx2.simd.shff.dn.f
llvm.agx2.simd.shff.dn.i
llvm.agx2.simd.shff.up.f
llvm.agx2.simd.shff.up.i
llvm.agx2.simd.shift.down.u.i16
llvm.agx2.simd.shift.down.u.i32
llvm.agx2.simd.shift.up.u.i16
llvm.agx2.simd.shift.up.u.i32
llvm.agx2.simd.shuffle.down.u.i16
llvm.agx2.simd.shuffle.down.u.i32
llvm.agx2.simd.shuffle.u.i16
llvm.agx2.simd.shuffle.u.i32
llvm.agx2.simd.shuffle.up.u.i16
llvm.agx2.simd.shuffle.up.u.i32
llvm.agx2.simd.xor.u.i16
llvm.agx2.simd.xor.u.i32
llvm.agx2.simdgroup.barrier.with.scope
llvm.agx2.sin
llvm.agx2.sinc
llvm.agx2.smad.sat
llvm.agx2.smsub.sat
llvm.agx2.smul.sat
llvm.agx2.sqrt.step
llvm.agx2.ssub.sat
llvm.agx2.store.1xsz16.f16
llvm.agx2.store.1xsz16.f16.cachectl
llvm.agx2.store.1xsz16.i16
llvm.agx2.store.1xsz16.i16.cachectl
llvm.agx2.store.1xsz32.f32
llvm.agx2.store.1xsz32.f32.cachectl
llvm.agx2.store.1xsz32.i32
llvm.agx2.store.1xsz32.i32.cachectl
llvm.agx2.store.2xsz16.f16
llvm.agx2.store.2xsz16.f16.cachectl
llvm.agx2.store.2xsz16.i16
llvm.agx2.store.2xsz16.i16.cachectl
llvm.agx2.store.2xsz32.f32
llvm.agx2.store.2xsz32.f32.cachectl
llvm.agx2.store.2xsz32.i32
llvm.agx2.store.2xsz32.i32.cachectl
llvm.agx2.store.3xsz16.f16
llvm.agx2.store.3xsz16.f16.cachectl
llvm.agx2.store.3xsz16.i16
llvm.agx2.store.3xsz16.i16.cachectl
llvm.agx2.store.3xsz32.f32
llvm.agx2.store.3xsz32.f32.cachectl
llvm.agx2.store.3xsz32.i32
llvm.agx2.store.3xsz32.i32.cachectl
llvm.agx2.store.4xsz16.f16
llvm.agx2.store.4xsz16.f16.cachectl
llvm.agx2.store.4xsz16.i16
llvm.agx2.store.4xsz16.i16.cachectl
llvm.agx2.store.4xsz32.f32
llvm.agx2.store.4xsz32.f32.cachectl
llvm.agx2.store.4xsz32.i32
llvm.agx2.store.4xsz32.i32.cachectl
llvm.agx2.syncbuf
llvm.agx2.texture.memory.fence
llvm.agx2.thread.position.in.grid.x
llvm.agx2.thread.position.in.grid.y
llvm.agx2.thread.position.in.grid.z
llvm.agx2.threadgroup.barrier.with.scope
llvm.agx2.threadgroup.id
llvm.agx2.threadgroup.x
llvm.agx2.threadgroup.x.size
llvm.agx2.threadgroup.y
llvm.agx2.threadgroup.y.size
llvm.agx2.threadgroup.z
llvm.agx2.threadgroup.z.size
llvm.agx2.tile.id
llvm.agx2.total.simd.valid.count
llvm.agx2.total.thread.valid.count
llvm.agx2.tpp.visibility.pass
llvm.agx2.tsci
llvm.agx2.uadd.sat
llvm.agx2.umad.sat
llvm.agx2.umsub.sat
llvm.agx2.umul.sat
llvm.agx2.unmap.sg
llvm.agx2.unmap.tg
llvm.agx2.unpack.1xsz16.f16
llvm.agx2.unpack.1xsz16.i16
llvm.agx2.unpack.1xsz32.f32
llvm.agx2.unpack.1xsz32.i32
llvm.agx2.unpack.2xsz16.f16
llvm.agx2.unpack.2xsz16.i16
llvm.agx2.unpack.2xsz32.f32
llvm.agx2.unpack.2xsz32.i32
llvm.agx2.unpack.3xsz16.f16
llvm.agx2.unpack.3xsz16.i16
llvm.agx2.unpack.3xsz32.f32
llvm.agx2.unpack.3xsz32.i32
llvm.agx2.unpack.4xsz16.f16
llvm.agx2.unpack.4xsz16.i16
llvm.agx2.unpack.4xsz32.f32
llvm.agx2.unpack.4xsz32.i32
llvm.agx2.update.hw.coverage.mask.coords.i16
llvm.agx2.update.hw.coverage.mask.i16
llvm.agx2.usub.sat
llvm.agx2.util.data.hi
llvm.agx2.util.data.lo
llvm.agx2.util.func
llvm.agx2.vertex.amp.id.count
llvm.agx2.vertex.amp.id.count.i32
llvm.agx2.vertex.amp.id.mask.i32
llvm.agx2.vertex.clip.amplified.write
llvm.agx2.vertex.clip.write
llvm.agx2.vertex.layerid.amplified.write.i32
llvm.agx2.vertex.layerid.write.i32
llvm.agx2.vertex.pos.amplified.write
llvm.agx2.vertex.pos.write
llvm.agx2.vertex.ptsize.amplified.write
llvm.agx2.vertex.ptsize.write
llvm.agx2.vertex.varying.amplified.struct.write.f32
llvm.agx2.vertex.varying.amplified.struct.write.i32
llvm.agx2.vertex.varying.amplified.write.f32
llvm.agx2.vertex.varying.amplified.write.i32
llvm.agx2.vertex.varying.struct.write.f32
llvm.agx2.vertex.varying.struct.write.i32
llvm.agx2.vertex.varying.write.f32
llvm.agx2.vertex.varying.write.i32
llvm.agx2.vertex.viewportid.amplified.write.i32
llvm.agx2.vertex.viewportid.write.i32
llvm.agx2.vertex.write
llvm.agx2.vertex.writef
llvm.agx2.workgroup.id
vararg
isVoid
Metadata
bf16
f128
ppcf128
x86mmx
value isn't a global
global isn't in section "llvm.ptrauth"
global doesn't have an initializer
global isn't a struct
global doesn't have type '{ i8*, i32, i64, i64 }'
key isn't a constant integer
address discriminator isn't a constant integer or expr
discriminator isn't a constant integer
<unknown>:
 (function: 
Print module to stderr
print-module
Print Module IR
Print function to stderr
print-function
Print Function IR
Print BB to stderr
print-bb
Print BasicBlock IR
switch
indirectbr
invoke
resume
unreachable
cleanupret
catchret
catchpad
catchswitch
fmul
udiv
sdiv
fdiv
urem
srem
frem
alloca
load
store
cmpxchg
atomicrmw
fence
getelementptr
trunc
zext
sext
fptrunc
fpext
fptoui
fptosi
uitofp
sitofp
inttoptr
ptrtoint
bitcast
addrspacecast
icmp
fcmp
select
call
lshr
ashr
va_arg
extractelement
insertelement
shufflevector
extractvalue
insertvalue
landingpad
cleanuppad
<Invalid operator> 
branch_weights
both values to select must have same type
select values cannot have token type
vector select condition element type must be i1
selected values for vector select must be vectors
vector select requires selected vectors to have the same vector length as select condition
select condition must be i1 or <n x i1>
xchg
nand
umax
umin
fadd
fsub
<invalid operation>
unknown
mallocsize
malloc
malloccall
free
tbaa
prof
fpmath
range
tbaa.struct
invariant.load
alias.scope
noalias
nontemporal
llvm.mem.parallel_loop_access
nonnull
dereferenceable
dereferenceable_or_null
make.implicit
unpredictable
invariant.group
align
llvm.loop
type
section_prefix
absolute_symbol
associated
callees
irr_loop
deopt
funclet
gc-transition
singlethread
error
warning
remark
note
debug-pass
Print PassManager debugging information
Disabled
disable debug output
Arguments
print pass arguments to pass to 'opt'
Structure
print pass structure before run()
Executions
print pass name before it is executed
Details
print pass details when it is executed
print-before
Print IR before specified passes
print-after
Print IR after specified passes
print-before-all
Print IR before each pass
print-after-all
Print IR after each pass
print-module-scope
When printing IR for print-[before|after]{-all} always print a module IR
filter-print-funcs
function names
Only print IR for functions whose name match this for all print-[before|after][-all] options
size-info
IRSizeChange
Pass
: IR instruction count changed from 
IRInstrsBefore
 to 
IRInstrsAfter
; Delta: 
DeltaInstrCount
Releasing pass '
Running pass '
 on module '
 on 
function
basic block
value
Pass '
' is not initialized.
Verify if there is a pass dependency cycle.
Required Passes:
Error: Required pass not found! Possible causes:
- Pass misconfiguration (e.g.: missing macros)
- Corruption of the global PassRegistry
*** IR Dump Before 
) ***
*** IR Dump After 
Pass Arguments: 
 -- '
' is not preserving '
 -*- '
' is the last user of following pass instances.
 Free these instances
Executing Pass '
Made Modification '
 Freeing Pass '
' on BasicBlock '
'...
' on Function '
' on Module '
' on Region '
' on Loop '
' on Call Graph Nodes '
Required
Preserved
Used
 Analyses:
 Uninitialized Pass
FunctionPass Manager
time-passes
Time each pass, printing elapsed time for each on exit
Cannot find option named '
Module Pass Manager
ModulePass Manager
pass
... Pass execution timing report ...
BasicBlock Pass Manager
BasicBlockPass Manager
Function Pass Manager
Error reading bitcode file: 
cl::location(x) specified more than once!
function_section_prefix
__unnamed_
llvm.module.flags
Dwarf Version
CodeView
PIC Level
PIE Level
ProfileSummary
RtLibUseGOT
SDK Version
Target Variant SDK Version
 node
External
 (has loop)
opt-bisect-limit
Maximum optimization to perform
module (
function (
basic block (
) in function (
region
loop
SCC (
<<null function>>
NOT 
BISECT: 
running pass 
Unnamed pass: implement Pass::getPassName()
Pass::print not implemented for pass: '
Two passes with the same argument (-
) attempted to be registered!
SmallVector capacity overflow during allocation
Invalidating all non-preserved analyses for: 
Invalidating analysis: 
Running analysis: 
safepoint-ir-verifier-print-only
safepoint verifier
Verifying gc pointers in function: 
No illegal uses found by SafepointIRVerifier in: 
Illegal use of unrelocated value found!
Def: 
Use: 
Safepoint IR Verifier
verify-safepoint-ir
InstrProf
SampleProfile
DetailedSummary
ProfileFormat
TotalCount
MaxCount
MaxInternalCount
MaxFunctionCount
NumCounts
NumFunctions
statepoint-id
statepoint-num-patch-bytes
non-global-value-max-name-size
Maximum size for the name of non-global values.
Allocation failed
Base nodes must have at least two operands
Access tag nodes must have the number of operands that is a multiple of 3!
Struct tag nodes must have an odd number of operands!
Type size nodes must be constants!
Struct tag nodes have a string as their first operand
Incorrect field entry in struct type node!
Offset entries must be constants!
Bitwidth between the offsets and struct type entries must match
Offsets must be increasing!
Member size entries must be constants!
Could not find TBAA parent in struct type node
This instruction shall not have a TBAA access tag!
Old-style TBAA is no longer allowed, use struct-path TBAA instead
Access tag metadata must have either 4 or 5 operands
Struct tag metadata must have either 3 or 4 operands
Access size field must be a constant
Immutability tag on struct tag metadata must be a constant
Immutability part of the struct tag metadata must be either 0 or 1
Malformed struct tag metadata: base and access-type should be non-null and point to Metadata nodes
Access type node must be a valid scalar type
Offset must be constant integer
Cycle detected in struct path
Offset not zero at the point of scalar access
Access bit-width not the same as description bit-width
Did not see access type in access path!
Broken module found, compilation aborted!
Broken function found, compilation aborted!
Basic Block in function '
' does not have terminator!
Function context does not match Module context!
Functions may not have common linkage
# formal arguments must match # of arguments for function type!
Functions cannot return aggregate values!
Invalid struct return type!
Attribute after last parameter!
Attribute 'builtin' can only be applied to a callsite.
Calling convention requires void return type
Calling convention does not allow sret
Calling convention does not support varargs or perfect forwarding!
llvm.
Argument value does not match function argument type!
Function arguments must have first-class types!
Function takes metadata but isn't an intrinsic
Function takes token but isn't an intrinsic
Functions returns a token but isn't an intrinsic
Referencing personality function in another module!
unmaterialized function cannot have metadata
function declaration may not have a !dbg attachment
function declaration may not have a !prof attachment
Function declaration shouldn't have a personality routine
llvm intrinsics cannot be defined!
Entry block to function must not have predecessors!
blockaddress may not be used with the entry block!
function must have a single !dbg attachment
function !dbg attachment must be a subprogram
DISubprogram attached to more than one function
function must have a single !prof attachment
Invalid user of intrinsic instruction!
!dbg attachment points at wrong subprogram for function
Global is external, but doesn't have external or weak linkage!
huge alignment values are unsupported
Only global variables can have appending linkage!
Only global arrays can have appending linkage!
Declaration may not be in a Comdat!
GlobalValue with DLLImport Storage is dso_local!
Global is marked as dllimport, but not external
GlobalValue with private or internal linkage must be dso_local!
GlobalValue with non default visibility must be dso_local!
Global is referenced by parentless instruction!
Global is referenced in a different module!
Global is used by function in a different module
; ModuleID = '
Attributes 'byval', 'inalloca', 'nest', 'sret', 'nocapture', 'returned', 'swiftself', and 'swifterror' do not apply to return values!
Attribute '
' does not apply to function returns
More than one parameter has attribute nest!
More than one parameter has attribute returned!
Incompatible argument and return types for 'returned' attribute
Cannot have multiple 'sret' parameters!
Attribute 'sret' is not on first or second parameter!
Cannot have multiple 'swiftself' parameters!
Cannot have multiple 'swifterror' parameters!
inalloca isn't on the last parameter!
Attributes 'readnone and readonly' are incompatible!
Attributes 'readnone and writeonly' are incompatible!
Attributes 'readonly and writeonly' are incompatible!
Attributes 'readnone and inaccessiblemem_or_argmemonly' are incompatible!
Attributes 'readnone and inaccessiblememonly' are incompatible!
Attributes 'noinline and alwaysinline' are incompatible!
Attribute 'optnone' requires 'noinline'!
Attributes 'optsize and optnone' are incompatible!
Attributes 'minsize and optnone' are incompatible!
Attribute 'jumptable' requires 'unnamed_addr'
element size
number of elements
Attributes 'byval', 'inalloca', 'inreg', 'nest', and 'sret' are incompatible!
Attributes 'inalloca and readonly' are incompatible!
Attributes 'sret and returned' are incompatible!
Attributes 'zeroext and signext' are incompatible!
Attribute 'byval' type does not match parameter!
Wrong types for attribute: 
Attributes 'byval' and 'inalloca' do not support unsized types!
Attribute 'swifterror' only applies to parameters with pointer to pointer type!
Attribute 'byval' only applies to parameters with pointer type!
Attribute 'swifterror' only applies to parameters with pointer type!
' only applies to functions!
' does not apply to functions!
'allocsize' 
 argument is out of bounds
 argument must refer to an integer parameter
swifterror value can only be loaded and stored from, or as a swifterror argument!
swifterror value should be the second operand when used by stores
swifterror value when used in a callsite should be marked with swifterror attribute
!prof annotations should have no less than 2 operands
first operand should not be null
expected string with name of the !prof annotation
function_entry_count
synthetic_function_entry_count
first operand should be 'function_entry_count' or 'synthetic_function_entry_count'
second operand should not be null
expected integer argument to function_entry_count
Invalid operand for global metadata!
Expected no forward declarations!
All nodes should be resolved!
location requires a valid scope
inlined-at should be a location
scope points into the type hierarchy
invalid expression
missing variable
fragment is larger than or outside of variable
fragment covers entire variable
invalid tag
Count must either be a signed constant or a DIVariable
invalid subrange count
invalid pointer to member type
invalid scope
invalid base type
DWARF address space only applies to pointer or reference types
invalid file
invalid composite elements
invalid vtable holder
invalid reference flags
invalid vector, expected one element of type subrange
class/union requires a filename
discriminator can only appear on variant part
invalid template params
invalid template parameter
invalid subroutine type ref
invalid checksum kind
invalid checksum length
invalid checksum
compile units must be distinct
invalid filename
invalid emission kind
invalid enum list
invalid enum type
invalid retained type list
invalid retained type
invalid global variable list
invalid global variable ref
invalid imported entity list
invalid imported entity ref
invalid macro list
invalid macro ref
line specified with no file
invalid subroutine type
invalid containing type
invalid subprogram declaration
invalid retained nodes list
invalid retained nodes, expected DILocalVariable or DILabel
subprogram definitions must be distinct
subprogram definitions must have a compile unit
invalid unit type
subprogram declarations must not have a compile unit
invalid thrown types list
invalid thrown type
DIFlagAllCallsDescribed must be attached to a definition
cannot have column info without line info
invalid local scope
invalid scope ref
anonymous module
invalid type ref
missing global variable name
missing global variable type
invalid static data member declaration
local variable requires a valid scope
label requires a valid scope
invalid scope for imported entity
invalid imported entity
invalid macinfo type
anonymous macro
Expected valid value
Unexpected metadata round-trip through values
function-local metadata used outside a function
function-local metadata not in basic block
function-local metadata used in wrong function
Basic Block does not have terminator!
PHI nodes must have at least one entry.  If the block is dead, the PHI should be removed!
PHINode should have one entry for each predecessor of its parent basic block!
PHI node has multiple entries for the same basic block with different incoming values!
PHI node entries do not match predecessors!
Instruction has bogus parent pointer!
Operand is null
Found return instr that returns non-void in Function of void return type!
Function return type does not match operand type of return inst!
Terminator found in the middle of a basic block!
Instruction not embedded in basic block!
Only PHI nodes may reference their own value!
Instruction has a name, but provides a void value!
Instruction returns a non-scalar type!
Invalid use of metadata!
Instruction referencing instruction not embedded in a basic block!
Use of instruction is not an instruction!
Instruction has null operand!
Instruction operands must be first-class values!
Cannot take the address of an intrinsic!
Cannot invoke an intrinsic other than donothing, patchpoint, statepoint, coro_resume or coro_destroy
Referencing function in another module!
Referring to a basic block in another function!
Referring to an argument in another function!
Referencing global in another module!
Cannot take the address of an inline asm!
fpmath requires a floating point result!
fpmath takes one operand!
fpmath accuracy must have float type
fpmath accuracy not a positive number!
invalid fpmath accuracy!
Ranges are only for loads, calls and invokes!
nonnull applies only to pointer types
nonnull applies only to load instructions, use attributes for calls or invokes
align applies only to pointer types
align applies only to load instructions, use attributes for calls or invokes
align takes one operand!
align metadata value must be an i64!
align metadata value must be a power of 2!
alignment is larger that implementation defined limit
invalid !dbg metadata attachment
Instruction does not dominate all uses!
Invalid bitcast
inttoptr not supported for non-integral pointers
ptrtoint not supported for non-integral pointers
Unfinished range!
It should have at least one range!
The lower limit must be an integer!
The upper limit must be an integer!
Range types must match instruction type!
Range must not be empty!
Intervals are overlapping
Intervals are not in order
Intervals are contiguous
dereferenceable, dereferenceable_or_null apply only to pointer types
dereferenceable, dereferenceable_or_null apply only to load instructions, use attributes for calls or invokes
dereferenceable, dereferenceable_or_null take one operand!
dereferenceable, dereferenceable_or_null metadata value must be an i64!
Branch condition is not 'i1' type!
Switch constants must all be same type as switch value!
Duplicate integer as switch case
Indirectbr operand must have pointer type!
Indirectbr destinations must all have pointer type!
The unwind destination does not have an exception handling instruction!
Called function must be a pointer!
Called function is not pointer to function type!
Called function is not the same type as the call!
Called function requires more parameters than were provided!
Incorrect number of arguments passed to called function!
Call parameter type does not match function signature!
speculatable attribute may not apply to call sites
inalloca argument for call has mismatched alloca
swifterror argument for call has mismatched alloca
swifterror argument should come from an alloca or parameter
swifterror argument for call has mismatched parameter
Attribute 'sret' cannot be used for vararg call arguments!
inalloca isn't on the last argument!
Function has metadata parameter but isn't an intrinsic
Function has token parameter but isn't an intrinsic
Return type cannot be token for indirect call!
Multiple deopt operand bundles
Multiple gc-transition operand bundles
Multiple funclet operand bundles
Expected exactly one funclet bundle operand
Funclet bundle operands should correspond to a FuncletPadInst
ptrauth
Multiple ptrauth operand bundles
Expected exactly two ptrauth bundle operand
Ptrauth bundle key operand must be an i32 constant
Ptrauth bundle discriminator operand must be an i64
inlinable function call in a function with debug info must have a !dbg location
Intrinsic functions should never be defined!
Intrinsic has incorrect return type!
Intrinsic has incorrect argument type!
Intrinsic was not defined with variable arguments!
Callsite was not defined with variable arguments!
Intrinsic has too few arguments!
Intrinsic name not mangled correctly for type arguments! Should be: 
info argument of llvm.coro.begin must refer to an initialized constant
info argument of llvm.coro.begin must refer to either a struct or an array
is_zero_undef argument of bit counting intrinsics must be a constant int
invalid llvm.dbg.declare intrinsic call 1
declare
addr
label
alignment of arg 0 of memory intrinsic must be 0 or a power of 2
alignment of arg 1 of memory intrinsic must be 0 or a power of 2
isvolatile argument of memory intrinsics must be a constant int
element size of the element-wise unordered atomic memory intrinsic must be a constant int
element size of the element-wise atomic memory intrinsic must be a power of 2
constant length must be a multiple of the element size in the element-wise atomic memory intrinsic
incorrect alignment of the destination argument
incorrect alignment of the source argument
llvm.gcroot parameter #1 must be an alloca.
llvm.gcroot parameter #2 must be a constant.
llvm.gcroot parameter #1 must either be a pointer alloca, or argument #2 must be a non-null constant.
Enclosing function does not use GC.
llvm.init_trampoline parameter #2 must resolve to a function.
invalid arguments to llvm.prefetch
llvm.stackprotector parameter #2 must resolve to an alloca.
size argument of memory use markers must be a constant integer
llvm.invariant.end parameter #2 must be a constant integer
llvm.localescape used outside of entry block
multiple calls to llvm.localescape in one function
llvm.localescape only accepts static allocas
llvm.localrecover first argument must be function defined in this module
idx argument of llvm.localrecover must be a constant int
gc.statepoint support for inline assembly unimplemented
gc.result operand #1 must be from a statepoint
gc.result result type does not match wrapped callee
wrong number of arguments
gc.relocate must return a pointer or a vector of pointers
safepoints should have unique landingpads
safepoint block should be well formed
gc relocate should be linked to a statepoint
gc relocate is incorrectly tied to the statepoint
gc.relocate operand #2 must be integer offset
gc.relocate operand #3 must be integer offset
gc.relocate: statepoint base index out of bounds
gc.relocate: statepoint derived index out of bounds
gc.statepoint: insufficient arguments
gc.statement: number of call arguments must be constant integer
gc.statepoint: mismatch in number of call arguments
gc.statepoint: number of transition arguments must be a constant integer
gc.statepoint: number of deoptimization arguments must be a constant integer
gc.relocate: statepoint base index doesn't fall within the 'gc parameters' section of the statepoint call
gc.relocate: statepoint derived index doesn't fall within the 'gc parameters' section of the statepoint call
gc.relocate: relocated value must be a gc pointer
gc.relocate: vector relocates to vector and pointer to pointer
gc.relocate: relocating a pointer shouldn't change its address space
eh.exceptionpointer argument must be a catchpad
masked_load: must return a vector
masked_load: mask must be vector
masked_load: return must match pointer type
masked_load: pass through and data type must match
masked_load: vector mask must be same length as data
masked_store: mask must be vector
masked_store: storee must match pointer type
masked_store: vector mask must be same length as data
experimental_guard cannot be invoked
experimental_guard must have exactly one "deopt" operand bundle
experimental_deoptimize cannot be invoked
experimental_deoptimize must have exactly one "deopt" operand bundle
experimental_deoptimize return type must match caller return type
calls to experimental_deoptimize must be followed by a return
calls to experimental_deoptimize must be followed by a return of the value computed by experimental_deoptimize
ptrauth key must be a constant integer
invalid arguments for constrained FP intrinsic
invalid exception behavior argument
invalid rounding mode argument
invalid llvm.dbg.
 intrinsic address/value
 intrinsic variable
 intrinsic expression
llvm.dbg.
 intrinsic requires a !dbg attachment
mismatched subprogram between llvm.dbg.
 variable and !dbg attachment
BlockByRef variable without complex expression
dbg intrinsic without variable
conflicting debug info for argument
 label and !dbg attachment
gc.statepoint must read and write all memory to preserve reordering restrictions required by safepoint semantics
gc.statepoint ID must be a constant integer
gc.statepoint number of patchable bytes must be a constant integer
gc.statepoint number of patchable bytes must be positive
gc.statepoint callee must be of function pointer type
gc.statepoint number of arguments to underlying call must be constant integer
gc.statepoint number of arguments to underlying call must be positive
gc.statepoint mismatch in number of vararg call args
gc.statepoint doesn't support wrapping non-void vararg functions yet
gc.statepoint mismatch in number of call args
gc.statepoint flags must be constant integer
unknown flag used in gc.statepoint flags argument
gc.statepoint call argument does not match wrapped function type
gc.statepoint number of transition arguments must be constant integer
gc.statepoint number of transition arguments must be positive
gc.statepoint number of deoptimization arguments must be constant integer
gc.statepoint number of deoptimization arguments must be positive
gc.statepoint too few arguments according to length fields
illegal use of statepoint token
gc.result or gc.relocate are the only value uses of a gc.statepoint
gc.result connected to wrong gc.statepoint
gc.relocate connected to wrong gc.statepoint
ResumeInst needs to be in a function with a personality.
The resume instruction should have a consistent result type inside a function.
CleanupReturnInst needs to be provided a CleanupPad
CleanupReturnInst must unwind to an EH block which is not a landingpad.
CatchReturnInst needs to be provided a CatchPad
CatchSwitchInst needs to be in a function with a personality.
CatchSwitchInst not the first non-PHI instruction in the block.
CatchSwitchInst has an invalid parent.
CatchSwitchInst must unwind to an EH block which is not a landingpad.
CatchSwitchInst cannot have empty handler list
CatchSwitchInst handlers must be catchpads
EH pad cannot be in entry block.
Block containing LandingPadInst must be jumped to only by the unwind edge of an invoke.
Block containg CatchPadInst must be jumped to only by its catchswitch.
Catchswitch cannot unwind to one of its catchpads
EH pad must be jumped to via an unwind edge
A cleanupret must exit its cleanup
EH pad cannot handle exceptions raised within it
A single unwind edge may only enter one EH pad
EH pad jumps through a cycle of pads
Both operands to a binary operator are not of the same type!
Integer arithmetic operators only work with integral types!
Integer arithmetic operators must have same type for operands and result!
Floating-point arithmetic operators only work with floating-point types!
Floating-point arithmetic operators must have same type for operands and result!
Logical operators only work with integral types!
Logical operators must have same type for operands and result!
Shifts only work with integral types!
Shift return type must be same as operands!
Allocation instruction pointer not in the stack address space!
Cannot allocate unsized type
Alloca array size must have integer type
Load operand must be a pointer.
loading unsized types is not allowed
Load cannot have Release ordering
Atomic load must specify explicit alignment
atomic load operand must have integer, pointer, or floating point type!
Non-atomic load cannot have SynchronizationScope specified
atomic memory access' size must be byte-sized
atomic memory access' operand must have a power-of-two size
Store operand must be a pointer.
Stored value type does not match pointer operand type!
storing unsized types is not allowed
Store cannot have Acquire ordering
Atomic store must specify explicit alignment
atomic store operand must have integer, pointer, or floating point type!
Non-atomic store cannot have SynchronizationScope specified
GEP base pointer is not a vector or a vector of pointers
GEP into unsized type!
GEP indexes must be integers
Invalid indices for GEP pointer type!
GEP is not of right type for indices!
Vector GEP result width doesn't match operand's
Invalid GEP index vector width
All GEP indices should be of integer type
fence instructions may only have acquire, release, acq_rel, or seq_cst ordering.
cmpxchg instructions must be atomic.
cmpxchg instructions cannot be unordered.
cmpxchg instructions failure argument shall be no stronger than the success argument
cmpxchg failure ordering cannot include release semantics
First cmpxchg operand must be a pointer.
cmpxchg operand must have integer or pointer type
Expected value type does not match pointer operand type!
atomicrmw instructions must be atomic.
atomicrmw instructions cannot be unordered.
First atomicrmw operand must be a pointer.
atomicrmw 
 operand must have integer or floating point type!
 operand must have floating point type!
 operand must have integer type!
Argument value type does not match pointer operand type!
Invalid binary operation!
Trunc only operates on integer
Trunc only produces integer
trunc source and destination must both be a vector or neither
DestTy too big for Trunc
ZExt only operates on integer
ZExt only produces an integer
zext source and destination must both be a vector or neither
Type too small for ZExt
SExt only operates on integer
SExt only produces an integer
sext source and destination must both be a vector or neither
Type too small for SExt
FPToUI source and dest must both be vector or scalar
FPToUI source must be FP or FP vector
FPToUI result must be integer or integer vector
FPToUI source and dest vector length mismatch
FPToSI source and dest must both be vector or scalar
FPToSI source must be FP or FP vector
FPToSI result must be integer or integer vector
FPToSI source and dest vector length mismatch
UIToFP source and dest must both be vector or scalar
UIToFP source must be integer or integer vector
UIToFP result must be FP or FP vector
UIToFP source and dest vector length mismatch
SIToFP source and dest must both be vector or scalar
SIToFP source must be integer or integer vector
SIToFP result must be FP or FP vector
SIToFP source and dest vector length mismatch
FPTrunc only operates on FP
FPTrunc only produces an FP
fptrunc source and destination must both be a vector or neither
DestTy too big for FPTrunc
FPExt only operates on FP
FPExt only produces an FP
fpext source and destination must both be a vector or neither
DestTy too small for FPExt
PtrToInt source must be pointer
PtrToInt result must be integral
PtrToInt type mismatch
PtrToInt Vector width mismatch
IntToPtr source must be an integral
IntToPtr result must be a pointer
IntToPtr type mismatch
IntToPtr Vector width mismatch
AddrSpaceCast source must be a pointer
AddrSpaceCast result must be a pointer
AddrSpaceCast must be between different address spaces
AddrSpaceCast vector pointer number of elements mismatch
CleanupPadInst needs to be in a function with a personality.
CleanupPadInst not the first non-PHI instruction in the block.
CleanupPadInst has an invalid parent.
FuncletPadInst must not be nested within itself
Bogus funclet pad use
Unwind edges out of a funclet pad must have the same unwind dest
Unwind edges out of a catch must have the same unwind dest as the parent catchswitch
CatchPadInst needs to be in a function with a personality.
CatchPadInst needs to be directly nested in a CatchSwitchInst.
CatchPadInst not the first non-PHI instruction in the block.
Both operands to ICmp instruction are not of the same type!
Invalid operand types for ICmp instruction
Invalid predicate in ICmp instruction!
Both operands to FCmp instruction are not of the same type!
Invalid operand types for FCmp instruction
Invalid predicate in FCmp instruction!
PHI nodes not grouped at top of basic block!
PHI nodes cannot have token type!
PHI node operands are not the same type as the result!
cannot use musttail call with inline asm
cannot guarantee tail call due to mismatched parameter counts
cannot guarantee tail call due to mismatched parameter types
cannot guarantee tail call due to mismatched varargs
cannot guarantee tail call due to mismatched return types
cannot guarantee tail call due to mismatched calling conv
cannot guarantee tail call due to mismatched ABI impacting function attributes
bitcast following musttail call must use the call
musttail call must precede a ret with an optional bitcast
musttail call result must be returned
Invalid operands for select instruction!
Select values must have same type as select instruction!
User-defined operators should not live outside of a pass!
Invalid extractelement operands!
Invalid insertelement operands!
Invalid shufflevector operands!
Invalid ExtractValueInst operands!
Invalid InsertValueInst operands!
LandingPadInst needs at least one clause or to be a cleanup.
The landingpad instruction should have a consistent result type inside a function.
LandingPadInst needs to be in a function with a personality.
LandingPadInst not the first non-PHI instruction in the block.
Catch operand does not have pointer type!
Clause is neither catch nor filter!
Filter operand is not an array of constants!
EH pads can't handle each other's exceptions
all indices passed to llvm.localrecover must be less than the number of arguments passed ot llvm.localescape in the parent function
Global variable initializer type does not match global variable type!
'common' global must have a zero initializer!
'common' global may not be marked constant!
'common' global may not be in a Comdat!
llvm.global_ctors
llvm.global_dtors
invalid linkage for intrinsic global variable
wrong type for intrinsic global variable
llvm.used
llvm.compiler.used
wrong initalizer for intrinsic global variable
invalid llvm.used member
members of llvm.used must be named
invalid llvm.ptrauth global: 
!dbg attachment of global variable must be a DIGlobalVariableExpression
Alias should have private, internal, linkonce, weak, linkonce_odr, weak_odr, or external linkage!
Aliasee cannot be NULL!
Alias and aliasee types should match!
Aliasee should be either GlobalValue or ConstantExpr
Alias must point to a definition
Aliases cannot form a cycle
Alias cannot point to an interposable alias
llvm.dbg.cu
unrecognized named metadata node in the llvm.dbg namespace
invalid compile unit
comdat global value has private linkage
invalid requirement on flag, flag is not present in module
invalid requirement on flag, flag does not have the required value
incorrect number of operands in module flag
invalid behavior operand in module flag (expected constant integer)
invalid behavior operand in module flag (unexpected constant)
invalid ID operand in module flag (expected metadata string)
invalid value for 'max' module flag (expected constant integer)
invalid value for 'require' module flag (expected metadata pair)
invalid value for 'require' module flag (first value operand should be a string)
invalid value for 'append'-type module flag (expected a metadata node)
module flag identifiers must be unique (or of 'require' type)
wchar_size
wchar_size metadata requires constant integer argument
Linker Options
llvm.linker.options
'Linker Options' named metadata no longer supported
expected a MDNode triple
expected an integer constant
expected a Function or null
llvm.ident
incorrect number of operands in llvm.ident metadata
invalid value for llvm.ident metadata entry operand(the operand should be a string)
llvm.commandline
incorrect number of operands in llvm.commandline metadata
invalid value for llvm.commandline metadata entry operand(the operand should be a string)
DICompileUnit not listed in llvm.dbg.cu
All llvm.experimental.deoptimize declarations must have the same calling convention
Module Verifier
verify
DW_TAG_null
DW_TAG_array_type
DW_TAG_class_type
DW_TAG_entry_point
DW_TAG_enumeration_type
DW_TAG_formal_parameter
DW_TAG_imported_declaration
DW_TAG_label
DW_TAG_lexical_block
DW_TAG_member
DW_TAG_pointer_type
DW_TAG_reference_type
DW_TAG_compile_unit
DW_TAG_string_type
DW_TAG_structure_type
DW_TAG_subroutine_type
DW_TAG_typedef
DW_TAG_union_type
DW_TAG_unspecified_parameters
DW_TAG_variant
DW_TAG_common_block
DW_TAG_common_inclusion
DW_TAG_inheritance
DW_TAG_inlined_subroutine
DW_TAG_module
DW_TAG_ptr_to_member_type
DW_TAG_set_type
DW_TAG_subrange_type
DW_TAG_with_stmt
DW_TAG_access_declaration
DW_TAG_base_type
DW_TAG_catch_block
DW_TAG_const_type
DW_TAG_constant
DW_TAG_enumerator
DW_TAG_file_type
DW_TAG_friend
DW_TAG_namelist
DW_TAG_namelist_item
DW_TAG_packed_type
DW_TAG_subprogram
DW_TAG_template_type_parameter
DW_TAG_template_value_parameter
DW_TAG_thrown_type
DW_TAG_try_block
DW_TAG_variant_part
DW_TAG_variable
DW_TAG_volatile_type
DW_TAG_dwarf_procedure
DW_TAG_restrict_type
DW_TAG_interface_type
DW_TAG_namespace
DW_TAG_imported_module
DW_TAG_unspecified_type
DW_TAG_partial_unit
DW_TAG_imported_unit
DW_TAG_condition
DW_TAG_shared_type
DW_TAG_type_unit
DW_TAG_rvalue_reference_type
DW_TAG_template_alias
DW_TAG_coarray_type
DW_TAG_generic_subrange
DW_TAG_dynamic_type
DW_TAG_atomic_type
DW_TAG_call_site
DW_TAG_call_site_parameter
DW_TAG_skeleton_unit
DW_TAG_immutable_type
DW_TAG_MIPS_loop
DW_TAG_format_label
DW_TAG_function_template
DW_TAG_class_template
DW_TAG_GNU_template_template_param
DW_TAG_GNU_template_parameter_pack
DW_TAG_GNU_formal_parameter_pack
DW_TAG_GNU_call_site
DW_TAG_GNU_call_site_parameter
DW_TAG_APPLE_property
DW_TAG_APPLE_ptrauth_type
DW_TAG_BORLAND_property
DW_TAG_BORLAND_Delphi_string
DW_TAG_BORLAND_Delphi_dynamic_array
DW_TAG_BORLAND_Delphi_set
DW_TAG_BORLAND_Delphi_variant
DW_CHILDREN_no
DW_CHILDREN_yes
DW_AT_sibling
DW_AT_location
DW_AT_name
DW_AT_ordering
DW_AT_byte_size
DW_AT_bit_offset
DW_AT_bit_size
DW_AT_stmt_list
DW_AT_low_pc
DW_AT_high_pc
DW_AT_language
DW_AT_discr
DW_AT_discr_value
DW_AT_visibility
DW_AT_import
DW_AT_string_length
DW_AT_common_reference
DW_AT_comp_dir
DW_AT_const_value
DW_AT_containing_type
DW_AT_default_value
DW_AT_inline
DW_AT_is_optional
DW_AT_lower_bound
DW_AT_producer
DW_AT_prototyped
DW_AT_return_addr
DW_AT_start_scope
DW_AT_bit_stride
DW_AT_upper_bound
DW_AT_abstract_origin
DW_AT_accessibility
DW_AT_address_class
DW_AT_artificial
DW_AT_base_types
DW_AT_calling_convention
DW_AT_count
DW_AT_data_member_location
DW_AT_decl_column
DW_AT_decl_file
DW_AT_decl_line
DW_AT_declaration
DW_AT_discr_list
DW_AT_encoding
DW_AT_external
DW_AT_frame_base
DW_AT_friend
DW_AT_identifier_case
DW_AT_macro_info
DW_AT_namelist_item
DW_AT_priority
DW_AT_segment
DW_AT_specification
DW_AT_static_link
DW_AT_type
DW_AT_use_location
DW_AT_variable_parameter
DW_AT_virtuality
DW_AT_vtable_elem_location
DW_AT_allocated
DW_AT_associated
DW_AT_data_location
DW_AT_byte_stride
DW_AT_entry_pc
DW_AT_use_UTF8
DW_AT_extension
DW_AT_ranges
DW_AT_trampoline
DW_AT_call_column
DW_AT_call_file
DW_AT_call_line
DW_AT_description
DW_AT_binary_scale
DW_AT_decimal_scale
DW_AT_small
DW_AT_decimal_sign
DW_AT_digit_count
DW_AT_picture_string
DW_AT_mutable
DW_AT_threads_scaled
DW_AT_explicit
DW_AT_object_pointer
DW_AT_endianity
DW_AT_elemental
DW_AT_pure
DW_AT_recursive
DW_AT_signature
DW_AT_main_subprogram
DW_AT_data_bit_offset
DW_AT_const_expr
DW_AT_enum_class
DW_AT_linkage_name
DW_AT_string_length_bit_size
DW_AT_string_length_byte_size
DW_AT_rank
DW_AT_str_offsets_base
DW_AT_addr_base
DW_AT_rnglists_base
DW_AT_dwo_id
DW_AT_dwo_name
DW_AT_reference
DW_AT_rvalue_reference
DW_AT_macros
DW_AT_call_all_calls
DW_AT_call_all_source_calls
DW_AT_call_all_tail_calls
DW_AT_call_return_pc
DW_AT_call_value
DW_AT_call_origin
DW_AT_call_parameter
DW_AT_call_pc
DW_AT_call_tail_call
DW_AT_call_target
DW_AT_call_target_clobbered
DW_AT_call_data_location
DW_AT_call_data_value
DW_AT_noreturn
DW_AT_alignment
DW_AT_export_symbols
DW_AT_deleted
DW_AT_defaulted
DW_AT_loclists_base
DW_AT_MIPS_loop_begin
DW_AT_MIPS_tail_loop_begin
DW_AT_MIPS_epilog_begin
DW_AT_MIPS_loop_unroll_factor
DW_AT_MIPS_software_pipeline_depth
DW_AT_MIPS_linkage_name
DW_AT_MIPS_stride
DW_AT_MIPS_abstract_name
DW_AT_MIPS_clone_origin
DW_AT_MIPS_has_inlines
DW_AT_MIPS_stride_byte
DW_AT_MIPS_stride_elem
DW_AT_MIPS_ptr_dopetype
DW_AT_MIPS_allocatable_dopetype
DW_AT_MIPS_assumed_shape_dopetype
DW_AT_MIPS_assumed_size
DW_AT_sf_names
DW_AT_src_info
DW_AT_mac_info
DW_AT_src_coords
DW_AT_body_begin
DW_AT_body_end
DW_AT_GNU_vector
DW_AT_GNU_template_name
DW_AT_GNU_odr_signature
DW_AT_GNU_call_site_value
DW_AT_GNU_all_call_sites
DW_AT_GNU_macros
DW_AT_GNU_dwo_name
DW_AT_GNU_dwo_id
DW_AT_GNU_ranges_base
DW_AT_GNU_addr_base
DW_AT_GNU_pubnames
DW_AT_GNU_pubtypes
DW_AT_GNU_discriminator
DW_AT_BORLAND_property_read
DW_AT_BORLAND_property_write
DW_AT_BORLAND_property_implements
DW_AT_BORLAND_property_index
DW_AT_BORLAND_property_default
DW_AT_BORLAND_Delphi_unit
DW_AT_BORLAND_Delphi_class
DW_AT_BORLAND_Delphi_record
DW_AT_BORLAND_Delphi_metaclass
DW_AT_BORLAND_Delphi_constructor
DW_AT_BORLAND_Delphi_destructor
DW_AT_BORLAND_Delphi_anonymous_method
DW_AT_BORLAND_Delphi_interface
DW_AT_BORLAND_Delphi_ABI
DW_AT_BORLAND_Delphi_return
DW_AT_BORLAND_Delphi_frameptr
DW_AT_BORLAND_closure
DW_AT_LLVM_include_path
DW_AT_LLVM_config_macros
DW_AT_LLVM_isysroot
DW_AT_APPLE_ptrauth_key
DW_AT_APPLE_ptrauth_address_discriminated
DW_AT_APPLE_ptrauth_extra_discriminator
DW_AT_APPLE_optimized
DW_AT_APPLE_flags
DW_AT_APPLE_isa
DW_AT_APPLE_block
DW_AT_APPLE_major_runtime_vers
DW_AT_APPLE_runtime_class
DW_AT_APPLE_omit_frame_ptr
DW_AT_APPLE_property_name
DW_AT_APPLE_property_getter
DW_AT_APPLE_property_setter
DW_AT_APPLE_property_attribute
DW_AT_APPLE_objc_complete_type
DW_AT_APPLE_property
DW_FORM_addr
DW_FORM_block2
DW_FORM_block4
DW_FORM_data2
DW_FORM_data4
DW_FORM_data8
DW_FORM_string
DW_FORM_block
DW_FORM_block1
DW_FORM_data1
DW_FORM_flag
DW_FORM_sdata
DW_FORM_strp
DW_FORM_udata
DW_FORM_ref_addr
DW_FORM_ref1
DW_FORM_ref2
DW_FORM_ref4
DW_FORM_ref8
DW_FORM_ref_udata
DW_FORM_indirect
DW_FORM_sec_offset
DW_FORM_exprloc
DW_FORM_flag_present
DW_FORM_ref_sig8
DW_FORM_strx
DW_FORM_addrx
DW_FORM_ref_sup4
DW_FORM_strp_sup
DW_FORM_data16
DW_FORM_line_strp
DW_FORM_implicit_const
DW_FORM_loclistx
DW_FORM_rnglistx
DW_FORM_ref_sup8
DW_FORM_strx1
DW_FORM_strx2
DW_FORM_strx3
DW_FORM_strx4
DW_FORM_addrx1
DW_FORM_addrx2
DW_FORM_addrx3
DW_FORM_addrx4
DW_FORM_GNU_addr_index
DW_FORM_GNU_str_index
DW_FORM_GNU_ref_alt
DW_FORM_GNU_strp_alt
DW_OP_addr
DW_OP_deref
DW_OP_const1u
DW_OP_const1s
DW_OP_const2u
DW_OP_const2s
DW_OP_const4u
DW_OP_const4s
DW_OP_const8u
DW_OP_const8s
DW_OP_constu
DW_OP_consts
DW_OP_dup
DW_OP_drop
DW_OP_over
DW_OP_pick
DW_OP_swap
DW_OP_rot
DW_OP_xderef
DW_OP_abs
DW_OP_and
DW_OP_div
DW_OP_minus
DW_OP_mod
DW_OP_mul
DW_OP_neg
DW_OP_not
DW_OP_or
DW_OP_plus
DW_OP_plus_uconst
DW_OP_shl
DW_OP_shr
DW_OP_shra
DW_OP_xor
DW_OP_bra
DW_OP_eq
DW_OP_ge
DW_OP_gt
DW_OP_le
DW_OP_lt
DW_OP_ne
DW_OP_skip
DW_OP_lit0
DW_OP_lit1
DW_OP_lit2
DW_OP_lit3
DW_OP_lit4
DW_OP_lit5
DW_OP_lit6
DW_OP_lit7
DW_OP_lit8
DW_OP_lit9
DW_OP_lit10
DW_OP_lit11
DW_OP_lit12
DW_OP_lit13
DW_OP_lit14
DW_OP_lit15
DW_OP_lit16
DW_OP_lit17
DW_OP_lit18
DW_OP_lit19
DW_OP_lit20
DW_OP_lit21
DW_OP_lit22
DW_OP_lit23
DW_OP_lit24
DW_OP_lit25
DW_OP_lit26
DW_OP_lit27
DW_OP_lit28
DW_OP_lit29
DW_OP_lit30
DW_OP_lit31
DW_OP_reg0
DW_OP_reg1
DW_OP_reg2
DW_OP_reg3
DW_OP_reg4
DW_OP_reg5
DW_OP_reg6
DW_OP_reg7
DW_OP_reg8
DW_OP_reg9
DW_OP_reg10
DW_OP_reg11
DW_OP_reg12
DW_OP_reg13
DW_OP_reg14
DW_OP_reg15
DW_OP_reg16
DW_OP_reg17
DW_OP_reg18
DW_OP_reg19
DW_OP_reg20
DW_OP_reg21
DW_OP_reg22
DW_OP_reg23
DW_OP_reg24
DW_OP_reg25
DW_OP_reg26
DW_OP_reg27
DW_OP_reg28
DW_OP_reg29
DW_OP_reg30
DW_OP_reg31
DW_OP_breg0
DW_OP_breg1
DW_OP_breg2
DW_OP_breg3
DW_OP_breg4
DW_OP_breg5
DW_OP_breg6
DW_OP_breg7
DW_OP_breg8
DW_OP_breg9
DW_OP_breg10
DW_OP_breg11
DW_OP_breg12
DW_OP_breg13
DW_OP_breg14
DW_OP_breg15
DW_OP_breg16
DW_OP_breg17
DW_OP_breg18
DW_OP_breg19
DW_OP_breg20
DW_OP_breg21
DW_OP_breg22
DW_OP_breg23
DW_OP_breg24
DW_OP_breg25
DW_OP_breg26
DW_OP_breg27
DW_OP_breg28
DW_OP_breg29
DW_OP_breg30
DW_OP_breg31
DW_OP_regx
DW_OP_fbreg
DW_OP_bregx
DW_OP_piece
DW_OP_deref_size
DW_OP_xderef_size
DW_OP_nop
DW_OP_push_object_address
DW_OP_call2
DW_OP_call4
DW_OP_call_ref
DW_OP_form_tls_address
DW_OP_call_frame_cfa
DW_OP_bit_piece
DW_OP_implicit_value
DW_OP_stack_value
DW_OP_implicit_pointer
DW_OP_addrx
DW_OP_constx
DW_OP_entry_value
DW_OP_const_type
DW_OP_regval_type
DW_OP_deref_type
DW_OP_xderef_type
DW_OP_convert
DW_OP_reinterpret
DW_OP_GNU_push_tls_address
DW_OP_GNU_addr_index
DW_OP_GNU_const_index
DW_OP_LLVM_fragment
DW_ATE_address
DW_ATE_boolean
DW_ATE_complex_float
DW_ATE_float
DW_ATE_signed
DW_ATE_signed_char
DW_ATE_unsigned
DW_ATE_unsigned_char
DW_ATE_imaginary_float
DW_ATE_packed_decimal
DW_ATE_numeric_string
DW_ATE_edited
DW_ATE_signed_fixed
DW_ATE_unsigned_fixed
DW_ATE_decimal_float
DW_ATE_UTF
DW_ATE_UCS
DW_ATE_ASCII
DW_ACCESS_public
DW_ACCESS_protected
DW_ACCESS_private
DW_VIRTUALITY_none
DW_VIRTUALITY_virtual
DW_VIRTUALITY_pure_virtual
DW_LANG_C89
DW_LANG_C
DW_LANG_Ada83
DW_LANG_C_plus_plus
DW_LANG_Cobol74
DW_LANG_Cobol85
DW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Pascal83
DW_LANG_Modula2
DW_LANG_Java
DW_LANG_C99
DW_LANG_Ada95
DW_LANG_Fortran95
DW_LANG_PLI
DW_LANG_ObjC
DW_LANG_ObjC_plus_plus
DW_LANG_UPC
DW_LANG_D
DW_LANG_Python
DW_LANG_OpenCL
DW_LANG_Go
DW_LANG_Modula3
DW_LANG_Haskell
DW_LANG_C_plus_plus_03
DW_LANG_C_plus_plus_11
DW_LANG_OCaml
DW_LANG_Rust
DW_LANG_C11
DW_LANG_Swift
DW_LANG_Julia
DW_LANG_Dylan
DW_LANG_C_plus_plus_14
DW_LANG_Fortran03
DW_LANG_Fortran08
DW_LANG_RenderScript
DW_LANG_BLISS
DW_LANG_Mips_Assembler
DW_LANG_GOOGLE_RenderScript
DW_LANG_BORLAND_Delphi
DW_CC_normal
DW_CC_program
DW_CC_nocall
DW_CC_pass_by_reference
DW_CC_pass_by_value
DW_CC_GNU_renesas_sh
DW_CC_GNU_borland_fastcall_i386
DW_CC_BORLAND_safecall
DW_CC_BORLAND_stdcall
DW_CC_BORLAND_pascal
DW_CC_BORLAND_msfastcall
DW_CC_BORLAND_msreturn
DW_CC_BORLAND_thiscall
DW_CC_BORLAND_fastcall
DW_CC_LLVM_vectorcall
DW_CC_LLVM_Win64
DW_CC_LLVM_X86_64SysV
DW_CC_LLVM_AAPCS
DW_CC_LLVM_AAPCS_VFP
DW_CC_LLVM_IntelOclBicc
DW_CC_LLVM_SpirFunction
DW_CC_LLVM_OpenCLKernel
DW_CC_LLVM_Swift
DW_CC_LLVM_PreserveMost
DW_CC_LLVM_PreserveAll
DW_CC_LLVM_X86RegCall
DW_CC_GDB_IBM_OpenCL
DW_MACINFO_define
DW_MACINFO_undef
DW_MACINFO_start_file
DW_MACINFO_end_file
DW_MACINFO_vendor_ext
DW_MACINFO_invalid
DW_RLE_end_of_list
DW_RLE_offset_pair
DW_RLE_base_address
DW_RLE_start_length
DW_ATOM_null
DW_ATOM_die_offset
DW_ATOM_cu_offset
DW_ATOM_die_tag
DW_ATOM_type_flags
DW_ATOM_qual_name_hash
DW_ATOM_ext_types
TYPE
VARIABLE
FUNCTION
OTHER
UNUSED5
UNUSED6
UNUSED7
EXTERNAL
STATIC
DW_IDX_compile_unit
DW_IDX_type_unit
DW_IDX_die_offset
DW_IDX_parent
DW_IDX_type_hash
R_WEBASSEMBLY_FUNCTION_INDEX_LEB
R_WEBASSEMBLY_TABLE_INDEX_SLEB
R_WEBASSEMBLY_TABLE_INDEX_I32
R_WEBASSEMBLY_MEMORY_ADDR_LEB
R_WEBASSEMBLY_MEMORY_ADDR_SLEB
R_WEBASSEMBLY_MEMORY_ADDR_I32
R_WEBASSEMBLY_TYPE_INDEX_LEB
R_WEBASSEMBLY_GLOBAL_INDEX_LEB
R_WEBASSEMBLY_FUNCTION_OFFSET_I32
R_WEBASSEMBLY_SECTION_OFFSET_I32
+Inf
-Inf
0.0E+0
e+00
APInt(
Stream Error: 
An unspecified error has occurred.
The stream is too short to perform the requested operation.
The buffer size is not a multiple of the array element size.
The specified offset is invalid for the current stream.
An I/O error occurred on the file system.
0x%08x / 0x%08x = %.2f%%
%Y-%m-%d %H:%M:%S
%.9lu
General options
: for the -
 option: 
may only occur zero or one times!
must occur exactly one time!
>...
' is invalid value for boolean argument! Try 0 or 1
' value invalid for integer argument!
' value invalid for uint argument!
    -
 (default: 
= *unknown option value*
*no default*
= *cannot print option value*
Generic Options
help-list
Display list of available options (-help-list-hidden for more)
help-list-hidden
Display list of all available options
help
Display available options (-help-hidden for more)
Alias for -help
help-hidden
Display all available options
print-options
Print non-default options after command line parsing
print-all-options
Print all option values after command line parsing
version
Display the version of this program
: CommandLine Error: Option '
' registered more than once!
inconsistency in registered CommandLine options
Cannot specify more than one option with cl::ConsumeAfter!
' value invalid for floating point argument!
  This option category has no options.
OVERVIEW: 
USAGE: 
 [subcommand]
 [options]
SUBCOMMAND '
SUBCOMMANDS:
  Type "
 <subcommand> -help" to get more help on a specific subcommand
OPTIONS:
Apple
LLVM
 version 
31001.638.1
Optimized build
generic
(unknown)
  Default target: 
  Host CPU: 
number
char
cl::alias must only have one cl::aliasopt(...) specified!
cl::alias must have argument name specified!
cl::alias must have an cl::aliasopt(option) specified!
cl::alias must not have cl::sub(), aliased option's cl::sub() will be used!
debug-counter
Comma separated list of debug counter skip and count
DebugCounter Error: 
 does not have an = in it
 is not a number
 is not a registered counter
 does not end with -skip or -count
Counters and values:
    =
 -   
Multiple errors:
Error
Multiple errors
Inconvertible error value. An error has occurred that could not be converted to a known std::error_code. Please file a bug.
LLVM ERROR: 
LLVM ERROR: out of memory
UNREACHABLE executed
 at 
view-background
Execute graph viewer in the background. Creates tmp file litter.
Error: 
'... 
Trying 'open' program... 
xdg-open
Trying 'xdg-open' program... 
Graphviz
Running 'Graphviz' program... 
xdot|xdot.py
Running 'xdot.py' program... 
dot|fdp|neato|twopi|circo
-Tps
-Nfontname=Courier
-Gsize=7.5,10
Running '
' program... 
--spartan
dotty
Running 'dotty' program... 
Error: Couldn't find a usable graph viewer program:
  Tried '
Remember to erase graph file: 
neato
twopi
circo
LLT_invalid
<stdin>
BCSymbolMap Version: 2.0
warning: missing version string. Assuming 1.0.
warning: symbol map version 
is not supported. Not unobfuscating.
rng-seed
seed
Seed for the random number generator
replacement string contained trailing backslash
0123456789
invalid backreference string '
Included from 
<unknown>
note: 
remark: 
stats
Enable statistics output from program (available with Asserts)
stats-json
Display statistics as json data
iwmmxt
-fp16
armv2
armv2a
armv3
armv3m
armv4
armv4t
armv5t
armv5te
armv5tej
5TEJ
armv6
armv6k
armv6t2
v6t2
armv6kz
v6kz
armv6-m
armv7-a
armv7ve
v7ve
armv7-r
armv7-m
armv7e-m
7E-M
v7em
armv8-a
armv8.1-a
8.1-A
v8.1a
armv8.2-a
8.2-A
v8.2a
armv8.3-a
8.3-A
v8.3a
armv8.4-a
8.4-A
v8.4a
armv8-r
armv8-m.base
8-M.Baseline
v8m.base
armv8-m.main
8-M.Mainline
v8m.main
iwmmxt2
armv7s
armv7k
v5te
v6-m
v7-a
v7-r
v7-m
v7e-m
v8-a
v8.1-a
v8.2-a
v8.3-a
v8.4-a
v8-r
v8-m.base
v8-m.main
track-memory
Enable -time-passes memory tracking (this may be slow)
info-output-file
File to append -stats and -timer output to
Error opening info-output-file '
 for appending!
%9lld  
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
   ---User Time---
   --System Time--
   --User+System--
   ---Wall Time---
  ---Mem---
  --- Name ---
Total
misc
Miscellaneous Ungrouped Timers
        -----     
  %7.4f (%5.1f%%)
agx0
lanai
shave
renderscript32
renderscript64
ananas
cloudabi
darwin
dragonfly
freebsd
fuchsia
kfreebsd
linux
macosx
netbsd
openbsd
solaris
windows
haiku
minix
rtems
nacl
cuda
nvcl
amdhsa
elfiamcu
tvos
watchos
bridgeos
driverkit
mesa3d
contiki
amdpal
gnuabin32
gnuabi64
gnueabihf
gnueabi
gnux32
code16
eabi
eabihf
android
musl
musleabi
musleabihf
msvc
itanium
cygnus
coreclr
simulator
macabi
maccatalyst
macos
invalid
cortex-a8
xscale
empty
rope:
cstring:"
std::string:"
stringref:"
smallstring:"
formatv:"
char:"
decUI:"
decI:"
decUL:"
decL:"
decULL:"
decLL:"
uhex:"
(Twine 
YAML
#;/?:@&=+$,_.!~*'()[]
Not dealing with this yet
Could not find expected : for simple key
Expected quote at end of scalar
Found unexpected ':' while scanning a plain scalar
Found invalid tab character in indentation
Got empty plain scalar
Got empty alias or anchor
Expected a line break after block scalar header
Leading all-spaces line must be smaller than the block indent
A text line is less indented than the block scalar
-?:,[]{}#&*!|>'"%@`
Unrecognized character while tokenizing.
Can only iterate over the stream once
Unknown tag handle 
tag:yaml.org,2002:null
tag:yaml.org,2002:str
tag:yaml.org,2002:map
tag:yaml.org,2002:seq
Unrecognized escape code!
Unexpected token in Key Value.
Unexpected token. Expected Key or Block End
Unexpected token. Expected Key, Flow Entry, or Flow Mapping End.
Unexpected token. Expected Block Entry or Block End.
Could not find closing ]!
Expected , between entries!
tag:yaml.org,2002:
Already encountered an anchor for this node!
Already encountered a tag for this node!
Unexpected token
not a mapping
missing required key '
unknown key '
not a sequence
unknown enumerated scalar
expected sequence of bit values
unexpected scalar in sequence of bit values
unknown bit value
unexpected scalar
Map key must be a scalar
Map value must not be empty
unknown node kind
invalid call
                
invalid boolean
invalid number
out of range number
Null
IO failure on output stream: 
[:<:]]
[:>:]]
alnum
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
alpha
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
blank
cntrl
digit
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
lower
abcdefghijklmnopqrstuvwxyz
print
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
punct
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
space
upper
ABCDEFGHIJKLMNOPQRSTUVWXYZ
xdigit
0123456789ABCDEFabcdef
alert
backspace
newline
vertical-tab
form-feed
carriage-return
exclamation-mark
quotation-mark
number-sign
dollar-sign
percent-sign
ampersand
apostrophe
left-parenthesis
right-parenthesis
asterisk
plus-sign
comma
hyphen
hyphen-minus
period
full-stop
slash
solidus
zero
three
four
five
seven
eight
nine
colon
semicolon
less-than-sign
equals-sign
greater-than-sign
question-mark
commercial-at
left-square-bracket
backslash
reverse-solidus
right-square-bracket
circumflex
circumflex-accent
underscore
low-line
grave-accent
left-brace
left-curly-bracket
vertical-line
right-brace
right-curly-bracket
tilde
REG_0x%x
REG_NOMATCH
llvm_regexec() failed to match
REG_BADPAT
invalid regular expression
REG_ECOLLATE
invalid collating element
REG_ECTYPE
invalid character class
REG_EESCAPE
trailing backslash (\)
REG_ESUBREG
invalid backreference number
REG_EBRACK
brackets ([ ]) not balanced
REG_EPAREN
parentheses not balanced
REG_EBRACE
braces not balanced
REG_BADBR
invalid repetition count(s)
REG_ERANGE
invalid character range
REG_ESPACE
out of memory
REG_BADRPT
repetition-operator operand invalid
REG_EMPTY
empty (sub)expression
REG_ASSERT
"can't happen" -- you found a bug
REG_INVARG
invalid argument to regex routine
*** unknown regexp error code ***
x86_64-apple-darwin20.1.0
-darwin
-%%%%%%
0123456789abcdef
-%%%%%%.
TMPDIR
TEMP
TEMPDIR
/var/tmp/
TERM
PATH
Child timed out but wouldn't die
Child timed out
Error waiting for child process
Program could not be executed
 (core dumped)
Executable "
" doesn't exist!
Can't redirect stderr to stdout
posix_spawn failed
Couldn't fork
/dev/null
Cannot dup2
Cannot open file '
' for 
input
output
disable-symbolication
Disable symbolizing crash backtraces.
llvm-symbolizer
Unable to find target for this triple (no targets are registered)
No available targets are compatible with this triple.
Cannot choose between targets "
" and "
    
half
byte
uint
float
double
string
warning: 
error: 
deprecated
hash
cpp_type
cpp_ptr_type
naked
required
shared
native_custom_alloc
native_inline
nested_flatbuffer
flexbuffer
apple_internal
 in 
force_align
, value: 
asin
acos
atan
NONE
original_order
Type
Length
Union
default
import
identifier
std::unique_ptr
_generated
csharp_partial
streaming
idempotent
cpp_ptr_type_get
cpp_str_type
cpp_str_flex_ctor
native_type
native_default
private
 out of 
BFBS
true
false
bit_flags
bit_flags_all
bit_flags_none
null
Error: pipeline must be render or compute
No active buffer found 
bitset reset argument out of range
bitset test argument out of range
AGC_STATUS_LOG_PREFIX
AGC_DISABLE_GIN793_SWWA
AGCEnv
static const char *AGCEnv::getValue(const char *)
Number of varying components(
exceeds the limit (
Threadgroup memory size (
exceeds the maximum threadgroup memory allowed (
: Kernel specified max total threads per threadgroup (
must match compute pipeline specified max total threads per threadgroup (
: Specified total max threads per threadgroup (
exceeds the maximum total threads per threadgroup supported (
.load.
threadgroup memory not supported in fragment shaders
Texture writes not supported in fragment shaders
early_fragment_tests
_center
_centroid
_sample
_offset
_perspective
_no_perspective
air.interpolate
agc.pull_model_
_component_coefficients
Raster order group for imageblock field 
 in output struct (
) does not match raster order group in input struct (
Inconsistent raster_order_group() for color[
v28@?0^{Type=^{LLVMContext}b8b24I^^{Type}}8^v16I24
[[front_facing]]
[[point_coord]]
[[depth]]
[[stencil]]
[[sample_mask]]
[[viewport_array_index]]
[[amplification_id]]
[[amplification_count]]
interpolation of attributes
discard_fragment()
threadgroup_barrier()
 unsupported in fragment functions bound to tile pipelines
agc.per_prim_varying.
xyzw
.agc_comp.
<< Rest of the status file truncated>>
fragment
Vertex
intersection-(user)
AGC_STATUS_LOG_DRIVER_SHADERS
AGCFragmentContextStateAGP
fragmentOnly
openglMode
enableHLSLDiscardSemantics
blendState[0]: 
blendState[1]: 
blendState[2]: 
blendState[3]: 
blendState[4]: 
blendState[5]: 
blendState[6]: 
blendState[7]: 
AGCFragmentContextState
fragmentState
colorMaskState
AGCFragmentState
GL and Metal state:
alphaToCoverage
alphaToOne
sampleCoverage
GL specific state:
depthStencilWriteDisabled
logicOp
logicOpState
alphaTest
alphaTestFunc
smoothPoints
pointSpriteEnabled
outputPointSize
shaderDebugEnable
AGCLogicOp_Unknown
AGCLogicOp_CLEAR
AGCLogicOp_AND
AGCLogicOp_AND_REV
AGCLogicOp_COPY
AGCLogicOp_AND_INV
AGCLogicOp_XOR
AGCLogicOp_OR
AGCLogicOp_NOR
AGCLogicOp_EQUIV
AGCLogicOp_INV
AGCLogicOp_OR_REV
AGCLogicOp_COPY_INV
AGCLogicOp_OR_INV
AGCLogicOp_NAND
AGCLogicOp_SET
AGCLogicOp_NOOP
AGCCompareFunction_NONE
AGCCompareFunction_NEVER
AGCCompareFunction_LESS
AGCCompareFunction_LEQUAL
AGCCompareFunction_GREATER
AGCCompareFunction_GEQUAL
AGCCompareFunction_EQUAL
AGCCompareFunction_NOTEQUAL
AGCCompareFunction_ALWAYS
AGCColorMaskState
redEnableBits
greenEnableBits
blueEnableBits
alphaEnableBits
AGCBlendState
enabled
srcA
dstA
equation
equationA
AGCBlendFactor_Unknown
AGCBlendFactor_ZERO
AGCBlendFactor_ONE
AGCBlendFactor_SRC_COLOR
AGCBlendFactor_ONE_MINUS_SRC_COLOR
AGCBlendFactor_SRC_ALPHA
AGCBlendFactor_ONE_MINUS_SRC_ALPHA
AGCBlendFactor_DST_COLOR
AGCBlendFactor_ONE_MINUS_DST_COLOR
AGCBlendFactor_DST_ALPHA
AGCBlendFactor_ONE_MINUS_DST_ALPHA
AGCBlendFactor_SRC_ALPHA_SATURATE
AGCBlendFactor_CONST_COLOR
AGCBlendFactor_ONE_MINUS_CONST_COLOR
AGCBlendFactor_CONST_ALPHA
AGCBlendFactor_ONE_MINUS_CONST_ALPHA
AGCBlendFactor_SRC1_COLOR
AGCBlendFactor_ONE_MINUS_SRC1_COLOR
AGCBlendFactor_SRC1_ALPHA
AGCBlendFactor_ONE_MINUS_SRC1_ALPHA
AGCBlendEquation_Unknown
AGCBlendEquation_MIN
AGCBlendEquation_MAX
AGCBlendEquation_ADD
AGCBlendEquation_SUB
AGCBlendEquation_REVSUB
AGCBlendEquation_ADD_OVERRIDE_BLEND_SRC_COLOR
__agc.ctx_switch
mesh_analysis
Translator
Target 
Unable to parse IDL: 
------ Start %s Metadata %s shader %d ------
------ End %s Metadata %s shader %d ------
air.mesh
agc.driver_constants.amp_count
bounds_check_failed
bounds_check_done
air.gpe.emit_nop_token
air.set_position_mesh
air.set_point_size_mesh
air.set_clip_distance_mesh
air.set_render_target_array_index_mesh
air.set_viewport_array_index_mesh
air.set_primitive_id_mesh
air.set_primitive_culled_mesh
air.set_index_mesh
air.set_indices_mesh.v2i8
air.set_indices_mesh.v4i8
air.set_vertex_data_mesh
air.set_primitive_data_mesh
air.set_primitive_count_mesh
.v3i8
.v3i16
.v3i32
.v3f16
.v3f32
air.mesh_type_info
air.clip_distance_array_size
air.primitive_culled
agc.per_prim.primitive_address
agc.per_prim.primitive_address_2
agc.per_prim.primitive_id
Following fragment input(s) mismatching mesh shader output type(s) or not written by mesh shader: 
` mismatching mesh shader output type(s) or not written by mesh shader
air.vertex_data
air.primitive_data
air.mesh_vertex_data
air.mesh_primitive_data
agc.main.aux.passthrough_vertex
air.gpe.get_grid_properties_no_os
air.gpe.get_grid_properties
agc.gpe.grid_properties
air.gpe.emit_non_indexed_primitive_draw_token
air.gpe.emit_primitive_draw_token
air.line
air.point
air.triangle
mesh
AGCMeshContextStateAGP
maxVertexAmplificationCount
addDefaultPointSize
noObjectShader
air.work_group_size
agc.gpe.get_payload_buffer
agc.mesh_emulation_state_t
agc.mesh_state_buffer
agc.gpe_object_state_base
agc.gpe_mesh_state_base
air.gpe.get_allocation_base
agc.gpe.payload_buffer
agc.gpe.object_metadata
agc.gpe.mesh_metadata
agc.gpe.vdm_stream
agc.gpe.index_buffer
agc.gpe.vertex_buffer
agc.gpe.primitive_buffer
agc.address_space_mutate.temp
agc.rewritten_struct
air.object
air.max_mesh_work_groups
agc.ms_childcount
air.set_threadgroups_per_grid_mesh_properties
agc.gpe.get_payload_id
AGCObjectContextStateAGP
bufferBoundsCheckMode
disableDMAPromotion
agc.view_mappings_pointer_global
Texture writes not supported in vertex shaders
air.get_vertex_id.i32
air.get_vertex_id.i16
air.get_instance_id.i32
air.get_instance_id.i16
air.get_base_instance.i32
air.get_base_vertex.i32
base_vertex
air.get_base_vertex.i16
base_instance
air.get_base_instance.i16
air.amplification_mask
Following fragment input(s) mismatching vertex shader output type(s) or not written by vertex shader: 
Fragment input(s) `
` mismatching vertex shader output type(s) or not written by vertex shader
mask
------ Start flat varying analysis for %s shader %u  ------
Promoted varying: {semantic: "%s", flat_components: %s%s%s%s}
------ End flat varying analysis for %s shader %u  ------
After inliner in AGCLLVMAGPVertexShaderRegular::simplifyGenericIR
AGX_MTL_TESSELLATION_VS_WRITETHROUGH
.elem
.sum
Cannot DMA promote %s : pointer bitcast to non-pointer type
DMA promotion %s : truncated extend bitcast pattern
DMA promotion %s : reinterpreted array bitcast pattern
DMA promotion %s : truncate to smaller sized type pattern
DMA promotion %s : unrecognized GEP bitcast pattern: 
bitcast: %s
load:    %s
DMA promotion %s : can't combine bitcast types
DMA promotion %s : GEP-of-bitcast can't combine bitcast types
Cannot DMA promote %s : unknown GEP-of-bitcast use
Cannot DMA promote %s : GEP-of-bitcast needs to index to a scalar
DMA promotion %s : reinterpreted array bitcast pattern (through struct-array GEP)
Cannot DMA promote %s : unknown GEP bitcast use
Cannot DMA promote %s : GEP not used in a load
Cannot DMA promote %s : found a non-GEP use
Cannot DMA promote %s : GEP not indexed with instance_id/vertex_id
Cannot DMA promote %s: GEP indexed with index type not matching base type
Cannot DMA promote %s: GEP indexed with vertex_id and divisor with bias
Cannot DMA promote %s : GEP indexed inconsistently
Will not coerce strided access %s : GEP not indexed with instance_id/vertex_id
Will not coerce strided access %s : GEP indexed inconsistently
agc.struct.coerced_arg
Will not coerce pointer %s : type size %u not a multiple of 4
arg%d.%d
arg%d
Cannot DMA promote %s : type size %u not a multiple of 4
Cannot DMA promote %s : ran out of vi's, need %u, already allocated %u, limit %u
vertex_input
DMA promoting %s to VI, attribute size = %u words, only words [%u .. %u] actually used
DMA Entry = {reg_offset: %u, size : %u, offset %u, stride; %u, instanced: %s, div: %u, base_after_divisor: %s}
air.patch
MTLTessellationFactorFormat and inside_tessellation_factor shader input type mismatch
MTLTessellationFactorFormat and edge_tessellation_factor shader input type mismatch
agc.control_point_index_buffer
air.get_num_patch_control_points
agc.instance_id_bias
agc.patch_index_buffer_enabled
agc.patch_start
agc.patch_count
agc.base_instance
agc.instance_count
agc.patch_count_multiplier
agc.patch_count_shift
agc.instance_count_multiplier
agc.instance_count_shift
agc.pc_times_ic_multiplier
agc.agc.pc_times_ic_shift
agc.is_outer_edge_draw
agc.num_patch_control_points
agc.instance_stride_in_tf_units
agc.patch_index_buffer
patch_id_merge
patch_id_indirect
agc.tessellation_factor_buffer
tess_factor_struct
agc.internal_draw_index_offset
agc.internal_per_patch_id
agc.internal_per_patch_data
agc.one_over_inner_tess_table
agc.vertex_location_in_patch.uv
generated(
vertex
post-tessellation-vertex-hw
post-tessellation-vertex-sw
AGCVertexContextStateAGP
partition_mode
step_function
vertex_amplification_mode
manufactureUnlinkedVaryings
customBorderColor
flatVaryingAnalysis
positionInvariance
disableFMAFold
Pow2
Integer
FractionalOdd
FractionalEven
PerPatch
PerInstance
PerPatchPerInstance
VertexAmplificationModeCount
VertexAmplificationModeMask
air.imageblock_index
float2
float3
float4
packed_float
packed_float2
packed_float3
packed_float4
half2
half3
half4
packed_half
packed_half2
packed_half3
packed_half4
int2
int3
int4
packed_int
packed_int2
packed_int3
packed_int4
uint2
uint3
uint4
packed_uint
packed_uint2
packed_uint3
packed_uint4
short2
short3
short4
packed_short
packed_short2
packed_short3
packed_short4
ushort2
ushort3
ushort4
packed_ushort
packed_ushort2
packed_ushort3
packed_ushort4
char2
char3
char4
packed_char
packed_char2
packed_char3
packed_char4
uchar2
uchar3
uchar4
packed_uchar
packed_uchar2
packed_uchar3
packed_uchar4
bool2
bool3
bool4
packed_bool
packed_bool2
packed_bool3
packed_bool4
float2x2
float2x3
float2x4
float3x2
float3x3
float3x4
float4x2
float4x3
float4x4
half2x2
half2x3
half2x4
half3x2
half3x3
half3x4
half4x2
half4x3
half4x4
atan_merge
less_than_one
not_less_than_one
llvm.fma.
llvm.ctpop.i16
Unsupported float atomic operation for given target.
AGC_ENABLE_IS_UNIFORM_STRIPPING
f.f16
f.f32
s.i8
s.i16
s.i32
s.i64
u.i1
u.i8
u.i16
u.i32
u.i64
.rne
.rtp
.rtn
.?rnd?
.sat
.rgb10a2.v4f
.rgb10.v3f
unorm.rgb565.v3f
unorm4x8.srgb.v4f
unorm.rg11b10f.v3f
unorm.rgb9e5.v3f
.xor
.and
.min
.max
.max.u.i64
.min.u.i64
.xchg.i32
.cmpxchg.weak.i32
.store.i32
.load.i32
global.add.f32
global.sub.f32
global.xchg.f32
global.cmpxchg.weak.f32
global.store.f32
global.load.f32
powr
fract
fast_acos
fast_asin
fast_atan
fast_atan2
fast_exp10
fast_log10
fast_acosh
fast_asinh
fast_atanh
fast_pow
fast_powr
fast_cosh
fast_sinh
fast_tanh
fast_cos
fast_sin
fast_tan
fast_sincos
fast_round
fast_fmod
fast_mod
fast_exp
fast_exp2
fast_ldexp
fast_log
fast_log2
fast_rsqrt
fast_sqrt
fast_ceil
fast_fabs
fast_floor
fast_fract
fast_rint
fast_trunc
fast_fmax
fast_fmin
gamma_expand
gamma_compress
gamma_expand_xr
gamma_compress_xr
convert
pack
unpack
abs_diff
add_sat
sub_sat
hadd
rhadd
clamp
mad_hi
mad_sat
mul_hi
rotate
popcount
extract_bits
insert_bits
reverse_bits
any_msb
all_msb
saturate
sign
fast_clamp
fast_saturate
dfdx
dfdy
fwidth
assert
get_simd_width
get_thread_execution_width
simdgroup
is_uniform
mul24
mad24
min3
fmin3
fast_fmin3
max3
fmax3
fast_fmax3
median3
fmedian3
fast_fmedian3
get_unique_identifier_compute_pipeline_state
get_unique_identifier_render_pipeline_state
get_unique_identifier_indirect_command_buffer
get_unique_identifier_visible_function_table
get_threads_per_simdgroup
quad_broadcast
quad_shuffle
quad_shuffle_up
quad_shuffle_down
quad_shuffle_xor
quad_shuffle_rotate_up
quad_shuffle_rotate_down
get_quad_element
get_warped_coordinates
get_dewarped_coordinates
map_screen_to_physical_coordinates
map_physical_to_screen_coordinates
quad_ballot
simd_broadcast
simd_ballot
simd_shuffle
simd_shuffle_up
simd_shuffle_down
simd_shuffle_xor
simd_shuffle_rotate_up
simd_shuffle_rotate_down
get_thread_index_in_simdgroup
get_simdgroup_index_in_threadgroup
simd_active_threads_mask
quad_active_threads_mask
simd_all
simd_any
quad_all
quad_any
simdgroup_matrix_8x8_load
simdgroup_matrix_8x8_store
simdgroup_matrix_8x8_multiply_accumulate
simdgroup_matrix_8x8_init_diag
simdgroup_matrix_8x8_init_filled
quad_and
quad_or
quad_xor
quad_product
quad_sum
quad_max
quad_min
quad_prefix_inclusive_product
quad_prefix_inclusive_sum
quad_prefix_exclusive_product
quad_prefix_exclusive_sum
quad_is_helper_thread
quad_is_first
quad_broadcast_first
simd_and
simd_or
simd_xor
simd_product
simd_sum
simd_max
simd_min
simd_prefix_inclusive_product
simd_prefix_inclusive_sum
simd_prefix_exclusive_product
simd_prefix_exclusive_sum
simd_is_helper_thread
simd_is_first
simd_broadcast_first
simd_shuffle_and_fill_up
simd_shuffle_and_fill_down
quad_shuffle_and_fill_up
quad_shuffle_and_fill_down
get_simdgroup_size
get_thread_position_in_grid
get_position
get_sample_id
get_vertex_id
get_instance_id
get_amplification_id
get_patch_id
get_render_target_array_index
asin_merge
le_point_7
gt_point_7
acos_merge
diag
quad_
down
AGC_SIMD_ROTATE_AS_SHUFFLE_AND_FILL
Simplify Identity: %s(%s)
local-store
AGX_LM_SPILL_ID_MIN
AGX_LM_SPILL_ID_MAX
AGX_LM_SPILL_SIZE
AGX_LM_SPILL_SGPR
cl_local
air.simdgroup.barrier
agc.stagein_buffer_pointer.
agc.lm_size
gin793.loop.end
gin793.loop.begin
local_size
air.get_global_linear_id.i32
air.get_global_linear_id.i16
agc.local_slice_and_linear_size
agc.local_slice_mul_and_shift
agc.local_xdim_mul_and_shift
agc.indirect_wg_count_buffer_pointer.
agx.group_id_
cl_group_id_
kernel_entry
early_out_block
agc.barrier_target_count
agc.barrier_counter
cl_barrier
agc.mem_fence_addr
gpuGatherOffsets
gpu_gather_compute
pdsPatchUpOffsets
pds_patchup_compute
cei_pds_gen_gen1
cei_pds_gen_gen2
cei_pds_gen_range_exec_gen1
cei_pds_gen_range_exec_gen2
agc.lib_size_in_bytes
agc.indirect_wg_size_buffer_pointer.
agc.fast_integer_divide_buffer_pointer
agc.split_dispatch_parameters.
air.get_simdgroups_per_threadgroup.i32
air.get_simdgroups_per_threadgroup.i16
air.get_dispatch_simdgroups_per_threadgroup.i32
air.get_dispatch_simdgroups_per_threadgroup.i16
air.get_thread_index_in_simdgroup.i32
air.get_thread_index_in_simdgroup.i16
air.get_simdgroup_index_in_threadgroup.i32
air.get_simdgroup_index_in_threadgroup.i16
MSAA imageblock features are not available to compute kernels
cei_esl_gen_range_exec_gen1
cei_esl_gen_range_exec_gen2
cei_esl_gen_range_exec_gen3
indirectCommandBuffer
params
cei_patch_exec_gen4
cei_patch_exec_gen5
cei_range_exec_gen4
cei_range_exec_gen5
gpu_gather_compute_gen2
per_dispatch_info
os_alloc_mailbox_gpuva
ms_alloc_mailbox_gpuva
gpe_umd
per_kick_info
alloc_mailbox_gpuva
gpe_setup
os_free_mailbox_gpuva
gpe_post_os
ms_free_mailbox_gpuva
gpe_pre_ms
cei_esl_gen_gen1
cei_esl_gen_gen2
cei_esl_gen_gen3
progress_marker_compute
markerBuffer
left
right
passLinkAddress
failLinkAddress
linkToken
agc.computePredicateCompare
compute_control_flow_predicate_g5
compute_control_flow_predicate_g9
compute_control_flow_predicate_g10
compute_control_flow_predicate_g11
compute_control_flow_predicate_g12
compute_control_flow_predicate_g13
compute_control_flow_predicate_g14
bvh_encode_init_default
bvh_encode_init_motion
bvh_calc_offsets_default
bvh_calc_offsets_motion
bvh_encode_nodes_default
bvh_encode_nodes_motion
bvh_encode_leaves_tris_default
bvh_encode_leaves_tris_motion
bvh_encode_leaves_tri_pairs_default
bvh_encode_leaves_tri_pairs_motion
bvh_encode_leaves_bboxes_default
bvh_encode_leaves_bboxes_motion
bvh_encode_leaves_instances_default
bvh_encode_leaves_instances_user_id
bvh_encode_leaves_instances_motion
bvh_serialize
bvh_deserialize
bvh_write_indirect_args
bvh_write_double_indirect_args
bvh_serialize_write_meta
bvh_get_serialized_size
bvh_get_deserialized_size
bvh_get_instance_bounds_default
bvh_get_instance_bounds_user_id
bvh_get_instance_bounds_motion
bvh_get_compacted_size_32
bvh_get_compacted_size_64
bvh_copy
bvh_copy_explicit
bvh_copy_motion_transforms
bvh_add_constant
bvh_node_allocation_init
bvh_node_allocation_loop_calc_sizes_default
bvh_node_allocation_loop_calc_sizes_motion
bvh_node_allocation_loop_prefix_sum
bvh_node_allocation_loop_allocate_default
bvh_node_allocation_loop_allocate_motion
bvh_node_allocation_loop_finish
bvh_clear
bvh_tri_pairs_calc_connectivity
bvh_tri_pairs_calc_connectivity_two_directional
bvh_tri_pairs_do_pairing
bvh_tri_pairs_do_pairing_parallel
bvh_refit_leaf_nodes_tris_default
bvh_refit_leaf_nodes_tri_pairs_default
bvh_refit_leaf_nodes_bboxes_default
bvh_refit_interior_nodes_default
bvh_refit_root_node_default
compareEqual
compareNotEqual
compareGreater
compareGreaterOrEqual
compareLess
compareLessOrEqual
gpu-gather-compute-driver-legacy
pds-patchup-compute-driver-legacy
compute-ei-range-exec
compute-ei-patch
gpu-gather-compute-driver-gen3
geometry-pipeline-emulation-umd-shader
geometry-pipeline-emulation-setup-shader
geometry-pipeline-emulation-post-os-shader
geometry-pipeline-emulation-pre-ms-shader
compute-progress-marker-driver-gen3
compute-control-flow-predicate-gen3
compute-progress-marker-driver-legacy
compute-control-flow-predicate-legacy
AGCComputeStateAGP
mutableBuffers
wgSizeMultipleOfSIMDWidth
genCompilerStatistics
genTelemetryStatistics
disableTextureRWBoundsCheck
debugInstrumentationEnabled
textureWriteFPRoundingMode
execute-indirect-compute-driver-legacy
execute-indirect-range-exec-compute-driver-legacy
execute-indirect-range-exec-compute-driver-g10
execute-indirect-compute-driver-g10
compute-bvh-builder
air.dylib
agx.enable_got
agx.loader.state
air.visible_function_references
air.visible_function_reference
dynamic-library
AGCDynamicLibraryStateAGP
air.fragment
air.rounding_mode
air.fragment_rate
color
air.post_depth_coverage
rasterization
Fragment shaders do not support shader declared threadgroup variables
agc.alpha_test_ref
feedback_output
AGC_RETURN_FOR_DEPTH_FEEDBACK_DISCARD
discard_bool
agc.coverage
agc.front_direction
air.primitive_id
primitive_id not supported for this device
barycentric_coords not supported for this device
air.get_num_samples.i32
air.get_sample_position.v2f32
agc.sample_positions
agc.provoking_vertex_index
agc.blend_color
agc.viewport_depth_range_pointer_global
AGC_CLAMP_TO_F16_LIMITS
AGC_F32_TO_F16_RTZ
bool
int8_t
uchar
uint8_t
unsigned char
int16_t
uint16_t
unsigned short
int32_t
uint32_t
unsigned int
air.implicit_imageblock_data
air.get_imageblock_width
air.get_imageblock_height
air.get_imageblock_samples
air.get_imageblock_num_colors
air.get_color_coverage_mask
air.load
air.store
.imageblock
.implicit_imageblock
loop.done
loop.forward
loop.reverse
8unorm
8snorm
16unorm
16snorm
air.raster_order_group
air.location_index
air.arg_type_name
air.indirect_argument
air.indirect_constant
air.arg_type_size
air.address_space
air.indirect_command_buffer
air.command_buffer
air.compute_pipeline_state
air.render_pipeline_state
air.perspective
air.flat
air.no_perspective
air.center
air.centroid
air.sample
short
ushort
implicit
explicit
air.imageblock_data_size
air.arg_type_align_size
air.alias_implicit_imageblock
air.alias_implicit_imageblock_render_target
Aliasing implicit image block at unset color attachment: 
air.struct_type_info
air.imageblock_master
Large MRT not supported with explicit image blocks
air.render_target
air.buffer_size
air.binding
air.max_work_group_size
AGC_DISABLE_ATOMIC_OPTIMIZATIONS
dynamic-enabled
static-enabled
Tile shaders do not support shader declared threadgroup variables
v24@?0r^v8r^{LIBStructFieldInfo=IIIII^{Type}B}16
agc.tile.dispatch.dim.x
agc.tile.dispatch.dim.y
quad_x
quad_y
num_quads_x
air.get_global_size.i32
air.get_global_size.i16
air.get_global_id.i32
air.get_global_id.i16
air.get_local_size.i32
air.get_local_size.i16
air.get_local_id.i32
air.get_local_id.i16
air.get_local_linear_id.i32
air.get_local_linear_id.i16
air.get_num_groups.i32
air.get_num_groups.i16
air.get_group_id.i32
air.get_group_id.i16
air.get_dispatch_local_size.i32
air.get_dispatch_local_size.i16
air.get_quadgroups_per_threadgroup.i32
air.get_quadgroups_per_threadgroup.i16
air.get_dispatch_quadgroups_per_threadgroup.i32
air.get_dispatch_quadgroups_per_threadgroup.i16
air.get_quad_group.i32
air.get_quad_group.i16
tile
AGCTileState
maxTotalThreadsPerThreadgroup
dispatchSizeMatchesTileSize
AGCDrawBufferState
enabledBits
sampleCount
colorSampleCount
outputPartitionSize
LIBSpilling
unused
encoded : 
encoded[0]
encoded[1]
encoded[2]
encoded[3]
encoded[4]
encoded[5]
encoded[6]
encoded[7]
AGCDrawBuffer
pbeSourceFormat
numWrittenComponents
gammaCorrection
preEmitSwizzle
outputPartitionOffset
AGCEncodedDrawBufferPBESourceFormatTypeInvalid
AGCEncodedDrawBufferPBESourceFormatTypeSRGBUnorm8
AGCEncodedDrawBufferPBESourceFormatTypeSnorm8
AGCEncodedDrawBufferPBESourceFormatTypeUnorm8
AGCEncodedDrawBufferPBESourceFormatTypeSint8
AGCEncodedDrawBufferPBESourceFormatTypeUint8
AGCEncodedDrawBufferPBESourceFormatTypeSnorm16
AGCEncodedDrawBufferPBESourceFormatTypeUnorm16
AGCEncodedDrawBufferPBESourceFormatTypeSint16
AGCEncodedDrawBufferPBESourceFormatTypeUint16
AGCEncodedDrawBufferPBESourceFormatTypeSint32
AGCEncodedDrawBufferPBESourceFormatTypeUint32
AGCEncodedDrawBufferPBESourceFormatTypeF16
AGCEncodedDrawBufferPBESourceFormatTypeF16SignedClamped
AGCEncodedDrawBufferPBESourceFormatTypeF16UnsignedClamped
AGCEncodedDrawBufferPBESourceFormatTypeXR10
AGCEncodedDrawBufferPBESourceFormatTypeXRF16
AGCEncodedDrawBufferPBESourceFormatTypeF32
AGCEncodedDrawBufferPBESourceFormatTypeUint1010102
AGCEncodedDrawBufferPBESourceFormatTypeUnorm1010102
AGCEncodedDrawBufferPBESourceFormatTypeF9e5
AGCEncodedDrawBufferPBESourceFormatTypeF111110
PreEmitSwizzleRGBA
PreEmitSwizzleBGRA
PreEmitSwizzleRABG
PreEmitSwizzleRAGB
PreEmitSwizzleGABR
PreEmitSwizzleGBRA
air.sample_texture_
air.sample_depth_
air.sample_compare_texture_
air.sample_compare_depth_
air.read_texture_
air.read_depth_
air.write_texture_
air.write_depth_
air.gather_texture_
air.gather_depth_
air.gather_compare_texture_
air.gather_compare_depth_
air.read_texture_buffer_1d
air.write_texture_buffer_1d
air.calculate_clamped_lod_texture_
air.calculate_clamped_lod_depth_
air.calculate_unclamped_lod_texture_
air.calculate_unclamped_lod_depth_
1d_array
2d_array
cube
cube_array
.rte
.v4f32
.v4f16
.u.v4i32
.s.v4i32
.u.v4i16
.s.v4i16
_grad
2d_ms_array
2d_ms
.i32
air.write_imageblock_slice_to_texture_
air.get_width_texture_
air.get_width_depth_
air.get_height_texture_
air.get_height_depth_
air.get_depth_texture_
air.get_array_size_texture_
air.get_array_size_depth_
air.get_num_mip_levels_texture_
air.get_num_mip_levels_depth_
air.get_num_samples_texture_
air.get_num_samples_depth_
air.get_width_texture_buffer_1d
air.fence_texture_
buffer_1d
texture_buffer_1d
texture_1d
texture_1d_array
texture_2d
texture_2d_array
texture_3d
texture_cube
texture_cube_array
texture_2d_ms
texture_2d_ms_array
depth_2d
depth_2d_array
depth_cube
depth_cube_array
depth_2d_ms
depth_2d_ms_array
air.is_null_
air.get_null_
air.get_unique_identifier_
.i16.s.v4i32
.i16.u.v4i32
air.atomic_load_explicit_
air.atomic_store_explicit_
air.atomic_xchg_explicit_
air.atomic_cmpxchg_weak_explicit_
air.atomic_fetch_
_explicit_
sampler
air.get_vertex_id
air.vertex_id
air.get_instance_id
air.instance_id
air.get_base_vertex
air.base_vertex
air.get_base_instance
air.base_instance
air.get_global_id
air.thread_position_in_grid
air.get_local_id
air.thread_position_in_threadgroup
air.get_local_linear_id
air.thread_index_in_threadgroup
air.get_group_id
air.threadgroup_position_in_grid
air.get_global_size
air.threads_per_grid
air.get_local_size
air.threads_per_threadgroup
air.get_num_groups
air.threadgroups_per_grid
air.get_thread_execution_width
air.thread_execution_width
air.get_dispatch_local_size
air.dispatch_threads_per_threadgroup
air.get_quad_element
air.thread_index_in_quadgroup
air.get_quad_group
air.quadgroup_index_in_threadgroup
air.get_quadgroups_per_threadgroup
air.quadgroups_per_threadgroup
air.get_dispatch_quadgroups_per_threadgroup
air.dispatch_quadgroups_per_threadgroup
air.get_threads_per_simdgroup
air.threads_per_simdgroup
air.get_thread_index_in_simdgroup
air.thread_index_in_simdgroup
air.get_simdgroup_index_in_threadgroup
air.simdgroup_index_in_threadgroup
air.get_simdgroups_per_threadgroup
air.simdgroups_per_threadgroup
air.get_dispatch_simdgroups_per_threadgroup
air.dispatch_simdgroups_per_threadgroup
air.pixel_position_in_tile
air.pixels_per_tile
air.tile_index
air.get_patch_id
air.patch_id
air.get_amplification_id
air.get_render_target_array_index
air.get_intersection_params_intersection_query
air.get_world_space_ray_origin_intersection_query
air.get_world_space_ray_direction_intersection_query
air.get_ray_min_distance_intersection_query
air.get_candidate_intersection_type_intersection_query
air.get_candidate_triangle_distance_intersection_query
air.is_candidate_non_opaque_bounding_box_intersection_query
air.get_candidate_geometry_id_intersection_query
air.get_candidate_primitive_id_intersection_query
air.get_candidate_instance_id_intersection_query
air.get_candidate_user_instance_id_intersection_query
air.get_candidate_object_to_world_transform_intersection_query
air.get_candidate_world_to_object_transform_intersection_query
air.get_candidate_triangle_barycentric_coord_intersection_query
air.is_candidate_triangle_front_facing_intersection_query
air.get_candidate_ray_origin_intersection_query
air.get_candidate_ray_direction_intersection_query
air.get_candidate_primitive_data_intersection_query
air.get_committed_intersection_type_intersection_query
air.get_committed_distance_intersection_query
air.get_committed_geometry_id_intersection_query
air.get_committed_primitive_id_intersection_query
air.get_committed_instance_id_intersection_query
air.get_committed_user_instance_id_intersection_query
air.get_committed_object_to_world_transform_intersection_query
air.get_committed_world_to_object_transform_intersection_query
air.get_committed_triangle_barycentric_coord_intersection_query
air.is_committed_triangle_front_facing_intersection_query
air.get_committed_ray_origin_intersection_query
air.get_committed_ray_direction_intersection_query
air.get_committed_primitive_data_intersection_query
air.intersect
.instancing
.triangle_data
.world_space_data
.primitive_motion
.instance_motion
.extended_limits
air.allocate_intersection_query
air.reset_intersection_query
air.next_intersection_query
air.abort_intersection_query
air.commit_triangle_intersection_intersection_query
air.commit_bounding_box_intersection_intersection_query
air.deallocate_intersection_query
agc.driver.api_texture.
agc.driver.api_sampler.
agc.driver.ab_texture.
agc.driver.ab_sampler.
air.compile.fast_math_disable
Fragment_State_Program
OpenGL ES GLSL
air.vertexFetchFunction
------ Compiling function : %s ------
.fast
.nonfast
agc.
air.
Disabling non-inlined functions for ES1 vertex shader
air.imageblock_data
air.imageblock
Inlining all functions due to use of image blocks
air.indirect_buffer
Inlining all functions due to use of indirect argument buffer
air.texture
Inlining all texture functions due to the use of a RW texture
AGX_STRESS_NO_INLINING
AGX_FORCE_LATE_INLINING
AGX_FORCE_OPTSIZE
AGX_ENABLE_INTERSECTION_CALL
air.external_initializations
MTL_COMPAT_NO_OOB_FAULT
wrapper_exit
get_null_intersection_function_table
get_size_command_buffer
get_data_pointer_primitive_acceleration_structure
get_data_pointer_instance_acceleration_structure
sw_ads_heap_index
sw_ads_pointer
resource_index
heap_offset
agc.trace_buffer_vertex_id
agc.trace_buffer_instance_id
agc.trace_buffer_amplification_id
agc.trace_buffer_patch_id
agc.trace_buffer_render_target_array_index
agc.global_constructors
allocate_tls_end
allocate_tls
loop_global_constructors
agc.global_constructor_call
agc.global_constructor_call_node
agc.force_indirect_function_call_support
void_return
agc.stage_specific_dylib_global.
air.function_groups
air.get_null_simdgroup_event
air.is_null_simdgroup_event
air.wait_simdgroup_events
AGC_DEBUG_LLVM_IR
------ Build Request Info ------
hash: %s
------ End Build Request Info ------
air.shaderSource
------ Compilation flags for %s shader %u ------
Object fast-math flags: {nonan=%d, noinf=%d, nosignedzero=%d, allowrcp=%d, unsafealgebra=%d}
Target fast-math flags: {nonan=%d, noinf=%d, nosignedzero=%d, allowrcp=%d, unsafealgebra=%d}
Codegen fast-math options: { finite-math=%d, unsafe-fp-math=%d, less_pecise_fmad=%d}
------ End compilation flags for %s shader %u ------
after RemoveAndForwardAllocaStores
after simplifyGenericIR
after initCompile
after setupShaderInputs
after setupBufferAliasInfo
after setupStackOOBCheck
after setupInterpolationFunctions
after setupArgumentBuffers
after replaceSimdgroupAtomicWaitNotify
after setupThreadLocalStorage
after setupShaderWrapper
after setupShaderOutputs
after cleanupShaderIR
After setupIndirectSamplers
After allocateTexturesAndSamplers
after setupImageBlocks
after replaceTexturesAndSamplers
after simplifyTrigIdentities
after optimizeThreadgroupBarriers
after markInvariantOutputs
after replaceFunctionGroups
after replaceSimdgroupAsyncCopy
after replacePreRuntimeLinkBuiltins
after linking rt runtime
after linking gpe runtime
after linking ei runtime
after linking vf runtime
after linking texture atomic runtime
AGC_ENABLE_F16_FASTMATH_BUILTINS
after replace f16 builtins
after linking metal runtime
AGC_ENABLE_PRECISE_MATH
after linking precise metal runtime
after replaceIndirectResources
after replaceRaytracingFunctions
after replaceBuiltins
after promoteGlobalConstants
after improveDMAPromotionOpportunity
after prunePRIDsOfDeletedGlobals
after bindDylibResources
after finalizeDriverBindings
after overrideFunctionAttributesAndLinkage
after overrideExternallyInitializedLinkage
after generateAuxiliaryShaders
agc.byval.
agc.local_buffer_pointers.
agc.buffer_pointers.
agx.buffer.alias.domain
agx.buffer.alias.scopes
agc.buffer_pointers_array.
Total number of indirect argument buffer resources exceeded for
buffer(
): Argument buffer participates in modification as well as resource use
constant_gep
texture_gep
sampler_gep
buffer_gep
texture_load
sampler_load
buffer_load
): Unable to map argument buffer access to resource
): Argument buffer accessed with non-zero array index
bindless_index
bindless_index_as_ptr
read_gather
write_gather
agc.texture_heap.
pick_sampler
non_constant_sampler
constant_sampler
agc.sampler_heap.
agx.samplerHeapBufferIndex
agc.pipeline_state_heap.
agx.pipelineStateHeapBufferIndex
agc.indirect_command_buffer_heap.
agx.indirectCommandBufferHeapBufferIndex
agc.intersection_function_table_heap.
agx.intersectionFunctionTableHeapBufferIndex
agc.visible_function_table_heap.
agx.visibleFunctionTableHeapBufferIndex
agc.bvh_state_words_heap.
agc.sw_ads_heap.
scs_per_kick_configuration
agc.scs_per_kick_configuration.
agc.scs_per_shader_configuration.
packedFormat
AGX_FORCE_CS_SAMPLERS
agc.es1_sampler_lod_bias
!!!! Perf: Argument %s: failed to patten match the array of texture/sampler, spilling!!
air.byval
air.buffer
air.visible_function_table
air.primitive_acceleration_structure
air.instance_acceleration_structure
air.intersection_function_table
agc.const_sampler_heap_index_
agc.const_sampler_state_struct_ptr_
_agx_const_ss.
agc.const_sampler_state_words_
Read or write to cube texture not supported
Large MRT not supported with image block write
sample
sample_compare
gather_compare
sampler argument for 
 must be known at compile time
The specified rounding mode is not supported on this device.
agc.nnorm_sampler_wrapper_1d
agc.nnorm_sampler_wrapper_non_1d
agc.nnorm_sampler_1d
agc.nnorm_sampler_non_1d
skip_texture_buffer_write
texture_buffer_write
packedFormatAndAlpha
llvm.agx
llvm.agx2
agx2.air.indirect.format
agx.air.indirect
indirect.switch.case
indirect.tex.write.end
%s: image or sample GV %s still has references: 
void AGCLLVMUserObject::cleanupSamplerGlobalVariables()
AGC_FORCE_BINDLESS
AGC_MAX_TEXTURE_REGISTERS
----- Texture allocations ------
[%08x - %08x] TS%d - TS%d
[%08x - %08x] bindless
loaded_sampler_heap_index
loaded_sampler_heap_index_ptr
AGC_FORCE_BINDLESS_HEAP
Indirect samplers are not supported
Could not statically determine the target of a texture write
Could not resolve texture/sampler references
Total number of textures and samplers (
) exceeds GPU allowance.
com.apple.agx
Encountered unlowered function call to 
agc.illegal_visible_function_call
Error: Encountered unsupported visible function call
agc.illegal_raytracing_function_call
Error: Encountered unsupported ray tracing function call
air.arg_name
air.get_size_intersection_function_table
air.atomic.global
air.simdgroup_atomic.global.notify
air.wg.barrier
simdgroup_atomic
AGC_YIELD_FORCE_BARRIER
AGC_YIELD_INSERT_BARRIER_FOR_DYLIB
AGX_DISABLE_STACK_OOB_CHECK
agx.stack_oob
.r8unorm
.r8snorm
.r16unorm
.r16snorm
.rg8unorm
.rg8snorm
.rg16unorm
.rg16snorm
.rgba8unorm
.srgba8unorm
.rgba8snorm
.rgba16unorm
.rgba16snorm
.rgb10a2
.rg11b10f
.rgb9e5
.v2i8
.v2i16
.v2i32
.v4i8
.v4i16
.v4i32
air.discard_fragment
_indirect
TF entry: (buf %d, slot %d, size %d) =  uvs(%d)
air.vertex
Vertex_State_Program
agc.driver_constants.
air.shared
air.position
air.invariant
air.clip_distance
air.point_size
air.viewport_array_index
air.render_target_array_index
AGC_DISABLE_VARYING_SPLITTING
AGC_FORCE_VARYING_SPLITTING
air.amplification_id
air.amplification_count
 type does not match between vertex and fragment function
air.vertex_transform_feedback
agc.tf_buffer
return_block
tf_write_block
agc.tf_writes_enable
AGC_POS_INVARIANCE
ConstantTypeDriverClearColor
ConstantTypeDriverSliceIndex
ConstantTypeDriverPBERotationMatrix
ConstantTypeDriverPBEState
ConstantTypeDriverFramebufferSlotAddress
ConstantTypeDriverEmitInfo
ConstantTypeDriverBlitTextureSrcLevel
ConstantTypeImageWidth
ConstantTypeImageHeight
ConstantTypeImageDepth
ConstantTypeImageDim2D
ConstantTypeImageDim3D
ConstantTypeImageArrayInfo
ConstantTypeImagePackFormat
ConstantTypeImageChannel
ConstantTypeImageChannelOrder
ConstantTypeImageMipmapCount
ConstantTypeImageSampleCount
ConstantTypeImageSampler
ConstantTypeLodBias
ConstantTypePhaseExecAddress
ConstantTypeVertexPointSizeAdjust
ConstantTypeVertexAttribInfo
ConstantTypeVertexDivisorScale
ConstantTypeFragmentFrontFaceAdjust
ConstantTypeFragmentAlphaTestRef
ConstantTypeFragmentCoordYAdjust
ConstantTypeFragmentBlendColor
ConstantTypeFragmentSampleCoverageState
ConstantTypeComputeGlobalOffsetX
ConstantTypeComputeGlobalOffsetY
ConstantTypeComputeGlobalOffsetZ
ConstantTypeComputeGlobalSizeX
ConstantTypeComputeGlobalSizeY
ConstantTypeComputeGlobalSizeZ
ConstantTypeComputeLocalSizeX
ConstantTypeComputeLocalSizeY
ConstantTypeComputeLocalSizeZ
ConstantTypeComputeNumGroupsX
ConstantTypeComputeNumGroupsY
ConstantTypeComputeNumGroupsZ
ConstantTypeComputeWorkDim
ConstantTypeComputeBarrierTargetCount
ConstantTypeComputeLocalArgumentOffset
ConstantTypeComputeMemFenceAddr
ConstantTypeComputeLocalSliceAndLinearSize
ConstantTypeComputeLocalSliceMulAndShift
ConstantTypeComputeLocalXDimMulAndShift
ConstantTypeComputeImageArraySize
ConstantTypeDriverTFWritesEnabled
ConstantTypeDriverTFBufferAddress
ConstantTypeBlitBufferSource
ConstantTypeBlitBufferDestination
ConstantTypeDriverPointSize
ConstantTypeTileDispatchDimX
ConstantTypeTileDispatchDimY
ConstantTypeTileCountX
ConstantTypeTileCountY
ConstantTypeLIBSizeInBytes
ConstantTypeBoundTextureMask
ConstantTypePatchID
ConstantTypePatchStart
ConstantTypeImageBaseLevel
ConstantTypeDriverConditionalEmitMask
ConstantTypeDriverBufferAddress
ConstantTypeBlitBufferWidth
ConstantTypeBlitBufferHeight
ConstantTypeBlitBufferStride
ConstantTypeBlitBufferViewStride
ConstantTypeBlitRegionOffsets
ConstantTypeBlitAddressRemappingFactor
ConstantTypeBlitTextureSlice
ConstantTypeComputeStageInGridOrigin
ConstantTypeComputeStageInGridSize
ConstantTypeVertexDummyDraw
ConstantTypeFragmentSamplePosition
ConstantTypeImageState
ConstantTypeBlitMipgenViewLevel
ConstantTypeBlitMipgenFirstLevel
ConstantTypeBlitMipgenFirstLevelSize
ConstantTypeBlitMipgenNumPasses
ConstantTypeBlitMipgenFirstSlice
ConstantTypeBlitMipgenNumSlices
ConstantTypeComputeLocalArgumentSize
ConstantTypeVertexAmplificationCount
ConstantTypeVertexAmplificationMask
ConstantTypeBlitDestOffsets
ConstantTypeBlitTextureSliceWrite
ConstantTypeBlitDestSizes
ConstantTypeBlitStepX
ConstantTypeBlitStepY
ConstantTypeBlitStepZ
ConstantTypeTextureHeapAddress
ConstantTypeImageHeapIndex
ConstantTypeSkipUniformAtomics
ConstantTypeTileWidth
ConstantTypeTileHeight
ConstantTypeImageUniqueID
ConstantTypeSamplerUniqueID
ConstantTypeTextureBaseAddress
ConstantTypeSparseQueueAddress
ConstantTypeBlitDestPaddedSizes
ConstantTypeBlitDestPaddedOffsets
ConstantTypeBlitSourceIndex
ConstantTypeBlitDestIndex
ConstantTypeDriverEMRTTileBufferAddress
ConstantTypeDriverEMRTSpilledPartitionSize
ConstantTypeDriverEMRTMaxConcurrentTiles
ConstantTypeLayeredVRREnabled
ConstantTypeBufferLength
ConstantTypeBufferBase
ConstantTypeThreadgroupMemorySize
ConstantTypeFragmentProvokingVertexIndex
ConstantTypeSamplerHeapIndex
ConstantTypeConstantSamplerHeapIndex
ConstantTypeTileOffsetX
ConstantTypeTileOffsetY
ConstantTypeTileDispatchRenderTargetArrayIndex
ConstantTypeGeometryPipelineEmulationStateAddress
ConstantTypeObjectAllocationMailbox
ConstantTypeMeshAllocationMailbox
ConstantTypeDriverClearColorArray
ConstantTypeDriverSliceIndexArray
ConstantTypeDriverPBERotationMatrixArray
ConstantTypeDriverDrawBufferState
ConstantTypeDriverBgoState
ConstantTypeDriverEmitInfoArray
ConstantTypeSparseQueueAddressArray
ConstantTypeTextureBaseAddressArray
ConstantTypeDriverEotStateKey
------ Start compilation key description for %s shader %u  ------
------ End compilation key description for %s shader %u  ------
agc.passthrough_vertex
passthrough_size
pad_size
agc.vertex_attrib_info
agc.tile_dispatch_vertex_point
agc.pointsize_info
agc.tile.width
agc.tile.height
agc.tile.offset.x
agc.tile.offset.y
{ /* No compilation key */ }
agc.tile.scale.x
agc.tile.scale.y
agc.tile.count.x
agc.tile.count.y
agc.tile.size.x
agc.tile.size.y
agc.tile.layer_index
passthrough
passthrough_vertexfetch
tile_dispatch_vertex_point
tile_dispatch_vertex_rect(base)
tile_dispatch_vertex_rect(per_layer_region)
tile_dispatch_vertex_rect(indirect)
tile_dispatch_vertex_rect(indirect/per_layer_region)
tile_dispatch_vertex_rect(layer_index)
tile_dispatch_vertex_rect(layer_index/per_layer_region)
tile_dispatch_vertex_rect(layer_index/indirect)
tile_dispatch_vertex_rect(layer_index/indirect/per_layer_region)
agc.tile_dispatch_vertex_rect
/metal_rt.metallib
UseGlobalISel
agc.global_constructor
AGC_ENABLE_UNSAFE_MATH
__GPU_REMARKS_MD
__GPU_LD_MD
__GPU_ARCH_LD_MD
__GPU_STATS_MD
backend
------ Start USC %s shader %u (compiler assembly) -------
AGC_ENABLE_STATUS_FILE_TIMING
Diag: %s 
------ End USC %s shader %u (compiler assembly) -------
readBitcode
AGC_DUMP_MACHO
------ Start dump mach-O for %s shader %u ------
------ End dump mach-O for %s shader %u ------
%s shader %u (%s)
------ Start LLVM IR %s -------
; %u instructions
------ End LLVM IR %s -------
%s shader %u (shader source)
Graphics
------ Start %s %s -------
------ End %s %s -------
AGC_ENABLE_TG_BOUNDS_CHECKING
hardware_safety_check
reporting
agx.dylib_bindings
Warning (Undefined behavior): integer drawbuffer format, but shader is writing floating point
const-calc
AGC_TEMP_REGS_IN_BYTES
print module
Before 
 (No change)
 ------
verify module
AGC: %s:%d:%s: *** Module verification failed %s pass '%s' : %s
agc_llvm_object.cpp
runOnModule
before
after
Module verification failed %s pass '%s' : %s
compute
compute-program
Create Plan failed:
__TEXT_CONST
__DATA_COMMON
__GPU_STATS__counters
__GPU_STATS__telemetry
v28@?0r^{_CompilerData=*QC^{relocation_info}I}8^^{section_64}16I24
AGC_ENABLE_ATOMIC_OPTIMIZATIONS_VERTEX_FRAGMENT
AGC_SKIP_TEXTURE_OOB_CHECKS
^{Value=^{Type}^{Use}Cb1b7Sb28b1b1b1b1}16@?0^{Value=^{Type}^{Use}Cb1b7Sb28b1b1b1b1}8
^{Value=^{Type}^{Use}Cb1b7Sb28b1b1b1b1}32@?0^{Value=^{Type}^{Use}Cb1b7Sb28b1b1b1b1}8^{Value=^{Type}^{Use}Cb1b7Sb28b1b1b1b1}16^{Value=^{Type}^{Use}Cb1b7Sb28b1b1b1b1}24
AGC_BIAS_F2I_VARYING
AGX_G10_IMAGE_WRITE_CACHE_CTL
AGX_IMAGE_WRITE_PERSISTANCE
air.fract.f16
air.fract.v2f16
air.fract.v3f16
air.fract.v4f16
-smpfwd
AGC_FLOAT_TO_FLOAT_RTZ_HW
is_float16_texture
end_write_image
SET_TOP_NIBBLE
NOPACK
FP32
FP16_NO_PACK
FP16_UNORM_POW2
FP16_UNORM16
FP16_UNORM8
UNSET_TOP_NIBBLE
FP16_UNORM10_OR_XR10
FP16_UNORM10
FP16_RGBXR10
FP16_OTHER_RGBXR10
FP16_ARGBV16
FP16_SRGBXR10_OR_SARGBV16
FP16_SRGBXR10
FP16_SARGBV16
%s shader %u (driver disassembler)
------ Start USC %s -------
[Inst 
, offset 
 0x%04x
------- End USC %s --------
runtime.gen4.bc
llvm.agx1.sadd.sat.i16
llvm.agx1.sadd.sat.i32
llvm.agx1.uadd.sat.i16
llvm.agx1.uadd.sat.i32
llvm.agx1.ssub.sat.i16
llvm.agx1.ssub.sat.i32
llvm.agx1.usub.sat.i16
llvm.agx1.usub.sat.i32
llvm.agx1.smad.sat.i16
llvm.agx1.umad.sat.i16
llvm.agx1.atanc.f32
llvm.agx1.atanc.f16
llvm.agx1.sin.g5.f32
llvm.agx1.sin.g5.f16
llvm.agx1.imgwblk
llvm.agx1.lldiblk
llvm.agx1.lstiblk
llvm.agx1.pack.prog.i32.f32
llvm.agx1.pixel.dfdx.f32
llvm.agx1.pixel.dfdy.f32
llvm.agx1.pixel.dfdx.f16
llvm.agx1.pixel.dfdy.f16
llvm.agx1.pack.prog.i16.f32
llvm.agx1.gcmp.g5.i32.f32
llvm.agx1.gcmp.g5.i16.f16
llvm.agx1.gexp.g5.f32
llvm.agx1.gexp.g5.f16
llvm.agx1.gcmp.xr.g5.i32.f32
llvm.agx1.gcmp.xr.g5.i16.f16
llvm.agx1.gexp.xr.g5.f32
llvm.agx1.gexp.xr.g5.f16
llvm.agx1.local.
.ci16
.msaa
.shadow
.cube
.grad
.gather
.4xi16
.4xi32
.4xh
.4xf
.i16
runtime.gen10.bc
raytracing_runtime_nop.bc
llvm.agx2.sadd.sat.i16
llvm.agx2.sadd.sat.i32
llvm.agx2.uadd.sat.i16
llvm.agx2.uadd.sat.i32
llvm.agx2.ssub.sat.i16
llvm.agx2.ssub.sat.i32
llvm.agx2.usub.sat.i16
llvm.agx2.usub.sat.i32
llvm.agx2.smad.sat.i16
llvm.agx2.smad.sat.i32
llvm.agx2.umad.sat.i16
llvm.agx2.umad.sat.i32
llvm.agx2.atanc.f32
llvm.agx2.atanc.f16
llvm.agx2.sin.f32
llvm.agx2.sin.f16
llvm.minnum.f16
llvm.minnum.f32
llvm.maxnum.f16
llvm.maxnum.f32
llvm.agx.smp
llvm.agx.smpw
llvm.agx2.imgwblk
llvm.agx2.lldiblk
llvm.agx2.lstiblk
llvm.agx2.pack.prog.i32.f32
llvm.agx2.load.
llvm.agx2.store.
llvm.agx2.sample.read.
llvm.agx2.pixel.write.
llvm.agx2.pixel.dfdx.f32
llvm.agx2.pixel.dfdy.f32
llvm.agx2.pixel.dfdx.f16
llvm.agx2.pixel.dfdy.f16
llvm.agx2.read.shared.reg.alloc.size
llvm.agx2.idf
llvm.agx2.cppix.agx1r1
llvm.agx2.pack.prog.i16.f32
llvm.agx2.quad.broadcast
llvm.agx2.quad.shuffle.up
llvm.agx2.quad.shuffle.down
llvm.agx2.quad.xor
llvm.agx2.unpack.
llvm.agx2.pack.
AGX_FORCE_INLINING
AGX_G10_DISABLE_MUST_SHADE
image_state
AGX_G10_DISABLE_PRID
r8unorm
r8snorm
r16unorm
r16snorm
sr8unorm
rg8unorm
rg8snorm
rg16unorm
rg16snorm
srg8unorm
rg11b10f
rgb9e5
rgba8unorm
rgba8snorm
rgba16unorm
rgba16snorm
srgba8unorm
rgb10a2
v3i8
v3i16
v3i32
v3f16
v3f32
AGC_SHARED_REGS_BYTES
AGC_SHARED_REGS_BYTES_COMPUTE
constant_heap_indices
AGX_G10_DISABLE_TILE_FRAGMENT_SYNC
fixed
wait_sample
wait_tile
release_at_end
itr_x
itr_y
done
agc.emit_info
.subset
.coords
.array
.lod
.rtz
render_target_index
image_block_merge
explicit_origin_and_size
implicit_origin_and_size
OffsetLessThanSize_Read
OffsetGreaterThanSize_Read
OffsetLessThanSizeEnd_Read
OffsetLessThanSize_Write
OffsetGreaterThanSize_Write
OffsetLessThanSizeEnd_Write
agc.eMRT_tile_buffer_address
agc.eMRT_spilled_partition_size
agc.eMRT_max_concurrent_tiles
llvm.agx2.update.hw.coverage.mask.
coords.i16
rgba
snorm
unorm
 indirect buffers (
 indirect textures (
llvm.agx2.local.
llvm.agx2.threadgroup.
llvm.agx2.dispatch.threadgroup.
llvm.agx2.thread.position.in.grid.
.u.i32
.u.i16
llvm.ctpop.i32
llvm.cttz.i32
coords.
llvm.cttz.i16
llvm.agx2.pixel.feedback
.depth
.stencil
.2d.msaa
.1d.array
.2d.array
.2d.msaa.array
.cubestf
.cubestf.array
raytracing_runtime_emulation.bc
llvm.agx2.simd.bcast
llvm.agx2.simd.shuffle
llvm.agx2.simd.shift.up
llvm.agx2.simd.shift.down
llvm.agx2.simd.bfly
llvm.agx2.simd.rotup
llvm.agx2.quad.rotup
llvm.agx2.simd.ballot
llvm.agx2.quad.ballot
air.simdgroup_async_copy_1d
air.simdgroup_async_copy_2d
llvm.agx2.quad.reduce.
llvm.agx2.simd.reduce.
.u.32
_and
_xor
simd_
prefix_
prefix_inclusive_sum
prefix_inclusive_product
_max
_min
_product
_sum
f16.
prefix_inclusive_
quad
reduce.int.prod.merge
reduce.int.prod.fast
reduce.int.prod.slow
 buffers (
 textures (
 samplers (
addr_elem
addr_vectorized
.v2f16
.v2f32
llvm.agx2.object.childcount.store
llvm.agx2.object.childcount.write
llvm.agx2.enable.all.threads
llvm.agx2.object.payload.ptr
llvm.agx2.mesh.primitive.data.ptr
llvm.agx2.allocate.uvb
llvm.agx2.wait.fence
llvm.agx2.mesh.index.write
llvm.agx2.mesh.primattr.write
llvm.agx2.mesh.varying.write
.read
.write
async.copy.merge
async.copy.emulation
async.copy.dma
.unchecked
if.first.active.lane.end
async.copy.waiton
bufrblk
bufwblk
.block
.merge
llvm.agx2.simd.shff
SimplifyGenericIR: %u alloca's, Removed %u loads, %u stores, %u other out of %u insts, total %4.2f %c insts
SimplifyGenericIR: %u alloca's, unable to simplify the IR
RemoveAndForwardAllocaStores: removed %u instructions
air.fma
.f32
.f16
applegpu
[AGX] Plugin interface not implemented: 
AIRNTEmitAssembly
AIRNTEmitObject
Failed to initialize AGX backend for target architecture.
AIRNTEmitExecutableImage
AGX key factory does not exist for target architecture.
Unsupported pipeline script.
/System/Library/PrivateFrameworks/AGXCompilerCore.framework/EnvVars.txt
serialize
AGC_ENABLE_STATUS_FILE
AGC_CLIENT_PROCESS_NAME
agc_status_
deserialize
Unsupported translator option: 
** Compilation failed with error: %s **
Internal compiler error.
Running LLVM version %d (and AGC version %d.%d.%d).
AGC_ENABLE_STATUS_FILE_STDERR
AGC: %s:%d:%s: *** Failed to create: %s, with error code %d
agc_file_printer.h
initPrinter
agc_mtl_status
AGC_STATUS_FILE_NO_PID
AGC_STATUS_FILE_MAX_SIZE_IN_BYTES
AGC: %s:%d:%s: *** Failed to modify: %s, with error code %d
AGC_STATUS_LOG_DIRECTORY
HOME
/Library/Logs/
AGXCompilerHost
AGC: %s:%d:%s: !!! Unsupported AGCTargetArch
agc_compile_common.h
std::string AGCTargetArchToLLVMString(AGCTargetArch)
Active environment variable values:
AGX_EXTRA_LLVM_ATTRIB
Cannot read module: 
Error parsing bitcode file: 
Unsupported target triple: 
Cannot create AGC LLVM object.
Error occurred composing compiler reply.
air.kernel
air-degenerate-vertex-amplification-emulation
air-raytracing-emulation
mtl-fetch-all
v8@?0
Logging shader %s
Read preference %s: %d
Could not create dir %s (%s)
Could not create file %s (%s)
Writing lowered shader to %s
fallback report generated (but might not be delivered)
fallback report suppressed (unknown error %d)
fallback report suppressed (%s)
%s: %s[%lu] = %s[%lu]
All predecessors of the indirect sampler call have an unconditional branch, may need more code changes to handle this
Encountered unlowered function call to %s
AGC: AGC: %s:%d:%s: *** Module verification failed %s pass '%s' : %s
parseIR from file '%s' failed with error: %{public}s
%s(){
Reading environment variables from '%s'
Skipped line with no '=' character in EnvVars.txt
Skipped line with empty variable name in EnvVars.txt
Read unknown variable from EnvVars.txt: %s
%s[%lu] = %s[%lu]
%s = %s
%s[%lu] = %s[%lu]
AGC: AGC: %s:%d:%s: *** Failed to create: %s, with error code %d
AGC: AGC: %s:%d:%s: *** Failed to modify: %s, with error code %d
AGC: AGC: %s:%d:%s: !!! Unsupported AGCTargetArch
