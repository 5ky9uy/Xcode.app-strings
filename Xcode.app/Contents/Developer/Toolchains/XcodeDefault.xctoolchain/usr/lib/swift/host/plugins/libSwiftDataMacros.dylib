_pSg
_pSg
ySS_SSSgA2BtG
SS_SSSgA2At
SgtG
@Model requires an initializer be provided for '
@Transient
private var _$backingData: any SwiftData.BackingData<
> = SwiftData.DefaultBackingData(for: 
public var backingData: any SwiftData.BackingData<
    get {
        _$backingData
    }
    set {
        _$backingData = newValue
    }
static func schemaMetadata() -> [(String, AnyKeyPath, Any?, Any?)] {
  return [
    
init(backingData: any SwiftData.BackingData<
>) {
  self.backingData = backingData
@Transient
private let _$observationRegistrar = Observation.ObservationRegistrar()
A stored property cannot be named '
missing initializer
missing default value
invalid property
_$observationRegistrar.access(self, keyPath: \.
return self.getValue(for: \.
_$observationRegistrar
init(newValue) accesses(_$backingData) {
self.setValue(for: \.
, to: newValue)
_$observationRegistrar.withMutation(of: self, keyPath: \.
_PersistedProperty
@Transient requires non-optional property '
' to have a default value
SwiftData.PersistentModel
Observation.Observable
SwiftDataMacros
PersistentModelMacro
PersistedPropertyMacro
PersistedDerivedPropertyMacro
TransientPropertyMacro
AttributePropertyMacro
DerivedPropertyMacro
RelationshipPropertyMacro
SwiftDataDiagnostic
message
diagnosticID
severity
NoTypeForYou
SwiftDataMacros
PersistentModelMacro
PersistedPropertyMacro
PersistedDerivedPropertyMacro
TransientPropertyMacro
AttributePropertyMacro
DerivedPropertyMacro
RelationshipPropertyMacro
SwiftDataDiagnostic
_pSg
_pSg
ySS_SSSgA2BtG
SS_SSSgA2At
SgtG
@Model requires an initializer be provided for '
@Transient
private var _$backingData: any SwiftData.BackingData<
> = SwiftData.DefaultBackingData(for: 
public var backingData: any SwiftData.BackingData<
    get {
        _$backingData
    }
    set {
        _$backingData = newValue
    }
static func schemaMetadata() -> [(String, AnyKeyPath, Any?, Any?)] {
  return [
    
init(backingData: any SwiftData.BackingData<
>) {
  self.backingData = backingData
@Transient
private let _$observationRegistrar = Observation.ObservationRegistrar()
A stored property cannot be named '
missing initializer
missing default value
invalid property
_$observationRegistrar.access(self, keyPath: \.
return self.getValue(for: \.
_$observationRegistrar
init(newValue) accesses(_$backingData) {
self.setValue(for: \.
, to: newValue)
_$observationRegistrar.withMutation(of: self, keyPath: \.
_PersistedProperty
@Transient requires non-optional property '
' to have a default value
SwiftData.PersistentModel
Observation.Observable
message
diagnosticID
severity
