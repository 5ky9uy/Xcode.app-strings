_pSg
_pSg
ySS_SSSgA2BtG
SS_SSSgA2At
SgtG
SwiftDataMacros
PersistentModelMacro
PersistedPropertyMacro
PersistedDerivedPropertyMacro
TransientPropertyMacro
AttributePropertyMacro
DerivedPropertyMacro
RelationshipPropertyMacro
get {
  _registrar.access(self, keyPath: \.
  return self.getValue(for: \.
get {
    _$observationRegistrar.access(self, keyPath: \.
    return self.getValue(for: \.
set {
    _$observationRegistrar.withMutation(of: self, keyPath: \.
      self.setValue(for: \.
, to: newValue)
    }
PersistedProperty
@Transient
public var backingData: any BackingData<
> = CoreDataBackingData(for: 
static func schemaMetadata() -> [(String, AnyKeyPath, Any?, Any?)] {
  return [
    
init(backingData: any BackingData<
>, fromFetch: Bool = false) {
  self.backingData = backingData
  if !fromFetch {
    self.context?.insert(object: self)
@Transient
private let _$observationRegistrar = ObservationRegistrar()
NoTypeForYou
SwiftDataMacros
PersistentModelMacro
PersistedPropertyMacro
PersistedDerivedPropertyMacro
TransientPropertyMacro
AttributePropertyMacro
DerivedPropertyMacro
RelationshipPropertyMacro
_pSg
_pSg
ySS_SSSgA2BtG
SS_SSSgA2At
SgtG
get {
  _registrar.access(self, keyPath: \.
  return self.getValue(for: \.
get {
    _$observationRegistrar.access(self, keyPath: \.
    return self.getValue(for: \.
set {
    _$observationRegistrar.withMutation(of: self, keyPath: \.
      self.setValue(for: \.
, to: newValue)
    }
PersistedProperty
@Transient
public var backingData: any BackingData<
> = CoreDataBackingData(for: 
static func schemaMetadata() -> [(String, AnyKeyPath, Any?, Any?)] {
  return [
    
init(backingData: any BackingData<
>, fromFetch: Bool = false) {
  self.backingData = backingData
  if !fromFetch {
    self.context?.insert(object: self)
@Transient
private let _$observationRegistrar = ObservationRegistrar()
