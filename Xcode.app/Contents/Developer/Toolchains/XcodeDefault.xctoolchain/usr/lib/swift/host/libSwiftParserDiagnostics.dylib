SwiftParserDiagnostics
HasTokenChecker
MissingNodesError
MatchingOpeningTokenNote
InsertTokenFixIt
NodesDescriptionPart
SwiftParserDiagnostics
ParserError
ParserNote
ParserFixIt
StaticParserError
EffectsSpecifierAfterArrow
ExtaneousCodeAtTopLevel
IdentifierNotAllowedInOperatorName
InvalidIdentifierError
MissingAttributeArgument
SpaceSeparatedIdentifiersError
SpecifierOnParameterName
TokensNotAllowedInOperatorName
TryCannotBeUsed
UnexpectedNodesError
UnknownDirectiveError
StaticParserFixIt
MoveTokensAfterFixIt
MoveTokensInFrontOfFixIt
MoveTokensInFrontOfTypeFixIt
RemoveRedundantFixIt
RemoveNodesFixIt
ReplaceTokensFixIt
SwiftParserDiagnostics
ParseDiagnosticsGenerator
SwiftParserDiagnostics
PresentNodeChecker
PresentMaker
MissingMaker
7oldNode_AA03newB0t
5token_
9newTriviat
_G_Sit
yyXlG
ySSG
yAAy
SgGGADG
Si6offset_
7elementt
Sg_ABt
5lower_AA5uppert
SgGG
SgSg
SgGGAE_G
Sg_G
SgG_G
Sg_ABt
_SStSg
_SSt
SaySSG
ySSG
Sg_AAt
Sg_ABt
$s22SwiftParserDiagnostics0B5ErrorP
$s22SwiftParserDiagnostics0B4NoteP
$s22SwiftParserDiagnostics0B5FixItP
Sg_ABt
_pSg
_pSg
ySnySiGG
to match this opening '
_TtC22SwiftParserDiagnosticsP33_D814B2AFEC72B63D6ADAFD28B2DCE30C15HasTokenChecker
hasToken
StaticParserError.
all statements inside a switch must be covered by a 'case' or 'default' label
allStatmentsInSwitchMustBeCoveredByCase
associated types cannot be variadic
associatedTypeCannotUsePack
'case' can only appear inside a 'switch' statement or 'enum' declaration
caseOutsideOfSwitchOrEnum
'class' constraint can only appear on protocol declarations
classConstraintCanOnlyBeUsedInProtocol
consecutive declarations on a line must be separated by ';'
consecutiveDeclarationsOnSameLine
consecutive statements on a line must be separated by ';'
consecutiveStatementsOnSameLine
C-style for statement has been removed in Swift 3
'default' cannot be used with a 'where' guard expression
defaultCannotBeUsedWithWhere
'default' label can only appear inside a 'switch' statement
defaultOutsideOfSwitch
deinitializers cannot have a name
deinitCannotHaveName
deinitializers cannot have parameters
deinitCannotHaveParameters
editor placeholder in source file
editorPlaceholderInSourceFile
expected expression after 'try'
expectedExpressionAfterTry
unexpected initializer in pattern; did you mean to use '='?
initializerInPattern
expected 'true' or 'false' after 'assignment'
invalidFlagAfterPrecedenceGroupAssignment
expected ':' and expression after '? ...' in ternary expression
missingColonAndExprInTernaryExpr
expected ':' after '? ...' in ternary expression
missingColonInTernaryExpr
operator should not be declared with body
operatorShouldBeDeclaredWithoutBody
standalone ';' statements are not allowed
standaloneSemicolonStatement
parsing has exceeded the maximum nesting level
maximumNestingLevelOverflow
subscripts cannot have a name
subscriptsCannotHaveNames
'throws' may only occur before '->'
throwsInReturnPosition
'try' must be placed on the returned expression
tryMustBePlacedOnReturnedExpr
'try' must be placed on the thrown expression
tryMustBePlacedOnThrownExpr
'try' must be placed on the initial value expression
tryOnInitialValueExpression
unexpected ';' separator
unexpectedSemicolon
 may only occur before '->'
 is considered an identifier and must not appear within an operator name
' is not a valid identifier
' cannot be used as an identifier here
 can only start with a letter or underscore, not a number
expected argument for '@
found an unexpected second identifier
found an unexpected second identifier in 
 before a parameter name is not allowed
 is not allowed in operator names
'try' cannot be used with '
use of unknown directive 
StaticParserFixIt.
insert attribute argument
insertAttributeArguments
join the identifiers together
join the identifiers together with camel-case
joinIdentifiersWithCamelCase
remove operator body
removeOperatorBody
if this name is unavoidable, use backticks to escape it
 in front of type
remove redundant 
SwiftParserDiagnostics.ParseDiagnosticsGenerator
init(viewMode:)
_TtC22SwiftParserDiagnostics25ParseDiagnosticsGenerator
diagnostics
handledNodes
suppressRemainingDiagnostics
_TtC22SwiftParserDiagnostics18PresentNodeChecker
hasPresentToken
_TtC22SwiftParserDiagnostics12PresentMaker
_TtC22SwiftParserDiagnostics12MissingMaker
hasToken
missingNodes
openingToken
tokensWithDefaultText
tokenWithoutDefaultText
node
message
messageID
effectsSpecifiersAfterArrow
extraneousCode
identifier
invalidIdentifier
missingIdentifier
attributeName
firstToken
additionalTokens
misplacedSpecifiers
tokens
nextToken
unexpectedNodes
unexpected
movedTokens
after
inFrontOf
removeTokens
nodesToRemove
replaceTokens
replacement
diagnostics
handledNodes
suppressRemainingDiagnostics
hasPresentToken
SwiftParserDiagnostics
HasTokenChecker
MissingNodesError
MatchingOpeningTokenNote
InsertTokenFixIt
NodesDescriptionPart
SwiftParserDiagnostics
ParserError
ParserNote
ParserFixIt
StaticParserError
EffectsSpecifierAfterArrow
ExtaneousCodeAtTopLevel
IdentifierNotAllowedInOperatorName
InvalidIdentifierError
MissingAttributeArgument
SpaceSeparatedIdentifiersError
SpecifierOnParameterName
TokensNotAllowedInOperatorName
TryCannotBeUsed
UnexpectedNodesError
UnknownDirectiveError
StaticParserFixIt
MoveTokensAfterFixIt
MoveTokensInFrontOfFixIt
MoveTokensInFrontOfTypeFixIt
RemoveRedundantFixIt
RemoveNodesFixIt
ReplaceTokensFixIt
SwiftParserDiagnostics
ParseDiagnosticsGenerator
SwiftParserDiagnostics
PresentNodeChecker
PresentMaker
MissingMaker
7oldNode_AA03newB0t
5token_
9newTriviat
_G_Sit
yyXlG
ySSG
yAAy
SgGGADG
Si6offset_
7elementt
Sg_ABt
5lower_AA5uppert
SgGG
SgSg
SgGGAE_G
Sg_G
SgG_G
Sg_ABt
_SStSg
_SSt
SaySSG
ySSG
Sg_AAt
Sg_ABt
$s22SwiftParserDiagnostics0B5ErrorP
$s22SwiftParserDiagnostics0B4NoteP
$s22SwiftParserDiagnostics0B5FixItP
Sg_ABt
_pSg
_pSg
ySnySiGG
to match this opening '
_TtC22SwiftParserDiagnosticsP33_D814B2AFEC72B63D6ADAFD28B2DCE30C15HasTokenChecker
hasToken
StaticParserError.
all statements inside a switch must be covered by a 'case' or 'default' label
allStatmentsInSwitchMustBeCoveredByCase
associated types cannot be variadic
associatedTypeCannotUsePack
'case' can only appear inside a 'switch' statement or 'enum' declaration
caseOutsideOfSwitchOrEnum
'class' constraint can only appear on protocol declarations
classConstraintCanOnlyBeUsedInProtocol
consecutive declarations on a line must be separated by ';'
consecutiveDeclarationsOnSameLine
consecutive statements on a line must be separated by ';'
consecutiveStatementsOnSameLine
C-style for statement has been removed in Swift 3
'default' cannot be used with a 'where' guard expression
defaultCannotBeUsedWithWhere
'default' label can only appear inside a 'switch' statement
defaultOutsideOfSwitch
deinitializers cannot have a name
deinitCannotHaveName
deinitializers cannot have parameters
deinitCannotHaveParameters
editor placeholder in source file
editorPlaceholderInSourceFile
expected expression after 'try'
expectedExpressionAfterTry
unexpected initializer in pattern; did you mean to use '='?
initializerInPattern
expected 'true' or 'false' after 'assignment'
invalidFlagAfterPrecedenceGroupAssignment
expected ':' and expression after '? ...' in ternary expression
missingColonAndExprInTernaryExpr
expected ':' after '? ...' in ternary expression
missingColonInTernaryExpr
operator should not be declared with body
operatorShouldBeDeclaredWithoutBody
standalone ';' statements are not allowed
standaloneSemicolonStatement
parsing has exceeded the maximum nesting level
maximumNestingLevelOverflow
subscripts cannot have a name
subscriptsCannotHaveNames
'throws' may only occur before '->'
throwsInReturnPosition
'try' must be placed on the returned expression
tryMustBePlacedOnReturnedExpr
'try' must be placed on the thrown expression
tryMustBePlacedOnThrownExpr
'try' must be placed on the initial value expression
tryOnInitialValueExpression
unexpected ';' separator
unexpectedSemicolon
 may only occur before '->'
 is considered an identifier and must not appear within an operator name
' is not a valid identifier
' cannot be used as an identifier here
 can only start with a letter or underscore, not a number
expected argument for '@
found an unexpected second identifier
found an unexpected second identifier in 
 before a parameter name is not allowed
 is not allowed in operator names
'try' cannot be used with '
use of unknown directive 
StaticParserFixIt.
insert attribute argument
insertAttributeArguments
join the identifiers together
join the identifiers together with camel-case
joinIdentifiersWithCamelCase
remove operator body
removeOperatorBody
if this name is unavoidable, use backticks to escape it
 in front of type
remove redundant 
SwiftParserDiagnostics.ParseDiagnosticsGenerator
init(viewMode:)
_TtC22SwiftParserDiagnostics25ParseDiagnosticsGenerator
diagnostics
handledNodes
suppressRemainingDiagnostics
_TtC22SwiftParserDiagnostics18PresentNodeChecker
hasPresentToken
_TtC22SwiftParserDiagnostics12PresentMaker
_TtC22SwiftParserDiagnostics12MissingMaker
hasToken
missingNodes
openingToken
tokensWithDefaultText
tokenWithoutDefaultText
node
message
messageID
effectsSpecifiersAfterArrow
extraneousCode
identifier
invalidIdentifier
missingIdentifier
attributeName
firstToken
additionalTokens
misplacedSpecifiers
tokens
nextToken
unexpectedNodes
unexpected
movedTokens
after
inFrontOf
removeTokens
nodesToRemove
replaceTokens
replacement
diagnostics
handledNodes
suppressRemainingDiagnostics
hasPresentToken
