@(#)PROGRAM:FoundationMacros  PROJECT:FoundationMacros-1
FoundationMacros
OptionalChainRewriter
PredicateQueryRewriter
PredicateMacro
PredicateExpansionDiagnostic
KnownFunction
7oldNode_AA03newB0t
$ss33ExpressibleByUnicodeScalarLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss32ExpressibleByStringInterpolationP
$ss26ExpressibleByStringLiteralP
5lower_AA5uppert
SaySSG
ySSG
ySSSgG
SSSg
SaySSSgG
#Predicate macro expansion requires a trailing closure
PredicateDiagnostic
Use a trailing closure instead of a function parameter
_TtC16FoundationMacrosP33_D2F56A478D58136EB8BC40AC83390E6821OptionalChainRewriter
input
_TtC16FoundationMacrosP33_D2F56A478D58136EB8BC40AC83390E6822PredicateQueryRewriter
indentWidth
indentLevel
validOptionalChainingTree
diagnostics
Do statement is not supported here in this predicate
Catch clauses are not supported in this predicate
Declarations are not supported in this predicate
Repeat-while loops are not supported in this predicate
Do statements are not supported in this predicate
For-in loops are not supported in this predicate
While loops are not supported in this predicate
This if expression body is not supported in this predicate
If expressions without an else expression are not supported in this predicate
This if expression else body is not supported in this predicate
PredicateExpressions.build_Conditional(
This list of conditionals is unsupported in this predicate
These types of conditions
 are not supported in this predicate
Optional binding conditions
Matching pattern conditions
Availability conditions
Switch expressions are not supported in this predicate
PredicateExpressions.build_Arg(
PredicateExpressions.
FoundationMacros/PredicateMacro.swift
Fatal error
Unexpected question/exclamation mark token kind
PredicateExpressions.TypeCheck<_, 
Tuples are not supported in this predicate
Member access without an explicit base is not allowed in this predicate
PredicateExpressions.build_KeyPath(
PredicateExpressions.build_flatMap(
PredicateExpressions.build_ForcedUnwrap(
Optional chaining is not supported here in this predicate. Use the flatMap(_:) function explicitly instead.
' operator is not supported in this predicate
PredicateExpressions.build_Range(
PredicateExpressions.build_ClosedRange(
PredicateExpressions.build_NilCoalesce(
PredicateExpressions.build_Remainder(
PredicateExpressions.build_Division(
PredicateExpressions.build_Arithmetic(
PredicateExpressions.build_Conjunction(
PredicateExpressions.build_Disjunction(
PredicateExpressions.build_Comparison(
op: .greaterThanOrEqual
op: .greaterThan
op: .lessThanOrEqual
PredicateExpressions.build_NotEqual(
PredicateExpressions.build_Equal(
This unknown operator is not supported in this predicate
PredicateExpressions.build_UnaryMinus(
PredicateExpressions.build_Negation(
Predicate body may only contain one expression
Global functions are not supported in this predicate
) function is not supported in this predicate
PredicateExpressions.build_
PredicateExpressions.build_Arg(
input
indentWidth
indentLevel
validOptionalChainingTree
diagnostics
message
severity
diagnosticID
UnicodeScalarLiteralType
ExtendedGraphemeClusterLiteralType
StringInterpolation
StringLiteralType
name
argumentLabels
supportsTrailingClosure
@(#)PROGRAM:FoundationMacros  PROJECT:FoundationMacros-1
where
default
FoundationMacros
OptionalChainRewriter
PredicateQueryRewriter
PredicateMacro
PredicateExpansionDiagnostic
KnownFunction
7oldNode_AA03newB0t
$ss33ExpressibleByUnicodeScalarLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss32ExpressibleByStringInterpolationP
$ss26ExpressibleByStringLiteralP
5lower_AA5uppert
SaySSG
ySSG
ySSSgG
SSSg
SaySSSgG
#Predicate macro expansion requires a trailing closure
PredicateDiagnostic
Use a trailing closure instead of a function parameter
_TtC16FoundationMacrosP33_D2F56A478D58136EB8BC40AC83390E6821OptionalChainRewriter
input
_TtC16FoundationMacrosP33_D2F56A478D58136EB8BC40AC83390E6822PredicateQueryRewriter
indentWidth
indentLevel
validOptionalChainingTree
diagnostics
Do statement is not supported here in this predicate
Catch clauses are not supported in this predicate
Declarations are not supported in this predicate
Repeat-while loops are not supported in this predicate
Do statements are not supported in this predicate
For-in loops are not supported in this predicate
While loops are not supported in this predicate
This if expression body is not supported in this predicate
If expressions without an else expression are not supported in this predicate
This if expression else body is not supported in this predicate
PredicateExpressions.build_Conditional(
This list of conditionals is unsupported in this predicate
These types of conditions
 are not supported in this predicate
Optional binding conditions
Matching pattern conditions
Availability conditions
Switch expressions are not supported in this predicate
PredicateExpressions.build_Arg(
PredicateExpressions.
FoundationMacros/PredicateMacro.swift
Fatal error
Unexpected question/exclamation mark token kind
PredicateExpressions.TypeCheck<_, 
Tuples are not supported in this predicate
Member access without an explicit base is not allowed in this predicate
PredicateExpressions.build_KeyPath(
PredicateExpressions.build_flatMap(
PredicateExpressions.build_ForcedUnwrap(
Optional chaining is not supported here in this predicate. Use the flatMap(_:) function explicitly instead.
' operator is not supported in this predicate
PredicateExpressions.build_Range(
PredicateExpressions.build_ClosedRange(
PredicateExpressions.build_NilCoalesce(
PredicateExpressions.build_Remainder(
PredicateExpressions.build_Division(
PredicateExpressions.build_Arithmetic(
PredicateExpressions.build_Conjunction(
PredicateExpressions.build_Disjunction(
PredicateExpressions.build_Comparison(
op: .greaterThanOrEqual
op: .greaterThan
op: .lessThanOrEqual
PredicateExpressions.build_NotEqual(
PredicateExpressions.build_Equal(
This unknown operator is not supported in this predicate
PredicateExpressions.build_UnaryMinus(
PredicateExpressions.build_Negation(
Predicate body may only contain one expression
Global functions are not supported in this predicate
) function is not supported in this predicate
PredicateExpressions.build_
PredicateExpressions.build_Arg(
input
indentWidth
indentLevel
validOptionalChainingTree
diagnostics
message
severity
diagnosticID
UnicodeScalarLiteralType
ExtendedGraphemeClusterLiteralType
StringInterpolation
StringLiteralType
name
argumentLabels
supportsTrailingClosure
