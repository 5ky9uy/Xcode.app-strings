%LC
% LC
%"LC
%$LC
%&LC
%(LC
%*LC
%,LC
%.LC
%0LC
%2LC
%4LC
%6LC
%8LC
%:LC
%<LC
%>LC
%@LC
%BLC
%DLC
%FLC
%HLC
%JLC
%LLC
%NLC
%PLC
%RLC
%TLC
%VLC
%XLC
%ZLC
%\LC
%^LC
%`LC
%bLC
%dLC
%fLC
%hLC
%jLC
%lLC
%nLC
%pLC
%rLC
%tLC
%vLC
%xLC
%zLC
%|LC
%~LC
%MC
% MC
%"MC
%$MC
%&MC
%(MC
%*MC
%,MC
%.MC
%0MC
%2MC
%4MC
%6MC
%8MC
%:MC
%<MC
%>MC
%@MC
%BMC
%DMC
%FMC
%HMC
%JMC
%LMC
%NMC
%PMC
%RMC
%TMC
%VMC
%XMC
%ZMC
%\MC
%^MC
%`MC
%bMC
%dMC
%fMC
%hMC
%jMC
%lMC
%nMC
%pMC
%rMC
%tMC
%vMC
%xMC
%zMC
%|MC
%~MC
%NC
% NC
%"NC
%$NC
%&NC
%(NC
%*NC
%,NC
%.NC
%0NC
%2NC
%4NC
%6NC
%8NC
%:NC
%<NC
%>NC
%@NC
%BNC
%DNC
%FNC
%HNC
%JNC
%LNC
%NNC
%PNC
%RNC
%TNC
%VNC
%XNC
%ZNC
%\NC
%^NC
%`NC
%bNC
%dNC
%fNC
%hNC
%jNC
%lNC
%nNC
%pNC
%rNC
%tNC
%vNC
%xNC
%zNC
%|NC
%~NC
@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
6-sp-d16
fp-armv8-fullfp1mv8-fullfp16-d16rmv8
crypto-neon-fp-a
                
////////////////////////
00000000000000001
8()^$|*+?.[]\{}
----------------
z>()^$|+?[]\{}
use-external-names
overlay-relative
external-contents
                                                                                
\\\\\\\\\\\\\\\\\\\\\\\\
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
LLVM_DISABLE_SYMBOLIZATION
LLVM_SYMBOLIZER_PATH
/=-+*%<>!&|^~.?
SwiftOnoneSupport
DisableReplacement
expected-warningeducational-notes=
e.swiftinterface.private.swiftin
nonmutatingvariaiability_witnesssil_differentiablt_witness_tablesil_default_witnsil_witness_table
sil_coverage_map
****************
 *"#$%&'(**
@ffffff
?333333
MbP?ed_struct_equals__derived_structived_enum_equals__derived_enum_e
function_extractdifferentiable_fhecked_cast_addrunconditional_che_enum_data_addrunchecked_take_ership_conversionunchecked_ownerswithout_escapingcopy_block_witho_unmanaged_valuestrong_copy_unmaontinuation_addrget_async_continutorelease_valueunmanaged_autoreecked_cast_valuetatype_to_objectobjc_metatype_to_existential_boxproject_existentntiable_functionlinear_function_dealloc_existented_release_valueunmanaged_releasexistential_addrdeinit_existentied_ref_cast_addrunchecked_ref_ca_pointer
thin_function_tofunction
pointer_to_thin_inuation
await_async_contal_value
ref_to_unmanagedunmanaged_to_refconvert_functionend_cow_mutationref_element_addrselect_enum_addrextract_executorswitch_enum_addrset_deallocatingdebug_value_addrinject_enum_addrked_bitwise_castunchecked_bitwiso_thick_functionthin_to_thick_futo_objc_metatypethick_to_objc_meo_thick_metatypeobjc_to_thick_mefy_bridge_objectclassify_bridge_to_bridge_objectvalue_to_bridge_xistential_valueinit_existentialopen_existentialync_continuationged_retain_valueunmanaged_retaintrivial_bit_castunchecked_triviacape_to_noescapeconvert_escape_tnal_checked_castential_box_valuehecked_addr_castunchecked_addr_cescaping_closureis_escaping_closuct_element_addrstruct_element_ahecked_enum_dataunchecked_enum_dt_enum_data_addrinit_enum_data_alloc_partial_refdealloc_partial__unpaired_accessend_unpaired_accmic_function_refprev_dynamic_funpy_unowned_valuestrong_copy_unowtential_metatypek_storage_headerinit_block_stora_ref
dynamic_functionfset
base_addr_for_ofcast
unchecked_value_ject
ref_to_bridge_obbridge_object_toffer
project_value_butype
existential_meta_box
r_br
checked_cast_adddealloc_value_bucape
mark_function_esalloc_existentiae_object_to_wordct_block_storageproject_block_sted_cast_value_brchecked_cast_valg_retain_unownedstrong_retain_unbegin_unpaired_aalloc_value_buffer
address_to_pointpointer_to_address
ref_to_raw_pointraw_pointer_to_ref
mark_uninitialized
tuple_element_addr
release_value_adbegin_cow_mutation
destructure_struct
alloc_ref_dynamic
index_raw_pointer
objc_super_method
dynamic_method_bretain_value_addautorelease_valuassign_by_wrappedestructure_tupl
ocWithTailElems_allocWithTailEleapplyDerivative_eAsyncTaskFuturecreateAsyncTaskFArrayFrontToBackassignCopyArrayFArrayBackToFrontassignCopyArrayBcTaskGroupFuturecreateAsyncTaskGlocateSubcontextautoDiffAllocatesafeToGuaranteedconvertUnownedUnbeginCOWMutationprojectTailElemscondfail_messageisbitwisetakableis_same_metatypeconvertTaskToJobtakeArrayNoAliasunsafeGuaranteeddestroyTaskGroupgToUnownedUnsafeconvertStrongToUitObjCEntrypointswift3ImplicitObWMutation_nativetrprof_incrementint_instrprof_inFromBridgeObjectcastBitPatternFraneousReadAccessperformInstantanwingContinuationwithUnsafeThrowiLinearMapContextautoDiffCreateLicastReferenceFroOSVersionAtLeasttargetVariantOSVueToBridgeObjectvalueToBridgeObjfp_with_overflowitofp_with_overfBufferForReadingCOWBufferForReadafeGuaranteedEndObjCTypeEncodinggetObjCTypeEncodtroyDefaultActordestroyDefaultAcCurrentAsyncTaskgetCurrentAsyncTcastFromNativeObclassifyBridgeObnter
bridgeFromRawPoition
assert_configurarunc
u_to_s_checked_ts_to_s_checked_ts_to_u_checked_tu_to_u_checked_tBack
takeArrayFrontToront
takeArrayBackToFveObject
unsafeCastToNatieachable
conditionallyUnriminator
typePtrAuthDiscrePointer
globalStringTablsafeContinuationwithUnsafeContinCopyArrayNoAliasassignCopyArrayNtargetOSVersionAlizeDefaultActorinitializeDefaulerialExecutorRefbuildSerialExecuiredModifyAccessbeginUnpairedModassumeNonNegativendUnpairedAccesgeneric_sdiv_exageneric_udiv_exasadd_with_overflow
uadd_with_overflssub_with_overflusub_with_overflsmul_with_overflumul_with_overflcastToNativeObjecastToBridgeObjebridgeToRawPointms
getCurrentExecutor
lback_diagnostictrigger_fallback
private_externalcally_replacabledynamically_replexact_self_class_optimized_thunksignature_optimibstraction_thunkreabstraction_thctually_escapingwithout_actuallybal_init_once_fnglobal_init_once_replacement_fordynamic_replacem_for
objc_replacement
gettable_property
settable_propertonal_conformanceconditional_confprotocol
associated_type_dynamic_lifetimeno_nested_conflialue
assign_wrapped_vingselfallocateddelegatingselfalssmodulerootselfcrossmodulerootsimmutable_accesscallee_guaranteeprojectedvalueinit
mutableAddressor
inIntegerLiteral_builtinIntegerL
toreleasePoolPopobjc_autoreleasePoolPush
on_point
ppend_contentsOfarray.append_connown
array.mutate_unkment
array.append_ele_element_addressarray.get_capacity
array.make_mutable
array.end_mutatiarray.check_index
.check_subscriptarray.check_subsntrinsic
array.finalize_ialized_intrinsicay.uninitializedarray.init.emptyativeTypeCheckedarray.props.isNacate
swift_bufferAlloodiff.nonvaryingautodiff.nonvaryprogramterminati
e.no.crossmoduleoptimize.no.cros
sequence.forEach
oslog.message.inarray.uninitialiswiftui.localizeization_key.initlocalization_keyith_localizationswiftui.init_witstring.init_locaattributed_strin
ft_readAtKeyPathswift_readAtKeyPtWritableKeyPathswift_modifyAtWrswift_getAtKeyPath
swift_setAtWritaoredInlineOffset_storedInlineOffthString
keypath.kvcKeyPaictionaryStorage__RawDictionarySArrayBodyStorage_SwiftArrayBodyStionarySingleton_swiftEmptyDictimptyArrayStorage_swiftEmptyArraymptySetSingleton_swiftEmptySetSieonstack
boxtostack.mustb1
Case
findStringSwitch1
g.getUTF8CStringstring.getUTF8CSty_with_capacity
bility.osversionavailability.osv
string.init_emptcent.get
string.escapePereger.descriptionbinaryInteger.deterpolation_initlocalization.inted.appendLiteralkey.init_literalator_debug_printconstant_evaluatconstant_evaluabstring.plusequal
ssociatedObjectsobjc.forbidAssoc
ft_suspend_point__swift_suspend_
appletvsimulator
t_variant_tripletarget_variant_tdule
llvm.embedded.mo
standard-librarywift_module_hashllvm.swift_modulre_wait_throwingswift_task_futurtask_future_wait
join_nonexistenttype_join_nonexi
mTypeIdentifiersUniformTypeIdent
it_stringliteralit_interpolations_constant_rangeswiftui.requiresevel
oslog.log_with_l
NSObjectProtocol
hecker.type(of:)typechecker.type
ule-overlay.yamlunextended-modul
8+72(((((-.:,</
swift-api-digestswift-api-extracbolgraph-extractswift-symbolgrapautolink-extractswift-autolink-e
MultiThreadedDebug
shared-debug-ucrstatic-debug-ucrThreadedDebugDLLMultiThreadedDLL`
nonatomic_retainobjc_nonatomic_ronatomic_releaseswift_nonatomic_ic_retainUnownedctRetain
swift_bridgeObjeretain_n
nObjectRelease_nswift_unknownObjmic_checkUnownedownObjectReleasegeObjectRetain_nwnObjectRetain_neObjectRelease_nomic_allocObjectnownObjectRetaindgeObjectReleaseatomic_release_nswift_allocObjec__swift_endBorrow
swift_checkUnownft_retainUnownedswift_retainUnowwift_fixLifetime__swift_fixLifetswift.refcounted
modules>
<swift-imported--import>
<bridging-header
os_app_extensionwatchos_app_extetvos_app_extensiac_app_extensionuikitformac_app_st_app_extensionmaccatalyst_app_sion
iosmac_app_extenios_app_extension
macos_app_extensWSProtocolHandleWSMethodInvocatiUnicodeUtilitiesDiskSpaceRecovercessSerialNumberProcessSerialNum
-fmodule-format=s-swift-version=-fapinotes-swiftswift1_unavailabUIEdgeInsetsZerouse subscriptingVariadic function is unavailableFunctions that may return more than one time (annotated with the 'returns_twice' attribute) are unavailable in S_dispatch_data_t__swift_shims_didispatch_block_t__swift_uintptr___swift_ptrdiff___swift_uint16_t__swift_uint32_t__swift_uint64_t__swift_intptr_tNSStringEncoding
SWIFT_ENUM_NAMEDhCompletionBlockwithCompletionBlompletionHandlerwithCompletionHacompletionHandlecancelButtonTitlctiveButtonTitledestructiveButtootherButtonTitleubscript
objectAtIndexedSorKeyedSubscriptobjectForKeyedSuatIndexedSubscript
forKeyedSubscripCH_SWIFT_OVERLAYDISPATCH_SWIFT_OHAR_IS_EIGHT_BITNS_UNICHAR_IS_EIBLOCKS_AVAILABLENS_BLOCKS_AVAILANSINTEGER_DEFINED
CGVECTOR_DEFINEDER_H
CF_USE_OSBYTEORDINED
NSEDGEINSETS_DEF
erred_module.map__inferred_modulA
olor-diagnostics-fcolor-diagnostiagnostics-color-fdiagnostics-co
tinStringLiteral_builtinStringLi
@inout_aliasable@callee_guarante@convention(thin)
ed_inner_pointer@unowned_inner_p
aqueReturnTypeOf_opaqueReturnTypunowned_inner_poqualified_accesswarn_unqualifiedtedValueProperty_projectedValuePbjc_runtime_base_swift_native_obformance
_restatedObjCConhesized_protocol__synthesized_prtionHandlerAsynclazy_realization_objc_non_lazy_renceInitializers_inheritsConvenializingReference_forbidSerializiysEmitIntoClient_alwaysEmitIntoCusableFromInline_objcRuntimeName_hasInitialValueactorIndependent_unsafeMainActor_show_in_interface
c_tagged_pointerunsafe_no_objc_tlizeObjCMetadata_staticInitializrSynthesizedType_clangImporterSyUIApplicationMai__raw_doc_commenNSApplicationMaidiscardableResulLLDBDebuggerFuncedIn
_originallyDefin_specializeExtenture
_implicitSelfCaptext
_inheritActorCond_property_initsrequires_stored_amicMemberLookupdynamicMemberLoonamicReplacement_dynamicReplacemplementationOnly_implementationOsfavoredOverload_disfavoredOverl
UnsafeValueBuffeaultActorStorageDefaultActorStorRawUnsafeContinu
utableRawPointerUnsafeMutableRawUnsafeRawPointerCFunctionPointerUnsafeMutablePoi_DifferentiationIteratorProtocolRawRepresentableibleByNilLiteralExpressibleByNileByStringLiteralExpressibleByStrleByColorLiteral_ExpressibleByColeByImageLiteral_ExpressibleByImingInterpolationictionaryLiteralExpressibleByDicleByArrayLiteralExpressibleByArrleByFloatLiteralExpressibleByFlopolationProtocolStringInterpolatByBooleanLiteralExpressibleByBooByIntegerLiteralExpressibleByIntontainer
_DestructorSafeCpper
_SwiftNewtypeWragedStoredNSError_BridgedStoredNSctiveCBridgeable_ObjectiveCBridgAsyncIteratorPro_ErrorCodeProtocol
AdditiveArithmetic
concurrentPerform
_compiler_versio
arenegylsetybdetuespemos
odnarod
FoundationCompatNIOFoundationCom
icationExtensioniOSMacApplicatiomacCatalystAppliUIKitForMacApplimacOSApplicationwatchOSApplicatixtension
tvOSApplicationEiOSApplicationExOSXApplicationEx
ckageDescription_PackageDescriptwarn_unused_result
ress
unsafeMutableAdd
targetEnvironmen$BuiltinExecutor$RethrowsProtocol
$BuiltinTaskGroup
ions
$ConcurrentFunct$BuiltinContinua$InheritActorCon$ImplicitSelfCap
swiftcrossimportdependencies.jsoswiftmodulesummary
swiftdeps.external
private.swiftintcord
bitstream-opt-reimported-modulesjson-dependencieift-dependenciesexternal-swift-dswift-dependencie-swiftinterfaceprivate-swiftintunit-output-pathindex-unit-outpu
0123456789ABCDEFWithCompletionHaWithCompletionBl
MutableCollectiomNumberGeneratorRandomNumberGeneRawBufferPointerUnsafeRawBufferPAccessCollectionRandomAccessColltionalCollectionBidirectionalColbleBufferPointerUnsafeMutableBufceableCollectionRangeReplaceableafeBufferPointerUnsafeBufferPoinaryFloatingPointBinaryFloatingPoObjectIdentifiernwrappedOptionalImplicitlyUnwrap0123456789ABCDEF
Builtin.RawPointin.UnknownObjectBuiltin.UnknownOnsafeValueBufferBuiltin.UnsafeVaBuiltin.BridgeObBuiltin.NativeObBuiltin.ExecutorBuiltin.SILTokenBuiltin.DefaultABuiltin.RawUnsafBuiltin.IntLitermodule.modulemap
clang-format off
ng-format off *//* clang-format // clang-format ?
DesiredTypeName =
@@@@@@@@@@@@@@@@@@@@@@@@
avx512vp2interse
respondsToSelectbjc_id_type_info__objc_id_type_i
_gpu_num_threads__kmpc_amdgcn_gp
?terminate@@YAXXZ
branch-protection=
llvm.metadata
mental_type_info__fundamental_ty
??_7type_info@@6B@
_Init_thread_epoch
thinlto-pre-link-offset-from-gepseparate-const-oattributor-cgsccbreak-crit-edgesearly-cse-memssanary-reassociateprint<memoryssa>print-alias-setsunify-loop-exitsetable-debuginfostrip-nonlinetabunts-propagationsynthetic-countsxecuted-contextsprint-must-be-extrinsics-minimallower-matrix-intelim-avail-extername-anon-globalobjc-arc-contracprint<block-freq>
print<phi-valuesprint-mustexecutverify<memoryssatransform-warning
ases
canonicalize-aliicit
make-guards-explaces
infer-address-spits>
print<demanded-b-ir>
verify<safepointuire<globals-aa>require<globals-otation2metadataannotation2metadnt-ir-similarityprint-ir-similarp-extract-singleloop-extract-sinmodule-optimizeroz-module-optimiip-debug-declarestrip-debug-declcalls-shrinkwraplibcalls-shrinkwect-tli-mappingsinject-tli-mappip-unroll-and-jamloop-unroll-and-nt-predicateinfoprint-predicateie<ir-similarity>invalidate<ir-sine-ee-instrumentpost-inline-ee-istant-intrinsicslower-constant-ienable-conditionlower-widenable--inline-libcallspartially-inlineck-safety-local>print<stack-saferequire<ir-simildate<globals-aa>invalidate<globa-inliner-wrapperalways-inliner-wsive-instcombineaggressive-instcaint-eliminationconstraint-elimiated-propagationcorrelated-propadelinearization>print<delinearizfunc-properties>print<func-propeinstrumentation>invalidate<pass-require<pass-insal-linkage-namesunique-internal--size-estimator>print<inliner-siprofile-summary>invalidate<profiasan-globals-md>invalidate<asan-asked-mem-intrinscalarize-masked-module>
invalidate<no-opsummary>
require<profile--safety>
invalidate<stackbals-md>
require<asan-glopagation
called-value-proolution>
verify<scalar-ev<module-summary>invalidate<modul<inline-advisor>invalidate<inlinatepoints-for-gcrewrite-statepoifrom-assumptionsalignment-from-arequire<module-srequire<inline-aodule-debuginfo>print<module-debatrix-intrinsicscalar-evolution>print<scalar-evont-dbg-inst-elimredundant-dbg-inidate<callgraph>invalidate<callgre<no-op-module>require<no-op-more<stack-safety>require<stack-sat-gcov-profilinginsert-gcov-prof-profile-summaryprint-profile-suz-module-inlinerscc-oz-module-in-dead-debug-infostrip-dead-debug-dead-prototypesstrip-dead-proto-guard-intrinsiclower-guard-intrstore-vectorizerload-store-vectolative-executionspeculative-execrequire<callgraph>
invalidate<verify>
print-stack-saferpo-function-attrs
wholeprogramdevirt
add-discriminatoannotation-remarks
callsite-splitting
loop-data-prefetprint<assumptions>
print<branch-prob>
print<postdomtree>
print<domfrontier>
print<inline-cost>
strip-gc-relocat<stack-lifetime>print<stack-lifeloop-interchangeloop-instsimplifloop-cache-cost>print<loop-cacheprint-access-info
loop-simplifycfgloop-unroll-fullloop-predicationitch
simple-loop-unswlicm
loop-versioning-full-unroll-max=sink-common-insthoist-common-insts
switch-to-lookupward-switch-condforward-switch-c-inst-threshold=bonus-inst-thresrize-forced-onlyvectorize-forcedeave-forced-onlyinterleave-forceackedge-load-presplit-backedge-lidate<fam-proxy>invalidate<fam-prequire<fam-proxate<no-op-cgscc>scc>
require<no-op-cgoped-noalias-aa>invalidate<scopeinvalidate<scala<no-op-function>require<scoped-nidate<memoryssa>invalidate<memorinvalidate<memdep>
require<memoryssa>
require<inliner-invalidate<loopsrequire<targetirrequire<basic-aainvalidate<func-lazy-value-info>invalidate<lazy-opt-remark-emit>invalidate<opt-rperties>
require<func-proue-info>
require<lazy-valrk-emit>
require<opt-remae<demanded-bits>invalidate<demanrequire<scalar-ee<targetlibinfo>invalidate<targee<cfl-anders-aa>invalidate<cfl-ae<cfl-steens-aa>invalidate<cfl-srequire<domtree>require<regions>require<scev-aa>invalidate<tbaa>date<block-freq>invalidate<blockrequire<demandeddate<phi-values>invalidate<phi-vrequire<targetlirequire<cfl-anderequire<cfl-steeuire<block-freq>require<block-fralidate<domtree>invalidate<domtruire<phi-values>require<phi-valualidate<regions>invalidate<regioalidate<scev-aa>invalidate<scev-ate<assumptions>invalidate<assumate<branch-prob>invalidate<brancate<postdomtree>invalidate<postdate<domfrontier>invalidate<domfrrequire<no-op-fuate<objc-arc-aa>invalidate<objc-ons>
require<assumptirob>
require<branch-pree>
require<postdomtier>
require<domfronttir>
-aa>
invalidate<basicrequire<objc-arcrequire<iv-usersate<access-info>invalidate<accesnfo>
require<access-iers>
invalidate<iv-usdate<no-op-loop>uire<no-op-loop>require<no-op-loscoped-noalias-aa
llvm.objc.retainllvm.objc.releasobjc.autoreleasellvm.objc.autoreobjc.retainBlockleaseReturnValueoreleasePoolPushloadWeakRetainedllvm.objc.loadWeak
objc.destroyWeakllvm.objc.destrom.objc.storeWeakllvm.objc.storeWllvm.objc.initWellvm.objc.moveWellvm.objc.copyWeedObject
unretainedObjectllvm.objc.unretanretainedPointerjc.clang.arc.usellvm.objc.clang.c_msgSend_fixup_
l_objc_msgSend_
llvm.global_ctor
odulemap
module.private.mmodule_private.map
html-single-fileplist-multi-filek/PrivateHeadersKernel.frameworkl-elf-v1
experimental-yami-elf-v1
experimental-taperimental-ifs-v1experimental-ifs-
precompiled-headassembler-with-cpp
tic_host
libamsupport_stadgeOSSDKBinariesbridgeOSSDKBinarOSPersonalizatioOSLicenseAgreemefast-honor-pragmas
/usr/local/include
_3d_image_writescl_khr_3d_image_ddressable_storecl_khr_byte_addrt32_base_atomicscl_khr_global_incl_khr_local_intt64_base_atomicscl_khr_int64_basextended_atomicscl_khr_int64_extkhr_depth_imagescl_khr_depth_ima_gl_msaa_sharingcl_khr_gl_msaa_skhr_mipmap_imagecl_khr_mipmap_immap_image_writese_writes
cl_khr_srgb_imagcl_khr_subgroupsunction_pointers__cl_clang_functriadic_functions__cl_clang_variacl_amd_media_ops2
dot_product_int8cl_arm_integer_dcl_intel_subgroups
ps_short
AST Record Layou*** Dumping AST 
DISTRIB_CODENAMEse Linux
Red Hat EnterpriScientific Linux
zlib
-fdump-record-layouts
full
marker
none
undefined
local-exec
4096
medium
small
mips1
mips2
mips32r2
mips32r3
mips32r5
mips32r6
mips32
mips3
mips4
mips5
mips64r2
mips64r3
mips64r5
mips64r6
mips64
hexagonv55
hexagonv5
hexagonv60
hexagonv62
hexagonv65
hexagonv66
hexagonv67t
hexagonv67
no-invalid-source-encoding
invalid-source-encoding
everything
no-macro-redefined
no-sign-compare
no-unused-parameter
no-dllexport-explicit-instantiation-decl
no-deprecated-declarations
no-error
error
error=c++11-compat-deprecated-writable-strings
-externc-isystem-internal-extern-internal-isyste-dwarf-debug-flags
-iwithprefixbefore
file
-diagnostic-log--header-include--compilation-dir-fdebug-compilat-dependency-file-diagnostic-file-serialize-diagn-index-store-path
ules-cache-path=-fmodules-cache-otes-cache-path=-fapinotes-cache
inline-bool-flagters
inline-8bit-coun
ze64_off
oclc_wavefrontsivefrontsize64_onrounded_sqrt_offoclc_correctly_r_rounded_sqrt_onoclc_daz_opt_offc_finite_only_onoclc_finite_onlyc_unsafe_math_onoclc_unsafe_math_off
oclc_isa_version_
HIP_VERSION_MAJOR
HIP_VERSION_MINOHIP_VERSION_PATCH
-mlink-builtin-bitcode
-analyzer-configssp-buffer-size=t-header
-finclude-defaultzns
-disable-llvm-op--fatal-warningse_cpusubtype_ALL-force_cpusubtypsections
-compress-debug-s-debug-sections--compress-debugions=yes
--mrelax-relocatx-relocations=no-mrelax-relocati-relocations=yes--nocompress-deb-nocompress-debuion-dir=
atic
-lcompiler_rt-st
libsystem_pthrealibsystem_platfo/usr/lib/system/
ontents/Develope.app/Contents/Deted_symbols_list.xctoolchain/usrandLineTools/usr/CommandLineTool/XcodeDefault.xcAppleTVSimulator
opt/rh/devtoolsemsp430i2xxgeneriU
-fxray-instrument
-fxray-instruction-threshold=
try_acquire_sharquire_capabilitytry_acquire_capauires_capabilityrequires_capabilexclusive_trylocneric_capabilityrelease_generic_requires_shared_t_exclusive_lockassert_exclusived_locks_requiredshared_locks_reqpability
assert_shared_carequired
exclusive_locks_assert_capabilitshared_lock_funcve_lock_functionexclusive_lock_fshared_trylock_facquire_shared_crelease_shared_cacquire_capabiliassert_shared_lock
release_capabiliownership_returnc_bridge_mutableobjc_bridge_mutac_bridge_relatedobjc_bridge_relanounroll_and_jamenum_extensibiliobjc_method_family
rm_builtin_alias__clang_arm_builer_with_type_tagpointer_with_typnt_with_type_tagargument_with_ty_usage_semanticsxnu_usage_semantmemory_operationtyped_memory_opeh_vtable_pointerptrauth_vtable_ptag_for_datatypetype_tag_for_datswift_async_erroreturn_typestatehared_capabilitytrylock_functioniboutletcollectilayout_compatibl
null_unspecifiedunsafe_unretaine3
no_openmp_routinj
c_implementationobjc_implementatZERO
FE_TONEARESTFROMtual_inheritancevirtual_inheritaance
multiple_inheritsingle_inheritantiation_intervalpipeline_initiatinterleave_counttorize_predicatevectorize_predic
erationWithBlockaddOperationWith_ptr
intrusive_shared
NAME_GOES_HERE!#!#!NAME_GOES_HERtObjectFromCoderreplacementObjecableCopyWithZonemutableCopyWithZ2
ATED_INITIALIZERNS_DESIGNATED_INF
keConstantString__CFStringMakeCo
tmo_posix_memalign
tmo_aligned_allono_sanitize_thread
no_sanitize_memosanitize_addressno_sanitize_addr_safety_analysisno_address_safet
asrl
lsll
sqrshr
sqrshrl
sqrshrl_sat48
sqshl
sqshll
srshr
srshrl
uqrshl
uqrshll
uqrshll_sat48
uqshl
uqshll
urshr
urshrl
vabavq_p
vabavq_p_s16
vabavq_p_s32
vabavq_p_s8
vabavq_p_u16
vabavq_p_u32
vabavq_p_u8
vabavq
vabavq_s16
vabavq_s32
vabavq_s8
vabavq_u16
vabavq_u32
vabavq_u8
vabdq
vabdq_f16
vabdq_f32
vabdq_m
vabdq_m_f16
vabdq_m_f32
vabdq_m_s16
vabdq_m_s32
vabdq_m_s8
vabdq_m_u16
vabdq_m_u32
vabdq_m_u8
vabdq_s16
vabdq_s32
vabdq_s8
vabdq_u16
vabdq_u32
vabdq_u8
vabdq_x
vabdq_x_f16
vabdq_x_f32
vabdq_x_s16
vabdq_x_s32
vabdq_x_s8
vabdq_x_u16
vabdq_x_u32
vabdq_x_u8
vabsq
vabsq_f16
vabsq_f32
vabsq_m
vabsq_m_f16
vabsq_m_f32
vabsq_m_s16
vabsq_m_s32
vabsq_m_s8
vabsq_s16
vabsq_s32
vabsq_s8
vabsq_x
vabsq_x_f16
vabsq_x_f32
vabsq_x_s16
vabsq_x_s32
vabsq_x_s8
vadciq_m
vadciq_m_s32
vadciq_m_u32
vadciq
vadciq_s32
vadciq_u32
vadcq_m
vadcq_m_s32
vadcq_m_u32
vadcq
vadcq_s32
vadcq_u32
vaddlvaq_p
vaddlvaq_p_s32
vaddlvaq_p_u32
vaddlvaq
vaddlvaq_s32
vaddlvaq_u32
vaddlvq_p
vaddlvq_p_s32
vaddlvq_p_u32
vaddlvq
vaddlvq_s32
vaddlvq_u32
vaddq
vaddq_f16
vaddq_f32
vaddq_m
vaddq_m_f16
vaddq_m_f32
vaddq_m_n_f16
vaddq_m_n_f32
vaddq_m_n_s16
vaddq_m_n_s32
vaddq_m_n_s8
vaddq_m_n_u16
vaddq_m_n_u32
vaddq_m_n_u8
vaddq_m_s16
vaddq_m_s32
vaddq_m_s8
vaddq_m_u16
vaddq_m_u32
vaddq_m_u8
vaddq_n_f16
vaddq_n_f32
vaddq_n_s16
vaddq_n_s32
vaddq_n_s8
vaddq_n_u16
vaddq_n_u32
vaddq_n_u8
vaddq_s16
vaddq_s32
vaddq_s8
vaddq_u16
vaddq_u32
vaddq_u8
vaddq_x
vaddq_x_f16
vaddq_x_f32
vaddq_x_n_f16
vaddq_x_n_f32
vaddq_x_n_s16
vaddq_x_n_s32
vaddq_x_n_s8
vaddq_x_n_u16
vaddq_x_n_u32
vaddq_x_n_u8
vaddq_x_s16
vaddq_x_s32
vaddq_x_s8
vaddq_x_u16
vaddq_x_u32
vaddq_x_u8
vaddvaq_p
vaddvaq_p_s16
vaddvaq_p_s32
vaddvaq_p_s8
vaddvaq_p_u16
vaddvaq_p_u32
vaddvaq_p_u8
vaddvaq
vaddvaq_s16
vaddvaq_s32
vaddvaq_s8
vaddvaq_u16
vaddvaq_u32
vaddvaq_u8
vaddvq_p
vaddvq_p_s16
vaddvq_p_s32
vaddvq_p_s8
vaddvq_p_u16
vaddvq_p_u32
vaddvq_p_u8
vaddvq
vaddvq_s16
vaddvq_s32
vaddvq_s8
vaddvq_u16
vaddvq_u32
vaddvq_u8
vandq
vandq_f16
vandq_f32
vandq_m
vandq_m_f16
vandq_m_f32
vandq_m_s16
vandq_m_s32
vandq_m_s8
vandq_m_u16
vandq_m_u32
vandq_m_u8
vandq_s16
vandq_s32
vandq_s8
vandq_u16
vandq_u32
vandq_u8
vandq_x
vandq_x_f16
vandq_x_f32
vandq_x_s16
vandq_x_s32
vandq_x_s8
vandq_x_u16
vandq_x_u32
vandq_x_u8
vbicq
vbicq_f16
vbicq_f32
vbicq_m
vbicq_m_f16
vbicq_m_f32
vbicq_m_n
vbicq_m_n_s16
vbicq_m_n_s32
vbicq_m_n_u16
vbicq_m_n_u32
vbicq_m_s16
vbicq_m_s32
vbicq_m_s8
vbicq_m_u16
vbicq_m_u32
vbicq_m_u8
vbicq_n_s16
vbicq_n_s32
vbicq_n_u16
vbicq_n_u32
vbicq_s16
vbicq_s32
vbicq_s8
vbicq_u16
vbicq_u32
vbicq_u8
vbicq_x
vbicq_x_f16
vbicq_x_f32
vbicq_x_s16
vbicq_x_s32
vbicq_x_s8
vbicq_x_u16
vbicq_x_u32
vbicq_x_u8
vbrsrq_m
vbrsrq_m_n_f16
vbrsrq_m_n_f32
vbrsrq_m_n_s16
vbrsrq_m_n_s32
vbrsrq_m_n_s8
vbrsrq_m_n_u16
vbrsrq_m_n_u32
vbrsrq_m_n_u8
vbrsrq
vbrsrq_n_f16
vbrsrq_n_f32
vbrsrq_n_s16
vbrsrq_n_s32
vbrsrq_n_s8
vbrsrq_n_u16
vbrsrq_n_u32
vbrsrq_n_u8
vbrsrq_x
vbrsrq_x_n_f16
vbrsrq_x_n_f32
vbrsrq_x_n_s16
vbrsrq_x_n_s32
vbrsrq_x_n_s8
vbrsrq_x_n_u16
vbrsrq_x_n_u32
vbrsrq_x_n_u8
vcaddq_rot270
vcaddq_rot270_f16
vcaddq_rot270_f32
vcaddq_rot270_m
vcaddq_rot270_m_f16
vcaddq_rot270_m_f32
vcaddq_rot270_m_s16
vcaddq_rot270_m_s32
vcaddq_rot270_m_s8
vcaddq_rot270_m_u16
vcaddq_rot270_m_u32
vcaddq_rot270_m_u8
vcaddq_rot270_s16
vcaddq_rot270_s32
vcaddq_rot270_s8
vcaddq_rot270_u16
vcaddq_rot270_u32
vcaddq_rot270_u8
vcaddq_rot270_x
vcaddq_rot270_x_f16
vcaddq_rot270_x_f32
vcaddq_rot270_x_s16
vcaddq_rot270_x_s32
vcaddq_rot270_x_s8
vcaddq_rot270_x_u16
vcaddq_rot270_x_u32
vcaddq_rot270_x_u8
vcaddq_rot90
vcaddq_rot90_f16
vcaddq_rot90_f32
vcaddq_rot90_m
vcaddq_rot90_m_f16
vcaddq_rot90_m_f32
vcaddq_rot90_m_s16
vcaddq_rot90_m_s32
vcaddq_rot90_m_s8
vcaddq_rot90_m_u16
vcaddq_rot90_m_u32
vcaddq_rot90_m_u8
vcaddq_rot90_s16
vcaddq_rot90_s32
vcaddq_rot90_s8
vcaddq_rot90_u16
vcaddq_rot90_u32
vcaddq_rot90_u8
vcaddq_rot90_x
vcaddq_rot90_x_f16
vcaddq_rot90_x_f32
vcaddq_rot90_x_s16
vcaddq_rot90_x_s32
vcaddq_rot90_x_s8
vcaddq_rot90_x_u16
vcaddq_rot90_x_u32
vcaddq_rot90_x_u8
vclsq_m
vclsq_m_s16
vclsq_m_s32
vclsq_m_s8
vclsq
vclsq_s16
vclsq_s32
vclsq_s8
vclsq_x
vclsq_x_s16
vclsq_x_s32
vclsq_x_s8
vclzq_m
vclzq_m_s16
vclzq_m_s32
vclzq_m_s8
vclzq_m_u16
vclzq_m_u32
vclzq_m_u8
vclzq
vclzq_s16
vclzq_s32
vclzq_s8
vclzq_u16
vclzq_u32
vclzq_u8
vclzq_x
vclzq_x_s16
vclzq_x_s32
vclzq_x_s8
vclzq_x_u16
vclzq_x_u32
vclzq_x_u8
vcmlaq
vcmlaq_f16
vcmlaq_f32
vcmlaq_m
vcmlaq_m_f16
vcmlaq_m_f32
vcmlaq_rot180
vcmlaq_rot180_f16
vcmlaq_rot180_f32
vcmlaq_rot180_m
vcmlaq_rot180_m_f16
vcmlaq_rot180_m_f32
vcmlaq_rot270
vcmlaq_rot270_f16
vcmlaq_rot270_f32
vcmlaq_rot270_m
vcmlaq_rot270_m_f16
vcmlaq_rot270_m_f32
vcmlaq_rot90
vcmlaq_rot90_f16
vcmlaq_rot90_f32
vcmlaq_rot90_m
vcmlaq_rot90_m_f16
vcmlaq_rot90_m_f32
vcmpcsq_m
vcmpcsq_m_n_u16
vcmpcsq_m_n_u32
vcmpcsq_m_n_u8
vcmpcsq_m_u16
vcmpcsq_m_u32
vcmpcsq_m_u8
vcmpcsq
vcmpcsq_n_u16
vcmpcsq_n_u32
vcmpcsq_n_u8
vcmpcsq_u16
vcmpcsq_u32
vcmpcsq_u8
vcmpeqq
vcmpeqq_f16
vcmpeqq_f32
vcmpeqq_m
vcmpeqq_m_f16
vcmpeqq_m_f32
vcmpeqq_m_n_f16
vcmpeqq_m_n_f32
vcmpeqq_m_n_s16
vcmpeqq_m_n_s32
vcmpeqq_m_n_s8
vcmpeqq_m_n_u16
vcmpeqq_m_n_u32
vcmpeqq_m_n_u8
vcmpeqq_m_s16
vcmpeqq_m_s32
vcmpeqq_m_s8
vcmpeqq_m_u16
vcmpeqq_m_u32
vcmpeqq_m_u8
vcmpeqq_n_f16
vcmpeqq_n_f32
vcmpeqq_n_s16
vcmpeqq_n_s32
vcmpeqq_n_s8
vcmpeqq_n_u16
vcmpeqq_n_u32
vcmpeqq_n_u8
vcmpeqq_s16
vcmpeqq_s32
vcmpeqq_s8
vcmpeqq_u16
vcmpeqq_u32
vcmpeqq_u8
vcmpgeq
vcmpgeq_f16
vcmpgeq_f32
vcmpgeq_m
vcmpgeq_m_f16
vcmpgeq_m_f32
vcmpgeq_m_n_f16
vcmpgeq_m_n_f32
vcmpgeq_m_n_s16
vcmpgeq_m_n_s32
vcmpgeq_m_n_s8
vcmpgeq_m_s16
vcmpgeq_m_s32
vcmpgeq_m_s8
vcmpgeq_n_f16
vcmpgeq_n_f32
vcmpgeq_n_s16
vcmpgeq_n_s32
vcmpgeq_n_s8
vcmpgeq_s16
vcmpgeq_s32
vcmpgeq_s8
vcmpgtq
vcmpgtq_f16
vcmpgtq_f32
vcmpgtq_m
vcmpgtq_m_f16
vcmpgtq_m_f32
vcmpgtq_m_n_f16
vcmpgtq_m_n_f32
vcmpgtq_m_n_s16
vcmpgtq_m_n_s32
vcmpgtq_m_n_s8
vcmpgtq_m_s16
vcmpgtq_m_s32
vcmpgtq_m_s8
vcmpgtq_n_f16
vcmpgtq_n_f32
vcmpgtq_n_s16
vcmpgtq_n_s32
vcmpgtq_n_s8
vcmpgtq_s16
vcmpgtq_s32
vcmpgtq_s8
vcmphiq_m
vcmphiq_m_n_u16
vcmphiq_m_n_u32
vcmphiq_m_n_u8
vcmphiq_m_u16
vcmphiq_m_u32
vcmphiq_m_u8
vcmphiq
vcmphiq_n_u16
vcmphiq_n_u32
vcmphiq_n_u8
vcmphiq_u16
vcmphiq_u32
vcmphiq_u8
vcmpleq
vcmpleq_f16
vcmpleq_f32
vcmpleq_m
vcmpleq_m_f16
vcmpleq_m_f32
vcmpleq_m_n_f16
vcmpleq_m_n_f32
vcmpleq_m_n_s16
vcmpleq_m_n_s32
vcmpleq_m_n_s8
vcmpleq_m_s16
vcmpleq_m_s32
vcmpleq_m_s8
vcmpleq_n_f16
vcmpleq_n_f32
vcmpleq_n_s16
vcmpleq_n_s32
vcmpleq_n_s8
vcmpleq_s16
vcmpleq_s32
vcmpleq_s8
vcmpltq
vcmpltq_f16
vcmpltq_f32
vcmpltq_m
vcmpltq_m_f16
vcmpltq_m_f32
vcmpltq_m_n_f16
vcmpltq_m_n_f32
vcmpltq_m_n_s16
vcmpltq_m_n_s32
vcmpltq_m_n_s8
vcmpltq_m_s16
vcmpltq_m_s32
vcmpltq_m_s8
vcmpltq_n_f16
vcmpltq_n_f32
vcmpltq_n_s16
vcmpltq_n_s32
vcmpltq_n_s8
vcmpltq_s16
vcmpltq_s32
vcmpltq_s8
vcmpneq
vcmpneq_f16
vcmpneq_f32
vcmpneq_m
vcmpneq_m_f16
vcmpneq_m_f32
vcmpneq_m_n_f16
vcmpneq_m_n_f32
vcmpneq_m_n_s16
vcmpneq_m_n_s32
vcmpneq_m_n_s8
vcmpneq_m_n_u16
vcmpneq_m_n_u32
vcmpneq_m_n_u8
vcmpneq_m_s16
vcmpneq_m_s32
vcmpneq_m_s8
vcmpneq_m_u16
vcmpneq_m_u32
vcmpneq_m_u8
vcmpneq_n_f16
vcmpneq_n_f32
vcmpneq_n_s16
vcmpneq_n_s32
vcmpneq_n_s8
vcmpneq_n_u16
vcmpneq_n_u32
vcmpneq_n_u8
vcmpneq_s16
vcmpneq_s32
vcmpneq_s8
vcmpneq_u16
vcmpneq_u32
vcmpneq_u8
vcmulq
vcmulq_f16
vcmulq_f32
vcmulq_m
vcmulq_m_f16
vcmulq_m_f32
vcmulq_rot180
vcmulq_rot180_f16
vcmulq_rot180_f32
vcmulq_rot180_m
vcmulq_rot180_m_f16
vcmulq_rot180_m_f32
vcmulq_rot180_x
vcmulq_rot180_x_f16
vcmulq_rot180_x_f32
vcmulq_rot270
vcmulq_rot270_f16
vcmulq_rot270_f32
vcmulq_rot270_m
vcmulq_rot270_m_f16
vcmulq_rot270_m_f32
vcmulq_rot270_x
vcmulq_rot270_x_f16
vcmulq_rot270_x_f32
vcmulq_rot90
vcmulq_rot90_f16
vcmulq_rot90_f32
vcmulq_rot90_m
vcmulq_rot90_m_f16
vcmulq_rot90_m_f32
vcmulq_rot90_x
vcmulq_rot90_x_f16
vcmulq_rot90_x_f32
vcmulq_x
vcmulq_x_f16
vcmulq_x_f32
vcreateq_f16
vcreateq_f32
vcreateq_s16
vcreateq_s32
vcreateq_s64
vcreateq_s8
vcreateq_u16
vcreateq_u32
vcreateq_u64
vcreateq_u8
vctp16q
vctp16q_m
vctp32q
vctp32q_m
vctp64q
vctp64q_m
vctp8q
vctp8q_m
vcvtaq_m
vcvtaq_m_s16_f16
vcvtaq_m_s32_f32
vcvtaq_m_u16_f16
vcvtaq_m_u32_f32
vcvtaq_s16_f16
vcvtaq_s32_f32
vcvtaq_u16_f16
vcvtaq_u32_f32
vcvtaq_x_s16_f16
vcvtaq_x_s32_f32
vcvtaq_x_u16_f16
vcvtaq_x_u32_f32
vcvtbq_f16_f32
vcvtbq_f32_f16
vcvtbq_m_f16_f32
vcvtbq_m_f32_f16
vcvtbq_x_f32_f16
vcvtmq_m
vcvtmq_m_s16_f16
vcvtmq_m_s32_f32
vcvtmq_m_u16_f16
vcvtmq_m_u32_f32
vcvtmq_s16_f16
vcvtmq_s32_f32
vcvtmq_u16_f16
vcvtmq_u32_f32
vcvtmq_x_s16_f16
vcvtmq_x_s32_f32
vcvtmq_x_u16_f16
vcvtmq_x_u32_f32
vcvtnq_m
vcvtnq_m_s16_f16
vcvtnq_m_s32_f32
vcvtnq_m_u16_f16
vcvtnq_m_u32_f32
vcvtnq_s16_f16
vcvtnq_s32_f32
vcvtnq_u16_f16
vcvtnq_u32_f32
vcvtnq_x_s16_f16
vcvtnq_x_s32_f32
vcvtnq_x_u16_f16
vcvtnq_x_u32_f32
vcvtpq_m
vcvtpq_m_s16_f16
vcvtpq_m_s32_f32
vcvtpq_m_u16_f16
vcvtpq_m_u32_f32
vcvtpq_s16_f16
vcvtpq_s32_f32
vcvtpq_u16_f16
vcvtpq_u32_f32
vcvtpq_x_s16_f16
vcvtpq_x_s32_f32
vcvtpq_x_u16_f16
vcvtpq_x_u32_f32
vcvtq
vcvtq_f16_s16
vcvtq_f16_u16
vcvtq_f32_s32
vcvtq_f32_u32
vcvtq_m
vcvtq_m_f16_s16
vcvtq_m_f16_u16
vcvtq_m_f32_s32
vcvtq_m_f32_u32
vcvtq_m_n
vcvtq_m_n_f16_s16
vcvtq_m_n_f16_u16
vcvtq_m_n_f32_s32
vcvtq_m_n_f32_u32
vcvtq_m_n_s16_f16
vcvtq_m_n_s32_f32
vcvtq_m_n_u16_f16
vcvtq_m_n_u32_f32
vcvtq_m_s16_f16
vcvtq_m_s32_f32
vcvtq_m_u16_f16
vcvtq_m_u32_f32
vcvtq_n
vcvtq_n_f16_s16
vcvtq_n_f16_u16
vcvtq_n_f32_s32
vcvtq_n_f32_u32
vcvtq_n_s16_f16
vcvtq_n_s32_f32
vcvtq_n_u16_f16
vcvtq_n_u32_f32
vcvtq_s16_f16
vcvtq_s32_f32
vcvtq_u16_f16
vcvtq_u32_f32
vcvtq_x
vcvtq_x_f16_s16
vcvtq_x_f16_u16
vcvtq_x_f32_s32
vcvtq_x_f32_u32
vcvtq_x_n
vcvtq_x_n_f16_s16
vcvtq_x_n_f16_u16
vcvtq_x_n_f32_s32
vcvtq_x_n_f32_u32
vcvtq_x_n_s16_f16
vcvtq_x_n_s32_f32
vcvtq_x_n_u16_f16
vcvtq_x_n_u32_f32
vcvtq_x_s16_f16
vcvtq_x_s32_f32
vcvtq_x_u16_f16
vcvtq_x_u32_f32
vcvttq_f16_f32
vcvttq_f32_f16
vcvttq_m_f16_f32
vcvttq_m_f32_f16
vcvttq_x_f32_f16
vddupq_m
vddupq_m_n_u16
vddupq_m_n_u32
vddupq_m_n_u8
vddupq_m_wb_u16
vddupq_m_wb_u32
vddupq_m_wb_u8
vddupq_u16
vddupq_n_u16
vddupq_u32
vddupq_n_u32
vddupq_u8
vddupq_n_u8
vddupq_wb_u16
vddupq_wb_u32
vddupq_wb_u8
vddupq_x_u16
vddupq_x_n_u16
vddupq_x_u32
vddupq_x_n_u32
vddupq_x_u8
vddupq_x_n_u8
vddupq_x_wb_u16
vddupq_x_wb_u32
vddupq_x_wb_u8
vdupq_m
vdupq_m_n_f16
vdupq_m_n_f32
vdupq_m_n_s16
vdupq_m_n_s32
vdupq_m_n_s8
vdupq_m_n_u16
vdupq_m_n_u32
vdupq_m_n_u8
vdupq_n_f16
vdupq_n_f32
vdupq_n_s16
vdupq_n_s32
vdupq_n_s8
vdupq_n_u16
vdupq_n_u32
vdupq_n_u8
vdupq_x_n_f16
vdupq_x_n_f32
vdupq_x_n_s16
vdupq_x_n_s32
vdupq_x_n_s8
vdupq_x_n_u16
vdupq_x_n_u32
vdupq_x_n_u8
vdwdupq_m
vdwdupq_m_n_u16
vdwdupq_m_n_u32
vdwdupq_m_n_u8
vdwdupq_m_wb_u16
vdwdupq_m_wb_u32
vdwdupq_m_wb_u8
vdwdupq_u16
vdwdupq_n_u16
vdwdupq_u32
vdwdupq_n_u32
vdwdupq_u8
vdwdupq_n_u8
vdwdupq_wb_u16
vdwdupq_wb_u32
vdwdupq_wb_u8
vdwdupq_x_u16
vdwdupq_x_n_u16
vdwdupq_x_u32
vdwdupq_x_n_u32
vdwdupq_x_u8
vdwdupq_x_n_u8
vdwdupq_x_wb_u16
vdwdupq_x_wb_u32
vdwdupq_x_wb_u8
veorq
veorq_f16
veorq_f32
veorq_m
veorq_m_f16
veorq_m_f32
veorq_m_s16
veorq_m_s32
veorq_m_s8
veorq_m_u16
veorq_m_u32
veorq_m_u8
veorq_s16
veorq_s32
veorq_s8
veorq_u16
veorq_u32
veorq_u8
veorq_x
veorq_x_f16
veorq_x_f32
veorq_x_s16
veorq_x_s32
veorq_x_s8
veorq_x_u16
veorq_x_u32
veorq_x_u8
vfmaq
vfmaq_f16
vfmaq_f32
vfmaq_m
vfmaq_m_f16
vfmaq_m_f32
vfmaq_m_n_f16
vfmaq_m_n_f32
vfmaq_n_f16
vfmaq_n_f32
vfmasq_m
vfmasq_m_n_f16
vfmasq_m_n_f32
vfmasq
vfmasq_n_f16
vfmasq_n_f32
vfmsq
vfmsq_f16
vfmsq_f32
vfmsq_m
vfmsq_m_f16
vfmsq_m_f32
vgetq_lane
vgetq_lane_f16
vgetq_lane_f32
vgetq_lane_s16
vgetq_lane_s32
vgetq_lane_s64
vgetq_lane_s8
vgetq_lane_u16
vgetq_lane_u32
vgetq_lane_u64
vgetq_lane_u8
vhaddq_m
vhaddq_m_n_s16
vhaddq_m_n_s32
vhaddq_m_n_s8
vhaddq_m_n_u16
vhaddq_m_n_u32
vhaddq_m_n_u8
vhaddq_m_s16
vhaddq_m_s32
vhaddq_m_s8
vhaddq_m_u16
vhaddq_m_u32
vhaddq_m_u8
vhaddq
vhaddq_n_s16
vhaddq_n_s32
vhaddq_n_s8
vhaddq_n_u16
vhaddq_n_u32
vhaddq_n_u8
vhaddq_s16
vhaddq_s32
vhaddq_s8
vhaddq_u16
vhaddq_u32
vhaddq_u8
vhaddq_x
vhaddq_x_n_s16
vhaddq_x_n_s32
vhaddq_x_n_s8
vhaddq_x_n_u16
vhaddq_x_n_u32
vhaddq_x_n_u8
vhaddq_x_s16
vhaddq_x_s32
vhaddq_x_s8
vhaddq_x_u16
vhaddq_x_u32
vhaddq_x_u8
vhcaddq_rot270_m
vhcaddq_rot270_m_s16
vhcaddq_rot270_m_s32
vhcaddq_rot270_m_s8
vhcaddq_rot270
vhcaddq_rot270_s16
vhcaddq_rot270_s32
vhcaddq_rot270_s8
vhcaddq_rot270_x
vhcaddq_rot270_x_s16
vhcaddq_rot270_x_s32
vhcaddq_rot270_x_s8
vhcaddq_rot90_m
vhcaddq_rot90_m_s16
vhcaddq_rot90_m_s32
vhcaddq_rot90_m_s8
vhcaddq_rot90
vhcaddq_rot90_s16
vhcaddq_rot90_s32
vhcaddq_rot90_s8
vhcaddq_rot90_x
vhcaddq_rot90_x_s16
vhcaddq_rot90_x_s32
vhcaddq_rot90_x_s8
vhsubq_m
vhsubq_m_n_s16
vhsubq_m_n_s32
vhsubq_m_n_s8
vhsubq_m_n_u16
vhsubq_m_n_u32
vhsubq_m_n_u8
vhsubq_m_s16
vhsubq_m_s32
vhsubq_m_s8
vhsubq_m_u16
vhsubq_m_u32
vhsubq_m_u8
vhsubq
vhsubq_n_s16
vhsubq_n_s32
vhsubq_n_s8
vhsubq_n_u16
vhsubq_n_u32
vhsubq_n_u8
vhsubq_s16
vhsubq_s32
vhsubq_s8
vhsubq_u16
vhsubq_u32
vhsubq_u8
vhsubq_x
vhsubq_x_n_s16
vhsubq_x_n_s32
vhsubq_x_n_s8
vhsubq_x_n_u16
vhsubq_x_n_u32
vhsubq_x_n_u8
vhsubq_x_s16
vhsubq_x_s32
vhsubq_x_s8
vhsubq_x_u16
vhsubq_x_u32
vhsubq_x_u8
vidupq_m
vidupq_m_n_u16
vidupq_m_n_u32
vidupq_m_n_u8
vidupq_m_wb_u16
vidupq_m_wb_u32
vidupq_m_wb_u8
vidupq_u16
vidupq_n_u16
vidupq_u32
vidupq_n_u32
vidupq_u8
vidupq_n_u8
vidupq_wb_u16
vidupq_wb_u32
vidupq_wb_u8
vidupq_x_u16
vidupq_x_n_u16
vidupq_x_u32
vidupq_x_n_u32
vidupq_x_u8
vidupq_x_n_u8
vidupq_x_wb_u16
vidupq_x_wb_u32
vidupq_x_wb_u8
viwdupq_m
viwdupq_m_n_u16
viwdupq_m_n_u32
viwdupq_m_n_u8
viwdupq_m_wb_u16
viwdupq_m_wb_u32
viwdupq_m_wb_u8
viwdupq_u16
viwdupq_n_u16
viwdupq_u32
viwdupq_n_u32
viwdupq_u8
viwdupq_n_u8
viwdupq_wb_u16
viwdupq_wb_u32
viwdupq_wb_u8
viwdupq_x_u16
viwdupq_x_n_u16
viwdupq_x_u32
viwdupq_x_n_u32
viwdupq_x_u8
viwdupq_x_n_u8
viwdupq_x_wb_u16
viwdupq_x_wb_u32
viwdupq_x_wb_u8
vld1q
vld1q_f16
vld1q_f32
vld1q_s16
vld1q_s32
vld1q_s8
vld1q_u16
vld1q_u32
vld1q_u8
vld1q_z
vld1q_z_f16
vld1q_z_f32
vld1q_z_s16
vld1q_z_s32
vld1q_z_s8
vld1q_z_u16
vld1q_z_u32
vld1q_z_u8
vld2q
vld2q_f16
vld2q_f32
vld2q_s16
vld2q_s32
vld2q_s8
vld2q_u16
vld2q_u32
vld2q_u8
vld4q
vld4q_f16
vld4q_f32
vld4q_s16
vld4q_s32
vld4q_s8
vld4q_u16
vld4q_u32
vld4q_u8
vldrbq_gather_offset
vldrbq_gather_offset_s16
vldrbq_gather_offset_s32
vldrbq_gather_offset_s8
vldrbq_gather_offset_u16
vldrbq_gather_offset_u32
vldrbq_gather_offset_u8
vldrbq_gather_offset_z
vldrbq_gather_offset_z_s16
vldrbq_gather_offset_z_s32
vldrbq_gather_offset_z_s8
vldrbq_gather_offset_z_u16
vldrbq_gather_offset_z_u32
vldrbq_gather_offset_z_u8
vldrbq_s16
vldrbq_s32
vldrbq_s8
vldrbq_u16
vldrbq_u32
vldrbq_u8
vldrbq_z_s16
vldrbq_z_s32
vldrbq_z_s8
vldrbq_z_u16
vldrbq_z_u32
vldrbq_z_u8
vldrdq_gather_base_s64
vldrdq_gather_base_u64
vldrdq_gather_base_wb_s64
vldrdq_gather_base_wb_u64
vldrdq_gather_base_wb_z_s64
vldrdq_gather_base_wb_z_u64
vldrdq_gather_base_z_s64
vldrdq_gather_base_z_u64
vldrdq_gather_offset
vldrdq_gather_offset_s64
vldrdq_gather_offset_u64
vldrdq_gather_offset_z
vldrdq_gather_offset_z_s64
vldrdq_gather_offset_z_u64
vldrdq_gather_shifted_offset
vldrdq_gather_shifted_offset_s64
vldrdq_gather_shifted_offset_u64
vldrdq_gather_shifted_offset_z
vldrdq_gather_shifted_offset_z_s64
vldrdq_gather_shifted_offset_z_u64
vldrhq_f16
vldrhq_gather_offset
vldrhq_gather_offset_f16
vldrhq_gather_offset_s16
vldrhq_gather_offset_s32
vldrhq_gather_offset_u16
vldrhq_gather_offset_u32
vldrhq_gather_offset_z
vldrhq_gather_offset_z_f16
vldrhq_gather_offset_z_s16
vldrhq_gather_offset_z_s32
vldrhq_gather_offset_z_u16
vldrhq_gather_offset_z_u32
vldrhq_gather_shifted_offset
vldrhq_gather_shifted_offset_f16
vldrhq_gather_shifted_offset_s16
vldrhq_gather_shifted_offset_s32
vldrhq_gather_shifted_offset_u16
vldrhq_gather_shifted_offset_u32
vldrhq_gather_shifted_offset_z
vldrhq_gather_shifted_offset_z_f16
vldrhq_gather_shifted_offset_z_s16
vldrhq_gather_shifted_offset_z_s32
vldrhq_gather_shifted_offset_z_u16
vldrhq_gather_shifted_offset_z_u32
vldrhq_s16
vldrhq_s32
vldrhq_u16
vldrhq_u32
vldrhq_z_f16
vldrhq_z_s16
vldrhq_z_s32
vldrhq_z_u16
vldrhq_z_u32
vldrwq_f32
vldrwq_gather_base_f32
vldrwq_gather_base_s32
vldrwq_gather_base_u32
vldrwq_gather_base_wb_f32
vldrwq_gather_base_wb_s32
vldrwq_gather_base_wb_u32
vldrwq_gather_base_wb_z_f32
vldrwq_gather_base_wb_z_s32
vldrwq_gather_base_wb_z_u32
vldrwq_gather_base_z_f32
vldrwq_gather_base_z_s32
vldrwq_gather_base_z_u32
vldrwq_gather_offset
vldrwq_gather_offset_f32
vldrwq_gather_offset_s32
vldrwq_gather_offset_u32
vldrwq_gather_offset_z
vldrwq_gather_offset_z_f32
vldrwq_gather_offset_z_s32
vldrwq_gather_offset_z_u32
vldrwq_gather_shifted_offset
vldrwq_gather_shifted_offset_f32
vldrwq_gather_shifted_offset_s32
vldrwq_gather_shifted_offset_u32
vldrwq_gather_shifted_offset_z
vldrwq_gather_shifted_offset_z_f32
vldrwq_gather_shifted_offset_z_s32
vldrwq_gather_shifted_offset_z_u32
vldrwq_s32
vldrwq_u32
vldrwq_z_f32
vldrwq_z_s32
vldrwq_z_u32
vmaxaq_m
vmaxaq_m_s16
vmaxaq_m_s32
vmaxaq_m_s8
vmaxaq
vmaxaq_s16
vmaxaq_s32
vmaxaq_s8
vmaxavq_p
vmaxavq_p_s16
vmaxavq_p_s32
vmaxavq_p_s8
vmaxavq
vmaxavq_s16
vmaxavq_s32
vmaxavq_s8
vmaxnmaq
vmaxnmaq_f16
vmaxnmaq_f32
vmaxnmaq_m
vmaxnmaq_m_f16
vmaxnmaq_m_f32
vmaxnmavq
vmaxnmavq_f16
vmaxnmavq_f32
vmaxnmavq_p
vmaxnmavq_p_f16
vmaxnmavq_p_f32
vmaxnmq
vmaxnmq_f16
vmaxnmq_f32
vmaxnmq_m
vmaxnmq_m_f16
vmaxnmq_m_f32
vmaxnmq_x
vmaxnmq_x_f16
vmaxnmq_x_f32
vmaxnmvq
vmaxnmvq_f16
vmaxnmvq_f32
vmaxnmvq_p
vmaxnmvq_p_f16
vmaxnmvq_p_f32
vmaxq_m
vmaxq_m_s16
vmaxq_m_s32
vmaxq_m_s8
vmaxq_m_u16
vmaxq_m_u32
vmaxq_m_u8
vmaxq
vmaxq_s16
vmaxq_s32
vmaxq_s8
vmaxq_u16
vmaxq_u32
vmaxq_u8
vmaxq_x
vmaxq_x_s16
vmaxq_x_s32
vmaxq_x_s8
vmaxq_x_u16
vmaxq_x_u32
vmaxq_x_u8
vmaxvq_p
vmaxvq_p_s16
vmaxvq_p_s32
vmaxvq_p_s8
vmaxvq_p_u16
vmaxvq_p_u32
vmaxvq_p_u8
vmaxvq
vmaxvq_s16
vmaxvq_s32
vmaxvq_s8
vmaxvq_u16
vmaxvq_u32
vmaxvq_u8
vminaq_m
vminaq_m_s16
vminaq_m_s32
vminaq_m_s8
vminaq
vminaq_s16
vminaq_s32
vminaq_s8
vminavq_p
vminavq_p_s16
vminavq_p_s32
vminavq_p_s8
vminavq
vminavq_s16
vminavq_s32
vminavq_s8
vminnmaq
vminnmaq_f16
vminnmaq_f32
vminnmaq_m
vminnmaq_m_f16
vminnmaq_m_f32
vminnmavq
vminnmavq_f16
vminnmavq_f32
vminnmavq_p
vminnmavq_p_f16
vminnmavq_p_f32
vminnmq
vminnmq_f16
vminnmq_f32
vminnmq_m
vminnmq_m_f16
vminnmq_m_f32
vminnmq_x
vminnmq_x_f16
vminnmq_x_f32
vminnmvq
vminnmvq_f16
vminnmvq_f32
vminnmvq_p
vminnmvq_p_f16
vminnmvq_p_f32
vminq_m
vminq_m_s16
vminq_m_s32
vminq_m_s8
vminq_m_u16
vminq_m_u32
vminq_m_u8
vminq
vminq_s16
vminq_s32
vminq_s8
vminq_u16
vminq_u32
vminq_u8
vminq_x
vminq_x_s16
vminq_x_s32
vminq_x_s8
vminq_x_u16
vminq_x_u32
vminq_x_u8
vminvq_p
vminvq_p_s16
vminvq_p_s32
vminvq_p_s8
vminvq_p_u16
vminvq_p_u32
vminvq_p_u8
vminvq
vminvq_s16
vminvq_s32
vminvq_s8
vminvq_u16
vminvq_u32
vminvq_u8
vmladavaq_p
vmladavaq_p_s16
vmladavaq_p_s32
vmladavaq_p_s8
vmladavaq_p_u16
vmladavaq_p_u32
vmladavaq_p_u8
vmladavaq
vmladavaq_s16
vmladavaq_s32
vmladavaq_s8
vmladavaq_u16
vmladavaq_u32
vmladavaq_u8
vmladavaxq_p
vmladavaxq_p_s16
vmladavaxq_p_s32
vmladavaxq_p_s8
vmladavaxq
vmladavaxq_s16
vmladavaxq_s32
vmladavaxq_s8
vmladavq_p
vmladavq_p_s16
vmladavq_p_s32
vmladavq_p_s8
vmladavq_p_u16
vmladavq_p_u32
vmladavq_p_u8
vmladavq
vmladavq_s16
vmladavq_s32
vmladavq_s8
vmladavq_u16
vmladavq_u32
vmladavq_u8
vmladavxq_p
vmladavxq_p_s16
vmladavxq_p_s32
vmladavxq_p_s8
vmladavxq
vmladavxq_s16
vmladavxq_s32
vmladavxq_s8
vmlaldavaq_p
vmlaldavaq_p_s16
vmlaldavaq_p_s32
vmlaldavaq_p_u16
vmlaldavaq_p_u32
vmlaldavaq
vmlaldavaq_s16
vmlaldavaq_s32
vmlaldavaq_u16
vmlaldavaq_u32
vmlaldavaxq_p
vmlaldavaxq_p_s16
vmlaldavaxq_p_s32
vmlaldavaxq
vmlaldavaxq_s16
vmlaldavaxq_s32
vmlaldavq_p
vmlaldavq_p_s16
vmlaldavq_p_s32
vmlaldavq_p_u16
vmlaldavq_p_u32
vmlaldavq
vmlaldavq_s16
vmlaldavq_s32
vmlaldavq_u16
vmlaldavq_u32
vmlaldavxq_p
vmlaldavxq_p_s16
vmlaldavxq_p_s32
vmlaldavxq
vmlaldavxq_s16
vmlaldavxq_s32
vmlaq_m
vmlaq_m_n_s16
vmlaq_m_n_s32
vmlaq_m_n_s8
vmlaq_m_n_u16
vmlaq_m_n_u32
vmlaq_m_n_u8
vmlaq
vmlaq_n_s16
vmlaq_n_s32
vmlaq_n_s8
vmlaq_n_u16
vmlaq_n_u32
vmlaq_n_u8
vmlasq_m
vmlasq_m_n_s16
vmlasq_m_n_s32
vmlasq_m_n_s8
vmlasq_m_n_u16
vmlasq_m_n_u32
vmlasq_m_n_u8
vmlasq
vmlasq_n_s16
vmlasq_n_s32
vmlasq_n_s8
vmlasq_n_u16
vmlasq_n_u32
vmlasq_n_u8
vmlsdavaq_p
vmlsdavaq_p_s16
vmlsdavaq_p_s32
vmlsdavaq_p_s8
vmlsdavaq
vmlsdavaq_s16
vmlsdavaq_s32
vmlsdavaq_s8
vmlsdavaxq_p
vmlsdavaxq_p_s16
vmlsdavaxq_p_s32
vmlsdavaxq_p_s8
vmlsdavaxq
vmlsdavaxq_s16
vmlsdavaxq_s32
vmlsdavaxq_s8
vmlsdavq_p
vmlsdavq_p_s16
vmlsdavq_p_s32
vmlsdavq_p_s8
vmlsdavq
vmlsdavq_s16
vmlsdavq_s32
vmlsdavq_s8
vmlsdavxq_p
vmlsdavxq_p_s16
vmlsdavxq_p_s32
vmlsdavxq_p_s8
vmlsdavxq
vmlsdavxq_s16
vmlsdavxq_s32
vmlsdavxq_s8
vmlsldavaq_p
vmlsldavaq_p_s16
vmlsldavaq_p_s32
vmlsldavaq
vmlsldavaq_s16
vmlsldavaq_s32
vmlsldavaxq_p
vmlsldavaxq_p_s16
vmlsldavaxq_p_s32
vmlsldavaxq
vmlsldavaxq_s16
vmlsldavaxq_s32
vmlsldavq_p
vmlsldavq_p_s16
vmlsldavq_p_s32
vmlsldavq
vmlsldavq_s16
vmlsldavq_s32
vmlsldavxq_p
vmlsldavxq_p_s16
vmlsldavxq_p_s32
vmlsldavxq
vmlsldavxq_s16
vmlsldavxq_s32
vmovlbq_m
vmovlbq_m_s16
vmovlbq_m_s8
vmovlbq_m_u16
vmovlbq_m_u8
vmovlbq
vmovlbq_s16
vmovlbq_s8
vmovlbq_u16
vmovlbq_u8
vmovlbq_x
vmovlbq_x_s16
vmovlbq_x_s8
vmovlbq_x_u16
vmovlbq_x_u8
vmovltq_m
vmovltq_m_s16
vmovltq_m_s8
vmovltq_m_u16
vmovltq_m_u8
vmovltq
vmovltq_s16
vmovltq_s8
vmovltq_u16
vmovltq_u8
vmovltq_x
vmovltq_x_s16
vmovltq_x_s8
vmovltq_x_u16
vmovltq_x_u8
vmovnbq_m
vmovnbq_m_s16
vmovnbq_m_s32
vmovnbq_m_u16
vmovnbq_m_u32
vmovnbq
vmovnbq_s16
vmovnbq_s32
vmovnbq_u16
vmovnbq_u32
vmovntq_m
vmovntq_m_s16
vmovntq_m_s32
vmovntq_m_u16
vmovntq_m_u32
vmovntq
vmovntq_s16
vmovntq_s32
vmovntq_u16
vmovntq_u32
vmulhq_m
vmulhq_m_s16
vmulhq_m_s32
vmulhq_m_s8
vmulhq_m_u16
vmulhq_m_u32
vmulhq_m_u8
vmulhq
vmulhq_s16
vmulhq_s32
vmulhq_s8
vmulhq_u16
vmulhq_u32
vmulhq_u8
vmulhq_x
vmulhq_x_s16
vmulhq_x_s32
vmulhq_x_s8
vmulhq_x_u16
vmulhq_x_u32
vmulhq_x_u8
vmullbq_int_m
vmullbq_int_m_s16
vmullbq_int_m_s32
vmullbq_int_m_s8
vmullbq_int_m_u16
vmullbq_int_m_u32
vmullbq_int_m_u8
vmullbq_int
vmullbq_int_s16
vmullbq_int_s32
vmullbq_int_s8
vmullbq_int_u16
vmullbq_int_u32
vmullbq_int_u8
vmullbq_int_x
vmullbq_int_x_s16
vmullbq_int_x_s32
vmullbq_int_x_s8
vmullbq_int_x_u16
vmullbq_int_x_u32
vmullbq_int_x_u8
vmullbq_poly_m
vmullbq_poly_m_p16
vmullbq_poly_m_p8
vmullbq_poly
vmullbq_poly_p16
vmullbq_poly_p8
vmullbq_poly_x
vmullbq_poly_x_p16
vmullbq_poly_x_p8
vmulltq_int_m
vmulltq_int_m_s16
vmulltq_int_m_s32
vmulltq_int_m_s8
vmulltq_int_m_u16
vmulltq_int_m_u32
vmulltq_int_m_u8
vmulltq_int
vmulltq_int_s16
vmulltq_int_s32
vmulltq_int_s8
vmulltq_int_u16
vmulltq_int_u32
vmulltq_int_u8
vmulltq_int_x
vmulltq_int_x_s16
vmulltq_int_x_s32
vmulltq_int_x_s8
vmulltq_int_x_u16
vmulltq_int_x_u32
vmulltq_int_x_u8
vmulltq_poly_m
vmulltq_poly_m_p16
vmulltq_poly_m_p8
vmulltq_poly
vmulltq_poly_p16
vmulltq_poly_p8
vmulltq_poly_x
vmulltq_poly_x_p16
vmulltq_poly_x_p8
vmulq
vmulq_f16
vmulq_f32
vmulq_m
vmulq_m_f16
vmulq_m_f32
vmulq_m_n_f16
vmulq_m_n_f32
vmulq_m_n_s16
vmulq_m_n_s32
vmulq_m_n_s8
vmulq_m_n_u16
vmulq_m_n_u32
vmulq_m_n_u8
vmulq_m_s16
vmulq_m_s32
vmulq_m_s8
vmulq_m_u16
vmulq_m_u32
vmulq_m_u8
vmulq_n_f16
vmulq_n_f32
vmulq_n_s16
vmulq_n_s32
vmulq_n_s8
vmulq_n_u16
vmulq_n_u32
vmulq_n_u8
vmulq_s16
vmulq_s32
vmulq_s8
vmulq_u16
vmulq_u32
vmulq_u8
vmulq_x
vmulq_x_f16
vmulq_x_f32
vmulq_x_n_f16
vmulq_x_n_f32
vmulq_x_n_s16
vmulq_x_n_s32
vmulq_x_n_s8
vmulq_x_n_u16
vmulq_x_n_u32
vmulq_x_n_u8
vmulq_x_s16
vmulq_x_s32
vmulq_x_s8
vmulq_x_u16
vmulq_x_u32
vmulq_x_u8
vmvnq_m
vmvnq_m_n_s16
vmvnq_m_n_s32
vmvnq_m_n_u16
vmvnq_m_n_u32
vmvnq_m_s16
vmvnq_m_s32
vmvnq_m_s8
vmvnq_m_u16
vmvnq_m_u32
vmvnq_m_u8
vmvnq_n_s16
vmvnq_n_s32
vmvnq_n_u16
vmvnq_n_u32
vmvnq
vmvnq_s16
vmvnq_s32
vmvnq_s8
vmvnq_u16
vmvnq_u32
vmvnq_u8
vmvnq_x_n_s16
vmvnq_x_n_s32
vmvnq_x_n_u16
vmvnq_x_n_u32
vmvnq_x
vmvnq_x_s16
vmvnq_x_s32
vmvnq_x_s8
vmvnq_x_u16
vmvnq_x_u32
vmvnq_x_u8
vnegq
vnegq_f16
vnegq_f32
vnegq_m
vnegq_m_f16
vnegq_m_f32
vnegq_m_s16
vnegq_m_s32
vnegq_m_s8
vnegq_s16
vnegq_s32
vnegq_s8
vnegq_x
vnegq_x_f16
vnegq_x_f32
vnegq_x_s16
vnegq_x_s32
vnegq_x_s8
vornq
vornq_f16
vornq_f32
vornq_m
vornq_m_f16
vornq_m_f32
vornq_m_s16
vornq_m_s32
vornq_m_s8
vornq_m_u16
vornq_m_u32
vornq_m_u8
vornq_s16
vornq_s32
vornq_s8
vornq_u16
vornq_u32
vornq_u8
vornq_x
vornq_x_f16
vornq_x_f32
vornq_x_s16
vornq_x_s32
vornq_x_s8
vornq_x_u16
vornq_x_u32
vornq_x_u8
vorrq
vorrq_f16
vorrq_f32
vorrq_m
vorrq_m_f16
vorrq_m_f32
vorrq_m_n
vorrq_m_n_s16
vorrq_m_n_s32
vorrq_m_n_u16
vorrq_m_n_u32
vorrq_m_s16
vorrq_m_s32
vorrq_m_s8
vorrq_m_u16
vorrq_m_u32
vorrq_m_u8
vorrq_n_s16
vorrq_n_s32
vorrq_n_u16
vorrq_n_u32
vorrq_s16
vorrq_s32
vorrq_s8
vorrq_u16
vorrq_u32
vorrq_u8
vorrq_x
vorrq_x_f16
vorrq_x_f32
vorrq_x_s16
vorrq_x_s32
vorrq_x_s8
vorrq_x_u16
vorrq_x_u32
vorrq_x_u8
vpnot
vpselq
vpselq_f16
vpselq_f32
vpselq_s16
vpselq_s32
vpselq_s64
vpselq_s8
vpselq_u16
vpselq_u32
vpselq_u64
vpselq_u8
vqabsq_m
vqabsq_m_s16
vqabsq_m_s32
vqabsq_m_s8
vqabsq
vqabsq_s16
vqabsq_s32
vqabsq_s8
vqaddq_m
vqaddq_m_n_s16
vqaddq_m_n_s32
vqaddq_m_n_s8
vqaddq_m_n_u16
vqaddq_m_n_u32
vqaddq_m_n_u8
vqaddq_m_s16
vqaddq_m_s32
vqaddq_m_s8
vqaddq_m_u16
vqaddq_m_u32
vqaddq_m_u8
vqaddq
vqaddq_n_s16
vqaddq_n_s32
vqaddq_n_s8
vqaddq_n_u16
vqaddq_n_u32
vqaddq_n_u8
vqaddq_s16
vqaddq_s32
vqaddq_s8
vqaddq_u16
vqaddq_u32
vqaddq_u8
vqdmladhq_m
vqdmladhq_m_s16
vqdmladhq_m_s32
vqdmladhq_m_s8
vqdmladhq
vqdmladhq_s16
vqdmladhq_s32
vqdmladhq_s8
vqdmladhxq_m
vqdmladhxq_m_s16
vqdmladhxq_m_s32
vqdmladhxq_m_s8
vqdmladhxq
vqdmladhxq_s16
vqdmladhxq_s32
vqdmladhxq_s8
vqdmlahq_m
vqdmlahq_m_n_s16
vqdmlahq_m_n_s32
vqdmlahq_m_n_s8
vqdmlahq
vqdmlahq_n_s16
vqdmlahq_n_s32
vqdmlahq_n_s8
vqdmlashq_m
vqdmlashq_m_n_s16
vqdmlashq_m_n_s32
vqdmlashq_m_n_s8
vqdmlashq
vqdmlashq_n_s16
vqdmlashq_n_s32
vqdmlashq_n_s8
vqdmlsdhq_m
vqdmlsdhq_m_s16
vqdmlsdhq_m_s32
vqdmlsdhq_m_s8
vqdmlsdhq
vqdmlsdhq_s16
vqdmlsdhq_s32
vqdmlsdhq_s8
vqdmlsdhxq_m
vqdmlsdhxq_m_s16
vqdmlsdhxq_m_s32
vqdmlsdhxq_m_s8
vqdmlsdhxq
vqdmlsdhxq_s16
vqdmlsdhxq_s32
vqdmlsdhxq_s8
vqdmulhq_m
vqdmulhq_m_n_s16
vqdmulhq_m_n_s32
vqdmulhq_m_n_s8
vqdmulhq_m_s16
vqdmulhq_m_s32
vqdmulhq_m_s8
vqdmulhq
vqdmulhq_n_s16
vqdmulhq_n_s32
vqdmulhq_n_s8
vqdmulhq_s16
vqdmulhq_s32
vqdmulhq_s8
vqdmullbq_m
vqdmullbq_m_n_s16
vqdmullbq_m_n_s32
vqdmullbq_m_s16
vqdmullbq_m_s32
vqdmullbq
vqdmullbq_n_s16
vqdmullbq_n_s32
vqdmullbq_s16
vqdmullbq_s32
vqdmulltq_m
vqdmulltq_m_n_s16
vqdmulltq_m_n_s32
vqdmulltq_m_s16
vqdmulltq_m_s32
vqdmulltq
vqdmulltq_n_s16
vqdmulltq_n_s32
vqdmulltq_s16
vqdmulltq_s32
vqmovnbq_m
vqmovnbq_m_s16
vqmovnbq_m_s32
vqmovnbq_m_u16
vqmovnbq_m_u32
vqmovnbq
vqmovnbq_s16
vqmovnbq_s32
vqmovnbq_u16
vqmovnbq_u32
vqmovntq_m
vqmovntq_m_s16
vqmovntq_m_s32
vqmovntq_m_u16
vqmovntq_m_u32
vqmovntq
vqmovntq_s16
vqmovntq_s32
vqmovntq_u16
vqmovntq_u32
vqmovunbq_m
vqmovunbq_m_s16
vqmovunbq_m_s32
vqmovunbq
vqmovunbq_s16
vqmovunbq_s32
vqmovuntq_m
vqmovuntq_m_s16
vqmovuntq_m_s32
vqmovuntq
vqmovuntq_s16
vqmovuntq_s32
vqnegq_m
vqnegq_m_s16
vqnegq_m_s32
vqnegq_m_s8
vqnegq
vqnegq_s16
vqnegq_s32
vqnegq_s8
vqrdmladhq_m
vqrdmladhq_m_s16
vqrdmladhq_m_s32
vqrdmladhq_m_s8
vqrdmladhq
vqrdmladhq_s16
vqrdmladhq_s32
vqrdmladhq_s8
vqrdmladhxq_m
vqrdmladhxq_m_s16
vqrdmladhxq_m_s32
vqrdmladhxq_m_s8
vqrdmladhxq
vqrdmladhxq_s16
vqrdmladhxq_s32
vqrdmladhxq_s8
vqrdmlahq_m
vqrdmlahq_m_n_s16
vqrdmlahq_m_n_s32
vqrdmlahq_m_n_s8
vqrdmlahq
vqrdmlahq_n_s16
vqrdmlahq_n_s32
vqrdmlahq_n_s8
vqrdmlashq_m
vqrdmlashq_m_n_s16
vqrdmlashq_m_n_s32
vqrdmlashq_m_n_s8
vqrdmlashq
vqrdmlashq_n_s16
vqrdmlashq_n_s32
vqrdmlashq_n_s8
vqrdmlsdhq_m
vqrdmlsdhq_m_s16
vqrdmlsdhq_m_s32
vqrdmlsdhq_m_s8
vqrdmlsdhq
vqrdmlsdhq_s16
vqrdmlsdhq_s32
vqrdmlsdhq_s8
vqrdmlsdhxq_m
vqrdmlsdhxq_m_s16
vqrdmlsdhxq_m_s32
vqrdmlsdhxq_m_s8
vqrdmlsdhxq
vqrdmlsdhxq_s16
vqrdmlsdhxq_s32
vqrdmlsdhxq_s8
vqrdmulhq_m
vqrdmulhq_m_n_s16
vqrdmulhq_m_n_s32
vqrdmulhq_m_n_s8
vqrdmulhq_m_s16
vqrdmulhq_m_s32
vqrdmulhq_m_s8
vqrdmulhq
vqrdmulhq_n_s16
vqrdmulhq_n_s32
vqrdmulhq_n_s8
vqrdmulhq_s16
vqrdmulhq_s32
vqrdmulhq_s8
vqrshlq_m_n
vqrshlq_m_n_s16
vqrshlq_m_n_s32
vqrshlq_m_n_s8
vqrshlq_m_n_u16
vqrshlq_m_n_u32
vqrshlq_m_n_u8
vqrshlq_m
vqrshlq_m_s16
vqrshlq_m_s32
vqrshlq_m_s8
vqrshlq_m_u16
vqrshlq_m_u32
vqrshlq_m_u8
vqrshlq
vqrshlq_n_s16
vqrshlq_n_s32
vqrshlq_n_s8
vqrshlq_n_u16
vqrshlq_n_u32
vqrshlq_n_u8
vqrshlq_s16
vqrshlq_s32
vqrshlq_s8
vqrshlq_u16
vqrshlq_u32
vqrshlq_u8
vqrshrnbq_m
vqrshrnbq_m_n_s16
vqrshrnbq_m_n_s32
vqrshrnbq_m_n_u16
vqrshrnbq_m_n_u32
vqrshrnbq
vqrshrnbq_n_s16
vqrshrnbq_n_s32
vqrshrnbq_n_u16
vqrshrnbq_n_u32
vqrshrntq_m
vqrshrntq_m_n_s16
vqrshrntq_m_n_s32
vqrshrntq_m_n_u16
vqrshrntq_m_n_u32
vqrshrntq
vqrshrntq_n_s16
vqrshrntq_n_s32
vqrshrntq_n_u16
vqrshrntq_n_u32
vqrshrunbq_m
vqrshrunbq_m_n_s16
vqrshrunbq_m_n_s32
vqrshrunbq
vqrshrunbq_n_s16
vqrshrunbq_n_s32
vqrshruntq_m
vqrshruntq_m_n_s16
vqrshruntq_m_n_s32
vqrshruntq
vqrshruntq_n_s16
vqrshruntq_n_s32
vqshlq_m_n
vqshlq_m_n_s16
vqshlq_m_n_s32
vqshlq_m_n_s8
vqshlq_m_n_u16
vqshlq_m_n_u32
vqshlq_m_n_u8
vqshlq_m_r
vqshlq_m_r_s16
vqshlq_m_r_s32
vqshlq_m_r_s8
vqshlq_m_r_u16
vqshlq_m_r_u32
vqshlq_m_r_u8
vqshlq_m
vqshlq_m_s16
vqshlq_m_s32
vqshlq_m_s8
vqshlq_m_u16
vqshlq_m_u32
vqshlq_m_u8
vqshlq_n
vqshlq_n_s16
vqshlq_n_s32
vqshlq_n_s8
vqshlq_n_u16
vqshlq_n_u32
vqshlq_n_u8
vqshlq_r
vqshlq_r_s16
vqshlq_r_s32
vqshlq_r_s8
vqshlq_r_u16
vqshlq_r_u32
vqshlq_r_u8
vqshlq
vqshlq_s16
vqshlq_s32
vqshlq_s8
vqshlq_u16
vqshlq_u32
vqshlq_u8
vqshluq_m
vqshluq_m_n_s16
vqshluq_m_n_s32
vqshluq_m_n_s8
vqshluq
vqshluq_n_s16
vqshluq_n_s32
vqshluq_n_s8
vqshrnbq_m
vqshrnbq_m_n_s16
vqshrnbq_m_n_s32
vqshrnbq_m_n_u16
vqshrnbq_m_n_u32
vqshrnbq
vqshrnbq_n_s16
vqshrnbq_n_s32
vqshrnbq_n_u16
vqshrnbq_n_u32
vqshrntq_m
vqshrntq_m_n_s16
vqshrntq_m_n_s32
vqshrntq_m_n_u16
vqshrntq_m_n_u32
vqshrntq
vqshrntq_n_s16
vqshrntq_n_s32
vqshrntq_n_u16
vqshrntq_n_u32
vqshrunbq_m
vqshrunbq_m_n_s16
vqshrunbq_m_n_s32
vqshrunbq
vqshrunbq_n_s16
vqshrunbq_n_s32
vqshruntq_m
vqshruntq_m_n_s16
vqshruntq_m_n_s32
vqshruntq
vqshruntq_n_s16
vqshruntq_n_s32
vqsubq_m
vqsubq_m_n_s16
vqsubq_m_n_s32
vqsubq_m_n_s8
vqsubq_m_n_u16
vqsubq_m_n_u32
vqsubq_m_n_u8
vqsubq_m_s16
vqsubq_m_s32
vqsubq_m_s8
vqsubq_m_u16
vqsubq_m_u32
vqsubq_m_u8
vqsubq
vqsubq_n_s16
vqsubq_n_s32
vqsubq_n_s8
vqsubq_n_u16
vqsubq_n_u32
vqsubq_n_u8
vqsubq_s16
vqsubq_s32
vqsubq_s8
vqsubq_u16
vqsubq_u32
vqsubq_u8
vreinterpretq_f16
vreinterpretq_f16_f32
vreinterpretq_f16_s16
vreinterpretq_f16_s32
vreinterpretq_f16_s64
vreinterpretq_f16_s8
vreinterpretq_f16_u16
vreinterpretq_f16_u32
vreinterpretq_f16_u64
vreinterpretq_f16_u8
vreinterpretq_f32
vreinterpretq_f32_f16
vreinterpretq_f32_s16
vreinterpretq_f32_s32
vreinterpretq_f32_s64
vreinterpretq_f32_s8
vreinterpretq_f32_u16
vreinterpretq_f32_u32
vreinterpretq_f32_u64
vreinterpretq_f32_u8
vreinterpretq_s16
vreinterpretq_s16_f16
vreinterpretq_s16_f32
vreinterpretq_s16_s32
vreinterpretq_s16_s64
vreinterpretq_s16_s8
vreinterpretq_s16_u16
vreinterpretq_s16_u32
vreinterpretq_s16_u64
vreinterpretq_s16_u8
vreinterpretq_s32
vreinterpretq_s32_f16
vreinterpretq_s32_f32
vreinterpretq_s32_s16
vreinterpretq_s32_s64
vreinterpretq_s32_s8
vreinterpretq_s32_u16
vreinterpretq_s32_u32
vreinterpretq_s32_u64
vreinterpretq_s32_u8
vreinterpretq_s64
vreinterpretq_s64_f16
vreinterpretq_s64_f32
vreinterpretq_s64_s16
vreinterpretq_s64_s32
vreinterpretq_s64_s8
vreinterpretq_s64_u16
vreinterpretq_s64_u32
vreinterpretq_s64_u64
vreinterpretq_s64_u8
vreinterpretq_s8
vreinterpretq_s8_f16
vreinterpretq_s8_f32
vreinterpretq_s8_s16
vreinterpretq_s8_s32
vreinterpretq_s8_s64
vreinterpretq_s8_u16
vreinterpretq_s8_u32
vreinterpretq_s8_u64
vreinterpretq_s8_u8
vreinterpretq_u16
vreinterpretq_u16_f16
vreinterpretq_u16_f32
vreinterpretq_u16_s16
vreinterpretq_u16_s32
vreinterpretq_u16_s64
vreinterpretq_u16_s8
vreinterpretq_u16_u32
vreinterpretq_u16_u64
vreinterpretq_u16_u8
vreinterpretq_u32
vreinterpretq_u32_f16
vreinterpretq_u32_f32
vreinterpretq_u32_s16
vreinterpretq_u32_s32
vreinterpretq_u32_s64
vreinterpretq_u32_s8
vreinterpretq_u32_u16
vreinterpretq_u32_u64
vreinterpretq_u32_u8
vreinterpretq_u64
vreinterpretq_u64_f16
vreinterpretq_u64_f32
vreinterpretq_u64_s16
vreinterpretq_u64_s32
vreinterpretq_u64_s64
vreinterpretq_u64_s8
vreinterpretq_u64_u16
vreinterpretq_u64_u32
vreinterpretq_u64_u8
vreinterpretq_u8
vreinterpretq_u8_f16
vreinterpretq_u8_f32
vreinterpretq_u8_s16
vreinterpretq_u8_s32
vreinterpretq_u8_s64
vreinterpretq_u8_s8
vreinterpretq_u8_u16
vreinterpretq_u8_u32
vreinterpretq_u8_u64
vrev16q_m
vrev16q_m_s8
vrev16q_m_u8
vrev16q
vrev16q_s8
vrev16q_u8
vrev16q_x
vrev16q_x_s8
vrev16q_x_u8
vrev32q
vrev32q_f16
vrev32q_m
vrev32q_m_f16
vrev32q_m_s16
vrev32q_m_s8
vrev32q_m_u16
vrev32q_m_u8
vrev32q_s16
vrev32q_s8
vrev32q_u16
vrev32q_u8
vrev32q_x
vrev32q_x_f16
vrev32q_x_s16
vrev32q_x_s8
vrev32q_x_u16
vrev32q_x_u8
vrev64q
vrev64q_f16
vrev64q_f32
vrev64q_m
vrev64q_m_f16
vrev64q_m_f32
vrev64q_m_s16
vrev64q_m_s32
vrev64q_m_s8
vrev64q_m_u16
vrev64q_m_u32
vrev64q_m_u8
vrev64q_s16
vrev64q_s32
vrev64q_s8
vrev64q_u16
vrev64q_u32
vrev64q_u8
vrev64q_x
vrev64q_x_f16
vrev64q_x_f32
vrev64q_x_s16
vrev64q_x_s32
vrev64q_x_s8
vrev64q_x_u16
vrev64q_x_u32
vrev64q_x_u8
vrhaddq_m
vrhaddq_m_s16
vrhaddq_m_s32
vrhaddq_m_s8
vrhaddq_m_u16
vrhaddq_m_u32
vrhaddq_m_u8
vrhaddq
vrhaddq_s16
vrhaddq_s32
vrhaddq_s8
vrhaddq_u16
vrhaddq_u32
vrhaddq_u8
vrhaddq_x
vrhaddq_x_s16
vrhaddq_x_s32
vrhaddq_x_s8
vrhaddq_x_u16
vrhaddq_x_u32
vrhaddq_x_u8
vrmlaldavhaq_p
vrmlaldavhaq_p_s32
vrmlaldavhaq_p_u32
vrmlaldavhaq
vrmlaldavhaq_s32
vrmlaldavhaq_u32
vrmlaldavhaxq_p
vrmlaldavhaxq_p_s32
vrmlaldavhaxq
vrmlaldavhaxq_s32
vrmlaldavhq_p
vrmlaldavhq_p_s32
vrmlaldavhq_p_u32
vrmlaldavhq
vrmlaldavhq_s32
vrmlaldavhq_u32
vrmlaldavhxq_p
vrmlaldavhxq_p_s32
vrmlaldavhxq
vrmlaldavhxq_s32
vrmlsldavhaq_p
vrmlsldavhaq_p_s32
vrmlsldavhaq
vrmlsldavhaq_s32
vrmlsldavhaxq_p
vrmlsldavhaxq_p_s32
vrmlsldavhaxq
vrmlsldavhaxq_s32
vrmlsldavhq_p
vrmlsldavhq_p_s32
vrmlsldavhq
vrmlsldavhq_s32
vrmlsldavhxq_p
vrmlsldavhxq_p_s32
vrmlsldavhxq
vrmlsldavhxq_s32
vrmulhq_m
vrmulhq_m_s16
vrmulhq_m_s32
vrmulhq_m_s8
vrmulhq_m_u16
vrmulhq_m_u32
vrmulhq_m_u8
vrmulhq
vrmulhq_s16
vrmulhq_s32
vrmulhq_s8
vrmulhq_u16
vrmulhq_u32
vrmulhq_u8
vrmulhq_x
vrmulhq_x_s16
vrmulhq_x_s32
vrmulhq_x_s8
vrmulhq_x_u16
vrmulhq_x_u32
vrmulhq_x_u8
vrndaq
vrndaq_f16
vrndaq_f32
vrndaq_m
vrndaq_m_f16
vrndaq_m_f32
vrndaq_x
vrndaq_x_f16
vrndaq_x_f32
vrndmq
vrndmq_f16
vrndmq_f32
vrndmq_m
vrndmq_m_f16
vrndmq_m_f32
vrndmq_x
vrndmq_x_f16
vrndmq_x_f32
vrndnq
vrndnq_f16
vrndnq_f32
vrndnq_m
vrndnq_m_f16
vrndnq_m_f32
vrndnq_x
vrndnq_x_f16
vrndnq_x_f32
vrndpq
vrndpq_f16
vrndpq_f32
vrndpq_m
vrndpq_m_f16
vrndpq_m_f32
vrndpq_x
vrndpq_x_f16
vrndpq_x_f32
vrndq
vrndq_f16
vrndq_f32
vrndq_m
vrndq_m_f16
vrndq_m_f32
vrndq_x
vrndq_x_f16
vrndq_x_f32
vrndxq
vrndxq_f16
vrndxq_f32
vrndxq_m
vrndxq_m_f16
vrndxq_m_f32
vrndxq_x
vrndxq_x_f16
vrndxq_x_f32
vrshlq_m_n
vrshlq_m_n_s16
vrshlq_m_n_s32
vrshlq_m_n_s8
vrshlq_m_n_u16
vrshlq_m_n_u32
vrshlq_m_n_u8
vrshlq_m
vrshlq_m_s16
vrshlq_m_s32
vrshlq_m_s8
vrshlq_m_u16
vrshlq_m_u32
vrshlq_m_u8
vrshlq
vrshlq_n_s16
vrshlq_n_s32
vrshlq_n_s8
vrshlq_n_u16
vrshlq_n_u32
vrshlq_n_u8
vrshlq_s16
vrshlq_s32
vrshlq_s8
vrshlq_u16
vrshlq_u32
vrshlq_u8
vrshlq_x
vrshlq_x_s16
vrshlq_x_s32
vrshlq_x_s8
vrshlq_x_u16
vrshlq_x_u32
vrshlq_x_u8
vrshrnbq_m
vrshrnbq_m_n_s16
vrshrnbq_m_n_s32
vrshrnbq_m_n_u16
vrshrnbq_m_n_u32
vrshrnbq
vrshrnbq_n_s16
vrshrnbq_n_s32
vrshrnbq_n_u16
vrshrnbq_n_u32
vrshrntq_m
vrshrntq_m_n_s16
vrshrntq_m_n_s32
vrshrntq_m_n_u16
vrshrntq_m_n_u32
vrshrntq
vrshrntq_n_s16
vrshrntq_n_s32
vrshrntq_n_u16
vrshrntq_n_u32
vrshrq_m
vrshrq_m_n_s16
vrshrq_m_n_s32
vrshrq_m_n_s8
vrshrq_m_n_u16
vrshrq_m_n_u32
vrshrq_m_n_u8
vrshrq
vrshrq_n_s16
vrshrq_n_s32
vrshrq_n_s8
vrshrq_n_u16
vrshrq_n_u32
vrshrq_n_u8
vrshrq_x
vrshrq_x_n_s16
vrshrq_x_n_s32
vrshrq_x_n_s8
vrshrq_x_n_u16
vrshrq_x_n_u32
vrshrq_x_n_u8
vsbciq_m
vsbciq_m_s32
vsbciq_m_u32
vsbciq
vsbciq_s32
vsbciq_u32
vsbcq_m
vsbcq_m_s32
vsbcq_m_u32
vsbcq
vsbcq_s32
vsbcq_u32
vsetq_lane
vsetq_lane_f16
vsetq_lane_f32
vsetq_lane_s16
vsetq_lane_s32
vsetq_lane_s64
vsetq_lane_s8
vsetq_lane_u16
vsetq_lane_u32
vsetq_lane_u64
vsetq_lane_u8
vshlcq_m
vshlcq_m_s16
vshlcq_m_s32
vshlcq_m_s8
vshlcq_m_u16
vshlcq_m_u32
vshlcq_m_u8
vshlcq
vshlcq_s16
vshlcq_s32
vshlcq_s8
vshlcq_u16
vshlcq_u32
vshlcq_u8
vshllbq_m
vshllbq_m_n_s16
vshllbq_m_n_s8
vshllbq_m_n_u16
vshllbq_m_n_u8
vshllbq
vshllbq_n_s16
vshllbq_n_s8
vshllbq_n_u16
vshllbq_n_u8
vshllbq_x
vshllbq_x_n_s16
vshllbq_x_n_s8
vshllbq_x_n_u16
vshllbq_x_n_u8
vshlltq_m
vshlltq_m_n_s16
vshlltq_m_n_s8
vshlltq_m_n_u16
vshlltq_m_n_u8
vshlltq
vshlltq_n_s16
vshlltq_n_s8
vshlltq_n_u16
vshlltq_n_u8
vshlltq_x
vshlltq_x_n_s16
vshlltq_x_n_s8
vshlltq_x_n_u16
vshlltq_x_n_u8
vshlq_m_n
vshlq_m_n_s16
vshlq_m_n_s32
vshlq_m_n_s8
vshlq_m_n_u16
vshlq_m_n_u32
vshlq_m_n_u8
vshlq_m_r
vshlq_m_r_s16
vshlq_m_r_s32
vshlq_m_r_s8
vshlq_m_r_u16
vshlq_m_r_u32
vshlq_m_r_u8
vshlq_m
vshlq_m_s16
vshlq_m_s32
vshlq_m_s8
vshlq_m_u16
vshlq_m_u32
vshlq_m_u8
vshlq_n
vshlq_n_s16
vshlq_n_s32
vshlq_n_s8
vshlq_n_u16
vshlq_n_u32
vshlq_n_u8
vshlq_r
vshlq_r_s16
vshlq_r_s32
vshlq_r_s8
vshlq_r_u16
vshlq_r_u32
vshlq_r_u8
vshlq
vshlq_s16
vshlq_s32
vshlq_s8
vshlq_u16
vshlq_u32
vshlq_u8
vshlq_x_n
vshlq_x_n_s16
vshlq_x_n_s32
vshlq_x_n_s8
vshlq_x_n_u16
vshlq_x_n_u32
vshlq_x_n_u8
vshlq_x
vshlq_x_s16
vshlq_x_s32
vshlq_x_s8
vshlq_x_u16
vshlq_x_u32
vshlq_x_u8
vshrnbq_m
vshrnbq_m_n_s16
vshrnbq_m_n_s32
vshrnbq_m_n_u16
vshrnbq_m_n_u32
vshrnbq
vshrnbq_n_s16
vshrnbq_n_s32
vshrnbq_n_u16
vshrnbq_n_u32
vshrntq_m
vshrntq_m_n_s16
vshrntq_m_n_s32
vshrntq_m_n_u16
vshrntq_m_n_u32
vshrntq
vshrntq_n_s16
vshrntq_n_s32
vshrntq_n_u16
vshrntq_n_u32
vshrq_m
vshrq_m_n_s16
vshrq_m_n_s32
vshrq_m_n_s8
vshrq_m_n_u16
vshrq_m_n_u32
vshrq_m_n_u8
vshrq
vshrq_n_s16
vshrq_n_s32
vshrq_n_s8
vshrq_n_u16
vshrq_n_u32
vshrq_n_u8
vshrq_x
vshrq_x_n_s16
vshrq_x_n_s32
vshrq_x_n_s8
vshrq_x_n_u16
vshrq_x_n_u32
vshrq_x_n_u8
vsliq_m
vsliq_m_n_s16
vsliq_m_n_s32
vsliq_m_n_s8
vsliq_m_n_u16
vsliq_m_n_u32
vsliq_m_n_u8
vsliq
vsliq_n_s16
vsliq_n_s32
vsliq_n_s8
vsliq_n_u16
vsliq_n_u32
vsliq_n_u8
vsriq_m
vsriq_m_n_s16
vsriq_m_n_s32
vsriq_m_n_s8
vsriq_m_n_u16
vsriq_m_n_u32
vsriq_m_n_u8
vsriq
vsriq_n_s16
vsriq_n_s32
vsriq_n_s8
vsriq_n_u16
vsriq_n_u32
vsriq_n_u8
vst1q
vst1q_f16
vst1q_f32
vst1q_p
vst1q_p_f16
vst1q_p_f32
vst1q_p_s16
vst1q_p_s32
vst1q_p_s8
vst1q_p_u16
vst1q_p_u32
vst1q_p_u8
vst1q_s16
vst1q_s32
vst1q_s8
vst1q_u16
vst1q_u32
vst1q_u8
vst2q
vst2q_f16
vst2q_f32
vst2q_s16
vst2q_s32
vst2q_s8
vst2q_u16
vst2q_u32
vst2q_u8
vst4q
vst4q_f16
vst4q_f32
vst4q_s16
vst4q_s32
vst4q_s8
vst4q_u16
vst4q_u32
vst4q_u8
vstrbq_p
vstrbq_p_s16
vstrbq_p_s32
vstrbq_p_s8
vstrbq_p_u16
vstrbq_p_u32
vstrbq_p_u8
vstrbq
vstrbq_s16
vstrbq_s32
vstrbq_s8
vstrbq_scatter_offset_p
vstrbq_scatter_offset_p_s16
vstrbq_scatter_offset_p_s32
vstrbq_scatter_offset_p_s8
vstrbq_scatter_offset_p_u16
vstrbq_scatter_offset_p_u32
vstrbq_scatter_offset_p_u8
vstrbq_scatter_offset
vstrbq_scatter_offset_s16
vstrbq_scatter_offset_s32
vstrbq_scatter_offset_s8
vstrbq_scatter_offset_u16
vstrbq_scatter_offset_u32
vstrbq_scatter_offset_u8
vstrbq_u16
vstrbq_u32
vstrbq_u8
vstrdq_scatter_base_p
vstrdq_scatter_base_p_s64
vstrdq_scatter_base_p_u64
vstrdq_scatter_base
vstrdq_scatter_base_s64
vstrdq_scatter_base_u64
vstrdq_scatter_base_wb_p
vstrdq_scatter_base_wb_p_s64
vstrdq_scatter_base_wb_p_u64
vstrdq_scatter_base_wb
vstrdq_scatter_base_wb_s64
vstrdq_scatter_base_wb_u64
vstrdq_scatter_offset_p
vstrdq_scatter_offset_p_s64
vstrdq_scatter_offset_p_u64
vstrdq_scatter_offset
vstrdq_scatter_offset_s64
vstrdq_scatter_offset_u64
vstrdq_scatter_shifted_offset_p
vstrdq_scatter_shifted_offset_p_s64
vstrdq_scatter_shifted_offset_p_u64
vstrdq_scatter_shifted_offset
vstrdq_scatter_shifted_offset_s64
vstrdq_scatter_shifted_offset_u64
vstrhq
vstrhq_f16
vstrhq_p
vstrhq_p_f16
vstrhq_p_s16
vstrhq_p_s32
vstrhq_p_u16
vstrhq_p_u32
vstrhq_s16
vstrhq_s32
vstrhq_scatter_offset
vstrhq_scatter_offset_f16
vstrhq_scatter_offset_p
vstrhq_scatter_offset_p_f16
vstrhq_scatter_offset_p_s16
vstrhq_scatter_offset_p_s32
vstrhq_scatter_offset_p_u16
vstrhq_scatter_offset_p_u32
vstrhq_scatter_offset_s16
vstrhq_scatter_offset_s32
vstrhq_scatter_offset_u16
vstrhq_scatter_offset_u32
vstrhq_scatter_shifted_offset
vstrhq_scatter_shifted_offset_f16
vstrhq_scatter_shifted_offset_p
vstrhq_scatter_shifted_offset_p_f16
vstrhq_scatter_shifted_offset_p_s16
vstrhq_scatter_shifted_offset_p_s32
vstrhq_scatter_shifted_offset_p_u16
vstrhq_scatter_shifted_offset_p_u32
vstrhq_scatter_shifted_offset_s16
vstrhq_scatter_shifted_offset_s32
vstrhq_scatter_shifted_offset_u16
vstrhq_scatter_shifted_offset_u32
vstrhq_u16
vstrhq_u32
vstrwq
vstrwq_f32
vstrwq_p
vstrwq_p_f32
vstrwq_p_s32
vstrwq_p_u32
vstrwq_s32
vstrwq_scatter_base
vstrwq_scatter_base_f32
vstrwq_scatter_base_p
vstrwq_scatter_base_p_f32
vstrwq_scatter_base_p_s32
vstrwq_scatter_base_p_u32
vstrwq_scatter_base_s32
vstrwq_scatter_base_u32
vstrwq_scatter_base_wb
vstrwq_scatter_base_wb_f32
vstrwq_scatter_base_wb_p
vstrwq_scatter_base_wb_p_f32
vstrwq_scatter_base_wb_p_s32
vstrwq_scatter_base_wb_p_u32
vstrwq_scatter_base_wb_s32
vstrwq_scatter_base_wb_u32
vstrwq_scatter_offset
vstrwq_scatter_offset_f32
vstrwq_scatter_offset_p
vstrwq_scatter_offset_p_f32
vstrwq_scatter_offset_p_s32
vstrwq_scatter_offset_p_u32
vstrwq_scatter_offset_s32
vstrwq_scatter_offset_u32
vstrwq_scatter_shifted_offset
vstrwq_scatter_shifted_offset_f32
vstrwq_scatter_shifted_offset_p
vstrwq_scatter_shifted_offset_p_f32
vstrwq_scatter_shifted_offset_p_s32
vstrwq_scatter_shifted_offset_p_u32
vstrwq_scatter_shifted_offset_s32
vstrwq_scatter_shifted_offset_u32
vstrwq_u32
vsubq
vsubq_f16
vsubq_f32
vsubq_m
vsubq_m_f16
vsubq_m_f32
vsubq_m_n_f16
vsubq_m_n_f32
vsubq_m_n_s16
vsubq_m_n_s32
vsubq_m_n_s8
vsubq_m_n_u16
vsubq_m_n_u32
vsubq_m_n_u8
vsubq_m_s16
vsubq_m_s32
vsubq_m_s8
vsubq_m_u16
vsubq_m_u32
vsubq_m_u8
vsubq_n_f16
vsubq_n_f32
vsubq_n_s16
vsubq_n_s32
vsubq_n_s8
vsubq_n_u16
vsubq_n_u32
vsubq_n_u8
vsubq_s16
vsubq_s32
vsubq_s8
vsubq_u16
vsubq_u32
vsubq_u8
vsubq_x
vsubq_x_f16
vsubq_x_f32
vsubq_x_n_f16
vsubq_x_n_f32
vsubq_x_n_s16
vsubq_x_n_s32
vsubq_x_n_s8
vsubq_x_n_u16
vsubq_x_n_u32
vsubq_x_n_u8
vsubq_x_s16
vsubq_x_s32
vsubq_x_s8
vsubq_x_u16
vsubq_x_u32
vsubq_x_u8
vuninitializedq_f16
vuninitializedq_f32
vuninitializedq
vuninitializedq_polymorphic_f16
vuninitializedq_polymorphic_f32
vuninitializedq_polymorphic_s16
vuninitializedq_polymorphic_s32
vuninitializedq_polymorphic_s64
vuninitializedq_polymorphic_s8
vuninitializedq_polymorphic_u16
vuninitializedq_polymorphic_u32
vuninitializedq_polymorphic_u64
vuninitializedq_polymorphic_u8
vuninitializedq_s16
vuninitializedq_s32
vuninitializedq_s64
vuninitializedq_s8
vuninitializedq_u16
vuninitializedq_u32
vuninitializedq_u64
vuninitializedq_u8
cx1a
cx1d
cx1da
cx2a
cx2d
cx2da
cx3a
cx3d
cx3da
vcx1_u32
vcx1a_u32
vcx1d_u64
vcx1da_u64
vcx1q_m
vcx1q_m_f16
vcx1q_m_f32
vcx1q_m_s16
vcx1q_m_s32
vcx1q_m_s64
vcx1q_m_s8
vcx1q_m_u16
vcx1q_m_u32
vcx1q_m_u64
vcx1q_m_u8
vcx1q_u8
vcx1qa
vcx1qa_f16
vcx1qa_f32
vcx1qa_m
vcx1qa_m_f16
vcx1qa_m_f32
vcx1qa_m_s16
vcx1qa_m_s32
vcx1qa_m_s64
vcx1qa_m_s8
vcx1qa_m_u16
vcx1qa_m_u32
vcx1qa_m_u64
vcx1qa_m_u8
vcx1qa_s16
vcx1qa_s32
vcx1qa_s64
vcx1qa_s8
vcx1qa_u16
vcx1qa_u32
vcx1qa_u64
vcx1qa_u8
vcx2_u32
vcx2a_u32
vcx2d_u64
vcx2da_u64
vcx2q
vcx2q_f16
vcx2q_f32
vcx2q_m_impl
vcx2q_m_impl_f16
vcx2q_m_impl_f32
vcx2q_m_impl_s16
vcx2q_m_impl_s32
vcx2q_m_impl_s64
vcx2q_m_impl_s8
vcx2q_m_impl_u16
vcx2q_m_impl_u32
vcx2q_m_impl_u64
vcx2q_m_impl_u8
vcx2q_s16
vcx2q_s32
vcx2q_s64
vcx2q_s8
vcx2q_u16
vcx2q_u32
vcx2q_u64
vcx2q_u8
vcx2q_u8_f16
vcx2q_u8_f32
vcx2q_u8_s16
vcx2q_u8_s32
vcx2q_u8_s64
vcx2q_u8_s8
vcx2q_u8_u16
vcx2q_u8_u32
vcx2q_u8_u64
vcx2q_u8_u8
vcx2qa_impl
vcx2qa_impl_f16
vcx2qa_impl_f32
vcx2qa_impl_s16
vcx2qa_impl_s32
vcx2qa_impl_s64
vcx2qa_impl_s8
vcx2qa_impl_u16
vcx2qa_impl_u32
vcx2qa_impl_u64
vcx2qa_impl_u8
vcx2qa_m_impl
vcx2qa_m_impl_f16
vcx2qa_m_impl_f32
vcx2qa_m_impl_s16
vcx2qa_m_impl_s32
vcx2qa_m_impl_s64
vcx2qa_m_impl_s8
vcx2qa_m_impl_u16
vcx2qa_m_impl_u32
vcx2qa_m_impl_u64
vcx2qa_m_impl_u8
vcx3_u32
vcx3a_u32
vcx3d_u64
vcx3da_u64
vcx3q_impl
vcx3q_impl_f16
vcx3q_impl_f32
vcx3q_impl_s16
vcx3q_impl_s32
vcx3q_impl_s64
vcx3q_impl_s8
vcx3q_impl_u16
vcx3q_impl_u32
vcx3q_impl_u64
vcx3q_impl_u8
vcx3q_m_impl
vcx3q_m_impl_f16
vcx3q_m_impl_f32
vcx3q_m_impl_s16
vcx3q_m_impl_s32
vcx3q_m_impl_s64
vcx3q_m_impl_s8
vcx3q_m_impl_u16
vcx3q_m_impl_u32
vcx3q_m_impl_u64
vcx3q_m_impl_u8
vcx3q_u8_impl
vcx3q_u8_impl_f16
vcx3q_u8_impl_f32
vcx3q_u8_impl_s16
vcx3q_u8_impl_s32
vcx3q_u8_impl_s64
vcx3q_u8_impl_s8
vcx3q_u8_impl_u16
vcx3q_u8_impl_u32
vcx3q_u8_impl_u64
vcx3q_u8_impl_u8
vcx3qa_impl
vcx3qa_impl_f16
vcx3qa_impl_f32
vcx3qa_impl_s16
vcx3qa_impl_s32
vcx3qa_impl_s64
vcx3qa_impl_s8
vcx3qa_impl_u16
vcx3qa_impl_u32
vcx3qa_impl_u64
vcx3qa_impl_u8
vcx3qa_m_impl
vcx3qa_m_impl_f16
vcx3qa_m_impl_f32
vcx3qa_m_impl_s16
vcx3qa_m_impl_s32
vcx3qa_m_impl_s64
vcx3qa_m_impl_s8
vcx3qa_m_impl_u16
vcx3qa_m_impl_u32
vcx3qa_m_impl_u64
vcx3qa_m_impl_u8
vreinterpretq_u8
vreinterpretq_u8_u8
_exchange_strongatomic_compare_eoup_strided_copysync_work_group_re_exchange_weaktomic_compare_exhannel_data_typemage_channel_datd_num_sub_groupsnqueued_num_sub_e_num_mip_levelset_image_num_mip_ushort16_sat_rtonvert_ushort16_mage_channel_ordnqueued_local_size
ub_group_local_iax_sub_group_sizork_group_reduceatus
et_user_event_stples
et_image_num_samcopy
_group_broadcastork_group_broadcub_group_reduce_ub_group_broadcas_valid_reserve_id
et_local_linear_storea_half16_rtait_group_events
RENCED_PARAMETERUNREFERENCED_PAR
CONCEPT_REQUIRES
ates-null-valuesauthenticates-nuestricted_intptr__ptrauth_restri
icCompareAndSwapOSAtomicCompareAobjc_atomicCompatch_barrier_syncdispatch_barrierr_async_and_waitch_barrier_asynch_async_and_waitdispatch_async_a
m_discriminationcustom_discrimine_discriminationtype_discriminata_discriminationno_extra_discrimdefault_extra_di
partial_ordering
troying_delete_tdestroying_delet
eenInterfaceAVKiVideoFullscreenI
nstant_evaluatedis_constant_eval
0123456789abcdef%
apinotes
o.devirt.triggercoro.devirt.trigsume_get_context__swift_async_re
e.retcon
llvm.coro.preparro.prepare.asyncobal.annotationsllvm.global.anno 
llvm.compiler.us
e_load_hardeningspeculative_loadsanitize_hwaddre
al Function ElimVirtual Function
ical Jump TablesCFI Canonical Jurget-enforcementbranch-target-en
c_cancel_barrier__kmpc_cancel_baread_num
__kmpc_global_th__kmpc_fork_callmpc_omp_taskwait__kmpc_omp_taskwield
__kmpc_omp_taskypush_num_threads__kmpc_push_num_c_push_proc_bind__kmpc_push_procomp_get_thread_num
_get_num_threadsomp_get_num_thre_get_max_threadsomp_get_max_threomp_get_cancellaomp_get_scheduleimit
omp_get_thread_led_active_levelsomp_get_supporteax_active_levelsomp_get_max_actiestor_thread_numomp_get_ancestoromp_get_team_sizomp_get_active_lomp_get_proc_binomp_get_num_placomp_get_num_proct_place_proc_idsomp_get_place_promp_get_place_nuition_num_placesomp_get_partitioition_place_nums_set_num_threadsomp_set_num_threomp_set_scheduleomp_set_max_acti__kmpc_end_masteitical_with_hint__kmpc_critical_mpc_end_critical__kmpc_end_critiwait
__kmpc_reduce_no__kmpc_end_reduce_nowait
__kmpc_end_orderc_init_4
__kmpc_for_statir_static_init_4uc_init_8
r_static_init_8u_for_static_fini_dispatch_init_4__kmpc_dist_dispdispatch_init_4u_dispatch_init_8dispatch_init_8u__kmpc_dispatch__dispatch_next_4dispatch_next_4u_dispatch_next_8dispatch_next_8u_dispatch_fini_4dispatch_fini_4u_dispatch_fini_8dispatch_fini_8uam_static_init_4__kmpc_team_statm_static_init_4uam_static_init_8m_static_init_8uor_static_init_4__kmpc_dist_for_or_static_init_8__kmpc_end_singlc_omp_task_alloc__kmpc_omp_task_roup
__kmpc_end_taskg__kmpc_taskgroupp_task_begin_if0ask_complete_if0p_task_with_depsarget_task_alloc__kmpc_omp_targeed_modifier_init__kmpc_taskred_mmpc_taskred_init__kmpc_taskred_ik_reduction_init__kmpc_task_redusk_completed_ooo__kmpc_proxy_tasdeps
__kmpc_omp_wait_ionpoint
__kmpc_cancellat__kmpc_fork_teamc_push_num_teams__kmpc_copyprivate
adprivate_cached__kmpc_threadpriprivate_registerinit
__kmpc_doacross_post
fini
c_init_allocator__kmpc_init_allollocator
__kmpc_destroy_atarget_tripcount__kmpc_push_targgt_target_mapper__tgt_target_mapet_nowait_mapper__tgt_target_nowget_teams_mapper__tgt_target_teams_nowait_mapperegister_requires__tgt_register_rata_begin_mapper__tgt_target_dat_data_end_mapperta_update_mapperr_num_components__tgt_mapper_nummapper_component__tgt_push_mappe__kmpc_kernel_in__kmpc_kernel_despmd_kernel_init__kmpc_spmd_kernkernel_deinit_v2prepare_parallel__kmpc_kernel_pr_kernel_parallel__kmpc_kernel_panel_end_parallel__kmpc_kernel_enialized_parallel__kmpc_serialize__kmpc_end_seriant32
__kmpc_shuffle_ind_reduce_nowait__kmpc_nvptx_endnt64
aring_init_stack__kmpc_data_shararing_push_stackharing_pop_stackharing_variables__kmpc_begin_sha__kmpc_end_sharishared_variables__kmpc_get_sharec_parallel_level__kmpc_parallel_xec_mode
__kmpc_is_spmd_eam_static_memory__kmpc_get_team_rier_simple_spmd__kmpc_barrier_stive_thread_mask__kmpc_warp_acti
llvm.dbg.declareEnableSplitLTOUn
__cxa_pure_virtu
llvm.localescapellvm.masked.loadllvm.masked.store.
asan.module_ctor
asan.module_ctor
__asan_version_mismatch_check_apple_clang_
__asan_init
asan.module_dtor
__asan_before_dynamic_init
__asan_after_dynamic_init
__asan_register_globals
__asan_unregister_globals
__asan_register_image_globals
__asan_unregister_image_globals
__asan_register_elf_globals
__asan_unregister_elf_globals
___asan_gen_
__odr_asan_gen_
___asan_globals_registered
__asan_report_
__asan_handle_no_return
__sanitizer_ptr_cmp
__sanitizer_ptr_sub
__asan_shadow_memory_dynamic_address
__asan_stack_malloc_
__asan_stack_free_
__asan_poison_stack_memory
__asan_unpoison_stack_memory
__asan_set_shadow_
__asan_alloca_poison
__asan_allocas_unpoison
__asan_option_detect_stack_use_after_return
__dfsan_shadow_ptr_mask
eout
__llvm_gcov_writ__llvm_gcov_resefProfileFilenameMemProfProfileFi__memprof_profile_filename
__memprof_version_mismatch_check_v
memprof.module_ctor
__memprof_init
__memprof_shadow_memory_dynamic_address
msan.module_ctor
tizer_unaligned___sanitizer_unal
msan.module_ctor
__msan_init
_profile_runtime__llvm_profile_rm_coverage_names__llvm_coverage_ile_counter_bias__llvm_profile_cj
n_checker_assert__poison_checkero_printf_options__local_stdio_prio_scanf_options__local_stdio_sc
__sanitizer_cov_trace_pc_indir
__sanitizer_cov_trace_cmp1
__sanitizer_cov_trace_cmp2
__sanitizer_cov_trace_cmp4
__sanitizer_cov_trace_cmp8
__sanitizer_cov_trace_const_cmp1
__sanitizer_cov_trace_const_cmp2
__sanitizer_cov_trace_const_cmp4
__sanitizer_cov_trace_const_cmp8
__sanitizer_cov_trace_div4
__sanitizer_cov_trace_div8
__sanitizer_cov_trace_gep
__sanitizer_cov_trace_switch
__sancov_lowest_stack
__sanitizer_cov_trace_pc
__sanitizer_cov_trace_pc_guard
sancov.module_ctor_trace_pc_guard
__sanitizer_cov_trace_pc_guard_init
sancov_guards
sancov.module_ctor_8bit_counters
__sanitizer_cov_8bit_counters_init
sancov_cntrs
sancov.module_ctor_bool_flag
__sanitizer_cov_bool_flag_init
sancov_bools
sancov_pcs
__sanitizer_cov_pcs_init
tsan.module_ctortsan.module_ctor
__tsan_init
ersonality_thunk__hwasan_personahwasan.module_ctor
__hwasan_init
hwasan.note
__hwasan_personality_thunk
__hwasan_shadow_memory_dynamic_address
LLVM
taskloop
parallel master for simd
target parallel  declare variantend declare variget parallel forparallel do simdtarget exit datateams distributesimd
master taskloop arallel for simddistribute paral distribute simdtarget teams disbute parallel doute parallel forer taskloop simddeclare reductioparallel for simparallel sectiontarget enter datcancellation poiend declare target
parallel workshado
begin declare vaed_shared_memoryunified_shared_mdynamic_allocatoem_order
atomic_default_m
le_implicit_basedisable_implicitarget dependent><any, entirely t
__tgt_async_infostruct.__tgt_asyssumeConstVCallstypeTestAssumeCodLoadConstVCallstypeCheckedLoadCpointer_is_validnull_pointer_is_heckedLoadVCallstypeCheckedLoadVem_or_argmemonlyinaccessiblemem_ccessiblememonlyinaccessiblememoEligibleToImportnotEligibleToImpenceable_or_nulldereferenceable_x86_vectorcallccvcall_visibilityvirtualConstPropally_initializedexternally_initi4_sve_vector_pcsaarch64_sve_vectCompatibleVTabletypeidCompatiblelocal_unnamed_adaarch64_vector_pcs
returnDoesNotAlially
available_externlent
dso_local_equivaalls
typeTestAssumeVCugDirectivesOnlyDebugDirectivesO
llvm.global_dtor
.disable
llvm.loop.unroll
llvm.loop.vectorize.followup_all
llvm.loop.vectorize.followup_vectorized
llvm.loop.vectorize.followup_epilogue
Loop Vectorization
SLP Vectorizer
nstrument_target__llvm_profile_iAlignment from assumptions
istribute.enablellvm.loop.distriLoop Distribution
Loop Load Elimination
oop.unroll.countloop.unroll.fullop.unroll.enable.runtime.disable.unroll_and_jam.ll_and_jam.countl_and_jam.enable
Lower the matrix intrinsics
Lower the matrix intrinsics (minimal)
statepoint-examp
Flow
interleave.countllvm.loop.interl
rofile_func_exit__cyg_profile_fu_func_enter_barei.mcount
llvm.arm.gnu.eabnc_enter
oop.peeled.countllvm.loop.peeled
.vectorize.widthllvm.loop.vectorisable_nonforcedllvm.loop.disablllvm.licm.disabl_and_jam.disablevectorize.enableoop.isvectorizedllvm.loop.isvect
m_personality_v0__gxx_wasm_persocessCLRExceptionProcessCLRExceptt_eh_personalityrust_eh_personal__CxxFrameHandler3
_except_handler3_except_handler4personality_seh0__gxx_personalit__gcc_personalitx_personality_v1__xlcxx_personaly_v0
dler
__C_specific_han__gnat_eh_person_personality_sj0c_personality_v0__objc_personali
#3d50c3
#4055c8
#4358cb
#465ecf
#4961d2
#4c66d6
#4f69d9
#536edd
#5572df
#5977e3
#5b7ae5
#5f7fe8
#6282ea
#6687ed
#6a8bef
#6c8ff1
#7093f3
#7396f5
#779af7
#7a9df8
#7ea1fa
#81a4fb
#85a8fc
#88abfd
#8caffe
#8fb1fe
#93b5fe
#96b7ff
#9abbff
#9ebeff
#a1c0ff
#a5c3fe
#a7c5fe
#abc8fd
#aec9fc
#b2ccfb
#b5cdfa
#b9d0f9
#bbd1f8
#bfd3f6
#c1d4f4
#c5d6f2
#c7d7f0
#cbd8ee
#cedaeb
#d1dae9
#d4dbe6
#d6dce4
#d9dce1
#dbdcde
#dedcdb
#e0dbd8
#e3d9d3
#e5d8d1
#e8d6cc
#ead5c9
#ecd3c5
#eed0c0
#efcebd
#f1ccb8
#f2cab5
#f3c7b1
#f4c5ad
#f5c1a9
#f6bfa6
#f7bca1
#f7b99e
#f7b599
#f7b396
#f7af91
#f7ac8e
#f7a889
#f6a385
#f5a081
#f59c7d
#f4987a
#f39475
#f29072
#f08b6e
#ef886b
#ed8366
#ec7f63
#e97a5f
#e8765c
#e57058
#e36c55
#e16751
#de614d
#dc5d4a
#d85646
#d65244
#d24b40
#d0473d
#cc403a
#ca3b37
#c53334
#c32e31
#be242e
#bb1b2c
#b70d28
Loop Access Analysis
arallel_accessesllvm.loop.parall
liveOnEntry
Optimization Remark Emitter
Z:<S
Stack Safety Local Analysis
stack-safety-local
-.5555545
llvm.vectorizer.a
watchossimulator
llvm_bb_addr_mapibraries
llvm_dependent_lll_graph_profilellvm_call_graph_m_linker_optionsllvm_linker_optignu_unique_objecndirect_functiongnu_indirect_funa
file_raw_version
__include_macros
afe_forge_single__builtin_unsafeiple_inheritance__multiple_inherstructor
__has_trivial_de__has_virtual_deow_constructible__is_nothrow_conr_object_pointer__is_member_objeray_msaa_depth_t__is_destructibl__is_literal_typ__underlying_typ__bridge_transfe__bridge_retaine_Null_unspecifie__builtin_alignof
__unknown_anytyplass
__is_interface_csign
__has_nothrow_as__has_trivial_asyout
__is_standard_laaa_t
th_t
image2d_msaa_dep__single_inheritmove_constructornds_to_temporary__reference_bindthrow_assignable__is_nothrow_assivially_copyablein_convertvector__builtin_converRETTY_FUNCTION____PRETTY_FUNCTIOs_convertible_tos_floating_point__is_floating_pos_member_pointer__is_member_poinuiltin_available__builtin_availarow_destructible__is_nothrow_deshrow_move_assign__has_nothrow_movial_move_assignhrow_constructorvial_constructor__has_trivial_coially_assignable__is_trivially_apes_compatible_p__builtin_types_ly_constructiblefunction_pointer__is_member_funcu_type_signature__builtin_xnu_ty__builtin_offsetof
__builtin_FUNCTION
__is_constructibpy
__is_complete_type
__private_extern__
__module_private__builtin_bit_caltin_choose_expr__builtin_chooselvalue_reference__is_lvalue_refervalue_reference__is_rvalue_refe2d_array_depth_timage2d_array_de__virtual_inherireinterpret_cast__builtin_COLUMN__builtin_va_arg__is_polymorphic__is_lvalue_expr__is_rvalue_expr__is_fundamental__builtin_astypeimage1d_buffer_t_Nullable_resultlly_destructible__is_trivially_dimport_as_memberswift_infer_impoeclared_includesno_undeclared_in
nsafe_unretained__unsafe_unretaicondition_variabscoped_allocatorinitializer_list
ns_consumes_selfattribute_ns_conobjc_ivar_unusedattribute_objc_iunused_on_fieldsattribute_unuseddiagnose_if_objcattribute_diagnoafety_attributesc_thread_safety__ext_vector_typeattribute_ext_vereturns_retainedattribute_cf_retattribute_ns_retbility_driverkitattribute_availaability_bridgeoslability_watchosute_availabilityute_overloadableattribute_overlonalyzer_noreturnattribute_analyzvailability_tvosbute_ns_consumedbute_cf_consumedattribute_cf_conhavior_sanitizerundefined_behaviailability_swiftjc_method_familyattribute_objc_mmemtag_sanitizerddress_sanitizerhwaddress_sanitiaddress_sanitizedataflow_sanitizptrauth_intrinsimemory_sanitizerthread_sanitizer_nullable_resultnullability_nulllized_swift_namegeneralized_swifrator_attributesenumerator_attribility_on_arraysnullability_on_aptrauth_qualifie_masking
ptrauth_objc_isahod_list_pointerptrauth_objc_metlock_descriptorsptrauth_signed_bc_signable_classptrauth_objc_sigsa_authenticatesh_objc_isa_signsh_indirect_gotosptrauth_indirect_objc_isa_stripsobjc_instancetypalifier_manglingobjc_protocol_qu_explicit_atomicobjc_property_exc_nonfragile_abiobjc_nonfragile_alue_expressionsobjc_boxed_nsvaloxed_expressionsobjc_boxed_expreliterals
objc_dictionary_c_array_literalsobjc_array_literobjc_subscriptine_id_on_typedefsobjc_bridge_id_o_cf_code_auditedarc_cf_code_audic_class_propertyobjc_class_propeonstant_literalsobjc_constant_lienerics_varianceobjc_generics_vaxx_static_assertobjc_cxx_static_sert
objc_c_static_asc_generic_selectcxx_static_assercxx_strong_enumstrol
cxx_override_concxx_implicit_movzed_initializerscxx_generalized_pe_template_argscxx_local_type_tversions
cxx_explicit_coneleted_functionscxx_deleted_funcnline_namespacescxx_inline_namesvalue_referencescxx_rvalue_refering_constructorscxx_delegating_ccxx_inheriting_caulted_functionscxx_defaulted_fu_string_literalscxx_raw_string_l_string_builtinscxx_constexpr_st_alias_templatescxx_alias_templas_control_sfinaecxx_access_contratic_member_initcxx_nonstatic_meriadic_templatescxx_variadic_temcxx_user_literalestricted_unionscxx_unrestrictedrals
cxx_unicode_lite_trailing_returncxx_trailing_ret_aggregate_nsdmicxx_aggregate_ns_binary_literalscxx_binary_liter_generic_lambdascxx_generic_lambcxx_thread_localriable_templatescxx_variable_temn_type_deductioncxx_return_type_elaxed_constexprcxx_relaxed_conscxx_decltype_autcxx_init_capturehas_nothrow_copyhas_nothrow_assihas_trivial_assiis_standard_layout
tual_conversionscxx_contextual_cis_convertible_tivial_destructorhas_trivial_destrtual_destructorhas_virtual_desthas_trivial_copyis_constructiblehas_nothrow_conshas_trivial_consshadow_call_stack
is_trivially_copis_trivially_conis_trivially_ass_relative_vtablecxx_abi_relativeoadable_unmarkedoverloadable_unm_scalar_divisionmatrix_types_scaoto_with_outputsgnu_asm_goto_witiant_environment__is_target_variarget_variant_osiant
__has_target_varrget_environment__is_target_envi__is_target_archype_pack_element__type_pack_elem__make_integer_seq
__is_target_vendllvm_fatal_errorllvm_unreachable
no_caller_saved_no_instrument_fuon_entry
patchable_functiforce_align_arg_transparent_unioanalyzer_suppresos_returns_retaiobjc_designated_objc_subclassingno_speculative_lized
loader_uninitialneon_polyvector_ible
objc_runtime_visvice
opencl_global_deexternal_source_objc_independentxray_always_instobjc_returns_innenforce_tcb_leafinternal_linkagemin_vector_widthneon_vector_typeos_consumes_thispass_object_sizedisable_tail_calls
mig_server_routine
no_stack_protectobjc_nonlazy_claopencl_global_hoswift_error_resucf_returns_not_rrns_autoreleasedns_returns_autorns_returns_not_ros_returns_not_rmp_table
cfi_canonical_juretained
objc_externally_ect_size
pass_dynamic_objfootnote
symbol_metadata_audited_transfercf_audited_transcf_returns_retaiunknown_transfercf_unknown_transns_returns_retaic_direct_membersobjc_direct_membc_requires_superobjc_requires_suft_async_contextswift_async_contobjc_runtime_nampreserve_access_isibility_publiclto_visibility_pprecise_lifetimeobjc_precise_lifswift_indirect_rnever_instrumentxray_never_instrno_thread_safetyruntime_protocolobjc_non_runtimegpu_waves_per_euamdgpu_waves_peramdgpu_flat_workshared_capabilitconsumable_auto_require_constantcarries_dependency
no_unique_addresn_surface_type__n_texture_type____cudart_builtinanalyzer_noretur_sve_vector_bitsarm_sve_vector_btin_surface_typedevice_builtin_stin_texture_typedevice_builtin_te_nonsecure_callcmse_nonsecure_cntry
cmse_nonsecure_e_bridged_typedefswift_bridged_tyd_sub_group_sizeintel_reqd_sub_gopencl_unroll_hiswift_objc_membefinition
objc_complete_desize
reqd_work_group_swift_async_namehint
work_group_size_retained_on_zero_returns_retainessing_restrictedubclassing_restrated_initializeresignated_initiapeculative_load_ns_inner_pointerbjc_returns_innebjc_non_runtime_analysis
o_thread_safety_in_alias
_clang_arm_builtnu::no_address_setadata_footnoteymbol_metadata_famic_object_sizeass_dynamic_objeernally_retainedbjc_externally_rnical_jump_tablefi_canonical_jum_saved_registersnu::no_caller_sarns_not_retaineds_returns_not_ref_returns_not_ree_function_entrynu::patchable_fulways_instrumentray_always_instryped_memory_opertrauth_vtable_pondependent_classbjc_independent_al_source_symbolxternal_source_srgument_with_typlign_arg_pointernu::force_align_ray_never_instruype_tag_for_datasult
wift_indirect_rerve_access_indexeserve_access_ininter_with_type_time
bjc_precise_lifeblic
to_visibility_putrument_functionnu::no_instrumenencl_global_devijc_runtime_visib_polyvector_typeeon_polyvector_ter_uninitializedoader_uninitialinu_usage_semantiwift_async_context
s_returns_retainwift_error_resulencl_global_hostig_server_routinboutletcollectionum_extensibilitisable_tail_callarch64_vector_pcnu::no_sanitize_wift_async_errornalyzer_suppressarn_unused_resulo_sanitize_threaransparent_unionnu::transparent_:returns_nonnullnu::returns_nonnt_initializationequire_constant_ined_on_non_zerory_acquire_shareo_speculative_lo_work_group_sizemdgpu_flat_work_uires_shared_capease_generic_cap_auto_cast_stateonsumable_auto_celease_shared_cacquire_shared_cae_locks_requiredxclusive_locks_rssert_shared_capped_memory_operality
y_acquire_capabi_indirect_resultift_indirect_resared_locks_requiequires_capabilimdgpu_waves_per_eu
elease_capabilitrch64_vector_pcsrries_dependencyo_unique_address__device_builtin__launch_bounds_et_state_on_readconsumable_set_so_address_safetyxclusive_trylockhread_safety_anaaller_saved_regioup_size
ntel_reqd_sub_grchable_function_s_dynamic_objectxternally_retainomplete_definitihared_trylock_fuorce_align_arg_pxclusive_lock_fuo_instrument_funlock
ssert_exclusive__group_size_hintork_group_size_hed_lock_functionhared_lock_functeqd_work_group_s_nonsecure_entrymse_nonsecure_en_sanitize_addresse_nonsecure_calm_sve_vector_bitdgpu_waves_per_eu
arries_dependencsert_shared_lockfied_inheritance__unspecified_in
#pragma-messages
#warnings
CFString-literal
IndependentClass-attribute
NSObject-attribute
absolute-value
abstract-final-class
abstract-vbase-init
address
address-of-packed-member
address-of-temporary
aggregate-return
alloca
alloca-with-align-alignof
ambiguous-delete
ambiguous-ellipsis
ambiguous-macro
ambiguous-member-template
ambiguous-reversed-operator
analyzer-incompatible-plugin
anon-enum-enum-conversion
anonymous-pack-parens
apinotes
arc%arc-bridge-casts-disallowed-in-nonarc
arc-maybe-repeated-use-of-weak
arc-non-pod-memaccess
arc-performSelector-leaks
arc-repeated-use-of-weak
arc-retain-cycles
arc-unsafe-retained-assign
argument-outside-rangearray-bounds
array-bounds-pointer-arithmetic
asm-operand-widths
assign-enum
assume
at-protocol
atimport-in-framework-header
atomic-alignment
atomic-implicit-seq-cst
atomic-memory-ordering
atomic-properties*atomic-property-with-user-defined-accessor
attribute-packed-for-bitfield
attributes
auto-disable-vptr-sanitizer
auto-import
auto-storage-class
auto-var-idavailability
avr-rtlib-linking-quirks
backend-plugin
backslash-newline-escape
bad-function-cast
binary-literal
bind-to-temporary-copy
binding-in-condition
bitfield-constant-conversion
bitfield-enum-conversion
bitfield-width
bitwise-conditional-parentheses
bitwise-op-parentheses
block-capture-autoreleasing
bool-conversion
bool-conversions
bool-operation
braced-scalar-init
bridge-cast builtin-assume-aligned-alignment
builtin-macro-redefined
builtin-memcpy-chk-size
builtin-requires-header
c++-compatc++0x-compat
c++0x-extensions
c++0x-narrowingc++11-compat(c++11-compat-deprecated-writable-strings
c++11-compat-pedantic*c++11-compat-reserved-user-defined-literal
c++11-extensions
c++11-extra-semi
c++11-inline-namespace
c++11-long-long
c++11-narrowing
c++14-binary-literalc++14-compat
c++14-compat-pedantic
c++14-extensionsc++17-compat
c++17-compat-mangling
c++17-compat-pedantic
c++17-extensions
c++1y-extensionsc++1z-compat
c++1z-compat-mangling
c++1z-extensionsc++20-compat
c++20-compat-pedantic
c++20-designator
c++20-extensionsc++2a-compat
c++2a-compat-pedantic
c++2a-extensions
c++98-c++11-c++14-c++17-compat'c++98-c++11-c++14-c++17-compat-pedantic
c++98-c++11-c++14-compat!c++98-c++11-c++14-compat-pedantic
c++98-c++11-compat!c++98-c++11-compat-binary-literal
c++98-c++11-compat-pedanticc++98-compat#c++98-compat-bind-to-temporary-copy
c++98-compat-extra-semi%c++98-compat-local-type-template-args
c++98-compat-pedantic'c++98-compat-unnamed-type-template-args
c11-extensions
c2x-extensions
c99-compat
c99-designator
c99-extensions#call-to-pure-virtual-from-ctor-dtor
called-once-parameter
cast-align
cast-calling-convention
cast-of-sel-type
cast-qual
cast-qual-unrelated
char-align
char-subscriptsclang-cl-pch
class-conversion
class-varargs
cmse-union-leak
comma
comment
comments
compare-distinct-pointer-types
completion-handler
complex-component-init
compound-token-split
compound-token-split-by-macro
compound-token-split-by-space
concepts-ts-compat
conditional-type-mismatch
conditional-uninitialized
config-macros
constant-conversion
constant-evaluated
constant-logical-operand
constexpr-not-const
consumed
conversion
conversion-null
coroutine%coroutine-missing-unhandled-exception
covered-switch-default
cstring-format-directive
ctad-maybe-unsupported
ctor-dtor-privacy
cuda-compat
custom-atomic-properties
cxx-attribute-extension
dangling
dangling-else
dangling-fielddangling-gsl
dangling-initializer-list
darwin-sdk-settings
date-time
dealloc-in-category
debug-compression-unavailable
declaration-after-statement
defaulted-function-deleted
delegating-ctor-cycles delete-abstract-non-virtual-dtor
delete-incomplete$delete-non-abstract-non-virtual-dtor
delete-non-virtual-dtor
deprecated$deprecated-anon-enum-enum-conversion
deprecated-array-compare
deprecated-attributes
deprecated-comma-subscript
deprecated-copy
deprecated-copy-dtor
deprecated-declarations!deprecated-dynamic-exception-spec
deprecated-enum-compare#deprecated-enum-compare-conditional
deprecated-enum-enum-conversion deprecated-enum-float-conversion
deprecated-implementations
deprecated-increment-bool
deprecated-objc-isa-usage%deprecated-objc-pointer-introspection5deprecated-objc-pointer-introspection-performSelector
deprecated-register
deprecated-this-capture
deprecated-volatile
deprecated-writable-strings
direct-ivar-access
disabled-macro-expansion
disabled-optimizationdiscard-qual
distributed-object-modifiers
div-by-zero
division-by-zero
dll-attribute-on-redeclaration%dllexport-explicit-instantiation-decl
dllimport-static-field-def
documentation
documentation-deprecated-sync
documentation-html
documentation-pedantic
documentation-unknown-command
dollar-in-identifier-extension
double-promotion
dtor-namedtor-typedef
duplicate-decl-specifier
duplicate-enum
duplicate-method-arg
duplicate-method-match
duplicate-protocol
dynamic-class-memaccess
dynamic-exception-spec
effc++
elaborated-enum-base
elaborated-enum-class
embedded-directive
empty-body
empty-decomposition
empty-init-stmt
empty-translation-unit
encode-typeendif-labelsenum-compare
enum-compare-conditional
enum-compare-switch
enum-conversion
enum-enum-conversion
enum-float-conversion
enum-too-large
exceptions
excess-initializers
exit-time-destructors
expansion-to-defined
explicit-initialize-call
explicit-ownership-type
export-unnamed
export-using-directive
extern-c-compat
extern-initializer
extra
extra-qualification
extra-semi
extra-semi-stmtextra-tokens
fallback
final-dtor-non-final-class
firebloom-incomplete-array
firebloom-indexable-subtracted firebloom-init-list-partial-null
firebloom-single-to-count
fixed-enum-extension
fixed-point-overflow
flag-enum
flexible-array-extensions
float-conversion
float-equal
float-overflow-conversion
float-zero-conversion
for-loop-analysis
format
format-extra-args
format-insufficient-args
format-invalid-specifier
format-non-iso
format-nonliteral
format-pedantic
format-security
format-type-confusion
format-y2k
format-zero-length
format=2
fortify-source
four-char-constants
frame-address
frame-larger-than=%framework-include-private-from-public
free-nonheap-object
function-def-in-objc-container
function-multiversionfuse-ld-path
future-compat
gcc-compat
global-constructors
global-isel
gnu-alignof-expression
gnu-anonymous-struct
gnu-array-member-paren-init
gnu-auto-type
gnu-binary-literal
gnu-case-range
gnu-complex-integer gnu-compound-literal-initializer
gnu-conditional-omitted-operand
gnu-designator
gnu-empty-initializer
gnu-empty-struct
gnu-flexible-array-initializer
gnu-flexible-array-union-member
gnu-folding-constant
gnu-imaginary-constant
gnu-include-next
gnu-inline-cpp-without-extern
gnu-label-as-value
gnu-redeclared-enum
gnu-statement-expression
gnu-static-float-init$gnu-string-literal-operator-template
gnu-union-cast"gnu-variable-sized-type-not-at-end
gnu-zero-line-directive!gnu-zero-variadic-macro-argumentsheader-guard
header-hygiene
hip-only
idiomatic-parentheses
ignored-attributes
ignored-optimization-argument
ignored-pragma-intrinsic
ignored-pragma-optimize
ignored-pragmas
ignored-qualifiers
implicit
implicit-atomic-properties#implicit-const-int-float-conversion*implicit-conversion-floating-point-to-bool implicit-exception-spec-mismatch
implicit-fallthrough!implicit-fallthrough-per-function
implicit-fixed-point-conversion
implicit-float-conversion
implicit-function-declarationimplicit-int
implicit-int-conversion
implicit-int-float-conversion
implicit-retain-self
implicitly-unsigned-literal
import&import-preprocessor-directive-pedantic
inaccessible-base
include-next-absolute-path
include-next-outside-header
incompatible-exception-spec#incompatible-function-pointer-types"incompatible-library-redeclaration
incompatible-ms-struct
incompatible-pointer-types.incompatible-pointer-types-discards-qualifiers
incompatible-property-type
incompatible-sysroot'incomplete-framework-module-declaration
incomplete-implementation
incomplete-module
incomplete-setjmp-declaration
incomplete-umbrella
inconsistent-dllimport(inconsistent-missing-destructor-override
inconsistent-missing-override
increment-bool
index-store
infinite-recursion
init-self
initializer-overrides
injected-class-name
inline
inline-asm#inline-namespace-reopened-noninline
inline-new-delete"instantiation-after-specialization
int-conversion
int-conversions
int-in-bool-context
int-to-pointer-cast
int-to-void-pointer-cast
integer-overflow
invalid-command-line-argument
invalid-constexpr
invalid-iboutlet&invalid-initializer-from-system-header
invalid-ios-deployment-target
invalid-no-builtin-names
invalid-noreturn
invalid-offsetof invalid-or-nonexistent-directory
invalid-partial-specialization
invalid-pch
invalid-pp-token
invalid-source-encoding
invalid-token-paste
jump-seh-finally
keyword-compat
keyword-macro
knr-promoted-parameter
language-extension-token
large-by-value-copy
liblto
literal-conversion
literal-range
local-type-template-args
logical-not-parentheses
logical-op-parentheses
long-long
loop-analysis
macro-redefined
main
main-return-type
malformed-warning-check
many-braces-around-scalar-init
max-tokens
max-unsigned-zero
memset-transposed-args
memsize-comparison
method-signatures
microsoft
microsoft-anon-tag
microsoft-cast
microsoft-charize
microsoft-comment-paste
microsoft-const-init
microsoft-cpp-macro"microsoft-default-arg-redefinition
microsoft-drectve-section
microsoft-end-of-file microsoft-enum-forward-reference
microsoft-enum-value
microsoft-exception-spec
microsoft-exists#microsoft-explicit-constructor-call
microsoft-extra-qualification
microsoft-fixed-enum
microsoft-flexible-array
microsoft-goto
microsoft-inaccessible-base
microsoft-include
microsoft-mutable-reference
microsoft-pure-definition
microsoft-redeclare-static
microsoft-sealed
microsoft-template
microsoft-template-shadow microsoft-union-member-reference
microsoft-unqualified-friend
microsoft-using-decl
microsoft-void-pseudo-dtor
misleading-indentation
mismatched-new-delete
mismatched-parameter-types
mismatched-return-types
mismatched-tags
missing-braces
missing-constinit
missing-declarations
missing-exception-spec
missing-field-initializers
missing-format-attribute
missing-include-dirs
missing-method-return-type
missing-noescape
missing-noreturn
missing-prototype-for-cc
missing-prototypes
missing-selector-name
missing-sysroot
missing-variable-declarations
misspelled-assumptionmodule-build
module-conflict
module-file-config-mismatch
module-file-extension
module-import
module-import-in-extern-c"modules-ambiguous-internal-linkage
modules-import-nested-redundant
most
movemsvc-include
msvc-not-found
multichar
multiple-move-vbase
narrowing
nested-anon-types
nested-externs
new-returns-null
newline-eof
noderef
noexcept-type
non-c-typedef-for-linkage
non-gcc
non-literal-null-conversion'non-modular-include-in-framework-module
non-modular-include-in-module
non-pod-varargs
non-power-of-two-alignment
non-virtual-dtor
nonnull
nonportable-cfstrings
nonportable-include-path!nonportable-private-apinotes-path(nonportable-private-system-apinotes-path
nonportable-system-include-path!nonportable-vector-initialization
nontrivial-memaccess
nsconsumed-mismatch
nsreturns-mismatch
null-arithmetic
null-character
null-conversion
null-dereference
null-pointer-arithmetic
nullability
nullability-completeness"nullability-completeness-on-arrays
nullability-declspec
nullability-extension#nullability-inferred-on-nested-type
nullable-to-nonnull-conversion+objc-autosynthesis-property-ivar-name-match
objc-bool-constant-conversion
objc-boxing
objc-circular-container
objc-cocoa-api
objc-designated-initializers
objc-dictionary-duplicate-keys
objc-flexible-array
objc-forward-class-redefinition
objc-interface-ivars
objc-literal-compare
objc-literal-conversion
objc-macro-redefinition
objc-messaging-id
objc-method-access
objc-missing-property-synthesis
objc-missing-super-calls
objc-multiple-method-names"objc-noncopy-retain-block-property
objc-nonunified-exceptions#objc-property-assign-on-object-type
objc-property-implementation
objc-property-implicit-mismatch*objc-property-matches-cocoa-ownership-rule
objc-property-no-attribute
objc-property-synthesis#objc-protocol-method-implementation objc-protocol-property-synthesis
objc-protocol-qualifiers"objc-readonly-with-setter-property
objc-redundant-api-use
objc-redundant-literal-use
objc-root-class
objc-signed-char-bool/objc-signed-char-bool-implicit-float-conversion-objc-signed-char-bool-implicit-int-conversion
objc-string-compare
objc-string-concatenation
objc-unsafe-perform-selector
objc-weak-compat
old-style-cast
old-style-definition
opencl-unsupported-rgba
openmp
openmp-clauses
openmp-loop-form
openmp-mapping
openmp-target
option-ignored!ordered-compare-function-pointers
ossharedptr-misuse
out-of-line-declaration
out-of-scope-functionover-aligned
overflow
overlength-strings
overloaded-shift-op-parentheses
overloaded-virtual
override-init
override-module
overriding-method-mismatch
overriding-t-option
packed
padded
parentheses
parentheses-equality
partial-availability
pass
pass-analysis
pass-failed
pass-missed
pch-date-time
pedantic
pedantic-core-features
pessimizing-move
pointer-arith
pointer-bool-conversion
pointer-compare
pointer-integer-comparepointer-sign
pointer-to-enum-cast
pointer-to-int-cast
pointer-type-mismatch
poison-system-directories
potentially-direct-selector potentially-evaluated-expression
pragma-clang-attribute
pragma-once-outside-header
pragma-pack
pragma-pack-suspicious-include#pragma-system-header-outside-header
pragmas&predefined-identifier-outside-function
private-extern
private-header
private-module
profile-instr-missing
profile-instr-out-of-date
profile-instr-unprofiled
property-access-dot-syntax
property-attribute-mismatch
protocol%protocol-property-synthesis-ambiguity
psabi
ptrauth-null-pointers
ptrauth-struct-cxx
qualified-void-return-type"quoted-include-in-framework-header
range-loop-analysis
range-loop-bind-reference
range-loop-construct
readonly-iboutlet-property
receiver-expr
receiver-forward-class
redeclared-class-member
redundant-decls
redundant-move
redundant-parens
register
reinterpret-base-class
remark-backend-plugin
reorderreorder-ctor
reorder-init-list
requires-expression
requires-super-attribute
reserved-id-macro
reserved-user-defined-literal
retained-language-linkage
return-stack-address
return-std-move
return-std-move-in-c++11
return-type
return-type-c-linkage
rewrite-not-bool
rtti
sanitize-address
section
selector
selector-type-mismatch
self-assign
self-assign-field
self-assign-overloaded
self-move
semicolon-before-method-body
sentinel
sequence-point
serialized-diagnostics
shadow
shadow-allshadow-field
shadow-field-in-constructor$shadow-field-in-constructor-modified
shadow-ivar
shadow-uncaptured-local
shift-count-negative
shift-count-overflow
shift-negative-value
shift-op-parentheses
shift-overflow
shift-sign-overflow
shorten-64-to-32sign-compare
sign-conversion
sign-promo
signed-enum-bitfield
signed-unsigned-wchar
sizeof-array-argument
sizeof-array-decay
sizeof-array-div
sizeof-pointer-div
sizeof-pointer-memaccess
slash-u-filenameslh-asm-goto
sometimes-uninitialized
source-uses-openmp
spir-compat
stack-exhausted
stack-protector
static-float-init
static-in-inline$static-inline-explicit-instantiation
static-local-in-inline
static-self-init
stdlibcxx-not-found
strict-aliasing
strict-aliasing=0
strict-aliasing=1
strict-aliasing=2
strict-overflow
strict-overflow=0
strict-overflow=1
strict-overflow=2
strict-overflow=3
strict-overflow=4
strict-overflow=5"strict-potentially-direct-selector
strict-prototypes
strict-selector-match
string-compare
string-concatenation
string-conversion
string-plus-char
string-plus-int
strlcpy-strlcat-sizestrncat-size
suggest-destructor-override
suggest-override
super-class-method-mismatch
suspicious-bzero
suspicious-memaccess
swift-name-attribute
swift-newtype-attribute
switch
switch-bool
switch-default
switch-enum%sync-fetch-and-nand-semantics-changed
synth
tautological-bitwise-compare
tautological-compare
tautological-constant-compare&tautological-constant-in-range-compare*tautological-constant-out-of-range-compare
tautological-objc-bool-compare
tautological-overlap-compare
tautological-pointer-compare
tautological-type-limit-compare
tautological-undefined-compare'tautological-unsigned-enum-zero-compare"tautological-unsigned-zero-compare tautological-value-range-compare
tcb-enforcement$tentative-definition-incomplete-type
thread-safety
thread-safety-analysis
thread-safety-attributes
thread-safety-beta
thread-safety-negative
thread-safety-precise
thread-safety-reference
thread-safety-verbose
trigraphs
type-limits
type-safety
typedef-redefinition
typename-missing
unable-to-open-stats-file
unavailable-declarations
undeclared-selector
undefundef-prefix
undefined-bool-conversion
undefined-func-template
undefined-inline
undefined-internal
undefined-internal-type
undefined-reinterpret-cast
undefined-var-template
underaligned-exception-object
unevaluated-expression
unguarded-availability
unguarded-availability-new
unicode
unicode-homoglyph
unicode-whitespace
unicode-zero-width
uninitialized
uninitialized-const-reference
unknown-argument
unknown-assumption
unknown-attributes
unknown-cuda-version
unknown-escape-sequence
unknown-pragmas
unknown-sanitizers
unknown-warning-option
unnamed-type-template-args
unneeded-internal-declaration
unneeded-member-function
unreachable-code
unreachable-code-aggressive
unreachable-code-break
unreachable-code-loop-increment
unreachable-code-return
unsequenced
unsupported-abs
unsupported-availability-guard
unsupported-cb#unsupported-dll-base-class-template
unsupported-floating-point-opt
unsupported-friend
unsupported-gpopt
unsupported-nan
unsupported-target-opt
unsupported-visibility
unusable-partial-specialization
unused
unused-argument
unused-command-line-argument
unused-comparison
unused-const-variable
unused-exception-parameter
unused-function
unused-getter-return-valueunused-label
unused-lambda-capture
unused-local-typedef
unused-local-typedefs
unused-macros
unused-member-function
unused-parameter
unused-private-field
unused-property-ivar
unused-result
unused-templateunused-value
unused-variable
unused-volatile-lvalue
used-but-marked-unused
user-defined-literals
user-defined-warnings
varargs
variadic-macros
vec-elem-size
vector-conversion
vector-conversionsvexing-parse
visibility
vla-extension
void-pointer-to-enum-cast
void-pointer-to-int-cast
void-ptr-dereference
volatile-register-var
wasm-exception-spec
weak-template-vtablesweak-vtables
writable-strings
write-strings
xor-used-as-pow
zero-as-null-pointer-constant
zero-length-array
NSInvocation's %0 is not safe to be used with an object with ownership other than __unsafe_unretained
invalid type %0 in asm %select{input|output}1
invalid type %0 in asm input for constraint '%1'
%0 attribute cannot be applied to types
uuid attribute contains a malformed GUID
cannot open file '%0': %1
%select{pointer|reference}0 to %select{|subobject of }1%select{type_info object|string literal|temporary object|predefined '%3' variable}2 is not allowed in a template argument
only special member functions %select{|and comparison operators }0may be defaulted
only functions can have deleted definitions
duplicate '%0' declaration specifier
enumeration cannot be a template
expected %0
expected %1 after %0
method name referenced in property setter attribute must end with ':'
expected %0 or %1
expected namespace name
expected string literal %select{in %1|for diagnostic message in static_assert|for optional message in 'availability' attribute|for %select{language|source container}1 name in 'external_source_symbol' attribute}0
file '%0' modified since it was first processed
sorry, unsupported: file '%0' is too large for Clang to process
compile with '-ffixed-point' to enable fixed point types
'%0' is invalid in friend declarations
sorry, this include generates a translation unit too large for Clang to process.
integer literal is too large to be represented in any %select{signed |}0integer type
character literal with user-defined suffix cannot be used here
%select{data member |non-public member function |static member function |user-declared constructor|user-declared destructor|operator |nested class }0%1 is not permitted within an interface type
numeric literal with user-defined suffix cannot be used here
invalid storage class specifier in function declarator
string literal with user-defined suffix cannot be used here
'%0' can only be used if the target supports the mfhc1 and mthc1 instructions
module '%0' is needed but has not been provided, and implicit use of module files is disabled
build a shadowed submodule '%0'
cyclic dependency in module '%0': %1
no handler registered for module format '%0'
%select{|umbrella }0header '%1' not found
could not build module '%0'
module '%0' not found
error in loading module '%0' from prebuilt module path
import of shadowed module '%0'
module '%0' %select{is incompatible with|requires}1 feature '%2'
[rewriter] %0
nullability specifier %0 conflicts with existing specifier %1
directive '#pragma omp %0' cannot contain more than one '%1' clause%select{| with '%3' name modifier| with 'source' dependence}2
%select{OpenCL C|C++ for OpenCL}0 version %1 does not support the '%2' %select{type qualifier|storage class specifier}3
'%0' is not supported in C++ for OpenCL
option '%0' cannot be specified on this target
option '%0' cannot be specified with '%1'
option '%0' cannot be specified without '%1'
redefinition of parameter %0
%0 only allowed in __except block or filter expression
%0 only allowed in __except filter expression
%0 only allowed in __finally block
expected '__except' or '__finally' block
unknown target ABI '%0'
unknown target CPU '%0'
unknown FP unit '%0'
unknown target triple '%0', please use -triple or -arch
ABI '%0' is not supported on CPU '%1'
ABI '%0' is not supported for '%1'
micromips is not supported for target CPU '%0'
execute only is not supported for the %0 sub-architecture
the '%0' unit is not supported with this instruction set
-mcmse is not supported for %0
the %0 sub-architecture does not support unaligned accesses
this value is too large for this fixed point type
unable to make temporary file: %0
unable to rename temporary '%0' to output file '%1': '%2'
conversion between fixed point and %0 is not yet supported
no analyzer checkers or packages are associated with '%0'
'%0' can only be used with the '%1' ABI
%0 byte order mark detected in '%1', but encoding is not supported
must use '%1' tag to refer to type %0%select{| in this scope}2
'long long' is an extension when C99 mode is not enabled
'diagnose_if' is a clang extension
'enable_if' is a clang extension
'long long' is a C++11 extension
duplicate '%0' declaration specifier
integer literal is too large to be represented in a signed integer type, interpreting as unsigned
integer literal is too large to be represented in type 'long' and is subject to undefined behavior under C++98, interpreting as 'unsigned long'; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
variadic templates are a C++11 extension
duplicate '%0' declaration specifier
too many errors emitted, stopping now
also found
%select{pointer|reference}0 to %select{|subobject of }1%select{type_info object|string literal|temporary object|predefined '%3' variable}2 is not allowed in a template argument
%1 %0 is hidden by a non-type declaration of %0 here
declared here
previous case defined here
forward declaration of %0
subexpression not valid in a constant expression
to match this %0
[rewriter] %0
one possibility
#pragma entered here
previous declaration is here
previous definition is here
previous implicit declaration is here
previous use is here
use -analyzer-disable-all-checks to disable all static analyzer checkers
definition of %0 is not complete until the closing '}'
using
valid target CPU values are: %0
could not acquire lock file for module '%0': %1
timed out waiting to acquire lock file for module '%0'
private API notes file for module '%0' should be named '%0_private.apinotes', not '%1'
private API notes file for module '%0' should be named '%0_private.apinotes', not '%1'
[rewriter] call returns pointer to GC managed memory; it will become unmanaged in ARC
conflicting nullability specifier on parameter types, %0 conflicts with existing specifier %1
conflicting nullability specifier on return types, %0 conflicts with existing specifier %1
'consteval' specifier is incompatible with C++ standards before C++20
'long long' is incompatible with C++98
variadic templates are incompatible with C++98
duplicate definition of category %1 on interface %0
duplicate '%0' declaration specifier
'%0' is ignored since it is only supported for HIP
redeclaration of method parameter %0
redefinition of method parameter %0
[rewriter] %0
duplicate nullability specifier %0
integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C89; this literal will %select{have type 'long long'|be ill-formed}0 in C99 onwards
integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C++98; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
include location '%0' is unsafe for cross-compilation
Speculative load hardening does not protect functions with asm goto
Unable to protect inline asm that clobbers stack pointer against stack clash
stack nearly exhausted; compilation time may suffer, and crashes due to stack overflow are likely
unknown attribute %0 ignored
'-mabi=vec-extabi' and '-mabi=vec-default' require '-maltivec'
The default Altivec ABI on AIX is not yet supported, use '-mabi=vec-extabi' for the extended Altivec ABI
checker cannot be enabled with analyzer option '%0' == %1
invalid input for checker option '%0', that expects %1
checker '%0' has no option called '%1'
invalid input for analyzer-config option '%0', that expects %1 value
analyzer-config option '%0' should contain only one '='
analyzer-config option '%0' has a key but no value
unknown analyzer-config '%0'
-fobjc-arc is not supported on platforms using the legacy runtime
-fobjc-arc is not supported on versions of OS X prior to 10.6
Architecture '%0' does not support '%1' execution mode
cmse is not compatible with %select{RWPI|ROPI}0
CPU '%0' does not support '%1' execution mode
'%0' not supported, please use -iquote instead
cannot deduce implicit triple value for -Xopenmp-target, specify triple using -Xopenmp-target=<triple>
option '%0' requires input to be LLVM bitcode
invalid argument '%0' not allowed with '%1'
invalid argument '%0' only allowed with '%1'
Invalid offload arch combinations: %0 and %1 (For a specific processor, a feature should either exist in all offload archs, or not exist in any offload archs)
Invalid target ID: %0 (A target ID is a processor name followed by an optional list of predefined features post-fixed by a plus or minus sign deliminated by colon, e.g. 'gfx908:sramecc+:xnack-')
-fembed-bitcode is not supported on versions of iOS prior to 6.0
cannot specify '%1' along with '%0'
cannot read configuration file '%0'
unable to open CC_PRINT_OPTIONS file: %0
the clang compiler does not support '%0'
the clang compiler does not support '%0' for C++ on Darwin/i386
the clang compiler does not support '%0', %1
the clang compiler does not support -pg option on %select{Darwin|versions of OS X 10.9 and later}0
%0 command failed with exit code %1 (use -v to see invocation)
unable to execute command: %0
%0 command failed due to signal (use -v to see invocation)
compilation database '%0' could not be opened: %1
configuration file '%0' does not exist
configuration file '%0' cannot be found
conflicting deployment targets, both '%0' and '%1' are present in environment
Unsupported CUDA gpu architecture: %0
unsupported architecture '%0' for host compilation.
GPU arch %0 is supported by CUDA versions between %1 and %2 (inclusive), but installation at %3 is %4. Use --cuda-path to specify a different CUDA install, pass a different GPU arch with --cuda-gpu-arch, or pass --no-cuda-version-check.
defsym must be of the form: sym=value: %0
Value is not an integer: %0
option '/Zc:dllexportInlines-' is ABI-changing and not compatible with '/fallback'
no more than one option '--config' is allowed
-emit-llvm cannot be used when linking
The option -fopenmp-targets must be used in conjunction with a -fopenmp option compatible with offloading, please use -fopenmp=libomp or -fopenmp=libiomp5.
failing because %select{environment variable 'FORCE_CLANG_DIAGNOSTICS_CRASH' is set|'-gen-reproducer' is used}0
GNUstep Objective-C runtime version %0 incompatible with target binary format
OpenMP target architecture '%0' pointer size is incompatible with host '%1'
--rtlib=libgcc requires --unwindlib=libgcc
invalid Xarch argument: '%0', options requiring arguments are unsupported
invalid -Xopenmp-target argument: '%0', options requiring arguments are unsupported
invalid arch name '%0'
invalid argument '%0' to -%1
invalid CoreFoundation Runtime ABI '%0'; must be one of 'objc', 'standalone', 'swift', 'swift-5.0', 'swift-4.2', 'swift-4.1'
invalid Darwin version number: %0
invalid argument in '%0', only integer or 'auto' is supported
invalid output type '%0' for use with gcc tool
-mhvx-length is not supported without a -mhvx/-mhvx= flag
invalid integral value '%1' in '%0'
invalid deployment target for -stdlib=libc++ (requires %0 or later)
invalid linker name in argument '%0'
invalid argument '%0' to -malign-branch=; each element must be one of: %1
invalid float ABI '%0'
invalid thread pointer reading mode '%0'
OBJECT_MODE setting %0 is not recognized and is not a valid setting.
OpenMP target is invalid: '%0'
cannot use '%0' output with multiple -arch options
invalid option '%0' not of the form <from-file>;<to-file>
invalid arch name '%0', %1
invalid arch name '%0', %1 '%2'
invalid runtime library name in argument '%0'
invalid library name in argument '%0'
'-msve-vector-bits' is not supported without SVE enabled
invalid thread model '%0' in '%1' for this target
invalid unwind library name in argument '%0'
invalid value '%1' in '%0'
invalid value '%1' in '%0','%2'
invalid version number in '%0'
LTO requires -fuse-ld=lld
malformed sanitizer blacklist: '%0'
malformed sanitizer coverage blacklist: '%0'
malformed sanitizer coverage whitelist: '%0'
option '-MG' requires '-M' or '-MM'
missing argument to '%0'
argument to '%0' is missing (expected %1 value%s1)
Mixed Cuda and HIP compilation is not supported.
header file '%0' input type '%1' does not match type of prior input in module compilation; use '-x %2' to override
option '-fmodules-validate-once-per-build-session' requires '-fbuild-session-timestamp=<seconds since Epoch>' or '-fbuild-session-file=<file>'
option '--config' is not allowed inside configuration file
'%0': unable to use AST files with this tool
cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.
cannot find libdevice for %0. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.
cannot find HIP runtime. Provide its path via --rocm-path, or pass -nogpuinc to build without HIP runtime.
no input files
'%0': unable to pass LLVM bit-code files to linker
'%0': unable to use module files with this tool
[no]neon is not accepted as modifier, please use [no]simd instead
cannot find ROCm device library%select{| for %1}0. Provide its path via --rocm-path or --rocm-device-lib-path, or pass -nogpulib to build without ROCm device library.
no such file or directory: '%0'
no such file or directory: '%0'; did you mean '%1'?
The provided host compiler IR file '%0' is required to generate code for OpenMP target regions but cannot be found.
The target '%0' is not a supported OpenMP host target.
unknown remark serializer format: '%0'
in pattern '%1': %0
cannot specify '%0%1' when compiling multiple source files
cannot specify -o when generating multiple output files
incorrect format for -preamble-bytes=N,END
target '%0' does not support native pointer authentication
ROPI is not compatible with c++
embedded and GOT-based position independence are incompatible
unsupported '-target-variant' value '%0'; use 'ios-macabi' instead
-ftrivial-auto-var-init-stop-after=* only accepts positive integers.
-ftrivial-auto-var-init-stop-after=* is used without -ftrivial-auto-var-init=zero or -ftrivial-auto-var-init=pattern.
-ftrivial-auto-var-init=zero hasn't been enabled. Enable it at your own peril for benchmarking purpose only with -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang
unable to remove file: %0
unable to set working directory: %0
unknown argument: '%0'
unknown argument '%0'; did you mean '%1'?
unknown '-mindirect-jump=' option '%0'
language not recognized: '%0'
unknown or ill-formed Objective-C runtime '%0'
-E or -x required when input is from standard input
use /Tc or /Tp to set input type for standard input
%0 is not supported with -fembed-bitcode
the second argument of '-fpatchable-function-entry' must be smaller than the first argument
'-mindirect-jump=%0' is unsupported with the '%1' architecture
unsupported value '%0' for -linker option
position-independent code requires '-mabicalls'
unsupported option '%0'
unsupported option '%0' for target '%1'
unsupported option '%0'; did you mean '%1'?
unsupported argument '%1' to option '%0'
unsupported runtime library '%0' for platform '%1'
unsupported use of internal gcc -Z option '%0'
invalid branch protection option '%0' in '%1'
32-bit targets are not supported when building for Mac Catalyst
invalid sls hardening option '%0' in '%1'
there is no external assembler that can be used on this platform
-fobjc-weak is not supported on the current deployment target
-fobjc-weak is not supported in Objective-C garbage collection
-mharden-sls is only supported on armv7-a or later
'-fsanitize=memtag' requires hardware support (+memtag)
the target architecture '%0' is not supported by the target '%1'
-ftest-module-file-extension argument '%0' is not of the required form 'blockname:major:minor:hashed:user info'
AddressSanitizer doesn't support linking with debug runtime libraries yet
diagnostic msg: %0
was searched for in the directory: %0
The last /TC or /TP option takes precedence over earlier instances
use '%0'%select{| or '%3'|, '%3', or '%4'|, '%3', '%4', or '%5'}2 for '%1' standard
-verify prefixes must start with a letter and contain only alphanumeric characters, hyphens, and underscores
Use '--' to treat subsequent arguments as filenames
-O4 is equivalent to -O3
ignoring -fapple-kext which is valid for C++ and Objective-C++ only
cannot compress debug sections (zlib not installed)
unknown platform, assuming -mfloat-abi=%0
support for linking stdlibs for microcontroller '%0' is not implemented
no avr-gcc installation can be found on the system, cannot link standard libraries
no avr-libc installation can be found on the system, cannot link standard libraries
support for passing the data section address to the linker for microcontroller '%0' is not implemented
no target microcontroller specified on command line, cannot link standard libraries, please pass -mmcu=<mcu name>
standard library not linked and so no interrupt vector table or compiler runtime routines will be linked
the clang compiler does not support '%0'
compiler_rt-static.a is being deprecated, please use -fapple-link-rtlib instead. Clang will substitute -lcompiler_rt-static with libclang_rt.a
SDK settings were ignored as 'SDKSettings.json' could not be parsed
argument '%0' is deprecated, use '%1' instead
libstdc++ is deprecated; move to libc++%select{ with a minimum deployment target of %1|}0
argument '%0' requires profile-guided optimization information
implicitly disabling vptr sanitizer because rtti wasn't enabled
debug information option '%0' is not supported. It needs DWARF-%2 but target '%1' only provides DWARF-%3.
joined argument expects additional value: '%0'
option '-ffine-grained-bitfield-accesses' cannot be enabled together with a sanitizer; flag ignored
'-fuse-ld=' taking a path is deprecated. Use '--ld-path=' instead
-fglobal-isel support for the '%0' architecture is incomplete
-fglobal-isel support is incomplete for this architecture at the current optimization level
%0: '%1' input unused%select{ when '%3' is present|}2
%0: '%1' input unused in cpp mode
falling back to %0
include path for libstdc++ headers not found; pass '-stdlib=libc++' on the command line to use the libc++ standard library instead
The '%0' architecture does not support -moutline-atomics; flag ignored
The '%0' architecture does not support -moutline; flag ignored
the given MCU supports %0 hardware multiply, but -mhwmult is set to %1.
no MCU device specified, but '-mhwmult' is set to 'auto', assuming no hardware multiply. Use -mmcu to specify a MSP430 device, or -mhwmult to set hardware multiply type explicitly.
the given MCU does not support hardware multiply, but -mhwmult is set to %0.
unable to find a Visual Studio installation; try running Clang from a developer command prompt
the object size sanitizer has no effect at -O0, but is explicitly enabled: %0
The OpenMP offloading target '%0' is similar to target '%1' already specified - will be ignored.
No library '%0' found in the default clang lib directory or in LIBRARY_PATH. Expect degraded performance due to no inlining of runtime functions on target devices.
optimization level '%0' is not supported; using '%1%2' instead
overriding '%0' option with '%1'
precompiled header '%0' was ignored because '%1' is not first '-include'
%0: previously preprocessed input%select{ unused when '%2' is present|}1
option '%0' was ignored by the PS4 toolchain, using '-fPIC'
environment variable SCE_ORBIS_SDK_DIR is set, but points to invalid or nonexistent directory '%0'
treating '%0' input as '%1' when in C++ mode, this behavior is deprecated
unable to find %0 directory, expected to be in '%1'
unknown argument ignored in clang-cl: '%0'
unknown argument ignored in clang-cl '%0'; did you mean '%1'?
Unknown CUDA version. %0 Assuming the latest supported version %1
debug information option '%0' is not supported for target '%1'
ignoring '-mgpopt' option as it cannot be used with %select{|the implicit usage of }0-mabicalls
ignoring '-mlong-calls' option as it is not currently supported with %select{|the implicit usage of }0-mabicalls
optimization flag '%0' is not supported for target '%1'
ignoring '%0' option as it cannot be used with %select{implicit usage of|}1 -mabicalls and the N64 ABI
ignoring '-msmall-data-limit=' with -mcmodel=large for -fpic or RV64
argument unused during compilation: '%0'
auto-vectorization requires HVX, use -mhvx to enable it
support for '/Yc' with more than one source file not implemented yet; flag ignored
support for '/Yc' and '/Yu' with different filenames not implemented yet; flags ignored
the flag '%0' has been deprecated and will be ignored
optimization flag '%0' is not supported
ignoring -fdiscard-value-names for LLVM Bitcode
ignoring invalid -ftabstop value '%0', using default value %1
using sysroot for '%0' but targeting '%1'
invalid iOS deployment version '%0', iOS 10 is the maximum deployment target for 32-bit targets
no such sysroot directory: '%0'
'/U%0' treated as the '/U' option
ignoring '-mabs=2008' option because the '%0' architecture does not support it
ignoring '-mabs=legacy' option because the '%0' architecture does not support it
ignoring '-mcompact-branches=' option because the '%0' architecture does not support it
ignoring extension '%0' because the '%1' architecture does not support it
ignoring '-mnan=2008' option because the '%0' architecture does not support it
ignoring '-mnan=legacy' option because the '%0' architecture does not support it
%select{alias|ifunc}0 must point to a defined %select{variable or |}1function
AVX vector %select{return|argument}0 of type %1 without '%2' enabled changes the ABI
%0 needs target feature %1
%select{alias|ifunc}0 definition is part of a cycle
definition with same mangled name '%0' as another definition
action %0 not compiled in
cannot link module '%0': %1
-dependency-file requires at least one -MT or -MQ option
error in backend: %0
error opening '%0': %1
error reading '%0'
error reading stdin: %0
expected a clang compiler command
unable to handle compilation, expected exactly one compiler job in '%0'
invalid value '%1' in '%0'; alignment must be a power of 2
cannot locate code-completion file %0
invalid exception model '%select{none|dwarf|sjlj|arm|seh|wasm|aix}0' for target '%1'
unable to find plugin '%0'
no suitable precompiled header file found in directory '%0'
could not remap from missing file '%0'
could not remap file '%0' to the contents of file '%1'
unable to create target: '%0'
unable to interface with target machine
unable to load basic block sections function list: '%0'
unable to load PCH file
unable to load plugin '%0': '%1'
unable to open output file '%0': '%1'
initializing value is out of valid range
always_inline function %1 requires target feature '%2', but would be inlined into function %0 that is compiled without support for '%2'
header module compilation requires '-fmodules', '-std=c++20', or '-fmodules-ts'
ifunc resolver function must return a pointer
inline asm is used in the module with -fno-gnu-inline-asm
invalid virtual filesystem overlay file '%0'
no module named '%0' declared in module map file '%1'
no module name provided; specify one with -fmodule-name=
virtual filesystem overlay file '%0' not found
module compilation requires '-fmodules'
cannot create includes file for module %0: %1
module header file '%0' not found
module interface compilation requires '-std=c++20' or '-fmodules-ts'
module map file '%0' not found
file '%0' specified by '-fmodules-embed-file=' not found
-fapinotes was provided without -fmodules-cache-path=<directory>
no submodule named %0 in module '%1'
no submodule named %0 in module '%1'; did you mean '%2'?
must specify system root with -isysroot when building a relocatable PCH file
test module file extension '%0' has different version (%1.%2) than expected (%3.%4)
reference to marker '%0' is ambiguous
'%0' diagnostics %select{expected|seen}1 but not %select{seen|expected}1: %2
invalid expected %0: %1
%select{expected|'expected-no-diagnostics'}0 directive cannot follow %select{'expected-no-diagnostics' directive|other expected directives}0
invalid range following '-' in expected %0
cannot find end ('}}') of expected %0
file '%0' could not be located in expected %1
missing or invalid line number following '@' in expected %0
cannot find start of regex ('{{') in %0
cannot find start ('{{') of expected %0
no expected directives found: consider use of 'expected-no-diagnostics'
use of undefined marker '%0'
firebloom is supported only for C language
could not determine the original source location for %0:%1:%2
instantiated into assembly here
FIX-IT applied suggested code changes
FIX-IT unable to apply suggested code changes
FIX-IT unable to apply suggested code changes in a macro
FIX-IT detected an error it cannot fix
current API version is '%0', but plugin was compiled with version '%1'
macro was %select{defined|#undef'd}0 here
module imported here
module defined here
ambiguous marker '%0' is defined here
%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop. If the arrays will always be independent specify '#pragma clang loop vectorize(assume_safety)' before the loop or provide the '__restrict__' qualifier with the independent array arguments. Erroneous results will occur if these options are incorrectly applied!
%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'.
producing index data for module file '%0'
building module '%0' as '%1'
finished building module '%0'
%select{alias|ifunc}2 will always resolve to %0 even if weak definition of %1 is overridden
%select{alias|ifunc}1 will not be in section '%0' but in the same section as the %select{aliasee|resolver}2
misaligned atomic operation may incur significant performance penalty; the expected alignment (%0 bytes) exceeds the actual alignment (%1 bytes)
large atomic operation may incur significant performance penalty; the access size (%0 bytes) exceeds the max lock-free size (%1  bytes)
AVX vector %select{return|argument}0 of type %1 without '%2' enabled changes the ABI
overriding currently unsupported use of floating point exceptions on this target
overriding currently unsupported rounding mode on this target
unable to open CC_LOG_DIAGNOSTICS file: %0 (using stderr)
unable to open CC_PRINT_HEADERS file: %0 (using stderr)
-fconcepts-ts is deprecated - use '-std=c++20' for Concepts support
stack frame size of %0 bytes in %q1
macro '%0' contains embedded newline; text after the newline is ignored
overriding the module target triple with %0
unable to open file %0 for serializing diagnostics (%1)
Received warning after diagnostic serialization teardown was underway: %0
unable to merge a subprocess's serialized diagnostics
unable to open statistics output file '%0': '%1'
FIX-IT detected errors it could not fix; no output will be generated
checker plugin '%0' is not compatible with this version of the analyzer
missing submodule '%0'
%select{definition|#undef}0 of configuration macro '%1' has no effect on the import of '%2'; pass '%select{-D%1=...|-U%1}0' on the command line to configure the module
module file %0 cannot be loaded due to a configuration mismatch with the current compilation
no submodule named %0 in module '%1'; using top level '%2'
OpenCL version %0 does not support the option '%1'
profile data may be incomplete: of %0 function%s0, %1 %plural{1:has|:have}1 no data
profile data may be out of date: of %0 function%s0, %1 %plural{1:has|:have}1 mismatched data that will be ignored
no profile data available for file "%0"
unknown %select{warning|remark}0 option '%1'%select{|; did you mean '%3'?}2
unknown %0 warning specifier: '%1'
file '%1' is not a valid precompiled %select{PCH|module|AST}0 file
%select{PCH|module|AST}0 file '%1' not found%select{|: %3}2
%select{PCH|module|AST}0 file '%1' is out of date and needs to be rebuilt%select{|: %3}2
file '%0' has been modified since the %select{precompiled header|module file|AST file}1 '%2' was built: %select{size|mtime|content}3 changed
input is not a PCH file: '%0'
file '%0' from the precompiled header has been overridden
malformed or corrupted AST file: '%0'
malformed block record in PCH file: '%0'
unable to read PCH file %0: '%1'
module '%0' %select{in|imported by}4 AST file '%1' found in a different module map file (%2) than when the importing AST file was built (%3)
module '%0' in AST file '%1' %select{(imported by AST file '%2') |}4is not defined in any loaded module map file; maybe you need to load '%3'?
module '%0' was built in directory '%1' but now resides in directory '%2'
module '%0' %select{uses|does not use}1 additional module map '%2'%select{| not}1 used when the module was built
module '%0' is defined in both '%1' and '%2'
module file '%0' is missing its top-level submodule
AST file '%0' was not built as a module
cannot emit module %0: %select{size|mtime}1 must be explicitly specified for missing header file "%2"
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%4 base %plural{1:class|:classes}4|%4 virtual base %plural{1:class|:classes}4|%ordinal4 base class with type %5|%ordinal4 %select{non-virtual|virtual}5 base class %6|%ordinal4 base class %5 with %select{public|protected|private|no}6 access specifier}3
%q0 has different definitions in different modules; %select{definition in module '%2' is here|defined here}1
instantiation of %q0 is different in different modules
%q0 has different definitions in different modules; %select{definition in module '%2'|defined here}1 first difference is %select{enum that is %select{not scoped|scoped}4|enum scoped with keyword %select{struct|class}4|enum %select{without|with}4 specified type|enum with specified type %4|enum with %4 element%s4|%ordinal4 element has name %5|%ordinal4 element %5 %select{has|does not have}6 an initilizer|%ordinal4 element %5 has an initializer|}3
%q0 has different definitions in different modules; %select{definition in module '%2'|defined here}1 first difference is %select{return type is %4|%ordinal4 parameter with name %5|%ordinal4 parameter with type %5%select{| decayed from %7}6|%ordinal4 parameter with%select{out|}5 a default argument|%ordinal4 parameter with a default argument|function body}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template|method|instance variable|property}3
%0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{static assert with condition|static assert with message|static assert with %select{|no }4message|field %4|field %4 with type %5|%select{non-|}5bitfield %4|bitfield %4 with one width expression|%select{non-|}5mutable field %4|field %4 with %select{no|an}5 initalizer|field %4 with an initializer|%select{method %5|constructor|destructor}4|%select{method %5|constructor|destructor}4 is %select{not deleted|deleted}6|%select{method %5|constructor|destructor}4 is %select{not defaulted|defaulted}6|%select{method %5|constructor|destructor}4 is %select{|pure }6%select{not virtual|virtual}7|%select{method %5|constructor|destructor}4 is %select{not static|static}6|%select{method %5|constructor|destructor}4 is %select{not volatile|volatile}6|%select{method %5|constructor|destructor}4 is %select{not const|const}6|%select{method %5|constructor|destructor}4 is %select{not inline|inline}6|%select{method %5|constructor|destructor}4 that has %6 parameter%s6|%select{method %5|constructor|destructor}4 with %ordinal6 parameter of type %7%select{| decayed from %9}8|%select{method %5|constructor|destructor}4 with %ordinal6 parameter named %7|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with%select{out|}7 a default argument|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with a default argument|%select{method %5|constructor|destructor}4 with %select{no |}6template arguments|%select{method %5|constructor|destructor}4 with %6 template argument%s6|%select{method %5|constructor|destructor}4 with %6 for %ordinal7 template argument|%select{method %5|constructor|destructor}4 with %select{no body|body}6|%select{method %5|constructor|destructor}4 with body|%select{typedef|type alias}4 name %5|%select{typedef|type alias}4 %5 with underlying type %6|data member with name %4|data member %4 with type %5|data member %4 with%select{out|}5 an initializer|data member %4 with an initializer|data member %4 %select{is constexpr|is not constexpr}5|friend %select{class|function}4|friend %4|friend function %4|function template %4 with %5 template parameter%s5|function template %4 with %ordinal5 template parameter being a %select{type|non-type|template}6 template parameter|function template %4 with %ordinal5 template parameter %select{with no name|named %7}6|function template %4 with %ordinal5 template parameter with %select{no |}6default argument|function template %4 with %ordinal5 template parameter with default argument %6|function template %4 with %ordinal5 template parameter with one type|function template %4 with %ordinal5 template parameter %select{not |}6being a template parameter pack|return type is %4|method name %4|%select{class|instance}4 method|method with %select{no designater initializer|designater initializer}4|%select{no direct|direct}4 method|instance variable '%4' access control is %select{|@private|@protected|@public|@package}5|property name %4|property %4 with type %5|%select{default |}5'%select{none|readonly|getter|assign|readwrite|retain|copy|nonatomic|setter|atomic|weak|strong|unsafe_unretained|nullability|null_resettable|class|}4' property attribute|%select{no|'required'|'optional'}4 %select{property|method}5 control|with %ordinal4 protocol named %5|%select{no attribute|%5}4|}3
%q0 %select{with definition in module '%2'|defined here}1 has different definitions in different modules; first difference is this %select{||||static assert|field|method|type alias|typedef|data member|friend declaration|unexpected decl|method|instance variable|property}3
%q0 from module '%1' is not present in definition of %q2%select{ in module '%4'| provided earlier}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%select{no super class|super class with type %5}4|%4 referenced %plural{1:protocol|:protocols}4|}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{unnamed template parameter|template parameter %4|template parameter with %select{no |}4default argument|template parameter with default argument}3
failed to hash content for '%0' because memory buffer cannot be retrieved
%0 is currently enabled, but was not in the PCH file
PCH file built from a different branch (%0) than the compiler (%1)
%0 was %select{disabled|enabled}1 in PCH file but is currently %select{disabled|enabled}2
%0 differs in PCH file vs. current file
definition of macro '%0' differs between the precompiled header ('%1') and the command line ('%2')
macro '%0' was %select{defined|undef'd}1 in the precompiled header but %select{undef'd|defined}1 on the command line
PCH was compiled with module cache path '%0', but the path is currently '%1'
%select{command line contains|precompiled header was built with}0 '-detailed-preprocessing-record' but %select{precompiled header was not built with it|it is not present on the command line}0
%select{AST file was|current translation unit is}0 compiled with the target feature '%1' but the %select{current translation unit is|AST file was}0 not
PCH file was compiled for the %0 '%1' but the current translation unit is being compiled for target '%2'
%select{command line contains|precompiled header was built with}0 '-undef' but %select{precompiled header was not built with it|it is not present on the command line}0
PCH file uses a newer PCH format that cannot be read
PCH file uses an older PCH format that is no longer supported
PCH file contains compiler errors
in first definition, possible difference is here
consider adding '%0' to the header search path
after modifying system headers, please delete the module cache at '%0'
imported by %select{|module '%2' in }1'%0'
but in '%0' found %select{%2 base %plural{1:class|:classes}2|%2 virtual base %plural{1:class|:classes}2|%ordinal2 base class with different type %3|%ordinal2 %select{non-virtual|virtual}3 base class %4|%ordinal2 base class %3 with %select{public|protected|private|no}4 access specifier}1
definition in module '%0' is here
but in '%0' found %select{enum that is %select{not scoped|scoped}2|enum scoped with keyword %select{struct|class}2|enum %select{without|with}2 specified type|enum with specified type %2|enum with %2 element%s2|%ordinal2 element has name %3|%ordinal2 element %3 %select{has|does not have}4 an initializer|%ordinal2 element %3 has different initializer|}1
but in '%0' found %select{different return type %2|%ordinal2 parameter with name %3|%ordinal2 parameter with type %3%select{| decayed from %5}4|%ordinal2 parameter with%select{out|}3 a default argument|%ordinal2 parameter with a different default argument|a different body}1
but in '%0' found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template|method|instance variable|property}1
but in '%0' found %select{static assert with different condition|static assert with different message|static assert with %select{|no }2message|field %2|field %2 with type %3|%select{non-|}3bitfield %2|bitfield %2 with different width expression|%select{non-|}3mutable field %2|field %2 with %select{no|an}3 initializer|field %2 with a different initializer|%select{method %3|constructor|destructor}2|%select{method %3|constructor|destructor}2 is %select{not deleted|deleted}4|%select{method %3|constructor|destructor}2 is %select{not defaulted|defaulted}4|%select{method %3|constructor|destructor}2 is %select{|pure }4%select{not virtual|virtual}5|%select{method %3|constructor|destructor}2 is %select{not static|static}4|%select{method %3|constructor|destructor}2 is %select{not volatile|volatile}4|%select{method %3|constructor|destructor}2 is %select{not const|const}4|%select{method %3|constructor|destructor}2 is %select{not inline|inline}4|%select{method %3|constructor|destructor}2 that has %4 parameter%s4|%select{method %3|constructor|destructor}2 with %ordinal4 parameter of type %5%select{| decayed from %7}6|%select{method %3|constructor|destructor}2 with %ordinal4 parameter named %5|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with%select{out|}5 a default argument|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with a different default argument|%select{method %3|constructor|destructor}2 with %select{no |}4template arguments|%select{method %3|constructor|destructor}2 with %4 template argument%s4|%select{method %3|constructor|destructor}2 with %4 for %ordinal5 template argument|%select{method %3|constructor|destructor}2 with %select{no body|body}4|%select{method %3|constructor|destructor}2 with different body|%select{typedef|type alias}2 name %3|%select{typedef|type alias}2 %3 with different underlying type %4|data member with name %2|data member %2 with different type %3|data member %2 with%select{out|}3 an initializer|data member %2 with a different initializer|data member %2 %select{is constexpr|is not constexpr}3|friend %select{class|function}2|friend %2|friend function %2|function template %2 with %3 template parameter%s3|function template %2 with %ordinal3 template paramter being a %select{type|non-type|template}4 template parameter|function template %2 with %ordinal3 template parameter %select{with no name|named %5}4|function template %2 with %ordinal3 template parameter with %select{no |}4default argument|function template %2 with %ordinal3 template parameter with default argument %4|function template %2 with %ordinal3 template parameter with different type|function template %2 with %ordinal3 template parameter %select{not |}4being a template parameter pack|different return type %2|method name %2|%select{class|instance}2 method|method with %select{no designater initializer|designater initializer}2|%select{no direct|direct}2 method|instance variable '%2' access control is %select{|@private|@protected|@public|@package}3|property name %2|property %2 with type %3|no written or default attribute for property|%select{no|'required'|'optional'}2 %select{property|method}3 control|with %ordinal2 protocol named %3|%select{no attribute|%3}2|}1
but in '%0' found %select{||||different static assert|different field|different method|different type alias|different typedef|different data member|different friend declaration|another unexpected decl|method|instance variable|property}1
definition has no member %0
but in '%0' found %select{%select{no super class|super class with type %3}2|%2 referenced %plural{1:protocol|:protocols}2|}1
declaration of %0 does not match
but in '%0' found %select{unnamed template parameter %2|template parameter %2|template parameter with %select{no |}2default argument|template parameter with different default argument}1
please rebuild precompiled header '%0'
'%0' required by '%1'
in second definition, possible difference is here
importing module '%0'%select{| into '%3'}2 from '%1'
duplicate module file extension block name '%0'
module file '%0' was validated as a system module and is now being imported as a non-system module; any difference in diagnostic options will be ignored
%select{precompiled header|module}0 uses __DATE__ or __TIME__
backslash and newline separated by space
_Pragma takes a parenthesized string literal
illegal character encoding in character literal
illegal character encoding in string literal
character too large for enclosing character literal type
version control conflict marker in file
'defined' cannot be used as a macro name
could not find ';' after @import
unexpected extra tokens at end of @import declaration
digit separator cannot appear at %select{start|end}0 of digit sequence
embedding a #%0 directive within macro arguments is not supported
%select{hex|octal}0 escape sequence out of range
expected a module name in '__building_module' expression
exponent has no digits
builtin feature check macro requires a parenthesized identifier
header file %0 (aka '%1') cannot be imported because it is not known to be a header unit
semicolon terminating header import declaration cannot be produced by a macro
hexadecimal floating %select{constant|literal}0 requires %select{an exponent|a significand}1
\%0 used with no following hex digits
invalid character '%0' character in raw string delimiter; use PREFIX( )PREFIX to delimit raw string
invalid argument to convert to character
invalid digit '%0' in %select{decimal|octal|binary}1 constant
invalid suffix '%0' on %select{integer|floating|fixed-point}1 constant
source file is not valid UTF-8
failure when lexing a string
configuration macros are only allowed in top-level modules
conflicting re-export of module '%0' as '%1' or '%2'
header attribute '%0' specified multiple times
expected an attribute name
expected configuration macro name after ','
expected ',' after conflicting module name
expected a message describing the conflict with '%0'
only '*' can be exported from an inferred submodule
expected a feature name
expected a header name after '%0'
expected a header attribute name ('size' or 'mtime')
expected %select{module exclusion with 'exclude'|'export *'}0
expected '{' to start module '%0'
expected '{' to start inferred submodule
expected %select{library|framework}0 name as a string
expected umbrella, header, submodule, or module export
expected a module map file name
expected module declaration
expected module name
expected '}'
expected ']' to close attribute
inferred framework modules cannot be 'explicit'
'explicit' is not permitted on top-level modules
inferred submodule cannot be a framework submodule
inferred submodules require a module with an umbrella
redefinition of inferred submodule
expected integer literal as value for header attribute '%0'
expected excluded module name
no module named '%0' in '%1'
no module named '%0' visible from '%1'
no module named '%0' %select{found|in '%2'}1, parent module must be defined before the submodule
expected a module name or '*'
redefinition of module '%0'
qualified module name can only be used to define modules at the top level
only top-level modules can be re-exported as public
only submodules and framework modules may be inferred with wildcard syntax
umbrella for module '%0' already covers this directory
skipping stray token
use declarations are only allowed in top-level modules
Unicode character literals may not contain multiple characters
non-ASCII characters are not allowed outside of literals and identifiers
Pascal string is too long
'##' cannot appear at end of macro expansion
'##' cannot appear at start of macro expansion
editor placeholder in source file
expected 'set(attr1 [attr2 ...])'
expected 'begin' or 'end'
expected 'begin' or 'end'
pasting formed '%0', an invalid preprocessing token
':' without preceding '?'
%0 must be used within a preprocessing directive
division by zero in preprocessor expression
already inside '#pragma clang arc_cf_code_audited'
already inside '#pragma clang assume_nonnull'
duplicate macro parameter name %0
empty filename
#endif without #if
'#pragma clang arc_cf_code_audited' was not ended within this file
'#pragma clang assume_nonnull' was not ended within this file
error opening file '%0': %1
missing %1 after %0
expected comma in macro parameter list
expected end of line in preprocessor expression
expected identifier in macro parameter list
expected %select{identifier after '.' in |}0module name
expected ')' in preprocessor expression
expected value in expression
expected "FILENAME" or <FILENAME>
token is not a valid binary operator in a preprocessor subexpression
function-like macro %0 is not defined
invalid token at start of a preprocessor expression
'%0' file not found
'%0' file not found with <angled> %select{include|import}1; use "quotes" instead
'%0' file not found, did you mean '%1'?
cannot convert %0 token to an identifier
floating point literal in preprocessor expression
#import of type library is an unsupported Microsoft feature
cannot %select{#include files|import headers}0 inside '#pragma clang arc_cf_code_audited'
cannot %select{#include files|import headers}0 inside '#pragma clang assume_nonnull'
#include nested too deeply
main file cannot be included recursively when building a preamble
invalid preprocessing directive
can only poison identifier tokens
invalid token in macro parameter list
%select{character|integer}0 literal with user-defined suffix cannot be used in preprocessor constant expression
%select{#line|GNU line marker}0 directive requires a simple digit sequence
invalid filename for #line directive
#line directive requires a positive integer argument
invalid filename for line marker directive
invalid flag line marker directive
invalid line marker flag '2': cannot pop empty include stack
line marker directive requires a positive integer argument
macro name must be an identifier
invalid #ident directive
missing '(' following __VA_OPT__
macro name missing
missing ')' in macro parameter list
no module map available for module %0
submodule %0.%1 not declared in module map
no matching '#pragma clang module end' for this '#pragma clang module begin'
must specify '-fmodule-name=%0' to enter %select{|submodule of }1this module%select{ (current module is %3)|}2
no matching '#pragma clang module endbuild' for this '#pragma clang module build'
no matching '#pragma clang module begin' for this '#pragma clang module end'
nested parentheses not permitted in %0
C++ operator %0 (aka %1) used as a macro name
#pragma hdrstop not seen while attempting to use precompiled header
remainder by zero in preprocessor expression
'%select{#|#@}0' is not followed by a macro parameter
'%0' required for precompiled header not found
#include of '%0' not seen while attempting to %select{create|use}1 precompiled header
not currently inside '#pragma clang arc_cf_code_audited'
not currently inside '#pragma clang assume_nonnull'
unterminated conditional directive
attempt to use a poisoned identifier
__VA_OPT__ cannot be nested within its own replacement tokens
no macro named %0
pragma %select{message|warning|error}0 requires parenthesized string
pragma %0 requires a parenthesized string
raw string delimiter longer than 16 characters; use PREFIX( )PREFIX to delimit raw string
differing user-defined suffixes ('%0' and '%1') in string literal concatenation
too few arguments provided to function-like macro invocation
too many arguments provided to function-like macro invocation
universal character name refers to a control character
character '%0' cannot be specified by a universal character name
incomplete universal character name
invalid universal character
module %0 does not depend on a module exporting '%1'
unsupported non-standard concatenation of string literals
unterminated function-like macro invocation
missing terminating ')' character
unterminated /* comment
raw string missing terminating delimiter )%0"
'##' cannot appear at end of __VA_OPT__ argument
'##' cannot appear at start of __VA_OPT__ argument
escaped newline between */ characters at block comment end
binary integer literals are a GNU extension
binary integer literals are a C++14 extension
ISO C99 requires whitespace after the macro name
charizing operator #@ is a Microsoft extension
pasting two '/' tokens into a '//' comment is a Microsoft extension
treating Ctrl-Z as end-of-file is a Microsoft extension
'$' in identifier
embedding a directive within macro arguments has undefined behavior
empty character constant
empty macro arguments are a C99 feature
hexadecimal floating constants are a C99 feature
hexadecimal floating literals are a C++17 feature
// comments are not allowed in this language
must specify at least one argument for '...' parameter of variadic macro
whitespace required after macro name
invalid suffix on literal; C++11 requires a space between literal and identifier
multi-line // comment
named variadic macros are a GNU extension
no newline at end of file
use of non-standard escape character '\%0'
expected 'ON' or 'OFF' or 'DEFAULT' in pragma
token pasting of ',' and __VA_ARGS__ is a GNU extension
pasting formed '%0', an invalid preprocessing token
__VA_ARGS__ can only appear in the expansion of a C99 variadic macro
__VA_OPT__ can only appear in the expansion of a variadic macro
comma operator in operand of #if
extra tokens at end of #%0 directive
#ident is a language extension
#import is a language extension
#include_next is a language extension
#include resolved using non-portable Microsoft search rules as: %0
C requires #line number to be less than %0, allowed as extension
#line directive with zero argument is a GNU extension
%0 macro redefined
variadic macros are a Clang extension in OpenCL
C++ operator %0 (aka %1) used as a macro name
redefining builtin macro
undefining builtin macro
#warning is a language extension
expected end of directive in pragma
invalid suffix on literal; C++11 requires a space between literal and identifier
string literal of length %0 exceeds maximum length %1 that %select{C90|ISO C99|C++}2 compilers are required to support
extension used
treating Unicode character as whitespace
unknown escape sequence '\%0'
missing terminating %select{'|'"'}0 character
variadic macros are a C99 feature
%0 is defined here; did you mean %1?
submodule of top-level module '%0' implicitly imported here
cannot use initializer list at the beginning of a macro argument
expansion of macro %0 requested here
macro %0 defined here
use 'framework module' to declare module '%0'
to match this '{'
to match this ']'
previously defined here
rename '%0' to ensure it can be found by name
expanding this definition of %0
other definition of %0
did not find header '%0' in framework '%1' (loaded from '%2')
entering module '%0' due to this pragma
parentheses are required around macro argument containing braced initializer list
did you mean to use '\u'?
null character(s) preserved in %select{char|string}0 literal
null character ignored
disabled expansion of recursive macro
#elif after #else
#elif without #if
#else after #else
#else without #if
the #__include_macros directive is only for internal use by -imacros
#include_next in file found relative to primary source file or found by absolute path; will search from start of include path
#include_next in primary source file; will search from start of include path
invalid string literal, ignoring final '\'
macro is not used
non-portable path to file '%0'; specified path differs in case from file name on disk
non-portable path to file '%0'; specified path differs in case from file name on disk
current file is older than dependency %0
poisoning existing macro
#pragma once in main file
#pragma system_header ignored in main file
trigraph converted to '%0' character
trigraph ends block comment
trigraph ignored
ignored trigraph would end block comment
treating #%select{include|import|include_next|__include_macros}0 as an import of module '%1'
illegal character encoding in character literal
illegal character encoding in string literal
%select{using this character in an identifier|starting an identifier with this character}0 is incompatible with C99
unicode literals are incompatible with C99
character constant too long for its type
binary integer literals are incompatible with C++ standards before C++14
digit separators are incompatible with C++ standards before C++14
identifier after literal will be treated as a reserved user-defined literal suffix in C++11
identifier after literal will be treated as a user-defined literal suffix in C++11
'%0' is a keyword in C++11
unicode literals are incompatible with C++ standards before C++17
'<=>' operator is incompatible with C++ standards before C++20
hexadecimal floating literals are incompatible with C++ standards before C++17
'<=>' is a single token in C++20; add a space to avoid a change in behavior
'%0' is a keyword in C++20
empty macro arguments are incompatible with C++98
'<::' is treated as digraph '<:' (aka '[') followed by ':' in C++98
universal character name referring to a control character is incompatible with C++98
specifying character '%0' with a universal character name is incompatible with C++98
C++98 requires newline at end of file
#line number greater than 32767 is incompatible with C++98
raw string literals are incompatible with C++98
using this character in an identifier is incompatible with C++98
unicode literals are incompatible with C++98
variadic macros are incompatible with C++98
macro expansion producing 'defined' has undefined behavior
macro expansion producing 'defined' has undefined behavior
extraneous characters in character constant ignored
multi-character character constant
public framework header includes private framework header '%0'
__has_warning expected option name (e.g. "-Wundef")
%0 is used as a header guard here, followed by #define of a different macro
whitespace recommended after macro name
skipping '%0' because module declaration of '%1' lacks the 'framework' qualifier
expected canonical name for private module '%0'
private submodule '%0' in private module map, expected top-level module
module '%0' already re-exported as '%1'
umbrella directory '%0' not found
unknown attribute '%0'
module '%0' conflicts with already-imported module '%1': %2
multi-character character constant
'/*' within block comment
no newline at end of file
include of non-modular header inside framework module '%0': '%1'
include of non-modular header inside module '%0': '%1'
ambiguous expansion of macro %0
%select{left|right}0 side of operator converted from negative value to unsigned: %1
expansion of date or time macro is not reproducible
integer overflow in preprocessor expression
#pragma hdrstop filename not supported, /Fp can be used to specify precompiled header filename
%select{#line|GNU line marker}0 directive interprets number as decimal, not octal
definition of macro %0 does not match definition in precompiled header
keyword is hidden by macro definition
macro name is a reserved identifier
ignoring redefinition of Objective-C qualifier macro
%0 is not defined, evaluates to 0
%0 is not defined, evaluates to 0
missing argument to debug command '%0'
unexpected debug command '%0'
unknown module '%0'
pragma diagnostic pop could not pop, no matching push
pragma diagnostic expected 'error', 'warning', 'ignored', 'fatal', 'push', or 'pop'
pragma diagnostic expected option name (e.g. "-Wundef")
unexpected token in pragma diagnostic
unknown warning group '%0', ignored
#pragma execution_character_set expected '%0'
#pragma execution_character_set invalid value '%0', only 'UTF-8' is supported
#pragma execution_character_set expected 'push' or 'pop'
unknown pragma ignored
pragma include_alias expected '%0'
pragma include_alias expected include filename
angle-bracketed include <%0> cannot be aliased to double-quoted include "%1"
double-quoted include "%0" cannot be aliased to angle-bracketed include <%1>
pragma pop_macro could not pop '%0', no matching push_macro
#pragma warning expected '%0'
#pragma warning expected a warning number
#pragma warning(push, level) requires a level between 0 and 4
#pragma warning expected 'push', 'pop', 'default', 'disable', 'error', 'once', 'suppress', 1, 2, 3, or 4
double-quoted include "%0" in framework header, expected angle-bracketed instead
incomplete universal character name; treating as '\' followed by identifier
\%0 used with no following hex digits; treating as '\' followed by identifier
universal character name refers to a surrogate character
universal character names are only valid in C99 or C++; treating as '\' followed by identifier
universal character names are only valid in C99 or C++
umbrella header for module '%0' does not include header '%1'
use of private header from outside its module: '%0'
treating Unicode character <U+%0> as identifier character rather than as '%1' symbol
identifier contains Unicode character <U+%0> that is invisible in some environments
interface types cannot specify '%select{private|protected}0' access
use of address-of-label extension outside of a function body
name defined in alias declaration must be an identifier
alias declaration cannot be a pack expansion
%select{partial specialization|explicit specialization|explicit instantiation}0 of alias templates is not permitted
anonymous bit-field cannot have a default member initializer
declaration of anonymous %0 must be a definition
ISO C++ only allows ':' in member enumeration declaration to introduce a fixed underlying type, not an anonymous bit-field
unknown cast annotation __bridge_retain; did you mean __bridge_retained?
argument required after attribute
duplicate asm qualifier '%0'
__asm used with no assembly instructions
cannot use %select{unicode|wide|an empty}0 string literal in 'asm'
expected 'volatile', 'inline', 'goto', or '('
@defs is not supported in Objective-C++
unexpected '@' in member specification
use of '@import' when modules are disabled
use of '@import' when C++ modules are disabled, consider using -fmodules and -fcxx-modules
%0 attribute cannot be applied to a module import
%0 attribute cannot be applied to a module
parentheses must be omitted if %0 attribute's argument list is empty
misplaced attributes; expected attributes here
an attribute list cannot appear here
expected a platform name here
unrecognized platform name %0
expected 'introduced', 'deprecated', or 'obsoleted'
expected a platform name, e.g., 'macos'
version for '%0' already specified
'*' query has already been specified
must handle potential future platforms with '*'
redundant %0 availability change; only the last specified change will be used
%0 is not an availability stage; use 'introduced', 'deprecated', or 'obsoleted'
redeclaration of C++ built-in type 'bool'
bracket nesting level exceeded maximum of %0
brackets are not allowed here; to declare an array, place the brackets after the %select{identifier|name}0
'_Noreturn' keyword must precede function declarator
capture default must be first
template template parameter requires 'class' after the parameter list
name defined in concept definition must be an identifier
missing return type for function %0; did you mean the constructor name %1?
missing ',' between base or member initializers
attribute %0 cannot have an argument list
attribute %0 cannot be used as an attribute pack
attribute %0 cannot appear multiple times in an attribute specifier
declaration does not declare a parameter
'%0' qualifier may not appear after the virtual specifier '%1'
unexpected end of default argument expression
'= %select{default|delete}0' is a function definition and must occur in a standalone declaration
default template argument for a template template parameter must be a class template
destructor name %0 does not refer to a template
expected a class name after '~' to name a destructor
'~' in destructor name should be after nested name specifier
duplicate 'virtual' in base specifier
duplicate default generic association
class member already marked '%0'
cannot have both throw() and noexcept() clause on the same function
use of empty enum
a requires expression must contain at least one requirement
missing ',' between enumerators
unnamed enumeration must be a definition
unexpected end of exception specification
'#pragma omp end assumes' with no matching '#pragma omp begin assumes'
'#pragma omp end declare variant' with no matching '#pragma omp begin declare variant'
expected variable name or 'this' in lambda capture list
expected 'case' keyword before expression
expected catch
expected class name
'typename' is redundant; base classes are implicitly types
expected '::' after '__super'
expected ',' or '>' in template-parameter-list
expected ',' or ']' in lambda capture list
expected '#pragma omp end declare %select{target|variant}0'
expected '= constant-expression' or end of enumerator definition
expected '=' or another designator
expected expression
expected external declaration
expected a field designator, such as '.field = 4'
expected function body after function declarator
expected a foldable binary operator in fold expression
variable declaration in condition must have an initializer
variable declaration in condition cannot have a parenthesized initializer
expected body of lambda expression
expected '{' after base class list
expected '{' in compound literal
expected '<' after '%0'
expected '(' after '%0'
expected '(' for function-style cast or type construction
expected member name or ';' after declaration specifiers
expected member name or ';' after declaration specifiers; %0 is a keyword in Objective-C++
expected class member or base class name
expected method body
method type specifier must start with '-' or '+'
'@end' must appear in an Objective-C context
expected the name of a parameter pack
expected parentheses around type name in %0 expression
expected property name
expected ')' or ',' after '%0'
expected a qualified name after 'typename'
expected ')' after '%0'
expected selector for Objective-C method
expected ';' after attribute list
expected ';' after expression
expected ';' after method prototype
expected ';' after namespace name
expected ';' after static_assert
expected ';' after %0 statement
expected ';' at end of declaration list
expected ';' at end of declaration
expected ';' in 'for' statement specifier
expected ';' at end of requirement
expected 'this' following '*' in lambda capture list
expected statement
expected template
expected template parameter
expected %0; %1 is a keyword in Objective-C++
expected a type
expected an identifier or template-id after '::'
expected %select{identifier|unqualified-id}0
expected a version of the form 'major[.minor[.subminor]]'
expected 'while' in do/while loop
enumerations cannot be explicitly instantiated
explicit template instantiation cannot have a definition; if this definition is meant to be an explicit specialization, add '<>' after the 'template' keyword
explicit %select{specialization|instantiation}0 of %select{non-|undeclared }3template %1 %2
export declaration cannot be empty
duplicate %0 clause in an 'external_source_symbol' attribute
expected 'language', 'defined_in', or 'generated_declaration'
extraneous closing brace ('}')
extraneous ')' after condition, expected a statement
extraneous '%0' before ';'
operators in fold expression must be the same
'co_await' modifier can only be applied to range-based for loop
for range declaration must declare a variable
range-based for loop requires type for loop variable
cannot define a type in a friend declaration
friend cannot be declared in an explicit instantiation; if this declaration is meant to be a friend declaration, remove the 'template' keyword
'friend' used outside of class
function definition does not declare parameters
function definition declared 'typedef'
function definition is not allowed here
unexpected %0 in function call; perhaps remove the %0?
function scope depth exceeded maximum of %0
meaningless '%0' on asm outside function
'module;' introducing a global module fragment can appear only at the start of the translation unit
GNU-style inline assembly is disabled
expected template name after 'template' keyword in nested name specifier
%0 declared as a reference to a reference
cannot cast 'super' (it isn't an expression)
array bound cannot be deduced from a default member initializer
initializer list cannot be used on the %select{left|right}0 hand side of operator '%1'
namespace alias cannot be inline
nested namespace definition cannot be 'inline'
cannot use %select{dot|arrow}0 operator on a type
'%0' qualifier may not be applied to a reference
invalid %0 at end of declaration; did you mean '='?
expected ';' after top level declarator
invalid parameter name: '%0' is a keyword
C++11 only allows consecutive left square brackets when introducing an attribute
label at end of compound statement: expected statement
'[]' after delete interpreted as 'delete[]'; add parentheses to treat this as a lambda-expression
ellipsis in pack %select{|init-}0capture must appear %select{after|before}0 the name of the capture
multiple ellipses in pack capture
%select{'mutable'|'constexpr'|'consteval'}0 cannot appear multiple times in a lambda declarator
lambda requires '()' before %select{'mutable'|return type|attribute specifier|'constexpr'|'consteval'|'requires' clause}0
lambda template parameter list cannot be empty
string literal after 'operator' must be '""'
string literal after 'operator' cannot have an encoding prefix
'...' must %select{immediately precede declared identifier|be innermost component of anonymous pack declaration}0
expected %0 at end of module
@try statement without a @catch and @finally clause
C requires a comma prior to the ellipsis in a variadic function type
use 'template' keyword to treat '%0' as a dependent template name
missing '}' at end of definition of %q0
expected parameter declarator
found '<::' after a %select{template name|addrspace_cast|const_cast|dynamic_cast|reinterpret_cast|static_cast}0 which forms the digraph '<:' (aka '[') and a ':', did you mean '< ::'?
expected a module name after '%select{module|import}0'
expected ';' after module name
%select{global|private}0 module fragment cannot be exported
'__declspec' attributes are not enabled; use '-fdeclspec' or '-fms-extensions' to enable support for __declspec attributes
__declspec attributes must be an identifier or string literal
property declaration specifies '%0' accessor twice
expected name of accessor method
expected ',' or ')' at end of property accessor list
expected '=' after '%0'
putter for property must be specified as 'put', not 'set'
property declaration cannot have a default member initializer
missing 'get=' or 'put='
property does not specify a getter or a putter
expected 'get' or 'put' in property declaration
MS-style inline assembly is not available: %0
Unsupported architecture '%0' for MS-style inline assembly
%select{|a template declaration|an explicit template specialization|an explicit template instantiation}0 can only %select{|declare|declare|instantiate}0 a single entity
namespaces can only be defined in global or namespace scope
parameter named %0 is missing
@%0 must be followed by a number to form an NSNumber object
unexpected token after Objective-C string
directive may only be specified in protocols only
expected '=' for Objective-C getter
expected '=' for Objective-C setter
unknown property attribute %0
expected selector for Objective-C %select{setter|getter}0
expected type parameter name
illegal interface qualifier
illegal visibility specification
missing '@end'
@implementation cannot have type parameters
postfix attributes are not allowed on Objective-C directives
postfix attributes are not allowed on Objective-C directives, place them in front of '%select{@interface|@protocol}0'
property name cannot be a bit-field
property requires fields to be named
protocol qualifiers must precede type arguments
'@end' appears where closing brace '}' is expected
prefix attribute must be followed by an interface, protocol, or implementation
expected an Objective-C directive after '@'
expected a related ObjectiveC class name, e.g., 'NSColor'
expected a class method selector with single argument, e.g., 'colorWithCGColor:'
function declaration is expected after 'declare %select{simd|variant}0' directive
unexpected '%0' clause, '%1' is specified already
unexpected '%0' clause, only %select{'to' or 'link'|'to', 'link' or 'device_type'}1 clauses expected
nested OpenMP context selector contains duplicated trait '%0' in selector '%1' and set '%2' with different score
nested user conditions in OpenMP context selector not supported (yet)
expected '%0' clause on 'omp declare variant' directive
expected at least one clause on '#pragma omp %0' directive
expected '=' in iterator specifier
expected identifier specifying the name of the 'omp critical' directive
expected ',' or ')' in '%0' %select{clause|directive}1
expected ',' or ')' after iterator specifier
expected identifier or one of the following operators: '+', '-', '*', '&', '|', '^', '&&', or '||'
'#pragma omp %0' %select{|with '%2' clause }1cannot be an immediate substatement
data-sharing attribute '%0' in '%1' clause requires OpenMP version %2 or above
missing map type
missing map type modifier
expected declarator on 'omp declare mapper' directive
illegal OpenMP user-defined mapper identifier
unexpected OpenMP clause '%0' in directive '#pragma omp %1'
unexpected OpenMP directive %select{|'#pragma omp %1'}0
expected an OpenMP directive
incorrect map type, expected one of 'to', 'from', 'tofrom', 'alloc', 'release', or 'delete'
incorrect map type modifier, expected 'always', 'close', %select{or 'mapper'|'mapper', or 'present'}0
only a single match extension allowed per OpenMP context selector
^^ is a reserved operator in OpenCL
taking address of function is not allowed
OpenCL only supports 'opencl_unroll_hint' attribute on for, while, and do statements
virtual functions are not supported in C++ for OpenCL
out-of-line constructor for %0 cannot have template arguments
'%0' keyword not permitted with interface types
missing parentheses around the size of parameter pack %0
expected 'auto' or 'decltype(auto)' after concept name
expression cannot be followed by a postfix %0 operator; add parentheses
duplicate attribute subject matcher '%0'
expected an attribute after '('
expected identifier that represents an attribute name
expected an attribute that is specified using the GNU, C++11 or '__declspec' syntax
expected '.' after pragma attribute namespace %0
expected 'push', 'pop', or '(' after '#pragma clang attribute'
expected an identifier that corresponds to an attribute subject rule
expected an identifier that corresponds to an attribute subject matcher sub-rule; '%0' matcher %select{does not support sub-rules|supports the following sub-rules: %2|}1
extra tokens after attribute in a '#pragma clang attribute push'
unexpected argument '%0' to '#pragma clang attribute'; expected 'push' or 'pop'
expected attribute subject set specifier 'apply_to'
more than one attribute specified in '#pragma clang attribute push'
namespace can only apply to 'push' or 'pop' directives
unknown attribute subject rule '%0'
%select{invalid use of|unknown}2 attribute subject matcher sub-rule '%0'; '%1' matcher %select{does not support sub-rules|supports the following sub-rules: %3}2
attribute %0 is not supported by '#pragma clang attribute'
force_cuda_host_device end pragma without matching force_cuda_host_device begin
expected '=' following '#pragma clang section %select{invalid|bss|data|rodata|text|relro}0'
pragma comment requires parenthesized identifier and optional string
unknown kind of pragma comment
pragma detect_mismatch is malformed; it requires two comma-separated string literals
expected one of [bss|data|rodata|text|relro] section kind in '#pragma %0'
expected an integer argument in '#pragma %0'
'#pragma %0' can only appear at file scope or at the start of a compound statement
pragma float_control is malformed; use 'float_control({push|pop})' or 'float_control({precise|except}, {on|off} [,push])'
unexpected argument '%0' to '#pragma clang fp %1'; expected %select{'fast' or 'on' or 'off'|'on' or 'off'|'ignore', 'maytrap' or 'strict'}2
%select{invalid|missing}0 option%select{ %1|}0; expected 'contract', 'reassociate' or 'exceptions'
invalid argument; expected 'enable'%select{|, 'full'}0%select{|, 'assume_safety'}1 or 'disable'
%select{invalid|missing}0 option%select{ %1|}0; expected vectorize, vectorize_width, interleave, interleave_count, unroll, unroll_count, pipeline, pipeline_initiation_interval, vectorize_predicate, or distribute
missing argument; expected %select{an integer value|'enable'%select{|, 'full'}1%select{|, 'assume_safety'}2 or 'disable'}0
this pragma cannot appear in %0 declaration
missing argument to '#pragma %0'%select{|; expected %2}1
unexpected extra argument '%0' to '#pragma clang optimize'
unexpected argument '%0' to '#pragma clang optimize'; expected 'on' or 'off'
invalid argument; expected 'disable'
unexpected %0, expected to see one of %select{|'best_case', 'full_generality', }1'single_inheritance', 'multiple_inheritance', or 'virtual_inheritance'
'#pragma STDC FENV_ACCESS' can only appear at file scope or at the start of a compound statement
expected ';' after private module fragment declaration
trailing requires clause should be placed outside parentheses
trailing return type must appear before trailing requires clause
trailing requires clause can only be used when declaring a function
expected concept name with optional arguments
expected '->' before expression type requirement
varargs not allowed in requires expression
'noexcept' can only be used in a compound requirement (with '{' '}' around the expression)
a space is required between a right angle bracket and an equals sign (use '> =')
scoped enumeration requires a name
range-based 'for' statement uses ':', not '='
expected parenthesized parameter pack name in 'sizeof...' expression
statement expression not allowed at file scope
'__super' cannot be used with a using declaration
expected a property name in @synthesize
%select{function|class|variable}0 cannot be defined in an explicit instantiation; if this declaration is meant to be a %select{function|class|variable}0 definition, remove the 'template' keyword
identifier followed by '<' indicates a class template specialization but %0 %select{does not refer to a template|refers to a function template|<unused>|refers to a variable template|<unused>|refers to a concept}1
a static_assert declaration cannot be a template
cannot template a using %select{directive|declaration}0
'this' cannot be captured by reference
a space is required between consecutive right angle brackets (use '> >')
invalid comparison flag %0; use 'layout_compatible' or 'must_be_null'
type trait requires %0%select{| or more}1 argument%select{|s}2; have %3 argument%s3
unparsed tokens following type
typename is allowed for identifiers only
type name does not allow %select{<ERROR>|constexpr|consteval|constinit}0 specifier to be specified
type name does not allow function specifier to be specified
type name does not allow storage class to be specified
typename specifier refers to a non-type template
type name requires a specifier or qualifier
unexpected '@' in program
unexpected ':' in nested name specifier; did you mean '::'?
module declaration can only appear at the top level
attributes cannot be specified on namespace alias
attributes cannot be specified on a nested namespace definition
@implementation declaration cannot be protocol qualified
unexpected namespace scope prior to decltype
unexpected ';' before %0
'template' keyword not permitted after 'using' keyword
'template' keyword not permitted in destructor name
'template' keyword not permitted here
'%0' cannot be a part of nested name specifier; did you mean ':'?
unexpected type name %0: expected identifier
type-id cannot have a name
unknown template name %0
parentheses are required around this expression in a requires clause
'static' may not be used without an array size
'static' may not be used with an unspecified variable length array size
sorry, module partitions are not yet supported
attribute with scope specifier cannot follow default scope specifier
'using namespace' is not allowed in classes
version number must have non-zero major, minor, or sub-minor version
ISO C++11 requires a parenthesized pack declaration to have a name
alias declarations are a C++11 extension
%0 applied to an expression is a GNU extension
'auto' storage class specifier is not permitted in C++11, and will not be supported in future releases
'__auto_type' is a GNU extension
default member initializer for bit-field is a C++20 extension
'%0' is a C11 extension
compound literals are a C99-specific feature
'%0' is a C99 extension
variable declaration in for loop is a C99-specific feature
enumeration types with a fixed underlying type are a Clang extension
ISO C++20 does not permit the 'bool' keyword after 'concept'
constexpr if is a C++17 extension
'constexpr' on lambda expressions is a C++17 extension
ISO C++ does not allow an attribute list to appear here
enumeration types with a fixed underlying type are a C++11 extension
'decltype(auto)' type specifier is a C++14 extension
ISO C++17 does not allow a decomposition group to be empty
%select{defaulted|deleted}0 function definitions are a C++11 extension
ISO C++17 does not allow dynamic exception specifications
reference to enumeration must use 'enum' not 'enum %select{struct|class}0'
exception specification of '...' is a Microsoft extension
ISO C requires a translation unit to contain at least one declaration
non-defining declaration of enumeration with a fixed underlying type is only permitted as a standalone declaration%select{|; missing list of enumerators?}0
commas at the end of enumerator lists are a C99-specific feature
commas at the end of enumerator lists are a C++11 extension
expected ';' at end of declaration list
explicit(bool) is a C++20 extension
extern templates are a C++11 extension
extra ';' %select{outside of a function|inside a %1|inside instance variable list|after member function definition}0
extra ';' outside of a function is a C++11 extension
pack fold expression is a C++17 extension
range-based for loop is a C++11 extension
range-based for loop initialization statements are a C++20 extension
generalized initializer lists are a C++11 extension
use of GNU address-of-label extension
use of GNU array range extension
use of GNU case range extension
use of GNU ?: conditional expression extension, omitting middle operand
use of GNU empty initializer extension
use of GNU indirect-goto extension
use of GNU 'missing =' extension in designator
use of GNU old-style field designator extension
use of GNU statement expression extension
type-less parameter names in function declaration
'%select{if|switch}0' initialization statements are a C++17 extension
inline namespaces are a C++11 feature
inline nested namespace definition is a C++20 extension
keyword '%0' will be made available as an identifier %select{here|for the remainder of the translation unit}1
explicit template parameter list for lambdas is a C++20 extension
enumeration types with a fixed underlying type are a Microsoft extension
'sealed' keyword is a Microsoft extension
use of multiple declarators in a single using declaration is a C++17 extension
nested namespace definition is a C++17 extension; define each namespace separately
default member initializer for non-static data member is a C++11 extension
attributes on %select{a namespace|an enumerator}0 declaration are a C++17 extension
type nullability specifier %0 is a Clang extension
'%0' keyword is a C++11 extension
reference qualifiers on functions are a C++11 extension
rvalue references are a C++11 extension
scoped enumerations are a C++11 extension
static_assert with no message is a C++17 extension
unknown pragma in STDC namespace
template template parameter using 'typename' is a C++17 extension
'__thread' before '%0'
default scope specifier for attributes is a C++17 extension
pack expansion of using declaration is a C++17 extension
__final is a GNU extension, consider using C++11 final
use -fbracket-depth=N to increase maximum nesting level
%select{|second }0%1 token is here
use '%0' instead
comma separating Objective-C messaging arguments
or insert whitespace before ':' to use %0 as parameter name and have an empty entry in the selector
total token limit set here
did you mean to use 'typename'?
insert ',' before '...' to silence this warning
place '...' %select{immediately before declared identifier|here}0 to declare a function parameter pack
preceding '...' declares a function parameter pack
still within definition of %q0 here
introduce a parameter name to make %0 part of the selector
%select{class|protocol|category|class extension|implementation|category implementation}0 started here
the ignored tokens spans until here
the context property '%0' can be nested in the context selector '%1' which is nested in the context set '%2'; try 'match(%2={%1(%0)})'
the context selector '%0' can be nested in the context set '%1'; try 'match(%1={%0%select{|(property)}2})'
the ignored %select{set|selector|property}0 spans until here
'%0' is a context %select{set|selector|property}1 not a context %select{set|selector|property}2
context %select{set|selector|property}0 options are: %1
try 'match(%0={%1%2})'
the previous context %select{set|selector|property}0 '%1' used here
omit the namespace to add attributes to the most-recently pushed attribute group
use the GNU '__attribute__' syntax
previous default generic association is here
previous statement is here
parentheses are required around this expression in a requires clause
'%0' casts have no effect when not using ARC
use of '@import' in framework header is discouraged, including this header requires -fmodules
attribute %0 ignored, because it is not attached to a declaration
GCC does not allow %0 attribute in this position on a function definition
'unavailable' availability overrides all other availability information
%select{%1 and |}0%2 tokens %select{introducing statement expression|terminating statement expression|introducing attribute|terminating attribute|forming pointer to member type}3 appear in different macro expansion contexts
%select{%1 and |}0%2 tokens %select{introducing statement expression|terminating statement expression|introducing attribute|terminating attribute|forming pointer to member type}3 are separated by whitespace
use of C-style parameters in Objective-C method declarations is deprecated
nvcc does not allow '__%0__' to appear after '()' in lambdas
'decltype(auto)' type specifier is incompatible with C++ standards before C++14
use of right-shift operator ('>>') in template argument will require parentheses in C++11
constexpr if is incompatible with C++ standards before C++17
constexpr on lambda expressions is incompatible with C++ standards before C++17
pack fold expression is incompatible with C++ standards before C++17
%select{if|switch}0 initialization statements are incompatible with C++ standards before C++17
nested namespace definition is incompatible with C++ standards before C++17
attributes on %select{a namespace|an enumerator}0 declaration are incompatible with C++ standards before C++17
static_assert with no message is incompatible with C++ standards before C++17
template template parameter using 'typename' is incompatible with C++ standards before C++17
default scope specifier for attributes is incompatible with C++ standards before C++17
default member initializer for bit-field is incompatible with C++ standards before C++20
explicit(bool) is incompatible with C++ standards before C++20
range-based for loop initialization statements are incompatible with C++ standards before C++20
inline nested namespace definition is incompatible with C++ standards before C++20
explicit template parameter list for lambdas is incompatible with C++ standards before C++20
use of multiple declarators in a single using declaration is incompatible with C++ standards before C++17
pack expansion using declaration is incompatible with C++ standards before C++17
this expression will be parsed as explicit(bool) in C++20
alias declarations are incompatible with C++98
'alignas' is incompatible with C++98
alignof expressions are incompatible with C++98
C++11 attribute syntax is incompatible with C++98
'decltype' type specifier is incompatible with C++98
%select{defaulted|deleted}0 function definitions are incompatible with C++98
enumeration types with a fixed underlying type are incompatible with C++98
commas at the end of enumerator lists are incompatible with C++98
extern templates are incompatible with C++98
range-based for loop is incompatible with C++98
generalized initializer lists are incompatible with C++98
inline namespaces are incompatible with C++98
lambda expressions are incompatible with C++98
literal operators are incompatible with C++98
noexcept specifications are incompatible with C++98
noexcept expressions are incompatible with C++98
default member initializer for non-static data members is incompatible with C++98
'nullptr' is incompatible with C++98
'%0' keyword is incompatible with C++98
reference qualifiers on functions are incompatible with C++98
rvalue references are incompatible with C++98
scoped enumerations are incompatible with C++98
static_assert declarations are incompatible with C++98
extra ';' outside of a function is incompatible with C++98
trailing return types are incompatible with C++98
consecutive right angle brackets are incompatible with C++98 (use '> >')
add explicit braces to avoid dangling else
empty initialization statement of '%select{if|switch|range-based for}0' has no effect
dynamic exception specifications are deprecated
use same version number separators '_' or '.'; as in 'major[.minor[.subminor]]'
expected a qualified name after 'typename'
extra ';' after member function definition
GCC does not allow an attribute in this position on a function declaration
GCC does not allow variable declarations in for loop initializers before C99
the number of preprocessor source tokens (%0) exceeds this token limit (%1)
the total number of preprocessor source tokens (%0) exceeds the token limit (%1)
dependent %select{__if_not_exists|__if_exists}0 declarations are ignored
qualifiers after comma in declarator list are ignored
misleading indentation; statement is not part of the previous '%select{if|else|for|while}0'
'...' in this location creates a C-style varargs function%select{, not a function parameter pack|}0
use 'template' keyword to treat '%0' as a dependent template name
%0 used as the name of the previous parameter rather than as part of the selector
empty expression statement has no effect; remove unnecessary ';' to silence this warning
protocol has no object type specified; defaults to qualified 'id'
the context property '%0' is not valid for the context selector '%1' and the context set '%2'; property ignored
the context selector '%0' in the context set '%1' cannot have a score ('%2'); score ignored
the context selector '%0' is not valid for the context set '%1'; selector ignored
the context selector '%0' in context set '%1' requires a context property defined in parentheses; selector ignored
the context %select{set|selector|property}0 '%1' was used already in the same 'omp declare variant' directive; %select{set|selector|property}0 ignored
'%0' is not a valid context property for the context selector '%1' and the context set '%2'; property ignored
'%0' is not a valid context selector for the context set '%1'; selector ignored
'%0' is not a valid context set in a `declare variant`; set ignored
expected '%0' after the %1; '%0' assumed
expected identifier or string literal describing a context %select{set|selector|property}0; %select{set|selector|property}0 skipped
extra tokens at the end of '#pragma omp %0' are ignored
more than one 'device_type' clause is specified
valid %0 clauses start with %1; %select{token|tokens}2 will be ignored
%0 clause should not be followed by arguments; tokens will be ignored
expected '=' following '#pragma %select{align|options align}0' - ignored
invalid alignment option in '#pragma %select{align|options align}0' - ignored
OpenCL extension end directive mismatches begin directive - ignoring
'#pragma comment %0' ignored
expected action or ')' in '#pragma %0' - ignored
missing ':' after %0 - ignoring
missing ':' or ')' after %0 - ignoring
expected ',' in '#pragma %0'
expected identifier in '#pragma %0' - ignored
expected 'compiler', 'lib', 'user', or a string literal for the section name in '#pragma %0' - ignored
expected integer between %0 and %1 inclusive in '#pragma %2' - ignored
missing '(' after '#pragma %0' - ignoring
expected non-wide string literal in '#pragma %0'
expected %select{'enable', 'disable', 'begin' or 'end'|'disable'}0 - ignoring
expected ')' or ',' in '#pragma %0'
missing ')' after '#pragma %0' - ignoring
expected a stack label or a string literal for the section name in '#pragma %0' - ignored
expected a string literal for the section name in '#pragma %0' - ignored
expected push, pop or a string literal for the section name in '#pragma %0' - ignored
expected string literal in '#pragma %0' - ignoring
OpenCL extension %0 is core feature or supported optional core feature - ignoring
extra tokens at end of '#pragma %0' - ignored
incorrect use of #pragma clang force_cuda_host_device begin|end
'#pragma %0' is not supported on this target - ignored
'#pragma init_seg' is only supported when targeting a Microsoft environment
%0 is not a recognized builtin%select{|; consider including <intrin.h> to access non-builtin intrinsics}1
unknown action for '#pragma %0' - ignored
unexpected argument '%0' to '#pragma %1'%select{|; expected %3}2
unknown action '%1' for '#pragma %0' - ignored
missing argument to '#pragma %0'%select{|; expected %2}1
incorrect use of '#pragma ms_struct on|off' - ignored
unexpected '#pragma omp ...' in program
'#pragma optimize' is not supported
expected 'align' following '#pragma options' - ignored
expected integer or identifier in '#pragma pack' - ignored
unknown OpenCL extension %0 - ignoring
argument to '#pragma unroll' should not be in parentheses in CUDA C/C++
known but unsupported action '%1' for '#pragma %0' - ignored
unsupported OpenCL extension %0 - ignoring
expected '#pragma unused' argument to be a variable name
this requires expression will only be checked for syntactic validity; did you intend to place it in a nested requirement? (add another 'requires' before the expression)
semicolon before method body is ignored
ignoring '%select{static|inline}0' keyword on explicit template instantiation
pragma STDC FENV_ROUND is not supported
invalid or unsupported rounding mode in '#pragma STDC FENV_ROUND' - ignored
isa trait '%0' is not known to the current target; verify the spelling or consider restricting the context selector with the 'arch' selector further
'__clang__' is a predefined macro name, not an attribute scope specifier; did you mean '_Clang' instead?
empty symbolic operand name in inline assembly string
invalid %% escape in inline assembly string
invalid operand number in inline asm string
unknown symbolic operand name in inline assembly string
unterminated symbolic operand name in inline assembly string
the experimental clang interpreter failed to evaluate an expression
cannot get %select{lower,upper}0 bound because object size is unknown
template parameter lists have a different number of parameters (%0 vs %1)
template parameter has different kinds in different translation units
field %0 declared with incompatible types in different translation units (%1 vs. %2)
external function %0 declared with incompatible types in different translation units (%1 vs. %2)
instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another
property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
property %0 declared with incompatible types in different translation units (%1 vs. %2)
class %0 has incompatible superclasses
property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
type %0 has incompatible definitions in different translation units
external variable %0 defined in multiple translation units
external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
cannot import unsupported AST node %0
ambiguous vftable component for %0 introduced via covariant thunks; this is an inherent limitation of the ABI
%select{pointer|reference}0 to a consteval declaration is not a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 heap allocated object that has been deleted
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of subobject of|destruction of}0 member %1 of union with %select{active member %3|no active member}2 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 mutable member %1 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 dereferenced null pointer is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 dereferenced one-past-the-end pointer is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|reconstruction of|destruction of}0 temporary is not allowed in a constant expression outside the expression that created the temporary
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of subobject of|destruction of}0 %select{object outside its lifetime|uninitialized object}1 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 object '%1' whose value is not known
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 element of array without known bound is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|<ERROR>|<ERROR>|<ERROR>|<ERROR>}0 volatile %select{temporary|object %2|member %2}1 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|<ERROR>|<ERROR>|<ERROR>|<ERROR>}0 volatile-qualified type %1 is not allowed in a constant expression
cannot constant evaluate the result of adjusting alignment to %0
cannot constant evaluate whether run-time alignment is at least %0
requested alignment must be %0 or less for type %1; %2 is invalid
cannot refer to element %0 of %select{array of %2 element%plural{1:|:s}2|non-array object}1 in a constant expression
%select{alignment of|offset of the aligned pointer from}0 the base pointee object (%1 %plural{1:byte|:bytes}1) is %select{less than|not a multiple of}0 the asserted %2 %plural{1:byte|:bytes}2
value of the aligned pointer (%0) is not a multiple of the asserted %1 %plural{1:byte|:bytes}1
indeterminate value can only initialize an object of type 'unsigned char'%select{, 'char',|}1 or 'std::byte'; %0 is invalid
invalid type %0 is a %select{member|base}1 of %2
bit_cast %select{from|to}0 a %select{|type with a }1%select{union|pointer|member pointer|volatile|reference}2 %select{type|member}1 is not allowed in a constant expression
value %1 cannot be represented in type %0
constexpr bit_cast involving bit-field is not yet supported
constexpr bit_cast involving type %0 is not yet supported
in call to '%0'
constexpr evaluation hit maximum call limit
(skipping %0 call%s0 in backtrace; use -fconstexpr-backtrace-limit=0 to see all)
comparison of pointer to virtual member function %0 has unspecified value
both arms of conditional operator are unable to produce a constant expression
construction of individual component of complex number is not yet supported in constant expressions
delete of object with dynamic type %1 through pointer to base class type %0 with non-virtual destructor
delete of pointer '%0' that does not point to a heap-allocated object
delete of pointer%select{ to subobject|}1 '%0' %select{|that does not point to complete object}1
constexpr evaluation exceeded maximum depth of %0 calls
destruction of individual component of complex number is not yet supported in constant expressions
destroying object '%0' whose lifetime has already ended
delete of pointer that has already been deleted
destruction of object that is already being destroyed
%select{pointer|reference}0 to %select{|subobject of }1heap-allocated object is not a constant expression
heap allocation performed here
reference dynamic_cast failed: %select{static type %1 of operand is a non-public base class of dynamic type %2|dynamic type %2 of operand does not have a base class of type %3|%3 is an ambiguous base class of dynamic type %2 of operand|%3 is a non-public base class of dynamic type %2 of operand}0
cannot evaluate this expression if rounding mode is dynamic
floating point arithmetic produces %select{an infinity|a NaN}0
compile time floating point arithmetic suppressed in strict evaluation modes
function parameter %0 with unknown value cannot be used in a constant expression
constexpr evaluation hit maximum heap allocation limit
in implicit initialization for inherited constructor of %0
requested alignment %0 is not a positive power of two
%select{reinterpret_cast|dynamic_cast|cast that performs the conversions of a reinterpret_cast|cast from %1}0 is not allowed in a constant expression%select{| in C++ standards before C++20||}0
cannot cast object of dynamic type %0 to type %1
%select{non-constexpr|undefined}0 %select{function|constructor}1 %2 cannot be used in a constant expression
constructor inherited from base class %0 cannot be used in a constant expression; derived class cannot be implicitly initialized
shift count %0 >= width of type %1 (%2 bit%s2)
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 %select{temporary|variable}1 whose %plural{8:storage duration|:lifetime}0 has ended
signed left shift discards bits
left shift of negative value %0
read of incomplete type %0 is not allowed in a constant expression
read of non-const variable %0 is not allowed in a constant expression
read of non-constexpr variable %0 is not allowed in a constant expression
read of variable %0 of non-integral, non-enumeration type %1 is not allowed in a constant expression
constant evaluation of %0 on array of type %1 is not supported; only arrays of narrow character types can be searched
constant evaluation of %0 between arrays of types %1 and %2 is not supported; only arrays of narrow character types can be compared
cannot constant evaluate '%select{memcpy|memmove}0' between objects of incomplete type %1
cannot constant evaluate '%select{memcpy|memmove}0' between objects of non-trivially-copyable type %1
%select{source|destination}2 of '%select{%select{memcpy|wmemcpy}1|%select{memmove|wmemmove}1}0' is %3
'%select{memcpy|wmemcpy}0' between overlapping memory regions
cannot constant evaluate '%select{memcpy|memmove}0' from object of type %1 to object of type %2
'%select{%select{memcpy|wmemcpy}1|%select{memmove|wmemmove}1}0' not supported: %select{size to copy (%4) is not a multiple of size of element type %3 (%5)|source is not a contiguous array of at least %4 elements of type %3|destination is not a contiguous array of at least %4 elements of type %3}2
allocation performed here was not deallocated%plural{0:|: (along with %0 other memory leak%s0)}0
modification of object of const-qualified type %0 is not allowed in a constant expression
a constant expression cannot modify an object that is visible outside that expression
negative shift count %0
dynamic memory allocation is not permitted in constant expressions until C++20
%plural{2:'delete' used to delete pointer to object allocated with 'std::allocator<...>::allocate'|:%select{non-array delete|array delete|'std::allocator<...>::deallocate'}0 used to delete pointer to %select{array object of type %2|non-array object of type %2|object allocated with 'new'}0}1
cannot allocate array; evaluated array bound %0 is negative
call to %select{placement|class-specific}0 %1
cannot allocate memory of %select{incomplete|function}0 type %1
this placement new expression is not yet supported in constant expressions
cannot allocate array; evaluated array bound %0 is too large
cannot allocate array; evaluated array bound %0 is too small to hold %1 explicitly initialized elements
cannot allocate untyped memory in a constant expression; use 'std::allocator<T>::allocate' to allocate memory of type 'T'
control reached end of constexpr function
%select{pointer|reference}0 to %select{|subobject of }1%select{temporary|%3}2 is not a constant expression
non-literal type %0 cannot be used in a constant expression
address of non-static constexpr variable %0 may differ on each invocation of the enclosing function; add 'static' to give it a constant address
cannot %select{access base class of|access derived class of|access field of|access array element of|perform pointer arithmetic on|access real component of|access imaginary component of}0 null pointer
allocated size %0 is not a multiple of size %1 of element type %2
value %0 is outside the range of representable values of type %1
dereferenced pointer past the end of %select{|subobject of }0%select{temporary|%2}1 is not a constant expression
cannot %select{access base class of|access derived class of|access field of|access array element of|ERROR|access real component of|access imaginary component of}0 pointer past the end of object
placement new would change type of storage from %0 to %1
comparison of addresses of subobjects of different base classes has unspecified value
comparison of address of base class subobject %0 of class %1 to field %2 has unspecified value
comparison of address of fields %0 and %2 of %4 with differing access specifiers (%1 vs %3) has unspecified value
comparison has unspecified value
subtracted pointers are not elements of the same array
subtraction of pointers to type %0 of zero size
%select{|||||virtual function called on|dynamic_cast applied to|typeid applied to|construction of|destruction of}0 object '%1' whose dynamic type is not constant
pseudo-destructor call is not permitted in constant expressions until C++20
pure virtual function %q0 called
constexpr evaluation hit maximum step limit; possible infinite loop?
this use of statement expressions is not supported in a constant expression
subobject declared here
temporary created here
%select{|implicit }0use of 'this' pointer is only allowed within the evaluation of a call to a 'constexpr' member function
typeid applied to expression of polymorphic type %0 is not allowed in a constant expression in C++ standards before C++20
%select{|sub}0object of type %1 is not initialized
assignment would change active union member during the initialization of a different member of the same union
indexing of array without known bound is not allowed in a constant expression
non-trivial destruction of type %0 in a constant expression is not supported
type %0 has unexpected layout
non-trivial destruction of lifetime-extended temporary with type %0 used in the result of a constant expression is not yet supported
array-to-pointer decay of array member without known bound is not supported
use of reference outside its lifetime is not allowed in a constant expression
initializer of %0 is not a constant expression
initializer of %0 is unknown
initializer of weak variable %0 is not considered constant because it may be different at runtime
cannot construct object of type %0 with virtual base class in a constant expression
cannot evaluate call to virtual function in a constant expression in C++ standards before C++20
comparison between unequal pointers to void has unspecified result
volatile %select{temporary created|object declared|member declared}0 here
covariant thunk required by %0
division by zero
null passed to a callee that requires a non-null argument
class has base type %0
bit-field %0 with type %1 and length %2 here
enumerator %0 with value %1 here
field %0 has type %1 here
field has name %0 here
friend declared here
no corresponding base class here
no corresponding enumerator here
no corresponding field here
no corresponding friend here
field %0 is not a bit-field
class has %0 base %plural{1:class|:classes}0
%select{class|instance}0 method %1 also declared here
no corresponding superclass here
property %0 is implemented with %select{@synthesize|@dynamic}1 here
inherits from superclass %0 here
property is synthesized to ivar %0 here
%select{parameter|parameter pack}0 declared here
%0 is a %select{struct|interface|union|class|enum}1 here
template parameter declared here
template parameter list also declared here
declared here with type %0
%select{non-virtual|virtual}0 derivation here
unimplemented constexpr lambda feature: %0 (coming soon!)
-fsanitize-address-field-padding applied to %0
-fsanitize-address-field-padding ignored for %0 because it %select{is not C++|is packed|is a union|is trivially copyable|has trivial destructor|is standard layout|is in a blacklisted file|is blacklisted}1
overflow in expression; result is %0 with type %1
overflow in expression; result is %0 with type %1
'%0' will always evaluate to 'true' in a manifestly constant-evaluated expression
ms_struct may not produce Microsoft-compatible layouts with fundamental data types with sizes that aren't a power of two
template parameter lists have a different number of parameters (%0 vs %1)
template parameter has different kinds in different translation units
field %0 declared with incompatible types in different translation units (%1 vs. %2)
external function %0 declared with incompatible types in different translation units (%1 vs. %2)
instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another
property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
property %0 declared with incompatible types in different translation units (%1 vs. %2)
class %0 has incompatible superclasses
property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
type %0 has incompatible definitions in different translation units
external variable %0 defined in multiple translation units
external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align anonymous bit-field
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align %4
padding size of %0 with %1 %select{byte|bit}2%s1 to alignment boundary
packed attribute is unnecessary for %0
add a deprecation attribute to the declaration to silence this warning
previous command '%select{\|@}0%1' here
previous command '%select{\|@}0%1' (an alias of '\%2') here
end tag
HTML tag started here
did you mean '%0'?
previous documentation
did you mean '%0'?
previous documentation
unknown command tag name '%0'; did you mean '%1'?
'%select{\|@}0%select{class|interface|protocol|struct|union}1' command should not be used in a comment attached to a non-%select{class|interface|protocol|struct|union}2 declaration
duplicated command '%select{\|@}0%1'
empty paragraph passed to '%select{\|@}0%1' command
'%select{\|@}0%select{classdesign|coclass|dependency|helper|helperclass|helps|instancesize|ownership|performance|security|superclass}1' command should not be used in a comment attached to a non-container declaration
declaration is marked with '%select{\|@}0deprecated' command but does not have a deprecation attribute
'%select{\|@}0%select{function|functiongroup|method|methodgroup|callback}1' command should be used in a comment attached to %select{a function|a function|an Objective-C method|an Objective-C method|a pointer to function}2 declaration
HTML end tag '%0' is forbidden
HTML end tag does not match any start tag
HTML tag '%0' requires an end tag
HTML start tag '%0' closed by '%1'
HTML start tag prematurely ended, expected attribute name or '>'
expected quoted string after equals sign
'%select{\|@}0%1' command does not have a valid word argument
parameter '%0' is already documented
unrecognized parameter passing direction, valid directions are '[in]', '[out]' and '[in,out]'
'%select{\|@}0param' command used in a comment that is not attached to a function declaration
parameter '%0' not found in the function declaration
whitespace is not allowed in parameter passing direction
'%select{\|@}0%1' command used in a comment that is attached to a %select{function returning void|constructor|destructor|method returning void}2
'%select{\|@}0%1' command used in a comment that is not attached to a function or method declaration
template parameter '%0' is already documented
'%select{\|@}0tparam' command used in a comment that is not attached to a template declaration
template parameter '%0' not found in the template declaration
unknown command tag name
'%select{\|@}0%1' command does not terminate a verbatim text block
error opening '%0': required by the CrossTU functionality
error parsing index file: '%0' line: %1 'UniqueID filename' format expected
multiple definitions are found for the same key in index 
imported AST from '%0' had been generated for a different target, current: %1, imported: %2
this builtin is only available on 32-bit targets
this builtin is only available on 64-bit targets
cannot add 'abi_tag' attribute in a redeclaration
%select{return|parameter|variable|field|instance variable|synthesized instance variable}0 type %1 is an abstract class
%1 is a %select{private|protected}0 member of %3
%select{base class|inherited virtual base class}0 %1 has %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR*|}2constructor
calling a %select{private|protected}0 constructor of class %2
ISO C++11 does not allow access declarations; use using declarations instead
calling a %select{private|protected}1 destructor of class %0
base class %0 has %select{private|protected}1 destructor
exception object of type %0 has %select{private|protected}1 destructor
field of type %1 has %select{private|protected}2 destructor
instance variable of type %0 has %select{private|protected}1 destructor
temporary of type %0 has %select{private|protected}1 destructor
variable of type %1 has %select{private|protected}2 destructor
inherited virtual base class %1 has %select{private|protected}2 destructor
field of type %0 has %select{private|protected}2 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}1constructor
friend function %1 is a %select{private|protected}0 member of %3
capture of variable '%0' as type %1 calls %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}2constructor
address of overloaded function %0 is ambiguous
cannot form member pointer of type %0 without '&' and class name
address of overloaded function %0 does not match required type %1
address of overloaded function %0 cannot be converted to type %1
cannot take address of function %0 because parameter %1 has pass_object_size attribute
conflicting address space qualifiers are provided between types %0 and %1
'delete' cannot delete objects of type %0 in address space '%1'
'new' cannot allocate objects of type %0 in address space '%1'
cannot take address of function %0 because its constraints are not satisfied
cannot take address of function %0 because it has one or more non-tautological enable_if conditions
alias definition of %0 after tentative definition
definition %0 cannot also be an %select{alias|ifunc}1
aliases are not supported on darwin
CUDA does not support aliases
extraneous template parameter list in alias template declaration
'align_value' attribute requires integer constant
%0 attribute cannot be applied to a %select{function parameter|variable with 'register' storage class|'catch' variable|bit-field}1
redeclaration has different alignment requirement (%1 vs %0)
%0 must be specified on definition if it is specified on any declaration
requested alignment is less than minimum alignment of %1 for type %0
aligned %select{allocation|deallocation}0 function of type '%1' is %select{only|not}4 available on %2%select{ %3 or newer|}4
'aligned' attribute requires integer constant
requested alignment is dependent but declaration is not dependent
requested alignment is not a power of 2
requested alignment must be %0 or smaller
requested alignment must be %0 or greater
invalid application of 'alignof' to a field of a class still being defined
allocating an object of abstract class type %0
expected initializer
ambiguous cast from base %0 to derived %1:%2
ambiguous conversion of delete expression of type %0 to a pointer
ambiguous conversion from derived class %0 to base class %1:%2
constructor of %0 inherited from multiple base class subobjects
member %0 found in multiple base classes of different types
non-static member %0 found in multiple base-class subobjects of type %1:%2
ambiguous conversion from pointer to member of %select{base|derived}0 class %1 to pointer to member of %select{derived|base}0 class %2:%3
reference to %0 is ambiguous
multiple suitable %0 functions in %1
a type named %0 is hidden by a declaration in a different namespace
anonymous bit-field has negative width (%0)
anonymous bit-field cannot have qualifiers
width of anonymous bit-field (%0 bits) exceeds %select{width|size}1 of its type (%2 bit%s2)
anonymous property is not supported
anonymous %select{struct|union}0 can only contain non-static data members
member of anonymous %select{struct|union}0 redeclares %1
anonymous %select{struct|union}0 cannot contain a %select{private|protected}1 data member
functions cannot be declared in an anonymous %select{struct|union}0
static members cannot be declared in an anonymous %select{struct|union}0
types cannot be declared in an anonymous %select{struct|union}0
anonymous %select{structs|structs and classes}0 must be %select{struct or union|class}0 members
anonymous unions at namespace or global scope must be declared 'static'
anonymous union at class scope must not have a storage specifier
%select{x86|x86-64}0 'interrupt' attribute only applies to functions that have %select{a 'void' return type|only a pointer parameter optionally followed by an integer parameter|a pointer as the first parameter|a %2 type as the second parameter}1
interrupt service routine cannot be called directly
must explicitly describe intended ownership of an object array parameter
existing instance variable %1 for property %0 with %select{unsafe_unretained|assign}2 attribute must be __unsafe_unretained
cannot perform atomic operation on a pointer to type %0: type has non-trivial ownership
cannot capture __autoreleasing variable in a %select{block|lambda by copy}0
%select{__block variables|global variables|fields|instance variables}0 cannot have __autoreleasing ownership
incompatible types casting %0 to %1 with a %select{__bridge|__bridge_transfer|__bridge_retained}2 cast
cast of %select{Objective-C|block|C}0 pointer type %1 to %select{Objective-C|block|C}2 pointer type %3 cannot use %select{__bridge|__bridge_transfer|__bridge_retained}4
%select{cast|implicit conversion}0 of %select{Objective-C|block|C}1 pointer type %2 to %select{Objective-C|block|C}3 pointer type %4 requires a bridged cast
collection expression type %0 is a forward declaration
%select{implicit conversion|cast}0 of weak-unavailable object of type %1 to a __weak object of type %2
method implementation does not match its declaration
ARC forbids explicit message send of %0
ARC forbids %select{implementation|synthesis}0 of %1
ARC forbids use of %0 in a @selector
%select{|unsafe_unretained|strong|weak}1 property %0 may not also be declared %select{|__unsafe_unretained|__strong|__weak|__autoreleasing}2
%select{pointer|reference}1 to non-const type %0 with no explicit ownership
init methods must return a type related to the receiver type
method was declared as %select{an 'alloc'|a 'copy'|an 'init'|a 'new'}0 method, but its implementation doesn't match because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
no visible @interface for %0 declares the selector %1
no known %select{instance|class}1 method for selector %0
%select{implicit conversion|cast}0 of %select{%2|a non-Objective-C pointer type %2|a block pointer|an Objective-C pointer|an indirect pointer to an Objective-C pointer}1 to %3 is disallowed with ARC
multiple methods named %0 found with mismatched result, parameter type or attributes
'new' cannot allocate an array of %0 with no explicit ownership
explicit ownership qualifier on cast result has no effect
passing address of %select{non-local|non-scalar}0 object to __autoreleasing parameter for write-back
ARC forbids synthesizing a property of an Objective-C object with unspecified ownership or storage attribute
performSelector names a selector which retains the object
pseudo-destructor destroys object of type %0 with inconsistently-qualified type %1
receiver %0 for class message is a forward declaration
receiver type %0 for instance message is a forward declaration
existing instance variable %1 for strong property %0 may not be %select{|__unsafe_unretained||__weak}2
thread-local variable has non-trivial ownership: type is %0
incompatible pointer types passing retainable parameter of type %0to a CF function expecting %1 type
class is incompatible with __weak references
the result of a delegate init call must be immediately returned or assigned to 'self'
cannot create __weak reference in file using manual reference counting
dereferencing a __weak pointer is not allowed due to possible null value caused by race condition, assign it to strong variable first
cannot create __weak reference because the current deployment target does not support weak references
assignment of a weak-unavailable object to a __weak object
synthesizing __weak instance variable of type %0, which does not support weak references
parameter may not be qualified with an address space
argument value %0 is outside the valid range [%1, %2]
argument should be a multiple of %0
argument should be a power of 2
argument should be an 8-bit value shifted by a multiple of 8 bits
argument should be an 8-bit value shifted by a multiple of 8 bits, or in the form 0x??FF
arithmetic on pointer to interface %0, which is not a constant size for this architecture and platform
coprocessor %0 must be configured as %select{GCP|CDE}1
invalid special register for builtin
array designator range [%0, %1] is empty
array designator value '%0' is negative
array designator cannot initialize non-array type %0
array designator index (%0) exceeds array bounds (%1)
array has %select{incomplete|sizeless}0 element type %1
cannot initialize array %diff{of type $ with array of type $|with different type of array}0,1
initializing wide char array with incompatible wide string literal
initializing wide char array with non-wide string literal
cannot initialize array %diff{of type $ with non-constant array of type $|with different type of array}0,1
array initializer must be an initializer list%select{| or string literal| or wide string literal}0
initializing 'char8_t' array with plain string literal
%select{|ISO C++20 does not permit }0initialization of char array with UTF-8 string literal%select{ is not permitted by '-fchar8_t'|}0
initializing char array with wide string literal
array size must be specified in new expression with no initializer
array of abstract class type %0
array section does not specify contiguous storage
array section does not specify length for outermost dimension
ambiguous conversion of array size expression of type %0 to an integral or enumeration type
array size expression of type %0 requires explicit conversion to type %1
array size expression has incomplete class type %0
size of array has non-integer type %0
array size expression must have integral or %select{|unscoped }0enumeration type, not %1
variable length array must be bound in function definition
star modifier used outside of function prototype
%0 used in non-outermost array type derivation
%0 used in array declarator outside of function prototype
array is too large (%0 elements)
automatic variable qualified with an%select{| invalid}0 address space
bad type for named register variable
asm operand has incomplete type %0
more than one input constraint matches the same output '%0'
register '%0' unsuitable for global register variables on this target
invalid input constraint '%0' in asm
invalid input size for constraint '%0'
invalid lvalue in asm input for constraint '%0'
invalid lvalue in asm output
invalid output constraint '%0' in asm
invalid output size for constraint '%0'
parameter references not allowed in naked functions
'this' pointer references not allowed in naked functions
reference to a %select{bit-field|vector element|global register variable}0 in asm %select{input|output}1 with a memory constraint '%2'
size of register '%0' does not match variable size
unsupported inline asm: input with type %diff{$ matching output with type $|}0,1
asm constraint has an unexpected number of alternatives: %0 vs %1
unknown register name '%0' in asm
type %0 in generic association compatible with previously specified type %1
type %0 in generic association incomplete
type %0 in generic association not an object type
type %0 in generic association is a variably modified type
use of @defs is not supported on this architecture and platform
address argument to atomic builtin cannot be const-qualified (%0 invalid)
argument to atomic builtin of type '_ExtInt' is not supported
Atomic memory operand must have a power-of-two size
address argument to atomic builtin must be a pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer, floating-point or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to 1,2,4,8 or 16 byte type (%0 invalid)
address argument to load or store exclusive builtin must be a pointer to 1,2,4 or 8 byte type (%0 invalid)
atomic %select{load|store}0 requires runtime support that is not available for this target
synchronization scope argument to atomic operation is invalid
address argument to atomic operation must be a pointer to _Atomic type (%0 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer (%1 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer or pointer (%1 invalid)
address argument to %select{atomic|__sync}0 operation must be a pointer to a non address discriminated type (%1 invalid)
address argument to atomic operation must be a pointer to non-%select{const|constant}0 _Atomic type (%1 invalid)
address argument to atomic operation must be a pointer to non-const type (%0 invalid)
address argument to atomic operation must be a pointer to a trivially-copyable type (%0 invalid)
atomic property of reference type %0 cannot have non-trivial assignment operator
_Atomic cannot be applied to %select{incomplete |array |function |reference |atomic |qualified |sizeless ||integer }0type %1 %select{|||||||which is not trivially copyable|}0
%0 attribute expression never produces a constant expression
the type %0 is already explicitly ownership-qualified
%0 attribute can only be applied to a %select{function|method}1 with an error parameter
%0 attribute with '%1' convention can only be applied to a %select{function|method}2 returning %select{an integral type|a pointer}3
tls_model must be "global-dynamic", "local-dynamic", "initial-exec" or "local-exec"
function type may not be qualified with an address space
multiple address spaces specified for type
address space is negative
address space is larger than the maximum supported (%0)
requested alignment must be %0 bytes or smaller
%0 attribute argument is invalid: %select{max must be 0 since min is 0|min must not be greater than max}1
%0 attribute must be greater than 0
%0 attribute requires parameter %1 to be %select{int or bool|an integer constant|a string|an identifier|a constant expression}2
%0 attribute parameter %1 is out of bounds
%0 attribute parameter %1 is out of bounds: %plural{0:no parameters to index into|1:can only be 1, since there is one parameter|:must be between 1 and %2}2
%0 attribute requires integer constant between %1 and %2 inclusive
%0 attribute requires %select{int or bool|an integer constant|a string|an identifier}1
%0 attribute requires an integer type argument
%0 attribute requires a pointer type argument
'__clang_arm_builtin_alias' attribute can only be applied to an ARM builtin
%0 is only supported when '-msve-vector-bits=<bits>' is specified with a value of 128, 256, 512, 1024 or 2048.
'__clang_arm_mve_strict_polymorphism' attribute can only be applied to an MVE/NEON vector type
Neon vector size must be 64 or 128 bits
invalid SVE vector size '%0', must match value set by '-msve-vector-bits' ('%1')
'cleanup' argument %select{|%1 |%1 }0is not a %select{||single }0function
'cleanup' function %0 parameter has %diff{type $ which is incompatible with type $|incompatible type}1,2
'cleanup' function %0 must take 1 parameter
'__declspec(dllexport)' cannot be applied to more than one default constructor in %0
attribute %q0 cannot be applied to a deleted function
lambda cannot be declared %0
attribute %q0 cannot be applied to member of %q1 class
%q0 must have external linkage when declared %q1
redeclaration of %q0 cannot add %q1 attribute
%q0 cannot be thread local when declared %q1
definition of dllimport data
dllimport cannot be applied to non-inline function definition
definition of dllimport static field not allowed
%0 attribute argument may only refer to a function parameter of integer type
%select{a reference type|an array type|a non-vector or non-vectorizable scalar type}0 is an invalid argument to attribute %1
invalid argument expression to firebloom attribute
%0 attribute is invalid for the implicit this argument
invalid matrix element type %0
vector size not an integral multiple of component size
%0 attribute applied to non-SVE type %1
invalid vector element type %0
multiple garbage collection attributes specified for type
%0 attribute has no effect on defaulted or deleted functions
%0 attribute is permitted on definitions only
empty %0 cannot be composed with named ones
%0 attribute cannot be used with pointers to members
function type with %0 attribute must have C linkage
%0 attribute is not supported in %select{C|C++|Objective-C}1
%0 attribute is not supported on '%1'
%0 attribute can only be applied once per parameter
attribute only applies to output parameters
redeclaration of %0 must %select{not |}1have the 'overloadable' attribute
at most one overload for a given name may lack the 'overloadable' attribute
'overloadable' function %0 must have a prototype
%0 attribute only applies to%select{| constant}1 pointer arguments
argument %0 to 'preferred_name' attribute is not a typedef for a specialization of %1
'regparm' parameter must be between 0 and %0 inclusive
'regparm' is not valid on this platform
%0 attribute requires OpenCL version %1%select{| or above}2
%0 attribute requires a %select{positive|non-negative}1 integral compile time constant expression
argument to %select{'code_seg'|'section'}1 attribute is not valid for this target: %0
'selectany' can only be applied to data items with external linkage
'sentinel' parameter 1 less than zero
'sentinel' parameter 2 not 0 or 1
%0 size too large
%0 attribute cannot be applied to sizeless type %1
'symbol_metadata_footnote' attributes must use section names that are between 1 and 9 characters long, excluding the leading underscores.
%0 attribute takes at least %1 argument%s1
%0 attribute takes no more than %1 argument%s1
%0 attribute is not supported on targets missing %1; specify an appropriate -march= or -mcpu=
the vecreturn attribute can only be used on a POD (plain old data) class or structure (i.e. no virtual functions)
the vecreturn attribute can only be used on a class or structure with one member, which must be a vector
weak declaration cannot have internal linkage
weakref declaration of %0 must be in a global context
weakref declaration must have internal linkage
weakref declaration of %0 must also have an alias attribute
%0 attribute only applies to %select{functions|unions|variables and functions|functions and methods|functions, methods and blocks|functions, methods, and parameters|variables|variables and fields|variables, data members and tag types|types and namespaces|variables, functions and classes|kernel functions|non-K&R-style functions}1
%0 attribute only applies to %1
%0 attribute %plural{0:takes no arguments|1:takes one argument|:requires exactly %1 arguments}1
zero %0 size
%0 and %1 attributes are not compatible
cannot pass bit-field as __auto_type initializer in C
%select{'auto'|'decltype(auto)'|'__auto_type'|template arguments}0 deduced as %1 in declaration of %2 and deduced as %3 in declaration of %4
cannot deduce return type %0 from returned value of type %1
'%select{auto|decltype(auto)}0' in return type deduced as %1 here but deduced as %2 in earlier return statement
cannot deduce return type %0 for function with no return statements
cannot deduce return type from initializer list
cannot deduce return type %0 from omitted return expression
function %0 with deduced return type cannot be used before it is defined
function with deduced return type cannot be virtual
deduced conflicting types %diff{($ vs $) |}0,1for initializer list element type
cannot use __auto_type with initializer list in C
'auto' return without trailing return type; deduced return types are a C++14 extension
new expression for type %0 contains multiple constructor arguments
new expression for type %0 has incompatible constructor argument of type %1
new expression for type %0 requires a constructor argument
%select{function with deduced return type|declaration with trailing return type}0 must be the only declaration in its group
%select{'auto'|'decltype(auto)'|'__auto_type'|use of %select{class template|function template|variable template|alias template|template template parameter|concept|template}2 %3 requires template arguments; argument deduction}0 not allowed %select{in function prototype|in non-static struct member|in struct member|in non-static union member|in union member|in non-static class member|in interface member|in exception declaration|in template parameter until C++17|in block literal|in template argument|in typedef|in type alias|in function return type|in conversion function type|here|in lambda parameter|in type allocated by 'new'|in K&R-style function parameter|in template parameter|in friend declaration|in function prototype that is not a function declaration|in requires expression parameter}1
'auto' variable template instantiation is not allowed
variable %0 with type %1 has incompatible initializer of type %2
cannot deduce actual type for variable %0 with type %1 from initializer list
initializer for variable %0 with type %1 contains multiple expressions
initializer for variable %0 with type %1 is empty
cannot deduce type for variable %1 with type %2 from %select{parenthesized|nested}0 initializer list
declaration of variable %0 with deduced type %1 requires an initializer
variable %0 declared with deduced type %1 cannot appear in its own initializer
return type of 'await_suspend' is required to be 'void' or 'bool' (have %0)
%0 is an incomplete type
property implementation must have its declaration in the category %0
%select{const_cast||||C-style cast|functional-style cast|}0 to %2, which is not a reference, pointer-to-object, or pointer-to-data-member
address of overloaded function %0 cannot be cast to type %1
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from %1 to %2 converts between mismatching address spaces
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from bit-field lvalue to reference type %2
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from %1 to %2 is not allowed
cannot %select{||reinterpret_cast||C-style cast||}0 from member pointer type %1 to member pointer type %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 casts away qualifiers
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from rvalue to reference type %2
%select{||reinterpret_cast||C-style cast||}0 from scalar %1 to vector %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2, which are not related by inheritance, is not allowed
%select{||reinterpret_cast||C-style cast||}0 from vector %1 to scalar %2 of different size
%select{||reinterpret_cast||C-style cast||}0 from vector %1 to vector %2 of different size
%0 is not a class type
%0 is not polymorphic
cannot use dynamic_cast to convert from %0 to %1
invalid target type %0 for dynamic_cast; target type must be a reference or pointer type to a defined class
%0 cannot be used as the type of a kernel parameter
cannot cast from lvalue of type %1 to rvalue reference type %2; types are not compatible
left hand operand to %0 must be a %select{|pointer to }1class compatible with the right hand operand, but is %2
right hand operand to %0 has non-pointer-to-member type %1
function multiversioning doesn't support %select{feature|architecture}0 '%1'
cannot allocate %select{function|reference}1 type %0 with new
%0 cannot be the name of a parameter
parameter name cannot have template arguments
property implementation must be in a class or category implementation
property implementation must have its declaration in interface %0 or one of its extensions
bad receiver type %0
reinterpret_cast cannot resolve overloaded function %0 to type %1
reinterpret_cast of a %0 to %1 needs its address, which is not allowed
cast from pointer to smaller type %2 loses information
cannot cast from rvalue of type %1 to rvalue reference type %2; types are not compatible
cannot cast from type %1 to member pointer type %2
address of overloaded function %0 cannot be static_cast to type %1
cannot cast from type %1 to pointer type %2
%0 cannot be the name of a variable or data member
base class %0 has a flexible array member
unions cannot have base classes
base class initializer %0 names both a direct base class and an inherited virtual base class
constructor initializer %0 does not name a class
base specifier must name a class
%0 attribute cannot be applied to a base specifier
binding %0 cannot appear in the initializer of its own decomposition declaration
arithmetic operation in dependent count expression is only allowed for struct fields
__builtin_bit_cast %select{source|destination}0 type must be trivially copyable
__builtin_bit_cast source size does not equal destination size (%0 vs %1)
bit-field %0 has negative width (%1)
named bit-field %0 has zero width
%select{bit-field %1|anonymous bit-field}0 is too wide (%2 bits)
width of bit-field %0 (%1 bits) exceeds %select{width|size}2 of its type (%3 bit%s3)
variable is not assignable (missing __block type specifier)
'extern' variable cannot have an initializer
__block attribute not allowed, only allowed on local variables
__block attribute not allowed on declaration with a variably modified type
non-void block should return a value
block cannot return %select{array|function}0 type %1
blocks support disabled - compile with -fblocks or %select{pick a deployment target that supports them|for OpenCL 2.0}0
reference to non-static member function must be called%select{|; did you mean to call it with no arguments?}0
%select{string|character|boolean|numeric}0 literal must be prefixed by '@' in a collection
'break' statement not in loop or switch statement
__builtin_btf_type_id argument %0 not a constant
first argument to __builtin_annotation must be an integer
second argument to __builtin_annotation must be a non-wide string constant
this builtin is not supported on the requested cpu, please specify -mcpu=%0 or newer
definition of builtin function %0
builtin functions must be directly called
function-style cast to a builtin type can only take one argument
%select{non-pointer|function pointer|void pointer}0 argument to '__builtin_launder' is not allowed
argument to __builtin_longjmp must be a constant 1
__builtin_longjmp is not supported for the current target
1st argument must be a matrix
matrix types extension is disabled. Pass -fenable-matrix to enable it
%0 dimension is outside the allowed range [1, %1]
%ordinal0 argument must be a pointer to a valid matrix element type
the pointee of the 2nd argument must match the element type of the 1st argument (%0 != %1)
%0 argument must be a constant unsigned integer expression
cannot store matrix to read-only pointer
stride must be greater or equal to the number of rows
call to '%select{__builtin_operator_new|__builtin_operator_delete}0' selects non-usual %select{allocation|deallocation}0 function
cannot redeclare builtin function %0
'%0' is only available in %1
__builtin_setjmp is not supported for the current target
builtin is not supported on this target
this builtin is only available on x86-64 and aarch64 targets
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature, not permitted in C++
calling %0 with incomplete return type %1
argument type %0 is incomplete
calling function with incomplete return type %0
'callback' attribute argument %0 is not a known function parameter
'callback' attribute specifies invalid callback callee
multiple 'callback' attributes specified
'callback' attribute specifies no callback callee
'callback' attribute callee may not be variadic
'callback' attribute callee does not have function type
'callback' argument at position %0 references unavailable implicit 'this'
'called_once' attribute only applies to function-like parameters
cannot find suitable %select{getter|setter}0 for property %1
cannot form a pointer-to-member to member %0 of reference type %1
cannot pass non-trivial C object of type %0 by value to variadic %select{function|block|method|constructor}1
cannot pass object with interface type %0 by value through variadic %select{function|block|method|constructor}1
cannot pass object with interface type %1 by value to variadic %select{function|block|method|constructor}2; expected type from format string was %3
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
capture host variable %0 by reference in device or host device lambda function
capture host side class data member by this pointer in device or host device lambda function
__block variable %0 cannot be captured in a %select{lambda expression|captured statement}1
non-local lambda expression cannot have a capture-default
%0 in capture list does not name a variable
%0 can appear only once in a capture list
%0 cannot be captured because it does not have automatic storage duration
by-copy capture of value of abstract type %0
by-copy capture of variable %0 with %select{incomplete|sizeless}1 type %2
%select{function|parameter}0 declared '[[carries_dependency]]' after its first declaration
'[[carries_dependency]]' attribute only allowed on parameter in a function declaration or lambda
'case' statement not in switch statement
cannot type-cast from __bf16
operand of type %0 cannot be cast to a pointer type
pointer cannot be cast to type %0
cannot type cast @selector expression
cannot type-cast to __bf16
cannot catch incomplete type %0
cannot catch pointer to incomplete type %0
cannot catch reference to incomplete type %0
@catch parameter is not a pointer to an interface type
cannot catch exceptions by rvalue reference
cannot catch %select{|reference to }0sizeless type %1
cannot catch variably modified type %0
cannot define %select{category|class extension}0 for undefined class %1
property declared in category %0 cannot be implemented in class implementation
function declared '%0' here was previously declared %select{'%2'|without calling convention}1
parameter %0 must have a complete type to use function %1 with the %2 calling convention
function with no prototype cannot use the %0 calling convention
variadic function cannot use %0 calling convention
CFString literal is not a string constant
circular inheritance between %0 and %1
cannot declare class extension for %0 after class implementation
base %0 is marked '%select{final|sealed}1'
property %0 is a class property; did you mean to access it with class '%1'?
%0 redeclared with '%1' access
'objc_class_stub' attribute cannot be specified on a class that does not have the 'objc_subclassing_restricted' attribute
property follows Cocoa naming convention for returning 'owned' objects
the type %0 is not a pointer to a fast-enumerable object
type of machine mode does not support base vector types
compound literal in function scope may not be qualified with an address space
%select{block pointer|pointer|reference}0 to function type %select{%2 |}1cannot have '%3' qualifier
concept declarations may only appear in global or namespace scope
extraneous template parameter list in concept definition
concept cannot have associated constraints
concept template parameter list must have at least one parameter; explicit specialization of concepts is not allowed
operands to conditional of types%diff{ $ and $|}0,1 are incompatible in ARC mode
conditional expression is ambiguous; %diff{$ can be converted to $ and vice versa|types can be convert to each other}0,1
conditional expression is ambiguous; %diff{$ and $|types}0,1 can be converted to several common types
cannot mix vectors and extended vectors in a vector conditional
vector condition type %0 and result type %1 do not have elements of the same size
GNU vector conditional operand cannot be %select{void|a throw expression}0
vector operands to the vector conditional must be the same type %diff{($ and $)|}0,1}
enumeration type %0 is not allowed in a vector conditional
vector condition type %0 and result type %1 do not have the same number of elements
%select{left|right}1 operand to ? is void, but %select{right|left}1 operand is of type %0
CUDA special function '%0' must have scalar return type
conflicting types for alias %0
conflicting code segment specifiers
instance variable %0 has conflicting bit-field width
conflicting instance variable names: %0 vs %1
instance variable %0 has conflicting type%diff{: $ vs $|}1,2
virtual function %0 has different calling convention attributes %diff{($) than the function it overrides (which has calling convention $)|than the function it overrides}1,2
conflicting super class name %0
conflicting types for %0
argument to %0 must be a constant integer
consteval function %0 cannot override a non-consteval function
statement not allowed in %select{constexpr|consteval}1 %select{function|constructor}0
no return statement in %select{constexpr|consteval}0 function
destructor cannot be declared %select{<ERROR>|constexpr|consteval|constinit}0
destructor cannot be declared %select{<ERROR>|constexpr|consteval|constinit}0 because %select{data member %2|base class %3}1 does not have a constexpr destructor
variable of non-literal type %1 cannot be defined in a constexpr %select{function|constructor}0
%select{static|thread_local}1 variable not permitted in a constexpr %select{function|constructor}0
'main' is not allowed to be declared %select{constexpr|consteval}0
%select{constexpr|consteval}2 %select{function|constructor}1's %ordinal0 parameter type %3 is not a literal type
%select{constexpr|consteval}0 function's return type %1 is not a literal type
%select{non-constexpr|constexpr|consteval}1 declaration of %0 follows %select{non-constexpr|constexpr|consteval}2 declaration
non-void %select{constexpr|consteval}1 function %0 should return a value
declaration of constexpr static data member %0 requires an initializer
%select{class|struct|interface|union|enum}0 cannot be marked %select{<ERROR>|constexpr|consteval|constinit}1
constexpr variable cannot have non-literal type %0
constexpr variable %0 must have constant destruction
constexpr variable %0 must be initialized by a constant expression
virtual function cannot be constexpr
constexpr %select{member function|constructor}0 not allowed in %select{struct|interface|class}1 with virtual base %plural{1:class|:classes}2
variably-modified type %0 cannot be used in a constexpr %select{function|constructor}1
%select{<ERROR>|constexpr|consteval|constinit}0 can only be used in %select{|variable and function|function|variable}0 declarations
'constinit' specifier added after initialization of variable
local variable cannot be declared 'constinit'
virtual function cannot have a requires clause
copy constructor must pass its first argument by reference
constructor cannot be declared '%0'
constructor cannot be redeclared
constructor cannot have a return type
class extension has no primary class
'continue' statement not in loop statement
conversion function must be a non-static member function
conversion function cannot be redeclared
conversion function cannot have a return type
conversion function cannot convert to an array type
conversion function cannot convert to a function type
conversion function cannot be variadic
cannot specify any part of a return type in the declaration of a conversion function%select{; put the complete type after 'operator'|; use a typedef to declare a conversion to %1|; use an alias template to declare a conversion to %1|}0
conversion function cannot have any parameters
first two arguments to __builtin_convertvector must have the same number of elements
first argument to __builtin_convertvector must be a vector
second argument to __builtin_convertvector must be a vector type
'&' must precede a capture when the capture default is '='
std::experimental::coroutine_handle missing a member named '%0'
'%1' cannot be used in %select{a constructor|a destructor|the 'main' function|a constexpr function|a function with a deduced return type|a varargs function|a consteval function}0
Objective-C methods as coroutines are not yet supported
'%0' cannot be used outside a function
the expression 'co_await __promise.final_suspend()' is required to be non-throwing
%0: 'get_return_object_on_allocation_failure()' must be a static member function
the coroutine promise type %0 declares both 'return_value' and 'return_void'
%0 is required to have a non-throwing noexcept specification when the promise type declares 'get_return_object_on_allocation_failure()'
the coroutine promise type %0 must declare either 'return_value' or 'return_void'
this function cannot be a coroutine: %0 is an incomplete type
%0 is required to declare the member 'unhandled_exception()'
this function cannot be a coroutine: missing definition of specialization %0
'%0' cannot be used in an unevaluated context
'%0' cannot be used in the handler of a try block
return type of virtual function %3 is not covariant with the return type of the function it overrides (ambiguous conversion from derived class %0 to base class %1:%2)
invalid covariant return for virtual function: %1 is a %select{private|protected}2 base class of %0
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is incomplete)
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is not derived from %2)
return type of virtual function %0 is not covariant with the return type of the function it overrides (class type %1 is more qualified than class type %2
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 has different qualifiers than %2)
'cpu_dispatch' function redeclared with different CPUs
multiple 'cpu_specific' functions cannot specify the same CPU: %0
%select{constructor|destructor}1 %0 must not return void expression
illegal device builtin %select{surface|texture}0 reference class template %1 declared here
illegal device builtin %select{surface|texture}0 reference type %1 declared here
cannot use '%0' in %select{__device__|__global__|__host__|__host__ __device__}1 function
__shared__ variable %0 cannot be 'extern'
__shared__ local variables not allowed in %select{__device__|__global__|__host__|__host__ __device__}0 functions
__constant__ and __device__ are not allowed on non-static local variables
%select{__device__|__global__|__host__|__host__ __device__}0 function %1 cannot overload %select{__device__|__global__|__host__|__host__ __device__}2 function %3
constexpr function %0 without __host__ or __device__ attributes cannot overload __device__ function with same signature.  Add a __host__ attribute, or build with -fno-cuda-host-device-constexpr.
cannot use variable-length arrays in %select{__device__|__global__|__host__|__host__ __device__}0 functions
module name '%0' specified on command line does not match name of module
%select{reference|backing array for 'std::initializer_list'}2 %select{|subobject of }1member %0 %select{binds to|is}2 a temporary object whose lifetime would be shorter than the lifetime of the constructed object
dealloc return type must be correctly specified as 'void' under ARC, instead of %0
GNU decimal type extension not supported
%0 attribute cannot be applied to a statement
'%0' declared as an array with a negative size
declarator requires an identifier
'__declspec(thread)' applied to variable that already has a thread-local storage specifier
'decltype(auto)' cannot be combined with other type specifiers
cannot form %select{pointer to|reference to|array of}0 'decltype(auto)'
'decltype(auto)' can only be used as a return type in a function declaration
cannot deduce 'decltype(auto)' from initializer list
'decltype(auto)' not allowed here
'decltype' cannot be used to name a declaration
cannot decompose members of ambiguous base class %1 of %0:%2
cannot decompose class type %0 because it has an anonymous %select{struct|union}1 member
decomposition declaration not permitted in this context
cannot decompose members of inaccessible base class %1 of %0
cannot decompose %select{private|protected}0 member %1 of %3
cannot decompose lambda closure type
cannot decompose class type %1: %select{its base classes %2 and|both it and its base class}0 %3 have non-static data members
decomposition declaration must be the only declaration in its group
decomposition declaration cannot be declared with parentheses
decomposition declaration %0 requires an initializer
decomposition declaration cannot be declared %plural{1:'%1'|:with '%1' specifiers}0
cannot decompose this type; 'std::tuple_element<%0>::type' does not name a type
cannot decompose this type; 'std::tuple_size<%0>::value' is not a valid integral constant expression
decomposition declaration template not supported
decomposition declaration cannot be declared with type %0; declared type must be 'auto' or reference to 'auto'
cannot decompose %select{union|non-class, non-array}1 type %2
type %0 decomposes into %2 elements, but %select{only |}3%1 names were provided
cannot decrement expression of type bool
cannot %select{form pointer to|form reference to|form array of|form function returning|use parentheses when declaring variable with}0 deduced class template specialization type
ambiguous deduction for template arguments of %0
no viable constructor or deduction guide for deduction of template arguments of %0
class template argument deduction for %0 selected a deleted constructor
class template argument deduction for %0 selected an explicit %select{constructor|deduction guide}1 for copy-list-initialization
template %0 has no definition and no %select{|viable }1deduction guides for deduction of template arguments
%select{<error>|function template|variable template|alias template|template template parameter|concept|template}0 %1 requires template arguments; argument deduction only allowed for class templates
deduced non-type template argument does not have the same type as the corresponding template parameter%diff{ ($ vs $)|}0,1
deduced return types are a C++14 extension
typename specifier refers to %select{class template|function template|variable template|alias template|template template parameter|template}0; argument deduction not allowed here
deduced type %1 of deduction guide is not %select{|written as }2a specialization of template %0
deduction guide cannot have a function definition
deduction guide cannot be declared '%0'
cannot specify deduction guide for %select{<error>|function template|variable template|alias template|template template parameter|concept|dependent template name}0 %1
deduction guide declaration without trailing return type
redeclaration of deduction guide
deduction guide cannot be %select{explicitly instantiated|explicitly specialized}0
deduction guide template contains %select{a template parameter|template parameters}0 that cannot be deduced
cannot specify any part of a return type in the declaration of a deduction guide
deduction guide has different access from the corresponding member template
deduction guide must be declared in the same scope as template %q0
exception specifications of %select{return|argument}0 types differ
default template argument in a class template partial specialization
addition of default argument on redeclaration makes this constructor a %select{default|copy|move}0 constructor
default initialization of an object of const type %0%select{| without a user-provided default constructor}1
default member initializer for %0 uses itself
default member initializer for %1 needed within definition of enclosing class %0 outside of member functions
'default' statement not in switch statement
return type of defaulted 'operator<=>' cannot be deduced because three-way comparison for %select{|member|base class}0 %1 has a deduced return type and is not yet defined
deduced return type for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must be 'auto', not %1
defaulted member %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must be const-qualified
%select{<ERROR>|equality|three-way|equality|relational}0 comparison operator can only be defaulted in a class definition
invalid parameter type for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator; found %1, expected %2%select{| or %4}3
parameters for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must have the same type%diff{ (found $ vs $)|}1,2
return type for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must be 'bool', not %1
comparison operator template cannot be defaulted
the parameter for an explicitly-defaulted copy assignment operator must be an lvalue reference type
the parameter for this explicitly-defaulted copy %select{constructor|assignment operator}0 is const, but a member or base requires it to be non-const
the parameter for an explicitly-defaulted move %select{constructor|assignment operator}0 may not be const
an explicitly-defaulted %select{|copy |move }0constructor cannot have default arguments
an explicitly-defaulted %select{copy|move}0 assignment operator may not have 'const'%select{, 'constexpr'|}1 or 'volatile' qualifiers
explicitly-defaulted %select{copy|move}0 assignment operator must return %1
an explicitly-defaulted %select{|copy |move }0constructor cannot be variadic
the parameter for an explicitly-defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 may not be volatile
definition of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0
definition of implicitly declared %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}1
delegating constructors are permitted only in C++11
an initializer for a delegating constructor must appear alone
converting delete expression from type %0 to type %1 invokes an explicit conversion function
deleting incomplete class type %0; no conversions to pointer type
cannot delete expression of type %0
deleted definition must be first declaration
attempt to use a deleted function
constructor inherited by %0 from base class %1 is implicitly deleted
'main' is not allowed to be deleted
deleted function %0 cannot override a non-deleted function
typename specifier refers to %select{class template|function template|variable template|alias template|template template parameter|template}0 member in %1; argument deduction not allowed here
no candidate function template was found for dependent friend function template specialization
nested name specifier for a declaration cannot depend on a template parameter
type of specialized non-type template argument depends on a template parameter of the partial specialization
%select{declaration|definition}0 of %select{struct|interface|union|class|enum}1 in a dependent scope
non-type template argument specializes a template parameter with dependent type %0
dereference of pointer to incomplete type %0
'objc_designated_initializer' attribute only applies to init methods of interface or class extension declarations
designator in initializer for %select{scalar|indivisible sizeless}0 type %1
designator into flexible array member subobject
%select{no_destroy|always_destroy}0 attribute can only be applied to a variable with static or thread storage duration
destroying operator delete can have only an optional size and optional alignment parameter
destructor cannot be declared '%0'
identifier %0 in object destruction expression does not name the type %1 of the object being destroyed
identifier %0 in object destruction expression does not name a type
destructor type %0 in object destruction expression does not match the type %1 of the object being destroyed
expected the class name after '~' to name the enclosing class
identifier %0 after '~' in destructor name does not name a type
destructor must be a non-static member function
destructor cannot be redeclared
destructor cannot have a return type
destructor cannot be declared as a template
destructor cannot be variadic
destructor cannot have any parameters
%0 requires %1 bit size %2 type support, but device '%3' does not support it
invalid diagnostic type for 'diagnose_if'; use "error" or "warning" instead
conflicting asm label
declaration of %0 has a different language linkage
conflicting pass_object_size attributes on parameters
virtual function %0 has a different return type %diff{($) than the function it overrides (which has return type $)|than the function it overrides}1,2
dimension expression does not evaluate to a constant unsigned int
@selector expression formed with direct selector %0
exception specifications are not allowed beyond a single level of indirection
cannot cast %select{private|protected}2 base class %1 to %0
reference to %select{destructor|pseudo-destructor}0 must be called%select{|; did you mean to call it with no arguments?}1
reimplementation of category %1 for class %0
reimplementation of class %0
base class %0 specified more than once as a direct base class
duplicate case value '%0'
duplicate case value: '%0' and '%1' both equal '%2'
duplicate interface definition for class %0
instance variable is already declared
synthesized properties %0 and %1 both claim instance variable %2
duplicate member %0
duplicate declaration of method %0
property has a previous declaration
multiple vtable pointer authentication policies on %0
dynamic property cannot have instance variable specification
dynamic initialization is not supported for __device__, __constant__, and __shared__ variables.
catch-all handler must come last
ISO C requires a named parameter before '...'
only function and template parameters can be parameter packs
scalar initializer cannot be empty
initializer for sizeless type %0 cannot be empty
non-integral type %0 is an invalid underlying type
mode %0 is not supported for enumeration types
enumeration previously declared with %select{non|}0fixed underlying type
enumeration previously declared as %select{un|}0scoped
enumeration redeclared with different underlying type %0 (was %1)
enumerator %0 does not exist in instantiation of %1
enumerator value is not representable in the underlying type %0
enumerator value %0 is not representable in the underlying type %1
the event_t type can only be used with __private address space qualifier
exception specification of %0 uses itself
exception specifications are not allowed in %select{typedefs|type aliases}0
exception specification needed for member of incomplete class %0
exception specification is not available until end of class definition
cannot use '%0' with exceptions disabled
excess elements in %select{array|vector|scalar|union|struct}0 initializer
excess elements in initializer for indivisible sizeless type %0
excess elements in char array initializer
expected an 'allocator' clause inside of the target region; provide an 'allocator' clause or use 'requires' directive with the 'dynamic_allocators' clause
expected an allocator expression inside of the target region; provide an allocator expression or use 'requires' directive with the 'dynamic_allocators' clause
%0 is not a class%select{ or namespace|, namespace, or enumeration}1
kernel must have void return type
partial ordering for explicit instantiation of %0 is ambiguous
explicit instantiation cannot be 'constexpr'
explicit instantiation refers to static data member %q0 that is not an instantiation
explicit instantiation declaration (with 'extern') follows explicit instantiation definition (without 'extern')
duplicate explicit instantiation of %0
explicit instantiation of %0 in class scope
explicit instantiation cannot be 'inline'
explicit instantiation declaration of %0 with internal linkage
explicit instantiation refers to member function %q0 that is not an instantiation
explicit instantiation of %0 must occur at global scope
explicit instantiation of non-templated type %0
explicit instantiation of %0 does not refer to a function template, variable template, member function, member class, or static data member
explicit instantiation of typedef %0
explicit instantiation of %0 not in a namespace enclosing %1
explicit instantiation declaration requires a name
explicit instantiation cannot have a storage class
explicit instantiation of undefined function template %0
explicit instantiation of undefined %select{member class|member function|static data member}0 %1 of class template %2
explicit instantiation of undefined variable template %q0
explicit instantiation of %q0 must occur in namespace %1
explicit instantiation of %q0 must specify a template argument list
'explicit' can only be applied to a constructor or conversion function
'explicit' can only appear on non-static member functions
'explicit' can only be specified inside the class definition
explicit specialization has extraneous, inconsistent storage class '%select{none|extern|static|__private_extern__|auto|register}0'
export declaration cannot be used in a private module fragment
declaration of %0 with internal linkage cannot be exported
%select{empty|static_assert|asm}0 declaration cannot be exported
export declaration can only be used within a module interface unit%select{ after the module declaration|}0
using declaration referring to %0 with internal linkage cannot be exported
export declaration appears within anonymous namespace
export declaration appears within another export declaration
%select{case value|enumerator value|non-type template argument|array size|constexpr if condition|explicit specifier argument}0 is not a constant expression
expression is not an %select{integer|integral}0 constant expression
expression is not a string literal
%select{signed|unsigned}0 _ExtInt must have a bit size of at least %select{2|1}0
%select{signed|unsigned}0 _ExtInt of bit sizes greater than %1 not supported
vector component access exceeds type %0
illegal vector component name '%0'
declaration of %1 %select{with C language linkage|in global scope}0 conflicts with declaration %select{in global scope|with C language linkage}0
extern declaration of %0 follows non-extern declaration
non-void block does not return a value
fallthrough annotation does not directly precede switch label
fallthrough annotation is outside switch statement
%0 attribute is only allowed on empty statements
field %0 declared as a function
field designator cannot initialize a %select{non-struct, non-union|non-class}0 type %1
field designator %0 does not refer to a non-static data member
field designator %0 does not refer to any field in type %1
field designator %0 does not refer to any field in type %1; did you mean %2?
field has %select{incomplete|sizeless}0 type %1
data member instantiated with function type %0
field may not be qualified with an address space
filter expression has non-integral type %0
declaration of %0 overrides a '%select{final|sealed}1' function
%0 cannot be set as a default pointer attribute
parameter of array type %0 decays to a __single pointer, and will not allow arithmetic
arrays with an explicit size decay to counted pointers and cannot also have a count attribute
pointer cannot be '__%0' and '__%select{bidi_indexable|indexable}1' at the same time
pointer cannot have count and range at the same time
pointer cannot have more than one %select{bound|type|count|end}0 attribute
bounds of %0 have been unexpectedly changed by a new assignment of %1; reorder the assignments
not allowed to change out parameter used as dependent count expression of other parameter
not allowed to change out parameter with dependent count
assignments to dependent variables should not have side effects between them
dynamic count of a wide pointer cannot be used with inline assembly
initalizer for %select{count|size|'__counted_by' pointer|'__sized_by' pointer|'__ended_by' pointer|end pointer}0 with side effects is not supported yet
compound assignment on dynamic bound pointer type %0 with side effects is not supported yet;instead, use seperate assignment and binary expressions
%select{decrement|increment}0 operator on dynamic bound pointer type %1 is not supported yet
conflicting '%select{__counted_by|__sized_by|__ended_by}0' attribute with the previous function declaration
end-pointer must be '__single'
'__unsafe_forge_%select{bidi_indexable|single}0' requires a pointer, array or integer address argument
'__unsafe_forge_bidi_indexable' requires an integer size argument
negative %select{address|size}0 argument to '__unsafe_forge_%select{bidi_indexable|single}1'
dynamic count argument shall not have side effect; use temporary variable to avoid the error
function pointers cannot be indexable
attribute %0 is not allowed for global variables
incompatible count expression (%0) vs. (%1) in argument to function
incompatible dynamic count pointer argument to function argument type %0
incrementing dynamic count without updating the dependent pointer never succeeds
cannot decrement indexable pointer '%0'
array subscript with negative index on indexable pointer '%0' is not allowed
%select{|implicitly }0initializing negative %select{count|size}1 for %select{'__counted_by'|'__sized_by'}1 pointer field %2
%select{|implicit }0zero-initialization of %select{'__counted_by'|'__sized_by'}1 pointer field %2 with non-zero %select{count|size}1 never succeeds
cannot initialize %select{'__counted_by'|'__sized_by'}0 pointer field %1 with %select{count|size}0 %2 which is larger than the actual %select{count|size}0 of the field initializer '%3'
indexable pointer underflows the original object
local dependent count decl should be declared side by side to its dependent pointer
local dependent count decl should be declared in the same scope of its dependent pointer
local dependent count decl shall not be shared with other pointer decl
incompatible pointer types assigning %0 with an expression with mismatching size attributes %1
missing assignment to dependent variable %0; add self assignment '%0 = %0' if the value has not changed
multiple consecutive assignments to a %select{dynamic count|dynamic count pointer|ranged pointer}0 %1 must be simplified; keep only one of the assignments
negative count expression
nested dependent count pointer is only allowed for out parameters
%0 is not allowed for nested pointers
cannot extract the %select{lower|upper}0 bound of %1 because %select{it is not a pointer|it has no bounds specification|its bounds are not contained within the pointer|its single element has a flexible array member}2
local variable %0 must be declared right next to its dependent decl
non-pointer to safe pointer conversion is not allowed with firebloom; use '__unsafe_forge_single' or '__unsafe_forge_bidi_indexable'
pointer with bounds cannot be used with inline assembly
Pointer authentication is currently unsupported on indexable pointers
attribute %0 is only allowed for struct fields or function parameters
side effects between arguments of dynamic count pointer and its dependent count are not allowed; use temporary variable to avoid the error
pointer arithmetic on single pointer '%0' is not allowed
array subscript on single pointer '%0' is not allowed
%0 cannot apply to arrays: use 'counted_by' instead
taking address of an auto-bound variable %0 is not allowed; specify a firebloom bounds attribute (__single/__bidi_indexable/__indexable/__unsafe_indexable) to the declaration
variable used in dynamic count expression cannot escape to another variable
dynamic count pointer variable cannot escape to another variable
%0 is not allowed inside typedef
conversion from pointer type %0 to a counted pointer of %1 elements never succeeds
conversion from pointer type %0 with pointee of size %1 to sized pointer type with greater size %2 never succeeds
unsafe pointer to indexable pointer conversion is not allowed in firebloom; use '__unsafe_forge_bidi_indexable'
taking the address of an incomplete __counted_by array is not yet supported
flexible array member with dynamic count is not supported yet
invalid function call with unsynchronized dynamic count pointers as out parameters
void pointers must use a byte count attribute instead of an item count
first argument to __builtin_call_with_static_chain must not be a block call
first argument to __builtin_call_with_static_chain must not be a builtin call
first argument to __builtin_call_with_static_chain must be a non-member call expression
first argument to __builtin_call_with_static_chain must not be a pseudo-destructor call
first argument to 'va_arg' is of type %0 and not 'va_list'
ARC forbids flexible array members with retainable object type
flexible array member %0 not allowed in otherwise empty %select{struct|interface|union|class|enum}1
flexible array member %0 of type %1 with non-trivial destruction
initialization of flexible array member is not allowed
flexible array requires brace-enclosed initializer
Firebloom forbids passing %0 by copy because it has a flexible array member
flexible array member %0 with type %1 is not at the end of %select{struct|interface|union|class|enum}2
flexible array member %0 in a union is not allowed
flexible array member %0 not allowed in %select{struct|interface|union|class|enum}1 which has a virtual base class
expression not permitted as operand of fold expression
unary fold expression has empty expansion for operator '%0' with no fallback value
instantiating fold expression with %0 arguments exceeded expression nesting limit of %1
binary fold expression has unexpanded parameter packs in both operands
for range declaration must declare a variable
cannot use type %0 as a range
invalid range expression of type %0; did you mean to dereference it with '*'?
cannot use incomplete type %0 as a range
invalid range expression of type %0; no viable '%select{begin|end}1' function available
cannot use type %0 as an iterator
loop variable %0 may not be declared %select{'extern'|'static'|'__private_extern__'|'auto'|'register'|'constexpr'|'thread_local'}1
format attribute cannot specify the implicit this argument as the format string
format argument not %0
format attribute requires variadic function
function does not return %0
strftime format attribute requires 3rd parameter to be 0
ISO C++ forbids forward references to 'enum' types
attempting to use the forward class %0 as superclass of %1
explicit qualification required to use member %0 from dependent base class
member %0 used before its declaration
friend declaration of %0 does not match any declaration in %1
friend declaration specifying a default argument must be a definition
friend declaration specifying a default argument must be the only declaration
friend function cannot be defined in a local class
friends cannot be members of the declaring class
'friend' must appear first in a non-function declaration
incomplete result type %0 in function definition
function cannot return %select{array|function}0 type %1
function cannot return qualified void type %0
function declared with %0 attribute was previously declared without the %0 attribute
functions may not be declared with 'cmse_nonsecure_call' attribute
%0 marked 'override' but does not override any member functions
type %0 of function parameter pack does not contain any unexpanded parameter packs
function template partial specialization is not allowed
function template specialization %0 ambiguously refers to more than one function template; explicitly specify%select{| additional}1 template arguments to identify a particular function template
no function template matches function template specialization %0
weak attribute declared on a __strong type property in GC mode
controlling expression type %0 compatible with %1 generic association types
controlling expression type %0 not compatible with any generic association type
__builtin_get_vtable_pointer requires an argument of%select{| polymorphic}0 class pointer type, but %1 %select{was provided|has no virtual methods}0
__builtin_get_vtable_pointer requires an argument with a complete type, but %0 is incomplete
no getter method for read from property
call to global function %0 not configured
cannot jump from this goto statement to its label
cannot jump from this goto statement to label %0 inside an inline assembly block
half precision constant requires cl_khr_fp16
type argument of iboutletcollection attribute cannot be a builtin type
invalid type %0 as argument of iboutletcollection attribute
ambiguous conversion from type %0 to an integral or unscoped enumeration type
integral constant expression requires explicit conversion from %0 to %1
integral constant expression has incomplete class type %0
%select{integer|integral}1 constant expression must have %select{integer|integral or unscoped enumeration}1 type, not %0
integer constant expression evaluates to value %0 that cannot be represented in a %1-bit %select{signed|unsigned}2 integer type
a parameter list without types is only allowed in a function definition
illegal operation on Objective-C container subscripting
'%0' declared as array of %1
'%0' declared as array of functions of type %1
'%0' declared as array of references of type %1
'%0' does not point into a class
'%0' declared as a member pointer to a reference of type %1
'%0' declared as a member pointer to void
'%0' declared as a pointer to a reference of type %1
illegal initializer (only variables can be initialized)
illegal initializer type %0
Objective-C message has incomplete result type %0
illegal qualifiers on @catch parameter
%select{anonymous struct|union}0 member %1 has a non-trivial %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
imaginary types are not supported
implicit conversion from %0 to %1 is not permitted in C++
cannot declare implementation of a class declared with the 'objc_class_stub' attribute
std::nothrow was not found; include <new> before defining a coroutine which uses get_return_object_on_allocation_failure()
initializer for aggregate with no elements requires explicit braces
implicit instantiation of undefined member %0
cannot %select{use builtin operator '<=>'|default 'operator<=>'}1 because type '%0' was not found; include <compare>
%0 type was not found; include <experimental/coroutine> before defining a coroutine
this function cannot be a coroutine: %0 is not a class
this function cannot be a coroutine: %q0 has no member named 'promise_type'
cannot deduce type of initializer list because std::initializer_list was not found; include <initializer_list>
static data member of type %0 must be initialized out of line
in-class initializer for static data member of type %0 requires 'constexpr' specifier
non-const static data member must be initialized out of line
in-class initializer for static data member is not a constant expression
static const volatile data member must be initialized out of line
target exception specification is not superset of source
conversion between pointers to functions with incompatible firebloom attributes
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2
API notes replacement type %0 has a different size from original type %1
incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
base class has incomplete type
%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification
member access into incomplete type %0
incomplete type %0 named in nested name specifier
incomplete type in call to object of type %0
incomplete receiver type %0
cannot synthesize property %0 with incomplete type %1
incomplete type %0 where a complete type is required
'@encode' of incomplete type %0
incomplete type %0 used in type trait expression
cannot set vtable pointer authentication on an incomplete type %0
'typeid' of incomplete type %0
inconsistent number of instance variables specified
defaulted definition of %select{%select{<ERROR>|equality|three-way|equality|relational}1 comparison operator|three-way comparison operator}0 cannot be declared %select{constexpr|consteval}2 because %select{it|the corresponding implicit 'operator=='}0 invokes a non-constexpr comparison function
defaulted declaration of %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 cannot be consteval because implicit definition is not constexpr
defaulted definition of %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 is not constexpr
number of elements must be either one or match the size of the vector
cannot %select{decrement|increment}0 expression of enum type %1
cannot jump from this %select{indirect|asm}0 goto statement to one of its possible targets
indirect goto in function with no address-of-label expressions
cannot deduce type for lambda capture %0 from initializer of type %2
cannot deduce type for lambda capture %0 from initializer list
initializer for lambda capture %0 contains multiple expressions
initializer missing for lambda capture %0
cannot deduce type for lambda capture %1 from %select{parenthesized|nested}0 initializer list
cannot initialize %select{a variable|a parameter|template parameter|return object|statement expression result|an exception object|a member subobject|an array element|a new value|a value|a base class|a constructor delegation|a vector element|a block element|a block element|a complex element|a lambda capture|a compound literal initializer|a related result|a parameter of CF audited function}0 %diff{of type $ with an %select{rvalue|lvalue}2 of type $|with an %select{rvalue|lvalue}2 of incompatible type}1,3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%5 vs %6)|: different exception specifications}4
initializer element is not a compile-time constant
cannot create object of function type %0
initialization of incomplete type %0
%select{|non-aggregate }0type %1 cannot be initialized with an initializer list
init methods must return an object pointer type, not %0
initialization of non-aggregate type %0 with an initializer list
cannot initialize Objective-C class type %0
can only use 'init_priority' attribute on file-scope definitions of objects of class type
reference member of type %0 uninitialized
initializer would partially override prior initialization of object of type %1 with non-trivial destruction
initializer-string for char array is too long
inline declaration of %0 follows non-inline definition
inline declaration of %0 not allowed in block scope
'main' is not allowed to be declared inline
non-inline namespace cannot be reopened as inline
'inline' can only appear on functions%select{| and non-local variables}0
invalid block pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
integer sequences must have integral element type
integer sequences must have non-negative sequence length
'internal_linkage' attribute does not appear on the first declaration of %0
%plural{[0,2]:must use a qualified name when declaring|3:cannot declare}0 a %select{constructor|destructor|conversion operator|deduction guide}0 as a friend
invalid address discrimination mode %0
invalid use of a cast in a inline asm context requiring an lvalue: remove the cast or build with -fheinous-gnu-extensions
value '%0' out of range for constraint '%1'
invalid reinterpretation: sizes of %0 and %1 must match
%0 attribute cannot be applied to virtual functions
invalid authentication key %0
interface type cannot inherit from %select{struct|non-public interface|class}0 %1
invalid or misplaced branch protection specification '%0'
collection element of type %0 is not an Objective-C object
'_Complex %0' is invalid
call to consteval function %q0 is not a constant expression
%0 cannot be declared consteval
cannot take address of consteval function %0 outside of an immediate invocation
%select{function parameter|typedef}0 cannot be %select{<ERROR>|constexpr|consteval|constinit}1
non-static data member cannot be constexpr%select{; did you intend to make it %select{const|static}0?|}1
constexpr variable declaration must be a definition
invalid conversion between ext-vector type %0 and %1
invalid conversion between vector type %0 and integer type %1 of different size
invalid conversion between vector type %0 and scalar type %1
invalid conversion between vector type%diff{ $ and $|}0,1 of different size
invalid cpu name for builtin
invalid option '%0' for %select{cpu_specific|cpu_dispatch}1
invalid cpu feature string for builtin
invalid custom discrimination
count expression %select{on struct field|in function declaration}0 may only reference %select{other fields of the same struct|parameters of that function}0
cannot use %0 on union fields
cannot combine with previous '%0' declaration specifier
invalid declaration specifier in template non-type parameter
definition or redeclaration of %0 cannot name the global scope
definition or redeclaration of %0 not allowed inside a block
definition or redeclaration of %0 not allowed inside a function
cannot define or redeclare %0 here because namespace %1 does not enclose namespace %2
invalid extra discrimination selection %0
cannot create a non-constant pointer to member function
invalid use of incomplete type %0
mask type size must be between 1-byte and 8-bytes
invalid use of member %0 in static member function
incompatible constant for this __builtin_neon function
invalid use of non-static data member %0
%0 is not a valid literal type for NSNumber
invalid PCS type
'__pixel' must be preceded by '__vector'.  '%0' declaration specifier not allowed here
%0 is not a valid property name (accessing an object of type %1)
invalid protocol qualifiers on non-ObjC type
'%0' qualifier is not allowed on a constructor
'%0' qualifier is not allowed on a destructor
%select{non-member function|static member function|deduction guide}0 %select{of type %2 |}1cannot have '%3' qualifier
receiver type %0 is not an Objective-C class
'super' is only valid in a method body
'_Sat' specifier is only valid on '_Fract' or '_Accum', not '%0'
'%0' cannot be signed or unsigned
invalid use of '__super', this keyword can only be used inside class or member function scope
invalid use of 'this' outside of a non-static member function
'%0' is only allowed on variable declarations
the %0 type cannot be used to declare a program scope variable
invalid application of __builtin_xnu_type_signature to %select{variable array}0 type %1
an array type is not allowed here
a function type is not allowed here
type %2 of %select{explicit instantiation|explicit specialization|partial specialization|redeclaration}0 of %1 does not match expected type %3
cannot use '%0' with '__vector bool'
use of '__int128' with '__vector bool' requires VSX support enabled (on POWER10 or later)
cannot combine with previous '%0' declaration specifier. '__vector' must be first
use of 'double' with '__vector' requires VSX support to be enabled (available on POWER7 or later)
cannot use 'float' with '__vector'
cannot use 'long' with '__vector'
cannot use 'long double' with '__vector'
use of 'long long' with '__vector bool' requires VSX support (available on POWER7 or later) or extended Altivec support (available on POWER8 or later) to be enabled
'%select{|short|long|long long}0 %1' is invalid
property %0 not found on object of type %1; did you mean to access instance variable %2?
property %0 attempting to use instance variable %1 declared in super class %2
instance variables cannot be of reference type
instance variable %0 accessed in class method
kernel call to non-global function %0
kernel function %0 must be a free function or static member function
kernel function type %0 must have void return type
pointer arguments to kernel functions must reside in '__global', '__constant' or '__local' address space
unnamed variable cannot be implicitly captured in a lambda expression
lambda expression in default argument cannot capture any entity
variable %0 with flexible array member cannot be captured in a lambda expression
cannot assign to a variable captured by copy in a non-mutable lambda
variable %0 cannot be implicitly captured in a lambda with no capture-default specified
a lambda expression may not appear inside of a constant expression
a lambda expression cannot appear in this context
incomplete result type %0 in lambda expression
cannot deduce lambda return type from initializer list
lambda expression in an unevaluated operand
string literal in language linkage specifier cannot have an encoding-prefix
unknown linkage language
cannot apply asm label to %select{variable|function}0 after its first use
'lifetimebound' attribute cannot be applied to a %select{constructor|destructor}0
'lifetimebound' attribute cannot be applied; %select{static |non-}0member function has no implicit object parameter
cannot initialize %select{non-class|reference}0 type %1 with a parenthesized initializer list
non-template literal operator must have one or two parameters
literal operator cannot have a default argument
literal operator must have C++ linkage
non-namespace scope '%0' cannot have a literal operator member
parameter of literal operator must have type 'unsigned long long', 'long double', 'char', 'wchar_t', 'char16_t', 'char32_t', or 'const char *'
literal operator %0 must be in a namespace or global scope
invalid literal operator parameter type %0, did you mean %1?
template parameter list for literal operator must be either 'char...' or 'typename T, T...'
literal operator template cannot have any parameters
second argument to __builtin_load_member_function_pointer must be the address of a C++ member function: for example '&Foo::func', or null
first argument to __builtin_load_member_function_pointer must have C++ class type
variable with 'loader_uninitialized' attribute cannot have an initializer
variable %0 cannot be declared both 'extern' and with the 'loader_uninitialized' attribute
redeclaration cannot add 'loader_uninitialized' attribute
variable with 'loader_uninitialized' attribute must have a trivial default constructor
'__local' variable cannot have an initializer
%select{non-const|volatile}0 lvalue reference to type %1 cannot bind to an initializer list temporary
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a temporary of type $|cannot bind to incompatible temporary}1,2
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a value of unrelated type $|cannot bind to a value of unrelated type}1,2
rvalue reference %diff{to type $ cannot bind to lvalue of type $|cannot bind to incompatible lvalue}0,1
%select{unknown|unsupported}0 machine mode %1
%select{first|second|third|fourth}0 parameter of 'main' (%select{argument count|argument array|environment|platform-specific data}0) must be of type %1
main cannot be declared as global variable
'main' must return 'int'
too many parameters (%0) for 'main': must be 0, 2, or 3
%0 cannot be a template
std::experimental::coroutine_handle must be a class template
'std::experimental::coroutine_traits' must be a class template
std::initializer_list must be a class template with a single type parameter
std::nothrow must be a valid variable declaration
single subscript expressions are not allowed for matrix values
matrix %select{row|column}0 index is not an integer
matrix %select{row|column}0 index is outside the allowed range [0, %1)
matrix row and column subscripts cannot be separated by any expression
comma expressions are not allowed as indices in matrix subscript expressions
non-void block does not return a value in all control paths
member initializer %0 does not name a non-static data member or base class
initializer %0 does not name a non-static data member or base class; did you mean the %select{base class|member}1 %2?
call to non-static member function without an object argument
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1; did you mean %3?
return type of out-of-line definition of %q0 differs from that in the declaration
out-of-line definition of %0 from class %1 without definition
extra qualification on member %0
'this' argument to member function %0 has type %1, but function is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}2
'this' argument to member function %0 is an %select{lvalue|rvalue}1, but function has %select{non-const lvalue|rvalue}2 ref-qualifier
cannot initialize object parameter of type %0 with an expression of type %1
initializer on function does not look like a pure-specifier
member %0 has the same name as its class
no member %0 in %1; it has not yet been instantiated
non-friend class member %0 cannot have a qualified name
class member cannot be redeclared
multiple overloads of %0 instantiate to the same signature %1
base of member reference is a function; perhaps you meant to call it%select{| with no arguments}0?
member pointer refers into non-class type %0
conversion from pointer to member of class %0 to pointer to member of class %1 via virtual base %2 is not allowed
member pointer has incomplete base type %0
at least one argument of MTE builtin function must be a pointer (%0, %1 invalid)
%0 argument of MTE builtin function must be an integer type (%1 invalid)
%0 argument of MTE builtin function must be a pointer (%1 invalid)
%0 argument of MTE builtin function must be a null or a pointer (%1 invalid)
messaging a Class with a method that is possibly direct
messaging super with a direct method
messaging unqualified id with a method that is possibly direct
kernel functions cannot be class members
%select{instance|class}1 method %0 not found ; did you mean %2?
this builtin requires 'dsp' ASE, please use -mdsp
this builtin requires 'dsp r2' ASE, please use -mdspr2
this builtin requires 'msa' ASE, please use -mmsa
derived class must specify the same code segment as its base classes
overriding virtual function must specify the same code segment as its overridden function
exception specification in declaration does not match previous declaration
exception specification in explicit instantiation does not match instantiated one
inheritance model does not match %select{definition|previous declaration}0
declaration of %0 in %select{the global module|module %2}1 follows declaration in %select{the global module|module %4}3
uuid does not match previous declaration
visibility does not match previous declaration
instance variables may not be placed in %select{categories|class extension}0
missing actual type specifier for pipe
%select{string|numeric}0 literal must be prefixed by '@'
missing custom discrimination
%select{constructor for %1 must explicitly initialize the|implicit default constructor for %1 must explicitly initialize the|cannot use constructor inherited from base class %4;}0 %select{base class|member}2 %3 %select{which|which|of %1}0 does not have a default constructor
%0 is missing exception specification '%1'
missing context for method declaration
missing '[' at start of message send expression
missing context for property implementation declaration
property implementation in a category with no category declaration
synthesized property %0 must either be named the same as a compatible instance variable or must explicitly name an instance variable
C++ requires a type specifier for all declarations
cannot use C++ 'try' in the same function as SEH '__try'
mode attribute only supported for integer and floating-point types
type of machine mode does not match type of base type
'module' declaration found while building header unit
'module' declaration found while building module from module map
module declaration must occur at the start of the translation unit
missing 'export module' declaration in module interface unit
missing 'module' declaration at end of global module fragment introduced here
@import of module '%0' in implementation of '%1'; use #import
import of module '%0' appears within %1
missing 'export' specifier in module declaration while building module interface
definition of module '%0' is not available; use -fmodule-file= to specify path to precompiled module interface
%select{local variable|parameter|typedef}0 %1 cannot be declared __module_private__
local %select{struct|interface|union|class|enum}0 cannot be declared __module_private__
%select{template|partial|member}0 specialization cannot be declared __module_private__
translation unit contains multiple module declarations
redefinition of module '%0'
import of module '%0' appears within same top-level module '%1'
%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from module '%2' before it is required
%select{missing '#include'|missing '#include %3'}2; %select{||default argument of |explicit specialization of |partial specialization of }0%1 must be %select{declared|defined|defined|declared|declared}0 before it is used
%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from one of the following modules before it is required:%2
'__leave' statement not in __try block
'__builtin_ms_va_start' used in System V ABI function
arguments to __annotation must be wide string constants
multiple initializations given for base %0
multiple coupled declarations in a firebloom attribute are not supported yet
multiple default labels in one switch
virtual function %q0 has more than one final overrider in %1
multiple initializations given for non-static member %0
initializing multiple members of union
function declaration cannot become a multiversioned function after first usage
multiversioned function declaration has a different %select{calling convention|return type|constexpr specification|inline specification|storage class|linkage}0
attribute '%select{target|cpu_specific|cpu_dispatch}0' multiversioning cannot be combined with attribute %1
attribute '%select{target|cpu_specific|cpu_dispatch}0' multiversioned functions do not yet support %select{function templates|virtual functions|deduced return types|constructors|destructors|deleted functions|defaulted functions|constexpr functions|consteval function}1
multiversioned function redeclarations require identical target attributes
attributes on multiversioned functions must all match, attribute %0 %select{is missing|has different arguments}1
multiversioned function must have a prototype
'main' cannot be a multiversioned function
function multiversioning is not supported on the current target
function declaration is missing %select{'target'|'cpu_specific' or 'cpu_dispatch'}0 attribute in a multiversioned function
multiversioning attributes cannot be combined
'mutable' and 'const' cannot be mixed
'mutable' cannot be applied to functions
'mutable' can only be applied to member variables
'mutable' cannot be applied to references
you need to include <guiddef.h> before using the '__uuidof' operator
you need to include <typeinfo> before using the 'typeid' operator
pointers with incompatible firebloom attributes %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
lookup of %0 in member access expression is ambiguous
%0 cannot appear before '::' because it is not a class%select{ or namespace|, namespace, or enumeration}1; did you mean ':'?
type %0 cannot be used prior to '::' because it has no members
%select{call to non-static member function|use of non-static data member}0 %2 of %1 from nested type %3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types
nested redefinition of %0
'abi_tag' %0 missing in original declaration
array 'new' cannot have initialization arguments
only the first dimension of an allocated array may have dynamic size
cannot allocate array of 'auto'
cannot determine allocated array size from initializer
allocation of %select{incomplete|sizeless}0 type %1
no %select{getter|setter}0 defined for property %1
invalid use of '__super', %0 has no base classes
declaration does not declare anything
cannot specify a default vtable pointer authentication %select{key|address discrimination mode|discriminator}0 with no default set
use of dynamic_cast requires -frtti
no matching function found in local scope
no matching function %0 found in local scope; did you mean %3?
no member named %0 in %1
no member named %0 in %1; did you mean to use '->' instead of '.'?
no member named %0 in %1; did you mean %select{|simply }2%3?
no template named %0 in %1
no template named %0 in %1; did you mean %select{|simply }2%3?
cannot find interface declaration for %0
expression is not assignable
no suitable member %0 in %1
no @interface declaration found in class messaging of %0
no template named %0
no template named %0; did you mean %1?
use of typeid requires -frtti
argument to noexcept specifier must be a constant expression
a getter method is needed to perform a compound assignment on a property
no getter method %1 for %select{increment|decrement}0 of property
non-ASM statement in naked function is not supported
atomic constraint must be of type 'bool' (found %0)
anonymous non-C-compatible type given name for linkage purposes by %select{typedef|alias}0 declaration after its linkage was computed; add a tag name here to establish linkage prior to definition
substitution into constraint expression resulted in a non-constant expression
non-consteval function %0 cannot override a consteval function
non-deleted function %0 cannot override a deleted function
non-extern declaration of %0 follows extern declaration
defaulting %select{this %select{<ERROR>|equality|three-way|equality|relational}1 comparison operator|the corresponding implicit 'operator==' for this defaulted 'operator<=>'}0 would delete it after its first declaration
declaration of non-local variable in 'for' loop
cannot set vtable pointer authentication on monomorphic type %0
non-static declaration of %0 follows static declaration
member %0 of %1 is not a template; did you mean %select{|simply }2%3?
%0 does not name a template but is followed by template arguments
%0 does not name a template but is followed by template arguments; did you mean %1?
non-thread-local declaration of %0 follows thread-local declaration
cannot set vtable pointer authentication on %0 which is a subclass of polymorphic type %1
cannot %select{use type %1 for a function/method parameter|use type %1 for function/method return|default-initialize an object of type %1|declare an automatic variable of type %1|copy-initialize an object of type %1|assign to a variable of type %1|construct an automatic compound literal of type %1|capture a variable of type %1|cannot use volatile type %1 where it causes an lvalue-to-rvalue conversion}3 since it %select{contains|is}2 a union that is non-trivial to %select{default-initialize|destruct|copy}0
template argument / label address difference / what did you expect?
non-type template argument refers to subobject '%0'
sorry, non-type template argument of type %0 is not yet supported
qualified name refers into a specialization of %select{function|variable}0 template %1
non-type template parameter %0 with type %1 has incompatible initializer of type %2
non-variable declaration in 'for' loop
%0 is not virtual and cannot be declared pure
block pointer to non-function type is invalid
non-static data member defined out-of-line
address argument to nontemporal builtin must be a pointer (%0 invalid)
address argument to nontemporal builtin must be a pointer to integer, float, pointer, or a vector of such types (%0 invalid)
block declared 'noreturn' should not return
lambda declared 'noreturn' should not return
function declared '[[noreturn]]' after its first declaration
'_Noreturn' can only appear on functions
%select{assignment to readonly property|no setter method %1 for assignment to property}0
%select{%select{increment|decrement}1 of readonly property|no setter method %2 for %select{increment|decrement}1 of property}0
cannot specialize a %select{dependent template|template template parameter}0
type %0 is not a direct or virtual base of %1
call to function %0 that is neither visible in the template definition nor found by argument-dependent lookup
anonymous bit-field has non-integral type %0
bit-field %0 has non-integral type %1
no %select{struct|interface|union|class|enum}0 named %1 in %2
%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer}1 parameters
overriding method has mismatched ns_consumed attribute on its parameter
domain argument %select{|%1 }0does not refer to global constant
domain argument %0 does not point to an NSString or CFString constant
'NSObject' attribute is for pointer types only
overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
nullability keyword %0 cannot be applied to multi-level pointer type %1
nullability specifier %0 cannot be applied to non-pointer type %1
array of interface %0 is invalid (probably should be an array of pointers)
parameter of %0 attribute must be a single name of an Objective-C %select{class|protocol}1
attribute %0 can only be applied to @protocol definitions, not forward declarations
parameter of %0 attribute must be 'id' when used on a typedef
'objc_bridge(id)' is only allowed on structs and typedefs of void pointers
could not find Objective-C class %0 to convert %1 to %2
%0 must be name of an Objective-C class to be able to convert %1 to %2
%0 must be explicitly converted to %1; use %select{%objcclass2|%objcinstance2}3 method for this conversion
CF object of type %0 is bridged to %1, which is not an Objective-C class
Objective-C declarations may only appear in global scope
%select{|direct }0%select{method|property}1 declaration conflicts with previous %select{|direct }2declaration of %select{method|property}1 %3
direct property cannot be @dynamic
direct method was declared in %select{the primary interface|an extension|a category}0 but is implemented in %select{the primary interface|a category|a different category}1
direct method implementation was previously declared not direct
methods that %select{override superclass methods|implement protocol requirements}0 cannot be direct
'objc_direct' attribute cannot be applied to %select{methods|properties}0 declared in an Objective-C protocol
%select{category %1|class extension}0 cannot conform to protocol %2 because of direct members declared in interface %3
cannot use '%0' with Objective-C exceptions disabled
initialization statement is not supported when iterating over Objective-C collection
illegal type %0 used in a boxed expression
incomplete type %0 used in a boxed expression
Objective-C index expression has incomplete class type %0
method for accessing %select{dictionary|array}1 element must have Objective-C object return type instead of %0
'__kindof' specifier cannot be applied to non-object type %0
'__kindof' type specifier must precede the declarator
literal construction method %0 has incompatible signature
%select{an array|a dictionary|a numeric literal|a boxed expression|}0 literal can only be used at file scope if %select{its contents are all also constant literals|its contents are all also constant literals and its keys are string literals|constant|constant}0
%0 %select{parameter|return}1 type is unsupported; support for vector types for this target is introduced in %2
indexing expression is invalid because subscript type %0 has multiple type conversion functions
cannot use a protocol declared 'objc_non_runtime_protocol' in a @protocol expression
non-trivially copyable type %0 cannot be used in a boxed expression
ObjectiveC object of type %0 is bridged to %1, which is not valid CF object
cannot assign to class object (%0 invalid)
cannot catch an Objective-C object by value
cannot override a method that is declared direct by a superclass
%select{extension|category}0 of non-parameterized class %1 cannot have type parameters
forward declaration of non-parameterized class %0 cannot have type parameters
class %0 previously declared with type parameters
objc_precise_lifetime only applies to retainable types; type here is %0
property attributes '%0' and '%1' are mutually exclusive
property with '%0' attribute must be of object type
objc_root_class attribute may only be specified on a root class declaration
cannot implement a category for class %0 that is only visible via the Objective-C runtime
cannot implement subclass %0 of a superclass %1 that is only visible via the Objective-C runtime
%select{dictionary|array}1 subscript base type %0 is not an Objective-C object
method object parameter type %0 is not object type
method index parameter type %0 is not integral type
method key parameter type %0 is not object type
expected method to %select{read|write}1 %select{dictionary|array}2 element not found on object of type %0
cannot assign to this %select{dictionary|array}1 because assigning method's 2nd parameter of type %0 is not an Objective-C pointer type
indexing expression is invalid because subscript type %0 is not an Objective-C pointer
indexing expression is invalid because subscript type %0 is not an integral or Objective-C pointer type
@synchronized requires an Objective-C object type (%0 invalid)
@throw requires an Objective-C object type (%0 invalid)
type argument %0 does not satisfy the bound (%1) of type parameter %2
type argument %0 cannot explicitly specify nullability
no type or protocol named %0
type argument %0 must be a pointer (requires a '*')
type argument %0 is neither an Objective-C object nor a block type
type argument %0 cannot be qualified with '%1'
angle brackets contain both a %select{type|protocol}0 (%1) and a %select{protocol|type}0 (%2)
type arguments cannot be applied to non-class type %0
type arguments cannot be applied to non-parameterized class %0
type arguments cannot be applied to already-specialized class type %0
too %select{many|few}0 type arguments for class %1 (have %2, expected %3)
%select{forward class declaration|class definition|category|extension}0 has too %select{few|many}1 type parameters (expected %2, have %3)
type bound %0 for type parameter %1 conflicts with %select{implicit|previous}2 bound %3%select{for type parameter %5|}4
type parameter %0 bound %1 cannot explicitly specify nullability
missing type bound %0 for type parameter %1 in %select{@interface|@class}2
missing '*' in type bound %0 for type parameter %1
type bound %0 for type parameter %1 is not an Objective-C pointer type
type bound %1 for type parameter %0 cannot be qualified with '%2'
redeclaration of type parameter %0
%select{in|co|contra}0variant type parameter %1 conflicts with previous %select{in|co|contra}2variant type parameter %3
cannot declare variable inside @interface or @protocol
field %0 with variable sized type %1 is not at the end of class
interface type %1 cannot be %select{returned|passed}0 by value; did you forget * in %1?
offsetof requires array type, %0 invalid
cannot compute offset of bit-field %0
invalid application of 'offsetof' to a field of a virtual base
offsetof of incomplete type %0
offsetof requires struct, union, or class type, %0 invalid
argument of aligned clause should be array%select{ or pointer|, pointer, reference to array or reference to pointer}1, not %0
allocator must be specified in the 'uses_allocators' clause
allocators used in 'uses_allocators' clause cannot appear in other data-sharing or data-mapping attribute clauses
ambiguous conversion from type %0 to an integral or unscoped enumeration type
expected pointer, array, reference to pointer, or reference to array in 'is_device_ptr clause'
OpenMP array section is not allowed here
OpenMP array shaping operation is not allowed here
expected at least one 'to' clause or 'from' clause specified to '#pragma omp target update'
the statement for 'atomic capture' must be a compound statement of form '{v = x; x binop= expr;}', '{x binop= expr; v = x;}', '{v = x; x = x binop expr;}', '{v = x; x = expr binop x;}', '{x = x binop expr; v = x;}', '{x = expr binop x; v = x;}' or '{v = x; x = expr;}', '{v = x; x++;}', '{v = x; ++x;}', '{++x; v = x;}', '{x++; v = x;}', '{v = x; x--;}', '{v = x; --x;}', '{--x; v = x;}', '{x--; v = x;}' where x is an lvalue expression with scalar type
the statement for 'atomic capture' must be an expression statement of form 'v = ++x;', 'v = --x;', 'v = x++;', 'v = x--;', 'v = x binop= expr;', 'v = x = x binop expr' or 'v = x = expr binop x', where x and v are both lvalue expressions with scalar type
directive '#pragma omp atomic%select{ %0|}1' cannot be used with '%2' clause
the statement for 'atomic' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an lvalue expression with scalar type
the statement for 'atomic read' must be an expression statement of form 'v = x;', where v and x are both lvalue expressions with scalar type
directive '#pragma omp atomic' cannot contain more than one 'read', 'write', 'update' or 'capture' clause
the statement for 'atomic update' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an lvalue expression with scalar type
the statement for 'atomic write' must be an expression statement of form 'x = expr;', where x is a lvalue expression with scalar type
bit fields cannot be used to specify storage in a '%0' clause
arguments of OpenMP clause '%0' with bitwise operators cannot be of floating type
arguments of OpenMP clause '%0' for 'min' or 'max' must be of %select{scalar|arithmetic}1 type
'%0' and '%1' clause are mutually exclusive and may not appear on the same directive
const-qualified list item cannot be %0
const-qualified variable without mutable fields cannot be %0
const-qualified variable cannot be %0
constructs with the same name must have a 'hint' clause with the same value
redefinition of user-defined mapper for type %0 with name %1
only variable %0 is allowed in map clauses of this 'omp declare mapper' directive
redefinition of user-defined reduction for type %0
%0 appears multiple times in clauses on the same declare target directive
%0 must not appear in both clauses 'to' and 'link'
function with '#pragma omp declare variant' has a different %select{calling convention|return type|constexpr specification|inline specification|storage class|linkage}0
'#pragma omp declare variant' does not support %select{function templates|virtual functions|deduced return types|constructors|destructors|deleted functions|defaulted functions|constexpr functions|consteval function}0
'#pragma omp declare variant' is not compatible with any target-specific attributes
variant in '#pragma omp declare variant' with type %0 is incompatible with type %1
the user condition in the OpenMP context selector needs to be constant; %0 is not
variable %0 must have explicitly specified data sharing attributes, data mapping attributes, or in an is_device_ptr clause
'depend' clauses cannot be mixed with '%0' clause
expected iterator specification as depend modifier
expected%select{| %1}0 loop iteration variable
expected '+' or '-' operation
'depend(%select{source|sink:vec}0)' clause%select{|s}0 cannot be mixed with 'depend(%select{sink:vec|source}0)' clause%select{s|}0
depend modifier cannot be used with 'sink' or 'source' depend type
unexpected expression: number of expressions is larger than the number of associated loops
zero-length array section is not allowed in 'depend' clause
expected depobj expression
exactly one of 'depend', 'destroy', or 'update' clauses is expected
'device_type(%0)' does not match previously specified 'device_type(%1)' for the same declaration
'%0' region encountered before requires directive with '%1' clause
same map type modifier has been specified more than once
same motion modifier has been specified more than once
expected access to data field
expected addressable lvalue expression, array element%select{ or array section|, array section or array shaping expression}0%select{| of non 'omp_depend_t' type}1
expected constant sized array of 'omp_alloctrait_t' elements, not %0
expected variable name as a base of the array %select{subscript|section}0
expected a reference to an integer-typed parameter
expected expression containing only member accesses and/or array sections based on named variables
expected lvalue expression%select{ of 'omp_depend_t' type, not %1|}0
expected one of the predefined allocators for the variables with the static storage: 'omp_default_mem_alloc', 'omp_large_cap_mem_alloc', 'omp_const_mem_alloc', 'omp_high_bw_mem_alloc', 'omp_low_lat_mem_alloc', 'omp_cgroup_mem_alloc', 'omp_pteam_mem_alloc' or 'omp_thread_mem_alloc'
the referenced item is not found in any private clause on the same directive
expected a reference to a parameter specified in a 'uniform' clause
%0 is not a global variable, static local variable or static data member
%0 is not a global variable, static local variable or static data member; did you mean %1
expected variable name%select{| or data member of current class}0
expected variable name%select{|, data member of current class}0, array element or array section
expression requires explicit conversion from %0 to %1
a firstprivate variable with incomplete type %0
'flush' directive with memory order clause '%0' cannot have the list
'#pragma omp declare %select{simd|variant}0' can only be applied to functions
function name is not allowed in 'link' clause
arguments of '#pragma omp %0' must have %select{global storage|static storage duration}1
the name of the construct must be specified in presence of 'hint' clause
'%0' type not found; include <omp.h>
the list item must appear in 'reduction' clause with the 'inscan' modifier of the parent directive
expression has incomplete class type %0
expected 'reduction' clause with the 'inscan' modifier
invalid 'this' expression on 'map' clause
%select{map type '%1' is not allowed|map type must be specified}0 for '#pragma omp %2'
cannot find a valid user-defined mapper for type %0 with name %1
'#pragma omp %0' directive must appear only in file scope
%0 used in declare target directive is not a variable or a function name
expected loop invariant expression or '<invariant1> * %0 + <invariant2>' kind of expression
expected integral or pointer type as the iterator-type, not %0
iterator step expression %0 evaluates to 0
iterator step expression %0 is not the integral expression
OpenMP iterator is not allowed here
variable captured in declare target region must appear in a to clause
expected list item of scalar type in 'lastprivate' clause with 'conditional' modifier
a lastprivate variable with incomplete type %0
only loop iteration variables are allowed in 'linear' clause in distribute directives
argument of a linear clause should be of integral or pointer type, not %0
a linear variable with incomplete type %0
'linear' clause cannot be specified along with 'ordered' clause with a parameter
variable with local storage in initial value of threadprivate variable
'%0' statement cannot be used in OpenMP for loop
could not calculate number of iterations calling 'operator-' with upper and lower loop bounds
increment expression must cause %0 to %select{decrease|increase}1 on each iteration of OpenMP for loop
condition of OpenMP for loop must be a relational comparison ('<', '<=', '>', %select{or '>='|'>=', or '!='}0) of loop variable %1
increment clause of OpenMP for loop must perform simple addition or subtraction on loop variable %0
initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')
loop iteration variable in the associated loop of 'omp %1' directive may not be %0, predetermined as %2
variable must be of integer or %select{pointer|random access iterator}0 type
variable already marked as mapped in current construct
mapper type must be of struct, union or class type
multiple array elements associated with the same variable are not allowed in map clauses of the same construct
argument to '%0' clause must be a %select{non-negative|strictly positive}1 integer value
expected at least one %0 clause for '#pragma omp %1'
variable %0 must have explicitly specified data sharing attributes
no more 'if' clause is allowed
expected addressable lvalue in '%0' clause
expected expression with a pointer to a complete type as a base of an array shaping operation
non-predefined allocator must have traits specified
%select{statement after '#pragma omp %1' must be a for loop|expected %2 for loops after '#pragma omp %1'%select{|, but found only %4}3}0
expression must have integral or unscoped enumeration type, not %0
unable to resolve declare reduction construct for type %0
variable can appear only once in OpenMP '%0' clause
variable can appear only once in OpenMP 'target update' construct
at most one defaultmap clause for each variable-category can appear on the directive
'ordered' directive %select{without any clauses|with 'threads' clause}0 cannot be closely nested inside ordered region with specified parameter
'ordered' directive with 'depend' clause cannot be closely nested inside ordered region without specified parameter
'ordered' clause with a parameter can not be specified in '#pragma omp %0' directive
original storage of expression in data environment is shared but data environment do not fully contain mapped expression storage
orphaned 'omp %0' directives are prohibited; perhaps you forget to enclose the directive into a %select{|||target |teams|for, simd, for simd, parallel for, or parallel for simd }1region?
%select{orphaned 'omp section' directives are prohibited, it|'omp section' directive}0 must be closely nested to a sections region%select{|, not a %1 region}0
argument of a reduction clause of a %0 construct must not appear in a firstprivate clause on a task construct
the statement for '#pragma omp parallel sections' must be a compound statement
statement in 'omp parallel sections' directive must be enclosed into a section region
expected reference to one of the parameters of function %0%select{| or 'this'}1
parent region for 'omp %select{cancellation point|cancel}0' construct cannot be nowait
parent region for 'omp %select{cancellation point|cancel}0' construct cannot be ordered
pointer cannot be mapped along with a section derived from itself
predefined allocator cannot have traits specified
a private variable with incomplete type %0
region cannot be%select{| closely}0 nested inside '%1' region%select{|; perhaps you forget to enclose 'omp %3' directive into a parallel region?|; perhaps you forget to enclose 'omp %3' directive into a for or a parallel for region with 'ordered' clause?|; perhaps you forget to enclose 'omp %3' directive into a target region?|; perhaps you forget to enclose 'omp %3' directive into a teams region?|; perhaps you forget to enclose 'omp %3' directive into a for, simd, for simd, parallel for, or parallel for simd region?}2
OpenMP constructs may not be nested inside an atomic region
cannot nest 'critical' regions having the same name %0
OpenMP constructs may not be nested inside a simd region%select{| except for ordered simd, simd, scan, or atomic directive}0
list item of type %0 is not valid for specified reduction operation: unable to provide default initialization value
in_reduction variable must have the same reduction operation as in a task_reduction clause
reduction variables may not be accessed in an explicit task
a reduction list item with incomplete type %0
expected addressable reduction item for the task-based directives
the inscan reduction list item must appear as a list item in an 'inclusive' or 'exclusive' clause on an inner 'omp scan' directive
argument of OpenMP clause '%0' must reference the same object in all threads
'reduction' clause with 'task' modifier allowed only on non-simd parallel or worksharing constructs
cannot generate code for reduction on %select{|array section, which requires a }0variable length array
'reduction' clause cannot be used with 'nogroup' clause
reduction type cannot be %select{qualified with 'const', 'volatile' or 'restrict'|a function|a reference|an array}0 type
arguments of '#pragma omp %0' cannot be of reference type %1
directive must be at file or namespace scope
%0 variable must be %1
Only one %0 clause can appear on a requires directive in a single translation unit
same pointer dereferenced in multiple different ways in map clause expressions
exactly one of 'inclusive' or 'exclusive' clauses is expected
'nonmonotonic' modifier can only be specified with 'dynamic' or 'guided' schedule kind
section of pointer to function type %0
section of pointer to incomplete type %0
section length is evaluated to a negative value %0
section length is unspecified and cannot be inferred because subscripted value is %select{not an array|an array of unknown bound}0
array section must be a subset of the original array
section stride is evaluated to a non-positive value %0
the statement for '#pragma omp sections' must be a compound statement
statement in 'omp sections' directive must be enclosed into a section region
exactly one '%0' directive must appear in the loop body of an enclosing directive
directive '#pragma omp %0' cannot contain more than one %select{'seq_cst', 'relaxed', |}1'acq_rel', 'acquire' or 'release' clause
array shaping dimension is evaluated to a non-positive value %0
'%0' statement cannot be used in OpenMP simd region
'%0' clause with '%1' modifier cannot be specified if an 'ordered' clause is specified
the 'copyprivate' clause must not be used with the 'nowait' clause
single declaration is expected after 'declare %select{simd|variant}0' directive
the loop %select{initializer|condition}0 expression depends on the current loop control variable
target construct with nested teams region contains statements outside of the teams construct
threadprivate variables are not allowed in '%0' clause
threadprivate variables cannot be used in target constructs
threadprivate variable with incomplete type %0
array section %select{lower bound|length}0 is not an integer
subscripted value is not an array or pointer
array shaping operation dimension is not an integer
expected %0 in OpenMP clause '%1'
modifier '%0' cannot be used along with modifier '%1'
mapping of union members is not allowed
incorrect reduction identifier, expected one of '+', '-', '*', '&', '|', '^', '&&', '||', 'min' or 'max' or declare reduction for type %0
expected%select{| one of}0 %1 directive name modifier%select{|s}0
%select{a variable|a parameter|'this'}0 cannot appear in more than one %1 clause
expected pointer or reference to pointer in 'use_device_ptr' clause
expected variable of the '%0' type%select{|, not %2}1
'#pragma omp %0' must appear in the scope of the %q1 variable declaration
variable %0 cannot be threadprivate because it is %select{thread-local|a global named register variable}1
'#pragma omp %0' must precede all references to variable %q1
%0 variable cannot be in a %1 clause in '#pragma omp %2' directive
arguments of OpenMP clause '%0' in '#pragma omp %2' directive cannot be of variably-modified type %1
one of 'for', 'parallel', 'sections' or 'taskgroup' is expected
expected an integer or a pointer type of the outer loop counter '%0' for non-rectangular nests
function with 'device_type(%0)' is not available on %select{device|host}1
%0 variable cannot be %1
directive name modifier '%0' is not allowed for '#pragma omp %1'
'inscan' modifier can be used only in 'omp for', 'omp simd', 'omp for simd', 'omp parallel for', or 'omp parallel for simd' directive
expected %select{'val' modifier|one of 'ref', val' or 'uval' modifiers}0
variable of non-reference type %0 can be used only with 'val' modifier, but used with '%1'
the parameter of the 'ordered' clause must be greater than or equal to the parameter of the 'collapse' clause
the value of 'simdlen' parameter must be less than or equal to the value of the 'safelen' parameter
only %select{'omp_priv' or 'omp_orig'|'omp_in' or 'omp_out'}0 variables are allowed in %select{initializer|combiner}0 expression
access specifier can only have annotation attributes
only constructors take base initializers
only enumeration types have underlying types
variables in the %0 address space can only be declared in the outermost scope of a kernel function
atomic variable can be %select{assigned|initialized}0 to a variable only in global address space
bit-fields are not supported in OpenCL
cannot refer to a block inside block
the __block storage type is not permitted
illegal call to %0, expected %1 argument type
invalid number of arguments to function: %0
first argument to %0 must be a pipe type
invalid pipe access modifier (expecting %0)
invalid argument type to function %0 (expecting %1 having %2)
invalid argument %0 to function: %1, expecting a generic pointer argument
cannot cast non-zero value '%0' to 'event_t'
casting to type %0 is not allowed
variable in constant address space must be initialized
blocks with parameters are not accepted in this prototype of enqueue_kernel call
blocks used in enqueue_kernel call are expected to have parameters of type 'local void*'
illegal call to enqueue_kernel, incorrect argument types
illegal call to enqueue_kernel, parameter needs to be specified as integer type
mismatch in number of block parameters and local size arguments passed
vector component access has invalid length %0.  Supported: 1,2,3,4,8,16.
invalid block variable declaration - using 'extern' storage class is disallowed
pointers to functions are not allowed
%select{non-kernel function|function scope}0 variable cannot be declared in %1 address space
%select{program scope|static local|extern}0 variable must reside in %1 address space
declaring variable of type %0 is not allowed
%select{loading directly from|assigning directly to}0 pointer to type %1 requires cl_khr_fp16. Use vector data %select{load|store}0 builtin functions instead
implicit declaration of function %0 is invalid in OpenCL
implicit conversions between vector types (%0 and %1) are not permitted
access qualifier can only be used for pipe and image type
invalid block variable declaration - must be %select{const qualified|initialized}0
declaring function parameter of type %0 is not allowed%select{; did you forget * ?|}1
access qualifier %0 can not be used for %1 %select{|prior to OpenCL version 2.0}2
declaring function return value of type %0 is not allowed %select{; did you forget * ?|}1
array of %0 type is invalid in OpenCL
attribute %0 can only be applied to an OpenCL kernel function
multiple access qualifiers
%select{function|kernel}0 cannot be called 'main'
global sampler requires a const or constant address space qualifier
pointer to type %0 is invalid in OpenCL
kernel parameter cannot be declared as a pointer to a pointer
use of %select{type|declaration}0 %1 requires %2 extension to be enabled
return value cannot be qualified with address space
scalar operand type has greater rank than the type of the vector element. (%0 and %1)
invalid application of '%0' to a void type
taking address of a capture is not allowed
block type cannot be used as expression in ternary expression in OpenCL
type %0 can only be used as a function parameter in OpenCL
the %0 type cannot be used to declare a structure or union field
invalid prototype, variadic arguments are not allowed in OpenCL
variable length arrays are not supported in OpenCL
use of placement new requires explicit declaration
invalid application of '__builtin_omp_required_simd_align' to an expression, only type is allowed
circular pointer delegation detected
use of 'operator->' on type %0 would invoke a sequence of more than %1 'operator->' calls
%0 cannot take a dependent type as first parameter; use %1 instead
first parameter of %0 must have type %1
parameter of %0 cannot have a default argument
%0 cannot be declared inside a namespace
%0 cannot be declared static in global scope
%0 cannot have a dependent return type; use %1 instead
%0 must return type %1
%0 template must have at least two parameters
%0 must have at least one parameter
%0 cannot take a dependent type as first parameter; use size_t (%1) instead
%0 takes type size_t (%1) as first parameter
parameter of overloaded %0 cannot have a default argument
overloaded %0 must be a %select{unary|binary|unary or binary}2 operator (has %1 parameter%s1)
overloaded %0 must be a non-static member function
overloaded %0 must have at least one parameter of class or enumeration type
parameter of overloaded post-%select{increment|decrement}1 operator must have type 'int' (not %0)
overloaded %0 cannot be a static member function
overloaded %0 cannot be variadic
os_log() argument %0 is too big (%1 bytes, max %2)
os_log() format argument is not a string constant
defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 would delete it after its first declaration
qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context
__builtin_mul_overflow does not support signed _ExtInt operands of more than %0 bits
operand argument to overflow builtin must be an integer (%0 invalid)
result argument to overflow builtin must be a pointer to a non-const integer (%0 invalid)
exception specification of overriding function is more lax than base version
call to %0 is ambiguous
ambiguous conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2
call to constructor of %0 is ambiguous
call to member function %0 is ambiguous
call to object of type %0 is ambiguous
use of overloaded operator '%0' is ambiguous (with operand types %1 and %2)
use of overloaded operator '%0' is ambiguous (operand type %1)
call to deleted function %0
object of type %0 cannot be compared because its %1 is implicitly deleted
%select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 uses deleted function
call to deleted constructor of %0
call to deleted member function %0
call to deleted function call operator in type %0
overload resolution selected deleted operator '%0'
call to implicitly-deleted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0 of %1
object of type %0 cannot be %select{constructed|copied|moved|assigned|assigned|destroyed}1 because its %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 is implicitly deleted
functions that differ only in their return type cannot be overloaded
cannot convert %1 to %2 without a conversion operator
type %0 does not provide a %select{subscript|call}1 operator
no matching conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2
no matching function for call to %0
no matching constructor for initialization of %0
no matching literal operator for call to %0%select{| with argument of type %2| with arguments of types %2 and %3}1%select{| or 'const char *'}4%select{|, and no matching literal operator template}5
no matching member function for call to %0
no matching function for call to object of type %0
no viable overloaded '%0'
no viable overloaded operator[] for type %0
return type %0 of selected 'operator==' function for rewritten '%1' comparison is not 'bool'
static and non-static member functions with the same parameter types cannot be overloaded
reference to %select{overloaded|multiversioned}1 function could not be resolved; did you mean to call it%select{| with no arguments}0?
'ownership_returns' attribute index does not match; here it is %0
%0 attribute only applies to %select{pointer|integer}1 arguments
pack expansion contains parameter packs %0 and %1 that have different lengths (%2 vs. %3)
pack expansion contains parameter pack %0 that has a different length (%1 vs. %2) from outer parameter packs
pack expansion contains parameter pack %0 that has a different length (at least %1 vs. %2) from outer parameter packs
pack expansion for initialization of member %0
pack expansion does not contain any unexpanded parameter packs
C does not support default arguments
default arguments cannot be added to an out-of-line definition of a member of a %select{class template|class template partial specialization|nested class in a template}0
missing default argument on parameter
missing default argument on parameter %0
default arguments can only be specified for parameters in a function declaration
parameter pack cannot have a default argument
redefinition of default argument
default argument references local variable %0 of enclosing function
default argument references parameter %0
default argument references 'this'
default arguments cannot be added to a function template that has already been declared
argument may not have 'void' type
a lambda parameter cannot shadow an explicitly captured entity
%select{parameters|function return value}0 cannot have __fp16 type; did you forget * ?
cannot parenthesize the name of a method when forming a member pointer
%select{class|variable}0 template partial specialization does not specialize any template argument; to %select{declare|define}1 the primary template, remove the template argument list
partial specialization of %0 does not use any of its template parameters
ambiguous partial specializations of %0
class template partial specialization %0 cannot be redeclared
partial specialization cannot be declared as a friend
deduced type %0 does not satisfy %1
'new' expression with placement arguments refers to non-placement 'operator delete'
call to pointer to member function of type %0 drops '%1' qualifier%s2
pointer-to-member function type %0 can only be called on an %select{rvalue|lvalue}1
invalid use of pointer to member type after %select{.*|->*}0
this builtin is only valid on POWER7 or later CPUs
invalid use of PPC MMA type
'#pragma clang attribute' attribute with no matching '#pragma clang attribute push'
attribute %0 can't be applied to %1
negated attribute subject matcher sub-rule '%0' contradicts sub-rule '%1'
redundant attribute subject matcher sub-rule '%0'; '%1' already matches those declarations
unterminated '#pragma clang attribute push' at end of file
'#pragma clang attribute %select{%1.|}0pop' with no matching '#pragma clang attribute %select{%1.|}0push'
'#pragma float_control(except, on)' is illegal when precise is disabled
'#pragma float_control(precise, off)' is illegal when except is enabled
'#pragma float_control(precise, off)' is illegal when fenv_access is enabled
'#pragma float_control push/pop' can only appear at file scope or namespace scope
'#pragma STDC FENV_ACCESS ON' is illegal when precise is disabled
%select{incompatible|duplicate}0 directives '%1' and '%2'
invalid argument of type %0; expected an integer type
%select{invalid value '%0'; must be positive|value '%0' is too large}1
expected a for, while, or do-while loop to follow '%0'
mac68k alignment pragma is not supported on this target
#pragma visibility pop with no matching #pragma visibility push
#pragma visibility push with no matching #pragma visibility pop
__builtin_preserve_enum_value argument %0 invalid
__builtin_preserve_enum_value argument %0 not a constant
__builtin_preserve_field_info argument %0 not a constant
__builtin_preserve_field_info argument %0 not a field access
__builtin_preserve_type_info argument %0 invalid
__builtin_preserve_type_info argument %0 not a constant
instance variable %0 is private
private module fragment declaration with no preceding module declaration
private module fragment in module implementation unit
private module fragment redefined
probability argument to __builtin_expect_with_probability must be constant floating-point expression
probability argument to __builtin_expect_with_probability is outside the range [0.0, 1.0]
type of property %0 (%1) does not match type of accessor %2 (%3)
property %0 found on object of type %1; did you mean to access it with the "." operator?
use of Objective-C property in function nested in Objective-C container not supported, move function outside its container
property %0 is already implemented
property %0 has a variably modified type
type of property %0 (%1) does not match type of instance variable %2 (%3)
property access is using %0 method which is unavailable
property %0 refers to an incomplete Objective-C class %1 (with no @interface available)
property %0 not found on object of type %1
property %0 cannot be found in forward class object %1
property %0 not found on object of type %1; did you mean %2?
synthesized properties %0 and %1 both claim setter %2 - use of this setter will cause unexpected behavior
property cannot have array or function type %0
instance variable %0 is protected
protocol has circular dependency
property %select{of type %1|with attribute '%1'|without attribute '%1'|with getter %1|with setter %1}0 was selected for synthesis
object expression of non-scalar type %0 cannot be used in a pseudo-destructor expression
call to pseudo-destructor cannot have any arguments
%0 does not refer to a type name in pseudo-destructor expression; expected the name of type %1
the type of object expression %diff{($) does not match the type being destroyed ($)|does not match the type being destroyed}0,1 in pseudo-destructor expression
address discrimination flag for __ptrauth must be 0 or 1; value is %0
argument to %select{__ptrauth|ptrauth_struct}0 must be an integer constant expression
discriminator argument to ptrauth_sign_constant must be a constant integer, the address of the global variable where the result will be stored, or a blend of the two
argument to ptrauth_sign_constant must refer to a global variable or function
pointer authentication is disabled for the current target
this target does not support pointer authentication
key or discriminator of class %0 doesn't match that of base class %1
empty __ptrauth authentication option
extra discriminator for %select{__ptrauth|ptrauth_struct}2 must be between 0 and %1; value is %0
%select{static locals|globals}0 with authenticated null values are currently unsupported
%0 does not identify a valid pointer authentication key for the current target
invalid character in __ptrauth options
missing comma between __ptrauth options
attribute ptrauth_struct cannot be used on class %0 because it is a dynamic class
__ptrauth options must be a string of comma separated flags, found %0
%0 qualifier must take between 1 and 4 arguments
cast types may not be qualified with __ptrauth; type is %0
%select{return types|parameter types|properties}2 may not be qualified with %select{__ptrauth|__ptrauth_restricted_intptr}1; type is %0
__ptrauth qualifier may only be applied to pointer types; type here is %0
type %0 is already %1-qualified
repeated __ptrauth authentication %select{mode|option}0
__ptrauth_restricted_intptr qualifier may only be applied to pointer sized integer types; type here is %0
argument must be a string literal%select{| of char type}0
%0 is signed differently from the previous declaration
cannot pass undiscriminated type %0 to '__builtin_ptrauth_type_discriminator'
unknown __ptrauth authentication option %0
%select{signed value|extra discriminator|blended pointer|blended integer}0 must have %select{pointer|integer|pointer or integer}1 type; type here is %2
friend declaration cannot have a pure-specifier
exception declarator cannot be qualified
friend function definition cannot be qualified with '%0'
friend declaration of %0 does not match any declaration in %1
type operand %0 of 'typeid' cannot have '%1' qualifier
qualified member access refers to a member in %0
%q0 is not a member of class %1
%select{property|instance variable}0 access cannot be qualified with '%1'
@catch parameter declarator cannot be qualified
parameter declarator cannot be qualified
typedef declarator cannot be qualified
cannot build range expression with array function parameter %0 since parameter with array type %1 is treated as pointer type %2
assigning to 'readonly' return result of an Objective-C message not allowed
invalid type %0 to %1 operator
%select{struct|union}0 kernel parameters may not contain pointers
recursive evaluation of default argument
trying to recursively use %0 as superclass of %1
redeclaration of %0 with a different type%diff{: $ vs $|}1,2
redefinition of %0
redefinition of %0 as different kind of symbol
redefinition of %0 as an alias for a different namespace
redefinition of %0 with a different type%diff{: $ vs $|}1,2
%select{typedef|type alias|type alias template}0 redefinition with different types%diff{ ($ vs $)|}1,2
redefinition of a 'extern inline' function %0 is not supported in %select{C99 mode|C++}1
redefinition of enumerator %0
redefinition of label %0
redefinition of %select{typedef|type alias}0 for variably-modified type %1
cannot refer to declaration with an array type inside block
reference to %select{__device__|__global__|__host__|__host__ __device__}0 %select{function|variable}1 %2 in %select{__device__|__global__|__host__|__host__ __device__}3 function
reference to %select{__device__|__global__|__host__|__host__ __device__}0 function %1 in global initializer
cannot refer to declaration of structure variable with flexible array member inside block
reference initialization of type %0 with initializer of type %1 is ambiguous
%0 does not refer to a value
ref-qualifier '%select{&&|&}0' is not allowed on a constructor
ref-qualifier '%select{&&|&}0' is not allowed on a destructor
cannot overload a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}0 with a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}1
cannot refer to declaration with a variably modified type inside block
binding reference %diff{of type $ to value of type $|to value}0,1 %select{drops %3 qualifier%plural{1:|2:|4:|:s}4|changes address space|not permitted due to incompatible qualifiers}2
reference %diff{to %select{type|incomplete type}1 $ could not bind to an %select{rvalue|lvalue}2 of type $|could not bind to %select{rvalue|lvalue}2 of incompatible type}0,3
reference to type %0 cannot bind to an initializer list
reference of type %0 cannot bind to a temporary object because of address space mismatch
%select{non-const|volatile}0 reference cannot bind to bit-field%select{| %1}2
%select{non-const|volatile}0 reference cannot bind to matrix element
%select{non-const|volatile}0 reference cannot bind to vector element
'&' cannot precede a capture when the capture default is '&'
reference cannot be initialized with multiple values
pipes packet types cannot be of reference type
invalid reference to function %0: constraints not satisfied
reference to local %select{variable|binding}1 %0 declared in enclosing %select{%3|block literal|lambda expression|context}2
cannot form a reference to 'void'
declaration of reference variable %0 requires an initializer
reference to type %0 requires an initializer
function declared with regparm(%0) attribute was previously declared %plural{0:without the regparm|:with the regparm(%1)}1 attribute
%0 attribute cannot be repeated
variable does not have a constant initializer
default arguments not allowed for parameters of a requires expression
constraint variable %0 cannot be used in an evaluated context
cannot subclass a class that was declared with the 'objc_subclassing_restricted' attribute
returning block that lives on the local stack
@throw (rethrow) used outside of a @catch block
void block should not return a value
cannot return from %0
return in the catch of a function try block of a constructor is illegal
return statement not allowed in coroutine; did you mean 'co_return'?
%select{void function|void method|constructor|destructor}1 %0 must not return a value
%0 cannot use 'super' because it is a root class
argument should be the value 90 or 270
argument should be the value 0, 90, 180 or 270
rvalue reference type %0 is not allowed in exception specification
sampler_t variable required - got %0
sampler_t initialization requires 32-bit integer, not %0
second argument to __builtin_call_with_static_chain must be of pointer type
second argument to 'va_arg' is of abstract type %0
second argument to 'va_arg' is of incomplete type %0
%0 causes a section type conflict with %1
cannot use SEH '__try' in a coroutine when C++ exceptions are enabled
cannot use SEH '__try' in blocks, captured regions, or Obj-C method decls
SEH '__try' is not supported on this target
chosen constructor is explicit in copy-initialization
selector element of type %0 cannot be a constant lvalue expression
selector element is not a valid lvalue
selector element type %0 is not a valid object
type of setter must be void
initialization is not supported for __shared__ variables.
requested shift is a vector of type %0 but the first operand is not a vector (%1)
index for __builtin_shufflevector must be less than the total number of vector elements
index for __builtin_shufflevector must be a constant integer
%select{|reference to }0sizeless type %1 is not allowed in exception specification
non-local variable with sizeless type %0
invalid application of '%0' to a function type
invalid application of '%0' to %select{an incomplete|sizeless}1 type %2
invalid application of '%select{sizeof|alignof|typeof}0' to bit-field
application of '%select{alignof|sizeof}1' to interface %0 is not supported on this architecture and platform
%0 does not refer to the name of a parameter pack
%0 does not refer to the name of a parameter pack; did you mean %1?
argument to 'operator<=>' %select{cannot be narrowed from type %1 to %2|evaluates to %1, which cannot be narrowed to type %2}0
specialization of member %q0 does not specialize an instantiated member
explicit specialization of %0 after instantiation
cannot reference member of primary template because deduced class template specialization %0 is %select{instantiated from a partial|an explicit}1 specialization
cannot specialize %select{|(with 'template<>') }0a member of an unspecialized template
forward declaration of %select{class|struct|interface|union|enum}0 cannot have a nested name specifier
static_assert expression is not an integral constant expression
static_assert failed%select{ %1|}0
static_assert failed due to requirement '%0'%select{ %2|}1
function declared in block scope cannot have 'static' storage class
static data member %0 not allowed in anonymous %select{struct|interface|union|class|enum}1
static data member %0 not allowed in local %select{struct|interface|union|class|enum}2 %1
static data member %0 already has an initializer
cannot cast %0 to %1 via virtual base %2
variables in function scope cannot be declared static
the 'static' modifier for the array size is not legal in new expressions
kernel functions cannot be declared static
'main' is not allowed to be declared static
static declaration of %0 follows non-static declaration
static member %0 cannot be a bit-field
'static' can only be specified inside the class definition
'static' member function %0 overrides a virtual function in a base class
interface type cannot be statically allocated
standard library implementation of %0 is not supported; %select{member '%2' does not have expected form|member '%2' is missing|the type is not trivially copyable|the type does not have the expected form}1
unsupported standard library implementation: 'std::%0' is not a class template
%0 attribute cannot be applied to a declaration
static data member definition cannot specify a storage class
@catch parameter cannot have storage specifier '%0'
storage class specified for a member declaration
existing instance variable %1 for strong property %0 may not be __weak
subscript of pointer to function type %0
subscript of pointer to %select{incomplete|sizeless}0 type %1
subscript requires size of interface %0, which is not constant for this architecture and platform
use of '__super' inside a lambda is unsupported
'%0' parameter must have pointer%select{| to unqualified pointer}1 type; type here is %2
'swift_async' completion handler parameter must have block type returning 'void', type here is %0
%0 attribute with 'nonnull_error' convention can only be applied to a %select{function|method}1 with a completion handler with an error parameter
%0 attribute with '%1' convention must have an integral-typed parameter in completion handler at index %2, type here is %3
%0 attribute must be applied to a %select{function|method}1 annotated with non-'none' attribute 'swift_async'
first argument to 'swift_async' must be either 'none', 'swift_private', or 'not_swift_private'
'swift_error_result' parameter must follow 'swift_context' parameter
'swift_indirect_result' parameters must be first parameters of function
'%0' parameter can only be used with swiftcall%select{ or swiftasynccall|}1 calling convention%select{|s}1
switch condition type %0 requires explicit conversion to %1
switch condition has incomplete class type %0
cannot jump from switch statement to this case label
multiple conversions from switch condition type %0 to an integral or enumeration type
@synthesize not allowed in a category's implementation
@synthesize not allowed on a class property %0
synthesized property with variable size type %0 requires an existing instance variable
cannot synthesize weak property in file using manual reference counting
cannot synthesize weak property because the current deployment target does not support weak references
invalid transaction abort code
definition of type %0 conflicts with %select{typedef|type alias}1 of the same name
%select{type tag|argument}0 index %1 is greater than the number of arguments specified
implicit declaration introduced by elaborated type conflicts with a %select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}0 of the same name
%select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}1 %0 cannot be referenced with a %select{struct|interface|union|class|enum}2 specifier
friend type templates must use an elaborated type
attributes '%0("%2")' and '%1("%2")' are mutually exclusive
ambiguous constructor call when %select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
%select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1 invokes deleted constructor
copying a temporary object of incomplete type %0
no viable constructor %select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
address taken in non-type template argument for template parameter of reference type %0
deduced incomplete pack %0 for template parameter %1
non-type template argument refers to non-static data member %0
constraints not satisfied for %select{class template|function template|variable template|alias template|template template parameter|template}0 %1%2
%select{too few|too many}0 template arguments for %select{class template|function template|variable template|alias template|template template parameter|concept|template}1 %2
sorry, non-type template argument of pointer-to-member type %1 that refers to member %q0 of a different class is not supported yet
non-type template argument refers to non-static member function %0
template argument for non-type template parameter must be an expression
template argument for template template parameter must be a class template%select{| or type alias template}0
template argument for template type parameter must be a type
template argument for template type parameter must be a type; did you forget 'typename'?
non-type template parameter of reference type %diff{$ cannot bind to template argument of type $|cannot bind to template of incompatible argument type}0,1
template argument for non-type template parameter is treated as function type %0
non-type template argument of type %0 is not a constant expression
non-type template argument for template parameter of pointer type %0 must have its address taken
non-type template argument of type %0 cannot be converted to a value of type %1
non-type template argument does not refer to any declaration
non-type template argument of type %0 is not an integral constant expression
non-type template argument of type %0 must have an integral or enumeration type
non-type template argument does not refer to an object or function
non-type template argument is not a pointer to member constant
template argument does not refer to a class or alias template, or template template parameter
non-type template argument refers to %select{function|object}0 %1 that does not have linkage
template argument is the type of an unresolved overloaded function
reference binding of non-type template parameter %diff{of type $ to template argument of type $|to template argument}0,1 ignores qualifiers
non-type template argument of reference type %0 is not an object
template template argument has different template parameters than its corresponding template template parameter
non-type template argument refers to thread-local object
null non-type template argument must be cast to template parameter type %0
null non-type template argument of type %0 does not match template parameter of type %1
requires clause differs in template redeclaration
type constraint differs in template redeclaration
pack expansion used as argument for non-pack parameter of %select{alias template|concept}0
template name refers to non-type template %0
templates cannot be declared inside of a local class
%select{implicit|explicit}0 instantiation of undefined template %1
%select{implicit|explicit}0 instantiation of template %1 within its own definition
kernel functions cannot be used in a template declaration, instantiation or specialization
missing 'template' keyword prior to dependent template name '%0%1'
'%0%1' instantiated to a class template, not a function template
%0%select{| following the 'template' keyword}1 cannot refer to a dependent template
%0%select{| following the 'template' keyword}1 does not refer to a template
templates must have C++ linkage
member %0 declared as a template
extraneous 'template<>' in declaration of member %0
use of %select{class template|function template|variable template|alias template|template template parameter|concept|template}0 %1 requires template arguments
a non-type template parameter cannot have type %0 before C++20
a non-type template parameter cannot have type %0
template non-type parameter has a different type %0 in template %select{|template parameter }1redeclaration
non-type template parameter has incomplete type %0
non-type template parameter has non-literal type %0
type %0 of non-type template parameter is not a structural type
non-type template parameter has rvalue reference type %0
templates can only be declared in namespace or class scope
template parameter missing a default argument
template parameter redefines default argument
template parameter has a different kind in template %select{|template parameter }0redeclaration
%select{too few|too many}0 template parameters in template %select{|template parameter }1redeclaration
template parameter list matching the non-templated nested type %0 should be empty ('template<>')
template parameter pack cannot have a default argument
template parameter pack must be the last template parameter
declaration of %0 shadows template parameter
default template argument not permitted on a friend template
cannot add a default template argument to the definition of a member of a class template
%select{template type|non-type template|template template}0 parameter%select{| pack}1 conflicts with previous %select{template type|non-type template|template template}0 parameter%select{ pack|}1
nested name specifier '%0' for declaration does not refer into a class, class template or class template partial specialization
recursive template instantiation exceeded maximum depth of %0
cannot declare an explicit specialization in a friend
explicit specialization of %0 in function scope
default argument not permitted on an explicit %select{instantiation|specialization}0 of function %1
extraneous template parameter list in template specialization or out-of-line template definition
template specialization declaration cannot be a friend
template specialization requires 'template<>'
template specialization or definition requires a template parameter list corresponding to the nested type %0
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must occur at global scope
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in %select{a namespace enclosing %2|class %2 or an enclosing namespace}3
can only provide an explicit specialization for a class template, function template, variable template, or a member function, static data member, %select{or member class|member class, or member enumeration}0 of a class template
extraneous 'template<>' in declaration of %0 %1
template template argument %0 is more constrained than template template parameter %1
template template parameter must have its own template parameters
a typedef cannot be a template
cannot declare a class template with no name
extraneous 'template<>' in declaration of variable %0
tentative definition has type %0 that is never completed
'this' cannot be %select{implicitly |}0captured in this context
'this' cannot be%select{| implicitly}0 used in a static member function declaration
initializer for thread-local variable must be a constant expression
'%0' variables must have global storage
thread-local declaration of %0 follows non-thread-local declaration
type of thread-local variable has non-trivial destruction
thread-local declaration of %0 with %select{static|dynamic}1 initialization follows declaration with %select{dynamic|static}1 initialization
thread-local storage is not supported for the current target
three-way comparison between vectors is not supported
cannot throw an object of abstract type %0
cannot throw object of incomplete type %0
cannot throw pointer to object of incomplete type %0
cannot throw object of sizeless type %0
alignment (%0) of thread-local variable %1 is greater than the maximum supported alignment (%2) for a thread-local variable on this target
only one element declaration is allowed
deduction guide cannot have a requires clause
trailing return type may not be nested within parentheses
function with trailing return type must specify return type 'auto', not %0
%0 requires more than 1 template argument; provide the remaining arguments explicitly to use it here
concept named in type constraint is not a type concept
%0 cannot be defined in a type alias template
%0 cannot be defined in a condition
%0 cannot be defined in an enumeration
types may not be defined in a for range declaration
%0 cannot be defined in a parameter type
%0 cannot be defined in the result type of a function
%0 cannot be defined in a type specifier
type of property %0 in class extension does not match property type in primary class
a parameter pack may not be accessed at an out of bounds index
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression that can be represented by a 64 bit integer
%0 is not supported on this target
address of %select{bit-field|vector element|property expression|register variable|matrix element}0 requested
taking the address of a destructor
taking the address of a temporary object of type %0
conversion %diff{from $ to $|between types}0,1 is ambiguous
variable declared with 'objc_externally_retained' cannot be modified in ARC
cannot assign to 'self' outside of a method in the init family
cannot assign to 'self' in a class method
arithmetic on a pointer to %select{an incomplete|sizeless}0 type %1
fast enumeration variables cannot be modified in ARC by default; declare the variable __strong to allow this
array type %0 is not assignable
%select{cannot assign to return value because function %1 returns a const value|cannot assign to variable %1 with const-qualified type %2|cannot assign to %select{non-|}1static data member %2 with const-qualified type %3|cannot assign to non-static data member within const member function %1|cannot assign to %select{variable %2|non-static data member %2|lvalue}1 with %select{|nested }3const-qualified data member %4|read-only variable is not assignable}0
value of type %0 is not contextually convertible to 'bool'
arguments are of different types%diff{ ($ vs $)|}0,1
ordered compare requires two args of floating point type%diff{ ($ and $)|}0,1
floating point classification requires argument of floating point type (passed in %0)
called object type %0 is not a function or function pointer
argument type %0 is not a real floating point type
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, at least argument %1 must be specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2; did you mean %3?
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, single argument %1 was not specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
cast to incomplete type %0
cast to union type from type %0 not present in union
'__builtin_choose_expr' requires a constant expression
comparison of distinct block types%diff{ ($ and $)|}0,1
comparison of distinct pointer types%diff{ ($ and $)|}0,1
equality comparison between function pointer and void pointer (%0 and %1)
comparison between pointer and integer (%0 and %1)
used type %0 where integer or floating point type is required
used type %0 where floating point type is not allowed
used type %0 where arithmetic or pointer type is required
incompatible operand types%diff{ ($ and $)|}0,1
non-pointer operand type %0 incompatible with %select{NULL|nullptr}1
__ptrauth qualification mismatch%diff{ ($ and $)|}0,1
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%5 vs %6)|: different exception specifications}4
incompatible block pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
incompatible function pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types with different sign
incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer
value of type %0 is not implicitly convertible to %1
conversion from %0 to %1 is not allowed in a converted constant expression
conversion from %0 to %1 in converted constant expression would bind reference to a temporary
variable has incomplete type %0
conversion function %diff{from $ to $|between types}0,1 invokes a deleted function
vector is not assignable (contains duplicate components)
used type %0 where integer is required
operand of type %0 where arithmetic or pointer type is required
expression is not assignable
fields must have a constant size: 'variable length array in structure' extension will never be supported
cannot %select{decrement|increment}1 value of type %0
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of nested pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes retain/release properties of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes pointer-authentication of pointee type
definition of variable with array type needs an explicit size or an initializer
incomplete definition of type %0
incomplete type %0 is not assignable
indirection requires pointer operand (%0 invalid)
cannot take the address of an rvalue of type %0
extra '&' taking address of overloaded function
invalid operands to binary expression (%0 and %1)
pointer to function type %0 may not be 'restrict' qualified
restrict requires a pointer or reference (%0 is invalid)
restrict requires a pointer or reference
instance variables must have a constant size
logical expression with vector %select{type %1 and non-vector type %2|types %1 and %2}0 is only supported in C++
assignment to cast is illegal, lvalue casts are not supported
member reference type %0 is not a pointer
%0 does not have a member named %1
%0 does not have a member named %1; did you mean %2?
member reference base type %0 is not a structure or union
member reference type %0 is %select{a|not a}1 pointer; did you mean to use '%select{->|.}1'?
cannot refer to type member %0 in %1 with '%select{.|->}2'
cannot refer to member %0 in %1 with '%select{.|->}2'
%diff{return type $ must match previous return type $|return type must match previous return type}0,1 when %select{block literal|lambda expression}2 has unspecified explicit return type
array size is negative
non-object type %0 is not assignable
no viable conversion%select{%diff{ from $ to $|}1,2|%diff{ from returned value of type $ to function return type $|}1,2}0
no viable conversion%diff{ from $ to incomplete type $|}0,1
%select{comparison between %diff{ ($ and $)|}0,1|arithmetic operation with operands of type %diff{ ($ and $)|}0,1|conditional operator with the second and third operands of type %diff{ ($ and $)|}0,1}2 which are pointers to non-overlapping address spaces
ordered comparison between pointer and zero (%0 and %1)
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2
arithmetic on%select{ a|}0 pointer%select{|s}0 to void
illegal storage class on file-scoped variable
illegal storage class on function
statement requires expression of integer type (%0 invalid)
statement requires expression of scalar type (%0 invalid)
%diff{$ and $ are not pointers to compatible types|pointers to incompatible types}0,1
array subscript is not an integer
subscripted value is not an array, pointer, or vector
cannot combine fixed-length and sizeless SVE vectors in expression, result is ambiguous (%0 and %1)
cannot combine GNU and SVE vectors in expression, result is ambiguous (%0 and %1)
three-way comparison between pointer and zero
invalid argument type %0 to unary expression
vector operands do not have the same number of elements (%0 and %1)
cannot convert between vector values of different size (%0 and %1)
cannot convert between %select{scalar|vector}0 type %1 and vector type %2 as implicit conversion would cause truncation
cannot convert between vector and non-scalar values (%0 and %1)
zero-length arrays are not permitted in C++
expected %0 argument%select{||s}0 for %select{tmo_malloc|tmo_calloc|tmo_realloc|tmo_aligned_alloc|tmo_posix_memalign}1 operation
invalid typed memory operation %1
invalid %select{return|parameter}0 type for %select{tmo_malloc|tmo_calloc|tmo_realloc|tmo_aligned_alloc|tmo_posix_memalign}1 operation
the typed_allocator attribute can only be applied to functions
unsupported: anonymous type given name for linkage purposes by %select{typedef|alias}0 declaration after its linkage was computed; add a tag name here to establish linkage prior to definition
typedef member %0 cannot be a bit-field
typedef name must be an identifier
missing 'typename' prior to dependent type name '%0%1'
missing 'typename' prior to dependent type template name '%0%1'
no type named %0 in %1
no type named 'type' in %0; 'enable_if' cannot be used to disable this declaration
failed requirement '%0'; 'enable_if' cannot be used to disable this declaration
typename specifier refers to non-type member %0 in %1
typename specifier refers to non-type %0
typename specifier refers to a dependent using declaration for a value %0 in %1
%0 is unavailable
%0 is unavailable in ARC
%0 is unavailable: %1
%0 has unknown return type; cast the call to its declared return type
no known method %select{%objcinstance1|%objcclass1}0; cast the message send to the method's return type
%0 has unknown type; cast it to its declared type to use it
declaration of %0 is missing in %1 class
undeclared identifier %0 in destructor name
use of undeclared label %0
definition of class %0 must be available to use Objective-C %select{array literals|dictionary literals|numeric literals|boxed expressions|string literals}1
cannot find protocol declaration for %0
cannot find protocol declaration for %0; did you mean %1?
use of undeclared %0
use of undeclared %0; did you mean %1?
use of undeclared identifier %0
use of undeclared identifier %0; did you mean %1?
cannot find interface declaration for %0
cannot find interface declaration for %0; did you mean %1?
cannot find interface declaration for %0, superclass of %1
cannot find interface declaration for %0, superclass of %1; did you mean %2?
inline variable %q0 is not defined
%select{function|variable}0 %q1 is used but not defined in this translation unit, and cannot be defined in any other translation unit because its type does not have linkage
cannot determine underlying type of incomplete enumeration type %0
%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block|type constraint|requirement|requires clause}0 contains%plural{0: an|:}1 unexpanded parameter pack%plural{0:|1: %2|2:s %2 and %3|:s %2, %3, ...}1
friends can only be classes or functions
unexpected interface name %0: expected expression
unexpected namespace name %0: expected expression
unexpected type name %0: expected expression
cannot define the implicit copy assignment operator for %0, because non-static %select{reference|const}1 member %2 cannot use copy assignment operator
%select{constructor for %1|implicit default constructor for %1|cannot use constructor inherited from %1:}0 must explicitly initialize the %select{reference|const}2 member %3
unions cannot be base classes
union member %0 has reference type %1
the address of a declaration with unknown type can only be cast to a pointer type
address-of operator cannot be applied to a call to a function with unknown return type
function %0 with unknown type must be given a function type
variable %0 with unknown type cannot be given a function type
no type named %0 in %1; did you mean %select{|simply }2%3?
unknown receiver %0; did you mean %1?
unknown %select{type|class}1 name %0; did you mean %2?
unknown type name %0
unknown type name %0; did you mean %1?
must explicitly qualify name of member function when taking its address
constrained placeholder types other than simple 'auto' on non-type template parameters not supported yet
call to unsupported expression with unknown type
%0 has unknown type, which is not supported for this kind of declaration
unsupported expression with unknown type
cannot cast %0 to its %select{private|protected}2 base class %1
illegal redeclaration of property in class extension %0 (attribute must be 'readwrite', while its primary must be 'readonly')
illegal redeclaration of 'readwrite' property in class extension %0 (perhaps you intended this to be a 'readwrite' redeclaration of a 'readonly' public property?)
use of default argument to function %0 that is declared later in class %1
reference to unresolved using declaration
use of %0 with tag type that does not match previous declaration
using declaration cannot refer to class member
using declaration cannot refer to a namespace
using declaration cannot refer to a scoped enumerator
target of using declaration conflicts with declaration already in scope
declaration conflicts with target of using declaration already in scope
using declaration cannot refer to a constructor
%0 is not a direct base of %1, cannot inherit constructors
using declaration cannot refer to a destructor
cannot befriend target of using declaration
using declaration refers to its own class
using declaration refers into '%0', which is not a base class of %1
using declaration in class refers into '%0', which is not a class
redeclaration of using declaration
using declaration pack expansion at block scope produces multiple values
using declaration cannot refer to a template specialization
dependent using declaration resolved to type without 'typename'
no namespace named %0 in %1; did you mean %select{|simply }2%3?
no namespace named %0; did you mean %1?
%select{|member}0 using declaration %1 instantiates to an empty pack
using declaration requires a qualified name
'typename' keyword used on a non-type
cannot call operator __uuidof on a type with multiple GUIDs
cannot call operator __uuidof on a type with no GUID
CUDA device code does not support va_arg
'va_start' cannot be used in a captured statement
'va_start' used in function with fixed args
'va_start' cannot be used outside a function
'va_start' used in %select{System V|Win64}0 ABI function
array types cannot be value-initialized
variable template partial specialization %0 cannot be redefined
no variable template matches%select{| partial}0 specialization
no variable template matches specialization; did you mean to use %0 as function template instead?
%select{variable|static data member}0 instantiated with function type %1
variable-sized object may not be initialized
'new' cannot allocate object of variably modified type %0
non-type template parameter of variably modified type %0
variably modified type %0 cannot be used as a template argument
'typeid' of variably modified type %0
CUDA device code does not support variadic functions
first two arguments to %0 must have the same type
first two arguments to %0 must be vectors
'vec_step' requires built-in scalar or vector type, %0 invalid
%select{too many|too few}0 elements in vector initialization (expected %1 elements, have %2)
unions cannot have virtual functions
second argument to __builtin_virtual_member_address must be the address of a virtual C++ member function: for example '&Foo::func'
'virtual' cannot be specified on member function templates
first argument to __builtin_virtual_member_address must have a type deriving from class where second argument was defined
first argument to __builtin_virtual_member_address must have C++ class type
'virtual' can only appear on non-static member functions
'virtual' can only be specified inside the class definition
variable length array declaration cannot have 'extern' linkage
variable length array declaration cannot have 'static' storage duration
variable length array declaration not allowed at file scope
variable length array cannot be formed during template argument deduction
variable length arrays are not supported for the current target
variably modified type declaration cannot have 'extern' linkage
variably modified type declaration not allowed at file scope
function declaration cannot have variably modified type
'void' must be the first and only parameter if specified
'void' as parameter must not have type qualifiers
argument %0 to %1 must be a 2-bit unsigned literal (i.e. 0, 1, 2 or 3)
existing instance variable %1 for __weak property %0 must be __weak
sampler type cannot be used with the __local and __global address space qualifiers
invalid rounding argument
scale argument must be 1, 2, 4, or 8
tile arguments must refer to different tiles
%0 attribute can only be applied to a typedef or a field declaration
%0 attribute can only be applied to non-record types
invalid type signature semantic kind %1
%0 attribute can only be applied once per declaration
semantics kind '%1' repeated more than once
%0 calling convention is not supported %select{for this target|on variadic function|on constructor/destructor|on builtin function}1
duplicate use of asm operand name "%0"
asm-specifier for input or output variable conflicts with asm clobber list
use of function template name with no prior declaration in function call with explicit template arguments is a C++20 extension
initializer for aggregate is not a compile-time constant
anonymous types declared in an anonymous %select{struct|union}0 are an extension
types declared in an anonymous %select{struct|union}0 are a Microsoft extension
anonymous %select{struct|union}0 cannot be '%1'
anonymous unions are a C11 extension
initialization of an array %diff{of type $ from a compound literal of type $|from a compound literal}0,1 is a GNU extension
parenthesized initialization of a member array is a GNU extension
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is a C++11 extension
ISO C++ standards before C++17 do not allow new expression for type %0 to use list-initialization
'auto' type specifier is a C++11 extension
ISO C++ does not allow %select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 because it casts away qualifiers, even though the source and destination types are unrelated
anonymous structs are a C11 extension
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature
flexible array members are a C99 feature
'trivial_abi' cannot be applied to %0
cast between pointer-to-function and pointer-to-object is an extension
%select{case value|enumerator value|non-type template argument|array size|constexpr if condition|explicit specifier argument}0 %select{cannot be narrowed from type %2 to %3|evaluates to %2, which cannot be narrowed to type %3}1
complex initialization specifying real and imaginary components is an extension
use of this statement in a constexpr %select{function|constructor}0 is a C++14 extension
use of this statement in a constexpr %select{function|constructor}0 is a C++20 extension
multiple return statements in constexpr function is a C++14 extension
constexpr constructor that does not initialize all members is a C++20 extension
%select{constexpr|consteval}1 %select{function|constructor}0 never produces a constant expression
function try block in constexpr %select{function|constructor}0 is a C++20 extension
variable declaration in a constexpr %select{function|constructor}0 is a C++14 extension
uninitialized variable in a constexpr %select{function|constructor}0 is a C++20 extension
type definition in a constexpr %select{function|constructor}0 is a C++14 extension
constexpr union constructor that does not initialize any member is a C++20 extension
'constinit' specifier missing on initializing declaration of %0
use of the %0 attribute is a C++14 extension
use of the %0 attribute is a C++17 extension
use of the %0 attribute is a C++20 extension
designated initializers are a C++20 extension
decomposition declarations are a C++17 extension
ISO C++17 does not permit structured binding declaration in a condition
decomposition declaration declared %plural{1:'%1'|:with '%1' specifiers}0 is a C++20 extension
default initialization of an object of const type %0%select{| without a user-provided default constructor}1 is a Microsoft extension
defaulted comparison operators are a C++20 extension
cannot delete expression with pointer-to-'void' type %0
ISO C++11 does not allow conversion from string literal to %0
designated initializers are a C99 feature
array designators are a C99 extension
mixture of designated and non-designated initializers in the same initializer list is a C99 extension
nested designators are a C99 extension
ISO C++ requires field designators to be specified in declaration order; field %1 will be initialized after field %0
destructor cannot be declared using a %select{typedef|type alias}1 %0 of the class name
ISO C++ considers this destructor name lookup to be ambiguous
ISO C++ requires the name after '::~' to be found in the same scope as the name before '::~'
empty %select{struct|union}0 is a GNU extension
befriending enumeration type %0 is a C++11 extension
enumeration values exceed range of largest integer
ISO C restricts enumerator values to range of 'int' (%0 is too %select{small|large}1)
incremented enumerator value %0 is not representable in the largest integer type
enumerator value is not representable in the underlying type %0
explicit capture of 'this' with a capture default of '=' is a C++20 extension
ambiguous use of internal linkage declaration %0 defined in multiple modules
excess elements in %select{array|vector|scalar|union|struct}0 initializer
excess elements in initializer for indivisible sizeless type %0
excess elements in char array initializer
explicit conversion functions are a C++11 extension
duplicate explicit instantiation of %0 ignored as a Microsoft extension
qualifier in explicit instantiation of %q0 requires a template-id (a typedef is not permitted)
explicit specialization cannot have a storage class
ISO C++20 does not permit %select{an empty|a static_assert}0 declaration to appear in an export block
ISO C++20 does not permit a declaration that does not introduce any names to be exported
ISO C++20 does not permit using directive to be exported
expression is not an %select{integer|integral}0 constant expression; folding it to a constant is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a Microsoft extension
%0 may not be used as an array element due to flexible array member
%0 may not be nested in a struct due to flexible array member
flexible array initialization is a GNU extension
flexible array member %0 in a union is a GNU extension
flexible array member %0 in a union is a Microsoft extension
'begin' and 'end' returning different types (%0 and %1) is a C++17 extension
ISO C forbids forward references to 'enum' types
redeclaration of already-defined enum %0 is a GNU extension
use of member %0 found via unqualified lookup into dependent bases of class templates is a Microsoft extension
use of member %0 before its declaration is a Microsoft extension
complex numbers are an extension in a freestanding C99 implementation
unqualified friend declaration referring to type outside of the nearest enclosing namespace is a Microsoft extension; add a nested name specifier
anonymous structs are a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2 is a GNU extension
subscript of a pointer to void is a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to void is a GNU extension
jump from this goto statement to its label is a Microsoft extension
imaginary constants are a GNU extension
function previously declared with an %select{explicit|implicit}0 exception specification redeclared with an %select{implicit|explicit}0 exception specification
implicit declaration of function %0 is invalid in C99
implicitly declaring library function '%0' with type %1
in-class initializer for static data member of type %0 is a GNU extension
in-class initializer for static data member of type %0 requires 'constexpr' specifier
in-class initializer for static data member is not a constant expression; folding it to a constant is a GNU extension
%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification
ISO C++17 does not allow incrementing expression of type bool
initialized lambda captures are a C++14 extension
initialized lambda pack captures are a C++20 extension
constant expression evaluates to %0 which cannot be narrowed to type %1
type %0 cannot be narrowed to %1 in initializer list
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list
initializer %select{partially |}0overrides prior initialization of this subobject
initializer-string for char array is too long
inline variables are a C++17 extension
ISO C does not support '~' for complex conjugation of %0
complex integer types are a GNU extension
ISO C does not support '++'/'--' on complex integer type %0
static %select{function|variable}0 %1 is used in an inline function with external linkage
static %select{function|variable}0 %1 is used in an inline function with external linkage
return type of 'main' is not 'int'
ISO C++ does not allow 'main' to be used by a program
too many braces around %select{scalar |}0initializer
class member cannot be redeclared
exception specification in declaration does not match previous declaration
exception specification in explicit instantiation does not match instantiated one
declaration specifier missing, defaulting to 'int'
%0 is missing exception specification '%1'
type specifier missing, defaults to 'int'
ISO C90 forbids mixing declarations and code
import of C++ module '%0' appears within extern "C" language linkage specification
redundant #include of module '%0' appears within %1
accessing inaccessible direct base %0 of %1 is a Microsoft extension
anonymous %select{structs|unions}0 are a Microsoft extension
static_cast between pointer-to-function and pointer-to-object is a Microsoft extension
using the undeclared type %0 as a default template argument is a Microsoft extension
non-type template argument containing a dereference operation is a Microsoft extension
explicit constructor calls are a Microsoft extension
forward references to 'enum' types are a Microsoft extension
implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension
%0 is missing exception specification '%1'
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in %select{a namespace enclosing %2|class %2 or an enclosing namespace}3 is a Microsoft extension
template argument for template type parameter must be a type; omitted 'typename' is a Microsoft extension
using declaration referring to inaccessible member '%0' (which refers to accessible member '%1') is a Microsoft compatibility extension
'mutable' on a reference type is a Microsoft extension
lookup of %0 in member access expression is ambiguous; using member of %1
use of enumeration in a nested name specifier is a C++11 extension
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types
when type is in parentheses, array cannot have dynamic size
declaration does not declare anything
%select{struct|union}0 without named members is a GNU extension
anonymous non-C-compatible type given name for linkage purposes by %select{typedef|alias}0 declaration; add a tag name here
non-class friend type %0 is a C++11 extension
'main' is not allowed to be declared _Noreturn
offset of on non-POD type %0
offset of on non-standard-layout type %0
initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')
vector component name '%0' is an OpenCL version 2.2 feature
replacement function %0 cannot be declared 'inline'
out-of-line declaration of a member must be a definition
ISO C++ specifies that qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context, despite preceding %select{'typename'|'template'}2 keyword
exception specification of overriding function is more lax than base version
ISO C++20 considers use of overloaded operator '%0' (with operand types %1 and %2) to be ambiguous despite there being a unique best viable function%select{ with non-reversed arguments|}3
ISO C++20 requires return type of selected 'operator==' function for rewritten '%1' comparison to be 'bool', not %0
redefinition of default argument
parameter %0 was not declared, defaulting to type 'int'
%diff{promoted type $ of K&R function parameter is not compatible with the parameter type $|promoted type of K&R function parameter is not compatible with parameter type}0,1 declared in a previous prototype
omitting the parameter name in a function definition is a C2x extension
%select{class|variable}0 template partial specialization is not more specialized than the primary template
%select{class|variable}0 template partial specialization contains %select{a template parameter|template parameters}1 that cannot be deduced; this partial specialization will never be used
plain '_Complex' requires a type specifier; assuming '_Complex double'
invoking a pointer to a 'const &' member function on an rvalue is a C++20 extension
predefined identifier is only valid inside function
pseudo-destructors on type void are a Microsoft extension
function definition with pure-specifier is a Microsoft extension
qualified destructor name only found in lexical scope; omit the qualifier to find this type name by unqualified lookup
redefinition of typedef %0 is a C11 feature
ISO C++17 does not allow 'register' storage class specifier
friend function %0 retaining previous language linkage is an extension
%select{void function|void method|constructor|destructor}1 %0 should not return a value
void %select{function|method|block}1 %0 should not return void expression
non-void %select{function|method}1 %0 should return a value
C++98 requires an accessible copy constructor for class %2 when binding a reference to a temporary; was %select{private|protected}0
no viable constructor %select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1; C++98 requires a copy constructor when binding a reference to a temporary
invalid application of '%0' to a function type
invalid application of '%0' to a void type
'%0' is not permitted on a declaration of a type
capture of '*this' by copy is a C++17 extension
static data member %0 in union is a C++11 extension
redeclaring non-static %0 as static is a Microsoft extension
'static' can only be specified inside the class definition
string literal operator templates are a GNU extension
ISO C90 does not allow subscripting non-lvalue array
address non-type template argument cannot be surrounded by parentheses
template argument uses local type %0
non-type template argument referring to %select{function|object}0 %1 with internal linkage is a C++11 extension
template argument uses unnamed type
'template' keyword outside of a template
declaration of %0 shadows template parameter
default template arguments for a function template are a C++11 extension
taking the address of a temporary object of type %0
ISO C forbids taking the address of an expression of type 'void'
method parameter type %diff{$ does not match super class method parameter type $|does not match super class method parameter type}0,1
C99 forbids casting nonscalar type %0 to the same type
cast to union type is a GNU extension
pointer comparisons before C11 need to be between two complete or two incomplete types; %0 is %select{|in}2complete and %1 is %select{|in}3complete
comparison of distinct pointer types%diff{ ($ and $)|}0,1
equality comparison between function pointer and void pointer (%0 and %1)
comparison between pointer and integer (%0 and %1)
incompatible operand types (%0 and %1)
pointer type mismatch%diff{ ($ and $)|}0,1
C99 forbids conditional expressions with only one void side
pointer/integer type mismatch in conditional expression%diff{ ($ and $)|}0,1
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers
incompatible function pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types with different sign
incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer
tentative definition of variable with internal linkage has incomplete non-array type %0
ISO C++ does not allow indirection on operand of type %0
ordered comparison of function pointers (%0 and %1)
ordered comparison between pointer and zero (%0 and %1) is an extension
ordered comparison between pointer and integer (%0 and %1)
zero size arrays are an extension
typedef requires a name
missing 'typename' prior to dependent type name '%0%1'
'typename' occurs outside of a template
use of undeclared identifier %0; unqualified lookup into dependent bases of class template %1 is a Microsoft extension
ISO C++ requires a definition in this translation unit for %select{function|variable}0 %q1 because its type does not have linkage
unelaborated friend declaration is a C++11 extension; specify '%select{struct|interface|union|class|enum}0' to befriend %1
union member %0 has reference type %1, which is a Microsoft extension
use of out-of-scope declaration of %0%select{| whose type is not compatible with that of an implicit declaration}1
using directive refers to implicitly-defined namespace 'std'
field %0 with variable sized type %1 not at the end of a struct or class is a GNU extension
variable templates are a C++14 extension
'main' is not allowed to be declared variadic
variable length arrays are a C99 feature
variable length array folded to constant array as an extension
'%0' cannot be signed or unsigned
constrained by %select{|implicitly }1%select{private|protected}0 inheritance here
%select{|implicitly }1declared %select{private|protected}0 here
protected %select{constructor|destructor}0 can only be used to %select{construct|destroy}0 a base class subobject
must name member using the type of the current context %0
can only access this member on an object of type %0
add stubs for missing protocol requirements
call 'std::move' explicitly to avoid copying
call 'std::move' explicitly to avoid copying on older compilers
add a '@synthesize' directive
add a pair of parentheses to declare a variable
candidate function made ineligible by enable_if
declared with %0 attribute here
allocated with 'new%select{[]|}0' here
lookup in the object type %0 refers here
lookup from the current scope refers here
similar constraint expressions not considered equivalent; constraint expressions cannot be considered equivalent unless they originate from the same concept
similar constraint expression here
candidate found by name lookup is %q0
inherited from base class %0 here
member found by ambiguous name lookup
member type %0 found by ambiguous name lookup
because of ambiguity in conversion %diff{of $ to $|between types}0,1
anonymous namespace begins here
use __bridge to convert directly (no change in ownership)
use %select{__bridge_retained|CFBridgingRetain call}1 to make an ARC object available as a +1 %0
use %select{__bridge_transfer|CFBridgingRelease call}1 to transfer ownership of a +1 %0 into ARC
use __bridge with C-style cast to convert directly (no change in ownership)
use __bridge_retained with C-style cast to make an ARC object available as a +1 %0
use __bridge_transfer with C-style cast to transfer ownership of a +1 %0 into ARC
field has non-trivial ownership qualification
declaration uses type that is ill-formed in ARC
declaration in interface is not in the '%select{alloc|copy|init|new}0' family because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
init method must return a type related to its receiver type
declaration in interface
block will be retained by %select{the captured object|an object strongly retained by the captured object}0
also accessed here
declaration uses __weak, but ARC is disabled
declaration uses __weak, which the current deployment target does not support
array %0 declared here
add 'u8' prefix to form a 'char8_t' string literal
conversion to %select{integral|enumeration}0 type %1 declared here
constraint '%0' is already present here
use constraint modifier "%0"
type %0 is incomplete
%select{and|because}0 '%1' evaluated to false
%select{and|because}0 '%1' (%2 %3 %4) evaluated to false
setter and getter must both be synthesized, or both be user defined,or the property must be nonatomic
attribute is here
annotating the 'if constexpr' statement here
annotating the infinite loop here
previous %select{unmarked |}0overload of function is here
property should be changed to be readwrite
%0 has been explicitly marked %select{unavailable|deleted|deprecated}1 here
return type of 'await_ready' is required to be contextually convertible to 'bool'
explicitly cast the pointer to silence this warning
base class %0 specified here
bit-field is declared here
did you mean to use __block %0?
called by %0
previous call is here%select{; set to nil to indicate it cannot be called afterwards|}0
%0 declared here
callee declares array parameter as static here
'trivial_abi' is disallowed on %0 because %select{its copy constructors and move constructors are all deleted|it is polymorphic|it has a base of a non-trivial class type|it has a virtual base|it has a __weak field|it has a field of a non-trivial class type|it has an address-discriminated __ptrauth field}1
declaration missing '[[carries_dependency]]' attribute is here
cast expression to void to silence warning
%select{category|class extension}0 conforms to protocol %1 which defines method %2
consider making the bitfield type %select{unsigned|signed}0
consider defining %0 with the '%1' calling convention
while checking constraint satisfaction for class template partial specialization '%0' required here
while checking constraint satisfaction for function '%0' required here
while checking constraint satisfaction for template '%0' required here
while checking constraint satisfaction for variable template partial specialization '%0' required here
class is declared here
explicitly declare getter %objcinstance0 with '%1' to return an 'unowned' object
parameter of the 'collapse' clause
in defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator for %1 first required here
compatible type %0 specified here
place parentheses around the string literal to silence warning
%select{and|because}0 '%1' evaluated to false
while checking the satisfaction of concept '%0' requested here
place parentheses around the assignment to silence this warning
use '==' to turn this assignment into an equality comparison
use '!=' to turn this compound assignment into an inequality comparison
conflicting attribute is here
conflicting %0 here
previous return statement is here
member not initialized by constructor
%select{data member %1|base class %2}0 declared here
virtual base class declared here
add the %select{'require_constant_initialization' attribute|'constinit' specifier}0 to the initializing declaration here
variable declared constinit here
while calculating associated constraint of template '%0' here
while substituting template arguments into constraint expression here
type conversion function declared here
use 'static' to give inline function %0 internal linkage
must be declared with 'noexcept'
call to %0 implicitly required by coroutine function here
call to 'await_transform' implicitly required by 'co_await' here
call to '%select{initial_suspend|final_suspend}0' implicitly required by the %select{initial suspend point|final suspend point}0
conflicting __device__ function declared here
the %select{1st|2nd|3rd}1 template parameter of %0 needs to be %select{a type|an integer or enum value}2
%0 needs to have exactly %1 template parameters
%0 needs to be instantiated from a class template with proper template arguments
candidate template ignored: target attributes do not match
remove 'u8' prefix to avoid a change of behavior; Clang encodes unprefixed narrow string literals as UTF-8
annotate %select{%1|anonymous %1}0 with an availability attribute to silence this warning
this declaration is not a prototype; add %select{'void'|parameter declarations}0 to make it %select{a prototype for a zero-parameter function|one}0
declare the parameter __strong or capture a __block __strong variable to keep values alive across autorelease pools
function is a coroutine due to use of '%0' here
declared %select{'returns_nonnull'|'nonnull'}0 here
required by %select{'require_constant_initialization' attribute|'constinit' specifier}0 here
during template argument deduction for %select{class|variable}0 template %select{partial specialization |}1%2 %3
deduction guide declared %0 by intervening access specifier
member template declared %0 here
in instantiation of default argument for '%0' required here
default argument declared here
in instantiation of default function argument expression for '%0' required here
default member initializer declared here
defaulted %0 is implicitly deleted because implied %select{|'==' |'<' }1comparison %select{|for member %3 |for base class %3 }2is ambiguous
defaulted %0 is implicitly deleted because it would invoke a deleted comparison function%select{| for member %2| for base class %2}1
return type of defaulted 'operator<=>' cannot be deduced because return type %2 of three-way comparison for %select{|member|base class}0 %1 is not a standard comparison category type
selected 'operator<=>' for %select{|member|base class}0 %1 declared here
%select{|member|base class}0 %1 declared here
defaulted %0 is implicitly deleted because it would invoke a %select{private|protected}3 %4%select{ member of %6| member of %6 to compare member %2| to compare base class %2}1
defaulted %0 is implicitly deleted because there is no viable comparison function%select{| for member %2| for base class %2}1
three-way comparison cannot be synthesized because there is no viable function for %select{'=='|'<'}0 comparison
non-constexpr comparison function would be used to compare %select{|member %1|base class %1}0
non-constexpr comparison function declared here
defaulted %0 is implicitly deleted because this non-rewritten comparison function would be the best match for the comparison
defaulted %0 is implicitly deleted because class %1 has a reference member
defaulted %0 is implicitly deleted because %2 is a %select{union-like class|union}1 with variant members
%0 defined here
conversion to pointer type %0
qualify call to silence this warning
%select{copy|move}0 assignment operator of %1 is implicitly deleted because field %2 is of %select{reference|const-qualified}4 type %3
copy constructor of %0 is implicitly deleted because field %1 is of rvalue reference type %2
copy %select{constructor|assignment operator}0 is implicitly deleted because %1 has a user-declared move %select{constructor|assignment operator}2
%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because all %select{data members|data members of an anonymous union member}2 are const-qualified
%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because field %2 of %select{reference|const-qualified}4 type %3 would not be initialized
virtual destructor requires an unambiguous, accessible 'operator delete'
%select{default constructor of|copy constructor of|move constructor of|copy assignment operator of|move assignment operator of|destructor of|constructor inherited by}0 %1 is implicitly deleted because %select{base class %3|%select{||||variant }4field %3}2 %select{has %select{no|a deleted|multiple|an inaccessible|a non-trivial}4 %select{%select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|%select{default|corresponding|default|default|default}4 constructor}0|destructor}5%select{||s||}4|is an ObjC pointer|has an address-discriminated ptrauth qualifier}6
function is implicitly deleted because its declared type does not match the type of an implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0
candidate ignored: %select{not a function template|not a member of the enclosing namespace; did you mean to explicitly qualify the specialization?}0
must qualify identifier to find this declaration in dependent base class
template parameter is used in default argument declared here
add an explicit capture of 'this' to capture '*this' by reference
first non-designated initializer is here
non-type declaration found by destructor name lookup
type %0 found by destructor name lookup
direct member declared here
direct method %0 declared here
due to %0 being dllexported%select{|; try compiling in C++11 mode}1
asm operand name "%0" first referenced here
element %0 also has value %1
put the semicolon on a separate line to silence this warning
remove parentheses to declare a variable
change this ',' to a ';' to call %0
replace parentheses with an initializer to declare a variable
using declaration annotated with 'using_if_exists' here
jump enters lifetime of block which captures a destructible C++ object
jump enters lifetime of block which captures a C struct that is non-trivial to destroy
jump enters lifetime of block which strongly captures a variable
jump enters lifetime of block which weakly captures a variable
jump enters lifetime of a compound literal that is non-trivial to destruct
%0 declared here
enum %0 was explicitly specialized here
remove extraneous parentheses around the comparison to silence this warning
use '=' to turn this equality comparison into an assignment
declared here%select{ in module '%1'|}0
place parentheses around comparison expression to evaluate it first
in evaluation of exception specification for %q0 needed here
jump exits scope of __block variable
jump exits lifetime of block which captures a destructible C++ object
jump exits lifetime of block which captures a C struct that is non-trivial to destroy
jump exits lifetime of block which strongly captures a variable
jump exits lifetime of block which weakly captures a variable
jump exits scope of variable with __attribute__((cleanup))
jump exits lifetime of a compound literal that is non-trivial to destruct
jump exits catch block
jump exits try block
jump exits scope of variable with non-trivial destructor
jump exits autoreleasepool block
jump exits @catch block
jump exits @finally block
jump exits scope of __strong variable
jump exits @synchronized block
jump exits @try block
jump exits scope of __weak variable
jump exits __except block
jump exits __finally block
jump exits __try block
jump exits scope of lifetime-extended temporary with non-trivial destructor
explicit %select{constructor|deduction guide}0 declared here
explicit instantiation candidate function %q0 template here %1
explicit instantiation definition is here
explicit instantiation refers here
explicit specialization declared here
while substituting explicitly-specified template arguments into function template %0 %1
'template<>' header not required for explicitly-specialized class %0 declared here
export block begins here
%select{and|because}0 type constraint '%1' was not satisfied:
%select{and|because}0 %1 does not satisfy %2:
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
%select{and|because}0 '%1' may throw an exception
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
extern "C" language linkage specification begins here
declared %select{in global scope|with C language linkage}0 here
did you forget ';'?
field designator refers here
add missing switch cases
mark %0 as '%select{final|sealed}1' to silence this warning
final overrider of %q0 in %1
add a count attribute within the declarator brackets or convert the parameter to a pointer with a count or size attribute
%0 has been assigned here
previously assigned here
remove '&' to get address as %0 instead of %1
variable '%0' is not part of out parameter to the function call while having dependency with variable '%1' which is passed as an out parameter; this may result in pointers with invalid dynamic count
initialized flexible array member %0 is here
selected '%select{begin|end}0' %select{function|template }1%2 with iterator type %3
in implicit call to 'operator%select{!=|*|++}0' for iterator of type %1
member is not a candidate because range type %0 has no '%select{end|begin}1' member
did you mean to use '%0'?
treat the string as an argument to avoid this
format string is defined here
forward declaration of class here
%0 is not defined, but forward declared here; conversion would be valid if it was derived from %1
forward declaration of template entity is here
found near match '%0'
from 'diagnose_if' attribute on %0:
add enclosing parentheses to perform a function-style cast
did you mean %0?
while substituting deduced template arguments into function template %0 %1
in instantiation of function template specialization %q0 requested here
function template %q0 matches specialization %1
suffix with parentheses to turn this into a function call
prefix with the address-of operator to silence this warning
or because setter is declared here, but no getter method %0 is found
add 'module;' to the start of the file to introduce a global module fragment
inline assembly label %0 declared here
Guarded_by declared here.
hidden overloaded virtual function %q0 declared here%select{|: different classes%diff{ ($ vs $)|}2,3|: different number of parameters (%2 vs %3)|: type mismatch at %ordinal2 parameter%diff{ ($ vs $)|}3,4|: different return type%diff{ ($ vs $)|}2,3|: different qualifiers (%2 vs %3)|: different exception specifications}1
type declaration hidden
declaration hides type
conversion to %select{integral|enumeration}0 type %1 declared here
field of illegal %select{type|pointer type}0 %1 declared here
class implementation is declared here
when implemented by class %0
while checking implicit 'delete this' for virtual destructor
implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 inferred target collision: call to both %select{__device__|__global__|__host__|__host__ __device__}1 and %select{__device__|__global__|__host__|__host__ __device__}2 members
%0 is an implicit parameter
explicitly defaulted function was implicitly deleted here
in implicit initialization of binding declaration %0
add 'constexpr'
while declaring the corresponding implicit 'operator==' for this defaulted 'operator<=>'
while declaring the implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 for %0
when looking up '%select{begin|end}0' function for range expression of type %1
in implicit initialization of %select{array element %1 with omitted initializer|field %1 with omitted initializer|trailing array elements in runtime-sized array new}0
in initialization of temporary of type %0 created to list-initialize this reference
include the header <%0> or explicitly provide a declaration for '%1'
conformance of forward class %0 to protocol %1 can not be confirmed
possible target of %select{indirect|asm}0 goto statement
consider using __builtin_trap() or qualifying pointer with 'volatile'
use '|=' to turn this inequality comparison into an or-assignment
insert an explicit cast to silence this issue
initializing field %0 with default member initializer
insert 'break;' to avoid fall-through
insert '%0;' to silence this warning
add an explicit instantiation declaration to suppress this warning if %q0 is explicitly instantiated in another translation unit
(skipping %0 context%s0 in backtrace; use -ftemplate-backtrace-limit=0 to see all)
%select{implicit|explicit}0 instantiation first required here
it delegates to
instance variable is declared here
%select{implicitly |}2captured%select{| by reference}3%select{%select{ due to use|}2 here| via initialization of lambda capture %0}1
lambda expression begins here
implicit capture of lambda object due to conversion to block pointer here
%select{%select{reference|'std::initializer_list'}0 member|member with %select{reference|'std::initializer_list'}0 subobject}1 declared here
local declaration nearly matches
type of %ordinal0 parameter of local declaration does not match definition%diff{ ($ vs $)|}1,2
%select{via initialization of|binding reference}0 variable %select{%2 |}1here
the other acquisition of %0 '%1' is here
%0 acquired here
use '%0' for a bitwise operation
remove constant to silence this warning
add parentheses after the '!' to evaluate the %select{comparison|bitwise operator}0 first
add parentheses around left hand side expression to silence this warning
%select{decremented|incremented}0 here
change return type to 'int'
remove '_Noreturn'
member is declared here
member %0 declared here
member declaration does not match because it %select{is|is not}0 const qualified
member declaration nearly matches
type of %ordinal0 parameter of member declaration does not match definition%diff{ ($ vs $)|}1,2
member %0 first declared here
'->' applied to return value of the operator->() declared here
in %select{implicit|defaulted}0 %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 for %2 first required here
explicitly cast the argument to size_t to silence this warning
did you mean to compare the result of %0 instead?
method %0 declared here
compiler has implicitly changed method %0 return type
method %0 is used for the forward class
%0 begins here
function multiversioning caused by this declaration
namespace %0 defined here
consider using vld1_%0%1() to initialize a vector from memory, or vcreate_%0%1() to initialize from an integer constant
consider using vld1q_%0%1() to initialize a vector from memory, or vcombine_%0%1(vcreate_%0%1(), vcreate_%0%1()) to initialize from integer constants
while checking the satisfaction of nested requirement requested here
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
next field declaration is here
next %select{instance variable declaration|synthesized instance variable}0 is here
type is not C-compatible due to this %select{base class|default member initializer|lambda expression|friend declaration|member declaration}0
non-deducible template parameter %0
not-yet-instantiated member is declared here
%0 is not literal because it has base class %1 of non-literal type
%0 is not literal because it has data member %1 of %select{non-literal|volatile}3 type %2
incomplete type %0 is not a literal type
lambda closure types are non-literal types before C++17
%0 is not literal because it is not an aggregate and has no constexpr constructors other than copy or move constructors
%0 is not literal because its destructor is not constexpr
%0 is not literal because it has a non-trivial destructor
%0 is not literal because it has a user-provided destructor
%select{struct|interface|class}0 with virtual base %plural{1:class|:classes}1 is not a literal type
non-template declaration found by name lookup
%select{%2 has subobjects that are|%3 has type %2 that is}0 non-trivial to %select{default-initialize|destruct|copy}1
non-usual %0 declared here
non-templated declaration is here
because it has a default argument
because field %0 has an initializer
field is non-trivial to %select{copy|default-initialize}0
because type %0 has a virtual %select{member function|base class}1
because no %select{<<ERROR>>|constructor|constructor|assignment operator|assignment operator|<<ERROR>>}2 can be used to %select{<<ERROR>>|copy|move|copy|move|<<ERROR>>}2 %select{base class|field|an object}0 of type %3
because %select{base class of |field of |}0type %1 has no default constructor
because type %0 has a member with %select{no|no|__strong|__weak|__autoreleasing}1 ownership
because its parameter is %diff{of type $, not $|of the wrong type}2,3
because the function selected to %select{construct|copy|move|copy|move|destroy}2 %select{base class|field}0 of type %1 is not trivial
because %select{base class of |field of |}0type %1 has a user-provided %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
because it is a variadic function
destructor for %0 is not trivial because it is virtual
declaration missing '[[noreturn]]' attribute is here
%0 should be declared prior to the call site%select{| or in %2| or in an associated namespace of one of its arguments}1
add 'export' here if this is intended to be a module interface unit
%0 is not a structural type because it has a mutable non-static data member
%0 is not a structural type because it has a %select{non-static data member|base class}1 that is not public
%0 is not a structural type because it has a non-static data member of rvalue reference type
%0 is not a structural type because it has a %select{non-static data member|base class}1 of non-structural type %2
previous equal key is here
insert '%select{_Nonnull|_Nullable|_Null_unspecified}0' if the %select{pointer|block pointer|member pointer|array parameter}1 %select{should never be null|may be null|should not declare nullability}0
%0 specified here
use nullability type specifier %0 to affect the innermost pointer type of %1
%0 declared here
method marked as designated initializer of the class here
use 'isEqual:' instead
%select{first|second|third}0 parameter has unexpected type %1 (should be %2)
method returns unexpected type %0 (should be an object type)
add a super class to fix this problem
type parameter %0 declared here
method %0 that returns %1 declared here
%select{expected assignment expression|expected compound statement|expected exactly two expression statements|expected in right hand side of the first expression}0
%select{expected an expression statement|expected built-in assignment operator|expected expression of scalar type|expected lvalue expression}0
%select{expected an expression statement|expected built-in binary or unary operator|expected unary decrement/increment operation|expected expression of scalar type|expected assignment expression|expected built-in binary operator|expected one of '+', '*', '-', '/', '&', '^', '%|', '<<', or '>>' built-in operations|expected in right hand side of expression}0
as specified in %select{'collapse'|'ordered'|'collapse' and 'ordered'}0 clause%select{||s}0
conversion to %select{integral|enumeration}0 type %1 declared here
%select{|previous }0'hint' clause with value '%1'
%select{|previous }0directive with no 'hint' clause specified
explicit data sharing attribute requested here
explicit data sharing attribute, data mapping attribute, or is_device_ptr clause requested here
jump exits scope of OpenMP structured block
defined as %0
memory order clause '%0' is specified here
implicitly determined as %0
expected length on mapping of 'this' array section expression to be '1'
expected lower bound on mapping of 'this' array section expression to be '0' or not specified
expected 'this' subscript expression on map clause to be 'this[0]'
loop step is expected to be %select{negative|positive}0 due to this condition
marked as 'declare variant' here
marked as 'device_type(%0)' here
%select{statement|directive}0 outside teams construct here
nested teams construct here
'nowait' clause is here
'ordered' clause%select{| with specified parameter}0
predefined trait '%0' used here
%select{static data member is predetermined as shared|variable with static storage duration is predetermined as shared|loop iteration variable is predetermined as private|loop iteration variable is predetermined as linear|loop iteration variable is predetermined as lastprivate|constant variable is predetermined as shared|global variable is predetermined as shared|non-shared variable in a task construct is predetermined as firstprivate|variable with automatic storage duration is predetermined as private}0%select{|; perhaps you forget to enclose 'omp %2' directive into a parallel or another task region?}1
previous allocator is specified here
'%0' clause is specified here
previous 'critical' region starts here
previous '%0' directive used here
'reduction' clause with 'inscan' modifier is used here
'%0' clause used here
previous clause with directive name modifier specified here
previously marked as task_reduction with different reduction operation
jump bypasses OpenMP structured block
previously referenced here
'%0' previously encountered here
%0 clause previously used here
predetermined as a firstprivate in a task construct here
previously declared '%0' here
use -foperator-arrow-depth=N to increase 'operator->' limit
'operator->' declared here produces an object of type %0
(skipping %0 'operator->'%s0 in backtrace)
parameter of overridden method is annotated with __attribute__((noescape))
overridden method is here
overridden virtual function is here
ambiguous candidate function with reversed arguments
ambiguity is between a regular call to this operator and a call with the argument order reversed
candidate function with non-reversed arguments
built-in candidate %0
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %3}1%select{| has different class%diff{ (expected $ but has $)|}5,6| has different number of parameters (expected %5 but has %6)| has type mismatch at %ordinal5 parameter%diff{ (expected $ but has $)|}6,7| has different return type%diff{ ($ expected but has $)|}5,6| has different qualifiers (expected %5 but found %6)| has different exception specification}4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: requires%select{ at least| at most|}3 %4 argument%s4, but %5 %plural{1:was|:were}5 provided
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{requires at least|allows at most single|requires single}3 argument %4, but %plural{0:no|:%5}5 arguments were provided
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot %select{pass pointer to|bind reference in}5 %3 %select{as a pointer to|to object in}5 %4 in %ordinal6 argument
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: 'this' object is in %3, but method expects object in %4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot implicitly convert argument %diff{of type $ to $|type to parameter type}3,4 for %select{%ordinal6 argument|object argument}5 under ARC
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot %select{convert from|convert from|bind}3 %select{base class pointer|superclass|base class object of type}3 %4 to %select{derived class pointer|subclass|derived class reference}3 %5 for %ordinal6 argument
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: no known conversion %diff{from $ to $|from argument type to parameter type}3,4 for %select{%ordinal6 argument|object argument}5%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}7
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot convert argument of incomplete type %diff{$ to $|to parameter type}3,4 for %select{%ordinal6 argument|object argument}5%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}7
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %ordinal5 argument (%3) would lose %select{const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}4 qualifier%select{||s||s|s|s}4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: 'this' argument has type %3, but method is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}4
candidate template ignored: failed template argument deduction
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{%ordinal7|'this'}6 argument (%3) has %select{no|__weak|__strong}4 ownership, but parameter has %select{no|__weak|__strong}5 ownership
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot convert initializer list argument to %4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: no overload of %4 matching %3 for %ordinal5 argument
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{%ordinal7|'this'}6 argument (%3) has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}4 ownership, but parameter has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}5 ownership
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %ordinal8 argument (%3) has %select{no ptrauth|%5}4 qualifier, but parameter has %select{no ptrauth|%7}6 qualifier
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: call to %select{__device__|__global__|__host__|__host__ __device__|invalid}3 function from %select{__device__|__global__|__host__|__host__ __device__|invalid}4 function
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %ordinal5 argument (%3) would lose __unaligned qualifier
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: expects an %select{lvalue|rvalue}5 for %select{%ordinal4 argument|object argument}3
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: constraints not satisfied
candidate template ignored: deduced type %diff{$ of %select{|element of }4%ordinal0 parameter does not match adjusted type $ of %select{|element of }4argument|of %select{|element of }4%ordinal0 parameter does not match adjusted type of %select{|element of }4argument}1,2%3
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 has been %select{explicitly made unavailable|explicitly deleted|implicitly deleted}3
candidate template ignored: disabled by %0%1
candidate unavailable as it requires OpenCL extension '%0' to be enabled
candidate disabled: %0
candidate template ignored: requirement '%0' was not satisfied%1
explicit %select{constructor|conversion function|deduction guide}0 is not a candidate%select{| (explicit specifier evaluates to true)}1
candidate template ignored: invalid explicitly-specified argument for template parameter %0
candidate template ignored: invalid explicitly-specified argument for %ordinal0 template parameter
candidate address cannot be taken because parameter %0 has pass_object_size attribute
candidate %select{constructor|template}0 ignored: instantiation %select{takes|would take}0 its own class type by value
candidate constructor ignored: cannot be used to construct an object in address space %0
candidate template ignored: couldn't infer template argument %0
candidate template ignored: deduced too few arguments for expanded pack %0; no argument for %ordinal1 expanded parameter in deduced argument pack %2
candidate template ignored: deduced %select{conflicting types|conflicting values|conflicting templates|packs of different lengths}0 for parameter %1%diff{ ($ vs. $)|}2,3
candidate template ignored: deduced values %diff{of conflicting types for parameter %0 (%1 of type $ vs. %3 of type $)|%1 and %3 of conflicting types for parameter %0}2,4
constructor from base class %0 inherited here
candidate %select{constructor|template}0 ignored: inherited constructor cannot be used to %select{copy|move}1 object
candidate template ignored: substitution exceeded maximum template instantiation depth
candidate template ignored: could not match %diff{$ against $|types}0,1
candidate template ignored: could not match %q0 against %q1
candidate template ignored: substitution failure%0%1
candidate template ignored: cannot deduce a type for %0 that would make %2 equal %1
candidate template ignored: constraints not satisfied%0
conversion candidate of type %0
remaining %0 candidate%s0 omitted; pass -fshow-overloads=all to show them
declared with index %0 here
passing argument to parameter here
while substituting into concept arguments here; substitution failures not allowed in concept arguments
passing argument to parameter %0 here
parameter pack %0 declared here
parameter of type %0 is declared here
%0 has been marked as being introduced in %1 %2 here, but the deployment target is %1 %3
partial specialization matches %0
explicit specialization declared here
inline function performs a conversion which is forbidden in ARC
pointer %0 declared here
possible target for call
when applied to this declaration
'#pragma clang attribute push' regions ends here
previous '#pragma pack' directive that modifies alignment is here
did you intend to use '#pragma pack (pop)' instead of '#pragma pack()'?
place parentheses around the %0 expression to evaluate it first
place parentheses around the '?:' expression to evaluate it first
place parentheses around the '%0' expression to silence this warning
previous module declaration is here
previously defined here
module loaded from '%0'
previous declaration of class template partial specialization %0 is here
previously declared '%1' here
previous attribute is here
%0 is a builtin with type %1
%0 declared here
for type %0
previous explicit instantiation is here
previous initialization for field %0 is here
previous initialization %select{|with side effects }0is here%select{| (side effects will not occur at run time)}0
previous inheritance model specified here
previously defined as an alias for %0
previous declaration of %0 is here
previous template specialization is here
previous uuid specified here
did you mean to call the %0 method?
while substituting prior template arguments into %select{non-type|template}0 template parameter%1 %2
use __attribute__((visibility("hidden"))) attribute instead
private module fragment begins here
property %0 is declared %select{deprecated|unavailable|partial}1 here
property declared here
property synthesized here
jump bypasses setup of __block variable
jump bypasses initialization of variable with __attribute__((cleanup))
jump enters controlled statement of constexpr if
jump bypasses initialization of catch block
jump bypasses initialization of try block
jump enters controlled statement of if available
jump bypasses initialization of variable of non-trivial C struct type
jump bypasses auto release push of @autoreleasepool block
jump bypasses initialization of @catch block
jump enters Objective-C fast enumeration loop
jump bypasses initialization of @finally block
jump bypasses initialization of __strong variable
jump bypasses initialization of @synchronized block
jump bypasses initialization of @try block
jump bypasses initialization of __weak variable
jump bypasses initialization of __except block
jump bypasses initialization of __finally block
jump bypasses initialization of __try block
jump bypasses variable initialization
jump bypasses initialization of non-POD variable
jump bypasses variable with a non-trivial destructor
jump bypasses initialization of variable length array
jump bypasses initialization of VLA type alias
jump bypasses initialization of VLA typedef
protocol is declared here
protocol %0 has no definition
protocol method is here
it could also be property %select{of type %1|without attribute '%1'|with attribute '%1'|with getter %1|with setter %1}0 declared here
previous __ptrauth authentication %select{mode|option}0
%0 is incomplete
cannot take an address of a virtual member function if its return or argument types are incomplete
qualified call to %0::%1 is treated as a virtual call to %1 due to -fapple-kext
unimplemented pure virtual method %0 in %1
add a variable name to declare a %0 initialized with %1
receiver is instance of class declared here
receiver expression is here
receiver is treated with 'id' type for purpose of method lookup
default argument used here
'%0' included multiple times, additional include site here
'%0' included multiple times, additional include site in header from module '%1'
%select{reference|pointer}0 member declared here
%select{const|reference}0 member %1 will never be initialized
%0 returns a reference
class template declared here
use 'static_cast' to adjust the pointer correctly while %select{upcasting|downcasting}0
%select{overridden|current}0 method is explicitly declared 'instancetype'%select{| and is expected to return an instance of its class type}0
%select{overridden|current}0 method is part of the '%select{|alloc|copy|init|mutableCopy|new|autorelease|dealloc|finalize|release|retain|retainCount|self}1' method family%select{| and is expected to return an instance of its class type}0
%select{class|instance}0 method %1 is assumed to return an instance of its receiver type (%2)
overridden method returns an instance of its class type
remove the call to '%0' since unsigned values cannot be negative
remove call to max function and unsigned zero argument
remove std::move call here
remove parentheses to silence this warning
use function '%0' instead
while rewriting comparison as call to 'operator<=>' declared here
repeated RISC-V 'interrupt' attribute is here
%select{function|method|block}0 has been explicitly marked sentinel here
declared here
if you supply your own aligned allocation functions, use -faligned-allocation to silence this diagnostic
%select{and|because}0 %1 does not satisfy %2
attempt to specialize declaration here
explicitly specialized declaration is here
declare 'static' if the %select{variable|function}0 is not intended to be used outside of this translation unit
use array indexing to silence this warning
change size argument to be the size of the destination
change the argument to be the free space in the destination buffer minus the terminating null byte
did you mean %select{struct|interface|class}0 here?
because substituted constraint expression is ill-formed%0
add a deduction guide to suppress this warning
class with specified objc_requires_property_definitions attribute is declared here
surrounding namespace with visibility attribute ends here
surrounding namespace with visibility attribute starts here
parenthesize the second argument to silence
%select{parenthesize the third argument|cast the second argument to 'int'}0 to silence
conversion to %select{integral|enumeration}0 type %1
non-type template argument refers to %select{function|object}0 here
non-type template argument refers here
template argument refers to function template %0, here
class template %0 was explicitly specialized here
in instantiation of template class %q0 requested here
class template %0 was instantiated here
template is declared here
%select{function template|class template|variable template|type alias template|template template parameter}0 %1 declared here
while checking a default template argument used here
in instantiation of enumeration %q0 requested here
in instantiation of exception specification for %0 requested here
declared as a non-template here
in instantiation of member class %q0 requested here
in instantiation of member function %q0 requested here
template non-type parameter has a different type %0 in template argument
previous non-type template parameter with type %0 is here
in instantiation of default member initializer %q0 requested here
template parameter has a different kind in template argument
template parameter is declared here
%select{too few|too many}0 template parameters in template template argument
previous default template argument defined here
previous %select{template type|non-type template|template template}0 parameter%select{| pack}1 declared here
%select{template type|non-type template|template template}0 parameter%select{| pack}1 does not match %select{template type|non-type template|template template}0 parameter%select{ pack|}1 in template argument
previous template %select{declaration|template parameter}0 is here
use -ftemplate-depth=N to increase recursive template instantiation depth
in instantiation of requirement here
in instantiation of static data member %q0 requested here
in instantiation of template type alias %0 requested here
unnamed type used in template argument was declared here
in instantiation of variable template specialization %q0 requested here
Thread warning in function %0
%select{destructor|deallocator}0 has a %select{non-throwing|implicit non-throwing}1 exception specification
function declared non-throwing here
required alignment of type %0 (%1 bytes) is larger than the supported alignment of C++ exception objects on this target (%2 bytes)
%select{alignment|size}0 of first field is %1 bits
%0 is incomplete
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
%select{function %1 which returns const-qualified type %2 declared here|variable %1 declared const here|%select{non-|}1static data member %2 declared const here|member function %q1 is declared const here|%select{|nested }1data member %2 declared const here}0
%select{first|second}0 operand was implicitly converted to type %1
did you mean to use '.' instead?
expected %select{a pointer|an integer|a pointer to pointer}0 type
type is given name %0 for linkage purposes by this %select{typedef|alias}1 declaration
referenced member %0 is declared here
referenced %0 is declared here
enclose %0 in %select{an @available|a __builtin_available}1 check to silence this warning
remove the %select{'%1' if its condition|condition if it}0 is always %select{false|true}2
during field initialization in %select{this|the implicit default}0 constructor
uninitialized reference member is here
%select{uninitialized use occurs|variable is captured by block}0 here
%0 released here
%select{declaration|definition|default argument declared|explicit specialization declared|partial specialization declared}0 here is not %select{visible|reachable|reachable|reachable|reachable|reachable}0
silence by adding parentheses to mark code as explicitly dead
unguarded header; consider using #ifdef guards or #pragma once
use non-reference type %0
use reference type %0 to prevent copying
use 'thread_local' to allow this
use non-reference type %0 to make construction explicit or type %1 to prevent copying
used here
used in initialization here
implicit default constructor suppressed by user-declared constructor
%select{|previous }0using declaration
use %select{an alias declaration|a typedef declaration|a reference|a const variable|a constexpr variable}0 instead
conflicting declaration
target of using declaration
add 'typename' to treat this using declaration as a type
in value-initialization of type %0 here
variable %0 is declared here
variable %0 is%select{| explicitly}1 captured here
initialize the variable %0 to silence this warning
previous declaration of variable template partial specialization is here
%select{%1 is a virtual base class of base class %2 declared here|virtual base class %1 declared here}0
variable length arrays are not supported for the current target
which delegates to
detected while default synthesizing properties in class implementation
widen this field to %0 bits to store all values of %1
within field of type %0 declared here
replace expression with '%0' %select{|or use 'xor' instead of '^' }1to silence this warning
non-virtual member function marked '%0' hides virtual member %select{function|functions}1
only virtual member functions can be marked '%0'
absolute value function %0 given an argument of type %1 but has parameter of type %2 which may cause truncation of value
abstract class is marked '%select{final|sealed}0'
initializer for virtual base class %0 of abstract class %1 will never be used
access declarations are deprecated; use using declarations instead
type of property %0 does not match type of accessor %1
acquiring %0 '%1' requires negative capability '%2'
%0 '%1' must be acquired before '%2'
Cycle in acquired_before/after dependencies, starting with '%0'
operator '%0' has lower precedence than '%1'; '%1' will be evaluated first
reference cannot be bound to dereferenced null pointer in well-defined C++ code; pointer may be assumed to always convert to true
reference cannot be bound to dereferenced null pointer in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
%select{aligning a value|the result of checking whether a value is aligned}0 to 1 byte is %select{a no-op|always true}0
requested alignment is not a power of 2
use of function %0 is discouraged; there is no way to check for failure but failure may still occur, resulting in a possibly exploitable security vulnerability
second argument to __builtin_alloca_with_align is supposed to be in bits
multiple suitable %0 functions for %1; no 'operator delete' function will be invoked if initialization throws an exception
ARC %select{unused|__unsafe_unretained|__strong|__weak|__autoreleasing}0 lifetime qualifier on return type is ignored
assigning %select{array literal|dictionary literal|numeric literal|boxed expression|<should not happen>|block literal}0 to a weak %select{property|variable}1; object will be released after assignment
%select{destination for|source of}0 this %1 call is a pointer to ownership-qualified type %2
performSelector may cause a leak because its selector is unknown
weak %select{variable|property|implicit property|instance variable}0 %1 may be accessed multiple times in this %select{function|method|block|lambda}2 and may be unpredictably set to nil; assign to a strong variable to keep the object alive
weak %select{variable|property|implicit property|instance variable}0 %1 is accessed multiple times in this %select{function|method|block|lambda}2 but may be unpredictably set to nil; assign to a strong variable to keep the object alive
capturing %0 strongly in this block is likely to lead to a retain cycle
assigning retained object to %select{weak|unsafe_unretained}0 %select{property|variable}1; object will be released after assignment
assigning retained object to unsafe property; object will be released after assignment
method parameter of type %0 with no explicit ownership
argument value %0 is outside the valid range [%1, %2]
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 %select{floating-point|enumeration}1 type %2 %plural{2:with|4:from|:and}0 %select{enumeration|floating-point}1 type %3
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 %select{floating-point|enumeration}1 type %2 %plural{2:with|4:from|:and}0 %select{enumeration|floating-point}1 type %3 is deprecated
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
call to function without interrupt attribute could clobber interruptee's VFP registers
array index %0 is past the end of the array (which contains %1 element%s2)
array index %0 is before the beginning of the array
ignored asm label '%0' on automatic variable
value size does not match register size specified by the constraint and modifier
requested alignment must be %0 bytes or smaller; maximum alignment assumed
unknown assumption string '%0'; attribute is potentially ignored
unknown assumption string '%0' may be misspelled; attribute is potentially ignored, did you mean '%1'?
the argument to %0 has side effects that will be discarded
%select{@available|__builtin_available}0 does not guard availability here; use if (%select{@available|__builtin_available}0) instead
specifying 'uuid' as an ATL attribute is deprecated; use __declspec instead
implicit use of sequentially-consistent atomic may incur stronger memory barriers than necessary
memory order argument to atomic operation is invalid
writable atomic property %0 cannot pair a synthesized %select{getter|setter}1 with a user defined %select{getter|setter}2
@protocol is using a forward protocol declaration of %0
'abi_tag' attribute on %select{non-inline|anonymous}0 namespace ignored
consumed analysis attribute is attached to member of class %0 which isn't marked as consumable
%0 attribute cannot be applied to this declaration
%0 attribute cannot be applied to a %select{function|method}1 with no parameters
%0 attribute argument must be a string literal specifying a Swift function name
%0 attribute for getter must not have any parameters besides 'self:'
%0 attribute has invalid identifier for the %select{base|context|parameter}1 name
%0 attribute is missing parameter label clause
%0 attribute cannot specify more than one 'self:' parameter
too %select{few|many}0 parameters in the signature specified by the %1 attribute (expected %2; got %3)
%0 attribute for setter must have one parameter for new value
%0 attribute for 'subscript' getter cannot have a 'newValue:' parameter
%0 attribute for 'subscript' must %select{be a getter or setter|have at least one parameter|have a 'self:' parameter}1
%0 attribute for 'subscript' setter cannot have multiple 'newValue:' parameters
%0 attribute for 'subscript' setter must have a 'newValue:' parameter
multiple identical address spaces specified for type
attribute %0 after definition is ignored
%0 attribute parameter %1 is negative and will be ignored
'cmse_nonsecure_entry' cannot be applied to functions with internal linkage
propagating dll attribute to %select{already instantiated|explicitly specialized}0 base class template without dll attribute is not supported
redeclaration of %q0 should not add %q1 attribute
explicit instantiation declaration should not be 'dllexport'
'dllexport' attribute ignored on explicit instantiation definition
definition of dllimport static field
attribute %0 has no effect when annotating an 'if constexpr' statement
attribute %0 has no effect when annotating an infinite loop
%0 attribute can only be applied to instance variables or properties
%0 attribute ignored
%0 attribute ignored for field of type %1
%0 attribute ignored on inline function
'%0' attribute cannot be specified on a definition
'%0' is not a valid builtin name for %1
'noescape' attribute ignored on parameter of non-pointer type %0
'nonnull' attribute applied to function with no pointer arguments
'nonnull' attribute when used on parameters takes no arguments
%0 attribute ignored when parsing type
'packed' attribute was ignored on bit-fields with single-byte alignment in older versions of GCC and Clang
%0 attribute only applies to a pointer or reference (%1 is invalid)
%0 attribute only applies to%select{| constant}1 pointer arguments
attribute declaration must precede definition
target does not support 'protected' visibility; using 'default'
%0 attribute only applies to return values that are pointers
%0 attribute only applies to return values that are pointers or references
#pragma %0(".drectve") has undefined behavior, use #pragma comment(linker, ...) instead
section attribute is specified on redeclared variable
'sentinel' attribute requires named arguments
'sentinel' attribute only supported for variadic %select{functions|blocks}0
%0 attribute argument not supported: %1
unknown visibility %0
attribute %0 cannot be applied to %select{functions|Objective-C method}1 without return value
__weak attribute cannot be specified on a field declaration
__weak attribute cannot be specified on an automatic variable when ARC is not enabled
%0 attribute only applies to %select{functions|unions|variables and functions|functions and methods|functions, methods and blocks|functions, methods, and parameters|variables|variables and fields|variables, data members and tag types|types and namespaces|variables, functions and classes|kernel functions|non-K&R-style functions}1
%0 attribute only applies to %1
conflicting attributes %0 are ignored
property is assumed atomic when auto-synthesizing the property
readonly IBOutlet property %0 when auto-synthesized may not work correctly with 'nib' loader
'auto' storage class specifier is redundant and incompatible with C++11
auto property synthesis will not synthesize property %0 declared in protocol %1
'auto' deduced as 'id' in declaration of %0
auto property synthesis will not synthesize property %0; it will be implemented by its superclass, use @dynamic to acknowledge intention
autosynthesized property %0 will use %select{|synthesized}1 instance variable %2, not existing instance variable %3
ignoring availability attribute %select{on '+load' method|with constructor attribute|with destructor attribute}0
only 'unavailable' and 'deprecated' are supported for Swift availability
unknown platform %0 in availability macro
feature cannot be %select{introduced|deprecated|obsoleted}0 in %1 version %2 before it was %select{introduced|deprecated|obsoleted}3 in version %4; attribute ignored
%select{reinterpret_cast|C-style cast}0 from %1 to %2 changes address space of nested pointers
cast from function call of type %0 to non-matching type %1
receiver type %0 is not 'id' or interface pointer, consider casting it to 'id'
base class %0 is uninitialized when used here to access %q1
binding reference member %0 to stack allocated %select{variable|parameter}2 %1
binding dereferenced null pointer to reference has undefined behavior
bit-field %0 is not wide enough to store all enumerators of %1
width of bit-field %0 (%1 bits) exceeds the width of its type; value will be truncated to %2 bit%s2
bitwise negation of a boolean expression%select{;| always evaluates to 'true';}0 did you mean logical negation?
'%0' within '%1'
block captures an autoreleasing out-parameter, which may result in use-after-free bugs
attribute %0 ignored, because it cannot be applied to omitted return type
'%0' qualifier on omitted return type %1 has no effect
switch condition has boolean value
braces around %select{scalar |}0initializer
'break' is bound to loop, GCC binds it to switch
'%0' will always overflow; destination buffer has size %1, but size argument is %2
use of unknown builtin %0
call to pure virtual member function %0 has undefined behavior; overrides of %0 in subclasses are not available in the %select{constructor|destructor}1 of %2
too %select{few|many}0 arguments in call to %1
%0 parameter marked 'called_once' is called twice
%select{|captured }1%0 parameter marked 'called_once' is never called
%0 parameter marked 'called_once' is never %select{used|called}1 when %select{taking true branch|taking false branch|handling this case|none of the cases applies|entering the loop|skipping the loop|taking one of the branches}2
cannot pass object of %select{non-POD|non-trivial}0 type %1 through variadic %select{function|block|method|constructor}2; call will abort at runtime
cannot resolve lock expression
empty case range specified
overflow converting case value to switch condition type (%0 to %1)
cast from %0 to %1 increases required alignment from %2 to %3
cast between incompatible calling conventions '%0' and '%1'; calls through this pointer may abort at runtime
nonnull %select{function call|parameter}0 '%1' will evaluate to 'true' on first encounter
cast of type %0 to %1 is deprecated; use sel_getName instead
cast from %0 to %1 drops %select{const and volatile qualifiers|const qualifier|volatile qualifier}2
cast from %0 to %1 must have all intermediate pointers const qualified to be safe
category is implementing a method which will also be implemented by its primary class
function with no prototype cannot use the %0 calling convention
%0 calling convention is not supported %select{for this target|on variadic function|on constructor/destructor|on builtin function}1
cannot refer to a non-static member from the handler of a %select{constructor|destructor}0 function try block
input conversion stopped due to an input byte that does not belong to the input codeset UTF-8
%select{class|category}0 %1 does not conform to protocol%plural{1: %3|2:s %3 and %4|3:s %3, %4 and %5|:s %3, %4, %5, ...}2
class method %objcclass0 not found (return type defaults to 'id')
class method %objcclass0 not found (return type defaults to 'id'); did you mean %objcclass2?
GCC does not allow the 'cleanup' attribute argument to be anything other than a simple identifier
passing union across security boundary via %select{parameter %1|return value}0 may leak information
property follows Cocoa naming convention for returning 'owned' objects
collection expression type %0 may not respond to %1
possible misuse of comma operator here
%select{self-|array }0comparison always evaluates to %select{a constant|true|false|'std::strong_ordering::equal'}1
bitwise comparison always evaluates to %select{false|true}0
bitwise or with non-zero value always evaluates to true
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
comparison of different enumeration types in switch statement%diff{ ($ and $)|}0,1
completion handler is called twice
%select{|captured }1completion handler is never called
completion handler is never %select{used|called}1 when %select{taking true branch|taking false branch|handling this case|none of the cases applies|entering the loop|skipping the loop|taking one of the branches}2
suspicious concatenation of string literals in an array initialization; did you mean to separate the elements with a comma?
concatenated NSString literal for an NSArray expression - possibly missing a comma
using the result of an assignment as a condition without parentheses
using the result of an assignment as a condition without parentheses
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
conflicting distributed object modifiers on parameter type in declaration of %0
conflicting parameter types in declaration of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in declaration of %0
conflicting return type in declaration of %0%diff{: $ vs $|}1,2
conflicting variadic declaration of method and its implementation
conflicting distributed object modifiers on parameter type in implementation of %0
conflicting parameter types in implementation of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in implementation of %0
conflicting return type in implementation of %0%diff{: $ vs $|}1,2
conflicting variadic declaration of method and its implementation
conversion function converting %0 to its base class %1 will never be used
conversion function converting %0 to itself will never be used
conversion function converting %0 to %1 will never be used
return type of 'coroutine_handle<>::address should be 'void*' (have %0) in order to get capability with existing async C API.
%0 is required to declare the member 'unhandled_exception()' when exceptions are enabled
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to record %2 that is not trivial to %select{primitive-default-initialize|primitive-copy}3
%0 may not intend to support class template argument deduction
constructor parameter %0 shadows the field %1 of %2
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
multiple return statements in constexpr function is incompatible with C++ standards before C++14
constexpr function with no return statements is incompatible with C++ standards before C++14
variable declaration in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
type definition in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
return type deduction is incompatible with C++ standards before C++14
generic lambdas are incompatible with C++11
initialized lambda captures are incompatible with C++ standards before C++14
variable templates are incompatible with C++ standards before C++14
attribute %0 ignored, because it cannot be applied to a type
class template argument deduction is incompatible with C++ standards before C++17%select{|; for compatibility, use explicit type name %1}0
'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior
decomposition declarations are incompatible with C++ standards before C++17
inline variables are incompatible with C++ standards before C++17
by value capture of '*this' is incompatible with C++ standards before C++17
non-type template parameters declared with %0 are incompatible with C++ standards before C++17
use of function template name with no prior function template declaration in function call with explicit template arguments is incompatible with C++ standards before C++20
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
constexpr constructor that does not initialize all members is incompatible with C++ standards before C++20
function try block in constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
uninitialized variable in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
constexpr union constructor that does not initialize any member is incompatible with C++ standards before C++20
virtual constexpr functions are incompatible with C++ standards before C++20
decomposition declaration declared %plural{1:'%1'|:with '%1' specifiers}0 is incompatible with C++ standards before C++20
defaulted comparison operators are incompatible with C++ standards before C++20
explicitly defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 with a type different from the implicit type is incompatible with C++ standards before C++20
designated initializers are incompatible with C++ standards before C++20
explicit capture of 'this' with a capture default of '=' is incompatible with C++ standards before C++20
mangled name of %0 will change in C++17 due to non-throwing exception specification in function signature
initialized lambda capture packs are incompatible with C++ standards before C++20
%select{default construction|assignment}0 of lambda is incompatible with C++ standards before C++20
invoking a pointer to a 'const &' member function on an rvalue is incompatible with C++ standards before C++20
non-type template parameter of type %0 is incompatible with C++ standards before C++20
'char8_t' type specifier is incompatible with C++ standards before C++20
aggregate initialization of type %0 with user-declared constructors is incompatible with C++20
'constinit' specifier is incompatible with C++ standards before C++20
type of UTF-8 string literal will change from array of const char to array of const char8_t in C++20
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is incompatible with C++98
'auto' type specifier is incompatible with C++98
cast between pointer-to-function and pointer-to-object is incompatible with C++98
'constexpr' specifier is incompatible with C++98
constructor call from initializer list is incompatible with C++98
delegating constructors are incompatible with C++98
scalar initialized from empty initializer list is incompatible with C++98
initializing %0 from an empty initializer list is incompatible with C++98
befriending enumeration type %0 is incompatible with C++98
enumeration type in nested name specifier is incompatible with C++98
explicit conversion functions are incompatible with C++98
friend declaration naming a member of the declaring class is incompatible with C++98
jump from this goto statement to its label is incompatible with C++98
jump from this %select{indirect|asm}0 goto statement to one of its possible targets is incompatible with C++98
initialization of initializer_list object is incompatible with C++98
use of non-static data member %0 in an unevaluated context is incompatible with C++98
non-class friend type %0 is incompatible with C++98
%select{anonymous struct|union}0 member %1 with a non-trivial %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2 is incompatible with C++98
passing object of trivial but non-POD type %0 through variadic %select{function|block|method|constructor}1 is incompatible with C++98
reference initialized from initializer list is incompatible with C++98
substitution failure due to access control is incompatible with C++98
static data member %0 in union is incompatible with C++98
jump from switch statement to this case label is incompatible with C++98
%select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}1 of type %2 when binding a reference to a temporary would %select{invoke an inaccessible constructor|find no viable constructor|find ambiguous constructors|invoke a deleted constructor}0 in C++98
redundant parentheses surrounding address non-type template argument are incompatible with C++98
local type %0 as template argument is incompatible with C++98
use of null pointer as non-type template argument is incompatible with C++98
non-type template argument referring to %select{function|object}0 %1 with internal linkage is incompatible with C++98
unnamed type as template argument is incompatible with C++98
use of 'template' keyword outside of a template is incompatible with C++98
default template arguments for a function template are incompatible with C++98
use of 'typename' outside of a template is incompatible with C++98
befriending %1 without '%select{struct|interface|union|class|enum}0' keyword is incompatible with C++98
'%0' type specifier is incompatible with C++98
inheriting constructors are incompatible with C++98
ms_struct may not produce Microsoft-compatible layouts for classes with base classes or virtual functions
object backing the pointer will be destroyed at the end of the full-expression
initializing pointer member %0 to point to a temporary object whose lifetime is shorter than the lifetime of the constructed object
%select{reference|backing array for 'std::initializer_list'}2 %select{|subobject of }1member %0 %select{binds to|is}2 a temporary object whose lifetime is shorter than the lifetime of the constructed object
%select{temporary %select{whose address is used as value of|%select{|implicitly }2bound to}4 %select{%select{|reference }4member of local variable|local %select{variable|reference}4}1|array backing %select{initializer list subobject of local variable|local initializer list}1}0 %select{%3 |}2will be destroyed at the end of the full-expression
-dealloc is being overridden in a category
declaration of %0 will not be visible outside of this function
declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2|typedef in %2|type alias in %2}1
declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2|typedef in %2|type alias in %2}1
ignoring __declspec(allocator) because the function return type %0 is not a pointer or reference type
attribute %0 is ignored, place it after "%select{class|struct|interface|union|enum}1" to apply attribute to type declaration
exception specifications of %select{return|argument}0 types differ
%plural{1:enumeration value %1 not explicitly handled in switch|2:enumeration values %1 and %2 not explicitly handled in switch|3:enumeration values %1, %2, and %3 not explicitly handled in switch|:%0 enumeration values not explicitly handled in switch: %1, %2, %3...}0
atomic by default property %0 has a user defined %select{getter|setter}1 (property should be marked 'atomic' if this is intended)
explicitly defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator is implicitly deleted
explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 is implicitly deleted
constructor for %0 creates a delegation cycle
%select{delete|destructor}0 called on %1 that is abstract but has non-virtual destructor
'delete' applied to a pointer-to-array type %0 treated as 'delete[]'
deleting pointer to incomplete type %0 may cause undefined behavior
%select{delete|destructor}0 called on non-final %1 that has virtual functions but non-virtual destructor
comparison between two arrays is deprecated; to compare array addresses, use unary '+' to decay operands to pointers
%0 is deprecated
'deprecated' attribute on anonymous namespace ignored
top-level comma expression in array subscript is deprecated
compound assignment to object of volatile-qualified type %0 is deprecated
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared destructor
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared copy %select{assignment operator|constructor}1
implementing deprecated %select{method|class|category}0
%0 may be deprecated because the receiver type is unknown
%0 currently has no effect on using-declarations
%select{decrement|increment}0 of object of volatile-qualified type %1 is deprecated
%0 is deprecated: %1
out-of-line definition of constexpr static data member is redundant in C++17 and is deprecated
'register' storage class specifier is deprecated and incompatible with C++17
use of result of assignment to object of volatile-qualified type %0 is deprecated
conversion from string literal to %0 is deprecated
implicit capture of 'this' with a capture default of '=' is deprecated
volatile-qualified parameter type %0 is deprecated
volatile-qualified return type %0 is deprecated
volatile qualifier in structured binding declaration is deprecated
dereferencing %0; was declared with a 'noderef' type
dereferencing expression marked as 'noderef'
explicit call to +initialize results in duplicate call to +initialize
instance variable %0 is being directly accessed
explicit call to [super initialize] should only be in implementation of +initialize
body of cpu_dispatch function will be ignored
expression does not compute the number of elements in this array; element type is %0, not %1
'%0' will return the size of the pointer, not the array itself
%q0 redeclared inline; %1 attribute ignored
double precision constant requires cl_khr_fp64, casting to single precision
acquiring %0 '%1' that is already held
attribute %0 is already applied with different parameters
attribute %0 is already applied
duplicate code segment specifiers
element %0 has been implicitly assigned %1 which another element has been assigned
multiple declarations of method %0 found and ignored
duplicate protocol definition of %0 is ignored
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to %select{|class containing a }2dynamic class %3; vtable pointer will be %select{overwritten|copied|moved|compared}4
for loop has empty body
format string is empty
if statement has empty body
empty parentheses interpreted as a function declaration
range-based for loop has empty body
switch statement has empty body
while loop has empty body
converting the enum constant to a boolean
overflow in enumeration value
equality comparison with extraneous parentheses
exception of type %0 will be caught by earlier handler
declaration requires an exit-time destructor
expecting %0 '%1' to be held at start of each loop
expecting %0 '%1' to be held at the end of function
explicit instantiation of %0 that occurs after an explicit specialization has no effect
explicit instantiation cannot be 'inline'
explicit instantiation of %0 must occur at global scope
explicit instantiation of %0 not in a namespace enclosing %1
explicit instantiation of %q0 must occur in namespace %1
'extern' variable has an initializer
non-void coroutine does not return a value
non-void function does not return a value
non-void lambda does not return a value
function declared 'noreturn' should not return
fallthrough annotation in unreachable code
field %0 is uninitialized when used here
class with destructor marked '%select{final|sealed}0' cannot be inherited from
%select{|implicitly }0initializing field %1 of type %2 to NULL while '%3' is initialized with a value rarely succeeds
accessing elements of an unannotated incomplete array always fails at runtime
subtracting unsigned integer from indexable pointer type is prohibited for any value except zero 
conversion from pointer type %0 to a %select{counted|sized}1 pointer type with an unrelated length rarely succeeds
enumeration value %0 is out of range of flags in enumeration type %1
magnitude of floating-point constant too large for type %0; maximum is %1
magnitude of floating-point constant too small for type %0; minimum is %1
comparing floating point with == or != is unsafe
'begin' and 'end' returning different types (%0 and %1) is incompatible with C++ standards before C++17
loop variable %0 %diff{of type $ binds to a temporary constructed from type $|binds to a temporary constructed from a different type}1,2
loop variable %0 creates a copy from type %1
loop variable %0 binds to a temporary value produced by a range of type %1
using '%%P' format specifier without precision
%select{values of type|enum values with underlying type}2 '%0' should not be used as format arguments; add an explicit cast to %1 instead
%select{values of type|enum values with underlying type}2 '%0' should not be used as format arguments; add an explicit cast to %1 instead
using '%0' format specifier, but argument has boolean value
format specifies type %0 but the argument has %select{type|underlying type}2 %1
format specifies type %0 but the argument has %select{type|underlying type}2 %1
format specifies type %0 but the argument has %select{type|underlying type}2 %1
using '%0' format specifier annotation outside of os_log()/os_trace()
invalid conversion specifier '%0'
invalid position specified for %select{field width|field precision}0
cannot mix positional and non-positional arguments in format string
'%0' %select{length modifier|conversion specifier}1 is not supported by ISO C
using length modifier '%0' with conversion specifier '%1' is not supported by ISO C
positional arguments are not supported by ISO C
format string is not a string literal
format string is not a string literal (potentially insecure)
length modifier '%0' results in undefined behavior or no effect with '%1' conversion specifier
format string should not be a wide string
position arguments in format strings start counting at 1 (not 0)
'%0' will always overflow; destination buffer has size %1, but format string expands to at least %2
'%0' will always overflow; destination buffer has size %1, but size argument is %2
'%0' size argument is too large; destination buffer has size %1, but size argument is %2
redefinition of forward class %0 of a typedef name of an object type is ignored
calling '%0' with a nonzero argument is unsafe
attempt to call %0 on non-heap object %1
cannot call function '%1' while %0 '%2' is held
calling function %1 requires holding %0 %select{'%2'|'%2' exclusively}3
calling function %1 requires holding %0 %select{'%2'|'%2' exclusively}3
calling function %0 requires negative capability '%1'
instantiation of function %q0 required here, but no definition is available
function definition inside an Objective-C container is deprecated
Objective-C GC does not allow weak variables on the stack
GCC does not allow the %0 attribute to be written on a type
declaration requires a global constructor
declaration requires a global destructor
'gnu_inline' attribute requires function to be marked 'inline', attribute ignored
'gnu_inline' attribute without 'extern' in C++ treated as externally available, this changed in Clang 10
arithmetic on a null pointer treated as a cast from integer to pointer is a GNU extension
passing variable %1 by reference requires holding %0 %select{'%2'|'%2' exclusively}3
%select{instance variable|property}2 with %0 attribute must be an object type (invalid %1)
IBOutletCollection properties should be copy/strong and not assign
assigning %select{field|instance variable}0 to itself
inheritance model ignored on %select{primary template|partial specialization}0
'objc_externally_retained' can only be applied to local variables %select{of retainable type|with strong ownership}0
size of static array must be an integer constant expression
implicit truncation from %2 to bit-field changes value from %0 to %1
initialization of pointer of type %0 to null from a constant boolean expression
implicit conversion discards imaginary component: %0 to %1
implicit conversion from constant value %0 to 'BOOL'; the only well defined values for 'BOOL' are YES and NO
implicit conversion from enumeration type %0 to different enumeration type %1
implicit conversion increases floating-point precision: %0 to %1
implicit conversion from %0 cannot fit within the range of values for %1
implicit conversion turns floating-point number into integer: %0 to %1
implicit conversion loses floating-point precision: %0 to %1
implicit conversion when assigning computation result loses floating-point precision: %0 to %1
implicit conversion from %0 to %1 changes value from %2 to %3
implicit conversion of out of range value from %0 to %1 is undefined
implicit conversion from %0 to %1 changes non-zero value from %2 to %3
implicit conversion from floating-point type %0 to 'BOOL'
implicit conversion turns floating-point number into bool: %0 to %1
higher order bits are zeroes after implicit conversion
implicit conversion from integral type %0 to 'BOOL'
implicit conversion loses integer precision: %0 to %1
implicit conversion from %0 to %1 may lose precision
implicit conversion from %2 to %3 changes value from %0 to %1
implicit conversion loses integer precision: %0 to %1
implicit conversion from %2 to %3 changes value from %0 to %1
implicit conversion changes signedness: %0 to %1
operand of ? changes signedness: %0 to %1
implicit conversion from %0 to %1 changes value from %2 to %3
implicit conversion of out of range value from %0 to %1 is undefined
the resulting value is always non-negative after implicit conversion
implicit conversion of %select{NULL|nullptr}0 constant to %1
implicit boolean conversion of Objective-C object literal always evaluates to true
address of%select{| function| array}0 '%1' will always evaluate to 'true'
implicit conversion turns string literal into bool: %0 to %1
implicit conversion turns vector to scalar: %0 to %1
class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this class implementation
class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
default assign attribute on property %0 which implements NSCopying protocol is not appropriate with -fobjc-gc[-only]
property is assumed atomic by default
declaration of built-in function '%0' requires the declaration of the 'jmp_buf' type, commonly provided in the header <setjmp.h>.
declaration of built-in function '%1' requires inclusion of the header <%0>
implicit declaration of function %0
block implicitly retains 'self'; explicitly mention 'self' to indicate this is intended behavior
import %select{module|name}0 cannot be applied to a function with a definition
direct base %0 is inaccessible due to ambiguity:%1
target exception specification is not superset of source
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2
incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
encoding of %0 type is incomplete because %1 component has unknown encoding
%0 overrides a destructor but is not marked 'override'
%0 overrides a member function but is not marked 'override'
incrementing expression of type bool is deprecated and incompatible with C++17
'objc_independent_class' attribute may be put on a typedef only; attribute is ignored
indirection of non-volatile null pointer will be deleted, not trap
all paths through this function will call itself
constant expression evaluates to %0 which cannot be narrowed to type %1 in C++11
type %0 cannot be narrowed to %1 in initializer list in C++11
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list in C++11
initializing pointer member %0 with the stack address of %select{variable|parameter}2 %1
%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3
initializer %select{partially |}0overrides prior initialization of this subobject
inline namespace reopened as a non-inline namespace
instance method %objcinstance0 not found (return type defaults to 'id')
instance method %objcinstance0 not found (return type defaults to 'id'); did you mean %objcinstance2?
instance method %0 found instead of class method %1
cast to %1 from smaller integer type %0
cast to %1 from smaller integer type %0
converting the result of '?:' with integer constants to a boolean always evaluates to 'true'
'internal_linkage' attribute on a non-static local variable is ignored
%select{MIPS|MSP430|RISC-V}0 'interrupt' attribute only applies to functions that have %select{no parameters|a 'void' return type}1
invalid use of a cast in an inline asm context requiring an lvalue: accepted due to -fheinous-gnu-extensions, but clang may remove support for this in the future
invalid constructor from class in system header, should not be explicit
local declaration of %0 hides instance variable
declaration of instance variables in the interface is deprecated
jump out of __finally block has undefined behavior
ignored 'inline' attribute on kernel function %0
kernel function %0 is a member function; this may not be accepted by nvcc
converting the result of '<<' to a boolean always evaluates to %select{false|true}0
converting the result of '<<' to a boolean; did you mean '(%0) != 0'?
first argument to __builtin_load_member_function_pointer must have a type deriving from class where second argument was defined
second argument to __builtin_load_member_function_pointer must be the address of a C++ member function: for example '&Foo::func', not null
%0 '%1' is acquired exclusively and shared in the same scope
%0 '%1' is not held on every path through here
'&&' within '||'
use of logical '%0' with constant operand
logical not is only applied to the left hand side of this %select{comparison|bitwise operator}0
'%0' is bound to current loop, GCC binds it to the enclosing loop
state of variable '%0' must match at the entry and exit of loop
only one parameter on 'main' declaration
variable named 'main' with external linkage has undefined behavior
bool literal returned from 'main'
taking the max of %select{a value and unsigned zero|unsigned zero and a value}0 is always equal to the other value
non-void coroutine does not return a value in all control paths
non-void function does not return a value in all control paths
non-void lambda does not return a value in all control paths
variable %0 may be uninitialized when %select{used here|captured by block}1
%0 may not respond to %1
extra qualification on member %0
size argument in %0 call is a comparison
messaging unqualified id
'mig_server_routine' attribute only applies to routines that return a kern_return_t
availability does not match previous declaration
%select{|overriding }4method %select{introduced after|deprecated before|obsoleted before}0 %select{the protocol method it implements|overridden method}4 on %1 (%2 vs. %3)
%select{|overriding }1method cannot be unavailable on %0 when %select{the protocol method it implements|its overridden method}1 is available
'delete%select{|[]}0' applied to a pointer that was allocated with 'new%select{[]|}0'; did you mean 'delete%select{[]|}0'?
import %select{module|name}0 (%1) does not match the import %select{module|name}0 (%2) of the previous declaration
nullability specifier %0 conflicts with existing specifier %1
%select{codeseg|section}0 does not match previous declaration
use of OSPtr outside of a return type
suggest braces around initialization of subobject
%plural{1:enumeration value %1 not handled in switch|2:enumeration values %1 and %2 not handled in switch|3:enumeration values %1, %2, and %3 not handled in switch|:%0 enumeration values not handled in switch: %1, %2, %3...}0
no case matching constant switch condition '%0'
auto property synthesis is synthesizing property not explicitly synthesized
missing field %0 initializer
format string missing
method has no return type specified; defaults to 'id'
no previous prototype for function %0
missing sentinel in %select{function call|method dispatch|block call}0
no previous extern declaration for non-static variable %0
comparison of integers of different signs: %0 and %1
modifying constructor parameter %0 that shadows a field of %1
multiple methods named %0 found
several methods with selector %0 of mismatched types are found for the @selector expression
CPU list contains duplicate entries; attribute ignored
extra qualification on member %0
vector initializers are not compatible with NEON intrinsics in big endian mode
array backing %select{initializer list subobject of the allocated object|the allocated initializer list}0 will be destroyed at the end of the full-expression
temporary bound to reference member of allocated object will be destroyed at the end of the full-expression
auto property synthesis will not synthesize property %0 because it is 'readwrite' but it will be synthesized 'readonly' via another property
auto property synthesis will not synthesize property %0 because it cannot share an ivar with another synthesized property
%select{struct|interface|union|class|enum}0 %1 does not declare any constructor to initialize its non-modifiable members
dynamic_cast will not work since RTTI data is disabled by %select{-fno-rtti-data|/GR-}0
typeid will not work since RTTI data is disabled by %select{-fno-rtti-data|/GR-}0
enums in the Microsoft ABI are signed integers by default; consider giving the enum %0 an unsigned underlying type to make this code portable
%0 '%1' is still held at the end of function
'nocf_check' attribute ignored; use -fcf-protection to enable the attribute
'noderef' can only be used on an array or pointer type
casting to dereferenceable pointer removes 'noderef' attribute
%0 attribute is ignored because there exists no call expression inside the statement
conflicting parameter types in declaration of %0: %1 vs %2
conflicting parameter types in implementation of %0: %1 vs %2
conflicting return type in declaration of %0: %1 vs %2
conflicting return type in implementation of %0: %1 vs %2
expression which evaluates to zero treated as a null pointer constant of type %0
cannot pass %select{non-POD|non-trivial}0 object of type %1 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
%0 has virtual functions but non-virtual destructor
comparison of nonnull %select{function call|parameter}0 '%1' %select{not |}2equal to a null pointer is '%select{true|false}2' on first encounter
function %0 declared 'noreturn' should not return
not a Doxygen trailing comment
use of unary operator that may be intended as compound assignment (%0=)
not enough variable arguments in %0 declaration to fit a sentinel
case value not in enumerated type %0
integer constant not in range of enumerated type %0
'nothrow' attribute conflicts with exception specification; attribute ignored
%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer|pointer/reference-to-OSObject-pointer}1 parameters
%0 attribute only applies to %select{functions|methods|properties}1 that return %select{an Objective-C object|a pointer|a non-retainable pointer}2
overriding method has mismatched ns_consumed attribute on its parameter
duplicate key in dictionary literal
'NSObject' attribute may be put on a typedef only; attribute is ignored
overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
null passed to a callee that requires a non-null argument
use of NULL in arithmetic operation
comparison between NULL and non-pointer %select{(%1 and NULL)|(NULL and %1)}0
comparison of %select{address of|function|array}0 '%1' %select{not |}2equal to a null pointer is always %select{true|false}2
synthesized setter %0 for null_resettable property %1 does not handle nil
null returned from %select{function|method}0 that requires a non-null return value
nullability specifier %0 cannot be applied to non-pointer type %1; did you mean to apply the specifier to the %select{pointer|block pointer|member pointer|function pointer|member function pointer}2?
inferring '_Nonnull' for pointer type within %select{array|reference}0 is deprecated
implicit conversion from nullable pointer %0 to non-nullable pointer type %1
%select{pointer|block pointer|member pointer}0 is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
string is ill-formed as UTF-8 and will become a null %0 when boxed
using %0 directive in %select{NSString|CFString}1 which is being passed as a formatting argument to the formatting %select{method|CFfunction}2
adding %0 to %1 might cause circular dependency in container
object of type %0 is not compatible with %select{array element type|dictionary key type|dictionary value type}1 %2
designated initializer missing a 'super' call to a designated initializer of the super class
designated initializer invoked a non-designated initializer
designated initializer should only invoke a designated initializer on 'super'
%0 attribute isn't implemented by this Objective-C runtime
direct attribute on property %0 ignored (not implemented by this Objective-C runtime)
method override for the designated initializer of the superclass %objcinstance0 not found
%0 bridges to %1, not %2
%0 cannot bridge to %1
assignment to Objective-C's isa is deprecated in favor of object_setClass()
direct access to Objective-C's isa is deprecated in favor of object_getClass()
direct comparison of %select{an array literal|a dictionary literal|a numeric literal|a boxed expression|}0 has undefined behavior
method possibly missing a [super %0] call
cannot catch an exception thrown with @throw in C++ in the non-unified exception model
bitmasking for introspection of Objective-C object pointers is strongly discouraged
bitmasking for introspection of Objective-C object pointers is strongly discouraged
objc_precise_lifetime is not meaningful for %select{__unsafe_unretained|__autoreleasing}0 objects
'assign' property of object type may become a dangling reference; consider using 'unsafe_unretained'
'copy' attribute must be specified for the block property when -fobjc-gc-only is specified
default property attribute 'assign' not appropriate for object
no 'assign', 'retain', or 'copy' attribute is specified - 'assign' is assumed
retain'ed block property does not copy the block - use copy attribute instead
setter cannot be specified for a readonly property
using %0 with a literal is redundant
parameterized class %0 already conforms to the protocols listed; did you forget a '*'?
%0 attribute cannot be applied to %select{methods in protocols|dealloc}1
class %0 defined without specifying a base class
convenience initializer missing a 'self' call to another initializer
convenience initializer should not invoke an initializer on 'super'
direct comparison of a string literal has undefined behavior
%0 is incompatible with selectors that return a %select{struct|union|vector}1 type
the meaning of __weak has changed in manual reference-counting
%0 was declared with __weak, but __weak is ignored in files using manual reference counting
ignoring __weak in file using manual reference counting
use of old-style cast
aligned clause will be ignored because the requested alignment is not a power of 2
allocator with the 'thread' trait access has unspecified behavior on '%0' directive
declaration marked as declare target after first use, it may lead to incorrect results
'#pragma omp declare variant' cannot be applied to the function that was defined already; the original function might be used
'#pragma omp declare variant' cannot be applied for function after first usage; the original function might be used
variant function in '#pragma omp declare variant' is itself marked as '#pragma omp declare variant'
score expressions in the OpenMP context selector need to be constant; %0 is not and will be ignored
zero linear step (%0 %select{|and other variables in clause }1should probably be const)
OpenMP loop iteration variable cannot have more than 64 bits size and will be narrowed
OpenMP only allows an ordered construct with the simd clause nested in a simd construct
Type %0 is not trivially copyable and not guaranteed to be mapped correctly
declaration is not declared in any declare target region
array section %select{lower bound|length}0 is of type 'char'
allocate directive specifies %select{default|'%1'}0 allocator while previously used %select{default|'%3'}2
class implementation may not have super class
%0 attribute is deprecated and ignored in OpenCL version %1
passing non-generic address space pointer to %0 may cause dynamic conversion affecting performance
%0 should not return a null pointer unless it is declared 'throw()'%select{| or 'noexcept'}1
os_log() '%%n' format specifier is not allowed
result of comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %4
type %0 requires %1 bytes of alignment and the default allocator only guarantees %2 bytes
overloaded operator %select{>>|<<}0 has higher precedence than comparison operator
%q0 hides overloaded virtual %select{function|functions}1
parameter of overriding method should be annotated with __attribute__((noescape))
parameter '%0' not in expected state when the function returns: expected '%1', observed '%2'
argument not in expected state; expected '%0', observed '%1'
%0 is a large (%1 bytes) pass-by-value argument; pass it by reference instead ?
parentheses were disambiguated as a function declaration
parentheses were disambiguated as redundant parentheses around declaration of variable named %0
passing object of class type %0 through variadic %select{function|block|method|constructor}1%select{|; did you mean to call '%3'?}2
moving a temporary object prevents copy elision
moving a local object in a return statement prevents copy elision
taking the absolute value of %select{pointer|function|array}0 type %1 is suspicious
performing pointer arithmetic on a null pointer has undefined behavior%select{| if the offset is nonzero}0
comparing a pointer to a null character constant; did you mean to compare to %select{NULL|(void *)0}0?
dereference of type %1 that was reinterpret_cast from type %0 has undefined behavior
cast to smaller integer type %1 from %0
cast to smaller integer type %1 from %0
@selector expression formed with potentially direct selector %0
unused attribute %0 in '#pragma clang attribute push' region
#pragma options align=reset failed: %0
expected #pragma pack parameter to be '1', '2', '4', '8', or '16'
the current #pragma pack alignment value is modified in the included file
unterminated '#pragma pack (push, ...)' at end of file
non-default #pragma pack value changes the alignment of struct or union members in the included file
specifying both a name and alignment to 'pop' is undefined
value of #pragma pack(show) == %0
#pragma %0(pop, ...) failed: %1
only variables can be arguments to '#pragma unused'
undeclared variable %0 used as an argument for '#pragma unused'
operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
%0 has lower precedence than %1; %1 will be evaluated first
operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
object format flags cannot be used with '%0' conversion specifier
'%select{*|.*}0' specified field %select{width|precision}0 is missing a matching 'int' argument
field %select{width|precision}0 should have type %1, but argument has type %2
data argument not used by format string
missing object format flag
format string contains '\0' within the string body
format string is not null-terminated
flag '%0' is ignored when flag '%1' is present
incomplete format specifier
more '%%' conversions than data arguments
'%0' is not a valid object format flag
flag '%0' results in undefined behavior with '%1' conversion specifier
%select{field width|precision}0 used with '%1' conversion specifier, resulting in undefined behavior
data argument position '%0' exceeds the number of data arguments (%1)
use of __private_extern__ on a declaration may not produce external symbol private to the linkage unit and is deprecated
property %0 not found on object of type %1; did you mean to access property %2?
property attribute in class extension does not match the primary class
'%1' attribute on property %0 does not match the property inherited from %2
property declared as returning non-retained objects; getter returning retained objects
primary property declaration is implicitly strong while redeclaration in class extension is weak
property access is using %0 method which is deprecated
getter name mismatch between property redeclaration (%1) and its original declaration (%0)
property type %0 is incompatible with type %1 inherited from %2
property %select{of type %1|with attribute '%1'|without attribute '%1'|with getter %1|with setter %1}0 was selected for synthesis
passing the value that %1 points to by reference requires holding %0 %select{'%2'|'%2' exclusively}3
the pointer incremented by %0 refers past the end of the array (that contains %1 element%s2)
the pointer decremented by %0 refers before the beginning of the array
'objc_independent_class' attribute may be put on Objective-C object pointer type only; attribute is ignored
authenticating a null pointer will almost certainly trap
signing a null pointer will yield a non-null pointer
'%0' type qualifier%s1 on return type %plural{1:has|:have}1 no effect
attribute 'readonly' of property %0 restricts attribute 'readwrite' of property inherited from %1
receiver %0 is a forward class and corresponding @interface may not exist
receiver type %0 for instance message is a forward declaration
incompatible redeclaration of library function %0
%q0 redeclared without %1 attribute: previous %1 ignored
%q0 redeclared without 'dllimport' attribute: 'dllexport' attribute added
#pragma redefine_extname is applicable to external C declarations only; not applied to %select{function|variable}0 %1
redefinition of %0 will not be visible outside of this function
variable %0 is %select{decremented|incremented}1 both in the loop header and in the loop body
redundant move in return statement
redundant parentheses surrounding declarator
reference %0 is not yet bound to a value when used here
'register' storage specifier on @catch parameter will be ignored
'reinterpret_cast' %select{from|to}3 class %0 %select{to|from}3 its %select{virtual base|base at non-zero offset}2 %1 behaves differently from 'static_cast'
method is expected to return an instance of its class type %diff{$, but is declared to return $|, but is declared to return different type}0,1
protocol method is expected to return an instance of the implementing class, but is declared to return %0
%select{remainder|division}0 by zero is undefined
'require_constant_initialization' attribute added after initialization of variable
returning address of label, which is local
returning %select{address of|reference to}0 local temporary object
%select{address of|reference to}0 stack memory associated with %select{local variable|parameter}2 %1 returned
manual %0 of an OSSharedPtr is error-prone
non-void %select{function|method}1 %0 should return a value
local variable %0 will be copied despite being %select{returned|thrown}1 by name
prior to the resolution of a defect report against ISO C++11, local variable %0 would have been copied despite being returned by name, due to its not matching the function return type%diff{ ($ vs $)|}1,2
return state set for an unconsumable type '%0'
return value not in expected state; expected '%0', observed '%1'
return value of %0 is a large (%1 bytes) pass-by-value object; pass it by reference instead ?
%0 has C-linkage specified, but returns user-defined type %1 which is incompatible with C
%0 has C-linkage specified, but returns incomplete type %1 which could be incompatible with C
repeated RISC-V 'interrupt' attribute
instance method %0 is being used on 'Class' which is not in the root class
sampler initializer has invalid %0 bits
zero field width in scanf format string is unused
no closing ']' for '%%[' in scanf format string
second argument to 'va_start' is not the last named parameter
second argument to 'va_arg' is of promotable type %0; this va_arg has undefined behavior because arguments will be promoted to %1
second argument to 'va_arg' is of non-POD type %0
second argument to 'va_arg' is of ARC ownership-qualified type %0
explicitly assigning value of variable of type %0 to itself
explicitly assigning value of variable of type %0 to itself
explicitly moving variable of type %0 to itself
property %0 requires method %1 to be defined - use @synthesize, @dynamic or provide a method implementation in this class implementation
property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
%select{parameter|non-static data member}3 %0 %select{|of %1 }3shadows member inherited from type %2
shift count >= width of type
shifting a negative signed value is undefined
shift count is negative
signed shift result (%0) requires %1 bits to represent, but %2 only has %3 bits
signed shift result (%0) sets the sign bit of the shift expression's type (%1) and becomes negative
expression with side effects will be evaluated despite being used as an operand to 'typeid'
expression with side effects has no effect in an unevaluated context
signed bit-field %0 needs an extra bit to represent the largest positive enumerators of %1
sizeof on pointer operation will return size of %0 instead of %1
sizeof on array function parameter will return size of %0 instead of %1
'%0' call operates on objects of type %1 while the size is based on a different type %2
did you mean to %select{dereference the argument to 'sizeof' (and multiply it by the number of elements)|remove the addressof in the argument to 'sizeof' (and multiply it by the number of elements)|provide an explicit length}0?
argument to 'sizeof' in %0 call is the same pointer type %1 as the %select{destination|source}2; expected %3 or an explicit length
variable %0 is %select{used|captured}1 uninitialized whenever %select{'%3' condition is %select{true|false}4|'%3' loop %select{is entered|exits because its condition is false}4|'%3' loop %select{condition is true|exits because its condition is false}4|switch %3 is taken|its declaration is reached|%3 is called}2
'%0' ignored on this declaration
array argument is too small; %select{contains %0 elements|is of size %0}2, callee requires at least %1
non-constant static local variable in inline function may be different in different files
'main' should not be declared static
static variable %0 is suspiciously used within its own initialization
multiple methods named %0 found
@selector expression formed with potentially direct selector %0
this %select{function declaration is not|block declaration is not|old-style function definition is not preceded by}0 a prototype
adding %0 to a string pointer does not append to the string
adding %0 to a string does not append to the string
result of comparison against %select{a string literal|@encode}0 is unspecified (use an explicit string comparison function instead)
size argument in %0 call appears to be size of the source; expected the size of the destination
the value of the size argument in 'strncat' is too large, might lead to a buffer overflow
size argument in 'strncat' call appears to be size of the source
the value of the size argument to 'strncat' is wrong
%2 defined as %select{a struct|an interface|a class}0%select{| template}1 here but previously declared as %select{a struct|an interface|a class}3%select{| template}1; this is valid, but may result in linker errors under the Microsoft C++ ABI
%select{struct|interface|class}0%select{| template}1 %2 was previously declared as a %select{struct|interface|class}3%select{| template}1; this is valid, but may result in linker errors under the Microsoft C++ ABI
subtraction of pointers to type %0 of zero size has undefined behavior
array subscript is of type 'char'
%0 overrides a destructor but is not marked 'override'
%0 overrides a member function but is not marked 'override'
block could be declared with attribute 'noreturn'
%select{function|method}0 %1 could be declared with attribute 'noreturn'
field %0 can overwrite instance variable %1 with variable sized type %2 in superclass %3
'size' argument to bzero is '0'
%select{'size' argument to memset is '0'|setting buffer to a 'sizeof' expression}0; did you mean to transpose the last two arguments?
'swift_newtype' attribute may be put on a typedef only; attribute is ignored
template parameter of a function template with the 'sycl_kernel' attribute cannot be a non-type template parameter
function template with 'sycl_kernel' attribute must have a single parameter
'sycl_kernel' attribute only applies to a function template with at least two template parameters
function template with 'sycl_kernel' attribute must have a 'void' return type
the semantics of this intrinsic changed with GCC version 4.4 - the newer semantics are provided here
taking address of packed member %0 of class or structure %q1 may result in an unaligned pointer value
result of comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %4
result of comparison of constant %0 with expression of type 'BOOL' is always %1, as the only well defined values for 'BOOL' are YES and NO
result of comparison of %select{%4|%1-bit %select{signed|unsigned}2 value}0 %3 %select{%1-bit %select{signed|unsigned}2 value|%4}0 is always %5
result of comparison %select{%3|%1}0 %2 %select{%1|%3}0 is always %4
overlapping comparisons always evaluate to %select{false|true}0
calling %0 is a violation of trusted computing base '%1'
non-type template argument with value '%0' converted to '%1' for unsigned template parameter of type %2
non-type template argument value '%0' truncated to '%1' for template parameter of type %2
exported templates are unsupported
dependent nested name specifier '%0' for friend template declaration is not supported; ignoring this friend declaration
dependent nested name specifier '%0' for friend class declaration is not supported; turning off access control for %1
extraneous template parameter list in template specialization
tentative array definition assumed to have one element
'this' pointer cannot be null in well-defined C++ code; pointer may be assumed to always convert to true
'this' pointer cannot be null in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
%0 attribute requires arguments whose type is annotated with 'capability' attribute; type here is %1
%0 attribute can only be applied in a context annotated with 'capability' attribute
%0 only applies to pointer types; type here is %1
ignoring %0 attribute because its argument is invalid
%0 attribute without capability arguments refers to 'this', but %1 isn't annotated with 'capability' or 'scoped_lockable' attribute
%0 attribute without capability arguments can only be applied to non-static methods of a class
Thread safety beta warning.
Thread safety verbose warning.
%0 has a non-throwing exception specification but can still throw
underaligned exception object thrown
%select{alignment|size}0 of field %1 (%2 bits) does not match the %select{alignment|size}0 of the first field in transparent union; transparent_union attribute ignored
first field of a transparent union cannot have %select{floating point|vector}0 type %1; transparent_union attribute ignored
transparent_union attribute can only be applied to a union definition; attribute ignored
transparent union definition must contain at least one field; transparent_union attribute ignored
'%0' only applies to %select{function|pointer|Objective-C object or block pointer}1 types; type here is %2
specified %0 type tag requires a null pointer
argument type %0 doesn't match specified %1 type tag %select{that requires %3|}2
this type tag was not designed to be used with this function
'%0' qualifier on function type %1 has no effect
'%0' qualifier on function type %1 has unspecified behavior
'%0' qualifier on reference type %1 has no effect
vector operands do not have the same elements sizes (%0 and %1)
unannotated fall-through between switch labels
unannotated fall-through between switch labels in partly-annotated function
implementing unavailable method
%0 may be unavailable because the receiver type is unknown
undeclared selector %0
undeclared selector %0; did you mean %1?
cannot find interface declaration for %0
cannot find interface declaration for %0; did you mean %1?
method definition for %0 not found
cannot find protocol definition for %0
inline function %q0 is not defined
%select{function|variable}0 %q1 has internal linkage but is not defined
reinterpret_cast from %0 to %1 has undefined behavior
%0 is only available on %1 %2 or newer
%0 is only available on %1 %2 or newer
__declspec attribute %0 is not supported
method %0 in protocol %1 not implemented
no method with selector %0 is implemented in this translation unit
block pointer variable %0 is %select{uninitialized|null}1 when captured by block
variable %0 is uninitialized when passed as a const reference argument here
variable %0 is uninitialized when used within its own initialization
reference %0 is not yet bound to a value when used within its own initialization
variable %0 is uninitialized when %select{used here|captured by block}1
isa trait '%0' is not known to the current target; verify the spelling or consider restricting the context selector with the 'arch' selector further
unknown sanitizer '%0' ignored
releasing %0 '%1' that was not held
releasing %0 '%1' using %select{shared|exclusive}2 access, expected %select{shared|exclusive}3 access
%select{function|variable}0 %1 is not needed and will not be emitted
member function %0 is not needed and will not be emitted
'static' function %0 declared in header file should be declared 'static inline'
code will never be executed
'break' will never be executed
default label in switch which covers all enumeration values
loop will run at most once (loop increment never executed)
'return' will never be executed
multiple unsequenced modifications to %0
unsequenced modification and access to %0
taking the absolute value of unsigned type %0 has no effect
result of comparison of %select{%3|unsigned expression}0 %2 %select{unsigned expression|%3}0 is always %4
assigning value of signed enum type %1 to unsigned bit-field %0; negative enumerators of enum %1 will be converted to positive values
result of comparison of %select{%3|unsigned enum expression}0 %2 %select{unsigned enum expression|%3}0 is always %4
sorry, lifetime extension of %select{temporary|backing array of initializer list}0 created by aggregate initialization using default member initializer is not supported; lifetime of %select{temporary|backing array}0 will end at the end of the full-expression
%select{unsupported|duplicate|unknown}0%select{| architecture| tune CPU}1 '%2' in the 'target' attribute string; 'target' attribute ignored
ignoring return value of function declared with %0 attribute
%select{equality|inequality|relational|three-way}0 comparison result unused
unused variable %0
ignoring temporary created by a constructor declared with %0 attribute
ignoring temporary created by a constructor declared with %0 attribute: %1
container access result unused - container access should not be used for side effects
unused exception parameter %0
expression result unused
unused function %0
unused label %0
lambda capture %0 is not %select{used|required to be captured for this use}1
unused %select{typedef|type alias}0 %1
unused member function %0
unused parameter %0
private field %0 is not used
ivar %0 which backs the property is not referenced in this property's accessor
property access result unused - getters should not be used for side effects
ignoring return value of function declared with %0 attribute
ignoring return value of function declared with %0 attribute: %1
unused %select{function|variable}0 template %1
unused variable %0
expression result unused; should this cast be to 'void'?
expression result unused; assign into a variable to force a volatile load
invalid invocation of method '%0' on object '%1' while it is in the '%2' state
invalid invocation of method '%0' on a temporary object while it is in the '%1' state
%0 was marked unused but was used
user-defined literal suffixes not starting with '_' are reserved%select{; no literal will invoke this operator|}0
using namespace directive in global context in header
passing %select{an object that undergoes default argument promotion|an object of reference type|a parameter declared with the 'register' keyword}0 to 'va_start' has undefined behavior
%select{reading|writing}1 the value pointed to by %0 requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 the value pointed to by %1 requires holding %0 %select{'%2'|'%2' exclusively}3
%select{reading|writing}3 the value pointed to by %1 requires holding %0 %select{'%2'|'%2' exclusively}3
instantiation of variable %q0 required here, but no definition is available
%select{reading|writing}1 variable %0 requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 variable %1 requires holding %0 %select{'%2'|'%2' exclusively}3
%select{reading|writing}3 variable %1 requires holding %0 %select{'%2'|'%2' exclusively}3
field %0 with variable sized type %1 is not visible to subclasses and can conflict with their instance variables
variable%select{s| %1|s %1 and %2|s %1, %2, and %3|s %1, %2, %3, and %4}0 used in loop condition not modified in loop body
defaulted move assignment operator of %0 will move assign virtual base class %1 multiple times
Use of 'long' with '__vector' is deprecated
specifying vector types with the 'mode' attribute is deprecated; use the 'vector_size' attribute instead
variable length array used
cast to smaller integer type %1 from %0
cast to smaller integer type %1 from %0
dynamic exception specifications with types are currently ignored in wasm
weak identifier %0 never declared
an already-declared variable is made a weak_import declaration %0
explicit template instantiation %0 will emit a vtable in every translation unit
%0 has no out-of-line virtual method definitions; its vtable will be emitted in every translation unit
using %select{integer|floating point|complex}1 absolute value function %0 when argument is of %select{integer|floating point|complex}2 type
result of '%0' is %1; did you mean exponentiation?
result of '%0' is %1; did you mean '%2'?
result of '%0' is %1; did you mean '%2' (%3)?
zero as null pointer constant
%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++
%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++
%0 is only available on %1 %2 and %3 %4 or newer
the selected methods are already implemented
method %0 cannot be renamed because it overrides a method declared in a system framework
no %select{implementation file|@implementation declaration}0 for the selected %select{declaration|@interface}0 %1; please add one and run the refactoring action again
the selected code is not a part of a function's / method's body
the selected expression can't be extracted
the selected expression is too simple to extract
refactoring action can't be initiated without a selection
the provided selection does not overlap with the AST nodes of interest
there is no symbol at the given location
%0 is a builtin function that cannot be renamed
%0 is declared in a %1 file; rename can be initiated in a %1 file only
%0 cannot be renamed because it is declared in a system header
StringWithFormatlocalizedStringW
pointer-subtractkernel-hwaddressat-cast-overflowfloat-cast-overfzero
float-divide-by-r-divide-by-zerointeger-divide-bnonnull-attributnullability-assinullability-return
pointer-overflowonnull-attributereturns-nonnull-integer-overflowsigned-integer-ounsigned-integerigned-shift-baseunsigned-shift-bcfi-derived-castcfi-unrelated-cashadow-call-stacteger-truncationimplicit-integereger-sign-changelicit-conversionimplicit-convers
--------
ed-vector-memops+paired-vector-mpcrelative-memopmops
paired-vector-meexperimental-zfhexception-handlitrapping-fptointnontrapping-fptolemented-simd128unimplemented-sict-calls
retpoline-indireal-thunk
retpoline-externndirect-branchescore_aes_pclmulqdq
_tsx
core_2_duo_sse4_1
atom_sse4_2_movbcore_2_duo_ssse3core_2nd_gen_avxcore_3rd_gen_avxcore_4th_gen_avxcore_5th_gen_avx_iii_no_xmm_regspentium_iii_no_x
tion-declaration-implicit-functi
line-line-tablesno-inline-line-t
use-sample-profied-zeros-fp-mathno-signed-zeros--sample-accurateprofile-sample-akchk-strong-linkdarwin-stkchk-ststack-probe-sizegal-vector-widthmin-legal-vectorless-precise-fpm
.mask.cmp.pd.256avx512.mask.cmp..mask.cmp.pd.512.mask.cmp.ps.128.mask.cmp.ps.256.mask.cmp.ps.512ckprotectorcheckstackprotectorchc.load.add.f32.patomic.load.add.c.load.add.f64.pnt.group.barrierinvariant.group.arm.thread.point4.thread.pointeraarch64.thread.parm.neon.vqadds.arm.neon.vqaddu.arm.neon.vqsubs.arm.neon.vqsubu.aarch64.neon.addch64.neon.bfdot.aarch64.neon.bfdaarch64.neon.bfmlalb.v4f32.v16i8lalt.v4f32.v16i8mmla.v4f32.v16i8arm.neon.bfmlalbarm.neon.bfmlaltarm.neon.bfmmla.fdot.v4f32.v16i8bfdot.v2f32.v8i8arm.neon.bfdot.v.mask.vcvtph2ps.2.mask.compress.512.mask.expand.ld
512.maskz.vpshldrd
512.maskz.vpshrd.mask.broadcastf.mask.broadcastiavx512.psll.dq.5avx512.psrl.dq.52.mask.movshdup.dd.s
2.maskz.vfmadd.s2.mask3.vfmadd.s2.mask3.vfmsub.s.mask3.vfnmsub.sdd.p
2.mask.vfnmadd.p2.mask.vfnmsub.p2.mask3.vfmadd.p2.mask3.vfmsub.p.mask3.vfnmsub.p2.maskz.vfmadd.pmask.vfmaddsub.paddsub.p
subadd.p
Class PropertiesObjective-C Clasage Info Versionage Info Sectionrbage CollectionObjective-C Garbauth.abi-versionptrauth.abi-vers, __objc_catlist__DATA, __objc_cectorizer.unroll!!!!!!!!!!!!!!!!avx512.mask.padds.
avx512.mask.psub512.mask.paddus.512.mask.psubus.ssse3.pabs.b.128ssse3.pabs.w.128ssse3.pabs.d.128512.mask.vfmadd.avx512.mask.vfmaadd.
avx512.mask.vfnmsub.
avx512.mask3.vfmavx512.maskz.vfm2.mask3.vfnmsub.avx512.mask3.vfn.mask.vfmaddsub.maskz.vfmaddsub.mask3.vfmaddsub.mask3.vfmsubadd.avx512.mask.shuf.i
avx512.mask.pabsavx512.broadcastavx512.mask.sqrt.p
.mask.pbroadcastavx512.mask.pbro512.mask.pcmpeq.avx512.mask.pcmp512.mask.pcmpgt.avx512.kortestc.avx512.kortestz.f.b.
avx512.mask.pshuavx512.mask.pmaxavx512.mask.pminavx512.pbroadcasmask.broadcast.savx512.mask.broa512.mask.movddupavx512.mask.movdhdup
avx512.mask.movsldup
f.d.
2.mask.pshufl.w.2.mask.pshufh.w.2.mask.vpermil.pavx512.mask.vper.df.
avx512.mask.perm.di.
512.mask.punpcklavx512.mask.punp512.mask.punpckh512.mask.unpckl.avx512.mask.unpc512.mask.unpckh.avx512.mask.pandn.
avx512.mask.por.avx512.mask.pxoravx512.mask.and.avx512.mask.andnavx512.mask.xor.avx512.mask.pmull.
2.mask.cvtdq2pd.avx512.mask.cvtd.mask.cvtudq2pd.avx512.mask.cvtu.mask.cvtudq2ps.2.mask.cvtqq2pd.avx512.mask.cvtq.mask.cvtuqq2pd.2.mask.cvtdq2ps.avx512.cvtusi2sdq2ps.256
q2ps.512
d2dq.256
avx512.mask.cvtpd2ps.256
s2pd.128
s2pd.256
sk.vcvtph2ps.128avx512.mask.vcvtsk.vcvtph2ps.256sk.cvtuqq2ps.256sk.cvtuqq2ps.512sk.cvttpd2dq.256avx512.mask.cvttsk.cvttps2dq.128sk.cvttps2dq.256var.
avx512.pmul.dq.512
512.pmulu.dq.512avx512.pmulu.dq..dq.
2.mask.pmulu.dq.mask.pmul.hr.sw.h.w.
2.mask.pmulhu.w.2.mask.pmaddw.d.avx512.mask.pmadmask.pmaddubs.w.2.mask.packsswb.avx512.mask.pack2.mask.packssdw.2.mask.packuswb.2.mask.packusdw.b
avx512.mask.ucmpavx512.cvtb2maskavx512.cvtw2maskavx512.cvtd2maskavx512.cvtq2maskmask.vpermilvar.avx512.mask.psll.d
avx512.mask.psraavx512.mask.psrli
avx512.mask.pmovsx
avx512.mask.lzcnt.
2.mask.pternlog.avx512.mask.pter.maskz.pternlog.avx512.maskz.ptedd52
avx512.mask.vpma2.maskz.vpmadd52avx512.maskz.vpmmask.vpermi2var.mask.vpermt2var.rmt2var.
avx512.maskz.vpe2.mask.vpdpbusd..maskz.vpdpbusd..mask.vpdpbusds.maskz.vpdpbusds.2.mask.vpdpwssd..maskz.vpdpwssd..mask.vpdpwssds.maskz.vpdpwssds.2.mask.dbpsadbw.avx512.mask.dbps512.mask.vpshld.avx512.mask.vpsh512.mask.vpshrd.ldv.
rdv.
2.maskz.vpshldv.avx512.maskz.vps2.maskz.vpshrdv.avx512.mask.add.avx512.mask.sub.avx512.mask.mul.avx512.mask.div.avx512.mask.max.avx512.mask.min.2.mask.fpclass.pavx512.mask.fpclsk.vpshufbitqmb..pmultishift.qb.2.mask.conflict.avx512.mask.confavx.cvt.ps2.pd.256
avx.cvtdq2.pd.256
avx.cvtdq2.ps.25mask.pmov.qd.256mask.pmov.qd.512mask.pmov.wb.256mask.pmov.wb.512avx.vinsertf128.avx2.vinserti128avx512.mask.inseavx.vextractf128avx2.vextracti128
ract
avx512.mask.vext512.mask.storeu.avx512.mask.stor512.mask.store.pe.b.
e.w.
e.d.
e.q.
e.ss
avx512.mask.loadu.
nd.load.
avx512.mask.expa.compress.store.avx512.mask.compnd.b
nd.w
nd.d
nd.q
nd.p
.mask.compress.b.mask.compress.w.mask.compress.d.mask.compress.q.mask.compress.psse42.crc32.64.8avx.vbroadcast.s512.vbroadcast.savx512.vbroadcasgnr.
avx512.mask.pali512.mask.valign.avx512.mask.valiavx.vbroadcastf128
2.vbroadcasti128avx2.vbroadcasti.broadcastf32x4..broadcastf64x2..broadcastf32x8..broadcastf64x4..broadcasti32x4..broadcasti64x2..broadcasti32x8..broadcasti64x4.avx512.mask.move.s
avx512.mask.prorv.
avx512.mask.prolavx512.mask.pavg
loop_header_weight
Debug Info VersitipleInheritanceDIFlagMultipleInePassByReferenceDIFlagTypePassByirectVirtualBaseDIFlagIndirectVieritance
DIFlagVirtualInhgLValueReferenceDIFlagLValueRefegRValueReferenceDIFlagRValueRefegTypePassByValuelagObjectPointerDIFlagObjectPoinlagExportSymbolsDIFlagExportSymbbjcClassCompleteDIFlagObjcClassCingleInheritanceDIFlagSingleInhentroducedVirtualDIFlagIntroducedllCallsDescribedDIFlagAllCallsDeDIFlagReservedBit4
DIFlagStaticMembDIFlagLittleEndian
DIFlagAppleBlockDIFlagArtificialDIFlagPrototypedDIFlagNonTrivialagMainSubprogramDISPFlagMainSubpDISPFlagOptimizeDISPFlagElementaDISPFlagRecursivDISPFlagDefinitiDISPFlagObjCDirePFlagPureVirtualDISPFlagPureVirtPFlagLocalToUnitDISPFlagLocalToUround.towardzerond.tonearestawayround.tonearestaount
function_entry_ction_entry_countsynthetic_functi 
JJJJJJJ
JJJJJJJJJJJ
JJJJ@
DDU!
JJJJJJJ
JJJJJJJJJJJ
JJJJ
++++
++++
..D...E
..T...D
..D...D
..D...D
..D.
MMLL
MMLL
MMLL
MMLL
LLLLMMMMMM
MMLL
MMLL
MMLL
MMLL
LLLLMMMMLLL
LLLLMMMMLLL
LLLLMMMMLL
MMLL
LLLLMMMMLLLLMMMMML
MMLL
MMLL
MMMD.
LLLLMMMMLLL
LLLLMMMMLL
MMMD.
LLLLMMMMLL
MMMD.
...D...D...D...D...D...D..D
,,,,YYYY;;;;JJJJ,,,
,,,,YYYY;;;;JJJJ,,,
,,,,,,,
,,,,,,,
,,,,,,,
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
zzzz
zzzz
;;;;JJJJ;;;;JJJJUD
,,,,YYYY;;;;JJJJU99
;;;;JJJJ;;;;JJJJUD
,,,,YYYY;;;;JJJJU
,,,,YYYY;;;;JJJJ@
PD33PD33PD33PDDDPDDDPDDDPD33PD33PD33P4
PD33PD33PD33PDDDPDDDPDDDPD33PD33PD33PD4
PD33PDDDPD33P4
PD33PDDDPD33PD4
,,,,,,,
zzzzzzz
;;;;;;;;zzz
;;;;L%
J,,JJ;;JJ;;JJ,,JL%
J;;JJ;;J;,,
zzzzYYY
JJJ,YYY
YYYYYYY
JJJJJJJ
JJJJJJJ
,,,,YYYY;;;;JJJJ
,,,,JJJ
,,,,,,,
;,,;YJJY,YY,J;;J;,,
;,,;YJJYJ;;J,,,,JJJJ;;;;;,,;YJJYJ;;J,,,,JJJJ;;;;;,,;YJJYJ;;J;,,;YJJYJ;;J;,,
,,,,;JJ
,,,,,,,,,,,
{{{{
----KKK
B|||C
 K.D0L.D [.D [.D
[BJzJ
L|LC
BYzY
[{[BJzJ
L|LCYzY
[{[BzYz
[BL|LCYzY
[{[BJzJ
L|LCYzY
[{[BzYz
Bzzz
|||C
|<|C;z
B|||C
B|||C
 K.D0L.D [.D [.D
JJJJKKKKLLLLJJJJKKKKLLLLJJJJKKKKLLLLJJJJKKKKLLLLJJJJKKKKLLLL;;;;<<<<====@ 
zzJz{{K{||L|YYYYZZZZ[[[[,,,,----
YYYYZZZZ[[[[YYYYZZZZ[[[[
zzJJ{{KK||LL;z;
zzzz{{{{
JJJJ.
zzzz
,,,,;;
YYY"
JJJJYJJYYJJYJJJJYJJYYJJYJ;;J;;;;J;;J;;;;J;;JJ;;J,,,,,,,
))))
$%&'()*+,-
./01/23
8988
BBAAA%AA
""""""""""""
CDECDDEEF
HGAAAA
"""%""""""""""""%""""""""%"
LMNMMMNMMMNMMMNMM
66666666
66666666
C$$H$$$$DEFC$$H$
%%%'&
66666666
66666666666
OPPQ
RRSSTUUVUWUUUUUUUUXXYYQQQRRRRRRRRRRRRRZRR[\T\SSS]^]]]]__T`aabcdeRfRRRRRRRggReaThiijkjjjhiijkjjjijjklkkkhiijkjjjhiijkjjjhiijkjjjhiijkjjjhiijkjjjhiijkjjjhiijkjjjhiijkjjjhiijkjjjhiijkjjj
mnnoopppqqooppnooppqqqrrppqqopppqqoopppqqnoooppoppnoooppnnoooppmnnnoonoosttuuuvvvvvvvvwxxyzyyyxyyzzzwxxyzyyy{mmnnmnnoonoopppoppqqqonoopppmnnoonooppoppqqqpqqrrrpoppqqqopr|}pq|~
~qr~}
}|pq|~
~noopppoppqqqoopr|}pq|~
~qr~}
}|pq|~
~noopppoppqqqmnnooonoopppnoopppnoqr~opr|}|pq|~
~ropr|}|mnnooonoopppnnoqr~opr|}|pq|~
~ropr|}|mnnooonooppp{mmnnnmnnooomnnooo
RRRa
`RRRRR
RZUUVUUUUUUUUUUU
XYRRTTRRRR
QQQQ
RRRRfffTRRRRVV
VVVVVVVVVVV
RRfff
RRRRRRRRTT










8
88
8
88
8888888
888888888888888888888888
88888

8


888
888888
8
88
8
88


8888













8888

8888

8888
88888888
8888888888888888





8888

8888888888888888
88

88888888888

888888888888888888888888

8888
8
















888888888











88

RaRPPRRRRRRRRRRRRRRRRRPP










88








8


88


88888888
888888

WWWWWWWWWWWWWWWWWWWWWWWW



WWWWWWWWWWWWWWWW
WWWWWWWW888
88888888



8


8




88


88


__builtin_adjust_trampoline
__builtin_debugtrap
__builtin_unwind_init
__builtin_init_trampoline
__builtin_object_size
__builtin_stack_restore
__builtin_stack_save
__builtin_thread_pointer
__builtin_trap
__builtin_arm_dmb
__builtin_arm_dsb
__builtin_arm_isb
__builtin_sve_svaesd_u8
__builtin_sve_svaese_u8
__builtin_sve_svaesimc_u8
__builtin_sve_svaesmc_u8
__builtin_sve_svrax1_u64
__builtin_sve_svrdffr
__builtin_sve_svrdffr_z
__builtin_sve_svsetffr
__builtin_sve_svsm4e_u32
__builtin_sve_svsm4ekey_u32
__builtin_sve_svwrffr
__builtin_arm_tcancel
__builtin_arm_tcommit
__builtin_arm_tstart
__builtin_arm_ttest
__builtin_amdgcn_alignbyte
__builtin_amdgcn_buffer_wbinvl1
__builtin_amdgcn_buffer_wbinvl1_sc
__builtin_amdgcn_buffer_wbinvl1_vol
__builtin_amdgcn_cubeid
__builtin_amdgcn_cubema
__builtin_amdgcn_cubesc
__builtin_amdgcn_cubetc
__builtin_amdgcn_cvt_pk_i16
__builtin_amdgcn_cvt_pk_u16
__builtin_amdgcn_cvt_pk_u8_f32
__builtin_amdgcn_cvt_pknorm_i16
__builtin_amdgcn_cvt_pknorm_u16
__builtin_amdgcn_cvt_pkrtz
__builtin_amdgcn_dispatch_id
__builtin_amdgcn_ds_bpermute
__builtin_amdgcn_ds_gws_barrier
__builtin_amdgcn_ds_gws_init
__builtin_amdgcn_ds_gws_sema_br
__builtin_amdgcn_ds_gws_sema_p
__builtin_amdgcn_ds_gws_sema_release_all
__builtin_amdgcn_ds_gws_sema_v
__builtin_amdgcn_ds_permute
__builtin_amdgcn_ds_swizzle
__builtin_amdgcn_endpgm
__builtin_amdgcn_fdot2
__builtin_amdgcn_fmed3
__builtin_amdgcn_fmul_legacy
__builtin_amdgcn_groupstaticsize
__builtin_amdgcn_implicit_buffer_ptr
__builtin_amdgcn_implicitarg_ptr
__builtin_amdgcn_interp_mov
__builtin_amdgcn_interp_p1
__builtin_amdgcn_interp_p1_f16
__builtin_amdgcn_interp_p2
__builtin_amdgcn_interp_p2_f16
__builtin_amdgcn_is_private
__builtin_amdgcn_is_shared
__builtin_amdgcn_kernarg_segment_ptr
__builtin_amdgcn_lerp
__builtin_amdgcn_mbcnt_hi
__builtin_amdgcn_mbcnt_lo
__builtin_amdgcn_mfma_f32_16x16x16f16
__builtin_amdgcn_mfma_f32_16x16x1f32
__builtin_amdgcn_mfma_f32_16x16x2bf16
__builtin_amdgcn_mfma_f32_16x16x4f16
__builtin_amdgcn_mfma_f32_16x16x4f32
__builtin_amdgcn_mfma_f32_16x16x8bf16
__builtin_amdgcn_mfma_f32_32x32x1f32
__builtin_amdgcn_mfma_f32_32x32x2bf16
__builtin_amdgcn_mfma_f32_32x32x2f32
__builtin_amdgcn_mfma_f32_32x32x4bf16
__builtin_amdgcn_mfma_f32_32x32x4f16
__builtin_amdgcn_mfma_f32_32x32x8f16
__builtin_amdgcn_mfma_f32_4x4x1f32
__builtin_amdgcn_mfma_f32_4x4x2bf16
__builtin_amdgcn_mfma_f32_4x4x4f16
__builtin_amdgcn_mfma_i32_16x16x16i8
__builtin_amdgcn_mfma_i32_16x16x4i8
__builtin_amdgcn_mfma_i32_32x32x4i8
__builtin_amdgcn_mfma_i32_32x32x8i8
__builtin_amdgcn_mfma_i32_4x4x4i8
__builtin_amdgcn_mqsad_pk_u16_u8
__builtin_amdgcn_mqsad_u32_u8
__builtin_amdgcn_msad_u8
__builtin_amdgcn_permlane16
__builtin_amdgcn_permlanex16
__builtin_amdgcn_qsad_pk_u16_u8
__builtin_amdgcn_queue_ptr
__builtin_amdgcn_rcp_legacy
__builtin_amdgcn_readfirstlane
__builtin_amdgcn_readlane
__builtin_amdgcn_rsq_legacy
__builtin_amdgcn_s_barrier
__builtin_amdgcn_s_dcache_inv
__builtin_amdgcn_s_dcache_inv_vol
__builtin_amdgcn_s_dcache_wb
__builtin_amdgcn_s_dcache_wb_vol
__builtin_amdgcn_s_decperflevel
__builtin_amdgcn_s_get_waveid_in_workgroup
__builtin_amdgcn_s_getpc
__builtin_amdgcn_s_getreg
__builtin_amdgcn_s_incperflevel
__builtin_amdgcn_s_memrealtime
__builtin_amdgcn_s_memtime
__builtin_amdgcn_s_sendmsg
__builtin_amdgcn_s_sendmsghalt
__builtin_amdgcn_s_setreg
__builtin_amdgcn_s_sleep
__builtin_amdgcn_s_waitcnt
__builtin_amdgcn_sad_hi_u8
__builtin_amdgcn_sad_u16
__builtin_amdgcn_sad_u8
__builtin_amdgcn_sdot2
__builtin_amdgcn_sdot4
__builtin_amdgcn_sdot8
__builtin_amdgcn_udot2
__builtin_amdgcn_udot4
__builtin_amdgcn_udot8
__builtin_amdgcn_wave_barrier
__builtin_amdgcn_wavefrontsize
__builtin_amdgcn_workgroup_id_x
__builtin_amdgcn_workgroup_id_y
__builtin_amdgcn_workgroup_id_z
__builtin_amdgcn_writelane
__builtin_arm_cdp
__builtin_arm_cdp2
__builtin_arm_cmse_TT
__builtin_arm_cmse_TTA
__builtin_arm_cmse_TTAT
__builtin_arm_cmse_TTT
__builtin_arm_get_fpscr
__builtin_arm_ldc
__builtin_arm_ldc2
__builtin_arm_ldc2l
__builtin_arm_ldcl
__builtin_arm_mcr
__builtin_arm_mcr2
__builtin_arm_mrc
__builtin_arm_mrc2
__builtin_arm_qadd
__builtin_arm_qadd16
__builtin_arm_qadd8
__builtin_arm_qasx
__builtin_arm_qsax
__builtin_arm_qsub
__builtin_arm_qsub16
__builtin_arm_qsub8
__builtin_arm_sadd16
__builtin_arm_sadd8
__builtin_arm_sasx
__builtin_arm_sel
__builtin_arm_set_fpscr
__builtin_arm_shadd16
__builtin_arm_shadd8
__builtin_arm_shasx
__builtin_arm_shsax
__builtin_arm_shsub16
__builtin_arm_shsub8
__builtin_arm_smlabb
__builtin_arm_smlabt
__builtin_arm_smlad
__builtin_arm_smladx
__builtin_arm_smlald
__builtin_arm_smlaldx
__builtin_arm_smlatb
__builtin_arm_smlatt
__builtin_arm_smlawb
__builtin_arm_smlawt
__builtin_arm_smlsd
__builtin_arm_smlsdx
__builtin_arm_smlsld
__builtin_arm_smlsldx
__builtin_arm_smuad
__builtin_arm_smuadx
__builtin_arm_smulbb
__builtin_arm_smulbt
__builtin_arm_smultb
__builtin_arm_smultt
__builtin_arm_smulwb
__builtin_arm_smulwt
__builtin_arm_smusd
__builtin_arm_smusdx
__builtin_arm_ssat
__builtin_arm_ssat16
__builtin_arm_ssax
__builtin_arm_ssub16
__builtin_arm_ssub8
__builtin_arm_stc
__builtin_arm_stc2
__builtin_arm_stc2l
__builtin_arm_stcl
__builtin_arm_sxtab16
__builtin_arm_sxtb16
__builtin_arm_uadd16
__builtin_arm_uadd8
__builtin_arm_uasx
__builtin_arm_uhadd16
__builtin_arm_uhadd8
__builtin_arm_uhasx
__builtin_arm_uhsax
__builtin_arm_uhsub16
__builtin_arm_uhsub8
__builtin_arm_uqadd16
__builtin_arm_uqadd8
__builtin_arm_uqasx
__builtin_arm_uqsax
__builtin_arm_uqsub16
__builtin_arm_uqsub8
__builtin_arm_usad8
__builtin_arm_usada8
__builtin_arm_usat
__builtin_arm_usat16
__builtin_arm_usax
__builtin_arm_usub16
__builtin_arm_usub8
__builtin_arm_uxtab16
__builtin_arm_uxtb16
__builtin_bpf_btf_type_id
__builtin_bpf_load_byte
__builtin_bpf_load_half
__builtin_bpf_load_word
__builtin_bpf_passthrough
__builtin_bpf_preserve_enum_value
__builtin_bpf_preserve_field_info
__builtin_bpf_preserve_type_info
__builtin_bpf_pseudo
__builtin_HEXAGON_A2_abs
__builtin_HEXAGON_A2_absp
__builtin_HEXAGON_A2_abssat
__builtin_HEXAGON_A2_add
__builtin_HEXAGON_A2_addh_h16_hh
__builtin_HEXAGON_A2_addh_h16_hl
__builtin_HEXAGON_A2_addh_h16_lh
__builtin_HEXAGON_A2_addh_h16_ll
__builtin_HEXAGON_A2_addh_h16_sat_hh
__builtin_HEXAGON_A2_addh_h16_sat_hl
__builtin_HEXAGON_A2_addh_h16_sat_lh
__builtin_HEXAGON_A2_addh_h16_sat_ll
__builtin_HEXAGON_A2_addh_l16_hl
__builtin_HEXAGON_A2_addh_l16_ll
__builtin_HEXAGON_A2_addh_l16_sat_hl
__builtin_HEXAGON_A2_addh_l16_sat_ll
__builtin_HEXAGON_A2_addi
__builtin_HEXAGON_A2_addp
__builtin_HEXAGON_A2_addpsat
__builtin_HEXAGON_A2_addsat
__builtin_HEXAGON_A2_addsp
__builtin_HEXAGON_A2_and
__builtin_HEXAGON_A2_andir
__builtin_HEXAGON_A2_andp
__builtin_HEXAGON_A2_aslh
__builtin_HEXAGON_A2_asrh
__builtin_HEXAGON_A2_combine_hh
__builtin_HEXAGON_A2_combine_hl
__builtin_HEXAGON_A2_combine_lh
__builtin_HEXAGON_A2_combine_ll
__builtin_HEXAGON_A2_combineii
__builtin_HEXAGON_A2_combinew
__builtin_HEXAGON_A2_max
__builtin_HEXAGON_A2_maxp
__builtin_HEXAGON_A2_maxu
__builtin_HEXAGON_A2_maxup
__builtin_HEXAGON_A2_min
__builtin_HEXAGON_A2_minp
__builtin_HEXAGON_A2_minu
__builtin_HEXAGON_A2_minup
__builtin_HEXAGON_A2_neg
__builtin_HEXAGON_A2_negp
__builtin_HEXAGON_A2_negsat
__builtin_HEXAGON_A2_not
__builtin_HEXAGON_A2_notp
__builtin_HEXAGON_A2_or
__builtin_HEXAGON_A2_orir
__builtin_HEXAGON_A2_orp
__builtin_HEXAGON_A2_roundsat
__builtin_HEXAGON_A2_sat
__builtin_HEXAGON_A2_satb
__builtin_HEXAGON_A2_sath
__builtin_HEXAGON_A2_satub
__builtin_HEXAGON_A2_satuh
__builtin_HEXAGON_A2_sub
__builtin_HEXAGON_A2_subh_h16_hh
__builtin_HEXAGON_A2_subh_h16_hl
__builtin_HEXAGON_A2_subh_h16_lh
__builtin_HEXAGON_A2_subh_h16_ll
__builtin_HEXAGON_A2_subh_h16_sat_hh
__builtin_HEXAGON_A2_subh_h16_sat_hl
__builtin_HEXAGON_A2_subh_h16_sat_lh
__builtin_HEXAGON_A2_subh_h16_sat_ll
__builtin_HEXAGON_A2_subh_l16_hl
__builtin_HEXAGON_A2_subh_l16_ll
__builtin_HEXAGON_A2_subh_l16_sat_hl
__builtin_HEXAGON_A2_subh_l16_sat_ll
__builtin_HEXAGON_A2_subp
__builtin_HEXAGON_A2_subri
__builtin_HEXAGON_A2_subsat
__builtin_HEXAGON_A2_svaddh
__builtin_HEXAGON_A2_svaddhs
__builtin_HEXAGON_A2_svadduhs
__builtin_HEXAGON_A2_svavgh
__builtin_HEXAGON_A2_svavghs
__builtin_HEXAGON_A2_svnavgh
__builtin_HEXAGON_A2_svsubh
__builtin_HEXAGON_A2_svsubhs
__builtin_HEXAGON_A2_svsubuhs
__builtin_HEXAGON_A2_swiz
__builtin_HEXAGON_A2_sxtb
__builtin_HEXAGON_A2_sxth
__builtin_HEXAGON_A2_sxtw
__builtin_HEXAGON_A2_tfr
__builtin_HEXAGON_A2_tfrih
__builtin_HEXAGON_A2_tfril
__builtin_HEXAGON_A2_tfrp
__builtin_HEXAGON_A2_tfrpi
__builtin_HEXAGON_A2_tfrsi
__builtin_HEXAGON_A2_vabsh
__builtin_HEXAGON_A2_vabshsat
__builtin_HEXAGON_A2_vabsw
__builtin_HEXAGON_A2_vabswsat
__builtin_HEXAGON_A2_vaddb_map
__builtin_HEXAGON_A2_vaddh
__builtin_HEXAGON_A2_vaddhs
__builtin_HEXAGON_A2_vaddub
__builtin_HEXAGON_A2_vaddubs
__builtin_HEXAGON_A2_vadduhs
__builtin_HEXAGON_A2_vaddw
__builtin_HEXAGON_A2_vaddws
__builtin_HEXAGON_A2_vavgh
__builtin_HEXAGON_A2_vavghcr
__builtin_HEXAGON_A2_vavghr
__builtin_HEXAGON_A2_vavgub
__builtin_HEXAGON_A2_vavgubr
__builtin_HEXAGON_A2_vavguh
__builtin_HEXAGON_A2_vavguhr
__builtin_HEXAGON_A2_vavguw
__builtin_HEXAGON_A2_vavguwr
__builtin_HEXAGON_A2_vavgw
__builtin_HEXAGON_A2_vavgwcr
__builtin_HEXAGON_A2_vavgwr
__builtin_HEXAGON_A2_vcmpbeq
__builtin_HEXAGON_A2_vcmpbgtu
__builtin_HEXAGON_A2_vcmpheq
__builtin_HEXAGON_A2_vcmphgt
__builtin_HEXAGON_A2_vcmphgtu
__builtin_HEXAGON_A2_vcmpweq
__builtin_HEXAGON_A2_vcmpwgt
__builtin_HEXAGON_A2_vcmpwgtu
__builtin_HEXAGON_A2_vconj
__builtin_HEXAGON_A2_vmaxb
__builtin_HEXAGON_A2_vmaxh
__builtin_HEXAGON_A2_vmaxub
__builtin_HEXAGON_A2_vmaxuh
__builtin_HEXAGON_A2_vmaxuw
__builtin_HEXAGON_A2_vmaxw
__builtin_HEXAGON_A2_vminb
__builtin_HEXAGON_A2_vminh
__builtin_HEXAGON_A2_vminub
__builtin_HEXAGON_A2_vminuh
__builtin_HEXAGON_A2_vminuw
__builtin_HEXAGON_A2_vminw
__builtin_HEXAGON_A2_vnavgh
__builtin_HEXAGON_A2_vnavghcr
__builtin_HEXAGON_A2_vnavghr
__builtin_HEXAGON_A2_vnavgw
__builtin_HEXAGON_A2_vnavgwcr
__builtin_HEXAGON_A2_vnavgwr
__builtin_HEXAGON_A2_vraddub
__builtin_HEXAGON_A2_vraddub_acc
__builtin_HEXAGON_A2_vrsadub
__builtin_HEXAGON_A2_vrsadub_acc
__builtin_HEXAGON_A2_vsubb_map
__builtin_HEXAGON_A2_vsubh
__builtin_HEXAGON_A2_vsubhs
__builtin_HEXAGON_A2_vsubub
__builtin_HEXAGON_A2_vsububs
__builtin_HEXAGON_A2_vsubuhs
__builtin_HEXAGON_A2_vsubw
__builtin_HEXAGON_A2_vsubws
__builtin_HEXAGON_A2_xor
__builtin_HEXAGON_A2_xorp
__builtin_HEXAGON_A2_zxtb
__builtin_HEXAGON_A2_zxth
__builtin_HEXAGON_A4_andn
__builtin_HEXAGON_A4_andnp
__builtin_HEXAGON_A4_bitsplit
__builtin_HEXAGON_A4_bitspliti
__builtin_HEXAGON_A4_boundscheck
__builtin_HEXAGON_A4_cmpbeq
__builtin_HEXAGON_A4_cmpbeqi
__builtin_HEXAGON_A4_cmpbgt
__builtin_HEXAGON_A4_cmpbgti
__builtin_HEXAGON_A4_cmpbgtu
__builtin_HEXAGON_A4_cmpbgtui
__builtin_HEXAGON_A4_cmpheq
__builtin_HEXAGON_A4_cmpheqi
__builtin_HEXAGON_A4_cmphgt
__builtin_HEXAGON_A4_cmphgti
__builtin_HEXAGON_A4_cmphgtu
__builtin_HEXAGON_A4_cmphgtui
__builtin_HEXAGON_A4_combineir
__builtin_HEXAGON_A4_combineri
__builtin_HEXAGON_A4_cround_ri
__builtin_HEXAGON_A4_cround_rr
__builtin_HEXAGON_A4_modwrapu
__builtin_HEXAGON_A4_orn
__builtin_HEXAGON_A4_ornp
__builtin_HEXAGON_A4_rcmpeq
__builtin_HEXAGON_A4_rcmpeqi
__builtin_HEXAGON_A4_rcmpneq
__builtin_HEXAGON_A4_rcmpneqi
__builtin_HEXAGON_A4_round_ri
__builtin_HEXAGON_A4_round_ri_sat
__builtin_HEXAGON_A4_round_rr
__builtin_HEXAGON_A4_round_rr_sat
__builtin_HEXAGON_A4_tlbmatch
__builtin_HEXAGON_A4_vcmpbeq_any
__builtin_HEXAGON_A4_vcmpbeqi
__builtin_HEXAGON_A4_vcmpbgt
__builtin_HEXAGON_A4_vcmpbgti
__builtin_HEXAGON_A4_vcmpbgtui
__builtin_HEXAGON_A4_vcmpheqi
__builtin_HEXAGON_A4_vcmphgti
__builtin_HEXAGON_A4_vcmphgtui
__builtin_HEXAGON_A4_vcmpweqi
__builtin_HEXAGON_A4_vcmpwgti
__builtin_HEXAGON_A4_vcmpwgtui
__builtin_HEXAGON_A4_vrmaxh
__builtin_HEXAGON_A4_vrmaxuh
__builtin_HEXAGON_A4_vrmaxuw
__builtin_HEXAGON_A4_vrmaxw
__builtin_HEXAGON_A4_vrminh
__builtin_HEXAGON_A4_vrminuh
__builtin_HEXAGON_A4_vrminuw
__builtin_HEXAGON_A4_vrminw
__builtin_HEXAGON_A5_vaddhubs
__builtin_HEXAGON_A6_vcmpbeq_notany
__builtin_HEXAGON_A7_clip
__builtin_HEXAGON_A7_croundd_ri
__builtin_HEXAGON_A7_croundd_rr
__builtin_HEXAGON_A7_vclip
__builtin_HEXAGON_C2_all8
__builtin_HEXAGON_C2_and
__builtin_HEXAGON_C2_andn
__builtin_HEXAGON_C2_any8
__builtin_HEXAGON_C2_bitsclr
__builtin_HEXAGON_C2_bitsclri
__builtin_HEXAGON_C2_bitsset
__builtin_HEXAGON_C2_cmpeq
__builtin_HEXAGON_C2_cmpeqi
__builtin_HEXAGON_C2_cmpeqp
__builtin_HEXAGON_C2_cmpgei
__builtin_HEXAGON_C2_cmpgeui
__builtin_HEXAGON_C2_cmpgt
__builtin_HEXAGON_C2_cmpgti
__builtin_HEXAGON_C2_cmpgtp
__builtin_HEXAGON_C2_cmpgtu
__builtin_HEXAGON_C2_cmpgtui
__builtin_HEXAGON_C2_cmpgtup
__builtin_HEXAGON_C2_cmplt
__builtin_HEXAGON_C2_cmpltu
__builtin_HEXAGON_C2_mask
__builtin_HEXAGON_C2_mux
__builtin_HEXAGON_C2_muxii
__builtin_HEXAGON_C2_muxir
__builtin_HEXAGON_C2_muxri
__builtin_HEXAGON_C2_not
__builtin_HEXAGON_C2_or
__builtin_HEXAGON_C2_orn
__builtin_HEXAGON_C2_pxfer_map
__builtin_HEXAGON_C2_tfrpr
__builtin_HEXAGON_C2_tfrrp
__builtin_HEXAGON_C2_vitpack
__builtin_HEXAGON_C2_vmux
__builtin_HEXAGON_C2_xor
__builtin_HEXAGON_C4_and_and
__builtin_HEXAGON_C4_and_andn
__builtin_HEXAGON_C4_and_or
__builtin_HEXAGON_C4_and_orn
__builtin_HEXAGON_C4_cmplte
__builtin_HEXAGON_C4_cmpltei
__builtin_HEXAGON_C4_cmplteu
__builtin_HEXAGON_C4_cmplteui
__builtin_HEXAGON_C4_cmpneq
__builtin_HEXAGON_C4_cmpneqi
__builtin_HEXAGON_C4_fastcorner9
__builtin_HEXAGON_C4_fastcorner9_not
__builtin_HEXAGON_C4_nbitsclr
__builtin_HEXAGON_C4_nbitsclri
__builtin_HEXAGON_C4_nbitsset
__builtin_HEXAGON_C4_or_and
__builtin_HEXAGON_C4_or_andn
__builtin_HEXAGON_C4_or_or
__builtin_HEXAGON_C4_or_orn
__builtin_HEXAGON_F2_conv_d2df
__builtin_HEXAGON_F2_conv_d2sf
__builtin_HEXAGON_F2_conv_df2d
__builtin_HEXAGON_F2_conv_df2d_chop
__builtin_HEXAGON_F2_conv_df2sf
__builtin_HEXAGON_F2_conv_df2ud
__builtin_HEXAGON_F2_conv_df2ud_chop
__builtin_HEXAGON_F2_conv_df2uw
__builtin_HEXAGON_F2_conv_df2uw_chop
__builtin_HEXAGON_F2_conv_df2w
__builtin_HEXAGON_F2_conv_df2w_chop
__builtin_HEXAGON_F2_conv_sf2d
__builtin_HEXAGON_F2_conv_sf2d_chop
__builtin_HEXAGON_F2_conv_sf2df
__builtin_HEXAGON_F2_conv_sf2ud
__builtin_HEXAGON_F2_conv_sf2ud_chop
__builtin_HEXAGON_F2_conv_sf2uw
__builtin_HEXAGON_F2_conv_sf2uw_chop
__builtin_HEXAGON_F2_conv_sf2w
__builtin_HEXAGON_F2_conv_sf2w_chop
__builtin_HEXAGON_F2_conv_ud2df
__builtin_HEXAGON_F2_conv_ud2sf
__builtin_HEXAGON_F2_conv_uw2df
__builtin_HEXAGON_F2_conv_uw2sf
__builtin_HEXAGON_F2_conv_w2df
__builtin_HEXAGON_F2_conv_w2sf
__builtin_HEXAGON_F2_dfadd
__builtin_HEXAGON_F2_dfclass
__builtin_HEXAGON_F2_dfcmpeq
__builtin_HEXAGON_F2_dfcmpge
__builtin_HEXAGON_F2_dfcmpgt
__builtin_HEXAGON_F2_dfcmpuo
__builtin_HEXAGON_F2_dfimm_n
__builtin_HEXAGON_F2_dfimm_p
__builtin_HEXAGON_F2_dfmax
__builtin_HEXAGON_F2_dfmin
__builtin_HEXAGON_F2_dfmpyfix
__builtin_HEXAGON_F2_dfmpyhh
__builtin_HEXAGON_F2_dfmpylh
__builtin_HEXAGON_F2_dfmpyll
__builtin_HEXAGON_F2_dfsub
__builtin_HEXAGON_F2_sfadd
__builtin_HEXAGON_F2_sfclass
__builtin_HEXAGON_F2_sfcmpeq
__builtin_HEXAGON_F2_sfcmpge
__builtin_HEXAGON_F2_sfcmpgt
__builtin_HEXAGON_F2_sfcmpuo
__builtin_HEXAGON_F2_sffixupd
__builtin_HEXAGON_F2_sffixupn
__builtin_HEXAGON_F2_sffixupr
__builtin_HEXAGON_F2_sffma
__builtin_HEXAGON_F2_sffma_lib
__builtin_HEXAGON_F2_sffma_sc
__builtin_HEXAGON_F2_sffms
__builtin_HEXAGON_F2_sffms_lib
__builtin_HEXAGON_F2_sfimm_n
__builtin_HEXAGON_F2_sfimm_p
__builtin_HEXAGON_F2_sfmax
__builtin_HEXAGON_F2_sfmin
__builtin_HEXAGON_F2_sfmpy
__builtin_HEXAGON_F2_sfsub
__builtin_HEXAGON_L2_loadw_locked
__builtin_HEXAGON_L4_loadd_locked
__builtin_HEXAGON_M2_acci
__builtin_HEXAGON_M2_accii
__builtin_HEXAGON_M2_cmaci_s0
__builtin_HEXAGON_M2_cmacr_s0
__builtin_HEXAGON_M2_cmacs_s0
__builtin_HEXAGON_M2_cmacs_s1
__builtin_HEXAGON_M2_cmacsc_s0
__builtin_HEXAGON_M2_cmacsc_s1
__builtin_HEXAGON_M2_cmpyi_s0
__builtin_HEXAGON_M2_cmpyr_s0
__builtin_HEXAGON_M2_cmpyrs_s0
__builtin_HEXAGON_M2_cmpyrs_s1
__builtin_HEXAGON_M2_cmpyrsc_s0
__builtin_HEXAGON_M2_cmpyrsc_s1
__builtin_HEXAGON_M2_cmpys_s0
__builtin_HEXAGON_M2_cmpys_s1
__builtin_HEXAGON_M2_cmpysc_s0
__builtin_HEXAGON_M2_cmpysc_s1
__builtin_HEXAGON_M2_cnacs_s0
__builtin_HEXAGON_M2_cnacs_s1
__builtin_HEXAGON_M2_cnacsc_s0
__builtin_HEXAGON_M2_cnacsc_s1
__builtin_HEXAGON_M2_dpmpyss_acc_s0
__builtin_HEXAGON_M2_dpmpyss_nac_s0
__builtin_HEXAGON_M2_dpmpyss_rnd_s0
__builtin_HEXAGON_M2_dpmpyss_s0
__builtin_HEXAGON_M2_dpmpyuu_acc_s0
__builtin_HEXAGON_M2_dpmpyuu_nac_s0
__builtin_HEXAGON_M2_dpmpyuu_s0
__builtin_HEXAGON_M2_hmmpyh_rs1
__builtin_HEXAGON_M2_hmmpyh_s1
__builtin_HEXAGON_M2_hmmpyl_rs1
__builtin_HEXAGON_M2_hmmpyl_s1
__builtin_HEXAGON_M2_maci
__builtin_HEXAGON_M2_macsin
__builtin_HEXAGON_M2_macsip
__builtin_HEXAGON_M2_mmachs_rs0
__builtin_HEXAGON_M2_mmachs_rs1
__builtin_HEXAGON_M2_mmachs_s0
__builtin_HEXAGON_M2_mmachs_s1
__builtin_HEXAGON_M2_mmacls_rs0
__builtin_HEXAGON_M2_mmacls_rs1
__builtin_HEXAGON_M2_mmacls_s0
__builtin_HEXAGON_M2_mmacls_s1
__builtin_HEXAGON_M2_mmacuhs_rs0
__builtin_HEXAGON_M2_mmacuhs_rs1
__builtin_HEXAGON_M2_mmacuhs_s0
__builtin_HEXAGON_M2_mmacuhs_s1
__builtin_HEXAGON_M2_mmaculs_rs0
__builtin_HEXAGON_M2_mmaculs_rs1
__builtin_HEXAGON_M2_mmaculs_s0
__builtin_HEXAGON_M2_mmaculs_s1
__builtin_HEXAGON_M2_mmpyh_rs0
__builtin_HEXAGON_M2_mmpyh_rs1
__builtin_HEXAGON_M2_mmpyh_s0
__builtin_HEXAGON_M2_mmpyh_s1
__builtin_HEXAGON_M2_mmpyl_rs0
__builtin_HEXAGON_M2_mmpyl_rs1
__builtin_HEXAGON_M2_mmpyl_s0
__builtin_HEXAGON_M2_mmpyl_s1
__builtin_HEXAGON_M2_mmpyuh_rs0
__builtin_HEXAGON_M2_mmpyuh_rs1
__builtin_HEXAGON_M2_mmpyuh_s0
__builtin_HEXAGON_M2_mmpyuh_s1
__builtin_HEXAGON_M2_mmpyul_rs0
__builtin_HEXAGON_M2_mmpyul_rs1
__builtin_HEXAGON_M2_mmpyul_s0
__builtin_HEXAGON_M2_mmpyul_s1
__builtin_HEXAGON_M2_mnaci
__builtin_HEXAGON_M2_mpy_acc_hh_s0
__builtin_HEXAGON_M2_mpy_acc_hh_s1
__builtin_HEXAGON_M2_mpy_acc_hl_s0
__builtin_HEXAGON_M2_mpy_acc_hl_s1
__builtin_HEXAGON_M2_mpy_acc_lh_s0
__builtin_HEXAGON_M2_mpy_acc_lh_s1
__builtin_HEXAGON_M2_mpy_acc_ll_s0
__builtin_HEXAGON_M2_mpy_acc_ll_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s1
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s0
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s1
__builtin_HEXAGON_M2_mpy_hh_s0
__builtin_HEXAGON_M2_mpy_hh_s1
__builtin_HEXAGON_M2_mpy_hl_s0
__builtin_HEXAGON_M2_mpy_hl_s1
__builtin_HEXAGON_M2_mpy_lh_s0
__builtin_HEXAGON_M2_mpy_lh_s1
__builtin_HEXAGON_M2_mpy_ll_s0
__builtin_HEXAGON_M2_mpy_ll_s1
__builtin_HEXAGON_M2_mpy_nac_hh_s0
__builtin_HEXAGON_M2_mpy_nac_hh_s1
__builtin_HEXAGON_M2_mpy_nac_hl_s0
__builtin_HEXAGON_M2_mpy_nac_hl_s1
__builtin_HEXAGON_M2_mpy_nac_lh_s0
__builtin_HEXAGON_M2_mpy_nac_lh_s1
__builtin_HEXAGON_M2_mpy_nac_ll_s0
__builtin_HEXAGON_M2_mpy_nac_ll_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s1
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s0
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s1
__builtin_HEXAGON_M2_mpy_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_sat_hh_s0
__builtin_HEXAGON_M2_mpy_sat_hh_s1
__builtin_HEXAGON_M2_mpy_sat_hl_s0
__builtin_HEXAGON_M2_mpy_sat_hl_s1
__builtin_HEXAGON_M2_mpy_sat_lh_s0
__builtin_HEXAGON_M2_mpy_sat_lh_s1
__builtin_HEXAGON_M2_mpy_sat_ll_s0
__builtin_HEXAGON_M2_mpy_sat_ll_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_up
__builtin_HEXAGON_M2_mpy_up_s1
__builtin_HEXAGON_M2_mpy_up_s1_sat
__builtin_HEXAGON_M2_mpyd_acc_hh_s0
__builtin_HEXAGON_M2_mpyd_acc_hh_s1
__builtin_HEXAGON_M2_mpyd_acc_hl_s0
__builtin_HEXAGON_M2_mpyd_acc_hl_s1
__builtin_HEXAGON_M2_mpyd_acc_lh_s0
__builtin_HEXAGON_M2_mpyd_acc_lh_s1
__builtin_HEXAGON_M2_mpyd_acc_ll_s0
__builtin_HEXAGON_M2_mpyd_acc_ll_s1
__builtin_HEXAGON_M2_mpyd_hh_s0
__builtin_HEXAGON_M2_mpyd_hh_s1
__builtin_HEXAGON_M2_mpyd_hl_s0
__builtin_HEXAGON_M2_mpyd_hl_s1
__builtin_HEXAGON_M2_mpyd_lh_s0
__builtin_HEXAGON_M2_mpyd_lh_s1
__builtin_HEXAGON_M2_mpyd_ll_s0
__builtin_HEXAGON_M2_mpyd_ll_s1
__builtin_HEXAGON_M2_mpyd_nac_hh_s0
__builtin_HEXAGON_M2_mpyd_nac_hh_s1
__builtin_HEXAGON_M2_mpyd_nac_hl_s0
__builtin_HEXAGON_M2_mpyd_nac_hl_s1
__builtin_HEXAGON_M2_mpyd_nac_lh_s0
__builtin_HEXAGON_M2_mpyd_nac_lh_s1
__builtin_HEXAGON_M2_mpyd_nac_ll_s0
__builtin_HEXAGON_M2_mpyd_nac_ll_s1
__builtin_HEXAGON_M2_mpyd_rnd_hh_s0
__builtin_HEXAGON_M2_mpyd_rnd_hh_s1
__builtin_HEXAGON_M2_mpyd_rnd_hl_s0
__builtin_HEXAGON_M2_mpyd_rnd_hl_s1
__builtin_HEXAGON_M2_mpyd_rnd_lh_s0
__builtin_HEXAGON_M2_mpyd_rnd_lh_s1
__builtin_HEXAGON_M2_mpyd_rnd_ll_s0
__builtin_HEXAGON_M2_mpyd_rnd_ll_s1
__builtin_HEXAGON_M2_mpyi
__builtin_HEXAGON_M2_mpysmi
__builtin_HEXAGON_M2_mpysu_up
__builtin_HEXAGON_M2_mpyu_acc_hh_s0
__builtin_HEXAGON_M2_mpyu_acc_hh_s1
__builtin_HEXAGON_M2_mpyu_acc_hl_s0
__builtin_HEXAGON_M2_mpyu_acc_hl_s1
__builtin_HEXAGON_M2_mpyu_acc_lh_s0
__builtin_HEXAGON_M2_mpyu_acc_lh_s1
__builtin_HEXAGON_M2_mpyu_acc_ll_s0
__builtin_HEXAGON_M2_mpyu_acc_ll_s1
__builtin_HEXAGON_M2_mpyu_hh_s0
__builtin_HEXAGON_M2_mpyu_hh_s1
__builtin_HEXAGON_M2_mpyu_hl_s0
__builtin_HEXAGON_M2_mpyu_hl_s1
__builtin_HEXAGON_M2_mpyu_lh_s0
__builtin_HEXAGON_M2_mpyu_lh_s1
__builtin_HEXAGON_M2_mpyu_ll_s0
__builtin_HEXAGON_M2_mpyu_ll_s1
__builtin_HEXAGON_M2_mpyu_nac_hh_s0
__builtin_HEXAGON_M2_mpyu_nac_hh_s1
__builtin_HEXAGON_M2_mpyu_nac_hl_s0
__builtin_HEXAGON_M2_mpyu_nac_hl_s1
__builtin_HEXAGON_M2_mpyu_nac_lh_s0
__builtin_HEXAGON_M2_mpyu_nac_lh_s1
__builtin_HEXAGON_M2_mpyu_nac_ll_s0
__builtin_HEXAGON_M2_mpyu_nac_ll_s1
__builtin_HEXAGON_M2_mpyu_up
__builtin_HEXAGON_M2_mpyud_acc_hh_s0
__builtin_HEXAGON_M2_mpyud_acc_hh_s1
__builtin_HEXAGON_M2_mpyud_acc_hl_s0
__builtin_HEXAGON_M2_mpyud_acc_hl_s1
__builtin_HEXAGON_M2_mpyud_acc_lh_s0
__builtin_HEXAGON_M2_mpyud_acc_lh_s1
__builtin_HEXAGON_M2_mpyud_acc_ll_s0
__builtin_HEXAGON_M2_mpyud_acc_ll_s1
__builtin_HEXAGON_M2_mpyud_hh_s0
__builtin_HEXAGON_M2_mpyud_hh_s1
__builtin_HEXAGON_M2_mpyud_hl_s0
__builtin_HEXAGON_M2_mpyud_hl_s1
__builtin_HEXAGON_M2_mpyud_lh_s0
__builtin_HEXAGON_M2_mpyud_lh_s1
__builtin_HEXAGON_M2_mpyud_ll_s0
__builtin_HEXAGON_M2_mpyud_ll_s1
__builtin_HEXAGON_M2_mpyud_nac_hh_s0
__builtin_HEXAGON_M2_mpyud_nac_hh_s1
__builtin_HEXAGON_M2_mpyud_nac_hl_s0
__builtin_HEXAGON_M2_mpyud_nac_hl_s1
__builtin_HEXAGON_M2_mpyud_nac_lh_s0
__builtin_HEXAGON_M2_mpyud_nac_lh_s1
__builtin_HEXAGON_M2_mpyud_nac_ll_s0
__builtin_HEXAGON_M2_mpyud_nac_ll_s1
__builtin_HEXAGON_M2_mpyui
__builtin_HEXAGON_M2_nacci
__builtin_HEXAGON_M2_naccii
__builtin_HEXAGON_M2_subacc
__builtin_HEXAGON_M2_vabsdiffh
__builtin_HEXAGON_M2_vabsdiffw
__builtin_HEXAGON_M2_vcmac_s0_sat_i
__builtin_HEXAGON_M2_vcmac_s0_sat_r
__builtin_HEXAGON_M2_vcmpy_s0_sat_i
__builtin_HEXAGON_M2_vcmpy_s0_sat_r
__builtin_HEXAGON_M2_vcmpy_s1_sat_i
__builtin_HEXAGON_M2_vcmpy_s1_sat_r
__builtin_HEXAGON_M2_vdmacs_s0
__builtin_HEXAGON_M2_vdmacs_s1
__builtin_HEXAGON_M2_vdmpyrs_s0
__builtin_HEXAGON_M2_vdmpyrs_s1
__builtin_HEXAGON_M2_vdmpys_s0
__builtin_HEXAGON_M2_vdmpys_s1
__builtin_HEXAGON_M2_vmac2
__builtin_HEXAGON_M2_vmac2es
__builtin_HEXAGON_M2_vmac2es_s0
__builtin_HEXAGON_M2_vmac2es_s1
__builtin_HEXAGON_M2_vmac2s_s0
__builtin_HEXAGON_M2_vmac2s_s1
__builtin_HEXAGON_M2_vmac2su_s0
__builtin_HEXAGON_M2_vmac2su_s1
__builtin_HEXAGON_M2_vmpy2es_s0
__builtin_HEXAGON_M2_vmpy2es_s1
__builtin_HEXAGON_M2_vmpy2s_s0
__builtin_HEXAGON_M2_vmpy2s_s0pack
__builtin_HEXAGON_M2_vmpy2s_s1
__builtin_HEXAGON_M2_vmpy2s_s1pack
__builtin_HEXAGON_M2_vmpy2su_s0
__builtin_HEXAGON_M2_vmpy2su_s1
__builtin_HEXAGON_M2_vraddh
__builtin_HEXAGON_M2_vradduh
__builtin_HEXAGON_M2_vrcmaci_s0
__builtin_HEXAGON_M2_vrcmaci_s0c
__builtin_HEXAGON_M2_vrcmacr_s0
__builtin_HEXAGON_M2_vrcmacr_s0c
__builtin_HEXAGON_M2_vrcmpyi_s0
__builtin_HEXAGON_M2_vrcmpyi_s0c
__builtin_HEXAGON_M2_vrcmpyr_s0
__builtin_HEXAGON_M2_vrcmpyr_s0c
__builtin_HEXAGON_M2_vrcmpys_acc_s1
__builtin_HEXAGON_M2_vrcmpys_s1
__builtin_HEXAGON_M2_vrcmpys_s1rp
__builtin_HEXAGON_M2_vrmac_s0
__builtin_HEXAGON_M2_vrmpy_s0
__builtin_HEXAGON_M2_xor_xacc
__builtin_HEXAGON_M4_and_and
__builtin_HEXAGON_M4_and_andn
__builtin_HEXAGON_M4_and_or
__builtin_HEXAGON_M4_and_xor
__builtin_HEXAGON_M4_cmpyi_wh
__builtin_HEXAGON_M4_cmpyi_whc
__builtin_HEXAGON_M4_cmpyr_wh
__builtin_HEXAGON_M4_cmpyr_whc
__builtin_HEXAGON_M4_mac_up_s1_sat
__builtin_HEXAGON_M4_mpyri_addi
__builtin_HEXAGON_M4_mpyri_addr
__builtin_HEXAGON_M4_mpyri_addr_u2
__builtin_HEXAGON_M4_mpyrr_addi
__builtin_HEXAGON_M4_mpyrr_addr
__builtin_HEXAGON_M4_nac_up_s1_sat
__builtin_HEXAGON_M4_or_and
__builtin_HEXAGON_M4_or_andn
__builtin_HEXAGON_M4_or_or
__builtin_HEXAGON_M4_or_xor
__builtin_HEXAGON_M4_pmpyw
__builtin_HEXAGON_M4_pmpyw_acc
__builtin_HEXAGON_M4_vpmpyh
__builtin_HEXAGON_M4_vpmpyh_acc
__builtin_HEXAGON_M4_vrmpyeh_acc_s0
__builtin_HEXAGON_M4_vrmpyeh_acc_s1
__builtin_HEXAGON_M4_vrmpyeh_s0
__builtin_HEXAGON_M4_vrmpyeh_s1
__builtin_HEXAGON_M4_vrmpyoh_acc_s0
__builtin_HEXAGON_M4_vrmpyoh_acc_s1
__builtin_HEXAGON_M4_vrmpyoh_s0
__builtin_HEXAGON_M4_vrmpyoh_s1
__builtin_HEXAGON_M4_xor_and
__builtin_HEXAGON_M4_xor_andn
__builtin_HEXAGON_M4_xor_or
__builtin_HEXAGON_M4_xor_xacc
__builtin_HEXAGON_M5_vdmacbsu
__builtin_HEXAGON_M5_vdmpybsu
__builtin_HEXAGON_M5_vmacbsu
__builtin_HEXAGON_M5_vmacbuu
__builtin_HEXAGON_M5_vmpybsu
__builtin_HEXAGON_M5_vmpybuu
__builtin_HEXAGON_M5_vrmacbsu
__builtin_HEXAGON_M5_vrmacbuu
__builtin_HEXAGON_M5_vrmpybsu
__builtin_HEXAGON_M5_vrmpybuu
__builtin_HEXAGON_M6_vabsdiffb
__builtin_HEXAGON_M6_vabsdiffub
__builtin_HEXAGON_M7_dcmpyiw
__builtin_HEXAGON_M7_dcmpyiw_acc
__builtin_HEXAGON_M7_dcmpyiwc
__builtin_HEXAGON_M7_dcmpyiwc_acc
__builtin_HEXAGON_M7_dcmpyrw
__builtin_HEXAGON_M7_dcmpyrw_acc
__builtin_HEXAGON_M7_dcmpyrwc
__builtin_HEXAGON_M7_dcmpyrwc_acc
__builtin_HEXAGON_M7_vdmpy
__builtin_HEXAGON_M7_vdmpy_acc
__builtin_HEXAGON_M7_wcmpyiw
__builtin_HEXAGON_M7_wcmpyiw_rnd
__builtin_HEXAGON_M7_wcmpyiwc
__builtin_HEXAGON_M7_wcmpyiwc_rnd
__builtin_HEXAGON_M7_wcmpyrw
__builtin_HEXAGON_M7_wcmpyrw_rnd
__builtin_HEXAGON_M7_wcmpyrwc
__builtin_HEXAGON_M7_wcmpyrwc_rnd
__builtin_HEXAGON_S2_addasl_rrri
__builtin_HEXAGON_S2_asl_i_p
__builtin_HEXAGON_S2_asl_i_p_acc
__builtin_HEXAGON_S2_asl_i_p_and
__builtin_HEXAGON_S2_asl_i_p_nac
__builtin_HEXAGON_S2_asl_i_p_or
__builtin_HEXAGON_S2_asl_i_p_xacc
__builtin_HEXAGON_S2_asl_i_r
__builtin_HEXAGON_S2_asl_i_r_acc
__builtin_HEXAGON_S2_asl_i_r_and
__builtin_HEXAGON_S2_asl_i_r_nac
__builtin_HEXAGON_S2_asl_i_r_or
__builtin_HEXAGON_S2_asl_i_r_sat
__builtin_HEXAGON_S2_asl_i_r_xacc
__builtin_HEXAGON_S2_asl_i_vh
__builtin_HEXAGON_S2_asl_i_vw
__builtin_HEXAGON_S2_asl_r_p
__builtin_HEXAGON_S2_asl_r_p_acc
__builtin_HEXAGON_S2_asl_r_p_and
__builtin_HEXAGON_S2_asl_r_p_nac
__builtin_HEXAGON_S2_asl_r_p_or
__builtin_HEXAGON_S2_asl_r_p_xor
__builtin_HEXAGON_S2_asl_r_r
__builtin_HEXAGON_S2_asl_r_r_acc
__builtin_HEXAGON_S2_asl_r_r_and
__builtin_HEXAGON_S2_asl_r_r_nac
__builtin_HEXAGON_S2_asl_r_r_or
__builtin_HEXAGON_S2_asl_r_r_sat
__builtin_HEXAGON_S2_asl_r_vh
__builtin_HEXAGON_S2_asl_r_vw
__builtin_HEXAGON_S2_asr_i_p
__builtin_HEXAGON_S2_asr_i_p_acc
__builtin_HEXAGON_S2_asr_i_p_and
__builtin_HEXAGON_S2_asr_i_p_nac
__builtin_HEXAGON_S2_asr_i_p_or
__builtin_HEXAGON_S2_asr_i_p_rnd
__builtin_HEXAGON_S2_asr_i_p_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_i_r
__builtin_HEXAGON_S2_asr_i_r_acc
__builtin_HEXAGON_S2_asr_i_r_and
__builtin_HEXAGON_S2_asr_i_r_nac
__builtin_HEXAGON_S2_asr_i_r_or
__builtin_HEXAGON_S2_asr_i_r_rnd
__builtin_HEXAGON_S2_asr_i_r_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_i_svw_trun
__builtin_HEXAGON_S2_asr_i_vh
__builtin_HEXAGON_S2_asr_i_vw
__builtin_HEXAGON_S2_asr_r_p
__builtin_HEXAGON_S2_asr_r_p_acc
__builtin_HEXAGON_S2_asr_r_p_and
__builtin_HEXAGON_S2_asr_r_p_nac
__builtin_HEXAGON_S2_asr_r_p_or
__builtin_HEXAGON_S2_asr_r_p_xor
__builtin_HEXAGON_S2_asr_r_r
__builtin_HEXAGON_S2_asr_r_r_acc
__builtin_HEXAGON_S2_asr_r_r_and
__builtin_HEXAGON_S2_asr_r_r_nac
__builtin_HEXAGON_S2_asr_r_r_or
__builtin_HEXAGON_S2_asr_r_r_sat
__builtin_HEXAGON_S2_asr_r_svw_trun
__builtin_HEXAGON_S2_asr_r_vh
__builtin_HEXAGON_S2_asr_r_vw
__builtin_HEXAGON_S2_brev
__builtin_HEXAGON_S2_brevp
__builtin_HEXAGON_S2_cl0
__builtin_HEXAGON_S2_cl0p
__builtin_HEXAGON_S2_cl1
__builtin_HEXAGON_S2_cl1p
__builtin_HEXAGON_S2_clb
__builtin_HEXAGON_S2_clbnorm
__builtin_HEXAGON_S2_clbp
__builtin_HEXAGON_S2_clrbit_i
__builtin_HEXAGON_S2_clrbit_r
__builtin_HEXAGON_S2_ct0
__builtin_HEXAGON_S2_ct0p
__builtin_HEXAGON_S2_ct1
__builtin_HEXAGON_S2_ct1p
__builtin_HEXAGON_S2_deinterleave
__builtin_HEXAGON_S2_extractu
__builtin_HEXAGON_S2_extractu_rp
__builtin_HEXAGON_S2_extractup
__builtin_HEXAGON_S2_extractup_rp
__builtin_HEXAGON_S2_insert
__builtin_HEXAGON_S2_insert_rp
__builtin_HEXAGON_S2_insertp
__builtin_HEXAGON_S2_insertp_rp
__builtin_HEXAGON_S2_interleave
__builtin_HEXAGON_S2_lfsp
__builtin_HEXAGON_S2_lsl_r_p
__builtin_HEXAGON_S2_lsl_r_p_acc
__builtin_HEXAGON_S2_lsl_r_p_and
__builtin_HEXAGON_S2_lsl_r_p_nac
__builtin_HEXAGON_S2_lsl_r_p_or
__builtin_HEXAGON_S2_lsl_r_p_xor
__builtin_HEXAGON_S2_lsl_r_r
__builtin_HEXAGON_S2_lsl_r_r_acc
__builtin_HEXAGON_S2_lsl_r_r_and
__builtin_HEXAGON_S2_lsl_r_r_nac
__builtin_HEXAGON_S2_lsl_r_r_or
__builtin_HEXAGON_S2_lsl_r_vh
__builtin_HEXAGON_S2_lsl_r_vw
__builtin_HEXAGON_S2_lsr_i_p
__builtin_HEXAGON_S2_lsr_i_p_acc
__builtin_HEXAGON_S2_lsr_i_p_and
__builtin_HEXAGON_S2_lsr_i_p_nac
__builtin_HEXAGON_S2_lsr_i_p_or
__builtin_HEXAGON_S2_lsr_i_p_xacc
__builtin_HEXAGON_S2_lsr_i_r
__builtin_HEXAGON_S2_lsr_i_r_acc
__builtin_HEXAGON_S2_lsr_i_r_and
__builtin_HEXAGON_S2_lsr_i_r_nac
__builtin_HEXAGON_S2_lsr_i_r_or
__builtin_HEXAGON_S2_lsr_i_r_xacc
__builtin_HEXAGON_S2_lsr_i_vh
__builtin_HEXAGON_S2_lsr_i_vw
__builtin_HEXAGON_S2_lsr_r_p
__builtin_HEXAGON_S2_lsr_r_p_acc
__builtin_HEXAGON_S2_lsr_r_p_and
__builtin_HEXAGON_S2_lsr_r_p_nac
__builtin_HEXAGON_S2_lsr_r_p_or
__builtin_HEXAGON_S2_lsr_r_p_xor
__builtin_HEXAGON_S2_lsr_r_r
__builtin_HEXAGON_S2_lsr_r_r_acc
__builtin_HEXAGON_S2_lsr_r_r_and
__builtin_HEXAGON_S2_lsr_r_r_nac
__builtin_HEXAGON_S2_lsr_r_r_or
__builtin_HEXAGON_S2_lsr_r_vh
__builtin_HEXAGON_S2_lsr_r_vw
__builtin_HEXAGON_S2_mask
__builtin_HEXAGON_S2_packhl
__builtin_HEXAGON_S2_parityp
__builtin_HEXAGON_S2_setbit_i
__builtin_HEXAGON_S2_setbit_r
__builtin_HEXAGON_S2_shuffeb
__builtin_HEXAGON_S2_shuffeh
__builtin_HEXAGON_S2_shuffob
__builtin_HEXAGON_S2_shuffoh
__builtin_brev_stb
__builtin_brev_std
__builtin_brev_sthhi
__builtin_brev_sth
__builtin_brev_stw
__builtin_HEXAGON_S2_storew_locked
__builtin_HEXAGON_S2_svsathb
__builtin_HEXAGON_S2_svsathub
__builtin_HEXAGON_S2_tableidxb_goodsyntax
__builtin_HEXAGON_S2_tableidxd_goodsyntax
__builtin_HEXAGON_S2_tableidxh_goodsyntax
__builtin_HEXAGON_S2_tableidxw_goodsyntax
__builtin_HEXAGON_S2_togglebit_i
__builtin_HEXAGON_S2_togglebit_r
__builtin_HEXAGON_S2_tstbit_i
__builtin_HEXAGON_S2_tstbit_r
__builtin_HEXAGON_S2_valignib
__builtin_HEXAGON_S2_valignrb
__builtin_HEXAGON_S2_vcnegh
__builtin_HEXAGON_S2_vcrotate
__builtin_HEXAGON_S2_vrcnegh
__builtin_HEXAGON_S2_vrndpackwh
__builtin_HEXAGON_S2_vrndpackwhs
__builtin_HEXAGON_S2_vsathb
__builtin_HEXAGON_S2_vsathb_nopack
__builtin_HEXAGON_S2_vsathub
__builtin_HEXAGON_S2_vsathub_nopack
__builtin_HEXAGON_S2_vsatwh
__builtin_HEXAGON_S2_vsatwh_nopack
__builtin_HEXAGON_S2_vsatwuh
__builtin_HEXAGON_S2_vsatwuh_nopack
__builtin_HEXAGON_S2_vsplatrb
__builtin_HEXAGON_S2_vsplatrh
__builtin_HEXAGON_S2_vspliceib
__builtin_HEXAGON_S2_vsplicerb
__builtin_HEXAGON_S2_vsxtbh
__builtin_HEXAGON_S2_vsxthw
__builtin_HEXAGON_S2_vtrunehb
__builtin_HEXAGON_S2_vtrunewh
__builtin_HEXAGON_S2_vtrunohb
__builtin_HEXAGON_S2_vtrunowh
__builtin_HEXAGON_S2_vzxtbh
__builtin_HEXAGON_S2_vzxthw
__builtin_HEXAGON_S4_addaddi
__builtin_HEXAGON_S4_addi_asl_ri
__builtin_HEXAGON_S4_addi_lsr_ri
__builtin_HEXAGON_S4_andi_asl_ri
__builtin_HEXAGON_S4_andi_lsr_ri
__builtin_HEXAGON_S4_clbaddi
__builtin_HEXAGON_S4_clbpaddi
__builtin_HEXAGON_S4_clbpnorm
__builtin_HEXAGON_S4_extract
__builtin_HEXAGON_S4_extract_rp
__builtin_HEXAGON_S4_extractp
__builtin_HEXAGON_S4_extractp_rp
__builtin_HEXAGON_S4_lsli
__builtin_HEXAGON_S4_ntstbit_i
__builtin_HEXAGON_S4_ntstbit_r
__builtin_HEXAGON_S4_or_andi
__builtin_HEXAGON_S4_or_andix
__builtin_HEXAGON_S4_or_ori
__builtin_HEXAGON_S4_ori_asl_ri
__builtin_HEXAGON_S4_ori_lsr_ri
__builtin_HEXAGON_S4_parity
__builtin_HEXAGON_S4_stored_locked
__builtin_HEXAGON_S4_subaddi
__builtin_HEXAGON_S4_subi_asl_ri
__builtin_HEXAGON_S4_subi_lsr_ri
__builtin_HEXAGON_S4_vrcrotate
__builtin_HEXAGON_S4_vrcrotate_acc
__builtin_HEXAGON_S4_vxaddsubh
__builtin_HEXAGON_S4_vxaddsubhr
__builtin_HEXAGON_S4_vxaddsubw
__builtin_HEXAGON_S4_vxsubaddh
__builtin_HEXAGON_S4_vxsubaddhr
__builtin_HEXAGON_S4_vxsubaddw
__builtin_HEXAGON_S5_asrhub_rnd_sat_goodsyntax
__builtin_HEXAGON_S5_asrhub_sat
__builtin_HEXAGON_S5_popcountp
__builtin_HEXAGON_S5_vasrhrnd_goodsyntax
__builtin_HEXAGON_S6_rol_i_p
__builtin_HEXAGON_S6_rol_i_p_acc
__builtin_HEXAGON_S6_rol_i_p_and
__builtin_HEXAGON_S6_rol_i_p_nac
__builtin_HEXAGON_S6_rol_i_p_or
__builtin_HEXAGON_S6_rol_i_p_xacc
__builtin_HEXAGON_S6_rol_i_r
__builtin_HEXAGON_S6_rol_i_r_acc
__builtin_HEXAGON_S6_rol_i_r_and
__builtin_HEXAGON_S6_rol_i_r_nac
__builtin_HEXAGON_S6_rol_i_r_or
__builtin_HEXAGON_S6_rol_i_r_xacc
__builtin_HEXAGON_S6_vsplatrbp
__builtin_HEXAGON_S6_vtrunehb_ppp
__builtin_HEXAGON_S6_vtrunohb_ppp
__builtin_HEXAGON_V6_extractw
__builtin_HEXAGON_V6_extractw_128B
__builtin_HEXAGON_V6_hi
__builtin_HEXAGON_V6_hi_128B
__builtin_HEXAGON_V6_lo
__builtin_HEXAGON_V6_lo_128B
__builtin_HEXAGON_V6_lvsplatb
__builtin_HEXAGON_V6_lvsplatb_128B
__builtin_HEXAGON_V6_lvsplath
__builtin_HEXAGON_V6_lvsplath_128B
__builtin_HEXAGON_V6_lvsplatw
__builtin_HEXAGON_V6_lvsplatw_128B
__builtin_HEXAGON_V6_vabsb
__builtin_HEXAGON_V6_vabsb_128B
__builtin_HEXAGON_V6_vabsb_sat
__builtin_HEXAGON_V6_vabsb_sat_128B
__builtin_HEXAGON_V6_vabsdiffh
__builtin_HEXAGON_V6_vabsdiffh_128B
__builtin_HEXAGON_V6_vabsdiffub
__builtin_HEXAGON_V6_vabsdiffub_128B
__builtin_HEXAGON_V6_vabsdiffuh
__builtin_HEXAGON_V6_vabsdiffuh_128B
__builtin_HEXAGON_V6_vabsdiffw
__builtin_HEXAGON_V6_vabsdiffw_128B
__builtin_HEXAGON_V6_vabsh
__builtin_HEXAGON_V6_vabsh_128B
__builtin_HEXAGON_V6_vabsh_sat
__builtin_HEXAGON_V6_vabsh_sat_128B
__builtin_HEXAGON_V6_vabsw
__builtin_HEXAGON_V6_vabsw_128B
__builtin_HEXAGON_V6_vabsw_sat
__builtin_HEXAGON_V6_vabsw_sat_128B
__builtin_HEXAGON_V6_vaddb
__builtin_HEXAGON_V6_vaddb_128B
__builtin_HEXAGON_V6_vaddb_dv
__builtin_HEXAGON_V6_vaddb_dv_128B
__builtin_HEXAGON_V6_vaddbsat
__builtin_HEXAGON_V6_vaddbsat_128B
__builtin_HEXAGON_V6_vaddbsat_dv
__builtin_HEXAGON_V6_vaddbsat_dv_128B
__builtin_HEXAGON_V6_vaddclbh
__builtin_HEXAGON_V6_vaddclbh_128B
__builtin_HEXAGON_V6_vaddclbw
__builtin_HEXAGON_V6_vaddclbw_128B
__builtin_HEXAGON_V6_vaddh
__builtin_HEXAGON_V6_vaddh_128B
__builtin_HEXAGON_V6_vaddh_dv
__builtin_HEXAGON_V6_vaddh_dv_128B
__builtin_HEXAGON_V6_vaddhsat
__builtin_HEXAGON_V6_vaddhsat_128B
__builtin_HEXAGON_V6_vaddhsat_dv
__builtin_HEXAGON_V6_vaddhsat_dv_128B
__builtin_HEXAGON_V6_vaddhw
__builtin_HEXAGON_V6_vaddhw_128B
__builtin_HEXAGON_V6_vaddhw_acc
__builtin_HEXAGON_V6_vaddhw_acc_128B
__builtin_HEXAGON_V6_vaddubh
__builtin_HEXAGON_V6_vaddubh_128B
__builtin_HEXAGON_V6_vaddubh_acc
__builtin_HEXAGON_V6_vaddubh_acc_128B
__builtin_HEXAGON_V6_vaddubsat
__builtin_HEXAGON_V6_vaddubsat_128B
__builtin_HEXAGON_V6_vaddubsat_dv
__builtin_HEXAGON_V6_vaddubsat_dv_128B
__builtin_HEXAGON_V6_vaddububb_sat
__builtin_HEXAGON_V6_vaddububb_sat_128B
__builtin_HEXAGON_V6_vadduhsat
__builtin_HEXAGON_V6_vadduhsat_128B
__builtin_HEXAGON_V6_vadduhsat_dv
__builtin_HEXAGON_V6_vadduhsat_dv_128B
__builtin_HEXAGON_V6_vadduhw
__builtin_HEXAGON_V6_vadduhw_128B
__builtin_HEXAGON_V6_vadduhw_acc
__builtin_HEXAGON_V6_vadduhw_acc_128B
__builtin_HEXAGON_V6_vadduwsat
__builtin_HEXAGON_V6_vadduwsat_128B
__builtin_HEXAGON_V6_vadduwsat_dv
__builtin_HEXAGON_V6_vadduwsat_dv_128B
__builtin_HEXAGON_V6_vaddw
__builtin_HEXAGON_V6_vaddw_128B
__builtin_HEXAGON_V6_vaddw_dv
__builtin_HEXAGON_V6_vaddw_dv_128B
__builtin_HEXAGON_V6_vaddwsat
__builtin_HEXAGON_V6_vaddwsat_128B
__builtin_HEXAGON_V6_vaddwsat_dv
__builtin_HEXAGON_V6_vaddwsat_dv_128B
__builtin_HEXAGON_V6_valignb
__builtin_HEXAGON_V6_valignb_128B
__builtin_HEXAGON_V6_valignbi
__builtin_HEXAGON_V6_valignbi_128B
__builtin_HEXAGON_V6_vand
__builtin_HEXAGON_V6_vand_128B
__builtin_HEXAGON_V6_vaslh
__builtin_HEXAGON_V6_vaslh_128B
__builtin_HEXAGON_V6_vaslh_acc
__builtin_HEXAGON_V6_vaslh_acc_128B
__builtin_HEXAGON_V6_vaslhv
__builtin_HEXAGON_V6_vaslhv_128B
__builtin_HEXAGON_V6_vaslw
__builtin_HEXAGON_V6_vaslw_128B
__builtin_HEXAGON_V6_vaslw_acc
__builtin_HEXAGON_V6_vaslw_acc_128B
__builtin_HEXAGON_V6_vaslwv
__builtin_HEXAGON_V6_vaslwv_128B
__builtin_HEXAGON_V6_vasr_into
__builtin_HEXAGON_V6_vasr_into_128B
__builtin_HEXAGON_V6_vasrh
__builtin_HEXAGON_V6_vasrh_128B
__builtin_HEXAGON_V6_vasrh_acc
__builtin_HEXAGON_V6_vasrh_acc_128B
__builtin_HEXAGON_V6_vasrhbrndsat
__builtin_HEXAGON_V6_vasrhbrndsat_128B
__builtin_HEXAGON_V6_vasrhbsat
__builtin_HEXAGON_V6_vasrhbsat_128B
__builtin_HEXAGON_V6_vasrhubrndsat
__builtin_HEXAGON_V6_vasrhubrndsat_128B
__builtin_HEXAGON_V6_vasrhubsat
__builtin_HEXAGON_V6_vasrhubsat_128B
__builtin_HEXAGON_V6_vasrhv
__builtin_HEXAGON_V6_vasrhv_128B
__builtin_HEXAGON_V6_vasruhubrndsat
__builtin_HEXAGON_V6_vasruhubrndsat_128B
__builtin_HEXAGON_V6_vasruhubsat
__builtin_HEXAGON_V6_vasruhubsat_128B
__builtin_HEXAGON_V6_vasruwuhrndsat
__builtin_HEXAGON_V6_vasruwuhrndsat_128B
__builtin_HEXAGON_V6_vasruwuhsat
__builtin_HEXAGON_V6_vasruwuhsat_128B
__builtin_HEXAGON_V6_vasrw
__builtin_HEXAGON_V6_vasrw_128B
__builtin_HEXAGON_V6_vasrw_acc
__builtin_HEXAGON_V6_vasrw_acc_128B
__builtin_HEXAGON_V6_vasrwh
__builtin_HEXAGON_V6_vasrwh_128B
__builtin_HEXAGON_V6_vasrwhrndsat
__builtin_HEXAGON_V6_vasrwhrndsat_128B
__builtin_HEXAGON_V6_vasrwhsat
__builtin_HEXAGON_V6_vasrwhsat_128B
__builtin_HEXAGON_V6_vasrwuhrndsat
__builtin_HEXAGON_V6_vasrwuhrndsat_128B
__builtin_HEXAGON_V6_vasrwuhsat
__builtin_HEXAGON_V6_vasrwuhsat_128B
__builtin_HEXAGON_V6_vasrwv
__builtin_HEXAGON_V6_vasrwv_128B
__builtin_HEXAGON_V6_vassign
__builtin_HEXAGON_V6_vassign_128B
__builtin_HEXAGON_V6_vassignp
__builtin_HEXAGON_V6_vassignp_128B
__builtin_HEXAGON_V6_vavgb
__builtin_HEXAGON_V6_vavgb_128B
__builtin_HEXAGON_V6_vavgbrnd
__builtin_HEXAGON_V6_vavgbrnd_128B
__builtin_HEXAGON_V6_vavgh
__builtin_HEXAGON_V6_vavgh_128B
__builtin_HEXAGON_V6_vavghrnd
__builtin_HEXAGON_V6_vavghrnd_128B
__builtin_HEXAGON_V6_vavgub
__builtin_HEXAGON_V6_vavgub_128B
__builtin_HEXAGON_V6_vavgubrnd
__builtin_HEXAGON_V6_vavgubrnd_128B
__builtin_HEXAGON_V6_vavguh
__builtin_HEXAGON_V6_vavguh_128B
__builtin_HEXAGON_V6_vavguhrnd
__builtin_HEXAGON_V6_vavguhrnd_128B
__builtin_HEXAGON_V6_vavguw
__builtin_HEXAGON_V6_vavguw_128B
__builtin_HEXAGON_V6_vavguwrnd
__builtin_HEXAGON_V6_vavguwrnd_128B
__builtin_HEXAGON_V6_vavgw
__builtin_HEXAGON_V6_vavgw_128B
__builtin_HEXAGON_V6_vavgwrnd
__builtin_HEXAGON_V6_vavgwrnd_128B
__builtin_HEXAGON_V6_vcl0h
__builtin_HEXAGON_V6_vcl0h_128B
__builtin_HEXAGON_V6_vcl0w
__builtin_HEXAGON_V6_vcl0w_128B
__builtin_HEXAGON_V6_vcombine
__builtin_HEXAGON_V6_vcombine_128B
__builtin_HEXAGON_V6_vd0
__builtin_HEXAGON_V6_vd0_128B
__builtin_HEXAGON_V6_vdd0
__builtin_HEXAGON_V6_vdd0_128B
__builtin_HEXAGON_V6_vdealb
__builtin_HEXAGON_V6_vdealb_128B
__builtin_HEXAGON_V6_vdealb4w
__builtin_HEXAGON_V6_vdealb4w_128B
__builtin_HEXAGON_V6_vdealh
__builtin_HEXAGON_V6_vdealh_128B
__builtin_HEXAGON_V6_vdealvdd
__builtin_HEXAGON_V6_vdealvdd_128B
__builtin_HEXAGON_V6_vdelta
__builtin_HEXAGON_V6_vdelta_128B
__builtin_HEXAGON_V6_vdmpybus
__builtin_HEXAGON_V6_vdmpybus_128B
__builtin_HEXAGON_V6_vdmpybus_acc
__builtin_HEXAGON_V6_vdmpybus_acc_128B
__builtin_HEXAGON_V6_vdmpybus_dv
__builtin_HEXAGON_V6_vdmpybus_dv_128B
__builtin_HEXAGON_V6_vdmpybus_dv_acc
__builtin_HEXAGON_V6_vdmpybus_dv_acc_128B
__builtin_HEXAGON_V6_vdmpyhb
__builtin_HEXAGON_V6_vdmpyhb_128B
__builtin_HEXAGON_V6_vdmpyhb_acc
__builtin_HEXAGON_V6_vdmpyhb_acc_128B
__builtin_HEXAGON_V6_vdmpyhb_dv
__builtin_HEXAGON_V6_vdmpyhb_dv_128B
__builtin_HEXAGON_V6_vdmpyhb_dv_acc
__builtin_HEXAGON_V6_vdmpyhb_dv_acc_128B
__builtin_HEXAGON_V6_vdmpyhisat
__builtin_HEXAGON_V6_vdmpyhisat_128B
__builtin_HEXAGON_V6_vdmpyhisat_acc
__builtin_HEXAGON_V6_vdmpyhisat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsat
__builtin_HEXAGON_V6_vdmpyhsat_128B
__builtin_HEXAGON_V6_vdmpyhsat_acc
__builtin_HEXAGON_V6_vdmpyhsat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsuisat
__builtin_HEXAGON_V6_vdmpyhsuisat_128B
__builtin_HEXAGON_V6_vdmpyhsuisat_acc
__builtin_HEXAGON_V6_vdmpyhsuisat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsusat
__builtin_HEXAGON_V6_vdmpyhsusat_128B
__builtin_HEXAGON_V6_vdmpyhsusat_acc
__builtin_HEXAGON_V6_vdmpyhsusat_acc_128B
__builtin_HEXAGON_V6_vdmpyhvsat
__builtin_HEXAGON_V6_vdmpyhvsat_128B
__builtin_HEXAGON_V6_vdmpyhvsat_acc
__builtin_HEXAGON_V6_vdmpyhvsat_acc_128B
__builtin_HEXAGON_V6_vdsaduh
__builtin_HEXAGON_V6_vdsaduh_128B
__builtin_HEXAGON_V6_vdsaduh_acc
__builtin_HEXAGON_V6_vdsaduh_acc_128B
__builtin_HEXAGON_V6_vgathermh
__builtin_HEXAGON_V6_vgathermh_128B
__builtin_HEXAGON_V6_vgathermhw
__builtin_HEXAGON_V6_vgathermhw_128B
__builtin_HEXAGON_V6_vgathermw
__builtin_HEXAGON_V6_vgathermw_128B
__builtin_HEXAGON_V6_vinsertwr
__builtin_HEXAGON_V6_vinsertwr_128B
__builtin_HEXAGON_V6_vlalignb
__builtin_HEXAGON_V6_vlalignb_128B
__builtin_HEXAGON_V6_vlalignbi
__builtin_HEXAGON_V6_vlalignbi_128B
__builtin_HEXAGON_V6_vlsrb
__builtin_HEXAGON_V6_vlsrb_128B
__builtin_HEXAGON_V6_vlsrh
__builtin_HEXAGON_V6_vlsrh_128B
__builtin_HEXAGON_V6_vlsrhv
__builtin_HEXAGON_V6_vlsrhv_128B
__builtin_HEXAGON_V6_vlsrw
__builtin_HEXAGON_V6_vlsrw_128B
__builtin_HEXAGON_V6_vlsrwv
__builtin_HEXAGON_V6_vlsrwv_128B
__builtin_HEXAGON_V6_vlut4
__builtin_HEXAGON_V6_vlut4_128B
__builtin_HEXAGON_V6_vlutvvb
__builtin_HEXAGON_V6_vlutvvb_128B
__builtin_HEXAGON_V6_vlutvvb_nm
__builtin_HEXAGON_V6_vlutvvb_nm_128B
__builtin_HEXAGON_V6_vlutvvb_oracc
__builtin_HEXAGON_V6_vlutvvb_oracc_128B
__builtin_HEXAGON_V6_vlutvvb_oracci
__builtin_HEXAGON_V6_vlutvvb_oracci_128B
__builtin_HEXAGON_V6_vlutvvbi
__builtin_HEXAGON_V6_vlutvvbi_128B
__builtin_HEXAGON_V6_vlutvwh
__builtin_HEXAGON_V6_vlutvwh_128B
__builtin_HEXAGON_V6_vlutvwh_nm
__builtin_HEXAGON_V6_vlutvwh_nm_128B
__builtin_HEXAGON_V6_vlutvwh_oracc
__builtin_HEXAGON_V6_vlutvwh_oracc_128B
__builtin_HEXAGON_V6_vlutvwh_oracci
__builtin_HEXAGON_V6_vlutvwh_oracci_128B
__builtin_HEXAGON_V6_vlutvwhi
__builtin_HEXAGON_V6_vlutvwhi_128B
__builtin_HEXAGON_V6_vmaxb
__builtin_HEXAGON_V6_vmaxb_128B
__builtin_HEXAGON_V6_vmaxh
__builtin_HEXAGON_V6_vmaxh_128B
__builtin_HEXAGON_V6_vmaxub
__builtin_HEXAGON_V6_vmaxub_128B
__builtin_HEXAGON_V6_vmaxuh
__builtin_HEXAGON_V6_vmaxuh_128B
__builtin_HEXAGON_V6_vmaxw
__builtin_HEXAGON_V6_vmaxw_128B
__builtin_HEXAGON_V6_vminb
__builtin_HEXAGON_V6_vminb_128B
__builtin_HEXAGON_V6_vminh
__builtin_HEXAGON_V6_vminh_128B
__builtin_HEXAGON_V6_vminub
__builtin_HEXAGON_V6_vminub_128B
__builtin_HEXAGON_V6_vminuh
__builtin_HEXAGON_V6_vminuh_128B
__builtin_HEXAGON_V6_vminw
__builtin_HEXAGON_V6_vminw_128B
__builtin_HEXAGON_V6_vmpabus
__builtin_HEXAGON_V6_vmpabus_128B
__builtin_HEXAGON_V6_vmpabus_acc
__builtin_HEXAGON_V6_vmpabus_acc_128B
__builtin_HEXAGON_V6_vmpabusv
__builtin_HEXAGON_V6_vmpabusv_128B
__builtin_HEXAGON_V6_vmpabuu
__builtin_HEXAGON_V6_vmpabuu_128B
__builtin_HEXAGON_V6_vmpabuu_acc
__builtin_HEXAGON_V6_vmpabuu_acc_128B
__builtin_HEXAGON_V6_vmpabuuv
__builtin_HEXAGON_V6_vmpabuuv_128B
__builtin_HEXAGON_V6_vmpahb
__builtin_HEXAGON_V6_vmpahb_128B
__builtin_HEXAGON_V6_vmpahb_acc
__builtin_HEXAGON_V6_vmpahb_acc_128B
__builtin_HEXAGON_V6_vmpahhsat
__builtin_HEXAGON_V6_vmpahhsat_128B
__builtin_HEXAGON_V6_vmpauhb
__builtin_HEXAGON_V6_vmpauhb_128B
__builtin_HEXAGON_V6_vmpauhb_acc
__builtin_HEXAGON_V6_vmpauhb_acc_128B
__builtin_HEXAGON_V6_vmpauhuhsat
__builtin_HEXAGON_V6_vmpauhuhsat_128B
__builtin_HEXAGON_V6_vmpsuhuhsat
__builtin_HEXAGON_V6_vmpsuhuhsat_128B
__builtin_HEXAGON_V6_vmpybus
__builtin_HEXAGON_V6_vmpybus_128B
__builtin_HEXAGON_V6_vmpybus_acc
__builtin_HEXAGON_V6_vmpybus_acc_128B
__builtin_HEXAGON_V6_vmpybusv
__builtin_HEXAGON_V6_vmpybusv_128B
__builtin_HEXAGON_V6_vmpybusv_acc
__builtin_HEXAGON_V6_vmpybusv_acc_128B
__builtin_HEXAGON_V6_vmpybv
__builtin_HEXAGON_V6_vmpybv_128B
__builtin_HEXAGON_V6_vmpybv_acc
__builtin_HEXAGON_V6_vmpybv_acc_128B
__builtin_HEXAGON_V6_vmpyewuh
__builtin_HEXAGON_V6_vmpyewuh_128B
__builtin_HEXAGON_V6_vmpyewuh_64
__builtin_HEXAGON_V6_vmpyewuh_64_128B
__builtin_HEXAGON_V6_vmpyh
__builtin_HEXAGON_V6_vmpyh_128B
__builtin_HEXAGON_V6_vmpyh_acc
__builtin_HEXAGON_V6_vmpyh_acc_128B
__builtin_HEXAGON_V6_vmpyhsat_acc
__builtin_HEXAGON_V6_vmpyhsat_acc_128B
__builtin_HEXAGON_V6_vmpyhsrs
__builtin_HEXAGON_V6_vmpyhsrs_128B
__builtin_HEXAGON_V6_vmpyhss
__builtin_HEXAGON_V6_vmpyhss_128B
__builtin_HEXAGON_V6_vmpyhus
__builtin_HEXAGON_V6_vmpyhus_128B
__builtin_HEXAGON_V6_vmpyhus_acc
__builtin_HEXAGON_V6_vmpyhus_acc_128B
__builtin_HEXAGON_V6_vmpyhv
__builtin_HEXAGON_V6_vmpyhv_128B
__builtin_HEXAGON_V6_vmpyhv_acc
__builtin_HEXAGON_V6_vmpyhv_acc_128B
__builtin_HEXAGON_V6_vmpyhvsrs
__builtin_HEXAGON_V6_vmpyhvsrs_128B
__builtin_HEXAGON_V6_vmpyieoh
__builtin_HEXAGON_V6_vmpyieoh_128B
__builtin_HEXAGON_V6_vmpyiewh_acc
__builtin_HEXAGON_V6_vmpyiewh_acc_128B
__builtin_HEXAGON_V6_vmpyiewuh
__builtin_HEXAGON_V6_vmpyiewuh_128B
__builtin_HEXAGON_V6_vmpyiewuh_acc
__builtin_HEXAGON_V6_vmpyiewuh_acc_128B
__builtin_HEXAGON_V6_vmpyih
__builtin_HEXAGON_V6_vmpyih_128B
__builtin_HEXAGON_V6_vmpyih_acc
__builtin_HEXAGON_V6_vmpyih_acc_128B
__builtin_HEXAGON_V6_vmpyihb
__builtin_HEXAGON_V6_vmpyihb_128B
__builtin_HEXAGON_V6_vmpyihb_acc
__builtin_HEXAGON_V6_vmpyihb_acc_128B
__builtin_HEXAGON_V6_vmpyiowh
__builtin_HEXAGON_V6_vmpyiowh_128B
__builtin_HEXAGON_V6_vmpyiwb
__builtin_HEXAGON_V6_vmpyiwb_128B
__builtin_HEXAGON_V6_vmpyiwb_acc
__builtin_HEXAGON_V6_vmpyiwb_acc_128B
__builtin_HEXAGON_V6_vmpyiwh
__builtin_HEXAGON_V6_vmpyiwh_128B
__builtin_HEXAGON_V6_vmpyiwh_acc
__builtin_HEXAGON_V6_vmpyiwh_acc_128B
__builtin_HEXAGON_V6_vmpyiwub
__builtin_HEXAGON_V6_vmpyiwub_128B
__builtin_HEXAGON_V6_vmpyiwub_acc
__builtin_HEXAGON_V6_vmpyiwub_acc_128B
__builtin_HEXAGON_V6_vmpyowh
__builtin_HEXAGON_V6_vmpyowh_128B
__builtin_HEXAGON_V6_vmpyowh_64_acc
__builtin_HEXAGON_V6_vmpyowh_64_acc_128B
__builtin_HEXAGON_V6_vmpyowh_rnd
__builtin_HEXAGON_V6_vmpyowh_rnd_128B
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc_128B
__builtin_HEXAGON_V6_vmpyowh_sacc
__builtin_HEXAGON_V6_vmpyowh_sacc_128B
__builtin_HEXAGON_V6_vmpyub
__builtin_HEXAGON_V6_vmpyub_128B
__builtin_HEXAGON_V6_vmpyub_acc
__builtin_HEXAGON_V6_vmpyub_acc_128B
__builtin_HEXAGON_V6_vmpyubv
__builtin_HEXAGON_V6_vmpyubv_128B
__builtin_HEXAGON_V6_vmpyubv_acc
__builtin_HEXAGON_V6_vmpyubv_acc_128B
__builtin_HEXAGON_V6_vmpyuh
__builtin_HEXAGON_V6_vmpyuh_128B
__builtin_HEXAGON_V6_vmpyuh_acc
__builtin_HEXAGON_V6_vmpyuh_acc_128B
__builtin_HEXAGON_V6_vmpyuhe
__builtin_HEXAGON_V6_vmpyuhe_128B
__builtin_HEXAGON_V6_vmpyuhe_acc
__builtin_HEXAGON_V6_vmpyuhe_acc_128B
__builtin_HEXAGON_V6_vmpyuhv
__builtin_HEXAGON_V6_vmpyuhv_128B
__builtin_HEXAGON_V6_vmpyuhv_acc
__builtin_HEXAGON_V6_vmpyuhv_acc_128B
__builtin_HEXAGON_V6_vnavgb
__builtin_HEXAGON_V6_vnavgb_128B
__builtin_HEXAGON_V6_vnavgh
__builtin_HEXAGON_V6_vnavgh_128B
__builtin_HEXAGON_V6_vnavgub
__builtin_HEXAGON_V6_vnavgub_128B
__builtin_HEXAGON_V6_vnavgw
__builtin_HEXAGON_V6_vnavgw_128B
__builtin_HEXAGON_V6_vnormamth
__builtin_HEXAGON_V6_vnormamth_128B
__builtin_HEXAGON_V6_vnormamtw
__builtin_HEXAGON_V6_vnormamtw_128B
__builtin_HEXAGON_V6_vnot
__builtin_HEXAGON_V6_vnot_128B
__builtin_HEXAGON_V6_vor
__builtin_HEXAGON_V6_vor_128B
__builtin_HEXAGON_V6_vpackeb
__builtin_HEXAGON_V6_vpackeb_128B
__builtin_HEXAGON_V6_vpackeh
__builtin_HEXAGON_V6_vpackeh_128B
__builtin_HEXAGON_V6_vpackhb_sat
__builtin_HEXAGON_V6_vpackhb_sat_128B
__builtin_HEXAGON_V6_vpackhub_sat
__builtin_HEXAGON_V6_vpackhub_sat_128B
__builtin_HEXAGON_V6_vpackob
__builtin_HEXAGON_V6_vpackob_128B
__builtin_HEXAGON_V6_vpackoh
__builtin_HEXAGON_V6_vpackoh_128B
__builtin_HEXAGON_V6_vpackwh_sat
__builtin_HEXAGON_V6_vpackwh_sat_128B
__builtin_HEXAGON_V6_vpackwuh_sat
__builtin_HEXAGON_V6_vpackwuh_sat_128B
__builtin_HEXAGON_V6_vpopcounth
__builtin_HEXAGON_V6_vpopcounth_128B
__builtin_HEXAGON_V6_vrdelta
__builtin_HEXAGON_V6_vrdelta_128B
__builtin_HEXAGON_V6_vrmpybub_rtt
__builtin_HEXAGON_V6_vrmpybub_rtt_128B
__builtin_HEXAGON_V6_vrmpybub_rtt_acc
__builtin_HEXAGON_V6_vrmpybub_rtt_acc_128B
__builtin_HEXAGON_V6_vrmpybus
__builtin_HEXAGON_V6_vrmpybus_128B
__builtin_HEXAGON_V6_vrmpybus_acc
__builtin_HEXAGON_V6_vrmpybus_acc_128B
__builtin_HEXAGON_V6_vrmpybusi
__builtin_HEXAGON_V6_vrmpybusi_128B
__builtin_HEXAGON_V6_vrmpybusi_acc
__builtin_HEXAGON_V6_vrmpybusi_acc_128B
__builtin_HEXAGON_V6_vrmpybusv
__builtin_HEXAGON_V6_vrmpybusv_128B
__builtin_HEXAGON_V6_vrmpybusv_acc
__builtin_HEXAGON_V6_vrmpybusv_acc_128B
__builtin_HEXAGON_V6_vrmpybv
__builtin_HEXAGON_V6_vrmpybv_128B
__builtin_HEXAGON_V6_vrmpybv_acc
__builtin_HEXAGON_V6_vrmpybv_acc_128B
__builtin_HEXAGON_V6_vrmpyub
__builtin_HEXAGON_V6_vrmpyub_128B
__builtin_HEXAGON_V6_vrmpyub_acc
__builtin_HEXAGON_V6_vrmpyub_acc_128B
__builtin_HEXAGON_V6_vrmpyub_rtt
__builtin_HEXAGON_V6_vrmpyub_rtt_128B
__builtin_HEXAGON_V6_vrmpyub_rtt_acc
__builtin_HEXAGON_V6_vrmpyub_rtt_acc_128B
__builtin_HEXAGON_V6_vrmpyubi
__builtin_HEXAGON_V6_vrmpyubi_128B
__builtin_HEXAGON_V6_vrmpyubi_acc
__builtin_HEXAGON_V6_vrmpyubi_acc_128B
__builtin_HEXAGON_V6_vrmpyubv
__builtin_HEXAGON_V6_vrmpyubv_128B
__builtin_HEXAGON_V6_vrmpyubv_acc
__builtin_HEXAGON_V6_vrmpyubv_acc_128B
__builtin_HEXAGON_V6_vror
__builtin_HEXAGON_V6_vror_128B
__builtin_HEXAGON_V6_vrotr
__builtin_HEXAGON_V6_vrotr_128B
__builtin_HEXAGON_V6_vroundhb
__builtin_HEXAGON_V6_vroundhb_128B
__builtin_HEXAGON_V6_vroundhub
__builtin_HEXAGON_V6_vroundhub_128B
__builtin_HEXAGON_V6_vrounduhub
__builtin_HEXAGON_V6_vrounduhub_128B
__builtin_HEXAGON_V6_vrounduwuh
__builtin_HEXAGON_V6_vrounduwuh_128B
__builtin_HEXAGON_V6_vroundwh
__builtin_HEXAGON_V6_vroundwh_128B
__builtin_HEXAGON_V6_vroundwuh
__builtin_HEXAGON_V6_vroundwuh_128B
__builtin_HEXAGON_V6_vrsadubi
__builtin_HEXAGON_V6_vrsadubi_128B
__builtin_HEXAGON_V6_vrsadubi_acc
__builtin_HEXAGON_V6_vrsadubi_acc_128B
__builtin_HEXAGON_V6_vsatdw
__builtin_HEXAGON_V6_vsatdw_128B
__builtin_HEXAGON_V6_vsathub
__builtin_HEXAGON_V6_vsathub_128B
__builtin_HEXAGON_V6_vsatuwuh
__builtin_HEXAGON_V6_vsatuwuh_128B
__builtin_HEXAGON_V6_vsatwh
__builtin_HEXAGON_V6_vsatwh_128B
__builtin_HEXAGON_V6_vsb
__builtin_HEXAGON_V6_vsb_128B
__builtin_HEXAGON_V6_vscattermh
__builtin_HEXAGON_V6_vscattermh_128B
__builtin_HEXAGON_V6_vscattermh_add
__builtin_HEXAGON_V6_vscattermh_add_128B
__builtin_HEXAGON_V6_vscattermhw
__builtin_HEXAGON_V6_vscattermhw_128B
__builtin_HEXAGON_V6_vscattermhw_add
__builtin_HEXAGON_V6_vscattermhw_add_128B
__builtin_HEXAGON_V6_vscattermw
__builtin_HEXAGON_V6_vscattermw_128B
__builtin_HEXAGON_V6_vscattermw_add
__builtin_HEXAGON_V6_vscattermw_add_128B
__builtin_HEXAGON_V6_vsh
__builtin_HEXAGON_V6_vsh_128B
__builtin_HEXAGON_V6_vshufeh
__builtin_HEXAGON_V6_vshufeh_128B
__builtin_HEXAGON_V6_vshuffb
__builtin_HEXAGON_V6_vshuffb_128B
__builtin_HEXAGON_V6_vshuffeb
__builtin_HEXAGON_V6_vshuffeb_128B
__builtin_HEXAGON_V6_vshuffh
__builtin_HEXAGON_V6_vshuffh_128B
__builtin_HEXAGON_V6_vshuffob
__builtin_HEXAGON_V6_vshuffob_128B
__builtin_HEXAGON_V6_vshuffvdd
__builtin_HEXAGON_V6_vshuffvdd_128B
__builtin_HEXAGON_V6_vshufoeb
__builtin_HEXAGON_V6_vshufoeb_128B
__builtin_HEXAGON_V6_vshufoeh
__builtin_HEXAGON_V6_vshufoeh_128B
__builtin_HEXAGON_V6_vshufoh
__builtin_HEXAGON_V6_vshufoh_128B
__builtin_HEXAGON_V6_vsubb
__builtin_HEXAGON_V6_vsubb_128B
__builtin_HEXAGON_V6_vsubb_dv
__builtin_HEXAGON_V6_vsubb_dv_128B
__builtin_HEXAGON_V6_vsubbsat
__builtin_HEXAGON_V6_vsubbsat_128B
__builtin_HEXAGON_V6_vsubbsat_dv
__builtin_HEXAGON_V6_vsubbsat_dv_128B
__builtin_HEXAGON_V6_vsubh
__builtin_HEXAGON_V6_vsubh_128B
__builtin_HEXAGON_V6_vsubh_dv
__builtin_HEXAGON_V6_vsubh_dv_128B
__builtin_HEXAGON_V6_vsubhsat
__builtin_HEXAGON_V6_vsubhsat_128B
__builtin_HEXAGON_V6_vsubhsat_dv
__builtin_HEXAGON_V6_vsubhsat_dv_128B
__builtin_HEXAGON_V6_vsubhw
__builtin_HEXAGON_V6_vsubhw_128B
__builtin_HEXAGON_V6_vsububh
__builtin_HEXAGON_V6_vsububh_128B
__builtin_HEXAGON_V6_vsububsat
__builtin_HEXAGON_V6_vsububsat_128B
__builtin_HEXAGON_V6_vsububsat_dv
__builtin_HEXAGON_V6_vsububsat_dv_128B
__builtin_HEXAGON_V6_vsubububb_sat
__builtin_HEXAGON_V6_vsubububb_sat_128B
__builtin_HEXAGON_V6_vsubuhsat
__builtin_HEXAGON_V6_vsubuhsat_128B
__builtin_HEXAGON_V6_vsubuhsat_dv
__builtin_HEXAGON_V6_vsubuhsat_dv_128B
__builtin_HEXAGON_V6_vsubuhw
__builtin_HEXAGON_V6_vsubuhw_128B
__builtin_HEXAGON_V6_vsubuwsat
__builtin_HEXAGON_V6_vsubuwsat_128B
__builtin_HEXAGON_V6_vsubuwsat_dv
__builtin_HEXAGON_V6_vsubuwsat_dv_128B
__builtin_HEXAGON_V6_vsubw
__builtin_HEXAGON_V6_vsubw_128B
__builtin_HEXAGON_V6_vsubw_dv
__builtin_HEXAGON_V6_vsubw_dv_128B
__builtin_HEXAGON_V6_vsubwsat
__builtin_HEXAGON_V6_vsubwsat_128B
__builtin_HEXAGON_V6_vsubwsat_dv
__builtin_HEXAGON_V6_vsubwsat_dv_128B
__builtin_HEXAGON_V6_vtmpyb
__builtin_HEXAGON_V6_vtmpyb_128B
__builtin_HEXAGON_V6_vtmpyb_acc
__builtin_HEXAGON_V6_vtmpyb_acc_128B
__builtin_HEXAGON_V6_vtmpybus
__builtin_HEXAGON_V6_vtmpybus_128B
__builtin_HEXAGON_V6_vtmpybus_acc
__builtin_HEXAGON_V6_vtmpybus_acc_128B
__builtin_HEXAGON_V6_vtmpyhb
__builtin_HEXAGON_V6_vtmpyhb_128B
__builtin_HEXAGON_V6_vtmpyhb_acc
__builtin_HEXAGON_V6_vtmpyhb_acc_128B
__builtin_HEXAGON_V6_vunpackb
__builtin_HEXAGON_V6_vunpackb_128B
__builtin_HEXAGON_V6_vunpackh
__builtin_HEXAGON_V6_vunpackh_128B
__builtin_HEXAGON_V6_vunpackob
__builtin_HEXAGON_V6_vunpackob_128B
__builtin_HEXAGON_V6_vunpackoh
__builtin_HEXAGON_V6_vunpackoh_128B
__builtin_HEXAGON_V6_vunpackub
__builtin_HEXAGON_V6_vunpackub_128B
__builtin_HEXAGON_V6_vunpackuh
__builtin_HEXAGON_V6_vunpackuh_128B
__builtin_HEXAGON_V6_vxor
__builtin_HEXAGON_V6_vxor_128B
__builtin_HEXAGON_V6_vzb
__builtin_HEXAGON_V6_vzb_128B
__builtin_HEXAGON_V6_vzh
__builtin_HEXAGON_V6_vzh_128B
__builtin_HEXAGON_Y2_dccleana
__builtin_HEXAGON_Y2_dccleaninva
__builtin_HEXAGON_Y2_dcfetch
__builtin_HEXAGON_Y2_dcinva
__builtin_HEXAGON_Y2_dczeroa
__builtin_HEXAGON_Y4_l2fetch
__builtin_HEXAGON_Y5_l2fetch
__builtin_circ_ldb
__builtin_circ_ldd
__builtin_circ_ldh
__builtin_circ_ldub
__builtin_circ_lduh
__builtin_circ_ldw
__builtin_circ_stb
__builtin_circ_std
__builtin_circ_sth
__builtin_circ_sthhi
__builtin_circ_stw
__builtin_HEXAGON_prefetch
__builtin_hexagon_vmemcpy
__builtin_hexagon_vmemset
__builtin_mips_absq_s_ph
__builtin_mips_absq_s_qb
__builtin_mips_absq_s_w
__builtin_msa_add_a_b
__builtin_msa_add_a_d
__builtin_msa_add_a_h
__builtin_msa_add_a_w
__builtin_mips_addq_ph
__builtin_mips_addq_s_ph
__builtin_mips_addq_s_w
__builtin_mips_addqh_ph
__builtin_mips_addqh_r_ph
__builtin_mips_addqh_r_w
__builtin_mips_addqh_w
__builtin_msa_adds_a_b
__builtin_msa_adds_a_d
__builtin_msa_adds_a_h
__builtin_msa_adds_a_w
__builtin_msa_adds_s_b
__builtin_msa_adds_s_d
__builtin_msa_adds_s_h
__builtin_msa_adds_s_w
__builtin_msa_adds_u_b
__builtin_msa_adds_u_d
__builtin_msa_adds_u_h
__builtin_msa_adds_u_w
__builtin_mips_addsc
__builtin_mips_addu_ph
__builtin_mips_addu_qb
__builtin_mips_addu_s_ph
__builtin_mips_addu_s_qb
__builtin_mips_adduh_qb
__builtin_mips_adduh_r_qb
__builtin_msa_addv_b
__builtin_msa_addv_d
__builtin_msa_addv_h
__builtin_msa_addv_w
__builtin_msa_addvi_b
__builtin_msa_addvi_d
__builtin_msa_addvi_h
__builtin_msa_addvi_w
__builtin_mips_addwc
__builtin_msa_and_v
__builtin_msa_andi_b
__builtin_mips_append
__builtin_msa_asub_s_b
__builtin_msa_asub_s_d
__builtin_msa_asub_s_h
__builtin_msa_asub_s_w
__builtin_msa_asub_u_b
__builtin_msa_asub_u_d
__builtin_msa_asub_u_h
__builtin_msa_asub_u_w
__builtin_msa_ave_s_b
__builtin_msa_ave_s_d
__builtin_msa_ave_s_h
__builtin_msa_ave_s_w
__builtin_msa_ave_u_b
__builtin_msa_ave_u_d
__builtin_msa_ave_u_h
__builtin_msa_ave_u_w
__builtin_msa_aver_s_b
__builtin_msa_aver_s_d
__builtin_msa_aver_s_h
__builtin_msa_aver_s_w
__builtin_msa_aver_u_b
__builtin_msa_aver_u_d
__builtin_msa_aver_u_h
__builtin_msa_aver_u_w
__builtin_mips_balign
__builtin_msa_bclr_b
__builtin_msa_bclr_d
__builtin_msa_bclr_h
__builtin_msa_bclr_w
__builtin_msa_bclri_b
__builtin_msa_bclri_d
__builtin_msa_bclri_h
__builtin_msa_bclri_w
__builtin_msa_binsl_b
__builtin_msa_binsl_d
__builtin_msa_binsl_h
__builtin_msa_binsl_w
__builtin_msa_binsli_b
__builtin_msa_binsli_d
__builtin_msa_binsli_h
__builtin_msa_binsli_w
__builtin_msa_binsr_b
__builtin_msa_binsr_d
__builtin_msa_binsr_h
__builtin_msa_binsr_w
__builtin_msa_binsri_b
__builtin_msa_binsri_d
__builtin_msa_binsri_h
__builtin_msa_binsri_w
__builtin_mips_bitrev
__builtin_msa_bmnz_v
__builtin_msa_bmnzi_b
__builtin_msa_bmz_v
__builtin_msa_bmzi_b
__builtin_msa_bneg_b
__builtin_msa_bneg_d
__builtin_msa_bneg_h
__builtin_msa_bneg_w
__builtin_msa_bnegi_b
__builtin_msa_bnegi_d
__builtin_msa_bnegi_h
__builtin_msa_bnegi_w
__builtin_msa_bnz_b
__builtin_msa_bnz_d
__builtin_msa_bnz_h
__builtin_msa_bnz_v
__builtin_msa_bnz_w
__builtin_mips_bposge32
__builtin_msa_bsel_v
__builtin_msa_bseli_b
__builtin_msa_bset_b
__builtin_msa_bset_d
__builtin_msa_bset_h
__builtin_msa_bset_w
__builtin_msa_bseti_b
__builtin_msa_bseti_d
__builtin_msa_bseti_h
__builtin_msa_bseti_w
__builtin_msa_bz_b
__builtin_msa_bz_d
__builtin_msa_bz_h
__builtin_msa_bz_v
__builtin_msa_bz_w
__builtin_msa_ceq_b
__builtin_msa_ceq_d
__builtin_msa_ceq_h
__builtin_msa_ceq_w
__builtin_msa_ceqi_b
__builtin_msa_ceqi_d
__builtin_msa_ceqi_h
__builtin_msa_ceqi_w
__builtin_msa_cfcmsa
__builtin_msa_cle_s_b
__builtin_msa_cle_s_d
__builtin_msa_cle_s_h
__builtin_msa_cle_s_w
__builtin_msa_cle_u_b
__builtin_msa_cle_u_d
__builtin_msa_cle_u_h
__builtin_msa_cle_u_w
__builtin_msa_clei_s_b
__builtin_msa_clei_s_d
__builtin_msa_clei_s_h
__builtin_msa_clei_s_w
__builtin_msa_clei_u_b
__builtin_msa_clei_u_d
__builtin_msa_clei_u_h
__builtin_msa_clei_u_w
__builtin_msa_clt_s_b
__builtin_msa_clt_s_d
__builtin_msa_clt_s_h
__builtin_msa_clt_s_w
__builtin_msa_clt_u_b
__builtin_msa_clt_u_d
__builtin_msa_clt_u_h
__builtin_msa_clt_u_w
__builtin_msa_clti_s_b
__builtin_msa_clti_s_d
__builtin_msa_clti_s_h
__builtin_msa_clti_s_w
__builtin_msa_clti_u_b
__builtin_msa_clti_u_d
__builtin_msa_clti_u_h
__builtin_msa_clti_u_w
__builtin_mips_cmp_eq_ph
__builtin_mips_cmp_le_ph
__builtin_mips_cmp_lt_ph
__builtin_mips_cmpgdu_eq_qb
__builtin_mips_cmpgdu_le_qb
__builtin_mips_cmpgdu_lt_qb
__builtin_mips_cmpgu_eq_qb
__builtin_mips_cmpgu_le_qb
__builtin_mips_cmpgu_lt_qb
__builtin_mips_cmpu_eq_qb
__builtin_mips_cmpu_le_qb
__builtin_mips_cmpu_lt_qb
__builtin_msa_copy_s_b
__builtin_msa_copy_s_d
__builtin_msa_copy_s_h
__builtin_msa_copy_s_w
__builtin_msa_copy_u_b
__builtin_msa_copy_u_d
__builtin_msa_copy_u_h
__builtin_msa_copy_u_w
__builtin_msa_ctcmsa
__builtin_msa_div_s_b
__builtin_msa_div_s_d
__builtin_msa_div_s_h
__builtin_msa_div_s_w
__builtin_msa_div_u_b
__builtin_msa_div_u_d
__builtin_msa_div_u_h
__builtin_msa_div_u_w
__builtin_mips_dlsa
__builtin_msa_dotp_s_d
__builtin_msa_dotp_s_h
__builtin_msa_dotp_s_w
__builtin_msa_dotp_u_d
__builtin_msa_dotp_u_h
__builtin_msa_dotp_u_w
__builtin_mips_dpa_w_ph
__builtin_msa_dpadd_s_d
__builtin_msa_dpadd_s_h
__builtin_msa_dpadd_s_w
__builtin_msa_dpadd_u_d
__builtin_msa_dpadd_u_h
__builtin_msa_dpadd_u_w
__builtin_mips_dpaq_s_w_ph
__builtin_mips_dpaq_sa_l_w
__builtin_mips_dpaqx_s_w_ph
__builtin_mips_dpaqx_sa_w_ph
__builtin_mips_dpau_h_qbl
__builtin_mips_dpau_h_qbr
__builtin_mips_dpax_w_ph
__builtin_mips_dps_w_ph
__builtin_mips_dpsq_s_w_ph
__builtin_mips_dpsq_sa_l_w
__builtin_mips_dpsqx_s_w_ph
__builtin_mips_dpsqx_sa_w_ph
__builtin_mips_dpsu_h_qbl
__builtin_mips_dpsu_h_qbr
__builtin_msa_dpsub_s_d
__builtin_msa_dpsub_s_h
__builtin_msa_dpsub_s_w
__builtin_msa_dpsub_u_d
__builtin_msa_dpsub_u_h
__builtin_msa_dpsub_u_w
__builtin_mips_dpsx_w_ph
__builtin_mips_extp
__builtin_mips_extpdp
__builtin_mips_extr_r_w
__builtin_mips_extr_rs_w
__builtin_mips_extr_s_h
__builtin_mips_extr_w
__builtin_msa_fadd_d
__builtin_msa_fadd_w
__builtin_msa_fcaf_d
__builtin_msa_fcaf_w
__builtin_msa_fceq_d
__builtin_msa_fceq_w
__builtin_msa_fclass_d
__builtin_msa_fclass_w
__builtin_msa_fcle_d
__builtin_msa_fcle_w
__builtin_msa_fclt_d
__builtin_msa_fclt_w
__builtin_msa_fcne_d
__builtin_msa_fcne_w
__builtin_msa_fcor_d
__builtin_msa_fcor_w
__builtin_msa_fcueq_d
__builtin_msa_fcueq_w
__builtin_msa_fcule_d
__builtin_msa_fcule_w
__builtin_msa_fcult_d
__builtin_msa_fcult_w
__builtin_msa_fcun_d
__builtin_msa_fcun_w
__builtin_msa_fcune_d
__builtin_msa_fcune_w
__builtin_msa_fdiv_d
__builtin_msa_fdiv_w
__builtin_msa_fexdo_h
__builtin_msa_fexdo_w
__builtin_msa_fexp2_d
__builtin_msa_fexp2_w
__builtin_msa_fexupl_d
__builtin_msa_fexupl_w
__builtin_msa_fexupr_d
__builtin_msa_fexupr_w
__builtin_msa_ffint_s_d
__builtin_msa_ffint_s_w
__builtin_msa_ffint_u_d
__builtin_msa_ffint_u_w
__builtin_msa_ffql_d
__builtin_msa_ffql_w
__builtin_msa_ffqr_d
__builtin_msa_ffqr_w
__builtin_msa_fill_b
__builtin_msa_fill_d
__builtin_msa_fill_h
__builtin_msa_fill_w
__builtin_msa_flog2_d
__builtin_msa_flog2_w
__builtin_msa_fmadd_d
__builtin_msa_fmadd_w
__builtin_msa_fmax_a_d
__builtin_msa_fmax_a_w
__builtin_msa_fmax_d
__builtin_msa_fmax_w
__builtin_msa_fmin_a_d
__builtin_msa_fmin_a_w
__builtin_msa_fmin_d
__builtin_msa_fmin_w
__builtin_msa_fmsub_d
__builtin_msa_fmsub_w
__builtin_msa_fmul_d
__builtin_msa_fmul_w
__builtin_msa_frcp_d
__builtin_msa_frcp_w
__builtin_msa_frint_d
__builtin_msa_frint_w
__builtin_msa_frsqrt_d
__builtin_msa_frsqrt_w
__builtin_msa_fsaf_d
__builtin_msa_fsaf_w
__builtin_msa_fseq_d
__builtin_msa_fseq_w
__builtin_msa_fsle_d
__builtin_msa_fsle_w
__builtin_msa_fslt_d
__builtin_msa_fslt_w
__builtin_msa_fsne_d
__builtin_msa_fsne_w
__builtin_msa_fsor_d
__builtin_msa_fsor_w
__builtin_msa_fsqrt_d
__builtin_msa_fsqrt_w
__builtin_msa_fsub_d
__builtin_msa_fsub_w
__builtin_msa_fsueq_d
__builtin_msa_fsueq_w
__builtin_msa_fsule_d
__builtin_msa_fsule_w
__builtin_msa_fsult_d
__builtin_msa_fsult_w
__builtin_msa_fsun_d
__builtin_msa_fsun_w
__builtin_msa_fsune_d
__builtin_msa_fsune_w
__builtin_msa_ftint_s_d
__builtin_msa_ftint_s_w
__builtin_msa_ftint_u_d
__builtin_msa_ftint_u_w
__builtin_msa_ftq_h
__builtin_msa_ftq_w
__builtin_msa_ftrunc_s_d
__builtin_msa_ftrunc_s_w
__builtin_msa_ftrunc_u_d
__builtin_msa_ftrunc_u_w
__builtin_msa_hadd_s_d
__builtin_msa_hadd_s_h
__builtin_msa_hadd_s_w
__builtin_msa_hadd_u_d
__builtin_msa_hadd_u_h
__builtin_msa_hadd_u_w
__builtin_msa_hsub_s_d
__builtin_msa_hsub_s_h
__builtin_msa_hsub_s_w
__builtin_msa_hsub_u_d
__builtin_msa_hsub_u_h
__builtin_msa_hsub_u_w
__builtin_msa_ilvev_b
__builtin_msa_ilvev_d
__builtin_msa_ilvev_h
__builtin_msa_ilvev_w
__builtin_msa_ilvl_b
__builtin_msa_ilvl_d
__builtin_msa_ilvl_h
__builtin_msa_ilvl_w
__builtin_msa_ilvod_b
__builtin_msa_ilvod_d
__builtin_msa_ilvod_h
__builtin_msa_ilvod_w
__builtin_msa_ilvr_b
__builtin_msa_ilvr_d
__builtin_msa_ilvr_h
__builtin_msa_ilvr_w
__builtin_msa_insert_b
__builtin_msa_insert_d
__builtin_msa_insert_h
__builtin_msa_insert_w
__builtin_mips_insv
__builtin_msa_insve_b
__builtin_msa_insve_d
__builtin_msa_insve_h
__builtin_msa_insve_w
__builtin_mips_lbux
__builtin_msa_ld_b
__builtin_msa_ld_d
__builtin_msa_ld_h
__builtin_msa_ld_w
__builtin_msa_ldi_b
__builtin_msa_ldi_d
__builtin_msa_ldi_h
__builtin_msa_ldi_w
__builtin_msa_ldr_d
__builtin_msa_ldr_w
__builtin_mips_lhx
__builtin_mips_lsa
__builtin_mips_lwx
__builtin_mips_madd
__builtin_msa_madd_q_h
__builtin_msa_madd_q_w
__builtin_msa_maddr_q_h
__builtin_msa_maddr_q_w
__builtin_mips_maddu
__builtin_msa_maddv_b
__builtin_msa_maddv_d
__builtin_msa_maddv_h
__builtin_msa_maddv_w
__builtin_mips_maq_s_w_phl
__builtin_mips_maq_s_w_phr
__builtin_mips_maq_sa_w_phl
__builtin_mips_maq_sa_w_phr
__builtin_msa_max_a_b
__builtin_msa_max_a_d
__builtin_msa_max_a_h
__builtin_msa_max_a_w
__builtin_msa_max_s_b
__builtin_msa_max_s_d
__builtin_msa_max_s_h
__builtin_msa_max_s_w
__builtin_msa_max_u_b
__builtin_msa_max_u_d
__builtin_msa_max_u_h
__builtin_msa_max_u_w
__builtin_msa_maxi_s_b
__builtin_msa_maxi_s_d
__builtin_msa_maxi_s_h
__builtin_msa_maxi_s_w
__builtin_msa_maxi_u_b
__builtin_msa_maxi_u_d
__builtin_msa_maxi_u_h
__builtin_msa_maxi_u_w
__builtin_msa_min_a_b
__builtin_msa_min_a_d
__builtin_msa_min_a_h
__builtin_msa_min_a_w
__builtin_msa_min_s_b
__builtin_msa_min_s_d
__builtin_msa_min_s_h
__builtin_msa_min_s_w
__builtin_msa_min_u_b
__builtin_msa_min_u_d
__builtin_msa_min_u_h
__builtin_msa_min_u_w
__builtin_msa_mini_s_b
__builtin_msa_mini_s_d
__builtin_msa_mini_s_h
__builtin_msa_mini_s_w
__builtin_msa_mini_u_b
__builtin_msa_mini_u_d
__builtin_msa_mini_u_h
__builtin_msa_mini_u_w
__builtin_msa_mod_s_b
__builtin_msa_mod_s_d
__builtin_msa_mod_s_h
__builtin_msa_mod_s_w
__builtin_msa_mod_u_b
__builtin_msa_mod_u_d
__builtin_msa_mod_u_h
__builtin_msa_mod_u_w
__builtin_mips_modsub
__builtin_msa_move_v
__builtin_mips_msub
__builtin_msa_msub_q_h
__builtin_msa_msub_q_w
__builtin_msa_msubr_q_h
__builtin_msa_msubr_q_w
__builtin_mips_msubu
__builtin_msa_msubv_b
__builtin_msa_msubv_d
__builtin_msa_msubv_h
__builtin_msa_msubv_w
__builtin_mips_mthlip
__builtin_mips_mul_ph
__builtin_msa_mul_q_h
__builtin_msa_mul_q_w
__builtin_mips_mul_s_ph
__builtin_mips_muleq_s_w_phl
__builtin_mips_muleq_s_w_phr
__builtin_mips_muleu_s_ph_qbl
__builtin_mips_muleu_s_ph_qbr
__builtin_mips_mulq_rs_ph
__builtin_mips_mulq_rs_w
__builtin_mips_mulq_s_ph
__builtin_mips_mulq_s_w
__builtin_msa_mulr_q_h
__builtin_msa_mulr_q_w
__builtin_mips_mulsa_w_ph
__builtin_mips_mulsaq_s_w_ph
__builtin_mips_mult
__builtin_mips_multu
__builtin_msa_mulv_b
__builtin_msa_mulv_d
__builtin_msa_mulv_h
__builtin_msa_mulv_w
__builtin_msa_nloc_b
__builtin_msa_nloc_d
__builtin_msa_nloc_h
__builtin_msa_nloc_w
__builtin_msa_nlzc_b
__builtin_msa_nlzc_d
__builtin_msa_nlzc_h
__builtin_msa_nlzc_w
__builtin_msa_nor_v
__builtin_msa_nori_b
__builtin_msa_or_v
__builtin_msa_ori_b
__builtin_mips_packrl_ph
__builtin_msa_pckev_b
__builtin_msa_pckev_d
__builtin_msa_pckev_h
__builtin_msa_pckev_w
__builtin_msa_pckod_b
__builtin_msa_pckod_d
__builtin_msa_pckod_h
__builtin_msa_pckod_w
__builtin_msa_pcnt_b
__builtin_msa_pcnt_d
__builtin_msa_pcnt_h
__builtin_msa_pcnt_w
__builtin_mips_pick_ph
__builtin_mips_pick_qb
__builtin_mips_preceq_w_phl
__builtin_mips_preceq_w_phr
__builtin_mips_precequ_ph_qbl
__builtin_mips_precequ_ph_qbla
__builtin_mips_precequ_ph_qbr
__builtin_mips_precequ_ph_qbra
__builtin_mips_preceu_ph_qbl
__builtin_mips_preceu_ph_qbla
__builtin_mips_preceu_ph_qbr
__builtin_mips_preceu_ph_qbra
__builtin_mips_precr_qb_ph
__builtin_mips_precr_sra_ph_w
__builtin_mips_precr_sra_r_ph_w
__builtin_mips_precrq_ph_w
__builtin_mips_precrq_qb_ph
__builtin_mips_precrq_rs_ph_w
__builtin_mips_precrqu_s_qb_ph
__builtin_mips_prepend
__builtin_mips_raddu_w_qb
__builtin_mips_rddsp
__builtin_mips_repl_ph
__builtin_mips_repl_qb
__builtin_msa_sat_s_b
__builtin_msa_sat_s_d
__builtin_msa_sat_s_h
__builtin_msa_sat_s_w
__builtin_msa_sat_u_b
__builtin_msa_sat_u_d
__builtin_msa_sat_u_h
__builtin_msa_sat_u_w
__builtin_msa_shf_b
__builtin_msa_shf_h
__builtin_msa_shf_w
__builtin_mips_shilo
__builtin_mips_shll_ph
__builtin_mips_shll_qb
__builtin_mips_shll_s_ph
__builtin_mips_shll_s_w
__builtin_mips_shra_ph
__builtin_mips_shra_qb
__builtin_mips_shra_r_ph
__builtin_mips_shra_r_qb
__builtin_mips_shra_r_w
__builtin_mips_shrl_ph
__builtin_mips_shrl_qb
__builtin_msa_sld_b
__builtin_msa_sld_d
__builtin_msa_sld_h
__builtin_msa_sld_w
__builtin_msa_sldi_b
__builtin_msa_sldi_d
__builtin_msa_sldi_h
__builtin_msa_sldi_w
__builtin_msa_sll_b
__builtin_msa_sll_d
__builtin_msa_sll_h
__builtin_msa_sll_w
__builtin_msa_slli_b
__builtin_msa_slli_d
__builtin_msa_slli_h
__builtin_msa_slli_w
__builtin_msa_splat_b
__builtin_msa_splat_d
__builtin_msa_splat_h
__builtin_msa_splat_w
__builtin_msa_splati_b
__builtin_msa_splati_d
__builtin_msa_splati_h
__builtin_msa_splati_w
__builtin_msa_sra_b
__builtin_msa_sra_d
__builtin_msa_sra_h
__builtin_msa_sra_w
__builtin_msa_srai_b
__builtin_msa_srai_d
__builtin_msa_srai_h
__builtin_msa_srai_w
__builtin_msa_srar_b
__builtin_msa_srar_d
__builtin_msa_srar_h
__builtin_msa_srar_w
__builtin_msa_srari_b
__builtin_msa_srari_d
__builtin_msa_srari_h
__builtin_msa_srari_w
__builtin_msa_srl_b
__builtin_msa_srl_d
__builtin_msa_srl_h
__builtin_msa_srl_w
__builtin_msa_srli_b
__builtin_msa_srli_d
__builtin_msa_srli_h
__builtin_msa_srli_w
__builtin_msa_srlr_b
__builtin_msa_srlr_d
__builtin_msa_srlr_h
__builtin_msa_srlr_w
__builtin_msa_srlri_b
__builtin_msa_srlri_d
__builtin_msa_srlri_h
__builtin_msa_srlri_w
__builtin_msa_st_b
__builtin_msa_st_d
__builtin_msa_st_h
__builtin_msa_st_w
__builtin_msa_str_d
__builtin_msa_str_w
__builtin_mips_subq_ph
__builtin_mips_subq_s_ph
__builtin_mips_subq_s_w
__builtin_mips_subqh_ph
__builtin_mips_subqh_r_ph
__builtin_mips_subqh_r_w
__builtin_mips_subqh_w
__builtin_msa_subs_s_b
__builtin_msa_subs_s_d
__builtin_msa_subs_s_h
__builtin_msa_subs_s_w
__builtin_msa_subs_u_b
__builtin_msa_subs_u_d
__builtin_msa_subs_u_h
__builtin_msa_subs_u_w
__builtin_msa_subsus_u_b
__builtin_msa_subsus_u_d
__builtin_msa_subsus_u_h
__builtin_msa_subsus_u_w
__builtin_msa_subsuu_s_b
__builtin_msa_subsuu_s_d
__builtin_msa_subsuu_s_h
__builtin_msa_subsuu_s_w
__builtin_mips_subu_ph
__builtin_mips_subu_qb
__builtin_mips_subu_s_ph
__builtin_mips_subu_s_qb
__builtin_mips_subuh_qb
__builtin_mips_subuh_r_qb
__builtin_msa_subv_b
__builtin_msa_subv_d
__builtin_msa_subv_h
__builtin_msa_subv_w
__builtin_msa_subvi_b
__builtin_msa_subvi_d
__builtin_msa_subvi_h
__builtin_msa_subvi_w
__builtin_msa_vshf_b
__builtin_msa_vshf_d
__builtin_msa_vshf_h
__builtin_msa_vshf_w
__builtin_mips_wrdsp
__builtin_msa_xor_v
__builtin_msa_xori_b
__nvvm_add_rm_d
__nvvm_add_rm_f
__nvvm_add_rm_ftz_f
__nvvm_add_rn_d
__nvvm_add_rn_f
__nvvm_add_rn_ftz_f
__nvvm_add_rp_d
__nvvm_add_rp_f
__nvvm_add_rp_ftz_f
__nvvm_add_rz_d
__nvvm_add_rz_f
__nvvm_add_rz_ftz_f
__nvvm_bar_sync
__nvvm_bar_warp_sync
__nvvm_bar
__nvvm_bar_n
__nvvm_barrier_sync
__nvvm_barrier_sync_cnt
__syncthreads
__nvvm_bar0_and
__nvvm_bar0_or
__nvvm_bar0_popc
__nvvm_bitcast_d2ll
__nvvm_bitcast_f2i
__nvvm_bitcast_i2f
__nvvm_bitcast_ll2d
__nvvm_ceil_d
__nvvm_ceil_f
__nvvm_ceil_ftz_f
__nvvm_cos_approx_f
__nvvm_cos_approx_ftz_f
__nvvm_d2f_rm
__nvvm_d2f_rm_ftz
__nvvm_d2f_rn
__nvvm_d2f_rn_ftz
__nvvm_d2f_rp
__nvvm_d2f_rp_ftz
__nvvm_d2f_rz
__nvvm_d2f_rz_ftz
__nvvm_d2i_hi
__nvvm_d2i_lo
__nvvm_d2i_rm
__nvvm_d2i_rn
__nvvm_d2i_rp
__nvvm_d2i_rz
__nvvm_d2ll_rm
__nvvm_d2ll_rn
__nvvm_d2ll_rp
__nvvm_d2ll_rz
__nvvm_d2ui_rm
__nvvm_d2ui_rn
__nvvm_d2ui_rp
__nvvm_d2ui_rz
__nvvm_d2ull_rm
__nvvm_d2ull_rn
__nvvm_d2ull_rp
__nvvm_d2ull_rz
__nvvm_div_approx_f
__nvvm_div_approx_ftz_f
__nvvm_div_rm_d
__nvvm_div_rm_f
__nvvm_div_rm_ftz_f
__nvvm_div_rn_d
__nvvm_div_rn_f
__nvvm_div_rn_ftz_f
__nvvm_div_rp_d
__nvvm_div_rp_f
__nvvm_div_rp_ftz_f
__nvvm_div_rz_d
__nvvm_div_rz_f
__nvvm_div_rz_ftz_f
__nvvm_ex2_approx_d
__nvvm_ex2_approx_f
__nvvm_ex2_approx_ftz_f
__nvvm_f2h_rn
__nvvm_f2h_rn_ftz
__nvvm_f2i_rm
__nvvm_f2i_rm_ftz
__nvvm_f2i_rn
__nvvm_f2i_rn_ftz
__nvvm_f2i_rp
__nvvm_f2i_rp_ftz
__nvvm_f2i_rz
__nvvm_f2i_rz_ftz
__nvvm_f2ll_rm
__nvvm_f2ll_rm_ftz
__nvvm_f2ll_rn
__nvvm_f2ll_rn_ftz
__nvvm_f2ll_rp
__nvvm_f2ll_rp_ftz
__nvvm_f2ll_rz
__nvvm_f2ll_rz_ftz
__nvvm_f2ui_rm
__nvvm_f2ui_rm_ftz
__nvvm_f2ui_rn
__nvvm_f2ui_rn_ftz
__nvvm_f2ui_rp
__nvvm_f2ui_rp_ftz
__nvvm_f2ui_rz
__nvvm_f2ui_rz_ftz
__nvvm_f2ull_rm
__nvvm_f2ull_rm_ftz
__nvvm_f2ull_rn
__nvvm_f2ull_rn_ftz
__nvvm_f2ull_rp
__nvvm_f2ull_rp_ftz
__nvvm_f2ull_rz
__nvvm_f2ull_rz_ftz
__nvvm_fabs_d
__nvvm_fabs_f
__nvvm_fabs_ftz_f
__nvvm_floor_d
__nvvm_floor_f
__nvvm_floor_ftz_f
__nvvm_fma_rm_d
__nvvm_fma_rm_f
__nvvm_fma_rm_ftz_f
__nvvm_fma_rn_d
__nvvm_fma_rn_f
__nvvm_fma_rn_ftz_f
__nvvm_fma_rp_d
__nvvm_fma_rp_f
__nvvm_fma_rp_ftz_f
__nvvm_fma_rz_d
__nvvm_fma_rz_f
__nvvm_fma_rz_ftz_f
__nvvm_fmax_d
__nvvm_fmax_f
__nvvm_fmax_ftz_f
__nvvm_fmin_d
__nvvm_fmin_f
__nvvm_fmin_ftz_f
__nvvm_fns
__nvvm_i2d_rm
__nvvm_i2d_rn
__nvvm_i2d_rp
__nvvm_i2d_rz
__nvvm_i2f_rm
__nvvm_i2f_rn
__nvvm_i2f_rp
__nvvm_i2f_rz
__nvvm_isspacep_const
__nvvm_isspacep_global
__nvvm_isspacep_local
__nvvm_isspacep_shared
__nvvm_istypep_sampler
__nvvm_istypep_surface
__nvvm_istypep_texture
__nvvm_lg2_approx_d
__nvvm_lg2_approx_f
__nvvm_lg2_approx_ftz_f
__nvvm_ll2d_rm
__nvvm_ll2d_rn
__nvvm_ll2d_rp
__nvvm_ll2d_rz
__nvvm_ll2f_rm
__nvvm_ll2f_rn
__nvvm_ll2f_rp
__nvvm_ll2f_rz
__nvvm_lohi_i2d
__nvvm_match_any_sync_i32
__nvvm_match_any_sync_i64
__nvvm_membar_cta
__nvvm_membar_gl
__nvvm_membar_sys
__nvvm_mul_rm_d
__nvvm_mul_rm_f
__nvvm_mul_rm_ftz_f
__nvvm_mul_rn_d
__nvvm_mul_rn_f
__nvvm_mul_rn_ftz_f
__nvvm_mul_rp_d
__nvvm_mul_rp_f
__nvvm_mul_rp_ftz_f
__nvvm_mul_rz_d
__nvvm_mul_rz_f
__nvvm_mul_rz_ftz_f
__nvvm_mul24_i
__nvvm_mul24_ui
__nvvm_mulhi_i
__nvvm_mulhi_ll
__nvvm_mulhi_ui
__nvvm_mulhi_ull
__nvvm_prmt
__nvvm_rcp_approx_ftz_d
__nvvm_rcp_rm_d
__nvvm_rcp_rm_f
__nvvm_rcp_rm_ftz_f
__nvvm_rcp_rn_d
__nvvm_rcp_rn_f
__nvvm_rcp_rn_ftz_f
__nvvm_rcp_rp_d
__nvvm_rcp_rp_f
__nvvm_rcp_rp_ftz_f
__nvvm_rcp_rz_d
__nvvm_rcp_rz_f
__nvvm_rcp_rz_ftz_f
__nvvm_read_ptx_sreg_clock
__nvvm_read_ptx_sreg_clock64
__nvvm_read_ptx_sreg_ctaid_w
__nvvm_read_ptx_sreg_ctaid_x
__nvvm_read_ptx_sreg_ctaid_y
__nvvm_read_ptx_sreg_ctaid_z
__nvvm_read_ptx_sreg_envreg0
__nvvm_read_ptx_sreg_envreg1
__nvvm_read_ptx_sreg_envreg10
__nvvm_read_ptx_sreg_envreg11
__nvvm_read_ptx_sreg_envreg12
__nvvm_read_ptx_sreg_envreg13
__nvvm_read_ptx_sreg_envreg14
__nvvm_read_ptx_sreg_envreg15
__nvvm_read_ptx_sreg_envreg16
__nvvm_read_ptx_sreg_envreg17
__nvvm_read_ptx_sreg_envreg18
__nvvm_read_ptx_sreg_envreg19
__nvvm_read_ptx_sreg_envreg2
__nvvm_read_ptx_sreg_envreg20
__nvvm_read_ptx_sreg_envreg21
__nvvm_read_ptx_sreg_envreg22
__nvvm_read_ptx_sreg_envreg23
__nvvm_read_ptx_sreg_envreg24
__nvvm_read_ptx_sreg_envreg25
__nvvm_read_ptx_sreg_envreg26
__nvvm_read_ptx_sreg_envreg27
__nvvm_read_ptx_sreg_envreg28
__nvvm_read_ptx_sreg_envreg29
__nvvm_read_ptx_sreg_envreg3
__nvvm_read_ptx_sreg_envreg30
__nvvm_read_ptx_sreg_envreg31
__nvvm_read_ptx_sreg_envreg4
__nvvm_read_ptx_sreg_envreg5
__nvvm_read_ptx_sreg_envreg6
__nvvm_read_ptx_sreg_envreg7
__nvvm_read_ptx_sreg_envreg8
__nvvm_read_ptx_sreg_envreg9
__nvvm_read_ptx_sreg_gridid
__nvvm_read_ptx_sreg_laneid
__nvvm_read_ptx_sreg_lanemask_eq
__nvvm_read_ptx_sreg_lanemask_ge
__nvvm_read_ptx_sreg_lanemask_gt
__nvvm_read_ptx_sreg_lanemask_le
__nvvm_read_ptx_sreg_lanemask_lt
__nvvm_read_ptx_sreg_nctaid_w
__nvvm_read_ptx_sreg_nctaid_x
__nvvm_read_ptx_sreg_nctaid_y
__nvvm_read_ptx_sreg_nctaid_z
__nvvm_read_ptx_sreg_nsmid
__nvvm_read_ptx_sreg_ntid_w
__nvvm_read_ptx_sreg_ntid_x
__nvvm_read_ptx_sreg_ntid_y
__nvvm_read_ptx_sreg_ntid_z
__nvvm_read_ptx_sreg_nwarpid
__nvvm_read_ptx_sreg_pm0
__nvvm_read_ptx_sreg_pm1
__nvvm_read_ptx_sreg_pm2
__nvvm_read_ptx_sreg_pm3
__nvvm_read_ptx_sreg_smid
__nvvm_read_ptx_sreg_tid_w
__nvvm_read_ptx_sreg_tid_x
__nvvm_read_ptx_sreg_tid_y
__nvvm_read_ptx_sreg_tid_z
__nvvm_read_ptx_sreg_warpid
__nvvm_read_ptx_sreg_warpsize
__nvvm_rotate_b32
__nvvm_rotate_b64
__nvvm_rotate_right_b64
__nvvm_round_d
__nvvm_round_f
__nvvm_round_ftz_f
__nvvm_rsqrt_approx_d
__nvvm_rsqrt_approx_f
__nvvm_rsqrt_approx_ftz_f
__nvvm_sad_i
__nvvm_sad_ui
__nvvm_saturate_d
__nvvm_saturate_f
__nvvm_saturate_ftz_f
__nvvm_shfl_bfly_f32
__nvvm_shfl_bfly_i32
__nvvm_shfl_down_f32
__nvvm_shfl_down_i32
__nvvm_shfl_idx_f32
__nvvm_shfl_idx_i32
__nvvm_shfl_sync_bfly_f32
__nvvm_shfl_sync_bfly_i32
__nvvm_shfl_sync_down_f32
__nvvm_shfl_sync_down_i32
__nvvm_shfl_sync_idx_f32
__nvvm_shfl_sync_idx_i32
__nvvm_shfl_sync_up_f32
__nvvm_shfl_sync_up_i32
__nvvm_shfl_up_f32
__nvvm_shfl_up_i32
__nvvm_sin_approx_f
__nvvm_sin_approx_ftz_f
__nvvm_sqrt_approx_f
__nvvm_sqrt_approx_ftz_f
__nvvm_sqrt_f
__nvvm_sqrt_rm_d
__nvvm_sqrt_rm_f
__nvvm_sqrt_rm_ftz_f
__nvvm_sqrt_rn_d
__nvvm_sqrt_rn_f
__nvvm_sqrt_rn_ftz_f
__nvvm_sqrt_rp_d
__nvvm_sqrt_rp_f
__nvvm_sqrt_rp_ftz_f
__nvvm_sqrt_rz_d
__nvvm_sqrt_rz_f
__nvvm_sqrt_rz_ftz_f
__nvvm_suq_array_size
__nvvm_suq_channel_data_type
__nvvm_suq_channel_order
__nvvm_suq_depth
__nvvm_suq_height
__nvvm_suq_width
__nvvm_sust_b_1d_array_i16_clamp
__nvvm_sust_b_1d_array_i16_trap
__nvvm_sust_b_1d_array_i16_zero
__nvvm_sust_b_1d_array_i32_clamp
__nvvm_sust_b_1d_array_i32_trap
__nvvm_sust_b_1d_array_i32_zero
__nvvm_sust_b_1d_array_i64_clamp
__nvvm_sust_b_1d_array_i64_trap
__nvvm_sust_b_1d_array_i64_zero
__nvvm_sust_b_1d_array_i8_clamp
__nvvm_sust_b_1d_array_i8_trap
__nvvm_sust_b_1d_array_i8_zero
__nvvm_sust_b_1d_array_v2i16_clamp
__nvvm_sust_b_1d_array_v2i16_trap
__nvvm_sust_b_1d_array_v2i16_zero
__nvvm_sust_b_1d_array_v2i32_clamp
__nvvm_sust_b_1d_array_v2i32_trap
__nvvm_sust_b_1d_array_v2i32_zero
__nvvm_sust_b_1d_array_v2i64_clamp
__nvvm_sust_b_1d_array_v2i64_trap
__nvvm_sust_b_1d_array_v2i64_zero
__nvvm_sust_b_1d_array_v2i8_clamp
__nvvm_sust_b_1d_array_v2i8_trap
__nvvm_sust_b_1d_array_v2i8_zero
__nvvm_sust_b_1d_array_v4i16_clamp
__nvvm_sust_b_1d_array_v4i16_trap
__nvvm_sust_b_1d_array_v4i16_zero
__nvvm_sust_b_1d_array_v4i32_clamp
__nvvm_sust_b_1d_array_v4i32_trap
__nvvm_sust_b_1d_array_v4i32_zero
__nvvm_sust_b_1d_array_v4i8_clamp
__nvvm_sust_b_1d_array_v4i8_trap
__nvvm_sust_b_1d_array_v4i8_zero
__nvvm_sust_b_1d_i16_clamp
__nvvm_sust_b_1d_i16_trap
__nvvm_sust_b_1d_i16_zero
__nvvm_sust_b_1d_i32_clamp
__nvvm_sust_b_1d_i32_trap
__nvvm_sust_b_1d_i32_zero
__nvvm_sust_b_1d_i64_clamp
__nvvm_sust_b_1d_i64_trap
__nvvm_sust_b_1d_i64_zero
__nvvm_sust_b_1d_i8_clamp
__nvvm_sust_b_1d_i8_trap
__nvvm_sust_b_1d_i8_zero
__nvvm_sust_b_1d_v2i16_clamp
__nvvm_sust_b_1d_v2i16_trap
__nvvm_sust_b_1d_v2i16_zero
__nvvm_sust_b_1d_v2i32_clamp
__nvvm_sust_b_1d_v2i32_trap
__nvvm_sust_b_1d_v2i32_zero
__nvvm_sust_b_1d_v2i64_clamp
__nvvm_sust_b_1d_v2i64_trap
__nvvm_sust_b_1d_v2i64_zero
__nvvm_sust_b_1d_v2i8_clamp
__nvvm_sust_b_1d_v2i8_trap
__nvvm_sust_b_1d_v2i8_zero
__nvvm_sust_b_1d_v4i16_clamp
__nvvm_sust_b_1d_v4i16_trap
__nvvm_sust_b_1d_v4i16_zero
__nvvm_sust_b_1d_v4i32_clamp
__nvvm_sust_b_1d_v4i32_trap
__nvvm_sust_b_1d_v4i32_zero
__nvvm_sust_b_1d_v4i8_clamp
__nvvm_sust_b_1d_v4i8_trap
__nvvm_sust_b_1d_v4i8_zero
__nvvm_sust_b_2d_array_i16_clamp
__nvvm_sust_b_2d_array_i16_trap
__nvvm_sust_b_2d_array_i16_zero
__nvvm_sust_b_2d_array_i32_clamp
__nvvm_sust_b_2d_array_i32_trap
__nvvm_sust_b_2d_array_i32_zero
__nvvm_sust_b_2d_array_i64_clamp
__nvvm_sust_b_2d_array_i64_trap
__nvvm_sust_b_2d_array_i64_zero
__nvvm_sust_b_2d_array_i8_clamp
__nvvm_sust_b_2d_array_i8_trap
__nvvm_sust_b_2d_array_i8_zero
__nvvm_sust_b_2d_array_v2i16_clamp
__nvvm_sust_b_2d_array_v2i16_trap
__nvvm_sust_b_2d_array_v2i16_zero
__nvvm_sust_b_2d_array_v2i32_clamp
__nvvm_sust_b_2d_array_v2i32_trap
__nvvm_sust_b_2d_array_v2i32_zero
__nvvm_sust_b_2d_array_v2i64_clamp
__nvvm_sust_b_2d_array_v2i64_trap
__nvvm_sust_b_2d_array_v2i64_zero
__nvvm_sust_b_2d_array_v2i8_clamp
__nvvm_sust_b_2d_array_v2i8_trap
__nvvm_sust_b_2d_array_v2i8_zero
__nvvm_sust_b_2d_array_v4i16_clamp
__nvvm_sust_b_2d_array_v4i16_trap
__nvvm_sust_b_2d_array_v4i16_zero
__nvvm_sust_b_2d_array_v4i32_clamp
__nvvm_sust_b_2d_array_v4i32_trap
__nvvm_sust_b_2d_array_v4i32_zero
__nvvm_sust_b_2d_array_v4i8_clamp
__nvvm_sust_b_2d_array_v4i8_trap
__nvvm_sust_b_2d_array_v4i8_zero
__nvvm_sust_b_2d_i16_clamp
__nvvm_sust_b_2d_i16_trap
__nvvm_sust_b_2d_i16_zero
__nvvm_sust_b_2d_i32_clamp
__nvvm_sust_b_2d_i32_trap
__nvvm_sust_b_2d_i32_zero
__nvvm_sust_b_2d_i64_clamp
__nvvm_sust_b_2d_i64_trap
__nvvm_sust_b_2d_i64_zero
__nvvm_sust_b_2d_i8_clamp
__nvvm_sust_b_2d_i8_trap
__nvvm_sust_b_2d_i8_zero
__nvvm_sust_b_2d_v2i16_clamp
__nvvm_sust_b_2d_v2i16_trap
__nvvm_sust_b_2d_v2i16_zero
__nvvm_sust_b_2d_v2i32_clamp
__nvvm_sust_b_2d_v2i32_trap
__nvvm_sust_b_2d_v2i32_zero
__nvvm_sust_b_2d_v2i64_clamp
__nvvm_sust_b_2d_v2i64_trap
__nvvm_sust_b_2d_v2i64_zero
__nvvm_sust_b_2d_v2i8_clamp
__nvvm_sust_b_2d_v2i8_trap
__nvvm_sust_b_2d_v2i8_zero
__nvvm_sust_b_2d_v4i16_clamp
__nvvm_sust_b_2d_v4i16_trap
__nvvm_sust_b_2d_v4i16_zero
__nvvm_sust_b_2d_v4i32_clamp
__nvvm_sust_b_2d_v4i32_trap
__nvvm_sust_b_2d_v4i32_zero
__nvvm_sust_b_2d_v4i8_clamp
__nvvm_sust_b_2d_v4i8_trap
__nvvm_sust_b_2d_v4i8_zero
__nvvm_sust_b_3d_i16_clamp
__nvvm_sust_b_3d_i16_trap
__nvvm_sust_b_3d_i16_zero
__nvvm_sust_b_3d_i32_clamp
__nvvm_sust_b_3d_i32_trap
__nvvm_sust_b_3d_i32_zero
__nvvm_sust_b_3d_i64_clamp
__nvvm_sust_b_3d_i64_trap
__nvvm_sust_b_3d_i64_zero
__nvvm_sust_b_3d_i8_clamp
__nvvm_sust_b_3d_i8_trap
__nvvm_sust_b_3d_i8_zero
__nvvm_sust_b_3d_v2i16_clamp
__nvvm_sust_b_3d_v2i16_trap
__nvvm_sust_b_3d_v2i16_zero
__nvvm_sust_b_3d_v2i32_clamp
__nvvm_sust_b_3d_v2i32_trap
__nvvm_sust_b_3d_v2i32_zero
__nvvm_sust_b_3d_v2i64_clamp
__nvvm_sust_b_3d_v2i64_trap
__nvvm_sust_b_3d_v2i64_zero
__nvvm_sust_b_3d_v2i8_clamp
__nvvm_sust_b_3d_v2i8_trap
__nvvm_sust_b_3d_v2i8_zero
__nvvm_sust_b_3d_v4i16_clamp
__nvvm_sust_b_3d_v4i16_trap
__nvvm_sust_b_3d_v4i16_zero
__nvvm_sust_b_3d_v4i32_clamp
__nvvm_sust_b_3d_v4i32_trap
__nvvm_sust_b_3d_v4i32_zero
__nvvm_sust_b_3d_v4i8_clamp
__nvvm_sust_b_3d_v4i8_trap
__nvvm_sust_b_3d_v4i8_zero
__nvvm_sust_p_1d_array_i16_trap
__nvvm_sust_p_1d_array_i32_trap
__nvvm_sust_p_1d_array_i8_trap
__nvvm_sust_p_1d_array_v2i16_trap
__nvvm_sust_p_1d_array_v2i32_trap
__nvvm_sust_p_1d_array_v2i8_trap
__nvvm_sust_p_1d_array_v4i16_trap
__nvvm_sust_p_1d_array_v4i32_trap
__nvvm_sust_p_1d_array_v4i8_trap
__nvvm_sust_p_1d_i16_trap
__nvvm_sust_p_1d_i32_trap
__nvvm_sust_p_1d_i8_trap
__nvvm_sust_p_1d_v2i16_trap
__nvvm_sust_p_1d_v2i32_trap
__nvvm_sust_p_1d_v2i8_trap
__nvvm_sust_p_1d_v4i16_trap
__nvvm_sust_p_1d_v4i32_trap
__nvvm_sust_p_1d_v4i8_trap
__nvvm_sust_p_2d_array_i16_trap
__nvvm_sust_p_2d_array_i32_trap
__nvvm_sust_p_2d_array_i8_trap
__nvvm_sust_p_2d_array_v2i16_trap
__nvvm_sust_p_2d_array_v2i32_trap
__nvvm_sust_p_2d_array_v2i8_trap
__nvvm_sust_p_2d_array_v4i16_trap
__nvvm_sust_p_2d_array_v4i32_trap
__nvvm_sust_p_2d_array_v4i8_trap
__nvvm_sust_p_2d_i16_trap
__nvvm_sust_p_2d_i32_trap
__nvvm_sust_p_2d_i8_trap
__nvvm_sust_p_2d_v2i16_trap
__nvvm_sust_p_2d_v2i32_trap
__nvvm_sust_p_2d_v2i8_trap
__nvvm_sust_p_2d_v4i16_trap
__nvvm_sust_p_2d_v4i32_trap
__nvvm_sust_p_2d_v4i8_trap
__nvvm_sust_p_3d_i16_trap
__nvvm_sust_p_3d_i32_trap
__nvvm_sust_p_3d_i8_trap
__nvvm_sust_p_3d_v2i16_trap
__nvvm_sust_p_3d_v2i32_trap
__nvvm_sust_p_3d_v2i8_trap
__nvvm_sust_p_3d_v4i16_trap
__nvvm_sust_p_3d_v4i32_trap
__nvvm_sust_p_3d_v4i8_trap
__nvvm_swap_lo_hi_b64
__nvvm_trunc_d
__nvvm_trunc_f
__nvvm_trunc_ftz_f
__nvvm_txq_array_size
__nvvm_txq_channel_data_type
__nvvm_txq_channel_order
__nvvm_txq_depth
__nvvm_txq_height
__nvvm_txq_num_mipmap_levels
__nvvm_txq_num_samples
__nvvm_txq_width
__nvvm_ui2d_rm
__nvvm_ui2d_rn
__nvvm_ui2d_rp
__nvvm_ui2d_rz
__nvvm_ui2f_rm
__nvvm_ui2f_rn
__nvvm_ui2f_rp
__nvvm_ui2f_rz
__nvvm_ull2d_rm
__nvvm_ull2d_rn
__nvvm_ull2d_rp
__nvvm_ull2d_rz
__nvvm_ull2f_rm
__nvvm_ull2f_rn
__nvvm_ull2f_rp
__nvvm_ull2f_rz
__nvvm_vote_all
__nvvm_vote_all_sync
__nvvm_vote_any
__nvvm_vote_any_sync
__nvvm_vote_ballot
__nvvm_vote_ballot_sync
__nvvm_vote_uni
__nvvm_vote_uni_sync
__builtin_addf128_round_to_odd
__builtin_altivec_crypto_vcipher
__builtin_altivec_crypto_vcipherlast
__builtin_altivec_crypto_vncipher
__builtin_altivec_crypto_vncipherlast
__builtin_altivec_crypto_vpermxor
__builtin_altivec_crypto_vpmsumb
__builtin_altivec_crypto_vpmsumd
__builtin_altivec_crypto_vpmsumh
__builtin_altivec_crypto_vpmsumw
__builtin_altivec_crypto_vsbox
__builtin_altivec_crypto_vshasigmad
__builtin_altivec_crypto_vshasigmaw
__builtin_altivec_dss
__builtin_altivec_dssall
__builtin_altivec_dst
__builtin_altivec_dstst
__builtin_altivec_dststt
__builtin_altivec_dstt
__builtin_altivec_mfvscr
__builtin_altivec_mtvscr
__builtin_altivec_mtvsrbm
__builtin_altivec_mtvsrdm
__builtin_altivec_mtvsrhm
__builtin_altivec_mtvsrqm
__builtin_altivec_mtvsrwm
__builtin_altivec_vabsdub
__builtin_altivec_vabsduh
__builtin_altivec_vabsduw
__builtin_altivec_vaddcuq
__builtin_altivec_vaddcuw
__builtin_altivec_vaddecuq
__builtin_altivec_vaddeuqm
__builtin_altivec_vaddsbs
__builtin_altivec_vaddshs
__builtin_altivec_vaddsws
__builtin_altivec_vaddubs
__builtin_altivec_vadduhs
__builtin_altivec_vadduws
__builtin_altivec_vavgsb
__builtin_altivec_vavgsh
__builtin_altivec_vavgsw
__builtin_altivec_vavgub
__builtin_altivec_vavguh
__builtin_altivec_vavguw
__builtin_altivec_vbpermq
__builtin_altivec_vcfsx
__builtin_altivec_vcfuged
__builtin_altivec_vcfux
__builtin_altivec_vclrlb
__builtin_altivec_vclrrb
__builtin_altivec_vclzdm
__builtin_altivec_vclzlsbb
__builtin_altivec_vcmpbfp
__builtin_altivec_vcmpbfp_p
__builtin_altivec_vcmpeqfp
__builtin_altivec_vcmpeqfp_p
__builtin_altivec_vcmpequb
__builtin_altivec_vcmpequb_p
__builtin_altivec_vcmpequd
__builtin_altivec_vcmpequd_p
__builtin_altivec_vcmpequh
__builtin_altivec_vcmpequh_p
__builtin_altivec_vcmpequq
__builtin_altivec_vcmpequq_p
__builtin_altivec_vcmpequw
__builtin_altivec_vcmpequw_p
__builtin_altivec_vcmpgefp
__builtin_altivec_vcmpgefp_p
__builtin_altivec_vcmpgtfp
__builtin_altivec_vcmpgtfp_p
__builtin_altivec_vcmpgtsb
__builtin_altivec_vcmpgtsb_p
__builtin_altivec_vcmpgtsd
__builtin_altivec_vcmpgtsd_p
__builtin_altivec_vcmpgtsh
__builtin_altivec_vcmpgtsh_p
__builtin_altivec_vcmpgtsq
__builtin_altivec_vcmpgtsq_p
__builtin_altivec_vcmpgtsw
__builtin_altivec_vcmpgtsw_p
__builtin_altivec_vcmpgtub
__builtin_altivec_vcmpgtub_p
__builtin_altivec_vcmpgtud
__builtin_altivec_vcmpgtud_p
__builtin_altivec_vcmpgtuh
__builtin_altivec_vcmpgtuh_p
__builtin_altivec_vcmpgtuq
__builtin_altivec_vcmpgtuq_p
__builtin_altivec_vcmpgtuw
__builtin_altivec_vcmpgtuw_p
__builtin_altivec_vcmpneb
__builtin_altivec_vcmpneb_p
__builtin_altivec_vcmpneh
__builtin_altivec_vcmpneh_p
__builtin_altivec_vcmpnew
__builtin_altivec_vcmpnew_p
__builtin_altivec_vcmpnezb
__builtin_altivec_vcmpnezb_p
__builtin_altivec_vcmpnezh
__builtin_altivec_vcmpnezh_p
__builtin_altivec_vcmpnezw
__builtin_altivec_vcmpnezw_p
__builtin_altivec_vcntmbb
__builtin_altivec_vcntmbd
__builtin_altivec_vcntmbh
__builtin_altivec_vcntmbw
__builtin_altivec_vctsxs
__builtin_altivec_vctuxs
__builtin_altivec_vctzdm
__builtin_altivec_vctzlsbb
__builtin_altivec_vdivesd
__builtin_altivec_vdivesq
__builtin_altivec_vdivesw
__builtin_altivec_vdiveud
__builtin_altivec_vdiveuq
__builtin_altivec_vdiveuw
__builtin_altivec_vexpandbm
__builtin_altivec_vexpanddm
__builtin_altivec_vexpandhm
__builtin_altivec_vexpandqm
__builtin_altivec_vexpandwm
__builtin_altivec_vexptefp
__builtin_altivec_vextddvlx
__builtin_altivec_vextddvrx
__builtin_altivec_vextdubvlx
__builtin_altivec_vextdubvrx
__builtin_altivec_vextduhvlx
__builtin_altivec_vextduhvrx
__builtin_altivec_vextduwvlx
__builtin_altivec_vextduwvrx
__builtin_altivec_vextractbm
__builtin_altivec_vextractdm
__builtin_altivec_vextracthm
__builtin_altivec_vextractqm
__builtin_altivec_vextractwm
__builtin_altivec_vextsb2d
__builtin_altivec_vextsb2w
__builtin_altivec_vextsd2q
__builtin_altivec_vextsh2d
__builtin_altivec_vextsh2w
__builtin_altivec_vextsw2d
__builtin_altivec_vgbbd
__builtin_altivec_vgnb
__builtin_altivec_vinsblx
__builtin_altivec_vinsbrx
__builtin_altivec_vinsbvlx
__builtin_altivec_vinsbvrx
__builtin_altivec_vinsdlx
__builtin_altivec_vinsdrx
__builtin_altivec_vinshlx
__builtin_altivec_vinshrx
__builtin_altivec_vinshvlx
__builtin_altivec_vinshvrx
__builtin_altivec_vinswlx
__builtin_altivec_vinswrx
__builtin_altivec_vinswvlx
__builtin_altivec_vinswvrx
__builtin_altivec_vlogefp
__builtin_altivec_vmaddfp
__builtin_altivec_vmaxfp
__builtin_altivec_vmaxsb
__builtin_altivec_vmaxsd
__builtin_altivec_vmaxsh
__builtin_altivec_vmaxsw
__builtin_altivec_vmaxub
__builtin_altivec_vmaxud
__builtin_altivec_vmaxuh
__builtin_altivec_vmaxuw
__builtin_altivec_vmhaddshs
__builtin_altivec_vmhraddshs
__builtin_altivec_vminfp
__builtin_altivec_vminsb
__builtin_altivec_vminsd
__builtin_altivec_vminsh
__builtin_altivec_vminsw
__builtin_altivec_vminub
__builtin_altivec_vminud
__builtin_altivec_vminuh
__builtin_altivec_vminuw
__builtin_altivec_vmladduhm
__builtin_altivec_vmsumcud
__builtin_altivec_vmsummbm
__builtin_altivec_vmsumshm
__builtin_altivec_vmsumshs
__builtin_altivec_vmsumubm
__builtin_altivec_vmsumudm
__builtin_altivec_vmsumuhm
__builtin_altivec_vmsumuhs
__builtin_altivec_vmulesb
__builtin_altivec_vmulesd
__builtin_altivec_vmulesh
__builtin_altivec_vmulesw
__builtin_altivec_vmuleub
__builtin_altivec_vmuleud
__builtin_altivec_vmuleuh
__builtin_altivec_vmuleuw
__builtin_altivec_vmulhsd
__builtin_altivec_vmulhsw
__builtin_altivec_vmulhud
__builtin_altivec_vmulhuw
__builtin_altivec_vmulosb
__builtin_altivec_vmulosd
__builtin_altivec_vmulosh
__builtin_altivec_vmulosw
__builtin_altivec_vmuloub
__builtin_altivec_vmuloud
__builtin_altivec_vmulouh
__builtin_altivec_vmulouw
__builtin_altivec_vnmsubfp
__builtin_altivec_vpdepd
__builtin_altivec_vperm_4si
__builtin_altivec_vpextd
__builtin_altivec_vpkpx
__builtin_altivec_vpksdss
__builtin_altivec_vpksdus
__builtin_altivec_vpkshss
__builtin_altivec_vpkshus
__builtin_altivec_vpkswss
__builtin_altivec_vpkswus
__builtin_altivec_vpkudus
__builtin_altivec_vpkuhus
__builtin_altivec_vpkuwus
__builtin_altivec_vprtybd
__builtin_altivec_vprtybq
__builtin_altivec_vprtybw
__builtin_altivec_vrefp
__builtin_altivec_vrfim
__builtin_altivec_vrfin
__builtin_altivec_vrfip
__builtin_altivec_vrfiz
__builtin_altivec_vrlb
__builtin_altivec_vrld
__builtin_altivec_vrldmi
__builtin_altivec_vrldnm
__builtin_altivec_vrlh
__builtin_altivec_vrlqmi
__builtin_altivec_vrlqnm
__builtin_altivec_vrlw
__builtin_altivec_vrlwmi
__builtin_altivec_vrlwnm
__builtin_altivec_vrsqrtefp
__builtin_altivec_vsel_4si
__builtin_altivec_vsl
__builtin_altivec_vslb
__builtin_altivec_vsldbi
__builtin_altivec_vslh
__builtin_altivec_vslo
__builtin_altivec_vslv
__builtin_altivec_vslw
__builtin_altivec_vsr
__builtin_altivec_vsrab
__builtin_altivec_vsrah
__builtin_altivec_vsraw
__builtin_altivec_vsrb
__builtin_altivec_vsrdbi
__builtin_altivec_vsrh
__builtin_altivec_vsro
__builtin_altivec_vsrv
__builtin_altivec_vsrw
__builtin_altivec_vstribl
__builtin_altivec_vstribl_p
__builtin_altivec_vstribr
__builtin_altivec_vstribr_p
__builtin_altivec_vstrihl
__builtin_altivec_vstrihl_p
__builtin_altivec_vstrihr
__builtin_altivec_vstrihr_p
__builtin_altivec_vsubcuq
__builtin_altivec_vsubcuw
__builtin_altivec_vsubecuq
__builtin_altivec_vsubeuqm
__builtin_altivec_vsubsbs
__builtin_altivec_vsubshs
__builtin_altivec_vsubsws
__builtin_altivec_vsububs
__builtin_altivec_vsubuhs
__builtin_altivec_vsubuws
__builtin_altivec_vsum2sws
__builtin_altivec_vsum4sbs
__builtin_altivec_vsum4shs
__builtin_altivec_vsum4ubs
__builtin_altivec_vsumsws
__builtin_altivec_vupkhpx
__builtin_altivec_vupkhsb
__builtin_altivec_vupkhsh
__builtin_altivec_vupkhsw
__builtin_altivec_vupklpx
__builtin_altivec_vupklsb
__builtin_altivec_vupklsh
__builtin_altivec_vupklsw
__builtin_bpermd
__builtin_cfuged
__builtin_cntlzdm
__builtin_cnttzdm
__builtin_darn
__builtin_darn_32
__builtin_darn_raw
__builtin_dcbf
__builtin_divde
__builtin_divdeu
__builtin_divf128_round_to_odd
__builtin_divwe
__builtin_divweu
__builtin_fmaf128_round_to_odd
__builtin_get_texasr
__builtin_get_texasru
__builtin_get_tfhar
__builtin_get_tfiar
__builtin_mulf128_round_to_odd
__builtin_pdepd
__builtin_pextd
__builtin_readflm
__builtin_vsx_scalar_extract_expq
__builtin_vsx_scalar_insert_exp_qp
__builtin_set_texasr
__builtin_set_texasru
__builtin_set_tfhar
__builtin_set_tfiar
__builtin_setflm
__builtin_setrnd
__builtin_sqrtf128_round_to_odd
__builtin_subf128_round_to_odd
__builtin_tabort
__builtin_tabortdc
__builtin_tabortdci
__builtin_tabortwc
__builtin_tabortwci
__builtin_tbegin
__builtin_tcheck
__builtin_tend
__builtin_tendall
__builtin_trechkpt
__builtin_treclaim
__builtin_tresume
__builtin_truncf128_round_to_odd
__builtin_tsr
__builtin_tsuspend
__builtin_ttest
__builtin_vsx_xsmaxdp
__builtin_vsx_xsmindp
__builtin_vsx_xvcmpeqdp
__builtin_vsx_xvcmpeqdp_p
__builtin_vsx_xvcmpeqsp
__builtin_vsx_xvcmpeqsp_p
__builtin_vsx_xvcmpgedp
__builtin_vsx_xvcmpgedp_p
__builtin_vsx_xvcmpgesp
__builtin_vsx_xvcmpgesp_p
__builtin_vsx_xvcmpgtdp
__builtin_vsx_xvcmpgtdp_p
__builtin_vsx_xvcmpgtsp
__builtin_vsx_xvcmpgtsp_p
__builtin_vsx_xvcvbf16spn
__builtin_vsx_xvcvdpsp
__builtin_vsx_xvcvdpsxws
__builtin_vsx_xvcvdpuxws
__builtin_vsx_xvcvhpsp
__builtin_vsx_xvcvspbf16
__builtin_vsx_xvcvspdp
__builtin_vsx_xvcvsphp
__builtin_vsx_xvcvsxdsp
__builtin_vsx_xvcvsxwdp
__builtin_vsx_xvcvuxdsp
__builtin_vsx_xvcvuxwdp
__builtin_vsx_xvdivdp
__builtin_vsx_xvdivsp
__builtin_vsx_xviexpdp
__builtin_vsx_xviexpsp
__builtin_vsx_xvmaxdp
__builtin_vsx_xvmaxsp
__builtin_vsx_xvmindp
__builtin_vsx_xvminsp
__builtin_vsx_xvredp
__builtin_vsx_xvresp
__builtin_vsx_xvrsqrtedp
__builtin_vsx_xvrsqrtesp
__builtin_vsx_xvtdivdp
__builtin_vsx_xvtdivsp
__builtin_vsx_xvtlsbb
__builtin_vsx_xvtsqrtdp
__builtin_vsx_xvtsqrtsp
__builtin_vsx_xvtstdcdp
__builtin_vsx_xvtstdcsp
__builtin_vsx_xvxexpdp
__builtin_vsx_xvxexpsp
__builtin_vsx_xvxsigdp
__builtin_vsx_xvxsigsp
__builtin_vsx_xxblendvb
__builtin_vsx_xxblendvd
__builtin_vsx_xxblendvh
__builtin_vsx_xxblendvw
__builtin_vsx_xxeval
__builtin_vsx_xxextractuw
__builtin_vsx_xxgenpcvbm
__builtin_vsx_xxgenpcvdm
__builtin_vsx_xxgenpcvhm
__builtin_vsx_xxgenpcvwm
__builtin_vsx_xxinsertw
__builtin_vsx_xxleqv
__builtin_vsx_xxpermx
__builtin_r600_group_barrier
__builtin_r600_implicitarg_ptr
__builtin_r600_rat_store_typed
__builtin_r600_read_global_size_x
__builtin_r600_read_global_size_y
__builtin_r600_read_global_size_z
__builtin_r600_read_ngroups_x
__builtin_r600_read_ngroups_y
__builtin_r600_read_ngroups_z
__builtin_r600_read_tgid_x
__builtin_r600_read_tgid_y
__builtin_r600_read_tgid_z
__builtin_s390_efpc
__builtin_tx_nesting_depth
__builtin_s390_lcbb
__builtin_tx_assist
__builtin_s390_sfpc
__builtin_s390_vaccb
__builtin_s390_vacccq
__builtin_s390_vaccf
__builtin_s390_vaccg
__builtin_s390_vacch
__builtin_s390_vaccq
__builtin_s390_vacq
__builtin_s390_vaq
__builtin_s390_vavgb
__builtin_s390_vavgf
__builtin_s390_vavgg
__builtin_s390_vavgh
__builtin_s390_vavglb
__builtin_s390_vavglf
__builtin_s390_vavglg
__builtin_s390_vavglh
__builtin_s390_vbperm
__builtin_s390_vcksm
__builtin_s390_verimb
__builtin_s390_verimf
__builtin_s390_verimg
__builtin_s390_verimh
__builtin_s390_verllb
__builtin_s390_verllf
__builtin_s390_verllg
__builtin_s390_verllh
__builtin_s390_verllvb
__builtin_s390_verllvf
__builtin_s390_verllvg
__builtin_s390_verllvh
__builtin_s390_vfaeb
__builtin_s390_vfaef
__builtin_s390_vfaeh
__builtin_s390_vfaezb
__builtin_s390_vfaezf
__builtin_s390_vfaezh
__builtin_s390_vfeeb
__builtin_s390_vfeef
__builtin_s390_vfeeh
__builtin_s390_vfeezb
__builtin_s390_vfeezf
__builtin_s390_vfeezh
__builtin_s390_vfeneb
__builtin_s390_vfenef
__builtin_s390_vfeneh
__builtin_s390_vfenezb
__builtin_s390_vfenezf
__builtin_s390_vfenezh
__builtin_s390_vgfmab
__builtin_s390_vgfmaf
__builtin_s390_vgfmag
__builtin_s390_vgfmah
__builtin_s390_vgfmb
__builtin_s390_vgfmf
__builtin_s390_vgfmg
__builtin_s390_vgfmh
__builtin_s390_vistrb
__builtin_s390_vistrf
__builtin_s390_vistrh
__builtin_s390_vlbb
__builtin_s390_vll
__builtin_s390_vlrl
__builtin_s390_vmaeb
__builtin_s390_vmaef
__builtin_s390_vmaeh
__builtin_s390_vmahb
__builtin_s390_vmahf
__builtin_s390_vmahh
__builtin_s390_vmaleb
__builtin_s390_vmalef
__builtin_s390_vmaleh
__builtin_s390_vmalhb
__builtin_s390_vmalhf
__builtin_s390_vmalhh
__builtin_s390_vmalob
__builtin_s390_vmalof
__builtin_s390_vmaloh
__builtin_s390_vmaob
__builtin_s390_vmaof
__builtin_s390_vmaoh
__builtin_s390_vmeb
__builtin_s390_vmef
__builtin_s390_vmeh
__builtin_s390_vmhb
__builtin_s390_vmhf
__builtin_s390_vmhh
__builtin_s390_vmleb
__builtin_s390_vmlef
__builtin_s390_vmleh
__builtin_s390_vmlhb
__builtin_s390_vmlhf
__builtin_s390_vmlhh
__builtin_s390_vmlob
__builtin_s390_vmlof
__builtin_s390_vmloh
__builtin_s390_vmob
__builtin_s390_vmof
__builtin_s390_vmoh
__builtin_s390_vmslg
__builtin_s390_vpdi
__builtin_s390_vperm
__builtin_s390_vpklsf
__builtin_s390_vpklsg
__builtin_s390_vpklsh
__builtin_s390_vpksf
__builtin_s390_vpksg
__builtin_s390_vpksh
__builtin_s390_vsbcbiq
__builtin_s390_vsbiq
__builtin_s390_vscbib
__builtin_s390_vscbif
__builtin_s390_vscbig
__builtin_s390_vscbih
__builtin_s390_vscbiq
__builtin_s390_vsl
__builtin_s390_vslb
__builtin_s390_vsld
__builtin_s390_vsldb
__builtin_s390_vsq
__builtin_s390_vsra
__builtin_s390_vsrab
__builtin_s390_vsrd
__builtin_s390_vsrl
__builtin_s390_vsrlb
__builtin_s390_vstl
__builtin_s390_vstrcb
__builtin_s390_vstrcf
__builtin_s390_vstrch
__builtin_s390_vstrczb
__builtin_s390_vstrczf
__builtin_s390_vstrczh
__builtin_s390_vstrl
__builtin_s390_vsumb
__builtin_s390_vsumgf
__builtin_s390_vsumgh
__builtin_s390_vsumh
__builtin_s390_vsumqf
__builtin_s390_vsumqg
__builtin_s390_vtm
__builtin_s390_vuphb
__builtin_s390_vuphf
__builtin_s390_vuphh
__builtin_s390_vuplb
__builtin_s390_vuplf
__builtin_s390_vuplhb
__builtin_s390_vuplhf
__builtin_s390_vuplhh
__builtin_s390_vuplhw
__builtin_s390_vupllb
__builtin_s390_vupllf
__builtin_s390_vupllh
__builtin_ve_vl_andm_MMM
__builtin_ve_vl_andm_mmm
__builtin_ve_vl_eqvm_MMM
__builtin_ve_vl_eqvm_mmm
__builtin_ve_vl_lsv_vvss
__builtin_ve_vl_lvm_MMss
__builtin_ve_vl_lvm_mmss
__builtin_ve_vl_lvsd_svs
__builtin_ve_vl_lvsl_svs
__builtin_ve_vl_lvss_svs
__builtin_ve_vl_lzvm_sml
__builtin_ve_vl_negm_MM
__builtin_ve_vl_negm_mm
__builtin_ve_vl_nndm_MMM
__builtin_ve_vl_nndm_mmm
__builtin_ve_vl_orm_MMM
__builtin_ve_vl_orm_mmm
__builtin_ve_vl_pcvm_sml
__builtin_ve_vl_pfchv_ssl
__builtin_ve_vl_pfchvnc_ssl
__builtin_ve_vl_pvadds_vsvMvl
__builtin_ve_vl_pvadds_vsvl
__builtin_ve_vl_pvadds_vsvvl
__builtin_ve_vl_pvadds_vvvMvl
__builtin_ve_vl_pvadds_vvvl
__builtin_ve_vl_pvadds_vvvvl
__builtin_ve_vl_pvaddu_vsvMvl
__builtin_ve_vl_pvaddu_vsvl
__builtin_ve_vl_pvaddu_vsvvl
__builtin_ve_vl_pvaddu_vvvMvl
__builtin_ve_vl_pvaddu_vvvl
__builtin_ve_vl_pvaddu_vvvvl
__builtin_ve_vl_pvand_vsvMvl
__builtin_ve_vl_pvand_vsvl
__builtin_ve_vl_pvand_vsvvl
__builtin_ve_vl_pvand_vvvMvl
__builtin_ve_vl_pvand_vvvl
__builtin_ve_vl_pvand_vvvvl
__builtin_ve_vl_pvbrd_vsMvl
__builtin_ve_vl_pvbrd_vsl
__builtin_ve_vl_pvbrd_vsvl
__builtin_ve_vl_pvcmps_vsvMvl
__builtin_ve_vl_pvcmps_vsvl
__builtin_ve_vl_pvcmps_vsvvl
__builtin_ve_vl_pvcmps_vvvMvl
__builtin_ve_vl_pvcmps_vvvl
__builtin_ve_vl_pvcmps_vvvvl
__builtin_ve_vl_pvcmpu_vsvMvl
__builtin_ve_vl_pvcmpu_vsvl
__builtin_ve_vl_pvcmpu_vsvvl
__builtin_ve_vl_pvcmpu_vvvMvl
__builtin_ve_vl_pvcmpu_vvvl
__builtin_ve_vl_pvcmpu_vvvvl
__builtin_ve_vl_pvcvtsw_vvl
__builtin_ve_vl_pvcvtsw_vvvl
__builtin_ve_vl_pvcvtws_vvMvl
__builtin_ve_vl_pvcvtws_vvl
__builtin_ve_vl_pvcvtws_vvvl
__builtin_ve_vl_pvcvtwsrz_vvMvl
__builtin_ve_vl_pvcvtwsrz_vvl
__builtin_ve_vl_pvcvtwsrz_vvvl
__builtin_ve_vl_pveqv_vsvMvl
__builtin_ve_vl_pveqv_vsvl
__builtin_ve_vl_pveqv_vsvvl
__builtin_ve_vl_pveqv_vvvMvl
__builtin_ve_vl_pveqv_vvvl
__builtin_ve_vl_pveqv_vvvvl
__builtin_ve_vl_pvfadd_vsvMvl
__builtin_ve_vl_pvfadd_vsvl
__builtin_ve_vl_pvfadd_vsvvl
__builtin_ve_vl_pvfadd_vvvMvl
__builtin_ve_vl_pvfadd_vvvl
__builtin_ve_vl_pvfadd_vvvvl
__builtin_ve_vl_pvfcmp_vsvMvl
__builtin_ve_vl_pvfcmp_vsvl
__builtin_ve_vl_pvfcmp_vsvvl
__builtin_ve_vl_pvfcmp_vvvMvl
__builtin_ve_vl_pvfcmp_vvvl
__builtin_ve_vl_pvfcmp_vvvvl
__builtin_ve_vl_pvfmad_vsvvMvl
__builtin_ve_vl_pvfmad_vsvvl
__builtin_ve_vl_pvfmad_vsvvvl
__builtin_ve_vl_pvfmad_vvsvMvl
__builtin_ve_vl_pvfmad_vvsvl
__builtin_ve_vl_pvfmad_vvsvvl
__builtin_ve_vl_pvfmad_vvvvMvl
__builtin_ve_vl_pvfmad_vvvvl
__builtin_ve_vl_pvfmad_vvvvvl
__builtin_ve_vl_pvfmax_vsvMvl
__builtin_ve_vl_pvfmax_vsvl
__builtin_ve_vl_pvfmax_vsvvl
__builtin_ve_vl_pvfmax_vvvMvl
__builtin_ve_vl_pvfmax_vvvl
__builtin_ve_vl_pvfmax_vvvvl
__builtin_ve_vl_pvfmin_vsvMvl
__builtin_ve_vl_pvfmin_vsvl
__builtin_ve_vl_pvfmin_vsvvl
__builtin_ve_vl_pvfmin_vvvMvl
__builtin_ve_vl_pvfmin_vvvl
__builtin_ve_vl_pvfmin_vvvvl
__builtin_ve_vl_pvfmkaf_Ml
__builtin_ve_vl_pvfmkat_Ml
__builtin_ve_vl_pvfmkseq_MvMl
__builtin_ve_vl_pvfmkseq_Mvl
__builtin_ve_vl_pvfmkseqnan_MvMl
__builtin_ve_vl_pvfmkseqnan_Mvl
__builtin_ve_vl_pvfmksge_MvMl
__builtin_ve_vl_pvfmksge_Mvl
__builtin_ve_vl_pvfmksgenan_MvMl
__builtin_ve_vl_pvfmksgenan_Mvl
__builtin_ve_vl_pvfmksgt_MvMl
__builtin_ve_vl_pvfmksgt_Mvl
__builtin_ve_vl_pvfmksgtnan_MvMl
__builtin_ve_vl_pvfmksgtnan_Mvl
__builtin_ve_vl_pvfmksle_MvMl
__builtin_ve_vl_pvfmksle_Mvl
__builtin_ve_vl_pvfmkslenan_MvMl
__builtin_ve_vl_pvfmkslenan_Mvl
__builtin_ve_vl_pvfmksloeq_mvl
__builtin_ve_vl_pvfmksloeq_mvml
__builtin_ve_vl_pvfmksloeqnan_mvl
__builtin_ve_vl_pvfmksloeqnan_mvml
__builtin_ve_vl_pvfmksloge_mvl
__builtin_ve_vl_pvfmksloge_mvml
__builtin_ve_vl_pvfmkslogenan_mvl
__builtin_ve_vl_pvfmkslogenan_mvml
__builtin_ve_vl_pvfmkslogt_mvl
__builtin_ve_vl_pvfmkslogt_mvml
__builtin_ve_vl_pvfmkslogtnan_mvl
__builtin_ve_vl_pvfmkslogtnan_mvml
__builtin_ve_vl_pvfmkslole_mvl
__builtin_ve_vl_pvfmkslole_mvml
__builtin_ve_vl_pvfmkslolenan_mvl
__builtin_ve_vl_pvfmkslolenan_mvml
__builtin_ve_vl_pvfmkslolt_mvl
__builtin_ve_vl_pvfmkslolt_mvml
__builtin_ve_vl_pvfmksloltnan_mvl
__builtin_ve_vl_pvfmksloltnan_mvml
__builtin_ve_vl_pvfmkslonan_mvl
__builtin_ve_vl_pvfmkslonan_mvml
__builtin_ve_vl_pvfmkslone_mvl
__builtin_ve_vl_pvfmkslone_mvml
__builtin_ve_vl_pvfmkslonenan_mvl
__builtin_ve_vl_pvfmkslonenan_mvml
__builtin_ve_vl_pvfmkslonum_mvl
__builtin_ve_vl_pvfmkslonum_mvml
__builtin_ve_vl_pvfmkslt_MvMl
__builtin_ve_vl_pvfmkslt_Mvl
__builtin_ve_vl_pvfmksltnan_MvMl
__builtin_ve_vl_pvfmksltnan_Mvl
__builtin_ve_vl_pvfmksnan_MvMl
__builtin_ve_vl_pvfmksnan_Mvl
__builtin_ve_vl_pvfmksne_MvMl
__builtin_ve_vl_pvfmksne_Mvl
__builtin_ve_vl_pvfmksnenan_MvMl
__builtin_ve_vl_pvfmksnenan_Mvl
__builtin_ve_vl_pvfmksnum_MvMl
__builtin_ve_vl_pvfmksnum_Mvl
__builtin_ve_vl_pvfmksupeq_mvl
__builtin_ve_vl_pvfmksupeq_mvml
__builtin_ve_vl_pvfmksupeqnan_mvl
__builtin_ve_vl_pvfmksupeqnan_mvml
__builtin_ve_vl_pvfmksupge_mvl
__builtin_ve_vl_pvfmksupge_mvml
__builtin_ve_vl_pvfmksupgenan_mvl
__builtin_ve_vl_pvfmksupgenan_mvml
__builtin_ve_vl_pvfmksupgt_mvl
__builtin_ve_vl_pvfmksupgt_mvml
__builtin_ve_vl_pvfmksupgtnan_mvl
__builtin_ve_vl_pvfmksupgtnan_mvml
__builtin_ve_vl_pvfmksuple_mvl
__builtin_ve_vl_pvfmksuple_mvml
__builtin_ve_vl_pvfmksuplenan_mvl
__builtin_ve_vl_pvfmksuplenan_mvml
__builtin_ve_vl_pvfmksuplt_mvl
__builtin_ve_vl_pvfmksuplt_mvml
__builtin_ve_vl_pvfmksupltnan_mvl
__builtin_ve_vl_pvfmksupltnan_mvml
__builtin_ve_vl_pvfmksupnan_mvl
__builtin_ve_vl_pvfmksupnan_mvml
__builtin_ve_vl_pvfmksupne_mvl
__builtin_ve_vl_pvfmksupne_mvml
__builtin_ve_vl_pvfmksupnenan_mvl
__builtin_ve_vl_pvfmksupnenan_mvml
__builtin_ve_vl_pvfmksupnum_mvl
__builtin_ve_vl_pvfmksupnum_mvml
__builtin_ve_vl_pvfmkweq_MvMl
__builtin_ve_vl_pvfmkweq_Mvl
__builtin_ve_vl_pvfmkweqnan_MvMl
__builtin_ve_vl_pvfmkweqnan_Mvl
__builtin_ve_vl_pvfmkwge_MvMl
__builtin_ve_vl_pvfmkwge_Mvl
__builtin_ve_vl_pvfmkwgenan_MvMl
__builtin_ve_vl_pvfmkwgenan_Mvl
__builtin_ve_vl_pvfmkwgt_MvMl
__builtin_ve_vl_pvfmkwgt_Mvl
__builtin_ve_vl_pvfmkwgtnan_MvMl
__builtin_ve_vl_pvfmkwgtnan_Mvl
__builtin_ve_vl_pvfmkwle_MvMl
__builtin_ve_vl_pvfmkwle_Mvl
__builtin_ve_vl_pvfmkwlenan_MvMl
__builtin_ve_vl_pvfmkwlenan_Mvl
__builtin_ve_vl_pvfmkwloeq_mvl
__builtin_ve_vl_pvfmkwloeq_mvml
__builtin_ve_vl_pvfmkwloeqnan_mvl
__builtin_ve_vl_pvfmkwloeqnan_mvml
__builtin_ve_vl_pvfmkwloge_mvl
__builtin_ve_vl_pvfmkwloge_mvml
__builtin_ve_vl_pvfmkwlogenan_mvl
__builtin_ve_vl_pvfmkwlogenan_mvml
__builtin_ve_vl_pvfmkwlogt_mvl
__builtin_ve_vl_pvfmkwlogt_mvml
__builtin_ve_vl_pvfmkwlogtnan_mvl
__builtin_ve_vl_pvfmkwlogtnan_mvml
__builtin_ve_vl_pvfmkwlole_mvl
__builtin_ve_vl_pvfmkwlole_mvml
__builtin_ve_vl_pvfmkwlolenan_mvl
__builtin_ve_vl_pvfmkwlolenan_mvml
__builtin_ve_vl_pvfmkwlolt_mvl
__builtin_ve_vl_pvfmkwlolt_mvml
__builtin_ve_vl_pvfmkwloltnan_mvl
__builtin_ve_vl_pvfmkwloltnan_mvml
__builtin_ve_vl_pvfmkwlonan_mvl
__builtin_ve_vl_pvfmkwlonan_mvml
__builtin_ve_vl_pvfmkwlone_mvl
__builtin_ve_vl_pvfmkwlone_mvml
__builtin_ve_vl_pvfmkwlonenan_mvl
__builtin_ve_vl_pvfmkwlonenan_mvml
__builtin_ve_vl_pvfmkwlonum_mvl
__builtin_ve_vl_pvfmkwlonum_mvml
__builtin_ve_vl_pvfmkwlt_MvMl
__builtin_ve_vl_pvfmkwlt_Mvl
__builtin_ve_vl_pvfmkwltnan_MvMl
__builtin_ve_vl_pvfmkwltnan_Mvl
__builtin_ve_vl_pvfmkwnan_MvMl
__builtin_ve_vl_pvfmkwnan_Mvl
__builtin_ve_vl_pvfmkwne_MvMl
__builtin_ve_vl_pvfmkwne_Mvl
__builtin_ve_vl_pvfmkwnenan_MvMl
__builtin_ve_vl_pvfmkwnenan_Mvl
__builtin_ve_vl_pvfmkwnum_MvMl
__builtin_ve_vl_pvfmkwnum_Mvl
__builtin_ve_vl_pvfmkwupeq_mvl
__builtin_ve_vl_pvfmkwupeq_mvml
__builtin_ve_vl_pvfmkwupeqnan_mvl
__builtin_ve_vl_pvfmkwupeqnan_mvml
__builtin_ve_vl_pvfmkwupge_mvl
__builtin_ve_vl_pvfmkwupge_mvml
__builtin_ve_vl_pvfmkwupgenan_mvl
__builtin_ve_vl_pvfmkwupgenan_mvml
__builtin_ve_vl_pvfmkwupgt_mvl
__builtin_ve_vl_pvfmkwupgt_mvml
__builtin_ve_vl_pvfmkwupgtnan_mvl
__builtin_ve_vl_pvfmkwupgtnan_mvml
__builtin_ve_vl_pvfmkwuple_mvl
__builtin_ve_vl_pvfmkwuple_mvml
__builtin_ve_vl_pvfmkwuplenan_mvl
__builtin_ve_vl_pvfmkwuplenan_mvml
__builtin_ve_vl_pvfmkwuplt_mvl
__builtin_ve_vl_pvfmkwuplt_mvml
__builtin_ve_vl_pvfmkwupltnan_mvl
__builtin_ve_vl_pvfmkwupltnan_mvml
__builtin_ve_vl_pvfmkwupnan_mvl
__builtin_ve_vl_pvfmkwupnan_mvml
__builtin_ve_vl_pvfmkwupne_mvl
__builtin_ve_vl_pvfmkwupne_mvml
__builtin_ve_vl_pvfmkwupnenan_mvl
__builtin_ve_vl_pvfmkwupnenan_mvml
__builtin_ve_vl_pvfmkwupnum_mvl
__builtin_ve_vl_pvfmkwupnum_mvml
__builtin_ve_vl_pvfmsb_vsvvMvl
__builtin_ve_vl_pvfmsb_vsvvl
__builtin_ve_vl_pvfmsb_vsvvvl
__builtin_ve_vl_pvfmsb_vvsvMvl
__builtin_ve_vl_pvfmsb_vvsvl
__builtin_ve_vl_pvfmsb_vvsvvl
__builtin_ve_vl_pvfmsb_vvvvMvl
__builtin_ve_vl_pvfmsb_vvvvl
__builtin_ve_vl_pvfmsb_vvvvvl
__builtin_ve_vl_pvfmul_vsvMvl
__builtin_ve_vl_pvfmul_vsvl
__builtin_ve_vl_pvfmul_vsvvl
__builtin_ve_vl_pvfmul_vvvMvl
__builtin_ve_vl_pvfmul_vvvl
__builtin_ve_vl_pvfmul_vvvvl
__builtin_ve_vl_pvfnmad_vsvvMvl
__builtin_ve_vl_pvfnmad_vsvvl
__builtin_ve_vl_pvfnmad_vsvvvl
__builtin_ve_vl_pvfnmad_vvsvMvl
__builtin_ve_vl_pvfnmad_vvsvl
__builtin_ve_vl_pvfnmad_vvsvvl
__builtin_ve_vl_pvfnmad_vvvvMvl
__builtin_ve_vl_pvfnmad_vvvvl
__builtin_ve_vl_pvfnmad_vvvvvl
__builtin_ve_vl_pvfnmsb_vsvvMvl
__builtin_ve_vl_pvfnmsb_vsvvl
__builtin_ve_vl_pvfnmsb_vsvvvl
__builtin_ve_vl_pvfnmsb_vvsvMvl
__builtin_ve_vl_pvfnmsb_vvsvl
__builtin_ve_vl_pvfnmsb_vvsvvl
__builtin_ve_vl_pvfnmsb_vvvvMvl
__builtin_ve_vl_pvfnmsb_vvvvl
__builtin_ve_vl_pvfnmsb_vvvvvl
__builtin_ve_vl_pvfsub_vsvMvl
__builtin_ve_vl_pvfsub_vsvl
__builtin_ve_vl_pvfsub_vsvvl
__builtin_ve_vl_pvfsub_vvvMvl
__builtin_ve_vl_pvfsub_vvvl
__builtin_ve_vl_pvfsub_vvvvl
__builtin_ve_vl_pvmaxs_vsvMvl
__builtin_ve_vl_pvmaxs_vsvl
__builtin_ve_vl_pvmaxs_vsvvl
__builtin_ve_vl_pvmaxs_vvvMvl
__builtin_ve_vl_pvmaxs_vvvl
__builtin_ve_vl_pvmaxs_vvvvl
__builtin_ve_vl_pvmins_vsvMvl
__builtin_ve_vl_pvmins_vsvl
__builtin_ve_vl_pvmins_vsvvl
__builtin_ve_vl_pvmins_vvvMvl
__builtin_ve_vl_pvmins_vvvl
__builtin_ve_vl_pvmins_vvvvl
__builtin_ve_vl_pvor_vsvMvl
__builtin_ve_vl_pvor_vsvl
__builtin_ve_vl_pvor_vsvvl
__builtin_ve_vl_pvor_vvvMvl
__builtin_ve_vl_pvor_vvvl
__builtin_ve_vl_pvor_vvvvl
__builtin_ve_vl_pvrcp_vvl
__builtin_ve_vl_pvrcp_vvvl
__builtin_ve_vl_pvrsqrt_vvl
__builtin_ve_vl_pvrsqrt_vvvl
__builtin_ve_vl_pvrsqrtnex_vvl
__builtin_ve_vl_pvrsqrtnex_vvvl
__builtin_ve_vl_pvseq_vl
__builtin_ve_vl_pvseq_vvl
__builtin_ve_vl_pvseqlo_vl
__builtin_ve_vl_pvseqlo_vvl
__builtin_ve_vl_pvsequp_vl
__builtin_ve_vl_pvsequp_vvl
__builtin_ve_vl_pvsla_vvsMvl
__builtin_ve_vl_pvsla_vvsl
__builtin_ve_vl_pvsla_vvsvl
__builtin_ve_vl_pvsla_vvvMvl
__builtin_ve_vl_pvsla_vvvl
__builtin_ve_vl_pvsla_vvvvl
__builtin_ve_vl_pvsll_vvsMvl
__builtin_ve_vl_pvsll_vvsl
__builtin_ve_vl_pvsll_vvsvl
__builtin_ve_vl_pvsll_vvvMvl
__builtin_ve_vl_pvsll_vvvl
__builtin_ve_vl_pvsll_vvvvl
__builtin_ve_vl_pvsra_vvsMvl
__builtin_ve_vl_pvsra_vvsl
__builtin_ve_vl_pvsra_vvsvl
__builtin_ve_vl_pvsra_vvvMvl
__builtin_ve_vl_pvsra_vvvl
__builtin_ve_vl_pvsra_vvvvl
__builtin_ve_vl_pvsrl_vvsMvl
__builtin_ve_vl_pvsrl_vvsl
__builtin_ve_vl_pvsrl_vvsvl
__builtin_ve_vl_pvsrl_vvvMvl
__builtin_ve_vl_pvsrl_vvvl
__builtin_ve_vl_pvsrl_vvvvl
__builtin_ve_vl_pvsubs_vsvMvl
__builtin_ve_vl_pvsubs_vsvl
__builtin_ve_vl_pvsubs_vsvvl
__builtin_ve_vl_pvsubs_vvvMvl
__builtin_ve_vl_pvsubs_vvvl
__builtin_ve_vl_pvsubs_vvvvl
__builtin_ve_vl_pvsubu_vsvMvl
__builtin_ve_vl_pvsubu_vsvl
__builtin_ve_vl_pvsubu_vsvvl
__builtin_ve_vl_pvsubu_vvvMvl
__builtin_ve_vl_pvsubu_vvvl
__builtin_ve_vl_pvsubu_vvvvl
__builtin_ve_vl_pvxor_vsvMvl
__builtin_ve_vl_pvxor_vsvl
__builtin_ve_vl_pvxor_vsvvl
__builtin_ve_vl_pvxor_vvvMvl
__builtin_ve_vl_pvxor_vvvl
__builtin_ve_vl_pvxor_vvvvl
__builtin_ve_vl_svm_sMs
__builtin_ve_vl_svm_sms
__builtin_ve_vl_tovm_sml
__builtin_ve_vl_vaddsl_vsvl
__builtin_ve_vl_vaddsl_vsvmvl
__builtin_ve_vl_vaddsl_vsvvl
__builtin_ve_vl_vaddsl_vvvl
__builtin_ve_vl_vaddsl_vvvmvl
__builtin_ve_vl_vaddsl_vvvvl
__builtin_ve_vl_vaddswsx_vsvl
__builtin_ve_vl_vaddswsx_vsvmvl
__builtin_ve_vl_vaddswsx_vsvvl
__builtin_ve_vl_vaddswsx_vvvl
__builtin_ve_vl_vaddswsx_vvvmvl
__builtin_ve_vl_vaddswsx_vvvvl
__builtin_ve_vl_vaddswzx_vsvl
__builtin_ve_vl_vaddswzx_vsvmvl
__builtin_ve_vl_vaddswzx_vsvvl
__builtin_ve_vl_vaddswzx_vvvl
__builtin_ve_vl_vaddswzx_vvvmvl
__builtin_ve_vl_vaddswzx_vvvvl
__builtin_ve_vl_vaddul_vsvl
__builtin_ve_vl_vaddul_vsvmvl
__builtin_ve_vl_vaddul_vsvvl
__builtin_ve_vl_vaddul_vvvl
__builtin_ve_vl_vaddul_vvvmvl
__builtin_ve_vl_vaddul_vvvvl
__builtin_ve_vl_vadduw_vsvl
__builtin_ve_vl_vadduw_vsvmvl
__builtin_ve_vl_vadduw_vsvvl
__builtin_ve_vl_vadduw_vvvl
__builtin_ve_vl_vadduw_vvvmvl
__builtin_ve_vl_vadduw_vvvvl
__builtin_ve_vl_vand_vsvl
__builtin_ve_vl_vand_vsvmvl
__builtin_ve_vl_vand_vsvvl
__builtin_ve_vl_vand_vvvl
__builtin_ve_vl_vand_vvvmvl
__builtin_ve_vl_vand_vvvvl
__builtin_ve_vl_vbrdd_vsl
__builtin_ve_vl_vbrdd_vsmvl
__builtin_ve_vl_vbrdd_vsvl
__builtin_ve_vl_vbrdl_vsl
__builtin_ve_vl_vbrdl_vsmvl
__builtin_ve_vl_vbrdl_vsvl
__builtin_ve_vl_vbrds_vsl
__builtin_ve_vl_vbrds_vsmvl
__builtin_ve_vl_vbrds_vsvl
__builtin_ve_vl_vbrdw_vsl
__builtin_ve_vl_vbrdw_vsmvl
__builtin_ve_vl_vbrdw_vsvl
__builtin_ve_vl_vcmpsl_vsvl
__builtin_ve_vl_vcmpsl_vsvmvl
__builtin_ve_vl_vcmpsl_vsvvl
__builtin_ve_vl_vcmpsl_vvvl
__builtin_ve_vl_vcmpsl_vvvmvl
__builtin_ve_vl_vcmpsl_vvvvl
__builtin_ve_vl_vcmpswsx_vsvl
__builtin_ve_vl_vcmpswsx_vsvmvl
__builtin_ve_vl_vcmpswsx_vsvvl
__builtin_ve_vl_vcmpswsx_vvvl
__builtin_ve_vl_vcmpswsx_vvvmvl
__builtin_ve_vl_vcmpswsx_vvvvl
__builtin_ve_vl_vcmpswzx_vsvl
__builtin_ve_vl_vcmpswzx_vsvmvl
__builtin_ve_vl_vcmpswzx_vsvvl
__builtin_ve_vl_vcmpswzx_vvvl
__builtin_ve_vl_vcmpswzx_vvvmvl
__builtin_ve_vl_vcmpswzx_vvvvl
__builtin_ve_vl_vcmpul_vsvl
__builtin_ve_vl_vcmpul_vsvmvl
__builtin_ve_vl_vcmpul_vsvvl
__builtin_ve_vl_vcmpul_vvvl
__builtin_ve_vl_vcmpul_vvvmvl
__builtin_ve_vl_vcmpul_vvvvl
__builtin_ve_vl_vcmpuw_vsvl
__builtin_ve_vl_vcmpuw_vsvmvl
__builtin_ve_vl_vcmpuw_vsvvl
__builtin_ve_vl_vcmpuw_vvvl
__builtin_ve_vl_vcmpuw_vvvmvl
__builtin_ve_vl_vcmpuw_vvvvl
__builtin_ve_vl_vcp_vvmvl
__builtin_ve_vl_vcvtdl_vvl
__builtin_ve_vl_vcvtdl_vvvl
__builtin_ve_vl_vcvtds_vvl
__builtin_ve_vl_vcvtds_vvvl
__builtin_ve_vl_vcvtdw_vvl
__builtin_ve_vl_vcvtdw_vvvl
__builtin_ve_vl_vcvtld_vvl
__builtin_ve_vl_vcvtld_vvmvl
__builtin_ve_vl_vcvtld_vvvl
__builtin_ve_vl_vcvtldrz_vvl
__builtin_ve_vl_vcvtldrz_vvmvl
__builtin_ve_vl_vcvtldrz_vvvl
__builtin_ve_vl_vcvtsd_vvl
__builtin_ve_vl_vcvtsd_vvvl
__builtin_ve_vl_vcvtsw_vvl
__builtin_ve_vl_vcvtsw_vvvl
__builtin_ve_vl_vcvtwdsx_vvl
__builtin_ve_vl_vcvtwdsx_vvmvl
__builtin_ve_vl_vcvtwdsx_vvvl
__builtin_ve_vl_vcvtwdsxrz_vvl
__builtin_ve_vl_vcvtwdsxrz_vvmvl
__builtin_ve_vl_vcvtwdsxrz_vvvl
__builtin_ve_vl_vcvtwdzx_vvl
__builtin_ve_vl_vcvtwdzx_vvmvl
__builtin_ve_vl_vcvtwdzx_vvvl
__builtin_ve_vl_vcvtwdzxrz_vvl
__builtin_ve_vl_vcvtwdzxrz_vvmvl
__builtin_ve_vl_vcvtwdzxrz_vvvl
__builtin_ve_vl_vcvtwssx_vvl
__builtin_ve_vl_vcvtwssx_vvmvl
__builtin_ve_vl_vcvtwssx_vvvl
__builtin_ve_vl_vcvtwssxrz_vvl
__builtin_ve_vl_vcvtwssxrz_vvmvl
__builtin_ve_vl_vcvtwssxrz_vvvl
__builtin_ve_vl_vcvtwszx_vvl
__builtin_ve_vl_vcvtwszx_vvmvl
__builtin_ve_vl_vcvtwszx_vvvl
__builtin_ve_vl_vcvtwszxrz_vvl
__builtin_ve_vl_vcvtwszxrz_vvmvl
__builtin_ve_vl_vcvtwszxrz_vvvl
__builtin_ve_vl_vdivsl_vsvl
__builtin_ve_vl_vdivsl_vsvmvl
__builtin_ve_vl_vdivsl_vsvvl
__builtin_ve_vl_vdivsl_vvsl
__builtin_ve_vl_vdivsl_vvsmvl
__builtin_ve_vl_vdivsl_vvsvl
__builtin_ve_vl_vdivsl_vvvl
__builtin_ve_vl_vdivsl_vvvmvl
__builtin_ve_vl_vdivsl_vvvvl
__builtin_ve_vl_vdivswsx_vsvl
__builtin_ve_vl_vdivswsx_vsvmvl
__builtin_ve_vl_vdivswsx_vsvvl
__builtin_ve_vl_vdivswsx_vvsl
__builtin_ve_vl_vdivswsx_vvsmvl
__builtin_ve_vl_vdivswsx_vvsvl
__builtin_ve_vl_vdivswsx_vvvl
__builtin_ve_vl_vdivswsx_vvvmvl
__builtin_ve_vl_vdivswsx_vvvvl
__builtin_ve_vl_vdivswzx_vsvl
__builtin_ve_vl_vdivswzx_vsvmvl
__builtin_ve_vl_vdivswzx_vsvvl
__builtin_ve_vl_vdivswzx_vvsl
__builtin_ve_vl_vdivswzx_vvsmvl
__builtin_ve_vl_vdivswzx_vvsvl
__builtin_ve_vl_vdivswzx_vvvl
__builtin_ve_vl_vdivswzx_vvvmvl
__builtin_ve_vl_vdivswzx_vvvvl
__builtin_ve_vl_vdivul_vsvl
__builtin_ve_vl_vdivul_vsvmvl
__builtin_ve_vl_vdivul_vsvvl
__builtin_ve_vl_vdivul_vvsl
__builtin_ve_vl_vdivul_vvsmvl
__builtin_ve_vl_vdivul_vvsvl
__builtin_ve_vl_vdivul_vvvl
__builtin_ve_vl_vdivul_vvvmvl
__builtin_ve_vl_vdivul_vvvvl
__builtin_ve_vl_vdivuw_vsvl
__builtin_ve_vl_vdivuw_vsvmvl
__builtin_ve_vl_vdivuw_vsvvl
__builtin_ve_vl_vdivuw_vvsl
__builtin_ve_vl_vdivuw_vvsmvl
__builtin_ve_vl_vdivuw_vvsvl
__builtin_ve_vl_vdivuw_vvvl
__builtin_ve_vl_vdivuw_vvvmvl
__builtin_ve_vl_vdivuw_vvvvl
__builtin_ve_vl_veqv_vsvl
__builtin_ve_vl_veqv_vsvmvl
__builtin_ve_vl_veqv_vsvvl
__builtin_ve_vl_veqv_vvvl
__builtin_ve_vl_veqv_vvvmvl
__builtin_ve_vl_veqv_vvvvl
__builtin_ve_vl_vex_vvmvl
__builtin_ve_vl_vfaddd_vsvl
__builtin_ve_vl_vfaddd_vsvmvl
__builtin_ve_vl_vfaddd_vsvvl
__builtin_ve_vl_vfaddd_vvvl
__builtin_ve_vl_vfaddd_vvvmvl
__builtin_ve_vl_vfaddd_vvvvl
__builtin_ve_vl_vfadds_vsvl
__builtin_ve_vl_vfadds_vsvmvl
__builtin_ve_vl_vfadds_vsvvl
__builtin_ve_vl_vfadds_vvvl
__builtin_ve_vl_vfadds_vvvmvl
__builtin_ve_vl_vfadds_vvvvl
__builtin_ve_vl_vfcmpd_vsvl
__builtin_ve_vl_vfcmpd_vsvmvl
__builtin_ve_vl_vfcmpd_vsvvl
__builtin_ve_vl_vfcmpd_vvvl
__builtin_ve_vl_vfcmpd_vvvmvl
__builtin_ve_vl_vfcmpd_vvvvl
__builtin_ve_vl_vfcmps_vsvl
__builtin_ve_vl_vfcmps_vsvmvl
__builtin_ve_vl_vfcmps_vsvvl
__builtin_ve_vl_vfcmps_vvvl
__builtin_ve_vl_vfcmps_vvvmvl
__builtin_ve_vl_vfcmps_vvvvl
__builtin_ve_vl_vfdivd_vsvl
__builtin_ve_vl_vfdivd_vsvmvl
__builtin_ve_vl_vfdivd_vsvvl
__builtin_ve_vl_vfdivd_vvvl
__builtin_ve_vl_vfdivd_vvvmvl
__builtin_ve_vl_vfdivd_vvvvl
__builtin_ve_vl_vfdivs_vsvl
__builtin_ve_vl_vfdivs_vsvmvl
__builtin_ve_vl_vfdivs_vsvvl
__builtin_ve_vl_vfdivs_vvvl
__builtin_ve_vl_vfdivs_vvvmvl
__builtin_ve_vl_vfdivs_vvvvl
__builtin_ve_vl_vfmadd_vsvvl
__builtin_ve_vl_vfmadd_vsvvmvl
__builtin_ve_vl_vfmadd_vsvvvl
__builtin_ve_vl_vfmadd_vvsvl
__builtin_ve_vl_vfmadd_vvsvmvl
__builtin_ve_vl_vfmadd_vvsvvl
__builtin_ve_vl_vfmadd_vvvvl
__builtin_ve_vl_vfmadd_vvvvmvl
__builtin_ve_vl_vfmadd_vvvvvl
__builtin_ve_vl_vfmads_vsvvl
__builtin_ve_vl_vfmads_vsvvmvl
__builtin_ve_vl_vfmads_vsvvvl
__builtin_ve_vl_vfmads_vvsvl
__builtin_ve_vl_vfmads_vvsvmvl
__builtin_ve_vl_vfmads_vvsvvl
__builtin_ve_vl_vfmads_vvvvl
__builtin_ve_vl_vfmads_vvvvmvl
__builtin_ve_vl_vfmads_vvvvvl
__builtin_ve_vl_vfmaxd_vsvl
__builtin_ve_vl_vfmaxd_vsvmvl
__builtin_ve_vl_vfmaxd_vsvvl
__builtin_ve_vl_vfmaxd_vvvl
__builtin_ve_vl_vfmaxd_vvvmvl
__builtin_ve_vl_vfmaxd_vvvvl
__builtin_ve_vl_vfmaxs_vsvl
__builtin_ve_vl_vfmaxs_vsvmvl
__builtin_ve_vl_vfmaxs_vsvvl
__builtin_ve_vl_vfmaxs_vvvl
__builtin_ve_vl_vfmaxs_vvvmvl
__builtin_ve_vl_vfmaxs_vvvvl
__builtin_ve_vl_vfmind_vsvl
__builtin_ve_vl_vfmind_vsvmvl
__builtin_ve_vl_vfmind_vsvvl
__builtin_ve_vl_vfmind_vvvl
__builtin_ve_vl_vfmind_vvvmvl
__builtin_ve_vl_vfmind_vvvvl
__builtin_ve_vl_vfmins_vsvl
__builtin_ve_vl_vfmins_vsvmvl
__builtin_ve_vl_vfmins_vsvvl
__builtin_ve_vl_vfmins_vvvl
__builtin_ve_vl_vfmins_vvvmvl
__builtin_ve_vl_vfmins_vvvvl
__builtin_ve_vl_vfmkdeq_mvl
__builtin_ve_vl_vfmkdeq_mvml
__builtin_ve_vl_vfmkdeqnan_mvl
__builtin_ve_vl_vfmkdeqnan_mvml
__builtin_ve_vl_vfmkdge_mvl
__builtin_ve_vl_vfmkdge_mvml
__builtin_ve_vl_vfmkdgenan_mvl
__builtin_ve_vl_vfmkdgenan_mvml
__builtin_ve_vl_vfmkdgt_mvl
__builtin_ve_vl_vfmkdgt_mvml
__builtin_ve_vl_vfmkdgtnan_mvl
__builtin_ve_vl_vfmkdgtnan_mvml
__builtin_ve_vl_vfmkdle_mvl
__builtin_ve_vl_vfmkdle_mvml
__builtin_ve_vl_vfmkdlenan_mvl
__builtin_ve_vl_vfmkdlenan_mvml
__builtin_ve_vl_vfmkdlt_mvl
__builtin_ve_vl_vfmkdlt_mvml
__builtin_ve_vl_vfmkdltnan_mvl
__builtin_ve_vl_vfmkdltnan_mvml
__builtin_ve_vl_vfmkdnan_mvl
__builtin_ve_vl_vfmkdnan_mvml
__builtin_ve_vl_vfmkdne_mvl
__builtin_ve_vl_vfmkdne_mvml
__builtin_ve_vl_vfmkdnenan_mvl
__builtin_ve_vl_vfmkdnenan_mvml
__builtin_ve_vl_vfmkdnum_mvl
__builtin_ve_vl_vfmkdnum_mvml
__builtin_ve_vl_vfmklaf_ml
__builtin_ve_vl_vfmklat_ml
__builtin_ve_vl_vfmkleq_mvl
__builtin_ve_vl_vfmkleq_mvml
__builtin_ve_vl_vfmkleqnan_mvl
__builtin_ve_vl_vfmkleqnan_mvml
__builtin_ve_vl_vfmklge_mvl
__builtin_ve_vl_vfmklge_mvml
__builtin_ve_vl_vfmklgenan_mvl
__builtin_ve_vl_vfmklgenan_mvml
__builtin_ve_vl_vfmklgt_mvl
__builtin_ve_vl_vfmklgt_mvml
__builtin_ve_vl_vfmklgtnan_mvl
__builtin_ve_vl_vfmklgtnan_mvml
__builtin_ve_vl_vfmklle_mvl
__builtin_ve_vl_vfmklle_mvml
__builtin_ve_vl_vfmkllenan_mvl
__builtin_ve_vl_vfmkllenan_mvml
__builtin_ve_vl_vfmkllt_mvl
__builtin_ve_vl_vfmkllt_mvml
__builtin_ve_vl_vfmklltnan_mvl
__builtin_ve_vl_vfmklltnan_mvml
__builtin_ve_vl_vfmklnan_mvl
__builtin_ve_vl_vfmklnan_mvml
__builtin_ve_vl_vfmklne_mvl
__builtin_ve_vl_vfmklne_mvml
__builtin_ve_vl_vfmklnenan_mvl
__builtin_ve_vl_vfmklnenan_mvml
__builtin_ve_vl_vfmklnum_mvl
__builtin_ve_vl_vfmklnum_mvml
__builtin_ve_vl_vfmkseq_mvl
__builtin_ve_vl_vfmkseq_mvml
__builtin_ve_vl_vfmkseqnan_mvl
__builtin_ve_vl_vfmkseqnan_mvml
__builtin_ve_vl_vfmksge_mvl
__builtin_ve_vl_vfmksge_mvml
__builtin_ve_vl_vfmksgenan_mvl
__builtin_ve_vl_vfmksgenan_mvml
__builtin_ve_vl_vfmksgt_mvl
__builtin_ve_vl_vfmksgt_mvml
__builtin_ve_vl_vfmksgtnan_mvl
__builtin_ve_vl_vfmksgtnan_mvml
__builtin_ve_vl_vfmksle_mvl
__builtin_ve_vl_vfmksle_mvml
__builtin_ve_vl_vfmkslenan_mvl
__builtin_ve_vl_vfmkslenan_mvml
__builtin_ve_vl_vfmkslt_mvl
__builtin_ve_vl_vfmkslt_mvml
__builtin_ve_vl_vfmksltnan_mvl
__builtin_ve_vl_vfmksltnan_mvml
__builtin_ve_vl_vfmksnan_mvl
__builtin_ve_vl_vfmksnan_mvml
__builtin_ve_vl_vfmksne_mvl
__builtin_ve_vl_vfmksne_mvml
__builtin_ve_vl_vfmksnenan_mvl
__builtin_ve_vl_vfmksnenan_mvml
__builtin_ve_vl_vfmksnum_mvl
__builtin_ve_vl_vfmksnum_mvml
__builtin_ve_vl_vfmkweq_mvl
__builtin_ve_vl_vfmkweq_mvml
__builtin_ve_vl_vfmkweqnan_mvl
__builtin_ve_vl_vfmkweqnan_mvml
__builtin_ve_vl_vfmkwge_mvl
__builtin_ve_vl_vfmkwge_mvml
__builtin_ve_vl_vfmkwgenan_mvl
__builtin_ve_vl_vfmkwgenan_mvml
__builtin_ve_vl_vfmkwgt_mvl
__builtin_ve_vl_vfmkwgt_mvml
__builtin_ve_vl_vfmkwgtnan_mvl
__builtin_ve_vl_vfmkwgtnan_mvml
__builtin_ve_vl_vfmkwle_mvl
__builtin_ve_vl_vfmkwle_mvml
__builtin_ve_vl_vfmkwlenan_mvl
__builtin_ve_vl_vfmkwlenan_mvml
__builtin_ve_vl_vfmkwlt_mvl
__builtin_ve_vl_vfmkwlt_mvml
__builtin_ve_vl_vfmkwltnan_mvl
__builtin_ve_vl_vfmkwltnan_mvml
__builtin_ve_vl_vfmkwnan_mvl
__builtin_ve_vl_vfmkwnan_mvml
__builtin_ve_vl_vfmkwne_mvl
__builtin_ve_vl_vfmkwne_mvml
__builtin_ve_vl_vfmkwnenan_mvl
__builtin_ve_vl_vfmkwnenan_mvml
__builtin_ve_vl_vfmkwnum_mvl
__builtin_ve_vl_vfmkwnum_mvml
__builtin_ve_vl_vfmsbd_vsvvl
__builtin_ve_vl_vfmsbd_vsvvmvl
__builtin_ve_vl_vfmsbd_vsvvvl
__builtin_ve_vl_vfmsbd_vvsvl
__builtin_ve_vl_vfmsbd_vvsvmvl
__builtin_ve_vl_vfmsbd_vvsvvl
__builtin_ve_vl_vfmsbd_vvvvl
__builtin_ve_vl_vfmsbd_vvvvmvl
__builtin_ve_vl_vfmsbd_vvvvvl
__builtin_ve_vl_vfmsbs_vsvvl
__builtin_ve_vl_vfmsbs_vsvvmvl
__builtin_ve_vl_vfmsbs_vsvvvl
__builtin_ve_vl_vfmsbs_vvsvl
__builtin_ve_vl_vfmsbs_vvsvmvl
__builtin_ve_vl_vfmsbs_vvsvvl
__builtin_ve_vl_vfmsbs_vvvvl
__builtin_ve_vl_vfmsbs_vvvvmvl
__builtin_ve_vl_vfmsbs_vvvvvl
__builtin_ve_vl_vfmuld_vsvl
__builtin_ve_vl_vfmuld_vsvmvl
__builtin_ve_vl_vfmuld_vsvvl
__builtin_ve_vl_vfmuld_vvvl
__builtin_ve_vl_vfmuld_vvvmvl
__builtin_ve_vl_vfmuld_vvvvl
__builtin_ve_vl_vfmuls_vsvl
__builtin_ve_vl_vfmuls_vsvmvl
__builtin_ve_vl_vfmuls_vsvvl
__builtin_ve_vl_vfmuls_vvvl
__builtin_ve_vl_vfmuls_vvvmvl
__builtin_ve_vl_vfmuls_vvvvl
__builtin_ve_vl_vfnmadd_vsvvl
__builtin_ve_vl_vfnmadd_vsvvmvl
__builtin_ve_vl_vfnmadd_vsvvvl
__builtin_ve_vl_vfnmadd_vvsvl
__builtin_ve_vl_vfnmadd_vvsvmvl
__builtin_ve_vl_vfnmadd_vvsvvl
__builtin_ve_vl_vfnmadd_vvvvl
__builtin_ve_vl_vfnmadd_vvvvmvl
__builtin_ve_vl_vfnmadd_vvvvvl
__builtin_ve_vl_vfnmads_vsvvl
__builtin_ve_vl_vfnmads_vsvvmvl
__builtin_ve_vl_vfnmads_vsvvvl
__builtin_ve_vl_vfnmads_vvsvl
__builtin_ve_vl_vfnmads_vvsvmvl
__builtin_ve_vl_vfnmads_vvsvvl
__builtin_ve_vl_vfnmads_vvvvl
__builtin_ve_vl_vfnmads_vvvvmvl
__builtin_ve_vl_vfnmads_vvvvvl
__builtin_ve_vl_vfnmsbd_vsvvl
__builtin_ve_vl_vfnmsbd_vsvvmvl
__builtin_ve_vl_vfnmsbd_vsvvvl
__builtin_ve_vl_vfnmsbd_vvsvl
__builtin_ve_vl_vfnmsbd_vvsvmvl
__builtin_ve_vl_vfnmsbd_vvsvvl
__builtin_ve_vl_vfnmsbd_vvvvl
__builtin_ve_vl_vfnmsbd_vvvvmvl
__builtin_ve_vl_vfnmsbd_vvvvvl
__builtin_ve_vl_vfnmsbs_vsvvl
__builtin_ve_vl_vfnmsbs_vsvvmvl
__builtin_ve_vl_vfnmsbs_vsvvvl
__builtin_ve_vl_vfnmsbs_vvsvl
__builtin_ve_vl_vfnmsbs_vvsvmvl
__builtin_ve_vl_vfnmsbs_vvsvvl
__builtin_ve_vl_vfnmsbs_vvvvl
__builtin_ve_vl_vfnmsbs_vvvvmvl
__builtin_ve_vl_vfnmsbs_vvvvvl
__builtin_ve_vl_vfrmaxdfst_vvl
__builtin_ve_vl_vfrmaxdfst_vvvl
__builtin_ve_vl_vfrmaxdlst_vvl
__builtin_ve_vl_vfrmaxdlst_vvvl
__builtin_ve_vl_vfrmaxsfst_vvl
__builtin_ve_vl_vfrmaxsfst_vvvl
__builtin_ve_vl_vfrmaxslst_vvl
__builtin_ve_vl_vfrmaxslst_vvvl
__builtin_ve_vl_vfrmindfst_vvl
__builtin_ve_vl_vfrmindfst_vvvl
__builtin_ve_vl_vfrmindlst_vvl
__builtin_ve_vl_vfrmindlst_vvvl
__builtin_ve_vl_vfrminsfst_vvl
__builtin_ve_vl_vfrminsfst_vvvl
__builtin_ve_vl_vfrminslst_vvl
__builtin_ve_vl_vfrminslst_vvvl
__builtin_ve_vl_vfsqrtd_vvl
__builtin_ve_vl_vfsqrtd_vvvl
__builtin_ve_vl_vfsqrts_vvl
__builtin_ve_vl_vfsqrts_vvvl
__builtin_ve_vl_vfsubd_vsvl
__builtin_ve_vl_vfsubd_vsvmvl
__builtin_ve_vl_vfsubd_vsvvl
__builtin_ve_vl_vfsubd_vvvl
__builtin_ve_vl_vfsubd_vvvmvl
__builtin_ve_vl_vfsubd_vvvvl
__builtin_ve_vl_vfsubs_vsvl
__builtin_ve_vl_vfsubs_vsvmvl
__builtin_ve_vl_vfsubs_vsvvl
__builtin_ve_vl_vfsubs_vvvl
__builtin_ve_vl_vfsubs_vvvmvl
__builtin_ve_vl_vfsubs_vvvvl
__builtin_ve_vl_vfsumd_vvl
__builtin_ve_vl_vfsumd_vvml
__builtin_ve_vl_vfsums_vvl
__builtin_ve_vl_vfsums_vvml
__builtin_ve_vl_vgt_vvssl
__builtin_ve_vl_vgt_vvssml
__builtin_ve_vl_vgt_vvssmvl
__builtin_ve_vl_vgt_vvssvl
__builtin_ve_vl_vgtlsx_vvssl
__builtin_ve_vl_vgtlsx_vvssml
__builtin_ve_vl_vgtlsx_vvssmvl
__builtin_ve_vl_vgtlsx_vvssvl
__builtin_ve_vl_vgtlsxnc_vvssl
__builtin_ve_vl_vgtlsxnc_vvssml
__builtin_ve_vl_vgtlsxnc_vvssmvl
__builtin_ve_vl_vgtlsxnc_vvssvl
__builtin_ve_vl_vgtlzx_vvssl
__builtin_ve_vl_vgtlzx_vvssml
__builtin_ve_vl_vgtlzx_vvssmvl
__builtin_ve_vl_vgtlzx_vvssvl
__builtin_ve_vl_vgtlzxnc_vvssl
__builtin_ve_vl_vgtlzxnc_vvssml
__builtin_ve_vl_vgtlzxnc_vvssmvl
__builtin_ve_vl_vgtlzxnc_vvssvl
__builtin_ve_vl_vgtnc_vvssl
__builtin_ve_vl_vgtnc_vvssml
__builtin_ve_vl_vgtnc_vvssmvl
__builtin_ve_vl_vgtnc_vvssvl
__builtin_ve_vl_vgtu_vvssl
__builtin_ve_vl_vgtu_vvssml
__builtin_ve_vl_vgtu_vvssmvl
__builtin_ve_vl_vgtu_vvssvl
__builtin_ve_vl_vgtunc_vvssl
__builtin_ve_vl_vgtunc_vvssml
__builtin_ve_vl_vgtunc_vvssmvl
__builtin_ve_vl_vgtunc_vvssvl
__builtin_ve_vl_vld_vssl
__builtin_ve_vl_vld_vssvl
__builtin_ve_vl_vld2d_vssl
__builtin_ve_vl_vld2d_vssvl
__builtin_ve_vl_vld2dnc_vssl
__builtin_ve_vl_vld2dnc_vssvl
__builtin_ve_vl_vldl2dsx_vssl
__builtin_ve_vl_vldl2dsx_vssvl
__builtin_ve_vl_vldl2dsxnc_vssl
__builtin_ve_vl_vldl2dsxnc_vssvl
__builtin_ve_vl_vldl2dzx_vssl
__builtin_ve_vl_vldl2dzx_vssvl
__builtin_ve_vl_vldl2dzxnc_vssl
__builtin_ve_vl_vldl2dzxnc_vssvl
__builtin_ve_vl_vldlsx_vssl
__builtin_ve_vl_vldlsx_vssvl
__builtin_ve_vl_vldlsxnc_vssl
__builtin_ve_vl_vldlsxnc_vssvl
__builtin_ve_vl_vldlzx_vssl
__builtin_ve_vl_vldlzx_vssvl
__builtin_ve_vl_vldlzxnc_vssl
__builtin_ve_vl_vldlzxnc_vssvl
__builtin_ve_vl_vldnc_vssl
__builtin_ve_vl_vldnc_vssvl
__builtin_ve_vl_vldu_vssl
__builtin_ve_vl_vldu_vssvl
__builtin_ve_vl_vldu2d_vssl
__builtin_ve_vl_vldu2d_vssvl
__builtin_ve_vl_vldu2dnc_vssl
__builtin_ve_vl_vldu2dnc_vssvl
__builtin_ve_vl_vldunc_vssl
__builtin_ve_vl_vldunc_vssvl
__builtin_ve_vl_vmaxsl_vsvl
__builtin_ve_vl_vmaxsl_vsvmvl
__builtin_ve_vl_vmaxsl_vsvvl
__builtin_ve_vl_vmaxsl_vvvl
__builtin_ve_vl_vmaxsl_vvvmvl
__builtin_ve_vl_vmaxsl_vvvvl
__builtin_ve_vl_vmaxswsx_vsvl
__builtin_ve_vl_vmaxswsx_vsvmvl
__builtin_ve_vl_vmaxswsx_vsvvl
__builtin_ve_vl_vmaxswsx_vvvl
__builtin_ve_vl_vmaxswsx_vvvmvl
__builtin_ve_vl_vmaxswsx_vvvvl
__builtin_ve_vl_vmaxswzx_vsvl
__builtin_ve_vl_vmaxswzx_vsvmvl
__builtin_ve_vl_vmaxswzx_vsvvl
__builtin_ve_vl_vmaxswzx_vvvl
__builtin_ve_vl_vmaxswzx_vvvmvl
__builtin_ve_vl_vmaxswzx_vvvvl
__builtin_ve_vl_vminsl_vsvl
__builtin_ve_vl_vminsl_vsvmvl
__builtin_ve_vl_vminsl_vsvvl
__builtin_ve_vl_vminsl_vvvl
__builtin_ve_vl_vminsl_vvvmvl
__builtin_ve_vl_vminsl_vvvvl
__builtin_ve_vl_vminswsx_vsvl
__builtin_ve_vl_vminswsx_vsvmvl
__builtin_ve_vl_vminswsx_vsvvl
__builtin_ve_vl_vminswsx_vvvl
__builtin_ve_vl_vminswsx_vvvmvl
__builtin_ve_vl_vminswsx_vvvvl
__builtin_ve_vl_vminswzx_vsvl
__builtin_ve_vl_vminswzx_vsvmvl
__builtin_ve_vl_vminswzx_vsvvl
__builtin_ve_vl_vminswzx_vvvl
__builtin_ve_vl_vminswzx_vvvmvl
__builtin_ve_vl_vminswzx_vvvvl
__builtin_ve_vl_vmrg_vsvml
__builtin_ve_vl_vmrg_vsvmvl
__builtin_ve_vl_vmrg_vvvml
__builtin_ve_vl_vmrg_vvvmvl
__builtin_ve_vl_vmrgw_vsvMl
__builtin_ve_vl_vmrgw_vsvMvl
__builtin_ve_vl_vmrgw_vvvMl
__builtin_ve_vl_vmrgw_vvvMvl
__builtin_ve_vl_vmulsl_vsvl
__builtin_ve_vl_vmulsl_vsvmvl
__builtin_ve_vl_vmulsl_vsvvl
__builtin_ve_vl_vmulsl_vvvl
__builtin_ve_vl_vmulsl_vvvmvl
__builtin_ve_vl_vmulsl_vvvvl
__builtin_ve_vl_vmulslw_vsvl
__builtin_ve_vl_vmulslw_vsvvl
__builtin_ve_vl_vmulslw_vvvl
__builtin_ve_vl_vmulslw_vvvvl
__builtin_ve_vl_vmulswsx_vsvl
__builtin_ve_vl_vmulswsx_vsvmvl
__builtin_ve_vl_vmulswsx_vsvvl
__builtin_ve_vl_vmulswsx_vvvl
__builtin_ve_vl_vmulswsx_vvvmvl
__builtin_ve_vl_vmulswsx_vvvvl
__builtin_ve_vl_vmulswzx_vsvl
__builtin_ve_vl_vmulswzx_vsvmvl
__builtin_ve_vl_vmulswzx_vsvvl
__builtin_ve_vl_vmulswzx_vvvl
__builtin_ve_vl_vmulswzx_vvvmvl
__builtin_ve_vl_vmulswzx_vvvvl
__builtin_ve_vl_vmulul_vsvl
__builtin_ve_vl_vmulul_vsvmvl
__builtin_ve_vl_vmulul_vsvvl
__builtin_ve_vl_vmulul_vvvl
__builtin_ve_vl_vmulul_vvvmvl
__builtin_ve_vl_vmulul_vvvvl
__builtin_ve_vl_vmuluw_vsvl
__builtin_ve_vl_vmuluw_vsvmvl
__builtin_ve_vl_vmuluw_vsvvl
__builtin_ve_vl_vmuluw_vvvl
__builtin_ve_vl_vmuluw_vvvmvl
__builtin_ve_vl_vmuluw_vvvvl
__builtin_ve_vl_vmv_vsvl
__builtin_ve_vl_vmv_vsvmvl
__builtin_ve_vl_vmv_vsvvl
__builtin_ve_vl_vor_vsvl
__builtin_ve_vl_vor_vsvmvl
__builtin_ve_vl_vor_vsvvl
__builtin_ve_vl_vor_vvvl
__builtin_ve_vl_vor_vvvmvl
__builtin_ve_vl_vor_vvvvl
__builtin_ve_vl_vrand_vvl
__builtin_ve_vl_vrand_vvml
__builtin_ve_vl_vrcpd_vvl
__builtin_ve_vl_vrcpd_vvvl
__builtin_ve_vl_vrcps_vvl
__builtin_ve_vl_vrcps_vvvl
__builtin_ve_vl_vrmaxslfst_vvl
__builtin_ve_vl_vrmaxslfst_vvvl
__builtin_ve_vl_vrmaxsllst_vvl
__builtin_ve_vl_vrmaxsllst_vvvl
__builtin_ve_vl_vrmaxswfstsx_vvl
__builtin_ve_vl_vrmaxswfstsx_vvvl
__builtin_ve_vl_vrmaxswfstzx_vvl
__builtin_ve_vl_vrmaxswfstzx_vvvl
__builtin_ve_vl_vrmaxswlstsx_vvl
__builtin_ve_vl_vrmaxswlstsx_vvvl
__builtin_ve_vl_vrmaxswlstzx_vvl
__builtin_ve_vl_vrmaxswlstzx_vvvl
__builtin_ve_vl_vrminslfst_vvl
__builtin_ve_vl_vrminslfst_vvvl
__builtin_ve_vl_vrminsllst_vvl
__builtin_ve_vl_vrminsllst_vvvl
__builtin_ve_vl_vrminswfstsx_vvl
__builtin_ve_vl_vrminswfstsx_vvvl
__builtin_ve_vl_vrminswfstzx_vvl
__builtin_ve_vl_vrminswfstzx_vvvl
__builtin_ve_vl_vrminswlstsx_vvl
__builtin_ve_vl_vrminswlstsx_vvvl
__builtin_ve_vl_vrminswlstzx_vvl
__builtin_ve_vl_vrminswlstzx_vvvl
__builtin_ve_vl_vror_vvl
__builtin_ve_vl_vror_vvml
__builtin_ve_vl_vrsqrtd_vvl
__builtin_ve_vl_vrsqrtd_vvvl
__builtin_ve_vl_vrsqrtdnex_vvl
__builtin_ve_vl_vrsqrtdnex_vvvl
__builtin_ve_vl_vrsqrts_vvl
__builtin_ve_vl_vrsqrts_vvvl
__builtin_ve_vl_vrsqrtsnex_vvl
__builtin_ve_vl_vrsqrtsnex_vvvl
__builtin_ve_vl_vrxor_vvl
__builtin_ve_vl_vrxor_vvml
__builtin_ve_vl_vsc_vvssl
__builtin_ve_vl_vsc_vvssml
__builtin_ve_vl_vscl_vvssl
__builtin_ve_vl_vscl_vvssml
__builtin_ve_vl_vsclnc_vvssl
__builtin_ve_vl_vsclnc_vvssml
__builtin_ve_vl_vsclncot_vvssl
__builtin_ve_vl_vsclncot_vvssml
__builtin_ve_vl_vsclot_vvssl
__builtin_ve_vl_vsclot_vvssml
__builtin_ve_vl_vscnc_vvssl
__builtin_ve_vl_vscnc_vvssml
__builtin_ve_vl_vscncot_vvssl
__builtin_ve_vl_vscncot_vvssml
__builtin_ve_vl_vscot_vvssl
__builtin_ve_vl_vscot_vvssml
__builtin_ve_vl_vscu_vvssl
__builtin_ve_vl_vscu_vvssml
__builtin_ve_vl_vscunc_vvssl
__builtin_ve_vl_vscunc_vvssml
__builtin_ve_vl_vscuncot_vvssl
__builtin_ve_vl_vscuncot_vvssml
__builtin_ve_vl_vscuot_vvssl
__builtin_ve_vl_vscuot_vvssml
__builtin_ve_vl_vseq_vl
__builtin_ve_vl_vseq_vvl
__builtin_ve_vl_vsfa_vvssl
__builtin_ve_vl_vsfa_vvssmvl
__builtin_ve_vl_vsfa_vvssvl
__builtin_ve_vl_vshf_vvvsl
__builtin_ve_vl_vshf_vvvsvl
__builtin_ve_vl_vslal_vvsl
__builtin_ve_vl_vslal_vvsmvl
__builtin_ve_vl_vslal_vvsvl
__builtin_ve_vl_vslal_vvvl
__builtin_ve_vl_vslal_vvvmvl
__builtin_ve_vl_vslal_vvvvl
__builtin_ve_vl_vslawsx_vvsl
__builtin_ve_vl_vslawsx_vvsmvl
__builtin_ve_vl_vslawsx_vvsvl
__builtin_ve_vl_vslawsx_vvvl
__builtin_ve_vl_vslawsx_vvvmvl
__builtin_ve_vl_vslawsx_vvvvl
__builtin_ve_vl_vslawzx_vvsl
__builtin_ve_vl_vslawzx_vvsmvl
__builtin_ve_vl_vslawzx_vvsvl
__builtin_ve_vl_vslawzx_vvvl
__builtin_ve_vl_vslawzx_vvvmvl
__builtin_ve_vl_vslawzx_vvvvl
__builtin_ve_vl_vsll_vvsl
__builtin_ve_vl_vsll_vvsmvl
__builtin_ve_vl_vsll_vvsvl
__builtin_ve_vl_vsll_vvvl
__builtin_ve_vl_vsll_vvvmvl
__builtin_ve_vl_vsll_vvvvl
__builtin_ve_vl_vsral_vvsl
__builtin_ve_vl_vsral_vvsmvl
__builtin_ve_vl_vsral_vvsvl
__builtin_ve_vl_vsral_vvvl
__builtin_ve_vl_vsral_vvvmvl
__builtin_ve_vl_vsral_vvvvl
__builtin_ve_vl_vsrawsx_vvsl
__builtin_ve_vl_vsrawsx_vvsmvl
__builtin_ve_vl_vsrawsx_vvsvl
__builtin_ve_vl_vsrawsx_vvvl
__builtin_ve_vl_vsrawsx_vvvmvl
__builtin_ve_vl_vsrawsx_vvvvl
__builtin_ve_vl_vsrawzx_vvsl
__builtin_ve_vl_vsrawzx_vvsmvl
__builtin_ve_vl_vsrawzx_vvsvl
__builtin_ve_vl_vsrawzx_vvvl
__builtin_ve_vl_vsrawzx_vvvmvl
__builtin_ve_vl_vsrawzx_vvvvl
__builtin_ve_vl_vsrl_vvsl
__builtin_ve_vl_vsrl_vvsmvl
__builtin_ve_vl_vsrl_vvsvl
__builtin_ve_vl_vsrl_vvvl
__builtin_ve_vl_vsrl_vvvmvl
__builtin_ve_vl_vsrl_vvvvl
__builtin_ve_vl_vst_vssl
__builtin_ve_vl_vst_vssml
__builtin_ve_vl_vst2d_vssl
__builtin_ve_vl_vst2d_vssml
__builtin_ve_vl_vst2dnc_vssl
__builtin_ve_vl_vst2dnc_vssml
__builtin_ve_vl_vst2dncot_vssl
__builtin_ve_vl_vst2dncot_vssml
__builtin_ve_vl_vst2dot_vssl
__builtin_ve_vl_vst2dot_vssml
__builtin_ve_vl_vstl_vssl
__builtin_ve_vl_vstl_vssml
__builtin_ve_vl_vstl2d_vssl
__builtin_ve_vl_vstl2d_vssml
__builtin_ve_vl_vstl2dnc_vssl
__builtin_ve_vl_vstl2dnc_vssml
__builtin_ve_vl_vstl2dncot_vssl
__builtin_ve_vl_vstl2dncot_vssml
__builtin_ve_vl_vstl2dot_vssl
__builtin_ve_vl_vstl2dot_vssml
__builtin_ve_vl_vstlnc_vssl
__builtin_ve_vl_vstlnc_vssml
__builtin_ve_vl_vstlncot_vssl
__builtin_ve_vl_vstlncot_vssml
__builtin_ve_vl_vstlot_vssl
__builtin_ve_vl_vstlot_vssml
__builtin_ve_vl_vstnc_vssl
__builtin_ve_vl_vstnc_vssml
__builtin_ve_vl_vstncot_vssl
__builtin_ve_vl_vstncot_vssml
__builtin_ve_vl_vstot_vssl
__builtin_ve_vl_vstot_vssml
__builtin_ve_vl_vstu_vssl
__builtin_ve_vl_vstu_vssml
__builtin_ve_vl_vstu2d_vssl
__builtin_ve_vl_vstu2d_vssml
__builtin_ve_vl_vstu2dnc_vssl
__builtin_ve_vl_vstu2dnc_vssml
__builtin_ve_vl_vstu2dncot_vssl
__builtin_ve_vl_vstu2dncot_vssml
__builtin_ve_vl_vstu2dot_vssl
__builtin_ve_vl_vstu2dot_vssml
__builtin_ve_vl_vstunc_vssl
__builtin_ve_vl_vstunc_vssml
__builtin_ve_vl_vstuncot_vssl
__builtin_ve_vl_vstuncot_vssml
__builtin_ve_vl_vstuot_vssl
__builtin_ve_vl_vstuot_vssml
__builtin_ve_vl_vsubsl_vsvl
__builtin_ve_vl_vsubsl_vsvmvl
__builtin_ve_vl_vsubsl_vsvvl
__builtin_ve_vl_vsubsl_vvvl
__builtin_ve_vl_vsubsl_vvvmvl
__builtin_ve_vl_vsubsl_vvvvl
__builtin_ve_vl_vsubswsx_vsvl
__builtin_ve_vl_vsubswsx_vsvmvl
__builtin_ve_vl_vsubswsx_vsvvl
__builtin_ve_vl_vsubswsx_vvvl
__builtin_ve_vl_vsubswsx_vvvmvl
__builtin_ve_vl_vsubswsx_vvvvl
__builtin_ve_vl_vsubswzx_vsvl
__builtin_ve_vl_vsubswzx_vsvmvl
__builtin_ve_vl_vsubswzx_vsvvl
__builtin_ve_vl_vsubswzx_vvvl
__builtin_ve_vl_vsubswzx_vvvmvl
__builtin_ve_vl_vsubswzx_vvvvl
__builtin_ve_vl_vsubul_vsvl
__builtin_ve_vl_vsubul_vsvmvl
__builtin_ve_vl_vsubul_vsvvl
__builtin_ve_vl_vsubul_vvvl
__builtin_ve_vl_vsubul_vvvmvl
__builtin_ve_vl_vsubul_vvvvl
__builtin_ve_vl_vsubuw_vsvl
__builtin_ve_vl_vsubuw_vsvmvl
__builtin_ve_vl_vsubuw_vsvvl
__builtin_ve_vl_vsubuw_vvvl
__builtin_ve_vl_vsubuw_vvvmvl
__builtin_ve_vl_vsubuw_vvvvl
__builtin_ve_vl_vsuml_vvl
__builtin_ve_vl_vsuml_vvml
__builtin_ve_vl_vsumwsx_vvl
__builtin_ve_vl_vsumwsx_vvml
__builtin_ve_vl_vsumwzx_vvl
__builtin_ve_vl_vsumwzx_vvml
__builtin_ve_vl_vxor_vsvl
__builtin_ve_vl_vxor_vsvmvl
__builtin_ve_vl_vxor_vsvvl
__builtin_ve_vl_vxor_vvvl
__builtin_ve_vl_vxor_vvvmvl
__builtin_ve_vl_vxor_vvvvl
__builtin_ve_vl_xorm_MMM
__builtin_ve_vl_xorm_mmm
__builtin_ia32_pavgusb
__builtin_ia32_pf2id
__builtin_ia32_pfacc
__builtin_ia32_pfadd
__builtin_ia32_pfcmpeq
__builtin_ia32_pfcmpge
__builtin_ia32_pfcmpgt
__builtin_ia32_pfmax
__builtin_ia32_pfmin
__builtin_ia32_pfmul
__builtin_ia32_pfrcp
__builtin_ia32_pfrcpit1
__builtin_ia32_pfrcpit2
__builtin_ia32_pfrsqit1
__builtin_ia32_pfrsqrt
__builtin_ia32_pfsub
__builtin_ia32_pfsubr
__builtin_ia32_pi2fd
__builtin_ia32_pmulhrw
__builtin_ia32_pf2iw
__builtin_ia32_pfnacc
__builtin_ia32_pfpnacc
__builtin_ia32_pi2fw
__builtin_ia32_aesdec128
__builtin_ia32_aesdec256
__builtin_ia32_aesdec512
__builtin_ia32_aesdeclast128
__builtin_ia32_aesdeclast256
__builtin_ia32_aesdeclast512
__builtin_ia32_aesenc128
__builtin_ia32_aesenc256
__builtin_ia32_aesenc512
__builtin_ia32_aesenclast128
__builtin_ia32_aesenclast256
__builtin_ia32_aesenclast512
__builtin_ia32_aesimc128
__builtin_ia32_aeskeygenassist128
__builtin_ia32_addsubpd256
__builtin_ia32_addsubps256
__builtin_ia32_blendvpd256
__builtin_ia32_blendvps256
__builtin_ia32_cvtpd2ps256
__builtin_ia32_cvtpd2dq256
__builtin_ia32_cvtps2dq256
__builtin_ia32_cvttpd2dq256
__builtin_ia32_cvttps2dq256
__builtin_ia32_dpps256
__builtin_ia32_haddpd256
__builtin_ia32_haddps256
__builtin_ia32_hsubpd256
__builtin_ia32_hsubps256
__builtin_ia32_lddqu256
__builtin_ia32_maskloadpd
__builtin_ia32_maskloadpd256
__builtin_ia32_maskloadps
__builtin_ia32_maskloadps256
__builtin_ia32_maskstorepd
__builtin_ia32_maskstorepd256
__builtin_ia32_maskstoreps
__builtin_ia32_maskstoreps256
__builtin_ia32_maxpd256
__builtin_ia32_maxps256
__builtin_ia32_minpd256
__builtin_ia32_minps256
__builtin_ia32_movmskpd256
__builtin_ia32_movmskps256
__builtin_ia32_ptestc256
__builtin_ia32_ptestnzc256
__builtin_ia32_ptestz256
__builtin_ia32_rcpps256
__builtin_ia32_roundpd256
__builtin_ia32_roundps256
__builtin_ia32_rsqrtps256
__builtin_ia32_vpermilvarpd
__builtin_ia32_vpermilvarpd256
__builtin_ia32_vpermilvarps
__builtin_ia32_vpermilvarps256
__builtin_ia32_vtestcpd
__builtin_ia32_vtestcpd256
__builtin_ia32_vtestcps
__builtin_ia32_vtestcps256
__builtin_ia32_vtestnzcpd
__builtin_ia32_vtestnzcpd256
__builtin_ia32_vtestnzcps
__builtin_ia32_vtestnzcps256
__builtin_ia32_vtestzpd
__builtin_ia32_vtestzpd256
__builtin_ia32_vtestzps
__builtin_ia32_vtestzps256
__builtin_ia32_vzeroall
__builtin_ia32_vzeroupper
__builtin_ia32_gatherd_d
__builtin_ia32_gatherd_d256
__builtin_ia32_gatherd_pd
__builtin_ia32_gatherd_pd256
__builtin_ia32_gatherd_ps
__builtin_ia32_gatherd_ps256
__builtin_ia32_gatherd_q
__builtin_ia32_gatherd_q256
__builtin_ia32_gatherq_d
__builtin_ia32_gatherq_d256
__builtin_ia32_gatherq_pd
__builtin_ia32_gatherq_pd256
__builtin_ia32_gatherq_ps
__builtin_ia32_gatherq_ps256
__builtin_ia32_gatherq_q
__builtin_ia32_gatherq_q256
__builtin_ia32_maskloadd
__builtin_ia32_maskloadd256
__builtin_ia32_maskloadq
__builtin_ia32_maskloadq256
__builtin_ia32_maskstored
__builtin_ia32_maskstored256
__builtin_ia32_maskstoreq
__builtin_ia32_maskstoreq256
__builtin_ia32_mpsadbw256
__builtin_ia32_packssdw256
__builtin_ia32_packsswb256
__builtin_ia32_packusdw256
__builtin_ia32_packuswb256
__builtin_ia32_pavgb256
__builtin_ia32_pavgw256
__builtin_ia32_pblendvb256
__builtin_ia32_permvarsi256
__builtin_ia32_permvarsf256
__builtin_ia32_phaddd256
__builtin_ia32_phaddsw256
__builtin_ia32_phaddw256
__builtin_ia32_phsubd256
__builtin_ia32_phsubsw256
__builtin_ia32_phsubw256
__builtin_ia32_pmaddubsw256
__builtin_ia32_pmaddwd256
__builtin_ia32_pmovmskb256
__builtin_ia32_pmulhrsw256
__builtin_ia32_pmulhw256
__builtin_ia32_pmulhuw256
__builtin_ia32_psadbw256
__builtin_ia32_pshufb256
__builtin_ia32_psignb256
__builtin_ia32_psignd256
__builtin_ia32_psignw256
__builtin_ia32_pslld256
__builtin_ia32_psllq256
__builtin_ia32_psllw256
__builtin_ia32_pslldi256
__builtin_ia32_psllqi256
__builtin_ia32_psllwi256
__builtin_ia32_psllv4si
__builtin_ia32_psllv8si
__builtin_ia32_psllv2di
__builtin_ia32_psllv4di
__builtin_ia32_psrad256
__builtin_ia32_psraw256
__builtin_ia32_psradi256
__builtin_ia32_psrawi256
__builtin_ia32_psrav4si
__builtin_ia32_psrav8si
__builtin_ia32_psrld256
__builtin_ia32_psrlq256
__builtin_ia32_psrlw256
__builtin_ia32_psrldi256
__builtin_ia32_psrlqi256
__builtin_ia32_psrlwi256
__builtin_ia32_psrlv4si
__builtin_ia32_psrlv8si
__builtin_ia32_psrlv2di
__builtin_ia32_psrlv4di
__builtin_ia32_addpd512
__builtin_ia32_addps512
__builtin_ia32_broadcastmb128
__builtin_ia32_broadcastmb256
__builtin_ia32_broadcastmb512
__builtin_ia32_broadcastmw128
__builtin_ia32_broadcastmw256
__builtin_ia32_broadcastmw512
__builtin_ia32_vpconflictsi_128
__builtin_ia32_vpconflictsi_256
__builtin_ia32_vpconflictsi_512
__builtin_ia32_vpconflictdi_128
__builtin_ia32_vpconflictdi_256
__builtin_ia32_vpconflictdi_512
__builtin_ia32_cvtsi2sd64
__builtin_ia32_cvtsi2ss32
__builtin_ia32_cvtsi2ss64
__builtin_ia32_vcvttsd2si32
__builtin_ia32_vcvttsd2si64
__builtin_ia32_vcvttsd2usi32
__builtin_ia32_vcvttsd2usi64
__builtin_ia32_vcvttss2si32
__builtin_ia32_vcvttss2si64
__builtin_ia32_vcvttss2usi32
__builtin_ia32_vcvttss2usi64
__builtin_ia32_cvtusi2ss32
__builtin_ia32_cvtusi2sd64
__builtin_ia32_cvtusi2ss64
__builtin_ia32_dbpsadbw128
__builtin_ia32_dbpsadbw256
__builtin_ia32_dbpsadbw512
__builtin_ia32_divpd512
__builtin_ia32_divps512
__builtin_ia32_exp2pd_mask
__builtin_ia32_exp2ps_mask
__builtin_ia32_gatherpfdpd
__builtin_ia32_gatherpfdps
__builtin_ia32_gatherpfqpd
__builtin_ia32_gatherpfqps
__builtin_ia32_addsd_round_mask
__builtin_ia32_addss_round_mask
__builtin_ia32_cmpsd_mask
__builtin_ia32_cmpss_mask
__builtin_ia32_cvtpd2dq128_mask
__builtin_ia32_cvtpd2dq512_mask
__builtin_ia32_cvtpd2ps_mask
__builtin_ia32_cvtpd2ps512_mask
__builtin_ia32_cvtpd2qq128_mask
__builtin_ia32_cvtpd2qq256_mask
__builtin_ia32_cvtpd2qq512_mask
__builtin_ia32_cvtpd2udq128_mask
__builtin_ia32_cvtpd2udq256_mask
__builtin_ia32_cvtpd2udq512_mask
__builtin_ia32_cvtpd2uqq128_mask
__builtin_ia32_cvtpd2uqq256_mask
__builtin_ia32_cvtpd2uqq512_mask
__builtin_ia32_cvtps2dq128_mask
__builtin_ia32_cvtps2dq256_mask
__builtin_ia32_cvtps2dq512_mask
__builtin_ia32_cvtps2pd512_mask
__builtin_ia32_cvtps2qq128_mask
__builtin_ia32_cvtps2qq256_mask
__builtin_ia32_cvtps2qq512_mask
__builtin_ia32_cvtps2udq128_mask
__builtin_ia32_cvtps2udq256_mask
__builtin_ia32_cvtps2udq512_mask
__builtin_ia32_cvtps2uqq128_mask
__builtin_ia32_cvtps2uqq256_mask
__builtin_ia32_cvtps2uqq512_mask
__builtin_ia32_cvtqq2ps128_mask
__builtin_ia32_cvtsd2ss_round_mask
__builtin_ia32_cvtss2sd_round_mask
__builtin_ia32_cvttpd2dq128_mask
__builtin_ia32_cvttpd2dq512_mask
__builtin_ia32_cvttpd2qq128_mask
__builtin_ia32_cvttpd2qq256_mask
__builtin_ia32_cvttpd2qq512_mask
__builtin_ia32_cvttpd2udq128_mask
__builtin_ia32_cvttpd2udq256_mask
__builtin_ia32_cvttpd2udq512_mask
__builtin_ia32_cvttpd2uqq128_mask
__builtin_ia32_cvttpd2uqq256_mask
__builtin_ia32_cvttpd2uqq512_mask
__builtin_ia32_cvttps2dq512_mask
__builtin_ia32_cvttps2qq128_mask
__builtin_ia32_cvttps2qq256_mask
__builtin_ia32_cvttps2qq512_mask
__builtin_ia32_cvttps2udq128_mask
__builtin_ia32_cvttps2udq256_mask
__builtin_ia32_cvttps2udq512_mask
__builtin_ia32_cvttps2uqq128_mask
__builtin_ia32_cvttps2uqq256_mask
__builtin_ia32_cvttps2uqq512_mask
__builtin_ia32_cvtuqq2ps128_mask
__builtin_ia32_divsd_round_mask
__builtin_ia32_divss_round_mask
__builtin_ia32_fixupimmpd128_mask
__builtin_ia32_fixupimmpd256_mask
__builtin_ia32_fixupimmpd512_mask
__builtin_ia32_fixupimmps128_mask
__builtin_ia32_fixupimmps256_mask
__builtin_ia32_fixupimmps512_mask
__builtin_ia32_fixupimmsd_mask
__builtin_ia32_fixupimmss_mask
__builtin_ia32_fpclasssd_mask
__builtin_ia32_fpclassss_mask
__builtin_ia32_getexppd128_mask
__builtin_ia32_getexppd256_mask
__builtin_ia32_getexppd512_mask
__builtin_ia32_getexpps128_mask
__builtin_ia32_getexpps256_mask
__builtin_ia32_getexpps512_mask
__builtin_ia32_getexpsd128_round_mask
__builtin_ia32_getexpss128_round_mask
__builtin_ia32_getmantpd128_mask
__builtin_ia32_getmantpd256_mask
__builtin_ia32_getmantpd512_mask
__builtin_ia32_getmantps128_mask
__builtin_ia32_getmantps256_mask
__builtin_ia32_getmantps512_mask
__builtin_ia32_getmantsd_round_mask
__builtin_ia32_getmantss_round_mask
__builtin_ia32_maxsd_round_mask
__builtin_ia32_maxss_round_mask
__builtin_ia32_minsd_round_mask
__builtin_ia32_minss_round_mask
__builtin_ia32_mulsd_round_mask
__builtin_ia32_mulss_round_mask
__builtin_ia32_pmovdb128_mask
__builtin_ia32_pmovdb256_mask
__builtin_ia32_pmovdb128mem_mask
__builtin_ia32_pmovdb256mem_mask
__builtin_ia32_pmovdb512mem_mask
__builtin_ia32_pmovdw128_mask
__builtin_ia32_pmovdw256_mask
__builtin_ia32_pmovdw128mem_mask
__builtin_ia32_pmovdw256mem_mask
__builtin_ia32_pmovdw512mem_mask
__builtin_ia32_pmovqb128_mask
__builtin_ia32_pmovqb256_mask
__builtin_ia32_pmovqb512_mask
__builtin_ia32_pmovqb128mem_mask
__builtin_ia32_pmovqb256mem_mask
__builtin_ia32_pmovqb512mem_mask
__builtin_ia32_pmovqd128_mask
__builtin_ia32_pmovqd128mem_mask
__builtin_ia32_pmovqd256mem_mask
__builtin_ia32_pmovqd512mem_mask
__builtin_ia32_pmovqw128_mask
__builtin_ia32_pmovqw256_mask
__builtin_ia32_pmovqw128mem_mask
__builtin_ia32_pmovqw256mem_mask
__builtin_ia32_pmovqw512mem_mask
__builtin_ia32_pmovwb128_mask
__builtin_ia32_pmovwb128mem_mask
__builtin_ia32_pmovwb256mem_mask
__builtin_ia32_pmovwb512mem_mask
__builtin_ia32_pmovsdb128_mask
__builtin_ia32_pmovsdb256_mask
__builtin_ia32_pmovsdb512_mask
__builtin_ia32_pmovsdb128mem_mask
__builtin_ia32_pmovsdb256mem_mask
__builtin_ia32_pmovsdb512mem_mask
__builtin_ia32_pmovsdw128_mask
__builtin_ia32_pmovsdw256_mask
__builtin_ia32_pmovsdw512_mask
__builtin_ia32_pmovsdw128mem_mask
__builtin_ia32_pmovsdw256mem_mask
__builtin_ia32_pmovsdw512mem_mask
__builtin_ia32_pmovsqb128_mask
__builtin_ia32_pmovsqb256_mask
__builtin_ia32_pmovsqb512_mask
__builtin_ia32_pmovsqb128mem_mask
__builtin_ia32_pmovsqb256mem_mask
__builtin_ia32_pmovsqb512mem_mask
__builtin_ia32_pmovsqd128_mask
__builtin_ia32_pmovsqd256_mask
__builtin_ia32_pmovsqd512_mask
__builtin_ia32_pmovsqd128mem_mask
__builtin_ia32_pmovsqd256mem_mask
__builtin_ia32_pmovsqd512mem_mask
__builtin_ia32_pmovsqw128_mask
__builtin_ia32_pmovsqw256_mask
__builtin_ia32_pmovsqw512_mask
__builtin_ia32_pmovsqw128mem_mask
__builtin_ia32_pmovsqw256mem_mask
__builtin_ia32_pmovsqw512mem_mask
__builtin_ia32_pmovswb128_mask
__builtin_ia32_pmovswb256_mask
__builtin_ia32_pmovswb512_mask
__builtin_ia32_pmovswb128mem_mask
__builtin_ia32_pmovswb256mem_mask
__builtin_ia32_pmovswb512mem_mask
__builtin_ia32_pmovusdb128_mask
__builtin_ia32_pmovusdb256_mask
__builtin_ia32_pmovusdb512_mask
__builtin_ia32_pmovusdb128mem_mask
__builtin_ia32_pmovusdb256mem_mask
__builtin_ia32_pmovusdb512mem_mask
__builtin_ia32_pmovusdw128_mask
__builtin_ia32_pmovusdw256_mask
__builtin_ia32_pmovusdw512_mask
__builtin_ia32_pmovusdw128mem_mask
__builtin_ia32_pmovusdw256mem_mask
__builtin_ia32_pmovusdw512mem_mask
__builtin_ia32_pmovusqb128_mask
__builtin_ia32_pmovusqb256_mask
__builtin_ia32_pmovusqb512_mask
__builtin_ia32_pmovusqb128mem_mask
__builtin_ia32_pmovusqb256mem_mask
__builtin_ia32_pmovusqb512mem_mask
__builtin_ia32_pmovusqd128_mask
__builtin_ia32_pmovusqd256_mask
__builtin_ia32_pmovusqd512_mask
__builtin_ia32_pmovusqd128mem_mask
__builtin_ia32_pmovusqd256mem_mask
__builtin_ia32_pmovusqd512mem_mask
__builtin_ia32_pmovusqw128_mask
__builtin_ia32_pmovusqw256_mask
__builtin_ia32_pmovusqw512_mask
__builtin_ia32_pmovusqw128mem_mask
__builtin_ia32_pmovusqw256mem_mask
__builtin_ia32_pmovusqw512mem_mask
__builtin_ia32_pmovuswb128_mask
__builtin_ia32_pmovuswb256_mask
__builtin_ia32_pmovuswb512_mask
__builtin_ia32_pmovuswb128mem_mask
__builtin_ia32_pmovuswb256mem_mask
__builtin_ia32_pmovuswb512mem_mask
__builtin_ia32_rangepd128_mask
__builtin_ia32_rangepd256_mask
__builtin_ia32_rangepd512_mask
__builtin_ia32_rangeps128_mask
__builtin_ia32_rangeps256_mask
__builtin_ia32_rangeps512_mask
__builtin_ia32_rangesd128_round_mask
__builtin_ia32_rangess128_round_mask
__builtin_ia32_reducepd128_mask
__builtin_ia32_reducepd256_mask
__builtin_ia32_reducepd512_mask
__builtin_ia32_reduceps128_mask
__builtin_ia32_reduceps256_mask
__builtin_ia32_reduceps512_mask
__builtin_ia32_reducesd_mask
__builtin_ia32_reducess_mask
__builtin_ia32_rndscalepd_128_mask
__builtin_ia32_rndscalepd_256_mask
__builtin_ia32_rndscalepd_mask
__builtin_ia32_rndscaleps_128_mask
__builtin_ia32_rndscaleps_256_mask
__builtin_ia32_rndscaleps_mask
__builtin_ia32_rndscalesd_round_mask
__builtin_ia32_rndscaless_round_mask
__builtin_ia32_scalefpd128_mask
__builtin_ia32_scalefpd256_mask
__builtin_ia32_scalefpd512_mask
__builtin_ia32_scalefps128_mask
__builtin_ia32_scalefps256_mask
__builtin_ia32_scalefps512_mask
__builtin_ia32_scalefsd_round_mask
__builtin_ia32_scalefss_round_mask
__builtin_ia32_subsd_round_mask
__builtin_ia32_subss_round_mask
__builtin_ia32_vcvtps2ph_mask
__builtin_ia32_vcvtps2ph256_mask
__builtin_ia32_vcvtps2ph512_mask
__builtin_ia32_fixupimmpd128_maskz
__builtin_ia32_fixupimmpd256_maskz
__builtin_ia32_fixupimmpd512_maskz
__builtin_ia32_fixupimmps128_maskz
__builtin_ia32_fixupimmps256_maskz
__builtin_ia32_fixupimmps512_maskz
__builtin_ia32_fixupimmsd_maskz
__builtin_ia32_fixupimmss_maskz
__builtin_ia32_maxpd512
__builtin_ia32_maxps512
__builtin_ia32_minpd512
__builtin_ia32_minps512
__builtin_ia32_mulpd512
__builtin_ia32_mulps512
__builtin_ia32_packssdw512
__builtin_ia32_packsswb512
__builtin_ia32_packusdw512
__builtin_ia32_packuswb512
__builtin_ia32_pavgb512
__builtin_ia32_pavgw512
__builtin_ia32_permvardf256
__builtin_ia32_permvardf512
__builtin_ia32_permvardi256
__builtin_ia32_permvardi512
__builtin_ia32_permvarhi128
__builtin_ia32_permvarhi256
__builtin_ia32_permvarhi512
__builtin_ia32_permvarqi128
__builtin_ia32_permvarqi256
__builtin_ia32_permvarqi512
__builtin_ia32_permvarsf512
__builtin_ia32_permvarsi512
__builtin_ia32_pmaddubsw512
__builtin_ia32_pmaddwd512
__builtin_ia32_pmulhrsw512
__builtin_ia32_pmulhw512
__builtin_ia32_pmulhuw512
__builtin_ia32_vpmultishiftqb128
__builtin_ia32_vpmultishiftqb256
__builtin_ia32_vpmultishiftqb512
__builtin_ia32_psadbw512
__builtin_ia32_pshufb512
__builtin_ia32_pslld512
__builtin_ia32_psllq512
__builtin_ia32_psllw512
__builtin_ia32_pslldi512
__builtin_ia32_psllqi512
__builtin_ia32_psllwi512
__builtin_ia32_psllv16si
__builtin_ia32_psllv8di
__builtin_ia32_psllv8hi
__builtin_ia32_psllv16hi
__builtin_ia32_psllv32hi
__builtin_ia32_psrad512
__builtin_ia32_psraq128
__builtin_ia32_psraq256
__builtin_ia32_psraq512
__builtin_ia32_psraw512
__builtin_ia32_psradi512
__builtin_ia32_psraqi128
__builtin_ia32_psraqi256
__builtin_ia32_psraqi512
__builtin_ia32_psrawi512
__builtin_ia32_psrav16si
__builtin_ia32_psravq128
__builtin_ia32_psravq256
__builtin_ia32_psrav8di
__builtin_ia32_psrav8hi
__builtin_ia32_psrav16hi
__builtin_ia32_psrav32hi
__builtin_ia32_psrld512
__builtin_ia32_psrlq512
__builtin_ia32_psrlw512
__builtin_ia32_psrldi512
__builtin_ia32_psrlqi512
__builtin_ia32_psrlwi512
__builtin_ia32_psrlv16si
__builtin_ia32_psrlv8di
__builtin_ia32_psrlv8hi
__builtin_ia32_psrlv16hi
__builtin_ia32_psrlv32hi
__builtin_ia32_pternlogd128
__builtin_ia32_pternlogd256
__builtin_ia32_pternlogd512
__builtin_ia32_pternlogq128
__builtin_ia32_pternlogq256
__builtin_ia32_pternlogq512
__builtin_ia32_rcp14pd128_mask
__builtin_ia32_rcp14pd256_mask
__builtin_ia32_rcp14pd512_mask
__builtin_ia32_rcp14ps128_mask
__builtin_ia32_rcp14ps256_mask
__builtin_ia32_rcp14ps512_mask
__builtin_ia32_rcp14sd_mask
__builtin_ia32_rcp14ss_mask
__builtin_ia32_rcp28pd_mask
__builtin_ia32_rcp28ps_mask
__builtin_ia32_rcp28sd_round_mask
__builtin_ia32_rcp28ss_round_mask
__builtin_ia32_rsqrt14pd128_mask
__builtin_ia32_rsqrt14pd256_mask
__builtin_ia32_rsqrt14pd512_mask
__builtin_ia32_rsqrt14ps128_mask
__builtin_ia32_rsqrt14ps256_mask
__builtin_ia32_rsqrt14ps512_mask
__builtin_ia32_rsqrt14sd_mask
__builtin_ia32_rsqrt14ss_mask
__builtin_ia32_rsqrt28pd_mask
__builtin_ia32_rsqrt28ps_mask
__builtin_ia32_rsqrt28sd_round_mask
__builtin_ia32_rsqrt28ss_round_mask
__builtin_ia32_scatterpfdpd
__builtin_ia32_scatterpfdps
__builtin_ia32_scatterpfqpd
__builtin_ia32_scatterpfqps
__builtin_ia32_subpd512
__builtin_ia32_subps512
__builtin_ia32_vcomisd
__builtin_ia32_vcomiss
__builtin_ia32_vcvtsd2si32
__builtin_ia32_vcvtsd2si64
__builtin_ia32_vcvtsd2usi32
__builtin_ia32_vcvtsd2usi64
__builtin_ia32_vcvtss2si32
__builtin_ia32_vcvtss2si64
__builtin_ia32_vcvtss2usi32
__builtin_ia32_vcvtss2usi64
__builtin_ia32_vpdpbusd128
__builtin_ia32_vpdpbusd256
__builtin_ia32_vpdpbusd512
__builtin_ia32_vpdpbusds128
__builtin_ia32_vpdpbusds256
__builtin_ia32_vpdpbusds512
__builtin_ia32_vpdpwssd128
__builtin_ia32_vpdpwssd256
__builtin_ia32_vpdpwssd512
__builtin_ia32_vpdpwssds128
__builtin_ia32_vpdpwssds256
__builtin_ia32_vpdpwssds512
__builtin_ia32_vpermi2vard128
__builtin_ia32_vpermi2vard256
__builtin_ia32_vpermi2vard512
__builtin_ia32_vpermi2varhi128
__builtin_ia32_vpermi2varhi256
__builtin_ia32_vpermi2varhi512
__builtin_ia32_vpermi2varpd128
__builtin_ia32_vpermi2varpd256
__builtin_ia32_vpermi2varpd512
__builtin_ia32_vpermi2varps128
__builtin_ia32_vpermi2varps256
__builtin_ia32_vpermi2varps512
__builtin_ia32_vpermi2varq128
__builtin_ia32_vpermi2varq256
__builtin_ia32_vpermi2varq512
__builtin_ia32_vpermi2varqi128
__builtin_ia32_vpermi2varqi256
__builtin_ia32_vpermi2varqi512
__builtin_ia32_vpermilvarpd512
__builtin_ia32_vpermilvarps512
__builtin_ia32_vpmadd52huq128
__builtin_ia32_vpmadd52huq256
__builtin_ia32_vpmadd52huq512
__builtin_ia32_vpmadd52luq128
__builtin_ia32_vpmadd52luq256
__builtin_ia32_vpmadd52luq512
__builtin_ia32_cvtne2ps2bf16_128
__builtin_ia32_cvtne2ps2bf16_256
__builtin_ia32_cvtne2ps2bf16_512
__builtin_ia32_cvtneps2bf16_256
__builtin_ia32_cvtneps2bf16_512
__builtin_ia32_dpbf16ps_128
__builtin_ia32_dpbf16ps_256
__builtin_ia32_dpbf16ps_512
__builtin_ia32_bextr_u32
__builtin_ia32_bextr_u64
__builtin_ia32_bzhi_si
__builtin_ia32_bzhi_di
__builtin_ia32_pdep_si
__builtin_ia32_pdep_di
__builtin_ia32_pext_si
__builtin_ia32_pext_di
__builtin_ia32_cldemote
__builtin_ia32_clflushopt
__builtin_ia32_clrssbsy
__builtin_ia32_clui
__builtin_ia32_clwb
__builtin_ia32_clzero
__builtin_ia32_directstore_u32
__builtin_ia32_directstore_u64
__builtin_ia32_enqcmd
__builtin_ia32_enqcmds
__builtin_ia32_readeflags_u32
__builtin_ia32_readeflags_u64
__builtin_ia32_writeeflags_u32
__builtin_ia32_writeeflags_u64
__builtin_ia32_vfmaddsubpd
__builtin_ia32_vfmaddsubpd256
__builtin_ia32_vfmaddsubps
__builtin_ia32_vfmaddsubps256
__builtin_ia32_fxrstor
__builtin_ia32_fxrstor64
__builtin_ia32_fxsave
__builtin_ia32_fxsave64
__builtin_ia32_incsspd
__builtin_ia32_incsspq
__builtin_ia32_invpcid
__builtin_ia32_tile_loadconfig
__builtin_ia32_llwpcb
__builtin_ia32_loadiwkey
__builtin_ia32_lwpins32
__builtin_ia32_lwpins64
__builtin_ia32_lwpval32
__builtin_ia32_lwpval64
__builtin_ia32_emms
__builtin_ia32_femms
__builtin_ia32_maskmovq
__builtin_ia32_movntq
__builtin_ia32_packssdw
__builtin_ia32_packsswb
__builtin_ia32_packuswb
__builtin_ia32_paddb
__builtin_ia32_paddd
__builtin_ia32_paddq
__builtin_ia32_paddw
__builtin_ia32_paddsb
__builtin_ia32_paddsw
__builtin_ia32_paddusb
__builtin_ia32_paddusw
__builtin_ia32_palignr
__builtin_ia32_pand
__builtin_ia32_pandn
__builtin_ia32_pavgb
__builtin_ia32_pavgw
__builtin_ia32_pcmpeqb
__builtin_ia32_pcmpeqd
__builtin_ia32_pcmpeqw
__builtin_ia32_pcmpgtb
__builtin_ia32_pcmpgtd
__builtin_ia32_pcmpgtw
__builtin_ia32_vec_ext_v4hi
__builtin_ia32_vec_set_v4hi
__builtin_ia32_pmaddwd
__builtin_ia32_pmaxsw
__builtin_ia32_pmaxub
__builtin_ia32_pminsw
__builtin_ia32_pminub
__builtin_ia32_pmovmskb
__builtin_ia32_pmulhw
__builtin_ia32_pmulhuw
__builtin_ia32_pmullw
__builtin_ia32_pmuludq
__builtin_ia32_por
__builtin_ia32_psadbw
__builtin_ia32_pslld
__builtin_ia32_psllq
__builtin_ia32_psllw
__builtin_ia32_pslldi
__builtin_ia32_psllqi
__builtin_ia32_psllwi
__builtin_ia32_psrad
__builtin_ia32_psraw
__builtin_ia32_psradi
__builtin_ia32_psrawi
__builtin_ia32_psrld
__builtin_ia32_psrlq
__builtin_ia32_psrlw
__builtin_ia32_psrldi
__builtin_ia32_psrlqi
__builtin_ia32_psrlwi
__builtin_ia32_psubb
__builtin_ia32_psubd
__builtin_ia32_psubq
__builtin_ia32_psubw
__builtin_ia32_psubsb
__builtin_ia32_psubsw
__builtin_ia32_psubusb
__builtin_ia32_psubusw
__builtin_ia32_punpckhbw
__builtin_ia32_punpckhdq
__builtin_ia32_punpckhwd
__builtin_ia32_punpcklbw
__builtin_ia32_punpckldq
__builtin_ia32_punpcklwd
__builtin_ia32_pxor
__builtin_ia32_monitorx
__builtin_ia32_movdir64b
__builtin_ia32_mwaitx
__builtin_ia32_pclmulqdq128
__builtin_ia32_pclmulqdq256
__builtin_ia32_pclmulqdq512
__builtin_ia32_ptwrite32
__builtin_ia32_ptwrite64
__builtin_ia32_rdfsbase32
__builtin_ia32_rdfsbase64
__builtin_ia32_rdgsbase32
__builtin_ia32_rdgsbase64
__builtin_ia32_rdpid
__builtin_ia32_rdpkru
__builtin_ia32_rdpmc
__builtin_ia32_rdsspd
__builtin_ia32_rdsspq
__builtin_ia32_rdtsc
__builtin_ia32_rstorssp
__builtin_ia32_saveprevssp
__builtin_ia32_senduipi
__builtin_ia32_serialize
__builtin_ia32_setssbsy
__builtin_ia32_sha1msg1
__builtin_ia32_sha1msg2
__builtin_ia32_sha1nexte
__builtin_ia32_sha1rnds4
__builtin_ia32_sha256msg1
__builtin_ia32_sha256msg2
__builtin_ia32_sha256rnds2
__builtin_ia32_slwpcb
__builtin_ia32_cmpss
__builtin_ia32_comieq
__builtin_ia32_comige
__builtin_ia32_comigt
__builtin_ia32_comile
__builtin_ia32_comilt
__builtin_ia32_comineq
__builtin_ia32_cvtpd2pi
__builtin_ia32_cvtpi2pd
__builtin_ia32_cvtpi2ps
__builtin_ia32_cvtps2pi
__builtin_ia32_cvtss2si
__builtin_ia32_cvtss2si64
__builtin_ia32_cvttpd2pi
__builtin_ia32_cvttps2pi
__builtin_ia32_cvttss2si
__builtin_ia32_cvttss2si64
__builtin_ia32_maxps
__builtin_ia32_maxss
__builtin_ia32_minps
__builtin_ia32_minss
__builtin_ia32_movmskps
__builtin_ia32_pshufw
__builtin_ia32_rcpps
__builtin_ia32_rcpss
__builtin_ia32_rsqrtps
__builtin_ia32_rsqrtss
__builtin_ia32_sfence
__builtin_ia32_ucomieq
__builtin_ia32_ucomige
__builtin_ia32_ucomigt
__builtin_ia32_ucomile
__builtin_ia32_ucomilt
__builtin_ia32_ucomineq
__builtin_ia32_clflush
__builtin_ia32_cmpsd
__builtin_ia32_comisdeq
__builtin_ia32_comisdge
__builtin_ia32_comisdgt
__builtin_ia32_comisdle
__builtin_ia32_comisdlt
__builtin_ia32_comisdneq
__builtin_ia32_cvtpd2dq
__builtin_ia32_cvtpd2ps
__builtin_ia32_cvtps2dq
__builtin_ia32_cvtsd2si
__builtin_ia32_cvtsd2si64
__builtin_ia32_cvtsd2ss
__builtin_ia32_cvttpd2dq
__builtin_ia32_cvttps2dq
__builtin_ia32_cvttsd2si
__builtin_ia32_cvttsd2si64
__builtin_ia32_lfence
__builtin_ia32_maskmovdqu
__builtin_ia32_maxpd
__builtin_ia32_maxsd
__builtin_ia32_mfence
__builtin_ia32_minpd
__builtin_ia32_minsd
__builtin_ia32_movmskpd
__builtin_ia32_packssdw128
__builtin_ia32_packsswb128
__builtin_ia32_packuswb128
__builtin_ia32_pause
__builtin_ia32_pavgb128
__builtin_ia32_pavgw128
__builtin_ia32_pmaddwd128
__builtin_ia32_pmovmskb128
__builtin_ia32_pmulhw128
__builtin_ia32_pmulhuw128
__builtin_ia32_psadbw128
__builtin_ia32_pslld128
__builtin_ia32_psllq128
__builtin_ia32_psllw128
__builtin_ia32_pslldi128
__builtin_ia32_psllqi128
__builtin_ia32_psllwi128
__builtin_ia32_psrad128
__builtin_ia32_psraw128
__builtin_ia32_psradi128
__builtin_ia32_psrawi128
__builtin_ia32_psrld128
__builtin_ia32_psrlq128
__builtin_ia32_psrlw128
__builtin_ia32_psrldi128
__builtin_ia32_psrlqi128
__builtin_ia32_psrlwi128
__builtin_ia32_ucomisdeq
__builtin_ia32_ucomisdge
__builtin_ia32_ucomisdgt
__builtin_ia32_ucomisdle
__builtin_ia32_ucomisdlt
__builtin_ia32_ucomisdneq
__builtin_ia32_addsubpd
__builtin_ia32_addsubps
__builtin_ia32_haddpd
__builtin_ia32_haddps
__builtin_ia32_hsubpd
__builtin_ia32_hsubps
__builtin_ia32_lddqu
__builtin_ia32_monitor
__builtin_ia32_mwait
__builtin_ia32_blendvpd
__builtin_ia32_blendvps
__builtin_ia32_dppd
__builtin_ia32_dpps
__builtin_ia32_insertps128
__builtin_ia32_mpsadbw128
__builtin_ia32_packusdw128
__builtin_ia32_pblendvb128
__builtin_ia32_phminposuw128
__builtin_ia32_ptestc128
__builtin_ia32_ptestnzc128
__builtin_ia32_ptestz128
__builtin_ia32_roundpd
__builtin_ia32_roundps
__builtin_ia32_roundsd
__builtin_ia32_roundss
__builtin_ia32_crc32hi
__builtin_ia32_crc32si
__builtin_ia32_crc32qi
__builtin_ia32_crc32di
__builtin_ia32_pcmpestri128
__builtin_ia32_pcmpestria128
__builtin_ia32_pcmpestric128
__builtin_ia32_pcmpestrio128
__builtin_ia32_pcmpestris128
__builtin_ia32_pcmpestriz128
__builtin_ia32_pcmpestrm128
__builtin_ia32_pcmpistri128
__builtin_ia32_pcmpistria128
__builtin_ia32_pcmpistric128
__builtin_ia32_pcmpistrio128
__builtin_ia32_pcmpistris128
__builtin_ia32_pcmpistriz128
__builtin_ia32_pcmpistrm128
__builtin_ia32_extrq
__builtin_ia32_extrqi
__builtin_ia32_insertq
__builtin_ia32_insertqi
__builtin_ia32_pabsb
__builtin_ia32_pabsd
__builtin_ia32_pabsw
__builtin_ia32_phaddd
__builtin_ia32_phaddd128
__builtin_ia32_phaddsw
__builtin_ia32_phaddsw128
__builtin_ia32_phaddw
__builtin_ia32_phaddw128
__builtin_ia32_phsubd
__builtin_ia32_phsubd128
__builtin_ia32_phsubsw
__builtin_ia32_phsubsw128
__builtin_ia32_phsubw
__builtin_ia32_phsubw128
__builtin_ia32_pmaddubsw
__builtin_ia32_pmaddubsw128
__builtin_ia32_pmulhrsw
__builtin_ia32_pmulhrsw128
__builtin_ia32_pshufb
__builtin_ia32_pshufb128
__builtin_ia32_psignb
__builtin_ia32_psignb128
__builtin_ia32_psignd
__builtin_ia32_psignd128
__builtin_ia32_psignw
__builtin_ia32_psignw128
__builtin_ia32_tile_storeconfig
__builtin_ia32_stui
__builtin_ia32_bextri_u32
__builtin_ia32_bextri_u64
__builtin_ia32_tdpbf16ps
__builtin_ia32_tdpbssd
__builtin_ia32_tdpbssd_internal
__builtin_ia32_tdpbsud
__builtin_ia32_tdpbusd
__builtin_ia32_tdpbuud
__builtin_ia32_testui
__builtin_ia32_tileloadd64
__builtin_ia32_tileloadd64_internal
__builtin_ia32_tileloaddt164
__builtin_ia32_tilerelease
__builtin_ia32_tilestored64
__builtin_ia32_tilestored64_internal
__builtin_ia32_tilezero
__builtin_ia32_tilezero_internal
__builtin_ia32_tpause
__builtin_ia32_umonitor
__builtin_ia32_umwait
__builtin_ia32_vcvtps2ph
__builtin_ia32_vcvtps2ph256
__builtin_ia32_vgf2p8affineinvqb_v16qi
__builtin_ia32_vgf2p8affineinvqb_v32qi
__builtin_ia32_vgf2p8affineinvqb_v64qi
__builtin_ia32_vgf2p8affineqb_v16qi
__builtin_ia32_vgf2p8affineqb_v32qi
__builtin_ia32_vgf2p8affineqb_v64qi
__builtin_ia32_vgf2p8mulb_v16qi
__builtin_ia32_vgf2p8mulb_v32qi
__builtin_ia32_vgf2p8mulb_v64qi
__builtin_ia32_wbinvd
__builtin_ia32_wbnoinvd
__builtin_ia32_wrfsbase32
__builtin_ia32_wrfsbase64
__builtin_ia32_wrgsbase32
__builtin_ia32_wrgsbase64
__builtin_ia32_wrpkru
__builtin_ia32_wrssd
__builtin_ia32_wrssq
__builtin_ia32_wrussd
__builtin_ia32_wrussq
__builtin_ia32_xabort
__builtin_ia32_xbegin
__builtin_ia32_xend
__builtin_ia32_vfrczpd
__builtin_ia32_vfrczpd256
__builtin_ia32_vfrczps
__builtin_ia32_vfrczps256
__builtin_ia32_vfrczsd
__builtin_ia32_vfrczss
__builtin_ia32_vpermil2pd
__builtin_ia32_vpermil2pd256
__builtin_ia32_vpermil2ps
__builtin_ia32_vpermil2ps256
__builtin_ia32_vphaddbd
__builtin_ia32_vphaddbq
__builtin_ia32_vphaddbw
__builtin_ia32_vphadddq
__builtin_ia32_vphaddubd
__builtin_ia32_vphaddubq
__builtin_ia32_vphaddubw
__builtin_ia32_vphaddudq
__builtin_ia32_vphadduwd
__builtin_ia32_vphadduwq
__builtin_ia32_vphaddwd
__builtin_ia32_vphaddwq
__builtin_ia32_vphsubbw
__builtin_ia32_vphsubdq
__builtin_ia32_vphsubwd
__builtin_ia32_vpmacsdd
__builtin_ia32_vpmacsdqh
__builtin_ia32_vpmacsdql
__builtin_ia32_vpmacssdd
__builtin_ia32_vpmacssdqh
__builtin_ia32_vpmacssdql
__builtin_ia32_vpmacsswd
__builtin_ia32_vpmacssww
__builtin_ia32_vpmacswd
__builtin_ia32_vpmacsww
__builtin_ia32_vpmadcsswd
__builtin_ia32_vpmadcswd
__builtin_ia32_vpperm
__builtin_ia32_vpshab
__builtin_ia32_vpshad
__builtin_ia32_vpshaq
__builtin_ia32_vpshaw
__builtin_ia32_vpshlb
__builtin_ia32_vpshld
__builtin_ia32_vpshlq
__builtin_ia32_vpshlw
__builtin_ia32_xresldtrk
__builtin_ia32_xsusldtrk
__builtin_ia32_xtest
__builtin_bitrev
__builtin_getid
__builtin_getps
__builtin_setps
__dmb
__dsb
__isb
_MoveFromCoprocessor
_MoveFromCoprocessor2
-.5555545
ccccccccc
ticInterpositionSemanticInterposiant SDK VersionTarget Variant S
MaxInternalCountMaxFunctionCountIsPartialProfiletialProfileRatioPartialProfileRa
lazy_symbol_poinular
thread_local_regpointers
non_lazy_symbol_cstring_literalsliteral_pointersariable_pointersthread_local_var_local_variablesd_local_zerofillthread_local_zerq
l_parameter_packDW_TAG_GNU_formaDW_TAG_with_stmtDW_TAG_base_typeDW_TAG_file_typeDW_TAG_try_blockDW_TAG_namespaceDW_TAG_conditionDW_TAG_type_unitDW_TAG_call_siteDW_TAG_MIPS_looptemplate
DW_TAG_function_l_site_parameterlined_subroutineDW_TAG_inlined_sr_to_member_typeDW_TAG_ptr_to_mecess_declarationDW_TAG_access_dePLE_ptrauth_typeDW_TAG_APPLE_ptrRLAND_Delphi_setDW_TAG_BORLAND_D_value_parameterDW_TAG_template_e_reference_typeDW_TAG_rvalue_reND_Delphi_stringified_parametersDW_TAG_unspecifiD_Delphi_variante_type_parameterDW_TAG_GNU_call__subroutine_typeDW_TAG_subroutin_dwarf_procedureDW_TAG_dwarf_pro_imported_moduleDW_TAG_imported_G_reference_typeDW_TAG_referenceG_structure_typeDW_TAG_structureG_interface_typeDW_TAG_interfaceG_template_aliasG_immutable_typeDW_TAG_immutableG_class_templateDW_TAG_class_temG_APPLE_propertyDW_TAG_APPLE_proTAG_pointer_typeDW_TAG_pointer_tTAG_compile_unitDW_TAG_compile_uTAG_common_blockDW_TAG_common_blTAG_variant_partDW_TAG_variant_pTAG_partial_unitDW_TAG_partial_uTAG_coarray_typeDW_TAG_coarray_tTAG_dynamic_typeDW_TAG_dynamic_tTAG_format_labelDW_TAG_format_laDW_TAG_lexical_bDW_TAG_subrange_item
DW_TAG_namelist_DW_TAG_volatile_DW_TAG_restrict_unit
DW_TAG_skeleton_site
rted_declarationenumeration_typeDW_TAG_enumeratiformal_parameterDW_TAG_formal_pacommon_inclusionDW_TAG_common_inunspecified_typegeneric_subrangeDW_TAG_generic_sBORLAND_propertyDW_TAG_BORLAND_pDW_TAG_entry_poiDW_TAG_string_tyDW_TAG_inheritanDW_TAG_catch_bloDW_TAG_packed_tyDW_TAG_thrown_tyDW_TAG_shared_tyDW_TAG_atomic_tyDW_TAG_array_typDW_TAG_class_typDW_TAG_union_typDW_TAG_const_typDW_TAG_enumeratoDW_TAG_subprograASM_location_intDW_OP_WASM_locatOP_WASM_locationOP_LLVM_fragmentDW_OP_LLVM_fragmpush_tls_addressDW_OP_GNU_push_tDW_OP_LLVM_conve_GNU_entry_valueDW_OP_GNU_entry__GNU_const_indexDW_OP_GNU_const__LLVM_tag_offsetDW_OP_LLVM_tag_o_cfa
DW_OP_call_frameDW_OP_implicit_vndex
DW_OP_GNU_addr_iform_tls_addressDW_OP_form_tls_aimplicit_pointerDW_OP_implicit_pLLVM_entry_valueDW_OP_LLVM_entryh_object_addressDW_OP_push_objecDW_OP_deref_sizeDW_OP_const_typeDW_OP_deref_typeDW_OP_plus_uconsDW_OP_xderef_sizDW_OP_stack_valuDW_OP_entry_valuDW_OP_regval_typDW_OP_xderef_typDW_OP_reinterpreATE_signed_fixedDW_ATE_signed_fiE_packed_decimalDW_ATE_packed_deE_numeric_stringDW_ATE_numeric_sE_unsigned_fixedDW_ATE_unsigned__imaginary_floatDW_ATE_imaginaryDW_ATE_signed_char
loat
DW_ATE_complex_fchar
DW_ATE_decimal_fDW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Fortran03
LANG_C_plus_plusDW_LANG_C_plus_pG_ObjC_plus_plusDW_LANG_ObjC_pluG_C_plus_plus_03G_C_plus_plus_11DW_LANG_Pascal83ript
DW_LANG_RenderScGLE_RenderScriptDW_LANG_GOOGLE_RG_C_plus_plus_14G_Mips_AssemblerDW_LANG_Mips_AssG_BORLAND_DelphiDW_LANG_BORLAND_DW_CC_LLVM_Win64DW_CC_LLVM_AAPCSDW_CC_LLVM_Swiftfastcall
DW_CC_BORLAND_ms_BORLAND_stdcallDW_CC_BORLAND_st_LLVM_vectorcallDW_CC_LLVM_vecto_LLVM_X86_64SysVDW_CC_LLVM_X86_6_LLVM_X86RegCallDW_CC_LLVM_X86ReBORLAND_safecallDW_CC_BORLAND_saBORLAND_msreturnBORLAND_thiscallDW_CC_BORLAND_thBORLAND_fastcallDW_CC_BORLAND_faLLVM_PreserveAllDW_CC_LLVM_Presend_fastcall_i386DW_CC_GNU_borlans_sh
DW_CC_GNU_renesascal
DW_CC_BORLAND_pa_VFP
Tail
enCL
DW_CC_GDB_IBM_OpCC_pass_by_valueDW_CC_pass_by_vaass_by_referenceDW_CC_pass_by_reLVM_IntelOclBiccDW_CC_LLVM_IntelLVM_SpirFunctionDW_CC_LLVM_SpirFLVM_OpenCLKernelDW_CC_LLVM_OpenCLVM_PreserveMostMACINFO_end_fileDW_MACINFO_end_fCINFO_start_fileDW_MACINFO_startCINFO_vendor_extDW_MACINFO_vendoDW_MACINFO_undefDW_MACINFO_definC/C++ MSF 7.00
Microsoft C/C++ 
[cmark] calloc returned null pointer, aborting
[cmark] realloc returned null pointer, aborting
image
mailto:
[cmark] cmark_strbuf_grow requests buffer with size > %d, aborting
0123456789ABCDEFabcdef
AElig
Aacute
Abreve
Acirc
Agrave
Alpha
Amacr
Aogon
Aopf
ApplyFunction
Aring
Ascr
Assign
Atilde
Auml
Backslash
Barv
Barwed
Because
Bernoullis
Beta
Bopf
Breve
Bscr
Bumpeq
CHcy
COPY
Cacute
CapitalDifferentialD
Cayleys
Ccaron
Ccedil
Ccirc
Cconint
Cdot
Cedilla
CenterDot
CircleDot
CircleMinus
CirclePlus
CircleTimes
ClockwiseContourIntegral
CloseCurlyDoubleQuote
CloseCurlyQuote
Colon
Colone
Congruent
Conint
ContourIntegral
Copf
Coproduct
CounterClockwiseContourIntegral
Cross
Cscr
CupCap
DDotrahd
DJcy
DScy
DZcy
Dagger
Darr
Dashv
Dcaron
Delta
DiacriticalAcute
DiacriticalDot
DiacriticalDoubleAcute
DiacriticalGrave
DiacriticalTilde
Diamond
DifferentialD
Dopf
DotDot
DotEqual
DoubleContourIntegral
DoubleDot
DoubleDownArrow
DoubleLeftArrow
DoubleLeftRightArrow
DoubleLeftTee
DoubleLongLeftArrow
DoubleLongLeftRightArrow
DoubleLongRightArrow
DoubleRightArrow
DoubleRightTee
DoubleUpArrow
DoubleUpDownArrow
DoubleVerticalBar
DownArrow
DownArrowBar
DownArrowUpArrow
DownBreve
DownLeftRightVector
DownLeftTeeVector
DownLeftVector
DownLeftVectorBar
DownRightTeeVector
DownRightVector
DownRightVectorBar
DownTee
DownTeeArrow
Downarrow
Dscr
Dstrok
Eacute
Ecaron
Ecirc
Edot
Egrave
Element
Emacr
EmptySmallSquare
EmptyVerySmallSquare
Eogon
Eopf
Epsilon
Equal
EqualTilde
Equilibrium
Escr
Esim
Euml
Exists
ExponentialE
FilledSmallSquare
FilledVerySmallSquare
Fopf
ForAll
Fouriertrf
Fscr
GJcy
Gamma
Gammad
Gbreve
Gcedil
Gcirc
Gdot
Gopf
GreaterEqual
GreaterEqualLess
GreaterFullEqual
GreaterGreater
GreaterLess
GreaterSlantEqual
GreaterTilde
Gscr
HARDcy
Hacek
Hcirc
HilbertSpace
Hopf
HorizontalLine
Hscr
Hstrok
HumpDownHump
HumpEqual
IEcy
IJlig
IOcy
Iacute
Icirc
Idot
Igrave
Imacr
ImaginaryI
Implies
Integral
Intersection
InvisibleComma
InvisibleTimes
Iogon
Iopf
Iota
Iscr
Itilde
Iukcy
Iuml
Jcirc
Jopf
Jscr
Jsercy
Jukcy
KHcy
KJcy
Kappa
Kcedil
Kopf
Kscr
LJcy
Lacute
Lambda
Lang
Laplacetrf
Larr
Lcaron
Lcedil
LeftAngleBracket
LeftArrow
LeftArrowBar
LeftArrowRightArrow
LeftCeiling
LeftDoubleBracket
LeftDownTeeVector
LeftDownVector
LeftDownVectorBar
LeftFloor
LeftRightArrow
LeftRightVector
LeftTee
LeftTeeArrow
LeftTeeVector
LeftTriangle
LeftTriangleBar
LeftTriangleEqual
LeftUpDownVector
LeftUpTeeVector
LeftUpVector
LeftUpVectorBar
LeftVector
LeftVectorBar
Leftarrow
Leftrightarrow
LessEqualGreater
LessFullEqual
LessGreater
LessLess
LessSlantEqual
LessTilde
Lleftarrow
Lmidot
LongLeftArrow
LongLeftRightArrow
LongRightArrow
Longleftarrow
Longleftrightarrow
Longrightarrow
Lopf
LowerLeftArrow
LowerRightArrow
Lscr
Lstrok
MediumSpace
Mellintrf
MinusPlus
Mopf
Mscr
NJcy
Nacute
Ncaron
Ncedil
NegativeMediumSpace
NegativeThickSpace
NegativeThinSpace
NegativeVeryThinSpace
NestedGreaterGreater
NestedLessLess
NewLine
NoBreak
NonBreakingSpace
Nopf
NotCongruent
NotCupCap
NotDoubleVerticalBar
NotElement
NotEqual
NotEqualTilde
NotExists
NotGreater
NotGreaterEqual
NotGreaterFullEqual
NotGreaterGreater
NotGreaterLess
NotGreaterSlantEqual
NotGreaterTilde
NotHumpDownHump
NotHumpEqual
NotLeftTriangle
NotLeftTriangleBar
NotLeftTriangleEqual
NotLess
NotLessEqual
NotLessGreater
NotLessLess
NotLessSlantEqual
NotLessTilde
NotNestedGreaterGreater
NotNestedLessLess
NotPrecedes
NotPrecedesEqual
NotPrecedesSlantEqual
NotReverseElement
NotRightTriangle
NotRightTriangleBar
NotRightTriangleEqual
NotSquareSubset
NotSquareSubsetEqual
NotSquareSuperset
NotSquareSupersetEqual
NotSubset
NotSubsetEqual
NotSucceeds
NotSucceedsEqual
NotSucceedsSlantEqual
NotSucceedsTilde
NotSuperset
NotSupersetEqual
NotTilde
NotTildeEqual
NotTildeFullEqual
NotTildeTilde
NotVerticalBar
Nscr
Ntilde
OElig
Oacute
Ocirc
Odblac
Ograve
Omacr
Omega
Omicron
Oopf
OpenCurlyDoubleQuote
OpenCurlyQuote
Oscr
Oslash
Otilde
Otimes
Ouml
OverBar
OverBrace
OverBracket
OverParenthesis
PartialD
PlusMinus
Poincareplane
Popf
Precedes
PrecedesEqual
PrecedesSlantEqual
PrecedesTilde
Prime
Product
Proportion
Proportional
Pscr
QUOT
Qopf
Qscr
RBarr
Racute
Rang
Rarr
Rarrtl
Rcaron
Rcedil
ReverseElement
ReverseEquilibrium
ReverseUpEquilibrium
RightAngleBracket
RightArrow
RightArrowBar
RightArrowLeftArrow
RightCeiling
RightDoubleBracket
RightDownTeeVector
RightDownVector
RightDownVectorBar
RightFloor
RightTee
RightTeeArrow
RightTeeVector
RightTriangle
RightTriangleBar
RightTriangleEqual
RightUpDownVector
RightUpTeeVector
RightUpVector
RightUpVectorBar
RightVector
RightVectorBar
Rightarrow
Ropf
RoundImplies
Rrightarrow
Rscr
RuleDelayed
SHCHcy
SHcy
SOFTcy
Sacute
Scaron
Scedil
Scirc
ShortDownArrow
ShortLeftArrow
ShortRightArrow
ShortUpArrow
Sigma
SmallCircle
Sopf
Sqrt
Square
SquareIntersection
SquareSubset
SquareSubsetEqual
SquareSuperset
SquareSupersetEqual
SquareUnion
Sscr
Star
Subset
SubsetEqual
Succeeds
SucceedsEqual
SucceedsSlantEqual
SucceedsTilde
SuchThat
Superset
SupersetEqual
Supset
THORN
TRADE
TSHcy
TScy
Tcaron
Tcedil
Therefore
Theta
ThickSpace
ThinSpace
Tilde
TildeEqual
TildeFullEqual
TildeTilde
Topf
TripleDot
Tscr
Tstrok
Uacute
Uarr
Uarrocir
Ubrcy
Ubreve
Ucirc
Udblac
Ugrave
Umacr
UnderBar
UnderBrace
UnderBracket
UnderParenthesis
Union
UnionPlus
Uogon
Uopf
UpArrow
UpArrowBar
UpArrowDownArrow
UpDownArrow
UpEquilibrium
UpTee
UpTeeArrow
Uparrow
Updownarrow
UpperLeftArrow
UpperRightArrow
Upsi
Upsilon
Uring
Uscr
Utilde
Uuml
VDash
Vbar
Vdash
Vdashl
Verbar
Vert
VerticalBar
VerticalLine
VerticalSeparator
VerticalTilde
VeryThinSpace
Vopf
Vscr
Vvdash
Wcirc
Wedge
Wopf
Wscr
Xopf
Xscr
YAcy
YIcy
YUcy
Yacute
Ycirc
Yopf
Yscr
Yuml
ZHcy
Zacute
Zcaron
Zdot
ZeroWidthSpace
Zeta
Zopf
Zscr
aacute
abreve
acirc
acute
aelig
agrave
alefsym
aleph
alpha
amacr
amalg
andand
andd
andslope
andv
ange
angle
angmsd
angmsdaa
angmsdab
angmsdac
angmsdad
angmsdae
angmsdaf
angmsdag
angmsdah
angrt
angrtvb
angrtvbd
angsph
angst
angzarr
aogon
aopf
apacir
apid
apos
approx
approxeq
aring
ascr
asymp
asympeq
atilde
auml
awconint
awint
bNot
backcong
backepsilon
backprime
backsim
backsimeq
barvee
barwed
barwedge
bbrk
bbrktbrk
bcong
bdquo
becaus
because
bemptyv
bepsi
bernou
beta
beth
between
bigcap
bigcirc
bigcup
bigodot
bigoplus
bigotimes
bigsqcup
bigstar
bigtriangledown
bigtriangleup
biguplus
bigvee
bigwedge
bkarow
blacklozenge
blacksquare
blacktriangle
blacktriangledown
blacktriangleleft
blacktriangleright
blank
blk12
blk14
blk34
block
bnequiv
bnot
bopf
bottom
bowtie
boxDL
boxDR
boxDl
boxDr
boxH
boxHD
boxHU
boxHd
boxHu
boxUL
boxUR
boxUl
boxUr
boxV
boxVH
boxVL
boxVR
boxVh
boxVl
boxVr
boxbox
boxdL
boxdR
boxdl
boxdr
boxh
boxhD
boxhU
boxhd
boxhu
boxminus
boxplus
boxtimes
boxuL
boxuR
boxul
boxur
boxv
boxvH
boxvL
boxvR
boxvh
boxvl
boxvr
bprime
breve
brvbar
bscr
bsemi
bsim
bsime
bsol
bsolb
bsolhsub
bull
bullet
bump
bumpE
bumpe
bumpeq
cacute
capand
capbrcup
capcap
capcup
capdot
caps
caret
caron
ccaps
ccaron
ccedil
ccirc
ccups
ccupssm
cdot
cedil
cemptyv
cent
centerdot
chcy
check
checkmark
cirE
circ
circeq
circlearrowleft
circlearrowright
circledR
circledS
circledast
circledcirc
circleddash
cire
cirfnint
cirmid
cirscir
clubs
clubsuit
colon
colone
coloneq
comma
commat
comp
compfn
complement
complexes
cong
congdot
conint
copf
coprod
copy
copysr
crarr
cross
cscr
csub
csube
csup
csupe
ctdot
cudarrl
cudarrr
cuepr
cuesc
cularr
cularrp
cupbrcap
cupcap
cupcup
cupdot
cupor
cups
curarr
curarrm
curlyeqprec
curlyeqsucc
curlyvee
curlywedge
curren
curvearrowleft
curvearrowright
cuvee
cuwed
cwconint
cwint
cylcty
dArr
dHar
dagger
daleth
darr
dash
dashv
dbkarow
dblac
dcaron
ddagger
ddarr
ddotseq
delta
demptyv
dfisht
dharl
dharr
diam
diamond
diamondsuit
diams
digamma
disin
divide
divideontimes
divonx
djcy
dlcorn
dlcrop
dollar
dopf
doteq
doteqdot
dotminus
dotplus
dotsquare
doublebarwedge
downarrow
downdownarrows
downharpoonleft
downharpoonright
drbkarow
drcorn
drcrop
dscr
dscy
dsol
dstrok
dtdot
dtri
dtrif
duarr
duhar
dwangle
dzcy
dzigrarr
eDDot
eDot
eacute
easter
ecaron
ecir
ecirc
ecolon
edot
efDot
egrave
egsdot
elinters
elsdot
emacr
empty
emptyset
emptyv
emsp
emsp13
emsp14
ensp
eogon
eopf
epar
eparsl
eplus
epsi
epsilon
epsiv
eqcirc
eqcolon
eqsim
eqslantgtr
eqslantless
equals
equest
equiv
equivDD
eqvparsl
erDot
erarr
escr
esdot
esim
euml
euro
excl
exist
expectation
exponentiale
fallingdotseq
female
ffilig
fflig
ffllig
filig
fjlig
flat
fllig
fltns
fnof
fopf
forall
fork
forkv
fpartint
frac12
frac13
frac14
frac15
frac16
frac18
frac23
frac25
frac34
frac35
frac38
frac45
frac56
frac58
frac78
frasl
frown
fscr
gacute
gamma
gammad
gbreve
gcirc
gdot
geqq
geqslant
gescc
gesdot
gesdoto
gesdotol
gesl
gesles
gimel
gjcy
gnap
gnapprox
gneq
gneqq
gnsim
gopf
grave
gscr
gsim
gsime
gsiml
gtcc
gtcir
gtdot
gtlPar
gtquest
gtrapprox
gtrarr
gtrdot
gtreqless
gtreqqless
gtrless
gtrsim
gvertneqq
gvnE
hArr
hairsp
half
hamilt
hardcy
harr
harrcir
harrw
hbar
hcirc
hearts
heartsuit
hellip
hercon
hksearow
hkswarow
hoarr
homtht
hookleftarrow
hookrightarrow
hopf
horbar
hscr
hslash
hstrok
hybull
hyphen
iacute
icirc
iecy
iexcl
igrave
iiiint
iiint
iinfin
iiota
ijlig
imacr
imagline
imagpart
imath
imof
imped
incare
infin
infintie
inodot
intcal
integers
intercal
intlarhk
intprod
iocy
iogon
iopf
iota
iprod
iquest
iscr
isin
isinE
isindot
isins
isinsv
isinv
itilde
iukcy
iuml
jcirc
jmath
jopf
jscr
jsercy
jukcy
kappa
kappav
kcedil
kgreen
khcy
kjcy
kopf
kscr
lAarr
lArr
lAtail
lBarr
lHar
lacute
laemptyv
lagran
lambda
lang
langd
langle
laquo
larr
larrb
larrbfs
larrfs
larrhk
larrlp
larrpl
larrsim
larrtl
latail
late
lates
lbarr
lbbrk
lbrace
lbrack
lbrke
lbrksld
lbrkslu
lcaron
lcedil
lceil
lcub
ldca
ldquo
ldquor
ldrdhar
ldrushar
ldsh
leftarrow
leftarrowtail
leftharpoondown
leftharpoonup
leftleftarrows
leftrightarrow
leftrightarrows
leftrightharpoons
leftrightsquigarrow
leftthreetimes
leqq
leqslant
lescc
lesdot
lesdoto
lesdotor
lesg
lesges
lessapprox
lessdot
lesseqgtr
lesseqqgtr
lessgtr
lesssim
lfisht
lfloor
lhard
lharu
lharul
lhblk
ljcy
llarr
llcorner
llhard
lltri
lmidot
lmoust
lmoustache
lnap
lnapprox
lneq
lneqq
lnsim
loang
loarr
lobrk
longleftarrow
longleftrightarrow
longmapsto
longrightarrow
looparrowleft
looparrowright
lopar
lopf
loplus
lotimes
lowast
lowbar
lozenge
lozf
lpar
lparlt
lrarr
lrcorner
lrhar
lrhard
lrtri
lsaquo
lscr
lsim
lsime
lsimg
lsqb
lsquo
lsquor
lstrok
ltcc
ltcir
ltdot
lthree
ltimes
ltlarr
ltquest
ltrPar
ltri
ltrie
ltrif
lurdshar
luruhar
lvertneqq
lvnE
mDDot
macr
male
malt
maltese
mapsto
mapstodown
mapstoleft
mapstoup
marker
mcomma
mdash
measuredangle
micro
midast
midcir
middot
minus
minusb
minusd
minusdu
mlcp
mldr
mnplus
models
mopf
mscr
mstpos
multimap
mumap
nGtv
nLeftarrow
nLeftrightarrow
nLtv
nRightarrow
nVDash
nVdash
nabla
nacute
nang
napE
napid
napos
napprox
natur
natural
naturals
nbsp
nbump
nbumpe
ncap
ncaron
ncedil
ncong
ncongdot
ncup
ndash
neArr
nearhk
nearr
nearrow
nedot
nequiv
nesear
nesim
nexist
nexists
ngeq
ngeqq
ngeqslant
nges
ngsim
ngtr
nhArr
nharr
nhpar
nisd
njcy
nlArr
nlarr
nldr
nleftarrow
nleftrightarrow
nleq
nleqq
nleqslant
nles
nless
nlsim
nltri
nltrie
nmid
nopf
notin
notinE
notindot
notinva
notinvb
notinvc
notni
notniva
notnivb
notnivc
npar
nparallel
nparsl
npart
npolint
nprcue
npre
nprec
npreceq
nrArr
nrarr
nrarrc
nrarrw
nrightarrow
nrtri
nrtrie
nsccue
nsce
nscr
nshortmid
nshortparallel
nsim
nsime
nsimeq
nsmid
nspar
nsqsube
nsqsupe
nsub
nsubE
nsube
nsubset
nsubseteq
nsubseteqq
nsucc
nsucceq
nsup
nsupE
nsupe
nsupset
nsupseteq
nsupseteqq
ntgl
ntilde
ntlg
ntriangleleft
ntrianglelefteq
ntriangleright
ntrianglerighteq
numero
numsp
nvDash
nvHarr
nvap
nvdash
nvge
nvgt
nvinfin
nvlArr
nvle
nvlt
nvltrie
nvrArr
nvrtrie
nvsim
nwArr
nwarhk
nwarr
nwarrow
nwnear
oacute
oast
ocir
ocirc
odash
odblac
odiv
odot
odsold
oelig
ofcir
ogon
ograve
ohbar
oint
olarr
olcir
olcross
oline
omacr
omega
omicron
omid
ominus
oopf
opar
operp
oplus
orarr
order
orderof
ordf
ordm
origof
oror
orslope
oscr
oslash
osol
otilde
otimes
otimesas
ouml
ovbar
para
parallel
parsim
parsl
part
percnt
period
permil
perp
pertenk
phiv
phmmat
phone
pitchfork
planck
planckh
plankv
plus
plusacir
plusb
pluscir
plusdo
plusdu
pluse
plusmn
plussim
plustwo
pointint
popf
pound
prap
prcue
prec
precapprox
preccurlyeq
preceq
precnapprox
precneqq
precnsim
precsim
prime
primes
prnE
prnap
prnsim
prod
profalar
profline
profsurf
prop
propto
prsim
prurel
pscr
puncsp
qint
qopf
qprime
qscr
quaternions
quatint
quest
questeq
quot
rAarr
rArr
rAtail
rBarr
rHar
race
racute
radic
raemptyv
rang
rangd
range
rangle
raquo
rarr
rarrap
rarrb
rarrbfs
rarrc
rarrfs
rarrhk
rarrlp
rarrpl
rarrsim
rarrtl
rarrw
ratail
ratio
rationals
rbarr
rbbrk
rbrace
rbrack
rbrke
rbrksld
rbrkslu
rcaron
rcedil
rceil
rcub
rdca
rdldhar
rdquo
rdquor
rdsh
real
realine
realpart
reals
rect
rfisht
rfloor
rhard
rharu
rharul
rhov
rightarrow
rightarrowtail
rightharpoondown
rightharpoonup
rightleftarrows
rightleftharpoons
rightrightarrows
rightsquigarrow
rightthreetimes
ring
risingdotseq
rlarr
rlhar
rmoust
rmoustache
rnmid
roang
roarr
robrk
ropar
ropf
roplus
rotimes
rpar
rpargt
rppolint
rrarr
rsaquo
rscr
rsqb
rsquo
rsquor
rthree
rtimes
rtri
rtrie
rtrif
rtriltri
ruluhar
sacute
sbquo
scap
scaron
sccue
scedil
scirc
scnE
scnap
scnsim
scpolint
scsim
sdot
sdotb
sdote
seArr
searhk
searr
searrow
sect
semi
seswar
setminus
setmn
sext
sfrown
sharp
shchcy
shcy
shortmid
shortparallel
sigma
sigmaf
sigmav
simdot
sime
simeq
simg
simgE
siml
simlE
simne
simplus
simrarr
slarr
smallsetminus
smashp
smeparsl
smid
smile
smte
smtes
softcy
solb
solbar
sopf
spades
spadesuit
spar
sqcap
sqcaps
sqcup
sqcups
sqsub
sqsube
sqsubset
sqsubseteq
sqsup
sqsupe
sqsupset
sqsupseteq
square
squarf
squf
srarr
sscr
ssetmn
ssmile
sstarf
star
starf
straightepsilon
straightphi
strns
subE
subdot
sube
subedot
submult
subnE
subne
subplus
subrarr
subset
subseteq
subseteqq
subsetneq
subsetneqq
subsim
subsub
subsup
succ
succapprox
succcurlyeq
succeq
succnapprox
succneqq
succnsim
succsim
sung
sup1
sup2
sup3
supE
supdot
supdsub
supe
supedot
suphsol
suphsub
suplarr
supmult
supnE
supne
supplus
supset
supseteq
supseteqq
supsetneq
supsetneqq
supsim
supsub
supsup
swArr
swarhk
swarr
swarrow
swnwar
szlig
target
tbrk
tcaron
tcedil
tdot
telrec
there4
therefore
theta
thetasym
thetav
thickapprox
thicksim
thinsp
thkap
thksim
thorn
tilde
times
timesb
timesbar
timesd
tint
toea
topbot
topcir
topf
topfork
tosa
tprime
trade
triangle
triangledown
triangleleft
trianglelefteq
triangleq
triangleright
trianglerighteq
tridot
trie
triminus
triplus
trisb
tritime
trpezium
tscr
tscy
tshcy
tstrok
twixt
twoheadleftarrow
twoheadrightarrow
uArr
uHar
uacute
uarr
ubrcy
ubreve
ucirc
udarr
udblac
udhar
ufisht
ugrave
uharl
uharr
uhblk
ulcorn
ulcorner
ulcrop
ultri
umacr
uogon
uopf
uparrow
updownarrow
upharpoonleft
upharpoonright
uplus
upsi
upsih
upsilon
upuparrows
urcorn
urcorner
urcrop
uring
urtri
uscr
utdot
utilde
utri
utrif
uuarr
uuml
uwangle
vArr
vBar
vBarv
vDash
vangrt
varepsilon
varkappa
varnothing
varphi
varpi
varpropto
varr
varrho
varsigma
varsubsetneq
varsubsetneqq
varsupsetneq
varsupsetneqq
vartheta
vartriangleleft
vartriangleright
vdash
veebar
veeeq
vellip
verbar
vert
vltri
vnsub
vnsup
vopf
vprop
vrtri
vscr
vsubnE
vsubne
vsupnE
vsupne
vzigzag
wcirc
wedbar
wedge
wedgeq
weierp
wopf
wreath
wscr
xcap
xcirc
xcup
xdtri
xhArr
xharr
xlArr
xlarr
xmap
xnis
xodot
xopf
xoplus
xotime
xrArr
xrarr
xscr
xsqcup
xuplus
xutri
xvee
xwedge
yacute
yacy
ycirc
yicy
yopf
yscr
yucy
yuml
zacute
zcaron
zdot
zeetrf
zeta
zhcy
zigrarr
zopf
zscr
zwnj
share
swift
diagnostics
sourcekitd_initialize
initializing
sourcekitd_shutdown
shutting down
must dispose of previous response before completing again
error: 
Begin completions, 
 items
; typename=
; name=
End completions
Allocation failed
failed to open '
failed to read '
no input filenames specified
IDESwiftInterop
generic
cortex-a34
cortex-a35
cortex-a53
cortex-a55
cortex-a57
cortex-a65
cortex-a65ae
cortex-a72
cortex-a73
cortex-a75
cortex-a76
cortex-a76ae
cortex-a77
cortex-a78
cortex-a78c
cortex-r82
cortex-x1
neoverse-e1
neoverse-n1
neoverse-n2
neoverse-v1
cyclone
vortex
lightning
apple-a7
apple-a8
apple-a9
apple-a10
apple-a11
apple-a12
apple-a13
apple-a14
apple-m1
apple-s4
apple-s5
exynos-m3
exynos-m4
exynos-m5
falkor
saphira
kryo
thunderx2t99
thunderx3t110
thunderx
thunderxt88
thunderxt81
thunderxt83
tsv110
a64fx
carmel
invalid
+fp-armv8
+neon
+crc
+crypto
+dotprod
+fp16fml
+fullfp16
+spe
+ras
+lse
+rdm
+sve
+sve2
+sve2-aes
+sve2-sm4
+sve2-sha3
+sve2-bitperm
+rcpc
+brbe
+v8.1a
+v8.2a
+v8.3a
+v8.4a
+v8.5a
+v8.6a
+v8.7a
+v8r
none
non-leaf
leaf
b_key
<empty>
armv8-a
armv8.1-a
8.1-A
v8.1a
armv8.2-a
8.2-A
v8.2a
armv8.3-a
8.3-A
v8.3a
armv8.4-a
8.4-A
v8.4a
armv8.5-a
8.5-A
v8.5a
armv8.6-a
8.6-A
v8.6a
armv8.7-a
8.7-A
v8.7a
armv8-r
-crc
-lse
-rdm
crypto
-crypto
+sm4
-sm4
sha3
+sha3
-sha3
sha2
+sha2
-sha2
+aes
-aes
dotprod
-dotprod
-fp-armv8
simd
-neon
fp16
-fullfp16
fp16fml
-fp16fml
profile
-spe
-ras
-sve
sve2
-sve2
sve2-aes
-sve2-aes
sve2-sm4
-sve2-sm4
sve2-sha3
-sve2-sha3
sve2-bitperm
-sve2-bitperm
rcpc
-rcpc
+rand
-rand
memtag
+mte
-mte
ssbs
+ssbs
-ssbs
predres
+predres
-predres
bf16
+bf16
-bf16
i8mm
+i8mm
-i8mm
f32mm
+f32mm
-f32mm
f64mm
+f64mm
-f64mm
+tme
-tme
ls64
+ls64
-ls64
brbe
-brbe
v5te
v6sm
v6-m
v6kz
v7-a
v7-r
v7-m
v7em
v7e-m
aarch64
arm64
v8-a
v8.1a
v8.1-a
v8.2a
v8.2-a
v8.3a
v8.3-a
v8.4a
v8.4-a
v8.5a
v8.5-a
v8.6a
v8.6-a
v8.7a
v8.7-a
v8-r
v8m.base
v8-m.base
v8m.main
v8-m.main
v8.1m.main
v8.1-m.main
+vfp2
-vfp2
+vfp2sp
-vfp2sp
+vfp3
-vfp3
+vfp3d16
-vfp3d16
+vfp3d16sp
-vfp3d16sp
+vfp3sp
-vfp3sp
+fp16
-fp16
+vfp4
-vfp4
+vfp4d16
-vfp4d16
+vfp4d16sp
-vfp4d16sp
+vfp4sp
-vfp4sp
+fp-armv8
-fp-armv8
+fp-armv8d16
-fp-armv8d16
+fp-armv8d16sp
-fp-armv8d16sp
+fp-armv8sp
-fp-armv8sp
+fullfp16
-fullfp16
+fp64
-fp64
+d32
-d32
+neon
-neon
+crypto
-crypto
thumb
arm64_32
arm64e
maverick
invalid
vfpv2
vfpv3
vfpv4
vfpv3-d16
vfpv4-d16
fpv4-sp-d16
fpv5-sp-d16
fpv5-d16
neon
generic
arm2
arm3
arm6
arm7m
arm8
arm810
strongarm
strongarm110
strongarm1100
strongarm1110
arm7tdmi
arm7tdmi-s
arm710t
arm720t
arm9
arm9tdmi
arm920
arm920t
arm922t
arm9312
arm940t
ep9312
arm10tdmi
arm1020t
arm9e
arm946e-s
arm966e-s
arm968e-s
arm10e
arm1020e
arm1022e
arm926ej-s
arm1136j-s
arm1136jf-s
arm1136jz-s
mpcore
mpcorenovfp
arm1176jz-s
arm1176jzf-s
arm1156t2-s
arm1156t2f-s
cortex-m0
cortex-m0plus
cortex-m1
sc000
cortex-a5
cortex-a7
cortex-a8
cortex-a9
cortex-a12
cortex-a15
cortex-a17
krait
cortex-r4
cortex-r4f
cortex-r5
cortex-r7
cortex-r8
cortex-r52
sc300
cortex-m3
cortex-m4
cortex-m7
cortex-m23
cortex-m33
cortex-m35p
cortex-m55
cortex-a32
cortex-a35
cortex-a53
cortex-a55
cortex-a57
cortex-a72
cortex-a73
cortex-a75
cortex-a76
cortex-a76ae
cortex-a77
cortex-a78
cortex-a78c
cortex-x1
neoverse-n1
neoverse-n2
neoverse-v1
cyclone
exynos-m3
exynos-m4
exynos-m5
kryo
iwmmxt
xscale
swift
+hwdiv-arm
-hwdiv-arm
+hwdiv
-hwdiv
fp.dp
aapcs
aapcs16
apcs-gnu
aapcs-linux
armv2
armv2a
armv3
armv3m
armv4
armv4t
armv5t
armv5te
armv5tej
5TEJ
armv6
armv6k
armv6t2
v6t2
armv6kz
armv6-m
armv7-a
armv7ve
v7ve
armv7-r
armv7-m
armv7e-m
7E-M
armv8-a
armv8.1-a
8.1-A
armv8.2-a
8.2-A
armv8.3-a
8.3-A
armv8.4-a
8.4-A
armv8.5-a
8.5-A
armv8.6-a
8.6-A
armv8.7-a
8.7-A
armv8-r
armv8-m.base
8-M.Baseline
armv8-m.main
8-M.Mainline
armv8.1-m.main
8.1-M.Mainline
iwmmxt2
armv7s
armv7k
none
vfpv3-fp16
vfpv3-d16-fp16
vfpv3xd
vfpv3xd-fp16
fp-armv8
fp-armv8-fullfp16-d16
fp-armv8-fullfp16-sp-d16
neon-fp16
neon-vfpv4
neon-fp-armv8
crypto-neon-fp-armv8
softvfp
+crc
-crc
crypto
sha2
+sha2
-sha2
+aes
-aes
dotprod
+dotprod
-dotprod
+dsp
-dsp
+mve
-mve
mve.fp
+mve.fp
-mve.fp
idiv
simd
virt
fp16
+ras
-ras
fp16fml
+fp16fml
-fp16fml
bf16
+bf16
-bf16
i8mm
+i8mm
-i8mm
+lob
-lob
cdecp0
+cdecp0
-cdecp0
cdecp1
+cdecp1
-cdecp1
cdecp2
+cdecp2
-cdecp2
cdecp3
+cdecp3
-cdecp3
cdecp4
+cdecp4
-cdecp4
cdecp5
+cdecp5
-cdecp5
cdecp6
+cdecp6
-cdecp6
cdecp7
+cdecp7
-cdecp7
arm,thumb
String contains multiple dots
Hex strings require an exponent
Invalid character in significand
Significand has no digits
Invalid string length
String has no digits
Invalid string
Invalid trailing hexadecimal fraction!
Exponent has no digits
Invalid character in exponent
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
Tag_File
Tag_Section
Tag_Symbol
Tag_CPU_raw_name
Tag_CPU_name
Tag_CPU_arch
Tag_CPU_arch_profile
Tag_ARM_ISA_use
Tag_THUMB_ISA_use
Tag_FP_arch
Tag_WMMX_arch
Tag_Advanced_SIMD_arch
Tag_MVE_arch
Tag_PCS_config
Tag_ABI_PCS_R9_use
Tag_ABI_PCS_RW_data
Tag_ABI_PCS_RO_data
Tag_ABI_PCS_GOT_use
Tag_ABI_PCS_wchar_t
Tag_ABI_FP_rounding
Tag_ABI_FP_denormal
Tag_ABI_FP_exceptions
Tag_ABI_FP_user_exceptions
Tag_ABI_FP_number_model
Tag_ABI_align_needed
Tag_ABI_align_preserved
Tag_ABI_enum_size
Tag_ABI_HardFP_use
Tag_ABI_VFP_args
Tag_ABI_WMMX_args
Tag_ABI_optimization_goals
Tag_ABI_FP_optimization_goals
Tag_compatibility
Tag_CPU_unaligned_access
Tag_FP_HP_extension
Tag_ABI_FP_16bit_format
Tag_MPextension_use
Tag_DIV_use
Tag_DSP_extension
Tag_nodefaults
Tag_also_compatible_with
Tag_T2EE_use
Tag_conformance
Tag_Virtualization_use
Tag_VFP_arch
Tag_VFP_HP_extension
Tag_ABI_align8_needed
Tag_ABI_align8_preserved
Attribute
TagName
Value
Pre-v4
ARM v4
ARM v4T
ARM v5T
ARM v5TE
ARM v5TEJ
ARM v6
ARM v6KZ
ARM v6T2
ARM v6K
ARM v7
ARM v6-M
ARM v6S-M
ARM v7E-M
ARM v8
ARM v8-M Baseline
ARM v8-M Mainline
ARM v8.1-M Mainline
CPU_arch
Unknown
Application
Real-time
Microcontroller
Classic
None
Not Permitted
Permitted
ARM_ISA_use
Thumb-1
Thumb-2
THUMB_ISA_use
VFPv1
VFPv2
VFPv3
VFPv3-D16
VFPv4
VFPv4-D16
ARMv8-a FP
ARMv8-a FP-D16
FP_arch
WMMXv1
WMMXv2
WMMX_arch
NEONv1
NEONv2+FMA
ARMv8-a NEON
ARMv8.1-a NEON
Advanced_SIMD_arch
MVE integer
MVE integer and float
MVE_arch
Bare Platform
Linux Application
Linux DSO
Palm OS 2004
Reserved (Palm OS)
Symbian OS 2004
Reserved (Symbian OS)
PCS_config
Static Base
Unused
ABI_PCS_R9_use
Absolute
PC-relative
SB-relative
ABI_PCS_RW_data
ABI_PCS_RO_data
Direct
GOT-Indirect
ABI_PCS_GOT_use
2-byte
4-byte
ABI_PCS_wchar_t
IEEE-754
Runtime
ABI_FP_rounding
Unsupported
Sign Only
ABI_FP_denormal
ABI_FP_exceptions
ABI_FP_user_exceptions
Finite Only
RTABI
ABI_FP_number_model
8-byte alignment
4-byte alignment
Reserved
8-byte alignment, 
-byte extended alignment
Invalid
Not Required
8-byte data alignment
8-byte data and code alignment
8-byte stack alignment, 
-byte data alignment
Packed
Int32
External Int32
ABI_enum_size
Tag_FP_arch
Single-Precision
Tag_FP_arch (deprecated)
ABI_HardFP_use
AAPCS
AAPCS VFP
Custom
ABI_VFP_args
iWMMX
ABI_WMMX_args
Speed
Aggressive Speed
Size
Aggressive Size
Debugging
Best Debugging
ABI_optimization_goals
Accuracy
Best Accuracy
ABI_FP_optimization_goals
Value: 
Description
No Specific Requirements
AEABI Conformant
AEABI Non-Conformant
v6-style
CPU_unaligned_access
If Available
FP_HP_extension
ABI_FP_16bit_format
MPextension_use
DIV_use
DSP_extension
T2EE_use
TrustZone
Virtualization Extensions
TrustZone + Virtualization Extensions
Virtualization_use
Unspecified Tags UNDEFINED
Number of memory regions: 
Bytes used: 
Bytes allocated: 
Bytes wasted: 
 (includes alignment, etc)
0x%08x / 0x%08x = %.2f%%
%Y-%m-%d %H:%M:%S
%.9lu
General options
: for the 
 option: 
may only occur zero or one times!
must occur exactly one time!
>...
' is invalid value for boolean argument! Try 0 or 1
' value invalid for integer argument!
' value invalid for uint argument!
' value invalid for ullong argument!
    
 (default: 
= *unknown option value*
*no default*
= *cannot print option value*
Generic Options
help-list
Display list of available options (--help-list-hidden for more)
help-list-hidden
Display list of all available options
help
Display available options (--help-hidden for more)
Alias for --help
help-hidden
Display all available options
print-options
Print non-default options after command line parsing
print-all-options
Print all option values after command line parsing
version
Display the version of this program
: CommandLine Error: Option '
' registered more than once!
inconsistency in registered CommandLine options
Cannot specify more than one option with cl::ConsumeAfter!
requires a value!
multi-valued option specified with ValueDisallowed modifier!
does not allow a value! '
' specified.
not enough values!
Could not convert UTF16 to UTF8
error - this positional option will never be matched, because it does not Require a value, and a cl::ConsumeAfter option is active!
error - option can never match, because another positional argument will match an unbounded number of values, and this option does not require a value!
' is all messed up!
: Unknown command line argument '
'.  Try: '
 --help'
: Did you mean '
This argument does not take a value.
Instead, it consumes any positional arguments until the next recognized option.
: Not enough positional command line arguments specified!
Must specify at least 
 positional argument
: See: 
 --help
: Too many positional arguments specified!
Can specify at most 
 positional arguments: See: 
must be specified at least once!
may not occur within a group!
' value invalid for floating point argument!
    =
=<value>
  This option category has no options.
OVERVIEW: 
USAGE: 
 [subcommand]
 [options]
SUBCOMMAND '
SUBCOMMANDS:
  Type "
 <subcommand> --help" to get more help on a specific subcommand
OPTIONS:
LLVM (http://llvm.org/):
LLVM
 version 
13.0.0
Optimized build
(unknown)
  Default target: 
  Host CPU: 
uint
ulong
number
string
cl::location(x) specified more than once!
cl::alias must only have one cl::aliasopt(...) specified!
cl::alias must have argument name specified!
cl::alias must have an cl::aliasopt(option) specified!
cl::alias must not have cl::sub(), aliased option's cl::sub() will be used!
zlib error: Z_MEM_ERROR
zlib error: Z_BUF_ERROR
zlib error: Z_STREAM_ERROR
zlib error: Z_DATA_ERROR
unexpected end of data at offset 0x%zx while reading [0x%llx, 0x%llx)
offset 0x%llx is beyond the end of data at 0x%zx
no null terminated string at offset 0x%llx
malformed uleb128, extends past end
uleb128 too big for uint64
unable to decode LEB128 at offset 0x%8.8llx: %s
debug-counter
Comma separated list of debug counter skip and count
print-debug-counter
Print out debug counter info after all counters accumulated
DebugCounter Error: 
 does not have an = in it
 is not a number
 is not a registered counter
 does not end with -skip or -count
 -   
Tag_File
Tag_Section
Tag_Symbol
unknown 
 value: 
Attribute
TagName
Value
Description
invalid tag 0x
 at offset 0x
SectionLength
Vendor
unrecognized vendor-name: 
invalid attribute size 
FileAttributes
SectionAttributes
Sections
SymbolAttributes
Symbols
unrecognized tag 0x
unrecognized format-version: 0x
Section 
invalid section length 
Multiple errors:
Error
Inconvertible error value. An error has occurred that could not be converted to a known std::error_code. Please file a bug.
A file error occurred.
LLVM ERROR: 
LLVM ERROR: out of memory
atomic_write_error: 
failed_to_create_uniq_file
output_stream_error
failed_to_rename_temp_file
Allocation failed
invalid glob pattern: 
view-background
Execute graph viewer in the background. Creates tmp file litter.
Error: 
Writing '
'... 
open
Trying 'open' program... 
xdg-open
Trying 'xdg-open' program... 
Graphviz
Running 'Graphviz' program... 
xdot|xdot.py
Running 'xdot.py' program... 
dot|fdp|neato|twopi|circo
-Tps
-Nfontname=Courier
-Gsize=7.5,10
Running '
' program... 
--spartan
dotty
Running 'dotty' program... 
Error: Couldn't find a usable graph viewer program:
  Tried '
 done. 
Remember to erase graph file: 
neato
twopi
circo
Invalid
wchar_t
bool
char
signed char
unsigned char
short
unsigned short
unsigned int
long
unsigned long
long long
unsigned long long
__int128
unsigned __int128
float
double
long double
__float128
decimal64
decimal128
decimal32
decimal16
char32_t
char16_t
char8_t
auto
decltype(auto)
std::nullptr_t
 complex
 imaginary
noexcept
alignof (
const_cast
dynamic_cast
noexcept (
reinterpret_cast
static_cast
sizeof (
sizeof... (
typeid (
throw
nullptr
true
false
%LaL
yptn
'block-literal'
typename 
this
delete
(anonymous namespace)
operator&&
operator&
operator&=
operator=
operator()
operator,
operator~
operator delete[]
operator*
operator delete
operator/
operator/=
operator^
operator^=
operator==
operator>=
operator>
operator[]
operator<=
operator<<
operator<<=
operator<
operator-
operator-=
operator*=
operator--
operator new[]
operator!=
operator!
operator new
operator||
operator|
operator|=
operator->*
operator+
operator+=
operator++
operator->
operator?
operator%
operator%=
operator>>
operator>>=
operator<=>
operator 
 ... 
 at offset 
sizeof...(
throw 
__uuidof(
noexcept(
throw(
 const
 restrict
decltype(
struct
union
enum
objc_object
std::basic_string
allocator
basic_string
istream
ostream
iostream
std::basic_string<char, std::char_traits<char>, std::allocator<char> >
std::basic_istream<char, std::char_traits<char> >
std::basic_ostream<char, std::char_traits<char> >
std::basic_iostream<char, std::char_traits<char> >
basic_istream
basic_ostream
basic_iostream
string literal
template parameter object for 
vtable for 
VTT for 
typeinfo for 
typeinfo name for 
covariant return thunk to 
thread-local wrapper routine for 
thread-local initialization routine for 
virtual thunk to 
non-virtual thunk to 
guard variable for 
reference temporary for 
construction vtable for 
invocation function for block in 
null
%.*g
Invalid UTF-8 sequence
[{0}:{1}, byte={2}]: {3}
Unexpected EOF
Invalid JSON value (null?)
Invalid JSON value (true?)
Invalid JSON value (false?)
Expected , or ] after array element
Expected object key
Expected : after object key
Expected , or } after object property
Invalid JSON value
Unterminated string
Control character in string
Invalid escape sequence
Invalid \u escape sequence
Invalid JSON value (number?)
Text after end of document
failed to obtain absolute path for 
-%%%%%%%%
failed to create unique file 
failed to get host id
failed to write to 
failed to create link 
 to 
failed to remove lockfile 
<stdin>
%.2x
None
PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace.
Stack dump:
rng-seed
seed
Seed for the random number generator
replacement string contained trailing backslash
invalid backreference string '
Tag_stack_align
Tag_arch
Tag_unaligned_access
Tag_priv_spec
Tag_priv_spec_minor
Tag_priv_spec_revision
No unaligned access
Unaligned access
Unaligned_access
Stack alignment is 
Allocation failed
SmallVector unable to grow. Requested capacity (
) is larger than maximum value for size type (
SmallVector capacity unable to grow. Already at maximum size 
Allocation failed
Included from 
<unknown>
<stdin>
Supplied regexp was blank
can't open file '
error parsing file '
malformed section header on line 
malformed regex for section 
malformed line 
malformed section 
malformed regex in line 
stats
Enable statistics output from program (available with Asserts)
stats-json
Display statistics as json data
                          ... Statistics Collected ...
%*u %-*s - %s
Statistics are disabled.  
Build with asserts or with -DLLVM_FORCE_ENABLE_STATS
Allocation failed
Expected 'kind mangled_name mangled_name', found '
name
type
encoding
Invalid kind, expected 'name', 'type', or 'encoding', found '
Manglings '
' and '
' have both been used in prior remappings. Move this remapping earlier in the file.
Could not demangle '
' as a <
>; invalid mangling?
generic
invalid
generic-rv32
generic-rv64
rocket-rv32
rocket-rv64
sifive-7-rv32
sifive-7-rv64
sifive-e31
sifive-u54
sifive-e76
sifive-u74
rocket
sifive-7-series
+64bit
-64bit
gfx600
tahiti
gfx601
pitcairn
verde
gfx602
hainan
oland
gfx700
kaveri
gfx701
hawaii
gfx702
gfx703
kabini
mullins
gfx704
bonaire
gfx705
gfx801
carrizo
gfx802
iceland
tonga
gfx803
fiji
polaris10
polaris11
gfx805
tongapro
gfx810
stoney
gfx900
gfx902
gfx904
gfx906
gfx908
gfx909
gfx90c
gfx1010
gfx1011
gfx1012
gfx1030
gfx1031
gfx1032
gfx1033
r600
rv630
rv635
r630
rs780
rs880
rv610
rv620
rv670
rv710
rv730
rv740
rv770
cedar
palm
cypress
hemlock
juniper
redwood
sumo
sumo2
barts
caicos
aruba
cayman
turks
rv32imac
rv64gc
rv32imafc
thread constructor failed
track-memory
Enable -time-passes memory tracking (this may be slow)
info-output-file
filename
File to append -stats and -timer output to
sort-timers
In the report, sort the timers in each group in wall clock time order
Error opening info-output-file '
 for appending!
%9lld  
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
   ---User Time---
   --System Time--
   --User+System--
   ---Wall Time---
  ---Mem---
  --- Name ---
Total
"time.
%.*e
.wall
.user
.sys
.mem
misc
Miscellaneous Ungrouped Timers
        -----     
  %7.4f (%5.1f%%)
unknown
aarch64
aarch64_32
aarch64_be
amdgcn
amdil64
amdil
armeb
bpfeb
bpfel
csky
hexagon
hsail64
hsail
kalimba
lanai
le32
le64
mips64
mips64el
mips
mipsel
msp430
nvptx64
nvptx
powerpc64
powerpc64le
powerpc
powerpcle
r600
renderscript32
renderscript64
riscv32
riscv64
shave
sparc
sparcel
sparcv9
spir64
spir
s390x
tcele
thumb
thumbeb
wasm32
wasm64
i386
x86_64
xcore
s390
nvvm
wasm
riscv
amdhsa
amdpal
ananas
cuda
cloudabi
contiki
darwin
dragonfly
elfiamcu
emscripten
freebsd
fuchsia
haiku
hermit
hurd
kfreebsd
linux
macosx
mesa3d
minix
nvcl
nacl
netbsd
openbsd
rtems
solaris
tvos
bridgeos
driverkit
wasi
watchos
windows
android
code16
coreclr
cygnus
eabi
eabihf
gnuabi64
gnuabin32
gnueabi
gnueabihf
gnux32
itanium
msvc
macabi
musl
musleabi
musleabihf
simulator
arm64
ppc64
ppc64le
x86-64
macos
arm1176jzf-s
cortex-a9
cortex-a7
arm926ej-s
strongarm
cortex-a8
arm7tdmi
i486
i586
i686
amd64
xscale
mipsisa64r6
mips64r6
mipsisa64r6el
xcoff
coff
goff
macho
expected root node
expected mapping node
case-sensitive
use-external-names
overlay-relative
fallthrough
roots
expected array
expected integer
invalid version number
version mismatch, expected 0
expected string
unknown key
duplicate key '
expected mapping node for file or directory entry
contents
external-contents
use-external-name
file
directory
unknown value for 'type'
entry already has 'contents' or 'external-contents'
missing key 'contents' or 'external-contents'
'use-external-name' is not supported for 'directory' entries
'contents' is not supported for 'directory-remap' entries
entry with relative path at the root level is not discoverable
expected boolean value
missing key '
  'version': 0,
  'case-sensitive': '
  'use-external-names': '
  'overlay-relative': '
  'roots': [
'type': 'directory',
'name': "
'contents': [
'type': 'file',
'external-contents': "
Color Options
color
Use colors in output (default=autodetect)
error: 
warning: 
note: 
remark: 
i386
i486
winchip-c6
winchip2
i586
pentium
pentium-mmx
pentiumpro
i686
pentium2
pentium3
pentium3m
pentium-m
c3-2
yonah
pentium4
pentium4m
prescott
nocona
core2
penryn
bonnell
atom
silvermont
goldmont
goldmont-plus
tremont
nehalem
corei7
westmere
sandybridge
corei7-avx
ivybridge
core-avx-i
haswell
core-avx2
broadwell
skylake
skylake-avx512
cascadelake
cooperlake
cannonlake
icelake-client
icelake-server
tigerlake
sapphirerapids
alderlake
lakemont
k6-2
k6-3
athlon
athlon-tbird
athlon-xp
athlon-mp
athlon-4
athlon64
athlon-fx
opteron
k8-sse3
athlon64-sse3
opteron-sse3
amdfam10
barcelona
btver1
btver2
bdver1
bdver2
bdver3
bdver4
znver1
znver2
znver3
x86-64
x86-64-v2
x86-64-v3
x86-64-v4
geode
cmov
popcnt
sse2
sse3
ssse3
sse4.1
sse4.2
avx2
sse4a
fma4
avx512f
bmi2
pclmul
avx512vl
avx512bw
avx512dq
avx512cd
avx512er
avx512pf
avx512vbmi
avx512ifma
avx5124vnniw
avx5124fmaps
avx512vpopcntdq
avx512vbmi2
gfni
vpclmulqdq
avx512vnni
avx512bitalg
avx512bf16
avx512vp2intersect
3dnow
3dnowa
64bit
amx-bf16
amx-int8
amx-tile
cldemote
clflushopt
clwb
clzero
cx16
enqcmd
f16c
fsgsbase
fxsr
invpcid
widekl
lzcnt
movbe
movdir64b
movdiri
mwaitx
pconfig
prefetchwt1
prfchw
ptwrite
rdpid
rdrnd
rdseed
sahf
serialize
shstk
tsxldtrk
uintr
vaes
vzeroupper
waitpkg
wbnoinvd
xsave
xsavec
xsaveopt
xsaves
hreset
avxvnni
retpoline-external-thunk
retpoline-indirect-branches
retpoline-indirect-calls
lvi-cfi
lvi-load-hardening
YAML
Cannot consume non-ascii characters
Could not find expected : for simple key
Expected quote at end of scalar
Found unexpected ':' while scanning a plain scalar
Found invalid tab character in indentation
Got empty plain scalar
Got empty alias or anchor
Expected a line break after block scalar header
Leading all-spaces line must be smaller than the block indent
A text line is less indented than the block scalar
Unrecognized character while tokenizing.
Can only iterate over the stream once
Unknown tag handle 
tag:yaml.org,2002:null
tag:yaml.org,2002:str
tag:yaml.org,2002:map
tag:yaml.org,2002:seq
Unrecognized escape code
Null key in Key Value.
Unexpected token in Key Value.
Unexpected token. Expected Key or Block End
Unexpected token. Expected Key, Flow Entry, or Flow Mapping End.
Unexpected token. Expected Block Entry or Block End.
Could not find closing ]!
Expected , between entries!
tag:yaml.org,2002:
Already encountered an anchor for this node!
Already encountered a tag for this node!
Unexpected token
not a mapping
missing required key '
unknown key '
not a sequence
unknown enumerated scalar
expected sequence of bit values
unexpected scalar in sequence of bit values
unknown bit value
unexpected scalar
Map key must be a scalar
Map value must not be empty
unknown node kind
invalid call
                
true
false
invalid boolean
invalid number
out of range number
invalid version format
NULL
IO failure on output stream: 
[:<:]]
[:>:]]
alnum
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
cntrl
digit
0123456789
graph
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
lower
abcdefghijklmnopqrstuvwxyz
print
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
punct
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
space
upper
ABCDEFGHIJKLMNOPQRSTUVWXYZ
xdigit
alert
backspace
newline
vertical-tab
form-feed
carriage-return
exclamation-mark
quotation-mark
number-sign
dollar-sign
percent-sign
ampersand
apostrophe
left-parenthesis
right-parenthesis
asterisk
plus-sign
hyphen-minus
full-stop
slash
solidus
zero
three
four
five
seven
eight
nine
semicolon
less-than-sign
equals-sign
greater-than-sign
question-mark
commercial-at
left-square-bracket
backslash
reverse-solidus
right-square-bracket
circumflex
circumflex-accent
underscore
low-line
grave-accent
left-brace
left-curly-bracket
vertical-line
right-brace
right-curly-bracket
REG_0x%x
REG_NOMATCH
llvm_regexec() failed to match
REG_BADPAT
invalid regular expression
REG_ECOLLATE
invalid collating element
REG_ECTYPE
invalid character class
REG_EESCAPE
trailing backslash (\)
REG_ESUBREG
invalid backreference number
REG_EBRACK
brackets ([ ]) not balanced
REG_EPAREN
parentheses not balanced
REG_EBRACE
braces not balanced
REG_BADBR
invalid repetition count(s)
REG_ERANGE
invalid character range
REG_ESPACE
out of memory
REG_BADRPT
repetition-operator operand invalid
REG_EMPTY
empty (sub)expression
REG_ASSERT
"can't happen" -- you found a bug
REG_INVARG
invalid argument to regex routine
*** unknown regexp error code ***
x86_64-apple-macosx10.14.6
hw.physicalcpu
cmov
fxsr
sse2
sse3
pclmul
ssse3
cx16
sse4.1
sse4.2
movbe
popcnt
rdrnd
xsave
f16c
sahf
lzcnt
sse4a
prfchw
fma4
mwaitx
64bit
clzero
wbnoinvd
fsgsbase
avx2
bmi2
invpcid
avx512f
avx512dq
rdseed
avx512ifma
clflushopt
clwb
avx512pf
avx512er
avx512cd
avx512bw
avx512vl
prefetchwt1
avx512vbmi
waitpkg
avx512vbmi2
shstk
gfni
vaes
vpclmulqdq
avx512vnni
avx512bitalg
avx512vpopcntdq
rdpid
cldemote
movdiri
movdir64b
enqcmd
uintr
avx512vp2intersect
serialize
tsxldtrk
pconfig
amx-bf16
amx-tile
amx-int8
avxvnni
avx512bf16
hreset
xsaveopt
xsavec
xsaves
ptwrite
widekl
-darwin
.0.0
i386
pentium-mmx
pentium
core2
penryn
nehalem
westmere
sandybridge
ivybridge
haswell
broadwell
skylake
cooperlake
cascadelake
skylake-avx512
cannonlake
icelake-client
icelake-server
sapphirerapids
bonnell
silvermont
goldmont
goldmont-plus
tremont
tigerlake
yonah
pentium-m
pentium3
pentium2
pentiumpro
nocona
prescott
pentium4
k6-2
k6-3
geode
athlon-xp
athlon
k8-sse3
amdfam10
btver1
bdver1
bdver4
bdver3
bdver2
btver2
znver1
znver2
znver3
0123456789abcdef
-%%%%%%
HOME
.cache
-%%%%%%.
TMPDIR
TEMP
TEMPDIR
COLUMNS
colors
PATH
Child timed out but wouldn't die
Error waiting for child process
Program could not be executed
 (core dumped)
" doesn't exist!
Can't redirect stderr to stdout
posix_spawn failed
/dev/null
Cannot posix_spawn_file_actions_addopen
Cannot open file '
' for 
input
output
disable-symbolication
Disable symbolizing crash backtraces.
llvm-symbolizer
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
%-2d
 %-*s
 %#0*lx
 + %tu
LLVM_DISABLE_CRASH_REPORT
too many signal callbacks already registered
Unable to find target for this triple (no targets are registered)
  Registered Targets:
    (none)
pthread_attr_init failed
pthread_attr_setstacksize failed
pthread_create failed
pthread_join failed
pthread_detach failed
pthread_attr_destroy failed
No coverage data found
Unsupported coverage format version
Truncated coverage data
Malformed coverage data
Failed to decompress coverage data (zlib)
`-arch` specifier is invalid or missing for universal binary
llvm.coveragemap
Failed to zlib compress coverage data
unexpected input in compiler arguments
failed to stat file: 
error opening input file '
sourcekit.swift.ConsumeAST
sourcekit.swift.ASTCache
sourcekit.swift.ASTBuilding
AST build (
rebuild
first
Compilation setup failed!!!
compilation setup failed
Loading the stdlib failed
findSnapshotAndOpenFiles
failed getting file contents for 
did not find primary SourceFile
source.lang.swift.literal.array
source.lang.swift.literal.boolean
source.lang.swift.literal.color
source.lang.swift.literal.image
source.lang.swift.literal.dictionary
source.lang.swift.literal.integer
source.lang.swift.literal.nil
source.lang.swift.literal.string
source.lang.swift.literal.tuple
source.lang.swift.keyword
source.lang.swift.keyword.let
source.lang.swift.keyword.var
source.lang.swift.keyword.if
source.lang.swift.keyword.for
source.lang.swift.keyword.while
source.lang.swift.keyword.func
-Xfrontend
-code-complete-inits-in-postfix-expr
-code-complete-call-pattern-heuristics
codecomplete.open: code completion session for '
 already exists
codecomplete.close: no code completion session for '
codecomplete.update: no code completion session for '
key.codecomplete.sort.byname
key.codecomplete.sort.useimportdepth
key.codecomplete.group.overloads
key.codecomplete.group.stems
key.codecomplete.filtertext
key.codecomplete.requestlimit
key.codecomplete.requeststart
key.codecomplete.hideunderscores
key.codecomplete.hidelowpriority
key.codecomplete.hidebyname
key.codecomplete.includeexactmatch
key.codecomplete.addinnerresults
key.codecomplete.addinneroperators
key.codecomplete.addinitstotoplevel
key.codecomplete.callpatternheuristics
key.codecomplete.fuzzymatching
key.codecomplete.showtopnonliteralresults
key.codecomplete.sort.contextweight
key.codecomplete.sort.fuzzyweight
key.codecomplete.sort.popularitybonus
key.codecomplete.annotateddescription
key.codecomplete.includeobjectliterals
source.lang.swift.keyword.associatedtype
source.lang.swift.keyword.class
source.lang.swift.keyword.deinit
source.lang.swift.keyword.enum
source.lang.swift.keyword.extension
source.lang.swift.keyword.import
source.lang.swift.keyword.init
source.lang.swift.keyword.inout
source.lang.swift.keyword.operator
source.lang.swift.keyword.precedencegroup
source.lang.swift.keyword.protocol
source.lang.swift.keyword.struct
source.lang.swift.keyword.subscript
source.lang.swift.keyword.typealias
source.lang.swift.keyword.fileprivate
source.lang.swift.keyword.internal
source.lang.swift.keyword.private
source.lang.swift.keyword.public
source.lang.swift.keyword.static
source.lang.swift.keyword.defer
source.lang.swift.keyword.guard
source.lang.swift.keyword.do
source.lang.swift.keyword.repeat
source.lang.swift.keyword.else
source.lang.swift.keyword.in
source.lang.swift.keyword.return
source.lang.swift.keyword.break
source.lang.swift.keyword.continue
source.lang.swift.keyword.fallthrough
source.lang.swift.keyword.switch
source.lang.swift.keyword.case
source.lang.swift.keyword.default
source.lang.swift.keyword.where
source.lang.swift.keyword.catch
source.lang.swift.keyword.throw
source.lang.swift.keyword.as
source.lang.swift.keyword.Any
source.lang.swift.keyword.false
source.lang.swift.keyword.is
source.lang.swift.keyword.nil
source.lang.swift.keyword.rethrows
source.lang.swift.keyword.super
source.lang.swift.keyword.self
source.lang.swift.keyword.Self
source.lang.swift.keyword.true
source.lang.swift.keyword.try
source.lang.swift.keyword.throws
source.lang.swift.keyword._
source.lang.swift.pattern
Code completion result with empty description was ignored: 
source.codecompletion.context.none
source.codecompletion.context.exprspecific
source.codecompletion.context.local
source.codecompletion.context.thisclass
source.codecompletion.context.superclass
source.codecompletion.context.otherclass
source.codecompletion.context.thismodule
source.codecompletion.context.othermodule
source.codecompletion.typerelation.notapplicable
source.codecompletion.typerelation.unknown
source.codecompletion.typerelation.unrelated
source.codecompletion.typerelation.invalid
source.codecompletion.typerelation.convertible
source.codecompletion.typerelation.identical
source.lang.swift.codecomplete.group
source.lang.swift.completion.unresolvedmember
findLocalRenameRanges
failed to create an ASTInvocation: 
Compiler invocation init failed
Compiler invocation set up failed
Failed to determine SourceFile for input buffer
Error occurred
Compiler invocation set up fails.
Cannot load stdlib.
Cannot find the module.
<module-interface>
source.lang.swift.attribute.availability
source.availability.platform.ios
source.availability.platform.maccatalyst
source.availability.platform.osx
source.availability.platform.tvos
source.availability.platform.watchos
source.availability.platform.ios_app_extension
source.availability.platform.maccatalyst_app_extension
source.availability.platform.osx_app_extension
source.availability.platform.tvos_app_extension
source.availability.platform.watchos_app_extension
source.availability.platform.openbsd
source.availability.platform.windows
source.lang.swift.syntaxtype.argument
source.lang.swift.syntaxtype.parameter
handleDiagnostic
unhandled optimization remark
'offset' + 'length' is out of range
source.diagnostic.stage.swift.sema
source.diagnostic.stage.swift.parse
Retrieving both a syntax map and a syntax tree at the same time is not supported. Use the SyntaxClassifier in swiftSyntax to generate the syntax map on the Swift side.
Retrieving both the document structure and a syntax tree at the same time is not supported. Use the syntax tree to compute the document structure.
key.editor.format.usetabs
key.editor.format.indentwidth
key.editor.format.tabwidth
key.editor.format.indent_switch_case
Invalid Length parameter
Document already exists in editorOpen(..): 
Incremental Parsing
Incremental parsing different to from scratch parsing
Edit was 
 pre-edit-text: '
SourceKit-IncrementalParsing-Inconsistency
Failed to create log directory
/incrementalTree.json
Failed to write incremental syntax tree to 
(error code 
Incremental syntax tree written to 
/fromScratchTree.json
Failed to write from-scratch syntax tree to 
From-scratch syntax tree written to 
/postEditSource.swift
SOURCEKIT_LOG_INCREMENTAL_REUSE_REGIONS
SOURCEKIT_INCREMENTAL_PARSE_VALIDATION
No associated Editor Document
Reused 
Conversion failed.
'%s' (%s of '%s')
failed
sema annotations failed: 
handlePrimaryAST
did not find document snapshot when handling the AST
Primary SourceFile is expected to have a BufferID
updateSemanticInfo
posted document update notification for: 
source.lang.swift.accessibility.open
source.lang.swift.accessibility.public
source.lang.swift.accessibility.internal
source.lang.swift.accessibility.fileprivate
source.lang.swift.accessibility.private
: { 
tokenKind
leadingTrivia
trailingTrivia
kind
layout
presence
text
"kw_associatedtype"
"kw_class"
"kw_deinit"
"kw_enum"
"kw_extension"
"kw_func"
"kw_import"
"kw_init"
"kw_inout"
"kw_let"
"kw_operator"
"kw_precedencegroup"
"kw_protocol"
"kw_struct"
"kw_subscript"
"kw_typealias"
"kw_var"
"kw_fileprivate"
"kw_internal"
"kw_private"
"kw_public"
"kw_static"
"kw_defer"
"kw_if"
"kw_guard"
"kw_do"
"kw_repeat"
"kw_else"
"kw_for"
"kw_in"
"kw_while"
"kw_return"
"kw_break"
"kw_continue"
"kw_fallthrough"
"kw_switch"
"kw_case"
"kw_default"
"kw_where"
"kw_catch"
"kw_throw"
"kw_as"
"kw_Any"
"kw_false"
"kw_is"
"kw_nil"
"kw_rethrows"
"kw_super"
"kw_self"
"kw_Self"
"kw_true"
"kw_try"
"kw_throws"
"kw___FILE__"
"kw___LINE__"
"kw___COLUMN__"
"kw___FUNCTION__"
"kw___DSO_HANDLE__"
"kw__"
"l_paren"
"r_paren"
"l_brace"
"r_brace"
"l_square"
"r_square"
"l_angle"
"r_angle"
"period"
"period_prefix"
"comma"
"ellipsis"
"colon"
"semi"
"equal"
"at_sign"
"pound"
"amp_prefix"
"arrow"
"backtick"
"backslash"
"exclaim_postfix"
"question_postfix"
"question_infix"
"string_quote"
"single_quote"
"multiline_string_quote"
"pound_keyPath"
"pound_line"
"pound_selector"
"pound_file"
"pound_fileID"
"pound_filePath"
"pound_column"
"pound_function"
"pound_dsohandle"
"pound_assert"
"pound_sourceLocation"
"pound_warning"
"pound_error"
"pound_if"
"pound_else"
"pound_elseif"
"pound_endif"
"pound_available"
"pound_fileLiteral"
"pound_imageLiteral"
"pound_colorLiteral"
"integer_literal"
"floating_literal"
"string_literal"
"unknown"
"identifier"
"oper_binary_unspaced"
"oper_binary_spaced"
"oper_postfix"
"oper_prefix"
"dollarident"
"contextual_keyword"
"raw_string_delimiter"
"string_segment"
"string_interpolation_anchor"
"kw_yield"
"kw_undef"
"kw_sil"
"kw_sil_stage"
"kw_sil_property"
"kw_sil_vtable"
"kw_sil_global"
"kw_sil_witness_table"
"kw_sil_default_witness_table"
"kw_sil_differentiability_witness"
"kw_sil_coverage_map"
"kw_sil_scope"
"sil_dollar"
"sil_exclamation"
"eof"
"code_complete"
"sil_local_name"
"comment"
"Token"
"Unknown"
"Decl"
"Expr"
"Stmt"
"Type"
"Pattern"
"UnknownDecl"
"UnknownExpr"
"UnknownStmt"
"UnknownType"
"UnknownPattern"
"CodeBlockItem"
"CodeBlockItemList"
"CodeBlock"
"InOutExpr"
"PoundColumnExpr"
"TupleExprElementList"
"ArrayElementList"
"DictionaryElementList"
"StringLiteralSegments"
"TryExpr"
"AwaitExpr"
"DeclNameArgument"
"DeclNameArgumentList"
"DeclNameArguments"
"IdentifierExpr"
"SuperRefExpr"
"NilLiteralExpr"
"DiscardAssignmentExpr"
"AssignmentExpr"
"SequenceExpr"
"ExprList"
"PoundLineExpr"
"PoundFileExpr"
"PoundFileIDExpr"
"PoundFilePathExpr"
"PoundFunctionExpr"
"PoundDsohandleExpr"
"SymbolicReferenceExpr"
"PrefixOperatorExpr"
"BinaryOperatorExpr"
"ArrowExpr"
"FloatLiteralExpr"
"TupleExpr"
"ArrayExpr"
"DictionaryExpr"
"TupleExprElement"
"ArrayElement"
"DictionaryElement"
"IntegerLiteralExpr"
"BooleanLiteralExpr"
"TernaryExpr"
"MemberAccessExpr"
"IsExpr"
"AsExpr"
"TypeExpr"
"ClosureCaptureItem"
"ClosureCaptureItemList"
"ClosureCaptureSignature"
"ClosureParam"
"ClosureParamList"
"ClosureSignature"
"ClosureExpr"
"UnresolvedPatternExpr"
"MultipleTrailingClosureElement"
"MultipleTrailingClosureElementList"
"FunctionCallExpr"
"SubscriptExpr"
"OptionalChainingExpr"
"ForcedValueExpr"
"PostfixUnaryExpr"
"SpecializeExpr"
"StringSegment"
"ExpressionSegment"
"StringLiteralExpr"
"KeyPathExpr"
"KeyPathBaseExpr"
"ObjcNamePiece"
"ObjcName"
"ObjcKeyPathExpr"
"ObjcSelectorExpr"
"PostfixIfConfigExpr"
"EditorPlaceholderExpr"
"ObjectLiteralExpr"
"TypeInitializerClause"
"TypealiasDecl"
"AssociatedtypeDecl"
"FunctionParameterList"
"ParameterClause"
"ReturnClause"
"FunctionSignature"
"IfConfigClause"
"IfConfigClauseList"
"IfConfigDecl"
"PoundErrorDecl"
"PoundWarningDecl"
"PoundSourceLocation"
"PoundSourceLocationArgs"
"DeclModifier"
"InheritedType"
"InheritedTypeList"
"TypeInheritanceClause"
"ClassDecl"
"StructDecl"
"ProtocolDecl"
"ExtensionDecl"
"MemberDeclBlock"
"MemberDeclList"
"MemberDeclListItem"
"SourceFile"
"InitializerClause"
"FunctionParameter"
"ModifierList"
"FunctionDecl"
"InitializerDecl"
"DeinitializerDecl"
"SubscriptDecl"
"AccessLevelModifier"
"AccessPathComponent"
"AccessPath"
"ImportDecl"
"AccessorParameter"
"AccessorDecl"
"AccessorList"
"AccessorBlock"
"PatternBinding"
"PatternBindingList"
"VariableDecl"
"EnumCaseElement"
"EnumCaseElementList"
"EnumCaseDecl"
"EnumDecl"
"OperatorDecl"
"IdentifierList"
"OperatorPrecedenceAndTypes"
"PrecedenceGroupDecl"
"PrecedenceGroupAttributeList"
"PrecedenceGroupRelation"
"PrecedenceGroupNameList"
"PrecedenceGroupNameElement"
"PrecedenceGroupAssignment"
"PrecedenceGroupAssociativity"
"TokenList"
"NonEmptyTokenList"
"CustomAttribute"
"Attribute"
"AttributeList"
"SpecializeAttributeSpecList"
"LabeledSpecializeEntry"
"TargetFunctionEntry"
"NamedAttributeStringArgument"
"DeclName"
"ImplementsAttributeArguments"
"ObjCSelectorPiece"
"ObjCSelector"
"DifferentiableAttributeArguments"
"DifferentiabilityParamsClause"
"DifferentiabilityParams"
"DifferentiabilityParamList"
"DifferentiabilityParam"
"DerivativeRegistrationAttributeArguments"
"QualifiedDeclName"
"FunctionDeclName"
"ContinueStmt"
"WhileStmt"
"DeferStmt"
"ExpressionStmt"
"SwitchCaseList"
"RepeatWhileStmt"
"GuardStmt"
"WhereClause"
"ForInStmt"
"SwitchStmt"
"CatchClauseList"
"DoStmt"
"ReturnStmt"
"YieldStmt"
"YieldList"
"FallthroughStmt"
"BreakStmt"
"CaseItemList"
"CatchItemList"
"ConditionElement"
"AvailabilityCondition"
"MatchingPatternCondition"
"OptionalBindingCondition"
"ConditionElementList"
"DeclarationStmt"
"ThrowStmt"
"IfStmt"
"ElseIfContinuation"
"ElseBlock"
"SwitchCase"
"SwitchDefaultLabel"
"CaseItem"
"CatchItem"
"SwitchCaseLabel"
"CatchClause"
"PoundAssertStmt"
"GenericWhereClause"
"GenericRequirementList"
"GenericRequirement"
"SameTypeRequirement"
"GenericParameterList"
"GenericParameter"
"GenericParameterClause"
"ConformanceRequirement"
"SimpleTypeIdentifier"
"MemberTypeIdentifier"
"ClassRestrictionType"
"ArrayType"
"DictionaryType"
"MetatypeType"
"OptionalType"
"SomeType"
"ImplicitlyUnwrappedOptionalType"
"CompositionTypeElement"
"CompositionTypeElementList"
"CompositionType"
"TupleTypeElement"
"TupleTypeElementList"
"TupleType"
"FunctionType"
"AttributedType"
"GenericArgumentList"
"GenericArgument"
"GenericArgumentClause"
"TypeAnnotation"
"EnumCasePattern"
"IsTypePattern"
"OptionalPattern"
"IdentifierPattern"
"AsTypePattern"
"TuplePattern"
"WildcardPattern"
"TuplePatternElement"
"ExpressionPattern"
"TuplePatternElementList"
"ValueBindingPattern"
"AvailabilitySpecList"
"AvailabilityArgument"
"AvailabilityLabeledArgument"
"AvailabilityVersionRestriction"
"VersionTuple"
"Present"
"Missing"
Error during syntactic parsing
Error during invocation setup
Could not load the stdlib module
Implicit ObjC header path is empty
Could not load the main module
-target
-sdk
-Fsystem
-module-cache-path
-Xcc
-import-underlying-module
-import-objc-header
Module name is empty
Could not load module: 
Header name is empty
sourcekit.swift.InterfaceGenContext
source.lang.swift.import.module.clang
source.lang.swift.import.module.swift
.pcm
-disable-typo-correction
Clang module files are not supported
no primary source file found
failed to load module
warning
source.lang.swift.decl.function.free
source.lang.swift.ref.function.free
source.lang.swift.decl.function.method.instance
source.lang.swift.ref.function.method.instance
source.lang.swift.decl.function.method.static
source.lang.swift.ref.function.method.static
source.lang.swift.decl.function.method.class
source.lang.swift.ref.function.method.class
source.lang.swift.decl.function.accessor.getter
source.lang.swift.ref.function.accessor.getter
source.lang.swift.decl.function.accessor.setter
source.lang.swift.ref.function.accessor.setter
source.lang.swift.decl.function.accessor.willset
source.lang.swift.ref.function.accessor.willset
source.lang.swift.decl.function.accessor.didset
source.lang.swift.ref.function.accessor.didset
source.lang.swift.decl.function.accessor.address
source.lang.swift.ref.function.accessor.address
source.lang.swift.decl.function.accessor.mutableaddress
source.lang.swift.ref.function.accessor.mutableaddress
source.lang.swift.decl.function.accessor.read
source.lang.swift.ref.function.accessor.read
source.lang.swift.decl.function.accessor.modify
source.lang.swift.ref.function.accessor.modify
source.lang.swift.decl.function.constructor
source.lang.swift.ref.function.constructor
source.lang.swift.decl.function.destructor
source.lang.swift.ref.function.destructor
source.lang.swift.decl.function.operator.prefix
source.lang.swift.decl.function.operator.postfix
source.lang.swift.decl.function.operator.infix
source.lang.swift.ref.function.operator.prefix
source.lang.swift.ref.function.operator.postfix
source.lang.swift.ref.function.operator.infix
source.lang.swift.decl.precedencegroup
source.lang.swift.ref.precedencegroup
source.lang.swift.decl.function.subscript
source.lang.swift.ref.function.subscript
source.lang.swift.decl.var.global
source.lang.swift.ref.var.global
source.lang.swift.decl.var.instance
source.lang.swift.ref.var.instance
source.lang.swift.decl.var.static
source.lang.swift.ref.var.static
source.lang.swift.decl.var.class
source.lang.swift.ref.var.class
source.lang.swift.decl.var.local
source.lang.swift.ref.var.local
source.lang.swift.decl.var.parameter
source.lang.swift.decl.module
source.lang.swift.decl.class
source.lang.swift.ref.class
source.lang.swift.decl.struct
source.lang.swift.ref.struct
source.lang.swift.decl.enum
source.lang.swift.ref.enum
source.lang.swift.decl.enumcase
source.lang.swift.decl.enumelement
source.lang.swift.ref.enumelement
source.lang.swift.decl.protocol
source.lang.swift.ref.protocol
source.lang.swift.decl.extension
source.lang.swift.decl.extension.struct
source.lang.swift.decl.extension.class
source.lang.swift.decl.extension.enum
source.lang.swift.decl.extension.protocol
source.lang.swift.decl.associatedtype
source.lang.swift.ref.associatedtype
source.lang.swift.decl.opaquetype
source.lang.swift.ref.opaquetype
source.lang.swift.decl.typealias
source.lang.swift.ref.typealias
source.lang.swift.decl.generic_type_param
source.lang.swift.ref.generic_type_param
source.lang.swift.ref.module
source.lang.swift.stmt.foreach
source.lang.swift.stmt.for
source.lang.swift.stmt.while
source.lang.swift.stmt.repeatwhile
source.lang.swift.stmt.if
source.lang.swift.stmt.guard
source.lang.swift.stmt.switch
source.lang.swift.stmt.case
source.lang.swift.stmt.brace
source.lang.swift.expr.call
source.lang.swift.expr.argument
source.lang.swift.expr.array
source.lang.swift.expr.dictionary
source.lang.swift.expr.object_literal
source.lang.swift.expr.tuple
source.lang.swift.expr.closure
source.lang.swift.structure.elem.id
source.lang.swift.structure.elem.expr
source.lang.swift.structure.elem.init_expr
source.lang.swift.structure.elem.condition_expr
source.lang.swift.structure.elem.pattern
source.lang.swift.structure.elem.typeref
source.lang.swift.range.singlestatement
source.lang.swift.range.singleexpression
source.lang.swift.range.singledeclaration
source.lang.swift.range.multistatement
source.lang.swift.range.multitypememberdeclaration
source.lang.swift.range.invalid
source.lang.name.kind.objc
source.lang.name.kind.swift
source.lang.swift.syntaxtype.keyword
source.lang.swift.syntaxtype.identifier
source.lang.swift.syntaxtype.typeidentifier
source.lang.swift.syntaxtype.buildconfig.keyword
source.lang.swift.syntaxtype.buildconfig.id
source.lang.swift.syntaxtype.pounddirective.keyword
source.lang.swift.syntaxtype.attribute.id
source.lang.swift.syntaxtype.attribute.builtin
source.lang.swift.syntaxtype.number
source.lang.swift.syntaxtype.string
source.lang.swift.syntaxtype.string_interpolation_anchor
source.lang.swift.syntaxtype.comment
source.lang.swift.syntaxtype.doccomment
source.lang.swift.syntaxtype.doccomment.field
source.lang.swift.syntaxtype.comment.mark
source.lang.swift.syntaxtype.comment.url
source.lang.swift.syntaxtype.placeholder
source.lang.swift.syntaxtype.objectliteral
source.lang.swift.expr
source.lang.swift.stmt
source.lang.swift.type
source.lang.swift.foreach.sequence
source.diagnostic.severity.note
source.diagnostic.severity.warning
source.diagnostic.severity.error
source.codecompletion.everything
source.codecompletion.module
source.codecompletion.keyword
source.codecompletion.literal
source.codecompletion.custom
source.codecompletion.identifier
source.codecompletion.description
source.edit.kind.active
source.edit.kind.inactive
source.edit.kind.selector
source.edit.kind.string
source.edit.kind.comment
source.edit.kind.mismatch
source.edit.kind.unknown
source.refactoring.range.kind.basename
source.refactoring.range.kind.keyword-basename
source.refactoring.range.kind.parameter-and-whitespace
source.refactoring.range.kind.noncollapsible-parameter
source.refactoring.range.kind.decl-argument-label
source.refactoring.range.kind.call-argument-label
source.refactoring.range.kind.call-argument-colon
source.refactoring.range.kind.call-argument-combined
source.refactoring.range.kind.selector-argument-label
source.syntacticrename.definition
source.syntacticrename.reference
source.syntacticrename.call
source.syntacticrename.unknown
source.statistic.num-requests
source.statistic.num-semantic-requests
source.syntaxtree.transfer.off
source.syntaxtree.transfer.full
source.lang.swift
source.lang.objc
source.refactoring.kind.rename.global
source.refactoring.kind.rename.global.find-ranges
source.refactoring.kind.rename.local.find-ranges
source.refactoring.kind.rename.local
source.refactoring.kind.fillstub
source.refactoring.kind.expand.default
source.refactoring.kind.expand.switch.cases
source.refactoring.kind.localize.string
source.refactoring.kind.simplify.long.number.literal
source.refactoring.kind.collapse.nested.ifstmt
source.refactoring.kind.convert.do.catch
source.refactoring.kind.trailingclosure
source.refactoring.kind.memberwise.init.local.refactoring
source.refactoring.kind.add.equatable.conformance
source.refactoring.kind.convert.call-to-async
source.refactoring.kind.convert.func-to-async
source.refactoring.kind.add.async-alternative
source.refactoring.kind.extract.expr
source.refactoring.kind.extract.function
source.refactoring.kind.extract.expr.repeated
source.refactoring.kind.move.members.to.extension
source.refactoring.kind.convert.string-concatenation.interpolation
source.refactoring.kind.expand.ternary.expr
source.refactoring.kind.convert.ternary.expr
source.refactoring.kind.convert.iflet.to.guard.expr
source.refactoring.kind.convert.to.iflet.expr
source.refactoring.kind.convert.to.computed.property
source.refactoring.kind.convert.switch.stmt
source.refactoring.kind.replace.bodies.with.fatalError
source.decl.attribute.ibaction
source.decl.attribute.iboutlet
source.decl.attribute.ibdesignable
source.decl.attribute.ibinspectable
source.decl.attribute.gkinspectable
source.decl.attribute.objc
source.decl.attribute.objc.name
source.decl.attribute.private
source.decl.attribute.fileprivate
source.decl.attribute.internal
source.decl.attribute.public
source.decl.attribute.open
source.decl.attribute.setter_access.private
source.decl.attribute.setter_access.fileprivate
source.decl.attribute.setter_access.internal
source.decl.attribute.setter_access.public
source.decl.attribute.setter_access.open
source.decl.effective_access.public
source.decl.effective_access.internal
source.decl.effective_access.fileprivate
source.decl.effective_access.less_than_fileprivate
::SYNTHESIZED::
in-memory-vfs
source.decl.attribute.ibsegueaction
source.decl.attribute._silgen_name
source.decl.attribute.available
source.decl.attribute.final
source.decl.attribute.required
source.decl.attribute.optional
source.decl.attribute.dynamicCallable
source.decl.attribute.main
source.decl.attribute._exported
source.decl.attribute.dynamicMemberLookup
source.decl.attribute.NSCopying
source.decl.attribute.IBAction
source.decl.attribute.IBOutlet
source.decl.attribute.NSManaged
source.decl.attribute.lazy
source.decl.attribute.LLDBDebuggerFunction
source.decl.attribute.UIApplicationMain
source.decl.attribute.unsafe_no_objc_tagged_pointer
source.decl.attribute.inline
source.decl.attribute._semantics
source.decl.attribute.dynamic
source.decl.attribute.infix
source.decl.attribute.prefix
source.decl.attribute.postfix
source.decl.attribute._transparent
source.decl.attribute.requires_stored_property_inits
source.decl.attribute.nonobjc
source.decl.attribute._fixed_layout
source.decl.attribute.inlinable
source.decl.attribute._specialize
source.decl.attribute.objcMembers
source.decl.attribute.__consuming
source.decl.attribute.mutating
source.decl.attribute.nonmutating
source.decl.attribute.convenience
source.decl.attribute.override
source.decl.attribute._hasStorage
source.decl.attribute.__setter_access
source.decl.attribute.__raw_doc_comment
source.decl.attribute.weak
source.decl.attribute._effects
source.decl.attribute.__objc_bridged
source.decl.attribute.NSApplicationMain
source.decl.attribute._objc_non_lazy_realization
source.decl.attribute.__synthesized_protocol
source.decl.attribute.testable
source.decl.attribute._alignment
source.decl.attribute.rethrows
source.decl.attribute._swift_native_objc_runtime_base
source.decl.attribute.indirect
source.decl.attribute.warn_unqualified_access
source.decl.attribute._show_in_interface
source.decl.attribute._cdecl
source.decl.attribute.usableFromInline
source.decl.attribute.discardableResult
source.decl.attribute.GKInspectable
source.decl.attribute._implements
source.decl.attribute._objcRuntimeName
source.decl.attribute._staticInitializeObjCMetadata
source.decl.attribute._restatedObjCConformance
source.decl.attribute._optimize
source.decl.attribute._clangImporterSynthesizedType
source.decl.attribute._weakLinked
source.decl.attribute.frozen
source.decl.attribute._forbidSerializingReference
source.decl.attribute._hasInitialValue
source.decl.attribute._nonoverride
source.decl.attribute._dynamicReplacement
source.decl.attribute._borrowed
source.decl.attribute._private
source.decl.attribute._alwaysEmitIntoClient
source.decl.attribute._implementationOnly
source.decl.attribute._custom
source.decl.attribute.propertyWrapper
source.decl.attribute._disfavoredOverload
source.decl.attribute.resultBuilder
source.decl.attribute._projectedValueProperty
source.decl.attribute._nonEphemeral
source.decl.attribute.differentiable
source.decl.attribute._hasMissingDesignatedInitializers
source.decl.attribute._inheritsConvenienceInitializers
source.decl.attribute._typeEraser
source.decl.attribute.IBSegueAction
source.decl.attribute._originallyDefinedIn
source.decl.attribute.derivative
source.decl.attribute._spi
source.decl.attribute.transpose
source.decl.attribute.noDerivative
source.decl.attribute.asyncHandler
source.decl.attribute.actor
source.decl.attribute.actorIndependent
source.decl.attribute.globalActor
source.decl.attribute._specializeExtension
source.decl.attribute.async
source.decl.attribute.Sendable
source.decl.attribute._marker
source.decl.attribute.reasync
source.decl.attribute.completionHandlerAsync
source.decl.attribute.nonisolated
source.decl.attribute._unsafeSendable
source.decl.attribute._unsafeMainActor
source.decl.attribute._implicitSelfCapture
source.decl.attribute._inheritActorContext
source.decl.attribute.spawn
unknown virtual filesystem '
Offset
subscript
init
deinit
<#T##
source.statistic.num-ast-builds
# of ASTs built or rebuilt
source.statistic.num-asts-in-memory
# of ASTs currently in memory
source.statistic.max-asts-in-memory
maximum # of ASTs ever in memory at once
source.statistic.num-ast-cache-hits
# of ASTs found in the cache without rebuilding
source.statistic.num-ast-snaphost-uses
# of ASTs used with snaphots without rebuilding
source.statistic.num-open-documents
# of editor documents currently open
source.statistic.max-open-documents
maximum # of editor documents ever open at once
sourcekit.swift.EditorDocFileMap
key.files
key.name
key.sourcefile
key.sourcetext
missing 'key.name'
missing 'key.sourcefile' or 'key.sourcetext'
error reading target file '
Range info for generated interfaces is not implemented.
Invalid range length.
getCursorInfoFromUSR
Info from usr for generated interface not implemented yet.
Info for generated interfaces not implemented.
findRelatedIdentifiersInFile
semanticRefactoring
collectExpressionTypes
decl.name
decl.var.parameter.name
syntaxtype.keyword
decl.var.parameter.type
decl.generic_type_param.constraint
tuple.element.type
decl.var.type
 usr="
decl.var.parameter
decl.function.returntype
tuple
tuple.element
decl.generic_type_param
decl.generic_type_requirement
syntaxtype.attribute.builtin
syntaxtype.number
syntaxtype.string
tuple.element.argument_label
syntaxtype.attribute.name
decl.var.parameter.argument_label
decl.generic_type_param.name
canUseASTWithSnapshots
will resolve using up-to-date AST
will try existing AST
cursor info failed: 
Unable to resolve the start of the token.
Unable to resolve cursor info.
Resolved to incomplete expression or statement.
CursorInfoRequest
Cycle detected:
While evaluating request 
Unavailable in the current compilation context.
Failed to remap declaration to latest snapshot.
<Declaration>
</Declaration>
<Type usr="
</Type>
<RelatedName usr="
</RelatedName>
&amp;
&lt;
&gt;
&quot;
&apos;
range info failed: 
RangeInfoRequest
name info failed: 
Unable to resolve Swift declaration name.
Unable to resolve name info.
Unable to resolve a named declaration.
Unable to resolve ObjC declaration name.
lookup for C/C++/ObjC USRs not implemented
Lookup for C/C++/ObjC USRs not implemented.
Unable to resolve type from USR.
Unable to resolve entity from generated interface.
related idents failed: 
source.request.protocol_version
source.request.compiler_version
source.request.crash_exit
source.request.demangle
source.request.mangle_simple_class
source.request.indexsource
source.request.docinfo
source.request.codecomplete
source.request.codecomplete.open
source.request.codecomplete.close
source.request.codecomplete.update
source.request.codecomplete.cache.ondisk
source.request.codecomplete.setpopularapi
source.request.codecomplete.setcustom
source.request.typecontextinfo
source.request.conformingmethods
source.request.cursorinfo
source.request.rangeinfo
source.request.relatedidents
source.request.editor.open
source.request.editor.open.interface
source.request.editor.open.interface.header
source.request.editor.open.interface.swiftsource
source.request.editor.open.interface.swifttype
source.request.editor.extract.comment
source.request.editor.close
source.request.editor.replacetext
source.request.editor.formattext
source.request.editor.expand_placeholder
source.request.editor.find_usr
source.request.editor.find_interface_doc
source.request.buildsettings.register
source.request.module.groups
source.request.name.translation
source.request.convert.markup.xml
source.request.statistics
source.request.syntacticrename
source.request.find-syntactic-rename-ranges
source.request.find-local-rename-ranges
source.request.semantic.refactoring
source.request.enable-compile-notifications
source.request.test_notification
source.request.expression.type
source.request.configuration.global
source.request.dependency_updated
handleRequest-before
incrParse Performance
Serialized 
 bytes as JSON in 
# of requests (total)
# of semantic requests
missing 'key.request' with UID value
'key.names' not an array of strings
missing 'key.names'
missing 'key.value'
This request does not support custom filesystems
'key.compilerargs' not an array of strings
missing 'key.modulename'
missing 'key.filepath'
missing 'key.sourcefile'
missing 'key.usr'
missing 'key.sourcetext'
missing 'key.offset'
missing 'key.results'
sourcekit.request.semantic
v16@?0^v8
<input>
using 'key.sourcefile' to read source text from the filesystem is not supported when using 'key.vfs.name'
SOURCEKIT_DELAY_SEMA_EDITOR
delaying semantic editor for 
 seconds
v8@?0
invalid key.renamelocations
missing key.is_function_like
missing key.is_non_protocol_type
missing key.name
missing key.newname
invalid key.locations
missing key.line
missing key.column
missing key.nametype
invalid value for 'key.nametype'
missing 'key.kind'
missing 'key.context'
invalid value for 'key.context'
semantic editor is disabled
invalid 'key.expectedtypes'
either 'key.offset' or 'key.usr' is required
'key.offset' or 'key.length' is required
'key.actionuid' is required
'key.actionuid' isn't recognized
'key.line' or 'key.column' are required
'key.line' is required
'key.column' is required
'key.offset' is required
'key.namekind' is required
'key.namekind' is unrecognizable
cannot specify 'key.selectorpieces' and 'key.argnames' at the same time
unknown request: 
filter rule missing required key 'key.hide'
filter rule missing required key 'key.names'
source.notification.editor.documentupdate
source.notification.test
source.notification.sema_enabled
source.notification.compile-will-start
source.compile.operation.index-source
source.compile.operation.code-completion
source.notification.compile-did-finish
handleRequest-after
key.version_major
key.version_minor
key.version_patch
key.results
key.request
key.notification
key.kind
key.accessibility
key.setter_accessibility
key.keyword
key.usr
key.original_usr
key.default_implementation_of
key.interested_usr
key.generic_params
key.generic_requirements
key.doc.full_as_xml
key.line
key.column
key.receiver_usr
key.receivers
key.is_dynamic
key.is_implicit
key.filepath
key.module_interface_name
key.hash
key.compilerargs
key.severity
key.offset
key.length
key.serialized_syntax_tree
key.enablesyntaxmap
key.syntaxtreetransfermode
key.enablesubstructure
key.description
key.typename
key.runtime_name
key.selector_name
key.annotated_decl
key.fully_annotated_decl
key.fully_annotated_generic_signature
key.doc.brief
key.context
key.typerelation
key.moduleimportdepth
key.num_bytes_to_erase
key.not_recommended
key.annotations
key.diagnostic_stage
key.syntaxmap
key.is_system
key.related
key.inherits
key.conforms
key.extends
key.dependencies
key.entities
key.nameoffset
key.namelength
key.bodyoffset
key.bodylength
key.docoffset
key.doclength
key.is_local
key.inheritedtypes
key.attributes
key.attribute
key.elements
key.substructure
key.ranges
key.fixits
key.diagnostics
key.educational_note_paths
key.editor.format.options
key.codecomplete.options
key.typecontextinfo.options
key.conformingmethods.options
key.codecomplete.filterrules
key.nextrequeststart
key.popular
key.unpopular
key.hide
key.platform
key.is_deprecated
key.is_unavailable
key.is_optional
key.is_async
key.message
key.introduced
key.deprecated
key.obsoleted
key.removecache
key.typeusr
key.containertypeusr
key.modulegroups
key.basename
key.argnames
key.selectorpieces
key.namekind
key.localization_key
key.is_zero_arg_selector
key.swift_version
key.value
key.enablediagnostics
key.groupname
key.actionname
key.synthesizedextensions
key.usingswiftargs
key.names
key.uids
key.syntactic_only
key.parent_loc
key.is_test_candidate
key.overrides
key.associated_usrs
key.modulename
key.related_decls
key.simplified
key.rangecontent
key.cancel_on_subsequent_request
key.renamelocations
key.locations
key.nametype
key.newname
key.categorizededits
key.categorizedranges
key.rangesworthnote
key.edits
key.endline
key.endcolumn
key.argindex
key.text
key.category
key.is_function_like
key.is_non_protocol_type
key.refactor_actions
key.retrieve_refactor_actions
key.symbol_graph
key.retrieve_symbol_graph
key.parent_contexts
key.referenced_symbols
key.is_spi
key.actionuid
key.actionunavailablereason
key.compileid
key.compilerargs-string
key.implicitmembers
key.expectedtypes
key.members
key.printedtypebuffer
key.expression_type_list
key.expression_offset
key.expression_length
key.expression_type
key.canonicalize_type
key.internal_diagnostic
key.vfs.name
key.vfs.options
key.optimize_for_ide
key.required_bystanders
key.reusingastcontext
key.completion_max_astcontext_reuse_count
key.completion_check_dependency_interval
key.annotated.typename
key.compile_operation
key.effective_access
key.decl_lang
key.secondary_symbols
<<NULL>>
SOURCEKIT_LOGGING
SOURCEKIT_PLUGINS
Trying to index an empty array.
error response (
Connection Interrupted
Request Invalid
Request Failed
Request Cancelled
failed to load plugin '
sourcekitd_plugin_initialize
plugin '
' missing expected symbol: sourcekitd_plugin_initialize
Error while parsing
Found space in non-string value
Expected value as array, dictionary, or scalar
Expected string as key
 at: 
<data>
sourcekit
SOURCEKITD FATAL ERROR: %s
<<NULL>>
sourcekitd error did not resolve to a known kind
invalid sourcekitd error object
unknown custom buffer kind; possible plugin loading failure
unkown sourcekitd_object_t type
sourcekitd object did not resolve to a known type
B24@?0Q8^v16
B24@?0r*8^v16
RC_XBS
main
__bad__
REPL
index unit output path
-index-unit-output-path
-supplementary-output-file-map
swift
swift_static
macosx
prebuilt-modules
unchecked
checked
-resource-dir
 -sdk 
 -resource-dir 
maccatalyst
/usr/lib/swift
System
iOSSupport
"\$ 
<temporary-file>
', '
SwiftOnoneSupport
-fdebug-prefix-map=
-working-directory
-Werror
dwarf
codeview
-gline-tables-only
-gdwarf_types
object
-num-threads
BridgeOS doesn't support isa signing for arm64e
llvm
.yaml
migrator
watchos
overlay
.json
expected {{ in expected-warning/note/error line
expected '+'/'-' for line offset, or ':' for column
expected line offset before '{{'
expected column before '{{'
expected match count before '{{'
expected positive match count before '{{'
didn't find '}}' to match '{{' in expected-warning/note/error line
didn't find '}}' to match '{{' in diagnostic verification
each verified diagnostic may only have one {{educational-notes=<#notes#>}} declaration
A second {{
}} was found. It may only appear once in an expectation.
}} must be at the end.
expected '-' in fix-it verification
expected '=' after '-' in fix-it verification
invalid column number in fix-it verification
expected fix-it not seen
expected no fix-its
unexpected fix-it seen
expected educational note(s) not seen
expected educational note(s) not seen; actual educational note(s): 
incorrect message found
message found at column {0} but was expected to appear at column {1}
expected 
 not produced
unexpected 
 produced: 
diagnostic produced elsewhere: 
educational-notes=
actual fix-it
 seen: 
error
remark
swift-frontend
swift (LLVM option parsing)
SWIFT_FORCE_MODULE_LOADING
prefer-interface
prefer-parseable
prefer-serialized
only-interface
only-parseable
only-serialized
// missing file
Project
parse-and-resolve-imports
perform-sema
load-stdlib
load-partial-modules-and-implicit-imports
SIL verification, pre-optimization
SIL verification, post-optimization
Osize
Onone
_Concurrency
SIL optimization
CodeCompletionFileRequest
-frontend
-compile-module-from-interface
-swift-version
-suppress-warnings
-debugger-support
-disable-objc-attr-requires-foundation-module
(unspecified, file possibly handwritten)
-track-system-dependencies
-disable-implicit-swift-modules
-serialize-module-interface-dependency-hashes
-Rmodule-interface-rebuild
-module-name
-fapinotes-swift-version=
path
dependencies
mtime
size
sdk_relative
SystemVersion.plist
compiled with an older version of the compiler
compiled with a newer version of the compiler
malformed
compiled for a different target platform
target platform newer than current platform
^// swift-interface-format-version: ([0-9\.]+)$
^// swift-module-flags:(.*)$
^// swift-compiler-version: (.+)$
, and 
 and 
insert 
remove 
replace 
 with 
--------------
Unknown Location: 
Unknown Location
{0} | 
--> 
{0}...
error:
warning:
note:
remark:
nonmutatingvariant
 {|}
[AssociatedType]
[GenericTypeParam]
[InstanceMethod]
[PrefixOperatorFunction]
[PostfixOperatorFunction]
[InfixOperatorFunction]
[PrecedenceGroup]
[associatedtype]
[precedencegroup]
[__DSO_HANDLE__]
[#sourceLocation]
[sil_witness_table]
[sil_default_witness_table]
[sil_differentiability_witness]
[sil_coverage_map]
Pattern
Local
Super
/TypeRelation[Invalid]
/TypeRelation[Identical]
/TypeRelation[Convertible]
inout 
associatedtype
class
extension
func
import
inout
operator
precedencegroup
protocol
typealias
fileprivate
internal
private
public
static
defer
guard
repeat
else
while
return
break
continue
switch
case
default
where
catch
rethrows
super
self
Self
throws
__FILE__
__LINE__
__COLUMN__
__FUNCTION__
__DSO_HANDLE__
undef
sil_stage
sil_property
sil_vtable
sil_global
sil_witness_table
sil_default_witness_table
sil_differentiability_witness
sil_coverage_map
sil_scope
 async
 rethrows
 throws
 -> 
Module
Protocol
Type
getter
setter
@objc property
async
await
willSet
didSet
some
values
value
#colorLiteral
green
blue
#imageLiteral
resourceName
required
convenience
override
final
some 
public 
open 
override 
required 
typealias 
func 
Enables support for..in loops in a result builder by combining the results of all iterations into a single result
Required by every result builder to build combined results from statement blocks
With buildEither(second:), enables support for 'if-else' and 'switch' statements by folding conditional results into a single result
With buildEither(first:), enables support for 'if-else' and 'switch' statements by folding conditional results into a single result
If declared, provides contextual type information for statement expressions to translate them into partial results
If declared, this will be called on the partial result from the outermost block statement to produce the final returned result
If declared, this will be called on the partial result of an 'if #available' block to allow the result builder to erase type information
Enables support for `if` statements that do not have an `else`
Declaration
Enum
Struct
Class
OpaqueType
TypeAlias
GenericTypeParam
AssociatedType
Param
Subscript
Constructor
Destructor
Func
Accessor
EnumElement
Extension
TopLevelCode
Import
IfConfig
PoundDiagnostic
PrecedenceGroup
MissingMember
PatternBinding
EnumCase
InfixOperator
PrefixOperator
PostfixOperator
 Attribute
_silgen_name
available
optional
dynamicCallable
_exported
dynamicMemberLookup
NSCopying
IBAction
IBDesignable
IBInspectable
IBOutlet
NSManaged
lazy
LLDBDebuggerFunction
UIApplicationMain
unsafe_no_objc_tagged_pointer
inline
_semantics
dynamic
infix
prefix
postfix
_transparent
requires_stored_property_inits
nonobjc
_fixed_layout
inlinable
_specialize
objcMembers
__consuming
mutating
nonmutating
_hasStorage
__setter_access
__raw_doc_comment
weak
_effects
__objc_bridged
NSApplicationMain
_objc_non_lazy_realization
__synthesized_protocol
testable
_alignment
_swift_native_objc_runtime_base
indirect
warn_unqualified_access
_show_in_interface
_cdecl
usableFromInline
discardableResult
GKInspectable
_implements
_objcRuntimeName
_staticInitializeObjCMetadata
_restatedObjCConformance
_optimize
_clangImporterSynthesizedType
_weakLinked
frozen
_forbidSerializingReference
_hasInitialValue
_nonoverride
_dynamicReplacement
_borrowed
_private
_alwaysEmitIntoClient
_implementationOnly
_custom
propertyWrapper
_disfavoredOverload
resultBuilder
_projectedValueProperty
_nonEphemeral
differentiable
_hasMissingDesignatedInitializers
_inheritsConvenienceInitializers
_typeEraser
IBSegueAction
_originallyDefinedIn
derivative
_spi
transpose
noDerivative
asyncHandler
actor
actorIndependent
globalActor
_specializeExtension
Sendable
_marker
reasync
completionHandlerAsync
nonisolated
_unsafeSendable
_unsafeMainActor
_implicitSelfCapture
_inheritActorContext
spawn
Platform
unavailable
message
Specify message
renamed
Specify replacing name
introduced
Specify version number
deprecated
unowned
try!
try?
UnsafeRawPointer
#fileID
#file
#filePath
#function
#line
#column
#dsohandle
#selector
@objc method
keyPath
@objc property sequence
String
endif
condition
arch
canImport
targetEnvironment
compiler
module
simulator
associativity
higherThan
lowerThan
assignment
-%%%%%%
swift.libIDE.CodeCompletionCache
-dot
-testable
-private
-inits
-annotated
.completions
<callarg>
<callarg.type>
</callarg.type>
</callarg>
keyword
attribute
name
typeid.sys
typeid.user
callarg.label
callarg.param
<Function
</Function>
<Class
</Class>
<Other
</Other>
 file="
 line="
" column="
<Name>
</Name>
<USR>
</USR>
<CommentParts>
</CommentParts>
<Abstract>
</Abstract>
<Parameters>
</Parameters>
<Discussion>
</Discussion>
<List-Number>
<List-Bullet>
</List-Number>
</List-Bullet>
<Item>
</Item>
<CodeListing language="
<zCodeLineNumbered>
</zCodeLineNumbered>
</CodeListing>
<![CDATA[
]]]]><![CDATA[>
<rawHTML>
</rawHTML>
<Para>
</Para>
<hr/>
<br/>
<codeVoice>
</codeVoice>
<emphasis>
</emphasis>
<bold>
</bold>
<Link href="
</Link>
<img src="
 title="
 alt="
<Attention
</Attention
<Author
</Author
<Authors
</Authors
<Bug
</Bug
<Complexity
</Complexity
<Copyright
</Copyright
<Date
</Date
<Experiment
</Experiment
<Important
</Important
<Invariant
</Invariant
<LocalizationKey
</LocalizationKey
<Mutatingvariant
</Mutatingvariant
<Nonmutatingvariant
</Nonmutatingvariant
<Note
</Note
<Postcondition
</Postcondition
<Precondition
</Precondition
<Remark
</Remark
<Remarks
</Remarks
<Returns
</Returns
<Requires
</Requires
<See
</See
<Since
</Since
<Tag
</Tag
<TODO
</TODO
<Throws
</Throws
<Version
</Version
<Warning
</Warning
<Keyword
</Keyword
<Recommended
</Recommended
<Recommendedover
</Recommendedover
<Parameter>
<Direction isExplicit="0">in</Direction>
<ClosureParameter>
</ClosureParameter>
</Parameter>
<ResultDiscussion>
</ResultDiscussion>
<ThrowsDiscussion>
</ThrowsDiscussion>
<Tags>
<Tag>
</Tag>
</Tags>
While performing cached completion if possible
performing cached completion
While performing new completion
failed to setup compiler instance
getting equivalent decl context for
Global Rename
Find Global Rename Ranges
Find Local Rename Ranges
Local Rename
Add Missing Protocol Requirements
Expand Default
Expand Switch Cases
Localize String
Simplify Long Number Literal
Collapse Nested If Statements
Convert To Do/Catch
Convert To Trailing Closure
Generate Memberwise Initializer
Add Equatable Conformance
Convert Call to Async Alternative
Convert Function to Async
Add Async Alternative
Extract Expression
Extract Method
Extract Repeated Expression
Move To Extension
Convert to String Interpolation
Expand Ternary Expression
Convert To Ternary Expression
Convert To Guard Expression
Convert To IfLet Expression
Convert To Computed Property
Convert To Switch Statement
Replace Function Bodies With 'fatalError()'
symbol from system module cannot be renamed
symbol without a declaration location cannot be renamed
cannot find the name of the symbol
cannot decide the accessibility of the symbol
cannot rename a Clang symbol from its Swift reference
SWIFT_ENABLE_INTERNAL_REFACTORING_ACTIONS
__derived_enum_equals
__derived_struct_equals
newName
extractedExpr
extractedFunc
NSLocalizedString(
, comment: "")
do {
} catch {
internal init(
self.
 = nil
       
 == 
failure
 = error
await 
 result
result
success
@available(*, deprecated, message: "Prefer async alternative instead")
async 
<extract>
extract
extension 
fatalError()
callAsFunction
type cannot be null.
cannot find declaration of type.
// MARK: - 
 Additions
// Available when 
 are
 imported with 
Continue
Break
unknown
mailto
radar
parameter
parameters
note
returns
requires
todo
(acap|afp|afs|cid|data|fax|feed|file|ftp|go|gopher|http|https|imap|ldap|mailserver|mid|modem|news|nntp|opaquelocktoken|pop|prospero|rdar|rtsp|service|sip|soap\.beep|soap\.beeps|tel|telnet|tip|tn3270|urn|vemmi|wais|xcdoc|z39\.50r|z39\.50s)://([a-zA-Z0-9\-_.]+/)?[a-zA-Z0-9;/?:@\&=+$,\-_.!~*'()%#]+
(mailto|im):[a-zA-Z0-9\-_]+@[a-zA-Z0-9\-_\.!%]+
radar:[a-zA-Z0-9;/?:@\&=+$,\-_.!~*'()%#]+
-diagnostic-documentation-path
-fbuild-session-timestamp=
-fmodules-validate-once-per-build-session
clang
-index-header-map
-iframework
-fmodules-ignore-macro=
-ivfsoverlay
-Xclang
-fmodule-name=
warning: 
note: 
remark: 
' is not part of the input files
armv7
armv7s
armv7k
armv6
armv6m
armv6k
armv6t2
x86_64
RootAndResultTypeOfKeypathDynamicMemberRequest
ResolveProtocolNameRequest
Resolve 
 from 
(null)
ProvideDefaultImplForRequest
CollectOverriddenDeclsRequest
IsDeclApplicableRequest
Checking if 
 is applicable for 
TypeRelationCheckRequest
Check if 
 is 
ConvertTo
RootTypeOfKeypathDynamicMemberRequest
AP::Invalid
AP::Opaque
AP::OpaqueFunction
AP::OpaqueDerivativeFunction
AP::Type
AP::Discard
<<UNHANDLED CASE>>
AP::Tuple(
AP::ClangType(
AP::CurriedCFunctionAsMethodType(
AP::PartialCurriedCFunctionAsMethodType(
AP::ObjCCompletionHandlerArgumentsType(
AP::CFunctionAsMethodType(
, member=
instance, self=
, errorParamIndex=
AP::CXXOperatorMethodType(
AP::CurriedCXXOperatorMethodType(
AP::PartialCurriedCXXOperatorMethodType(
AP::CXXMethodType(
AP::CurriedCXXMethodType(
AP::PartialCurriedCXXMethodType
AP::ObjCMethodType(
AP::CurriedObjCMethodType(
AP::PartialCurriedObjCMethodType(
, errorParameter=
, replacedWithVoid
, stripsResultOptionality
, completionHandlerParameter=
 (errorParam=
, errorFlagParam=
, zeroOnError
, nonzeroOnError
unable to set up the ObjC bridge!
Unhandled inst: 
Visited instruction that should never be visited?!
constexpr-limit
Number of instructions interpreted in a constexpr function
uninit
unknown(
metatype: 
fn: 
int: 
string: "
agg: 0 elements []
agg: 1 elt: 
agg: 
 elements [
enum: 
, payload: 
address[
elements type: 
 size: 
 contents []
 contents [
closure: target: 
 captures [
] values: [
creating
verify.ownership.sil.never
autodiff.nonvarying
Foundation
NSString
NSError
Swift
ObjectiveC
ObjCBool
Darwin
DarwinBoolean
Bool
Error
WinSDK
WindowsBool
sil-disable-typelowering-constantinfo-cache
None
Different function representations
Different number of results
Different return value conventions
ABI incompatible return values
Different error result conventions
ABI incompatible error results
Different number of parameters
Differing parameter convention
ABI incompatible parameter type.
Escape to no escape conversion
transferNodesFromList
alloc_stack
alloc_ref
alloc_ref_dynamic
alloc_value_buffer
alloc_box
alloc_existential_box
index_addr
tail_addr
index_raw_pointer
function_ref
dynamic_function_ref
prev_dynamic_function_ref
global_addr
base_addr_for_offset
global_value
integer_literal
float_literal
string_literal
class_method
super_method
objc_super_method
upcast
address_to_pointer
pointer_to_address
unchecked_ref_cast
unchecked_addr_cast
unchecked_trivial_bit_cast
unchecked_bitwise_cast
unchecked_value_cast
ref_to_raw_pointer
raw_pointer_to_ref
ref_to_unowned
unowned_to_ref
ref_to_unmanaged
unmanaged_to_ref
convert_function
convert_escape_to_noescape
thin_function_to_pointer
pointer_to_thin_function
ref_to_bridge_object
bridge_object_to_ref
bridge_object_to_word
thin_to_thick_function
thick_to_objc_metatype
objc_to_thick_metatype
objc_metatype_to_object
objc_existential_metatype_to_object
unconditional_checked_cast_value
unconditional_checked_cast
classify_bridge_object
value_to_bridge_object
mark_dependence
copy_block
copy_block_without_escaping
copy_value
strong_copy_unowned_value
strong_copy_unmanaged_value
unchecked_ownership_conversion
is_unique
end_cow_mutation
is_escaping_closure
load
load_borrow
begin_borrow
store_borrow
begin_access
load_weak
load_unowned
mark_uninitialized
project_value_buffer
project_box
project_existential_box
apply
builtin
partial_apply
metatype
value_metatype
existential_metatype
objc_protocol
tuple_extract
tuple_element_addr
struct_extract
struct_element_addr
ref_element_addr
ref_tail_addr
unchecked_enum_data
init_enum_data_addr
unchecked_take_enum_data_addr
select_enum
select_enum_addr
select_value
init_existential_addr
init_existential_value
open_existential_addr
init_existential_ref
open_existential_ref
init_existential_metatype
open_existential_metatype
open_existential_box
open_existential_value
open_existential_box_value
project_block_storage
init_block_storage_header
differentiable_function
linear_function
differentiable_function_extract
linear_function_extract
differentiability_witness_function
get_async_continuation
get_async_continuation_addr
extract_executor
keypath
unreachable
yield
unwind
try_apply
cond_br
switch_value
switch_enum
switch_enum_addr
dynamic_method_br
await_async_continuation
checked_cast_br
checked_cast_addr_br
checked_cast_value_br
dealloc_stack
dealloc_ref
dealloc_partial_ref
dealloc_value_buffer
dealloc_box
dealloc_existential_box
strong_retain
strong_release
unmanaged_retain_value
unmanaged_release_value
unmanaged_autorelease_value
strong_retain_unowned
unowned_retain
unowned_release
retain_value
retain_value_addr
release_value
release_value_addr
set_deallocating
autorelease_value
bind_memory
fix_lifetime
hop_to_executor
destroy_value
end_borrow
end_access
begin_unpaired_access
end_unpaired_access
store
assign
assign_by_wrapper
mark_function_escape
debug_value
debug_value_addr
store_weak
store_unowned
copy_addr
destroy_addr
end_lifetime
inject_enum_addr
deinit_existential_addr
deinit_existential_value
unconditional_checked_cast_addr
unchecked_ref_cast_addr
alloc_global
end_apply
abort_apply
cond_fail
begin_apply
begin_cow_mutation
destructure_struct
destructure_tuple
Unknown SIL instruction name
None
MayRead
MayWrite
MayReadWrite
MayHaveSideEffects
DoesNotRelease
MayRelease
init
read
modify
deinit
unknown
static
dynamic
unsafe
<compiler-generated>
<no loc>
Leaking instructions!
Alloated instructions: 
Instructions in module: 
trunc
zext
fptoui
fptosi
uitofp
sitofp
fptrunc
fpext
ptrtoint
inttoptr
bitcast
truncOrBitCast
zextOrBitCast
sextOrBitCast
generic_add
fadd
generic_fadd
generic_and
ashr
generic_ashr
lshr
generic_lshr
generic_or
fdiv
generic_fdiv
generic_mul
fmul
generic_fmul
sdiv
generic_sdiv
sdiv_exact
generic_sdiv_exact
generic_shl
srem
generic_srem
generic_sub
fsub
generic_fsub
udiv
generic_udiv
udiv_exact
generic_udiv_exact
urem
generic_urem
frem
generic_frem
generic_xor
int_expect
sadd_with_overflow
uadd_with_overflow
ssub_with_overflow
usub_with_overflow
smul_with_overflow
umul_with_overflow
fneg
assumeNonNegative
assume
cmp_eq
cmp_ne
cmp_sle
cmp_slt
cmp_sge
cmp_sgt
cmp_ule
cmp_ult
cmp_uge
cmp_ugt
fcmp_oeq
fcmp_ogt
fcmp_oge
fcmp_olt
fcmp_ole
fcmp_one
fcmp_ord
fcmp_ueq
fcmp_ugt
fcmp_uge
fcmp_ult
fcmp_ule
fcmp_une
fcmp_uno
retain
release
autorelease
loadRaw
loadInvariant
take
destroy
initialize
castToNativeObject
unsafeCastToNativeObject
castFromNativeObject
castToBridgeObject
valueToBridgeObject
castReferenceFromBridgeObject
castBitPatternFromBridgeObject
classifyBridgeObject
bridgeToRawPointer
bridgeFromRawPointer
castReference
reinterpretCast
addressof
addressOfBorrow
gepRaw
getTailAddr
performInstantaneousReadAccess
beginUnpairedModifyAccess
endUnpairedAccess
condfail
fixLifetime
isUnique
isUnique_native
beginCOWMutation
beginCOWMutation_native
endCOWMutation
bindMemory
allocWithTailElems
projectTailElems
convertStrongToUnownedUnsafe
convertUnownedUnsafeToGuaranteed
applyDerivative
applyTranspose
withUnsafeContinuation
withUnsafeThrowingContinuation
unexpectedError
errorInMain
isOptional
condfail_message
sizeof
strideof
ispod
isConcrete
isbitwisetakable
is_same_metatype
alignof
allocRaw
deallocRaw
fence
onFastPath
cmpxchg
atomicload
atomicstore
atomicrmw
convertTaskToJob
extractelement
insertelement
shufflevector
staticReport
assert_configuration
stringObjectOr
u_to_s_checked_trunc
s_to_s_checked_trunc
s_to_u_checked_trunc
u_to_u_checked_trunc
itofp_with_overflow
zeroInitializer
once
onceWithContext
conditionallyUnreachable
destroyArray
copyArray
takeArrayNoAlias
takeArrayFrontToBack
takeArrayBackToFront
assignCopyArrayNoAlias
assignCopyArrayFrontToBack
assignCopyArrayBackToFront
assignTakeArray
COWBufferForReading
unsafeGuaranteed
unsafeGuaranteedEnd
getObjCTypeEncoding
swift3ImplicitObjCEntrypoint
willThrow
poundAssert
typePtrAuthDiscriminator
targetOSVersionAtLeast
targetVariantOSVersionAtLeast
targetOSVersionOrVariantOSVersionAtLeast
int_instrprof_increment
initializeDefaultActor
destroyDefaultActor
resumeNonThrowingContinuationReturning
resumeThrowingContinuationReturning
resumeThrowingContinuationThrowing
buildSerialExecutorRef
createTaskGroup
destroyTaskGroup
getCurrentExecutor
getCurrentAsyncTask
cancelAsyncTask
createAsyncTaskFuture
createAsyncTaskGroupFuture
globalStringTablePointer
autoDiffCreateLinearMapContext
autoDiffProjectTopLevelSubcontext
autoDiffAllocateSubcontext
tsanInoutAccess
type_join
type_join_inout
type_join_meta
trigger_fallback_diagnostic
canBeClass
re-definition of opened archetype in function 
previously defined in function 
(null)
SIL for 
SILModule::SerializationCallback
sil-print-no-color
Don't use color when printing SIL
sil-full-demangle
Fully demangle symbol names in SIL output
sil-print-debuginfo
Include debug info in SIL output
sil-print-sourceinfo
Include source annotation in SIL output
sil-print-generic-specialization-info
Include generic specializationinformation info in SIL output
<<NULL OPERAND>>
<null>
<anonymous function>
!willSet
!didSet
!getter
!setter
!addressor
!mutableAddressor
!read
!modify
!allocator
!initializer
!enumelt
!destroyer
!deallocator
!ivarinitializer
!ivardestroyer
!globalaccessor
!defaultarg
!propertyinit
!backinginit
!projectedvalueinit
foreign
jvp.
vjp.
function
sil 
[transparent] 
[serializable] 
[serialized] 
[thunk] 
[signature_optimized_thunk] 
[reabstraction_thunk] 
[dynamically_replacable] 
[exact_self_class] 
[without_actually_escaping] 
[global_init] 
[global_init_once_fn] 
[lazy_getter] 
[weak_imported] 
[available 
[noinline] 
[always_inline] 
[Onone] 
[Ospeed] 
[Osize] 
[readonly] 
[readnone] 
[readwrite] 
[releasenone] 
[dynamic_replacement_for "
[objc_replacement_for "
[_semantics "
[_specialize 
[clang 
[canonical] 
[ossa] 
 !function_entry_count(
} // end sil function '
sil_global 
[let] 
 = {
sil_property 
sil_stage 
canonical
lowered
import 
import 
 [inherited]
 [override]
 [nonoverridden]
sil_vtable 
no_default
method 
associated_type 
associated_type_protocol (
dependent
base_protocol 
sil_witness_table 
  conditional_conformance (
sil_default_witness_table 
// differentiability witness for 
sil_differentiability_witness 
linear
] [parameters 
] [results 
  jvp: 
  vjp: 
sil_coverage_map 
partial
full
exported: 
kind: 
spi: 
spiModule: 
target: "
where 
anonname=
<initializer>
<serialized local context>
<top level code>
<abstract function>
<subscript>
<enum element>
placeholder<
 = argument of 
id: 
user
undef<
[dynamic_lifetime] 
, let
, var
, name "
, argno 
[objc] 
[stack] 
[tail_elems 
 in 
 // 
<<placeholder>>
, 0x
bytes 
utf8 
objc_selector 
0123456789ABCDEF
, forwarding: @
[strict] 
[invariant] 
[not_guaranteed] 
 on 
 withoutEscaping 
[keep_unique] 
[take] 
[copy] 
[trivial] 
[no_nested_conflict] 
[builtin] 
[var] 
[rootself] 
[crossmodulerootself] 
[derivedself] 
[derivedselfonly] 
[delegatingself] 
[delegatingselfallocated] 
[nothrow] 
[noasync] 
) : 
<<NULL CALLEE>>
[callee_guaranteed] 
[on_stack] 
, [tail_elems] 
[immutable] 
, case 
, default 
immutable_access 
mutable_access 
 : $
, invoke 
, type 
[parameters
[results
 with_derivative 
 with_transpose 
original
 as 
] [parameters
] [results
[throws] 
objc "
root $
, resume 
, unwind 
, normal 
, error 
 !true_count(
 !false_count(
 !case_count(
 !default_count(
[exact] 
take_always
take_on_success
copy_on_success
borrow_always
[nonatomic] 
[poison] 
[abort] 
[init] 
[assign] 
[reassign] 
[reinit] 
[initialization] 
[assign_wrapped_value] 
, init 
, set 
[native] 
  // function_ref 
  // dynamic_function_ref 
  // prev_dynamic_function_ref 
%initval = 
) = 
loc 
scope 
// type-defs: 
:return
:imp_return
:inlined
:minlined
:cleanup
:art_unreach
:sil
:auto_gen
:in_prologue
 auto_gen
 no_loc
 perf_inlined_at 
sil_scope 
 parent 
 inlined_at 
// Preds:
  // 
SourceLoc: 
call-site
// user
// Generic specialization information for 
// Caller: 
// Parent: 
// Substitutions: 
 conformances <
// clang name: 
non_abi 
hidden 
shared 
private 
public_external 
hidden_external 
shared_external 
private_external 
stored_property #
gettable_property $
settable_property $
 id 
, getter 
, setter 
, indices 
, indices_equals 
, indices_hash 
, external #
optional_wrap : $
optional_chain : $
optional_force : $
tuple_element #
Builtin
SwiftShims
/* externally visible decls: 
// Mappings from '#fileID' to '#filePath':
//   '
' => '
 (alternate)
__tlcd_
unowned
owned
guaranteed
none
NonLifetimeEnding
LifetimeEnding
<Constraint Kind:
 LifetimeConstraint:
getting lowered local captures
Type Lowering for lowered type: 
Expansion: 
isTrivial: 
isFixedABI: 
isAddressOnly: 
isResilient: 
Minimal
Maximal
lowering local captures
=============================--------------------------------
Inorder Dominator Tree: 
DFSNumbers invalid: 
 slow queries.
Roots: 
Inorder PostDominator Tree: 
DominatorTree is not up to date!
Computed:
Actual:
PostDominatorTree is not up to date!
Computed:
 <<exit node>>
Can't demangle: 
tsanInoutAccess
Stack
Nested
Unidentified
Argument
Yield
Global
Tail
INVALID
  Field: 
 Index: 
Unknown
Path: 
Storage: 
Base: 
sil-opt-remark-ignore-always-infer
Disables always infer source loc behavior for testing purposes
BeginBorrow
BeginApply
Branch
Apply
TryApply
BorrowScopeOperand:
Kind: 
Value: 
User: 
SILFunctionArgument
BeginBorrowInst
LoadBorrowInst
BorrowScopeIntroducingValue:
Kind: 
Copy
LoadCopy
LoadTake
Tuple
FunctionArgument
PartialApplyInit
AllocBoxInit
AllocRefInit
sil-print-on-error
Printing SIL function bodies in crash diagnostics.
<<unknown AST node>>
<<invalid location>>
While 
 at 
 SIL function 
 <<null>>
 for 
 SIL node 
<<debugloc at 
Field: 
Enum: 
Index: 
 Box over
UpCast
RefCast
BitwiseCast
 TailElems
Projection Path [
 in: 
Failed to find cached writes for: 
Write: 
Full apply site not understood: 
Function: 
Unknown instruction: 
Found use outside of lifetime?!
N/A. 
User: 
Begin Error in Function: '
End Error in Function: '
Found ownership error?!
Error#: 
Found over consume?!
Value: N/A
Block: bb
Consuming Users:
Found outside of lifetime use?!
Consuming User: 
Non Consuming User: 
Error! Found a leak due to a consuming post-dominance failure!
Post Dominating Failure Blocks:
Found outside of lifetime use!
User:
Function: '
Found non consuming use outside of the lifetime being verified.
dont-abort-on-memory-lifetime-errors
Don't abort compliation if the memory lifetime checker detects an error.
lifetime mismatch in predecessors
indirect argument is not alive at function return
memory is initialized at function return but shouldn't
indirect argument is not alive at throw
memory is initialized at throw but shouldn't
memory is not initialized, but should
store-borrow location cannot be written
SIL memory lifetime failure in @
memory location: 
at instruction: 
in function:
memory is initialized, but shouldn't
sil-ownership-verifier-enable-testing
Put the sil ownership verifier in testing mode. See comment in SILOwnershipVerifier.cpp above option for more information.
disable-sil-ownership-verification
Have operand with incompatible ownership?!
Operand Number: 
Conv: 
Constraint:
Implicit Regular User Guaranteed Phi Cycle!
Initial: 
Invalid End Borrow!
Original Value: 
End Borrow: 
Could not recognize address user of interior pointer operand!
Interior Pointer Operand: 
Address User: 
Owned function parameter without life ending uses!
Owned yield without life ending uses!
Error! Found a leaked owned value that was never consumed.
Non trivial values, non address values, and non guaranteed function args must have at least one lifetime ending use?!
Guaranteed function parameter with life ending uses!
Lifetime Ending User: 
Subobject projection with life ending uses!
verify-abort-on-failure
verify-continue-on-failure
verify-dump-module-on-failure
verify-di-holes
verify-skip-convert-escape-to-noescape-attributes
allow-critical-edges
component type of property descriptor should match type of storage
vtable entry for 
 must be ABI-compatible
Symbol redefined: 
Vtable redefined: 
Vtable entry for function: 
not in cache!
Witness table redefined: 
Default witness table redefined: 
Basic blocks cannot be empty: !BB.empty()
Basic blocks must end with a terminator instruction: isa<TermInst>(BB.back())
All SIL functions must have a debug scope: DebugScope
Scope of SIL function points to different function: DebugScope->Parent.get<SILFunction *>() == &F
Begin Error in function 
SIL verification failed: 
Verifying instruction:
Verifying argument:
End Error in function 
In function:
In module:
verifying
external declaration of internal SILFunction not allowed: F->isAvailableExternally()
non-generic function definitions cannot have a generic environment: FTy->isPolymorphic()
generic function definition must have a generic environment: !FTy->isPolymorphic()
Functions with a calling convention with self parameter must have at least one argument for self.: !FTy->hasSelfParam() || !FTy->getParameters().empty()
entry block cannot have predecessors: entry->pred_empty()
entry point has wrong number of arguments: entry->args_size() == (fnConv.getNumIndirectSILResults() + fnConv.getNumParameters())
indirect result
entry point argument types do not match function type: matched
entry point address argument must have an indirect calling convention: std::equal(entry->args_begin() + fnConv.getNumIndirectSILResults(), entry->args_end(), fnConv.funcTy->getParameters().begin(), [&](SILArgument *bbarg, SILParameterInfo paramInfo) { if (!bbarg->getType().isAddress()) return true; switch (paramInfo.getConvention()) { default: return false; case ParameterConvention::Indirect_In: case ParameterConvention::Indirect_In_Constant: case ParameterConvention::Indirect_Inout: case ParameterConvention::Indirect_InoutAliasable: case ParameterConvention::Indirect_In_Guaranteed: return true; } })
 type mismatch!
  argument: 
  expected: 
 ownership kind mismatch!
more than one return block in function: !FoundReturnBlock
more than one throw block in function: !FoundThrowBlock
more than one unwind block in function: !FoundUnwindBlock
encountered await_async_continuation that doesn't match active gotten continuation: state.GotAsyncContinuation == aaci->getOperand()
cannot suspend async task while unawaited continuation is active: !state.GotAsyncContinuation
stack dealloc with empty stack: !state.Stack.empty()
Recent stack alloc: 
stack dealloc does not match most recent stack alloc: op == state.Stack.back()
operation was not ended before re-beginning it: notAlreadyPresent
operation has already been ended: present
get_async_continuation while unawaited continuation is already active: !state.GotAsyncContinuation
return with stack allocs that haven't been deallocated: state.Stack.empty()
return with operations still active: state.ActiveOps.empty()
return with unawaited async continuation: !state.GotAsyncContinuation
encountered 'unwind' when not on unwind path: state.CFG == VerifyFlowSensitiveRulesDetails::YieldUnwind
encountered 'return' or 'throw' when on unwind path: state.CFG != VerifyFlowSensitiveRulesDetails::YieldUnwind
encountered 'return' before yielding a value in yield_once coroutine: state.CFG == VerifyFlowSensitiveRulesDetails::YieldOnceResume
encountered multiple 'yield's along single path: state.CFG != VerifyFlowSensitiveRulesDetails::YieldOnceResume
encountered 'yield' on abnormal CFG path: state.CFG == VerifyFlowSensitiveRulesDetails::Normal
encountered 'yield' while an unawaited continuation is active: !state.GotAsyncContinuation
successor of 'yield' should not be encountered twice: !isa<YieldInst>(term)
inconsistent stack heights entering basic block: state.Stack == foundState.Stack || isUnreachable()
inconsistent active-operations sets entering basic block: state.ActiveOps == foundState.ActiveOps || isUnreachable()
inconsistent coroutine states entering basic block: state.CFG == foundState.CFG
inconsistent active async continuations entering basic block: state.GotAsyncContinuation == foundState.GotAsyncContinuation
Must be a predecessor of each successor.: SuccBB->isPredecessorBlock(BB)
Must be a successor of each predecessor.: PredBB->isSuccessorBlock(BB)
Non-branch terminator must have a unique successor.: arg->getParent()->pred_empty() || arg->getParent()->getSinglePredecessorBlock()
Found mutating or consuming use of an in_guaranteed parameter?!: !ImmutableAddressUseVerifier().isMutatingOrConsuming(fArg)
SIL tokens can only be produced as the results of specific instructions: isLegalSILTokenProducer(value)
l-value types are not legal in SIL: !isa<LValueType>(rvalueType)
AST function types are not legal in SIL: !isa<AnyFunctionType>(rvalueType)
metatypes in SIL must have a representation: metatype->hasRepresentation()
Operand is of an ArchetypeType that does not exist in the Caller's generic param list.: isArchetypeValidInFunction(A, F)
Use of an opened archetype should be dominated by a definition of this opened archetype: I == nullptr || openingInst == I || properlyDominates(openingInst, I)
instructions are not in the same function: aBlock->getParent() == bBlock->getParent()
Once ownership is gone, all values should have none ownership: SILValue(V).getOwnershipKind() == OwnershipKind::None
All phi inputs must be branch operands.: isa<BranchInst>(TI)
All phi argument inputs must be from branches.: isa<BranchInst>(TI) || isa<CondBranchInst>(TI)
Block arguments cannot be addresses: !arg->getType().isAddress()
Unhandled, unexpected builtin instruction: 
Unhandled, unexpected instruction: 
Instruction with null parent: BB
Can't be in a parent block if it is empty: !BB->empty()
Non-terminators cannot be the last in a block: &*BB->rbegin() != I
Terminator must be the last in block: &*BB->rbegin() == I
instruction user is null?: user
instruction used by unparented instruction: userI->getParent()
instruction used by instruction not in same static initializer: userI->getParent() == BB
instruction used by instruction in different function: userI->getFunction() == &F
use doesn't actually belong to instruction it claims to: operands.begin() <= use && use <= operands.end()
instruction has null operand: operand.get()
instruction has placeholder operand: !isa<PlaceholderValue>(operand.get())
instruction uses value of unparented instruction: valueI->getParent()
instruction uses value which is not in same static initializer: valueI->getParent() == BB
instruction uses value of instruction from another function: valueI->getFunction() == &F
instruction isn't dominated by its operand: properlyDominates(valueI, I)
static initializer inst cannot refer to SILArgument: !I->isStaticInitializerInst()
instruction uses value of unparented instruction: valueBBA->getParent()
bb argument value from another function: valueBBA->getFunction() == &F
instruction isn't dominated by its bb argument operand: Dominance->dominates(valueBBA->getParent(), I->getParent())
instruction's operand's owner isn't the instruction: operand.getUser() == I
operand value isn't used by operand: isOperandInValueUses(&operand)
In non-ossa all non-type dependent operands must have a constraint of Any, NonLifetimeEnding: constraint.getPreferredKind() == OwnershipKind::Any && constraint.getLifetimeConstraint() == UseLifetimeConstraint::NonLifetimeEnding
Operand constraint should never have an unowned preferred kind since guaranteed and owned values can always be passed in unowned positions: constraint.getPreferredKind() != OwnershipKind::Unowned
OwnedFirstArgForwardingSingleValueInst's ownership kind must be compatible with owned: kind.isCompatibleWith(o->getForwardingOwnershipKind())
GuaranteedFirstArgForwardingSingleValueInst's ownership kind must be compatible with guaranteed: kind.isCompatibleWith(o->getForwardingOwnershipKind())
debug scope of instruction belongs to a different function: !DS || DS->getParentFunction() == I->getFunction()
Scope contains conflicting debug variables for one function argument: DebugVars[ArgNo] == VarInfo->Name
return locations are only allowed on branch and return instructions: InstKind == SILInstructionKind::BranchInst || InstKind == SILInstructionKind::ReturnInst || InstKind == SILInstructionKind::UnreachableInst
artificial locations are only allowed on Unreachable instructions: InstKind == SILInstructionKind::UnreachableInst
result of alloc_stack must be an address type: AI->getType().isAddress()
Opened archetype should be registered in SILModule: Def
Function containing dynamic self type must have self parameter: I->getFunction()->hasSelfParam() || I->getFunction()->hasDynamicSelfMetadata()
Instruction should contain a type dependent operand for every used open archetype or dynamic self: false
alloc_ref must allocate class: AI->isObjC() || AI->getType().getClassOrBoundGenericClass()
Result of alloc_ref
Can't tail allocate with ObjC class: NumTypes == 0 || !ARI->isObjC()
count needs integer type: Counts[Idx].get()->getType().is<BuiltinIntegerType>()
 must be an object: value->getType().isObject()
 must have reference semantics: value->getType().isReferenceCounted(F.getModule())
UnownedStorageType
 must be an object
 must not have type 
operand of alloc_ref_dynamic must be of metatype type: Metadata->getType().is<AnyMetatypeType>()
operand of alloc_ref_dynamic must have a metatype representation: metaTy->hasRepresentation()
alloc_ref_dynamic @objc requires operand of ObjC metatype: metaTy->getRepresentation() == MetatypeRepresentation::ObjC
alloc_ref_dynamic requires operand of thick metatype: metaTy->getRepresentation() == MetatypeRepresentation::Thick
Operand value should be an address: I->getOperand()->getType().isAddress()
Operand value should be a Builtin.UnsafeValueBuffer: I->getOperand()->getType().is<BuiltinUnsafeValueBufferType>()
alloc_box must have a @box type: boxTy
result of alloc_box must be an object: AI->getType().isObject()
An alloc_box with a mark_uninitialized user can not have any other users.: none_of(AI->getUses(), [](Operand *Op) -> bool { return isa<MarkUninitializedInst>(Op->getUser()); }) || AI->hasOneUse()
alloc_existential_box #0 result should be a value: exType.isObject()
alloc_existential_box must be used with a boxed existential type: exType.canUseExistentialRepresentation( ExistentialRepresentation::Boxed, AEBI->getFormalConcreteType())
init_existential instruction must have the right number of conformances: conformances.size() == protocols.size()
init_existential of class existential with non-class type: concreteType->mayHaveSuperclass() || (concreteType.isExistentialType() && concreteType.getExistentialLayout().requiresClass())
init_existential of subclass existential with wrong type: superclass->isExactSuperclassOf(concreteType)
init_existential instruction must have conformances in proper order: conformances[i].getRequirement() == protocols[i]->getDecl()
index_addr must produce an address: IAI->getType().isAddress()
index_addr must produce an address of the same type as its base
index_addr index must be of a builtin integer type: IAI->getIndex()->getType().is<BuiltinIntegerType>()
tail_addr must produce an address: IAI->getType().isAddress()
tail_addr index must be of a builtin integer type: IAI->getIndex()->getType().is<BuiltinIntegerType>()
index_raw_pointer must produce a RawPointer: IAI->getType().is<BuiltinRawPointerType>()
index_raw_pointer base must be a RawPointer: IAI->getBase()->getType().is<BuiltinRawPointerType>()
index_raw_pointer index must be of a builtin integer type: IAI->getIndex()->getType().is<BuiltinIntegerType>()
result of function_ref
SILFunctionType
function_ref should have a context-free function result: !fnType->getExtInfo().hasContext()
function_ref cannot reference a [dynamically_replaceable] function: !RefF->isDynamicallyReplaceable()
previous_function_ref cannot reference a [dynamically_replaceable] function: !RefF->isDynamicallyReplaceable()
previous_function_ref must reference a [dynamic_replacement_for:...] function: RefF->getDynamicallyReplacedFunction()
dynamic_function_ref must reference a [dynamically_replaceable] function: RefF->isDynamicallyReplaceable()
external declarations of SILFunctions with shared visibility is not allowed: SingleFunction || !hasSharedVisibility(RefF->getLinkage()) || RefF->hasForeignBody()
function_ref inside fragile function cannot reference a private or hidden symbol: (SingleFunction && RefF->isExternalDeclaration()) || RefF->hasValidLinkageForFragileRef()
 must have type 
global_addr must have an address result type: GAI->getType().isAddress()
global_addr cannot refer to a statically initialized object: !GAI->getReferencedGlobal()->isInitializedObject()
global_addr/value must be the type of the variable it references
cannot access storage of resilient global: !VD->isResilient(F.getModule().getSwiftModule(), F.getResilienceExpansion())
global_addr/value inside fragile function cannot reference a private or hidden symbol: RefG->isSerialized() || hasPublicVisibility(RefG->getLinkage())
global_value must have an address result type: GVI->getType().isObject()
invalid integer literal type: ILI->getType().is<AnyBuiltinIntegerType>()
result type of class_method must match abstracted type of method
result of class_method
result method must be of a context-free function type: !methodType->getExtInfo().hasContext()
operand must be of a class type: operandType.isClassOrClassMetatype()
result must be a method of a class: getMethodSelfType(methodType).isClassOrClassMetatype()
foreign method cannot be dispatched natively: !member.isForeign
extension method cannot be dispatched natively: !isa<ExtensionDecl>(member.getDecl()->getDeclContext())
method does not appear in the class's vtable: VerifyClassMethodVisitor(member).Seen
result type of super_method must match abstracted type of method
result of super_method
super_method must look up a class method: methodClass->getClassOrBoundGenericClass()
native method cannot be dispatched via objc: member.isForeign
result of objc_method
wrong function type representation: methodType->getRepresentation() == SILFunctionTypeRepresentation::ObjCMethod
result type of objc_method must match abstracted type of method
operand type must be an archetype or self-conforming existential: isa<ArchetypeType>(operandInstanceType) || operandInstanceType->isObjCExistentialType()
result of objc_super_method
objc_super_method must look up a class method: methodClass->getClassOrBoundGenericClass()
result of witness_method
witness_method method must be a protocol method: protocol
result of witness_method must have correct representation for protocol: methodType->getRepresentation() == F.getModule().Types.getProtocolWitnessRepresentation(protocol)
result of witness_method must be polymorphic: methodType->isPolymorphic()
method should be polymorphic on Self parameter at depth 0 index 0: selfGenericParam->getDepth() == 0 && selfGenericParam->getIndex() == 0
first non-same-typerequirement should be conformance requirement: selfRequirement && selfRequirement->getKind() == RequirementKind::Conformance
requirement Self parameter must conform to called protocol: std::find(protos.begin(), protos.end(), protocol) != protos.end()
Must have a type dependent operand for the opened archetype: AMI->getTypeDependentOperands().size() == 1
Should not have an operand for the opened existential: AMI->getTypeDependentOperands().empty()
concrete type lookup requires concrete conformance: AMI->getConformance().isConcrete()
concrete type lookup requires conformance that matches type
method does not have a witness table entry: AMI->getMember().requiresNewWitnessTableEntry()
can't upcast to same type: UI->getType() != UI->getOperand()->getType()
upcast operand must be a class or class metatype instance: UI->getOperand()->getType().is<MetatypeType>()
upcast must convert a class metatype to a class metatype: instClass
upcast must cast to a superclass or an existential metatype: instClass->getDeclaredTypeInContext() ->isBindableToSuperclassOf(opInstTy)
upcast must cast to a superclass or an existential metatype: instTy->isExactSuperclassOf(opInstTy)
Upcast can only upcast in between types of the same SILValueCategory. This prevents address types from being cast to object types or vis-a-versa: UI->getType().getCategory() == UI->getOperand()->getType().getCategory()
upcast must convert a class instance to a class type: ToClass
upcast must cast to a superclass or an existential metatype: ToClass->getDeclaredTypeInContext() ->isBindableToSuperclassOf(FromTy.getASTType())
upcast must cast to a superclass or an existential metatype: ToTy.isExactSuperclassOf(FromTy)
Unexpected trivial-to-reference conversion: : !svi->getOperand(0)->getType().isTrivial(*svi->getFunction()) || svi->getType().isTrivial(*svi->getFunction())
address-to-pointer operand must be an address: AI->getOperand()->getType().isAddress()
address-to-pointer result type must be RawPointer: AI->getType().getASTType()->isEqual( AI->getType().getASTContext().TheRawPointerType)
unchecked_ref_cast operand must be a value: AI->getOperand()->getType().isObject()
unchecked_ref_cast result must be an object: AI->getType().isObject()
unchecked_ref_cast requires a heap object reference type: SILType::canRefCast(AI->getOperand()->getType(), AI->getType(), AI->getModule())
unchecked_addr_cast operand must be an address: AI->getOperand()->getType().isAddress()
unchecked_addr_cast result must be an address: AI->getType().isAddress()
unchecked_trivial_bit_cast must operate on a value: BI->getOperand()->getType().isObject()
unchecked_trivial_bit_cast must produce a value: BI->getType().isObject()
unchecked_trivial_bit_cast must produce a value of trivial type: BI->getType().isTrivial(F)
unchecked_bitwise_cast must operate on a value: BI->getOperand()->getType().isObject()
unchecked_bitwise_cast must produce a value: BI->getType().isObject()
Inst with qualified ownership in a function that is not qualified: F.hasOwnership()
ref-to-raw-pointer operand must be a class reference or NativeObject: AI->getOperand()->getType().isAnyClassReferenceType()
ref-to-raw-pointer result must be RawPointer
raw-pointer-to-ref result must be a class reference or NativeObject: AI->getType() .getASTType()->isBridgeableObjectType() || AI->getType().getASTType()->isEqual( AI->getType().getASTContext().TheNativeObjectType)
raw-pointer-to-ref operand must be NativeObject
Operand of ref_to_unowned
Result of ref_to_unowned
Result of ref_to_unowned does not have the operand's type as its referent type
 cannot apply to a function type: !value->getType().is<SILFunctionType>()
 must have reference semantics: objectTy.isReferenceCounted(F.getModule())
Operand of unowned_to_ref
Result of unowned_to_ref
Operand of unowned_to_ref does not have the operand's type as its referent type
Operand of ref_to_unmanaged
Result of ref_to_unmanaged
UnmanagedStorageType
Result of ref_to_unmanaged does not have the operand's type as its referent type
Operand of unmanaged_to_ref
Result of unmanaged_to_ref
Operand of unmanaged_to_ref does not have the operand's type as its referent type
convert_function operand
convert_function result
convert_function cannot change function ABI
convert_escape_to_noescape operand
convert_escape_to_noescape cannot change function ABI
convert_escape_to_noescape [not_guaranteed] not allowed after mandatory passes: ICI->isLifetimeGuaranteed()
thin_function_to_pointer operand
thin_function_to_pointer result
BuiltinRawPointerType
thin_function_to_pointer only works on thin, method or witness_method functions: rep == SILFunctionTypeRepresentation::Thin || rep == SILFunctionTypeRepresentation::Method || rep == SILFunctionTypeRepresentation::WitnessMethod
pointer_to_thin_function result
pointer_to_thin_function operand
pointer_to_thin_function only works on thin, method or witness_method functions: rep == SILFunctionTypeRepresentation::Thin || rep == SILFunctionTypeRepresentation::Method || rep == SILFunctionTypeRepresentation::WitnessMethod
ref_to_bridge_object must convert from a value: RI->getConverted()->getType().isObject()
ref_to_bridge_object must convert from a heap object ref: RI->getConverted()->getType().getASTType() ->isBridgeableObjectType()
ref_to_bridge_object must take a Builtin.Word bits operand
ref_to_bridge_object must produce a BridgeObject
bridge_object_to_ref must take a BridgeObject
bridge_object_to_ref must produce a value: RI->getType().isObject()
bridge_object_to_ref must produce a heap object reference: RI->getType().getASTType()->isBridgeableObjectType()
bridge_object_to_word must take a BridgeObject
bridge_object_to_word must produce a value: RI->getType().isObject()
bridge_object_to_word must produce a Word
thin_to_thick_function operand
thin_to_thick_function result
thin_to_thick_function operand and result type must differ only  in thinness: opFTy->isPolymorphic() == resFTy->isPolymorphic()
thin_to_thick_function operand and result
operand of thin_to_thick_function must be thin: opFTy->getRepresentation() == SILFunctionType::Representation::Thin
result of thin_to_thick_function must be thick: resFTy->getRepresentation() == SILFunctionType::Representation::Thick
operand and result of thin_to_think_function must agree in particulars: adjustedOperandExtInfo.isEqualTo(resFTy->getExtInfo(), useClangTypes(opFTy))
results of 
 do not match in count: type1->getNumResults() == type2->getNumResults()
result 
 of 
 do not match: type1->getResults()[i] == type2->getResults()[i]
inputs of 
 do not match in count: type1->getParameters().size() == type2->getParameters().size()
input 
 do not match: type1->getParameters()[i] == type2->getParameters()[i]
thick_to_objc_metatype operand
AnyMetatypeType
thick_to_objc_metatype result
thick_to_objc_metatype cannot change metatype kinds: TTOCI->getOperand()->getType().is<MetatypeType>() == TTOCI->getType().is<MetatypeType>()
operand of thick_to_objc_metatype must be thick: opTy->getRepresentation() == MetatypeRepresentation::Thick
operand of thick_to_objc_metatype must be ObjC: resTy->getRepresentation() == MetatypeRepresentation::ObjC
thick_to_objc_metatype instance types do not match
objc_to_thick_metatype operand
objc_to_thick_metatype result
objc_to_thick_metatype cannot change metatype kinds: OCTTI->getOperand()->getType().is<MetatypeType>() == OCTTI->getType().is<MetatypeType>()
operand of objc_to_thick_metatype must be ObjC: opTy->getRepresentation() == MetatypeRepresentation::ObjC
operand of objc_to_thick_metatype must be thick: resTy->getRepresentation() == MetatypeRepresentation::Thick
objc_to_thick_metatype instance types do not match
objc_metatype_to_object must take a value: OMOI->getOperand()->getType().isObject()
objc_metatype_to_object must take an @objc metatype value: fromMetaTy
objc_metatype_to_object must take an @objc metatype value: fromMetaTy->getRepresentation() == MetatypeRepresentation::ObjC
objc_metatype_to_object must produce a value: OMOI->getType().isObject()
objc_metatype_to_object must produce an AnyObject value: OMOI->getType().getASTType()->isAnyObject()
objc_metatype_to_object must take an @objc existential metatype value: fromMetaTy
objc_metatype_to_object must take an @objc existential metatype value: fromMetaTy->getRepresentation() == MetatypeRepresentation::ObjC
value checked cast src and dest must be objects: fromTy.isObject() && toTy.isObject()
invalid value checked cast src or dest types: isOpaque || canUseScalarCheckedCastInstructions(F.getModule(), fromCanTy, toCanTy)
metatype checked cast cannot change metatype representation: fromMetaty->getRepresentation() == toMetaty->getRepresentation()
metatype checked cast cannot check thin metatypes: fromMetaty->getRepresentation() != MetatypeRepresentation::Thin
downcast operand must be a class type: fromCanTy.getClassOrBoundGenericClass()
downcast must convert to a class type: toCanTy.getClassOrBoundGenericClass()
downcast must convert to a subclass: fromCanTy->isBindableToSuperclassOf(toCanTy)
operand of copy_block should be a block: I->getOperand()->getType().isBlockPointerCompatible()
result of copy_block should be same type as operand
Source value should be an object value: I->getOperand()->getType().isObject()
Source value should be non-trivial: !I->getOperand()->getType().isTrivial(*I->getFunction())
copy_value is only valid in functions with qualified ownership: !fnConv.useLoweredAddresses() || F.hasOwnership()
Operand of unmanaged_retain
cannot convert ownership of an address: !uoci->getType().isAddress()
converting ownership does not affect the type: uoci->getType() == uoci->getOperand()->getType()
is_escaping_closure must have a thick function operand: fnType && fnType->getExtInfo().hasContext() && !fnType->isNoEscape() && fnType->getExtInfo().getRepresentation() == SILFunctionTypeRepresentation::Thick
unknown verfication type: IEC->getVerificationType() == IsEscapingClosureInst::ObjCEscaping || IEC->getVerificationType() == IsEscapingClosureInst::WithoutActuallyEscaping
Result of load must be an object: LI->getType().isObject()
Load must have a loadable type: !fnConv.useLoweredAddresses() || LI->getType().isLoadable(*LI->getFunction())
Load operand must be an address: LI->getOperand()->getType().isAddress()
Load operand type and result type mismatch
Load with unqualified ownership in a qualified function: !F.hasOwnership()
Load with qualified ownership in an unqualified function: F.hasOwnership()
load [copy] or load [take] can only be applied to non-trivial types: !LI->getType().isTrivial(*LI->getFunction())
A load with trivial ownership must load a trivial type: LI->getType().isTrivial(*LI->getFunction())
Result of load must be an object: LBI->getType().isObject()
Load must have a loadable type: !fnConv.useLoweredAddresses() || LBI->getType().isLoadable(*LBI->getFunction())
Load operand must be an address: LBI->getOperand()->getType().isAddress()
Found load borrow that is invalidated by a local write?!: loadBorrowImmutabilityAnalysis.isImmutable(LBI)
Can't store from an address source: SI->getSrc()->getType().isObject()
Can't store a non loadable type: !fnConv.useLoweredAddresses() || SI->getSrc()->getType().isLoadable(*SI->getFunction())
Must store to an address dest: SI->getDest()->getType().isAddress()
Store operand type and dest type mismatch
store_borrow destination can only be an alloc_stack: isa<AllocStackInst>(SI->getDest())
result must be same type as operand
begin_access operand must have address type: BAI->getType().isAddress()
init/deinit accesses cannot use non-static enforcement: BAI->getEnforcement() == SILAccessEnforcement::Static
access must have known enforcement outside raw stage: AccessInst->getEnforcement() != SILAccessEnforcement::Unknown
Result of load must be an object: LWI->getType().isObject()
Optionality mismatch: isOptional
load_weak operand must be a weak address: PointerType.isAddress() && PointerRVType->is<WeakStorageType>()
load_unowned operand must be a unowned address: PointerType.isAddress() && PointerRVType->is<UnownedStorageType>()
mark_uninitialized instruction can only exist in raw SIL: MU->getModule().getStage() == SILStage::Raw
mark_uninitialized must be an address, class, or box type: Src->getType().isAddress() || Src->getType().getClassOrBoundGenericClass() || Src->getType().getAs<SILBoxType>()
operand and result type mismatch
Mark Uninitialized must be applied to a storage location: isa<AllocationInst>(Src) || isa<GlobalAddrInst>(Src) || isa<SILUndef>(Src) || isa<SILArgument>(Src) || isa<PointerToAddressInst>(Src)
project_box operand should be a value: I->getOperand()->getType().isObject()
project_box operand should be a @box type: boxTy
project_box result should be address of boxed type
project_box with more than one user when a user is a mark_uninitialized: I->hasOneUse() || none_of(I->getUses(), [](Operand *Op) -> bool { return isa<MarkUninitializedInst>(Op->getUser()); })
project_existential_box operand must not be address: operandType.isObject()
project_existential_box operand must be boxed existential: operandType.canUseExistentialRepresentation( ExistentialRepresentation::Boxed)
project_existential_box result must be an address: PEBI->getType().isAddress()
project_existential_box result should be the lowered concrete type of its alloc_existential_box
type of apply instruction doesn't match function result type
nothrow flag used for callee without error result: calleeConv.funcTy->hasErrorResult()
apply instruction cannot call function with error result: !calleeConv.funcTy->hasErrorResult()
noasync flag used for sync callee: calleeConv.funcTy->isAsync()
cannot call an async function from a non async function: !calleeConv.funcTy->isAsync() || AI->getFunction()->isAsync()
cannot call coroutine with normal apply: !calleeConv.funcTy->isCoroutine()
calling convention difference between types: site.getOrigCalleeType()->getRepresentation() == site.getSubstCalleeType()->getRepresentation()
substituted callee type should not be generic: !site.getSubstCalleeType()->isPolymorphic()
substituted callee type does not match substitutions
apply doesn't have right number of arguments for function: site.getNumArguments() == substConv.getNumSILArguments()
operand of 'apply' doesn't match function input type
Number of opened archetypes and dynamic self in the substitutions list should match the number of type dependent operands: FoundOpenedArchetypes.size() + hasDynamicSelf == AI->getTypeDependentOperands().size()
dynamic self operand without dynamic self type: hasDynamicSelf
self metadata operand in function without self metadata param: AI->getFunction()->hasDynamicSelfMetadata()
wrong self metadata operand: (ValueBase *)V == AI->getFunction()->getDynamicSelfMetadata()
opened archetype operand should refer to a SIL instruction: isa<SingleValueInstruction>(V)
opened archetype operand should define an opened archetype: Archetype
opened archetype operand does not correspond to any opened archetype from the substitutions list: FoundOpenedArchetypes.count(Archetype)
Archetype to be substituted must be valid in function.: isArchetypeValidInFunction(A, AI->getFunction())
Use of an opened archetype should be dominated by a definition of this opened archetype: openingInst == AI || properlyDominates(openingInst, AI)
callee operand
callee of apply without substitutions must not be polymorphic: !fnTy->isPolymorphic()
callee of apply with substitutions must be polymorphic: fnTy->isPolymorphic()
substitution map's generic signature: 
callee's generic signature: 
Substitution map does not match callee in apply instruction: false
Replacement type of a substitution contains an ArchetypeType that does not exist in the Caller's generic param list.: isArchetypeValidInFunction(A, &F)
getCurrentAsyncTask builtin can only be used in an async function: F.isAsync()
default-actor builtin can only operate on a single object: arguments.size() == 1
default-actor builtin can only operate on default actors: (argClass && argClass->isRootDefaultActor()) || isa<BuiltinNativeObjectType>(argType)
result of buildSerialExecutorRef
BuiltinExecutorType
buildSerialExecutorRef expects one argument: arguments.size() == 1
operand of buildSerialExecutorRef should have object type: arguments[0]->getType().isObject()
isvolatile argument of memory intrinsics must be an integer literal: !isa<SILArgument>(BI->getArguments()[3])
size argument of memory use markers must be an integer literal: !isa<SILArgument>(BI->getArguments()[0])
llvm.invariant.end parameter #2 must be an integer literal: !isa<SILArgument>(BI->getArguments()[1])
result of partial_apply
result of closure cannot have a thin function type: resultInfo->getExtInfo().hasContext()
substituted callee type should not be generic: !PAI->getSubstCalleeType()->isPolymorphic()
result of partial_apply should take as many inputs as were not applied by the instruction: PAI->getArguments().size() + resultInfo->getParameters().size() == substTy->getParameters().size()
applied argument types do not match suffix of function type's inputs
Concurrent partial apply in canonical SIL with a loadable box type argument?!: !p.value()->getType().getASTType()->is<SILBoxType>() || p.value()->getType().getSILBoxFieldType(&F).isAddressOnly(F)
inputs to result function type do not match unapplied inputs of original function: resultInfo->getParameters()[i] == substTy->getParameters()[i]
applied results do not agree in count with function type: resultInfo->getNumResults() == substTy->getNumResults()
result type of result function type for partially applied @unowned_inner_pointer function should have @unownedconvention: originalResult == expectedResult
result type of result function type for partially applied @autoreleased function should have @owned convention: originalResult == expectedResult
result type of result function type does not match original function: originalResult == expectedResult
partial_apply should have a single context argument: PAI->getArguments().size() == 1
partial_apply result should have thick convention: resultInfo->getRepresentation() == SILFunctionTypeRepresentation::Thick
partial_apply callee should have thin convention: PAI->getCallee()->getType().castTo<SILFunctionType>() ->getRepresentation() == SILFunctionTypeRepresentation::Thin
partial_apply context must capture generic environment for callee: !PAI->getCalleeFunction()->getGenericEnvironment()
partial_apply context argument must have the same convention as the resulting function's callee convention: substTy->getParameters().back().getConvention() == resultInfo->getCalleeConvention()
partial_apply context argument must be swift-refcounted: isSwiftRefcounted(PAI->getArguments().front()->getType())
metatype instruction must be of metatype type: MI->getType().is<MetatypeType>()
metatype instruction must have a metatype representation: MetaTy->hasRepresentation()
value_metatype instruction must be of metatype type: MI->getType().is<MetatypeType>()
value_metatype instruction must have a metatype representation: MI->getType().castTo<MetatypeType>()->hasRepresentation()
value_metatype result must be formal metatype of lowered operand type: isLoweringOf(MI->getOperand()->getType(), formalInstanceTy)
existential_metatype instruction must be of metatype type: MI->getType().is<ExistentialMetatypeType>()
value_metatype instruction must have a metatype representation: MI->getType().castTo<ExistentialMetatypeType>()->hasRepresentation()
existential_metatype operand must be of protocol type: MI->getOperand()->getType().isAnyExistentialType()
existential_metatype result must be formal metatype of lowered operand type: isLoweringOf(MI->getOperand()->getType(), formalInstanceTy)
objc_protocol must be applied to an @objc protocol: OPI->getProtocol()->isObjC()
objc_protocol must produce a value: classTy.isObject()
objc_protocol must produce a class instance: classDecl
objc_protocol must produce an instance of ObjectiveC.Protocol class: classDecl->getName() == F.getASTContext().Id_Protocol
objc_protocol must produce an instance of ObjectiveC.Protocol class: classDecl->getModuleContext()->getName() == F.getASTContext().Id_ObjectiveC
object instruction is only allowed in a static initializer: false
Result of tuple
TupleType
Tuple field count mismatch!: TI->getElements().size() == ResTy->getNumElements()
Tuple element arguments do not match tuple type!
Operand of tuple_extract
result of tuple_extract must be object: EI->getType().isObject()
invalid field index for tuple_extract instruction: EI->getFieldIndex() < operandTy->getNumElements()
invalid forwarding ownership kind on tuple_extract instruction: EI->getForwardingOwnershipKind() == OwnershipKind::None || EI->getForwardingOwnershipKind() == OwnershipKind::Guaranteed
type of tuple_extract does not match type of element
must derive element_addr from address: operandTy.isAddress()
result of tuple_element_addr must be address: EI->getType().isAddress()
must derive tuple_element_addr from tuple: operandTy.is<TupleType>()
invalid field index for element_addr instruction: EI->getFieldIndex() < fields.size()
type of tuple_element_addr does not match type of element
StructInst must return a struct: structDecl
Cannot build a struct with unreferenceable storage from elements using StructInst: !structDecl->hasUnreferenceableStorage()
cannot access storage of resilient struct: !structDecl->isResilient(F.getModule().getSwiftModule(), F.getResilienceExpansion())
StructInst must produce an object: SI->getType().isObject()
number of struct operands does not match number of stored member variables of struct: opi != opEnd
struct operand type does not match field type
cannot struct_extract from address: operandTy.isObject()
result of struct_extract cannot be address: EI->getType().isObject()
must struct_extract from struct: sd
cannot access storage of resilient struct: !sd->isResilient(F.getModule().getSwiftModule(), F.getResilienceExpansion())
cannot get address of static property with struct_element_addr: !EI->getField()->isStatic()
cannot load computed property with struct_extract: EI->getField()->hasStorage()
struct_extract field is not a member of the struct: EI->getField()->getDeclContext() == sd
result of struct_extract does not match type of field
must derive struct_element_addr from address: operandTy.isAddress()
struct_element_addr operand must be struct address: sd
result of struct_element_addr must be address: EI->getType().isAddress()
cannot get address of computed property with struct_element_addr: EI->getField()->hasStorage()
struct_element_addr field is not a member of the struct: EI->getField()->getDeclContext() == sd
result of struct_element_addr does not match type of field
Operand of ref_element_addr
result of ref_element_addr must be lvalue: EI->getType().isAddress()
cannot get address of computed property with ref_element_addr: EI->getField()->hasStorage()
ref_element_addr operand must be a class instance: cd
cannot access storage of resilient class: !cd->isResilient(F.getModule().getSwiftModule(), F.getResilienceExpansion())
ref_element_addr field must be a member of the class: EI->getField()->getDeclContext() == cd
result of ref_element_addr does not match type of field
Operand of ref_tail_addr
result of ref_tail_addr must be lvalue: RTAI->getType().isAddress()
ref_tail_addr operand must be a class instance: cd
EnumInst must return an enum: ud
EnumInst case must be a case of the result enum type: UI->getElement()->getParentEnum() == ud
EnumInst must produce an object: UI->getType().isObject()
EnumInst must take an argument iff the element does: UI->hasOperand() == UI->getElement()->hasAssociatedValues()
EnumInst operand must be an object: UI->getOperand()->getType().isObject()
EnumInst operand type does not match type of case
UncheckedEnumData must take an enum operand: ud
UncheckedEnumData case must be a case of the enum operand type: UI->getElement()->getParentEnum() == ud
UncheckedEnumData case must have a data type: UI->getElement()->getArgumentInterfaceType()
UncheckedEnumData must take an address operand: UI->getOperand()->getType().isObject()
UncheckedEnumData must produce an address: UI->getType().isObject()
UncheckedEnumData result does not match type of enum case
InitEnumDataAddrInst must take an enum operand: ud
InitEnumDataAddrInst case must be a case of the enum operand type: UI->getElement()->getParentEnum() == ud
InitEnumDataAddrInst case must have a data type: UI->getElement()->hasAssociatedValues()
InitEnumDataAddrInst must take an address operand: UI->getOperand()->getType().isAddress()
InitEnumDataAddrInst must produce an address: UI->getType().isAddress()
InitEnumDataAddrInst result does not match type of enum case
UncheckedTakeEnumDataAddrInst must take an enum operand: ud
UncheckedTakeEnumDataAddrInst case must be a case of the enum operand type: UI->getElement()->getParentEnum() == ud
UncheckedTakeEnumDataAddrInst case must have a data type: UI->getElement()->getArgumentInterfaceType()
UncheckedTakeEnumDataAddrInst must take an address operand: UI->getOperand()->getType().isAddress()
UncheckedTakeEnumDataAddrInst must produce an address: UI->getType().isAddress()
UncheckedTakeEnumDataAddrInst result does not match type of enum case
select_enum operand must be an object: SEI->getEnumOperand()->getType().isObject()
select_enum operand must be an enum: eDecl
select_enum dispatches on enum element that is not part of its type: elt->getDeclContext() == eDecl
select_enum dispatches on same enum element more than once: unswitchedElts.count(elt)
select_enum case operand must match type of instruction
nonexhaustive select_enum must have a default destination: (isExhaustive && unswitchedElts.empty()) || I->hasDefault()
select_enum default operand must match type of instruction
select_enum_addr operand must be an address: SEI->getEnumOperand()->getType().isAddress()
select_value operand must be an object: SVI->getOperand()->getType().isObject()
select_value case operands should refer to integer literals: il
select_value dispatches on same case value more than once: !seenCaseValues.count(elt)
select_value case value must match type of operand
select_value case result must match type of instruction
select_value should always have a default: I->hasDefault()
select_value default operand must match type of instruction
init_existential_addr must be applied to an address: exType.isAddress()
init_existential_addr must be used with an opaque existential type: exType.canUseExistentialRepresentation( ExistentialRepresentation::Opaque, AEI->getFormalConcreteType())
init_existential_addr result type must be the lowered concrete type at the right abstraction level
init_existential_addr payload must be a lowering of the formal concrete type: isLoweringOf(AEI->getLoweredConcreteType(), AEI->getFormalConcreteType())
init_existential_value must not be used on addresses: !concreteType.isAddress()
init_existential_value result must not be an address: !IEI->getType().isAddress()
init_existential_value operand must be lowered to the right abstraction level for the existential
init_existential_value operand must be a lowering of the formal concrete type: isLoweringOf(IEI->getOperand()->getType(), IEI->getFormalConcreteType())
open_existential_addr must be applied to address: operandType.isAddress()
open_existential_addr must be applied to opaque existential: operandType.canUseExistentialRepresentation( ExistentialRepresentation::Opaque)
open_existential_addr result must be an address: OEI->getType().isAddress()
open_existential_addr result must be an opened existential archetype: archetype
Archetype opened by open_existential_addr should be registered in SILFunction: OEI->getModule().getOpenedArchetypeInst(archetype, OEI->getFunction()) == OEI
open_existential_addr uses that consumes or mutates but is not opened for mutation: allowedAccessKind == OpenedExistentialAccess::Mutable || !ImmutableAddressUseVerifier().isMutatingOrConsuming(OEI)
init_existential_ref operand must be a class instance: concreteType.getASTType()->isBridgeableObjectType()
init_existential_ref must be used with a class existential type: IEI->getType().canUseExistentialRepresentation( ExistentialRepresentation::Class, IEI->getFormalConcreteType())
init_existential_ref result must not be an address: IEI->getType().isObject()
init_existential_ref operand must be lowered to the right abstraction level for the existential
init_existential_ref operand must be a lowering of the formal concrete type: isLoweringOf(IEI->getOperand()->getType(), IEI->getFormalConcreteType())
open_existential_ref operand must not be address: operandType.isObject()
open_existential_ref operand must be class existential: operandType.canUseExistentialRepresentation( ExistentialRepresentation::Class)
open_existential_ref result must be an address: OEI->getType().isObject()
open_existential_ref result must be an opened existential archetype: archetype
Archetype opened by open_existential_ref should be registered in SILFunction: OEI->getModule().getOpenedArchetypeInst(archetype, OEI->getFunction()) == OEI
init_existential_metatype operand must not be an address: operandType.isObject()
init_existential_metatype operand must be a metatype: operandType.is<MetatypeType>()
init_existential_metatype operand must have a representation: operandType.castTo<MetatypeType>()->hasRepresentation()
init_existential_metatype result must be an existential metatype: resultType.is<ExistentialMetatypeType>()
init_existential_metatype result must not be an address: resultType.isObject()
init_existential_metatype result must have a representation: MetaTy->hasRepresentation()
init_existential_metatype result must match representation of operand: MetaTy->getRepresentation() == operandType.castTo<MetatypeType>()->getRepresentation()
open_existential_metatype operand must not be address: operandType.isObject()
open_existential_metatype operand must be existential metatype: operandType.is<ExistentialMetatypeType>()
open_existential_metatype operand must have a representation: operandType.castTo<ExistentialMetatypeType>()->hasRepresentation()
open_existential_metatype result must not be address: resultType.isObject()
open_existential_metatype result must be metatype: resultType.is<MetatypeType>()
open_existential_metatype result must have a representation: resultType.castTo<MetatypeType>()->hasRepresentation()
open_existential_metatype result must match representation of operand: operandType.castTo<ExistentialMetatypeType>()->getRepresentation() == resultType.castTo<MetatypeType>()->getRepresentation()
metatype depth mismatch in open_existential_metatype result: isa<MetatypeType>(resultInstTy)
ill-formed existential metatype in open_existential_metatype operand: operandInstTy.isExistentialType()
open_existential_metatype result must be an opened existential metatype: archetype
Archetype opened by open_existential_metatype should be registered in SILFunction: I->getModule().getOpenedArchetypeInst(archetype, I->getFunction()) == I
open_existential_box operand must not be address: operandType.isObject()
open_existential_box operand must be boxed existential: operandType.canUseExistentialRepresentation( ExistentialRepresentation::Boxed)
open_existential_box result must be an address: OEI->getType().isAddress()
open_existential_box result must be an opened existential archetype: archetype
Archetype opened by open_existential_box should be registered in SILFunction: OEI->getModule().getOpenedArchetypeInst(archetype, OEI->getFunction()) == OEI
open_existential_value must not be applied to address: !operandType.isAddress()
open_existential_value must be applied to opaque existential: operandType.canUseExistentialRepresentation( ExistentialRepresentation::Opaque)
open_existential_value result must not be an address: !OEI->getType().isAddress()
open_existential_value result must be an opened existential archetype: archetype
Archetype opened by open_existential should be registered in SILFunction: OEI->getModule().getOpenedArchetypeInst(archetype, OEI->getFunction()) == OEI
open_existential_box_value result must not be an address: !OEI->getType().isAddress()
open_existential_box_value result not an opened existential archetype: archetype
Archetype opened by open_existential_box_value should be registered in SILFunction: OEI->getModule().getOpenedArchetypeInst(archetype, OEI->getFunction()) == OEI
operand must be an address: PBSI->getOperand()->getType().isAddress()
operand must be a @block_storage type: storageTy
result must be an address: PBSI->getType().isAddress()
result must be the capture type of the @block_storage type
block storage operand must be an address: storage->getType().isAddress()
block storage operand must be a @block_storage type: storageTy
block storage operand with noescape capture must have projection from block: storageProjection
block storage operand with noescape capture must have store to projection: storeInst
invoke function operand must be a value: IBSHI->getInvokeFunction()->getType().isObject()
invoke function operand must be a function: invokeTy
invoke function operand must be a c function: invokeTy->getRepresentation() == SILFunctionType::Representation::CFunctionPointer
invoke function must take at least one parameter: invokeTy->getParameters().size() >= 1
invoke function must not take reified generic parameters: !invokeTy->getInvocationGenericSignature() || invokeTy->getExtInfo().isPseudogeneric()
invoke function must take block storage as @inout_aliasable parameter: storageParam.getConvention() == ParameterConvention::Indirect_InoutAliasable
invoke function must take block storage type as first parameter
result must be a value: IBSHI->getType().isObject()
result must be a function: blockTy
result must be a cdecl block function: blockTy->getRepresentation() == SILFunctionType::Representation::Block
result must have same results as invoke function: blockTy->getResults() == invokeTy->getResults()
result must match all parameters of invoke function but the first: blockTy->getParameters().size() + 1 == invokeTy->getParameters().size()
result must match all parameters of invoke function but the first: blockParams[i] == invokeBlockParams[i]
The original function must have a function type: origTy
The original function must not be differentiable: !origTy->isDifferentiable()
The transpose function must have a function type: transposeType
The transpose function must not be differentiable: !transposeType->isDifferentiable()
Transpose type does not match expected transpose type
The function operand must have a function type: fnTy
The function operand must be a '@differentiable(reverse)' function: fnTy->getDifferentiabilityKind() == DifferentiabilityKind::Reverse || fnTy->getDifferentiabilityKind() == DifferentiabilityKind::Normal || fnTy->getDifferentiabilityKind() == DifferentiabilityKind::Forward
The function operand must be a '@differentiable(_linear)' function: fnTy->getDifferentiabilityKind() == DifferentiabilityKind::Linear
Type of witness instruction does not match actual type of witnessed function
Instruction type must be a continuation type: resultTy.is<BuiltinRawUnsafeContinuationType>()
Operand type must match continuation resume type
extract_executor instruction should have been lowered away: false
keypath result must be an object type: kpTy.isObject()
keypath result must be a generic type: kpBGT
keypath result must be a key path type: kpBGT->getDecl() == C.getKeyPathDecl() || kpBGT->getDecl() == C.getWritableKeyPathDecl() || kpBGT->getDecl() == C.getReferenceWritableKeyPathDecl()
keypath root type should match root type of keypath pattern
keypath value type should match value type of keypath pattern
final component should match leaf value type of key path type
return value type does not match return type of function
throw in function that doesn't have an error result: fnConv.funcTy->hasErrorResult()
throw operand type does not match error result type of function
yield in non-coroutine function: fnConv.funcTy->isCoroutine()
wrong number of yielded values for function: yieldedValues.size() == yieldInfos.size()
yielded value does not match yield type of coroutine
resume dest of 'yield' must be uniquely used: YI->getResumeBB()->getSinglePredecessorBlock()
unwind dest of 'yield' must be uniquely used: YI->getUnwindBB()->getSinglePredecessorBlock()
unwind in non-coroutine function: F.getLoweredFunctionType()->isCoroutine()
normal destination of try_apply must take one argument: normalBB->args_size() == 1
normal destination of try_apply must take argument of normal result type
try_apply must call function with error result: calleeConv.funcTy->hasErrorResult()
error destination of try_apply must take one argument: errorBB->args_size() == 1
error destination of try_apply must take argument of error result type
branch has wrong number of arguments for dest bb: BI->getArgs().size() == BI->getDestBB()->args_size()
branch argument types do not match arguments for dest bb: std::equal(BI->getArgs().begin(), BI->getArgs().end(), BI->getDestBB()->args_begin(), [&](SILValue branchArg, SILArgument *bbArg) { return verifyBranchArgs(branchArg, bbArg); })
branch argument cannot be a witness_method or an objc method_inst: !(isa<MethodInst>(branchArg) && cast<MethodInst>(branchArg)->getMember().isForeign)
branch argument cannot be a objective-c method: !(branchArg->getType().is<SILFunctionType>() && branchArg->getType() .castTo<SILFunctionType>() ->getExtInfo() .getRepresentation() == SILFunctionTypeRepresentation::ObjCMethod)
condition of conditional branch must have Int1 type
true branch has wrong number of arguments for dest bb: cbi->getTrueArgs().size() == cbi->getTrueBB()->args_size()
identical destinations: cbi->getTrueBB() != cbi->getFalseBB()
true branch argument types do not match arguments for dest bb: std::equal(cbi->getTrueArgs().begin(), cbi->getTrueArgs().end(), cbi->getTrueBB()->args_begin(), [&](SILValue branchArg, SILArgument *bbArg) { return verifyBranchArgs(branchArg, bbArg); })
false branch has wrong number of arguments for dest bb: cbi->getFalseArgs().size() == cbi->getFalseBB()->args_size()
false branch argument types do not match arguments for dest bb: std::equal(cbi->getFalseArgs().begin(), cbi->getFalseArgs().end(), cbi->getFalseBB()->args_begin(), [&](SILValue branchArg, SILArgument *bbArg) { return verifyBranchArgs(branchArg, bbArg); })
cond_br must not have a non-trivial value in ossa.: llvm::all_of(cbi->getOperandValues(), [&](SILValue v) -> bool { return v->getType().isTrivial(*cbi->getFunction()); })
switch_value operand should be either of an integer or function type: Ty.is<BuiltinIntegerType>() || Ty.is<SILFunctionType>()
switch_value case value should have the same type as its operand
switch_value case destination cannot take arguments: dest->args_empty()
switch_value default destination cannot take arguments: SVI->getDefaultBB()->args_empty()
switch_enum operand must be an object: SOI->getOperand()->getType().isObject()
switch_enum operand is not an enum: uDecl
switch_enum dispatches on enum element that is not part of its type: elt->getDeclContext() == uDecl
switch_enum dispatches on same enum element more than once: unswitchedElts.count(elt)
switch_enum destination for case w/ args must take 1 argument: dest->getArguments().size() == 1
Switch enum non-trivial destination arg must have ownership kind that is compatible with the switch_enum's operand: dest->getArgument(0)->getOwnershipKind().isCompatibleWith( SOI->getForwardingOwnershipKind())
switch_enum destination for case w/ args must take 0 or 1 arguments: dest->getArguments().empty() || dest->getArguments().size() == 1
switch_enum destination bbarg must match case arg type: eltArgTy == bbArgTy
switch_enum destination bbarg type must not be an address: !dest->getArguments()[0]->getType().isAddress()
switch_enum destination for no-argument case must take no arguments: dest->getArguments().empty()
nonexhaustive switch_enum must have a default destination: (isExhaustive && unswitchedElts.empty()) || SOI->hasDefault()
Switch enum default block should have one argument: SOI->getDefaultBB()->getNumArguments() == 1
Switch enum default block should have one argument that is the same as the input type
Switch enum default block arg must have same ownership kind as operand: defaultKind.isCompatibleWith(SOI->getOperand().getOwnershipKind())
switch_enum default destination must take no arguments: SOI->getDefaultBB()->args_empty()
switch_enum_addr operand must be an address: SOI->getOperand()->getType().isAddress()
switch_enum_addr operand must be an enum: uDecl
switch_enum_addr dispatches on enum element that is not part of its type: elt->getDeclContext() == uDecl
switch_enum_addr dispatches on same enum element more than once: unswitchedElts.count(elt)
switch_enum_addr destination must take no BB args: dest->getArguments().empty()
nonexhaustive switch_enum_addr must have a default destination: (isExhaustive && unswitchedElts.empty()) || SOI->hasDefault()
switch_enum_addr default destination must take no arguments: SOI->getDefaultBB()->args_empty()
method must be @objc: DMBI->getMember().getDecl()->isObjC()
operand must have metatype type: operandType.is<MetatypeType>()
operand must have metatype of class or class-bound type: operandType.castTo<MetatypeType>() ->getInstanceType()->mayHaveSuperclass()
true bb for dynamic_method_br must take an argument: DMBI->getHasMethodBB()->args_size() == 1
bb argument for dynamic_method_br must be of the method's type: getDynamicMethodType(operandType, DMBI->getMember()) .getASTType() ->isBindableTo(bbArgTy.getASTType())
can only await the result of a get_async_continuation instruction: cont
must have an error successor if and only if the continuation is throwing: (bool)AACI->getErrorBB() == cont->throws()
error successor must take one argument: AACI->getErrorBB()->getNumArguments() == 1
error successor argument must have Error type
error successor argument must be owned: arg->getOwnershipKind() == OwnershipKind::Owned
resume successor must take no arguments for get_async_continuation_addr: AACI->getResumeBB()->getNumArguments() == 0
resume successor must take one argument for get_async_continuation: AACI->getResumeBB()->getNumArguments() == 1
resume successor must take an argument of the continuation resume type
resume successor argument must be owned: arg->getOwnershipKind() == OwnershipKind::Owned
success dest of checked_cast_br must take one argument: CBI->getSuccessBB()->args_size() == 1
success dest block argument of checked_cast_br must match type of cast
failure dest of checked_cast_br must take one argument in ownership qualified sil: CBI->getFailureBB()->args_size() == 1
failure dest block argument must match type of original type in ownership qualified sil
succ dest block argument must have ownership compatible with the checked_cast_br operand: succOwnershipKind.isCompatibleWith( CBI->getOperand().getOwnershipKind())
failure dest block argument must have ownership compatible with the checked_cast_br operand: failOwnershipKind.isCompatibleWith( CBI->getOperand().getOwnershipKind())
Failure dest of checked_cast_br must not take any argument in non-ownership qualified sil: CBI->getFailureBB()->args_empty()
checked_cast_addr_br src must be an address: CCABI->getSrc()->getType().isAddress()
checked_cast_addr_br dest must be an address: CCABI->getDest()->getType().isAddress()
success dest block of checked_cast_addr_br must not take an argument: CCABI->getSuccessBB()->args_size() == 0
failure dest block of checked_cast_addr_br must not take an argument: CCABI->getFailureBB()->args_size() == 0
success dest of checked_cast_value_br must take one argument: CBI->getSuccessBB()->args_size() == 1
success dest block argument of checked_cast_value_br must match type of cast
failure dest of checked_cast_value_br in unqualified ownership sil must take no arguments: F.hasOwnership() || CBI->getFailureBB()->args_empty()
Operand of dealloc_stack must be an alloc_stack or partial_apply [stack]: isa<SILUndef>(DI->getOperand()) || isa<AllocStackInst>(DI->getOperand()) || (isa<PartialApplyInst>(DI->getOperand()) && cast<PartialApplyInst>(DI->getOperand())->isOnStack())
Operand of dealloc_ref must be object: DI->getOperand()->getType().isObject()
Operand of dealloc_ref must be of class type: cd
cannot directly deallocate resilient class: !cd->isResilient(F.getModule().getSwiftModule(), F.getResilienceExpansion())
First operand of dealloc_partial_ref must be object: DPRI->getInstance()->getType().isObject()
First operand of dealloc_partial_ref must be of class type: class1
Second operand of dealloc_partial_ref must be a metatype: DPRI->getMetatype()->getType().is<MetatypeType>()
Second operand of dealloc_partial_ref must be a class metatype: class2
First operand not superclass of second instance type: class2->isSuperclassOf(class1)
operand must be a @box type: boxTy
operand must be an object: DI->getOperand()->getType().isObject()
dealloc_existential_box must be applied to a value: exType.isObject()
dealloc_existential_box must be applied to a boxed existential: exType.canUseExistentialRepresentation( ExistentialRepresentation::Boxed)
Operand of strong_retain
strong_retain is only in functions with unqualified ownership: !F.hasOwnership()
Operand of release
strong_release is only in functions with unqualified ownership: !F.hasOwnership()
Operand of strong_retain_unowned
strong_retain_unowned is only in functions with unqualified ownership: !F.hasOwnership()
'unowned' type must be loadable: ty->isLoadable(ResilienceExpansion::Maximal)
Operand of unowned_retain
unowned_retain is only in functions with unqualified ownership: !F.hasOwnership()
Operand of unowned_release
unowned_release is only in functions with unqualified ownership: !F.hasOwnership()
retain_value is only in functions with unqualified ownership: !F.hasOwnership()
Source value should be an address value: I->getOperand()->getType().isAddress()
release_value is only in functions with unqualified ownership: !F.hasOwnership()
Source value must be a reference type: I->getOperand()->getType().hasRetainablePointerRepresentation()
Source value must be a reference type or optional thereof: I->getOperand()->getType().hasRetainablePointerRepresentation()
BI must have a bound type: BI->getBoundType()
bind_memory base be a RawPointer: BI->getBase()->getType().is<BuiltinRawPointerType>()
bind_memory index must be a Word
hop_to_executor instruction must take a Builtin.Executor in lowered SIL
destroy_value is only valid in functions with qualified ownership: !fnConv.useLoweredAddresses() || F.hasOwnership()
operand of end_access must be a begin_access: BAI != nullptr
aborting access must apply to init or deinit: BAI->getAccessKind() == SILAccessKind::Init || BAI->getAccessKind() == SILAccessKind::Deinit
unpaired access can never use unknown enforcement: BUAI->getEnforcement() != SILAccessEnforcement::Unknown
address operand must have address type: BUAI->getSource()->getType().isAddress()
scratch buffer operand
BuiltinUnsafeValueBufferType
init/deinit accesses cannot use non-static enforcement: BUAI->getEnforcement() == SILAccessEnforcement::Static
Unknown formal access pattern: storage
 must be an address
unpaired access can never use unknown enforcement: I->getEnforcement() != SILAccessEnforcement::Unknown
Qualified store in function with unqualified ownership?!: !F.hasOwnership()
store [init] or store [assign] can only be applied to non-trivial types: !SI->getSrc()->getType().isTrivial(*SI->getFunction())
A store with trivial ownership must store a type with trivial ownership: Src->getType().isTrivial(*SI->getFunction()) || Src.getOwnershipKind() == OwnershipKind::None
assign instruction can only exist in raw SIL: AI->getModule().getStage() == SILStage::Raw
Can't assign from an address source: Src->getType().isObject()
Must store to an address dest: Dest->getType().isAddress()
wrong number of init function results: initConv.getNumDirectSILResults() == 1
wrong init function result type
wrong number of init function results: initConv.getNumDirectSILResults() == 0
wrong indirect init function result type
wrong number of indirect init function results: false
set function has indirect results: setterConv.getNumIndirectSILResults() == 0
initializer or setter has too many arguments: argIdx == conv.getNumSILArguments()
initializer or setter has too few arguments: argIdx < conv.getNumSILArguments()
wrong argument type of initializer or setter
mark_function_escape instruction can only exist in raw SIL: MFE->getModule().getStage() == SILStage::Raw
MFE must refer to variable addrs: Elt->getType().isAddress()
Can't store from an address source: SrcTy.isObject()
store_weak address operand must be a weak address: PointerType.isAddress() && PointerRVType->is<WeakStorageType>()
store_unowned address operand must be a unowned address: PointerType.isAddress() && PointerRVType->is<UnownedStorageType>()
Src value should be lvalue: SI->getSrc()->getType().isAddress()
Dest address should be lvalue: SI->getDest()->getType().isAddress()
cannot directly copy type with inaccessible ABI: F.isTypeABIAccessible(SI->getDest()->getType())
Operand of destroy_addr must be address: DI->getOperand()->getType().isAddress()
cannot directly destroy type with inaccessible ABI: F.isTypeABIAccessible(DI->getOperand()->getType())
end_lifetime is only valid in functions with qualified ownership: !fnConv.useLoweredAddresses() || F.hasOwnership()
InjectEnumAddrInst must take an enum operand: IUAI->getOperand()->getType().is<EnumType>() || IUAI->getOperand()->getType().is<BoundGenericEnumType>()
InjectEnumAddrInst case must be a case of the enum operand type: IUAI->getElement()->getParentEnum() == IUAI->getOperand()->getType().getEnumOrBoundGenericEnum()
InjectEnumAddrInst must take an address operand: IUAI->getOperand()->getType().isAddress()
deinit_existential_addr must be applied to an address: exType.isAddress()
deinit_existential_addr must be applied to an opaque existential: exType.canUseExistentialRepresentation( ExistentialRepresentation::Opaque)
deinit_existential_value must not be applied to an address: !exType.isAddress()
deinit_existential_value must be applied to an opaque existential: exType.canUseExistentialRepresentation( ExistentialRepresentation::Opaque)
unchecked_ref_cast_addr operand must be an address: srcTy.isAddress()
unchecked_ref_cast_addr result must be an address: destTy.isAddress()
alloc_global inside fragile function cannot reference a private or hidden symbol: RefG->isSerialized() || hasPublicVisibility(RefG->getLinkage())
operand of end_apply must be a begin_apply: getAsResultOf<BeginApplyInst>(AI->getOperand())->isBeginApplyToken()
operand of abort_apply must be a begin_apply: getAsResultOf<BeginApplyInst>(AI->getOperand())->isBeginApplyToken()
cond_fail operand must be a Builtin.Int1
length mismatch in callee yields vs. begin_apply results: yields.size() == yieldResults.size()
callee yield type does not match begin_apply result type
begin_apply instruction cannot call function with error result: !calleeConv.funcTy->hasErrorResult()
must call yield_once coroutine with begin_apply: calleeConv.funcTy->getCoroutineKind() == SILCoroutineKind::YieldOnce
destructure result with ownership that is incompatible with parent forwarding ownership kind: parentKind.isCompatibleWith(result.getOwnershipKind())
destructure with none ownership kind operand and non-none ownership kind result?!: parentKind != OwnershipKind::None || result.getOwnershipKind() == OwnershipKind::None
Basic block contains a non-contiguous lexical scope at -Onone: DS == LastSeenScope
critical edges not allowed in OSSA
only cond_br critical edges allowed
Key path in serialized function cannot reference non-public property
property decl should be a member of the base with the same type as the component
property must be stored
cannot access storage of resilient property
component type should match the maximal abstraction of the formal type
property descriptor should not have index information
property descriptor should not refer to another external decl
component for subscript should have indices
Key path in serialized function should not reference less visible getters
getter should be a thin function
getter should have one parameter
getter base parameter should have normal arg convention
getter base parameter should match base of component
indices pointer should be trivial
indices pointer should be an UnsafeRawPointer
getter should have one result
getter result should be @out
getter result should match the maximal abstraction of the formal component type
Key path in serialized function should not reference less visible setters
setter should be a thin function
setter should have two parameters
setter value parameter should havee normal arg convention
setter base parameter should be normal arg convention or @inout
setter value should match the maximal abstraction of the formal component type
setter should have no results
operand must match type required by pattern
pattern index formal type doesn't match lowered type
chaining component should unwrap optional
key path with chaining component should have optional result
forcing component should unwrap optional
wrapping component should wrap optional
invalid baseTy, should have been a TupleType
invalid element index, greater than # of tuple elements
tuple element type should match the type of the component
key path pattern with indexes must have equals operator
must have two arguments
must have one result
result should be unowned
result should be Bool
key path pattern with indexes must have hash operator
result should be Int
component without indexes must not have equals/hash
Parameter: 
component kind
inherited
serialized
parent
hidden
shared
thunk
noinline
always_inline
readonly
readwrite
thin
__shared
__owned
owned
guaranteed
integer
utf8
objc_selector
bytes
even number of hex bytes
hex bytes should contain 0-9, a-f, A-F only
builtin name
)' or ',
nonatomic
poison
native
unchecked_ownership_conversion value ownership kind conversion specification
source
withoutEscaping
root
strict
cast consumption kind
var, rootself, crossmodulerootself, derivedself, derivedselfonly, delegatingself, or delegatingselfallocated
destination
unsafe
read
modify
operand
stack
resume
immutable
case or default
reference to a value
invoke
results
extractee kind
differentiability witness function kind
scope
nothrow
be a function
to have the same number of arg names as arg types
to not be a coroutine
to be a yield_once coroutine
opened existential access kind
forwarding
trivial
initializer
addressor
mutableAddressor
index list
# or @
optional_wrap
optional_chain
optional_force
tuple_element
UnqualifiedLookupRequest
method, associated_type, associated_type_protocol, base_protocol, no_default
method
differentiability kind
AbstractGenericSignatureRequest
InContext
[lvalue] 
[cleanup] 
<null>
IndirectOpenedSelfCleanup
_convertBoolToDarwinBoolean
_convertDarwinBooleanToBool
_convertBoolToObjCBool
_convertObjCBoolToBool
_convertNSErrorToError
_convertErrorToNSError
_convertBoolToWindowsBool
_convertWindowsBoolToBool
_arrayForceCast
_arrayConditionalCast
_dictionaryUpCast
_dictionaryDownCast
_dictionaryDownCastConditional
_setUpCast
_setDownCast
_setDownCastConditional
_convertToAnyHashable
_getErrorEmbeddedNSError
_unconditionallyBridgeFromObjectiveC
_runChildTask
_taskFutureGet
_taskFutureGetThrowing
_resumeUnsafeContinuation
_resumeUnsafeThrowingContinuation
_resumeUnsafeThrowingContinuationWithError
_runTaskForBridgedAsyncMethod
_runAsyncHandler
_checkExpectedExecutor
swift_readAtKeyPath
swift_modifyAtWritableKeyPath
swift_modifyAtReferenceWritableKeyPath
silgen emitForeignToNativeThunk
silgen emitNativeToForeignThunk
silgen closureexpr
silgen emitFunction
silgen emitConstructor
silgen constructor initializer
silgen emitDefaultArgGenerator 
silgen emitStoredPropertyInitialization
silgen emitPropertyWrapperBackingInitializer
silgen emitPropertyWrapperInitFromProjectedValue
silgen emitGlobalAccessor
silgen enum constructor
silgen emitDestroyingDestructor
silgen emitDestructor -dealloc
silgen emitDeallocatingDestructor
silgen emitDestructor ivar initializer
silgen emitDestructor ivar destroyer
emitting property descriptor for
unable to set up the ObjC bridge!
SILgen-decl
SILgen-tydecl
ParseSILModuleRequest
ASTLoweringRequest
argument to builtin should be a literal tuple
castToNativeObject source must be a class
castFromNativeObject dest must be an object type
castToBridgeObject source must be a class
argument to builtin should be a builtin integer
castReferenceFromBridgeObject dest must be an object type
unknown runtime failure
Builtin.convertStrongToUnownedUnsafe passed non-physical, non-pure lvalue as 2nd arg
Invalid usage of Builtin.convertStrongToUnownedUnsafe. lhsType must be T and rhsType must be inout unsafe(unowned) T
lhsType: 
rhsType: 
standard fatal error msg
Builtin.convertUnownedUnsafeToGuaranteed passed non-physical, non-pure lvalue as 2nd arg
$return_value
$metatype
$implicit_value
SubstToOrig
OrigToSubst
AnyErasure
BridgeToObjC
ForceAndBridgeToObjC
BridgeFromObjC
BridgeResultFromObjC
(orig: 
, subst: 
, loweredResult: 
(from: 
, to: 
, explicit: 
_Pointer
Found an ErrorExpr but didn't emit an error?
__ImageBase
__dso_handle
force unwrapped a nil value
_Int
non-escaping closure has escaped
nontrivial thin function reference
AutoreleasingWritebackComponent()
SILGen-function
UIKit
NSStringFromClass
$input_value
integerLiteral
_builtinIntegerLiteral
EndAccessPseudoComponent
ValueComponent(
rvalue, 
unenforced
requires actor-hop because 
OrigToSubstComponent(
SubstToOrigComponent(
OwnershipComponent(...)
GetterSetterComponent
 subscript_index:
RefElementComponent(
StructElementComponent(
AddressorComponent
EndApplyPseudoComponent
CoroutineAccessorComponent
MaterializeToTemporaryComponent
LogicalKeyPathApplicationComponent
PhysicalKeyPathApplicationComponent
TupleElementComponent(
ForceOptionalObjectComponent(
OpenOpaqueExistentialComponent(
OpenNonOpaqueExistentialComponent(
, ...)
<expr>
var 
.some
int_trap
emitting withoutAcutallyEscaping thunk in
emitting reabstraction thunk in
TranslateIndirect(
reabstraction of returns_inner_pointer function
$error
Lowering AST to SIL for module 
Lowering AST to SIL for file 
willThrow
delayed application of builtin
_jvp
_vjp
generating vtable thunk
AD__
generating protocol witness thunk
generating SIL witness table
verify-arc-loop-summary
Verify if loop summary is correct in ARCLoopsOpts
arc-sequence-opts
NumRefCountOpsRemoved
Total number of increments removed
enable-loop-arc
objc_autoreleasePoolPush
objc_autoreleasePoolPop
  unidentified accesses: 
NoAlias
MayAlias
PartialAlias
MustAlias
array.props.isNativeTypeChecked
array.check_subscript
array.reserve_capacity_for_append
array.withUnsafeMutableBufferPointer
Incomplete callee list? : 
, not all callees visible
Known callees:
BasicCalleeAnalysis
computeMethodCallees
<no cache>
callees for 
Failed to open path "
" for writing.!
calleeName
hasCaller
minPartialAppliedArgs
hasOnlyCompleteDirectCallerSets
hasAllCallers
partialAppliers
fullAppliers
DeadEndBlocksAnalysis Error! Found dead end block that is no longer a dead end block?!
DeadEndBlocksAnalysis Error! Found reachable block that is no longer reachable?!
array.uninitialized_intrinsic
escapes-internal-verify
Enable internal verification of escape analysis
array.uninitialized
merging escape summary
merging escape graph
...into
array.
(region id:
 kind:
bb  
loop
 ucfh:
true 
 ucft:
 parent:
    (preds
        
    (succs
    (subregs
    (non-local-succs
        (parentindex:
    (exiting-subregs
    (backedge-regs
enable-sil-passmanager-verifier-analysis
Enable verification of the passmanagers function notification infrastructure
enable-rc-identity-arg-strip
Should RC identity try to strip off arguments
array.uninitialized_intrinsic
TangentStoredPropertyRequest
generating JVP and differential for
Zero[
Aggregate[
Concrete[
withoutDerivative(at: 
Differential value type is not ABI-compatible with the returned differential type
differential_
pullback_
successor
predecessor
array.finalize_intrinsic
generating pullback for
generating VJP for
Pullback value type is not ABI-compatible with the returned pullback type
sil-function-signature-opt
NumFunctionSignaturesOptimized
Total func sig optimized
NumDeadArgsEliminated
Total dead args eliminated
NumOwnedConvertedToGuaranteed
Total owned args -> guaranteed args
NumOwnedConvertedToNotOwnedResult
Total owned result -> not owned result
NumSROAArguments
Total SROA arguments optimized
sil-fso-enable-generics
Support function signature optimization of generic functions
sil-fso-optimize-if-not-called
Optimize even if a function isn't called. For testing only!
sil-fso-disable-dead-argument
Do not perform dead argument elimination during FSO. Intended only for testing purposes
sil-fso-disable-arg-explosion
Do not perform argument explosion during FSO. Intended only for testing purposes
sil-fso-disable-owned-to-guaranteed
Do not perform owned to guaranteed during FSO. Intended only for testing purposes.
optimize.sil.specialize.owned2guarantee.never
enable-existential-specializer
sil-existential-specializer
NumFunctionsWithExistentialArgsSpecialized
Number of functions with existential args specialized
closure-specialization
NumClosureSpecialized
Number of functions with closures specialized
NumPropagatedClosuresEliminated
Number of closures propagated and then eliminated
NumPropagatedClosuresNotEliminated
Number of closures propagated but not eliminated
closure-specialize-eliminate-dead-closures
Do not eliminate dead closures after closure specialization. This is meant ot be used when testing.
cmo-function-size-limit
sil-cross-module-serialize-all
Serialize everything when performing cross module optimization in order to investigate performance differences caused by different @inlinable, @usableFromInline choices.
 === 
sil-abcopts-report
enable-abcopts
enable-abc-hoisting
loop induction variable overflowed
array.props
array.make_mutable
looprotate-size-limit
looprotate-single-block-loop
sil-optimized-access-markers
Enable memory access markers during optimization passes.
FunctionBodyDeserializationNotificationHandler
optimize-opaque-address-lowering
Simultaneous use of multiple call results.
Didn't find capture causing use of partial apply: 
Original Func: 
Partial Applied Func: 
standard compiler error
sil-disable-convert-escape-to-noescape-switch-peephole
Disable the convert_escape_to_noescape switch enum peephole. 
sil-closure-lifetime-fixup-reverse-phi-order
Reverse the order in which we visit phis for testing purposes
sil-di-assert-on-failure
After emitting a DI error, assert instead of continuing. Meant for debugging ONLY!
  the instruction: 
self.init()
trunc_Int
_Int1
invalid element number
return 
assertion failed
: numSuccs= 
 hasRecursiveCall
 hasInvariantCondition
 reachesReturn
 reachesRecursiveCall
sil-assert-on-exclusivity-failure
Should the compiler assert when it diagnoses conflicting accesses rather than emitting a diagnostic? Intended for use only with debugging.
Memory access not protected by begin_access:
Accessing: 
.swapAt(
enable-experimental-linear-map-transposition
differentiation-skip-folding-differentiable-function-extraction
processing 
_fatalErrorForwardModeDifferentiationDisabled
canonicalizing `differentiable_function`
...in
__differentiable_curry_thunk_
_wrt_
canonicalizing `linear_function`
unknown program error
caller: 
callee: 
: entry=
, intra=
, exit=
Available Value Dump. Value: 
NoValue;
SubElementNumber: 
Insertion Points:
Available Value List, N = 
. Elts:
silgen-cleanup
sil-canonicalize
sil-mandatory-combine-enable-canon-and-simple-dce
An option for compiler developers that cause the Mandatory Combiner to be more aggressive at eliminating trivially dead code and canonicalizing SIL
: ADD: 
: ADDING: 
 instrs to worklist
sil-mandatory-combiner
: ERASE 
: add op 
 from erased inst to worklist
: Old = 
  New = 
: Replacing 
  with 
swiftui.localized_string_key.init
Localizable
.stringsdata
.sil
comment
tables
{0:2}
sil-dump-before-ome-to-path
Found verification error when verifying before lowering ownership. Please re-run with -sil-verify-all to identify the actual pass that introduced the verification error.
Found unhandled forwarding inst: 
sil-print-all
Print SIL after each pass
sil-print-pass-name
Print the name of each SIL pass before it runs
sil-print-pass-time
Print the execution time of each SIL pass
sil-opt-pass-count
Stop optimizing after <N> optimization passes
sil-break-on-function
Break before running each function pass on a particular function
sil-break-on-pass
Break before running a particular function pass
sil-print-function
Only print out the sil for this function
sil-print-functions
Only print out the sil for the functions whose name contains this substring
sil-print-before
Print out the sil before passes which contain a string from this list.
sil-print-after
Print out the sil after passes which contain a string from this list.
sil-print-around
Print out the sil before and after passes which contain a string from this list
sil-disable-pass
Disable passes which contain a string from this list
sil-disable-pass-only-function
Apply -sil-disable-pass only on this function
sil-verify-before-pass
Verify the module/analyses before we run a pass from this list
sil-verify-around-pass
Verify the module/analyses before/after we run a pass from this list
sil-verify-after-pass
Verify the module/analyses after we run a pass from this list
sil-verify-force-analysis-around-pass
For the given passes, precompute analyses before the pass and verify analyses after the pass
sil-verify-without-invalidation
Verify after passes even if the pass has not invalidated
sil-disable-skipping-passes
Do not skip passes even if nothing was changed
sil-verify-force-analysis
For all passes, precompute analyses before the pass and verify analyses after the pass
debug-only-pass-number
Enable a specific type of debug output (comma separated list pass numbers)
pass number
, stage 
, pass : 
, Function: 
, pass 
(Skip)
(Disabled)
*** SIL function before 
*** SIL function after 
Start function passes at stage: 
Run module pass
*** SIL module before
,Module)
*** SIL module after
*** SIL module before 
 ***
*** New SIL function in 
 was derived from 
PassManagerDeserializationNotificationHandler
ExecuteSILPipelineRequest
AADumper
ABCOpt
AccessEnforcementDom
AccessEnforcementOpts
AccessEnforcementReleaseSinking
AccessEnforcementSelection
AccessEnforcementWMO
CrossModuleSerializationSetup
AccessSummaryDumper
AccessedStorageAnalysisDumper
AccessPathVerification
AccessedStorageDumper
AccessMarkerElimination
AddressLowering
AllocBoxToStack
AllocStackHoisting
ArrayCountPropagation
ArrayElementPropagation
AssumeSingleThreaded
BasicInstructionPropertyDumper
BasicCalleePrinter
CFGPrinter
COWArrayOpts
CallerAnalysisPrinter
CapturePromotion
CapturePropagation
ClosureSpecializer
ClosureLifetimeFixup
CodeSinking
ComputeDominanceInfo
ComputeLoopInfo
ConditionForwarding
ConstantEvaluatorTester
ConstantEvaluableSubsetChecker
CopyForwarding
CopyPropagation
MandatoryCopyPropagation
COWOpts
Differentiation
EpilogueARCMatcherDumper
EpilogueRetainReleaseMatcherDumper
RedundantOverflowCheckRemoval
DeadArgSignatureOpt
DeadFunctionAndGlobalElimination
DeadObjectElimination
DefiniteInitialization
DestroyHoisting
Devirtualizer
DiagnoseInfiniteRecursion
DiagnoseInvalidEscapingCaptures
DiagnoseLifetimeIssues
DiagnoseStaticExclusivity
DiagnoseUnreachable
DiagnosticConstantPropagation
DifferentiabilityWitnessDevirtualizer
EagerSpecializer
OnonePrespecializations
EarlyCodeMotion
EarlyInliner
EmitDFDiagnostics
EscapeAnalysisDumper
FunctionOrderPrinter
FunctionSignatureOpts
ARCSequenceOpts
ARCLoopOpts
EarlyRedundantLoadElimination
RedundantLoadElimination
DeadStoreElimination
GenericSpecializer
ExistentialSpecializer
SILSkippingChecker
GlobalOpt
GlobalPropertyOpt
MandatoryARCOpts
HighLevelCSE
HighLevelLICM
IVInfoPrinter
LowerHopToActor
OptimizeHopToExecutor
InstCount
JumpThreadSimplifyCFG
LetPropertiesOpt
LICM
LateCodeMotion
LateDeadFunctionAndGlobalElimination
LateInliner
LoopCanonicalizer
LoopInfoPrinter
LoopRegionViewText
LoopRegionViewCFG
LoopRotate
LoopUnroll
LowerAggregateInstrs
MandatoryInlining
Mem2Reg
MemBehaviorDumper
LSLocationPrinter
MergeCondFails
MoveCondFailToPreds
NoReturnFolding
ObjectOutliner
Outliner
OwnershipModelEliminator
NestedSemanticFunctionCheck
NonTransparentFunctionOwnershipModelEliminator
NonStdlibNonTransparentFunctionOwnershipModelEliminator
RCIdentityDumper
AlwaysInlineInliner
PerfInliner
PerformanceConstantPropagation
PredictableMemoryAccessOptimizations
PredictableDeadAllocationElimination
RedundantPhiElimination
PhiExpansion
ReleaseDevirtualizer
RetainSinking
ReleaseHoisting
LateReleaseHoisting
LoadableByAddress
MandatorySILLinker
PerformanceSILLinker
RawSILInstLowering
TempLValueOpt
TempRValueOpt
SideEffectsDumper
IRGenPrepare
SILGenCleanup
SILCombine
SILDebugInfoGenerator
EarlySROA
SROA
SROABBArgs
SimplifyBBArgs
SimplifyCFG
SpeculativeDevirtualization
SplitAllCriticalEdges
SplitNonCondBrCriticalEdges
StackPromotion
StripDebugInfo
StringOptimization
SwiftArrayPropertyOpt
UnsafeGuaranteedPeephole
UsePrespecialized
OwnershipDumper
OwnershipVerifierTextualErrorDumper
SemanticARCOpts
SimplifyUnreachableContainingBlocks
SerializeSILPass
CMOSerializeSILPass
YieldOnceCheck
OSLogOptimization
LocalizationKeyExtraction
ForEachLoopUnroll
MandatoryCombine
OptimizedMandatoryCombine
BugReducerTester
OptRemarkGenerator
PruneVTables
aa-dump
abcopts
access-enforcement-dom
access-enforcement-opts
access-enforcement-release
access-enforcement-selection
access-enforcement-wmo
cross-module-serialization-setup
access-summary-dump
accessed-storage-analysis-dump
access-path-verification
accessed-storage-dump
access-marker-elim
address-lowering
allocbox-to-stack
alloc-stack-hoisting
array-count-propagation
array-element-propagation
sil-assume-single-threaded
basic-instruction-property-dump
basic-callee-printer
view-cfg
cowarray-opt
caller-analysis-printer
capture-promotion
capture-prop
closure-specialize
closure-lifetime-fixup
code-sinking
compute-dominance-info
compute-loop-info
condition-forwarding
test-constant-evaluator
test-constant-evaluable-subset
copy-forwarding
copy-propagation
mandatory-copy-propagation
cow-opts
differentiation
sil-epilogue-arc-dumper
sil-epilogue-retain-release-dumper
remove-redundant-overflow-checks
dead-arg-signature-opt
sil-deadfuncelim
deadobject-elim
definite-init
destroy-hoisting
devirtualizer
diagnose-infinite-recursion
diagnose-invalid-escaping-captures
diagnose-lifetime-issues
diagnose-static-exclusivity
diagnose-unreachable
diagnostic-constant-propagation
differentiability-witness-devirtualizer
eager-specializer
onone-prespecializer
early-codemotion
early-inline
dataflow-diagnostics
escapes-dump
function-order-printer
function-signature-opts
arc-loop-opts
early-redundant-load-elim
redundant-load-elim
dead-store-elim
generic-specializer
existential-specializer
check-sil-skipping
global-opt
global-property-opt
mandatory-arc-opts
high-level-cse
high-level-licm
iv-info-printer
lower-hop-to-actor
optimize-hop-to-executor
inst-count
jumpthread-simplify-cfg
let-properties-opt
licm
late-codemotion
late-deadfuncelim
late-inline
loop-canonicalizer
loop-info-printer
loop-region-view-text
loop-region-view-cfg
loop-rotate
loop-unroll
lower-aggregate-instrs
mandatory-inlining
mem2reg
mem-behavior-dump
lslocation-dump
merge-cond_fails
move-cond-fail-to-preds
noreturn-folding
object-outliner
outliner
ownership-model-eliminator
nested-semantic-function-check
non-transparent-func-ownership-model-eliminator
non-stdlib-non-transparent-func-ownership-model-eliminator
rc-id-dumper
always-inline
performance-constant-propagation
predictable-memaccess-opts
predictable-deadalloc-elim
redundant-phi-elimination
phi-expansion
release-devirtualizer
retain-sinking
release-hoisting
late-release-hoisting
loadable-address
mandatory-linker
performance-linker
raw-sil-inst-lowering
temp-lvalue-opt
temp-rvalue-opt
side-effects-dump
irgen-prepare
sil-combine
sil-debuginfo-gen
early-sroa
sroa
sroa-bb-args
simplify-bb-args
simplify-cfg
specdevirt
split-critical-edges
split-non-cond_br-critical-edges
stack-promotion
strip-debug-info
string-optimization
array-property-opt
unsafe-guaranteed-peephole
use-prespecialized
ownership-dumper
ownership-verifier-textual-error-dumper
semantic-arc-opts
simplify-unreachable-containing-blocks
serialize-sil
cmo-serialize-sil
yield-once-check
os-log-optimization
localization-key-extraction
for-each-loop-unroll
mandatory-combine
optimized-mandatory-combine
bug-reducer-tester
sil-opt-remark-generator
prune-vtables
sil-view-cfg
Enable the sil cfg viewer pass
sil-view-guaranteed-cfg
Enable the sil cfg viewer pass after diagnostics
sil-view-silgen-cfg
Enable the sil cfg viewer pass before diagnostics
enable-opaque-archetype-specializer
SIL View SILGen CFG
SIL View Guaranteed CFG
Address Lowering
IRGen Preparation
SIL Before IRGen View CFG
non-Diagnostic Enabling Mandatory Optimizations
Serialization
Rest of Onone
Serialize SIL
Inst Count
Mandatory Debug Serialization
Mandatory Diagnostic Passes + Enabling Optimization Passes
Ownership Model Eliminator
Performance Debug Serialization
PrepareOptimizationPasses
EarlyModulePasses
HighLevel,Function+EarlyLoopOpt
HighLevel,Module+StackPromote
Serialize
MidLevel,Function
ClosureSpecialize
LowLevel,Function
LateLoopOpt
SIL Debug Info Generator
passes
"aa-dump"
"abcopts"
"access-enforcement-dom"
"access-enforcement-opts"
"access-enforcement-release"
"access-enforcement-selection"
"access-enforcement-wmo"
"cross-module-serialization-setup"
"access-summary-dump"
"accessed-storage-analysis-dump"
"access-path-verification"
"accessed-storage-dump"
"access-marker-elim"
"address-lowering"
"allocbox-to-stack"
"alloc-stack-hoisting"
"array-count-propagation"
"array-element-propagation"
"sil-assume-single-threaded"
"basic-instruction-property-dump"
"basic-callee-printer"
"view-cfg"
"cowarray-opt"
"cse"
"caller-analysis-printer"
"capture-promotion"
"capture-prop"
"closure-specialize"
"closure-lifetime-fixup"
"code-sinking"
"compute-dominance-info"
"compute-loop-info"
"condition-forwarding"
"test-constant-evaluator"
"test-constant-evaluable-subset"
"copy-forwarding"
"copy-propagation"
"mandatory-copy-propagation"
"cow-opts"
"differentiation"
"sil-epilogue-arc-dumper"
"sil-epilogue-retain-release-dumper"
"remove-redundant-overflow-checks"
"dce"
"dead-arg-signature-opt"
"sil-deadfuncelim"
"deadobject-elim"
"definite-init"
"destroy-hoisting"
"devirtualizer"
"diagnose-infinite-recursion"
"diagnose-invalid-escaping-captures"
"diagnose-lifetime-issues"
"diagnose-static-exclusivity"
"diagnose-unreachable"
"diagnostic-constant-propagation"
"differentiability-witness-devirtualizer"
"eager-specializer"
"onone-prespecializer"
"early-codemotion"
"early-inline"
"dataflow-diagnostics"
"escapes-dump"
"function-order-printer"
"function-signature-opts"
"arc-sequence-opts"
"arc-loop-opts"
"early-redundant-load-elim"
"redundant-load-elim"
"dead-store-elim"
"generic-specializer"
"existential-specializer"
"check-sil-skipping"
"global-opt"
"global-property-opt"
"mandatory-arc-opts"
"high-level-cse"
"high-level-licm"
"iv-info-printer"
"lower-hop-to-actor"
"optimize-hop-to-executor"
"inst-count"
"jumpthread-simplify-cfg"
"let-properties-opt"
"licm"
"late-codemotion"
"late-deadfuncelim"
"late-inline"
"loop-canonicalizer"
"loop-info-printer"
"loop-region-view-text"
"loop-region-view-cfg"
"loop-rotate"
"loop-unroll"
"lower-aggregate-instrs"
"mandatory-inlining"
"mem2reg"
"mem-behavior-dump"
"lslocation-dump"
"merge-cond_fails"
"move-cond-fail-to-preds"
"noreturn-folding"
"object-outliner"
"outliner"
"ownership-model-eliminator"
"nested-semantic-function-check"
"non-transparent-func-ownership-model-eliminator"
"non-stdlib-non-transparent-func-ownership-model-eliminator"
"rc-id-dumper"
"always-inline"
"inline"
"performance-constant-propagation"
"predictable-memaccess-opts"
"predictable-deadalloc-elim"
"redundant-phi-elimination"
"phi-expansion"
"release-devirtualizer"
"retain-sinking"
"release-hoisting"
"late-release-hoisting"
"loadable-address"
"mandatory-linker"
"performance-linker"
"raw-sil-inst-lowering"
"temp-lvalue-opt"
"temp-rvalue-opt"
"side-effects-dump"
"irgen-prepare"
"silgen-cleanup"
"sil-combine"
"sil-debuginfo-gen"
"early-sroa"
"sroa"
"sroa-bb-args"
"simplify-bb-args"
"simplify-cfg"
"specdevirt"
"split-critical-edges"
"split-non-cond_br-critical-edges"
"stack-promotion"
"strip-debug-info"
"string-optimization"
"array-property-opt"
"unsafe-guaranteed-peephole"
"use-prespecialized"
"ownership-dumper"
"ownership-verifier-textual-error-dumper"
"semantic-arc-opts"
"simplify-unreachable-containing-blocks"
"serialize-sil"
"cmo-serialize-sil"
"yield-once-check"
"os-log-optimization"
"localization-key-extraction"
"for-each-loop-unroll"
"mandatory-combine"
"optimized-mandatory-combine"
"bug-reducer-tester"
"sil-opt-remark-generator"
"prune-vtables"
Running SIL Function Transform
While running pass #
 SILFunctionTransform "
" on SILFunction 
 SILModuleTransform "
Run pipelines { 
 } on 
NumCombined
Number of instructions combined
NumDeadInst
Number of dead insts eliminated
silcombine-owned-code-sinking
Enable sinking of owened forwarding insts
sil-combine-canonicalize
Canonicalization during sil-combine
swift_setAtReferenceWritableKeyPath
convertFromObjectiveC
convertToObjectiveC
sil-combine-disable-alloc-stack-opts
count
sil-semantic-arc-peepholes-all
Perform All ARC canonicalizations and peepholes
sil-semantic-arc-peepholes-loadcopy-to-loadborrow
Perform the load [copy] to load_borrow peephole
sil-semantic-arc-peepholes-redundant-borrowscope-elim
Perform the redundant borrow scope elimination peephole
sil-semantic-arc-peepholes-redundant-copyvalue-elim
Perform the redundant copy_value peephole
sil-semantic-arc-peepholes-lifetime-joining
Perform the join lifetimes peephole
sil-semantic-arc-peepholes-ownership-conversion-elim
Eliminate unchecked_ownership_conversion insts that are not needed
sil-semantic-arc-owned-to-guaranteed-phi
Perform Owned To Guaranteed Phi. NOTE: Seeded by peephole optimizer for compile time saving purposes, so run this after running peepholes)
For testing purposes only run the specified list of semantic arc optimization. If the list is empty, we run all transforms
Cannot find option named '
sil-semantic-arc-opts-verify-after-transform
sil-rr-code-motion
NumRetainsSunk
Number of retains sunk
NumReleasesHoisted
Number of releases hoisted
disable-arc-cm
NumStackPromoted
Number of alloc_box's promoted to the stack
max-local-apply-recur-depth
Max recursive depth for analyzing local functions
allocbox-to-stack-analyze-apply
Analyze functions into while alloc_box is passed
array.init
NumCopyNRVO
Number of copies removed via named return value opt.
NumCopyForward
Number of copies removed via forward propagation
NumCopyBackward
Number of copies removed via backward propagation
NumDeadTemp
Number of copies removed from unused temporaries
enable-copyforwarding
enable-destroyhoisting
sil-dead-store-elim
NumDeadStores
Number of dead stores removed
NumPartialDeadStores
Number of partial dead stores removed
max-partial-store-count
Locations:
  block 
: in=
, out=
, mid=
, gen=
, kill=
sil-devirtualizer
enable-eager-specializer
Run the eager-specializer pass.
_swift_isClassOrObjCExistentialType
cmp_le
sil-generic-specializer
NoDef
Unable to specialize generic function 
Callee
 since definition is not visible
sil.
sil-dump-functions-before-outliner
_unconditionallyBridgeFromObjectiveC
_findStringSwitchCaseWithCache
optremarkgen-visit-implicit-autogen-funcs
Emit opt remarks even on implicit and autogenerated functions
optremarkgen-declless-debugvalue-use-sildebugvar-info
If a debug_value does not have a decl, infer a value with a name from that info that has a loc set to the loc of the debug_value instruction itself. This is for testing purposes so it is easier to write SIL test cases for this pass
sil-opt-remark-gen
memory
stack allocated ref of type '
ValueType
of '
upcast<
refcast<
bitwise_cast<
heap allocated ref of type '
heap allocated box of type '
begin exclusive access to value of type '
conditional runtime cast of value with type '
' to '
CastType
retain of type '
release of type '
end exclusive access to value of type '
unconditional runtime cast of value with type '
sil-inliner
NumFunctionsInlined
Number of functions inlined
print-shortest-path-info
Print shortest-path information for inlining
sil-inline-generics
Enable inlining of generics
sil-aggressive-inline
Enable aggressive inlining
sil-inline-verify-after-inline
Run sil verification after inlining all found callee apply sites into a caller.
InlineAlways
Early
Middle
 Performance Inliner
Inline
Pure call. Always profitable to inline 
Profitable due to provided profile
Not profitable due to provided profile
Not profitable to inline function 
Benefit
Inlined
 inlined into 
Caller
Covering Value
sil-codemotion
NumSunk
Number of instructions sunk
NumRefCountOpsSimplified
Number of enum ref count ops simplified
NumHoisted
Number of instructions hoisted
NumSILArgumentReleaseHoisted
Number of silargument release instructions hoisted
disable-sil-cm-rr-cm
sil-lower-aggregate-instrs
NumExpand
Number of instructions expanded
sil-lower-agg-instrs-expand-all
sil-simplify-cfg
NumBlocksDeleted
Number of unreachable blocks removed
NumBlocksMerged
Number of blocks merged together
NumJumpThreads
Number of jumps threaded
NumTermBlockSimplified
Number of programterm block simplified
NumConstantFolded
Number of terminators constant folded
NumDeadArguments
Number of unused arguments removed
Number of aggregate argument levels split by SROA
simplify-cfg-simplify-unconditional-branches
sroa-args-remove-dead-args-after
sil-speculative-devirtualizer
PartialSpecDevirt
Partially devirtualized call with run-time checks for 
NumSubTypesChecked
ClassType
, number of subclasses not devirtualized: 
NotHandledSubsNum
, not all subclasses are known
SpecDevirt
Devirtualized call with run-time checks for the derived classes of 
Unhandled user: 
PAIR #
<unknown>
Address use: 
  collected from path
  has different path
  with path...
  was not collected for: 
  is not a use of path
enable-accessed-storage-dump-uses
With --sil-access-storage-dumper, dump all uses
###For MemOp: 
Exact Uses {
Inner Uses {
Overlapping Uses {
Function call site:
Inst #: 
    
    Mem Behavior: 
    Release Behavior: 
bug-reducer-tester-target-func
Function that when called by an apply should cause BugReducerTester to blow up or miscompile if the pass visits the apply
bug-reducer-tester-failure-kind
The type of failure to perform
opt-crasher
Crash the optimizer when we see the specified apply
miscompile
Delete the target function call to cause a runtime miscompile that is not a crasher
runtime-crasher
bug_reducer_runtime_crasher_func
Runtime Crasher Func!
sil-view-cfg-only-function
Only produce a graphviz file for this function
sil-view-cfg-only-functions
Only produce a graphviz file for the sil for the functions whose name contains this substring
Returns unknown
Returns 
skip
Error: function 
 annotated as constant evaluable
 does not have a test driver
START: 
FINISH: 
START: sil @
END: sil @
escapes-enable-graphwriter
With -escapes-dump, also write .dot files.
Bottom up function order:
Non-trivial SCC:
Induction variables for function: 
IV Header: 
IV: 
with header: 
LSLocation Kinds:
only-expansion
only-reduction
only-type-expansion
lslocation-dump-use-new-projection
No loops in 
Loops in 
sil-loop-region-view-cfg-only-function
Only produce a graphviz file for the loop region info of this function
sil-loop-region-view-cfg-only-functions
Only produce a graphviz file for the loop region info for the functions whose name contains this substring
Start @
End @
  r=
ValueMap:
ValueMap[
] = 
RESULT #
.gsil_
Non-empty SIL module when all function bodies should have been skipped!
Function serialized that should have been skipped!
*** Dumping Function: '
Visiting: 
Ownership Constraint:
Op #: 
Constraint: 
Results Ownership Kinds:
Result: 
Kind: 
$ss18_fatalErrorMessageyys12StaticStringV_AcCSutF
NumCopiesEliminated
number of copy_value instructions removed
NumDestroysEliminated
number of destroy_value instructions removed
NumCopiesGenerated
number of copy_value instructions created
NumDestroysGenerated
number of destroy_value instructions created
NumUnknownUsers
number of functions with unknown users
canonical-ossa-rewrite-borrows
Enable rewriting borrow scopes
Debug print output 
  Addressed Memory Object: 
trap: 
constant_evaluable
swiftui.localized.interpolation_init
localization.interpolation.appendLiteral
swiftui.localized.appendInterpolation_@_specifier
localization.interpolation.appendInterpolation_@_specifier
swiftui.localized.appendInterpolation_param_specifier
localization.interpolation.appendInterpolation_param_specifier
swiftui.localized_string_key.init_literal
swiftui.localized_string_key.init_interpolation
localization_key.init_interpolation
WitnessMethodDevirtualized
Devirtualized call to 
ClassMethodDevirtualized
Devirtualized call to class method 
invalid OpenedArchetypeInfo
OpendArchetype: 
OpendArchetypeValue: 
copied 
ExistentialValue: 
ExistentialType: 
ConcreteType: 
ConcreteValue: 
ConcreteTypeDef: 
no ConcreteExistentialInfo
NumPreventedGenericSpecializationLoops
# of prevented infinite generic specializations loops
NumPreventedTooComplexGenericSpecializations
# of prevented generic specializations with too complex generic type parameters
sil-partial-specialization
Enable partial specialization of generics
sil-partial-specialization-with-generic-substitutions
Enable partial specialization with generic substitutions
sil-print-generic-specialization-loops
Print detected infinite generic specialization loops that were prevented
sil-generic-verify-after-specialization
Verify functions after they are specialized 'PrettyStackTraceFunction'-ing the original function if we fail.
Detected and prevented an infinite generic specialization loop for callee: 
SpecializedFnTy:
SpecializedSubstFnTy:
CalleeFnTy:
SpecializedCalleeSubstFnTy:
Looking for a function: 
Expected type: 
Found    type: 
Generic function: 
. Specialized Function: 
Thunk For Generic function: 
optimize.sil.specialize.generic.never
optimize.sil.specialize.generic.size.never
optimize.sil.specialize.generic.partial.never
Strange requirement for 
$sS2ayxGycfCSJ_Tg5
$sS2ayxGycfCSS_Tg5
$sS2ayxGycfCSd_Tg5
$sS2ayxGycfCSf_Tg5
$sS2ayxGycfCSi_Tg5
$sS2ayxGycfCSu_Tg5
$sS2ayxGycfCs4Int8V_Tg5
$sS2ayxGycfCs5Int16V_Tg5
$sS2ayxGycfCs5Int32V_Tg5
$sS2ayxGycfCs5Int64V_Tg5
$sS2ayxGycfCs5UInt8V_Tg5
$sS2ayxGycfCs6UInt16V_Tg5
$sS2ayxGycfCs6UInt32V_Tg5
$sS2ayxGycfCs6UInt64V_Tg5
$sS2ayxGycfCs7UnicodeO6ScalarV_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSaySJG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSaySS17UnicodeScalarViewVG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSaySS8UTF8ViewVG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSaySS9UTF16ViewVG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSaySSG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSaySdG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSaySfG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSaySiG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSaySuG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSays4Int8VG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSays5Int16VG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSays5Int32VG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSays5Int64VG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSays5UInt8VG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSays6UInt16VG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSays6UInt32VG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSays6UInt64VG_Tg5
$sSKsE8reverseds18ReversedCollectionVyxGyFSays7UnicodeO6ScalarVG_Tg5
$sSMsSKRzrlE14_insertionSort6within2byySny5IndexSlQzG_Sb7ElementSTQz_AHtKXEtKFSrySJG_Tg5
$sSMsSKRzrlE14_insertionSort6within2byySny5IndexSlQzG_Sb7ElementSTQz_AHtKXEtKFSrySSG_Tg5
$sSMsSKRzrlE14_insertionSort6within2byySny5IndexSlQzG_Sb7ElementSTQz_AHtKXEtKFSrySdG_Tg5
$sSMsSKRzrlE14_insertionSort6within2byySny5IndexSlQzG_Sb7ElementSTQz_AHtKXEtKFSrySfG_Tg5
$sSMsSKRzrlE14_insertionSort6within2byySny5IndexSlQzG_Sb7ElementSTQz_AHtKXEtKFSrySiG_Tg5
$sSMsSKRzrlE14_insertionSort6within2byySny5IndexSlQzG_Sb7ElementSTQz_AHtKXEtKFSrySuG_Tg5
$sSMsSKRzrlE14_insertionSort6within2byySny5IndexSlQzG_Sb7ElementSTQz_AHtKXEtKFSrys4Int8VG_Tg5
$sSMsSKRzrlE14_insertionSort6within2byySny5IndexSlQzG_Sb7ElementSTQz_AHtKXEtKFSrys5Int16VG_Tg5
$sSMsSKRzrlE14_insertionSort6within2byySny5IndexSlQzG_Sb7ElementSTQz_AHtKXEtKFSrys5Int32VG_Tg5
$sSMsSKRzrlE14_insertionSort6within2byySny5IndexSlQzG_Sb7ElementSTQz_AHtKXEtKFSrys5Int64VG_Tg5
$sSMsSKRzrlE14_insertionSort6within2byySny5IndexSlQzG_Sb7ElementSTQz_AHtKXEtKFSrys5UInt8VG_Tg5
$sSMsSKRzrlE14_insertionSort6within2byySny5IndexSlQzG_Sb7ElementSTQz_AHtKXEtKFSrys6UInt16VG_Tg5
$sSMsSKRzrlE14_insertionSort6within2byySny5IndexSlQzG_Sb7ElementSTQz_AHtKXEtKFSrys6UInt32VG_Tg5
$sSMsSKRzrlE14_insertionSort6within2byySny5IndexSlQzG_Sb7ElementSTQz_AHtKXEtKFSrys6UInt64VG_Tg5
$sSMsSKRzrlE14_insertionSort6within2byySny5IndexSlQzG_Sb7ElementSTQz_AHtKXEtKFSrys7UnicodeO6ScalarVG_Tg5
$sSMsSKRzrlE14_insertionSort6within9sortedEnd2byySny5IndexSlQzG_AFSb7ElementSTQz_AItKXEtKFSrySJG_Tg5
$sSMsSKRzrlE14_insertionSort6within9sortedEnd2byySny5IndexSlQzG_AFSb7ElementSTQz_AItKXEtKFSrySSG_Tg5
$sSMsSKRzrlE14_insertionSort6within9sortedEnd2byySny5IndexSlQzG_AFSb7ElementSTQz_AItKXEtKFSrySdG_Tg5
$sSMsSKRzrlE14_insertionSort6within9sortedEnd2byySny5IndexSlQzG_AFSb7ElementSTQz_AItKXEtKFSrySfG_Tg5
$sSMsSKRzrlE14_insertionSort6within9sortedEnd2byySny5IndexSlQzG_AFSb7ElementSTQz_AItKXEtKFSrySiG_Tg5
$sSMsSKRzrlE14_insertionSort6within9sortedEnd2byySny5IndexSlQzG_AFSb7ElementSTQz_AItKXEtKFSrySuG_Tg5
$sSMsSKRzrlE14_insertionSort6within9sortedEnd2byySny5IndexSlQzG_AFSb7ElementSTQz_AItKXEtKFSrys4Int8VG_Tg5
$sSMsSKRzrlE14_insertionSort6within9sortedEnd2byySny5IndexSlQzG_AFSb7ElementSTQz_AItKXEtKFSrys5Int16VG_Tg5
$sSMsSKRzrlE14_insertionSort6within9sortedEnd2byySny5IndexSlQzG_AFSb7ElementSTQz_AItKXEtKFSrys5Int32VG_Tg5
$sSMsSKRzrlE14_insertionSort6within9sortedEnd2byySny5IndexSlQzG_AFSb7ElementSTQz_AItKXEtKFSrys5Int64VG_Tg5
$sSMsSKRzrlE14_insertionSort6within9sortedEnd2byySny5IndexSlQzG_AFSb7ElementSTQz_AItKXEtKFSrys5UInt8VG_Tg5
$sSMsSKRzrlE14_insertionSort6within9sortedEnd2byySny5IndexSlQzG_AFSb7ElementSTQz_AItKXEtKFSrys6UInt16VG_Tg5
$sSMsSKRzrlE14_insertionSort6within9sortedEnd2byySny5IndexSlQzG_AFSb7ElementSTQz_AItKXEtKFSrys6UInt32VG_Tg5
$sSMsSKRzrlE14_insertionSort6within9sortedEnd2byySny5IndexSlQzG_AFSb7ElementSTQz_AItKXEtKFSrys6UInt64VG_Tg5
$sSMsSKRzrlE14_insertionSort6within9sortedEnd2byySny5IndexSlQzG_AFSb7ElementSTQz_AItKXEtKFSrys7UnicodeO6ScalarVG_Tg5
$sSMsSKRzrlE8_reverse6withinySny5IndexSlQzG_tFSrySJG_Tg5
$sSMsSKRzrlE8_reverse6withinySny5IndexSlQzG_tFSrySSG_Tg5
$sSMsSKRzrlE8_reverse6withinySny5IndexSlQzG_tFSrySdG_Tg5
$sSMsSKRzrlE8_reverse6withinySny5IndexSlQzG_tFSrySfG_Tg5
$sSMsSKRzrlE8_reverse6withinySny5IndexSlQzG_tFSrySiG_Tg5
$sSMsSKRzrlE8_reverse6withinySny5IndexSlQzG_tFSrySuG_Tg5
$sSMsSKRzrlE8_reverse6withinySny5IndexSlQzG_tFSrys4Int8VG_Tg5
$sSMsSKRzrlE8_reverse6withinySny5IndexSlQzG_tFSrys5Int16VG_Tg5
$sSMsSKRzrlE8_reverse6withinySny5IndexSlQzG_tFSrys5Int32VG_Tg5
$sSMsSKRzrlE8_reverse6withinySny5IndexSlQzG_tFSrys5Int64VG_Tg5
$sSMsSKRzrlE8_reverse6withinySny5IndexSlQzG_tFSrys5UInt8VG_Tg5
$sSMsSKRzrlE8_reverse6withinySny5IndexSlQzG_tFSrys6UInt16VG_Tg5
$sSMsSKRzrlE8_reverse6withinySny5IndexSlQzG_tFSrys6UInt32VG_Tg5
$sSMsSKRzrlE8_reverse6withinySny5IndexSlQzG_tFSrys6UInt64VG_Tg5
$sSMsSKRzrlE8_reverse6withinySny5IndexSlQzG_tFSrys7UnicodeO6ScalarVG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFSaySJG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFSaySSG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFSaySdG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFSaySfG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFSaySiG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFSaySuG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFSays4Int8VG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFSays5Int16VG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFSays5Int32VG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFSays5Int64VG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFSays5UInt8VG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFSays6UInt16VG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFSays6UInt32VG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFSays6UInt64VG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFSays7UnicodeO6ScalarVG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFs15ContiguousArrayVySJG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFs15ContiguousArrayVySSG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFs15ContiguousArrayVySdG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFs15ContiguousArrayVySfG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFs15ContiguousArrayVySiG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFs15ContiguousArrayVySuG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFs15ContiguousArrayVys4Int8VG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFs15ContiguousArrayVys5Int16VG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFs15ContiguousArrayVys5Int32VG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFs15ContiguousArrayVys5Int64VG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFs15ContiguousArrayVys5UInt8VG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFs15ContiguousArrayVys6UInt16VG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFs15ContiguousArrayVys6UInt32VG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFs15ContiguousArrayVys6UInt64VG_Tg5
$sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKFs15ContiguousArrayVys7UnicodeO6ScalarVG_Tg5
$sSN15uncheckedBoundsSNyxGx5lower_x5uppert_tcfCSi_Tg5
$sSNsSxRzSZ6StrideRpzrlE10startIndexSNsSxRzSZABRQrlE0C0Oyx_GvgSi_Tg5
$sSNsSxRzSZ6StrideRpzrlE5index5afterSNsSxRzSZABRQrlE5IndexOyx_GAG_tFSi_Tg5
$sSNsSxRzSZ6StrideRpzrlE8endIndexSNsSxRzSZABRQrlE0C0Oyx_GvgSi_Tg5
$sSNsSxRzSZ6StrideRpzrlEyxSNsSxRzSZABRQrlE5IndexOyx_GcirSi_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFSJ_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFSS17UnicodeScalarViewV_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFSS8UTF8ViewV_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFSS9UTF16ViewV_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFSS_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFSd_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFSf_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFSi_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFSu_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFs4Int8V_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFs5Int16V_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFs5Int32V_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFs5Int64V_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFs5UInt8V_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFs6UInt16V_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFs6UInt32V_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFs6UInt64V_Tg5
$sSa034_makeUniqueAndReserveCapacityIfNotB0yyFs7UnicodeO6ScalarV_Tg5
$sSa10startIndexSivgSJ_Tg5
$sSa10startIndexSivgSS17UnicodeScalarViewV_Tg5
$sSa10startIndexSivgSS8UTF8ViewV_Tg5
$sSa10startIndexSivgSS9UTF16ViewV_Tg5
$sSa10startIndexSivgSS_Tg5
$sSa10startIndexSivgSd_Tg5
$sSa10startIndexSivgSf_Tg5
$sSa10startIndexSivgSi_Tg5
$sSa10startIndexSivgSu_Tg5
$sSa10startIndexSivgs4Int8V_Tg5
$sSa10startIndexSivgs5Int16V_Tg5
$sSa10startIndexSivgs5Int32V_Tg5
$sSa10startIndexSivgs5Int64V_Tg5
$sSa10startIndexSivgs5UInt8V_Tg5
$sSa10startIndexSivgs6UInt16V_Tg5
$sSa10startIndexSivgs6UInt32V_Tg5
$sSa10startIndexSivgs6UInt64V_Tg5
$sSa10startIndexSivgs7UnicodeO6ScalarV_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFSJ_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFSS17UnicodeScalarViewV_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFSS8UTF8ViewV_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFSS9UTF16ViewV_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFSS_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFSd_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFSf_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFSi_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFSu_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFs4Int8V_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFs5Int16V_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFs5Int32V_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFs5Int64V_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFs5UInt8V_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFs6UInt16V_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFs6UInt32V_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFs6UInt64V_Tg5
$sSa11_getElement_20wasNativeTypeChecked22matchingSubscriptCheckxSi_Sbs16_DependenceTokenVtFs7UnicodeO6ScalarV_Tg5
$sSa12_getCapacitySiyFSJ_Tg5
$sSa12_getCapacitySiyFSS17UnicodeScalarViewV_Tg5
$sSa12_getCapacitySiyFSS8UTF8ViewV_Tg5
$sSa12_getCapacitySiyFSS9UTF16ViewV_Tg5
$sSa12_getCapacitySiyFSS_Tg5
$sSa12_getCapacitySiyFSd_Tg5
$sSa12_getCapacitySiyFSf_Tg5
$sSa12_getCapacitySiyFSi_Tg5
$sSa12_getCapacitySiyFSu_Tg5
$sSa12_getCapacitySiyFs4Int8V_Tg5
$sSa12_getCapacitySiyFs5Int16V_Tg5
$sSa12_getCapacitySiyFs5Int32V_Tg5
$sSa12_getCapacitySiyFs5Int64V_Tg5
$sSa12_getCapacitySiyFs5UInt8V_Tg5
$sSa12_getCapacitySiyFs6UInt16V_Tg5
$sSa12_getCapacitySiyFs6UInt32V_Tg5
$sSa12_getCapacitySiyFs6UInt64V_Tg5
$sSa12_getCapacitySiyFs7UnicodeO6ScalarV_Tg5
$sSa12arrayLiteralSayxGxd_tcfCSJ_Tg5
$sSa12arrayLiteralSayxGxd_tcfCSS17UnicodeScalarViewV_Tg5
$sSa12arrayLiteralSayxGxd_tcfCSS8UTF8ViewV_Tg5
$sSa12arrayLiteralSayxGxd_tcfCSS9UTF16ViewV_Tg5
$sSa12arrayLiteralSayxGxd_tcfCSS_Tg5
$sSa12arrayLiteralSayxGxd_tcfCSd_Tg5
$sSa12arrayLiteralSayxGxd_tcfCSf_Tg5
$sSa12arrayLiteralSayxGxd_tcfCSi_Tg5
$sSa12arrayLiteralSayxGxd_tcfCSu_Tg5
$sSa12arrayLiteralSayxGxd_tcfCs4Int8V_Tg5
$sSa12arrayLiteralSayxGxd_tcfCs5Int16V_Tg5
$sSa12arrayLiteralSayxGxd_tcfCs5Int32V_Tg5
$sSa12arrayLiteralSayxGxd_tcfCs5Int64V_Tg5
$sSa12arrayLiteralSayxGxd_tcfCs5UInt8V_Tg5
$sSa12arrayLiteralSayxGxd_tcfCs6UInt16V_Tg5
$sSa12arrayLiteralSayxGxd_tcfCs6UInt32V_Tg5
$sSa12arrayLiteralSayxGxd_tcfCs6UInt64V_Tg5
$sSa12arrayLiteralSayxGxd_tcfCs7UnicodeO6ScalarV_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFSJ_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFSS17UnicodeScalarViewV_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFSS8UTF8ViewV_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFSS9UTF16ViewV_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFSS_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFSd_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFSf_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFSi_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFSu_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFs4Int8V_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFs5Int16V_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFs5Int32V_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFs5Int64V_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFs5UInt8V_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFs6UInt16V_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFs6UInt32V_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFs6UInt64V_Tg5
$sSa15_checkSubscript_20wasNativeTypeCheckeds16_DependenceTokenVSi_SbtFs7UnicodeO6ScalarV_Tg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFSJ_s15EmptyCollectionVySJGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFSS17UnicodeScalarViewV_s15EmptyCollectionVyAGGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFSS8UTF8ViewV_s15EmptyCollectionVyAGGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFSS9UTF16ViewV_s15EmptyCollectionVyAGGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFSS_s15EmptyCollectionVySSGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFSd_s15EmptyCollectionVySdGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFSf_s15EmptyCollectionVySfGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFSi_s15EmptyCollectionVySiGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFSu_s15EmptyCollectionVySuGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFs4Int8V_s15EmptyCollectionVyAGGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFs5Int16V_s15EmptyCollectionVyAGGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFs5Int32V_s15EmptyCollectionVyAGGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFs5Int64V_s15EmptyCollectionVyAGGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFs5UInt8V_s15EmptyCollectionVyAGGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFs6UInt16V_s15EmptyCollectionVyAGGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFs6UInt32V_s15EmptyCollectionVyAGGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFs6UInt64V_s15EmptyCollectionVyAGGTg5
$sSa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lFs7UnicodeO6ScalarV_s15EmptyCollectionVyAIGTg5
$sSa15reserveCapacityyySiFSJ_Tg5
$sSa15reserveCapacityyySiFSS17UnicodeScalarViewV_Tg5
$sSa15reserveCapacityyySiFSS8UTF8ViewV_Tg5
$sSa15reserveCapacityyySiFSS9UTF16ViewV_Tg5
$sSa15reserveCapacityyySiFSS_Tg5
$sSa15reserveCapacityyySiFSd_Tg5
$sSa15reserveCapacityyySiFSf_Tg5
$sSa15reserveCapacityyySiFSi_Tg5
$sSa15reserveCapacityyySiFSu_Tg5
$sSa15reserveCapacityyySiFs4Int8V_Tg5
$sSa15reserveCapacityyySiFs5Int16V_Tg5
$sSa15reserveCapacityyySiFs5Int32V_Tg5
$sSa15reserveCapacityyySiFs5Int64V_Tg5
$sSa15reserveCapacityyySiFs5UInt8V_Tg5
$sSa15reserveCapacityyySiFs6UInt16V_Tg5
$sSa15reserveCapacityyySiFs6UInt32V_Tg5
$sSa15reserveCapacityyySiFs6UInt64V_Tg5
$sSa15reserveCapacityyySiFs7UnicodeO6ScalarV_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFSJ_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFSS17UnicodeScalarViewV_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFSS8UTF8ViewV_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFSS9UTF16ViewV_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFSS_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFSd_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFSf_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFSi_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFSu_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFs4Int8V_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFs5Int16V_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFs5Int32V_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFs5Int64V_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFs5UInt8V_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFs6UInt16V_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFs6UInt32V_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFs6UInt64V_Tg5
$sSa16_copyToNewBuffer8oldCountySi_tFs7UnicodeO6ScalarV_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCSJ_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCSS17UnicodeScalarViewV_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCSS8UTF8ViewV_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCSS9UTF16ViewV_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCSS_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCSd_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCSf_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCSi_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCSu_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCs4Int8V_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCs5Int16V_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCs5Int32V_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCs5Int64V_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCs5UInt8V_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCs6UInt16V_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCs6UInt32V_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCs6UInt64V_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCs7UnicodeO6ScalarV_Tg5
$sSa19_uninitializedCountSayxGSi_tcfCyp_Tg5
$sSa21_makeMutableAndUniqueyyFSJ_Tg5
$sSa21_makeMutableAndUniqueyyFSS17UnicodeScalarViewV_Tg5
$sSa21_makeMutableAndUniqueyyFSS8UTF8ViewV_Tg5
$sSa21_makeMutableAndUniqueyyFSS9UTF16ViewV_Tg5
$sSa21_makeMutableAndUniqueyyFSS_Tg5
$sSa21_makeMutableAndUniqueyyFSd_Tg5
$sSa21_makeMutableAndUniqueyyFSf_Tg5
$sSa21_makeMutableAndUniqueyyFSi_Tg5
$sSa21_makeMutableAndUniqueyyFSu_Tg5
$sSa21_makeMutableAndUniqueyyFs4Int8V_Tg5
$sSa21_makeMutableAndUniqueyyFs5Int16V_Tg5
$sSa21_makeMutableAndUniqueyyFs5Int32V_Tg5
$sSa21_makeMutableAndUniqueyyFs5Int64V_Tg5
$sSa21_makeMutableAndUniqueyyFs5UInt8V_Tg5
$sSa21_makeMutableAndUniqueyyFs6UInt16V_Tg5
$sSa21_makeMutableAndUniqueyyFs6UInt32V_Tg5
$sSa21_makeMutableAndUniqueyyFs6UInt64V_Tg5
$sSa21_makeMutableAndUniqueyyFs7UnicodeO6ScalarV_Tg5
$sSa22_copyToContiguousArrays0cD0VyxGyFSJ_Tg5
$sSa22_copyToContiguousArrays0cD0VyxGyFSS_Tg5
$sSa22_copyToContiguousArrays0cD0VyxGyFSd_Tg5
$sSa22_copyToContiguousArrays0cD0VyxGyFSf_Tg5
$sSa22_copyToContiguousArrays0cD0VyxGyFSi_Tg5
$sSa22_copyToContiguousArrays0cD0VyxGyFSu_Tg5
$sSa22_copyToContiguousArrays0cD0VyxGyFs4Int8V_Tg5
$sSa22_copyToContiguousArrays0cD0VyxGyFs5Int16V_Tg5
$sSa22_copyToContiguousArrays0cD0VyxGyFs5Int32V_Tg5
$sSa22_copyToContiguousArrays0cD0VyxGyFs5Int64V_Tg5
$sSa22_copyToContiguousArrays0cD0VyxGyFs5UInt8V_Tg5
$sSa22_copyToContiguousArrays0cD0VyxGyFs6UInt16V_Tg5
$sSa22_copyToContiguousArrays0cD0VyxGyFs6UInt32V_Tg5
$sSa22_copyToContiguousArrays0cD0VyxGyFs6UInt64V_Tg5
$sSa22_copyToContiguousArrays0cD0VyxGyFs7UnicodeO6ScalarV_Tg5
$sSa28_unsafeUninitializedCapacity16initializingWithSayxGSi_ySryxGz_SiztKXEtKcfCSJ_Tg5
$sSa28_unsafeUninitializedCapacity16initializingWithSayxGSi_ySryxGz_SiztKXEtKcfCSS_Tg5
$sSa28_unsafeUninitializedCapacity16initializingWithSayxGSi_ySryxGz_SiztKXEtKcfCSd_Tg5
$sSa28_unsafeUninitializedCapacity16initializingWithSayxGSi_ySryxGz_SiztKXEtKcfCSf_Tg5
$sSa28_unsafeUninitializedCapacity16initializingWithSayxGSi_ySryxGz_SiztKXEtKcfCSi_Tg5
$sSa28_unsafeUninitializedCapacity16initializingWithSayxGSi_ySryxGz_SiztKXEtKcfCSu_Tg5
$sSa28_unsafeUninitializedCapacity16initializingWithSayxGSi_ySryxGz_SiztKXEtKcfCs4Int8V_Tg5
$sSa28_unsafeUninitializedCapacity16initializingWithSayxGSi_ySryxGz_SiztKXEtKcfCs5Int16V_Tg5
$sSa28_unsafeUninitializedCapacity16initializingWithSayxGSi_ySryxGz_SiztKXEtKcfCs5Int32V_Tg5
$sSa28_unsafeUninitializedCapacity16initializingWithSayxGSi_ySryxGz_SiztKXEtKcfCs5Int64V_Tg5
$sSa28_unsafeUninitializedCapacity16initializingWithSayxGSi_ySryxGz_SiztKXEtKcfCs5UInt8V_Tg5
$sSa28_unsafeUninitializedCapacity16initializingWithSayxGSi_ySryxGz_SiztKXEtKcfCs6UInt16V_Tg5
$sSa28_unsafeUninitializedCapacity16initializingWithSayxGSi_ySryxGz_SiztKXEtKcfCs6UInt32V_Tg5
$sSa28_unsafeUninitializedCapacity16initializingWithSayxGSi_ySryxGz_SiztKXEtKcfCs6UInt64V_Tg5
$sSa28_unsafeUninitializedCapacity16initializingWithSayxGSi_ySryxGz_SiztKXEtKcfCs7UnicodeO6ScalarV_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFSJ_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFSS17UnicodeScalarViewV_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFSS8UTF8ViewV_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFSS9UTF16ViewV_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFSS_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFSd_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFSf_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFSi_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFSu_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFs4Int8V_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFs5Int16V_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFs5Int32V_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFs5Int64V_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFs5UInt8V_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFs6UInt16V_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFs6UInt32V_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFs6UInt64V_Tg5
$sSa29_hoistableIsNativeTypeCheckedSbyFs7UnicodeO6ScalarV_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFSJ_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFSS17UnicodeScalarViewV_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFSS8UTF8ViewV_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFSS9UTF16ViewV_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFSS_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFSd_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFSf_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFSi_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFSu_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFs4Int8V_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFs5Int16V_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFs5Int32V_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFs5Int64V_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFs5UInt8V_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFs6UInt16V_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFs6UInt32V_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFs6UInt64V_Tg5
$sSa36_reserveCapacityAssumingUniqueBuffer8oldCountySi_tFs7UnicodeO6ScalarV_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFSJ_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFSS17UnicodeScalarViewV_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFSS8UTF8ViewV_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFSS9UTF16ViewV_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFSS_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFSd_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFSf_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFSi_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFSu_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFs4Int8V_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFs5Int16V_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFs5Int32V_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFs5Int64V_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFs5UInt8V_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFs6UInt16V_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFs6UInt32V_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFs6UInt64V_Tg5
$sSa37_appendElementAssumeUniqueAndCapacity_03newB0ySi_xntFs7UnicodeO6ScalarV_Tg5
$sSa42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__SryxGzKXEKlFSJ_ytSgTg5
$sSa42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__SryxGzKXEKlFSS_ytSgTg5
$sSa42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__SryxGzKXEKlFSd_ytSgTg5
$sSa42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__SryxGzKXEKlFSf_ytSgTg5
$sSa42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__SryxGzKXEKlFSi_ytSgTg5
$sSa42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__SryxGzKXEKlFSu_ytSgTg5
$sSa42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__SryxGzKXEKlFs4Int8V_ytSgTg5
$sSa42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__SryxGzKXEKlFs5Int16V_ytSgTg5
$sSa42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__SryxGzKXEKlFs5Int32V_ytSgTg5
$sSa42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__SryxGzKXEKlFs5Int64V_ytSgTg5
$sSa42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__SryxGzKXEKlFs5UInt8V_ytSgTg5
$sSa42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__SryxGzKXEKlFs6UInt16V_ytSgTg5
$sSa42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__SryxGzKXEKlFs6UInt32V_ytSgTg5
$sSa42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__SryxGzKXEKlFs6UInt64V_ytSgTg5
$sSa42_withUnsafeMutableBufferPointerIfSupportedyqd__Sgqd__SryxGzKXEKlFs7UnicodeO6ScalarV_ytSgTg5
$sSa5countSivgSJ_Tg5
$sSa5countSivgSS17UnicodeScalarViewV_Tg5
$sSa5countSivgSS8UTF8ViewV_Tg5
$sSa5countSivgSS9UTF16ViewV_Tg5
$sSa5countSivgSS_Tg5
$sSa5countSivgSd_Tg5
$sSa5countSivgSf_Tg5
$sSa5countSivgSi_Tg5
$sSa5countSivgSu_Tg5
$sSa5countSivgs4Int8V_Tg5
$sSa5countSivgs5Int16V_Tg5
$sSa5countSivgs5Int32V_Tg5
$sSa5countSivgs5Int64V_Tg5
$sSa5countSivgs5UInt8V_Tg5
$sSa5countSivgs6UInt16V_Tg5
$sSa5countSivgs6UInt32V_Tg5
$sSa5countSivgs6UInt64V_Tg5
$sSa5countSivgs7UnicodeO6ScalarV_Tg5
$sSa6appendyyxnFSJ_Tg5
$sSa6appendyyxnFSS17UnicodeScalarViewV_Tg5
$sSa6appendyyxnFSS8UTF8ViewV_Tg5
$sSa6appendyyxnFSS9UTF16ViewV_Tg5
$sSa6appendyyxnFSS_Tg5
$sSa6appendyyxnFSd_Tg5
$sSa6appendyyxnFSf_Tg5
$sSa6appendyyxnFSi_Tg5
$sSa6appendyyxnFSu_Tg5
$sSa6appendyyxnFs4Int8V_Tg5
$sSa6appendyyxnFs5Int16V_Tg5
$sSa6appendyyxnFs5Int32V_Tg5
$sSa6appendyyxnFs5Int64V_Tg5
$sSa6appendyyxnFs5UInt8V_Tg5
$sSa6appendyyxnFs6UInt16V_Tg5
$sSa6appendyyxnFs6UInt32V_Tg5
$sSa6appendyyxnFs6UInt64V_Tg5
$sSa6appendyyxnFs7UnicodeO6ScalarV_Tg5
$sSa8capacitySivgSJ_Tg5
$sSa8capacitySivgSS17UnicodeScalarViewV_Tg5
$sSa8capacitySivgSS8UTF8ViewV_Tg5
$sSa8capacitySivgSS9UTF16ViewV_Tg5
$sSa8capacitySivgSS_Tg5
$sSa8capacitySivgSd_Tg5
$sSa8capacitySivgSf_Tg5
$sSa8capacitySivgSi_Tg5
$sSa8capacitySivgSu_Tg5
$sSa8capacitySivgs4Int8V_Tg5
$sSa8capacitySivgs5Int16V_Tg5
$sSa8capacitySivgs5Int32V_Tg5
$sSa8capacitySivgs5Int64V_Tg5
$sSa8capacitySivgs5UInt8V_Tg5
$sSa8capacitySivgs6UInt16V_Tg5
$sSa8capacitySivgs6UInt32V_Tg5
$sSa8capacitySivgs6UInt64V_Tg5
$sSa8capacitySivgs7UnicodeO6ScalarV_Tg5
$sSa8endIndexSivgSJ_Tg5
$sSa8endIndexSivgSS17UnicodeScalarViewV_Tg5
$sSa8endIndexSivgSS8UTF8ViewV_Tg5
$sSa8endIndexSivgSS9UTF16ViewV_Tg5
$sSa8endIndexSivgSS_Tg5
$sSa8endIndexSivgSd_Tg5
$sSa8endIndexSivgSf_Tg5
$sSa8endIndexSivgSi_Tg5
$sSa8endIndexSivgSu_Tg5
$sSa8endIndexSivgs4Int8V_Tg5
$sSa8endIndexSivgs5Int16V_Tg5
$sSa8endIndexSivgs5Int32V_Tg5
$sSa8endIndexSivgs5Int64V_Tg5
$sSa8endIndexSivgs5UInt8V_Tg5
$sSa8endIndexSivgs6UInt16V_Tg5
$sSa8endIndexSivgs6UInt32V_Tg5
$sSa8endIndexSivgs6UInt64V_Tg5
$sSa8endIndexSivgs7UnicodeO6ScalarV_Tg5
$sSa9_getCountSiyFSJ_Tg5
$sSa9_getCountSiyFSS17UnicodeScalarViewV_Tg5
$sSa9_getCountSiyFSS8UTF8ViewV_Tg5
$sSa9_getCountSiyFSS9UTF16ViewV_Tg5
$sSa9_getCountSiyFSS_Tg5
$sSa9_getCountSiyFSd_Tg5
$sSa9_getCountSiyFSf_Tg5
$sSa9_getCountSiyFSi_Tg5
$sSa9_getCountSiyFSu_Tg5
$sSa9_getCountSiyFs4Int8V_Tg5
$sSa9_getCountSiyFs5Int16V_Tg5
$sSa9_getCountSiyFs5Int32V_Tg5
$sSa9_getCountSiyFs5Int64V_Tg5
$sSa9_getCountSiyFs5UInt8V_Tg5
$sSa9_getCountSiyFs6UInt16V_Tg5
$sSa9_getCountSiyFs6UInt32V_Tg5
$sSa9_getCountSiyFs6UInt64V_Tg5
$sSa9_getCountSiyFs7UnicodeO6ScalarV_Tg5
$sSa9formIndex5afterySiz_tFSJ_Tg5
$sSa9formIndex5afterySiz_tFSS17UnicodeScalarViewV_Tg5
$sSa9formIndex5afterySiz_tFSS8UTF8ViewV_Tg5
$sSa9formIndex5afterySiz_tFSS9UTF16ViewV_Tg5
$sSa9formIndex5afterySiz_tFSS_Tg5
$sSa9formIndex5afterySiz_tFSd_Tg5
$sSa9formIndex5afterySiz_tFSf_Tg5
$sSa9formIndex5afterySiz_tFSi_Tg5
$sSa9formIndex5afterySiz_tFSu_Tg5
$sSa9formIndex5afterySiz_tFs4Int8V_Tg5
$sSa9formIndex5afterySiz_tFs5Int16V_Tg5
$sSa9formIndex5afterySiz_tFs5Int32V_Tg5
$sSa9formIndex5afterySiz_tFs5Int64V_Tg5
$sSa9formIndex5afterySiz_tFs5UInt8V_Tg5
$sSa9formIndex5afterySiz_tFs6UInt16V_Tg5
$sSa9formIndex5afterySiz_tFs6UInt32V_Tg5
$sSa9formIndex5afterySiz_tFs6UInt64V_Tg5
$sSa9formIndex5afterySiz_tFs7UnicodeO6ScalarV_Tg5
$sSa9formIndex6beforeySiz_tFSJ_Tg5
$sSa9formIndex6beforeySiz_tFSS17UnicodeScalarViewV_Tg5
$sSa9formIndex6beforeySiz_tFSS8UTF8ViewV_Tg5
$sSa9formIndex6beforeySiz_tFSS9UTF16ViewV_Tg5
$sSa9formIndex6beforeySiz_tFSS_Tg5
$sSa9formIndex6beforeySiz_tFSd_Tg5
$sSa9formIndex6beforeySiz_tFSf_Tg5
$sSa9formIndex6beforeySiz_tFSi_Tg5
$sSa9formIndex6beforeySiz_tFSu_Tg5
$sSa9formIndex6beforeySiz_tFs4Int8V_Tg5
$sSa9formIndex6beforeySiz_tFs5Int16V_Tg5
$sSa9formIndex6beforeySiz_tFs5Int32V_Tg5
$sSa9formIndex6beforeySiz_tFs5Int64V_Tg5
$sSa9formIndex6beforeySiz_tFs5UInt8V_Tg5
$sSa9formIndex6beforeySiz_tFs6UInt16V_Tg5
$sSa9formIndex6beforeySiz_tFs6UInt32V_Tg5
$sSa9formIndex6beforeySiz_tFs6UInt64V_Tg5
$sSa9formIndex6beforeySiz_tFs7UnicodeO6ScalarV_Tg5
$sSa9removeAll15keepingCapacityySb_tFSJ_Tg5
$sSa9removeAll15keepingCapacityySb_tFSS17UnicodeScalarViewV_Tg5
$sSa9removeAll15keepingCapacityySb_tFSS8UTF8ViewV_Tg5
$sSa9removeAll15keepingCapacityySb_tFSS9UTF16ViewV_Tg5
$sSa9removeAll15keepingCapacityySb_tFSS_Tg5
$sSa9removeAll15keepingCapacityySb_tFSd_Tg5
$sSa9removeAll15keepingCapacityySb_tFSf_Tg5
$sSa9removeAll15keepingCapacityySb_tFSi_Tg5
$sSa9removeAll15keepingCapacityySb_tFSu_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_SJ_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_SS17UnicodeScalarViewV_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_SS8UTF8ViewV_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_SS9UTF16ViewV_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_SS_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_Sd_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_Sf_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_Si_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_Su_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_s4Int8V_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_s5Int16V_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_s5Int32V_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_s5Int64V_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_s5UInt8V_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_s6UInt16V_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_s6UInt32V_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_s6UInt64V_Tg5
$sSa9removeAll15keepingCapacityySb_tFfA_s7UnicodeO6ScalarV_Tg5
$sSa9removeAll15keepingCapacityySb_tFs4Int8V_Tg5
$sSa9removeAll15keepingCapacityySb_tFs5Int16V_Tg5
$sSa9removeAll15keepingCapacityySb_tFs5Int32V_Tg5
$sSa9removeAll15keepingCapacityySb_tFs5Int64V_Tg5
$sSa9removeAll15keepingCapacityySb_tFs5UInt8V_Tg5
$sSa9removeAll15keepingCapacityySb_tFs6UInt16V_Tg5
$sSa9removeAll15keepingCapacityySb_tFs6UInt32V_Tg5
$sSa9removeAll15keepingCapacityySb_tFs6UInt64V_Tg5
$sSa9removeAll15keepingCapacityySb_tFs7UnicodeO6ScalarV_Tg5
$sSa9repeating5countSayxGx_SitcfCSJ_Tg5
$sSa9repeating5countSayxGx_SitcfCSS17UnicodeScalarViewV_Tg5
$sSa9repeating5countSayxGx_SitcfCSS8UTF8ViewV_Tg5
$sSa9repeating5countSayxGx_SitcfCSS9UTF16ViewV_Tg5
$sSa9repeating5countSayxGx_SitcfCSS_Tg5
$sSa9repeating5countSayxGx_SitcfCSd_Tg5
$sSa9repeating5countSayxGx_SitcfCSf_Tg5
$sSa9repeating5countSayxGx_SitcfCSi_Tg5
$sSa9repeating5countSayxGx_SitcfCSu_Tg5
$sSa9repeating5countSayxGx_SitcfCs4Int8V_Tg5
$sSa9repeating5countSayxGx_SitcfCs5Int16V_Tg5
$sSa9repeating5countSayxGx_SitcfCs5Int32V_Tg5
$sSa9repeating5countSayxGx_SitcfCs5Int64V_Tg5
$sSa9repeating5countSayxGx_SitcfCs5UInt8V_Tg5
$sSa9repeating5countSayxGx_SitcfCs6UInt16V_Tg5
$sSa9repeating5countSayxGx_SitcfCs6UInt32V_Tg5
$sSa9repeating5countSayxGx_SitcfCs6UInt64V_Tg5
$sSa9repeating5countSayxGx_SitcfCs7UnicodeO6ScalarV_Tg5
$sSayxSiciMSJ_Tg5
$sSayxSiciMSS17UnicodeScalarViewV_Tg5
$sSayxSiciMSS8UTF8ViewV_Tg5
$sSayxSiciMSS9UTF16ViewV_Tg5
$sSayxSiciMSS_Tg5
$sSayxSiciMSd_Tg5
$sSayxSiciMSf_Tg5
$sSayxSiciMSi_Tg5
$sSayxSiciMSu_Tg5
$sSayxSiciMs4Int8V_Tg5
$sSayxSiciMs5Int16V_Tg5
$sSayxSiciMs5Int32V_Tg5
$sSayxSiciMs5Int64V_Tg5
$sSayxSiciMs5UInt8V_Tg5
$sSayxSiciMs6UInt16V_Tg5
$sSayxSiciMs6UInt32V_Tg5
$sSayxSiciMs6UInt64V_Tg5
$sSayxSiciMs7UnicodeO6ScalarV_Tg5
$sSayxSicigSJ_Tg5
$sSayxSicigSS17UnicodeScalarViewV_Tg5
$sSayxSicigSS8UTF8ViewV_Tg5
$sSayxSicigSS9UTF16ViewV_Tg5
$sSayxSicigSS_Tg5
$sSayxSicigSd_Tg5
$sSayxSicigSf_Tg5
$sSayxSicigSi_Tg5
$sSayxSicigSu_Tg5
$sSayxSicigs4Int8V_Tg5
$sSayxSicigs5Int16V_Tg5
$sSayxSicigs5Int32V_Tg5
$sSayxSicigs5Int64V_Tg5
$sSayxSicigs5UInt8V_Tg5
$sSayxSicigs6UInt16V_Tg5
$sSayxSicigs6UInt32V_Tg5
$sSayxSicigs6UInt64V_Tg5
$sSayxSicigs7UnicodeO6ScalarV_Tg5
$sSayxSicirSJ_Tg5
$sSayxSicirSS17UnicodeScalarViewV_Tg5
$sSayxSicirSS8UTF8ViewV_Tg5
$sSayxSicirSS9UTF16ViewV_Tg5
$sSayxSicirSS_Tg5
$sSayxSicirSd_Tg5
$sSayxSicirSf_Tg5
$sSayxSicirSi_Tg5
$sSayxSicirSu_Tg5
$sSayxSicirs4Int8V_Tg5
$sSayxSicirs5Int16V_Tg5
$sSayxSicirs5Int32V_Tg5
$sSayxSicirs5Int64V_Tg5
$sSayxSicirs5UInt8V_Tg5
$sSayxSicirs6UInt16V_Tg5
$sSayxSicirs6UInt32V_Tg5
$sSayxSicirs6UInt64V_Tg5
$sSayxSicirs7UnicodeO6ScalarV_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tFs12_ArrayBufferVySJG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tFs12_ArrayBufferVySSG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tFs12_ArrayBufferVySdG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tFs12_ArrayBufferVySfG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tFs12_ArrayBufferVySiG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tFs12_ArrayBufferVySuG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tFs12_ArrayBufferVys4Int8VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tFs12_ArrayBufferVys5Int16VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tFs12_ArrayBufferVys5Int32VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tFs12_ArrayBufferVys5Int64VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tFs12_ArrayBufferVys5UInt8VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tFs12_ArrayBufferVys6UInt16VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tFs12_ArrayBufferVys6UInt32VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tFs12_ArrayBufferVys6UInt64VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tFs12_ArrayBufferVys7UnicodeO6ScalarVG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSaySJG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSaySSG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSaySdG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSaySfG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSaySiG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSaySuG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSays4Int8VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSays5Int16VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSays5Int32VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSays5Int64VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSays5UInt8VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSays6UInt16VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSays6UInt32VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSays6UInt64VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgSays7UnicodeO6ScalarVG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVySJG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVySS17UnicodeScalarViewVG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVySS8UTF8ViewVG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVySS9UTF16ViewVG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVySSG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVySdG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVySfG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVySiG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVySuG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVys4Int8VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVys5Int16VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVys5Int32VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVys5Int64VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVys5UInt8VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVys6UInt16VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVys6UInt32VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVys6UInt64VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs12_ArrayBufferVys7UnicodeO6ScalarVG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs15ContiguousArrayVySJG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs15ContiguousArrayVySSG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs15ContiguousArrayVySdG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs15ContiguousArrayVySfG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs15ContiguousArrayVySiG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs15ContiguousArrayVySuG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs15ContiguousArrayVys4Int8VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs15ContiguousArrayVys5Int16VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs15ContiguousArrayVys5Int32VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs15ContiguousArrayVys5Int64VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs15ContiguousArrayVys5UInt8VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs15ContiguousArrayVys6UInt16VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs15ContiguousArrayVys6UInt32VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs15ContiguousArrayVys6UInt64VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs15ContiguousArrayVys7UnicodeO6ScalarVG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs22_ContiguousArrayBufferVySJG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs22_ContiguousArrayBufferVySSG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs22_ContiguousArrayBufferVySdG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs22_ContiguousArrayBufferVySfG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs22_ContiguousArrayBufferVySiG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs22_ContiguousArrayBufferVySuG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs22_ContiguousArrayBufferVys4Int8VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs22_ContiguousArrayBufferVys5Int16VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs22_ContiguousArrayBufferVys5Int32VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs22_ContiguousArrayBufferVys5Int64VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs22_ContiguousArrayBufferVys5UInt8VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs22_ContiguousArrayBufferVys6UInt16VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs22_ContiguousArrayBufferVys6UInt32VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs22_ContiguousArrayBufferVys6UInt64VG_Tg5
$sSksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE7indicesACvgs22_ContiguousArrayBufferVys7UnicodeO6ScalarVG_Tg5
$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFSnySiG_Tg5
$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFs12_ArrayBufferVySJG_Tg5
$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFs12_ArrayBufferVySSG_Tg5
$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFs12_ArrayBufferVySdG_Tg5
$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFs12_ArrayBufferVySfG_Tg5
$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFs12_ArrayBufferVySiG_Tg5
$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFs12_ArrayBufferVySuG_Tg5
$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFs12_ArrayBufferVys4Int8VG_Tg5
$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFs12_ArrayBufferVys5Int16VG_Tg5
$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFs12_ArrayBufferVys5Int32VG_Tg5
$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFs12_ArrayBufferVys5Int64VG_Tg5
$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFs12_ArrayBufferVys5UInt8VG_Tg5
$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFs12_ArrayBufferVys6UInt16VG_Tg5
$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFs12_ArrayBufferVys6UInt32VG_Tg5
$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFs12_ArrayBufferVys6UInt64VG_Tg5
$sSlsE20_failEarlyRangeCheck_6boundsy5IndexQz_SnyADGtFs12_ArrayBufferVys7UnicodeO6ScalarVG_Tg5
$sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyFSNySiG_Tg5
$sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyFSnySiG_Tg5
$sSn15uncheckedBoundsSnyxGx5lower_x5uppert_tcfCSi_Tg5
$sSn8containsySbxFSi_Tg5
$sSnsSxRzSZ6StrideRpzrlE10startIndexxvgSi_Tg5
$sSnsSxRzSZ6StrideRpzrlE5index5afterxx_tFSi_Tg5
$sSnsSxRzSZ6StrideRpzrlE8endIndexxvgSi_Tg5
$sSnsSxRzSZ6StrideRpzrlEyxxcirSi_Tg5
$ss12_ArrayBufferV013requestNativeB0s011_ContiguousaB0VyxGSgyFSJ_Tg5
$ss12_ArrayBufferV013requestNativeB0s011_ContiguousaB0VyxGSgyFSS_Tg5
$ss12_ArrayBufferV013requestNativeB0s011_ContiguousaB0VyxGSgyFSd_Tg5
$ss12_ArrayBufferV013requestNativeB0s011_ContiguousaB0VyxGSgyFSf_Tg5
$ss12_ArrayBufferV013requestNativeB0s011_ContiguousaB0VyxGSgyFSi_Tg5
$ss12_ArrayBufferV013requestNativeB0s011_ContiguousaB0VyxGSgyFSu_Tg5
$ss12_ArrayBufferV013requestNativeB0s011_ContiguousaB0VyxGSgyFs4Int8V_Tg5
$ss12_ArrayBufferV013requestNativeB0s011_ContiguousaB0VyxGSgyFs5Int16V_Tg5
$ss12_ArrayBufferV013requestNativeB0s011_ContiguousaB0VyxGSgyFs5Int32V_Tg5
$ss12_ArrayBufferV013requestNativeB0s011_ContiguousaB0VyxGSgyFs5Int64V_Tg5
$ss12_ArrayBufferV013requestNativeB0s011_ContiguousaB0VyxGSgyFs5UInt8V_Tg5
$ss12_ArrayBufferV013requestNativeB0s011_ContiguousaB0VyxGSgyFs6UInt16V_Tg5
$ss12_ArrayBufferV013requestNativeB0s011_ContiguousaB0VyxGSgyFs6UInt32V_Tg5
$ss12_ArrayBufferV013requestNativeB0s011_ContiguousaB0VyxGSgyFs6UInt64V_Tg5
$ss12_ArrayBufferV013requestNativeB0s011_ContiguousaB0VyxGSgyFs7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFSJ_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFSS17UnicodeScalarViewV_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFSS8UTF8ViewV_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFSS9UTF16ViewV_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFSS_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFSd_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFSf_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFSi_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFSu_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFs4Int8V_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFs5Int16V_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFs5Int32V_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFs5Int64V_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFs5UInt8V_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFs6UInt16V_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFs6UInt32V_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFs6UInt64V_Tg5
$ss12_ArrayBufferV027requestUniqueMutableBackingB015minimumCapacitys011_ContiguousaB0VyxGSgSi_tFs7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgSJ_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgSS17UnicodeScalarViewV_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgSS8UTF8ViewV_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgSS9UTF16ViewV_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgSS_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgSd_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgSf_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgSi_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgSu_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgs4Int8V_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgs5Int16V_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgs5Int32V_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgs5Int64V_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgs5UInt8V_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgs6UInt16V_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgs6UInt32V_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgs6UInt64V_Tg5
$ss12_ArrayBufferV10_nonNatives06_CocoaA7WrapperVvgs7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFSJ_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFSS17UnicodeScalarViewV_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFSS8UTF8ViewV_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFSS9UTF16ViewV_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFSS_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFSd_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFSf_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFSi_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFSu_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFs4Int8V_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFs5Int16V_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFs5Int32V_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFs5Int64V_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFs5UInt8V_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFs6UInt16V_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFs6UInt32V_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFs6UInt64V_Tg5
$ss12_ArrayBufferV10_typeCheckyySnySiGFs7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferV10startIndexSivgSJ_Tg5
$ss12_ArrayBufferV10startIndexSivgSS17UnicodeScalarViewV_Tg5
$ss12_ArrayBufferV10startIndexSivgSS8UTF8ViewV_Tg5
$ss12_ArrayBufferV10startIndexSivgSS9UTF16ViewV_Tg5
$ss12_ArrayBufferV10startIndexSivgSS_Tg5
$ss12_ArrayBufferV10startIndexSivgSd_Tg5
$ss12_ArrayBufferV10startIndexSivgSf_Tg5
$ss12_ArrayBufferV10startIndexSivgSi_Tg5
$ss12_ArrayBufferV10startIndexSivgSu_Tg5
$ss12_ArrayBufferV10startIndexSivgs4Int8V_Tg5
$ss12_ArrayBufferV10startIndexSivgs5Int16V_Tg5
$ss12_ArrayBufferV10startIndexSivgs5Int32V_Tg5
$ss12_ArrayBufferV10startIndexSivgs5Int64V_Tg5
$ss12_ArrayBufferV10startIndexSivgs5UInt8V_Tg5
$ss12_ArrayBufferV10startIndexSivgs6UInt16V_Tg5
$ss12_ArrayBufferV10startIndexSivgs6UInt32V_Tg5
$ss12_ArrayBufferV10startIndexSivgs6UInt64V_Tg5
$ss12_ArrayBufferV10startIndexSivgs7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFSJ_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFSS17UnicodeScalarViewV_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFSS8UTF8ViewV_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFSS9UTF16ViewV_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFSS_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFSd_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFSf_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFSi_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFSu_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs4Int8V_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs5Int16V_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs5Int32V_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs5Int64V_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs5UInt8V_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs6UInt16V_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs6UInt32V_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs6UInt64V_Tg5
$ss12_ArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFSJ_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFSS17UnicodeScalarViewV_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFSS8UTF8ViewV_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFSS9UTF16ViewV_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFSS_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFSd_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFSf_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFSi_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFSu_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFs4Int8V_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFs5Int16V_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFs5Int32V_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFs5Int64V_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFs5UInt8V_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFs6UInt16V_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFs6UInt32V_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFs6UInt64V_Tg5
$ss12_ArrayBufferV19_getElementSlowPathyyXlSiFs7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgSJ_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgSS17UnicodeScalarViewV_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgSS8UTF8ViewV_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgSS9UTF16ViewV_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgSS_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgSd_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgSf_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgSi_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgSu_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgs4Int8V_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgs5Int16V_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgs5Int32V_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgs5Int64V_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgs5UInt8V_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgs6UInt16V_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgs6UInt32V_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgs6UInt64V_Tg5
$ss12_ArrayBufferV19firstElementAddressSpyxGvgs7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFSJ_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFSS17UnicodeScalarViewV_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFSS8UTF8ViewV_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFSS9UTF16ViewV_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFSS_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFSd_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFSf_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFSi_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFSu_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFs4Int8V_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFs5Int16V_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFs5Int32V_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFs5Int64V_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFs5UInt8V_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFs6UInt16V_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFs6UInt32V_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFs6UInt64V_Tg5
$ss12_ArrayBufferV20isUniquelyReferencedSbyFs7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFSJ_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFSS17UnicodeScalarViewV_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFSS8UTF8ViewV_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFSS9UTF16ViewV_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFSS_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFSd_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFSf_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFSi_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFSu_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFs4Int8V_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFs5Int16V_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFs5Int32V_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFs5Int64V_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFs5UInt8V_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFs6UInt16V_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFs6UInt32V_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFs6UInt64V_Tg5
$ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtFs7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferV5countSivsSJ_Tg5
$ss12_ArrayBufferV5countSivsSS17UnicodeScalarViewV_Tg5
$ss12_ArrayBufferV5countSivsSS8UTF8ViewV_Tg5
$ss12_ArrayBufferV5countSivsSS9UTF16ViewV_Tg5
$ss12_ArrayBufferV5countSivsSS_Tg5
$ss12_ArrayBufferV5countSivsSd_Tg5
$ss12_ArrayBufferV5countSivsSf_Tg5
$ss12_ArrayBufferV5countSivsSi_Tg5
$ss12_ArrayBufferV5countSivsSu_Tg5
$ss12_ArrayBufferV5countSivss4Int8V_Tg5
$ss12_ArrayBufferV5countSivss5Int16V_Tg5
$ss12_ArrayBufferV5countSivss5Int32V_Tg5
$ss12_ArrayBufferV5countSivss5Int64V_Tg5
$ss12_ArrayBufferV5countSivss5UInt8V_Tg5
$ss12_ArrayBufferV5countSivss6UInt16V_Tg5
$ss12_ArrayBufferV5countSivss6UInt32V_Tg5
$ss12_ArrayBufferV5countSivss6UInt64V_Tg5
$ss12_ArrayBufferV5countSivss7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCSJ_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCSS17UnicodeScalarViewV_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCSS8UTF8ViewV_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCSS9UTF16ViewV_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCSS_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCSd_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCSf_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCSi_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCSu_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCs4Int8V_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCs5Int16V_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCs5Int32V_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCs5Int64V_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCs5UInt8V_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCs6UInt16V_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCs6UInt32V_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCs6UInt64V_Tg5
$ss12_ArrayBufferV7_buffer19shiftedToStartIndexAByxGs011_ContiguousaB0VyxG_SitcfCs7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgSJ_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgSS17UnicodeScalarViewV_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgSS8UTF8ViewV_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgSS9UTF16ViewV_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgSS_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgSd_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgSf_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgSi_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgSu_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgs4Int8V_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgs5Int16V_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgs5Int32V_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgs5Int64V_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgs5UInt8V_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgs6UInt16V_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgs6UInt32V_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgs6UInt64V_Tg5
$ss12_ArrayBufferV7_natives011_ContiguousaB0VyxGvgs7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferV8capacitySivgSJ_Tg5
$ss12_ArrayBufferV8capacitySivgSS17UnicodeScalarViewV_Tg5
$ss12_ArrayBufferV8capacitySivgSS8UTF8ViewV_Tg5
$ss12_ArrayBufferV8capacitySivgSS9UTF16ViewV_Tg5
$ss12_ArrayBufferV8capacitySivgSS_Tg5
$ss12_ArrayBufferV8capacitySivgSd_Tg5
$ss12_ArrayBufferV8capacitySivgSf_Tg5
$ss12_ArrayBufferV8capacitySivgSi_Tg5
$ss12_ArrayBufferV8capacitySivgSu_Tg5
$ss12_ArrayBufferV8capacitySivgs4Int8V_Tg5
$ss12_ArrayBufferV8capacitySivgs5Int16V_Tg5
$ss12_ArrayBufferV8capacitySivgs5Int32V_Tg5
$ss12_ArrayBufferV8capacitySivgs5Int64V_Tg5
$ss12_ArrayBufferV8capacitySivgs5UInt8V_Tg5
$ss12_ArrayBufferV8capacitySivgs6UInt16V_Tg5
$ss12_ArrayBufferV8capacitySivgs6UInt32V_Tg5
$ss12_ArrayBufferV8capacitySivgs6UInt64V_Tg5
$ss12_ArrayBufferV8capacitySivgs7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferV8endIndexSivgSJ_Tg5
$ss12_ArrayBufferV8endIndexSivgSS17UnicodeScalarViewV_Tg5
$ss12_ArrayBufferV8endIndexSivgSS8UTF8ViewV_Tg5
$ss12_ArrayBufferV8endIndexSivgSS9UTF16ViewV_Tg5
$ss12_ArrayBufferV8endIndexSivgSS_Tg5
$ss12_ArrayBufferV8endIndexSivgSd_Tg5
$ss12_ArrayBufferV8endIndexSivgSf_Tg5
$ss12_ArrayBufferV8endIndexSivgSi_Tg5
$ss12_ArrayBufferV8endIndexSivgSu_Tg5
$ss12_ArrayBufferV8endIndexSivgs4Int8V_Tg5
$ss12_ArrayBufferV8endIndexSivgs5Int16V_Tg5
$ss12_ArrayBufferV8endIndexSivgs5Int32V_Tg5
$ss12_ArrayBufferV8endIndexSivgs5Int64V_Tg5
$ss12_ArrayBufferV8endIndexSivgs5UInt8V_Tg5
$ss12_ArrayBufferV8endIndexSivgs6UInt16V_Tg5
$ss12_ArrayBufferV8endIndexSivgs6UInt32V_Tg5
$ss12_ArrayBufferV8endIndexSivgs6UInt64V_Tg5
$ss12_ArrayBufferV8endIndexSivgs7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferV9_isNativeSbvgSJ_Tg5
$ss12_ArrayBufferV9_isNativeSbvgSS17UnicodeScalarViewV_Tg5
$ss12_ArrayBufferV9_isNativeSbvgSS8UTF8ViewV_Tg5
$ss12_ArrayBufferV9_isNativeSbvgSS9UTF16ViewV_Tg5
$ss12_ArrayBufferV9_isNativeSbvgSS_Tg5
$ss12_ArrayBufferV9_isNativeSbvgSd_Tg5
$ss12_ArrayBufferV9_isNativeSbvgSf_Tg5
$ss12_ArrayBufferV9_isNativeSbvgSi_Tg5
$ss12_ArrayBufferV9_isNativeSbvgSu_Tg5
$ss12_ArrayBufferV9_isNativeSbvgs4Int8V_Tg5
$ss12_ArrayBufferV9_isNativeSbvgs5Int16V_Tg5
$ss12_ArrayBufferV9_isNativeSbvgs5Int32V_Tg5
$ss12_ArrayBufferV9_isNativeSbvgs5Int64V_Tg5
$ss12_ArrayBufferV9_isNativeSbvgs5UInt8V_Tg5
$ss12_ArrayBufferV9_isNativeSbvgs6UInt16V_Tg5
$ss12_ArrayBufferV9_isNativeSbvgs6UInt32V_Tg5
$ss12_ArrayBufferV9_isNativeSbvgs6UInt64V_Tg5
$ss12_ArrayBufferV9_isNativeSbvgs7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferVyxSicigSJ_Tg5
$ss12_ArrayBufferVyxSicigSS_Tg5
$ss12_ArrayBufferVyxSicigSd_Tg5
$ss12_ArrayBufferVyxSicigSf_Tg5
$ss12_ArrayBufferVyxSicigSi_Tg5
$ss12_ArrayBufferVyxSicigSu_Tg5
$ss12_ArrayBufferVyxSicigs4Int8V_Tg5
$ss12_ArrayBufferVyxSicigs5Int16V_Tg5
$ss12_ArrayBufferVyxSicigs5Int32V_Tg5
$ss12_ArrayBufferVyxSicigs5Int64V_Tg5
$ss12_ArrayBufferVyxSicigs5UInt8V_Tg5
$ss12_ArrayBufferVyxSicigs6UInt16V_Tg5
$ss12_ArrayBufferVyxSicigs6UInt32V_Tg5
$ss12_ArrayBufferVyxSicigs6UInt64V_Tg5
$ss12_ArrayBufferVyxSicigs7UnicodeO6ScalarV_Tg5
$ss12_ArrayBufferVyxSicirSJ_Tg5
$ss12_ArrayBufferVyxSicirSS_Tg5
$ss12_ArrayBufferVyxSicirSd_Tg5
$ss12_ArrayBufferVyxSicirSf_Tg5
$ss12_ArrayBufferVyxSicirSi_Tg5
$ss12_ArrayBufferVyxSicirSu_Tg5
$ss12_ArrayBufferVyxSicirs4Int8V_Tg5
$ss12_ArrayBufferVyxSicirs5Int16V_Tg5
$ss12_ArrayBufferVyxSicirs5Int32V_Tg5
$ss12_ArrayBufferVyxSicirs5Int64V_Tg5
$ss12_ArrayBufferVyxSicirs5UInt8V_Tg5
$ss12_ArrayBufferVyxSicirs6UInt16V_Tg5
$ss12_ArrayBufferVyxSicirs6UInt32V_Tg5
$ss12_ArrayBufferVyxSicirs6UInt64V_Tg5
$ss12_ArrayBufferVyxSicirs7UnicodeO6ScalarV_Tg5
$ss16IndexingIteratorV4next7ElementQzSgyFSNySiG_Tg5
$ss16IndexingIteratorV4next7ElementQzSgyFSnySiG_Tg5
$ss22_ContiguousArrayBufferV10startIndexSivgSJ_Tg5
$ss22_ContiguousArrayBufferV10startIndexSivgSS_Tg5
$ss22_ContiguousArrayBufferV10startIndexSivgSd_Tg5
$ss22_ContiguousArrayBufferV10startIndexSivgSf_Tg5
$ss22_ContiguousArrayBufferV10startIndexSivgSi_Tg5
$ss22_ContiguousArrayBufferV10startIndexSivgSu_Tg5
$ss22_ContiguousArrayBufferV10startIndexSivgs4Int8V_Tg5
$ss22_ContiguousArrayBufferV10startIndexSivgs5Int16V_Tg5
$ss22_ContiguousArrayBufferV10startIndexSivgs5Int32V_Tg5
$ss22_ContiguousArrayBufferV10startIndexSivgs5Int64V_Tg5
$ss22_ContiguousArrayBufferV10startIndexSivgs5UInt8V_Tg5
$ss22_ContiguousArrayBufferV10startIndexSivgs6UInt16V_Tg5
$ss22_ContiguousArrayBufferV10startIndexSivgs6UInt32V_Tg5
$ss22_ContiguousArrayBufferV10startIndexSivgs6UInt64V_Tg5
$ss22_ContiguousArrayBufferV10startIndexSivgs7UnicodeO6ScalarV_Tg5
$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFSJ_Tg5
$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFSS_Tg5
$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFSd_Tg5
$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFSf_Tg5
$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFSi_Tg5
$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFSu_Tg5
$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs4Int8V_Tg5
$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs5Int16V_Tg5
$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs5Int32V_Tg5
$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs5Int64V_Tg5
$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs5UInt8V_Tg5
$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs6UInt16V_Tg5
$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs6UInt32V_Tg5
$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs6UInt64V_Tg5
$ss22_ContiguousArrayBufferV13_copyContents8subRange12initializingSpyxGSnySiG_AFtFs7UnicodeO6ScalarV_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFSJ_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFSS17UnicodeScalarViewV_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFSS8UTF8ViewV_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFSS9UTF16ViewV_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFSS_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFSd_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFSf_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFSi_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFSu_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFs4Int8V_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFs5Int16V_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFs5Int32V_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFs5Int64V_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFs5UInt8V_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFs6UInt16V_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFs6UInt32V_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFs6UInt64V_Tg5
$ss22_ContiguousArrayBufferV18_initStorageHeader5count8capacityySi_SitFs7UnicodeO6ScalarV_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgSJ_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgSS17UnicodeScalarViewV_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgSS8UTF8ViewV_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgSS9UTF16ViewV_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgSS_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgSd_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgSf_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgSi_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgSu_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgs4Int8V_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgs5Int16V_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgs5Int32V_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgs5Int64V_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgs5UInt8V_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgs6UInt16V_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgs6UInt32V_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgs6UInt64V_Tg5
$ss22_ContiguousArrayBufferV19firstElementAddressSpyxGvgs7UnicodeO6ScalarV_Tg5
$ss22_ContiguousArrayBufferV5countSivgSJ_Tg5
$ss22_ContiguousArrayBufferV5countSivgSS17UnicodeScalarViewV_Tg5
$ss22_ContiguousArrayBufferV5countSivgSS8UTF8ViewV_Tg5
$ss22_ContiguousArrayBufferV5countSivgSS9UTF16ViewV_Tg5
$ss22_ContiguousArrayBufferV5countSivgSS_Tg5
$ss22_ContiguousArrayBufferV5countSivgSd_Tg5
$ss22_ContiguousArrayBufferV5countSivgSf_Tg5
$ss22_ContiguousArrayBufferV5countSivgSi_Tg5
$ss22_ContiguousArrayBufferV5countSivgSu_Tg5
$ss22_ContiguousArrayBufferV5countSivgs4Int8V_Tg5
$ss22_ContiguousArrayBufferV5countSivgs5Int16V_Tg5
$ss22_ContiguousArrayBufferV5countSivgs5Int32V_Tg5
$ss22_ContiguousArrayBufferV5countSivgs5Int64V_Tg5
$ss22_ContiguousArrayBufferV5countSivgs5UInt8V_Tg5
$ss22_ContiguousArrayBufferV5countSivgs6UInt16V_Tg5
$ss22_ContiguousArrayBufferV5countSivgs6UInt32V_Tg5
$ss22_ContiguousArrayBufferV5countSivgs6UInt64V_Tg5
$ss22_ContiguousArrayBufferV5countSivgs7UnicodeO6ScalarV_Tg5
$ss22_ContiguousArrayBufferV7_buffer19shiftedToStartIndexAByxGAE_SitcfCSJ_Tg5
$ss22_ContiguousArrayBufferV7_buffer19shiftedToStartIndexAByxGAE_SitcfCSS_Tg5
$ss22_ContiguousArrayBufferV7_buffer19shiftedToStartIndexAByxGAE_SitcfCSd_Tg5
$ss22_ContiguousArrayBufferV7_buffer19shiftedToStartIndexAByxGAE_SitcfCSf_Tg5
$ss22_ContiguousArrayBufferV7_buffer19shiftedToStartIndexAByxGAE_SitcfCSi_Tg5
$ss22_ContiguousArrayBufferV7_buffer19shiftedToStartIndexAByxGAE_SitcfCSu_Tg5
$ss22_ContiguousArrayBufferV7_buffer19shiftedToStartIndexAByxGAE_SitcfCs4Int8V_Tg5
$ss22_ContiguousArrayBufferV7_buffer19shiftedToStartIndexAByxGAE_SitcfCs5Int16V_Tg5
$ss22_ContiguousArrayBufferV7_buffer19shiftedToStartIndexAByxGAE_SitcfCs5Int32V_Tg5
$ss22_ContiguousArrayBufferV7_buffer19shiftedToStartIndexAByxGAE_SitcfCs5Int64V_Tg5
$ss22_ContiguousArrayBufferV7_buffer19shiftedToStartIndexAByxGAE_SitcfCs5UInt8V_Tg5
$ss22_ContiguousArrayBufferV7_buffer19shiftedToStartIndexAByxGAE_SitcfCs6UInt16V_Tg5
$ss22_ContiguousArrayBufferV7_buffer19shiftedToStartIndexAByxGAE_SitcfCs6UInt32V_Tg5
$ss22_ContiguousArrayBufferV7_buffer19shiftedToStartIndexAByxGAE_SitcfCs6UInt64V_Tg5
$ss22_ContiguousArrayBufferV7_buffer19shiftedToStartIndexAByxGAE_SitcfCs7UnicodeO6ScalarV_Tg5
$ss22_ContiguousArrayBufferV8endIndexSivgSJ_Tg5
$ss22_ContiguousArrayBufferV8endIndexSivgSS_Tg5
$ss22_ContiguousArrayBufferV8endIndexSivgSd_Tg5
$ss22_ContiguousArrayBufferV8endIndexSivgSf_Tg5
$ss22_ContiguousArrayBufferV8endIndexSivgSi_Tg5
$ss22_ContiguousArrayBufferV8endIndexSivgSu_Tg5
$ss22_ContiguousArrayBufferV8endIndexSivgs4Int8V_Tg5
$ss22_ContiguousArrayBufferV8endIndexSivgs5Int16V_Tg5
$ss22_ContiguousArrayBufferV8endIndexSivgs5Int32V_Tg5
$ss22_ContiguousArrayBufferV8endIndexSivgs5Int64V_Tg5
$ss22_ContiguousArrayBufferV8endIndexSivgs5UInt8V_Tg5
$ss22_ContiguousArrayBufferV8endIndexSivgs6UInt16V_Tg5
$ss22_ContiguousArrayBufferV8endIndexSivgs6UInt32V_Tg5
$ss22_ContiguousArrayBufferV8endIndexSivgs6UInt64V_Tg5
$ss22_ContiguousArrayBufferV8endIndexSivgs7UnicodeO6ScalarV_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCSJ_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCSS17UnicodeScalarViewV_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCSS8UTF8ViewV_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCSS9UTF16ViewV_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCSS_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCSd_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCSf_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCSi_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCSu_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCs4Int8V_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCs5Int16V_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCs5Int32V_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCs5Int64V_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCs5UInt8V_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCs6UInt16V_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCs6UInt32V_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCs6UInt64V_Tg5
$ss22_ContiguousArrayBufferVAByxGycfCs7UnicodeO6ScalarV_Tg5
$ss27_allocateUninitializedArrayySayxG_BptBwlFyp_Tg5
DynamicSelf
Cannot specialize with dynamic self
TypeTooDeep
Cannot specialize because the generic type is too deep
SpecializationLoop
Generic specialization is not supported if it would result in a generic specialization of infinite depth. Callee 
 occurs multiple times on the call chain
Specialized
Specialized function 
enable-expand-all
keep-will-throw-call
Keep calls to swift_willThrow, even if the throw is optimized away
Source type: 
Destination type: 
array.
unexpectedly found nil while unwrapping an Optional key-path expression
sil-stats-only-instructions
Comma separated list of SIL insruction names, whose stats should be collected
instruction name
sil-stats-dump-all
Dump all SIL module and SIL function stats
sil-stats-modules
Enable computation of statistics for SIL modules
sil-stats-functions
Enable computation of statistics for SIL functions
sil-stats-output-file
The name of the output file for optimizer counters
sil-stats-block-count-delta-threshold
Threshold for reporting changed basic block count numbers
sil-stats-inst-count-delta-threshold
Threshold for reporting changed instruction count numbers
sil-stats-function-count-delta-threshold
Threshold for reporting changed function count numbers
sil-stats-used-memory-delta-threshold
Threshold for reporting changed memory usage numbers
sil-stats-used-memory-min-threshold
Min hreshold for reporting changed memory usage numbers
sil-stats-func-block-count-delta-threshold
Threshold for reporting changed basic block count numbers for a function
sil-stats-func-block-count-min-threshold
Min threshold for reporting changed basic block count numbers for a function
sil-stats-func-inst-count-delta-threshold
Threshold for reporting changed instruction count numbers for a function
sil-stats-func-inst-count-min-threshold
Min threshold for reporting changed instruction count numbers for a function
sil-stats-only-function
Function name, whose stats should be tracked
sil-stats-only-functions
Pattern of a function name, whose stats should be tracked
function_history
inst
functions
created_inst
deleted_inst
sil-inline-never-functions
Never inline functions whose name includes this string.
sil-inline-never-function
Never inline functions whose name is this string
availability
inlining
sil-merge-stack-slots
Merge generic alloc_stack instructions
Compiler has made implicit assumption that TypeSize is not scalable. This may or may not lead to broken code.
is-valid-pointer
is-invalid-pointer
is-nonnull-pointer
is-untagged-pointer
toDestroy
oldValue
Compiler has made implicit assumption that TypeSize is not scalable. This may or may not lead to broken code.
invalid use of polymorphic builtin
invalid use of globalStringTablePointer
-0.0
volatile
singlethread
umax
umin
once_not_done
once_done
ptrauth
indirect.result
call.aggresult
clang-expand-param.temp
swifterror
entry
alloca point
.coerced
.coercion
temp-coercion
coerce.temp
.asSubstituted
coerce-and-expand.temp
indirect-temporary
coerced-arg
clang-expand-arg.temp
objc_protocols
cont
castSrc
castDest
dynamic_cast_existential_
_superclass
_class
_unconditional
_conditional
fail
type cast failed
_tailelems
offset
tailaddr
reference.new
emitting class metadata for
emitting ObjC metadata for
NSObject
reference.raw
_METACLASS_DATA_
_DATA_
__TEXT, __objc_methlist
__DATA, __objc_const
__DATA, __objc_data
.data
_CLASS_METHODS_
_CATEGORY_CLASS_METHODS_
_PROTOCOL_CLASS_METHODS_
_INSTANCE_METHODS_
_CATEGORY_INSTANCE_METHODS_
_PROTOCOL_INSTANCE_METHODS_
_PROTOCOL_CLASS_METHODS_OPT_
_PROTOCOL_INSTANCE_METHODS_OPT_
_PROTOCOLS_
_CATEGORY_PROTOCOLS_
_PROTOCOL_PROTOCOLS_
_IVARS_
_PROPERTIES_
_CATEGORY_PROPERTIES_
_PROTOCOL_PROPERTIES_
_CLASS_PROPERTIES_
_CATEGORY_CLASS_PROPERTIES_
_PROTOCOL_CLASS_PROPERTIES_
_CATEGORY_
_PROTOCOL_
_PROTOCOL_METHOD_TYPES_
__covrec_
__llvm_coverage_mapping
MainActor
.identity
.impl
.load
basic-dynamic-replacement
Basic implementation of dynamic replacement
swiftCompatibility50
swiftCompatibility51
swiftCompatibilityDynamicReplacements
runtime_registration
__DATA,
__TEXT,__objc_methname,cstring_literals
objc_classes
__objc_classlist
regular,no_dead_strip
objc_class_stubs
__objc_stublist
objc_categories
__objc_catlist
objc_categories_stubs
__objc_catlist2
objc_non_lazy_classes
__objc_nlclslist
llvm.used
llvm.metadata
llvm.compiler.used
l_unnamed_dynamic_replacements
l_auto_dynamic_replacements
l_auto_dynamic_replacements_some
_swift_eager_class_initialization
_swift_dead_method_stub
entry
l_entry_point
program too clever: function collides with existing symbol 
.unique
program too clever: variable collides with existing symbol 
llvm.asan.globals
forward_to_replaced
original_entry
__swift_cxx_ctor
l_protocols
__TEXT, __swift5_protos, regular, no_dead_strip
swift5_protocols
.sw5prt$B
l_protocol_conformances
__TEXT, __swift5_proto, regular, no_dead_strip
swift5_protocol_conformances
.sw5prtc$B
__TEXT, __swift5_types, regular, no_dead_strip
swift5_type_metadata
.sw5tymd$B
l_type_metadata_table
__TEXT, __swift5_fieldmd, regular, no_dead_strip
swift5_fieldmd
.sw5flmd$B
__objc_classrefs
While emitting IR for source file 
While emitting IR for synthesized file
existing_protocol
new_protocol
__TEXT, __swift5_replace, regular, no_dead_strip
swift5_replace
.sw5repl$B
__TEXT, __swift5_replac2, regular, no_dead_strip
swift5_replac2
.sw5reps$B
__TEXT, __swift5_entry, regular, no_dead_strip
swift5_entry
.sw5entr$B
__imp_
got.
emitting differentiability witness for
Can only load from an address of an optional reference.
loadRefcountedPtr: Invalid SIL in IRGen
payload_types
__opaque_existential_type_
project_error_scratch
project_error_out
exist.box.addr
.weakref
.unownedref
__swift_assign_boxed_opaque_existential_
done
isSelfAssign
match
no-match
sameMetadata
match-inline
match-outline
tmpInlineBuffer
dest-inline
dest-outline
dest-inline-src-inline
dest-inline-src-outline
dest-inline-cont
dest-outline-src-inline
dest-outline-src-outline
dest-outline-cont
__swift_destroy_boxed_opaque_existential_
outline
__swift_allocate_boxed_opaque_existential_
allocateBox
__swift_deallocate_boxed_opaque_existential_
deallocateBox
__swift_project_boxed_opaque_existential_
__swift_mutable_project_boxed_opaque_existential_
boxed
dynamic @block_storage capture
_NSConcreteStackBlock
block_descriptor
__swift_async_resume_project_context_prologue
__swift_async_resume_project_context
__swift_suspend_dispatch_
__swift_async_resume_get_context
__swift_suspend_point
copying @block_storage
destroying @block_storage
partial-apply.context
return.temp
arg.temp
block_copy_helper
block_destroy_helper
__swift_fixLifetime
optional bridge ref
.Type
metadata
objectdestroy
.metadata
swift.int_literal
intliteral.
intliteral.trunc.done
intliteral.trunc.valid
intliteral.trunc.invalid
intliteral.trunc.finish
intliteral.trunc.next
.flags
keypath_once
keypath_get_selector_
keypath_get
keypath_set
keypath_equals
keypath_hash
keypath_get_arg_layout
keypath_destroy
keypath_copy
keypath_witnesses
keypath_arg_init
__TEXT,__const
.rodata
.rdata
emitting metadata for
__DATA,__objc_data, regular
emitting prespecialized class metadata for
.valueWitnesses
emitting prespecialized metadata for
__C_Synthesized
classFields
clang.arc.retainAutoreleasedReturnValueMarker
L_selector_data(
L_selector(
__objc_selrefs
literal_pointers,no_dead_strip
l_OBJC_LABEL_PROTOCOL_$_
__objc_protolist
coalesced,no_dead_strip
l_OBJC_PROTOCOL_REFERENCE_$_
__objc_protorefs
dealloc
.cxx_construct
.cxx_destruct
objc_super
$sTa
swift.vwtable
swift.enum_vwtable
spsave
.isPOD
.isBitwiseTakable
.isInline
.alignmentMask
__swift_get_extra_inhabitant_index
__swift_store_extra_inhabitant_index
initializeBufferWithCopyOfBuffer
assignWithCopy
assignWithTake
initializeWithCopy
initializeWithTake
size
flags
extraInhabitantCount
stride
getEnumTag
destructiveProjectEnumData
destructiveInjectEnumTag
getEnumTagSinglePayload
storeEnumTagSinglePayload
__swift_getEnumTagSinglePayload
__swift_storeEnumTagSinglePayload
__swift_allocate_value_buffer
outline.allocateValueInBuffer
__swift_project_value_buffer
outline.projectValueInBuffer
__swift_deallocate_value_buffer
outline.deallocateValueInBuffer
yield_many:
yield_once:
-class
-metatype
Optional<
coroutine
-indirect
.asUnsubstituted
emitting witness table for
SelfWitnessTable
Self
conditional.requirement.buffer
get_witness_table
fieldmd
flmd
bltn
assocty
asty
capture
cptr
reflstr
rfst
typeref
tyrf
__swift_reflection_version
get_type_metadata
l__swift5_reflection_descriptor
.sw5
swift5_
__TEXT,__swift5_
, regular, no_dead_strip
emitting associated type metadata
emitting field type metadata
<unimported>
__swift_cxx_copy_ctor
offset of struct field 
chose_field_for_xi
emitting dispatch thunk for
offset of tuple element 
.offset
Can only load from an address that holds a reference to a refcounted type or an address of an optional reference.
layouts-
Cannot read legacy layout file at '
converting
swift.defaultactor
appletvsimulator
Name
Decls
Alignment
ExtraInhabitants
type_layout_
_pod
dynamic-packing.result
dynamic-packing.indirect
dynamic-packing.direct
dynamic-packing.cont
__swift_noop_void_return
__swift_destroy_strong
__swift_memcpy
__swift_initWithCopy_strong
__swift_assignWithCopy_strong
__swift_assignWithTake_strong
dest
numEmptyCases
whichCase
disable-objc-arc-contract
Disable running objc arc contract for testing purposes
align-module-to-page-size
Align the text section of all LLVM modules to the page size
Swift Version
no LLVM target machine
IRGen
swift.module.flags
standard-library
target_variant_triple
SymbolSourceMapRequest
llvm.embedded.module
llvm.cmdline
__LLVM,__bitcode
__LLVM,__swift_cmdline
LoweredSILRequest
IRGenRequest
OptimizedIRRequest
verify-linetable
Verify that the debug locations within one scope are contiguous.
Swift runtime failure: 
.get
.set
.willset
.didset
.addressor
.mutableAddressor
.read
.modify
<internal>
Builtin.Executor
$swift.fixedbuffer
llvm.dbg.cu
-private-discriminator 
enable-trap-debug-info
Generate failure-message functions in the debug info
async.continuation.result
await.async.resume
await.async.abort
await.async.normal
Compiler has made implicit assumption that TypeSize is not scalable. This may or may not lead to broken code.
AnyObject
default assoc type 
symbolic 
associated conformance 
default associated conformance
generic environment 
swift.refcounted
swift.weak
swift.unowned
swift.type
swift.metadata_response
swift.full_type_layout
swift.type_layout
swift.protocol
swift.protocol_requirement
swift.tuple_element_type
swift.tuple_type
swift.full_type
swift.full_heapmetadata
swift.full_boxmetadata
swift.function
swift.opaque
swift.noescape.function
swift.protocolref
swift.protocol_conformance_descriptor
swift.type_descriptor
swift.method_descriptor
swift.method_override_descriptor
swift.type_metadata_record
swift.field_descriptor
swift.bridge
objc_class
objc_block
objc_full_class_stub
objc_class_stub
swift.error
invariant.load
dereferenceable
swift.dyn_repl_link_entry
swift.dyn_repl_key
swift.async_func_pointer
swift.context
swift.task
swift.executor
swift.job
swift.async_task_and_context
swift.continuation_context
swift.differentiability_witness
swift_deletedAsyncMethodError
swift_allocBox
swift_makeBoxUnique
swift_deallocBox
swift_projectBox
swift_allocEmptyBox
swift_allocObject
swift_initStackObject
swift_initStaticObject
swift_verifyEndOfLifetime
swift_deallocObject
swift_deallocUninitializedObject
swift_deallocClassInstance
swift_deallocPartialClassInstance
swift_slowAlloc
swift_slowDealloc
swift_willThrow
swift_errorInMain
swift_unexpectedError
swift_copyPOD
swift_retain
swift_release
swift_setDeallocating
swift_nonatomic_retain
swift_nonatomic_release
swift_unknownObjectRetain
swift_unknownObjectRelease
swift_nonatomic_unknownObjectRetain
swift_nonatomic_unknownObjectRelease
swift_bridgeObjectRetain
swift_bridgeObjectRelease
swift_nonatomic_bridgeObjectRetain
swift_nonatomic_bridgeObjectRelease
swift_errorRetain
swift_errorRelease
swift_weakDestroy
swift_weakInit
swift_weakAssign
swift_weakLoadStrong
swift_weakTakeStrong
swift_weakCopyInit
swift_weakTakeInit
swift_weakCopyAssign
swift_weakTakeAssign
swift_unknownObjectWeakDestroy
swift_unknownObjectWeakInit
swift_unknownObjectWeakAssign
swift_unknownObjectWeakLoadStrong
swift_unknownObjectWeakTakeStrong
swift_unknownObjectWeakCopyInit
swift_unknownObjectWeakTakeInit
swift_unknownObjectWeakCopyAssign
swift_unknownObjectWeakTakeAssign
swift_unknownObjectUnownedDestroy
swift_unknownObjectUnownedInit
swift_unknownObjectUnownedAssign
swift_unknownObjectUnownedLoadStrong
swift_unknownObjectUnownedTakeStrong
swift_unknownObjectUnownedCopyInit
swift_unknownObjectUnownedTakeInit
swift_unknownObjectUnownedCopyAssign
swift_unknownObjectUnownedTakeAssign
swift_unownedRetain
swift_unownedRelease
swift_unownedRetainStrong
swift_unownedRetainStrongAndRelease
swift_nonatomic_unownedRetain
swift_nonatomic_unownedRelease
swift_nonatomic_unownedRetainStrong
swift_nonatomic_unownedRetainStrongAndRelease
swift_isUniquelyReferencedNonObjC
swift_isUniquelyReferencedNonObjC_nonNull
swift_isUniquelyReferencedNonObjC_nonNull_bridgeObject
swift_isUniquelyReferenced_native
swift_isUniquelyReferenced_nonNull_native
swift_isEscapingClosureAtFileLocation
swift_arrayInitWithCopy
swift_arrayInitWithTakeNoAlias
swift_arrayInitWithTakeFrontToBack
swift_arrayInitWithTakeBackToFront
swift_arrayAssignWithCopyNoAlias
swift_arrayAssignWithCopyFrontToBack
swift_arrayAssignWithCopyBackToFront
swift_arrayAssignWithTake
swift_arrayDestroy
swift_getFunctionTypeMetadata
swift_getFunctionTypeMetadataDifferentiable
swift_getFunctionTypeMetadata0
swift_getFunctionTypeMetadata1
swift_getFunctionTypeMetadata2
swift_getFunctionTypeMetadata3
swift_getForeignTypeMetadata
swift_getSingletonMetadata
swift_getGenericMetadata
swift_getCanonicalSpecializedMetadata
swift_getCanonicalPrespecializedGenericMetadata
swift_getOpaqueTypeMetadata
swift_getOpaqueTypeConformance
swift_allocateGenericClassMetadata
swift_allocateGenericValueMetadata
swift_checkMetadataState
swift_getWitnessTable
swift_getAssociatedTypeWitness
swift_getAssociatedConformanceWitness
swift_getMetatypeMetadata
swift_getExistentialMetatypeMetadata
swift_getObjCClassMetadata
swift_getObjCClassFromMetadata
swift_getObjCClassFromObject
swift_getTupleTypeMetadata
swift_getTupleTypeMetadata2
swift_getTupleTypeMetadata3
swift_getTupleTypeLayout
swift_getTupleTypeLayout2
swift_getTupleTypeLayout3
swift_getExistentialTypeMetadata
swift_initClassMetadata2
swift_updateClassMetadata2
swift_lookUpClassMethod
swift_initStructMetadata
swift_initEnumMetadataSingleCase
swift_initEnumMetadataSinglePayload
swift_initEnumMetadataMultiPayload
swift_getEnumCaseMultiPayload
swift_getEnumTagSinglePayloadGeneric
swift_storeEnumTagSinglePayloadGeneric
swift_storeEnumTagMultiPayload
object_getClass
objc_lookUpClass
swift_getObjectType
swift_getDynamicType
swift_dynamicCastClass
swift_dynamicCastClassUnconditional
swift_dynamicCastObjCClass
swift_dynamicCastObjCClassUnconditional
swift_dynamicCastUnknownClass
swift_dynamicCastUnknownClassUnconditional
swift_dynamicCastMetatype
swift_dynamicCastMetatypeUnconditional
swift_dynamicCastObjCClassMetatype
swift_dynamicCastObjCClassMetatypeUnconditional
swift_dynamicCast
swift_dynamicCastTypeToObjCProtocolUnconditional
swift_dynamicCastTypeToObjCProtocolConditional
swift_dynamicCastObjCProtocolUnconditional
swift_dynamicCastObjCProtocolConditional
swift_dynamicCastMetatypeToObjectUnconditional
swift_dynamicCastMetatypeToObjectConditional
swift_conformsToProtocol
swift_isClassType
swift_isOptionalType
swift_once
swift_registerProtocols
swift_registerProtocolConformances
swift_registerTypeMetadataRecords
swift_beginAccess
swift_endAccess
swift_getOrigOfReplaceable
swift_getFunctionReplacement
swift_instantiateObjCClass
objc_allocWithZone
objc_msgSend
objc_msgSend_stret
objc_msgSendSuper
objc_msgSendSuper_stret
objc_msgSendSuper2
objc_msgSendSuper2_stret
sel_registerName
class_replaceMethod
class_addProtocol
objc_getProtocol
objc_allocateProtocol
objc_registerProtocol
protocol_addMethodDescription
protocol_addProtocol
objc_opt_self
malloc
free
_Block_copy
_Block_release
swift_deletedMethodError
swift_allocError
swift_deallocError
swift_getErrorValue
__tsan_external_write
__isPlatformVersionAtLeast
__isPlatformOrVariantPlatformVersionAtLeast
swift_getKeyPath
swift_copyKeyPathTrivialIndices
swift_getInitializedObjCClass
swift_objc_swift3ImplicitObjCEntrypoint
_swift_debug_verifyTypeLayoutAttribute
swift_intToFloat32
swift_intToFloat64
swift_getTypeByMangledNameInContext
swift_getTypeByMangledNameInContextInMetadataState
swift_task_getCurrent
swift_task_alloc
swift_task_dealloc
swift_task_cancel
swift_task_create_future
swift_task_create_group_future
swift_task_switch
swift_continuation_init
swift_continuation_resume
swift_continuation_throwingResume
swift_continuation_throwingResumeWithError
swift_task_getCurrentExecutor
swift_defaultActor_initialize
swift_defaultActor_destroy
swift_defaultActor_deallocate
swift_defaultActor_deallocateResilient
swift_taskGroup_initialize
swift_taskGroup_destroy
swift_autoDiffCreateLinearMapContext
swift_autoDiffProjectTopLevelSubcontext
swift_autoDiffAllocateSubcontext
$sytN
$sypN
$syXlN
_objc_empty_cache
swift_isaMask
+thumb-mode
frame-pointer
none
probe-stack
__chkstk_darwin
_swift_FORCE_LOAD_$
/DEFAULTLIB:
llvm.ident
Objective-C Garbage Collection
llvm.swift_module_hash
__LLVM,__swift_modhash
.swift_modhash
.sw5hash
llvm.dependent-libraries
llvm.linker.options
-framework
.section .swift1_autolink_entries,"0x80000000"
_swift1_autolink_entries
.swift1_autolink_entries
IR Generation for module 
IR Generation for file 
emitting IR
coro.end
sanitize_thread_no_checking_at_run_time
$match
.debug
swift_taskGroup_wait_next_throwing
: calling the original implementation of a dynamic function is not supported with -Xllvm -basic-dynamic-replacement
staticref
mismatching type layouts
tagged-pointer
not-tagged-pointer
tagged-cont
isUnique called for a non-reference
access-scratch
objc metatype of non-class-bounded archetype
next-test
non-static block invoke function
respondsToSelector:
beginCOWMutation called for a non-reference
OBJC_CLASS_REF_$_
OBJC_CLASS_$_
OBJC_METACLASS_$_
base
metadata-dependencies.cont
dependency-satisfied
cacheIsNull
is_complete
__swift_instantiateCanonicalPrespecializedGenericMetadata
__swift_instantiateGenericMetadata
tuple-elements
protocols
metadata ref for module type
function-parameters
parameter-flags
metadata ref for generic function type
__swift_instantiateConcreteTypeFromMangledNameAbstract
__swift_instantiateConcreteTypeFromMangledName
generic.arguments
$defaultActor
r7, r7
// marker for objc_retainAutoreleaseReturnValue
fp, fp
// marker for objc_retainAutoreleaseReturnValue
case-index-from-value
get-payload-tag-phi
inlineBB
allocateBB
alignment-mask
num-extra-inhabitants
found_max_xi
payload-size
payloadBlock
noPayloadBlock
use-payload-for-tag
tag-only
tag-and-payload
num-tags-some-empty-cases
num-tags-phi
num-tag-bytes
alignment mask
stride
is-inline bit
is-POD bit
is-bitwise-takable bit
extra inhabitant count
extra-inhabitant
stored extra inhabitant 
extra inhabitant tag calculation 
runtime
type_verifier
--- Applying Solution ---
<#Component#>
static func 
buildBlock(_ components: 
...)
buildExpression(_ expression: <#Expression#>)
buildOptional(_ component: 
buildEither(first component: 
buildEither(second component: 
buildArray(_ components: [
buildLimitedAvailability(_ component: 
buildFinalResult(_ component: 
) -> <#Result#>
  <#code#>
$__builder
append
PreCheckResultBuilderRequest
utf8CodeUnitCount
isASCII
@objc 
attempt to evaluate editor placeholder
getter: 
setter: 
$kp$
---Type-checked expression---
$generator
fromType->getCanonicalType() = 
toType->getCanonicalType() = 
@differentiable
hole 
potentially_incomplete 
delayed 
subtype_of_existential 
literal=
involves_type_vars 
#defaultable_bindings=
bindings={
 defaults={
(subtypes of) 
(supertypes of) 
(default from 
---Initial constraints for the given expression---
(failed constraint 
(increasing score due to 
(solution is worse than the best solution)
Comparing declarations
(isDynamicOverloadComparison: 
comparing solutions 
Comparing 
 viable solutions
--- Solution #
 ---
hole in the constraint system
use of an unavailable declaration
async-in-synchronous mismatch
sync-in-asynchronous
forward scan when matching a trailing closure
attempting to fix the source
disfavored overload
unwrapping optional at unresolved member base
force of an implicitly unwrapped optional
user conversion
function conversion
non-default literal
collection upcast conversion
value to optional
empty-existential conversion
key path subscript
value-to-pointer conversion
function to autoclosure parameter
value-to-value conversion
comparison result: 
better
not better
CompareDeclSpecializationRequest
Foundation
(common result type for $T
(attempting fix 
---Constraint system #
--- Solving candidate for shrinking at 
<invalid range>
--- No Solutions ---
--- Solutions ---
---Constraint solving at 
---Solver statistics---
Total number of scopes explored: 
Maximum depth reached while exploring solutions: 
Time: 
--- Code Completion ---
--- Discovered 
 solutions ---
--- Solution ---
(disabled disjunction term 
(introducing single enabled disjunction term 
---Solution---
---Constraint graph---
---Connected components---
(composed solution 
DependentComponentSplitterStep for dependencies on [
Active constraints left over?
Inactive constraints left over?
Free type variables left over?
(found solution 
finished
 component #
Initial bindings: 
(solving component #
(skipping 
disjunction choice 
SplitterStep with #
 components
ComponentStep with at #
TypeVariableStep for 
DisjunctionStep for 
 := 
(attempting 
type variable 
IsDeclRefinementOfRequest
[fix: 
force downcast (
 as! 
treat ephemeral as non-ephemeral for 
specify type for parameter 
fix key path contextual mismatch
unwrap optional base of member lookup
treat rvalue as lvalue
re-label argument(s)
add missing protocol conformance
skip same-type generic requirement
skip superclass generic requirement
fix contextual mismatch
treat array literal as dictionary
add '@Sendable' attribute
drop 'throws' attribute
drop 'async' attribute
remove extraneous use of `&`
fix generic argument mismatch
allow pointer conversion for autoclosure result type
remove unwrap operator `!` or `?`
insert explicit `()` to make a call
insert '$' or '_' to use property wrapper type instead of wrapped type
remove '$' or _ to use wrapped type instead of wrapper type
allow invalid property wrapper type
remove '$' from argument label
replace '.subscript(...)' with subscript operator
define missing member named '
' based on its use
allow access to invalid member '
' on archetype presumed intended to conform to protocol
' on value of protocol type
allow access to instance member on type or a type member on instance
allow partially applied 'mutating' method
allow invalid initializer reference
fix tuple mismatches in type and arity
allow function type mismatch
allow `mutating` method on r-value base
allow closure parameter destructuring
synthesize missing argument(s)
remove extraneous argument(s)
move out-of-order argument to correct position
allow inaccessible member reference
allow anyobject as root type for a keypath
allow conversion of a keypath type to a multi-argument function
treat keypath subscript index as conforming to Hashable
allow reference to a static member as a key path component
allow reference to a member with mutating getter as a key path component
allow reference to a method as a key path component
allow reference to an init method as a key path component
allow reference to an enum case as a key path component
fix collection element contextual mismatch
default generic argument '
' to 'Any'
skip unhandled constructs when applying a result builder
allow single parameter tuple splat
ignore specified contextual type
ignore type of the assignment destination
allow conversions between argument/parameter marked as `inout`
allow argument to parameter type conversion mismatch
cannot pass Array elements as variadic arguments
explicitly construct a raw representable type
use `.rawValue` of a raw representable type
as to as?
as to as!
remove extraneous call from value of non-function type
specify base type in reference to member '
specify closure return type
import required module to gain access to a default literal type
qualify reference to access top-level function
allow coercion to be treated as a force-cast
allow key path root type mismatch
specify key path root type
force unwrap base on key path application
specify a label to associate trailing closure with parameter
key path missing component
ignore invalid result builder body
specify contextual type to resolve `nil` literal
ignore invalid declaration reference
specify unresolved member optional base type explicitly '
checked cast coercible optional
checked cast always succeed
runtime unsupported checked cast
allow invalid static member reference on a protocol metatype
remove or omit return type
allow non-class type to convert to 'AnyObject'
: <#value#>
@Sendable 
@escaping 
 @escaping
 ?? <#default value#>
guard 
 else { return }
 else { return <#default value#> }
key path is read-only
' is a read-only key path
 is read-only
 is an immutable capture
 is immutable
 is a 'let' constant
 is a get-only property
 setter is inaccessible
subscript is get-only
subscript setter is inaccessible
subscript is immutable
 is a method
 is a function
 is not settable
immutable key path
literals are not mutable
unary operator
binary operator
function call
method call
 returns immutable value
implicit conversion from '
' requires a temporary
result of conditional operator '? :' is never mutable
) == nil)
) != nil)
) == 0)
) != 0)
String(
String.CharacterView.Index
[<#index#>]
 as AnyObject)
^[0-9]+$
type(of: 
.init
<#arg#>
let 
 = arg
(arg: 
(arg)
<#Result#>
 -> <#Return Type#>
 as AnyObject
 [with 
<#Root#>
.map { 
(rawValue: $0) }
(rawValue: 
!) ?? <#default value#>
) ?? <#default value#>
.rawValue
?.rawValue
, Self == <#Type#> 
 where Self == <#Type#>
!= nil
AppKit
NSColor
UIColor
NSImage
UIImage
Optional
define-default-ctor
defining default constructor for
fatalError("
 has not been implemented")
HasUserDefinedDesignatedInitRequest
AreAllStoredPropertiesDefaultInitableRequest
oslog.requires_constant_arguments
atomics.requires_constant_orderings
disjunction
 (remembered)
 bind 
 equal 
 bind param 
 bind to pointer 
 subtype 
 conv 
 underlying type of opaque 
 bridging conv 
 arg conv 
 operator arg conv 
 conforms to 
 literal conforms to 
 transitive conformance to 
 checked cast to 
 Self type of 
 applicable fn 
 dynamic callable applicable fn 
 dynamicType type of 
 @escaping type of 
 opened archetype of 
 one-way bind to 
 one-way bind param to 
 closure can default to 
 unresolved member chain base 
 property wrapper with wrapped value of 
 key path from 
 key path projecting 
 optional with object type 
 bind function input of 
 bind function result of 
 bound to 
decl 
decl-via-dynamic 
decl-via-bridge 
decl-via-unwrapped-optional 
dynamic member lookup '
tuple index 
key path application
: value] == 
[(implicit) .
: witness] == 
 can default to 
 [forward scan]
 [backward scan]
[deep equality]
[superclass]
[existential]
[metatype-to-existential-metatype]
[existential-metatype-to-metatype]
[value-to-optional]
[optional-to-optional]
[class-metatype-to-object]
[existential-metatype-to-object]
[protocol-metatype-to-object]
[array-to-pointer]
[string-to-pointer]
[inout-to-pointer]
[pointer-to-pointer]
[array-upcast]
[dictionary-upcast]
[set-upcast]
[hashable-to-anyhashable]
[cf-toll-free-bridge-to-objc]
[objc-toll-free-bridge-to-cf]
[CGFloat-to-Double]
[Double-to-CGFloat]
>  [disabled] 
>  [favored]  
>             
Contracting constraint 
ConstraintGraph
incrementConstraintsPerContractionCounter
Constraints:
Referenced By: 
References: 
Equivalence class:
 depends on 
constraint vector and map have different sizes
constraint index out-of-range
constraint map provides wrong index into vector
type variable not present in its representative's equiv class
representative and an equivalent type variable's representative
wrong graph node index
null graph node
constraint graph doesn't know about constraint
type variable in constraint not known
type variable doesn't know about constraint
Collapsing one-way components for $T
 and $T
 due to cycle.
Constraint graph verification failed: 
 != 
constraint = 
type variable = 
, constraint = 
locator@
generic parameter '
apply argument
apply function
optional payload
comparing call argument #
 to parameter #
 (non-ephemeral)
closure result
type of a closure body
constructor member
function argument
function result
result builder body result
sequence element type
generic argument #
instance type
@autoclosure result
member
member reference base
named tuple element #
unresolved member
parent type
existential superclass type
@lvalue-to-inout conversion
`.dynamicType` reference
subscript member
tuple element #
key path component #
protocol requirement 
witness 
opened generic
conditional requirement #
type parameter requirement #
conformance requirement (
implicitly unwrapped disjunction choice
dynamic lookup result
contextual type
synthesized argument #
key path dynamic member lookup
key path type
key path root
key path value
key path component result
condition expression
implicit call to @dynamicCallable method
implicit reference to callAsFunction
'then'
'else'
 branch of a ternary operator
pattern match
argument attribute: 
@escaping
@Sendable
@<global actor>
unresolved chain result
placeholder type
implicit conversion 
conformance
superclass
same-type
%0.2f
(overload set choice binding 
---Attempting to salvage and emit diagnostics---
---Ambiguity error: 
 solutions found---
---Ambiguous solution #
--- Ambiguity: Considering #
 solutions with fixes ---
 (result type of '
 vs. 
ClosureHasExplicitResultRequest
_stringForPrintObject
_debuggerTestingCheckExpect
Could not type-check instrumentation
Out of valid closure discriminators
' cannot be decoded because it is not defined in CodingKeys.
Invalid number of keys found, expected one.
@noDerivative 
index_a
index_b
discriminator
reflecting
unsafeBitCast
_findStringSwitchCase
cases
Import resolution
' declares cross-imports with bystanders:
@_implementationOnly 
SynthesizeMemberwiseInitRequest
fileprivate 
internal 
Sema
VarDeclUsageCheckerExprVisits
# of times VarDeclUsageChecker::walkToExprPre is called
) != nil
.self
).self
unsafeDowncast
UnsafePointer(
UnsafeMutablePointer(mutating: 
UnsafeRawPointer(
UnsafeMutableRawPointer(
UnsafeMutableRawPointer(mutating: 
.assumingMemoryBound(to: 
.self)
.bindMemory(to: 
.self, capacity: <#capacity#>)
(bitPattern: 
UInt32(bitPattern: 
UInt64(bitPattern: 
.bitPattern
(bitPattern: UInt
32(bitPattern: Int32(
64(bitPattern: Int64(
32(bitPattern: 
64(bitPattern: 
.bitPattern)
(bitPattern: UInt(
.bitPattern))
UInt(bitPattern: 
Int(bitPattern: 
Int(
UInt(
addObserver
forKeyPath
options
context
removeObserver
self, 
 [self]
 [self] in
String(describing: 
observe
changeHandler
#selector(
Selector(
Object
Block
Function
__builtin_pc_before
__builtin_pc_after
pctmp
__builtin_debugPrint
__builtin_print
__builtin_postPrint
__builtin_log_with_id
__builtin_log_scope_exit
__builtin_log_scope_entry
__builtin_send_data
precheck-expr
+= 1
-= 1
InheritedTypeRequest
accessor
escaping
autoclosure
_runAsyncMain
SynthesizeMainFunctionRequest
dynamicMember 
UIApplicationDelegate
@frozen
NSApplicationDelegate
CustomAttrNominalRequest
Mutable
differential
pullback
@usableFromInline 
GlobalActorAttributeRequest
PackageDescription
@available(
, *)
if #available(
, *) {
} else {
// Fallback on earlier versions
 += 1
 -= 1
.successor()
.predecessor()
it has been removed in Swift 3
alignment
MemoryLayout<
computing captures for
 -> ...
indirect 
 -> ... 
 -> (
<anonymous>
typecheck-for-code-completion
code-completion
typecheck-completion-operator
type-checking
typecheck-expr-no-apply
async rethrows
async throws
@asyncHandler 
Actor
static let shared = <#actor instance#>
CustomAttrTypeRequest
typecheck-expr
call
typecheck-expr-pattern
Fixed score: 
Type variables:
Overload choices:
key path application root 
dynamic member lookup root 
 name='
tuple 
 index 
Constraint restrictions:
Trailing closure matching:
: forward
: backward
Disjunction choices:
 is #
Opened types:
 opens 
Opened existential types:
 opens to 
Defaulted constraints: 
Fixes:
Score: 
Contextual Type: 
Type Variables:
 [lvalue allowed]
 [inout allowed]
 [noescape allowed]
 equivalent to 
Active Constraints:
Inactive Constraints:
Retired Constraints:
Resolved overloads:
  selected overload set choice 
dynamic member lookup:
  name=
Failed constraint:
structs
enums
convenience 
final 
prefix 
postfix 
prefix operator 
postfix operator 
infix operator 
 : <# Precedence Group #>
ValidatePrecedenceGroupRequest
ResolveImplicitMemberRequest
HasCircularInheritedProtocolsRequest
HasCircularRawValueRequest
OverriddenDeclsRequest
IsABICompatibleOverrideRequest
PatternBindingEntryRequest
@objc
@nonobjc 
: NSObject
NSObject, 
CUnsignedChar
CUnsignedShort
CUnsignedInt
CUnsignedLong
CUnsignedLongLong
CUnsignedInt128
CChar16
CChar32
CSignedChar
CShort
CInt
CLong
CLongLong
CInt128
hash
: Int
throwing
typecheck-decl
override init(from decoder: Decoder) throws
override func encode(to encoder: Encoder) throws
Protocol requirement signature:
Requirement signature: 
Canonical requirement signature: 
DirectPrecedenceGroupLookupRequest
 = <#initializer#>
([])
DirectOperatorLookupRequest
CheckRedeclarationRequest
ApplyAccessNoteRequest
property access
subscript access
try 
try? 
try! 
Array
BooleanLiteralType
Dictionary
ExtendedGraphemeClusterType
FloatLiteralType
IntegerLiteralType
StringLiteralType
UnicodeScalarType
_ColorLiteralType
_ImageLiteralType
_FileReferenceLiteralType
DefaultTypeRequest
NSArray
NSSet
NSDictionary
associatedtype <#AssocType#>
<#AssocType#>
Generic signature: 
Canonical generic signature: 
InferredGenericSignatureRequest
subscript
init
deinit
property
case 
PatternTypeRequest
wrappedValue
wrappedValue 
projectedValue
AttachedPropertyWrappersRequest
nonisolated 
 = <#type#>
Cannot look up associated type for imported conformance:
check-conformance
NSObject
<#witnesses#>
where <#requirements#>
@objc(
@objc(<#prefixed Objective-C class name#>)
@discardableResult 
 [failed constraint 
Cannot infer associated types for imported conformance:
_Default_
return <#expr#>
floating-point
boolean
typecheck-stmt
type-checking
(closure)
$__lazy_storage_$_
anonymous
tmp1
tmp2
PropertyWrapperLValuenessRequest
 { get }
{ get <#set#> }
 { get <#set#> }
<#fatalError()#>
@unknown 
<#fatalError()#>
@unknown default:
<#fatalError#>()
[EMPTY]
DISJOIN(
UNKNOWN
(not_required)
Resolved to null type!
thick
@autoclosure
ResolveTypeRequest
_colorLiteralRed
green
blue
alpha
imageLiteralResourceName
fileReferenceLiteralResourceName
Type checking and Semantic analysis
perform-whole-module-type-checking
forbidden typecheck occurred: 
typechecker.withoutActuallyEscaping(_:do:)
typechecker._openExistential(_:do:)
TypeCheckSourceFileRequest
source_file 
CheckInconsistentImplementationOnlyImportsRequest
TypeCheckASTNodeAtLocRequest
reading specialized conformance for
... to
reading inherited conformance for
cross-referencing conformance for
If you're seeing a crash here, check that your SDK and dependencies are at least as new as the versions used to build
reading conformance for
couldn't decode type
operator not found
precedencegroup not found
There is a matching '
' in module '
'. If this is imported from clang, please make sure 
the header is part of a single clang module.
' was filtered out.
top-level value not found
multiple matching base values
base is not a nominal type
module is not loaded
missing accessor
cross-reference to generic param for non-generic type
invalid generic argument index or depth
If you're seeing a crash here, check that your SDK and dependencies match the versions used to build
result not found
result is ambiguous
loading members for
reading default witness table for
loading conformances for
While reading from
finishing conformance for
serialized conformances do not match requirement signature
Unexpected end of file reading %u of %u bits
Unexpected end of file reading %u of %u bytes
(see "While..." info below)
Cross-reference to module '
... 
with type 
in an extension in module '
in an extension in any module
(infix)
(prefix)
(postfix)
(unknown operator filter)
(getter)
(setter)
(addressor)
(mutableAddressor)
(willSet)
(didSet)
(read)
(modify)
(unknown accessor kind)
generic param #
(in 
opaque return type of 
unknown xref kind 
<<opaque return type of 
While deserializing decl @ 
While deserializing 
extension of '
 in '
BUILTIN_ALIAS_TYPE
GENERIC_TYPE_PARAM_TYPE
DEPENDENT_MEMBER_TYPE
NOMINAL_TYPE
PAREN_TYPE
TUPLE_TYPE
TUPLE_TYPE_ELT
FUNCTION_TYPE
FUNCTION_PARAM
METATYPE_TYPE
PRIMARY_ARCHETYPE_TYPE
OPENED_ARCHETYPE_TYPE
OPAQUE_ARCHETYPE_TYPE
NESTED_ARCHETYPE_TYPE
PROTOCOL_COMPOSITION_TYPE
BOUND_GENERIC_TYPE
GENERIC_FUNCTION_TYPE
ARRAY_SLICE_TYPE
DICTIONARY_TYPE
REFERENCE_STORAGE_TYPE
UNBOUND_GENERIC_TYPE
OPTIONAL_TYPE
SIL_FUNCTION_TYPE
DYNAMIC_SELF_TYPE
OPENED_EXISTENTIAL_TYPE
EXISTENTIAL_METATYPE_TYPE
SIL_BLOCK_STORAGE_TYPE
SIL_BOX_TYPE
NAME_ALIAS_TYPE
ERROR_TYPE
TYPE_ALIAS_DECL
GENERIC_TYPE_PARAM_DECL
ASSOCIATED_TYPE_DECL
STRUCT_DECL
CONSTRUCTOR_DECL
VAR_DECL
PARAM_DECL
FUNC_DECL
OPAQUE_TYPE_DECL
PATTERN_BINDING_DECL
PROTOCOL_DECL
DEFAULT_WITNESS_TABLE
PREFIX_OPERATOR_DECL
POSTFIX_OPERATOR_DECL
INFIX_OPERATOR_DECL
CLASS_DECL
ENUM_DECL
ENUM_ELEMENT_DECL
SUBSCRIPT_DECL
EXTENSION_DECL
DESTRUCTOR_DECL
PRECEDENCE_GROUP_DECL
ACCESSOR_DECL
SILGenName_DECL_ATTR
Available_DECL_ATTR
Final_DECL_ATTR
ObjC_DECL_ATTR
Required_DECL_ATTR
Optional_DECL_ATTR
DynamicCallable_DECL_ATTR
MainType_DECL_ATTR
Exported_DECL_ATTR
DynamicMemberLookup_DECL_ATTR
NSCopying_DECL_ATTR
IBAction_DECL_ATTR
IBDesignable_DECL_ATTR
IBInspectable_DECL_ATTR
IBOutlet_DECL_ATTR
NSManaged_DECL_ATTR
Lazy_DECL_ATTR
LLDBDebuggerFunction_DECL_ATTR
UIApplicationMain_DECL_ATTR
UnsafeNoObjCTaggedPointer_DECL_ATTR
Inline_DECL_ATTR
Semantics_DECL_ATTR
Dynamic_DECL_ATTR
Infix_DECL_ATTR
Prefix_DECL_ATTR
Postfix_DECL_ATTR
Transparent_DECL_ATTR
RequiresStoredPropertyInits_DECL_ATTR
NonObjC_DECL_ATTR
FixedLayout_DECL_ATTR
Inlinable_DECL_ATTR
Specialize_DECL_ATTR
ObjCMembers_DECL_ATTR
Consuming_DECL_ATTR
Mutating_DECL_ATTR
NonMutating_DECL_ATTR
Convenience_DECL_ATTR
Override_DECL_ATTR
HasStorage_DECL_ATTR
AccessControl_DECL_ATTR
SetterAccess_DECL_ATTR
RawDocComment_DECL_ATTR
ReferenceOwnership_DECL_ATTR
Effects_DECL_ATTR
ObjCBridged_DECL_ATTR
NSApplicationMain_DECL_ATTR
ObjCNonLazyRealization_DECL_ATTR
SynthesizedProtocol_DECL_ATTR
Testable_DECL_ATTR
Alignment_DECL_ATTR
Rethrows_DECL_ATTR
AtRethrows_DECL_ATTR
SwiftNativeObjCRuntimeBase_DECL_ATTR
Indirect_DECL_ATTR
WarnUnqualifiedAccess_DECL_ATTR
ShowInInterface_DECL_ATTR
CDecl_DECL_ATTR
UsableFromInline_DECL_ATTR
DiscardableResult_DECL_ATTR
GKInspectable_DECL_ATTR
Implements_DECL_ATTR
ObjCRuntimeName_DECL_ATTR
StaticInitializeObjCMetadata_DECL_ATTR
RestatedObjCConformance_DECL_ATTR
Optimize_DECL_ATTR
ClangImporterSynthesizedType_DECL_ATTR
WeakLinked_DECL_ATTR
Frozen_DECL_ATTR
ForbidSerializingReference_DECL_ATTR
HasInitialValue_DECL_ATTR
NonOverride_DECL_ATTR
DynamicReplacement_DECL_ATTR
Borrowed_DECL_ATTR
PrivateImport_DECL_ATTR
AlwaysEmitIntoClient_DECL_ATTR
ImplementationOnly_DECL_ATTR
Custom_DECL_ATTR
PropertyWrapper_DECL_ATTR
DisfavoredOverload_DECL_ATTR
ResultBuilder_DECL_ATTR
ProjectedValueProperty_DECL_ATTR
NonEphemeral_DECL_ATTR
Differentiable_DECL_ATTR
HasMissingDesignatedInitializers_DECL_ATTR
InheritsConvenienceInitializers_DECL_ATTR
TypeEraser_DECL_ATTR
IBSegueAction_DECL_ATTR
OriginallyDefinedIn_DECL_ATTR
Derivative_DECL_ATTR
SPIAccessControl_DECL_ATTR
Transpose_DECL_ATTR
NoDerivative_DECL_ATTR
AsyncHandler_DECL_ATTR
Actor_DECL_ATTR
ActorIndependent_DECL_ATTR
GlobalActor_DECL_ATTR
SpecializeExtension_DECL_ATTR
Async_DECL_ATTR
Sendable_DECL_ATTR
Marker_DECL_ATTR
Reasync_DECL_ATTR
AtReasync_DECL_ATTR
CompletionHandlerAsync_DECL_ATTR
Nonisolated_DECL_ATTR
UnsafeSendable_DECL_ATTR
UnsafeMainActor_DECL_ATTR
ImplicitSelfCapture_DECL_ATTR
InheritActorContext_DECL_ATTR
Spawn_DECL_ATTR
PAREN_PATTERN
TUPLE_PATTERN
TUPLE_PATTERN_ELT
NAMED_PATTERN
ANY_PATTERN
TYPED_PATTERN
VAR_PATTERN
PARAMETERLIST
FOREIGN_ERROR_CONVENTION
FOREIGN_ASYNC_CONVENTION
XREF_TYPE_PATH_PIECE
XREF_VALUE_PATH_PIECE
XREF_EXTENSION_PATH_PIECE
XREF_OPERATOR_OR_ACCESSOR_PATH_PIECE
XREF_GENERIC_PARAM_PATH_PIECE
XREF_INITIALIZER_PATH_PIECE
ABSTRACT_CLOSURE_EXPR_CONTEXT
PATTERN_BINDING_INITIALIZER_CONTEXT
DEFAULT_ARGUMENT_INITIALIZER_CONTEXT
TOP_LEVEL_CODE_DECL_CONTEXT
GENERIC_PARAM_LIST
GENERIC_SIGNATURE
GENERIC_REQUIREMENT
LAYOUT_REQUIREMENT
SIL_GENERIC_SIGNATURE
SUBSTITUTION_MAP
LOCAL_DISCRIMINATOR
PRIVATE_DISCRIMINATOR
FILENAME_FOR_PRIVATE
ABSTRACT_PROTOCOL_CONFORMANCE
NORMAL_PROTOCOL_CONFORMANCE
SPECIALIZED_PROTOCOL_CONFORMANCE
INHERITED_PROTOCOL_CONFORMANCE
INVALID_PROTOCOL_CONFORMANCE
SIL_LAYOUT
NORMAL_PROTOCOL_CONFORMANCE_ID
PROTOCOL_CONFORMANCE_XREF
MEMBERS
XREF
INLINABLE_BODY_TEXT
SELF_PROTOCOL_CONFORMANCE
XREF_OPAQUE_RETURN_TYPE_PATH_PIECE
CLANG_TYPE
DERIVATIVE_FUNCTION_CONFIGURATION
ERROR_FLAG
Decl @ 
    ...decl is named '
declaration is not a nominal type
module '
' was not loaded
could not find '
' in parent class
Could not deserialize type for '
Caused by: 
could not deserialize extension
Decl attributes did not match filter
Notes:
deserializing SIL function
deserializing SIL global
deserializing SIL vtable for
deserializing SIL witness table for
deserializing default witness table for
could not deserialize SIL entity '
loading fingerprints for
Unconvertible fingerprint including type members'
Unconvertible fingerprint excluding type members'
While reading from
Unconvertable fingerprint '
*** DESERIALIZATION FAILURE (please include this section in any bug report) ***
can't skip block: already at end of stream
can't skip to bit %zu from %llu
__ObjC
While reading from '
staging a serialized reference to
Clang function type is not serializable
MODULE_BLOCK
CONTROL_BLOCK
MODULE_NAME
OPTIONS_BLOCK
ARE_PRIVATE_IMPORTS_ENABLED
RESILIENCE_STRATEGY
IS_ALLOW_MODULE_WITH_COMPILER_ERRORS_ENABLED
INPUT_BLOCK
IMPORTED_HEADER_CONTENTS
DEPENDENCY_DIRECTORY
MODULE_INTERFACE_PATH
IMPORTED_MODULE_SPIS
DECLS_AND_TYPES_BLOCK
IDENTIFIER_DATA_BLOCK
INDEX_BLOCK
IDENTIFIER_OFFSETS
CLASS_MEMBERS_FOR_DYNAMIC_LOOKUP
OPERATOR_METHODS
DERIVATIVE_FUNCTION_CONFIGURATIONS
LOCAL_DECL_CONTEXT_OFFSETS
GENERIC_SIGNATURE_OFFSETS
SUBSTITUTION_MAP_OFFSETS
CLANG_TYPE_OFFSETS
LOCAL_TYPE_DECLS
NORMAL_CONFORMANCE_OFFSETS
SIL_LAYOUT_OFFSETS
PRECEDENCE_GROUPS
NESTED_TYPE_DECLS
DECL_MEMBER_NAMES
DECL_FINGERPRINTS
ORDERED_TOP_LEVEL_DECLS
EXPORTED_PRESPECIALIZATION_DECLS
DECL_MEMBER_TABLES_BLOCK
SIL_BLOCK
SIL_ONE_VALUE_ONE_OPERAND
SIL_ONE_TYPE_ONE_OPERAND
SIL_ONE_TYPE_VALUES
SIL_TWO_OPERANDS
SIL_INST_NO_OPERAND
SIL_VTABLE_ENTRY
SIL_INIT_EXISTENTIAL
SIL_WITNESS_TABLE
SIL_WITNESS_METHOD_ENTRY
SIL_WITNESS_BASE_ENTRY
SIL_WITNESS_ASSOC_PROTOCOL
SIL_WITNESS_ASSOC_ENTRY
SIL_WITNESS_CONDITIONAL_CONFORMANCE
SIL_DEFAULT_WITNESS_TABLE
SIL_DEFAULT_WITNESS_TABLE_NO_ENTRY
SIL_INST_WITNESS_METHOD
SIL_SPECIALIZE_ATTR
SIL_ONE_OPERAND_EXTRA_ATTR
SIL_TWO_OPERANDS_EXTRA_ATTR
decls_block::INVALID_PROTOCOL_CONFORMANCE
decls_block::ABSTRACT_PROTOCOL_CONFORMANCE
decls_block::NORMAL_PROTOCOL_CONFORMANCE
decls_block::SELF_PROTOCOL_CONFORMANCE
decls_block::SPECIALIZED_PROTOCOL_CONFORMANCE
decls_block::INHERITED_PROTOCOL_CONFORMANCE
decls_block::NORMAL_PROTOCOL_CONFORMANCE_ID
decls_block::PROTOCOL_CONFORMANCE_XREF
decls_block::GENERIC_PARAM_LIST
decls_block::GENERIC_REQUIREMENT
decls_block::LAYOUT_REQUIREMENT
SIL_INDEX_BLOCK
SIL_FUNC_OFFSETS
SIL_VTABLE_NAMES
SIL_VTABLE_OFFSETS
SIL_GLOBALVAR_NAMES
SIL_GLOBALVAR_OFFSETS
SIL_WITNESS_TABLE_NAMES
SIL_WITNESS_TABLE_OFFSETS
SIL_DEFAULT_WITNESS_TABLE_NAMES
SIL_DEFAULT_WITNESS_TABLE_OFFSETS
SIL_PROPERTY_OFFSETS
SIL_DIFFERENTIABILITY_WITNESS_NAMES
SIL_DIFFERENTIABILITY_WITNESS_OFFSETS
INCREMENTAL_INFORMATION_BLOCK
SOURCE_FILE_DEP_GRAPH_NODE
FINGERPRINT_NODE
DEPENDS_ON_DEFINITION_NODE
serializing
serializing clang type
Serialization, swiftmodule, to buffer
Serialization, swiftdoc, to buffer
Serialization, swiftsourceinfo, to buffer
Invalid encoding
failed to serialize anything
serializing a non-null Clang statement or expression reference
failed to find a stable Swift serialization path for the above Clang declaration
MangleLocalTypeDeclRequest
Library
Frameworks
.framework
Modules
MODULE_DOC_BLOCK
COMMENT_BLOCK
MODULE_SOURCEINFO_BLOCK
DECL_LOCS_BLOCK
SOURCE_FILE_LIST
Serializing
SwiftPM
Swift
macCatalyst
macOS
tvOS
watchOS
iOSAppExtension
macCatalystAppExtension
macOSAppExtension
tvOSAppExtension
watchOSAppExtension
OpenBSD
Windows
domain
obsoleted
isUnconditionallyDeprecated
isUnconditionallyUnavailable
keyword
attribute
number
string
identifier
typeIdentifier
genericParameter
internalParam
externalParam
text
kind
spelling
preciseIdentifier
targetFallback
swiftConstraints
sourceOrigin
identifier
displayName
swiftExtension
conformance
superclass
sameType
major
minor
patch
prerelease
architecture
environment
vendor
operatingSystem
name
minimumVersion
extendedModule
constraints
rhsPrecise
index
depth
swift.class
swift.struct
Structure
swift.enum
Enumeration
swift.enum.case
Case
swift.init
Initializer
swift.deinit
Deinitializer
swift.func.op
Operator
swift.type.method
Type Method
swift.method
Instance Method
swift.func
swift.type.property
Type Property
swift.property
Instance Property
swift.var
Global Variable
swift.type.subscript
Type Subscript
swift.subscript
Instance Subscript
swift.typealias
Type Alias
swift.associatedtype
Associated Type
Unsupported kind: 
pathComponents
names
docComment
functionSignature
swiftGenerics
declarationFragments
accessLevel
location
::SYNTHESIZED::
precise
interfaceLanguage
title
navigator
subHeading
line
character
start
lines
internalName
position
ignored
TAK_autoclosure
TAK_convention
TAK_noescape
TAK_escaping
TAK_differentiable
TAK_noDerivative
TAK_async
TAK_Sendable
TAK_block_storage
TAK_box
TAK_dynamic_self
TAK_sil_weak
TAK_sil_unowned
TAK_sil_unmanaged
TAK_error
TAK_out
TAK_in
TAK_inout
TAK_inout_aliasable
TAK_in_guaranteed
TAK_in_constant
TAK_owned
TAK_unowned_inner_pointer
TAK_guaranteed
TAK_autoreleased
TAK_callee_owned
TAK_callee_guaranteed
TAK_objc_metatype
TAK_opened
TAK_pseudogeneric
TAK_yields
TAK_yield_once
TAK_yield_many
TAK_thin
TAK_thick
TAK__opaqueReturnTypeOf
DAK_SILGenName
DAK_Available
DAK_Exported
DAK_Inline
DAK_Semantics
DAK_Infix
DAK_Prefix
DAK_Postfix
DAK_Transparent
DAK_FixedLayout
DAK_Inlinable
DAK_Specialize
DAK_Consuming
DAK_HasStorage
DAK_SetterAccess
DAK_RawDocComment
DAK_Effects
DAK_ObjCBridged
DAK_ObjCNonLazyRealization
DAK_SynthesizedProtocol
DAK_Alignment
DAK_SwiftNativeObjCRuntimeBase
DAK_ShowInInterface
DAK_CDecl
DAK_Implements
DAK_ObjCRuntimeName
DAK_StaticInitializeObjCMetadata
DAK_RestatedObjCConformance
DAK_Optimize
DAK_ClangImporterSynthesizedType
DAK_WeakLinked
DAK_ForbidSerializingReference
DAK_HasInitialValue
DAK_NonOverride
DAK_DynamicReplacement
DAK_Borrowed
DAK_PrivateImport
DAK_AlwaysEmitIntoClient
DAK_ImplementationOnly
DAK_Custom
DAK_DisfavoredOverload
DAK_ProjectedValueProperty
DAK_NonEphemeral
DAK_HasMissingDesignatedInitializers
DAK_InheritsConvenienceInitializers
DAK_TypeEraser
DAK_OriginallyDefinedIn
DAK_SPIAccessControl
DAK_SpecializeExtension
DAK_Marker
DAK_UnsafeSendable
DAK_UnsafeMainActor
DAK_ImplicitSelfCapture
DAK_InheritActorContext
Version
Empty
memberOf
inheritsFrom
defaultImplementationOf
requirementOf
optionalRequirementOf
conformsTo
overrides
moduleVersion
symbols
relationships
formatVersion
generator
bystanders
platform
globals
access
$ld$previous$
$ld$hide$os
macOS
tvOS
watchOS
macCatalyst
iOS_sim
tvOS_sim
watchOS_sim
platforms
install_name
LD_NO_ENCRYPT
LD_APPLICATION_EXTENSION_SAFE
PublicSymbolsRequest
Generate TBD for 
module 
file 
getter:
setter:
didSet:
willSet:
test
 [invalid_diagnostic]
 [not_implemented]
 [error_opening_output]
 [cannot_find_group_info_file]
 [cannot_parse_group_info_file]
 [error_no_group_info]
 [previous_decldef]
 [brace_stmt_suggest_do]
 [while_parsing_as_left_angle_bracket]
 [remark_max_determinism_overriding]
 [super_not_in_class_method]
 [class_func_not_in_class]
 [class_var_not_in_class]
 [class_subscript_not_in_class]
 [func_decl_without_brace]
 [convert_let_to_var]
 [note_typo_candidate]
 [profile_read_error]
 [protocol_extension_redundant_requirement]
 [attr_only_on_parameters]
 [function_type_no_parens]
 [error_underlying_module_not_found]
 [generic_signature_not_minimal]
 [generic_signature_not_valid]
 [generic_signature_not_equal]
 [concurrency_default_actor_not_found]
 [sdk_node_unrecognized_key]
 [sdk_node_unrecognized_node_kind]
 [sdk_node_unrecognized_type_attr_kind]
 [sdk_node_unrecognized_decl_attr_kind]
 [sdk_node_unrecognized_decl_kind]
 [sdk_node_unrecognized_accessor_kind]
 [source_location_creates_file_id_conflicts]
 [fixit_correct_source_location_file]
 [error_two_files_same_name]
 [note_explain_two_files_same_name]
 [circular_reference]
 [circular_reference_through]
 [circular_class_inheritance]
 [circular_enum_inheritance]
 [circular_protocol_def]
 [kind_declname_declared_here]
 [warn_property_wrapper_module_scope]
 [circular_type_resolution_note]
 [cannot_load_swiftoverlay_file]
 [cannot_list_swiftcrossimport_dir]
 [cross_imported_by_both_modules]
 [scanner_find_cycle]
 [scanner_arguments_invalid]
 [ambiguous_custom_attribute_ref]
 [ambiguous_custom_attribute_ref_fix]
 [found_attribute_candidate]
 [unknown_attribute]
 [opening_brace]
 [opening_bracket]
 [opening_paren]
 [opening_angle]
 [extra_rbrace]
 [structure_overflow]
 [expected_close_to_if_directive]
 [expected_close_after_else_directive]
 [unexpected_conditional_compilation_block_terminator]
 [incomplete_conditional_compilation_directive]
 [extra_tokens_conditional_compilation_directive]
 [unexpected_rbrace_in_conditional_compilation_block]
 [unexpected_if_following_else_compilation_directive]
 [pound_diagnostic_expected_string]
 [pound_diagnostic_expected]
 [pound_diagnostic_expected_parens]
 [pound_diagnostic_interpolation]
 [extra_tokens_pound_diagnostic_directive]
 [sourceLocation_expected]
 [unexpected_line_directive]
 [expected_line_directive_number]
 [expected_line_directive_name]
 [extra_tokens_line_directive]
 [line_directive_line_zero]
 [escaped_parameter_name]
 [forbidden_interpolated_string]
 [forbidden_extended_escaping_string]
 [lex_nul_character]
 [lex_utf16_bom_marker]
 [lex_hashbang_not_allowed]
 [lex_unprintable_ascii_character]
 [lex_invalid_utf8]
 [lex_single_quote_string]
 [lex_invalid_curly_quote]
 [lex_confusable_character]
 [lex_nonbreaking_space]
 [lex_unterminated_block_comment]
 [lex_comment_start]
 [lex_unterminated_string]
 [lex_invalid_escape]
 [lex_invalid_u_escape]
 [lex_invalid_u_escape_rbrace]
 [lex_invalid_escape_delimiter]
 [lex_invalid_closing_delimiter]
 [lex_invalid_unicode_scalar]
 [lex_unicode_escape_braces]
 [lex_illegal_multiline_string_start]
 [lex_illegal_multiline_string_end]
 [lex_multiline_string_indent_inconsistent]
 [lex_multiline_string_indent_should_match_here]
 [lex_multiline_string_indent_change_line]
 [lex_escaped_newline_at_lastline]
 [lex_invalid_character]
 [lex_invalid_identifier_start_character]
 [lex_expected_digit_in_fp_exponent]
 [lex_invalid_digit_in_fp_exponent]
 [lex_invalid_digit_in_int_literal]
 [lex_expected_binary_exponent_in_hex_float_literal]
 [lex_unexpected_block_comment_end]
 [lex_unary_equal]
 [extra_whitespace_period]
 [lex_editor_placeholder]
 [lex_editor_placeholder_in_playground]
 [lex_conflict_marker_in_file]
 [note_in_decl_extension]
 [line_directive_style_deprecated]
 [declaration_same_line_without_semi]
 [expected_decl]
 [expected_identifier_in_decl]
 [expected_keyword_in_decl]
 [number_cant_start_decl_name]
 [expected_identifier_after_case_comma]
 [decl_redefinition]
 [let_cannot_be_computed_property]
 [let_cannot_be_observing_property]
 [let_cannot_be_addressed_property]
 [disallowed_var_multiple_getset]
 [disallowed_init]
 [var_init_self_referential]
 [disallowed_enum_element]
 [decl_inner_scope]
 [decl_not_static]
 [cskeyword_not_attribute]
 [decl_already_static]
 [enum_case_dot_prefix]
 [static_var_decl_global_scope]
 [computed_property_no_accessors]
 [expected_getset_in_protocol]
 [unexpected_getset_implementation_in_protocol]
 [computed_property_missing_type]
 [getset_nontrivial_pattern]
 [expected_rbrace_in_getset]
 [duplicate_accessor]
 [conflicting_accessor]
 [previous_accessor]
 [expected_accessor_parameter_name]
 [expected_rparen_set_name]
 [expected_rparen_willSet_name]
 [expected_rparen_didSet_name]
 [expected_lbrace_accessor]
 [expected_accessor_kw]
 [invalid_accessor_specifier]
 [invalid_accessor_with_effectful_get]
 [missing_getter]
 [missing_reading_accessor]
 [observing_accessor_conflicts_with_accessor]
 [observing_accessor_in_subscript]
 [getset_cannot_be_implied]
 [decl_expected_module_name]
 [expected_lbrace_extension]
 [expected_rbrace_extension]
 [extension_type_expected]
 [expected_equal_in_typealias]
 [expected_type_in_typealias]
 [expected_type_in_associatedtype]
 [associated_type_generic_parameter_list]
 [func_decl_without_paren]
 [static_func_decl_global_scope]
 [func_decl_expected_arrow]
 [operator_static_in_protocol]
 [async_func_modifier]
 [expected_lbrace_enum]
 [expected_rbrace_enum]
 [expected_lbrace_struct]
 [expected_rbrace_struct]
 [expected_lbrace_class]
 [expected_rbrace_class]
 [expected_colon_class]
 [generic_arguments_protocol]
 [expected_lbrace_protocol]
 [expected_rbrace_protocol]
 [protocol_setter_name]
 [protocol_method_with_body]
 [protocol_init_with_body]
 [subscript_decl_wrong_scope]
 [expected_lparen_subscript]
 [subscript_has_name]
 [expected_arrow_subscript]
 [expected_type_subscript]
 [expected_lbrace_subscript]
 [expected_lbrace_subscript_protocol]
 [subscript_without_get]
 [invalid_nested_init]
 [initializer_decl_wrong_scope]
 [expected_lparen_initializer]
 [initializer_has_name]
 [destructor_decl_outside_class]
 [expected_lbrace_destructor]
 [destructor_has_name]
 [opened_destructor_expected_rparen]
 [destructor_params]
 [operator_decl_inner_scope]
 [expected_operator_name_after_operator]
 [identifier_within_operator_name]
 [operator_name_invalid_char]
 [postfix_operator_name_cannot_start_with_unwrap]
 [deprecated_operator_body]
 [deprecated_operator_body_use_group]
 [operator_decl_no_fixity]
 [operator_decl_expected_type]
 [operator_decl_trailing_comma]
 [precedencegroup_not_infix]
 [expected_precedencegroup_name]
 [expected_precedencegroup_lbrace]
 [expected_precedencegroup_attribute]
 [unknown_precedencegroup_attribute]
 [expected_precedencegroup_attribute_colon]
 [precedencegroup_attribute_redeclared]
 [expected_precedencegroup_associativity]
 [expected_precedencegroup_assignment]
 [expected_precedencegroup_relation]
 [expected_sil_keyword]
 [inout_not_attribute]
 [only_allowed_in_sil]
 [expected_sil_type]
 [expected_sil_colon_value_ref]
 [expected_sil_value_name]
 [expected_sil_type_kind]
 [expected_sil_constant]
 [referenced_value_no_accessor]
 [expected_sil_value_ownership_kind]
 [silfunc_and_silarg_have_incompatible_sil_value_ownership]
 [expected_sil_colon]
 [expected_sil_tuple_index]
 [invalid_index_subset]
 [sil_value_redefinition]
 [sil_value_use_type_mismatch]
 [sil_value_def_type_mismatch]
 [sil_use_of_undefined_value]
 [sil_prior_reference]
 [expected_colon_in_sil_location]
 [sil_invalid_line_in_sil_location]
 [sil_invalid_column_in_sil_location]
 [sil_invalid_scope_slot]
 [sil_scope_undeclared]
 [sil_scope_redefined]
 [expected_sil_instr_start_of_line]
 [expected_equal_in_sil_instr]
 [wrong_result_count_in_sil_instr]
 [expected_sil_instr_opcode]
 [expected_tok_in_sil_instr]
 [sil_property_generic_signature_mismatch]
 [sil_string_no_encoding]
 [sil_string_invalid_encoding]
 [expected_tuple_type_in_tuple]
 [sil_tuple_inst_wrong_value_count]
 [sil_tuple_inst_wrong_field]
 [sil_struct_inst_wrong_field]
 [sil_ref_inst_wrong_field]
 [sil_invalid_instr_operands]
 [sil_operand_not_address]
 [sil_operand_not_ref_storage_address]
 [sil_integer_literal_not_integer_type]
 [sil_integer_literal_not_well_formed]
 [sil_float_literal_not_float_type]
 [sil_substitutions_on_non_polymorphic_type]
 [sil_witness_method_not_protocol]
 [sil_witness_method_type_does_not_conform]
 [sil_member_decl_not_found]
 [sil_named_member_decl_not_found]
 [sil_member_lookup_bad_type]
 [sil_member_decl_type_mismatch]
 [sil_substitution_mismatch]
 [sil_not_class]
 [sil_missing_substitutions]
 [sil_too_many_substitutions]
 [sil_dbg_unknown_key]
 [sil_objc_with_tail_elements]
 [sil_expected_access_kind]
 [sil_expected_access_enforcement]
 [sil_keypath_expected_component_kind]
 [sil_keypath_unknown_component_kind]
 [sil_keypath_computed_property_missing_part]
 [sil_keypath_no_root]
 [sil_keypath_index_not_hashable]
 [sil_keypath_index_operand_type_conflict]
 [sil_keypath_no_use_of_operand_in_pattern]
 [expected_sil_block_name]
 [expected_sil_block_colon]
 [sil_undefined_basicblock_use]
 [sil_basicblock_redefinition]
 [sil_basicblock_arg_rparen]
 [expected_sil_function_name]
 [expected_sil_rbrace]
 [expected_sil_function_type]
 [sil_dynamically_replaced_func_not_found]
 [sil_specialize_target_func_not_found]
 [sil_availability_expected_version]
 [expected_sil_stage_name]
 [multiple_sil_stage_decls]
 [expected_sil_vtable_colon]
 [sil_vtable_func_not_found]
 [sil_vtable_class_not_found]
 [sil_vtable_bad_entry_kind]
 [sil_vtable_expect_rsquare]
 [sil_global_variable_not_found]
 [expected_sil_witness_colon]
 [expected_sil_witness_lparen]
 [expected_sil_witness_rparen]
 [sil_witness_func_not_found]
 [sil_witness_protocol_not_found]
 [sil_witness_assoc_not_found]
 [sil_witness_assoc_conf_not_found]
 [sil_witness_protocol_conformance_not_found]
 [sil_diff_witness_expected_token]
 [sil_diff_witness_unknown_kind]
 [sil_diff_witness_serialized_declaration]
 [sil_diff_witness_undefined]
 [sil_diff_witness_invalid_generic_signature]
 [sil_coverage_invalid_hash]
 [sil_coverage_expected_lbrace]
 [sil_coverage_expected_loc]
 [sil_coverage_expected_arrow]
 [sil_coverage_expected_colon]
 [sil_coverage_invalid_counter]
 [sil_coverage_expected_rparen]
 [sil_coverage_expected_quote]
 [sil_coverage_invalid_operator]
 [expected_type]
 [expected_init_value]
 [expected_identifier_in_dotted_type]
 [expected_identifier_for_type]
 [expected_rangle_generic_arg_list]
 [expected_type_function_result]
 [generic_non_function]
 [rethrowing_function_type]
 [reasync_function_type]
 [async_or_throws_in_wrong_position]
 [throw_in_function_type]
 [expected_type_before_arrow]
 [expected_type_after_arrow]
 [function_type_argument_label]
 [expected_dynamic_func_attr]
 [async_after_throws]
 [duplicate_effects_specifier]
 [expected_expr_enum_case_raw_value]
 [nonliteral_enum_case_raw_value]
 [new_array_syntax]
 [expected_rbracket_array_type]
 [expected_element_type]
 [expected_dictionary_value_type]
 [expected_rbracket_dictionary_type]
 [extra_rbracket]
 [extra_colon]
 [subscript_array_element]
 [subscript_array_element_fix_it_add_comma]
 [subscript_array_element_fix_it_remove_space]
 [expected_rparen_tuple_type_list]
 [multiple_ellipsis_in_tuple]
 [tuple_type_init]
 [protocol_method_argument_init]
 [protocol_init_argument_init]
 [protocol_subscript_argument_init]
 [tuple_type_multiple_labels]
 [expected_rangle_protocol]
 [deprecated_protocol_composition]
 [deprecated_protocol_composition_single]
 [deprecated_any_composition]
 [sil_box_expected_var_or_let]
 [sil_box_expected_r_brace]
 [sil_box_expected_r_angle]
 [sil_function_subst_expected_l_angle]
 [sil_function_subst_expected_r_angle]
 [sil_function_subst_expected_generics]
 [sil_function_subst_expected_function]
 [sil_function_subst_expected_subs]
 [sil_function_subs_without_generics]
 [opaque_mid_composition]
 [layout_size_should_be_positive]
 [layout_alignment_should_be_positive]
 [expected_rparen_layout_constraint]
 [layout_constraints_only_inside_specialize_attr]
 [expected_pattern]
 [keyword_cant_be_identifier]
 [repeated_identifier]
 [join_identifiers]
 [join_identifiers_camel_case]
 [backticks_to_escape]
 [expected_rparen_tuple_pattern_list]
 [untyped_pattern_ellipsis]
 [no_default_arg_closure]
 [no_default_arg_curried]
 [var_pattern_in_var]
 [extra_var_in_multiple_pattern_list]
 [let_pattern_in_immutable_context]
 [specifier_must_have_type]
 [expected_rparen_parameter]
 [expected_parameter_type]
 [expected_parameter_name]
 [expected_parameter_colon]
 [expected_assignment_instead_of_comparison_operator]
 [parameter_vararg_default]
 [parameter_specifier_as_attr_disallowed]
 [parameter_specifier_repeated]
 [parameter_let_var_as_attr]
 [parameter_extraneous_double_up]
 [parameter_operator_keyword_argument]
 [parameter_unnamed]
 [parameter_unnamed_warn]
 [parameter_curry_syntax_removed]
 [initializer_as_typed_pattern]
 [unlabeled_parameter_following_variadic_parameter]
 [closure_unlabeled_parameter_following_variadic_parameter]
 [enum_element_empty_arglist]
 [enum_element_empty_arglist_swift4]
 [enum_element_empty_arglist_delete]
 [enum_element_empty_arglist_add_void]
 [expected_stmt]
 [illegal_top_level_stmt]
 [illegal_top_level_expr]
 [illegal_semi_stmt]
 [statement_begins_with_closure]
 [statement_same_line_without_semi]
 [statement_same_line_without_newline]
 [invalid_label_on_stmt]
 [labeled_block_needs_do]
 [snake_case_deprecated]
 [expected_expr_assignment]
 [expected_rbrace_in_brace_stmt]
 [typealias_inside_protocol_without_type]
 [associatedtype_outside_protocol]
 [expected_expr_return]
 [unindented_code_after_return]
 [indent_expression_to_silence]
 [expected_expr_throw]
 [expected_await_not_async]
 [expected_expr_yield]
 [expected_lbrace_after_defer]
 [expected_comma_stmtcondition]
 [expected_expr_conditional]
 [expected_binding_keyword]
 [expected_expr_conditional_var]
 [conditional_var_initializer_required]
 [wrong_condition_case_location]
 [expected_condition_if]
 [missing_condition_after_if]
 [expected_lbrace_after_if]
 [expected_lbrace_or_if_after_else]
 [expected_lbrace_or_if_after_else_fixit]
 [unexpected_else_after_if]
 [suggest_removing_else]
 [expected_condition_guard]
 [missing_condition_after_guard]
 [expected_else_after_guard]
 [expected_lbrace_after_guard]
 [expected_condition_while]
 [missing_condition_after_while]
 [expected_lbrace_after_while]
 [expected_lbrace_after_repeat]
 [expected_while_after_repeat_body]
 [expected_expr_repeat_while]
 [do_while_now_repeat_while]
 [do_while_expected_repeat_while]
 [do_while_expected_separate_stmt]
 [expected_lbrace_after_do]
 [expected_lbrace_after_catch]
 [expected_catch_where_expr]
 [docatch_not_trycatch]
 [c_style_for_stmt_removed]
 [expected_foreach_in]
 [expected_foreach_container]
 [expected_foreach_lbrace]
 [expected_foreach_where_expr]
 [expected_switch_expr]
 [expected_lbrace_after_switch]
 [expected_rbrace_switch]
 [case_outside_of_switch]
 [stmt_in_switch_not_covered_by_case]
 [case_after_default]
 [expected_case_where_expr]
 [expected_case_colon]
 [default_with_where]
 [case_stmt_without_body]
 [try_on_stmt]
 [try_on_return_throw_yield]
 [try_on_var_let]
 [expected_expr]
 [expected_separator]
 [unexpected_separator]
 [expected_expr_after_operator]
 [expected_expr_after_unary_operator]
 [expected_prefix_operator]
 [expected_operator_ref]
 [invalid_postfix_operator]
 [expected_member_name]
 [dollar_numeric_too_large]
 [numeric_literal_numeric_member]
 [standalone_dollar_identifier]
 [dollar_identifier_decl]
 [anon_closure_arg_not_in_closure]
 [anon_closure_arg_in_closure_with_args]
 [anon_closure_arg_in_closure_with_args_typo]
 [anon_closure_tuple_param_destructuring]
 [expected_closure_parameter_name]
 [expected_capture_specifier]
 [expected_capture_specifier_name]
 [expected_init_capture_specifier]
 [expected_capture_list_end_rsquare]
 [cannot_capture_fields]
 [expected_closure_result_type]
 [expected_closure_in]
 [unexpected_tokens_before_closure_in]
 [expected_closure_rbrace]
 [trailing_closure_after_newlines]
 [trailing_closure_callee_here]
 [string_literal_no_atsign]
 [invalid_float_literal_missing_leading_zero]
 [availability_query_outside_if_stmt_guard]
 [empty_arg_label_underscore]
 [expected_identifier_after_dot_expr]
 [expected_identifier_after_super_dot_expr]
 [expected_dot_or_subscript_after_super]
 [super_in_closure_with_capture]
 [super_in_closure_with_capture_here]
 [await_before_try]
 [expected_expr_in_expr_list]
 [expected_expr_in_collection_literal]
 [expected_key_in_dictionary_literal]
 [expected_value_in_dictionary_literal]
 [expected_colon_in_dictionary_literal]
 [expected_rparen_expr_list]
 [expected_rsquare_expr_list]
 [expected_rsquare_array_expr]
 [expected_arg_list_in_object_literal]
 [legacy_object_literal]
 [unknown_pound_expr]
 [expected_expr_after_if_question]
 [expected_colon_after_if_question]
 [expected_expr_after_if_colon]
 [expected_expr_after_try]
 [expected_expr_after_await]
 [expected_type_after_is]
 [expected_type_after_as]
 [string_interpolation_extra]
 [string_interpolation_list_changing]
 [string_interpolation_list_insert_parens]
 [string_interpolation_label_changing]
 [string_interpolation_remove_label]
 [expr_keypath_expected_lparen]
 [expr_keypath_expected_property_or_type]
 [expr_keypath_expected_rparen]
 [expr_keypath_expected_expr]
 [expr_selector_expected_lparen]
 [expr_selector_expected_method_expr]
 [expr_selector_expected_property_expr]
 [expr_selector_expected_rparen]
 [expr_dynamictype_deprecated]
 [pound_assert_disabled]
 [pound_assert_expected_lparen]
 [pound_assert_expected_rparen]
 [pound_assert_expected_expression]
 [pound_assert_expected_string_literal]
 [expr_postfix_ifconfig_unexpectedtoken]
 [replace_equal_with_colon_for_value]
 [expected_attribute_name]
 [unexpected_lparen_in_attribute]
 [duplicate_attribute]
 [previous_attribute]
 [mutually_exclusive_attrs]
 [invalid_infix_on_func]
 [expected_in_attribute_list]
 [type_attribute_applied_to_decl]
 [decl_attribute_applied_to_type]
 [attr_expected_lparen]
 [attr_expected_rparen]
 [attr_expected_comma]
 [attr_expected_string_literal]
 [attr_expected_integer_literal]
 [attr_expected_option_such_as]
 [attr_unknown_option]
 [attr_missing_label]
 [attr_expected_label]
 [alignment_must_be_positive_integer]
 [swift_native_objc_runtime_base_must_be_identifier]
 [objc_runtime_name_must_be_identifier]
 [attr_only_at_non_local_scope]
 [projection_value_property_not_identifier]
 [attr_access_expected_set]
 [attr_access_expected_spi_name]
 [attr_renamed]
 [attr_renamed_warning]
 [attr_name_close_match]
 [attr_unsupported_on_target]
 [attr_availability_platform]
 [attr_availability_unavailable_deprecated]
 [attr_availability_invalid_duplicate]
 [attr_availability_unknown_platform]
 [attr_availability_invalid_renamed]
 [attr_availability_expected_option]
 [attr_availability_expected_equal]
 [attr_availability_expected_version]
 [attr_availability_platform_agnostic_expected_option]
 [attr_availability_platform_agnostic_expected_deprecated_version]
 [attr_availability_platform_agnostic_infeasible_option]
 [attr_availability_nonspecific_platform_unexpected_version]
 [attr_availability_wildcard_in_macro]
 [attr_availability_missing_macro_name]
 [attr_availability_expected_colon_macro]
 [attr_availability_unknown_version]
 [attr_availability_duplicate]
 [originally_defined_in_missing_rparen]
 [originally_defined_in_unrecognized_platform]
 [originally_defined_in_unrecognized_property]
 [originally_defined_in_need_original_module_name]
 [originally_defined_in_need_nonempty_module_name]
 [originally_defined_in_need_platform_version]
 [originally_defined_in_major_minor_only]
 [originally_defined_in_missing_platform_name]
 [originally_defined_in_swift_version]
 [originally_defined_in_package_description]
 [convention_attribute_expected_lparen]
 [convention_attribute_expected_name]
 [convention_attribute_expected_rparen]
 [convention_attribute_ctype_expected_label]
 [convention_attribute_ctype_expected_colon]
 [convention_attribute_ctype_expected_string]
 [convention_attribute_witness_method_expected_colon]
 [convention_attribute_witness_method_expected_protocol]
 [attr_objc_missing_colon]
 [attr_objc_expected_rparen]
 [attr_objc_empty_name]
 [attr_dynamic_replacement_expected_rparen]
 [attr_dynamic_replacement_expected_function]
 [attr_dynamic_replacement_expected_for]
 [attr_dynamic_replacement_expected_colon]
 [attr_type_eraser_expected_type_name]
 [attr_type_eraser_expected_rparen]
 [attr_private_import_expected_rparen]
 [attr_private_import_expected_sourcefile]
 [attr_private_import_expected_sourcefile_name]
 [attr_private_import_expected_colon]
 [opened_attribute_expected_lparen]
 [opened_attribute_id_value]
 [opened_attribute_expected_rparen]
 [effects_attribute_expect_option]
 [attr_unowned_invalid_specifier]
 [attr_unowned_expected_rparen]
 [attr_warn_unused_result_removed]
 [attr_warn_unused_result_expected_rparen]
 [attr_specialize_missing_colon]
 [attr_specialize_missing_comma]
 [attr_specialize_unknown_parameter_name]
 [attr_specialize_expected_bool_value]
 [attr_specialize_missing_parameter_label_or_where_clause]
 [attr_specialize_parameter_already_defined]
 [attr_specialize_expected_partial_or_full]
 [attr_specialize_expected_function]
 [attr_specialize_expected_spi_name]
 [attr_implements_expected_member_name]
 [attr_differentiable_expected_reverse]
 [attr_differentiable_kind_not_supported]
 [attr_differentiable_unknown_kind]
 [attr_differentiable_expected_parameter_list]
 [attr_differentiable_use_wrt_not_withrespectto]
 [attr_differentiable_expected_label]
 [expected_colon_after_label]
 [diff_params_clause_expected_parameter]
 [diff_params_clause_expected_parameter_unnamed]
 [autodiff_attr_expected_original_decl_name]
 [sil_autodiff_expected_lsquare]
 [sil_autodiff_expected_rsquare]
 [sil_autodiff_expected_index_list]
 [sil_autodiff_expected_index_list_label]
 [sil_autodiff_expected_parameter_index]
 [sil_autodiff_expected_result_index]
 [sil_inst_autodiff_operand_list_expected_lbrace]
 [sil_inst_autodiff_operand_list_expected_comma]
 [sil_inst_autodiff_operand_list_expected_rbrace]
 [sil_inst_autodiff_expected_differentiable_extractee_kind]
 [sil_inst_autodiff_expected_linear_extractee_kind]
 [sil_inst_autodiff_expected_function_type_operand]
 [sil_inst_autodiff_expected_differentiability_witness_kind]
 [sil_inst_autodiff_invalid_witness_generic_signature]
 [attr_completion_handler_async_invalid_name]
 [expected_rangle_generics_param]
 [expected_generics_parameter_name]
 [unexpected_class_constraint]
 [suggest_anyobject]
 [expected_generics_type_restriction]
 [requires_single_equal]
 [requires_comma]
 [expected_requirement_delim]
 [redundant_class_requirement]
 [late_class_requirement]
 [where_inside_brackets]
 [unsupported_conditional_compilation_binary_expression]
 [unsupported_conditional_compilation_unary_expression]
 [unsupported_platform_condition_expression]
 [platform_condition_expected_one_argument]
 [unsupported_platform_runtime_condition_argument]
 [unsupported_platform_condition_argument]
 [unsupported_conditional_compilation_expression_type]
 [unsupported_conditional_compilation_integer]
 [version_component_not_number]
 [compiler_version_too_many_components]
 [unused_compiler_version_component]
 [empty_version_component]
 [compiler_version_component_out_of_range]
 [empty_version_string]
 [unknown_platform_condition_argument]
 [renamed_platform_condition_argument]
 [likely_simulator_platform_condition]
 [avail_query_expected_condition]
 [avail_query_expected_platform_name]
 [avail_query_expected_version_number]
 [avail_query_expected_rparen]
 [avail_query_unrecognized_platform_name]
 [avail_query_disallowed_operator]
 [avail_query_argument_and_shorthand_mix_not_allowed]
 [avail_query_meant_introduced]
 [avail_query_version_comparison_not_needed]
 [availability_query_wildcard_required]
 [availability_must_occur_alone]
 [pound_available_swift_not_allowed]
 [pound_available_package_description_not_allowed]
 [availability_query_repeated_platform]
 [attr_requires_concurrency]
 [unknown_syntax_entity]
 [expected_argument_label_followed_by_closure_literal]
 [expected_closure_literal]
 [expected_multiple_closures_block_rbrace]
 [decl_declared_here]
 [kind_declared_here]
 [implicit_member_declared_here]
 [extended_type_declared_here]
 [opaque_return_type_declared_here]
 [ambiguous_member_overload_set]
 [ambiguous_reference_to_decl]
 [no_overloads_match_exactly_in_call]
 [candidate_partial_match]
 [could_not_find_value_subscript]
 [could_not_find_tuple_member]
 [could_not_find_value_member]
 [could_not_find_value_member_corrected]
 [could_not_find_value_dynamic_member_corrected]
 [could_not_find_value_dynamic_member]
 [cannot_infer_contextual_keypath_type_specify_root]
 [cannot_infer_keypath_root_anykeypath_context]
 [could_not_find_type_member]
 [could_not_find_type_member_corrected]
 [could_not_find_subscript_member_did_you_mean]
 [could_not_find_subscript_member_tuple]
 [could_not_find_subscript_member_tuple_did_you_mean_use_dot]
 [could_not_find_enum_case]
 [did_you_mean_raw_type]
 [did_you_mean_generic_param_as_conformance]
 [any_as_anyobject_fixit]
 [expected_argument_in_contextual_member]
 [expected_parens_in_contextual_member]
 [expected_parens_in_contextual_member_type]
 [expected_result_in_contextual_member]
 [unexpected_arguments_in_enum_case]
 [could_not_use_type_member_on_instance]
 [could_not_use_enum_element_on_instance]
 [could_not_use_type_member_on_protocol_metatype]
 [could_not_use_instance_member_on_type]
 [could_not_use_member_on_existential]
 [candidate_inaccessible]
 [note_candidate_inaccessible]
 [init_candidate_inaccessible]
 [cannot_pass_rvalue_mutating_subelement]
 [cannot_pass_rvalue_mutating]
 [cannot_pass_rvalue_mutating_getter_subelement]
 [cannot_pass_rvalue_mutating_getter]
 [expression_too_complex]
 [value_type_comparison_with_nil_illegal_did_you_mean]
 [value_type_comparison_with_nil_illegal]
 [cannot_match_expr_pattern_with_value]
 [cannot_match_expr_tuple_pattern_with_nontuple_value]
 [cannot_match_unresolved_expr_pattern_with_value]
 [cannot_reference_compare_types]
 [cannot_apply_binop_to_args]
 [cannot_apply_binop_to_same_args]
 [cannot_apply_unop_to_arg]
 [cannot_apply_lvalue_unop_to_subelement]
 [cannot_apply_lvalue_unop_to_rvalue]
 [cannot_apply_lvalue_binop_to_subelement]
 [cannot_apply_lvalue_binop_to_rvalue]
 [cannot_subscript_base]
 [cannot_subscript_ambiguous_base]
 [cannot_subscript_nil_literal]
 [conditional_cast_from_nil]
 [cannot_pass_rvalue_inout_subelement]
 [cannot_pass_rvalue_inout_converted]
 [inout_change_var_type_if_possible]
 [cannot_pass_rvalue_inout]
 [cannot_provide_default_value_inout]
 [cannot_call_with_params]
 [cannot_call_non_function_value]
 [no_candidates_match_result_type]
 [no_candidates_match_argument_type]
 [cannot_infer_closure_parameter_type]
 [cannot_infer_closure_type]
 [cannot_infer_closure_result_type]
 [use_of_anon_closure_param]
 [incorrect_explicit_closure_result]
 [unsupported_closure_attr]
 [suggest_expected_match]
 [suggest_partial_overloads]
 [no_binary_op_overload_for_enum_with_payload]
 [cannot_convert_initializer_value]
 [cannot_convert_initializer_value_protocol]
 [cannot_convert_initializer_value_anyobject]
 [cannot_convert_initializer_value_nil]
 [cannot_convert_to_return_type]
 [cannot_convert_to_return_type_protocol]
 [cannot_convert_return_type_to_anyobject]
 [cannot_convert_to_return_type_nil]
 [cannot_convert_thrown_type]
 [cannot_throw_error_code]
 [bad_yield_count]
 [cannot_throw_nil]
 [cannot_convert_raw_initializer_value]
 [cannot_convert_raw_initializer_value_nil]
 [cannot_convert_default_arg_value]
 [cannot_convert_default_arg_value_protocol]
 [cannot_convert_default_arg_value_nil]
 [cannot_convert_argument_value]
 [candidate_has_invalid_argument_at_position]
 [cannot_convert_array_to_variadic]
 [candidate_would_match_array_to_variadic]
 [suggest_pass_elements_directly]
 [cannot_convert_argument_value_generic]
 [conflicting_arguments_for_generic_parameter]
 [cannot_pass_type_to_non_ephemeral]
 [cannot_pass_type_to_non_ephemeral_warning]
 [cannot_use_inout_non_ephemeral]
 [cannot_use_inout_non_ephemeral_warning]
 [cannot_construct_dangling_pointer]
 [cannot_construct_dangling_pointer_warning]
 [ephemeral_pointer_argument_conversion_note]
 [ephemeral_use_with_unsafe_pointer]
 [ephemeral_use_string_with_c_string]
 [ephemeral_use_array_with_unsafe_buffer]
 [candidate_performs_illegal_ephemeral_conv]
 [cannot_convert_argument_value_protocol]
 [cannot_convert_argument_value_anyobject]
 [cannot_convert_argument_value_nil]
 [note_incompatible_argument_value_nil_at_pos]
 [cannot_convert_condition_value]
 [cannot_convert_condition_value_nil]
 [cannot_yield_rvalue_by_reference_same_type]
 [cannot_yield_rvalue_by_reference]
 [cannot_yield_wrong_type_by_reference]
 [cannot_convert_yield_value]
 [cannot_convert_yield_value_protocol]
 [cannot_convert_yield_value_nil]
 [cannot_convert_closure_result]
 [cannot_convert_closure_result_protocol]
 [cannot_convert_closure_result_nil]
 [cannot_convert_parent_type]
 [cannot_convert_chain_result_type]
 [generic_argument_mismatch]
 [destructor_not_accessible]
 [cannot_convert_array_element]
 [cannot_convert_array_element_protocol]
 [cannot_convert_array_element_nil]
 [cannot_convert_dict_key]
 [cannot_convert_dict_key_protocol]
 [cannot_convert_dict_key_nil]
 [cannot_convert_dict_value]
 [cannot_convert_dict_value_protocol]
 [cannot_convert_dict_value_nil]
 [cannot_convert_coerce]
 [cannot_convert_coerce_protocol]
 [cannot_convert_coerce_nil]
 [cannot_convert_assign]
 [assign_protocol_conformance_fix_it]
 [cannot_convert_assign_protocol]
 [cannot_convert_assign_anyobject]
 [cannot_convert_assign_nil]
 [cannot_convert_subscript_assign]
 [cannot_convert_subscript_assign_protocol]
 [cannot_convert_subscript_assign_nil]
 [cannot_convert_candidate_result_to_contextual_type]
 [cannot_convert_sequence_element_value]
 [cannot_convert_sequence_element_protocol]
 [throws_functiontype_mismatch]
 [async_functiontype_mismatch]
 [cannot_pass_async_func_to_sync_parameter]
 [async_inferred_from_operation]
 [expr_keypath_no_objc_runtime]
 [expression_unused_keypath_result]
 [expr_keypath_non_objc_property]
 [expr_keypath_swift3_objc_inference]
 [expr_keypath_type_of_property]
 [expr_keypath_generic_type]
 [expr_keypath_not_property]
 [expr_keypath_mutating_getter]
 [expr_keypath_static_member]
 [expr_keypath_enum_case]
 [expr_keypath_empty]
 [expr_unsupported_objc_key_path_component]
 [expr_unsupported_objc_key_path_compound_name]
 [expr_keypath_no_keypath_type]
 [expr_swift_keypath_invalid_component]
 [expr_swift_keypath_not_starting_with_type]
 [expr_swift_keypath_not_starting_with_dot]
 [expr_smart_keypath_value_covert_to_contextual_type]
 [expr_swift_keypath_empty]
 [expr_string_interpolation_outside_string]
 [expr_keypath_subscript_index_not_hashable]
 [expr_smart_keypath_application_type_mismatch]
 [expr_keypath_root_type_mismatch]
 [expr_swift_keypath_anyobject_root]
 [expr_keypath_multiparam_func_conversion]
 [expr_deprecated_writable_keypath]
 [expr_selector_no_objc_runtime]
 [expr_selector_module_missing]
 [expr_selector_no_declaration]
 [expr_selector_not_method]
 [expr_selector_expected_property]
 [expr_selector_not_property]
 [expr_selector_expected_method]
 [expr_selector_add_modifier]
 [expr_selector_property_not_settable]
 [expr_selector_property_setter_inaccessible]
 [expr_selector_cannot_be_used]
 [expr_selector_not_objc]
 [make_decl_objc]
 [expr_selector_swift3_objc_inference]
 [selector_literal_invalid]
 [selector_literal_undeclared]
 [selector_literal_deprecated]
 [selector_literal_deprecated_suggest]
 [selector_construction_suggest]
 [selector_construction_suppress_warning]
 [cannot_return_value_from_void_func]
 [add_return_type_note]
 [sema_no_import]
 [sema_no_import_target]
 [sema_no_import_repl]
 [sema_no_import_no_sdk]
 [sema_no_import_no_sdk_xcrun]
 [sema_import_current_module]
 [sema_import_current_module_with_file]
 [sema_opening_import]
 [serialization_load_failed]
 [module_interface_build_failed]
 [module_interface_build_failed_mismatching_compiler]
 [serialization_malformed_module]
 [serialization_module_too_new]
 [serialization_module_language_version_mismatch]
 [serialization_module_too_old]
 [serialization_missing_single_dependency]
 [serialization_missing_dependencies]
 [serialization_circular_dependency]
 [serialization_missing_underlying_module]
 [serialization_name_mismatch]
 [serialization_name_mismatch_repl]
 [serialization_target_incompatible]
 [serialization_target_incompatible_repl]
 [serialization_target_too_new]
 [serialization_target_too_new_repl]
 [serialization_fatal]
 [serialization_misc_version]
 [serialization_compatibility_version_mismatch]
 [serialization_invalid_decl]
 [serialization_allowing_invalid_decl]
 [serialization_error_type]
 [serialization_allowing_error_type]
 [serialization_malformed_sourceinfo]
 [reserved_member_name]
 [invalid_redecl_by_optionality_note]
 [invalid_redecl]
 [invalid_redecl_init]
 [invalid_redecl_implicit]
 [invalid_redecl_swift5_warning]
 [invalid_redecl_prev]
 [invalid_redecl_implicit_wrapper]
 [ambiguous_type_base]
 [invalid_member_type]
 [invalid_member_type_suggest]
 [invalid_member_reference]
 [ambiguous_member_type]
 [no_module_type]
 [ambiguous_module_type]
 [use_nonmatching_operator]
 [unsupported_recursion_in_associated_type_reference]
 [broken_associated_type_witness]
 [unspaced_binary_operator_fixit]
 [unspaced_binary_operator]
 [unspaced_binary_operators_candidate]
 [unspaced_unary_operator]
 [nonexistent_power_operator]
 [cannot_find_in_scope]
 [cannot_find_in_scope_corrected]
 [confusable_character]
 [single_confusable_character]
 [cannot_find_type_in_scope]
 [cannot_find_type_in_scope_did_you_mean]
 [note_typo_candidate_implicit_member]
 [note_remapped_type]
 [note_module_as_type]
 [use_unknown_object_literal_protocol]
 [object_literal_default_type_missing]
 [object_literal_resolve_import]
 [use_local_before_declaration]
 [unsupported_existential_type]
 [decl_does_not_exist_in_module]
 [imported_decl_is_wrong_kind]
 [imported_decl_is_wrong_kind_typealias]
 [ambiguous_decl_in_module]
 [module_not_testable]
 [module_not_compiled_for_private_import]
 [import_implementation_cannot_be_exported]
 [module_not_compiled_with_library_evolution]
 [cross_import_added]
 [module_loaded]
 [ambiguous_operator_decls]
 [found_this_operator_decl]
 [operator_redeclared]
 [previous_operator_decl]
 [declared_operator_without_operator_decl]
 [declared_unary_op_without_attribute]
 [unary_op_missing_prepos_attribute]
 [unary_operator_declaration_here]
 [invalid_arg_count_for_operator]
 [operator_in_local_scope]
 [nonstatic_operator_in_nominal]
 [nonstatic_operator_in_extension]
 [nonfinal_operator_in_class]
 [operator_in_unrelated_type]
 [ambiguous_precedence_groups]
 [found_this_precedence_group]
 [unknown_precedence_group]
 [precedence_group_cycle]
 [higher_than_precedence_group_cycle]
 [precedence_group_lower_within_module]
 [precedence_group_redeclared]
 [previous_precedence_group_decl]
 [circular_reference_through_precedence_group]
 [tuple_types_not_convertible_nelts]
 [tuple_types_not_convertible]
 [invalid_force_unwrap]
 [invalid_optional_chain]
 [if_expr_cases_mismatch]
 [did_not_call_function_value]
 [did_not_call_function]
 [did_not_call_method]
 [init_not_instance_member_use_assignment]
 [init_not_instance_member]
 [super_initializer_not_in_initializer]
 [isa_is_always_true]
 [isa_is_foreign_check]
 [checked_cast_not_supported]
 [checked_cast_not_supported_coerce_instead]
 [conditional_downcast_coercion]
 [literal_conditional_downcast_to_coercion]
 [forced_downcast_noop]
 [forced_downcast_coercion]
 [downcast_same_type]
 [conditional_downcast_same_type]
 [is_expr_same_type]
 [downcast_to_unrelated]
 [downcast_to_unrelated_fixit]
 [optional_chain_noop]
 [optional_chain_isnt_chaining]
 [pattern_in_expr]
 [note_call_to_operator]
 [note_call_to_func]
 [note_call_to_subscript]
 [note_call_to_initializer]
 [note_init_parameter]
 [missing_nullary_call]
 [optional_not_unwrapped]
 [unwrap_with_default_value]
 [unwrap_with_force_value]
 [unwrap_iuo_initializer]
 [unwrap_with_guard]
 [optional_base_not_unwrapped]
 [invalid_optional_infered_keypath_root]
 [optional_base_chain]
 [optional_base_remove_optional_for_keypath_root]
 [optional_keypath_application_base]
 [optional_key_path_root_base_chain]
 [optional_key_path_root_base_unwrap]
 [missing_unwrap_optional_try]
 [cannot_coerce_to_type]
 [missing_forced_downcast]
 [missing_optional_downcast]
 [coercion_may_fail_warning]
 [missing_explicit_conversion]
 [missing_address_of]
 [missing_address_of_yield]
 [extraneous_address_of]
 [extra_address_of]
 [extra_address_of_unsafepointer]
 [cannot_pass_inout_arg_to_subscript]
 [incorrect_property_wrapper_reference]
 [incorrect_property_wrapper_reference_member]
 [missing_init_on_metatype_initialization]
 [extra_argument_labels]
 [missing_argument_labels]
 [wrong_argument_labels]
 [argument_out_of_order_named_named]
 [argument_out_of_order_named_unnamed]
 [argument_out_of_order_unnamed_named]
 [argument_out_of_order_unnamed_unnamed]
 [argument_out_of_order_binary_op]
 [candidate_expected_different_labels]
 [member_shadows_function]
 [member_shadows_global_function]
 [instance_member_use_on_type]
 [instance_member_in_initializer]
 [instance_member_in_default_parameter]
 [missing_argument_named]
 [missing_argument_positional]
 [missing_arguments_in_call]
 [extra_argument_named]
 [extra_argument_positional]
 [extra_arguments_in_call]
 [extra_argument_to_nullary_call]
 [extra_trailing_closure_in_call]
 [trailing_closure_bad_param]
 [unlabeled_trailing_closure_deprecated]
 [decl_multiple_defaulted_closure_parameters]
 [candidate_with_extraneous_args]
 [no_accessible_initializers]
 [non_nominal_no_initializers]
 [unbound_generic_parameter]
 [unbound_generic_parameter_cast]
 [archetype_declared_in_type]
 [unbound_generic_parameter_explicit_fix]
 [invalid_dynamic_callable_type]
 [missing_dynamic_callable_kwargs_method]
 [invalid_dynamic_member_lookup_type]
 [invalid_dynamic_member_subscript]
 [string_index_not_integer]
 [string_index_not_integer_note]
 [invalid_c_function_pointer_conversion_expr]
 [c_function_pointer_from_method]
 [c_function_pointer_from_generic_function]
 [invalid_autoclosure_forwarding]
 [invalid_differentiable_function_conversion_expr]
 [invalid_differentiable_function_conversion_parameter]
 [invalid_autoclosure_pointer_conversion]
 [missing_initializer_def]
 [pound_warning]
 [pound_error]
 [operator_not_func]
 [redefining_builtin_operator]
 [attribute_requires_operator_identifier]
 [attribute_requires_single_argument]
 [nominal_type_not_attribute]
 [mutating_invalid_global_scope]
 [mutating_invalid_classes]
 [functions_mutating_and_not]
 [static_functions_not_mutating]
 [modify_mutatingness_differs_from_setter]
 [transparent_in_protocols_not_supported]
 [transparent_in_classes_not_supported]
 [invalid_iboutlet]
 [iboutlet_nonobjc_class]
 [iboutlet_nonobjc_protocol]
 [iboutlet_nonobject_type]
 [iboutlet_only_mutable]
 [iboutlet_non_optional]
 [note_make_optional]
 [note_make_implicitly_unwrapped_optional]
 [invalid_ibdesignable_extension]
 [invalid_ibinspectable]
 [invalid_ibaction_decl]
 [invalid_ibaction_result]
 [invalid_ibaction_argument_count]
 [invalid_ibaction_argument_count_exact]
 [invalid_ibaction_argument_count_max]
 [ibsegueaction_objc_method_family]
 [fixit_rename_in_swift]
 [fixit_rename_in_objc]
 [no_objc_tagged_pointer_not_class_protocol]
 [swift_native_objc_runtime_base_not_on_root_class]
 [cdecl_not_at_top_level]
 [cdecl_empty_name]
 [cdecl_throws]
 [cdecl_async]
 [attr_methods_only]
 [access_control_in_protocol]
 [access_control_in_protocol_detail]
 [access_control_setter]
 [access_control_setter_read_only]
 [access_control_setter_more]
 [access_control_setter_redundant]
 [access_control_ext_member_more]
 [access_control_ext_member_redundant]
 [access_control_ext_requirement_member_more]
 [access_control_extension_more]
 [access_control_extension_open]
 [access_control_open_bad_decl]
 [invalid_decl_attribute]
 [invalid_decl_modifier]
 [attribute_does_not_apply_to_type]
 [optional_attribute_non_protocol]
 [optional_attribute_non_objc_protocol]
 [optional_attribute_missing_explicit_objc]
 [objcmembers_attribute_nonclass]
 [optional_attribute_initializer]
 [unavailable_method_non_objc_protocol]
 [missing_in_class_init_1]
 [missing_in_class_init_2]
 [missing_in_class_init_3plus]
 [requires_stored_property_inits_here]
 [class_without_init]
 [note_no_in_class_init_1]
 [note_no_in_class_init_2]
 [note_no_in_class_init_3plus]
 [missing_unimplemented_init_runtime]
 [missing_undefined_runtime]
 [expr_dynamic_lookup_swift3_objc_inference]
 [inherited_default_value_not_in_designated_constructor]
 [inherited_default_value_used_in_non_overriding_constructor]
 [corresponding_param_not_defaulted]
 [inherited_default_param_here]
 [option_set_zero_constant]
 [option_set_empty_set_init]
 [originally_defined_in_dupe_platform]
 [originally_definedin_topleve_decl]
 [originally_definedin_need_available]
 [originally_definedin_must_after_available_version]
 [alignment_not_power_of_two]
 [indirect_case_without_payload]
 [indirect_case_in_indirect_enum]
 [enum_frozen_nonpublic]
 [getset_init]
 [effectful_not_representable_objc]
 [unimplemented_static_var]
 [observingprop_requires_initializer]
 [global_requires_initializer]
 [static_requires_initializer]
 [static_requires_initializer_add_init]
 [pattern_type_access]
 [pattern_type_access_warn]
 [pattern_type_access_inferred]
 [pattern_type_access_inferred_warn]
 [pattern_type_not_usable_from_inline]
 [pattern_type_not_usable_from_inline_warn]
 [pattern_type_not_usable_from_inline_frozen]
 [pattern_type_not_usable_from_inline_inferred]
 [pattern_type_not_usable_from_inline_inferred_warn]
 [pattern_type_not_usable_from_inline_inferred_frozen]
 [pattern_binds_no_variables]
 [variable_bound_by_no_pattern]
 [optional_ambiguous_case_ref]
 [optional_fixit_ambiguous_case_ref]
 [optional_fixit_ambiguous_case_ref_switch]
 [type_fixit_optional_ambiguous_case_ref]
 [type_fixit_optional_ambiguous_case_ref_switch]
 [nscoding_unstable_mangled_name]
 [unstable_mangled_name_add_objc_new]
 [unstable_mangled_name_add_objc]
 [unsupported_type_nested_in_generic_function]
 [unsupported_type_nested_in_generic_closure]
 [unsupported_type_nested_in_protocol]
 [unsupported_type_nested_in_protocol_extension]
 [unsupported_nested_protocol]
 [where_nongeneric_ctx]
 [where_nongeneric_toplevel]
 [unable_to_convert_generic_swift_types]
 [type_alias_underlying_type_access]
 [type_alias_underlying_type_access_warn]
 [type_alias_underlying_type_not_usable_from_inline]
 [type_alias_underlying_type_not_usable_from_inline_warn]
 [subscript_type_access]
 [subscript_type_access_warn]
 [subscript_type_usable_from_inline]
 [subscript_type_usable_from_inline_warn]
 [function_type_access]
 [function_type_spi]
 [function_type_access_warn]
 [function_type_usable_from_inline]
 [function_type_usable_from_inline_warn]
 [spi_attribute_on_non_public]
 [spi_attribute_on_protocol_requirement]
 [spi_attribute_on_frozen_stored_properties]
 [spi_attribute_on_import_of_public_module]
 [opaque_type_invalid_constraint]
 [inferred_opaque_type]
 [non_nominal_extension]
 [composition_in_extended_type]
 [composition_in_extended_type_alternative]
 [extension_access_with_conformances]
 [extension_metatype]
 [extension_specialization]
 [extension_stored_property]
 [extension_stored_property_fixit]
 [extension_nongeneric_trailing_where]
 [extension_protocol_inheritance]
 [objc_generic_extension_using_type_parameter]
 [objc_generic_extension_using_type_parameter_here]
 [objc_generic_extension_using_type_parameter_try_objc]
 [invalid_nominal_extension]
 [invalid_nominal_extension_rewrite]
 [type_does_not_conform]
 [cannot_use_nil_with_this_type]
 [type_cannot_conform_to_nsobject]
 [use_of_equal_instead_of_equality]
 [type_cannot_conform]
 [only_concrete_types_conform_to_protocols]
 [required_by_opaque_return]
 [required_by_decl]
 [required_by_decl_ref]
 [protocol_does_not_conform_static]
 [protocol_derivation_is_broken]
 [type_does_not_inherit]
 [type_does_not_inherit_or_conform_requirement]
 [types_not_equal]
 [type_does_not_conform_owner]
 [type_does_not_conform_in_decl_ref]
 [contextual_member_ref_on_protocol_requires_self_requirement]
 [missing_sametype_requirement_on_self]
 [type_does_not_conform_anyobject_in_decl_ref]
 [type_does_not_conform_decl_owner]
 [type_does_not_conform_anyobject_decl_owner]
 [type_does_not_conform_in_opaque_return]
 [types_not_equal_decl]
 [types_not_equal_in_decl_ref]
 [types_not_inherited_decl]
 [types_not_inherited_in_decl_ref]
 [where_requirement_failure_one_subst]
 [where_requirement_failure_both_subst]
 [requirement_implied_by_conditional_conformance]
 [wrapped_type_satisfies_requirement]
 [candidate_types_conformance_requirement]
 [candidate_types_equal_requirement]
 [candidate_types_inheritance_requirement]
 [types_not_equal_requirement]
 [type_is_not_a_class]
 [anyobject_requirement]
 [non_class_cannot_conform_to_class_protocol]
 [cf_class_cannot_conform_to_objc_protocol]
 [objc_runtime_visible_cannot_conform_to_objc_protocol]
 [objc_generics_cannot_conditionally_conform]
 [objc_protocol_cannot_have_conditional_conformance]
 [objc_protocol_in_generic_extension]
 [conditional_conformances_cannot_imply_conformances]
 [note_explicitly_state_conditional_conformance_different]
 [note_explicitly_state_conditional_conformance_relaxed]
 [note_explicitly_state_conditional_conformance_same]
 [note_explicitly_state_conditional_conformance_noneditor]
 [protocol_has_missing_requirements]
 [protocol_has_missing_requirements_versioned]
 [requirement_restricts_self]
 [witness_argument_name_mismatch]
 [witness_initializer_not_required]
 [witness_initializer_failability]
 [witness_self_non_subtype]
 [witness_self_same_type]
 [witness_self_weaken_same_type]
 [witness_requires_dynamic_self]
 [witness_requires_class_implementation]
 [witness_not_accessible_proto]
 [witness_not_accessible_type]
 [type_witness_not_accessible_proto]
 [type_witness_not_accessible_type]
 [witness_not_usable_from_inline]
 [witness_not_usable_from_inline_warn]
 [type_witness_objc_generic_parameter]
 [witness_fix_access]
 [witness_move_to_another_extension]
 [assoc_type_default_conformance_failed]
 [assoc_type_default_here]
 [protocol_access]
 [protocol_access_warn]
 [protocol_usable_from_inline]
 [protocol_usable_from_inline_warn]
 [protocol_property_must_be_computed_var]
 [protocol_property_must_be_computed]
 [inherited_protocol_does_not_conform]
 [no_witnesses]
 [missing_witnesses_general]
 [ambiguous_witnesses]
 [ambiguous_witnesses_wrong_name]
 [no_witnesses_type]
 [default_associated_type_req_fail]
 [associated_type_access]
 [associated_type_access_warn]
 [associated_type_not_usable_from_inline]
 [associated_type_not_usable_from_inline_warn]
 [bad_associated_type_deduction]
 [associated_type_deduction_witness_failed]
 [associated_type_witness_conform_impossible]
 [associated_type_witness_inherit_impossible]
 [ambiguous_associated_type_deduction]
 [associated_type_deduction_witness]
 [associated_type_deduction_default]
 [ambiguous_witnesses_type]
 [protocol_witness_exact_match]
 [protocol_witness_renamed]
 [protocol_witness_kind_conflict]
 [protocol_witness_type_conflict]
 [protocol_witness_missing_requirement]
 [protocol_witness_optionality_conflict]
 [err_protocol_witness_optionality]
 [warn_protocol_witness_optionality]
 [protocol_witness_static_conflict]
 [protocol_witness_prefix_postfix_conflict]
 [protocol_witness_mutation_modifier_conflict]
 [protocol_witness_settable_conflict]
 [protocol_witness_rethrows_conflict]
 [protocol_witness_rethrows_by_conformance_conflict]
 [protocol_witness_throws_conflict]
 [protocol_witness_not_objc]
 [protocol_witness_enum_case_payload]
 [protocol_witness_type]
 [protocol_witness_nonconform_type]
 [protocol_witness_circularity]
 [protocol_conformance_here]
 [declared_protocol_conformance_here]
 [witness_unavailable]
 [redundant_conformance]
 [redundant_conformance_conditional]
 [redundant_conformance_adhoc]
 [redundant_conformance_adhoc_conditional]
 [redundant_conformance_witness_ignored]
 [req_near_match]
 [optional_req_nonobjc_near_match_add_objc]
 [req_near_match_move]
 [req_near_match_nonobjc]
 [req_near_match_access]
 [missing_append_interpolation]
 [append_interpolation_static]
 [append_interpolation_void_or_discardable]
 [append_interpolation_access_control]
 [assoc_type_outside_of_protocol]
 [typealias_outside_of_protocol]
 [objc_protocol_inherits_non_objc_protocol]
 [protocol_where_clause_self_requirement]
 [invalid_protocol_composition_member]
 [protocol_composition_one_class]
 [requires_conformance_nonprotocol]
 [requires_conformance_nonprotocol_fixit]
 [requires_not_suitable_archetype]
 [requires_no_same_type_archetype]
 [requires_generic_params_made_equal]
 [requires_generic_param_made_equal_to_concrete]
 [recursive_decl_reference]
 [recursive_same_type_constraint]
 [recursive_superclass_constraint]
 [requires_generic_param_same_type_does_not_conform]
 [requires_same_concrete_type]
 [redundant_conformance_constraint]
 [redundant_conformance_here]
 [unsupported_recursive_requirements]
 [same_type_conflict]
 [redundant_same_type_to_concrete]
 [same_type_redundancy_here]
 [conflicting_superclass_constraints]
 [conflicting_superclass_constraint]
 [redundant_superclass_constraint]
 [superclass_redundancy_here]
 [conflicting_layout_constraints]
 [conflicting_layout_constraint]
 [redundant_layout_constraint]
 [previous_layout_constraint]
 [redundant_same_type_constraint]
 [previous_same_type_constraint]
 [inherited_associated_type_redecl]
 [typealias_override_associated_type]
 [associated_type_override_typealias]
 [associated_type_objc]
 [generic_param_access]
 [generic_param_access_warn]
 [generic_param_usable_from_inline]
 [generic_param_usable_from_inline_warn]
 [override_multiple_decls_base]
 [override_multiple_decls_arg_mismatch]
 [overridden_near_match_here]
 [override_decl_extension]
 [overridden_here]
 [overridden_here_can_be_objc]
 [missing_override]
 [missing_override_warn]
 [multiple_override]
 [multiple_override_prev]
 [override_unavailable]
 [suggest_removing_override]
 [override_less_available]
 [override_accessor_less_available]
 [override_let_property]
 [override_not_accessible]
 [override_of_non_open]
 [method_does_not_override]
 [property_does_not_override]
 [subscript_does_not_override]
 [initializer_does_not_override]
 [failable_initializer_override]
 [nonfailable_initializer_override_here]
 [property_override_here]
 [subscript_override_here]
 [convenience_init_override_here]
 [override_type_mismatch_with_fixits]
 [override_type_mismatch_with_fixits_init]
 [override_nonclass_decl]
 [nonoverride_wrong_decl_context]
 [nonoverride_and_override_attr]
 [override_property_type_mismatch]
 [override_with_stored_property]
 [override_with_stored_property_warn]
 [observing_readonly_property]
 [override_mutable_with_readonly_property]
 [override_argument_name_mismatch]
 [override_ownership_mismatch]
 [override_dynamic_self_mismatch]
 [override_class_declaration_in_extension]
 [override_with_more_effects]
 [override_throws_objc]
 [satisfy_throws_objc]
 [override_optional_mismatch]
 [override_optional_result_mismatch]
 [override_unnecessary_IUO]
 [override_unnecessary_result_IUO]
 [override_unnecessary_IUO_remove]
 [override_unnecessary_IUO_use_strict]
 [override_unnecessary_IUO_silence]
 [override_mutable_covariant_property]
 [override_mutable_covariant_subscript]
 [static_decl_already_final]
 [open_decl_cannot_be_final]
 [implicitly_final_cannot_be_open]
 [implicitly_final_cannot_be_open_swift4]
 [override_swift3_objc_inference]
 [override_method_different_generic_sig]
 [duplicate_inheritance]
 [duplicate_anyobject_class_inheritance]
 [inheritance_from_protocol_with_superclass]
 [anyobject_class_inheritance_deprecated]
 [multiple_inheritance]
 [inheritance_from_non_protocol_or_class]
 [inheritance_from_non_protocol]
 [superclass_not_first]
 [superclass_not_open]
 [superclass_here]
 [superclass_of_open_not_open]
 [inheritance_from_final_class]
 [inheritance_from_unspecialized_objc_generic_class]
 [inheritance_from_class_with_missing_vtable_entries]
 [inheritance_from_class_with_missing_vtable_entries_versioned]
 [inheritance_from_cf_class]
 [inheritance_from_objc_runtime_visible_class]
 [enum_case_access]
 [enum_case_access_warn]
 [enum_case_usable_from_inline]
 [enum_case_usable_from_inline_warn]
 [enum_stored_property]
 [multiple_enum_raw_types]
 [raw_type_not_first]
 [raw_type_not_literal_convertible]
 [enum_raw_type_not_equatable]
 [enum_raw_type_nonconforming_and_nonsynthable]
 [enum_declares_rawrep_with_raw_type]
 [enum_raw_type_access]
 [enum_raw_type_access_warn]
 [enum_raw_type_not_usable_from_inline]
 [enum_raw_type_not_usable_from_inline_warn]
 [empty_enum_raw_type]
 [enum_raw_value_without_raw_type]
 [enum_with_raw_type_case_with_argument]
 [enum_raw_type_here]
 [objc_enum_no_raw_type]
 [objc_enum_raw_type_not_integer]
 [enum_non_integer_raw_value_auto_increment]
 [enum_non_integer_convertible_raw_type_no_value]
 [enum_raw_value_not_unique]
 [enum_raw_value_magic_literal]
 [enum_raw_value_used_here]
 [enum_raw_value_incrementing_from_here]
 [enum_raw_value_incrementing_from_zero]
 [construct_raw_representable_from_unwrapped_value]
 [decl_from_hidden_module]
 [decl_from_hidden_module_warn]
 [conformance_from_implementation_only_module]
 [assoc_conformance_from_implementation_only_module]
 [unexportable_clang_function_type]
 [cxx_class_instantiation_failed]
 [warn_implementation_only_conflict]
 [implementation_only_conflict_here]
 [warn_public_import_of_private_module]
 [implementation_only_decl_non_override]
 [implementation_only_override_changed_type]
 [implementation_only_override_without_attr]
 [implementation_only_override_import_without_attr]
 [cannot_synthesize_init_in_extension_of_nonfinal]
 [cannot_synthesize_in_crossfile_extension]
 [broken_additive_arithmetic_requirement]
 [broken_case_iterable_requirement]
 [broken_raw_representable_requirement]
 [broken_comparable_requirement]
 [broken_equatable_requirement]
 [broken_hashable_requirement]
 [broken_hashable_no_hasher]
 [broken_errortype_requirement]
 [broken_int_hashable_conformance]
 [broken_int_integer_literal_convertible_conformance]
 [no_less_than_overload_for_int]
 [no_equal_overload_for_int]
 [broken_coding_key_requirement]
 [broken_encodable_requirement]
 [broken_decodable_requirement]
 [broken_differentiable_requirement]
 [differentiable_nondiff_type_implicit_noderivative_fixit]
 [differentiable_immutable_wrapper_implicit_noderivative_fixit]
 [differentiable_let_property_implicit_noderivative_fixit]
 [codable_extraneous_codingkey_case_here]
 [codable_non_conforming_property_here]
 [codable_non_decoded_property_here]
 [codable_codingkeys_type_is_not_an_enum_here]
 [codable_codingkeys_type_does_not_conform_here]
 [decodable_no_super_init_here]
 [decodable_super_init_not_designated_here]
 [decodable_inaccessible_super_init_here]
 [decodable_super_init_is_failable_here]
 [decodable_suggest_overriding_init_here]
 [codable_suggest_overriding_init_here]
 [codable_enum_duplicate_case_name_here]
 [codable_enum_duplicate_parameter_name_here]
 [decodable_property_will_not_be_decoded]
 [decodable_property_init_or_codingkeys_implicit]
 [decodable_property_init_or_codingkeys_explicit]
 [decodable_make_property_mutable]
 [missing_member_type_conformance_prevents_synthesis]
 [automatic_protocol_synthesis_unsupported]
 [comparable_synthesis_raw_value_not_allowed]
 [dynamic_self_non_method]
 [dynamic_self_invalid]
 [dynamic_self_in_mutable_property]
 [dynamic_self_in_stored_property]
 [dynamic_self_in_mutable_subscript]
 [dynamic_self_invalid_property]
 [dynamic_self_invalid_subscript]
 [dynamic_self_invalid_method]
 [dynamic_self_stored_property_init]
 [dynamic_self_default_arg]
 [attr_only_one_decl_kind]
 [attr_not_on_variadic_parameters]
 [attr_not_on_subscript_parameters]
 [attr_ambiguous_reference_to_decl]
 [override_final]
 [override_static]
 [member_cannot_be_final]
 [final_not_allowed_here]
 [final_not_on_accessors]
 [override_rethrows_with_non_rethrows]
 [rethrows_without_throwing_parameter]
 [override_reasync_with_non_reasync]
 [reasync_without_async_parameter]
 [autoclosure_function_type]
 [invalid_autoclosure_and_convention_attributes]
 [autoclosure_function_input_nonunit]
 [escaping_non_function_parameter]
 [escaping_optional_type_argument]
 [non_ephemeral_non_pointer_type]
 [attr_NSManaged_not_instance_member]
 [attr_NSManaged_not_stored]
 [attr_NSManaged_let_property]
 [attr_NSManaged_initial_value]
 [attr_NSManaged_NSCopying]
 [attr_NSManaged_method_body]
 [nscopying_only_on_class_properties]
 [nscopying_only_mutable]
 [nscopying_only_stored_property]
 [nscopying_doesnt_conform]
 [attr_ApplicationMain_not_ApplicationDelegate]
 [attr_generic_ApplicationMain_not_supported]
 [attr_ApplicationMain_multiple]
 [attr_ApplicationMain_with_script]
 [attr_ApplicationMain_script_here]
 [attr_MainType_without_main]
 [lazy_not_on_let]
 [lazy_not_on_computed]
 [lazy_on_already_lazy_global]
 [lazy_not_in_protocol]
 [lazy_requires_initializer]
 [lazy_requires_single_var]
 [lazy_not_strong]
 [lazy_var_storage_access]
 [attr_for_debugger_support_only]
 [implements_attr_protocol_lacks_member]
 [implements_attr_non_protocol_type]
 [implements_attr_protocol_not_conformed_to]
 [differentiable_attr_overload_not_found]
 [differentiable_attr_duplicate]
 [differentiable_attr_duplicate_note]
 [differentiable_attr_function_not_same_type_context]
 [differentiable_attr_derivative_not_function]
 [differentiable_attr_class_derivative_not_final]
 [differentiable_attr_invalid_access]
 [differentiable_attr_protocol_req_where_clause]
 [differentiable_attr_class_member_dynamic_self_result_unsupported]
 [differentiable_attr_nonfinal_class_init_unsupported]
 [differentiable_attr_empty_where_clause]
 [differentiable_attr_where_clause_for_nongeneric_original]
 [differentiable_attr_layout_req_unsupported]
 [overriding_decl_missing_differentiable_attr]
 [protocol_witness_missing_differentiable_attr_invalid_context]
 [derivative_attr_expected_result_tuple]
 [derivative_attr_invalid_result_tuple_value_label]
 [derivative_attr_invalid_result_tuple_func_label]
 [derivative_attr_result_value_not_differentiable]
 [derivative_attr_result_func_type_mismatch]
 [derivative_attr_result_func_type_mismatch_note]
 [derivative_attr_result_func_original_note]
 [derivative_attr_not_in_same_file_as_original]
 [derivative_attr_original_stored_property_unsupported]
 [derivative_attr_class_member_dynamic_self_result_unsupported]
 [derivative_attr_nonfinal_class_init_unsupported]
 [derivative_attr_unsupported_accessor_kind]
 [derivative_attr_class_setter_unsupported]
 [derivative_attr_protocol_requirement_unsupported]
 [derivative_attr_original_already_has_derivative]
 [derivative_attr_duplicate_note]
 [derivative_attr_access_level_mismatch]
 [derivative_attr_fix_access]
 [derivative_attr_static_method_mismatch_original]
 [derivative_attr_static_method_mismatch_original_note]
 [derivative_attr_static_method_mismatch_fix]
 [transpose_attr_invalid_linearity_parameter_or_result]
 [transpose_attr_overload_not_found]
 [transpose_attr_cannot_use_named_wrt_params]
 [transpose_attr_wrt_self_must_be_static]
 [transpose_attr_wrt_self_self_type_mismatch_note]
 [transpose_attr_static_method_mismatch_original]
 [transpose_attr_static_method_mismatch_original_note]
 [transpose_attr_static_method_mismatch_fix]
 [autodiff_attr_original_decl_ambiguous]
 [autodiff_attr_original_decl_ambiguous_candidate]
 [autodiff_attr_original_decl_none_valid]
 [autodiff_attr_original_decl_invalid_kind]
 [autodiff_attr_original_decl_missing_accessor]
 [autodiff_attr_original_decl_type_mismatch]
 [autodiff_attr_original_decl_not_same_type_context]
 [autodiff_attr_original_void_result]
 [autodiff_attr_original_multiple_semantic_results]
 [autodiff_attr_result_not_differentiable]
 [autodiff_attr_opaque_result_type_unsupported]
 [diff_function_no_parameters]
 [diff_params_clause_param_name_unknown]
 [diff_params_clause_self_instance_method_only]
 [diff_params_clause_self_must_be_first]
 [diff_params_clause_params_not_original_order]
 [diff_params_clause_param_index_out_of_range]
 [diff_params_clause_no_inferred_parameters]
 [diff_params_clause_cannot_diff_wrt_inout_parameter]
 [diff_params_clause_param_not_differentiable]
 [attr_completion_handler_async_handler_not_func]
 [note_attr_function_declared_async]
 [note_attr_completion_function_must_return_void]
 [note_attr_completion_handler_async_type_is_not_function]
 [note_attr_completion_handler_async_handler_attr_req]
 [attr_completion_handler_async_handler_out_of_range]
 [attr_completion_handler_async_ambiguous_function]
 [attr_completion_handler_async_no_suitable_function]
 [warn_use_async_alternative]
 [found_candidate]
 [found_candidate_type]
 [no_MaxBuiltinFloatType_found]
 [no_member_of_module]
 [super_with_no_base_class]
 [bad_init_ref_base]
 [init_delegation_outside_initializer]
 [init_delegates_and_chains]
 [init_delegation_or_chain]
 [delegating_convenience_super_init]
 [delegating_designated_init]
 [delegating_designated_init_in_extension]
 [delegation_here]
 [chain_convenience_init]
 [delegate_chain_nonoptional_to_optional]
 [init_force_unwrap]
 [init_propagate_failure]
 [delegate_chain_nonoptional_to_optional_try]
 [init_delegate_force_try]
 [init_delegation_nested]
 [convenience_init_here]
 [designated_init_in_extension]
 [cfclass_designated_init_in_extension]
 [enumstruct_convenience_init]
 [nonclass_convenience_init]
 [cfclass_convenience_init]
 [dynamic_construct_class]
 [note_nonrequired_initializer]
 [construct_protocol_value]
 [construct_protocol_by_name]
 [unknown_binop]
 [non_associative_adjacent_operators]
 [unordered_adjacent_operators]
 [missing_builtin_precedence_group]
 [nan_comparison]
 [nan_comparison_without_isnan]
 [nan_comparison_both_nan]
 [try_rhs]
 [try_if_rhs_noncovering]
 [try_assign_rhs_noncovering]
 [broken_bool]
 [inject_forced_downcast]
 [forced_to_conditional_downcast]
 [silence_inject_forced_downcast]
 [conditional_downcast_foreign]
 [note_explicitly_compare_cftypeid]
 [optional_used_as_boolean]
 [integer_used_as_boolean]
 [interpolation_missing_proto]
 [interpolation_broken_proto]
 [object_literal_broken_proto]
 [discard_expr_outside_of_assignment]
 [discard_expr_void_result_redundant]
 [collection_literal_heterogeneous]
 [collection_literal_empty]
 [unresolved_member_no_inference]
 [cannot_infer_base_of_unresolved_member]
 [unresolved_nil_literal]
 [cannot_force_unwrap_nil_literal]
 [type_of_expression_is_ambiguous]
 [failed_to_produce_diagnostic]
 [missing_protocol]
 [nil_literal_broken_proto]
 [builtin_integer_literal_broken_proto]
 [integer_literal_broken_proto]
 [builtin_float_literal_broken_proto]
 [float_literal_broken_proto]
 [builtin_boolean_literal_broken_proto]
 [boolean_literal_broken_proto]
 [builtin_unicode_scalar_literal_broken_proto]
 [unicode_scalar_literal_broken_proto]
 [builtin_extended_grapheme_cluster_literal_broken_proto]
 [extended_grapheme_cluster_literal_broken_proto]
 [builtin_string_literal_broken_proto]
 [string_literal_broken_proto]
 [should_use_dictionary_literal]
 [meant_dictionary_lit]
 [should_use_empty_dictionary_literal]
 [type_is_not_dictionary]
 [cannot_explicitly_specialize_generic_function]
 [not_a_generic_definition]
 [not_a_generic_type]
 [type_parameter_count_mismatch]
 [generic_type_requires_arguments]
 [descriptive_generic_type_declared_here]
 [placeholder_type_not_allowed]
 [use_of_void_pointer]
 [ambiguous_decl_ref]
 [ambiguous_operator_ref]
 [ambiguous_because_of_trailing_closure]
 [partial_application_of_function_invalid]
 [partial_application_of_function_invalid_swift4]
 [self_assignment_var]
 [self_assignment_prop]
 [property_use_in_closure_without_explicit_self]
 [method_call_in_closure_without_explicit_self]
 [note_capture_self_explicitly]
 [note_reference_self_explicitly]
 [note_other_self_capture]
 [note_self_captured_weakly]
 [implicit_use_of_self_in_closure]
 [recursive_accessor_reference]
 [recursive_accessor_reference_silence]
 [store_in_willset]
 [value_of_module_type]
 [value_of_metatype_type]
 [add_parens_to_type]
 [add_self_to_type]
 [warn_unqualified_access]
 [fix_unqualified_access_member]
 [fix_unqualified_access_top_level]
 [fix_unqualified_access_top_level_multi]
 [warn_deprecated_conditional_conformance_outer_access]
 [fix_deprecated_conditional_conformance_outer_access]
 [unsupported_special_decl_ref]
 [bitcasting_away_noescape]
 [bitcasting_to_change_function_rep]
 [bitcasting_to_downcast]
 [bitcasting_is_no_op]
 [bitcasting_to_change_pointer_kind]
 [bitcasting_to_change_pointee_type]
 [bitcasting_to_give_type_to_raw_pointer]
 [bitcast_assume_memory_rebound]
 [bitcast_bind_memory]
 [bitcasting_for_number_bit_pattern_init]
 [bitcasting_for_number_bit_pattern_property]
 [bitcasting_to_change_from_unsized_to_sized_int]
 [use_of_qq_on_non_optional_value]
 [nonoptional_compare_to_nil]
 [optional_check_nonoptional]
 [optional_check_promotion]
 [optional_pattern_match_promotion]
 [optional_to_any_coercion]
 [iuo_to_any_coercion]
 [iuo_to_any_coercion_note]
 [iuo_to_any_coercion_note_func_result]
 [default_optional_to_any]
 [force_optional_to_any]
 [silence_optional_to_any]
 [debug_description_in_string_interpolation_segment]
 [silence_debug_description_in_interpolation_segment_call]
 [noescape_parameter]
 [generic_parameters_always_escaping]
 [passing_noattrfunc_to_attrfunc]
 [converting_noespace_param_to_generic_type]
 [assigning_noattrfunc_to_attrfunc]
 [general_noattrfunc_to_attr]
 [converting_noattrfunc_to_type]
 [converting_func_loses_global_actor]
 [capture_across_type_decl]
 [reference_to_invalid_decl]
 [jump_out_of_defer]
 [defer_stmt_at_block_end]
 [return_invalid_outside_func]
 [return_expr_missing]
 [return_non_failable_init]
 [make_init_failable]
 [return_init_non_nil]
 [implicit_async_super_init]
 [if_always_true]
 [while_always_true]
 [guard_always_succeeds]
 [expression_unused_closure]
 [expression_unused_function]
 [expression_unused_lvalue]
 [expression_unused_result_call]
 [expression_unused_result_operator]
 [expression_unused_result_unknown]
 [expression_unused_result]
 [expression_unused_init_result]
 [expression_unused_optional_try]
 [expression_unused_selector_result]
 [expression_unused_literal]
 [assignment_lhs_not_lvalue]
 [assignment_lhs_is_apply_expression]
 [assignment_lhs_is_immutable_variable]
 [assignment_lhs_is_immutable_property]
 [assignment_subscript_has_immutable_base]
 [assignment_dynamic_property_has_immutable_base]
 [assignment_bang_has_immutable_subcomponent]
 [candidate_is_not_assignable]
 [change_to_mutating]
 [masked_mutable_property]
 [assignment_let_property_delegating_init]
 [label_shadowed]
 [break_outside_loop]
 [unlabeled_break_outside_loop]
 [continue_outside_loop]
 [continue_not_in_this_stmt]
 [unresolved_label]
 [unresolved_label_corrected]
 [foreach_sequence_does_not_conform_to_expected_protocol]
 [no_match_operator]
 [fallthrough_outside_switch]
 [fallthrough_from_last_case]
 [fallthrough_into_case_with_var_binding]
 [unnecessary_cast_over_optionset]
 [mutability_mismatch_multiple_pattern_list]
 [type_mismatch_multiple_pattern_list]
 [type_mismatch_fallthrough_pattern_list]
 [unknown_case_must_be_catchall]
 [unknown_case_where_clause]
 [unknown_case_multiple_patterns]
 [unknown_case_must_be_last]
 [where_on_one_item]
 [add_where_newline]
 [duplicate_where]
 [trailing_closure_requires_parens]
 [opaque_type_var_no_init]
 [opaque_type_no_underlying_type_candidates]
 [opaque_type_mismatched_underlying_type_candidates]
 [opaque_type_underlying_type_candidate_here]
 [opaque_type_self_referential_underlying_type]
 [opaque_type_var_no_underlying_type]
 [cannot_infer_type_for_pattern]
 [refutable_pattern_requires_initializer]
 [var_pattern_didnt_bind_variables]
 [iflet_pattern_matching]
 [iflet_implicitly_unwraps]
 [type_pattern_missing_is]
 [pattern_type_mismatch_context]
 [tuple_pattern_in_non_tuple_context]
 [found_one_pattern_for_several_associated_values]
 [converting_tuple_into_several_associated_values]
 [converting_several_associated_values_into_tuple]
 [closure_argument_list_tuple]
 [closure_argument_list_missing]
 [closure_tuple_parameter_destructuring]
 [closure_tuple_parameter_destructuring_implicit]
 [single_tuple_parameter_mismatch_special]
 [single_tuple_parameter_mismatch_normal]
 [cannot_convert_single_tuple_into_multiple_arguments]
 [enum_element_pattern_assoc_values_mismatch]
 [enum_element_pattern_assoc_values_remove]
 [tuple_pattern_length_mismatch]
 [tuple_pattern_label_mismatch]
 [enum_element_pattern_member_not_found]
 [optional_element_pattern_not_valid_type]
 [condition_optional_element_pattern_not_valid_type]
 [enum_element_pattern_not_member_of_enum]
 [ambiguous_enum_pattern_type]
 [type_inferred_to_undesirable_type]
 [type_inferred_to_uninhabited_type]
 [type_inferred_to_uninhabited_tuple_type]
 [add_explicit_type_annotation_to_silence]
 [unowned_assignment_immediate_deallocation]
 [unowned_assignment_requires_strong]
 [isa_collection_downcast_pattern_value_unimplemented]
 [try_unhandled]
 [throwing_call_unhandled]
 [tryless_throwing_call_unhandled]
 [throw_in_nonthrowing_function]
 [throwing_call_in_rethrows_function]
 [tryless_throwing_call_in_rethrows_function]
 [throw_in_rethrows_function]
 [because_rethrows_argument_throws]
 [because_rethrows_default_argument_throws]
 [because_rethrows_conformance_throws]
 [throwing_call_in_nonthrowing_autoclosure]
 [tryless_throwing_call_in_nonthrowing_autoclosure]
 [throw_in_nonthrowing_autoclosure]
 [try_unhandled_in_nonexhaustive_catch]
 [throwing_call_in_nonexhaustive_catch]
 [tryless_throwing_call_in_nonexhaustive_catch]
 [throw_in_nonexhaustive_catch]
 [throwing_op_in_illegal_context]
 [throw_in_illegal_context]
 [throwing_operator_without_try]
 [throwing_interpolation_without_try]
 [throwing_call_without_try]
 [throwing_async_let_without_try]
 [throwing_prop_access_without_try]
 [throwing_subscript_access_without_try]
 [note_forgot_try]
 [note_error_to_optional]
 [note_disable_error_propagation]
 [no_throw_in_try]
 [no_throw_in_do_with_catch]
 [async_expr_without_await]
 [async_access_without_await]
 [async_call_without_await_in_autoclosure]
 [async_call_without_await_in_async_let]
 [no_async_in_await]
 [async_call_in_illegal_context]
 [await_in_illegal_context]
 [async_in_nonasync_function]
 [note_add_async_to_function]
 [note_add_asynchandler_to_function]
 [note_add_nonisolated_to_decl]
 [note_add_globalactor_to_function]
 [not_objc_function_async]
 [not_objc_function_type_async]
 [actor_isolated_objc]
 [protocol_witness_async_conflict]
 [async_autoclosure_nonasync_function]
 [async_not_let]
 [async_let_not_local]
 [async_let_not_initialized]
 [async_let_no_variables]
 [async_let_without_await]
 [async_let_in_illegal_context]
 [asynchandler_non_func]
 [asynchandler_returns_value]
 [asynchandler_throws]
 [asynchandler_async]
 [asynchandler_inout_parameter]
 [asynchandler_noescape_closure_parameter]
 [asynchandler_mutating]
 [asynchandler_removed]
 [objc_ambiguous_async_convention]
 [objc_ambiguous_async_convention_candidate]
 [async_objc_dynamic_self]
 [actor_inheritance]
 [actor_isolated_non_self_reference]
 [actor_isolated_self_independent_context]
 [actor_isolated_inout_state]
 [actor_isolated_mutating_func]
 [actor_isolated_global_actor_context]
 [global_actor_from_instance_actor_context]
 [global_actor_from_other_global_actor_context]
 [global_actor_from_nonactor_context]
 [actor_isolated_call]
 [actor_isolated_call_decl]
 [actor_isolated_partial_apply]
 [concurrent_access_local]
 [actor_isolated_from_concurrent_closure]
 [actor_isolated_from_concurrent_function]
 [actor_isolated_from_async_let]
 [actor_isolated_keypath_component]
 [effectful_keypath_component]
 [local_function_executed_concurrently]
 [concurrent_access_of_local_capture]
 [actor_isolated_sync_func]
 [actor_mutable_state]
 [shared_mutable_state_access]
 [actor_isolated_witness]
 [global_actor_isolated_requirement]
 [global_actor_isolated_witness]
 [global_actor_isolated_requirement_witness_conflict]
 [actor_cannot_conform_to_global_actor_protocol]
 [protocol_isolated_to_global_actor_here]
 [non_concurrent_param_type]
 [non_concurrent_result_type]
 [non_concurrent_property_type]
 [non_concurrent_keypath_capture]
 [non_concurrent_keypath_access]
 [non_concurrent_type_member]
 [concurrent_value_class_mutable_property]
 [concurrent_value_outside_source_file]
 [concurrent_value_nonfinal_class]
 [concurrent_value_inherit]
 [actorindependent_let]
 [actorindependent_mutable_storage]
 [actorindependent_local_var]
 [nonisolated_let]
 [nonisolated_mutable_storage]
 [nonisolated_local_var]
 [actor_instance_property_wrapper]
 [concurrency_lib_missing]
 [async_main_no_concurrency]
 [global_actor_missing_shared]
 [global_actor_shared_not_static]
 [global_actor_shared_inaccessible]
 [global_actor_shared_constrained_extension]
 [global_actor_shared_non_actor_type]
 [multiple_global_actors]
 [global_actor_disallowed]
 [global_actor_on_actor_class]
 [global_actor_on_local_variable]
 [global_actor_non_unsafe_init]
 [actor_isolation_multiple_attr]
 [actor_isolation_override_mismatch]
 [unsupported_recursive_struct]
 [enum_non_well_founded]
 [recursive_enum_not_indirect]
 [unsupported_infinitely_sized_type]
 [note_type_cycle_starts_here]
 [note_recursive_enum_case_here]
 [sugar_type_not_found]
 [optional_intrinsics_not_found]
 [pointer_argument_intrinsics_not_found]
 [array_literal_intrinsics_not_found]
 [class_super_access]
 [class_super_access_warn]
 [class_super_not_usable_from_inline]
 [class_super_not_usable_from_inline_warn]
 [dot_protocol_on_non_existential]
 [tuple_single_element]
 [tuple_ellipsis]
 [tuple_duplicate_label]
 [enum_element_ellipsis]
 [implicitly_unwrapped_optional_in_illegal_position_interpreted_as_optional]
 [implicitly_unwrapped_optional_deprecated_in_this_position]
 [implicitly_unwrapped_optional_in_illegal_position]
 [invalid_ownership_type]
 [invalid_ownership_protocol_type]
 [invalid_ownership_incompatible_class]
 [invalid_ownership_with_optional]
 [invalid_ownership_not_optional]
 [invalid_ownership_is_let]
 [ownership_invalid_in_protocols]
 [ownership_invalid_in_protocols_compat_warning]
 [required_initializer_nonclass]
 [required_initializer_in_extension]
 [required_initializer_missing]
 [required_initializer_here]
 [required_initializer_not_accessible]
 [required_initializer_missing_keyword]
 [required_initializer_override_wrong_keyword]
 [required_initializer_override_keyword]
 [overridden_required_initializer_here]
 [attribute_requires_function_type]
 [unsupported_convention]
 [unreferenced_generic_parameter]
 [unexpected_ctype_for_non_c_convention]
 [unable_to_parse_c_function_type]
 [unsupported_opaque_type]
 [opaque_type_unsupported_pattern]
 [opaque_type_in_protocol_requirement]
 [attr_only_on_parameters_of_differentiable]
 [differentiable_function_type_invalid_parameter]
 [differentiable_function_type_invalid_result]
 [differentiable_function_type_no_differentiability_parameters]
 [opened_non_protocol]
 [sil_function_ellipsis]
 [sil_function_input_label]
 [sil_function_output_label]
 [sil_non_coro_yields]
 [sil_function_repeat_convention]
 [ast_subst_function_type]
 [sil_function_multiple_error_results]
 [unsupported_sil_convention]
 [illegal_sil_type]
 [sil_box_arg_mismatch]
 [sil_metatype_without_repr]
 [sil_metatype_multiple_reprs]
 [objc_interop_disabled]
 [attr_used_without_required_module]
 [invalid_objc_decl_context]
 [invalid_objc_decl]
 [invalid_objc_swift_rooted_class]
 [invalid_objc_swift_root_class_insert_nsobject]
 [invalid_nonobjc_decl]
 [invalid_nonobjc_extension]
 [objc_in_extension_context]
 [objc_in_generic_extension]
 [objc_in_resilient_extension]
 [objc_operator]
 [objc_operator_proto]
 [objc_inference_swift3_dynamic]
 [objc_inference_swift3_objc_derived]
 [objc_inference_swift3_addobjc]
 [objc_inference_swift3_addnonobjc]
 [objc_for_generic_class]
 [objc_for_resilient_class]
 [objc_getter_for_nonobjc_property]
 [objc_getter_for_nonobjc_subscript]
 [objc_setter_for_nonobjc_property]
 [objc_setter_for_nonobjc_subscript]
 [accessor_swift3_objc_inference]
 [objc_enum_generic]
 [objc_name_req_nullary]
 [objc_name_subscript]
 [objc_name_deinit]
 [objc_name_func_mismatch]
 [objc_enum_case_req_name]
 [objc_enum_case_req_objc_enum]
 [objc_enum_case_multi]
 [objc_extension_not_class]
 [attribute_meaningless_when_nonobjc]
 [objc_invalid_on_var]
 [objc_invalid_on_subscript]
 [objc_invalid_on_static_subscript]
 [objc_invalid_with_generic_params]
 [objc_invalid_with_generic_requirements]
 [objc_convention_invalid]
 [paren_void_probably_void]
 [not_objc_empty_protocol_composition]
 [not_objc_protocol]
 [not_objc_class_constraint]
 [not_objc_error_protocol_composition]
 [not_objc_empty_tuple]
 [not_objc_tuple]
 [not_objc_swift_class]
 [not_objc_swift_struct]
 [not_objc_swift_enum]
 [not_objc_generic_type_param]
 [not_objc_function_type_param]
 [not_objc_function_type_throwing]
 [objc_inferring_on_objc_protocol_member]
 [objc_overriding_objc_decl]
 [objc_witness_objc_requirement]
 [witness_swift3_objc_inference]
 [no_opaque_return_type_of]
 [objc_observing_accessor]
 [objc_addressor]
 [objc_coroutine_accessor]
 [objc_invalid_on_func_variadic]
 [objc_invalid_on_func_inout]
 [objc_invalid_on_func_param_type]
 [objc_invalid_on_func_single_param_type]
 [objc_invalid_on_func_result_type]
 [objc_invalid_on_foreign_class]
 [objc_invalid_on_throwing_optional_result]
 [objc_invalid_on_throwing_result]
 [objc_invalid_on_failing_init]
 [objc_in_objc_runtime_visible]
 [objc_override_method_selector_mismatch]
 [objc_override_property_name_mismatch]
 [objc_ambiguous_inference]
 [objc_ambiguous_inference_candidate]
 [objc_ambiguous_error_convention]
 [objc_ambiguous_error_convention_candidate]
 [nonlocal_bridged_to_objc]
 [missing_bridging_function]
 [objc_redecl]
 [objc_declared_here]
 [objc_redecl_same]
 [objc_override_other]
 [objc_class_method_not_permitted]
 [objc_witness_selector_mismatch]
 [objc_optional_requirement_conflict]
 [objc_optional_requirement_swift_rename]
 [witness_non_objc]
 [witness_non_objc_optional]
 [witness_non_objc_storage]
 [witness_non_objc_storage_optional]
 [nonobjc_not_allowed]
 [borrowed_with_objc_dynamic]
 [borrowed_on_objc_protocol_requirement]
 [dynamic_with_transparent]
 [dynamic_replacement_accessor_type_mismatch]
 [dynamic_replacement_accessor_not_dynamic]
 [dynamic_replacement_accessor_not_explicit]
 [dynamic_replacement_function_not_dynamic]
 [dynamic_replacement_function_not_found]
 [dynamic_replacement_accessor_not_found]
 [dynamic_replacement_accessor_ambiguous]
 [dynamic_replacement_accessor_ambiguous_candidate]
 [dynamic_replacement_function_of_type_not_found]
 [dynamic_replacement_found_function_of_type]
 [dynamic_replacement_not_in_extension]
 [dynamic_replacement_must_not_be_dynamic]
 [dynamic_replacement_replaced_not_objc_dynamic]
 [dynamic_replacement_replacement_not_objc_dynamic]
 [dynamic_replacement_replaced_constructor_is_convenience]
 [dynamic_replacement_replaced_constructor_is_not_convenience]
 [non_nominal_type_eraser]
 [type_eraser_does_not_conform]
 [type_eraser_not_accessible]
 [type_eraser_missing_init]
 [type_eraser_unviable_init]
 [type_eraser_declared_here]
 [type_eraser_failable_init]
 [type_eraser_init_unsatisfied_requirements]
 [type_eraser_init_not_accessible]
 [availability_decl_unavailable]
 [availability_decl_unavailable_warn]
 [availability_decl_unavailable_rename]
 [availability_decl_unavailable_rename_warn]
 [availability_marked_unavailable]
 [availability_introduced_in_version]
 [availability_obsoleted]
 [availability_deprecated]
 [availability_deprecated_rename]
 [note_deprecated_rename]
 [availability_decl_more_than_enclosing]
 [availability_decl_more_than_enclosing_enclosing_here]
 [availability_decl_only_version_newer]
 [availability_opaque_types_only_version_newer]
 [availability_guard_with_version_check]
 [availability_add_attribute]
 [availability_accessor_only_version_newer]
 [availability_inout_accessor_only_version_newer]
 [availability_query_required_for_platform]
 [availability_query_useless_enclosing_scope]
 [availability_query_useless_enclosing_scope_here]
 [availability_global_script_no_potential]
 [availability_stored_property_no_potential]
 [availability_enum_element_no_potential]
 [availability_protocol_requires_version]
 [availability_protocol_requirement_here]
 [public_decl_needs_availability]
 [availability_macro_in_inlinable]
 [availabilty_string_subscript_migration]
 [availability_unavailable_implicit_init]
 [conformance_availability_unavailable]
 [conformance_availability_marked_unavailable]
 [conformance_availability_introduced_in_version]
 [conformance_availability_obsoleted]
 [conformance_availability_deprecated]
 [conformance_availability_only_version_newer]
 [conformance_availability_only_version_newer_warn]
 [discardable_result_on_void_never_function]
 [fixed_layout_attr_on_internal_type]
 [fixed_layout_struct]
 [frozen_attr_on_internal_type]
 [usable_from_inline_attr_with_explicit_access]
 [inlinable_implies_usable_from_inline]
 [usable_from_inline_attr_in_protocol]
 [local_type_in_inlinable_function]
 [resilience_decl_unavailable]
 [resilience_decl_unavailable_warn]
 [inlinable_decl_ref_from_hidden_module]
 [resilience_decl_declared_here_public]
 [resilience_decl_declared_here]
 [class_designated_init_inlinable_resilient]
 [attribute_invalid_on_stored_property]
 [inlinable_dynamic_not_supported]
 [inlinable_decl_not_public]
 [inlinable_resilient_deinit]
 [specialize_attr_nongeneric_trailing_where]
 [specialize_missing_where_clause]
 [specialize_empty_where_clause]
 [specialize_attr_non_concrete_same_type_req]
 [specialize_attr_only_generic_param_req]
 [specialize_attr_type_parameter_count_mismatch]
 [specialize_attr_missing_constraint]
 [specialize_attr_unsupported_kind_of_req]
 [specialize_target_function_not_found]
 [specialize_target_function_of_type_not_found]
 [specialize_found_function_of_type]
 [pbd_never_used_stmtcond]
 [unused_setter_parameter]
 [fixit_for_unused_setter_parameter]
 [pbd_never_used]
 [capture_never_used]
 [variable_never_used]
 [immutable_value_never_used_but_assigned]
 [variable_never_mutated]
 [variable_never_read]
 [observe_keypath_property_not_objc_dynamic]
 [default_magic_identifier_mismatch]
 [change_caller_default_to_match_callee]
 [silence_default_magic_identifier_mismatch]
 [debug_long_function_body]
 [debug_long_closure_body]
 [debug_long_expression]
 [empty_switch_stmt]
 [non_exhaustive_switch]
 [possibly_non_exhaustive_switch]
 [missing_several_cases]
 [missing_unknown_case]
 [non_exhaustive_switch_drop_unknown]
 [missing_particular_case]
 [redundant_particular_case]
 [redundant_particular_literal_case]
 [redundant_particular_literal_case_here]
 [non_exhaustive_switch_warn]
 [non_exhaustive_switch_unknown_only]
 [override_nsobject_hashvalue_error]
 [override_nsobject_hash_error]
 [hashvalue_implementation]
 [property_wrapper_no_value_property]
 [property_wrapper_ambiguous_value_property]
 [property_wrapper_wrong_initial_value_init]
 [property_wrapper_failable_init]
 [property_wrapper_type_requirement_not_accessible]
 [property_wrapper_ambiguous_enclosing_self_subscript]
 [property_wrapper_dynamic_self_type]
 [property_wrapper_var_must_be_static]
 [property_wrapper_attribute_not_on_property]
 [property_wrapper_param_not_supported]
 [property_wrapper_declared_here]
 [invalid_projection_argument]
 [property_wrapper_param_no_wrapper]
 [property_wrapper_param_attr_arg]
 [property_wrapper_no_init_projected_value]
 [property_wrapper_param_mutating]
 [invalid_implicit_property_wrapper]
 [property_wrapper_mutating_get_composed_to_get_only]
 [property_wrapper_top_level]
 [property_wrapper_let]
 [property_wrapper_computed]
 [property_wrapper_effectful]
 [property_with_wrapper_conflict_attribute]
 [property_wrapper_not_single_var]
 [property_with_wrapper_in_bad_context]
 [property_with_wrapper_overrides]
 [property_wrapper_direct_init]
 [property_wrapper_incompatible_property]
 [wrapped_value_mismatch]
 [composed_property_wrapper_mismatch]
 [property_wrapper_type_access]
 [property_wrapper_type_not_usable_from_inline]
 [property_wrapper_wrapperValue]
 [property_wrapper_init_initialValue]
 [property_wrapper_projection_value_missing]
 [property_wrapper_missing_arg_init]
 [result_builder_decl]
 [note_result_builder_decl]
 [result_builder_control_flow]
 [note_result_builder_control_flow]
 [result_builder_attribute_not_allowed_here]
 [result_builder_attribute_on_storage_without_getter]
 [result_builder_parameter_not_of_function_type]
 [result_builder_parameter_autoclosure]
 [result_builder_multiple]
 [previous_result_builder_here]
 [result_builder_arguments]
 [result_builder_disabled_by_return]
 [result_builder_disabled_by_return_warn]
 [result_builder_remove_attr]
 [result_builder_remove_returns]
 [result_builder_infer_ambig]
 [result_builder_infer_add_return]
 [result_builder_infer_pick_specific]
 [result_builder_missing_limited_availability]
 [result_builder_static_buildblock]
 [result_builder_non_static_buildblock]
 [result_builder_buildblock_enum_case]
 [result_builder_buildblock_not_static_method]
 [result_builder_missing_build_optional]
 [result_builder_missing_build_either]
 [result_builder_missing_build_array]
 [result_builder_missing_build_limited_availability]
 [warn_reordering_tuple_shuffle_deprecated]
 [marker_protocol_requirement]
 [marker_protocol_inherit_nonmarker]
 [marker_protocol_cast]
 [marker_protocol_conditional_conformance]
 [differentiable_programming_attr_used_without_required_module]
 [oslog_arg_must_be_bool_literal]
 [oslog_arg_must_be_integer_literal]
 [oslog_arg_must_be_string_literal]
 [oslog_arg_must_be_float_literal]
 [oslog_arg_must_be_metatype_literal]
 [oslog_arg_must_be_closure]
 [argument_must_be_constant]
 [oslog_message_must_be_string_interpolation]
 [oslog_arg_must_be_enum_case]
 [oslog_arg_must_be_type_member_access]
 [atomics_ordering_must_be_constant]
 [swiftui_arg_must_be_integer_literal]
 [swiftui_arg_must_be_integer_range]
 [attr_added_by_access_note]
 [fixit_attr_added_by_access_note]
 [attr_removed_by_access_note]
 [fixit_attr_removed_by_access_note]
 [attr_objc_name_changed_by_access_note]
 [fixit_attr_objc_name_changed_by_access_note]
 [attr_objc_name_conflicts_with_access_note]
 [warning_from_clang]
 [error_from_clang]
 [note_from_clang]
 [remark_from_clang]
 [clang_cannot_build_module]
 [bridging_header_missing]
 [bridging_header_error]
 [could_not_rewrite_bridging_header]
 [bridging_header_pch_error]
 [emit_pcm_error]
 [dump_pcm_error]
 [invalid_swift_name_method]
 [note_while_importing]
 [swift_name_protocol_static]
 [swift_name_no_prototype]
 [inconsistent_swift_name]
 [unresolvable_clang_decl]
 [unresolvable_clang_decl_is_a_framework_bug]
 [clang_swift_attr_without_at]
 [implicit_bridging_header_imported_from_module]
 [import_multiple_mainactor_attr]
 [module_map_not_found]
 [bridging_module_missing]
 [bridging_function_missing]
 [bridging_function_overloaded]
 [bridging_function_not_function]
 [bridging_function_not_correct_type]
 [bridging_objcbridgeable_missing]
 [bridging_objcbridgeable_broken]
 [sil_function_redefinition]
 [invalid_sil_builtin]
 [could_not_find_bridge_type]
 [could_not_find_pointer_pointee_property]
 [writeback_overlap_property]
 [writeback_overlap_subscript]
 [writebackoverlap_note]
 [inout_argument_alias]
 [previous_inout_alias]
 [unimplemented_generator_witnesses]
 [exclusivity_access_required]
 [exclusivity_access_required_unknown_decl]
 [exclusivity_conflicting_access]
 [unsupported_c_function_pointer_conversion]
 [c_function_pointer_from_function_with_context]
 [objc_selector_malformed]
 [capture_before_declaration]
 [captured_value_declared_here]
 [escaping_inout_capture]
 [inout_param_defined_here]
 [escaping_mutable_self_capture]
 [escaping_noescape_param_capture]
 [noescape_param_defined_here]
 [escaping_noescape_var_capture]
 [value_captured_here]
 [copy_inout_captured_by_autoclosure]
 [copy_self_captured_by_autoclosure]
 [value_captured_transitively]
 [err_noescape_param_call]
 [variable_defined_here]
 [variable_used_before_initialized]
 [variable_inout_before_initialized]
 [variable_closure_use_uninit]
 [variable_defer_use_uninit]
 [self_closure_use_uninit]
 [variable_addrtaken_before_initialized]
 [ivar_not_initialized_at_superinit]
 [ivar_not_initialized_at_implicit_superinit]
 [self_use_before_fully_init]
 [use_of_self_before_fully_init]
 [stored_property_not_initialized]
 [selfinit_multiple_times]
 [superselfinit_not_called_before_return]
 [self_before_superinit]
 [self_before_selfinit]
 [self_before_selfinit_value_type]
 [self_inside_catch_superselfinit]
 [return_from_init_without_initing_stored_properties]
 [variable_function_use_uninit]
 [struct_not_fully_initialized]
 [immutable_property_already_initialized]
 [initial_value_provided_in_let_decl]
 [mutation_of_property_of_immutable_value]
 [using_mutating_accessor_on_immutable_value]
 [mutating_method_called_on_immutable_value]
 [immutable_value_passed_inout]
 [assignment_to_immutable_value]
 [designated_init_in_cross_module_extension]
 [designated_init_c_struct_fix]
 [missing_return]
 [missing_return_last_expr]
 [missing_never_call]
 [guard_body_must_not_fallthrough]
 [unreachable_code]
 [unreachable_code_uninhabited_param_note]
 [unreachable_code_branch]
 [call_to_noreturn_note]
 [unreachable_code_after_stmt]
 [unreachable_case]
 [switch_on_a_constant]
 [unreachable_code_note]
 [warn_infinite_recursive_call]
 [warn_dead_weak_store]
 [circular_transparent]
 [note_while_inlining]
 [cannot_prespecialize]
 [missing_prespecialization]
 [integer_conversion_overflow]
 [integer_conversion_overflow_builtin_types]
 [integer_conversion_overflow_warn]
 [negative_integer_literal_overflow_unsigned]
 [integer_literal_overflow]
 [integer_literal_overflow_builtin_types]
 [integer_literal_overflow_warn]
 [arithmetic_operation_overflow]
 [arithmetic_operation_overflow_generic_type]
 [division_overflow]
 [division_by_zero]
 [wrong_non_negative_assumption]
 [shifting_all_significant_bits]
 [static_report_error]
 [pound_assert_condition_not_constant]
 [pound_assert_failure]
 [constexpr_unknown_reason_default]
 [constexpr_unevaluable_operation]
 [constexpr_too_many_instructions]
 [constexpr_limit_exceeding_instruction]
 [constexpr_loop_found_note]
 [constexpr_loop_instruction]
 [constexpr_overflow]
 [constexpr_overflow_operation]
 [constexpr_trap]
 [constexpr_trap_operation]
 [constexpr_invalid_operand_seen]
 [constexpr_operand_invalid_here]
 [constexpr_value_unknown_at_top_level]
 [constexpr_multiple_writers_found_at_top_level]
 [constexpr_unsupported_instruction_found]
 [constexpr_unsupported_instruction_found_here]
 [constexpr_found_callee_with_no_body]
 [constexpr_callee_with_no_body]
 [constexpr_found_call_with_unknown_arg]
 [constexpr_call_with_unknown_arg]
 [constexpr_untracked_sil_value_use_found]
 [constexpr_untracked_sil_value_used_here]
 [constexpr_unevaluable_cast_found]
 [constexpr_unevaluable_cast_used_here]
 [constexpr_unresolvable_witness_call]
 [constexpr_no_witness_table_entry]
 [constexpr_witness_call_with_no_conformance]
 [constexpr_unknown_control_flow_due_to_skip]
 [constexpr_returned_by_unevaluated_instruction]
 [constexpr_mutated_by_unevaluated_instruction]
 [not_constant_evaluable]
 [constexpr_imported_func_not_onone]
 [autodiff_internal_swift_not_imported]
 [autodiff_differentiation_module_not_imported]
 [autodiff_conversion_to_linear_function_not_supported]
 [autodiff_function_not_differentiable_error]
 [autodiff_expression_not_differentiable_error]
 [autodiff_expression_not_differentiable_note]
 [autodiff_when_differentiating_function_call]
 [autodiff_when_differentiating_function_definition]
 [autodiff_implicitly_inherited_differentiable_attr_here]
 [autodiff_jvp_control_flow_not_supported]
 [autodiff_control_flow_not_supported]
 [autodiff_missing_return]
 [autodiff_external_nondifferentiable_function]
 [autodiff_opaque_function_not_differentiable]
 [autodiff_private_derivative_from_fragile]
 [autodiff_function_noderivative_parameter_not_differentiable]
 [autodiff_function_assoc_func_unmet_requirements]
 [autodiff_nondifferentiable_argument]
 [autodiff_nondifferentiable_result]
 [autodiff_protocol_member_not_differentiable]
 [autodiff_class_member_not_differentiable]
 [autodiff_member_subset_indices_not_differentiable]
 [autodiff_cannot_param_subset_thunk_partially_applied_orig_fn]
 [autodiff_cannot_differentiate_through_multiple_results]
 [autodiff_cannot_differentiate_through_inout_arguments]
 [autodiff_enums_unsupported]
 [autodiff_stored_property_parent_not_differentiable]
 [autodiff_stored_property_not_differentiable]
 [autodiff_stored_property_tangent_not_struct]
 [autodiff_stored_property_no_corresponding_tangent]
 [autodiff_tangent_property_wrong_type]
 [autodiff_tangent_property_not_stored]
 [autodiff_coroutines_not_supported]
 [autodiff_cannot_differentiate_writes_to_global_variables]
 [autodiff_cannot_differentiate_writes_to_mutable_captures]
 [non_physical_addressof]
 [non_borrowed_indirect_addressof]
 [opt_remark_passed]
 [opt_remark_missed]
 [opt_remark_note]
 [float_to_int_overflow]
 [negative_fp_literal_overflow_unsigned]
 [warning_float_trunc_overflow]
 [warning_float_trunc_underflow]
 [warning_float_trunc_hex_inexact]
 [warning_float_overflows_maxbuiltin]
 [warning_int_to_fp_inexact]
 [return_before_yield]
 [multiple_yields]
 [previous_yield]
 [possible_return_before_yield]
 [branch_doesnt_yield]
 [named_case_doesnt_yield]
 [case_doesnt_yield]
 [switch_value_case_doesnt_yield]
 [try_branch_doesnt_yield]
 [oslog_constant_eval_trap]
 [oslog_too_many_instructions]
 [oslog_invalid_log_message]
 [oslog_const_evaluable_fun_error]
 [oslog_non_constant_message]
 [oslog_non_constant_interpolation]
 [oslog_property_not_constant]
 [oslog_message_alive_after_opts]
 [oslog_message_explicitly_created]
 [oslog_call_in_unreachable_code]
 [global_string_pointer_on_non_constant]
 [polymorphic_builtin_passed_non_trivial_non_builtin_type]
 [polymorphic_builtin_passed_type_without_static_overload]
 [box_to_stack_cannot_promote_box_to_stack_due_to_escape_alloc]
 [box_to_stack_cannot_promote_box_to_stack_due_to_escape_location]
 [semantic_function_improper_nesting]
 [capturepromotion_concurrentcapture_mutation]
 [capturepromotion_concurrentcapture_closure_here]
 [capturepromotion_concurrentcapture_capturinguse_here]
 [capturepromotion_variable_defined_here]
 [no_llvm_target]
 [error_codegen_init_fail]
 [irgen_unimplemented]
 [irgen_failure]
 [type_to_verify_not_found]
 [type_to_verify_ambiguous]
 [type_to_verify_dependent]
 [too_few_output_filenames]
 [no_input_files_for_mt]
 [alignment_dynamic_type_layout_unsupported]
 [alignment_less_than_natural]
 [alignment_more_than_maximum]
 [warning_no_such_sdk]
 [error_no_frontend_args]
 [error_no_such_file_or_directory]
 [error_unsupported_target_os]
 [error_unsupported_target_arch]
 [error_unknown_library_level]
 [error_unsupported_opt_for_target]
 [warning_inferred_simulator_target]
 [error_argument_not_allowed_with]
 [warning_argument_not_supported_with_optimization]
 [error_option_requires_sanitizer]
 [warning_option_requires_specific_sanitizer]
 [error_option_missing_required_argument]
 [cannot_open_file]
 [cannot_open_serialized_file]
 [error_open_input_file]
 [error_clang_importer_create_fail]
 [error_missing_arg_value]
 [error_unknown_arg]
 [error_invalid_arg_value]
 [warning_invalid_locale_code]
 [warning_locale_path_not_found]
 [warning_cannot_find_locale_file]
 [warning_cannot_multithread_batch_mode]
 [error_unsupported_option_argument]
 [error_immediate_mode_missing_stdlib]
 [error_immediate_mode_missing_library]
 [error_immediate_mode_primary_file]
 [error_missing_frontend_action]
 [error_invalid_source_location_str]
 [error_no_source_location_scope_map]
 [note_valid_swift_versions]
 [error_mode_cannot_emit_dependencies]
 [error_mode_cannot_emit_reference_dependencies]
 [error_mode_cannot_emit_header]
 [error_mode_cannot_emit_loaded_module_trace]
 [error_mode_cannot_emit_module]
 [error_mode_cannot_emit_module_doc]
 [error_mode_cannot_emit_module_source_info]
 [error_mode_cannot_emit_interface]
 [error_mode_cannot_emit_module_summary]
 [error_mode_cannot_emit_symbol_graph]
 [cannot_emit_ir_skipping_function_bodies]
 [emit_reference_dependencies_without_primary_file]
 [warn_implicit_concurrency_import_failed]
 [error_module_name_required]
 [error_bad_module_name]
 [error_stdlib_module_name]
 [error_stdlib_not_found]
 [error_unable_to_load_supplementary_output_file_map]
 [error_missing_entry_in_supplementary_output_file_map]
 [error_repl_requires_no_input_files]
 [error_mode_requires_one_input_file]
 [error_mode_requires_an_input_file]
 [error_mode_requires_one_sil_multi_sib]
 [error_no_output_filename_specified]
 [error_implicit_output_file_is_directory]
 [error_if_any_output_files_are_specified_they_all_must_be]
 [error_primary_file_not_found]
 [error_cannot_have_input_files_with_file_list]
 [error_cannot_have_primary_files_with_primary_file_list]
 [error_cannot_have_supplementary_outputs]
 [error_duplicate_input_file]
 [repl_must_be_initialized]
 [verify_encountered_fatal]
 [error_parse_input_file]
 [error_write_index_unit]
 [error_create_index_dir]
 [error_write_index_record]
 [error_index_failed_status_check]
 [error_index_inputs_more_than_outputs]
 [warn_index_unit_output_path_without_index_store]
 [error_wrong_number_of_arguments]
 [error_formatting_multiple_file_ranges]
 [error_formatting_invalid_range]
 [stats_disabled]
 [tbd_warn_truncating_version]
 [tbd_err_invalid_version]
 [tbd_only_supported_in_whole_module]
 [tbd_not_supported_with_cmo]
 [linker_directives_choice_confusion]
 [previous_installname_map_missing]
 [previous_installname_map_corrupted]
 [explicit_swift_module_map_missing]
 [explicit_swift_module_map_corrupted]
 [placeholder_dependency_module_map_missing]
 [placeholder_dependency_module_map_corrupted]
 [batch_scan_input_file_missing]
 [batch_scan_input_file_corrupted]
 [default_previous_install_name]
 [platform_previous_install_name]
 [unknown_platform_name]
 [unknown_swift_module_name]
 [cannot_find_install_name]
 [symbol_in_tbd_not_in_ir]
 [symbol_in_ir_not_in_tbd]
 [tbd_validation_failure]
 [redundant_prefix_compilation_flag]
 [invalid_conditional_compilation_flag]
 [cannot_assign_value_to_conditional_compilation_flag]
 [framework_search_path_includes_framework_extension]
 [error_optimization_remark_pattern]
 [error_invalid_debug_prefix_map]
 [error_invalid_coverage_prefix_map]
 [invalid_vfs_overlay_file]
 [module_interface_scoped_import_unsupported]
 [warn_unsupported_module_interface_swift_version]
 [warn_unsupported_module_interface_library_evolution]
 [error_extracting_version_from_module_interface]
 [unsupported_version_of_module_interface]
 [error_opening_explicit_module_file]
 [error_extracting_flags_from_module_interface]
 [warning_module_shadowing_may_break_module_interface]
 [rebuilding_module_from_interface]
 [sdk_version_pbm_version]
 [out_of_date_module_here]
 [module_interface_dependency_out_of_date]
 [module_interface_dependency_missing]
 [compiled_module_invalid]
 [compiled_module_invalid_reason]
 [unknown_forced_module_loading_mode]
 [error_creating_remark_serializer]
 [interface_file_lock_failure]
 [interface_file_lock_timed_out]
 [error_option_required]
 [error_nonexistent_output_dir]
 [missing_member_dependency]
 [unexpected_dependency]
 [unexpected_provided_entity]
 [negative_expectation_violated]
 [expectation_missing_opening_braces]
 [expectation_missing_closing_braces]
 [module_incompatible_with_skip_function_bodies]
 [access_notes_file_io_error]
 [error_in_access_notes_file]
 [warning_in_access_notes_file]
 [warning_parallel_execution_not_supported]
 [error_unable_to_execute_command]
 [error_command_signalled_without_signal_number]
 [error_command_signalled]
 [error_command_failed]
 [error_expected_one_frontend_job]
 [error_expected_frontend_command]
 [error_cannot_specify__o_for_multiple_outputs]
 [error_static_emit_executable_disallowed]
 [error_unable_to_load_output_file_map]
 [error_no_output_file_map_specified]
 [error_unable_to_make_temporary_file]
 [error_no_input_files]
 [error_unexpected_input_file]
 [error_unknown_target]
 [error_framework_bridging_header]
 [error_bridging_header_module_interface]
 [error_i_mode]
 [warning_unnecessary_repl_mode]
 [error_unsupported_option]
 [incremental_requires_output_file_map]
 [incremental_requires_build_record_entry]
 [unable_to_open_incremental_comparison_log]
 [error_os_minimum_deployment]
 [error_sdk_too_old]
 [error_ios_maximum_deployment_32]
 [error_unsupported_target_variant]
 [warn_arclite_not_found_when_link_objc_runtime]
 [warn_cannot_stat_input]
 [warn_unable_to_load_dependencies]
 [error_input_changed_during_build]
 [error_conflicting_options]
 [error_option_not_supported]
 [error_requirement_not_met]
 [warn_ignore_embed_bitcode]
 [warn_ignore_embed_bitcode_marker]
 [verify_debug_info_requires_debug_option]
 [verify_incremental_dependencies_needs_incremental]
 [error_profile_missing]
 [warn_opt_remark_disabled]
 [warn_ignoring_batch_mode]
 [warn_ignoring_wmo]
 [warn_use_filelists_deprecated]
 [warn_unable_to_load_primary]
 [cannot_find_migration_script]
 [error_darwin_static_stdlib_not_supported]
 [error_darwin_only_supports_libcxx]
 [warn_drv_darwin_sdk_invalid_settings]
 [invalid_name]
 [invalid_location]
 [arity_mismatch]
 [name_not_functionlike]
 [unresolved_location]
 [location_module_mismatch]
 [value_decl_no_loc]
 [value_decl_referenced_out_of_range]
 [multi_entry_range]
 [orphan_loop_keyword]
 [invalid_default_location]
 [no_parent_switch]
 [no_remaining_cases]
 [mismatched_rename]
 [no_insert_position]
 [missing_callback_arg]
 [mismatched_callback_args]
 [unknown_callback_conditions]
 [mixed_callback_conditions]
 [callback_with_fallthrough]
 [callback_with_default]
 [callback_multiple_case_items]
 [callback_where_case_item]
 [generic_sig_change]
 [raw_type_change]
 [removed_decl]
 [moved_decl]
 [renamed_decl]
 [decl_type_change]
 [decl_attr_change]
 [decl_new_attr]
 [decl_reorder]
 [decl_added]
 [var_has_fixed_order_change]
 [func_has_fixed_order_change]
 [default_arg_removed]
 [conformance_removed]
 [conformance_added]
 [existing_conformance_added]
 [default_associated_type_removed]
 [protocol_req_added]
 [super_class_removed]
 [super_class_changed]
 [decl_kind_changed]
 [optional_req_changed]
 [no_longer_open]
 [func_type_escaping_changed]
 [func_self_access_change]
 [param_ownership_change]
 [type_witness_change]
 [decl_new_witness_table_entry]
 [new_decl_without_intro]
 [objc_name_change]
 [desig_init_added]
 [added_invisible_designated_init]
 [not_inheriting_convenience_inits]
 [enum_case_added]
 [cannot_read_allowlist]
<not a diagnostic>
invalid_diagnostic
not_implemented
error_opening_output
cannot_find_group_info_file
cannot_parse_group_info_file
error_no_group_info
previous_decldef
brace_stmt_suggest_do
while_parsing_as_left_angle_bracket
remark_max_determinism_overriding
super_not_in_class_method
class_func_not_in_class
class_var_not_in_class
class_subscript_not_in_class
func_decl_without_brace
convert_let_to_var
note_typo_candidate
profile_read_error
protocol_extension_redundant_requirement
attr_only_on_parameters
function_type_no_parens
error_underlying_module_not_found
generic_signature_not_minimal
generic_signature_not_valid
generic_signature_not_equal
concurrency_default_actor_not_found
sdk_node_unrecognized_key
sdk_node_unrecognized_node_kind
sdk_node_unrecognized_type_attr_kind
sdk_node_unrecognized_decl_attr_kind
sdk_node_unrecognized_decl_kind
sdk_node_unrecognized_accessor_kind
source_location_creates_file_id_conflicts
fixit_correct_source_location_file
error_two_files_same_name
note_explain_two_files_same_name
circular_reference
circular_reference_through
circular_class_inheritance
circular_enum_inheritance
circular_protocol_def
kind_declname_declared_here
warn_property_wrapper_module_scope
circular_type_resolution_note
cannot_load_swiftoverlay_file
cannot_list_swiftcrossimport_dir
cross_imported_by_both_modules
scanner_find_cycle
scanner_arguments_invalid
ambiguous_custom_attribute_ref
ambiguous_custom_attribute_ref_fix
found_attribute_candidate
unknown_attribute
opening_brace
opening_bracket
opening_paren
opening_angle
extra_rbrace
structure_overflow
expected_close_to_if_directive
expected_close_after_else_directive
unexpected_conditional_compilation_block_terminator
incomplete_conditional_compilation_directive
extra_tokens_conditional_compilation_directive
unexpected_rbrace_in_conditional_compilation_block
unexpected_if_following_else_compilation_directive
pound_diagnostic_expected_string
pound_diagnostic_expected
pound_diagnostic_expected_parens
pound_diagnostic_interpolation
extra_tokens_pound_diagnostic_directive
sourceLocation_expected
unexpected_line_directive
expected_line_directive_number
expected_line_directive_name
extra_tokens_line_directive
line_directive_line_zero
escaped_parameter_name
forbidden_interpolated_string
forbidden_extended_escaping_string
lex_nul_character
lex_utf16_bom_marker
lex_hashbang_not_allowed
lex_unprintable_ascii_character
lex_invalid_utf8
lex_single_quote_string
lex_invalid_curly_quote
lex_confusable_character
lex_nonbreaking_space
lex_unterminated_block_comment
lex_comment_start
lex_unterminated_string
lex_invalid_escape
lex_invalid_u_escape
lex_invalid_u_escape_rbrace
lex_invalid_escape_delimiter
lex_invalid_closing_delimiter
lex_invalid_unicode_scalar
lex_unicode_escape_braces
lex_illegal_multiline_string_start
lex_illegal_multiline_string_end
lex_multiline_string_indent_inconsistent
lex_multiline_string_indent_should_match_here
lex_multiline_string_indent_change_line
lex_escaped_newline_at_lastline
lex_invalid_character
lex_invalid_identifier_start_character
lex_expected_digit_in_fp_exponent
lex_invalid_digit_in_fp_exponent
lex_invalid_digit_in_int_literal
lex_expected_binary_exponent_in_hex_float_literal
lex_unexpected_block_comment_end
lex_unary_equal
extra_whitespace_period
lex_editor_placeholder
lex_editor_placeholder_in_playground
lex_conflict_marker_in_file
note_in_decl_extension
line_directive_style_deprecated
declaration_same_line_without_semi
expected_decl
expected_identifier_in_decl
expected_keyword_in_decl
number_cant_start_decl_name
expected_identifier_after_case_comma
decl_redefinition
let_cannot_be_computed_property
let_cannot_be_observing_property
let_cannot_be_addressed_property
disallowed_var_multiple_getset
disallowed_init
var_init_self_referential
disallowed_enum_element
decl_inner_scope
decl_not_static
cskeyword_not_attribute
decl_already_static
enum_case_dot_prefix
static_var_decl_global_scope
computed_property_no_accessors
expected_getset_in_protocol
unexpected_getset_implementation_in_protocol
computed_property_missing_type
getset_nontrivial_pattern
expected_rbrace_in_getset
duplicate_accessor
conflicting_accessor
previous_accessor
expected_accessor_parameter_name
expected_rparen_set_name
expected_rparen_willSet_name
expected_rparen_didSet_name
expected_lbrace_accessor
expected_accessor_kw
invalid_accessor_specifier
invalid_accessor_with_effectful_get
missing_getter
missing_reading_accessor
observing_accessor_conflicts_with_accessor
observing_accessor_in_subscript
getset_cannot_be_implied
decl_expected_module_name
expected_lbrace_extension
expected_rbrace_extension
extension_type_expected
expected_equal_in_typealias
expected_type_in_typealias
expected_type_in_associatedtype
associated_type_generic_parameter_list
func_decl_without_paren
static_func_decl_global_scope
func_decl_expected_arrow
operator_static_in_protocol
async_func_modifier
expected_lbrace_enum
expected_rbrace_enum
expected_lbrace_struct
expected_rbrace_struct
expected_lbrace_class
expected_rbrace_class
expected_colon_class
generic_arguments_protocol
expected_lbrace_protocol
expected_rbrace_protocol
protocol_setter_name
protocol_method_with_body
protocol_init_with_body
subscript_decl_wrong_scope
expected_lparen_subscript
subscript_has_name
expected_arrow_subscript
expected_type_subscript
expected_lbrace_subscript
expected_lbrace_subscript_protocol
subscript_without_get
invalid_nested_init
initializer_decl_wrong_scope
expected_lparen_initializer
initializer_has_name
destructor_decl_outside_class
expected_lbrace_destructor
destructor_has_name
opened_destructor_expected_rparen
destructor_params
operator_decl_inner_scope
expected_operator_name_after_operator
identifier_within_operator_name
operator_name_invalid_char
postfix_operator_name_cannot_start_with_unwrap
deprecated_operator_body
deprecated_operator_body_use_group
operator_decl_no_fixity
operator_decl_expected_type
operator_decl_trailing_comma
precedencegroup_not_infix
expected_precedencegroup_name
expected_precedencegroup_lbrace
expected_precedencegroup_attribute
unknown_precedencegroup_attribute
expected_precedencegroup_attribute_colon
precedencegroup_attribute_redeclared
expected_precedencegroup_associativity
expected_precedencegroup_assignment
expected_precedencegroup_relation
expected_sil_keyword
inout_not_attribute
only_allowed_in_sil
expected_sil_type
expected_sil_colon_value_ref
expected_sil_value_name
expected_sil_type_kind
expected_sil_constant
referenced_value_no_accessor
expected_sil_value_ownership_kind
silfunc_and_silarg_have_incompatible_sil_value_ownership
expected_sil_colon
expected_sil_tuple_index
invalid_index_subset
sil_value_redefinition
sil_value_use_type_mismatch
sil_value_def_type_mismatch
sil_use_of_undefined_value
sil_prior_reference
expected_colon_in_sil_location
sil_invalid_line_in_sil_location
sil_invalid_column_in_sil_location
sil_invalid_scope_slot
sil_scope_undeclared
sil_scope_redefined
expected_sil_instr_start_of_line
expected_equal_in_sil_instr
wrong_result_count_in_sil_instr
expected_sil_instr_opcode
expected_tok_in_sil_instr
sil_property_generic_signature_mismatch
sil_string_no_encoding
sil_string_invalid_encoding
expected_tuple_type_in_tuple
sil_tuple_inst_wrong_value_count
sil_tuple_inst_wrong_field
sil_struct_inst_wrong_field
sil_ref_inst_wrong_field
sil_invalid_instr_operands
sil_operand_not_address
sil_operand_not_ref_storage_address
sil_integer_literal_not_integer_type
sil_integer_literal_not_well_formed
sil_float_literal_not_float_type
sil_substitutions_on_non_polymorphic_type
sil_witness_method_not_protocol
sil_witness_method_type_does_not_conform
sil_member_decl_not_found
sil_named_member_decl_not_found
sil_member_lookup_bad_type
sil_member_decl_type_mismatch
sil_substitution_mismatch
sil_not_class
sil_missing_substitutions
sil_too_many_substitutions
sil_dbg_unknown_key
sil_objc_with_tail_elements
sil_expected_access_kind
sil_expected_access_enforcement
sil_keypath_expected_component_kind
sil_keypath_unknown_component_kind
sil_keypath_computed_property_missing_part
sil_keypath_no_root
sil_keypath_index_not_hashable
sil_keypath_index_operand_type_conflict
sil_keypath_no_use_of_operand_in_pattern
expected_sil_block_name
expected_sil_block_colon
sil_undefined_basicblock_use
sil_basicblock_redefinition
sil_basicblock_arg_rparen
expected_sil_function_name
expected_sil_rbrace
expected_sil_function_type
sil_dynamically_replaced_func_not_found
sil_specialize_target_func_not_found
sil_availability_expected_version
expected_sil_stage_name
multiple_sil_stage_decls
expected_sil_vtable_colon
sil_vtable_func_not_found
sil_vtable_class_not_found
sil_vtable_bad_entry_kind
sil_vtable_expect_rsquare
sil_global_variable_not_found
expected_sil_witness_colon
expected_sil_witness_lparen
expected_sil_witness_rparen
sil_witness_func_not_found
sil_witness_protocol_not_found
sil_witness_assoc_not_found
sil_witness_assoc_conf_not_found
sil_witness_protocol_conformance_not_found
sil_diff_witness_expected_token
sil_diff_witness_unknown_kind
sil_diff_witness_serialized_declaration
sil_diff_witness_undefined
sil_diff_witness_invalid_generic_signature
sil_coverage_invalid_hash
sil_coverage_expected_lbrace
sil_coverage_expected_loc
sil_coverage_expected_arrow
sil_coverage_expected_colon
sil_coverage_invalid_counter
sil_coverage_expected_rparen
sil_coverage_expected_quote
sil_coverage_invalid_operator
expected_type
expected_init_value
expected_identifier_in_dotted_type
expected_identifier_for_type
expected_rangle_generic_arg_list
expected_type_function_result
generic_non_function
rethrowing_function_type
reasync_function_type
async_or_throws_in_wrong_position
throw_in_function_type
expected_type_before_arrow
expected_type_after_arrow
function_type_argument_label
expected_dynamic_func_attr
async_after_throws
duplicate_effects_specifier
expected_expr_enum_case_raw_value
nonliteral_enum_case_raw_value
new_array_syntax
expected_rbracket_array_type
expected_element_type
expected_dictionary_value_type
expected_rbracket_dictionary_type
extra_rbracket
extra_colon
subscript_array_element
subscript_array_element_fix_it_add_comma
subscript_array_element_fix_it_remove_space
expected_rparen_tuple_type_list
multiple_ellipsis_in_tuple
tuple_type_init
protocol_method_argument_init
protocol_init_argument_init
protocol_subscript_argument_init
tuple_type_multiple_labels
expected_rangle_protocol
deprecated_protocol_composition
deprecated_protocol_composition_single
deprecated_any_composition
sil_box_expected_var_or_let
sil_box_expected_r_brace
sil_box_expected_r_angle
sil_function_subst_expected_l_angle
sil_function_subst_expected_r_angle
sil_function_subst_expected_generics
sil_function_subst_expected_function
sil_function_subst_expected_subs
sil_function_subs_without_generics
opaque_mid_composition
layout_size_should_be_positive
layout_alignment_should_be_positive
expected_rparen_layout_constraint
layout_constraints_only_inside_specialize_attr
expected_pattern
keyword_cant_be_identifier
repeated_identifier
join_identifiers
join_identifiers_camel_case
backticks_to_escape
expected_rparen_tuple_pattern_list
untyped_pattern_ellipsis
no_default_arg_closure
no_default_arg_curried
var_pattern_in_var
extra_var_in_multiple_pattern_list
let_pattern_in_immutable_context
specifier_must_have_type
expected_rparen_parameter
expected_parameter_type
expected_parameter_name
expected_parameter_colon
expected_assignment_instead_of_comparison_operator
parameter_vararg_default
parameter_specifier_as_attr_disallowed
parameter_specifier_repeated
parameter_let_var_as_attr
parameter_extraneous_double_up
parameter_operator_keyword_argument
parameter_unnamed
parameter_unnamed_warn
parameter_curry_syntax_removed
initializer_as_typed_pattern
unlabeled_parameter_following_variadic_parameter
closure_unlabeled_parameter_following_variadic_parameter
enum_element_empty_arglist
enum_element_empty_arglist_swift4
enum_element_empty_arglist_delete
enum_element_empty_arglist_add_void
expected_stmt
illegal_top_level_stmt
illegal_top_level_expr
illegal_semi_stmt
statement_begins_with_closure
statement_same_line_without_semi
statement_same_line_without_newline
invalid_label_on_stmt
labeled_block_needs_do
snake_case_deprecated
expected_expr_assignment
expected_rbrace_in_brace_stmt
typealias_inside_protocol_without_type
associatedtype_outside_protocol
expected_expr_return
unindented_code_after_return
indent_expression_to_silence
expected_expr_throw
expected_await_not_async
expected_expr_yield
expected_lbrace_after_defer
expected_comma_stmtcondition
expected_expr_conditional
expected_binding_keyword
expected_expr_conditional_var
conditional_var_initializer_required
wrong_condition_case_location
expected_condition_if
missing_condition_after_if
expected_lbrace_after_if
expected_lbrace_or_if_after_else
expected_lbrace_or_if_after_else_fixit
unexpected_else_after_if
suggest_removing_else
expected_condition_guard
missing_condition_after_guard
expected_else_after_guard
expected_lbrace_after_guard
expected_condition_while
missing_condition_after_while
expected_lbrace_after_while
expected_lbrace_after_repeat
expected_while_after_repeat_body
expected_expr_repeat_while
do_while_now_repeat_while
do_while_expected_repeat_while
do_while_expected_separate_stmt
expected_lbrace_after_do
expected_lbrace_after_catch
expected_catch_where_expr
docatch_not_trycatch
c_style_for_stmt_removed
expected_foreach_in
expected_foreach_container
expected_foreach_lbrace
expected_foreach_where_expr
expected_switch_expr
expected_lbrace_after_switch
expected_rbrace_switch
case_outside_of_switch
stmt_in_switch_not_covered_by_case
case_after_default
expected_case_where_expr
expected_case_colon
default_with_where
case_stmt_without_body
try_on_stmt
try_on_return_throw_yield
try_on_var_let
expected_expr
expected_separator
unexpected_separator
expected_expr_after_operator
expected_expr_after_unary_operator
expected_prefix_operator
expected_operator_ref
invalid_postfix_operator
expected_member_name
dollar_numeric_too_large
numeric_literal_numeric_member
standalone_dollar_identifier
dollar_identifier_decl
anon_closure_arg_not_in_closure
anon_closure_arg_in_closure_with_args
anon_closure_arg_in_closure_with_args_typo
anon_closure_tuple_param_destructuring
expected_closure_parameter_name
expected_capture_specifier
expected_capture_specifier_name
expected_init_capture_specifier
expected_capture_list_end_rsquare
cannot_capture_fields
expected_closure_result_type
expected_closure_in
unexpected_tokens_before_closure_in
expected_closure_rbrace
trailing_closure_after_newlines
trailing_closure_callee_here
string_literal_no_atsign
invalid_float_literal_missing_leading_zero
availability_query_outside_if_stmt_guard
empty_arg_label_underscore
expected_identifier_after_dot_expr
expected_identifier_after_super_dot_expr
expected_dot_or_subscript_after_super
super_in_closure_with_capture
super_in_closure_with_capture_here
await_before_try
expected_expr_in_expr_list
expected_expr_in_collection_literal
expected_key_in_dictionary_literal
expected_value_in_dictionary_literal
expected_colon_in_dictionary_literal
expected_rparen_expr_list
expected_rsquare_expr_list
expected_rsquare_array_expr
expected_arg_list_in_object_literal
legacy_object_literal
unknown_pound_expr
expected_expr_after_if_question
expected_colon_after_if_question
expected_expr_after_if_colon
expected_expr_after_try
expected_expr_after_await
expected_type_after_is
expected_type_after_as
string_interpolation_extra
string_interpolation_list_changing
string_interpolation_list_insert_parens
string_interpolation_label_changing
string_interpolation_remove_label
expr_keypath_expected_lparen
expr_keypath_expected_property_or_type
expr_keypath_expected_rparen
expr_keypath_expected_expr
expr_selector_expected_lparen
expr_selector_expected_method_expr
expr_selector_expected_property_expr
expr_selector_expected_rparen
expr_dynamictype_deprecated
pound_assert_disabled
pound_assert_expected_lparen
pound_assert_expected_rparen
pound_assert_expected_expression
pound_assert_expected_string_literal
expr_postfix_ifconfig_unexpectedtoken
replace_equal_with_colon_for_value
expected_attribute_name
unexpected_lparen_in_attribute
duplicate_attribute
previous_attribute
mutually_exclusive_attrs
invalid_infix_on_func
expected_in_attribute_list
type_attribute_applied_to_decl
decl_attribute_applied_to_type
attr_expected_lparen
attr_expected_rparen
attr_expected_comma
attr_expected_string_literal
attr_expected_integer_literal
attr_expected_option_such_as
attr_unknown_option
attr_missing_label
attr_expected_label
alignment_must_be_positive_integer
swift_native_objc_runtime_base_must_be_identifier
objc_runtime_name_must_be_identifier
attr_only_at_non_local_scope
projection_value_property_not_identifier
attr_access_expected_set
attr_access_expected_spi_name
attr_renamed
attr_renamed_warning
attr_name_close_match
attr_unsupported_on_target
attr_availability_platform
attr_availability_unavailable_deprecated
attr_availability_invalid_duplicate
attr_availability_unknown_platform
attr_availability_invalid_renamed
attr_availability_expected_option
attr_availability_expected_equal
attr_availability_expected_version
attr_availability_platform_agnostic_expected_option
attr_availability_platform_agnostic_expected_deprecated_version
attr_availability_platform_agnostic_infeasible_option
attr_availability_nonspecific_platform_unexpected_version
attr_availability_wildcard_in_macro
attr_availability_missing_macro_name
attr_availability_expected_colon_macro
attr_availability_unknown_version
attr_availability_duplicate
originally_defined_in_missing_rparen
originally_defined_in_unrecognized_platform
originally_defined_in_unrecognized_property
originally_defined_in_need_original_module_name
originally_defined_in_need_nonempty_module_name
originally_defined_in_need_platform_version
originally_defined_in_major_minor_only
originally_defined_in_missing_platform_name
originally_defined_in_swift_version
originally_defined_in_package_description
convention_attribute_expected_lparen
convention_attribute_expected_name
convention_attribute_expected_rparen
convention_attribute_ctype_expected_label
convention_attribute_ctype_expected_colon
convention_attribute_ctype_expected_string
convention_attribute_witness_method_expected_colon
convention_attribute_witness_method_expected_protocol
attr_objc_missing_colon
attr_objc_expected_rparen
attr_objc_empty_name
attr_dynamic_replacement_expected_rparen
attr_dynamic_replacement_expected_function
attr_dynamic_replacement_expected_for
attr_dynamic_replacement_expected_colon
attr_type_eraser_expected_type_name
attr_type_eraser_expected_rparen
attr_private_import_expected_rparen
attr_private_import_expected_sourcefile
attr_private_import_expected_sourcefile_name
attr_private_import_expected_colon
opened_attribute_expected_lparen
opened_attribute_id_value
opened_attribute_expected_rparen
effects_attribute_expect_option
attr_unowned_invalid_specifier
attr_unowned_expected_rparen
attr_warn_unused_result_removed
attr_warn_unused_result_expected_rparen
attr_specialize_missing_colon
attr_specialize_missing_comma
attr_specialize_unknown_parameter_name
attr_specialize_expected_bool_value
attr_specialize_missing_parameter_label_or_where_clause
attr_specialize_parameter_already_defined
attr_specialize_expected_partial_or_full
attr_specialize_expected_function
attr_specialize_expected_spi_name
attr_implements_expected_member_name
attr_differentiable_expected_reverse
attr_differentiable_kind_not_supported
attr_differentiable_unknown_kind
attr_differentiable_expected_parameter_list
attr_differentiable_use_wrt_not_withrespectto
attr_differentiable_expected_label
expected_colon_after_label
diff_params_clause_expected_parameter
diff_params_clause_expected_parameter_unnamed
autodiff_attr_expected_original_decl_name
sil_autodiff_expected_lsquare
sil_autodiff_expected_rsquare
sil_autodiff_expected_index_list
sil_autodiff_expected_index_list_label
sil_autodiff_expected_parameter_index
sil_autodiff_expected_result_index
sil_inst_autodiff_operand_list_expected_lbrace
sil_inst_autodiff_operand_list_expected_comma
sil_inst_autodiff_operand_list_expected_rbrace
sil_inst_autodiff_expected_differentiable_extractee_kind
sil_inst_autodiff_expected_linear_extractee_kind
sil_inst_autodiff_expected_function_type_operand
sil_inst_autodiff_expected_differentiability_witness_kind
sil_inst_autodiff_invalid_witness_generic_signature
attr_completion_handler_async_invalid_name
expected_rangle_generics_param
expected_generics_parameter_name
unexpected_class_constraint
suggest_anyobject
expected_generics_type_restriction
requires_single_equal
requires_comma
expected_requirement_delim
redundant_class_requirement
late_class_requirement
where_inside_brackets
unsupported_conditional_compilation_binary_expression
unsupported_conditional_compilation_unary_expression
unsupported_platform_condition_expression
platform_condition_expected_one_argument
unsupported_platform_runtime_condition_argument
unsupported_platform_condition_argument
unsupported_conditional_compilation_expression_type
unsupported_conditional_compilation_integer
version_component_not_number
compiler_version_too_many_components
unused_compiler_version_component
empty_version_component
compiler_version_component_out_of_range
empty_version_string
unknown_platform_condition_argument
renamed_platform_condition_argument
likely_simulator_platform_condition
avail_query_expected_condition
avail_query_expected_platform_name
avail_query_expected_version_number
avail_query_expected_rparen
avail_query_unrecognized_platform_name
avail_query_disallowed_operator
avail_query_argument_and_shorthand_mix_not_allowed
avail_query_meant_introduced
avail_query_version_comparison_not_needed
availability_query_wildcard_required
availability_must_occur_alone
pound_available_swift_not_allowed
pound_available_package_description_not_allowed
availability_query_repeated_platform
attr_requires_concurrency
unknown_syntax_entity
expected_argument_label_followed_by_closure_literal
expected_closure_literal
expected_multiple_closures_block_rbrace
decl_declared_here
kind_declared_here
implicit_member_declared_here
extended_type_declared_here
opaque_return_type_declared_here
ambiguous_member_overload_set
ambiguous_reference_to_decl
no_overloads_match_exactly_in_call
candidate_partial_match
could_not_find_value_subscript
could_not_find_tuple_member
could_not_find_value_member
could_not_find_value_member_corrected
could_not_find_value_dynamic_member_corrected
could_not_find_value_dynamic_member
cannot_infer_contextual_keypath_type_specify_root
cannot_infer_keypath_root_anykeypath_context
could_not_find_type_member
could_not_find_type_member_corrected
could_not_find_subscript_member_did_you_mean
could_not_find_subscript_member_tuple
could_not_find_subscript_member_tuple_did_you_mean_use_dot
could_not_find_enum_case
did_you_mean_raw_type
did_you_mean_generic_param_as_conformance
any_as_anyobject_fixit
expected_argument_in_contextual_member
expected_parens_in_contextual_member
expected_parens_in_contextual_member_type
expected_result_in_contextual_member
unexpected_arguments_in_enum_case
could_not_use_type_member_on_instance
could_not_use_enum_element_on_instance
could_not_use_type_member_on_protocol_metatype
could_not_use_instance_member_on_type
could_not_use_member_on_existential
candidate_inaccessible
note_candidate_inaccessible
init_candidate_inaccessible
cannot_pass_rvalue_mutating_subelement
cannot_pass_rvalue_mutating
cannot_pass_rvalue_mutating_getter_subelement
cannot_pass_rvalue_mutating_getter
expression_too_complex
value_type_comparison_with_nil_illegal_did_you_mean
value_type_comparison_with_nil_illegal
cannot_match_expr_pattern_with_value
cannot_match_expr_tuple_pattern_with_nontuple_value
cannot_match_unresolved_expr_pattern_with_value
cannot_reference_compare_types
cannot_apply_binop_to_args
cannot_apply_binop_to_same_args
cannot_apply_unop_to_arg
cannot_apply_lvalue_unop_to_subelement
cannot_apply_lvalue_unop_to_rvalue
cannot_apply_lvalue_binop_to_subelement
cannot_apply_lvalue_binop_to_rvalue
cannot_subscript_base
cannot_subscript_ambiguous_base
cannot_subscript_nil_literal
conditional_cast_from_nil
cannot_pass_rvalue_inout_subelement
cannot_pass_rvalue_inout_converted
inout_change_var_type_if_possible
cannot_pass_rvalue_inout
cannot_provide_default_value_inout
cannot_call_with_params
cannot_call_non_function_value
no_candidates_match_result_type
no_candidates_match_argument_type
cannot_infer_closure_parameter_type
cannot_infer_closure_type
cannot_infer_closure_result_type
use_of_anon_closure_param
incorrect_explicit_closure_result
unsupported_closure_attr
suggest_expected_match
suggest_partial_overloads
no_binary_op_overload_for_enum_with_payload
cannot_convert_initializer_value
cannot_convert_initializer_value_protocol
cannot_convert_initializer_value_anyobject
cannot_convert_initializer_value_nil
cannot_convert_to_return_type
cannot_convert_to_return_type_protocol
cannot_convert_return_type_to_anyobject
cannot_convert_to_return_type_nil
cannot_convert_thrown_type
cannot_throw_error_code
bad_yield_count
cannot_throw_nil
cannot_convert_raw_initializer_value
cannot_convert_raw_initializer_value_nil
cannot_convert_default_arg_value
cannot_convert_default_arg_value_protocol
cannot_convert_default_arg_value_nil
cannot_convert_argument_value
candidate_has_invalid_argument_at_position
cannot_convert_array_to_variadic
candidate_would_match_array_to_variadic
suggest_pass_elements_directly
cannot_convert_argument_value_generic
conflicting_arguments_for_generic_parameter
cannot_pass_type_to_non_ephemeral
cannot_pass_type_to_non_ephemeral_warning
cannot_use_inout_non_ephemeral
cannot_use_inout_non_ephemeral_warning
cannot_construct_dangling_pointer
cannot_construct_dangling_pointer_warning
ephemeral_pointer_argument_conversion_note
ephemeral_use_with_unsafe_pointer
ephemeral_use_string_with_c_string
ephemeral_use_array_with_unsafe_buffer
candidate_performs_illegal_ephemeral_conv
cannot_convert_argument_value_protocol
cannot_convert_argument_value_anyobject
cannot_convert_argument_value_nil
note_incompatible_argument_value_nil_at_pos
cannot_convert_condition_value
cannot_convert_condition_value_nil
cannot_yield_rvalue_by_reference_same_type
cannot_yield_rvalue_by_reference
cannot_yield_wrong_type_by_reference
cannot_convert_yield_value
cannot_convert_yield_value_protocol
cannot_convert_yield_value_nil
cannot_convert_closure_result
cannot_convert_closure_result_protocol
cannot_convert_closure_result_nil
cannot_convert_parent_type
cannot_convert_chain_result_type
generic_argument_mismatch
destructor_not_accessible
cannot_convert_array_element
cannot_convert_array_element_protocol
cannot_convert_array_element_nil
cannot_convert_dict_key
cannot_convert_dict_key_protocol
cannot_convert_dict_key_nil
cannot_convert_dict_value
cannot_convert_dict_value_protocol
cannot_convert_dict_value_nil
cannot_convert_coerce
cannot_convert_coerce_protocol
cannot_convert_coerce_nil
cannot_convert_assign
assign_protocol_conformance_fix_it
cannot_convert_assign_protocol
cannot_convert_assign_anyobject
cannot_convert_assign_nil
cannot_convert_subscript_assign
cannot_convert_subscript_assign_protocol
cannot_convert_subscript_assign_nil
cannot_convert_candidate_result_to_contextual_type
cannot_convert_sequence_element_value
cannot_convert_sequence_element_protocol
throws_functiontype_mismatch
async_functiontype_mismatch
cannot_pass_async_func_to_sync_parameter
async_inferred_from_operation
expr_keypath_no_objc_runtime
expression_unused_keypath_result
expr_keypath_non_objc_property
expr_keypath_swift3_objc_inference
expr_keypath_type_of_property
expr_keypath_generic_type
expr_keypath_not_property
expr_keypath_mutating_getter
expr_keypath_static_member
expr_keypath_enum_case
expr_keypath_empty
expr_unsupported_objc_key_path_component
expr_unsupported_objc_key_path_compound_name
expr_keypath_no_keypath_type
expr_swift_keypath_invalid_component
expr_swift_keypath_not_starting_with_type
expr_swift_keypath_not_starting_with_dot
expr_smart_keypath_value_covert_to_contextual_type
expr_swift_keypath_empty
expr_string_interpolation_outside_string
expr_keypath_subscript_index_not_hashable
expr_smart_keypath_application_type_mismatch
expr_keypath_root_type_mismatch
expr_swift_keypath_anyobject_root
expr_keypath_multiparam_func_conversion
expr_deprecated_writable_keypath
expr_selector_no_objc_runtime
expr_selector_module_missing
expr_selector_no_declaration
expr_selector_not_method
expr_selector_expected_property
expr_selector_not_property
expr_selector_expected_method
expr_selector_add_modifier
expr_selector_property_not_settable
expr_selector_property_setter_inaccessible
expr_selector_cannot_be_used
expr_selector_not_objc
make_decl_objc
expr_selector_swift3_objc_inference
selector_literal_invalid
selector_literal_undeclared
selector_literal_deprecated
selector_literal_deprecated_suggest
selector_construction_suggest
selector_construction_suppress_warning
cannot_return_value_from_void_func
add_return_type_note
sema_no_import
sema_no_import_target
sema_no_import_repl
sema_no_import_no_sdk
sema_no_import_no_sdk_xcrun
sema_import_current_module
sema_import_current_module_with_file
sema_opening_import
serialization_load_failed
module_interface_build_failed
module_interface_build_failed_mismatching_compiler
serialization_malformed_module
serialization_module_too_new
serialization_module_language_version_mismatch
serialization_module_too_old
serialization_missing_single_dependency
serialization_missing_dependencies
serialization_circular_dependency
serialization_missing_underlying_module
serialization_name_mismatch
serialization_name_mismatch_repl
serialization_target_incompatible
serialization_target_incompatible_repl
serialization_target_too_new
serialization_target_too_new_repl
serialization_fatal
serialization_misc_version
serialization_compatibility_version_mismatch
serialization_invalid_decl
serialization_allowing_invalid_decl
serialization_error_type
serialization_allowing_error_type
serialization_malformed_sourceinfo
reserved_member_name
invalid_redecl_by_optionality_note
invalid_redecl
invalid_redecl_init
invalid_redecl_implicit
invalid_redecl_swift5_warning
invalid_redecl_prev
invalid_redecl_implicit_wrapper
ambiguous_type_base
invalid_member_type
invalid_member_type_suggest
invalid_member_reference
ambiguous_member_type
no_module_type
ambiguous_module_type
use_nonmatching_operator
unsupported_recursion_in_associated_type_reference
broken_associated_type_witness
unspaced_binary_operator_fixit
unspaced_binary_operator
unspaced_binary_operators_candidate
unspaced_unary_operator
nonexistent_power_operator
cannot_find_in_scope
cannot_find_in_scope_corrected
confusable_character
single_confusable_character
cannot_find_type_in_scope
cannot_find_type_in_scope_did_you_mean
note_typo_candidate_implicit_member
note_remapped_type
note_module_as_type
use_unknown_object_literal_protocol
object_literal_default_type_missing
object_literal_resolve_import
use_local_before_declaration
unsupported_existential_type
decl_does_not_exist_in_module
imported_decl_is_wrong_kind
imported_decl_is_wrong_kind_typealias
ambiguous_decl_in_module
module_not_testable
module_not_compiled_for_private_import
import_implementation_cannot_be_exported
module_not_compiled_with_library_evolution
cross_import_added
module_loaded
ambiguous_operator_decls
found_this_operator_decl
operator_redeclared
previous_operator_decl
declared_operator_without_operator_decl
declared_unary_op_without_attribute
unary_op_missing_prepos_attribute
unary_operator_declaration_here
invalid_arg_count_for_operator
operator_in_local_scope
nonstatic_operator_in_nominal
nonstatic_operator_in_extension
nonfinal_operator_in_class
operator_in_unrelated_type
ambiguous_precedence_groups
found_this_precedence_group
unknown_precedence_group
precedence_group_cycle
higher_than_precedence_group_cycle
precedence_group_lower_within_module
precedence_group_redeclared
previous_precedence_group_decl
circular_reference_through_precedence_group
tuple_types_not_convertible_nelts
tuple_types_not_convertible
invalid_force_unwrap
invalid_optional_chain
if_expr_cases_mismatch
did_not_call_function_value
did_not_call_function
did_not_call_method
init_not_instance_member_use_assignment
init_not_instance_member
super_initializer_not_in_initializer
isa_is_always_true
isa_is_foreign_check
checked_cast_not_supported
checked_cast_not_supported_coerce_instead
conditional_downcast_coercion
literal_conditional_downcast_to_coercion
forced_downcast_noop
forced_downcast_coercion
downcast_same_type
conditional_downcast_same_type
is_expr_same_type
downcast_to_unrelated
downcast_to_unrelated_fixit
optional_chain_noop
optional_chain_isnt_chaining
pattern_in_expr
note_call_to_operator
note_call_to_func
note_call_to_subscript
note_call_to_initializer
note_init_parameter
missing_nullary_call
optional_not_unwrapped
unwrap_with_default_value
unwrap_with_force_value
unwrap_iuo_initializer
unwrap_with_guard
optional_base_not_unwrapped
invalid_optional_infered_keypath_root
optional_base_chain
optional_base_remove_optional_for_keypath_root
optional_keypath_application_base
optional_key_path_root_base_chain
optional_key_path_root_base_unwrap
missing_unwrap_optional_try
cannot_coerce_to_type
missing_forced_downcast
missing_optional_downcast
coercion_may_fail_warning
missing_explicit_conversion
missing_address_of
missing_address_of_yield
extraneous_address_of
extra_address_of
extra_address_of_unsafepointer
cannot_pass_inout_arg_to_subscript
incorrect_property_wrapper_reference
incorrect_property_wrapper_reference_member
missing_init_on_metatype_initialization
extra_argument_labels
missing_argument_labels
wrong_argument_labels
argument_out_of_order_named_named
argument_out_of_order_named_unnamed
argument_out_of_order_unnamed_named
argument_out_of_order_unnamed_unnamed
argument_out_of_order_binary_op
candidate_expected_different_labels
member_shadows_function
member_shadows_global_function
instance_member_use_on_type
instance_member_in_initializer
instance_member_in_default_parameter
missing_argument_named
missing_argument_positional
missing_arguments_in_call
extra_argument_named
extra_argument_positional
extra_arguments_in_call
extra_argument_to_nullary_call
extra_trailing_closure_in_call
trailing_closure_bad_param
unlabeled_trailing_closure_deprecated
decl_multiple_defaulted_closure_parameters
candidate_with_extraneous_args
no_accessible_initializers
non_nominal_no_initializers
unbound_generic_parameter
unbound_generic_parameter_cast
archetype_declared_in_type
unbound_generic_parameter_explicit_fix
invalid_dynamic_callable_type
missing_dynamic_callable_kwargs_method
invalid_dynamic_member_lookup_type
invalid_dynamic_member_subscript
string_index_not_integer
string_index_not_integer_note
invalid_c_function_pointer_conversion_expr
c_function_pointer_from_method
c_function_pointer_from_generic_function
invalid_autoclosure_forwarding
invalid_differentiable_function_conversion_expr
invalid_differentiable_function_conversion_parameter
invalid_autoclosure_pointer_conversion
missing_initializer_def
pound_warning
pound_error
operator_not_func
redefining_builtin_operator
attribute_requires_operator_identifier
attribute_requires_single_argument
nominal_type_not_attribute
mutating_invalid_global_scope
mutating_invalid_classes
functions_mutating_and_not
static_functions_not_mutating
modify_mutatingness_differs_from_setter
transparent_in_protocols_not_supported
transparent_in_classes_not_supported
invalid_iboutlet
iboutlet_nonobjc_class
iboutlet_nonobjc_protocol
iboutlet_nonobject_type
iboutlet_only_mutable
iboutlet_non_optional
note_make_optional
note_make_implicitly_unwrapped_optional
invalid_ibdesignable_extension
invalid_ibinspectable
invalid_ibaction_decl
invalid_ibaction_result
invalid_ibaction_argument_count
invalid_ibaction_argument_count_exact
invalid_ibaction_argument_count_max
ibsegueaction_objc_method_family
fixit_rename_in_swift
fixit_rename_in_objc
no_objc_tagged_pointer_not_class_protocol
swift_native_objc_runtime_base_not_on_root_class
cdecl_not_at_top_level
cdecl_empty_name
cdecl_throws
cdecl_async
attr_methods_only
access_control_in_protocol
access_control_in_protocol_detail
access_control_setter
access_control_setter_read_only
access_control_setter_more
access_control_setter_redundant
access_control_ext_member_more
access_control_ext_member_redundant
access_control_ext_requirement_member_more
access_control_extension_more
access_control_extension_open
access_control_open_bad_decl
invalid_decl_attribute
invalid_decl_modifier
attribute_does_not_apply_to_type
optional_attribute_non_protocol
optional_attribute_non_objc_protocol
optional_attribute_missing_explicit_objc
objcmembers_attribute_nonclass
optional_attribute_initializer
unavailable_method_non_objc_protocol
missing_in_class_init_1
missing_in_class_init_2
missing_in_class_init_3plus
requires_stored_property_inits_here
class_without_init
note_no_in_class_init_1
note_no_in_class_init_2
note_no_in_class_init_3plus
missing_unimplemented_init_runtime
missing_undefined_runtime
expr_dynamic_lookup_swift3_objc_inference
inherited_default_value_not_in_designated_constructor
inherited_default_value_used_in_non_overriding_constructor
corresponding_param_not_defaulted
inherited_default_param_here
option_set_zero_constant
option_set_empty_set_init
originally_defined_in_dupe_platform
originally_definedin_topleve_decl
originally_definedin_need_available
originally_definedin_must_after_available_version
alignment_not_power_of_two
indirect_case_without_payload
indirect_case_in_indirect_enum
enum_frozen_nonpublic
getset_init
effectful_not_representable_objc
unimplemented_static_var
observingprop_requires_initializer
global_requires_initializer
static_requires_initializer
static_requires_initializer_add_init
pattern_type_access
pattern_type_access_warn
pattern_type_access_inferred
pattern_type_access_inferred_warn
pattern_type_not_usable_from_inline
pattern_type_not_usable_from_inline_warn
pattern_type_not_usable_from_inline_frozen
pattern_type_not_usable_from_inline_inferred
pattern_type_not_usable_from_inline_inferred_warn
pattern_type_not_usable_from_inline_inferred_frozen
pattern_binds_no_variables
variable_bound_by_no_pattern
optional_ambiguous_case_ref
optional_fixit_ambiguous_case_ref
optional_fixit_ambiguous_case_ref_switch
type_fixit_optional_ambiguous_case_ref
type_fixit_optional_ambiguous_case_ref_switch
nscoding_unstable_mangled_name
unstable_mangled_name_add_objc_new
unstable_mangled_name_add_objc
unsupported_type_nested_in_generic_function
unsupported_type_nested_in_generic_closure
unsupported_type_nested_in_protocol
unsupported_type_nested_in_protocol_extension
unsupported_nested_protocol
where_nongeneric_ctx
where_nongeneric_toplevel
unable_to_convert_generic_swift_types
type_alias_underlying_type_access
type_alias_underlying_type_access_warn
type_alias_underlying_type_not_usable_from_inline
type_alias_underlying_type_not_usable_from_inline_warn
subscript_type_access
subscript_type_access_warn
subscript_type_usable_from_inline
subscript_type_usable_from_inline_warn
function_type_access
function_type_spi
function_type_access_warn
function_type_usable_from_inline
function_type_usable_from_inline_warn
spi_attribute_on_non_public
spi_attribute_on_protocol_requirement
spi_attribute_on_frozen_stored_properties
spi_attribute_on_import_of_public_module
opaque_type_invalid_constraint
inferred_opaque_type
non_nominal_extension
composition_in_extended_type
composition_in_extended_type_alternative
extension_access_with_conformances
extension_metatype
extension_specialization
extension_stored_property
extension_stored_property_fixit
extension_nongeneric_trailing_where
extension_protocol_inheritance
objc_generic_extension_using_type_parameter
objc_generic_extension_using_type_parameter_here
objc_generic_extension_using_type_parameter_try_objc
invalid_nominal_extension
invalid_nominal_extension_rewrite
type_does_not_conform
cannot_use_nil_with_this_type
type_cannot_conform_to_nsobject
use_of_equal_instead_of_equality
type_cannot_conform
only_concrete_types_conform_to_protocols
required_by_opaque_return
required_by_decl
required_by_decl_ref
protocol_does_not_conform_static
protocol_derivation_is_broken
type_does_not_inherit
type_does_not_inherit_or_conform_requirement
types_not_equal
type_does_not_conform_owner
type_does_not_conform_in_decl_ref
contextual_member_ref_on_protocol_requires_self_requirement
missing_sametype_requirement_on_self
type_does_not_conform_anyobject_in_decl_ref
type_does_not_conform_decl_owner
type_does_not_conform_anyobject_decl_owner
type_does_not_conform_in_opaque_return
types_not_equal_decl
types_not_equal_in_decl_ref
types_not_inherited_decl
types_not_inherited_in_decl_ref
where_requirement_failure_one_subst
where_requirement_failure_both_subst
requirement_implied_by_conditional_conformance
wrapped_type_satisfies_requirement
candidate_types_conformance_requirement
candidate_types_equal_requirement
candidate_types_inheritance_requirement
types_not_equal_requirement
type_is_not_a_class
anyobject_requirement
non_class_cannot_conform_to_class_protocol
cf_class_cannot_conform_to_objc_protocol
objc_runtime_visible_cannot_conform_to_objc_protocol
objc_generics_cannot_conditionally_conform
objc_protocol_cannot_have_conditional_conformance
objc_protocol_in_generic_extension
conditional_conformances_cannot_imply_conformances
note_explicitly_state_conditional_conformance_different
note_explicitly_state_conditional_conformance_relaxed
note_explicitly_state_conditional_conformance_same
note_explicitly_state_conditional_conformance_noneditor
protocol_has_missing_requirements
protocol_has_missing_requirements_versioned
requirement_restricts_self
witness_argument_name_mismatch
witness_initializer_not_required
witness_initializer_failability
witness_self_non_subtype
witness_self_same_type
witness_self_weaken_same_type
witness_requires_dynamic_self
witness_requires_class_implementation
witness_not_accessible_proto
witness_not_accessible_type
type_witness_not_accessible_proto
type_witness_not_accessible_type
witness_not_usable_from_inline
witness_not_usable_from_inline_warn
type_witness_objc_generic_parameter
witness_fix_access
witness_move_to_another_extension
assoc_type_default_conformance_failed
assoc_type_default_here
protocol_access
protocol_access_warn
protocol_usable_from_inline
protocol_usable_from_inline_warn
protocol_property_must_be_computed_var
protocol_property_must_be_computed
inherited_protocol_does_not_conform
no_witnesses
missing_witnesses_general
ambiguous_witnesses
ambiguous_witnesses_wrong_name
no_witnesses_type
default_associated_type_req_fail
associated_type_access
associated_type_access_warn
associated_type_not_usable_from_inline
associated_type_not_usable_from_inline_warn
bad_associated_type_deduction
associated_type_deduction_witness_failed
associated_type_witness_conform_impossible
associated_type_witness_inherit_impossible
ambiguous_associated_type_deduction
associated_type_deduction_witness
associated_type_deduction_default
ambiguous_witnesses_type
protocol_witness_exact_match
protocol_witness_renamed
protocol_witness_kind_conflict
protocol_witness_type_conflict
protocol_witness_missing_requirement
protocol_witness_optionality_conflict
err_protocol_witness_optionality
warn_protocol_witness_optionality
protocol_witness_static_conflict
protocol_witness_prefix_postfix_conflict
protocol_witness_mutation_modifier_conflict
protocol_witness_settable_conflict
protocol_witness_rethrows_conflict
protocol_witness_rethrows_by_conformance_conflict
protocol_witness_throws_conflict
protocol_witness_not_objc
protocol_witness_enum_case_payload
protocol_witness_type
protocol_witness_nonconform_type
protocol_witness_circularity
protocol_conformance_here
declared_protocol_conformance_here
witness_unavailable
redundant_conformance
redundant_conformance_conditional
redundant_conformance_adhoc
redundant_conformance_adhoc_conditional
redundant_conformance_witness_ignored
req_near_match
optional_req_nonobjc_near_match_add_objc
req_near_match_move
req_near_match_nonobjc
req_near_match_access
missing_append_interpolation
append_interpolation_static
append_interpolation_void_or_discardable
append_interpolation_access_control
assoc_type_outside_of_protocol
typealias_outside_of_protocol
objc_protocol_inherits_non_objc_protocol
protocol_where_clause_self_requirement
invalid_protocol_composition_member
protocol_composition_one_class
requires_conformance_nonprotocol
requires_conformance_nonprotocol_fixit
requires_not_suitable_archetype
requires_no_same_type_archetype
requires_generic_params_made_equal
requires_generic_param_made_equal_to_concrete
recursive_decl_reference
recursive_same_type_constraint
recursive_superclass_constraint
requires_generic_param_same_type_does_not_conform
requires_same_concrete_type
redundant_conformance_constraint
redundant_conformance_here
unsupported_recursive_requirements
same_type_conflict
redundant_same_type_to_concrete
same_type_redundancy_here
conflicting_superclass_constraints
conflicting_superclass_constraint
redundant_superclass_constraint
superclass_redundancy_here
conflicting_layout_constraints
conflicting_layout_constraint
redundant_layout_constraint
previous_layout_constraint
redundant_same_type_constraint
previous_same_type_constraint
inherited_associated_type_redecl
typealias_override_associated_type
associated_type_override_typealias
associated_type_objc
generic_param_access
generic_param_access_warn
generic_param_usable_from_inline
generic_param_usable_from_inline_warn
override_multiple_decls_base
override_multiple_decls_arg_mismatch
overridden_near_match_here
override_decl_extension
overridden_here
overridden_here_can_be_objc
missing_override
missing_override_warn
multiple_override
multiple_override_prev
override_unavailable
suggest_removing_override
override_less_available
override_accessor_less_available
override_let_property
override_not_accessible
override_of_non_open
method_does_not_override
property_does_not_override
subscript_does_not_override
initializer_does_not_override
failable_initializer_override
nonfailable_initializer_override_here
property_override_here
subscript_override_here
convenience_init_override_here
override_type_mismatch_with_fixits
override_type_mismatch_with_fixits_init
override_nonclass_decl
nonoverride_wrong_decl_context
nonoverride_and_override_attr
override_property_type_mismatch
override_with_stored_property
override_with_stored_property_warn
observing_readonly_property
override_mutable_with_readonly_property
override_argument_name_mismatch
override_ownership_mismatch
override_dynamic_self_mismatch
override_class_declaration_in_extension
override_with_more_effects
override_throws_objc
satisfy_throws_objc
override_optional_mismatch
override_optional_result_mismatch
override_unnecessary_IUO
override_unnecessary_result_IUO
override_unnecessary_IUO_remove
override_unnecessary_IUO_use_strict
override_unnecessary_IUO_silence
override_mutable_covariant_property
override_mutable_covariant_subscript
static_decl_already_final
open_decl_cannot_be_final
implicitly_final_cannot_be_open
implicitly_final_cannot_be_open_swift4
override_swift3_objc_inference
override_method_different_generic_sig
duplicate_inheritance
duplicate_anyobject_class_inheritance
inheritance_from_protocol_with_superclass
anyobject_class_inheritance_deprecated
multiple_inheritance
inheritance_from_non_protocol_or_class
inheritance_from_non_protocol
superclass_not_first
superclass_not_open
superclass_here
superclass_of_open_not_open
inheritance_from_final_class
inheritance_from_unspecialized_objc_generic_class
inheritance_from_class_with_missing_vtable_entries
inheritance_from_class_with_missing_vtable_entries_versioned
inheritance_from_cf_class
inheritance_from_objc_runtime_visible_class
enum_case_access
enum_case_access_warn
enum_case_usable_from_inline
enum_case_usable_from_inline_warn
enum_stored_property
multiple_enum_raw_types
raw_type_not_first
raw_type_not_literal_convertible
enum_raw_type_not_equatable
enum_raw_type_nonconforming_and_nonsynthable
enum_declares_rawrep_with_raw_type
enum_raw_type_access
enum_raw_type_access_warn
enum_raw_type_not_usable_from_inline
enum_raw_type_not_usable_from_inline_warn
empty_enum_raw_type
enum_raw_value_without_raw_type
enum_with_raw_type_case_with_argument
enum_raw_type_here
objc_enum_no_raw_type
objc_enum_raw_type_not_integer
enum_non_integer_raw_value_auto_increment
enum_non_integer_convertible_raw_type_no_value
enum_raw_value_not_unique
enum_raw_value_magic_literal
enum_raw_value_used_here
enum_raw_value_incrementing_from_here
enum_raw_value_incrementing_from_zero
construct_raw_representable_from_unwrapped_value
decl_from_hidden_module
decl_from_hidden_module_warn
conformance_from_implementation_only_module
assoc_conformance_from_implementation_only_module
unexportable_clang_function_type
cxx_class_instantiation_failed
warn_implementation_only_conflict
implementation_only_conflict_here
warn_public_import_of_private_module
implementation_only_decl_non_override
implementation_only_override_changed_type
implementation_only_override_without_attr
implementation_only_override_import_without_attr
cannot_synthesize_init_in_extension_of_nonfinal
cannot_synthesize_in_crossfile_extension
broken_additive_arithmetic_requirement
broken_case_iterable_requirement
broken_raw_representable_requirement
broken_comparable_requirement
broken_equatable_requirement
broken_hashable_requirement
broken_hashable_no_hasher
broken_errortype_requirement
broken_int_hashable_conformance
broken_int_integer_literal_convertible_conformance
no_less_than_overload_for_int
no_equal_overload_for_int
broken_coding_key_requirement
broken_encodable_requirement
broken_decodable_requirement
broken_differentiable_requirement
differentiable_nondiff_type_implicit_noderivative_fixit
differentiable_immutable_wrapper_implicit_noderivative_fixit
differentiable_let_property_implicit_noderivative_fixit
codable_extraneous_codingkey_case_here
codable_non_conforming_property_here
codable_non_decoded_property_here
codable_codingkeys_type_is_not_an_enum_here
codable_codingkeys_type_does_not_conform_here
decodable_no_super_init_here
decodable_super_init_not_designated_here
decodable_inaccessible_super_init_here
decodable_super_init_is_failable_here
decodable_suggest_overriding_init_here
codable_suggest_overriding_init_here
codable_enum_duplicate_case_name_here
codable_enum_duplicate_parameter_name_here
decodable_property_will_not_be_decoded
decodable_property_init_or_codingkeys_implicit
decodable_property_init_or_codingkeys_explicit
decodable_make_property_mutable
missing_member_type_conformance_prevents_synthesis
automatic_protocol_synthesis_unsupported
comparable_synthesis_raw_value_not_allowed
dynamic_self_non_method
dynamic_self_invalid
dynamic_self_in_mutable_property
dynamic_self_in_stored_property
dynamic_self_in_mutable_subscript
dynamic_self_invalid_property
dynamic_self_invalid_subscript
dynamic_self_invalid_method
dynamic_self_stored_property_init
dynamic_self_default_arg
attr_only_one_decl_kind
attr_not_on_variadic_parameters
attr_not_on_subscript_parameters
attr_ambiguous_reference_to_decl
override_final
override_static
member_cannot_be_final
final_not_allowed_here
final_not_on_accessors
override_rethrows_with_non_rethrows
rethrows_without_throwing_parameter
override_reasync_with_non_reasync
reasync_without_async_parameter
autoclosure_function_type
invalid_autoclosure_and_convention_attributes
autoclosure_function_input_nonunit
escaping_non_function_parameter
escaping_optional_type_argument
non_ephemeral_non_pointer_type
attr_NSManaged_not_instance_member
attr_NSManaged_not_stored
attr_NSManaged_let_property
attr_NSManaged_initial_value
attr_NSManaged_NSCopying
attr_NSManaged_method_body
nscopying_only_on_class_properties
nscopying_only_mutable
nscopying_only_stored_property
nscopying_doesnt_conform
attr_ApplicationMain_not_ApplicationDelegate
attr_generic_ApplicationMain_not_supported
attr_ApplicationMain_multiple
attr_ApplicationMain_with_script
attr_ApplicationMain_script_here
attr_MainType_without_main
lazy_not_on_let
lazy_not_on_computed
lazy_on_already_lazy_global
lazy_not_in_protocol
lazy_requires_initializer
lazy_requires_single_var
lazy_not_strong
lazy_var_storage_access
attr_for_debugger_support_only
implements_attr_protocol_lacks_member
implements_attr_non_protocol_type
implements_attr_protocol_not_conformed_to
differentiable_attr_overload_not_found
differentiable_attr_duplicate
differentiable_attr_duplicate_note
differentiable_attr_function_not_same_type_context
differentiable_attr_derivative_not_function
differentiable_attr_class_derivative_not_final
differentiable_attr_invalid_access
differentiable_attr_protocol_req_where_clause
differentiable_attr_class_member_dynamic_self_result_unsupported
differentiable_attr_nonfinal_class_init_unsupported
differentiable_attr_empty_where_clause
differentiable_attr_where_clause_for_nongeneric_original
differentiable_attr_layout_req_unsupported
overriding_decl_missing_differentiable_attr
protocol_witness_missing_differentiable_attr_invalid_context
derivative_attr_expected_result_tuple
derivative_attr_invalid_result_tuple_value_label
derivative_attr_invalid_result_tuple_func_label
derivative_attr_result_value_not_differentiable
derivative_attr_result_func_type_mismatch
derivative_attr_result_func_type_mismatch_note
derivative_attr_result_func_original_note
derivative_attr_not_in_same_file_as_original
derivative_attr_original_stored_property_unsupported
derivative_attr_class_member_dynamic_self_result_unsupported
derivative_attr_nonfinal_class_init_unsupported
derivative_attr_unsupported_accessor_kind
derivative_attr_class_setter_unsupported
derivative_attr_protocol_requirement_unsupported
derivative_attr_original_already_has_derivative
derivative_attr_duplicate_note
derivative_attr_access_level_mismatch
derivative_attr_fix_access
derivative_attr_static_method_mismatch_original
derivative_attr_static_method_mismatch_original_note
derivative_attr_static_method_mismatch_fix
transpose_attr_invalid_linearity_parameter_or_result
transpose_attr_overload_not_found
transpose_attr_cannot_use_named_wrt_params
transpose_attr_wrt_self_must_be_static
transpose_attr_wrt_self_self_type_mismatch_note
transpose_attr_static_method_mismatch_original
transpose_attr_static_method_mismatch_original_note
transpose_attr_static_method_mismatch_fix
autodiff_attr_original_decl_ambiguous
autodiff_attr_original_decl_ambiguous_candidate
autodiff_attr_original_decl_none_valid
autodiff_attr_original_decl_invalid_kind
autodiff_attr_original_decl_missing_accessor
autodiff_attr_original_decl_type_mismatch
autodiff_attr_original_decl_not_same_type_context
autodiff_attr_original_void_result
autodiff_attr_original_multiple_semantic_results
autodiff_attr_result_not_differentiable
autodiff_attr_opaque_result_type_unsupported
diff_function_no_parameters
diff_params_clause_param_name_unknown
diff_params_clause_self_instance_method_only
diff_params_clause_self_must_be_first
diff_params_clause_params_not_original_order
diff_params_clause_param_index_out_of_range
diff_params_clause_no_inferred_parameters
diff_params_clause_cannot_diff_wrt_inout_parameter
diff_params_clause_param_not_differentiable
attr_completion_handler_async_handler_not_func
note_attr_function_declared_async
note_attr_completion_function_must_return_void
note_attr_completion_handler_async_type_is_not_function
note_attr_completion_handler_async_handler_attr_req
attr_completion_handler_async_handler_out_of_range
attr_completion_handler_async_ambiguous_function
attr_completion_handler_async_no_suitable_function
warn_use_async_alternative
found_candidate
found_candidate_type
no_MaxBuiltinFloatType_found
no_member_of_module
super_with_no_base_class
bad_init_ref_base
init_delegation_outside_initializer
init_delegates_and_chains
init_delegation_or_chain
delegating_convenience_super_init
delegating_designated_init
delegating_designated_init_in_extension
delegation_here
chain_convenience_init
delegate_chain_nonoptional_to_optional
init_force_unwrap
init_propagate_failure
delegate_chain_nonoptional_to_optional_try
init_delegate_force_try
init_delegation_nested
convenience_init_here
designated_init_in_extension
cfclass_designated_init_in_extension
enumstruct_convenience_init
nonclass_convenience_init
cfclass_convenience_init
dynamic_construct_class
note_nonrequired_initializer
construct_protocol_value
construct_protocol_by_name
unknown_binop
non_associative_adjacent_operators
unordered_adjacent_operators
missing_builtin_precedence_group
nan_comparison
nan_comparison_without_isnan
nan_comparison_both_nan
try_rhs
try_if_rhs_noncovering
try_assign_rhs_noncovering
broken_bool
inject_forced_downcast
forced_to_conditional_downcast
silence_inject_forced_downcast
conditional_downcast_foreign
note_explicitly_compare_cftypeid
optional_used_as_boolean
integer_used_as_boolean
interpolation_missing_proto
interpolation_broken_proto
object_literal_broken_proto
discard_expr_outside_of_assignment
discard_expr_void_result_redundant
collection_literal_heterogeneous
collection_literal_empty
unresolved_member_no_inference
cannot_infer_base_of_unresolved_member
unresolved_nil_literal
cannot_force_unwrap_nil_literal
type_of_expression_is_ambiguous
failed_to_produce_diagnostic
missing_protocol
nil_literal_broken_proto
builtin_integer_literal_broken_proto
integer_literal_broken_proto
builtin_float_literal_broken_proto
float_literal_broken_proto
builtin_boolean_literal_broken_proto
boolean_literal_broken_proto
builtin_unicode_scalar_literal_broken_proto
unicode_scalar_literal_broken_proto
builtin_extended_grapheme_cluster_literal_broken_proto
extended_grapheme_cluster_literal_broken_proto
builtin_string_literal_broken_proto
string_literal_broken_proto
should_use_dictionary_literal
meant_dictionary_lit
should_use_empty_dictionary_literal
type_is_not_dictionary
cannot_explicitly_specialize_generic_function
not_a_generic_definition
not_a_generic_type
type_parameter_count_mismatch
generic_type_requires_arguments
descriptive_generic_type_declared_here
placeholder_type_not_allowed
use_of_void_pointer
ambiguous_decl_ref
ambiguous_operator_ref
ambiguous_because_of_trailing_closure
partial_application_of_function_invalid
partial_application_of_function_invalid_swift4
self_assignment_var
self_assignment_prop
property_use_in_closure_without_explicit_self
method_call_in_closure_without_explicit_self
note_capture_self_explicitly
note_reference_self_explicitly
note_other_self_capture
note_self_captured_weakly
implicit_use_of_self_in_closure
recursive_accessor_reference
recursive_accessor_reference_silence
store_in_willset
value_of_module_type
value_of_metatype_type
add_parens_to_type
add_self_to_type
fix_unqualified_access_member
fix_unqualified_access_top_level
fix_unqualified_access_top_level_multi
warn_deprecated_conditional_conformance_outer_access
fix_deprecated_conditional_conformance_outer_access
unsupported_special_decl_ref
bitcasting_away_noescape
bitcasting_to_change_function_rep
bitcasting_to_downcast
bitcasting_is_no_op
bitcasting_to_change_pointer_kind
bitcasting_to_change_pointee_type
bitcasting_to_give_type_to_raw_pointer
bitcast_assume_memory_rebound
bitcast_bind_memory
bitcasting_for_number_bit_pattern_init
bitcasting_for_number_bit_pattern_property
bitcasting_to_change_from_unsized_to_sized_int
use_of_qq_on_non_optional_value
nonoptional_compare_to_nil
optional_check_nonoptional
optional_check_promotion
optional_pattern_match_promotion
optional_to_any_coercion
iuo_to_any_coercion
iuo_to_any_coercion_note
iuo_to_any_coercion_note_func_result
default_optional_to_any
force_optional_to_any
silence_optional_to_any
debug_description_in_string_interpolation_segment
silence_debug_description_in_interpolation_segment_call
noescape_parameter
generic_parameters_always_escaping
passing_noattrfunc_to_attrfunc
converting_noespace_param_to_generic_type
assigning_noattrfunc_to_attrfunc
general_noattrfunc_to_attr
converting_noattrfunc_to_type
converting_func_loses_global_actor
capture_across_type_decl
reference_to_invalid_decl
jump_out_of_defer
defer_stmt_at_block_end
return_invalid_outside_func
return_expr_missing
return_non_failable_init
make_init_failable
return_init_non_nil
implicit_async_super_init
if_always_true
while_always_true
guard_always_succeeds
expression_unused_closure
expression_unused_function
expression_unused_lvalue
expression_unused_result_call
expression_unused_result_operator
expression_unused_result_unknown
expression_unused_result
expression_unused_init_result
expression_unused_optional_try
expression_unused_selector_result
expression_unused_literal
assignment_lhs_not_lvalue
assignment_lhs_is_apply_expression
assignment_lhs_is_immutable_variable
assignment_lhs_is_immutable_property
assignment_subscript_has_immutable_base
assignment_dynamic_property_has_immutable_base
assignment_bang_has_immutable_subcomponent
candidate_is_not_assignable
change_to_mutating
masked_mutable_property
assignment_let_property_delegating_init
label_shadowed
break_outside_loop
unlabeled_break_outside_loop
continue_outside_loop
continue_not_in_this_stmt
unresolved_label
unresolved_label_corrected
foreach_sequence_does_not_conform_to_expected_protocol
no_match_operator
fallthrough_outside_switch
fallthrough_from_last_case
fallthrough_into_case_with_var_binding
unnecessary_cast_over_optionset
mutability_mismatch_multiple_pattern_list
type_mismatch_multiple_pattern_list
type_mismatch_fallthrough_pattern_list
unknown_case_must_be_catchall
unknown_case_where_clause
unknown_case_multiple_patterns
unknown_case_must_be_last
where_on_one_item
add_where_newline
duplicate_where
trailing_closure_requires_parens
opaque_type_var_no_init
opaque_type_no_underlying_type_candidates
opaque_type_mismatched_underlying_type_candidates
opaque_type_underlying_type_candidate_here
opaque_type_self_referential_underlying_type
opaque_type_var_no_underlying_type
cannot_infer_type_for_pattern
refutable_pattern_requires_initializer
var_pattern_didnt_bind_variables
iflet_pattern_matching
iflet_implicitly_unwraps
type_pattern_missing_is
pattern_type_mismatch_context
tuple_pattern_in_non_tuple_context
found_one_pattern_for_several_associated_values
converting_tuple_into_several_associated_values
converting_several_associated_values_into_tuple
closure_argument_list_tuple
closure_argument_list_missing
closure_tuple_parameter_destructuring
closure_tuple_parameter_destructuring_implicit
single_tuple_parameter_mismatch_special
single_tuple_parameter_mismatch_normal
cannot_convert_single_tuple_into_multiple_arguments
enum_element_pattern_assoc_values_mismatch
enum_element_pattern_assoc_values_remove
tuple_pattern_length_mismatch
tuple_pattern_label_mismatch
enum_element_pattern_member_not_found
optional_element_pattern_not_valid_type
condition_optional_element_pattern_not_valid_type
enum_element_pattern_not_member_of_enum
ambiguous_enum_pattern_type
type_inferred_to_undesirable_type
type_inferred_to_uninhabited_type
type_inferred_to_uninhabited_tuple_type
add_explicit_type_annotation_to_silence
unowned_assignment_immediate_deallocation
unowned_assignment_requires_strong
isa_collection_downcast_pattern_value_unimplemented
try_unhandled
throwing_call_unhandled
tryless_throwing_call_unhandled
throw_in_nonthrowing_function
throwing_call_in_rethrows_function
tryless_throwing_call_in_rethrows_function
throw_in_rethrows_function
because_rethrows_argument_throws
because_rethrows_default_argument_throws
because_rethrows_conformance_throws
throwing_call_in_nonthrowing_autoclosure
tryless_throwing_call_in_nonthrowing_autoclosure
throw_in_nonthrowing_autoclosure
try_unhandled_in_nonexhaustive_catch
throwing_call_in_nonexhaustive_catch
tryless_throwing_call_in_nonexhaustive_catch
throw_in_nonexhaustive_catch
throwing_op_in_illegal_context
throw_in_illegal_context
throwing_operator_without_try
throwing_interpolation_without_try
throwing_call_without_try
throwing_async_let_without_try
throwing_prop_access_without_try
throwing_subscript_access_without_try
note_forgot_try
note_error_to_optional
note_disable_error_propagation
no_throw_in_try
no_throw_in_do_with_catch
async_expr_without_await
async_access_without_await
async_call_without_await_in_autoclosure
async_call_without_await_in_async_let
no_async_in_await
async_call_in_illegal_context
await_in_illegal_context
async_in_nonasync_function
note_add_async_to_function
note_add_asynchandler_to_function
note_add_nonisolated_to_decl
note_add_globalactor_to_function
not_objc_function_async
not_objc_function_type_async
actor_isolated_objc
protocol_witness_async_conflict
async_autoclosure_nonasync_function
async_not_let
async_let_not_local
async_let_not_initialized
async_let_no_variables
async_let_without_await
async_let_in_illegal_context
asynchandler_non_func
asynchandler_returns_value
asynchandler_throws
asynchandler_async
asynchandler_inout_parameter
asynchandler_noescape_closure_parameter
asynchandler_mutating
asynchandler_removed
objc_ambiguous_async_convention
objc_ambiguous_async_convention_candidate
async_objc_dynamic_self
actor_inheritance
actor_isolated_non_self_reference
actor_isolated_self_independent_context
actor_isolated_inout_state
actor_isolated_mutating_func
actor_isolated_global_actor_context
global_actor_from_instance_actor_context
global_actor_from_other_global_actor_context
global_actor_from_nonactor_context
actor_isolated_call
actor_isolated_call_decl
actor_isolated_partial_apply
concurrent_access_local
actor_isolated_from_concurrent_closure
actor_isolated_from_concurrent_function
actor_isolated_from_async_let
actor_isolated_keypath_component
effectful_keypath_component
local_function_executed_concurrently
concurrent_access_of_local_capture
actor_isolated_sync_func
actor_mutable_state
shared_mutable_state_access
actor_isolated_witness
global_actor_isolated_requirement
global_actor_isolated_witness
global_actor_isolated_requirement_witness_conflict
actor_cannot_conform_to_global_actor_protocol
protocol_isolated_to_global_actor_here
non_concurrent_param_type
non_concurrent_result_type
non_concurrent_property_type
non_concurrent_keypath_capture
non_concurrent_keypath_access
non_concurrent_type_member
concurrent_value_class_mutable_property
concurrent_value_outside_source_file
concurrent_value_nonfinal_class
concurrent_value_inherit
actorindependent_let
actorindependent_mutable_storage
actorindependent_local_var
nonisolated_let
nonisolated_mutable_storage
nonisolated_local_var
actor_instance_property_wrapper
concurrency_lib_missing
async_main_no_concurrency
global_actor_missing_shared
global_actor_shared_not_static
global_actor_shared_inaccessible
global_actor_shared_constrained_extension
global_actor_shared_non_actor_type
multiple_global_actors
global_actor_disallowed
global_actor_on_actor_class
global_actor_on_local_variable
global_actor_non_unsafe_init
actor_isolation_multiple_attr
actor_isolation_override_mismatch
unsupported_recursive_struct
enum_non_well_founded
recursive_enum_not_indirect
unsupported_infinitely_sized_type
note_type_cycle_starts_here
note_recursive_enum_case_here
sugar_type_not_found
optional_intrinsics_not_found
pointer_argument_intrinsics_not_found
array_literal_intrinsics_not_found
class_super_access
class_super_access_warn
class_super_not_usable_from_inline
class_super_not_usable_from_inline_warn
dot_protocol_on_non_existential
tuple_single_element
tuple_ellipsis
tuple_duplicate_label
enum_element_ellipsis
implicitly_unwrapped_optional_in_illegal_position_interpreted_as_optional
implicitly_unwrapped_optional_deprecated_in_this_position
implicitly_unwrapped_optional_in_illegal_position
invalid_ownership_type
invalid_ownership_protocol_type
invalid_ownership_incompatible_class
invalid_ownership_with_optional
invalid_ownership_not_optional
invalid_ownership_is_let
ownership_invalid_in_protocols
ownership_invalid_in_protocols_compat_warning
required_initializer_nonclass
required_initializer_in_extension
required_initializer_missing
required_initializer_here
required_initializer_not_accessible
required_initializer_missing_keyword
required_initializer_override_wrong_keyword
required_initializer_override_keyword
overridden_required_initializer_here
attribute_requires_function_type
unsupported_convention
unreferenced_generic_parameter
unexpected_ctype_for_non_c_convention
unable_to_parse_c_function_type
unsupported_opaque_type
opaque_type_unsupported_pattern
opaque_type_in_protocol_requirement
attr_only_on_parameters_of_differentiable
differentiable_function_type_invalid_parameter
differentiable_function_type_invalid_result
differentiable_function_type_no_differentiability_parameters
opened_non_protocol
sil_function_ellipsis
sil_function_input_label
sil_function_output_label
sil_non_coro_yields
sil_function_repeat_convention
ast_subst_function_type
sil_function_multiple_error_results
unsupported_sil_convention
illegal_sil_type
sil_box_arg_mismatch
sil_metatype_without_repr
sil_metatype_multiple_reprs
objc_interop_disabled
attr_used_without_required_module
invalid_objc_decl_context
invalid_objc_decl
invalid_objc_swift_rooted_class
invalid_objc_swift_root_class_insert_nsobject
invalid_nonobjc_decl
invalid_nonobjc_extension
objc_in_extension_context
objc_in_generic_extension
objc_in_resilient_extension
objc_operator
objc_operator_proto
objc_inference_swift3_dynamic
objc_inference_swift3_objc_derived
objc_inference_swift3_addobjc
objc_inference_swift3_addnonobjc
objc_for_generic_class
objc_for_resilient_class
objc_getter_for_nonobjc_property
objc_getter_for_nonobjc_subscript
objc_setter_for_nonobjc_property
objc_setter_for_nonobjc_subscript
accessor_swift3_objc_inference
objc_enum_generic
objc_name_req_nullary
objc_name_subscript
objc_name_deinit
objc_name_func_mismatch
objc_enum_case_req_name
objc_enum_case_req_objc_enum
objc_enum_case_multi
objc_extension_not_class
attribute_meaningless_when_nonobjc
objc_invalid_on_var
objc_invalid_on_subscript
objc_invalid_on_static_subscript
objc_invalid_with_generic_params
objc_invalid_with_generic_requirements
objc_convention_invalid
paren_void_probably_void
not_objc_empty_protocol_composition
not_objc_protocol
not_objc_class_constraint
not_objc_error_protocol_composition
not_objc_empty_tuple
not_objc_tuple
not_objc_swift_class
not_objc_swift_struct
not_objc_swift_enum
not_objc_generic_type_param
not_objc_function_type_param
not_objc_function_type_throwing
objc_inferring_on_objc_protocol_member
objc_overriding_objc_decl
objc_witness_objc_requirement
witness_swift3_objc_inference
no_opaque_return_type_of
objc_observing_accessor
objc_addressor
objc_coroutine_accessor
objc_invalid_on_func_variadic
objc_invalid_on_func_inout
objc_invalid_on_func_param_type
objc_invalid_on_func_single_param_type
objc_invalid_on_func_result_type
objc_invalid_on_foreign_class
objc_invalid_on_throwing_optional_result
objc_invalid_on_throwing_result
objc_invalid_on_failing_init
objc_in_objc_runtime_visible
objc_override_method_selector_mismatch
objc_override_property_name_mismatch
objc_ambiguous_inference
objc_ambiguous_inference_candidate
objc_ambiguous_error_convention
objc_ambiguous_error_convention_candidate
nonlocal_bridged_to_objc
missing_bridging_function
objc_redecl
objc_declared_here
objc_redecl_same
objc_override_other
objc_class_method_not_permitted
objc_witness_selector_mismatch
objc_optional_requirement_conflict
objc_optional_requirement_swift_rename
witness_non_objc
witness_non_objc_optional
witness_non_objc_storage
witness_non_objc_storage_optional
nonobjc_not_allowed
borrowed_with_objc_dynamic
borrowed_on_objc_protocol_requirement
dynamic_with_transparent
dynamic_replacement_accessor_type_mismatch
dynamic_replacement_accessor_not_dynamic
dynamic_replacement_accessor_not_explicit
dynamic_replacement_function_not_dynamic
dynamic_replacement_function_not_found
dynamic_replacement_accessor_not_found
dynamic_replacement_accessor_ambiguous
dynamic_replacement_accessor_ambiguous_candidate
dynamic_replacement_function_of_type_not_found
dynamic_replacement_found_function_of_type
dynamic_replacement_not_in_extension
dynamic_replacement_must_not_be_dynamic
dynamic_replacement_replaced_not_objc_dynamic
dynamic_replacement_replacement_not_objc_dynamic
dynamic_replacement_replaced_constructor_is_convenience
dynamic_replacement_replaced_constructor_is_not_convenience
non_nominal_type_eraser
type_eraser_does_not_conform
type_eraser_not_accessible
type_eraser_missing_init
type_eraser_unviable_init
type_eraser_declared_here
type_eraser_failable_init
type_eraser_init_unsatisfied_requirements
type_eraser_init_not_accessible
availability_decl_unavailable
availability_decl_unavailable_warn
availability_decl_unavailable_rename
availability_decl_unavailable_rename_warn
availability_marked_unavailable
availability_introduced_in_version
availability_obsoleted
availability_deprecated
availability_deprecated_rename
note_deprecated_rename
availability_decl_more_than_enclosing
availability_decl_more_than_enclosing_enclosing_here
availability_decl_only_version_newer
availability_opaque_types_only_version_newer
availability_guard_with_version_check
availability_add_attribute
availability_accessor_only_version_newer
availability_inout_accessor_only_version_newer
availability_query_required_for_platform
availability_query_useless_enclosing_scope
availability_query_useless_enclosing_scope_here
availability_global_script_no_potential
availability_stored_property_no_potential
availability_enum_element_no_potential
availability_protocol_requires_version
availability_protocol_requirement_here
public_decl_needs_availability
availability_macro_in_inlinable
availabilty_string_subscript_migration
availability_unavailable_implicit_init
conformance_availability_unavailable
conformance_availability_marked_unavailable
conformance_availability_introduced_in_version
conformance_availability_obsoleted
conformance_availability_deprecated
conformance_availability_only_version_newer
conformance_availability_only_version_newer_warn
discardable_result_on_void_never_function
fixed_layout_attr_on_internal_type
fixed_layout_struct
frozen_attr_on_internal_type
usable_from_inline_attr_with_explicit_access
inlinable_implies_usable_from_inline
usable_from_inline_attr_in_protocol
local_type_in_inlinable_function
resilience_decl_unavailable
resilience_decl_unavailable_warn
inlinable_decl_ref_from_hidden_module
resilience_decl_declared_here_public
resilience_decl_declared_here
class_designated_init_inlinable_resilient
attribute_invalid_on_stored_property
inlinable_dynamic_not_supported
inlinable_decl_not_public
inlinable_resilient_deinit
specialize_attr_nongeneric_trailing_where
specialize_missing_where_clause
specialize_empty_where_clause
specialize_attr_non_concrete_same_type_req
specialize_attr_only_generic_param_req
specialize_attr_type_parameter_count_mismatch
specialize_attr_missing_constraint
specialize_attr_unsupported_kind_of_req
specialize_target_function_not_found
specialize_target_function_of_type_not_found
specialize_found_function_of_type
pbd_never_used_stmtcond
unused_setter_parameter
fixit_for_unused_setter_parameter
pbd_never_used
capture_never_used
variable_never_used
immutable_value_never_used_but_assigned
variable_never_mutated
variable_never_read
observe_keypath_property_not_objc_dynamic
default_magic_identifier_mismatch
change_caller_default_to_match_callee
silence_default_magic_identifier_mismatch
debug_long_function_body
debug_long_closure_body
debug_long_expression
empty_switch_stmt
non_exhaustive_switch
possibly_non_exhaustive_switch
missing_several_cases
missing_unknown_case
non_exhaustive_switch_drop_unknown
missing_particular_case
redundant_particular_case
redundant_particular_literal_case
redundant_particular_literal_case_here
non_exhaustive_switch_warn
non_exhaustive_switch_unknown_only
override_nsobject_hashvalue_error
override_nsobject_hash_error
hashvalue_implementation
property_wrapper_no_value_property
property_wrapper_ambiguous_value_property
property_wrapper_wrong_initial_value_init
property_wrapper_failable_init
property_wrapper_type_requirement_not_accessible
property_wrapper_ambiguous_enclosing_self_subscript
property_wrapper_dynamic_self_type
property_wrapper_var_must_be_static
property_wrapper_attribute_not_on_property
property_wrapper_param_not_supported
property_wrapper_declared_here
invalid_projection_argument
property_wrapper_param_no_wrapper
property_wrapper_param_attr_arg
property_wrapper_no_init_projected_value
property_wrapper_param_mutating
invalid_implicit_property_wrapper
property_wrapper_mutating_get_composed_to_get_only
property_wrapper_top_level
property_wrapper_let
property_wrapper_computed
property_wrapper_effectful
property_with_wrapper_conflict_attribute
property_wrapper_not_single_var
property_with_wrapper_in_bad_context
property_with_wrapper_overrides
property_wrapper_direct_init
property_wrapper_incompatible_property
wrapped_value_mismatch
composed_property_wrapper_mismatch
property_wrapper_type_access
property_wrapper_type_not_usable_from_inline
property_wrapper_wrapperValue
property_wrapper_init_initialValue
property_wrapper_projection_value_missing
property_wrapper_missing_arg_init
result_builder_decl
note_result_builder_decl
result_builder_control_flow
note_result_builder_control_flow
result_builder_attribute_not_allowed_here
result_builder_attribute_on_storage_without_getter
result_builder_parameter_not_of_function_type
result_builder_parameter_autoclosure
result_builder_multiple
previous_result_builder_here
result_builder_arguments
result_builder_disabled_by_return
result_builder_disabled_by_return_warn
result_builder_remove_attr
result_builder_remove_returns
result_builder_infer_ambig
result_builder_infer_add_return
result_builder_infer_pick_specific
result_builder_missing_limited_availability
result_builder_static_buildblock
result_builder_non_static_buildblock
result_builder_buildblock_enum_case
result_builder_buildblock_not_static_method
result_builder_missing_build_optional
result_builder_missing_build_either
result_builder_missing_build_array
result_builder_missing_build_limited_availability
warn_reordering_tuple_shuffle_deprecated
marker_protocol_requirement
marker_protocol_inherit_nonmarker
marker_protocol_cast
marker_protocol_conditional_conformance
differentiable_programming_attr_used_without_required_module
oslog_arg_must_be_bool_literal
oslog_arg_must_be_integer_literal
oslog_arg_must_be_string_literal
oslog_arg_must_be_float_literal
oslog_arg_must_be_metatype_literal
oslog_arg_must_be_closure
argument_must_be_constant
oslog_message_must_be_string_interpolation
oslog_arg_must_be_enum_case
oslog_arg_must_be_type_member_access
atomics_ordering_must_be_constant
swiftui_arg_must_be_integer_literal
swiftui_arg_must_be_integer_range
attr_added_by_access_note
fixit_attr_added_by_access_note
attr_removed_by_access_note
fixit_attr_removed_by_access_note
attr_objc_name_changed_by_access_note
fixit_attr_objc_name_changed_by_access_note
attr_objc_name_conflicts_with_access_note
warning_from_clang
error_from_clang
note_from_clang
remark_from_clang
clang_cannot_build_module
bridging_header_missing
bridging_header_error
could_not_rewrite_bridging_header
bridging_header_pch_error
emit_pcm_error
dump_pcm_error
invalid_swift_name_method
note_while_importing
swift_name_protocol_static
swift_name_no_prototype
inconsistent_swift_name
unresolvable_clang_decl
unresolvable_clang_decl_is_a_framework_bug
clang_swift_attr_without_at
implicit_bridging_header_imported_from_module
import_multiple_mainactor_attr
module_map_not_found
bridging_module_missing
bridging_function_missing
bridging_function_overloaded
bridging_function_not_function
bridging_function_not_correct_type
bridging_objcbridgeable_missing
bridging_objcbridgeable_broken
sil_function_redefinition
invalid_sil_builtin
could_not_find_bridge_type
could_not_find_pointer_pointee_property
writeback_overlap_property
writeback_overlap_subscript
writebackoverlap_note
inout_argument_alias
previous_inout_alias
unimplemented_generator_witnesses
exclusivity_access_required
exclusivity_access_required_unknown_decl
exclusivity_conflicting_access
unsupported_c_function_pointer_conversion
c_function_pointer_from_function_with_context
objc_selector_malformed
capture_before_declaration
captured_value_declared_here
escaping_inout_capture
inout_param_defined_here
escaping_mutable_self_capture
escaping_noescape_param_capture
noescape_param_defined_here
escaping_noescape_var_capture
value_captured_here
copy_inout_captured_by_autoclosure
copy_self_captured_by_autoclosure
value_captured_transitively
err_noescape_param_call
variable_defined_here
variable_used_before_initialized
variable_inout_before_initialized
variable_closure_use_uninit
variable_defer_use_uninit
self_closure_use_uninit
variable_addrtaken_before_initialized
ivar_not_initialized_at_superinit
ivar_not_initialized_at_implicit_superinit
self_use_before_fully_init
use_of_self_before_fully_init
stored_property_not_initialized
selfinit_multiple_times
superselfinit_not_called_before_return
self_before_superinit
self_before_selfinit
self_before_selfinit_value_type
self_inside_catch_superselfinit
return_from_init_without_initing_stored_properties
variable_function_use_uninit
struct_not_fully_initialized
immutable_property_already_initialized
initial_value_provided_in_let_decl
mutation_of_property_of_immutable_value
using_mutating_accessor_on_immutable_value
mutating_method_called_on_immutable_value
immutable_value_passed_inout
assignment_to_immutable_value
designated_init_in_cross_module_extension
designated_init_c_struct_fix
missing_return
missing_return_last_expr
missing_never_call
guard_body_must_not_fallthrough
unreachable_code
unreachable_code_uninhabited_param_note
unreachable_code_branch
call_to_noreturn_note
unreachable_code_after_stmt
unreachable_case
switch_on_a_constant
unreachable_code_note
warn_infinite_recursive_call
warn_dead_weak_store
circular_transparent
note_while_inlining
cannot_prespecialize
missing_prespecialization
integer_conversion_overflow
integer_conversion_overflow_builtin_types
integer_conversion_overflow_warn
negative_integer_literal_overflow_unsigned
integer_literal_overflow
integer_literal_overflow_builtin_types
integer_literal_overflow_warn
arithmetic_operation_overflow
arithmetic_operation_overflow_generic_type
division_overflow
division_by_zero
wrong_non_negative_assumption
shifting_all_significant_bits
static_report_error
pound_assert_condition_not_constant
pound_assert_failure
constexpr_unknown_reason_default
constexpr_unevaluable_operation
constexpr_too_many_instructions
constexpr_limit_exceeding_instruction
constexpr_loop_found_note
constexpr_loop_instruction
constexpr_overflow
constexpr_overflow_operation
constexpr_trap
constexpr_trap_operation
constexpr_invalid_operand_seen
constexpr_operand_invalid_here
constexpr_value_unknown_at_top_level
constexpr_multiple_writers_found_at_top_level
constexpr_unsupported_instruction_found
constexpr_unsupported_instruction_found_here
constexpr_found_callee_with_no_body
constexpr_callee_with_no_body
constexpr_found_call_with_unknown_arg
constexpr_call_with_unknown_arg
constexpr_untracked_sil_value_use_found
constexpr_untracked_sil_value_used_here
constexpr_unevaluable_cast_found
constexpr_unevaluable_cast_used_here
constexpr_unresolvable_witness_call
constexpr_no_witness_table_entry
constexpr_witness_call_with_no_conformance
constexpr_unknown_control_flow_due_to_skip
constexpr_returned_by_unevaluated_instruction
constexpr_mutated_by_unevaluated_instruction
not_constant_evaluable
constexpr_imported_func_not_onone
autodiff_internal_swift_not_imported
autodiff_differentiation_module_not_imported
autodiff_conversion_to_linear_function_not_supported
autodiff_function_not_differentiable_error
autodiff_expression_not_differentiable_error
autodiff_expression_not_differentiable_note
autodiff_when_differentiating_function_call
autodiff_when_differentiating_function_definition
autodiff_implicitly_inherited_differentiable_attr_here
autodiff_jvp_control_flow_not_supported
autodiff_control_flow_not_supported
autodiff_missing_return
autodiff_external_nondifferentiable_function
autodiff_opaque_function_not_differentiable
autodiff_private_derivative_from_fragile
autodiff_function_noderivative_parameter_not_differentiable
autodiff_function_assoc_func_unmet_requirements
autodiff_nondifferentiable_argument
autodiff_nondifferentiable_result
autodiff_protocol_member_not_differentiable
autodiff_class_member_not_differentiable
autodiff_member_subset_indices_not_differentiable
autodiff_cannot_param_subset_thunk_partially_applied_orig_fn
autodiff_cannot_differentiate_through_multiple_results
autodiff_cannot_differentiate_through_inout_arguments
autodiff_enums_unsupported
autodiff_stored_property_parent_not_differentiable
autodiff_stored_property_not_differentiable
autodiff_stored_property_tangent_not_struct
autodiff_stored_property_no_corresponding_tangent
autodiff_tangent_property_wrong_type
autodiff_tangent_property_not_stored
autodiff_coroutines_not_supported
autodiff_cannot_differentiate_writes_to_global_variables
autodiff_cannot_differentiate_writes_to_mutable_captures
non_physical_addressof
non_borrowed_indirect_addressof
opt_remark_passed
opt_remark_missed
opt_remark_note
float_to_int_overflow
negative_fp_literal_overflow_unsigned
warning_float_trunc_overflow
warning_float_trunc_underflow
warning_float_trunc_hex_inexact
warning_float_overflows_maxbuiltin
warning_int_to_fp_inexact
return_before_yield
multiple_yields
previous_yield
possible_return_before_yield
branch_doesnt_yield
named_case_doesnt_yield
case_doesnt_yield
switch_value_case_doesnt_yield
try_branch_doesnt_yield
oslog_constant_eval_trap
oslog_too_many_instructions
oslog_invalid_log_message
oslog_const_evaluable_fun_error
oslog_non_constant_message
oslog_non_constant_interpolation
oslog_property_not_constant
oslog_message_alive_after_opts
oslog_message_explicitly_created
oslog_call_in_unreachable_code
global_string_pointer_on_non_constant
polymorphic_builtin_passed_non_trivial_non_builtin_type
polymorphic_builtin_passed_type_without_static_overload
box_to_stack_cannot_promote_box_to_stack_due_to_escape_alloc
box_to_stack_cannot_promote_box_to_stack_due_to_escape_location
semantic_function_improper_nesting
capturepromotion_concurrentcapture_mutation
capturepromotion_concurrentcapture_closure_here
capturepromotion_concurrentcapture_capturinguse_here
capturepromotion_variable_defined_here
no_llvm_target
error_codegen_init_fail
irgen_unimplemented
irgen_failure
type_to_verify_not_found
type_to_verify_ambiguous
type_to_verify_dependent
too_few_output_filenames
no_input_files_for_mt
alignment_dynamic_type_layout_unsupported
alignment_less_than_natural
alignment_more_than_maximum
warning_no_such_sdk
error_no_frontend_args
error_no_such_file_or_directory
error_unsupported_target_os
error_unsupported_target_arch
error_unknown_library_level
error_unsupported_opt_for_target
warning_inferred_simulator_target
error_argument_not_allowed_with
warning_argument_not_supported_with_optimization
error_option_requires_sanitizer
warning_option_requires_specific_sanitizer
error_option_missing_required_argument
cannot_open_file
cannot_open_serialized_file
error_open_input_file
error_clang_importer_create_fail
error_missing_arg_value
error_unknown_arg
error_invalid_arg_value
warning_invalid_locale_code
warning_locale_path_not_found
warning_cannot_find_locale_file
warning_cannot_multithread_batch_mode
error_unsupported_option_argument
error_immediate_mode_missing_stdlib
error_immediate_mode_missing_library
error_immediate_mode_primary_file
error_missing_frontend_action
error_invalid_source_location_str
error_no_source_location_scope_map
note_valid_swift_versions
error_mode_cannot_emit_dependencies
error_mode_cannot_emit_reference_dependencies
error_mode_cannot_emit_header
error_mode_cannot_emit_loaded_module_trace
error_mode_cannot_emit_module
error_mode_cannot_emit_module_doc
error_mode_cannot_emit_module_source_info
error_mode_cannot_emit_interface
error_mode_cannot_emit_module_summary
error_mode_cannot_emit_symbol_graph
cannot_emit_ir_skipping_function_bodies
emit_reference_dependencies_without_primary_file
warn_implicit_concurrency_import_failed
error_module_name_required
error_bad_module_name
error_stdlib_module_name
error_stdlib_not_found
error_unable_to_load_supplementary_output_file_map
error_missing_entry_in_supplementary_output_file_map
error_repl_requires_no_input_files
error_mode_requires_one_input_file
error_mode_requires_an_input_file
error_mode_requires_one_sil_multi_sib
error_no_output_filename_specified
error_implicit_output_file_is_directory
error_if_any_output_files_are_specified_they_all_must_be
error_primary_file_not_found
error_cannot_have_input_files_with_file_list
error_cannot_have_primary_files_with_primary_file_list
error_cannot_have_supplementary_outputs
error_duplicate_input_file
repl_must_be_initialized
verify_encountered_fatal
error_parse_input_file
error_write_index_unit
error_create_index_dir
error_write_index_record
error_index_failed_status_check
error_index_inputs_more_than_outputs
warn_index_unit_output_path_without_index_store
error_wrong_number_of_arguments
error_formatting_multiple_file_ranges
error_formatting_invalid_range
stats_disabled
tbd_warn_truncating_version
tbd_err_invalid_version
tbd_only_supported_in_whole_module
tbd_not_supported_with_cmo
linker_directives_choice_confusion
previous_installname_map_missing
previous_installname_map_corrupted
explicit_swift_module_map_missing
explicit_swift_module_map_corrupted
placeholder_dependency_module_map_missing
placeholder_dependency_module_map_corrupted
batch_scan_input_file_missing
batch_scan_input_file_corrupted
default_previous_install_name
platform_previous_install_name
unknown_platform_name
unknown_swift_module_name
cannot_find_install_name
symbol_in_tbd_not_in_ir
symbol_in_ir_not_in_tbd
tbd_validation_failure
redundant_prefix_compilation_flag
invalid_conditional_compilation_flag
cannot_assign_value_to_conditional_compilation_flag
framework_search_path_includes_framework_extension
error_optimization_remark_pattern
error_invalid_debug_prefix_map
error_invalid_coverage_prefix_map
invalid_vfs_overlay_file
module_interface_scoped_import_unsupported
warn_unsupported_module_interface_swift_version
warn_unsupported_module_interface_library_evolution
error_extracting_version_from_module_interface
unsupported_version_of_module_interface
error_opening_explicit_module_file
error_extracting_flags_from_module_interface
warning_module_shadowing_may_break_module_interface
rebuilding_module_from_interface
sdk_version_pbm_version
out_of_date_module_here
module_interface_dependency_out_of_date
module_interface_dependency_missing
compiled_module_invalid
compiled_module_invalid_reason
unknown_forced_module_loading_mode
error_creating_remark_serializer
interface_file_lock_failure
interface_file_lock_timed_out
error_option_required
error_nonexistent_output_dir
missing_member_dependency
unexpected_dependency
unexpected_provided_entity
negative_expectation_violated
expectation_missing_opening_braces
expectation_missing_closing_braces
module_incompatible_with_skip_function_bodies
access_notes_file_io_error
error_in_access_notes_file
warning_in_access_notes_file
warning_parallel_execution_not_supported
error_unable_to_execute_command
error_command_signalled_without_signal_number
error_command_signalled
error_command_failed
error_expected_one_frontend_job
error_expected_frontend_command
error_cannot_specify__o_for_multiple_outputs
error_static_emit_executable_disallowed
error_unable_to_load_output_file_map
error_no_output_file_map_specified
error_unable_to_make_temporary_file
error_no_input_files
error_unexpected_input_file
error_unknown_target
error_framework_bridging_header
error_bridging_header_module_interface
error_i_mode
warning_unnecessary_repl_mode
error_unsupported_option
incremental_requires_output_file_map
incremental_requires_build_record_entry
unable_to_open_incremental_comparison_log
error_os_minimum_deployment
error_sdk_too_old
error_ios_maximum_deployment_32
error_unsupported_target_variant
warn_arclite_not_found_when_link_objc_runtime
warn_cannot_stat_input
warn_unable_to_load_dependencies
error_input_changed_during_build
error_conflicting_options
error_option_not_supported
error_requirement_not_met
warn_ignore_embed_bitcode
warn_ignore_embed_bitcode_marker
verify_debug_info_requires_debug_option
verify_incremental_dependencies_needs_incremental
error_profile_missing
warn_opt_remark_disabled
warn_ignoring_batch_mode
warn_ignoring_wmo
warn_use_filelists_deprecated
warn_unable_to_load_primary
cannot_find_migration_script
error_darwin_static_stdlib_not_supported
error_darwin_only_supports_libcxx
warn_drv_darwin_sdk_invalid_settings
invalid_name
invalid_location
arity_mismatch
name_not_functionlike
unresolved_location
location_module_mismatch
value_decl_no_loc
value_decl_referenced_out_of_range
multi_entry_range
orphan_loop_keyword
invalid_default_location
no_parent_switch
no_remaining_cases
mismatched_rename
no_insert_position
missing_callback_arg
mismatched_callback_args
unknown_callback_conditions
mixed_callback_conditions
callback_with_fallthrough
callback_with_default
callback_multiple_case_items
callback_where_case_item
generic_sig_change
raw_type_change
removed_decl
moved_decl
renamed_decl
decl_type_change
decl_attr_change
decl_new_attr
decl_reorder
decl_added
var_has_fixed_order_change
func_has_fixed_order_change
default_arg_removed
conformance_removed
conformance_added
existing_conformance_added
default_associated_type_removed
protocol_req_added
super_class_removed
super_class_changed
decl_kind_changed
optional_req_changed
no_longer_open
func_type_escaping_changed
func_self_access_change
param_ownership_change
type_witness_change
decl_new_witness_table_entry
new_decl_without_intro
objc_name_change
desig_init_added
added_invisible_designated_init
not_inheriting_convenience_inits
enum_case_added
cannot_read_allowlist
input
compile
interpret
backend
merge-module
modulewrap
swift-autolink-extract
repl
link
static-link
generate-dSYM
verify-debug-info
generate-pch
verify-module-interface
sourceFileProvide
interface
implementation
sources
- unable to create list of input sources
Disabling incremental build: 
DYLD_LIBRARY_PATH
DYLD_FRAMEWORK_PATH
libclang_rt.
_dynamic.dylib
-filelist
inputs
LinkFileList
-add_ast_path
libarclite_
-force_load
CoreFoundation
libLTO.dylib
-lto_library
asan
tsan
ubsan
fuzzer
-rpath
tvos
libclang_rt.profile_
-target-sdk-version
-target-variant-sdk-version
-static-executable is not supported on Darwin
-dylib
-application_extension
-bitcode_bundle
-syslibroot
-lobjc
-lSystem
-arch
-lc++
-no_objc_category_merging
libtool
-static
RC_DEBUG_OPTIONS
libc++
iossim
tvossim
watchossim
xcrun
-toolchain
-lc++abi
@executable_path
mac-catalyst
ios-simulator
tvos-simulator
watchos-simulator
-platform_version
OS X 10.9
tvOS 9.0
iOS 7
watchOS 2.0
swiftc
swift-autolink-extract
Compilation construction
no build record path
SDKROOT
--show-sdk-path
--sdk
-print-target-info
-target-variant
-use-static-resource-dir
Building compilation jobs
building jobs
determining output
" - "
", inputs: [
], output: {
, condition: run-without-cascading
, condition: check-dependencies
, condition: newly-added
SWIFT_LOADED_MODULE_TRACE_FILE
Target: 
Swift compiler
SEE ALSO - PACKAGE MANAGER COMMANDS: 
"swift build" Build sources into binary products 
"swift package" Perform operations on Swift packages 
"swift run" Build and run an executable product 
"swift test" Build and run tests 
SEE ALSO: swift build, swift run, swift package, swift test 
-warnings-as-errors
-profile-generate
-profile-use
-placeholder-dependency-module-map-file
-scan-dependencies
-import-prescan
is not compatible with whole module optimization.
is not currently compatible with embedding LLVM IR bitcode.
Incremental compilation has been disabled, because it 
Incremental compilation could not read build record.
could not read build record
Malformed value for key '
no name node in build record
could not read time value in build record
no input entry in build record
no sequence node for input entry in build record
no previous build state in build record
Incremental compilation has been disabled, due to a 
compiler version mismatch.
Compiling with: 
Previously compiled with: 
compiler version mismatch
Incremental compilation has been disabled, because 
different arguments were passed to the compiler.
different arguments passed to compiler
an input was removed
malformed build record file
Incremental compilation has been disabled due to 
the following inputs were used in the previous 
compilation, but not in the current compilation:
swift-driver
Simulator
.lib
.dylib
.dot
 swiftDeps: <
 no swiftDeps
' in 
digraph "
hexagon
yellow
<swiftc>
-whole-module-optimization
-disable-batch-mode
-driver-filelist-threshold
-typecheck
primary
additional
    PrimaryOutputType = 
    Inputs = [
    DerivedOutputFileMap = {
    };
        CommandInputPair {
            Base = 
            Primary = 
        }
 for driver Action 
 of type 
 for driver CommandOutput
While adding 
 output named 
 for input 
 to driver CommandOutput
- unable to create temporary file for 
arguments
resp
Unknown remark format.
-Xllvm
-aarch64-use-tbi
-enable-objc-interop
-disable-objc-interop
-stack-check
-enable-cxx-interop
-stdlib=
-color-diagnostics
-no-warnings-as-errors
-enable-volatile-modules
-enable-anonymous-context-mangled-names
-api-diff-data-file
-api-diff-data-dir
-dump-usr
-pch-disable-validation
-parse-as-library
-cross-module-optimization
-save-optimization-record=
-save-optimization-record-path
-save-optimization-record-passes
-migrate-keep-objc-visibility
-emit-remap-file-path
-output-filelist
outputs
-index-unit-output-path-filelist
index-unit-outputs
-embed-bitcode-marker
-index-system-modules
-debug-info-store-invocation
-disable-autolinking-runtime-compatibility
-runtime-compatibility-version
-dump-ast
-emit-silgen
-emit-sil
-emit-sibgen
-emit-sib
-emit-ir
-emit-bc
-emit-pcm
-emit-module
-emit-imported-modules
-emit-supported-features
-update-code
-primary-filelist
primaryInputs
supplementaryOutputs
-primary-file
-emit-module-path
-emit-module-doc-path
-emit-module-source-info-path
-emit-module-interface-path
-emit-private-module-interface-path
-serialize-diagnostics-path
-emit-objc-header-path
-emit-dependencies-path
-emit-reference-dependencies-path
-emit-loaded-module-trace-path
-emit-tbd-path
-emit-module-summary-path
-interpret
-embed-bitcode
-disable-llvm-optzns
-merge-modules
-disable-diagnostic-passes
-disable-sil-perf-optzns
-typecheck-module-from-interface
-modulewrap
lldb
-repl
dsymutil
--verify
--debug-info
--eh-frame
--quiet
dwarfdump
-pch-output-dir
clang
darwin
clang++
-lto=llvm-thin
-lto=llvm-full
-autolink-library
oldnames
libcmt
libcmtd
msvcrt
msvcrtd
-D_MT
-D_DLL
-android
LD_LIBRARY_PATH
-shared
-fuse-ld=
-pie
-flto=thin
-flto=full
-Xlinker
swiftrt.o
--sysroot
--start-group
--end-group
static-executable-args.lnk
static-stdlib-args.lnk
-lswiftCore
 not found
--target=
-fsanitize=
-lBlocksRuntime
-ldispatch
libclang_rt.profile-
llvm-ar
__llvm_profile_runtime
clang_rt.
/DEBUG
-nostartfiles
swiftrt.obj
clang_rt.profile-
link
/lib
-nologo
/OUT:
<optimization level options>
<code formatting options>
<automatic crashing options>
<debug info options>
<swift internal options>
<swift debug/development internal options>
DEBUG/DEVELOPMENT OPTIONS
<linker-specific options>
<mode options>
MODES
<input>
<unknown>
-###
-access-notes-path=
-access-notes-path
Specify YAML file to override attributes on Swift declarations in this module
-api-diff-data-dir
Load platform and version specific API migration data files from <path>. Ignored if -api-diff-data-file is specified.
<path>
-api-diff-data-file
API migration data is from <path>
-application-extension
Restrict code to those available for App Extensions
-assert-config
Specify the assert_configuration replacement. Possible values are Debug, Release, Unchecked, DisableReplacement.
-assume-single-threaded
Assume that code will be executed in a single-threaded environment
-autolink-force-load
Force ld to link against this module even if no symbols are used
-autolink-library
Add dependent library
-avoid-emit-module-source-info
don't emit Swift source info file
-bad-file-descriptor-retry-count
Number of retrying opening a file if previous open returns a bad file descriptor error.
-batch-scan-input-file
Specify a JSON file containing modules to perform batch dependencies scanning
-bridging-header-directory-for-print
Directory for bridging header to be printed in compatibility header
-build-module-from-parseable-interface
-bypass-batch-mode-checks
Bypass checks for batch-mode errors.
-candidate-module-file
Specify Swift module may be ready to use for an interface
-check-onone-completeness
Print errors if the compile OnoneSupport module is missing symbols
-code-complete-call-pattern-heuristics
Use heuristics to guess whether we want call pattern completions
-code-complete-inits-in-postfix-expr
Include initializers when completing a postfix expression
-color-diagnostics
Print diagnostics in color
-compile-module-from-interface
Treat the (single) input as a swiftinterface and produce a module
-continue-building-after-errors
Continue building, even after errors are encountered
-coverage-prefix-map
Remap source paths in coverage info
<prefix=replacement>
-cross-module-optimization
Perform cross-module optimization
-crosscheck-unqualified-lookup
Compare legacy DeclContext- to ASTScope-based unqualified name lookup (for debugging)
-debug-assert-after-parse
Force an assertion failure after parsing
-debug-assert-immediately
Force an assertion failure immediately
-debug-constraints-attempt
Debug the constraint solver at a given attempt
-debug-constraints-on-line=
-debug-constraints-on-line
Debug the constraint solver for expressions on <line>
<line>
-debug-constraints
Debug the constraint-based type checker
-debug-crash-after-parse
Force a crash after parsing
-debug-crash-immediately
Force a crash immediately
-debug-cycles
Print out debug dumps when cycles are detected in evaluation
-debug-diagnostic-names
Include diagnostic names when printing
-debug-emit-invalid-swiftinterface-syntax
Write an invalid declaration into swiftinterface files
-debug-forbid-typecheck-prefix
Triggers llvm fatal_error if typechecker tries to typecheck a decl with the provided prefix name
-debug-generic-signatures
Debug generic signatures
-debug-info-format=
Specify the debug info format type to either 'dwarf' or 'codeview'
-debug-info-store-invocation
Emit the compiler invocation in the debug info.
-debug-prefix-map
Remap source paths in debug info
-debug-time-expression-type-checking
Dumps the time it takes to type-check each expression
-debug-time-function-bodies
Dumps the time it takes to type-check each function body
-debugger-support
Process swift code as if running in the debugger
-debugger-testing-transform
Instrument the code with calls to an intrinsic that record the expected values of local variables so they can be compared against the results from the debugger.
-define-availability
Define an availability macro in the format 'macroName : iOS 13.0, macOS 10.15'
<macro>
-deprecated-integrated-repl
-diagnostic-documentation-path
Path to diagnostic documentation resources
-diagnostic-style=
<style>
-diagnostic-style
The formatting style used when printing diagnostics ('swift' or 'llvm')
-diagnostics-editor-mode
Diagnostics will be used in editor
-disable-access-control
Don't respect access control restrictions
-disable-actor-data-race-checks
Disable runtime checks for actor data races
-disable-arc-opts
Don't run SIL ARC optimization passes.
-disable-ast-verifier
Do not run the AST verifier during compilation. NOTE: This lets the user override the default behavior on whether or not the ASTVerifier is run. The default behavior is to run the verifier when asserts are enabled and not run it when asserts are disabled. NOTE: Can not be used if enable-ast-verifier is used as well
-disable-autolink-framework
Disable autolinking against the provided framework
-disable-autolinking-runtime-compatibility-dynamic-replacements
Do not use autolinking for the dynamic replacement runtime compatibility library
-disable-autolinking-runtime-compatibility
Do not use autolinking for runtime compatibility libraries
-disable-availability-checking
Disable checking for potentially unavailable APIs
-disable-batch-mode
Disable combining frontend jobs into batches
-disable-bridging-pch
Disable automatic generation of bridging PCH files
-disable-building-interface
Disallow building binary module from textual interface
-disable-clangimporter-source-import
Disable ClangImporter and forward all requests straight the DWARF importer.
-disable-concrete-type-metadata-mangled-name-accessors
Disable concrete type metadata access by mangled name
-disable-conformance-availability-errors
Diagnose conformance availability violations as warnings
-disable-constraint-solver-performance-hacks
Disable all the hacks in the constraint solver
-disable-copy-propagation
Don't run SIL copy propagation to preserve object lifetime.
-disable-cross-import-overlays
Do not automatically import declared cross-import overlays.
-disable-debugger-shadow-copies
Disable debugger shadow copies of local variables.This option is only useful for testing the compiler.
-disable-deserialization-recovery
Don't attempt to recover from missing xrefs (etc) in swiftmodules
-disable-diagnostic-passes
Don't run diagnostic passes
-disable-fuzzy-forward-scan-trailing-closure-matching
Disable fuzzy forward-scan trailing closure matching
-disable-generic-metadata-prespecialization
Do not statically specialize metadata for generic types at types that are known to be used in source.
-disable-implicit-concurrency-module-import
Disable the implicit import of the _Concurrency module.
-disable-implicit-swift-modules
Disable building Swift modules implicitly by the compiler
-disable-incremental-imports
Disable cross-module incremental build metadata and driver scheduling for Swift modules
-disable-incremental-llvm-codegen
Disable incremental llvm code generation.
-disable-infer-public-sendable
Disable inference of Sendable conformances for public structs and enums
-disable-interface-lock
Don't lock interface file when building module
-disable-invalid-ephemeralness-as-error
Diagnose invalid ephemeral to non-ephemeral conversions as warnings
-disable-legacy-type-info
Completely disable legacy type layout
-disable-llvm-optzns
Don't run LLVM optimization passes
-disable-llvm-slp-vectorizer
Don't run LLVM SLP vectorizer
-disable-llvm-value-names
Don't add names to local values in LLVM IR
-disable-llvm-verify
Don't run the LLVM IR verifier.
-disable-migrator-fixits
Disable the Migrator phase which automatically applies fix-its
-disable-modules-validate-system-headers
Disable validating system headers in the Clang importer
-disable-named-lazy-member-loading
Disable per-name lazy member loading
-disable-new-operator-lookup
Disable the new operator decl and precedencegroup lookup behavior
-disable-nonfrozen-enum-exhaustivity-diagnostics
Allow switches over non-frozen enums without catch-all cases
-disable-nskeyedarchiver-diagnostics
Allow classes with unstable mangled names to adopt NSCoding
-disable-objc-attr-requires-foundation-module
Disable requiring uses of @objc to require importing the Foundation module
-disable-objc-interop
Disable Objective-C interop code generation and config directives
-disable-only-one-dependency-file
Disables incremental build optimization that only produces one dependencies file
-disable-ossa-opts
Don't run SIL OSSA optimization passes.
-disable-playground-transform
Disable playground transformation
-disable-previous-implementation-calls-in-dynamic-replacements
Disable calling the previous implementation in dynamic replacements
-disable-reflection-metadata
Disable emission of reflection metadata for nominal types
-disable-reflection-names
Disable emission of names of stored properties and enum cases inreflection metadata
-disable-sil-ownership-verifier
Do not verify ownership invariants during SIL Verification 
-disable-sil-partial-apply
Disable use of partial_apply in SIL generation
-disable-sil-perf-optzns
Don't run SIL performance optimization passes
-disable-swift-bridge-attr
Disable using the swift bridge attribute
-disable-swift-specific-llvm-optzns
Don't run Swift specific LLVM optimization passes.
-disable-swift3-objc-inference
Disable Swift 3's @objc inference rules for NSObject-derived classes and 'dynamic' members (emulates Swift 4 behavior)
-disable-target-os-checking
Disable checking the target OS of serialized modules
-disable-testable-attr-requires-testable-module
Disable checking of @testable
-disable-type-layout
Disable type layout based lowering
-disable-typo-correction
Disable typo correction
-disable-verify-exclusivity
Diable verification of access markers used to enforce exclusivity.
-disallow-use-new-driver
Disable using new swift-driver
-driver-always-rebuild-dependents
Always rebuild dependents of files that have been modified
-driver-batch-count
Use the given number of batch-mode partitions, rather than partitioning dynamically
-driver-batch-seed
Use the given seed value to randomize batch-mode partitions
-driver-batch-size-limit
Use the given number as the upper limit on dynamic batch-mode partition size
-driver-emit-fine-grained-dependency-dot-file-after-every-import
Emit dot files every time driver imports an fine-grained swiftdeps file.
-driver-filelist-threshold=
-driver-filelist-threshold
Pass input or output file names as filelists if there are more than <n>
-driver-force-response-files
Force the use of response files for testing
--driver-mode=
Set the driver mode to either 'swift' or 'swiftc'
-driver-print-actions
Dump list of actions to perform
-driver-print-bindings
Dump list of job inputs and outputs
-driver-print-derived-output-file-map
Dump the contents of the derived output file map
-driver-print-jobs
Dump list of jobs to execute
-driver-print-output-file-map
Dump the contents of the output file map
-driver-show-incremental
With -v, dump information about why files are being rebuilt
-driver-show-job-lifecycle
Show every step in the lifecycle of driver jobs
-driver-skip-execution
Skip execution of subtasks when performing compilation
-driver-time-compilation
Prints the total time it took to execute all compilation tasks
-driver-use-filelists
Pass input files as filelists whenever possible
-driver-use-frontend-path
Use the given executable to perform compilations. Arguments can be passed as a ';' separated list
-driver-verify-fine-grained-dependency-graph-after-every-import
Debug DriverGraph by verifying it after every import
-dump-api-path
The path to output swift interface files for the compiled source files
-dump-ast
Parse and type-check input file(s) and dump AST(s)
-dump-clang-diagnostics
Dump Clang diagnostics to stderr
-dump-interface-hash
Parse input file(s) and dump interface token hash(es)
-dump-jit
Dump JIT contents
-dump-migration-states-dir
Dump the input text, output text, and states for migration to <path>
-dump-parse
Parse input file(s) and dump AST(s)
-dump-pcm
Dump debugging information about a precompiled Clang module
-dump-scope-maps
Parse and type-check input file(s) and dump the scope map(s)
<expanded-or-list-of-line:column>
-dump-type-info
Output YAML dump of fixed-size types from all imported modules
-dump-type-refinement-contexts
Type-check input file(s) and dump type refinement contexts(s)
-dump-usr
Dump USR for each declaration reference
Marks a conditional compilation flag as true
-embed-bitcode-marker
Embed placeholder LLVM IR data as a marker
-embed-bitcode
Embed LLVM IR bitcode as data
-embed-tbd-for-module
Embed symbols from the module in the emitted tbd file
-emit-assembly
Emit assembly file(s) (-S)
-emit-bc
Emit LLVM BC file(s)
-emit-dependencies-path
Output basic Make-compatible dependencies file to <path>
-emit-dependencies
Emit basic Make-compatible dependencies files
-emit-executable
Emit a linked executable
-emit-fine-grained-dependency-sourcefile-dot-files
Emit dot files for every source file.
-emit-fixits-path
Output compiler fixits as source edits to <path>
-emit-imported-modules
Emit a list of the imported modules
-emit-irgen
Emit LLVM IR file(s) before LLVM optimizations
-emit-ir
Emit LLVM IR file(s) after LLVM optimizations
-emit-ldadd-cfile-path
Generate .c file defining symbols to add back
-emit-library
Emit a linked library
-emit-loaded-module-trace-path=
-emit-loaded-module-trace-path
Emit the loaded module trace JSON to <path>
-emit-loaded-module-trace
Emit a JSON file containing information about what modules were loaded
-emit-localized-strings-only
Emits only localization keys for strings passed to APIs needing localization and then stops compilation.
-emit-localized-strings-path=
-emit-localized-strings-path
Emit localization keys to <path>
-emit-localized-strings
Emits localization keys for strings passed to APIs needing localization
-emit-migrated-file-path
Emit the migrated source file to <path>
-emit-module-doc-path
Output module documentation file <path>
-emit-module-doc
Emit a module documentation file based on documentation comments
-emit-module-interface-path
Output module interface file to <path>
-emit-module-interface
Output module interface file
-emit-module-path=
-emit-module-path
Emit an importable module to <path>
-emit-module-source-info-path
Output module source info file to <path>
-emit-module-source-info
Output module source info file
-emit-module-summary-path
Output module summary file to <path>
-emit-module-summary
Output module summary file
-emit-module
Emit an importable module
-emit-objc-header-path
Emit an Objective-C header file to <path>
-emit-objc-header
Emit an Objective-C header file
-emit-object
Emit object file(s) (-c)
-emit-parseable-module-interface-path
-emit-parseable-module-interface
-emit-pch
Emit PCH for imported Objective-C header file
-emit-pcm
Emit a precompiled Clang module from a module map
-emit-private-module-interface-path
Output private module interface file to <path>
-emit-reference-dependencies-path
Output Swift-style dependencies file to <path>
-emit-reference-dependencies
Emit a Swift-style dependencies file
-emit-remap-file-path
Emit the replacement map describing Swift Migrator changes to <path>
-emit-sibgen
Emit serialized AST + raw SIL file(s)
-emit-sib
Emit serialized AST + canonical SIL file(s)
-emit-silgen
Emit raw SIL file(s)
-emit-sil
Emit canonical SIL file(s)
-emit-sorted-sil
When printing SIL, print out all sil entities sorted by name to ease diffing
-emit-stack-promotion-checks
Emit runtime checks for correct stack promotion of objects.
-emit-supported-features
Emit a JSON file including all supported compiler features
-emit-symbol-graph-dir
Emit a symbol graph to directory <dir>
<dir>
-emit-symbol-graph
Emit a symbol graph
-emit-syntax
Parse input file(s) and emit the Syntax tree(s) as JSON
-emit-tbd-path=
-emit-tbd-path
Emit the TBD file to <path>
-emit-tbd
Emit a TBD file
-emit-verbose-sil
Emit locations during SIL emission
-enable-access-control
Respect access control restrictions
-enable-actor-data-race-checks
Emit runtime checks for actor data races
-enable-anonymous-context-mangled-names
Enable emission of mangled names in anonymous context descriptors
-enable-ast-verifier
Run the AST verifier during compilation. NOTE: This lets the user override the default behavior on whether or not the ASTVerifier is run. The default behavior is to run the verifier when asserts are enabled and not run it when asserts are disabled. NOTE: Can not be used if disable-ast-verifier is used as well
-enable-batch-mode
Enable combining frontend jobs into batches
-enable-bridging-pch
Enable automatic generation of bridging PCH files
-enable-conformance-availability-errors
Diagnose conformance availability violations as errors
-enable-copy-propagation
Run SIL copy propagation to shorten object lifetime.
-enable-cross-import-overlays
Automatically import declared cross-import overlays.
-enable-cxx-interop
Enable C++ interop code generation and config directives
-enable-deserialization-recovery
Attempt to recover from missing xrefs (etc) in swiftmodules
-enable-dynamic-replacement-chaining
Enable chaining of dynamic replacements
-enable-experimental-additive-arithmetic-derivation
Enable experimental 'AdditiveArithmetic' derived conformances
-enable-experimental-async-handler
Enable experimental @asyncHandler feature
-enable-experimental-concise-pound-file
Enable experimental concise '#file' identifier
-enable-experimental-concurrency
Enable experimental concurrency model
-enable-experimental-cxx-interop
Allow importing C++ modules into Swift (experimental feature)
-enable-experimental-flow-sensitive-concurrent-captures
Enable flow-sensitive concurrent captures
-enable-experimental-forward-mode-differentiation
Enable experimental forward mode differentiation
-enable-experimental-static-assert
Enable experimental #assert
-enable-fuzzy-forward-scan-trailing-closure-matching
Enable fuzzy forward-scan trailing closure matching
-enable-implicit-dynamic
Add 'dynamic' to all declarations
-enable-incremental-imports
Enable cross-module incremental build metadata and driver scheduling for Swift modules
-enable-infer-public-sendable
Enable inference of Sendable conformances for public structs and enums
-enable-invalid-ephemeralness-as-error
Diagnose invalid ephemeral to non-ephemeral conversions as errors
-enable-library-evolution
Build the module to allow binary-compatible library evolution
-enable-llvm-value-names
Add names to local values in LLVM IR
-enable-new-operator-lookup
Enable the new operator decl and precedencegroup lookup behavior
-enable-nonfrozen-enum-exhaustivity-diagnostics
Diagnose switches over non-frozen enums without catch-all cases
-enable-nskeyedarchiver-diagnostics
Diagnose classes with unstable mangled names adopting NSCoding
-enable-objc-attr-requires-foundation-module
Enable requiring uses of @objc to require importing the Foundation module
-enable-objc-interop
Enable Objective-C interop code generation and config directives
-enable-only-one-dependency-file
Enables incremental build optimization that only produces one dependencies file
-enable-operator-designated-types
Enable operator designated types
-enable-ossa-modules
Always serialize SIL in ossa form. If this flag is not passed in, when optimizing ownership will be lowered before serializing SIL
-enable-private-imports
Allows this module's internal and private API to be accessed
-enable-resilience
Deprecated, use -enable-library-evolution instead
-enable-sil-opaque-values
Enable SIL Opaque Values
-enable-source-import
Enable importing of Swift source files
-enable-spec-devirt
Enable speculative devirtualization pass.
-enable-swift3-objc-inference
Enable Swift 3's @objc inference rules for NSObject-derived classes and 'dynamic' members (emulates Swift 3 behavior)
-enable-swiftcall
Enable the use of LLVM swiftcall support
-enable-target-os-checking
Enable checking the target OS of serialized modules
-enable-testable-attr-requires-testable-module
Enable checking of @testable
-enable-testing
Allows this module's internal API to be accessed for testing
-enable-throw-without-try
Allow throwing function calls without 'try'
-enable-type-layout
Enable type layout based lowering
-enable-verify-exclusivity
Enable verification of access markers used to enforce exclusivity.
-enable-volatile-modules
Load Swift modules in memory
-enforce-exclusivity=
Enforce law of exclusivity
<enforcement>
-entry-point-function-name
Name of the entry point function
<string>
-experimental-allow-module-with-compiler-errors
Attempt to output .swiftmodule, regardless of compilation errors
-experimental-cxx-stdlib
C++ standard library to use; forwarded to Clang's -stdlib flag
-experimental-one-way-closure-params
Enable experimental support for one-way closure parameters
-experimental-print-full-convention
When emitting a module interface or SIL, emit additional @convention arguments, regardless of whether they were written in the source. Also requires -use-clang-function-types to be enabled.
-experimental-skip-all-function-bodies
Skip type-checking function bodies and all SIL generation
-experimental-skip-non-inlinable-function-bodies-without-types
Skip work on non-inlinable function bodies that do not declare nested types
-experimental-skip-non-inlinable-function-bodies
Skip type-checking and SIL generation for non-inlinable function bodies
-experimental-spi-imports
Enable experimental support for SPI imports
-explicit-swift-module-map-file
Specify a JSON file containing information of explict Swift modules
-external-pass-pipeline-filename
Use the pass pipeline defined by <pass_pipeline_file>
<pass_pipeline_file>
-filelist
Specify source inputs in a file rather than on the command line
-fixit-all
Apply all fixits from diagnostics without any filtering
-force-public-linkage
Force public linkage for private symbols. Used by LLDB.
-force-single-frontend-invocation
-framework
Specifies a framework which should be linked against
-frontend-parseable-output
Emit textual output in a parseable format
-Fsystem
Add directory to system framework search path
-function-sections
Emit functions to separate sections.
Add directory to framework search path
-gdwarf-types
Emit full DWARF type info.
-gline-tables-only
Emit minimal debug info for backtraces only
-gnone
Don't emit debug info
-group-info-path
The path to collect the group information of the compiled module
-gsil
Write the SIL into a file and generate debug-info to debug on SIL  level.
Emit debug info. This is the preferred setting for debugging with LLDB.
-help-hidden
Display available options, including hidden options
-help
Display available options
-ignore-always-inline
Ignore @inline(__always) attributes.
-ignore-module-source-info
Avoid getting source location from .swiftsourceinfo files
-import-cf-types
Recognize and import CF types as class types
-import-module
Implicitly import the specified module
-import-objc-header
Implicitly imports an Objective-C header file
-import-prescan
When performing a dependency scan, only dentify all imports of the main Swift module sources
-import-underlying-module
Implicitly imports the Objective-C half of a module
-in-place
Overwrite input file with formatted file.
-incremental
Perform an incremental build if possible
-indent-switch-case
Indent cases in switch statements.
-indent-width
Number of characters to indent.
-index-file-path
Produce index data for file <path>
-index-file
Produce index data for a source file
-index-ignore-stdlib
Avoid emitting index data for the standard library.
-index-ignore-system-modules
Avoid indexing system modules
-index-store-path
Store indexing data to <path>
-index-system-modules
Emit index data for imported serialized swift system modules
-index-unit-output-path-filelist
Specify index unit output paths in a file rather than on the command line
-index-unit-output-path
Use <path> as the output path in the produced index data.
-interpret
Immediate mode
-irgen-always-use-indirect-relative-references
Always emit indirectable relative references as indirect
Add directory to the import search path
-jit-build
JIT compilation mode
Number of commands to execute in parallel
-libc
libc runtime library to use
-library-level
Library distribution level 'api', 'spi' or 'other' (the default)
<level>
-line-range
<start line>:<end line>. Formats a range of lines (1-based). Can only be used with one input file.
<n:n>
-link-objc-runtime
-lldb-repl
LLDB-enhanced REPL mode
-locale
Choose a language for diagnostic messages
<locale-code>
-localization-path
Path to localized diagnostic messages directory
-lto=
Specify the LTO type to either 'llvm-thin' or 'llvm-full'
Add directory to library link search path
Specifies a library which should be linked against
-merge-modules
Merge the input modules without otherwise processing them
-migrate-keep-objc-visibility
When migrating, add '@objc' to declarations that would've been implicitly visible in Swift 3
-migrator-update-sdk
Does nothing. Temporary compatibility flag for Xcode.
-migrator-update-swift
-minimum-access-level
Include symbols with this access level or more
-module-abi-name
ABI name to use for the contents of this module
-module-cache-path
Specifies the Clang module cache path
-module-interface-preserve-types-as-written
When emitting a module interface, preserve types as they were written in the source
-module-link-name=
-module-link-name
Library to link against when using this module
-module-name=
-module-name
Name of the module to build
-new-driver-path
Path of the new driver to be used
-no-clang-module-breadcrumbs
Don't emit DWARF skeleton CUs for imported Clang modules. Use this when building a redistributable static archive.
-no-color-diagnostics
Do not print diagnostics in color
-no-link-objc-runtime
Don't link in additions to the Objective-C runtime
-no-serialize-debugging-options
Never serialize options for debugging (default: only for apps)
-no-stack-check
disable stack checking
-no-static-executable
Don't statically link the executable
-no-static-stdlib
Don't statically link the Swift standard library
-no-stdlib-rpath
Don't add any rpath entries.
-no-toolchain-stdlib-rpath
Do not add an rpath entry for the toolchain's standard library (default)
-no-verify-emitted-module-interface
Don't check that module interfaces emitted during compilation typecheck
-no-warnings-as-errors
Don't treat warnings as errors
-no-whole-module-optimization
Disable optimizing input files together instead of individually
-nostdimport
Don't search the standard library import path for modules
-num-threads
Enable multi-threading and specify number of threads
-only-use-extra-clang-opts
Options passed via -Xcc are sufficient for Clang configuration
-Onone
Compile without any optimization
-Oplayground
Compile with optimizations appropriate for a playground
-Osize
Compile with optimizations and target small code size
-Ounchecked
Compile with optimizations and remove runtime safety checks
-output-dir
Symbol Graph JSON Output Directory (Required)
-output-file-map=
-output-file-map
A file which specifies the location of outputs
-output-filelist
Specify outputs in a file rather than on the command line
Compile with optimizations
Write output to <file>
<file>
-package-description-version
The version number to be applied on the input for the PackageDescription availability kind
<vers>
-parse-as-library
Parse the input file(s) as libraries, not scripts
-parse-sil
Parse the input file as SIL code, not Swift source
-parse-stdlib
Parse the input file(s) as the Swift standard library
-parseable-output
-parse
Parse input file(s)
-pc-macro
Apply the 'program counter simulation' macro
-pch-disable-validation
Disable validating the persistent PCH
-pch-output-dir
Directory to persist automatically created precompiled bridging headers
-placeholder-dependency-module-map-file
Specify a JSON file containing information of external Swift module dependencies
-playground-high-performance
Omit instrumentation that has a high runtime performance impact
-playground
Apply the playground semantics and transformation
-prebuilt-module-cache-path=
-prebuilt-module-cache-path
Directory of prebuilt modules for loading module interfaces
-prespecialize-generic-metadata
Statically specialize metadata for generic types at types that are known to be used in source.
-pretty-print
Pretty-print the output JSON
-previous-module-installname-map-file
Path to a Json file indicating module name to installname map for @_originallyDefinedIn
-primary-filelist
Specify primary inputs in a file rather than on the command line
-primary-file
Produce output for this file, not the whole module
-print-ast
Parse and type-check input file(s) and pretty print AST(s)
-print-clang-stats
Print Clang importer statistics
-print-educational-notes
Include educational notes in printed diagnostic output, if available
-print-inst-counts
Before IRGen, count all the various SIL instructions. Must be used in conjunction with -print-stats.
-print-llvm-inline-tree
Print the LLVM inline tree.
-print-stats
Print various statistics
-print-target-info
Print target information for the given target <triple>, such as x86_64-apple-macos10.9
<triple>
-profile-coverage-mapping
Generate coverage data for use with profiled execution counts
-profile-generate
Generate instrumented code to collect execution counts
-profile-stats-entities
Profile changes to stats in -stats-output-dir, subdivided by source entity
-profile-stats-events
Profile changes to stats in -stats-output-dir
-profile-use=
Supply a profdata file to enable profile-guided optimization
<profdata>
-Rcross-import
Emit a remark if a cross-import of a module is triggered.
-read-legacy-type-info-path=
Read legacy type layout from the given path instead of default path
-remove-runtime-asserts
Remove runtime safety checks.
-repl
REPL mode (the default if there is no input file)
-report-errors-to-debugger
Deprecated, will be removed in future versions.
-require-explicit-availability-target
Suggest fix-its adding @available(<target>, *) to public declarations without availability
<target>
-require-explicit-availability
Require explicit availability on public declarations
-resolve-imports
Parse and resolve imports in input file(s)
-resource-dir
The directory that holds the compiler resource files
</usr/lib/swift>
-Rmodule-interface-rebuild
Emits a remark if an imported module needs to be re-compiled from its module interface
-Rmodule-loading
Emit a remark and file path of each loaded module
-Rpass-missed=
Report missed transformations by optimization passes whose name matches the given POSIX regular expression
-Rpass=
Report performed transformations by optimization passes whose name matches the given POSIX regular expression
-runtime-compatibility-version
Link compatibility library for Swift runtime version, or 'none'
-sanitize-address-use-odr-indicator
When using AddressSanitizer enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
-sanitize-coverage=
Specify the type of coverage instrumentation for Sanitizers and additional options separated by commas
<type>
-sanitize-recover=
Specify which sanitizer runtime checks (see -sanitize=) will generate instrumentation that allows error recovery. Listed checks should be comma separated. Default behavior is to not allow error recovery.
<check>
-sanitize=
Turn on runtime checks for erroneous behavior.
-save-optimization-record-passes
Only include passes which match a specified regular expression inthe generated optimization record (by default, include all passes)
<regex>
-save-optimization-record-path
Specify the file name of any generated optimization record
-save-optimization-record=
Generate an optimization record file in a specific format (default: YAML)
<format>
-save-optimization-record
Generate a YAML optimization record file
-save-temps
Save intermediate compilation results
-scan-dependencies
Scan dependencies of the given Swift sources
-sdk
Compile against <sdk>
<sdk>
-serialize-debugging-options
Always serialize options for debugging (default: only for apps)
-serialize-diagnostics-path=
-serialize-diagnostics-path
Emit a serialized diagnostics file to <path>
-serialize-diagnostics
Serialize diagnostics in a binary format
-serialize-module-interface-dependency-hashes
-serialize-parseable-module-interface-dependency-hashes
-show-diagnostics-after-fatal
Keep emitting subsequent diagnostics after a fatal error
-sil-debug-serialization
Do not eliminate functions in Mandatory Inlining/SILCombine dead functions. (for debugging only)
-sil-inline-caller-benefit-reduction-factor
Controls the aggressiveness of performance inlining in -Osize mode by reducing the base benefits of a caller (lower value permits more inlining!)
-sil-inline-threshold
Controls the aggressiveness of performance inlining
<50>
-sil-stop-optzns-before-lowering-ownership
Stop optimizing at SIL time before we lower ownership from SIL. Intended only for SIL ossa tests
-sil-unroll-threshold
Controls the aggressiveness of loop unrolling
<250>
-sil-verify-all
Verify SIL after each transform
-sil-verify-none
Completely disable SIL verification
-skip-inherited-docs
Skip emitting doc comments for members inherited through classes or default implementations
-skip-synthesized-members
Skip members inherited through classes or default implementations
-solver-disable-shrink
Disable the shrink phase of expression type checking
-solver-expression-time-threshold=
-solver-memory-threshold
Set the upper bound for memory consumption, in bytes, by the constraint solver
-solver-shrink-unsolved-threshold
Set The upper bound to number of sub-expressions unsolved before termination of the shrink phrase
-stack-check
enable stack checking
-stack-promotion-limit
Limit the size of stack promoted objects to the provided number of bytes.
-static-executable
Statically link the executable
-static-stdlib
Statically link the Swift standard library
-static
Make this module statically linkable and make the output of -emit-library a static library.
-stats-output-dir
Directory to write unified compilation-statistics files to
-supplementary-output-file-map
Specify supplementary outputs in a file rather than on the command line
-suppress-static-exclusivity-swap
Suppress static violations of exclusive access with swap()
-suppress-warnings
Suppress all warnings
-swift-isa-ptrauth-mode
Mode for staging isa/super signing. Supported modes are LegacyAndStrip, NewAndStrip and NewAndAuth.
<mode>
-swift-module-file
Specify Swift module explicitly built from textual interface
-swift-ptrauth-mode
Mode for staging pointer authentication. Supported modes are LegacyAndStrip, NewAndStrip and NewAndAuth.
-swift-version
Interpret input according to a specific Swift language version number
-switch-checking-invocation-threshold=
-tab-width
Width of tab character.
-target-cpu
Generate code for a particular CPU variant
-target-sdk-version
The version of target SDK used for compilation
-target-variant-sdk-version
The version of target variant SDK used for compilation
-target-variant
Generate 'zippered' code for macCatalyst that can run on the specified variant target triple in addition to the main -target triple
--target=
-target
Generate code for the given target <triple>, such as x86_64-apple-macos10.9
-tbd-compatibility-version=
-tbd-compatibility-version
The compatibility_version to use in an emitted TBD file
<version>
-tbd-current-version=
-tbd-current-version
The current_version to use in an emitted TBD file
-tbd-install_name=
-tbd-install_name
The install_name to use in an emitted TBD file
-tbd-is-installapi
If the TBD file should indicate it's being generated during InstallAPI
-testable-import-module
Implicitly import the specified module with @testable
-toolchain-stdlib-rpath
Add an rpath entry for the toolchain's standard library, rather than the OS's
-tools-directory
Look for external executables (ld, clang, binutils) in <directory>
<directory>
-trace-stats-events
Trace changes to stats in -stats-output-dir
-track-system-dependencies
Track system dependencies while emitting Make-style dependencies
-triple
-type-info-dump-filter=
One of 'all', 'resilient' or 'fragile'
-typecheck-module-from-interface
Treat the (single) input as a swiftinterface and typecheck it
-typecheck
Parse and type-check input file(s)
-typo-correction-limit
Limit the number of times the compiler will attempt typo correction to <n>
-update-code
Update Swift code
-use-clang-function-types
Use stored Clang function types for computing canonical types.
-use-jit
Register Objective-C classes as if the JIT were in use
-use-ld=
Specifies the linker to be used
-use-malloc
Allocate internal data structures using malloc (for memory debugging)
-use-static-resource-dir
Use resources in the static resource directory
-use-tabs
Use tabs for indentation.
-validate-tbd-against-ir=
Compare the symbols in the IR against the TBD file that would be generated.
-value-recursion-threshold
Set the maximum depth for direct recursion in value types
-verify-additional-file
Verify diagnostics in this file in addition to source files
-verify-all-substitution-maps
Verify all SubstitutionMaps on construction
-verify-apply-fixes
Like -verify, but updates the original source file
-verify-debug-info
Verify the binary representation of debug output.
-verify-emitted-module-interface
Check that module interfaces emitted during compilation typecheck
-verify-generic-signatures
Verify the generic signatures in the given module
<module-name>
-verify-ignore-unknown
Allow diagnostics for '<unknown>' location in verify mode
-verify-incremental-dependencies
Enable the dependency verifier for each frontend job
-verify-syntax-tree
Verify that no unknown nodes exist in the libSyntax tree
-verify-type-layout
Verify compile-time and runtime type layout information for type
-verify
Verify diagnostics against expected-{error|warning|note} annotations
-version
Print version information and exit
-vfsoverlay=
-vfsoverlay
Add directory to VFS overlay file
Show commands to run and use verbose output
-warn-concurrency
Warn about code that is unsafe according to the Swift Concurrency model and will become ill-formed in a future language version
-warn-implicit-overrides
Warn about implicit overrides of protocol members
-warn-long-expression-type-checking=
-warn-long-expression-type-checking
Warns when type-checking a function takes longer than <n> ms
-warn-long-function-bodies=
-warn-long-function-bodies
-warn-swift3-objc-inference-complete
Warn about deprecated @objc inference in Swift 3 for every declaration that will no longer be inferred as @objc in Swift 4
-warn-swift3-objc-inference-minimal
Warn about deprecated @objc inference in Swift 3 based on direct uses of the Objective-C entrypoint
-warn-swift3-objc-inference
-warnings-as-errors
Treat warnings as errors
-whole-module-optimization
Optimize input files together instead of individually
-wmo
-working-directory=
-working-directory
Resolve file paths relative to the specified directory
-Xcc
Pass <arg> to the C/C++/Objective-C compiler
<arg>
-Xclang-linker
Pass <arg> to Clang when it is use for linking.
-Xfrontend
Pass <arg> to the Swift frontend
-Xlinker
Specifies an option which should be passed to the linker
-Xllvm
Pass <arg> to LLVM.
"func", "bb", "edge"
address,
thread,
undefined,
fuzzer,
scudo,
address
thread
undefined
scudo
swift_retain
swift_retain_n
swift_checkUnowned
swift_release
swift_release_n
swift_unknownObjectRetain_n
swift_unknownObjectRelease_n
swift_bridgeObjectRetain_n
swift_bridgeObjectRelease_n
swift_nonatomic_retain
swift_nonatomic_retain_n
swift_nonatomic_release
swift_nonatomic_release_n
swift_nonatomic_unknownObjectRetain
swift_nonatomic_unknownObjectRetain_n
swift_nonatomic_unknownObjectRelease
swift_nonatomic_unknownObjectRelease_n
swift_nonatomic_bridgeObjectRetain
swift_nonatomic_bridgeObjectRetain_n
swift_nonatomic_bridgeObjectRelease
swift_nonatomic_bridgeObjectRelease_n
Swift Alias Analysis
swift-aa
Swift RC Identity Analysis
swift-rc-identity
swift-llvm-arc-opts
NumNoopDeleted
Number of no-op swift calls eliminated
NumRetainReleasePairs
Number of swift retain/release pairs eliminated
NumObjCRetainReleasePairs
Number of objc retain/release pairs eliminated
NumAllocateReleasePairs
Number of swift allocate/release pairs eliminated
NumStoreOnlyObjectsEliminated
Number of swift stored-only objects eliminated
NumUnknownObjectRetainReleaseSRed
Number of unknownretain/release strength reduced to retain/release
disable-llvm-arc-opts
Swift LLVM ARC optimization
swift-llvm-arc-optimize
swift-arc-contract
Swift ARC contraction
inline-tree-no-demangle
Don't demangle symbols in inline tree output
Inline tree printer pass
inline-tree-printer
Inlining overhead (total = 
,self=
Total inlining overhead; 
Inlining tree:
swift-mergefunc
NumSwiftFunctionsMerged
Number of functions merged
NumSwiftThunksWritten
Number of thunks generated
swiftmergefunc-sanity
How many functions in module could be used for SwiftMergeFunctions pass sanity check. '0' disables this check. Works only with '-debug' key.
swiftmergefunc-threshold
Functions larger than the threshold are considered for merging.'0' disables function merging at all.
Swift merge function pass
swift-merge-functions
KCRef
MenuRef
CFBagRef
CFSetRef
CFURLRef
CTRunRef
CFDataRef
CFDateRef
CFHostRef
CFNullRef
CFTreeRef
CFTypeRef
CFUUIDRef
CGFontRef
CGPathRef
CTFontRef
CTLineRef
DADiskRef
DRBurnRef
DRFileRef
DRTypeRef
HIViewRef
KCItemRef
LSMMapRef
MDItemRef
ODNodeRef
SecACLRef
SecKeyRef
ABGroupRef
AXValueRef
CFArrayRef
CFErrorRef
CGColorRef
CGEventRef
CGImageRef
CGLayerRef
CMClockRef
CTFrameRef
ControlRef
DREraseRef
DRTrackRef
HIShapeRef
InkTextRef
LSMTextRef
MDLabelRef
MDQueryRef
ODQueryRef
SKIndexRef
SecCodeRef
SecTaskRef
ABPersonRef
ABPickerRef
ABRecordRef
CFBundleRef
CFLocaleRef
CFNumberRef
CFPlugInRef
CFSocketRef
CFStringRef
CGRegionRef
CMBufferRef
CVBufferRef
DRDeviceRef
DRFolderRef
HIObjectRef
KCSearchRef
ODRecordRef
SKSearchRef
SecTrustRef
CFBooleanRef
CFRunLoopRef
CFXMLNodeRef
CFXMLTreeRef
CGContextRef
CGPDFPageRef
CGPatternRef
CGShadingRef
CTTextTabRef
DASessionRef
HIArchiveRef
HIToolbarRef
IOSurfaceRef
InkStrokeRef
LSMResultRef
NavDialogRef
ODContextRef
ODSessionRef
SKSummaryRef
SecAccessRef
SecPolicyRef
VTSessionRef
AXObserverRef
CFCalendarRef
CFMachPortRef
CFTimeZoneRef
CGFunctionRef
CGGradientRef
CMSDecoderRef
CMSEncoderRef
CMTimebaseRef
CSIdentityRef
DRFSObjectRef
IOHIDQueueRef
IOHIDValueRef
PasteboardRef
SKDocumentRef
SSLContextRef
AXUIElementRef
CFAllocatorRef
CFBitVectorRef
CFXMLParserRef
CTGlyphInfoRef
DADissenterRef
IOHIDDeviceRef
QLThumbnailRef
SecIdentityRef
SecKeychainRef
SecPasswordRef
TranslationRef
VTFrameSiloRef
ABMultiValueRef
CFBinaryHeapRef
CFDictionaryRef
CFMutableBagRef
CFMutableSetRef
CFNetServiceRef
CFReadStreamRef
CGColorSpaceRef
CMMemoryPoolRef
CTTypesetterRef
ColorSyncCMMRef
DRAudioTrackRef
IOHIDElementRef
IOHIDManagerRef
JRSUIControlRef
SCBondStatusRef
SCNetworkSetRef
SecTransformRef
ABAddressBookRef
CFHTTPMessageRef
CFMessagePortRef
CFMutableDataRef
CFWriteStreamRef
CGDisplayModeRef
CGEventSourceRef
CGImageSourceRef
CGMutablePathRef
CGPDFDocumentRef
CGPSConverterRef
CMBlockBufferRef
CMBufferQueueRef
CMSimpleQueueRef
CTFramesetterRef
CTRunDelegateRef
CVDisplayLinkRef
CVImageBufferRef
CVPixelBufferRef
DCSDictionaryRef
DRBurnSessionRef
DRCDTextBlockRef
HIObjectClassRef
HIToolbarItemRef
JRSUIRendererRef
MouseTrackingRef
SCPreferencesRef
SKSearchGroupRef
SecStaticCodeRef
CFCharacterSetRef
CFFileSecurityRef
CFMutableArrayRef
CFPropertyListRef
CFRunLoopTimerRef
CGDataConsumerRef
CGDataProviderRef
CMSampleBufferRef
CVMetalTextureRef
CVOpenGLBufferRef
DREraseSessionRef
EventLoopTimerRef
FSFileSecurityRef
GLKMatrixStackRef
HIMutableShapeRef
SCDynamicStoreRef
SecCertificateRef
SecRequirementRef
TISInputSourceRef
ABSearchElementRef
CFDateFormatterRef
CFMutableStringRef
CFNetDiagnosticRef
CFRunLoopSourceRef
CFURLEnumeratorRef
CGDisplayStreamRef
CGImageMetadataRef
CSIdentityQueryRef
CVOpenGLTextureRef
FSFileOperationRef
QLPreviewBubbleRef
SCBondInterfaceRef
SCVLANInterfaceRef
SKSearchResultsRef
SecKeychainItemRef
SecPolicySearchRef
vImageConverterRef
CFFileDescriptorRef
CFPlugInInstanceRef
CTFontCollectionRef
CTFontDescriptorRef
CTParagraphStyleRef
CTRubyAnnotationRef
ColorSyncProfileRef
FCFontDescriptorRef
IOHIDTransactionRef
LSSharedFileListRef
QLPreviewRequestRef
SCNetworkServiceRef
SecAccessControlRef
CFNumberFormatterRef
CFRunLoopObserverRef
CFStringTokenizerRef
CGSWindowBackdropRef
CMClockOrTimebaseRef
CVOpenGLESTextureRef
CVPixelBufferPoolRef
DAApprovalSessionRef
DRFilesystemTrackRef
IOBluetoothDeviceRef
IOBluetoothObjectRef
SCNetworkProtocolRef
SecGroupTransformRef
SecIdentitySearchRef
SecKeychainSearchRef
WSProtocolHandlerRef
CFAttributedStringRef
CFMutableBitVectorRef
CFUserNotificationRef
CGImageDestinationRef
CGImageMetadataTagRef
CGRegionEnumeratorRef
CMAttachmentBearerRef
CVOpenGLBufferPoolRef
ColorSyncTransformRef
IOBluetoothSDPUUIDRef
QLThumbnailRequestRef
SCNetworkInterfaceRef
VTMultiPassStorageRef
WSMethodInvocationRef
ABMutableMultiValueRef
CFMutableDictionaryRef
CFNetServiceBrowserRef
CFNetServiceMonitorRef
CMFormatDescriptionRef
CSIdentityAuthorityRef
CVMetalTextureCacheRef
SCNetworkConnectionRef
vImageCVImageFormatRef
CFHTTPAuthenticationRef
CFNotificationCenterRef
CVOpenGLTextureCacheRef
DRNotificationCenterRef
LSSharedFileListItemRef
MTAudioProcessingTapRef
VTCompressionSessionRef
CFMutableCharacterSetRef
CGDisplayStreamUpdateRef
SCNetworkReachabilityRef
SecTransformAttributeRef
SecTrustedApplicationRef
CGMutableImageMetadataRef
CVOpenGLESTextureCacheRef
VTDecompressionSessionRef
VTPixelTransferSessionRef
CMTextFormatDescriptionRef
CTMutableFontCollectionRef
ColorSyncMutableProfileRef
IOBluetoothL2CAPChannelRef
SKIndexDocumentIteratorRef
CMAudioFormatDescriptionRef
CMMuxedFormatDescriptionRef
CMVideoFormatDescriptionRef
IOBluetoothRFCOMMChannelRef
vImageConstCVImageFormatRef
CFMutableAttributedStringRef
IOBluetoothSDPDataElementRef
CMMetadataFormatDescriptionRef
CMTimeCodeFormatDescriptionRef
IOBluetoothSDPServiceRecordRef
IOBluetoothUserNotificationRef
IOBluetoothPairingControllerRef
QTComponentPropertyListenersRef
SecTransformStringOrAttributeRef
CMClosedCaptionFormatDescriptionRef
IOBluetoothDeviceSelectorControllerRef
IOBluetoothServiceBrowserControllerRef
Selector
BOOL
NSInteger
NSUInteger
CGFloat
UInt8
UInt16
UInt32
UInt64
UInt128
Void
Float
NSNotificationName
<swift-imported-modules>
<bridging-header-import>
shims
-fsyntax-only
__swift__
-fPIC
-fmodule-feature
-Werror=non-modular-include-in-framework-module
-fobjc-runtime=ios-7.0
objective-c++
objective-c
-std=
-DSWIFT_SDK_OVERLAY_APPKIT_EPOCH=2
-DSWIFT_SDK_OVERLAY_FOUNDATION_EPOCH=8
-DSWIFT_SDK_OVERLAY2_SCENEKIT_EPOCH=3
-DSWIFT_SDK_OVERLAY_GAMEPLAYKIT_EPOCH=1
-DSWIFT_SDK_OVERLAY_SPRITEKIT_EPOCH=1
-DSWIFT_SDK_OVERLAY_COREIMAGE_EPOCH=2
-DSWIFT_SDK_OVERLAY_DISPATCH_EPOCH=2
-DSWIFT_SDK_OVERLAY_PTHREAD_EPOCH=1
-DSWIFT_SDK_OVERLAY_COREGRAPHICS_EPOCH=0
-DSWIFT_SDK_OVERLAY_UIKIT_EPOCH=2
-DSWIFT_CLASS_EXTRA=
__SWIFT_COMPILER_VERSION
-fmodule-map-file=
-nostdsysteminc
include
-fno-modules-validate-system-headers
-detailed-preprocessing-record
-fmodule-format=raw
-fmodule-format=obj
-iapinotes-modules
apinotes
-fno-stack-check
-mcpu=
-target-variant-sdk-version=
-fansi-escape-codes
failed to create directory '
extern int __swift __attribute__((unavailable));
objectAtIndexedSubscript
setObject
atIndexedSubscript
objectForKeyedSubscript
forKeyedSubscript
#include "
Private
APIs deprecated as of iOS 7 and earlier are unavailable in Swift
APIs deprecated as of iOS 12 and earlier are not imported as 'async'
APIs deprecated as of watchOS 5 and earlier are not imported as 'async'
APIs deprecated as of macOS 10.9 and earlier are unavailable in Swift
APIs deprecated as of macOS 10.14 and earlier are not imported as 'async'
macos_app_extension
ios_app_extension
maccatalyst_app_extension
tvos_app_extension
watchos_app_extension
openbsd
windows
<imports>
glibc.modulemap
__ObjC
MacTypes
CarbonCore
OSServices
Darwin
CoreServices
import-hack-
#pragma clang module import 
-only-use-extra-clang-opts
UIEdgeInsetsZero
UIOffsetZero
@MainActor
@MainActor(unsafe)
@UIActor
Core Foundation objects are automatically memory managed
completing import of
import-clang-decl
importing
importing (mirrored)
load-all-members
loading import-as-members from
(bridging header)
...for
superseded by import of 
importing (inherited)
This Objective-C class has only been forward-declared; import its owning module to use it
NSOrderedSet
NSEnumerator
NSMeasurement
cannot find Swift declaration for this class
cannot find Swift declaration for this protocol
Functions that may return more than one time (annotated with the 'returns_twice' attribute) are unavailable in Swift
__Unnamed_
__Anonymous_field
use [] to construct an empty option set
newValue
'id' is not available in Swift; use 'Any'
Int8
Int16
Int64
Float32
Float64
Float80
Byte
DarwinBoolean
uint8_t
uint16_t
uint32_t
uint64_t
int8_t
int16_t
int32_t
int64_t
intptr_t
uintptr_t
ptrdiff_t
size_t
ssize_t
CVaListPointer
__va_list
dispatch_block_t
Dispatch
_DispatchBlock
dispatch_data_t
ObjectiveC
AnyClass
CoreGraphics
ObjCBool
WinSDK
WindowsBool
_rawValue
<unnamed-clang-decl>
classifying
CF_ENUM
CF_OPTIONS
importing macro
use 'nil' instead of this imported macro
self:
Notification
__operatorSubscriptConst
__operatorSubscript
Code
delegate
__CxxTemplateInst
NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES
__null
@_unsafeSendable
@_unsafeMainActor
varargs
attributes
info
NSObject
CChar
CWideChar
CBool
CFloat16
CFloat
CDouble
CLongDouble
NSString
nsigned
Base name -> entry mappings:
  subscript:
  init:
  deinit:
Categories: 
Globals-as-members mapping:
swift.lookup
decl ID #
macro ID #
macro with name ID #
in submodule #
Macro
.cpp
.c++
.cxx
.hpp
.h++
.hxx
.mmi
clang-scan-deps dependency
-fno-implicit-modules
-fno-implicit-module-maps
-remove-preceeding-explicit-module-build-incompatible-options
-fsystem-module
__inferred_module.map
-save-temps
-fcolor-diagnostics
Error while opening fixed database: 
fixed-compilation-database
Reads plain-text flags file
clang-tool
compile_flags.txt
Cannot resolve relative paths
Path is ambiguous
/std:
inferred from 
json-compilation-database
Reads JSON formatted compilation databases
Error while opening JSON database: 
Error while parsing YAML.
Expected array.
Expected object.
Expected strings as key.
Expected value.
Expected sequence as value.
Only strings are allowed in 'arguments'.
Expected string as value.
Unknown key: "
Missing key: "file".
Missing key: "command" or "arguments".
Missing key: "directory".
.exe
compile_commands.json
clang Invocation:
Skipping 
. Error while getting an absolute path: 
Could not get working directory: 
. Compile command not found.
Cannot chdir into "
clang_tool
Error while processing 
Error when trying to restore working dir: 
mode
cfg-implicit-dtors
cfg-temporary-dtors
cfg-lifetime
cfg-loopexit
cfg-rich-constructors
cfg-scopes
cfg-expand-default-aggr-inits
c++-template-inlining
c++-stdlib-inlining
c++-allocator-inlining
c++-shared_ptr-inlining
c++-temp-dtor-inlining
suppress-null-return-paths
avoid-suppressing-null-argument-paths
suppress-inlined-defensive-checks
c++-container-inlining
suppress-c++-stdlib
crosscheck-with-z3
report-in-main-source-file
stable-report-filename
serialize-stats
objc-inlining
prune-paths
add-pop-up-notes
cfg-conditional-static-initializers
faux-bodies
elide-constructors
inline-lambdas
widen-loops
unroll-loops
notes-as-events
aggressive-binary-operation-simplification
eagerly-assume
experimental-enable-naive-ctu-analysis
expand-macros
display-ctu-progress
track-conditions
track-conditions-debug
apply-fixits
display-checker-name
ctu-import-threshold
ctu-import-cpp-threshold
ipa-always-inline-size
graph-trim-interval
min-cfg-size-treat-functions-as-large
max-symbol-complexity
max-times-inline-large
max-inlinable-size
max-nodes
region-store-small-struct-limit
ctu-dir
ctu-index-name
ctu-invocation-list
model-path
c++-inlining
exploration_strategy
silence-checkers
clang LLVM compiler
clang_based_tool
-resource-dir=
v8@?0
%7.4f] 
%s: %s
com.apple.console
Level
Message
<<INVALID>>
UIDRegistryImpl
ter:
(access_notes reason='
(note name='
 is_special_name
 objc=
 objc_name='
 dynamic=
invalid declaration name
invalid selector
ObjC
Dynamic
ObjCName
cannot have an 'ObjCName' if 'ObjC' is false
Reason
Notes
TypeDeclsFromWhereClauseRequest
Actor
Sequence
IteratorProtocol
RawRepresentable
Equatable
Hashable
Comparable
Error
_ErrorCodeProtocol
OptionSet
CaseIterable
SIMDScalar
BinaryInteger
_BridgedNSError
_BridgedStoredNSError
_CFObject
_SwiftNewtypeWrapper
CodingKey
Encodable
Decodable
Sendable
UnsafeSendable
_ObjectiveCBridgeable
_DestructorSafeContainer
StringInterpolationProtocol
AdditiveArithmetic
Differentiable
AsyncSequence
AsyncIteratorProtocol
FloatingPoint
ExpressibleByArrayLiteral
ExpressibleByBooleanLiteral
ExpressibleByDictionaryLiteral
ExpressibleByExtendedGraphemeClusterLiteral
ExpressibleByFloatLiteral
ExpressibleByIntegerLiteral
ExpressibleByStringInterpolation
ExpressibleByStringLiteral
ExpressibleByNilLiteral
ExpressibleByUnicodeScalarLiteral
_ExpressibleByColorLiteral
_ExpressibleByImageLiteral
_ExpressibleByFileReferenceLiteral
_ExpressibleByBuiltinBooleanLiteral
_ExpressibleByBuiltinExtendedGraphemeClusterLiteral
_ExpressibleByBuiltinFloatLiteral
_ExpressibleByBuiltinIntegerLiteral
_ExpressibleByBuiltinStringLiteral
_ExpressibleByBuiltinUnicodeScalarLiteral
AllCases
allCases
allKeys
alloc
allocWithZone
allZeros
ArrayLiteralElement
_bridgeToObjectiveC
buildArray
buildBlock
buildEither
buildExpression
buildFinalResult
buildIf
buildLimitedAvailability
buildOptional
Change
_code
CodingKeys
codingPath
combine
container
Context
CoreMedia
CVarArg
debugDescription
decode
decodeIfPresent
Decoder
decoder
_Differentiation
dynamicallyCall
dynamicMember
_enclosingInstance
encode
encodeIfPresent
Encoder
encoder
enqueue
erasing
errorDomain
forKey
from
fromRaw
hasher
hashValue
initStorage
initialValue
into
intValue
invalidValue
KeyedDecodingContainer
KeyedEncodingContainer
keyedBy
makeIterator
makeAsyncIterator
nestedContainer
Iterator
AsyncIterator
$main
next
_nsErrorDomain
NSDirectionalEdgeInsets
NSEdgeInsets
_ObjectiveCType
Optional
_OptionalNilComparisonType
projected
rawValue
RawValue
second
storage
stringValue
superDecoder
superEncoder
_TtCs12_SwiftObject
SwiftNativeNSObject
toRaw
typeMismatch
UIEdgeInsets
underlyingError
_value
Void
with
withArguments
withKeywordArguments
wrapped
wrapperValue
_UnknownLayout
_Trivial
_TrivialAtMost
_RefCountedObject
_NativeRefCountedObject
_Class
_NativeClass
__derived_enum_less_than
AssignmentPrecedence
CastingPrecedence
DefaultPrecedence
FunctionArrowPrecedence
NilCoalescingPrecedence
TernaryPrecedence
_MaxBuiltinIntegerType
IntegerLiteralType
nilLiteral
_MaxBuiltinFloatType
FloatLiteralType
floatLiteral
_builtinFloatLiteral
BooleanLiteralType
_builtinBooleanLiteral
booleanLiteral
ExtendedGraphemeClusterLiteralType
_builtinExtendedGraphemeClusterLiteral
extendedGraphemeClusterLiteral
UnicodeScalarLiteralType
_builtinUnicodeScalarLiteral
unicodeScalarLiteral
stringLiteral
_builtinStringLiteral
StringLiteralType
stringInterpolation
StringInterpolation
literalCapacity
interpolationCount
appendLiteral
appendInterpolation
$interpolation
arrayLiteral
dictionaryLiteral
className
_defaultActorInitialize
_defaultActorDestroy
_ErrorType
_nsError
OSLogMessage
OSLog
OSLogType
LocalizedStringKey
AtomicLoadOrdering
AtomicStoreOrdering
AtomicUpdateOrdering
move
TangentVector
Bool
Int64
Int32
Int16
Int8
UInt
UInt64
UInt32
UInt16
UInt8
Float
Double
Float80
String
StaticString
Substring
Array
Dictionary
CollectionDifference
AnyHashable
MutableCollection
Hasher
AnyKeyPath
PartialKeyPath
KeyPath
WritableKeyPath
ReferenceWritableKeyPath
UnsafeMutableRawPointer
UnsafeRawPointer
UnsafeMutablePointer
UnsafePointer
OpaquePointer
AutoreleasingUnsafeMutablePointer
UnsafeBufferPointer
UnsafeMutableBufferPointer
UnsafeRawBufferPointer
UnsafeMutableRawBufferPointer
Unmanaged
Never
RangeReplaceableCollection
EncodingError
DecodingError
Result
NSError
NSNumber
NSValue
NSObject
UnsafeContinuation
_hashValue
reserveCapacityForAppend
array.reserve_capacity_for_append
_stdlib_isOSVersionAtLeast
_stdlib_isVariantOSVersionAtLeast
_stdlib_isOSVersionAtLeastOrVariantVersionAtLeast
_arrayForceCast
_arrayConditionalCast
_dictionaryUpCast
_dictionaryDownCast
_dictionaryDownCastConditional
_setUpCast
_setDownCast
_setDownCastConditional
_convertPointerToPointerArgument
_convertInOutToPointerArgument
_convertMutableArrayToPointerArgument
_convertConstArrayToPointerArgument
_convertConstStringToUTF8PointerArgument
_allocateUninitializedArray
_deallocateUninitializedArray
_finalizeUninitializedArray
_forceBridgeFromObjectiveC
_conditionallyBridgeFromObjectiveC
_forceBridgeFromObjectiveC_bridgeable
_conditionallyBridgeFromObjectiveC_bridgeable
_bridgeAnythingToObjectiveC
_bridgeAnyObjectToAny
_convertToAnyHashable
_unexpectedError
_diagnoseUnexpectedNilOptional
_diagnoseUnexpectedEnumCase
_diagnoseUnexpectedEnumCaseValue
_getErrorEmbeddedNSError
unsafeBitCast
_getAtKeyPath
_getAtAnyKeyPath
_getAtPartialKeyPath
_setAtWritableKeyPath
_setAtReferenceWritableKeyPath
swap
_unimplementedInitializer
_undefined
loading extensions for
looking for
...in
loading derivative function configurations for
NSErrorPointer
NSInteger
NSUInteger
NSZone
pointee
Node is NULL
TypeDecoder.h:%u: Node kind %u "%.*s" - %s
no children.
TypeDecoder.h:%u: Node kind %u "%.*s" - fewer children (%zu) than required (2)
is not TypeList
TypeDecoder.h:%u: Node kind %u "%.*s" - expected 1 generic argument, saw %zu
wrong node kind or no text
no children
Metatype/ExistentialMetatype Node had a different kind when re-checked
failed to decode protocol type
TypeDecoder.h:%u: Node kind %u "%.*s" - expected 1 child, saw %zu
TypeDecoder.h:%u: Node kind %u "%.*s" - fewer children (%zu) than required (%u)
failed to decode function type
expected text
expected grandchildren
expected convention name
@async
failed to decode function parameter
failed to decode function part
unexpected kind
TypeDecoder.h:%u: Node kind %u "%.*s" - got %zu errors
expected layout
unhandled field type
expected type list
expected dependent generic signature
TypeDecoder.h:%u: Node kind %u "%.*s" - fewer children (%zu) than required (1)
more substitutions than generic params
TypeDecoder.h:%u: Node kind %u "%.*s" - fewer children (%zu) than required (3)
unexpected kind or no index
unknown error
TypeDecoder.h:%u: Node kind %u "%.*s" - Number of node children (%zu) less than required (2)
TypeDecoder.h:%u: Node kind %u "%.*s" - Number of parentContext children (%zu) less than required (2)
Failed to create type decl
@in_constant
@inout_aliasable
@owned
@out
stored
read_coroutine
stored_with_observers
inherited_with_observers
mutable_addressor
modify_coroutine
materialize_to_temporary
stored_with_didset
inherited_with_didset
(file)
local context
explicit closure discriminator=
autoclosure discriminator=
 extension
pattern binding initializer
default argument initializer
property wrapper initializer
top-level code
Generic environment:
Generic parameters:
_read
_modify
unsafeAddress
unsafeMutableAddress
clang decl of:
external path: 
 where 
parameter_list
 range=
parameter 
 apiName=
 type='
 interface type='
 inout
 shared
 owned
 variadic
 autoclosure
 nonEphemeral
default_arg
 expression=
'anonname=
stored property
(invalid_conformance)
(abstract_conformance protocol=
 lazy
(conditional requirements unable to be computed)
specialized
(conditional requirements unable to be computed)
_conformance type=
 protocol=
 (details printed above)
assoc_type req=
 type=
value req=
 witness=
(none)
(dynamic)
substitution_map generic_signature=
<nullptr>
substitution 
<<unresolved concrete type>>
conformance type=
record
namespace
typedef
anonymous tag
@interface
@protocol
pattern_paren
 implicit
pattern_tuple
 names=
pattern_named
pattern_any
pattern_typed
pattern_let
pattern_var
pattern_is
pattern_enum_element
pattern_optional_some
pattern_bool
 true)
 false)
pattern_expr
enum_decl
 resilient
 non-resilient
<null type>
 access=
 override=
 final
 @objc
 dynamic
 @_dynamicReplacement(for: "
 hoisted
 trailing_semi
 inherits: 
 where requirements: 
struct_decl
class_decl
 @_staticInitializeObjCMetadata
 requirement signature=
opaque_type
 naming_decl=
 opaque_interface=
 underlying:
<<<unresolved>>>
generic_type_param
 depth=
 index=
 superclass='
associated_type_decl
 default=
 overridden=
 non_swift
var_decl
 let
 type
 readImpl=
 immutable
 writeImpl=
 readWriteImpl=
subscript_decl
constructor_decl
 required
 failable=
 foreign_async=
,completion_handler_param=
,error_param=
 foreign_error=
,owned
,unowned
,param=
,paramtype=
,resulttype=
ZeroResult
NonZeroResult
ZeroPreservedResult
NilResult
NonNilError
designated
convenience_factory
factory
result
opaque_result_decl
destructor_decl
func_decl
accessor_decl
_for=
enum_element_decl
extension_decl
top_level_code_decl
import_decl
 exported
 kind=
if_config_decl
#if:
#else:
 active
elements
pound_diagnostic_decl
precedence_group_decl 
associativity 
assignment 
left
right
missing_member_decl 
pattern_binding_decl
Original init:
Processed init:
enum_case_decl
infix_operator_decl
identifier #
prefix_operator_decl
postfix_operator_decl
brace_stmt
(**NULL STATEMENT**)
return_stmt
yield_stmt
defer_stmt
if_stmt
pattern
#available
guard_stmt
while_stmt
do_stmt
do_catch_stmt
repeat_while_stmt
for_each_stmt
(where
switch_stmt
case_stmt
 @unknown
case_body_variables
case_label_item
 default
break_stmt
continue_stmt
fallthrough_stmt
fail_stmt
throw_stmt
pound_assert
 message=
error_expr
 location=
nil_literal_expr
 initializer=
boolean_literal_expr
 value=
 builtin_initializer=
integer_literal_expr
 negative
float_literal_expr
 builtin_type='
string_literal_expr
 encoding=
unicodeScalar
magic_identifier_literal_expr
interpolated_string_literal_expr
 trailing_quote_loc=
 literal_capacity=
 interpolation_count=
 builder_init=
 result_init=
(**NULL EXPRESSION**)
object_literal
 kind='
 arg_labels=
discard_assignment_expr
declref_expr
 decl=
 function_ref=
ordinary
direct_to_storage
direct_to_impl
super_ref_expr
type_expr
 typerepr='
other_constructor_ref_expr
dot_syntax_base_ignored
overloaded_decl_ref_expr
 name=
 number_of_decls=
 decls=[
unresolved_decl_ref_expr
member_ref_expr
 super
subscript_expr
dynamic_member_ref_expr
dynamic_subscript_expr
unresolved_specialize_expr
unresolved_member_expr
unresolved_dot_expr
 field '
sequence_expr
paren_expr
 trailing-closure
dot_self_expr
await_expr
unresolved_member_chain_expr
try_expr
force_try_expr
optional_try_expr
tuple_expr
<<tuple element default value>>
array_expr
dictionary_expr
keypath_application_expr
tuple_element_expr
 field #
capture_list
closure_expr
 single-expression
 implicit-self
 inherits-actor-context
 discriminator=
 actor-isolated=
 global-actor-isolated=
 escaping
 concurrent
autoclosure_expr
inout_expr
vararg_expansion_expr
metatype_expr
rebind_self_in_constructor_expr
opaque_value_expr
property_wrapper_value_placeholder_expr
applied_property_wrapper_expr
default_argument_expr
 default_args_owner=
 param=
bind_optional_expr
optional_evaluation_expr
force_value_expr
 implicit_iuo_unwrap
open_existential_expr
make_temporarily_escapable_expr
call_expr
 nothrow
prefix_unary_expr
postfix_unary_expr
binary_expr
dot_syntax_call_expr
constructor_ref_call_expr
load_expr
destructure_tuple_expr
 destructured=
unresolvedtype_conversion_expr
function_conversion_expr
covariant_function_conversion_expr
covariant_return_conversion_expr
implicitly_unwrapped_function_conversion_expr
metatype_conversion_expr
collection_upcast_expr
key_conversion
value_conversion
erasure_expr
any_hashable_erasure_expr
bridge_to_objc_expr
bridge_from_objc_expr
conditional_bridge_from_objc_expr
 conversion=
derived_to_base_expr
archetype_to_super_expr
inject_into_optional
class_metatype_to_object
existential_metatype_to_object
protocol_metatype_to_object
inout_to_pointer
 nonaccessing
array_to_pointer
string_to_pointer
pointer_to_pointer
foreign_object_conversion
unevaluated_instance
underlying_to_opaque_expr
differentiable_function_extract_original
linear_function_extract_original
linear_to_differentiable_function
forced_checked_cast_expr
writtenType='
conditional_checked_cast_expr
is_subtype_expr
coerce_expr
arrow
if_expr
enum_is_case_expr
assign_expr
code_completion_expr
unresolved_pattern_expr
lazy_initializer_expr
editor_placeholder_expr
 trailing_angle_bracket_loc=
semantic_expr
objc_selector_expr
keypath_expr
 objc
components
invalid
 decl='
unresolved_property
 decl_name='
unresolved_subscript
identity
tuple_element 
dict_key
  key='
objc_string_literal
parsed_root
parsed_path
key_path_dot_expr
one_way_expr
tap_expr
 var=
type_error
type_attributed
 attrs=
type_ident
component
 id='
 bind=
type_function
 async 
 throws 
type_array
type_dictionary
type_optional
type_implicitly_unwrapped_optional
type_tuple
type_composite
type_metatype
type_protocol
type_opaque_return
type_placeholder
type_inout
type_shared
type_owned
type_fixed
 location=@
 location=<<invalid>>
sil_box
sil_box_field
 mutable
error_type
original_type
<<null>>
unresolved_type
placeholder_type
type_variable
dependent_member_type
placeholder_type_repr
builtin_integer_type
bit_width
word_sized
builtin_integer_literal_type
builtin_executor_ref_type
builtin_float_type
builtin_job_type
builtin_raw_pointer_type
builtin_raw_unsafe_continuation_type
builtin_native_object_type
builtin_bridge_object_type
builtin_unsafe_value_buffer_type
builtin_default_actor_storage_type
builtin_vector_type
num_elements
tuple_type
tuple_type_elt
vararg
nonEphemeral
weak_storage_type
unowned_storage_type
unmanaged_storage_type
enum_type
decl
struct_type
class_type
protocol_type
bound_generic_class_type
bound_generic_enum_type
bound_generic_struct_type
unbound_generic_type
metatype_type
existential_metatype_type
module_type
dynamic_self_type
primary_archetype_type
address
 layout=
conforms_to
nested_type
<<unresolved>>
opened_archetype_type
opened_existential
opened_existential_id
nested_archetype_type
assoc_type
generic_type_param_type
depth
index
function_type
representation
clang_type
global_actor
function_params
num_params
param
internal_name
generic_function_type
generic_sig
sil_function_type
sil_block_storage_type
sil_box_type
sil_token_type
protocol_composition_type
 any_object
lvalue_type
inout_type
type_variable_type
paren_type
type_alias_type
 underlying=
array_slice_type
optional_type
dictionary_type
_AD__
__DF__
__PB__
__Succ__
__Pred__
mangling type for debugger
Bf16_
Bf32_
Bf64_
Bf80_
Bf128_
#keyPath
#assert
#sourceLocation
#warning
#error
#else
#elseif
#endif
#available
#fileLiteral
<#code#>
#if compiler(>=5.3) && 
#endif
Cannot pretty-print a null type
<null>
(null)
conforms_to: 
layout: 
superclass: 
same_type: 
unresolved
coercion
value_cast
array_downcast
dictionary_downcast
set_downcast
bridging_coercion
 module 
specialize <
inherit (
 = Any
@_inheritsConvenienceInitializers
@_hasMissingDesignatedInitializers
@_hasStorage 
 { get 
set }
@autoclosure 
/*not inherited*/ 
 /* condition */
/* placeholder for 
 (vtable entries: 
 (field offsets: 
(set)
@error_type 
<<error type>>
<<unresolvedtype>>
<<placeholder for 
decl = 
<<hole>>
@sil_weak 
@sil_unowned 
@sil_unmanaged 
@thin 
@thick 
@objc_metatype 
.Protocol
module<
@dynamic_self 
@_opaqueReturnTypeOf(
) __
(return type of 
@opened("
@_NO_EXTINFO 
@differentiable 
@differentiable(_linear) 
@differentiable(_forward) 
@differentiable(reverse) 
@convention
, cType: 
@substituted 
 for
@yield_once 
@yield_many 
witness_method: 
@pseudogeneric
@noescape
@callee_owned 
@callee_guaranteed 
) -> 
@yields 
@error 
@block_storage 
 var 
 let 
 & AnyObject
@lvalue 
 == 
@in 
@in_constant 
@in_guaranteed 
@inout 
@inout_aliasable 
@owned 
@guaranteed 
@out 
@unowned_inner_pointer 
@autoreleased 
 && 
Scope
ASTSourceFileScope
GenericParamScope
AbstractFunctionDeclScope
ParameterListScope
FunctionBodyScope
DefaultArgumentInitializerScope
AttachedPropertyWrapperScope
PatternEntryDeclScope
PatternEntryInitializerScope
ConditionalClausePatternUseScope
ConditionalClauseInitializerScope
CaptureListScope
ClosureParametersScope
TopLevelCodeScope
SpecializeAttributeScope
DifferentiableAttributeScope
SubscriptDeclScope
EnumElementScope
GuardStmtBodyScope
RepeatWhileScope
DoCatchStmtScope
ForEachStmtScope
ForEachPatternScope
CaseLabelItemScope
CaseStmtBodyScope
(swift::ASTSourceFileScope*) 
Decl
Body
Where
implicit 
<no body>
param 
entry 
[invalid source range]
malformed optional pointer conversion
verifying ranges
invalid source range for expression: 
bad source range for expression: 
child source range not contained within its parent: 
  parent range: 
  child range: 
a type variable escaped the type checker
Found opened existential archetype 
 outside enclosing OpenExistentialExpr
AST verification error: archetype outside of generic context: 
Archetype 
 not allowed 
in this context
Archetype generic signature: 
Context generic signature: 
does not appear
 inside its own generic environment
Interface type: 
Contextual type: 
Nested type 
 of archetype 
 is dependent type 
expression has no type
verifying decl reference
reference with inout type 
unspecialized reference with polymorphic type 
TypeExpr must have metatype type
verifying MemberRefExpr
Member reference is missing declaration
Member reference to a non-VarDecl
Member reference to an inout type
Member reference into an unopened existential type
verifying SubscriptExpr
Subscript expression is missing subscript declaration
verifying DynamicMemberRefExpr
verifying DynamicSubscriptExpr
verifying IdentityExpr
Unexpected types in IdentityExpr
verifying AnyTryExpr
AnyTryExpr and sub-expression
different types for 
verifying OptionalTryExpr
OptionalTryExpr and sub-expression
OptionalTryExpr result type is not optional
tuple_expr element type mismatch:
  field: 
  element: 
verifying KeyPathApplicationExpr
AnyKeyPath application base is not an rvalue
AnyKeyPath application result must be Any?
PartialKeyPath application base doesn't match type
PartialKeyPath application result must be Any?
KeyPath application base doesn't match type
KeyPath application result doesn't match type
WritableKeyPath base and result don't match lvalue-ness
WritableKeyPath application base doesn't match type
WritableKeyPath application result doesn't match type
ReferenceWritableKeyPath base and result don't match lvalue-ness
ReferenceWritableKeyPath application base doesn't match type
ReferenceWritableKeyPath application result doesn't match type
invalid key path type
verifying TupleElementExpr
base and result of TupleElementExpr
base of TupleElementExpr does not have tuple type: 
field index 
 for TupleElementExpr is out of range [0,
TupleElementExpr and the corresponding tuple element
lvalue-ness of 
 do not match: 
qualification of 
 do not match
type is an lvalue of lvalue type: 
type is an inout of inout type: 
verifying closure
a closure should have a function type
a closure must have a unique discriminator in its context
a closure in non-local context should be parented by an initializer or REPL context
closure in non-local context not grandparented by its enclosing function
closure in local context not parented by its enclosing function
a closure expression should have a valid discriminator
result of InOutExpr
object types for InOutExpr
type is not an l-value in 
verifying DynamicTypeExpr
DynamicTypeExpr must have metatype type
base type of .Type expression
verifying OpaqueValueExpr
OpaqueValueExpr not introduced at this point in AST
Multiple references to unique OpaqueValueExpr
verifying BindOptionalExpr
BindOptional expression is out of its depth
optional object type
optional operation must preserve lvalue-ness of base
Optional evaluation should not produce an lvalue
OptionalEvaluation cannot change type
verifying MakeTemporarilyEscapableExpr
MakeTemporarilyEscapableExpr type does not match subexpression
MakeTemporarilyEscapableExpr subexpression is not a call
MakeTemporarilyEscapableExpr call does not call function
MakeTemporarilyEscapableExpr called function is not noescape
MakeTemporarilyEscapableExpr call argument is not a function
MakeTemporarilyEscapableExpr closure type is not a closure
MakeTemporarilyEscapableExpr opaque value type is not a closure
MakeTemporarilyEscapableExpr closure and opaque value type don't match
verifying ApplyExpr
callee of apply expression does not have function type:
result of ApplyExpr does not match result type of callee:
Argument type does not match parameter type in ApplyExpr:
Argument type: 
Parameter types: 
apply expression is not marked as throwing or non-throwing
apply expression is marked as throwing, but function operanddoes not have a throwing function type
Function application's isSuper() bit mismatch.
verifying LoadExpr
Immediate ParenExpr/ForceValueExpr should preceed a LoadExpr
verifying DestructureTupleExpr
Input type mismatch in DestructureTupleExpr
Result type mismatch in DestructureTupleExpr
verifying MetatypeConversion
result of MetatypeConversionExpr
source of MetatypeConversionExpr
trivial MetatypeConversionExpr:
MetatypeConversionExpr
 is not a metatype: 
 is not a superclass of 
 for 
subtype conversion in 
 is invalid: 
verifying ErasureExpr
ErasureExpr result is not an existential: 
ErasureExpr concrete metatype is not a subtype of the existential metatype
Destination type: 
Source type: 
ErasureExpr from non-metatype to existential metatype
Destination type: 
ErasureExpr from non-class to existential that requires a class
Destination type: 
ErasureExpr from class to existential with a superclass constraint that does not match the class
Destination type: 
ErasureExpr is missing conformance for required protocol
AnyHashable declaration could not be found
Hashable declaration could not be found
AnyHashableErasureExpr and the standard AnyHashable type
conformance on AnyHashableErasureExpr was not for Hashable
type 
 should not have an abstract conformance to 
conforming type does not match conformance
conforming type:
conformance:
verifying DerivedToBaseExpr
trivial DerivedToBaseExpr:
DerivedToBaseExpr does not involve class types:
DerivedToBaseExpr
verifying InjectIntoOptionalExpr
InjectIntoOptionalExpr is not of Optional type
InjectIntoOptionalExpr operand is not of the value type
verifying ClassMetatypeToObject
source of ClassMetatypeToObject
ClassMetatypeToObject with non-class metatype:
ClassMetatypeToObject does not produce AnyObject:
verifying ExistentialMetatypeToObject
source of ExistentialMetatypeToObject
ExistentialMetatypeToObject with non-existential metatype:
ExistentialMetatypeToObject with non-class existential metatype:
ExistentialMetatypeToObject does not produce AnyObject:
verifying ProtocolMetatypeToObject
source of ProtocolMetatypeToObject
ProtocolMetatypeToObject with existential metatype:
ProtocolMetatypeToObject with non-existential metatype:
ProtocolMetatypeToObject with non-ObjC-protocol metatype:
ProtocolMetatypeToObject does not produce class:
verifying InOutToPointer
InOutToPointerExpr in unexpected position!
InOutToPointer does not convert from inout to pointer:
InOutToPointer is converting an array to a void pointer; ArrayToPointer should be used instead:
verifying ArrayToPointer
ArrayToPointer in invalid position?!
ArrayToPointer does not convert from array:
ArrayToPointer does not convert to pointer:
verifying StringToPointer
StringToPointer does not convert from string:
StringToPointer does not convert to pointer:
StringToPointer converts to non-const pointer:
verifying PointerToPointer
PointerToPointer does not convert between pointer types:
verifying CheckCastExpr
CheckedCast kind not resolved
verifying CoerceExpr
coercion type and subexpression type
verifying IfExpr
IfExpr condition is not Bool
then and else branches of an if-expr
enum_is_decl operand is not an enum: 
enum_is_decl case is not member of enum:
  case: 
  type: 
assignment operands
LHS of assignment
invalid source range for statement: 
bad source range for statement: 
Expected ReturnStmt not to have a result. A constructor should not return a result. Returned expression: 
return type
condition type
conditional binding type
'fail' statement outside of initializer
non-failable initializer contains a 'fail' statement
throw expression
throw operand
exception type does not exist in 
invalid source range for pattern: 
bad source range for pattern: 
invalid source range for decl: 
backwards source range for decl: 
verifying 
every Decl should have a DeclContext
Decl's DeclContext not in sync with DeclContext's parent
verifying access
non-public decl has no formal access scope
effective access should use 'fileprivate' for 'private'
verifying overridden
cannot override a decl in the same DeclContext
verifying override
'override' attribute outside of a class or protocol
verifying protocol conformance
 has a protocol conformance that is still being checked 
AST verification error: conformance of 
 to protocol 
 is in the wrong context.
Owning context:
Conformance context:
 is missing type witness for 
 is missing witness for 
error: not enough conformances for requirement signature
error: wrong protocol in signature conformances: have 
, expected 
error: too many conformances for requirement signature
extension of 
checked decl cannot have error type
Interface type contains archetypes
decl cannot be 'open'
decl cannot be both 'open' and 'final'
verifying ClassDecl
every class should have at most one destructor, explicitly provided or created by the type checker
verifying ProtocolDecl
@objc protocols should be class protocols as well
verifying GenericTypeParamDecl
DeclContext of GenericTypeParamDecl does not have generic params
GenericParamList can only have outer parameters in an extension
GenericTypeParamDecl has incorrect depth
GenericTypeParamDecl has incorrect index
GenericTypeParamDecl not found in GenericParamList; incorrect depth or wrong DeclContext
verifying AssociatedTypeDecl
AssociatedTypeDecl should only occur inside a protocol
verifying VarDecl
VarDecl has non-materializable type: 
VarDecl has an ownership attribute, but its type is not a ReferenceStorageType: 
VarDecl has no ownership attribute, but its type is a ReferenceStorageType: 
property getter has parameters
property and getter have mismatched types: '
' vs. '
property setter has non-Void result type
property setter has no parameters
property setter has 2+ parameters
property and setter param have mismatched types:
implicitly unwrapped optional attribute should only be set on VarDecl with optional type
parent CaseStmt of VarDecl does not have any case body decls?!
AbstractStorageDecl's setter access is out of sync with the access actually on the setter
AbstractStorageDecl::isGetterMutating is out of sync with whether the getter is actually mutating
AbstractStorageDecl::isSetterMutating is out of sync with whether the setter is actually mutating
AbstractStorageDecl::isGetterMutating is out of sync with whether immutable addressor is mutating
AbstractStorageDecl::isGetterMutating is out of sync with whether read accessor is mutating
AbstractStorageDecl::isSetterMutating is out of sync with whether mutable addressor is mutating
AbstractStorageDecl::isSetterMutating is out of sync with whether modify addressor is mutating
invalid type source range for decl: 
verifying ConstructorDecl
verifying AbstractFunctionDecl
Function name does not match its argument pattern (
 elements instead of 
Function full name doesn't match parameter's arg name
ConstructorDecls outside structs, classes or enums should be marked invalid
Initializer has result optionality/failability mismatch
implicitly unwrapped optional attribute should only be set on constructors with optional return types
Expected failable constructor if result is IUO
Functions in generic context must have an interface type
Functions in generic context must have a generic signature
Unresolved dependent member type 
Interface type of method must return a function
@objc method async but does not have a foreign async 
convention
@objc method has a foreign async convention but is not 
@objc method throws but does not have a foreign error 
function 'throws' location does not match 'throws' flag
function 'throws' flag does not match function type
foreign error convention on non-@objc, non-@_cdecl function
verifying DestructorDecl
DestructorDecl cannot be generic
DestructorDecls outside classes should be marked invalid
verifying FuncDecl
hasForcedStaticDispatch() set on non-accessor
hasForcedStaticDispatch() set on accessor that's opaque for its storage
mutating function is not an instance member
mutating function in a class
mutating function does not have inout 'self'
non-mutating function has inout 'self'
implicitly unwrapped optional attribute should only be set on functions with optional return types
verifying AccessorDecl
Missing storage decl
Property and accessor do not match for 'final'
Property and accessor do not match for 'dynamic'
Property and accessor do not match for '@objc'
storage declaration has different accessor for this kind
verifying EnumElementDecl
EnumElementDecl has wrong DeclContext
bad start location of IfConfigDecl first clause
bad start location of IfConfigDecl clause
invalid IfConfigDecl clause condition start location
invalid IfConfigDecl clause element start location
invalid IfConfigDecl end location
verifying EnumCaseDecl
EnumCaseDecl should not have attributes
private
fileprivate
internal
public
open
autoclosure
convention
noescape
escaping
differentiable
noDerivative
async
Sendable
block_storage
dynamic_self
sil_weak
sil_unowned
sil_unmanaged
error
inout
inout_aliasable
in_guaranteed
in_constant
owned
unowned_inner_pointer
guaranteed
autoreleased
callee_owned
callee_guaranteed
objc_metatype
opened
pseudogeneric
yields
yield_once
yield_many
thin
thick
_opaqueReturnTypeOf
_functionBuilder
@_semantics
@_alignment
@_silgen_name
@_originallyDefinedIn
(module: 
@available
_PackageDescription
, unavailable
, deprecated
, introduced: 
, deprecated: 
, obsoleted: 
, renamed: "
, message: 
, message: "Not available in Swift"
@_cdecl("
@_private(sourceFile: "
@_swift_native_objc_runtime_base
target: 
@_implements
@_objcRuntimeName
@_clangImporterSynthesizedType
(originalTypeName: "
", manglingForKind: "
@_dynamicReplacement
(for: "
@_typeEraser
(unsafe)
@_projectedValueProperty
@derivative
(of: 
@transpose
@completionHandlerAsync
", completionHandleIndex: 
inline(never)
inline(__always)
actorIndependent(unsafe)
_optimize(none)
_optimize(speed)
_optimize(size)
_effects(readnone)
_effects(readonly)
_effects(releasenone)
_effects(readwrite)
_effects(unspecified)
<<raw doc comment>>
<<ObjC bridged>>
<<synthesized protocol>>
<<custom>>
unsafe
swift 
_PackageDescription 
_forward
_linear
wrt: 
unowned(unsafe)
TypeEraserHasViableInitRequest
ResolveTypeEraserTypeRequest
SpecializeAttrTargetDeclRequest
DifferentiableAttributeTypeCheckRequest
DerivativeAttrOriginalDeclRequest
(parameters=
 results=
 where=
applyTranspose
original function type '
has no semantic results ('Void' result)
has multiple semantic results
has no differentiability parameters
has non-differentiable differentiability parameter 
has non-differentiable result 
(original=@
nondifferentiable
forward
reverse
normal
 config=
platform_version_constraint_availability_spec
 platform='
 version='
other_constraint_availability_spec
release
not_intrinsic
llvm.abs
llvm.addressofreturnaddress
llvm.adjust.trampoline
llvm.annotation
llvm.assume
llvm.bitreverse
llvm.bswap
llvm.call.preallocated.arg
llvm.call.preallocated.setup
llvm.call.preallocated.teardown
llvm.canonicalize
llvm.ceil
llvm.clear_cache
llvm.codeview.annotation
llvm.convert.from.fp16
llvm.convert.to.fp16
llvm.copysign
llvm.coro.alloc
llvm.coro.alloca.alloc
llvm.coro.alloca.free
llvm.coro.alloca.get
llvm.coro.async.context.alloc
llvm.coro.async.context.dealloc
llvm.coro.async.resume
llvm.coro.async.size.replace
llvm.coro.begin
llvm.coro.destroy
llvm.coro.done
llvm.coro.end
llvm.coro.end.async
llvm.coro.frame
llvm.coro.free
llvm.coro.id
llvm.coro.id.async
llvm.coro.id.retcon
llvm.coro.id.retcon.once
llvm.coro.noop
llvm.coro.param
llvm.coro.prepare.async
llvm.coro.prepare.retcon
llvm.coro.promise
llvm.coro.resume
llvm.coro.save
llvm.coro.size
llvm.coro.subfn.addr
llvm.coro.suspend
llvm.coro.suspend.async
llvm.coro.suspend.retcon
llvm.cos
llvm.ctlz
llvm.ctpop
llvm.cttz
llvm.dbg.addr
llvm.dbg.declare
llvm.dbg.label
llvm.dbg.value
llvm.debugtrap
llvm.donothing
llvm.eh.dwarf.cfa
llvm.eh.exceptioncode
llvm.eh.exceptionpointer
llvm.eh.recoverfp
llvm.eh.return.i32
llvm.eh.return.i64
llvm.eh.sjlj.callsite
llvm.eh.sjlj.functioncontext
llvm.eh.sjlj.longjmp
llvm.eh.sjlj.lsda
llvm.eh.sjlj.setjmp
llvm.eh.sjlj.setup.dispatch
llvm.eh.typeid.for
llvm.eh.unwind.init
llvm.exp
llvm.exp2
llvm.expect
llvm.expect.with.probability
llvm.experimental.constrained.ceil
llvm.experimental.constrained.cos
llvm.experimental.constrained.exp
llvm.experimental.constrained.exp2
llvm.experimental.constrained.fadd
llvm.experimental.constrained.fcmp
llvm.experimental.constrained.fcmps
llvm.experimental.constrained.fdiv
llvm.experimental.constrained.floor
llvm.experimental.constrained.fma
llvm.experimental.constrained.fmul
llvm.experimental.constrained.fmuladd
llvm.experimental.constrained.fpext
llvm.experimental.constrained.fptosi
llvm.experimental.constrained.fptoui
llvm.experimental.constrained.fptrunc
llvm.experimental.constrained.frem
llvm.experimental.constrained.fsub
llvm.experimental.constrained.llrint
llvm.experimental.constrained.llround
llvm.experimental.constrained.log
llvm.experimental.constrained.log10
llvm.experimental.constrained.log2
llvm.experimental.constrained.lrint
llvm.experimental.constrained.lround
llvm.experimental.constrained.maximum
llvm.experimental.constrained.maxnum
llvm.experimental.constrained.minimum
llvm.experimental.constrained.minnum
llvm.experimental.constrained.nearbyint
llvm.experimental.constrained.pow
llvm.experimental.constrained.powi
llvm.experimental.constrained.rint
llvm.experimental.constrained.round
llvm.experimental.constrained.roundeven
llvm.experimental.constrained.sin
llvm.experimental.constrained.sitofp
llvm.experimental.constrained.sqrt
llvm.experimental.constrained.trunc
llvm.experimental.constrained.uitofp
llvm.experimental.deoptimize
llvm.experimental.gc.relocate
llvm.experimental.gc.result
llvm.experimental.gc.statepoint
llvm.experimental.guard
llvm.experimental.patchpoint.i64
llvm.experimental.patchpoint.void
llvm.experimental.stackmap
llvm.experimental.vector.extract
llvm.experimental.vector.insert
llvm.experimental.widenable.condition
llvm.fabs
llvm.floor
llvm.flt.rounds
llvm.fma
llvm.fmuladd
llvm.fptosi.sat
llvm.fptoui.sat
llvm.frameaddress
llvm.fshl
llvm.fshr
llvm.gcread
llvm.gcroot
llvm.gcwrite
llvm.get.active.lane.mask
llvm.get.dynamic.area.offset
llvm.hwasan.check.memaccess
llvm.hwasan.check.memaccess.shortgranules
llvm.icall.branch.funnel
llvm.init.trampoline
llvm.instrprof.increment
llvm.instrprof.increment.step
llvm.instrprof.value.profile
llvm.invariant.end
llvm.invariant.start
llvm.is.constant
llvm.launder.invariant.group
llvm.lifetime.end
llvm.lifetime.start
llvm.llrint
llvm.llround
llvm.load.relative
llvm.localaddress
llvm.localescape
llvm.localrecover
llvm.log
llvm.log10
llvm.log2
llvm.loop.decrement
llvm.loop.decrement.reg
llvm.lrint
llvm.lround
llvm.masked.compressstore
llvm.masked.expandload
llvm.masked.gather
llvm.masked.load
llvm.masked.scatter
llvm.masked.store
llvm.matrix.column.major.load
llvm.matrix.column.major.store
llvm.matrix.multiply
llvm.matrix.transpose
llvm.maximum
llvm.maxnum
llvm.memcpy
llvm.memcpy.element.unordered.atomic
llvm.memcpy.inline
llvm.memmove
llvm.memmove.element.unordered.atomic
llvm.memset
llvm.memset.element.unordered.atomic
llvm.minimum
llvm.minnum
llvm.mssa.exit.read
llvm.nearbyint
llvm.objc.arc.annotation.bottomup.bbend
llvm.objc.arc.annotation.bottomup.bbstart
llvm.objc.arc.annotation.topdown.bbend
llvm.objc.arc.annotation.topdown.bbstart
llvm.objc.autorelease
llvm.objc.autoreleasePoolPop
llvm.objc.autoreleasePoolPush
llvm.objc.autoreleaseReturnValue
llvm.objc.clang.arc.use
llvm.objc.copyWeak
llvm.objc.destroyWeak
llvm.objc.initWeak
llvm.objc.loadWeak
llvm.objc.loadWeakRetained
llvm.objc.moveWeak
llvm.objc.release
llvm.objc.retain
llvm.objc.retain.autorelease
llvm.objc.retainAutorelease
llvm.objc.retainAutoreleaseReturnValue
llvm.objc.retainAutoreleasedReturnValue
llvm.objc.retainBlock
llvm.objc.retainedObject
llvm.objc.storeStrong
llvm.objc.storeWeak
llvm.objc.sync.enter
llvm.objc.sync.exit
llvm.objc.unretainedObject
llvm.objc.unretainedPointer
llvm.objc.unsafeClaimAutoreleasedReturnValue
llvm.objectsize
llvm.pcmarker
llvm.pow
llvm.powi
llvm.prefetch
llvm.preserve.array.access.index
llvm.preserve.struct.access.index
llvm.preserve.union.access.index
llvm.pseudoprobe
llvm.ptr.annotation
llvm.ptrauth.auth
llvm.ptrauth.blend
llvm.ptrauth.resign
llvm.ptrauth.sign
llvm.ptrauth.sign.generic
llvm.ptrauth.strip
llvm.ptrmask
llvm.read_register
llvm.read_volatile_register
llvm.readcyclecounter
llvm.returnaddress
llvm.rint
llvm.round
llvm.roundeven
llvm.sadd.sat
llvm.sadd.with.overflow
llvm.sdiv.fix
llvm.sdiv.fix.sat
llvm.set.loop.iterations
llvm.sideeffect
llvm.sin
llvm.smax
llvm.smin
llvm.smul.fix
llvm.smul.fix.sat
llvm.smul.with.overflow
llvm.sponentry
llvm.sqrt
llvm.ssa.copy
llvm.sshl.sat
llvm.ssub.sat
llvm.ssub.with.overflow
llvm.stackguard
llvm.stackprotector
llvm.stackrestore
llvm.stacksave
llvm.start.loop.iterations
llvm.strip.invariant.group
llvm.swift.async.context.addr
llvm.test.set.loop.iterations
llvm.thread.pointer
llvm.trap
llvm.trunc
llvm.type.checked.load
llvm.type.test
llvm.uadd.sat
llvm.uadd.with.overflow
llvm.ubsantrap
llvm.udiv.fix
llvm.udiv.fix.sat
llvm.umax
llvm.umin
llvm.umul.fix
llvm.umul.fix.sat
llvm.umul.with.overflow
llvm.ushl.sat
llvm.usub.sat
llvm.usub.with.overflow
llvm.va_copy
llvm.va_end
llvm.va_start
llvm.var.annotation
llvm.vector.reduce.add
llvm.vector.reduce.and
llvm.vector.reduce.fadd
llvm.vector.reduce.fmax
llvm.vector.reduce.fmin
llvm.vector.reduce.fmul
llvm.vector.reduce.mul
llvm.vector.reduce.or
llvm.vector.reduce.smax
llvm.vector.reduce.smin
llvm.vector.reduce.umax
llvm.vector.reduce.umin
llvm.vector.reduce.xor
llvm.vp.add
llvm.vp.and
llvm.vp.ashr
llvm.vp.lshr
llvm.vp.mul
llvm.vp.or
llvm.vp.sdiv
llvm.vp.shl
llvm.vp.srem
llvm.vp.sub
llvm.vp.udiv
llvm.vp.urem
llvm.vp.xor
llvm.vscale
llvm.write_register
llvm.xray.customevent
llvm.xray.typedevent
llvm.aarch64.addg
llvm.aarch64.clrex
llvm.aarch64.cls
llvm.aarch64.cls64
llvm.aarch64.crc32b
llvm.aarch64.crc32cb
llvm.aarch64.crc32ch
llvm.aarch64.crc32cw
llvm.aarch64.crc32cx
llvm.aarch64.crc32h
llvm.aarch64.crc32w
llvm.aarch64.crc32x
llvm.aarch64.crypto.aesd
llvm.aarch64.crypto.aese
llvm.aarch64.crypto.aesimc
llvm.aarch64.crypto.aesmc
llvm.aarch64.crypto.sha1c
llvm.aarch64.crypto.sha1h
llvm.aarch64.crypto.sha1m
llvm.aarch64.crypto.sha1p
llvm.aarch64.crypto.sha1su0
llvm.aarch64.crypto.sha1su1
llvm.aarch64.crypto.sha256h
llvm.aarch64.crypto.sha256h2
llvm.aarch64.crypto.sha256su0
llvm.aarch64.crypto.sha256su1
llvm.aarch64.dmb
llvm.aarch64.dsb
llvm.aarch64.fjcvtzs
llvm.aarch64.get.fpcr
llvm.aarch64.gmi
llvm.aarch64.hint
llvm.aarch64.irg
llvm.aarch64.irg.sp
llvm.aarch64.isb
llvm.aarch64.ldaxp
llvm.aarch64.ldaxr
llvm.aarch64.ldg
llvm.aarch64.ldxp
llvm.aarch64.ldxr
llvm.aarch64.neon.abs
llvm.aarch64.neon.addhn
llvm.aarch64.neon.addp
llvm.aarch64.neon.bfcvt
llvm.aarch64.neon.bfcvtn
llvm.aarch64.neon.bfcvtn2
llvm.aarch64.neon.bfdot
llvm.aarch64.neon.bfmlalb
llvm.aarch64.neon.bfmlalt
llvm.aarch64.neon.bfmmla
llvm.aarch64.neon.cls
llvm.aarch64.neon.fabd
llvm.aarch64.neon.facge
llvm.aarch64.neon.facgt
llvm.aarch64.neon.faddp
llvm.aarch64.neon.faddv
llvm.aarch64.neon.fcvtas
llvm.aarch64.neon.fcvtau
llvm.aarch64.neon.fcvtms
llvm.aarch64.neon.fcvtmu
llvm.aarch64.neon.fcvtns
llvm.aarch64.neon.fcvtnu
llvm.aarch64.neon.fcvtps
llvm.aarch64.neon.fcvtpu
llvm.aarch64.neon.fcvtxn
llvm.aarch64.neon.fcvtzs
llvm.aarch64.neon.fcvtzu
llvm.aarch64.neon.fmax
llvm.aarch64.neon.fmaxnm
llvm.aarch64.neon.fmaxnmp
llvm.aarch64.neon.fmaxnmv
llvm.aarch64.neon.fmaxp
llvm.aarch64.neon.fmaxv
llvm.aarch64.neon.fmin
llvm.aarch64.neon.fminnm
llvm.aarch64.neon.fminnmp
llvm.aarch64.neon.fminnmv
llvm.aarch64.neon.fminp
llvm.aarch64.neon.fminv
llvm.aarch64.neon.fmlal
llvm.aarch64.neon.fmlal2
llvm.aarch64.neon.fmlsl
llvm.aarch64.neon.fmlsl2
llvm.aarch64.neon.fmulx
llvm.aarch64.neon.frecpe
llvm.aarch64.neon.frecps
llvm.aarch64.neon.frecpx
llvm.aarch64.neon.frintn
llvm.aarch64.neon.frsqrte
llvm.aarch64.neon.frsqrts
llvm.aarch64.neon.ld1x2
llvm.aarch64.neon.ld1x3
llvm.aarch64.neon.ld1x4
llvm.aarch64.neon.ld2
llvm.aarch64.neon.ld2lane
llvm.aarch64.neon.ld2r
llvm.aarch64.neon.ld3
llvm.aarch64.neon.ld3lane
llvm.aarch64.neon.ld3r
llvm.aarch64.neon.ld4
llvm.aarch64.neon.ld4lane
llvm.aarch64.neon.ld4r
llvm.aarch64.neon.pmul
llvm.aarch64.neon.pmull
llvm.aarch64.neon.pmull64
llvm.aarch64.neon.raddhn
llvm.aarch64.neon.rbit
llvm.aarch64.neon.rshrn
llvm.aarch64.neon.rsubhn
llvm.aarch64.neon.sabd
llvm.aarch64.neon.saddlp
llvm.aarch64.neon.saddlv
llvm.aarch64.neon.saddv
llvm.aarch64.neon.scalar.sqxtn
llvm.aarch64.neon.scalar.sqxtun
llvm.aarch64.neon.scalar.uqxtn
llvm.aarch64.neon.sdot
llvm.aarch64.neon.shadd
llvm.aarch64.neon.shll
llvm.aarch64.neon.shsub
llvm.aarch64.neon.smax
llvm.aarch64.neon.smaxp
llvm.aarch64.neon.smaxv
llvm.aarch64.neon.smin
llvm.aarch64.neon.sminp
llvm.aarch64.neon.sminv
llvm.aarch64.neon.smmla
llvm.aarch64.neon.smull
llvm.aarch64.neon.sqabs
llvm.aarch64.neon.sqadd
llvm.aarch64.neon.sqdmulh
llvm.aarch64.neon.sqdmulh.lane
llvm.aarch64.neon.sqdmulh.laneq
llvm.aarch64.neon.sqdmull
llvm.aarch64.neon.sqdmulls.scalar
llvm.aarch64.neon.sqneg
llvm.aarch64.neon.sqrdmulh
llvm.aarch64.neon.sqrdmulh.lane
llvm.aarch64.neon.sqrdmulh.laneq
llvm.aarch64.neon.sqrshl
llvm.aarch64.neon.sqrshrn
llvm.aarch64.neon.sqrshrun
llvm.aarch64.neon.sqshl
llvm.aarch64.neon.sqshlu
llvm.aarch64.neon.sqshrn
llvm.aarch64.neon.sqshrun
llvm.aarch64.neon.sqsub
llvm.aarch64.neon.sqxtn
llvm.aarch64.neon.sqxtun
llvm.aarch64.neon.srhadd
llvm.aarch64.neon.srshl
llvm.aarch64.neon.sshl
llvm.aarch64.neon.sshll
llvm.aarch64.neon.st1x2
llvm.aarch64.neon.st1x3
llvm.aarch64.neon.st1x4
llvm.aarch64.neon.st2
llvm.aarch64.neon.st2lane
llvm.aarch64.neon.st3
llvm.aarch64.neon.st3lane
llvm.aarch64.neon.st4
llvm.aarch64.neon.st4lane
llvm.aarch64.neon.subhn
llvm.aarch64.neon.suqadd
llvm.aarch64.neon.tbl1
llvm.aarch64.neon.tbl2
llvm.aarch64.neon.tbl3
llvm.aarch64.neon.tbl4
llvm.aarch64.neon.tbx1
llvm.aarch64.neon.tbx2
llvm.aarch64.neon.tbx3
llvm.aarch64.neon.tbx4
llvm.aarch64.neon.uabd
llvm.aarch64.neon.uaddlp
llvm.aarch64.neon.uaddlv
llvm.aarch64.neon.uaddv
llvm.aarch64.neon.udot
llvm.aarch64.neon.uhadd
llvm.aarch64.neon.uhsub
llvm.aarch64.neon.umax
llvm.aarch64.neon.umaxp
llvm.aarch64.neon.umaxv
llvm.aarch64.neon.umin
llvm.aarch64.neon.uminp
llvm.aarch64.neon.uminv
llvm.aarch64.neon.ummla
llvm.aarch64.neon.umull
llvm.aarch64.neon.uqadd
llvm.aarch64.neon.uqrshl
llvm.aarch64.neon.uqrshrn
llvm.aarch64.neon.uqshl
llvm.aarch64.neon.uqshrn
llvm.aarch64.neon.uqsub
llvm.aarch64.neon.uqxtn
llvm.aarch64.neon.urecpe
llvm.aarch64.neon.urhadd
llvm.aarch64.neon.urshl
llvm.aarch64.neon.ursqrte
llvm.aarch64.neon.usdot
llvm.aarch64.neon.ushl
llvm.aarch64.neon.ushll
llvm.aarch64.neon.usmmla
llvm.aarch64.neon.usqadd
llvm.aarch64.neon.vcadd.rot270
llvm.aarch64.neon.vcadd.rot90
llvm.aarch64.neon.vcmla.rot0
llvm.aarch64.neon.vcmla.rot180
llvm.aarch64.neon.vcmla.rot270
llvm.aarch64.neon.vcmla.rot90
llvm.aarch64.neon.vcopy.lane
llvm.aarch64.neon.vcvtfp2fxs
llvm.aarch64.neon.vcvtfp2fxu
llvm.aarch64.neon.vcvtfp2hf
llvm.aarch64.neon.vcvtfxs2fp
llvm.aarch64.neon.vcvtfxu2fp
llvm.aarch64.neon.vcvthf2fp
llvm.aarch64.neon.vsli
llvm.aarch64.neon.vsri
llvm.aarch64.sdiv
llvm.aarch64.settag
llvm.aarch64.settag.zero
llvm.aarch64.sisd.fabd
llvm.aarch64.sisd.fcvtxn
llvm.aarch64.space
llvm.aarch64.stg
llvm.aarch64.stgp
llvm.aarch64.stlxp
llvm.aarch64.stlxr
llvm.aarch64.stxp
llvm.aarch64.stxr
llvm.aarch64.subp
llvm.aarch64.sve.abs
llvm.aarch64.sve.adclb
llvm.aarch64.sve.adclt
llvm.aarch64.sve.add
llvm.aarch64.sve.addhnb
llvm.aarch64.sve.addhnt
llvm.aarch64.sve.addp
llvm.aarch64.sve.adrb
llvm.aarch64.sve.adrd
llvm.aarch64.sve.adrh
llvm.aarch64.sve.adrw
llvm.aarch64.sve.aesd
llvm.aarch64.sve.aese
llvm.aarch64.sve.aesimc
llvm.aarch64.sve.aesmc
llvm.aarch64.sve.and
llvm.aarch64.sve.and.z
llvm.aarch64.sve.andv
llvm.aarch64.sve.asr
llvm.aarch64.sve.asr.wide
llvm.aarch64.sve.asrd
llvm.aarch64.sve.bcax
llvm.aarch64.sve.bdep.x
llvm.aarch64.sve.bext.x
llvm.aarch64.sve.bfdot
llvm.aarch64.sve.bfdot.lane
llvm.aarch64.sve.bfmlalb
llvm.aarch64.sve.bfmlalb.lane
llvm.aarch64.sve.bfmlalt
llvm.aarch64.sve.bfmlalt.lane
llvm.aarch64.sve.bfmmla
llvm.aarch64.sve.bgrp.x
llvm.aarch64.sve.bic
llvm.aarch64.sve.bic.z
llvm.aarch64.sve.brka
llvm.aarch64.sve.brka.z
llvm.aarch64.sve.brkb
llvm.aarch64.sve.brkb.z
llvm.aarch64.sve.brkn.z
llvm.aarch64.sve.brkpa.z
llvm.aarch64.sve.brkpb.z
llvm.aarch64.sve.bsl
llvm.aarch64.sve.bsl1n
llvm.aarch64.sve.bsl2n
llvm.aarch64.sve.cadd.x
llvm.aarch64.sve.cdot
llvm.aarch64.sve.cdot.lane
llvm.aarch64.sve.clasta
llvm.aarch64.sve.clasta.n
llvm.aarch64.sve.clastb
llvm.aarch64.sve.clastb.n
llvm.aarch64.sve.cls
llvm.aarch64.sve.clz
llvm.aarch64.sve.cmla.lane.x
llvm.aarch64.sve.cmla.x
llvm.aarch64.sve.cmpeq
llvm.aarch64.sve.cmpeq.wide
llvm.aarch64.sve.cmpge
llvm.aarch64.sve.cmpge.wide
llvm.aarch64.sve.cmpgt
llvm.aarch64.sve.cmpgt.wide
llvm.aarch64.sve.cmphi
llvm.aarch64.sve.cmphi.wide
llvm.aarch64.sve.cmphs
llvm.aarch64.sve.cmphs.wide
llvm.aarch64.sve.cmple.wide
llvm.aarch64.sve.cmplo.wide
llvm.aarch64.sve.cmpls.wide
llvm.aarch64.sve.cmplt.wide
llvm.aarch64.sve.cmpne
llvm.aarch64.sve.cmpne.wide
llvm.aarch64.sve.cnot
llvm.aarch64.sve.cnt
llvm.aarch64.sve.cntb
llvm.aarch64.sve.cntd
llvm.aarch64.sve.cnth
llvm.aarch64.sve.cntp
llvm.aarch64.sve.cntw
llvm.aarch64.sve.compact
llvm.aarch64.sve.convert.from.svbool
llvm.aarch64.sve.convert.to.svbool
llvm.aarch64.sve.dup
llvm.aarch64.sve.dup.x
llvm.aarch64.sve.dupq.lane
llvm.aarch64.sve.eor
llvm.aarch64.sve.eor.z
llvm.aarch64.sve.eor3
llvm.aarch64.sve.eorbt
llvm.aarch64.sve.eortb
llvm.aarch64.sve.eorv
llvm.aarch64.sve.ext
llvm.aarch64.sve.fabd
llvm.aarch64.sve.fabs
llvm.aarch64.sve.facge
llvm.aarch64.sve.facgt
llvm.aarch64.sve.fadd
llvm.aarch64.sve.fadda
llvm.aarch64.sve.faddp
llvm.aarch64.sve.faddv
llvm.aarch64.sve.fcadd
llvm.aarch64.sve.fcmla
llvm.aarch64.sve.fcmla.lane
llvm.aarch64.sve.fcmpeq
llvm.aarch64.sve.fcmpge
llvm.aarch64.sve.fcmpgt
llvm.aarch64.sve.fcmpne
llvm.aarch64.sve.fcmpuo
llvm.aarch64.sve.fcvt
llvm.aarch64.sve.fcvt.bf16f32
llvm.aarch64.sve.fcvt.f16f32
llvm.aarch64.sve.fcvt.f16f64
llvm.aarch64.sve.fcvt.f32f16
llvm.aarch64.sve.fcvt.f32f64
llvm.aarch64.sve.fcvt.f64f16
llvm.aarch64.sve.fcvt.f64f32
llvm.aarch64.sve.fcvtlt.f32f16
llvm.aarch64.sve.fcvtlt.f64f32
llvm.aarch64.sve.fcvtnt.bf16f32
llvm.aarch64.sve.fcvtnt.f16f32
llvm.aarch64.sve.fcvtnt.f32f64
llvm.aarch64.sve.fcvtx.f32f64
llvm.aarch64.sve.fcvtxnt.f32f64
llvm.aarch64.sve.fcvtzs
llvm.aarch64.sve.fcvtzs.i32f16
llvm.aarch64.sve.fcvtzs.i32f64
llvm.aarch64.sve.fcvtzs.i64f16
llvm.aarch64.sve.fcvtzs.i64f32
llvm.aarch64.sve.fcvtzu
llvm.aarch64.sve.fcvtzu.i32f16
llvm.aarch64.sve.fcvtzu.i32f64
llvm.aarch64.sve.fcvtzu.i64f16
llvm.aarch64.sve.fcvtzu.i64f32
llvm.aarch64.sve.fdiv
llvm.aarch64.sve.fdivr
llvm.aarch64.sve.fexpa.x
llvm.aarch64.sve.flogb
llvm.aarch64.sve.fmad
llvm.aarch64.sve.fmax
llvm.aarch64.sve.fmaxnm
llvm.aarch64.sve.fmaxnmp
llvm.aarch64.sve.fmaxnmv
llvm.aarch64.sve.fmaxp
llvm.aarch64.sve.fmaxv
llvm.aarch64.sve.fmin
llvm.aarch64.sve.fminnm
llvm.aarch64.sve.fminnmp
llvm.aarch64.sve.fminnmv
llvm.aarch64.sve.fminp
llvm.aarch64.sve.fminv
llvm.aarch64.sve.fmla
llvm.aarch64.sve.fmla.lane
llvm.aarch64.sve.fmlalb
llvm.aarch64.sve.fmlalb.lane
llvm.aarch64.sve.fmlalt
llvm.aarch64.sve.fmlalt.lane
llvm.aarch64.sve.fmls
llvm.aarch64.sve.fmls.lane
llvm.aarch64.sve.fmlslb
llvm.aarch64.sve.fmlslb.lane
llvm.aarch64.sve.fmlslt
llvm.aarch64.sve.fmlslt.lane
llvm.aarch64.sve.fmmla
llvm.aarch64.sve.fmsb
llvm.aarch64.sve.fmul
llvm.aarch64.sve.fmul.lane
llvm.aarch64.sve.fmulx
llvm.aarch64.sve.fneg
llvm.aarch64.sve.fnmad
llvm.aarch64.sve.fnmla
llvm.aarch64.sve.fnmls
llvm.aarch64.sve.fnmsb
llvm.aarch64.sve.frecpe.x
llvm.aarch64.sve.frecps.x
llvm.aarch64.sve.frecpx
llvm.aarch64.sve.frinta
llvm.aarch64.sve.frinti
llvm.aarch64.sve.frintm
llvm.aarch64.sve.frintn
llvm.aarch64.sve.frintp
llvm.aarch64.sve.frintx
llvm.aarch64.sve.frintz
llvm.aarch64.sve.frsqrte.x
llvm.aarch64.sve.frsqrts.x
llvm.aarch64.sve.fscale
llvm.aarch64.sve.fsqrt
llvm.aarch64.sve.fsub
llvm.aarch64.sve.fsubr
llvm.aarch64.sve.ftmad.x
llvm.aarch64.sve.ftsmul.x
llvm.aarch64.sve.ftssel.x
llvm.aarch64.sve.histcnt
llvm.aarch64.sve.histseg
llvm.aarch64.sve.index
llvm.aarch64.sve.insr
llvm.aarch64.sve.lasta
llvm.aarch64.sve.lastb
llvm.aarch64.sve.ld1
llvm.aarch64.sve.ld1.gather
llvm.aarch64.sve.ld1.gather.index
llvm.aarch64.sve.ld1.gather.scalar.offset
llvm.aarch64.sve.ld1.gather.sxtw
llvm.aarch64.sve.ld1.gather.sxtw.index
llvm.aarch64.sve.ld1.gather.uxtw
llvm.aarch64.sve.ld1.gather.uxtw.index
llvm.aarch64.sve.ld1ro
llvm.aarch64.sve.ld1rq
llvm.aarch64.sve.ld2
llvm.aarch64.sve.ld3
llvm.aarch64.sve.ld4
llvm.aarch64.sve.ldff1
llvm.aarch64.sve.ldff1.gather
llvm.aarch64.sve.ldff1.gather.index
llvm.aarch64.sve.ldff1.gather.scalar.offset
llvm.aarch64.sve.ldff1.gather.sxtw
llvm.aarch64.sve.ldff1.gather.sxtw.index
llvm.aarch64.sve.ldff1.gather.uxtw
llvm.aarch64.sve.ldff1.gather.uxtw.index
llvm.aarch64.sve.ldnf1
llvm.aarch64.sve.ldnt1
llvm.aarch64.sve.ldnt1.gather
llvm.aarch64.sve.ldnt1.gather.index
llvm.aarch64.sve.ldnt1.gather.scalar.offset
llvm.aarch64.sve.ldnt1.gather.uxtw
llvm.aarch64.sve.lsl
llvm.aarch64.sve.lsl.wide
llvm.aarch64.sve.lsr
llvm.aarch64.sve.lsr.wide
llvm.aarch64.sve.mad
llvm.aarch64.sve.match
llvm.aarch64.sve.mla
llvm.aarch64.sve.mla.lane
llvm.aarch64.sve.mls
llvm.aarch64.sve.mls.lane
llvm.aarch64.sve.msb
llvm.aarch64.sve.mul
llvm.aarch64.sve.mul.lane
llvm.aarch64.sve.nand.z
llvm.aarch64.sve.nbsl
llvm.aarch64.sve.neg
llvm.aarch64.sve.nmatch
llvm.aarch64.sve.nor.z
llvm.aarch64.sve.not
llvm.aarch64.sve.orn.z
llvm.aarch64.sve.orr
llvm.aarch64.sve.orr.z
llvm.aarch64.sve.orv
llvm.aarch64.sve.pfirst
llvm.aarch64.sve.pmul
llvm.aarch64.sve.pmullb.pair
llvm.aarch64.sve.pmullt.pair
llvm.aarch64.sve.pnext
llvm.aarch64.sve.prf
llvm.aarch64.sve.prfb.gather.index
llvm.aarch64.sve.prfb.gather.scalar.offset
llvm.aarch64.sve.prfb.gather.sxtw.index
llvm.aarch64.sve.prfb.gather.uxtw.index
llvm.aarch64.sve.prfd.gather.index
llvm.aarch64.sve.prfd.gather.scalar.offset
llvm.aarch64.sve.prfd.gather.sxtw.index
llvm.aarch64.sve.prfd.gather.uxtw.index
llvm.aarch64.sve.prfh.gather.index
llvm.aarch64.sve.prfh.gather.scalar.offset
llvm.aarch64.sve.prfh.gather.sxtw.index
llvm.aarch64.sve.prfh.gather.uxtw.index
llvm.aarch64.sve.prfw.gather.index
llvm.aarch64.sve.prfw.gather.scalar.offset
llvm.aarch64.sve.prfw.gather.sxtw.index
llvm.aarch64.sve.prfw.gather.uxtw.index
llvm.aarch64.sve.ptest.any
llvm.aarch64.sve.ptest.first
llvm.aarch64.sve.ptest.last
llvm.aarch64.sve.ptrue
llvm.aarch64.sve.punpkhi
llvm.aarch64.sve.punpklo
llvm.aarch64.sve.raddhnb
llvm.aarch64.sve.raddhnt
llvm.aarch64.sve.rax1
llvm.aarch64.sve.rbit
llvm.aarch64.sve.rdffr
llvm.aarch64.sve.rdffr.z
llvm.aarch64.sve.rev
llvm.aarch64.sve.revb
llvm.aarch64.sve.revh
llvm.aarch64.sve.revw
llvm.aarch64.sve.rshrnb
llvm.aarch64.sve.rshrnt
llvm.aarch64.sve.rsubhnb
llvm.aarch64.sve.rsubhnt
llvm.aarch64.sve.saba
llvm.aarch64.sve.sabalb
llvm.aarch64.sve.sabalt
llvm.aarch64.sve.sabd
llvm.aarch64.sve.sabdlb
llvm.aarch64.sve.sabdlt
llvm.aarch64.sve.sadalp
llvm.aarch64.sve.saddlb
llvm.aarch64.sve.saddlbt
llvm.aarch64.sve.saddlt
llvm.aarch64.sve.saddv
llvm.aarch64.sve.saddwb
llvm.aarch64.sve.saddwt
llvm.aarch64.sve.sbclb
llvm.aarch64.sve.sbclt
llvm.aarch64.sve.scvtf
llvm.aarch64.sve.scvtf.f16i32
llvm.aarch64.sve.scvtf.f16i64
llvm.aarch64.sve.scvtf.f32i64
llvm.aarch64.sve.scvtf.f64i32
llvm.aarch64.sve.sdiv
llvm.aarch64.sve.sdivr
llvm.aarch64.sve.sdot
llvm.aarch64.sve.sdot.lane
llvm.aarch64.sve.sel
llvm.aarch64.sve.setffr
llvm.aarch64.sve.shadd
llvm.aarch64.sve.shrnb
llvm.aarch64.sve.shrnt
llvm.aarch64.sve.shsub
llvm.aarch64.sve.shsubr
llvm.aarch64.sve.sli
llvm.aarch64.sve.sm4e
llvm.aarch64.sve.sm4ekey
llvm.aarch64.sve.smax
llvm.aarch64.sve.smaxp
llvm.aarch64.sve.smaxv
llvm.aarch64.sve.smin
llvm.aarch64.sve.sminp
llvm.aarch64.sve.sminv
llvm.aarch64.sve.smlalb
llvm.aarch64.sve.smlalb.lane
llvm.aarch64.sve.smlalt
llvm.aarch64.sve.smlalt.lane
llvm.aarch64.sve.smlslb
llvm.aarch64.sve.smlslb.lane
llvm.aarch64.sve.smlslt
llvm.aarch64.sve.smlslt.lane
llvm.aarch64.sve.smmla
llvm.aarch64.sve.smulh
llvm.aarch64.sve.smullb
llvm.aarch64.sve.smullb.lane
llvm.aarch64.sve.smullt
llvm.aarch64.sve.smullt.lane
llvm.aarch64.sve.splice
llvm.aarch64.sve.sqabs
llvm.aarch64.sve.sqadd
llvm.aarch64.sve.sqadd.x
llvm.aarch64.sve.sqcadd.x
llvm.aarch64.sve.sqdecb.n32
llvm.aarch64.sve.sqdecb.n64
llvm.aarch64.sve.sqdecd
llvm.aarch64.sve.sqdecd.n32
llvm.aarch64.sve.sqdecd.n64
llvm.aarch64.sve.sqdech
llvm.aarch64.sve.sqdech.n32
llvm.aarch64.sve.sqdech.n64
llvm.aarch64.sve.sqdecp
llvm.aarch64.sve.sqdecp.n32
llvm.aarch64.sve.sqdecp.n64
llvm.aarch64.sve.sqdecw
llvm.aarch64.sve.sqdecw.n32
llvm.aarch64.sve.sqdecw.n64
llvm.aarch64.sve.sqdmlalb
llvm.aarch64.sve.sqdmlalb.lane
llvm.aarch64.sve.sqdmlalbt
llvm.aarch64.sve.sqdmlalt
llvm.aarch64.sve.sqdmlalt.lane
llvm.aarch64.sve.sqdmlslb
llvm.aarch64.sve.sqdmlslb.lane
llvm.aarch64.sve.sqdmlslbt
llvm.aarch64.sve.sqdmlslt
llvm.aarch64.sve.sqdmlslt.lane
llvm.aarch64.sve.sqdmulh
llvm.aarch64.sve.sqdmulh.lane
llvm.aarch64.sve.sqdmullb
llvm.aarch64.sve.sqdmullb.lane
llvm.aarch64.sve.sqdmullt
llvm.aarch64.sve.sqdmullt.lane
llvm.aarch64.sve.sqincb.n32
llvm.aarch64.sve.sqincb.n64
llvm.aarch64.sve.sqincd
llvm.aarch64.sve.sqincd.n32
llvm.aarch64.sve.sqincd.n64
llvm.aarch64.sve.sqinch
llvm.aarch64.sve.sqinch.n32
llvm.aarch64.sve.sqinch.n64
llvm.aarch64.sve.sqincp
llvm.aarch64.sve.sqincp.n32
llvm.aarch64.sve.sqincp.n64
llvm.aarch64.sve.sqincw
llvm.aarch64.sve.sqincw.n32
llvm.aarch64.sve.sqincw.n64
llvm.aarch64.sve.sqneg
llvm.aarch64.sve.sqrdcmlah.lane.x
llvm.aarch64.sve.sqrdcmlah.x
llvm.aarch64.sve.sqrdmlah
llvm.aarch64.sve.sqrdmlah.lane
llvm.aarch64.sve.sqrdmlsh
llvm.aarch64.sve.sqrdmlsh.lane
llvm.aarch64.sve.sqrdmulh
llvm.aarch64.sve.sqrdmulh.lane
llvm.aarch64.sve.sqrshl
llvm.aarch64.sve.sqrshrnb
llvm.aarch64.sve.sqrshrnt
llvm.aarch64.sve.sqrshrunb
llvm.aarch64.sve.sqrshrunt
llvm.aarch64.sve.sqshl
llvm.aarch64.sve.sqshlu
llvm.aarch64.sve.sqshrnb
llvm.aarch64.sve.sqshrnt
llvm.aarch64.sve.sqshrunb
llvm.aarch64.sve.sqshrunt
llvm.aarch64.sve.sqsub
llvm.aarch64.sve.sqsub.x
llvm.aarch64.sve.sqsubr
llvm.aarch64.sve.sqxtnb
llvm.aarch64.sve.sqxtnt
llvm.aarch64.sve.sqxtunb
llvm.aarch64.sve.sqxtunt
llvm.aarch64.sve.srhadd
llvm.aarch64.sve.sri
llvm.aarch64.sve.srshl
llvm.aarch64.sve.srshr
llvm.aarch64.sve.srsra
llvm.aarch64.sve.sshllb
llvm.aarch64.sve.sshllt
llvm.aarch64.sve.ssra
llvm.aarch64.sve.ssublb
llvm.aarch64.sve.ssublbt
llvm.aarch64.sve.ssublt
llvm.aarch64.sve.ssubltb
llvm.aarch64.sve.ssubwb
llvm.aarch64.sve.ssubwt
llvm.aarch64.sve.st1
llvm.aarch64.sve.st1.scatter
llvm.aarch64.sve.st1.scatter.index
llvm.aarch64.sve.st1.scatter.scalar.offset
llvm.aarch64.sve.st1.scatter.sxtw
llvm.aarch64.sve.st1.scatter.sxtw.index
llvm.aarch64.sve.st1.scatter.uxtw
llvm.aarch64.sve.st1.scatter.uxtw.index
llvm.aarch64.sve.st2
llvm.aarch64.sve.st3
llvm.aarch64.sve.st4
llvm.aarch64.sve.stnt1
llvm.aarch64.sve.stnt1.scatter
llvm.aarch64.sve.stnt1.scatter.index
llvm.aarch64.sve.stnt1.scatter.scalar.offset
llvm.aarch64.sve.stnt1.scatter.uxtw
llvm.aarch64.sve.sub
llvm.aarch64.sve.subhnb
llvm.aarch64.sve.subhnt
llvm.aarch64.sve.subr
llvm.aarch64.sve.sudot.lane
llvm.aarch64.sve.sunpkhi
llvm.aarch64.sve.sunpklo
llvm.aarch64.sve.suqadd
llvm.aarch64.sve.sxtb
llvm.aarch64.sve.sxth
llvm.aarch64.sve.sxtw
llvm.aarch64.sve.tbl
llvm.aarch64.sve.tbl2
llvm.aarch64.sve.tbx
llvm.aarch64.sve.trn1
llvm.aarch64.sve.trn1q
llvm.aarch64.sve.trn2
llvm.aarch64.sve.trn2q
llvm.aarch64.sve.tuple.create2
llvm.aarch64.sve.tuple.create3
llvm.aarch64.sve.tuple.create4
llvm.aarch64.sve.tuple.get
llvm.aarch64.sve.tuple.set
llvm.aarch64.sve.uaba
llvm.aarch64.sve.uabalb
llvm.aarch64.sve.uabalt
llvm.aarch64.sve.uabd
llvm.aarch64.sve.uabdlb
llvm.aarch64.sve.uabdlt
llvm.aarch64.sve.uadalp
llvm.aarch64.sve.uaddlb
llvm.aarch64.sve.uaddlt
llvm.aarch64.sve.uaddv
llvm.aarch64.sve.uaddwb
llvm.aarch64.sve.uaddwt
llvm.aarch64.sve.ucvtf
llvm.aarch64.sve.ucvtf.f16i32
llvm.aarch64.sve.ucvtf.f16i64
llvm.aarch64.sve.ucvtf.f32i64
llvm.aarch64.sve.ucvtf.f64i32
llvm.aarch64.sve.udiv
llvm.aarch64.sve.udivr
llvm.aarch64.sve.udot
llvm.aarch64.sve.udot.lane
llvm.aarch64.sve.uhadd
llvm.aarch64.sve.uhsub
llvm.aarch64.sve.uhsubr
llvm.aarch64.sve.umax
llvm.aarch64.sve.umaxp
llvm.aarch64.sve.umaxv
llvm.aarch64.sve.umin
llvm.aarch64.sve.uminp
llvm.aarch64.sve.uminv
llvm.aarch64.sve.umlalb
llvm.aarch64.sve.umlalb.lane
llvm.aarch64.sve.umlalt
llvm.aarch64.sve.umlalt.lane
llvm.aarch64.sve.umlslb
llvm.aarch64.sve.umlslb.lane
llvm.aarch64.sve.umlslt
llvm.aarch64.sve.umlslt.lane
llvm.aarch64.sve.ummla
llvm.aarch64.sve.umulh
llvm.aarch64.sve.umullb
llvm.aarch64.sve.umullb.lane
llvm.aarch64.sve.umullt
llvm.aarch64.sve.umullt.lane
llvm.aarch64.sve.uqadd
llvm.aarch64.sve.uqadd.x
llvm.aarch64.sve.uqdecb.n32
llvm.aarch64.sve.uqdecb.n64
llvm.aarch64.sve.uqdecd
llvm.aarch64.sve.uqdecd.n32
llvm.aarch64.sve.uqdecd.n64
llvm.aarch64.sve.uqdech
llvm.aarch64.sve.uqdech.n32
llvm.aarch64.sve.uqdech.n64
llvm.aarch64.sve.uqdecp
llvm.aarch64.sve.uqdecp.n32
llvm.aarch64.sve.uqdecp.n64
llvm.aarch64.sve.uqdecw
llvm.aarch64.sve.uqdecw.n32
llvm.aarch64.sve.uqdecw.n64
llvm.aarch64.sve.uqincb.n32
llvm.aarch64.sve.uqincb.n64
llvm.aarch64.sve.uqincd
llvm.aarch64.sve.uqincd.n32
llvm.aarch64.sve.uqincd.n64
llvm.aarch64.sve.uqinch
llvm.aarch64.sve.uqinch.n32
llvm.aarch64.sve.uqinch.n64
llvm.aarch64.sve.uqincp
llvm.aarch64.sve.uqincp.n32
llvm.aarch64.sve.uqincp.n64
llvm.aarch64.sve.uqincw
llvm.aarch64.sve.uqincw.n32
llvm.aarch64.sve.uqincw.n64
llvm.aarch64.sve.uqrshl
llvm.aarch64.sve.uqrshrnb
llvm.aarch64.sve.uqrshrnt
llvm.aarch64.sve.uqshl
llvm.aarch64.sve.uqshrnb
llvm.aarch64.sve.uqshrnt
llvm.aarch64.sve.uqsub
llvm.aarch64.sve.uqsub.x
llvm.aarch64.sve.uqsubr
llvm.aarch64.sve.uqxtnb
llvm.aarch64.sve.uqxtnt
llvm.aarch64.sve.urecpe
llvm.aarch64.sve.urhadd
llvm.aarch64.sve.urshl
llvm.aarch64.sve.urshr
llvm.aarch64.sve.ursqrte
llvm.aarch64.sve.ursra
llvm.aarch64.sve.usdot
llvm.aarch64.sve.usdot.lane
llvm.aarch64.sve.ushllb
llvm.aarch64.sve.ushllt
llvm.aarch64.sve.usmmla
llvm.aarch64.sve.usqadd
llvm.aarch64.sve.usra
llvm.aarch64.sve.usublb
llvm.aarch64.sve.usublt
llvm.aarch64.sve.usubwb
llvm.aarch64.sve.usubwt
llvm.aarch64.sve.uunpkhi
llvm.aarch64.sve.uunpklo
llvm.aarch64.sve.uxtb
llvm.aarch64.sve.uxth
llvm.aarch64.sve.uxtw
llvm.aarch64.sve.uzp1
llvm.aarch64.sve.uzp1q
llvm.aarch64.sve.uzp2
llvm.aarch64.sve.uzp2q
llvm.aarch64.sve.whilege
llvm.aarch64.sve.whilegt
llvm.aarch64.sve.whilehi
llvm.aarch64.sve.whilehs
llvm.aarch64.sve.whilele
llvm.aarch64.sve.whilelo
llvm.aarch64.sve.whilels
llvm.aarch64.sve.whilelt
llvm.aarch64.sve.whilerw.b
llvm.aarch64.sve.whilerw.d
llvm.aarch64.sve.whilerw.h
llvm.aarch64.sve.whilerw.s
llvm.aarch64.sve.whilewr.b
llvm.aarch64.sve.whilewr.d
llvm.aarch64.sve.whilewr.h
llvm.aarch64.sve.whilewr.s
llvm.aarch64.sve.wrffr
llvm.aarch64.sve.xar
llvm.aarch64.sve.zip1
llvm.aarch64.sve.zip1q
llvm.aarch64.sve.zip2
llvm.aarch64.sve.zip2q
llvm.aarch64.tagp
llvm.aarch64.tcancel
llvm.aarch64.tcommit
llvm.aarch64.tstart
llvm.aarch64.ttest
llvm.aarch64.udiv
llvm.amdgcn.alignbit
llvm.amdgcn.alignbyte
llvm.amdgcn.atomic.dec
llvm.amdgcn.atomic.inc
llvm.amdgcn.ballot
llvm.amdgcn.buffer.atomic.add
llvm.amdgcn.buffer.atomic.and
llvm.amdgcn.buffer.atomic.cmpswap
llvm.amdgcn.buffer.atomic.csub
llvm.amdgcn.buffer.atomic.fadd
llvm.amdgcn.buffer.atomic.or
llvm.amdgcn.buffer.atomic.smax
llvm.amdgcn.buffer.atomic.smin
llvm.amdgcn.buffer.atomic.sub
llvm.amdgcn.buffer.atomic.swap
llvm.amdgcn.buffer.atomic.umax
llvm.amdgcn.buffer.atomic.umin
llvm.amdgcn.buffer.atomic.xor
llvm.amdgcn.buffer.load
llvm.amdgcn.buffer.load.format
llvm.amdgcn.buffer.store
llvm.amdgcn.buffer.store.format
llvm.amdgcn.buffer.wbinvl1
llvm.amdgcn.buffer.wbinvl1.sc
llvm.amdgcn.buffer.wbinvl1.vol
llvm.amdgcn.class
llvm.amdgcn.cos
llvm.amdgcn.cubeid
llvm.amdgcn.cubema
llvm.amdgcn.cubesc
llvm.amdgcn.cubetc
llvm.amdgcn.cvt.pk.i16
llvm.amdgcn.cvt.pk.u16
llvm.amdgcn.cvt.pk.u8.f32
llvm.amdgcn.cvt.pknorm.i16
llvm.amdgcn.cvt.pknorm.u16
llvm.amdgcn.cvt.pkrtz
llvm.amdgcn.dispatch.id
llvm.amdgcn.dispatch.ptr
llvm.amdgcn.div.fixup
llvm.amdgcn.div.fmas
llvm.amdgcn.div.scale
llvm.amdgcn.ds.append
llvm.amdgcn.ds.bpermute
llvm.amdgcn.ds.consume
llvm.amdgcn.ds.fadd
llvm.amdgcn.ds.fmax
llvm.amdgcn.ds.fmin
llvm.amdgcn.ds.gws.barrier
llvm.amdgcn.ds.gws.init
llvm.amdgcn.ds.gws.sema.br
llvm.amdgcn.ds.gws.sema.p
llvm.amdgcn.ds.gws.sema.release.all
llvm.amdgcn.ds.gws.sema.v
llvm.amdgcn.ds.ordered.add
llvm.amdgcn.ds.ordered.swap
llvm.amdgcn.ds.permute
llvm.amdgcn.ds.swizzle
llvm.amdgcn.else
llvm.amdgcn.end.cf
llvm.amdgcn.endpgm
llvm.amdgcn.exp
llvm.amdgcn.exp.compr
llvm.amdgcn.fcmp
llvm.amdgcn.fdiv.fast
llvm.amdgcn.fdot2
llvm.amdgcn.fma.legacy
llvm.amdgcn.fmad.ftz
llvm.amdgcn.fmed3
llvm.amdgcn.fmul.legacy
llvm.amdgcn.fract
llvm.amdgcn.frexp.exp
llvm.amdgcn.frexp.mant
llvm.amdgcn.global.atomic.csub
llvm.amdgcn.global.atomic.fadd
llvm.amdgcn.groupstaticsize
llvm.amdgcn.icmp
llvm.amdgcn.if
llvm.amdgcn.if.break
llvm.amdgcn.image.atomic.add.1d
llvm.amdgcn.image.atomic.add.1darray
llvm.amdgcn.image.atomic.add.2d
llvm.amdgcn.image.atomic.add.2darray
llvm.amdgcn.image.atomic.add.2darraymsaa
llvm.amdgcn.image.atomic.add.2dmsaa
llvm.amdgcn.image.atomic.add.3d
llvm.amdgcn.image.atomic.add.cube
llvm.amdgcn.image.atomic.and.1d
llvm.amdgcn.image.atomic.and.1darray
llvm.amdgcn.image.atomic.and.2d
llvm.amdgcn.image.atomic.and.2darray
llvm.amdgcn.image.atomic.and.2darraymsaa
llvm.amdgcn.image.atomic.and.2dmsaa
llvm.amdgcn.image.atomic.and.3d
llvm.amdgcn.image.atomic.and.cube
llvm.amdgcn.image.atomic.cmpswap.1d
llvm.amdgcn.image.atomic.cmpswap.1darray
llvm.amdgcn.image.atomic.cmpswap.2d
llvm.amdgcn.image.atomic.cmpswap.2darray
llvm.amdgcn.image.atomic.cmpswap.2darraymsaa
llvm.amdgcn.image.atomic.cmpswap.2dmsaa
llvm.amdgcn.image.atomic.cmpswap.3d
llvm.amdgcn.image.atomic.cmpswap.cube
llvm.amdgcn.image.atomic.dec.1d
llvm.amdgcn.image.atomic.dec.1darray
llvm.amdgcn.image.atomic.dec.2d
llvm.amdgcn.image.atomic.dec.2darray
llvm.amdgcn.image.atomic.dec.2darraymsaa
llvm.amdgcn.image.atomic.dec.2dmsaa
llvm.amdgcn.image.atomic.dec.3d
llvm.amdgcn.image.atomic.dec.cube
llvm.amdgcn.image.atomic.inc.1d
llvm.amdgcn.image.atomic.inc.1darray
llvm.amdgcn.image.atomic.inc.2d
llvm.amdgcn.image.atomic.inc.2darray
llvm.amdgcn.image.atomic.inc.2darraymsaa
llvm.amdgcn.image.atomic.inc.2dmsaa
llvm.amdgcn.image.atomic.inc.3d
llvm.amdgcn.image.atomic.inc.cube
llvm.amdgcn.image.atomic.or.1d
llvm.amdgcn.image.atomic.or.1darray
llvm.amdgcn.image.atomic.or.2d
llvm.amdgcn.image.atomic.or.2darray
llvm.amdgcn.image.atomic.or.2darraymsaa
llvm.amdgcn.image.atomic.or.2dmsaa
llvm.amdgcn.image.atomic.or.3d
llvm.amdgcn.image.atomic.or.cube
llvm.amdgcn.image.atomic.smax.1d
llvm.amdgcn.image.atomic.smax.1darray
llvm.amdgcn.image.atomic.smax.2d
llvm.amdgcn.image.atomic.smax.2darray
llvm.amdgcn.image.atomic.smax.2darraymsaa
llvm.amdgcn.image.atomic.smax.2dmsaa
llvm.amdgcn.image.atomic.smax.3d
llvm.amdgcn.image.atomic.smax.cube
llvm.amdgcn.image.atomic.smin.1d
llvm.amdgcn.image.atomic.smin.1darray
llvm.amdgcn.image.atomic.smin.2d
llvm.amdgcn.image.atomic.smin.2darray
llvm.amdgcn.image.atomic.smin.2darraymsaa
llvm.amdgcn.image.atomic.smin.2dmsaa
llvm.amdgcn.image.atomic.smin.3d
llvm.amdgcn.image.atomic.smin.cube
llvm.amdgcn.image.atomic.sub.1d
llvm.amdgcn.image.atomic.sub.1darray
llvm.amdgcn.image.atomic.sub.2d
llvm.amdgcn.image.atomic.sub.2darray
llvm.amdgcn.image.atomic.sub.2darraymsaa
llvm.amdgcn.image.atomic.sub.2dmsaa
llvm.amdgcn.image.atomic.sub.3d
llvm.amdgcn.image.atomic.sub.cube
llvm.amdgcn.image.atomic.swap.1d
llvm.amdgcn.image.atomic.swap.1darray
llvm.amdgcn.image.atomic.swap.2d
llvm.amdgcn.image.atomic.swap.2darray
llvm.amdgcn.image.atomic.swap.2darraymsaa
llvm.amdgcn.image.atomic.swap.2dmsaa
llvm.amdgcn.image.atomic.swap.3d
llvm.amdgcn.image.atomic.swap.cube
llvm.amdgcn.image.atomic.umax.1d
llvm.amdgcn.image.atomic.umax.1darray
llvm.amdgcn.image.atomic.umax.2d
llvm.amdgcn.image.atomic.umax.2darray
llvm.amdgcn.image.atomic.umax.2darraymsaa
llvm.amdgcn.image.atomic.umax.2dmsaa
llvm.amdgcn.image.atomic.umax.3d
llvm.amdgcn.image.atomic.umax.cube
llvm.amdgcn.image.atomic.umin.1d
llvm.amdgcn.image.atomic.umin.1darray
llvm.amdgcn.image.atomic.umin.2d
llvm.amdgcn.image.atomic.umin.2darray
llvm.amdgcn.image.atomic.umin.2darraymsaa
llvm.amdgcn.image.atomic.umin.2dmsaa
llvm.amdgcn.image.atomic.umin.3d
llvm.amdgcn.image.atomic.umin.cube
llvm.amdgcn.image.atomic.xor.1d
llvm.amdgcn.image.atomic.xor.1darray
llvm.amdgcn.image.atomic.xor.2d
llvm.amdgcn.image.atomic.xor.2darray
llvm.amdgcn.image.atomic.xor.2darraymsaa
llvm.amdgcn.image.atomic.xor.2dmsaa
llvm.amdgcn.image.atomic.xor.3d
llvm.amdgcn.image.atomic.xor.cube
llvm.amdgcn.image.bvh.intersect.ray
llvm.amdgcn.image.gather4.2d
llvm.amdgcn.image.gather4.2darray
llvm.amdgcn.image.gather4.b.2d
llvm.amdgcn.image.gather4.b.2darray
llvm.amdgcn.image.gather4.b.cl.2d
llvm.amdgcn.image.gather4.b.cl.2darray
llvm.amdgcn.image.gather4.b.cl.cube
llvm.amdgcn.image.gather4.b.cl.o.2d
llvm.amdgcn.image.gather4.b.cl.o.2darray
llvm.amdgcn.image.gather4.b.cl.o.cube
llvm.amdgcn.image.gather4.b.cube
llvm.amdgcn.image.gather4.b.o.2d
llvm.amdgcn.image.gather4.b.o.2darray
llvm.amdgcn.image.gather4.b.o.cube
llvm.amdgcn.image.gather4.c.2d
llvm.amdgcn.image.gather4.c.2darray
llvm.amdgcn.image.gather4.c.b.2d
llvm.amdgcn.image.gather4.c.b.2darray
llvm.amdgcn.image.gather4.c.b.cl.2d
llvm.amdgcn.image.gather4.c.b.cl.2darray
llvm.amdgcn.image.gather4.c.b.cl.cube
llvm.amdgcn.image.gather4.c.b.cl.o.2d
llvm.amdgcn.image.gather4.c.b.cl.o.2darray
llvm.amdgcn.image.gather4.c.b.cl.o.cube
llvm.amdgcn.image.gather4.c.b.cube
llvm.amdgcn.image.gather4.c.b.o.2d
llvm.amdgcn.image.gather4.c.b.o.2darray
llvm.amdgcn.image.gather4.c.b.o.cube
llvm.amdgcn.image.gather4.c.cl.2d
llvm.amdgcn.image.gather4.c.cl.2darray
llvm.amdgcn.image.gather4.c.cl.cube
llvm.amdgcn.image.gather4.c.cl.o.2d
llvm.amdgcn.image.gather4.c.cl.o.2darray
llvm.amdgcn.image.gather4.c.cl.o.cube
llvm.amdgcn.image.gather4.c.cube
llvm.amdgcn.image.gather4.c.l.2d
llvm.amdgcn.image.gather4.c.l.2darray
llvm.amdgcn.image.gather4.c.l.cube
llvm.amdgcn.image.gather4.c.l.o.2d
llvm.amdgcn.image.gather4.c.l.o.2darray
llvm.amdgcn.image.gather4.c.l.o.cube
llvm.amdgcn.image.gather4.c.lz.2d
llvm.amdgcn.image.gather4.c.lz.2darray
llvm.amdgcn.image.gather4.c.lz.cube
llvm.amdgcn.image.gather4.c.lz.o.2d
llvm.amdgcn.image.gather4.c.lz.o.2darray
llvm.amdgcn.image.gather4.c.lz.o.cube
llvm.amdgcn.image.gather4.c.o.2d
llvm.amdgcn.image.gather4.c.o.2darray
llvm.amdgcn.image.gather4.c.o.cube
llvm.amdgcn.image.gather4.cl.2d
llvm.amdgcn.image.gather4.cl.2darray
llvm.amdgcn.image.gather4.cl.cube
llvm.amdgcn.image.gather4.cl.o.2d
llvm.amdgcn.image.gather4.cl.o.2darray
llvm.amdgcn.image.gather4.cl.o.cube
llvm.amdgcn.image.gather4.cube
llvm.amdgcn.image.gather4.l.2d
llvm.amdgcn.image.gather4.l.2darray
llvm.amdgcn.image.gather4.l.cube
llvm.amdgcn.image.gather4.l.o.2d
llvm.amdgcn.image.gather4.l.o.2darray
llvm.amdgcn.image.gather4.l.o.cube
llvm.amdgcn.image.gather4.lz.2d
llvm.amdgcn.image.gather4.lz.2darray
llvm.amdgcn.image.gather4.lz.cube
llvm.amdgcn.image.gather4.lz.o.2d
llvm.amdgcn.image.gather4.lz.o.2darray
llvm.amdgcn.image.gather4.lz.o.cube
llvm.amdgcn.image.gather4.o.2d
llvm.amdgcn.image.gather4.o.2darray
llvm.amdgcn.image.gather4.o.cube
llvm.amdgcn.image.getlod.1d
llvm.amdgcn.image.getlod.1darray
llvm.amdgcn.image.getlod.2d
llvm.amdgcn.image.getlod.2darray
llvm.amdgcn.image.getlod.3d
llvm.amdgcn.image.getlod.cube
llvm.amdgcn.image.getresinfo.1d
llvm.amdgcn.image.getresinfo.1darray
llvm.amdgcn.image.getresinfo.2d
llvm.amdgcn.image.getresinfo.2darray
llvm.amdgcn.image.getresinfo.2darraymsaa
llvm.amdgcn.image.getresinfo.2dmsaa
llvm.amdgcn.image.getresinfo.3d
llvm.amdgcn.image.getresinfo.cube
llvm.amdgcn.image.load.1d
llvm.amdgcn.image.load.1darray
llvm.amdgcn.image.load.2d
llvm.amdgcn.image.load.2darray
llvm.amdgcn.image.load.2darraymsaa
llvm.amdgcn.image.load.2dmsaa
llvm.amdgcn.image.load.3d
llvm.amdgcn.image.load.cube
llvm.amdgcn.image.load.mip.1d
llvm.amdgcn.image.load.mip.1darray
llvm.amdgcn.image.load.mip.2d
llvm.amdgcn.image.load.mip.2darray
llvm.amdgcn.image.load.mip.3d
llvm.amdgcn.image.load.mip.cube
llvm.amdgcn.image.msaa.load.1d
llvm.amdgcn.image.msaa.load.1darray
llvm.amdgcn.image.msaa.load.2d
llvm.amdgcn.image.msaa.load.2darray
llvm.amdgcn.image.msaa.load.2darraymsaa
llvm.amdgcn.image.msaa.load.2dmsaa
llvm.amdgcn.image.msaa.load.3d
llvm.amdgcn.image.msaa.load.cube
llvm.amdgcn.image.sample.1d
llvm.amdgcn.image.sample.1darray
llvm.amdgcn.image.sample.2d
llvm.amdgcn.image.sample.2darray
llvm.amdgcn.image.sample.3d
llvm.amdgcn.image.sample.b.1d
llvm.amdgcn.image.sample.b.1darray
llvm.amdgcn.image.sample.b.2d
llvm.amdgcn.image.sample.b.2darray
llvm.amdgcn.image.sample.b.3d
llvm.amdgcn.image.sample.b.cl.1d
llvm.amdgcn.image.sample.b.cl.1darray
llvm.amdgcn.image.sample.b.cl.2d
llvm.amdgcn.image.sample.b.cl.2darray
llvm.amdgcn.image.sample.b.cl.3d
llvm.amdgcn.image.sample.b.cl.cube
llvm.amdgcn.image.sample.b.cl.o.1d
llvm.amdgcn.image.sample.b.cl.o.1darray
llvm.amdgcn.image.sample.b.cl.o.2d
llvm.amdgcn.image.sample.b.cl.o.2darray
llvm.amdgcn.image.sample.b.cl.o.3d
llvm.amdgcn.image.sample.b.cl.o.cube
llvm.amdgcn.image.sample.b.cube
llvm.amdgcn.image.sample.b.o.1d
llvm.amdgcn.image.sample.b.o.1darray
llvm.amdgcn.image.sample.b.o.2d
llvm.amdgcn.image.sample.b.o.2darray
llvm.amdgcn.image.sample.b.o.3d
llvm.amdgcn.image.sample.b.o.cube
llvm.amdgcn.image.sample.c.1d
llvm.amdgcn.image.sample.c.1darray
llvm.amdgcn.image.sample.c.2d
llvm.amdgcn.image.sample.c.2darray
llvm.amdgcn.image.sample.c.3d
llvm.amdgcn.image.sample.c.b.1d
llvm.amdgcn.image.sample.c.b.1darray
llvm.amdgcn.image.sample.c.b.2d
llvm.amdgcn.image.sample.c.b.2darray
llvm.amdgcn.image.sample.c.b.3d
llvm.amdgcn.image.sample.c.b.cl.1d
llvm.amdgcn.image.sample.c.b.cl.1darray
llvm.amdgcn.image.sample.c.b.cl.2d
llvm.amdgcn.image.sample.c.b.cl.2darray
llvm.amdgcn.image.sample.c.b.cl.3d
llvm.amdgcn.image.sample.c.b.cl.cube
llvm.amdgcn.image.sample.c.b.cl.o.1d
llvm.amdgcn.image.sample.c.b.cl.o.1darray
llvm.amdgcn.image.sample.c.b.cl.o.2d
llvm.amdgcn.image.sample.c.b.cl.o.2darray
llvm.amdgcn.image.sample.c.b.cl.o.3d
llvm.amdgcn.image.sample.c.b.cl.o.cube
llvm.amdgcn.image.sample.c.b.cube
llvm.amdgcn.image.sample.c.b.o.1d
llvm.amdgcn.image.sample.c.b.o.1darray
llvm.amdgcn.image.sample.c.b.o.2d
llvm.amdgcn.image.sample.c.b.o.2darray
llvm.amdgcn.image.sample.c.b.o.3d
llvm.amdgcn.image.sample.c.b.o.cube
llvm.amdgcn.image.sample.c.cd.1d
llvm.amdgcn.image.sample.c.cd.1darray
llvm.amdgcn.image.sample.c.cd.2d
llvm.amdgcn.image.sample.c.cd.2darray
llvm.amdgcn.image.sample.c.cd.3d
llvm.amdgcn.image.sample.c.cd.cl.1d
llvm.amdgcn.image.sample.c.cd.cl.1darray
llvm.amdgcn.image.sample.c.cd.cl.2d
llvm.amdgcn.image.sample.c.cd.cl.2darray
llvm.amdgcn.image.sample.c.cd.cl.3d
llvm.amdgcn.image.sample.c.cd.cl.cube
llvm.amdgcn.image.sample.c.cd.cl.o.1d
llvm.amdgcn.image.sample.c.cd.cl.o.1darray
llvm.amdgcn.image.sample.c.cd.cl.o.2d
llvm.amdgcn.image.sample.c.cd.cl.o.2darray
llvm.amdgcn.image.sample.c.cd.cl.o.3d
llvm.amdgcn.image.sample.c.cd.cl.o.cube
llvm.amdgcn.image.sample.c.cd.cube
llvm.amdgcn.image.sample.c.cd.o.1d
llvm.amdgcn.image.sample.c.cd.o.1darray
llvm.amdgcn.image.sample.c.cd.o.2d
llvm.amdgcn.image.sample.c.cd.o.2darray
llvm.amdgcn.image.sample.c.cd.o.3d
llvm.amdgcn.image.sample.c.cd.o.cube
llvm.amdgcn.image.sample.c.cl.1d
llvm.amdgcn.image.sample.c.cl.1darray
llvm.amdgcn.image.sample.c.cl.2d
llvm.amdgcn.image.sample.c.cl.2darray
llvm.amdgcn.image.sample.c.cl.3d
llvm.amdgcn.image.sample.c.cl.cube
llvm.amdgcn.image.sample.c.cl.o.1d
llvm.amdgcn.image.sample.c.cl.o.1darray
llvm.amdgcn.image.sample.c.cl.o.2d
llvm.amdgcn.image.sample.c.cl.o.2darray
llvm.amdgcn.image.sample.c.cl.o.3d
llvm.amdgcn.image.sample.c.cl.o.cube
llvm.amdgcn.image.sample.c.cube
llvm.amdgcn.image.sample.c.d.1d
llvm.amdgcn.image.sample.c.d.1darray
llvm.amdgcn.image.sample.c.d.2d
llvm.amdgcn.image.sample.c.d.2darray
llvm.amdgcn.image.sample.c.d.3d
llvm.amdgcn.image.sample.c.d.cl.1d
llvm.amdgcn.image.sample.c.d.cl.1darray
llvm.amdgcn.image.sample.c.d.cl.2d
llvm.amdgcn.image.sample.c.d.cl.2darray
llvm.amdgcn.image.sample.c.d.cl.3d
llvm.amdgcn.image.sample.c.d.cl.cube
llvm.amdgcn.image.sample.c.d.cl.o.1d
llvm.amdgcn.image.sample.c.d.cl.o.1darray
llvm.amdgcn.image.sample.c.d.cl.o.2d
llvm.amdgcn.image.sample.c.d.cl.o.2darray
llvm.amdgcn.image.sample.c.d.cl.o.3d
llvm.amdgcn.image.sample.c.d.cl.o.cube
llvm.amdgcn.image.sample.c.d.cube
llvm.amdgcn.image.sample.c.d.o.1d
llvm.amdgcn.image.sample.c.d.o.1darray
llvm.amdgcn.image.sample.c.d.o.2d
llvm.amdgcn.image.sample.c.d.o.2darray
llvm.amdgcn.image.sample.c.d.o.3d
llvm.amdgcn.image.sample.c.d.o.cube
llvm.amdgcn.image.sample.c.l.1d
llvm.amdgcn.image.sample.c.l.1darray
llvm.amdgcn.image.sample.c.l.2d
llvm.amdgcn.image.sample.c.l.2darray
llvm.amdgcn.image.sample.c.l.3d
llvm.amdgcn.image.sample.c.l.cube
llvm.amdgcn.image.sample.c.l.o.1d
llvm.amdgcn.image.sample.c.l.o.1darray
llvm.amdgcn.image.sample.c.l.o.2d
llvm.amdgcn.image.sample.c.l.o.2darray
llvm.amdgcn.image.sample.c.l.o.3d
llvm.amdgcn.image.sample.c.l.o.cube
llvm.amdgcn.image.sample.c.lz.1d
llvm.amdgcn.image.sample.c.lz.1darray
llvm.amdgcn.image.sample.c.lz.2d
llvm.amdgcn.image.sample.c.lz.2darray
llvm.amdgcn.image.sample.c.lz.3d
llvm.amdgcn.image.sample.c.lz.cube
llvm.amdgcn.image.sample.c.lz.o.1d
llvm.amdgcn.image.sample.c.lz.o.1darray
llvm.amdgcn.image.sample.c.lz.o.2d
llvm.amdgcn.image.sample.c.lz.o.2darray
llvm.amdgcn.image.sample.c.lz.o.3d
llvm.amdgcn.image.sample.c.lz.o.cube
llvm.amdgcn.image.sample.c.o.1d
llvm.amdgcn.image.sample.c.o.1darray
llvm.amdgcn.image.sample.c.o.2d
llvm.amdgcn.image.sample.c.o.2darray
llvm.amdgcn.image.sample.c.o.3d
llvm.amdgcn.image.sample.c.o.cube
llvm.amdgcn.image.sample.cd.1d
llvm.amdgcn.image.sample.cd.1darray
llvm.amdgcn.image.sample.cd.2d
llvm.amdgcn.image.sample.cd.2darray
llvm.amdgcn.image.sample.cd.3d
llvm.amdgcn.image.sample.cd.cl.1d
llvm.amdgcn.image.sample.cd.cl.1darray
llvm.amdgcn.image.sample.cd.cl.2d
llvm.amdgcn.image.sample.cd.cl.2darray
llvm.amdgcn.image.sample.cd.cl.3d
llvm.amdgcn.image.sample.cd.cl.cube
llvm.amdgcn.image.sample.cd.cl.o.1d
llvm.amdgcn.image.sample.cd.cl.o.1darray
llvm.amdgcn.image.sample.cd.cl.o.2d
llvm.amdgcn.image.sample.cd.cl.o.2darray
llvm.amdgcn.image.sample.cd.cl.o.3d
llvm.amdgcn.image.sample.cd.cl.o.cube
llvm.amdgcn.image.sample.cd.cube
llvm.amdgcn.image.sample.cd.o.1d
llvm.amdgcn.image.sample.cd.o.1darray
llvm.amdgcn.image.sample.cd.o.2d
llvm.amdgcn.image.sample.cd.o.2darray
llvm.amdgcn.image.sample.cd.o.3d
llvm.amdgcn.image.sample.cd.o.cube
llvm.amdgcn.image.sample.cl.1d
llvm.amdgcn.image.sample.cl.1darray
llvm.amdgcn.image.sample.cl.2d
llvm.amdgcn.image.sample.cl.2darray
llvm.amdgcn.image.sample.cl.3d
llvm.amdgcn.image.sample.cl.cube
llvm.amdgcn.image.sample.cl.o.1d
llvm.amdgcn.image.sample.cl.o.1darray
llvm.amdgcn.image.sample.cl.o.2d
llvm.amdgcn.image.sample.cl.o.2darray
llvm.amdgcn.image.sample.cl.o.3d
llvm.amdgcn.image.sample.cl.o.cube
llvm.amdgcn.image.sample.cube
llvm.amdgcn.image.sample.d.1d
llvm.amdgcn.image.sample.d.1darray
llvm.amdgcn.image.sample.d.2d
llvm.amdgcn.image.sample.d.2darray
llvm.amdgcn.image.sample.d.3d
llvm.amdgcn.image.sample.d.cl.1d
llvm.amdgcn.image.sample.d.cl.1darray
llvm.amdgcn.image.sample.d.cl.2d
llvm.amdgcn.image.sample.d.cl.2darray
llvm.amdgcn.image.sample.d.cl.3d
llvm.amdgcn.image.sample.d.cl.cube
llvm.amdgcn.image.sample.d.cl.o.1d
llvm.amdgcn.image.sample.d.cl.o.1darray
llvm.amdgcn.image.sample.d.cl.o.2d
llvm.amdgcn.image.sample.d.cl.o.2darray
llvm.amdgcn.image.sample.d.cl.o.3d
llvm.amdgcn.image.sample.d.cl.o.cube
llvm.amdgcn.image.sample.d.cube
llvm.amdgcn.image.sample.d.o.1d
llvm.amdgcn.image.sample.d.o.1darray
llvm.amdgcn.image.sample.d.o.2d
llvm.amdgcn.image.sample.d.o.2darray
llvm.amdgcn.image.sample.d.o.3d
llvm.amdgcn.image.sample.d.o.cube
llvm.amdgcn.image.sample.l.1d
llvm.amdgcn.image.sample.l.1darray
llvm.amdgcn.image.sample.l.2d
llvm.amdgcn.image.sample.l.2darray
llvm.amdgcn.image.sample.l.3d
llvm.amdgcn.image.sample.l.cube
llvm.amdgcn.image.sample.l.o.1d
llvm.amdgcn.image.sample.l.o.1darray
llvm.amdgcn.image.sample.l.o.2d
llvm.amdgcn.image.sample.l.o.2darray
llvm.amdgcn.image.sample.l.o.3d
llvm.amdgcn.image.sample.l.o.cube
llvm.amdgcn.image.sample.lz.1d
llvm.amdgcn.image.sample.lz.1darray
llvm.amdgcn.image.sample.lz.2d
llvm.amdgcn.image.sample.lz.2darray
llvm.amdgcn.image.sample.lz.3d
llvm.amdgcn.image.sample.lz.cube
llvm.amdgcn.image.sample.lz.o.1d
llvm.amdgcn.image.sample.lz.o.1darray
llvm.amdgcn.image.sample.lz.o.2d
llvm.amdgcn.image.sample.lz.o.2darray
llvm.amdgcn.image.sample.lz.o.3d
llvm.amdgcn.image.sample.lz.o.cube
llvm.amdgcn.image.sample.o.1d
llvm.amdgcn.image.sample.o.1darray
llvm.amdgcn.image.sample.o.2d
llvm.amdgcn.image.sample.o.2darray
llvm.amdgcn.image.sample.o.3d
llvm.amdgcn.image.sample.o.cube
llvm.amdgcn.image.store.1d
llvm.amdgcn.image.store.1darray
llvm.amdgcn.image.store.2d
llvm.amdgcn.image.store.2darray
llvm.amdgcn.image.store.2darraymsaa
llvm.amdgcn.image.store.2dmsaa
llvm.amdgcn.image.store.3d
llvm.amdgcn.image.store.cube
llvm.amdgcn.image.store.mip.1d
llvm.amdgcn.image.store.mip.1darray
llvm.amdgcn.image.store.mip.2d
llvm.amdgcn.image.store.mip.2darray
llvm.amdgcn.image.store.mip.3d
llvm.amdgcn.image.store.mip.cube
llvm.amdgcn.implicit.buffer.ptr
llvm.amdgcn.implicitarg.ptr
llvm.amdgcn.init.exec
llvm.amdgcn.init.exec.from.input
llvm.amdgcn.interp.mov
llvm.amdgcn.interp.p1
llvm.amdgcn.interp.p1.f16
llvm.amdgcn.interp.p2
llvm.amdgcn.interp.p2.f16
llvm.amdgcn.is.private
llvm.amdgcn.is.shared
llvm.amdgcn.kernarg.segment.ptr
llvm.amdgcn.kill
llvm.amdgcn.ldexp
llvm.amdgcn.lerp
llvm.amdgcn.log.clamp
llvm.amdgcn.loop
llvm.amdgcn.mbcnt.hi
llvm.amdgcn.mbcnt.lo
llvm.amdgcn.mfma.f32.16x16x16f16
llvm.amdgcn.mfma.f32.16x16x1f32
llvm.amdgcn.mfma.f32.16x16x2bf16
llvm.amdgcn.mfma.f32.16x16x4f16
llvm.amdgcn.mfma.f32.16x16x4f32
llvm.amdgcn.mfma.f32.16x16x8bf16
llvm.amdgcn.mfma.f32.32x32x1f32
llvm.amdgcn.mfma.f32.32x32x2bf16
llvm.amdgcn.mfma.f32.32x32x2f32
llvm.amdgcn.mfma.f32.32x32x4bf16
llvm.amdgcn.mfma.f32.32x32x4f16
llvm.amdgcn.mfma.f32.32x32x8f16
llvm.amdgcn.mfma.f32.4x4x1f32
llvm.amdgcn.mfma.f32.4x4x2bf16
llvm.amdgcn.mfma.f32.4x4x4f16
llvm.amdgcn.mfma.i32.16x16x16i8
llvm.amdgcn.mfma.i32.16x16x4i8
llvm.amdgcn.mfma.i32.32x32x4i8
llvm.amdgcn.mfma.i32.32x32x8i8
llvm.amdgcn.mfma.i32.4x4x4i8
llvm.amdgcn.mov.dpp
llvm.amdgcn.mov.dpp8
llvm.amdgcn.mqsad.pk.u16.u8
llvm.amdgcn.mqsad.u32.u8
llvm.amdgcn.msad.u8
llvm.amdgcn.mul.i24
llvm.amdgcn.mul.u24
llvm.amdgcn.permlane16
llvm.amdgcn.permlanex16
llvm.amdgcn.ps.live
llvm.amdgcn.qsad.pk.u16.u8
llvm.amdgcn.queue.ptr
llvm.amdgcn.raw.buffer.atomic.add
llvm.amdgcn.raw.buffer.atomic.and
llvm.amdgcn.raw.buffer.atomic.cmpswap
llvm.amdgcn.raw.buffer.atomic.dec
llvm.amdgcn.raw.buffer.atomic.fadd
llvm.amdgcn.raw.buffer.atomic.inc
llvm.amdgcn.raw.buffer.atomic.or
llvm.amdgcn.raw.buffer.atomic.smax
llvm.amdgcn.raw.buffer.atomic.smin
llvm.amdgcn.raw.buffer.atomic.sub
llvm.amdgcn.raw.buffer.atomic.swap
llvm.amdgcn.raw.buffer.atomic.umax
llvm.amdgcn.raw.buffer.atomic.umin
llvm.amdgcn.raw.buffer.atomic.xor
llvm.amdgcn.raw.buffer.load
llvm.amdgcn.raw.buffer.load.format
llvm.amdgcn.raw.buffer.store
llvm.amdgcn.raw.buffer.store.format
llvm.amdgcn.raw.tbuffer.load
llvm.amdgcn.raw.tbuffer.store
llvm.amdgcn.rcp
llvm.amdgcn.rcp.legacy
llvm.amdgcn.readfirstlane
llvm.amdgcn.readlane
llvm.amdgcn.reloc.constant
llvm.amdgcn.rsq
llvm.amdgcn.rsq.clamp
llvm.amdgcn.rsq.legacy
llvm.amdgcn.s.barrier
llvm.amdgcn.s.buffer.load
llvm.amdgcn.s.dcache.inv
llvm.amdgcn.s.dcache.inv.vol
llvm.amdgcn.s.dcache.wb
llvm.amdgcn.s.dcache.wb.vol
llvm.amdgcn.s.decperflevel
llvm.amdgcn.s.get.waveid.in.workgroup
llvm.amdgcn.s.getpc
llvm.amdgcn.s.getreg
llvm.amdgcn.s.incperflevel
llvm.amdgcn.s.memrealtime
llvm.amdgcn.s.memtime
llvm.amdgcn.s.sendmsg
llvm.amdgcn.s.sendmsghalt
llvm.amdgcn.s.setreg
llvm.amdgcn.s.sleep
llvm.amdgcn.s.waitcnt
llvm.amdgcn.sad.hi.u8
llvm.amdgcn.sad.u16
llvm.amdgcn.sad.u8
llvm.amdgcn.sbfe
llvm.amdgcn.sdot2
llvm.amdgcn.sdot4
llvm.amdgcn.sdot8
llvm.amdgcn.set.inactive
llvm.amdgcn.sffbh
llvm.amdgcn.sin
llvm.amdgcn.softwqm
llvm.amdgcn.sqrt
llvm.amdgcn.struct.buffer.atomic.add
llvm.amdgcn.struct.buffer.atomic.and
llvm.amdgcn.struct.buffer.atomic.cmpswap
llvm.amdgcn.struct.buffer.atomic.dec
llvm.amdgcn.struct.buffer.atomic.fadd
llvm.amdgcn.struct.buffer.atomic.inc
llvm.amdgcn.struct.buffer.atomic.or
llvm.amdgcn.struct.buffer.atomic.smax
llvm.amdgcn.struct.buffer.atomic.smin
llvm.amdgcn.struct.buffer.atomic.sub
llvm.amdgcn.struct.buffer.atomic.swap
llvm.amdgcn.struct.buffer.atomic.umax
llvm.amdgcn.struct.buffer.atomic.umin
llvm.amdgcn.struct.buffer.atomic.xor
llvm.amdgcn.struct.buffer.load
llvm.amdgcn.struct.buffer.load.format
llvm.amdgcn.struct.buffer.store
llvm.amdgcn.struct.buffer.store.format
llvm.amdgcn.struct.tbuffer.load
llvm.amdgcn.struct.tbuffer.store
llvm.amdgcn.tbuffer.load
llvm.amdgcn.tbuffer.store
llvm.amdgcn.trig.preop
llvm.amdgcn.ubfe
llvm.amdgcn.udot2
llvm.amdgcn.udot4
llvm.amdgcn.udot8
llvm.amdgcn.unreachable
llvm.amdgcn.update.dpp
llvm.amdgcn.wave.barrier
llvm.amdgcn.wavefrontsize
llvm.amdgcn.workgroup.id.x
llvm.amdgcn.workgroup.id.y
llvm.amdgcn.workgroup.id.z
llvm.amdgcn.workitem.id.x
llvm.amdgcn.workitem.id.y
llvm.amdgcn.workitem.id.z
llvm.amdgcn.wqm
llvm.amdgcn.wqm.vote
llvm.amdgcn.writelane
llvm.amdgcn.wwm
llvm.arm.cde.cx1
llvm.arm.cde.cx1a
llvm.arm.cde.cx1d
llvm.arm.cde.cx1da
llvm.arm.cde.cx2
llvm.arm.cde.cx2a
llvm.arm.cde.cx2d
llvm.arm.cde.cx2da
llvm.arm.cde.cx3
llvm.arm.cde.cx3a
llvm.arm.cde.cx3d
llvm.arm.cde.cx3da
llvm.arm.cde.vcx1
llvm.arm.cde.vcx1a
llvm.arm.cde.vcx1q
llvm.arm.cde.vcx1q.predicated
llvm.arm.cde.vcx1qa
llvm.arm.cde.vcx1qa.predicated
llvm.arm.cde.vcx2
llvm.arm.cde.vcx2a
llvm.arm.cde.vcx2q
llvm.arm.cde.vcx2q.predicated
llvm.arm.cde.vcx2qa
llvm.arm.cde.vcx2qa.predicated
llvm.arm.cde.vcx3
llvm.arm.cde.vcx3a
llvm.arm.cde.vcx3q
llvm.arm.cde.vcx3q.predicated
llvm.arm.cde.vcx3qa
llvm.arm.cde.vcx3qa.predicated
llvm.arm.cdp
llvm.arm.cdp2
llvm.arm.clrex
llvm.arm.cls
llvm.arm.cls64
llvm.arm.cmse.tt
llvm.arm.cmse.tta
llvm.arm.cmse.ttat
llvm.arm.cmse.ttt
llvm.arm.crc32b
llvm.arm.crc32cb
llvm.arm.crc32ch
llvm.arm.crc32cw
llvm.arm.crc32h
llvm.arm.crc32w
llvm.arm.dbg
llvm.arm.dmb
llvm.arm.dsb
llvm.arm.get.fpscr
llvm.arm.gnu.eabi.mcount
llvm.arm.hint
llvm.arm.isb
llvm.arm.ldaex
llvm.arm.ldaexd
llvm.arm.ldc
llvm.arm.ldc2
llvm.arm.ldc2l
llvm.arm.ldcl
llvm.arm.ldrex
llvm.arm.ldrexd
llvm.arm.mcr
llvm.arm.mcr2
llvm.arm.mcrr
llvm.arm.mcrr2
llvm.arm.mrc
llvm.arm.mrc2
llvm.arm.mrrc
llvm.arm.mrrc2
llvm.arm.mve.abd.predicated
llvm.arm.mve.abs.predicated
llvm.arm.mve.add.predicated
llvm.arm.mve.addlv
llvm.arm.mve.addlv.predicated
llvm.arm.mve.addv
llvm.arm.mve.addv.predicated
llvm.arm.mve.and.predicated
llvm.arm.mve.asrl
llvm.arm.mve.bic.predicated
llvm.arm.mve.cls.predicated
llvm.arm.mve.clz.predicated
llvm.arm.mve.eor.predicated
llvm.arm.mve.fma.predicated
llvm.arm.mve.hadd.predicated
llvm.arm.mve.hsub.predicated
llvm.arm.mve.lsll
llvm.arm.mve.max.predicated
llvm.arm.mve.maxav
llvm.arm.mve.maxav.predicated
llvm.arm.mve.maxnmav
llvm.arm.mve.maxnmav.predicated
llvm.arm.mve.maxnmv
llvm.arm.mve.maxnmv.predicated
llvm.arm.mve.maxv
llvm.arm.mve.maxv.predicated
llvm.arm.mve.min.predicated
llvm.arm.mve.minav
llvm.arm.mve.minav.predicated
llvm.arm.mve.minnmav
llvm.arm.mve.minnmav.predicated
llvm.arm.mve.minnmv
llvm.arm.mve.minnmv.predicated
llvm.arm.mve.minv
llvm.arm.mve.minv.predicated
llvm.arm.mve.mul.predicated
llvm.arm.mve.mulh.predicated
llvm.arm.mve.mull.int.predicated
llvm.arm.mve.mull.poly.predicated
llvm.arm.mve.mvn.predicated
llvm.arm.mve.neg.predicated
llvm.arm.mve.orn.predicated
llvm.arm.mve.orr.predicated
llvm.arm.mve.pred.i2v
llvm.arm.mve.pred.v2i
llvm.arm.mve.qabs.predicated
llvm.arm.mve.qadd.predicated
llvm.arm.mve.qdmulh.predicated
llvm.arm.mve.qneg.predicated
llvm.arm.mve.qrdmulh.predicated
llvm.arm.mve.qsub.predicated
llvm.arm.mve.rhadd.predicated
llvm.arm.mve.rmulh.predicated
llvm.arm.mve.shl.imm.predicated
llvm.arm.mve.shr.imm.predicated
llvm.arm.mve.sqrshr
llvm.arm.mve.sqrshrl
llvm.arm.mve.sqshl
llvm.arm.mve.sqshll
llvm.arm.mve.srshr
llvm.arm.mve.srshrl
llvm.arm.mve.sub.predicated
llvm.arm.mve.uqrshl
llvm.arm.mve.uqrshll
llvm.arm.mve.uqshl
llvm.arm.mve.uqshll
llvm.arm.mve.urshr
llvm.arm.mve.urshrl
llvm.arm.mve.vabav
llvm.arm.mve.vabav.predicated
llvm.arm.mve.vabd
llvm.arm.mve.vadc
llvm.arm.mve.vadc.predicated
llvm.arm.mve.vbrsr
llvm.arm.mve.vbrsr.predicated
llvm.arm.mve.vcaddq
llvm.arm.mve.vcaddq.predicated
llvm.arm.mve.vcls
llvm.arm.mve.vcmlaq
llvm.arm.mve.vcmlaq.predicated
llvm.arm.mve.vcmulq
llvm.arm.mve.vcmulq.predicated
llvm.arm.mve.vctp16
llvm.arm.mve.vctp32
llvm.arm.mve.vctp64
llvm.arm.mve.vctp8
llvm.arm.mve.vcvt.fix
llvm.arm.mve.vcvt.fix.predicated
llvm.arm.mve.vcvt.fp.int.predicated
llvm.arm.mve.vcvt.narrow
llvm.arm.mve.vcvt.narrow.predicated
llvm.arm.mve.vcvt.widen
llvm.arm.mve.vcvt.widen.predicated
llvm.arm.mve.vcvta
llvm.arm.mve.vcvta.predicated
llvm.arm.mve.vcvtm
llvm.arm.mve.vcvtm.predicated
llvm.arm.mve.vcvtn
llvm.arm.mve.vcvtn.predicated
llvm.arm.mve.vcvtp
llvm.arm.mve.vcvtp.predicated
llvm.arm.mve.vddup
llvm.arm.mve.vddup.predicated
llvm.arm.mve.vdwdup
llvm.arm.mve.vdwdup.predicated
llvm.arm.mve.vhadd
llvm.arm.mve.vhsub
llvm.arm.mve.vidup
llvm.arm.mve.vidup.predicated
llvm.arm.mve.viwdup
llvm.arm.mve.viwdup.predicated
llvm.arm.mve.vld2q
llvm.arm.mve.vld4q
llvm.arm.mve.vldr.gather.base
llvm.arm.mve.vldr.gather.base.predicated
llvm.arm.mve.vldr.gather.base.wb
llvm.arm.mve.vldr.gather.base.wb.predicated
llvm.arm.mve.vldr.gather.offset
llvm.arm.mve.vldr.gather.offset.predicated
llvm.arm.mve.vmaxa.predicated
llvm.arm.mve.vmaxnma.predicated
llvm.arm.mve.vmina.predicated
llvm.arm.mve.vminnma.predicated
llvm.arm.mve.vmla.n.predicated
llvm.arm.mve.vmlas.n.predicated
llvm.arm.mve.vmldava
llvm.arm.mve.vmldava.predicated
llvm.arm.mve.vmlldava
llvm.arm.mve.vmlldava.predicated
llvm.arm.mve.vmovl.predicated
llvm.arm.mve.vmovn.predicated
llvm.arm.mve.vmulh
llvm.arm.mve.vmull
llvm.arm.mve.vmull.poly
llvm.arm.mve.vqdmlad
llvm.arm.mve.vqdmlad.predicated
llvm.arm.mve.vqdmlah
llvm.arm.mve.vqdmlah.predicated
llvm.arm.mve.vqdmlash
llvm.arm.mve.vqdmlash.predicated
llvm.arm.mve.vqdmulh
llvm.arm.mve.vqdmull
llvm.arm.mve.vqdmull.predicated
llvm.arm.mve.vqmovn
llvm.arm.mve.vqmovn.predicated
llvm.arm.mve.vqrdmlah
llvm.arm.mve.vqrdmlah.predicated
llvm.arm.mve.vqrdmlash
llvm.arm.mve.vqrdmlash.predicated
llvm.arm.mve.vqrdmulh
llvm.arm.mve.vqshl.imm
llvm.arm.mve.vqshl.imm.predicated
llvm.arm.mve.vqshlu.imm
llvm.arm.mve.vqshlu.imm.predicated
llvm.arm.mve.vreinterpretq
llvm.arm.mve.vrev.predicated
llvm.arm.mve.vrhadd
llvm.arm.mve.vrinta.predicated
llvm.arm.mve.vrintm.predicated
llvm.arm.mve.vrintn
llvm.arm.mve.vrintn.predicated
llvm.arm.mve.vrintp.predicated
llvm.arm.mve.vrintx.predicated
llvm.arm.mve.vrintz.predicated
llvm.arm.mve.vrmlldavha
llvm.arm.mve.vrmlldavha.predicated
llvm.arm.mve.vrmulh
llvm.arm.mve.vrshr.imm
llvm.arm.mve.vrshr.imm.predicated
llvm.arm.mve.vsbc
llvm.arm.mve.vsbc.predicated
llvm.arm.mve.vshl.scalar
llvm.arm.mve.vshl.scalar.predicated
llvm.arm.mve.vshl.vector
llvm.arm.mve.vshl.vector.predicated
llvm.arm.mve.vshlc
llvm.arm.mve.vshlc.predicated
llvm.arm.mve.vshll.imm
llvm.arm.mve.vshll.imm.predicated
llvm.arm.mve.vshrn
llvm.arm.mve.vshrn.predicated
llvm.arm.mve.vsli
llvm.arm.mve.vsli.predicated
llvm.arm.mve.vsri
llvm.arm.mve.vsri.predicated
llvm.arm.mve.vst2q
llvm.arm.mve.vst4q
llvm.arm.mve.vstr.scatter.base
llvm.arm.mve.vstr.scatter.base.predicated
llvm.arm.mve.vstr.scatter.base.wb
llvm.arm.mve.vstr.scatter.base.wb.predicated
llvm.arm.mve.vstr.scatter.offset
llvm.arm.mve.vstr.scatter.offset.predicated
llvm.arm.neon.aesd
llvm.arm.neon.aese
llvm.arm.neon.aesimc
llvm.arm.neon.aesmc
llvm.arm.neon.bfdot
llvm.arm.neon.bfmlalb
llvm.arm.neon.bfmlalt
llvm.arm.neon.bfmmla
llvm.arm.neon.sdot
llvm.arm.neon.sha1c
llvm.arm.neon.sha1h
llvm.arm.neon.sha1m
llvm.arm.neon.sha1p
llvm.arm.neon.sha1su0
llvm.arm.neon.sha1su1
llvm.arm.neon.sha256h
llvm.arm.neon.sha256h2
llvm.arm.neon.sha256su0
llvm.arm.neon.sha256su1
llvm.arm.neon.smmla
llvm.arm.neon.udot
llvm.arm.neon.ummla
llvm.arm.neon.usdot
llvm.arm.neon.usmmla
llvm.arm.neon.vabds
llvm.arm.neon.vabdu
llvm.arm.neon.vabs
llvm.arm.neon.vacge
llvm.arm.neon.vacgt
llvm.arm.neon.vbsl
llvm.arm.neon.vcadd.rot270
llvm.arm.neon.vcadd.rot90
llvm.arm.neon.vcls
llvm.arm.neon.vcvtas
llvm.arm.neon.vcvtau
llvm.arm.neon.vcvtbfp2bf
llvm.arm.neon.vcvtfp2bf
llvm.arm.neon.vcvtfp2fxs
llvm.arm.neon.vcvtfp2fxu
llvm.arm.neon.vcvtfp2hf
llvm.arm.neon.vcvtfxs2fp
llvm.arm.neon.vcvtfxu2fp
llvm.arm.neon.vcvthf2fp
llvm.arm.neon.vcvtms
llvm.arm.neon.vcvtmu
llvm.arm.neon.vcvtns
llvm.arm.neon.vcvtnu
llvm.arm.neon.vcvtps
llvm.arm.neon.vcvtpu
llvm.arm.neon.vhadds
llvm.arm.neon.vhaddu
llvm.arm.neon.vhsubs
llvm.arm.neon.vhsubu
llvm.arm.neon.vld1
llvm.arm.neon.vld1x2
llvm.arm.neon.vld1x3
llvm.arm.neon.vld1x4
llvm.arm.neon.vld2
llvm.arm.neon.vld2dup
llvm.arm.neon.vld2lane
llvm.arm.neon.vld3
llvm.arm.neon.vld3dup
llvm.arm.neon.vld3lane
llvm.arm.neon.vld4
llvm.arm.neon.vld4dup
llvm.arm.neon.vld4lane
llvm.arm.neon.vmaxnm
llvm.arm.neon.vmaxs
llvm.arm.neon.vmaxu
llvm.arm.neon.vminnm
llvm.arm.neon.vmins
llvm.arm.neon.vminu
llvm.arm.neon.vmullp
llvm.arm.neon.vmulls
llvm.arm.neon.vmullu
llvm.arm.neon.vmulp
llvm.arm.neon.vpadals
llvm.arm.neon.vpadalu
llvm.arm.neon.vpadd
llvm.arm.neon.vpaddls
llvm.arm.neon.vpaddlu
llvm.arm.neon.vpmaxs
llvm.arm.neon.vpmaxu
llvm.arm.neon.vpmins
llvm.arm.neon.vpminu
llvm.arm.neon.vqabs
llvm.arm.neon.vqdmulh
llvm.arm.neon.vqdmull
llvm.arm.neon.vqmovns
llvm.arm.neon.vqmovnsu
llvm.arm.neon.vqmovnu
llvm.arm.neon.vqneg
llvm.arm.neon.vqrdmulh
llvm.arm.neon.vqrshiftns
llvm.arm.neon.vqrshiftnsu
llvm.arm.neon.vqrshiftnu
llvm.arm.neon.vqrshifts
llvm.arm.neon.vqrshiftu
llvm.arm.neon.vqshiftns
llvm.arm.neon.vqshiftnsu
llvm.arm.neon.vqshiftnu
llvm.arm.neon.vqshifts
llvm.arm.neon.vqshiftsu
llvm.arm.neon.vqshiftu
llvm.arm.neon.vraddhn
llvm.arm.neon.vrecpe
llvm.arm.neon.vrecps
llvm.arm.neon.vrhadds
llvm.arm.neon.vrhaddu
llvm.arm.neon.vrinta
llvm.arm.neon.vrintm
llvm.arm.neon.vrintn
llvm.arm.neon.vrintp
llvm.arm.neon.vrintx
llvm.arm.neon.vrintz
llvm.arm.neon.vrshiftn
llvm.arm.neon.vrshifts
llvm.arm.neon.vrshiftu
llvm.arm.neon.vrsqrte
llvm.arm.neon.vrsqrts
llvm.arm.neon.vrsubhn
llvm.arm.neon.vshiftins
llvm.arm.neon.vshifts
llvm.arm.neon.vshiftu
llvm.arm.neon.vst1
llvm.arm.neon.vst1x2
llvm.arm.neon.vst1x3
llvm.arm.neon.vst1x4
llvm.arm.neon.vst2
llvm.arm.neon.vst2lane
llvm.arm.neon.vst3
llvm.arm.neon.vst3lane
llvm.arm.neon.vst4
llvm.arm.neon.vst4lane
llvm.arm.neon.vtbl1
llvm.arm.neon.vtbl2
llvm.arm.neon.vtbl3
llvm.arm.neon.vtbl4
llvm.arm.neon.vtbx1
llvm.arm.neon.vtbx2
llvm.arm.neon.vtbx3
llvm.arm.neon.vtbx4
llvm.arm.qadd
llvm.arm.qadd16
llvm.arm.qadd8
llvm.arm.qasx
llvm.arm.qsax
llvm.arm.qsub
llvm.arm.qsub16
llvm.arm.qsub8
llvm.arm.sadd16
llvm.arm.sadd8
llvm.arm.sasx
llvm.arm.sel
llvm.arm.set.fpscr
llvm.arm.shadd16
llvm.arm.shadd8
llvm.arm.shasx
llvm.arm.shsax
llvm.arm.shsub16
llvm.arm.shsub8
llvm.arm.smlabb
llvm.arm.smlabt
llvm.arm.smlad
llvm.arm.smladx
llvm.arm.smlald
llvm.arm.smlaldx
llvm.arm.smlatb
llvm.arm.smlatt
llvm.arm.smlawb
llvm.arm.smlawt
llvm.arm.smlsd
llvm.arm.smlsdx
llvm.arm.smlsld
llvm.arm.smlsldx
llvm.arm.smuad
llvm.arm.smuadx
llvm.arm.smulbb
llvm.arm.smulbt
llvm.arm.smultb
llvm.arm.smultt
llvm.arm.smulwb
llvm.arm.smulwt
llvm.arm.smusd
llvm.arm.smusdx
llvm.arm.space
llvm.arm.ssat
llvm.arm.ssat16
llvm.arm.ssax
llvm.arm.ssub16
llvm.arm.ssub8
llvm.arm.stc
llvm.arm.stc2
llvm.arm.stc2l
llvm.arm.stcl
llvm.arm.stlex
llvm.arm.stlexd
llvm.arm.strex
llvm.arm.strexd
llvm.arm.sxtab16
llvm.arm.sxtb16
llvm.arm.uadd16
llvm.arm.uadd8
llvm.arm.uasx
llvm.arm.uhadd16
llvm.arm.uhadd8
llvm.arm.uhasx
llvm.arm.uhsax
llvm.arm.uhsub16
llvm.arm.uhsub8
llvm.arm.undefined
llvm.arm.uqadd16
llvm.arm.uqadd8
llvm.arm.uqasx
llvm.arm.uqsax
llvm.arm.uqsub16
llvm.arm.uqsub8
llvm.arm.usad8
llvm.arm.usada8
llvm.arm.usat
llvm.arm.usat16
llvm.arm.usax
llvm.arm.usub16
llvm.arm.usub8
llvm.arm.uxtab16
llvm.arm.uxtb16
llvm.arm.vcvtr
llvm.arm.vcvtru
llvm.bpf.btf.type.id
llvm.bpf.load.byte
llvm.bpf.load.half
llvm.bpf.load.word
llvm.bpf.passthrough
llvm.bpf.preserve.enum.value
llvm.bpf.preserve.field.info
llvm.bpf.preserve.type.info
llvm.bpf.pseudo
llvm.hexagon.A2.abs
llvm.hexagon.A2.absp
llvm.hexagon.A2.abssat
llvm.hexagon.A2.add
llvm.hexagon.A2.addh.h16.hh
llvm.hexagon.A2.addh.h16.hl
llvm.hexagon.A2.addh.h16.lh
llvm.hexagon.A2.addh.h16.ll
llvm.hexagon.A2.addh.h16.sat.hh
llvm.hexagon.A2.addh.h16.sat.hl
llvm.hexagon.A2.addh.h16.sat.lh
llvm.hexagon.A2.addh.h16.sat.ll
llvm.hexagon.A2.addh.l16.hl
llvm.hexagon.A2.addh.l16.ll
llvm.hexagon.A2.addh.l16.sat.hl
llvm.hexagon.A2.addh.l16.sat.ll
llvm.hexagon.A2.addi
llvm.hexagon.A2.addp
llvm.hexagon.A2.addpsat
llvm.hexagon.A2.addsat
llvm.hexagon.A2.addsp
llvm.hexagon.A2.and
llvm.hexagon.A2.andir
llvm.hexagon.A2.andp
llvm.hexagon.A2.aslh
llvm.hexagon.A2.asrh
llvm.hexagon.A2.combine.hh
llvm.hexagon.A2.combine.hl
llvm.hexagon.A2.combine.lh
llvm.hexagon.A2.combine.ll
llvm.hexagon.A2.combineii
llvm.hexagon.A2.combinew
llvm.hexagon.A2.max
llvm.hexagon.A2.maxp
llvm.hexagon.A2.maxu
llvm.hexagon.A2.maxup
llvm.hexagon.A2.min
llvm.hexagon.A2.minp
llvm.hexagon.A2.minu
llvm.hexagon.A2.minup
llvm.hexagon.A2.neg
llvm.hexagon.A2.negp
llvm.hexagon.A2.negsat
llvm.hexagon.A2.not
llvm.hexagon.A2.notp
llvm.hexagon.A2.or
llvm.hexagon.A2.orir
llvm.hexagon.A2.orp
llvm.hexagon.A2.roundsat
llvm.hexagon.A2.sat
llvm.hexagon.A2.satb
llvm.hexagon.A2.sath
llvm.hexagon.A2.satub
llvm.hexagon.A2.satuh
llvm.hexagon.A2.sub
llvm.hexagon.A2.subh.h16.hh
llvm.hexagon.A2.subh.h16.hl
llvm.hexagon.A2.subh.h16.lh
llvm.hexagon.A2.subh.h16.ll
llvm.hexagon.A2.subh.h16.sat.hh
llvm.hexagon.A2.subh.h16.sat.hl
llvm.hexagon.A2.subh.h16.sat.lh
llvm.hexagon.A2.subh.h16.sat.ll
llvm.hexagon.A2.subh.l16.hl
llvm.hexagon.A2.subh.l16.ll
llvm.hexagon.A2.subh.l16.sat.hl
llvm.hexagon.A2.subh.l16.sat.ll
llvm.hexagon.A2.subp
llvm.hexagon.A2.subri
llvm.hexagon.A2.subsat
llvm.hexagon.A2.svaddh
llvm.hexagon.A2.svaddhs
llvm.hexagon.A2.svadduhs
llvm.hexagon.A2.svavgh
llvm.hexagon.A2.svavghs
llvm.hexagon.A2.svnavgh
llvm.hexagon.A2.svsubh
llvm.hexagon.A2.svsubhs
llvm.hexagon.A2.svsubuhs
llvm.hexagon.A2.swiz
llvm.hexagon.A2.sxtb
llvm.hexagon.A2.sxth
llvm.hexagon.A2.sxtw
llvm.hexagon.A2.tfr
llvm.hexagon.A2.tfrih
llvm.hexagon.A2.tfril
llvm.hexagon.A2.tfrp
llvm.hexagon.A2.tfrpi
llvm.hexagon.A2.tfrsi
llvm.hexagon.A2.vabsh
llvm.hexagon.A2.vabshsat
llvm.hexagon.A2.vabsw
llvm.hexagon.A2.vabswsat
llvm.hexagon.A2.vaddb.map
llvm.hexagon.A2.vaddh
llvm.hexagon.A2.vaddhs
llvm.hexagon.A2.vaddub
llvm.hexagon.A2.vaddubs
llvm.hexagon.A2.vadduhs
llvm.hexagon.A2.vaddw
llvm.hexagon.A2.vaddws
llvm.hexagon.A2.vavgh
llvm.hexagon.A2.vavghcr
llvm.hexagon.A2.vavghr
llvm.hexagon.A2.vavgub
llvm.hexagon.A2.vavgubr
llvm.hexagon.A2.vavguh
llvm.hexagon.A2.vavguhr
llvm.hexagon.A2.vavguw
llvm.hexagon.A2.vavguwr
llvm.hexagon.A2.vavgw
llvm.hexagon.A2.vavgwcr
llvm.hexagon.A2.vavgwr
llvm.hexagon.A2.vcmpbeq
llvm.hexagon.A2.vcmpbgtu
llvm.hexagon.A2.vcmpheq
llvm.hexagon.A2.vcmphgt
llvm.hexagon.A2.vcmphgtu
llvm.hexagon.A2.vcmpweq
llvm.hexagon.A2.vcmpwgt
llvm.hexagon.A2.vcmpwgtu
llvm.hexagon.A2.vconj
llvm.hexagon.A2.vmaxb
llvm.hexagon.A2.vmaxh
llvm.hexagon.A2.vmaxub
llvm.hexagon.A2.vmaxuh
llvm.hexagon.A2.vmaxuw
llvm.hexagon.A2.vmaxw
llvm.hexagon.A2.vminb
llvm.hexagon.A2.vminh
llvm.hexagon.A2.vminub
llvm.hexagon.A2.vminuh
llvm.hexagon.A2.vminuw
llvm.hexagon.A2.vminw
llvm.hexagon.A2.vnavgh
llvm.hexagon.A2.vnavghcr
llvm.hexagon.A2.vnavghr
llvm.hexagon.A2.vnavgw
llvm.hexagon.A2.vnavgwcr
llvm.hexagon.A2.vnavgwr
llvm.hexagon.A2.vraddub
llvm.hexagon.A2.vraddub.acc
llvm.hexagon.A2.vrsadub
llvm.hexagon.A2.vrsadub.acc
llvm.hexagon.A2.vsubb.map
llvm.hexagon.A2.vsubh
llvm.hexagon.A2.vsubhs
llvm.hexagon.A2.vsubub
llvm.hexagon.A2.vsububs
llvm.hexagon.A2.vsubuhs
llvm.hexagon.A2.vsubw
llvm.hexagon.A2.vsubws
llvm.hexagon.A2.xor
llvm.hexagon.A2.xorp
llvm.hexagon.A2.zxtb
llvm.hexagon.A2.zxth
llvm.hexagon.A4.andn
llvm.hexagon.A4.andnp
llvm.hexagon.A4.bitsplit
llvm.hexagon.A4.bitspliti
llvm.hexagon.A4.boundscheck
llvm.hexagon.A4.cmpbeq
llvm.hexagon.A4.cmpbeqi
llvm.hexagon.A4.cmpbgt
llvm.hexagon.A4.cmpbgti
llvm.hexagon.A4.cmpbgtu
llvm.hexagon.A4.cmpbgtui
llvm.hexagon.A4.cmpheq
llvm.hexagon.A4.cmpheqi
llvm.hexagon.A4.cmphgt
llvm.hexagon.A4.cmphgti
llvm.hexagon.A4.cmphgtu
llvm.hexagon.A4.cmphgtui
llvm.hexagon.A4.combineir
llvm.hexagon.A4.combineri
llvm.hexagon.A4.cround.ri
llvm.hexagon.A4.cround.rr
llvm.hexagon.A4.modwrapu
llvm.hexagon.A4.orn
llvm.hexagon.A4.ornp
llvm.hexagon.A4.rcmpeq
llvm.hexagon.A4.rcmpeqi
llvm.hexagon.A4.rcmpneq
llvm.hexagon.A4.rcmpneqi
llvm.hexagon.A4.round.ri
llvm.hexagon.A4.round.ri.sat
llvm.hexagon.A4.round.rr
llvm.hexagon.A4.round.rr.sat
llvm.hexagon.A4.tlbmatch
llvm.hexagon.A4.vcmpbeq.any
llvm.hexagon.A4.vcmpbeqi
llvm.hexagon.A4.vcmpbgt
llvm.hexagon.A4.vcmpbgti
llvm.hexagon.A4.vcmpbgtui
llvm.hexagon.A4.vcmpheqi
llvm.hexagon.A4.vcmphgti
llvm.hexagon.A4.vcmphgtui
llvm.hexagon.A4.vcmpweqi
llvm.hexagon.A4.vcmpwgti
llvm.hexagon.A4.vcmpwgtui
llvm.hexagon.A4.vrmaxh
llvm.hexagon.A4.vrmaxuh
llvm.hexagon.A4.vrmaxuw
llvm.hexagon.A4.vrmaxw
llvm.hexagon.A4.vrminh
llvm.hexagon.A4.vrminuh
llvm.hexagon.A4.vrminuw
llvm.hexagon.A4.vrminw
llvm.hexagon.A5.vaddhubs
llvm.hexagon.A6.vcmpbeq.notany
llvm.hexagon.A7.clip
llvm.hexagon.A7.croundd.ri
llvm.hexagon.A7.croundd.rr
llvm.hexagon.A7.vclip
llvm.hexagon.C2.all8
llvm.hexagon.C2.and
llvm.hexagon.C2.andn
llvm.hexagon.C2.any8
llvm.hexagon.C2.bitsclr
llvm.hexagon.C2.bitsclri
llvm.hexagon.C2.bitsset
llvm.hexagon.C2.cmpeq
llvm.hexagon.C2.cmpeqi
llvm.hexagon.C2.cmpeqp
llvm.hexagon.C2.cmpgei
llvm.hexagon.C2.cmpgeui
llvm.hexagon.C2.cmpgt
llvm.hexagon.C2.cmpgti
llvm.hexagon.C2.cmpgtp
llvm.hexagon.C2.cmpgtu
llvm.hexagon.C2.cmpgtui
llvm.hexagon.C2.cmpgtup
llvm.hexagon.C2.cmplt
llvm.hexagon.C2.cmpltu
llvm.hexagon.C2.mask
llvm.hexagon.C2.mux
llvm.hexagon.C2.muxii
llvm.hexagon.C2.muxir
llvm.hexagon.C2.muxri
llvm.hexagon.C2.not
llvm.hexagon.C2.or
llvm.hexagon.C2.orn
llvm.hexagon.C2.pxfer.map
llvm.hexagon.C2.tfrpr
llvm.hexagon.C2.tfrrp
llvm.hexagon.C2.vitpack
llvm.hexagon.C2.vmux
llvm.hexagon.C2.xor
llvm.hexagon.C4.and.and
llvm.hexagon.C4.and.andn
llvm.hexagon.C4.and.or
llvm.hexagon.C4.and.orn
llvm.hexagon.C4.cmplte
llvm.hexagon.C4.cmpltei
llvm.hexagon.C4.cmplteu
llvm.hexagon.C4.cmplteui
llvm.hexagon.C4.cmpneq
llvm.hexagon.C4.cmpneqi
llvm.hexagon.C4.fastcorner9
llvm.hexagon.C4.fastcorner9.not
llvm.hexagon.C4.nbitsclr
llvm.hexagon.C4.nbitsclri
llvm.hexagon.C4.nbitsset
llvm.hexagon.C4.or.and
llvm.hexagon.C4.or.andn
llvm.hexagon.C4.or.or
llvm.hexagon.C4.or.orn
llvm.hexagon.F2.conv.d2df
llvm.hexagon.F2.conv.d2sf
llvm.hexagon.F2.conv.df2d
llvm.hexagon.F2.conv.df2d.chop
llvm.hexagon.F2.conv.df2sf
llvm.hexagon.F2.conv.df2ud
llvm.hexagon.F2.conv.df2ud.chop
llvm.hexagon.F2.conv.df2uw
llvm.hexagon.F2.conv.df2uw.chop
llvm.hexagon.F2.conv.df2w
llvm.hexagon.F2.conv.df2w.chop
llvm.hexagon.F2.conv.sf2d
llvm.hexagon.F2.conv.sf2d.chop
llvm.hexagon.F2.conv.sf2df
llvm.hexagon.F2.conv.sf2ud
llvm.hexagon.F2.conv.sf2ud.chop
llvm.hexagon.F2.conv.sf2uw
llvm.hexagon.F2.conv.sf2uw.chop
llvm.hexagon.F2.conv.sf2w
llvm.hexagon.F2.conv.sf2w.chop
llvm.hexagon.F2.conv.ud2df
llvm.hexagon.F2.conv.ud2sf
llvm.hexagon.F2.conv.uw2df
llvm.hexagon.F2.conv.uw2sf
llvm.hexagon.F2.conv.w2df
llvm.hexagon.F2.conv.w2sf
llvm.hexagon.F2.dfadd
llvm.hexagon.F2.dfclass
llvm.hexagon.F2.dfcmpeq
llvm.hexagon.F2.dfcmpge
llvm.hexagon.F2.dfcmpgt
llvm.hexagon.F2.dfcmpuo
llvm.hexagon.F2.dfimm.n
llvm.hexagon.F2.dfimm.p
llvm.hexagon.F2.dfmax
llvm.hexagon.F2.dfmin
llvm.hexagon.F2.dfmpyfix
llvm.hexagon.F2.dfmpyhh
llvm.hexagon.F2.dfmpylh
llvm.hexagon.F2.dfmpyll
llvm.hexagon.F2.dfsub
llvm.hexagon.F2.sfadd
llvm.hexagon.F2.sfclass
llvm.hexagon.F2.sfcmpeq
llvm.hexagon.F2.sfcmpge
llvm.hexagon.F2.sfcmpgt
llvm.hexagon.F2.sfcmpuo
llvm.hexagon.F2.sffixupd
llvm.hexagon.F2.sffixupn
llvm.hexagon.F2.sffixupr
llvm.hexagon.F2.sffma
llvm.hexagon.F2.sffma.lib
llvm.hexagon.F2.sffma.sc
llvm.hexagon.F2.sffms
llvm.hexagon.F2.sffms.lib
llvm.hexagon.F2.sfimm.n
llvm.hexagon.F2.sfimm.p
llvm.hexagon.F2.sfmax
llvm.hexagon.F2.sfmin
llvm.hexagon.F2.sfmpy
llvm.hexagon.F2.sfsub
llvm.hexagon.L2.loadrb.pbr
llvm.hexagon.L2.loadrb.pci
llvm.hexagon.L2.loadrb.pcr
llvm.hexagon.L2.loadrd.pbr
llvm.hexagon.L2.loadrd.pci
llvm.hexagon.L2.loadrd.pcr
llvm.hexagon.L2.loadrh.pbr
llvm.hexagon.L2.loadrh.pci
llvm.hexagon.L2.loadrh.pcr
llvm.hexagon.L2.loadri.pbr
llvm.hexagon.L2.loadri.pci
llvm.hexagon.L2.loadri.pcr
llvm.hexagon.L2.loadrub.pbr
llvm.hexagon.L2.loadrub.pci
llvm.hexagon.L2.loadrub.pcr
llvm.hexagon.L2.loadruh.pbr
llvm.hexagon.L2.loadruh.pci
llvm.hexagon.L2.loadruh.pcr
llvm.hexagon.L2.loadw.locked
llvm.hexagon.L4.loadd.locked
llvm.hexagon.M2.acci
llvm.hexagon.M2.accii
llvm.hexagon.M2.cmaci.s0
llvm.hexagon.M2.cmacr.s0
llvm.hexagon.M2.cmacs.s0
llvm.hexagon.M2.cmacs.s1
llvm.hexagon.M2.cmacsc.s0
llvm.hexagon.M2.cmacsc.s1
llvm.hexagon.M2.cmpyi.s0
llvm.hexagon.M2.cmpyr.s0
llvm.hexagon.M2.cmpyrs.s0
llvm.hexagon.M2.cmpyrs.s1
llvm.hexagon.M2.cmpyrsc.s0
llvm.hexagon.M2.cmpyrsc.s1
llvm.hexagon.M2.cmpys.s0
llvm.hexagon.M2.cmpys.s1
llvm.hexagon.M2.cmpysc.s0
llvm.hexagon.M2.cmpysc.s1
llvm.hexagon.M2.cnacs.s0
llvm.hexagon.M2.cnacs.s1
llvm.hexagon.M2.cnacsc.s0
llvm.hexagon.M2.cnacsc.s1
llvm.hexagon.M2.dpmpyss.acc.s0
llvm.hexagon.M2.dpmpyss.nac.s0
llvm.hexagon.M2.dpmpyss.rnd.s0
llvm.hexagon.M2.dpmpyss.s0
llvm.hexagon.M2.dpmpyuu.acc.s0
llvm.hexagon.M2.dpmpyuu.nac.s0
llvm.hexagon.M2.dpmpyuu.s0
llvm.hexagon.M2.hmmpyh.rs1
llvm.hexagon.M2.hmmpyh.s1
llvm.hexagon.M2.hmmpyl.rs1
llvm.hexagon.M2.hmmpyl.s1
llvm.hexagon.M2.maci
llvm.hexagon.M2.macsin
llvm.hexagon.M2.macsip
llvm.hexagon.M2.mmachs.rs0
llvm.hexagon.M2.mmachs.rs1
llvm.hexagon.M2.mmachs.s0
llvm.hexagon.M2.mmachs.s1
llvm.hexagon.M2.mmacls.rs0
llvm.hexagon.M2.mmacls.rs1
llvm.hexagon.M2.mmacls.s0
llvm.hexagon.M2.mmacls.s1
llvm.hexagon.M2.mmacuhs.rs0
llvm.hexagon.M2.mmacuhs.rs1
llvm.hexagon.M2.mmacuhs.s0
llvm.hexagon.M2.mmacuhs.s1
llvm.hexagon.M2.mmaculs.rs0
llvm.hexagon.M2.mmaculs.rs1
llvm.hexagon.M2.mmaculs.s0
llvm.hexagon.M2.mmaculs.s1
llvm.hexagon.M2.mmpyh.rs0
llvm.hexagon.M2.mmpyh.rs1
llvm.hexagon.M2.mmpyh.s0
llvm.hexagon.M2.mmpyh.s1
llvm.hexagon.M2.mmpyl.rs0
llvm.hexagon.M2.mmpyl.rs1
llvm.hexagon.M2.mmpyl.s0
llvm.hexagon.M2.mmpyl.s1
llvm.hexagon.M2.mmpyuh.rs0
llvm.hexagon.M2.mmpyuh.rs1
llvm.hexagon.M2.mmpyuh.s0
llvm.hexagon.M2.mmpyuh.s1
llvm.hexagon.M2.mmpyul.rs0
llvm.hexagon.M2.mmpyul.rs1
llvm.hexagon.M2.mmpyul.s0
llvm.hexagon.M2.mmpyul.s1
llvm.hexagon.M2.mnaci
llvm.hexagon.M2.mpy.acc.hh.s0
llvm.hexagon.M2.mpy.acc.hh.s1
llvm.hexagon.M2.mpy.acc.hl.s0
llvm.hexagon.M2.mpy.acc.hl.s1
llvm.hexagon.M2.mpy.acc.lh.s0
llvm.hexagon.M2.mpy.acc.lh.s1
llvm.hexagon.M2.mpy.acc.ll.s0
llvm.hexagon.M2.mpy.acc.ll.s1
llvm.hexagon.M2.mpy.acc.sat.hh.s0
llvm.hexagon.M2.mpy.acc.sat.hh.s1
llvm.hexagon.M2.mpy.acc.sat.hl.s0
llvm.hexagon.M2.mpy.acc.sat.hl.s1
llvm.hexagon.M2.mpy.acc.sat.lh.s0
llvm.hexagon.M2.mpy.acc.sat.lh.s1
llvm.hexagon.M2.mpy.acc.sat.ll.s0
llvm.hexagon.M2.mpy.acc.sat.ll.s1
llvm.hexagon.M2.mpy.hh.s0
llvm.hexagon.M2.mpy.hh.s1
llvm.hexagon.M2.mpy.hl.s0
llvm.hexagon.M2.mpy.hl.s1
llvm.hexagon.M2.mpy.lh.s0
llvm.hexagon.M2.mpy.lh.s1
llvm.hexagon.M2.mpy.ll.s0
llvm.hexagon.M2.mpy.ll.s1
llvm.hexagon.M2.mpy.nac.hh.s0
llvm.hexagon.M2.mpy.nac.hh.s1
llvm.hexagon.M2.mpy.nac.hl.s0
llvm.hexagon.M2.mpy.nac.hl.s1
llvm.hexagon.M2.mpy.nac.lh.s0
llvm.hexagon.M2.mpy.nac.lh.s1
llvm.hexagon.M2.mpy.nac.ll.s0
llvm.hexagon.M2.mpy.nac.ll.s1
llvm.hexagon.M2.mpy.nac.sat.hh.s0
llvm.hexagon.M2.mpy.nac.sat.hh.s1
llvm.hexagon.M2.mpy.nac.sat.hl.s0
llvm.hexagon.M2.mpy.nac.sat.hl.s1
llvm.hexagon.M2.mpy.nac.sat.lh.s0
llvm.hexagon.M2.mpy.nac.sat.lh.s1
llvm.hexagon.M2.mpy.nac.sat.ll.s0
llvm.hexagon.M2.mpy.nac.sat.ll.s1
llvm.hexagon.M2.mpy.rnd.hh.s0
llvm.hexagon.M2.mpy.rnd.hh.s1
llvm.hexagon.M2.mpy.rnd.hl.s0
llvm.hexagon.M2.mpy.rnd.hl.s1
llvm.hexagon.M2.mpy.rnd.lh.s0
llvm.hexagon.M2.mpy.rnd.lh.s1
llvm.hexagon.M2.mpy.rnd.ll.s0
llvm.hexagon.M2.mpy.rnd.ll.s1
llvm.hexagon.M2.mpy.sat.hh.s0
llvm.hexagon.M2.mpy.sat.hh.s1
llvm.hexagon.M2.mpy.sat.hl.s0
llvm.hexagon.M2.mpy.sat.hl.s1
llvm.hexagon.M2.mpy.sat.lh.s0
llvm.hexagon.M2.mpy.sat.lh.s1
llvm.hexagon.M2.mpy.sat.ll.s0
llvm.hexagon.M2.mpy.sat.ll.s1
llvm.hexagon.M2.mpy.sat.rnd.hh.s0
llvm.hexagon.M2.mpy.sat.rnd.hh.s1
llvm.hexagon.M2.mpy.sat.rnd.hl.s0
llvm.hexagon.M2.mpy.sat.rnd.hl.s1
llvm.hexagon.M2.mpy.sat.rnd.lh.s0
llvm.hexagon.M2.mpy.sat.rnd.lh.s1
llvm.hexagon.M2.mpy.sat.rnd.ll.s0
llvm.hexagon.M2.mpy.sat.rnd.ll.s1
llvm.hexagon.M2.mpy.up
llvm.hexagon.M2.mpy.up.s1
llvm.hexagon.M2.mpy.up.s1.sat
llvm.hexagon.M2.mpyd.acc.hh.s0
llvm.hexagon.M2.mpyd.acc.hh.s1
llvm.hexagon.M2.mpyd.acc.hl.s0
llvm.hexagon.M2.mpyd.acc.hl.s1
llvm.hexagon.M2.mpyd.acc.lh.s0
llvm.hexagon.M2.mpyd.acc.lh.s1
llvm.hexagon.M2.mpyd.acc.ll.s0
llvm.hexagon.M2.mpyd.acc.ll.s1
llvm.hexagon.M2.mpyd.hh.s0
llvm.hexagon.M2.mpyd.hh.s1
llvm.hexagon.M2.mpyd.hl.s0
llvm.hexagon.M2.mpyd.hl.s1
llvm.hexagon.M2.mpyd.lh.s0
llvm.hexagon.M2.mpyd.lh.s1
llvm.hexagon.M2.mpyd.ll.s0
llvm.hexagon.M2.mpyd.ll.s1
llvm.hexagon.M2.mpyd.nac.hh.s0
llvm.hexagon.M2.mpyd.nac.hh.s1
llvm.hexagon.M2.mpyd.nac.hl.s0
llvm.hexagon.M2.mpyd.nac.hl.s1
llvm.hexagon.M2.mpyd.nac.lh.s0
llvm.hexagon.M2.mpyd.nac.lh.s1
llvm.hexagon.M2.mpyd.nac.ll.s0
llvm.hexagon.M2.mpyd.nac.ll.s1
llvm.hexagon.M2.mpyd.rnd.hh.s0
llvm.hexagon.M2.mpyd.rnd.hh.s1
llvm.hexagon.M2.mpyd.rnd.hl.s0
llvm.hexagon.M2.mpyd.rnd.hl.s1
llvm.hexagon.M2.mpyd.rnd.lh.s0
llvm.hexagon.M2.mpyd.rnd.lh.s1
llvm.hexagon.M2.mpyd.rnd.ll.s0
llvm.hexagon.M2.mpyd.rnd.ll.s1
llvm.hexagon.M2.mpyi
llvm.hexagon.M2.mpysmi
llvm.hexagon.M2.mpysu.up
llvm.hexagon.M2.mpyu.acc.hh.s0
llvm.hexagon.M2.mpyu.acc.hh.s1
llvm.hexagon.M2.mpyu.acc.hl.s0
llvm.hexagon.M2.mpyu.acc.hl.s1
llvm.hexagon.M2.mpyu.acc.lh.s0
llvm.hexagon.M2.mpyu.acc.lh.s1
llvm.hexagon.M2.mpyu.acc.ll.s0
llvm.hexagon.M2.mpyu.acc.ll.s1
llvm.hexagon.M2.mpyu.hh.s0
llvm.hexagon.M2.mpyu.hh.s1
llvm.hexagon.M2.mpyu.hl.s0
llvm.hexagon.M2.mpyu.hl.s1
llvm.hexagon.M2.mpyu.lh.s0
llvm.hexagon.M2.mpyu.lh.s1
llvm.hexagon.M2.mpyu.ll.s0
llvm.hexagon.M2.mpyu.ll.s1
llvm.hexagon.M2.mpyu.nac.hh.s0
llvm.hexagon.M2.mpyu.nac.hh.s1
llvm.hexagon.M2.mpyu.nac.hl.s0
llvm.hexagon.M2.mpyu.nac.hl.s1
llvm.hexagon.M2.mpyu.nac.lh.s0
llvm.hexagon.M2.mpyu.nac.lh.s1
llvm.hexagon.M2.mpyu.nac.ll.s0
llvm.hexagon.M2.mpyu.nac.ll.s1
llvm.hexagon.M2.mpyu.up
llvm.hexagon.M2.mpyud.acc.hh.s0
llvm.hexagon.M2.mpyud.acc.hh.s1
llvm.hexagon.M2.mpyud.acc.hl.s0
llvm.hexagon.M2.mpyud.acc.hl.s1
llvm.hexagon.M2.mpyud.acc.lh.s0
llvm.hexagon.M2.mpyud.acc.lh.s1
llvm.hexagon.M2.mpyud.acc.ll.s0
llvm.hexagon.M2.mpyud.acc.ll.s1
llvm.hexagon.M2.mpyud.hh.s0
llvm.hexagon.M2.mpyud.hh.s1
llvm.hexagon.M2.mpyud.hl.s0
llvm.hexagon.M2.mpyud.hl.s1
llvm.hexagon.M2.mpyud.lh.s0
llvm.hexagon.M2.mpyud.lh.s1
llvm.hexagon.M2.mpyud.ll.s0
llvm.hexagon.M2.mpyud.ll.s1
llvm.hexagon.M2.mpyud.nac.hh.s0
llvm.hexagon.M2.mpyud.nac.hh.s1
llvm.hexagon.M2.mpyud.nac.hl.s0
llvm.hexagon.M2.mpyud.nac.hl.s1
llvm.hexagon.M2.mpyud.nac.lh.s0
llvm.hexagon.M2.mpyud.nac.lh.s1
llvm.hexagon.M2.mpyud.nac.ll.s0
llvm.hexagon.M2.mpyud.nac.ll.s1
llvm.hexagon.M2.mpyui
llvm.hexagon.M2.nacci
llvm.hexagon.M2.naccii
llvm.hexagon.M2.subacc
llvm.hexagon.M2.vabsdiffh
llvm.hexagon.M2.vabsdiffw
llvm.hexagon.M2.vcmac.s0.sat.i
llvm.hexagon.M2.vcmac.s0.sat.r
llvm.hexagon.M2.vcmpy.s0.sat.i
llvm.hexagon.M2.vcmpy.s0.sat.r
llvm.hexagon.M2.vcmpy.s1.sat.i
llvm.hexagon.M2.vcmpy.s1.sat.r
llvm.hexagon.M2.vdmacs.s0
llvm.hexagon.M2.vdmacs.s1
llvm.hexagon.M2.vdmpyrs.s0
llvm.hexagon.M2.vdmpyrs.s1
llvm.hexagon.M2.vdmpys.s0
llvm.hexagon.M2.vdmpys.s1
llvm.hexagon.M2.vmac2
llvm.hexagon.M2.vmac2es
llvm.hexagon.M2.vmac2es.s0
llvm.hexagon.M2.vmac2es.s1
llvm.hexagon.M2.vmac2s.s0
llvm.hexagon.M2.vmac2s.s1
llvm.hexagon.M2.vmac2su.s0
llvm.hexagon.M2.vmac2su.s1
llvm.hexagon.M2.vmpy2es.s0
llvm.hexagon.M2.vmpy2es.s1
llvm.hexagon.M2.vmpy2s.s0
llvm.hexagon.M2.vmpy2s.s0pack
llvm.hexagon.M2.vmpy2s.s1
llvm.hexagon.M2.vmpy2s.s1pack
llvm.hexagon.M2.vmpy2su.s0
llvm.hexagon.M2.vmpy2su.s1
llvm.hexagon.M2.vraddh
llvm.hexagon.M2.vradduh
llvm.hexagon.M2.vrcmaci.s0
llvm.hexagon.M2.vrcmaci.s0c
llvm.hexagon.M2.vrcmacr.s0
llvm.hexagon.M2.vrcmacr.s0c
llvm.hexagon.M2.vrcmpyi.s0
llvm.hexagon.M2.vrcmpyi.s0c
llvm.hexagon.M2.vrcmpyr.s0
llvm.hexagon.M2.vrcmpyr.s0c
llvm.hexagon.M2.vrcmpys.acc.s1
llvm.hexagon.M2.vrcmpys.s1
llvm.hexagon.M2.vrcmpys.s1rp
llvm.hexagon.M2.vrmac.s0
llvm.hexagon.M2.vrmpy.s0
llvm.hexagon.M2.xor.xacc
llvm.hexagon.M4.and.and
llvm.hexagon.M4.and.andn
llvm.hexagon.M4.and.or
llvm.hexagon.M4.and.xor
llvm.hexagon.M4.cmpyi.wh
llvm.hexagon.M4.cmpyi.whc
llvm.hexagon.M4.cmpyr.wh
llvm.hexagon.M4.cmpyr.whc
llvm.hexagon.M4.mac.up.s1.sat
llvm.hexagon.M4.mpyri.addi
llvm.hexagon.M4.mpyri.addr
llvm.hexagon.M4.mpyri.addr.u2
llvm.hexagon.M4.mpyrr.addi
llvm.hexagon.M4.mpyrr.addr
llvm.hexagon.M4.nac.up.s1.sat
llvm.hexagon.M4.or.and
llvm.hexagon.M4.or.andn
llvm.hexagon.M4.or.or
llvm.hexagon.M4.or.xor
llvm.hexagon.M4.pmpyw
llvm.hexagon.M4.pmpyw.acc
llvm.hexagon.M4.vpmpyh
llvm.hexagon.M4.vpmpyh.acc
llvm.hexagon.M4.vrmpyeh.acc.s0
llvm.hexagon.M4.vrmpyeh.acc.s1
llvm.hexagon.M4.vrmpyeh.s0
llvm.hexagon.M4.vrmpyeh.s1
llvm.hexagon.M4.vrmpyoh.acc.s0
llvm.hexagon.M4.vrmpyoh.acc.s1
llvm.hexagon.M4.vrmpyoh.s0
llvm.hexagon.M4.vrmpyoh.s1
llvm.hexagon.M4.xor.and
llvm.hexagon.M4.xor.andn
llvm.hexagon.M4.xor.or
llvm.hexagon.M4.xor.xacc
llvm.hexagon.M5.vdmacbsu
llvm.hexagon.M5.vdmpybsu
llvm.hexagon.M5.vmacbsu
llvm.hexagon.M5.vmacbuu
llvm.hexagon.M5.vmpybsu
llvm.hexagon.M5.vmpybuu
llvm.hexagon.M5.vrmacbsu
llvm.hexagon.M5.vrmacbuu
llvm.hexagon.M5.vrmpybsu
llvm.hexagon.M5.vrmpybuu
llvm.hexagon.M6.vabsdiffb
llvm.hexagon.M6.vabsdiffub
llvm.hexagon.M7.dcmpyiw
llvm.hexagon.M7.dcmpyiw.acc
llvm.hexagon.M7.dcmpyiwc
llvm.hexagon.M7.dcmpyiwc.acc
llvm.hexagon.M7.dcmpyrw
llvm.hexagon.M7.dcmpyrw.acc
llvm.hexagon.M7.dcmpyrwc
llvm.hexagon.M7.dcmpyrwc.acc
llvm.hexagon.M7.vdmpy
llvm.hexagon.M7.vdmpy.acc
llvm.hexagon.M7.wcmpyiw
llvm.hexagon.M7.wcmpyiw.rnd
llvm.hexagon.M7.wcmpyiwc
llvm.hexagon.M7.wcmpyiwc.rnd
llvm.hexagon.M7.wcmpyrw
llvm.hexagon.M7.wcmpyrw.rnd
llvm.hexagon.M7.wcmpyrwc
llvm.hexagon.M7.wcmpyrwc.rnd
llvm.hexagon.S2.addasl.rrri
llvm.hexagon.S2.asl.i.p
llvm.hexagon.S2.asl.i.p.acc
llvm.hexagon.S2.asl.i.p.and
llvm.hexagon.S2.asl.i.p.nac
llvm.hexagon.S2.asl.i.p.or
llvm.hexagon.S2.asl.i.p.xacc
llvm.hexagon.S2.asl.i.r
llvm.hexagon.S2.asl.i.r.acc
llvm.hexagon.S2.asl.i.r.and
llvm.hexagon.S2.asl.i.r.nac
llvm.hexagon.S2.asl.i.r.or
llvm.hexagon.S2.asl.i.r.sat
llvm.hexagon.S2.asl.i.r.xacc
llvm.hexagon.S2.asl.i.vh
llvm.hexagon.S2.asl.i.vw
llvm.hexagon.S2.asl.r.p
llvm.hexagon.S2.asl.r.p.acc
llvm.hexagon.S2.asl.r.p.and
llvm.hexagon.S2.asl.r.p.nac
llvm.hexagon.S2.asl.r.p.or
llvm.hexagon.S2.asl.r.p.xor
llvm.hexagon.S2.asl.r.r
llvm.hexagon.S2.asl.r.r.acc
llvm.hexagon.S2.asl.r.r.and
llvm.hexagon.S2.asl.r.r.nac
llvm.hexagon.S2.asl.r.r.or
llvm.hexagon.S2.asl.r.r.sat
llvm.hexagon.S2.asl.r.vh
llvm.hexagon.S2.asl.r.vw
llvm.hexagon.S2.asr.i.p
llvm.hexagon.S2.asr.i.p.acc
llvm.hexagon.S2.asr.i.p.and
llvm.hexagon.S2.asr.i.p.nac
llvm.hexagon.S2.asr.i.p.or
llvm.hexagon.S2.asr.i.p.rnd
llvm.hexagon.S2.asr.i.p.rnd.goodsyntax
llvm.hexagon.S2.asr.i.r
llvm.hexagon.S2.asr.i.r.acc
llvm.hexagon.S2.asr.i.r.and
llvm.hexagon.S2.asr.i.r.nac
llvm.hexagon.S2.asr.i.r.or
llvm.hexagon.S2.asr.i.r.rnd
llvm.hexagon.S2.asr.i.r.rnd.goodsyntax
llvm.hexagon.S2.asr.i.svw.trun
llvm.hexagon.S2.asr.i.vh
llvm.hexagon.S2.asr.i.vw
llvm.hexagon.S2.asr.r.p
llvm.hexagon.S2.asr.r.p.acc
llvm.hexagon.S2.asr.r.p.and
llvm.hexagon.S2.asr.r.p.nac
llvm.hexagon.S2.asr.r.p.or
llvm.hexagon.S2.asr.r.p.xor
llvm.hexagon.S2.asr.r.r
llvm.hexagon.S2.asr.r.r.acc
llvm.hexagon.S2.asr.r.r.and
llvm.hexagon.S2.asr.r.r.nac
llvm.hexagon.S2.asr.r.r.or
llvm.hexagon.S2.asr.r.r.sat
llvm.hexagon.S2.asr.r.svw.trun
llvm.hexagon.S2.asr.r.vh
llvm.hexagon.S2.asr.r.vw
llvm.hexagon.S2.brev
llvm.hexagon.S2.brevp
llvm.hexagon.S2.cl0
llvm.hexagon.S2.cl0p
llvm.hexagon.S2.cl1
llvm.hexagon.S2.cl1p
llvm.hexagon.S2.clb
llvm.hexagon.S2.clbnorm
llvm.hexagon.S2.clbp
llvm.hexagon.S2.clrbit.i
llvm.hexagon.S2.clrbit.r
llvm.hexagon.S2.ct0
llvm.hexagon.S2.ct0p
llvm.hexagon.S2.ct1
llvm.hexagon.S2.ct1p
llvm.hexagon.S2.deinterleave
llvm.hexagon.S2.extractu
llvm.hexagon.S2.extractu.rp
llvm.hexagon.S2.extractup
llvm.hexagon.S2.extractup.rp
llvm.hexagon.S2.insert
llvm.hexagon.S2.insert.rp
llvm.hexagon.S2.insertp
llvm.hexagon.S2.insertp.rp
llvm.hexagon.S2.interleave
llvm.hexagon.S2.lfsp
llvm.hexagon.S2.lsl.r.p
llvm.hexagon.S2.lsl.r.p.acc
llvm.hexagon.S2.lsl.r.p.and
llvm.hexagon.S2.lsl.r.p.nac
llvm.hexagon.S2.lsl.r.p.or
llvm.hexagon.S2.lsl.r.p.xor
llvm.hexagon.S2.lsl.r.r
llvm.hexagon.S2.lsl.r.r.acc
llvm.hexagon.S2.lsl.r.r.and
llvm.hexagon.S2.lsl.r.r.nac
llvm.hexagon.S2.lsl.r.r.or
llvm.hexagon.S2.lsl.r.vh
llvm.hexagon.S2.lsl.r.vw
llvm.hexagon.S2.lsr.i.p
llvm.hexagon.S2.lsr.i.p.acc
llvm.hexagon.S2.lsr.i.p.and
llvm.hexagon.S2.lsr.i.p.nac
llvm.hexagon.S2.lsr.i.p.or
llvm.hexagon.S2.lsr.i.p.xacc
llvm.hexagon.S2.lsr.i.r
llvm.hexagon.S2.lsr.i.r.acc
llvm.hexagon.S2.lsr.i.r.and
llvm.hexagon.S2.lsr.i.r.nac
llvm.hexagon.S2.lsr.i.r.or
llvm.hexagon.S2.lsr.i.r.xacc
llvm.hexagon.S2.lsr.i.vh
llvm.hexagon.S2.lsr.i.vw
llvm.hexagon.S2.lsr.r.p
llvm.hexagon.S2.lsr.r.p.acc
llvm.hexagon.S2.lsr.r.p.and
llvm.hexagon.S2.lsr.r.p.nac
llvm.hexagon.S2.lsr.r.p.or
llvm.hexagon.S2.lsr.r.p.xor
llvm.hexagon.S2.lsr.r.r
llvm.hexagon.S2.lsr.r.r.acc
llvm.hexagon.S2.lsr.r.r.and
llvm.hexagon.S2.lsr.r.r.nac
llvm.hexagon.S2.lsr.r.r.or
llvm.hexagon.S2.lsr.r.vh
llvm.hexagon.S2.lsr.r.vw
llvm.hexagon.S2.mask
llvm.hexagon.S2.packhl
llvm.hexagon.S2.parityp
llvm.hexagon.S2.setbit.i
llvm.hexagon.S2.setbit.r
llvm.hexagon.S2.shuffeb
llvm.hexagon.S2.shuffeh
llvm.hexagon.S2.shuffob
llvm.hexagon.S2.shuffoh
llvm.hexagon.S2.storerb.pbr
llvm.hexagon.S2.storerb.pci
llvm.hexagon.S2.storerb.pcr
llvm.hexagon.S2.storerd.pbr
llvm.hexagon.S2.storerd.pci
llvm.hexagon.S2.storerd.pcr
llvm.hexagon.S2.storerf.pbr
llvm.hexagon.S2.storerf.pci
llvm.hexagon.S2.storerf.pcr
llvm.hexagon.S2.storerh.pbr
llvm.hexagon.S2.storerh.pci
llvm.hexagon.S2.storerh.pcr
llvm.hexagon.S2.storeri.pbr
llvm.hexagon.S2.storeri.pci
llvm.hexagon.S2.storeri.pcr
llvm.hexagon.S2.storew.locked
llvm.hexagon.S2.svsathb
llvm.hexagon.S2.svsathub
llvm.hexagon.S2.tableidxb.goodsyntax
llvm.hexagon.S2.tableidxd.goodsyntax
llvm.hexagon.S2.tableidxh.goodsyntax
llvm.hexagon.S2.tableidxw.goodsyntax
llvm.hexagon.S2.togglebit.i
llvm.hexagon.S2.togglebit.r
llvm.hexagon.S2.tstbit.i
llvm.hexagon.S2.tstbit.r
llvm.hexagon.S2.valignib
llvm.hexagon.S2.valignrb
llvm.hexagon.S2.vcnegh
llvm.hexagon.S2.vcrotate
llvm.hexagon.S2.vrcnegh
llvm.hexagon.S2.vrndpackwh
llvm.hexagon.S2.vrndpackwhs
llvm.hexagon.S2.vsathb
llvm.hexagon.S2.vsathb.nopack
llvm.hexagon.S2.vsathub
llvm.hexagon.S2.vsathub.nopack
llvm.hexagon.S2.vsatwh
llvm.hexagon.S2.vsatwh.nopack
llvm.hexagon.S2.vsatwuh
llvm.hexagon.S2.vsatwuh.nopack
llvm.hexagon.S2.vsplatrb
llvm.hexagon.S2.vsplatrh
llvm.hexagon.S2.vspliceib
llvm.hexagon.S2.vsplicerb
llvm.hexagon.S2.vsxtbh
llvm.hexagon.S2.vsxthw
llvm.hexagon.S2.vtrunehb
llvm.hexagon.S2.vtrunewh
llvm.hexagon.S2.vtrunohb
llvm.hexagon.S2.vtrunowh
llvm.hexagon.S2.vzxtbh
llvm.hexagon.S2.vzxthw
llvm.hexagon.S4.addaddi
llvm.hexagon.S4.addi.asl.ri
llvm.hexagon.S4.addi.lsr.ri
llvm.hexagon.S4.andi.asl.ri
llvm.hexagon.S4.andi.lsr.ri
llvm.hexagon.S4.clbaddi
llvm.hexagon.S4.clbpaddi
llvm.hexagon.S4.clbpnorm
llvm.hexagon.S4.extract
llvm.hexagon.S4.extract.rp
llvm.hexagon.S4.extractp
llvm.hexagon.S4.extractp.rp
llvm.hexagon.S4.lsli
llvm.hexagon.S4.ntstbit.i
llvm.hexagon.S4.ntstbit.r
llvm.hexagon.S4.or.andi
llvm.hexagon.S4.or.andix
llvm.hexagon.S4.or.ori
llvm.hexagon.S4.ori.asl.ri
llvm.hexagon.S4.ori.lsr.ri
llvm.hexagon.S4.parity
llvm.hexagon.S4.stored.locked
llvm.hexagon.S4.subaddi
llvm.hexagon.S4.subi.asl.ri
llvm.hexagon.S4.subi.lsr.ri
llvm.hexagon.S4.vrcrotate
llvm.hexagon.S4.vrcrotate.acc
llvm.hexagon.S4.vxaddsubh
llvm.hexagon.S4.vxaddsubhr
llvm.hexagon.S4.vxaddsubw
llvm.hexagon.S4.vxsubaddh
llvm.hexagon.S4.vxsubaddhr
llvm.hexagon.S4.vxsubaddw
llvm.hexagon.S5.asrhub.rnd.sat.goodsyntax
llvm.hexagon.S5.asrhub.sat
llvm.hexagon.S5.popcountp
llvm.hexagon.S5.vasrhrnd.goodsyntax
llvm.hexagon.S6.rol.i.p
llvm.hexagon.S6.rol.i.p.acc
llvm.hexagon.S6.rol.i.p.and
llvm.hexagon.S6.rol.i.p.nac
llvm.hexagon.S6.rol.i.p.or
llvm.hexagon.S6.rol.i.p.xacc
llvm.hexagon.S6.rol.i.r
llvm.hexagon.S6.rol.i.r.acc
llvm.hexagon.S6.rol.i.r.and
llvm.hexagon.S6.rol.i.r.nac
llvm.hexagon.S6.rol.i.r.or
llvm.hexagon.S6.rol.i.r.xacc
llvm.hexagon.S6.vsplatrbp
llvm.hexagon.S6.vtrunehb.ppp
llvm.hexagon.S6.vtrunohb.ppp
llvm.hexagon.V6.extractw
llvm.hexagon.V6.extractw.128B
llvm.hexagon.V6.hi
llvm.hexagon.V6.hi.128B
llvm.hexagon.V6.lo
llvm.hexagon.V6.lo.128B
llvm.hexagon.V6.lvsplatb
llvm.hexagon.V6.lvsplatb.128B
llvm.hexagon.V6.lvsplath
llvm.hexagon.V6.lvsplath.128B
llvm.hexagon.V6.lvsplatw
llvm.hexagon.V6.lvsplatw.128B
llvm.hexagon.V6.pred.and
llvm.hexagon.V6.pred.and.128B
llvm.hexagon.V6.pred.and.n
llvm.hexagon.V6.pred.and.n.128B
llvm.hexagon.V6.pred.not
llvm.hexagon.V6.pred.not.128B
llvm.hexagon.V6.pred.or
llvm.hexagon.V6.pred.or.128B
llvm.hexagon.V6.pred.or.n
llvm.hexagon.V6.pred.or.n.128B
llvm.hexagon.V6.pred.scalar2
llvm.hexagon.V6.pred.scalar2.128B
llvm.hexagon.V6.pred.scalar2v2
llvm.hexagon.V6.pred.scalar2v2.128B
llvm.hexagon.V6.pred.typecast
llvm.hexagon.V6.pred.typecast.128B
llvm.hexagon.V6.pred.xor
llvm.hexagon.V6.pred.xor.128B
llvm.hexagon.V6.shuffeqh
llvm.hexagon.V6.shuffeqh.128B
llvm.hexagon.V6.shuffeqw
llvm.hexagon.V6.shuffeqw.128B
llvm.hexagon.V6.vS32b.nqpred.ai
llvm.hexagon.V6.vS32b.nqpred.ai.128B
llvm.hexagon.V6.vS32b.nt.nqpred.ai
llvm.hexagon.V6.vS32b.nt.nqpred.ai.128B
llvm.hexagon.V6.vS32b.nt.qpred.ai
llvm.hexagon.V6.vS32b.nt.qpred.ai.128B
llvm.hexagon.V6.vS32b.qpred.ai
llvm.hexagon.V6.vS32b.qpred.ai.128B
llvm.hexagon.V6.vabsb
llvm.hexagon.V6.vabsb.128B
llvm.hexagon.V6.vabsb.sat
llvm.hexagon.V6.vabsb.sat.128B
llvm.hexagon.V6.vabsdiffh
llvm.hexagon.V6.vabsdiffh.128B
llvm.hexagon.V6.vabsdiffub
llvm.hexagon.V6.vabsdiffub.128B
llvm.hexagon.V6.vabsdiffuh
llvm.hexagon.V6.vabsdiffuh.128B
llvm.hexagon.V6.vabsdiffw
llvm.hexagon.V6.vabsdiffw.128B
llvm.hexagon.V6.vabsh
llvm.hexagon.V6.vabsh.128B
llvm.hexagon.V6.vabsh.sat
llvm.hexagon.V6.vabsh.sat.128B
llvm.hexagon.V6.vabsw
llvm.hexagon.V6.vabsw.128B
llvm.hexagon.V6.vabsw.sat
llvm.hexagon.V6.vabsw.sat.128B
llvm.hexagon.V6.vaddb
llvm.hexagon.V6.vaddb.128B
llvm.hexagon.V6.vaddb.dv
llvm.hexagon.V6.vaddb.dv.128B
llvm.hexagon.V6.vaddbnq
llvm.hexagon.V6.vaddbnq.128B
llvm.hexagon.V6.vaddbq
llvm.hexagon.V6.vaddbq.128B
llvm.hexagon.V6.vaddbsat
llvm.hexagon.V6.vaddbsat.128B
llvm.hexagon.V6.vaddbsat.dv
llvm.hexagon.V6.vaddbsat.dv.128B
llvm.hexagon.V6.vaddcarry
llvm.hexagon.V6.vaddcarry.128B
llvm.hexagon.V6.vaddcarrysat
llvm.hexagon.V6.vaddcarrysat.128B
llvm.hexagon.V6.vaddclbh
llvm.hexagon.V6.vaddclbh.128B
llvm.hexagon.V6.vaddclbw
llvm.hexagon.V6.vaddclbw.128B
llvm.hexagon.V6.vaddh
llvm.hexagon.V6.vaddh.128B
llvm.hexagon.V6.vaddh.dv
llvm.hexagon.V6.vaddh.dv.128B
llvm.hexagon.V6.vaddhnq
llvm.hexagon.V6.vaddhnq.128B
llvm.hexagon.V6.vaddhq
llvm.hexagon.V6.vaddhq.128B
llvm.hexagon.V6.vaddhsat
llvm.hexagon.V6.vaddhsat.128B
llvm.hexagon.V6.vaddhsat.dv
llvm.hexagon.V6.vaddhsat.dv.128B
llvm.hexagon.V6.vaddhw
llvm.hexagon.V6.vaddhw.128B
llvm.hexagon.V6.vaddhw.acc
llvm.hexagon.V6.vaddhw.acc.128B
llvm.hexagon.V6.vaddubh
llvm.hexagon.V6.vaddubh.128B
llvm.hexagon.V6.vaddubh.acc
llvm.hexagon.V6.vaddubh.acc.128B
llvm.hexagon.V6.vaddubsat
llvm.hexagon.V6.vaddubsat.128B
llvm.hexagon.V6.vaddubsat.dv
llvm.hexagon.V6.vaddubsat.dv.128B
llvm.hexagon.V6.vaddububb.sat
llvm.hexagon.V6.vaddububb.sat.128B
llvm.hexagon.V6.vadduhsat
llvm.hexagon.V6.vadduhsat.128B
llvm.hexagon.V6.vadduhsat.dv
llvm.hexagon.V6.vadduhsat.dv.128B
llvm.hexagon.V6.vadduhw
llvm.hexagon.V6.vadduhw.128B
llvm.hexagon.V6.vadduhw.acc
llvm.hexagon.V6.vadduhw.acc.128B
llvm.hexagon.V6.vadduwsat
llvm.hexagon.V6.vadduwsat.128B
llvm.hexagon.V6.vadduwsat.dv
llvm.hexagon.V6.vadduwsat.dv.128B
llvm.hexagon.V6.vaddw
llvm.hexagon.V6.vaddw.128B
llvm.hexagon.V6.vaddw.dv
llvm.hexagon.V6.vaddw.dv.128B
llvm.hexagon.V6.vaddwnq
llvm.hexagon.V6.vaddwnq.128B
llvm.hexagon.V6.vaddwq
llvm.hexagon.V6.vaddwq.128B
llvm.hexagon.V6.vaddwsat
llvm.hexagon.V6.vaddwsat.128B
llvm.hexagon.V6.vaddwsat.dv
llvm.hexagon.V6.vaddwsat.dv.128B
llvm.hexagon.V6.valignb
llvm.hexagon.V6.valignb.128B
llvm.hexagon.V6.valignbi
llvm.hexagon.V6.valignbi.128B
llvm.hexagon.V6.vand
llvm.hexagon.V6.vand.128B
llvm.hexagon.V6.vandnqrt
llvm.hexagon.V6.vandnqrt.128B
llvm.hexagon.V6.vandnqrt.acc
llvm.hexagon.V6.vandnqrt.acc.128B
llvm.hexagon.V6.vandqrt
llvm.hexagon.V6.vandqrt.128B
llvm.hexagon.V6.vandqrt.acc
llvm.hexagon.V6.vandqrt.acc.128B
llvm.hexagon.V6.vandvnqv
llvm.hexagon.V6.vandvnqv.128B
llvm.hexagon.V6.vandvqv
llvm.hexagon.V6.vandvqv.128B
llvm.hexagon.V6.vandvrt
llvm.hexagon.V6.vandvrt.128B
llvm.hexagon.V6.vandvrt.acc
llvm.hexagon.V6.vandvrt.acc.128B
llvm.hexagon.V6.vaslh
llvm.hexagon.V6.vaslh.128B
llvm.hexagon.V6.vaslh.acc
llvm.hexagon.V6.vaslh.acc.128B
llvm.hexagon.V6.vaslhv
llvm.hexagon.V6.vaslhv.128B
llvm.hexagon.V6.vaslw
llvm.hexagon.V6.vaslw.128B
llvm.hexagon.V6.vaslw.acc
llvm.hexagon.V6.vaslw.acc.128B
llvm.hexagon.V6.vaslwv
llvm.hexagon.V6.vaslwv.128B
llvm.hexagon.V6.vasr.into
llvm.hexagon.V6.vasr.into.128B
llvm.hexagon.V6.vasrh
llvm.hexagon.V6.vasrh.128B
llvm.hexagon.V6.vasrh.acc
llvm.hexagon.V6.vasrh.acc.128B
llvm.hexagon.V6.vasrhbrndsat
llvm.hexagon.V6.vasrhbrndsat.128B
llvm.hexagon.V6.vasrhbsat
llvm.hexagon.V6.vasrhbsat.128B
llvm.hexagon.V6.vasrhubrndsat
llvm.hexagon.V6.vasrhubrndsat.128B
llvm.hexagon.V6.vasrhubsat
llvm.hexagon.V6.vasrhubsat.128B
llvm.hexagon.V6.vasrhv
llvm.hexagon.V6.vasrhv.128B
llvm.hexagon.V6.vasruhubrndsat
llvm.hexagon.V6.vasruhubrndsat.128B
llvm.hexagon.V6.vasruhubsat
llvm.hexagon.V6.vasruhubsat.128B
llvm.hexagon.V6.vasruwuhrndsat
llvm.hexagon.V6.vasruwuhrndsat.128B
llvm.hexagon.V6.vasruwuhsat
llvm.hexagon.V6.vasruwuhsat.128B
llvm.hexagon.V6.vasrw
llvm.hexagon.V6.vasrw.128B
llvm.hexagon.V6.vasrw.acc
llvm.hexagon.V6.vasrw.acc.128B
llvm.hexagon.V6.vasrwh
llvm.hexagon.V6.vasrwh.128B
llvm.hexagon.V6.vasrwhrndsat
llvm.hexagon.V6.vasrwhrndsat.128B
llvm.hexagon.V6.vasrwhsat
llvm.hexagon.V6.vasrwhsat.128B
llvm.hexagon.V6.vasrwuhrndsat
llvm.hexagon.V6.vasrwuhrndsat.128B
llvm.hexagon.V6.vasrwuhsat
llvm.hexagon.V6.vasrwuhsat.128B
llvm.hexagon.V6.vasrwv
llvm.hexagon.V6.vasrwv.128B
llvm.hexagon.V6.vassign
llvm.hexagon.V6.vassign.128B
llvm.hexagon.V6.vassignp
llvm.hexagon.V6.vassignp.128B
llvm.hexagon.V6.vavgb
llvm.hexagon.V6.vavgb.128B
llvm.hexagon.V6.vavgbrnd
llvm.hexagon.V6.vavgbrnd.128B
llvm.hexagon.V6.vavgh
llvm.hexagon.V6.vavgh.128B
llvm.hexagon.V6.vavghrnd
llvm.hexagon.V6.vavghrnd.128B
llvm.hexagon.V6.vavgub
llvm.hexagon.V6.vavgub.128B
llvm.hexagon.V6.vavgubrnd
llvm.hexagon.V6.vavgubrnd.128B
llvm.hexagon.V6.vavguh
llvm.hexagon.V6.vavguh.128B
llvm.hexagon.V6.vavguhrnd
llvm.hexagon.V6.vavguhrnd.128B
llvm.hexagon.V6.vavguw
llvm.hexagon.V6.vavguw.128B
llvm.hexagon.V6.vavguwrnd
llvm.hexagon.V6.vavguwrnd.128B
llvm.hexagon.V6.vavgw
llvm.hexagon.V6.vavgw.128B
llvm.hexagon.V6.vavgwrnd
llvm.hexagon.V6.vavgwrnd.128B
llvm.hexagon.V6.vcl0h
llvm.hexagon.V6.vcl0h.128B
llvm.hexagon.V6.vcl0w
llvm.hexagon.V6.vcl0w.128B
llvm.hexagon.V6.vcombine
llvm.hexagon.V6.vcombine.128B
llvm.hexagon.V6.vd0
llvm.hexagon.V6.vd0.128B
llvm.hexagon.V6.vdd0
llvm.hexagon.V6.vdd0.128B
llvm.hexagon.V6.vdealb
llvm.hexagon.V6.vdealb.128B
llvm.hexagon.V6.vdealb4w
llvm.hexagon.V6.vdealb4w.128B
llvm.hexagon.V6.vdealh
llvm.hexagon.V6.vdealh.128B
llvm.hexagon.V6.vdealvdd
llvm.hexagon.V6.vdealvdd.128B
llvm.hexagon.V6.vdelta
llvm.hexagon.V6.vdelta.128B
llvm.hexagon.V6.vdmpybus
llvm.hexagon.V6.vdmpybus.128B
llvm.hexagon.V6.vdmpybus.acc
llvm.hexagon.V6.vdmpybus.acc.128B
llvm.hexagon.V6.vdmpybus.dv
llvm.hexagon.V6.vdmpybus.dv.128B
llvm.hexagon.V6.vdmpybus.dv.acc
llvm.hexagon.V6.vdmpybus.dv.acc.128B
llvm.hexagon.V6.vdmpyhb
llvm.hexagon.V6.vdmpyhb.128B
llvm.hexagon.V6.vdmpyhb.acc
llvm.hexagon.V6.vdmpyhb.acc.128B
llvm.hexagon.V6.vdmpyhb.dv
llvm.hexagon.V6.vdmpyhb.dv.128B
llvm.hexagon.V6.vdmpyhb.dv.acc
llvm.hexagon.V6.vdmpyhb.dv.acc.128B
llvm.hexagon.V6.vdmpyhisat
llvm.hexagon.V6.vdmpyhisat.128B
llvm.hexagon.V6.vdmpyhisat.acc
llvm.hexagon.V6.vdmpyhisat.acc.128B
llvm.hexagon.V6.vdmpyhsat
llvm.hexagon.V6.vdmpyhsat.128B
llvm.hexagon.V6.vdmpyhsat.acc
llvm.hexagon.V6.vdmpyhsat.acc.128B
llvm.hexagon.V6.vdmpyhsuisat
llvm.hexagon.V6.vdmpyhsuisat.128B
llvm.hexagon.V6.vdmpyhsuisat.acc
llvm.hexagon.V6.vdmpyhsuisat.acc.128B
llvm.hexagon.V6.vdmpyhsusat
llvm.hexagon.V6.vdmpyhsusat.128B
llvm.hexagon.V6.vdmpyhsusat.acc
llvm.hexagon.V6.vdmpyhsusat.acc.128B
llvm.hexagon.V6.vdmpyhvsat
llvm.hexagon.V6.vdmpyhvsat.128B
llvm.hexagon.V6.vdmpyhvsat.acc
llvm.hexagon.V6.vdmpyhvsat.acc.128B
llvm.hexagon.V6.vdsaduh
llvm.hexagon.V6.vdsaduh.128B
llvm.hexagon.V6.vdsaduh.acc
llvm.hexagon.V6.vdsaduh.acc.128B
llvm.hexagon.V6.veqb
llvm.hexagon.V6.veqb.128B
llvm.hexagon.V6.veqb.and
llvm.hexagon.V6.veqb.and.128B
llvm.hexagon.V6.veqb.or
llvm.hexagon.V6.veqb.or.128B
llvm.hexagon.V6.veqb.xor
llvm.hexagon.V6.veqb.xor.128B
llvm.hexagon.V6.veqh
llvm.hexagon.V6.veqh.128B
llvm.hexagon.V6.veqh.and
llvm.hexagon.V6.veqh.and.128B
llvm.hexagon.V6.veqh.or
llvm.hexagon.V6.veqh.or.128B
llvm.hexagon.V6.veqh.xor
llvm.hexagon.V6.veqh.xor.128B
llvm.hexagon.V6.veqw
llvm.hexagon.V6.veqw.128B
llvm.hexagon.V6.veqw.and
llvm.hexagon.V6.veqw.and.128B
llvm.hexagon.V6.veqw.or
llvm.hexagon.V6.veqw.or.128B
llvm.hexagon.V6.veqw.xor
llvm.hexagon.V6.veqw.xor.128B
llvm.hexagon.V6.vgathermh
llvm.hexagon.V6.vgathermh.128B
llvm.hexagon.V6.vgathermhq
llvm.hexagon.V6.vgathermhq.128B
llvm.hexagon.V6.vgathermhw
llvm.hexagon.V6.vgathermhw.128B
llvm.hexagon.V6.vgathermhwq
llvm.hexagon.V6.vgathermhwq.128B
llvm.hexagon.V6.vgathermw
llvm.hexagon.V6.vgathermw.128B
llvm.hexagon.V6.vgathermwq
llvm.hexagon.V6.vgathermwq.128B
llvm.hexagon.V6.vgtb
llvm.hexagon.V6.vgtb.128B
llvm.hexagon.V6.vgtb.and
llvm.hexagon.V6.vgtb.and.128B
llvm.hexagon.V6.vgtb.or
llvm.hexagon.V6.vgtb.or.128B
llvm.hexagon.V6.vgtb.xor
llvm.hexagon.V6.vgtb.xor.128B
llvm.hexagon.V6.vgth
llvm.hexagon.V6.vgth.128B
llvm.hexagon.V6.vgth.and
llvm.hexagon.V6.vgth.and.128B
llvm.hexagon.V6.vgth.or
llvm.hexagon.V6.vgth.or.128B
llvm.hexagon.V6.vgth.xor
llvm.hexagon.V6.vgth.xor.128B
llvm.hexagon.V6.vgtub
llvm.hexagon.V6.vgtub.128B
llvm.hexagon.V6.vgtub.and
llvm.hexagon.V6.vgtub.and.128B
llvm.hexagon.V6.vgtub.or
llvm.hexagon.V6.vgtub.or.128B
llvm.hexagon.V6.vgtub.xor
llvm.hexagon.V6.vgtub.xor.128B
llvm.hexagon.V6.vgtuh
llvm.hexagon.V6.vgtuh.128B
llvm.hexagon.V6.vgtuh.and
llvm.hexagon.V6.vgtuh.and.128B
llvm.hexagon.V6.vgtuh.or
llvm.hexagon.V6.vgtuh.or.128B
llvm.hexagon.V6.vgtuh.xor
llvm.hexagon.V6.vgtuh.xor.128B
llvm.hexagon.V6.vgtuw
llvm.hexagon.V6.vgtuw.128B
llvm.hexagon.V6.vgtuw.and
llvm.hexagon.V6.vgtuw.and.128B
llvm.hexagon.V6.vgtuw.or
llvm.hexagon.V6.vgtuw.or.128B
llvm.hexagon.V6.vgtuw.xor
llvm.hexagon.V6.vgtuw.xor.128B
llvm.hexagon.V6.vgtw
llvm.hexagon.V6.vgtw.128B
llvm.hexagon.V6.vgtw.and
llvm.hexagon.V6.vgtw.and.128B
llvm.hexagon.V6.vgtw.or
llvm.hexagon.V6.vgtw.or.128B
llvm.hexagon.V6.vgtw.xor
llvm.hexagon.V6.vgtw.xor.128B
llvm.hexagon.V6.vinsertwr
llvm.hexagon.V6.vinsertwr.128B
llvm.hexagon.V6.vlalignb
llvm.hexagon.V6.vlalignb.128B
llvm.hexagon.V6.vlalignbi
llvm.hexagon.V6.vlalignbi.128B
llvm.hexagon.V6.vlsrb
llvm.hexagon.V6.vlsrb.128B
llvm.hexagon.V6.vlsrh
llvm.hexagon.V6.vlsrh.128B
llvm.hexagon.V6.vlsrhv
llvm.hexagon.V6.vlsrhv.128B
llvm.hexagon.V6.vlsrw
llvm.hexagon.V6.vlsrw.128B
llvm.hexagon.V6.vlsrwv
llvm.hexagon.V6.vlsrwv.128B
llvm.hexagon.V6.vlut4
llvm.hexagon.V6.vlut4.128B
llvm.hexagon.V6.vlutvvb
llvm.hexagon.V6.vlutvvb.128B
llvm.hexagon.V6.vlutvvb.nm
llvm.hexagon.V6.vlutvvb.nm.128B
llvm.hexagon.V6.vlutvvb.oracc
llvm.hexagon.V6.vlutvvb.oracc.128B
llvm.hexagon.V6.vlutvvb.oracci
llvm.hexagon.V6.vlutvvb.oracci.128B
llvm.hexagon.V6.vlutvvbi
llvm.hexagon.V6.vlutvvbi.128B
llvm.hexagon.V6.vlutvwh
llvm.hexagon.V6.vlutvwh.128B
llvm.hexagon.V6.vlutvwh.nm
llvm.hexagon.V6.vlutvwh.nm.128B
llvm.hexagon.V6.vlutvwh.oracc
llvm.hexagon.V6.vlutvwh.oracc.128B
llvm.hexagon.V6.vlutvwh.oracci
llvm.hexagon.V6.vlutvwh.oracci.128B
llvm.hexagon.V6.vlutvwhi
llvm.hexagon.V6.vlutvwhi.128B
llvm.hexagon.V6.vmaskedstorenq
llvm.hexagon.V6.vmaskedstorenq.128B
llvm.hexagon.V6.vmaskedstorentnq
llvm.hexagon.V6.vmaskedstorentnq.128B
llvm.hexagon.V6.vmaskedstorentq
llvm.hexagon.V6.vmaskedstorentq.128B
llvm.hexagon.V6.vmaskedstoreq
llvm.hexagon.V6.vmaskedstoreq.128B
llvm.hexagon.V6.vmaxb
llvm.hexagon.V6.vmaxb.128B
llvm.hexagon.V6.vmaxh
llvm.hexagon.V6.vmaxh.128B
llvm.hexagon.V6.vmaxub
llvm.hexagon.V6.vmaxub.128B
llvm.hexagon.V6.vmaxuh
llvm.hexagon.V6.vmaxuh.128B
llvm.hexagon.V6.vmaxw
llvm.hexagon.V6.vmaxw.128B
llvm.hexagon.V6.vminb
llvm.hexagon.V6.vminb.128B
llvm.hexagon.V6.vminh
llvm.hexagon.V6.vminh.128B
llvm.hexagon.V6.vminub
llvm.hexagon.V6.vminub.128B
llvm.hexagon.V6.vminuh
llvm.hexagon.V6.vminuh.128B
llvm.hexagon.V6.vminw
llvm.hexagon.V6.vminw.128B
llvm.hexagon.V6.vmpabus
llvm.hexagon.V6.vmpabus.128B
llvm.hexagon.V6.vmpabus.acc
llvm.hexagon.V6.vmpabus.acc.128B
llvm.hexagon.V6.vmpabusv
llvm.hexagon.V6.vmpabusv.128B
llvm.hexagon.V6.vmpabuu
llvm.hexagon.V6.vmpabuu.128B
llvm.hexagon.V6.vmpabuu.acc
llvm.hexagon.V6.vmpabuu.acc.128B
llvm.hexagon.V6.vmpabuuv
llvm.hexagon.V6.vmpabuuv.128B
llvm.hexagon.V6.vmpahb
llvm.hexagon.V6.vmpahb.128B
llvm.hexagon.V6.vmpahb.acc
llvm.hexagon.V6.vmpahb.acc.128B
llvm.hexagon.V6.vmpahhsat
llvm.hexagon.V6.vmpahhsat.128B
llvm.hexagon.V6.vmpauhb
llvm.hexagon.V6.vmpauhb.128B
llvm.hexagon.V6.vmpauhb.acc
llvm.hexagon.V6.vmpauhb.acc.128B
llvm.hexagon.V6.vmpauhuhsat
llvm.hexagon.V6.vmpauhuhsat.128B
llvm.hexagon.V6.vmpsuhuhsat
llvm.hexagon.V6.vmpsuhuhsat.128B
llvm.hexagon.V6.vmpybus
llvm.hexagon.V6.vmpybus.128B
llvm.hexagon.V6.vmpybus.acc
llvm.hexagon.V6.vmpybus.acc.128B
llvm.hexagon.V6.vmpybusv
llvm.hexagon.V6.vmpybusv.128B
llvm.hexagon.V6.vmpybusv.acc
llvm.hexagon.V6.vmpybusv.acc.128B
llvm.hexagon.V6.vmpybv
llvm.hexagon.V6.vmpybv.128B
llvm.hexagon.V6.vmpybv.acc
llvm.hexagon.V6.vmpybv.acc.128B
llvm.hexagon.V6.vmpyewuh
llvm.hexagon.V6.vmpyewuh.128B
llvm.hexagon.V6.vmpyewuh.64
llvm.hexagon.V6.vmpyewuh.64.128B
llvm.hexagon.V6.vmpyh
llvm.hexagon.V6.vmpyh.128B
llvm.hexagon.V6.vmpyh.acc
llvm.hexagon.V6.vmpyh.acc.128B
llvm.hexagon.V6.vmpyhsat.acc
llvm.hexagon.V6.vmpyhsat.acc.128B
llvm.hexagon.V6.vmpyhsrs
llvm.hexagon.V6.vmpyhsrs.128B
llvm.hexagon.V6.vmpyhss
llvm.hexagon.V6.vmpyhss.128B
llvm.hexagon.V6.vmpyhus
llvm.hexagon.V6.vmpyhus.128B
llvm.hexagon.V6.vmpyhus.acc
llvm.hexagon.V6.vmpyhus.acc.128B
llvm.hexagon.V6.vmpyhv
llvm.hexagon.V6.vmpyhv.128B
llvm.hexagon.V6.vmpyhv.acc
llvm.hexagon.V6.vmpyhv.acc.128B
llvm.hexagon.V6.vmpyhvsrs
llvm.hexagon.V6.vmpyhvsrs.128B
llvm.hexagon.V6.vmpyieoh
llvm.hexagon.V6.vmpyieoh.128B
llvm.hexagon.V6.vmpyiewh.acc
llvm.hexagon.V6.vmpyiewh.acc.128B
llvm.hexagon.V6.vmpyiewuh
llvm.hexagon.V6.vmpyiewuh.128B
llvm.hexagon.V6.vmpyiewuh.acc
llvm.hexagon.V6.vmpyiewuh.acc.128B
llvm.hexagon.V6.vmpyih
llvm.hexagon.V6.vmpyih.128B
llvm.hexagon.V6.vmpyih.acc
llvm.hexagon.V6.vmpyih.acc.128B
llvm.hexagon.V6.vmpyihb
llvm.hexagon.V6.vmpyihb.128B
llvm.hexagon.V6.vmpyihb.acc
llvm.hexagon.V6.vmpyihb.acc.128B
llvm.hexagon.V6.vmpyiowh
llvm.hexagon.V6.vmpyiowh.128B
llvm.hexagon.V6.vmpyiwb
llvm.hexagon.V6.vmpyiwb.128B
llvm.hexagon.V6.vmpyiwb.acc
llvm.hexagon.V6.vmpyiwb.acc.128B
llvm.hexagon.V6.vmpyiwh
llvm.hexagon.V6.vmpyiwh.128B
llvm.hexagon.V6.vmpyiwh.acc
llvm.hexagon.V6.vmpyiwh.acc.128B
llvm.hexagon.V6.vmpyiwub
llvm.hexagon.V6.vmpyiwub.128B
llvm.hexagon.V6.vmpyiwub.acc
llvm.hexagon.V6.vmpyiwub.acc.128B
llvm.hexagon.V6.vmpyowh
llvm.hexagon.V6.vmpyowh.128B
llvm.hexagon.V6.vmpyowh.64.acc
llvm.hexagon.V6.vmpyowh.64.acc.128B
llvm.hexagon.V6.vmpyowh.rnd
llvm.hexagon.V6.vmpyowh.rnd.128B
llvm.hexagon.V6.vmpyowh.rnd.sacc
llvm.hexagon.V6.vmpyowh.rnd.sacc.128B
llvm.hexagon.V6.vmpyowh.sacc
llvm.hexagon.V6.vmpyowh.sacc.128B
llvm.hexagon.V6.vmpyub
llvm.hexagon.V6.vmpyub.128B
llvm.hexagon.V6.vmpyub.acc
llvm.hexagon.V6.vmpyub.acc.128B
llvm.hexagon.V6.vmpyubv
llvm.hexagon.V6.vmpyubv.128B
llvm.hexagon.V6.vmpyubv.acc
llvm.hexagon.V6.vmpyubv.acc.128B
llvm.hexagon.V6.vmpyuh
llvm.hexagon.V6.vmpyuh.128B
llvm.hexagon.V6.vmpyuh.acc
llvm.hexagon.V6.vmpyuh.acc.128B
llvm.hexagon.V6.vmpyuhe
llvm.hexagon.V6.vmpyuhe.128B
llvm.hexagon.V6.vmpyuhe.acc
llvm.hexagon.V6.vmpyuhe.acc.128B
llvm.hexagon.V6.vmpyuhv
llvm.hexagon.V6.vmpyuhv.128B
llvm.hexagon.V6.vmpyuhv.acc
llvm.hexagon.V6.vmpyuhv.acc.128B
llvm.hexagon.V6.vmux
llvm.hexagon.V6.vmux.128B
llvm.hexagon.V6.vnavgb
llvm.hexagon.V6.vnavgb.128B
llvm.hexagon.V6.vnavgh
llvm.hexagon.V6.vnavgh.128B
llvm.hexagon.V6.vnavgub
llvm.hexagon.V6.vnavgub.128B
llvm.hexagon.V6.vnavgw
llvm.hexagon.V6.vnavgw.128B
llvm.hexagon.V6.vnormamth
llvm.hexagon.V6.vnormamth.128B
llvm.hexagon.V6.vnormamtw
llvm.hexagon.V6.vnormamtw.128B
llvm.hexagon.V6.vnot
llvm.hexagon.V6.vnot.128B
llvm.hexagon.V6.vor
llvm.hexagon.V6.vor.128B
llvm.hexagon.V6.vpackeb
llvm.hexagon.V6.vpackeb.128B
llvm.hexagon.V6.vpackeh
llvm.hexagon.V6.vpackeh.128B
llvm.hexagon.V6.vpackhb.sat
llvm.hexagon.V6.vpackhb.sat.128B
llvm.hexagon.V6.vpackhub.sat
llvm.hexagon.V6.vpackhub.sat.128B
llvm.hexagon.V6.vpackob
llvm.hexagon.V6.vpackob.128B
llvm.hexagon.V6.vpackoh
llvm.hexagon.V6.vpackoh.128B
llvm.hexagon.V6.vpackwh.sat
llvm.hexagon.V6.vpackwh.sat.128B
llvm.hexagon.V6.vpackwuh.sat
llvm.hexagon.V6.vpackwuh.sat.128B
llvm.hexagon.V6.vpopcounth
llvm.hexagon.V6.vpopcounth.128B
llvm.hexagon.V6.vprefixqb
llvm.hexagon.V6.vprefixqb.128B
llvm.hexagon.V6.vprefixqh
llvm.hexagon.V6.vprefixqh.128B
llvm.hexagon.V6.vprefixqw
llvm.hexagon.V6.vprefixqw.128B
llvm.hexagon.V6.vrdelta
llvm.hexagon.V6.vrdelta.128B
llvm.hexagon.V6.vrmpybub.rtt
llvm.hexagon.V6.vrmpybub.rtt.128B
llvm.hexagon.V6.vrmpybub.rtt.acc
llvm.hexagon.V6.vrmpybub.rtt.acc.128B
llvm.hexagon.V6.vrmpybus
llvm.hexagon.V6.vrmpybus.128B
llvm.hexagon.V6.vrmpybus.acc
llvm.hexagon.V6.vrmpybus.acc.128B
llvm.hexagon.V6.vrmpybusi
llvm.hexagon.V6.vrmpybusi.128B
llvm.hexagon.V6.vrmpybusi.acc
llvm.hexagon.V6.vrmpybusi.acc.128B
llvm.hexagon.V6.vrmpybusv
llvm.hexagon.V6.vrmpybusv.128B
llvm.hexagon.V6.vrmpybusv.acc
llvm.hexagon.V6.vrmpybusv.acc.128B
llvm.hexagon.V6.vrmpybv
llvm.hexagon.V6.vrmpybv.128B
llvm.hexagon.V6.vrmpybv.acc
llvm.hexagon.V6.vrmpybv.acc.128B
llvm.hexagon.V6.vrmpyub
llvm.hexagon.V6.vrmpyub.128B
llvm.hexagon.V6.vrmpyub.acc
llvm.hexagon.V6.vrmpyub.acc.128B
llvm.hexagon.V6.vrmpyub.rtt
llvm.hexagon.V6.vrmpyub.rtt.128B
llvm.hexagon.V6.vrmpyub.rtt.acc
llvm.hexagon.V6.vrmpyub.rtt.acc.128B
llvm.hexagon.V6.vrmpyubi
llvm.hexagon.V6.vrmpyubi.128B
llvm.hexagon.V6.vrmpyubi.acc
llvm.hexagon.V6.vrmpyubi.acc.128B
llvm.hexagon.V6.vrmpyubv
llvm.hexagon.V6.vrmpyubv.128B
llvm.hexagon.V6.vrmpyubv.acc
llvm.hexagon.V6.vrmpyubv.acc.128B
llvm.hexagon.V6.vror
llvm.hexagon.V6.vror.128B
llvm.hexagon.V6.vrotr
llvm.hexagon.V6.vrotr.128B
llvm.hexagon.V6.vroundhb
llvm.hexagon.V6.vroundhb.128B
llvm.hexagon.V6.vroundhub
llvm.hexagon.V6.vroundhub.128B
llvm.hexagon.V6.vrounduhub
llvm.hexagon.V6.vrounduhub.128B
llvm.hexagon.V6.vrounduwuh
llvm.hexagon.V6.vrounduwuh.128B
llvm.hexagon.V6.vroundwh
llvm.hexagon.V6.vroundwh.128B
llvm.hexagon.V6.vroundwuh
llvm.hexagon.V6.vroundwuh.128B
llvm.hexagon.V6.vrsadubi
llvm.hexagon.V6.vrsadubi.128B
llvm.hexagon.V6.vrsadubi.acc
llvm.hexagon.V6.vrsadubi.acc.128B
llvm.hexagon.V6.vsatdw
llvm.hexagon.V6.vsatdw.128B
llvm.hexagon.V6.vsathub
llvm.hexagon.V6.vsathub.128B
llvm.hexagon.V6.vsatuwuh
llvm.hexagon.V6.vsatuwuh.128B
llvm.hexagon.V6.vsatwh
llvm.hexagon.V6.vsatwh.128B
llvm.hexagon.V6.vsb
llvm.hexagon.V6.vsb.128B
llvm.hexagon.V6.vscattermh
llvm.hexagon.V6.vscattermh.128B
llvm.hexagon.V6.vscattermh.add
llvm.hexagon.V6.vscattermh.add.128B
llvm.hexagon.V6.vscattermhq
llvm.hexagon.V6.vscattermhq.128B
llvm.hexagon.V6.vscattermhw
llvm.hexagon.V6.vscattermhw.128B
llvm.hexagon.V6.vscattermhw.add
llvm.hexagon.V6.vscattermhw.add.128B
llvm.hexagon.V6.vscattermhwq
llvm.hexagon.V6.vscattermhwq.128B
llvm.hexagon.V6.vscattermw
llvm.hexagon.V6.vscattermw.128B
llvm.hexagon.V6.vscattermw.add
llvm.hexagon.V6.vscattermw.add.128B
llvm.hexagon.V6.vscattermwq
llvm.hexagon.V6.vscattermwq.128B
llvm.hexagon.V6.vsh
llvm.hexagon.V6.vsh.128B
llvm.hexagon.V6.vshufeh
llvm.hexagon.V6.vshufeh.128B
llvm.hexagon.V6.vshuffb
llvm.hexagon.V6.vshuffb.128B
llvm.hexagon.V6.vshuffeb
llvm.hexagon.V6.vshuffeb.128B
llvm.hexagon.V6.vshuffh
llvm.hexagon.V6.vshuffh.128B
llvm.hexagon.V6.vshuffob
llvm.hexagon.V6.vshuffob.128B
llvm.hexagon.V6.vshuffvdd
llvm.hexagon.V6.vshuffvdd.128B
llvm.hexagon.V6.vshufoeb
llvm.hexagon.V6.vshufoeb.128B
llvm.hexagon.V6.vshufoeh
llvm.hexagon.V6.vshufoeh.128B
llvm.hexagon.V6.vshufoh
llvm.hexagon.V6.vshufoh.128B
llvm.hexagon.V6.vsubb
llvm.hexagon.V6.vsubb.128B
llvm.hexagon.V6.vsubb.dv
llvm.hexagon.V6.vsubb.dv.128B
llvm.hexagon.V6.vsubbnq
llvm.hexagon.V6.vsubbnq.128B
llvm.hexagon.V6.vsubbq
llvm.hexagon.V6.vsubbq.128B
llvm.hexagon.V6.vsubbsat
llvm.hexagon.V6.vsubbsat.128B
llvm.hexagon.V6.vsubbsat.dv
llvm.hexagon.V6.vsubbsat.dv.128B
llvm.hexagon.V6.vsubcarry
llvm.hexagon.V6.vsubcarry.128B
llvm.hexagon.V6.vsubh
llvm.hexagon.V6.vsubh.128B
llvm.hexagon.V6.vsubh.dv
llvm.hexagon.V6.vsubh.dv.128B
llvm.hexagon.V6.vsubhnq
llvm.hexagon.V6.vsubhnq.128B
llvm.hexagon.V6.vsubhq
llvm.hexagon.V6.vsubhq.128B
llvm.hexagon.V6.vsubhsat
llvm.hexagon.V6.vsubhsat.128B
llvm.hexagon.V6.vsubhsat.dv
llvm.hexagon.V6.vsubhsat.dv.128B
llvm.hexagon.V6.vsubhw
llvm.hexagon.V6.vsubhw.128B
llvm.hexagon.V6.vsububh
llvm.hexagon.V6.vsububh.128B
llvm.hexagon.V6.vsububsat
llvm.hexagon.V6.vsububsat.128B
llvm.hexagon.V6.vsububsat.dv
llvm.hexagon.V6.vsububsat.dv.128B
llvm.hexagon.V6.vsubububb.sat
llvm.hexagon.V6.vsubububb.sat.128B
llvm.hexagon.V6.vsubuhsat
llvm.hexagon.V6.vsubuhsat.128B
llvm.hexagon.V6.vsubuhsat.dv
llvm.hexagon.V6.vsubuhsat.dv.128B
llvm.hexagon.V6.vsubuhw
llvm.hexagon.V6.vsubuhw.128B
llvm.hexagon.V6.vsubuwsat
llvm.hexagon.V6.vsubuwsat.128B
llvm.hexagon.V6.vsubuwsat.dv
llvm.hexagon.V6.vsubuwsat.dv.128B
llvm.hexagon.V6.vsubw
llvm.hexagon.V6.vsubw.128B
llvm.hexagon.V6.vsubw.dv
llvm.hexagon.V6.vsubw.dv.128B
llvm.hexagon.V6.vsubwnq
llvm.hexagon.V6.vsubwnq.128B
llvm.hexagon.V6.vsubwq
llvm.hexagon.V6.vsubwq.128B
llvm.hexagon.V6.vsubwsat
llvm.hexagon.V6.vsubwsat.128B
llvm.hexagon.V6.vsubwsat.dv
llvm.hexagon.V6.vsubwsat.dv.128B
llvm.hexagon.V6.vswap
llvm.hexagon.V6.vswap.128B
llvm.hexagon.V6.vtmpyb
llvm.hexagon.V6.vtmpyb.128B
llvm.hexagon.V6.vtmpyb.acc
llvm.hexagon.V6.vtmpyb.acc.128B
llvm.hexagon.V6.vtmpybus
llvm.hexagon.V6.vtmpybus.128B
llvm.hexagon.V6.vtmpybus.acc
llvm.hexagon.V6.vtmpybus.acc.128B
llvm.hexagon.V6.vtmpyhb
llvm.hexagon.V6.vtmpyhb.128B
llvm.hexagon.V6.vtmpyhb.acc
llvm.hexagon.V6.vtmpyhb.acc.128B
llvm.hexagon.V6.vunpackb
llvm.hexagon.V6.vunpackb.128B
llvm.hexagon.V6.vunpackh
llvm.hexagon.V6.vunpackh.128B
llvm.hexagon.V6.vunpackob
llvm.hexagon.V6.vunpackob.128B
llvm.hexagon.V6.vunpackoh
llvm.hexagon.V6.vunpackoh.128B
llvm.hexagon.V6.vunpackub
llvm.hexagon.V6.vunpackub.128B
llvm.hexagon.V6.vunpackuh
llvm.hexagon.V6.vunpackuh.128B
llvm.hexagon.V6.vxor
llvm.hexagon.V6.vxor.128B
llvm.hexagon.V6.vzb
llvm.hexagon.V6.vzb.128B
llvm.hexagon.V6.vzh
llvm.hexagon.V6.vzh.128B
llvm.hexagon.Y2.dccleana
llvm.hexagon.Y2.dccleaninva
llvm.hexagon.Y2.dcfetch
llvm.hexagon.Y2.dcinva
llvm.hexagon.Y2.dczeroa
llvm.hexagon.Y4.l2fetch
llvm.hexagon.Y5.l2fetch
llvm.hexagon.circ.ldb
llvm.hexagon.circ.ldd
llvm.hexagon.circ.ldh
llvm.hexagon.circ.ldub
llvm.hexagon.circ.lduh
llvm.hexagon.circ.ldw
llvm.hexagon.circ.stb
llvm.hexagon.circ.std
llvm.hexagon.circ.sth
llvm.hexagon.circ.sthhi
llvm.hexagon.circ.stw
llvm.hexagon.prefetch
llvm.hexagon.vmemcpy
llvm.hexagon.vmemset
llvm.mips.absq.s.ph
llvm.mips.absq.s.qb
llvm.mips.absq.s.w
llvm.mips.add.a.b
llvm.mips.add.a.d
llvm.mips.add.a.h
llvm.mips.add.a.w
llvm.mips.addq.ph
llvm.mips.addq.s.ph
llvm.mips.addq.s.w
llvm.mips.addqh.ph
llvm.mips.addqh.r.ph
llvm.mips.addqh.r.w
llvm.mips.addqh.w
llvm.mips.adds.a.b
llvm.mips.adds.a.d
llvm.mips.adds.a.h
llvm.mips.adds.a.w
llvm.mips.adds.s.b
llvm.mips.adds.s.d
llvm.mips.adds.s.h
llvm.mips.adds.s.w
llvm.mips.adds.u.b
llvm.mips.adds.u.d
llvm.mips.adds.u.h
llvm.mips.adds.u.w
llvm.mips.addsc
llvm.mips.addu.ph
llvm.mips.addu.qb
llvm.mips.addu.s.ph
llvm.mips.addu.s.qb
llvm.mips.adduh.qb
llvm.mips.adduh.r.qb
llvm.mips.addv.b
llvm.mips.addv.d
llvm.mips.addv.h
llvm.mips.addv.w
llvm.mips.addvi.b
llvm.mips.addvi.d
llvm.mips.addvi.h
llvm.mips.addvi.w
llvm.mips.addwc
llvm.mips.and.v
llvm.mips.andi.b
llvm.mips.append
llvm.mips.asub.s.b
llvm.mips.asub.s.d
llvm.mips.asub.s.h
llvm.mips.asub.s.w
llvm.mips.asub.u.b
llvm.mips.asub.u.d
llvm.mips.asub.u.h
llvm.mips.asub.u.w
llvm.mips.ave.s.b
llvm.mips.ave.s.d
llvm.mips.ave.s.h
llvm.mips.ave.s.w
llvm.mips.ave.u.b
llvm.mips.ave.u.d
llvm.mips.ave.u.h
llvm.mips.ave.u.w
llvm.mips.aver.s.b
llvm.mips.aver.s.d
llvm.mips.aver.s.h
llvm.mips.aver.s.w
llvm.mips.aver.u.b
llvm.mips.aver.u.d
llvm.mips.aver.u.h
llvm.mips.aver.u.w
llvm.mips.balign
llvm.mips.bclr.b
llvm.mips.bclr.d
llvm.mips.bclr.h
llvm.mips.bclr.w
llvm.mips.bclri.b
llvm.mips.bclri.d
llvm.mips.bclri.h
llvm.mips.bclri.w
llvm.mips.binsl.b
llvm.mips.binsl.d
llvm.mips.binsl.h
llvm.mips.binsl.w
llvm.mips.binsli.b
llvm.mips.binsli.d
llvm.mips.binsli.h
llvm.mips.binsli.w
llvm.mips.binsr.b
llvm.mips.binsr.d
llvm.mips.binsr.h
llvm.mips.binsr.w
llvm.mips.binsri.b
llvm.mips.binsri.d
llvm.mips.binsri.h
llvm.mips.binsri.w
llvm.mips.bitrev
llvm.mips.bmnz.v
llvm.mips.bmnzi.b
llvm.mips.bmz.v
llvm.mips.bmzi.b
llvm.mips.bneg.b
llvm.mips.bneg.d
llvm.mips.bneg.h
llvm.mips.bneg.w
llvm.mips.bnegi.b
llvm.mips.bnegi.d
llvm.mips.bnegi.h
llvm.mips.bnegi.w
llvm.mips.bnz.b
llvm.mips.bnz.d
llvm.mips.bnz.h
llvm.mips.bnz.v
llvm.mips.bnz.w
llvm.mips.bposge32
llvm.mips.bsel.v
llvm.mips.bseli.b
llvm.mips.bset.b
llvm.mips.bset.d
llvm.mips.bset.h
llvm.mips.bset.w
llvm.mips.bseti.b
llvm.mips.bseti.d
llvm.mips.bseti.h
llvm.mips.bseti.w
llvm.mips.bz.b
llvm.mips.bz.d
llvm.mips.bz.h
llvm.mips.bz.v
llvm.mips.bz.w
llvm.mips.ceq.b
llvm.mips.ceq.d
llvm.mips.ceq.h
llvm.mips.ceq.w
llvm.mips.ceqi.b
llvm.mips.ceqi.d
llvm.mips.ceqi.h
llvm.mips.ceqi.w
llvm.mips.cfcmsa
llvm.mips.cle.s.b
llvm.mips.cle.s.d
llvm.mips.cle.s.h
llvm.mips.cle.s.w
llvm.mips.cle.u.b
llvm.mips.cle.u.d
llvm.mips.cle.u.h
llvm.mips.cle.u.w
llvm.mips.clei.s.b
llvm.mips.clei.s.d
llvm.mips.clei.s.h
llvm.mips.clei.s.w
llvm.mips.clei.u.b
llvm.mips.clei.u.d
llvm.mips.clei.u.h
llvm.mips.clei.u.w
llvm.mips.clt.s.b
llvm.mips.clt.s.d
llvm.mips.clt.s.h
llvm.mips.clt.s.w
llvm.mips.clt.u.b
llvm.mips.clt.u.d
llvm.mips.clt.u.h
llvm.mips.clt.u.w
llvm.mips.clti.s.b
llvm.mips.clti.s.d
llvm.mips.clti.s.h
llvm.mips.clti.s.w
llvm.mips.clti.u.b
llvm.mips.clti.u.d
llvm.mips.clti.u.h
llvm.mips.clti.u.w
llvm.mips.cmp.eq.ph
llvm.mips.cmp.le.ph
llvm.mips.cmp.lt.ph
llvm.mips.cmpgdu.eq.qb
llvm.mips.cmpgdu.le.qb
llvm.mips.cmpgdu.lt.qb
llvm.mips.cmpgu.eq.qb
llvm.mips.cmpgu.le.qb
llvm.mips.cmpgu.lt.qb
llvm.mips.cmpu.eq.qb
llvm.mips.cmpu.le.qb
llvm.mips.cmpu.lt.qb
llvm.mips.copy.s.b
llvm.mips.copy.s.d
llvm.mips.copy.s.h
llvm.mips.copy.s.w
llvm.mips.copy.u.b
llvm.mips.copy.u.d
llvm.mips.copy.u.h
llvm.mips.copy.u.w
llvm.mips.ctcmsa
llvm.mips.div.s.b
llvm.mips.div.s.d
llvm.mips.div.s.h
llvm.mips.div.s.w
llvm.mips.div.u.b
llvm.mips.div.u.d
llvm.mips.div.u.h
llvm.mips.div.u.w
llvm.mips.dlsa
llvm.mips.dotp.s.d
llvm.mips.dotp.s.h
llvm.mips.dotp.s.w
llvm.mips.dotp.u.d
llvm.mips.dotp.u.h
llvm.mips.dotp.u.w
llvm.mips.dpa.w.ph
llvm.mips.dpadd.s.d
llvm.mips.dpadd.s.h
llvm.mips.dpadd.s.w
llvm.mips.dpadd.u.d
llvm.mips.dpadd.u.h
llvm.mips.dpadd.u.w
llvm.mips.dpaq.s.w.ph
llvm.mips.dpaq.sa.l.w
llvm.mips.dpaqx.s.w.ph
llvm.mips.dpaqx.sa.w.ph
llvm.mips.dpau.h.qbl
llvm.mips.dpau.h.qbr
llvm.mips.dpax.w.ph
llvm.mips.dps.w.ph
llvm.mips.dpsq.s.w.ph
llvm.mips.dpsq.sa.l.w
llvm.mips.dpsqx.s.w.ph
llvm.mips.dpsqx.sa.w.ph
llvm.mips.dpsu.h.qbl
llvm.mips.dpsu.h.qbr
llvm.mips.dpsub.s.d
llvm.mips.dpsub.s.h
llvm.mips.dpsub.s.w
llvm.mips.dpsub.u.d
llvm.mips.dpsub.u.h
llvm.mips.dpsub.u.w
llvm.mips.dpsx.w.ph
llvm.mips.extp
llvm.mips.extpdp
llvm.mips.extr.r.w
llvm.mips.extr.rs.w
llvm.mips.extr.s.h
llvm.mips.extr.w
llvm.mips.fadd.d
llvm.mips.fadd.w
llvm.mips.fcaf.d
llvm.mips.fcaf.w
llvm.mips.fceq.d
llvm.mips.fceq.w
llvm.mips.fclass.d
llvm.mips.fclass.w
llvm.mips.fcle.d
llvm.mips.fcle.w
llvm.mips.fclt.d
llvm.mips.fclt.w
llvm.mips.fcne.d
llvm.mips.fcne.w
llvm.mips.fcor.d
llvm.mips.fcor.w
llvm.mips.fcueq.d
llvm.mips.fcueq.w
llvm.mips.fcule.d
llvm.mips.fcule.w
llvm.mips.fcult.d
llvm.mips.fcult.w
llvm.mips.fcun.d
llvm.mips.fcun.w
llvm.mips.fcune.d
llvm.mips.fcune.w
llvm.mips.fdiv.d
llvm.mips.fdiv.w
llvm.mips.fexdo.h
llvm.mips.fexdo.w
llvm.mips.fexp2.d
llvm.mips.fexp2.w
llvm.mips.fexupl.d
llvm.mips.fexupl.w
llvm.mips.fexupr.d
llvm.mips.fexupr.w
llvm.mips.ffint.s.d
llvm.mips.ffint.s.w
llvm.mips.ffint.u.d
llvm.mips.ffint.u.w
llvm.mips.ffql.d
llvm.mips.ffql.w
llvm.mips.ffqr.d
llvm.mips.ffqr.w
llvm.mips.fill.b
llvm.mips.fill.d
llvm.mips.fill.h
llvm.mips.fill.w
llvm.mips.flog2.d
llvm.mips.flog2.w
llvm.mips.fmadd.d
llvm.mips.fmadd.w
llvm.mips.fmax.a.d
llvm.mips.fmax.a.w
llvm.mips.fmax.d
llvm.mips.fmax.w
llvm.mips.fmin.a.d
llvm.mips.fmin.a.w
llvm.mips.fmin.d
llvm.mips.fmin.w
llvm.mips.fmsub.d
llvm.mips.fmsub.w
llvm.mips.fmul.d
llvm.mips.fmul.w
llvm.mips.frcp.d
llvm.mips.frcp.w
llvm.mips.frint.d
llvm.mips.frint.w
llvm.mips.frsqrt.d
llvm.mips.frsqrt.w
llvm.mips.fsaf.d
llvm.mips.fsaf.w
llvm.mips.fseq.d
llvm.mips.fseq.w
llvm.mips.fsle.d
llvm.mips.fsle.w
llvm.mips.fslt.d
llvm.mips.fslt.w
llvm.mips.fsne.d
llvm.mips.fsne.w
llvm.mips.fsor.d
llvm.mips.fsor.w
llvm.mips.fsqrt.d
llvm.mips.fsqrt.w
llvm.mips.fsub.d
llvm.mips.fsub.w
llvm.mips.fsueq.d
llvm.mips.fsueq.w
llvm.mips.fsule.d
llvm.mips.fsule.w
llvm.mips.fsult.d
llvm.mips.fsult.w
llvm.mips.fsun.d
llvm.mips.fsun.w
llvm.mips.fsune.d
llvm.mips.fsune.w
llvm.mips.ftint.s.d
llvm.mips.ftint.s.w
llvm.mips.ftint.u.d
llvm.mips.ftint.u.w
llvm.mips.ftq.h
llvm.mips.ftq.w
llvm.mips.ftrunc.s.d
llvm.mips.ftrunc.s.w
llvm.mips.ftrunc.u.d
llvm.mips.ftrunc.u.w
llvm.mips.hadd.s.d
llvm.mips.hadd.s.h
llvm.mips.hadd.s.w
llvm.mips.hadd.u.d
llvm.mips.hadd.u.h
llvm.mips.hadd.u.w
llvm.mips.hsub.s.d
llvm.mips.hsub.s.h
llvm.mips.hsub.s.w
llvm.mips.hsub.u.d
llvm.mips.hsub.u.h
llvm.mips.hsub.u.w
llvm.mips.ilvev.b
llvm.mips.ilvev.d
llvm.mips.ilvev.h
llvm.mips.ilvev.w
llvm.mips.ilvl.b
llvm.mips.ilvl.d
llvm.mips.ilvl.h
llvm.mips.ilvl.w
llvm.mips.ilvod.b
llvm.mips.ilvod.d
llvm.mips.ilvod.h
llvm.mips.ilvod.w
llvm.mips.ilvr.b
llvm.mips.ilvr.d
llvm.mips.ilvr.h
llvm.mips.ilvr.w
llvm.mips.insert.b
llvm.mips.insert.d
llvm.mips.insert.h
llvm.mips.insert.w
llvm.mips.insv
llvm.mips.insve.b
llvm.mips.insve.d
llvm.mips.insve.h
llvm.mips.insve.w
llvm.mips.lbux
llvm.mips.ld.b
llvm.mips.ld.d
llvm.mips.ld.h
llvm.mips.ld.w
llvm.mips.ldi.b
llvm.mips.ldi.d
llvm.mips.ldi.h
llvm.mips.ldi.w
llvm.mips.ldr.d
llvm.mips.ldr.w
llvm.mips.lhx
llvm.mips.lsa
llvm.mips.lwx
llvm.mips.madd
llvm.mips.madd.q.h
llvm.mips.madd.q.w
llvm.mips.maddr.q.h
llvm.mips.maddr.q.w
llvm.mips.maddu
llvm.mips.maddv.b
llvm.mips.maddv.d
llvm.mips.maddv.h
llvm.mips.maddv.w
llvm.mips.maq.s.w.phl
llvm.mips.maq.s.w.phr
llvm.mips.maq.sa.w.phl
llvm.mips.maq.sa.w.phr
llvm.mips.max.a.b
llvm.mips.max.a.d
llvm.mips.max.a.h
llvm.mips.max.a.w
llvm.mips.max.s.b
llvm.mips.max.s.d
llvm.mips.max.s.h
llvm.mips.max.s.w
llvm.mips.max.u.b
llvm.mips.max.u.d
llvm.mips.max.u.h
llvm.mips.max.u.w
llvm.mips.maxi.s.b
llvm.mips.maxi.s.d
llvm.mips.maxi.s.h
llvm.mips.maxi.s.w
llvm.mips.maxi.u.b
llvm.mips.maxi.u.d
llvm.mips.maxi.u.h
llvm.mips.maxi.u.w
llvm.mips.min.a.b
llvm.mips.min.a.d
llvm.mips.min.a.h
llvm.mips.min.a.w
llvm.mips.min.s.b
llvm.mips.min.s.d
llvm.mips.min.s.h
llvm.mips.min.s.w
llvm.mips.min.u.b
llvm.mips.min.u.d
llvm.mips.min.u.h
llvm.mips.min.u.w
llvm.mips.mini.s.b
llvm.mips.mini.s.d
llvm.mips.mini.s.h
llvm.mips.mini.s.w
llvm.mips.mini.u.b
llvm.mips.mini.u.d
llvm.mips.mini.u.h
llvm.mips.mini.u.w
llvm.mips.mod.s.b
llvm.mips.mod.s.d
llvm.mips.mod.s.h
llvm.mips.mod.s.w
llvm.mips.mod.u.b
llvm.mips.mod.u.d
llvm.mips.mod.u.h
llvm.mips.mod.u.w
llvm.mips.modsub
llvm.mips.move.v
llvm.mips.msub
llvm.mips.msub.q.h
llvm.mips.msub.q.w
llvm.mips.msubr.q.h
llvm.mips.msubr.q.w
llvm.mips.msubu
llvm.mips.msubv.b
llvm.mips.msubv.d
llvm.mips.msubv.h
llvm.mips.msubv.w
llvm.mips.mthlip
llvm.mips.mul.ph
llvm.mips.mul.q.h
llvm.mips.mul.q.w
llvm.mips.mul.s.ph
llvm.mips.muleq.s.w.phl
llvm.mips.muleq.s.w.phr
llvm.mips.muleu.s.ph.qbl
llvm.mips.muleu.s.ph.qbr
llvm.mips.mulq.rs.ph
llvm.mips.mulq.rs.w
llvm.mips.mulq.s.ph
llvm.mips.mulq.s.w
llvm.mips.mulr.q.h
llvm.mips.mulr.q.w
llvm.mips.mulsa.w.ph
llvm.mips.mulsaq.s.w.ph
llvm.mips.mult
llvm.mips.multu
llvm.mips.mulv.b
llvm.mips.mulv.d
llvm.mips.mulv.h
llvm.mips.mulv.w
llvm.mips.nloc.b
llvm.mips.nloc.d
llvm.mips.nloc.h
llvm.mips.nloc.w
llvm.mips.nlzc.b
llvm.mips.nlzc.d
llvm.mips.nlzc.h
llvm.mips.nlzc.w
llvm.mips.nor.v
llvm.mips.nori.b
llvm.mips.or.v
llvm.mips.ori.b
llvm.mips.packrl.ph
llvm.mips.pckev.b
llvm.mips.pckev.d
llvm.mips.pckev.h
llvm.mips.pckev.w
llvm.mips.pckod.b
llvm.mips.pckod.d
llvm.mips.pckod.h
llvm.mips.pckod.w
llvm.mips.pcnt.b
llvm.mips.pcnt.d
llvm.mips.pcnt.h
llvm.mips.pcnt.w
llvm.mips.pick.ph
llvm.mips.pick.qb
llvm.mips.preceq.w.phl
llvm.mips.preceq.w.phr
llvm.mips.precequ.ph.qbl
llvm.mips.precequ.ph.qbla
llvm.mips.precequ.ph.qbr
llvm.mips.precequ.ph.qbra
llvm.mips.preceu.ph.qbl
llvm.mips.preceu.ph.qbla
llvm.mips.preceu.ph.qbr
llvm.mips.preceu.ph.qbra
llvm.mips.precr.qb.ph
llvm.mips.precr.sra.ph.w
llvm.mips.precr.sra.r.ph.w
llvm.mips.precrq.ph.w
llvm.mips.precrq.qb.ph
llvm.mips.precrq.rs.ph.w
llvm.mips.precrqu.s.qb.ph
llvm.mips.prepend
llvm.mips.raddu.w.qb
llvm.mips.rddsp
llvm.mips.repl.ph
llvm.mips.repl.qb
llvm.mips.sat.s.b
llvm.mips.sat.s.d
llvm.mips.sat.s.h
llvm.mips.sat.s.w
llvm.mips.sat.u.b
llvm.mips.sat.u.d
llvm.mips.sat.u.h
llvm.mips.sat.u.w
llvm.mips.shf.b
llvm.mips.shf.h
llvm.mips.shf.w
llvm.mips.shilo
llvm.mips.shll.ph
llvm.mips.shll.qb
llvm.mips.shll.s.ph
llvm.mips.shll.s.w
llvm.mips.shra.ph
llvm.mips.shra.qb
llvm.mips.shra.r.ph
llvm.mips.shra.r.qb
llvm.mips.shra.r.w
llvm.mips.shrl.ph
llvm.mips.shrl.qb
llvm.mips.sld.b
llvm.mips.sld.d
llvm.mips.sld.h
llvm.mips.sld.w
llvm.mips.sldi.b
llvm.mips.sldi.d
llvm.mips.sldi.h
llvm.mips.sldi.w
llvm.mips.sll.b
llvm.mips.sll.d
llvm.mips.sll.h
llvm.mips.sll.w
llvm.mips.slli.b
llvm.mips.slli.d
llvm.mips.slli.h
llvm.mips.slli.w
llvm.mips.splat.b
llvm.mips.splat.d
llvm.mips.splat.h
llvm.mips.splat.w
llvm.mips.splati.b
llvm.mips.splati.d
llvm.mips.splati.h
llvm.mips.splati.w
llvm.mips.sra.b
llvm.mips.sra.d
llvm.mips.sra.h
llvm.mips.sra.w
llvm.mips.srai.b
llvm.mips.srai.d
llvm.mips.srai.h
llvm.mips.srai.w
llvm.mips.srar.b
llvm.mips.srar.d
llvm.mips.srar.h
llvm.mips.srar.w
llvm.mips.srari.b
llvm.mips.srari.d
llvm.mips.srari.h
llvm.mips.srari.w
llvm.mips.srl.b
llvm.mips.srl.d
llvm.mips.srl.h
llvm.mips.srl.w
llvm.mips.srli.b
llvm.mips.srli.d
llvm.mips.srli.h
llvm.mips.srli.w
llvm.mips.srlr.b
llvm.mips.srlr.d
llvm.mips.srlr.h
llvm.mips.srlr.w
llvm.mips.srlri.b
llvm.mips.srlri.d
llvm.mips.srlri.h
llvm.mips.srlri.w
llvm.mips.st.b
llvm.mips.st.d
llvm.mips.st.h
llvm.mips.st.w
llvm.mips.str.d
llvm.mips.str.w
llvm.mips.subq.ph
llvm.mips.subq.s.ph
llvm.mips.subq.s.w
llvm.mips.subqh.ph
llvm.mips.subqh.r.ph
llvm.mips.subqh.r.w
llvm.mips.subqh.w
llvm.mips.subs.s.b
llvm.mips.subs.s.d
llvm.mips.subs.s.h
llvm.mips.subs.s.w
llvm.mips.subs.u.b
llvm.mips.subs.u.d
llvm.mips.subs.u.h
llvm.mips.subs.u.w
llvm.mips.subsus.u.b
llvm.mips.subsus.u.d
llvm.mips.subsus.u.h
llvm.mips.subsus.u.w
llvm.mips.subsuu.s.b
llvm.mips.subsuu.s.d
llvm.mips.subsuu.s.h
llvm.mips.subsuu.s.w
llvm.mips.subu.ph
llvm.mips.subu.qb
llvm.mips.subu.s.ph
llvm.mips.subu.s.qb
llvm.mips.subuh.qb
llvm.mips.subuh.r.qb
llvm.mips.subv.b
llvm.mips.subv.d
llvm.mips.subv.h
llvm.mips.subv.w
llvm.mips.subvi.b
llvm.mips.subvi.d
llvm.mips.subvi.h
llvm.mips.subvi.w
llvm.mips.vshf.b
llvm.mips.vshf.d
llvm.mips.vshf.h
llvm.mips.vshf.w
llvm.mips.wrdsp
llvm.mips.xor.v
llvm.mips.xori.b
llvm.nvvm.add.rm.d
llvm.nvvm.add.rm.f
llvm.nvvm.add.rm.ftz.f
llvm.nvvm.add.rn.d
llvm.nvvm.add.rn.f
llvm.nvvm.add.rn.ftz.f
llvm.nvvm.add.rp.d
llvm.nvvm.add.rp.f
llvm.nvvm.add.rp.ftz.f
llvm.nvvm.add.rz.d
llvm.nvvm.add.rz.f
llvm.nvvm.add.rz.ftz.f
llvm.nvvm.atomic.add.gen.f.cta
llvm.nvvm.atomic.add.gen.f.sys
llvm.nvvm.atomic.add.gen.i.cta
llvm.nvvm.atomic.add.gen.i.sys
llvm.nvvm.atomic.and.gen.i.cta
llvm.nvvm.atomic.and.gen.i.sys
llvm.nvvm.atomic.cas.gen.i.cta
llvm.nvvm.atomic.cas.gen.i.sys
llvm.nvvm.atomic.dec.gen.i.cta
llvm.nvvm.atomic.dec.gen.i.sys
llvm.nvvm.atomic.exch.gen.i.cta
llvm.nvvm.atomic.exch.gen.i.sys
llvm.nvvm.atomic.inc.gen.i.cta
llvm.nvvm.atomic.inc.gen.i.sys
llvm.nvvm.atomic.load.dec.32
llvm.nvvm.atomic.load.inc.32
llvm.nvvm.atomic.max.gen.i.cta
llvm.nvvm.atomic.max.gen.i.sys
llvm.nvvm.atomic.min.gen.i.cta
llvm.nvvm.atomic.min.gen.i.sys
llvm.nvvm.atomic.or.gen.i.cta
llvm.nvvm.atomic.or.gen.i.sys
llvm.nvvm.atomic.xor.gen.i.cta
llvm.nvvm.atomic.xor.gen.i.sys
llvm.nvvm.bar.sync
llvm.nvvm.bar.warp.sync
llvm.nvvm.barrier
llvm.nvvm.barrier.n
llvm.nvvm.barrier.sync
llvm.nvvm.barrier.sync.cnt
llvm.nvvm.barrier0
llvm.nvvm.barrier0.and
llvm.nvvm.barrier0.or
llvm.nvvm.barrier0.popc
llvm.nvvm.bitcast.d2ll
llvm.nvvm.bitcast.f2i
llvm.nvvm.bitcast.i2f
llvm.nvvm.bitcast.ll2d
llvm.nvvm.ceil.d
llvm.nvvm.ceil.f
llvm.nvvm.ceil.ftz.f
llvm.nvvm.compiler.error
llvm.nvvm.compiler.warn
llvm.nvvm.cos.approx.f
llvm.nvvm.cos.approx.ftz.f
llvm.nvvm.d2f.rm
llvm.nvvm.d2f.rm.ftz
llvm.nvvm.d2f.rn
llvm.nvvm.d2f.rn.ftz
llvm.nvvm.d2f.rp
llvm.nvvm.d2f.rp.ftz
llvm.nvvm.d2f.rz
llvm.nvvm.d2f.rz.ftz
llvm.nvvm.d2i.hi
llvm.nvvm.d2i.lo
llvm.nvvm.d2i.rm
llvm.nvvm.d2i.rn
llvm.nvvm.d2i.rp
llvm.nvvm.d2i.rz
llvm.nvvm.d2ll.rm
llvm.nvvm.d2ll.rn
llvm.nvvm.d2ll.rp
llvm.nvvm.d2ll.rz
llvm.nvvm.d2ui.rm
llvm.nvvm.d2ui.rn
llvm.nvvm.d2ui.rp
llvm.nvvm.d2ui.rz
llvm.nvvm.d2ull.rm
llvm.nvvm.d2ull.rn
llvm.nvvm.d2ull.rp
llvm.nvvm.d2ull.rz
llvm.nvvm.div.approx.f
llvm.nvvm.div.approx.ftz.f
llvm.nvvm.div.rm.d
llvm.nvvm.div.rm.f
llvm.nvvm.div.rm.ftz.f
llvm.nvvm.div.rn.d
llvm.nvvm.div.rn.f
llvm.nvvm.div.rn.ftz.f
llvm.nvvm.div.rp.d
llvm.nvvm.div.rp.f
llvm.nvvm.div.rp.ftz.f
llvm.nvvm.div.rz.d
llvm.nvvm.div.rz.f
llvm.nvvm.div.rz.ftz.f
llvm.nvvm.ex2.approx.d
llvm.nvvm.ex2.approx.f
llvm.nvvm.ex2.approx.ftz.f
llvm.nvvm.f2h.rn
llvm.nvvm.f2h.rn.ftz
llvm.nvvm.f2i.rm
llvm.nvvm.f2i.rm.ftz
llvm.nvvm.f2i.rn
llvm.nvvm.f2i.rn.ftz
llvm.nvvm.f2i.rp
llvm.nvvm.f2i.rp.ftz
llvm.nvvm.f2i.rz
llvm.nvvm.f2i.rz.ftz
llvm.nvvm.f2ll.rm
llvm.nvvm.f2ll.rm.ftz
llvm.nvvm.f2ll.rn
llvm.nvvm.f2ll.rn.ftz
llvm.nvvm.f2ll.rp
llvm.nvvm.f2ll.rp.ftz
llvm.nvvm.f2ll.rz
llvm.nvvm.f2ll.rz.ftz
llvm.nvvm.f2ui.rm
llvm.nvvm.f2ui.rm.ftz
llvm.nvvm.f2ui.rn
llvm.nvvm.f2ui.rn.ftz
llvm.nvvm.f2ui.rp
llvm.nvvm.f2ui.rp.ftz
llvm.nvvm.f2ui.rz
llvm.nvvm.f2ui.rz.ftz
llvm.nvvm.f2ull.rm
llvm.nvvm.f2ull.rm.ftz
llvm.nvvm.f2ull.rn
llvm.nvvm.f2ull.rn.ftz
llvm.nvvm.f2ull.rp
llvm.nvvm.f2ull.rp.ftz
llvm.nvvm.f2ull.rz
llvm.nvvm.f2ull.rz.ftz
llvm.nvvm.fabs.d
llvm.nvvm.fabs.f
llvm.nvvm.fabs.ftz.f
llvm.nvvm.floor.d
llvm.nvvm.floor.f
llvm.nvvm.floor.ftz.f
llvm.nvvm.fma.rm.d
llvm.nvvm.fma.rm.f
llvm.nvvm.fma.rm.ftz.f
llvm.nvvm.fma.rn.d
llvm.nvvm.fma.rn.f
llvm.nvvm.fma.rn.ftz.f
llvm.nvvm.fma.rp.d
llvm.nvvm.fma.rp.f
llvm.nvvm.fma.rp.ftz.f
llvm.nvvm.fma.rz.d
llvm.nvvm.fma.rz.f
llvm.nvvm.fma.rz.ftz.f
llvm.nvvm.fmax.d
llvm.nvvm.fmax.f
llvm.nvvm.fmax.ftz.f
llvm.nvvm.fmin.d
llvm.nvvm.fmin.f
llvm.nvvm.fmin.ftz.f
llvm.nvvm.fns
llvm.nvvm.i2d.rm
llvm.nvvm.i2d.rn
llvm.nvvm.i2d.rp
llvm.nvvm.i2d.rz
llvm.nvvm.i2f.rm
llvm.nvvm.i2f.rn
llvm.nvvm.i2f.rp
llvm.nvvm.i2f.rz
llvm.nvvm.isspacep.const
llvm.nvvm.isspacep.global
llvm.nvvm.isspacep.local
llvm.nvvm.isspacep.shared
llvm.nvvm.istypep.sampler
llvm.nvvm.istypep.surface
llvm.nvvm.istypep.texture
llvm.nvvm.ldg.global.f
llvm.nvvm.ldg.global.i
llvm.nvvm.ldg.global.p
llvm.nvvm.ldu.global.f
llvm.nvvm.ldu.global.i
llvm.nvvm.ldu.global.p
llvm.nvvm.lg2.approx.d
llvm.nvvm.lg2.approx.f
llvm.nvvm.lg2.approx.ftz.f
llvm.nvvm.ll2d.rm
llvm.nvvm.ll2d.rn
llvm.nvvm.ll2d.rp
llvm.nvvm.ll2d.rz
llvm.nvvm.ll2f.rm
llvm.nvvm.ll2f.rn
llvm.nvvm.ll2f.rp
llvm.nvvm.ll2f.rz
llvm.nvvm.lohi.i2d
llvm.nvvm.match.all.sync.i32p
llvm.nvvm.match.all.sync.i64p
llvm.nvvm.match.any.sync.i32
llvm.nvvm.match.any.sync.i64
llvm.nvvm.membar.cta
llvm.nvvm.membar.gl
llvm.nvvm.membar.sys
llvm.nvvm.mma.m8n8k4.col.col.f16.f16
llvm.nvvm.mma.m8n8k4.col.col.f32.f16
llvm.nvvm.mma.m8n8k4.col.col.f32.f32
llvm.nvvm.mma.m8n8k4.col.row.f16.f16
llvm.nvvm.mma.m8n8k4.col.row.f32.f16
llvm.nvvm.mma.m8n8k4.col.row.f32.f32
llvm.nvvm.mma.m8n8k4.row.col.f16.f16
llvm.nvvm.mma.m8n8k4.row.col.f32.f16
llvm.nvvm.mma.m8n8k4.row.col.f32.f32
llvm.nvvm.mma.m8n8k4.row.row.f16.f16
llvm.nvvm.mma.m8n8k4.row.row.f32.f16
llvm.nvvm.mma.m8n8k4.row.row.f32.f32
llvm.nvvm.move.double
llvm.nvvm.move.float
llvm.nvvm.move.i16
llvm.nvvm.move.i32
llvm.nvvm.move.i64
llvm.nvvm.move.ptr
llvm.nvvm.mul.rm.d
llvm.nvvm.mul.rm.f
llvm.nvvm.mul.rm.ftz.f
llvm.nvvm.mul.rn.d
llvm.nvvm.mul.rn.f
llvm.nvvm.mul.rn.ftz.f
llvm.nvvm.mul.rp.d
llvm.nvvm.mul.rp.f
llvm.nvvm.mul.rp.ftz.f
llvm.nvvm.mul.rz.d
llvm.nvvm.mul.rz.f
llvm.nvvm.mul.rz.ftz.f
llvm.nvvm.mul24.i
llvm.nvvm.mul24.ui
llvm.nvvm.mulhi.i
llvm.nvvm.mulhi.ll
llvm.nvvm.mulhi.ui
llvm.nvvm.mulhi.ull
llvm.nvvm.prmt
llvm.nvvm.ptr.constant.to.gen
llvm.nvvm.ptr.gen.to.constant
llvm.nvvm.ptr.gen.to.global
llvm.nvvm.ptr.gen.to.local
llvm.nvvm.ptr.gen.to.param
llvm.nvvm.ptr.gen.to.shared
llvm.nvvm.ptr.global.to.gen
llvm.nvvm.ptr.local.to.gen
llvm.nvvm.ptr.shared.to.gen
llvm.nvvm.rcp.approx.ftz.d
llvm.nvvm.rcp.rm.d
llvm.nvvm.rcp.rm.f
llvm.nvvm.rcp.rm.ftz.f
llvm.nvvm.rcp.rn.d
llvm.nvvm.rcp.rn.f
llvm.nvvm.rcp.rn.ftz.f
llvm.nvvm.rcp.rp.d
llvm.nvvm.rcp.rp.f
llvm.nvvm.rcp.rp.ftz.f
llvm.nvvm.rcp.rz.d
llvm.nvvm.rcp.rz.f
llvm.nvvm.rcp.rz.ftz.f
llvm.nvvm.read.ptx.sreg.clock
llvm.nvvm.read.ptx.sreg.clock64
llvm.nvvm.read.ptx.sreg.ctaid.w
llvm.nvvm.read.ptx.sreg.ctaid.x
llvm.nvvm.read.ptx.sreg.ctaid.y
llvm.nvvm.read.ptx.sreg.ctaid.z
llvm.nvvm.read.ptx.sreg.envreg0
llvm.nvvm.read.ptx.sreg.envreg1
llvm.nvvm.read.ptx.sreg.envreg10
llvm.nvvm.read.ptx.sreg.envreg11
llvm.nvvm.read.ptx.sreg.envreg12
llvm.nvvm.read.ptx.sreg.envreg13
llvm.nvvm.read.ptx.sreg.envreg14
llvm.nvvm.read.ptx.sreg.envreg15
llvm.nvvm.read.ptx.sreg.envreg16
llvm.nvvm.read.ptx.sreg.envreg17
llvm.nvvm.read.ptx.sreg.envreg18
llvm.nvvm.read.ptx.sreg.envreg19
llvm.nvvm.read.ptx.sreg.envreg2
llvm.nvvm.read.ptx.sreg.envreg20
llvm.nvvm.read.ptx.sreg.envreg21
llvm.nvvm.read.ptx.sreg.envreg22
llvm.nvvm.read.ptx.sreg.envreg23
llvm.nvvm.read.ptx.sreg.envreg24
llvm.nvvm.read.ptx.sreg.envreg25
llvm.nvvm.read.ptx.sreg.envreg26
llvm.nvvm.read.ptx.sreg.envreg27
llvm.nvvm.read.ptx.sreg.envreg28
llvm.nvvm.read.ptx.sreg.envreg29
llvm.nvvm.read.ptx.sreg.envreg3
llvm.nvvm.read.ptx.sreg.envreg30
llvm.nvvm.read.ptx.sreg.envreg31
llvm.nvvm.read.ptx.sreg.envreg4
llvm.nvvm.read.ptx.sreg.envreg5
llvm.nvvm.read.ptx.sreg.envreg6
llvm.nvvm.read.ptx.sreg.envreg7
llvm.nvvm.read.ptx.sreg.envreg8
llvm.nvvm.read.ptx.sreg.envreg9
llvm.nvvm.read.ptx.sreg.gridid
llvm.nvvm.read.ptx.sreg.laneid
llvm.nvvm.read.ptx.sreg.lanemask.eq
llvm.nvvm.read.ptx.sreg.lanemask.ge
llvm.nvvm.read.ptx.sreg.lanemask.gt
llvm.nvvm.read.ptx.sreg.lanemask.le
llvm.nvvm.read.ptx.sreg.lanemask.lt
llvm.nvvm.read.ptx.sreg.nctaid.w
llvm.nvvm.read.ptx.sreg.nctaid.x
llvm.nvvm.read.ptx.sreg.nctaid.y
llvm.nvvm.read.ptx.sreg.nctaid.z
llvm.nvvm.read.ptx.sreg.nsmid
llvm.nvvm.read.ptx.sreg.ntid.w
llvm.nvvm.read.ptx.sreg.ntid.x
llvm.nvvm.read.ptx.sreg.ntid.y
llvm.nvvm.read.ptx.sreg.ntid.z
llvm.nvvm.read.ptx.sreg.nwarpid
llvm.nvvm.read.ptx.sreg.pm0
llvm.nvvm.read.ptx.sreg.pm1
llvm.nvvm.read.ptx.sreg.pm2
llvm.nvvm.read.ptx.sreg.pm3
llvm.nvvm.read.ptx.sreg.smid
llvm.nvvm.read.ptx.sreg.tid.w
llvm.nvvm.read.ptx.sreg.tid.x
llvm.nvvm.read.ptx.sreg.tid.y
llvm.nvvm.read.ptx.sreg.tid.z
llvm.nvvm.read.ptx.sreg.warpid
llvm.nvvm.read.ptx.sreg.warpsize
llvm.nvvm.reflect
llvm.nvvm.rotate.b32
llvm.nvvm.rotate.b64
llvm.nvvm.rotate.right.b64
llvm.nvvm.round.d
llvm.nvvm.round.f
llvm.nvvm.round.ftz.f
llvm.nvvm.rsqrt.approx.d
llvm.nvvm.rsqrt.approx.f
llvm.nvvm.rsqrt.approx.ftz.f
llvm.nvvm.sad.i
llvm.nvvm.sad.ui
llvm.nvvm.saturate.d
llvm.nvvm.saturate.f
llvm.nvvm.saturate.ftz.f
llvm.nvvm.shfl.bfly.f32
llvm.nvvm.shfl.bfly.f32p
llvm.nvvm.shfl.bfly.i32
llvm.nvvm.shfl.bfly.i32p
llvm.nvvm.shfl.down.f32
llvm.nvvm.shfl.down.f32p
llvm.nvvm.shfl.down.i32
llvm.nvvm.shfl.down.i32p
llvm.nvvm.shfl.idx.f32
llvm.nvvm.shfl.idx.f32p
llvm.nvvm.shfl.idx.i32
llvm.nvvm.shfl.idx.i32p
llvm.nvvm.shfl.sync.bfly.f32
llvm.nvvm.shfl.sync.bfly.f32p
llvm.nvvm.shfl.sync.bfly.i32
llvm.nvvm.shfl.sync.bfly.i32p
llvm.nvvm.shfl.sync.down.f32
llvm.nvvm.shfl.sync.down.f32p
llvm.nvvm.shfl.sync.down.i32
llvm.nvvm.shfl.sync.down.i32p
llvm.nvvm.shfl.sync.idx.f32
llvm.nvvm.shfl.sync.idx.f32p
llvm.nvvm.shfl.sync.idx.i32
llvm.nvvm.shfl.sync.idx.i32p
llvm.nvvm.shfl.sync.up.f32
llvm.nvvm.shfl.sync.up.f32p
llvm.nvvm.shfl.sync.up.i32
llvm.nvvm.shfl.sync.up.i32p
llvm.nvvm.shfl.up.f32
llvm.nvvm.shfl.up.f32p
llvm.nvvm.shfl.up.i32
llvm.nvvm.shfl.up.i32p
llvm.nvvm.sin.approx.f
llvm.nvvm.sin.approx.ftz.f
llvm.nvvm.sqrt.approx.f
llvm.nvvm.sqrt.approx.ftz.f
llvm.nvvm.sqrt.f
llvm.nvvm.sqrt.rm.d
llvm.nvvm.sqrt.rm.f
llvm.nvvm.sqrt.rm.ftz.f
llvm.nvvm.sqrt.rn.d
llvm.nvvm.sqrt.rn.f
llvm.nvvm.sqrt.rn.ftz.f
llvm.nvvm.sqrt.rp.d
llvm.nvvm.sqrt.rp.f
llvm.nvvm.sqrt.rp.ftz.f
llvm.nvvm.sqrt.rz.d
llvm.nvvm.sqrt.rz.f
llvm.nvvm.sqrt.rz.ftz.f
llvm.nvvm.suld.1d.array.i16.clamp
llvm.nvvm.suld.1d.array.i16.trap
llvm.nvvm.suld.1d.array.i16.zero
llvm.nvvm.suld.1d.array.i32.clamp
llvm.nvvm.suld.1d.array.i32.trap
llvm.nvvm.suld.1d.array.i32.zero
llvm.nvvm.suld.1d.array.i64.clamp
llvm.nvvm.suld.1d.array.i64.trap
llvm.nvvm.suld.1d.array.i64.zero
llvm.nvvm.suld.1d.array.i8.clamp
llvm.nvvm.suld.1d.array.i8.trap
llvm.nvvm.suld.1d.array.i8.zero
llvm.nvvm.suld.1d.array.v2i16.clamp
llvm.nvvm.suld.1d.array.v2i16.trap
llvm.nvvm.suld.1d.array.v2i16.zero
llvm.nvvm.suld.1d.array.v2i32.clamp
llvm.nvvm.suld.1d.array.v2i32.trap
llvm.nvvm.suld.1d.array.v2i32.zero
llvm.nvvm.suld.1d.array.v2i64.clamp
llvm.nvvm.suld.1d.array.v2i64.trap
llvm.nvvm.suld.1d.array.v2i64.zero
llvm.nvvm.suld.1d.array.v2i8.clamp
llvm.nvvm.suld.1d.array.v2i8.trap
llvm.nvvm.suld.1d.array.v2i8.zero
llvm.nvvm.suld.1d.array.v4i16.clamp
llvm.nvvm.suld.1d.array.v4i16.trap
llvm.nvvm.suld.1d.array.v4i16.zero
llvm.nvvm.suld.1d.array.v4i32.clamp
llvm.nvvm.suld.1d.array.v4i32.trap
llvm.nvvm.suld.1d.array.v4i32.zero
llvm.nvvm.suld.1d.array.v4i8.clamp
llvm.nvvm.suld.1d.array.v4i8.trap
llvm.nvvm.suld.1d.array.v4i8.zero
llvm.nvvm.suld.1d.i16.clamp
llvm.nvvm.suld.1d.i16.trap
llvm.nvvm.suld.1d.i16.zero
llvm.nvvm.suld.1d.i32.clamp
llvm.nvvm.suld.1d.i32.trap
llvm.nvvm.suld.1d.i32.zero
llvm.nvvm.suld.1d.i64.clamp
llvm.nvvm.suld.1d.i64.trap
llvm.nvvm.suld.1d.i64.zero
llvm.nvvm.suld.1d.i8.clamp
llvm.nvvm.suld.1d.i8.trap
llvm.nvvm.suld.1d.i8.zero
llvm.nvvm.suld.1d.v2i16.clamp
llvm.nvvm.suld.1d.v2i16.trap
llvm.nvvm.suld.1d.v2i16.zero
llvm.nvvm.suld.1d.v2i32.clamp
llvm.nvvm.suld.1d.v2i32.trap
llvm.nvvm.suld.1d.v2i32.zero
llvm.nvvm.suld.1d.v2i64.clamp
llvm.nvvm.suld.1d.v2i64.trap
llvm.nvvm.suld.1d.v2i64.zero
llvm.nvvm.suld.1d.v2i8.clamp
llvm.nvvm.suld.1d.v2i8.trap
llvm.nvvm.suld.1d.v2i8.zero
llvm.nvvm.suld.1d.v4i16.clamp
llvm.nvvm.suld.1d.v4i16.trap
llvm.nvvm.suld.1d.v4i16.zero
llvm.nvvm.suld.1d.v4i32.clamp
llvm.nvvm.suld.1d.v4i32.trap
llvm.nvvm.suld.1d.v4i32.zero
llvm.nvvm.suld.1d.v4i8.clamp
llvm.nvvm.suld.1d.v4i8.trap
llvm.nvvm.suld.1d.v4i8.zero
llvm.nvvm.suld.2d.array.i16.clamp
llvm.nvvm.suld.2d.array.i16.trap
llvm.nvvm.suld.2d.array.i16.zero
llvm.nvvm.suld.2d.array.i32.clamp
llvm.nvvm.suld.2d.array.i32.trap
llvm.nvvm.suld.2d.array.i32.zero
llvm.nvvm.suld.2d.array.i64.clamp
llvm.nvvm.suld.2d.array.i64.trap
llvm.nvvm.suld.2d.array.i64.zero
llvm.nvvm.suld.2d.array.i8.clamp
llvm.nvvm.suld.2d.array.i8.trap
llvm.nvvm.suld.2d.array.i8.zero
llvm.nvvm.suld.2d.array.v2i16.clamp
llvm.nvvm.suld.2d.array.v2i16.trap
llvm.nvvm.suld.2d.array.v2i16.zero
llvm.nvvm.suld.2d.array.v2i32.clamp
llvm.nvvm.suld.2d.array.v2i32.trap
llvm.nvvm.suld.2d.array.v2i32.zero
llvm.nvvm.suld.2d.array.v2i64.clamp
llvm.nvvm.suld.2d.array.v2i64.trap
llvm.nvvm.suld.2d.array.v2i64.zero
llvm.nvvm.suld.2d.array.v2i8.clamp
llvm.nvvm.suld.2d.array.v2i8.trap
llvm.nvvm.suld.2d.array.v2i8.zero
llvm.nvvm.suld.2d.array.v4i16.clamp
llvm.nvvm.suld.2d.array.v4i16.trap
llvm.nvvm.suld.2d.array.v4i16.zero
llvm.nvvm.suld.2d.array.v4i32.clamp
llvm.nvvm.suld.2d.array.v4i32.trap
llvm.nvvm.suld.2d.array.v4i32.zero
llvm.nvvm.suld.2d.array.v4i8.clamp
llvm.nvvm.suld.2d.array.v4i8.trap
llvm.nvvm.suld.2d.array.v4i8.zero
llvm.nvvm.suld.2d.i16.clamp
llvm.nvvm.suld.2d.i16.trap
llvm.nvvm.suld.2d.i16.zero
llvm.nvvm.suld.2d.i32.clamp
llvm.nvvm.suld.2d.i32.trap
llvm.nvvm.suld.2d.i32.zero
llvm.nvvm.suld.2d.i64.clamp
llvm.nvvm.suld.2d.i64.trap
llvm.nvvm.suld.2d.i64.zero
llvm.nvvm.suld.2d.i8.clamp
llvm.nvvm.suld.2d.i8.trap
llvm.nvvm.suld.2d.i8.zero
llvm.nvvm.suld.2d.v2i16.clamp
llvm.nvvm.suld.2d.v2i16.trap
llvm.nvvm.suld.2d.v2i16.zero
llvm.nvvm.suld.2d.v2i32.clamp
llvm.nvvm.suld.2d.v2i32.trap
llvm.nvvm.suld.2d.v2i32.zero
llvm.nvvm.suld.2d.v2i64.clamp
llvm.nvvm.suld.2d.v2i64.trap
llvm.nvvm.suld.2d.v2i64.zero
llvm.nvvm.suld.2d.v2i8.clamp
llvm.nvvm.suld.2d.v2i8.trap
llvm.nvvm.suld.2d.v2i8.zero
llvm.nvvm.suld.2d.v4i16.clamp
llvm.nvvm.suld.2d.v4i16.trap
llvm.nvvm.suld.2d.v4i16.zero
llvm.nvvm.suld.2d.v4i32.clamp
llvm.nvvm.suld.2d.v4i32.trap
llvm.nvvm.suld.2d.v4i32.zero
llvm.nvvm.suld.2d.v4i8.clamp
llvm.nvvm.suld.2d.v4i8.trap
llvm.nvvm.suld.2d.v4i8.zero
llvm.nvvm.suld.3d.i16.clamp
llvm.nvvm.suld.3d.i16.trap
llvm.nvvm.suld.3d.i16.zero
llvm.nvvm.suld.3d.i32.clamp
llvm.nvvm.suld.3d.i32.trap
llvm.nvvm.suld.3d.i32.zero
llvm.nvvm.suld.3d.i64.clamp
llvm.nvvm.suld.3d.i64.trap
llvm.nvvm.suld.3d.i64.zero
llvm.nvvm.suld.3d.i8.clamp
llvm.nvvm.suld.3d.i8.trap
llvm.nvvm.suld.3d.i8.zero
llvm.nvvm.suld.3d.v2i16.clamp
llvm.nvvm.suld.3d.v2i16.trap
llvm.nvvm.suld.3d.v2i16.zero
llvm.nvvm.suld.3d.v2i32.clamp
llvm.nvvm.suld.3d.v2i32.trap
llvm.nvvm.suld.3d.v2i32.zero
llvm.nvvm.suld.3d.v2i64.clamp
llvm.nvvm.suld.3d.v2i64.trap
llvm.nvvm.suld.3d.v2i64.zero
llvm.nvvm.suld.3d.v2i8.clamp
llvm.nvvm.suld.3d.v2i8.trap
llvm.nvvm.suld.3d.v2i8.zero
llvm.nvvm.suld.3d.v4i16.clamp
llvm.nvvm.suld.3d.v4i16.trap
llvm.nvvm.suld.3d.v4i16.zero
llvm.nvvm.suld.3d.v4i32.clamp
llvm.nvvm.suld.3d.v4i32.trap
llvm.nvvm.suld.3d.v4i32.zero
llvm.nvvm.suld.3d.v4i8.clamp
llvm.nvvm.suld.3d.v4i8.trap
llvm.nvvm.suld.3d.v4i8.zero
llvm.nvvm.suq.array.size
llvm.nvvm.suq.channel.data.type
llvm.nvvm.suq.channel.order
llvm.nvvm.suq.depth
llvm.nvvm.suq.height
llvm.nvvm.suq.width
llvm.nvvm.sust.b.1d.array.i16.clamp
llvm.nvvm.sust.b.1d.array.i16.trap
llvm.nvvm.sust.b.1d.array.i16.zero
llvm.nvvm.sust.b.1d.array.i32.clamp
llvm.nvvm.sust.b.1d.array.i32.trap
llvm.nvvm.sust.b.1d.array.i32.zero
llvm.nvvm.sust.b.1d.array.i64.clamp
llvm.nvvm.sust.b.1d.array.i64.trap
llvm.nvvm.sust.b.1d.array.i64.zero
llvm.nvvm.sust.b.1d.array.i8.clamp
llvm.nvvm.sust.b.1d.array.i8.trap
llvm.nvvm.sust.b.1d.array.i8.zero
llvm.nvvm.sust.b.1d.array.v2i16.clamp
llvm.nvvm.sust.b.1d.array.v2i16.trap
llvm.nvvm.sust.b.1d.array.v2i16.zero
llvm.nvvm.sust.b.1d.array.v2i32.clamp
llvm.nvvm.sust.b.1d.array.v2i32.trap
llvm.nvvm.sust.b.1d.array.v2i32.zero
llvm.nvvm.sust.b.1d.array.v2i64.clamp
llvm.nvvm.sust.b.1d.array.v2i64.trap
llvm.nvvm.sust.b.1d.array.v2i64.zero
llvm.nvvm.sust.b.1d.array.v2i8.clamp
llvm.nvvm.sust.b.1d.array.v2i8.trap
llvm.nvvm.sust.b.1d.array.v2i8.zero
llvm.nvvm.sust.b.1d.array.v4i16.clamp
llvm.nvvm.sust.b.1d.array.v4i16.trap
llvm.nvvm.sust.b.1d.array.v4i16.zero
llvm.nvvm.sust.b.1d.array.v4i32.clamp
llvm.nvvm.sust.b.1d.array.v4i32.trap
llvm.nvvm.sust.b.1d.array.v4i32.zero
llvm.nvvm.sust.b.1d.array.v4i8.clamp
llvm.nvvm.sust.b.1d.array.v4i8.trap
llvm.nvvm.sust.b.1d.array.v4i8.zero
llvm.nvvm.sust.b.1d.i16.clamp
llvm.nvvm.sust.b.1d.i16.trap
llvm.nvvm.sust.b.1d.i16.zero
llvm.nvvm.sust.b.1d.i32.clamp
llvm.nvvm.sust.b.1d.i32.trap
llvm.nvvm.sust.b.1d.i32.zero
llvm.nvvm.sust.b.1d.i64.clamp
llvm.nvvm.sust.b.1d.i64.trap
llvm.nvvm.sust.b.1d.i64.zero
llvm.nvvm.sust.b.1d.i8.clamp
llvm.nvvm.sust.b.1d.i8.trap
llvm.nvvm.sust.b.1d.i8.zero
llvm.nvvm.sust.b.1d.v2i16.clamp
llvm.nvvm.sust.b.1d.v2i16.trap
llvm.nvvm.sust.b.1d.v2i16.zero
llvm.nvvm.sust.b.1d.v2i32.clamp
llvm.nvvm.sust.b.1d.v2i32.trap
llvm.nvvm.sust.b.1d.v2i32.zero
llvm.nvvm.sust.b.1d.v2i64.clamp
llvm.nvvm.sust.b.1d.v2i64.trap
llvm.nvvm.sust.b.1d.v2i64.zero
llvm.nvvm.sust.b.1d.v2i8.clamp
llvm.nvvm.sust.b.1d.v2i8.trap
llvm.nvvm.sust.b.1d.v2i8.zero
llvm.nvvm.sust.b.1d.v4i16.clamp
llvm.nvvm.sust.b.1d.v4i16.trap
llvm.nvvm.sust.b.1d.v4i16.zero
llvm.nvvm.sust.b.1d.v4i32.clamp
llvm.nvvm.sust.b.1d.v4i32.trap
llvm.nvvm.sust.b.1d.v4i32.zero
llvm.nvvm.sust.b.1d.v4i8.clamp
llvm.nvvm.sust.b.1d.v4i8.trap
llvm.nvvm.sust.b.1d.v4i8.zero
llvm.nvvm.sust.b.2d.array.i16.clamp
llvm.nvvm.sust.b.2d.array.i16.trap
llvm.nvvm.sust.b.2d.array.i16.zero
llvm.nvvm.sust.b.2d.array.i32.clamp
llvm.nvvm.sust.b.2d.array.i32.trap
llvm.nvvm.sust.b.2d.array.i32.zero
llvm.nvvm.sust.b.2d.array.i64.clamp
llvm.nvvm.sust.b.2d.array.i64.trap
llvm.nvvm.sust.b.2d.array.i64.zero
llvm.nvvm.sust.b.2d.array.i8.clamp
llvm.nvvm.sust.b.2d.array.i8.trap
llvm.nvvm.sust.b.2d.array.i8.zero
llvm.nvvm.sust.b.2d.array.v2i16.clamp
llvm.nvvm.sust.b.2d.array.v2i16.trap
llvm.nvvm.sust.b.2d.array.v2i16.zero
llvm.nvvm.sust.b.2d.array.v2i32.clamp
llvm.nvvm.sust.b.2d.array.v2i32.trap
llvm.nvvm.sust.b.2d.array.v2i32.zero
llvm.nvvm.sust.b.2d.array.v2i64.clamp
llvm.nvvm.sust.b.2d.array.v2i64.trap
llvm.nvvm.sust.b.2d.array.v2i64.zero
llvm.nvvm.sust.b.2d.array.v2i8.clamp
llvm.nvvm.sust.b.2d.array.v2i8.trap
llvm.nvvm.sust.b.2d.array.v2i8.zero
llvm.nvvm.sust.b.2d.array.v4i16.clamp
llvm.nvvm.sust.b.2d.array.v4i16.trap
llvm.nvvm.sust.b.2d.array.v4i16.zero
llvm.nvvm.sust.b.2d.array.v4i32.clamp
llvm.nvvm.sust.b.2d.array.v4i32.trap
llvm.nvvm.sust.b.2d.array.v4i32.zero
llvm.nvvm.sust.b.2d.array.v4i8.clamp
llvm.nvvm.sust.b.2d.array.v4i8.trap
llvm.nvvm.sust.b.2d.array.v4i8.zero
llvm.nvvm.sust.b.2d.i16.clamp
llvm.nvvm.sust.b.2d.i16.trap
llvm.nvvm.sust.b.2d.i16.zero
llvm.nvvm.sust.b.2d.i32.clamp
llvm.nvvm.sust.b.2d.i32.trap
llvm.nvvm.sust.b.2d.i32.zero
llvm.nvvm.sust.b.2d.i64.clamp
llvm.nvvm.sust.b.2d.i64.trap
llvm.nvvm.sust.b.2d.i64.zero
llvm.nvvm.sust.b.2d.i8.clamp
llvm.nvvm.sust.b.2d.i8.trap
llvm.nvvm.sust.b.2d.i8.zero
llvm.nvvm.sust.b.2d.v2i16.clamp
llvm.nvvm.sust.b.2d.v2i16.trap
llvm.nvvm.sust.b.2d.v2i16.zero
llvm.nvvm.sust.b.2d.v2i32.clamp
llvm.nvvm.sust.b.2d.v2i32.trap
llvm.nvvm.sust.b.2d.v2i32.zero
llvm.nvvm.sust.b.2d.v2i64.clamp
llvm.nvvm.sust.b.2d.v2i64.trap
llvm.nvvm.sust.b.2d.v2i64.zero
llvm.nvvm.sust.b.2d.v2i8.clamp
llvm.nvvm.sust.b.2d.v2i8.trap
llvm.nvvm.sust.b.2d.v2i8.zero
llvm.nvvm.sust.b.2d.v4i16.clamp
llvm.nvvm.sust.b.2d.v4i16.trap
llvm.nvvm.sust.b.2d.v4i16.zero
llvm.nvvm.sust.b.2d.v4i32.clamp
llvm.nvvm.sust.b.2d.v4i32.trap
llvm.nvvm.sust.b.2d.v4i32.zero
llvm.nvvm.sust.b.2d.v4i8.clamp
llvm.nvvm.sust.b.2d.v4i8.trap
llvm.nvvm.sust.b.2d.v4i8.zero
llvm.nvvm.sust.b.3d.i16.clamp
llvm.nvvm.sust.b.3d.i16.trap
llvm.nvvm.sust.b.3d.i16.zero
llvm.nvvm.sust.b.3d.i32.clamp
llvm.nvvm.sust.b.3d.i32.trap
llvm.nvvm.sust.b.3d.i32.zero
llvm.nvvm.sust.b.3d.i64.clamp
llvm.nvvm.sust.b.3d.i64.trap
llvm.nvvm.sust.b.3d.i64.zero
llvm.nvvm.sust.b.3d.i8.clamp
llvm.nvvm.sust.b.3d.i8.trap
llvm.nvvm.sust.b.3d.i8.zero
llvm.nvvm.sust.b.3d.v2i16.clamp
llvm.nvvm.sust.b.3d.v2i16.trap
llvm.nvvm.sust.b.3d.v2i16.zero
llvm.nvvm.sust.b.3d.v2i32.clamp
llvm.nvvm.sust.b.3d.v2i32.trap
llvm.nvvm.sust.b.3d.v2i32.zero
llvm.nvvm.sust.b.3d.v2i64.clamp
llvm.nvvm.sust.b.3d.v2i64.trap
llvm.nvvm.sust.b.3d.v2i64.zero
llvm.nvvm.sust.b.3d.v2i8.clamp
llvm.nvvm.sust.b.3d.v2i8.trap
llvm.nvvm.sust.b.3d.v2i8.zero
llvm.nvvm.sust.b.3d.v4i16.clamp
llvm.nvvm.sust.b.3d.v4i16.trap
llvm.nvvm.sust.b.3d.v4i16.zero
llvm.nvvm.sust.b.3d.v4i32.clamp
llvm.nvvm.sust.b.3d.v4i32.trap
llvm.nvvm.sust.b.3d.v4i32.zero
llvm.nvvm.sust.b.3d.v4i8.clamp
llvm.nvvm.sust.b.3d.v4i8.trap
llvm.nvvm.sust.b.3d.v4i8.zero
llvm.nvvm.sust.p.1d.array.i16.trap
llvm.nvvm.sust.p.1d.array.i32.trap
llvm.nvvm.sust.p.1d.array.i8.trap
llvm.nvvm.sust.p.1d.array.v2i16.trap
llvm.nvvm.sust.p.1d.array.v2i32.trap
llvm.nvvm.sust.p.1d.array.v2i8.trap
llvm.nvvm.sust.p.1d.array.v4i16.trap
llvm.nvvm.sust.p.1d.array.v4i32.trap
llvm.nvvm.sust.p.1d.array.v4i8.trap
llvm.nvvm.sust.p.1d.i16.trap
llvm.nvvm.sust.p.1d.i32.trap
llvm.nvvm.sust.p.1d.i8.trap
llvm.nvvm.sust.p.1d.v2i16.trap
llvm.nvvm.sust.p.1d.v2i32.trap
llvm.nvvm.sust.p.1d.v2i8.trap
llvm.nvvm.sust.p.1d.v4i16.trap
llvm.nvvm.sust.p.1d.v4i32.trap
llvm.nvvm.sust.p.1d.v4i8.trap
llvm.nvvm.sust.p.2d.array.i16.trap
llvm.nvvm.sust.p.2d.array.i32.trap
llvm.nvvm.sust.p.2d.array.i8.trap
llvm.nvvm.sust.p.2d.array.v2i16.trap
llvm.nvvm.sust.p.2d.array.v2i32.trap
llvm.nvvm.sust.p.2d.array.v2i8.trap
llvm.nvvm.sust.p.2d.array.v4i16.trap
llvm.nvvm.sust.p.2d.array.v4i32.trap
llvm.nvvm.sust.p.2d.array.v4i8.trap
llvm.nvvm.sust.p.2d.i16.trap
llvm.nvvm.sust.p.2d.i32.trap
llvm.nvvm.sust.p.2d.i8.trap
llvm.nvvm.sust.p.2d.v2i16.trap
llvm.nvvm.sust.p.2d.v2i32.trap
llvm.nvvm.sust.p.2d.v2i8.trap
llvm.nvvm.sust.p.2d.v4i16.trap
llvm.nvvm.sust.p.2d.v4i32.trap
llvm.nvvm.sust.p.2d.v4i8.trap
llvm.nvvm.sust.p.3d.i16.trap
llvm.nvvm.sust.p.3d.i32.trap
llvm.nvvm.sust.p.3d.i8.trap
llvm.nvvm.sust.p.3d.v2i16.trap
llvm.nvvm.sust.p.3d.v2i32.trap
llvm.nvvm.sust.p.3d.v2i8.trap
llvm.nvvm.sust.p.3d.v4i16.trap
llvm.nvvm.sust.p.3d.v4i32.trap
llvm.nvvm.sust.p.3d.v4i8.trap
llvm.nvvm.swap.lo.hi.b64
llvm.nvvm.tex.1d.array.grad.v4f32.f32
llvm.nvvm.tex.1d.array.grad.v4s32.f32
llvm.nvvm.tex.1d.array.grad.v4u32.f32
llvm.nvvm.tex.1d.array.level.v4f32.f32
llvm.nvvm.tex.1d.array.level.v4s32.f32
llvm.nvvm.tex.1d.array.level.v4u32.f32
llvm.nvvm.tex.1d.array.v4f32.f32
llvm.nvvm.tex.1d.array.v4f32.s32
llvm.nvvm.tex.1d.array.v4s32.f32
llvm.nvvm.tex.1d.array.v4s32.s32
llvm.nvvm.tex.1d.array.v4u32.f32
llvm.nvvm.tex.1d.array.v4u32.s32
llvm.nvvm.tex.1d.grad.v4f32.f32
llvm.nvvm.tex.1d.grad.v4s32.f32
llvm.nvvm.tex.1d.grad.v4u32.f32
llvm.nvvm.tex.1d.level.v4f32.f32
llvm.nvvm.tex.1d.level.v4s32.f32
llvm.nvvm.tex.1d.level.v4u32.f32
llvm.nvvm.tex.1d.v4f32.f32
llvm.nvvm.tex.1d.v4f32.s32
llvm.nvvm.tex.1d.v4s32.f32
llvm.nvvm.tex.1d.v4s32.s32
llvm.nvvm.tex.1d.v4u32.f32
llvm.nvvm.tex.1d.v4u32.s32
llvm.nvvm.tex.2d.array.grad.v4f32.f32
llvm.nvvm.tex.2d.array.grad.v4s32.f32
llvm.nvvm.tex.2d.array.grad.v4u32.f32
llvm.nvvm.tex.2d.array.level.v4f32.f32
llvm.nvvm.tex.2d.array.level.v4s32.f32
llvm.nvvm.tex.2d.array.level.v4u32.f32
llvm.nvvm.tex.2d.array.v4f32.f32
llvm.nvvm.tex.2d.array.v4f32.s32
llvm.nvvm.tex.2d.array.v4s32.f32
llvm.nvvm.tex.2d.array.v4s32.s32
llvm.nvvm.tex.2d.array.v4u32.f32
llvm.nvvm.tex.2d.array.v4u32.s32
llvm.nvvm.tex.2d.grad.v4f32.f32
llvm.nvvm.tex.2d.grad.v4s32.f32
llvm.nvvm.tex.2d.grad.v4u32.f32
llvm.nvvm.tex.2d.level.v4f32.f32
llvm.nvvm.tex.2d.level.v4s32.f32
llvm.nvvm.tex.2d.level.v4u32.f32
llvm.nvvm.tex.2d.v4f32.f32
llvm.nvvm.tex.2d.v4f32.s32
llvm.nvvm.tex.2d.v4s32.f32
llvm.nvvm.tex.2d.v4s32.s32
llvm.nvvm.tex.2d.v4u32.f32
llvm.nvvm.tex.2d.v4u32.s32
llvm.nvvm.tex.3d.grad.v4f32.f32
llvm.nvvm.tex.3d.grad.v4s32.f32
llvm.nvvm.tex.3d.grad.v4u32.f32
llvm.nvvm.tex.3d.level.v4f32.f32
llvm.nvvm.tex.3d.level.v4s32.f32
llvm.nvvm.tex.3d.level.v4u32.f32
llvm.nvvm.tex.3d.v4f32.f32
llvm.nvvm.tex.3d.v4f32.s32
llvm.nvvm.tex.3d.v4s32.f32
llvm.nvvm.tex.3d.v4s32.s32
llvm.nvvm.tex.3d.v4u32.f32
llvm.nvvm.tex.3d.v4u32.s32
llvm.nvvm.tex.cube.array.level.v4f32.f32
llvm.nvvm.tex.cube.array.level.v4s32.f32
llvm.nvvm.tex.cube.array.level.v4u32.f32
llvm.nvvm.tex.cube.array.v4f32.f32
llvm.nvvm.tex.cube.array.v4s32.f32
llvm.nvvm.tex.cube.array.v4u32.f32
llvm.nvvm.tex.cube.level.v4f32.f32
llvm.nvvm.tex.cube.level.v4s32.f32
llvm.nvvm.tex.cube.level.v4u32.f32
llvm.nvvm.tex.cube.v4f32.f32
llvm.nvvm.tex.cube.v4s32.f32
llvm.nvvm.tex.cube.v4u32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.array.level.v4f32.f32
llvm.nvvm.tex.unified.1d.array.level.v4s32.f32
llvm.nvvm.tex.unified.1d.array.level.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.s32
llvm.nvvm.tex.unified.1d.array.v4s32.f32
llvm.nvvm.tex.unified.1d.array.v4s32.s32
llvm.nvvm.tex.unified.1d.array.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4u32.s32
llvm.nvvm.tex.unified.1d.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.level.v4f32.f32
llvm.nvvm.tex.unified.1d.level.v4s32.f32
llvm.nvvm.tex.unified.1d.level.v4u32.f32
llvm.nvvm.tex.unified.1d.v4f32.f32
llvm.nvvm.tex.unified.1d.v4f32.s32
llvm.nvvm.tex.unified.1d.v4s32.f32
llvm.nvvm.tex.unified.1d.v4s32.s32
llvm.nvvm.tex.unified.1d.v4u32.f32
llvm.nvvm.tex.unified.1d.v4u32.s32
llvm.nvvm.tex.unified.2d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.array.level.v4f32.f32
llvm.nvvm.tex.unified.2d.array.level.v4s32.f32
llvm.nvvm.tex.unified.2d.array.level.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.s32
llvm.nvvm.tex.unified.2d.array.v4s32.f32
llvm.nvvm.tex.unified.2d.array.v4s32.s32
llvm.nvvm.tex.unified.2d.array.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4u32.s32
llvm.nvvm.tex.unified.2d.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.level.v4f32.f32
llvm.nvvm.tex.unified.2d.level.v4s32.f32
llvm.nvvm.tex.unified.2d.level.v4u32.f32
llvm.nvvm.tex.unified.2d.v4f32.f32
llvm.nvvm.tex.unified.2d.v4f32.s32
llvm.nvvm.tex.unified.2d.v4s32.f32
llvm.nvvm.tex.unified.2d.v4s32.s32
llvm.nvvm.tex.unified.2d.v4u32.f32
llvm.nvvm.tex.unified.2d.v4u32.s32
llvm.nvvm.tex.unified.3d.grad.v4f32.f32
llvm.nvvm.tex.unified.3d.grad.v4s32.f32
llvm.nvvm.tex.unified.3d.grad.v4u32.f32
llvm.nvvm.tex.unified.3d.level.v4f32.f32
llvm.nvvm.tex.unified.3d.level.v4s32.f32
llvm.nvvm.tex.unified.3d.level.v4u32.f32
llvm.nvvm.tex.unified.3d.v4f32.f32
llvm.nvvm.tex.unified.3d.v4f32.s32
llvm.nvvm.tex.unified.3d.v4s32.f32
llvm.nvvm.tex.unified.3d.v4s32.s32
llvm.nvvm.tex.unified.3d.v4u32.f32
llvm.nvvm.tex.unified.3d.v4u32.s32
llvm.nvvm.tex.unified.cube.array.level.v4f32.f32
llvm.nvvm.tex.unified.cube.array.level.v4s32.f32
llvm.nvvm.tex.unified.cube.array.level.v4u32.f32
llvm.nvvm.tex.unified.cube.array.v4f32.f32
llvm.nvvm.tex.unified.cube.array.v4s32.f32
llvm.nvvm.tex.unified.cube.array.v4u32.f32
llvm.nvvm.tex.unified.cube.level.v4f32.f32
llvm.nvvm.tex.unified.cube.level.v4s32.f32
llvm.nvvm.tex.unified.cube.level.v4u32.f32
llvm.nvvm.tex.unified.cube.v4f32.f32
llvm.nvvm.tex.unified.cube.v4s32.f32
llvm.nvvm.tex.unified.cube.v4u32.f32
llvm.nvvm.texsurf.handle
llvm.nvvm.texsurf.handle.internal
llvm.nvvm.tld4.a.2d.v4f32.f32
llvm.nvvm.tld4.a.2d.v4s32.f32
llvm.nvvm.tld4.a.2d.v4u32.f32
llvm.nvvm.tld4.b.2d.v4f32.f32
llvm.nvvm.tld4.b.2d.v4s32.f32
llvm.nvvm.tld4.b.2d.v4u32.f32
llvm.nvvm.tld4.g.2d.v4f32.f32
llvm.nvvm.tld4.g.2d.v4s32.f32
llvm.nvvm.tld4.g.2d.v4u32.f32
llvm.nvvm.tld4.r.2d.v4f32.f32
llvm.nvvm.tld4.r.2d.v4s32.f32
llvm.nvvm.tld4.r.2d.v4u32.f32
llvm.nvvm.tld4.unified.a.2d.v4f32.f32
llvm.nvvm.tld4.unified.a.2d.v4s32.f32
llvm.nvvm.tld4.unified.a.2d.v4u32.f32
llvm.nvvm.tld4.unified.b.2d.v4f32.f32
llvm.nvvm.tld4.unified.b.2d.v4s32.f32
llvm.nvvm.tld4.unified.b.2d.v4u32.f32
llvm.nvvm.tld4.unified.g.2d.v4f32.f32
llvm.nvvm.tld4.unified.g.2d.v4s32.f32
llvm.nvvm.tld4.unified.g.2d.v4u32.f32
llvm.nvvm.tld4.unified.r.2d.v4f32.f32
llvm.nvvm.tld4.unified.r.2d.v4s32.f32
llvm.nvvm.tld4.unified.r.2d.v4u32.f32
llvm.nvvm.trunc.d
llvm.nvvm.trunc.f
llvm.nvvm.trunc.ftz.f
llvm.nvvm.txq.array.size
llvm.nvvm.txq.channel.data.type
llvm.nvvm.txq.channel.order
llvm.nvvm.txq.depth
llvm.nvvm.txq.height
llvm.nvvm.txq.num.mipmap.levels
llvm.nvvm.txq.num.samples
llvm.nvvm.txq.width
llvm.nvvm.ui2d.rm
llvm.nvvm.ui2d.rn
llvm.nvvm.ui2d.rp
llvm.nvvm.ui2d.rz
llvm.nvvm.ui2f.rm
llvm.nvvm.ui2f.rn
llvm.nvvm.ui2f.rp
llvm.nvvm.ui2f.rz
llvm.nvvm.ull2d.rm
llvm.nvvm.ull2d.rn
llvm.nvvm.ull2d.rp
llvm.nvvm.ull2d.rz
llvm.nvvm.ull2f.rm
llvm.nvvm.ull2f.rn
llvm.nvvm.ull2f.rp
llvm.nvvm.ull2f.rz
llvm.nvvm.vote.all
llvm.nvvm.vote.all.sync
llvm.nvvm.vote.any
llvm.nvvm.vote.any.sync
llvm.nvvm.vote.ballot
llvm.nvvm.vote.ballot.sync
llvm.nvvm.vote.uni
llvm.nvvm.vote.uni.sync
llvm.nvvm.wmma.m16n16k16.load.a.col.f16
llvm.nvvm.wmma.m16n16k16.load.a.col.s8
llvm.nvvm.wmma.m16n16k16.load.a.col.stride.f16
llvm.nvvm.wmma.m16n16k16.load.a.col.stride.s8
llvm.nvvm.wmma.m16n16k16.load.a.col.stride.u8
llvm.nvvm.wmma.m16n16k16.load.a.col.u8
llvm.nvvm.wmma.m16n16k16.load.a.row.f16
llvm.nvvm.wmma.m16n16k16.load.a.row.s8
llvm.nvvm.wmma.m16n16k16.load.a.row.stride.f16
llvm.nvvm.wmma.m16n16k16.load.a.row.stride.s8
llvm.nvvm.wmma.m16n16k16.load.a.row.stride.u8
llvm.nvvm.wmma.m16n16k16.load.a.row.u8
llvm.nvvm.wmma.m16n16k16.load.b.col.f16
llvm.nvvm.wmma.m16n16k16.load.b.col.s8
llvm.nvvm.wmma.m16n16k16.load.b.col.stride.f16
llvm.nvvm.wmma.m16n16k16.load.b.col.stride.s8
llvm.nvvm.wmma.m16n16k16.load.b.col.stride.u8
llvm.nvvm.wmma.m16n16k16.load.b.col.u8
llvm.nvvm.wmma.m16n16k16.load.b.row.f16
llvm.nvvm.wmma.m16n16k16.load.b.row.s8
llvm.nvvm.wmma.m16n16k16.load.b.row.stride.f16
llvm.nvvm.wmma.m16n16k16.load.b.row.stride.s8
llvm.nvvm.wmma.m16n16k16.load.b.row.stride.u8
llvm.nvvm.wmma.m16n16k16.load.b.row.u8
llvm.nvvm.wmma.m16n16k16.load.c.col.f16
llvm.nvvm.wmma.m16n16k16.load.c.col.f32
llvm.nvvm.wmma.m16n16k16.load.c.col.s32
llvm.nvvm.wmma.m16n16k16.load.c.col.stride.f16
llvm.nvvm.wmma.m16n16k16.load.c.col.stride.f32
llvm.nvvm.wmma.m16n16k16.load.c.col.stride.s32
llvm.nvvm.wmma.m16n16k16.load.c.row.f16
llvm.nvvm.wmma.m16n16k16.load.c.row.f32
llvm.nvvm.wmma.m16n16k16.load.c.row.s32
llvm.nvvm.wmma.m16n16k16.load.c.row.stride.f16
llvm.nvvm.wmma.m16n16k16.load.c.row.stride.f32
llvm.nvvm.wmma.m16n16k16.load.c.row.stride.s32
llvm.nvvm.wmma.m16n16k16.mma.col.col.f16.f16
llvm.nvvm.wmma.m16n16k16.mma.col.col.f16.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.f16.f32
llvm.nvvm.wmma.m16n16k16.mma.col.col.f16.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.f32.f16
llvm.nvvm.wmma.m16n16k16.mma.col.col.f32.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.f32.f32
llvm.nvvm.wmma.m16n16k16.mma.col.col.f32.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.s8
llvm.nvvm.wmma.m16n16k16.mma.col.col.s8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.u8
llvm.nvvm.wmma.m16n16k16.mma.col.col.u8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.f16.f16
llvm.nvvm.wmma.m16n16k16.mma.col.row.f16.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.f16.f32
llvm.nvvm.wmma.m16n16k16.mma.col.row.f16.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.f32.f16
llvm.nvvm.wmma.m16n16k16.mma.col.row.f32.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.f32.f32
llvm.nvvm.wmma.m16n16k16.mma.col.row.f32.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.s8
llvm.nvvm.wmma.m16n16k16.mma.col.row.s8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.u8
llvm.nvvm.wmma.m16n16k16.mma.col.row.u8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.f16.f16
llvm.nvvm.wmma.m16n16k16.mma.row.col.f16.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.f16.f32
llvm.nvvm.wmma.m16n16k16.mma.row.col.f16.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.f32.f16
llvm.nvvm.wmma.m16n16k16.mma.row.col.f32.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.f32.f32
llvm.nvvm.wmma.m16n16k16.mma.row.col.f32.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.s8
llvm.nvvm.wmma.m16n16k16.mma.row.col.s8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.u8
llvm.nvvm.wmma.m16n16k16.mma.row.col.u8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.f16.f16
llvm.nvvm.wmma.m16n16k16.mma.row.row.f16.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.f16.f32
llvm.nvvm.wmma.m16n16k16.mma.row.row.f16.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.f32.f16
llvm.nvvm.wmma.m16n16k16.mma.row.row.f32.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.f32.f32
llvm.nvvm.wmma.m16n16k16.mma.row.row.f32.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.s8
llvm.nvvm.wmma.m16n16k16.mma.row.row.s8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.u8
llvm.nvvm.wmma.m16n16k16.mma.row.row.u8.satfinite
llvm.nvvm.wmma.m16n16k16.store.d.col.f16
llvm.nvvm.wmma.m16n16k16.store.d.col.f32
llvm.nvvm.wmma.m16n16k16.store.d.col.s32
llvm.nvvm.wmma.m16n16k16.store.d.col.stride.f16
llvm.nvvm.wmma.m16n16k16.store.d.col.stride.f32
llvm.nvvm.wmma.m16n16k16.store.d.col.stride.s32
llvm.nvvm.wmma.m16n16k16.store.d.row.f16
llvm.nvvm.wmma.m16n16k16.store.d.row.f32
llvm.nvvm.wmma.m16n16k16.store.d.row.s32
llvm.nvvm.wmma.m16n16k16.store.d.row.stride.f16
llvm.nvvm.wmma.m16n16k16.store.d.row.stride.f32
llvm.nvvm.wmma.m16n16k16.store.d.row.stride.s32
llvm.nvvm.wmma.m32n8k16.load.a.col.f16
llvm.nvvm.wmma.m32n8k16.load.a.col.s8
llvm.nvvm.wmma.m32n8k16.load.a.col.stride.f16
llvm.nvvm.wmma.m32n8k16.load.a.col.stride.s8
llvm.nvvm.wmma.m32n8k16.load.a.col.stride.u8
llvm.nvvm.wmma.m32n8k16.load.a.col.u8
llvm.nvvm.wmma.m32n8k16.load.a.row.f16
llvm.nvvm.wmma.m32n8k16.load.a.row.s8
llvm.nvvm.wmma.m32n8k16.load.a.row.stride.f16
llvm.nvvm.wmma.m32n8k16.load.a.row.stride.s8
llvm.nvvm.wmma.m32n8k16.load.a.row.stride.u8
llvm.nvvm.wmma.m32n8k16.load.a.row.u8
llvm.nvvm.wmma.m32n8k16.load.b.col.f16
llvm.nvvm.wmma.m32n8k16.load.b.col.s8
llvm.nvvm.wmma.m32n8k16.load.b.col.stride.f16
llvm.nvvm.wmma.m32n8k16.load.b.col.stride.s8
llvm.nvvm.wmma.m32n8k16.load.b.col.stride.u8
llvm.nvvm.wmma.m32n8k16.load.b.col.u8
llvm.nvvm.wmma.m32n8k16.load.b.row.f16
llvm.nvvm.wmma.m32n8k16.load.b.row.s8
llvm.nvvm.wmma.m32n8k16.load.b.row.stride.f16
llvm.nvvm.wmma.m32n8k16.load.b.row.stride.s8
llvm.nvvm.wmma.m32n8k16.load.b.row.stride.u8
llvm.nvvm.wmma.m32n8k16.load.b.row.u8
llvm.nvvm.wmma.m32n8k16.load.c.col.f16
llvm.nvvm.wmma.m32n8k16.load.c.col.f32
llvm.nvvm.wmma.m32n8k16.load.c.col.s32
llvm.nvvm.wmma.m32n8k16.load.c.col.stride.f16
llvm.nvvm.wmma.m32n8k16.load.c.col.stride.f32
llvm.nvvm.wmma.m32n8k16.load.c.col.stride.s32
llvm.nvvm.wmma.m32n8k16.load.c.row.f16
llvm.nvvm.wmma.m32n8k16.load.c.row.f32
llvm.nvvm.wmma.m32n8k16.load.c.row.s32
llvm.nvvm.wmma.m32n8k16.load.c.row.stride.f16
llvm.nvvm.wmma.m32n8k16.load.c.row.stride.f32
llvm.nvvm.wmma.m32n8k16.load.c.row.stride.s32
llvm.nvvm.wmma.m32n8k16.mma.col.col.f16.f16
llvm.nvvm.wmma.m32n8k16.mma.col.col.f16.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.f16.f32
llvm.nvvm.wmma.m32n8k16.mma.col.col.f16.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.f32.f16
llvm.nvvm.wmma.m32n8k16.mma.col.col.f32.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.f32.f32
llvm.nvvm.wmma.m32n8k16.mma.col.col.f32.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.s8
llvm.nvvm.wmma.m32n8k16.mma.col.col.s8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.u8
llvm.nvvm.wmma.m32n8k16.mma.col.col.u8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.f16.f16
llvm.nvvm.wmma.m32n8k16.mma.col.row.f16.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.f16.f32
llvm.nvvm.wmma.m32n8k16.mma.col.row.f16.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.f32.f16
llvm.nvvm.wmma.m32n8k16.mma.col.row.f32.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.f32.f32
llvm.nvvm.wmma.m32n8k16.mma.col.row.f32.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.s8
llvm.nvvm.wmma.m32n8k16.mma.col.row.s8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.u8
llvm.nvvm.wmma.m32n8k16.mma.col.row.u8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.f16.f16
llvm.nvvm.wmma.m32n8k16.mma.row.col.f16.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.f16.f32
llvm.nvvm.wmma.m32n8k16.mma.row.col.f16.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.f32.f16
llvm.nvvm.wmma.m32n8k16.mma.row.col.f32.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.f32.f32
llvm.nvvm.wmma.m32n8k16.mma.row.col.f32.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.s8
llvm.nvvm.wmma.m32n8k16.mma.row.col.s8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.u8
llvm.nvvm.wmma.m32n8k16.mma.row.col.u8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.f16.f16
llvm.nvvm.wmma.m32n8k16.mma.row.row.f16.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.f16.f32
llvm.nvvm.wmma.m32n8k16.mma.row.row.f16.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.f32.f16
llvm.nvvm.wmma.m32n8k16.mma.row.row.f32.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.f32.f32
llvm.nvvm.wmma.m32n8k16.mma.row.row.f32.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.s8
llvm.nvvm.wmma.m32n8k16.mma.row.row.s8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.u8
llvm.nvvm.wmma.m32n8k16.mma.row.row.u8.satfinite
llvm.nvvm.wmma.m32n8k16.store.d.col.f16
llvm.nvvm.wmma.m32n8k16.store.d.col.f32
llvm.nvvm.wmma.m32n8k16.store.d.col.s32
llvm.nvvm.wmma.m32n8k16.store.d.col.stride.f16
llvm.nvvm.wmma.m32n8k16.store.d.col.stride.f32
llvm.nvvm.wmma.m32n8k16.store.d.col.stride.s32
llvm.nvvm.wmma.m32n8k16.store.d.row.f16
llvm.nvvm.wmma.m32n8k16.store.d.row.f32
llvm.nvvm.wmma.m32n8k16.store.d.row.s32
llvm.nvvm.wmma.m32n8k16.store.d.row.stride.f16
llvm.nvvm.wmma.m32n8k16.store.d.row.stride.f32
llvm.nvvm.wmma.m32n8k16.store.d.row.stride.s32
llvm.nvvm.wmma.m8n32k16.load.a.col.f16
llvm.nvvm.wmma.m8n32k16.load.a.col.s8
llvm.nvvm.wmma.m8n32k16.load.a.col.stride.f16
llvm.nvvm.wmma.m8n32k16.load.a.col.stride.s8
llvm.nvvm.wmma.m8n32k16.load.a.col.stride.u8
llvm.nvvm.wmma.m8n32k16.load.a.col.u8
llvm.nvvm.wmma.m8n32k16.load.a.row.f16
llvm.nvvm.wmma.m8n32k16.load.a.row.s8
llvm.nvvm.wmma.m8n32k16.load.a.row.stride.f16
llvm.nvvm.wmma.m8n32k16.load.a.row.stride.s8
llvm.nvvm.wmma.m8n32k16.load.a.row.stride.u8
llvm.nvvm.wmma.m8n32k16.load.a.row.u8
llvm.nvvm.wmma.m8n32k16.load.b.col.f16
llvm.nvvm.wmma.m8n32k16.load.b.col.s8
llvm.nvvm.wmma.m8n32k16.load.b.col.stride.f16
llvm.nvvm.wmma.m8n32k16.load.b.col.stride.s8
llvm.nvvm.wmma.m8n32k16.load.b.col.stride.u8
llvm.nvvm.wmma.m8n32k16.load.b.col.u8
llvm.nvvm.wmma.m8n32k16.load.b.row.f16
llvm.nvvm.wmma.m8n32k16.load.b.row.s8
llvm.nvvm.wmma.m8n32k16.load.b.row.stride.f16
llvm.nvvm.wmma.m8n32k16.load.b.row.stride.s8
llvm.nvvm.wmma.m8n32k16.load.b.row.stride.u8
llvm.nvvm.wmma.m8n32k16.load.b.row.u8
llvm.nvvm.wmma.m8n32k16.load.c.col.f16
llvm.nvvm.wmma.m8n32k16.load.c.col.f32
llvm.nvvm.wmma.m8n32k16.load.c.col.s32
llvm.nvvm.wmma.m8n32k16.load.c.col.stride.f16
llvm.nvvm.wmma.m8n32k16.load.c.col.stride.f32
llvm.nvvm.wmma.m8n32k16.load.c.col.stride.s32
llvm.nvvm.wmma.m8n32k16.load.c.row.f16
llvm.nvvm.wmma.m8n32k16.load.c.row.f32
llvm.nvvm.wmma.m8n32k16.load.c.row.s32
llvm.nvvm.wmma.m8n32k16.load.c.row.stride.f16
llvm.nvvm.wmma.m8n32k16.load.c.row.stride.f32
llvm.nvvm.wmma.m8n32k16.load.c.row.stride.s32
llvm.nvvm.wmma.m8n32k16.mma.col.col.f16.f16
llvm.nvvm.wmma.m8n32k16.mma.col.col.f16.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.f16.f32
llvm.nvvm.wmma.m8n32k16.mma.col.col.f16.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.f32.f16
llvm.nvvm.wmma.m8n32k16.mma.col.col.f32.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.f32.f32
llvm.nvvm.wmma.m8n32k16.mma.col.col.f32.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.s8
llvm.nvvm.wmma.m8n32k16.mma.col.col.s8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.u8
llvm.nvvm.wmma.m8n32k16.mma.col.col.u8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.f16.f16
llvm.nvvm.wmma.m8n32k16.mma.col.row.f16.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.f16.f32
llvm.nvvm.wmma.m8n32k16.mma.col.row.f16.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.f32.f16
llvm.nvvm.wmma.m8n32k16.mma.col.row.f32.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.f32.f32
llvm.nvvm.wmma.m8n32k16.mma.col.row.f32.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.s8
llvm.nvvm.wmma.m8n32k16.mma.col.row.s8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.u8
llvm.nvvm.wmma.m8n32k16.mma.col.row.u8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.f16.f16
llvm.nvvm.wmma.m8n32k16.mma.row.col.f16.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.f16.f32
llvm.nvvm.wmma.m8n32k16.mma.row.col.f16.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.f32.f16
llvm.nvvm.wmma.m8n32k16.mma.row.col.f32.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.f32.f32
llvm.nvvm.wmma.m8n32k16.mma.row.col.f32.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.s8
llvm.nvvm.wmma.m8n32k16.mma.row.col.s8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.u8
llvm.nvvm.wmma.m8n32k16.mma.row.col.u8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.f16.f16
llvm.nvvm.wmma.m8n32k16.mma.row.row.f16.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.f16.f32
llvm.nvvm.wmma.m8n32k16.mma.row.row.f16.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.f32.f16
llvm.nvvm.wmma.m8n32k16.mma.row.row.f32.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.f32.f32
llvm.nvvm.wmma.m8n32k16.mma.row.row.f32.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.s8
llvm.nvvm.wmma.m8n32k16.mma.row.row.s8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.u8
llvm.nvvm.wmma.m8n32k16.mma.row.row.u8.satfinite
llvm.nvvm.wmma.m8n32k16.store.d.col.f16
llvm.nvvm.wmma.m8n32k16.store.d.col.f32
llvm.nvvm.wmma.m8n32k16.store.d.col.s32
llvm.nvvm.wmma.m8n32k16.store.d.col.stride.f16
llvm.nvvm.wmma.m8n32k16.store.d.col.stride.f32
llvm.nvvm.wmma.m8n32k16.store.d.col.stride.s32
llvm.nvvm.wmma.m8n32k16.store.d.row.f16
llvm.nvvm.wmma.m8n32k16.store.d.row.f32
llvm.nvvm.wmma.m8n32k16.store.d.row.s32
llvm.nvvm.wmma.m8n32k16.store.d.row.stride.f16
llvm.nvvm.wmma.m8n32k16.store.d.row.stride.f32
llvm.nvvm.wmma.m8n32k16.store.d.row.stride.s32
llvm.nvvm.wmma.m8n8k128.load.a.row.b1
llvm.nvvm.wmma.m8n8k128.load.a.row.stride.b1
llvm.nvvm.wmma.m8n8k128.load.b.col.b1
llvm.nvvm.wmma.m8n8k128.load.b.col.stride.b1
llvm.nvvm.wmma.m8n8k128.load.c.col.s32
llvm.nvvm.wmma.m8n8k128.load.c.col.stride.s32
llvm.nvvm.wmma.m8n8k128.load.c.row.s32
llvm.nvvm.wmma.m8n8k128.load.c.row.stride.s32
llvm.nvvm.wmma.m8n8k128.mma.row.col.b1
llvm.nvvm.wmma.m8n8k128.store.d.col.s32
llvm.nvvm.wmma.m8n8k128.store.d.col.stride.s32
llvm.nvvm.wmma.m8n8k128.store.d.row.s32
llvm.nvvm.wmma.m8n8k128.store.d.row.stride.s32
llvm.nvvm.wmma.m8n8k32.load.a.row.s4
llvm.nvvm.wmma.m8n8k32.load.a.row.stride.s4
llvm.nvvm.wmma.m8n8k32.load.a.row.stride.u4
llvm.nvvm.wmma.m8n8k32.load.a.row.u4
llvm.nvvm.wmma.m8n8k32.load.b.col.s4
llvm.nvvm.wmma.m8n8k32.load.b.col.stride.s4
llvm.nvvm.wmma.m8n8k32.load.b.col.stride.u4
llvm.nvvm.wmma.m8n8k32.load.b.col.u4
llvm.nvvm.wmma.m8n8k32.load.c.col.s32
llvm.nvvm.wmma.m8n8k32.load.c.col.stride.s32
llvm.nvvm.wmma.m8n8k32.load.c.row.s32
llvm.nvvm.wmma.m8n8k32.load.c.row.stride.s32
llvm.nvvm.wmma.m8n8k32.mma.row.col.s4
llvm.nvvm.wmma.m8n8k32.mma.row.col.s4.satfinite
llvm.nvvm.wmma.m8n8k32.mma.row.col.u4
llvm.nvvm.wmma.m8n8k32.mma.row.col.u4.satfinite
llvm.nvvm.wmma.m8n8k32.store.d.col.s32
llvm.nvvm.wmma.m8n8k32.store.d.col.stride.s32
llvm.nvvm.wmma.m8n8k32.store.d.row.s32
llvm.nvvm.wmma.m8n8k32.store.d.row.stride.s32
llvm.ppc.addf128.round.to.odd
llvm.ppc.altivec.crypto.vcipher
llvm.ppc.altivec.crypto.vcipherlast
llvm.ppc.altivec.crypto.vncipher
llvm.ppc.altivec.crypto.vncipherlast
llvm.ppc.altivec.crypto.vpermxor
llvm.ppc.altivec.crypto.vpmsumb
llvm.ppc.altivec.crypto.vpmsumd
llvm.ppc.altivec.crypto.vpmsumh
llvm.ppc.altivec.crypto.vpmsumw
llvm.ppc.altivec.crypto.vsbox
llvm.ppc.altivec.crypto.vshasigmad
llvm.ppc.altivec.crypto.vshasigmaw
llvm.ppc.altivec.dss
llvm.ppc.altivec.dssall
llvm.ppc.altivec.dst
llvm.ppc.altivec.dstst
llvm.ppc.altivec.dststt
llvm.ppc.altivec.dstt
llvm.ppc.altivec.lvebx
llvm.ppc.altivec.lvehx
llvm.ppc.altivec.lvewx
llvm.ppc.altivec.lvsl
llvm.ppc.altivec.lvsr
llvm.ppc.altivec.lvx
llvm.ppc.altivec.lvxl
llvm.ppc.altivec.mfvscr
llvm.ppc.altivec.mtvscr
llvm.ppc.altivec.mtvsrbm
llvm.ppc.altivec.mtvsrdm
llvm.ppc.altivec.mtvsrhm
llvm.ppc.altivec.mtvsrqm
llvm.ppc.altivec.mtvsrwm
llvm.ppc.altivec.stvebx
llvm.ppc.altivec.stvehx
llvm.ppc.altivec.stvewx
llvm.ppc.altivec.stvx
llvm.ppc.altivec.stvxl
llvm.ppc.altivec.vabsdub
llvm.ppc.altivec.vabsduh
llvm.ppc.altivec.vabsduw
llvm.ppc.altivec.vaddcuq
llvm.ppc.altivec.vaddcuw
llvm.ppc.altivec.vaddecuq
llvm.ppc.altivec.vaddeuqm
llvm.ppc.altivec.vaddsbs
llvm.ppc.altivec.vaddshs
llvm.ppc.altivec.vaddsws
llvm.ppc.altivec.vaddubs
llvm.ppc.altivec.vadduhs
llvm.ppc.altivec.vadduws
llvm.ppc.altivec.vavgsb
llvm.ppc.altivec.vavgsh
llvm.ppc.altivec.vavgsw
llvm.ppc.altivec.vavgub
llvm.ppc.altivec.vavguh
llvm.ppc.altivec.vavguw
llvm.ppc.altivec.vbpermq
llvm.ppc.altivec.vcfsx
llvm.ppc.altivec.vcfuged
llvm.ppc.altivec.vcfux
llvm.ppc.altivec.vclrlb
llvm.ppc.altivec.vclrrb
llvm.ppc.altivec.vclzdm
llvm.ppc.altivec.vclzlsbb
llvm.ppc.altivec.vcmpbfp
llvm.ppc.altivec.vcmpbfp.p
llvm.ppc.altivec.vcmpeqfp
llvm.ppc.altivec.vcmpeqfp.p
llvm.ppc.altivec.vcmpequb
llvm.ppc.altivec.vcmpequb.p
llvm.ppc.altivec.vcmpequd
llvm.ppc.altivec.vcmpequd.p
llvm.ppc.altivec.vcmpequh
llvm.ppc.altivec.vcmpequh.p
llvm.ppc.altivec.vcmpequq
llvm.ppc.altivec.vcmpequq.p
llvm.ppc.altivec.vcmpequw
llvm.ppc.altivec.vcmpequw.p
llvm.ppc.altivec.vcmpgefp
llvm.ppc.altivec.vcmpgefp.p
llvm.ppc.altivec.vcmpgtfp
llvm.ppc.altivec.vcmpgtfp.p
llvm.ppc.altivec.vcmpgtsb
llvm.ppc.altivec.vcmpgtsb.p
llvm.ppc.altivec.vcmpgtsd
llvm.ppc.altivec.vcmpgtsd.p
llvm.ppc.altivec.vcmpgtsh
llvm.ppc.altivec.vcmpgtsh.p
llvm.ppc.altivec.vcmpgtsq
llvm.ppc.altivec.vcmpgtsq.p
llvm.ppc.altivec.vcmpgtsw
llvm.ppc.altivec.vcmpgtsw.p
llvm.ppc.altivec.vcmpgtub
llvm.ppc.altivec.vcmpgtub.p
llvm.ppc.altivec.vcmpgtud
llvm.ppc.altivec.vcmpgtud.p
llvm.ppc.altivec.vcmpgtuh
llvm.ppc.altivec.vcmpgtuh.p
llvm.ppc.altivec.vcmpgtuq
llvm.ppc.altivec.vcmpgtuq.p
llvm.ppc.altivec.vcmpgtuw
llvm.ppc.altivec.vcmpgtuw.p
llvm.ppc.altivec.vcmpneb
llvm.ppc.altivec.vcmpneb.p
llvm.ppc.altivec.vcmpneh
llvm.ppc.altivec.vcmpneh.p
llvm.ppc.altivec.vcmpnew
llvm.ppc.altivec.vcmpnew.p
llvm.ppc.altivec.vcmpnezb
llvm.ppc.altivec.vcmpnezb.p
llvm.ppc.altivec.vcmpnezh
llvm.ppc.altivec.vcmpnezh.p
llvm.ppc.altivec.vcmpnezw
llvm.ppc.altivec.vcmpnezw.p
llvm.ppc.altivec.vcntmbb
llvm.ppc.altivec.vcntmbd
llvm.ppc.altivec.vcntmbh
llvm.ppc.altivec.vcntmbw
llvm.ppc.altivec.vctsxs
llvm.ppc.altivec.vctuxs
llvm.ppc.altivec.vctzdm
llvm.ppc.altivec.vctzlsbb
llvm.ppc.altivec.vdivesd
llvm.ppc.altivec.vdivesq
llvm.ppc.altivec.vdivesw
llvm.ppc.altivec.vdiveud
llvm.ppc.altivec.vdiveuq
llvm.ppc.altivec.vdiveuw
llvm.ppc.altivec.vexpandbm
llvm.ppc.altivec.vexpanddm
llvm.ppc.altivec.vexpandhm
llvm.ppc.altivec.vexpandqm
llvm.ppc.altivec.vexpandwm
llvm.ppc.altivec.vexptefp
llvm.ppc.altivec.vextddvlx
llvm.ppc.altivec.vextddvrx
llvm.ppc.altivec.vextdubvlx
llvm.ppc.altivec.vextdubvrx
llvm.ppc.altivec.vextduhvlx
llvm.ppc.altivec.vextduhvrx
llvm.ppc.altivec.vextduwvlx
llvm.ppc.altivec.vextduwvrx
llvm.ppc.altivec.vextractbm
llvm.ppc.altivec.vextractdm
llvm.ppc.altivec.vextracthm
llvm.ppc.altivec.vextractqm
llvm.ppc.altivec.vextractwm
llvm.ppc.altivec.vextsb2d
llvm.ppc.altivec.vextsb2w
llvm.ppc.altivec.vextsd2q
llvm.ppc.altivec.vextsh2d
llvm.ppc.altivec.vextsh2w
llvm.ppc.altivec.vextsw2d
llvm.ppc.altivec.vgbbd
llvm.ppc.altivec.vgnb
llvm.ppc.altivec.vinsblx
llvm.ppc.altivec.vinsbrx
llvm.ppc.altivec.vinsbvlx
llvm.ppc.altivec.vinsbvrx
llvm.ppc.altivec.vinsd
llvm.ppc.altivec.vinsdlx
llvm.ppc.altivec.vinsdrx
llvm.ppc.altivec.vinshlx
llvm.ppc.altivec.vinshrx
llvm.ppc.altivec.vinshvlx
llvm.ppc.altivec.vinshvrx
llvm.ppc.altivec.vinsw
llvm.ppc.altivec.vinswlx
llvm.ppc.altivec.vinswrx
llvm.ppc.altivec.vinswvlx
llvm.ppc.altivec.vinswvrx
llvm.ppc.altivec.vlogefp
llvm.ppc.altivec.vmaddfp
llvm.ppc.altivec.vmaxfp
llvm.ppc.altivec.vmaxsb
llvm.ppc.altivec.vmaxsd
llvm.ppc.altivec.vmaxsh
llvm.ppc.altivec.vmaxsw
llvm.ppc.altivec.vmaxub
llvm.ppc.altivec.vmaxud
llvm.ppc.altivec.vmaxuh
llvm.ppc.altivec.vmaxuw
llvm.ppc.altivec.vmhaddshs
llvm.ppc.altivec.vmhraddshs
llvm.ppc.altivec.vminfp
llvm.ppc.altivec.vminsb
llvm.ppc.altivec.vminsd
llvm.ppc.altivec.vminsh
llvm.ppc.altivec.vminsw
llvm.ppc.altivec.vminub
llvm.ppc.altivec.vminud
llvm.ppc.altivec.vminuh
llvm.ppc.altivec.vminuw
llvm.ppc.altivec.vmladduhm
llvm.ppc.altivec.vmsumcud
llvm.ppc.altivec.vmsummbm
llvm.ppc.altivec.vmsumshm
llvm.ppc.altivec.vmsumshs
llvm.ppc.altivec.vmsumubm
llvm.ppc.altivec.vmsumudm
llvm.ppc.altivec.vmsumuhm
llvm.ppc.altivec.vmsumuhs
llvm.ppc.altivec.vmulesb
llvm.ppc.altivec.vmulesd
llvm.ppc.altivec.vmulesh
llvm.ppc.altivec.vmulesw
llvm.ppc.altivec.vmuleub
llvm.ppc.altivec.vmuleud
llvm.ppc.altivec.vmuleuh
llvm.ppc.altivec.vmuleuw
llvm.ppc.altivec.vmulhsd
llvm.ppc.altivec.vmulhsw
llvm.ppc.altivec.vmulhud
llvm.ppc.altivec.vmulhuw
llvm.ppc.altivec.vmulosb
llvm.ppc.altivec.vmulosd
llvm.ppc.altivec.vmulosh
llvm.ppc.altivec.vmulosw
llvm.ppc.altivec.vmuloub
llvm.ppc.altivec.vmuloud
llvm.ppc.altivec.vmulouh
llvm.ppc.altivec.vmulouw
llvm.ppc.altivec.vnmsubfp
llvm.ppc.altivec.vpdepd
llvm.ppc.altivec.vperm
llvm.ppc.altivec.vpextd
llvm.ppc.altivec.vpkpx
llvm.ppc.altivec.vpksdss
llvm.ppc.altivec.vpksdus
llvm.ppc.altivec.vpkshss
llvm.ppc.altivec.vpkshus
llvm.ppc.altivec.vpkswss
llvm.ppc.altivec.vpkswus
llvm.ppc.altivec.vpkudus
llvm.ppc.altivec.vpkuhus
llvm.ppc.altivec.vpkuwus
llvm.ppc.altivec.vprtybd
llvm.ppc.altivec.vprtybq
llvm.ppc.altivec.vprtybw
llvm.ppc.altivec.vrefp
llvm.ppc.altivec.vrfim
llvm.ppc.altivec.vrfin
llvm.ppc.altivec.vrfip
llvm.ppc.altivec.vrfiz
llvm.ppc.altivec.vrlb
llvm.ppc.altivec.vrld
llvm.ppc.altivec.vrldmi
llvm.ppc.altivec.vrldnm
llvm.ppc.altivec.vrlh
llvm.ppc.altivec.vrlqmi
llvm.ppc.altivec.vrlqnm
llvm.ppc.altivec.vrlw
llvm.ppc.altivec.vrlwmi
llvm.ppc.altivec.vrlwnm
llvm.ppc.altivec.vrsqrtefp
llvm.ppc.altivec.vsel
llvm.ppc.altivec.vsl
llvm.ppc.altivec.vslb
llvm.ppc.altivec.vsldbi
llvm.ppc.altivec.vslh
llvm.ppc.altivec.vslo
llvm.ppc.altivec.vslv
llvm.ppc.altivec.vslw
llvm.ppc.altivec.vsr
llvm.ppc.altivec.vsrab
llvm.ppc.altivec.vsrah
llvm.ppc.altivec.vsraw
llvm.ppc.altivec.vsrb
llvm.ppc.altivec.vsrdbi
llvm.ppc.altivec.vsrh
llvm.ppc.altivec.vsro
llvm.ppc.altivec.vsrv
llvm.ppc.altivec.vsrw
llvm.ppc.altivec.vstribl
llvm.ppc.altivec.vstribl.p
llvm.ppc.altivec.vstribr
llvm.ppc.altivec.vstribr.p
llvm.ppc.altivec.vstrihl
llvm.ppc.altivec.vstrihl.p
llvm.ppc.altivec.vstrihr
llvm.ppc.altivec.vstrihr.p
llvm.ppc.altivec.vsubcuq
llvm.ppc.altivec.vsubcuw
llvm.ppc.altivec.vsubecuq
llvm.ppc.altivec.vsubeuqm
llvm.ppc.altivec.vsubsbs
llvm.ppc.altivec.vsubshs
llvm.ppc.altivec.vsubsws
llvm.ppc.altivec.vsububs
llvm.ppc.altivec.vsubuhs
llvm.ppc.altivec.vsubuws
llvm.ppc.altivec.vsum2sws
llvm.ppc.altivec.vsum4sbs
llvm.ppc.altivec.vsum4shs
llvm.ppc.altivec.vsum4ubs
llvm.ppc.altivec.vsumsws
llvm.ppc.altivec.vupkhpx
llvm.ppc.altivec.vupkhsb
llvm.ppc.altivec.vupkhsh
llvm.ppc.altivec.vupkhsw
llvm.ppc.altivec.vupklpx
llvm.ppc.altivec.vupklsb
llvm.ppc.altivec.vupklsh
llvm.ppc.altivec.vupklsw
llvm.ppc.bpermd
llvm.ppc.cfence
llvm.ppc.cfuged
llvm.ppc.cntlzdm
llvm.ppc.cnttzdm
llvm.ppc.darn
llvm.ppc.darn32
llvm.ppc.darnraw
llvm.ppc.dcba
llvm.ppc.dcbf
llvm.ppc.dcbfl
llvm.ppc.dcbflp
llvm.ppc.dcbfps
llvm.ppc.dcbi
llvm.ppc.dcbst
llvm.ppc.dcbstps
llvm.ppc.dcbt
llvm.ppc.dcbt.with.hint
llvm.ppc.dcbtst
llvm.ppc.dcbtst.with.hint
llvm.ppc.dcbz
llvm.ppc.dcbzl
llvm.ppc.divde
llvm.ppc.divdeu
llvm.ppc.divf128.round.to.odd
llvm.ppc.divwe
llvm.ppc.divweu
llvm.ppc.eieio
llvm.ppc.fmaf128.round.to.odd
llvm.ppc.get.texasr
llvm.ppc.get.texasru
llvm.ppc.get.tfhar
llvm.ppc.get.tfiar
llvm.ppc.isync
llvm.ppc.lwsync
llvm.ppc.mma.assemble.acc
llvm.ppc.mma.disassemble.acc
llvm.ppc.mma.pmxvbf16ger2
llvm.ppc.mma.pmxvbf16ger2nn
llvm.ppc.mma.pmxvbf16ger2np
llvm.ppc.mma.pmxvbf16ger2pn
llvm.ppc.mma.pmxvbf16ger2pp
llvm.ppc.mma.pmxvf16ger2
llvm.ppc.mma.pmxvf16ger2nn
llvm.ppc.mma.pmxvf16ger2np
llvm.ppc.mma.pmxvf16ger2pn
llvm.ppc.mma.pmxvf16ger2pp
llvm.ppc.mma.pmxvf32ger
llvm.ppc.mma.pmxvf32gernn
llvm.ppc.mma.pmxvf32gernp
llvm.ppc.mma.pmxvf32gerpn
llvm.ppc.mma.pmxvf32gerpp
llvm.ppc.mma.pmxvf64ger
llvm.ppc.mma.pmxvf64gernn
llvm.ppc.mma.pmxvf64gernp
llvm.ppc.mma.pmxvf64gerpn
llvm.ppc.mma.pmxvf64gerpp
llvm.ppc.mma.pmxvi16ger2
llvm.ppc.mma.pmxvi16ger2pp
llvm.ppc.mma.pmxvi16ger2s
llvm.ppc.mma.pmxvi16ger2spp
llvm.ppc.mma.pmxvi4ger8
llvm.ppc.mma.pmxvi4ger8pp
llvm.ppc.mma.pmxvi8ger4
llvm.ppc.mma.pmxvi8ger4pp
llvm.ppc.mma.pmxvi8ger4spp
llvm.ppc.mma.xvbf16ger2
llvm.ppc.mma.xvbf16ger2nn
llvm.ppc.mma.xvbf16ger2np
llvm.ppc.mma.xvbf16ger2pn
llvm.ppc.mma.xvbf16ger2pp
llvm.ppc.mma.xvf16ger2
llvm.ppc.mma.xvf16ger2nn
llvm.ppc.mma.xvf16ger2np
llvm.ppc.mma.xvf16ger2pn
llvm.ppc.mma.xvf16ger2pp
llvm.ppc.mma.xvf32ger
llvm.ppc.mma.xvf32gernn
llvm.ppc.mma.xvf32gernp
llvm.ppc.mma.xvf32gerpn
llvm.ppc.mma.xvf32gerpp
llvm.ppc.mma.xvf64ger
llvm.ppc.mma.xvf64gernn
llvm.ppc.mma.xvf64gernp
llvm.ppc.mma.xvf64gerpn
llvm.ppc.mma.xvf64gerpp
llvm.ppc.mma.xvi16ger2
llvm.ppc.mma.xvi16ger2pp
llvm.ppc.mma.xvi16ger2s
llvm.ppc.mma.xvi16ger2spp
llvm.ppc.mma.xvi4ger8
llvm.ppc.mma.xvi4ger8pp
llvm.ppc.mma.xvi8ger4
llvm.ppc.mma.xvi8ger4pp
llvm.ppc.mma.xvi8ger4spp
llvm.ppc.mma.xxmfacc
llvm.ppc.mma.xxmtacc
llvm.ppc.mma.xxsetaccz
llvm.ppc.mulf128.round.to.odd
llvm.ppc.pdepd
llvm.ppc.pextd
llvm.ppc.popcntb
llvm.ppc.readflm
llvm.ppc.scalar.extract.expq
llvm.ppc.scalar.insert.exp.qp
llvm.ppc.set.texasr
llvm.ppc.set.texasru
llvm.ppc.set.tfhar
llvm.ppc.set.tfiar
llvm.ppc.setflm
llvm.ppc.setrnd
llvm.ppc.sqrtf128.round.to.odd
llvm.ppc.subf128.round.to.odd
llvm.ppc.sync
llvm.ppc.tabort
llvm.ppc.tabortdc
llvm.ppc.tabortdci
llvm.ppc.tabortwc
llvm.ppc.tabortwci
llvm.ppc.tbegin
llvm.ppc.tcheck
llvm.ppc.tend
llvm.ppc.tendall
llvm.ppc.trechkpt
llvm.ppc.treclaim
llvm.ppc.tresume
llvm.ppc.truncf128.round.to.odd
llvm.ppc.tsr
llvm.ppc.tsuspend
llvm.ppc.ttest
llvm.ppc.vsx.assemble.pair
llvm.ppc.vsx.disassemble.pair
llvm.ppc.vsx.lxvd2x
llvm.ppc.vsx.lxvd2x.be
llvm.ppc.vsx.lxvl
llvm.ppc.vsx.lxvll
llvm.ppc.vsx.lxvp
llvm.ppc.vsx.lxvw4x
llvm.ppc.vsx.lxvw4x.be
llvm.ppc.vsx.stxvd2x
llvm.ppc.vsx.stxvd2x.be
llvm.ppc.vsx.stxvl
llvm.ppc.vsx.stxvll
llvm.ppc.vsx.stxvp
llvm.ppc.vsx.stxvw4x
llvm.ppc.vsx.stxvw4x.be
llvm.ppc.vsx.xsmaxdp
llvm.ppc.vsx.xsmindp
llvm.ppc.vsx.xvcmpeqdp
llvm.ppc.vsx.xvcmpeqdp.p
llvm.ppc.vsx.xvcmpeqsp
llvm.ppc.vsx.xvcmpeqsp.p
llvm.ppc.vsx.xvcmpgedp
llvm.ppc.vsx.xvcmpgedp.p
llvm.ppc.vsx.xvcmpgesp
llvm.ppc.vsx.xvcmpgesp.p
llvm.ppc.vsx.xvcmpgtdp
llvm.ppc.vsx.xvcmpgtdp.p
llvm.ppc.vsx.xvcmpgtsp
llvm.ppc.vsx.xvcmpgtsp.p
llvm.ppc.vsx.xvcvbf16spn
llvm.ppc.vsx.xvcvdpsp
llvm.ppc.vsx.xvcvdpsxws
llvm.ppc.vsx.xvcvdpuxws
llvm.ppc.vsx.xvcvhpsp
llvm.ppc.vsx.xvcvspbf16
llvm.ppc.vsx.xvcvspdp
llvm.ppc.vsx.xvcvsphp
llvm.ppc.vsx.xvcvsxdsp
llvm.ppc.vsx.xvcvsxwdp
llvm.ppc.vsx.xvcvuxdsp
llvm.ppc.vsx.xvcvuxwdp
llvm.ppc.vsx.xvdivdp
llvm.ppc.vsx.xvdivsp
llvm.ppc.vsx.xviexpdp
llvm.ppc.vsx.xviexpsp
llvm.ppc.vsx.xvmaxdp
llvm.ppc.vsx.xvmaxsp
llvm.ppc.vsx.xvmindp
llvm.ppc.vsx.xvminsp
llvm.ppc.vsx.xvrdpip
llvm.ppc.vsx.xvredp
llvm.ppc.vsx.xvresp
llvm.ppc.vsx.xvrspip
llvm.ppc.vsx.xvrsqrtedp
llvm.ppc.vsx.xvrsqrtesp
llvm.ppc.vsx.xvtdivdp
llvm.ppc.vsx.xvtdivsp
llvm.ppc.vsx.xvtlsbb
llvm.ppc.vsx.xvtsqrtdp
llvm.ppc.vsx.xvtsqrtsp
llvm.ppc.vsx.xvtstdcdp
llvm.ppc.vsx.xvtstdcsp
llvm.ppc.vsx.xvxexpdp
llvm.ppc.vsx.xvxexpsp
llvm.ppc.vsx.xvxsigdp
llvm.ppc.vsx.xvxsigsp
llvm.ppc.vsx.xxblendvb
llvm.ppc.vsx.xxblendvd
llvm.ppc.vsx.xxblendvh
llvm.ppc.vsx.xxblendvw
llvm.ppc.vsx.xxeval
llvm.ppc.vsx.xxextractuw
llvm.ppc.vsx.xxgenpcvbm
llvm.ppc.vsx.xxgenpcvdm
llvm.ppc.vsx.xxgenpcvhm
llvm.ppc.vsx.xxgenpcvwm
llvm.ppc.vsx.xxinsertw
llvm.ppc.vsx.xxleqv
llvm.ppc.vsx.xxpermx
llvm.r600.cube
llvm.r600.ddx
llvm.r600.ddy
llvm.r600.dot4
llvm.r600.group.barrier
llvm.r600.implicitarg.ptr
llvm.r600.kill
llvm.r600.rat.store.typed
llvm.r600.read.global.size.x
llvm.r600.read.global.size.y
llvm.r600.read.global.size.z
llvm.r600.read.local.size.x
llvm.r600.read.local.size.y
llvm.r600.read.local.size.z
llvm.r600.read.ngroups.x
llvm.r600.read.ngroups.y
llvm.r600.read.ngroups.z
llvm.r600.read.tgid.x
llvm.r600.read.tgid.y
llvm.r600.read.tgid.z
llvm.r600.read.tidig.x
llvm.r600.read.tidig.y
llvm.r600.read.tidig.z
llvm.r600.recipsqrt.clamped
llvm.r600.recipsqrt.ieee
llvm.r600.store.stream.output
llvm.r600.store.swizzle
llvm.r600.tex
llvm.r600.texc
llvm.r600.txb
llvm.r600.txbc
llvm.r600.txf
llvm.r600.txl
llvm.r600.txlc
llvm.r600.txq
llvm.riscv.masked.atomicrmw.add.i32
llvm.riscv.masked.atomicrmw.add.i64
llvm.riscv.masked.atomicrmw.max.i32
llvm.riscv.masked.atomicrmw.max.i64
llvm.riscv.masked.atomicrmw.min.i32
llvm.riscv.masked.atomicrmw.min.i64
llvm.riscv.masked.atomicrmw.nand.i32
llvm.riscv.masked.atomicrmw.nand.i64
llvm.riscv.masked.atomicrmw.sub.i32
llvm.riscv.masked.atomicrmw.sub.i64
llvm.riscv.masked.atomicrmw.umax.i32
llvm.riscv.masked.atomicrmw.umax.i64
llvm.riscv.masked.atomicrmw.umin.i32
llvm.riscv.masked.atomicrmw.umin.i64
llvm.riscv.masked.atomicrmw.xchg.i32
llvm.riscv.masked.atomicrmw.xchg.i64
llvm.riscv.masked.cmpxchg.i32
llvm.riscv.masked.cmpxchg.i64
llvm.riscv.vaadd
llvm.riscv.vaadd.mask
llvm.riscv.vaaddu
llvm.riscv.vaaddu.mask
llvm.riscv.vadc
llvm.riscv.vadd
llvm.riscv.vadd.mask
llvm.riscv.vand
llvm.riscv.vand.mask
llvm.riscv.vasub
llvm.riscv.vasub.mask
llvm.riscv.vasubu
llvm.riscv.vasubu.mask
llvm.riscv.vcompress.mask
llvm.riscv.vdiv
llvm.riscv.vdiv.mask
llvm.riscv.vdivu
llvm.riscv.vdivu.mask
llvm.riscv.vfadd
llvm.riscv.vfadd.mask
llvm.riscv.vfcvt.f.x.v
llvm.riscv.vfcvt.f.x.v.mask
llvm.riscv.vfcvt.f.xu.v
llvm.riscv.vfcvt.f.xu.v.mask
llvm.riscv.vfcvt.rtz.x.f.v
llvm.riscv.vfcvt.rtz.x.f.v.mask
llvm.riscv.vfcvt.rtz.xu.f.v
llvm.riscv.vfcvt.rtz.xu.f.v.mask
llvm.riscv.vfcvt.x.f.v
llvm.riscv.vfcvt.x.f.v.mask
llvm.riscv.vfcvt.xu.f.v
llvm.riscv.vfcvt.xu.f.v.mask
llvm.riscv.vfdiv
llvm.riscv.vfdiv.mask
llvm.riscv.vfirst
llvm.riscv.vfirst.mask
llvm.riscv.vfmacc
llvm.riscv.vfmacc.mask
llvm.riscv.vfmadd
llvm.riscv.vfmadd.mask
llvm.riscv.vfmax
llvm.riscv.vfmax.mask
llvm.riscv.vfmerge
llvm.riscv.vfmin
llvm.riscv.vfmin.mask
llvm.riscv.vfmsac
llvm.riscv.vfmsac.mask
llvm.riscv.vfmsub
llvm.riscv.vfmsub.mask
llvm.riscv.vfmul
llvm.riscv.vfmul.mask
llvm.riscv.vfmv.f.s
llvm.riscv.vfmv.s.f
llvm.riscv.vfmv.v.f
llvm.riscv.vfncvt.f.f.w
llvm.riscv.vfncvt.f.f.w.mask
llvm.riscv.vfncvt.f.x.w
llvm.riscv.vfncvt.f.x.w.mask
llvm.riscv.vfncvt.f.xu.w
llvm.riscv.vfncvt.f.xu.w.mask
llvm.riscv.vfncvt.rod.f.f.w
llvm.riscv.vfncvt.rod.f.f.w.mask
llvm.riscv.vfncvt.rtz.x.f.w
llvm.riscv.vfncvt.rtz.x.f.w.mask
llvm.riscv.vfncvt.rtz.xu.f.w
llvm.riscv.vfncvt.rtz.xu.f.w.mask
llvm.riscv.vfncvt.x.f.w
llvm.riscv.vfncvt.x.f.w.mask
llvm.riscv.vfncvt.xu.f.w
llvm.riscv.vfncvt.xu.f.w.mask
llvm.riscv.vfnmacc
llvm.riscv.vfnmacc.mask
llvm.riscv.vfnmadd
llvm.riscv.vfnmadd.mask
llvm.riscv.vfnmsac
llvm.riscv.vfnmsac.mask
llvm.riscv.vfnmsub
llvm.riscv.vfnmsub.mask
llvm.riscv.vfrdiv
llvm.riscv.vfrdiv.mask
llvm.riscv.vfredmax
llvm.riscv.vfredmax.mask
llvm.riscv.vfredmin
llvm.riscv.vfredmin.mask
llvm.riscv.vfredosum
llvm.riscv.vfredosum.mask
llvm.riscv.vfredsum
llvm.riscv.vfredsum.mask
llvm.riscv.vfrsub
llvm.riscv.vfrsub.mask
llvm.riscv.vfsgnj
llvm.riscv.vfsgnj.mask
llvm.riscv.vfsgnjn
llvm.riscv.vfsgnjn.mask
llvm.riscv.vfsgnjx
llvm.riscv.vfsgnjx.mask
llvm.riscv.vfslide1down
llvm.riscv.vfslide1down.mask
llvm.riscv.vfslide1up
llvm.riscv.vfslide1up.mask
llvm.riscv.vfsub
llvm.riscv.vfsub.mask
llvm.riscv.vfwadd
llvm.riscv.vfwadd.mask
llvm.riscv.vfwadd.w
llvm.riscv.vfwadd.w.mask
llvm.riscv.vfwcvt.f.f.v
llvm.riscv.vfwcvt.f.f.v.mask
llvm.riscv.vfwcvt.f.x.v
llvm.riscv.vfwcvt.f.x.v.mask
llvm.riscv.vfwcvt.f.xu.v
llvm.riscv.vfwcvt.f.xu.v.mask
llvm.riscv.vfwcvt.rtz.x.f.v
llvm.riscv.vfwcvt.rtz.x.f.v.mask
llvm.riscv.vfwcvt.rtz.xu.f.v
llvm.riscv.vfwcvt.rtz.xu.f.v.mask
llvm.riscv.vfwcvt.x.f.v
llvm.riscv.vfwcvt.x.f.v.mask
llvm.riscv.vfwcvt.xu.f.v
llvm.riscv.vfwcvt.xu.f.v.mask
llvm.riscv.vfwmacc
llvm.riscv.vfwmacc.mask
llvm.riscv.vfwmsac
llvm.riscv.vfwmsac.mask
llvm.riscv.vfwmul
llvm.riscv.vfwmul.mask
llvm.riscv.vfwnmacc
llvm.riscv.vfwnmacc.mask
llvm.riscv.vfwnmsac
llvm.riscv.vfwnmsac.mask
llvm.riscv.vfwredosum
llvm.riscv.vfwredosum.mask
llvm.riscv.vfwredsum
llvm.riscv.vfwredsum.mask
llvm.riscv.vfwsub
llvm.riscv.vfwsub.mask
llvm.riscv.vfwsub.w
llvm.riscv.vfwsub.w.mask
llvm.riscv.vid
llvm.riscv.vid.mask
llvm.riscv.viota
llvm.riscv.viota.mask
llvm.riscv.vle
llvm.riscv.vle.mask
llvm.riscv.vleff
llvm.riscv.vleff.mask
llvm.riscv.vlse
llvm.riscv.vlse.mask
llvm.riscv.vlxe
llvm.riscv.vlxe.mask
llvm.riscv.vmacc
llvm.riscv.vmacc.mask
llvm.riscv.vmadc
llvm.riscv.vmadc.carry.in
llvm.riscv.vmadd
llvm.riscv.vmadd.mask
llvm.riscv.vmand
llvm.riscv.vmandnot
llvm.riscv.vmax
llvm.riscv.vmax.mask
llvm.riscv.vmaxu
llvm.riscv.vmaxu.mask
llvm.riscv.vmclr
llvm.riscv.vmerge
llvm.riscv.vmfeq
llvm.riscv.vmfeq.mask
llvm.riscv.vmfge
llvm.riscv.vmfge.mask
llvm.riscv.vmfgt
llvm.riscv.vmfgt.mask
llvm.riscv.vmfle
llvm.riscv.vmfle.mask
llvm.riscv.vmflt
llvm.riscv.vmflt.mask
llvm.riscv.vmfne
llvm.riscv.vmfne.mask
llvm.riscv.vmin
llvm.riscv.vmin.mask
llvm.riscv.vminu
llvm.riscv.vminu.mask
llvm.riscv.vmnand
llvm.riscv.vmnor
llvm.riscv.vmor
llvm.riscv.vmornot
llvm.riscv.vmsbc
llvm.riscv.vmsbc.borrow.in
llvm.riscv.vmsbf
llvm.riscv.vmsbf.mask
llvm.riscv.vmseq
llvm.riscv.vmseq.mask
llvm.riscv.vmset
llvm.riscv.vmsgt
llvm.riscv.vmsgt.mask
llvm.riscv.vmsgtu
llvm.riscv.vmsgtu.mask
llvm.riscv.vmsif
llvm.riscv.vmsif.mask
llvm.riscv.vmsle
llvm.riscv.vmsle.mask
llvm.riscv.vmsleu
llvm.riscv.vmsleu.mask
llvm.riscv.vmslt
llvm.riscv.vmslt.mask
llvm.riscv.vmsltu
llvm.riscv.vmsltu.mask
llvm.riscv.vmsne
llvm.riscv.vmsne.mask
llvm.riscv.vmsof
llvm.riscv.vmsof.mask
llvm.riscv.vmul
llvm.riscv.vmul.mask
llvm.riscv.vmulh
llvm.riscv.vmulh.mask
llvm.riscv.vmulhsu
llvm.riscv.vmulhsu.mask
llvm.riscv.vmulhu
llvm.riscv.vmulhu.mask
llvm.riscv.vmv.s.x
llvm.riscv.vmv.v.v
llvm.riscv.vmv.v.x
llvm.riscv.vmv.x.s
llvm.riscv.vmxnor
llvm.riscv.vmxor
llvm.riscv.vnclip
llvm.riscv.vnclip.mask
llvm.riscv.vnclipu
llvm.riscv.vnclipu.mask
llvm.riscv.vnmsac
llvm.riscv.vnmsac.mask
llvm.riscv.vnmsub
llvm.riscv.vnmsub.mask
llvm.riscv.vnsra
llvm.riscv.vnsra.mask
llvm.riscv.vnsrl
llvm.riscv.vnsrl.mask
llvm.riscv.vor
llvm.riscv.vor.mask
llvm.riscv.vpopc
llvm.riscv.vpopc.mask
llvm.riscv.vredand
llvm.riscv.vredand.mask
llvm.riscv.vredmax
llvm.riscv.vredmax.mask
llvm.riscv.vredmaxu
llvm.riscv.vredmaxu.mask
llvm.riscv.vredmin
llvm.riscv.vredmin.mask
llvm.riscv.vredminu
llvm.riscv.vredminu.mask
llvm.riscv.vredor
llvm.riscv.vredor.mask
llvm.riscv.vredsum
llvm.riscv.vredsum.mask
llvm.riscv.vredxor
llvm.riscv.vredxor.mask
llvm.riscv.vrem
llvm.riscv.vrem.mask
llvm.riscv.vremu
llvm.riscv.vremu.mask
llvm.riscv.vrgather
llvm.riscv.vrgather.mask
llvm.riscv.vrsub
llvm.riscv.vrsub.mask
llvm.riscv.vsadd
llvm.riscv.vsadd.mask
llvm.riscv.vsaddu
llvm.riscv.vsaddu.mask
llvm.riscv.vsbc
llvm.riscv.vse
llvm.riscv.vse.mask
llvm.riscv.vsetvli
llvm.riscv.vsetvlimax
llvm.riscv.vsext
llvm.riscv.vsext.mask
llvm.riscv.vslide1down
llvm.riscv.vslide1down.mask
llvm.riscv.vslide1up
llvm.riscv.vslide1up.mask
llvm.riscv.vslidedown
llvm.riscv.vslidedown.mask
llvm.riscv.vslideup
llvm.riscv.vslideup.mask
llvm.riscv.vsll
llvm.riscv.vsll.mask
llvm.riscv.vsmul
llvm.riscv.vsmul.mask
llvm.riscv.vsra
llvm.riscv.vsra.mask
llvm.riscv.vsrl
llvm.riscv.vsrl.mask
llvm.riscv.vsse
llvm.riscv.vsse.mask
llvm.riscv.vssra
llvm.riscv.vssra.mask
llvm.riscv.vssrl
llvm.riscv.vssrl.mask
llvm.riscv.vssub
llvm.riscv.vssub.mask
llvm.riscv.vssubu
llvm.riscv.vssubu.mask
llvm.riscv.vsub
llvm.riscv.vsub.mask
llvm.riscv.vsuxe
llvm.riscv.vsuxe.mask
llvm.riscv.vsxe
llvm.riscv.vsxe.mask
llvm.riscv.vwadd
llvm.riscv.vwadd.mask
llvm.riscv.vwadd.w
llvm.riscv.vwadd.w.mask
llvm.riscv.vwaddu
llvm.riscv.vwaddu.mask
llvm.riscv.vwaddu.w
llvm.riscv.vwaddu.w.mask
llvm.riscv.vwmacc
llvm.riscv.vwmacc.mask
llvm.riscv.vwmaccsu
llvm.riscv.vwmaccsu.mask
llvm.riscv.vwmaccu
llvm.riscv.vwmaccu.mask
llvm.riscv.vwmaccus
llvm.riscv.vwmaccus.mask
llvm.riscv.vwmul
llvm.riscv.vwmul.mask
llvm.riscv.vwmulsu
llvm.riscv.vwmulsu.mask
llvm.riscv.vwmulu
llvm.riscv.vwmulu.mask
llvm.riscv.vwredsum
llvm.riscv.vwredsum.mask
llvm.riscv.vwredsumu
llvm.riscv.vwredsumu.mask
llvm.riscv.vwsub
llvm.riscv.vwsub.mask
llvm.riscv.vwsub.w
llvm.riscv.vwsub.w.mask
llvm.riscv.vwsubu
llvm.riscv.vwsubu.mask
llvm.riscv.vwsubu.w
llvm.riscv.vwsubu.w.mask
llvm.riscv.vxor
llvm.riscv.vxor.mask
llvm.riscv.vzext
llvm.riscv.vzext.mask
llvm.s390.efpc
llvm.s390.etnd
llvm.s390.lcbb
llvm.s390.ntstg
llvm.s390.ppa.txassist
llvm.s390.sfpc
llvm.s390.tabort
llvm.s390.tbegin
llvm.s390.tbegin.nofloat
llvm.s390.tbeginc
llvm.s390.tdc
llvm.s390.tend
llvm.s390.vaccb
llvm.s390.vacccq
llvm.s390.vaccf
llvm.s390.vaccg
llvm.s390.vacch
llvm.s390.vaccq
llvm.s390.vacq
llvm.s390.vaq
llvm.s390.vavgb
llvm.s390.vavgf
llvm.s390.vavgg
llvm.s390.vavgh
llvm.s390.vavglb
llvm.s390.vavglf
llvm.s390.vavglg
llvm.s390.vavglh
llvm.s390.vbperm
llvm.s390.vceqbs
llvm.s390.vceqfs
llvm.s390.vceqgs
llvm.s390.vceqhs
llvm.s390.vchbs
llvm.s390.vchfs
llvm.s390.vchgs
llvm.s390.vchhs
llvm.s390.vchlbs
llvm.s390.vchlfs
llvm.s390.vchlgs
llvm.s390.vchlhs
llvm.s390.vcksm
llvm.s390.verimb
llvm.s390.verimf
llvm.s390.verimg
llvm.s390.verimh
llvm.s390.verllb
llvm.s390.verllf
llvm.s390.verllg
llvm.s390.verllh
llvm.s390.verllvb
llvm.s390.verllvf
llvm.s390.verllvg
llvm.s390.verllvh
llvm.s390.vfaeb
llvm.s390.vfaebs
llvm.s390.vfaef
llvm.s390.vfaefs
llvm.s390.vfaeh
llvm.s390.vfaehs
llvm.s390.vfaezb
llvm.s390.vfaezbs
llvm.s390.vfaezf
llvm.s390.vfaezfs
llvm.s390.vfaezh
llvm.s390.vfaezhs
llvm.s390.vfcedbs
llvm.s390.vfcesbs
llvm.s390.vfchdbs
llvm.s390.vfchedbs
llvm.s390.vfchesbs
llvm.s390.vfchsbs
llvm.s390.vfeeb
llvm.s390.vfeebs
llvm.s390.vfeef
llvm.s390.vfeefs
llvm.s390.vfeeh
llvm.s390.vfeehs
llvm.s390.vfeezb
llvm.s390.vfeezbs
llvm.s390.vfeezf
llvm.s390.vfeezfs
llvm.s390.vfeezh
llvm.s390.vfeezhs
llvm.s390.vfeneb
llvm.s390.vfenebs
llvm.s390.vfenef
llvm.s390.vfenefs
llvm.s390.vfeneh
llvm.s390.vfenehs
llvm.s390.vfenezb
llvm.s390.vfenezbs
llvm.s390.vfenezf
llvm.s390.vfenezfs
llvm.s390.vfenezh
llvm.s390.vfenezhs
llvm.s390.vfidb
llvm.s390.vfisb
llvm.s390.vfmaxdb
llvm.s390.vfmaxsb
llvm.s390.vfmindb
llvm.s390.vfminsb
llvm.s390.vftcidb
llvm.s390.vftcisb
llvm.s390.vgfmab
llvm.s390.vgfmaf
llvm.s390.vgfmag
llvm.s390.vgfmah
llvm.s390.vgfmb
llvm.s390.vgfmf
llvm.s390.vgfmg
llvm.s390.vgfmh
llvm.s390.vistrb
llvm.s390.vistrbs
llvm.s390.vistrf
llvm.s390.vistrfs
llvm.s390.vistrh
llvm.s390.vistrhs
llvm.s390.vlbb
llvm.s390.vll
llvm.s390.vlrl
llvm.s390.vmaeb
llvm.s390.vmaef
llvm.s390.vmaeh
llvm.s390.vmahb
llvm.s390.vmahf
llvm.s390.vmahh
llvm.s390.vmaleb
llvm.s390.vmalef
llvm.s390.vmaleh
llvm.s390.vmalhb
llvm.s390.vmalhf
llvm.s390.vmalhh
llvm.s390.vmalob
llvm.s390.vmalof
llvm.s390.vmaloh
llvm.s390.vmaob
llvm.s390.vmaof
llvm.s390.vmaoh
llvm.s390.vmeb
llvm.s390.vmef
llvm.s390.vmeh
llvm.s390.vmhb
llvm.s390.vmhf
llvm.s390.vmhh
llvm.s390.vmleb
llvm.s390.vmlef
llvm.s390.vmleh
llvm.s390.vmlhb
llvm.s390.vmlhf
llvm.s390.vmlhh
llvm.s390.vmlob
llvm.s390.vmlof
llvm.s390.vmloh
llvm.s390.vmob
llvm.s390.vmof
llvm.s390.vmoh
llvm.s390.vmslg
llvm.s390.vpdi
llvm.s390.vperm
llvm.s390.vpklsf
llvm.s390.vpklsfs
llvm.s390.vpklsg
llvm.s390.vpklsgs
llvm.s390.vpklsh
llvm.s390.vpklshs
llvm.s390.vpksf
llvm.s390.vpksfs
llvm.s390.vpksg
llvm.s390.vpksgs
llvm.s390.vpksh
llvm.s390.vpkshs
llvm.s390.vsbcbiq
llvm.s390.vsbiq
llvm.s390.vscbib
llvm.s390.vscbif
llvm.s390.vscbig
llvm.s390.vscbih
llvm.s390.vscbiq
llvm.s390.vsl
llvm.s390.vslb
llvm.s390.vsld
llvm.s390.vsldb
llvm.s390.vsq
llvm.s390.vsra
llvm.s390.vsrab
llvm.s390.vsrd
llvm.s390.vsrl
llvm.s390.vsrlb
llvm.s390.vstl
llvm.s390.vstrcb
llvm.s390.vstrcbs
llvm.s390.vstrcf
llvm.s390.vstrcfs
llvm.s390.vstrch
llvm.s390.vstrchs
llvm.s390.vstrczb
llvm.s390.vstrczbs
llvm.s390.vstrczf
llvm.s390.vstrczfs
llvm.s390.vstrczh
llvm.s390.vstrczhs
llvm.s390.vstrl
llvm.s390.vstrsb
llvm.s390.vstrsf
llvm.s390.vstrsh
llvm.s390.vstrszb
llvm.s390.vstrszf
llvm.s390.vstrszh
llvm.s390.vsumb
llvm.s390.vsumgf
llvm.s390.vsumgh
llvm.s390.vsumh
llvm.s390.vsumqf
llvm.s390.vsumqg
llvm.s390.vtm
llvm.s390.vuphb
llvm.s390.vuphf
llvm.s390.vuphh
llvm.s390.vuplb
llvm.s390.vuplf
llvm.s390.vuplhb
llvm.s390.vuplhf
llvm.s390.vuplhh
llvm.s390.vuplhw
llvm.s390.vupllb
llvm.s390.vupllf
llvm.s390.vupllh
llvm.ve.vl.andm.MMM
llvm.ve.vl.andm.mmm
llvm.ve.vl.eqvm.MMM
llvm.ve.vl.eqvm.mmm
llvm.ve.vl.lsv.vvss
llvm.ve.vl.lvm.MMss
llvm.ve.vl.lvm.mmss
llvm.ve.vl.lvsd.svs
llvm.ve.vl.lvsl.svs
llvm.ve.vl.lvss.svs
llvm.ve.vl.lzvm.sml
llvm.ve.vl.negm.MM
llvm.ve.vl.negm.mm
llvm.ve.vl.nndm.MMM
llvm.ve.vl.nndm.mmm
llvm.ve.vl.orm.MMM
llvm.ve.vl.orm.mmm
llvm.ve.vl.pcvm.sml
llvm.ve.vl.pfchv.ssl
llvm.ve.vl.pfchvnc.ssl
llvm.ve.vl.pvadds.vsvMvl
llvm.ve.vl.pvadds.vsvl
llvm.ve.vl.pvadds.vsvvl
llvm.ve.vl.pvadds.vvvMvl
llvm.ve.vl.pvadds.vvvl
llvm.ve.vl.pvadds.vvvvl
llvm.ve.vl.pvaddu.vsvMvl
llvm.ve.vl.pvaddu.vsvl
llvm.ve.vl.pvaddu.vsvvl
llvm.ve.vl.pvaddu.vvvMvl
llvm.ve.vl.pvaddu.vvvl
llvm.ve.vl.pvaddu.vvvvl
llvm.ve.vl.pvand.vsvMvl
llvm.ve.vl.pvand.vsvl
llvm.ve.vl.pvand.vsvvl
llvm.ve.vl.pvand.vvvMvl
llvm.ve.vl.pvand.vvvl
llvm.ve.vl.pvand.vvvvl
llvm.ve.vl.pvbrd.vsMvl
llvm.ve.vl.pvbrd.vsl
llvm.ve.vl.pvbrd.vsvl
llvm.ve.vl.pvcmps.vsvMvl
llvm.ve.vl.pvcmps.vsvl
llvm.ve.vl.pvcmps.vsvvl
llvm.ve.vl.pvcmps.vvvMvl
llvm.ve.vl.pvcmps.vvvl
llvm.ve.vl.pvcmps.vvvvl
llvm.ve.vl.pvcmpu.vsvMvl
llvm.ve.vl.pvcmpu.vsvl
llvm.ve.vl.pvcmpu.vsvvl
llvm.ve.vl.pvcmpu.vvvMvl
llvm.ve.vl.pvcmpu.vvvl
llvm.ve.vl.pvcmpu.vvvvl
llvm.ve.vl.pvcvtsw.vvl
llvm.ve.vl.pvcvtsw.vvvl
llvm.ve.vl.pvcvtws.vvMvl
llvm.ve.vl.pvcvtws.vvl
llvm.ve.vl.pvcvtws.vvvl
llvm.ve.vl.pvcvtwsrz.vvMvl
llvm.ve.vl.pvcvtwsrz.vvl
llvm.ve.vl.pvcvtwsrz.vvvl
llvm.ve.vl.pveqv.vsvMvl
llvm.ve.vl.pveqv.vsvl
llvm.ve.vl.pveqv.vsvvl
llvm.ve.vl.pveqv.vvvMvl
llvm.ve.vl.pveqv.vvvl
llvm.ve.vl.pveqv.vvvvl
llvm.ve.vl.pvfadd.vsvMvl
llvm.ve.vl.pvfadd.vsvl
llvm.ve.vl.pvfadd.vsvvl
llvm.ve.vl.pvfadd.vvvMvl
llvm.ve.vl.pvfadd.vvvl
llvm.ve.vl.pvfadd.vvvvl
llvm.ve.vl.pvfcmp.vsvMvl
llvm.ve.vl.pvfcmp.vsvl
llvm.ve.vl.pvfcmp.vsvvl
llvm.ve.vl.pvfcmp.vvvMvl
llvm.ve.vl.pvfcmp.vvvl
llvm.ve.vl.pvfcmp.vvvvl
llvm.ve.vl.pvfmad.vsvvMvl
llvm.ve.vl.pvfmad.vsvvl
llvm.ve.vl.pvfmad.vsvvvl
llvm.ve.vl.pvfmad.vvsvMvl
llvm.ve.vl.pvfmad.vvsvl
llvm.ve.vl.pvfmad.vvsvvl
llvm.ve.vl.pvfmad.vvvvMvl
llvm.ve.vl.pvfmad.vvvvl
llvm.ve.vl.pvfmad.vvvvvl
llvm.ve.vl.pvfmax.vsvMvl
llvm.ve.vl.pvfmax.vsvl
llvm.ve.vl.pvfmax.vsvvl
llvm.ve.vl.pvfmax.vvvMvl
llvm.ve.vl.pvfmax.vvvl
llvm.ve.vl.pvfmax.vvvvl
llvm.ve.vl.pvfmin.vsvMvl
llvm.ve.vl.pvfmin.vsvl
llvm.ve.vl.pvfmin.vsvvl
llvm.ve.vl.pvfmin.vvvMvl
llvm.ve.vl.pvfmin.vvvl
llvm.ve.vl.pvfmin.vvvvl
llvm.ve.vl.pvfmkaf.Ml
llvm.ve.vl.pvfmkat.Ml
llvm.ve.vl.pvfmkseq.MvMl
llvm.ve.vl.pvfmkseq.Mvl
llvm.ve.vl.pvfmkseqnan.MvMl
llvm.ve.vl.pvfmkseqnan.Mvl
llvm.ve.vl.pvfmksge.MvMl
llvm.ve.vl.pvfmksge.Mvl
llvm.ve.vl.pvfmksgenan.MvMl
llvm.ve.vl.pvfmksgenan.Mvl
llvm.ve.vl.pvfmksgt.MvMl
llvm.ve.vl.pvfmksgt.Mvl
llvm.ve.vl.pvfmksgtnan.MvMl
llvm.ve.vl.pvfmksgtnan.Mvl
llvm.ve.vl.pvfmksle.MvMl
llvm.ve.vl.pvfmksle.Mvl
llvm.ve.vl.pvfmkslenan.MvMl
llvm.ve.vl.pvfmkslenan.Mvl
llvm.ve.vl.pvfmksloeq.mvl
llvm.ve.vl.pvfmksloeq.mvml
llvm.ve.vl.pvfmksloeqnan.mvl
llvm.ve.vl.pvfmksloeqnan.mvml
llvm.ve.vl.pvfmksloge.mvl
llvm.ve.vl.pvfmksloge.mvml
llvm.ve.vl.pvfmkslogenan.mvl
llvm.ve.vl.pvfmkslogenan.mvml
llvm.ve.vl.pvfmkslogt.mvl
llvm.ve.vl.pvfmkslogt.mvml
llvm.ve.vl.pvfmkslogtnan.mvl
llvm.ve.vl.pvfmkslogtnan.mvml
llvm.ve.vl.pvfmkslole.mvl
llvm.ve.vl.pvfmkslole.mvml
llvm.ve.vl.pvfmkslolenan.mvl
llvm.ve.vl.pvfmkslolenan.mvml
llvm.ve.vl.pvfmkslolt.mvl
llvm.ve.vl.pvfmkslolt.mvml
llvm.ve.vl.pvfmksloltnan.mvl
llvm.ve.vl.pvfmksloltnan.mvml
llvm.ve.vl.pvfmkslonan.mvl
llvm.ve.vl.pvfmkslonan.mvml
llvm.ve.vl.pvfmkslone.mvl
llvm.ve.vl.pvfmkslone.mvml
llvm.ve.vl.pvfmkslonenan.mvl
llvm.ve.vl.pvfmkslonenan.mvml
llvm.ve.vl.pvfmkslonum.mvl
llvm.ve.vl.pvfmkslonum.mvml
llvm.ve.vl.pvfmkslt.MvMl
llvm.ve.vl.pvfmkslt.Mvl
llvm.ve.vl.pvfmksltnan.MvMl
llvm.ve.vl.pvfmksltnan.Mvl
llvm.ve.vl.pvfmksnan.MvMl
llvm.ve.vl.pvfmksnan.Mvl
llvm.ve.vl.pvfmksne.MvMl
llvm.ve.vl.pvfmksne.Mvl
llvm.ve.vl.pvfmksnenan.MvMl
llvm.ve.vl.pvfmksnenan.Mvl
llvm.ve.vl.pvfmksnum.MvMl
llvm.ve.vl.pvfmksnum.Mvl
llvm.ve.vl.pvfmksupeq.mvl
llvm.ve.vl.pvfmksupeq.mvml
llvm.ve.vl.pvfmksupeqnan.mvl
llvm.ve.vl.pvfmksupeqnan.mvml
llvm.ve.vl.pvfmksupge.mvl
llvm.ve.vl.pvfmksupge.mvml
llvm.ve.vl.pvfmksupgenan.mvl
llvm.ve.vl.pvfmksupgenan.mvml
llvm.ve.vl.pvfmksupgt.mvl
llvm.ve.vl.pvfmksupgt.mvml
llvm.ve.vl.pvfmksupgtnan.mvl
llvm.ve.vl.pvfmksupgtnan.mvml
llvm.ve.vl.pvfmksuple.mvl
llvm.ve.vl.pvfmksuple.mvml
llvm.ve.vl.pvfmksuplenan.mvl
llvm.ve.vl.pvfmksuplenan.mvml
llvm.ve.vl.pvfmksuplt.mvl
llvm.ve.vl.pvfmksuplt.mvml
llvm.ve.vl.pvfmksupltnan.mvl
llvm.ve.vl.pvfmksupltnan.mvml
llvm.ve.vl.pvfmksupnan.mvl
llvm.ve.vl.pvfmksupnan.mvml
llvm.ve.vl.pvfmksupne.mvl
llvm.ve.vl.pvfmksupne.mvml
llvm.ve.vl.pvfmksupnenan.mvl
llvm.ve.vl.pvfmksupnenan.mvml
llvm.ve.vl.pvfmksupnum.mvl
llvm.ve.vl.pvfmksupnum.mvml
llvm.ve.vl.pvfmkweq.MvMl
llvm.ve.vl.pvfmkweq.Mvl
llvm.ve.vl.pvfmkweqnan.MvMl
llvm.ve.vl.pvfmkweqnan.Mvl
llvm.ve.vl.pvfmkwge.MvMl
llvm.ve.vl.pvfmkwge.Mvl
llvm.ve.vl.pvfmkwgenan.MvMl
llvm.ve.vl.pvfmkwgenan.Mvl
llvm.ve.vl.pvfmkwgt.MvMl
llvm.ve.vl.pvfmkwgt.Mvl
llvm.ve.vl.pvfmkwgtnan.MvMl
llvm.ve.vl.pvfmkwgtnan.Mvl
llvm.ve.vl.pvfmkwle.MvMl
llvm.ve.vl.pvfmkwle.Mvl
llvm.ve.vl.pvfmkwlenan.MvMl
llvm.ve.vl.pvfmkwlenan.Mvl
llvm.ve.vl.pvfmkwloeq.mvl
llvm.ve.vl.pvfmkwloeq.mvml
llvm.ve.vl.pvfmkwloeqnan.mvl
llvm.ve.vl.pvfmkwloeqnan.mvml
llvm.ve.vl.pvfmkwloge.mvl
llvm.ve.vl.pvfmkwloge.mvml
llvm.ve.vl.pvfmkwlogenan.mvl
llvm.ve.vl.pvfmkwlogenan.mvml
llvm.ve.vl.pvfmkwlogt.mvl
llvm.ve.vl.pvfmkwlogt.mvml
llvm.ve.vl.pvfmkwlogtnan.mvl
llvm.ve.vl.pvfmkwlogtnan.mvml
llvm.ve.vl.pvfmkwlole.mvl
llvm.ve.vl.pvfmkwlole.mvml
llvm.ve.vl.pvfmkwlolenan.mvl
llvm.ve.vl.pvfmkwlolenan.mvml
llvm.ve.vl.pvfmkwlolt.mvl
llvm.ve.vl.pvfmkwlolt.mvml
llvm.ve.vl.pvfmkwloltnan.mvl
llvm.ve.vl.pvfmkwloltnan.mvml
llvm.ve.vl.pvfmkwlonan.mvl
llvm.ve.vl.pvfmkwlonan.mvml
llvm.ve.vl.pvfmkwlone.mvl
llvm.ve.vl.pvfmkwlone.mvml
llvm.ve.vl.pvfmkwlonenan.mvl
llvm.ve.vl.pvfmkwlonenan.mvml
llvm.ve.vl.pvfmkwlonum.mvl
llvm.ve.vl.pvfmkwlonum.mvml
llvm.ve.vl.pvfmkwlt.MvMl
llvm.ve.vl.pvfmkwlt.Mvl
llvm.ve.vl.pvfmkwltnan.MvMl
llvm.ve.vl.pvfmkwltnan.Mvl
llvm.ve.vl.pvfmkwnan.MvMl
llvm.ve.vl.pvfmkwnan.Mvl
llvm.ve.vl.pvfmkwne.MvMl
llvm.ve.vl.pvfmkwne.Mvl
llvm.ve.vl.pvfmkwnenan.MvMl
llvm.ve.vl.pvfmkwnenan.Mvl
llvm.ve.vl.pvfmkwnum.MvMl
llvm.ve.vl.pvfmkwnum.Mvl
llvm.ve.vl.pvfmkwupeq.mvl
llvm.ve.vl.pvfmkwupeq.mvml
llvm.ve.vl.pvfmkwupeqnan.mvl
llvm.ve.vl.pvfmkwupeqnan.mvml
llvm.ve.vl.pvfmkwupge.mvl
llvm.ve.vl.pvfmkwupge.mvml
llvm.ve.vl.pvfmkwupgenan.mvl
llvm.ve.vl.pvfmkwupgenan.mvml
llvm.ve.vl.pvfmkwupgt.mvl
llvm.ve.vl.pvfmkwupgt.mvml
llvm.ve.vl.pvfmkwupgtnan.mvl
llvm.ve.vl.pvfmkwupgtnan.mvml
llvm.ve.vl.pvfmkwuple.mvl
llvm.ve.vl.pvfmkwuple.mvml
llvm.ve.vl.pvfmkwuplenan.mvl
llvm.ve.vl.pvfmkwuplenan.mvml
llvm.ve.vl.pvfmkwuplt.mvl
llvm.ve.vl.pvfmkwuplt.mvml
llvm.ve.vl.pvfmkwupltnan.mvl
llvm.ve.vl.pvfmkwupltnan.mvml
llvm.ve.vl.pvfmkwupnan.mvl
llvm.ve.vl.pvfmkwupnan.mvml
llvm.ve.vl.pvfmkwupne.mvl
llvm.ve.vl.pvfmkwupne.mvml
llvm.ve.vl.pvfmkwupnenan.mvl
llvm.ve.vl.pvfmkwupnenan.mvml
llvm.ve.vl.pvfmkwupnum.mvl
llvm.ve.vl.pvfmkwupnum.mvml
llvm.ve.vl.pvfmsb.vsvvMvl
llvm.ve.vl.pvfmsb.vsvvl
llvm.ve.vl.pvfmsb.vsvvvl
llvm.ve.vl.pvfmsb.vvsvMvl
llvm.ve.vl.pvfmsb.vvsvl
llvm.ve.vl.pvfmsb.vvsvvl
llvm.ve.vl.pvfmsb.vvvvMvl
llvm.ve.vl.pvfmsb.vvvvl
llvm.ve.vl.pvfmsb.vvvvvl
llvm.ve.vl.pvfmul.vsvMvl
llvm.ve.vl.pvfmul.vsvl
llvm.ve.vl.pvfmul.vsvvl
llvm.ve.vl.pvfmul.vvvMvl
llvm.ve.vl.pvfmul.vvvl
llvm.ve.vl.pvfmul.vvvvl
llvm.ve.vl.pvfnmad.vsvvMvl
llvm.ve.vl.pvfnmad.vsvvl
llvm.ve.vl.pvfnmad.vsvvvl
llvm.ve.vl.pvfnmad.vvsvMvl
llvm.ve.vl.pvfnmad.vvsvl
llvm.ve.vl.pvfnmad.vvsvvl
llvm.ve.vl.pvfnmad.vvvvMvl
llvm.ve.vl.pvfnmad.vvvvl
llvm.ve.vl.pvfnmad.vvvvvl
llvm.ve.vl.pvfnmsb.vsvvMvl
llvm.ve.vl.pvfnmsb.vsvvl
llvm.ve.vl.pvfnmsb.vsvvvl
llvm.ve.vl.pvfnmsb.vvsvMvl
llvm.ve.vl.pvfnmsb.vvsvl
llvm.ve.vl.pvfnmsb.vvsvvl
llvm.ve.vl.pvfnmsb.vvvvMvl
llvm.ve.vl.pvfnmsb.vvvvl
llvm.ve.vl.pvfnmsb.vvvvvl
llvm.ve.vl.pvfsub.vsvMvl
llvm.ve.vl.pvfsub.vsvl
llvm.ve.vl.pvfsub.vsvvl
llvm.ve.vl.pvfsub.vvvMvl
llvm.ve.vl.pvfsub.vvvl
llvm.ve.vl.pvfsub.vvvvl
llvm.ve.vl.pvmaxs.vsvMvl
llvm.ve.vl.pvmaxs.vsvl
llvm.ve.vl.pvmaxs.vsvvl
llvm.ve.vl.pvmaxs.vvvMvl
llvm.ve.vl.pvmaxs.vvvl
llvm.ve.vl.pvmaxs.vvvvl
llvm.ve.vl.pvmins.vsvMvl
llvm.ve.vl.pvmins.vsvl
llvm.ve.vl.pvmins.vsvvl
llvm.ve.vl.pvmins.vvvMvl
llvm.ve.vl.pvmins.vvvl
llvm.ve.vl.pvmins.vvvvl
llvm.ve.vl.pvor.vsvMvl
llvm.ve.vl.pvor.vsvl
llvm.ve.vl.pvor.vsvvl
llvm.ve.vl.pvor.vvvMvl
llvm.ve.vl.pvor.vvvl
llvm.ve.vl.pvor.vvvvl
llvm.ve.vl.pvrcp.vvl
llvm.ve.vl.pvrcp.vvvl
llvm.ve.vl.pvrsqrt.vvl
llvm.ve.vl.pvrsqrt.vvvl
llvm.ve.vl.pvrsqrtnex.vvl
llvm.ve.vl.pvrsqrtnex.vvvl
llvm.ve.vl.pvseq.vl
llvm.ve.vl.pvseq.vvl
llvm.ve.vl.pvseqlo.vl
llvm.ve.vl.pvseqlo.vvl
llvm.ve.vl.pvsequp.vl
llvm.ve.vl.pvsequp.vvl
llvm.ve.vl.pvsla.vvsMvl
llvm.ve.vl.pvsla.vvsl
llvm.ve.vl.pvsla.vvsvl
llvm.ve.vl.pvsla.vvvMvl
llvm.ve.vl.pvsla.vvvl
llvm.ve.vl.pvsla.vvvvl
llvm.ve.vl.pvsll.vvsMvl
llvm.ve.vl.pvsll.vvsl
llvm.ve.vl.pvsll.vvsvl
llvm.ve.vl.pvsll.vvvMvl
llvm.ve.vl.pvsll.vvvl
llvm.ve.vl.pvsll.vvvvl
llvm.ve.vl.pvsra.vvsMvl
llvm.ve.vl.pvsra.vvsl
llvm.ve.vl.pvsra.vvsvl
llvm.ve.vl.pvsra.vvvMvl
llvm.ve.vl.pvsra.vvvl
llvm.ve.vl.pvsra.vvvvl
llvm.ve.vl.pvsrl.vvsMvl
llvm.ve.vl.pvsrl.vvsl
llvm.ve.vl.pvsrl.vvsvl
llvm.ve.vl.pvsrl.vvvMvl
llvm.ve.vl.pvsrl.vvvl
llvm.ve.vl.pvsrl.vvvvl
llvm.ve.vl.pvsubs.vsvMvl
llvm.ve.vl.pvsubs.vsvl
llvm.ve.vl.pvsubs.vsvvl
llvm.ve.vl.pvsubs.vvvMvl
llvm.ve.vl.pvsubs.vvvl
llvm.ve.vl.pvsubs.vvvvl
llvm.ve.vl.pvsubu.vsvMvl
llvm.ve.vl.pvsubu.vsvl
llvm.ve.vl.pvsubu.vsvvl
llvm.ve.vl.pvsubu.vvvMvl
llvm.ve.vl.pvsubu.vvvl
llvm.ve.vl.pvsubu.vvvvl
llvm.ve.vl.pvxor.vsvMvl
llvm.ve.vl.pvxor.vsvl
llvm.ve.vl.pvxor.vsvvl
llvm.ve.vl.pvxor.vvvMvl
llvm.ve.vl.pvxor.vvvl
llvm.ve.vl.pvxor.vvvvl
llvm.ve.vl.svm.sMs
llvm.ve.vl.svm.sms
llvm.ve.vl.tovm.sml
llvm.ve.vl.vaddsl.vsvl
llvm.ve.vl.vaddsl.vsvmvl
llvm.ve.vl.vaddsl.vsvvl
llvm.ve.vl.vaddsl.vvvl
llvm.ve.vl.vaddsl.vvvmvl
llvm.ve.vl.vaddsl.vvvvl
llvm.ve.vl.vaddswsx.vsvl
llvm.ve.vl.vaddswsx.vsvmvl
llvm.ve.vl.vaddswsx.vsvvl
llvm.ve.vl.vaddswsx.vvvl
llvm.ve.vl.vaddswsx.vvvmvl
llvm.ve.vl.vaddswsx.vvvvl
llvm.ve.vl.vaddswzx.vsvl
llvm.ve.vl.vaddswzx.vsvmvl
llvm.ve.vl.vaddswzx.vsvvl
llvm.ve.vl.vaddswzx.vvvl
llvm.ve.vl.vaddswzx.vvvmvl
llvm.ve.vl.vaddswzx.vvvvl
llvm.ve.vl.vaddul.vsvl
llvm.ve.vl.vaddul.vsvmvl
llvm.ve.vl.vaddul.vsvvl
llvm.ve.vl.vaddul.vvvl
llvm.ve.vl.vaddul.vvvmvl
llvm.ve.vl.vaddul.vvvvl
llvm.ve.vl.vadduw.vsvl
llvm.ve.vl.vadduw.vsvmvl
llvm.ve.vl.vadduw.vsvvl
llvm.ve.vl.vadduw.vvvl
llvm.ve.vl.vadduw.vvvmvl
llvm.ve.vl.vadduw.vvvvl
llvm.ve.vl.vand.vsvl
llvm.ve.vl.vand.vsvmvl
llvm.ve.vl.vand.vsvvl
llvm.ve.vl.vand.vvvl
llvm.ve.vl.vand.vvvmvl
llvm.ve.vl.vand.vvvvl
llvm.ve.vl.vbrdd.vsl
llvm.ve.vl.vbrdd.vsmvl
llvm.ve.vl.vbrdd.vsvl
llvm.ve.vl.vbrdl.vsl
llvm.ve.vl.vbrdl.vsmvl
llvm.ve.vl.vbrdl.vsvl
llvm.ve.vl.vbrds.vsl
llvm.ve.vl.vbrds.vsmvl
llvm.ve.vl.vbrds.vsvl
llvm.ve.vl.vbrdw.vsl
llvm.ve.vl.vbrdw.vsmvl
llvm.ve.vl.vbrdw.vsvl
llvm.ve.vl.vcmpsl.vsvl
llvm.ve.vl.vcmpsl.vsvmvl
llvm.ve.vl.vcmpsl.vsvvl
llvm.ve.vl.vcmpsl.vvvl
llvm.ve.vl.vcmpsl.vvvmvl
llvm.ve.vl.vcmpsl.vvvvl
llvm.ve.vl.vcmpswsx.vsvl
llvm.ve.vl.vcmpswsx.vsvmvl
llvm.ve.vl.vcmpswsx.vsvvl
llvm.ve.vl.vcmpswsx.vvvl
llvm.ve.vl.vcmpswsx.vvvmvl
llvm.ve.vl.vcmpswsx.vvvvl
llvm.ve.vl.vcmpswzx.vsvl
llvm.ve.vl.vcmpswzx.vsvmvl
llvm.ve.vl.vcmpswzx.vsvvl
llvm.ve.vl.vcmpswzx.vvvl
llvm.ve.vl.vcmpswzx.vvvmvl
llvm.ve.vl.vcmpswzx.vvvvl
llvm.ve.vl.vcmpul.vsvl
llvm.ve.vl.vcmpul.vsvmvl
llvm.ve.vl.vcmpul.vsvvl
llvm.ve.vl.vcmpul.vvvl
llvm.ve.vl.vcmpul.vvvmvl
llvm.ve.vl.vcmpul.vvvvl
llvm.ve.vl.vcmpuw.vsvl
llvm.ve.vl.vcmpuw.vsvmvl
llvm.ve.vl.vcmpuw.vsvvl
llvm.ve.vl.vcmpuw.vvvl
llvm.ve.vl.vcmpuw.vvvmvl
llvm.ve.vl.vcmpuw.vvvvl
llvm.ve.vl.vcp.vvmvl
llvm.ve.vl.vcvtdl.vvl
llvm.ve.vl.vcvtdl.vvvl
llvm.ve.vl.vcvtds.vvl
llvm.ve.vl.vcvtds.vvvl
llvm.ve.vl.vcvtdw.vvl
llvm.ve.vl.vcvtdw.vvvl
llvm.ve.vl.vcvtld.vvl
llvm.ve.vl.vcvtld.vvmvl
llvm.ve.vl.vcvtld.vvvl
llvm.ve.vl.vcvtldrz.vvl
llvm.ve.vl.vcvtldrz.vvmvl
llvm.ve.vl.vcvtldrz.vvvl
llvm.ve.vl.vcvtsd.vvl
llvm.ve.vl.vcvtsd.vvvl
llvm.ve.vl.vcvtsw.vvl
llvm.ve.vl.vcvtsw.vvvl
llvm.ve.vl.vcvtwdsx.vvl
llvm.ve.vl.vcvtwdsx.vvmvl
llvm.ve.vl.vcvtwdsx.vvvl
llvm.ve.vl.vcvtwdsxrz.vvl
llvm.ve.vl.vcvtwdsxrz.vvmvl
llvm.ve.vl.vcvtwdsxrz.vvvl
llvm.ve.vl.vcvtwdzx.vvl
llvm.ve.vl.vcvtwdzx.vvmvl
llvm.ve.vl.vcvtwdzx.vvvl
llvm.ve.vl.vcvtwdzxrz.vvl
llvm.ve.vl.vcvtwdzxrz.vvmvl
llvm.ve.vl.vcvtwdzxrz.vvvl
llvm.ve.vl.vcvtwssx.vvl
llvm.ve.vl.vcvtwssx.vvmvl
llvm.ve.vl.vcvtwssx.vvvl
llvm.ve.vl.vcvtwssxrz.vvl
llvm.ve.vl.vcvtwssxrz.vvmvl
llvm.ve.vl.vcvtwssxrz.vvvl
llvm.ve.vl.vcvtwszx.vvl
llvm.ve.vl.vcvtwszx.vvmvl
llvm.ve.vl.vcvtwszx.vvvl
llvm.ve.vl.vcvtwszxrz.vvl
llvm.ve.vl.vcvtwszxrz.vvmvl
llvm.ve.vl.vcvtwszxrz.vvvl
llvm.ve.vl.vdivsl.vsvl
llvm.ve.vl.vdivsl.vsvmvl
llvm.ve.vl.vdivsl.vsvvl
llvm.ve.vl.vdivsl.vvsl
llvm.ve.vl.vdivsl.vvsmvl
llvm.ve.vl.vdivsl.vvsvl
llvm.ve.vl.vdivsl.vvvl
llvm.ve.vl.vdivsl.vvvmvl
llvm.ve.vl.vdivsl.vvvvl
llvm.ve.vl.vdivswsx.vsvl
llvm.ve.vl.vdivswsx.vsvmvl
llvm.ve.vl.vdivswsx.vsvvl
llvm.ve.vl.vdivswsx.vvsl
llvm.ve.vl.vdivswsx.vvsmvl
llvm.ve.vl.vdivswsx.vvsvl
llvm.ve.vl.vdivswsx.vvvl
llvm.ve.vl.vdivswsx.vvvmvl
llvm.ve.vl.vdivswsx.vvvvl
llvm.ve.vl.vdivswzx.vsvl
llvm.ve.vl.vdivswzx.vsvmvl
llvm.ve.vl.vdivswzx.vsvvl
llvm.ve.vl.vdivswzx.vvsl
llvm.ve.vl.vdivswzx.vvsmvl
llvm.ve.vl.vdivswzx.vvsvl
llvm.ve.vl.vdivswzx.vvvl
llvm.ve.vl.vdivswzx.vvvmvl
llvm.ve.vl.vdivswzx.vvvvl
llvm.ve.vl.vdivul.vsvl
llvm.ve.vl.vdivul.vsvmvl
llvm.ve.vl.vdivul.vsvvl
llvm.ve.vl.vdivul.vvsl
llvm.ve.vl.vdivul.vvsmvl
llvm.ve.vl.vdivul.vvsvl
llvm.ve.vl.vdivul.vvvl
llvm.ve.vl.vdivul.vvvmvl
llvm.ve.vl.vdivul.vvvvl
llvm.ve.vl.vdivuw.vsvl
llvm.ve.vl.vdivuw.vsvmvl
llvm.ve.vl.vdivuw.vsvvl
llvm.ve.vl.vdivuw.vvsl
llvm.ve.vl.vdivuw.vvsmvl
llvm.ve.vl.vdivuw.vvsvl
llvm.ve.vl.vdivuw.vvvl
llvm.ve.vl.vdivuw.vvvmvl
llvm.ve.vl.vdivuw.vvvvl
llvm.ve.vl.veqv.vsvl
llvm.ve.vl.veqv.vsvmvl
llvm.ve.vl.veqv.vsvvl
llvm.ve.vl.veqv.vvvl
llvm.ve.vl.veqv.vvvmvl
llvm.ve.vl.veqv.vvvvl
llvm.ve.vl.vex.vvmvl
llvm.ve.vl.vfaddd.vsvl
llvm.ve.vl.vfaddd.vsvmvl
llvm.ve.vl.vfaddd.vsvvl
llvm.ve.vl.vfaddd.vvvl
llvm.ve.vl.vfaddd.vvvmvl
llvm.ve.vl.vfaddd.vvvvl
llvm.ve.vl.vfadds.vsvl
llvm.ve.vl.vfadds.vsvmvl
llvm.ve.vl.vfadds.vsvvl
llvm.ve.vl.vfadds.vvvl
llvm.ve.vl.vfadds.vvvmvl
llvm.ve.vl.vfadds.vvvvl
llvm.ve.vl.vfcmpd.vsvl
llvm.ve.vl.vfcmpd.vsvmvl
llvm.ve.vl.vfcmpd.vsvvl
llvm.ve.vl.vfcmpd.vvvl
llvm.ve.vl.vfcmpd.vvvmvl
llvm.ve.vl.vfcmpd.vvvvl
llvm.ve.vl.vfcmps.vsvl
llvm.ve.vl.vfcmps.vsvmvl
llvm.ve.vl.vfcmps.vsvvl
llvm.ve.vl.vfcmps.vvvl
llvm.ve.vl.vfcmps.vvvmvl
llvm.ve.vl.vfcmps.vvvvl
llvm.ve.vl.vfdivd.vsvl
llvm.ve.vl.vfdivd.vsvmvl
llvm.ve.vl.vfdivd.vsvvl
llvm.ve.vl.vfdivd.vvvl
llvm.ve.vl.vfdivd.vvvmvl
llvm.ve.vl.vfdivd.vvvvl
llvm.ve.vl.vfdivs.vsvl
llvm.ve.vl.vfdivs.vsvmvl
llvm.ve.vl.vfdivs.vsvvl
llvm.ve.vl.vfdivs.vvvl
llvm.ve.vl.vfdivs.vvvmvl
llvm.ve.vl.vfdivs.vvvvl
llvm.ve.vl.vfmadd.vsvvl
llvm.ve.vl.vfmadd.vsvvmvl
llvm.ve.vl.vfmadd.vsvvvl
llvm.ve.vl.vfmadd.vvsvl
llvm.ve.vl.vfmadd.vvsvmvl
llvm.ve.vl.vfmadd.vvsvvl
llvm.ve.vl.vfmadd.vvvvl
llvm.ve.vl.vfmadd.vvvvmvl
llvm.ve.vl.vfmadd.vvvvvl
llvm.ve.vl.vfmads.vsvvl
llvm.ve.vl.vfmads.vsvvmvl
llvm.ve.vl.vfmads.vsvvvl
llvm.ve.vl.vfmads.vvsvl
llvm.ve.vl.vfmads.vvsvmvl
llvm.ve.vl.vfmads.vvsvvl
llvm.ve.vl.vfmads.vvvvl
llvm.ve.vl.vfmads.vvvvmvl
llvm.ve.vl.vfmads.vvvvvl
llvm.ve.vl.vfmaxd.vsvl
llvm.ve.vl.vfmaxd.vsvmvl
llvm.ve.vl.vfmaxd.vsvvl
llvm.ve.vl.vfmaxd.vvvl
llvm.ve.vl.vfmaxd.vvvmvl
llvm.ve.vl.vfmaxd.vvvvl
llvm.ve.vl.vfmaxs.vsvl
llvm.ve.vl.vfmaxs.vsvmvl
llvm.ve.vl.vfmaxs.vsvvl
llvm.ve.vl.vfmaxs.vvvl
llvm.ve.vl.vfmaxs.vvvmvl
llvm.ve.vl.vfmaxs.vvvvl
llvm.ve.vl.vfmind.vsvl
llvm.ve.vl.vfmind.vsvmvl
llvm.ve.vl.vfmind.vsvvl
llvm.ve.vl.vfmind.vvvl
llvm.ve.vl.vfmind.vvvmvl
llvm.ve.vl.vfmind.vvvvl
llvm.ve.vl.vfmins.vsvl
llvm.ve.vl.vfmins.vsvmvl
llvm.ve.vl.vfmins.vsvvl
llvm.ve.vl.vfmins.vvvl
llvm.ve.vl.vfmins.vvvmvl
llvm.ve.vl.vfmins.vvvvl
llvm.ve.vl.vfmkdeq.mvl
llvm.ve.vl.vfmkdeq.mvml
llvm.ve.vl.vfmkdeqnan.mvl
llvm.ve.vl.vfmkdeqnan.mvml
llvm.ve.vl.vfmkdge.mvl
llvm.ve.vl.vfmkdge.mvml
llvm.ve.vl.vfmkdgenan.mvl
llvm.ve.vl.vfmkdgenan.mvml
llvm.ve.vl.vfmkdgt.mvl
llvm.ve.vl.vfmkdgt.mvml
llvm.ve.vl.vfmkdgtnan.mvl
llvm.ve.vl.vfmkdgtnan.mvml
llvm.ve.vl.vfmkdle.mvl
llvm.ve.vl.vfmkdle.mvml
llvm.ve.vl.vfmkdlenan.mvl
llvm.ve.vl.vfmkdlenan.mvml
llvm.ve.vl.vfmkdlt.mvl
llvm.ve.vl.vfmkdlt.mvml
llvm.ve.vl.vfmkdltnan.mvl
llvm.ve.vl.vfmkdltnan.mvml
llvm.ve.vl.vfmkdnan.mvl
llvm.ve.vl.vfmkdnan.mvml
llvm.ve.vl.vfmkdne.mvl
llvm.ve.vl.vfmkdne.mvml
llvm.ve.vl.vfmkdnenan.mvl
llvm.ve.vl.vfmkdnenan.mvml
llvm.ve.vl.vfmkdnum.mvl
llvm.ve.vl.vfmkdnum.mvml
llvm.ve.vl.vfmklaf.ml
llvm.ve.vl.vfmklat.ml
llvm.ve.vl.vfmkleq.mvl
llvm.ve.vl.vfmkleq.mvml
llvm.ve.vl.vfmkleqnan.mvl
llvm.ve.vl.vfmkleqnan.mvml
llvm.ve.vl.vfmklge.mvl
llvm.ve.vl.vfmklge.mvml
llvm.ve.vl.vfmklgenan.mvl
llvm.ve.vl.vfmklgenan.mvml
llvm.ve.vl.vfmklgt.mvl
llvm.ve.vl.vfmklgt.mvml
llvm.ve.vl.vfmklgtnan.mvl
llvm.ve.vl.vfmklgtnan.mvml
llvm.ve.vl.vfmklle.mvl
llvm.ve.vl.vfmklle.mvml
llvm.ve.vl.vfmkllenan.mvl
llvm.ve.vl.vfmkllenan.mvml
llvm.ve.vl.vfmkllt.mvl
llvm.ve.vl.vfmkllt.mvml
llvm.ve.vl.vfmklltnan.mvl
llvm.ve.vl.vfmklltnan.mvml
llvm.ve.vl.vfmklnan.mvl
llvm.ve.vl.vfmklnan.mvml
llvm.ve.vl.vfmklne.mvl
llvm.ve.vl.vfmklne.mvml
llvm.ve.vl.vfmklnenan.mvl
llvm.ve.vl.vfmklnenan.mvml
llvm.ve.vl.vfmklnum.mvl
llvm.ve.vl.vfmklnum.mvml
llvm.ve.vl.vfmkseq.mvl
llvm.ve.vl.vfmkseq.mvml
llvm.ve.vl.vfmkseqnan.mvl
llvm.ve.vl.vfmkseqnan.mvml
llvm.ve.vl.vfmksge.mvl
llvm.ve.vl.vfmksge.mvml
llvm.ve.vl.vfmksgenan.mvl
llvm.ve.vl.vfmksgenan.mvml
llvm.ve.vl.vfmksgt.mvl
llvm.ve.vl.vfmksgt.mvml
llvm.ve.vl.vfmksgtnan.mvl
llvm.ve.vl.vfmksgtnan.mvml
llvm.ve.vl.vfmksle.mvl
llvm.ve.vl.vfmksle.mvml
llvm.ve.vl.vfmkslenan.mvl
llvm.ve.vl.vfmkslenan.mvml
llvm.ve.vl.vfmkslt.mvl
llvm.ve.vl.vfmkslt.mvml
llvm.ve.vl.vfmksltnan.mvl
llvm.ve.vl.vfmksltnan.mvml
llvm.ve.vl.vfmksnan.mvl
llvm.ve.vl.vfmksnan.mvml
llvm.ve.vl.vfmksne.mvl
llvm.ve.vl.vfmksne.mvml
llvm.ve.vl.vfmksnenan.mvl
llvm.ve.vl.vfmksnenan.mvml
llvm.ve.vl.vfmksnum.mvl
llvm.ve.vl.vfmksnum.mvml
llvm.ve.vl.vfmkweq.mvl
llvm.ve.vl.vfmkweq.mvml
llvm.ve.vl.vfmkweqnan.mvl
llvm.ve.vl.vfmkweqnan.mvml
llvm.ve.vl.vfmkwge.mvl
llvm.ve.vl.vfmkwge.mvml
llvm.ve.vl.vfmkwgenan.mvl
llvm.ve.vl.vfmkwgenan.mvml
llvm.ve.vl.vfmkwgt.mvl
llvm.ve.vl.vfmkwgt.mvml
llvm.ve.vl.vfmkwgtnan.mvl
llvm.ve.vl.vfmkwgtnan.mvml
llvm.ve.vl.vfmkwle.mvl
llvm.ve.vl.vfmkwle.mvml
llvm.ve.vl.vfmkwlenan.mvl
llvm.ve.vl.vfmkwlenan.mvml
llvm.ve.vl.vfmkwlt.mvl
llvm.ve.vl.vfmkwlt.mvml
llvm.ve.vl.vfmkwltnan.mvl
llvm.ve.vl.vfmkwltnan.mvml
llvm.ve.vl.vfmkwnan.mvl
llvm.ve.vl.vfmkwnan.mvml
llvm.ve.vl.vfmkwne.mvl
llvm.ve.vl.vfmkwne.mvml
llvm.ve.vl.vfmkwnenan.mvl
llvm.ve.vl.vfmkwnenan.mvml
llvm.ve.vl.vfmkwnum.mvl
llvm.ve.vl.vfmkwnum.mvml
llvm.ve.vl.vfmsbd.vsvvl
llvm.ve.vl.vfmsbd.vsvvmvl
llvm.ve.vl.vfmsbd.vsvvvl
llvm.ve.vl.vfmsbd.vvsvl
llvm.ve.vl.vfmsbd.vvsvmvl
llvm.ve.vl.vfmsbd.vvsvvl
llvm.ve.vl.vfmsbd.vvvvl
llvm.ve.vl.vfmsbd.vvvvmvl
llvm.ve.vl.vfmsbd.vvvvvl
llvm.ve.vl.vfmsbs.vsvvl
llvm.ve.vl.vfmsbs.vsvvmvl
llvm.ve.vl.vfmsbs.vsvvvl
llvm.ve.vl.vfmsbs.vvsvl
llvm.ve.vl.vfmsbs.vvsvmvl
llvm.ve.vl.vfmsbs.vvsvvl
llvm.ve.vl.vfmsbs.vvvvl
llvm.ve.vl.vfmsbs.vvvvmvl
llvm.ve.vl.vfmsbs.vvvvvl
llvm.ve.vl.vfmuld.vsvl
llvm.ve.vl.vfmuld.vsvmvl
llvm.ve.vl.vfmuld.vsvvl
llvm.ve.vl.vfmuld.vvvl
llvm.ve.vl.vfmuld.vvvmvl
llvm.ve.vl.vfmuld.vvvvl
llvm.ve.vl.vfmuls.vsvl
llvm.ve.vl.vfmuls.vsvmvl
llvm.ve.vl.vfmuls.vsvvl
llvm.ve.vl.vfmuls.vvvl
llvm.ve.vl.vfmuls.vvvmvl
llvm.ve.vl.vfmuls.vvvvl
llvm.ve.vl.vfnmadd.vsvvl
llvm.ve.vl.vfnmadd.vsvvmvl
llvm.ve.vl.vfnmadd.vsvvvl
llvm.ve.vl.vfnmadd.vvsvl
llvm.ve.vl.vfnmadd.vvsvmvl
llvm.ve.vl.vfnmadd.vvsvvl
llvm.ve.vl.vfnmadd.vvvvl
llvm.ve.vl.vfnmadd.vvvvmvl
llvm.ve.vl.vfnmadd.vvvvvl
llvm.ve.vl.vfnmads.vsvvl
llvm.ve.vl.vfnmads.vsvvmvl
llvm.ve.vl.vfnmads.vsvvvl
llvm.ve.vl.vfnmads.vvsvl
llvm.ve.vl.vfnmads.vvsvmvl
llvm.ve.vl.vfnmads.vvsvvl
llvm.ve.vl.vfnmads.vvvvl
llvm.ve.vl.vfnmads.vvvvmvl
llvm.ve.vl.vfnmads.vvvvvl
llvm.ve.vl.vfnmsbd.vsvvl
llvm.ve.vl.vfnmsbd.vsvvmvl
llvm.ve.vl.vfnmsbd.vsvvvl
llvm.ve.vl.vfnmsbd.vvsvl
llvm.ve.vl.vfnmsbd.vvsvmvl
llvm.ve.vl.vfnmsbd.vvsvvl
llvm.ve.vl.vfnmsbd.vvvvl
llvm.ve.vl.vfnmsbd.vvvvmvl
llvm.ve.vl.vfnmsbd.vvvvvl
llvm.ve.vl.vfnmsbs.vsvvl
llvm.ve.vl.vfnmsbs.vsvvmvl
llvm.ve.vl.vfnmsbs.vsvvvl
llvm.ve.vl.vfnmsbs.vvsvl
llvm.ve.vl.vfnmsbs.vvsvmvl
llvm.ve.vl.vfnmsbs.vvsvvl
llvm.ve.vl.vfnmsbs.vvvvl
llvm.ve.vl.vfnmsbs.vvvvmvl
llvm.ve.vl.vfnmsbs.vvvvvl
llvm.ve.vl.vfrmaxdfst.vvl
llvm.ve.vl.vfrmaxdfst.vvvl
llvm.ve.vl.vfrmaxdlst.vvl
llvm.ve.vl.vfrmaxdlst.vvvl
llvm.ve.vl.vfrmaxsfst.vvl
llvm.ve.vl.vfrmaxsfst.vvvl
llvm.ve.vl.vfrmaxslst.vvl
llvm.ve.vl.vfrmaxslst.vvvl
llvm.ve.vl.vfrmindfst.vvl
llvm.ve.vl.vfrmindfst.vvvl
llvm.ve.vl.vfrmindlst.vvl
llvm.ve.vl.vfrmindlst.vvvl
llvm.ve.vl.vfrminsfst.vvl
llvm.ve.vl.vfrminsfst.vvvl
llvm.ve.vl.vfrminslst.vvl
llvm.ve.vl.vfrminslst.vvvl
llvm.ve.vl.vfsqrtd.vvl
llvm.ve.vl.vfsqrtd.vvvl
llvm.ve.vl.vfsqrts.vvl
llvm.ve.vl.vfsqrts.vvvl
llvm.ve.vl.vfsubd.vsvl
llvm.ve.vl.vfsubd.vsvmvl
llvm.ve.vl.vfsubd.vsvvl
llvm.ve.vl.vfsubd.vvvl
llvm.ve.vl.vfsubd.vvvmvl
llvm.ve.vl.vfsubd.vvvvl
llvm.ve.vl.vfsubs.vsvl
llvm.ve.vl.vfsubs.vsvmvl
llvm.ve.vl.vfsubs.vsvvl
llvm.ve.vl.vfsubs.vvvl
llvm.ve.vl.vfsubs.vvvmvl
llvm.ve.vl.vfsubs.vvvvl
llvm.ve.vl.vfsumd.vvl
llvm.ve.vl.vfsumd.vvml
llvm.ve.vl.vfsums.vvl
llvm.ve.vl.vfsums.vvml
llvm.ve.vl.vgt.vvssl
llvm.ve.vl.vgt.vvssml
llvm.ve.vl.vgt.vvssmvl
llvm.ve.vl.vgt.vvssvl
llvm.ve.vl.vgtlsx.vvssl
llvm.ve.vl.vgtlsx.vvssml
llvm.ve.vl.vgtlsx.vvssmvl
llvm.ve.vl.vgtlsx.vvssvl
llvm.ve.vl.vgtlsxnc.vvssl
llvm.ve.vl.vgtlsxnc.vvssml
llvm.ve.vl.vgtlsxnc.vvssmvl
llvm.ve.vl.vgtlsxnc.vvssvl
llvm.ve.vl.vgtlzx.vvssl
llvm.ve.vl.vgtlzx.vvssml
llvm.ve.vl.vgtlzx.vvssmvl
llvm.ve.vl.vgtlzx.vvssvl
llvm.ve.vl.vgtlzxnc.vvssl
llvm.ve.vl.vgtlzxnc.vvssml
llvm.ve.vl.vgtlzxnc.vvssmvl
llvm.ve.vl.vgtlzxnc.vvssvl
llvm.ve.vl.vgtnc.vvssl
llvm.ve.vl.vgtnc.vvssml
llvm.ve.vl.vgtnc.vvssmvl
llvm.ve.vl.vgtnc.vvssvl
llvm.ve.vl.vgtu.vvssl
llvm.ve.vl.vgtu.vvssml
llvm.ve.vl.vgtu.vvssmvl
llvm.ve.vl.vgtu.vvssvl
llvm.ve.vl.vgtunc.vvssl
llvm.ve.vl.vgtunc.vvssml
llvm.ve.vl.vgtunc.vvssmvl
llvm.ve.vl.vgtunc.vvssvl
llvm.ve.vl.vld.vssl
llvm.ve.vl.vld.vssvl
llvm.ve.vl.vld2d.vssl
llvm.ve.vl.vld2d.vssvl
llvm.ve.vl.vld2dnc.vssl
llvm.ve.vl.vld2dnc.vssvl
llvm.ve.vl.vldl2dsx.vssl
llvm.ve.vl.vldl2dsx.vssvl
llvm.ve.vl.vldl2dsxnc.vssl
llvm.ve.vl.vldl2dsxnc.vssvl
llvm.ve.vl.vldl2dzx.vssl
llvm.ve.vl.vldl2dzx.vssvl
llvm.ve.vl.vldl2dzxnc.vssl
llvm.ve.vl.vldl2dzxnc.vssvl
llvm.ve.vl.vldlsx.vssl
llvm.ve.vl.vldlsx.vssvl
llvm.ve.vl.vldlsxnc.vssl
llvm.ve.vl.vldlsxnc.vssvl
llvm.ve.vl.vldlzx.vssl
llvm.ve.vl.vldlzx.vssvl
llvm.ve.vl.vldlzxnc.vssl
llvm.ve.vl.vldlzxnc.vssvl
llvm.ve.vl.vldnc.vssl
llvm.ve.vl.vldnc.vssvl
llvm.ve.vl.vldu.vssl
llvm.ve.vl.vldu.vssvl
llvm.ve.vl.vldu2d.vssl
llvm.ve.vl.vldu2d.vssvl
llvm.ve.vl.vldu2dnc.vssl
llvm.ve.vl.vldu2dnc.vssvl
llvm.ve.vl.vldunc.vssl
llvm.ve.vl.vldunc.vssvl
llvm.ve.vl.vmaxsl.vsvl
llvm.ve.vl.vmaxsl.vsvmvl
llvm.ve.vl.vmaxsl.vsvvl
llvm.ve.vl.vmaxsl.vvvl
llvm.ve.vl.vmaxsl.vvvmvl
llvm.ve.vl.vmaxsl.vvvvl
llvm.ve.vl.vmaxswsx.vsvl
llvm.ve.vl.vmaxswsx.vsvmvl
llvm.ve.vl.vmaxswsx.vsvvl
llvm.ve.vl.vmaxswsx.vvvl
llvm.ve.vl.vmaxswsx.vvvmvl
llvm.ve.vl.vmaxswsx.vvvvl
llvm.ve.vl.vmaxswzx.vsvl
llvm.ve.vl.vmaxswzx.vsvmvl
llvm.ve.vl.vmaxswzx.vsvvl
llvm.ve.vl.vmaxswzx.vvvl
llvm.ve.vl.vmaxswzx.vvvmvl
llvm.ve.vl.vmaxswzx.vvvvl
llvm.ve.vl.vminsl.vsvl
llvm.ve.vl.vminsl.vsvmvl
llvm.ve.vl.vminsl.vsvvl
llvm.ve.vl.vminsl.vvvl
llvm.ve.vl.vminsl.vvvmvl
llvm.ve.vl.vminsl.vvvvl
llvm.ve.vl.vminswsx.vsvl
llvm.ve.vl.vminswsx.vsvmvl
llvm.ve.vl.vminswsx.vsvvl
llvm.ve.vl.vminswsx.vvvl
llvm.ve.vl.vminswsx.vvvmvl
llvm.ve.vl.vminswsx.vvvvl
llvm.ve.vl.vminswzx.vsvl
llvm.ve.vl.vminswzx.vsvmvl
llvm.ve.vl.vminswzx.vsvvl
llvm.ve.vl.vminswzx.vvvl
llvm.ve.vl.vminswzx.vvvmvl
llvm.ve.vl.vminswzx.vvvvl
llvm.ve.vl.vmrg.vsvml
llvm.ve.vl.vmrg.vsvmvl
llvm.ve.vl.vmrg.vvvml
llvm.ve.vl.vmrg.vvvmvl
llvm.ve.vl.vmrgw.vsvMl
llvm.ve.vl.vmrgw.vsvMvl
llvm.ve.vl.vmrgw.vvvMl
llvm.ve.vl.vmrgw.vvvMvl
llvm.ve.vl.vmulsl.vsvl
llvm.ve.vl.vmulsl.vsvmvl
llvm.ve.vl.vmulsl.vsvvl
llvm.ve.vl.vmulsl.vvvl
llvm.ve.vl.vmulsl.vvvmvl
llvm.ve.vl.vmulsl.vvvvl
llvm.ve.vl.vmulslw.vsvl
llvm.ve.vl.vmulslw.vsvvl
llvm.ve.vl.vmulslw.vvvl
llvm.ve.vl.vmulslw.vvvvl
llvm.ve.vl.vmulswsx.vsvl
llvm.ve.vl.vmulswsx.vsvmvl
llvm.ve.vl.vmulswsx.vsvvl
llvm.ve.vl.vmulswsx.vvvl
llvm.ve.vl.vmulswsx.vvvmvl
llvm.ve.vl.vmulswsx.vvvvl
llvm.ve.vl.vmulswzx.vsvl
llvm.ve.vl.vmulswzx.vsvmvl
llvm.ve.vl.vmulswzx.vsvvl
llvm.ve.vl.vmulswzx.vvvl
llvm.ve.vl.vmulswzx.vvvmvl
llvm.ve.vl.vmulswzx.vvvvl
llvm.ve.vl.vmulul.vsvl
llvm.ve.vl.vmulul.vsvmvl
llvm.ve.vl.vmulul.vsvvl
llvm.ve.vl.vmulul.vvvl
llvm.ve.vl.vmulul.vvvmvl
llvm.ve.vl.vmulul.vvvvl
llvm.ve.vl.vmuluw.vsvl
llvm.ve.vl.vmuluw.vsvmvl
llvm.ve.vl.vmuluw.vsvvl
llvm.ve.vl.vmuluw.vvvl
llvm.ve.vl.vmuluw.vvvmvl
llvm.ve.vl.vmuluw.vvvvl
llvm.ve.vl.vmv.vsvl
llvm.ve.vl.vmv.vsvmvl
llvm.ve.vl.vmv.vsvvl
llvm.ve.vl.vor.vsvl
llvm.ve.vl.vor.vsvmvl
llvm.ve.vl.vor.vsvvl
llvm.ve.vl.vor.vvvl
llvm.ve.vl.vor.vvvmvl
llvm.ve.vl.vor.vvvvl
llvm.ve.vl.vrand.vvl
llvm.ve.vl.vrand.vvml
llvm.ve.vl.vrcpd.vvl
llvm.ve.vl.vrcpd.vvvl
llvm.ve.vl.vrcps.vvl
llvm.ve.vl.vrcps.vvvl
llvm.ve.vl.vrmaxslfst.vvl
llvm.ve.vl.vrmaxslfst.vvvl
llvm.ve.vl.vrmaxsllst.vvl
llvm.ve.vl.vrmaxsllst.vvvl
llvm.ve.vl.vrmaxswfstsx.vvl
llvm.ve.vl.vrmaxswfstsx.vvvl
llvm.ve.vl.vrmaxswfstzx.vvl
llvm.ve.vl.vrmaxswfstzx.vvvl
llvm.ve.vl.vrmaxswlstsx.vvl
llvm.ve.vl.vrmaxswlstsx.vvvl
llvm.ve.vl.vrmaxswlstzx.vvl
llvm.ve.vl.vrmaxswlstzx.vvvl
llvm.ve.vl.vrminslfst.vvl
llvm.ve.vl.vrminslfst.vvvl
llvm.ve.vl.vrminsllst.vvl
llvm.ve.vl.vrminsllst.vvvl
llvm.ve.vl.vrminswfstsx.vvl
llvm.ve.vl.vrminswfstsx.vvvl
llvm.ve.vl.vrminswfstzx.vvl
llvm.ve.vl.vrminswfstzx.vvvl
llvm.ve.vl.vrminswlstsx.vvl
llvm.ve.vl.vrminswlstsx.vvvl
llvm.ve.vl.vrminswlstzx.vvl
llvm.ve.vl.vrminswlstzx.vvvl
llvm.ve.vl.vror.vvl
llvm.ve.vl.vror.vvml
llvm.ve.vl.vrsqrtd.vvl
llvm.ve.vl.vrsqrtd.vvvl
llvm.ve.vl.vrsqrtdnex.vvl
llvm.ve.vl.vrsqrtdnex.vvvl
llvm.ve.vl.vrsqrts.vvl
llvm.ve.vl.vrsqrts.vvvl
llvm.ve.vl.vrsqrtsnex.vvl
llvm.ve.vl.vrsqrtsnex.vvvl
llvm.ve.vl.vrxor.vvl
llvm.ve.vl.vrxor.vvml
llvm.ve.vl.vsc.vvssl
llvm.ve.vl.vsc.vvssml
llvm.ve.vl.vscl.vvssl
llvm.ve.vl.vscl.vvssml
llvm.ve.vl.vsclnc.vvssl
llvm.ve.vl.vsclnc.vvssml
llvm.ve.vl.vsclncot.vvssl
llvm.ve.vl.vsclncot.vvssml
llvm.ve.vl.vsclot.vvssl
llvm.ve.vl.vsclot.vvssml
llvm.ve.vl.vscnc.vvssl
llvm.ve.vl.vscnc.vvssml
llvm.ve.vl.vscncot.vvssl
llvm.ve.vl.vscncot.vvssml
llvm.ve.vl.vscot.vvssl
llvm.ve.vl.vscot.vvssml
llvm.ve.vl.vscu.vvssl
llvm.ve.vl.vscu.vvssml
llvm.ve.vl.vscunc.vvssl
llvm.ve.vl.vscunc.vvssml
llvm.ve.vl.vscuncot.vvssl
llvm.ve.vl.vscuncot.vvssml
llvm.ve.vl.vscuot.vvssl
llvm.ve.vl.vscuot.vvssml
llvm.ve.vl.vseq.vl
llvm.ve.vl.vseq.vvl
llvm.ve.vl.vsfa.vvssl
llvm.ve.vl.vsfa.vvssmvl
llvm.ve.vl.vsfa.vvssvl
llvm.ve.vl.vshf.vvvsl
llvm.ve.vl.vshf.vvvsvl
llvm.ve.vl.vslal.vvsl
llvm.ve.vl.vslal.vvsmvl
llvm.ve.vl.vslal.vvsvl
llvm.ve.vl.vslal.vvvl
llvm.ve.vl.vslal.vvvmvl
llvm.ve.vl.vslal.vvvvl
llvm.ve.vl.vslawsx.vvsl
llvm.ve.vl.vslawsx.vvsmvl
llvm.ve.vl.vslawsx.vvsvl
llvm.ve.vl.vslawsx.vvvl
llvm.ve.vl.vslawsx.vvvmvl
llvm.ve.vl.vslawsx.vvvvl
llvm.ve.vl.vslawzx.vvsl
llvm.ve.vl.vslawzx.vvsmvl
llvm.ve.vl.vslawzx.vvsvl
llvm.ve.vl.vslawzx.vvvl
llvm.ve.vl.vslawzx.vvvmvl
llvm.ve.vl.vslawzx.vvvvl
llvm.ve.vl.vsll.vvsl
llvm.ve.vl.vsll.vvsmvl
llvm.ve.vl.vsll.vvsvl
llvm.ve.vl.vsll.vvvl
llvm.ve.vl.vsll.vvvmvl
llvm.ve.vl.vsll.vvvvl
llvm.ve.vl.vsral.vvsl
llvm.ve.vl.vsral.vvsmvl
llvm.ve.vl.vsral.vvsvl
llvm.ve.vl.vsral.vvvl
llvm.ve.vl.vsral.vvvmvl
llvm.ve.vl.vsral.vvvvl
llvm.ve.vl.vsrawsx.vvsl
llvm.ve.vl.vsrawsx.vvsmvl
llvm.ve.vl.vsrawsx.vvsvl
llvm.ve.vl.vsrawsx.vvvl
llvm.ve.vl.vsrawsx.vvvmvl
llvm.ve.vl.vsrawsx.vvvvl
llvm.ve.vl.vsrawzx.vvsl
llvm.ve.vl.vsrawzx.vvsmvl
llvm.ve.vl.vsrawzx.vvsvl
llvm.ve.vl.vsrawzx.vvvl
llvm.ve.vl.vsrawzx.vvvmvl
llvm.ve.vl.vsrawzx.vvvvl
llvm.ve.vl.vsrl.vvsl
llvm.ve.vl.vsrl.vvsmvl
llvm.ve.vl.vsrl.vvsvl
llvm.ve.vl.vsrl.vvvl
llvm.ve.vl.vsrl.vvvmvl
llvm.ve.vl.vsrl.vvvvl
llvm.ve.vl.vst.vssl
llvm.ve.vl.vst.vssml
llvm.ve.vl.vst2d.vssl
llvm.ve.vl.vst2d.vssml
llvm.ve.vl.vst2dnc.vssl
llvm.ve.vl.vst2dnc.vssml
llvm.ve.vl.vst2dncot.vssl
llvm.ve.vl.vst2dncot.vssml
llvm.ve.vl.vst2dot.vssl
llvm.ve.vl.vst2dot.vssml
llvm.ve.vl.vstl.vssl
llvm.ve.vl.vstl.vssml
llvm.ve.vl.vstl2d.vssl
llvm.ve.vl.vstl2d.vssml
llvm.ve.vl.vstl2dnc.vssl
llvm.ve.vl.vstl2dnc.vssml
llvm.ve.vl.vstl2dncot.vssl
llvm.ve.vl.vstl2dncot.vssml
llvm.ve.vl.vstl2dot.vssl
llvm.ve.vl.vstl2dot.vssml
llvm.ve.vl.vstlnc.vssl
llvm.ve.vl.vstlnc.vssml
llvm.ve.vl.vstlncot.vssl
llvm.ve.vl.vstlncot.vssml
llvm.ve.vl.vstlot.vssl
llvm.ve.vl.vstlot.vssml
llvm.ve.vl.vstnc.vssl
llvm.ve.vl.vstnc.vssml
llvm.ve.vl.vstncot.vssl
llvm.ve.vl.vstncot.vssml
llvm.ve.vl.vstot.vssl
llvm.ve.vl.vstot.vssml
llvm.ve.vl.vstu.vssl
llvm.ve.vl.vstu.vssml
llvm.ve.vl.vstu2d.vssl
llvm.ve.vl.vstu2d.vssml
llvm.ve.vl.vstu2dnc.vssl
llvm.ve.vl.vstu2dnc.vssml
llvm.ve.vl.vstu2dncot.vssl
llvm.ve.vl.vstu2dncot.vssml
llvm.ve.vl.vstu2dot.vssl
llvm.ve.vl.vstu2dot.vssml
llvm.ve.vl.vstunc.vssl
llvm.ve.vl.vstunc.vssml
llvm.ve.vl.vstuncot.vssl
llvm.ve.vl.vstuncot.vssml
llvm.ve.vl.vstuot.vssl
llvm.ve.vl.vstuot.vssml
llvm.ve.vl.vsubsl.vsvl
llvm.ve.vl.vsubsl.vsvmvl
llvm.ve.vl.vsubsl.vsvvl
llvm.ve.vl.vsubsl.vvvl
llvm.ve.vl.vsubsl.vvvmvl
llvm.ve.vl.vsubsl.vvvvl
llvm.ve.vl.vsubswsx.vsvl
llvm.ve.vl.vsubswsx.vsvmvl
llvm.ve.vl.vsubswsx.vsvvl
llvm.ve.vl.vsubswsx.vvvl
llvm.ve.vl.vsubswsx.vvvmvl
llvm.ve.vl.vsubswsx.vvvvl
llvm.ve.vl.vsubswzx.vsvl
llvm.ve.vl.vsubswzx.vsvmvl
llvm.ve.vl.vsubswzx.vsvvl
llvm.ve.vl.vsubswzx.vvvl
llvm.ve.vl.vsubswzx.vvvmvl
llvm.ve.vl.vsubswzx.vvvvl
llvm.ve.vl.vsubul.vsvl
llvm.ve.vl.vsubul.vsvmvl
llvm.ve.vl.vsubul.vsvvl
llvm.ve.vl.vsubul.vvvl
llvm.ve.vl.vsubul.vvvmvl
llvm.ve.vl.vsubul.vvvvl
llvm.ve.vl.vsubuw.vsvl
llvm.ve.vl.vsubuw.vsvmvl
llvm.ve.vl.vsubuw.vsvvl
llvm.ve.vl.vsubuw.vvvl
llvm.ve.vl.vsubuw.vvvmvl
llvm.ve.vl.vsubuw.vvvvl
llvm.ve.vl.vsuml.vvl
llvm.ve.vl.vsuml.vvml
llvm.ve.vl.vsumwsx.vvl
llvm.ve.vl.vsumwsx.vvml
llvm.ve.vl.vsumwzx.vvl
llvm.ve.vl.vsumwzx.vvml
llvm.ve.vl.vxor.vsvl
llvm.ve.vl.vxor.vsvmvl
llvm.ve.vl.vxor.vsvvl
llvm.ve.vl.vxor.vvvl
llvm.ve.vl.vxor.vvvmvl
llvm.ve.vl.vxor.vvvvl
llvm.ve.vl.xorm.MMM
llvm.ve.vl.xorm.mmm
llvm.wasm.alltrue
llvm.wasm.anytrue
llvm.wasm.avgr.unsigned
llvm.wasm.bitmask
llvm.wasm.bitselect
llvm.wasm.ceil
llvm.wasm.dot
llvm.wasm.eq
llvm.wasm.extadd.pairwise.signed
llvm.wasm.extadd.pairwise.unsigned
llvm.wasm.extmul.high.signed
llvm.wasm.extmul.high.unsigned
llvm.wasm.extmul.low.signed
llvm.wasm.extmul.low.unsigned
llvm.wasm.extract.exception
llvm.wasm.floor
llvm.wasm.get.ehselector
llvm.wasm.get.exception
llvm.wasm.landingpad.index
llvm.wasm.load16.lane
llvm.wasm.load32.lane
llvm.wasm.load32.zero
llvm.wasm.load64.lane
llvm.wasm.load64.zero
llvm.wasm.load8.lane
llvm.wasm.lsda
llvm.wasm.memory.atomic.notify
llvm.wasm.memory.atomic.wait32
llvm.wasm.memory.atomic.wait64
llvm.wasm.memory.grow
llvm.wasm.memory.size
llvm.wasm.narrow.signed
llvm.wasm.narrow.unsigned
llvm.wasm.nearest
llvm.wasm.pmax
llvm.wasm.pmin
llvm.wasm.popcnt
llvm.wasm.prefetch.nt
llvm.wasm.prefetch.t
llvm.wasm.q15mulr.saturate.signed
llvm.wasm.qfma
llvm.wasm.qfms
llvm.wasm.rethrow.in.catch
llvm.wasm.shuffle
llvm.wasm.signselect
llvm.wasm.store16.lane
llvm.wasm.store32.lane
llvm.wasm.store64.lane
llvm.wasm.store8.lane
llvm.wasm.sub.saturate.signed
llvm.wasm.sub.saturate.unsigned
llvm.wasm.swizzle
llvm.wasm.throw
llvm.wasm.tls.align
llvm.wasm.tls.base
llvm.wasm.tls.size
llvm.wasm.trunc
llvm.wasm.trunc.saturate.signed
llvm.wasm.trunc.saturate.unsigned
llvm.wasm.trunc.signed
llvm.wasm.trunc.unsigned
llvm.wasm.widen.high.signed
llvm.wasm.widen.high.unsigned
llvm.wasm.widen.low.signed
llvm.wasm.widen.low.unsigned
llvm.x86.3dnow.pavgusb
llvm.x86.3dnow.pf2id
llvm.x86.3dnow.pfacc
llvm.x86.3dnow.pfadd
llvm.x86.3dnow.pfcmpeq
llvm.x86.3dnow.pfcmpge
llvm.x86.3dnow.pfcmpgt
llvm.x86.3dnow.pfmax
llvm.x86.3dnow.pfmin
llvm.x86.3dnow.pfmul
llvm.x86.3dnow.pfrcp
llvm.x86.3dnow.pfrcpit1
llvm.x86.3dnow.pfrcpit2
llvm.x86.3dnow.pfrsqit1
llvm.x86.3dnow.pfrsqrt
llvm.x86.3dnow.pfsub
llvm.x86.3dnow.pfsubr
llvm.x86.3dnow.pi2fd
llvm.x86.3dnow.pmulhrw
llvm.x86.3dnowa.pf2iw
llvm.x86.3dnowa.pfnacc
llvm.x86.3dnowa.pfpnacc
llvm.x86.3dnowa.pi2fw
llvm.x86.3dnowa.pswapd
llvm.x86.addcarry.32
llvm.x86.addcarry.64
llvm.x86.aesdec128kl
llvm.x86.aesdec256kl
llvm.x86.aesdecwide128kl
llvm.x86.aesdecwide256kl
llvm.x86.aesenc128kl
llvm.x86.aesenc256kl
llvm.x86.aesencwide128kl
llvm.x86.aesencwide256kl
llvm.x86.aesni.aesdec
llvm.x86.aesni.aesdec.256
llvm.x86.aesni.aesdec.512
llvm.x86.aesni.aesdeclast
llvm.x86.aesni.aesdeclast.256
llvm.x86.aesni.aesdeclast.512
llvm.x86.aesni.aesenc
llvm.x86.aesni.aesenc.256
llvm.x86.aesni.aesenc.512
llvm.x86.aesni.aesenclast
llvm.x86.aesni.aesenclast.256
llvm.x86.aesni.aesenclast.512
llvm.x86.aesni.aesimc
llvm.x86.aesni.aeskeygenassist
llvm.x86.avx.addsub.pd.256
llvm.x86.avx.addsub.ps.256
llvm.x86.avx.blendv.pd.256
llvm.x86.avx.blendv.ps.256
llvm.x86.avx.cmp.pd.256
llvm.x86.avx.cmp.ps.256
llvm.x86.avx.cvt.pd2.ps.256
llvm.x86.avx.cvt.pd2dq.256
llvm.x86.avx.cvt.ps2dq.256
llvm.x86.avx.cvtt.pd2dq.256
llvm.x86.avx.cvtt.ps2dq.256
llvm.x86.avx.dp.ps.256
llvm.x86.avx.hadd.pd.256
llvm.x86.avx.hadd.ps.256
llvm.x86.avx.hsub.pd.256
llvm.x86.avx.hsub.ps.256
llvm.x86.avx.ldu.dq.256
llvm.x86.avx.maskload.pd
llvm.x86.avx.maskload.pd.256
llvm.x86.avx.maskload.ps
llvm.x86.avx.maskload.ps.256
llvm.x86.avx.maskstore.pd
llvm.x86.avx.maskstore.pd.256
llvm.x86.avx.maskstore.ps
llvm.x86.avx.maskstore.ps.256
llvm.x86.avx.max.pd.256
llvm.x86.avx.max.ps.256
llvm.x86.avx.min.pd.256
llvm.x86.avx.min.ps.256
llvm.x86.avx.movmsk.pd.256
llvm.x86.avx.movmsk.ps.256
llvm.x86.avx.ptestc.256
llvm.x86.avx.ptestnzc.256
llvm.x86.avx.ptestz.256
llvm.x86.avx.rcp.ps.256
llvm.x86.avx.round.pd.256
llvm.x86.avx.round.ps.256
llvm.x86.avx.rsqrt.ps.256
llvm.x86.avx.vpermilvar.pd
llvm.x86.avx.vpermilvar.pd.256
llvm.x86.avx.vpermilvar.ps
llvm.x86.avx.vpermilvar.ps.256
llvm.x86.avx.vtestc.pd
llvm.x86.avx.vtestc.pd.256
llvm.x86.avx.vtestc.ps
llvm.x86.avx.vtestc.ps.256
llvm.x86.avx.vtestnzc.pd
llvm.x86.avx.vtestnzc.pd.256
llvm.x86.avx.vtestnzc.ps
llvm.x86.avx.vtestnzc.ps.256
llvm.x86.avx.vtestz.pd
llvm.x86.avx.vtestz.pd.256
llvm.x86.avx.vtestz.ps
llvm.x86.avx.vtestz.ps.256
llvm.x86.avx.vzeroall
llvm.x86.avx.vzeroupper
llvm.x86.avx2.gather.d.d
llvm.x86.avx2.gather.d.d.256
llvm.x86.avx2.gather.d.pd
llvm.x86.avx2.gather.d.pd.256
llvm.x86.avx2.gather.d.ps
llvm.x86.avx2.gather.d.ps.256
llvm.x86.avx2.gather.d.q
llvm.x86.avx2.gather.d.q.256
llvm.x86.avx2.gather.q.d
llvm.x86.avx2.gather.q.d.256
llvm.x86.avx2.gather.q.pd
llvm.x86.avx2.gather.q.pd.256
llvm.x86.avx2.gather.q.ps
llvm.x86.avx2.gather.q.ps.256
llvm.x86.avx2.gather.q.q
llvm.x86.avx2.gather.q.q.256
llvm.x86.avx2.maskload.d
llvm.x86.avx2.maskload.d.256
llvm.x86.avx2.maskload.q
llvm.x86.avx2.maskload.q.256
llvm.x86.avx2.maskstore.d
llvm.x86.avx2.maskstore.d.256
llvm.x86.avx2.maskstore.q
llvm.x86.avx2.maskstore.q.256
llvm.x86.avx2.mpsadbw
llvm.x86.avx2.packssdw
llvm.x86.avx2.packsswb
llvm.x86.avx2.packusdw
llvm.x86.avx2.packuswb
llvm.x86.avx2.pavg.b
llvm.x86.avx2.pavg.w
llvm.x86.avx2.pblendvb
llvm.x86.avx2.permd
llvm.x86.avx2.permps
llvm.x86.avx2.phadd.d
llvm.x86.avx2.phadd.sw
llvm.x86.avx2.phadd.w
llvm.x86.avx2.phsub.d
llvm.x86.avx2.phsub.sw
llvm.x86.avx2.phsub.w
llvm.x86.avx2.pmadd.ub.sw
llvm.x86.avx2.pmadd.wd
llvm.x86.avx2.pmovmskb
llvm.x86.avx2.pmul.hr.sw
llvm.x86.avx2.pmulh.w
llvm.x86.avx2.pmulhu.w
llvm.x86.avx2.psad.bw
llvm.x86.avx2.pshuf.b
llvm.x86.avx2.psign.b
llvm.x86.avx2.psign.d
llvm.x86.avx2.psign.w
llvm.x86.avx2.psll.d
llvm.x86.avx2.psll.q
llvm.x86.avx2.psll.w
llvm.x86.avx2.pslli.d
llvm.x86.avx2.pslli.q
llvm.x86.avx2.pslli.w
llvm.x86.avx2.psllv.d
llvm.x86.avx2.psllv.d.256
llvm.x86.avx2.psllv.q
llvm.x86.avx2.psllv.q.256
llvm.x86.avx2.psra.d
llvm.x86.avx2.psra.w
llvm.x86.avx2.psrai.d
llvm.x86.avx2.psrai.w
llvm.x86.avx2.psrav.d
llvm.x86.avx2.psrav.d.256
llvm.x86.avx2.psrl.d
llvm.x86.avx2.psrl.q
llvm.x86.avx2.psrl.w
llvm.x86.avx2.psrli.d
llvm.x86.avx2.psrli.q
llvm.x86.avx2.psrli.w
llvm.x86.avx2.psrlv.d
llvm.x86.avx2.psrlv.d.256
llvm.x86.avx2.psrlv.q
llvm.x86.avx2.psrlv.q.256
llvm.x86.avx512.add.pd.512
llvm.x86.avx512.add.ps.512
llvm.x86.avx512.broadcastmb.128
llvm.x86.avx512.broadcastmb.256
llvm.x86.avx512.broadcastmb.512
llvm.x86.avx512.broadcastmw.128
llvm.x86.avx512.broadcastmw.256
llvm.x86.avx512.broadcastmw.512
llvm.x86.avx512.conflict.d.128
llvm.x86.avx512.conflict.d.256
llvm.x86.avx512.conflict.d.512
llvm.x86.avx512.conflict.q.128
llvm.x86.avx512.conflict.q.256
llvm.x86.avx512.conflict.q.512
llvm.x86.avx512.cvtsi2sd64
llvm.x86.avx512.cvtsi2ss32
llvm.x86.avx512.cvtsi2ss64
llvm.x86.avx512.cvttsd2si
llvm.x86.avx512.cvttsd2si64
llvm.x86.avx512.cvttsd2usi
llvm.x86.avx512.cvttsd2usi64
llvm.x86.avx512.cvttss2si
llvm.x86.avx512.cvttss2si64
llvm.x86.avx512.cvttss2usi
llvm.x86.avx512.cvttss2usi64
llvm.x86.avx512.cvtusi2ss
llvm.x86.avx512.cvtusi642sd
llvm.x86.avx512.cvtusi642ss
llvm.x86.avx512.dbpsadbw.128
llvm.x86.avx512.dbpsadbw.256
llvm.x86.avx512.dbpsadbw.512
llvm.x86.avx512.div.pd.512
llvm.x86.avx512.div.ps.512
llvm.x86.avx512.exp2.pd
llvm.x86.avx512.exp2.ps
llvm.x86.avx512.fpclass.pd.128
llvm.x86.avx512.fpclass.pd.256
llvm.x86.avx512.fpclass.pd.512
llvm.x86.avx512.fpclass.ps.128
llvm.x86.avx512.fpclass.ps.256
llvm.x86.avx512.fpclass.ps.512
llvm.x86.avx512.gather.dpd.512
llvm.x86.avx512.gather.dpi.512
llvm.x86.avx512.gather.dpq.512
llvm.x86.avx512.gather.dps.512
llvm.x86.avx512.gather.qpd.512
llvm.x86.avx512.gather.qpi.512
llvm.x86.avx512.gather.qpq.512
llvm.x86.avx512.gather.qps.512
llvm.x86.avx512.gather3div2.df
llvm.x86.avx512.gather3div2.di
llvm.x86.avx512.gather3div4.df
llvm.x86.avx512.gather3div4.di
llvm.x86.avx512.gather3div4.sf
llvm.x86.avx512.gather3div4.si
llvm.x86.avx512.gather3div8.sf
llvm.x86.avx512.gather3div8.si
llvm.x86.avx512.gather3siv2.df
llvm.x86.avx512.gather3siv2.di
llvm.x86.avx512.gather3siv4.df
llvm.x86.avx512.gather3siv4.di
llvm.x86.avx512.gather3siv4.sf
llvm.x86.avx512.gather3siv4.si
llvm.x86.avx512.gather3siv8.sf
llvm.x86.avx512.gather3siv8.si
llvm.x86.avx512.gatherpf.dpd.512
llvm.x86.avx512.gatherpf.dps.512
llvm.x86.avx512.gatherpf.qpd.512
llvm.x86.avx512.gatherpf.qps.512
llvm.x86.avx512.kadd.b
llvm.x86.avx512.kadd.d
llvm.x86.avx512.kadd.q
llvm.x86.avx512.kadd.w
llvm.x86.avx512.ktestc.b
llvm.x86.avx512.ktestc.d
llvm.x86.avx512.ktestc.q
llvm.x86.avx512.ktestc.w
llvm.x86.avx512.ktestz.b
llvm.x86.avx512.ktestz.d
llvm.x86.avx512.ktestz.q
llvm.x86.avx512.ktestz.w
llvm.x86.avx512.mask.add.sd.round
llvm.x86.avx512.mask.add.ss.round
llvm.x86.avx512.mask.cmp.pd.128
llvm.x86.avx512.mask.cmp.pd.256
llvm.x86.avx512.mask.cmp.pd.512
llvm.x86.avx512.mask.cmp.ps.128
llvm.x86.avx512.mask.cmp.ps.256
llvm.x86.avx512.mask.cmp.ps.512
llvm.x86.avx512.mask.cmp.sd
llvm.x86.avx512.mask.cmp.ss
llvm.x86.avx512.mask.compress
llvm.x86.avx512.mask.cvtpd2dq.128
llvm.x86.avx512.mask.cvtpd2dq.512
llvm.x86.avx512.mask.cvtpd2ps
llvm.x86.avx512.mask.cvtpd2ps.512
llvm.x86.avx512.mask.cvtpd2qq.128
llvm.x86.avx512.mask.cvtpd2qq.256
llvm.x86.avx512.mask.cvtpd2qq.512
llvm.x86.avx512.mask.cvtpd2udq.128
llvm.x86.avx512.mask.cvtpd2udq.256
llvm.x86.avx512.mask.cvtpd2udq.512
llvm.x86.avx512.mask.cvtpd2uqq.128
llvm.x86.avx512.mask.cvtpd2uqq.256
llvm.x86.avx512.mask.cvtpd2uqq.512
llvm.x86.avx512.mask.cvtps2dq.128
llvm.x86.avx512.mask.cvtps2dq.256
llvm.x86.avx512.mask.cvtps2dq.512
llvm.x86.avx512.mask.cvtps2pd.512
llvm.x86.avx512.mask.cvtps2qq.128
llvm.x86.avx512.mask.cvtps2qq.256
llvm.x86.avx512.mask.cvtps2qq.512
llvm.x86.avx512.mask.cvtps2udq.128
llvm.x86.avx512.mask.cvtps2udq.256
llvm.x86.avx512.mask.cvtps2udq.512
llvm.x86.avx512.mask.cvtps2uqq.128
llvm.x86.avx512.mask.cvtps2uqq.256
llvm.x86.avx512.mask.cvtps2uqq.512
llvm.x86.avx512.mask.cvtqq2ps.128
llvm.x86.avx512.mask.cvtsd2ss.round
llvm.x86.avx512.mask.cvtss2sd.round
llvm.x86.avx512.mask.cvttpd2dq.128
llvm.x86.avx512.mask.cvttpd2dq.512
llvm.x86.avx512.mask.cvttpd2qq.128
llvm.x86.avx512.mask.cvttpd2qq.256
llvm.x86.avx512.mask.cvttpd2qq.512
llvm.x86.avx512.mask.cvttpd2udq.128
llvm.x86.avx512.mask.cvttpd2udq.256
llvm.x86.avx512.mask.cvttpd2udq.512
llvm.x86.avx512.mask.cvttpd2uqq.128
llvm.x86.avx512.mask.cvttpd2uqq.256
llvm.x86.avx512.mask.cvttpd2uqq.512
llvm.x86.avx512.mask.cvttps2dq.512
llvm.x86.avx512.mask.cvttps2qq.128
llvm.x86.avx512.mask.cvttps2qq.256
llvm.x86.avx512.mask.cvttps2qq.512
llvm.x86.avx512.mask.cvttps2udq.128
llvm.x86.avx512.mask.cvttps2udq.256
llvm.x86.avx512.mask.cvttps2udq.512
llvm.x86.avx512.mask.cvttps2uqq.128
llvm.x86.avx512.mask.cvttps2uqq.256
llvm.x86.avx512.mask.cvttps2uqq.512
llvm.x86.avx512.mask.cvtuqq2ps.128
llvm.x86.avx512.mask.div.sd.round
llvm.x86.avx512.mask.div.ss.round
llvm.x86.avx512.mask.expand
llvm.x86.avx512.mask.fixupimm.pd.128
llvm.x86.avx512.mask.fixupimm.pd.256
llvm.x86.avx512.mask.fixupimm.pd.512
llvm.x86.avx512.mask.fixupimm.ps.128
llvm.x86.avx512.mask.fixupimm.ps.256
llvm.x86.avx512.mask.fixupimm.ps.512
llvm.x86.avx512.mask.fixupimm.sd
llvm.x86.avx512.mask.fixupimm.ss
llvm.x86.avx512.mask.fpclass.sd
llvm.x86.avx512.mask.fpclass.ss
llvm.x86.avx512.mask.gather.dpd.512
llvm.x86.avx512.mask.gather.dpi.512
llvm.x86.avx512.mask.gather.dpq.512
llvm.x86.avx512.mask.gather.dps.512
llvm.x86.avx512.mask.gather.qpd.512
llvm.x86.avx512.mask.gather.qpi.512
llvm.x86.avx512.mask.gather.qpq.512
llvm.x86.avx512.mask.gather.qps.512
llvm.x86.avx512.mask.gather3div2.df
llvm.x86.avx512.mask.gather3div2.di
llvm.x86.avx512.mask.gather3div4.df
llvm.x86.avx512.mask.gather3div4.di
llvm.x86.avx512.mask.gather3div4.sf
llvm.x86.avx512.mask.gather3div4.si
llvm.x86.avx512.mask.gather3div8.sf
llvm.x86.avx512.mask.gather3div8.si
llvm.x86.avx512.mask.gather3siv2.df
llvm.x86.avx512.mask.gather3siv2.di
llvm.x86.avx512.mask.gather3siv4.df
llvm.x86.avx512.mask.gather3siv4.di
llvm.x86.avx512.mask.gather3siv4.sf
llvm.x86.avx512.mask.gather3siv4.si
llvm.x86.avx512.mask.gather3siv8.sf
llvm.x86.avx512.mask.gather3siv8.si
llvm.x86.avx512.mask.getexp.pd.128
llvm.x86.avx512.mask.getexp.pd.256
llvm.x86.avx512.mask.getexp.pd.512
llvm.x86.avx512.mask.getexp.ps.128
llvm.x86.avx512.mask.getexp.ps.256
llvm.x86.avx512.mask.getexp.ps.512
llvm.x86.avx512.mask.getexp.sd
llvm.x86.avx512.mask.getexp.ss
llvm.x86.avx512.mask.getmant.pd.128
llvm.x86.avx512.mask.getmant.pd.256
llvm.x86.avx512.mask.getmant.pd.512
llvm.x86.avx512.mask.getmant.ps.128
llvm.x86.avx512.mask.getmant.ps.256
llvm.x86.avx512.mask.getmant.ps.512
llvm.x86.avx512.mask.getmant.sd
llvm.x86.avx512.mask.getmant.ss
llvm.x86.avx512.mask.max.sd.round
llvm.x86.avx512.mask.max.ss.round
llvm.x86.avx512.mask.min.sd.round
llvm.x86.avx512.mask.min.ss.round
llvm.x86.avx512.mask.mul.sd.round
llvm.x86.avx512.mask.mul.ss.round
llvm.x86.avx512.mask.pmov.db.128
llvm.x86.avx512.mask.pmov.db.256
llvm.x86.avx512.mask.pmov.db.512
llvm.x86.avx512.mask.pmov.db.mem.128
llvm.x86.avx512.mask.pmov.db.mem.256
llvm.x86.avx512.mask.pmov.db.mem.512
llvm.x86.avx512.mask.pmov.dw.128
llvm.x86.avx512.mask.pmov.dw.256
llvm.x86.avx512.mask.pmov.dw.512
llvm.x86.avx512.mask.pmov.dw.mem.128
llvm.x86.avx512.mask.pmov.dw.mem.256
llvm.x86.avx512.mask.pmov.dw.mem.512
llvm.x86.avx512.mask.pmov.qb.128
llvm.x86.avx512.mask.pmov.qb.256
llvm.x86.avx512.mask.pmov.qb.512
llvm.x86.avx512.mask.pmov.qb.mem.128
llvm.x86.avx512.mask.pmov.qb.mem.256
llvm.x86.avx512.mask.pmov.qb.mem.512
llvm.x86.avx512.mask.pmov.qd.128
llvm.x86.avx512.mask.pmov.qd.mem.128
llvm.x86.avx512.mask.pmov.qd.mem.256
llvm.x86.avx512.mask.pmov.qd.mem.512
llvm.x86.avx512.mask.pmov.qw.128
llvm.x86.avx512.mask.pmov.qw.256
llvm.x86.avx512.mask.pmov.qw.512
llvm.x86.avx512.mask.pmov.qw.mem.128
llvm.x86.avx512.mask.pmov.qw.mem.256
llvm.x86.avx512.mask.pmov.qw.mem.512
llvm.x86.avx512.mask.pmov.wb.128
llvm.x86.avx512.mask.pmov.wb.mem.128
llvm.x86.avx512.mask.pmov.wb.mem.256
llvm.x86.avx512.mask.pmov.wb.mem.512
llvm.x86.avx512.mask.pmovs.db.128
llvm.x86.avx512.mask.pmovs.db.256
llvm.x86.avx512.mask.pmovs.db.512
llvm.x86.avx512.mask.pmovs.db.mem.128
llvm.x86.avx512.mask.pmovs.db.mem.256
llvm.x86.avx512.mask.pmovs.db.mem.512
llvm.x86.avx512.mask.pmovs.dw.128
llvm.x86.avx512.mask.pmovs.dw.256
llvm.x86.avx512.mask.pmovs.dw.512
llvm.x86.avx512.mask.pmovs.dw.mem.128
llvm.x86.avx512.mask.pmovs.dw.mem.256
llvm.x86.avx512.mask.pmovs.dw.mem.512
llvm.x86.avx512.mask.pmovs.qb.128
llvm.x86.avx512.mask.pmovs.qb.256
llvm.x86.avx512.mask.pmovs.qb.512
llvm.x86.avx512.mask.pmovs.qb.mem.128
llvm.x86.avx512.mask.pmovs.qb.mem.256
llvm.x86.avx512.mask.pmovs.qb.mem.512
llvm.x86.avx512.mask.pmovs.qd.128
llvm.x86.avx512.mask.pmovs.qd.256
llvm.x86.avx512.mask.pmovs.qd.512
llvm.x86.avx512.mask.pmovs.qd.mem.128
llvm.x86.avx512.mask.pmovs.qd.mem.256
llvm.x86.avx512.mask.pmovs.qd.mem.512
llvm.x86.avx512.mask.pmovs.qw.128
llvm.x86.avx512.mask.pmovs.qw.256
llvm.x86.avx512.mask.pmovs.qw.512
llvm.x86.avx512.mask.pmovs.qw.mem.128
llvm.x86.avx512.mask.pmovs.qw.mem.256
llvm.x86.avx512.mask.pmovs.qw.mem.512
llvm.x86.avx512.mask.pmovs.wb.128
llvm.x86.avx512.mask.pmovs.wb.256
llvm.x86.avx512.mask.pmovs.wb.512
llvm.x86.avx512.mask.pmovs.wb.mem.128
llvm.x86.avx512.mask.pmovs.wb.mem.256
llvm.x86.avx512.mask.pmovs.wb.mem.512
llvm.x86.avx512.mask.pmovus.db.128
llvm.x86.avx512.mask.pmovus.db.256
llvm.x86.avx512.mask.pmovus.db.512
llvm.x86.avx512.mask.pmovus.db.mem.128
llvm.x86.avx512.mask.pmovus.db.mem.256
llvm.x86.avx512.mask.pmovus.db.mem.512
llvm.x86.avx512.mask.pmovus.dw.128
llvm.x86.avx512.mask.pmovus.dw.256
llvm.x86.avx512.mask.pmovus.dw.512
llvm.x86.avx512.mask.pmovus.dw.mem.128
llvm.x86.avx512.mask.pmovus.dw.mem.256
llvm.x86.avx512.mask.pmovus.dw.mem.512
llvm.x86.avx512.mask.pmovus.qb.128
llvm.x86.avx512.mask.pmovus.qb.256
llvm.x86.avx512.mask.pmovus.qb.512
llvm.x86.avx512.mask.pmovus.qb.mem.128
llvm.x86.avx512.mask.pmovus.qb.mem.256
llvm.x86.avx512.mask.pmovus.qb.mem.512
llvm.x86.avx512.mask.pmovus.qd.128
llvm.x86.avx512.mask.pmovus.qd.256
llvm.x86.avx512.mask.pmovus.qd.512
llvm.x86.avx512.mask.pmovus.qd.mem.128
llvm.x86.avx512.mask.pmovus.qd.mem.256
llvm.x86.avx512.mask.pmovus.qd.mem.512
llvm.x86.avx512.mask.pmovus.qw.128
llvm.x86.avx512.mask.pmovus.qw.256
llvm.x86.avx512.mask.pmovus.qw.512
llvm.x86.avx512.mask.pmovus.qw.mem.128
llvm.x86.avx512.mask.pmovus.qw.mem.256
llvm.x86.avx512.mask.pmovus.qw.mem.512
llvm.x86.avx512.mask.pmovus.wb.128
llvm.x86.avx512.mask.pmovus.wb.256
llvm.x86.avx512.mask.pmovus.wb.512
llvm.x86.avx512.mask.pmovus.wb.mem.128
llvm.x86.avx512.mask.pmovus.wb.mem.256
llvm.x86.avx512.mask.pmovus.wb.mem.512
llvm.x86.avx512.mask.range.pd.128
llvm.x86.avx512.mask.range.pd.256
llvm.x86.avx512.mask.range.pd.512
llvm.x86.avx512.mask.range.ps.128
llvm.x86.avx512.mask.range.ps.256
llvm.x86.avx512.mask.range.ps.512
llvm.x86.avx512.mask.range.sd
llvm.x86.avx512.mask.range.ss
llvm.x86.avx512.mask.reduce.pd.128
llvm.x86.avx512.mask.reduce.pd.256
llvm.x86.avx512.mask.reduce.pd.512
llvm.x86.avx512.mask.reduce.ps.128
llvm.x86.avx512.mask.reduce.ps.256
llvm.x86.avx512.mask.reduce.ps.512
llvm.x86.avx512.mask.reduce.sd
llvm.x86.avx512.mask.reduce.ss
llvm.x86.avx512.mask.rndscale.pd.128
llvm.x86.avx512.mask.rndscale.pd.256
llvm.x86.avx512.mask.rndscale.pd.512
llvm.x86.avx512.mask.rndscale.ps.128
llvm.x86.avx512.mask.rndscale.ps.256
llvm.x86.avx512.mask.rndscale.ps.512
llvm.x86.avx512.mask.rndscale.sd
llvm.x86.avx512.mask.rndscale.ss
llvm.x86.avx512.mask.scalef.pd.128
llvm.x86.avx512.mask.scalef.pd.256
llvm.x86.avx512.mask.scalef.pd.512
llvm.x86.avx512.mask.scalef.ps.128
llvm.x86.avx512.mask.scalef.ps.256
llvm.x86.avx512.mask.scalef.ps.512
llvm.x86.avx512.mask.scalef.sd
llvm.x86.avx512.mask.scalef.ss
llvm.x86.avx512.mask.scatter.dpd.512
llvm.x86.avx512.mask.scatter.dpi.512
llvm.x86.avx512.mask.scatter.dpq.512
llvm.x86.avx512.mask.scatter.dps.512
llvm.x86.avx512.mask.scatter.qpd.512
llvm.x86.avx512.mask.scatter.qpi.512
llvm.x86.avx512.mask.scatter.qpq.512
llvm.x86.avx512.mask.scatter.qps.512
llvm.x86.avx512.mask.scatterdiv2.df
llvm.x86.avx512.mask.scatterdiv2.di
llvm.x86.avx512.mask.scatterdiv4.df
llvm.x86.avx512.mask.scatterdiv4.di
llvm.x86.avx512.mask.scatterdiv4.sf
llvm.x86.avx512.mask.scatterdiv4.si
llvm.x86.avx512.mask.scatterdiv8.sf
llvm.x86.avx512.mask.scatterdiv8.si
llvm.x86.avx512.mask.scattersiv2.df
llvm.x86.avx512.mask.scattersiv2.di
llvm.x86.avx512.mask.scattersiv4.df
llvm.x86.avx512.mask.scattersiv4.di
llvm.x86.avx512.mask.scattersiv4.sf
llvm.x86.avx512.mask.scattersiv4.si
llvm.x86.avx512.mask.scattersiv8.sf
llvm.x86.avx512.mask.scattersiv8.si
llvm.x86.avx512.mask.sqrt.sd
llvm.x86.avx512.mask.sqrt.ss
llvm.x86.avx512.mask.sub.sd.round
llvm.x86.avx512.mask.sub.ss.round
llvm.x86.avx512.mask.vcvtph2ps.512
llvm.x86.avx512.mask.vcvtps2ph.128
llvm.x86.avx512.mask.vcvtps2ph.256
llvm.x86.avx512.mask.vcvtps2ph.512
llvm.x86.avx512.maskz.fixupimm.pd.128
llvm.x86.avx512.maskz.fixupimm.pd.256
llvm.x86.avx512.maskz.fixupimm.pd.512
llvm.x86.avx512.maskz.fixupimm.ps.128
llvm.x86.avx512.maskz.fixupimm.ps.256
llvm.x86.avx512.maskz.fixupimm.ps.512
llvm.x86.avx512.maskz.fixupimm.sd
llvm.x86.avx512.maskz.fixupimm.ss
llvm.x86.avx512.max.pd.512
llvm.x86.avx512.max.ps.512
llvm.x86.avx512.min.pd.512
llvm.x86.avx512.min.ps.512
llvm.x86.avx512.mul.pd.512
llvm.x86.avx512.mul.ps.512
llvm.x86.avx512.packssdw.512
llvm.x86.avx512.packsswb.512
llvm.x86.avx512.packusdw.512
llvm.x86.avx512.packuswb.512
llvm.x86.avx512.pavg.b.512
llvm.x86.avx512.pavg.w.512
llvm.x86.avx512.permvar.df.256
llvm.x86.avx512.permvar.df.512
llvm.x86.avx512.permvar.di.256
llvm.x86.avx512.permvar.di.512
llvm.x86.avx512.permvar.hi.128
llvm.x86.avx512.permvar.hi.256
llvm.x86.avx512.permvar.hi.512
llvm.x86.avx512.permvar.qi.128
llvm.x86.avx512.permvar.qi.256
llvm.x86.avx512.permvar.qi.512
llvm.x86.avx512.permvar.sf.512
llvm.x86.avx512.permvar.si.512
llvm.x86.avx512.pmaddubs.w.512
llvm.x86.avx512.pmaddw.d.512
llvm.x86.avx512.pmul.hr.sw.512
llvm.x86.avx512.pmulh.w.512
llvm.x86.avx512.pmulhu.w.512
llvm.x86.avx512.pmultishift.qb.128
llvm.x86.avx512.pmultishift.qb.256
llvm.x86.avx512.pmultishift.qb.512
llvm.x86.avx512.psad.bw.512
llvm.x86.avx512.pshuf.b.512
llvm.x86.avx512.psll.d.512
llvm.x86.avx512.psll.q.512
llvm.x86.avx512.psll.w.512
llvm.x86.avx512.pslli.d.512
llvm.x86.avx512.pslli.q.512
llvm.x86.avx512.pslli.w.512
llvm.x86.avx512.psllv.d.512
llvm.x86.avx512.psllv.q.512
llvm.x86.avx512.psllv.w.128
llvm.x86.avx512.psllv.w.256
llvm.x86.avx512.psllv.w.512
llvm.x86.avx512.psra.d.512
llvm.x86.avx512.psra.q.128
llvm.x86.avx512.psra.q.256
llvm.x86.avx512.psra.q.512
llvm.x86.avx512.psra.w.512
llvm.x86.avx512.psrai.d.512
llvm.x86.avx512.psrai.q.128
llvm.x86.avx512.psrai.q.256
llvm.x86.avx512.psrai.q.512
llvm.x86.avx512.psrai.w.512
llvm.x86.avx512.psrav.d.512
llvm.x86.avx512.psrav.q.128
llvm.x86.avx512.psrav.q.256
llvm.x86.avx512.psrav.q.512
llvm.x86.avx512.psrav.w.128
llvm.x86.avx512.psrav.w.256
llvm.x86.avx512.psrav.w.512
llvm.x86.avx512.psrl.d.512
llvm.x86.avx512.psrl.q.512
llvm.x86.avx512.psrl.w.512
llvm.x86.avx512.psrli.d.512
llvm.x86.avx512.psrli.q.512
llvm.x86.avx512.psrli.w.512
llvm.x86.avx512.psrlv.d.512
llvm.x86.avx512.psrlv.q.512
llvm.x86.avx512.psrlv.w.128
llvm.x86.avx512.psrlv.w.256
llvm.x86.avx512.psrlv.w.512
llvm.x86.avx512.pternlog.d.128
llvm.x86.avx512.pternlog.d.256
llvm.x86.avx512.pternlog.d.512
llvm.x86.avx512.pternlog.q.128
llvm.x86.avx512.pternlog.q.256
llvm.x86.avx512.pternlog.q.512
llvm.x86.avx512.rcp14.pd.128
llvm.x86.avx512.rcp14.pd.256
llvm.x86.avx512.rcp14.pd.512
llvm.x86.avx512.rcp14.ps.128
llvm.x86.avx512.rcp14.ps.256
llvm.x86.avx512.rcp14.ps.512
llvm.x86.avx512.rcp14.sd
llvm.x86.avx512.rcp14.ss
llvm.x86.avx512.rcp28.pd
llvm.x86.avx512.rcp28.ps
llvm.x86.avx512.rcp28.sd
llvm.x86.avx512.rcp28.ss
llvm.x86.avx512.rsqrt14.pd.128
llvm.x86.avx512.rsqrt14.pd.256
llvm.x86.avx512.rsqrt14.pd.512
llvm.x86.avx512.rsqrt14.ps.128
llvm.x86.avx512.rsqrt14.ps.256
llvm.x86.avx512.rsqrt14.ps.512
llvm.x86.avx512.rsqrt14.sd
llvm.x86.avx512.rsqrt14.ss
llvm.x86.avx512.rsqrt28.pd
llvm.x86.avx512.rsqrt28.ps
llvm.x86.avx512.rsqrt28.sd
llvm.x86.avx512.rsqrt28.ss
llvm.x86.avx512.scatter.dpd.512
llvm.x86.avx512.scatter.dpi.512
llvm.x86.avx512.scatter.dpq.512
llvm.x86.avx512.scatter.dps.512
llvm.x86.avx512.scatter.qpd.512
llvm.x86.avx512.scatter.qpi.512
llvm.x86.avx512.scatter.qpq.512
llvm.x86.avx512.scatter.qps.512
llvm.x86.avx512.scatterdiv2.df
llvm.x86.avx512.scatterdiv2.di
llvm.x86.avx512.scatterdiv4.df
llvm.x86.avx512.scatterdiv4.di
llvm.x86.avx512.scatterdiv4.sf
llvm.x86.avx512.scatterdiv4.si
llvm.x86.avx512.scatterdiv8.sf
llvm.x86.avx512.scatterdiv8.si
llvm.x86.avx512.scatterpf.dpd.512
llvm.x86.avx512.scatterpf.dps.512
llvm.x86.avx512.scatterpf.qpd.512
llvm.x86.avx512.scatterpf.qps.512
llvm.x86.avx512.scattersiv2.df
llvm.x86.avx512.scattersiv2.di
llvm.x86.avx512.scattersiv4.df
llvm.x86.avx512.scattersiv4.di
llvm.x86.avx512.scattersiv4.sf
llvm.x86.avx512.scattersiv4.si
llvm.x86.avx512.scattersiv8.sf
llvm.x86.avx512.scattersiv8.si
llvm.x86.avx512.sitofp.round
llvm.x86.avx512.sqrt.pd.512
llvm.x86.avx512.sqrt.ps.512
llvm.x86.avx512.sub.pd.512
llvm.x86.avx512.sub.ps.512
llvm.x86.avx512.uitofp.round
llvm.x86.avx512.vcomi.sd
llvm.x86.avx512.vcomi.ss
llvm.x86.avx512.vcvtsd2si32
llvm.x86.avx512.vcvtsd2si64
llvm.x86.avx512.vcvtsd2usi32
llvm.x86.avx512.vcvtsd2usi64
llvm.x86.avx512.vcvtss2si32
llvm.x86.avx512.vcvtss2si64
llvm.x86.avx512.vcvtss2usi32
llvm.x86.avx512.vcvtss2usi64
llvm.x86.avx512.vfmadd.f32
llvm.x86.avx512.vfmadd.f64
llvm.x86.avx512.vfmadd.pd.512
llvm.x86.avx512.vfmadd.ps.512
llvm.x86.avx512.vfmaddsub.pd.512
llvm.x86.avx512.vfmaddsub.ps.512
llvm.x86.avx512.vp2intersect.d.128
llvm.x86.avx512.vp2intersect.d.256
llvm.x86.avx512.vp2intersect.d.512
llvm.x86.avx512.vp2intersect.q.128
llvm.x86.avx512.vp2intersect.q.256
llvm.x86.avx512.vp2intersect.q.512
llvm.x86.avx512.vpdpbusd.128
llvm.x86.avx512.vpdpbusd.256
llvm.x86.avx512.vpdpbusd.512
llvm.x86.avx512.vpdpbusds.128
llvm.x86.avx512.vpdpbusds.256
llvm.x86.avx512.vpdpbusds.512
llvm.x86.avx512.vpdpwssd.128
llvm.x86.avx512.vpdpwssd.256
llvm.x86.avx512.vpdpwssd.512
llvm.x86.avx512.vpdpwssds.128
llvm.x86.avx512.vpdpwssds.256
llvm.x86.avx512.vpdpwssds.512
llvm.x86.avx512.vpermi2var.d.128
llvm.x86.avx512.vpermi2var.d.256
llvm.x86.avx512.vpermi2var.d.512
llvm.x86.avx512.vpermi2var.hi.128
llvm.x86.avx512.vpermi2var.hi.256
llvm.x86.avx512.vpermi2var.hi.512
llvm.x86.avx512.vpermi2var.pd.128
llvm.x86.avx512.vpermi2var.pd.256
llvm.x86.avx512.vpermi2var.pd.512
llvm.x86.avx512.vpermi2var.ps.128
llvm.x86.avx512.vpermi2var.ps.256
llvm.x86.avx512.vpermi2var.ps.512
llvm.x86.avx512.vpermi2var.q.128
llvm.x86.avx512.vpermi2var.q.256
llvm.x86.avx512.vpermi2var.q.512
llvm.x86.avx512.vpermi2var.qi.128
llvm.x86.avx512.vpermi2var.qi.256
llvm.x86.avx512.vpermi2var.qi.512
llvm.x86.avx512.vpermilvar.pd.512
llvm.x86.avx512.vpermilvar.ps.512
llvm.x86.avx512.vpmadd52h.uq.128
llvm.x86.avx512.vpmadd52h.uq.256
llvm.x86.avx512.vpmadd52h.uq.512
llvm.x86.avx512.vpmadd52l.uq.128
llvm.x86.avx512.vpmadd52l.uq.256
llvm.x86.avx512.vpmadd52l.uq.512
llvm.x86.avx512.vpshufbitqmb.128
llvm.x86.avx512.vpshufbitqmb.256
llvm.x86.avx512.vpshufbitqmb.512
llvm.x86.avx512bf16.cvtne2ps2bf16.128
llvm.x86.avx512bf16.cvtne2ps2bf16.256
llvm.x86.avx512bf16.cvtne2ps2bf16.512
llvm.x86.avx512bf16.cvtneps2bf16.256
llvm.x86.avx512bf16.cvtneps2bf16.512
llvm.x86.avx512bf16.dpbf16ps.128
llvm.x86.avx512bf16.dpbf16ps.256
llvm.x86.avx512bf16.dpbf16ps.512
llvm.x86.avx512bf16.mask.cvtneps2bf16.128
llvm.x86.bmi.bextr.32
llvm.x86.bmi.bextr.64
llvm.x86.bmi.bzhi.32
llvm.x86.bmi.bzhi.64
llvm.x86.bmi.pdep.32
llvm.x86.bmi.pdep.64
llvm.x86.bmi.pext.32
llvm.x86.bmi.pext.64
llvm.x86.cldemote
llvm.x86.clflushopt
llvm.x86.clrssbsy
llvm.x86.clui
llvm.x86.clwb
llvm.x86.clzero
llvm.x86.directstore32
llvm.x86.directstore64
llvm.x86.encodekey128
llvm.x86.encodekey256
llvm.x86.enqcmd
llvm.x86.enqcmds
llvm.x86.flags.read.u32
llvm.x86.flags.read.u64
llvm.x86.flags.write.u32
llvm.x86.flags.write.u64
llvm.x86.fma.vfmaddsub.pd
llvm.x86.fma.vfmaddsub.pd.256
llvm.x86.fma.vfmaddsub.ps
llvm.x86.fma.vfmaddsub.ps.256
llvm.x86.fxrstor
llvm.x86.fxrstor64
llvm.x86.fxsave
llvm.x86.fxsave64
llvm.x86.incsspd
llvm.x86.incsspq
llvm.x86.int
llvm.x86.invpcid
llvm.x86.ldtilecfg
llvm.x86.llwpcb
llvm.x86.loadiwkey
llvm.x86.lwpins32
llvm.x86.lwpins64
llvm.x86.lwpval32
llvm.x86.lwpval64
llvm.x86.mmx.emms
llvm.x86.mmx.femms
llvm.x86.mmx.maskmovq
llvm.x86.mmx.movnt.dq
llvm.x86.mmx.packssdw
llvm.x86.mmx.packsswb
llvm.x86.mmx.packuswb
llvm.x86.mmx.padd.b
llvm.x86.mmx.padd.d
llvm.x86.mmx.padd.q
llvm.x86.mmx.padd.w
llvm.x86.mmx.padds.b
llvm.x86.mmx.padds.w
llvm.x86.mmx.paddus.b
llvm.x86.mmx.paddus.w
llvm.x86.mmx.palignr.b
llvm.x86.mmx.pand
llvm.x86.mmx.pandn
llvm.x86.mmx.pavg.b
llvm.x86.mmx.pavg.w
llvm.x86.mmx.pcmpeq.b
llvm.x86.mmx.pcmpeq.d
llvm.x86.mmx.pcmpeq.w
llvm.x86.mmx.pcmpgt.b
llvm.x86.mmx.pcmpgt.d
llvm.x86.mmx.pcmpgt.w
llvm.x86.mmx.pextr.w
llvm.x86.mmx.pinsr.w
llvm.x86.mmx.pmadd.wd
llvm.x86.mmx.pmaxs.w
llvm.x86.mmx.pmaxu.b
llvm.x86.mmx.pmins.w
llvm.x86.mmx.pminu.b
llvm.x86.mmx.pmovmskb
llvm.x86.mmx.pmulh.w
llvm.x86.mmx.pmulhu.w
llvm.x86.mmx.pmull.w
llvm.x86.mmx.pmulu.dq
llvm.x86.mmx.por
llvm.x86.mmx.psad.bw
llvm.x86.mmx.psll.d
llvm.x86.mmx.psll.q
llvm.x86.mmx.psll.w
llvm.x86.mmx.pslli.d
llvm.x86.mmx.pslli.q
llvm.x86.mmx.pslli.w
llvm.x86.mmx.psra.d
llvm.x86.mmx.psra.w
llvm.x86.mmx.psrai.d
llvm.x86.mmx.psrai.w
llvm.x86.mmx.psrl.d
llvm.x86.mmx.psrl.q
llvm.x86.mmx.psrl.w
llvm.x86.mmx.psrli.d
llvm.x86.mmx.psrli.q
llvm.x86.mmx.psrli.w
llvm.x86.mmx.psub.b
llvm.x86.mmx.psub.d
llvm.x86.mmx.psub.q
llvm.x86.mmx.psub.w
llvm.x86.mmx.psubs.b
llvm.x86.mmx.psubs.w
llvm.x86.mmx.psubus.b
llvm.x86.mmx.psubus.w
llvm.x86.mmx.punpckhbw
llvm.x86.mmx.punpckhdq
llvm.x86.mmx.punpckhwd
llvm.x86.mmx.punpcklbw
llvm.x86.mmx.punpckldq
llvm.x86.mmx.punpcklwd
llvm.x86.mmx.pxor
llvm.x86.monitorx
llvm.x86.movdir64b
llvm.x86.mwaitx
llvm.x86.pclmulqdq
llvm.x86.pclmulqdq.256
llvm.x86.pclmulqdq.512
llvm.x86.ptwrite32
llvm.x86.ptwrite64
llvm.x86.rdfsbase.32
llvm.x86.rdfsbase.64
llvm.x86.rdgsbase.32
llvm.x86.rdgsbase.64
llvm.x86.rdpid
llvm.x86.rdpkru
llvm.x86.rdpmc
llvm.x86.rdrand.16
llvm.x86.rdrand.32
llvm.x86.rdrand.64
llvm.x86.rdseed.16
llvm.x86.rdseed.32
llvm.x86.rdseed.64
llvm.x86.rdsspd
llvm.x86.rdsspq
llvm.x86.rdtsc
llvm.x86.rdtscp
llvm.x86.rstorssp
llvm.x86.saveprevssp
llvm.x86.seh.ehguard
llvm.x86.seh.ehregnode
llvm.x86.seh.lsda
llvm.x86.senduipi
llvm.x86.serialize
llvm.x86.setssbsy
llvm.x86.sha1msg1
llvm.x86.sha1msg2
llvm.x86.sha1nexte
llvm.x86.sha1rnds4
llvm.x86.sha256msg1
llvm.x86.sha256msg2
llvm.x86.sha256rnds2
llvm.x86.slwpcb
llvm.x86.sse.cmp.ps
llvm.x86.sse.cmp.ss
llvm.x86.sse.comieq.ss
llvm.x86.sse.comige.ss
llvm.x86.sse.comigt.ss
llvm.x86.sse.comile.ss
llvm.x86.sse.comilt.ss
llvm.x86.sse.comineq.ss
llvm.x86.sse.cvtpd2pi
llvm.x86.sse.cvtpi2pd
llvm.x86.sse.cvtpi2ps
llvm.x86.sse.cvtps2pi
llvm.x86.sse.cvtss2si
llvm.x86.sse.cvtss2si64
llvm.x86.sse.cvttpd2pi
llvm.x86.sse.cvttps2pi
llvm.x86.sse.cvttss2si
llvm.x86.sse.cvttss2si64
llvm.x86.sse.ldmxcsr
llvm.x86.sse.max.ps
llvm.x86.sse.max.ss
llvm.x86.sse.min.ps
llvm.x86.sse.min.ss
llvm.x86.sse.movmsk.ps
llvm.x86.sse.pshuf.w
llvm.x86.sse.rcp.ps
llvm.x86.sse.rcp.ss
llvm.x86.sse.rsqrt.ps
llvm.x86.sse.rsqrt.ss
llvm.x86.sse.sfence
llvm.x86.sse.stmxcsr
llvm.x86.sse.ucomieq.ss
llvm.x86.sse.ucomige.ss
llvm.x86.sse.ucomigt.ss
llvm.x86.sse.ucomile.ss
llvm.x86.sse.ucomilt.ss
llvm.x86.sse.ucomineq.ss
llvm.x86.sse2.clflush
llvm.x86.sse2.cmp.pd
llvm.x86.sse2.cmp.sd
llvm.x86.sse2.comieq.sd
llvm.x86.sse2.comige.sd
llvm.x86.sse2.comigt.sd
llvm.x86.sse2.comile.sd
llvm.x86.sse2.comilt.sd
llvm.x86.sse2.comineq.sd
llvm.x86.sse2.cvtpd2dq
llvm.x86.sse2.cvtpd2ps
llvm.x86.sse2.cvtps2dq
llvm.x86.sse2.cvtsd2si
llvm.x86.sse2.cvtsd2si64
llvm.x86.sse2.cvtsd2ss
llvm.x86.sse2.cvttpd2dq
llvm.x86.sse2.cvttps2dq
llvm.x86.sse2.cvttsd2si
llvm.x86.sse2.cvttsd2si64
llvm.x86.sse2.lfence
llvm.x86.sse2.maskmov.dqu
llvm.x86.sse2.max.pd
llvm.x86.sse2.max.sd
llvm.x86.sse2.mfence
llvm.x86.sse2.min.pd
llvm.x86.sse2.min.sd
llvm.x86.sse2.movmsk.pd
llvm.x86.sse2.packssdw.128
llvm.x86.sse2.packsswb.128
llvm.x86.sse2.packuswb.128
llvm.x86.sse2.pause
llvm.x86.sse2.pavg.b
llvm.x86.sse2.pavg.w
llvm.x86.sse2.pmadd.wd
llvm.x86.sse2.pmovmskb.128
llvm.x86.sse2.pmulh.w
llvm.x86.sse2.pmulhu.w
llvm.x86.sse2.psad.bw
llvm.x86.sse2.psll.d
llvm.x86.sse2.psll.q
llvm.x86.sse2.psll.w
llvm.x86.sse2.pslli.d
llvm.x86.sse2.pslli.q
llvm.x86.sse2.pslli.w
llvm.x86.sse2.psra.d
llvm.x86.sse2.psra.w
llvm.x86.sse2.psrai.d
llvm.x86.sse2.psrai.w
llvm.x86.sse2.psrl.d
llvm.x86.sse2.psrl.q
llvm.x86.sse2.psrl.w
llvm.x86.sse2.psrli.d
llvm.x86.sse2.psrli.q
llvm.x86.sse2.psrli.w
llvm.x86.sse2.ucomieq.sd
llvm.x86.sse2.ucomige.sd
llvm.x86.sse2.ucomigt.sd
llvm.x86.sse2.ucomile.sd
llvm.x86.sse2.ucomilt.sd
llvm.x86.sse2.ucomineq.sd
llvm.x86.sse3.addsub.pd
llvm.x86.sse3.addsub.ps
llvm.x86.sse3.hadd.pd
llvm.x86.sse3.hadd.ps
llvm.x86.sse3.hsub.pd
llvm.x86.sse3.hsub.ps
llvm.x86.sse3.ldu.dq
llvm.x86.sse3.monitor
llvm.x86.sse3.mwait
llvm.x86.sse41.blendvpd
llvm.x86.sse41.blendvps
llvm.x86.sse41.dppd
llvm.x86.sse41.dpps
llvm.x86.sse41.insertps
llvm.x86.sse41.mpsadbw
llvm.x86.sse41.packusdw
llvm.x86.sse41.pblendvb
llvm.x86.sse41.phminposuw
llvm.x86.sse41.ptestc
llvm.x86.sse41.ptestnzc
llvm.x86.sse41.ptestz
llvm.x86.sse41.round.pd
llvm.x86.sse41.round.ps
llvm.x86.sse41.round.sd
llvm.x86.sse41.round.ss
llvm.x86.sse42.crc32.32.16
llvm.x86.sse42.crc32.32.32
llvm.x86.sse42.crc32.32.8
llvm.x86.sse42.crc32.64.64
llvm.x86.sse42.pcmpestri128
llvm.x86.sse42.pcmpestria128
llvm.x86.sse42.pcmpestric128
llvm.x86.sse42.pcmpestrio128
llvm.x86.sse42.pcmpestris128
llvm.x86.sse42.pcmpestriz128
llvm.x86.sse42.pcmpestrm128
llvm.x86.sse42.pcmpistri128
llvm.x86.sse42.pcmpistria128
llvm.x86.sse42.pcmpistric128
llvm.x86.sse42.pcmpistrio128
llvm.x86.sse42.pcmpistris128
llvm.x86.sse42.pcmpistriz128
llvm.x86.sse42.pcmpistrm128
llvm.x86.sse4a.extrq
llvm.x86.sse4a.extrqi
llvm.x86.sse4a.insertq
llvm.x86.sse4a.insertqi
llvm.x86.ssse3.pabs.b
llvm.x86.ssse3.pabs.d
llvm.x86.ssse3.pabs.w
llvm.x86.ssse3.phadd.d
llvm.x86.ssse3.phadd.d.128
llvm.x86.ssse3.phadd.sw
llvm.x86.ssse3.phadd.sw.128
llvm.x86.ssse3.phadd.w
llvm.x86.ssse3.phadd.w.128
llvm.x86.ssse3.phsub.d
llvm.x86.ssse3.phsub.d.128
llvm.x86.ssse3.phsub.sw
llvm.x86.ssse3.phsub.sw.128
llvm.x86.ssse3.phsub.w
llvm.x86.ssse3.phsub.w.128
llvm.x86.ssse3.pmadd.ub.sw
llvm.x86.ssse3.pmadd.ub.sw.128
llvm.x86.ssse3.pmul.hr.sw
llvm.x86.ssse3.pmul.hr.sw.128
llvm.x86.ssse3.pshuf.b
llvm.x86.ssse3.pshuf.b.128
llvm.x86.ssse3.psign.b
llvm.x86.ssse3.psign.b.128
llvm.x86.ssse3.psign.d
llvm.x86.ssse3.psign.d.128
llvm.x86.ssse3.psign.w
llvm.x86.ssse3.psign.w.128
llvm.x86.sttilecfg
llvm.x86.stui
llvm.x86.subborrow.32
llvm.x86.subborrow.64
llvm.x86.tbm.bextri.u32
llvm.x86.tbm.bextri.u64
llvm.x86.tdpbf16ps
llvm.x86.tdpbssd
llvm.x86.tdpbssd.internal
llvm.x86.tdpbsud
llvm.x86.tdpbusd
llvm.x86.tdpbuud
llvm.x86.testui
llvm.x86.tileloadd64
llvm.x86.tileloadd64.internal
llvm.x86.tileloaddt164
llvm.x86.tilerelease
llvm.x86.tilestored64
llvm.x86.tilestored64.internal
llvm.x86.tilezero
llvm.x86.tilezero.internal
llvm.x86.tpause
llvm.x86.umonitor
llvm.x86.umwait
llvm.x86.vcvtps2ph.128
llvm.x86.vcvtps2ph.256
llvm.x86.vgf2p8affineinvqb.128
llvm.x86.vgf2p8affineinvqb.256
llvm.x86.vgf2p8affineinvqb.512
llvm.x86.vgf2p8affineqb.128
llvm.x86.vgf2p8affineqb.256
llvm.x86.vgf2p8affineqb.512
llvm.x86.vgf2p8mulb.128
llvm.x86.vgf2p8mulb.256
llvm.x86.vgf2p8mulb.512
llvm.x86.wbinvd
llvm.x86.wbnoinvd
llvm.x86.wrfsbase.32
llvm.x86.wrfsbase.64
llvm.x86.wrgsbase.32
llvm.x86.wrgsbase.64
llvm.x86.wrpkru
llvm.x86.wrssd
llvm.x86.wrssq
llvm.x86.wrussd
llvm.x86.wrussq
llvm.x86.xabort
llvm.x86.xbegin
llvm.x86.xend
llvm.x86.xgetbv
llvm.x86.xop.vfrcz.pd
llvm.x86.xop.vfrcz.pd.256
llvm.x86.xop.vfrcz.ps
llvm.x86.xop.vfrcz.ps.256
llvm.x86.xop.vfrcz.sd
llvm.x86.xop.vfrcz.ss
llvm.x86.xop.vpermil2pd
llvm.x86.xop.vpermil2pd.256
llvm.x86.xop.vpermil2ps
llvm.x86.xop.vpermil2ps.256
llvm.x86.xop.vphaddbd
llvm.x86.xop.vphaddbq
llvm.x86.xop.vphaddbw
llvm.x86.xop.vphadddq
llvm.x86.xop.vphaddubd
llvm.x86.xop.vphaddubq
llvm.x86.xop.vphaddubw
llvm.x86.xop.vphaddudq
llvm.x86.xop.vphadduwd
llvm.x86.xop.vphadduwq
llvm.x86.xop.vphaddwd
llvm.x86.xop.vphaddwq
llvm.x86.xop.vphsubbw
llvm.x86.xop.vphsubdq
llvm.x86.xop.vphsubwd
llvm.x86.xop.vpmacsdd
llvm.x86.xop.vpmacsdqh
llvm.x86.xop.vpmacsdql
llvm.x86.xop.vpmacssdd
llvm.x86.xop.vpmacssdqh
llvm.x86.xop.vpmacssdql
llvm.x86.xop.vpmacsswd
llvm.x86.xop.vpmacssww
llvm.x86.xop.vpmacswd
llvm.x86.xop.vpmacsww
llvm.x86.xop.vpmadcsswd
llvm.x86.xop.vpmadcswd
llvm.x86.xop.vpperm
llvm.x86.xop.vpshab
llvm.x86.xop.vpshad
llvm.x86.xop.vpshaq
llvm.x86.xop.vpshaw
llvm.x86.xop.vpshlb
llvm.x86.xop.vpshld
llvm.x86.xop.vpshlq
llvm.x86.xop.vpshlw
llvm.x86.xresldtrk
llvm.x86.xrstor
llvm.x86.xrstor64
llvm.x86.xrstors
llvm.x86.xrstors64
llvm.x86.xsave
llvm.x86.xsave64
llvm.x86.xsavec
llvm.x86.xsavec64
llvm.x86.xsaveopt
llvm.x86.xsaveopt64
llvm.x86.xsaves
llvm.x86.xsaves64
llvm.x86.xsetbv
llvm.x86.xsusldtrk
llvm.x86.xtest
llvm.xcore.bitrev
llvm.xcore.checkevent
llvm.xcore.chkct
llvm.xcore.clre
llvm.xcore.clrpt
llvm.xcore.clrsr
llvm.xcore.crc32
llvm.xcore.crc8
llvm.xcore.edu
llvm.xcore.eeu
llvm.xcore.endin
llvm.xcore.freer
llvm.xcore.geted
llvm.xcore.getet
llvm.xcore.getid
llvm.xcore.getps
llvm.xcore.getr
llvm.xcore.getst
llvm.xcore.getts
llvm.xcore.in
llvm.xcore.inct
llvm.xcore.initcp
llvm.xcore.initdp
llvm.xcore.initlr
llvm.xcore.initpc
llvm.xcore.initsp
llvm.xcore.inshr
llvm.xcore.int
llvm.xcore.mjoin
llvm.xcore.msync
llvm.xcore.out
llvm.xcore.outct
llvm.xcore.outshr
llvm.xcore.outt
llvm.xcore.peek
llvm.xcore.setc
llvm.xcore.setclk
llvm.xcore.setd
llvm.xcore.setev
llvm.xcore.setps
llvm.xcore.setpsc
llvm.xcore.setpt
llvm.xcore.setrdy
llvm.xcore.setsr
llvm.xcore.settw
llvm.xcore.setv
llvm.xcore.sext
llvm.xcore.ssync
llvm.xcore.syncr
llvm.xcore.testct
llvm.xcore.testwct
llvm.xcore.waitevent
llvm.xcore.zext
isObjCObject
isObjCTaggedPointer
Builtin.RawUnsafeContinuation
Builtin.Job
Builtin.DefaultActorStorage
Builtin.UnsafeValueBuffer
Builtin.IntLiteral
Builtin.FPPPC
captures=(
<generic> 
<dynamic_self> 
<opaque_value> 
<direct>
<noescape>
NativeType
**NULL**
 [with 
(conformance @
 loc=
 implied_by=@
 explicit
 inherited
 synthesized
 fixed_conformance=@
 superseded_by=@
Conformances in context:
ClangNode contains nullptr
Enum
Struct
Class
Protocol
OpaqueType
TypeAlias
GenericTypeParam
AssociatedType
Module
Param
Subscript
Constructor
Destructor
Func
Accessor
EnumElement
Extension
TopLevelCode
Import
IfConfig
PoundDiagnostic
PrecedenceGroup
MissingMember
PatternBinding
EnumCase
InfixOperator
PrefixOperator
PostfixOperator
import
extension
case
top-level code
conditional block
diagnostic
pattern binding
parameter
property
static property
class property
precedence group
infix operator
prefix operator
postfix operator
type alias
generic parameter
associated type
type
enum
struct
class
protocol
generic enum
generic struct
generic class
generic type
subscript
static subscript
class subscript
initializer
deinitializer
local function
global function
operator function
instance method
static method
class method
getter
setter
willSet observer
didSet observer
address accessor
mutableAddress accessor
_read accessor
_modify accessor
enum case
module
missing member placeholder
requirement
result
<none>
'static'
'class'
'strong'
'nonmutating'
'mutating'
'__consuming'
IteratorProtocol
RawRepresentable
Hashable
Comparable
BinaryInteger
Encodable
Decodable
FloatingPoint
ExpressibleByExtendedGraphemeClusterLiteral
ExpressibleByUnicodeScalarLiteral
_ExpressibleByFileReferenceLiteral
_ExpressibleByBuiltinBooleanLiteral
_ExpressibleByBuiltinExtendedGraphemeClusterLiteral
_ExpressibleByBuiltinFloatLiteral
_ExpressibleByBuiltinIntegerLiteral
_ExpressibleByBuiltinStringLiteral
_ExpressibleByBuiltinUnicodeScalarLiteral
mutating 
.init()
<<empty>>
init
completionHandler
WithCompletionHandler
none
left
right
$defer
(null)
extension of 
(unknown decl)
IncludeAttrImplements
_read
_modify
willSet
didSet
unsafeAddress
unsafeMutableAddress
closure
weak
unowned
unowned(unsafe)
InterfaceTypeRequest
deinit
IsAccessorTransparentRequest
GenericParamListRequest
GenericSignatureRequest
ScopedImportLookupRequest
ExtendedNominalRequest
DefaultAndMaxAccessLevelRequest
ExtendedTypeRequest
RequiresOpaqueAccessorsRequest
RequiresOpaqueModifyCoroutineRequest
SynthesizeAccessorRequest
IsGetterMutatingRequest
IsSetterMutatingRequest
OpaqueReadOwnershipRequest
OpaqueResultTypeRequest
IsObjCRequest
IsFinalRequest
IsDynamicRequest
DynamicallyReplacedDeclRequest
IsImplicitlyUnwrappedOptionalRequest
AccessLevelRequest
StoredPropertiesRequest
StoredPropertiesAndMissingMembersRequest
PropertyWrapperTypeInfoRequest
IsActorRequest
UnderlyingTypeRequest
StructuralTypeRequest
DefaultDefinitionTypeRequest
EnumRawTypeRequest
HasMemberwiseInitRequest
ResolveEffectiveMemberwiseInitRequest
HasDefaultInitRequest
SynthesizeDefaultInitRequest
GlobalActorInstanceRequest
GetDestructorRequest
IsDefaultActorRequest
HasMissingDesignatedInitializersRequest
InheritsSuperclassInitializersRequest
ClassAncestryFlagsRequest
InheritedProtocolsRequest
SuperclassTypeRequest
SuperclassDeclRequest
ProtocolRequiresClassRequest
ExistentialConformsToSelfRequest
ExistentialTypeSupportedRequest
RequirementSignatureRequest
StorageImplInfoRequest
SetterAccessLevelRequest
NamingPatternRequest
ParamSpecifierRequest
AttachedPropertyWrapperTypeRequest
PropertyWrapperBackingPropertyTypeRequest
PropertyWrapperAuxiliaryVariablesRequest
PropertyWrapperInitializerInfoRequest
PropertyWrapperMutabilityRequest
LazyStoragePropertyRequest
DefaultArgumentInitContextRequest
DefaultArgumentExprRequest
ResultBuilderTypeRequest
AttachedResultBuilderRequest
ResultTypeRequest
AsyncAlternativeRequest
IsAsyncHandlerRequest
CanBeAsyncHandlerRequest
ParseAbstractFunctionBodyRequest
TypeCheckFunctionBodyRequest
NeedsNewVTableEntryRequest
FunctionOperatorRequest
IsStaticRequest
SimpleDidSetRequest
SelfAccessKindRequest
EnumRawValuesRequest
InitKindRequest
BodyInitKindRequest
OperatorPrecedenceGroupRequest
ActorIsolationRequest
file '
FileUnit
Serialized Local
AbstractClosureExpr
EnumDecl
StructDecl
ClassDecl
ProtocolDecl
OpaqueTypeDecl
TypeAliasDecl
SubscriptDecl
EnumElementDecl
ExtensionDecl
TopLevelCodeDecl
AbstractFunctionDecl
 Builtin
 synthesized file
 line=
 base=
 : (no type set)
 PatternBinding 0x
 DefaultArgument index=
PropertyWrapper 0x
, kind=
 closure : 
DefaultArgument index=
 TopLevelCode
FragileFunctionKindRequest
ParseMembersRequest
ABIMembersRequest
AllMembersRequest
<<INTERNAL ERROR: encountered %error in diagnostic text>>
<<INTERNAL ERROR: unparseable argument index in diagnostic text>>
<<INTERNAL ERROR: out-of-range argument index in diagnostic text>>
swift-diagnostics-assert-on-error
swift-diagnostics-assert-on-warning
actor-isolated
main actor-isolated
global actor 
-isolated
complex-closure-inference.md
temporary-pointers.md
associated-type-requirements.md
trailing-closure-matching.md
nominal-types.md
dynamic-callable-requirements.md
protocol-type-non-conformance.md
string-interpolation-conformance.md
opaque-type-inference.md
property-wrapper-requirements.md
result-builder-methods.md
INTERNAL ERROR: this diagnostic should not be produced [invalid_diagnostic]
INTERNAL ERROR: feature not implemented: %0 [not_implemented]
error opening '%0' for output: %1 [error_opening_output]
cannot find group info file at path: '%0' [cannot_find_group_info_file]
cannot parse group info file at path: '%0' [cannot_parse_group_info_file]
no group info found for file: '%0' [error_no_group_info]
previous definition of %0 is here [previous_decldef]
did you mean to use a 'do' statement? [brace_stmt_suggest_do]
while parsing this '<' as a type parameter bracket [while_parsing_as_left_angle_bracket]
SWIFTC_MAXIMUM_DETERMINISM overriding %0 [remark_max_determinism_overriding]
'super' cannot be used outside of class members [super_not_in_class_method]
class methods are only allowed within classes; use 'static' to declare a %select{static|requirement fulfilled by either a static or class}0 method [class_func_not_in_class]
class properties are only allowed within classes; use 'static' to declare a %select{static|requirement fulfilled by either a static or class}0 property [class_var_not_in_class]
class subscripts are only allowed within classes; use 'static' to declare a %select{static|requirement fulfilled by either a static or class}0 subscript [class_subscript_not_in_class]
expected '{' in body of function declaration [func_decl_without_brace]
change 'let' to 'var' to make it mutable [convert_let_to_var]
did you mean '%0'? [note_typo_candidate]
failed to load profile data '%0': '%1' [profile_read_error]
requirement of '%1' to '%2' is redundant in an extension of '%0' [protocol_extension_redundant_requirement]
'%0' may only be used on parameters [attr_only_on_parameters]
single argument function types require parentheses [function_type_no_parens]
underlying Objective-C module %0 not found [error_underlying_module_not_found]
generic requirement '%0' is redundant in %1 [generic_signature_not_minimal]
generic signature %0 is invalid [generic_signature_not_valid]
generic signature %0 is not equal to new signature %1 [generic_signature_not_equal]
broken standard library: cannot find default actor type '%0' [concurrency_default_actor_not_found]
unrecognized key '%0' in SDK node [sdk_node_unrecognized_key]
unrecognized SDK node kind '%0' [sdk_node_unrecognized_node_kind]
unrecognized type attribute '%0' in SDK node [sdk_node_unrecognized_type_attr_kind]
unrecognized declaration attribute '%0' in SDK node [sdk_node_unrecognized_decl_attr_kind]
unrecognized declaration kind '%0' in SDK node [sdk_node_unrecognized_decl_kind]
unrecognized accessor kind '%0' in SDK node [sdk_node_unrecognized_accessor_kind]
'#sourceLocation' directive produces '#fileID' string of '%0', which conflicts with '#fileID' strings produced by other paths in the module [source_location_creates_file_id_conflicts]
change file in '#sourceLocation' to '%0' [fixit_correct_source_location_file]
filename "%0" used twice: '%1' and '%2' [error_two_files_same_name]
filenames are used to distinguish private declarations with the same name [note_explain_two_files_same_name]
circular reference [circular_reference]
through reference here [circular_reference_through]
%0 inherits from itself [circular_class_inheritance]
%0 has a raw type that depends on itself [circular_enum_inheritance]
protocol %0 refines itself [circular_protocol_def]
%0 %1 declared here [kind_declname_declared_here]
ignoring associated type %0 in favor of module-scoped property wrapper %0; please qualify the reference with %1 [warn_property_wrapper_module_scope]
while resolving type %0 [circular_type_resolution_note]
cannot load cross-import overlay for '%0' and '%1': %2 (declared by '%3') [cannot_load_swiftoverlay_file]
cannot list cross-import overlays for '%0': %1 (declared in '%2') [cannot_list_swiftcrossimport_dir]
modules %0 and %1 both declare module %2 as a cross-import overlay, which may cause paradoxical behavior when looking up names in them; please report this bug to the maintainers of these modules [cross_imported_by_both_modules]
dependency scanner detected dependency cycle: '%0' [scanner_find_cycle]
dependencies scanner cannot be configured with arguments: '%0' [scanner_arguments_invalid]
ambiguous use of attribute %0 [ambiguous_custom_attribute_ref]
use '%0.' to reference the attribute %1 in module %2 [ambiguous_custom_attribute_ref_fix]
found this attribute [found_attribute_candidate]
unknown attribute '%0' [unknown_attribute]
to match this opening '{' [opening_brace]
to match this opening '[' [opening_bracket]
to match this opening '(' [opening_paren]
to match this opening '<' [opening_angle]
extraneous '}' at top level [extra_rbrace]
structure nesting level exceeded maximum of %0 [structure_overflow]
expected #else or #endif at end of conditional compilation block [expected_close_to_if_directive]
further conditions after #else are unreachable [expected_close_after_else_directive]
unexpected conditional compilation block terminator [unexpected_conditional_compilation_block_terminator]
incomplete condition in conditional compilation directive [incomplete_conditional_compilation_directive]
extra tokens following conditional compilation directive [extra_tokens_conditional_compilation_directive]
unexpected '}' in conditional compilation block [unexpected_rbrace_in_conditional_compilation_block]
unexpected 'if' keyword following '#else' conditional compilation directive; did you mean '#elseif'? [unexpected_if_following_else_compilation_directive]
expected string literal in %select{#warning|#error}0 directive [pound_diagnostic_expected_string]
expected '%0' in %select{#warning|#error}1 directive [pound_diagnostic_expected]
%select{#warning|#error}0 directive requires parentheses [pound_diagnostic_expected_parens]
string interpolation is not allowed in %select{#warning|#error}0 directives [pound_diagnostic_interpolation]
extra tokens following %select{#warning|#error}0 directive [extra_tokens_pound_diagnostic_directive]
expected '%0' in #sourceLocation directive [sourceLocation_expected]
parameterless closing #sourceLocation() directive without prior opening #sourceLocation(file:,line:) directive [unexpected_line_directive]
expected starting line number for #sourceLocation directive [expected_line_directive_number]
expected filename string literal for #sourceLocation directive [expected_line_directive_name]
extra tokens at the end of #sourceLocation directive [extra_tokens_line_directive]
the line number needs to be greater than zero [line_directive_line_zero]
keyword '%0' does not need to be escaped in argument list [escaped_parameter_name]
%0 cannot be an interpolated string literal [forbidden_interpolated_string]
%0 cannot be an extended escaping string literal [forbidden_extended_escaping_string]
nul character embedded in middle of file [lex_nul_character]
input files must be encoded as UTF-8 instead of UTF-16 [lex_utf16_bom_marker]
hashbang line is allowed only in the main file [lex_hashbang_not_allowed]
unprintable ASCII character found in source file [lex_unprintable_ascii_character]
invalid UTF-8 found in source file [lex_invalid_utf8]
single-quoted string literal found, use '"' [lex_single_quote_string]
unicode curly quote found, replace with '"' [lex_invalid_curly_quote]
unicode character '%0' (%1) looks similar to '%2' (%3); did you mean to use '%2' (%3)? [lex_confusable_character]
non-breaking space (U+00A0) used instead of regular space [lex_nonbreaking_space]
unterminated '/*' comment [lex_unterminated_block_comment]
comment started here [lex_comment_start]
unterminated string literal [lex_unterminated_string]
invalid escape sequence in literal [lex_invalid_escape]
\u{...} escape sequence expects between 1 and 8 hex digits [lex_invalid_u_escape]
expected '}' in \u{...} escape sequence [lex_invalid_u_escape_rbrace]
too many '#' characters in delimited escape [lex_invalid_escape_delimiter]
too many '#' characters in closing delimiter [lex_invalid_closing_delimiter]
invalid unicode scalar [lex_invalid_unicode_scalar]
expected hexadecimal code in braces after unicode escape [lex_unicode_escape_braces]
multi-line string literal content must begin on a new line [lex_illegal_multiline_string_start]
multi-line string literal closing delimiter must begin on a new line [lex_illegal_multiline_string_end]
%select{unexpected space in|unexpected tab in|insufficient}2 indentation of %select{line|next %1 lines}0 in multi-line string literal [lex_multiline_string_indent_inconsistent]
should match %select{space|tab}0 here [lex_multiline_string_indent_should_match_here]
change indentation of %select{this line|these lines}0 to match closing delimiter [lex_multiline_string_indent_change_line]
escaped newline at the last line is not allowed [lex_escaped_newline_at_lastline]
invalid character in source file [lex_invalid_character]
an identifier cannot begin with this character [lex_invalid_identifier_start_character]
expected a digit in floating point exponent [lex_expected_digit_in_fp_exponent]
'%0' is not a valid %select{digit|first character}1 in floating point exponent [lex_invalid_digit_in_fp_exponent]
'%0' is not a valid %select{binary digit (0 or 1)|octal digit (0-7)|digit|hexadecimal digit (0-9, A-F)}1 in integer literal [lex_invalid_digit_in_int_literal]
hexadecimal floating point literal must end with an exponent [lex_expected_binary_exponent_in_hex_float_literal]
unexpected end of block comment [lex_unexpected_block_comment_end]
'=' must have consistent whitespace on both sides [lex_unary_equal]
extraneous whitespace after '.' is not permitted [extra_whitespace_period]
editor placeholder in source file [lex_editor_placeholder]
editor placeholder in source file [lex_editor_placeholder_in_playground]
source control conflict marker in source file [lex_conflict_marker_in_file]
in %select{declaration|extension}0 of %1 [note_in_decl_extension]
#line directive was renamed to #sourceLocation [line_directive_style_deprecated]
consecutive declarations on a line must be separated by ';' [declaration_same_line_without_semi]
expected declaration [expected_decl]
expected identifier in %0 declaration [expected_identifier_in_decl]
expected '%0' keyword in %1 declaration [expected_keyword_in_decl]
%0 name can only start with a letter or underscore, not a number [number_cant_start_decl_name]
expected identifier after comma in enum 'case' declaration [expected_identifier_after_case_comma]
definition conflicts with previous value [decl_redefinition]
'let' declarations cannot be computed properties [let_cannot_be_computed_property]
'let' declarations cannot be observing properties [let_cannot_be_observing_property]
'let' declarations cannot have addressors [let_cannot_be_addressed_property]
'var' declarations with multiple variables cannot have explicit getters/setters [disallowed_var_multiple_getset]
initial value is not allowed here [disallowed_init]
variable used within its own initial value [var_init_self_referential]
enum 'case' is not allowed outside of an enum [disallowed_enum_element]
declaration is only valid at file scope [decl_inner_scope]
declaration cannot be marked %0 [decl_not_static]
'%0' is a declaration modifier, not an attribute [cskeyword_not_attribute]
%0 cannot appear after another 'static' or 'class' keyword [decl_already_static]
extraneous '.' in enum 'case' declaration [enum_case_dot_prefix]
%select{%error|static properties|class properties}0 may only be declared on a type [static_var_decl_global_scope]
%select{computed property|subscript}0 must have accessors specified [computed_property_no_accessors]
expected get or set in a protocol property [expected_getset_in_protocol]
protocol property %0 cannot have a default implementation specified here; use extension instead [unexpected_getset_implementation_in_protocol]
computed property must have an explicit type [computed_property_missing_type]
getter/setter can only be defined for a single variable [getset_nontrivial_pattern]
expected '}' at end of variable get/set clause [expected_rbrace_in_getset]
%select{variable|subscript}0 already has %1 [duplicate_accessor]
%select{variable|subscript}0 cannot provide both %1 and %2 [conflicting_accessor]
%select{|previous definition of }1%0 %select{defined |}1here [previous_accessor]
expected %select{setter|willSet|didSet}0 parameter name [expected_accessor_parameter_name]
expected ')' after setter parameter name [expected_rparen_set_name]
expected ')' after willSet parameter name [expected_rparen_willSet_name]
expected ')' after didSet parameter name [expected_rparen_didSet_name]
expected '{' to start %0 definition [expected_lbrace_accessor]
expected 'get', 'set', 'willSet', or 'didSet' keyword to start an accessor definition [expected_accessor_kw]
'%0' accessor cannot have specifier '%1' [invalid_accessor_specifier]
'%0' accessor is not allowed on property with 'get' accessor that is 'async' or 'throws' [invalid_accessor_with_effectful_get]
%select{variable|subscript}0 with %1 must also have a getter [missing_getter]
%select{variable|subscript}0 with %1 must also have a getter, addressor, or 'read' accessor [missing_reading_accessor]
%select{'willSet'|'didSet'}0 cannot be provided together with %1 [observing_accessor_conflicts_with_accessor]
%select{'willSet'|'didSet'}0 is not allowed in subscripts [observing_accessor_in_subscript]
variable with implied type cannot have implied getter/setter [getset_cannot_be_implied]
expected module name in import declaration [decl_expected_module_name]
expected '{' in extension [expected_lbrace_extension]
expected '}' at end of extension [expected_rbrace_extension]
expected type name in extension declaration [extension_type_expected]
expected '=' in type alias declaration [expected_equal_in_typealias]
expected type in type alias declaration [expected_type_in_typealias]
expected type in associated type declaration [expected_type_in_associatedtype]
associated types must not have a generic parameter list [associated_type_generic_parameter_list]
expected '(' in argument list of function declaration [func_decl_without_paren]
%select{%error|static methods|class methods}0 may only be declared on a type [static_func_decl_global_scope]
expected '->' after function parameter tuple [func_decl_expected_arrow]
operator '%0' declared in protocol must be 'static' [operator_static_in_protocol]
'async' must be written after the parameter list of a function [async_func_modifier]
expected '{' in enum [expected_lbrace_enum]
expected '}' at end of enum [expected_rbrace_enum]
expected '{' in struct [expected_lbrace_struct]
expected '}' in struct [expected_rbrace_struct]
expected '{' in class [expected_lbrace_class]
expected '}' in class [expected_rbrace_class]
expected ':' to begin inheritance clause [expected_colon_class]
protocols do not allow generic parameters; use associated types instead [generic_arguments_protocol]
expected '{' in protocol type [expected_lbrace_protocol]
expected '}' in protocol [expected_rbrace_protocol]
setter in a protocol cannot have a name [protocol_setter_name]
protocol methods must not have bodies [protocol_method_with_body]
protocol initializers must not have bodies [protocol_init_with_body]
'subscript' functions may only be declared within a type [subscript_decl_wrong_scope]
expected '(' for subscript parameters [expected_lparen_subscript]
subscripts cannot have a name [subscript_has_name]
expected '->' for subscript element type [expected_arrow_subscript]
expected subscripting element type [expected_type_subscript]
expected '{' in subscript to specify getter and setter implementation [expected_lbrace_subscript]
subscript in protocol must have explicit { get } or { get set } specifier [expected_lbrace_subscript_protocol]
subscript declarations must have a getter [subscript_without_get]
missing '%select{super.|self.}0' at initializer invocation [invalid_nested_init]
initializers may only be declared within a type [initializer_decl_wrong_scope]
expected '(' for initializer parameters [expected_lparen_initializer]
initializers cannot have a name [initializer_has_name]
deinitializers may only be declared within a class [destructor_decl_outside_class]
expected '{' for deinitializer [expected_lbrace_destructor]
deinitializers cannot have a name [destructor_has_name]
expected ')' to close parameter list [opened_destructor_expected_rparen]
no parameter clause allowed on deinitializer [destructor_params]
'operator' may only be declared at file scope [operator_decl_inner_scope]
expected operator name in operator declaration [expected_operator_name_after_operator]
'%0' is considered an identifier and must not appear within an operator name [identifier_within_operator_name]
'%0' is not allowed in operator names [operator_name_invalid_char]
postfix operator names starting with '?' or '!' are disallowed to avoid collisions with built-in unwrapping operators [postfix_operator_name_cannot_start_with_unwrap]
operator should no longer be declared with body [deprecated_operator_body]
operator should no longer be declared with body; use a precedence group instead [deprecated_operator_body_use_group]
operator must be declared as 'prefix', 'postfix', or 'infix' [operator_decl_no_fixity]
expected designated type in operator declaration [operator_decl_expected_type]
trailing comma in operator declaration [operator_decl_trailing_comma]
only infix operators may declare a precedence [precedencegroup_not_infix]
expected identifier after 'precedencegroup' [expected_precedencegroup_name]
expected '{' after name of precedence group [expected_precedencegroup_lbrace]
expected operator attribute identifier in precedence group body [expected_precedencegroup_attribute]
'%0' is not a valid precedence group attribute [unknown_precedencegroup_attribute]
expected colon after attribute name in precedence group [expected_precedencegroup_attribute_colon]
'%0' attribute for precedence group declared multiple times [precedencegroup_attribute_redeclared]
expected 'none', 'left', or 'right' after 'associativity' [expected_precedencegroup_associativity]
expected 'true' or 'false' after 'assignment' [expected_precedencegroup_assignment]
expected name of related precedence group after '%0' [expected_precedencegroup_relation]
expected SIL keyword [expected_sil_keyword]
@inout is no longer an attribute [inout_not_attribute]
'%0' only allowed in SIL modules [only_allowed_in_sil]
expected type in SIL code [expected_sil_type]
expected ':' before type in SIL value reference [expected_sil_colon_value_ref]
expected SIL value name [expected_sil_value_name]
expected SIL type to %0 [expected_sil_type_kind]
expected constant in SIL code [expected_sil_constant]
referenced declaration has no %select{getter|setter}0 [referenced_value_no_accessor]
expected value ownership kind in SIL code [expected_sil_value_ownership_kind]
SILFunction and SILArgument have mismatching ValueOwnershipKinds. Function type specifies: '@%0'. SIL argument specifies: '@%1'. [silfunc_and_silarg_have_incompatible_sil_value_ownership]
expected ':' before %0 [expected_sil_colon]
expected tuple element index [expected_sil_tuple_index]
invalid index subset; expected '[SU]+' where 'S' represents set indices and 'U' represents unset indices [invalid_index_subset]
redefinition of value '%0' [sil_value_redefinition]
value '%0' defined with mismatching type %1 (expected %2) [sil_value_use_type_mismatch]
value '%0' used with mismatching type %1 (expected %2) [sil_value_def_type_mismatch]
use of undefined value '%0' [sil_use_of_undefined_value]
prior reference was here [sil_prior_reference]
expected ':' in SIL location [expected_colon_in_sil_location]
line number must be a positive integer [sil_invalid_line_in_sil_location]
column number must be a positive integer [sil_invalid_column_in_sil_location]
scope number must be a positive integer  [sil_invalid_scope_slot]
scope number %0 needs to be declared before first use [sil_scope_undeclared]
scope number %0 is already defined [sil_scope_redefined]
SIL instructions must be at the start of a line [expected_sil_instr_start_of_line]
expected '=' in SIL instruction [expected_equal_in_sil_instr]
wrong number of results for SIL instruction, expected %0 [wrong_result_count_in_sil_instr]
expected SIL instruction opcode [expected_sil_instr_opcode]
expected '%0' in SIL instruction [expected_tok_in_sil_instr]
sil_property generic signature must match original declaration [sil_property_generic_signature_mismatch]
string_literal instruction requires an encoding [sil_string_no_encoding]
unknown string literal encoding '%0' [sil_string_invalid_encoding]
tuple instruction requires a tuple type [expected_tuple_type_in_tuple]
tuple instruction requires %0 values [sil_tuple_inst_wrong_value_count]
tuple instruction requires a field number [sil_tuple_inst_wrong_field]
struct instruction requires a field name [sil_struct_inst_wrong_field]
ref_element_addr instruction requires a field name [sil_ref_inst_wrong_field]
invalid instruction operands [sil_invalid_instr_operands]
%0 operand of '%1' must have address type [sil_operand_not_address]
%0 operand of '%1' must have address of %2 type [sil_operand_not_ref_storage_address]
integer_literal instruction requires a 'Builtin.Int<n>' type [sil_integer_literal_not_integer_type]
integer_literal value not well-formed for type %0 [sil_integer_literal_not_well_formed]
float_literal instruction requires a 'Builtin.FP<n>' type [sil_float_literal_not_float_type]
apply of non-polymorphic function cannot have substitutions [sil_substitutions_on_non_polymorphic_type]
witness_method is not a protocol method [sil_witness_method_not_protocol]
witness_method type does not conform to protocol [sil_witness_method_type_does_not_conform]
member not found [sil_member_decl_not_found]
member %0 not found in type %1 [sil_named_member_decl_not_found]
cannot lookup member %0 in non-nominal, non-module type %1 [sil_member_lookup_bad_type]
member defined with mismatching type %0 (expected %1) [sil_member_decl_type_mismatch]
substitution replacement type %0 does not conform to protocol %1 [sil_substitution_mismatch]
substitution replacement type %0 is not a class type [sil_not_class]
missing substitutions [sil_missing_substitutions]
too many substitutions [sil_too_many_substitutions]
unknown key '%0' in debug variable declaration [sil_dbg_unknown_key]
alloc_ref [objc] cannot have tail allocated elements [sil_objc_with_tail_elements]
%0 instruction must have explicit access kind [sil_expected_access_kind]
%0 instruction must have explicit access enforcement [sil_expected_access_enforcement]
expected keypath component kind [sil_keypath_expected_component_kind]
unknown keypath component kind %0 [sil_keypath_unknown_component_kind]
keypath %select{gettable|settable}0_property component needs an %select{id and getter|id, getter, and setter}0 [sil_keypath_computed_property_missing_part]
keypath must have a root component declared [sil_keypath_no_root]
key path index type %0 does not conform to Hashable [sil_keypath_index_not_hashable]
conflicting types for key path operand %0: %1 vs. %2 [sil_keypath_index_operand_type_conflict]
operand %0 is not referenced by any component in the pattern [sil_keypath_no_use_of_operand_in_pattern]
expected basic block name or '}' [expected_sil_block_name]
expected ':' after basic block name [expected_sil_block_colon]
use of undefined basic block %0 [sil_undefined_basicblock_use]
redefinition of basic block %0 [sil_basicblock_redefinition]
expected ')' in basic block argument list [sil_basicblock_arg_rparen]
expected SIL function name [expected_sil_function_name]
expected '}' at the end of a sil body [expected_sil_rbrace]
sil function expected to have SIL function type [expected_sil_function_type]
dynamically replaced function not found %0 [sil_dynamically_replaced_func_not_found]
_specialize target function not found %0 [sil_specialize_target_func_not_found]
expected version number in 'available' attribute [sil_availability_expected_version]
expected 'raw' or 'canonical' after 'sil_stage' [expected_sil_stage_name]
sil_stage declared multiple times [multiple_sil_stage_decls]
expected ':' in a vtable entry [expected_sil_vtable_colon]
sil function not found %0 [sil_vtable_func_not_found]
sil class not found %0 [sil_vtable_class_not_found]
expected 'inherited' or 'override' [sil_vtable_bad_entry_kind]
expected ']' after vtable entry kind [sil_vtable_expect_rsquare]
sil global not found %0 [sil_global_variable_not_found]
expected ':' in a witness table [expected_sil_witness_colon]
expected '(' in a witness table [expected_sil_witness_lparen]
expected ')' in a witness table [expected_sil_witness_rparen]
sil function not found %0 [sil_witness_func_not_found]
sil protocol not found %0 [sil_witness_protocol_not_found]
sil associated type decl not found %0 [sil_witness_assoc_not_found]
sil associated type path for conformance not found %0 [sil_witness_assoc_conf_not_found]
sil protocol conformance not found [sil_witness_protocol_conformance_not_found]
expected '%0' in differentiability witness [sil_diff_witness_expected_token]
unknonwn differentiability kind '%0'; expected 'forward', 'reverse', 'normal', or 'linear' [sil_diff_witness_unknown_kind]
differentiability witness declaration should not be serialized [sil_diff_witness_serialized_declaration]
reference to undefined differentiability witness [sil_diff_witness_undefined]
expected witness generic signature '%0' does not have same generic parameters as original function generic signature '%1' [sil_diff_witness_invalid_generic_signature]
expected coverage hash [sil_coverage_invalid_hash]
expected '{' in coverage map [sil_coverage_expected_lbrace]
expected line:column pair [sil_coverage_expected_loc]
expected '->' after start location [sil_coverage_expected_arrow]
expected ':' after source range [sil_coverage_expected_colon]
expected counter expression, id, or 'zero' [sil_coverage_invalid_counter]
expected ')' to end counter expression [sil_coverage_expected_rparen]
expected quotes surrounding PGO function name [sil_coverage_expected_quote]
expected '+' or '-' [sil_coverage_invalid_operator]
expected type [expected_type]
expected initial value after '=' [expected_init_value]
expected identifier in dotted type [expected_identifier_in_dotted_type]
expected identifier for type name [expected_identifier_for_type]
expected '>' to complete generic argument list [expected_rangle_generic_arg_list]
expected type for function result [expected_type_function_result]
only syntactic function types can be generic [generic_non_function]
only function declarations may be marked 'rethrows'; did you mean 'throws'? [rethrowing_function_type]
only function declarations may be marked 'reasync'; did you mean 'async'? [reasync_function_type]
'%0' may only occur before '->' [async_or_throws_in_wrong_position]
expected throwing specifier; did you mean 'throws'? [throw_in_function_type]
expected type before '->' [expected_type_before_arrow]
expected type after '->' [expected_type_after_arrow]
function types cannot have argument labels; use '_' before %0 [function_type_argument_label]
expected a dynamically_replaceable function [expected_dynamic_func_attr]
%select{'async'|'reasync'}0 must precede %select{'throws'|'rethrows'}1 [async_after_throws]
'%0' has already been specified [duplicate_effects_specifier]
expected expression after '=' in 'case' [expected_expr_enum_case_raw_value]
raw value for enum case must be a literal [nonliteral_enum_case_raw_value]
array types are now written with the brackets around the element type [new_array_syntax]
expected ']' in array type [expected_rbracket_array_type]
expected element type [expected_element_type]
expected dictionary value type [expected_dictionary_value_type]
expected ']' in dictionary type [expected_rbracket_dictionary_type]
unexpected ']' in type; did you mean to write an array type? [extra_rbracket]
unexpected ':' in type; did you mean to write a dictionary type? [extra_colon]
unexpected subscript in array literal; did you mean to write two separate elements instead? [subscript_array_element]
add a separator between the elements [subscript_array_element_fix_it_add_comma]
remove the space between the elements to silence this warning [subscript_array_element_fix_it_remove_space]
expected ')' at end of tuple list [expected_rparen_tuple_type_list]
only a single element can be variadic [multiple_ellipsis_in_tuple]
default argument not permitted in a tuple type [tuple_type_init]
default argument not permitted in a protocol method [protocol_method_argument_init]
default argument not permitted in a protocol initializer [protocol_init_argument_init]
default argument not permitted in a protocol subscript [protocol_subscript_argument_init]
tuple element cannot have two labels [tuple_type_multiple_labels]
expected '>' to complete protocol-constrained type [expected_rangle_protocol]
'protocol<...>' composition syntax has been removed; join the protocols using '&' [deprecated_protocol_composition]
'protocol<...>' composition syntax has been removed and is not needed here [deprecated_protocol_composition_single]
'protocol<>' syntax has been removed; use 'Any' instead [deprecated_any_composition]
expected 'var' or 'let' to introduce SIL box field type [sil_box_expected_var_or_let]
expected '}' to complete SIL box field type list [sil_box_expected_r_brace]
expected '>' to complete SIL box generic argument list [sil_box_expected_r_angle]
expected '<' to begin SIL function type substitution list after 'for' [sil_function_subst_expected_l_angle]
expected '>' to end SIL function type substitution list after 'for <...' [sil_function_subst_expected_r_angle]
expected '<' to begin substituted parameter list after '@substituted' [sil_function_subst_expected_generics]
expected function type after '@substituted' [sil_function_subst_expected_function]
expected 'for' to begin substitutions after '@substituted' function type [sil_function_subst_expected_subs]
unexpected 'for' to begin substitutions after non-generic function type [sil_function_subs_without_generics]
'some' should appear at the beginning of a composition [opaque_mid_composition]
expected non-negative size to be specified in layout constraint [layout_size_should_be_positive]
expected non-negative alignment to be specified in layout constraint [layout_alignment_should_be_positive]
expected ')' to complete layout constraint [expected_rparen_layout_constraint]
layout constraints are only allowed inside '_specialize' attributes [layout_constraints_only_inside_specialize_attr]
expected pattern [expected_pattern]
keyword '%0' cannot be used as an identifier here [keyword_cant_be_identifier]
found an unexpected second identifier in %0 declaration; is there an accidental break? [repeated_identifier]
join the identifiers together [join_identifiers]
join the identifiers together with camel-case [join_identifiers_camel_case]
if this name is unavoidable, use backticks to escape it [backticks_to_escape]
expected ')' at end of tuple pattern [expected_rparen_tuple_pattern_list]
'...' cannot be applied to a subpattern which is not explicitly typed [untyped_pattern_ellipsis]
default arguments are not allowed in closures [no_default_arg_closure]
default arguments are not allowed in curried parameter lists [no_default_arg_curried]
'%select{var|let}0' cannot appear nested inside another 'var' or 'let' pattern [var_pattern_in_var]
%0 must be bound in every pattern [extra_var_in_multiple_pattern_list]
'let' pattern cannot appear nested in an already immutable context [let_pattern_in_immutable_context]
%0 arguments must have a type specified [specifier_must_have_type]
expected ')' in parameter [expected_rparen_parameter]
expected parameter type following ':' [expected_parameter_type]
expected parameter name followed by ':' [expected_parameter_name]
expected ':' following argument label and parameter name [expected_parameter_colon]
expected '=' instead of '==' to assign default value for parameter [expected_assignment_instead_of_comparison_operator]
variadic parameter cannot have a default value [parameter_vararg_default]
'%0' before a parameter name is not allowed, place it before the parameter type instead [parameter_specifier_as_attr_disallowed]
parameter must not have multiple '__owned', 'inout', or '__shared' specifiers [parameter_specifier_repeated]
'%0' in this position is interpreted as an argument label [parameter_let_var_as_attr]
extraneous duplicate parameter name; %0 already has an argument label [parameter_extraneous_double_up]
%select{operator|closure|enum case}0 cannot have keyword arguments [parameter_operator_keyword_argument]
unnamed parameters must be written with the empty name '_' [parameter_unnamed]
unnamed parameters must be written with the empty name '_' [parameter_unnamed_warn]
cannot have more than one parameter list [parameter_curry_syntax_removed]
unexpected initializer in pattern; did you mean to use '='? [initializer_as_typed_pattern]
a parameter following a variadic parameter requires a label [unlabeled_parameter_following_variadic_parameter]
no parameters may follow a variadic parameter in a closure [closure_unlabeled_parameter_following_variadic_parameter]
enum element with associated values must have at least one associated value [enum_element_empty_arglist]
enum element with associated values must have at least one associated value; this will be an error in the future version of Swift [enum_element_empty_arglist_swift4]
did you mean to remove the empty associated value list? [enum_element_empty_arglist_delete]
did you mean to explicitly add a 'Void' associated value? [enum_element_empty_arglist_add_void]
expected statement [expected_stmt]
statements are not allowed at the top level [illegal_top_level_stmt]
expressions are not allowed at the top level [illegal_top_level_expr]
';' statements are not allowed [illegal_semi_stmt]
top-level statement cannot begin with a closure expression [statement_begins_with_closure]
consecutive statements on a line must be separated by ';' [statement_same_line_without_semi]
consecutive statements on a line must be separated by a newline [statement_same_line_without_newline]
labels are only valid on loops, if, and switch statements [invalid_label_on_stmt]
labeled block needs 'do' [labeled_block_needs_do]
%0 has been replaced with %1 in Swift 3 [snake_case_deprecated]
expected expression in assignment [expected_expr_assignment]
expected '}' at end of brace statement [expected_rbrace_in_brace_stmt]
type alias is missing an assigned type; use 'associatedtype' to define an associated type requirement [typealias_inside_protocol_without_type]
associated types can only be defined in a protocol; define a type or introduce a 'typealias' to satisfy an associated type requirement [associatedtype_outside_protocol]
expected expression in 'return' statement [expected_expr_return]
expression following 'return' is treated as an argument of the 'return' [unindented_code_after_return]
indent the expression to silence this warning [indent_expression_to_silence]
expected expression in 'throw' statement [expected_expr_throw]
found 'async' in expression; did you mean 'await'? [expected_await_not_async]
expected expression in 'yield' statement [expected_expr_yield]
expected '{' after 'defer' [expected_lbrace_after_defer]
expected ',' joining parts of a multi-clause condition [expected_comma_stmtcondition]
expected expression in conditional [expected_expr_conditional]
expected '%0' in conditional [expected_binding_keyword]
expected expression after '=' in conditional binding [expected_expr_conditional_var]
variable binding in a condition requires an initializer [conditional_var_initializer_required]
pattern matching binding is spelled with 'case %0', not '%0 case' [wrong_condition_case_location]
expected expression, var, or let in 'if' condition [expected_condition_if]
missing condition in an 'if' statement [missing_condition_after_if]
expected '{' after 'if' condition [expected_lbrace_after_if]
expected '{' or 'if' after 'else' [expected_lbrace_or_if_after_else]
expected '{' or 'if' after 'else'; did you mean to write 'if'? [expected_lbrace_or_if_after_else_fixit]
unexpected 'else' immediately following 'if' condition [unexpected_else_after_if]
remove 'else' to execute the braced block of statements when the condition is true [suggest_removing_else]
expected expression, var, let or case in 'guard' condition [expected_condition_guard]
missing condition in an 'guard' statement [missing_condition_after_guard]
expected 'else' after 'guard' condition [expected_else_after_guard]
expected '{' after 'guard' else [expected_lbrace_after_guard]
expected expression, var, or let in 'while' condition [expected_condition_while]
missing condition in a 'while' statement [missing_condition_after_while]
expected '{' after 'while' condition [expected_lbrace_after_while]
expected '{' after 'repeat' [expected_lbrace_after_repeat]
expected 'while' after body of 'repeat' statement [expected_while_after_repeat_body]
expected expression in 'repeat-while' condition [expected_expr_repeat_while]
'do-while' statement is not allowed [do_while_now_repeat_while]
did you mean 'repeat-while' statement? [do_while_expected_repeat_while]
did you mean separate 'do' and 'while' statements? [do_while_expected_separate_stmt]
expected '{' after 'do' [expected_lbrace_after_do]
expected '{' after 'catch' pattern [expected_lbrace_after_catch]
expected expression for 'where' guard of 'catch' [expected_catch_where_expr]
the 'do' keyword is used to specify a 'catch' region [docatch_not_trycatch]
C-style for statement has been removed in Swift 3 [c_style_for_stmt_removed]
expected 'in' after for-each pattern [expected_foreach_in]
expected Sequence expression for for-each loop [expected_foreach_container]
expected '{' to start the body of for-each loop [expected_foreach_lbrace]
expected expression in 'where' guard of 'for/in' [expected_foreach_where_expr]
expected expression in 'switch' statement [expected_switch_expr]
expected '{' after 'switch' subject expression [expected_lbrace_after_switch]
expected '}' at end of 'switch' statement [expected_rbrace_switch]
'%0' label can only appear inside a 'switch' statement [case_outside_of_switch]
all statements inside a switch must be covered by a 'case' or 'default' [stmt_in_switch_not_covered_by_case]
additional 'case' blocks cannot appear after the 'default' block of a 'switch' [case_after_default]
expected expression for 'where' guard of 'case' [expected_case_where_expr]
expected ':' after '%0' [expected_case_colon]
'default' cannot be used with a 'where' guard expression [default_with_where]
%select{'case'|'default'}0 label in a 'switch' should have at least one executable statement [case_stmt_without_body]
'try' cannot be used with '%0' [try_on_stmt]
'try' must be placed on the %select{returned|thrown|yielded}0 expression [try_on_return_throw_yield]
'try' must be placed on the initial value expression [try_on_var_let]
expected expression [expected_expr]
expected '%0' separator [expected_separator]
unexpected '%0' separator [unexpected_separator]
expected expression after operator [expected_expr_after_operator]
expected expression after unary operator [expected_expr_after_unary_operator]
unary operator cannot be separated from its operand [expected_prefix_operator]
expected operator name in operator reference [expected_operator_ref]
operator with postfix spacing cannot start a subexpression [invalid_postfix_operator]
expected member name following '.' [expected_member_name]
numeric value following '$' is too large [dollar_numeric_too_large]
expected named member of numeric literal [numeric_literal_numeric_member]
'$' is not an identifier; use backticks to escape it [standalone_dollar_identifier]
cannot declare entity named %0; the '$' prefix is reserved for implicitly-synthesized declarations [dollar_identifier_decl]
anonymous closure argument not contained in a closure [anon_closure_arg_not_in_closure]
anonymous closure arguments cannot be used inside a closure that has explicit arguments [anon_closure_arg_in_closure_with_args]
anonymous closure arguments cannot be used inside a closure that has explicit arguments; did you mean '%0'? [anon_closure_arg_in_closure_with_args_typo]
closure tuple parameter does not support destructuring [anon_closure_tuple_param_destructuring]
expected the name of a closure parameter [expected_closure_parameter_name]
expected 'weak', 'unowned', or no specifier in capture list [expected_capture_specifier]
expected name of in closure capture list [expected_capture_specifier_name]
expected initializer for closure capture specifier [expected_init_capture_specifier]
expected ']' at end of capture list [expected_capture_list_end_rsquare]
fields may only be captured by assigning to a specific name [cannot_capture_fields]
expected closure result type after '->' [expected_closure_result_type]
expected 'in' after the closure signature [expected_closure_in]
unexpected tokens prior to 'in' [unexpected_tokens_before_closure_in]
expected '}' at end of closure [expected_closure_rbrace]
braces here form a trailing closure separated from its callee by multiple newlines [trailing_closure_after_newlines]
callee is here [trailing_closure_callee_here]
string literals in Swift are not preceded by an '@' sign [string_literal_no_atsign]
'.%0' is not a valid floating point literal; it must be written '0.%0' [invalid_float_literal_missing_leading_zero]
#available may only be used as condition of an 'if', 'guard' or 'while' statement [availability_query_outside_if_stmt_guard]
an empty argument label is spelled with '_' [empty_arg_label_underscore]
expected identifier after '.' expression [expected_identifier_after_dot_expr]
expected identifier or 'init' after super '.' expression [expected_identifier_after_super_dot_expr]
expected '.' or '[' after 'super' [expected_dot_or_subscript_after_super]
using 'super' in a closure where 'self' is explicitly captured is not yet supported [super_in_closure_with_capture]
'self' explicitly captured here [super_in_closure_with_capture_here]
'try' must precede 'await' [await_before_try]
expected expression in list of expressions [expected_expr_in_expr_list]
expected expression in container literal [expected_expr_in_collection_literal]
expected key expression in dictionary literal [expected_key_in_dictionary_literal]
expected value in dictionary literal [expected_value_in_dictionary_literal]
expected ':' in dictionary literal [expected_colon_in_dictionary_literal]
expected ')' in expression list [expected_rparen_expr_list]
expected ']' in expression list [expected_rsquare_expr_list]
expected ']' in container literal expression [expected_rsquare_array_expr]
expected argument list in object literal [expected_arg_list_in_object_literal]
'%select{|[}0#%1(...)%select{|#]}0' has been renamed to '#%2(...)' [legacy_object_literal]
use of unknown directive '#%0' [unknown_pound_expr]
expected expression after '?' in ternary expression [expected_expr_after_if_question]
expected ':' after '? ...' in ternary expression [expected_colon_after_if_question]
expected expression after '? ... :' in ternary expression [expected_expr_after_if_colon]
expected expression after 'try' [expected_expr_after_try]
expected expression after 'await' [expected_expr_after_await]
expected type after 'is' [expected_type_after_is]
expected type after 'as' [expected_type_after_as]
extra tokens after interpolated string expression [string_interpolation_extra]
interpolating multiple values will not form a tuple in Swift 5 [string_interpolation_list_changing]
insert parentheses to keep current behavior [string_interpolation_list_insert_parens]
labeled interpolations will not be ignored in Swift 5 [string_interpolation_label_changing]
remove %0 label to keep current behavior [string_interpolation_remove_label]
expected '(' following '#keyPath' [expr_keypath_expected_lparen]
expected property or type name within '#keyPath(...)' [expr_keypath_expected_property_or_type]
expected ')' to complete '#keyPath' expression [expr_keypath_expected_rparen]
expected expression path in Swift key path [expr_keypath_expected_expr]
expected '(' following '#selector' [expr_selector_expected_lparen]
expected expression naming a method within '#selector(...)' [expr_selector_expected_method_expr]
expected expression naming a property within '#selector(...)' [expr_selector_expected_property_expr]
expected ')' to complete '#selector' expression [expr_selector_expected_rparen]
'.dynamicType' is deprecated. Use 'type(of: ...)' instead [expr_dynamictype_deprecated]
#assert is an experimental feature that is currently disabled [pound_assert_disabled]
expected '(' in #assert directive [pound_assert_expected_lparen]
expected ')' in #assert directive [pound_assert_expected_rparen]
expected a condition expression [pound_assert_expected_expression]
expected a string literal [pound_assert_expected_string_literal]
unexpected tokens in '#if' expression body [expr_postfix_ifconfig_unexpectedtoken]
'=' has been replaced with ':' in attribute arguments [replace_equal_with_colon_for_value]
expected an attribute name [expected_attribute_name]
unexpected '(' in attribute '%0' [unexpected_lparen_in_attribute]
duplicate %select{attribute|modifier}0 [duplicate_attribute]
%select{attribute|modifier}0 already specified here [previous_attribute]
'%0' contradicts previous %select{attribute|modifier}2 '%1' [mutually_exclusive_attrs]
'infix' modifier is not required or allowed on func declarations [invalid_infix_on_func]
expected ']' or ',' in attribute list [expected_in_attribute_list]
attribute can only be applied to types, not declarations [type_attribute_applied_to_decl]
attribute can only be applied to declarations, not types [decl_attribute_applied_to_type]
expected '(' in '%0' %select{attribute|modifier}1 [attr_expected_lparen]
expected ')' in '%0' %select{attribute|modifier}1 [attr_expected_rparen]
expected ',' in '%0' %select{attribute|modifier}1 [attr_expected_comma]
expected string literal in '%0' attribute [attr_expected_string_literal]
expected integer literal in '%0' attribute [attr_expected_integer_literal]
expected '%0' option such as '%1' [attr_expected_option_such_as]
unknown option '%0' for attribute '%1' [attr_unknown_option]
missing label '%0:' in '@%1' attribute [attr_missing_label]
expected label '%0:' in '@%1' attribute [attr_expected_label]
alignment value must be a positive integer literal [alignment_must_be_positive_integer]
@_swift_native_objc_runtime_base class name must be an identifier [swift_native_objc_runtime_base_must_be_identifier]
@_objcRuntimeName name must be an identifier [objc_runtime_name_must_be_identifier]
attribute '%0' can only be used in a non-local scope [attr_only_at_non_local_scope]
@_projectedValueProperty name must be an identifier [projection_value_property_not_identifier]
expected 'set' as subject of '%0' modifier [attr_access_expected_set]
expected an SPI identifier as subject of the '@_spi' attribute [attr_access_expected_spi_name]
'@%0' has been renamed to '@%1' [attr_renamed]
'@%0' has been renamed to '@%1' [attr_renamed_warning]
no attribute named '@%0'; did you mean '@%1'? [attr_name_close_match]
attribute '%0' is unsupported on target '%1' [attr_unsupported_on_target]
expected platform name or '*' for '%0' attribute [attr_availability_platform]
'%0' attribute cannot be both unconditionally 'unavailable' and 'deprecated' [attr_availability_unavailable_deprecated]
'%0' argument has already been specified [attr_availability_invalid_duplicate]
unknown platform '%0' for attribute '%1' [attr_availability_unknown_platform]
'renamed' argument of '%0' attribute must be an operator, identifier, or full function name, optionally prefixed by a type name [attr_availability_invalid_renamed]
expected '%0' option such as 'unavailable', 'introduced', 'deprecated', 'obsoleted', 'message', or 'renamed' [attr_availability_expected_option]
expected ':' after '%1' in '%0' attribute [attr_availability_expected_equal]
expected version number in '%0' attribute [attr_availability_expected_version]
expected 'introduced', 'deprecated', or 'obsoleted' in '%0' attribute for platform '%1' [attr_availability_platform_agnostic_expected_option]
expected version number with 'deprecated' in '%0' attribute for platform '%1' [attr_availability_platform_agnostic_expected_deprecated_version]
'%0' cannot be used in '%1' attribute for platform '%2' [attr_availability_platform_agnostic_infeasible_option]
unexpected version number in '%0' attribute for non-specific platform '*' [attr_availability_nonspecific_platform_unexpected_version]
future platforms identified by '*' cannot be used in an availability macro definition [attr_availability_wildcard_in_macro]
expected an identifier to begin an availability macro definition [attr_availability_missing_macro_name]
expected ':' after '%0' in availability macro definition [attr_availability_expected_colon_macro]
reference to undefined version '%0' for availability macro '%1' [attr_availability_unknown_version]
duplicate definition of availability macro '%0' for version '%1' [attr_availability_duplicate]
expected ')' in @_originallyDefinedIn argument list [originally_defined_in_missing_rparen]
unrecognized platform name in @_originallyDefinedIn argument list [originally_defined_in_unrecognized_platform]
unrecognized property in @_originallyDefinedIn argument list [originally_defined_in_unrecognized_property]
expected 'module: "original"' in the first argument to @_originallyDefinedIn [originally_defined_in_need_original_module_name]
original module name cannot be empty in @_originallyDefinedIn [originally_defined_in_need_nonempty_module_name]
expected at least one platform version in @_originallyDefinedIn [originally_defined_in_need_platform_version]
@_originallyDefinedIn only uses major and minor version number [originally_defined_in_major_minor_only]
* as platform name has no effect [originally_defined_in_missing_platform_name]
Swift language version checks has no effect in @_originallyDefinedIn [originally_defined_in_swift_version]
PackageDescription version checks has no effect in @_originallyDefinedIn [originally_defined_in_package_description]
expected '(' after 'convention' attribute [convention_attribute_expected_lparen]
expected convention name identifier in 'convention' attribute [convention_attribute_expected_name]
expected ')' after convention name for 'convention' attribute [convention_attribute_expected_rparen]
expected 'cType' label in 'convention' attribute [convention_attribute_ctype_expected_label]
expected ':' after 'cType' for 'convention' attribute [convention_attribute_ctype_expected_colon]
expected string literal containing clang type for 'cType' in 'convention' attribute [convention_attribute_ctype_expected_string]
expected ':' after 'witness_method' for 'convention' attribute [convention_attribute_witness_method_expected_colon]
expected protocol name in 'witness_method' 'convention' attribute [convention_attribute_witness_method_expected_protocol]
missing ':' after selector piece in @objc attribute [attr_objc_missing_colon]
expected ')' after name for @objc [attr_objc_expected_rparen]
expected name within parentheses of @objc attribute [attr_objc_empty_name]
expected ')' after function name for @_dynamicReplacement [attr_dynamic_replacement_expected_rparen]
expected a function name in @_dynamicReplacement(for:) [attr_dynamic_replacement_expected_function]
expected 'for' in '_dynamicReplacement' attribute [attr_dynamic_replacement_expected_for]
expected ':' after @_dynamicReplacement(for [attr_dynamic_replacement_expected_colon]
expected a type name in @_typeEraser() [attr_type_eraser_expected_type_name]
expected ')' after type name for @_typeEraser [attr_type_eraser_expected_rparen]
expected ')' after function name for @_private [attr_private_import_expected_rparen]
expected 'sourceFile' in '_private' attribute [attr_private_import_expected_sourcefile]
expected a source file name in @_private(sourceFile:) [attr_private_import_expected_sourcefile_name]
expected ':' after @_private(sourceFile [attr_private_import_expected_colon]
expected '(' after 'opened' attribute [opened_attribute_expected_lparen]
known id for 'opened' attribute must be a UUID string [opened_attribute_id_value]
expected ')' after id value for 'opened' attribute [opened_attribute_expected_rparen]
expected '%0' option (readnone, readonly, readwrite) [effects_attribute_expect_option]
expected 'safe' or 'unsafe' [attr_unowned_invalid_specifier]
expected ')' after specifier for 'unowned' [attr_unowned_expected_rparen]
'warn_unused_result' attribute behavior is now the default [attr_warn_unused_result_removed]
expected ')' after 'warn_unused_result' attribute [attr_warn_unused_result_expected_rparen]
missing ':' after %0 in '_specialize' attribute [attr_specialize_missing_colon]
missing ',' in '_specialize' attribute [attr_specialize_missing_comma]
unknown parameter %0 in '_specialize attribute' [attr_specialize_unknown_parameter_name]
expected a boolean true or false value in '_specialize' attribute [attr_specialize_expected_bool_value]
expected a parameter label or a where clause in '_specialize' attribute [attr_specialize_missing_parameter_label_or_where_clause]
parameter '%0' was already defined in '_specialize' attribute [attr_specialize_parameter_already_defined]
expected 'partial' or 'full' as values of the 'kind' parameter in '_specialize' attribute [attr_specialize_expected_partial_or_full]
expected a function name as the value of the 'target' parameter in '_specialize' attribute [attr_specialize_expected_function]
expected an SPI identifier as the value of the 'spi' parameter in '_specialize' attribute [attr_specialize_expected_spi_name]
expected a member name as second parameter in '_implements' attribute [attr_implements_expected_member_name]
'@differentiable' has been renamed to '@differentiable(reverse)' and will be removed in the next release [attr_differentiable_expected_reverse]
unsupported differentiability kind '%0'; only 'reverse' is supported [attr_differentiable_kind_not_supported]
unknown differentiability kind '%0'; only 'reverse' is supported [attr_differentiable_unknown_kind]
expected a list of parameters to differentiate with respect to [attr_differentiable_expected_parameter_list]
use 'wrt:' to specify parameters to differentiate with respect to [attr_differentiable_use_wrt_not_withrespectto]
expected 'wrt:' or 'where' in '@differentiable' attribute [attr_differentiable_expected_label]
expected a colon ':' after '%0' [expected_colon_after_label]
expected a parameter, which can be a function parameter name, parameter index, or 'self' [diff_params_clause_expected_parameter]
expected a parameter, which can be a function parameter index or 'self' [diff_params_clause_expected_parameter_unnamed]
expected an original function name [autodiff_attr_expected_original_decl_name]
expected '[' to start the %0 [sil_autodiff_expected_lsquare]
expected ']' to complete the %0 [sil_autodiff_expected_rsquare]
expected a space-separated list of indices, e.g. '0 1' [sil_autodiff_expected_index_list]
expected label '%0' in index list [sil_autodiff_expected_index_list_label]
expected the index of a parameter to differentiate with respect to [sil_autodiff_expected_parameter_index]
expected the index of a result to differentiate from [sil_autodiff_expected_result_index]
expected '{' to start a derivative function list [sil_inst_autodiff_operand_list_expected_lbrace]
expected ',' between operands in a derivative function list [sil_inst_autodiff_operand_list_expected_comma]
expected '}' to start a derivative function list [sil_inst_autodiff_operand_list_expected_rbrace]
expected an extractee kind attribute, which can be one of '[original]', '[jvp]', and '[vjp]' [sil_inst_autodiff_expected_differentiable_extractee_kind]
expected an extractee kind attribute, which can be one of '[original]' and '[transpose]' [sil_inst_autodiff_expected_linear_extractee_kind]
expected an operand of a function type [sil_inst_autodiff_expected_function_type_operand]
expected a differentiability witness kind, which can be one of '[jvp]', '[vjp]', or '[transpose]' [sil_inst_autodiff_expected_differentiability_witness_kind]
expected witness_generic signature '%0' does not have same generic parameters as original function generic signature '%1' [sil_inst_autodiff_invalid_witness_generic_signature]
argument of '%0' attribute must be an identifier or full function name [attr_completion_handler_async_invalid_name]
expected '>' to complete generic parameter list [expected_rangle_generics_param]
expected an identifier to name generic parameter [expected_generics_parameter_name]
'class' constraint can only appear on protocol declarations [unexpected_class_constraint]
did you mean to write an 'AnyObject' constraint? [suggest_anyobject]
expected a class type or protocol-constrained type restricting %0 [expected_generics_type_restriction]
use '==' for same-type requirements rather than '=' [requires_single_equal]
expected ',' to separate the requirements of this 'where' clause [requires_comma]
expected ':' or '==' to indicate a conformance or same-type requirement [expected_requirement_delim]
redundant 'class' requirement [redundant_class_requirement]
'class' must come first in the requirement list [late_class_requirement]
'where' clause next to generic parameters is obsolete, must be written following the declaration's type [where_inside_brackets]
expected '&&' or '||' expression [unsupported_conditional_compilation_binary_expression]
expected unary '!' expression [unsupported_conditional_compilation_unary_expression]
unexpected platform condition (expected 'os', 'arch', or 'swift') [unsupported_platform_condition_expression]
expected only one argument to platform condition [platform_condition_expected_one_argument]
unexpected argument for the '_runtime' condition; expected '_Native' or '_ObjC' [unsupported_platform_runtime_condition_argument]
unexpected platform condition argument: expected %0 [unsupported_platform_condition_argument]
invalid conditional compilation expression [unsupported_conditional_compilation_expression_type]
'%0' is not a valid conditional compilation expression, use '%1' [unsupported_conditional_compilation_integer]
version component contains non-numeric characters [version_component_not_number]
compiler version must not have more than five components [compiler_version_too_many_components]
the second version component is not used for comparison [unused_compiler_version_component]
found empty version component [empty_version_component]
compiler version component out of range: must be in [0, %0] [compiler_version_component_out_of_range]
version requirement is empty [empty_version_string]
unknown %0 for build configuration '%1' [unknown_platform_condition_argument]
'%0' has been renamed to '%1' [renamed_platform_condition_argument]
platform condition appears to be testing for simulator environment; use 'targetEnvironment(simulator)' instead [likely_simulator_platform_condition]
expected availability condition [avail_query_expected_condition]
expected platform name [avail_query_expected_platform_name]
expected version number [avail_query_expected_version_number]
expected ')' in availability query [avail_query_expected_rparen]
unrecognized platform name %0 [avail_query_unrecognized_platform_name]
'%0' cannot be used in an availability condition [avail_query_disallowed_operator]
'%0' can't be combined with shorthand specification '%1' [avail_query_argument_and_shorthand_mix_not_allowed]
did you mean to specify an introduction version? [avail_query_meant_introduced]
version comparison not needed [avail_query_version_comparison_not_needed]
must handle potential future platforms with '*' [availability_query_wildcard_required]
'%0' version-availability must be specified alone [availability_must_occur_alone]
Swift language version checks not allowed in #available(...) [pound_available_swift_not_allowed]
PackageDescription version checks not allowed in #available(...) [pound_available_package_description_not_allowed]
version for '%0' already specified [availability_query_repeated_platform]
'%0' %select{attribute|modifier}1 is only valid when experimental concurrency is enabled [attr_requires_concurrency]
unknown %0 syntax exists in the source [unknown_syntax_entity]
expected an argument label followed by a closure literal [expected_argument_label_followed_by_closure_literal]
expected a closure literal [expected_closure_literal]
expected '}' at the end of a trailing closures block [expected_multiple_closures_block_rbrace]
%0 declared here [decl_declared_here]
%0 declared here [kind_declared_here]
%1 '%0' is implicitly declared [implicit_member_declared_here]
extended type declared here [extended_type_declared_here]
opaque return type declared here [opaque_return_type_declared_here]
ambiguous reference to member %0 [ambiguous_member_overload_set]
ambiguous reference to %0 %1 [ambiguous_reference_to_decl]
no exact matches in %select{reference|call}0 to %1 %select{%3|}2 [no_overloads_match_exactly_in_call]
candidate has partially matching parameter list %0 [candidate_partial_match]
value of type %0 has no subscripts [could_not_find_value_subscript]
value of tuple type %0 has no member %1 [could_not_find_tuple_member]
value of type %0 has no member %1 [could_not_find_value_member]
value of type %0 has no member %1; did you mean %2? [could_not_find_value_member_corrected]
value of type %0 has no dynamic member %2 using key path from root type %1; did you mean %3? [could_not_find_value_dynamic_member_corrected]
value of type %0 has no dynamic member %2 using key path from root type %1 [could_not_find_value_dynamic_member]
cannot infer key path type from context; consider explicitly specifying a root type [cannot_infer_contextual_keypath_type_specify_root]
'AnyKeyPath' does not provide enough context for root type to be inferred; consider explicitly specifying a root type [cannot_infer_keypath_root_anykeypath_context]
type %0 has no member %1 [could_not_find_type_member]
type %0 has no member %1; did you mean %2? [could_not_find_type_member_corrected]
value of type %0 has no property or method named 'subscript'; did you mean to use the subscript operator? [could_not_find_subscript_member_did_you_mean]
cannot access element using subscript for tuple type %0; use '.' notation instead [could_not_find_subscript_member_tuple]
cannot access element using subscript for tuple type %0; did you mean to use '.%1'? [could_not_find_subscript_member_tuple_did_you_mean_use_dot]
enum type %0 has no case %1; did you mean %2? [could_not_find_enum_case]
did you mean to specify a raw type on the enum declaration? [did_you_mean_raw_type]
did you mean to declare %0 as a protocol conformance for %1? [did_you_mean_generic_param_as_conformance]
cast 'Any' to 'AnyObject' or use 'as!' to force downcast to a more specific type to access members [any_as_anyobject_fixit]
member %0 expects argument of type %1 [expected_argument_in_contextual_member]
member %0 is a function; did you mean to call it? [expected_parens_in_contextual_member]
member %0 is a function that produces expected type %1; did you mean to call it? [expected_parens_in_contextual_member_type]
member %0 in %2 produces result of type %1, but context expects %2 [expected_result_in_contextual_member]
enum case %0 has no associated values [unexpected_arguments_in_enum_case]
static member %1 cannot be used on instance of type %0 [could_not_use_type_member_on_instance]
enum case %0 cannot be used as an instance member [could_not_use_enum_element_on_instance]
static member %1 cannot be used on protocol metatype %0 [could_not_use_type_member_on_protocol_metatype]
instance member %1%select{| of type %2}3 cannot be used on%select{| instance of nested}3 type %0 [could_not_use_instance_member_on_type]
member %1 cannot be used on value of protocol type %0; use a generic constraint instead [could_not_use_member_on_existential]
%0 is inaccessible due to '%select{private|fileprivate|internal|@_spi|@_spi}1' protection level [candidate_inaccessible]
%0 is inaccessible due to '%select{private|fileprivate|internal|@_spi|@_spi}1' protection level [note_candidate_inaccessible]
%0 initializer is inaccessible due to '%select{private|fileprivate|internal|@_spi|@_spi}1' protection level [init_candidate_inaccessible]
cannot use mutating member on immutable value: %0 [cannot_pass_rvalue_mutating_subelement]
cannot use mutating member on immutable value of type %0 [cannot_pass_rvalue_mutating]
cannot use mutating getter on immutable value: %0 [cannot_pass_rvalue_mutating_getter_subelement]
cannot use mutating getter on immutable value of type %0 [cannot_pass_rvalue_mutating_getter]
the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions [expression_too_complex]
value of type %0 cannot be compared by reference; did you mean to compare by value? [value_type_comparison_with_nil_illegal_did_you_mean]
type %0 is not optional, value can never be nil [value_type_comparison_with_nil_illegal]
expression pattern of type %0 cannot match values of type %1 [cannot_match_expr_pattern_with_value]
tuple pattern cannot match values of non-tuple type %0 [cannot_match_expr_tuple_pattern_with_nontuple_value]
pattern cannot match values of type %0 [cannot_match_unresolved_expr_pattern_with_value]
cannot check reference equality of functions; operands here have types %1 and %2 [cannot_reference_compare_types]
binary operator '%0' cannot be applied to operands of type %1 and %2 [cannot_apply_binop_to_args]
binary operator '%0' cannot be applied to two %1 operands [cannot_apply_binop_to_same_args]
unary operator '%0' cannot be applied to an operand of type %1 [cannot_apply_unop_to_arg]
cannot pass immutable value to mutating operator: %0 [cannot_apply_lvalue_unop_to_subelement]
cannot pass immutable value of type %0 to mutating operator [cannot_apply_lvalue_unop_to_rvalue]
left side of mutating operator isn't mutable: %0 [cannot_apply_lvalue_binop_to_subelement]
left side of mutating operator has immutable type %0 [cannot_apply_lvalue_binop_to_rvalue]
cannot subscript a value of type %0 [cannot_subscript_base]
cannot subscript a value of incorrect or ambiguous type [cannot_subscript_ambiguous_base]
cannot subscript a nil literal value [cannot_subscript_nil_literal]
nil literal cannot be the source of a conditional cast [conditional_cast_from_nil]
cannot pass immutable value as inout argument: %0 [cannot_pass_rvalue_inout_subelement]
inout argument could be set to a value with a type other than %0; use a value declared as type %1 instead [cannot_pass_rvalue_inout_converted]
change variable type to %1 if it doesn't need to be declared as %0 [inout_change_var_type_if_possible]
cannot pass immutable value of type %0 as inout argument [cannot_pass_rvalue_inout]
cannot provide default value to inout parameter %0 [cannot_provide_default_value_inout]
cannot invoke %select{|initializer for type }2'%0' with an argument list of type '%1' [cannot_call_with_params]
cannot call value of non-function type %0 [cannot_call_non_function_value]
no '%0' candidates produce the expected contextual result type %1 [no_candidates_match_result_type]
no '%0' candidates produce the expected type %1 for parameter #%2 [no_candidates_match_argument_type]
unable to infer type of a closure parameter %0 in the current context [cannot_infer_closure_parameter_type]
unable to infer closure type in the current context [cannot_infer_closure_type]
unable to infer%select{ complex|}0 closure return type; add explicit type to disambiguate [cannot_infer_closure_result_type]
anonymous closure parameter %0 is used here [use_of_anon_closure_param]
declared closure result %0 is incompatible with contextual type %1 [incorrect_explicit_closure_result]
%select{attribute |}0 '%1' is not supported on a closure [unsupported_closure_attr]
%select{expected an argument list|produces result}0 of type '%1' [suggest_expected_match]
overloads for '%1' exist with these %select{partially matching parameter lists|result types}0: %2 [suggest_partial_overloads]
binary operator '%0' cannot be synthesized for enums with associated values [no_binary_op_overload_for_enum_with_payload]
cannot convert value of type %0 to specified type %1 [cannot_convert_initializer_value]
value of type %0 does not conform to specified type %1 [cannot_convert_initializer_value_protocol]
value of type %0 expected to be instance of class or class-constrained type [cannot_convert_initializer_value_anyobject]
'nil' cannot initialize specified type %0 [cannot_convert_initializer_value_nil]
cannot convert return expression of type %0 to return type %1 [cannot_convert_to_return_type]
return expression of type %0 does not conform to %1 [cannot_convert_to_return_type_protocol]
return expression of type %0 expected to be an instance of a class or class-constrained type [cannot_convert_return_type_to_anyobject]
'nil' is incompatible with return type %0 [cannot_convert_to_return_type_nil]
thrown expression type %0 does not conform to 'Error' [cannot_convert_thrown_type]
thrown error code type %0 does not conform to 'Error'; construct an %1 instance [cannot_throw_error_code]
expected %0 yield value(s) [bad_yield_count]
cannot infer concrete Error for thrown 'nil' value [cannot_throw_nil]
cannot convert value of type %0 to raw type %1 [cannot_convert_raw_initializer_value]
cannot convert 'nil' to raw type %0 [cannot_convert_raw_initializer_value_nil]
default argument value of type %0 cannot be converted to type %1 [cannot_convert_default_arg_value]
default argument value of type %0 does not conform to %1 [cannot_convert_default_arg_value_protocol]
nil default argument value cannot be converted to type %0 [cannot_convert_default_arg_value_nil]
cannot convert value of type %0 to expected argument type %1 [cannot_convert_argument_value]
candidate expects %select{|in-out }2value of type %0 for parameter #%1 [candidate_has_invalid_argument_at_position]
cannot pass array of type %0 as variadic arguments of type %1 [cannot_convert_array_to_variadic]
candidate would match if array elements were passed as variadic arguments of type %0 [candidate_would_match_array_to_variadic]
remove brackets to pass array elements directly [suggest_pass_elements_directly]
cannot convert value of type %0 (%1) to expected argument type %2 (%3) [cannot_convert_argument_value_generic]
conflicting arguments to generic parameter %0 (%1) [conflicting_arguments_for_generic_parameter]
cannot pass %0 to parameter; argument %1 must be a pointer that outlives the call%select{| to %3}2 [cannot_pass_type_to_non_ephemeral]
passing %0 to parameter, but argument %1 should be a pointer that outlives the call%select{| to %3}2 [cannot_pass_type_to_non_ephemeral_warning]
cannot use inout expression here; argument %0 must be a pointer that outlives the call%select{| to %2}1 [cannot_use_inout_non_ephemeral]
inout expression creates a temporary pointer, but argument %0 should be a pointer that outlives the call%select{| to %2}1 [cannot_use_inout_non_ephemeral_warning]
initialization of %0 results in a dangling %select{|buffer }1pointer [cannot_construct_dangling_pointer]
initialization of %0 results in a dangling %select{|buffer }1pointer [cannot_construct_dangling_pointer_warning]
implicit argument conversion from %0 to %1 produces a pointer valid only for the duration of the call%select{| to %3}2 [ephemeral_pointer_argument_conversion_note]
use 'withUnsafe%select{Bytes|MutableBytes|Pointer|MutablePointer}0' in order to explicitly convert argument to %select{buffer |buffer ||}0pointer valid for a defined scope [ephemeral_use_with_unsafe_pointer]
use the 'withCString' method on String in order to explicitly convert argument to pointer valid for a defined scope [ephemeral_use_string_with_c_string]
use the 'withUnsafe%select{Bytes|MutableBytes|BufferPointer|MutableBufferPointer}0' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope [ephemeral_use_array_with_unsafe_buffer]
candidate expects pointer that outlives the call for parameter #%0 [candidate_performs_illegal_ephemeral_conv]
argument type %0 does not conform to expected type %1 [cannot_convert_argument_value_protocol]
argument type %0 expected to be an instance of a class or class-constrained type [cannot_convert_argument_value_anyobject]
'nil' is not compatible with expected argument type %0 [cannot_convert_argument_value_nil]
'nil' is not compatible with expected argument type %0 at position #%1 [note_incompatible_argument_value_nil_at_pos]
cannot convert value of type %0 to expected condition type %1 [cannot_convert_condition_value]
'nil' is not compatible with expected condition type %0 [cannot_convert_condition_value_nil]
cannot yield immutable value of type %0 as an inout yield [cannot_yield_rvalue_by_reference_same_type]
cannot yield immutable value of type %0 as an inout yield of type %1 [cannot_yield_rvalue_by_reference]
cannot yield reference to storage of type %0 as an inout yield of type %1 [cannot_yield_wrong_type_by_reference]
cannot convert value of type %0 to expected yield type %1 [cannot_convert_yield_value]
yielded type %0 does not conform to expected type %1 [cannot_convert_yield_value_protocol]
nil is not compatible with expected yield type %0 [cannot_convert_yield_value_nil]
cannot convert value of type %0 to closure result type %1 [cannot_convert_closure_result]
result value of type %0 does not conform to closure result type %1 [cannot_convert_closure_result_protocol]
'nil' is not compatible with closure result type %0 [cannot_convert_closure_result_nil]
cannot convert parent type %0 to expected type %1 [cannot_convert_parent_type]
member chain produces result of type %0 but contextual base was inferred as %1 [cannot_convert_chain_result_type]
arguments to generic parameter %0 (%1 and %2) are expected to be equal [generic_argument_mismatch]
deinitializers cannot be accessed [destructor_not_accessible]
cannot convert value of type %0 to expected element type %1 [cannot_convert_array_element]
value of type %0 does not conform to expected element type %1 [cannot_convert_array_element_protocol]
'nil' is not compatible with expected element type %0 [cannot_convert_array_element_nil]
cannot convert value of type %0 to expected dictionary key type %1 [cannot_convert_dict_key]
value of type %0 does not conform to expected dictionary key type %1 [cannot_convert_dict_key_protocol]
'nil' is not compatible with expected dictionary key type %0 [cannot_convert_dict_key_nil]
cannot convert value of type %0 to expected dictionary value type %1 [cannot_convert_dict_value]
value of type %0 does not conform to expected dictionary value type %1 [cannot_convert_dict_value_protocol]
'nil' is not compatible with expected dictionary value type %0 [cannot_convert_dict_value_nil]
cannot convert value of type %0 to type %1 in coercion [cannot_convert_coerce]
value of type %0 does not conform to %1 in coercion [cannot_convert_coerce_protocol]
'nil' is not compatible with type %0 in coercion [cannot_convert_coerce_nil]
cannot assign value of type %0 to type %1 [cannot_convert_assign]
add missing conformance to %0 to %1 %2 [assign_protocol_conformance_fix_it]
value of type %0 does not conform to %1 in assignment [cannot_convert_assign_protocol]
value of type %0 expected to be an instance of a class or class-constrained type in assignment [cannot_convert_assign_anyobject]
'nil' cannot be assigned to type %0 [cannot_convert_assign_nil]
cannot assign value of type %0 to subscript of type %1 [cannot_convert_subscript_assign]
value of type %0 does not conform to %1 in subscript assignment [cannot_convert_subscript_assign_protocol]
'nil' cannot be assigned to subscript of type %0 [cannot_convert_subscript_assign_nil]
%0 produces %1, not the expected contextual result type %2 [cannot_convert_candidate_result_to_contextual_type]
cannot convert sequence element type %0 to expected type %1 [cannot_convert_sequence_element_value]
sequence element type %0 does not conform to expected protocol %1 [cannot_convert_sequence_element_protocol]
invalid conversion from throwing function of type %0 to non-throwing function type %1 [throws_functiontype_mismatch]
invalid conversion from 'async' function of type %0 to synchronous function type %1 [async_functiontype_mismatch]
cannot pass function of type %0 to parameter expecting synchronous function type [cannot_pass_async_func_to_sync_parameter]
'async' inferred from asynchronous operation used here [async_inferred_from_operation]
'#keyPath' can only be used with the Objective-C runtime [expr_keypath_no_objc_runtime]
result of key path is unused [expression_unused_keypath_result]
argument of '#keyPath' refers to non-'@objc' property %0 [expr_keypath_non_objc_property]
argument of '#keyPath' refers to property %0 in %1 that depends on '@objc' inference deprecated in Swift 4 [expr_keypath_swift3_objc_inference]
cannot refer to type member %0 within instance of type %1 [expr_keypath_type_of_property]
key path cannot refer to generic type %0 [expr_keypath_generic_type]
%select{key path|dynamic key path member lookup}2 cannot refer to %0 %1 [expr_keypath_not_property]
%select{key path|dynamic key path member lookup}1 cannot refer to %0, which has a mutating getter [expr_keypath_mutating_getter]
%select{key path|dynamic key path member lookup}1 cannot refer to static member %0 [expr_keypath_static_member]
%select{key path|dynamic key path member lookup}1 cannot refer to enum case %0 [expr_keypath_enum_case]
empty key path does not refer to a property [expr_keypath_empty]
an Objective-C key path cannot contain %select{BAD|subscript|BAD|BAD|optional-forcing|optional-chaining|BAD} components [expr_unsupported_objc_key_path_component]
an Objective-C key path cannot reference a declaration with a compound name [expr_unsupported_objc_key_path_compound_name]
broken standard library: no 'KeyPath' type found [expr_keypath_no_keypath_type]
invalid component of Swift key path [expr_swift_keypath_invalid_component]
a Swift key path must begin with a type [expr_swift_keypath_not_starting_with_type]
a Swift key path with contextual root must begin with a leading dot [expr_swift_keypath_not_starting_with_dot]
key path value type %0 cannot be converted to contextual type %1 [expr_smart_keypath_value_covert_to_contextual_type]
key path must have at least one component [expr_swift_keypath_empty]
string interpolation can only appear inside a string literal [expr_string_interpolation_outside_string]
subscript index of type %0 in a key path must be Hashable [expr_keypath_subscript_index_not_hashable]
key path of type %0 cannot be applied to a base of type %1 [expr_smart_keypath_application_type_mismatch]
key path with root type %0 cannot be applied to a base of type %1 [expr_keypath_root_type_mismatch]
the root type of a Swift key path cannot be 'AnyObject' [expr_swift_keypath_anyobject_root]
cannot convert key path into a multi-argument function type %0 [expr_keypath_multiparam_func_conversion]
forming a writable keypath to property %0 that is read-only in this context is deprecated and will be removed in a future release [expr_deprecated_writable_keypath]
'#selector' can only be used with the Objective-C runtime [expr_selector_no_objc_runtime]
import the 'ObjectiveC' module to use '#selector' [expr_selector_module_missing]
argument of '#selector' does not refer to an '@objc' method, property, or initializer [expr_selector_no_declaration]
argument of '#selector' cannot refer to %select{local|global}0 function %1 [expr_selector_not_method]
cannot reference %1 %2 as a property; remove '%select{getter|setter}0:' [expr_selector_expected_property]
argument of '#selector' cannot refer to %select{variable|parameter}0 %1 [expr_selector_not_property]
use 'getter:'%select{| or 'setter:'}0 to refer to the Objective-C getter%select{| or setter}0 of property %1%select{|, respectively}0 [expr_selector_expected_method]
add '%select{getter|setter}0:' to reference the Objective-C %select{getter|setter}0 for %1 [expr_selector_add_modifier]
argument of '#selector(setter:)' refers to non-settable %0 %1 [expr_selector_property_not_settable]
setter of %0 %1 is inaccessible [expr_selector_property_setter_inaccessible]
cannot use %0 as a selector because protocol %1 is not exposed to Objective-C [expr_selector_cannot_be_used]
argument of '#selector' refers to %0 %1 that is not exposed to Objective-C [expr_selector_not_objc]
add '@objc' to expose this %0 to Objective-C [make_decl_objc]
argument of '#selector' refers to %0 %1 in %2 that depends on '@objc' inference deprecated in Swift 4 [expr_selector_swift3_objc_inference]
string literal is not a valid Objective-C selector [selector_literal_invalid]
no method declared with Objective-C selector %0 [selector_literal_undeclared]
use of string literal for Objective-C selectors is deprecated; use '#selector' or explicitly construct a 'Selector' [selector_literal_deprecated]
use of string literal for Objective-C selectors is deprecated; use '#selector' instead [selector_literal_deprecated_suggest]
use '#selector' instead of explicitly constructing a 'Selector' [selector_construction_suggest]
wrap the selector name in parentheses to suppress this warning [selector_construction_suppress_warning]
unexpected non-void return value in void function [cannot_return_value_from_void_func]
did you mean to add a return type? [add_return_type_note]
no such module '%0' [sema_no_import]
could not find module '%0' for target '%1'; found: %2, at: %3 [sema_no_import_target]
no such module '%0' [sema_no_import_repl]
did you forget to set an SDK using -sdk or SDKROOT? [sema_no_import_no_sdk]
use "xcrun swiftc" to select the default macOS SDK installed with Xcode [sema_no_import_no_sdk_xcrun]
this file is part of module %0; ignoring import [sema_import_current_module]
file '%0' is part of module %1; ignoring import [sema_import_current_module_with_file]
opening import file for module %0: %1 [sema_opening_import]
failed to load module '%0' [serialization_load_failed]
failed to %select{build module '%1' for importation|verify module interface of '%1'}0 due to the errors above; the textual interface may be broken by project issues%select{, differences between compilers (the producer '%3' and this compiler '%4')|}2 or a compiler bug [module_interface_build_failed]
failed to build module '%0'; this SDK is not supported by the compiler (the SDK is built with '%1', while this compiler is '%2'). Please select a toolchain which matches the SDK. [module_interface_build_failed_mismatching_compiler]
malformed compiled module: %0 [serialization_malformed_module]
compiled module was created by a newer version of the compiler: %0 [serialization_module_too_new]
module compiled with Swift %0 cannot be imported by the Swift %1 compiler: %2 [serialization_module_language_version_mismatch]
compiled module was created by an older version of the compiler; rebuild %0 and try again: %1 [serialization_module_too_old]
missing required module '%0' [serialization_missing_single_dependency]
missing required modules: %0 [serialization_missing_dependencies]
circular dependency between modules '%0' and %1 [serialization_circular_dependency]
cannot load underlying module for %0 [serialization_missing_underlying_module]
cannot load module '%0' as '%1' [serialization_name_mismatch]
cannot load module '%0' as '%1' [serialization_name_mismatch_repl]
module %0 was created for incompatible target %1: %2 [serialization_target_incompatible]
module %0 was created for incompatible target %1: %2 [serialization_target_incompatible_repl]
compiling for %0 %1, but module %2 has a minimum deployment target of %0 %3: %4 [serialization_target_too_new]
compiling for %0 %1, but module %2 has a minimum deployment target of %0 %3: %4 [serialization_target_too_new_repl]
fatal error encountered while reading from module '%0'; please submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the project [serialization_fatal]
module '%0' full misc version is '%1' [serialization_misc_version]
compiling as Swift %0, with '%1' built as Swift %2 (this is supported but may expose additional compiler issues) [serialization_compatibility_version_mismatch]
deserialized invalid declaration %0 (%1) in module '%2' [serialization_invalid_decl]
allowing deserialization of invalid declaration %0 (%1) in module '%2' [serialization_allowing_invalid_decl]
deserialized error type '%0' in module '%1' [serialization_error_type]
allowing deserialization of error type '%0' in module '%1' [serialization_allowing_error_type]
unable to use malformed module source info '%0' [serialization_malformed_sourceinfo]
type member must not be named %0, since it would conflict with the 'foo.%1' expression [reserved_member_name]
%select{implicitly unwrapped |}0optional parameter is of same type as %select{implicitly unwrapped |}1optional parameter [invalid_redecl_by_optionality_note]
invalid redeclaration of %0 [invalid_redecl]
invalid redeclaration of synthesized %select{|memberwise }1%0 [invalid_redecl_init]
invalid redeclaration of synthesized %select{%0|implementation for protocol requirement}1 %2 [invalid_redecl_implicit]
redeclaration of %0 is deprecated and will be an error in Swift 5 [invalid_redecl_swift5_warning]
%0 previously declared here [invalid_redecl_prev]
%0 synthesized for property wrapper %select{projected value|backing storage}1 [invalid_redecl_implicit_wrapper]
%0 is ambiguous for type lookup in this context [ambiguous_type_base]
%0 is not a member type of %1 %2 [invalid_member_type]
%0 does not have a member type named %1; did you mean %2? [invalid_member_type_suggest]
%0 %1 is not a member type of %2 [invalid_member_reference]
ambiguous type name %0 in %1 [ambiguous_member_type]
no type named %0 in module %1 [no_module_type]
ambiguous type name %0 in module %1 [ambiguous_module_type]
%0 is not a %select{binary|prefix unary|postfix unary}1 operator [use_nonmatching_operator]
unsupported recursion for reference to %select{associated type|type alias}0 %1 of type %2 [unsupported_recursion_in_associated_type_reference]
reference to invalid %select{associated type|type alias}0 %1 of type %2 [broken_associated_type_witness]
missing whitespace between %0 and %1 operators [unspaced_binary_operator_fixit]
ambiguous missing whitespace between unary and binary operators [unspaced_binary_operator]
could be %select{binary|postfix}2 %0 and %select{prefix|binary}2 %1 [unspaced_binary_operators_candidate]
unary operators must not be juxtaposed; parenthesize inner expression [unspaced_unary_operator]
no operator '**' is defined; did you mean 'pow(_:_:)'? [nonexistent_power_operator]
cannot %select{find|find operator}1 %0 in scope [cannot_find_in_scope]
cannot %select{find|find operator}1 %0 in scope; did you mean '%2'? [cannot_find_in_scope_corrected]
%select{identifier|operator}0 '%1' contains possibly confused characters; did you mean to use '%2'? [confusable_character]
%select{identifier|operator}0 '%1' (%2) looks similar to '%3' (%4); did you mean '%3' (%4)? [single_confusable_character]
cannot find type %0 in scope [cannot_find_type_in_scope]
cannot find type %0 in scope; did you mean to use '%1'? [cannot_find_type_in_scope_did_you_mean]
did you mean the implicitly-synthesized %1 '%0'? [note_typo_candidate_implicit_member]
did you mean to use '%0'? [note_remapped_type]
cannot use module %0 as a type [note_module_as_type]
cannot deduce protocol for %0 literal [use_unknown_object_literal_protocol]
could not infer type of %0 literal [object_literal_default_type_missing]
import %0 to use '%1' as the default %2 literal type [object_literal_resolve_import]
use of local variable %0 before its declaration [use_local_before_declaration]
protocol %0 can only be used as a generic constraint because it has Self or associated type requirements [unsupported_existential_type]
%select{%error|type|struct|class|enum|protocol|variable|function}0 %1 does not exist in module %2 [decl_does_not_exist_in_module]
%0 was imported as '%1', but is %select{%error|a type|a struct|a class|an enum|a protocol|a variable|a function}2 [imported_decl_is_wrong_kind]
%0 %1 cannot be imported as '%2' [imported_decl_is_wrong_kind_typealias]
ambiguous name %0 in module %1 [ambiguous_decl_in_module]
module %0 was not compiled for testing [module_not_testable]
module %0 was not compiled for private import [module_not_compiled_for_private_import]
module %0 cannot be both exported and implementation-only [import_implementation_cannot_be_exported]
module %0 was not compiled with library evolution support; using it means binary compatibility for %1 can't be guaranteed [module_not_compiled_with_library_evolution]
import of %0 and %1 triggered a cross-import of %2 [cross_import_added]
loaded module at %0 [module_loaded]
ambiguous operator declarations found for operator [ambiguous_operator_decls]
found this matching operator declaration [found_this_operator_decl]
operator redeclared [operator_redeclared]
previous operator declaration here [previous_operator_decl]
operator implementation without matching operator declaration [declared_operator_without_operator_decl]
unary operator implementation must have a 'prefix' or 'postfix' modifier [declared_unary_op_without_attribute]
%select{prefix|postfix}0 unary operator missing '%select{prefix|postfix}0' modifier [unary_op_missing_prepos_attribute]
%select{prefix|postfix}0 operator found here [unary_operator_declaration_here]
operators must have one or two arguments [invalid_arg_count_for_operator]
operator functions can only be declared at global or in type scope [operator_in_local_scope]
operator %0 declared in type %1 must be 'static' [nonstatic_operator_in_nominal]
operator %0 declared in extension%select{| of %2}1 must be 'static' [nonstatic_operator_in_extension]
operator %0 declared in non-final class %1 must be 'final' [nonfinal_operator_in_class]
member operator %2%select{| of protocol %0}1 must have at least one argument of type %select{%0|'Self'}1 [operator_in_unrelated_type]
multiple precedence groups found [ambiguous_precedence_groups]
found this matching precedence group [found_this_precedence_group]
unknown precedence group %0 [unknown_precedence_group]
cycle in '%select{lowerThan|higherThan}0' relation [precedence_group_cycle]
cycle in higherThan relation: %0 [higher_than_precedence_group_cycle]
precedence group cannot be given lower precedence than group in same module; make the other precedence group higher than this one instead [precedence_group_lower_within_module]
precedence group redeclared [precedence_group_redeclared]
previous precedence group declaration here [previous_precedence_group_decl]
through reference to precedence group %0 here [circular_reference_through_precedence_group]
%0 is not convertible to %1, tuples have a different number of elements [tuple_types_not_convertible_nelts]
tuple type %0 is not convertible to tuple type %1 [tuple_types_not_convertible]
cannot force unwrap value of non-optional type %0 [invalid_force_unwrap]
cannot use optional chaining on non-optional value of type %0 [invalid_optional_chain]
result values in '? :' expression have mismatching types %0 and %1 [if_expr_cases_mismatch]
function value was used as a property; add () to call it [did_not_call_function_value]
function %0 was used as a property; add () to call it [did_not_call_function]
method %0 was used as a property; add () to call it [did_not_call_method]
'init' is a member of the type; use assignment to initialize the value instead [init_not_instance_member_use_assignment]
'init' is a member of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type [init_not_instance_member]
'super.init' cannot be called outside of an initializer [super_initializer_not_in_initializer]
'%0' test is always true [isa_is_always_true]
'is' test is always true because %0 is a Core Foundation type [isa_is_foreign_check]
runtime conversion from %0 to %1 is not supported; %select{'is' test|cast}2 always fails [checked_cast_not_supported]
consider using 'as' coercion instead [checked_cast_not_supported_coerce_instead]
conditional cast from %0 to %1 always succeeds [conditional_downcast_coercion]
conditional downcast from literal to %0 always fails; consider using 'as' coercion [literal_conditional_downcast_to_coercion]
forced cast of %0 to same type has no effect [forced_downcast_noop]
forced cast from %0 to %1 always succeeds; did you mean to use 'as'? [forced_downcast_coercion]
forced cast from %0 to %1 %select{only unwraps optionals|only unwraps and bridges}3; did you mean to use '%2'%select{| with 'as'}3? [downcast_same_type]
conditional downcast from %0 to %1 %select{does nothing|is equivalent to an implicit conversion to an optional %1|is a bridging conversion; did you mean to use 'as'?}2 [conditional_downcast_same_type]
checking a value with optional type %0 against dynamic type %1 succeeds whenever the value is non-nil; did you mean to use '!= nil'? [is_expr_same_type]
cast from %0 to unrelated type %1 always fails [downcast_to_unrelated]
did you mean to call %0 with '()'? [downcast_to_unrelated_fixit]
optional chain has no effect, expression already produces %0 [optional_chain_noop]
'?' must be followed by a call, member lookup, or subscript [optional_chain_isnt_chaining]
%0 cannot appear in an expression [pattern_in_expr]
in call to operator %0 [note_call_to_operator]
in call to function %0 [note_call_to_func]
in call to %0 [note_call_to_subscript]
in call to initializer [note_call_to_initializer]
in initialization of parameter %0 [note_init_parameter]
function produces expected type %0; did you mean to call it with '()'? [missing_nullary_call]
value of optional type %0 must be unwrapped to a value of type %1 [optional_not_unwrapped]
coalesce using '??' to provide a default when the optional value contains 'nil' [unwrap_with_default_value]
force-unwrap using '!' to abort execution if the optional value contains 'nil' [unwrap_with_force_value]
value inferred to be type %0 when initialized with an implicitly unwrapped value [unwrap_iuo_initializer]
short-circuit using 'guard' to exit this function early if the optional value contains 'nil' [unwrap_with_guard]
value of optional type %0 must be unwrapped to refer to member %1 of wrapped base type %2 [optional_base_not_unwrapped]
key path root inferred as optional type %0 must be unwrapped to refer to member %1 of unwrapped type %2 [invalid_optional_infered_keypath_root]
chain the optional using '?' to access member %0 only for non-'nil' base values [optional_base_chain]
use unwrapped type %0 as key path root [optional_base_remove_optional_for_keypath_root]
use '?' to access key path subscript only for non-'nil' base values [optional_keypath_application_base]
chain the optional using '?.' to access unwrapped type member %0 [optional_key_path_root_base_chain]
unwrap the optional using '!.' to access unwrapped type member %0 [optional_key_path_root_base_unwrap]
value of optional type %0 not unwrapped; did you mean to use 'try!' or chain with '?'? [missing_unwrap_optional_try]
%0 is not convertible to %1 [cannot_coerce_to_type]
did you mean to use 'as!' to force downcast? [missing_forced_downcast]
did you mean to use 'as?' to conditionally downcast? [missing_optional_downcast]
coercion from %0 to %1 may fail; use 'as?' or 'as!' instead [coercion_may_fail_warning]
%0 is not implicitly convertible to %1; did you mean to use 'as' to explicitly convert? [missing_explicit_conversion]
passing value of type %0 to an inout parameter requires explicit '&' [missing_address_of]
yielding mutable value of type %0 requires explicit '&' [missing_address_of_yield]
use of extraneous '&' [extraneous_address_of]
'&' used with non-inout argument of type %0 [extra_address_of]
'&' is not allowed passing array value as %0 argument [extra_address_of_unsafepointer]
cannot pass an inout argument to a subscript; use 'withUnsafeMutablePointer' to explicitly convert argument to a pointer [cannot_pass_inout_arg_to_subscript]
cannot convert value %0 of type %1 to expected type %2, use %select{wrapper|wrapped value}3 instead [incorrect_property_wrapper_reference]
referencing %0 %1 requires %select{wrapper|wrapped value of type}2 %3 [incorrect_property_wrapper_reference_member]
initializing from a metatype value must reference 'init' explicitly [missing_init_on_metatype_initialization]
extraneous argument label%select{|s}0 '%1' in %select{call|subscript}2 [extra_argument_labels]
missing argument label%select{|s}0 '%1' in %select{call|subscript}2 [missing_argument_labels]
incorrect argument label%select{|s}0 in %select{call|subscript}3 (have '%1', expected '%2') [wrong_argument_labels]
argument %0 must precede argument %1 [argument_out_of_order_named_named]
argument %0 must precede unnamed argument #%1 [argument_out_of_order_named_unnamed]
unnamed argument #%0 must precede argument %1 [argument_out_of_order_unnamed_named]
unnamed argument #%0 must precede unnamed argument #%1 [argument_out_of_order_unnamed_unnamed]
operator argument #%0 must precede operator argument #%1 [argument_out_of_order_binary_op]
incorrect labels for candidate (have: '%0', expected: '%1') [candidate_expected_different_labels]
use of %0 refers to %1 rather than %2 %3 [member_shadows_function]
use of %0 refers to %1 rather than %2 %3 in module %4 [member_shadows_global_function]
instance member %1 cannot be used on type %0; did you mean to use a value of this type instead? [instance_member_use_on_type]
cannot use instance member %0 within property initializer; property initializers run before 'self' is available [instance_member_in_initializer]
cannot use instance member %0 as a default parameter [instance_member_in_default_parameter]
missing argument for parameter %0 in call [missing_argument_named]
missing argument for parameter #%0 in call [missing_argument_positional]
missing arguments for parameters %0 in call [missing_arguments_in_call]
extra argument %0 in call [extra_argument_named]
extra argument in call [extra_argument_positional]
extra arguments at positions %0 in call [extra_arguments_in_call]
argument passed to call that takes no arguments [extra_argument_to_nullary_call]
extra trailing closure passed in call [extra_trailing_closure_in_call]
trailing closure passed to parameter of type %0 that does not accept a closure [trailing_closure_bad_param]
backward matching of the unlabeled trailing closure is deprecated; label the argument with %0 to suppress this warning [unlabeled_trailing_closure_deprecated]
%0 contains defaulted closure parameters %1 and %2 [decl_multiple_defaulted_closure_parameters]
candidate %0 requires %1 argument%s1, but %2 %select{were|was}3 %select{provided|used in closure body}4 [candidate_with_extraneous_args]
%0 cannot be constructed because it has no accessible initializers [no_accessible_initializers]
non-nominal type %0 does not support explicit initialization [non_nominal_no_initializers]
generic parameter %0 could not be inferred [unbound_generic_parameter]
generic parameter %0 could not be inferred in cast to %1 [unbound_generic_parameter_cast]
%0 declared as parameter to type %1 [archetype_declared_in_type]
explicitly specify the generic arguments to fix this issue [unbound_generic_parameter_explicit_fix]
@dynamicCallable attribute requires %0 to have either a valid 'dynamicallyCall(withArguments:)' method or 'dynamicallyCall(withKeywordArguments:)' method [invalid_dynamic_callable_type]
@dynamicCallable type %0 cannot be applied with keyword arguments; missing 'dynamicCall(withKeywordArguments:)' method [missing_dynamic_callable_kwargs_method]
@dynamicMemberLookup attribute requires %0 to have a 'subscript(dynamicMember:)' method that accepts either 'ExpressibleByStringLiteral' or a key path [invalid_dynamic_member_lookup_type]
add an explicit argument label to this subscript to satisfy the @dynamicMemberLookup requirement [invalid_dynamic_member_subscript]
String must not be indexed with %0, it has variable size elements [string_index_not_integer]
consider using an existing high level algorithm, str.startIndex.advanced(by: n), or a projection like str.utf8 [string_index_not_integer_note]
a C function pointer can only be formed from a reference to a 'func' or a literal closure [invalid_c_function_pointer_conversion_expr]
a C function pointer cannot be formed from a method [c_function_pointer_from_method]
a C function pointer cannot be formed from a reference to a generic function [c_function_pointer_from_generic_function]
add () to forward @autoclosure parameter [invalid_autoclosure_forwarding]
a '@differentiable' function can only be formed from a reference to a 'func' or 'init' or a literal closure [invalid_differentiable_function_conversion_expr]
did you mean to take a '%0' closure? [invalid_differentiable_function_conversion_parameter]
cannot perform pointer conversion of value of type %0 to autoclosure result type %1 [invalid_autoclosure_pointer_conversion]
initializer requires a body [missing_initializer_def]
%0 [pound_warning]
%0 [pound_error]
operators must be declared with 'func' [operator_not_func]
cannot declare a custom %0 '%1' operator [redefining_builtin_operator]
'%0' requires a function with an operator identifier [attribute_requires_operator_identifier]
'%0' requires a function with one argument [attribute_requires_single_argument]
%0 %1 cannot be used as an attribute [nominal_type_not_attribute]
%0 is only valid on methods [mutating_invalid_global_scope]
%0 is not valid on %1s in %select{classes|class-bound protocols}2 [mutating_invalid_classes]
method must not be declared both %0 and %1 [functions_mutating_and_not]
static functions must not be declared mutating [static_functions_not_mutating]
'modify' accessor cannot be %0 when the setter is %1 [modify_mutatingness_differs_from_setter]
'@_transparent' attribute is not supported on declarations within protocols [transparent_in_protocols_not_supported]
'@_transparent' attribute is not supported on declarations within classes [transparent_in_classes_not_supported]
only instance properties can be declared @IBOutlet [invalid_iboutlet]
@IBOutlet property cannot %select{have|be an array of}0 non-'@objc' class type %1 [iboutlet_nonobjc_class]
@IBOutlet property cannot %select{have|be an array of}0 non-'@objc' protocol type %1 [iboutlet_nonobjc_protocol]
@IBOutlet property cannot %select{have|be an array of}0 non-object type %1 [iboutlet_nonobject_type]
@IBOutlet attribute requires property to be mutable [iboutlet_only_mutable]
@IBOutlet property has non-optional type %0 [iboutlet_non_optional]
add '?' to form the optional type %0 [note_make_optional]
add '!' to form an implicitly unwrapped optional [note_make_implicitly_unwrapped_optional]
@IBDesignable can only be applied to classes and extensions of classes [invalid_ibdesignable_extension]
only instance properties can be declared @%0 [invalid_ibinspectable]
only instance methods can be declared @%0 [invalid_ibaction_decl]
methods declared @%0 must %select{|not }1return a value [invalid_ibaction_result]
@%0 methods must have %1 to %2 arguments [invalid_ibaction_argument_count]
@%0 methods must have %2 argument%s2 [invalid_ibaction_argument_count_exact]
@%0 methods must have at most %2 argument%s2 [invalid_ibaction_argument_count_max]
@%0 method cannot have selector %1 because it has special memory management behavior [ibsegueaction_objc_method_family]
change Swift name to %0 [fixit_rename_in_swift]
change Objective-C selector to %0 [fixit_rename_in_objc]
@unsafe_no_objc_tagged_pointer can only be applied to class protocols [no_objc_tagged_pointer_not_class_protocol]
@_swift_native_objc_runtime_base_not_on_root_class can only be applied to root classes [swift_native_objc_runtime_base_not_on_root_class]
@_cdecl can only be applied to global functions [cdecl_not_at_top_level]
@_cdecl symbol name cannot be empty [cdecl_empty_name]
raising errors from @_cdecl functions is not supported [cdecl_throws]
@_cdecl functions cannot be asynchronous [cdecl_async]
only methods can be declared %0 [attr_methods_only]
%0 modifier cannot be used in protocols [access_control_in_protocol]
protocol requirements implicitly have the same access as the protocol itself [access_control_in_protocol_detail]
'%select{private|fileprivate|internal|public|open}0(set)' modifier can only be applied to variables and subscripts [access_control_setter]
'%select{private|fileprivate|internal|public|%error}0(set)' modifier cannot be applied to %select{constants|read-only variables|read-only properties|read-only subscripts}1 [access_control_setter_read_only]
%select{private|fileprivate|internal|public|%error}0 %select{variable|property|subscript}1 cannot have %select{%error|a fileprivate|an internal|a public|an open}2 setter [access_control_setter_more]
'%select{private|fileprivate|internal|public|open}0(set)' modifier is redundant for %select{a private|a fileprivate|an internal|a public|an open}2 %1 [access_control_setter_redundant]
'%select{%error|fileprivate|internal|public|open}0' modifier conflicts with extension's default access of '%select{private|fileprivate|internal|public|%error}1' [access_control_ext_member_more]
'%select{%error|fileprivate|internal|public|%error}0' modifier is redundant for %1 declared in %select{a private (equivalent to fileprivate)|a fileprivate|an internal|a public|%error}2 extension [access_control_ext_member_redundant]
cannot declare %select{%error|a fileprivate|an internal|a public|an open}0 %1 in an extension with %select{private|fileprivate|internal|public|%error}2 requirements [access_control_ext_requirement_member_more]
extension of %select{private|fileprivate|internal|%error|%error}0 %1 cannot be declared %select{%error|fileprivate|internal|public|%error}2 [access_control_extension_more]
extensions cannot use 'open' as their default access; use 'public' [access_control_extension_open]
only classes and overridable class members can be declared 'open'; use 'public' [access_control_open_bad_decl]
'%0' attribute cannot be applied to this declaration [invalid_decl_attribute]
%0 modifier cannot be applied to this declaration [invalid_decl_modifier]
attribute does not apply to type [attribute_does_not_apply_to_type]
'optional' can only be applied to protocol members [optional_attribute_non_protocol]
'optional' can only be applied to members of an @objc protocol [optional_attribute_non_objc_protocol]
'optional' requirements are an Objective-C compatibility feature; add '@objc' [optional_attribute_missing_explicit_objc]
'@objcMembers' attribute can only be applied to a class [objcmembers_attribute_nonclass]
'optional' cannot be applied to an initializer [optional_attribute_initializer]
protocol members can only be marked unavailable in an @objc protocol [unavailable_method_non_objc_protocol]
stored property %0 requires an initial value%select{| or should be @NSManaged}1 [missing_in_class_init_1]
stored properties %0 and %1 require initial values%select{| or should be @NSManaged}2 [missing_in_class_init_2]
stored properties %0, %1, %select{and %2|%2, and others}3 require initial values%select{| or should be @NSManaged}4 [missing_in_class_init_3plus]
%select{superclass|class}1 %0 requires all stored properties to have initial values%select{| or use @NSManaged}2 [requires_stored_property_inits_here]
class %0 has no initializers [class_without_init]
stored property %0 without initial value prevents synthesized initializers [note_no_in_class_init_1]
stored properties %0 and %1 without initial values prevent synthesized initializers [note_no_in_class_init_2]
stored properties %0, %1, %select{and %2|%2, and others}3 without initial values prevent synthesized initializers [note_no_in_class_init_3plus]
standard library error: missing _unimplementedInitializer [missing_unimplemented_init_runtime]
standard library error: missing _undefined [missing_undefined_runtime]
reference to %0 %1 of %2 depends on '@objc' inference deprecated in Swift 4 [expr_dynamic_lookup_swift3_objc_inference]
default value inheritance via 'super' is only valid on the parameters of designated initializers [inherited_default_value_not_in_designated_constructor]
default value inheritance via 'super' can only be used when overriding a designated initializer [inherited_default_value_used_in_non_overriding_constructor]
default value inheritance via 'super' requires that the corresponding parameter of the overridden designated initializer has a default value [corresponding_param_not_defaulted]
corresponding parameter declared here [inherited_default_param_here]
static property %0 produces an empty option set [option_set_zero_constant]
use [] to silence this warning [option_set_empty_set_init]
duplicate version number for platform %0 [originally_defined_in_dupe_platform]
@%0 is only applicable to top-level decl [originally_definedin_topleve_decl]
need @available attribute for @%0 [originally_definedin_need_available]
moved version from @%0 must after introduced OS version [originally_definedin_must_after_available_version]
alignment value must be a power of two [alignment_not_power_of_two]
enum case %0 without associated value cannot be 'indirect' [indirect_case_without_payload]
enum case in 'indirect' enum cannot also be 'indirect' [indirect_case_in_indirect_enum]
%0 has no effect on non-public enums [enum_frozen_nonpublic]
variable with getter/setter cannot have an initial value [getset_init]
%0 with 'throws' or 'async' is not representable in Objective-C [effectful_not_representable_objc]
%select{ERROR|static|class}1 stored properties not supported%select{ in this context| in generic types| in classes| in protocol extensions}0%select{|; did you mean 'static'?}2 [unimplemented_static_var]
non-member observing properties require an initializer [observingprop_requires_initializer]
global '%select{var|let}0' declaration requires an initializer expression%select{ or an explicitly stated getter|}0 [global_requires_initializer]
'%select{ERROR|static|class|}0 %select{var|let}1' declaration requires an initializer expression or an explicitly stated getter [static_requires_initializer]
add an initializer to silence this error [static_requires_initializer_add_init]
%select{%select{variable|constant}0|property}1 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}3|private or fileprivate}4|cannot be declared %select{in this context|fileprivate|internal|public|open}3}2 because its type uses %select{a private|a fileprivate|an internal|%error|%error}5 type [pattern_type_access]
%select{%select{variable|constant}0|property}1 %select{should be declared %select{private|fileprivate|internal|%error|%error}5|should not be declared %select{in this context|fileprivate|internal|public|open}3}2 because its type uses %select{a private|a fileprivate|an internal|%error|%error}5 type [pattern_type_access_warn]
%select{%select{variable|constant}0|property}1 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}3|private or fileprivate}4|cannot be declared %select{in this context|fileprivate|internal|public|open}3}2 because its type %6 uses %select{a private|a fileprivate|an internal|%error|%error}5 type [pattern_type_access_inferred]
%select{%select{variable|constant}0|property}1 %select{should be declared %select{private|fileprivate|internal|%error|%error}5|should not be declared %select{in this context|fileprivate|internal|public|open}3}2 because its type %6 uses %select{a private|a fileprivate|an internal|%error|%error}5 type [pattern_type_access_inferred_warn]
type referenced from a '@usableFromInline' %select{%select{variable|constant}0|property}1 must be '@usableFromInline' or public [pattern_type_not_usable_from_inline]
type referenced from a '@usableFromInline' %select{%select{variable|constant}0|property}1 should be '@usableFromInline' or public [pattern_type_not_usable_from_inline_warn]
type referenced from a stored property in a '@frozen' struct must be '@usableFromInline' or public [pattern_type_not_usable_from_inline_frozen]
type referenced from a '@usableFromInline' %select{%select{variable|constant}0|property}1 with inferred type %2 must be '@usableFromInline' or public [pattern_type_not_usable_from_inline_inferred]
type referenced from a '@usableFromInline' %select{%select{variable|constant}0|property}1 with inferred type %2 should be '@usableFromInline' or public [pattern_type_not_usable_from_inline_inferred_warn]
type referenced from a stored property with inferred type %2 in a '@frozen' struct must be '@usableFromInline' or public [pattern_type_not_usable_from_inline_inferred_frozen]
%select{property|global variable}0 declaration does not bind any variables [pattern_binds_no_variables]
variable %0 is not bound by any pattern [variable_bound_by_no_pattern]
assuming you mean '%0.%2'; did you mean '%1.%2' instead? [optional_ambiguous_case_ref]
explicitly specify 'Optional' to silence this warning [optional_fixit_ambiguous_case_ref]
use 'nil' to silence this warning [optional_fixit_ambiguous_case_ref_switch]
use '%0.%1' instead [type_fixit_optional_ambiguous_case_ref]
use '%0' instead [type_fixit_optional_ambiguous_case_ref_switch]
%select{private|fileprivate|nested|local}0 class %1 has an unstable name when archiving via 'NSCoding' [nscoding_unstable_mangled_name]
for new classes, use '@objc' to specify a unique, prefixed Objective-C runtime name [unstable_mangled_name_add_objc_new]
for compatibility with existing archives, use '@objc' to record the Swift 3 runtime name [unstable_mangled_name_add_objc]
type %0 cannot be nested in generic function %1 [unsupported_type_nested_in_generic_function]
type %0 cannot be nested in closure in generic context [unsupported_type_nested_in_generic_closure]
type %0 cannot be nested in protocol %1 [unsupported_type_nested_in_protocol]
type %0 cannot be nested in protocol extension of %1 [unsupported_type_nested_in_protocol_extension]
protocol %0 cannot be nested inside another declaration [unsupported_nested_protocol]
'where' clause on non-generic member declaration requires a generic context [where_nongeneric_ctx]
'where' clause cannot be applied to a non-generic top-level declaration [where_nongeneric_toplevel]
could not generate C++ types from the generic Swift types provided. The following Swift type(s) provided to '%0' could not be converted: %1. [unable_to_convert_generic_swift_types]
type alias %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}1|private or fileprivate}3|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its underlying type uses %select{a private|a fileprivate|an internal|%error|%error}2 type [type_alias_underlying_type_access]
type alias %select{should be declared %select{private|fileprivate|internal|%error|%error}1|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its underlying type uses %select{a private|a fileprivate|an internal|%error|%error}2 type [type_alias_underlying_type_access_warn]
type referenced from the underlying type of a '@usableFromInline' type alias must be '@usableFromInline' or public [type_alias_underlying_type_not_usable_from_inline]
type referenced from the underlying type of a '@usableFromInline' type alias should be '@usableFromInline' or public [type_alias_underlying_type_not_usable_from_inline_warn]
subscript %select{must be declared %select{private|fileprivate|internal|%error|%error}1|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its %select{index|element type}3 uses %select{a private|a fileprivate|an internal|%error|%error}2 type [subscript_type_access]
subscript %select{should be declared %select{private|fileprivate|internal|%error|%error}1|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its %select{index|element type}3 uses %select{a private|a fileprivate|an internal|%error|%error}2 type [subscript_type_access_warn]
%select{index type|element type}0 of a '@usableFromInline' subscript must be '@usableFromInline' or public [subscript_type_usable_from_inline]
%select{index type|element type}0 of a '@usableFromInline' subscript should be '@usableFromInline' or public [subscript_type_usable_from_inline_warn]
%select{function|method|initializer}4 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}1|private or fileprivate}2|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its %select{parameter|result}5 uses %select{a private|a fileprivate|an internal|an '@_spi'|an '@_spi'}3%select{| API wrapper}6 type [function_type_access]
%select{function|method|initializer}0 cannot be declared '@_spi' because its %select{parameter|result}1 uses %select{a private|a fileprivate|an internal|a public|an open}2 type%select{| that is not '@_spi'}3 [function_type_spi]
%select{function|method|initializer}4 %select{should be declared %select{private|fileprivate|internal|%error|%error}1|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its %select{parameter|result}5 uses %select{a private|a fileprivate|an internal|%error|%error}3 %select{|API wrapper}6 type [function_type_access_warn]
the %select{parameter|result}1%select{| API wrapper}2 of a '@usableFromInline' %select{function|method|initializer}0 must be '@usableFromInline' or public [function_type_usable_from_inline]
the %select{parameter|result}1%select{| API wrapper}2 of a '@usableFromInline' %select{function|method|initializer}0 should be '@usableFromInline' or public [function_type_usable_from_inline_warn]
%select{private|fileprivate|internal|%error|%error}0 %1 cannot be declared '@_spi' because only public and open declarations can be '@_spi' [spi_attribute_on_non_public]
protocol requirement %0 cannot be declared '@_spi' without a default implementation in a protocol extension [spi_attribute_on_protocol_requirement]
stored property %0 cannot be declared '@_spi' in a '@frozen' struct [spi_attribute_on_frozen_stored_properties]
'@_spi' import of %0 will not include any SPI symbols; %0 was built from the public interface at %1 [spi_attribute_on_import_of_public_module]
an 'opaque' type must specify only 'Any', 'AnyObject', protocols, and/or a base class [opaque_type_invalid_constraint]
property definition has inferred type %0, involving the 'some' return type of another declaration [inferred_opaque_type]
non-nominal type %0 cannot be extended [non_nominal_extension]
extending a protocol composition is not supported; extending %0 instead [composition_in_extended_type]
did you mean to extend the most specific type %0 instead? [composition_in_extended_type_alternative]
%0 modifier cannot be used with extensions that declare protocol conformances [extension_access_with_conformances]
cannot extend a metatype %0 [extension_metatype]
constrained extension must be declared on the unspecialized generic type %0 with constraints specified by a 'where' clause [extension_specialization]
extensions must not contain stored properties [extension_stored_property]
Remove '=' to make %0 a computed property [extension_stored_property_fixit]
trailing 'where' clause for extension of non-generic type %0 [extension_nongeneric_trailing_where]
extension of protocol %0 cannot have an inheritance clause [extension_protocol_inheritance]
extension of a generic Objective-C class cannot access the class's generic parameters at runtime [objc_generic_extension_using_type_parameter]
generic parameter used here [objc_generic_extension_using_type_parameter_here]
add '@objc' to allow uses of 'self' within the function body [objc_generic_extension_using_type_parameter_try_objc]
extension of type %0 must be declared as an extension of %1 [invalid_nominal_extension]
did you mean to extend %0 instead? [invalid_nominal_extension_rewrite]
type %0 does not conform to protocol %1 [type_does_not_conform]
'nil' cannot be used in context expecting type %0 [cannot_use_nil_with_this_type]
cannot declare conformance to 'NSObjectProtocol' in Swift; %0 should inherit 'NSObject' instead [type_cannot_conform_to_nsobject]
use of '=' in a boolean context, did you mean '=='? [use_of_equal_instead_of_equality]
%select{type %1|protocol %1 as a type}0 cannot conform to %select{%3|the protocol itself}2 [type_cannot_conform]
only concrete types such as structs, enums and classes can conform to protocols [only_concrete_types_conform_to_protocols]
required by opaque return type of %0 %1 [required_by_opaque_return]
required by %0 %1 where %2 = %3 [required_by_decl]
required by referencing %0 %1 on %2 where %3 = %4 [required_by_decl_ref]
%0 cannot be used as a type conforming to protocol %1 because %1 has static requirements [protocol_does_not_conform_static]
protocol %0 is broken; cannot derive conformance for type %1 [protocol_derivation_is_broken]
%0 requires that %1 inherit from %2 [type_does_not_inherit]
requirement specified as %0 : %1%2 [type_does_not_inherit_or_conform_requirement]
%0 requires the types %1 and %2 be equivalent [types_not_equal]
%0 requires that %1 conform to %2 [type_does_not_conform_owner]
referencing %0 %1 on %2 requires that %3 conform to %4 [type_does_not_conform_in_decl_ref]
contextual member reference to %0 %1 requires 'Self' constraint in the protocol extension [contextual_member_ref_on_protocol_requires_self_requirement]
missing same-type requirement on 'Self' [missing_sametype_requirement_on_self]
referencing %0 %1 on %2 requires that %3 be a class type [type_does_not_conform_anyobject_in_decl_ref]
%0 %1 requires that %2 conform to %3 [type_does_not_conform_decl_owner]
%0 %1 requires that %2 be a class type [type_does_not_conform_anyobject_decl_owner]
return type of %0 %1 requires that %2 %select{conform to %3|be a class type}4 [type_does_not_conform_in_opaque_return]
%0 %1 requires the types %2 and %3 be equivalent [types_not_equal_decl]
referencing %0 %1 on %2 requires the types %3 and %4 be equivalent [types_not_equal_in_decl_ref]
%0 %1 requires that %2 inherit from %3 [types_not_inherited_decl]
referencing %0 %1 on %2 requires that %3 inherit from %4 [types_not_inherited_in_decl_ref]
where %0 = %1 [where_requirement_failure_one_subst]
where %0 = %1, %2 = %3 [where_requirement_failure_both_subst]
requirement from conditional conformance of %0 to %1 [requirement_implied_by_conditional_conformance]
wrapped type %0 satisfies this requirement; did you mean to unwrap? [wrapped_type_satisfies_requirement]
candidate requires that %0 conform to %1 (requirement specified as %2 == %3%4) [candidate_types_conformance_requirement]
candidate requires that the types %0 and %1 be equivalent (requirement specified as %2 == %3%4) [candidate_types_equal_requirement]
candidate requires that %1 inherit from %2 (requirement specified as %2 : %3%4) [candidate_types_inheritance_requirement]
requirement specified as %0 == %1%2 [types_not_equal_requirement]
%0 requires that %1 be a class type [type_is_not_a_class]
requirement specified as %0 : 'AnyObject'%2 [anyobject_requirement]
non-class type %0 cannot conform to class protocol %1 [non_class_cannot_conform_to_class_protocol]
Core Foundation class %0 cannot conform to @objc protocol %1 because Core Foundation types are not classes in Objective-C [cf_class_cannot_conform_to_objc_protocol]
class %0 cannot conform to @objc protocol %1 because the class is only visible via the Objective-C runtime [objc_runtime_visible_cannot_conform_to_objc_protocol]
type %0 cannot conditionally conform to protocol %1 because the type uses the Objective-C generics model [objc_generics_cannot_conditionally_conform]
type %0 cannot conditionally conform to @objc protocol %1 because Objective-C does not support conditional conformances [objc_protocol_cannot_have_conditional_conformance]
conformance of %select{class from generic context|generic class}0 %1 to @objc protocol %2 cannot be in an extension [objc_protocol_in_generic_extension]
conditional conformance of type %0 to protocol %1 does not imply conformance to inherited protocol %2 [conditional_conformances_cannot_imply_conformances]
did you mean to explicitly state the conformance with different bounds? [note_explicitly_state_conditional_conformance_different]
did you mean to explicitly state the conformance with relaxed bounds? [note_explicitly_state_conditional_conformance_relaxed]
did you mean to explicitly state the conformance with the same bounds? [note_explicitly_state_conditional_conformance_same]
did you mean to explicitly state the conformance like '%0where ...'? [note_explicitly_state_conditional_conformance_noneditor]
type %0 cannot conform to protocol %1 because it has requirements that cannot be satisfied [protocol_has_missing_requirements]
type %0 cannot conform to protocol %1 (compiled with Swift %2) because it has requirements that could not be loaded in Swift %3 [protocol_has_missing_requirements_versioned]
%0 requirement %1 cannot add constraint '%2%select{:|:| ==|:}3 %4' on 'Self' [requirement_restricts_self]
%0 %1 has different argument labels from those required by protocol %2 (%3) [witness_argument_name_mismatch]
initializer requirement %0 can only be satisfied by a 'required' initializer in%select{| the definition of}1 non-final class %2 [witness_initializer_not_required]
non-failable initializer requirement %0%select{| in Objective-C protocol}1 cannot be satisfied by a failable initializer ('init%select{?|!}1') [witness_initializer_failability]
protocol %0 requirement %1 cannot be satisfied by a non-final class (%2) because it uses 'Self' in a non-parameter, non-result type position [witness_self_non_subtype]
%0 %1 in non-final class %2 cannot be used to satisfy requirement %3 %4 (in protocol %5) due to same-type requirement involving 'Self' [witness_self_same_type]
consider weakening the same-type requirement %0 == %1 to a superclass requirement [witness_self_weaken_same_type]
%select{%error|method|property|subscript}0 %1 in non-final class %2 must %select{%error|return|specify type|return}0 'Self' to conform to protocol %3 [witness_requires_dynamic_self]
%select{%error|method|%error|subscript}0 %1 in non-final class %2 cannot be implemented in a protocol extension because it returns 'Self' and has associated type requirements [witness_requires_class_implementation]
%select{initializer %1|method %1|%select{|setter for }2property %1|subscript%select{| setter}2}0 must be declared %select{%error|fileprivate|internal|public|%error}3 because it matches a requirement in %select{private|fileprivate|internal|public|%error}4 protocol %5 [witness_not_accessible_proto]
%select{initializer %1|method %1|%select{|setter for }2property %1|subscript%select{| setter}2}0 must be as accessible as its enclosing type because it matches a requirement in protocol %5 [witness_not_accessible_type]
%0 %1 must be declared %select{%error|fileprivate|internal|public|%error}2 because it matches a requirement in %select{%error|fileprivate|internal|public|%error}2 protocol %3 [type_witness_not_accessible_proto]
%0 %1 must be as accessible as its enclosing type because it matches a requirement in protocol %3 [type_witness_not_accessible_type]
%0 %1 must be declared '@usableFromInline' because it matches a requirement in protocol %2 [witness_not_usable_from_inline]
%0 %1 should be declared '@usableFromInline' because it matches a requirement in protocol %2 [witness_not_usable_from_inline_warn]
type %0 involving Objective-C type parameter%select{| %1}2 cannot be used for associated type %3 of protocol %4 [type_witness_objc_generic_parameter]
mark the %0 as '%select{%error|fileprivate|internal|public|%error}1' to satisfy the requirement [witness_fix_access]
move the %0 to another extension where it can be declared '%select{%error|%error|internal|public|%error}1' to satisfy the requirement [witness_move_to_another_extension]
default type %0 for associated type %1 does not satisfy constraint %2: %3 [assoc_type_default_conformance_failed]
associated type %0 has default type %1 written here [assoc_type_default_here]
%select{protocol must be declared %select{%select{private|fileprivate|internal|%error|%error}1|private or fileprivate}4 because %select{it refines|its 'where' clause uses}2|%select{in this context|fileprivate|internal|public|%error}1 %select{protocol cannot refine|protocol's 'where' clause cannot use}2}0 %select{a private|a fileprivate|an internal|%error|%error}3 %5 [protocol_access]
%select{protocol should be declared %select{private|fileprivate|internal|%error|%error}1 because %select{it refines|its 'where' clause uses}2|%select{in this context|fileprivate|internal|public|%error}1 %select{protocol should not refine|protocol's 'where' clause should not use}2}0 %select{a private|a fileprivate|an internal|%error|%error}3 %5 [protocol_access_warn]
protocol %select{refined|used}0 by '@usableFromInline' protocol must be '@usableForInline' or public [protocol_usable_from_inline]
protocol %select{refined|used}0 by '@usableFromInline' protocol should be '@usableForInline' or public [protocol_usable_from_inline_warn]
protocols cannot require properties to be immutable; declare read-only properties by using 'var' with a '{ get }' specifier [protocol_property_must_be_computed_var]
property in protocol must have explicit { get } or { get set } specifier [protocol_property_must_be_computed]
type %0 does not conform to inherited protocol %1 [inherited_protocol_does_not_conform]
protocol requires %select{initializer %1|function %1|property %1|subscript}0 with type %2%select{|; do you want to add a stub?}3 [no_witnesses]
do you want to add protocol stubs? [missing_witnesses_general]
multiple matching %select{initializers named %1|functions named %1|properties named %1|subscript operators}0 with type %2 [ambiguous_witnesses]
multiple matching %select{initializers named %1|functions named %1|properties named %1|subscript operators}0 with type %2 [ambiguous_witnesses_wrong_name]
protocol requires nested type %0; do you want to add it? [no_witnesses_type]
default type %0 for associated type %1 (from protocol %2) does not %select{inherit from|conform to}4 %3 [default_associated_type_req_fail]
associated type in %select{a private|a fileprivate|an internal|a public|%error}0 protocol uses %select{a private|a fileprivate|an internal|%error|%error}1 type in its %select{default definition|requirement}2  [associated_type_access]
associated type in %select{a private|a fileprivate|an internal|a public|%error}0 protocol uses %select{a private|a fileprivate|an internal|%error|%error}1 type in its %select{default definition|requirement}2  [associated_type_access_warn]
type referenced from a %select{default definition|requirement}0 of an associated type in a '@usableFromInline' protocol must be '@usableFromInline' or public [associated_type_not_usable_from_inline]
type referenced from a %select{default definition|requirement}0 of an associated type in a '@usableFromInline' protocol should be '@usableFromInline' or public [associated_type_not_usable_from_inline_warn]
unable to infer associated type %0 for protocol %1 [bad_associated_type_deduction]
candidate would match and infer %0 = %1 if %1 %select{inherited from|conformed to}3 %2 [associated_type_deduction_witness_failed]
candidate can not infer %0 = %1 because %1 is not a nominal type and so can't conform to %2 [associated_type_witness_conform_impossible]
candidate can not infer %0 = %1 because %1 is not a class type and so can't inherit from %2 [associated_type_witness_inherit_impossible]
ambiguous inference of associated type %0: %1 vs. %2 [ambiguous_associated_type_deduction]
matching requirement %0 to this declaration inferred associated type to %1 [associated_type_deduction_witness]
using associated type default %0 [associated_type_deduction_default]
multiple matching types named %0 [ambiguous_witnesses_type]
candidate exactly matches%0 [protocol_witness_exact_match]
rename to %0 to satisfy this requirement%1 [protocol_witness_renamed]
candidate is not %select{an initializer|a function|a variable|a subscript}0 [protocol_witness_kind_conflict]
candidate has non-matching type %0%1 [protocol_witness_type_conflict]
candidate would match if %0 %select{conformed to|subclassed|was the same type as}2 %1 [protocol_witness_missing_requirement]
candidate %select{type has|result type has|parameter type has|parameter types have|result and parameter types have}0 incorrect optionality%1 [protocol_witness_optionality_conflict]
%select{type|result|parameter|parameters|result and parameters}0 of %1 %select{has|has|has|have|have|}0 different optionality than required by protocol %2 [err_protocol_witness_optionality]
%select{type|result|parameter|parameters|result and parameters}0 of %1 %select{has|has|has|have|have|}0 different optionality than expected by protocol %2 [warn_protocol_witness_optionality]
candidate operates on %select{a type|an instance}0, not %select{an instance|a type}0 as required [protocol_witness_static_conflict]
candidate is %select{|prefix, |postfix, }1not %select{prefix|postfix}0 as required [protocol_witness_prefix_postfix_conflict]
candidate is marked %0 but protocol does not allow it [protocol_witness_mutation_modifier_conflict]
candidate is not settable, but protocol requires it [protocol_witness_settable_conflict]
candidate is not 'rethrows', but protocol requires it [protocol_witness_rethrows_conflict]
candidate is 'rethrows' via a conformance, but the protocol requirement is not from a '@rethrows' protocol [protocol_witness_rethrows_by_conformance_conflict]
candidate throws, but protocol does not allow it [protocol_witness_throws_conflict]
candidate is explicitly '@nonobjc' [protocol_witness_not_objc]
candidate is an enum case with associated values, but protocol does not allow it [protocol_witness_enum_case_payload]
possibly intended match [protocol_witness_type]
possibly intended match %0 does not %select{inherit from|conform to}2 %1 [protocol_witness_nonconform_type]
candidate references itself [protocol_witness_circularity]
%select{|class }0%1 declares conformance to protocol %2 here [protocol_conformance_here]
%select{%0 inherits conformance to protocol %2 from superclass|%0 declares conformance to protocol %2|%0 implicitly conforms to protocol %2 (via conformance to %3)|%0 implicitly conforms to protocol %2}1 here [declared_protocol_conformance_here]
unavailable %0 %1 was used to satisfy a requirement of protocol %2 [witness_unavailable]
redundant conformance of %0 to protocol %1 [redundant_conformance]
conflicting conformance of %0 to protocol %1; there cannot be more than one conformance, even with different conditional bounds [redundant_conformance_conditional]
conformance of %0 to protocol %1 was already stated in %select{the protocol's|the type's}2 module %3 [redundant_conformance_adhoc]
conformance of %0 to protocol %1 conflicts with that stated in %select{the protocol's|the type's}2 module %3 and will be ignored; there cannot be more than one conformance, even with different conditional bounds [redundant_conformance_adhoc_conditional]
%0 %1 will not be used to satisfy the conformance to %2 [redundant_conformance_witness_ignored]
%0 %1 nearly matches %select{defaulted|optional}2 requirement %3 of protocol %4 [req_near_match]
add '@objc' to provide an Objective-C entrypoint [optional_req_nonobjc_near_match_add_objc]
move %0 to %select{an|another}1 extension to silence this warning [req_near_match_move]
add '@nonobjc' to silence this %select{warning|error}0 [req_near_match_nonobjc]
make %0 %select{ERROR|private|private|non-public|non-public}1 to silence this warning [req_near_match_access]
type conforming to 'StringInterpolationProtocol' does not implement a valid 'appendInterpolation' method [missing_append_interpolation]
'appendInterpolation' method will never be used because it is static [append_interpolation_static]
'appendInterpolation' method does not return 'Void' or have a discardable result [append_interpolation_void_or_discardable]
'appendInterpolation' method is %select{private|fileprivate|internal|public|open}0, but %1 is %select{private|fileprivate|internal|public|open}2 [append_interpolation_access_control]
associated type %0 can only be used with a concrete type or generic parameter base [assoc_type_outside_of_protocol]
type alias %0 can only be used with a concrete type or generic parameter base [typealias_outside_of_protocol]
@objc protocol %0 cannot refine non-@objc protocol %1 [objc_protocol_inherits_non_objc_protocol]
constraint with subject type of 'Self' is not supported; consider adding requirement to protocol inheritance clause instead [protocol_where_clause_self_requirement]
non-protocol, non-class type %0 cannot be used within a protocol-constrained type [invalid_protocol_composition_member]
protocol-constrained type cannot contain class %0 because it already contains class %1 [protocol_composition_one_class]
type %0 constrained to non-protocol, non-class type %1 [requires_conformance_nonprotocol]
use '%0 == %1' to require '%0' to be '%1' [requires_conformance_nonprotocol_fixit]
type %0 in conformance requirement does not refer to a generic parameter or associated type [requires_not_suitable_archetype]
neither type in same-type constraint (%0 or %1) refers to a generic parameter or associated type [requires_no_same_type_archetype]
same-type requirement makes generic parameters %0 and %1 equivalent [requires_generic_params_made_equal]
same-type requirement makes generic parameter %0 non-generic [requires_generic_param_made_equal_to_concrete]
%0 %1 references itself [recursive_decl_reference]
same-type constraint %0 == %1 is recursive [recursive_same_type_constraint]
superclass constraint %0 : %1 is recursive [recursive_superclass_constraint]
same-type constraint type %0 does not conform to required protocol %1 [requires_generic_param_same_type_does_not_conform]
generic signature requires types %0 and %1 to be the same [requires_same_concrete_type]
redundant conformance constraint %0 : %1 [redundant_conformance_constraint]
conformance constraint %0 : %1 implied here [redundant_conformance_here]
requirement involves recursion that is not currently supported [unsupported_recursive_requirements]
%select{generic parameter |protocol |}0%1 cannot be equal to both %2 and %3 [same_type_conflict]
redundant same-type constraint %0 == %1 [redundant_same_type_to_concrete]
same-type constraint %1 == %2 %select{written here|implied here|inferred from type here}0 [same_type_redundancy_here]
type %0 cannot be a subclass of both %1 and %2 [conflicting_superclass_constraints]
constraint conflicts with %0 : %1 [conflicting_superclass_constraint]
redundant superclass constraint %0 : %1 [redundant_superclass_constraint]
superclass constraint %0 : %1 implied here [superclass_redundancy_here]
type %0 has conflicting constraints %1 and %2 [conflicting_layout_constraints]
constraint conflicts with %0 : %1 [conflicting_layout_constraint]
redundant constraint %0 : %1 [redundant_layout_constraint]
constraint %0 : %1 implied here [previous_layout_constraint]
redundant same-type constraint %0 == %1 [redundant_same_type_constraint]
previous same-type constraint %1 == %2 %select{written here|implied here|inferred from type here}0 [previous_same_type_constraint]
redeclaration of associated type %0 from protocol %1 is better expressed as a 'where' clause on the protocol [inherited_associated_type_redecl]
typealias overriding associated type %0 from protocol %1 is better expressed as same-type constraint on the protocol [typealias_override_associated_type]
associated type %0 is redundant with type %0 declared in inherited %1 %2 [associated_type_override_typealias]
associated type %0 cannot be declared inside '@objc' protocol %1 [associated_type_objc]
%0 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}3|private or fileprivate}4|cannot be declared %select{in this context|fileprivate|internal|public|open}2}1 because its generic %select{parameter|requirement}5 uses %select{a private|a fileprivate|an internal|an '@_spi'|an '@_spi'}3 type [generic_param_access]
%0 %select{should be declared %select{private|fileprivate|internal|%error|%error}3|should not be declared %select{in this context|fileprivate|internal|public|open}2}1 because its generic %select{parameter|requirement}5 uses %select{a private|a fileprivate|an internal|an '@_spi'|an '@_spi'}3 type [generic_param_access_warn]
type referenced from a generic %select{parameter|requirement}1 of a '@usableFromInline' %0 must be '@usableFromInline' or public [generic_param_usable_from_inline]
type referenced from a generic %select{parameter|requirement}1 of a '@usableFromInline' %0 should be '@usableFromInline' or public [generic_param_usable_from_inline_warn]
declaration %0 cannot override more than one superclass declaration [override_multiple_decls_base]
declaration %0 has different argument labels from any potential overrides [override_multiple_decls_arg_mismatch]
potential overridden %0 %1 here [overridden_near_match_here]
%select{|non-@objc}0 %2 %3 %select{is declared in extension of %4 and cannot be overridden|declared in %4 cannot be overridden from extension}1 [override_decl_extension]
overridden declaration is here [overridden_here]
add '@objc' to make this declaration overridable [overridden_here_can_be_objc]
overriding declaration requires an 'override' keyword [missing_override]
implicit override should be marked with 'override' or suppressed with '@_nonoverride' [missing_override_warn]
%0 has already been overridden [multiple_override]
%0 previously overridden here [multiple_override_prev]
cannot override %0 which has been marked unavailable%select{|: %1}1 [override_unavailable]
remove 'override' modifier to declare a new %0 [suggest_removing_override]
overriding %0 must be as available as declaration it overrides [override_less_available]
overriding %0 for %1 must be as available as declaration it overrides [override_accessor_less_available]
cannot override immutable 'let' property %0 with the getter of a 'var' [override_let_property]
%select{|setter of }0overriding %1 must be as accessible as %select{its enclosing type|the declaration it overrides}2 [override_not_accessible]
overriding non-open %0 outside of its defining module [override_of_non_open]
method does not override any method from its %select{parent protocol|superclass}0 [method_does_not_override]
property does not override any property from its %select{parent protocol|superclass}0 [property_does_not_override]
subscript does not override any subscript from its %select{parent protocol|superclass}0 [subscript_does_not_override]
initializer does not override a designated initializer from its %select{parent protocol|superclass}0 [initializer_does_not_override]
failable initializer %0 cannot override a non-failable initializer [failable_initializer_override]
non-failable initializer %0 overridden here [nonfailable_initializer_override_here]
attempt to override property here [property_override_here]
attempt to override subscript here [subscript_override_here]
attempt to override convenience initializer here [convenience_init_override_here]
type does not match superclass %0 with type %1 [override_type_mismatch_with_fixits]
type does not match superclass initializer with %select{no arguments|argument %1|arguments %1}0 [override_type_mismatch_with_fixits_init]
'override' can only be specified on class members [override_nonclass_decl]
'@_nonoverride' can only be specified on class or protocol members [nonoverride_wrong_decl_context]
'override' cannot be combined with '@_nonoverride' [nonoverride_and_override_attr]
property %0 with type %1 cannot override a property with type %2 [override_property_type_mismatch]
cannot override with a stored property %0 [override_with_stored_property]
cannot override with a stored property %0 [override_with_stored_property_warn]
cannot observe read-only property %0; it can't change [observing_readonly_property]
cannot override mutable property with read-only property %0 [override_mutable_with_readonly_property]
argument labels for %select{method|initializer}0 %1 do not match those of overridden %select{method|initializer}0 %2 [override_argument_name_mismatch]
cannot override %0 property with %1 property [override_ownership_mismatch]
cannot override a Self return type with a non-Self return type [override_dynamic_self_mismatch]
cannot override a non-dynamic class declaration from an extension [override_class_declaration_in_extension]
cannot override non-%1 %0 with %1 %0 [override_with_more_effects]
overriding a throwing @objc %select{method|initializer}0 with a non-throwing %select{method|initializer}0 is not supported [override_throws_objc]
satisfying a throwing @objc %select{method|initializer}0 with a non-throwing %select{method|initializer}0 is not supported [satisfy_throws_objc]
cannot override %0 %select{parameter|index}1 of type %2 with non-optional type %3 [override_optional_mismatch]
cannot override %0 %select{result|element}1 type %2 with optional type %3 [override_optional_result_mismatch]
overriding %0 parameter of type %1 with implicitly unwrapped optional type %2 [override_unnecessary_IUO]
overriding %0 optional result type %1 with implicitly unwrapped optional type %2 [override_unnecessary_result_IUO]
remove '!' to make the parameter required [override_unnecessary_IUO_remove]
use '?' to make the result optional [override_unnecessary_IUO_use_strict]
add parentheses to silence this warning [override_unnecessary_IUO_silence]
cannot override mutable property %0 of type %1 with covariant type %2 [override_mutable_covariant_property]
cannot override mutable subscript of type %0 with covariant type %1 [override_mutable_covariant_subscript]
static declarations are already final [static_decl_already_final]
%0 cannot be declared both 'final' and 'open' [open_decl_cannot_be_final]
%select{'let' properties|members of 'final' classes|static declarations}0 are implicitly 'final'; use 'public' instead of 'open' [implicitly_final_cannot_be_open]
%select{'let' properties|members of 'final' classes|static declarations}0 are implicitly 'final'; use 'public' instead of 'open' [implicitly_final_cannot_be_open_swift4]
override of %0 %1 from extension of %2 depends on deprecated inference of '@objc' [override_swift3_objc_inference]
overridden method %0 has generic signature %1 which is incompatible with base method's generic signature %2; expected generic signature to be %3 [override_method_different_generic_sig]
duplicate inheritance from %0 [duplicate_inheritance]
redundant inheritance from 'AnyObject' and Swift 3 'class' keyword [duplicate_anyobject_class_inheritance]
inheritance from class-constrained protocol composition type %0 [inheritance_from_protocol_with_superclass]
using 'class' keyword to define a class-constrained protocol is deprecated; use 'AnyObject' instead [anyobject_class_inheritance_deprecated]
multiple inheritance from classes %0 and %1 [multiple_inheritance]
inheritance from non-protocol, non-class type %0 [inheritance_from_non_protocol_or_class]
inheritance from non-protocol type %0 [inheritance_from_non_protocol]
superclass %0 must appear first in the inheritance clause [superclass_not_first]
cannot inherit from non-open class %0 outside of its defining module [superclass_not_open]
superclass is declared here [superclass_here]
superclass %0 of open class must be open [superclass_of_open_not_open]
inheritance from a final class %0 [inheritance_from_final_class]
inheritance from a generic Objective-C class %0 must bind type parameters of %0 to specific concrete types [inheritance_from_unspecialized_objc_generic_class]
cannot inherit from class %0 because it has overridable members that could not be loaded [inheritance_from_class_with_missing_vtable_entries]
cannot inherit from class %0 (compiled with Swift %1) because it has overridable members that could not be loaded in Swift %2 [inheritance_from_class_with_missing_vtable_entries_versioned]
cannot inherit from Core Foundation type %0 [inheritance_from_cf_class]
cannot inherit from class %0 because it is only visible via the Objective-C runtime [inheritance_from_objc_runtime_visible_class]
enum case in %select{a private|a fileprivate|an internal|a public|%error}0 enum uses %select{a private|a fileprivate|an internal|%error|%error}1 type [enum_case_access]
enum case in %select{a private|a fileprivate|an internal|a public|%error}0 enum uses %select{a private|a fileprivate|an internal|%error|%error}1 type [enum_case_access_warn]
type of enum case in '@usableFromInline' enum must be '@usableFromInline' or public [enum_case_usable_from_inline]
type of enum case in '@usableFromInline' enum should be '@usableFromInline' or public [enum_case_usable_from_inline_warn]
enums must not contain stored properties [enum_stored_property]
multiple enum raw types %0 and %1 [multiple_enum_raw_types]
raw type %0 must appear first in the enum inheritance clause [raw_type_not_first]
raw type %0 is not expressible by a string, integer, or floating-point literal [raw_type_not_literal_convertible]
RawRepresentable conformance cannot be synthesized because raw type %0 is not Equatable [enum_raw_type_not_equatable]
%0 declares raw type %1, but does not conform to RawRepresentable and conformance could not be synthesized [enum_raw_type_nonconforming_and_nonsynthable]
%0 declares raw type %1, which implies RawRepresentable [enum_declares_rawrep_with_raw_type]
enum %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}1|private or fileprivate}3|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its raw type uses %select{a private|a fileprivate|an internal|%error|%error}2 type [enum_raw_type_access]
enum %select{should be declared %select{private|fileprivate|internal|%error|%error}1|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its raw type uses %select{a private|a fileprivate|an internal|%error|%error}2 type [enum_raw_type_access_warn]
type referenced from the raw type of a '@usableFromInline' enum must be '@usableFromInline' or public [enum_raw_type_not_usable_from_inline]
type referenced from the raw type of a '@usableFromInline' enum should be '@usableFromInline' or public [enum_raw_type_not_usable_from_inline_warn]
an enum with no cases cannot declare a raw type [empty_enum_raw_type]
enum case cannot have a raw value if the enum does not have a raw type [enum_raw_value_without_raw_type]
enum with raw type cannot have cases with arguments [enum_with_raw_type_case_with_argument]
declared raw type %0 here [enum_raw_type_here]
'@objc' enum must declare an integer raw type [objc_enum_no_raw_type]
'@objc' enum raw type %0 is not an integer type [objc_enum_raw_type_not_integer]
enum case must declare a raw value when the preceding raw value is not an integer [enum_non_integer_raw_value_auto_increment]
enum cases require explicit raw values when the raw type is not expressible by integer or string literal [enum_non_integer_convertible_raw_type_no_value]
raw value for enum case is not unique [enum_raw_value_not_unique]
use of '%0' literal as raw value for enum case is not supported [enum_raw_value_magic_literal]
raw value previously used here [enum_raw_value_used_here]
raw value auto-incremented from here [enum_raw_value_incrementing_from_here]
raw value implicitly auto-incremented from zero [enum_raw_value_incrementing_from_zero]
construct %0 from unwrapped %1 value [construct_raw_representable_from_unwrapped_value]
cannot use %0 %1 %select{here|as property wrapper here|as result builder here|in an extension with public or '@usableFromInline' members|in an extension with conditional conformances}2; %select{%3 has been imported as implementation-only|it is an SPI imported from %3|it is SPI}4 [decl_from_hidden_module]
cannot use %0 %1 %select{in SPI|as property wrapper in SPI|as result builder in SPI|in an extension with public or '@usableFromInline' members|in an extension with conditional conformances}2; %select{%3 has been imported as implementation-only}4 [decl_from_hidden_module_warn]
cannot use conformance of %0 to %1 %select{here|as property wrapper here|as result builder here|in an extension with public or '@usableFromInline' members|in an extension with conditional conformances}2; %select{%3 has been imported as implementation-only|the conformance is declared as SPI in %3|the conformance is declared as SPI}4 [conformance_from_implementation_only_module]
in associated type %0 (inferred as %1) [assoc_conformance_from_implementation_only_module]
cannot export the underlying C type of the function type %0; it may use anonymous types or types defined outside of a module [unexportable_clang_function_type]
couldn't instantiate a C++ class template [cxx_class_instantiation_failed]
%0 inconsistently imported as implementation-only [warn_implementation_only_conflict]
imported as implementation-only here [implementation_only_conflict_here]
private module %0 is imported publicly from the public module %1 [warn_public_import_of_private_module]
'@_implementationOnly' can only be used on overrides [implementation_only_decl_non_override]
'@_implementationOnly' override must have the same type as the declaration it overrides (%0) [implementation_only_override_changed_type]
override of '@_implementationOnly' %0 should also be declared '@_implementationOnly' [implementation_only_override_without_attr]
override of %0 imported as implementation-only must be declared '@_implementationOnly' [implementation_only_override_import_without_attr]
implementation of %0 for non-final class cannot be automatically synthesized in extension because initializer requirement %1 can only be satisfied by a 'required' initializer in the class definition [cannot_synthesize_init_in_extension_of_nonfinal]
extension outside of file declaring %0 %1 prevents automatic synthesis of %2 for protocol %3 [cannot_synthesize_in_crossfile_extension]
AdditiveArithmetic protocol is broken: unexpected requirement [broken_additive_arithmetic_requirement]
CaseIterable protocol is broken: unexpected requirement [broken_case_iterable_requirement]
RawRepresentable protocol is broken: unexpected requirement [broken_raw_representable_requirement]
Comparable protocol is broken: unexpected requirement [broken_comparable_requirement]
Equatable protocol is broken: unexpected requirement [broken_equatable_requirement]
Hashable protocol is broken: unexpected requirement [broken_hashable_requirement]
Hashable protocol is broken: Hasher type not found [broken_hashable_no_hasher]
Error protocol is broken: unexpected requirement [broken_errortype_requirement]
Int type is broken: does not conform to Hashable [broken_int_hashable_conformance]
Int type is broken: does not conform to ExpressibleByIntegerLiteral [broken_int_integer_literal_convertible_conformance]
no overload of '<' for Int [no_less_than_overload_for_int]
no overload of '==' for Int [no_equal_overload_for_int]
CodingKey protocol is broken: unexpected requirement [broken_coding_key_requirement]
Encodable protocol is broken: unexpected requirement [broken_encodable_requirement]
Decodable protocol is broken: unexpected requirement [broken_decodable_requirement]
Differentiable protocol is broken: unexpected requirement [broken_differentiable_requirement]
stored property %0 has no derivative because %1 does not conform to 'Differentiable'; add an explicit '@noDerivative' attribute%select{|, or conform %2 to 'AdditiveArithmetic'}3 [differentiable_nondiff_type_implicit_noderivative_fixit]
synthesis of the 'Differentiable.move(by:)' requirement for %1 requires 'wrappedValue' in property wrapper %0 to be mutable or have a non-mutating 'move(by:)'; add an explicit '@noDerivative' attribute%select{|, or conform %1 to 'AdditiveArithmetic'}2 [differentiable_immutable_wrapper_implicit_noderivative_fixit]
synthesis of the 'Differentiable.move(by:)' requirement for %0 requires all stored properties not marked with `@noDerivative` to be mutable or have a non-mutating 'move(by:)'; use 'var' instead, or add an explicit '@noDerivative' attribute %select{|, or conform %0 to 'AdditiveArithmetic'}1 [differentiable_let_property_implicit_noderivative_fixit]
CodingKey case %0 does not match any stored properties [codable_extraneous_codingkey_case_here]
cannot automatically synthesize %0 because %1 does not conform to %0 [codable_non_conforming_property_here]
cannot automatically synthesize %0 because %1 does not have a matching CodingKey and does not have a default value [codable_non_decoded_property_here]
cannot automatically synthesize %0 because 'CodingKeys' is not an enum [codable_codingkeys_type_is_not_an_enum_here]
cannot automatically synthesize %0 because 'CodingKeys' does not conform to CodingKey [codable_codingkeys_type_does_not_conform_here]
cannot automatically synthesize %0 because superclass does not have a callable %1 [decodable_no_super_init_here]
cannot automatically synthesize %0 because implementation would need to call %1, which is not designated [decodable_super_init_not_designated_here]
cannot automatically synthesize %0 because implementation would need to call %1, which is inaccessible due to '%select{private|fileprivate|internal|%error|%error}2' protection level [decodable_inaccessible_super_init_here]
cannot automatically synthesize %0 because implementation would need to call %1, which is failable [decodable_super_init_is_failable_here]
did you mean to override 'init(from:)'? [decodable_suggest_overriding_init_here]
did you mean to override 'init(from:)' and 'encode(to:)'? [codable_suggest_overriding_init_here]
cannot automatically synthesize %0 because %1 has duplicate case name %2 [codable_enum_duplicate_case_name_here]
cannot automatically synthesize %0 for %1 because user defined parameter name %2 in %3 conflicts with automatically generated parameter name [codable_enum_duplicate_parameter_name_here]
immutable property will not be decoded because it is declared with an initial value which cannot be overwritten [decodable_property_will_not_be_decoded]
set the initial value via the initializer or explicitly define a CodingKeys enum %select{including|without}0 a %1 case to silence this warning [decodable_property_init_or_codingkeys_implicit]
set the initial value via the initializer or remove the %0 case from the CodingKeys enum to silence this warning [decodable_property_init_or_codingkeys_explicit]
make the property mutable instead [decodable_make_property_mutable]
%select{associated value|stored property}0 type %1 does not conform to protocol %2, preventing synthesized conformance of %3 to %2 [missing_member_type_conformance_prevents_synthesis]
automatic synthesis of '%0' is not supported for %select{classes|structs}1 [automatic_protocol_synthesis_unsupported]
enum declares raw type %0, preventing synthesized conformance of %1 to %2 [comparable_synthesis_raw_value_not_allowed]
%select{global|local}0 function cannot return 'Self' [dynamic_self_non_method]
covariant 'Self' or 'Self?' can only appear as the type of a property, subscript or method result; did you mean '%0'? [dynamic_self_invalid]
mutable property cannot have covariant 'Self' type [dynamic_self_in_mutable_property]
stored property cannot have covariant 'Self' type [dynamic_self_in_stored_property]
mutable subscript cannot have covariant 'Self' type [dynamic_self_in_mutable_subscript]
covariant 'Self' or 'Self?' can only appear at the top level of property type [dynamic_self_invalid_property]
covariant 'Self' or 'Self?' can only appear at the top level of subscript element type [dynamic_self_invalid_subscript]
covariant 'Self' or 'Self?' can only appear at the top level of method result type [dynamic_self_invalid_method]
covariant 'Self' type cannot be referenced from a stored property initializer [dynamic_self_stored_property_init]
covariant 'Self' type cannot be referenced from a default argument expression [dynamic_self_default_arg]
%0 may only be used on '%1' declarations [attr_only_one_decl_kind]
'%0' must not be used on variadic parameters [attr_not_on_variadic_parameters]
'%0' must not be used on subscript parameters [attr_not_on_subscript_parameters]
ambiguous reference to %0 in '@%1' attribute [attr_ambiguous_reference_to_decl]
%0 overrides a 'final' %1 [override_final]
cannot override %0 [override_static]
only classes and class members may be marked with 'final' [member_cannot_be_final]
'final' may only be applied to classes, properties, methods, and subscripts [final_not_allowed_here]
'final' cannot be applied to accessors, it must be put on the %select{var|let|subscript}0 [final_not_on_accessors]
override of 'rethrows' %select{method|initializer}0 should also be 'rethrows' [override_rethrows_with_non_rethrows]
'rethrows' function must take a throwing function argument [rethrows_without_throwing_parameter]
override of 'reasync' %select{method|initializer}0 should also be 'reasync' [override_reasync_with_non_reasync]
'reasync' function must take an 'async' function argument [reasync_without_async_parameter]
@autoclosure attribute only applies to function types [autoclosure_function_type]
'@convention(%0)' attribute is not allowed on '@autoclosure' types [invalid_autoclosure_and_convention_attributes]
argument type of @autoclosure parameter must be '()' [autoclosure_function_input_nonunit]
@escaping attribute may only be used in function parameter position [escaping_non_function_parameter]
closure is already escaping in optional type argument [escaping_optional_type_argument]
@_nonEphemeral attribute only applies to pointer types [non_ephemeral_non_pointer_type]
@NSManaged only allowed on an instance property or method [attr_NSManaged_not_instance_member]
@NSManaged not allowed on %select{computed|observing|addressed}0 properties [attr_NSManaged_not_stored]
@NSManaged not allowed on a 'let' property [attr_NSManaged_let_property]
@NSManaged property cannot have an initial value [attr_NSManaged_initial_value]
@NSManaged property cannot also be marked @NSCopying [attr_NSManaged_NSCopying]
@NSManaged method cannot have a body; it must be provided at runtime [attr_NSManaged_method_body]
@NSCopying may only be used on properties in classes [nscopying_only_on_class_properties]
@NSCopying requires property to be mutable [nscopying_only_mutable]
@NSCopying is only valid on stored properties [nscopying_only_stored_property]
@NSCopying is only valid with types that conform to the NSCopying protocol [nscopying_doesnt_conform]
%select{'UIApplicationMain'|'NSApplicationMain'|'main'}0 class must conform to the %select{'UIApplicationDelegate'|'NSApplicationDelegate'}0 protocol [attr_ApplicationMain_not_ApplicationDelegate]
generic %select{'UIApplicationMain'|'NSApplicationMain'|'main'}0 %select{classes|classes|types}0 are not supported [attr_generic_ApplicationMain_not_supported]
%select{'UIApplicationMain'|'NSApplicationMain'|'main'}0 attribute can only apply to one %select{class|class|type}0 in a module [attr_ApplicationMain_multiple]
%select{'UIApplicationMain'|'NSApplicationMain'|'main'}0 attribute cannot be used in a module that contains top-level code [attr_ApplicationMain_with_script]
top-level code defined in this source file [attr_ApplicationMain_script_here]
%0 is annotated with @main and must provide a main static function of type () -> Void or () throws -> Void. [attr_MainType_without_main]
'lazy' cannot be used on a let [lazy_not_on_let]
'lazy' cannot be used on a computed property [lazy_not_on_computed]
'lazy' cannot be used on an already-lazy global [lazy_on_already_lazy_global]
'lazy' cannot be used on a protocol requirement [lazy_not_in_protocol]
lazy properties must have an initializer [lazy_requires_initializer]
'lazy' cannot destructure an initializer [lazy_requires_single_var]
lazy properties cannot be %0 [lazy_not_strong]
access to the underlying storage of a lazy property is not allowed [lazy_var_storage_access]
@LLDBDebuggerSupport may only be used when debugger support is on [attr_for_debugger_support_only]
protocol %0 has no member %1 [implements_attr_protocol_lacks_member]
non-protocol type in @_implements attribute [implements_attr_non_protocol_type]
containing type %0 does not conform to protocol %1 [implements_attr_protocol_not_conformed_to]
%0 does not have expected type %1 [differentiable_attr_overload_not_found]
duplicate '@differentiable' attribute with same parameters [differentiable_attr_duplicate]
other attribute declared here [differentiable_attr_duplicate_note]
%0 is not defined in the current type context [differentiable_attr_function_not_same_type_context]
registered derivative %0 must be a 'func' declaration [differentiable_attr_derivative_not_function]
class member derivative must be final [differentiable_attr_class_derivative_not_final]
derivative function %0 is required to either be public or '@usableFromInline' because the original function %1 is public or '@usableFromInline' [differentiable_attr_invalid_access]
'@differentiable' attribute on protocol requirement cannot specify 'where' clause [differentiable_attr_protocol_req_where_clause]
'@differentiable' attribute cannot be declared on class members returning 'Self' [differentiable_attr_class_member_dynamic_self_result_unsupported]
'@differentiable' attribute cannot be declared on 'init' in a non-final class; consider making %0 final [differentiable_attr_nonfinal_class_init_unsupported]
empty 'where' clause in '@differentiable' attribute [differentiable_attr_empty_where_clause]
'where' clause is valid only when original function is generic %0 [differentiable_attr_where_clause_for_nongeneric_original]
'@differentiable' attribute does not yet support layout requirements [differentiable_attr_layout_req_unsupported]
overriding declaration is missing attribute '%0' [overriding_decl_missing_differentiable_attr]
candidate is missing explicit '%0' attribute to satisfy requirement %1 (in protocol %3); explicit attribute is necessary because candidate is declared in a different type context or file than the conformance of %2 to %3 [protocol_witness_missing_differentiable_attr_invalid_context]
'@derivative(of:)' attribute requires function to return a two-element tuple; first element must have label 'value:' and second element must have label 'pullback:' or 'differential:' [derivative_attr_expected_result_tuple]
'@derivative(of:)' attribute requires function to return a two-element tuple; first element must have label 'value:' [derivative_attr_invalid_result_tuple_value_label]
'@derivative(of:)' attribute requires function to return a two-element tuple; second element must have label 'pullback:' or 'differential:' [derivative_attr_invalid_result_tuple_func_label]
'@derivative(of:)' attribute requires function to return a two-element tuple; first element type %0 must conform to 'Differentiable' [derivative_attr_result_value_not_differentiable]
function result's %0 type does not match %1 [derivative_attr_result_func_type_mismatch]
%0 does not have expected type %1 [derivative_attr_result_func_type_mismatch_note]
%0 defined here [derivative_attr_result_func_original_note]
derivative not in the same file as the original function [derivative_attr_not_in_same_file_as_original]
cannot register derivative for stored property %0 [derivative_attr_original_stored_property_unsupported]
cannot register derivative for class member %0 returning 'Self' [derivative_attr_class_member_dynamic_self_result_unsupported]
cannot register derivative for 'init' in a non-final class; consider making %0 final [derivative_attr_nonfinal_class_init_unsupported]
cannot register derivative for %0 [derivative_attr_unsupported_accessor_kind]
cannot yet register derivative for class property or subscript setters [derivative_attr_class_setter_unsupported]
cannot yet register derivative default implementation for protocol requirements [derivative_attr_protocol_requirement_unsupported]
a derivative already exists for %0 [derivative_attr_original_already_has_derivative]
other attribute declared here [derivative_attr_duplicate_note]
derivative function must have same access level as original function; derivative function %2 is %select{private|fileprivate|internal|public|open}3, but original function %0 is %select{private|fileprivate|internal|public|open}1 [derivative_attr_access_level_mismatch]
mark the derivative function as '%select{private|fileprivate|internal|@usableFromInline|@usableFromInline}0' to match the original function [derivative_attr_fix_access]
unexpected derivative function declaration; %0 requires the derivative function %1 to be %select{an instance|a 'static'}2 method [derivative_attr_static_method_mismatch_original]
original function %0 is %select{an instance|a 'static'}1 method [derivative_attr_static_method_mismatch_original_note]
make derivative function %0 %select{an instance|a 'static'}1 method [derivative_attr_static_method_mismatch_fix]
cannot transpose with respect to original %select{result|parameter}1 '%0' that does not conform to 'Differentiable' and satisfy '%0 == %0.TangentVector' [transpose_attr_invalid_linearity_parameter_or_result]
could not find function %0 with expected type %1 [transpose_attr_overload_not_found]
cannot use named 'wrt' parameters in '@transpose(of:)' attribute, found %0 [transpose_attr_cannot_use_named_wrt_params]
the transpose of an instance method must be a 'static' method in the same type when 'self' is a linearity parameter [transpose_attr_wrt_self_must_be_static]
the transpose is declared in %0 but the original function is declared in %1 [transpose_attr_wrt_self_self_type_mismatch_note]
unexpected transpose function declaration; %0 requires the transpose function %1 to be %select{an instance|a 'static'}2 method [transpose_attr_static_method_mismatch_original]
original function %0 is %select{an instance|a 'static'}1 method [transpose_attr_static_method_mismatch_original_note]
make transpose function %0 %select{an instance|a 'static'}1 method [transpose_attr_static_method_mismatch_fix]
referenced declaration %0 is ambiguous [autodiff_attr_original_decl_ambiguous]
candidate %0 found here [autodiff_attr_original_decl_ambiguous_candidate]
referenced declaration %0 could not be resolved [autodiff_attr_original_decl_none_valid]
candidate %0 is not a 'func', 'init', 'subscript', or 'var' computed property declaration [autodiff_attr_original_decl_invalid_kind]
candidate %0 does not have a %1 [autodiff_attr_original_decl_missing_accessor]
candidate %0 does not have %select{expected type|type equal to or less constrained than}2 %1 [autodiff_attr_original_decl_type_mismatch]
candidate %0 is not defined in the current type context [autodiff_attr_original_decl_not_same_type_context]
cannot differentiate void function %0 [autodiff_attr_original_void_result]
cannot differentiate functions with both an 'inout' parameter and a result [autodiff_attr_original_multiple_semantic_results]
can only differentiate functions with results that conform to 'Differentiable', but %0 does not conform to 'Differentiable' [autodiff_attr_result_not_differentiable]
cannot differentiate functions returning opaque result types [autodiff_attr_opaque_result_type_unsupported]
%0 has no parameters to differentiate with respect to [diff_function_no_parameters]
unknown parameter name %0 [diff_params_clause_param_name_unknown]
'self' parameter is only applicable to instance methods [diff_params_clause_self_instance_method_only]
'self' parameter must come first in the parameter list [diff_params_clause_self_must_be_first]
parameters must be specified in original order [diff_params_clause_params_not_original_order]
parameter index is larger than total number of parameters [diff_params_clause_param_index_out_of_range]
no differentiation parameters could be inferred; must differentiate with respect to at least one parameter conforming to 'Differentiable' [diff_params_clause_no_inferred_parameters]
cannot differentiate with respect to 'inout' parameter (%0) [diff_params_clause_cannot_diff_wrt_inout_parameter]
can only differentiate with respect to parameters that conform to 'Differentiable', but %0 does not conform to 'Differentiable' [diff_params_clause_param_not_differentiable]
'%0' should be attached to a non-async completion-handler function [attr_completion_handler_async_handler_not_func]
function declared async [note_attr_function_declared_async]
completion handler must return 'Void' [note_attr_completion_function_must_return_void]
%0 is not a function type [note_attr_completion_handler_async_type_is_not_function]
completion handler must%select{ not|}0 be '@%1' [note_attr_completion_handler_async_handler_attr_req]
completion handler index out of range of the function parameters [attr_completion_handler_async_handler_out_of_range]
ambiguous '%0' async function %1 [attr_completion_handler_async_ambiguous_function]
no corresponding async function named %0 [attr_completion_handler_async_no_suitable_function]
consider using asynchronous alternative function [warn_use_async_alternative]
found this candidate [found_candidate]
found candidate with type %0 [found_candidate_type]
standard library error: _MaxBuiltinFloatType is not properly defined [no_MaxBuiltinFloatType_found]
module %0 has no member named %1 [no_member_of_module]
'super' members cannot be referenced in a root class [super_with_no_base_class]
'init' can only refer to the initializers of 'self'%select{| or 'super'}0 [bad_init_ref_base]
initializer delegation can only occur within an initializer [init_delegation_outside_initializer]
initializer cannot both delegate ('self.init') and chain to a superclass initializer ('super.init') [init_delegates_and_chains]
previous %select{delegation|chaining}0 call is here [init_delegation_or_chain]
convenience initializer for %0 must delegate (with 'self.init') rather than chaining to a superclass initializer (with 'super.init') [delegating_convenience_super_init]
designated initializer for %0 cannot delegate (with 'self.init'); did you mean this to be a convenience initializer? [delegating_designated_init]
designated initializer for %0 cannot delegate (with 'self.init') [delegating_designated_init_in_extension]
delegation occurs here [delegation_here]
must call a designated initializer of the superclass %0 [chain_convenience_init]
a non-failable initializer cannot %select{delegate|chain}0 to failable initializer %1 written with 'init?' [delegate_chain_nonoptional_to_optional]
force potentially-failing result with '!' [init_force_unwrap]
propagate the failure with 'init?' [init_propagate_failure]
a non-failable initializer cannot use 'try?' to %select{delegate|chain}0 to another initializer [delegate_chain_nonoptional_to_optional_try]
force potentially-failing result with 'try!' [init_delegate_force_try]
%select{initializer delegation ('self.init')|initializer chaining ('super.init')}0 cannot be nested in another %select{expression|statement}1 [init_delegation_nested]
convenience initializer is declared here [convenience_init_here]
designated initializer cannot be declared in an extension of %0; did you mean this to be a convenience initializer? [designated_init_in_extension]
designated initializer cannot be declared in an extension of %0 [cfclass_designated_init_in_extension]
initializers in %0 are not marked with 'convenience' [enumstruct_convenience_init]
convenience initializer not allowed in non-class type %0 [nonclass_convenience_init]
convenience initializers are not supported in extensions of CF types [cfclass_convenience_init]
constructing an object of class type %0 with a metatype value must use a 'required' initializer [dynamic_construct_class]
selected %select{non-required|implicit}0 initializer %1 [note_nonrequired_initializer]
value of type %0 is a protocol; it cannot be instantiated [construct_protocol_value]
protocol type %0 cannot be instantiated [construct_protocol_by_name]
operator is not a known binary operator [unknown_binop]
adjacent operators are in non-associative precedence group %0 [non_associative_adjacent_operators]
adjacent operators are in unordered precedence groups %0 and %1 [unordered_adjacent_operators]
broken standard library: missing builtin precedence group %0 [missing_builtin_precedence_group]
comparison with '.nan' using %0 is always %select{false|true}1, use '%2.isNaN' to check if '%3' %select{is not a number|is a number}1 [nan_comparison]
comparison with '.nan' using %0 is always %select{false|true}1 [nan_comparison_without_isnan]
'.nan' %0 '.nan' is always %select{false|true}1 [nan_comparison_both_nan]
'%select{try|try!|try?|await}0' cannot appear to the right of a non-assignment operator [try_rhs]
'%select{try|try!|try?|await}0' following conditional operator does not cover everything to its right [try_if_rhs_noncovering]
'%select{try|try!|try?|await}0' following assignment operator does not cover everything to its right [try_assign_rhs_noncovering]
type 'Bool' is broken [broken_bool]
treating a forced downcast to %0 as optional will never produce 'nil' [inject_forced_downcast]
use 'as?' to perform a conditional downcast to %0 [forced_to_conditional_downcast]
add parentheses around the cast to silence this warning [silence_inject_forced_downcast]
conditional downcast to CoreFoundation type %0 will always succeed [conditional_downcast_foreign]
did you mean to explicitly compare the CFTypeIDs of %0 and %1? [note_explicitly_compare_cftypeid]
optional type %0 cannot be used as a boolean; test for '%select{!|=}1= nil' instead [optional_used_as_boolean]
type %0 cannot be used as a boolean; test for '%select{!|=}1= 0' instead [integer_used_as_boolean]
string interpolation requires the protocol 'ExpressibleByStringInterpolation' to be defined [interpolation_missing_proto]
protocol 'ExpressibleByStringInterpolation' is broken [interpolation_broken_proto]
object literal protocol is broken [object_literal_broken_proto]
'_' can only appear in a pattern or on the left side of an assignment [discard_expr_outside_of_assignment]
using '_' to ignore the result of a Void-returning function is redundant [discard_expr_void_result_redundant]
heterogeneous collection literal could only be inferred to %0; add explicit type annotation if this is intentional [collection_literal_heterogeneous]
empty collection literal requires an explicit type [collection_literal_empty]
reference to member %0 cannot be resolved without a contextual type [unresolved_member_no_inference]
cannot infer contextual base in reference to member %0 [cannot_infer_base_of_unresolved_member]
'nil' requires a contextual type [unresolved_nil_literal]
'nil' literal cannot be force unwrapped [cannot_force_unwrap_nil_literal]
type of expression is ambiguous without more context [type_of_expression_is_ambiguous]
failed to produce diagnostic for expression; please submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the project [failed_to_produce_diagnostic]
missing protocol %0 [missing_protocol]
protocol 'ExpressibleByNilLiteral' is broken [nil_literal_broken_proto]
protocol '_ExpressibleByBuiltinIntegerLiteral' is broken [builtin_integer_literal_broken_proto]
protocol 'ExpressibleByIntegerLiteral' is broken [integer_literal_broken_proto]
protocol '_ExpressibleByBuiltinFloatLiteral' is broken [builtin_float_literal_broken_proto]
protocol 'ExpressibleByFloatLiteral' is broken [float_literal_broken_proto]
protocol '_ExpressibleByBuiltinBooleanLiteral' is broken [builtin_boolean_literal_broken_proto]
protocol 'ExpressibleByBooleanLiteral' is broken [boolean_literal_broken_proto]
protocol '_ExpressibleByBuiltinUnicodeScalarLiteral' is broken [builtin_unicode_scalar_literal_broken_proto]
protocol 'ExpressibleByUnicodeScalarLiteral' is broken [unicode_scalar_literal_broken_proto]
protocol '_ExpressibleByBuiltinExtendedGraphemeClusterLiteral' is broken [builtin_extended_grapheme_cluster_literal_broken_proto]
protocol 'ExpressibleByExtendedGraphemeClusterLiteral' is broken [extended_grapheme_cluster_literal_broken_proto]
protocol '_ExpressibleByBuiltinStringLiteral' is broken [builtin_string_literal_broken_proto]
protocol 'ExpressibleByStringLiteral' is broken [string_literal_broken_proto]
dictionary of type %0 cannot be %select{used|initialized}1 with array literal [should_use_dictionary_literal]
did you mean to use a dictionary literal instead? [meant_dictionary_lit]
use [:] to get an empty dictionary literal [should_use_empty_dictionary_literal]
contextual type %0 cannot be used with dictionary literal [type_is_not_dictionary]
cannot explicitly specialize a generic function [cannot_explicitly_specialize_generic_function]
cannot specialize a non-generic definition [not_a_generic_definition]
cannot specialize non-generic type %0 [not_a_generic_type]
generic type %0 specialized with %select{too many|too few}3 type parameters (got %2, but expected %1) [type_parameter_count_mismatch]
reference to generic type %0 requires arguments in <...> [generic_type_requires_arguments]
%0 declared here [descriptive_generic_type_declared_here]
you cannot use a placeholder type here [placeholder_type_not_allowed]
Unsafe%0Pointer<Void> has been replaced by Unsafe%0RawPointer [use_of_void_pointer]
ambiguous use of %0 [ambiguous_decl_ref]
ambiguous use of operator %0 [ambiguous_operator_ref]
%select{use an explicit argument label instead of a trailing closure|avoid using a trailing closure}0 to call %1 [ambiguous_because_of_trailing_closure]
partial application of %select{'mutating' method|'super.init' initializer chain|'self.init' initializer delegation|'super' instance method with metatype base}0 is not allowed [partial_application_of_function_invalid]
partial application of %select{'mutating' method|'super.init' initializer chain|'self.init' initializer delegation|'super' instance method with metatype base}0 is not allowed; calling the function has undefined behavior and will be an error in future Swift versions [partial_application_of_function_invalid_swift4]
assigning a variable to itself [self_assignment_var]
assigning a property to itself [self_assignment_prop]
reference to property %0 in closure requires explicit use of 'self' to make capture semantics explicit [property_use_in_closure_without_explicit_self]
call to method %0 in closure requires explicit use of 'self' to make capture semantics explicit [method_call_in_closure_without_explicit_self]
capture 'self' explicitly to enable implicit 'self' in this closure [note_capture_self_explicitly]
reference 'self.' explicitly [note_reference_self_explicitly]
variable other than 'self' captured here under the name 'self' does not enable implicit 'self' [note_other_self_capture]
weak capture of 'self' here does not enable implicit 'self' [note_self_captured_weakly]
implicit use of 'self' in closure; use 'self.' to make capture semantics explicit [implicit_use_of_self_in_closure]
attempting to %select{access|modify}1 %0 within its own %select{getter|setter}1 [recursive_accessor_reference]
access 'self' explicitly to silence this warning [recursive_accessor_reference_silence]
attempting to store to property %0 within its own willSet, which is about to be overwritten by the new value [store_in_willset]
expected module member name after module name [value_of_module_type]
expected member name or constructor call after type name [value_of_metatype_type]
add arguments after the type to construct a value of the type [add_parens_to_type]
use '.self' to reference the type object [add_self_to_type]
use of %0 treated as a reference to %1 in %2 %3 [warn_unqualified_access]
use 'self.' to silence this warning [fix_unqualified_access_member]
use '%0' to reference the %1 [fix_unqualified_access_top_level]
use '%0' to reference the %1 in module %2 [fix_unqualified_access_top_level_multi]
use of %0 as reference to %1 in %2 %3 will change in future versions of Swift to reference %4 in %5 %6 which comes via a conditional conformance [warn_deprecated_conditional_conformance_outer_access]
use '%0' to continue to reference the %1 [fix_deprecated_conditional_conformance_outer_access]
referencing %0 as a function value is not implemented [unsupported_special_decl_ref]
'unsafeBitCast' from non-escaping function type %0 to escaping function type %1 is undefined; use 'withoutActuallyEscaping' to temporarily escape a function [bitcasting_away_noescape]
'unsafeBitCast' from function type %0 to %1 changes @convention and is undefined; use an implicit conversion to change conventions [bitcasting_to_change_function_rep]
'unsafeBitCast' from %0 to %1 can be replaced with 'unsafeDowncast' [bitcasting_to_downcast]
'unsafeBitCast' from %0 to %1 is unnecessary and can be removed [bitcasting_is_no_op]
'unsafeBitCast' from %0 to %1 can be replaced with %2 initializer [bitcasting_to_change_pointer_kind]
'unsafeBitCast' from %0 to %1 changes pointee type and may lead to undefined behavior; use the 'withMemoryRebound' method on %0 to rebind the type of memory [bitcasting_to_change_pointee_type]
'unsafeBitCast' from %0 to %1 gives a type to a raw pointer and may lead to undefined behavior [bitcasting_to_give_type_to_raw_pointer]
use the 'assumingMemoryBound' method if the pointer is known to point to an existing value or array of type %0 in memory [bitcast_assume_memory_rebound]
use the 'bindMemory' method to assign type %0 to uninitialized raw memory [bitcast_bind_memory]
'unsafeBitCast' from %0 to %1 can be replaced with 'bitPattern:' initializer on %1 [bitcasting_for_number_bit_pattern_init]
'unsafeBitCast' from %0 to %1 can be replaced with 'bitPattern' property on %0 [bitcasting_for_number_bit_pattern_property]
'unsafeBitCast' from %0 to %1 can be replaced with %1 initializer [bitcasting_to_change_from_unsized_to_sized_int]
left side of nil coalescing operator '??' has non-optional type %0, so the right side is never used [use_of_qq_on_non_optional_value]
comparing non-optional value of type %0 to 'nil' always returns %select{false|true}1 [nonoptional_compare_to_nil]
non-optional expression of type %0 used in a check for optionals [optional_check_nonoptional]
explicitly specified type %0 adds an additional level of optional to the initializer, making the optional check always succeed [optional_check_promotion]
pattern match introduces an implicit promotion from %0 to %1 [optional_pattern_match_promotion]
expression implicitly coerced from %0 to %1 [optional_to_any_coercion]
coercion of implicitly unwrappable value of type %0 to %1 does not unwrap optional [iuo_to_any_coercion]
implicitly unwrapped %0 %1 declared here [iuo_to_any_coercion_note]
%0 %1 with implicitly unwrapped result type is declared here [iuo_to_any_coercion_note_func_result]
provide a default value to avoid this warning [default_optional_to_any]
force-unwrap the value to avoid this warning [force_optional_to_any]
explicitly cast to %0 with '%1' to silence this warning [silence_optional_to_any]
string interpolation produces a debug description for %select{an optional|a function}0 value; did you mean to make this explicit? [debug_description_in_string_interpolation_segment]
use 'String(describing:)' to silence this warning [silence_debug_description_in_interpolation_segment_call]
parameter %1 is implicitly %select{non-escaping|non-concurrent}0 [noescape_parameter]
generic parameters are always considered '@escaping' [generic_parameters_always_escaping]
passing %select{non-escaping|non-concurrent}0 parameter %1 to function expecting %select{an @escaping|a @Sendable}0 closure [passing_noattrfunc_to_attrfunc]
converting non-escaping parameter %0 to generic parameter %1 may allow it to escape [converting_noespace_param_to_generic_type]
assigning %select{non-escaping|non-concurrent}0 parameter %1 to %select{an @escaping|a @Sendable}0 closure [assigning_noattrfunc_to_attrfunc]
using %select{non-escaping|non-concurrent}0 parameter %1 in a context expecting %select{an @escaping|a @Sendable}0 closure [general_noattrfunc_to_attr]
converting %select{non-escaping|non-concurrent function}0 value to %1 may %select{allow it to escape|introduce data races}0 [converting_noattrfunc_to_type]
converting function value of type %0 to %1 loses global actor %2 [converting_func_loses_global_actor]
%0 declaration cannot close over value %1 defined in outer scope [capture_across_type_decl]
cannot reference invalid declaration %0 [reference_to_invalid_decl]
'%0' cannot transfer control out of a defer statement [jump_out_of_defer]
'defer' statement at end of scope always executes immediately; replace with 'do' statement to silence this warning [defer_stmt_at_block_end]
return invalid outside of a func [return_invalid_outside_func]
non-void function should return a value [return_expr_missing]
only a failable initializer can return 'nil' [return_non_failable_init]
use 'init?' to make the initializer %0 failable [make_init_failable]
'nil' is the only return value permitted in an initializer [return_init_non_nil]
missing call to superclass's initializer; 'super.init' is 'async' and requires an explicit call [implicit_async_super_init]
'if' condition is always true [if_always_true]
'while' condition is always true [while_always_true]
'guard' condition is always true, body is unreachable [guard_always_succeeds]
closure expression is unused [expression_unused_closure]
function is unused [expression_unused_function]
%select{variable|property is accessed but result|subscript is accessed but result}0 is unused [expression_unused_lvalue]
result of call to %0 is unused [expression_unused_result_call]
result of operator %0 is unused [expression_unused_result_operator]
result of call to %select{function|closure}0 returning %1 is unused [expression_unused_result_unknown]
expression of type %0 is unused [expression_unused_result]
result of %0 initializer is unused [expression_unused_init_result]
result of 'try?' is unused [expression_unused_optional_try]
result of '#selector' is unused [expression_unused_selector_result]
%0 literal is unused [expression_unused_literal]
cannot assign to immutable expression of type %0 [assignment_lhs_not_lvalue]
expression is not assignable: %0 [assignment_lhs_is_apply_expression]
cannot assign to value: %0 [assignment_lhs_is_immutable_variable]
cannot assign to property: %0 [assignment_lhs_is_immutable_property]
cannot assign through subscript: %0 [assignment_subscript_has_immutable_base]
cannot assign through dynamic lookup property: %0 [assignment_dynamic_property_has_immutable_base]
cannot assign through '!': %0 [assignment_bang_has_immutable_subcomponent]
candidate is not assignable: %0 %1 [candidate_is_not_assignable]
mark %select{method|accessor}0 'mutating' to make 'self' mutable [change_to_mutating]
add explicit '%0' to refer to mutable %1 of %2 [masked_mutable_property]
'let' property %0 may not be initialized directly; use "self.init(...)" or "self = ..." instead [assignment_let_property_delegating_init]
label %0 cannot be reused on an inner statement [label_shadowed]
'break' is only allowed inside a loop, if, do, or switch [break_outside_loop]
unlabeled 'break' is only allowed inside a loop or switch, a labeled break is required to exit an if or do [unlabeled_break_outside_loop]
'continue' is only allowed inside a loop [continue_outside_loop]
'continue' cannot be used with %0 statements [continue_not_in_this_stmt]
cannot find label %0 in scope [unresolved_label]
cannot find label %0 in scope; did you mean %1? [unresolved_label_corrected]
for-in loop requires %0 to conform to %1%select{|; did you mean to unwrap optional?}2 [foreach_sequence_does_not_conform_to_expected_protocol]
no binary '~=' operator available for 'switch' statement [no_match_operator]
'fallthrough' is only allowed inside a switch [fallthrough_outside_switch]
'fallthrough' without a following 'case' or 'default' block [fallthrough_from_last_case]
'fallthrough' from a case which doesn't bind variable %0 [fallthrough_into_case_with_var_binding]
unnecessary cast over raw value of %0 [unnecessary_cast_over_optionset]
'%select{var|let}0' pattern binding must match previous '%select{var|let}1' pattern binding [mutability_mismatch_multiple_pattern_list]
pattern variable bound to type %0, expected type %1 [type_mismatch_multiple_pattern_list]
pattern variable bound to type %0, fallthrough case bound to type %1 [type_mismatch_fallthrough_pattern_list]
'@unknown' is only supported for catch-all cases ("case _") [unknown_case_must_be_catchall]
'where' cannot be used with '@unknown' [unknown_case_where_clause]
'@unknown' cannot be applied to multiple patterns [unknown_case_multiple_patterns]
'@unknown' can only be applied to the last case in a switch [unknown_case_must_be_last]
'where' only applies to the second pattern match in this case [where_on_one_item]
disambiguate by adding a line break between them if this is desired [add_where_newline]
duplicate the 'where' on both patterns to check both patterns [duplicate_where]
trailing closure in this context is confusable with the body of the statement; pass as a parenthesized argument to silence this warning [trailing_closure_requires_parens]
property declares an opaque return type, but has no initializer expression from which to infer an underlying type [opaque_type_var_no_init]
function declares an opaque return type, but has no return statements in its body from which to infer an underlying type [opaque_type_no_underlying_type_candidates]
function declares an opaque return type, but the return statements in its body do not have matching underlying types [opaque_type_mismatched_underlying_type_candidates]
return statement has underlying type %0 [opaque_type_underlying_type_candidate_here]
function opaque return type was inferred as %0, which defines the opaque type in terms of itself [opaque_type_self_referential_underlying_type]
property declares an opaque return type, but cannot infer the underlying type from its initializer expression [opaque_type_var_no_underlying_type]
type annotation missing in pattern [cannot_infer_type_for_pattern]
pattern matching requires an initializer value to match against [refutable_pattern_requires_initializer]
'%0' pattern has no effect; sub-pattern didn't bind any variables [var_pattern_didnt_bind_variables]
pattern matching in a condition requires the 'case' keyword [iflet_pattern_matching]
pattern matching in a condition implicitly unwraps optionals [iflet_implicitly_unwraps]
'is' keyword required to pattern match against type name [type_pattern_missing_is]
type annotation does not match contextual type %0 [pattern_type_mismatch_context]
tuple pattern cannot match values of the non-tuple type %0 [tuple_pattern_in_non_tuple_context]
enum case '%0' has %1 associated values; matching them as a tuple is deprecated [found_one_pattern_for_several_associated_values]
enum case '%0' has %1 associated values [converting_tuple_into_several_associated_values]
enum case '%0' has one associated value that is a tuple of %1 elements [converting_several_associated_values_into_tuple]
contextual closure type %0 expects %1 argument%s1, but %2 %select{were|was}3 used in closure body [closure_argument_list_tuple]
contextual type for closure argument list expects %0 argument%s0, which cannot be implicitly ignored [closure_argument_list_missing]
closure tuple parameter %0 does not support destructuring [closure_tuple_parameter_destructuring]
closure tuple parameter %0 does not support destructuring with implicit parameters [closure_tuple_parameter_destructuring_implicit]
%0 expects a single parameter of type %1%2 [single_tuple_parameter_mismatch_special]
%0 %1 expects a single parameter of type %2%3 [single_tuple_parameter_mismatch_normal]
%0 %select{%1 |}2expects %3 separate arguments%select{|; remove extra parentheses to change tuple into separate arguments}4 [cannot_convert_single_tuple_into_multiple_arguments]
pattern with associated values does not match enum case %0 [enum_element_pattern_assoc_values_mismatch]
remove associated values to make the pattern match [enum_element_pattern_assoc_values_remove]
tuple pattern has the wrong length for tuple type %0 [tuple_pattern_length_mismatch]
tuple pattern element label %0 must be %1 [tuple_pattern_label_mismatch]
enum case %0 not found in type %1 [enum_element_pattern_member_not_found]
'?' pattern cannot match values of type %0 [optional_element_pattern_not_valid_type]
initializer for conditional binding must have Optional type, not %0 [condition_optional_element_pattern_not_valid_type]
enum case %0 is not a member of type %1 [enum_element_pattern_not_member_of_enum]
generic enum type %0 is ambiguous without explicit generic parameters when matching value of type %1 [ambiguous_enum_pattern_type]
%select{variable|constant}2 %0 inferred to have type %1, which may be unexpected [type_inferred_to_undesirable_type]
%select{variable|constant}2 %0 inferred to have type %1, which is an enum with no cases [type_inferred_to_uninhabited_type]
%select{variable|constant}2 %0 inferred to have type %1, which contains an enum with no cases [type_inferred_to_uninhabited_tuple_type]
add an explicit type annotation to silence this warning [add_explicit_type_annotation_to_silence]
instance will be immediately deallocated because %select{variable|property}2 %0 is %1 [unowned_assignment_immediate_deallocation]
a strong reference is required to prevent the instance from being deallocated [unowned_assignment_requires_strong]
collection downcast in cast pattern is not implemented; use an explicit downcast to %0 instead [isa_collection_downcast_pattern_value_unimplemented]
errors thrown from here are not handled [try_unhandled]
%0 can throw, but the error is not handled [throwing_call_unhandled]
%0 can throw, but it is not marked with 'try' and the error is not handled [tryless_throwing_call_unhandled]
error is not handled because the enclosing function is not declared 'throws' [throw_in_nonthrowing_function]
%0 can throw, but the error is not handled; a function declared 'rethrows' may only throw if its parameter does [throwing_call_in_rethrows_function]
%0 can throw, but it is not marked with 'try' and the error is not handled; a function declared 'rethrows' may only throw if its parameter does [tryless_throwing_call_in_rethrows_function]
a function declared 'rethrows' may only throw if its parameter does [throw_in_rethrows_function]
call is to 'rethrows' function, but argument function can throw [because_rethrows_argument_throws]
call is to 'rethrows' function, but a defaulted argument function can throw [because_rethrows_default_argument_throws]
call is to 'rethrows' function, but a conformance has a throwing witness [because_rethrows_conformance_throws]
%0 can throw, but it is executed in a non-throwing autoclosure [throwing_call_in_nonthrowing_autoclosure]
%0 can throw, but it is not marked with 'try' and it is executed in a non-throwing autoclosure [tryless_throwing_call_in_nonthrowing_autoclosure]
error is not handled because it is thrown in a non-throwing autoclosure [throw_in_nonthrowing_autoclosure]
errors thrown from here are not handled because the enclosing catch is not exhaustive [try_unhandled_in_nonexhaustive_catch]
%0 can throw, but the enclosing catch is not exhaustive [throwing_call_in_nonexhaustive_catch]
%0 can throw, but it is not marked with 'try' and the enclosing catch is not exhaustive [tryless_throwing_call_in_nonexhaustive_catch]
error is not handled because the enclosing catch is not exhaustive [throw_in_nonexhaustive_catch]
%1 can throw, but errors cannot be thrown out of %select{<<ERROR>>|a default argument|a property wrapper initializer|a property initializer|a global variable initializer|an enum case raw value|a catch pattern|a catch guard expression|a defer body}0 [throwing_op_in_illegal_context]
errors cannot be thrown out of %select{<<ERROR>>|a default argument|a property wrapper initializer|a property initializer|a global variable initializer|an enum case raw value|a catch pattern|a catch guard expression|a defer body}0 [throw_in_illegal_context]
operator can throw but expression is not marked with 'try' [throwing_operator_without_try]
interpolation can throw but is not marked with 'try' [throwing_interpolation_without_try]
call can throw but is not marked with 'try' [throwing_call_without_try]
reading 'async let' can throw but is not marked with 'try' [throwing_async_let_without_try]
property access can throw but is not marked with 'try' [throwing_prop_access_without_try]
subscript access can throw but is not marked with 'try' [throwing_subscript_access_without_try]
did you mean to use 'try'? [note_forgot_try]
did you mean to handle error as optional value? [note_error_to_optional]
did you mean to disable error propagation? [note_disable_error_propagation]
no calls to throwing functions occur within 'try' expression [no_throw_in_try]
'catch' block is unreachable because no errors are thrown in 'do' block [no_throw_in_do_with_catch]
expression is 'async' but is not marked with 'await' [async_expr_without_await]
%select{call|property access|subscript access|}0 is 'async' [async_access_without_await]
call is 'async' in an autoclosure argument [async_call_without_await_in_autoclosure]
call is 'async' in an 'async let' initializer [async_call_without_await_in_async_let]
no 'async' operations occur within 'await' expression [no_async_in_await]
'async' call cannot occur in %select{<<ERROR>>|a default argument|a property wrapper initializer|a property initializer|a global variable initializer|an enum case raw value|a catch pattern|a catch guard expression|a defer body}0 [async_call_in_illegal_context]
'await' operation cannot occur in %select{<<ERROR>>|a default argument|a property wrapper initializer|a property initializer|a global variable initializer|an enum case raw value|a catch pattern|a catch guard expression|a defer body}0 [await_in_illegal_context]
%select{'async'|'async' call|'await'|'async let'|'async' property access|'async' subscript access}0 in %select{a function|an autoclosure}1 that does not support concurrency [async_in_nonasync_function]
add 'async' to function %0 to make it asynchronous [note_add_async_to_function]
add '@asyncHandler' to function %0 to create an implicit asynchronous context [note_add_asynchandler_to_function]
add 'nonisolated' to %0 to make this %1 not isolated to the actor [note_add_nonisolated_to_decl]
add '@%0' to make %1 %2 part of global actor %3 [note_add_globalactor_to_function]
'async' %0 cannot be represented in Objective-C [not_objc_function_async]
'async' function types cannot be represented in Objective-C [not_objc_function_type_async]
actor-isolated %0 %1 cannot be @objc [actor_isolated_objc]
candidate is %select{not |}0'async', but%select{| @objc}1 protocol requirement is%select{| not}0 [protocol_witness_async_conflict]
'async' autoclosure parameter in a non-'async' function [async_autoclosure_nonasync_function]
'async' can only be used with 'let' declarations [async_not_let]
'async let' can only be used on local declarations [async_let_not_local]
'async let' binding requires an initializer expression [async_let_not_initialized]
'async let' requires at least one named variable [async_let_no_variables]
reference to async let %0 is 'async' [async_let_without_await]
async let %0 cannot be referenced in %select{<<ERROR>>|a default argument|a property wrapper initializer|a property initializer|a global variable initializer|an enum case raw value|a catch pattern|a catch guard expression|a defer body}1 [async_let_in_illegal_context]
'@asyncHandler' can only be applied to functions [asynchandler_non_func]
'@asyncHandler' function can only return 'Void' [asynchandler_returns_value]
'@asyncHandler' function cannot throw [asynchandler_throws]
'@asyncHandler' function cannot be 'async' itself [asynchandler_async]
'inout' parameter is not allowed in '@asyncHandler' function [asynchandler_inout_parameter]
non-escaping closure parameter is not allowed in '@asyncHandler' function [asynchandler_noescape_closure_parameter]
'@asyncHandler' function cannot be 'mutating' [asynchandler_mutating]
'@asyncHandler' has been removed from the language [asynchandler_removed]
%0 overrides or implements protocol requirements for Objective-C declarations with incompatible async conventions [objc_ambiguous_async_convention]
%0 provides async here [objc_ambiguous_async_convention_candidate]
asynchronous method returning 'Self' cannot be '@objc' [async_objc_dynamic_self]
actor types do not support inheritance [actor_inheritance]
actor-isolated %0 %1 can only be %select{referenced|mutated|used 'inout'}3 %select{from inside the actor|on 'self'}2 [actor_isolated_non_self_reference]
actor-isolated %0 %1 can not be %select{referenced|mutated|used 'inout'}2 from a non-isolated context [actor_isolated_self_independent_context]
actor-isolated %0 %1 cannot be passed 'inout' to%select{| implicitly}2 'async' function call [actor_isolated_inout_state]
cannot call mutating async function %0 on actor-isolated %1 %2 [actor_isolated_mutating_func]
actor-isolated %0 %1 can not be %select{referenced|mutated|used 'inout'}3 from%select{| synchronous}4 context of global actor %2 [actor_isolated_global_actor_context]
%0 %1 isolated to global actor %2 can not be %select{referenced|mutated|used 'inout'}4 from actor %3 %select{|in a synchronous context}5 [global_actor_from_instance_actor_context]
%0 %1 isolated to global actor %2 can not be %select{referenced|mutated|used 'inout'}4 from different global actor %3 %select{|in a synchronous context}5 [global_actor_from_other_global_actor_context]
%0 %1 isolated to global actor %2 can not be %select{referenced|mutated|used 'inout'}4 from %select{this|a non-isolated}3%select{| synchronous}5 context [global_actor_from_nonactor_context]
call to %0 function in a synchronous %1 context [actor_isolated_call]
call to %0 %1 %2 in a synchronous %3 context [actor_isolated_call_decl]
actor-isolated %0 %1 can not be partially applied [actor_isolated_partial_apply]
use of local %0 %1 in concurrently-executing code [concurrent_access_local]
actor-isolated %0 %1 cannot be %select{referenced|mutated|used 'inout'}2 from a concurrent closure [actor_isolated_from_concurrent_closure]
actor-isolated %0 %1 cannot be %select{referenced|mutated|used 'inout'}2 from a concurrent function [actor_isolated_from_concurrent_function]
actor-isolated %0 %1 cannot be %select{referenced|mutated|used 'inout'}2 from 'async let' initializer [actor_isolated_from_async_let]
cannot form key path to actor-isolated %0 %1 [actor_isolated_keypath_component]
cannot form key path to %0 with 'throws' or 'async' [effectful_keypath_component]
concurrently-executed %0 %1 must be marked as '@Sendable' [local_function_executed_concurrently]
%select{mutation of|reference to}0 captured %1 %2 in concurrently-executing code [concurrent_access_of_local_capture]
calls to %0 %1 from outside of its actor context are implicitly asynchronous [actor_isolated_sync_func]
mutation of this %0 is only permitted within the actor [actor_mutable_state]
reference to %0 %1 is not concurrency-safe because it involves shared mutable state [shared_mutable_state_access]
actor-isolated %0 %1 cannot be used to satisfy a protocol requirement [actor_isolated_witness]
%0 %1 must be isolated to the global actor %2 to satisfy corresponding requirement from protocol %3 [global_actor_isolated_requirement]
%0 %1 isolated to global actor %2 can not satisfy corresponding requirement from protocol %3 [global_actor_isolated_witness]
%0 %1 isolated to global actor %2 can not satisfy corresponding requirement from protocol %3 isolated to global actor %4 [global_actor_isolated_requirement_witness_conflict]
actor %0 cannot conform to global actor isolated protocol %1 [actor_cannot_conform_to_global_actor_protocol]
%0 is isolated to global actor %1 here [protocol_isolated_to_global_actor_here]
cannot pass argument of non-sendable type %0 across actors [non_concurrent_param_type]
cannot call function returning non-sendable type %0 across actors [non_concurrent_result_type]
cannot use %0 %1 with a non-sendable type %2 %select{across actors|from concurrently-executed code}3 [non_concurrent_property_type]
cannot form key path that captures non-sendable type %0 [non_concurrent_keypath_capture]
cannot form key path that accesses non-sendable type %0 [non_concurrent_keypath_access]
%select{stored property %1|associated value %1}0 of 'Sendable'-conforming %2 %3 has non-sendable type %4 [non_concurrent_type_member]
stored property %0 of 'Sendable'-conforming %1 %2 is mutable [concurrent_value_class_mutable_property]
conformance to 'Sendable' must occur in the same source file as %0 %1; use 'UnsafeSendable' for retroactive conformance [concurrent_value_outside_source_file]
non-final class %0 cannot conform to `Sendable`; use `UnsafeSendable` [concurrent_value_nonfinal_class]
`Sendable` class %1 cannot inherit from another class%select{| other than 'NSObject'}0 [concurrent_value_inherit]
'@actorIndependent' is meaningless on 'let' declarations because they are immutable [actorindependent_let]
'@actorIndependent' can not be applied to stored properties [actorindependent_mutable_storage]
'@actorIndependent' can not be applied to local variables [actorindependent_local_var]
'nonisolated' is meaningless on 'let' declarations because they are immutable [nonisolated_let]
nonisolated' can not be applied to stored properties [nonisolated_mutable_storage]
'nonisolated' can not be applied to local variables [nonisolated_local_var]
%0 property in property wrapper type %1 cannot be isolated to the actor instance; consider 'nonisolated' [actor_instance_property_wrapper]
missing '%0' declaration, probably because the '_Concurrency' module was not imported [concurrency_lib_missing]
'_Concurrency' module not imported, required for async main [async_main_no_concurrency]
global actor %0 requires a static property 'shared' that produces an actor instance [global_actor_missing_shared]
'shared' property in global actor is not 'static' [global_actor_shared_not_static]
'shared' property has more restrictive access (%0) than its global actor (%1) [global_actor_shared_inaccessible]
'shared' property in global actor cannot be in a constrained extension [global_actor_shared_constrained_extension]
'shared' property type %0 does not conform to the 'Actor' protocol [global_actor_shared_non_actor_type]
declaration can not have multiple global actor attributes (%0 and %1) [multiple_global_actors]
%0 cannot have a global actor [global_actor_disallowed]
actor %0 cannot have a global actor [global_actor_on_actor_class]
local variable %0 cannot have a global actor [global_actor_on_local_variable]
global actor attribute %0 argument can only be '(unsafe)' [global_actor_non_unsafe_init]
%0 %1 has multiple actor-isolation attributes ('%2' and '%3') [actor_isolation_multiple_attr]
%0 %1 %2 has different actor isolation from %3 overridden declaration [actor_isolation_override_mismatch]
value type %0 cannot have a stored property that recursively contains it [unsupported_recursive_struct]
enum containing only recursive cases is impossible to instantiate [enum_non_well_founded]
recursive enum %0 is not marked 'indirect' [recursive_enum_not_indirect]
value type %0 has infinite size [unsupported_infinitely_sized_type]
cycle beginning here: %0 [note_type_cycle_starts_here]
recursive case here [note_recursive_enum_case_here]
broken standard library: cannot find %select{Array|Optional|ImplicitlyUnwrappedOptional|Dictionary|Error}0 type [sugar_type_not_found]
broken standard library: cannot find intrinsic operations on Optional<T> [optional_intrinsics_not_found]
broken standard library: cannot find intrinsic operations on UnsafeMutablePointer<T> [pointer_argument_intrinsics_not_found]
broken standard library: cannot find intrinsic operations on Array<T> [array_literal_intrinsics_not_found]
class %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}1|private or fileprivate}3|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its superclass %select{is %select{private|fileprivate|internal|'@_spi'|'@_spi'}2|uses %select{a private|a fileprivate|an internal|an '@_spi'|an '@_spi'}2 type as a generic parameter}4 [class_super_access]
class %select{should be declared %select{private|fileprivate|internal|%error|%error}1|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its superclass %select{is %select{private|fileprivate|internal|'@_spi'|'@_spi'}2|uses %select{a private|a fileprivate|an internal|an '@_spi'|an '@_spi'}2 type as a generic parameter}4 [class_super_access_warn]
%select{type referenced from |}0the superclass of a '@usableFromInline' class must be '@usableFromInline' or public [class_super_not_usable_from_inline]
%select{type referenced from |}0the superclass of a '@usableFromInline' class should be '@usableFromInline' or public [class_super_not_usable_from_inline_warn]
cannot use 'Protocol' with non-protocol type %0 [dot_protocol_on_non_existential]
cannot create a single-element tuple with an element label [tuple_single_element]
cannot create a variadic tuple [tuple_ellipsis]
cannot create a tuple with a duplicate element label [tuple_duplicate_label]
variadic enum cases are not supported [enum_element_ellipsis]
using '!' is not allowed here; treating this as '?' instead [implicitly_unwrapped_optional_in_illegal_position_interpreted_as_optional]
using '!' here is deprecated and will be removed in a future release [implicitly_unwrapped_optional_deprecated_in_this_position]
using '!' is not allowed here; perhaps '?' was intended? [implicitly_unwrapped_optional_in_illegal_position]
%0 may only be applied to class and class-bound protocol types, not %1 [invalid_ownership_type]
%0 must not be applied to non-class-bound %1; consider adding a protocol conformance that has a class bound [invalid_ownership_protocol_type]
%0 is incompatible with %1 references [invalid_ownership_incompatible_class]
%0 variable cannot have optional type [invalid_ownership_with_optional]
%0 variable should have optional type %1 [invalid_ownership_not_optional]
%0 must be a mutable variable, because it may change at runtime [invalid_ownership_is_let]
%0 cannot be applied to a property declaration in a protocol [ownership_invalid_in_protocols]
%0 should not be applied to a property declaration in a protocol and will be disallowed in future versions [ownership_invalid_in_protocols_compat_warning]
'required' initializer in non-class type %0 [required_initializer_nonclass]
'required' initializer must be declared directly in class %0 (not in an extension) [required_initializer_in_extension]
'required' initializer %0 must be provided by subclass of %1 [required_initializer_missing]
'required' initializer is declared in superclass here [required_initializer_here]
'required' initializer must be accessible wherever class %0 can be subclassed [required_initializer_not_accessible]
'required' modifier must be present on all overrides of a required initializer [required_initializer_missing_keyword]
use the 'required' modifier to override a required initializer [required_initializer_override_wrong_keyword]
'override' is implied when overriding a required initializer [required_initializer_override_keyword]
overridden required initializer is here [overridden_required_initializer_here]
@%0 attribute only applies to function types [attribute_requires_function_type]
convention '%0' not supported [unsupported_convention]
generic parameter '%0' is not used in function signature [unreferenced_generic_parameter]
convention '%0' does not support the 'cType' argument label, did you mean @convention(c, cType: "%1") or @convention(block, cType: "%1") instead? [unexpected_ctype_for_non_c_convention]
unable to parse '%0'; it should be a C function pointer type or a block pointer type [unable_to_parse_c_function_type]
'some' types are only implemented for the declared type of properties and subscripts and the return type of functions [unsupported_opaque_type]
'some' type can only be declared on a single property declaration [opaque_type_unsupported_pattern]
'some' type cannot be the return type of a protocol requirement; did you mean to add an associated type? [opaque_type_in_protocol_requirement]
'%0' may only be used on parameters of '@differentiable' function types [attr_only_on_parameters_of_differentiable]
parameter type '%0' does not conform to 'Differentiable'%select{| and satisfy '%0 == %0.TangentVector'}1, but the enclosing function type is '@differentiable%select{|(_linear)}1'%select{|; did you want to add '@noDerivative' to this parameter?}2 [differentiable_function_type_invalid_parameter]
result type '%0' does not conform to 'Differentiable'%select{| and satisfy '%0 == %0.TangentVector'}1, but the enclosing function type is '@differentiable%select{|(_linear)}1' [differentiable_function_type_invalid_result]
'@differentiable' function type requires at least one differentiability parameter, i.e. a non-'@noDerivative' parameter whose type conforms to 'Differentiable'%select{| with its 'TangentVector' equal to itself}0 [differentiable_function_type_no_differentiability_parameters]
@opened cannot be applied to non-protocol type %0 [opened_non_protocol]
SIL function types cannot be variadic [sil_function_ellipsis]
SIL function types cannot have labeled inputs [sil_function_input_label]
SIL function types cannot have labeled results [sil_function_output_label]
non-coroutine SIL function types cannot have @yield results [sil_non_coro_yields]
repeated %select{parameter|result|callee}0 convention attribute [sil_function_repeat_convention]
substitutions cannot be provided on a formal function type [ast_subst_function_type]
SIL function types cannot have multiple @error results [sil_function_multiple_error_results]
convention '%0' not supported in SIL [unsupported_sil_convention]
type %0 is not a legal SIL value type [illegal_sil_type]
SIL box type has wrong number of generic arguments for layout [sil_box_arg_mismatch]
metatypes in SIL must have @thin, @thick, or @objc_metatype attribute [sil_metatype_without_repr]
metatypes in SIL can only be one of @thin, @thick, or @objc_metatype [sil_metatype_multiple_reprs]
Objective-C interoperability is disabled [objc_interop_disabled]
%0 attribute used without importing module %1 [attr_used_without_required_module]
@objc can only be used with members of classes, @objc protocols, and concrete extensions of classes [invalid_objc_decl_context]
only classes (and their extensions), protocols, methods, initializers, properties, and subscript declarations can be declared @objc [invalid_objc_decl]
only classes that inherit from NSObject can be declared @objc [invalid_objc_swift_rooted_class]
inherit from 'NSObject' to silence this error [invalid_objc_swift_root_class_insert_nsobject]
only class members and extensions of classes can be declared @nonobjc [invalid_nonobjc_decl]
only extensions of classes can be declared @nonobjc [invalid_nonobjc_extension]
members of constrained extensions cannot be declared @objc [objc_in_extension_context]
extensions of %select{classes from generic context|generic classes}0 cannot contain '@objc' members [objc_in_generic_extension]
'@objc' %0 in extension of subclass of %1 requires %2 %3 [objc_in_resilient_extension]
operator methods cannot be declared @objc [objc_operator]
@objc protocols must not have operator requirements [objc_operator_proto]
inference of '@objc' for 'dynamic' members is deprecated [objc_inference_swift3_dynamic]
inference of '@objc' for members of Objective-C-derived classes is deprecated [objc_inference_swift3_objc_derived]
add '@objc' to continue exposing an Objective-C entry point (Swift 3 behavior) [objc_inference_swift3_addobjc]
add '@nonobjc' to suppress the Objective-C entry point (Swift 4 behavior) [objc_inference_swift3_addnonobjc]
generic subclasses of '@objc' classes cannot have an explicit '@objc' because they are not directly visible from Objective-C [objc_for_generic_class]
explicit '@objc' on subclass of %0 requires %1 %2 [objc_for_resilient_class]
'@objc' getter for non-'@objc' property [objc_getter_for_nonobjc_property]
'@objc' getter for non-'@objc' subscript [objc_getter_for_nonobjc_subscript]
'@objc' setter for non-'@objc' property [objc_setter_for_nonobjc_property]
'@objc' setter for non-'@objc' subscript [objc_setter_for_nonobjc_subscript]
%select{%0 %1|%1}2 with '@objc' %select{getter|setter}3 depends on deprecated inference of '@objc' [accessor_swift3_objc_inference]
'@objc' enum cannot be generic [objc_enum_generic]
'@objc' %0 must have a simple name [objc_name_req_nullary]
'@objc' subscript cannot have a name; did you mean to put the name on the getter or setter? [objc_name_subscript]
'@objc' deinitializer cannot have a name [objc_name_deinit]
'@objc' %select{initializer|method}0 name provides %select{one argument name|names for %1 arguments}2, but %select{initializer|method}0 has %select{one parameter|%3 parameters}4%select{| (%select{|including }4the error parameter)}5 [objc_name_func_mismatch]
attribute has no effect; cases within an '@objc' enum are already exposed to Objective-C [objc_enum_case_req_name]
'@objc' enum case is not allowed outside of an '@objc' enum [objc_enum_case_req_objc_enum]
'@objc' enum case declaration defines multiple enum cases with the same Objective-C name [objc_enum_case_multi]
'@objc' can only be applied to an extension of a class [objc_extension_not_class]
'@%0' attribute is meaningless on a property that cannot be represented in Objective-C [attribute_meaningless_when_nonobjc]
property cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because its type cannot be represented in Objective-C [objc_invalid_on_var]
subscript cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because its type cannot be represented in Objective-C [objc_invalid_on_subscript]
%0 cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}1 [objc_invalid_on_static_subscript]
%0 cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}1 because it has generic parameters [objc_invalid_with_generic_params]
%0 cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}1 because it has a 'where' clause [objc_invalid_with_generic_requirements]
%0 is not representable in Objective-C, so it cannot be used with '@convention(%1)' [objc_convention_invalid]
when calling this function in Swift 4 or later, you must pass a '()' tuple; did you mean for the input type to be '()'? [paren_void_probably_void]
'Any' is not considered '@objc'; use 'AnyObject' instead [not_objc_empty_protocol_composition]
protocol-constrained type containing protocol %0 cannot be represented in Objective-C [not_objc_protocol]
protocol-constrained type containing class %0 cannot be represented in Objective-C [not_objc_class_constraint]
protocol-constrained type containing 'Error' cannot be represented in Objective-C [not_objc_error_protocol_composition]
empty tuple type cannot be represented in Objective-C [not_objc_empty_tuple]
tuples cannot be represented in Objective-C [not_objc_tuple]
classes not annotated with @objc cannot be represented in Objective-C [not_objc_swift_class]
Swift structs cannot be represented in Objective-C [not_objc_swift_struct]
non-'@objc' enums cannot be represented in Objective-C [not_objc_swift_enum]
generic type parameters cannot be represented in Objective-C [not_objc_generic_type_param]
function types cannot be represented in Objective-C unless their parameters and returns can be [not_objc_function_type_param]
throwing function types cannot be represented in Objective-C [not_objc_function_type_throwing]
inferring '@objc' because the declaration is a member of an '@objc' protocol [objc_inferring_on_objc_protocol_member]
overriding '@objc' %select{property|subscript|initializer|method}0 %1 here [objc_overriding_objc_decl]
satisfying requirement for %0 %1 in protocol %2 [objc_witness_objc_requirement]
use of %0 %1 to satisfy a requirement of protocol %2 depends on '@objc' inference deprecated in Swift 4 [witness_swift3_objc_inference]
unable to resolve type for _opaqueReturnTypeOf attribute [no_opaque_return_type_of]
observing accessors are not allowed to be marked @objc [objc_observing_accessor]
addressors are not allowed to be marked @objc [objc_addressor]
'read' and 'modify' accessors are not allowed to be marked @objc [objc_coroutine_accessor]
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because it has a variadic parameter [objc_invalid_on_func_variadic]
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because inout parameters cannot be represented in Objective-C [objc_invalid_on_func_inout]
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}1 because the type of the parameter %0 cannot be represented in Objective-C [objc_invalid_on_func_param_type]
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because the type of the parameter cannot be represented in Objective-C [objc_invalid_on_func_single_param_type]
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because its result type cannot be represented in Objective-C [objc_invalid_on_func_result_type]
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because Core Foundation types are not classes in Objective-C [objc_invalid_on_foreign_class]
throwing method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because it returns a value of optional type %1; 'nil' indicates failure to Objective-C [objc_invalid_on_throwing_optional_result]
throwing method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because it returns a value of type %1; return 'Void' or a type that bridges to an Objective-C class [objc_invalid_on_throwing_result]
a failable and throwing initializer cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because 'nil' indicates failure to Objective-C [objc_invalid_on_failing_init]
%0 cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}1 because class %2 is only visible via the Objective-C runtime [objc_in_objc_runtime_visible]
Objective-C method has a different selector from the method it overrides (%0 vs. %1) [objc_override_method_selector_mismatch]
Objective-C property has a different name from the property it overrides (%0 vs. %1) [objc_override_property_name_mismatch]
ambiguous inference of Objective-C name for %0 %1 (%2 vs %3) [objc_ambiguous_inference]
%0 (in protocol %1) provides Objective-C name %2 [objc_ambiguous_inference_candidate]
%0 overrides or implements protocol requirements for Objective-C declarations with incompatible error argument conventions [objc_ambiguous_error_convention]
%0 provides an error argument here [objc_ambiguous_error_convention_candidate]
conformance of %0 to %1 can only be written in module %2 [nonlocal_bridged_to_objc]
missing '%select{_forceBridgeFromObjectiveC|_conditionallyBridgeFromObjectiveC}0' [missing_bridging_function]
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 with Objective-C selector %4 conflicts with %select{initializer %3|implicit initializer %3|deinitializer|implicit deinitializer|method %3|getter for %3|subscript getter|setter for %3|subscript setter}2 with the same Objective-C selector [objc_redecl]
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 declared here [objc_declared_here]
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 with Objective-C selector %2 conflicts with previous declaration with the same Objective-C selector [objc_redecl_same]
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 with Objective-C selector %4 conflicts with %select{initializer %3|implicit initializer %3|deinitializer|implicit deinitializer|method %3|getter for %3|subscript getter|setter for %3|subscript setter}2 from superclass %5 with the same Objective-C selector [objc_override_other]
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 defines Objective-C class method %2, which is not permitted by Swift [objc_class_method_not_permitted]
Objective-C method %2 provided by %select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 does not match the requirement's selector (%3) [objc_witness_selector_mismatch]
Objective-C method %4 provided by %select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 conflicts with optional requirement %select{initializer %3|implicit initializer %3|deinitializer|implicit deinitializer|method %3|getter for %3|subscript getter|setter for %3|subscript setter}2 in protocol %5 [objc_optional_requirement_conflict]
rename %select{method|initializer|property|subscript}0 to match requirement %1 [objc_optional_requirement_swift_rename]
non-'@objc' %select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 does not satisfy requirement of '@objc' protocol %2 [witness_non_objc]
non-'@objc' %select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 does not satisfy optional requirement of '@objc' protocol %2 [witness_non_objc_optional]
non-'@objc' %select{property %1|subscript}0 does not satisfy requirement of '@objc' protocol %2 [witness_non_objc_storage]
non-'@objc' %select{property %1|subscript}0 does not satisfy optional requirement of '@objc' protocol %2 [witness_non_objc_storage_optional]
declaration is %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0, and cannot be marked @nonobjc [nonobjc_not_allowed]
%0 cannot be '@_borrowed' if it is '@objc dynamic' [borrowed_with_objc_dynamic]
%0 cannot be '@_borrowed' if it is an @objc protocol requirement [borrowed_on_objc_protocol_requirement]
a declaration cannot be both '@_tranparent' and 'dynamic' [dynamic_with_transparent]
replaced accessor %0's type does not match [dynamic_replacement_accessor_type_mismatch]
replaced accessor for %0 is not marked dynamic [dynamic_replacement_accessor_not_dynamic]
replaced accessor %select{get|set|_read|_modify|willSet|didSet|unsafeAddress|addressWithOwner|addressWithNativeOwner|unsafeMutableAddress|mutableAddressWithOwner|}0 for %1 is not explicitly defined [dynamic_replacement_accessor_not_explicit]
replaced function %0 is not marked dynamic [dynamic_replacement_function_not_dynamic]
replaced function %0 could not be found [dynamic_replacement_function_not_found]
replaced accessor for %0 could not be found [dynamic_replacement_accessor_not_found]
replaced accessor for %0 occurs in multiple places [dynamic_replacement_accessor_ambiguous]
candidate accessor found in module %0 [dynamic_replacement_accessor_ambiguous_candidate]
replaced function %0 of type %1 could not be found [dynamic_replacement_function_of_type_not_found]
found function %0 of type %1 [dynamic_replacement_found_function_of_type]
dynamicReplacement(for:) of %0 is not defined in an extension or at the file level [dynamic_replacement_not_in_extension]
dynamicReplacement(for:) of %0 must not be dynamic itself [dynamic_replacement_must_not_be_dynamic]
%0 is not marked @objc dynamic [dynamic_replacement_replaced_not_objc_dynamic]
%0 is marked @objc dynamic [dynamic_replacement_replacement_not_objc_dynamic]
replaced constructor %0 is marked as convenience [dynamic_replacement_replaced_constructor_is_convenience]
replaced constructor %0 is not marked as convenience [dynamic_replacement_replaced_constructor_is_not_convenience]
type eraser must be a class, struct, or enum [non_nominal_type_eraser]
type eraser %0 must conform to protocol %1 [type_eraser_does_not_conform]
%select{private|fileprivate|internal|public|open}0 type eraser %1 cannot have more restrictive access than protocol %2 (which is %select{private|fileprivate|internal|public|open}3) [type_eraser_not_accessible]
type eraser %0 must have an initializer of the form 'init<T: %1>(erasing: T)' [type_eraser_missing_init]
type eraser %0 has no viable initializer of the form 'init<T: %1>(erasing: T)' [type_eraser_unviable_init]
type eraser declared here [type_eraser_declared_here]
'init(erasing:)' cannot be failable [type_eraser_failable_init]
'init(erasing:)' cannot have unsatisfied requirements when %0 = 'some %1' [type_eraser_init_unsatisfied_requirements]
%select{private|fileprivate|internal|public|open}0 'init(erasing:)' cannot have more restrictive access than protocol %1 (which is %select{private|fileprivate|internal|public|open}2) [type_eraser_init_not_accessible]
%select{getter for |setter for |}0%1 is unavailable%select{ in %3|}2%select{|: %4}4 [availability_decl_unavailable]
%select{getter for |setter for |}0%1 is unavailable%select{ in %3|}2%select{|: %4}4 [availability_decl_unavailable_warn]
%select{getter for |setter for |}0%1 has been %select{renamed to|replaced by}2%select{| instance method| property}3 '%4'%select{|: %5}5 [availability_decl_unavailable_rename]
%select{getter for |setter for |}0%1 has been %select{renamed to|replaced by}2%select{| instance method| property}3 '%4'%select{|: %5}5 [availability_decl_unavailable_rename_warn]
%select{getter for |setter for |}0%1 has been explicitly marked unavailable here [availability_marked_unavailable]
%select{getter for |setter for |}0%1 was introduced in %2 %3 [availability_introduced_in_version]
%select{getter for |setter for |}0%1 was obsoleted in %2 %3 [availability_obsoleted]
%select{getter for |setter for |}0%1 %select{is|%select{is|was}4}2 deprecated%select{| in %3%select{| %5}4}2%select{|: %6}6 [availability_deprecated]
%select{getter for |setter for |}0%1 %select{is|%select{is|was}4}2 deprecated%select{| in %3%select{| %5}4}2: %select{renamed to|replaced by}6%select{| instance method| property}7 '%8' [availability_deprecated_rename]
use '%0' instead [note_deprecated_rename]
declaration cannot be more available than enclosing scope [availability_decl_more_than_enclosing]
enclosing scope here [availability_decl_more_than_enclosing_enclosing_here]
%0 is only available in %1 %2 or newer [availability_decl_only_version_newer]
'some' return types are only available in %0 %1 or newer [availability_opaque_types_only_version_newer]
add 'if #available' version check [availability_guard_with_version_check]
add @available attribute to enclosing %0 [availability_add_attribute]
%select{getter|setter}0 for %1 is only available in %2 %3 or newer [availability_accessor_only_version_newer]
cannot pass as inout because %select{getter|setter}0 for %1 is only available in %2 %3 or newer [availability_inout_accessor_only_version_newer]
condition required for target platform '%0' [availability_query_required_for_platform]
unnecessary check for '%0'; enclosing scope ensures guard will always be true [availability_query_useless_enclosing_scope]
enclosing scope here [availability_query_useless_enclosing_scope_here]
global variable cannot be marked potentially unavailable with '@available' in script mode [availability_global_script_no_potential]
stored properties cannot be marked potentially unavailable with '@available' [availability_stored_property_no_potential]
enum cases with associated values cannot be marked potentially unavailable with '@available' [availability_enum_element_no_potential]
protocol %0 requires %1 to be available in %2 %3 and newer [availability_protocol_requires_version]
protocol requirement here [availability_protocol_requirement_here]
public declarations should have an availability attribute when building with -require-explicit-availability [public_decl_needs_availability]
availability macro cannot be used in inlinable %0 [availability_macro_in_inlinable]
subscripts returning String were obsoleted in Swift 4; explicitly construct a String from subscripted result [availabilty_string_subscript_migration]
call to unavailable %0 %1 from superclass %2 occurs implicitly at the end of this initializer [availability_unavailable_implicit_init]
conformance of %0 to %1 is unavailable%select{ in %3|}2%select{|: %4}4 [conformance_availability_unavailable]
conformance of %0 to %1 has been explicitly marked unavailable here [conformance_availability_marked_unavailable]
conformance of %0 to %1 was introduced in %2 %3 [conformance_availability_introduced_in_version]
conformance of %0 to %1 was obsoleted in %2 %3 [conformance_availability_obsoleted]
conformance of %0 to %1 %select{is|%select{is|was}4}2 deprecated%select{| in %3%select{| %5}4}2%select{|: %6}6 [conformance_availability_deprecated]
conformance of %0 to %1 is only available in %2 %3 or newer [conformance_availability_only_version_newer]
conformance of %0 to %1 is only available in %2 %3 or newer [conformance_availability_only_version_newer_warn]
@discardableResult declared on a function returning %select{Never|Void}0 is unnecessary [discardable_result_on_void_never_function]
'@_fixed_layout' attribute can only be applied to '@usableFromInline' or public declarations, but %0 is %select{private|fileprivate|internal|%error|%error}1 [fixed_layout_attr_on_internal_type]
'@frozen' attribute is now used for fixed-layout structs [fixed_layout_struct]
'@frozen' attribute can only be applied to '@usableFromInline' or public declarations, but %0 is %select{private|fileprivate|internal|%error|%error}1 [frozen_attr_on_internal_type]
'@usableFromInline' attribute can only be applied to internal declarations, but %0 is %select{private|fileprivate|%error|public|open}1 [usable_from_inline_attr_with_explicit_access]
'@inlinable' declaration is already '@usableFromInline' [inlinable_implies_usable_from_inline]
'@usableFromInline' attribute cannot be used in protocols [usable_from_inline_attr_in_protocol]
type %0 cannot be nested inside %select{a '@_transparent' function|an '@inlinable' function|an '@_alwaysEmitIntoClient' function|a default argument value|a property initializer in a '@frozen' type}1 [local_type_in_inlinable_function]
%select{%0|%0 for}4 %1 is %select{private|fileprivate|internal|%error|%error}2 and cannot be referenced from %select{a '@_transparent' function|an '@inlinable' function|an '@_alwaysEmitIntoClient' function|a default argument value|a property initializer in a '@frozen' type}3 [resilience_decl_unavailable]
%select{%0|%0 for}4 %1 is %select{private|fileprivate|internal|%error|%error}2 and should not be referenced from %select{a '@_transparent' function|an '@inlinable' function|an '@_alwaysEmitIntoClient' function|a default argument value|a property initializer in a '@frozen' type}3 [resilience_decl_unavailable_warn]
%0 %1 cannot be used in %select{a '@_transparent' function|an '@inlinable' function|an '@_alwaysEmitIntoClient' function|a default argument value|a property initializer in a '@frozen' type}2 because %select{%3 was imported implementation-only|it is an SPI imported from %3|it is SPI}4 [inlinable_decl_ref_from_hidden_module]
%select{%0|%0 for}2 %1 is not public [resilience_decl_declared_here_public]
%select{%0|%0 for}2 %1 is not '@usableFromInline' or public [resilience_decl_declared_here]
initializer for class %0 is '%select{@_transparent|@inlinable|@_alwaysEmitIntoClient|%error}1' and must delegate to another initializer [class_designated_init_inlinable_resilient]
'%0' attribute cannot be applied to stored properties [attribute_invalid_on_stored_property]
'@inlinable' attribute cannot be applied to 'dynamic' declarations [inlinable_dynamic_not_supported]
'@inlinable' attribute can only be applied to public declarations, but %0 is %select{private|fileprivate|internal|%error|%error}1 [inlinable_decl_not_public]
deinitializer can only be '@inlinable' if the class is '@_fixed_layout' [inlinable_resilient_deinit]
trailing 'where' clause in '_specialize' attribute of non-generic function %0 [specialize_attr_nongeneric_trailing_where]
missing 'where' clause in '_specialize' attribute [specialize_missing_where_clause]
empty 'where' clause in '_specialize' attribute [specialize_empty_where_clause]
only concrete type same-type requirements are supported by '_specialize' attribute [specialize_attr_non_concrete_same_type_req]
only requirements on generic parameters are supported by '_specialize' attribute [specialize_attr_only_generic_param_req]
too few generic parameters are specified in '_specialize' attribute (got %0, but expected %1) [specialize_attr_type_parameter_count_mismatch]
missing constraint for %0 in '_specialize' attribute [specialize_attr_missing_constraint]
only same-type and layout requirements are supported by '_specialize' attribute [specialize_attr_unsupported_kind_of_req]
target function %0 could not be found [specialize_target_function_not_found]
target function %0 of type %1 could not be found [specialize_target_function_of_type_not_found]
found function %0 of type %1 [specialize_found_function_of_type]
value %0 was defined but never used; consider replacing with boolean test [pbd_never_used_stmtcond]
setter argument %0 was never used, but the property was accessed [unused_setter_parameter]
did you mean to use %0 instead of accessing the property's current value? [fixit_for_unused_setter_parameter]
initialization of %select{variable|immutable value}1 %0 was never used; consider replacing with assignment to '_' or removing it [pbd_never_used]
capture %0 was never used [capture_never_used]
%select{variable|immutable value}1 %0 was never used; consider replacing with '_' or removing it [variable_never_used]
immutable value %0 was never used; consider removing it [immutable_value_never_used_but_assigned]
variable %0 was never mutated; consider %select{removing 'var' to make it|changing to 'let'}1 constant [variable_never_mutated]
variable %0 was written to, but never read [variable_never_read]
passing reference to non-'@objc dynamic' property %0 to KVO method %1 may lead to unexpected behavior or runtime trap [observe_keypath_property_not_objc_dynamic]
parameter %0 with default argument '%1' passed to parameter %2, whose default argument is '%3' [default_magic_identifier_mismatch]
did you mean for parameter %0 to default to '%1'? [change_caller_default_to_match_callee]
add parentheses to silence this warning [silence_default_magic_identifier_mismatch]
%0 %1 took %2ms to type-check (limit: %3ms) [debug_long_function_body]
closure took %0ms to type-check (limit: %1ms) [debug_long_closure_body]
expression took %0ms to type-check (limit: %1ms) [debug_long_expression]
'switch' statement body must have at least one 'case' or 'default' block; do you want to add a default case? [empty_switch_stmt]
switch must be exhaustive [non_exhaustive_switch]
the compiler is unable to check that this switch is exhaustive in reasonable time [possibly_non_exhaustive_switch]
do you want to add %select{missing cases|a default clause}0? [missing_several_cases]
handle unknown values using "@unknown default" [missing_unknown_case]
remove '@unknown' to handle remaining values [non_exhaustive_switch_drop_unknown]
add missing case: '%0' [missing_particular_case]
case is already handled by previous patterns; consider removing it [redundant_particular_case]
literal value is already handled by previous pattern; consider removing it [redundant_particular_literal_case]
first occurrence of identical literal pattern is here [redundant_particular_literal_case_here]
switch must be exhaustive [non_exhaustive_switch_warn]
switch covers known cases, but %0 may have additional unknown values%select{|, possibly added in future versions}1 [non_exhaustive_switch_unknown_only]
'NSObject.hashValue' is not overridable; did you mean to override 'NSObject.hash'? [override_nsobject_hashvalue_error]
'NSObject.hash(into:)' is not overridable; did you mean to override 'NSObject.hash'? [override_nsobject_hash_error]
'Hashable.hashValue' is deprecated as a protocol requirement; conform type %0 to 'Hashable' by implementing 'hash(into:)' instead [hashvalue_implementation]
property wrapper type %0 does not contain a non-static property named %1 [property_wrapper_no_value_property]
property wrapper type %0 has multiple non-static properties named %1 [property_wrapper_ambiguous_value_property]
%0 parameter type (%1) must be the same as its 'wrappedValue' property type (%2) or an @autoclosure thereof [property_wrapper_wrong_initial_value_init]
property wrapper initializer %0 cannot be failable [property_wrapper_failable_init]
%select{private|fileprivate|internal|public|open}0 %1 %2 cannot have more restrictive access than its enclosing property wrapper type %3 (which is %select{private|fileprivate|internal|public|open}4) [property_wrapper_type_requirement_not_accessible]
property wrapper type %0 has multiple enclosing-self subscripts %1 [property_wrapper_ambiguous_enclosing_self_subscript]
property wrapper %select{wrapped value|projected value}0 cannot have dynamic Self type [property_wrapper_dynamic_self_type]
property %0, must be static because property wrapper %1 can only be applied to static properties [property_wrapper_var_must_be_static]
property wrapper attribute %0 can only be applied to a property [property_wrapper_attribute_not_on_property]
property wrapper attribute on parameter not yet supported on %0 [property_wrapper_param_not_supported]
property wrapper type %0 declared here [property_wrapper_declared_here]
cannot use property wrapper projection %select{argument|parameter}0 [invalid_projection_argument]
parameter %0 does not have an attached property wrapper [property_wrapper_param_no_wrapper]
property wrapper has arguments in the wrapper attribute [property_wrapper_param_attr_arg]
property wrapper type %0 does not support initialization from a projected value [property_wrapper_no_init_projected_value]
property wrapper applied to parameter must have a nonmutating 'wrappedValue' getter [property_wrapper_param_mutating]
inferred projection type %0 is not a property wrapper [invalid_implicit_property_wrapper]
property wrapper %0 with a mutating getter cannot be composed inside get-only property wrapper %1 [property_wrapper_mutating_get_composed_to_get_only]
property wrappers are not yet supported in top-level code [property_wrapper_top_level]
property wrapper can only be applied to a 'var' [property_wrapper_let]
property wrapper cannot be applied to a computed property [property_wrapper_computed]
property wrappers currently cannot define an 'async' or 'throws' accessor [property_wrapper_effectful]
property %0 with a wrapper cannot also be %select{lazy|@NSCopying|@NSManaged|weak|unowned|unmanaged}1 [property_with_wrapper_conflict_attribute]
property wrapper can only apply to a single variable [property_wrapper_not_single_var]
%select{|non-static|non-static}1 %2 %0 declared inside %select{a protocol|an extension|an enum}1 cannot have a wrapper [property_with_wrapper_in_bad_context]
property %0 with attached wrapper cannot override another property [property_with_wrapper_overrides]
initialize the property wrapper type directly with '(...') on the attribute [property_wrapper_direct_init]
property type %0 does not match that of the 'wrappedValue' property of its wrapper type %1 [property_wrapper_incompatible_property]
property type %0 does not match 'wrappedValue' type %1 [wrapped_value_mismatch]
composed wrapper type %0 does not match former 'wrappedValue' type %1 [composed_property_wrapper_mismatch]
%select{%select{variable|constant}0|property}1 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}3|private or fileprivate}4|cannot be declared %select{in this context|fileprivate|internal|public|open}3}2 because its property wrapper type uses %select{a private|a fileprivate|an internal|%error|%error}5 type [property_wrapper_type_access]
property wrapper type referenced from a '@usableFromInline' %select{%select{variable|constant}0|property}1 must be '@usableFromInline' or public [property_wrapper_type_not_usable_from_inline]
property wrapper's 'wrapperValue' property should be renamed to 'projectedValue'; use of 'wrapperValue' is deprecated [property_wrapper_wrapperValue]
property wrapper's 'init(initialValue:)' should be renamed to 'init(wrappedValue:)'; use of 'init(initialValue:)' is deprecated [property_wrapper_init_initialValue]
could not find projection value property %0 [property_wrapper_projection_value_missing]
missing argument for parameter %0 in property wrapper initializer; add 'wrappedValue' and %0 arguments in '@%1(...)' [property_wrapper_missing_arg_init]
closure containing a declaration cannot be used with result builder %0 [result_builder_decl]
closure containing a declaration cannot be used with result builder %0 [note_result_builder_decl]
closure containing control flow statement cannot be used with result builder %0 [result_builder_control_flow]
closure containing control flow statement cannot be used with result builder %0 [note_result_builder_control_flow]
result builder attribute %0 can only be applied to a parameter, function, or computed property [result_builder_attribute_not_allowed_here]
result builder attribute %0 can only be applied to a %select{subscript|property|constant|variable}1 if it defines a getter [result_builder_attribute_on_storage_without_getter]
result builder attribute %0 can only be applied to a parameter of function type [result_builder_parameter_not_of_function_type]
result builder attribute %0 cannot be applied to an autoclosure parameter [result_builder_parameter_autoclosure]
only one result builder attribute can be attached to a %select{declaration|parameter}0 [result_builder_multiple]
previous result builder specified here [previous_result_builder_here]
result builder attributes cannot have arguments [result_builder_arguments]
cannot use explicit 'return' statement in the body of result builder %0 [result_builder_disabled_by_return]
application of result builder %0 disabled by explicit 'return' statement [result_builder_disabled_by_return_warn]
remove the attribute to explicitly disable the result builder [result_builder_remove_attr]
remove 'return' statements to apply the result builder [result_builder_remove_returns]
ambiguous result builder inferred for %0: %1 or %2 [result_builder_infer_ambig]
add an explicit 'return' statement to not use a result builder [result_builder_infer_add_return]
apply result builder %0 (inferred from %select{protocol|dynamic replacement of}1 %2) [result_builder_infer_pick_specific]
result builder %0 does not implement 'buildLimitedAvailability'; this code may crash on earlier versions of the OS [result_builder_missing_limited_availability]
result builder must provide at least one static 'buildBlock' method [result_builder_static_buildblock]
did you mean to make instance method 'buildBlock' static? [result_builder_non_static_buildblock]
enum case 'buildBlock' cannot be used to satisfy the result builder requirement [result_builder_buildblock_enum_case]
potential match 'buildBlock' is not a static method [result_builder_buildblock_not_static_method]
add 'buildOptional(_:)' to the result builder %0 to add support for 'if' statements without an 'else' [result_builder_missing_build_optional]
add 'buildEither(first:)' and 'buildEither(second:)' to the result builder %0 to add support for 'if'-'else' and 'switch' [result_builder_missing_build_either]
add 'buildArray(_:)' to the result builder %0 to add support for 'for'..'in' loops [result_builder_missing_build_array]
add 'buildLimitedAvailability(_:)' to the result builder %0 to erase type information for less-available types [result_builder_missing_build_limited_availability]
expression shuffles the elements of this tuple; this behavior is deprecated [warn_reordering_tuple_shuffle_deprecated]
marker protocol %0 cannot have any requirements [marker_protocol_requirement]
marker protocol %0 cannot inherit non-marker protocol %1 [marker_protocol_inherit_nonmarker]
marker protocol %0 cannot be used in a conditional cast [marker_protocol_cast]
conditional conformance to non-marker protocol %0 cannot depend on conformance of %1 to non-marker protocol %2 [marker_protocol_conditional_conformance]
'@%0' attribute used without importing module %1 [differentiable_programming_attr_used_without_required_module]
argument must be a bool literal [oslog_arg_must_be_bool_literal]
argument must be an integer literal [oslog_arg_must_be_integer_literal]
argument must be a string literal [oslog_arg_must_be_string_literal]
argument must be a floating-point literal [oslog_arg_must_be_float_literal]
argument must be a <Type>.self [oslog_arg_must_be_metatype_literal]
argument must be a closure [oslog_arg_must_be_closure]
argument must be an expression with only literals [argument_must_be_constant]
argument must be a string interpolation [oslog_message_must_be_string_interpolation]
argument must be a case of enum %0 [oslog_arg_must_be_enum_case]
argument must be a static method or property of %0 [oslog_arg_must_be_type_member_access]
ordering argument must be a static method or property of %0 [atomics_ordering_must_be_constant]
non-constant range: argument must be an integer literal [swiftui_arg_must_be_integer_literal]
non-constant range: not an integer range [swiftui_arg_must_be_integer_range]
access note for %0 adds %select{attribute|modifier}1 '%2' to this %3 [attr_added_by_access_note]
add %select{attribute|modifier}0 explicitly to silence this warning [fixit_attr_added_by_access_note]
access note for %0 removes %select{attribute|modifier}1 '%2' from this %3 [attr_removed_by_access_note]
remove %select{attribute|modifier}0 explicitly to silence this warning [fixit_attr_removed_by_access_note]
access note for %0 changes the '@objc' name of this %1 to %2 [attr_objc_name_changed_by_access_note]
change '@objc' name in source code explicitly to silence this warning [fixit_attr_objc_name_changed_by_access_note]
access note for %0 changes the '@objc' name of this %1 to %2, but source code specifies %3; the access note will be ignored [attr_objc_name_conflicts_with_access_note]
%0 [warning_from_clang]
%0 [error_from_clang]
%0 [note_from_clang]
%0 [remark_from_clang]
could not build %select{C|Objective-C}0 module '%1' [clang_cannot_build_module]
bridging header '%0' does not exist [bridging_header_missing]
failed to import bridging header '%0' [bridging_header_error]
failed to serialize bridging header; target may not be debuggable outside of its original project [could_not_rewrite_bridging_header]
failed to emit precompiled header '%0' for bridging header '%1' [bridging_header_pch_error]
failed to emit precompiled module '%0' for module map '%1' [emit_pcm_error]
failed to dump precompiled module '%0' [dump_pcm_error]
too %select{few|many}0 parameters in swift_name attribute (expected %1; got %2) [invalid_swift_name_method]
while importing '%0' [note_while_importing]
swift_name cannot be used to define %select{static member|init}0 on protocol [swift_name_protocol_static]
swift_name cannot be used on a non-prototyped function declaration [swift_name_no_prototype]
inconsistent Swift name for Objective-C %select{method|property}0 '%1' in '%2' (%3 in '%4' vs. %5 in '%6') [inconsistent_swift_name]
imported declaration '%0' could not be mapped to '%1' [unresolvable_clang_decl]
please report this issue to the owners of '%0' [unresolvable_clang_decl_is_a_framework_bug]
Swift attribute '%0' does not start with '@' [clang_swift_attr_without_at]
implicit import of bridging header '%0' via module %1 is deprecated and will be removed in a later version of Swift [implicit_bridging_header_imported_from_module]
this attribute for global actor '%0' is invalid; the declaration already has attribute for global actor '%1' [import_multiple_mainactor_attr]
module map file '%0' not found [module_map_not_found]
unable to find module '%0' for implicit conversion function '%0.%1' [bridging_module_missing]
unable to find implicit conversion function '%0.%1' [bridging_function_missing]
multiple definitions of implicit conversion function '%0.%1' [bridging_function_overloaded]
definition of implicit conversion function '%0.%1' is not a function [bridging_function_not_function]
definition of implicit conversion function '%0.%1' is not of the correct type [bridging_function_not_correct_type]
cannot find definition of '_ObjectiveCBridgeable' protocol [bridging_objcbridgeable_missing]
broken definition of '_ObjectiveCBridgeable' protocol: missing %0 [bridging_objcbridgeable_broken]
multiple definitions of symbol '%0' [sil_function_redefinition]
INTERNAL ERROR: invalid use of builtin: %0 [invalid_sil_builtin]
could not find Objective-C bridge type for type %0; did you forget to import Foundation? [could_not_find_bridge_type]
could not find 'pointee' property of pointer type %0 [could_not_find_pointer_pointee_property]
inout writeback to computed property %0 occurs in multiple arguments to call, introducing invalid aliasing [writeback_overlap_property]
inout writeback through subscript occurs in multiple arguments to call, introducing invalid aliasing [writeback_overlap_subscript]
concurrent writeback occurred here [writebackoverlap_note]
inout arguments are not allowed to alias each other [inout_argument_alias]
previous aliasing argument [previous_inout_alias]
protocol conformance emission for generator coroutines is unimplemented [unimplemented_generator_witnesses]
overlapping accesses to %0, but %select{initialization|read|modification|deinitialization}1 requires exclusive access; %select{consider copying to a local variable|consider calling MutableCollection.swapAt(_:_:)}2 [exclusivity_access_required]
overlapping accesses, but %select{initialization|read|modification|deinitialization}0 requires exclusive access; consider copying to a local variable [exclusivity_access_required_unknown_decl]
conflicting access is here [exclusivity_conflicting_access]
C function pointer signature %0 is not compatible with expected type %1 [unsupported_c_function_pointer_conversion]
a C function pointer cannot be formed from a %select{local function|closure}0 that captures %select{context|generic parameters|dynamic Self type}1 [c_function_pointer_from_function_with_context]
the type ObjectiveC.Selector is malformed [objc_selector_malformed]
closure captures %0 before it is declared [capture_before_declaration]
captured value declared here [captured_value_declared_here]
escaping %select{local function|closure|autoclosure}0 captures 'inout' parameter %1 [escaping_inout_capture]
parameter %0 is declared 'inout' [inout_param_defined_here]
escaping %select{local function|closure|autoclosure}0 captures mutating 'self' parameter [escaping_mutable_self_capture]
escaping %select{local function|closure|autoclosure}0 captures non-escaping parameter %1 [escaping_noescape_param_capture]
parameter %0 is implicitly non-escaping [noescape_param_defined_here]
escaping %select{local function|closure|autoclosure}0 captures non-escaping value [escaping_noescape_var_capture]
captured here [value_captured_here]
pass a copy of %0 [copy_inout_captured_by_autoclosure]
pass a copy of 'self' [copy_self_captured_by_autoclosure]
captured indirectly by this call [value_captured_transitively]
passing a %select{|closure which captures a }1non-escaping function parameter %0 to a call to a non-escaping function parameter can allow re-entrant modification of a variable [err_noescape_param_call]
%select{variable|constant}0 defined here [variable_defined_here]
%select{variable|constant}1 '%0' used before being initialized [variable_used_before_initialized]
%select{variable|constant}1 '%0' passed by reference before being initialized [variable_inout_before_initialized]
%select{variable|constant}1 '%0' captured by a closure before being initialized [variable_closure_use_uninit]
%select{variable|constant}1 '%0' used in defer before being initialized [variable_defer_use_uninit]
'self' captured by a closure before all members were initialized [self_closure_use_uninit]
address of %select{variable|constant}1 '%0' taken before it is initialized [variable_addrtaken_before_initialized]
property '%0' not initialized at super.init call [ivar_not_initialized_at_superinit]
property '%0' not initialized at implicitly generated super.init call [ivar_not_initialized_at_implicit_superinit]
'self' used in %select{method call|property access}1 %0 before %select{all stored properties are initialized|'super.init' call|'self.init' call}2 [self_use_before_fully_init]
'self' used before all stored properties are initialized [use_of_self_before_fully_init]
'%0' not initialized [stored_property_not_initialized]
'%select{super|self}0.init' called multiple times in initializer [selfinit_multiple_times]
'%select{super|self}0.init' isn't called on all paths before returning from initializer [superselfinit_not_called_before_return]
'self' used before 'super.init' call [self_before_superinit]
'self' used before 'self.init' call [self_before_selfinit]
'self' used before 'self.init' call or assignment to 'self' [self_before_selfinit_value_type]
'self' used inside 'catch' block reachable from %select{super|self}0.init call [self_inside_catch_superselfinit]
return from initializer without initializing all stored properties [return_from_init_without_initing_stored_properties]
%select{variable|constant}1 '%0' used by function definition before being initialized [variable_function_use_uninit]
struct '%0' must be completely initialized before a member is stored to [struct_not_fully_initialized]
immutable value '%0' may only be initialized once [immutable_property_already_initialized]
initial value already provided in 'let' declaration [initial_value_provided_in_let_decl]
cannot mutate %select{property %0|subscript}1 of immutable value '%2' [mutation_of_property_of_immutable_value]
mutating accessor for %select{property %0|subscript}1 may not be used on immutable value '%2' [using_mutating_accessor_on_immutable_value]
mutating %select{method|operator}1 %0 may not be used on immutable value '%2' [mutating_method_called_on_immutable_value]
immutable value '%0' must not be passed inout [immutable_value_passed_inout]
immutable value '%0' must not be assigned to [assignment_to_immutable_value]
initializer for struct %0 must use "self.init(...)" or "self = ..."%select{| on all paths}1 because %select{it is not in module %2|the struct was imported from C}3 [designated_init_in_cross_module_extension]
use "self.init()" to initialize the struct with zero values [designated_init_c_struct_fix]
missing return in a %select{function|closure}1 expected to return %0 [missing_return]
missing return in a %select{function|closure}1 expected to return %0; did you mean to return the last expression? [missing_return_last_expr]
%select{function|closure}1 with uninhabited return type %0 is missing call to another never-returning function on all paths [missing_never_call]
'guard' body must not fall through, consider using a 'return' or 'throw' to exit the scope [guard_body_must_not_fallthrough]
will never be executed [unreachable_code]
'%0' is uninhabited, so this function body can never be executed [unreachable_code_uninhabited_param_note]
condition always evaluates to %select{false|true}0 [unreachable_code_branch]
a call to a never-returning function [call_to_noreturn_note]
code after '%select{return|break|continue|throw}0' will never be executed [unreachable_code_after_stmt]
%select{case|default}0 will never be executed [unreachable_case]
switch condition evaluates to a constant [switch_on_a_constant]
will never be executed [unreachable_code_note]
function call causes an infinite recursion [warn_infinite_recursive_call]
weak reference will always be nil because the referenced object is deallocated here [warn_dead_weak_store]
inlining 'transparent' functions forms circular loop [circular_transparent]
while inlining here [note_while_inlining]
Cannot pre-specialize %0 [cannot_prespecialize]
Pre-specialized function %0 missing in SwiftOnoneSupport module [missing_prespecialization]
integer overflows when converted from %0 to %1 [integer_conversion_overflow]
integer overflows when converted from %select{unsigned|signed}0 %1 to %select{unsigned|signed}2 %3 [integer_conversion_overflow_builtin_types]
integer overflows when converted from %0 to %1 [integer_conversion_overflow_warn]
negative integer '%1' overflows when stored into unsigned type %0 [negative_integer_literal_overflow_unsigned]
integer literal '%1' overflows when stored into %0 [integer_literal_overflow]
integer literal '%2' overflows when stored into %select{unsigned|signed}0 %1 [integer_literal_overflow_builtin_types]
integer literal overflows when stored into %0 [integer_literal_overflow_warn]
arithmetic operation '%0 %1 %2' (on type %3) results in an overflow [arithmetic_operation_overflow]
arithmetic operation '%0 %1 %2' (on %select{unsigned|signed}3 %4-bit integer type) results in an overflow [arithmetic_operation_overflow_generic_type]
division '%0 %1 %2' results in an overflow [division_overflow]
division by zero [division_by_zero]
assumed non-negative value '%0' is negative [wrong_non_negative_assumption]
shift amount is greater than or equal to type size in bits [shifting_all_significant_bits]
static report error [static_report_error]
#assert condition not constant [pound_assert_condition_not_constant]
%0 [pound_assert_failure]
cannot evaluate expression as constant here [constexpr_unknown_reason_default]
cannot constant evaluate operation%select{| used by this call}0 [constexpr_unevaluable_operation]
exceeded instruction limit: %0 when evaluating the expression at compile time [constexpr_too_many_instructions]
limit exceeded %select{here|during this call}0 [constexpr_limit_exceeding_instruction]
control-flow loop found during evaluation  [constexpr_loop_found_note]
found loop %select{here|inside this call}0 [constexpr_loop_instruction]
integer overflow detected [constexpr_overflow]
operation%select{| performed during this call}0 overflows [constexpr_overflow_operation]
%0 [constexpr_trap]
operation%select{| performed during this call}0 traps [constexpr_trap_operation]
operation with invalid operands encountered during evaluation [constexpr_invalid_operand_seen]
operation with invalid operands encountered %select{here|during this call}0 [constexpr_operand_invalid_here]
cannot evaluate top-level value as constant here [constexpr_value_unknown_at_top_level]
top-level value has multiple assignments [constexpr_multiple_writers_found_at_top_level]
encountered operation not supported by the evaluator: %0 [constexpr_unsupported_instruction_found]
operation%select{| used by this call is}0 not supported by the evaluator [constexpr_unsupported_instruction_found_here]
encountered call to '%0' whose body is not available. Imported functions must be marked '@inlinable' to constant evaluate [constexpr_found_callee_with_no_body]
%select{|calls a }0function whose body is not available [constexpr_callee_with_no_body]
encountered call to '%0' where the %1 argument is not a constant [constexpr_found_call_with_unknown_arg]
%select{|makes a }0function call with non-constant arguments [constexpr_call_with_unknown_arg]
encountered use of a variable not tracked by the evaluator [constexpr_untracked_sil_value_use_found]
untracked variable used %select{here|by this call}0 [constexpr_untracked_sil_value_used_here]
encountered an unevaluable cast [constexpr_unevaluable_cast_found]
unevaluable cast encountered %select{here|by this call}0 [constexpr_unevaluable_cast_used_here]
encountered unresolvable witness method call: '%0' [constexpr_unresolvable_witness_call]
cannot find witness table entry %select{for this call|for a witness-method invoked during this call}0 [constexpr_no_witness_table_entry]
cannot find concrete conformance %select{for this call|for a witness-method invoked during this call}0 [constexpr_witness_call_with_no_conformance]
branch depends on non-constant value produced by an unevaluated instructions [constexpr_unknown_control_flow_due_to_skip]
result of an unevaluated instruction is not a constant [constexpr_returned_by_unevaluated_instruction]
value mutable by an unevaluated instruction is not a constant [constexpr_mutated_by_unevaluated_instruction]
not constant evaluable [not_constant_evaluable]
imported constant evaluable function '%0' must be annotated '@_optimize(none)' [constexpr_imported_func_not_onone]
Automatic differentiation internal error: the Swift module is not imported [autodiff_internal_swift_not_imported]
Automatic differentiation requires the '_Differentiation' module to be imported [autodiff_differentiation_module_not_imported]
conversion to '@differentiable(_linear)' function type is not yet supported [autodiff_conversion_to_linear_function_not_supported]
function is not differentiable [autodiff_function_not_differentiable_error]
expression is not differentiable [autodiff_expression_not_differentiable_error]
expression is not differentiable [autodiff_expression_not_differentiable_note]
when differentiating this function call [autodiff_when_differentiating_function_call]
when differentiating this function definition [autodiff_when_differentiating_function_definition]
differentiability required by the corresponding protocol requirement here [autodiff_implicitly_inherited_differentiable_attr_here]
forward-mode differentiation does not yet support control flow [autodiff_jvp_control_flow_not_supported]
cannot differentiate unsupported control flow [autodiff_control_flow_not_supported]
missing return for differentiation [autodiff_missing_return]
cannot differentiate functions that have not been marked '@differentiable' and that are defined in other files [autodiff_external_nondifferentiable_function]
opaque non-'@differentiable' function is not differentiable [autodiff_opaque_function_not_differentiable]
differentiated functions in %select{'@inlinable' functions|default arguments}0 must be marked '@differentiable' or have a public '@derivative'%select{|; this is not possible with a closure, make a top-level function instead}1 [autodiff_private_derivative_from_fragile]
cannot differentiate with respect to a '@noDerivative' parameter [autodiff_function_noderivative_parameter_not_differentiable]
function call is not differentiable because generic requirements are not met: '%0' [autodiff_function_assoc_func_unmet_requirements]
cannot differentiate through a non-differentiable argument; do you want to use 'withoutDerivative(at:)'? [autodiff_nondifferentiable_argument]
cannot differentiate through a non-differentiable result; do you want to use 'withoutDerivative(at:)'? [autodiff_nondifferentiable_result]
member is not differentiable because the corresponding protocol requirement is not '@differentiable' [autodiff_protocol_member_not_differentiable]
member is not differentiable because the corresponding class member is not '@differentiable' [autodiff_class_member_not_differentiable]
member is differentiable only with respect to a smaller subset of arguments [autodiff_member_subset_indices_not_differentiable]
cannot convert a direct method reference to a '@differentiable' function; use an explicit closure instead [autodiff_cannot_param_subset_thunk_partially_applied_orig_fn]
cannot differentiate through multiple results [autodiff_cannot_differentiate_through_multiple_results]
cannot differentiate through 'inout' arguments [autodiff_cannot_differentiate_through_inout_arguments]
differentiating enum values is not yet supported [autodiff_enums_unsupported]
cannot differentiate access to property '%0.%1' because '%0' does not conform to 'Differentiable' [autodiff_stored_property_parent_not_differentiable]
cannot differentiate access to property '%0.%1' because property type %2 does not conform to 'Differentiable' [autodiff_stored_property_not_differentiable]
cannot differentiate access to property '%0.%1' because '%0.TangentVector' is not a struct [autodiff_stored_property_tangent_not_struct]
cannot differentiate access to property '%0.%1' because '%0.TangentVector' does not have a stored property named '%1' [autodiff_stored_property_no_corresponding_tangent]
cannot differentiate access to property '%0.%1' because '%0.TangentVector.%1' does not have expected type %2 [autodiff_tangent_property_wrong_type]
cannot differentiate access to property '%0.%1' because '%0.TangentVector.%1' is not a stored property [autodiff_tangent_property_not_stored]
differentiation of coroutine calls is not yet supported [autodiff_coroutines_not_supported]
cannot differentiate writes to global variables [autodiff_cannot_differentiate_writes_to_global_variables]
cannot differentiate writes to mutable captures [autodiff_cannot_differentiate_writes_to_mutable_captures]
addressof only works with purely physical lvalues; use 'withUnsafePointer' or 'withUnsafeBytes' unless you're implementing 'withUnsafePointer' or 'withUnsafeBytes' [non_physical_addressof]
addressof only works with borrowable in-memory rvalues; use 'withUnsafePointer' or 'withUnsafeBytes' unless you're implementing 'withUnsafePointer' or 'withUnsafeBytes' [non_borrowed_indirect_addressof]
%0 [opt_remark_passed]
%0 [opt_remark_missed]
%0 [opt_remark_note]
invalid%select{| implicit}2 conversion: '%0' overflows %1 [float_to_int_overflow]
negative literal '%0' cannot be converted to %select{|unsigned }2%1 [negative_fp_literal_overflow_unsigned]
'%0' overflows to %select{|-}2inf during conversion to %1 [warning_float_trunc_overflow]
'%0' underflows and loses precision during conversion to %1 [warning_float_trunc_underflow]
'%0' loses precision during conversion to %1 [warning_float_trunc_hex_inexact]
'%0' overflows to %select{|-}1inf because its magnitude exceeds the limits of a float literal [warning_float_overflows_maxbuiltin]
'%1' is not exactly representable as %0; it becomes '%2' [warning_int_to_fp_inexact]
accessor must yield before returning [return_before_yield]
accessor must not yield more than once [multiple_yields]
previous yield was here [previous_yield]
accessor must yield on all paths before returning [possible_return_before_yield]
missing yield when the condition is %select{false|true}0 [branch_doesnt_yield]
missing yield in the %0 case [named_case_doesnt_yield]
missing yield in %select{this|the nil|the non-nil}0 case [case_doesnt_yield]
missing yield in the %0 case [switch_value_case_doesnt_yield]
missing yield when error is %select{not |}0thrown [try_branch_doesnt_yield]
%0 [oslog_constant_eval_trap]
interpolated expression and arguments are too complex [oslog_too_many_instructions]
invalid log message; extending types defined in the os module is not supported [oslog_invalid_log_message]
'%0' failed evaluation [oslog_const_evaluable_fun_error]
'OSLogMessage' instance passed to the log call is not a constant [oslog_non_constant_message]
'OSLogInterpolation' instance passed to 'OSLogMessage.init' is not a constant [oslog_non_constant_interpolation]
'OSLogInterpolation.%0' is not a constant [oslog_property_not_constant]
string interpolation cannot be used in this context; if you are calling an os_log function, try a different overload [oslog_message_alive_after_opts]
'OSLogMessage' must be  created from a string interpolation or string literal [oslog_message_explicitly_created]
os log call will never be executed and may have undiagnosed errors [oslog_call_in_unreachable_code]
globalStringTablePointer builtin must be used only on string literals [global_string_pointer_on_non_constant]
Argument of type %0 can not be passed as an argument to a Polymorphic builtin. Polymorphic builtins can only be passed arguments that are trivial builtin typed [polymorphic_builtin_passed_non_trivial_non_builtin_type]
Static overload %0 does not exist for polymorphic builtin '%1'. Static overload implied by passing argument of type %2 [polymorphic_builtin_passed_type_without_static_overload]
Can not promote value from heap to stack due to value escaping [box_to_stack_cannot_promote_box_to_stack_due_to_escape_alloc]
value escapes here [box_to_stack_cannot_promote_box_to_stack_due_to_escape_location]
'@_semantics' function calls non-'@_semantics' function with nested '@_semantics' calls [semantic_function_improper_nesting]
'%0' mutated after capture by concurrent closure [capturepromotion_concurrentcapture_mutation]
variable captured by concurrent closure [capturepromotion_concurrentcapture_closure_here]
capturing use [capturepromotion_concurrentcapture_capturinguse_here]
variable defined here [capturepromotion_variable_defined_here]
error loading LLVM target for triple '%0': %1 [no_llvm_target]
cannot initialize code generation passes for target [error_codegen_init_fail]
unimplemented IR generation feature %0 [irgen_unimplemented]
IR generation failure: %0 [irgen_failure]
unable to find type '%0' to verify [type_to_verify_not_found]
type to verify '%0' is ambiguous [type_to_verify_ambiguous]
type to verify '%0' has unbound generic parameters [type_to_verify_dependent]
too few output file names specified [too_few_output_filenames]
no swift input files for multi-threaded compilation [no_input_files_for_mt]
@_alignment is not supported on types with dynamic layout [alignment_dynamic_type_layout_unsupported]
@_alignment cannot decrease alignment below natural alignment of %0 [alignment_less_than_natural]
@_alignment cannot increase alignment above maximum alignment of %0 [alignment_more_than_maximum]
no such SDK: '%0' [warning_no_such_sdk]
no arguments provided to '-frontend' [error_no_frontend_args]
no such file or directory: '%0' [error_no_such_file_or_directory]
unsupported target OS: '%0' [error_unsupported_target_os]
unsupported target architecture: '%0' [error_unsupported_target_arch]
unknown library level '%0', expected one of 'api', 'spi' or 'other' [error_unknown_library_level]
unsupported option '%0' for target '%1' [error_unsupported_opt_for_target]
inferring simulator environment for target '%0'; use '-target %1' instead [warning_inferred_simulator_target]
argument '%0' is not allowed with '%1' [error_argument_not_allowed_with]
argument '%0' is not supported with optimization [warning_argument_not_supported_with_optimization]
option '%0' requires a sanitizer to be enabled. Use -sanitize= to enable a sanitizer [error_option_requires_sanitizer]
option '%0' has no effect when '%1' sanitizer is disabled. Use -sanitize=%1 to enable the sanitizer [warning_option_requires_specific_sanitizer]
option '%0' is missing a required argument (%1) [error_option_missing_required_argument]
cannot open file '%0' (%1) [cannot_open_file]
cannot open file '%0' for diagnostics emission (%1) [cannot_open_serialized_file]
error opening input file '%0' (%1) [error_open_input_file]
clang importer creation failed [error_clang_importer_create_fail]
missing argument value for '%0', expected %1 argument(s) [error_missing_arg_value]
unknown argument: '%0' [error_unknown_arg]
invalid value '%1' in '%0' [error_invalid_arg_value]
unsupported locale code; supported locale codes are: '%0' [warning_invalid_locale_code]
specified localization directory '%0' does not exist, translation is disabled [warning_locale_path_not_found]
cannot find translations for '%0' at '%1': no such file [warning_cannot_find_locale_file]
ignoring -num-threads argument; cannot multithread batch mode [warning_cannot_multithread_batch_mode]
unsupported argument '%1' to option '%0' [error_unsupported_option_argument]
could not load the swift standard library [error_immediate_mode_missing_stdlib]
could not load %select{shared library|framework}0 '%1' [error_immediate_mode_missing_library]
immediate mode is incompatible with -primary-file [error_immediate_mode_primary_file]
no frontend action was selected [error_missing_frontend_action]
invalid source location string '%0' [error_invalid_source_location_str]
-dump-scope-maps argument must be 'expanded' or a list of source locations [error_no_source_location_scope_map]
valid arguments to '-swift-version' are %0 [note_valid_swift_versions]
this mode does not support emitting dependency files [error_mode_cannot_emit_dependencies]
this mode does not support emitting reference dependency files [error_mode_cannot_emit_reference_dependencies]
this mode does not support emitting Objective-C headers [error_mode_cannot_emit_header]
this mode does not support emitting the loaded module trace [error_mode_cannot_emit_loaded_module_trace]
this mode does not support emitting modules [error_mode_cannot_emit_module]
this mode does not support emitting module documentation files [error_mode_cannot_emit_module_doc]
this mode does not support emitting module source info files [error_mode_cannot_emit_module_source_info]
this mode does not support emitting module interface files [error_mode_cannot_emit_interface]
this mode does not support emitting module summary files [error_mode_cannot_emit_module_summary]
this mode does not support emitting symbol graph files [error_mode_cannot_emit_symbol_graph]
the -experimental-skip-*-function-bodies* flags do not support emitting IR [cannot_emit_ir_skipping_function_bodies]
ignoring -emit-reference-dependencies (requires -primary-file) [emit_reference_dependencies_without_primary_file]
unable to perform implicit import of "_Concurrency" module: no such module found [warn_implicit_concurrency_import_failed]
-module-name is required [error_module_name_required]
module name "%0" is not a valid identifier%select{|; use -module-name flag to specify an alternate name}1 [error_bad_module_name]
module name "%0" is reserved for the standard library%select{|; use -module-name flag to specify an alternate name}1 [error_stdlib_module_name]
unable to load standard library for target '%0' [error_stdlib_not_found]
unable to load supplementary output file map '%0': %1 [error_unable_to_load_supplementary_output_file_map]
supplementary output file map '%0' is missing an entry for '%1' (this likely indicates a compiler issue; please submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the project) [error_missing_entry_in_supplementary_output_file_map]
REPL mode requires no input files [error_repl_requires_no_input_files]
this mode requires a single input file [error_mode_requires_one_input_file]
this mode requires at least one input file [error_mode_requires_an_input_file]
this mode requires .sil for primary-file and only .sib for other inputs [error_mode_requires_one_sil_multi_sib]
an %0 filename was not specified for a mode which requires an %0 filename [error_no_output_filename_specified]
the implicit output file '%0' is a directory; explicitly specify a filename using %1 [error_implicit_output_file_is_directory]
if any %0 files are specified, they all must be [error_if_any_output_files_are_specified_they_all_must_be]
primary file '%0' was not found in file list '%1' [error_primary_file_not_found]
cannot have input files with file list [error_cannot_have_input_files_with_file_list]
cannot have primary input files with primary file list [error_cannot_have_primary_files_with_primary_file_list]
cannot have '%0' with '%1' [error_cannot_have_supplementary_outputs]
duplicate input file '%0' [error_duplicate_input_file]
variables currently must have an initial value when entered at the top level of the REPL [repl_must_be_initialized]
fatal error encountered while in -verify mode [verify_encountered_fatal]
error parsing input file '%0' (%1) [error_parse_input_file]
writing index unit file: %0 [error_write_index_unit]
creating index directory: %0 [error_create_index_dir]
writing index record file: %0 [error_write_index_record]
failed file status check: %0 [error_index_failed_status_check]
index output filenames do not match input source files [error_index_inputs_more_than_outputs]
-index-unit-output-path is ignored without -index-store-path [warn_index_unit_output_path_without_index_store]
wrong number of '%0' arguments (expected %1, got %2) [error_wrong_number_of_arguments]
file ranges don't support multiple input files [error_formatting_multiple_file_ranges]
file range is invalid [error_formatting_invalid_range]
compiler was not built with support for collecting statistics [stats_disabled]
truncating %select{current|compatibility}0 version '%1' in TBD file to fit in 32-bit space used by old mach-o format [tbd_warn_truncating_version]
invalid dynamic library %select{current|compatibility}0 version '%1' [tbd_err_invalid_version]
TBD generation is only supported when the whole module can be seen [tbd_only_supported_in_whole_module]
Test-Based InstallAPI (TBD) is not support with cross-module-optimization [tbd_not_supported_with_cmo]
only one of -emit-ldadd-cfile-path and -module-installname-map-file can be specified;the c file won't be generated [linker_directives_choice_confusion]
cannot open previous install name map from %0 [previous_installname_map_missing]
previous install name map from %0 is malformed [previous_installname_map_corrupted]
cannot open explicit Swift module map from %0 [explicit_swift_module_map_missing]
explicit Swift module map from %0 is malformed [explicit_swift_module_map_corrupted]
cannot open Swift placeholder dependency module map from %0 [placeholder_dependency_module_map_missing]
Swift placeholder dependency module map from %0 is malformed [placeholder_dependency_module_map_corrupted]
cannot open batch dependencies scan input file from %0 [batch_scan_input_file_missing]
batch dependencies scan input file from %0 is malformed [batch_scan_input_file_corrupted]
default previous install name for %0 is %1 [default_previous_install_name]
previous install name for %0 in %1 is %2 [platform_previous_install_name]
unkown platform name %0 [unknown_platform_name]
cannot find Swift module with name %0 [unknown_swift_module_name]
cannot find previous install name for module %0 in %1 [cannot_find_install_name]
symbol '%0' (%1) is in TBD file, but not in generated IR [symbol_in_tbd_not_in_ir]
symbol '%0' (%1) is in generated IR file, but not in TBD file [symbol_in_ir_not_in_tbd]
please submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the project, and add '-Xfrontend -validate-tbd-against-ir=none' to squash the errors [tbd_validation_failure]
invalid argument '-D%0'; did you provide a redundant '-D' in your build settings? [redundant_prefix_compilation_flag]
conditional compilation flags must be valid Swift identifiers (rather than '%0') [invalid_conditional_compilation_flag]
conditional compilation flags do not have values in Swift; they are either present or absent (rather than '%0') [cannot_assign_value_to_conditional_compilation_flag]
framework search path ends in ".framework"; add directory containing framework instead: %0 [framework_search_path_includes_framework_extension]
%0 in '%1' [error_optimization_remark_pattern]
values for '-debug-prefix-map' must be in the format 'original=remapped', but '%0' was provided [error_invalid_debug_prefix_map]
values for '-coverage-prefix-map' must be in the format 'original=remapped', but '%0' was provided [error_invalid_coverage_prefix_map]
invalid virtual overlay file '%0' [invalid_vfs_overlay_file]
scoped imports are not yet supported in module interfaces [module_interface_scoped_import_unsupported]
module interfaces are only supported with Swift language version 5 or later (currently using -swift-version %0) [warn_unsupported_module_interface_swift_version]
module interfaces are only supported with -enable-library-evolution [warn_unsupported_module_interface_library_evolution]
error extracting version from module interface [error_extracting_version_from_module_interface]
unsupported version of module interface '%0': '%1' [unsupported_version_of_module_interface]
failed to open explicit Swift module: %0 [error_opening_explicit_module_file]
error extracting flags from module interface [error_extracting_flags_from_module_interface]
public %0 %1 shadows module %2, which may cause failures when importing %3 or its clients in some configurations; please rename either the %0 %1 or the module %2, or see https://bugs.swift.org/browse/SR-14195 for workarounds [warning_module_shadowing_may_break_module_interface]
rebuilding module '%0' from interface '%1' [rebuilding_module_from_interface]
SDK build version is '%0'; prebuilt modules were built using SDK build version: '%1' [sdk_version_pbm_version]
%select{compiled|cached|forwarding|prebuilt}0 module is out of date: '%1' [out_of_date_module_here]
dependency is out of date: '%0' [module_interface_dependency_out_of_date]
dependency is missing: '%0' [module_interface_dependency_missing]
unable to load compiled module '%0' [compiled_module_invalid]
unable to load compiled module '%0': %1 [compiled_module_invalid_reason]
unknown value for SWIFT_FORCE_MODULE_LOADING variable: '%0' [unknown_forced_module_loading_mode]
error while creating remark serializer: '%0' [error_creating_remark_serializer]
building module interface without lock file [interface_file_lock_failure]
timed out waiting to acquire lock file for module interface '%0' [interface_file_lock_timed_out]
option '%0' is required [error_option_required]
'-output-dir' argument '%0' does not exist or is not a directory [error_nonexistent_output_dir]
expected %select{%error|provided|member|potential member|dynamic member}0 dependency does not exist: %1 [missing_member_dependency]
unexpected %select{%error|%error|member|potential member|dynamic member}0 dependency: %1 [unexpected_dependency]
unexpected provided entity: %0 [unexpected_provided_entity]
unexpected dependency exists: %0 [negative_expectation_violated]
expected {{ in expectation [expectation_missing_opening_braces]
didn't find '}}' to match '{{' in expectation [expectation_missing_closing_braces]
module '%0' cannot be built with any of the -experimental-skip-*-function-bodies* flags; they have been automatically disabled [module_incompatible_with_skip_function_bodies]
ignored access notes file at '%0' because it cannot be read: %1 [access_notes_file_io_error]
ignored access notes file because it cannot be parsed: %0 [error_in_access_notes_file]
ignored invalid content in access notes file: %0 [warning_in_access_notes_file]
parallel execution not supported; falling back to serial execution [warning_parallel_execution_not_supported]
unable to execute command: %0 [error_unable_to_execute_command]
%0 command failed due to signal (use -v to see invocation) [error_command_signalled_without_signal_number]
%0 command failed due to signal %1 (use -v to see invocation) [error_command_signalled]
%0 command failed with exit code %1 (use -v to see invocation) [error_command_failed]
unable to handle compilation, expected exactly one frontend job [error_expected_one_frontend_job]
expected a swift frontend command [error_expected_frontend_command]
cannot specify -o when generating multiple output files [error_cannot_specify__o_for_multiple_outputs]
-static may not be used with -emit-executable [error_static_emit_executable_disallowed]
unable to load output file map '%1': %0 [error_unable_to_load_output_file_map]
no output file map specified [error_no_output_file_map_specified]
unable to make temporary file: %0 [error_unable_to_make_temporary_file]
no input files [error_no_input_files]
unexpected input file: %0 [error_unexpected_input_file]
unknown target '%0' [error_unknown_target]
using bridging headers with framework targets is unsupported [error_framework_bridging_header]
using bridging headers with module interfaces is unsupported [error_bridging_header_module_interface]
the flag '-i' is no longer required and has been removed; use '%0 input-filename' [error_i_mode]
unnecessary option '%0'; this is the default for '%1' with no input files [warning_unnecessary_repl_mode]
option '%0' is not supported by '%1'; did you mean to use '%2'? [error_unsupported_option]
ignoring -incremental (currently requires an output file map) [incremental_requires_output_file_map]
ignoring -incremental; output file map has no master dependencies entry ("%0" under "") [incremental_requires_build_record_entry]
unable to open incremental comparison log file '%0' [unable_to_open_incremental_comparison_log]
Swift requires a minimum deployment target of %0 [error_os_minimum_deployment]
Swift does not support the SDK '%0' [error_sdk_too_old]
iOS %0 does not support 32-bit programs [error_ios_maximum_deployment_32]
unsupported '%select{-target|-target-variant}1' value '%0'; use 'ios-macabi' instead [error_unsupported_target_variant]
unable to find Objective-C runtime support library 'arclite'; pass '-no-link-objc-runtime' to silence this warning [warn_arclite_not_found_when_link_objc_runtime]
unable to determine when '%0' was last modified: %1 [warn_cannot_stat_input]
unable to load dependencies file "%0", disabling incremental mode [warn_unable_to_load_dependencies]
input file '%0' was modified during the build [error_input_changed_during_build]
conflicting options '%0' and '%1' [error_conflicting_options]
'%0' is not supported with '%1' [error_option_not_supported]
'%0' requires '%1' [error_requirement_not_met]
ignoring -embed-bitcode since no object file is being generated [warn_ignore_embed_bitcode]
ignoring -embed-bitcode-marker since no object file is being generated [warn_ignore_embed_bitcode_marker]
ignoring '-verify-debug-info'; no debug info is being generated [verify_debug_info_requires_debug_option]
'-verify-incremental-dependencies' requires '-incremental' [verify_incremental_dependencies_needs_incremental]
no profdata file exists at '%0' [error_profile_missing]
Emission of optimization records has been disabled, because it requires a single compiler invocation: consider enabling the -whole-module-optimization flag [warn_opt_remark_disabled]
ignoring '-enable-batch-mode' because '%0' was also specified [warn_ignoring_batch_mode]
ignoring '-wmo' because '-dump-ast' was also specified [warn_ignoring_wmo]
the option '-driver-use-filelists' is deprecated; use '-driver-filelist-threshold=0' instead [warn_use_filelists_deprecated]
unable to load primary swift file "%0", %1 [warn_unable_to_load_primary]
missing migration script from path '%0' [cannot_find_migration_script]
-static-stdlib is no longer supported on Apple platforms [error_darwin_static_stdlib_not_supported]
The only C++ standard library supported on Apple platforms is libc++ [error_darwin_only_supports_libcxx]
SDK settings were ignored because 'SDKSettings.json' could not be parsed [warn_drv_darwin_sdk_invalid_settings]
'%0' is not a valid name [invalid_name]
given location is not valid [invalid_location]
the given new name '%0' does not match the arity of the old name '%1' [arity_mismatch]
the 'call' name usage cannot be used with a non-function-like name '%0' [name_not_functionlike]
cannot resolve location as name [unresolved_location]
given location does not belong to module '%0' [location_module_mismatch]
value decl '%0' has no declaration location [value_decl_no_loc]
value decl '%0' is referenced out of range [value_decl_referenced_out_of_range]
selected range has more than one entry point [multi_entry_range]
selected range contains %0 but not its target loop [orphan_loop_keyword]
given location is not on a default statement [invalid_default_location]
cannot find enclosing switch statement [no_parent_switch]
no remaining cases to expand [no_remaining_cases]
the name at the given location cannot be renamed to '%0' [mismatched_rename]
cannot find inserting position [no_insert_position]
cannot refactor as callback closure argument missing [missing_callback_arg]
cannot refactor as callback arguments do not match declaration [mismatched_callback_args]
cannot refactor complex if conditions [unknown_callback_conditions]
cannot refactor mixed nil and not-nil conditions [mixed_callback_conditions]
cannot refactor switch with fallthrough [callback_with_fallthrough]
cannot refactor switch with default case [callback_with_default]
cannot refactor switch using a case with multiple items [callback_multiple_case_items]
cannot refactor switch using a case with where clause [callback_where_case_item]
%0 has generic signature change from %1 to %2 [generic_sig_change]
%0(%1) is now %2 representable [raw_type_change]
%0 has been removed%select{| (deprecated)}1 [removed_decl]
%0 has been moved to %1 [moved_decl]
%0 has been renamed to %1 [renamed_decl]
%0 has %1 type change from %2 to %3 [decl_type_change]
%0 changes from %1 to %2 [decl_attr_change]
%0 is now %1 [decl_new_attr]
%0 in a non-resilient type changes position from %1 to %2 [decl_reorder]
%0 is added to a non-resilient type [decl_added]
%0 is %select{now|no longer}1 a stored property [var_has_fixed_order_change]
%0 is %select{now|no longer}1 a non-final instance function [func_has_fixed_order_change]
%0 has removed default argument from %1 [default_arg_removed]
%0 has removed %select{conformance to|inherited protocol}2 %1 [conformance_removed]
%0 has added inherited protocol %1 [conformance_added]
%0 has added a conformance to an existing protocol %1 [existing_conformance_added]
%0 has removed default type %1 [default_associated_type_removed]
%0 has been added as a protocol requirement [protocol_req_added]
%0 has removed its super class %1 [super_class_removed]
%0 has changed its super class from %1 to %2 [super_class_changed]
%0 has been changed to a %1 [decl_kind_changed]
%0 is %select{now|no longer}1 an optional requirement [optional_req_changed]
%0 is no longer open for subclassing [no_longer_open]
%0 has %select{removed|added}2 @escaping in %1 [func_type_escaping_changed]
%0 has self access kind changing from %1 to %2 [func_self_access_change]
%0 has %1 changing from %2 to %3 [param_ownership_change]
%0 has type witness type for %1 changing from %2 to %3 [type_witness_change]
%0 now requires%select{| no}1 new witness table entry [decl_new_witness_table_entry]
%0 is a new API without @available attribute [new_decl_without_intro]
%0 has ObjC name change from %1 to %2 [objc_name_change]
%0 has been added as a designated initializer to an open class [desig_init_added]
%0 has new designated initializers that are not visible to clients [added_invisible_designated_init]
%0 no longer inherits convenience inits from its superclass [not_inheriting_convenience_inits]
%0 has been added as a new enum case [enum_case_added]
cannot read breakage allowlist at '%0' [cannot_read_allowlist]
INTERNAL ERROR: this diagnostic should not be produced
INTERNAL ERROR: feature not implemented: %0
error opening '%0' for output: %1
cannot find group info file at path: '%0'
cannot parse group info file at path: '%0'
no group info found for file: '%0'
previous definition of %0 is here
did you mean to use a 'do' statement?
while parsing this '<' as a type parameter bracket
SWIFTC_MAXIMUM_DETERMINISM overriding %0
'super' cannot be used outside of class members
class methods are only allowed within classes; use 'static' to declare a %select{static|requirement fulfilled by either a static or class}0 method
class properties are only allowed within classes; use 'static' to declare a %select{static|requirement fulfilled by either a static or class}0 property
class subscripts are only allowed within classes; use 'static' to declare a %select{static|requirement fulfilled by either a static or class}0 subscript
expected '{' in body of function declaration
change 'let' to 'var' to make it mutable
did you mean '%0'?
failed to load profile data '%0': '%1'
requirement of '%1' to '%2' is redundant in an extension of '%0'
'%0' may only be used on parameters
single argument function types require parentheses
underlying Objective-C module %0 not found
generic requirement '%0' is redundant in %1
generic signature %0 is invalid
generic signature %0 is not equal to new signature %1
broken standard library: cannot find default actor type '%0'
unrecognized key '%0' in SDK node
unrecognized SDK node kind '%0'
unrecognized type attribute '%0' in SDK node
unrecognized declaration attribute '%0' in SDK node
unrecognized declaration kind '%0' in SDK node
unrecognized accessor kind '%0' in SDK node
'#sourceLocation' directive produces '#fileID' string of '%0', which conflicts with '#fileID' strings produced by other paths in the module
change file in '#sourceLocation' to '%0'
filename "%0" used twice: '%1' and '%2'
filenames are used to distinguish private declarations with the same name
circular reference
through reference here
%0 inherits from itself
%0 has a raw type that depends on itself
protocol %0 refines itself
%0 %1 declared here
ignoring associated type %0 in favor of module-scoped property wrapper %0; please qualify the reference with %1
while resolving type %0
cannot load cross-import overlay for '%0' and '%1': %2 (declared by '%3')
cannot list cross-import overlays for '%0': %1 (declared in '%2')
modules %0 and %1 both declare module %2 as a cross-import overlay, which may cause paradoxical behavior when looking up names in them; please report this bug to the maintainers of these modules
dependency scanner detected dependency cycle: '%0'
dependencies scanner cannot be configured with arguments: '%0'
ambiguous use of attribute %0
use '%0.' to reference the attribute %1 in module %2
found this attribute
unknown attribute '%0'
to match this opening '{'
to match this opening '['
to match this opening '('
to match this opening '<'
extraneous '}' at top level
structure nesting level exceeded maximum of %0
expected #else or #endif at end of conditional compilation block
further conditions after #else are unreachable
unexpected conditional compilation block terminator
incomplete condition in conditional compilation directive
extra tokens following conditional compilation directive
unexpected '}' in conditional compilation block
unexpected 'if' keyword following '#else' conditional compilation directive; did you mean '#elseif'?
expected string literal in %select{#warning|#error}0 directive
expected '%0' in %select{#warning|#error}1 directive
%select{#warning|#error}0 directive requires parentheses
string interpolation is not allowed in %select{#warning|#error}0 directives
extra tokens following %select{#warning|#error}0 directive
expected '%0' in #sourceLocation directive
parameterless closing #sourceLocation() directive without prior opening #sourceLocation(file:,line:) directive
expected starting line number for #sourceLocation directive
expected filename string literal for #sourceLocation directive
extra tokens at the end of #sourceLocation directive
the line number needs to be greater than zero
keyword '%0' does not need to be escaped in argument list
%0 cannot be an interpolated string literal
%0 cannot be an extended escaping string literal
nul character embedded in middle of file
input files must be encoded as UTF-8 instead of UTF-16
hashbang line is allowed only in the main file
unprintable ASCII character found in source file
invalid UTF-8 found in source file
single-quoted string literal found, use '"'
unicode curly quote found, replace with '"'
unicode character '%0' (%1) looks similar to '%2' (%3); did you mean to use '%2' (%3)?
non-breaking space (U+00A0) used instead of regular space
unterminated '/*' comment
comment started here
unterminated string literal
invalid escape sequence in literal
\u{...} escape sequence expects between 1 and 8 hex digits
expected '}' in \u{...} escape sequence
too many '#' characters in delimited escape
too many '#' characters in closing delimiter
invalid unicode scalar
expected hexadecimal code in braces after unicode escape
multi-line string literal content must begin on a new line
multi-line string literal closing delimiter must begin on a new line
%select{unexpected space in|unexpected tab in|insufficient}2 indentation of %select{line|next %1 lines}0 in multi-line string literal
should match %select{space|tab}0 here
change indentation of %select{this line|these lines}0 to match closing delimiter
escaped newline at the last line is not allowed
invalid character in source file
an identifier cannot begin with this character
expected a digit in floating point exponent
'%0' is not a valid %select{digit|first character}1 in floating point exponent
'%0' is not a valid %select{binary digit (0 or 1)|octal digit (0-7)|digit|hexadecimal digit (0-9, A-F)}1 in integer literal
hexadecimal floating point literal must end with an exponent
unexpected end of block comment
'=' must have consistent whitespace on both sides
extraneous whitespace after '.' is not permitted
editor placeholder in source file
source control conflict marker in source file
in %select{declaration|extension}0 of %1
#line directive was renamed to #sourceLocation
consecutive declarations on a line must be separated by ';'
expected declaration
expected identifier in %0 declaration
expected '%0' keyword in %1 declaration
%0 name can only start with a letter or underscore, not a number
expected identifier after comma in enum 'case' declaration
definition conflicts with previous value
'let' declarations cannot be computed properties
'let' declarations cannot be observing properties
'let' declarations cannot have addressors
'var' declarations with multiple variables cannot have explicit getters/setters
initial value is not allowed here
variable used within its own initial value
enum 'case' is not allowed outside of an enum
declaration is only valid at file scope
declaration cannot be marked %0
'%0' is a declaration modifier, not an attribute
%0 cannot appear after another 'static' or 'class' keyword
extraneous '.' in enum 'case' declaration
%select{%error|static properties|class properties}0 may only be declared on a type
%select{computed property|subscript}0 must have accessors specified
expected get or set in a protocol property
protocol property %0 cannot have a default implementation specified here; use extension instead
computed property must have an explicit type
getter/setter can only be defined for a single variable
expected '}' at end of variable get/set clause
%select{variable|subscript}0 already has %1
%select{variable|subscript}0 cannot provide both %1 and %2
%select{|previous definition of }1%0 %select{defined |}1here
expected %select{setter|willSet|didSet}0 parameter name
expected ')' after setter parameter name
expected ')' after willSet parameter name
expected ')' after didSet parameter name
expected '{' to start %0 definition
expected 'get', 'set', 'willSet', or 'didSet' keyword to start an accessor definition
'%0' accessor cannot have specifier '%1'
'%0' accessor is not allowed on property with 'get' accessor that is 'async' or 'throws'
%select{variable|subscript}0 with %1 must also have a getter
%select{variable|subscript}0 with %1 must also have a getter, addressor, or 'read' accessor
%select{'willSet'|'didSet'}0 cannot be provided together with %1
%select{'willSet'|'didSet'}0 is not allowed in subscripts
variable with implied type cannot have implied getter/setter
expected module name in import declaration
expected '{' in extension
expected '}' at end of extension
expected type name in extension declaration
expected '=' in type alias declaration
expected type in type alias declaration
expected type in associated type declaration
associated types must not have a generic parameter list
expected '(' in argument list of function declaration
%select{%error|static methods|class methods}0 may only be declared on a type
expected '->' after function parameter tuple
operator '%0' declared in protocol must be 'static'
'async' must be written after the parameter list of a function
expected '{' in enum
expected '}' at end of enum
expected '{' in struct
expected '}' in struct
expected '{' in class
expected '}' in class
expected ':' to begin inheritance clause
protocols do not allow generic parameters; use associated types instead
expected '{' in protocol type
expected '}' in protocol
setter in a protocol cannot have a name
protocol methods must not have bodies
protocol initializers must not have bodies
'subscript' functions may only be declared within a type
expected '(' for subscript parameters
subscripts cannot have a name
expected '->' for subscript element type
expected subscripting element type
expected '{' in subscript to specify getter and setter implementation
subscript in protocol must have explicit { get } or { get set } specifier
subscript declarations must have a getter
missing '%select{super.|self.}0' at initializer invocation
initializers may only be declared within a type
expected '(' for initializer parameters
initializers cannot have a name
deinitializers may only be declared within a class
expected '{' for deinitializer
deinitializers cannot have a name
expected ')' to close parameter list
no parameter clause allowed on deinitializer
'operator' may only be declared at file scope
expected operator name in operator declaration
'%0' is considered an identifier and must not appear within an operator name
'%0' is not allowed in operator names
postfix operator names starting with '?' or '!' are disallowed to avoid collisions with built-in unwrapping operators
operator should no longer be declared with body
operator should no longer be declared with body; use a precedence group instead
operator must be declared as 'prefix', 'postfix', or 'infix'
expected designated type in operator declaration
trailing comma in operator declaration
only infix operators may declare a precedence
expected identifier after 'precedencegroup'
expected '{' after name of precedence group
expected operator attribute identifier in precedence group body
'%0' is not a valid precedence group attribute
expected colon after attribute name in precedence group
'%0' attribute for precedence group declared multiple times
expected 'none', 'left', or 'right' after 'associativity'
expected 'true' or 'false' after 'assignment'
expected name of related precedence group after '%0'
expected SIL keyword
@inout is no longer an attribute
'%0' only allowed in SIL modules
expected type in SIL code
expected ':' before type in SIL value reference
expected SIL value name
expected SIL type to %0
expected constant in SIL code
referenced declaration has no %select{getter|setter}0
expected value ownership kind in SIL code
SILFunction and SILArgument have mismatching ValueOwnershipKinds. Function type specifies: '@%0'. SIL argument specifies: '@%1'.
expected ':' before %0
expected tuple element index
invalid index subset; expected '[SU]+' where 'S' represents set indices and 'U' represents unset indices
redefinition of value '%0'
value '%0' defined with mismatching type %1 (expected %2)
value '%0' used with mismatching type %1 (expected %2)
use of undefined value '%0'
prior reference was here
expected ':' in SIL location
line number must be a positive integer
column number must be a positive integer
scope number must be a positive integer 
scope number %0 needs to be declared before first use
scope number %0 is already defined
SIL instructions must be at the start of a line
expected '=' in SIL instruction
wrong number of results for SIL instruction, expected %0
expected SIL instruction opcode
expected '%0' in SIL instruction
sil_property generic signature must match original declaration
string_literal instruction requires an encoding
unknown string literal encoding '%0'
tuple instruction requires a tuple type
tuple instruction requires %0 values
tuple instruction requires a field number
struct instruction requires a field name
ref_element_addr instruction requires a field name
invalid instruction operands
%0 operand of '%1' must have address type
%0 operand of '%1' must have address of %2 type
integer_literal instruction requires a 'Builtin.Int<n>' type
integer_literal value not well-formed for type %0
float_literal instruction requires a 'Builtin.FP<n>' type
apply of non-polymorphic function cannot have substitutions
witness_method is not a protocol method
witness_method type does not conform to protocol
member not found
member %0 not found in type %1
cannot lookup member %0 in non-nominal, non-module type %1
member defined with mismatching type %0 (expected %1)
substitution replacement type %0 does not conform to protocol %1
substitution replacement type %0 is not a class type
missing substitutions
too many substitutions
unknown key '%0' in debug variable declaration
alloc_ref [objc] cannot have tail allocated elements
%0 instruction must have explicit access kind
%0 instruction must have explicit access enforcement
expected keypath component kind
unknown keypath component kind %0
keypath %select{gettable|settable}0_property component needs an %select{id and getter|id, getter, and setter}0
keypath must have a root component declared
key path index type %0 does not conform to Hashable
conflicting types for key path operand %0: %1 vs. %2
operand %0 is not referenced by any component in the pattern
expected basic block name or '}'
expected ':' after basic block name
use of undefined basic block %0
redefinition of basic block %0
expected ')' in basic block argument list
expected SIL function name
expected '}' at the end of a sil body
sil function expected to have SIL function type
dynamically replaced function not found %0
_specialize target function not found %0
expected version number in 'available' attribute
expected 'raw' or 'canonical' after 'sil_stage'
sil_stage declared multiple times
expected ':' in a vtable entry
sil function not found %0
sil class not found %0
expected 'inherited' or 'override'
expected ']' after vtable entry kind
sil global not found %0
expected ':' in a witness table
expected '(' in a witness table
expected ')' in a witness table
sil protocol not found %0
sil associated type decl not found %0
sil associated type path for conformance not found %0
sil protocol conformance not found
expected '%0' in differentiability witness
unknonwn differentiability kind '%0'; expected 'forward', 'reverse', 'normal', or 'linear'
differentiability witness declaration should not be serialized
reference to undefined differentiability witness
expected witness generic signature '%0' does not have same generic parameters as original function generic signature '%1'
expected coverage hash
expected '{' in coverage map
expected line:column pair
expected '->' after start location
expected ':' after source range
expected counter expression, id, or 'zero'
expected ')' to end counter expression
expected quotes surrounding PGO function name
expected '+' or '-'
expected type
expected initial value after '='
expected identifier in dotted type
expected identifier for type name
expected '>' to complete generic argument list
expected type for function result
only syntactic function types can be generic
only function declarations may be marked 'rethrows'; did you mean 'throws'?
only function declarations may be marked 'reasync'; did you mean 'async'?
'%0' may only occur before '->'
expected throwing specifier; did you mean 'throws'?
expected type before '->'
expected type after '->'
function types cannot have argument labels; use '_' before %0
expected a dynamically_replaceable function
%select{'async'|'reasync'}0 must precede %select{'throws'|'rethrows'}1
'%0' has already been specified
expected expression after '=' in 'case'
raw value for enum case must be a literal
array types are now written with the brackets around the element type
expected ']' in array type
expected element type
expected dictionary value type
expected ']' in dictionary type
unexpected ']' in type; did you mean to write an array type?
unexpected ':' in type; did you mean to write a dictionary type?
unexpected subscript in array literal; did you mean to write two separate elements instead?
add a separator between the elements
remove the space between the elements to silence this warning
expected ')' at end of tuple list
only a single element can be variadic
default argument not permitted in a tuple type
default argument not permitted in a protocol method
default argument not permitted in a protocol initializer
default argument not permitted in a protocol subscript
tuple element cannot have two labels
expected '>' to complete protocol-constrained type
'protocol<...>' composition syntax has been removed; join the protocols using '&'
'protocol<...>' composition syntax has been removed and is not needed here
'protocol<>' syntax has been removed; use 'Any' instead
expected 'var' or 'let' to introduce SIL box field type
expected '}' to complete SIL box field type list
expected '>' to complete SIL box generic argument list
expected '<' to begin SIL function type substitution list after 'for'
expected '>' to end SIL function type substitution list after 'for <...'
expected '<' to begin substituted parameter list after '@substituted'
expected function type after '@substituted'
expected 'for' to begin substitutions after '@substituted' function type
unexpected 'for' to begin substitutions after non-generic function type
'some' should appear at the beginning of a composition
expected non-negative size to be specified in layout constraint
expected non-negative alignment to be specified in layout constraint
expected ')' to complete layout constraint
layout constraints are only allowed inside '_specialize' attributes
expected pattern
keyword '%0' cannot be used as an identifier here
found an unexpected second identifier in %0 declaration; is there an accidental break?
join the identifiers together
join the identifiers together with camel-case
if this name is unavoidable, use backticks to escape it
expected ')' at end of tuple pattern
'...' cannot be applied to a subpattern which is not explicitly typed
default arguments are not allowed in closures
default arguments are not allowed in curried parameter lists
'%select{var|let}0' cannot appear nested inside another 'var' or 'let' pattern
%0 must be bound in every pattern
'let' pattern cannot appear nested in an already immutable context
%0 arguments must have a type specified
expected ')' in parameter
expected parameter type following ':'
expected parameter name followed by ':'
expected ':' following argument label and parameter name
expected '=' instead of '==' to assign default value for parameter
variadic parameter cannot have a default value
'%0' before a parameter name is not allowed, place it before the parameter type instead
parameter must not have multiple '__owned', 'inout', or '__shared' specifiers
'%0' in this position is interpreted as an argument label
extraneous duplicate parameter name; %0 already has an argument label
%select{operator|closure|enum case}0 cannot have keyword arguments
unnamed parameters must be written with the empty name '_'
cannot have more than one parameter list
unexpected initializer in pattern; did you mean to use '='?
a parameter following a variadic parameter requires a label
no parameters may follow a variadic parameter in a closure
enum element with associated values must have at least one associated value
enum element with associated values must have at least one associated value; this will be an error in the future version of Swift
did you mean to remove the empty associated value list?
did you mean to explicitly add a 'Void' associated value?
expected statement
statements are not allowed at the top level
expressions are not allowed at the top level
';' statements are not allowed
top-level statement cannot begin with a closure expression
consecutive statements on a line must be separated by ';'
consecutive statements on a line must be separated by a newline
labels are only valid on loops, if, and switch statements
labeled block needs 'do'
%0 has been replaced with %1 in Swift 3
expected expression in assignment
expected '}' at end of brace statement
type alias is missing an assigned type; use 'associatedtype' to define an associated type requirement
associated types can only be defined in a protocol; define a type or introduce a 'typealias' to satisfy an associated type requirement
expected expression in 'return' statement
expression following 'return' is treated as an argument of the 'return'
indent the expression to silence this warning
expected expression in 'throw' statement
found 'async' in expression; did you mean 'await'?
expected expression in 'yield' statement
expected '{' after 'defer'
expected ',' joining parts of a multi-clause condition
expected expression in conditional
expected '%0' in conditional
expected expression after '=' in conditional binding
variable binding in a condition requires an initializer
pattern matching binding is spelled with 'case %0', not '%0 case'
expected expression, var, or let in 'if' condition
missing condition in an 'if' statement
expected '{' after 'if' condition
expected '{' or 'if' after 'else'
expected '{' or 'if' after 'else'; did you mean to write 'if'?
unexpected 'else' immediately following 'if' condition
remove 'else' to execute the braced block of statements when the condition is true
expected expression, var, let or case in 'guard' condition
missing condition in an 'guard' statement
expected 'else' after 'guard' condition
expected '{' after 'guard' else
expected expression, var, or let in 'while' condition
missing condition in a 'while' statement
expected '{' after 'while' condition
expected '{' after 'repeat'
expected 'while' after body of 'repeat' statement
expected expression in 'repeat-while' condition
'do-while' statement is not allowed
did you mean 'repeat-while' statement?
did you mean separate 'do' and 'while' statements?
expected '{' after 'do'
expected '{' after 'catch' pattern
expected expression for 'where' guard of 'catch'
the 'do' keyword is used to specify a 'catch' region
C-style for statement has been removed in Swift 3
expected 'in' after for-each pattern
expected Sequence expression for for-each loop
expected '{' to start the body of for-each loop
expected expression in 'where' guard of 'for/in'
expected expression in 'switch' statement
expected '{' after 'switch' subject expression
expected '}' at end of 'switch' statement
'%0' label can only appear inside a 'switch' statement
all statements inside a switch must be covered by a 'case' or 'default'
additional 'case' blocks cannot appear after the 'default' block of a 'switch'
expected expression for 'where' guard of 'case'
expected ':' after '%0'
'default' cannot be used with a 'where' guard expression
%select{'case'|'default'}0 label in a 'switch' should have at least one executable statement
'try' cannot be used with '%0'
'try' must be placed on the %select{returned|thrown|yielded}0 expression
'try' must be placed on the initial value expression
expected expression
expected '%0' separator
unexpected '%0' separator
expected expression after operator
expected expression after unary operator
unary operator cannot be separated from its operand
expected operator name in operator reference
operator with postfix spacing cannot start a subexpression
expected member name following '.'
numeric value following '$' is too large
expected named member of numeric literal
'$' is not an identifier; use backticks to escape it
cannot declare entity named %0; the '$' prefix is reserved for implicitly-synthesized declarations
anonymous closure argument not contained in a closure
anonymous closure arguments cannot be used inside a closure that has explicit arguments
anonymous closure arguments cannot be used inside a closure that has explicit arguments; did you mean '%0'?
closure tuple parameter does not support destructuring
expected the name of a closure parameter
expected 'weak', 'unowned', or no specifier in capture list
expected name of in closure capture list
expected initializer for closure capture specifier
expected ']' at end of capture list
fields may only be captured by assigning to a specific name
expected closure result type after '->'
expected 'in' after the closure signature
unexpected tokens prior to 'in'
expected '}' at end of closure
braces here form a trailing closure separated from its callee by multiple newlines
callee is here
string literals in Swift are not preceded by an '@' sign
'.%0' is not a valid floating point literal; it must be written '0.%0'
#available may only be used as condition of an 'if', 'guard' or 'while' statement
an empty argument label is spelled with '_'
expected identifier after '.' expression
expected identifier or 'init' after super '.' expression
expected '.' or '[' after 'super'
using 'super' in a closure where 'self' is explicitly captured is not yet supported
'self' explicitly captured here
'try' must precede 'await'
expected expression in list of expressions
expected expression in container literal
expected key expression in dictionary literal
expected value in dictionary literal
expected ':' in dictionary literal
expected ')' in expression list
expected ']' in expression list
expected ']' in container literal expression
expected argument list in object literal
'%select{|[}0#%1(...)%select{|#]}0' has been renamed to '#%2(...)'
use of unknown directive '#%0'
expected expression after '?' in ternary expression
expected ':' after '? ...' in ternary expression
expected expression after '? ... :' in ternary expression
expected expression after 'try'
expected expression after 'await'
expected type after 'is'
expected type after 'as'
extra tokens after interpolated string expression
interpolating multiple values will not form a tuple in Swift 5
insert parentheses to keep current behavior
labeled interpolations will not be ignored in Swift 5
remove %0 label to keep current behavior
expected '(' following '#keyPath'
expected property or type name within '#keyPath(...)'
expected ')' to complete '#keyPath' expression
expected expression path in Swift key path
expected '(' following '#selector'
expected expression naming a method within '#selector(...)'
expected expression naming a property within '#selector(...)'
expected ')' to complete '#selector' expression
'.dynamicType' is deprecated. Use 'type(of: ...)' instead
#assert is an experimental feature that is currently disabled
expected '(' in #assert directive
expected ')' in #assert directive
expected a condition expression
expected a string literal
unexpected tokens in '#if' expression body
'=' has been replaced with ':' in attribute arguments
expected an attribute name
unexpected '(' in attribute '%0'
duplicate %select{attribute|modifier}0
%select{attribute|modifier}0 already specified here
'%0' contradicts previous %select{attribute|modifier}2 '%1'
'infix' modifier is not required or allowed on func declarations
expected ']' or ',' in attribute list
attribute can only be applied to types, not declarations
attribute can only be applied to declarations, not types
expected '(' in '%0' %select{attribute|modifier}1
expected ')' in '%0' %select{attribute|modifier}1
expected ',' in '%0' %select{attribute|modifier}1
expected string literal in '%0' attribute
expected integer literal in '%0' attribute
expected '%0' option such as '%1'
unknown option '%0' for attribute '%1'
missing label '%0:' in '@%1' attribute
expected label '%0:' in '@%1' attribute
alignment value must be a positive integer literal
@_swift_native_objc_runtime_base class name must be an identifier
@_objcRuntimeName name must be an identifier
attribute '%0' can only be used in a non-local scope
@_projectedValueProperty name must be an identifier
expected 'set' as subject of '%0' modifier
expected an SPI identifier as subject of the '@_spi' attribute
'@%0' has been renamed to '@%1'
no attribute named '@%0'; did you mean '@%1'?
attribute '%0' is unsupported on target '%1'
expected platform name or '*' for '%0' attribute
'%0' attribute cannot be both unconditionally 'unavailable' and 'deprecated'
'%0' argument has already been specified
unknown platform '%0' for attribute '%1'
'renamed' argument of '%0' attribute must be an operator, identifier, or full function name, optionally prefixed by a type name
expected '%0' option such as 'unavailable', 'introduced', 'deprecated', 'obsoleted', 'message', or 'renamed'
expected ':' after '%1' in '%0' attribute
expected version number in '%0' attribute
expected 'introduced', 'deprecated', or 'obsoleted' in '%0' attribute for platform '%1'
expected version number with 'deprecated' in '%0' attribute for platform '%1'
'%0' cannot be used in '%1' attribute for platform '%2'
unexpected version number in '%0' attribute for non-specific platform '*'
future platforms identified by '*' cannot be used in an availability macro definition
expected an identifier to begin an availability macro definition
expected ':' after '%0' in availability macro definition
reference to undefined version '%0' for availability macro '%1'
duplicate definition of availability macro '%0' for version '%1'
expected ')' in @_originallyDefinedIn argument list
unrecognized platform name in @_originallyDefinedIn argument list
unrecognized property in @_originallyDefinedIn argument list
expected 'module: "original"' in the first argument to @_originallyDefinedIn
original module name cannot be empty in @_originallyDefinedIn
expected at least one platform version in @_originallyDefinedIn
@_originallyDefinedIn only uses major and minor version number
* as platform name has no effect
Swift language version checks has no effect in @_originallyDefinedIn
PackageDescription version checks has no effect in @_originallyDefinedIn
expected '(' after 'convention' attribute
expected convention name identifier in 'convention' attribute
expected ')' after convention name for 'convention' attribute
expected 'cType' label in 'convention' attribute
expected ':' after 'cType' for 'convention' attribute
expected string literal containing clang type for 'cType' in 'convention' attribute
expected ':' after 'witness_method' for 'convention' attribute
expected protocol name in 'witness_method' 'convention' attribute
missing ':' after selector piece in @objc attribute
expected ')' after name for @objc
expected name within parentheses of @objc attribute
expected ')' after function name for @_dynamicReplacement
expected a function name in @_dynamicReplacement(for:)
expected 'for' in '_dynamicReplacement' attribute
expected ':' after @_dynamicReplacement(for
expected a type name in @_typeEraser()
expected ')' after type name for @_typeEraser
expected ')' after function name for @_private
expected 'sourceFile' in '_private' attribute
expected a source file name in @_private(sourceFile:)
expected ':' after @_private(sourceFile
expected '(' after 'opened' attribute
known id for 'opened' attribute must be a UUID string
expected ')' after id value for 'opened' attribute
expected '%0' option (readnone, readonly, readwrite)
expected 'safe' or 'unsafe'
expected ')' after specifier for 'unowned'
'warn_unused_result' attribute behavior is now the default
expected ')' after 'warn_unused_result' attribute
missing ':' after %0 in '_specialize' attribute
missing ',' in '_specialize' attribute
unknown parameter %0 in '_specialize attribute'
expected a boolean true or false value in '_specialize' attribute
expected a parameter label or a where clause in '_specialize' attribute
parameter '%0' was already defined in '_specialize' attribute
expected 'partial' or 'full' as values of the 'kind' parameter in '_specialize' attribute
expected a function name as the value of the 'target' parameter in '_specialize' attribute
expected an SPI identifier as the value of the 'spi' parameter in '_specialize' attribute
expected a member name as second parameter in '_implements' attribute
'@differentiable' has been renamed to '@differentiable(reverse)' and will be removed in the next release
unsupported differentiability kind '%0'; only 'reverse' is supported
unknown differentiability kind '%0'; only 'reverse' is supported
expected a list of parameters to differentiate with respect to
use 'wrt:' to specify parameters to differentiate with respect to
expected 'wrt:' or 'where' in '@differentiable' attribute
expected a colon ':' after '%0'
expected a parameter, which can be a function parameter name, parameter index, or 'self'
expected a parameter, which can be a function parameter index or 'self'
expected an original function name
expected '[' to start the %0
expected ']' to complete the %0
expected a space-separated list of indices, e.g. '0 1'
expected label '%0' in index list
expected the index of a parameter to differentiate with respect to
expected the index of a result to differentiate from
expected '{' to start a derivative function list
expected ',' between operands in a derivative function list
expected '}' to start a derivative function list
expected an extractee kind attribute, which can be one of '[original]', '[jvp]', and '[vjp]'
expected an extractee kind attribute, which can be one of '[original]' and '[transpose]'
expected an operand of a function type
expected a differentiability witness kind, which can be one of '[jvp]', '[vjp]', or '[transpose]'
expected witness_generic signature '%0' does not have same generic parameters as original function generic signature '%1'
argument of '%0' attribute must be an identifier or full function name
expected '>' to complete generic parameter list
expected an identifier to name generic parameter
'class' constraint can only appear on protocol declarations
did you mean to write an 'AnyObject' constraint?
expected a class type or protocol-constrained type restricting %0
use '==' for same-type requirements rather than '='
expected ',' to separate the requirements of this 'where' clause
expected ':' or '==' to indicate a conformance or same-type requirement
redundant 'class' requirement
'class' must come first in the requirement list
'where' clause next to generic parameters is obsolete, must be written following the declaration's type
expected '&&' or '||' expression
expected unary '!' expression
unexpected platform condition (expected 'os', 'arch', or 'swift')
expected only one argument to platform condition
unexpected argument for the '_runtime' condition; expected '_Native' or '_ObjC'
unexpected platform condition argument: expected %0
invalid conditional compilation expression
'%0' is not a valid conditional compilation expression, use '%1'
version component contains non-numeric characters
compiler version must not have more than five components
the second version component is not used for comparison
found empty version component
compiler version component out of range: must be in [0, %0]
version requirement is empty
unknown %0 for build configuration '%1'
'%0' has been renamed to '%1'
platform condition appears to be testing for simulator environment; use 'targetEnvironment(simulator)' instead
expected availability condition
expected platform name
expected version number
expected ')' in availability query
unrecognized platform name %0
'%0' cannot be used in an availability condition
'%0' can't be combined with shorthand specification '%1'
did you mean to specify an introduction version?
version comparison not needed
must handle potential future platforms with '*'
'%0' version-availability must be specified alone
Swift language version checks not allowed in #available(...)
PackageDescription version checks not allowed in #available(...)
version for '%0' already specified
'%0' %select{attribute|modifier}1 is only valid when experimental concurrency is enabled
unknown %0 syntax exists in the source
expected an argument label followed by a closure literal
expected a closure literal
expected '}' at the end of a trailing closures block
%0 declared here
%1 '%0' is implicitly declared
extended type declared here
opaque return type declared here
ambiguous reference to member %0
ambiguous reference to %0 %1
no exact matches in %select{reference|call}0 to %1 %select{%3|}2
candidate has partially matching parameter list %0
value of type %0 has no subscripts
value of tuple type %0 has no member %1
value of type %0 has no member %1
value of type %0 has no member %1; did you mean %2?
value of type %0 has no dynamic member %2 using key path from root type %1; did you mean %3?
value of type %0 has no dynamic member %2 using key path from root type %1
cannot infer key path type from context; consider explicitly specifying a root type
'AnyKeyPath' does not provide enough context for root type to be inferred; consider explicitly specifying a root type
type %0 has no member %1
type %0 has no member %1; did you mean %2?
value of type %0 has no property or method named 'subscript'; did you mean to use the subscript operator?
cannot access element using subscript for tuple type %0; use '.' notation instead
cannot access element using subscript for tuple type %0; did you mean to use '.%1'?
enum type %0 has no case %1; did you mean %2?
did you mean to specify a raw type on the enum declaration?
did you mean to declare %0 as a protocol conformance for %1?
cast 'Any' to 'AnyObject' or use 'as!' to force downcast to a more specific type to access members
member %0 expects argument of type %1
member %0 is a function; did you mean to call it?
member %0 is a function that produces expected type %1; did you mean to call it?
member %0 in %2 produces result of type %1, but context expects %2
enum case %0 has no associated values
static member %1 cannot be used on instance of type %0
enum case %0 cannot be used as an instance member
static member %1 cannot be used on protocol metatype %0
instance member %1%select{| of type %2}3 cannot be used on%select{| instance of nested}3 type %0
member %1 cannot be used on value of protocol type %0; use a generic constraint instead
%0 is inaccessible due to '%select{private|fileprivate|internal|@_spi|@_spi}1' protection level
%0 initializer is inaccessible due to '%select{private|fileprivate|internal|@_spi|@_spi}1' protection level
cannot use mutating member on immutable value: %0
cannot use mutating member on immutable value of type %0
cannot use mutating getter on immutable value: %0
cannot use mutating getter on immutable value of type %0
the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
value of type %0 cannot be compared by reference; did you mean to compare by value?
type %0 is not optional, value can never be nil
expression pattern of type %0 cannot match values of type %1
tuple pattern cannot match values of non-tuple type %0
pattern cannot match values of type %0
cannot check reference equality of functions; operands here have types %1 and %2
binary operator '%0' cannot be applied to operands of type %1 and %2
binary operator '%0' cannot be applied to two %1 operands
unary operator '%0' cannot be applied to an operand of type %1
cannot pass immutable value to mutating operator: %0
cannot pass immutable value of type %0 to mutating operator
left side of mutating operator isn't mutable: %0
left side of mutating operator has immutable type %0
cannot subscript a value of type %0
cannot subscript a value of incorrect or ambiguous type
cannot subscript a nil literal value
nil literal cannot be the source of a conditional cast
cannot pass immutable value as inout argument: %0
inout argument could be set to a value with a type other than %0; use a value declared as type %1 instead
change variable type to %1 if it doesn't need to be declared as %0
cannot pass immutable value of type %0 as inout argument
cannot provide default value to inout parameter %0
cannot invoke %select{|initializer for type }2'%0' with an argument list of type '%1'
cannot call value of non-function type %0
no '%0' candidates produce the expected contextual result type %1
no '%0' candidates produce the expected type %1 for parameter #%2
unable to infer type of a closure parameter %0 in the current context
unable to infer closure type in the current context
unable to infer%select{ complex|}0 closure return type; add explicit type to disambiguate
anonymous closure parameter %0 is used here
declared closure result %0 is incompatible with contextual type %1
%select{attribute |}0 '%1' is not supported on a closure
%select{expected an argument list|produces result}0 of type '%1'
overloads for '%1' exist with these %select{partially matching parameter lists|result types}0: %2
binary operator '%0' cannot be synthesized for enums with associated values
cannot convert value of type %0 to specified type %1
value of type %0 does not conform to specified type %1
value of type %0 expected to be instance of class or class-constrained type
'nil' cannot initialize specified type %0
cannot convert return expression of type %0 to return type %1
return expression of type %0 does not conform to %1
return expression of type %0 expected to be an instance of a class or class-constrained type
'nil' is incompatible with return type %0
thrown expression type %0 does not conform to 'Error'
thrown error code type %0 does not conform to 'Error'; construct an %1 instance
expected %0 yield value(s)
cannot infer concrete Error for thrown 'nil' value
cannot convert value of type %0 to raw type %1
cannot convert 'nil' to raw type %0
default argument value of type %0 cannot be converted to type %1
default argument value of type %0 does not conform to %1
nil default argument value cannot be converted to type %0
cannot convert value of type %0 to expected argument type %1
candidate expects %select{|in-out }2value of type %0 for parameter #%1
cannot pass array of type %0 as variadic arguments of type %1
candidate would match if array elements were passed as variadic arguments of type %0
remove brackets to pass array elements directly
cannot convert value of type %0 (%1) to expected argument type %2 (%3)
conflicting arguments to generic parameter %0 (%1)
cannot pass %0 to parameter; argument %1 must be a pointer that outlives the call%select{| to %3}2
passing %0 to parameter, but argument %1 should be a pointer that outlives the call%select{| to %3}2
cannot use inout expression here; argument %0 must be a pointer that outlives the call%select{| to %2}1
inout expression creates a temporary pointer, but argument %0 should be a pointer that outlives the call%select{| to %2}1
initialization of %0 results in a dangling %select{|buffer }1pointer
implicit argument conversion from %0 to %1 produces a pointer valid only for the duration of the call%select{| to %3}2
use 'withUnsafe%select{Bytes|MutableBytes|Pointer|MutablePointer}0' in order to explicitly convert argument to %select{buffer |buffer ||}0pointer valid for a defined scope
use the 'withCString' method on String in order to explicitly convert argument to pointer valid for a defined scope
use the 'withUnsafe%select{Bytes|MutableBytes|BufferPointer|MutableBufferPointer}0' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope
candidate expects pointer that outlives the call for parameter #%0
argument type %0 does not conform to expected type %1
argument type %0 expected to be an instance of a class or class-constrained type
'nil' is not compatible with expected argument type %0
'nil' is not compatible with expected argument type %0 at position #%1
cannot convert value of type %0 to expected condition type %1
'nil' is not compatible with expected condition type %0
cannot yield immutable value of type %0 as an inout yield
cannot yield immutable value of type %0 as an inout yield of type %1
cannot yield reference to storage of type %0 as an inout yield of type %1
cannot convert value of type %0 to expected yield type %1
yielded type %0 does not conform to expected type %1
nil is not compatible with expected yield type %0
cannot convert value of type %0 to closure result type %1
result value of type %0 does not conform to closure result type %1
'nil' is not compatible with closure result type %0
cannot convert parent type %0 to expected type %1
member chain produces result of type %0 but contextual base was inferred as %1
arguments to generic parameter %0 (%1 and %2) are expected to be equal
deinitializers cannot be accessed
cannot convert value of type %0 to expected element type %1
value of type %0 does not conform to expected element type %1
'nil' is not compatible with expected element type %0
cannot convert value of type %0 to expected dictionary key type %1
value of type %0 does not conform to expected dictionary key type %1
'nil' is not compatible with expected dictionary key type %0
cannot convert value of type %0 to expected dictionary value type %1
value of type %0 does not conform to expected dictionary value type %1
'nil' is not compatible with expected dictionary value type %0
cannot convert value of type %0 to type %1 in coercion
value of type %0 does not conform to %1 in coercion
'nil' is not compatible with type %0 in coercion
cannot assign value of type %0 to type %1
add missing conformance to %0 to %1 %2
value of type %0 does not conform to %1 in assignment
value of type %0 expected to be an instance of a class or class-constrained type in assignment
'nil' cannot be assigned to type %0
cannot assign value of type %0 to subscript of type %1
value of type %0 does not conform to %1 in subscript assignment
'nil' cannot be assigned to subscript of type %0
%0 produces %1, not the expected contextual result type %2
cannot convert sequence element type %0 to expected type %1
sequence element type %0 does not conform to expected protocol %1
invalid conversion from throwing function of type %0 to non-throwing function type %1
invalid conversion from 'async' function of type %0 to synchronous function type %1
cannot pass function of type %0 to parameter expecting synchronous function type
'async' inferred from asynchronous operation used here
'#keyPath' can only be used with the Objective-C runtime
result of key path is unused
argument of '#keyPath' refers to non-'@objc' property %0
argument of '#keyPath' refers to property %0 in %1 that depends on '@objc' inference deprecated in Swift 4
cannot refer to type member %0 within instance of type %1
key path cannot refer to generic type %0
%select{key path|dynamic key path member lookup}2 cannot refer to %0 %1
%select{key path|dynamic key path member lookup}1 cannot refer to %0, which has a mutating getter
%select{key path|dynamic key path member lookup}1 cannot refer to static member %0
%select{key path|dynamic key path member lookup}1 cannot refer to enum case %0
empty key path does not refer to a property
an Objective-C key path cannot contain %select{BAD|subscript|BAD|BAD|optional-forcing|optional-chaining|BAD} components
an Objective-C key path cannot reference a declaration with a compound name
broken standard library: no 'KeyPath' type found
invalid component of Swift key path
a Swift key path must begin with a type
a Swift key path with contextual root must begin with a leading dot
key path value type %0 cannot be converted to contextual type %1
key path must have at least one component
string interpolation can only appear inside a string literal
subscript index of type %0 in a key path must be Hashable
key path of type %0 cannot be applied to a base of type %1
key path with root type %0 cannot be applied to a base of type %1
the root type of a Swift key path cannot be 'AnyObject'
cannot convert key path into a multi-argument function type %0
forming a writable keypath to property %0 that is read-only in this context is deprecated and will be removed in a future release
'#selector' can only be used with the Objective-C runtime
import the 'ObjectiveC' module to use '#selector'
argument of '#selector' does not refer to an '@objc' method, property, or initializer
argument of '#selector' cannot refer to %select{local|global}0 function %1
cannot reference %1 %2 as a property; remove '%select{getter|setter}0:'
argument of '#selector' cannot refer to %select{variable|parameter}0 %1
use 'getter:'%select{| or 'setter:'}0 to refer to the Objective-C getter%select{| or setter}0 of property %1%select{|, respectively}0
add '%select{getter|setter}0:' to reference the Objective-C %select{getter|setter}0 for %1
argument of '#selector(setter:)' refers to non-settable %0 %1
setter of %0 %1 is inaccessible
cannot use %0 as a selector because protocol %1 is not exposed to Objective-C
argument of '#selector' refers to %0 %1 that is not exposed to Objective-C
add '@objc' to expose this %0 to Objective-C
argument of '#selector' refers to %0 %1 in %2 that depends on '@objc' inference deprecated in Swift 4
string literal is not a valid Objective-C selector
no method declared with Objective-C selector %0
use of string literal for Objective-C selectors is deprecated; use '#selector' or explicitly construct a 'Selector'
use of string literal for Objective-C selectors is deprecated; use '#selector' instead
use '#selector' instead of explicitly constructing a 'Selector'
wrap the selector name in parentheses to suppress this warning
unexpected non-void return value in void function
did you mean to add a return type?
no such module '%0'
could not find module '%0' for target '%1'; found: %2, at: %3
did you forget to set an SDK using -sdk or SDKROOT?
use "xcrun swiftc" to select the default macOS SDK installed with Xcode
this file is part of module %0; ignoring import
file '%0' is part of module %1; ignoring import
opening import file for module %0: %1
failed to load module '%0'
failed to %select{build module '%1' for importation|verify module interface of '%1'}0 due to the errors above; the textual interface may be broken by project issues%select{, differences between compilers (the producer '%3' and this compiler '%4')|}2 or a compiler bug
failed to build module '%0'; this SDK is not supported by the compiler (the SDK is built with '%1', while this compiler is '%2'). Please select a toolchain which matches the SDK.
malformed compiled module: %0
compiled module was created by a newer version of the compiler: %0
module compiled with Swift %0 cannot be imported by the Swift %1 compiler: %2
compiled module was created by an older version of the compiler; rebuild %0 and try again: %1
missing required module '%0'
missing required modules: %0
circular dependency between modules '%0' and %1
cannot load underlying module for %0
cannot load module '%0' as '%1'
module %0 was created for incompatible target %1: %2
compiling for %0 %1, but module %2 has a minimum deployment target of %0 %3: %4
fatal error encountered while reading from module '%0'; please submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the project
module '%0' full misc version is '%1'
compiling as Swift %0, with '%1' built as Swift %2 (this is supported but may expose additional compiler issues)
deserialized invalid declaration %0 (%1) in module '%2'
allowing deserialization of invalid declaration %0 (%1) in module '%2'
deserialized error type '%0' in module '%1'
allowing deserialization of error type '%0' in module '%1'
unable to use malformed module source info '%0'
type member must not be named %0, since it would conflict with the 'foo.%1' expression
%select{implicitly unwrapped |}0optional parameter is of same type as %select{implicitly unwrapped |}1optional parameter
invalid redeclaration of %0
invalid redeclaration of synthesized %select{|memberwise }1%0
invalid redeclaration of synthesized %select{%0|implementation for protocol requirement}1 %2
redeclaration of %0 is deprecated and will be an error in Swift 5
%0 previously declared here
%0 synthesized for property wrapper %select{projected value|backing storage}1
%0 is ambiguous for type lookup in this context
%0 is not a member type of %1 %2
%0 does not have a member type named %1; did you mean %2?
%0 %1 is not a member type of %2
ambiguous type name %0 in %1
no type named %0 in module %1
ambiguous type name %0 in module %1
%0 is not a %select{binary|prefix unary|postfix unary}1 operator
unsupported recursion for reference to %select{associated type|type alias}0 %1 of type %2
reference to invalid %select{associated type|type alias}0 %1 of type %2
missing whitespace between %0 and %1 operators
ambiguous missing whitespace between unary and binary operators
could be %select{binary|postfix}2 %0 and %select{prefix|binary}2 %1
unary operators must not be juxtaposed; parenthesize inner expression
no operator '**' is defined; did you mean 'pow(_:_:)'?
cannot %select{find|find operator}1 %0 in scope
cannot %select{find|find operator}1 %0 in scope; did you mean '%2'?
%select{identifier|operator}0 '%1' contains possibly confused characters; did you mean to use '%2'?
%select{identifier|operator}0 '%1' (%2) looks similar to '%3' (%4); did you mean '%3' (%4)?
cannot find type %0 in scope
cannot find type %0 in scope; did you mean to use '%1'?
did you mean the implicitly-synthesized %1 '%0'?
did you mean to use '%0'?
cannot use module %0 as a type
cannot deduce protocol for %0 literal
could not infer type of %0 literal
import %0 to use '%1' as the default %2 literal type
use of local variable %0 before its declaration
protocol %0 can only be used as a generic constraint because it has Self or associated type requirements
%select{%error|type|struct|class|enum|protocol|variable|function}0 %1 does not exist in module %2
%0 was imported as '%1', but is %select{%error|a type|a struct|a class|an enum|a protocol|a variable|a function}2
%0 %1 cannot be imported as '%2'
ambiguous name %0 in module %1
module %0 was not compiled for testing
module %0 was not compiled for private import
module %0 cannot be both exported and implementation-only
module %0 was not compiled with library evolution support; using it means binary compatibility for %1 can't be guaranteed
import of %0 and %1 triggered a cross-import of %2
loaded module at %0
ambiguous operator declarations found for operator
found this matching operator declaration
operator redeclared
previous operator declaration here
operator implementation without matching operator declaration
unary operator implementation must have a 'prefix' or 'postfix' modifier
%select{prefix|postfix}0 unary operator missing '%select{prefix|postfix}0' modifier
%select{prefix|postfix}0 operator found here
operators must have one or two arguments
operator functions can only be declared at global or in type scope
operator %0 declared in type %1 must be 'static'
operator %0 declared in extension%select{| of %2}1 must be 'static'
operator %0 declared in non-final class %1 must be 'final'
member operator %2%select{| of protocol %0}1 must have at least one argument of type %select{%0|'Self'}1
multiple precedence groups found
found this matching precedence group
unknown precedence group %0
cycle in '%select{lowerThan|higherThan}0' relation
cycle in higherThan relation: %0
precedence group cannot be given lower precedence than group in same module; make the other precedence group higher than this one instead
precedence group redeclared
previous precedence group declaration here
through reference to precedence group %0 here
%0 is not convertible to %1, tuples have a different number of elements
tuple type %0 is not convertible to tuple type %1
cannot force unwrap value of non-optional type %0
cannot use optional chaining on non-optional value of type %0
result values in '? :' expression have mismatching types %0 and %1
function value was used as a property; add () to call it
function %0 was used as a property; add () to call it
method %0 was used as a property; add () to call it
'init' is a member of the type; use assignment to initialize the value instead
'init' is a member of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type
'super.init' cannot be called outside of an initializer
'%0' test is always true
'is' test is always true because %0 is a Core Foundation type
runtime conversion from %0 to %1 is not supported; %select{'is' test|cast}2 always fails
consider using 'as' coercion instead
conditional cast from %0 to %1 always succeeds
conditional downcast from literal to %0 always fails; consider using 'as' coercion
forced cast of %0 to same type has no effect
forced cast from %0 to %1 always succeeds; did you mean to use 'as'?
forced cast from %0 to %1 %select{only unwraps optionals|only unwraps and bridges}3; did you mean to use '%2'%select{| with 'as'}3?
conditional downcast from %0 to %1 %select{does nothing|is equivalent to an implicit conversion to an optional %1|is a bridging conversion; did you mean to use 'as'?}2
checking a value with optional type %0 against dynamic type %1 succeeds whenever the value is non-nil; did you mean to use '!= nil'?
cast from %0 to unrelated type %1 always fails
did you mean to call %0 with '()'?
optional chain has no effect, expression already produces %0
'?' must be followed by a call, member lookup, or subscript
%0 cannot appear in an expression
in call to operator %0
in call to function %0
in call to %0
in call to initializer
in initialization of parameter %0
function produces expected type %0; did you mean to call it with '()'?
value of optional type %0 must be unwrapped to a value of type %1
coalesce using '??' to provide a default when the optional value contains 'nil'
force-unwrap using '!' to abort execution if the optional value contains 'nil'
value inferred to be type %0 when initialized with an implicitly unwrapped value
short-circuit using 'guard' to exit this function early if the optional value contains 'nil'
value of optional type %0 must be unwrapped to refer to member %1 of wrapped base type %2
key path root inferred as optional type %0 must be unwrapped to refer to member %1 of unwrapped type %2
chain the optional using '?' to access member %0 only for non-'nil' base values
use unwrapped type %0 as key path root
use '?' to access key path subscript only for non-'nil' base values
chain the optional using '?.' to access unwrapped type member %0
unwrap the optional using '!.' to access unwrapped type member %0
value of optional type %0 not unwrapped; did you mean to use 'try!' or chain with '?'?
%0 is not convertible to %1
did you mean to use 'as!' to force downcast?
did you mean to use 'as?' to conditionally downcast?
coercion from %0 to %1 may fail; use 'as?' or 'as!' instead
%0 is not implicitly convertible to %1; did you mean to use 'as' to explicitly convert?
passing value of type %0 to an inout parameter requires explicit '&'
yielding mutable value of type %0 requires explicit '&'
use of extraneous '&'
'&' used with non-inout argument of type %0
'&' is not allowed passing array value as %0 argument
cannot pass an inout argument to a subscript; use 'withUnsafeMutablePointer' to explicitly convert argument to a pointer
cannot convert value %0 of type %1 to expected type %2, use %select{wrapper|wrapped value}3 instead
referencing %0 %1 requires %select{wrapper|wrapped value of type}2 %3
initializing from a metatype value must reference 'init' explicitly
extraneous argument label%select{|s}0 '%1' in %select{call|subscript}2
missing argument label%select{|s}0 '%1' in %select{call|subscript}2
incorrect argument label%select{|s}0 in %select{call|subscript}3 (have '%1', expected '%2')
argument %0 must precede argument %1
argument %0 must precede unnamed argument #%1
unnamed argument #%0 must precede argument %1
unnamed argument #%0 must precede unnamed argument #%1
operator argument #%0 must precede operator argument #%1
incorrect labels for candidate (have: '%0', expected: '%1')
use of %0 refers to %1 rather than %2 %3
use of %0 refers to %1 rather than %2 %3 in module %4
instance member %1 cannot be used on type %0; did you mean to use a value of this type instead?
cannot use instance member %0 within property initializer; property initializers run before 'self' is available
cannot use instance member %0 as a default parameter
missing argument for parameter %0 in call
missing argument for parameter #%0 in call
missing arguments for parameters %0 in call
extra argument %0 in call
extra argument in call
extra arguments at positions %0 in call
argument passed to call that takes no arguments
extra trailing closure passed in call
trailing closure passed to parameter of type %0 that does not accept a closure
backward matching of the unlabeled trailing closure is deprecated; label the argument with %0 to suppress this warning
%0 contains defaulted closure parameters %1 and %2
candidate %0 requires %1 argument%s1, but %2 %select{were|was}3 %select{provided|used in closure body}4
%0 cannot be constructed because it has no accessible initializers
non-nominal type %0 does not support explicit initialization
generic parameter %0 could not be inferred
generic parameter %0 could not be inferred in cast to %1
%0 declared as parameter to type %1
explicitly specify the generic arguments to fix this issue
@dynamicCallable attribute requires %0 to have either a valid 'dynamicallyCall(withArguments:)' method or 'dynamicallyCall(withKeywordArguments:)' method
@dynamicCallable type %0 cannot be applied with keyword arguments; missing 'dynamicCall(withKeywordArguments:)' method
@dynamicMemberLookup attribute requires %0 to have a 'subscript(dynamicMember:)' method that accepts either 'ExpressibleByStringLiteral' or a key path
add an explicit argument label to this subscript to satisfy the @dynamicMemberLookup requirement
String must not be indexed with %0, it has variable size elements
consider using an existing high level algorithm, str.startIndex.advanced(by: n), or a projection like str.utf8
a C function pointer can only be formed from a reference to a 'func' or a literal closure
a C function pointer cannot be formed from a method
a C function pointer cannot be formed from a reference to a generic function
add () to forward @autoclosure parameter
a '@differentiable' function can only be formed from a reference to a 'func' or 'init' or a literal closure
did you mean to take a '%0' closure?
cannot perform pointer conversion of value of type %0 to autoclosure result type %1
initializer requires a body
operators must be declared with 'func'
cannot declare a custom %0 '%1' operator
'%0' requires a function with an operator identifier
'%0' requires a function with one argument
%0 %1 cannot be used as an attribute
%0 is only valid on methods
%0 is not valid on %1s in %select{classes|class-bound protocols}2
method must not be declared both %0 and %1
static functions must not be declared mutating
'modify' accessor cannot be %0 when the setter is %1
'@_transparent' attribute is not supported on declarations within protocols
'@_transparent' attribute is not supported on declarations within classes
only instance properties can be declared @IBOutlet
@IBOutlet property cannot %select{have|be an array of}0 non-'@objc' class type %1
@IBOutlet property cannot %select{have|be an array of}0 non-'@objc' protocol type %1
@IBOutlet property cannot %select{have|be an array of}0 non-object type %1
@IBOutlet attribute requires property to be mutable
@IBOutlet property has non-optional type %0
add '?' to form the optional type %0
add '!' to form an implicitly unwrapped optional
@IBDesignable can only be applied to classes and extensions of classes
only instance properties can be declared @%0
only instance methods can be declared @%0
methods declared @%0 must %select{|not }1return a value
@%0 methods must have %1 to %2 arguments
@%0 methods must have %2 argument%s2
@%0 methods must have at most %2 argument%s2
@%0 method cannot have selector %1 because it has special memory management behavior
change Swift name to %0
change Objective-C selector to %0
@unsafe_no_objc_tagged_pointer can only be applied to class protocols
@_swift_native_objc_runtime_base_not_on_root_class can only be applied to root classes
@_cdecl can only be applied to global functions
@_cdecl symbol name cannot be empty
raising errors from @_cdecl functions is not supported
@_cdecl functions cannot be asynchronous
only methods can be declared %0
%0 modifier cannot be used in protocols
protocol requirements implicitly have the same access as the protocol itself
'%select{private|fileprivate|internal|public|open}0(set)' modifier can only be applied to variables and subscripts
'%select{private|fileprivate|internal|public|%error}0(set)' modifier cannot be applied to %select{constants|read-only variables|read-only properties|read-only subscripts}1
%select{private|fileprivate|internal|public|%error}0 %select{variable|property|subscript}1 cannot have %select{%error|a fileprivate|an internal|a public|an open}2 setter
'%select{private|fileprivate|internal|public|open}0(set)' modifier is redundant for %select{a private|a fileprivate|an internal|a public|an open}2 %1
'%select{%error|fileprivate|internal|public|open}0' modifier conflicts with extension's default access of '%select{private|fileprivate|internal|public|%error}1'
'%select{%error|fileprivate|internal|public|%error}0' modifier is redundant for %1 declared in %select{a private (equivalent to fileprivate)|a fileprivate|an internal|a public|%error}2 extension
cannot declare %select{%error|a fileprivate|an internal|a public|an open}0 %1 in an extension with %select{private|fileprivate|internal|public|%error}2 requirements
extension of %select{private|fileprivate|internal|%error|%error}0 %1 cannot be declared %select{%error|fileprivate|internal|public|%error}2
extensions cannot use 'open' as their default access; use 'public'
only classes and overridable class members can be declared 'open'; use 'public'
'%0' attribute cannot be applied to this declaration
%0 modifier cannot be applied to this declaration
attribute does not apply to type
'optional' can only be applied to protocol members
'optional' can only be applied to members of an @objc protocol
'optional' requirements are an Objective-C compatibility feature; add '@objc'
'@objcMembers' attribute can only be applied to a class
'optional' cannot be applied to an initializer
protocol members can only be marked unavailable in an @objc protocol
stored property %0 requires an initial value%select{| or should be @NSManaged}1
stored properties %0 and %1 require initial values%select{| or should be @NSManaged}2
stored properties %0, %1, %select{and %2|%2, and others}3 require initial values%select{| or should be @NSManaged}4
%select{superclass|class}1 %0 requires all stored properties to have initial values%select{| or use @NSManaged}2
class %0 has no initializers
stored property %0 without initial value prevents synthesized initializers
stored properties %0 and %1 without initial values prevent synthesized initializers
stored properties %0, %1, %select{and %2|%2, and others}3 without initial values prevent synthesized initializers
standard library error: missing _unimplementedInitializer
standard library error: missing _undefined
reference to %0 %1 of %2 depends on '@objc' inference deprecated in Swift 4
default value inheritance via 'super' is only valid on the parameters of designated initializers
default value inheritance via 'super' can only be used when overriding a designated initializer
default value inheritance via 'super' requires that the corresponding parameter of the overridden designated initializer has a default value
corresponding parameter declared here
static property %0 produces an empty option set
use [] to silence this warning
duplicate version number for platform %0
@%0 is only applicable to top-level decl
need @available attribute for @%0
moved version from @%0 must after introduced OS version
alignment value must be a power of two
enum case %0 without associated value cannot be 'indirect'
enum case in 'indirect' enum cannot also be 'indirect'
%0 has no effect on non-public enums
variable with getter/setter cannot have an initial value
%0 with 'throws' or 'async' is not representable in Objective-C
%select{ERROR|static|class}1 stored properties not supported%select{ in this context| in generic types| in classes| in protocol extensions}0%select{|; did you mean 'static'?}2
non-member observing properties require an initializer
global '%select{var|let}0' declaration requires an initializer expression%select{ or an explicitly stated getter|}0
'%select{ERROR|static|class|}0 %select{var|let}1' declaration requires an initializer expression or an explicitly stated getter
add an initializer to silence this error
%select{%select{variable|constant}0|property}1 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}3|private or fileprivate}4|cannot be declared %select{in this context|fileprivate|internal|public|open}3}2 because its type uses %select{a private|a fileprivate|an internal|%error|%error}5 type
%select{%select{variable|constant}0|property}1 %select{should be declared %select{private|fileprivate|internal|%error|%error}5|should not be declared %select{in this context|fileprivate|internal|public|open}3}2 because its type uses %select{a private|a fileprivate|an internal|%error|%error}5 type
%select{%select{variable|constant}0|property}1 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}3|private or fileprivate}4|cannot be declared %select{in this context|fileprivate|internal|public|open}3}2 because its type %6 uses %select{a private|a fileprivate|an internal|%error|%error}5 type
%select{%select{variable|constant}0|property}1 %select{should be declared %select{private|fileprivate|internal|%error|%error}5|should not be declared %select{in this context|fileprivate|internal|public|open}3}2 because its type %6 uses %select{a private|a fileprivate|an internal|%error|%error}5 type
type referenced from a '@usableFromInline' %select{%select{variable|constant}0|property}1 must be '@usableFromInline' or public
type referenced from a '@usableFromInline' %select{%select{variable|constant}0|property}1 should be '@usableFromInline' or public
type referenced from a stored property in a '@frozen' struct must be '@usableFromInline' or public
type referenced from a '@usableFromInline' %select{%select{variable|constant}0|property}1 with inferred type %2 must be '@usableFromInline' or public
type referenced from a '@usableFromInline' %select{%select{variable|constant}0|property}1 with inferred type %2 should be '@usableFromInline' or public
type referenced from a stored property with inferred type %2 in a '@frozen' struct must be '@usableFromInline' or public
%select{property|global variable}0 declaration does not bind any variables
variable %0 is not bound by any pattern
assuming you mean '%0.%2'; did you mean '%1.%2' instead?
explicitly specify 'Optional' to silence this warning
use 'nil' to silence this warning
use '%0.%1' instead
use '%0' instead
%select{private|fileprivate|nested|local}0 class %1 has an unstable name when archiving via 'NSCoding'
for new classes, use '@objc' to specify a unique, prefixed Objective-C runtime name
for compatibility with existing archives, use '@objc' to record the Swift 3 runtime name
type %0 cannot be nested in generic function %1
type %0 cannot be nested in closure in generic context
type %0 cannot be nested in protocol %1
type %0 cannot be nested in protocol extension of %1
protocol %0 cannot be nested inside another declaration
'where' clause on non-generic member declaration requires a generic context
'where' clause cannot be applied to a non-generic top-level declaration
could not generate C++ types from the generic Swift types provided. The following Swift type(s) provided to '%0' could not be converted: %1.
type alias %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}1|private or fileprivate}3|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its underlying type uses %select{a private|a fileprivate|an internal|%error|%error}2 type
type alias %select{should be declared %select{private|fileprivate|internal|%error|%error}1|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its underlying type uses %select{a private|a fileprivate|an internal|%error|%error}2 type
type referenced from the underlying type of a '@usableFromInline' type alias must be '@usableFromInline' or public
type referenced from the underlying type of a '@usableFromInline' type alias should be '@usableFromInline' or public
subscript %select{must be declared %select{private|fileprivate|internal|%error|%error}1|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its %select{index|element type}3 uses %select{a private|a fileprivate|an internal|%error|%error}2 type
subscript %select{should be declared %select{private|fileprivate|internal|%error|%error}1|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its %select{index|element type}3 uses %select{a private|a fileprivate|an internal|%error|%error}2 type
%select{index type|element type}0 of a '@usableFromInline' subscript must be '@usableFromInline' or public
%select{index type|element type}0 of a '@usableFromInline' subscript should be '@usableFromInline' or public
%select{function|method|initializer}4 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}1|private or fileprivate}2|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its %select{parameter|result}5 uses %select{a private|a fileprivate|an internal|an '@_spi'|an '@_spi'}3%select{| API wrapper}6 type
%select{function|method|initializer}0 cannot be declared '@_spi' because its %select{parameter|result}1 uses %select{a private|a fileprivate|an internal|a public|an open}2 type%select{| that is not '@_spi'}3
%select{function|method|initializer}4 %select{should be declared %select{private|fileprivate|internal|%error|%error}1|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its %select{parameter|result}5 uses %select{a private|a fileprivate|an internal|%error|%error}3 %select{|API wrapper}6 type
the %select{parameter|result}1%select{| API wrapper}2 of a '@usableFromInline' %select{function|method|initializer}0 must be '@usableFromInline' or public
the %select{parameter|result}1%select{| API wrapper}2 of a '@usableFromInline' %select{function|method|initializer}0 should be '@usableFromInline' or public
%select{private|fileprivate|internal|%error|%error}0 %1 cannot be declared '@_spi' because only public and open declarations can be '@_spi'
protocol requirement %0 cannot be declared '@_spi' without a default implementation in a protocol extension
stored property %0 cannot be declared '@_spi' in a '@frozen' struct
'@_spi' import of %0 will not include any SPI symbols; %0 was built from the public interface at %1
an 'opaque' type must specify only 'Any', 'AnyObject', protocols, and/or a base class
property definition has inferred type %0, involving the 'some' return type of another declaration
non-nominal type %0 cannot be extended
extending a protocol composition is not supported; extending %0 instead
did you mean to extend the most specific type %0 instead?
%0 modifier cannot be used with extensions that declare protocol conformances
cannot extend a metatype %0
constrained extension must be declared on the unspecialized generic type %0 with constraints specified by a 'where' clause
extensions must not contain stored properties
Remove '=' to make %0 a computed property
trailing 'where' clause for extension of non-generic type %0
extension of protocol %0 cannot have an inheritance clause
extension of a generic Objective-C class cannot access the class's generic parameters at runtime
generic parameter used here
add '@objc' to allow uses of 'self' within the function body
extension of type %0 must be declared as an extension of %1
did you mean to extend %0 instead?
type %0 does not conform to protocol %1
'nil' cannot be used in context expecting type %0
cannot declare conformance to 'NSObjectProtocol' in Swift; %0 should inherit 'NSObject' instead
use of '=' in a boolean context, did you mean '=='?
%select{type %1|protocol %1 as a type}0 cannot conform to %select{%3|the protocol itself}2
only concrete types such as structs, enums and classes can conform to protocols
required by opaque return type of %0 %1
required by %0 %1 where %2 = %3
required by referencing %0 %1 on %2 where %3 = %4
%0 cannot be used as a type conforming to protocol %1 because %1 has static requirements
protocol %0 is broken; cannot derive conformance for type %1
%0 requires that %1 inherit from %2
requirement specified as %0 : %1%2
%0 requires the types %1 and %2 be equivalent
%0 requires that %1 conform to %2
referencing %0 %1 on %2 requires that %3 conform to %4
contextual member reference to %0 %1 requires 'Self' constraint in the protocol extension
missing same-type requirement on 'Self'
referencing %0 %1 on %2 requires that %3 be a class type
%0 %1 requires that %2 conform to %3
%0 %1 requires that %2 be a class type
return type of %0 %1 requires that %2 %select{conform to %3|be a class type}4
%0 %1 requires the types %2 and %3 be equivalent
referencing %0 %1 on %2 requires the types %3 and %4 be equivalent
%0 %1 requires that %2 inherit from %3
referencing %0 %1 on %2 requires that %3 inherit from %4
where %0 = %1
where %0 = %1, %2 = %3
requirement from conditional conformance of %0 to %1
wrapped type %0 satisfies this requirement; did you mean to unwrap?
candidate requires that %0 conform to %1 (requirement specified as %2 == %3%4)
candidate requires that the types %0 and %1 be equivalent (requirement specified as %2 == %3%4)
candidate requires that %1 inherit from %2 (requirement specified as %2 : %3%4)
requirement specified as %0 == %1%2
%0 requires that %1 be a class type
requirement specified as %0 : 'AnyObject'%2
non-class type %0 cannot conform to class protocol %1
Core Foundation class %0 cannot conform to @objc protocol %1 because Core Foundation types are not classes in Objective-C
class %0 cannot conform to @objc protocol %1 because the class is only visible via the Objective-C runtime
type %0 cannot conditionally conform to protocol %1 because the type uses the Objective-C generics model
type %0 cannot conditionally conform to @objc protocol %1 because Objective-C does not support conditional conformances
conformance of %select{class from generic context|generic class}0 %1 to @objc protocol %2 cannot be in an extension
conditional conformance of type %0 to protocol %1 does not imply conformance to inherited protocol %2
did you mean to explicitly state the conformance with different bounds?
did you mean to explicitly state the conformance with relaxed bounds?
did you mean to explicitly state the conformance with the same bounds?
did you mean to explicitly state the conformance like '%0where ...'?
type %0 cannot conform to protocol %1 because it has requirements that cannot be satisfied
type %0 cannot conform to protocol %1 (compiled with Swift %2) because it has requirements that could not be loaded in Swift %3
%0 requirement %1 cannot add constraint '%2%select{:|:| ==|:}3 %4' on 'Self'
%0 %1 has different argument labels from those required by protocol %2 (%3)
initializer requirement %0 can only be satisfied by a 'required' initializer in%select{| the definition of}1 non-final class %2
non-failable initializer requirement %0%select{| in Objective-C protocol}1 cannot be satisfied by a failable initializer ('init%select{?|!}1')
protocol %0 requirement %1 cannot be satisfied by a non-final class (%2) because it uses 'Self' in a non-parameter, non-result type position
%0 %1 in non-final class %2 cannot be used to satisfy requirement %3 %4 (in protocol %5) due to same-type requirement involving 'Self'
consider weakening the same-type requirement %0 == %1 to a superclass requirement
%select{%error|method|property|subscript}0 %1 in non-final class %2 must %select{%error|return|specify type|return}0 'Self' to conform to protocol %3
%select{%error|method|%error|subscript}0 %1 in non-final class %2 cannot be implemented in a protocol extension because it returns 'Self' and has associated type requirements
%select{initializer %1|method %1|%select{|setter for }2property %1|subscript%select{| setter}2}0 must be declared %select{%error|fileprivate|internal|public|%error}3 because it matches a requirement in %select{private|fileprivate|internal|public|%error}4 protocol %5
%select{initializer %1|method %1|%select{|setter for }2property %1|subscript%select{| setter}2}0 must be as accessible as its enclosing type because it matches a requirement in protocol %5
%0 %1 must be declared %select{%error|fileprivate|internal|public|%error}2 because it matches a requirement in %select{%error|fileprivate|internal|public|%error}2 protocol %3
%0 %1 must be as accessible as its enclosing type because it matches a requirement in protocol %3
%0 %1 must be declared '@usableFromInline' because it matches a requirement in protocol %2
%0 %1 should be declared '@usableFromInline' because it matches a requirement in protocol %2
type %0 involving Objective-C type parameter%select{| %1}2 cannot be used for associated type %3 of protocol %4
mark the %0 as '%select{%error|fileprivate|internal|public|%error}1' to satisfy the requirement
move the %0 to another extension where it can be declared '%select{%error|%error|internal|public|%error}1' to satisfy the requirement
default type %0 for associated type %1 does not satisfy constraint %2: %3
associated type %0 has default type %1 written here
%select{protocol must be declared %select{%select{private|fileprivate|internal|%error|%error}1|private or fileprivate}4 because %select{it refines|its 'where' clause uses}2|%select{in this context|fileprivate|internal|public|%error}1 %select{protocol cannot refine|protocol's 'where' clause cannot use}2}0 %select{a private|a fileprivate|an internal|%error|%error}3 %5
%select{protocol should be declared %select{private|fileprivate|internal|%error|%error}1 because %select{it refines|its 'where' clause uses}2|%select{in this context|fileprivate|internal|public|%error}1 %select{protocol should not refine|protocol's 'where' clause should not use}2}0 %select{a private|a fileprivate|an internal|%error|%error}3 %5
protocol %select{refined|used}0 by '@usableFromInline' protocol must be '@usableForInline' or public
protocol %select{refined|used}0 by '@usableFromInline' protocol should be '@usableForInline' or public
protocols cannot require properties to be immutable; declare read-only properties by using 'var' with a '{ get }' specifier
property in protocol must have explicit { get } or { get set } specifier
type %0 does not conform to inherited protocol %1
protocol requires %select{initializer %1|function %1|property %1|subscript}0 with type %2%select{|; do you want to add a stub?}3
do you want to add protocol stubs?
multiple matching %select{initializers named %1|functions named %1|properties named %1|subscript operators}0 with type %2
protocol requires nested type %0; do you want to add it?
default type %0 for associated type %1 (from protocol %2) does not %select{inherit from|conform to}4 %3
associated type in %select{a private|a fileprivate|an internal|a public|%error}0 protocol uses %select{a private|a fileprivate|an internal|%error|%error}1 type in its %select{default definition|requirement}2 
type referenced from a %select{default definition|requirement}0 of an associated type in a '@usableFromInline' protocol must be '@usableFromInline' or public
type referenced from a %select{default definition|requirement}0 of an associated type in a '@usableFromInline' protocol should be '@usableFromInline' or public
unable to infer associated type %0 for protocol %1
candidate would match and infer %0 = %1 if %1 %select{inherited from|conformed to}3 %2
candidate can not infer %0 = %1 because %1 is not a nominal type and so can't conform to %2
candidate can not infer %0 = %1 because %1 is not a class type and so can't inherit from %2
ambiguous inference of associated type %0: %1 vs. %2
matching requirement %0 to this declaration inferred associated type to %1
using associated type default %0
multiple matching types named %0
candidate exactly matches%0
rename to %0 to satisfy this requirement%1
candidate is not %select{an initializer|a function|a variable|a subscript}0
candidate has non-matching type %0%1
candidate would match if %0 %select{conformed to|subclassed|was the same type as}2 %1
candidate %select{type has|result type has|parameter type has|parameter types have|result and parameter types have}0 incorrect optionality%1
%select{type|result|parameter|parameters|result and parameters}0 of %1 %select{has|has|has|have|have|}0 different optionality than required by protocol %2
%select{type|result|parameter|parameters|result and parameters}0 of %1 %select{has|has|has|have|have|}0 different optionality than expected by protocol %2
candidate operates on %select{a type|an instance}0, not %select{an instance|a type}0 as required
candidate is %select{|prefix, |postfix, }1not %select{prefix|postfix}0 as required
candidate is marked %0 but protocol does not allow it
candidate is not settable, but protocol requires it
candidate is not 'rethrows', but protocol requires it
candidate is 'rethrows' via a conformance, but the protocol requirement is not from a '@rethrows' protocol
candidate throws, but protocol does not allow it
candidate is explicitly '@nonobjc'
candidate is an enum case with associated values, but protocol does not allow it
possibly intended match
possibly intended match %0 does not %select{inherit from|conform to}2 %1
candidate references itself
%select{|class }0%1 declares conformance to protocol %2 here
%select{%0 inherits conformance to protocol %2 from superclass|%0 declares conformance to protocol %2|%0 implicitly conforms to protocol %2 (via conformance to %3)|%0 implicitly conforms to protocol %2}1 here
unavailable %0 %1 was used to satisfy a requirement of protocol %2
redundant conformance of %0 to protocol %1
conflicting conformance of %0 to protocol %1; there cannot be more than one conformance, even with different conditional bounds
conformance of %0 to protocol %1 was already stated in %select{the protocol's|the type's}2 module %3
conformance of %0 to protocol %1 conflicts with that stated in %select{the protocol's|the type's}2 module %3 and will be ignored; there cannot be more than one conformance, even with different conditional bounds
%0 %1 will not be used to satisfy the conformance to %2
%0 %1 nearly matches %select{defaulted|optional}2 requirement %3 of protocol %4
add '@objc' to provide an Objective-C entrypoint
move %0 to %select{an|another}1 extension to silence this warning
add '@nonobjc' to silence this %select{warning|error}0
make %0 %select{ERROR|private|private|non-public|non-public}1 to silence this warning
type conforming to 'StringInterpolationProtocol' does not implement a valid 'appendInterpolation' method
'appendInterpolation' method will never be used because it is static
'appendInterpolation' method does not return 'Void' or have a discardable result
'appendInterpolation' method is %select{private|fileprivate|internal|public|open}0, but %1 is %select{private|fileprivate|internal|public|open}2
associated type %0 can only be used with a concrete type or generic parameter base
type alias %0 can only be used with a concrete type or generic parameter base
@objc protocol %0 cannot refine non-@objc protocol %1
constraint with subject type of 'Self' is not supported; consider adding requirement to protocol inheritance clause instead
non-protocol, non-class type %0 cannot be used within a protocol-constrained type
protocol-constrained type cannot contain class %0 because it already contains class %1
type %0 constrained to non-protocol, non-class type %1
use '%0 == %1' to require '%0' to be '%1'
type %0 in conformance requirement does not refer to a generic parameter or associated type
neither type in same-type constraint (%0 or %1) refers to a generic parameter or associated type
same-type requirement makes generic parameters %0 and %1 equivalent
same-type requirement makes generic parameter %0 non-generic
%0 %1 references itself
same-type constraint %0 == %1 is recursive
superclass constraint %0 : %1 is recursive
same-type constraint type %0 does not conform to required protocol %1
generic signature requires types %0 and %1 to be the same
redundant conformance constraint %0 : %1
conformance constraint %0 : %1 implied here
requirement involves recursion that is not currently supported
%select{generic parameter |protocol |}0%1 cannot be equal to both %2 and %3
redundant same-type constraint %0 == %1
same-type constraint %1 == %2 %select{written here|implied here|inferred from type here}0
type %0 cannot be a subclass of both %1 and %2
constraint conflicts with %0 : %1
redundant superclass constraint %0 : %1
superclass constraint %0 : %1 implied here
type %0 has conflicting constraints %1 and %2
redundant constraint %0 : %1
constraint %0 : %1 implied here
previous same-type constraint %1 == %2 %select{written here|implied here|inferred from type here}0
redeclaration of associated type %0 from protocol %1 is better expressed as a 'where' clause on the protocol
typealias overriding associated type %0 from protocol %1 is better expressed as same-type constraint on the protocol
associated type %0 is redundant with type %0 declared in inherited %1 %2
associated type %0 cannot be declared inside '@objc' protocol %1
%0 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}3|private or fileprivate}4|cannot be declared %select{in this context|fileprivate|internal|public|open}2}1 because its generic %select{parameter|requirement}5 uses %select{a private|a fileprivate|an internal|an '@_spi'|an '@_spi'}3 type
%0 %select{should be declared %select{private|fileprivate|internal|%error|%error}3|should not be declared %select{in this context|fileprivate|internal|public|open}2}1 because its generic %select{parameter|requirement}5 uses %select{a private|a fileprivate|an internal|an '@_spi'|an '@_spi'}3 type
type referenced from a generic %select{parameter|requirement}1 of a '@usableFromInline' %0 must be '@usableFromInline' or public
type referenced from a generic %select{parameter|requirement}1 of a '@usableFromInline' %0 should be '@usableFromInline' or public
declaration %0 cannot override more than one superclass declaration
declaration %0 has different argument labels from any potential overrides
potential overridden %0 %1 here
%select{|non-@objc}0 %2 %3 %select{is declared in extension of %4 and cannot be overridden|declared in %4 cannot be overridden from extension}1
overridden declaration is here
add '@objc' to make this declaration overridable
overriding declaration requires an 'override' keyword
implicit override should be marked with 'override' or suppressed with '@_nonoverride'
%0 has already been overridden
%0 previously overridden here
cannot override %0 which has been marked unavailable%select{|: %1}1
remove 'override' modifier to declare a new %0
overriding %0 must be as available as declaration it overrides
overriding %0 for %1 must be as available as declaration it overrides
cannot override immutable 'let' property %0 with the getter of a 'var'
%select{|setter of }0overriding %1 must be as accessible as %select{its enclosing type|the declaration it overrides}2
overriding non-open %0 outside of its defining module
method does not override any method from its %select{parent protocol|superclass}0
property does not override any property from its %select{parent protocol|superclass}0
subscript does not override any subscript from its %select{parent protocol|superclass}0
initializer does not override a designated initializer from its %select{parent protocol|superclass}0
failable initializer %0 cannot override a non-failable initializer
non-failable initializer %0 overridden here
attempt to override property here
attempt to override subscript here
attempt to override convenience initializer here
type does not match superclass %0 with type %1
type does not match superclass initializer with %select{no arguments|argument %1|arguments %1}0
'override' can only be specified on class members
'@_nonoverride' can only be specified on class or protocol members
'override' cannot be combined with '@_nonoverride'
property %0 with type %1 cannot override a property with type %2
cannot override with a stored property %0
cannot observe read-only property %0; it can't change
cannot override mutable property with read-only property %0
argument labels for %select{method|initializer}0 %1 do not match those of overridden %select{method|initializer}0 %2
cannot override %0 property with %1 property
cannot override a Self return type with a non-Self return type
cannot override a non-dynamic class declaration from an extension
cannot override non-%1 %0 with %1 %0
overriding a throwing @objc %select{method|initializer}0 with a non-throwing %select{method|initializer}0 is not supported
satisfying a throwing @objc %select{method|initializer}0 with a non-throwing %select{method|initializer}0 is not supported
cannot override %0 %select{parameter|index}1 of type %2 with non-optional type %3
cannot override %0 %select{result|element}1 type %2 with optional type %3
overriding %0 parameter of type %1 with implicitly unwrapped optional type %2
overriding %0 optional result type %1 with implicitly unwrapped optional type %2
remove '!' to make the parameter required
use '?' to make the result optional
add parentheses to silence this warning
cannot override mutable property %0 of type %1 with covariant type %2
cannot override mutable subscript of type %0 with covariant type %1
static declarations are already final
%0 cannot be declared both 'final' and 'open'
%select{'let' properties|members of 'final' classes|static declarations}0 are implicitly 'final'; use 'public' instead of 'open'
override of %0 %1 from extension of %2 depends on deprecated inference of '@objc'
overridden method %0 has generic signature %1 which is incompatible with base method's generic signature %2; expected generic signature to be %3
duplicate inheritance from %0
redundant inheritance from 'AnyObject' and Swift 3 'class' keyword
inheritance from class-constrained protocol composition type %0
using 'class' keyword to define a class-constrained protocol is deprecated; use 'AnyObject' instead
multiple inheritance from classes %0 and %1
inheritance from non-protocol, non-class type %0
inheritance from non-protocol type %0
superclass %0 must appear first in the inheritance clause
cannot inherit from non-open class %0 outside of its defining module
superclass is declared here
superclass %0 of open class must be open
inheritance from a final class %0
inheritance from a generic Objective-C class %0 must bind type parameters of %0 to specific concrete types
cannot inherit from class %0 because it has overridable members that could not be loaded
cannot inherit from class %0 (compiled with Swift %1) because it has overridable members that could not be loaded in Swift %2
cannot inherit from Core Foundation type %0
cannot inherit from class %0 because it is only visible via the Objective-C runtime
enum case in %select{a private|a fileprivate|an internal|a public|%error}0 enum uses %select{a private|a fileprivate|an internal|%error|%error}1 type
type of enum case in '@usableFromInline' enum must be '@usableFromInline' or public
type of enum case in '@usableFromInline' enum should be '@usableFromInline' or public
enums must not contain stored properties
multiple enum raw types %0 and %1
raw type %0 must appear first in the enum inheritance clause
raw type %0 is not expressible by a string, integer, or floating-point literal
RawRepresentable conformance cannot be synthesized because raw type %0 is not Equatable
%0 declares raw type %1, but does not conform to RawRepresentable and conformance could not be synthesized
%0 declares raw type %1, which implies RawRepresentable
enum %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}1|private or fileprivate}3|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its raw type uses %select{a private|a fileprivate|an internal|%error|%error}2 type
enum %select{should be declared %select{private|fileprivate|internal|%error|%error}1|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its raw type uses %select{a private|a fileprivate|an internal|%error|%error}2 type
type referenced from the raw type of a '@usableFromInline' enum must be '@usableFromInline' or public
type referenced from the raw type of a '@usableFromInline' enum should be '@usableFromInline' or public
an enum with no cases cannot declare a raw type
enum case cannot have a raw value if the enum does not have a raw type
enum with raw type cannot have cases with arguments
declared raw type %0 here
'@objc' enum must declare an integer raw type
'@objc' enum raw type %0 is not an integer type
enum case must declare a raw value when the preceding raw value is not an integer
enum cases require explicit raw values when the raw type is not expressible by integer or string literal
raw value for enum case is not unique
use of '%0' literal as raw value for enum case is not supported
raw value previously used here
raw value auto-incremented from here
raw value implicitly auto-incremented from zero
construct %0 from unwrapped %1 value
cannot use %0 %1 %select{here|as property wrapper here|as result builder here|in an extension with public or '@usableFromInline' members|in an extension with conditional conformances}2; %select{%3 has been imported as implementation-only|it is an SPI imported from %3|it is SPI}4
cannot use %0 %1 %select{in SPI|as property wrapper in SPI|as result builder in SPI|in an extension with public or '@usableFromInline' members|in an extension with conditional conformances}2; %select{%3 has been imported as implementation-only}4
cannot use conformance of %0 to %1 %select{here|as property wrapper here|as result builder here|in an extension with public or '@usableFromInline' members|in an extension with conditional conformances}2; %select{%3 has been imported as implementation-only|the conformance is declared as SPI in %3|the conformance is declared as SPI}4
in associated type %0 (inferred as %1)
cannot export the underlying C type of the function type %0; it may use anonymous types or types defined outside of a module
couldn't instantiate a C++ class template
%0 inconsistently imported as implementation-only
imported as implementation-only here
private module %0 is imported publicly from the public module %1
'@_implementationOnly' can only be used on overrides
'@_implementationOnly' override must have the same type as the declaration it overrides (%0)
override of '@_implementationOnly' %0 should also be declared '@_implementationOnly'
override of %0 imported as implementation-only must be declared '@_implementationOnly'
implementation of %0 for non-final class cannot be automatically synthesized in extension because initializer requirement %1 can only be satisfied by a 'required' initializer in the class definition
extension outside of file declaring %0 %1 prevents automatic synthesis of %2 for protocol %3
AdditiveArithmetic protocol is broken: unexpected requirement
CaseIterable protocol is broken: unexpected requirement
RawRepresentable protocol is broken: unexpected requirement
Comparable protocol is broken: unexpected requirement
Equatable protocol is broken: unexpected requirement
Hashable protocol is broken: unexpected requirement
Hashable protocol is broken: Hasher type not found
Error protocol is broken: unexpected requirement
Int type is broken: does not conform to Hashable
Int type is broken: does not conform to ExpressibleByIntegerLiteral
no overload of '<' for Int
no overload of '==' for Int
CodingKey protocol is broken: unexpected requirement
Encodable protocol is broken: unexpected requirement
Decodable protocol is broken: unexpected requirement
Differentiable protocol is broken: unexpected requirement
stored property %0 has no derivative because %1 does not conform to 'Differentiable'; add an explicit '@noDerivative' attribute%select{|, or conform %2 to 'AdditiveArithmetic'}3
synthesis of the 'Differentiable.move(by:)' requirement for %1 requires 'wrappedValue' in property wrapper %0 to be mutable or have a non-mutating 'move(by:)'; add an explicit '@noDerivative' attribute%select{|, or conform %1 to 'AdditiveArithmetic'}2
synthesis of the 'Differentiable.move(by:)' requirement for %0 requires all stored properties not marked with `@noDerivative` to be mutable or have a non-mutating 'move(by:)'; use 'var' instead, or add an explicit '@noDerivative' attribute %select{|, or conform %0 to 'AdditiveArithmetic'}1
CodingKey case %0 does not match any stored properties
cannot automatically synthesize %0 because %1 does not conform to %0
cannot automatically synthesize %0 because %1 does not have a matching CodingKey and does not have a default value
cannot automatically synthesize %0 because 'CodingKeys' is not an enum
cannot automatically synthesize %0 because 'CodingKeys' does not conform to CodingKey
cannot automatically synthesize %0 because superclass does not have a callable %1
cannot automatically synthesize %0 because implementation would need to call %1, which is not designated
cannot automatically synthesize %0 because implementation would need to call %1, which is inaccessible due to '%select{private|fileprivate|internal|%error|%error}2' protection level
cannot automatically synthesize %0 because implementation would need to call %1, which is failable
did you mean to override 'init(from:)'?
did you mean to override 'init(from:)' and 'encode(to:)'?
cannot automatically synthesize %0 because %1 has duplicate case name %2
cannot automatically synthesize %0 for %1 because user defined parameter name %2 in %3 conflicts with automatically generated parameter name
immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
set the initial value via the initializer or explicitly define a CodingKeys enum %select{including|without}0 a %1 case to silence this warning
set the initial value via the initializer or remove the %0 case from the CodingKeys enum to silence this warning
make the property mutable instead
%select{associated value|stored property}0 type %1 does not conform to protocol %2, preventing synthesized conformance of %3 to %2
automatic synthesis of '%0' is not supported for %select{classes|structs}1
enum declares raw type %0, preventing synthesized conformance of %1 to %2
%select{global|local}0 function cannot return 'Self'
covariant 'Self' or 'Self?' can only appear as the type of a property, subscript or method result; did you mean '%0'?
mutable property cannot have covariant 'Self' type
stored property cannot have covariant 'Self' type
mutable subscript cannot have covariant 'Self' type
covariant 'Self' or 'Self?' can only appear at the top level of property type
covariant 'Self' or 'Self?' can only appear at the top level of subscript element type
covariant 'Self' or 'Self?' can only appear at the top level of method result type
covariant 'Self' type cannot be referenced from a stored property initializer
covariant 'Self' type cannot be referenced from a default argument expression
%0 may only be used on '%1' declarations
'%0' must not be used on variadic parameters
'%0' must not be used on subscript parameters
ambiguous reference to %0 in '@%1' attribute
%0 overrides a 'final' %1
cannot override %0
only classes and class members may be marked with 'final'
'final' may only be applied to classes, properties, methods, and subscripts
'final' cannot be applied to accessors, it must be put on the %select{var|let|subscript}0
override of 'rethrows' %select{method|initializer}0 should also be 'rethrows'
'rethrows' function must take a throwing function argument
override of 'reasync' %select{method|initializer}0 should also be 'reasync'
'reasync' function must take an 'async' function argument
@autoclosure attribute only applies to function types
'@convention(%0)' attribute is not allowed on '@autoclosure' types
argument type of @autoclosure parameter must be '()'
@escaping attribute may only be used in function parameter position
closure is already escaping in optional type argument
@_nonEphemeral attribute only applies to pointer types
@NSManaged only allowed on an instance property or method
@NSManaged not allowed on %select{computed|observing|addressed}0 properties
@NSManaged not allowed on a 'let' property
@NSManaged property cannot have an initial value
@NSManaged property cannot also be marked @NSCopying
@NSManaged method cannot have a body; it must be provided at runtime
@NSCopying may only be used on properties in classes
@NSCopying requires property to be mutable
@NSCopying is only valid on stored properties
@NSCopying is only valid with types that conform to the NSCopying protocol
%select{'UIApplicationMain'|'NSApplicationMain'|'main'}0 class must conform to the %select{'UIApplicationDelegate'|'NSApplicationDelegate'}0 protocol
generic %select{'UIApplicationMain'|'NSApplicationMain'|'main'}0 %select{classes|classes|types}0 are not supported
%select{'UIApplicationMain'|'NSApplicationMain'|'main'}0 attribute can only apply to one %select{class|class|type}0 in a module
%select{'UIApplicationMain'|'NSApplicationMain'|'main'}0 attribute cannot be used in a module that contains top-level code
top-level code defined in this source file
%0 is annotated with @main and must provide a main static function of type () -> Void or () throws -> Void.
'lazy' cannot be used on a let
'lazy' cannot be used on a computed property
'lazy' cannot be used on an already-lazy global
'lazy' cannot be used on a protocol requirement
lazy properties must have an initializer
'lazy' cannot destructure an initializer
lazy properties cannot be %0
access to the underlying storage of a lazy property is not allowed
@LLDBDebuggerSupport may only be used when debugger support is on
protocol %0 has no member %1
non-protocol type in @_implements attribute
containing type %0 does not conform to protocol %1
%0 does not have expected type %1
duplicate '@differentiable' attribute with same parameters
other attribute declared here
%0 is not defined in the current type context
registered derivative %0 must be a 'func' declaration
class member derivative must be final
derivative function %0 is required to either be public or '@usableFromInline' because the original function %1 is public or '@usableFromInline'
'@differentiable' attribute on protocol requirement cannot specify 'where' clause
'@differentiable' attribute cannot be declared on class members returning 'Self'
'@differentiable' attribute cannot be declared on 'init' in a non-final class; consider making %0 final
empty 'where' clause in '@differentiable' attribute
'where' clause is valid only when original function is generic %0
'@differentiable' attribute does not yet support layout requirements
overriding declaration is missing attribute '%0'
candidate is missing explicit '%0' attribute to satisfy requirement %1 (in protocol %3); explicit attribute is necessary because candidate is declared in a different type context or file than the conformance of %2 to %3
'@derivative(of:)' attribute requires function to return a two-element tuple; first element must have label 'value:' and second element must have label 'pullback:' or 'differential:'
'@derivative(of:)' attribute requires function to return a two-element tuple; first element must have label 'value:'
'@derivative(of:)' attribute requires function to return a two-element tuple; second element must have label 'pullback:' or 'differential:'
'@derivative(of:)' attribute requires function to return a two-element tuple; first element type %0 must conform to 'Differentiable'
function result's %0 type does not match %1
%0 defined here
derivative not in the same file as the original function
cannot register derivative for stored property %0
cannot register derivative for class member %0 returning 'Self'
cannot register derivative for 'init' in a non-final class; consider making %0 final
cannot register derivative for %0
cannot yet register derivative for class property or subscript setters
cannot yet register derivative default implementation for protocol requirements
a derivative already exists for %0
derivative function must have same access level as original function; derivative function %2 is %select{private|fileprivate|internal|public|open}3, but original function %0 is %select{private|fileprivate|internal|public|open}1
mark the derivative function as '%select{private|fileprivate|internal|@usableFromInline|@usableFromInline}0' to match the original function
unexpected derivative function declaration; %0 requires the derivative function %1 to be %select{an instance|a 'static'}2 method
original function %0 is %select{an instance|a 'static'}1 method
make derivative function %0 %select{an instance|a 'static'}1 method
cannot transpose with respect to original %select{result|parameter}1 '%0' that does not conform to 'Differentiable' and satisfy '%0 == %0.TangentVector'
could not find function %0 with expected type %1
cannot use named 'wrt' parameters in '@transpose(of:)' attribute, found %0
the transpose of an instance method must be a 'static' method in the same type when 'self' is a linearity parameter
the transpose is declared in %0 but the original function is declared in %1
unexpected transpose function declaration; %0 requires the transpose function %1 to be %select{an instance|a 'static'}2 method
make transpose function %0 %select{an instance|a 'static'}1 method
referenced declaration %0 is ambiguous
candidate %0 found here
referenced declaration %0 could not be resolved
candidate %0 is not a 'func', 'init', 'subscript', or 'var' computed property declaration
candidate %0 does not have a %1
candidate %0 does not have %select{expected type|type equal to or less constrained than}2 %1
candidate %0 is not defined in the current type context
cannot differentiate void function %0
cannot differentiate functions with both an 'inout' parameter and a result
can only differentiate functions with results that conform to 'Differentiable', but %0 does not conform to 'Differentiable'
cannot differentiate functions returning opaque result types
%0 has no parameters to differentiate with respect to
unknown parameter name %0
'self' parameter is only applicable to instance methods
'self' parameter must come first in the parameter list
parameters must be specified in original order
parameter index is larger than total number of parameters
no differentiation parameters could be inferred; must differentiate with respect to at least one parameter conforming to 'Differentiable'
cannot differentiate with respect to 'inout' parameter (%0)
can only differentiate with respect to parameters that conform to 'Differentiable', but %0 does not conform to 'Differentiable'
'%0' should be attached to a non-async completion-handler function
function declared async
completion handler must return 'Void'
%0 is not a function type
completion handler must%select{ not|}0 be '@%1'
completion handler index out of range of the function parameters
ambiguous '%0' async function %1
no corresponding async function named %0
consider using asynchronous alternative function
found this candidate
found candidate with type %0
standard library error: _MaxBuiltinFloatType is not properly defined
module %0 has no member named %1
'super' members cannot be referenced in a root class
'init' can only refer to the initializers of 'self'%select{| or 'super'}0
initializer delegation can only occur within an initializer
initializer cannot both delegate ('self.init') and chain to a superclass initializer ('super.init')
previous %select{delegation|chaining}0 call is here
convenience initializer for %0 must delegate (with 'self.init') rather than chaining to a superclass initializer (with 'super.init')
designated initializer for %0 cannot delegate (with 'self.init'); did you mean this to be a convenience initializer?
designated initializer for %0 cannot delegate (with 'self.init')
delegation occurs here
must call a designated initializer of the superclass %0
a non-failable initializer cannot %select{delegate|chain}0 to failable initializer %1 written with 'init?'
force potentially-failing result with '!'
propagate the failure with 'init?'
a non-failable initializer cannot use 'try?' to %select{delegate|chain}0 to another initializer
force potentially-failing result with 'try!'
%select{initializer delegation ('self.init')|initializer chaining ('super.init')}0 cannot be nested in another %select{expression|statement}1
convenience initializer is declared here
designated initializer cannot be declared in an extension of %0; did you mean this to be a convenience initializer?
designated initializer cannot be declared in an extension of %0
initializers in %0 are not marked with 'convenience'
convenience initializer not allowed in non-class type %0
convenience initializers are not supported in extensions of CF types
constructing an object of class type %0 with a metatype value must use a 'required' initializer
selected %select{non-required|implicit}0 initializer %1
value of type %0 is a protocol; it cannot be instantiated
protocol type %0 cannot be instantiated
operator is not a known binary operator
adjacent operators are in non-associative precedence group %0
adjacent operators are in unordered precedence groups %0 and %1
broken standard library: missing builtin precedence group %0
comparison with '.nan' using %0 is always %select{false|true}1, use '%2.isNaN' to check if '%3' %select{is not a number|is a number}1
comparison with '.nan' using %0 is always %select{false|true}1
'.nan' %0 '.nan' is always %select{false|true}1
'%select{try|try!|try?|await}0' cannot appear to the right of a non-assignment operator
'%select{try|try!|try?|await}0' following conditional operator does not cover everything to its right
'%select{try|try!|try?|await}0' following assignment operator does not cover everything to its right
type 'Bool' is broken
treating a forced downcast to %0 as optional will never produce 'nil'
use 'as?' to perform a conditional downcast to %0
add parentheses around the cast to silence this warning
conditional downcast to CoreFoundation type %0 will always succeed
did you mean to explicitly compare the CFTypeIDs of %0 and %1?
optional type %0 cannot be used as a boolean; test for '%select{!|=}1= nil' instead
type %0 cannot be used as a boolean; test for '%select{!|=}1= 0' instead
string interpolation requires the protocol 'ExpressibleByStringInterpolation' to be defined
protocol 'ExpressibleByStringInterpolation' is broken
object literal protocol is broken
'_' can only appear in a pattern or on the left side of an assignment
using '_' to ignore the result of a Void-returning function is redundant
heterogeneous collection literal could only be inferred to %0; add explicit type annotation if this is intentional
empty collection literal requires an explicit type
reference to member %0 cannot be resolved without a contextual type
cannot infer contextual base in reference to member %0
'nil' requires a contextual type
'nil' literal cannot be force unwrapped
type of expression is ambiguous without more context
failed to produce diagnostic for expression; please submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the project
missing protocol %0
protocol 'ExpressibleByNilLiteral' is broken
protocol '_ExpressibleByBuiltinIntegerLiteral' is broken
protocol 'ExpressibleByIntegerLiteral' is broken
protocol '_ExpressibleByBuiltinFloatLiteral' is broken
protocol 'ExpressibleByFloatLiteral' is broken
protocol '_ExpressibleByBuiltinBooleanLiteral' is broken
protocol 'ExpressibleByBooleanLiteral' is broken
protocol '_ExpressibleByBuiltinUnicodeScalarLiteral' is broken
protocol 'ExpressibleByUnicodeScalarLiteral' is broken
protocol '_ExpressibleByBuiltinExtendedGraphemeClusterLiteral' is broken
protocol 'ExpressibleByExtendedGraphemeClusterLiteral' is broken
protocol '_ExpressibleByBuiltinStringLiteral' is broken
protocol 'ExpressibleByStringLiteral' is broken
dictionary of type %0 cannot be %select{used|initialized}1 with array literal
did you mean to use a dictionary literal instead?
use [:] to get an empty dictionary literal
contextual type %0 cannot be used with dictionary literal
cannot explicitly specialize a generic function
cannot specialize a non-generic definition
cannot specialize non-generic type %0
generic type %0 specialized with %select{too many|too few}3 type parameters (got %2, but expected %1)
reference to generic type %0 requires arguments in <...>
you cannot use a placeholder type here
Unsafe%0Pointer<Void> has been replaced by Unsafe%0RawPointer
ambiguous use of %0
ambiguous use of operator %0
%select{use an explicit argument label instead of a trailing closure|avoid using a trailing closure}0 to call %1
partial application of %select{'mutating' method|'super.init' initializer chain|'self.init' initializer delegation|'super' instance method with metatype base}0 is not allowed
partial application of %select{'mutating' method|'super.init' initializer chain|'self.init' initializer delegation|'super' instance method with metatype base}0 is not allowed; calling the function has undefined behavior and will be an error in future Swift versions
assigning a variable to itself
assigning a property to itself
reference to property %0 in closure requires explicit use of 'self' to make capture semantics explicit
call to method %0 in closure requires explicit use of 'self' to make capture semantics explicit
capture 'self' explicitly to enable implicit 'self' in this closure
reference 'self.' explicitly
variable other than 'self' captured here under the name 'self' does not enable implicit 'self'
weak capture of 'self' here does not enable implicit 'self'
implicit use of 'self' in closure; use 'self.' to make capture semantics explicit
attempting to %select{access|modify}1 %0 within its own %select{getter|setter}1
access 'self' explicitly to silence this warning
attempting to store to property %0 within its own willSet, which is about to be overwritten by the new value
expected module member name after module name
expected member name or constructor call after type name
add arguments after the type to construct a value of the type
use '.self' to reference the type object
use of %0 treated as a reference to %1 in %2 %3
use 'self.' to silence this warning
use '%0' to reference the %1
use '%0' to reference the %1 in module %2
use of %0 as reference to %1 in %2 %3 will change in future versions of Swift to reference %4 in %5 %6 which comes via a conditional conformance
use '%0' to continue to reference the %1
referencing %0 as a function value is not implemented
'unsafeBitCast' from non-escaping function type %0 to escaping function type %1 is undefined; use 'withoutActuallyEscaping' to temporarily escape a function
'unsafeBitCast' from function type %0 to %1 changes @convention and is undefined; use an implicit conversion to change conventions
'unsafeBitCast' from %0 to %1 can be replaced with 'unsafeDowncast'
'unsafeBitCast' from %0 to %1 is unnecessary and can be removed
'unsafeBitCast' from %0 to %1 can be replaced with %2 initializer
'unsafeBitCast' from %0 to %1 changes pointee type and may lead to undefined behavior; use the 'withMemoryRebound' method on %0 to rebind the type of memory
'unsafeBitCast' from %0 to %1 gives a type to a raw pointer and may lead to undefined behavior
use the 'assumingMemoryBound' method if the pointer is known to point to an existing value or array of type %0 in memory
use the 'bindMemory' method to assign type %0 to uninitialized raw memory
'unsafeBitCast' from %0 to %1 can be replaced with 'bitPattern:' initializer on %1
'unsafeBitCast' from %0 to %1 can be replaced with 'bitPattern' property on %0
'unsafeBitCast' from %0 to %1 can be replaced with %1 initializer
left side of nil coalescing operator '??' has non-optional type %0, so the right side is never used
comparing non-optional value of type %0 to 'nil' always returns %select{false|true}1
non-optional expression of type %0 used in a check for optionals
explicitly specified type %0 adds an additional level of optional to the initializer, making the optional check always succeed
pattern match introduces an implicit promotion from %0 to %1
expression implicitly coerced from %0 to %1
coercion of implicitly unwrappable value of type %0 to %1 does not unwrap optional
implicitly unwrapped %0 %1 declared here
%0 %1 with implicitly unwrapped result type is declared here
provide a default value to avoid this warning
force-unwrap the value to avoid this warning
explicitly cast to %0 with '%1' to silence this warning
string interpolation produces a debug description for %select{an optional|a function}0 value; did you mean to make this explicit?
use 'String(describing:)' to silence this warning
parameter %1 is implicitly %select{non-escaping|non-concurrent}0
generic parameters are always considered '@escaping'
passing %select{non-escaping|non-concurrent}0 parameter %1 to function expecting %select{an @escaping|a @Sendable}0 closure
converting non-escaping parameter %0 to generic parameter %1 may allow it to escape
assigning %select{non-escaping|non-concurrent}0 parameter %1 to %select{an @escaping|a @Sendable}0 closure
using %select{non-escaping|non-concurrent}0 parameter %1 in a context expecting %select{an @escaping|a @Sendable}0 closure
converting %select{non-escaping|non-concurrent function}0 value to %1 may %select{allow it to escape|introduce data races}0
converting function value of type %0 to %1 loses global actor %2
%0 declaration cannot close over value %1 defined in outer scope
cannot reference invalid declaration %0
'%0' cannot transfer control out of a defer statement
'defer' statement at end of scope always executes immediately; replace with 'do' statement to silence this warning
return invalid outside of a func
non-void function should return a value
only a failable initializer can return 'nil'
use 'init?' to make the initializer %0 failable
'nil' is the only return value permitted in an initializer
missing call to superclass's initializer; 'super.init' is 'async' and requires an explicit call
'if' condition is always true
'while' condition is always true
'guard' condition is always true, body is unreachable
closure expression is unused
function is unused
%select{variable|property is accessed but result|subscript is accessed but result}0 is unused
result of call to %0 is unused
result of operator %0 is unused
result of call to %select{function|closure}0 returning %1 is unused
expression of type %0 is unused
result of %0 initializer is unused
result of 'try?' is unused
result of '#selector' is unused
%0 literal is unused
cannot assign to immutable expression of type %0
expression is not assignable: %0
cannot assign to value: %0
cannot assign to property: %0
cannot assign through subscript: %0
cannot assign through dynamic lookup property: %0
cannot assign through '!': %0
candidate is not assignable: %0 %1
mark %select{method|accessor}0 'mutating' to make 'self' mutable
add explicit '%0' to refer to mutable %1 of %2
'let' property %0 may not be initialized directly; use "self.init(...)" or "self = ..." instead
label %0 cannot be reused on an inner statement
'break' is only allowed inside a loop, if, do, or switch
unlabeled 'break' is only allowed inside a loop or switch, a labeled break is required to exit an if or do
'continue' is only allowed inside a loop
'continue' cannot be used with %0 statements
cannot find label %0 in scope
cannot find label %0 in scope; did you mean %1?
for-in loop requires %0 to conform to %1%select{|; did you mean to unwrap optional?}2
no binary '~=' operator available for 'switch' statement
'fallthrough' is only allowed inside a switch
'fallthrough' without a following 'case' or 'default' block
'fallthrough' from a case which doesn't bind variable %0
unnecessary cast over raw value of %0
'%select{var|let}0' pattern binding must match previous '%select{var|let}1' pattern binding
pattern variable bound to type %0, expected type %1
pattern variable bound to type %0, fallthrough case bound to type %1
'@unknown' is only supported for catch-all cases ("case _")
'where' cannot be used with '@unknown'
'@unknown' cannot be applied to multiple patterns
'@unknown' can only be applied to the last case in a switch
'where' only applies to the second pattern match in this case
disambiguate by adding a line break between them if this is desired
duplicate the 'where' on both patterns to check both patterns
trailing closure in this context is confusable with the body of the statement; pass as a parenthesized argument to silence this warning
property declares an opaque return type, but has no initializer expression from which to infer an underlying type
function declares an opaque return type, but has no return statements in its body from which to infer an underlying type
function declares an opaque return type, but the return statements in its body do not have matching underlying types
return statement has underlying type %0
function opaque return type was inferred as %0, which defines the opaque type in terms of itself
property declares an opaque return type, but cannot infer the underlying type from its initializer expression
type annotation missing in pattern
pattern matching requires an initializer value to match against
'%0' pattern has no effect; sub-pattern didn't bind any variables
pattern matching in a condition requires the 'case' keyword
pattern matching in a condition implicitly unwraps optionals
'is' keyword required to pattern match against type name
type annotation does not match contextual type %0
tuple pattern cannot match values of the non-tuple type %0
enum case '%0' has %1 associated values; matching them as a tuple is deprecated
enum case '%0' has %1 associated values
enum case '%0' has one associated value that is a tuple of %1 elements
contextual closure type %0 expects %1 argument%s1, but %2 %select{were|was}3 used in closure body
contextual type for closure argument list expects %0 argument%s0, which cannot be implicitly ignored
closure tuple parameter %0 does not support destructuring
closure tuple parameter %0 does not support destructuring with implicit parameters
%0 expects a single parameter of type %1%2
%0 %1 expects a single parameter of type %2%3
%0 %select{%1 |}2expects %3 separate arguments%select{|; remove extra parentheses to change tuple into separate arguments}4
pattern with associated values does not match enum case %0
remove associated values to make the pattern match
tuple pattern has the wrong length for tuple type %0
tuple pattern element label %0 must be %1
enum case %0 not found in type %1
'?' pattern cannot match values of type %0
initializer for conditional binding must have Optional type, not %0
enum case %0 is not a member of type %1
generic enum type %0 is ambiguous without explicit generic parameters when matching value of type %1
%select{variable|constant}2 %0 inferred to have type %1, which may be unexpected
%select{variable|constant}2 %0 inferred to have type %1, which is an enum with no cases
%select{variable|constant}2 %0 inferred to have type %1, which contains an enum with no cases
add an explicit type annotation to silence this warning
instance will be immediately deallocated because %select{variable|property}2 %0 is %1
a strong reference is required to prevent the instance from being deallocated
collection downcast in cast pattern is not implemented; use an explicit downcast to %0 instead
errors thrown from here are not handled
%0 can throw, but the error is not handled
%0 can throw, but it is not marked with 'try' and the error is not handled
error is not handled because the enclosing function is not declared 'throws'
%0 can throw, but the error is not handled; a function declared 'rethrows' may only throw if its parameter does
%0 can throw, but it is not marked with 'try' and the error is not handled; a function declared 'rethrows' may only throw if its parameter does
a function declared 'rethrows' may only throw if its parameter does
call is to 'rethrows' function, but argument function can throw
call is to 'rethrows' function, but a defaulted argument function can throw
call is to 'rethrows' function, but a conformance has a throwing witness
%0 can throw, but it is executed in a non-throwing autoclosure
%0 can throw, but it is not marked with 'try' and it is executed in a non-throwing autoclosure
error is not handled because it is thrown in a non-throwing autoclosure
errors thrown from here are not handled because the enclosing catch is not exhaustive
%0 can throw, but the enclosing catch is not exhaustive
%0 can throw, but it is not marked with 'try' and the enclosing catch is not exhaustive
error is not handled because the enclosing catch is not exhaustive
%1 can throw, but errors cannot be thrown out of %select{<<ERROR>>|a default argument|a property wrapper initializer|a property initializer|a global variable initializer|an enum case raw value|a catch pattern|a catch guard expression|a defer body}0
errors cannot be thrown out of %select{<<ERROR>>|a default argument|a property wrapper initializer|a property initializer|a global variable initializer|an enum case raw value|a catch pattern|a catch guard expression|a defer body}0
operator can throw but expression is not marked with 'try'
interpolation can throw but is not marked with 'try'
call can throw but is not marked with 'try'
reading 'async let' can throw but is not marked with 'try'
property access can throw but is not marked with 'try'
subscript access can throw but is not marked with 'try'
did you mean to use 'try'?
did you mean to handle error as optional value?
did you mean to disable error propagation?
no calls to throwing functions occur within 'try' expression
'catch' block is unreachable because no errors are thrown in 'do' block
expression is 'async' but is not marked with 'await'
%select{call|property access|subscript access|}0 is 'async'
call is 'async' in an autoclosure argument
call is 'async' in an 'async let' initializer
no 'async' operations occur within 'await' expression
'async' call cannot occur in %select{<<ERROR>>|a default argument|a property wrapper initializer|a property initializer|a global variable initializer|an enum case raw value|a catch pattern|a catch guard expression|a defer body}0
'await' operation cannot occur in %select{<<ERROR>>|a default argument|a property wrapper initializer|a property initializer|a global variable initializer|an enum case raw value|a catch pattern|a catch guard expression|a defer body}0
%select{'async'|'async' call|'await'|'async let'|'async' property access|'async' subscript access}0 in %select{a function|an autoclosure}1 that does not support concurrency
add 'async' to function %0 to make it asynchronous
add '@asyncHandler' to function %0 to create an implicit asynchronous context
add 'nonisolated' to %0 to make this %1 not isolated to the actor
add '@%0' to make %1 %2 part of global actor %3
'async' %0 cannot be represented in Objective-C
'async' function types cannot be represented in Objective-C
actor-isolated %0 %1 cannot be @objc
candidate is %select{not |}0'async', but%select{| @objc}1 protocol requirement is%select{| not}0
'async' autoclosure parameter in a non-'async' function
'async' can only be used with 'let' declarations
'async let' can only be used on local declarations
'async let' binding requires an initializer expression
'async let' requires at least one named variable
reference to async let %0 is 'async'
async let %0 cannot be referenced in %select{<<ERROR>>|a default argument|a property wrapper initializer|a property initializer|a global variable initializer|an enum case raw value|a catch pattern|a catch guard expression|a defer body}1
'@asyncHandler' can only be applied to functions
'@asyncHandler' function can only return 'Void'
'@asyncHandler' function cannot throw
'@asyncHandler' function cannot be 'async' itself
'inout' parameter is not allowed in '@asyncHandler' function
non-escaping closure parameter is not allowed in '@asyncHandler' function
'@asyncHandler' function cannot be 'mutating'
'@asyncHandler' has been removed from the language
%0 overrides or implements protocol requirements for Objective-C declarations with incompatible async conventions
%0 provides async here
asynchronous method returning 'Self' cannot be '@objc'
actor types do not support inheritance
actor-isolated %0 %1 can only be %select{referenced|mutated|used 'inout'}3 %select{from inside the actor|on 'self'}2
actor-isolated %0 %1 can not be %select{referenced|mutated|used 'inout'}2 from a non-isolated context
actor-isolated %0 %1 cannot be passed 'inout' to%select{| implicitly}2 'async' function call
cannot call mutating async function %0 on actor-isolated %1 %2
actor-isolated %0 %1 can not be %select{referenced|mutated|used 'inout'}3 from%select{| synchronous}4 context of global actor %2
%0 %1 isolated to global actor %2 can not be %select{referenced|mutated|used 'inout'}4 from actor %3 %select{|in a synchronous context}5
%0 %1 isolated to global actor %2 can not be %select{referenced|mutated|used 'inout'}4 from different global actor %3 %select{|in a synchronous context}5
%0 %1 isolated to global actor %2 can not be %select{referenced|mutated|used 'inout'}4 from %select{this|a non-isolated}3%select{| synchronous}5 context
call to %0 function in a synchronous %1 context
call to %0 %1 %2 in a synchronous %3 context
actor-isolated %0 %1 can not be partially applied
use of local %0 %1 in concurrently-executing code
actor-isolated %0 %1 cannot be %select{referenced|mutated|used 'inout'}2 from a concurrent closure
actor-isolated %0 %1 cannot be %select{referenced|mutated|used 'inout'}2 from a concurrent function
actor-isolated %0 %1 cannot be %select{referenced|mutated|used 'inout'}2 from 'async let' initializer
cannot form key path to actor-isolated %0 %1
cannot form key path to %0 with 'throws' or 'async'
concurrently-executed %0 %1 must be marked as '@Sendable'
%select{mutation of|reference to}0 captured %1 %2 in concurrently-executing code
calls to %0 %1 from outside of its actor context are implicitly asynchronous
mutation of this %0 is only permitted within the actor
reference to %0 %1 is not concurrency-safe because it involves shared mutable state
actor-isolated %0 %1 cannot be used to satisfy a protocol requirement
%0 %1 must be isolated to the global actor %2 to satisfy corresponding requirement from protocol %3
%0 %1 isolated to global actor %2 can not satisfy corresponding requirement from protocol %3
%0 %1 isolated to global actor %2 can not satisfy corresponding requirement from protocol %3 isolated to global actor %4
actor %0 cannot conform to global actor isolated protocol %1
%0 is isolated to global actor %1 here
cannot pass argument of non-sendable type %0 across actors
cannot call function returning non-sendable type %0 across actors
cannot use %0 %1 with a non-sendable type %2 %select{across actors|from concurrently-executed code}3
cannot form key path that captures non-sendable type %0
cannot form key path that accesses non-sendable type %0
%select{stored property %1|associated value %1}0 of 'Sendable'-conforming %2 %3 has non-sendable type %4
stored property %0 of 'Sendable'-conforming %1 %2 is mutable
conformance to 'Sendable' must occur in the same source file as %0 %1; use 'UnsafeSendable' for retroactive conformance
non-final class %0 cannot conform to `Sendable`; use `UnsafeSendable`
`Sendable` class %1 cannot inherit from another class%select{| other than 'NSObject'}0
'@actorIndependent' is meaningless on 'let' declarations because they are immutable
'@actorIndependent' can not be applied to stored properties
'@actorIndependent' can not be applied to local variables
'nonisolated' is meaningless on 'let' declarations because they are immutable
nonisolated' can not be applied to stored properties
'nonisolated' can not be applied to local variables
%0 property in property wrapper type %1 cannot be isolated to the actor instance; consider 'nonisolated'
missing '%0' declaration, probably because the '_Concurrency' module was not imported
'_Concurrency' module not imported, required for async main
global actor %0 requires a static property 'shared' that produces an actor instance
'shared' property in global actor is not 'static'
'shared' property has more restrictive access (%0) than its global actor (%1)
'shared' property in global actor cannot be in a constrained extension
'shared' property type %0 does not conform to the 'Actor' protocol
declaration can not have multiple global actor attributes (%0 and %1)
%0 cannot have a global actor
actor %0 cannot have a global actor
local variable %0 cannot have a global actor
global actor attribute %0 argument can only be '(unsafe)'
%0 %1 has multiple actor-isolation attributes ('%2' and '%3')
%0 %1 %2 has different actor isolation from %3 overridden declaration
value type %0 cannot have a stored property that recursively contains it
enum containing only recursive cases is impossible to instantiate
recursive enum %0 is not marked 'indirect'
value type %0 has infinite size
cycle beginning here: %0
recursive case here
broken standard library: cannot find %select{Array|Optional|ImplicitlyUnwrappedOptional|Dictionary|Error}0 type
broken standard library: cannot find intrinsic operations on Optional<T>
broken standard library: cannot find intrinsic operations on UnsafeMutablePointer<T>
broken standard library: cannot find intrinsic operations on Array<T>
class %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}1|private or fileprivate}3|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its superclass %select{is %select{private|fileprivate|internal|'@_spi'|'@_spi'}2|uses %select{a private|a fileprivate|an internal|an '@_spi'|an '@_spi'}2 type as a generic parameter}4
class %select{should be declared %select{private|fileprivate|internal|%error|%error}1|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its superclass %select{is %select{private|fileprivate|internal|'@_spi'|'@_spi'}2|uses %select{a private|a fileprivate|an internal|an '@_spi'|an '@_spi'}2 type as a generic parameter}4
%select{type referenced from |}0the superclass of a '@usableFromInline' class must be '@usableFromInline' or public
%select{type referenced from |}0the superclass of a '@usableFromInline' class should be '@usableFromInline' or public
cannot use 'Protocol' with non-protocol type %0
cannot create a single-element tuple with an element label
cannot create a variadic tuple
cannot create a tuple with a duplicate element label
variadic enum cases are not supported
using '!' is not allowed here; treating this as '?' instead
using '!' here is deprecated and will be removed in a future release
using '!' is not allowed here; perhaps '?' was intended?
%0 may only be applied to class and class-bound protocol types, not %1
%0 must not be applied to non-class-bound %1; consider adding a protocol conformance that has a class bound
%0 is incompatible with %1 references
%0 variable cannot have optional type
%0 variable should have optional type %1
%0 must be a mutable variable, because it may change at runtime
%0 cannot be applied to a property declaration in a protocol
%0 should not be applied to a property declaration in a protocol and will be disallowed in future versions
'required' initializer in non-class type %0
'required' initializer must be declared directly in class %0 (not in an extension)
'required' initializer %0 must be provided by subclass of %1
'required' initializer is declared in superclass here
'required' initializer must be accessible wherever class %0 can be subclassed
'required' modifier must be present on all overrides of a required initializer
use the 'required' modifier to override a required initializer
'override' is implied when overriding a required initializer
overridden required initializer is here
@%0 attribute only applies to function types
convention '%0' not supported
generic parameter '%0' is not used in function signature
convention '%0' does not support the 'cType' argument label, did you mean @convention(c, cType: "%1") or @convention(block, cType: "%1") instead?
unable to parse '%0'; it should be a C function pointer type or a block pointer type
'some' types are only implemented for the declared type of properties and subscripts and the return type of functions
'some' type can only be declared on a single property declaration
'some' type cannot be the return type of a protocol requirement; did you mean to add an associated type?
'%0' may only be used on parameters of '@differentiable' function types
parameter type '%0' does not conform to 'Differentiable'%select{| and satisfy '%0 == %0.TangentVector'}1, but the enclosing function type is '@differentiable%select{|(_linear)}1'%select{|; did you want to add '@noDerivative' to this parameter?}2
result type '%0' does not conform to 'Differentiable'%select{| and satisfy '%0 == %0.TangentVector'}1, but the enclosing function type is '@differentiable%select{|(_linear)}1'
'@differentiable' function type requires at least one differentiability parameter, i.e. a non-'@noDerivative' parameter whose type conforms to 'Differentiable'%select{| with its 'TangentVector' equal to itself}0
@opened cannot be applied to non-protocol type %0
SIL function types cannot be variadic
SIL function types cannot have labeled inputs
SIL function types cannot have labeled results
non-coroutine SIL function types cannot have @yield results
repeated %select{parameter|result|callee}0 convention attribute
substitutions cannot be provided on a formal function type
SIL function types cannot have multiple @error results
convention '%0' not supported in SIL
type %0 is not a legal SIL value type
SIL box type has wrong number of generic arguments for layout
metatypes in SIL must have @thin, @thick, or @objc_metatype attribute
metatypes in SIL can only be one of @thin, @thick, or @objc_metatype
Objective-C interoperability is disabled
%0 attribute used without importing module %1
@objc can only be used with members of classes, @objc protocols, and concrete extensions of classes
only classes (and their extensions), protocols, methods, initializers, properties, and subscript declarations can be declared @objc
only classes that inherit from NSObject can be declared @objc
inherit from 'NSObject' to silence this error
only class members and extensions of classes can be declared @nonobjc
only extensions of classes can be declared @nonobjc
members of constrained extensions cannot be declared @objc
extensions of %select{classes from generic context|generic classes}0 cannot contain '@objc' members
'@objc' %0 in extension of subclass of %1 requires %2 %3
operator methods cannot be declared @objc
@objc protocols must not have operator requirements
inference of '@objc' for 'dynamic' members is deprecated
inference of '@objc' for members of Objective-C-derived classes is deprecated
add '@objc' to continue exposing an Objective-C entry point (Swift 3 behavior)
add '@nonobjc' to suppress the Objective-C entry point (Swift 4 behavior)
generic subclasses of '@objc' classes cannot have an explicit '@objc' because they are not directly visible from Objective-C
explicit '@objc' on subclass of %0 requires %1 %2
'@objc' getter for non-'@objc' property
'@objc' getter for non-'@objc' subscript
'@objc' setter for non-'@objc' property
'@objc' setter for non-'@objc' subscript
%select{%0 %1|%1}2 with '@objc' %select{getter|setter}3 depends on deprecated inference of '@objc'
'@objc' enum cannot be generic
'@objc' %0 must have a simple name
'@objc' subscript cannot have a name; did you mean to put the name on the getter or setter?
'@objc' deinitializer cannot have a name
'@objc' %select{initializer|method}0 name provides %select{one argument name|names for %1 arguments}2, but %select{initializer|method}0 has %select{one parameter|%3 parameters}4%select{| (%select{|including }4the error parameter)}5
attribute has no effect; cases within an '@objc' enum are already exposed to Objective-C
'@objc' enum case is not allowed outside of an '@objc' enum
'@objc' enum case declaration defines multiple enum cases with the same Objective-C name
'@objc' can only be applied to an extension of a class
'@%0' attribute is meaningless on a property that cannot be represented in Objective-C
property cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because its type cannot be represented in Objective-C
subscript cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because its type cannot be represented in Objective-C
%0 cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}1
%0 cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}1 because it has generic parameters
%0 cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}1 because it has a 'where' clause
%0 is not representable in Objective-C, so it cannot be used with '@convention(%1)'
when calling this function in Swift 4 or later, you must pass a '()' tuple; did you mean for the input type to be '()'?
'Any' is not considered '@objc'; use 'AnyObject' instead
protocol-constrained type containing protocol %0 cannot be represented in Objective-C
protocol-constrained type containing class %0 cannot be represented in Objective-C
protocol-constrained type containing 'Error' cannot be represented in Objective-C
empty tuple type cannot be represented in Objective-C
tuples cannot be represented in Objective-C
classes not annotated with @objc cannot be represented in Objective-C
Swift structs cannot be represented in Objective-C
non-'@objc' enums cannot be represented in Objective-C
generic type parameters cannot be represented in Objective-C
function types cannot be represented in Objective-C unless their parameters and returns can be
throwing function types cannot be represented in Objective-C
inferring '@objc' because the declaration is a member of an '@objc' protocol
overriding '@objc' %select{property|subscript|initializer|method}0 %1 here
satisfying requirement for %0 %1 in protocol %2
use of %0 %1 to satisfy a requirement of protocol %2 depends on '@objc' inference deprecated in Swift 4
unable to resolve type for _opaqueReturnTypeOf attribute
observing accessors are not allowed to be marked @objc
addressors are not allowed to be marked @objc
'read' and 'modify' accessors are not allowed to be marked @objc
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because it has a variadic parameter
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because inout parameters cannot be represented in Objective-C
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}1 because the type of the parameter %0 cannot be represented in Objective-C
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because the type of the parameter cannot be represented in Objective-C
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because its result type cannot be represented in Objective-C
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because Core Foundation types are not classes in Objective-C
throwing method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because it returns a value of optional type %1; 'nil' indicates failure to Objective-C
throwing method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because it returns a value of type %1; return 'Void' or a type that bridges to an Objective-C class
a failable and throwing initializer cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0 because 'nil' indicates failure to Objective-C
%0 cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}1 because class %2 is only visible via the Objective-C runtime
Objective-C method has a different selector from the method it overrides (%0 vs. %1)
Objective-C property has a different name from the property it overrides (%0 vs. %1)
ambiguous inference of Objective-C name for %0 %1 (%2 vs %3)
%0 (in protocol %1) provides Objective-C name %2
%0 overrides or implements protocol requirements for Objective-C declarations with incompatible error argument conventions
%0 provides an error argument here
conformance of %0 to %1 can only be written in module %2
missing '%select{_forceBridgeFromObjectiveC|_conditionallyBridgeFromObjectiveC}0'
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 with Objective-C selector %4 conflicts with %select{initializer %3|implicit initializer %3|deinitializer|implicit deinitializer|method %3|getter for %3|subscript getter|setter for %3|subscript setter}2 with the same Objective-C selector
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 declared here
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 with Objective-C selector %2 conflicts with previous declaration with the same Objective-C selector
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 with Objective-C selector %4 conflicts with %select{initializer %3|implicit initializer %3|deinitializer|implicit deinitializer|method %3|getter for %3|subscript getter|setter for %3|subscript setter}2 from superclass %5 with the same Objective-C selector
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 defines Objective-C class method %2, which is not permitted by Swift
Objective-C method %2 provided by %select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 does not match the requirement's selector (%3)
Objective-C method %4 provided by %select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 conflicts with optional requirement %select{initializer %3|implicit initializer %3|deinitializer|implicit deinitializer|method %3|getter for %3|subscript getter|setter for %3|subscript setter}2 in protocol %5
rename %select{method|initializer|property|subscript}0 to match requirement %1
non-'@objc' %select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 does not satisfy requirement of '@objc' protocol %2
non-'@objc' %select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 does not satisfy optional requirement of '@objc' protocol %2
non-'@objc' %select{property %1|subscript}0 does not satisfy requirement of '@objc' protocol %2
non-'@objc' %select{property %1|subscript}0 does not satisfy optional requirement of '@objc' protocol %2
declaration is %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)|marked @objc by an access note}0, and cannot be marked @nonobjc
%0 cannot be '@_borrowed' if it is '@objc dynamic'
%0 cannot be '@_borrowed' if it is an @objc protocol requirement
a declaration cannot be both '@_tranparent' and 'dynamic'
replaced accessor %0's type does not match
replaced accessor for %0 is not marked dynamic
replaced accessor %select{get|set|_read|_modify|willSet|didSet|unsafeAddress|addressWithOwner|addressWithNativeOwner|unsafeMutableAddress|mutableAddressWithOwner|}0 for %1 is not explicitly defined
replaced function %0 is not marked dynamic
replaced function %0 could not be found
replaced accessor for %0 could not be found
replaced accessor for %0 occurs in multiple places
candidate accessor found in module %0
replaced function %0 of type %1 could not be found
found function %0 of type %1
dynamicReplacement(for:) of %0 is not defined in an extension or at the file level
dynamicReplacement(for:) of %0 must not be dynamic itself
%0 is not marked @objc dynamic
%0 is marked @objc dynamic
replaced constructor %0 is marked as convenience
replaced constructor %0 is not marked as convenience
type eraser must be a class, struct, or enum
type eraser %0 must conform to protocol %1
%select{private|fileprivate|internal|public|open}0 type eraser %1 cannot have more restrictive access than protocol %2 (which is %select{private|fileprivate|internal|public|open}3)
type eraser %0 must have an initializer of the form 'init<T: %1>(erasing: T)'
type eraser %0 has no viable initializer of the form 'init<T: %1>(erasing: T)'
type eraser declared here
'init(erasing:)' cannot be failable
'init(erasing:)' cannot have unsatisfied requirements when %0 = 'some %1'
%select{private|fileprivate|internal|public|open}0 'init(erasing:)' cannot have more restrictive access than protocol %1 (which is %select{private|fileprivate|internal|public|open}2)
%select{getter for |setter for |}0%1 is unavailable%select{ in %3|}2%select{|: %4}4
%select{getter for |setter for |}0%1 has been %select{renamed to|replaced by}2%select{| instance method| property}3 '%4'%select{|: %5}5
%select{getter for |setter for |}0%1 has been explicitly marked unavailable here
%select{getter for |setter for |}0%1 was introduced in %2 %3
%select{getter for |setter for |}0%1 was obsoleted in %2 %3
%select{getter for |setter for |}0%1 %select{is|%select{is|was}4}2 deprecated%select{| in %3%select{| %5}4}2%select{|: %6}6
%select{getter for |setter for |}0%1 %select{is|%select{is|was}4}2 deprecated%select{| in %3%select{| %5}4}2: %select{renamed to|replaced by}6%select{| instance method| property}7 '%8'
declaration cannot be more available than enclosing scope
enclosing scope here
%0 is only available in %1 %2 or newer
'some' return types are only available in %0 %1 or newer
add 'if #available' version check
add @available attribute to enclosing %0
%select{getter|setter}0 for %1 is only available in %2 %3 or newer
cannot pass as inout because %select{getter|setter}0 for %1 is only available in %2 %3 or newer
condition required for target platform '%0'
unnecessary check for '%0'; enclosing scope ensures guard will always be true
global variable cannot be marked potentially unavailable with '@available' in script mode
stored properties cannot be marked potentially unavailable with '@available'
enum cases with associated values cannot be marked potentially unavailable with '@available'
protocol %0 requires %1 to be available in %2 %3 and newer
protocol requirement here
public declarations should have an availability attribute when building with -require-explicit-availability
availability macro cannot be used in inlinable %0
subscripts returning String were obsoleted in Swift 4; explicitly construct a String from subscripted result
call to unavailable %0 %1 from superclass %2 occurs implicitly at the end of this initializer
conformance of %0 to %1 is unavailable%select{ in %3|}2%select{|: %4}4
conformance of %0 to %1 has been explicitly marked unavailable here
conformance of %0 to %1 was introduced in %2 %3
conformance of %0 to %1 was obsoleted in %2 %3
conformance of %0 to %1 %select{is|%select{is|was}4}2 deprecated%select{| in %3%select{| %5}4}2%select{|: %6}6
conformance of %0 to %1 is only available in %2 %3 or newer
@discardableResult declared on a function returning %select{Never|Void}0 is unnecessary
'@_fixed_layout' attribute can only be applied to '@usableFromInline' or public declarations, but %0 is %select{private|fileprivate|internal|%error|%error}1
'@frozen' attribute is now used for fixed-layout structs
'@frozen' attribute can only be applied to '@usableFromInline' or public declarations, but %0 is %select{private|fileprivate|internal|%error|%error}1
'@usableFromInline' attribute can only be applied to internal declarations, but %0 is %select{private|fileprivate|%error|public|open}1
'@inlinable' declaration is already '@usableFromInline'
'@usableFromInline' attribute cannot be used in protocols
type %0 cannot be nested inside %select{a '@_transparent' function|an '@inlinable' function|an '@_alwaysEmitIntoClient' function|a default argument value|a property initializer in a '@frozen' type}1
%select{%0|%0 for}4 %1 is %select{private|fileprivate|internal|%error|%error}2 and cannot be referenced from %select{a '@_transparent' function|an '@inlinable' function|an '@_alwaysEmitIntoClient' function|a default argument value|a property initializer in a '@frozen' type}3
%select{%0|%0 for}4 %1 is %select{private|fileprivate|internal|%error|%error}2 and should not be referenced from %select{a '@_transparent' function|an '@inlinable' function|an '@_alwaysEmitIntoClient' function|a default argument value|a property initializer in a '@frozen' type}3
%0 %1 cannot be used in %select{a '@_transparent' function|an '@inlinable' function|an '@_alwaysEmitIntoClient' function|a default argument value|a property initializer in a '@frozen' type}2 because %select{%3 was imported implementation-only|it is an SPI imported from %3|it is SPI}4
%select{%0|%0 for}2 %1 is not public
%select{%0|%0 for}2 %1 is not '@usableFromInline' or public
initializer for class %0 is '%select{@_transparent|@inlinable|@_alwaysEmitIntoClient|%error}1' and must delegate to another initializer
'%0' attribute cannot be applied to stored properties
'@inlinable' attribute cannot be applied to 'dynamic' declarations
'@inlinable' attribute can only be applied to public declarations, but %0 is %select{private|fileprivate|internal|%error|%error}1
deinitializer can only be '@inlinable' if the class is '@_fixed_layout'
trailing 'where' clause in '_specialize' attribute of non-generic function %0
missing 'where' clause in '_specialize' attribute
empty 'where' clause in '_specialize' attribute
only concrete type same-type requirements are supported by '_specialize' attribute
only requirements on generic parameters are supported by '_specialize' attribute
too few generic parameters are specified in '_specialize' attribute (got %0, but expected %1)
missing constraint for %0 in '_specialize' attribute
only same-type and layout requirements are supported by '_specialize' attribute
target function %0 could not be found
target function %0 of type %1 could not be found
value %0 was defined but never used; consider replacing with boolean test
setter argument %0 was never used, but the property was accessed
did you mean to use %0 instead of accessing the property's current value?
initialization of %select{variable|immutable value}1 %0 was never used; consider replacing with assignment to '_' or removing it
capture %0 was never used
%select{variable|immutable value}1 %0 was never used; consider replacing with '_' or removing it
immutable value %0 was never used; consider removing it
variable %0 was never mutated; consider %select{removing 'var' to make it|changing to 'let'}1 constant
variable %0 was written to, but never read
passing reference to non-'@objc dynamic' property %0 to KVO method %1 may lead to unexpected behavior or runtime trap
parameter %0 with default argument '%1' passed to parameter %2, whose default argument is '%3'
did you mean for parameter %0 to default to '%1'?
%0 %1 took %2ms to type-check (limit: %3ms)
closure took %0ms to type-check (limit: %1ms)
expression took %0ms to type-check (limit: %1ms)
'switch' statement body must have at least one 'case' or 'default' block; do you want to add a default case?
switch must be exhaustive
the compiler is unable to check that this switch is exhaustive in reasonable time
do you want to add %select{missing cases|a default clause}0?
handle unknown values using "@unknown default"
remove '@unknown' to handle remaining values
add missing case: '%0'
case is already handled by previous patterns; consider removing it
literal value is already handled by previous pattern; consider removing it
first occurrence of identical literal pattern is here
switch covers known cases, but %0 may have additional unknown values%select{|, possibly added in future versions}1
'NSObject.hashValue' is not overridable; did you mean to override 'NSObject.hash'?
'NSObject.hash(into:)' is not overridable; did you mean to override 'NSObject.hash'?
'Hashable.hashValue' is deprecated as a protocol requirement; conform type %0 to 'Hashable' by implementing 'hash(into:)' instead
property wrapper type %0 does not contain a non-static property named %1
property wrapper type %0 has multiple non-static properties named %1
%0 parameter type (%1) must be the same as its 'wrappedValue' property type (%2) or an @autoclosure thereof
property wrapper initializer %0 cannot be failable
%select{private|fileprivate|internal|public|open}0 %1 %2 cannot have more restrictive access than its enclosing property wrapper type %3 (which is %select{private|fileprivate|internal|public|open}4)
property wrapper type %0 has multiple enclosing-self subscripts %1
property wrapper %select{wrapped value|projected value}0 cannot have dynamic Self type
property %0, must be static because property wrapper %1 can only be applied to static properties
property wrapper attribute %0 can only be applied to a property
property wrapper attribute on parameter not yet supported on %0
property wrapper type %0 declared here
cannot use property wrapper projection %select{argument|parameter}0
parameter %0 does not have an attached property wrapper
property wrapper has arguments in the wrapper attribute
property wrapper type %0 does not support initialization from a projected value
property wrapper applied to parameter must have a nonmutating 'wrappedValue' getter
inferred projection type %0 is not a property wrapper
property wrapper %0 with a mutating getter cannot be composed inside get-only property wrapper %1
property wrappers are not yet supported in top-level code
property wrapper can only be applied to a 'var'
property wrapper cannot be applied to a computed property
property wrappers currently cannot define an 'async' or 'throws' accessor
property %0 with a wrapper cannot also be %select{lazy|@NSCopying|@NSManaged|weak|unowned|unmanaged}1
property wrapper can only apply to a single variable
%select{|non-static|non-static}1 %2 %0 declared inside %select{a protocol|an extension|an enum}1 cannot have a wrapper
property %0 with attached wrapper cannot override another property
initialize the property wrapper type directly with '(...') on the attribute
property type %0 does not match that of the 'wrappedValue' property of its wrapper type %1
property type %0 does not match 'wrappedValue' type %1
composed wrapper type %0 does not match former 'wrappedValue' type %1
%select{%select{variable|constant}0|property}1 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}3|private or fileprivate}4|cannot be declared %select{in this context|fileprivate|internal|public|open}3}2 because its property wrapper type uses %select{a private|a fileprivate|an internal|%error|%error}5 type
property wrapper type referenced from a '@usableFromInline' %select{%select{variable|constant}0|property}1 must be '@usableFromInline' or public
property wrapper's 'wrapperValue' property should be renamed to 'projectedValue'; use of 'wrapperValue' is deprecated
property wrapper's 'init(initialValue:)' should be renamed to 'init(wrappedValue:)'; use of 'init(initialValue:)' is deprecated
could not find projection value property %0
missing argument for parameter %0 in property wrapper initializer; add 'wrappedValue' and %0 arguments in '@%1(...)'
closure containing a declaration cannot be used with result builder %0
closure containing control flow statement cannot be used with result builder %0
result builder attribute %0 can only be applied to a parameter, function, or computed property
result builder attribute %0 can only be applied to a %select{subscript|property|constant|variable}1 if it defines a getter
result builder attribute %0 can only be applied to a parameter of function type
result builder attribute %0 cannot be applied to an autoclosure parameter
only one result builder attribute can be attached to a %select{declaration|parameter}0
previous result builder specified here
result builder attributes cannot have arguments
cannot use explicit 'return' statement in the body of result builder %0
application of result builder %0 disabled by explicit 'return' statement
remove the attribute to explicitly disable the result builder
remove 'return' statements to apply the result builder
ambiguous result builder inferred for %0: %1 or %2
add an explicit 'return' statement to not use a result builder
apply result builder %0 (inferred from %select{protocol|dynamic replacement of}1 %2)
result builder %0 does not implement 'buildLimitedAvailability'; this code may crash on earlier versions of the OS
result builder must provide at least one static 'buildBlock' method
did you mean to make instance method 'buildBlock' static?
enum case 'buildBlock' cannot be used to satisfy the result builder requirement
potential match 'buildBlock' is not a static method
add 'buildOptional(_:)' to the result builder %0 to add support for 'if' statements without an 'else'
add 'buildEither(first:)' and 'buildEither(second:)' to the result builder %0 to add support for 'if'-'else' and 'switch'
add 'buildArray(_:)' to the result builder %0 to add support for 'for'..'in' loops
add 'buildLimitedAvailability(_:)' to the result builder %0 to erase type information for less-available types
expression shuffles the elements of this tuple; this behavior is deprecated
marker protocol %0 cannot have any requirements
marker protocol %0 cannot inherit non-marker protocol %1
marker protocol %0 cannot be used in a conditional cast
conditional conformance to non-marker protocol %0 cannot depend on conformance of %1 to non-marker protocol %2
'@%0' attribute used without importing module %1
argument must be a bool literal
argument must be an integer literal
argument must be a string literal
argument must be a floating-point literal
argument must be a <Type>.self
argument must be a closure
argument must be an expression with only literals
argument must be a string interpolation
argument must be a case of enum %0
argument must be a static method or property of %0
ordering argument must be a static method or property of %0
non-constant range: argument must be an integer literal
non-constant range: not an integer range
access note for %0 adds %select{attribute|modifier}1 '%2' to this %3
add %select{attribute|modifier}0 explicitly to silence this warning
access note for %0 removes %select{attribute|modifier}1 '%2' from this %3
remove %select{attribute|modifier}0 explicitly to silence this warning
access note for %0 changes the '@objc' name of this %1 to %2
change '@objc' name in source code explicitly to silence this warning
access note for %0 changes the '@objc' name of this %1 to %2, but source code specifies %3; the access note will be ignored
could not build %select{C|Objective-C}0 module '%1'
bridging header '%0' does not exist
failed to import bridging header '%0'
failed to serialize bridging header; target may not be debuggable outside of its original project
failed to emit precompiled header '%0' for bridging header '%1'
failed to emit precompiled module '%0' for module map '%1'
failed to dump precompiled module '%0'
too %select{few|many}0 parameters in swift_name attribute (expected %1; got %2)
while importing '%0'
swift_name cannot be used to define %select{static member|init}0 on protocol
swift_name cannot be used on a non-prototyped function declaration
inconsistent Swift name for Objective-C %select{method|property}0 '%1' in '%2' (%3 in '%4' vs. %5 in '%6')
imported declaration '%0' could not be mapped to '%1'
please report this issue to the owners of '%0'
Swift attribute '%0' does not start with '@'
implicit import of bridging header '%0' via module %1 is deprecated and will be removed in a later version of Swift
this attribute for global actor '%0' is invalid; the declaration already has attribute for global actor '%1'
module map file '%0' not found
unable to find module '%0' for implicit conversion function '%0.%1'
unable to find implicit conversion function '%0.%1'
multiple definitions of implicit conversion function '%0.%1'
definition of implicit conversion function '%0.%1' is not a function
definition of implicit conversion function '%0.%1' is not of the correct type
cannot find definition of '_ObjectiveCBridgeable' protocol
broken definition of '_ObjectiveCBridgeable' protocol: missing %0
multiple definitions of symbol '%0'
INTERNAL ERROR: invalid use of builtin: %0
could not find Objective-C bridge type for type %0; did you forget to import Foundation?
could not find 'pointee' property of pointer type %0
inout writeback to computed property %0 occurs in multiple arguments to call, introducing invalid aliasing
inout writeback through subscript occurs in multiple arguments to call, introducing invalid aliasing
concurrent writeback occurred here
inout arguments are not allowed to alias each other
previous aliasing argument
protocol conformance emission for generator coroutines is unimplemented
overlapping accesses to %0, but %select{initialization|read|modification|deinitialization}1 requires exclusive access; %select{consider copying to a local variable|consider calling MutableCollection.swapAt(_:_:)}2
overlapping accesses, but %select{initialization|read|modification|deinitialization}0 requires exclusive access; consider copying to a local variable
conflicting access is here
C function pointer signature %0 is not compatible with expected type %1
a C function pointer cannot be formed from a %select{local function|closure}0 that captures %select{context|generic parameters|dynamic Self type}1
the type ObjectiveC.Selector is malformed
closure captures %0 before it is declared
captured value declared here
escaping %select{local function|closure|autoclosure}0 captures 'inout' parameter %1
parameter %0 is declared 'inout'
escaping %select{local function|closure|autoclosure}0 captures mutating 'self' parameter
escaping %select{local function|closure|autoclosure}0 captures non-escaping parameter %1
parameter %0 is implicitly non-escaping
escaping %select{local function|closure|autoclosure}0 captures non-escaping value
captured here
pass a copy of %0
pass a copy of 'self'
captured indirectly by this call
passing a %select{|closure which captures a }1non-escaping function parameter %0 to a call to a non-escaping function parameter can allow re-entrant modification of a variable
%select{variable|constant}0 defined here
%select{variable|constant}1 '%0' used before being initialized
%select{variable|constant}1 '%0' passed by reference before being initialized
%select{variable|constant}1 '%0' captured by a closure before being initialized
%select{variable|constant}1 '%0' used in defer before being initialized
'self' captured by a closure before all members were initialized
address of %select{variable|constant}1 '%0' taken before it is initialized
property '%0' not initialized at super.init call
property '%0' not initialized at implicitly generated super.init call
'self' used in %select{method call|property access}1 %0 before %select{all stored properties are initialized|'super.init' call|'self.init' call}2
'self' used before all stored properties are initialized
'%0' not initialized
'%select{super|self}0.init' called multiple times in initializer
'%select{super|self}0.init' isn't called on all paths before returning from initializer
'self' used before 'super.init' call
'self' used before 'self.init' call
'self' used before 'self.init' call or assignment to 'self'
'self' used inside 'catch' block reachable from %select{super|self}0.init call
return from initializer without initializing all stored properties
%select{variable|constant}1 '%0' used by function definition before being initialized
struct '%0' must be completely initialized before a member is stored to
immutable value '%0' may only be initialized once
initial value already provided in 'let' declaration
cannot mutate %select{property %0|subscript}1 of immutable value '%2'
mutating accessor for %select{property %0|subscript}1 may not be used on immutable value '%2'
mutating %select{method|operator}1 %0 may not be used on immutable value '%2'
immutable value '%0' must not be passed inout
immutable value '%0' must not be assigned to
initializer for struct %0 must use "self.init(...)" or "self = ..."%select{| on all paths}1 because %select{it is not in module %2|the struct was imported from C}3
use "self.init()" to initialize the struct with zero values
missing return in a %select{function|closure}1 expected to return %0
missing return in a %select{function|closure}1 expected to return %0; did you mean to return the last expression?
%select{function|closure}1 with uninhabited return type %0 is missing call to another never-returning function on all paths
'guard' body must not fall through, consider using a 'return' or 'throw' to exit the scope
will never be executed
'%0' is uninhabited, so this function body can never be executed
condition always evaluates to %select{false|true}0
a call to a never-returning function
code after '%select{return|break|continue|throw}0' will never be executed
%select{case|default}0 will never be executed
switch condition evaluates to a constant
function call causes an infinite recursion
weak reference will always be nil because the referenced object is deallocated here
inlining 'transparent' functions forms circular loop
while inlining here
Cannot pre-specialize %0
Pre-specialized function %0 missing in SwiftOnoneSupport module
integer overflows when converted from %0 to %1
integer overflows when converted from %select{unsigned|signed}0 %1 to %select{unsigned|signed}2 %3
negative integer '%1' overflows when stored into unsigned type %0
integer literal '%1' overflows when stored into %0
integer literal '%2' overflows when stored into %select{unsigned|signed}0 %1
integer literal overflows when stored into %0
arithmetic operation '%0 %1 %2' (on type %3) results in an overflow
arithmetic operation '%0 %1 %2' (on %select{unsigned|signed}3 %4-bit integer type) results in an overflow
division '%0 %1 %2' results in an overflow
division by zero
assumed non-negative value '%0' is negative
shift amount is greater than or equal to type size in bits
static report error
#assert condition not constant
cannot evaluate expression as constant here
cannot constant evaluate operation%select{| used by this call}0
exceeded instruction limit: %0 when evaluating the expression at compile time
limit exceeded %select{here|during this call}0
control-flow loop found during evaluation 
found loop %select{here|inside this call}0
integer overflow detected
operation%select{| performed during this call}0 overflows
operation%select{| performed during this call}0 traps
operation with invalid operands encountered during evaluation
operation with invalid operands encountered %select{here|during this call}0
cannot evaluate top-level value as constant here
top-level value has multiple assignments
encountered operation not supported by the evaluator: %0
operation%select{| used by this call is}0 not supported by the evaluator
encountered call to '%0' whose body is not available. Imported functions must be marked '@inlinable' to constant evaluate
%select{|calls a }0function whose body is not available
encountered call to '%0' where the %1 argument is not a constant
%select{|makes a }0function call with non-constant arguments
encountered use of a variable not tracked by the evaluator
untracked variable used %select{here|by this call}0
encountered an unevaluable cast
unevaluable cast encountered %select{here|by this call}0
encountered unresolvable witness method call: '%0'
cannot find witness table entry %select{for this call|for a witness-method invoked during this call}0
cannot find concrete conformance %select{for this call|for a witness-method invoked during this call}0
branch depends on non-constant value produced by an unevaluated instructions
result of an unevaluated instruction is not a constant
value mutable by an unevaluated instruction is not a constant
not constant evaluable
imported constant evaluable function '%0' must be annotated '@_optimize(none)'
Automatic differentiation internal error: the Swift module is not imported
Automatic differentiation requires the '_Differentiation' module to be imported
conversion to '@differentiable(_linear)' function type is not yet supported
function is not differentiable
expression is not differentiable
when differentiating this function call
when differentiating this function definition
differentiability required by the corresponding protocol requirement here
forward-mode differentiation does not yet support control flow
cannot differentiate unsupported control flow
missing return for differentiation
cannot differentiate functions that have not been marked '@differentiable' and that are defined in other files
opaque non-'@differentiable' function is not differentiable
differentiated functions in %select{'@inlinable' functions|default arguments}0 must be marked '@differentiable' or have a public '@derivative'%select{|; this is not possible with a closure, make a top-level function instead}1
cannot differentiate with respect to a '@noDerivative' parameter
function call is not differentiable because generic requirements are not met: '%0'
cannot differentiate through a non-differentiable argument; do you want to use 'withoutDerivative(at:)'?
cannot differentiate through a non-differentiable result; do you want to use 'withoutDerivative(at:)'?
member is not differentiable because the corresponding protocol requirement is not '@differentiable'
member is not differentiable because the corresponding class member is not '@differentiable'
member is differentiable only with respect to a smaller subset of arguments
cannot convert a direct method reference to a '@differentiable' function; use an explicit closure instead
cannot differentiate through multiple results
cannot differentiate through 'inout' arguments
differentiating enum values is not yet supported
cannot differentiate access to property '%0.%1' because '%0' does not conform to 'Differentiable'
cannot differentiate access to property '%0.%1' because property type %2 does not conform to 'Differentiable'
cannot differentiate access to property '%0.%1' because '%0.TangentVector' is not a struct
cannot differentiate access to property '%0.%1' because '%0.TangentVector' does not have a stored property named '%1'
cannot differentiate access to property '%0.%1' because '%0.TangentVector.%1' does not have expected type %2
cannot differentiate access to property '%0.%1' because '%0.TangentVector.%1' is not a stored property
differentiation of coroutine calls is not yet supported
cannot differentiate writes to global variables
cannot differentiate writes to mutable captures
addressof only works with purely physical lvalues; use 'withUnsafePointer' or 'withUnsafeBytes' unless you're implementing 'withUnsafePointer' or 'withUnsafeBytes'
addressof only works with borrowable in-memory rvalues; use 'withUnsafePointer' or 'withUnsafeBytes' unless you're implementing 'withUnsafePointer' or 'withUnsafeBytes'
invalid%select{| implicit}2 conversion: '%0' overflows %1
negative literal '%0' cannot be converted to %select{|unsigned }2%1
'%0' overflows to %select{|-}2inf during conversion to %1
'%0' underflows and loses precision during conversion to %1
'%0' loses precision during conversion to %1
'%0' overflows to %select{|-}1inf because its magnitude exceeds the limits of a float literal
'%1' is not exactly representable as %0; it becomes '%2'
accessor must yield before returning
accessor must not yield more than once
previous yield was here
accessor must yield on all paths before returning
missing yield when the condition is %select{false|true}0
missing yield in the %0 case
missing yield in %select{this|the nil|the non-nil}0 case
missing yield when error is %select{not |}0thrown
interpolated expression and arguments are too complex
invalid log message; extending types defined in the os module is not supported
'%0' failed evaluation
'OSLogMessage' instance passed to the log call is not a constant
'OSLogInterpolation' instance passed to 'OSLogMessage.init' is not a constant
'OSLogInterpolation.%0' is not a constant
string interpolation cannot be used in this context; if you are calling an os_log function, try a different overload
'OSLogMessage' must be  created from a string interpolation or string literal
os log call will never be executed and may have undiagnosed errors
globalStringTablePointer builtin must be used only on string literals
Argument of type %0 can not be passed as an argument to a Polymorphic builtin. Polymorphic builtins can only be passed arguments that are trivial builtin typed
Static overload %0 does not exist for polymorphic builtin '%1'. Static overload implied by passing argument of type %2
Can not promote value from heap to stack due to value escaping
value escapes here
'@_semantics' function calls non-'@_semantics' function with nested '@_semantics' calls
'%0' mutated after capture by concurrent closure
variable captured by concurrent closure
capturing use
variable defined here
error loading LLVM target for triple '%0': %1
cannot initialize code generation passes for target
unimplemented IR generation feature %0
IR generation failure: %0
unable to find type '%0' to verify
type to verify '%0' is ambiguous
type to verify '%0' has unbound generic parameters
too few output file names specified
no swift input files for multi-threaded compilation
@_alignment is not supported on types with dynamic layout
@_alignment cannot decrease alignment below natural alignment of %0
@_alignment cannot increase alignment above maximum alignment of %0
no such SDK: '%0'
no arguments provided to '-frontend'
no such file or directory: '%0'
unsupported target OS: '%0'
unsupported target architecture: '%0'
unknown library level '%0', expected one of 'api', 'spi' or 'other'
unsupported option '%0' for target '%1'
inferring simulator environment for target '%0'; use '-target %1' instead
argument '%0' is not allowed with '%1'
argument '%0' is not supported with optimization
option '%0' requires a sanitizer to be enabled. Use -sanitize= to enable a sanitizer
option '%0' has no effect when '%1' sanitizer is disabled. Use -sanitize=%1 to enable the sanitizer
option '%0' is missing a required argument (%1)
cannot open file '%0' (%1)
cannot open file '%0' for diagnostics emission (%1)
error opening input file '%0' (%1)
clang importer creation failed
missing argument value for '%0', expected %1 argument(s)
unknown argument: '%0'
invalid value '%1' in '%0'
unsupported locale code; supported locale codes are: '%0'
specified localization directory '%0' does not exist, translation is disabled
cannot find translations for '%0' at '%1': no such file
ignoring -num-threads argument; cannot multithread batch mode
unsupported argument '%1' to option '%0'
could not load the swift standard library
could not load %select{shared library|framework}0 '%1'
immediate mode is incompatible with -primary-file
no frontend action was selected
invalid source location string '%0'
-dump-scope-maps argument must be 'expanded' or a list of source locations
valid arguments to '-swift-version' are %0
this mode does not support emitting dependency files
this mode does not support emitting reference dependency files
this mode does not support emitting Objective-C headers
this mode does not support emitting the loaded module trace
this mode does not support emitting modules
this mode does not support emitting module documentation files
this mode does not support emitting module source info files
this mode does not support emitting module interface files
this mode does not support emitting module summary files
this mode does not support emitting symbol graph files
the -experimental-skip-*-function-bodies* flags do not support emitting IR
ignoring -emit-reference-dependencies (requires -primary-file)
unable to perform implicit import of "_Concurrency" module: no such module found
-module-name is required
module name "%0" is not a valid identifier%select{|; use -module-name flag to specify an alternate name}1
module name "%0" is reserved for the standard library%select{|; use -module-name flag to specify an alternate name}1
unable to load standard library for target '%0'
unable to load supplementary output file map '%0': %1
supplementary output file map '%0' is missing an entry for '%1' (this likely indicates a compiler issue; please submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the project)
REPL mode requires no input files
this mode requires a single input file
this mode requires at least one input file
this mode requires .sil for primary-file and only .sib for other inputs
an %0 filename was not specified for a mode which requires an %0 filename
the implicit output file '%0' is a directory; explicitly specify a filename using %1
if any %0 files are specified, they all must be
primary file '%0' was not found in file list '%1'
cannot have input files with file list
cannot have primary input files with primary file list
cannot have '%0' with '%1'
duplicate input file '%0'
variables currently must have an initial value when entered at the top level of the REPL
fatal error encountered while in -verify mode
error parsing input file '%0' (%1)
writing index unit file: %0
creating index directory: %0
writing index record file: %0
failed file status check: %0
index output filenames do not match input source files
-index-unit-output-path is ignored without -index-store-path
wrong number of '%0' arguments (expected %1, got %2)
file ranges don't support multiple input files
file range is invalid
compiler was not built with support for collecting statistics
truncating %select{current|compatibility}0 version '%1' in TBD file to fit in 32-bit space used by old mach-o format
invalid dynamic library %select{current|compatibility}0 version '%1'
TBD generation is only supported when the whole module can be seen
Test-Based InstallAPI (TBD) is not support with cross-module-optimization
only one of -emit-ldadd-cfile-path and -module-installname-map-file can be specified;the c file won't be generated
cannot open previous install name map from %0
previous install name map from %0 is malformed
cannot open explicit Swift module map from %0
explicit Swift module map from %0 is malformed
cannot open Swift placeholder dependency module map from %0
Swift placeholder dependency module map from %0 is malformed
cannot open batch dependencies scan input file from %0
batch dependencies scan input file from %0 is malformed
default previous install name for %0 is %1
previous install name for %0 in %1 is %2
unkown platform name %0
cannot find Swift module with name %0
cannot find previous install name for module %0 in %1
symbol '%0' (%1) is in TBD file, but not in generated IR
symbol '%0' (%1) is in generated IR file, but not in TBD file
please submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the project, and add '-Xfrontend -validate-tbd-against-ir=none' to squash the errors
invalid argument '-D%0'; did you provide a redundant '-D' in your build settings?
conditional compilation flags must be valid Swift identifiers (rather than '%0')
conditional compilation flags do not have values in Swift; they are either present or absent (rather than '%0')
framework search path ends in ".framework"; add directory containing framework instead: %0
%0 in '%1'
values for '-debug-prefix-map' must be in the format 'original=remapped', but '%0' was provided
values for '-coverage-prefix-map' must be in the format 'original=remapped', but '%0' was provided
invalid virtual overlay file '%0'
scoped imports are not yet supported in module interfaces
module interfaces are only supported with Swift language version 5 or later (currently using -swift-version %0)
module interfaces are only supported with -enable-library-evolution
error extracting version from module interface
unsupported version of module interface '%0': '%1'
failed to open explicit Swift module: %0
error extracting flags from module interface
public %0 %1 shadows module %2, which may cause failures when importing %3 or its clients in some configurations; please rename either the %0 %1 or the module %2, or see https://bugs.swift.org/browse/SR-14195 for workarounds
rebuilding module '%0' from interface '%1'
SDK build version is '%0'; prebuilt modules were built using SDK build version: '%1'
%select{compiled|cached|forwarding|prebuilt}0 module is out of date: '%1'
dependency is out of date: '%0'
dependency is missing: '%0'
unable to load compiled module '%0'
unable to load compiled module '%0': %1
unknown value for SWIFT_FORCE_MODULE_LOADING variable: '%0'
error while creating remark serializer: '%0'
building module interface without lock file
timed out waiting to acquire lock file for module interface '%0'
option '%0' is required
'-output-dir' argument '%0' does not exist or is not a directory
expected %select{%error|provided|member|potential member|dynamic member}0 dependency does not exist: %1
unexpected %select{%error|%error|member|potential member|dynamic member}0 dependency: %1
unexpected provided entity: %0
unexpected dependency exists: %0
expected {{ in expectation
didn't find '}}' to match '{{' in expectation
module '%0' cannot be built with any of the -experimental-skip-*-function-bodies* flags; they have been automatically disabled
ignored access notes file at '%0' because it cannot be read: %1
ignored access notes file because it cannot be parsed: %0
ignored invalid content in access notes file: %0
parallel execution not supported; falling back to serial execution
unable to execute command: %0
%0 command failed due to signal (use -v to see invocation)
%0 command failed due to signal %1 (use -v to see invocation)
%0 command failed with exit code %1 (use -v to see invocation)
unable to handle compilation, expected exactly one frontend job
expected a swift frontend command
cannot specify -o when generating multiple output files
-static may not be used with -emit-executable
unable to load output file map '%1': %0
no output file map specified
unable to make temporary file: %0
no input files
unexpected input file: %0
unknown target '%0'
using bridging headers with framework targets is unsupported
using bridging headers with module interfaces is unsupported
the flag '-i' is no longer required and has been removed; use '%0 input-filename'
unnecessary option '%0'; this is the default for '%1' with no input files
option '%0' is not supported by '%1'; did you mean to use '%2'?
ignoring -incremental (currently requires an output file map)
ignoring -incremental; output file map has no master dependencies entry ("%0" under "")
unable to open incremental comparison log file '%0'
Swift requires a minimum deployment target of %0
Swift does not support the SDK '%0'
iOS %0 does not support 32-bit programs
unsupported '%select{-target|-target-variant}1' value '%0'; use 'ios-macabi' instead
unable to find Objective-C runtime support library 'arclite'; pass '-no-link-objc-runtime' to silence this warning
unable to determine when '%0' was last modified: %1
unable to load dependencies file "%0", disabling incremental mode
input file '%0' was modified during the build
conflicting options '%0' and '%1'
'%0' is not supported with '%1'
'%0' requires '%1'
ignoring -embed-bitcode since no object file is being generated
ignoring -embed-bitcode-marker since no object file is being generated
ignoring '-verify-debug-info'; no debug info is being generated
'-verify-incremental-dependencies' requires '-incremental'
no profdata file exists at '%0'
Emission of optimization records has been disabled, because it requires a single compiler invocation: consider enabling the -whole-module-optimization flag
ignoring '-enable-batch-mode' because '%0' was also specified
ignoring '-wmo' because '-dump-ast' was also specified
the option '-driver-use-filelists' is deprecated; use '-driver-filelist-threshold=0' instead
unable to load primary swift file "%0", %1
missing migration script from path '%0'
-static-stdlib is no longer supported on Apple platforms
The only C++ standard library supported on Apple platforms is libc++
SDK settings were ignored because 'SDKSettings.json' could not be parsed
'%0' is not a valid name
given location is not valid
the given new name '%0' does not match the arity of the old name '%1'
the 'call' name usage cannot be used with a non-function-like name '%0'
cannot resolve location as name
given location does not belong to module '%0'
value decl '%0' has no declaration location
value decl '%0' is referenced out of range
selected range has more than one entry point
selected range contains %0 but not its target loop
given location is not on a default statement
cannot find enclosing switch statement
no remaining cases to expand
the name at the given location cannot be renamed to '%0'
cannot find inserting position
cannot refactor as callback closure argument missing
cannot refactor as callback arguments do not match declaration
cannot refactor complex if conditions
cannot refactor mixed nil and not-nil conditions
cannot refactor switch with fallthrough
cannot refactor switch with default case
cannot refactor switch using a case with multiple items
cannot refactor switch using a case with where clause
%0 has generic signature change from %1 to %2
%0(%1) is now %2 representable
%0 has been removed%select{| (deprecated)}1
%0 has been moved to %1
%0 has been renamed to %1
%0 has %1 type change from %2 to %3
%0 changes from %1 to %2
%0 is now %1
%0 in a non-resilient type changes position from %1 to %2
%0 is added to a non-resilient type
%0 is %select{now|no longer}1 a stored property
%0 is %select{now|no longer}1 a non-final instance function
%0 has removed default argument from %1
%0 has removed %select{conformance to|inherited protocol}2 %1
%0 has added inherited protocol %1
%0 has added a conformance to an existing protocol %1
%0 has removed default type %1
%0 has been added as a protocol requirement
%0 has removed its super class %1
%0 has changed its super class from %1 to %2
%0 has been changed to a %1
%0 is %select{now|no longer}1 an optional requirement
%0 is no longer open for subclassing
%0 has %select{removed|added}2 @escaping in %1
%0 has self access kind changing from %1 to %2
%0 has %1 changing from %2 to %3
%0 has type witness type for %1 changing from %2 to %3
%0 now requires%select{| no}1 new witness table entry
%0 is a new API without @available attribute
%0 has ObjC name change from %1 to %2
%0 has been added as a designated initializer to an open class
%0 has new designated initializers that are not visible to clients
%0 no longer inherits convenience inits from its superclass
%0 has been added as a new enum case
cannot read breakage allowlist at '%0'
%select{| () }0-> <#Result#> %select{|in }0
 %select{as!|as}0 %1
@%0 
@available(%0 %1, *)
<not a fix-it>
This documentation comment was inherited from 
parsing comment for
PolymorphicEffectRequirementsRequest
PolymorphicEffectKindRequest
ConformanceHasEffectRequest
===CYCLE DETECTED===
unapplied
single
double
compound
NilLiteral
BooleanLiteral
IntegerLiteral
FloatLiteral
StringLiteral
MagicIdentifierLiteral
InterpolatedStringLiteral
ObjectLiteral
DiscardAssignment
DeclRef
SuperRef
OtherConstructorDeclRef
DotSyntaxBaseIgnored
OverloadedDeclRef
UnresolvedDeclRef
MemberRef
DynamicMemberRef
DynamicSubscript
UnresolvedSpecialize
UnresolvedMember
UnresolvedDot
Paren
DotSelf
Await
UnresolvedMemberChainResult
ForceTry
OptionalTry
Dictionary
KeyPathApplication
TupleElement
CaptureList
Closure
AutoClosure
InOut
VarargExpansion
DynamicType
RebindSelfInConstructor
OpaqueValue
PropertyWrapperValuePlaceholder
AppliedPropertyWrapper
DefaultArgument
BindOptional
OptionalEvaluation
ForceValue
OpenExistential
MakeTemporarilyEscapable
Call
PrefixUnary
PostfixUnary
Binary
DotSyntaxCall
ConstructorRefCall
Load
DestructureTuple
UnresolvedTypeConversion
FunctionConversion
CovariantFunctionConversion
CovariantReturnConversion
ImplicitlyUnwrappedFunctionConversion
MetatypeConversion
CollectionUpcastConversion
Erasure
AnyHashableErasure
ConditionalBridgeFromObjC
DerivedToBase
ArchetypeToSuper
InjectIntoOptional
ClassMetatypeToObject
ExistentialMetatypeToObject
ProtocolMetatypeToObject
InOutToPointer
ArrayToPointer
StringToPointer
PointerToPointer
ForeignObjectConversion
UnevaluatedInstance
UnderlyingToOpaque
DifferentiableFunction
LinearFunction
DifferentiableFunctionExtractOriginal
LinearFunctionExtractOriginal
LinearToDifferentiableFunction
ForcedCheckedCast
ConditionalCheckedCast
Coerce
Arrow
EnumIsCase
CodeCompletion
UnresolvedPattern
LazyInitializer
EditorPlaceholder
ObjCSelector
KeyPath
KeyPathDot
OneWay
file reference
image
color
(null)
closure
default arg for param 
expression
CallerSideDefaultArgExprRequest
<nullptr>
aspect: 
fingerprint: 
no fingerprint
 sequence number: 
 is provides: 
 depends on:
NULL
Concrete
Explicit
Inferred
Nested type match
Parent
Protocol requirement
Inferred protocol requirement
Requirement signature self
Superclass
Layout
Equivalent type
 (via 
 (abstract 
Equivalence class represented by 
Members: 
Conformance constraints:
 [derived]
Same-type constraints:
Concrete type: 
Superclass: 
Layout: 
Delayed requirements:
---Rewrite tree---
 [represented by 
 [equivalence class 
 -- 
Potential archetypes:
Equivalence classes:
 `--
(cont'd)
 --> 
 where 
Too many explicit requirements
init
subscript
deinit
(index_subset capacity=
 indices=(
_UnknownLayout
AnyObject
_NativeClass
_RefCountedObject
_NativeRefCountedObject
_Trivial
_TrivialAtMost
populate-source-file-class-member-cache
populate-module-class-member-cache
source-file-populate-cache
module-populate-cache
source-file-lookup-class-member
SYNTHESIZED FILE
(Builtin)
(synthesized)
Swift
SwiftOnoneSupport
key 'version' has invalid value: 
PrivateFrameworks
ModuleImplicitImportsRequest
PrimarySourceFilesRequest
GetImplicitSendableRequest
LookupConformanceInModuleRequest
ParseSourceFileRequest
HasImplementationOnlyImportsRequest
SPIGroupsRequest
ModuleLibraryLevelRequest
Overloadable
TypesOnly
LookupInModuleRequest
AllowProtocolMembers
IgnoreAccessControl
IncludeOuterResults
TypeLookup
base: 
(no-base)
QualifiedLookup
UnqualifiedLookup
NL_ProtocolMembers
NL_RemoveNonVisible
NL_RemoveOverridden
NL_IgnoreAccessControl
NL_OnlyTypes
NL_IncludeAttributeImplements
LastExtensionIncluded:
  nullptr
Lookup:
 (lazily complete)
UnderlyingTypeDeclsReferencedRequest
SelfBoundsFromWhereClauseRequest
DirectLookupRequest
AnyObjectLookupRequest
QualifiedLookupRequest
ModuleQualifiedLookupRequest
InheritedDeclsReferencedRequest
looking up 
 from 
 with options 
directly looking up 
 on 
looking up operator 
 in 
looking up conformance to 
 for 
(null)
LookupInfixOperatorRequest
LookupPrefixOperatorRequest
LookupPostfixOperatorRequest
LookupPrecedenceGroupRequest
argument
parenthesized pattern
tuple pattern
pattern variable binding
'_' pattern
pattern type annotation
prefix 'is' pattern
expression pattern
'var' binding pattern
enum case matching pattern
optional .Some matching pattern
bool matching pattern
Expr
(pattern @ 
tvOS
watchOS
macOS
iOSApplicationExtension
tvOSApplicationExtension
watchOSApplicationExtension
macOSApplicationExtension
macCatalyst
macCatalystApplicationExtension
OpenBSD
Windows
application extensions for iOS
application extensions for tvOS
application extensions for watchOS
application extensions for macOS
Mac Catalyst
application extensions for Mac Catalyst
NULL declaration!
willset
didset
declaration 
 (at 
 (in module '
NULL expression!
expression at 
NULL statement!
statement at 
NULL pattern!
pattern at 
NULL type!
type '
 (declared at 
NULL clang type!
NULL protocol conformance!
protocol conformance to 
 in decl context:
    ---
ConditionalRequirementsRequest
TypeWitnessRequest
ValueWitnessRequest
LookupAllConformancesInContextRequest
Brace
Return
Defer
Guard
While
DoCatch
RepeatWhile
ForEach
Switch
Fallthrough
Fail
Throw
PoundAssert
Unknown FP semantics
IsCallableNominalTypeRequest
HasDynamicMemberLookupAttributeRequest
HasDynamicCallableAttributeRequest
structural
interface
contextual
null
@_specialize
(SIL generic parameter list)
minimal
maximal
precedence group 
 at 
resolve implicit initializer
resolve CodingKeys
resolve Encodable.encode(to:)
resolve Decodable.init(from:)
AST verification
while resolving type 
non-generic
property-wrapper
global-actor
actor-isolated to instance of 
actor-independent
unspecified actor isolation
actor-isolated to global actor 
RequirementRequest
 versions=
extension.
 src_range=
if_then
if_else
condition_following_availability
guard_fallthrough
guard_else
while_body
,+Inf)
(_forward)
(reverse)
(_linear)
dynamicContext: 
staticContext: 
selfBounds: 
performUnqualifedLookup
Scopes:
Look up
' at: 
Starting in: 
USRGenerationRequest
Hyphen
Hyphen Minus
Non-Breaking Hyphen
Figure Dash
En Dash
Small Em Dash
Arabic Full Stop
Hyphen Bullet
Modifier Letter Minus Sign
Minus Sign
Heavy Minus Sign
Coptic Capital Letter Dialect-P Ni
Arabic Date Separator
Comma
Arabic Decimal Separator
Single Low-9 Quotation Mark
Lisu Letter Tone Na Po
Greek Question Mark
Semicolon
Devanagari Sign Visarga
Gujarati Sign Visarga
Fullwidth Colon
Armenian Full Stop
Syriac Supralinear Colon
Syriac Sublinear Colon
Runic Multiple Punctuation
Presentation Form For Vertical Two Dot Leader
Mongolian Full Stop
Mongolian Manchu Full Stop
Two Dot Punctuation
Hebrew Punctuation Sof Pasuq
Modifier Letter Raised Colon
Modifier Letter Colon
Ratio
Modifier Letter Triangular Colon
Lisu Letter Tone Mya Jeu
Fullwidth Exclamation Mark
Exclamation Mark
Latin Letter Retroflex Click
Tifinagh Letter Tuareg Yang
Latin Letter Glottal Stop
Question Mark
Latin Capital Letter Glottal Stop
Devanagari Letter Glottal Stop
Cherokee Letter He
Bamum Letter Ntuu
Musical Symbol Combining Augmentation Dot
Full Stop
One Dot Leader
Syriac Supralinear Full Stop
Syriac Sublinear Full Stop
Vai Full Stop
Kharoshthi Punctuation Dot
Arabic-Indic Digit Zero
Extended Arabic-Indic Digit Zero
Lisu Letter Tone Mya Ti
Fullwidth Left Square Bracket
Left Parenthesis
Medium Left Parenthesis Ornament
Light Left Tortoise Shell Bracket Ornament
Left Tortoise Shell Bracket
Ornate Left Parenthesis
Fullwidth Right Square Bracket
Right Parenthesis
Medium Right Parenthesis Ornament
Light Right Tortoise Shell Bracket Ornament
Right Tortoise Shell Bracket
Ornate Right Parenthesis
Medium Left Curly Bracket Ornament
Left Curly Bracket
Musical Symbol Brace
Medium Right Curly Bracket Ornament
Right Curly Bracket
Low Asterisk
Asterisk
Arabic Five Pointed Star
Asterisk Operator
Old Italic Letter Ess
Philippine Single Punctuation
Forward Slash
Caret Insertion Point
Division Slash
Fraction Slash
Box Drawings Light Diagonal Upper Right To Lower Left
Mathematical Rising Diagonal
Big Solidus
Greek Instrumental Notation Symbol-47
Cjk Stroke Sp
Vertical Kana Repeat Mark Upper Half
Coptic Capital Letter Old Coptic Esh
Katakana Letter No
Cjk Unified Ideograph-4E3F
Kangxi Radical Slash
Fullwidth Reverse Solidus
Back Slash
Small Reverse Solidus
Set Minus
Mathematical Falling Diagonal
Reverse Solidus Operator
Big Reverse Solidus
Greek Vocal Notation Symbol-16
Greek Instrumental Notation Symbol-48
Cjk Stroke D
Cjk Unified Ideograph-4E36
Kangxi Radical Dot
Latin Small Letter Um
Ampersand
Runic Cross Punctuation
Plus Sign
Heavy Plus Sign
Lycian Letter H
Single Left-Pointing Angle Quotation Mark
Less Than Sign
Heavy Left-Pointing Angle Quotation Mark Ornament
Modifier Letter Left Arrowhead
Greek Instrumental Notation Symbol-40
Canadian Syllabics Pa
Runic Letter Kauna
Canadian Syllabics Hyphen
Equals Sign
Double Hyphen
Katakana-Hiragana Double Hyphen
Lisu Punctuation Full Stop
Single Right-Pointing Angle Quotation Mark
Greater Than Sign
Heavy Right-Pointing Angle Quotation Mark Ornament
Modifier Letter Right Arrowhead
Greek Instrumental Notation Symbol-42
Canadian Syllabics Po
Miao Letter Archaic Zza
selector
column
assert
fileLiteral
imageLiteral
colorLiteral
    
<<<<
>>>>>>> 
reverse, 
wrt:
-define-availability argument
speed
inlineable
_versioned
_inlineable
propertyDelegate
_propertyWrapper
concurrent
warn_unused_result
(C type)
opened
_opaqueReturnTypeOf
actor class
class, 
file:
'#sourceLocation'
line:
'#line'
: <# Type #>
enum 'case'
argument of '
completionHandlerIndex
a getter
a setter
an addressor
a mutable addressor
mutable addressor
a 'read' accessor
'read' accessor
a 'modify' accessor
'modify' accessor
'willSet'
'didSet'
original module name
<NULL>
 [recorded] 
<layout>
 [deferred]
 (unknown children)
 [deferred] 
targetEnvironment(simulator)
a unary comparison '>=' or '<'; for example, '>=2.2' or '<2.2'
os(UIKitForMac)
targetEnvironment(macCatalyst)
operating system
endianness
target environment
pointer authentication scheme
_endian
_runtime
_ptrauth
async
reasync
reasync 
constant
variable
'inout'
'shared'
'owned'
macCatalystApplicationExtension
With parser at source location: 
CodeCompletionSecondPassRequest
super.
$defer
, introduced:
else 
 break
'#assert' message
 <#type#>
======================
--------------
Offset 
kw_associatedtype
kw_class
kw_deinit
kw_enum
kw_extension
kw_func
kw_import
kw_init
kw_inout
kw_let
kw_operator
kw_precedencegroup
kw_protocol
kw_struct
kw_subscript
kw_typealias
kw_var
kw_fileprivate
kw_internal
kw_private
kw_public
kw_static
kw_defer
kw_if
kw_guard
kw_do
kw_repeat
kw_else
kw_for
kw_in
kw_while
kw_return
kw_break
kw_continue
kw_fallthrough
kw_switch
kw_case
kw_default
kw_where
kw_catch
kw_throw
kw_as
kw_Any
kw_false
kw_is
kw_nil
kw_rethrows
kw_super
kw_self
kw_Self
kw_true
kw_try
kw_throws
kw___FILE__
kw___LINE__
kw___COLUMN__
kw___FUNCTION__
kw___DSO_HANDLE__
kw__
l_paren
r_paren
l_brace
r_brace
l_square
r_square
l_angle
r_angle
period_prefix
ellipsis
equal
at_sign
amp_prefix
backtick
exclaim_postfix
question_postfix
question_infix
string_quote
single_quote
multiline_string_quote
pound_keyPath
pound_line
pound_selector
pound_file
pound_fileID
pound_filePath
pound_column
pound_function
pound_dsohandle
pound_sourceLocation
pound_if
pound_else
pound_elseif
pound_endif
pound_available
pound_fileLiteral
pound_imageLiteral
pound_colorLiteral
floating_literal
oper_binary_unspaced
oper_binary_spaced
oper_postfix
oper_prefix
dollarident
contextual_keyword
raw_string_delimiter
string_segment
string_interpolation_anchor
kw_yield
kw_undef
kw_sil
kw_sil_stage
kw_sil_property
kw_sil_vtable
kw_sil_global
kw_sil_witness_table
kw_sil_default_witness_table
kw_sil_differentiability_witness
kw_sil_coverage_map
kw_sil_scope
sil_dollar
sil_exclamation
code_complete
sil_local_name
NUM_TOKENS (unset)
 [missing] 
(text="
Token
Stmt
UnknownDecl
UnknownExpr
UnknownStmt
UnknownType
UnknownPattern
CodeBlockItem
CodeBlockItemList
CodeBlock
InOutExpr
PoundColumnExpr
TupleExprElementList
ArrayElementList
DictionaryElementList
StringLiteralSegments
TryExpr
AwaitExpr
DeclNameArgument
DeclNameArgumentList
DeclNameArguments
IdentifierExpr
SuperRefExpr
NilLiteralExpr
DiscardAssignmentExpr
AssignmentExpr
SequenceExpr
ExprList
PoundLineExpr
PoundFileExpr
PoundFileIDExpr
PoundFilePathExpr
PoundFunctionExpr
PoundDsohandleExpr
SymbolicReferenceExpr
PrefixOperatorExpr
BinaryOperatorExpr
ArrowExpr
FloatLiteralExpr
TupleExpr
ArrayExpr
DictionaryExpr
TupleExprElement
ArrayElement
DictionaryElement
IntegerLiteralExpr
BooleanLiteralExpr
TernaryExpr
MemberAccessExpr
IsExpr
AsExpr
TypeExpr
ClosureCaptureItem
ClosureCaptureItemList
ClosureCaptureSignature
ClosureParam
ClosureParamList
ClosureSignature
ClosureExpr
UnresolvedPatternExpr
MultipleTrailingClosureElement
MultipleTrailingClosureElementList
FunctionCallExpr
SubscriptExpr
OptionalChainingExpr
ForcedValueExpr
PostfixUnaryExpr
SpecializeExpr
StringSegment
ExpressionSegment
StringLiteralExpr
KeyPathExpr
KeyPathBaseExpr
ObjcNamePiece
ObjcName
ObjcKeyPathExpr
ObjcSelectorExpr
PostfixIfConfigExpr
EditorPlaceholderExpr
ObjectLiteralExpr
TypeInitializerClause
TypealiasDecl
AssociatedtypeDecl
FunctionParameterList
ParameterClause
ReturnClause
FunctionSignature
IfConfigClause
IfConfigClauseList
IfConfigDecl
PoundErrorDecl
PoundWarningDecl
PoundSourceLocation
PoundSourceLocationArgs
DeclModifier
InheritedType
InheritedTypeList
TypeInheritanceClause
MemberDeclBlock
MemberDeclList
MemberDeclListItem
SourceFile
InitializerClause
FunctionParameter
ModifierList
FunctionDecl
InitializerDecl
DeinitializerDecl
AccessLevelModifier
AccessPathComponent
AccessPath
ImportDecl
AccessorParameter
AccessorDecl
AccessorList
AccessorBlock
PatternBindingList
VariableDecl
EnumCaseElement
EnumCaseElementList
EnumCaseDecl
OperatorDecl
IdentifierList
OperatorPrecedenceAndTypes
PrecedenceGroupDecl
PrecedenceGroupAttributeList
PrecedenceGroupRelation
PrecedenceGroupNameList
PrecedenceGroupNameElement
PrecedenceGroupAssignment
PrecedenceGroupAssociativity
TokenList
NonEmptyTokenList
CustomAttribute
AttributeList
SpecializeAttributeSpecList
LabeledSpecializeEntry
TargetFunctionEntry
NamedAttributeStringArgument
DeclName
ImplementsAttributeArguments
ObjCSelectorPiece
DifferentiableAttributeArguments
DifferentiabilityParamsClause
DifferentiabilityParams
DifferentiabilityParamList
DifferentiabilityParam
DerivativeRegistrationAttributeArguments
QualifiedDeclName
FunctionDeclName
ContinueStmt
WhileStmt
DeferStmt
ExpressionStmt
SwitchCaseList
RepeatWhileStmt
GuardStmt
WhereClause
ForInStmt
SwitchStmt
CatchClauseList
DoStmt
ReturnStmt
YieldStmt
YieldList
FallthroughStmt
BreakStmt
CaseItemList
CatchItemList
ConditionElement
AvailabilityCondition
MatchingPatternCondition
OptionalBindingCondition
ConditionElementList
DeclarationStmt
ThrowStmt
IfStmt
ElseIfContinuation
ElseBlock
SwitchCase
SwitchDefaultLabel
CaseItem
CatchItem
SwitchCaseLabel
CatchClause
PoundAssertStmt
GenericWhereClause
GenericRequirementList
GenericRequirement
SameTypeRequirement
GenericParameterList
GenericParameter
GenericParameterClause
ConformanceRequirement
SimpleTypeIdentifier
MemberTypeIdentifier
ClassRestrictionType
ArrayType
DictionaryType
MetatypeType
OptionalType
SomeType
ImplicitlyUnwrappedOptionalType
CompositionTypeElement
CompositionTypeElementList
CompositionType
TupleTypeElement
TupleTypeElementList
FunctionType
AttributedType
GenericArgumentList
GenericArgument
GenericArgumentClause
TypeAnnotation
EnumCasePattern
IsTypePattern
OptionalPattern
IdentifierPattern
AsTypePattern
TuplePattern
WildcardPattern
TuplePatternElement
ExpressionPattern
TuplePatternElementList
ValueBindingPattern
AvailabilitySpecList
AvailabilityArgument
AvailabilityLabeledArgument
AvailabilityVersionRestriction
VersionTuple
(trivia 
space 
tab 
verticalTab 
formfeed 
newline 
carriageReturn 
carriageReturnLineFeed 
lineComment 
blockComment 
docLineComment 
docBlockComment 
garbageText 
declaration
statement
attention
complexity
copyright
experiment
important
invariant
localizationkey
mutatingvariant
nonmutatingvariant
postcondition
precondition
recommended
recommendedover
swift
dSYM
autolink
swiftmodule
swiftdoc
swiftinterface
private.swiftinterface
swiftmodulesummary
swiftsourceinfo
swiftdeps
swiftdeps.external
remap
importedmodules
trace.json
dependencies.json
features.json
opt.yaml
opt.bitstream
swiftcrossimport
swiftoverlay
ast-dump
image
object
dependencies
private-swiftinterface
assembly
raw-sil
raw-sib
llvm-ir
llvm-bc
diagnostics
objc-header
swift-dependencies
external-swift-dependencies
imported-modules
module-trace
json-dependencies
json-features
index-data
index-unit-output-path
yaml-opt-record
bitstream-opt-record
none
signal
\u00
null
macOS
UIKitForMac
Linux
FreeBSD
OpenBSD
Windows
Android
Cygwin
Haiku
WASI
powerpc64
powerpc64le
s390x
wasm32
little
_ObjC
_Native
macabi
macCatalyst
_none
_arm64e
StaticAssert
AsyncAwait
EffectfulProp
MarkerProtocol
Actors
ConcurrentFunctions
RethrowsProtocol
GlobalActors
BuiltinJob
Sendable
BuiltinExecutor
BuiltinContinuation
Actors2
BuiltinTaskGroup
InheritActorContext
ImplicitSelfCapture
empty YAML stream
no root
root was not a MappingNode
bad key
bad value
input path not a scalar node
output map not a MappingNode
kind not a ScalarNode
path not a scalar node
Output file map parse failed
android
linux
freebsd
openbsd
cygwin
mingw
windows
haiku
wasi
armv7
armv6
ProductBuildVersion
/System/Library/CoreServices/SystemVersion.plist
macosx
iphoneos
iphonesimulator
appletvos
appletvsimulator
watchos
watchsimulator
aarch64
apple
darwin
</key>
<string>
</string>
<invalid loc>
 RangeText="
SWIFTC_MAXIMUM_DETERMINISM
Building Target
Running Program
"Frontend.NumProcessFailures": 
"Frontend.NumInstructionsExecuted": 
"Frontend.MaxMallocUsage": 
"AST.NumSourceBuffers": 
"AST.NumSourceLines": 
"AST.NumSourceLinesPerSecond": 
"AST.NumLinkLibraries": 
"AST.NumLoadedModules": 
"AST.NumTotalClangImportedEntities": 
"AST.NumASTBytesAllocated": 
"AST.NumDependencies": 
"AST.NumIncrementalDependencies": 
"AST.NumReferencedTopLevelNames": 
"AST.NumReferencedDynamicNames": 
"AST.NumReferencedMemberNames": 
"AST.NumDecls": 
"AST.NumLocalTypeDecls": 
"AST.NumObjCMethods": 
"AST.NumOperators": 
"AST.NumPrecedenceGroups": 
"AST.NumModuleLookupValue": 
"AST.NumModuleLookupClassMember": 
"AST.NumASTScopeLookups": 
"AST.NumASTScopeExpansions": 
"AST.ImportSetFoldHit": 
"AST.ImportSetFoldMiss": 
"AST.ImportSetCacheHit": 
"AST.ImportSetCacheMiss": 
"AST.ModuleVisibilityCacheHit": 
"AST.ModuleVisibilityCacheMiss": 
"AST.ModuleShadowCacheHit": 
"AST.ModuleShadowCacheMiss": 
"Parse.NumFunctionsParsed": 
"Parse.NumIterableDeclContextParsed": 
"Parse.CodeCompletionSecondPassRequest": 
"Parse.ParseMembersRequest": 
"Parse.ParseAbstractFunctionBodyRequest": 
"Parse.ParseSourceFileRequest": 
"Sema.NumConformancesDeserialized": 
"Sema.NumCrossImportsChecked": 
"Sema.NumCrossImportsFound": 
"Sema.NumConstraintScopes": 
"Sema.NumLeafScopes": 
"Sema.NumConstraintsConsideredForEdgeContraction": 
"Sema.NumCyclicOneWayComponentsCollapsed": 
"Sema.NumDeclsDeserialized": 
"Sema.NumDeclsTypechecked": 
"Sema.NumAccessorsSynthesized": 
"Sema.NumAccessorBodiesSynthesized": 
"Sema.NumGenericSignatureBuilders": 
"Sema.NumLazyRequirementSignatures": 
"Sema.NumLazyRequirementSignaturesLoaded": 
"Sema.NumLazyIterableDeclContexts": 
"Sema.NamedLazyMemberLoadSuccessCount": 
"Sema.NumTypesDeserialized": 
"Sema.NumUnloadedLazyIterableDeclContexts": 
"Sema.AccessLevelRequest": 
"Sema.DefaultAndMaxAccessLevelRequest": 
"Sema.SetterAccessLevelRequest": 
"Sema.AnyObjectLookupRequest": 
"Sema.CustomAttrNominalRequest": 
"Sema.DirectLookupRequest": 
"Sema.DirectOperatorLookupRequest": 
"Sema.DirectPrecedenceGroupLookupRequest": 
"Sema.ExtendedNominalRequest": 
"Sema.GenericParamListRequest": 
"Sema.GetDestructorRequest": 
"Sema.InheritedDeclsReferencedRequest": 
"Sema.InheritedProtocolsRequest": 
"Sema.LookupConformanceInModuleRequest": 
"Sema.LookupInModuleRequest": 
"Sema.ModuleQualifiedLookupRequest": 
"Sema.QualifiedLookupRequest": 
"Sema.SelfBoundsFromWhereClauseRequest": 
"Sema.SuperclassDeclRequest": 
"Sema.HasMissingDesignatedInitializersRequest": 
"Sema.TypeDeclsFromWhereClauseRequest": 
"Sema.UnderlyingTypeDeclsReferencedRequest": 
"Sema.UnqualifiedLookupRequest": 
"Sema.LookupPrefixOperatorRequest": 
"Sema.LookupInfixOperatorRequest": 
"Sema.LookupPostfixOperatorRequest": 
"Sema.LookupPrecedenceGroupRequest": 
"Sema.AbstractGenericSignatureRequest": 
"Sema.ApplyAccessNoteRequest": 
"Sema.AttachedResultBuilderRequest": 
"Sema.AttachedPropertyWrapperTypeRequest": 
"Sema.AttachedPropertyWrappersRequest": 
"Sema.CallerSideDefaultArgExprRequest": 
"Sema.CheckInconsistentImplementationOnlyImportsRequest": 
"Sema.CheckRedeclarationRequest": 
"Sema.ClassAncestryFlagsRequest": 
"Sema.CodeCompletionFileRequest": 
"Sema.CompareDeclSpecializationRequest": 
"Sema.ConditionalRequirementsRequest": 
"Sema.IsDeclRefinementOfRequest": 
"Sema.CustomAttrTypeRequest": 
"Sema.DefaultArgumentExprRequest": 
"Sema.DefaultArgumentInitContextRequest": 
"Sema.DefaultDefinitionTypeRequest": 
"Sema.DefaultTypeRequest": 
"Sema.DifferentiableAttributeTypeCheckRequest": 
"Sema.DerivativeAttrOriginalDeclRequest": 
"Sema.TypeEraserHasViableInitRequest": 
"Sema.DynamicallyReplacedDeclRequest": 
"Sema.ABIMembersRequest": 
"Sema.AllMembersRequest": 
"Sema.SpecializeAttrTargetDeclRequest": 
"Sema.EnumRawValuesRequest": 
"Sema.EnumRawTypeRequest": 
"Sema.ExistentialConformsToSelfRequest": 
"Sema.ExistentialTypeSupportedRequest": 
"Sema.ExtendedTypeRequest": 
"Sema.ResultBuilderTypeRequest": 
"Sema.IsAsyncHandlerRequest": 
"Sema.CanBeAsyncHandlerRequest": 
"Sema.IsActorRequest": 
"Sema.IsDefaultActorRequest": 
"Sema.GlobalActorInstanceRequest": 
"Sema.GlobalActorAttributeRequest": 
"Sema.ActorIsolationRequest": 
"Sema.FunctionOperatorRequest": 
"Sema.GenericSignatureRequest": 
"Sema.HasCircularInheritedProtocolsRequest": 
"Sema.HasCircularRawValueRequest": 
"Sema.HasDynamicMemberLookupAttributeRequest": 
"Sema.HasDynamicCallableAttributeRequest": 
"Sema.HasImplementationOnlyImportsRequest": 
"Sema.ModuleLibraryLevelRequest": 
"Sema.InferredGenericSignatureRequest": 
"Sema.InheritedTypeRequest": 
"Sema.InheritsSuperclassInitializersRequest": 
"Sema.InitKindRequest": 
"Sema.BodyInitKindRequest": 
"Sema.InterfaceTypeRequest": 
"Sema.IsAccessorTransparentRequest": 
"Sema.IsCallableNominalTypeRequest": 
"Sema.IsDynamicRequest": 
"Sema.IsFinalRequest": 
"Sema.IsGetterMutatingRequest": 
"Sema.IsImplicitlyUnwrappedOptionalRequest": 
"Sema.IsObjCRequest": 
"Sema.IsSetterMutatingRequest": 
"Sema.LazyStoragePropertyRequest": 
"Sema.ValidatePrecedenceGroupRequest": 
"Sema.MangleLocalTypeDeclRequest": 
"Sema.ModuleImplicitImportsRequest": 
"Sema.NamingPatternRequest": 
"Sema.OpaqueReadOwnershipRequest": 
"Sema.OpaqueResultTypeRequest": 
"Sema.OperatorPrecedenceGroupRequest": 
"Sema.OverriddenDeclsRequest": 
"Sema.PatternBindingEntryRequest": 
"Sema.PrimarySourceFilesRequest": 
"Sema.PropertyWrapperAuxiliaryVariablesRequest": 
"Sema.PropertyWrapperInitializerInfoRequest": 
"Sema.PropertyWrapperBackingPropertyTypeRequest": 
"Sema.PropertyWrapperLValuenessRequest": 
"Sema.PropertyWrapperMutabilityRequest": 
"Sema.PropertyWrapperTypeInfoRequest": 
"Sema.ProtocolRequiresClassRequest": 
"Sema.RequirementRequest": 
"Sema.RequirementSignatureRequest": 
"Sema.RequiresOpaqueAccessorsRequest": 
"Sema.RequiresOpaqueModifyCoroutineRequest": 
"Sema.FragileFunctionKindRequest": 
"Sema.PolymorphicEffectKindRequest": 
"Sema.SelfAccessKindRequest": 
"Sema.StorageImplInfoRequest": 
"Sema.StoredPropertiesAndMissingMembersRequest": 
"Sema.StoredPropertiesRequest": 
"Sema.StructuralTypeRequest": 
"Sema.SuperclassTypeRequest": 
"Sema.SynthesizeAccessorRequest": 
"Sema.TangentStoredPropertyRequest": 
"Sema.TypeCheckFunctionBodyRequest": 
"Sema.TypeCheckASTNodeAtLocRequest": 
"Sema.UnderlyingTypeRequest": 
"Sema.USRGenerationRequest": 
"Sema.IsABICompatibleOverrideRequest": 
"Sema.IsStaticRequest": 
"Sema.NeedsNewVTableEntryRequest": 
"Sema.ParamSpecifierRequest": 
"Sema.ResultTypeRequest": 
"Sema.AreAllStoredPropertiesDefaultInitableRequest": 
"Sema.HasUserDefinedDesignatedInitRequest": 
"Sema.HasMemberwiseInitRequest": 
"Sema.PreCheckResultBuilderRequest": 
"Sema.ResolveImplicitMemberRequest": 
"Sema.ResolveTypeEraserTypeRequest": 
"Sema.PolymorphicEffectRequirementsRequest": 
"Sema.ConformanceHasEffectRequest": 
"Sema.ResolveTypeRequest": 
"Sema.SPIGroupsRequest": 
"Sema.SynthesizeMemberwiseInitRequest": 
"Sema.ResolveEffectiveMemberwiseInitRequest": 
"Sema.HasDefaultInitRequest": 
"Sema.SynthesizeDefaultInitRequest": 
"Sema.TypeCheckSourceFileRequest": 
"Sema.TypeWitnessRequest": 
"Sema.ValueWitnessRequest": 
"Sema.PatternTypeRequest": 
"Sema.ScopedImportLookupRequest": 
"Sema.ClosureHasExplicitResultRequest": 
"Sema.LookupAllConformancesInContextRequest": 
"Sema.SimpleDidSetRequest": 
"Sema.SynthesizeMainFunctionRequest": 
"Sema.GetImplicitSendableRequest": 
"Sema.AsyncAlternativeRequest": 
"Sema.IsDeclApplicableRequest": 
"Sema.RootAndResultTypeOfKeypathDynamicMemberRequest": 
"Sema.RootTypeOfKeypathDynamicMemberRequest": 
"Sema.TypeRelationCheckRequest": 
"Sema.CollectOverriddenDeclsRequest": 
"Sema.CursorInfoRequest": 
"Sema.ProvideDefaultImplForRequest": 
"Sema.RangeInfoRequest": 
"Sema.ResolveProtocolNameRequest": 
"SILGen.ASTLoweringRequest": 
"SILGen.ParseSILModuleRequest": 
"SILModule.NumSILGenFunctions": 
"SILModule.NumSILGenVtables": 
"SILModule.NumSILGenWitnessTables": 
"SILModule.NumSILGenDefaultWitnessTables": 
"SILModule.NumSILGenGlobalVariables": 
"SILOptimizer.ExecuteSILPipelineRequest": 
"SILOptimizer.LoweredSILRequest": 
"SILModule.NumSILOptFunctions": 
"SILModule.NumSILOptVtables": 
"SILModule.NumSILOptWitnessTables": 
"SILModule.NumSILOptDefaultWitnessTables": 
"SILModule.NumSILOptGlobalVariables": 
"IRGen.IRGenRequest": 
"IRGen.OptimizedIRRequest": 
"IRGen.SymbolObjectCodeRequest": 
"IRModule.NumIRGlobals": 
"IRModule.NumIRFunctions": 
"IRModule.NumIRAliases": 
"IRModule.NumIRIFuncs": 
"IRModule.NumIRNamedMetaData": 
"IRModule.NumIRValueSymbols": 
"IRModule.NumIRComdatSymbols": 
"IRModule.NumIRBasicBlocks": 
"IRModule.NumIRInsts": 
"IRModule.NumGOTEntries": 
"LLVM.NumLLVMBytesOutput": 
"TBDGen.GenerateTBDRequest": 
"TBDGen.PublicSymbolsRequest": 
"TBDGen.SymbolSourceMapRequest": 
"TBDGen.APIGenRequest": 
"Driver.NumDriverJobsRun": 
"Driver.NumDriverJobsSkipped": 
"Driver.NumProcessFailures": 
"Driver.NumDriverPipePolls": 
"Driver.NumDriverPipeReads": 
"Driver.DriverDepCascadingTopLevel": 
"Driver.DriverDepCascadingDynamic": 
"Driver.DriverDepCascadingNominal": 
"Driver.DriverDepCascadingMember": 
"Driver.DriverDepCascadingExternal": 
"Driver.DriverDepTopLevel": 
"Driver.DriverDepDynamic": 
"Driver.DriverDepNominal": 
"Driver.DriverDepMember": 
"Driver.DriverDepExternal": 
"Driver.ChildrenMaxRSS": 
Frontend.NumProcessFailures
Frontend.NumInstructionsExecuted
Frontend.MaxMallocUsage
AST.NumSourceBuffers
AST.NumSourceLines
AST.NumSourceLinesPerSecond
AST.NumLinkLibraries
AST.NumLoadedModules
AST.NumTotalClangImportedEntities
AST.NumASTBytesAllocated
AST.NumDependencies
AST.NumIncrementalDependencies
AST.NumReferencedTopLevelNames
AST.NumReferencedDynamicNames
AST.NumReferencedMemberNames
AST.NumDecls
AST.NumLocalTypeDecls
AST.NumObjCMethods
AST.NumOperators
AST.NumPrecedenceGroups
AST.NumModuleLookupValue
AST.NumModuleLookupClassMember
AST.NumASTScopeLookups
AST.NumASTScopeExpansions
AST.ImportSetFoldHit
AST.ImportSetFoldMiss
AST.ImportSetCacheHit
AST.ImportSetCacheMiss
AST.ModuleVisibilityCacheHit
AST.ModuleVisibilityCacheMiss
AST.ModuleShadowCacheHit
AST.ModuleShadowCacheMiss
Parse.NumFunctionsParsed
Parse.NumIterableDeclContextParsed
Parse.CodeCompletionSecondPassRequest
Parse.ParseMembersRequest
Parse.ParseAbstractFunctionBodyRequest
Parse.ParseSourceFileRequest
Sema.NumConformancesDeserialized
Sema.NumCrossImportsChecked
Sema.NumCrossImportsFound
Sema.NumConstraintScopes
Sema.NumLeafScopes
Sema.NumConstraintsConsideredForEdgeContraction
Sema.NumCyclicOneWayComponentsCollapsed
Sema.NumDeclsDeserialized
Sema.NumDeclsTypechecked
Sema.NumAccessorsSynthesized
Sema.NumAccessorBodiesSynthesized
Sema.NumGenericSignatureBuilders
Sema.NumLazyRequirementSignatures
Sema.NumLazyRequirementSignaturesLoaded
Sema.NumLazyIterableDeclContexts
Sema.NamedLazyMemberLoadSuccessCount
Sema.NumTypesDeserialized
Sema.NumUnloadedLazyIterableDeclContexts
Sema.AccessLevelRequest
Sema.DefaultAndMaxAccessLevelRequest
Sema.SetterAccessLevelRequest
Sema.AnyObjectLookupRequest
Sema.CustomAttrNominalRequest
Sema.DirectLookupRequest
Sema.DirectOperatorLookupRequest
Sema.DirectPrecedenceGroupLookupRequest
Sema.ExtendedNominalRequest
Sema.GenericParamListRequest
Sema.GetDestructorRequest
Sema.InheritedDeclsReferencedRequest
Sema.InheritedProtocolsRequest
Sema.LookupConformanceInModuleRequest
Sema.LookupInModuleRequest
Sema.ModuleQualifiedLookupRequest
Sema.QualifiedLookupRequest
Sema.SelfBoundsFromWhereClauseRequest
Sema.SuperclassDeclRequest
Sema.HasMissingDesignatedInitializersRequest
Sema.TypeDeclsFromWhereClauseRequest
Sema.UnderlyingTypeDeclsReferencedRequest
Sema.UnqualifiedLookupRequest
Sema.LookupPrefixOperatorRequest
Sema.LookupInfixOperatorRequest
Sema.LookupPostfixOperatorRequest
Sema.LookupPrecedenceGroupRequest
Sema.AbstractGenericSignatureRequest
Sema.ApplyAccessNoteRequest
Sema.AttachedResultBuilderRequest
Sema.AttachedPropertyWrapperTypeRequest
Sema.AttachedPropertyWrappersRequest
Sema.CallerSideDefaultArgExprRequest
Sema.CheckInconsistentImplementationOnlyImportsRequest
Sema.CheckRedeclarationRequest
Sema.ClassAncestryFlagsRequest
Sema.CodeCompletionFileRequest
Sema.CompareDeclSpecializationRequest
Sema.ConditionalRequirementsRequest
Sema.IsDeclRefinementOfRequest
Sema.CustomAttrTypeRequest
Sema.DefaultArgumentExprRequest
Sema.DefaultArgumentInitContextRequest
Sema.DefaultDefinitionTypeRequest
Sema.DefaultTypeRequest
Sema.DifferentiableAttributeTypeCheckRequest
Sema.DerivativeAttrOriginalDeclRequest
Sema.TypeEraserHasViableInitRequest
Sema.DynamicallyReplacedDeclRequest
Sema.ABIMembersRequest
Sema.AllMembersRequest
Sema.SpecializeAttrTargetDeclRequest
Sema.EnumRawValuesRequest
Sema.EnumRawTypeRequest
Sema.ExistentialConformsToSelfRequest
Sema.ExistentialTypeSupportedRequest
Sema.ExtendedTypeRequest
Sema.ResultBuilderTypeRequest
Sema.IsAsyncHandlerRequest
Sema.CanBeAsyncHandlerRequest
Sema.IsActorRequest
Sema.IsDefaultActorRequest
Sema.GlobalActorInstanceRequest
Sema.GlobalActorAttributeRequest
Sema.ActorIsolationRequest
Sema.FunctionOperatorRequest
Sema.GenericSignatureRequest
Sema.HasCircularInheritedProtocolsRequest
Sema.HasCircularRawValueRequest
Sema.HasDynamicMemberLookupAttributeRequest
Sema.HasDynamicCallableAttributeRequest
Sema.HasImplementationOnlyImportsRequest
Sema.ModuleLibraryLevelRequest
Sema.InferredGenericSignatureRequest
Sema.InheritedTypeRequest
Sema.InheritsSuperclassInitializersRequest
Sema.InitKindRequest
Sema.BodyInitKindRequest
Sema.InterfaceTypeRequest
Sema.IsAccessorTransparentRequest
Sema.IsCallableNominalTypeRequest
Sema.IsDynamicRequest
Sema.IsFinalRequest
Sema.IsGetterMutatingRequest
Sema.IsImplicitlyUnwrappedOptionalRequest
Sema.IsObjCRequest
Sema.IsSetterMutatingRequest
Sema.LazyStoragePropertyRequest
Sema.ValidatePrecedenceGroupRequest
Sema.MangleLocalTypeDeclRequest
Sema.ModuleImplicitImportsRequest
Sema.NamingPatternRequest
Sema.OpaqueReadOwnershipRequest
Sema.OpaqueResultTypeRequest
Sema.OperatorPrecedenceGroupRequest
Sema.OverriddenDeclsRequest
Sema.PatternBindingEntryRequest
Sema.PrimarySourceFilesRequest
Sema.PropertyWrapperAuxiliaryVariablesRequest
Sema.PropertyWrapperInitializerInfoRequest
Sema.PropertyWrapperBackingPropertyTypeRequest
Sema.PropertyWrapperLValuenessRequest
Sema.PropertyWrapperMutabilityRequest
Sema.PropertyWrapperTypeInfoRequest
Sema.ProtocolRequiresClassRequest
Sema.RequirementRequest
Sema.RequirementSignatureRequest
Sema.RequiresOpaqueAccessorsRequest
Sema.RequiresOpaqueModifyCoroutineRequest
Sema.FragileFunctionKindRequest
Sema.PolymorphicEffectKindRequest
Sema.SelfAccessKindRequest
Sema.StorageImplInfoRequest
Sema.StoredPropertiesAndMissingMembersRequest
Sema.StoredPropertiesRequest
Sema.StructuralTypeRequest
Sema.SuperclassTypeRequest
Sema.SynthesizeAccessorRequest
Sema.TangentStoredPropertyRequest
Sema.TypeCheckFunctionBodyRequest
Sema.TypeCheckASTNodeAtLocRequest
Sema.UnderlyingTypeRequest
Sema.USRGenerationRequest
Sema.IsABICompatibleOverrideRequest
Sema.IsStaticRequest
Sema.NeedsNewVTableEntryRequest
Sema.ParamSpecifierRequest
Sema.ResultTypeRequest
Sema.AreAllStoredPropertiesDefaultInitableRequest
Sema.HasUserDefinedDesignatedInitRequest
Sema.HasMemberwiseInitRequest
Sema.PreCheckResultBuilderRequest
Sema.ResolveImplicitMemberRequest
Sema.ResolveTypeEraserTypeRequest
Sema.PolymorphicEffectRequirementsRequest
Sema.ConformanceHasEffectRequest
Sema.ResolveTypeRequest
Sema.SPIGroupsRequest
Sema.SynthesizeMemberwiseInitRequest
Sema.ResolveEffectiveMemberwiseInitRequest
Sema.HasDefaultInitRequest
Sema.SynthesizeDefaultInitRequest
Sema.TypeCheckSourceFileRequest
Sema.TypeWitnessRequest
Sema.ValueWitnessRequest
Sema.PatternTypeRequest
Sema.ScopedImportLookupRequest
Sema.ClosureHasExplicitResultRequest
Sema.LookupAllConformancesInContextRequest
Sema.SimpleDidSetRequest
Sema.SynthesizeMainFunctionRequest
Sema.GetImplicitSendableRequest
Sema.AsyncAlternativeRequest
Sema.IsDeclApplicableRequest
Sema.RootAndResultTypeOfKeypathDynamicMemberRequest
Sema.RootTypeOfKeypathDynamicMemberRequest
Sema.TypeRelationCheckRequest
Sema.CollectOverriddenDeclsRequest
Sema.CursorInfoRequest
Sema.ProvideDefaultImplForRequest
Sema.RangeInfoRequest
Sema.ResolveProtocolNameRequest
SILGen.ASTLoweringRequest
SILGen.ParseSILModuleRequest
SILModule.NumSILGenFunctions
SILModule.NumSILGenVtables
SILModule.NumSILGenWitnessTables
SILModule.NumSILGenDefaultWitnessTables
SILModule.NumSILGenGlobalVariables
SILOptimizer.ExecuteSILPipelineRequest
SILOptimizer.LoweredSILRequest
SILModule.NumSILOptFunctions
SILModule.NumSILOptVtables
SILModule.NumSILOptWitnessTables
SILModule.NumSILOptDefaultWitnessTables
SILModule.NumSILOptGlobalVariables
IRGen.IRGenRequest
IRGen.OptimizedIRRequest
IRGen.SymbolObjectCodeRequest
IRModule.NumIRGlobals
IRModule.NumIRFunctions
IRModule.NumIRAliases
IRModule.NumIRIFuncs
IRModule.NumIRNamedMetaData
IRModule.NumIRValueSymbols
IRModule.NumIRComdatSymbols
IRModule.NumIRBasicBlocks
IRModule.NumIRInsts
IRModule.NumGOTEntries
LLVM.NumLLVMBytesOutput
TBDGen.GenerateTBDRequest
TBDGen.PublicSymbolsRequest
TBDGen.SymbolSourceMapRequest
TBDGen.APIGenRequest
Error opening -stats-output-dir file '
' for writing
Error opening -trace-stats-events file '
Time,Live,IsEntry,EventName,CounterName,
CounterDelta,CounterValue,EntityName,EntityRange
"entry",
"exit",
Failed to create directory '
Time.User.events
Time.System.events
Time.Process.events
Time.Wall.events
Frontend.NumProcessFailures.events
Frontend.NumInstructionsExecuted.events
Frontend.MaxMallocUsage.events
AST.NumSourceBuffers.events
AST.NumSourceLines.events
AST.NumSourceLinesPerSecond.events
AST.NumLinkLibraries.events
AST.NumLoadedModules.events
AST.NumTotalClangImportedEntities.events
AST.NumASTBytesAllocated.events
AST.NumDependencies.events
AST.NumIncrementalDependencies.events
AST.NumReferencedTopLevelNames.events
AST.NumReferencedDynamicNames.events
AST.NumReferencedMemberNames.events
AST.NumDecls.events
AST.NumLocalTypeDecls.events
AST.NumObjCMethods.events
AST.NumOperators.events
AST.NumPrecedenceGroups.events
AST.NumModuleLookupValue.events
AST.NumModuleLookupClassMember.events
AST.NumASTScopeLookups.events
AST.NumASTScopeExpansions.events
AST.ImportSetFoldHit.events
AST.ImportSetFoldMiss.events
AST.ImportSetCacheHit.events
AST.ImportSetCacheMiss.events
AST.ModuleVisibilityCacheHit.events
AST.ModuleVisibilityCacheMiss.events
AST.ModuleShadowCacheHit.events
AST.ModuleShadowCacheMiss.events
Parse.NumFunctionsParsed.events
Parse.NumIterableDeclContextParsed.events
Parse.CodeCompletionSecondPassRequest.events
Parse.ParseMembersRequest.events
Parse.ParseAbstractFunctionBodyRequest.events
Parse.ParseSourceFileRequest.events
Sema.NumConformancesDeserialized.events
Sema.NumCrossImportsChecked.events
Sema.NumCrossImportsFound.events
Sema.NumConstraintScopes.events
Sema.NumLeafScopes.events
Sema.NumConstraintsConsideredForEdgeContraction.events
Sema.NumCyclicOneWayComponentsCollapsed.events
Sema.NumDeclsDeserialized.events
Sema.NumDeclsTypechecked.events
Sema.NumAccessorsSynthesized.events
Sema.NumAccessorBodiesSynthesized.events
Sema.NumGenericSignatureBuilders.events
Sema.NumLazyRequirementSignatures.events
Sema.NumLazyRequirementSignaturesLoaded.events
Sema.NumLazyIterableDeclContexts.events
Sema.NamedLazyMemberLoadSuccessCount.events
Sema.NumTypesDeserialized.events
Sema.NumUnloadedLazyIterableDeclContexts.events
Sema.AccessLevelRequest.events
Sema.DefaultAndMaxAccessLevelRequest.events
Sema.SetterAccessLevelRequest.events
Sema.AnyObjectLookupRequest.events
Sema.CustomAttrNominalRequest.events
Sema.DirectLookupRequest.events
Sema.DirectOperatorLookupRequest.events
Sema.DirectPrecedenceGroupLookupRequest.events
Sema.ExtendedNominalRequest.events
Sema.GenericParamListRequest.events
Sema.GetDestructorRequest.events
Sema.InheritedDeclsReferencedRequest.events
Sema.InheritedProtocolsRequest.events
Sema.LookupConformanceInModuleRequest.events
Sema.LookupInModuleRequest.events
Sema.ModuleQualifiedLookupRequest.events
Sema.QualifiedLookupRequest.events
Sema.SelfBoundsFromWhereClauseRequest.events
Sema.SuperclassDeclRequest.events
Sema.HasMissingDesignatedInitializersRequest.events
Sema.TypeDeclsFromWhereClauseRequest.events
Sema.UnderlyingTypeDeclsReferencedRequest.events
Sema.UnqualifiedLookupRequest.events
Sema.LookupPrefixOperatorRequest.events
Sema.LookupInfixOperatorRequest.events
Sema.LookupPostfixOperatorRequest.events
Sema.LookupPrecedenceGroupRequest.events
Sema.AbstractGenericSignatureRequest.events
Sema.ApplyAccessNoteRequest.events
Sema.AttachedResultBuilderRequest.events
Sema.AttachedPropertyWrapperTypeRequest.events
Sema.AttachedPropertyWrappersRequest.events
Sema.CallerSideDefaultArgExprRequest.events
Sema.CheckInconsistentImplementationOnlyImportsRequest.events
Sema.CheckRedeclarationRequest.events
Sema.ClassAncestryFlagsRequest.events
Sema.CodeCompletionFileRequest.events
Sema.CompareDeclSpecializationRequest.events
Sema.ConditionalRequirementsRequest.events
Sema.IsDeclRefinementOfRequest.events
Sema.CustomAttrTypeRequest.events
Sema.DefaultArgumentExprRequest.events
Sema.DefaultArgumentInitContextRequest.events
Sema.DefaultDefinitionTypeRequest.events
Sema.DefaultTypeRequest.events
Sema.DifferentiableAttributeTypeCheckRequest.events
Sema.DerivativeAttrOriginalDeclRequest.events
Sema.TypeEraserHasViableInitRequest.events
Sema.DynamicallyReplacedDeclRequest.events
Sema.ABIMembersRequest.events
Sema.AllMembersRequest.events
Sema.SpecializeAttrTargetDeclRequest.events
Sema.EnumRawValuesRequest.events
Sema.EnumRawTypeRequest.events
Sema.ExistentialConformsToSelfRequest.events
Sema.ExistentialTypeSupportedRequest.events
Sema.ExtendedTypeRequest.events
Sema.ResultBuilderTypeRequest.events
Sema.IsAsyncHandlerRequest.events
Sema.CanBeAsyncHandlerRequest.events
Sema.IsActorRequest.events
Sema.IsDefaultActorRequest.events
Sema.GlobalActorInstanceRequest.events
Sema.GlobalActorAttributeRequest.events
Sema.ActorIsolationRequest.events
Sema.FunctionOperatorRequest.events
Sema.GenericSignatureRequest.events
Sema.HasCircularInheritedProtocolsRequest.events
Sema.HasCircularRawValueRequest.events
Sema.HasDynamicMemberLookupAttributeRequest.events
Sema.HasDynamicCallableAttributeRequest.events
Sema.HasImplementationOnlyImportsRequest.events
Sema.ModuleLibraryLevelRequest.events
Sema.InferredGenericSignatureRequest.events
Sema.InheritedTypeRequest.events
Sema.InheritsSuperclassInitializersRequest.events
Sema.InitKindRequest.events
Sema.BodyInitKindRequest.events
Sema.InterfaceTypeRequest.events
Sema.IsAccessorTransparentRequest.events
Sema.IsCallableNominalTypeRequest.events
Sema.IsDynamicRequest.events
Sema.IsFinalRequest.events
Sema.IsGetterMutatingRequest.events
Sema.IsImplicitlyUnwrappedOptionalRequest.events
Sema.IsObjCRequest.events
Sema.IsSetterMutatingRequest.events
Sema.LazyStoragePropertyRequest.events
Sema.ValidatePrecedenceGroupRequest.events
Sema.MangleLocalTypeDeclRequest.events
Sema.ModuleImplicitImportsRequest.events
Sema.NamingPatternRequest.events
Sema.OpaqueReadOwnershipRequest.events
Sema.OpaqueResultTypeRequest.events
Sema.OperatorPrecedenceGroupRequest.events
Sema.OverriddenDeclsRequest.events
Sema.PatternBindingEntryRequest.events
Sema.PrimarySourceFilesRequest.events
Sema.PropertyWrapperAuxiliaryVariablesRequest.events
Sema.PropertyWrapperInitializerInfoRequest.events
Sema.PropertyWrapperBackingPropertyTypeRequest.events
Sema.PropertyWrapperLValuenessRequest.events
Sema.PropertyWrapperMutabilityRequest.events
Sema.PropertyWrapperTypeInfoRequest.events
Sema.ProtocolRequiresClassRequest.events
Sema.RequirementRequest.events
Sema.RequirementSignatureRequest.events
Sema.RequiresOpaqueAccessorsRequest.events
Sema.RequiresOpaqueModifyCoroutineRequest.events
Sema.FragileFunctionKindRequest.events
Sema.PolymorphicEffectKindRequest.events
Sema.SelfAccessKindRequest.events
Sema.StorageImplInfoRequest.events
Sema.StoredPropertiesAndMissingMembersRequest.events
Sema.StoredPropertiesRequest.events
Sema.StructuralTypeRequest.events
Sema.SuperclassTypeRequest.events
Sema.SynthesizeAccessorRequest.events
Sema.TangentStoredPropertyRequest.events
Sema.TypeCheckFunctionBodyRequest.events
Sema.TypeCheckASTNodeAtLocRequest.events
Sema.UnderlyingTypeRequest.events
Sema.USRGenerationRequest.events
Sema.IsABICompatibleOverrideRequest.events
Sema.IsStaticRequest.events
Sema.NeedsNewVTableEntryRequest.events
Sema.ParamSpecifierRequest.events
Sema.ResultTypeRequest.events
Sema.AreAllStoredPropertiesDefaultInitableRequest.events
Sema.HasUserDefinedDesignatedInitRequest.events
Sema.HasMemberwiseInitRequest.events
Sema.PreCheckResultBuilderRequest.events
Sema.ResolveImplicitMemberRequest.events
Sema.ResolveTypeEraserTypeRequest.events
Sema.PolymorphicEffectRequirementsRequest.events
Sema.ConformanceHasEffectRequest.events
Sema.ResolveTypeRequest.events
Sema.SPIGroupsRequest.events
Sema.SynthesizeMemberwiseInitRequest.events
Sema.ResolveEffectiveMemberwiseInitRequest.events
Sema.HasDefaultInitRequest.events
Sema.SynthesizeDefaultInitRequest.events
Sema.TypeCheckSourceFileRequest.events
Sema.TypeWitnessRequest.events
Sema.ValueWitnessRequest.events
Sema.PatternTypeRequest.events
Sema.ScopedImportLookupRequest.events
Sema.ClosureHasExplicitResultRequest.events
Sema.LookupAllConformancesInContextRequest.events
Sema.SimpleDidSetRequest.events
Sema.SynthesizeMainFunctionRequest.events
Sema.GetImplicitSendableRequest.events
Sema.AsyncAlternativeRequest.events
Sema.IsDeclApplicableRequest.events
Sema.RootAndResultTypeOfKeypathDynamicMemberRequest.events
Sema.RootTypeOfKeypathDynamicMemberRequest.events
Sema.TypeRelationCheckRequest.events
Sema.CollectOverriddenDeclsRequest.events
Sema.CursorInfoRequest.events
Sema.ProvideDefaultImplForRequest.events
Sema.RangeInfoRequest.events
Sema.ResolveProtocolNameRequest.events
SILGen.ASTLoweringRequest.events
SILGen.ParseSILModuleRequest.events
SILModule.NumSILGenFunctions.events
SILModule.NumSILGenVtables.events
SILModule.NumSILGenWitnessTables.events
SILModule.NumSILGenDefaultWitnessTables.events
SILModule.NumSILGenGlobalVariables.events
SILOptimizer.ExecuteSILPipelineRequest.events
SILOptimizer.LoweredSILRequest.events
SILModule.NumSILOptFunctions.events
SILModule.NumSILOptVtables.events
SILModule.NumSILOptWitnessTables.events
SILModule.NumSILOptDefaultWitnessTables.events
SILModule.NumSILOptGlobalVariables.events
IRGen.IRGenRequest.events
IRGen.OptimizedIRRequest.events
IRGen.SymbolObjectCodeRequest.events
IRModule.NumIRGlobals.events
IRModule.NumIRFunctions.events
IRModule.NumIRAliases.events
IRModule.NumIRIFuncs.events
IRModule.NumIRNamedMetaData.events
IRModule.NumIRValueSymbols.events
IRModule.NumIRComdatSymbols.events
IRModule.NumIRBasicBlocks.events
IRModule.NumIRInsts.events
IRModule.NumGOTEntries.events
LLVM.NumLLVMBytesOutput.events
TBDGen.GenerateTBDRequest.events
TBDGen.PublicSymbolsRequest.events
TBDGen.SymbolSourceMapRequest.events
TBDGen.APIGenRequest.events
Time.User.entities
Time.System.entities
Time.Process.entities
Time.Wall.entities
Frontend.NumProcessFailures.entities
Frontend.NumInstructionsExecuted.entities
Frontend.MaxMallocUsage.entities
AST.NumSourceBuffers.entities
AST.NumSourceLines.entities
AST.NumSourceLinesPerSecond.entities
AST.NumLinkLibraries.entities
AST.NumLoadedModules.entities
AST.NumTotalClangImportedEntities.entities
AST.NumASTBytesAllocated.entities
AST.NumDependencies.entities
AST.NumIncrementalDependencies.entities
AST.NumReferencedTopLevelNames.entities
AST.NumReferencedDynamicNames.entities
AST.NumReferencedMemberNames.entities
AST.NumDecls.entities
AST.NumLocalTypeDecls.entities
AST.NumObjCMethods.entities
AST.NumOperators.entities
AST.NumPrecedenceGroups.entities
AST.NumModuleLookupValue.entities
AST.NumModuleLookupClassMember.entities
AST.NumASTScopeLookups.entities
AST.NumASTScopeExpansions.entities
AST.ImportSetFoldHit.entities
AST.ImportSetFoldMiss.entities
AST.ImportSetCacheHit.entities
AST.ImportSetCacheMiss.entities
AST.ModuleVisibilityCacheHit.entities
AST.ModuleVisibilityCacheMiss.entities
AST.ModuleShadowCacheHit.entities
AST.ModuleShadowCacheMiss.entities
Parse.NumFunctionsParsed.entities
Parse.NumIterableDeclContextParsed.entities
Parse.CodeCompletionSecondPassRequest.entities
Parse.ParseMembersRequest.entities
Parse.ParseAbstractFunctionBodyRequest.entities
Parse.ParseSourceFileRequest.entities
Sema.NumConformancesDeserialized.entities
Sema.NumCrossImportsChecked.entities
Sema.NumCrossImportsFound.entities
Sema.NumConstraintScopes.entities
Sema.NumLeafScopes.entities
Sema.NumConstraintsConsideredForEdgeContraction.entities
Sema.NumCyclicOneWayComponentsCollapsed.entities
Sema.NumDeclsDeserialized.entities
Sema.NumDeclsTypechecked.entities
Sema.NumAccessorsSynthesized.entities
Sema.NumAccessorBodiesSynthesized.entities
Sema.NumGenericSignatureBuilders.entities
Sema.NumLazyRequirementSignatures.entities
Sema.NumLazyRequirementSignaturesLoaded.entities
Sema.NumLazyIterableDeclContexts.entities
Sema.NamedLazyMemberLoadSuccessCount.entities
Sema.NumTypesDeserialized.entities
Sema.NumUnloadedLazyIterableDeclContexts.entities
Sema.AccessLevelRequest.entities
Sema.DefaultAndMaxAccessLevelRequest.entities
Sema.SetterAccessLevelRequest.entities
Sema.AnyObjectLookupRequest.entities
Sema.CustomAttrNominalRequest.entities
Sema.DirectLookupRequest.entities
Sema.DirectOperatorLookupRequest.entities
Sema.DirectPrecedenceGroupLookupRequest.entities
Sema.ExtendedNominalRequest.entities
Sema.GenericParamListRequest.entities
Sema.GetDestructorRequest.entities
Sema.InheritedDeclsReferencedRequest.entities
Sema.InheritedProtocolsRequest.entities
Sema.LookupConformanceInModuleRequest.entities
Sema.LookupInModuleRequest.entities
Sema.ModuleQualifiedLookupRequest.entities
Sema.QualifiedLookupRequest.entities
Sema.SelfBoundsFromWhereClauseRequest.entities
Sema.SuperclassDeclRequest.entities
Sema.HasMissingDesignatedInitializersRequest.entities
Sema.TypeDeclsFromWhereClauseRequest.entities
Sema.UnderlyingTypeDeclsReferencedRequest.entities
Sema.UnqualifiedLookupRequest.entities
Sema.LookupPrefixOperatorRequest.entities
Sema.LookupInfixOperatorRequest.entities
Sema.LookupPostfixOperatorRequest.entities
Sema.LookupPrecedenceGroupRequest.entities
Sema.AbstractGenericSignatureRequest.entities
Sema.ApplyAccessNoteRequest.entities
Sema.AttachedResultBuilderRequest.entities
Sema.AttachedPropertyWrapperTypeRequest.entities
Sema.AttachedPropertyWrappersRequest.entities
Sema.CallerSideDefaultArgExprRequest.entities
Sema.CheckInconsistentImplementationOnlyImportsRequest.entities
Sema.CheckRedeclarationRequest.entities
Sema.ClassAncestryFlagsRequest.entities
Sema.CodeCompletionFileRequest.entities
Sema.CompareDeclSpecializationRequest.entities
Sema.ConditionalRequirementsRequest.entities
Sema.IsDeclRefinementOfRequest.entities
Sema.CustomAttrTypeRequest.entities
Sema.DefaultArgumentExprRequest.entities
Sema.DefaultArgumentInitContextRequest.entities
Sema.DefaultDefinitionTypeRequest.entities
Sema.DefaultTypeRequest.entities
Sema.DifferentiableAttributeTypeCheckRequest.entities
Sema.DerivativeAttrOriginalDeclRequest.entities
Sema.TypeEraserHasViableInitRequest.entities
Sema.DynamicallyReplacedDeclRequest.entities
Sema.ABIMembersRequest.entities
Sema.AllMembersRequest.entities
Sema.SpecializeAttrTargetDeclRequest.entities
Sema.EnumRawValuesRequest.entities
Sema.EnumRawTypeRequest.entities
Sema.ExistentialConformsToSelfRequest.entities
Sema.ExistentialTypeSupportedRequest.entities
Sema.ExtendedTypeRequest.entities
Sema.ResultBuilderTypeRequest.entities
Sema.IsAsyncHandlerRequest.entities
Sema.CanBeAsyncHandlerRequest.entities
Sema.IsActorRequest.entities
Sema.IsDefaultActorRequest.entities
Sema.GlobalActorInstanceRequest.entities
Sema.GlobalActorAttributeRequest.entities
Sema.ActorIsolationRequest.entities
Sema.FunctionOperatorRequest.entities
Sema.GenericSignatureRequest.entities
Sema.HasCircularInheritedProtocolsRequest.entities
Sema.HasCircularRawValueRequest.entities
Sema.HasDynamicMemberLookupAttributeRequest.entities
Sema.HasDynamicCallableAttributeRequest.entities
Sema.HasImplementationOnlyImportsRequest.entities
Sema.ModuleLibraryLevelRequest.entities
Sema.InferredGenericSignatureRequest.entities
Sema.InheritedTypeRequest.entities
Sema.InheritsSuperclassInitializersRequest.entities
Sema.InitKindRequest.entities
Sema.BodyInitKindRequest.entities
Sema.InterfaceTypeRequest.entities
Sema.IsAccessorTransparentRequest.entities
Sema.IsCallableNominalTypeRequest.entities
Sema.IsDynamicRequest.entities
Sema.IsFinalRequest.entities
Sema.IsGetterMutatingRequest.entities
Sema.IsImplicitlyUnwrappedOptionalRequest.entities
Sema.IsObjCRequest.entities
Sema.IsSetterMutatingRequest.entities
Sema.LazyStoragePropertyRequest.entities
Sema.ValidatePrecedenceGroupRequest.entities
Sema.MangleLocalTypeDeclRequest.entities
Sema.ModuleImplicitImportsRequest.entities
Sema.NamingPatternRequest.entities
Sema.OpaqueReadOwnershipRequest.entities
Sema.OpaqueResultTypeRequest.entities
Sema.OperatorPrecedenceGroupRequest.entities
Sema.OverriddenDeclsRequest.entities
Sema.PatternBindingEntryRequest.entities
Sema.PrimarySourceFilesRequest.entities
Sema.PropertyWrapperAuxiliaryVariablesRequest.entities
Sema.PropertyWrapperInitializerInfoRequest.entities
Sema.PropertyWrapperBackingPropertyTypeRequest.entities
Sema.PropertyWrapperLValuenessRequest.entities
Sema.PropertyWrapperMutabilityRequest.entities
Sema.PropertyWrapperTypeInfoRequest.entities
Sema.ProtocolRequiresClassRequest.entities
Sema.RequirementRequest.entities
Sema.RequirementSignatureRequest.entities
Sema.RequiresOpaqueAccessorsRequest.entities
Sema.RequiresOpaqueModifyCoroutineRequest.entities
Sema.FragileFunctionKindRequest.entities
Sema.PolymorphicEffectKindRequest.entities
Sema.SelfAccessKindRequest.entities
Sema.StorageImplInfoRequest.entities
Sema.StoredPropertiesAndMissingMembersRequest.entities
Sema.StoredPropertiesRequest.entities
Sema.StructuralTypeRequest.entities
Sema.SuperclassTypeRequest.entities
Sema.SynthesizeAccessorRequest.entities
Sema.TangentStoredPropertyRequest.entities
Sema.TypeCheckFunctionBodyRequest.entities
Sema.TypeCheckASTNodeAtLocRequest.entities
Sema.UnderlyingTypeRequest.entities
Sema.USRGenerationRequest.entities
Sema.IsABICompatibleOverrideRequest.entities
Sema.IsStaticRequest.entities
Sema.NeedsNewVTableEntryRequest.entities
Sema.ParamSpecifierRequest.entities
Sema.ResultTypeRequest.entities
Sema.AreAllStoredPropertiesDefaultInitableRequest.entities
Sema.HasUserDefinedDesignatedInitRequest.entities
Sema.HasMemberwiseInitRequest.entities
Sema.PreCheckResultBuilderRequest.entities
Sema.ResolveImplicitMemberRequest.entities
Sema.ResolveTypeEraserTypeRequest.entities
Sema.PolymorphicEffectRequirementsRequest.entities
Sema.ConformanceHasEffectRequest.entities
Sema.ResolveTypeRequest.entities
Sema.SPIGroupsRequest.entities
Sema.SynthesizeMemberwiseInitRequest.entities
Sema.ResolveEffectiveMemberwiseInitRequest.entities
Sema.HasDefaultInitRequest.entities
Sema.SynthesizeDefaultInitRequest.entities
Sema.TypeCheckSourceFileRequest.entities
Sema.TypeWitnessRequest.entities
Sema.ValueWitnessRequest.entities
Sema.PatternTypeRequest.entities
Sema.ScopedImportLookupRequest.entities
Sema.ClosureHasExplicitResultRequest.entities
Sema.LookupAllConformancesInContextRequest.entities
Sema.SimpleDidSetRequest.entities
Sema.SynthesizeMainFunctionRequest.entities
Sema.GetImplicitSendableRequest.entities
Sema.AsyncAlternativeRequest.entities
Sema.IsDeclApplicableRequest.entities
Sema.RootAndResultTypeOfKeypathDynamicMemberRequest.entities
Sema.RootTypeOfKeypathDynamicMemberRequest.entities
Sema.TypeRelationCheckRequest.entities
Sema.CollectOverriddenDeclsRequest.entities
Sema.CursorInfoRequest.entities
Sema.ProvideDefaultImplForRequest.entities
Sema.RangeInfoRequest.entities
Sema.ResolveProtocolNameRequest.entities
SILGen.ASTLoweringRequest.entities
SILGen.ParseSILModuleRequest.entities
SILModule.NumSILGenFunctions.entities
SILModule.NumSILGenVtables.entities
SILModule.NumSILGenWitnessTables.entities
SILModule.NumSILGenDefaultWitnessTables.entities
SILModule.NumSILGenGlobalVariables.entities
SILOptimizer.ExecuteSILPipelineRequest.entities
SILOptimizer.LoweredSILRequest.entities
SILModule.NumSILOptFunctions.entities
SILModule.NumSILOptVtables.entities
SILModule.NumSILOptWitnessTables.entities
SILModule.NumSILOptDefaultWitnessTables.entities
SILModule.NumSILOptGlobalVariables.entities
IRGen.IRGenRequest.entities
IRGen.OptimizedIRRequest.entities
IRGen.SymbolObjectCodeRequest.entities
IRModule.NumIRGlobals.entities
IRModule.NumIRFunctions.entities
IRModule.NumIRAliases.entities
IRModule.NumIRIFuncs.entities
IRModule.NumIRNamedMetaData.entities
IRModule.NumIRValueSymbols.entities
IRModule.NumIRComdatSymbols.entities
IRModule.NumIRBasicBlocks.entities
IRModule.NumIRInsts.entities
IRModule.NumGOTEntries.entities
LLVM.NumLLVMBytesOutput.entities
TBDGen.GenerateTBDRequest.entities
TBDGen.PublicSymbolsRequest.entities
TBDGen.SymbolSourceMapRequest.entities
TBDGen.APIGenRequest.entities
json
trace
profile
Swift compilation
Error opening profile file '
inout
init
Protocol
self
Type
using
within
Indexes
Indices
Index
Integer
Mask
animated
sender
real_pid
usage
1300.0.19.104
Apple 
Swift version 5.5
 effective-
 (swiftlang-1300.0.19.104
 clang-1300.0.18.4
%llu
AutoreleasingUnsafeMutablePointer
Array
Bool
DefaultIndices
Character
ClosedRange
Range
ObjectIdentifier
UnsafeBufferPointer
UnsafeMutableBufferPointer
Substring
UnsafeMutableRawPointer
UnsafeRawBufferPointer
UnsafeMutableRawBufferPointer
BinaryFloatingPoint
RandomNumberGenerator
Numeric
BidirectionalCollection
RandomAccessCollection
Collection
MutableCollection
Equatable
Sequence
UnsignedInteger
RangeExpression
Strideable
StringProtocol
SignedInteger
& @/= >    <*!|+?%-~   ^ .
@inout
@in_guaranteed
@guaranteed
@deallocating
@unowned
@unowned_inner_pointer
@noDerivative
@callee_owned
closure
witness_method
@yield_once
@yield_many
@thin
@thick
Swift
__C_Synthesized
Builtin.BridgeObject
Builtin.FPIEEE
Builtin.RawPointer
Builtin.Word
%llu
%llX
%lld
curry thunk of 
dispatch thunk of 
method descriptor for 
method lookup function for 
ObjC metadata update function for 
ObjC resilient class stub for 
full ObjC resilient class stub for 
outlined bridged method (
) of 
outlined copy of 
outlined consume of 
outlined retain of 
outlined release of 
outlined init with take of 
outlined init with copy of 
outlined assign with take of 
outlined assign with copy of 
outlined destroy of 
outlined variable #
.(unknown context at 
(extension in 
closure #
implicit closure #
 with unmangled suffix 
variable initialization expression
property wrapper backing initializer
property wrapper init from projected value
default argument 
related decl '
unknown index
retroactive @ 
__shared 
__owned 
super 
dynamic 
function signature specialization
generic partial specialization
Signature = 
generic not-reabstracted partial specialization
generic specialization
generic pre-specialization
generic not re-abstracted specialization
inlined generic function
should be handled in printSpecializationPrefix
Existential To Protocol Constrained Generic
Dead
Owned To Guaranteed
Guaranteed To Owned
Exploded
Value Promoted from Box
Stack Promoted from Box
Constant Propagated Function
Constant Propagated Global
Constant Propagated Integer
Constant Propagated Float
Constant Propagated String
Closure Propagated
option sets should have been handled earlier
 infix
 prefix
 postfix
lazy protocol witness table accessor for type 
 and conformance 
lazy protocol witness table cache variable for type 
protocol self-conformance witness table for 
protocol witness table accessor for 
protocol witness table for 
protocol witness table pattern for 
generic protocol witness table for 
instantiation function for generic protocol witness table for 
resilient protocol witness table for 
vtable thunk for 
 dispatching to 
protocol self-conformance witness for 
protocol witness for 
 in conformance 
partial apply
partial apply forwarder
partial apply ObjC forwarder
key path getter for 
key path setter for 
key path index 
equality
 operator for 
field offset for 
enum case for 
thunk for 
reabstraction thunk 
helper 
from 
 self 
 with respect to parameters 
 and results 
autodiff self-reordering reabstraction thunk 
for 
autodiff subset parameters thunk for 
 to parameters 
forward-mode derivative
reverse-mode derivative
forward-mode
reverse-mode
 differentiability witness for 
merged 
type symbolic reference 0x
opaque type symbolic reference 0x
dynamically replaceable key for 
dynamically replaceable thunk for 
dynamically replaceable variable for 
protocol symbolic reference 0x
generic type metadata pattern for 
metaclass for 
protocol self-conformance descriptor for 
protocol conformance descriptor for 
protocol descriptor for 
protocol requirements base descriptor for 
full type metadata for 
type metadata for 
type metadata accessor for 
type metadata instantiation cache for 
type metadata instantiation function for 
type metadata singleton initialization cache for 
type metadata completion function for 
demangling cache variable for type metadata for 
lazy cache variable for type metadata for 
associated conformance descriptor for 
default associated conformance accessor for 
associated type descriptor for 
associated type metadata accessor for 
base conformance descriptor for 
default associated type metadata accessor for 
associated type witness table accessor for 
base witness table accessor for 
class metadata base offset for 
property descriptor for 
nominal type descriptor for 
opaque type descriptor for 
opaque type descriptor accessor for 
opaque type descriptor accessor impl for 
opaque type descriptor accessor key for 
opaque type descriptor accessor var for 
coroutine continuation prototype for 
 value witness for 
value witness table for 
@box 
owningAddressor
owningMutableAddressor
nativeOwningAddressor
nativeOwningMutableAddressor
nativePinningAddressor
nativePinningMutableAddressor
unsafeAddressor
unsafeMutableAddressor
materializeForSet
__allocating_init
__deallocating_deinit
__ivar_initializer
__ivar_destroyer
property behavior storage of 
@convention(
, mangledCType: "
for <
 for <
<ERROR TYPE>
should be printed as a child of a DependentGenericSignature
reflection metadata builtin descriptor 
reflection metadata field descriptor 
reflection metadata associated type descriptor 
reflection metadata superclass descriptor 
 empty-list 
 first-element-marker 
 variadic-marker 
module descriptor 
anonymous descriptor 
extension descriptor 
generic parameter reference for associated type 
concrete protocol conformance 
dependent associated conformance 
dependent associated protocol conformance 
dependent inherited protocol conformance 
dependent root protocol conformance 
protocol conformance ref (type's module) 
protocol conformance ref (protocol's module) 
protocol conformance ref (retroactive) 
accessor function at 
specialized generic metaclass for 
canonical specialized generic type metadata accessor for 
metadata instantiation cache for 
noncanonical specialized generic type metadata for 
cache variable for noncanonical specialized generic type metadata for 
one-time initialization token for 
one-time initialization function for 
predefined 
@objc completion handler block implementation for 
 with result type 
 nonzero on error
 zero on error
 <invalid error flag>
flag for loading of canonical specialized generic type metadata for 
async function pointer to 
 await resume partial function for 
 suspend resume partial function for 
bad node kind!
direct
bad directness
@convention(thin) 
(_:)
specialized 
Arg[
Return = 
> of 
, Argument Types : [
fatal error: %s
allocateBuffer
deallocateBuffer
destroyBuffer
initializeBufferWithCopy
initializeBufferWithTake
projectBuffer
initializeBufferWithTakeOfBuffer
initializeArrayWithCopy
initializeArrayWithTakeFrontToBack
initializeArrayWithTakeBackToFront
storeExtraInhabitant
getExtraInhabitantIndex
bad value witness kind
bad node kind
Not an abstract storage node
) -> (
no state after Results
bad state
Builtin.Int
Builtin.Vec
xInt
xFloat
xRawPointer
Builtin.UnknownObject
Builtin.NativeObject
Builtin.SILToken
& @/= >    <*!|+?%-~   ^ .
@objc_metatype
UnicodeScalar
Double
UnsafePointer
UnsafeMutablePointer
ImplicitlyUnwrappedOptional
UInt
objc_method
@convention(thin)
@autoreleased
@callee_unowned
@callee_guaranteed
bad demangling tree node
not a context node
_UnknownTypeKind
bad nominal type kind
Not a storage node
unsupported
<autodiff-function>
Conformance lists aren't in the old mangling
<default-associated-type-metadata-accessor>
<base-witness-table-accessor>
unexpected builtin vector type
unexpected builtin type
Concrete conformances aren't in the old mangling
Dependent associated conformances aren't in the old mangling
handled inline in DependentGenericSignature
Dependent conformances aren't in the old mangling
bad directness kind
This should never be called
invalid impl convention
Invalid impl differentiability
bad impl-function-attribute
bad impl-function-convention-name
bad callee convention
bad metatype representation
<method-lookup-function>
<objc-metadata-update-function>
<objc-resilient-class-stub>
<full-objc-resilient-class-stub>
<escaping block type>
PA__T
PAo__T
not supported
Protocol conformance references aren't in the old mangling
<reabstraction-thunk>
<reabstraction-thunk-helper>
<reabstraction-thunk-helper-with-self>
Retroactive conformances aren't in the old mangling
should not be reached in an arbitrary context
<curry-thunk>
<dispatch-thunk>
<method-descriptor>
<protocol-requirements-base-descriptor>
<associated-conformance-descriptor>
<default-associated-conformance-descriptor>
<base-conformance-descriptor>
<associated-type-descriptor>
<first>
can't remangle
<autodiff-function-kind>
<autodiff-self-reordering-reabstraction-thunk>
<autodiff-subset-parameters-thunk>
<autodiff-derivative-vtable-thunk>
<differentiability-witness>
<index-subset>
bad nominal type kind
unsupported node
wrong dependent member type
handled inline
Unknown encoding
wrong metatype representation
cannot handle multi-byte related entities
should be part of SILBoxTypeWithLayout
Old-fashioned vtable thunk in new mangling format
fatal error: %s
should not try to mangle a symbolic reference; resolve it to a non-symbolic demangling tree instead
<Para kind="
<Parameter><Name>
<IsVarArg />
<Index>
</Index>
<Direction isExplicit="
in,out
</Direction><Discussion>
</Discussion></Parameter>
<Verbatim xml:space="preserve" kind="code">
<Verbatim xml:space="preserve" kind="verbatim">
</Verbatim>
 templateKind="template"
 templateKind="specialization"
 isInstanceMethod="1"
 isClassMethod="1"
 templateKind="partialSpecialization"
</Variable>
<Variable
</Namespace>
<Namespace
</Typedef>
<Typedef
</Enum>
<Enum
<Name>&lt;anonymous&gt;</Name>
<Other><Name>unknown</Name>
<Headerfile>
</Headerfile>
<TemplateParameters>
</TemplateParameters>
<Exceptions>
</Exceptions>
<Deprecated/>
<Deprecated>
</Deprecated>
<Unavailable/>
<Unavailable>
</Unavailable>
<Availability
 distribution="
<IntroducedInVersion>
</IntroducedInVersion>
<DeprecatedInVersion>
</DeprecatedInVersion>
<RemovedAfterVersion>
</RemovedAfterVersion>
<DeprecationSummary>
</DeprecationSummary>
</Availability>
xmldecl.xd
android
bridgeos
bridgeOS
driverkit
DriverKit
iOS (App Extension)
macOS (App Extension)
tvOS (App Extension)
watchOS (App Extension)
macCatalyst App Extension
<rawHTML
 isMalformed="1"
>&lt;/
&gt;</rawHTML>
<monospaced>
</monospaced>
<emphasized>
</emphasized>
<anchor id="
"></anchor>
units
records
failed creating index directory %0
failed writing record '%0': %1
failed writing unit data: %0
@macro@
could not access record '
failed to create temporary file: 
failed to write '
failed to rename '
REC_VERSION_BLOCK
REC_VERSION
REC_DECLS_BLOCK
REC_DECLINFO
REC_DECLOFFSETS_BLOCK
REC_DECLOFFSETS
REC_DECLOCCURRENCES_BLOCK
REC_DECLOCCURRENCE
could not access path '
failed to determine current working directory: 
UNIT_VERSION_BLOCK
UNIT_VERSION
UNIT_INFO_BLOCK
UNIT_INFO
UNIT_DEPENDENCIES_BLOCK
UNIT_DEPENDENCY
UNIT_INCLUDES_BLOCK
UNIT_INCLUDE
UNIT_PATHS_BLOCK
UNIT_PATH
UNIT_PATH_BUFFER
UNIT_MODULES_BLOCK
UNIT_MODULE
UNIT_MODULE_BUFFER
objc(cs)
objc(cy)
(im)
(cm)
(cpy)
(py)
objc(pl)
@macro@
@CM@
objc(ext)
@NA@
@UUT@
@UD@
@FI@
@FT@
@UUV@
clang-format on
clang-format off
@param
@return
@returns
@throws
@type
@template
@see
@deprecated
@define
@exports
@mods
@private
/// 
//! 
///<
///< 
//!<
//!< 
### 
####
#### 
^[1-9][0-9]?\.
^[1-9][0-9]?\. 
'\n'
Failed to update the prefix delimiter of a raw string: 
Failed to update the suffix delimiter of a raw string: 
Failed to reformat raw string: 
_T("
^ IWYU pragma:
foreach
^"(llvm|llvm-c|clang|clang-c)/
^(<|"(gtest|gmock|isl|json)/)
(Test)?$
QT_REQUIRE_VERSION
BOOST_PP_STRINGIZE
([-_](test|unittest))?$
google
PARSE_PARTIAL_TEXT_PROTO
PARSE_TEST_PROTO
PARSE_TEXT_PROTO
ParseTextProtoOrDie
ParsePartialTestProto
(taze:|^/[ 
]*<|tslint:|@see)
com.google.android.apps.chrome
mozilla
webkit
microsoft
BinaryOperator
ObjCStringLiteral
UnaryOperator
assembly
field
event
>>>>>>>
// clang-format on
/* clang-format on */
CF_CLOSED_ENUM
NS_CLOSED_ENUM
NS_ENUM
NS_OPTIONS
declare
finally
infer
typeof
abstract
extends
implements
instanceof
package
synchronized
__except
__has_include
__has_include_next
mark
extend
option
repeated
signals
Q_SIGNALS
slots
Q_SLOTS
byte
decimal
fixed
implicit
lock
params
stackalloc
sbyte
sealed
ushort
when
Error while updating namespace end comment: 
Error while adding namespace end comment: 
^/[/*] *(end (of )?)? *(anonymous|unnamed)? *namespace( +([a-zA-Z0-9:_]+))?\.? *(\*/)?$
^/[/*] *(end (of )?)? *(anonymous|unnamed)? *([a-zA-Z0-9_]+)\(([a-zA-Z0-9:_]*)\)\.? *(\*/)?$
^/[/*] *( +([a-zA-Z0-9:_]+))?\.? *(\*/)?$
compl
Error while sorting using declarations: 
ifndef
define
pragma
Backend
Error loading index file '
backend data layout '%0' does not match expected target description '%1'
-debug-pass
-limit-float-precision
Error setting up ThinLTO save-temps: 
softfp
hard
labels
global
Error running ThinLTO backend: 
codegen
Code Generation Time
EnableSplitLTOUnit
ThinLTO
Optimizer
Code generation
default_%m.profraw
Pseudo probes cannot be used with -debug-info-for-profiling
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AAManager]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::TargetLibraryAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LowerTypeTestsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::EntryExitInstrumenterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BoundsCheckingPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleSanitizerCoveragePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MemorySanitizerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ThreadSanitizerPass]
ASan not implemented for GOFF
ASan not implemented for XCOFF.
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::ASanGlobalsMetadataAnalysis, llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleAddressSanitizerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AddressSanitizerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::HWAddressSanitizerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DataFlowSanitizerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GCOVProfilerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InstrProfiling]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleToFunctionPassAdaptor]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MemProfilerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleMemProfilerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ThinLTOBitcodeWriterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BitcodeWriterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PrintModulePass]
Per-function optimization
PerFunctionPasses
Per-module optimization passes
PerModulePasses
CodeGenPasses
.atomictmp
cmpxchg.bool
__atomic_compare_exchange
__atomic_exchange
__atomic_store
__atomic_load
__atomic_fetch_add
__atomic_fetch_and
__atomic_fetch_or
__atomic_fetch_sub
__atomic_fetch_xor
__atomic_fetch_min
__atomic_fetch_umin
__atomic_fetch_max
__atomic_fetch_umax
__atomic_fetch_nand
monotonic
acquire
acqrel
seqcst
atomic.continue
atomic_bitfield_base
atomic-temp
newval
atomic.scope.continue
cmpxchg.strong
cmxchg.weak
cmpxchg.continue
monotonic_fail
acquire_fail
seqcst_fail
cmpxchg.store_expected
opencl_workgroup
opencl_device
opencl_allsvmdevices
opencl_subgroup
atomic-load
atomic_cont
atomic_exit
block.isa
block.flags
block.reserved
block.size
block.align
block.invoke
block.descriptor
block.captured-this.addr
block.captured
block.capture.addr
byref.capture
captured
block.captured_block
struct.__block_descriptor
struct.__opencl_block_literal_generic
struct.__block_literal_generic
block.literal
byref.addr
.addr
.block_descriptor
block.addr
block.captured-this
block.captured-const
block.source
block.dest
blockcopy.src
struct.__block_byref_
byref.isa
byref.forwarding
 Inline flag for BYREF variable layout (%d):
 BLOCK_BYREF_HAS_COPY_DISPOSE
 BLOCK_BYREF_LAYOUT_EXTENDED
 BLOCK_BYREF_LAYOUT_STRONG
 BLOCK_BYREF_LAYOUT_WEAK
 BLOCK_BYREF_LAYOUT_UNRETAINED
 BLOCK_BYREF_LAYOUT_NON_OBJECT
byref.flags
byref.size
byref.copyHelper
byref.disposeHelper
byref.layout
_Block_object_dispose
_Block_object_assign
_NSConcreteGlobalBlock
__block_descriptor_tmp
__TEXT,__objc_blockdesc
__block_descriptor_
__block_literal_global
objc_arc_inert
.block_isa_init
.block_isa_init_ptr
.CRT$XCLa
__copy_helper_block_
__destroy_helper_block_
__Block_byref_object_copy_
dest-object
src-object
__Block_byref_object_dispose_
bitscan_end
bitscan_result
bitscan_not_zero
__fastfail call for this architecture
int $$0x29
{cx}
udf #251
{r0}
brk #0xF003
{w0}
__os_log_helper
buffer
summary
numArgs
argDescriptor
argSize
argData
argDataCast
os.log.arg
fmod
abscond
using builtin_preserve_access_index() without -g
nested builtin_preserve_access_index() not supported
isneg
cast
iszero
expval
unreachable.cont
matrix
cmpinf
isinf
iseq
isnormal
fpclassify_end
fpclassify_result
fpclassify_not_zero
fpclassify_not_nan
fpclassify_not_inf
wmemcmp.gt
wmemcmp.lt
wmemcmp.next
wmemcmp.exit
__builtin_dwarf_sp_column
__builtin_init_dwarf_reg_size_table
builtin_eh_return.cont
extend.cast
extend.sext
extend.zext
longjmp.cont
__atomic_is_lock_free
tobool
was_set
non-UTF16 __annotation argument
__read_pipe_2
__write_pipe_2
__read_pipe_4
__write_pipe_4
__reserve_read_pipe
__reserve_write_pipe
__work_group_reserve_read_pipe
__work_group_reserve_write_pipe
__sub_group_reserve_read_pipe
__sub_group_reserve_write_pipe
__commit_read_pipe
__commit_write_pipe
__work_group_commit_read_pipe
__work_group_commit_write_pipe
__sub_group_commit_read_pipe
__sub_group_commit_write_pipe
__get_pipe_num_packets
__get_pipe_max_packets
__enqueue_kernel_basic
__enqueue_kernel_varargs
__enqueue_kernel_basic_events
__enqueue_kernel_events_varargs
__get_kernel_work_group_size_impl
__get_kernel_preferred_work_group_size_multiple_impl
__get_kernel_max_sub_group_size_for_ndrange_impl
__get_kernel_sub_group_count_for_ndrange_impl
__builtin_thread_pointer
ap.val
agg.tmp
builtin function
lane
vabs
vaddhn
vceqz
vcgez
vclez
vcgtz
vcltz
vcvt
vcvt_n
vext
vld1
vld1xN
vmovl
vmovn
vmull
vpaddl
vqdmlal
vqshl_n
vqshlu_n
vrshr_n
vshl_n
vshll_n
vshrn_n
vshr_n
vsubhn
vtrn
vtst
vuzp
vzip
vdot
vfmlal_low
vfmlsl_low
vfmlal_high
vfmlsl_high
vmmla
vusmmla
vusdot
vbfdot
vcvtfp2bf
.inst.n 0x
.inst 0x
rbit
ldrexd
ldrex
strexd
strex
vget_lane
vrndn
vset_lane
vsha1h
vcvtbfp2bf
vcvtr
vld1q_lane
vld1_lane
vqrshrn_n
vqrshrun_n
vqshrn_n
vqshrun_n
vrecpe
vrshrn_n
vrsra_n
vsli_n
vsra_n
vtbl1
vtbl2
vtbl3
vtbl4
vtbx1
vtbx2
vtbx3
vtbx4
ldxp
ldxr
stxp
stxr
fcvt
facg
fcvth_n
v2i64
lane0
lane1
vpaddd
v2f64
v2f32
vceqzd
vcmpd
vceqd
vtstd
vgetq_lane
vdups_lane
vdupd_lane
vaddh
vsubh
vmulh
vdivh
vaddd
vsubd
vqdmlXl
shld_n
shrd_n
vbsl
fmla
vmax
vmin
vabd
vpadal
vpmin
vpmax
vminnm
vmaxnm
vrecps
vrnda
vrndi
vrndm
vrndp
vrndx
vrndz
vcvtz
vcvta
vcvtm
vcvtn
vcvtp
vmulx
vnegd
vnegh
vpmaxnm
vpminnm
vsqrt
vrbit
vaddv
vmaxv
vminv
vmaxnmv
vminnmv
vaddlv
vsri_n
vld2
vld3
vld4
vld2_lane
vld3_lane
vld4_lane
vsqadd
vuqadd
using __builtin_preserve_field_info() without -g
using builtin function without -g
__cpu_model
corei7
atom
__cpu_features2
__cpu_indicator_init
stmxcsr
widen
insert
blend
pshuflw
pshufhw
shufp
perm
palignr
valign
shuf
vperm
pslldq
psrldq
kshiftl
kshiftr
nontemporal
pswapd
int $$0x2c
exec
exec_lo
exec_hi
tabort
src_addr
set_bits
is_aligned
intptr
over_boundary
inverted_mask
aligned_result
aligned_intptr
diff
%hhd
%hhu
%llu
auto-init
op.sext
op.zext
bittest.byteidx
bittest.byteaddr
bittest.mask
bittest.byte
bittest.shr
bittest.res
lock 
 $2, ($1)
={@ccc},r,r,~{cc},~{memory}
_setjmp3
_setjmp
_setjmpex
block_sizes
Invalid typed memory builtin
__a32_vcvt_bf16_v
splat_lane_v
splat_laneq_v
splatq_lane_v
splatq_laneq_v
vabd_v
vabdq_v
vabs_v
vabsq_v
vaddhn_v
vaesdq_v
vaeseq_v
vaesimcq_v
vaesmcq_v
vbfdot_v
vbfdotq_v
vbfmlalbq_v
vbfmlaltq_v
vbfmmlaq_v
vbsl_v
vbslq_v
vcadd_rot270_v
vcadd_rot90_v
vcaddq_rot270_v
vcaddq_rot90_v
vcage_v
vcageq_v
vcagt_v
vcagtq_v
vcale_v
vcaleq_v
vcalt_v
vcaltq_v
vceqz_v
vceqzq_v
vcgez_v
vcgezq_v
vcgtz_v
vcgtzq_v
vclez_v
vclezq_v
vcls_v
vclsq_v
vcltz_v
vcltzq_v
vclz_v
vclzq_v
vcnt_v
vcntq_v
vcvt_f16_f32
vcvt_f16_v
vcvt_f32_f16
vcvt_f32_v
vcvt_n_f16_v
vcvt_n_f32_v
vcvt_n_s16_v
vcvt_n_s32_v
vcvt_n_s64_v
vcvt_n_u16_v
vcvt_n_u32_v
vcvt_n_u64_v
vcvt_s16_v
vcvt_s32_v
vcvt_s64_v
vcvt_u16_v
vcvt_u32_v
vcvt_u64_v
vcvta_s16_v
vcvta_s32_v
vcvta_s64_v
vcvta_u16_v
vcvta_u32_v
vcvta_u64_v
vcvtaq_s16_v
vcvtaq_s32_v
vcvtaq_s64_v
vcvtaq_u16_v
vcvtaq_u32_v
vcvtaq_u64_v
vcvth_bf16_f32
vcvtm_s16_v
vcvtm_s32_v
vcvtm_s64_v
vcvtm_u16_v
vcvtm_u32_v
vcvtm_u64_v
vcvtmq_s16_v
vcvtmq_s32_v
vcvtmq_s64_v
vcvtmq_u16_v
vcvtmq_u32_v
vcvtmq_u64_v
vcvtn_s16_v
vcvtn_s32_v
vcvtn_s64_v
vcvtn_u16_v
vcvtn_u32_v
vcvtn_u64_v
vcvtnq_s16_v
vcvtnq_s32_v
vcvtnq_s64_v
vcvtnq_u16_v
vcvtnq_u32_v
vcvtnq_u64_v
vcvtp_s16_v
vcvtp_s32_v
vcvtp_s64_v
vcvtp_u16_v
vcvtp_u32_v
vcvtp_u64_v
vcvtpq_s16_v
vcvtpq_s32_v
vcvtpq_s64_v
vcvtpq_u16_v
vcvtpq_u32_v
vcvtpq_u64_v
vcvtq_f16_v
vcvtq_f32_v
vcvtq_n_f16_v
vcvtq_n_f32_v
vcvtq_n_s16_v
vcvtq_n_s32_v
vcvtq_n_s64_v
vcvtq_n_u16_v
vcvtq_n_u32_v
vcvtq_n_u64_v
vcvtq_s16_v
vcvtq_s32_v
vcvtq_s64_v
vcvtq_u16_v
vcvtq_u32_v
vcvtq_u64_v
vdot_v
vdotq_v
vext_v
vextq_v
vfma_v
vfmaq_v
vhadd_v
vhaddq_v
vhsub_v
vhsubq_v
vld1_dup_v
vld1_v
vld1_x2_v
vld1_x3_v
vld1_x4_v
vld1q_dup_v
vld1q_v
vld1q_x2_v
vld1q_x3_v
vld1q_x4_v
vld2_dup_v
vld2_lane_v
vld2_v
vld2q_dup_v
vld2q_lane_v
vld2q_v
vld3_dup_v
vld3_lane_v
vld3_v
vld3q_dup_v
vld3q_lane_v
vld3q_v
vld4_dup_v
vld4_lane_v
vld4_v
vld4q_dup_v
vld4q_lane_v
vld4q_v
vmax_v
vmaxnm_v
vmaxnmq_v
vmaxq_v
vmin_v
vminnm_v
vminnmq_v
vminq_v
vmmlaq_v
vmovl_v
vmovn_v
vmul_v
vmull_v
vmulq_v
vpadal_v
vpadalq_v
vpadd_v
vpaddl_v
vpaddlq_v
vpaddq_v
vpmax_v
vpmin_v
vqabs_v
vqabsq_v
vqadd_v
vqaddq_v
vqdmlal_v
vqdmlsl_v
vqdmulh_v
vqdmulhq_v
vqdmull_v
vqmovn_v
vqmovun_v
vqneg_v
vqnegq_v
vqrdmulh_v
vqrdmulhq_v
vqrshl_v
vqrshlq_v
vqshl_n_v
vqshl_v
vqshlq_n_v
vqshlq_v
vqshlu_n_v
vqshluq_n_v
vqsub_v
vqsubq_v
vraddhn_v
vrecpe_v
vrecpeq_v
vrecps_v
vrecpsq_v
vrhadd_v
vrhaddq_v
vrnd_v
vrnda_v
vrndaq_v
vrndi_v
vrndiq_v
vrndm_v
vrndmq_v
vrndn_v
vrndnq_v
vrndp_v
vrndpq_v
vrndq_v
vrndx_v
vrndxq_v
vrshl_v
vrshlq_v
vrshr_n_v
vrshrq_n_v
vrsqrte_v
vrsqrteq_v
vrsqrts_v
vrsqrtsq_v
vrsubhn_v
vsha1su0q_v
vsha1su1q_v
vsha256h2q_v
vsha256hq_v
vsha256su0q_v
vsha256su1q_v
vshl_n_v
vshl_v
vshll_n_v
vshlq_n_v
vshlq_v
vshr_n_v
vshrn_n_v
vshrq_n_v
vst1_v
vst1_x2_v
vst1_x3_v
vst1_x4_v
vst1q_v
vst1q_x2_v
vst1q_x3_v
vst1q_x4_v
vst2_lane_v
vst2_v
vst2q_lane_v
vst2q_v
vst3_lane_v
vst3_v
vst3q_lane_v
vst3q_v
vst4_lane_v
vst4_v
vst4q_lane_v
vst4q_v
vsubhn_v
vtrn_v
vtrnq_v
vtst_v
vtstq_v
vusdot_v
vusdotq_v
vusmmlaq_v
vuzp_v
vuzpq_v
vzip_v
vzipq_v
svaba_n_s16
svaba_n_s32
svaba_n_s64
svaba_n_s8
svaba_n_u16
svaba_n_u32
svaba_n_u64
svaba_n_u8
svaba_s16
svaba_s32
svaba_s64
svaba_s8
svaba_u16
svaba_u32
svaba_u64
svaba_u8
svabalb_n_s16
svabalb_n_s32
svabalb_n_s64
svabalb_n_u16
svabalb_n_u32
svabalb_n_u64
svabalb_s16
svabalb_s32
svabalb_s64
svabalb_u16
svabalb_u32
svabalb_u64
svabalt_n_s16
svabalt_n_s32
svabalt_n_s64
svabalt_n_u16
svabalt_n_u32
svabalt_n_u64
svabalt_s16
svabalt_s32
svabalt_s64
svabalt_u16
svabalt_u32
svabalt_u64
svabd_f16_m
svabd_f16_x
svabd_f16_z
svabd_f32_m
svabd_f32_x
svabd_f32_z
svabd_f64_m
svabd_f64_x
svabd_f64_z
svabd_n_f16_m
svabd_n_f16_x
svabd_n_f16_z
svabd_n_f32_m
svabd_n_f32_x
svabd_n_f32_z
svabd_n_f64_m
svabd_n_f64_x
svabd_n_f64_z
svabd_n_s16_m
svabd_n_s16_x
svabd_n_s16_z
svabd_n_s32_m
svabd_n_s32_x
svabd_n_s32_z
svabd_n_s64_m
svabd_n_s64_x
svabd_n_s64_z
svabd_n_s8_m
svabd_n_s8_x
svabd_n_s8_z
svabd_n_u16_m
svabd_n_u16_x
svabd_n_u16_z
svabd_n_u32_m
svabd_n_u32_x
svabd_n_u32_z
svabd_n_u64_m
svabd_n_u64_x
svabd_n_u64_z
svabd_n_u8_m
svabd_n_u8_x
svabd_n_u8_z
svabd_s16_m
svabd_s16_x
svabd_s16_z
svabd_s32_m
svabd_s32_x
svabd_s32_z
svabd_s64_m
svabd_s64_x
svabd_s64_z
svabd_s8_m
svabd_s8_x
svabd_s8_z
svabd_u16_m
svabd_u16_x
svabd_u16_z
svabd_u32_m
svabd_u32_x
svabd_u32_z
svabd_u64_m
svabd_u64_x
svabd_u64_z
svabd_u8_m
svabd_u8_x
svabd_u8_z
svabdlb_n_s16
svabdlb_n_s32
svabdlb_n_s64
svabdlb_n_u16
svabdlb_n_u32
svabdlb_n_u64
svabdlb_s16
svabdlb_s32
svabdlb_s64
svabdlb_u16
svabdlb_u32
svabdlb_u64
svabdlt_n_s16
svabdlt_n_s32
svabdlt_n_s64
svabdlt_n_u16
svabdlt_n_u32
svabdlt_n_u64
svabdlt_s16
svabdlt_s32
svabdlt_s64
svabdlt_u16
svabdlt_u32
svabdlt_u64
svabs_f16_m
svabs_f16_x
svabs_f16_z
svabs_f32_m
svabs_f32_x
svabs_f32_z
svabs_f64_m
svabs_f64_x
svabs_f64_z
svabs_s16_m
svabs_s16_x
svabs_s16_z
svabs_s32_m
svabs_s32_x
svabs_s32_z
svabs_s64_m
svabs_s64_x
svabs_s64_z
svabs_s8_m
svabs_s8_x
svabs_s8_z
svacge_f16
svacge_f32
svacge_f64
svacge_n_f16
svacge_n_f32
svacge_n_f64
svacgt_f16
svacgt_f32
svacgt_f64
svacgt_n_f16
svacgt_n_f32
svacgt_n_f64
svacle_f16
svacle_f32
svacle_f64
svacle_n_f16
svacle_n_f32
svacle_n_f64
svaclt_f16
svaclt_f32
svaclt_f64
svaclt_n_f16
svaclt_n_f32
svaclt_n_f64
svadalp_s16_m
svadalp_s16_x
svadalp_s16_z
svadalp_s32_m
svadalp_s32_x
svadalp_s32_z
svadalp_s64_m
svadalp_s64_x
svadalp_s64_z
svadalp_u16_m
svadalp_u16_x
svadalp_u16_z
svadalp_u32_m
svadalp_u32_x
svadalp_u32_z
svadalp_u64_m
svadalp_u64_x
svadalp_u64_z
svadclb_n_u32
svadclb_n_u64
svadclb_u32
svadclb_u64
svadclt_n_u32
svadclt_n_u64
svadclt_u32
svadclt_u64
svadd_f16_m
svadd_f16_x
svadd_f16_z
svadd_f32_m
svadd_f32_x
svadd_f32_z
svadd_f64_m
svadd_f64_x
svadd_f64_z
svadd_n_f16_m
svadd_n_f16_x
svadd_n_f16_z
svadd_n_f32_m
svadd_n_f32_x
svadd_n_f32_z
svadd_n_f64_m
svadd_n_f64_x
svadd_n_f64_z
svadd_n_s16_m
svadd_n_s16_x
svadd_n_s16_z
svadd_n_s32_m
svadd_n_s32_x
svadd_n_s32_z
svadd_n_s64_m
svadd_n_s64_x
svadd_n_s64_z
svadd_n_s8_m
svadd_n_s8_x
svadd_n_s8_z
svadd_n_u16_m
svadd_n_u16_x
svadd_n_u16_z
svadd_n_u32_m
svadd_n_u32_x
svadd_n_u32_z
svadd_n_u64_m
svadd_n_u64_x
svadd_n_u64_z
svadd_n_u8_m
svadd_n_u8_x
svadd_n_u8_z
svadd_s16_m
svadd_s16_x
svadd_s16_z
svadd_s32_m
svadd_s32_x
svadd_s32_z
svadd_s64_m
svadd_s64_x
svadd_s64_z
svadd_s8_m
svadd_s8_x
svadd_s8_z
svadd_u16_m
svadd_u16_x
svadd_u16_z
svadd_u32_m
svadd_u32_x
svadd_u32_z
svadd_u64_m
svadd_u64_x
svadd_u64_z
svadd_u8_m
svadd_u8_x
svadd_u8_z
svadda_f16
svadda_f32
svadda_f64
svaddhnb_n_s16
svaddhnb_n_s32
svaddhnb_n_s64
svaddhnb_n_u16
svaddhnb_n_u32
svaddhnb_n_u64
svaddhnb_s16
svaddhnb_s32
svaddhnb_s64
svaddhnb_u16
svaddhnb_u32
svaddhnb_u64
svaddhnt_n_s16
svaddhnt_n_s32
svaddhnt_n_s64
svaddhnt_n_u16
svaddhnt_n_u32
svaddhnt_n_u64
svaddhnt_s16
svaddhnt_s32
svaddhnt_s64
svaddhnt_u16
svaddhnt_u32
svaddhnt_u64
svaddlb_n_s16
svaddlb_n_s32
svaddlb_n_s64
svaddlb_n_u16
svaddlb_n_u32
svaddlb_n_u64
svaddlb_s16
svaddlb_s32
svaddlb_s64
svaddlb_u16
svaddlb_u32
svaddlb_u64
svaddlbt_n_s16
svaddlbt_n_s32
svaddlbt_n_s64
svaddlbt_s16
svaddlbt_s32
svaddlbt_s64
svaddlt_n_s16
svaddlt_n_s32
svaddlt_n_s64
svaddlt_n_u16
svaddlt_n_u32
svaddlt_n_u64
svaddlt_s16
svaddlt_s32
svaddlt_s64
svaddlt_u16
svaddlt_u32
svaddlt_u64
svaddp_f16_m
svaddp_f16_x
svaddp_f32_m
svaddp_f32_x
svaddp_f64_m
svaddp_f64_x
svaddp_s16_m
svaddp_s16_x
svaddp_s32_m
svaddp_s32_x
svaddp_s64_m
svaddp_s64_x
svaddp_s8_m
svaddp_s8_x
svaddp_u16_m
svaddp_u16_x
svaddp_u32_m
svaddp_u32_x
svaddp_u64_m
svaddp_u64_x
svaddp_u8_m
svaddp_u8_x
svaddv_f16
svaddv_f32
svaddv_f64
svaddv_s16
svaddv_s32
svaddv_s64
svaddv_s8
svaddv_u16
svaddv_u32
svaddv_u64
svaddv_u8
svaddwb_n_s16
svaddwb_n_s32
svaddwb_n_s64
svaddwb_n_u16
svaddwb_n_u32
svaddwb_n_u64
svaddwb_s16
svaddwb_s32
svaddwb_s64
svaddwb_u16
svaddwb_u32
svaddwb_u64
svaddwt_n_s16
svaddwt_n_s32
svaddwt_n_s64
svaddwt_n_u16
svaddwt_n_u32
svaddwt_n_u64
svaddwt_s16
svaddwt_s32
svaddwt_s64
svaddwt_u16
svaddwt_u32
svaddwt_u64
svadrb_u32base_s32offset
svadrb_u32base_u32offset
svadrb_u64base_s64offset
svadrb_u64base_u64offset
svadrd_u32base_s32index
svadrd_u32base_u32index
svadrd_u64base_s64index
svadrd_u64base_u64index
svadrh_u32base_s32index
svadrh_u32base_u32index
svadrh_u64base_s64index
svadrh_u64base_u64index
svadrw_u32base_s32index
svadrw_u32base_u32index
svadrw_u64base_s64index
svadrw_u64base_u64index
svaesd_u8
svaese_u8
svaesimc_u8
svaesmc_u8
svand_b_z
svand_n_s16_m
svand_n_s16_x
svand_n_s16_z
svand_n_s32_m
svand_n_s32_x
svand_n_s32_z
svand_n_s64_m
svand_n_s64_x
svand_n_s64_z
svand_n_s8_m
svand_n_s8_x
svand_n_s8_z
svand_n_u16_m
svand_n_u16_x
svand_n_u16_z
svand_n_u32_m
svand_n_u32_x
svand_n_u32_z
svand_n_u64_m
svand_n_u64_x
svand_n_u64_z
svand_n_u8_m
svand_n_u8_x
svand_n_u8_z
svand_s16_m
svand_s16_x
svand_s16_z
svand_s32_m
svand_s32_x
svand_s32_z
svand_s64_m
svand_s64_x
svand_s64_z
svand_s8_m
svand_s8_x
svand_s8_z
svand_u16_m
svand_u16_x
svand_u16_z
svand_u32_m
svand_u32_x
svand_u32_z
svand_u64_m
svand_u64_x
svand_u64_z
svand_u8_m
svand_u8_x
svand_u8_z
svandv_s16
svandv_s32
svandv_s64
svandv_s8
svandv_u16
svandv_u32
svandv_u64
svandv_u8
svasr_n_s16_m
svasr_n_s16_x
svasr_n_s16_z
svasr_n_s32_m
svasr_n_s32_x
svasr_n_s32_z
svasr_n_s64_m
svasr_n_s64_x
svasr_n_s64_z
svasr_n_s8_m
svasr_n_s8_x
svasr_n_s8_z
svasr_s16_m
svasr_s16_x
svasr_s16_z
svasr_s32_m
svasr_s32_x
svasr_s32_z
svasr_s64_m
svasr_s64_x
svasr_s64_z
svasr_s8_m
svasr_s8_x
svasr_s8_z
svasr_wide_n_s16_m
svasr_wide_n_s16_x
svasr_wide_n_s16_z
svasr_wide_n_s32_m
svasr_wide_n_s32_x
svasr_wide_n_s32_z
svasr_wide_n_s8_m
svasr_wide_n_s8_x
svasr_wide_n_s8_z
svasr_wide_s16_m
svasr_wide_s16_x
svasr_wide_s16_z
svasr_wide_s32_m
svasr_wide_s32_x
svasr_wide_s32_z
svasr_wide_s8_m
svasr_wide_s8_x
svasr_wide_s8_z
svasrd_n_s16_m
svasrd_n_s16_x
svasrd_n_s16_z
svasrd_n_s32_m
svasrd_n_s32_x
svasrd_n_s32_z
svasrd_n_s64_m
svasrd_n_s64_x
svasrd_n_s64_z
svasrd_n_s8_m
svasrd_n_s8_x
svasrd_n_s8_z
svbcax_n_s16
svbcax_n_s32
svbcax_n_s64
svbcax_n_s8
svbcax_n_u16
svbcax_n_u32
svbcax_n_u64
svbcax_n_u8
svbcax_s16
svbcax_s32
svbcax_s64
svbcax_s8
svbcax_u16
svbcax_u32
svbcax_u64
svbcax_u8
svbdep_n_u16
svbdep_n_u32
svbdep_n_u64
svbdep_n_u8
svbdep_u16
svbdep_u32
svbdep_u64
svbdep_u8
svbext_n_u16
svbext_n_u32
svbext_n_u64
svbext_n_u8
svbext_u16
svbext_u32
svbext_u64
svbext_u8
svbfdot_f32
svbfdot_lane_f32
svbfdot_n_f32
svbfmlalb_f32
svbfmlalb_lane_f32
svbfmlalb_n_f32
svbfmlalt_f32
svbfmlalt_lane_f32
svbfmlalt_n_f32
svbfmmla_f32
svbgrp_n_u16
svbgrp_n_u32
svbgrp_n_u64
svbgrp_n_u8
svbgrp_u16
svbgrp_u32
svbgrp_u64
svbgrp_u8
svbic_b_z
svbic_n_s16_m
svbic_n_s16_x
svbic_n_s16_z
svbic_n_s32_m
svbic_n_s32_x
svbic_n_s32_z
svbic_n_s64_m
svbic_n_s64_x
svbic_n_s64_z
svbic_n_s8_m
svbic_n_s8_x
svbic_n_s8_z
svbic_n_u16_m
svbic_n_u16_x
svbic_n_u16_z
svbic_n_u32_m
svbic_n_u32_x
svbic_n_u32_z
svbic_n_u64_m
svbic_n_u64_x
svbic_n_u64_z
svbic_n_u8_m
svbic_n_u8_x
svbic_n_u8_z
svbic_s16_m
svbic_s16_x
svbic_s16_z
svbic_s32_m
svbic_s32_x
svbic_s32_z
svbic_s64_m
svbic_s64_x
svbic_s64_z
svbic_s8_m
svbic_s8_x
svbic_s8_z
svbic_u16_m
svbic_u16_x
svbic_u16_z
svbic_u32_m
svbic_u32_x
svbic_u32_z
svbic_u64_m
svbic_u64_x
svbic_u64_z
svbic_u8_m
svbic_u8_x
svbic_u8_z
svbrka_b_m
svbrka_b_z
svbrkb_b_m
svbrkb_b_z
svbrkn_b_z
svbrkpa_b_z
svbrkpb_b_z
svbsl1n_n_s16
svbsl1n_n_s32
svbsl1n_n_s64
svbsl1n_n_s8
svbsl1n_n_u16
svbsl1n_n_u32
svbsl1n_n_u64
svbsl1n_n_u8
svbsl1n_s16
svbsl1n_s32
svbsl1n_s64
svbsl1n_s8
svbsl1n_u16
svbsl1n_u32
svbsl1n_u64
svbsl1n_u8
svbsl2n_n_s16
svbsl2n_n_s32
svbsl2n_n_s64
svbsl2n_n_s8
svbsl2n_n_u16
svbsl2n_n_u32
svbsl2n_n_u64
svbsl2n_n_u8
svbsl2n_s16
svbsl2n_s32
svbsl2n_s64
svbsl2n_s8
svbsl2n_u16
svbsl2n_u32
svbsl2n_u64
svbsl2n_u8
svbsl_n_s16
svbsl_n_s32
svbsl_n_s64
svbsl_n_s8
svbsl_n_u16
svbsl_n_u32
svbsl_n_u64
svbsl_n_u8
svbsl_s16
svbsl_s32
svbsl_s64
svbsl_s8
svbsl_u16
svbsl_u32
svbsl_u64
svbsl_u8
svcadd_f16_m
svcadd_f16_x
svcadd_f16_z
svcadd_f32_m
svcadd_f32_x
svcadd_f32_z
svcadd_f64_m
svcadd_f64_x
svcadd_f64_z
svcadd_s16
svcadd_s32
svcadd_s64
svcadd_s8
svcadd_u16
svcadd_u32
svcadd_u64
svcadd_u8
svcdot_lane_s32
svcdot_lane_s64
svcdot_s32
svcdot_s64
svclasta_bf16
svclasta_f16
svclasta_f32
svclasta_f64
svclasta_n_bf16
svclasta_n_f16
svclasta_n_f32
svclasta_n_f64
svclasta_n_s16
svclasta_n_s32
svclasta_n_s64
svclasta_n_s8
svclasta_n_u16
svclasta_n_u32
svclasta_n_u64
svclasta_n_u8
svclasta_s16
svclasta_s32
svclasta_s64
svclasta_s8
svclasta_u16
svclasta_u32
svclasta_u64
svclasta_u8
svclastb_bf16
svclastb_f16
svclastb_f32
svclastb_f64
svclastb_n_bf16
svclastb_n_f16
svclastb_n_f32
svclastb_n_f64
svclastb_n_s16
svclastb_n_s32
svclastb_n_s64
svclastb_n_s8
svclastb_n_u16
svclastb_n_u32
svclastb_n_u64
svclastb_n_u8
svclastb_s16
svclastb_s32
svclastb_s64
svclastb_s8
svclastb_u16
svclastb_u32
svclastb_u64
svclastb_u8
svcls_s16_m
svcls_s16_x
svcls_s16_z
svcls_s32_m
svcls_s32_x
svcls_s32_z
svcls_s64_m
svcls_s64_x
svcls_s64_z
svcls_s8_m
svcls_s8_x
svcls_s8_z
svclz_s16_m
svclz_s16_x
svclz_s16_z
svclz_s32_m
svclz_s32_x
svclz_s32_z
svclz_s64_m
svclz_s64_x
svclz_s64_z
svclz_s8_m
svclz_s8_x
svclz_s8_z
svclz_u16_m
svclz_u16_x
svclz_u16_z
svclz_u32_m
svclz_u32_x
svclz_u32_z
svclz_u64_m
svclz_u64_x
svclz_u64_z
svclz_u8_m
svclz_u8_x
svclz_u8_z
svcmla_f16_m
svcmla_f16_x
svcmla_f16_z
svcmla_f32_m
svcmla_f32_x
svcmla_f32_z
svcmla_f64_m
svcmla_f64_x
svcmla_f64_z
svcmla_lane_f16
svcmla_lane_f32
svcmla_lane_s16
svcmla_lane_s32
svcmla_lane_u16
svcmla_lane_u32
svcmla_s16
svcmla_s32
svcmla_s64
svcmla_s8
svcmla_u16
svcmla_u32
svcmla_u64
svcmla_u8
svcmpeq_f16
svcmpeq_f32
svcmpeq_f64
svcmpeq_n_f16
svcmpeq_n_f32
svcmpeq_n_f64
svcmpeq_n_s16
svcmpeq_n_s32
svcmpeq_n_s64
svcmpeq_n_s8
svcmpeq_n_u16
svcmpeq_n_u32
svcmpeq_n_u64
svcmpeq_n_u8
svcmpeq_s16
svcmpeq_s32
svcmpeq_s64
svcmpeq_s8
svcmpeq_u16
svcmpeq_u32
svcmpeq_u64
svcmpeq_u8
svcmpeq_wide_n_s16
svcmpeq_wide_n_s32
svcmpeq_wide_n_s8
svcmpeq_wide_s16
svcmpeq_wide_s32
svcmpeq_wide_s8
svcmpge_f16
svcmpge_f32
svcmpge_f64
svcmpge_n_f16
svcmpge_n_f32
svcmpge_n_f64
svcmpge_n_s16
svcmpge_n_s32
svcmpge_n_s64
svcmpge_n_s8
svcmpge_n_u16
svcmpge_n_u32
svcmpge_n_u64
svcmpge_n_u8
svcmpge_s16
svcmpge_s32
svcmpge_s64
svcmpge_s8
svcmpge_u16
svcmpge_u32
svcmpge_u64
svcmpge_u8
svcmpge_wide_n_s16
svcmpge_wide_n_s32
svcmpge_wide_n_s8
svcmpge_wide_n_u16
svcmpge_wide_n_u32
svcmpge_wide_n_u8
svcmpge_wide_s16
svcmpge_wide_s32
svcmpge_wide_s8
svcmpge_wide_u16
svcmpge_wide_u32
svcmpge_wide_u8
svcmpgt_f16
svcmpgt_f32
svcmpgt_f64
svcmpgt_n_f16
svcmpgt_n_f32
svcmpgt_n_f64
svcmpgt_n_s16
svcmpgt_n_s32
svcmpgt_n_s64
svcmpgt_n_s8
svcmpgt_n_u16
svcmpgt_n_u32
svcmpgt_n_u64
svcmpgt_n_u8
svcmpgt_s16
svcmpgt_s32
svcmpgt_s64
svcmpgt_s8
svcmpgt_u16
svcmpgt_u32
svcmpgt_u64
svcmpgt_u8
svcmpgt_wide_n_s16
svcmpgt_wide_n_s32
svcmpgt_wide_n_s8
svcmpgt_wide_n_u16
svcmpgt_wide_n_u32
svcmpgt_wide_n_u8
svcmpgt_wide_s16
svcmpgt_wide_s32
svcmpgt_wide_s8
svcmpgt_wide_u16
svcmpgt_wide_u32
svcmpgt_wide_u8
svcmple_f16
svcmple_f32
svcmple_f64
svcmple_n_f16
svcmple_n_f32
svcmple_n_f64
svcmple_n_s16
svcmple_n_s32
svcmple_n_s64
svcmple_n_s8
svcmple_n_u16
svcmple_n_u32
svcmple_n_u64
svcmple_n_u8
svcmple_s16
svcmple_s32
svcmple_s64
svcmple_s8
svcmple_u16
svcmple_u32
svcmple_u64
svcmple_u8
svcmple_wide_n_s16
svcmple_wide_n_s32
svcmple_wide_n_s8
svcmple_wide_n_u16
svcmple_wide_n_u32
svcmple_wide_n_u8
svcmple_wide_s16
svcmple_wide_s32
svcmple_wide_s8
svcmple_wide_u16
svcmple_wide_u32
svcmple_wide_u8
svcmplt_f16
svcmplt_f32
svcmplt_f64
svcmplt_n_f16
svcmplt_n_f32
svcmplt_n_f64
svcmplt_n_s16
svcmplt_n_s32
svcmplt_n_s64
svcmplt_n_s8
svcmplt_n_u16
svcmplt_n_u32
svcmplt_n_u64
svcmplt_n_u8
svcmplt_s16
svcmplt_s32
svcmplt_s64
svcmplt_s8
svcmplt_u16
svcmplt_u32
svcmplt_u64
svcmplt_u8
svcmplt_wide_n_s16
svcmplt_wide_n_s32
svcmplt_wide_n_s8
svcmplt_wide_n_u16
svcmplt_wide_n_u32
svcmplt_wide_n_u8
svcmplt_wide_s16
svcmplt_wide_s32
svcmplt_wide_s8
svcmplt_wide_u16
svcmplt_wide_u32
svcmplt_wide_u8
svcmpne_f16
svcmpne_f32
svcmpne_f64
svcmpne_n_f16
svcmpne_n_f32
svcmpne_n_f64
svcmpne_n_s16
svcmpne_n_s32
svcmpne_n_s64
svcmpne_n_s8
svcmpne_n_u16
svcmpne_n_u32
svcmpne_n_u64
svcmpne_n_u8
svcmpne_s16
svcmpne_s32
svcmpne_s64
svcmpne_s8
svcmpne_u16
svcmpne_u32
svcmpne_u64
svcmpne_u8
svcmpne_wide_n_s16
svcmpne_wide_n_s32
svcmpne_wide_n_s8
svcmpne_wide_s16
svcmpne_wide_s32
svcmpne_wide_s8
svcmpuo_f16
svcmpuo_f32
svcmpuo_f64
svcmpuo_n_f16
svcmpuo_n_f32
svcmpuo_n_f64
svcnot_s16_m
svcnot_s16_x
svcnot_s16_z
svcnot_s32_m
svcnot_s32_x
svcnot_s32_z
svcnot_s64_m
svcnot_s64_x
svcnot_s64_z
svcnot_s8_m
svcnot_s8_x
svcnot_s8_z
svcnot_u16_m
svcnot_u16_x
svcnot_u16_z
svcnot_u32_m
svcnot_u32_x
svcnot_u32_z
svcnot_u64_m
svcnot_u64_x
svcnot_u64_z
svcnot_u8_m
svcnot_u8_x
svcnot_u8_z
svcnt_bf16_m
svcnt_bf16_x
svcnt_bf16_z
svcnt_f16_m
svcnt_f16_x
svcnt_f16_z
svcnt_f32_m
svcnt_f32_x
svcnt_f32_z
svcnt_f64_m
svcnt_f64_x
svcnt_f64_z
svcnt_s16_m
svcnt_s16_x
svcnt_s16_z
svcnt_s32_m
svcnt_s32_x
svcnt_s32_z
svcnt_s64_m
svcnt_s64_x
svcnt_s64_z
svcnt_s8_m
svcnt_s8_x
svcnt_s8_z
svcnt_u16_m
svcnt_u16_x
svcnt_u16_z
svcnt_u32_m
svcnt_u32_x
svcnt_u32_z
svcnt_u64_m
svcnt_u64_x
svcnt_u64_z
svcnt_u8_m
svcnt_u8_x
svcnt_u8_z
svcntb
svcntb_pat
svcntd
svcntd_pat
svcnth
svcnth_pat
svcntp_b16
svcntp_b32
svcntp_b64
svcntp_b8
svcntw
svcntw_pat
svcompact_f32
svcompact_f64
svcompact_s32
svcompact_s64
svcompact_u32
svcompact_u64
svcreate2_bf16
svcreate2_f16
svcreate2_f32
svcreate2_f64
svcreate2_s16
svcreate2_s32
svcreate2_s64
svcreate2_s8
svcreate2_u16
svcreate2_u32
svcreate2_u64
svcreate2_u8
svcreate3_bf16
svcreate3_f16
svcreate3_f32
svcreate3_f64
svcreate3_s16
svcreate3_s32
svcreate3_s64
svcreate3_s8
svcreate3_u16
svcreate3_u32
svcreate3_u64
svcreate3_u8
svcreate4_bf16
svcreate4_f16
svcreate4_f32
svcreate4_f64
svcreate4_s16
svcreate4_s32
svcreate4_s64
svcreate4_s8
svcreate4_u16
svcreate4_u32
svcreate4_u64
svcreate4_u8
svcvt_bf16_f32_m
svcvt_bf16_f32_x
svcvt_bf16_f32_z
svcvt_f16_f32_m
svcvt_f16_f32_x
svcvt_f16_f32_z
svcvt_f16_f64_m
svcvt_f16_f64_x
svcvt_f16_f64_z
svcvt_f16_s16_m
svcvt_f16_s16_x
svcvt_f16_s16_z
svcvt_f16_s32_m
svcvt_f16_s32_x
svcvt_f16_s32_z
svcvt_f16_s64_m
svcvt_f16_s64_x
svcvt_f16_s64_z
svcvt_f16_u16_m
svcvt_f16_u16_x
svcvt_f16_u16_z
svcvt_f16_u32_m
svcvt_f16_u32_x
svcvt_f16_u32_z
svcvt_f16_u64_m
svcvt_f16_u64_x
svcvt_f16_u64_z
svcvt_f32_f16_m
svcvt_f32_f16_x
svcvt_f32_f16_z
svcvt_f32_f64_m
svcvt_f32_f64_x
svcvt_f32_f64_z
svcvt_f32_s32_m
svcvt_f32_s32_x
svcvt_f32_s32_z
svcvt_f32_s64_m
svcvt_f32_s64_x
svcvt_f32_s64_z
svcvt_f32_u32_m
svcvt_f32_u32_x
svcvt_f32_u32_z
svcvt_f32_u64_m
svcvt_f32_u64_x
svcvt_f32_u64_z
svcvt_f64_f16_m
svcvt_f64_f16_x
svcvt_f64_f16_z
svcvt_f64_f32_m
svcvt_f64_f32_x
svcvt_f64_f32_z
svcvt_f64_s32_m
svcvt_f64_s32_x
svcvt_f64_s32_z
svcvt_f64_s64_m
svcvt_f64_s64_x
svcvt_f64_s64_z
svcvt_f64_u32_m
svcvt_f64_u32_x
svcvt_f64_u32_z
svcvt_f64_u64_m
svcvt_f64_u64_x
svcvt_f64_u64_z
svcvt_s16_f16_m
svcvt_s16_f16_x
svcvt_s16_f16_z
svcvt_s32_f16_m
svcvt_s32_f16_x
svcvt_s32_f16_z
svcvt_s32_f32_m
svcvt_s32_f32_x
svcvt_s32_f32_z
svcvt_s32_f64_m
svcvt_s32_f64_x
svcvt_s32_f64_z
svcvt_s64_f16_m
svcvt_s64_f16_x
svcvt_s64_f16_z
svcvt_s64_f32_m
svcvt_s64_f32_x
svcvt_s64_f32_z
svcvt_s64_f64_m
svcvt_s64_f64_x
svcvt_s64_f64_z
svcvt_u16_f16_m
svcvt_u16_f16_x
svcvt_u16_f16_z
svcvt_u32_f16_m
svcvt_u32_f16_x
svcvt_u32_f16_z
svcvt_u32_f32_m
svcvt_u32_f32_x
svcvt_u32_f32_z
svcvt_u32_f64_m
svcvt_u32_f64_x
svcvt_u32_f64_z
svcvt_u64_f16_m
svcvt_u64_f16_x
svcvt_u64_f16_z
svcvt_u64_f32_m
svcvt_u64_f32_x
svcvt_u64_f32_z
svcvt_u64_f64_m
svcvt_u64_f64_x
svcvt_u64_f64_z
svcvtlt_f32_f16_m
svcvtlt_f32_f16_x
svcvtlt_f64_f32_m
svcvtlt_f64_f32_x
svcvtnt_bf16_f32_m
svcvtnt_f16_f32_m
svcvtnt_f32_f64_m
svcvtx_f32_f64_m
svcvtx_f32_f64_x
svcvtx_f32_f64_z
svcvtxnt_f32_f64_m
svdiv_f16_m
svdiv_f16_x
svdiv_f16_z
svdiv_f32_m
svdiv_f32_x
svdiv_f32_z
svdiv_f64_m
svdiv_f64_x
svdiv_f64_z
svdiv_n_f16_m
svdiv_n_f16_x
svdiv_n_f16_z
svdiv_n_f32_m
svdiv_n_f32_x
svdiv_n_f32_z
svdiv_n_f64_m
svdiv_n_f64_x
svdiv_n_f64_z
svdiv_n_s32_m
svdiv_n_s32_x
svdiv_n_s32_z
svdiv_n_s64_m
svdiv_n_s64_x
svdiv_n_s64_z
svdiv_n_u32_m
svdiv_n_u32_x
svdiv_n_u32_z
svdiv_n_u64_m
svdiv_n_u64_x
svdiv_n_u64_z
svdiv_s32_m
svdiv_s32_x
svdiv_s32_z
svdiv_s64_m
svdiv_s64_x
svdiv_s64_z
svdiv_u32_m
svdiv_u32_x
svdiv_u32_z
svdiv_u64_m
svdiv_u64_x
svdiv_u64_z
svdivr_f16_m
svdivr_f16_x
svdivr_f16_z
svdivr_f32_m
svdivr_f32_x
svdivr_f32_z
svdivr_f64_m
svdivr_f64_x
svdivr_f64_z
svdivr_n_f16_m
svdivr_n_f16_x
svdivr_n_f16_z
svdivr_n_f32_m
svdivr_n_f32_x
svdivr_n_f32_z
svdivr_n_f64_m
svdivr_n_f64_x
svdivr_n_f64_z
svdivr_n_s32_m
svdivr_n_s32_x
svdivr_n_s32_z
svdivr_n_s64_m
svdivr_n_s64_x
svdivr_n_s64_z
svdivr_n_u32_m
svdivr_n_u32_x
svdivr_n_u32_z
svdivr_n_u64_m
svdivr_n_u64_x
svdivr_n_u64_z
svdivr_s32_m
svdivr_s32_x
svdivr_s32_z
svdivr_s64_m
svdivr_s64_x
svdivr_s64_z
svdivr_u32_m
svdivr_u32_x
svdivr_u32_z
svdivr_u64_m
svdivr_u64_x
svdivr_u64_z
svdot_lane_s32
svdot_lane_s64
svdot_lane_u32
svdot_lane_u64
svdot_n_s32
svdot_n_s64
svdot_n_u32
svdot_n_u64
svdot_s32
svdot_s64
svdot_u32
svdot_u64
svdup_lane_bf16
svdup_lane_f16
svdup_lane_f32
svdup_lane_f64
svdup_lane_s16
svdup_lane_s32
svdup_lane_s64
svdup_lane_s8
svdup_lane_u16
svdup_lane_u32
svdup_lane_u64
svdup_lane_u8
svdup_n_b16
svdup_n_b32
svdup_n_b64
svdup_n_b8
svdup_n_bf16
svdup_n_bf16_m
svdup_n_bf16_x
svdup_n_bf16_z
svdup_n_f16
svdup_n_f16_m
svdup_n_f16_x
svdup_n_f16_z
svdup_n_f32
svdup_n_f32_m
svdup_n_f32_x
svdup_n_f32_z
svdup_n_f64
svdup_n_f64_m
svdup_n_f64_x
svdup_n_f64_z
svdup_n_s16
svdup_n_s16_m
svdup_n_s16_x
svdup_n_s16_z
svdup_n_s32
svdup_n_s32_m
svdup_n_s32_x
svdup_n_s32_z
svdup_n_s64
svdup_n_s64_m
svdup_n_s64_x
svdup_n_s64_z
svdup_n_s8
svdup_n_s8_m
svdup_n_s8_x
svdup_n_s8_z
svdup_n_u16
svdup_n_u16_m
svdup_n_u16_x
svdup_n_u16_z
svdup_n_u32
svdup_n_u32_m
svdup_n_u32_x
svdup_n_u32_z
svdup_n_u64
svdup_n_u64_m
svdup_n_u64_x
svdup_n_u64_z
svdup_n_u8
svdup_n_u8_m
svdup_n_u8_x
svdup_n_u8_z
svdupq_lane_bf16
svdupq_lane_f16
svdupq_lane_f32
svdupq_lane_f64
svdupq_lane_s16
svdupq_lane_s32
svdupq_lane_s64
svdupq_lane_s8
svdupq_lane_u16
svdupq_lane_u32
svdupq_lane_u64
svdupq_lane_u8
svdupq_n_b16
svdupq_n_b32
svdupq_n_b64
svdupq_n_b8
svdupq_n_bf16
svdupq_n_f16
svdupq_n_f32
svdupq_n_f64
svdupq_n_s16
svdupq_n_s32
svdupq_n_s64
svdupq_n_s8
svdupq_n_u16
svdupq_n_u32
svdupq_n_u64
svdupq_n_u8
sveor3_n_s16
sveor3_n_s32
sveor3_n_s64
sveor3_n_s8
sveor3_n_u16
sveor3_n_u32
sveor3_n_u64
sveor3_n_u8
sveor3_s16
sveor3_s32
sveor3_s64
sveor3_s8
sveor3_u16
sveor3_u32
sveor3_u64
sveor3_u8
sveor_b_z
sveor_n_s16_m
sveor_n_s16_x
sveor_n_s16_z
sveor_n_s32_m
sveor_n_s32_x
sveor_n_s32_z
sveor_n_s64_m
sveor_n_s64_x
sveor_n_s64_z
sveor_n_s8_m
sveor_n_s8_x
sveor_n_s8_z
sveor_n_u16_m
sveor_n_u16_x
sveor_n_u16_z
sveor_n_u32_m
sveor_n_u32_x
sveor_n_u32_z
sveor_n_u64_m
sveor_n_u64_x
sveor_n_u64_z
sveor_n_u8_m
sveor_n_u8_x
sveor_n_u8_z
sveor_s16_m
sveor_s16_x
sveor_s16_z
sveor_s32_m
sveor_s32_x
sveor_s32_z
sveor_s64_m
sveor_s64_x
sveor_s64_z
sveor_s8_m
sveor_s8_x
sveor_s8_z
sveor_u16_m
sveor_u16_x
sveor_u16_z
sveor_u32_m
sveor_u32_x
sveor_u32_z
sveor_u64_m
sveor_u64_x
sveor_u64_z
sveor_u8_m
sveor_u8_x
sveor_u8_z
sveorbt_n_s16
sveorbt_n_s32
sveorbt_n_s64
sveorbt_n_s8
sveorbt_n_u16
sveorbt_n_u32
sveorbt_n_u64
sveorbt_n_u8
sveorbt_s16
sveorbt_s32
sveorbt_s64
sveorbt_s8
sveorbt_u16
sveorbt_u32
sveorbt_u64
sveorbt_u8
sveortb_n_s16
sveortb_n_s32
sveortb_n_s64
sveortb_n_s8
sveortb_n_u16
sveortb_n_u32
sveortb_n_u64
sveortb_n_u8
sveortb_s16
sveortb_s32
sveortb_s64
sveortb_s8
sveortb_u16
sveortb_u32
sveortb_u64
sveortb_u8
sveorv_s16
sveorv_s32
sveorv_s64
sveorv_s8
sveorv_u16
sveorv_u32
sveorv_u64
sveorv_u8
svexpa_f16
svexpa_f32
svexpa_f64
svext_bf16
svext_f16
svext_f32
svext_f64
svext_s16
svext_s32
svext_s64
svext_s8
svext_u16
svext_u32
svext_u64
svext_u8
svextb_s16_m
svextb_s16_x
svextb_s16_z
svextb_s32_m
svextb_s32_x
svextb_s32_z
svextb_s64_m
svextb_s64_x
svextb_s64_z
svextb_u16_m
svextb_u16_x
svextb_u16_z
svextb_u32_m
svextb_u32_x
svextb_u32_z
svextb_u64_m
svextb_u64_x
svextb_u64_z
svexth_s32_m
svexth_s32_x
svexth_s32_z
svexth_s64_m
svexth_s64_x
svexth_s64_z
svexth_u32_m
svexth_u32_x
svexth_u32_z
svexth_u64_m
svexth_u64_x
svexth_u64_z
svextw_s64_m
svextw_s64_x
svextw_s64_z
svextw_u64_m
svextw_u64_x
svextw_u64_z
svget2_bf16
svget2_f16
svget2_f32
svget2_f64
svget2_s16
svget2_s32
svget2_s64
svget2_s8
svget2_u16
svget2_u32
svget2_u64
svget2_u8
svget3_bf16
svget3_f16
svget3_f32
svget3_f64
svget3_s16
svget3_s32
svget3_s64
svget3_s8
svget3_u16
svget3_u32
svget3_u64
svget3_u8
svget4_bf16
svget4_f16
svget4_f32
svget4_f64
svget4_s16
svget4_s32
svget4_s64
svget4_s8
svget4_u16
svget4_u32
svget4_u64
svget4_u8
svhadd_n_s16_m
svhadd_n_s16_x
svhadd_n_s16_z
svhadd_n_s32_m
svhadd_n_s32_x
svhadd_n_s32_z
svhadd_n_s64_m
svhadd_n_s64_x
svhadd_n_s64_z
svhadd_n_s8_m
svhadd_n_s8_x
svhadd_n_s8_z
svhadd_n_u16_m
svhadd_n_u16_x
svhadd_n_u16_z
svhadd_n_u32_m
svhadd_n_u32_x
svhadd_n_u32_z
svhadd_n_u64_m
svhadd_n_u64_x
svhadd_n_u64_z
svhadd_n_u8_m
svhadd_n_u8_x
svhadd_n_u8_z
svhadd_s16_m
svhadd_s16_x
svhadd_s16_z
svhadd_s32_m
svhadd_s32_x
svhadd_s32_z
svhadd_s64_m
svhadd_s64_x
svhadd_s64_z
svhadd_s8_m
svhadd_s8_x
svhadd_s8_z
svhadd_u16_m
svhadd_u16_x
svhadd_u16_z
svhadd_u32_m
svhadd_u32_x
svhadd_u32_z
svhadd_u64_m
svhadd_u64_x
svhadd_u64_z
svhadd_u8_m
svhadd_u8_x
svhadd_u8_z
svhistcnt_s32_z
svhistcnt_s64_z
svhistcnt_u32_z
svhistcnt_u64_z
svhistseg_s8
svhistseg_u8
svhsub_n_s16_m
svhsub_n_s16_x
svhsub_n_s16_z
svhsub_n_s32_m
svhsub_n_s32_x
svhsub_n_s32_z
svhsub_n_s64_m
svhsub_n_s64_x
svhsub_n_s64_z
svhsub_n_s8_m
svhsub_n_s8_x
svhsub_n_s8_z
svhsub_n_u16_m
svhsub_n_u16_x
svhsub_n_u16_z
svhsub_n_u32_m
svhsub_n_u32_x
svhsub_n_u32_z
svhsub_n_u64_m
svhsub_n_u64_x
svhsub_n_u64_z
svhsub_n_u8_m
svhsub_n_u8_x
svhsub_n_u8_z
svhsub_s16_m
svhsub_s16_x
svhsub_s16_z
svhsub_s32_m
svhsub_s32_x
svhsub_s32_z
svhsub_s64_m
svhsub_s64_x
svhsub_s64_z
svhsub_s8_m
svhsub_s8_x
svhsub_s8_z
svhsub_u16_m
svhsub_u16_x
svhsub_u16_z
svhsub_u32_m
svhsub_u32_x
svhsub_u32_z
svhsub_u64_m
svhsub_u64_x
svhsub_u64_z
svhsub_u8_m
svhsub_u8_x
svhsub_u8_z
svhsubr_n_s16_m
svhsubr_n_s16_x
svhsubr_n_s16_z
svhsubr_n_s32_m
svhsubr_n_s32_x
svhsubr_n_s32_z
svhsubr_n_s64_m
svhsubr_n_s64_x
svhsubr_n_s64_z
svhsubr_n_s8_m
svhsubr_n_s8_x
svhsubr_n_s8_z
svhsubr_n_u16_m
svhsubr_n_u16_x
svhsubr_n_u16_z
svhsubr_n_u32_m
svhsubr_n_u32_x
svhsubr_n_u32_z
svhsubr_n_u64_m
svhsubr_n_u64_x
svhsubr_n_u64_z
svhsubr_n_u8_m
svhsubr_n_u8_x
svhsubr_n_u8_z
svhsubr_s16_m
svhsubr_s16_x
svhsubr_s16_z
svhsubr_s32_m
svhsubr_s32_x
svhsubr_s32_z
svhsubr_s64_m
svhsubr_s64_x
svhsubr_s64_z
svhsubr_s8_m
svhsubr_s8_x
svhsubr_s8_z
svhsubr_u16_m
svhsubr_u16_x
svhsubr_u16_z
svhsubr_u32_m
svhsubr_u32_x
svhsubr_u32_z
svhsubr_u64_m
svhsubr_u64_x
svhsubr_u64_z
svhsubr_u8_m
svhsubr_u8_x
svhsubr_u8_z
svindex_s16
svindex_s32
svindex_s64
svindex_s8
svindex_u16
svindex_u32
svindex_u64
svindex_u8
svinsr_n_bf16
svinsr_n_f16
svinsr_n_f32
svinsr_n_f64
svinsr_n_s16
svinsr_n_s32
svinsr_n_s64
svinsr_n_s8
svinsr_n_u16
svinsr_n_u32
svinsr_n_u64
svinsr_n_u8
svlasta_bf16
svlasta_f16
svlasta_f32
svlasta_f64
svlasta_s16
svlasta_s32
svlasta_s64
svlasta_s8
svlasta_u16
svlasta_u32
svlasta_u64
svlasta_u8
svlastb_bf16
svlastb_f16
svlastb_f32
svlastb_f64
svlastb_s16
svlastb_s32
svlastb_s64
svlastb_s8
svlastb_u16
svlastb_u32
svlastb_u64
svlastb_u8
svld1_bf16
svld1_f16
svld1_f32
svld1_f64
svld1_gather_s32index_f32
svld1_gather_s32index_s32
svld1_gather_s32index_u32
svld1_gather_s32offset_f32
svld1_gather_s32offset_s32
svld1_gather_s32offset_u32
svld1_gather_s64index_f64
svld1_gather_s64index_s64
svld1_gather_s64index_u64
svld1_gather_s64offset_f64
svld1_gather_s64offset_s64
svld1_gather_s64offset_u64
svld1_gather_u32base_f32
svld1_gather_u32base_index_f32
svld1_gather_u32base_index_s32
svld1_gather_u32base_index_u32
svld1_gather_u32base_offset_f32
svld1_gather_u32base_offset_s32
svld1_gather_u32base_offset_u32
svld1_gather_u32base_s32
svld1_gather_u32base_u32
svld1_gather_u32index_f32
svld1_gather_u32index_s32
svld1_gather_u32index_u32
svld1_gather_u32offset_f32
svld1_gather_u32offset_s32
svld1_gather_u32offset_u32
svld1_gather_u64base_f64
svld1_gather_u64base_index_f64
svld1_gather_u64base_index_s64
svld1_gather_u64base_index_u64
svld1_gather_u64base_offset_f64
svld1_gather_u64base_offset_s64
svld1_gather_u64base_offset_u64
svld1_gather_u64base_s64
svld1_gather_u64base_u64
svld1_gather_u64index_f64
svld1_gather_u64index_s64
svld1_gather_u64index_u64
svld1_gather_u64offset_f64
svld1_gather_u64offset_s64
svld1_gather_u64offset_u64
svld1_s16
svld1_s32
svld1_s64
svld1_s8
svld1_u16
svld1_u32
svld1_u64
svld1_u8
svld1_vnum_bf16
svld1_vnum_f16
svld1_vnum_f32
svld1_vnum_f64
svld1_vnum_s16
svld1_vnum_s32
svld1_vnum_s64
svld1_vnum_s8
svld1_vnum_u16
svld1_vnum_u32
svld1_vnum_u64
svld1_vnum_u8
svld1ro_bf16
svld1ro_f16
svld1ro_f32
svld1ro_f64
svld1ro_s16
svld1ro_s32
svld1ro_s64
svld1ro_s8
svld1ro_u16
svld1ro_u32
svld1ro_u64
svld1ro_u8
svld1rq_bf16
svld1rq_f16
svld1rq_f32
svld1rq_f64
svld1rq_s16
svld1rq_s32
svld1rq_s64
svld1rq_s8
svld1rq_u16
svld1rq_u32
svld1rq_u64
svld1rq_u8
svld1sb_gather_s32offset_s32
svld1sb_gather_s32offset_u32
svld1sb_gather_s64offset_s64
svld1sb_gather_s64offset_u64
svld1sb_gather_u32base_offset_s32
svld1sb_gather_u32base_offset_u32
svld1sb_gather_u32base_s32
svld1sb_gather_u32base_u32
svld1sb_gather_u32offset_s32
svld1sb_gather_u32offset_u32
svld1sb_gather_u64base_offset_s64
svld1sb_gather_u64base_offset_u64
svld1sb_gather_u64base_s64
svld1sb_gather_u64base_u64
svld1sb_gather_u64offset_s64
svld1sb_gather_u64offset_u64
svld1sb_s16
svld1sb_s32
svld1sb_s64
svld1sb_u16
svld1sb_u32
svld1sb_u64
svld1sb_vnum_s16
svld1sb_vnum_s32
svld1sb_vnum_s64
svld1sb_vnum_u16
svld1sb_vnum_u32
svld1sb_vnum_u64
svld1sh_gather_s32index_s32
svld1sh_gather_s32index_u32
svld1sh_gather_s32offset_s32
svld1sh_gather_s32offset_u32
svld1sh_gather_s64index_s64
svld1sh_gather_s64index_u64
svld1sh_gather_s64offset_s64
svld1sh_gather_s64offset_u64
svld1sh_gather_u32base_index_s32
svld1sh_gather_u32base_index_u32
svld1sh_gather_u32base_offset_s32
svld1sh_gather_u32base_offset_u32
svld1sh_gather_u32base_s32
svld1sh_gather_u32base_u32
svld1sh_gather_u32index_s32
svld1sh_gather_u32index_u32
svld1sh_gather_u32offset_s32
svld1sh_gather_u32offset_u32
svld1sh_gather_u64base_index_s64
svld1sh_gather_u64base_index_u64
svld1sh_gather_u64base_offset_s64
svld1sh_gather_u64base_offset_u64
svld1sh_gather_u64base_s64
svld1sh_gather_u64base_u64
svld1sh_gather_u64index_s64
svld1sh_gather_u64index_u64
svld1sh_gather_u64offset_s64
svld1sh_gather_u64offset_u64
svld1sh_s32
svld1sh_s64
svld1sh_u32
svld1sh_u64
svld1sh_vnum_s32
svld1sh_vnum_s64
svld1sh_vnum_u32
svld1sh_vnum_u64
svld1sw_gather_s64index_s64
svld1sw_gather_s64index_u64
svld1sw_gather_s64offset_s64
svld1sw_gather_s64offset_u64
svld1sw_gather_u64base_index_s64
svld1sw_gather_u64base_index_u64
svld1sw_gather_u64base_offset_s64
svld1sw_gather_u64base_offset_u64
svld1sw_gather_u64base_s64
svld1sw_gather_u64base_u64
svld1sw_gather_u64index_s64
svld1sw_gather_u64index_u64
svld1sw_gather_u64offset_s64
svld1sw_gather_u64offset_u64
svld1sw_s64
svld1sw_u64
svld1sw_vnum_s64
svld1sw_vnum_u64
svld1ub_gather_s32offset_s32
svld1ub_gather_s32offset_u32
svld1ub_gather_s64offset_s64
svld1ub_gather_s64offset_u64
svld1ub_gather_u32base_offset_s32
svld1ub_gather_u32base_offset_u32
svld1ub_gather_u32base_s32
svld1ub_gather_u32base_u32
svld1ub_gather_u32offset_s32
svld1ub_gather_u32offset_u32
svld1ub_gather_u64base_offset_s64
svld1ub_gather_u64base_offset_u64
svld1ub_gather_u64base_s64
svld1ub_gather_u64base_u64
svld1ub_gather_u64offset_s64
svld1ub_gather_u64offset_u64
svld1ub_s16
svld1ub_s32
svld1ub_s64
svld1ub_u16
svld1ub_u32
svld1ub_u64
svld1ub_vnum_s16
svld1ub_vnum_s32
svld1ub_vnum_s64
svld1ub_vnum_u16
svld1ub_vnum_u32
svld1ub_vnum_u64
svld1uh_gather_s32index_s32
svld1uh_gather_s32index_u32
svld1uh_gather_s32offset_s32
svld1uh_gather_s32offset_u32
svld1uh_gather_s64index_s64
svld1uh_gather_s64index_u64
svld1uh_gather_s64offset_s64
svld1uh_gather_s64offset_u64
svld1uh_gather_u32base_index_s32
svld1uh_gather_u32base_index_u32
svld1uh_gather_u32base_offset_s32
svld1uh_gather_u32base_offset_u32
svld1uh_gather_u32base_s32
svld1uh_gather_u32base_u32
svld1uh_gather_u32index_s32
svld1uh_gather_u32index_u32
svld1uh_gather_u32offset_s32
svld1uh_gather_u32offset_u32
svld1uh_gather_u64base_index_s64
svld1uh_gather_u64base_index_u64
svld1uh_gather_u64base_offset_s64
svld1uh_gather_u64base_offset_u64
svld1uh_gather_u64base_s64
svld1uh_gather_u64base_u64
svld1uh_gather_u64index_s64
svld1uh_gather_u64index_u64
svld1uh_gather_u64offset_s64
svld1uh_gather_u64offset_u64
svld1uh_s32
svld1uh_s64
svld1uh_u32
svld1uh_u64
svld1uh_vnum_s32
svld1uh_vnum_s64
svld1uh_vnum_u32
svld1uh_vnum_u64
svld1uw_gather_s64index_s64
svld1uw_gather_s64index_u64
svld1uw_gather_s64offset_s64
svld1uw_gather_s64offset_u64
svld1uw_gather_u64base_index_s64
svld1uw_gather_u64base_index_u64
svld1uw_gather_u64base_offset_s64
svld1uw_gather_u64base_offset_u64
svld1uw_gather_u64base_s64
svld1uw_gather_u64base_u64
svld1uw_gather_u64index_s64
svld1uw_gather_u64index_u64
svld1uw_gather_u64offset_s64
svld1uw_gather_u64offset_u64
svld1uw_s64
svld1uw_u64
svld1uw_vnum_s64
svld1uw_vnum_u64
svld2_bf16
svld2_f16
svld2_f32
svld2_f64
svld2_s16
svld2_s32
svld2_s64
svld2_s8
svld2_u16
svld2_u32
svld2_u64
svld2_u8
svld2_vnum_bf16
svld2_vnum_f16
svld2_vnum_f32
svld2_vnum_f64
svld2_vnum_s16
svld2_vnum_s32
svld2_vnum_s64
svld2_vnum_s8
svld2_vnum_u16
svld2_vnum_u32
svld2_vnum_u64
svld2_vnum_u8
svld3_bf16
svld3_f16
svld3_f32
svld3_f64
svld3_s16
svld3_s32
svld3_s64
svld3_s8
svld3_u16
svld3_u32
svld3_u64
svld3_u8
svld3_vnum_bf16
svld3_vnum_f16
svld3_vnum_f32
svld3_vnum_f64
svld3_vnum_s16
svld3_vnum_s32
svld3_vnum_s64
svld3_vnum_s8
svld3_vnum_u16
svld3_vnum_u32
svld3_vnum_u64
svld3_vnum_u8
svld4_bf16
svld4_f16
svld4_f32
svld4_f64
svld4_s16
svld4_s32
svld4_s64
svld4_s8
svld4_u16
svld4_u32
svld4_u64
svld4_u8
svld4_vnum_bf16
svld4_vnum_f16
svld4_vnum_f32
svld4_vnum_f64
svld4_vnum_s16
svld4_vnum_s32
svld4_vnum_s64
svld4_vnum_s8
svld4_vnum_u16
svld4_vnum_u32
svld4_vnum_u64
svld4_vnum_u8
svldff1_bf16
svldff1_f16
svldff1_f32
svldff1_f64
svldff1_gather_s32index_f32
svldff1_gather_s32index_s32
svldff1_gather_s32index_u32
svldff1_gather_s32offset_f32
svldff1_gather_s32offset_s32
svldff1_gather_s32offset_u32
svldff1_gather_s64index_f64
svldff1_gather_s64index_s64
svldff1_gather_s64index_u64
svldff1_gather_s64offset_f64
svldff1_gather_s64offset_s64
svldff1_gather_s64offset_u64
svldff1_gather_u32base_f32
svldff1_gather_u32base_index_f32
svldff1_gather_u32base_index_s32
svldff1_gather_u32base_index_u32
svldff1_gather_u32base_offset_f32
svldff1_gather_u32base_offset_s32
svldff1_gather_u32base_offset_u32
svldff1_gather_u32base_s32
svldff1_gather_u32base_u32
svldff1_gather_u32index_f32
svldff1_gather_u32index_s32
svldff1_gather_u32index_u32
svldff1_gather_u32offset_f32
svldff1_gather_u32offset_s32
svldff1_gather_u32offset_u32
svldff1_gather_u64base_f64
svldff1_gather_u64base_index_f64
svldff1_gather_u64base_index_s64
svldff1_gather_u64base_index_u64
svldff1_gather_u64base_offset_f64
svldff1_gather_u64base_offset_s64
svldff1_gather_u64base_offset_u64
svldff1_gather_u64base_s64
svldff1_gather_u64base_u64
svldff1_gather_u64index_f64
svldff1_gather_u64index_s64
svldff1_gather_u64index_u64
svldff1_gather_u64offset_f64
svldff1_gather_u64offset_s64
svldff1_gather_u64offset_u64
svldff1_s16
svldff1_s32
svldff1_s64
svldff1_s8
svldff1_u16
svldff1_u32
svldff1_u64
svldff1_u8
svldff1_vnum_bf16
svldff1_vnum_f16
svldff1_vnum_f32
svldff1_vnum_f64
svldff1_vnum_s16
svldff1_vnum_s32
svldff1_vnum_s64
svldff1_vnum_s8
svldff1_vnum_u16
svldff1_vnum_u32
svldff1_vnum_u64
svldff1_vnum_u8
svldff1sb_gather_s32offset_s32
svldff1sb_gather_s32offset_u32
svldff1sb_gather_s64offset_s64
svldff1sb_gather_s64offset_u64
svldff1sb_gather_u32base_offset_s32
svldff1sb_gather_u32base_offset_u32
svldff1sb_gather_u32base_s32
svldff1sb_gather_u32base_u32
svldff1sb_gather_u32offset_s32
svldff1sb_gather_u32offset_u32
svldff1sb_gather_u64base_offset_s64
svldff1sb_gather_u64base_offset_u64
svldff1sb_gather_u64base_s64
svldff1sb_gather_u64base_u64
svldff1sb_gather_u64offset_s64
svldff1sb_gather_u64offset_u64
svldff1sb_s16
svldff1sb_s32
svldff1sb_s64
svldff1sb_u16
svldff1sb_u32
svldff1sb_u64
svldff1sb_vnum_s16
svldff1sb_vnum_s32
svldff1sb_vnum_s64
svldff1sb_vnum_u16
svldff1sb_vnum_u32
svldff1sb_vnum_u64
svldff1sh_gather_s32index_s32
svldff1sh_gather_s32index_u32
svldff1sh_gather_s32offset_s32
svldff1sh_gather_s32offset_u32
svldff1sh_gather_s64index_s64
svldff1sh_gather_s64index_u64
svldff1sh_gather_s64offset_s64
svldff1sh_gather_s64offset_u64
svldff1sh_gather_u32base_index_s32
svldff1sh_gather_u32base_index_u32
svldff1sh_gather_u32base_offset_s32
svldff1sh_gather_u32base_offset_u32
svldff1sh_gather_u32base_s32
svldff1sh_gather_u32base_u32
svldff1sh_gather_u32index_s32
svldff1sh_gather_u32index_u32
svldff1sh_gather_u32offset_s32
svldff1sh_gather_u32offset_u32
svldff1sh_gather_u64base_index_s64
svldff1sh_gather_u64base_index_u64
svldff1sh_gather_u64base_offset_s64
svldff1sh_gather_u64base_offset_u64
svldff1sh_gather_u64base_s64
svldff1sh_gather_u64base_u64
svldff1sh_gather_u64index_s64
svldff1sh_gather_u64index_u64
svldff1sh_gather_u64offset_s64
svldff1sh_gather_u64offset_u64
svldff1sh_s32
svldff1sh_s64
svldff1sh_u32
svldff1sh_u64
svldff1sh_vnum_s32
svldff1sh_vnum_s64
svldff1sh_vnum_u32
svldff1sh_vnum_u64
svldff1sw_gather_s64index_s64
svldff1sw_gather_s64index_u64
svldff1sw_gather_s64offset_s64
svldff1sw_gather_s64offset_u64
svldff1sw_gather_u64base_index_s64
svldff1sw_gather_u64base_index_u64
svldff1sw_gather_u64base_offset_s64
svldff1sw_gather_u64base_offset_u64
svldff1sw_gather_u64base_s64
svldff1sw_gather_u64base_u64
svldff1sw_gather_u64index_s64
svldff1sw_gather_u64index_u64
svldff1sw_gather_u64offset_s64
svldff1sw_gather_u64offset_u64
svldff1sw_s64
svldff1sw_u64
svldff1sw_vnum_s64
svldff1sw_vnum_u64
svldff1ub_gather_s32offset_s32
svldff1ub_gather_s32offset_u32
svldff1ub_gather_s64offset_s64
svldff1ub_gather_s64offset_u64
svldff1ub_gather_u32base_offset_s32
svldff1ub_gather_u32base_offset_u32
svldff1ub_gather_u32base_s32
svldff1ub_gather_u32base_u32
svldff1ub_gather_u32offset_s32
svldff1ub_gather_u32offset_u32
svldff1ub_gather_u64base_offset_s64
svldff1ub_gather_u64base_offset_u64
svldff1ub_gather_u64base_s64
svldff1ub_gather_u64base_u64
svldff1ub_gather_u64offset_s64
svldff1ub_gather_u64offset_u64
svldff1ub_s16
svldff1ub_s32
svldff1ub_s64
svldff1ub_u16
svldff1ub_u32
svldff1ub_u64
svldff1ub_vnum_s16
svldff1ub_vnum_s32
svldff1ub_vnum_s64
svldff1ub_vnum_u16
svldff1ub_vnum_u32
svldff1ub_vnum_u64
svldff1uh_gather_s32index_s32
svldff1uh_gather_s32index_u32
svldff1uh_gather_s32offset_s32
svldff1uh_gather_s32offset_u32
svldff1uh_gather_s64index_s64
svldff1uh_gather_s64index_u64
svldff1uh_gather_s64offset_s64
svldff1uh_gather_s64offset_u64
svldff1uh_gather_u32base_index_s32
svldff1uh_gather_u32base_index_u32
svldff1uh_gather_u32base_offset_s32
svldff1uh_gather_u32base_offset_u32
svldff1uh_gather_u32base_s32
svldff1uh_gather_u32base_u32
svldff1uh_gather_u32index_s32
svldff1uh_gather_u32index_u32
svldff1uh_gather_u32offset_s32
svldff1uh_gather_u32offset_u32
svldff1uh_gather_u64base_index_s64
svldff1uh_gather_u64base_index_u64
svldff1uh_gather_u64base_offset_s64
svldff1uh_gather_u64base_offset_u64
svldff1uh_gather_u64base_s64
svldff1uh_gather_u64base_u64
svldff1uh_gather_u64index_s64
svldff1uh_gather_u64index_u64
svldff1uh_gather_u64offset_s64
svldff1uh_gather_u64offset_u64
svldff1uh_s32
svldff1uh_s64
svldff1uh_u32
svldff1uh_u64
svldff1uh_vnum_s32
svldff1uh_vnum_s64
svldff1uh_vnum_u32
svldff1uh_vnum_u64
svldff1uw_gather_s64index_s64
svldff1uw_gather_s64index_u64
svldff1uw_gather_s64offset_s64
svldff1uw_gather_s64offset_u64
svldff1uw_gather_u64base_index_s64
svldff1uw_gather_u64base_index_u64
svldff1uw_gather_u64base_offset_s64
svldff1uw_gather_u64base_offset_u64
svldff1uw_gather_u64base_s64
svldff1uw_gather_u64base_u64
svldff1uw_gather_u64index_s64
svldff1uw_gather_u64index_u64
svldff1uw_gather_u64offset_s64
svldff1uw_gather_u64offset_u64
svldff1uw_s64
svldff1uw_u64
svldff1uw_vnum_s64
svldff1uw_vnum_u64
svldnf1_bf16
svldnf1_f16
svldnf1_f32
svldnf1_f64
svldnf1_s16
svldnf1_s32
svldnf1_s64
svldnf1_s8
svldnf1_u16
svldnf1_u32
svldnf1_u64
svldnf1_u8
svldnf1_vnum_bf16
svldnf1_vnum_f16
svldnf1_vnum_f32
svldnf1_vnum_f64
svldnf1_vnum_s16
svldnf1_vnum_s32
svldnf1_vnum_s64
svldnf1_vnum_s8
svldnf1_vnum_u16
svldnf1_vnum_u32
svldnf1_vnum_u64
svldnf1_vnum_u8
svldnf1sb_s16
svldnf1sb_s32
svldnf1sb_s64
svldnf1sb_u16
svldnf1sb_u32
svldnf1sb_u64
svldnf1sb_vnum_s16
svldnf1sb_vnum_s32
svldnf1sb_vnum_s64
svldnf1sb_vnum_u16
svldnf1sb_vnum_u32
svldnf1sb_vnum_u64
svldnf1sh_s32
svldnf1sh_s64
svldnf1sh_u32
svldnf1sh_u64
svldnf1sh_vnum_s32
svldnf1sh_vnum_s64
svldnf1sh_vnum_u32
svldnf1sh_vnum_u64
svldnf1sw_s64
svldnf1sw_u64
svldnf1sw_vnum_s64
svldnf1sw_vnum_u64
svldnf1ub_s16
svldnf1ub_s32
svldnf1ub_s64
svldnf1ub_u16
svldnf1ub_u32
svldnf1ub_u64
svldnf1ub_vnum_s16
svldnf1ub_vnum_s32
svldnf1ub_vnum_s64
svldnf1ub_vnum_u16
svldnf1ub_vnum_u32
svldnf1ub_vnum_u64
svldnf1uh_s32
svldnf1uh_s64
svldnf1uh_u32
svldnf1uh_u64
svldnf1uh_vnum_s32
svldnf1uh_vnum_s64
svldnf1uh_vnum_u32
svldnf1uh_vnum_u64
svldnf1uw_s64
svldnf1uw_u64
svldnf1uw_vnum_s64
svldnf1uw_vnum_u64
svldnt1_bf16
svldnt1_f16
svldnt1_f32
svldnt1_f64
svldnt1_gather_s64index_f64
svldnt1_gather_s64index_s64
svldnt1_gather_s64index_u64
svldnt1_gather_s64offset_f64
svldnt1_gather_s64offset_s64
svldnt1_gather_s64offset_u64
svldnt1_gather_u32base_f32
svldnt1_gather_u32base_index_f32
svldnt1_gather_u32base_index_s32
svldnt1_gather_u32base_index_u32
svldnt1_gather_u32base_offset_f32
svldnt1_gather_u32base_offset_s32
svldnt1_gather_u32base_offset_u32
svldnt1_gather_u32base_s32
svldnt1_gather_u32base_u32
svldnt1_gather_u32offset_f32
svldnt1_gather_u32offset_s32
svldnt1_gather_u32offset_u32
svldnt1_gather_u64base_f64
svldnt1_gather_u64base_index_f64
svldnt1_gather_u64base_index_s64
svldnt1_gather_u64base_index_u64
svldnt1_gather_u64base_offset_f64
svldnt1_gather_u64base_offset_s64
svldnt1_gather_u64base_offset_u64
svldnt1_gather_u64base_s64
svldnt1_gather_u64base_u64
svldnt1_gather_u64index_f64
svldnt1_gather_u64index_s64
svldnt1_gather_u64index_u64
svldnt1_gather_u64offset_f64
svldnt1_gather_u64offset_s64
svldnt1_gather_u64offset_u64
svldnt1_s16
svldnt1_s32
svldnt1_s64
svldnt1_s8
svldnt1_u16
svldnt1_u32
svldnt1_u64
svldnt1_u8
svldnt1_vnum_bf16
svldnt1_vnum_f16
svldnt1_vnum_f32
svldnt1_vnum_f64
svldnt1_vnum_s16
svldnt1_vnum_s32
svldnt1_vnum_s64
svldnt1_vnum_s8
svldnt1_vnum_u16
svldnt1_vnum_u32
svldnt1_vnum_u64
svldnt1_vnum_u8
svldnt1sb_gather_s64offset_s64
svldnt1sb_gather_s64offset_u64
svldnt1sb_gather_u32base_offset_s32
svldnt1sb_gather_u32base_offset_u32
svldnt1sb_gather_u32base_s32
svldnt1sb_gather_u32base_u32
svldnt1sb_gather_u32offset_s32
svldnt1sb_gather_u32offset_u32
svldnt1sb_gather_u64base_offset_s64
svldnt1sb_gather_u64base_offset_u64
svldnt1sb_gather_u64base_s64
svldnt1sb_gather_u64base_u64
svldnt1sb_gather_u64offset_s64
svldnt1sb_gather_u64offset_u64
svldnt1sh_gather_s64index_s64
svldnt1sh_gather_s64index_u64
svldnt1sh_gather_s64offset_s64
svldnt1sh_gather_s64offset_u64
svldnt1sh_gather_u32base_index_s32
svldnt1sh_gather_u32base_index_u32
svldnt1sh_gather_u32base_offset_s32
svldnt1sh_gather_u32base_offset_u32
svldnt1sh_gather_u32base_s32
svldnt1sh_gather_u32base_u32
svldnt1sh_gather_u32offset_s32
svldnt1sh_gather_u32offset_u32
svldnt1sh_gather_u64base_index_s64
svldnt1sh_gather_u64base_index_u64
svldnt1sh_gather_u64base_offset_s64
svldnt1sh_gather_u64base_offset_u64
svldnt1sh_gather_u64base_s64
svldnt1sh_gather_u64base_u64
svldnt1sh_gather_u64index_s64
svldnt1sh_gather_u64index_u64
svldnt1sh_gather_u64offset_s64
svldnt1sh_gather_u64offset_u64
svldnt1sw_gather_s64index_s64
svldnt1sw_gather_s64index_u64
svldnt1sw_gather_s64offset_s64
svldnt1sw_gather_s64offset_u64
svldnt1sw_gather_u64base_index_s64
svldnt1sw_gather_u64base_index_u64
svldnt1sw_gather_u64base_offset_s64
svldnt1sw_gather_u64base_offset_u64
svldnt1sw_gather_u64base_s64
svldnt1sw_gather_u64base_u64
svldnt1sw_gather_u64index_s64
svldnt1sw_gather_u64index_u64
svldnt1sw_gather_u64offset_s64
svldnt1sw_gather_u64offset_u64
svldnt1ub_gather_s64offset_s64
svldnt1ub_gather_s64offset_u64
svldnt1ub_gather_u32base_offset_s32
svldnt1ub_gather_u32base_offset_u32
svldnt1ub_gather_u32base_s32
svldnt1ub_gather_u32base_u32
svldnt1ub_gather_u32offset_s32
svldnt1ub_gather_u32offset_u32
svldnt1ub_gather_u64base_offset_s64
svldnt1ub_gather_u64base_offset_u64
svldnt1ub_gather_u64base_s64
svldnt1ub_gather_u64base_u64
svldnt1ub_gather_u64offset_s64
svldnt1ub_gather_u64offset_u64
svldnt1uh_gather_s64index_s64
svldnt1uh_gather_s64index_u64
svldnt1uh_gather_s64offset_s64
svldnt1uh_gather_s64offset_u64
svldnt1uh_gather_u32base_index_s32
svldnt1uh_gather_u32base_index_u32
svldnt1uh_gather_u32base_offset_s32
svldnt1uh_gather_u32base_offset_u32
svldnt1uh_gather_u32base_s32
svldnt1uh_gather_u32base_u32
svldnt1uh_gather_u32offset_s32
svldnt1uh_gather_u32offset_u32
svldnt1uh_gather_u64base_index_s64
svldnt1uh_gather_u64base_index_u64
svldnt1uh_gather_u64base_offset_s64
svldnt1uh_gather_u64base_offset_u64
svldnt1uh_gather_u64base_s64
svldnt1uh_gather_u64base_u64
svldnt1uh_gather_u64index_s64
svldnt1uh_gather_u64index_u64
svldnt1uh_gather_u64offset_s64
svldnt1uh_gather_u64offset_u64
svldnt1uw_gather_s64index_s64
svldnt1uw_gather_s64index_u64
svldnt1uw_gather_s64offset_s64
svldnt1uw_gather_s64offset_u64
svldnt1uw_gather_u64base_index_s64
svldnt1uw_gather_u64base_index_u64
svldnt1uw_gather_u64base_offset_s64
svldnt1uw_gather_u64base_offset_u64
svldnt1uw_gather_u64base_s64
svldnt1uw_gather_u64base_u64
svldnt1uw_gather_u64index_s64
svldnt1uw_gather_u64index_u64
svldnt1uw_gather_u64offset_s64
svldnt1uw_gather_u64offset_u64
svlen_bf16
svlen_f16
svlen_f32
svlen_f64
svlen_s16
svlen_s32
svlen_s64
svlen_s8
svlen_u16
svlen_u32
svlen_u64
svlen_u8
svlogb_f16_m
svlogb_f16_x
svlogb_f16_z
svlogb_f32_m
svlogb_f32_x
svlogb_f32_z
svlogb_f64_m
svlogb_f64_x
svlogb_f64_z
svlsl_n_s16_m
svlsl_n_s16_x
svlsl_n_s16_z
svlsl_n_s32_m
svlsl_n_s32_x
svlsl_n_s32_z
svlsl_n_s64_m
svlsl_n_s64_x
svlsl_n_s64_z
svlsl_n_s8_m
svlsl_n_s8_x
svlsl_n_s8_z
svlsl_n_u16_m
svlsl_n_u16_x
svlsl_n_u16_z
svlsl_n_u32_m
svlsl_n_u32_x
svlsl_n_u32_z
svlsl_n_u64_m
svlsl_n_u64_x
svlsl_n_u64_z
svlsl_n_u8_m
svlsl_n_u8_x
svlsl_n_u8_z
svlsl_s16_m
svlsl_s16_x
svlsl_s16_z
svlsl_s32_m
svlsl_s32_x
svlsl_s32_z
svlsl_s64_m
svlsl_s64_x
svlsl_s64_z
svlsl_s8_m
svlsl_s8_x
svlsl_s8_z
svlsl_u16_m
svlsl_u16_x
svlsl_u16_z
svlsl_u32_m
svlsl_u32_x
svlsl_u32_z
svlsl_u64_m
svlsl_u64_x
svlsl_u64_z
svlsl_u8_m
svlsl_u8_x
svlsl_u8_z
svlsl_wide_n_s16_m
svlsl_wide_n_s16_x
svlsl_wide_n_s16_z
svlsl_wide_n_s32_m
svlsl_wide_n_s32_x
svlsl_wide_n_s32_z
svlsl_wide_n_s8_m
svlsl_wide_n_s8_x
svlsl_wide_n_s8_z
svlsl_wide_n_u16_m
svlsl_wide_n_u16_x
svlsl_wide_n_u16_z
svlsl_wide_n_u32_m
svlsl_wide_n_u32_x
svlsl_wide_n_u32_z
svlsl_wide_n_u8_m
svlsl_wide_n_u8_x
svlsl_wide_n_u8_z
svlsl_wide_s16_m
svlsl_wide_s16_x
svlsl_wide_s16_z
svlsl_wide_s32_m
svlsl_wide_s32_x
svlsl_wide_s32_z
svlsl_wide_s8_m
svlsl_wide_s8_x
svlsl_wide_s8_z
svlsl_wide_u16_m
svlsl_wide_u16_x
svlsl_wide_u16_z
svlsl_wide_u32_m
svlsl_wide_u32_x
svlsl_wide_u32_z
svlsl_wide_u8_m
svlsl_wide_u8_x
svlsl_wide_u8_z
svlsr_n_u16_m
svlsr_n_u16_x
svlsr_n_u16_z
svlsr_n_u32_m
svlsr_n_u32_x
svlsr_n_u32_z
svlsr_n_u64_m
svlsr_n_u64_x
svlsr_n_u64_z
svlsr_n_u8_m
svlsr_n_u8_x
svlsr_n_u8_z
svlsr_u16_m
svlsr_u16_x
svlsr_u16_z
svlsr_u32_m
svlsr_u32_x
svlsr_u32_z
svlsr_u64_m
svlsr_u64_x
svlsr_u64_z
svlsr_u8_m
svlsr_u8_x
svlsr_u8_z
svlsr_wide_n_u16_m
svlsr_wide_n_u16_x
svlsr_wide_n_u16_z
svlsr_wide_n_u32_m
svlsr_wide_n_u32_x
svlsr_wide_n_u32_z
svlsr_wide_n_u8_m
svlsr_wide_n_u8_x
svlsr_wide_n_u8_z
svlsr_wide_u16_m
svlsr_wide_u16_x
svlsr_wide_u16_z
svlsr_wide_u32_m
svlsr_wide_u32_x
svlsr_wide_u32_z
svlsr_wide_u8_m
svlsr_wide_u8_x
svlsr_wide_u8_z
svmad_f16_m
svmad_f16_x
svmad_f16_z
svmad_f32_m
svmad_f32_x
svmad_f32_z
svmad_f64_m
svmad_f64_x
svmad_f64_z
svmad_n_f16_m
svmad_n_f16_x
svmad_n_f16_z
svmad_n_f32_m
svmad_n_f32_x
svmad_n_f32_z
svmad_n_f64_m
svmad_n_f64_x
svmad_n_f64_z
svmad_n_s16_m
svmad_n_s16_x
svmad_n_s16_z
svmad_n_s32_m
svmad_n_s32_x
svmad_n_s32_z
svmad_n_s64_m
svmad_n_s64_x
svmad_n_s64_z
svmad_n_s8_m
svmad_n_s8_x
svmad_n_s8_z
svmad_n_u16_m
svmad_n_u16_x
svmad_n_u16_z
svmad_n_u32_m
svmad_n_u32_x
svmad_n_u32_z
svmad_n_u64_m
svmad_n_u64_x
svmad_n_u64_z
svmad_n_u8_m
svmad_n_u8_x
svmad_n_u8_z
svmad_s16_m
svmad_s16_x
svmad_s16_z
svmad_s32_m
svmad_s32_x
svmad_s32_z
svmad_s64_m
svmad_s64_x
svmad_s64_z
svmad_s8_m
svmad_s8_x
svmad_s8_z
svmad_u16_m
svmad_u16_x
svmad_u16_z
svmad_u32_m
svmad_u32_x
svmad_u32_z
svmad_u64_m
svmad_u64_x
svmad_u64_z
svmad_u8_m
svmad_u8_x
svmad_u8_z
svmatch_s16
svmatch_s8
svmatch_u16
svmatch_u8
svmax_f16_m
svmax_f16_x
svmax_f16_z
svmax_f32_m
svmax_f32_x
svmax_f32_z
svmax_f64_m
svmax_f64_x
svmax_f64_z
svmax_n_f16_m
svmax_n_f16_x
svmax_n_f16_z
svmax_n_f32_m
svmax_n_f32_x
svmax_n_f32_z
svmax_n_f64_m
svmax_n_f64_x
svmax_n_f64_z
svmax_n_s16_m
svmax_n_s16_x
svmax_n_s16_z
svmax_n_s32_m
svmax_n_s32_x
svmax_n_s32_z
svmax_n_s64_m
svmax_n_s64_x
svmax_n_s64_z
svmax_n_s8_m
svmax_n_s8_x
svmax_n_s8_z
svmax_n_u16_m
svmax_n_u16_x
svmax_n_u16_z
svmax_n_u32_m
svmax_n_u32_x
svmax_n_u32_z
svmax_n_u64_m
svmax_n_u64_x
svmax_n_u64_z
svmax_n_u8_m
svmax_n_u8_x
svmax_n_u8_z
svmax_s16_m
svmax_s16_x
svmax_s16_z
svmax_s32_m
svmax_s32_x
svmax_s32_z
svmax_s64_m
svmax_s64_x
svmax_s64_z
svmax_s8_m
svmax_s8_x
svmax_s8_z
svmax_u16_m
svmax_u16_x
svmax_u16_z
svmax_u32_m
svmax_u32_x
svmax_u32_z
svmax_u64_m
svmax_u64_x
svmax_u64_z
svmax_u8_m
svmax_u8_x
svmax_u8_z
svmaxnm_f16_m
svmaxnm_f16_x
svmaxnm_f16_z
svmaxnm_f32_m
svmaxnm_f32_x
svmaxnm_f32_z
svmaxnm_f64_m
svmaxnm_f64_x
svmaxnm_f64_z
svmaxnm_n_f16_m
svmaxnm_n_f16_x
svmaxnm_n_f16_z
svmaxnm_n_f32_m
svmaxnm_n_f32_x
svmaxnm_n_f32_z
svmaxnm_n_f64_m
svmaxnm_n_f64_x
svmaxnm_n_f64_z
svmaxnmp_f16_m
svmaxnmp_f16_x
svmaxnmp_f32_m
svmaxnmp_f32_x
svmaxnmp_f64_m
svmaxnmp_f64_x
svmaxnmv_f16
svmaxnmv_f32
svmaxnmv_f64
svmaxp_f16_m
svmaxp_f16_x
svmaxp_f32_m
svmaxp_f32_x
svmaxp_f64_m
svmaxp_f64_x
svmaxp_s16_m
svmaxp_s16_x
svmaxp_s32_m
svmaxp_s32_x
svmaxp_s64_m
svmaxp_s64_x
svmaxp_s8_m
svmaxp_s8_x
svmaxp_u16_m
svmaxp_u16_x
svmaxp_u32_m
svmaxp_u32_x
svmaxp_u64_m
svmaxp_u64_x
svmaxp_u8_m
svmaxp_u8_x
svmaxv_f16
svmaxv_f32
svmaxv_f64
svmaxv_s16
svmaxv_s32
svmaxv_s64
svmaxv_s8
svmaxv_u16
svmaxv_u32
svmaxv_u64
svmaxv_u8
svmin_f16_m
svmin_f16_x
svmin_f16_z
svmin_f32_m
svmin_f32_x
svmin_f32_z
svmin_f64_m
svmin_f64_x
svmin_f64_z
svmin_n_f16_m
svmin_n_f16_x
svmin_n_f16_z
svmin_n_f32_m
svmin_n_f32_x
svmin_n_f32_z
svmin_n_f64_m
svmin_n_f64_x
svmin_n_f64_z
svmin_n_s16_m
svmin_n_s16_x
svmin_n_s16_z
svmin_n_s32_m
svmin_n_s32_x
svmin_n_s32_z
svmin_n_s64_m
svmin_n_s64_x
svmin_n_s64_z
svmin_n_s8_m
svmin_n_s8_x
svmin_n_s8_z
svmin_n_u16_m
svmin_n_u16_x
svmin_n_u16_z
svmin_n_u32_m
svmin_n_u32_x
svmin_n_u32_z
svmin_n_u64_m
svmin_n_u64_x
svmin_n_u64_z
svmin_n_u8_m
svmin_n_u8_x
svmin_n_u8_z
svmin_s16_m
svmin_s16_x
svmin_s16_z
svmin_s32_m
svmin_s32_x
svmin_s32_z
svmin_s64_m
svmin_s64_x
svmin_s64_z
svmin_s8_m
svmin_s8_x
svmin_s8_z
svmin_u16_m
svmin_u16_x
svmin_u16_z
svmin_u32_m
svmin_u32_x
svmin_u32_z
svmin_u64_m
svmin_u64_x
svmin_u64_z
svmin_u8_m
svmin_u8_x
svmin_u8_z
svminnm_f16_m
svminnm_f16_x
svminnm_f16_z
svminnm_f32_m
svminnm_f32_x
svminnm_f32_z
svminnm_f64_m
svminnm_f64_x
svminnm_f64_z
svminnm_n_f16_m
svminnm_n_f16_x
svminnm_n_f16_z
svminnm_n_f32_m
svminnm_n_f32_x
svminnm_n_f32_z
svminnm_n_f64_m
svminnm_n_f64_x
svminnm_n_f64_z
svminnmp_f16_m
svminnmp_f16_x
svminnmp_f32_m
svminnmp_f32_x
svminnmp_f64_m
svminnmp_f64_x
svminnmv_f16
svminnmv_f32
svminnmv_f64
svminp_f16_m
svminp_f16_x
svminp_f32_m
svminp_f32_x
svminp_f64_m
svminp_f64_x
svminp_s16_m
svminp_s16_x
svminp_s32_m
svminp_s32_x
svminp_s64_m
svminp_s64_x
svminp_s8_m
svminp_s8_x
svminp_u16_m
svminp_u16_x
svminp_u32_m
svminp_u32_x
svminp_u64_m
svminp_u64_x
svminp_u8_m
svminp_u8_x
svminv_f16
svminv_f32
svminv_f64
svminv_s16
svminv_s32
svminv_s64
svminv_s8
svminv_u16
svminv_u32
svminv_u64
svminv_u8
svmla_f16_m
svmla_f16_x
svmla_f16_z
svmla_f32_m
svmla_f32_x
svmla_f32_z
svmla_f64_m
svmla_f64_x
svmla_f64_z
svmla_lane_f16
svmla_lane_f32
svmla_lane_f64
svmla_lane_s16
svmla_lane_s32
svmla_lane_s64
svmla_lane_u16
svmla_lane_u32
svmla_lane_u64
svmla_n_f16_m
svmla_n_f16_x
svmla_n_f16_z
svmla_n_f32_m
svmla_n_f32_x
svmla_n_f32_z
svmla_n_f64_m
svmla_n_f64_x
svmla_n_f64_z
svmla_n_s16_m
svmla_n_s16_x
svmla_n_s16_z
svmla_n_s32_m
svmla_n_s32_x
svmla_n_s32_z
svmla_n_s64_m
svmla_n_s64_x
svmla_n_s64_z
svmla_n_s8_m
svmla_n_s8_x
svmla_n_s8_z
svmla_n_u16_m
svmla_n_u16_x
svmla_n_u16_z
svmla_n_u32_m
svmla_n_u32_x
svmla_n_u32_z
svmla_n_u64_m
svmla_n_u64_x
svmla_n_u64_z
svmla_n_u8_m
svmla_n_u8_x
svmla_n_u8_z
svmla_s16_m
svmla_s16_x
svmla_s16_z
svmla_s32_m
svmla_s32_x
svmla_s32_z
svmla_s64_m
svmla_s64_x
svmla_s64_z
svmla_s8_m
svmla_s8_x
svmla_s8_z
svmla_u16_m
svmla_u16_x
svmla_u16_z
svmla_u32_m
svmla_u32_x
svmla_u32_z
svmla_u64_m
svmla_u64_x
svmla_u64_z
svmla_u8_m
svmla_u8_x
svmla_u8_z
svmlalb_f32
svmlalb_lane_f32
svmlalb_lane_s32
svmlalb_lane_s64
svmlalb_lane_u32
svmlalb_lane_u64
svmlalb_n_f32
svmlalb_n_s16
svmlalb_n_s32
svmlalb_n_s64
svmlalb_n_u16
svmlalb_n_u32
svmlalb_n_u64
svmlalb_s16
svmlalb_s32
svmlalb_s64
svmlalb_u16
svmlalb_u32
svmlalb_u64
svmlalt_f32
svmlalt_lane_f32
svmlalt_lane_s32
svmlalt_lane_s64
svmlalt_lane_u32
svmlalt_lane_u64
svmlalt_n_f32
svmlalt_n_s16
svmlalt_n_s32
svmlalt_n_s64
svmlalt_n_u16
svmlalt_n_u32
svmlalt_n_u64
svmlalt_s16
svmlalt_s32
svmlalt_s64
svmlalt_u16
svmlalt_u32
svmlalt_u64
svmls_f16_m
svmls_f16_x
svmls_f16_z
svmls_f32_m
svmls_f32_x
svmls_f32_z
svmls_f64_m
svmls_f64_x
svmls_f64_z
svmls_lane_f16
svmls_lane_f32
svmls_lane_f64
svmls_lane_s16
svmls_lane_s32
svmls_lane_s64
svmls_lane_u16
svmls_lane_u32
svmls_lane_u64
svmls_n_f16_m
svmls_n_f16_x
svmls_n_f16_z
svmls_n_f32_m
svmls_n_f32_x
svmls_n_f32_z
svmls_n_f64_m
svmls_n_f64_x
svmls_n_f64_z
svmls_n_s16_m
svmls_n_s16_x
svmls_n_s16_z
svmls_n_s32_m
svmls_n_s32_x
svmls_n_s32_z
svmls_n_s64_m
svmls_n_s64_x
svmls_n_s64_z
svmls_n_s8_m
svmls_n_s8_x
svmls_n_s8_z
svmls_n_u16_m
svmls_n_u16_x
svmls_n_u16_z
svmls_n_u32_m
svmls_n_u32_x
svmls_n_u32_z
svmls_n_u64_m
svmls_n_u64_x
svmls_n_u64_z
svmls_n_u8_m
svmls_n_u8_x
svmls_n_u8_z
svmls_s16_m
svmls_s16_x
svmls_s16_z
svmls_s32_m
svmls_s32_x
svmls_s32_z
svmls_s64_m
svmls_s64_x
svmls_s64_z
svmls_s8_m
svmls_s8_x
svmls_s8_z
svmls_u16_m
svmls_u16_x
svmls_u16_z
svmls_u32_m
svmls_u32_x
svmls_u32_z
svmls_u64_m
svmls_u64_x
svmls_u64_z
svmls_u8_m
svmls_u8_x
svmls_u8_z
svmlslb_f32
svmlslb_lane_f32
svmlslb_lane_s32
svmlslb_lane_s64
svmlslb_lane_u32
svmlslb_lane_u64
svmlslb_n_f32
svmlslb_n_s16
svmlslb_n_s32
svmlslb_n_s64
svmlslb_n_u16
svmlslb_n_u32
svmlslb_n_u64
svmlslb_s16
svmlslb_s32
svmlslb_s64
svmlslb_u16
svmlslb_u32
svmlslb_u64
svmlslt_f32
svmlslt_lane_f32
svmlslt_lane_s32
svmlslt_lane_s64
svmlslt_lane_u32
svmlslt_lane_u64
svmlslt_n_f32
svmlslt_n_s16
svmlslt_n_s32
svmlslt_n_s64
svmlslt_n_u16
svmlslt_n_u32
svmlslt_n_u64
svmlslt_s16
svmlslt_s32
svmlslt_s64
svmlslt_u16
svmlslt_u32
svmlslt_u64
svmmla_f32
svmmla_f64
svmmla_s32
svmmla_u32
svmov_b_z
svmovlb_s16
svmovlb_s32
svmovlb_s64
svmovlb_u16
svmovlb_u32
svmovlb_u64
svmovlt_s16
svmovlt_s32
svmovlt_s64
svmovlt_u16
svmovlt_u32
svmovlt_u64
svmsb_f16_m
svmsb_f16_x
svmsb_f16_z
svmsb_f32_m
svmsb_f32_x
svmsb_f32_z
svmsb_f64_m
svmsb_f64_x
svmsb_f64_z
svmsb_n_f16_m
svmsb_n_f16_x
svmsb_n_f16_z
svmsb_n_f32_m
svmsb_n_f32_x
svmsb_n_f32_z
svmsb_n_f64_m
svmsb_n_f64_x
svmsb_n_f64_z
svmsb_n_s16_m
svmsb_n_s16_x
svmsb_n_s16_z
svmsb_n_s32_m
svmsb_n_s32_x
svmsb_n_s32_z
svmsb_n_s64_m
svmsb_n_s64_x
svmsb_n_s64_z
svmsb_n_s8_m
svmsb_n_s8_x
svmsb_n_s8_z
svmsb_n_u16_m
svmsb_n_u16_x
svmsb_n_u16_z
svmsb_n_u32_m
svmsb_n_u32_x
svmsb_n_u32_z
svmsb_n_u64_m
svmsb_n_u64_x
svmsb_n_u64_z
svmsb_n_u8_m
svmsb_n_u8_x
svmsb_n_u8_z
svmsb_s16_m
svmsb_s16_x
svmsb_s16_z
svmsb_s32_m
svmsb_s32_x
svmsb_s32_z
svmsb_s64_m
svmsb_s64_x
svmsb_s64_z
svmsb_s8_m
svmsb_s8_x
svmsb_s8_z
svmsb_u16_m
svmsb_u16_x
svmsb_u16_z
svmsb_u32_m
svmsb_u32_x
svmsb_u32_z
svmsb_u64_m
svmsb_u64_x
svmsb_u64_z
svmsb_u8_m
svmsb_u8_x
svmsb_u8_z
svmul_f16_m
svmul_f16_x
svmul_f16_z
svmul_f32_m
svmul_f32_x
svmul_f32_z
svmul_f64_m
svmul_f64_x
svmul_f64_z
svmul_lane_f16
svmul_lane_f32
svmul_lane_f64
svmul_lane_s16
svmul_lane_s32
svmul_lane_s64
svmul_lane_u16
svmul_lane_u32
svmul_lane_u64
svmul_n_f16_m
svmul_n_f16_x
svmul_n_f16_z
svmul_n_f32_m
svmul_n_f32_x
svmul_n_f32_z
svmul_n_f64_m
svmul_n_f64_x
svmul_n_f64_z
svmul_n_s16_m
svmul_n_s16_x
svmul_n_s16_z
svmul_n_s32_m
svmul_n_s32_x
svmul_n_s32_z
svmul_n_s64_m
svmul_n_s64_x
svmul_n_s64_z
svmul_n_s8_m
svmul_n_s8_x
svmul_n_s8_z
svmul_n_u16_m
svmul_n_u16_x
svmul_n_u16_z
svmul_n_u32_m
svmul_n_u32_x
svmul_n_u32_z
svmul_n_u64_m
svmul_n_u64_x
svmul_n_u64_z
svmul_n_u8_m
svmul_n_u8_x
svmul_n_u8_z
svmul_s16_m
svmul_s16_x
svmul_s16_z
svmul_s32_m
svmul_s32_x
svmul_s32_z
svmul_s64_m
svmul_s64_x
svmul_s64_z
svmul_s8_m
svmul_s8_x
svmul_s8_z
svmul_u16_m
svmul_u16_x
svmul_u16_z
svmul_u32_m
svmul_u32_x
svmul_u32_z
svmul_u64_m
svmul_u64_x
svmul_u64_z
svmul_u8_m
svmul_u8_x
svmul_u8_z
svmulh_n_s16_m
svmulh_n_s16_x
svmulh_n_s16_z
svmulh_n_s32_m
svmulh_n_s32_x
svmulh_n_s32_z
svmulh_n_s64_m
svmulh_n_s64_x
svmulh_n_s64_z
svmulh_n_s8_m
svmulh_n_s8_x
svmulh_n_s8_z
svmulh_n_u16_m
svmulh_n_u16_x
svmulh_n_u16_z
svmulh_n_u32_m
svmulh_n_u32_x
svmulh_n_u32_z
svmulh_n_u64_m
svmulh_n_u64_x
svmulh_n_u64_z
svmulh_n_u8_m
svmulh_n_u8_x
svmulh_n_u8_z
svmulh_s16_m
svmulh_s16_x
svmulh_s16_z
svmulh_s32_m
svmulh_s32_x
svmulh_s32_z
svmulh_s64_m
svmulh_s64_x
svmulh_s64_z
svmulh_s8_m
svmulh_s8_x
svmulh_s8_z
svmulh_u16_m
svmulh_u16_x
svmulh_u16_z
svmulh_u32_m
svmulh_u32_x
svmulh_u32_z
svmulh_u64_m
svmulh_u64_x
svmulh_u64_z
svmulh_u8_m
svmulh_u8_x
svmulh_u8_z
svmullb_lane_s32
svmullb_lane_s64
svmullb_lane_u32
svmullb_lane_u64
svmullb_n_s16
svmullb_n_s32
svmullb_n_s64
svmullb_n_u16
svmullb_n_u32
svmullb_n_u64
svmullb_s16
svmullb_s32
svmullb_s64
svmullb_u16
svmullb_u32
svmullb_u64
svmullt_lane_s32
svmullt_lane_s64
svmullt_lane_u32
svmullt_lane_u64
svmullt_n_s16
svmullt_n_s32
svmullt_n_s64
svmullt_n_u16
svmullt_n_u32
svmullt_n_u64
svmullt_s16
svmullt_s32
svmullt_s64
svmullt_u16
svmullt_u32
svmullt_u64
svmulx_f16_m
svmulx_f16_x
svmulx_f16_z
svmulx_f32_m
svmulx_f32_x
svmulx_f32_z
svmulx_f64_m
svmulx_f64_x
svmulx_f64_z
svmulx_n_f16_m
svmulx_n_f16_x
svmulx_n_f16_z
svmulx_n_f32_m
svmulx_n_f32_x
svmulx_n_f32_z
svmulx_n_f64_m
svmulx_n_f64_x
svmulx_n_f64_z
svnand_b_z
svnbsl_n_s16
svnbsl_n_s32
svnbsl_n_s64
svnbsl_n_s8
svnbsl_n_u16
svnbsl_n_u32
svnbsl_n_u64
svnbsl_n_u8
svnbsl_s16
svnbsl_s32
svnbsl_s64
svnbsl_s8
svnbsl_u16
svnbsl_u32
svnbsl_u64
svnbsl_u8
svneg_f16_m
svneg_f16_x
svneg_f16_z
svneg_f32_m
svneg_f32_x
svneg_f32_z
svneg_f64_m
svneg_f64_x
svneg_f64_z
svneg_s16_m
svneg_s16_x
svneg_s16_z
svneg_s32_m
svneg_s32_x
svneg_s32_z
svneg_s64_m
svneg_s64_x
svneg_s64_z
svneg_s8_m
svneg_s8_x
svneg_s8_z
svnmad_f16_m
svnmad_f16_x
svnmad_f16_z
svnmad_f32_m
svnmad_f32_x
svnmad_f32_z
svnmad_f64_m
svnmad_f64_x
svnmad_f64_z
svnmad_n_f16_m
svnmad_n_f16_x
svnmad_n_f16_z
svnmad_n_f32_m
svnmad_n_f32_x
svnmad_n_f32_z
svnmad_n_f64_m
svnmad_n_f64_x
svnmad_n_f64_z
svnmatch_s16
svnmatch_s8
svnmatch_u16
svnmatch_u8
svnmla_f16_m
svnmla_f16_x
svnmla_f16_z
svnmla_f32_m
svnmla_f32_x
svnmla_f32_z
svnmla_f64_m
svnmla_f64_x
svnmla_f64_z
svnmla_n_f16_m
svnmla_n_f16_x
svnmla_n_f16_z
svnmla_n_f32_m
svnmla_n_f32_x
svnmla_n_f32_z
svnmla_n_f64_m
svnmla_n_f64_x
svnmla_n_f64_z
svnmls_f16_m
svnmls_f16_x
svnmls_f16_z
svnmls_f32_m
svnmls_f32_x
svnmls_f32_z
svnmls_f64_m
svnmls_f64_x
svnmls_f64_z
svnmls_n_f16_m
svnmls_n_f16_x
svnmls_n_f16_z
svnmls_n_f32_m
svnmls_n_f32_x
svnmls_n_f32_z
svnmls_n_f64_m
svnmls_n_f64_x
svnmls_n_f64_z
svnmsb_f16_m
svnmsb_f16_x
svnmsb_f16_z
svnmsb_f32_m
svnmsb_f32_x
svnmsb_f32_z
svnmsb_f64_m
svnmsb_f64_x
svnmsb_f64_z
svnmsb_n_f16_m
svnmsb_n_f16_x
svnmsb_n_f16_z
svnmsb_n_f32_m
svnmsb_n_f32_x
svnmsb_n_f32_z
svnmsb_n_f64_m
svnmsb_n_f64_x
svnmsb_n_f64_z
svnor_b_z
svnot_b_z
svnot_s16_m
svnot_s16_x
svnot_s16_z
svnot_s32_m
svnot_s32_x
svnot_s32_z
svnot_s64_m
svnot_s64_x
svnot_s64_z
svnot_s8_m
svnot_s8_x
svnot_s8_z
svnot_u16_m
svnot_u16_x
svnot_u16_z
svnot_u32_m
svnot_u32_x
svnot_u32_z
svnot_u64_m
svnot_u64_x
svnot_u64_z
svnot_u8_m
svnot_u8_x
svnot_u8_z
svorn_b_z
svorr_b_z
svorr_n_s16_m
svorr_n_s16_x
svorr_n_s16_z
svorr_n_s32_m
svorr_n_s32_x
svorr_n_s32_z
svorr_n_s64_m
svorr_n_s64_x
svorr_n_s64_z
svorr_n_s8_m
svorr_n_s8_x
svorr_n_s8_z
svorr_n_u16_m
svorr_n_u16_x
svorr_n_u16_z
svorr_n_u32_m
svorr_n_u32_x
svorr_n_u32_z
svorr_n_u64_m
svorr_n_u64_x
svorr_n_u64_z
svorr_n_u8_m
svorr_n_u8_x
svorr_n_u8_z
svorr_s16_m
svorr_s16_x
svorr_s16_z
svorr_s32_m
svorr_s32_x
svorr_s32_z
svorr_s64_m
svorr_s64_x
svorr_s64_z
svorr_s8_m
svorr_s8_x
svorr_s8_z
svorr_u16_m
svorr_u16_x
svorr_u16_z
svorr_u32_m
svorr_u32_x
svorr_u32_z
svorr_u64_m
svorr_u64_x
svorr_u64_z
svorr_u8_m
svorr_u8_x
svorr_u8_z
svorv_s16
svorv_s32
svorv_s64
svorv_s8
svorv_u16
svorv_u32
svorv_u64
svorv_u8
svpfalse_b
svpfirst_b
svpmul_n_u8
svpmul_u8
svpmullb_n_u16
svpmullb_n_u64
svpmullb_pair_n_u32
svpmullb_pair_n_u64
svpmullb_pair_n_u8
svpmullb_pair_u32
svpmullb_pair_u64
svpmullb_pair_u8
svpmullb_u16
svpmullb_u64
svpmullt_n_u16
svpmullt_n_u64
svpmullt_pair_n_u32
svpmullt_pair_n_u64
svpmullt_pair_n_u8
svpmullt_pair_u32
svpmullt_pair_u64
svpmullt_pair_u8
svpmullt_u16
svpmullt_u64
svpnext_b16
svpnext_b32
svpnext_b64
svpnext_b8
svprfb
svprfb_gather_s32offset
svprfb_gather_s64offset
svprfb_gather_u32base
svprfb_gather_u32base_offset
svprfb_gather_u32offset
svprfb_gather_u64base
svprfb_gather_u64base_offset
svprfb_gather_u64offset
svprfb_vnum
svprfd
svprfd_gather_s32index
svprfd_gather_s64index
svprfd_gather_u32base
svprfd_gather_u32base_index
svprfd_gather_u32index
svprfd_gather_u64base
svprfd_gather_u64base_index
svprfd_gather_u64index
svprfd_vnum
svprfh
svprfh_gather_s32index
svprfh_gather_s64index
svprfh_gather_u32base
svprfh_gather_u32base_index
svprfh_gather_u32index
svprfh_gather_u64base
svprfh_gather_u64base_index
svprfh_gather_u64index
svprfh_vnum
svprfw
svprfw_gather_s32index
svprfw_gather_s64index
svprfw_gather_u32base
svprfw_gather_u32base_index
svprfw_gather_u32index
svprfw_gather_u64base
svprfw_gather_u64base_index
svprfw_gather_u64index
svprfw_vnum
svptest_any
svptest_first
svptest_last
svptrue_b16
svptrue_b32
svptrue_b64
svptrue_b8
svptrue_pat_b16
svptrue_pat_b32
svptrue_pat_b64
svptrue_pat_b8
svqabs_s16_m
svqabs_s16_x
svqabs_s16_z
svqabs_s32_m
svqabs_s32_x
svqabs_s32_z
svqabs_s64_m
svqabs_s64_x
svqabs_s64_z
svqabs_s8_m
svqabs_s8_x
svqabs_s8_z
svqadd_n_s16
svqadd_n_s16_m
svqadd_n_s16_x
svqadd_n_s16_z
svqadd_n_s32
svqadd_n_s32_m
svqadd_n_s32_x
svqadd_n_s32_z
svqadd_n_s64
svqadd_n_s64_m
svqadd_n_s64_x
svqadd_n_s64_z
svqadd_n_s8
svqadd_n_s8_m
svqadd_n_s8_x
svqadd_n_s8_z
svqadd_n_u16
svqadd_n_u16_m
svqadd_n_u16_x
svqadd_n_u16_z
svqadd_n_u32
svqadd_n_u32_m
svqadd_n_u32_x
svqadd_n_u32_z
svqadd_n_u64
svqadd_n_u64_m
svqadd_n_u64_x
svqadd_n_u64_z
svqadd_n_u8
svqadd_n_u8_m
svqadd_n_u8_x
svqadd_n_u8_z
svqadd_s16
svqadd_s16_m
svqadd_s16_x
svqadd_s16_z
svqadd_s32
svqadd_s32_m
svqadd_s32_x
svqadd_s32_z
svqadd_s64
svqadd_s64_m
svqadd_s64_x
svqadd_s64_z
svqadd_s8
svqadd_s8_m
svqadd_s8_x
svqadd_s8_z
svqadd_u16
svqadd_u16_m
svqadd_u16_x
svqadd_u16_z
svqadd_u32
svqadd_u32_m
svqadd_u32_x
svqadd_u32_z
svqadd_u64
svqadd_u64_m
svqadd_u64_x
svqadd_u64_z
svqadd_u8
svqadd_u8_m
svqadd_u8_x
svqadd_u8_z
svqcadd_s16
svqcadd_s32
svqcadd_s64
svqcadd_s8
svqdecb_n_s32
svqdecb_n_s64
svqdecb_n_u32
svqdecb_n_u64
svqdecb_pat_n_s32
svqdecb_pat_n_s64
svqdecb_pat_n_u32
svqdecb_pat_n_u64
svqdecd_n_s32
svqdecd_n_s64
svqdecd_n_u32
svqdecd_n_u64
svqdecd_pat_n_s32
svqdecd_pat_n_s64
svqdecd_pat_n_u32
svqdecd_pat_n_u64
svqdecd_pat_s64
svqdecd_pat_u64
svqdecd_s64
svqdecd_u64
svqdech_n_s32
svqdech_n_s64
svqdech_n_u32
svqdech_n_u64
svqdech_pat_n_s32
svqdech_pat_n_s64
svqdech_pat_n_u32
svqdech_pat_n_u64
svqdech_pat_s16
svqdech_pat_u16
svqdech_s16
svqdech_u16
svqdecp_n_s32_b16
svqdecp_n_s32_b32
svqdecp_n_s32_b64
svqdecp_n_s32_b8
svqdecp_n_s64_b16
svqdecp_n_s64_b32
svqdecp_n_s64_b64
svqdecp_n_s64_b8
svqdecp_n_u32_b16
svqdecp_n_u32_b32
svqdecp_n_u32_b64
svqdecp_n_u32_b8
svqdecp_n_u64_b16
svqdecp_n_u64_b32
svqdecp_n_u64_b64
svqdecp_n_u64_b8
svqdecp_s16
svqdecp_s32
svqdecp_s64
svqdecp_u16
svqdecp_u32
svqdecp_u64
svqdecw_n_s32
svqdecw_n_s64
svqdecw_n_u32
svqdecw_n_u64
svqdecw_pat_n_s32
svqdecw_pat_n_s64
svqdecw_pat_n_u32
svqdecw_pat_n_u64
svqdecw_pat_s32
svqdecw_pat_u32
svqdecw_s32
svqdecw_u32
svqdmlalb_lane_s32
svqdmlalb_lane_s64
svqdmlalb_n_s16
svqdmlalb_n_s32
svqdmlalb_n_s64
svqdmlalb_s16
svqdmlalb_s32
svqdmlalb_s64
svqdmlalbt_n_s16
svqdmlalbt_n_s32
svqdmlalbt_n_s64
svqdmlalbt_s16
svqdmlalbt_s32
svqdmlalbt_s64
svqdmlalt_lane_s32
svqdmlalt_lane_s64
svqdmlalt_n_s16
svqdmlalt_n_s32
svqdmlalt_n_s64
svqdmlalt_s16
svqdmlalt_s32
svqdmlalt_s64
svqdmlslb_lane_s32
svqdmlslb_lane_s64
svqdmlslb_n_s16
svqdmlslb_n_s32
svqdmlslb_n_s64
svqdmlslb_s16
svqdmlslb_s32
svqdmlslb_s64
svqdmlslbt_n_s16
svqdmlslbt_n_s32
svqdmlslbt_n_s64
svqdmlslbt_s16
svqdmlslbt_s32
svqdmlslbt_s64
svqdmlslt_lane_s32
svqdmlslt_lane_s64
svqdmlslt_n_s16
svqdmlslt_n_s32
svqdmlslt_n_s64
svqdmlslt_s16
svqdmlslt_s32
svqdmlslt_s64
svqdmulh_lane_s16
svqdmulh_lane_s32
svqdmulh_lane_s64
svqdmulh_n_s16
svqdmulh_n_s32
svqdmulh_n_s64
svqdmulh_n_s8
svqdmulh_s16
svqdmulh_s32
svqdmulh_s64
svqdmulh_s8
svqdmullb_lane_s32
svqdmullb_lane_s64
svqdmullb_n_s16
svqdmullb_n_s32
svqdmullb_n_s64
svqdmullb_s16
svqdmullb_s32
svqdmullb_s64
svqdmullt_lane_s32
svqdmullt_lane_s64
svqdmullt_n_s16
svqdmullt_n_s32
svqdmullt_n_s64
svqdmullt_s16
svqdmullt_s32
svqdmullt_s64
svqincb_n_s32
svqincb_n_s64
svqincb_n_u32
svqincb_n_u64
svqincb_pat_n_s32
svqincb_pat_n_s64
svqincb_pat_n_u32
svqincb_pat_n_u64
svqincd_n_s32
svqincd_n_s64
svqincd_n_u32
svqincd_n_u64
svqincd_pat_n_s32
svqincd_pat_n_s64
svqincd_pat_n_u32
svqincd_pat_n_u64
svqincd_pat_s64
svqincd_pat_u64
svqincd_s64
svqincd_u64
svqinch_n_s32
svqinch_n_s64
svqinch_n_u32
svqinch_n_u64
svqinch_pat_n_s32
svqinch_pat_n_s64
svqinch_pat_n_u32
svqinch_pat_n_u64
svqinch_pat_s16
svqinch_pat_u16
svqinch_s16
svqinch_u16
svqincp_n_s32_b16
svqincp_n_s32_b32
svqincp_n_s32_b64
svqincp_n_s32_b8
svqincp_n_s64_b16
svqincp_n_s64_b32
svqincp_n_s64_b64
svqincp_n_s64_b8
svqincp_n_u32_b16
svqincp_n_u32_b32
svqincp_n_u32_b64
svqincp_n_u32_b8
svqincp_n_u64_b16
svqincp_n_u64_b32
svqincp_n_u64_b64
svqincp_n_u64_b8
svqincp_s16
svqincp_s32
svqincp_s64
svqincp_u16
svqincp_u32
svqincp_u64
svqincw_n_s32
svqincw_n_s64
svqincw_n_u32
svqincw_n_u64
svqincw_pat_n_s32
svqincw_pat_n_s64
svqincw_pat_n_u32
svqincw_pat_n_u64
svqincw_pat_s32
svqincw_pat_u32
svqincw_s32
svqincw_u32
svqneg_s16_m
svqneg_s16_x
svqneg_s16_z
svqneg_s32_m
svqneg_s32_x
svqneg_s32_z
svqneg_s64_m
svqneg_s64_x
svqneg_s64_z
svqneg_s8_m
svqneg_s8_x
svqneg_s8_z
svqrdcmlah_lane_s16
svqrdcmlah_lane_s32
svqrdcmlah_s16
svqrdcmlah_s32
svqrdcmlah_s64
svqrdcmlah_s8
svqrdmlah_lane_s16
svqrdmlah_lane_s32
svqrdmlah_lane_s64
svqrdmlah_n_s16
svqrdmlah_n_s32
svqrdmlah_n_s64
svqrdmlah_n_s8
svqrdmlah_s16
svqrdmlah_s32
svqrdmlah_s64
svqrdmlah_s8
svqrdmlsh_lane_s16
svqrdmlsh_lane_s32
svqrdmlsh_lane_s64
svqrdmlsh_n_s16
svqrdmlsh_n_s32
svqrdmlsh_n_s64
svqrdmlsh_n_s8
svqrdmlsh_s16
svqrdmlsh_s32
svqrdmlsh_s64
svqrdmlsh_s8
svqrdmulh_lane_s16
svqrdmulh_lane_s32
svqrdmulh_lane_s64
svqrdmulh_n_s16
svqrdmulh_n_s32
svqrdmulh_n_s64
svqrdmulh_n_s8
svqrdmulh_s16
svqrdmulh_s32
svqrdmulh_s64
svqrdmulh_s8
svqrshl_n_s16_m
svqrshl_n_s16_x
svqrshl_n_s16_z
svqrshl_n_s32_m
svqrshl_n_s32_x
svqrshl_n_s32_z
svqrshl_n_s64_m
svqrshl_n_s64_x
svqrshl_n_s64_z
svqrshl_n_s8_m
svqrshl_n_s8_x
svqrshl_n_s8_z
svqrshl_n_u16_m
svqrshl_n_u16_x
svqrshl_n_u16_z
svqrshl_n_u32_m
svqrshl_n_u32_x
svqrshl_n_u32_z
svqrshl_n_u64_m
svqrshl_n_u64_x
svqrshl_n_u64_z
svqrshl_n_u8_m
svqrshl_n_u8_x
svqrshl_n_u8_z
svqrshl_s16_m
svqrshl_s16_x
svqrshl_s16_z
svqrshl_s32_m
svqrshl_s32_x
svqrshl_s32_z
svqrshl_s64_m
svqrshl_s64_x
svqrshl_s64_z
svqrshl_s8_m
svqrshl_s8_x
svqrshl_s8_z
svqrshl_u16_m
svqrshl_u16_x
svqrshl_u16_z
svqrshl_u32_m
svqrshl_u32_x
svqrshl_u32_z
svqrshl_u64_m
svqrshl_u64_x
svqrshl_u64_z
svqrshl_u8_m
svqrshl_u8_x
svqrshl_u8_z
svqrshrnb_n_s16
svqrshrnb_n_s32
svqrshrnb_n_s64
svqrshrnb_n_u16
svqrshrnb_n_u32
svqrshrnb_n_u64
svqrshrnt_n_s16
svqrshrnt_n_s32
svqrshrnt_n_s64
svqrshrnt_n_u16
svqrshrnt_n_u32
svqrshrnt_n_u64
svqrshrunb_n_s16
svqrshrunb_n_s32
svqrshrunb_n_s64
svqrshrunt_n_s16
svqrshrunt_n_s32
svqrshrunt_n_s64
svqshl_n_s16_m
svqshl_n_s16_x
svqshl_n_s16_z
svqshl_n_s32_m
svqshl_n_s32_x
svqshl_n_s32_z
svqshl_n_s64_m
svqshl_n_s64_x
svqshl_n_s64_z
svqshl_n_s8_m
svqshl_n_s8_x
svqshl_n_s8_z
svqshl_n_u16_m
svqshl_n_u16_x
svqshl_n_u16_z
svqshl_n_u32_m
svqshl_n_u32_x
svqshl_n_u32_z
svqshl_n_u64_m
svqshl_n_u64_x
svqshl_n_u64_z
svqshl_n_u8_m
svqshl_n_u8_x
svqshl_n_u8_z
svqshl_s16_m
svqshl_s16_x
svqshl_s16_z
svqshl_s32_m
svqshl_s32_x
svqshl_s32_z
svqshl_s64_m
svqshl_s64_x
svqshl_s64_z
svqshl_s8_m
svqshl_s8_x
svqshl_s8_z
svqshl_u16_m
svqshl_u16_x
svqshl_u16_z
svqshl_u32_m
svqshl_u32_x
svqshl_u32_z
svqshl_u64_m
svqshl_u64_x
svqshl_u64_z
svqshl_u8_m
svqshl_u8_x
svqshl_u8_z
svqshlu_n_s16_m
svqshlu_n_s16_x
svqshlu_n_s16_z
svqshlu_n_s32_m
svqshlu_n_s32_x
svqshlu_n_s32_z
svqshlu_n_s64_m
svqshlu_n_s64_x
svqshlu_n_s64_z
svqshlu_n_s8_m
svqshlu_n_s8_x
svqshlu_n_s8_z
svqshrnb_n_s16
svqshrnb_n_s32
svqshrnb_n_s64
svqshrnb_n_u16
svqshrnb_n_u32
svqshrnb_n_u64
svqshrnt_n_s16
svqshrnt_n_s32
svqshrnt_n_s64
svqshrnt_n_u16
svqshrnt_n_u32
svqshrnt_n_u64
svqshrunb_n_s16
svqshrunb_n_s32
svqshrunb_n_s64
svqshrunt_n_s16
svqshrunt_n_s32
svqshrunt_n_s64
svqsub_n_s16
svqsub_n_s16_m
svqsub_n_s16_x
svqsub_n_s16_z
svqsub_n_s32
svqsub_n_s32_m
svqsub_n_s32_x
svqsub_n_s32_z
svqsub_n_s64
svqsub_n_s64_m
svqsub_n_s64_x
svqsub_n_s64_z
svqsub_n_s8
svqsub_n_s8_m
svqsub_n_s8_x
svqsub_n_s8_z
svqsub_n_u16
svqsub_n_u16_m
svqsub_n_u16_x
svqsub_n_u16_z
svqsub_n_u32
svqsub_n_u32_m
svqsub_n_u32_x
svqsub_n_u32_z
svqsub_n_u64
svqsub_n_u64_m
svqsub_n_u64_x
svqsub_n_u64_z
svqsub_n_u8
svqsub_n_u8_m
svqsub_n_u8_x
svqsub_n_u8_z
svqsub_s16
svqsub_s16_m
svqsub_s16_x
svqsub_s16_z
svqsub_s32
svqsub_s32_m
svqsub_s32_x
svqsub_s32_z
svqsub_s64
svqsub_s64_m
svqsub_s64_x
svqsub_s64_z
svqsub_s8
svqsub_s8_m
svqsub_s8_x
svqsub_s8_z
svqsub_u16
svqsub_u16_m
svqsub_u16_x
svqsub_u16_z
svqsub_u32
svqsub_u32_m
svqsub_u32_x
svqsub_u32_z
svqsub_u64
svqsub_u64_m
svqsub_u64_x
svqsub_u64_z
svqsub_u8
svqsub_u8_m
svqsub_u8_x
svqsub_u8_z
svqsubr_n_s16_m
svqsubr_n_s16_x
svqsubr_n_s16_z
svqsubr_n_s32_m
svqsubr_n_s32_x
svqsubr_n_s32_z
svqsubr_n_s64_m
svqsubr_n_s64_x
svqsubr_n_s64_z
svqsubr_n_s8_m
svqsubr_n_s8_x
svqsubr_n_s8_z
svqsubr_n_u16_m
svqsubr_n_u16_x
svqsubr_n_u16_z
svqsubr_n_u32_m
svqsubr_n_u32_x
svqsubr_n_u32_z
svqsubr_n_u64_m
svqsubr_n_u64_x
svqsubr_n_u64_z
svqsubr_n_u8_m
svqsubr_n_u8_x
svqsubr_n_u8_z
svqsubr_s16_m
svqsubr_s16_x
svqsubr_s16_z
svqsubr_s32_m
svqsubr_s32_x
svqsubr_s32_z
svqsubr_s64_m
svqsubr_s64_x
svqsubr_s64_z
svqsubr_s8_m
svqsubr_s8_x
svqsubr_s8_z
svqsubr_u16_m
svqsubr_u16_x
svqsubr_u16_z
svqsubr_u32_m
svqsubr_u32_x
svqsubr_u32_z
svqsubr_u64_m
svqsubr_u64_x
svqsubr_u64_z
svqsubr_u8_m
svqsubr_u8_x
svqsubr_u8_z
svqxtnb_s16
svqxtnb_s32
svqxtnb_s64
svqxtnb_u16
svqxtnb_u32
svqxtnb_u64
svqxtnt_s16
svqxtnt_s32
svqxtnt_s64
svqxtnt_u16
svqxtnt_u32
svqxtnt_u64
svqxtunb_s16
svqxtunb_s32
svqxtunb_s64
svqxtunt_s16
svqxtunt_s32
svqxtunt_s64
svraddhnb_n_s16
svraddhnb_n_s32
svraddhnb_n_s64
svraddhnb_n_u16
svraddhnb_n_u32
svraddhnb_n_u64
svraddhnb_s16
svraddhnb_s32
svraddhnb_s64
svraddhnb_u16
svraddhnb_u32
svraddhnb_u64
svraddhnt_n_s16
svraddhnt_n_s32
svraddhnt_n_s64
svraddhnt_n_u16
svraddhnt_n_u32
svraddhnt_n_u64
svraddhnt_s16
svraddhnt_s32
svraddhnt_s64
svraddhnt_u16
svraddhnt_u32
svraddhnt_u64
svrax1_s64
svrax1_u64
svrbit_s16_m
svrbit_s16_x
svrbit_s16_z
svrbit_s32_m
svrbit_s32_x
svrbit_s32_z
svrbit_s64_m
svrbit_s64_x
svrbit_s64_z
svrbit_s8_m
svrbit_s8_x
svrbit_s8_z
svrbit_u16_m
svrbit_u16_x
svrbit_u16_z
svrbit_u32_m
svrbit_u32_x
svrbit_u32_z
svrbit_u64_m
svrbit_u64_x
svrbit_u64_z
svrbit_u8_m
svrbit_u8_x
svrbit_u8_z
svrdffr
svrdffr_z
svrecpe_f16
svrecpe_f32
svrecpe_f64
svrecpe_u32_m
svrecpe_u32_x
svrecpe_u32_z
svrecps_f16
svrecps_f32
svrecps_f64
svrecpx_f16_m
svrecpx_f16_x
svrecpx_f16_z
svrecpx_f32_m
svrecpx_f32_x
svrecpx_f32_z
svrecpx_f64_m
svrecpx_f64_x
svrecpx_f64_z
svrev_b16
svrev_b32
svrev_b64
svrev_b8
svrev_bf16
svrev_f16
svrev_f32
svrev_f64
svrev_s16
svrev_s32
svrev_s64
svrev_s8
svrev_u16
svrev_u32
svrev_u64
svrev_u8
svrevb_s16_m
svrevb_s16_x
svrevb_s16_z
svrevb_s32_m
svrevb_s32_x
svrevb_s32_z
svrevb_s64_m
svrevb_s64_x
svrevb_s64_z
svrevb_u16_m
svrevb_u16_x
svrevb_u16_z
svrevb_u32_m
svrevb_u32_x
svrevb_u32_z
svrevb_u64_m
svrevb_u64_x
svrevb_u64_z
svrevh_s32_m
svrevh_s32_x
svrevh_s32_z
svrevh_s64_m
svrevh_s64_x
svrevh_s64_z
svrevh_u32_m
svrevh_u32_x
svrevh_u32_z
svrevh_u64_m
svrevh_u64_x
svrevh_u64_z
svrevw_s64_m
svrevw_s64_x
svrevw_s64_z
svrevw_u64_m
svrevw_u64_x
svrevw_u64_z
svrhadd_n_s16_m
svrhadd_n_s16_x
svrhadd_n_s16_z
svrhadd_n_s32_m
svrhadd_n_s32_x
svrhadd_n_s32_z
svrhadd_n_s64_m
svrhadd_n_s64_x
svrhadd_n_s64_z
svrhadd_n_s8_m
svrhadd_n_s8_x
svrhadd_n_s8_z
svrhadd_n_u16_m
svrhadd_n_u16_x
svrhadd_n_u16_z
svrhadd_n_u32_m
svrhadd_n_u32_x
svrhadd_n_u32_z
svrhadd_n_u64_m
svrhadd_n_u64_x
svrhadd_n_u64_z
svrhadd_n_u8_m
svrhadd_n_u8_x
svrhadd_n_u8_z
svrhadd_s16_m
svrhadd_s16_x
svrhadd_s16_z
svrhadd_s32_m
svrhadd_s32_x
svrhadd_s32_z
svrhadd_s64_m
svrhadd_s64_x
svrhadd_s64_z
svrhadd_s8_m
svrhadd_s8_x
svrhadd_s8_z
svrhadd_u16_m
svrhadd_u16_x
svrhadd_u16_z
svrhadd_u32_m
svrhadd_u32_x
svrhadd_u32_z
svrhadd_u64_m
svrhadd_u64_x
svrhadd_u64_z
svrhadd_u8_m
svrhadd_u8_x
svrhadd_u8_z
svrinta_f16_m
svrinta_f16_x
svrinta_f16_z
svrinta_f32_m
svrinta_f32_x
svrinta_f32_z
svrinta_f64_m
svrinta_f64_x
svrinta_f64_z
svrinti_f16_m
svrinti_f16_x
svrinti_f16_z
svrinti_f32_m
svrinti_f32_x
svrinti_f32_z
svrinti_f64_m
svrinti_f64_x
svrinti_f64_z
svrintm_f16_m
svrintm_f16_x
svrintm_f16_z
svrintm_f32_m
svrintm_f32_x
svrintm_f32_z
svrintm_f64_m
svrintm_f64_x
svrintm_f64_z
svrintn_f16_m
svrintn_f16_x
svrintn_f16_z
svrintn_f32_m
svrintn_f32_x
svrintn_f32_z
svrintn_f64_m
svrintn_f64_x
svrintn_f64_z
svrintp_f16_m
svrintp_f16_x
svrintp_f16_z
svrintp_f32_m
svrintp_f32_x
svrintp_f32_z
svrintp_f64_m
svrintp_f64_x
svrintp_f64_z
svrintx_f16_m
svrintx_f16_x
svrintx_f16_z
svrintx_f32_m
svrintx_f32_x
svrintx_f32_z
svrintx_f64_m
svrintx_f64_x
svrintx_f64_z
svrintz_f16_m
svrintz_f16_x
svrintz_f16_z
svrintz_f32_m
svrintz_f32_x
svrintz_f32_z
svrintz_f64_m
svrintz_f64_x
svrintz_f64_z
svrshl_n_s16_m
svrshl_n_s16_x
svrshl_n_s16_z
svrshl_n_s32_m
svrshl_n_s32_x
svrshl_n_s32_z
svrshl_n_s64_m
svrshl_n_s64_x
svrshl_n_s64_z
svrshl_n_s8_m
svrshl_n_s8_x
svrshl_n_s8_z
svrshl_n_u16_m
svrshl_n_u16_x
svrshl_n_u16_z
svrshl_n_u32_m
svrshl_n_u32_x
svrshl_n_u32_z
svrshl_n_u64_m
svrshl_n_u64_x
svrshl_n_u64_z
svrshl_n_u8_m
svrshl_n_u8_x
svrshl_n_u8_z
svrshl_s16_m
svrshl_s16_x
svrshl_s16_z
svrshl_s32_m
svrshl_s32_x
svrshl_s32_z
svrshl_s64_m
svrshl_s64_x
svrshl_s64_z
svrshl_s8_m
svrshl_s8_x
svrshl_s8_z
svrshl_u16_m
svrshl_u16_x
svrshl_u16_z
svrshl_u32_m
svrshl_u32_x
svrshl_u32_z
svrshl_u64_m
svrshl_u64_x
svrshl_u64_z
svrshl_u8_m
svrshl_u8_x
svrshl_u8_z
svrshr_n_s16_m
svrshr_n_s16_x
svrshr_n_s16_z
svrshr_n_s32_m
svrshr_n_s32_x
svrshr_n_s32_z
svrshr_n_s64_m
svrshr_n_s64_x
svrshr_n_s64_z
svrshr_n_s8_m
svrshr_n_s8_x
svrshr_n_s8_z
svrshr_n_u16_m
svrshr_n_u16_x
svrshr_n_u16_z
svrshr_n_u32_m
svrshr_n_u32_x
svrshr_n_u32_z
svrshr_n_u64_m
svrshr_n_u64_x
svrshr_n_u64_z
svrshr_n_u8_m
svrshr_n_u8_x
svrshr_n_u8_z
svrshrnb_n_s16
svrshrnb_n_s32
svrshrnb_n_s64
svrshrnb_n_u16
svrshrnb_n_u32
svrshrnb_n_u64
svrshrnt_n_s16
svrshrnt_n_s32
svrshrnt_n_s64
svrshrnt_n_u16
svrshrnt_n_u32
svrshrnt_n_u64
svrsqrte_f16
svrsqrte_f32
svrsqrte_f64
svrsqrte_u32_m
svrsqrte_u32_x
svrsqrte_u32_z
svrsqrts_f16
svrsqrts_f32
svrsqrts_f64
svrsra_n_s16
svrsra_n_s32
svrsra_n_s64
svrsra_n_s8
svrsra_n_u16
svrsra_n_u32
svrsra_n_u64
svrsra_n_u8
svrsubhnb_n_s16
svrsubhnb_n_s32
svrsubhnb_n_s64
svrsubhnb_n_u16
svrsubhnb_n_u32
svrsubhnb_n_u64
svrsubhnb_s16
svrsubhnb_s32
svrsubhnb_s64
svrsubhnb_u16
svrsubhnb_u32
svrsubhnb_u64
svrsubhnt_n_s16
svrsubhnt_n_s32
svrsubhnt_n_s64
svrsubhnt_n_u16
svrsubhnt_n_u32
svrsubhnt_n_u64
svrsubhnt_s16
svrsubhnt_s32
svrsubhnt_s64
svrsubhnt_u16
svrsubhnt_u32
svrsubhnt_u64
svsbclb_n_u32
svsbclb_n_u64
svsbclb_u32
svsbclb_u64
svsbclt_n_u32
svsbclt_n_u64
svsbclt_u32
svsbclt_u64
svscale_f16_m
svscale_f16_x
svscale_f16_z
svscale_f32_m
svscale_f32_x
svscale_f32_z
svscale_f64_m
svscale_f64_x
svscale_f64_z
svscale_n_f16_m
svscale_n_f16_x
svscale_n_f16_z
svscale_n_f32_m
svscale_n_f32_x
svscale_n_f32_z
svscale_n_f64_m
svscale_n_f64_x
svscale_n_f64_z
svsel_b
svsel_bf16
svsel_f16
svsel_f32
svsel_f64
svsel_s16
svsel_s32
svsel_s64
svsel_s8
svsel_u16
svsel_u32
svsel_u64
svsel_u8
svset2_bf16
svset2_f16
svset2_f32
svset2_f64
svset2_s16
svset2_s32
svset2_s64
svset2_s8
svset2_u16
svset2_u32
svset2_u64
svset2_u8
svset3_bf16
svset3_f16
svset3_f32
svset3_f64
svset3_s16
svset3_s32
svset3_s64
svset3_s8
svset3_u16
svset3_u32
svset3_u64
svset3_u8
svset4_bf16
svset4_f16
svset4_f32
svset4_f64
svset4_s16
svset4_s32
svset4_s64
svset4_s8
svset4_u16
svset4_u32
svset4_u64
svset4_u8
svsetffr
svshllb_n_s16
svshllb_n_s32
svshllb_n_s64
svshllb_n_u16
svshllb_n_u32
svshllb_n_u64
svshllt_n_s16
svshllt_n_s32
svshllt_n_s64
svshllt_n_u16
svshllt_n_u32
svshllt_n_u64
svshrnb_n_s16
svshrnb_n_s32
svshrnb_n_s64
svshrnb_n_u16
svshrnb_n_u32
svshrnb_n_u64
svshrnt_n_s16
svshrnt_n_s32
svshrnt_n_s64
svshrnt_n_u16
svshrnt_n_u32
svshrnt_n_u64
svsli_n_s16
svsli_n_s32
svsli_n_s64
svsli_n_s8
svsli_n_u16
svsli_n_u32
svsli_n_u64
svsli_n_u8
svsm4e_u32
svsm4ekey_u32
svsplice_bf16
svsplice_f16
svsplice_f32
svsplice_f64
svsplice_s16
svsplice_s32
svsplice_s64
svsplice_s8
svsplice_u16
svsplice_u32
svsplice_u64
svsplice_u8
svsqadd_n_u16_m
svsqadd_n_u16_x
svsqadd_n_u16_z
svsqadd_n_u32_m
svsqadd_n_u32_x
svsqadd_n_u32_z
svsqadd_n_u64_m
svsqadd_n_u64_x
svsqadd_n_u64_z
svsqadd_n_u8_m
svsqadd_n_u8_x
svsqadd_n_u8_z
svsqadd_u16_m
svsqadd_u16_x
svsqadd_u16_z
svsqadd_u32_m
svsqadd_u32_x
svsqadd_u32_z
svsqadd_u64_m
svsqadd_u64_x
svsqadd_u64_z
svsqadd_u8_m
svsqadd_u8_x
svsqadd_u8_z
svsqrt_f16_m
svsqrt_f16_x
svsqrt_f16_z
svsqrt_f32_m
svsqrt_f32_x
svsqrt_f32_z
svsqrt_f64_m
svsqrt_f64_x
svsqrt_f64_z
svsra_n_s16
svsra_n_s32
svsra_n_s64
svsra_n_s8
svsra_n_u16
svsra_n_u32
svsra_n_u64
svsra_n_u8
svsri_n_s16
svsri_n_s32
svsri_n_s64
svsri_n_s8
svsri_n_u16
svsri_n_u32
svsri_n_u64
svsri_n_u8
svst1_bf16
svst1_f16
svst1_f32
svst1_f64
svst1_s16
svst1_s32
svst1_s64
svst1_s8
svst1_scatter_s32index_f32
svst1_scatter_s32index_s32
svst1_scatter_s32index_u32
svst1_scatter_s32offset_f32
svst1_scatter_s32offset_s32
svst1_scatter_s32offset_u32
svst1_scatter_s64index_f64
svst1_scatter_s64index_s64
svst1_scatter_s64index_u64
svst1_scatter_s64offset_f64
svst1_scatter_s64offset_s64
svst1_scatter_s64offset_u64
svst1_scatter_u32base_f32
svst1_scatter_u32base_index_f32
svst1_scatter_u32base_index_s32
svst1_scatter_u32base_index_u32
svst1_scatter_u32base_offset_f32
svst1_scatter_u32base_offset_s32
svst1_scatter_u32base_offset_u32
svst1_scatter_u32base_s32
svst1_scatter_u32base_u32
svst1_scatter_u32index_f32
svst1_scatter_u32index_s32
svst1_scatter_u32index_u32
svst1_scatter_u32offset_f32
svst1_scatter_u32offset_s32
svst1_scatter_u32offset_u32
svst1_scatter_u64base_f64
svst1_scatter_u64base_index_f64
svst1_scatter_u64base_index_s64
svst1_scatter_u64base_index_u64
svst1_scatter_u64base_offset_f64
svst1_scatter_u64base_offset_s64
svst1_scatter_u64base_offset_u64
svst1_scatter_u64base_s64
svst1_scatter_u64base_u64
svst1_scatter_u64index_f64
svst1_scatter_u64index_s64
svst1_scatter_u64index_u64
svst1_scatter_u64offset_f64
svst1_scatter_u64offset_s64
svst1_scatter_u64offset_u64
svst1_u16
svst1_u32
svst1_u64
svst1_u8
svst1_vnum_bf16
svst1_vnum_f16
svst1_vnum_f32
svst1_vnum_f64
svst1_vnum_s16
svst1_vnum_s32
svst1_vnum_s64
svst1_vnum_s8
svst1_vnum_u16
svst1_vnum_u32
svst1_vnum_u64
svst1_vnum_u8
svst1b_s16
svst1b_s32
svst1b_s64
svst1b_scatter_s32offset_s32
svst1b_scatter_s32offset_u32
svst1b_scatter_s64offset_s64
svst1b_scatter_s64offset_u64
svst1b_scatter_u32base_offset_s32
svst1b_scatter_u32base_offset_u32
svst1b_scatter_u32base_s32
svst1b_scatter_u32base_u32
svst1b_scatter_u32offset_s32
svst1b_scatter_u32offset_u32
svst1b_scatter_u64base_offset_s64
svst1b_scatter_u64base_offset_u64
svst1b_scatter_u64base_s64
svst1b_scatter_u64base_u64
svst1b_scatter_u64offset_s64
svst1b_scatter_u64offset_u64
svst1b_u16
svst1b_u32
svst1b_u64
svst1b_vnum_s16
svst1b_vnum_s32
svst1b_vnum_s64
svst1b_vnum_u16
svst1b_vnum_u32
svst1b_vnum_u64
svst1h_s32
svst1h_s64
svst1h_scatter_s32index_s32
svst1h_scatter_s32index_u32
svst1h_scatter_s32offset_s32
svst1h_scatter_s32offset_u32
svst1h_scatter_s64index_s64
svst1h_scatter_s64index_u64
svst1h_scatter_s64offset_s64
svst1h_scatter_s64offset_u64
svst1h_scatter_u32base_index_s32
svst1h_scatter_u32base_index_u32
svst1h_scatter_u32base_offset_s32
svst1h_scatter_u32base_offset_u32
svst1h_scatter_u32base_s32
svst1h_scatter_u32base_u32
svst1h_scatter_u32index_s32
svst1h_scatter_u32index_u32
svst1h_scatter_u32offset_s32
svst1h_scatter_u32offset_u32
svst1h_scatter_u64base_index_s64
svst1h_scatter_u64base_index_u64
svst1h_scatter_u64base_offset_s64
svst1h_scatter_u64base_offset_u64
svst1h_scatter_u64base_s64
svst1h_scatter_u64base_u64
svst1h_scatter_u64index_s64
svst1h_scatter_u64index_u64
svst1h_scatter_u64offset_s64
svst1h_scatter_u64offset_u64
svst1h_u32
svst1h_u64
svst1h_vnum_s32
svst1h_vnum_s64
svst1h_vnum_u32
svst1h_vnum_u64
svst1w_s64
svst1w_scatter_s64index_s64
svst1w_scatter_s64index_u64
svst1w_scatter_s64offset_s64
svst1w_scatter_s64offset_u64
svst1w_scatter_u64base_index_s64
svst1w_scatter_u64base_index_u64
svst1w_scatter_u64base_offset_s64
svst1w_scatter_u64base_offset_u64
svst1w_scatter_u64base_s64
svst1w_scatter_u64base_u64
svst1w_scatter_u64index_s64
svst1w_scatter_u64index_u64
svst1w_scatter_u64offset_s64
svst1w_scatter_u64offset_u64
svst1w_u64
svst1w_vnum_s64
svst1w_vnum_u64
svst2_bf16
svst2_f16
svst2_f32
svst2_f64
svst2_s16
svst2_s32
svst2_s64
svst2_s8
svst2_u16
svst2_u32
svst2_u64
svst2_u8
svst2_vnum_bf16
svst2_vnum_f16
svst2_vnum_f32
svst2_vnum_f64
svst2_vnum_s16
svst2_vnum_s32
svst2_vnum_s64
svst2_vnum_s8
svst2_vnum_u16
svst2_vnum_u32
svst2_vnum_u64
svst2_vnum_u8
svst3_bf16
svst3_f16
svst3_f32
svst3_f64
svst3_s16
svst3_s32
svst3_s64
svst3_s8
svst3_u16
svst3_u32
svst3_u64
svst3_u8
svst3_vnum_bf16
svst3_vnum_f16
svst3_vnum_f32
svst3_vnum_f64
svst3_vnum_s16
svst3_vnum_s32
svst3_vnum_s64
svst3_vnum_s8
svst3_vnum_u16
svst3_vnum_u32
svst3_vnum_u64
svst3_vnum_u8
svst4_bf16
svst4_f16
svst4_f32
svst4_f64
svst4_s16
svst4_s32
svst4_s64
svst4_s8
svst4_u16
svst4_u32
svst4_u64
svst4_u8
svst4_vnum_bf16
svst4_vnum_f16
svst4_vnum_f32
svst4_vnum_f64
svst4_vnum_s16
svst4_vnum_s32
svst4_vnum_s64
svst4_vnum_s8
svst4_vnum_u16
svst4_vnum_u32
svst4_vnum_u64
svst4_vnum_u8
svstnt1_bf16
svstnt1_f16
svstnt1_f32
svstnt1_f64
svstnt1_s16
svstnt1_s32
svstnt1_s64
svstnt1_s8
svstnt1_scatter_s64index_f64
svstnt1_scatter_s64index_s64
svstnt1_scatter_s64index_u64
svstnt1_scatter_s64offset_f64
svstnt1_scatter_s64offset_s64
svstnt1_scatter_s64offset_u64
svstnt1_scatter_u32base_f32
svstnt1_scatter_u32base_index_f32
svstnt1_scatter_u32base_index_s32
svstnt1_scatter_u32base_index_u32
svstnt1_scatter_u32base_offset_f32
svstnt1_scatter_u32base_offset_s32
svstnt1_scatter_u32base_offset_u32
svstnt1_scatter_u32base_s32
svstnt1_scatter_u32base_u32
svstnt1_scatter_u32offset_f32
svstnt1_scatter_u32offset_s32
svstnt1_scatter_u32offset_u32
svstnt1_scatter_u64base_f64
svstnt1_scatter_u64base_index_f64
svstnt1_scatter_u64base_index_s64
svstnt1_scatter_u64base_index_u64
svstnt1_scatter_u64base_offset_f64
svstnt1_scatter_u64base_offset_s64
svstnt1_scatter_u64base_offset_u64
svstnt1_scatter_u64base_s64
svstnt1_scatter_u64base_u64
svstnt1_scatter_u64index_f64
svstnt1_scatter_u64index_s64
svstnt1_scatter_u64index_u64
svstnt1_scatter_u64offset_f64
svstnt1_scatter_u64offset_s64
svstnt1_scatter_u64offset_u64
svstnt1_u16
svstnt1_u32
svstnt1_u64
svstnt1_u8
svstnt1_vnum_bf16
svstnt1_vnum_f16
svstnt1_vnum_f32
svstnt1_vnum_f64
svstnt1_vnum_s16
svstnt1_vnum_s32
svstnt1_vnum_s64
svstnt1_vnum_s8
svstnt1_vnum_u16
svstnt1_vnum_u32
svstnt1_vnum_u64
svstnt1_vnum_u8
svstnt1b_scatter_s64offset_s64
svstnt1b_scatter_s64offset_u64
svstnt1b_scatter_u32base_offset_s32
svstnt1b_scatter_u32base_offset_u32
svstnt1b_scatter_u32base_s32
svstnt1b_scatter_u32base_u32
svstnt1b_scatter_u32offset_s32
svstnt1b_scatter_u32offset_u32
svstnt1b_scatter_u64base_offset_s64
svstnt1b_scatter_u64base_offset_u64
svstnt1b_scatter_u64base_s64
svstnt1b_scatter_u64base_u64
svstnt1b_scatter_u64offset_s64
svstnt1b_scatter_u64offset_u64
svstnt1h_scatter_s64index_s64
svstnt1h_scatter_s64index_u64
svstnt1h_scatter_s64offset_s64
svstnt1h_scatter_s64offset_u64
svstnt1h_scatter_u32base_index_s32
svstnt1h_scatter_u32base_index_u32
svstnt1h_scatter_u32base_offset_s32
svstnt1h_scatter_u32base_offset_u32
svstnt1h_scatter_u32base_s32
svstnt1h_scatter_u32base_u32
svstnt1h_scatter_u32offset_s32
svstnt1h_scatter_u32offset_u32
svstnt1h_scatter_u64base_index_s64
svstnt1h_scatter_u64base_index_u64
svstnt1h_scatter_u64base_offset_s64
svstnt1h_scatter_u64base_offset_u64
svstnt1h_scatter_u64base_s64
svstnt1h_scatter_u64base_u64
svstnt1h_scatter_u64index_s64
svstnt1h_scatter_u64index_u64
svstnt1h_scatter_u64offset_s64
svstnt1h_scatter_u64offset_u64
svstnt1w_scatter_s64index_s64
svstnt1w_scatter_s64index_u64
svstnt1w_scatter_s64offset_s64
svstnt1w_scatter_s64offset_u64
svstnt1w_scatter_u64base_index_s64
svstnt1w_scatter_u64base_index_u64
svstnt1w_scatter_u64base_offset_s64
svstnt1w_scatter_u64base_offset_u64
svstnt1w_scatter_u64base_s64
svstnt1w_scatter_u64base_u64
svstnt1w_scatter_u64index_s64
svstnt1w_scatter_u64index_u64
svstnt1w_scatter_u64offset_s64
svstnt1w_scatter_u64offset_u64
svsub_f16_m
svsub_f16_x
svsub_f16_z
svsub_f32_m
svsub_f32_x
svsub_f32_z
svsub_f64_m
svsub_f64_x
svsub_f64_z
svsub_n_f16_m
svsub_n_f16_x
svsub_n_f16_z
svsub_n_f32_m
svsub_n_f32_x
svsub_n_f32_z
svsub_n_f64_m
svsub_n_f64_x
svsub_n_f64_z
svsub_n_s16_m
svsub_n_s16_x
svsub_n_s16_z
svsub_n_s32_m
svsub_n_s32_x
svsub_n_s32_z
svsub_n_s64_m
svsub_n_s64_x
svsub_n_s64_z
svsub_n_s8_m
svsub_n_s8_x
svsub_n_s8_z
svsub_n_u16_m
svsub_n_u16_x
svsub_n_u16_z
svsub_n_u32_m
svsub_n_u32_x
svsub_n_u32_z
svsub_n_u64_m
svsub_n_u64_x
svsub_n_u64_z
svsub_n_u8_m
svsub_n_u8_x
svsub_n_u8_z
svsub_s16_m
svsub_s16_x
svsub_s16_z
svsub_s32_m
svsub_s32_x
svsub_s32_z
svsub_s64_m
svsub_s64_x
svsub_s64_z
svsub_s8_m
svsub_s8_x
svsub_s8_z
svsub_u16_m
svsub_u16_x
svsub_u16_z
svsub_u32_m
svsub_u32_x
svsub_u32_z
svsub_u64_m
svsub_u64_x
svsub_u64_z
svsub_u8_m
svsub_u8_x
svsub_u8_z
svsubhnb_n_s16
svsubhnb_n_s32
svsubhnb_n_s64
svsubhnb_n_u16
svsubhnb_n_u32
svsubhnb_n_u64
svsubhnb_s16
svsubhnb_s32
svsubhnb_s64
svsubhnb_u16
svsubhnb_u32
svsubhnb_u64
svsubhnt_n_s16
svsubhnt_n_s32
svsubhnt_n_s64
svsubhnt_n_u16
svsubhnt_n_u32
svsubhnt_n_u64
svsubhnt_s16
svsubhnt_s32
svsubhnt_s64
svsubhnt_u16
svsubhnt_u32
svsubhnt_u64
svsublb_n_s16
svsublb_n_s32
svsublb_n_s64
svsublb_n_u16
svsublb_n_u32
svsublb_n_u64
svsublb_s16
svsublb_s32
svsublb_s64
svsublb_u16
svsublb_u32
svsublb_u64
svsublbt_n_s16
svsublbt_n_s32
svsublbt_n_s64
svsublbt_s16
svsublbt_s32
svsublbt_s64
svsublt_n_s16
svsublt_n_s32
svsublt_n_s64
svsublt_n_u16
svsublt_n_u32
svsublt_n_u64
svsublt_s16
svsublt_s32
svsublt_s64
svsublt_u16
svsublt_u32
svsublt_u64
svsubltb_n_s16
svsubltb_n_s32
svsubltb_n_s64
svsubltb_s16
svsubltb_s32
svsubltb_s64
svsubr_f16_m
svsubr_f16_x
svsubr_f16_z
svsubr_f32_m
svsubr_f32_x
svsubr_f32_z
svsubr_f64_m
svsubr_f64_x
svsubr_f64_z
svsubr_n_f16_m
svsubr_n_f16_x
svsubr_n_f16_z
svsubr_n_f32_m
svsubr_n_f32_x
svsubr_n_f32_z
svsubr_n_f64_m
svsubr_n_f64_x
svsubr_n_f64_z
svsubr_n_s16_m
svsubr_n_s16_x
svsubr_n_s16_z
svsubr_n_s32_m
svsubr_n_s32_x
svsubr_n_s32_z
svsubr_n_s64_m
svsubr_n_s64_x
svsubr_n_s64_z
svsubr_n_s8_m
svsubr_n_s8_x
svsubr_n_s8_z
svsubr_n_u16_m
svsubr_n_u16_x
svsubr_n_u16_z
svsubr_n_u32_m
svsubr_n_u32_x
svsubr_n_u32_z
svsubr_n_u64_m
svsubr_n_u64_x
svsubr_n_u64_z
svsubr_n_u8_m
svsubr_n_u8_x
svsubr_n_u8_z
svsubr_s16_m
svsubr_s16_x
svsubr_s16_z
svsubr_s32_m
svsubr_s32_x
svsubr_s32_z
svsubr_s64_m
svsubr_s64_x
svsubr_s64_z
svsubr_s8_m
svsubr_s8_x
svsubr_s8_z
svsubr_u16_m
svsubr_u16_x
svsubr_u16_z
svsubr_u32_m
svsubr_u32_x
svsubr_u32_z
svsubr_u64_m
svsubr_u64_x
svsubr_u64_z
svsubr_u8_m
svsubr_u8_x
svsubr_u8_z
svsubwb_n_s16
svsubwb_n_s32
svsubwb_n_s64
svsubwb_n_u16
svsubwb_n_u32
svsubwb_n_u64
svsubwb_s16
svsubwb_s32
svsubwb_s64
svsubwb_u16
svsubwb_u32
svsubwb_u64
svsubwt_n_s16
svsubwt_n_s32
svsubwt_n_s64
svsubwt_n_u16
svsubwt_n_u32
svsubwt_n_u64
svsubwt_s16
svsubwt_s32
svsubwt_s64
svsubwt_u16
svsubwt_u32
svsubwt_u64
svsudot_lane_s32
svsudot_n_s32
svsudot_s32
svtbl2_bf16
svtbl2_f16
svtbl2_f32
svtbl2_f64
svtbl2_s16
svtbl2_s32
svtbl2_s64
svtbl2_s8
svtbl2_u16
svtbl2_u32
svtbl2_u64
svtbl2_u8
svtbl_bf16
svtbl_f16
svtbl_f32
svtbl_f64
svtbl_s16
svtbl_s32
svtbl_s64
svtbl_s8
svtbl_u16
svtbl_u32
svtbl_u64
svtbl_u8
svtbx_bf16
svtbx_f16
svtbx_f32
svtbx_f64
svtbx_s16
svtbx_s32
svtbx_s64
svtbx_s8
svtbx_u16
svtbx_u32
svtbx_u64
svtbx_u8
svtmad_f16
svtmad_f32
svtmad_f64
svtrn1_b16
svtrn1_b32
svtrn1_b64
svtrn1_b8
svtrn1_bf16
svtrn1_f16
svtrn1_f32
svtrn1_f64
svtrn1_s16
svtrn1_s32
svtrn1_s64
svtrn1_s8
svtrn1_u16
svtrn1_u32
svtrn1_u64
svtrn1_u8
svtrn1q_bf16
svtrn1q_f16
svtrn1q_f32
svtrn1q_f64
svtrn1q_s16
svtrn1q_s32
svtrn1q_s64
svtrn1q_s8
svtrn1q_u16
svtrn1q_u32
svtrn1q_u64
svtrn1q_u8
svtrn2_b16
svtrn2_b32
svtrn2_b64
svtrn2_b8
svtrn2_bf16
svtrn2_f16
svtrn2_f32
svtrn2_f64
svtrn2_s16
svtrn2_s32
svtrn2_s64
svtrn2_s8
svtrn2_u16
svtrn2_u32
svtrn2_u64
svtrn2_u8
svtrn2q_bf16
svtrn2q_f16
svtrn2q_f32
svtrn2q_f64
svtrn2q_s16
svtrn2q_s32
svtrn2q_s64
svtrn2q_s8
svtrn2q_u16
svtrn2q_u32
svtrn2q_u64
svtrn2q_u8
svtsmul_f16
svtsmul_f32
svtsmul_f64
svtssel_f16
svtssel_f32
svtssel_f64
svundef2_bf16
svundef2_f16
svundef2_f32
svundef2_f64
svundef2_s16
svundef2_s32
svundef2_s64
svundef2_s8
svundef2_u16
svundef2_u32
svundef2_u64
svundef2_u8
svundef3_bf16
svundef3_f16
svundef3_f32
svundef3_f64
svundef3_s16
svundef3_s32
svundef3_s64
svundef3_s8
svundef3_u16
svundef3_u32
svundef3_u64
svundef3_u8
svundef4_bf16
svundef4_f16
svundef4_f32
svundef4_f64
svundef4_s16
svundef4_s32
svundef4_s64
svundef4_s8
svundef4_u16
svundef4_u32
svundef4_u64
svundef4_u8
svundef_bf16
svundef_f16
svundef_f32
svundef_f64
svundef_s16
svundef_s32
svundef_s64
svundef_s8
svundef_u16
svundef_u32
svundef_u64
svundef_u8
svunpkhi_b
svunpkhi_s16
svunpkhi_s32
svunpkhi_s64
svunpkhi_u16
svunpkhi_u32
svunpkhi_u64
svunpklo_b
svunpklo_s16
svunpklo_s32
svunpklo_s64
svunpklo_u16
svunpklo_u32
svunpklo_u64
svuqadd_n_s16_m
svuqadd_n_s16_x
svuqadd_n_s16_z
svuqadd_n_s32_m
svuqadd_n_s32_x
svuqadd_n_s32_z
svuqadd_n_s64_m
svuqadd_n_s64_x
svuqadd_n_s64_z
svuqadd_n_s8_m
svuqadd_n_s8_x
svuqadd_n_s8_z
svuqadd_s16_m
svuqadd_s16_x
svuqadd_s16_z
svuqadd_s32_m
svuqadd_s32_x
svuqadd_s32_z
svuqadd_s64_m
svuqadd_s64_x
svuqadd_s64_z
svuqadd_s8_m
svuqadd_s8_x
svuqadd_s8_z
svusdot_lane_s32
svusdot_n_s32
svusdot_s32
svusmmla_s32
svuzp1_b16
svuzp1_b32
svuzp1_b64
svuzp1_b8
svuzp1_bf16
svuzp1_f16
svuzp1_f32
svuzp1_f64
svuzp1_s16
svuzp1_s32
svuzp1_s64
svuzp1_s8
svuzp1_u16
svuzp1_u32
svuzp1_u64
svuzp1_u8
svuzp1q_bf16
svuzp1q_f16
svuzp1q_f32
svuzp1q_f64
svuzp1q_s16
svuzp1q_s32
svuzp1q_s64
svuzp1q_s8
svuzp1q_u16
svuzp1q_u32
svuzp1q_u64
svuzp1q_u8
svuzp2_b16
svuzp2_b32
svuzp2_b64
svuzp2_b8
svuzp2_bf16
svuzp2_f16
svuzp2_f32
svuzp2_f64
svuzp2_s16
svuzp2_s32
svuzp2_s64
svuzp2_s8
svuzp2_u16
svuzp2_u32
svuzp2_u64
svuzp2_u8
svuzp2q_bf16
svuzp2q_f16
svuzp2q_f32
svuzp2q_f64
svuzp2q_s16
svuzp2q_s32
svuzp2q_s64
svuzp2q_s8
svuzp2q_u16
svuzp2q_u32
svuzp2q_u64
svuzp2q_u8
svwhilege_b16_s32
svwhilege_b16_s64
svwhilege_b16_u32
svwhilege_b16_u64
svwhilege_b32_s32
svwhilege_b32_s64
svwhilege_b32_u32
svwhilege_b32_u64
svwhilege_b64_s32
svwhilege_b64_s64
svwhilege_b64_u32
svwhilege_b64_u64
svwhilege_b8_s32
svwhilege_b8_s64
svwhilege_b8_u32
svwhilege_b8_u64
svwhilegt_b16_s32
svwhilegt_b16_s64
svwhilegt_b16_u32
svwhilegt_b16_u64
svwhilegt_b32_s32
svwhilegt_b32_s64
svwhilegt_b32_u32
svwhilegt_b32_u64
svwhilegt_b64_s32
svwhilegt_b64_s64
svwhilegt_b64_u32
svwhilegt_b64_u64
svwhilegt_b8_s32
svwhilegt_b8_s64
svwhilegt_b8_u32
svwhilegt_b8_u64
svwhilele_b16_s32
svwhilele_b16_s64
svwhilele_b16_u32
svwhilele_b16_u64
svwhilele_b32_s32
svwhilele_b32_s64
svwhilele_b32_u32
svwhilele_b32_u64
svwhilele_b64_s32
svwhilele_b64_s64
svwhilele_b64_u32
svwhilele_b64_u64
svwhilele_b8_s32
svwhilele_b8_s64
svwhilele_b8_u32
svwhilele_b8_u64
svwhilelt_b16_s32
svwhilelt_b16_s64
svwhilelt_b16_u32
svwhilelt_b16_u64
svwhilelt_b32_s32
svwhilelt_b32_s64
svwhilelt_b32_u32
svwhilelt_b32_u64
svwhilelt_b64_s32
svwhilelt_b64_s64
svwhilelt_b64_u32
svwhilelt_b64_u64
svwhilelt_b8_s32
svwhilelt_b8_s64
svwhilelt_b8_u32
svwhilelt_b8_u64
svwhilerw_bf16
svwhilerw_f16
svwhilerw_f32
svwhilerw_f64
svwhilerw_s16
svwhilerw_s32
svwhilerw_s64
svwhilerw_s8
svwhilerw_u16
svwhilerw_u32
svwhilerw_u64
svwhilerw_u8
svwhilewr_bf16
svwhilewr_f16
svwhilewr_f32
svwhilewr_f64
svwhilewr_s16
svwhilewr_s32
svwhilewr_s64
svwhilewr_s8
svwhilewr_u16
svwhilewr_u32
svwhilewr_u64
svwhilewr_u8
svwrffr
svxar_n_s16
svxar_n_s32
svxar_n_s64
svxar_n_s8
svxar_n_u16
svxar_n_u32
svxar_n_u64
svxar_n_u8
svzip1_b16
svzip1_b32
svzip1_b64
svzip1_b8
svzip1_bf16
svzip1_f16
svzip1_f32
svzip1_f64
svzip1_s16
svzip1_s32
svzip1_s64
svzip1_s8
svzip1_u16
svzip1_u32
svzip1_u64
svzip1_u8
svzip1q_bf16
svzip1q_f16
svzip1q_f32
svzip1q_f64
svzip1q_s16
svzip1q_s32
svzip1q_s64
svzip1q_s8
svzip1q_u16
svzip1q_u32
svzip1q_u64
svzip1q_u8
svzip2_b16
svzip2_b32
svzip2_b64
svzip2_b8
svzip2_bf16
svzip2_f16
svzip2_f32
svzip2_f64
svzip2_s16
svzip2_s32
svzip2_s64
svzip2_s8
svzip2_u16
svzip2_u32
svzip2_u64
svzip2_u8
svzip2q_bf16
svzip2q_f16
svzip2q_f32
svzip2q_f64
svzip2q_s16
svzip2q_s32
svzip2q_s64
svzip2q_s8
svzip2q_u16
svzip2q_u32
svzip2q_u64
svzip2q_u8
vabdd_f64
vabds_f32
vabsd_s64
vaddlv_s32
vaddlv_u32
vaddlvq_s32
vaddlvq_u32
vaddv_f32
vaddv_s32
vaddv_u32
vaddvq_f32
vaddvq_f64
vaddvq_s32
vaddvq_s64
vaddvq_u32
vaddvq_u64
vcaged_f64
vcages_f32
vcagtd_f64
vcagts_f32
vcaled_f64
vcales_f32
vcaltd_f64
vcalts_f32
vcvtad_s64_f64
vcvtad_u64_f64
vcvtas_s32_f32
vcvtas_u32_f32
vcvtd_n_f64_s64
vcvtd_n_f64_u64
vcvtd_n_s64_f64
vcvtd_n_u64_f64
vcvtd_s64_f64
vcvtd_u64_f64
vcvtmd_s64_f64
vcvtmd_u64_f64
vcvtms_s32_f32
vcvtms_u32_f32
vcvtnd_s64_f64
vcvtnd_u64_f64
vcvtns_s32_f32
vcvtns_u32_f32
vcvtpd_s64_f64
vcvtpd_u64_f64
vcvtps_s32_f32
vcvtps_u32_f32
vcvts_n_f32_s32
vcvts_n_f32_u32
vcvts_n_s32_f32
vcvts_n_u32_f32
vcvts_s32_f32
vcvts_u32_f32
vcvtxd_f32_f64
vmaxnmv_f32
vmaxnmvq_f32
vmaxnmvq_f64
vmaxv_f32
vmaxv_s32
vmaxv_u32
vmaxvq_f32
vmaxvq_f64
vmaxvq_s32
vmaxvq_u32
vminnmv_f32
vminnmvq_f32
vminnmvq_f64
vminv_f32
vminv_s32
vminv_u32
vminvq_f32
vminvq_f64
vminvq_s32
vminvq_u32
vmull_p64
vmulxd_f64
vmulxs_f32
vpaddd_s64
vpaddd_u64
vpmaxnmqd_f64
vpmaxnms_f32
vpmaxqd_f64
vpmaxs_f32
vpminnmqd_f64
vpminnms_f32
vpminqd_f64
vpmins_f32
vqabsb_s8
vqabsd_s64
vqabsh_s16
vqabss_s32
vqaddb_s8
vqaddb_u8
vqaddd_s64
vqaddd_u64
vqaddh_s16
vqaddh_u16
vqadds_s32
vqadds_u32
vqdmulhh_s16
vqdmulhs_s32
vqdmullh_s16
vqdmulls_s32
vqmovnd_s64
vqmovnd_u64
vqmovnh_s16
vqmovnh_u16
vqmovns_s32
vqmovns_u32
vqmovund_s64
vqmovunh_s16
vqmovuns_s32
vqnegb_s8
vqnegd_s64
vqnegh_s16
vqnegs_s32
vqrdmulhh_s16
vqrdmulhs_s32
vqrshlb_s8
vqrshlb_u8
vqrshld_s64
vqrshld_u64
vqrshlh_s16
vqrshlh_u16
vqrshls_s32
vqrshls_u32
vqrshrnd_n_s64
vqrshrnd_n_u64
vqrshrnh_n_s16
vqrshrnh_n_u16
vqrshrns_n_s32
vqrshrns_n_u32
vqrshrund_n_s64
vqrshrunh_n_s16
vqrshruns_n_s32
vqshlb_n_s8
vqshlb_n_u8
vqshlb_s8
vqshlb_u8
vqshld_s64
vqshld_u64
vqshlh_n_s16
vqshlh_n_u16
vqshlh_s16
vqshlh_u16
vqshls_n_s32
vqshls_n_u32
vqshls_s32
vqshls_u32
vqshlub_n_s8
vqshluh_n_s16
vqshlus_n_s32
vqshrnd_n_s64
vqshrnd_n_u64
vqshrnh_n_s16
vqshrnh_n_u16
vqshrns_n_s32
vqshrns_n_u32
vqshrund_n_s64
vqshrunh_n_s16
vqshruns_n_s32
vqsubb_s8
vqsubb_u8
vqsubd_s64
vqsubd_u64
vqsubh_s16
vqsubh_u16
vqsubs_s32
vqsubs_u32
vrecped_f64
vrecpes_f32
vrecpxd_f64
vrecpxs_f32
vrshld_s64
vrshld_u64
vrsqrted_f64
vrsqrtes_f32
vrsqrtsd_f64
vrsqrtss_f32
vsha1cq_u32
vsha1h_u32
vsha1mq_u32
vsha1pq_u32
vshld_s64
vshld_u64
vslid_n_s64
vslid_n_u64
vsqaddb_u8
vsqaddd_u64
vsqaddh_u16
vsqadds_u32
vsrid_n_s64
vsrid_n_u64
vuqaddb_s8
vuqaddd_s64
vuqaddh_s16
vuqadds_s32
vabdh_f16
vcvtah_s32_f16
vcvtah_s64_f16
vcvtah_u32_f16
vcvtah_u64_f16
vcvth_n_f16_s32
vcvth_n_f16_s64
vcvth_n_f16_u32
vcvth_n_f16_u64
vcvth_n_s32_f16
vcvth_n_s64_f16
vcvth_n_u32_f16
vcvth_n_u64_f16
vcvth_s32_f16
vcvth_s64_f16
vcvth_u32_f16
vcvth_u64_f16
vcvtmh_s32_f16
vcvtmh_s64_f16
vcvtmh_u32_f16
vcvtmh_u64_f16
vcvtnh_s32_f16
vcvtnh_s64_f16
vcvtnh_u32_f16
vcvtnh_u64_f16
vcvtph_s32_f16
vcvtph_s64_f16
vcvtph_u32_f16
vcvtph_u64_f16
vmulxh_f16
vrecpeh_f16
vrecpxh_f16
vrsqrteh_f16
vrsqrtsh_f16
__a64_vcvtq_low_bf16_v
vcmla_rot180_v
vcmla_rot270_v
vcmla_rot90_v
vcmla_v
vcmlaq_rot180_v
vcmlaq_rot270_v
vcmlaq_rot90_v
vcmlaq_v
vcvt_n_f64_v
vcvtq_high_bf16_v
vcvtq_n_f64_v
vcvtx_f32_v
vfmlal_high_v
vfmlal_low_v
vfmlalq_high_v
vfmlalq_low_v
vfmlsl_high_v
vfmlsl_low_v
vfmlslq_high_v
vfmlslq_low_v
vqdmulh_lane_v
vqdmulh_laneq_v
vqdmulhq_lane_v
vqdmulhq_laneq_v
vqrdmulh_lane_v
vqrdmulh_laneq_v
vqrdmulhq_lane_v
vqrdmulhq_laneq_v
vtbx
vpmovm2
cvtph2ps
mask
cond-cleanup.save
kernel_args
setup.end
LaunchKernel
Can't find declaration for 
grid_dim
block_dim
shmem_size
stream
PopCallConfiguration
cuda
__hip
__cuda
setup.next
SetupArgument
hipLaunchByPtr
cudaLaunch
RegisterFatBinary
_module_ctor
.hip_fatbin
.hipFatBinSegment
__hip_module_id
__hip_
__hip_fatbin
__NV_CUDA,__nv_relfatbin
__nv_relfatbin
__NV_CUDA,__nv_fatbin
.nv_fatbin
__NV_CUDA,__fatbin
.nvFatBinSegment
__NV_CUDA,__nv_module_id
__nv_module_id
__nv_
_fatbin_wrapper
exit
__hip_gpubin_handle
__cuda_gpubin_handle
__cudaRegisterFatBinaryEnd
%llx
__fatbinwrap
__cudaRegisterLinkedBinary
atexit
_register_globals
RegisterFunction
RegisterVar
RegisterSurface
RegisterTexture
dummy
UnregisterFatBinary
_module_dtor
kcall.configok
kcall.end
vfnkxt
cannot yet compile %0 in this ABI
calls through member pointers
loads of member pointers
member function pointer conversions
member function pointer comparison
member function pointer null testing
this
array cookie initialization
reading a new[] cookie
complete object detection in ctor
indirect-tls-seg-refs
trap-func-name
frame-pointer
less-precise-fpmad
denormal-fp-math
denormal-fp-math-f32
no-trapping-math
strict-float-cast-overflow
no-infs-fp-math
no-nans-fp-math
unsafe-fp-math
use-soft-float
stack-protector-buffer-size
no-signed-zeros-fp-math
reciprocal-estimates
prefer-vector-width
stackrealign
backchain
ptrauth-returns
ptrauth-calls
ptrauth-indirect-gotos
ptrauth-auth-traps
split-stack
cmse_nonsecure_call
no_caller_saved_registers
uniform-work-group-size
cmse_nonsecure_entry
disable-tail-calls
agg.result
coerce
swifterror.temp
.coerce
castFixedSve
cmse.clear
sret
nullcheck
no.nullcheck
return.sloc.load
forwarded non-trivially copyable parameter
inalloca.save
clang.arc.no_objc_arc_exceptions
funclet
invoke.cont
argmem
inalloca.indirect.tmp
indirect-arg-temp
byval-temp
guard_nocf
__asan_handle_no_return
preserve-sign
positive-zero
llvm.assume
no-builtins
arg.unpromote
coerce.dive
coerce.val
coerce.val.pi
coerce.highbits
coerce.val.ii
coerce.val.ip
icr.temp
icr.isnull
icr.argument
icr.cont
icr.copy
icr.cast
icr.to-use
icr.writeback
icr.done
icr.writeback-cast
cast.notnull
cast.end
cast.result
cast.null
sub.ptr
__asan_poison_intra_object_redzone
__asan_unpoison_intra_object_redzone
new.ctorloop
isempty
arrayctor.end
arrayctor.loop
arrayctor.cur
arrayctor.next
arrayctor.done
arrayctor.cont
retval.inhctor
cmp.vtables
vtable
cast.nonnull
cast.check
cast.cont
all-vtables
lambda conversion to variadic function
add.ptr
.idx
.offs
dtor.call_delete
dtor.continue
__sanitizer_dtor_callback
cleanup.cond
tmp.exprcleanup
forwarded-prebranch
cleanup.dest
cleanup.cont
cleanup.dest.slot
cleanup
cleanup.done
cleanup.action
cleanup.is_active
cleanup.isactive
coro.alloc
coro.init
coro.final
coro.ret
coro.ret.on.failure
coro.resumed.body
coro.resumed.cont
coro.resumed.eh
this builtin expect that __builtin_coro_begin has been used earlier in this function
this builtin expect that __builtin_coro_id has been used earlier in this function
.ready
.suspend
.cleanup
.suspend.bool
resume.eh
only one __builtin_coro_id can be used in a function
__builtin_coro_id shall not be used in a C++ coroutine
gro.active
coro.free
after.coro.free
Deallocation expressoin does not refer to coro.free
funclet
opencl_image1d_ro_t
opencl_image1d_array_ro_t
opencl_image1d_buffer_ro_t
opencl_image2d_ro_t
opencl_image2d_array_ro_t
opencl_image2d_depth_ro_t
opencl_image2d_array_depth_ro_t
opencl_image2d_msaa_ro_t
opencl_image2d_array_msaa_ro_t
opencl_image2d_msaa_depth_ro_t
opencl_image2d_array_msaa_depth_ro_t
opencl_image3d_ro_t
opencl_image1d_wo_t
opencl_image1d_array_wo_t
opencl_image1d_buffer_wo_t
opencl_image2d_wo_t
opencl_image2d_array_wo_t
opencl_image2d_depth_wo_t
opencl_image2d_array_depth_wo_t
opencl_image2d_msaa_wo_t
opencl_image2d_array_msaa_wo_t
opencl_image2d_msaa_depth_wo_t
opencl_image2d_array_msaa_depth_wo_t
opencl_image3d_wo_t
opencl_image1d_rw_t
opencl_image1d_array_rw_t
opencl_image1d_buffer_rw_t
opencl_image2d_rw_t
opencl_image2d_array_rw_t
opencl_image2d_depth_rw_t
opencl_image2d_array_depth_rw_t
opencl_image2d_msaa_rw_t
opencl_image2d_array_msaa_rw_t
opencl_image2d_msaa_depth_rw_t
opencl_image2d_array_msaa_depth_rw_t
opencl_image3d_rw_t
opencl_sampler_t
opencl_event_t
opencl_clk_event_t
opencl_queue_t
opencl_reserve_id_t
opencl_intel_sub_group_avc_mce_payload_t
opencl_intel_sub_group_avc_ime_payload_t
opencl_intel_sub_group_avc_ref_payload_t
opencl_intel_sub_group_avc_sic_payload_t
opencl_intel_sub_group_avc_mce_result_t
opencl_intel_sub_group_avc_ime_result_t
opencl_intel_sub_group_avc_ref_result_t
opencl_intel_sub_group_avc_sic_result_t
opencl_intel_sub_group_avc_ime_result_single_reference_streamout_t
opencl_intel_sub_group_avc_ime_result_dual_reference_streamout_t
opencl_intel_sub_group_avc_ime_single_reference_streamin_t
opencl_intel_sub_group_avc_ime_dual_reference_streamin_t
long int
long long int
long unsigned int
long long unsigned int
unsigned _ExtInt
_ExtInt
complex
__size
__align
__isa
__flags
__reserved
__FuncPtr
__descriptor
reserved
__block_descriptor
__vtbl_ptr_type
`dynamic initializer for '
`dynamic atexit destructor for '
heapallocsite
__forwarding
__copy_helper
__destroy_helper
__byref_variable_layout
__block_literal_
DebugConstGlobalVariable
constant l-value expression
bss-section
data-section
rodata-section
relro-section
.const
__const.
__vla_expr
fake.use
nrvo
saved_stack
vla-setup.loop
vla-init.loop
vla-init.cont
vla.iszerosized
vla.begin
vla.end
vla.cur
vla.next
vla-init.isdone
arraydestroy.body
arraydestroy.done
arraydestroy.isempty
arraydestroy.elementPast
arraydestroy.element
nrvo.unused
nrvo.skipdtor
nrvo.val
pad.arraybegin
pad.arrayend
atexit
unatexit
this initialization requires a guard variable, which the kernel does not support
__cxx_init_fn_ptr
_GLOBAL__I_
_GLOBAL__sub_I_
device-init
_GLOBAL__D_a
guard.uninitialized
__cxx_global_array_dtor
_ZSt9terminatev
__std_terminate
?terminate@@YAXXZ
objc_terminate
abort
__gcc_personality_v0
__gcc_personality_sj0
__gcc_personality_seh0
__objc_personality_v0
__gxx_personality_v0
__gxx_personality_sj0
__gxx_personality_seh0
__gnu_objc_personality_v0
objc_exception_throw
__gnu_objc_personality_sj0
__gnu_objc_personality_seh0
__gnustep_objcxx_personality_v0
__gnustep_objc_personality_v0
_except_handler3
__C_specific_handler
__CxxFrameHandler3
__gxx_wasm_personality_v0
__xlcxx_personality_v1
exn.slot
ehselector.slot
throw.cont
catch.dispatch
ehcleanup
filter.dispatch
terminate
lpad
try.cont
finally.exn
finally.for-eh
finally.catchall
terminate.lpad
terminate.handler
eh.resume
lpad.val
__try.__leave
'this' captured by SEH
VLA captured by SEH
exception_pointers
abnormal_termination
frame_pointer
__exception_code
__except.ret
__try.cont
ehspec.unexpected
ehspec.fails
__cxa_call_unexpected
catch.fallthrough
matches
catch.start
rethrow
__cxa_free_exception
cleanup.dest.saved
finally.rethrow
finally.cont
finally.shouldthrow
finally.endcatch
finally.cleanup.cont
firebloom-check-ptr-lt-upper-bound
firebloom-check-ptr-ge-lower-bound
sub.ptr.lhs.cast
sub.ptr.rhs.cast
firebloom-check-ptr-le-upper-bound
wide_ptr.size
firebloom-check-new-count-positive
count.expr
firebloom-check-new-count-le-bounds
cmp.len
firebloom-check-ptr-in-old-range
fb.rcheck.end
fb.rcheck.rhs
firebloom-check-ptr-range-in-bounds
check.upper
check.lower
check.start
check.end
cond.start.and.end
cond.merge
agg-temp
not.null
vptr.null
vptr.not.null
__ubsan_vptr_type_cache
undef.agg.tmp
l-value expression
castToVec4
loadVec4
extractVec
frombool
tobool
storetmp
vecext
matrixext
bf.load
bf.shl
bf.ashr
bf.lshr
bf.clear
bf.cast
conv.ptr.element
vector.elt
vecins
matins
ivar.offset
bf.value
bf.set
bf.result.shl
bf.result.ashr
bf.result.cast
.str
.src
handler.
non_fatal.
fatal.
cfi.cont
cfi.slowpath
__cfi_slowpath_diag
__cfi_slowpath
__cfi_check
entry
__cfi_check_fail
trap
trap-func-name
arraydecay
idxprom
arrayidx
lb_add_len
idx_sub_1
len_sub_1
.compoundliteral
cond.true
cond.false
cond.end
conditional operator
unexpected cast lvalue
temp.lvalue
typecheck
callee.knr.cast
.ref.tmp
ref.tmp
aapcs
llvm.named.register.
add_overflow
builtin_unreachable
cfi_check_fail
divrem_overflow
dynamic_type_cache_miss
float_cast_overflow
function_type_mismatch
implicit_conversion
invalid_builtin
invalid_objc_cast
load_invalid_value
mul_overflow
negate_overflow
nullability_arg
nullability_return
nonnull_arg
nonnull_return
out_of_bounds
pointer_overflow
shift_out_of_bounds
sub_overflow
type_mismatch
alignment_assumption
vla_bound_not_positive
firebloom
__ubsan_handle_
_minimal
_abort
aggregate three-way comparison
sel.lt
sel.eq
sel.gt
and.eq
cmp.lt
cmp.gt
cmp.eq
agg.tmp.ensured
idx.neg
bound.ptr.arith
bound.ptr.arith.old
bound.ptr.arith.new
firebloom-check-new-indexable-ptr-ge-old
aggregate expression
arrayinit.begin
arrayinit.body
arrayinit.index
arrayinit.next
arrayinit.done
arrayinit.end
aggregate binary expression
weird std::initializer_list
arraystart
arrayend
non-simple lvalue dynamic_cast
lvalue dynamic_cast with a destination
atomic-to-nonatomic.temp
GNU array range designator extension
constinit
arrayinit.endOfInit
arrayinit.element
arrayinit.start
arrayinit.cur
aggregate va_arg expression
string.init.end
array.init.end
array.exp.next
new.loop
new.loop.end
array.end
array.isempty
array.cur
array.next
array.atend
new.notnull
new.cont
new.isnull
destroying.delete.tag
delete.notnull
delete.end
isnull
del.first
dynamic_cast.end
dynamic_cast.null
dynamic_cast.notnull
typeid.bad_typeid
typeid.end
.realp
.imagp
mul_ac
mul_bd
mul_ad
mul_bc
mul_r
mul_i
isnan_cmp
complex_mul_cont
complex_mul_imag_nan
complex_mul_libcall
real_mul_phi
imag_mul_phi
mul.rl
mul.il
mul.ir
mul.rr
mul.r
mul.i
__mulhc3
__mulsc3
__muldc3
__multc3
__mulxc3
__divhc3
__divsc3
__divdc3
__divtc3
__divxc3
add.r
add.i
sub.r
sub.i
neg.r
neg.i
conj.i
cond.r
cond.i
complex expression
complex va_arg expression
.real
.imag
internal error: could not emit constant value "abstractly"
cmp.r
cmp.i
and.ri
or.ri
satmin
downscale
resize
upscale
satmax
land.end
land.rhscnt
land.ext
land.rhs
lor.end
lor.rhscnt
lor.ext
lor.rhs
lnot
lnot.ext
cond
vector_cond
vector_select
scalar expression
astype
heapallocsite
castScalableSve
saved-call-rvalue
conv
splat
firebloom-check-conversion-to-count
firebloom-check-conversion-to-single
firebloom-check-impl-mult-overflow
tobool
vecinit
matext
virtual base in offsetof
shuf_idx
shuf_elt
shuf_ins
shuffle
va_arg expression
signchangecheck
.negativitycheck
anyext
truncheck
atomic_op
vla.negsize
vla.inc
incdec.funcptr
incdec.ptr
incdec.conv
incdec.objptr
nooverflow
overflow
scalar.splat
idx.ext
vla.index
sub.ptr.sub
sub.ptr.div
sh_prom
shl.mask
shl.zeros
shl.check
shr.mask
non-scalar arg to printf
printf_args
vprintf
llvm.loop.pipeline.disable
llvm.loop.pipeline.initiationinterval
llvm.loop.unroll.disable
llvm.loop.unroll.count
llvm.loop.unroll.enable
llvm.loop.unroll.followup_all
llvm.loop.unroll_and_jam.disable
llvm.loop.unroll_and_jam.count
llvm.loop.unroll_and_jam.enable
llvm.loop.unroll_and_jam.followup_outer
llvm.loop.unroll_and_jam.followup_inner
llvm.loop.vectorize.enable
llvm.loop.isvectorized
llvm.loop.vectorize.predicate.enable
llvm.loop.vectorize.width
llvm.loop.interleave.count
llvm.loop.vectorize.followup_all
llvm.loop.distribute.enable
llvm.loop.distribute.followup_all
llvm.loop.unroll.full
llvm.loop.mustprogress
llvm.loop.parallel_accesses
llvm.access.group
__destructor_
__copy_constructor_
__copy_assignment_
__move_constructor_
__move_assignment_
__default_constructor_
dstarray.end
loop.header
addr.cur
loop.exit
loop.body
special function 
 for non-trivial C struct has incorrect type
anv_
__NSArray0__
__NSDictionary0__
objects
keys
Obj-C getter requiring atomic copy
Obj-C optimized setter - NYI
Obj-C setter requiring atomic copy
Obj-C fast enumeration for this runtime
forcoll.end
state.ptr
countByEnumeratingWithState
items.ptr
forcoll.next
forcoll.empty
forcoll.loopinit
mutationsptr.ptr
mutationsptr
forcoll.initial-mutations
forcoll.loopbody
forcoll.index
forcoll.count
statemutations
forcoll.mutated
forcoll.notmutated
stateitems.ptr
stateitems
currentitem.ptr
isKindOfClass
currentitem
forcoll.refetch
clang.arc.copy_on_escape
clang.imprecise_release
objc_alloc
objc_allocWithZone
objc_alloc_init
drain
objc_autorelease
objc_retain
objc_release
__assign_helper_atomic_property_
__copy_helper_atomic_property_
__isOSVersionAtLeast
CFBundleGetVersionNumber
__clang_at_available_requires_core_foundation_framework
objc_opt_new
objc_opt_self
objc_opt_class
objc_opt_isKindOfClass
respondsToSelector
objc_opt_respondsToSelector
__isPlatformVersionAtLeast
__isPlatformOrVariantPlatformVersionAtLeast
objc_msg_lookup_super
objc_msg_lookup_sender
objc_slot_lookup_super
objc_exception_rethrow
__cxa_begin_catch
__cxa_end_catch
_Unwind_Resume_or_Rethrow
objc_begin_catch
objc_end_catch
objc_setProperty_atomic
objc_setProperty_atomic_copy
objc_setProperty_nonatomic
objc_setProperty_nonatomic_copy
objc_setCppObjectAtomic
objc_getCppObjectAtomic
GNUObjCMessageSend
objc_sync_enter
objc_sync_exit
objc_enumerationMutation
objc_getProperty
objc_setProperty
objc_getPropertyStruct
objc_setPropertyStruct
objc_assign_ivar
objc_assign_strongCast
objc_assign_global
objc_assign_weak
objc_read_weak
objc_memmove_collectable
.objc_statics_ptr
.objc_load_function
__objc_exec_class
class_registerAlias_np
alias
no_alias
_OBJC_CLASS_
__ObjC_Protocol_Holder_Ugly_Hack
.objc_protocol_list
.objc_method_list
NXConstantString
.objc_static_class_name
.objc_statics
.objc_sel_types
.objc_selector_list
.objc_source_file_name
NSConstantString
.objc_str
__objc_class_name_
__objc_ivar_offset_value_
.ivar.offsets
.super_class_name
__objc_class_ref_
.objc_property_list
.class_name
_OBJC_METACLASS_
.objc_protocol
ivar
.objc_ivar_list
.objc_protocol_name
OBJC_PROTOCOL_
.objc_selector_
__objc_ivar_offset_
objc_lookup_class
.objcv2_load_function
.objc_init
__objc_load
.objc_ctor
.CRT$XCLz
.init_array
.ctors
.objc_class_alias
.objc_null_selector
.objc_null_category
.objc_null_cls_init_ref
.objc_null_class_ref
.objc_null_protocol
.objc_null_protocol_ref
.objc_null_class_alias
.objc_null_constant_string
.objc_early_init
.objc_early_init_ptr
.CRT$XCLb
.objcrt$SEL
.objcrt$CLS
.objcrt$CLR
.objcrt$CAT
.objcrt$PCL
.objcrt$PCR
.objcrt$CAL
.objcrt$STR
__objc_selectors
__objc_classes
__objc_class_refs
__objc_cats
__objc_protocols
__objc_protocol_refs
__objc_class_aliases
__objc_constant_string
.objc_section_sentinel
__start_
__stop
__stop_
OBJC_WEAK_REF_CLASS_
OBJC_REF_CLASS_
OBJC_CLASS_
__objc_id_type_info
__objc_eh_typeinfo_
_ZTVN7gnustep7libobjc22__objc_class_type_infoE
__objc_eh_typename_
.objc_str_
.objc_string
OBJC_METACLASS_
OBJC_INIT_CLASS_
msgSend
objc_msgSend_fpret
objc_msgSend_stret
objc_msgSend
objc_get_meta_class
objc_get_class
.objc_metaclass_ref
.objc_class_ref
OBJC_REF_PROTOCOL_
NSAutoreleasePool
.objc_protocol_method_list
.objc_sel_types_
objc_msg_lookup
objc_msg_lookup_stret
objc_msg_lookup_super_stret
struct._objc_method_description
struct._objc_method_description_list
struct._objc_protocol_extension
struct._objc_protocol
struct._objc_protocol_list
struct._objc_ivar
struct._objc_ivar_list
struct._objc_method_list
struct._objc_class_extension
struct._objc_class
struct._objc_category
struct._objc_symtab
struct._objc_module
struct._objc_exception_data
_objc_super
struct._prop_t
struct._prop_list_t
struct._objc_method_rel
struct._objc_method
struct._objc_cache
__OBJC,__image_info,regular
__objc_imageinfo
Objective-C Version
Objective-C Image Info Version
Objective-C Image Info Section
Objective-C GC Only
Objective-C Is Simulated
Objective-C Class Properties
Objective-C support is unimplemented for object file format
.objc_class_name_
.globl .objc_class_name_
.lazy_reference .objc_class_name_
.objc_category_name_
.globl .objc_category_name_
OBJC_MODULES
__OBJC,__module_info,regular,no_dead_strip
OBJC_SYMBOLS
__OBJC,__symbols,regular,no_dead_strip
__DATA
OBJC_CLASS_NAME_
OBJC_METH_VAR_NAME_
OBJC_METH_VAR_TYPE_
OBJC_PROP_NAME_ATTR_
__TEXT,__objc_classname,cstring_literals
__TEXT,__cstring,cstring_literals
__TEXT,__objc_methname,cstring_literals
__TEXT,__objc_methtype,cstring_literals
OBJC_SELECTOR_REFERENCES_
__OBJC,__message_refs,literal_pointers,no_dead_strip
struct.__builtin_NSString
_unnamed_nsstring_
__OBJC,__cstring_object,regular,no_dead_strip
__DATA,__objc_stringobj,regular,no_dead_strip
__kCFBooleanTrue
__kCFBooleanFalse
struct.__builtin_NSConstantIntegerNumber
_unnamed_nsconstantintegernumber_
__DATA,__objc_intobj,regular,no_dead_strip
__OBJC,__int_object,regular,no_dead_strip
struct.__builtin_NSConstantFloatNumber
_unnamed_nsconstantfloatnumber_
struct.__builtin_NSConstantDoubleNumber
_unnamed_nsconstantdoublenumber_
__DATA,__objc_floatobj,regular,no_dead_strip
__OBJC,__number_object,regular,no_dead_strip
__DATA,__objc_doubleobj,regular,no_dead_strip
struct.__builtin_NSArray
_unnamed_nsarray_
__NSArray0__struct
_unnamed_array_storage
__DATA,__objc_arraydata,regular,no_dead_strip
__OBJC,__array_data,regular,no_dead_strip
__DATA,__objc_arrayobj,regular,no_dead_strip
__OBJC,__array_object,regular,no_dead_strip
struct.__builtin_NSDictionary
_unnamed_nsdictionary_
__NSDictionary0__struct
__DATA,__objc_dictobj,regular,no_dead_strip
__OBJC,__dict_object,regular,no_dead_strip
OBJC_CATEGORY_PROTOCOLS_
_OBJC_$_PROP_LIST_
_OBJC_$_CLASS_PROP_LIST_
OBJC_CATEGORY_
__OBJC,__category,regular,no_dead_strip
OBJC_CATEGORY_INSTANCE_METHODS_
__OBJC,__cat_inst_meth,regular,no_dead_strip
OBJC_CATEGORY_CLASS_METHODS_
__OBJC,__cat_cls_meth,regular,no_dead_strip
OBJC_INSTANCE_METHODS_
__OBJC,__inst_meth,regular,no_dead_strip
OBJC_CLASS_METHODS_
__OBJC,__cls_meth,regular,no_dead_strip
OBJC_PROTOCOL_INSTANCE_METHODS_
OBJC_PROTOCOL_CLASS_METHODS_
OBJC_PROTOCOL_INSTANCE_METHODS_OPT_
OBJC_PROTOCOL_CLASS_METHODS_OPT_
__OBJC,__property,regular,no_dead_strip
OBJC_CLASS_PROTOCOLS_
__OBJC,__class,regular,no_dead_strip
__OBJC,__meta_class,regular,no_dead_strip
OBJC_INSTANCE_VARIABLES_
__OBJC,__instance_vars,regular,no_dead_strip
%s ivar layout for class '%s': 
strong
0x0%x%s
0x%x%s
OBJC_CLASSEXT_
__OBJC,__class_ext,regular,no_dead_strip
objc_msgSendSuper2_stret
objc_msgSendSuper_stret
objc_msgSendSuper2
objc_msgSendSuper
objc_msgSend_fp2ret
msgSend.null-receiver
msgSend.call
msgSend.cont
objc_lookUpClass
OBJC_CLASS_REFERENCES_
__OBJC,__cls_refs,literal_pointers,no_dead_strip
OBJC_PROTOCOL_REFS_
__OBJC,__protocol,regular,no_dead_strip
OBJC_PROTOCOL_METHOD_TYPES_
OBJC_$_PROP_PROTO_LIST_
OBJC_$_CLASS_PROP_PROTO_LIST_
_OBJC_PROTOCOLEXT_
objc_direct_method.self_is_nil
objc_direct_method.cont
objc_copyStruct
objc_copyCppObjectAtomic
finally.end
sync.arg
exceptiondata.ptr
_call_try_exit
setjmp_buffer
setjmp_result
try.handler
did_catch_exception
caught
propagating_exception
setjmp.result
catch_for_catch
catch.next
matched
finally.call_exit
finally.no_call_exit
objc_exception_try_exit
objc_exception_try_enter
objc_exception_extract
objc_exception_match
weakread
weakassign
globalassign
threadlocalassign
objc_assign_threadlocal
strongassign
 block variable layout for block: 
 Inline BYREF variable layout: 
 Inline block variable layout: 
0x0%llx
, BL_STRONG:%d
, BL_BYREF:%d
, BL_WEAK:%d
 Byref variable layout: 
 Block variable layout: 
BL_OPERATOR:
BL_NON_OBJECT_BYTES:
BL_NON_OBJECT_WORD:
BL_STRONG:
BL_BYREF:
BL_WEAK:
BL_UNRETAINED:
_NSConstantStringClassReference
ClassReference
_NSConstantArrayClassReference
_NSConstantDictionaryClassReference
_NSConstantIntegerNumberClassReference
_NSConstantFloatNumberClassReference
_NSConstantDoubleNumberClassReference
struct.__method_list_t
struct._protocol_t
struct._ivar_t
struct._ivar_list_t
struct._class_ro_t
struct._class_t
struct._category_t
_message_ref_t
struct._super_message_ref_t
struct._objc_typeinfo
OBJC_LABEL_CLASS_$
OBJC_LABEL_NONLAZY_CLASS_$
OBJC_LABEL_CATEGORY_$
OBJC_LABEL_STUB_CATEGORY_$
OBJC_LABEL_NONLAZY_CATEGORY_$
__objc_nlcatlist
__objc_selrefs
literal_pointers,no_dead_strip
OBJC_EHTYPE_id
OBJC_EHTYPE_$_
objc_ehtype_vtable
__DATA,__objc_const
_OBJC_$_CATEGORY_
_OBJC_CATEGORY_PROTOCOLS_$_
_OBJC_$_CATEGORY_INSTANCE_METHODS_
_OBJC_$_CATEGORY_CLASS_METHODS_
_OBJC_$_INSTANCE_METHODS_
_OBJC_$_CLASS_METHODS_
_OBJC_$_PROTOCOL_INSTANCE_METHODS_
_OBJC_$_PROTOCOL_CLASS_METHODS_
_OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_
_OBJC_$_PROTOCOL_CLASS_METHODS_OPT_
__TEXT,__objc_methlist
_objc_empty_cache
_objc_empty_vtable
_OBJC_CLASS_PROTOCOLS_$_
_OBJC_METACLASS_RO_$_
_OBJC_CLASS_RO_$_
_OBJC_$_INSTANCE_VARIABLES_
__DATA, __objc_ivar
isFlipped
length
objectForKey
objectAtIndex
isEqualToString
isEqual
addObject
objc_msgSendSuper2_stret_fixup
objc_msgSend_stret_fixup
objc_msgSend_fpret_fixup
objc_msgSendSuper2_fixup
objc_msgSend_fixup
__objc_msgrefs
coalesced
msgSend_fn
__objc_superrefs
OBJC_CLASSLIST_SUP_REFS_$_
load_classref_result
objc_loadClassref
_OBJC_PROTOCOL_REFERENCE_$_
_OBJC_$_PROTOCOL_REFS_
_OBJC_$_PROTOCOL_METHOD_TYPES_
_OBJC_PROTOCOL_$_
_OBJC_LABEL_PROTOCOL_$_
OBJC_CLASSLIST_REFERENCES_$_
ivar.conv
OBJC_CLASS_$_NSConstantString
OBJC_CLASS_$_NSConstantArray
OBJC_CLASS_$_NSConstantDictionary
OBJC_CLASS_$_NSConstantIntegerNumber
OBJC_CLASS_$_NSConstantFloatNumber
OBJC_CLASS_$_NSConstantDoubleNumber
, BL_OPERATOR:0
eh.cont
exn.adjusted
catchret.dest
opencl.image1d_ro_t
opencl.image1d_array_ro_t
opencl.image1d_buffer_ro_t
opencl.image2d_ro_t
opencl.image2d_array_ro_t
opencl.image2d_depth_ro_t
opencl.image2d_array_depth_ro_t
opencl.image2d_msaa_ro_t
opencl.image2d_array_msaa_ro_t
opencl.image2d_msaa_depth_ro_t
opencl.image2d_array_msaa_depth_ro_t
opencl.image3d_ro_t
opencl.image1d_wo_t
opencl.image1d_array_wo_t
opencl.image1d_buffer_wo_t
opencl.image2d_wo_t
opencl.image2d_array_wo_t
opencl.image2d_depth_wo_t
opencl.image2d_array_depth_wo_t
opencl.image2d_msaa_wo_t
opencl.image2d_array_msaa_wo_t
opencl.image2d_msaa_depth_wo_t
opencl.image2d_array_msaa_depth_wo_t
opencl.image3d_wo_t
opencl.image1d_rw_t
opencl.image1d_array_rw_t
opencl.image1d_buffer_rw_t
opencl.image2d_rw_t
opencl.image2d_array_rw_t
opencl.image2d_depth_rw_t
opencl.image2d_array_depth_rw_t
opencl.image2d_msaa_rw_t
opencl.image2d_array_msaa_rw_t
opencl.image2d_msaa_depth_rw_t
opencl.image2d_array_msaa_depth_rw_t
opencl.image3d_rw_t
opencl.event_t
opencl.clk_event_t
opencl.queue_t
opencl.reserve_id_t
opencl.intel_sub_group_avc_mce_payload_t
opencl.intel_sub_group_avc_ime_payload_t
opencl.intel_sub_group_avc_ref_payload_t
opencl.intel_sub_group_avc_sic_payload_t
opencl.intel_sub_group_avc_mce_result_t
opencl.intel_sub_group_avc_ime_result_t
opencl.intel_sub_group_avc_ref_result_t
opencl.intel_sub_group_avc_sic_result_t
opencl.intel_sub_group_avc_ime_result_single_reference_streamout_t
opencl.intel_sub_group_avc_ime_result_dual_reference_streamout_t
opencl.intel_sub_group_avc_ime_single_reference_streamin_t
opencl.intel_sub_group_avc_ime_dual_reference_streamin_t
opencl.pipe_ro_t
opencl.pipe_wo_t
opencl.sampler_t
svcpt
__kmpc_for_static_init_4
__kmpc_for_static_init_4u
__kmpc_for_static_init_8
__kmpc_for_static_init_8u
__kmpc_dispatch_init_4
__kmpc_dispatch_init_4u
__kmpc_dispatch_init_8
__kmpc_dispatch_init_8u
__kmpc_dispatch_fini_4
__kmpc_dispatch_fini_4u
__kmpc_dispatch_fini_8
__kmpc_dispatch_fini_8u
__kmpc_dispatch_next_4
__kmpc_dispatch_next_4u
__kmpc_dispatch_next_8
__kmpc_dispatch_next_8u
_decl_tgt_ref_ptr
cache
__kmpc_global_ctor_
__kmpc_global_dtor_
__omp_threadprivate_init_
__omp_offloading_
_%x_
_ctor
_dtor
artificial
omp_if.then
omp_if.else
omp_if.end
.threadid_temp.
gomp_critical_user_
.omp.copyprivate.did_it
.omp.copyprivate.cpr_list
.cancel.exit
.cancel.continue
Unable to find target region on line '%0' in the device code.
omp_offloading
entry_name
omp_offloading_entries
omp_offload.info
Offloading entry for target region in %0 is incorrect: either the address or the ID is invalid.
Offloading entry for declare target variable %0 is incorrect: the address is invalid.
Offloading entry for declare target variable is incorrect: the address is invalid.
Unable to parse host IR file '%0':'%1'
__tgt_offload_entry
.affs.arr.addr
affs.counter.addr
.dep.arr.addr
dep.counter.addr
iterator.counter.addr
omp.body
omp.done
omp.elementPast
omp.elementNext
omp.isempty
reduction
reduction_func
.omp.reduction.red_list
.omp.reduction.default
.omp.reduction.case1
.omp.reduction.case2
kmp_taskred_input_t
.rd_input.
.rd_input.gep.
reduction_size
__omp_offloading
region_id
omp_mapper
omp.arraymap.head
omp.arraymap.body
omp.arraymap.isempty
omp.arraymap.ptrcurrent
omp.member
omp.member.combine
omp.type
omp.membermaptype
omp.type.alloc
omp.type.alloc.else
omp.type.to
omp.type.to.else
omp.type.from
omp.type.end
omp.maptype
omp.arraymap.next
omp.arraymap.isdone
omp.arraymap.exit
.del
omp.array
.evaldelete
omp.arrayinit.isarray
.delete
__omp_offloading_firstprivate_
requires_reg
neon
kmp_dim
dims
.cnt.addr
.void.addr
pl_cond
lasprivate.conditional
lpc.then
lpc.done
omp.arrayinit.body
omp.arrayinit.done
omp.arrayinit.isempty
omp.arraycpy.srcElementPast
omp.arraycpy.destElementPast
omp.arraycpy.dest.element
omp.arraycpy.done
omp_combiner
omp_initializer
.untied.done.
.untied.jmp.
.untied.next.
.omp_outlined.
copyprivate
copy_func
kmp_cmplrdata_t
kmp_task_t
kmp_task_t_with_privates
.kmp_privates.t
omp_task_privates_map
omp_task_entry
kmp_task_affinity_info_t
iter.cont
iter.exit
iter.body
counter.addr
omp_task_dup
omp_task_destructor
kmp_depend_info
depobj.size.addr
omp.arraycpy.body
omp.arraycpy.isempty
omp.arraycpy.src.element
red_init
red_fini
red_comb
_ZGV
The clause simdlen(1) has no effect when targeting aarch64.
The value specified in simdlen must be a power of 2 when targeting Advanced SIMD.
The clause simdlen must fit the %0-bit lanes in the architectural constraints for SVE (min is 128-bit, max is 2048-bit, by steps of 128-bit)
.bound.zero.addr
atomic_reduction
.offload_baseptrs
.offload_ptrs
.offload_mappers
.offload_sizes
offload_sizes
offload_maptypes
offload_mapnames
descriptor_dim
omp_offload.failed
omp_offload.cont
lp_cond_then
lp_cond_exit
nvptx_tid
__kmpc_amdgcn_gpu_num_threads
nvptx_num_threads
__omp_outlined__
_worker
_openmp_kernel_static_glob_rd$ptr
.worker
.mastercheck
.master
.exit
.termination.notifier
.execute
.omp.deinit
.await.work
.select.workers
.execute.parallel
.terminate.parallel
.barrier.parallel
work_fn
exec_status
should_terminate
is_active
work_match
.execute.fn
.check.next
nvvm.annotations
.spmd
.non-spmd
_select_stack
_openmp_static_kernel$is_shared
_openmp_static_kernel$size
.zero.addr
omp.critical.loop
omp.critical.test
omp.critical.sync
omp.critical.body
omp.critical.exit
critical_counter
_openmp_teams_reductions_buffer_$_$ptr
.omp.reduction.done
.omp.reduction.then
_wrapper
global_args
Target architecture 
 does not support unified addressing
_openmp_static_memory_type_$_
_shared_openmp_static_memory_type_$_
_openmp_shared_static_glob_rd_$_
_openmp_static_glob_rd_$_
_openmp_teams_reduction_type_$_
_openmp_teams_reductions_buffer_$_
thread_limit
master_tid
_exec_mode
_globalized_locals_ty
nvptx_lane_id
_omp_reduction_shuffle_and_reduce_func
.omp.reduction.remote_reduce_list
then
ifcont
.omp.reduction.element
.shuffle.pre_cond
.shuffle.then
.shuffle.exit
_omp_reduction_inter_warp_copy_func
__openmp_nvptx_data_transfer_temporary_storage
precond
body
warp_master
is_active_thread
nvptx_warp_id
_omp_reduction_list_to_global_copy_func
_omp_reduction_list_to_global_reduce_func
_omp_reduction_global_to_list_copy_func
_omp_reduction_global_to_list_reduce_func
.sequential
.parcheck
shared_arg_refs
nvptx_warp_size
resign.cont
resign.nonnull
resign.null
resignedgep
.ptrauth
llvm.ptrauth
.base
*** Dumping IRgen Record Layout
Record: 
Layout: 
<CGRecordLayout
  LLVMType:
  NonVirtualBaseLLVMType:
  IsZeroInitializable:
  BitFields:[
<CGBitFieldInfo
 Offset:
 Size:
 IsSigned:
 StorageSize:
 StorageOffset:
 VolatileOffset:
 VolatileStorageSize:
 VolatileStorageOffset:
Compiler has made implicit assumption that TypeSize is not scalable. This may or may not lead to broken code.
LLVM IR generation of compound statement ('{}')
addr
if.then
if.end
if.else
while.cond
while.end
while.body
while.exit
do.end
do.cond
do.body
for.end
for.cond
for.inc
for.cond.cleanup
for.body
sw.bb
sw.caserange
inbounds
sw.epilog
sw.default
multiple outputs to hard register: 
asm.fallthrough
impossible constraint in asm: can't store value into a register
agg.captured
__asm__
srcloc
asmresult
.casted
_debug__
copyin.not.master
copyin.not.master.end
.omp.lastprivate.then
.omp.lastprivate.done
lhs.begin
omp.body.continue
omp.body.next
omp.before.scan.bb
omp.after.scan.bb
omp.exit.inscan.bb
omp.inscan.dispatch
omp.inner.for.end
omp.inner.for.cond
omp.inner.for.cond.cleanup
omp.inner.for.body
omp.inner.for.inc
.omp.linear.pu
.omp.linear.pu.done
.omp.final.then
.omp.final.done
omp.dispatch.end
omp.dispatch.cond
omp.dispatch.cleanup
omp.dispatch.body
omp.dispatch.inc
omp.precond.then
omp.precond.end
omp.loop.exit
omp.inscan.reduce
omp.exclusive.dec
omp.exclusive.copy.exit
.omp.reduction.pu
.omp.reduction.pu.done
LLVM IR generation of compound statement ('{}')
cancel.exit
cancel.cont
rhs.begin
simd.if.then
simd.if.end
omp.outer.log.scan.body
omp.outer.log.scan.exit
omp.inner.log.scan.body
omp.inner.log.scan.exit
.omp.sections.lb.
.omp.sections.ub.
.omp.sections.st.
.omp.sections.il.
.omp.sections.iv.
.omp.sections.exit
.omp.sections.case
.priv.ptr.addr
.firstpriv.ptr.addr
.lastpriv.ptr.addr
.local.ptr.addr
taskloop.if.then
taskloop.if.end
return-adjusting thunk with variadic arguments
return-adjusting thunk with incomplete parameter type
non-trivial argument copy for return-adjusting thunk
.local
adjust.null
adjust.notnull
adjust.end
instrument-function-exit
__cyg_profile_func_exit
instrument-function-exit-inlined
min-legal-vector-width
func_addr.int
global_addr.int
global_addr
decoded_addr
vec_type_hint
work_group_size_hint
reqd_work_group_size
intel_reqd_sub_group_size
sanitize_thread_no_checking_at_run_time
function-instrument
xray-always
xray-never
xray-log-args
xray-instruction-threshold
xray-ignore-loops
xray-skip-exit
xray-skip-entry
patchable-function-entry
patchable-function-prefix
no-jump-tables
no-inline-line-tables
profile-sample-accurate
use-sample-profile
cfi-canonical-jump-table
allocapt
return.sloc.ptr
instrument-function-entry
__cyg_profile_func_enter
instrument-function-entry-inlined
__cyg_profile_func_enter_bare
fentry-call
-mnop-mcount
-mfentry
mnop-mcount
-mrecord-mcount
mrecord-mcount
packed-stack
result.ptr
retval
skipcount
lop.rhscnt
land.lhs.true
lor.lhs.false
array_authenticated_null_init.start
array_authenticated_null_init.end
array_authenticated_null_init.body
array_authenticated_null_init.cur
array_authenticated_null_init.next
array_authenticated_null_init.done
indirectgoto
indirect.goto.dest
array.begin
casted.align
casted.offset
ptrint
offsetptr
maskedptr
maskcond
resolver_entry
resolver_return
resolver_else
ptrauth
allocate
__captured_stmt
limited-coverage-experimental
Emit limited coverage mapping information (experimental)
Could not read profile %0: %1
llvm.global_ctors
llvm.global_dtors
NumRegisterParameters
Dwarf Version
CodeView
CodeViewGHash
cfguard
StrictVTablePointers
StrictVTablePointersRequirement
Debug Info Version
wchar_size
min_enum_size
target-abi
Cross-DSO CFI
Virtual Function Elim
CFI Canonical Jump Tables
cf-protection-return
cf-protection-branch
branch-target-enforcement
sign-return-address
sign-return-address-all
sign-return-address-with-bkey
MemProfProfileFilename
nvvm-reflect-ftz
opencl.spir.version
opencl.ocl.version
SmallDataLimit
cannot compile this %0 yet
unsigned
restrict
const
pipe
write_only
read_write
read_only
kernel_arg_addr_space
kernel_arg_access_qual
kernel_arg_type
kernel_arg_base_type
kernel_arg_type_qual
kernel_arg_name
probe-stack
inline-asm
strictfp
target-cpu
tune-cpu
target-features
implicit-section-name
llvm.global.annotations
.str
.args
function-instrument
xray-always
xray-log-args
xray-never
template parameter object
Generating code for declaration
.resolver
.ifunc
.cp.rodata
static initializer with authenticated null values
static initializer
__CFConstantStringClassReference
$s15SwiftFoundation19_NSCFConstantStringCN
$s10Foundation19_NSCFConstantStringCN
$S15SwiftFoundation19_NSCFConstantStringCN
$S10Foundation19_NSCFConstantStringCN
__T015SwiftFoundation19_NSCFConstantStringCN
__T010Foundation19_NSCFConstantStringCN
__TEXT,__ustring
.rodata
_unnamed_cfstring_
cfstring
__DATA,__cfstring
__objcFastEnumerationState
<string literal>
linkage spec
__main_void
clang.decl.ptr
llvm.commandline
llvm.gcov
.virtual
.generalized
all-vtables
__translate_sampler_initializer
-ftrivial-auto-var-init-stop-after=%0 has been enabled to limit the number of times ftrivial-auto-var-init=%1 gets applied.
objc_absolute_packed_isa_class_mask
.footnoteMetaArgs
.footnoteEntry
__DATA,__ftnt_%s
__regcall3__
__device_stub__
arch_
__read_only
__write_only
__read_write
fpmath=
arch=
tune=
__cxxabiv1
Compiler has made implicit assumption that TypeSize is not scalable. This may or may not lead to broken code.
clang.global.decl.ptrs
enable-value-profiling
Enable value profiling
Simple C++ TBAA
Simple C/C++ TBAA
omnipotent char
any pointer
_ExtInt(
vtable pointer
anon
__firebloom::wide_ptr.
bidi_indexable
indexable
__UTD$
__uniform_type_descriptor$metadata
object_alignment
isVariableLength
isPolymorphic
object_size
details
$unified_type_identifier
__tmo_heap_ref
type
heap
allocator_offset
$placeholder
$heap
Compiler has made implicit assumption that TypeSize is not scalable. This may or may not lead to broken code.
emptyline-comment-coverage
Emit emptylines and comment lines as skipped regions (only disable it on test)
Expansion,
Skipped,
Gap,
Branch,
File 
 (Expanded file = 
__llvm_coverage_names
<built-in>
File exit not handled before popRegions
__GLOBAL_cleanup_
needs_destruct
destruct.call
unatexit.call
destruct.end
__asan_poison_cxx_array_cookie
__asan_load_cxx_array_cookie
memptr.virtual
memptr.nonvirtual
memptr.end
memptr.adj
memptr.adj.shifted
this.adjusted
memptr.ptr
memptr.isvirtual
memptr.virtualfn
memptr.nonvirtualfn
memptr.offset
resign
merge
is.virtual.offset
memptr.isnull
src.adj
lhs.memptr.ptr
rhs.memptr.ptr
cmp.ptr
cmp.ptr.null
lhs.memptr.adj
rhs.memptr.adj
cmp.adj
or.adj
cmp.or.adj
memptr.ne
memptr.eq
memptr.tobool
memptr.virtualbit
complete-offset.ptr
__cxa_rethrow
exception
__cxa_allocate_exception
__cxa_throw
exn.byref.tmp
exn.byref
exn.casted
__cxa_get_exception_ptr
__clang_call_terminate
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTVN10__cxxabiv123__fundamental_type_infoE
_ZTVN10__cxxabiv117__array_type_infoE
_ZTVN10__cxxabiv120__function_type_infoE
_ZTVN10__cxxabiv116__enum_type_infoE
_ZTVN10__cxxabiv119__pointer_type_infoE
_ZTVN10__cxxabiv129__pointer_to_member_type_infoE
__cxa_bad_typeid
dynamic_cast.bad_cast
__dynamic_cast
offset.to.top
__cxa_bad_cast
vbase.offset.ptr
vbase.offset
__cxa_pure_virtual
__cxa_deleted_virtual
init.check
init.end
__cxa_guard_acquire
__cxa_guard_abort
__cxa_guard_release
__tls_init
__tls_guard
exception-handling
thread local storage not yet implemented on AIX
__cxa_atexit
_tlv_atexit
__cxa_thread_atexit
memptr.vadjust
memptr.skip_vadjust
memptr.is_vbase
member pointer representation requires a complete class type for %0 to perform this expression
memptr.base
vbptr
vbtable
vbtindex
vbase_offs
memptr.convert
memptr.converted
lhs.0
rhs.0
memptr.cmp.first
memptr.cmp.rest
memptr.cmp.iszero
memptr.cmp
memptr.cmp0
eh.ThrowInfo
_CxxThrowException
.xdata
bad_alloc
is_most_derived
eh.CatchableType
eh.CatchableTypeArray.
??_7type_info@@6B@
rtti.TypeDescriptor
__RTtypeid
__RTDynamicCast
__RTCastToVoid
is_complete_object
ctor.init_vbases
ctor.skip_vbases
this.int8
vbptr.
vtordisp.value
vtordisp.ptr
should_call_delete
Dtor.dtor_vbases
Dtor.skip_vbases
rtti.CompleteObjectLocator
rtti.ClassHierarchyDescriptor
rtti.BaseClassDescriptor
vtordisp
_purecall
more than 32 guarded initializations
init.attempt
_Init_thread_epoch
_Init_thread_header
_Init_thread_abort
_Init_thread_footer
__tlregdtor
/include:___dyn_tls_init@12
/include:__dyn_tls_init
$initializer$
.CRT$XDU
thread wrappers
__clangast
clangast
__clang_ast
__CLANG,__clangast
init
llvm.asan.globals
nosanitize
Compiler has made implicit assumption that TypeSize is not scalable. This may or may not lead to broken code.
.ascast
darwinpcs
experimental-mv
apcs-gnu
aapcs16
vector
avx512
_kernel
varet
vaarg.promotion-temp
argp.cur
argp.next
.aligned
long-call
short-call
mips16
nomips16
micromips
nomicromips
interrupt
Passing SVE types to variadic functions is currently not supported
ap.cur
vaarg.maybe_reg
vaarg.in_reg
vaarg.on_stack
vaarg.end
gr_offs_p
gr_offs
vr_offs_p
vr_offs
align_regoffs
aligned_regoffs
new_reg_offs
inreg
reg_top_p
reg_top
stack_p
align_stack
new_stack
vaargs.addr
vaarg.addr
sign-return-address-key
stack-probe-size
no-stack-arg-probe
/FAILIFMISMATCH:"
__chkstk_darwin
wasm-import-module
wasm-import-name
wasm-export-name
no-prototype
ABORT
UNDEF
complex type is not supported on AIX yet
vector types are not yet supported for variadic functions on AIX
numUsedRegs
using_regs
using_overflow
aggr
.vareal
.vaimag
vacplx
surface
texture
maxntidx
minctasm
texsurf_handle
supervisor
machine
overflow_arg_area_ptr
overflow_arg_area
mem_addr
reg_count_ptr
reg_count
fits_in_regs
vaarg.in_mem
scaled_reg_count
reg_offset
reg_save_area_ptr
reg_save_area
raw_reg_addr
reg_addr
raw_mem_addr
va_arg.addr
indirect_arg
opencl.kernel_wg_size_info
={eax}
movl
%ebp, %ebp
// marker for objc_retainAutoreleaseReturnValue
gp_offset_p
gp_offset
fits_in_gp
fp_offset_p
fp_offset
fits_in_fp
overflow_arg_area_p
overflow_arg_area.next
darwin-stkchk-strong-link
___chkstk_darwin
hvx-length64b
__current_saved_reg_area_pointer_p
__current_saved_reg_area_pointer
__saved_reg_area_end_pointer_p
__saved_reg_area_end_pointer
align_current_saved_reg_area_pointer
__new_saved_reg_area_pointer
__overflow_area_pointer_p
__overflow_area_pointer
align_overflow_area_pointer
__overflow_area_pointer.next
__overflow_area_pointer.align
ap.next
amdgpu-implicitarg-num-bytes
amdgpu-flat-work-group-size
amdgpu-waves-per-eu
amdgpu-num-sgpr
amdgpu-num-vgpr
amdgpu-unsafe-fp-atomics
workgroup
agent
wavefront
one-as
__block_literal
block_literal
void*
local_arg
enqueued-block
indirect.arg
arg.addr
xcore.typestrings
crv:
dump-thin-cg-sccs
Dump the SCCs in the ThinLTO index's callgraph
enable-lto-internalization
Enable global value internalization in LTO
.thin.
lto-embed-bitcode
Do not embed
optimized
Embed after all optimization passes
post-merge-pre-opt
Embed post merge, but before optimizations
Embed LLVM bitcode in object files produced by LTO
thinlto-assume-merged
Assume the input has already undergone ThinLTO function importing and the other pre-optimization pipeline changes.
resolution.txt
Could not find module summary
Error loading imported file '
ld-temp.o
failed to open 
unable to parse AA pipeline description '
unable to parse pass pipeline description '
Failed to load passes from '
'. Request ignored.
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::VerifierPass]
Error parsing default AA pipeline
Failed to create directory 
.dwo
Failed to open 
Failed to setup codegen
index.bc
index.dot
thinlto-synthesize-entry-counts
Synthesize entry counts based on the summary
enable-ml-inliner
Enable ML policy for inliner. Currently trained for -Oz only
Heuristics-based inliner version.
development
Use development mode (runtime-loadable model).
Use release mode (AOT-compiled model).
enable-npm-synthetic-counts
Run synthetic function entry count generation pass
^(default|thinlto-pre-link|thinlto|lto-pre-link|lto)<(O[0123sz])>$
enable-npm-pgo-inline-deferral
Enable inline deferral during PGO
enable-mem-prof
Enable memory profiler
mandatory-inlining-first
Perform mandatory inlinings module-wide, before performing inlining.
stack-safety
verify
pass-instrumentation
asan-globals-md
globals-aa
attributor
annotation2metadata
called-value-propagation
canonicalize-aliases
cg-profile
constmerge
cross-dso-cfi
deadargelim
elim-avail-extern
forceattrs
function-import
globaldce
globalopt
globalsplit
hotcoldsplit
hwasan
khwasan
inferattrs
always-inliner-wrapper
insert-gcov-profiling
instrorderfile
instrprof
internalize
ipsccp
iroutliner
print-ir-similarity
lowertypetests
mergefunc
name-anon-globals
objc-arc
objc-arc-apelim
objc-arc-contract
partial-inliner
pgo-icall-prom
pgo-instr-gen
pgo-instr-use
print-profile-summary
print-must-be-executed-contexts
print-stack-safety
print<module-debuginfo>
rewrite-statepoints-for-gc
rpo-function-attrs
sample-profile
scc-oz-module-inliner
loop-extract-single
oz-module-optimizer
strip
strip-dead-debug-info
strip-dead-prototypes
strip-debug-declare
strip-nonlinetable-debuginfo
synthetic-counts-propagation
unique-internal-linkage-names
wholeprogramdevirt
dfsan
asan-module
memprof-module
argpromotion
function-attrs
attributor-cgscc
openmpopt
coro-split
block-freq
branch-prob
domtree
postdomtree
demanded-bits
domfrontier
loops
lazy-value-info
inliner-size-estimator
memdep
memoryssa
phi-values
regions
scalar-evolution
stack-safety-local
targetlibinfo
basic-aa
cfl-anders-aa
cfl-steens-aa
objc-arc-aa
scev-aa
scoped-noalias-aa
tbaa
aa-eval
adce
add-discriminators
aggressive-instcombine
assume-builder
assume-simplify
alignment-from-assumptions
annotation-remarks
bdce
bounds-checking
break-crit-edges
callsite-splitting
consthoist
constraint-elimination
coro-early
coro-elide
coro-cleanup
correlated-propagation
div-rem-pairs
dot-cfg
early-cse
early-cse-memssa
ee-instrument
make-guards-explicit
post-inline-ee-instrument
gvn-hoist
gvn-sink
infer-address-spaces
instcombine
instsimplify
irce
float2int
libcalls-shrinkwrap
lint
inject-tli-mappings
lower-expect
lower-guard-intrinsic
lower-constant-intrinsics
lower-matrix-intrinsics
lower-matrix-intrinsics-minimal
lower-widenable-condition
guard-widening
load-store-vectorizer
loop-simplify
loop-sink
loop-unroll-and-jam
loop-flatten
memcpyopt
nary-reassociate
newgvn
jump-threading
partially-inline-libcalls
lcssa
loop-data-prefetch
loop-load-elim
loop-fusion
loop-distribute
objc-arc-expand
pgo-memop-opt
print<assumptions>
print<block-freq>
print<branch-prob>
print<postdomtree>
print<delinearization>
print<demanded-bits>
print<domfrontier>
print<func-properties>
print<inline-cost>
print<inliner-size-estimator>
print<memoryssa>
print<phi-values>
print<scalar-evolution>
print<stack-safety-local>
print-alias-sets
print-predicateinfo
print-mustexecute
reassociate
redundant-dbg-inst-elim
reg2mem
scalarize-masked-mem-intrin
separate-const-offset-from-gep
sccp
simplifycfg
sink
slp-vectorizer
slsr
speculative-execution
strip-gc-relocates
tailcallelim
unify-loop-exits
vector-combine
verify<memoryssa>
verify<safepoint-ir>
verify<scalar-evolution>
transform-warning
msan
memprof
dot-ddg
loop-idiom
loop-instsimplify
loop-interchange
loop-deletion
loop-simplifycfg
indvars
loop-unroll-full
print-access-info
print<loop-cache-cost>
loop-predication
simple-loop-unswitch
loop-reroll
loop-versioning-licm
unrecognized pass name: 
cgscc
invalid use of '{0}' pass as module pipeline
unknown default pipeline alias '{0}'
thinlto
loop-vectorize
mldst-motion
unknown module pass '{0}'
invalid use of '{0}' pass as cgscc pipeline
unknown cgscc pass '{0}'
invalid use of '{0}' pass as function pipeline
invalidate<inliner-size-estimator>
unknown function pass '{0}'
invalid use of '{0}' pass as loop pipeline
unknown loop pass '{0}'
invalid pipeline '{0}'
unknown {0} name '{1}'
pass
pipeline
unknown alias analysis name '{0}'
NoOpModuleAnalysis
NoOpModulePass
NoOpCGSCCAnalysis
NoOpCGSCCPass
NoOpFunctionAnalysis
InstCombinePass
NoOpFunctionPass
LibCallsShrinkWrapPass
NoOpLoopAnalysis
NoOpLoopPass
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PassManager<llvm::Loop, llvm::LoopAnalysisManager, llvm::LoopStandardAnalysisResults &, llvm::LPMUpdater &>]
invalid LoopUnrollPass parameter '{0}' 
invalid argument to MemorySanitizer pass track-origins parameter: '{0}' 
invalid MemorySanitizer pass parameter '{0}' 
forward-switch-cond
switch-to-lookup
keep-loops
hoist-common-insts
sink-common-insts
invalid argument to SimplifyCFG pass bonus-threshold parameter: '{0}' 
invalid SimplifyCFG pass parameter '{0}' 
invalid LoopVectorize parameter '{0}' 
invalid MergedLoadStoreMotion pass parameter '{0}' 
invalid GVN pass parameter '{0}' 
must
invalid StackLifetime parameter '{0}' 
invalid LoopUnswitch pass parameter '{0}' 
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CallGraphAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LazyCallGraphAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleSummaryIndexAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ProfileSummaryAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StackSafetyGlobalAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::VerifierAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PassInstrumentationAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ASanGlobalsMetadataAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InlineAdvisorAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::IRSimilarityAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GlobalsAA]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AlwaysInlinerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AttributorPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::Annotation2MetadataPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CalledValuePropagationPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CanonicalizeAliasesPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CGProfilePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ConstantMergePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CrossDSOCFIPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DeadArgumentEliminationPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::EliminateAvailableExternallyPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BlockExtractorPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ForceFunctionAttrsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::FunctionImportPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GlobalDCEPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GlobalOptPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GlobalSplitPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::HotColdSplittingPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InferFunctionAttrsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleInlinerWrapperPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InstrOrderFilePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InternalizePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAllAnalysesPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::IPSCCPPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::IROutlinerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::IRSimilarityAnalysisPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopExtractorPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MetaRenamerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MergeFunctionsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::NameAnonGlobalPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ObjCARCOptPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ObjCARCAPElimPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ObjCARCContractPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PartialInlinerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PGOIndirectCallPromotion]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PGOInstrumentationGen]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PGOInstrumentationUse]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ProfileSummaryPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CallGraphPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LazyCallGraphPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LazyCallGraphDOTPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MustBeExecutedContextPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StackSafetyGlobalPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleDebugInfoPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RewriteStatepointsForGC]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RewriteSymbolPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ReversePostOrderFunctionAttrsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SampleProfileLoaderPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PassManager<llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StripSymbolsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StripDeadDebugInfoPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SampleProfileProbePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StripDeadPrototypesPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StripDebugDeclarePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StripNonDebugSymbolsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StripNonLineTableDebugInfoPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SyntheticCountsPropagation]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::UniqueInternalLinkageNamesPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::WholeProgramDevirtPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PoisonCheckingPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::FunctionAnalysisManagerCGSCCProxy]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ArgumentPromotionPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PostOrderFunctionAttrsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AttributorCGSCCPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InlinerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::OpenMPOptPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CoroSplitPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AssumptionAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BlockFrequencyAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BranchProbabilityAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DominatorTreeAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PostDominatorTreeAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DemandedBitsAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DominanceFrontierAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::FunctionPropertiesAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LazyValueAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DependenceAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InlineSizeEstimatorAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MemoryDependenceAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MemorySSAAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PhiValuesAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RegionInfoAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::OptimizationRemarkEmitterAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ScalarEvolutionAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StackSafetyAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::TargetIRAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BasicAA]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CFLAndersAA]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CFLSteensAA]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::objcarc::ObjCARCAA]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SCEVAA]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ScopedNoAliasAA]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::TypeBasedAA]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AAEvaluator]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ADCEPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AddDiscriminatorsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AggressiveInstCombinePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AssumeBuilderPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AssumeSimplifyPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AlignmentFromAssumptionsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AnnotationRemarksPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BDCEPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BreakCriticalEdgesPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CallSiteSplittingPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ConstantHoistingPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ConstraintEliminationPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ControlHeightReductionPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CoroEarlyPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CoroElidePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CoroCleanupPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CorrelatedValuePropagationPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DCEPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DivRemPairsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DSEPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CFGPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CFGOnlyPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::EarlyCSEPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::FixIrreduciblePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MakeGuardsExplicitPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GVNHoistPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GVNSinkPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::HelloWorldPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InferAddressSpacesPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InstCountPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InstSimplifyPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::IRCEPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::Float2IntPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LintPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InjectTLIMappings]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InstructionNamerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LowerAtomicPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LowerExpectIntrinsicPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LowerGuardIntrinsicPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LowerConstantIntrinsicsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LowerMatrixIntrinsicsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LowerWidenableConditionPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GuardWideningPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoadStoreVectorizerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopSimplifyPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopSinkPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopUnrollAndJamPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopFlattenPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LowerInvokePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LowerSwitchPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PromotePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MemCpyOptPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MergeICmpsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::UnifyFunctionExitNodesPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::NaryReassociatePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::NewGVNPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::JumpThreadingPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PartiallyInlineLibCallsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LCSSAPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopDataPrefetchPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopLoadEliminationPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopFusePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopDistributePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopVersioningPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ObjCARCExpandPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PGOMemOPSizeOpt]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PrintFunctionPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AssumptionPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BlockFrequencyPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BranchProbabilityPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DependenceAnalysisPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DominatorTreePrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PostDominatorTreePrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DelinearizationPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DemandedBitsPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DominanceFrontierPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::FunctionPropertiesPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InlineCostAnnotationPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InlineSizeEstimatorAnalysisPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MemorySSAPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PhiValuesPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RegionInfoPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ScalarEvolutionPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StackSafetyPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AliasSetsPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PredicateInfoPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MustExecutePrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MemDerefPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ReassociatePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RedundantDbgInstEliminationPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RegToMemPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ScalarizeMaskedMemIntrinPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ScalarizerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SeparateConstOffsetFromGEPPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SCCPPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SimplifyCFGPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SinkingPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SLPVectorizerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StraightLineStrengthReducePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SpeculativeExecutionPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SpeculateAroundPHIsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SROA]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StripGCRelocates]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StructurizeCFGPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::TailCallElimPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::UnifyLoopExitsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::VectorCombinePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DominatorTreeVerifierPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopVerifierPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MemorySSAVerifierPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RegionInfoVerifierPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SafepointIRVerifierPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ScalarEvolutionVerifierPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CFGViewerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CFGOnlyViewerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::WarnMissedTransformationsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopAccessAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DDGAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::IVUsersAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CanonicalizeFreezeInLoopsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DDGDotPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LICMPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopIdiomRecognizePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopInstSimplifyPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopInterchangePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopRotatePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PrintLoopPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopDeletionPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopSimplifyCFGPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopStrengthReducePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::IndVarSimplifyPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopFullUnrollPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopAccessInfoPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DDGAnalysisPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::IVUsersPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopNestPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopCachePrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopPredicationPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SimpleLoopUnswitchPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopRerollPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopVersioningLICMPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PassManager<llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::OptimizationRemarkEmitterAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::FunctionToLoopPassAdaptor]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MergedLoadStoreMotionPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GVN]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CGSCCToFunctionPassAdaptor]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::ProfileSummaryAnalysis, llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PGOInstrumentationGenCreateVar]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::GlobalsAA, llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopVectorizePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopUnrollPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleToPostOrderCGSCCPassAdaptor]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PassManager<LazyCallGraph::SCC, llvm::CGSCCAnalysisManager, llvm::LazyCallGraph &, llvm::CGSCCUpdateResult &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RepeatedPass<llvm::PassManager<llvm::Module>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::CallGraphAnalysis, llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::CallGraphAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::LazyCallGraphAnalysis, llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::LazyCallGraphAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::ModuleSummaryIndexAnalysis, llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::ModuleSummaryIndexAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<(anonymous namespace)::NoOpModuleAnalysis, llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<(anonymous namespace)::NoOpModuleAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::ProfileSummaryAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::StackSafetyGlobalAnalysis, llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::StackSafetyGlobalAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::VerifierAnalysis, llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::VerifierAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::PassInstrumentationAnalysis, llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::PassInstrumentationAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::ASanGlobalsMetadataAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::InlineAdvisorAnalysis, llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::InlineAdvisorAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::IRSimilarityAnalysis, llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::IRSimilarityAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::GlobalsAA>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StackLifetimePrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RepeatedPass<llvm::PassManager<LazyCallGraph::SCC, llvm::CGSCCAnalysisManager, llvm::LazyCallGraph &, llvm::CGSCCUpdateResult &>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DevirtSCCRepeatedPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<(anonymous namespace)::NoOpCGSCCAnalysis, llvm::LazyCallGraph::SCC, llvm::AnalysisManager<LazyCallGraph::SCC, llvm::LazyCallGraph &>, llvm::LazyCallGraph &, llvm::CGSCCUpdateResult &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<(anonymous namespace)::NoOpCGSCCAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::FunctionAnalysisManagerCGSCCProxy, llvm::LazyCallGraph::SCC, llvm::AnalysisManager<LazyCallGraph::SCC, llvm::LazyCallGraph &>, llvm::LazyCallGraph &, llvm::CGSCCUpdateResult &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::FunctionAnalysisManagerCGSCCProxy>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::PassInstrumentationAnalysis, llvm::LazyCallGraph::SCC, llvm::AnalysisManager<LazyCallGraph::SCC, llvm::LazyCallGraph &>, llvm::LazyCallGraph &, llvm::CGSCCUpdateResult &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RepeatedPass<llvm::PassManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::AAManager, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::AAManager>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::AssumptionAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::AssumptionAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::BlockFrequencyAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::BlockFrequencyAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::BranchProbabilityAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::BranchProbabilityAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::DominatorTreeAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::DominatorTreeAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::PostDominatorTreeAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::PostDominatorTreeAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::DemandedBitsAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::DemandedBitsAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::DominanceFrontierAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::DominanceFrontierAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::FunctionPropertiesAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::FunctionPropertiesAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::LoopAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::LoopAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::LazyValueAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::LazyValueAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::DependenceAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::DependenceAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::InlineSizeEstimatorAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::InlineSizeEstimatorAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::MemoryDependenceAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::MemoryDependenceAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::MemorySSAAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::MemorySSAAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::PhiValuesAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::PhiValuesAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::RegionInfoAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::RegionInfoAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<(anonymous namespace)::NoOpFunctionAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<(anonymous namespace)::NoOpFunctionAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::OptimizationRemarkEmitterAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::ScalarEvolutionAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::ScalarEvolutionAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::StackSafetyAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::StackSafetyAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::TargetLibraryAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::TargetLibraryAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::TargetIRAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::TargetIRAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::VerifierAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::PassInstrumentationAnalysis, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::BasicAA, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::BasicAA>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::CFLAndersAA, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::CFLAndersAA>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::CFLSteensAA, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::CFLSteensAA>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::objcarc::ObjCARCAA, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::objcarc::ObjCARCAA>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::SCEVAA, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::SCEVAA>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::ScopedNoAliasAA, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::ScopedNoAliasAA>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::TypeBasedAA, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::TypeBasedAA>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RepeatedPass<llvm::PassManager<llvm::Loop, llvm::LoopAnalysisManager, llvm::LoopStandardAnalysisResults &, llvm::LPMUpdater &>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<(anonymous namespace)::NoOpLoopAnalysis, llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults &>, llvm::LoopStandardAnalysisResults &, llvm::LPMUpdater &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<(anonymous namespace)::NoOpLoopAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::LoopAccessAnalysis, llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults &>, llvm::LoopStandardAnalysisResults &, llvm::LPMUpdater &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::LoopAccessAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::DDGAnalysis, llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults &>, llvm::LoopStandardAnalysisResults &, llvm::LPMUpdater &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::DDGAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::IVUsersAnalysis, llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults &>, llvm::LoopStandardAnalysisResults &, llvm::LPMUpdater &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::IVUsersAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::PassInstrumentationAnalysis, llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults &>, llvm::LoopStandardAnalysisResults &, llvm::LPMUpdater &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InnerAnalysisManagerProxy<llvm::FunctionAnalysisManager, llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InnerAnalysisManagerProxy<llvm::CGSCCAnalysisManager, llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::OuterAnalysisManagerProxy<llvm::ModuleAnalysisManager, LazyCallGraph::SCC, llvm::LazyCallGraph &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::OuterAnalysisManagerProxy<llvm::CGSCCAnalysisManager, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::OuterAnalysisManagerProxy<llvm::ModuleAnalysisManager, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InnerAnalysisManagerProxy<llvm::LoopAnalysisManager, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::OuterAnalysisManagerProxy<llvm::FunctionAnalysisManager, llvm::Loop, llvm::LoopStandardAnalysisResults &>]
Could not load library '
llvmGetPassPluginInfo
Plugin entry point not found in '
'. Is this a legacy plugin?
Wrong API version on plugin '
'. Got version 
, supported version is 
Empty entry callback in plugin '
verify-cfg-preserved
debug-pass-manager-verbose
Print all pass management debugging information. `-debug-pass-manager` must also be specified
print-changed
Print changed IRs
filter-passes
pass names
Only consider IR changes for passes whose names match for the print-changed option
print-before-changed
Print before passes that change them
*** IR Dump After {0} ***
*** IR Dump Before
 (scc:
*** IR Dump Before {0} ***
*** IR Dump After {0} *** invalidated: 
Skipping pass 
 due to optnone attribute
PassManager
PassAdaptor
In function @
Some blocks were deleted
Different number of non-leaf basic blocks: before=
, after=
Non-leaf block 
 is removed (
 successors)
 is added (
Different successors of block 
 (unordered):
- before (
- after (
 (function: {0})
 (module)
*** IR Dump At Start: ***
*** IR Dump After {0}{1} omitted because no change ***
*** IR Pass {0} invalidated ***
*** IR Dump After {0}{1} filtered out ***
*** IR Pass {0}{1} ignored ***
 (scc: {0})
..., 
 (loop: {0})
AnalysisManagerProxy
unnamed_removed<
unnamed_
module (
function (
SCC 
Skipping pass: 
Running pass: 
Running analysis: 
 reported it preserved CFG, but changes detected:
Preserved CFG changed by 
Verifying function 
Broken function found, compilation aborted!
Verifying module 
Broken module found, compilation aborted!
arc-opt-max-ptr-states
Maximum number of ptr states the optimizer keeps track of
objc-arc-opts
NumNoops
Number of no-op objc calls eliminated
NumPartialNoops
Number of partially no-op objc calls eliminated
NumAutoreleases
Number of autoreleases converted to releases
NumRets
Number of return value forwarding retain+autoreleases eliminated
NumRRs
Number of retain+release paths eliminated
NumPeeps
Number of calls peephole-optimized
ObjC ARC optimization
llvm.objc.retainAutoreleasedReturnValue
llvm.objc.unsafeClaimAutoreleasedReturnValue
__message_refs
__cstring
ObjC ARC expansion
ObjC ARC autorelease pool elimination
ObjC ARC contraction
clang.imprecise_release
#pragma clang module begin 
#pragma clang module end /*
#if 0 /* disabled by -frewrite-includes */
#if 0
#endif /* disabled by -frewrite-includes */
#elif 
#if 
 /* evaluated by -frewrite-includes */
 3 4
#if 0 /* expanded by -frewrite-includes */
#endif /* expanded by -frewrite-includes */
 /* clang -frewrite-includes: implicit import */
LIBCLANG_TIMING
LIBCLANG_OBJTRACKING
+++ %u translation units
--- %u translation units
LIBCLANG_DISABLE_PCH_VALIDATION
.pch
.pch-final
unknown module format
frontend
Clang front-end time report
Clang front-end timer
clang -cc1 version 13.0.0
 default target 
 warning
 error
 generated
 when compiling for host
 when compiling for 
reading_modules
Reading modules
preloading.
Preloading 
loading.
Loading 
Module Load
.map
modules.timestamp
.timestamp
modules.idx
module_private.map
module.map
module.private.modulemap
LLBUILD_TASK_ID
Module Compile
cl_khr_3d_image_writes
cl_khr_byte_addressable_store
cl_khr_fp16
cl_khr_fp64
cl_khr_global_int32_base_atomics
cl_khr_global_int32_extended_atomics
cl_khr_local_int32_base_atomics
cl_khr_local_int32_extended_atomics
cl_khr_int64_base_atomics
cl_khr_int64_extended_atomics
cles_khr_int64
cl_khr_depth_images
cl_khr_gl_msaa_sharing
cl_khr_mipmap_image
cl_khr_mipmap_image_writes
cl_khr_srgb_image_writes
cl_khr_subgroups
cl_clang_storage_class_specifiers
__cl_clang_function_pointers
__cl_clang_variadic_functions
cl_amd_media_ops
cl_amd_media_ops2
cl_arm_integer_dot_product_int8
cl_arm_integer_dot_product_accumulate_int8
cl_arm_integer_dot_product_accumulate_int16
cl_arm_integer_dot_product_accumulate_saturate_int8
cl_intel_subgroups
cl_intel_subgroups_short
cl_intel_device_side_avc_motion_estimation
msvc
msvc-fallback
-verify-ignore-unexpected=
no-stdlibcxx-not-found
bitcode
unspecified
standalone
swift-5.0
swift-4.2
swift-4.1
sjlj
wasm
multiple
virtual
Accelerate
libmvec
MASSV
SVML
uninitialized
global-dynamic
local-dynamic
initial-exec
local-exec
2017
1.2.1
sycl-1.2.1
line-tables-only
line-directives-only
constructor
limited
unused-types
ropi
ropi-rwpi
csllvm
migrate
libstdc++
legacy
non-legacy
mixed
protected
cdecl
fastcall
stdcall
vectorcall
regcall
-verify=
region
plist
deep
externalDefMap.txt
invocations.yaml
destructors
unexplored_first_queue
dynamic-bifurcate
'track-conditions' to also be enabled
a filename
a boolean
an unsigned
debug.AnalysisOrder
debug.Stats
alpha.security.ArrayBound
alpha.security.ArrayBoundV2
osx.cocoa.AutoreleaseWrite
alpha.unix.BlockInCriticalSection
alpha.core.BoolAssignment
core.builtin.BuiltinFunctions
alpha.core.C11Lock
osx.coreFoundation.CFError
debug.DumpCFG
debug.ViewCFG
osx.coreFoundation.CFNumber
osx.coreFoundation.CFRetainRelease
alpha.unix.cstring.BufferOverlap
unix.cstring.CStringModeling
alpha.unix.cstring.NotNullTerminated
unix.cstring.NullArg
alpha.unix.cstring.OutOfBounds
unix.cstring.BadSizeArg
cplusplus.SelfAssignment
core.CallAndMessage
core.CallAndMessageModeling
debug.DumpCalls
debug.DumpCallGraph
debug.ViewCallGraph
alpha.core.CastSize
alpha.core.CastToStruct
apiModeling.llvm.CastValue
alpha.unix.Chroot
osx.cocoa.ClassRelease
alpha.clone.CloneChecker
debug.ConfigDumper
alpha.cplusplus.ContainerModeling
debug.DumpControlDependencies
alpha.core.Conversion
valist.CopyToSelf
deadcode.DeadStores
debug.DebugContainerModeling
debug.DebugIteratorModeling
alpha.cplusplus.DeleteWithNonVirtualDtor
security.insecureAPI.DeprecatedOrUnsafeBufferHandling
core.NullDereference
alpha.osx.cocoa.DirectIvarAssignment
core.DivideZero
debug.DumpDominators
unix.DynamicMemoryModeling
alpha.core.DynamicTypeChecker
core.DynamicTypePropagation
optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
alpha.cplusplus.EnumCastOutOfRange
debug.ViewExplodedGraph
debug.ExprInspection
alpha.core.FixedAddr
security.FloatLoopCounter
fuchsia.HandleChecker
alpha.fuchsia.Lock
optin.performance.GCDAntipattern
apiModeling.google.GTest
alpha.security.taint.TaintPropagation
alpha.core.IdenticalExpr
cplusplus.InnerPointer
alpha.osx.cocoa.InstanceVariableInvalidation
alpha.cplusplus.InvalidatedIterator
alpha.cplusplus.IteratorModeling
alpha.cplusplus.IteratorRange
alpha.osx.cocoa.IvarInvalidationModeling
alpha.llvm.Conventions
debug.DumpLiveExprs
debug.DumpLiveVars
osx.MIG
optin.mpi.MPI-Checker
osx.SecKeychainAPI
osx.API
unix.Malloc
alpha.security.MallocOverflow
unix.MallocSizeof
unix.MismatchedDeallocator
alpha.cplusplus.MismatchedIterator
alpha.osx.cocoa.MissingInvalidationMethod
alpha.security.MmapWriteExec
cplusplus.Move
osx.cocoa.NSAutoreleasePool
osx.cocoa.NSError
osx.NSOrCFErrorDerefChecker
cplusplus.NewDelete
cplusplus.NewDeleteLeaks
osx.cocoa.NilArg
core.builtin.NoReturnFunctions
webkit.NoUncountedMemberChecker
optin.osx.cocoa.localizability.NonLocalizedStringChecker
core.NonNullParamChecker
core.NonnilStringConstants
nullability.NullPassedToNonnull
nullability.NullReturnedFromNonnull
nullability.NullabilityBase
nullability.NullableDereferenced
nullability.NullablePassedToNonnull
nullability.NullableReturnedFromNonnull
osx.NumberObjectConversion
optin.osx.OSObjectCStyleCast
osx.OSObjectRetainCount
osx.cocoa.AtSync
osx.coreFoundation.containers.PointerSizedValues
osx.coreFoundation.containers.OutOfBounds
osx.cocoa.Dealloc
osx.cocoa.ObjCGenerics
osx.cocoa.Loops
osx.cocoa.IncompatibleMethodTypes
osx.cocoa.NonNilReturnValue
osx.ObjCProperty
osx.cocoa.SelfInit
osx.cocoa.MissingSuperCall
osx.cocoa.SuperDealloc
osx.cocoa.UnusedIvars
optin.performance.Padding
cplusplus.PlacementNew
alpha.osx.cocoa.localizability.PluralMisuseChecker
alpha.core.PointerArithm
alpha.nondeterminism.PointerIteration
alpha.nondeterminism.PointerSorting
alpha.core.PointerSub
debug.DumpPostDominators
alpha.core.PthreadLockBase
alpha.unix.PthreadLock
cplusplus.PureVirtualCall
alpha.security.cert.pos.34c
webkit.RefCntblBaseVirtualDtor
debug.ReportStmts
osx.cocoa.RetainCountBase
osx.cocoa.RetainCount
alpha.security.ReturnPtrRange
core.uninitialized.UndefReturn
apiModeling.llvm.ReturnValue
osx.cocoa.RunLoopAutoreleaseLeak
alpha.cplusplus.STLAlgorithmModeling
security.insecureAPI.SecuritySyntaxChecker
alpha.unix.SimpleStream
alpha.core.SizeofPtr
alpha.cplusplus.SmartPtr
cplusplus.SmartPtrModeling
alpha.core.StackAddressAsyncEscape
core.StackAddrEscapeBase
core.StackAddressEscape
alpha.unix.StdCLibraryFunctionArgs
apiModeling.StdCLibraryFunctions
debug.StdCLibraryFunctionsTester
alpha.unix.Stream
debug.StreamTester
debug.TaintTest
alpha.core.TestAfterDivZero
debug.DumpTraversal
apiModeling.TrustNonnull
security.insecureAPI.UncheckedReturn
alpha.webkit.UncountedCallArgsChecker
webkit.UncountedLambdaCapturesChecker
alpha.webkit.UncountedLocalVarsChecker
core.uninitialized.Branch
core.uninitialized.CapturedBlockVariable
core.UndefinedBinaryOperatorResult
core.uninitialized.ArraySubscript
core.uninitialized.Assign
valist.Uninitialized
optin.cplusplus.UninitializedObject
unix.API
optin.portability.UnixAPI
alpha.deadcode.UnreachableCode
valist.Unterminated
core.VLASize
valist.ValistBase
osx.cocoa.VariadicMethodTypes
unix.Vfork
optin.cplusplus.VirtualCall
cplusplus.VirtualCallModeling
security.insecureAPI.bcmp
security.insecureAPI.bcopy
security.insecureAPI.bzero
security.insecureAPI.decodeValueOfObjCType
security.insecureAPI.getpw
security.insecureAPI.gets
security.insecureAPI.mkstemp
security.insecureAPI.mktemp
security.insecureAPI.rand
security.insecureAPI.strcpy
security.insecureAPI.vfork
alpha.unix.cstring
alpha.clone
debug
nullability
optin.portability
unix.cstring
core.uninitialized
apiModeling.llvm
apiModeling.google
alpha.security.taint
alpha.cplusplus
alpha.osx.cocoa
alpha.security.cert
cplusplus
osx.coreFoundation.containers
osx.cocoa
optin.osx.cocoa.localizability
optin.osx
alpha.security
security
alpha.unix
alpha.core
optin.mpi
security.insecureAPI
alpha.apiModeling
unix
osx.coreFoundation
apiModeling
core
optin
alpha.security.cert.pos
alpha.fuchsia
alpha.deadcode
alpha.nondeterminism
optin.cplusplus
fuchsia
optin.osx.cocoa
deadcode
optin.performance
alpha.osx.cocoa.localizability
core.builtin
alpha.llvm
alpha.osx
valist
alpha.webkit
experimental-ifs-v2
Invalid interface stub format: 
 is deprecated.
Must specify a valid interface stub format type, ie: -interface-stub-version=experimental-ifs-v2
ARC migration
ObjC migration
-fptrauth-objc-isa-mode=sign-and-auth
sign-and-strip
iso9899:1990
gnu90
iso9899:1999
iso9899:2011
iso9899:2017
iso9899:2018
gnu18
c++03
gnu++03
RC_ProjectName
-fdefault-calling-conv
fast
ignore
+nullptrToBoolConversion
+messageToSelfInClassMethodIdReturnType
+disableInferNewAvailabilityFromInit
+allowFormatVoidPointerWithStringSpecifier
+allowFormatBooleanCheck
+allowKRDefinitionsWithoutWstrictPrototypes
+allowStaticMemberInAnonymousUnion
+allowStaticMemberInLocalRecord
+disableNeonImmediateRangeCheck
+disableNonDependentMemberExprInCurrentInstantiation
+fixedEnumsInClassScopeCXX98
+disableNullSanitizerCheckForPointerSanitizer
+disableOVEimplicitConv
+zeroInitializeGlobalsBeforeEvaluating
+useNonPrimaryObjCCategoryDecl
+enableObjCNumericLiteralWithoutAt
+legacyAvailabilityTempWorkaround
+enableAggressiveVLAFolding
+disablePtrauthPacError
+revert09abecef7bbf
+revertcff6dda604cb
+enableObjCImplicitClassTypeCoercion
-nullptrToBoolConversion
-messageToSelfInClassMethodIdReturnType
-disableInferNewAvailabilityFromInit
-allowFormatVoidPointerWithStringSpecifier
-allowFormatBooleanCheck
-allowKRDefinitionsWithoutWstrictPrototypes
-allowStaticMemberInAnonymousUnion
-allowStaticMemberInLocalRecord
-disableNeonImmediateRangeCheck
-disableNonDependentMemberExprInCurrentInstantiation
-fixedEnumsInClassScopeCXX98
-disableNullSanitizerCheckForPointerSanitizer
-disableOVEimplicitConv
-zeroInitializeGlobalsBeforeEvaluating
-useNonPrimaryObjCCategoryDecl
-enableObjCNumericLiteralWithoutAt
-legacyAvailabilityTempWorkaround
-enableAggressiveVLAFolding
-disablePtrauthPacError
-revert09abecef7bbf
-revertcff6dda604cb
-enableObjCImplicitClassTypeCoercion
Objective-C
Objective-C++
OpenCL
CUDA
RenderScript
LLVM IR
-fno-legacy-pass-manager
-x ir
memprof.profraw
-fxray-instrumentation-bundle=
-fdiagnostics-hotness-threshold=
-fsanitize-recover=
-fsanitize-trap=
Not an integer: %s
<built-in>
<stdin>
digraph "dependencies" {
 [ shape="box", label="
header_
expanded from here
expanded from macro '
 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
in file included from 
in module '
' imported from 
while building module '
STATISTICS FOR '
<module-includes>
PCH DECL: 
%0 was deserialized
Microsoft Visual C++ full compatibility mode
Microsoft C++ extensions
Microsoft inline asm blocks
Borland extensions
C++11
C++14
C++17
C++20
C++2b
Objective-C App Extension
trigraphs
'//' comments
bool, true, and false keywords
half keyword
wchar_t keyword
char8_t keyword
__declspec keyword
GNU extensions
GNU keywords
GNU C compatibility version
digraphs
C++ operator name keywords
Apple kext support
writable string support
const-qualified string support
lax vector conversions
Assume convergent functions
AltiVec-style vector initializers
System z vector extensions
exception handling
Objective-C exceptions
C++ exceptions
ignore exceptions
Assume extern C functions don't unwind
traditional CPP emulation
run-time type information
emit run-time type information data
Microsoft-compatible structure layout
freestanding implementation
disable builtin functions
disable math builtin functions
GNU-style inline assembly
C++20 coroutines
dllexported classes dllexport inline methods
C++17 relaxed matching of template template arguments
pointer authentication intrinsics
function pointer authentication
return pointer authentication
indirect gotos pointer authentication
pointer authentication failure traps
incorporate address discrimination in authenticated vtable pointers
incorporate type discrimination in authenticated vtable pointers
authentication mode for objc isa
pre- and post-authentication masking for Objective-C isa pointer
software emulation of pointer authentication
pointer authentication ABI version
controls whether the pointer auth abi version represents a kernel ABI
controls whether the pointer auth abi version should be encoded in the IR
enable signed block descriptors
'[[]]' attributes extension for all language standard modes
Preserve expressions in AST when encountering errors
Preserve the type in recovery expressions
POSIX thread support
blocks extension to C
errno in math functions
modules semantics
C++ Modules TS syntax
C++ modules syntax
require declaration of module uses
requiring declaration of module uses and all headers to be in modules
local submodule visibility
hash out diagnostic errors as part of the module hash
enable ODR hash checking for attributes
disable ODR hash checking for categories
disable ODR hash checking for interfaces
disable ODR hash checking for protocols
disable ODR hash checking for records
disable ODR hash checking for properties
disable ODR hash checking for ivars
disable ODR hash checking for methods
__OPTIMIZE__ predefined macro
__OPTIMIZE_SIZE__ predefined macro
__STATIC__ predefined macro (as opposed to __DYNAMIC__)
default struct packing maximum alignment
default maximum alignment for types
Controls if doubles should be aligned to 8 bytes (x86 only)
width of double
width of long double
use IEEE 754 quadruple-precision for long double
__EXTABI__  predefined macro
__PIC__ level
is pie
Read-only position independence
Read-write position independence
GNU inline semantics
__NO_INLINE__ predefined macro
__DEPRECATED predefined macro
fast FP math optimizations, and __FAST_MATH__ predefined macro
__FINITE_MATH_ONLY__ predefined macro
Unsafe Floating Point Math
width of wchar_t
signed or unsigned wchar_t
member-pointer representation method
default calling convention
short enum types
OpenCL C version
C++ for OpenCL
C++ for OpenCL version
Native half type support
Native half args and returns
half args and returns
OpenMP support and version of OpenMP (31, 40 or 45)
Use SIMD only OpenMP support.
Use TLS for threadprivates or runtime calls
Generate code only for OpenMP target device
Generate code for OpenMP pragmas in SIMT/SPMD mode
Use the experimental OpenMP-IR-Builder codegen path.
Force to use full runtime in all constructs when offloading to CUDA devices
Number of SMs for CUDA devices.
Number of blocks per SM for CUDA devices.
Number of the reduction records in the intermediate reduction buffer used for the teams reductions.
Use at most 32 bits to represent the collapsed loop nest counter.
Support parallel execution of target region on Cuda-based devices.
compiling for CUDA device
allowing variadic functions in CUDA device code
treating unattributed constexpr functions as __host__ __device__
using approximate transcendental functions
generate relocatable device code
allowing device side global init functions for HIP
default max threads per block for kernel launch bounds for HIP
defer host/device related diagnostic messages for CUDA/HIP
always exclude wrong side overloads in overloading resolution for CUDA/HIP
SYCL
Generate code for SYCL device
Version of the SYCL standard used
Use new kernel launching API for HIP
sized deallocation
aligned allocation
aligned allocation functions are unavailable
maximum alignment guaranteed by '::operator new(size_t)'
enable satisfaction caching for C++20 Concepts
no constant CoreFoundation strings
no constant Objective-C literals
no constant number literals
no constant array literals
no constant dictionary literals
hidden visibility for global operator new and delete declaration
check availability for target variant platform
treating double-precision floating point constants as single precision constants
OpenCL fast relaxed math
Enable experimental strict floating point
bit-field type alignment
hexagon-qdsp6 backward compatibility
Objective-C automated reference counting
__weak support in the ARC runtime
Objective-C __weak in ARC and MRC files
Ignore ARC-style __weak instead of erroring
Subscripting support in legacy ObjectiveC runtime
Disable recognition of objc_direct methods
Control-Flow Branch Protection enabled
OpenCL fake address space map
OpenCL address space map mangling mode
Include default header file for OpenCL
Declare OpenCL builtin functions
optional blocks runtime
Require member pointer base types to be complete at the point where the type's inheritance model would be determined under the Microsoft ABI
Objective-C Garbage Collection mode
default visibility for functions and variables [-fvisibility]
default visibility for types [-ftype-visibility]
apply global symbol visibility to external declarations without an explicit visibility
set the visiblity of globals from their DLL storage class [-fvisibility-from-dllstorageclass]
visibility for functions and variables with dllexport annotations [-fvisibility-from-dllstorageclass]
visibility for functions and variables without an explicit DLL storage class [-fvisibility-from-dllstorageclass]
visibility for external declarations with dllimport annotations [-fvisibility-from-dllstorageclass]
visibility for external declarations without an explicit DLL storage class [-fvisibility-from-dllstorageclass]
stack protector mode
stack checking
controls whether to use strong linking for darwin stack checking (x86 only)
trivial automatic variable initialization
stop trivial automatic variable initialization after the specified number of instances. Must be greater than 0.
signed integer overflow handling
Thread Model
Microsoft Visual C/C++ Version
How many vtordisps to insert
Apple gcc-compatible #pragma pack handling
retain documentation comments from system headers in the AST
use external API notes
compilation involves pch
controls how aggressive is ASan field padding (0: none, 1:least aggressive, 2: more aggressive)
ARM Security extensions support
controls whether to do XRay instrumentation
controls whether to always emit intrinsic calls to __xray_customevent(...) builtin.
controls whether to always emit intrinsic calls to __xray_typedevent(...) builtin.
whether to emit all vtables
version of Clang that we should attempt to be ABI-compatible with
Default alignment for functions
fixed point types
unsigned fixed point types having one extra padding bit
Register C++ static destructors
Enable or disable the builtin matrix type
Max number of tokens per TU or 0
enable noescape optimized blocks
Scope of return address signing
Key used for return address signing
Branch-target enforcement enabled
Speculative load hardening enabled
Use an ABI-incompatible v-table layout that uses relative references
SVE vector size in bits
Allow CWG1423
Revert f50d1aca992864d7edd65a449f5368b53727752a and return id for [self alloc]
Revert 4257857bf8a508b56f73f61bdf941194913bac92 and do not infer +new availability
Revert dafc3106d2069b806a10e072306a2196f1cda585 and do not emit -Wformat
Revert 5741d19f046f24450ebda3a421a8ce49043ad2b8 and do not emit -Wformat
Revert 2f26bc5542705c390bf17af2fdfc31e056147ea9 and do not emit -Wstrict-prototypes
Revert 7ae1b4a0ce9c7f269cf3069e41496a78e3f28d49 and allow static members in anon unions
Revert 7ae1b4a0ce9c7f269cf3069e41496a78e3f28d49 and allow static members in local structs
Revert 878a24ee244a24c39d1c57e9af2e88c621f7cce9 and give some implicit member expressions dependent type
Revert part of c90e198107431f64b73686bdce31c293e3380ac7
Revert 536b0ee40ab97f2878dc124a321cf9108ee3d233 and don't check nullptr arithmetic
Disable 89b1a463a531dbdb18aa3516d7b8fd7482d1d3a0
Disable (part of) 96c899449b61b866b583560a49c4627f561336fc
Disable a4a60ad51dd58da2c15ef505d5fe527ef3fecd89
Disable ccc4d83cda16bea1d9dfd0967dc7d2cfb24b8e75
rdar://67765582
Disable (part of) 552c6c232872
rdar://72363517
rdar://72823399
Format
Note: including file:
/usr/include
/usr/local/include
ignoring nonexistent directory "
/System/Library/Frameworks
/Library/Frameworks
/usr/include/c++/v1
/usr/lib/gcc
i686-pc-cygwin
4.7.3
4.5.3
4.3.4
4.3.2
/usr/include/c++/5.0
/usr/gnu/include/c++/4.4.3
/include/c++
/include/c++/
/include/c++/backward
/backward
../../..
/boot/system/non-packaged/develop/headers
/boot/system/develop/headers/os
/boot/system/develop/headers/os/app
/boot/system/develop/headers/os/arch
/boot/system/develop/headers/os/device
/boot/system/develop/headers/os/drivers
/boot/system/develop/headers/os/game
/boot/system/develop/headers/os/interface
/boot/system/develop/headers/os/kernel
/boot/system/develop/headers/os/locale
/boot/system/develop/headers/os/mail
/boot/system/develop/headers/os/media
/boot/system/develop/headers/os/midi
/boot/system/develop/headers/os/midi2
/boot/system/develop/headers/os/net
/boot/system/develop/headers/os/opengl
/boot/system/develop/headers/os/storage
/boot/system/develop/headers/os/support
/boot/system/develop/headers/os/translation
/boot/system/develop/headers/os/add-ons/graphics
/boot/system/develop/headers/os/add-ons/input_server
/boot/system/develop/headers/os/add-ons/mail_daemon
/boot/system/develop/headers/os/add-ons/registrar
/boot/system/develop/headers/os/add-ons/screen_saver
/boot/system/develop/headers/os/add-ons/tracker
/boot/system/develop/headers/os/be_apps/Deskbar
/boot/system/develop/headers/os/be_apps/NetPositive
/boot/system/develop/headers/os/be_apps/Tracker
/boot/system/develop/headers/3rdparty
/boot/system/develop/headers/bsd
/boot/system/develop/headers/glibc
/boot/system/develop/headers/posix
/boot/system/develop/headers
/usr/include/w32api
SCE_ORBIS_SDK_DIR
/target/include
/target/include_common
#include "..." search starts here:
#include <...> search starts here:
 (framework directory)
 (headermap)
End of search list.
ignoring duplicate directory "
  as it is a non-system directory that duplicates 
a system directory
# 1 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
__llvm__
__clang__
__clang_major__
__clang_minor__
__clang_patchlevel__
__clang_version__
"13.0.0 
__GNUC__
__GNUC_MINOR__
__GNUC_PATCHLEVEL__
__GXX_ABI_VERSION
1002
__GNUG__
__GXX_WEAK__
__ATOMIC_RELAXED
__ATOMIC_CONSUME
__ATOMIC_ACQUIRE
__ATOMIC_RELEASE
__ATOMIC_ACQ_REL
__ATOMIC_SEQ_CST
__OPENCL_MEMORY_SCOPE_WORK_ITEM
__OPENCL_MEMORY_SCOPE_WORK_GROUP
__OPENCL_MEMORY_SCOPE_DEVICE
__OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES
__OPENCL_MEMORY_SCOPE_SUB_GROUP
__PRAGMA_REDEFINE_EXTNAME
__VERSION__
__STRICT_ANSI__
__GXX_EXPERIMENTAL_CXX0X__
__OBJC2__
OBJC_ZEROCOST_EXCEPTIONS
__OBJC_GC__
__NEXT_RUNTIME__
__OBJC_GNUSTEP_RUNTIME_ABI__
__OBJFW_RUNTIME_ABI__
__attribute__((iboutlet))
IBOutletCollection(ClassName)
__attribute__((iboutletcollection(ClassName)))
void)__attribute__((ibaction)
IB_DESIGNABLE
__OBJC_BOOL_IS_BOOL
__CONSTANT_CFSTRINGS__
OBJC_NEW_PROPERTIES
__PASCAL_STRINGS__
__block
__attribute__((__blocks__(byref)))
__BLOCKS__
__EXCEPTIONS
__GXX_RTTI
__USING_SJLJ_EXCEPTIONS__
__SEH__
__ARM_DWARF_EH__
__DEPRECATED
__private_extern__
extern
_WCHAR_T_DEFINED
_NATIVE_WCHAR_T_DEFINED
__OPTIMIZE__
__OPTIMIZE_SIZE__
__FAST_MATH__
__ORDER_LITTLE_ENDIAN__
1234
__ORDER_BIG_ENDIAN__
4321
__ORDER_PDP_ENDIAN__
3412
__BYTE_ORDER__
__BIG_ENDIAN__
__LITTLE_ENDIAN__
_LP64
__LP64__
_ILP32
__ILP32__
__CHAR_BIT__
__SCHAR_MAX__
__SHRT_MAX__
__INT_MAX__
__LONG_MAX__
__LONG_LONG_MAX__
__WCHAR_MAX__
__WINT_MAX__
__INTMAX_MAX__
__SIZE_MAX__
__UINTMAX_MAX__
__PTRDIFF_MAX__
__INTPTR_MAX__
__UINTPTR_MAX__
__SIZEOF_DOUBLE__
__SIZEOF_FLOAT__
__SIZEOF_INT__
__SIZEOF_LONG__
__SIZEOF_LONG_DOUBLE__
__SIZEOF_LONG_LONG__
__SIZEOF_POINTER__
__SIZEOF_SHORT__
__SIZEOF_PTRDIFF_T__
__SIZEOF_SIZE_T__
__SIZEOF_WCHAR_T__
__SIZEOF_WINT_T__
__SIZEOF_INT128__
__INTMAX_TYPE__
__INTMAX
__INTMAX_C_SUFFIX__
__UINTMAX_TYPE__
__UINTMAX
__UINTMAX_C_SUFFIX__
__INTMAX_WIDTH__
__PTRDIFF_TYPE__
__PTRDIFF
__PTRDIFF_WIDTH__
__INTPTR_TYPE__
__INTPTR
__INTPTR_WIDTH__
__SIZE_TYPE__
__SIZE
__SIZE_WIDTH__
__WCHAR_TYPE__
__WCHAR_WIDTH__
__WINT_TYPE__
__WINT_WIDTH__
__SIG_ATOMIC_WIDTH__
__SIG_ATOMIC_MAX__
__CHAR16_TYPE__
__CHAR32_TYPE__
__UINTMAX_WIDTH__
__UINTPTR_TYPE__
__UINTPTR
__UINTPTR_WIDTH__
FLT16
LDBL
__POINTER_WIDTH__
__BIGGEST_ALIGNMENT__
__CHAR_UNSIGNED__
__WCHAR_UNSIGNED__
__WINT_UNSIGNED__
__USER_LABEL_PREFIX__
__FINITE_MATH_ONLY__
__GNUC_GNU_INLINE__
__GNUC_STDC_INLINE__
__GCC_ATOMIC_TEST_AND_SET_TRUEVAL
__CLANG_ATOMIC_
__GCC_ATOMIC_
__NO_INLINE__
__PIC__
__pic__
__PIE__
__pie__
__FLT_EVAL_METHOD__
__FLT_RADIX__
__DECIMAL_DIG__
__LDBL_DECIMAL_DIG__
__SSP__
__SSP_STRONG__
__SSP_ALL__
__clang_analyzer__
__FAST_RELAXED_MATH__
__weak
__attribute__((objc_gc(weak)))
__strong
__attribute__((objc_gc(strong)))
__autoreleasing
__unsafe_unretained
__attribute__((objc_ownership(weak)))
__attribute__((objc_ownership(strong)))
__attribute__((objc_ownership(autoreleasing)))
__attribute__((objc_ownership(none)))
__nonnull
_Nonnull
__null_unspecified
_Null_unspecified
__nullable
_Nullable
__APPLE_EMBEDDED_SIMULATOR__
_OPENMP
201107
201307
201511
201811
__CUDA_ARCH__
__CLANG_CUDA_APPROX_TRANSCENDENTALS__
__SYCL_DEVICE_ONLY__
__IMAGE_SUPPORT__
__GLIBCXX_TYPE_INT_N_0
__GLIBCXX_BITSIZE_INT_N_0
#define 
__cpp_rtti
199711L
__cpp_exceptions
__cpp_unicode_characters
200704L
__cpp_raw_strings
200710L
__cpp_unicode_literals
__cpp_user_defined_literals
200809L
__cpp_lambdas
200907L
__cpp_constexpr
201907L
201603L
201304L
200704
__cpp_constexpr_in_decltype
201711L
__cpp_range_based_for
200907
__cpp_static_assert
201411L
200410
__cpp_decltype
200707L
__cpp_attributes
__cpp_rvalue_references
200610L
__cpp_variadic_templates
__cpp_initializer_lists
200806L
__cpp_delegating_constructors
200604L
__cpp_nsdmi
__cpp_inheriting_constructors
201511L
__cpp_ref_qualifiers
__cpp_alias_templates
__cpp_threadsafe_static_init
__cpp_binary_literals
__cpp_digit_separators
201309L
__cpp_init_captures
201803L
__cpp_generic_lambdas
201707L
__cpp_decltype_auto
__cpp_return_type_deduction
__cpp_aggregate_nsdmi
__cpp_variable_templates
__cpp_sized_deallocation
__cpp_hex_float
__cpp_inline_variables
201606L
__cpp_noexcept_function_type
201510L
__cpp_capture_star_this
__cpp_if_constexpr
__cpp_deduction_guides
201703L
__cpp_template_auto
__cpp_namespace_attributes
__cpp_enumerator_attributes
__cpp_nested_namespace_definitions
__cpp_variadic_using
201611L
__cpp_aggregate_bases
__cpp_structured_bindings
__cpp_nontype_template_args
201911L
__cpp_fold_expressions
__cpp_guaranteed_copy_elision
__cpp_nontype_template_parameter_auto
__cpp_aligned_new
__cpp_template_template_args
__cpp_concepts
__cpp_conditional_explicit
201806L
__cpp_constexpr_dynamic_alloc
__cpp_constinit
__cpp_designated_initializers
__cpp_impl_three_way_comparison
__cpp_char8_t
201811L
__cpp_impl_destroying_delete
__cpp_coroutines
ouxX
_FMT
5.9604644775390625e-8
1.40129846e-45
4.9406564584124654e-324
3.64519953188247460253e-4951
4.94065645841246544176568792868221e-324
6.47517511943802511092443895822764655e-4966
9.765625e-4
1.19209290e-7
2.2204460492503131e-16
1.08420217248550443401e-19
1.92592994438723585305597794258492732e-34
6.103515625e-5
1.17549435e-38
2.2250738585072014e-308
3.36210314311209350626e-4932
2.00416836000897277799610805135016e-292
3.36210314311209350626267781732175260e-4932
6.5504e+4
3.40282347e+38
1.7976931348623157e+308
1.18973149535723176502e+4932
1.79769313486231580793728971405301e+308
1.18973149535723176508575932662800702e+4932
DENORM_MIN__
HAS_DENORM__
DIG__
DECIMAL_DIG__
EPSILON__
HAS_INFINITY__
HAS_QUIET_NAN__
MANT_DIG__
MAX_10_EXP__
MAX_EXP__
MAX__
MIN_10_EXP__
MIN_EXP__
MIN__
__INT
__UINT
_TYPE__
_C_SUFFIX__
_MAX__
__INT_LEAST
__UINT_LEAST
__INT_FAST
__UINT_FAST
BOOL_LOCK_FREE
CHAR_LOCK_FREE
CHAR8_T_LOCK_FREE
CHAR16_T_LOCK_FREE
CHAR32_T_LOCK_FREE
WCHAR_T_LOCK_FREE
SHORT_LOCK_FREE
INT_LOCK_FREE
LONG_LOCK_FREE
LLONG_LOCK_FREE
POINTER_LOCK_FREE
_GLIBCXX_PREDEFINED_OBJC_ARC_IS_SCALAR
namespace std {
struct __true_type;
struct __false_type;
template<typename _Tp> struct __is_scalar;
template<typename _Tp>
struct __is_scalar<__attribute__((objc_ownership(strong))) _Tp> {
  enum { __value = 0 };
  typedef __false_type __type;
struct __is_scalar<__attribute__((objc_ownership(weak))) _Tp> {
struct __is_scalar<__attribute__((objc_ownership(autoreleasing)))
 _Tp> {
__STDC__
__STDC_HOSTED__
__STDC_VERSION__
201710L
201112L
199901L
199409L
__cplusplus
202101L
202002L
201402L
201103L
__STDCPP_DEFAULT_NEW_ALIGNMENT__
__STDCPP_THREADS__
__STDC_UTF_16__
__STDC_UTF_32__
__OBJC__
__OPENCL_CPP_VERSION__
__CL_CPP_VERSION_1_0__
__OPENCL_C_VERSION__
CL_VERSION_1_0
CL_VERSION_1_1
CL_VERSION_1_2
CL_VERSION_2_0
CL_VERSION_3_0
__ENDIAN_LITTLE__
CL_SYCL_LANGUAGE_VERSION
__ASSEMBLER__
__CUDA__
__HIP__
__HIPCC__
__HIP_DEVICE_COMPILE__
#undef 
#__include_macros "
struct 
class 
union 
    <dict>
      <key>level</key>
      
      <key>filename</key>
      <key>line</key>
      <key>column</key>
      <key>message</key>
      <key>ID</key>
      <key>WarningOption</key>
    </dict>
<dict>
  <key>main-file</key>
  <key>dwarf-debug-flags</key>
  <key>diagnostics</key>
  <array>
  </array>
</dict>
fatal error
<integer>
</integer>
vfs.yaml
#define 
__VA_ARGS__
#pragma 
fatal
Meta
Diag
clang.serialized_diags
Failed to open diagnostics file
Invalid diagnostics signature
Parse error reading diagnostics
Malformed block at top-level of diagnostics
Malformed sub-block in a diagnostic
Malformed BlockInfo block
Malformed Metadata block
Malformed Diagnostic block
Malformed Diagnostic record
No version provided in diagnostics
Unsupported diagnostics version
Bitcode constructs that are not supported in diagnostics appear
Generic error occurred while handling a record
Hello from 
Failed reading rec code: %s
Read extension block message: %s
(clang)
In file included from 
In included file:
In module '
While building module '
fix-it:"
  ...
     
 [-ferror-limit=]
 [-Werror
warn
regex
  File *
  File 
 Line *
 Line 
 (directive at 
  (frontend)
 File 
input
bind-arch
offload
preprocessor
precompiler
header-module-precompiler
analyzer
migrator
compiler
backend
assembler
interface-stub-merger
linker
lipo
dsymutil
verify-debug-info
verify-pch
clang-offload-bundler
clang-offload-unbundler
clang-offload-wrapper
static-lib-linker
host
-cuda
-hip
-openmp
cuda
openmp
/etc/redhat-release
/etc/debian_version
/etc/SuSE-release
/etc/exherbo-release
/etc/alpine-release
/etc/arch-release
/etc/gentoo-release
/etc/os-release
/usr/lib/os-release
/etc/lsb-release
flang
Command line argument parsing
--no-demangle
-fopenmp
nvptx64-nvidia-cuda
nvptx-nvidia-cuda
.cfg
FORCE_CLANG_DIAGNOSTICS_CRASH
COMPILER_PATH
-clang-vendor-feature=+nullptrToBoolConversion
-clang-vendor-feature=+messageToSelfInClassMethodIdReturnType
-clang-vendor-feature=+disableInferNewAvailabilityFromInit
-clang-vendor-feature=+disableNeonImmediateRangeCheck
-clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation
-disable-aligned-alloc-awareness=1
-fno-odr-hash-protocols
-clang-vendor-feature=+revert09abecef7bbf
-enable-dse-memoryssa=0
{0} [options] file...
flang-new
Thread model: 
InstalledDir: 
Configuration file: 
System configuration file directory: 
User configuration file directory: 
programs: =
libraries: =
builtins
libgcc.a
Building universal build actions
Building compilation actions
Constructing phase actions
-wrapper
 - "
], output: 
], outputs: [
a.exe
a.out
Computing output path
LLVM_DIAGNOSTIC_DIR
amdgcn-amd-amdhsa
hurd
OBJECT_MODE
-miamcu
-Wno-reorder-init-list
-Wno-implicit-int-float-conversion
-Wno-c99-designator
-Wno-final-dtor-non-final-class
-Wno-extra-semi-stmt
-Wno-misleading-indentation
-Wno-quoted-include-in-framework-header
-Wno-implicit-fallthrough
-Wno-enum-enum-conversion
-Wno-enum-float-conversion
-Wno-elaborated-enum-base
-Wno-error=objc-signed-char-bool-implicit-int-conversion
-Wno-error=tautological-constant-compare
-Wno-error=strict-prototypes
-Wno-
output=
, total=
%.3f
, user=
, mem=
ERROR: Cannot lock file 
debug.AnalysisOrder,debug.Stats,alpha.security.ArrayBound,alpha.security.ArrayBoundV2,osx.cocoa.AutoreleaseWrite,alpha.unix.BlockInCriticalSection,alpha.core.BoolAssignment,core.builtin.BuiltinFunctions,alpha.core.C11Lock,osx.coreFoundation.CFError,debug.DumpCFG,debug.ViewCFG,osx.coreFoundation.CFNumber,osx.coreFoundation.CFRetainRelease,alpha.unix.cstring.BufferOverlap,unix.cstring.CStringModeling,alpha.unix.cstring.NotNullTerminated,unix.cstring.NullArg,alpha.unix.cstring.OutOfBounds,unix.cstring.BadSizeArg,cplusplus.SelfAssignment,core.CallAndMessage,core.CallAndMessageModeling,debug.DumpCalls,debug.DumpCallGraph,debug.ViewCallGraph,alpha.core.CastSize,alpha.core.CastToStruct,apiModeling.llvm.CastValue,alpha.unix.Chroot,osx.cocoa.ClassRelease,alpha.clone.CloneChecker,debug.ConfigDumper,alpha.cplusplus.ContainerModeling,debug.DumpControlDependencies,alpha.core.Conversion,valist.CopyToSelf,deadcode.DeadStores,debug.DebugContainerModeling,debug.DebugIteratorModeling,alpha.cplusplus.DeleteWithNonVirtualDtor,security.insecureAPI.DeprecatedOrUnsafeBufferHandling,core.NullDereference,alpha.osx.cocoa.DirectIvarAssignment,core.DivideZero,debug.DumpDominators,unix.DynamicMemoryModeling,alpha.core.DynamicTypeChecker,core.DynamicTypePropagation,optin.osx.cocoa.localizability.EmptyLocalizationContextChecker,alpha.cplusplus.EnumCastOutOfRange,debug.ViewExplodedGraph,debug.ExprInspection,alpha.core.FixedAddr,security.FloatLoopCounter,fuchsia.HandleChecker,alpha.fuchsia.Lock,optin.performance.GCDAntipattern,apiModeling.google.GTest,alpha.security.taint.TaintPropagation,alpha.core.IdenticalExpr,cplusplus.InnerPointer,alpha.osx.cocoa.InstanceVariableInvalidation,alpha.cplusplus.InvalidatedIterator,alpha.cplusplus.IteratorModeling,alpha.cplusplus.IteratorRange,alpha.osx.cocoa.IvarInvalidationModeling,alpha.llvm.Conventions,debug.DumpLiveExprs,debug.DumpLiveVars,osx.MIG,optin.mpi.MPI-Checker,osx.SecKeychainAPI,osx.API,unix.Malloc,alpha.security.MallocOverflow,unix.MallocSizeof,unix.MismatchedDeallocator,alpha.cplusplus.MismatchedIterator,alpha.osx.cocoa.MissingInvalidationMethod,alpha.security.MmapWriteExec,cplusplus.Move,osx.cocoa.NSAutoreleasePool,osx.cocoa.NSError,osx.NSOrCFErrorDerefChecker,cplusplus.NewDelete,cplusplus.NewDeleteLeaks,osx.cocoa.NilArg,core.builtin.NoReturnFunctions,webkit.NoUncountedMemberChecker,optin.osx.cocoa.localizability.NonLocalizedStringChecker,core.NonNullParamChecker,core.NonnilStringConstants,nullability.NullPassedToNonnull,nullability.NullReturnedFromNonnull,nullability.NullabilityBase,nullability.NullableDereferenced,nullability.NullablePassedToNonnull,nullability.NullableReturnedFromNonnull,osx.NumberObjectConversion,optin.osx.OSObjectCStyleCast,osx.OSObjectRetainCount,osx.cocoa.AtSync,osx.coreFoundation.containers.PointerSizedValues,osx.coreFoundation.containers.OutOfBounds,osx.cocoa.Dealloc,osx.cocoa.ObjCGenerics,osx.cocoa.Loops,osx.cocoa.IncompatibleMethodTypes,osx.cocoa.NonNilReturnValue,osx.ObjCProperty,osx.cocoa.SelfInit,osx.cocoa.MissingSuperCall,osx.cocoa.SuperDealloc,osx.cocoa.UnusedIvars,optin.performance.Padding,cplusplus.PlacementNew,alpha.osx.cocoa.localizability.PluralMisuseChecker,alpha.core.PointerArithm,alpha.nondeterminism.PointerIteration,alpha.nondeterminism.PointerSorting,alpha.core.PointerSub,debug.DumpPostDominators,alpha.core.PthreadLockBase,alpha.unix.PthreadLock,cplusplus.PureVirtualCall,alpha.security.cert.pos.34c,webkit.RefCntblBaseVirtualDtor,debug.ReportStmts,osx.cocoa.RetainCountBase,osx.cocoa.RetainCount,alpha.security.ReturnPtrRange,core.uninitialized.UndefReturn,apiModeling.llvm.ReturnValue,osx.cocoa.RunLoopAutoreleaseLeak,alpha.cplusplus.STLAlgorithmModeling,security.insecureAPI.SecuritySyntaxChecker,alpha.unix.SimpleStream,alpha.core.SizeofPtr,alpha.cplusplus.SmartPtr,cplusplus.SmartPtrModeling,alpha.core.StackAddressAsyncEscape,core.StackAddrEscapeBase,core.StackAddressEscape,alpha.unix.StdCLibraryFunctionArgs,apiModeling.StdCLibraryFunctions,debug.StdCLibraryFunctionsTester,alpha.unix.Stream,debug.StreamTester,debug.TaintTest,alpha.core.TestAfterDivZero,debug.DumpTraversal,apiModeling.TrustNonnull,security.insecureAPI.UncheckedReturn,alpha.webkit.UncountedCallArgsChecker,webkit.UncountedLambdaCapturesChecker,alpha.webkit.UncountedLocalVarsChecker,core.uninitialized.Branch,core.uninitialized.CapturedBlockVariable,core.UndefinedBinaryOperatorResult,core.uninitialized.ArraySubscript,core.uninitialized.Assign,valist.Uninitialized,optin.cplusplus.UninitializedObject,unix.API,optin.portability.UnixAPI,alpha.deadcode.UnreachableCode,valist.Unterminated,core.VLASize,valist.ValistBase,osx.cocoa.VariadicMethodTypes,unix.Vfork,optin.cplusplus.VirtualCall,cplusplus.VirtualCallModeling,security.insecureAPI.bcmp,security.insecureAPI.bcopy,security.insecureAPI.bzero,security.insecureAPI.decodeValueOfObjCType,security.insecureAPI.getpw,security.insecureAPI.gets,security.insecureAPI.mkstemp,security.insecureAPI.mktemp,security.insecureAPI.rand,security.insecureAPI.strcpy,security.insecureAPI.vfork,alpha.unix.cstring,alpha.clone,alpha,debug,nullability,optin.portability,unix.cstring,core.uninitialized,apiModeling.llvm,apiModeling.google,webkit,alpha.security.taint,alpha.cplusplus,alpha.osx.cocoa,alpha.security.cert,cplusplus,osx.coreFoundation.containers,osx.cocoa,optin.osx.cocoa.localizability,optin.osx,alpha.security,security,alpha.unix,alpha.core,optin.mpi,security.insecureAPI,alpha.apiModeling,unix,osx.coreFoundation,apiModeling,core,optin,alpha.security.cert.pos,alpha.fuchsia,alpha.deadcode,alpha.nondeterminism,optin.cplusplus,fuchsia,optin.osx.cocoa,deadcode,optin.performance,alpha.osx.cocoa.localizability,core.builtin,alpha.llvm,alpha.osx,valist,alpha.webkit,osx,llvm,
-analyzer-checker
c89,c90,iso9899:1990,iso9899:199409,gnu89,gnu90,c99,iso9899:1999,c9x,iso9899:199x,gnu99,gnu9x,c11,iso9899:2011,c1x,iso9899:201x,gnu11,gnu1x,c17,iso9899:2017,c18,iso9899:2018,gnu17,gnu18,c2x,gnu2x,c++98,c++03,gnu++98,gnu++03,c++11,c++0x,gnu++11,gnu++0x,c++14,c++1y,gnu++14,gnu++1y,c++17,c++1z,gnu++17,gnu++1z,c++20,c++2a,gnu++20,gnu++2a,c++2b,gnu++2b,cl1.0,cl,cl1.1,cl1.2,cl2.0,cl3.0,clc++,CL,CL1.1,CL1.2,CL2.0,CL3.0,CLC++,cuda,hip,
-std=
--std=
<action group>
<CompileOnly group>
<g group>
<W/R group>
<I group>
<I/i group>
<T/e/s/t/u group>
<LongDouble group>
<M group>
<O group>
<Preprocessor group>
<R group>
<R (with value) group>
<Static analyzer group>
<T group>
<W group>
<W (with value) group>
</M group>
</volatile group>
<clang-cl options>
CL.EXE COMPATIBILITY OPTIONS
<clang-cl compile-only options>
<clang-cl ignored options>
<clang i group>
<clang ignored f group>
<clang_ignored_gcc_optimization_f_Group>
<clang legacy flags>
<clang ignored m group>
<d group>
<f group>
<f (clang-only) group>
<gN group>
<gTune group>
<g flags group>
<gfortran group>
<ggdbN group>
<i group>
<clang internal options>
<clang debug/development internal options>
DEBUG/DEVELOPMENT OPTIONS
<clang driver internal options>
DRIVER OPTIONS
<m group>
<aarch64 features group>
<amdgpu features group>
<arm features group>
<hexagon features group>
<m libc group>
<mips features group>
<ppc features group>
<riscv features group>
<wasm driver features group>
<wasm features group>
<x86 features group>
<opencl group>
<pedantic group>
<reserved libs group>
<SYCL group>
<u group>
<input>
<unknown>
-###
Print (but do not run) the commands to run for this compilation
Display available options
-add-plugin
Use the named plugin action in addition to the default action
<name>
--all-warnings
-all_load
-allowable_client
-analyze-function=
-analyze-function
Run analysis on specific function (for C++ include parameters in name)
/analyze-
-analyzer-checker-help-alpha
Display the list of in development analyzer checkers. These are NOT considered safe, they are unstable and will emit incorrect reports. Enable ONLY FOR DEVELOPMENT purposes
-analyzer-checker-help-developer
Display the list of developer-only checkers such as modeling and debug checkers
-analyzer-checker-help
Display the list of analyzer checkers that are available
-analyzer-checker-option-help-alpha
Display the list of in development checker and package options. These are NOT considered safe, they are unstable and will emit incorrect reports. Enable ONLY FOR DEVELOPMENT purposes
-analyzer-checker-option-help-developer
Display the list of checker and package options meant for development purposes only
-analyzer-checker-option-help
Display the list of checker and package options
-analyzer-checker=
Choose analyzer checkers to enable
-analyzer-config-compatibility-mode=
-analyzer-config-compatibility-mode
Don't emit errors on invalid analyzer-config inputs
-analyzer-config-help
Display the list of -analyzer-config options. These are meant for development purposes only!
-analyzer-config
Choose analyzer options to enable
-analyzer-constraints=
-analyzer-constraints
Source Code Analysis - Symbolic Constraint Engines
-analyzer-disable-all-checks
Disable all static analyzer checks
-analyzer-disable-checker=
-analyzer-disable-checker
Choose analyzer checkers to disable
-analyzer-disable-retry-exhausted
Do not re-analyze paths leading to exhausted nodes with a different strategy (may decrease code coverage)
-analyzer-display-progress
Emit verbose output about the analyzer's progress
-analyzer-dump-egraph=
-analyzer-dump-egraph
Dump exploded graph to the specified file
-analyzer-inline-max-stack-depth=
-analyzer-inline-max-stack-depth
Bound on stack depth while inlining (4 by default)
-analyzer-inlining-mode=
-analyzer-inlining-mode
Specify the function selection heuristic used during inlining
-analyzer-list-enabled-checkers
Display the list of enabled analyzer checkers
-analyzer-max-loop
The maximum number of times the analyzer will go through a loop
--analyzer-no-default-checks
-analyzer-opt-analyze-headers
Force the static analyzer to analyze functions defined in header files
-analyzer-opt-analyze-nested-blocks
Analyze the definitions of blocks in addition to functions
-analyzer-output=
--analyzer-output
Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|text).
-analyzer-output
Source Code Analysis - Output Options
-analyzer-purge=
-analyzer-purge
Source Code Analysis - Dead Symbol Removal Frequency
-analyzer-stats
Print internal analyzer statistics.
-analyzer-store=
-analyzer-store
Source Code Analysis - Abstract Memory Store Models
-analyzer-tidy-checker=
-analyzer-tidy-checker
Add clang-tidy check string (enable, -disable, comma-separated)
-analyzer-viz-egraph-graphviz
Display exploded graph using GraphViz
-analyzer-werror
Emit analyzer results as errors rather than warnings
--analyze
Run the static analyzer
-analyze
Run static analysis engine
-ansi
/arch:
Set architecture for code generation
-arch_errors_fatal
-arch_only
-arch
-arcmt-action=
The ARC migration action to take
check,modify,migrate
-arcmt-migrate-emit-errors
Emit ARC errors even if the migrator can fix them
-arcmt-migrate-report-output
Output path for the plist report
--assemble
--assert=
--assert
-ast-dump-all=
Build ASTs and then debug dump them in the specified format, forcing deserialization. Supported formats include: default, json
-ast-dump-all
Build ASTs and then debug dump them, forcing deserialization
-ast-dump-decl-types
Include declaration types in AST dumps
-ast-dump-filter
Use with -ast-dump or -ast-print to dump/print only AST declaration nodes having a certain substring in a qualified name. Use -ast-list to list all filterable declaration node names.
<dump_filter>
-ast-dump-lookups
Build ASTs and then debug dump their name lookup tables
-ast-dump=
Build ASTs and then debug dump them in the specified format. Supported formats include: default, json
-ast-dump
Build ASTs and then debug dump them
-ast-list
Build ASTs and print the list of declaration node qualified names
-ast-merge
Merge the given AST file into the translation unit being compiled.
<ast file>
-ast-print
Build ASTs and then pretty-print them
-ast-view
Build ASTs and view them with GraphViz
--autocomplete=
-aux-target-cpu
Target a specific auxiliary cpu type
-aux-target-feature
Target specific auxiliary attributes
-aux-triple
Auxiliary target triple.
/await
/bigobj
-bind_at_load
--bootclasspath=
--bootclasspath
/Brepro-
Write current time into COFF output (default)
/Brepro
Do not write current time into COFF output (breaks link.exe /incremental)
/Bt+
-building-pch-with-obj
This compilation is part of building a PCH with corresponding object file.
-bundle_loader
-bundle
Add <dir> to search path for binaries and object files used implicitly
<dir>
-c-isystem
Add directory to the C SYSTEM include search path
<directory>
-cc1as
-cc1
-ccc-arcmt-check
Check for ARC migration issues that need manual handling
-ccc-arcmt-migrate
Apply modifications and produces temporary files that conform to ARC
-ccc-arcmt-modify
Apply modifications to files to conform to ARC
-ccc-gcc-name
Name for native GCC compiler
<gcc-path>
-ccc-install-dir
Simulate installation in the given directory
-ccc-objcmt-migrate
Apply modifications and produces temporary files to migrate to modern ObjC syntax
-ccc-print-bindings
Show bindings of tools to actions
-ccc-print-phases
Dump list of actions to perform
-ccc-
Include comments from within macros in preprocessed output
-cfg-add-implicit-dtors
Add C++ implicit destructors to CFGs for all analyses
-cfguard-no-checks
Emit Windows Control Flow Guard tables only (no checks)
-cfguard
Emit Windows Control Flow Guard tables and checks
/cgthreads
-chain-include
Include and chain a header file after turning it into PCH
<file>
-cl-denorms-are-zero
OpenCL only. Allow denormals to be flushed to zero.
-cl-ext=
OpenCL only. Enable or disable OpenCL extensions. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
-cl-fast-relaxed-math
OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
-cl-finite-math-only
OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
-cl-fp32-correctly-rounded-divide-sqrt
OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
-cl-kernel-arg-info
OpenCL only. Generate kernel argument metadata.
-cl-mad-enable
OpenCL only. Allow use of less precise MAD computations in the generated binary.
-cl-no-signed-zeros
OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
-cl-opt-disable
OpenCL only. This option disables all optimizations. By default optimizations are enabled.
-cl-single-precision-constant
OpenCL only. Treat double precision floating-point constant as single precision constant.
-cl-std=
OpenCL language standard to compile for.
cl,CL,cl1.0,CL1.0,cl1.1,CL1.1,cl1.2,CL1.2,cl2.0,CL2.0,cl3.0,CL3.0,clc++,CLC++
-cl-strict-aliasing
OpenCL only. This option is added for compatibility with OpenCL 1.0.
-cl-uniform-work-group-size
OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
-cl-unsafe-math-optimizations
OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
-clang-vendor-feature=
Vendor specific clang features
/clang:
Pass <arg> to the clang driver
<arg>
--CLASSPATH=
--classpath=
--CLASSPATH
--classpath
-client_name
/clr
-code-completion-at=
-code-completion-at
Dump code-completion information at a location
<file>:<line>:<column>
-code-completion-brief-comments
Include brief documentation comments in code-completion results.
-code-completion-macros
Include macros in code-completion results
-code-completion-patterns
Include code patterns in code-completion results
-code-completion-with-fixits
Include code completion results which require small fix-its.
-combine
--comments-in-macros
--comments
-compatibility_version
-compiler-options-dump
Dump the compiler configuration options
--compile
-compress-debug-sections=
DWARF debug sections compression type
-compress-debug-sections
--config-system-dir=
System directory for configuration files
--config-user-dir=
User directory for configuration files
--config
Specifies configuration file
--constant-cfstrings
/constexpr:
-coverage-data-file=
-coverage-data-file
Emit coverage data to this filename.
-coverage-notes-file=
-coverage-notes-file
Emit coverage notes to this filename.
-coverage-version=
Four-byte version string for gcov files.
-coverage
-cpp-precomp
-cpp
--cuda-compile-host-device
Compile CUDA code for both host and device (default).  Has no effect on non-CUDA compilations.
--cuda-device-only
Compile CUDA code for device only
--cuda-gpu-arch=
--cuda-host-only
Compile CUDA code for host only.  Has no effect on non-CUDA compilations.
--cuda-include-ptx=
Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
--cuda-noopt-device-debug
Enable device-side debug info generation. Disables ptxas optimizations.
--cuda-path-ignore-env
Ignore environment variables to detect CUDA installation
--cuda-path=
CUDA installation path
-current_version
-cxx-isystem
Add directory to the C++ SYSTEM include search path
Include comments in preprocessed output
Do not discard comments when preprocessing
Only run preprocess, compile, and assemble steps
Compile only
/d1PP
Retain macro definitions in /E mode
/d1reportAllClassLayout
Dump record layout information
/d2FastFail
/d2Zi+
Print macro definitions in -E mode in addition to normal output
-dead_strip
-debug-forward-template-params
Emit complete descriptions of template parameters in forward declarations
-debug-info-kind=
line-tables-only,line-directives-only,constructor,limited,standalone,unused-types
-debug-info-macro
Emit macro debug information
--debug=
-debugger-tuning=
gdb,lldb,sce
--debug
-default-function-attr
Apply given attribute to all functions
--define-macro=
--define-macro
-defsym
Define a value for a symbol
--dependencies
-dependency-dot
Filename to write DOT-formatted header dependencies to
-dependency-file
Filename (or -) to write dependency output to
--dependent-lib=
Add dependent library
-detailed-preprocessing-record
include a detailed record of preprocessing actions
-diagnostic-log-file
Filename (or -) to log diagnostics to
/diagnostics:caret
Enable caret and column diagnostics (default)
/diagnostics:classic
Disable column and caret diagnostics
/diagnostics:column
Disable caret diagnostics but keep column info
-disable-free
Disable freeing of memory on exit
-disable-lifetime-markers
Disable lifetime-markers emission even when optimizations are enabled
-disable-llvm-optzns
-disable-llvm-passes
Use together with -emit-llvm to get pristine LLVM IR from the frontend by not running any LLVM passes at all
-disable-llvm-verifier
Don't run the LLVM IR verifier pass
-disable-O0-optnone
Disable adding the optnone attribute to functions at O0
-disable-objc-default-synthesize-properties
disable the default synthesis of Objective-C properties
-disable-pragma-debug-crash
Disable any #pragma clang __debug that can lead to crashing behavior. This is meant for testing.
-disable-red-zone
Do not emit code that uses the red zone.
-discard-value-names
Discard value names in LLVM IR
Print include directives in -E mode in addition to normal output
Print macro definitions in -E mode instead of normal output
/doc
--driver-mode=
Set the driver mode to either 'gcc', 'g++', 'cpp', or 'cl'
-dsym-dir
Directory to output dSYM's (if any) to
-dump-coverage-mapping
Dump the coverage mapping records, for testing
-dump-deserialized-decls
Dump declarations that are deserialized from PCH, for testing
-dump-raw-tokens
Lex file in raw mode and dump raw tokens
-dump-tokens
Run preprocessor, dump internal rep of tokens
-dumpmachine
-dumpspecs
-dumpversion
-dwarf-debug-flags
The string to embed in the Dwarf debug flags record.
-dwarf-debug-producer
The string to embed in the Dwarf debug AT_producer record.
-dwarf-explicit-import
Generate explicit import from anonymous namespace to containing scope
-dwarf-ext-refs
Generate debug info with external references to clang modules or precompiled headers
-dwarf-version=
--dyld-prefix=
--dyld-prefix
-dylib_file
-dylinker_install_name
-dylinker
-dynamiclib
-dynamic
Define <macro> to <value> (or 1 if <value> omitted)
<macro>=<value>
Define macro
<macro[=value]>
Set exception handling model
-emit-ast
Emit Clang AST files for source inputs
-emit-codegen-only
Generate machine code, but discard output
-emit-header-module
Generate pre-compiled module file from a set of header files
-emit-html
Output input source as HTML
-emit-interface-stubs
Generate Interface Stub Files.
-emit-llvm-bc
Build ASTs then convert to LLVM, emit .bc file
-emit-llvm-only
Build ASTs and convert to LLVM, discarding output
-emit-llvm-uselists
Preserve order of LLVM use-lists when serializing
-emit-llvm
Use the LLVM representation for assembler and object files
-emit-merged-ifs
Generate Interface Stub Files, emit merged text not binary.
-emit-module-interface
Generate pre-compiled module file from a C++ module interface
-emit-module
Generate pre-compiled module file from a module map
-emit-obj
Emit native object files
-emit-pch
Generate pre-compiled header file
--emit-static-lib
Enable linker job to emit a static library.
-enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang
Trivial automatic variable initialization to zero is only here for benchmarks, it'll eventually be removed, and I'm OK with that because I'm only using it to benchmark
--encoding=
--encoding
--entry
-Eonly
Just run preprocessor, no output (for timings)
Disable linemarker output and preprocess to stdout
-error-on-deserialized-decl=
-error-on-deserialized-decl
Emit error if a specific declaration is deserialized from PCH, for testing
/errorReport
-exception-model=
-exception-model
The exception model: dwarf|sjlj|seh|wasm
dwarf,sjlj,seh,wasm
/execution-charset:
Set runtime encoding, supports only UTF-8
-exported_symbols_list
--extdirs=
--extdirs
-extend-lifetimes=
--extra-warnings
Only run the preprocessor
Preprocess to stdout
-faapcs-bitfield-load
Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
-faapcs-bitfield-width
Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
-faccess-control
-faddress-space-map-mangling=
Set the mode for address space map based mangling; OpenCL testing purposes only
<yes|no|target>
target,no,yes
-faddrsig
Emit an address-significance table
-faggressive-function-elimination
-falign-commons
-falign-functions=
-falign-functions
-falign-jumps=
-falign-jumps
-falign-labels=
-falign-labels
-falign-loops=
-falign-loops
-faligned-alloc-unavailable
Aligned allocation/deallocation functions are unavailable
-faligned-allocation
Enable C++17 aligned allocation functions
-faligned-new=
-faligned-new
-fall-intrinsics
/fallback
Fall back to cl.exe if clang-cl fails to compile
-fallow-editor-placeholders
Treat editor placeholders as valid source code
-fallow-half-arguments-and-returns
Allow function arguments and returns of type half
-fallow-pch-with-compiler-errors
Accept a PCH file that was created with compiler errors
-fallow-pcm-with-compiler-errors
Accept a PCM file that was created with compiler errors
-fallow-unsupported
-faltivec
-fansi-escape-codes
Use ANSI escape codes for diagnostics
-fapinotes-cache-path=
Does nothing; API notes are no longer cached separately from modules
-fapinotes-modules
Enable module-based external API notes support
-fapinotes-swift-version=
Specify the Swift version to use when filtering API notes
<version>
-fapinotes
Enable external API notes support
-fapple-kext-vtable-mitigation
Enable mitigation for kernel v-table exploits through null pointers
-fapple-kext
Use Apple's kernel extensions ABI
-fapple-link-rtlib
Force linking the clang builtins runtime library
-fapple-pragma-pack
Enable Apple gcc-compatible #pragma pack handling
-fapplication-extension
Restrict code to those available for App Extensions
-fapply-global-visibility-to-externs
Apply global symbol visibility to external declarations without an explicit visibility
-fapprox-func
-fasm-blocks
-fasm
-fassociative-math
-fassume-sane-operator-new
-fastcp
-fastf
-fast
-fasynchronous-unwind-tables
-fauto-profile-accurate
-fauto-profile=
-fauto-profile
-fautolink
-fautomatic
/favor
Output assembly code file during compilation
Set assembly output file name (with /FA)
<file or dir/>
-fbackslash
-fbacktrace
-fbasic-block-sections=
Place each function's basic blocks in unique sections (ELF Only) : all | labels | none | list=<file>
all,labels,none,list=
-fblas-matmul-limit=
-fblocks-runtime-optional
Weakly link in the blocks runtime
-fblocks
Enable the 'blocks' language feature
-fbootclasspath=
-fborland-extensions
Accept non-standard constructs supported by the Borland compiler
-fbounds-check
-fbracket-depth=
-fbracket-depth
Maximum nesting level for parentheses, brackets, and braces
-fbranch-count-reg
-fbranch-target-identification
Emit branch target identification instructions for indirect branch destinations
-fbuild-session-file=
Use the last modification time of <file> as the build session timestamp
-fbuild-session-timestamp=
Time when the current build session started
<time since Epoch in seconds>
-fbuiltin-module-map
Load the clang builtins module map file.
-fbuiltin
-fc++-static-destructors
-fcall-saved-x10
Make the x10 register call-saved (AArch64 only)
-fcall-saved-x11
Make the x11 register call-saved (AArch64 only)
-fcall-saved-x12
Make the x12 register call-saved (AArch64 only)
-fcall-saved-x13
Make the x13 register call-saved (AArch64 only)
-fcall-saved-x14
Make the x14 register call-saved (AArch64 only)
-fcall-saved-x15
Make the x15 register call-saved (AArch64 only)
-fcall-saved-x18
Make the x18 register call-saved (AArch64 only)
-fcall-saved-x8
Make the x8 register call-saved (AArch64 only)
-fcall-saved-x9
Make the x9 register call-saved (AArch64 only)
-fcaller-saves
-fcaret-diagnostics-max-lines
Set the maximum number of source lines to show in a caret diagnostic
-fcaret-diagnostics
-fcf-protection=
Instrument control-flow architecture protection. Options: return, branch, full, none.
return,branch,full,none
-fcf-protection
Enable cf-protection in 'full' mode
-fcf-runtime-abi=
unspecified,standalone,objc,swift,swift-5.0,swift-4.2,swift-4.1
-fchar8_t
Enable C++ builtin type char8_t
-fcheck-array-temporaries
-fcheck-new
-fcheck=
-fclang-abi-compat=
Attempt to match the ABI of Clang <version>
<major>.<minor>,latest
-fclasspath=
-fcoarray=
-fcolor-diagnostics
Enable colors in diagnostics
-fcomment-block-commands=
Treat each comma separated argument in <arg> as a documentation comment block command
-fcommon
Place uninitialized global variables in a common block
-fcompatibility-qualified-id-block-type-checking
Allow using blocks with parameters of more specific type than the type system guarantees when a parameter is qualified id
-fcompile-resource=
-fcomplete-member-pointers
Require member pointer base types to be complete if they would be significant under the Microsoft ABI
-fconcepts-ts
Enable C++ Extensions for Concepts. (deprecated - use -std=c++2a)
-fconst-strings
Use a const qualified type for string literals in C and ObjC
-fconstant-array-class=
-fconstant-cfstrings
-fconstant-dictionary-class=
-fconstant-double-number-class=
-fconstant-float-number-class=
-fconstant-integer-number-class=
-fconstant-string-class=
-fconstant-string-class
Specify the class to use for constant Objective-C string objects.
<class name>
-fconstexpr-backtrace-limit=
-fconstexpr-backtrace-limit
Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit).
-fconstexpr-depth=
-fconstexpr-depth
Maximum depth of recursive constexpr function calls
-fconstexpr-steps=
-fconstexpr-steps
Maximum number of steps in constexpr function evaluation
-fconvergent-functions
Assume functions may be convergent
-fconvert=
-fcoroutines-ts
Enable support for the C++ Coroutines TS
-fcoverage-mapping
Generate coverage mapping to enable code coverage analysis
-fcrash-diagnostics-dir=
-fcray-pointer
-fcreate-profile
-fcs-profile-generate=
Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
-fcs-profile-generate
Generate instrumented code to collect context sensitive execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
-fcuda-allow-variadic-functions
Allow variadic functions in CUDA device code.
-fcuda-approx-transcendentals
Use approximate transcendental functions
-fcuda-flush-denormals-to-zero
Flush denormal floating point values to zero in CUDA device mode.
-fcuda-include-gpubinary
Incorporate CUDA device-side binary into host object file.
-fcuda-is-device
Generate code for CUDA device
-fcuda-rdc
-fcuda-short-ptr
Use 32-bit pointers for accessing const/local/shared address spaces
-fcxx-exceptions
Enable C++ exceptions
-fcxx-modules
-fd-lines-as-code
-fd-lines-as-comments
-fdata-sections
Place each data in its own section
-fdebug-compilation-dir=
-fdebug-compilation-dir
The compilation directory to embed in the debug info.
-fdebug-default-version=
Default DWARF version to use, if a -g option caused DWARF debug info to be produced
-fdebug-info-for-profiling
Emit extra debug info to make sample profile more accurate
-fdebug-macro
-fdebug-pass-arguments
-fdebug-pass-manager
Prints debug information for the new pass manager
-fdebug-pass-structure
-fdebug-prefix-map=
remap file source paths in debug info
-fdebug-ranges-base-address
Use DWARF base address selection entries in .debug_ranges
-fdebug-types-section
Place debug types in their own section (ELF Only)
-fdebugger-cast-result-to-id
Enable casting unknown expression results to id
-fdebugger-objc-literal
Enable special debugger support for Objective-C subscripting and literals
-fdebugger-support
Enable special debugger support behavior
-fdeclare-opencl-builtins
Add OpenCL builtin function declarations (experimental)
-fdeclspec
Allow __declspec as a keyword
-fdefault-calling-conv=
Set default calling convention
cdecl,fastcall,stdcall,vectorcall,regcall
-fdefault-double-8
-fdefault-inline
-fdefault-integer-8
-fdefault-real-8
-fdefer-pop
-fdelayed-template-parsing
Parse templated function definitions at the end of the translation unit
-fdelete-null-pointer-checks
Treat usage of null pointers as undefined behavior (default)
-fdenormal-fp-math-f32=
-fdenormal-fp-math=
-fdepfile-entry=
-fdeprecated-macro
Defines the __DEPRECATED macro
-fdevirtualize-speculatively
-fdevirtualize
-fdiagnostics-absolute-paths
Print absolute paths in diagnostics
-fdiagnostics-color=
-fdiagnostics-color
-fdiagnostics-fixit-info
-fdiagnostics-format=
-fdiagnostics-format
Change diagnostic formatting to match IDE and command line tools
clang,msvc,msvc-fallback,vi
-fdiagnostics-hotness-threshold=
Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
<value>
-fdiagnostics-parseable-fixits
Print fix-its in machine parseable form
-fdiagnostics-print-source-range-info
Print source range spans in numeric form
-fdiagnostics-show-category=
-fdiagnostics-show-category
Print diagnostic category
none,id,name
-fdiagnostics-show-hotness
Enable profile hotness information in diagnostic line
-fdiagnostics-show-location=
-fdiagnostics-show-note-include-stack
Display include stacks for diagnostic notes
-fdiagnostics-show-option
Print option name with mappable diagnostics
-fdiagnostics-show-template-tree
Print a template comparison tree for differing templates
-fdigraphs
Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
-fdisable-module-hash
Disable the module hash
-fdiscard-value-names
-fdollar-ok
-fdollars-in-identifiers
Allow '$' in identifiers
-fdouble-square-bracket-attributes
Enable '[[]]' attributes in all C and C++ language modes
-fdump-fortran-optimized
-fdump-fortran-original
-fdump-parse-tree
-fdump-record-layouts-simple
Dump record layout information in a simple form used for testing
-fdump-record-layouts
-fdump-vtable-layouts
Dump the layouts of all vtables that will be emitted in a translation unit
-fdwarf-directory-asm
-fdwarf-exceptions
Use DWARF style exceptions
-fdwarf2-cfi-asm
/Fe:
-felide-constructors
-feliminate-unused-debug-symbols
-feliminate-unused-debug-types
Do not emit  debug info for defined but unused types
-fembed-bitcode-marker
Embed placeholder LLVM IR data as a marker
-fembed-bitcode=
Embed LLVM bitcode (option: off, all, bitcode, marker)
<option>
off,all,bitcode,marker
-fembed-bitcode
Embed LLVM IR bitcode as data
-femit-all-decls
Emit all declarations, even if unused
-femulated-tls
Use emutls functions to access thread_local variables
-fenable-matrix
Enable matrix data type and related builtin functions
-fencode-extended-block-signature
enable extended encoding of block type signature
-fencoding=
-ferror-limit=
-ferror-limit
Set the maximum number of errors to emit before stopping (0 = no limit).
-fescaping-block-tail-calls
-fexceptions
Enable support for exception handling
-fexcess-precision=
-fexec-charset=
-fexpensive-optimizations
-fexperimental-debug-variable-locations
Use experimental new value-tracking variable locations
-fexperimental-isel
-fexperimental-new-constant-interpreter
Enable the experimental new constant interpreter
-fexperimental-new-pass-manager
-fexperimental-optimized-argument-temporaries
Reuse stack space around some argument temporaries
-fexperimental-optimized-noescape
-fexperimental-relative-c++-abi-vtables
Use the experimental C++ class ABI for classes with virtual tables
-fexperimental-strict-floating-point
Enables experimental strict floating point in LLVM.
-fextdirs=
-fextended-identifiers
-fexternal-blas
-fexternc-nounwind
Assume all functions with C linkage do not unwind
Set output executable file name
-ff2c
-ffake-address-space-map
Use a fake address space map; OpenCL testing purposes only
-ffast-math
Allow aggressive, lossy floating-point optimizations
-ffat-lto-objects
-ffile-prefix-map=
remap file source paths in debug info and predefined preprocessor macros
-ffine-grained-bitfield-accesses
Use separate accesses for consecutive bitfield runs with legal widths and alignments.
-ffinite-loops
Assume all loops are finite.
-ffinite-math-only
-ffixed-form
-ffixed-line-length-
-ffixed-point
Enable fixed point types
-ffixed-r19
Reserve register r19 (Hexagon only)
-ffixed-r9
Reserve the r9 register (ARM only)
-ffixed-x10
Reserve the x10 register (AArch64/RISC-V only)
-ffixed-x11
Reserve the x11 register (AArch64/RISC-V only)
-ffixed-x12
Reserve the x12 register (AArch64/RISC-V only)
-ffixed-x13
Reserve the x13 register (AArch64/RISC-V only)
-ffixed-x14
Reserve the x14 register (AArch64/RISC-V only)
-ffixed-x15
Reserve the x15 register (AArch64/RISC-V only)
-ffixed-x16
Reserve the x16 register (AArch64/RISC-V only)
-ffixed-x17
Reserve the x17 register (AArch64/RISC-V only)
-ffixed-x18
Reserve the x18 register (AArch64/RISC-V only)
-ffixed-x19
Reserve the x19 register (AArch64/RISC-V only)
-ffixed-x1
Reserve the x1 register (AArch64/RISC-V only)
-ffixed-x20
Reserve the x20 register (AArch64/RISC-V only)
-ffixed-x21
Reserve the x21 register (AArch64/RISC-V only)
-ffixed-x22
Reserve the x22 register (AArch64/RISC-V only)
-ffixed-x23
Reserve the x23 register (AArch64/RISC-V only)
-ffixed-x24
Reserve the x24 register (AArch64/RISC-V only)
-ffixed-x25
Reserve the x25 register (AArch64/RISC-V only)
-ffixed-x26
Reserve the x26 register (AArch64/RISC-V only)
-ffixed-x27
Reserve the x27 register (AArch64/RISC-V only)
-ffixed-x28
Reserve the x28 register (AArch64/RISC-V only)
-ffixed-x29
Reserve the x29 register (AArch64/RISC-V only)
-ffixed-x2
Reserve the x2 register (AArch64/RISC-V only)
-ffixed-x30
Reserve the x30 register (AArch64/RISC-V only)
-ffixed-x31
Reserve the x31 register (AArch64/RISC-V only)
-ffixed-x3
Reserve the x3 register (AArch64/RISC-V only)
-ffixed-x4
Reserve the x4 register (AArch64/RISC-V only)
-ffixed-x5
Reserve the x5 register (AArch64/RISC-V only)
-ffixed-x6
Reserve the x6 register (AArch64/RISC-V only)
-ffixed-x7
Reserve the x7 register (AArch64/RISC-V only)
-ffixed-x8
Reserve the x8 register (AArch64/RISC-V only)
-ffixed-x9
Reserve the x9 register (AArch64/RISC-V only)
-ffloat-store
-ffor-scope
-fforbid-guard-variables
Emit an error if a C++ static local initializer would need a guard variable
-fforce-addr
-fforce-dwarf-frame
Always emit a debug frame section
-fforce-emit-vtables
Emits more virtual tables to improve devirtualization
-fforce-enable-int128
Enable support for int128_t type
-ffp-contract=
Form fused FP ops (e.g. FMAs): fast (fuses across statements disregarding pragmas) | on (only fuses in the same statement unless dictated by pragmas) | off (never fuses) | fast-honor-pragmas (fuses across statements unless diectated by pragmas). Default is 'fast' for CUDA, 'fast-honor-pragmas' for HIP, and 'on' otherwise.
fast,on,off,fast-honor-pragmas
-ffp-exception-behavior=
Specifies the exception behavior of floating-point operations.
-ffp-model=
Controls the semantics of floating-point calculations.
-ffpe-trap=
-ffree-form
-ffree-line-length-
-ffreestanding
Assert that the compilation takes place in a freestanding environment
-ffriend-injection
-ffrontend-optimize
-ffunction-attribute-list
-ffunction-sections
Place each function in its own section
-fgcse-after-reload
-fgcse-las
-fgcse-sm
-fgcse
-fglobal-isel
Enables the global instruction selector
-fgnu-inline-asm
-fgnu-keywords
Allow GNU-extension keywords regardless of language standard
-fgnu-runtime
Generate output compatible with the standard GNU Objective-C runtime
-fgnu89-inline
Use the gnu89 inline semantics
-fgnuc-version=
Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
-fgnu
-fgpu-allow-device-init
Allow device side init function in HIP
-fgpu-defer-diag
Defer host/device related diagnostic messages for CUDA/HIP
-fgpu-exclude-wrong-side-overloads
Always exclude wrong side overloads in overloading resolution for CUDA/HIP
-fgpu-rdc
Generate relocatable device code, also known as separate compilation mode
-fhalf-no-semantic-interposition
Like -fno-semantic-interposition but don't use local aliases
-fheinous-gnu-extensions
-fhip-dump-offload-linker-script
-fhip-new-launch-api
Use new kernel launching API for HIP
-fhonor-infinites
-fhonor-infinities
-fhonor-nans
-fhosted
-fident
-fignore-exceptions
Enable support for ignoring exception handling constructs
-fignore-objc-weak
ignore __weak qualifiers in manual reference counting
-filelist
-filetype
Specify the output file type ('asm', 'null', or 'obj')
-fimplement-inlines
-fimplicit-module-maps
Implicitly search the file system for module map files.
-fimplicit-modules
-fimplicit-none
-fimplicit-templates
-finclude-default-header
Include default header file for OpenCL
-findirect-virtual-calls
-finit-character=
-finit-integer=
-finit-local-zero
-finit-logical=
-finit-real=
-finline-functions-called-once
-finline-functions
Inline suitable functions
-finline-hint-functions
Inline functions which are (explicitly or implicitly) marked inline
-finline-limit=
-finline-limit
-finline-small-functions
-finline
-finput-charset=
-finstrument-function-entry-bare
Instrument function entry only, after inlining, without arguments to the instrumentation call
-finstrument-functions-after-inlining
Like -finstrument-functions, but insert the calls after inlining
-finstrument-functions
Generate calls to instrument function entry and exit
-finteger-4-integer-8
-fintegrated-as
Enable the integrated assembler
-fintegrated-cc1
Run cc1 in-process
-fintrinsic-modules-path
-fipa-cp
-fivopts
-fix-only-warnings
Apply fix-it advice only for warnings, not errors
-fix-what-you-can
Apply fix-it advice even in the presence of unfixable errors
-fixit-recompile
Apply fix-it changes and recompile
-fixit-to-temporary
Apply fix-it changes to temporary files
-fixit=
Apply fix-it advice creating a file with the given suffix
-fixit
Apply fix-it advice to the input source
Include file before parsing
Set preprocess output file name (with /P)
-fjump-tables
Use jump tables for lowering switches
-fkeep-inline-functions
-fkeep-static-consts
Keep static const variables if unused
-flat_namespace
-flax-vector-conversions=
Enable implicit vector bit-casts
none,integer,all
-flax-vector-conversions
-flegacy-pass-manager
Use the legacy pass manager in LLVM
-flimit-debug-info
-flimited-precision=
-flto-jobs=
Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
-flto-unit
Emit IR to support LTO unit features (CFI, whole program vtable opt)
-flto-visibility-public-std
Use public LTO visibility for classes in std and stdext namespaces
-flto=
Set LTO mode to either 'full' or 'thin'
thin,full
-flto
Enable LTO in 'full' mode
-fmacro-backtrace-limit=
-fmacro-backtrace-limit
Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit).
-fmacro-prefix-map=
remap file source paths in predefined preprocessor macros
-fmath-errno
Require math functions to indicate errors by setting errno
-fmax-array-constructor=
-fmax-errors=
-fmax-identifier-length
-fmax-stack-var-size=
-fmax-subrecord-length=
-fmax-tokens=
Max total number of preprocessed tokens for -Wmax-tokens.
-fmax-type-align=
Specify the maximum alignment to enforce on pointers lacking an explicit alignment
-fmemory-profile=
Enable heap memory profiling and dump results into <directory>
-fmemory-profile
Enable heap memory profiling
-fmerge-all-constants
Allow merging of constants
-fmerge-constants
-fmerge-functions
Permit merging of identical functions when optimizing.
-fmessage-length=
Format message diagnostics so that they fit within N columns
-fmodule-feature
Enable <feature> in module map requires declarations
<feature>
-fmodule-file-deps
-fmodule-file=
Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
[<name>=]<file>
-fmodule-format=
Select the container format for clang modules and PCH. Supported options are 'raw' and 'obj'.
-fmodule-implementation-of
-fmodule-map-file-home-is-cwd
Use the current working directory as the home directory of module maps specified by -fmodule-map-file=<FILE>
-fmodule-map-file=
Load this module map file
-fmodule-maps
-fmodule-name=
Specify the name of the module to build
-fmodule-name
-fmodule-private
-fmodules-cache-path=
Specify the module cache path
-fmodules-codegen
Generate code for uses of this module that assumes an explicit object file will be built for the module
-fmodules-debuginfo
Generate debug info for types in an object file built from this module and do not generate them elsewhere
-fmodules-decluse
Require declaration of modules used within a module
-fmodules-disable-diagnostic-validation
Disable validation of the diagnostic options when loading the module
-fmodules-embed-all-files
Embed the contents of all files read by this compilation into the produced module file.
-fmodules-embed-file=
Embed the contents of the specified file into the module file being compiled.
-fmodules-hash-content
Enable hashing the content of a module file
-fmodules-hash-error-diagnostics
Use a separate module cache for modules compiled with conflicting -Werror options
-fmodules-ignore-macro=
Ignore the definition of the given macro when building and loading modules
-fmodules-local-submodule-visibility
Enforce name visibility rules across submodules of the same top-level module.
-fmodules-prune-after=
Specify the interval (in seconds) after which a module file will be considered unused
<seconds>
-fmodules-prune-interval=
Specify the interval (in seconds) between attempts to prune the module cache
-fmodules-search-all
Search even non-imported modules to resolve references
-fmodules-strict-context-hash
Enable hashing of all compiler options that could impact the semantics of a module in an implicit build
-fmodules-strict-decluse
Like -fmodules-decluse but requires all headers to be in modules
-fmodules-ts
Enable support for the C++ Modules TS
-fmodules-user-build-path
Specify the module user build path
-fmodules-validate-input-files-content
Validate PCM input files based on content if mtime differs
-fmodules-validate-once-per-build-session
Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
-fmodules-validate-system-headers
Validate the system headers that a module depends on when loading the module
-fmodules
Enable the 'modules' language feature
-fmodulo-sched-allow-regmoves
-fmodulo-sched
-fms-compatibility-version=
Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
-fms-compatibility
Enable full Microsoft Visual C++ compatibility
-fms-extensions
Accept some non-standard constructs supported by the Microsoft compiler
-fms-memptr-rep=
single,multiple,virtual
-fms-volatile
-fmsc-version=
Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
-fmudflapth
-fmudflap
-fnative-half-arguments-and-returns
Use the native __fp16 type for arguments and returns (and skip ABI-specific lowering)
-fnative-half-type
Use the native half type for __fp16 instead of promoting to float
-fnested-functions
-fnew-alignment=
Specifies the largest alignment guaranteed by '::operator new(size_t)'
<align>
-fnew-alignment
-fnext-runtime
-fno-aapcs-bitfield-width
Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
-fno-access-control
Disable C++ access control
-fno-addrsig
Don't emit an address-significance table
-fno-aggressive-function-elimination
-fno-align-commons
-fno-align-functions
-fno-align-jumps
-fno-align-labels
-fno-align-loops
-fno-aligned-allocation
-fno-aligned-new
-fno-all-intrinsics
-fno-allow-editor-placeholders
-fno-altivec
-fno-apinotes-modules
Disable module-based external API notes support
-fno-apinotes
Disable external API notes support
-fno-apple-pragma-pack
-fno-application-extension
-fno-asm-blocks
-fno-asm
-fno-associative-math
-fno-assume-sane-operator-new
Don't assume that C++'s global operator new can't alias any pointer
-fno-asynchronous-unwind-tables
-fno-auto-profile-accurate
-fno-auto-profile
-fno-autolink
Disable generation of linker directives for automatic library linking
-fno-automatic
-fno-backslash
-fno-backtrace
-fno-bitfield-type-align
Ignore bit-field types when aligning structures
-fno-blocks
-fno-borland-extensions
-fno-bounds-check
-fno-branch-count-reg
-fno-branch-target-identification
-fno-builtin-
Disable implicit builtin knowledge of a specific function
-fno-builtin
Disable implicit builtin knowledge of functions
-fno-c++-static-destructors
Disable C++ static destructor registration
-fno-caller-saves
-fno-caret-diagnostics
-fno-char8_t
Disable C++ builtin type char8_t
-fno-check-array-temporaries
-fno-check-new
-fno-color-diagnostics
Disable colors in diagnostics
-fno-common
Compile common globals like normal definitions
-fno-complete-member-pointers
Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
-fno-concept-satisfaction-caching
Disable satisfaction caching for C++2a Concepts.
-fno-const-strings
Don't use a const qualified type for string literals in C and ObjC
-fno-constant-cfstrings
Disable creation of CodeFoundation-type constant strings
-fno-constant-nsarray-literals
Disable creation of CodeFoundation-type constant initializer `NSArray`s from array literals
-fno-constant-nsdictionary-literals
Disable creation of CodeFoundation-type constant initializer `NSDictionary`s from dictionary literals
-fno-constant-nsnumber-literals
Disable creation of CodeFoundation-type constant initializer `NSNumber`s from number literals
-fno-coroutines-ts
-fno-coverage-mapping
Disable code coverage analysis
-fno-crash-diagnostics
Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
-fno-cray-pointer
-fno-cuda-approx-transcendentals
Don't use approximate transcendental functions
-fno-cuda-flush-denormals-to-zero
-fno-cuda-host-device-constexpr
Don't treat unattributed constexpr functions as __host__ __device__.
-fno-cuda-rdc
-fno-cuda-short-ptr
-fno-cxx-exceptions
-fno-cxx-modules
-fno-d-lines-as-code
-fno-d-lines-as-comments
-fno-data-sections
-fno-debug-info-for-profiling
-fno-debug-macro
Do not emit macro debug information
-fno-debug-pass-manager
Disables debug printing for the new pass manager
-fno-debug-ranges-base-address
-fno-debug-types-section
-fno-declspec
Disallow __declspec as a keyword
-fno-default-double-8
-fno-default-inline
-fno-default-integer-8
-fno-default-real-8
-fno-defer-pop
-fno-delayed-template-parsing
Disable delayed template parsing
-fno-delete-null-pointer-checks
Do not treat usage of null pointers as undefined behavior
-fno-deprecated-macro
Undefines the __DEPRECATED macro
-fno-devirtualize-speculatively
-fno-devirtualize
-fno-diagnostics-color
-fno-diagnostics-fixit-info
Do not include fixit information in diagnostics
-fno-diagnostics-show-hotness
-fno-diagnostics-show-note-include-stack
-fno-diagnostics-show-option
-fno-diagnostics-use-presumed-location
Ignore #line directives when displaying diagnostic locations
-fno-digraphs
Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
-fno-discard-value-names
Do not discard value names in LLVM IR
-fno-dllexport-inlines
-fno-dollar-ok
-fno-dollars-in-identifiers
Disallow '$' in identifiers
-fno-double-square-bracket-attributes
Disable '[[]]' attributes in all C and C++ language modes
-fno-dump-fortran-optimized
-fno-dump-fortran-original
-fno-dump-parse-tree
-fno-dwarf-directory-asm
-fno-dwarf2-cfi-asm
-fno-elide-constructors
Disable C++ copy constructor elision
-fno-elide-type
Do not elide types when printing diagnostics
-fno-eliminate-unused-debug-symbols
-fno-eliminate-unused-debug-types
Emit  debug info for defined but unused types
-fno-emulated-tls
-fno-escaping-block-tail-calls
-fno-exceptions
Disable support for exception handling
-fno-expensive-optimizations
-fno-experimental-isel
-fno-experimental-new-pass-manager
-fno-experimental-relative-c++-abi-vtables
Do not use the experimental C++ class ABI for classes with virtual tables
-fno-extended-identifiers
-fno-external-blas
-fno-f2c
-fno-fast-math
-fno-fat-lto-objects
-fno-fine-grained-bitfield-accesses
Use large-integer access for consecutive bitfield runs.
-fno-finite-loops
Do not assume that any loop is finite.
-fno-finite-math-only
-fno-fixed-form
-fno-fixed-point
Disable fixed point types
-fno-float-store
-fno-for-scope
-fno-force-dwarf-frame
-fno-force-emit-vtables
-fno-force-enable-int128
Disable support for int128_t type
-fno-free-form
-fno-friend-injection
-fno-frontend-optimize
-fno-function-attribute-list
-fno-function-sections
-fno-gcse-after-reload
-fno-gcse-las
-fno-gcse-sm
-fno-gcse
-fno-global-isel
Disables the global instruction selector
-fno-gnu-inline-asm
Disable GNU style inline asm
-fno-gnu-keywords
-fno-gnu89-inline
-fno-gnu
-fno-gpu-allow-device-init
Don't allow device side init function in HIP
-fno-gpu-defer-diag
Don't defer host/device related diagnostic messages for CUDA/HIP
-fno-gpu-exclude-wrong-side-overloads
Exclude wrong side overloads only if there are same side overloads in overloading resolution for CUDA/HIP
-fno-gpu-rdc
-fno-hip-new-launch-api
Don't use new kernel launching API for HIP
-fno-honor-infinites
-fno-honor-infinities
-fno-honor-nans
-fno-ident
-fno-implement-inlines
-fno-implicit-module-maps
-fno-implicit-modules
-fno-implicit-none
-fno-implicit-templates
-fno-init-local-zero
-fno-inline-functions-called-once
-fno-inline-functions
-fno-inline-limit
-fno-inline-small-functions
-fno-inline
-fno-integer-4-integer-8
-fno-integrated-as
Disable the integrated assembler
-fno-integrated-cc1
Spawn a separate process for each cc1
-fno-intrinsic-modules-path
-fno-ipa-cp
-fno-ivopts
-fno-jump-tables
Do not use jump tables for lowering switches
-fno-keep-inline-functions
-fno-keep-static-consts
Don't keep static const variables if unused
-fno-lax-vector-conversions
-fno-legacy-pass-manager
Use the new pass manager in LLVM
-fno-limit-debug-info
-fno-lto-unit
-fno-lto
Disable LTO mode (default)
-fno-math-builtin
Disable implicit builtin knowledge of math functions
-fno-math-errno
-fno-max-identifier-length
-fno-max-type-align
-fno-memory-profile
Disable heap memory profiling
-fno-merge-all-constants
Disallow merging of constants
-fno-merge-constants
-fno-module-file-deps
-fno-module-maps
-fno-module-private
-fno-modules-decluse
-fno-modules-error-recovery
Do not automatically import modules for error recovery
-fno-modules-global-index
Do not automatically generate or update the global module index
-fno-modules-search-all
-fno-modules-validate-system-headers
-fno-modules
-fno-modulo-sched-allow-regmoves
-fno-modulo-sched
-fno-ms-compatibility
-fno-ms-extensions
-fno-non-call-exceptions
-fno-objc-arc-exceptions
-fno-objc-arc
-fno-objc-convert-messages-to-runtime-calls
-fno-objc-encode-cxx-class-template-spec
-fno-objc-exceptions
-fno-objc-infer-related-result-type
do not infer Objective-C related result type based on method family
-fno-objc-legacy-dispatch
-fno-objc-nonfragile-abi
-fno-objc-relative-method-lists
-fno-objc-weak
-fno-odr-hash-categories
Disable ODR hash checking for categories
-fno-odr-hash-interfaces
Disable ODR hash checking for interfaces
-fno-odr-hash-ivars
Disable ODR hash checking for ivars
-fno-odr-hash-methods
Disable ODR hash checking for methods
-fno-odr-hash-properties
Disable ODR hash checking for properties
-fno-odr-hash-protocols
Disable ODR hash checking for protocols
-fno-odr-hash-records
Disable ODR hash checking for records
-fno-omit-frame-pointer
-fno-openmp-cuda-force-full-runtime
-fno-openmp-cuda-mode
-fno-openmp-cuda-parallel-target-regions
Support only serial execution of target regions on Cuda-based devices.
-fno-openmp-optimistic-collapse
-fno-openmp-simd
-fno-openmp
-fno-operator-names
Do not treat C++ operator name keywords as synonyms for operators
-fno-optimize-sibling-calls
-fno-pack-derived
-fno-pack-struct
-fno-padding-on-unsigned-fixed-point
-fno-pascal-strings
-fno-pch-codegen
Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
-fno-pch-debuginfo
Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
-fno-pch-instantiate-templates
-fno-pch-timestamp
Disable inclusion of timestamp in precompiled headers
-fno-peel-loops
-fno-permissive
-fno-PIC
-fno-pic
-fno-PIE
-fno-pie
-fno-plt
Use GOT indirection instead of PLT to make external function calls (x86 only)
-fno-prebuilt-implicit-modules
-fno-prefetch-loop-arrays
-fno-preserve-as-comments
Do not preserve comments in inline assembly
-fno-printf
-fno-profile-arcs
-fno-profile-correction
-fno-profile-generate-sampling
-fno-profile-generate
Disable generation of profile instrumentation.
-fno-profile-instr-generate
-fno-profile-instr-use
Disable using instrumentation data for profile-guided optimization
-fno-profile-reusedist
-fno-profile-sample-accurate
-fno-profile-sample-use
-fno-profile-use
-fno-profile-values
-fno-profile
-fno-protect-parens
-fno-pseudo-probe-for-profiling
Do not emit pseudo probes for sample profiler
-fno-ptrauth-abi-version
Disable Pointer Authentication ABI versioning
-fno-ptrauth-auth-traps
-fno-ptrauth-block-descriptor-pointers
-fno-ptrauth-calls
-fno-ptrauth-function-pointer-type-discrimination
-fno-ptrauth-indirect-gotos
-fno-ptrauth-intrinsics
-fno-ptrauth-kernel-abi-version
Disable Pointer Authentication kernel ABI versioning
-fno-ptrauth-objc-isa
-fno-ptrauth-returns
-fno-ptrauth-soft
-fno-ptrauth-vtable-pointer-address-discrimination
-fno-ptrauth-vtable-pointer-type-discrimination
-fno-range-check
-fno-real-4-real-10
-fno-real-4-real-16
-fno-real-4-real-8
-fno-real-8-real-10
-fno-real-8-real-16
-fno-real-8-real-4
-fno-realloc-lhs
-fno-reciprocal-math
-fno-record-command-line
-fno-record-gcc-switches
-fno-recovery-ast-type
-fno-recovery-ast
-fno-recursive
-fno-register-global-dtors-with-atexit
Don't use atexit or __cxa_atexit to register global destructors
-fno-regs-graph
-fno-relaxed-template-template-args
-fno-rename-registers
-fno-reorder-blocks
-fno-repack-arrays
-fno-reroll-loops
-fno-rewrite-imports
-fno-rewrite-includes
-fno-ripa
-fno-ropi
-fno-rounding-math
-fno-rtlib-add-rpath
Do not add -rpath with architecture-specific resource directory to the linker flags
-fno-rtti-data
Disable generation of RTTI data
-fno-rtti
Disable generation of rtti information
-fno-rwpi
-fno-sanitize-address-poison-custom-array-cookie
Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
-fno-sanitize-address-use-after-scope
Disable use-after-scope detection in AddressSanitizer
-fno-sanitize-address-use-odr-indicator
Disable ODR indicator globals
-fno-sanitize-blacklist
Don't use blacklist file for sanitizers
-fno-sanitize-cfi-canonical-jump-tables
Do not make the jump table addresses canonical in the symbol table
-fno-sanitize-cfi-cross-dso
Disable control flow integrity (CFI) checks for cross-DSO calls.
-fno-sanitize-coverage=
Disable specified features of coverage instrumentation for Sanitizers
func,bb,edge,indirect-calls,trace-bb,trace-cmp,trace-div,trace-gep,8bit-counters,trace-pc,trace-pc-guard,no-prune,inline-8bit-counters,inline-bool-flag
-fno-sanitize-link-c++-runtime
-fno-sanitize-link-runtime
-fno-sanitize-memory-track-origins
Disable origins tracking in MemorySanitizer
-fno-sanitize-memory-use-after-dtor
Disable use-after-destroy detection in MemorySanitizer
-fno-sanitize-minimal-runtime
-fno-sanitize-recover=
Disable recovery for specified sanitizers
-fno-sanitize-recover
-fno-sanitize-stats
Disable sanitizer statistics gathering.
-fno-sanitize-thread-atomics
Disable atomic operations instrumentation in ThreadSanitizer
-fno-sanitize-thread-func-entry-exit
Disable function entry/exit instrumentation in ThreadSanitizer
-fno-sanitize-thread-memory-access
Disable memory access instrumentation in ThreadSanitizer
-fno-sanitize-trap=
Disable trapping for specified sanitizers
-fno-sanitize-trap
Disable trapping for all sanitizers
-fno-sanitize-undefined-trap-on-error
-fno-sanitize=
-fno-save-optimization-record
-fno-schedule-insns2
-fno-schedule-insns
-fno-second-underscore
-fno-see
-fno-semantic-interposition
-fno-short-enums
-fno-short-wchar
Force wchar_t to be an unsigned int
-fno-show-column
Do not include column number on diagnostics
-fno-show-source-location
Do not include source location information with diagnostics
-fno-sign-zero
-fno-signaling-math
-fno-signaling-nans
-fno-signed-char
char is unsigned
-fno-signed-wchar
Use an unsigned type for wchar_t
-fno-signed-zeros
Allow optimizations that ignore the sign of floating point zeros
-fno-single-precision-constant
-fno-sized-deallocation
-fno-slp-vectorize-aggressive
-fno-slp-vectorize
-fno-small-block-descriptors
-fno-spec-constr-count
-fno-spell-checking
Disable spell-checking
-fno-split-cold-code
Disable splitting of cold code when optimizing.
-fno-split-dwarf-inlining
-fno-split-lto-unit
-fno-split-machine-functions
Disable late function splitting using profile information (x86 ELF)
-fno-stack-arrays
-fno-stack-check
Disable stack checking
-fno-stack-clash-protection
Disable stack clash protection
-fno-stack-protector
Disable the use of stack protectors
-fno-stack-size-section
-fno-standalone-debug
Limit debug information produced to reduce size of debug binary
-fno-strength-reduce
-fno-strict-aliasing
-fno-strict-enums
-fno-strict-float-cast-overflow
Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
-fno-strict-modules-decluse
-fno-strict-overflow
-fno-strict-return
Don't treat control flow paths that fall off the end of a non-void function as unreachable
-fno-strict-vtable-pointers
-fno-struct-path-tbaa
-fno-sycl
Disable SYCL kernels compilation for device
-fno-target-variant-availability-checks
-fno-temp-file
Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
-fno-test-coverage
-fno-threadsafe-statics
Do not emit code to make initialization of local statics thread safe
-fno-tls-model
-fno-tracer
-fno-trapping-math
-fno-tree-dce
-fno-tree-salias
-fno-tree-slp-vectorize
-fno-tree-ter
-fno-tree-vectorizer-verbose
-fno-tree-vectorize
-fno-tree-vrp
-fno-trigraphs
Do not process trigraph sequences
-fno-underscoring
-fno-unique-basic-block-section-names
-fno-unique-internal-linkage-names
-fno-unique-section-names
Don't use unique names for text and data sections
-fno-unit-at-a-time
-fno-unroll-all-loops
-fno-unroll-loops
Turn off loop unroller
-fno-unsafe-loop-optimizations
-fno-unsafe-math-optimizations
-fno-unsigned-char
-fno-unswitch-loops
-fno-unwind-tables
-fno-use-cxa-atexit
Don't use __cxa_atexit for calling destructors
-fno-use-init-array
Use .ctors/.dtors instead of .init_array/.fini_array
-fno-use-line-directives
-fno-use-linker-plugin
-fno-validate-pch
Disable validation of precompiled headers
-fno-var-tracking
-fno-variable-expansion-in-unroller
-fno-vect-cost-model
-fno-vectorize
-fno-verbose-asm
-fno-virtual-function-elimination
-fno-visibility-from-dllstorageclass
-fno-visibility-inlines-hidden-static-local-var
Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
-fno-wchar
Disable C++ builtin type wchar_t
-fno-web
-fno-whole-file
-fno-whole-program-vtables
-fno-whole-program
-fno-working-directory
-fno-wrapv
-fno-xray-always-emit-customevents
-fno-xray-always-emit-typedevents
-fno-xray-function-index
Omit function index section at the expense of single-function patching performance
-fno-xray-ignore-loops
-fno-xray-instrument
-fno-zero-initialized-in-bss
Don't place zero initialized data in BSS
-fno-zvector
-fno_modules-validate-input-files-content
-fno_pch-validate-input-files-content
-fnon-call-exceptions
-fnoopenmp-relocatable-target
-fnoopenmp-use-tls
-fnoxray-link-deps
-fobjc-abi-version=
-fobjc-arc-cxxlib=
Objective-C++ Automatic Reference Counting standard library kind
libc++,libstdc++,none
-fobjc-arc-exceptions
Use EH-safe code when synthesizing retains and releases in -fobjc-arc
-fobjc-arc-unsafeclaim
Enable an optimization to dynamically avoid retain/releases of call results in __unsafe_unretained contexts
-fobjc-arc
Synthesize retain and release calls for Objective-C pointers
-fobjc-atdefs
-fobjc-call-cxx-cdtors
-fobjc-constant-literals
-fobjc-convert-messages-to-runtime-calls
-fobjc-disable-direct-methods-for-testing
Ignore attribute objc_direct so that direct methods can be tested
-fobjc-dispatch-method=
Objective-C dispatch method to use
legacy,non-legacy,mixed
-fobjc-encode-cxx-class-template-spec
Fully encode c++ class template specialization
-fobjc-exceptions
Enable Objective-C exceptions
-fobjc-gc-only
Use GC exclusively for Objective-C related memory management
-fobjc-gc
Enable Objective-C garbage collection
-fobjc-infer-related-result-type
-fobjc-legacy-dispatch
-fobjc-link-runtime
-fobjc-new-property
-fobjc-nonfragile-abi-version=
-fobjc-nonfragile-abi
-fobjc-relative-method-lists
Enable relative method lists
-fobjc-runtime-has-weak
The target Objective-C runtime supports ARC weak operations
-fobjc-runtime=
Specify the target Objective-C runtime kind and version
-fobjc-sender-dependent-dispatch
-fobjc-subscripting-legacy-runtime
Allow Objective-C array and dictionary subscripting in legacy runtime
-fobjc-weak
Enable ARC-style weak references in Objective-C
-fodr-hash-attributes
Enable ODR hash checking for attributes 
-fomit-frame-pointer
-fopenmp-cuda-blocks-per-sm=
-fopenmp-cuda-force-full-runtime
-fopenmp-cuda-mode
-fopenmp-cuda-number-of-sm=
-fopenmp-cuda-parallel-target-regions
Support parallel execution of target regions on Cuda-based devices.
-fopenmp-cuda-teams-reduction-recs-num=
-fopenmp-enable-irbuilder
Use the experimental OpenMP-IR-Builder codegen path.
-fopenmp-host-ir-file-path
Path to the IR file produced by the frontend for the host.
-fopenmp-is-device
Generate code only for an OpenMP target device.
-fopenmp-optimistic-collapse
-fopenmp-relocatable-target
-fopenmp-simd
Emit OpenMP code only for SIMD-based constructs.
-fopenmp-targets=
Specify comma-separated list of triples OpenMP offloading targets to be supported
-fopenmp-use-tls
-fopenmp-version=
-fopenmp=
-fopenmp
Parse OpenMP pragmas and generate parallel code.
-foperator-arrow-depth=
-foperator-arrow-depth
Maximum number of 'operator->'s to call for a member access
-foptimization-record-file=
Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
-foptimization-record-passes=
Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
<regex>
-foptimize-sibling-calls
--for-linker=
--for-linker
--force-link=
--force-link
-force_cpusubtype_ALL
-force_flat_namespace
-force_load
-forder-file-instrumentation
Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
-foutput-class-dir=
-foverride-record-layout=
Override record layouts with those in the given file
Set output object file (with /c)
/fp:except-
/fp:except
/fp:fast
/fp:precise
/fp:strict
-fpack-derived
-fpack-struct=
Specify the default maximum struct packing alignment
-fpack-struct
-fpadding-on-unsigned-fixed-point
Force each unsigned fixed point type to have an extra bit of padding to align their scales with those of signed fixed point types
-fparse-all-comments
-fpascal-strings
Recognize and construct Pascal-style string literals
-fpass-by-value-is-noalias
Allows assuming by-value parameters do not alias any other value. Has no effect on non-trivially-copyable classes in C++.
-fpass-plugin=
Load pass plugin from a dynamic shared object file (only with new pass manager).
<dsopath>
-fpatchable-function-entry-offset=
Generate M NOPs before function entry
-fpatchable-function-entry=
Generate M NOPs before function entry and N-M NOPs after function entry
<N,M>
-fpcc-struct-return
Override the default ABI to return all structs on the stack
-fpch-codegen
Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
-fpch-debuginfo
Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
-fpch-instantiate-templates
Instantiate templates already while building a PCH
-fpch-preprocess
-fpch-validate-input-files-content
Validate PCH input files based on content if mtime differs
-fpeel-loops
-fpermissive
-fPIC
-fpic
-fPIE
-fpie
-fplt
-fplugin=
Load the named plugin (dynamic shared object)
-fprebuilt-implicit-modules
Look up implicit modules in the prebuilt module path
-fprebuilt-module-path=
Specify the prebuilt module path
-fprefetch-loop-arrays
-fpreserve-as-comments
-fpreserve-vec3-type
Preserve 3-component vector type
-fprintf
-fproc-stat-report=
Save subprocess statistics to the given file
-fproc-stat-report
Print subprocess statistics
-fprofile-arcs
-fprofile-correction
-fprofile-dir=
-fprofile-exclude-files=
Instrument only functions from files where names don't match all the regexes separated by a semi-colon
-fprofile-filter-files=
Instrument only functions from files where names match any regex separated by a semi-colon
-fprofile-generate-sampling
-fprofile-generate=
Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
-fprofile-generate
Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
-fprofile-instr-generate=
Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
-fprofile-instr-generate
Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
-fprofile-instr-use=
Use instrumentation data for profile-guided optimization
-fprofile-instr-use
-fprofile-instrument-path=
-fprofile-instrument-use-path=
Specify the profile path in PGO use compilation
-fprofile-instrument=
Enable PGO instrumentation. The accepted value is clang, llvm, or none
none,clang,llvm,csllvm
-fprofile-remapping-file=
Use the remappings described in <file> to match the profile data against names in the program
-fprofile-remapping-file
-fprofile-reusedist
-fprofile-sample-accurate
Specifies that the sample profile is accurate
-fprofile-sample-use=
Enable sample-based profile guided optimizations
-fprofile-sample-use
-fprofile-update=
Set update method of profile counters (atomic,prefer-atomic,single)
<method>
atomic,prefer-atomic,single
-fprofile-use=
Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
<pathname>
-fprofile-use
-fprofile-values
-fprofile
-fprotect-parens
-fpseudo-probe-for-profiling
Emit pseudo probes for sample profiler
-fptrauth-abi-version=
Pointer Authentication ABI version
-fptrauth-auth-traps
Enable traps on authentication failures
-fptrauth-block-descriptor-pointers
enable signing block descriptors
-fptrauth-calls
Enable signing and authentication of all indirect calls
-fptrauth-function-pointer-type-discrimination
Enabling type discrimination on C function pointers
-fptrauth-indirect-gotos
Enable signing and authentication of indirect goto targets
-fptrauth-intrinsics
Enable pointer-authentication intrinsics
-fptrauth-kernel-abi-version
Enable Pointer Authentication kernel ABI version
-fptrauth-objc-isa-masking
pre- and post-authentication masking mode of objective-c isa pointers
-fptrauth-objc-isa-mode=
Authentication mode for ObjC isa field. Full auth if unspecified
strip,sign-and-strip,sign-and-auth
-fptrauth-objc-isa
Enable signing and authentication of Objective-C object's 'isa' field
-fptrauth-returns
Enable signing and authentication of return addresses
-fptrauth-soft
Enable software lowering of pointer authentication
-fptrauth-vtable-pointer-address-discrimination
Enable address discrimination of vtable pointers
-fptrauth-vtable-pointer-type-discrimination
Enable type discrimination of vtable pointers
Set pch file name (with /Yc and /Yu)
-framework
-frandom-seed=
-frange-check
-freal-4-real-10
-freal-4-real-16
-freal-4-real-8
-freal-8-real-10
-freal-8-real-16
-freal-8-real-4
-frealloc-lhs
-freciprocal-math
Allow division operations to be reassociated
-frecord-command-line
-frecord-gcc-switches
-frecord-marker=
-frecovery-ast-type
Preserve the type for recovery expressions when possible
-frecovery-ast
Preserve expressions in AST rather than dropping them when encountering semantic errors
-frecursive
-freg-struct-return
Override the default ABI to return small structs in registers
-fregister-global-dtors-with-atexit
Use atexit or __cxa_atexit to register global destructors
-fregs-graph
-frelaxed-template-template-args
Enable C++17 relaxed template template argument matching
-frename-registers
-freorder-blocks
-frepack-arrays
-freroll-loops
Turn on loop reroller
-fretain-comments-from-system-headers
-frewrite-imports
-frewrite-includes
-frewrite-map-file=
-frewrite-map-file
-fripa
-fropi
Generate read-only position independent code (ARM only)
-frounding-math
-frtlib-add-rpath
Add -rpath with architecture-specific resource directory to the linker flags
-frtti-data
-frtti
-frwpi
Generate read-write position independent code (ARM only)
-fsanitize-address-field-padding=
Level of field padding for AddressSanitizer
-fsanitize-address-globals-dead-stripping
Enable linker dead stripping of globals in AddressSanitizer
-fsanitize-address-poison-custom-array-cookie
Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
-fsanitize-address-use-after-scope
Enable use-after-scope detection in AddressSanitizer
-fsanitize-address-use-odr-indicator
Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
-fsanitize-blacklist=
Path to blacklist file for sanitizers
-fsanitize-cfi-canonical-jump-tables
Make the jump table addresses canonical in the symbol table
-fsanitize-cfi-cross-dso
Enable control flow integrity (CFI) checks for cross-DSO calls.
-fsanitize-cfi-icall-generalize-pointers
Generalize pointers in CFI indirect call type signature checks
-fsanitize-coverage-8bit-counters
Enable frequency counters in sanitizer coverage
-fsanitize-coverage-allowlist=
Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
-fsanitize-coverage-blacklist=
Deprecated, use -fsanitize-coverage-blocklist= instead
-fsanitize-coverage-blocklist=
Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
-fsanitize-coverage-indirect-calls
Enable sanitizer coverage for indirect calls
-fsanitize-coverage-inline-8bit-counters
Enable inline 8-bit counters in sanitizer coverage
-fsanitize-coverage-inline-bool-flag
Enable inline bool flag in sanitizer coverage
-fsanitize-coverage-no-prune
Disable coverage pruning (i.e. instrument all blocks/edges)
-fsanitize-coverage-pc-table
Create a table of coverage-instrumented PCs
-fsanitize-coverage-stack-depth
Enable max stack depth tracing
-fsanitize-coverage-trace-bb
Enable basic block tracing in sanitizer coverage
-fsanitize-coverage-trace-cmp
Enable cmp instruction tracing in sanitizer coverage
-fsanitize-coverage-trace-div
Enable div instruction tracing in sanitizer coverage
-fsanitize-coverage-trace-gep
Enable gep instruction tracing in sanitizer coverage
-fsanitize-coverage-trace-pc-guard
Enable PC tracing with guard in sanitizer coverage
-fsanitize-coverage-trace-pc
Enable PC tracing in sanitizer coverage
-fsanitize-coverage-type=
Sanitizer coverage type
-fsanitize-coverage-whitelist=
Deprecated, use -fsanitize-coverage-allowlist= instead
-fsanitize-coverage=
Specify the type of coverage instrumentation for Sanitizers
-fsanitize-hwaddress-abi=
Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
-fsanitize-link-c++-runtime
-fsanitize-link-runtime
-fsanitize-memory-track-origins=
Enable origins tracking in MemorySanitizer
-fsanitize-memory-track-origins
-fsanitize-memory-use-after-dtor
Enable use-after-destroy detection in MemorySanitizer
-fsanitize-minimal-runtime
-fsanitize-recover=
Enable recovery for specified sanitizers
-fsanitize-recover
-fsanitize-stats
Enable sanitizer statistics gathering.
-fsanitize-system-blacklist=
Path to system blacklist file for sanitizers
-fsanitize-thread-atomics
Enable atomic operations instrumentation in ThreadSanitizer (default)
-fsanitize-thread-func-entry-exit
Enable function entry/exit instrumentation in ThreadSanitizer (default)
-fsanitize-thread-memory-access
Enable memory access instrumentation in ThreadSanitizer (default)
-fsanitize-trap=
Enable trapping for specified sanitizers
-fsanitize-trap
Enable trapping for all sanitizers
-fsanitize-undefined-strip-path-components=
Strip (or keep only, if negative) a given number of path components when emitting check metadata.
<number>
-fsanitize-undefined-trap-on-error
-fsanitize=
Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
<check>
-fsave-optimization-record=
Generate an optimization record file in a specific format
<format>
-fsave-optimization-record
Generate a YAML optimization record file
-fsched-interblock
-fschedule-insns2
-fschedule-insns
-fsecond-underscore
-fsee
-fseh-exceptions
Use SEH style exceptions
-fsemantic-interposition
-fshort-enums
Allocate to an enum type only as many bytes as it needs for the declared range of possible values
-fshort-wchar
Force wchar_t to be a short unsigned int
-fshow-column
-fshow-overloads=
Which overload candidates to show when overload resolution fails: best|all; defaults to all
best,all
-fshow-source-location
-fsign-zero
-fsignaling-math
-fsignaling-nans
-fsigned-bitfields
-fsigned-char
char is signed
-fsigned-wchar
Use a signed type for wchar_t
-fsigned-zeros
-fsingle-precision-constant
-fsized-deallocation
Enable C++14 sized global deallocation functions
-fsjlj-exceptions
Use SjLj style exceptions
-fslp-vectorize-aggressive
-fslp-vectorize
Enable the superword-level parallelism vectorization passes
-fsmall-block-descriptors
Enable small block descriptors
-fspec-constr-count
-fspell-checking-limit=
-fspell-checking-limit
Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit).
-fspell-checking
-fsplit-cold-code
Permit splitting of cold code when optimizing (off by default).
-fsplit-dwarf-inlining
Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
-fsplit-lto-unit
Enables splitting of the LTO unit
-fsplit-machine-functions
Enable late function splitting using profile information (x86 ELF)
-fsplit-stack
-fstack-arrays
-fstack-check
Enable stack checking
-fstack-clash-protection
Enable stack clash protection
-fstack-protector-all
Enable stack protectors for all functions
-fstack-protector-strong
Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
-fstack-protector
Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function's return address. The reference stack guard value is stored in a global variable.
-fstack-size-section
Emit section containing metadata on function stack sizes
-fstandalone-debug
Emit full debug info for all types used by the program
-fstrength-reduce
-fstrict-aliasing
-fstrict-enums
Enable optimizations based on the strict definition of an enum's value range
-fstrict-float-cast-overflow
Assume that overflowing float-to-int casts are undefined (default)
-fstrict-overflow
-fstrict-return
-fstrict-vtable-pointers
Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
-fstruct-path-tbaa
-fsycl-is-device
Generate code for SYCL device.
-fsycl
Enable SYCL kernels compilation for device
-fsymbol-partition=
-fsyntax-only
-fsystem-module
Build this module as a system module. Only used with -emit-module
-ftabstop=
-ftabstop
Set the tab stop distance.
-ftarget-variant-availability-checks
Enable availability checks for the target variant platform
-ftemplate-backtrace-limit=
-ftemplate-backtrace-limit
Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit).
-ftemplate-depth-
-ftemplate-depth=
-ftemplate-depth
Maximum depth of recursive template instantiation
-fterminated-vtables
-ftest-coverage
-ftest-module-file-extension=
introduce a module file extension for testing purposes. The argument is parsed as blockname:major:minor:hashed:user info
-fthin-link-bitcode=
Write minimized bitcode to <file> for the ThinLTO thin link only
-fthinlto-index=
Perform ThinLTO importing using provided function summary index
-fthreadsafe-statics
-ftime-report=
(For new pass manager) "per-pass": one report for each pass; "per-pass-run": one report for each pass invocation
per-pass,per-pass-run
-ftime-report
-ftime-trace-granularity=
Minimum time granularity (in microseconds) traced by time profiler
-ftime-trace
Turn on time profiler. Generates JSON file based on output filename.
-ftls-model=
global-dynamic,local-dynamic,initial-exec,local-exec
-ftls-model
-ftracer
-ftrap-function=
Issue call to specified function rather than a trap instruction
-ftrapping-math
-ftrapv-handler=
Specify the function to be called on overflow
<function name>
-ftrapv-handler
-ftrapv
Trap on integer overflow
-ftree-dce
-ftree-salias
-ftree-slp-vectorize
-ftree-ter
-ftree-vectorizer-verbose
-ftree-vectorize
-ftree-vrp
-ftrigraphs
Process trigraph sequences
-ftrivial-auto-var-init-stop-after=
Stop initializing trivial automatic stack variables after the specified number of instances
-ftrivial-auto-var-init=
Initialize trivial automatic stack variables: uninitialized (default) | pattern
uninitialized,zero,pattern
-ftype-visibility
Default type visibility
-function-alignment
default alignment for functions
-funderscoring
-funique-basic-block-section-names
Use unique names for basic block sections (ELF Only)
-funique-internal-linkage-names
Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
-funique-section-names
-funit-at-a-time
-funknown-anytype
Enable parser support for the __unknown_anytype type; for testing purposes only
-funroll-all-loops
-funroll-loops
Turn on loop unroller
-funsafe-loop-optimizations
-funsafe-math-optimizations
-funsigned-bitfields
-funsigned-char
-funswitch-loops
-funwind-tables
-fuse-ctor-homing
Use constructor homing if we are using limited debug info already
-fuse-cxa-atexit
-fuse-init-array
-fuse-ld=
-fuse-line-directives
Use #line in preprocessed output
-fuse-linker-plugin
-fuse-register-sized-bitfield-access
Use register sized accesses to bit-fields, when possible.
-fvalidate-ast-input-files-content
Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
-fvariable-expansion-in-unroller
-fveclib=
Use the given vector functions library
Accelerate,libmvec,MASSV,SVML,none
-fvect-cost-model
-fvectorize
Enable the loop vectorization passes
-fverbose-asm
Generate verbose assembly output
-fvirtual-function-elimination
Enables dead virtual function elimination optimization. Requires -flto=full
-fvisibility-dllexport=
The visibility for dllexport defintions [-fvisibility-from-dllstorageclass]
hidden,protected,default
-fvisibility-externs-dllimport=
The visibility for dllimport external declarations [-fvisibility-from-dllstorageclass]
-fvisibility-externs-nodllstorageclass=
The visibility for external declarations without an explicit DLL dllstorageclass [-fvisibility-from-dllstorageclass]
-fvisibility-from-dllstorageclass
Set the visiblity of symbols in the generated code from their DLL storage class
-fvisibility-global-new-delete-hidden
Give global C++ operator new and delete declarations hidden visibility
-fvisibility-inlines-hidden-static-local-var
When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
-fvisibility-inlines-hidden
Give inline C++ member functions hidden visibility by default
-fvisibility-ms-compat
Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
-fvisibility-nodllstorageclass=
The visibility for defintiions without an explicit DLL export class [-fvisibility-from-dllstorageclass]
-fvisibility=
Set the default symbol visibility for all global declarations
hidden,default
-fvisibility
Default type and symbol visibility
default,hidden,internal,protected
-fwasm-exceptions
Use WebAssembly style exceptions
-fwchar-type=
Select underlying type for wchar_t
char,short,int
-fweb
-fwhole-file
-fwhole-program-vtables
Enables whole-program vtable optimization. Requires -flto
-fwhole-program
-fwrapv
Treat signed integer overflow as two's complement
-fwritable-strings
Store string literals as writable data
-fxray-always-emit-customevents
Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
-fxray-always-emit-typedevents
Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
-fxray-always-instrument=
DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
-fxray-attr-list=
Filename defining the list of functions/types for imbuing XRay attributes.
-fxray-function-groups=
Only instrument 1 of N groups
-fxray-function-index
-fxray-ignore-loops
Don't instrument functions with loops unless they also meet the minimum function size
-fxray-instruction-threshold=
Sets the minimum function size to instrument with XRay
-fxray-instruction-threshold
-fxray-instrumentation-bundle=
Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is 'all'.  'function' includes both 'function-entry' and 'function-exit'.
-fxray-instrument
Generate XRay instrumentation sleds on function entry and exit
-fxray-link-deps
Tells clang to add the link dependencies for XRay.
-fxray-modes=
List of modes to link in by default into XRay instrumented binaries.
-fxray-never-instrument=
DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
-fxray-selected-function-group=
When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
-fzero-initialized-in-bss
-fzvector
Enable System z vector language extension
Add directory to framework include search path
Assume thread-local variables are defined in the executable
--gcc-toolchain=
Use the gcc toolchain at the given directory
-gcc-toolchain
-gcodeview-ghash
Emit type record hashes in a .debug$H section
-gcodeview
Generate CodeView debug information
-gcoff
-gcolumn-info
-gdwarf-2
Generate source-level debug information with dwarf version 2
-gdwarf-3
Generate source-level debug information with dwarf version 3
-gdwarf-4
Generate source-level debug information with dwarf version 4
-gdwarf-5
Generate source-level debug information with dwarf version 5
-gdwarf-aranges
-gdwarf
Generate source-level debug information with the default dwarf version
Set __cdecl as a default calling convention
-gembed-source
Embed source text in DWARF debug sections
-gen-cdb-fragment-path
Emit a compilation database fragment to the specified directory
-gen-reproducer
Auto-generates preprocessed source files and a reproduction script
/GF-
Disable string pooling
-gfull
Enable string pooling (default)
-ggdb0
-ggdb1
-ggdb2
-ggdb3
-ggdb
-ggnu-pubnames
-ginline-line-tables
/GL-
-gline-directives-only
Emit debug line info directives only
-gline-tables-only
Emit debug line number tables only
-glldb
/Gm-
-gmlt
-gmodules
-gno-codeview-ghash
-gno-column-info
-gno-embed-source
Restore the default behavior of not embedding source text in DWARF debug sections
-gno-gnu-pubnames
-gno-inline-line-tables
Don't emit inline line tables.
-gno-pubnames
-gno-record-command-line
-gno-record-gcc-switches
-gno-split-dwarf
-gno-strict-dwarf
--gpu-instrument-lib=
Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
--gpu-max-threads-per-block=
Default max threads per block for kernel launch bounds for HIP
--gpu-use-aux-triple-only
Prepare '-aux-triple' only without populating '-aux-target-cpu' and '-aux-target-feature'.
-gpubnames
/GR-
Do not emit RTTI data
-grecord-command-line
-grecord-gcc-switches
/Gregcall
Set __regcall as a default calling convention
Emit RTTI data (default)
Set __fastcall as a default calling convention
/GS-
Disable buffer security check
-gsce
-gsplit-dwarf=
Set DWARF fission mode to either 'split' or 'single'
split,single
-gsplit-dwarf
-gstabs
-gstrict-dwarf
Enable buffer security check (default)
Use stack probes (default)
Set stack probe size (default 4096)
-gtoggle
/guard:
Enable Control Flow Guard with /guard:cf, or only the table with /guard:cf,nochecks
-gused
-gvms
Set __vectorcall as a default calling convention
/Gw-
Do not put each data item in its own section (default)
Put each data item in its own section
/GX-
Deprecated (like not passing /EH)
-gxcoff
Deprecated; use /EHsc
/Gy-
Do not put each function in its own section (default)
Put each function in its own section
-gz=
Set __stdcall as a default calling convention
Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
<size>
Generate source-level debug information
-header-include-file
Filename (or -) to write header include output to
-headerpad_max_install_names
--help-hidden
Display help for hidden options
/HELP
-help
/help
--hip-device-lib-path=
--hip-device-lib=
HIP device library
--hip-link
Link clang-offload-bundler bundles for HIP
--hip-version=
HIP version in the format of major.minor.patch
/homeparams
/hotpatch
Show header includes and nesting depth
Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
-iapinotes-modules
Add directory to the API notes search path referenced by module name
-ibuiltininc
Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it
-idirafter
Add directory to AFTER include search path
-iframeworkwithsysroot
Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
-iframework
Add directory to SYSTEM framework search path
--imacros=
-imacros
Include macros from file before parsing
-image_base
/imsvc
Add <dir> to system include search path, as if in %INCLUDE%
-imultilib
--include-barrier
--include-directory-after=
--include-directory-after
--include-directory=
--include-directory
-include-pch
Include precompiled header file
--include-prefix=
--include-prefix
--include-with-prefix-after=
--include-with-prefix-after
--include-with-prefix-before=
--include-with-prefix-before
--include-with-prefix=
--include-with-prefix
--include=
-include
-index-header-map
Make the next included directory (-I or -F) an indexer header map
-index-ignore-macros
Ignore macros during indexing
-index-ignore-system-symbols
Ignore symbols from system headers
-index-record-codegen-name
Record the codegen name for symbols
-index-store-path
Enable indexing with the specified data store path
-index-unit-output-path
Use <path> as the output path for this compilation unit in the index unit file
<path>
-init-only
Only execute frontend initialization
-init
-install_name
-integrated-as
-interface-stub-version=
-internal-externc-isystem
Add directory to the internal system include search path with implicit extern "C" semantics; these are assumed to not be user-provided and are used to model system and standard headers' paths.
-internal-isystem
Add directory to the internal system include search path; these are assumed to not be user-provided and are used to model system and standard headers' paths.
-iprefix
Set the -iwithprefix/-iwithprefixbefore prefix
-iquote
Add directory to QUOTE include search path
-isysroot
Set the system root directory (usually /)
-isystem-after
Add directory to end of the SYSTEM include search path
-isystem
Add directory to SYSTEM include search path
-ivfsoverlay
Overlay the virtual filesystem described by file over the real file system
-iwithprefixbefore
Set directory to include search path with prefix
-iwithprefix
Set directory to SYSTEM include search path with prefix
-iwithsysroot
Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
-iworkdir=
When looking up file, use the working directory provided by the operating system, or by the virtual file system.
os,virtual
Add directory to include search path. If there are multiple -I options, these directories are searched in the order they are given before the standard system directories are searched. If the same directory is in the SYSTEM include search paths, for example if also specified with -isystem, the -I option will be ignored
Add directory to include search path
/JMC
Make char type unsigned
-keep_private_externs
/kernel-
/kernel
--language=
--language
-lazy_framework
-lazy_library
--ld-path=
/LDd
Create debug DLL
Create DLL
--libomptarget-nvptx-path=
Path to libomptarget-nvptx libraries
--library-directory=
--library-directory
--linker-option=
Add linker option
/link
Forward options to the linker
<options>
-load
Add directory to library search path
-m16
-m32
-m3dnowa
-m3dnow
-m64
-m80387
-mabi=ieeelongdouble
Use IEEE 754 quadruple-precision for long double
-mabi=vec-default
Enable the default Altivec ABI on AIX (AIX only). Uses only volatile vector registers.
-mabi=vec-extabi
Enable the extended Altivec ABI on AIX (AIX only). Uses volatile and nonvolatile vector registers
-mabi=
-mabicalls
Enable SVR4-style position-independent code (Mips only)
-mabs=
-Mach
-madx
-maes
-main-file-name
Main file name to use for debug info and source if missing
-maix-struct-return
Return all structs in memory (PPC32 only)
-malign-branch-boundary=
Specify the boundary's size to align branches
-malign-branch=
Specify types of branches to align
-malign-double
Align doubles to two words in structs (x86 only)
-malign-functions=
-malign-jumps=
-malign-loops=
-maltivec
-mamx-bf16
-mamx-int8
-mamx-tile
-mappletvos-version-min=
-mappletvsimulator-version-min=
-march=
-marm
-masm=
-massembler-fatal-warnings
Make assembler warnings fatal
-massembler-no-warn
Make assembler not emit warnings
-matomics
-mavx2
-mavx512bf16
-mavx512bitalg
-mavx512bw
-mavx512cd
-mavx512dq
-mavx512er
-mavx512f
-mavx512ifma
-mavx512pf
-mavx512vbmi2
-mavx512vbmi
-mavx512vl
-mavx512vnni
-mavx512vp2intersect
-mavx512vpopcntdq
-mavxvnni
-mavx
-mbackchain
Link stack frames through backchain on System Z
-mbig-endian
-mbmi2
-mbmi
-mbranch-likely
-mbranch-protection=
Enforce targets of indirect branches and function returns
-mbranch-target-enforce
-mbranches-within-32B-boundaries
Align selected branches (fused, jcc, jmp) within 32-byte boundary
-mbridgeos-version-min=
-mbulk-memory
-mcheck-zero-division
-mcldemote
-mclflushopt
-mclwb
-mclzero
-mcmodel=medany
Equivalent to -mcmodel=medium, compatible with RISC-V gcc.
-mcmodel=medlow
Equivalent to -mcmodel=small, compatible with RISC-V gcc.
-mcmodel=
-mcmpb
-mcmse
Allow use of CMSE (Armv8-M Security Extensions)
-mcode-object-v3
Legacy option to specify code object ABI V2 (-mnocode-object-v3) or V3 (-mcode-object-v3) (AMDGPU only)
-mcode-object-version=
Specify code object ABI version. Defaults to 3. (AMDGPU only)
2,3,4
-mcompact-branches=
-mconsole
-mconstant-cfstrings
-mconstructor-aliases
Emit complete constructors and destructors as aliases when possible
-mcpu=?
-mcpu=
-mcrbits
-mcrc
Allow use of CRC instructions (ARM/Mips only)
-mcrypto
-mcumode
Specify CU (-mcumode) or WGP (-mno-cumode) wavefront execution mode (AMDGPU only)
-mcx16
-mdarwin-stkchk-strong-link
/MDd
Use DLL debug run-time
-mdebug-pass
Enable additional debug output
-mdefault-build-attributes
-mdirect-move
-mdisable-tail-calls
Disable tail call optimization, keeping the call stack accurate
-mdll
-mdouble-float
-mdouble=
Force double to be 32 bits or 64 bits
32,64
-mdspr2
-mdsp
-mdynamic-no-pic
Write a depfile containing user and system headers
Use DLL run-time
-meabi
Set EABI type, e.g. 4, 5 or gnu (default depends on triple)
default,4,5,gnu
-membedded-data
Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
-menable-experimental-extensions
Enable use of experimental RISC-V extensions.
-menable-no-infs
Allow optimization to assume there are no infinities.
-menable-no-nans
Allow optimization to assume there are no NaNs.
-menable-unsafe-fp-math
Allow unsafe floating-point math optimizations which may decrease precision
-menqcmd
-mexception-handling
-mexec-model=
Execution model (WebAssembly only)
command,reactor
-mexecute-only
Disallow generation of data access to code sections (ARM only)
-mextern-sdata
Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
-mf16c
-mfancy-math-387
-mfentry
Insert calls to fentry at function entry (x86/SystemZ only)
-mfix-and-continue
-mfix-cortex-a53-835769
Workaround Cortex-A53 erratum 835769 (AArch64 only)
-mfloat-abi=
soft,softfp,hard
-mfloat-abi
The float ABI to use
-mfloat128
-mfma4
-mfma
-mfp32
Use 32-bit floating point registers (MIPS only)
-mfp64
Use 64-bit floating point registers (MIPS only)
-mfpmath=
-mfpmath
Which unit to use for fp math
-mfprnd
-mfpu=
-mfpxx
Avoid FPU mode dependent operations when used with the O32 ABI
-mframe-pointer=
Specify which frame pointers to retain (all, non-leaf, none).
all,non-leaf,none
-mfsgsbase
-mfxsr
Write depfile output from -MMD, -MD, -MM, or -M to <file>
-mgeneral-regs-only
Generate code which only uses the general purpose registers (AArch64 only)
-mgfni
-mginv
-mglibc
-mglobal-merge
Enable merging of globals
-mgpopt
Use GP relative accesses for symbols known to be in a small data section (MIPS)
Add missing headers to depfile
-mhard-float
-mharden-sls=
Select straight-line speculation hardening scope
-mhreset
-mhtm
-mhvx-length=
Set Hexagon Vector Length
64B,128B
-mhvx=
Enable Hexagon Vector eXtensions
-mhvx
--mhwdiv=
-mhwdiv=
--mhwdiv
-mhwmult=
-miamcu
Use Intel MCU ABI
-mieee-fp
-mieee-rnd-near
-mignore-xcoff-visibility
Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
--migrate
Run the migrator
-migrate
Migrate source code
-mimplicit-float
-mimplicit-it=
-mincremental-linker-compatible
(integrated-as) Emit an object file which can be used with an incremental linker
-mindirect-jump=
Change indirect jump instructions to inhibit speculation
-minline-all-stringops
-minvariant-function-descriptors
-minvpcid
-mios-simulator-version-min=
-mios-version-min=
Set iOS deployment target
-miphoneos-version-min=
-miphonesimulator-version-min=
-mips16
-mips1
Equivalent to -march=mips1
-mips2
Equivalent to -march=mips2
-mips32r2
Equivalent to -march=mips32r2
-mips32r3
Equivalent to -march=mips32r3
-mips32r5
Equivalent to -march=mips32r5
-mips32r6
Equivalent to -march=mips32r6
-mips32
Equivalent to -march=mips32
-mips3
Equivalent to -march=mips3
-mips4
Equivalent to -march=mips4
-mips5
Equivalent to -march=mips5
-mips64r2
Equivalent to -march=mips64r2
-mips64r3
Equivalent to -march=mips64r3
-mips64r5
Equivalent to -march=mips64r5
-mips64r6
Equivalent to -march=mips64r6
-mips64
Equivalent to -march=mips64
-misel
Write a compilation database entry per input
-mkernel
-mkl
-mldc1-sdc1
-mlimit-float-precision
Limit float precision to the given value
-mlink-bitcode-file
Link the given bitcode file before performing optimizations.
-mlink-builtin-bitcode
Link and internalize needed symbols from the given bitcode file before performing optimizations.
-mlink-cuda-bitcode
-mlinker-version=
-mlittle-endian
-mllvm
Additional arguments to forward to LLVM's option processing
-mlocal-sdata
Extend the -G behaviour to object local data (MIPS)
-mlong-calls
Generate branches with extended addressability, usually via indirect jumps.
-mlong-double-128
Force long double to be 128 bits
-mlong-double-64
Force long double to be 64 bits
-mlong-double-80
Force long double to be 80 bits, padded to 128 bits for storage
-mlongcall
-mlvi-cfi
Enable only control-flow mitigations for Load Value Injection (LVI)
-mlvi-hardening
Enable all mitigations for Load Value Injection (LVI)
-mlwp
-mlzcnt
-mmacos-version-min=
-mmacosx-version-min=
Set Mac OS X deployment target
-mmadd4
Enable the generation of 4-operand madd.s, madd.d and related instructions.
-mmark-bti-property
Add .note.gnu.property with BTI to assembly files (AArch64 only)
-mmcu=
-MMD
Write a depfile containing user headers
-mmemops
Enable generation of memop instructions
-mmfcrf
-mmfocrf
-mmicromips
-mmma
-mmmx
-mmovbe
-mmovdir64b
-mmovdiri
-mmpx
-mms-bitfields
Set the default structure layout to be compatible with the Microsoft compiler standard
-mmsa
Enable MSA ASE (MIPS only)
-mmt
Enable MT ASE (MIPS only)
-mmultivalue
-mmutable-globals
-mmwaitx
Like -MMD, but also implies -E and writes to stdout by default
-mnan=
-mno-3dnowa
-mno-3dnow
-mno-80387
-mno-abicalls
Disable SVR4-style position-independent code (Mips only)
-mno-adx
-mno-aes
-mno-altivec
-mno-amx-bf16
-mno-amx-int8
-mno-amx-tile
-mno-atomics
-mno-avx2
-mno-avx512bf16
-mno-avx512bitalg
-mno-avx512bw
-mno-avx512cd
-mno-avx512dq
-mno-avx512er
-mno-avx512f
-mno-avx512ifma
-mno-avx512pf
-mno-avx512vbmi2
-mno-avx512vbmi
-mno-avx512vl
-mno-avx512vnni
-mno-avx512vp2intersect
-mno-avx512vpopcntdq
-mno-avxvnni
-mno-avx
-mno-backchain
-mno-bmi2
-mno-bmi
-mno-branch-likely
-mno-bulk-memory
-mno-check-zero-division
-mno-cldemote
-mno-clflushopt
-mno-clwb
-mno-clzero
-mno-cmpb
-mno-code-object-v3
-mno-constant-cfstrings
-mno-crbits
-mno-crc
Disallow use of CRC instructions (Mips only)
-mno-crypto
-mno-cumode
-mno-cx16
-mno-default-build-attributes
-mno-direct-move
-mno-dspr2
-mno-dsp
-mno-embedded-data
Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
-mno-enqcmd
-mno-exception-handling
-mno-execute-only
Allow generation of data access to code sections (ARM only)
-mno-extern-sdata
Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
-mno-f16c
-mno-fix-cortex-a53-835769
Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
-mno-float128
-mno-fma4
-mno-fma
-mno-fprnd
-mno-fsgsbase
-mno-fxsr
-mno-gfni
-mno-ginv
-mno-global-merge
Disable merging of globals
-mno-gpopt
Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
-mno-hreset
-mno-htm
-mno-hvx
Disable Hexagon Vector eXtensions
-mno-iamcu
-mno-implicit-float
Don't generate implicit floating point instructions
-mno-incremental-linker-compatible
(integrated-as) Emit an object file which cannot be used with an incremental linker
-mno-inline-all-stringops
-mno-invariant-function-descriptors
-mno-invpcid
-mno-isel
-mno-kl
-mno-ldc1-sdc1
-mno-local-sdata
Do not extend the -G behaviour to object local data (MIPS)
-mno-long-calls
Restore the default behaviour of not generating long calls
-mno-longcall
-mno-lvi-cfi
Disable control-flow mitigations for Load Value Injection (LVI)
-mno-lvi-hardening
Disable mitigations for Load Value Injection (LVI)
-mno-lwp
-mno-lzcnt
-mno-madd4
Disable the generation of 4-operand madd.s, madd.d and related instructions.
-mno-memops
Disable generation of memop instructions
-mno-mfcrf
-mno-mfocrf
-mno-micromips
-mno-mips16
-mno-mma
-mno-mmx
-mno-movbe
-mno-movdir64b
-mno-movdiri
-mno-movt
Disallow use of movt/movw pairs (ARM only)
-mno-mpx
-mno-ms-bitfields
Do not set the default structure layout to be compatible with the Microsoft compiler standard
-mno-msa
Disable MSA ASE (MIPS only)
-mno-mt
Disable MT ASE (MIPS only)
-mno-multivalue
-mno-mutable-globals
-mno-mwaitx
-mno-neg-immediates
Disallow converting instructions with negative immediates to their negation or inversion.
-mno-nontrapping-fptoint
-mno-nvj
Disable generation of new-value jumps
-mno-nvs
Disable generation of new-value stores
-mno-odd-spreg
Disable odd single-precision floating point registers
-mno-omit-leaf-frame-pointer
-mno-outline-atomics
Don't generate local calls to out-of-line atomic operations
-mno-outline
Disable function outlining (AArch64 only)
-mno-packed-stack
-mno-packets
Disable generation of instruction packets
-mno-paired-vector-memops
-mno-pascal-strings
-mno-pclmul
-mno-pconfig
-mno-pcrel
-mno-pie-copy-relocations
-mno-pku
-mno-popcntd
-mno-popcnt
-mno-power10-vector
-mno-power8-vector
-mno-power9-vector
-mno-prefetchwt1
-mno-prfchw
-mno-ptwrite
-mno-pure-code
-mno-rdpid
-mno-rdrnd
-mno-rdseed
-mno-red-zone
-mno-reference-types
-mno-relax-all
-mno-relax-pic-calls
Do not produce relaxation hints for linkers to try optimizing PIC call sequences into direct calls (MIPS only)
-mno-relax
Disable linker relaxation
-mno-restrict-it
Allow generation of deprecated IT blocks for ARMv8. It is off by default for ARMv8 Thumb mode
-mno-retpoline-external-thunk
-mno-retpoline
-mno-rtd
-mno-rtm
-mno-sahf
-mno-save-restore
Disable using library calls for save and restore
-mno-serialize
-mno-seses
Disable speculative execution side effect suppression (SESES)
-mno-sgx
-mno-sha
-mno-shstk
-mno-sign-ext
-mno-simd128
-mno-soft-float
-mno-speculative-load-hardening
-mno-spe
-mno-sse2
-mno-sse3
-mno-sse4.1
-mno-sse4.2
-mno-sse4a
-mno-sse4
-mno-sse
-mno-ssse3
-mno-stack-arg-probe
Disable stack probes which are enabled by default
-mno-stackrealign
-mno-tail-call
-mno-tbm
-mno-thumb
-mno-tls-direct-seg-refs
Disable direct TLS access through segment registers
-mno-tsxldtrk
-mno-uintr
-mno-unaligned-access
Force all memory accesses to be aligned (AArch32/AArch64 only)
-mno-unimplemented-simd128
-mno-unsafe-fp-atomics
-mno-vaes
-mno-virt
-mno-vpclmulqdq
-mno-vsx
-mno-vx
-mno-vzeroupper
-mno-waitpkg
-mno-warn-nonportable-cfstrings
-mno-wavefrontsize64
Specify wavefront size 32 mode (AMDGPU only)
-mno-wbnoinvd
-mno-widekl
-mno-x87
-mno-xgot
-mno-xop
-mno-xsavec
-mno-xsaveopt
-mno-xsaves
-mno-xsave
-mno-zvector
-mnocrc
Disallow use of CRC instructions (ARM only)
-mnoexecstack
Mark the file as not needing an executable stack
-mnontrapping-fptoint
-mnop-mcount
Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
-mnvj
Enable generation of new-value jumps
-mnvs
Enable generation of new-value stores
-modd-spreg
Enable odd single-precision floating point registers
-module-dependency-dir
Directory to dump module dependencies to
-module-file-deps
Include module files in dependency output
-module-file-info
Provide information about a particular module file
-momit-leaf-frame-pointer
Omit frame pointer setup for leaf functions
-moslib=
-moutline-atomics
Generate local calls to out-of-line atomic operations
-moutline
Enable function outlining (AArch64 only)
-mpacked-stack
Use packed stack layout (SystemZ only).
-mpackets
Enable generation of instruction packets
-mpad-max-prefix-size=
Specify maximum number of prefixes to use for padding
-mpaired-vector-memops
-mpascal-strings
-mpclmul
-mpconfig
-mpcrel
-mpie-copy-relocations
Use copy relocations support for PIE builds
-mpku
-mpopcntd
-mpopcnt
-mpower10-vector
-mpower8-vector
-mpower9-vector
-mprefer-vector-width=
Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
-mprefetchwt1
-mprfchw
-mptwrite
-mpure-code
Create phony target for each dependency (other than main file)
-mqdsp6-compat
Enable hexagon-qdsp6 backward compatibility
Specify name of main file output to quote in depfile
-mrdpid
-mrdrnd
-mrdseed
-mreassociate
Allow reassociation transformations for floating-point instructions
-mrecip=
-mrecip
-mrecord-mcount
Generate a __mcount_loc section entry for each __fentry__ call.
-mred-zone
-mreference-types
-mregparm=
-mregparm
Limit the number of registers available for integer arguments
-mrelax-all
(integrated-as) Relax all machine instructions
-mrelax-pic-calls
Produce relaxation hints for linkers to try optimizing PIC call sequences into direct calls (MIPS only)
--mrelax-relocations
Use relaxable elf relocations
-mrelax
Enable linker relaxation
-mrelocation-model
The relocation model to use
static,pic,ropi,rwpi,ropi-rwpi,dynamic-no-pic
-mrestrict-it
Disallow generation of deprecated IT blocks for ARMv8. It is on by default for ARMv8 Thumb mode.
-mretpoline-external-thunk
-mretpoline
-mrtd
Make StdCall calling convention the default
-mrtm
-msahf
-msave-restore
Enable using library calls for save and restore
-msave-temp-labels
Save temporary labels in the symbol table. Note this may change .s semantics and shouldn't generally be used on compiler-generated code.
-msecure-plt
-mserialize
-mseses
Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
-msgx
-msha
-mshstk
-msign-ext
-msign-return-address-key=
a_key,b_key
-msign-return-address=
Select return address signing scope
none,all,non-leaf
-msimd128
-msim
-msingle-float
-msmall-data-limit=
Put global and static data smaller than the limit into a special section
-msmall-data-limit
-msmall-data-threshold=
-msoft-float
Use software floating point
-mspeculative-load-hardening
-mspe
-msse2
-msse3
-msse4.1
-msse4.2
-msse4a
-msse4
-msse
-mssse3
-mstack-alignment=
Set the stack alignment
-mstack-arg-probe
Enable stack probes
-mstack-probe-size=
Set the stack probe size
-mstack-protector-guard-offset=
Use the given offset for addressing the stack-protector guard
-mstack-protector-guard-reg=
Use the given reg for addressing the stack-protector guard
-mstack-protector-guard=
Use the given guard (global, tls) for addressing the stack-protector guard
-mstackrealign
Force realign the stack at entry to every function
-mstrict-align
Force all memory accesses to be aligned (same as mno-unaligned-access)
-msve-vector-bits=
Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
128,256,512,1024,2048,scalable
-msvr4-struct-return
Return small structs in registers (PPC32 only)
-mt-migrate-directory
Directory for temporary files produced during ARC or ObjC migration
-mtail-call
-mtbm
/MTd
Use static debug run-time
-mthread-model
The thread model to use, e.g. posix, single (posix by default)
posix,single
-mthreads
-mthumb
-mtls-direct-seg-refs
Enable direct TLS access through segment registers (default)
-mtls-size=
Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)
-mtp=
Thread pointer access method (AArch32/AArch64 only)
soft,cp15,el0,el1,el2,el3
-mtp
Mode for reading thread pointer
-mtsxldtrk
-mtune=?
-mtune=
Only supported on X86 and RISC-V. Otherwise accepted for compatibility with GCC.
-mtvos-simulator-version-min=
-mtvos-version-min=
Specify name of main file output in depfile
Use static run-time
-muclibc
-muintr
-multi_module
-multiply_defined_unused
-multiply_defined
-munaligned-access
Allow memory accesses to be unaligned (AArch32/AArch64 only)
-municode
-munimplemented-simd128
-munsafe-fp-atomics
Enable unsafe floating point atomic instructions (AMDGPU only)
-munwind-tables
Generate unwinding tables for all functions
-mv55
-mv5
-mv60
-mv62
-mv65
-mv66
-mv67t
-mv67
-mvaes
-mvirt
-mvpclmulqdq
-mvsx
-mvx
-mvzeroupper
Use NMake/Jom format for the depfile
-mwaitpkg
-mwarn-nonportable-cfstrings
-mwatch-bitcode-compatibility
-mwatchos-simulator-version-min=
-mwatchos-version-min=
-mwatchsimulator-version-min=
-mwavefrontsize64
Specify wavefront size 64 mode (AMDGPU only)
-mwbnoinvd
-mwidekl
-mwindows
-mx32
-mx87
-mxgot
-mxop
-mxsavec
-mxsaveopt
-mxsaves
-mxsave
-mzvector
Like -MD, but also implies -E and writes to stdout by default
-new-struct-path-tbaa
Enable enhanced struct-path aware Type Based Alias Analysis
-no-canonical-prefixes
Use relative instead of canonical paths
-no-code-completion-globals
Do not include global declarations in code-completion results.
-no-code-completion-ns-level-decls
Do not include declarations inside namespaces (incl. global namespace) in the code-completion results.
-no-cpp-precomp
--no-cuda-gpu-arch=
--no-cuda-include-ptx=
Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
--no-cuda-noopt-device-debug
--no-cuda-version-check
Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
-no-emit-llvm-uselists
Don't preserve order of LLVM use-lists when serializing
-no-finalize-removal
Do not remove finalize method in gc mode
-no-implicit-float
-no-integrated-as
-no-integrated-cpp
--no-line-commands
-no-ns-alloc-error
Do not error on use of NSAllocateCollectable/NSReallocateCollectable
--no-offload-arch=
Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
-no-pedantic
-no-pie
-no-pthread
--no-standard-includes
--no-standard-libraries
-no-struct-path-tbaa
Turn off struct-path aware Type Based Alias Analysis
--no-system-header-prefix=
Treat all #include paths starting with <prefix> as not including a system header.
<prefix>
--no-system-header-prefix
--no-undefined
--no-warnings
-no_dead_strip_inits_and_terms
-nobuiltininc
Disable builtin #include directories
-nocpp
-nocudainc
-nocudalib
-nodefaultlibs
-nofixprebinding
-nogpuinc
Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
-nogpulib
Do not link device library for CUDA/HIP device compilation
-nolibc
/nologo
-nomultidefs
-nopie
-noprebind
-noprofilelib
-noseglinkedit
-nostartfiles
-nostdinc++
Disable standard #include directories for the C++ standard library
-nostdinc
-nostdlib++
-nostdlibinc
-nostdlib
-nostdsysteminc
Disable standard system #include directories
Don't automatically start assembly file with a text section
Optimize for size  (like /Og     /Os /Oy /Ob2 /GF /Gy)
Optimize for speed (like /Og /Oi /Ot /Oy /Ob2 /GF /Gy)
/Ob0
Disable function inlining
/Ob1
Only inline functions explicitly or implicitly marked inline
/Ob2
Inline functions as deemed beneficial by the compiler
-ObjC++
Treat source input files as Objective-C++ inputs
-objc-isystem
Add directory to the ObjC SYSTEM include search path
-objcmt-atomic-property
Make migration to 'atomic' properties
-objcmt-migrate-all
Enable migration to modern ObjC
-objcmt-migrate-annotation
Enable migration to property and method annotations
-objcmt-migrate-designated-init
Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
-objcmt-migrate-instancetype
Enable migration to infer instancetype for method result type
-objcmt-migrate-literals
Enable migration to modern ObjC literals
-objcmt-migrate-ns-macros
Enable migration to NS_ENUM/NS_OPTIONS macros
-objcmt-migrate-property-dot-syntax
Enable migration of setter/getter messages to property-dot syntax
-objcmt-migrate-property
Enable migration to modern ObjC property
-objcmt-migrate-protocol-conformance
Enable migration to add protocol conformance on classes
-objcmt-migrate-readonly-property
Enable migration to modern ObjC readonly property
-objcmt-migrate-readwrite-property
Enable migration to modern ObjC readwrite property
-objcmt-migrate-subscripting
Enable migration to modern ObjC subscripting
-objcmt-ns-nonatomic-iosonly
Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
-objcmt-returns-innerpointer-property
Enable migration to annotate property with NS_RETURNS_INNER_POINTER
-objcmt-white-list-dir-path=
-objcmt-whitelist-dir-path=
Only modify files with a filename contained in the provided directory path
-objcxx-isystem
Add directory to the ObjC++ SYSTEM include search path
-ObjC
Treat source input files as Objective-C inputs
-object
Disable optimization
-Ofast
--offload-arch=
CUDA offloading device architecture (e.g. sm_35), or HIP offloading target ID in the form of a device architecture followed by target ID features delimited by a colon. Each target ID feature is a pre-defined string followed by a plus or minus sign (e.g. gfx908:xnack+:sramecc-).  May be specified more than once.
No effect
/Oi-
Disable use of builtin functions
Enable use of builtin functions
/openmp-
Disable OpenMP support
/openmp:experimental
Enable OpenMP support with experimental SIMD support
/openmp
Enable OpenMP support
-opt-record-file
File name to use for YAML optimization record output
-opt-record-format
The format used for serializing remarks (default: YAML)
-opt-record-passes
Only record remark information for passes whose names match the given regular expression
--optimize=
--optimize
Optimize for size
Optimize for speed
-output-asm-variant
Select the asm variant index to use for output
--output-class-directory=
--output-class-directory
--output=
--output
Deprecated (like /Og /Oi /Ot /Oy /Ob2); use /O2
/Oy-
Disable frame pointer omission (x86 only, default)
Enable frame pointer omission (x86 only)
Set multiple /O flags at once; e.g. '/O2y-' for '/O2 /Oy-'
<flags>
Write output to <file>
Deprecated (set output file name); use /Fe or /Fe
-pagezero_size
--param=
--param
-pass-exit-codes
-pch-through-hdrstop-create
When creating a PCH, stop PCH generation after #pragma hdrstop.
-pch-through-hdrstop-use
When using a PCH, skip tokens until after a #pragma hdrstop.
-pch-through-header=
Stop PCH generation after including this file.  When using a PCH, skip tokens until after this file is included.
-pedantic-errors
-pedantic
/permissive-
Enable mcount instrumentation
-pic-is-pie
File is for a position independent executable
-pic-level
Value for __PIC__
-pie
-pipe
Use pipes between commands, when possible
-plugin-arg-
Pass <arg> to plugin <name>
<name> <arg>
-plugin
Use the named plugin action instead of the default action (use "help" to list available options)
-preamble-bytes=
Assume that the precompiled header is a precompiled preamble covering the first N bytes of the main file
-prebind_all_twolevel_modules
-prebind
--precompile
Only precompile the input
--prefix=
--prefix
-preload
--preprocess
-print-dependency-directives-minimized-source
Print the output of the dependency directives source minimizer
--print-diagnostic-categories
-print-effective-triple
Print the effective target triple
-print-file-name=
Print the full library path of <file>
--print-file-name
-print-ivar-layout
Enable Objective-C Ivar layout bitmap print trace
-print-libgcc-file-name
Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
--print-missing-file-dependencies
-print-multi-directory
-print-multi-lib
-print-multi-os-directory
-print-preamble
Print the "preamble" of a file, which is a candidate for implicit precompiled headers.
-print-prog-name=
Print the full program path of <name>
--print-prog-name
-print-resource-dir
Print the resource directory pathname
-print-search-dirs
Print the paths used for finding libraries and programs
-print-stats
Print performance metrics and statistics
-print-supported-cpus
Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
-print-target-triple
Print the normalized target triple
-print-targets
Print the registered targets
-private_bundle
--profile-blocks
--profile
-pthreads
-pthread
Support POSIX threads in generated code
--ptxas-path=
Path to ptxas (used for compiling CUDA code)
Disable linemarker output in -E mode
Preprocess to file
/Qfast_transcendentals
/QIfist
/Qimprecise_fwaits
/QIntel-jcc-erratum
Do not emit metadata containing compiler name and version
/Qpar-report
/Qpar
/Qsafe_fp_loads
/Qspectre-load-cf
/Qspectre-load
/Qspectre
-Qunused-arguments
Don't emit warning for unused driver arguments
/Qvec-report
/Qvec-
Disable the loop vectorization passes
/Qvec
Emit metadata containing compiler name and version
-rdynamic
-read_only_relocs
-record-command-line
The string to embed in the .LLVM.command.line section.
-relaxed-aliasing
Turn off Type Based Alias Analysis
-relocatable-pch
Whether to build a relocatable precompiled header
-remap-file
Replace the contents of the <from> file with the contents of the <to> file
<from>;<to>
-remap
-remove-preceeding-explicit-module-build-incompatible-options
Removes any arguments before this one that would be incompatible with explicitly building a module. This includes things like -o and input files. This option can be used to append arguments to convert a build of a translation unit with implicit modules into an explicit build of a specific module.
-resource-dir=
-resource-dir
The directory which holds the compiler resource files
--resource=
--resource
-rewrite-legacy-objc
Rewrite Legacy Objective-C source to C++
-rewrite-macros
Expand macros without full preprocessing
-rewrite-objc
Rewrite Objective-C source to C++
-rewrite-test
Rewriter playground
--rocm-device-lib-path=
ROCm device library path. Alternative to rocm-path.
--rocm-path=
ROCm installation path, used for finding and automatically linking required bitcode libraries.
-Rpass-analysis=
Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
-Rpass-missed=
Report missed transformations by optimization passes whose name matches the given POSIX regular expression
-Rpass=
Report transformations performed by optimization passes whose name matches the given POSIX regular expression
-rpath
--rsp-quoting=
Set the rsp quoting to either 'posix', or 'windows'
/RTC
-rtlib=
Compiler runtime library to use
--rtlib
Enable the specified remark
<remark>
-save-stats=
Save llvm statistics.
-save-stats
-save-temps=
Save intermediate compilation results.
-save-temps
Save intermediate compilation results
/sdl-
/sdl
-sectalign
-sectcreate
-sectobjectsymbols
-sectorder
-seg1addr
-seg_addr_table_filename
-seg_addr_table
-segaddr
-segcreate
-seglinkedit
-segprot
-segs_read_only_addr
-segs_read_write_addr
-segs_read_
-serialize-diagnostic-file
File for serializing diagnostics in a binary format
<filename>
-serialize-diagnostics
Serialize compiler diagnostics to a file
-setup-static-analyzer
Set up preprocessor for static analyzer (done automatically when static analyzer is run).
-shared-libasan
-shared-libgcc
-shared-libsan
Dynamically link the sanitizer runtime
-shared
-show-encoding
Show instruction encoding information in transliterate mode
--show-includes
Print cl.exe style /showIncludes to stdout
-show-inst
Show internal instruction representation in transliterate mode
/showFilenames-
Do not print the name of each compiled file (default)
/showFilenames
Print the name of each compiled file
/showIncludes:user
Like /showIncludes but omit system headers
/showIncludes
Print info about included files to stderr
--signed-char
-single_module
-skip-unused-modulemap-deps
Include module map files only for imported modules in dependency output
/source-charset:
Set source encoding, supports only UTF-8
-specs=
-specs
-split-dwarf-file
Name of the split dwarf debug info file to encode in the object file
-split-dwarf-output
File name to use for split dwarf debug info output
-split-stacks
Try to use a split stack if possible.
-stack-protector-buffer-size
Lower bound for a buffer to be considered for stack protection
-stack-protector
Enable stack protectors
0,1,2,3
-static-define
Should __STATIC__ be defined
-static-libgcc
-static-libgfortran
-static-libsan
Statically link the sanitizer runtime
-static-libstdc++
-static-openmp
Use the static host OpenMP runtime while linking.
-static-pie
-static
-stats-file=
Filename to write statistics to
-std-default=
/std:
Set C++ version (c++14,c++17,c++latest)
Language standard to compile for
-stdlib++-isystem
Use directory as the C++ standard library include path
-stdlib=
C++ standard library to use
libc++,libstdc++,platform
--stdlib
--std
-sub_library
-sub_umbrella
-sycl-std=
SYCL language standard to compile for.
2017,121,1.2.1,sycl-1.2.1
-sys-header-deps
Include system headers in dependency output
--sysroot=
--sysroot
--system-header-prefix=
Treat all #include paths starting with <prefix> as including a system header.
--system-header-prefix
Only run preprocess and compilation steps
-target-abi
Target a particular ABI type
-target-cpu
Target a specific cpu type
-target-feature
Target specific attributes
--target-help
-target-linker-version
Target linker version
-target-sdk-version=
The version of target SDK used for compilation
-target-variant-sdk-version=
The version of target variant SDK used for compilation
-target-variant-triple
Specify the target variant triple
-target-variant
Generate code that may run on a particular variant of the deployment target
--target=
Generate code for the given target
-target
-Tbss
Set starting address of BSS to <addr>
<addr>
Treat all source files as C
Treat <file> as C source file
-Tdata
Set starting address of DATA to <addr>
-templight-dump
Dump templight information to stdout
-test-io
Run the InputOuputTest action. Use for development and testing only.
-time
Time individual commands
Treat all source files as C++
Treat <file> as C++ source file
--trace-includes
-traditional-cpp
Enable some traditional CPP emulation
-traditional
-trigraphs
-trim-egraph
Only show error-related paths in the analysis graph
-triple=
-triple
Specify target triple (e.g. i686-apple-darwin9)
-Ttext
Set starting address of TEXT to <addr>
-tune-cpu
Tune for a specific cpu type
/tune:
Set CPU for optimization without affecting instruction set
-twolevel_namespace_hints
-twolevel_namespace
Specify <script> as linker script
<script>
-umbrella
--undefine-macro=
--undefine-macro
-undefined
-undef
undef all system defines
-unexported_symbols_list
-unoptimized-cfg
Generate unoptimized CFGs for all analyses
--unsigned-char
-unwindlib=
Unwind library to use
libgcc,unwindlib,platform
--user-dependencies
/utf-8
Set source and runtime encoding to UTF-8 (default)
Undefine macro <macro>
<macro>
Undefine macro
/validate-charset-
/validate-charset
/vctoolsdir
Path to the VCToolChain
Control vtordisp placement
-vectorize-loops
Run the Loop vectorization passes
-vectorize-slp
Run the SLP vectorization passes
--verbose
--verify-debug-info
Verify the binary representation of debug output
-verify-ignore-unexpected=
Ignore unexpected diagnostic messages
-verify-ignore-unexpected
-verify-pch
Load and verify that a pre-compiled header file is not stale
-verify=
Verify diagnostic output using comment directives that start with prefixes in the comma-separated sequence <prefixes>
<prefixes>
-verify
Equivalent to -verify=expected
--version
Print version information
-version
Print the compiler version
-via-file-asm
Write assembly to file for input to assemble jobs
/vmb
Use a best-case representation method for member pointers
/vmg
Use a most-general representation for member pointers
/vmm
Set the default most-general representation to multiple inheritance
/vms
Set the default most-general representation to single inheritance
/vmv
Set the default most-general representation to virtual inheritance
/volatile:iso
Volatile loads and stores have standard semantics
/volatile:ms
Volatile loads and stores have acquire and release semantics
-vtordisp-mode=
Control vtordisp placement on win32 targets
Show commands to run and use verbose output
Disable all warnings
Enable -Wall
Enable -Wall and -Wextra
-Wa,
Pass the comma separated arguments in <arg> to the assembler
-Wall
/Wall
Enable -Weverything
--warn-=
--warn-
-WCL4
/wd4005
/wd4018
/wd4100
/wd4910
/wd4996
-Wdeprecated
Enable warnings for deprecated constructs and define __DEPRECATED
-weak-l
-weak_framework
-weak_library
-weak_reference_mismatches
-Wframe-larger-than=
-whatsloaded
-whyload
-Wl,
Pass the comma separated arguments in <arg> to the linker
-Wlarge-by-value-copy=
-Wlarge-by-value-copy
Warn if a function definition returns or accepts an object larger in bytes than a given value
-Wlarger-than-
-Wlarger-than=
-Wno-deprecated
-Wno-nonportable-cfstrings
-Wno-rewrite-macros
Silence ObjC rewriting warnings
-Wno-write-strings
-Wnonportable-cfstrings
-working-directory=
-working-directory
Resolve file paths relative to the specified directory
-Wp,
Pass the comma separated arguments in <arg> to the preprocessor
/Wp64
--write-dependencies
--write-user-dependencies
-Wundef-prefix=
Enable warnings for undefined macros with a prefix in the comma separated list <arg>
-Wwrite-strings
/WX-
Do not treat warnings as errors (default)
Treat warnings as errors
Enable the specified warning
<warning>
Suppress all warnings
-Xanalyzer
Pass <arg> to the static analyzer
-Xarch_device
Pass <arg> to the CUDA/HIP device compilation
-Xarch_host
Pass <arg> to the CUDA/HIP host compilation
-Xarch_
-Xassembler
Pass <arg> to the assembler
-Xclang
Pass <arg> to the clang compiler
-Xcuda-fatbinary
Pass <arg> to fatbinary invocation
-Xcuda-ptxas
Pass <arg> to the ptxas assembler
-Xlinker
Pass <arg> to the linker
-Xopenmp-target=
Pass <arg> to the target offloading toolchain identified by <triple>.
<triple> <arg>
-Xopenmp-target
Pass <arg> to the target offloading toolchain.
-Xpreprocessor
Pass <arg> to the preprocessor
Do not add %INCLUDE% to include search path
Treat subsequent input files as having type <language>
<language>
Disable precompiled headers, overrides /Yc and /Yu
Generate a pch file for all code up to and including <filename>
Load a pch file and use it instead of all code up to and including <filename>
-Z-reserved-lib-cckext
-Z-reserved-lib-stdc++
-Z-Xlinker-no-demangle
Enable CodeView debug information in object files
/Zc:__cplusplus
/Zc:alignedNew-
Disable C++17 aligned allocation functions
/Zc:alignedNew
/Zc:auto
/Zc:char8_t-
Disable char8_t from c++2a
/Zc:char8_t
Enable char8_t from C++2a
/Zc:dllexportInlines-
Do not dllexport/dllimport inline member functions of dllexport/import classes
/Zc:dllexportInlines
dllexport/dllimport inline member functions of dllexport/import classes (default)
/Zc:forScope
/Zc:inline
/Zc:rvalueCast
/Zc:sizedDealloc-
Disable C++14 sized global deallocation functions
/Zc:sizedDealloc
/Zc:strictStrings
Treat string literals as const
/Zc:ternary
/Zc:threadSafeInit-
Disable thread-safe initialization of static variables
/Zc:threadSafeInit
Enable thread-safe initialization of static variables
/Zc:trigraphs-
Disable trigraphs (default)
/Zc:trigraphs
Enable trigraphs
/Zc:twoPhase-
Disable two-phase name lookup in templates (default)
/Zc:twoPhase
Enable two-phase name lookup in templates
/Zc:wchar_t
/Zc:
/ZH:MD5
/ZH:SHA1
/ZH:SHA_256
Like /Z7
-Zlinker-input
Do not let object file auto-link default libraries
/Zo-
Set default maximum struct packing alignment to 1
Set default maximum struct packing alignment
Syntax-check only
Pass -z <arg> to the linker
repro-modules
index-store
 Arguments passed via response file:
 (end of response file)
 (in-process)
 || (exit 0)
-serialize-diagnostic-file
-dependency-file
-fdebug-compilation-dir
-header-include-file
-isystem
preprocessor
precompiler
compiler
backend
assembler
linker
ifsmerger
-fsanitize-minimal-runtime
-fsanitize-trap=undefined
-fsanitize=cfi-mfcall
-fsanitize-cfi-cross-dso
-fsanitize=vptr
-flto
-ffixed-x18
-fno-sanitize-trap=
-fsanitize-cfi-icall-generalize-pointers
fsanitize-minimal-runtime
fsanitize-trap=cfi
-fsanitize-coverage=trace-pc-guard
-fsanitize-coverage=func
-fsanitize-coverage=bb
-fsanitize-coverage=edge
-fsanitize-coverage=trace-bb
-fsanitize-coverage=8bit-counters
-fsanitize-coverage=[func|bb|edge]
-fsanitize-coverage=[func|bb|edge],[trace-pc-guard|trace-pc]
-fsanitize=address
interceptor
-fsanitize-coverage-type=1
-fsanitize-coverage-type=2
-fsanitize-coverage-type=3
-fsanitize-coverage-indirect-calls
-fsanitize-coverage-trace-bb
-fsanitize-coverage-trace-cmp
-fsanitize-coverage-trace-div
-fsanitize-coverage-trace-gep
-fsanitize-coverage-8bit-counters
-fsanitize-coverage-trace-pc
-fsanitize-coverage-trace-pc-guard
-fsanitize-coverage-inline-8bit-counters
-fsanitize-coverage-inline-bool-flag
-fsanitize-coverage-pc-table
-fsanitize-coverage-no-prune
-fsanitize-coverage-stack-depth
-fsanitize-coverage-allowlist=
-fsanitize-coverage-blocklist=
ubsan_standalone
ubsan_standalone_cxx
stats_client
__sanitizer_stats_register
-fsanitize-blacklist=
-fsanitize-system-blacklist=
-fsanitize-memory-track-origins=
-fsanitize-memory-use-after-dtor
-tsan-instrument-memory-accesses=0
-tsan-instrument-memintrinsics=0
-tsan-instrument-func-entry-exit=0
-tsan-instrument-atomics=0
-fsanitize-cfi-canonical-jump-tables
-fsanitize-stats
-fsanitize-address-field-padding=
-fsanitize-address-use-after-scope
-fsanitize-address-poison-custom-array-cookie
-fsanitize-address-globals-dead-stripping
-fsanitize-address-use-odr-indicator
-asan-detect-invalid-pointer-cmp
-asan-detect-invalid-pointer-sub
-default-function-attr
hwasan-abi=
+tagged-globals
-fno-assume-sane-operator-new
-fno-builtin-bcmp
-fno-builtin-memcmp
-fno-builtin-strncmp
-fno-builtin-strcmp
-fno-builtin-strncasecmp
-fno-builtin-strcasecmp
-fno-builtin-strstr
-fno-builtin-strcasestr
-fno-builtin-memmem
-fvisibility=
-fsanitize-trap
asan_blacklist.txt
hwasan_blacklist.txt
memtag_blacklist.txt
msan_blacklist.txt
tsan_blacklist.txt
dfsan_abilist.txt
cfi_blacklist.txt
ubsan_blacklist.txt
pointer-compare
pointer-subtract
kernel-address
hwaddress
kernel-hwaddress
memtag
kernel-memory
fuzzer-no-link
leak
array-bounds
float-cast-overflow
float-divide-by-zero
integer-divide-by-zero
nonnull-attribute
nullability-arg
nullability-assign
nullability-return
object-size
pointer-overflow
returns-nonnull-attribute
shift-base
shift-exponent
signed-integer-overflow
vla-bound
vptr
unsigned-integer-overflow
unsigned-shift-base
dataflow
cfi-cast-strict
cfi-derived-cast
cfi-icall
cfi-mfcall
cfi-unrelated-cast
cfi-nvcall
cfi-vcall
safe-stack
shadow-call-stack
implicit-unsigned-integer-truncation
implicit-signed-integer-truncation
implicit-integer-sign-change
objc-cast
local-bounds
--linker-option=/include:
+mte
arm64e
arm64
arm64_32
ppcle
ppc64
ppc64le
freebsd
netbsd
sunos
.obj
.dll.a
llvm-ar
x86_64-apple-macosx10.14.6
armeb
thumbeb
profile
-internal-isystem
-internal-externc-isystem
-lstdc++
-lcc_kext
crtfastmath.o
invalid Xarch argument: '%0', not all driver options can be forwared via Xarch argument
clang++
--driver-mode=g++
clang-c++
clang-cc
clang-cpp
--driver-mode=cpp
clang-g++
clang-gcc
clang-cl
--driver-mode=cl
--driver-mode=flang
clang::as
clang integrated assembler
IFS::Merger
llvm-ifs
offload bundler
clang-offload-bundler
offload wrapper
clang-offload-wrapper
armhf
cyclone
hurricane
monsoon
apple-s4
apple-a12
+reserve-x30
+tpidr-el3
+tpidr-el2
+tpidr-el1
+harden-sls-retbr
+harden-sls-blr
-sm4
-sha3
+sm4
+sha3
+strict-align
+reserve-x1
+reserve-x2
+reserve-x3
+reserve-x4
+reserve-x5
+reserve-x6
+reserve-x7
+reserve-x9
+reserve-x10
+reserve-x11
+reserve-x12
+reserve-x13
+reserve-x14
+reserve-x15
+reserve-x18
+reserve-x20
+reserve-x21
+reserve-x22
+reserve-x23
+reserve-x24
+reserve-x25
+reserve-x26
+reserve-x27
+reserve-x28
+call-saved-x8
+call-saved-x9
+call-saved-x10
+call-saved-x11
+call-saved-x12
+call-saved-x13
+call-saved-x14
+call-saved-x15
+call-saved-x18
+no-neg-immediates
+f32mm
lightning
vortex
+zcm
+zcz
-march=
+soft-float
+soft-float-abi
+read-tp-hard
-fpregs
+8msecext
+long-calls
+execute-only
v8m.base
+reserve-r9
+no-movt
generic
--be8
mips32r2
mips64r2
mips32r6
mips64r6
mips32
mips3
mips2
mips1
octeon
p5600
+noabicalls
-noabicalls
-long-calls
+xgot
-xgot
+nan2008
-nan2008
+abs2008
-abs2008
single-float
dspr2
+fpxx
+nooddspreg
nooddspreg
nomadd4
ginv
hazard
+use-indirect-jump-hazard
common
603e
603ev
604e
pwr3
7400
7450
8548
e500
e500mc
e5500
power3
power4
pwr4
power5
pwr5
power5x
pwr5x
power6
pwr6
power6x
pwr6x
pwr7
pwr8
pwr9
pwr10
future
powerpc
ppc64le
-mpower7
-mpower8
-mpower9
-mpower10
-many
+spe
-hard-float
+secure-plt
+reserve-x8
+reserve-x16
+reserve-x17
+reserve-x19
+reserve-x29
+reserve-x31
+relax
-relax
+save-restore
-save-restore
ilp32d
rv32e
ilp32e
ilp32
lp64d
lp64
rv32imafdc
rv64imafdc
rv32imac
rv64imac
string must be lowercase
string must begin with rv32{i,e,g} or rv64{i,g}
mafdqlcbjtpvn
first letter should be 'e', 'i' or 'g'
standard user-level extension 'e' requires 'rv32'
unsupported standard user-level extension 'e'
standard user-level extension not given in canonical order
invalid standard user-level extension
unsupported standard user-level extension
+experimental-b
+experimental-v
d requires f extension to also be specified
minor version number missing after 'p' for extension
multi-character extensions must be separated by underscores
requires '-menable-experimental-extensions' for experimental extension
experimental extension requires explicit version number
unsupported version number 
 for experimental extension (this compiler supports 
 for extension
extension name missing after separator '_'
invalid extension prefix
 not given in canonical order
 name missing after
+experimental-
non-standard supervisor-level extension
standard supervisor-level extension
non-standard user-level extension
standard user-level extension
-Av9a
-Av9
-Av9b
-Av9d
-Av8
-Asparclite
-Asparclet
-Av8plus
-Av8plusb
-Av8plusd
-Aleon
+soft-float
+transactional-execution
-transactional-execution
+vector
-vector
-rdrnd
-pclmul
-rtm
-fsgsbase
+sse4.2
+popcnt
+cx16
+ssse3
+retpoline-indirect-calls
+retpoline-indirect-branches
+lvi-load-hardening
+lvi-cfi
+seses
-a32
-a64
-many
-bnso
-bM:SRE
-bnoentry
-b32
-bpT:0x10000000
-bpD:0x20000000
-b64
-bpT:0x100000000
-bpD:0x110000000
crti.o
crti_64.o
-bcdtors:all:0:s
-lpthreads
/usr/lib
/include
linking libstdc++ unimplemented on AIX
gcrt0.o
gcrt0_64.o
mcrt0.o
mcrt0_64.o
crt0.o
crt0_64.o
aix::Assembler
assembler
aix::Linker
linker
-Bstatic
-export-dynamic
-Bshareable
-dynamic-linker
/lib/ld-ananas.so
crtbeginS.o
crtbegin.o
crtendS.o
crtend.o
crtn.o
ananas::Assembler
ananas::Linker
/opt/rocm
HIP_DEVICE_LIB_PATH
amdgcn
/.hipVersion
Found HIP installation: 
, version 
cuda_wrappers
__clang_hip_runtime_wrapper.h
+wavefrontsize64
CL1.2
-fapply-global-visibility-to-externs
amdgpu::Linker
ld.lld
at90s1200
avr1
attiny11
attiny12
attiny15
attiny28
at90s2313
avr2
at90s2323
at90s2333
at90s2343
at90s4433
attiny22
attiny26
at90s4414
at90s4434
at90s8515
at90c8534
at90s8535
attiny13
avr25/tiny-stack
avr25
attiny13a
attiny2313
attiny2313a
attiny24
attiny24a
attiny25
attiny261
attiny261a
at86rf401
ata5272
attiny4313
attiny44
attiny44a
attiny84
attiny84a
attiny45
attiny85
attiny441
attiny461
attiny461a
attiny841
attiny861
attiny861a
attiny87
attiny43u
attiny48
attiny88
attiny828
at43usb355
avr3
at76c711
atmega103
avr31
at43usb320
attiny167
avr35
at90usb82
at90usb162
ata5505
atmega8u2
atmega16u2
atmega32u2
attiny1634
atmega8
avr4
ata6289
atmega8a
ata6285
ata6286
atmega48
atmega48a
atmega48pa
atmega48pb
atmega48p
atmega88
atmega88a
atmega88p
atmega88pa
atmega88pb
atmega8515
atmega8535
atmega8hva
at90pwm1
at90pwm2
at90pwm2b
at90pwm3
at90pwm3b
at90pwm81
ata5790
avr5
ata5795
atmega16
atmega16a
atmega161
atmega162
atmega163
atmega164a
atmega164p
atmega164pa
atmega165
atmega165a
atmega165p
atmega165pa
atmega168
atmega168a
atmega168p
atmega168pa
atmega168pb
atmega169
atmega169a
atmega169p
atmega169pa
atmega32
atmega32a
atmega323
atmega324a
atmega324p
atmega324pa
atmega325
atmega325a
atmega325p
atmega325pa
atmega3250
atmega3250a
atmega3250p
atmega3250pa
atmega328
atmega328p
atmega329
atmega329a
atmega329p
atmega329pa
atmega3290
atmega3290a
atmega3290p
atmega3290pa
atmega406
atmega64
atmega64a
atmega640
atmega644
atmega644a
atmega644p
atmega644pa
atmega645
atmega645a
atmega645p
atmega649
atmega649a
atmega649p
atmega6450
atmega6450a
atmega6450p
atmega6490
atmega6490a
atmega6490p
atmega64rfr2
atmega644rfr2
atmega16hva
atmega16hva2
atmega16hvb
atmega16hvbrevb
atmega32hvb
atmega32hvbrevb
atmega64hve
at90can32
at90can64
at90pwm161
at90pwm216
at90pwm316
atmega32c1
atmega64c1
atmega16m1
atmega32m1
atmega64m1
atmega16u4
atmega32u4
atmega32u6
at90usb646
at90usb647
at90scr100
at94k
m3000
atmega128
avr51
atmega128a
atmega1280
atmega1281
atmega1284
atmega1284p
atmega128rfa1
atmega128rfr2
atmega1284rfr2
at90can128
at90usb1286
at90usb1287
atmega2560
avr6
atmega2561
atmega256rfr2
atmega2564rfr2
attiny4
avrtiny
attiny5
attiny9
attiny10
attiny20
attiny40
atxmega16a4
avrxmega2
atxmega16a4u
atxmega16c4
atxmega16d4
atxmega32a4
atxmega32a4u
atxmega32c4
atxmega32d4
atxmega32e5
atxmega16e5
atxmega8e5
atxmega64a3u
avrxmega4
atxmega64a4u
atxmega64b1
atxmega64b3
atxmega64c3
atxmega64d3
atxmega64d4
atxmega64a1
avrxmega5
atxmega64a1u
atxmega128a3
avrxmega6
atxmega128a3u
atxmega128b1
atxmega128b3
atxmega128c3
atxmega128d3
atxmega128d4
atxmega192a3
atxmega192a3u
atxmega192c3
atxmega192d3
atxmega256a3
atxmega256a3u
atxmega256a3b
atxmega256a3bu
atxmega256c3
atxmega256d3
atxmega384c3
atxmega384d3
atxmega128a1
avrxmega7
atxmega128a1u
atxmega128a4u
/lib/
--gc-sections
-lgcc
AVR::Linker
avr-ld
/usr/avr
/usr/lib/avr
libclang_rt.builtins-
baremetal
../lib/clang-runtimes
-lsupc++
-lunwind
-lclang_rt.builtins-
/rv64imafdc/lp64d
+march=rv64imafdc
rv64imafdc
rv64imac
march=rv64imac
march=rv64imafdc
lp64
mabi=lp64
lp64d
mabi=lp64d
/rv32i/ilp32
/rv32im/ilp32
/rv32iac/ilp32
/rv32imafc/ilp32f
+march=rv32imafc
rv32i
rv32im
rv32imafc
march=rv32i
march=rv32im
rv32iac
march=rv32iac
rv32imac
march=rv32imac
march=rv32imafc
ilp32
mabi=ilp32
ilp32f
mabi=ilp32f
baremetal::Linker
-skip-unused-modulemap-deps
-sys-header-deps
-module-file-deps
openmp_wrappers
-internal-isystem
-include
__clang_openmp_device_functions.h
-building-pch-with-obj
-fpch-instantiate-templates
-include-pch
-pch-through-hdrstop-
create
-pch-through-header=
-isysroot
CPATH
-c-isystem
C_INCLUDE_PATH
-cxx-isystem
CPLUS_INCLUDE_PATH
-objc-isystem
OBJC_INCLUDE_PATH
-objcxx-isystem
OBJCPLUS_INCLUDE_PATH
-msoft-float
-mfloat-abi
soft
-mllvm
-arm-global-merge=false
-arm-global-merge=true
-no-implicit-float
-mcmse
-fallow-half-arguments-and-returns
-disable-red-zone
-aarch64-fix-cortex-a53-835769=1
-aarch64-fix-cortex-a53-835769=0
-aarch64-enable-global-merge=false
-aarch64-enable-global-merge=true
none
a_key
-msign-return-address=
-msign-return-address-key=
-mbranch-target-enforce
-msve-vector-bits=
-target-abi
-mno-ldc1-sdc1
-mno-check-zero-division
-mips-ssection-threshold=
-mgpopt
-mlocal-sdata=1
-mlocal-sdata=0
-mextern-sdata=1
-mextern-sdata=0
-membedded-data=1
-membedded-data=0
never
always
-mips-compact-branches=
-mips-jalr-reloc=0
elfv2
elfv1
altivec
-mabi=ieeelongdouble
-tune-cpu
-mpacked-stack -mbackchain -mhard-float
-mbackchain
-mpacked-stack
-mno-tls-direct-seg-refs
intel
-x86-asm-syntax=
-x86-asm-syntax=intel
-mstack-alignment=4
-mqdsp6-compat
-Wreturn-type
-hexagon-small-data-threshold=
-fshort-enums
-enable-hexagon-ieee-rnd-near
-machine-sink-split=0
-target-cpu
-fvisibility
{ "directory": "
, "file": "
, "output": "
, "arguments": ["
--sysroot=
"]},
.%%%%.json
clang
ModuleCache
C++ for IAMCU
-cc1
-triple
-target-variant-triple
-target-sdk-version=
-aux-triple
-fsycl
-fsycl-is-device
-sycl-std=2017
-analyze
-migrate
-Eonly
-emit-obj
-emit-header-module
-emit-module-interface
-emit-pch
-verify-pch
-emit-llvm
-emit-llvm-bc
-emit-interface-stubs
-interface-stub-version=
-module-file-info
-rewrite-objc
-emit-llvm-uselists
-flto-unit
-disable-llvm-passes
-mdisable-tail-calls
-fembed-bitcode=marker
-disable-free
-disable-llvm-verifier
-discard-value-names
-main-file-name
-static-define
-DUNICODE
-setup-static-analyzer
-analyzer-config-compatibility-mode=true
-function-alignment
-mrelocation-model
-pic-level
-pic-is-pie
-fropi
-frwpi
-meabi
-fhalf-no-semantic-interposition
posix
-mthread-model
-fmerge-all-constants
-fno-delete-null-pointer-checks
-frewrite-map-file
-mabi=vec-extabi
-warn-stack-size=
-fno-jump-tables
-fprofile-sample-accurate
-fno-preserve-as-comments
-mregparm
-maix-struct-return
-msvr4-struct-return
-fpcc-struct-return
-freg-struct-return
-fdefault-calling-conv=stdcall
-fenable-matrix
-enable-matrix
-mframe-pointer=none
-mframe-pointer=non-leaf
-mframe-pointer=all
-fno-zero-initialized-in-bss
-enable-loop-distribute
-loop-distribute-mem
-relaxed-aliasing
-no-struct-path-tbaa
-fstrict-enums
-fno-strict-return
-fallow-editor-placeholders
-fstrict-vtable-pointers
-fforce-emit-vtables
-fno-escaping-block-tail-calls
-split-stacks
-fno-verbose-asm
-no-integrated-as
-mdebug-pass
Arguments
-mconstructor-aliases
-fforbid-guard-variables
-mms-bitfields
-mpie-copy-relocations
-fno-plt
-ffreestanding
-munwind-tables
-aux-target-cpu
small
kernel
-split-dwarf-file
-split-dwarf-output
-target-linker-version
please use -maltivec and include altivec.h explicitly
please use -mno-altivec
-diagnostic-log-file
-disable-pragma-debug-crash
-ffunction-sections
-fdata-sections
-fno-unique-section-names
-funique-internal-linkage-names
-funique-basic-block-section-names
-nobuiltininc
CLANG_PROJECT_INDEX_PATH
-index-store-path
-index-ignore-system-symbols
-index-record-codegen-name
-pedantic
GCC_TREAT_WARNINGS_AS_ERRORS
-Wno-error
-std=c++98
-std=c89
-std=c++14
-std=c++11
-fconst-strings
-fdeprecated-macro
-fgnu-keywords
-fno-gnu-keywords
-fno-dwarf-directory-asm
-fno-autolink
-ftemplate-depth
-foperator-arrow-depth
-fconstexpr-depth
-fconstexpr-steps
-fexperimental-new-constant-interpreter
-fbracket-depth
-Wlarge-by-value-copy=
-Wlarge-by-value-copy=64
-relocatable-pch
objc
-ftarget-variant-availability-checks
-fconstant-string-class
-fno-constant-nsnumber-literals
-fno-constant-nsarray-literals
-fno-constant-nsdictionary-literals
-fconstant-array-class
-fconstant-dictionary-class
-fconstant-integer-number-class
-fconstant-float-number-class
-fconstant-double-number-class
-ftabstop
-fstack-size-section
-ferror-limit
-fmacro-backtrace-limit
-ftemplate-backtrace-limit
-fconstexpr-backtrace-limit
-fspell-checking-limit
-fmessage-length=
-ftype-visibility
-fvisibility-from-dllstorageclass
-mignore-xcoff-visibility
-fnoopenmp-use-tls
-fopenmp-optimistic-collapse
-fopenmp-cuda-mode
-fopenmp-cuda-parallel-target-regions
-fopenmp-cuda-force-full-runtime
-fpatchable-function-entry-offset=
-fapple-kext
-ftrapv-handler
-fwrapv
-freroll-loops
-mspeculative-load-hardening
-mstackrealign
-mstack-alignment=
-fstack-check
-mstack-probe-size=
-mstack-probe-size=0
-mno-stack-arg-probe
-arm-restrict-it
-arm-no-restrict-it
-fhip-new-launch-api
-fgpu-allow-device-init
-fgpu-defer-diag
-fgpu-exclude-wrong-side-overloads
-fcf-protection=
SampleUse with PGO options
-fpseudo-probe-for-profiling
-fapinotes
-fapinotes-modules
-fblocks
-fblocks-runtime-optional
-fencode-extended-block-signature
-fcoroutines-ts
-fno-access-control
-fno-elide-constructors
-fno-rtti
-fno-use-cxa-atexit
-fregister-global-dtors-with-atexit
-fuse-line-directives
-fms-extensions
-fms-compatibility
-fgnuc-version=
-fms-compatibility-version=
-std=c++17
-std=c++20
-fborland-extensions
-fdeclspec
-fno-declspec
-fno-threadsafe-statics
-fdelayed-template-parsing
-fgnu89-inline
-fno-inline
-fvalidate-ast-input-files-content
-fmodules-codegen
-fmodules-debuginfo
-fobjc-encode-cxx-class-template-spec
-fapplication-extension
-exception-model=sjlj
-exception-model=seh
-exception-model=dwarf
-exception-model=wasm
-frelaxed-template-template-args
-fsized-deallocation
-fno-aligned-allocation
-faligned-allocation
-fnew-alignment=
-fno-constant-cfstrings
-fpascal-strings
-fpack-struct=1
-fmax-type-align=
-fmax-type-align=16
-fcommon
-fptrauth-intrinsics
-fptrauth-calls
-fptrauth-returns
-fptrauth-indirect-gotos
-fptrauth-auth-traps
-fptrauth-vtable-pointer-address-discrimination
-fptrauth-vtable-pointer-type-discrimination
-fptrauth-soft
-fptrauth-block-descriptor-pointers
-fptrauth-function-pointer-type-discrimination
-fasm-blocks
-fno-gnu-inline-asm
-vectorize-loops
-vectorize-slp
-fdollars-in-identifiers
-fno-dollars-in-identifiers
-fapple-pragma-pack
-frewrite-imports
-frewrite-includes
-traditional-cpp
-fretain-comments-from-system-headers
-load
-fpass-plugin=
-stats-file=
-dwarf-debug-flags
-record-command-line
-fcuda-include-gpubinary
-fgpu-rdc
-fcuda-short-ptr
-fcuda-allow-variadic-functions
-fopenmp-is-device
-fopenmp-host-ir-file-path
-munsafe-fp-atomics
-fopenmp-targets=
-fvirtual-function-elimination
-fno-whole-program-vtables
-fwhole-program-vtables
-fno-split-lto-unit
-fsanitize=cfi
-fsplit-lto-unit
-global-isel=1
-global-isel-abort=2
-global-isel=0
-forder-file-instrumentation
-enable-order-file-instrumentation
-fforce-enable-int128
-fkeep-static-consts
-fcomplete-member-pointers
-fno-c++-static-destructors
-target-feature
+outline-atomics
-outline-atomics
-faddrsig
-fomit-frame-pointer
clang frontend
-fobjc-runtime=
-D_DEBUG
--dependent-lib=msvcrt
--dependent-lib=msvcrtd
-flto-visibility-public-std
--dependent-lib=libcmt
--dependent-lib=libcmtd
-D_VC_NODEFAULTLIB
--dependent-lib=oldnames
--show-includes
-fno-rtti-data
-stack-protector
-fcxx-exceptions
-fexceptions
-fexternc-nounwind
-fms-volatile
-fno-dllexport-inlines
-fms-memptr-rep=single
-fms-memptr-rep=multiple
-fms-memptr-rep=virtual
-fdefault-calling-conv=cdecl
-fdefault-calling-conv=fastcall
-fdefault-calling-conv=vectorcall
-fdefault-calling-conv=regcall
-fdiagnostics-format
-cfguard
-cfguard-no-checks
-fptrauth-abi-version=
-fptrauth-kernel-abi-version
-cc1as
-filetype
-dwarf-debug-producer
-arm-add-build-attributes
-aarch64-mark-bti-property
-type=
-outputs=
-inputs=
-unbundle
-allow-missing-bundles
/E, /P or /EP
-fmacro-prefix-map=
-aux-target-feature
-msmall-data-limit
-mrelax-all
-mincremental-linker-compatible
thumb
-arm-implicit-it=
+use-tcc-in-div
-use-tcc-in-div
-soft-float
+mips1
+mips2
+mips3
+mips4
+mips5
+mips32
+mips32r2
+mips32r3
+mips32r5
+mips32r6
+mips64
+mips64r2
+mips64r3
+mips64r5
+mips64r6
-force_cpusubtype_ALL
-msave-temp-labels
-massembler-fatal-warnings
--no-warn
-massembler-no-warn
--noexecstack
--compress-debug-sections
-march
--mrelax-relocations
-mnoexecstack
-mlimit-float-precision
-ffp-model=
-Ofast
-ffp-exception-behavior=
-ftrapping-math
-fno-trapping-math
-ffp-model=strict
-menable-no-infs
-menable-no-nans
-fmath-errno
-menable-unsafe-fp-math
-fno-signed-zeros
-mreassociate
-freciprocal-math
-fdenormal-fp-math=
-fdenormal-fp-math-f32=
-ffp-contract=
-fno-rounding-math
-frounding-math
-ffast-math
-ffp-contract=fast
-ffp-model=fast
-ffinite-math-only
-mfpmath
-fno-strict-float-cast-overflow
ieee
-mrecip=
divd
divf
vec-divd
vec-divf
sqrtd
sqrtf
vec-sqrtd
vec-sqrtf
c++-cpp-output
-analyzer-store=region
-analyzer-opt-analyze-nested-blocks
-analyzer-checker=core
-analyzer-checker=apiModeling
-analyzer-checker=unix
-analyzer-checker=unix.API
-analyzer-checker=unix.Malloc
-analyzer-checker=unix.MallocSizeof
-analyzer-checker=unix.MismatchedDeallocator
-analyzer-checker=unix.cstring.BadSizeArg
-analyzer-checker=unix.cstring.NullArg
-analyzer-disable-checker=unix.API
-analyzer-disable-checker=unix.Vfork
-analyzer-checker=osx
-analyzer-checker=security.insecureAPI.decodeValueOfObjCType
-analyzer-checker=fuchsia
-analyzer-checker=deadcode
-analyzer-checker=cplusplus
-analyzer-checker=security.insecureAPI.UncheckedReturn
-analyzer-checker=security.insecureAPI.getpw
-analyzer-checker=security.insecureAPI.gets
-analyzer-checker=security.insecureAPI.mktemp
-analyzer-checker=security.insecureAPI.mkstemp
-analyzer-checker=security.insecureAPI.vfork
-analyzer-checker=nullability.NullPassedToNonnull
-analyzer-checker=nullability.NullReturnedFromNonnull
-analyzer-tidy-checker=bugprone-assert-side-effect
-analyzer-tidy-checker=bugprone-infinite-loop
-analyzer-tidy-checker=bugprone-move-forwarding-reference
-analyzer-output
dynamic-no-pic
rwpi
-fdebug-info-for-profiling
-gno-column-info
-dwarf-ext-refs
-fno-split-dwarf-inlining
-gdwarf-5
-gembed-source
-gcodeview
-gcodeview-ghash
-gno-inline-line-tables
-debug-info-macro
-gpubnames
-ggnu-pubnames
-fdebug-ranges-base-address
-generate-arange-section
-fforce-dwarf-frame
-generate-type-units
-debug-forward-template-params
-dwarf-explicit-import
-fprofile-instrument-path=
-fprofile-instrument=clang
--dependent-lib=
-fprofile-instrument=llvm
-fprofile-instrument=csllvm
-fprofile-instrument-use-path=
default.profdata
-ftest-coverage
-fprofile-arcs
-fcoverage-mapping
-fprofile-instr-generate
-fprofile-exclude-files=
--coverage
-fprofile-filter-files=
atomic
-fprofile-update=atomic
single
gcno
-coverage-notes-file
gcda
-coverage-data-file
-arcmt-action=check
-arcmt-action=modify
-arcmt-action=migrate
-mt-migrate-directory
-ccc-arcmt-migrate
-objcmt-migrate-literals
-objcmt-migrate-subscripting
-objcmt-migrate-property
-stack-protector-buffer-size
valid arguments to '-mstack-protector-guard=' are:tls global
for X86, valid arguments to '-mstack-protector-guard-reg=' are:fs gs
-fstack-clash-protection
pattern
-ftrivial-auto-var-init=
-ftrivial-auto-var-init-stop-after=
-fno-builtin
-fno-builtin-
-fno-math-builtin
-fno-signed-char
-fwchar-type=short
-fno-signed-wchar
-fwchar-type=int
-fsigned-wchar
-fobjc-disable-direct-methods-for-testing
-fmodules
-fmodules-ts
-fimplicit-module-maps
-fmodules-decluse
-fmodules-strict-decluse
.cache
modules
-fmodules-cache-path=
-fprebuilt-module-path=
-fprebuilt-implicit-modules
module.modulemap
-module-dependency-dir
-fbuild-session-timestamp
-fmodules-validate-system-headers
-fobjc-dispatch-method=mixed
-fobjc-dispatch-method=non-legacy
-fobjc-subscripting-legacy-runtime
-fobjc-arc
-fobjc-arc-cxxlib=libc++
-fobjc-arc-cxxlib=libstdc++
-fobjc-arc-exceptions
-fno-objc-convert-messages-to-runtime-calls
-fno-objc-infer-related-result-type
ignore_mrc_weak
-fignore-objc-weak
-fobjc-relative-method-lists
-fsmall-block-descriptors
local
-fobjc-exceptions
-fno-caret-diagnostics
-fno-diagnostics-fixit-info
-fno-diagnostics-show-option
-fdiagnostics-show-category
-fdiagnostics-show-hotness
-fdiagnostics-show-note-include-stack
-fno-diagnostics-show-note-include-stack
-fdiagnostics-color=
-fno-show-source-location
-fdiagnostics-absolute-paths
-fno-show-column
-fno-spell-checking
-mprefer-vector-width=none
-mprefer-vector-width=
-foptimization-record-file
yaml
-opt-record-file
-opt-record-passes
-opt-record-format
--amdhsa-code-object-version=
visualstudio::Compiler
-debug-info-kind=line-directives-only
-debug-info-kind=line-tables-only
-debug-info-kind=constructor
-debug-info-kind=limited
-debug-info-kind=standalone
-debug-info-kind=unused-types
-dwarf-version=
-debugger-tuning=gdb
-debugger-tuning=lldb
-debugger-tuning=sce
--compress-debug-sections=none
--compress-debug-sections=
split
--no-dynamic-linker
-zrelro
--eh-frame-hdr
-lcompiler_rt
include/c++/v1
cloudabi::Linker
LIBRARY_PATH
-plugin
/../lib/LLVMgold
-plugin-opt=mcpu=
-plugin-opt=O
-plugin-opt=dwo_dir=
_dwo
-plugin-opt=thinlto
-plugin-opt=jobs=
-plugin-opt=-debugger-tune=lldb
-plugin-opt=-debugger-tune=sce
-plugin-opt=-debugger-tune=gdb
-plugin-opt=-function-sections
-plugin-opt=-data-sections
-plugin-opt=sample-profile=
-plugin-opt=cs-profile-generate
-plugin-opt=cs-profile-path=
-plugin-opt=cs-profile-path=default_%m.profraw
-plugin-opt=legacy-pass-manager
-plugin-opt=new-pass-manager
-plugin-opt=stats-file=
-lomp
-lgomp
-liomp5
-Bdynamic
-lrt
-lomptarget
-lpthread
-ldl
-lexecinfo
fuzzer_interceptors
--export-dynamic
--export-dynamic-symbol=__cfi_check
-whole-archive
xray
-no-whole-archive
--extract-dwo
--strip-dwo
objcopy
-KPIC
MSVC
-x86-branches-within-32B-boundaries
-x86-align-branch-boundary=
fused, jcc, jmp, call, ret, indirect
-x86-align-branch=
-x86-pad-max-prefix-size=
-mno-code-object-v3
-mcode-object-version=2
-mcode-object-v3
-mcode-object-version=3
-enable-machine-outliner
-enable-machine-outliner=never
rv630
rv635
rv620
rs780
rs880
rv770
cedar
sumo
sumo2
cypress
cayman
--plugin-opt=-pass-remarks=
--plugin-opt=-pass-remarks-missed=
--plugin-opt=-pass-remarks-analysis=
--plugin-opt=opt-remarks-filename=
.opt.ld.
--plugin-opt=opt-remarks-passes=
--plugin-opt=opt-remarks-format=
--plugin-opt=opt-remarks-with-hotness
--plugin-opt=opt-remarks-hotness-threshold=
-zignore
-zrecord
--as-needed
--no-as-needed
asan-preinit
memprof-preinit
ubsan_minimal
scudo_minimal
asan_cxx
memprof_cxx
hwasan_cxx
lsan
msan_cxx
tsan_cxx
safestack
__safestack_init
cfi_diag
scudo_cxx_minimal
scudo_cxx
--whole-archive
--no-whole-archive
.syms
--dynamic-list=
-lgcc_eh
-lgcc_s
-l:libunwind.a
-l:libunwind.dll.a
-l:libunwind.so
-plugin-opt=
--32
--64
--strip-all
thumb2pe
arm64pe
i386pe
i386pep
_DllMainCRTStartup
_DllMainCRTStartup@12
--enable-auto-image-base
--entry
--allow-multiple-definition
--out-implib
-lmsvcrt
asan_dll_thunk
asan_dynamic
asan_dynamic_runtime_thunk
--undefined
___asan_seh_interceptor
__asan_seh_interceptor
CrossWindows::Linker
CrossWindows::Assembler
/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v
ptxas
/usr/local/cuda
/usr/local/cuda-
/usr/lib/cuda
/bin
/nvvm/libdevice
/lib64
/version.txt
/include/cuda.h
/libdevice.10.bc
No version found in version.txt or cuda.h.
compute_20
sm_20
sm_21
sm_32
compute_30
sm_30
sm_50
sm_52
sm_53
sm_60
sm_61
sm_62
compute_35
sm_35
sm_37
compute_50
__clang_cuda_runtime_wrapper.h
Found CUDA installation: 
, version 
-m64
-m32
--dont-merge-basicblocks
--return-at-end
-lineinfo
--gpu-name
--output-file
--options-file
--cuda
--create
--image=profile=
,file=
fatbinary
-lomptarget-nvptx
nvlink
cubin
-fcuda-is-device
-fcuda-approx-transcendentals
-mlink-builtin-bitcode
+ptx70
+ptx65
+ptx64
+ptx63
+ptx61
+ptx60
+ptx42
--nvptx-short-ptr
libomptarget-nvptx-
version.txt: 
CUDA_VERSION
cuda.h: CUDA_VERSION=
cuda.h: CUDA_VERSION not found.
NVPTX::Assembler
NVPTX::OpenMPLinker
NVPTX::Linker
armv4t
armv5
armv7em
armv7m
r600
--gstabs
-demangle
-export_dynamic
-object_path_lto
-no_deduplicate
-dynamic
-dynamiclib
-dylib_compatibility_version
-dylib_current_version
-dylib_install_name
-no_pie
-bitcode_process_mode
touch
-enable-linkonceodr-outlining
-lto-stats-file=
-ObjC
-lsystem_pthread
-arch_multiple
-final_output
-allow_stack_execute
-threads=
-create
-output
lipo
array-bounds-pointer-arithmetic
builtin-memcpy-chk-size
conditional-uninitialized
implicit-int-conversion
memset-transposed-args
return-stack-address
shorten-64-to-32
sizeof-array-argument
sizeof-array-decay
sizeof-pointer-memaccess
-Wno-error=
-Wdeprecated-objc-isa-usage
-Werror=deprecated-objc-isa-usage
-Werror=implicit-function-declaration
-fptrauth-objc-isa-mode=sign-and-strip
Toolchains/XcodeDefault.xctoolchain/usr
macho_embedded
MacOSX
iPhone
AppleTV
Watch
Bridge
___gcov_dump
___gcov_reset
_writeout_fn_list
_reset_fn_list
___llvm_profile_filename
___llvm_profile_raw_version
_lprofDirMode
/usr/appleinternal/lib/sanitizers
/usr/local/lib/sanitizers
xray-basic
xray-fdr
-lgcc_s.1
/XcodeDefault.xctoolchain/usr/include
backward
4.2.1
powerpc-apple-darwin10
4.0.0
i686-apple-darwin10
i686-apple-darwin8
arm-apple-darwin10
arm64-apple-darwin10
libstdc++.dylib
libstdc++.6.dylib
/usr/lib/libstdc++.dylib
/usr/lib/libstdc++.6.dylib
libclang_rt.cc_kext_watchos.a
libclang_rt.cc_kext_tvos.a
libclang_rt.cc_kext_bridgeos.a
libclang_rt.cc_kext_ios.a
libclang_rt.cc_kext.a
armv5tej
armv7a
_pic
_static
-faligned-alloc-unavailable
-fdepfile-entry=
-fcompatibility-qualified-id-block-type-checking
-fvisibility-inlines-hidden-static-local-var
iOS 5.0
OS X 10.7
-watchos_version_min
-watchos_simulator_version_min
-tvos_version_min
-tvos_simulator_version_min
-bridgeos_version_min
-driverkit_version_min
-ios_simulator_version_min
-maccatalyst_version_min
-iphoneos_version_min
-macosx_version_min
-lcrt0.o
crt3.o
tsan_tvos_dynamic
tsan_ios_dynamic
-lto-pass-remarks-output
-lto-pass-remarks-filter=
-lto-pass-remarks-format=
-lto-pass-remarks-with-hotness
-lto-pass-remarks-hotness-threshold=
darwin::Lipo
darwin::Dsymutil
darwin::VerifyDebug
darwin::Linker
darwin::Assembler
-exported_symbol
-sectalign
0x4000
MACOSX_DEPLOYMENT_TARGET
IPHONEOS_DEPLOYMENT_TARGET
TVOS_DEPLOYMENT_TARGET
WATCHOS_DEPLOYMENT_TARGET
BRIDGEOS_DEPLOYMENT_TARGET
DRIVERKIT_DEPLOYMENT_TARGET
WatchOS
BridgeOS
-simulator
mac catalyst
-ldylib1.o
-ldylib1.10.5.o
-lbundle1.o
-lgcrt0.o
-lgcrt1.o
-no_new_main
-lcrt1.o
-lcrt1.3.1.o
-lcrt1.10.5.o
-lcrt1.10.6.o
/usr/libexec/ld-elf.so.2
--hash-style=gnu
--enable-new-dtags
elf_i386
gcrt1.o
Scrt1.o
crt1.o
-L/usr/lib/gcc80
/usr/lib/gcc80
-lgcc_pic
/../lib
dragonfly::Assembler
dragonfly::Linker
-fc1
-test-io
-emit-ast
flang-new
flang frontend
-mabi
-mfpu=vfp
-mfpu=softvfp
-meabi=5
-matpcs
--debug-prefix-map
/libexec/ld-elf.so.1
--hash-style=both
elf_i386_fbsd
elf32ppc_fbsd
elf32lppc
elf32btsmip_fbsd
elf32ltsmip_fbsd
elf32btsmipn32_fbsd
elf64btsmip_fbsd
elf32ltsmipn32_fbsd
elf64ltsmip_fbsd
elf32lriscv
elf64lriscv
crtbeginT.o
-lm_p
-lgcc_p
-lgcc_eh_p
-lpthread_p
-lc_p
/usr/lib32/crt1.o
/usr/lib32
/usr/include/c++/4.2
-lc++_p
-lstdc++_p
-fno-use-init-array
freebsd::Assembler
freebsd::Linker
max-page-size=4096
rodynamic
separate-loadable-segments
--pack-dyn-relocs=relr
--build-id
asan/
tsan/
ld.so.1
--push-state
--pop-state
--wrap=pthread_create
+fsanitize=address
asan+noexcept
relative-vtables
+fexperimental-relative-c++-abi-vtables
relative-vtables+noexcept
fexceptions
fsanitize=address
fexperimental-relative-c++-abi-vtables
fuchsia::Linker
rcsD
noexecstack
cortex-a53
--fix-cortex-a53-843419
--warn-shared-textrel
rcrt1.o
max-page-size=0x4000000
crtbegin
crtbegin_static.o
crtbegin_so.o
crtbegin_dynamic.o
-lgloss
-lsoftfp
crtend
crtend_so.o
crtend_android.o
--x32
-mppc
-mlittle-endian
-mppc64
-mfpu=neon
-mfpu=crypto-neon-fp-armv8
-mfloat-abi=soft
-mfloat-abi=softfp
-mfloat-abi=hard
-mno-shared
-call_nonpic
-mnan=2008
-mfpxx
-no-mips16
-mmsa
/crtbegin.o
mips32
march=mips32
mips32r2
mips32r3
mips32r5
march=mips32r2
mips32r6
march=mips32r6
mips64
march=mips64
mips64r2
mips64r3
mips64r5
octeon+
march=mips64r2
march=mips64r6
mmicromips
muclibc
mnan=2008
mabi=n32
mabi=n64
msoft-float
mhard-float
/usr
0.0.0
/gcc
/gcc-cross
Found candidate GCC installation: 
Selected GCC installation: 
Candidate multilib: 
Selected multilib: 
/usr/gcc
/lib/gcc
/opt/rh/devtoolset-10/root/usr
/opt/rh/devtoolset-9/root/usr
/opt/rh/devtoolset-8/root/usr
/opt/rh/devtoolset-7/root/usr
/opt/rh/devtoolset-6/root/usr
/opt/rh/devtoolset-4/root/usr
/opt/rh/devtoolset-3/root/usr
/opt/rh/devtoolset-2/root/usr
aarch64-none-linux-gnu
aarch64-linux-gnu
aarch64-redhat-linux
aarch64-suse-linux
aarch64-linux-android
aarch64_be-none-linux-gnu
aarch64_be-linux-gnu
arm-linux-gnueabi
arm-linux-androideabi
arm-linux-gnueabihf
armv7hl-redhat-linux-gnueabi
armv6hl-suse-linux-gnueabi
armv7hl-suse-linux-gnueabi
armeb-linux-gnueabi
armeb-linux-androideabi
armeb-linux-gnueabihf
armebv7hl-redhat-linux-gnueabi
x86_64-linux-gnu
x86_64-unknown-linux-gnu
x86_64-pc-linux-gnu
x86_64-redhat-linux6E
x86_64-redhat-linux
x86_64-suse-linux
x86_64-manbo-linux-gnu
x86_64-slackware-linux
x86_64-unknown-linux
x86_64-amazon-linux
x86_64-linux-android
/libx32
/lib32
i686-linux-gnu
i686-pc-linux-gnu
i486-linux-gnu
i386-linux-gnu
i386-redhat-linux6E
i686-redhat-linux
i586-redhat-linux
i386-redhat-linux
i586-suse-linux
i486-slackware-linux
i686-montavista-linux
i586-linux-gnu
i686-linux-android
i386-gnu
i486-gnu
i586-gnu
i686-gnu
mips-linux-gnu
mips-mti-linux
mips-mti-linux-gnu
mips-img-linux-gnu
mipsisa32r6-linux-gnu
mipsel-linux-gnu
mipsisa32r6el-linux-gnu
mipsel-linux-android
mips64-linux-gnu
mips64-linux-gnuabi64
mipsisa64r6-linux-gnu
mipsisa64r6-linux-gnuabi64
mips64el-linux-gnu
mips64el-linux-gnuabi64
mipsisa64r6el-linux-gnu
mipsisa64r6el-linux-gnuabi64
mips64el-linux-android
mips64-linux-gnuabin32
mipsisa64r6-linux-gnuabin32
mips64el-linux-gnuabin32
mipsisa64r6el-linux-gnuabin32
msp430-elf
powerpc-linux-gnu
powerpc-unknown-linux-gnu
powerpc-linux-gnuspe
powerpc64-suse-linux
powerpc-montavista-linuxspe
powerpcle-linux-gnu
powerpcle-unknown-linux-gnu
powerpcle-linux-musl
powerpc64-linux-gnu
powerpc64-unknown-linux-gnu
ppc64-redhat-linux
powerpc64le-linux-gnu
powerpc64le-unknown-linux-gnu
powerpc64le-suse-linux
ppc64le-redhat-linux
riscv32-unknown-linux-gnu
riscv32-linux-gnu
riscv32-unknown-elf
riscv64-unknown-linux-gnu
riscv64-linux-gnu
riscv64-unknown-elf
riscv64-redhat-linux
riscv64-suse-linux
sparc-linux-gnu
sparcv8-linux-gnu
sparc64-linux-gnu
sparcv9-linux-gnu
s390x-linux-gnu
s390x-unknown-linux-gnu
s390x-ibm-linux-gnu
s390x-suse-linux
s390x-redhat-linux
sparc-sun-solaris2.11
sparc-sun-solaris2.12
sparcv9-sun-solaris2.11
sparcv9-sun-solaris2.12
i386-pc-solaris2.11
i386-pc-solaris2.12
x86_64-pc-solaris2.11
x86_64-pc-solaris2.12
gcc/
../..
gcc-cross/
/gcc/
i386-linux-gnu/gcc/
i386-gnu/gcc/
/../
/config-
/usr/lib/gcc/
/bin
/lib/../
/usr/lib/
/../../
/../include/c++
/usr/local/include/c++
/usr/include/c++
/../include
/c++/
/include/g++-v
elf_iamcu
aarch64linux
aarch64linuxb
armelfb_linux_eabi
armelf_linux_eabi
elf32ppclinux
elf32ppc
elf32lppclinux
elf64ppc
elf64lppc
elf32_sparc
elf64_sparc
elf32btsmip
elf32ltsmip
elf32btsmipn32
elf64btsmip
elf32ltsmipn32
elf64ltsmip
elf64_s390
elf32_x86_64
elf_x86_64
elf64ve
-mcpu=cortex-a15
kryo
-mcpu=cortex-a57
/mips-r2
/mips-r6
/32/mips-r1
/mips-r1
/32/mips-r2
/32/mips-r6
/mips-r2-hard-musl
/mipsel-r2-hard-musl
/../sysroot
/mips32
/micromips
/mips64r2
/mips64
/mips16
+mips16
/uclibc
/sof
/nan2008
/mips64/mips16
/mips64r2/mips16
/micromips/mips16
/micromips/64
/mips32/64
^/64
/mips16/64
.*sof/nan2008
/mips-r2-hard
/mips-r2-soft
/mipsel-r2-hard
/mipsel-r2-soft
/mips-r2-hard-nan2008
/mipsel-r2-hard-nan2008
/mips-r2-hard-nan2008-uclibc
/mipsel-r2-hard-nan2008-uclibc
/mips-r2-hard-uclibc
/mipsel-r2-hard-uclibc
/micromipsel-r2-hard-nan2008
/micromipsel-r2-soft
/../../../../sysroot/uclibc/usr/include
/../../../../sysroot/usr/include
/../../../../sysroot
/../usr/include
/../../../../mips-mti-linux-gnu/lib
/mips64r6
/mips-r6-hard
/mips-r6-soft
/mipsel-r6-hard
/mipsel-r6-soft
/micromips-r6-hard
/micromips-r6-soft
/micromipsel-r6-hard
/micromipsel-r6-soft
/../../../../mips-img-linux-gnu/lib
/soft-float
/micromips/nan2008
/mips16/nan2008
/mips16.*/64
/micromips.*/64
/../../../../mips-linux-gnu/libc/uclibc/usr/include
/../../../../mips-linux-gnu/libc/usr/include
/armv7-a
/thumb
/armv7-a/thumb
march=armv7-a
mthumb
lib32/ilp32
lib32/ilp32f
lib32/ilp32d
lib64/lp64
lib64/lp64f
lib64/lp64d
ilp32d
mabi=ilp32d
lp64f
mabi=lp64f
+march=
+mabi=
march=
mabi=
/../../../../riscv64-unknown-elf/lib
/../../../../riscv32-unknown-elf/lib
/430
/430/exceptions
exceptions
/amd64
/sparcv9
/libgcc.a
mx32
gcc::Preprocessor
gcc preprocessor
gcc::Compiler
gcc frontend
GNU::Assembler
gcc::Linker
linker (via gcc)
/system/develop/headers/c++/v1
/system/develop/headers/c++
-flavor
--no-undefined
-plugin-opt=-amdgpu-internalize-symbols
-plugin-opt=-mattr=
-type=o
-bundle-align=
-targets=host-x86_64-unknown-linux
-inputs=/dev/null
-amdgcn-amd-amdhsa--
.mcin
.hipfb
mcin
hipfb
#       HIP Object Generator
# *** Automatically generated by Clang ***
  .type __hip_fatbin,@object
  .section .hip_fatbin,"a",@progbits
  .globl __hip_fatbin
  .p2align 
__hip_fatbin:
  .incbin "
--filetype=obj
llvm-mc
-amdgpu-internalize-symbols
--gpu-max-threads-per-block=
AMDGCN::Linker
amdgcn-link
--arch=hexagon
-filetype=obj
-mcpu=hexagon
-gpsize=
/../target
/hexagon/lib
/G0/pic
+reserved-r19
-hexagon-autohvx
usr/include
/hexagon/include
/hexagon/include/c++/v1
/hexagon/include/c++
hexagonv60
hexagon
+hvx
+hvx-length
128b
-march=hexagon
-call_shared
-dynamic-linker=/lib/ld-musl-hexagon.so.1
/usr/lib/crt1.o
/usr/lib/crti.o
-lclang_rt.builtins-hexagon
hexagon/lib
/crt0_standalone.o
/crt0.o
/pic
/initS.o
/init.o
/finiS.o
/fini.o
hexagon::Assembler
hexagon-as
hexagon::Linker
hexagon-ld
hexagon-link
/lib/i386-gnu
/../lib/
/../
/usr/lib/../
/usr/include/i386-gnu
lib32
lib64
GNU::Linker
/lib/arm-linux-gnueabihf
/lib/arm-linux-gnueabi
/lib/armeb-linux-gnueabihf
/lib/armeb-linux-gnueabi
/lib/i386-linux-gnu
/lib/x86_64-linux-gnu
/lib/aarch64-linux-gnu
/lib/aarch64_be-linux-gnu
-linux-
gnuabin32
gnuabi64
/lib/mips64-linux-gnu
mips64el
/lib/mips64el-linux-gnu
/lib/powerpc-linux-gnuspe
/lib/powerpc-linux-gnu
/lib/powerpcle-linux-gnu
/lib/powerpc64-linux-gnu
/lib/powerpc64le-linux-gnu
/lib/sparc-linux-gnu
/lib/sparc64-linux-gnu
/lib/s390x-linux-gnu
/../bin
/usr/
/../../../../
/libc
/system/bin/linker64
/system/bin/linker
/lib/ld-musl-
.so.1
ld-linux-aarch64.so.1
ld-linux-aarch64_be.so.1
ld-linux-armhf.so.3
ld-linux.so.3
ld-uClibc-mipsn8.so.0
ld-uClibc.so.0
ld-musl-mipsel.so.1
ld-musl-mips.so.1
ld-linux-mipsn8.so.1
ld64.so.2
ld64.so.1
ld-linux-riscv32-
ld-linux-riscv64-
ld-linux.so.2
libx32
ld-linux-x32.so.2
ld-linux-x86-64.so.2
/opt/nec/ve/lib/ld-linux-ve.so.1
/usr/include/x86_64-linux-gnu
/usr/include/i686-linux-gnu/64
/usr/include/i486-linux-gnu/64
/usr/include/i386-linux-gnu
/usr/include/x86_64-linux-gnu/32
/usr/include/i686-linux-gnu
/usr/include/i486-linux-gnu
/usr/include/aarch64-linux-gnu
/usr/include/arm-linux-gnueabi
/usr/include/arm-linux-gnueabihf
/usr/include/armeb-linux-gnueabi
/usr/include/armeb-linux-gnueabihf
/usr/include/mips-linux-gnu
/usr/include/mipsel-linux-gnu
/usr/include/mips64-linux-gnuabi64
/usr/include/mips64el-linux-gnuabi64
/usr/include/mips64-linux-gnuabin32
/usr/include/mips64el-linux-gnuabin32
/usr/include/mipsisa32-linux-gnu
/usr/include/mipsisa32r6el-linux-gnu
/usr/include/mipsisa64r6-linux-gnuabi64
/usr/include/mipsisa64r6el-linux-gnuabi64
/usr/include/mipsisa64r6-linux-gnuabin32
/usr/include/mipsisa64r6el-linux-gnuabin32
/usr/include/powerpc-linux-gnu
/usr/include/powerpc-linux-gnuspe
/usr/include/powerpcle-linux-gnu
/usr/include/powerpc64-linux-gnu
/usr/include/powerpc64le-linux-gnu
/usr/include/sparc-linux-gnu
/usr/include/sparc64-linux-gnu
/usr/include/s390x-linux-gnu
/../include/g++
libr6
libr2
GNU::StaticLibTool
static-lib-linker
/c++/v1
mips
-lmingwthrd
-lmingw32
-lmoldname
-lmingwex
--subsystem
console
--dll
--shared
DllMainCRTStartup
dllcrt2.o
crt2u.o
crt2.o
gcrt2.o
windowsapp
-lssp_nonshared
-lssp
-liomp5md
-lgmon
--require-defined
-lgdi32
-lcomdlg32
-ladvapi32
-lshell32
-luser32
-lkernel32
-w64-mingw32-gcc
/sys-root/mingw/lib
/sys-root/mingw/include
MinGW::Assemble
MinGW::Linker
-lCompilerRT-Generic
-L/usr/pkg/compiler-rt/lib
minix::Assembler
minix::Linker
-hwmult16
-hwmult32
-hwmultf5
16bit
+hwmult16
32bit
+hwmult32
+hwmultf5
-D__MSP430i
-D__
crtbegin_no_eh.o
-lcrt
-lsim
--undefined=__crt0_call_exit
-lnosys
crtend_no_eh.o
--relax
MSP430::Linker
msp430-elf-ld
-lmul_16
-lmul_32
-lmul_f5
-lmul_none
-Tmsp430-sim.ld
-defaultlib:libcmt
-defaultlib:oldnames
-libpath:
atlmfc
-debug
-Brepro
-dll
-incremental:no
-include:___asan_seh_interceptor
-include:__asan_seh_interceptor
cf,nochecks
-guard:cf
-guard:cf-
-nodefaultlib:vcomp.lib
-nodefaultlib:vcompd.lib
-defaultlib:libomp.lib
-defaultlib:libiomp5md.lib
lld-link
link.exe
cl.exe
/nologo
/Oi-
/Ob2
/Oy-
/GR-
/GS-
/Gy-
/Gw-
/Zc:threadSafeInit
/Zc:threadSafeInit-
/guard:cf
/guard:cf-
Hostx64
Hostx86
stdlib.h
INCLUDE
VCToolsInstallDir
VCINSTALLDIR
visualstudio::Linker
-fno-exceptions
-DMYRIAD2
moviCompile
-no6thSlotCompression
-cv:
-noSPrefixing
moviAsm
-lrtemscpu
-lrtemsbsp
sparc-myriad-rtems-ld
myriad
sparc-myriad-rtems
/../sparc-myriad-rtems/lib
/../include/c++/v1
movicompile
shave::Linker
nacl-arm-macros.s
elf_i386_nacl
armelf_nacl
elf_x86_64_nacl
mipselelf_nacl
Native Client
-lnacl
-lpnacl_legacy
x86_64-nacl/lib32
i686-nacl/usr/lib
x86_64-nacl/bin
i686-nacl
x86_64-nacl/lib
x86_64-nacl/usr/lib
x86_64-nacl
arm-nacl/lib
arm-nacl/usr/lib
arm-nacl/bin
arm-nacl
mipsel-nacl/lib
mipsel-nacl/usr/lib
mipsel-nacl
i686-nacl/usr/include
x86_64-nacl/include
arm-nacl/usr/include
x86_64-nacl/usr/include
mipsel-nacl/usr/include
arm-nacl/include/c++/v1
x86_64-nacl/include/c++/v1
mipsel-nacl/include/c++/v1
NaCl::Linker
/libexec/ld.elf_so
armelf_nbsd_eabi
armelf_nbsd_eabihf
armelf_nbsd
armelfb_nbsd_eabi
armelfb_nbsd_eabihf
armelfb_nbsd
elf32ppc_nbsd
=/usr/lib/eabihf
=/usr/lib/powerpc
/__config
/usr/include/g++
-D_REENTRANT
netbsd::Assembler
netbsd::Linker
__start
/usr/libexec/ld.so
-nopie
rcrt0.o
-lc++abi_p
/usr/lib/libcompiler_rt.a
openbsd::Assembler
openbsd::Linker
--dependent-lib=libclang_rt.profile-x86_64.a
orbis-as
--dependent-lib=libSceDbgUBSanitizer_stub_weak.a
--dependent-lib=libSceDbgAddressSanitizer_stub_weak.a
--oformat=so
-fuse-ld
orbis-ld
target/include
PS4 system headers
target/lib
PS4 system libraries
-fvisibility-dllexport=protected
-fvisibility-nodllstorageclass=hidden
-fvisibility-externs-dllimport=default
-fvisibility-externs-nodllstorageclass=default
-lSceDbgUBSanitizer_stub_weak
-lSceDbgAddressSanitizer_stub_weak
PS4cpu::Assemble
PS4cpu::Link
lib/crt0.o
RISCV::Linker
_start
values-Xa.o
values-Xc.o
values-xpg6.o
values-xpg4.o
solaris::Assembler
solaris::Linker
/usr/bin/ld
/../libexec
/opt/nec/ve/lib
NCC_C_INCLUDE_PATH
/opt/nec/ve/include
NCC_CPLUS_INCLUDE_PATH
wasm64
crt1-reactor.o
_initialize
--shared-memory
wasm-opt
-pthread
-mno-atomics
-mno-bulk-memory
-mno-mutable-globals
-mno-sign-ext
+atomics
+bulk-memory
+mutable-globals
+sign-ext
-fwasm-exceptions
-mno-exception-handling
-mno-reference-types
-enable-emscripten-cxx-exceptions
-mllvm -enable-emscripten-cxx-exceptions
+exception-handling
+reference-types
/include/
/include/c++/v1
/llvm-lto/13.0.0
wasm::Linker
wasm-ld
-fverbose-asm
XCC_C_INCLUDE_PATH
XCC_CPLUS_INCLUDE_PATH
XCore::Assembler
XCore-as
XCore::Linker
XCore-ld
ppc_wrappers
-action
write-bin
write-ifs
ifso
.ifso
.ifs
cppm
cpp-output
cuda-cpp-output
cuda
hip-cpp-output
objective-c-cpp-output
objc-cpp-output
objective-c
c++-cpp-output
objective-c++-cpp-output
objc++-cpp-output
objective-c++
renderscript
c-header-cpp-output
c-header
cl-header
objective-c-header-cpp-output
objective-c-header
c++-header-cpp-output
c++-header
objective-c++-header-cpp-output
objective-c++-header
c++-module
c++-module-cpp-output
assembler
assembler-with-cpp
f95-cpp-input
java
lto-ir
lto-bc
ifs-cpp
plist
rewritten-objc
rewritten-legacy-objc
remap
precompiled-header
object
treelang
image
dSYM
dependencies
cuda-fatbin
fatbin
hip-fatbin
hipfb
none
custom
-fxray-always-emit-customevents
-fxray-always-emit-typedevents
-fxray-ignore-loops
-fno-xray-function-index
-fxray-function-groups=
-fxray-selected-function-group=
-fxray-always-instrument=
-fxray-never-instrument=
-fxray-attr-list=
 Opt:
 Index:
 Values: [
GroupClass
InputClass
UnknownClass
FlagClass
JoinedClass
ValuesClass
SeparateClass
CommaJoinedClass
MultiArgClass
JoinedOrSeparateClass
JoinedAndSeparateClass
RemainingArgsClass
RemainingArgsJoinedClass
 Prefixes:[
 Name:"
 Group:
 Alias:
 NumArgs:
OPTIONS
 <value>
<value>
Frontend
STATISTICS:
<eof> parser at end of file
<unknown> parser at unknown location
: at annotation token
: unknown current parser token
: current parser token '
decltype
attribute
enable_if
__declspec
macosx_app_extension
replacement
language
defined_in
generated_declaration
enum 
__interface
__interface 
parsing struct/union body
_Atomic
type name
acquire_capability
acquire_shared_capability
exclusive_lock_function
shared_lock_function
acquired_after
acquired_before
assert_capability
assert_shared_capability
assert_exclusive_lock
assert_shared_lock
diagnose_if
exclusive_trylock_function
guarded_by
lock_returned
locks_excluded
pt_guarded_by
release_capability
release_shared_capability
release_generic_capability
unlock_function
requires_capability
exclusive_locks_required
requires_shared_capability
shared_locks_required
shared_trylock_function
try_acquire_capability
try_acquire_shared_capability
callback
iboutletcollection
Owner
Pointer
preferred_name
argument_with_type_tag
pointer_with_type_tag
__clang_arm_builtin_alias
blocks
callable_when
consumable
enum_extensibility
format
unroll
nounroll
unroll_and_jam
nounroll_and_jam
ns_error_domain
declare simd
declare target
objc_bridge
objc_bridge_mutable
objc_bridge_related
objc_gc
objc_method_family
objc_ownership
ownership_holds
ownership_returns
ownership_takes
param_typestate
return_typestate
set_typestate
swift_async
swift_async_error
swift_error
swift_newtype
swift_wrapper
test_typestate
type_tag_for_datatype
type_visibility
typed_memory_operation
ptrauth_vtable_pointer
visibility
xnu_usage_semantics
cpu_dispatch
cpu_specific
iOSApplicationExtension
macOSApplicationExtension
tvOSApplicationExtension
watchOSApplicationExtension
instancetype
inline 
namespace 
parsing namespace
attributes list
using declaration
alias declaration
__underlying_type
final
__final
sealed
override
access declaration
parsing struct/union/class body
(anonymous)
_Clang
uuid
noexcept(false)
nodiscard
maybe_unused
__is_abstract
__is_aggregate
__is_arithmetic
__is_array
__is_assignable
__is_base_of
__is_class
__is_complete_type
__is_compound
__is_const
__is_constructible
__is_convertible
__is_convertible_to
__is_destructible
__is_empty
__is_enum
__is_floating_point
__is_final
__is_function
__is_fundamental
__is_integral
__is_interface_class
__is_literal
__is_lvalue_expr
__is_lvalue_reference
__is_member_function_pointer
__is_member_object_pointer
__is_member_pointer
__is_nothrow_assignable
__is_nothrow_constructible
__is_nothrow_destructible
__is_object
__is_pod
__is_pointer
__is_polymorphic
__is_reference
__is_rvalue_expr
__is_rvalue_reference
__is_same
__is_scalar
__is_sealed
__is_signed
__is_standard_layout
__is_trivial
__is_trivially_assignable
__is_trivially_constructible
__is_trivially_copyable
__is_union
__is_unsigned
__is_void
__is_volatile
__bridge_retained
block literal parsing
__builtin_unsafe_forge_bidi_indexable
__builtin_unsafe_forge_single
template 
lambda expression parsing
addrspace_cast
typeid
__uuidof
__builtin_bit_cast
@class
unsafe_unretained
nonnull
nullable
null_unspecified
null_resettable
@compatibility_alias
@synthesize
@dynamic
@throw
@synchronized
@catch clause
parsing Objective-C method
autoreleasepool
@encode
@selector
'initializer'
<selector-name>
(<property-name>)
<property-name>
user condition
<condition>
<invalid>
context set name "
'=' that follows the context set name "
context selectors for the context set "
'#pragma omp 
uses_allocator
uses_allocators
schedule modifier
defaultmap modifier
mapper
iterator
reduction identifier
dependency type
motion modifier
score expression
ext_
absent
contains
holds
no_openmp
no_openmp_routines
no_parallelism
data
variant
begin
STDC
OPENCL
discard
remove
push
".CRT$XCC"
".CRT$XCL"
".CRT$XCU"
distribute
vectorize
interleave
vectorize_predicate
disable
enable
assume_safety
unless(
__attribute__((
apply_to
clang loop 
'is_member'
'functionType'
'unless(is_union)'
'is_thread_local', 'is_global', 'is_local', 'is_parameter', 'unless(is_parameter)'
'is_instance'
any(
align
packed
mac68k
pack
ms_struct
unused
redefine_extname
STDC FENV_ROUND
CX_LIMITED_RANGE
clang section
pragma clang section
OPENCL EXTENSION
exestr
pragma comment
float_control
pragma detect_mismatch
pointers_to_members
full_generality
intrinsic
__INTRIN_H
optimize
'on' or 'off'
force_cuda_host_device
clang optimize
vectorize_width
interleave_count
unroll_count
pipeline_initiation_interval
clang loop
clang fp
clang attribute
clang max_tokens_here
max_tokens_total
clang max_tokens_total
do/while
goto
co_return
__leave
fp_contract
__attribute__
'case'
'default'
in compound statement ('{}')
'do'
parsing function body
InternalPragmaState
parsing function try block
target MC unavailable
<MS inline asm>
target ASM parser unavailable
asm operand
volatile
inline
goto
unspecified
fpsr
mxcsr
template
__except
oneway
bycopy
byref
pixel
_exception_info
__exception_info
GetExceptionInformation
_exception_code
GetExceptionCode
_abnormal_termination
__abnormal_termination
AbnormalTermination
top-level asm block
'asm'
__if_exists
__if_not_exists
Expected lexical block
Expected visible lookup table block
malformed block record in AST file
source location entry ID out-of-range for AST file
incorrectly-formatted source location entry in AST file
could not find file '
' referenced by AST file '
error at end of module block in AST file
malformed preprocessor detail record in AST file
malformed comments block in AST file
duplicate TYPE_OFFSET record in AST file
duplicate DECL_OFFSET record in AST file
duplicate IDENTIFIER_OFFSET record in AST file
invalid special-types record
invalid weak identifiers record
ran out of source locations
Multiple SOURCE_LOCATION_PRELOADS records in AST file
Invalid VTABLE_USES record
Invalid existing PendingInstantiations
Invalid PENDING_IMPLICIT_INSTANTIATIONS block
Invalid SEMA_DECL_REFS block
invalid DECL_UPDATE_OFFSETS block in AST file
duplicate OBJC_CATEGORIES_MAP record in AST file
Invalid existing UndefinedButUsed
invalid undefined-but-used record
duplicate MACRO_OFFSET record in AST file
invalid pragma optimize record
invalid pragma ms_struct record
invalid cuda pragma options record
invalid pragma pack record
SourceLocation remap refers to unknown module, cannot find 
' referenced by AST file
invalid record at top-level of AST file
malformed EXTENSION_METADATA in AST file
FILE type is NULL
Invalid FILE type in AST file
jmp_buf type is NULL
Invalid jmp_buf type in AST file
sigjmp_buf type is NULL
ucontext_t type is NULL
submodule metadata record should be at beginning of block
malformed module definition
too many submodules
mismatched umbrella headers in submodule
mismatched umbrella directories in submodule
no preprocessing record
Unexpected code for type
malformed AST file: missing C++ ctor initializers
malformed AST file: missing C++ base specifiers
declaration ID out-of-range for AST file
Corrupted AST file
*** AST File Statistics:
  %u/%u source location entries read (%f%%)
  %u/%u types read (%f%%)
  %u/%u declarations read (%f%%)
  %u/%u identifiers read (%f%%)
  %u/%u macros read (%f%%)
  %u/%u selectors read (%f%%)
  %u/%u statements read (%f%%)
  %u/%u lexical declcontexts read (%f%%)
  %u/%u visible declcontexts read (%f%%)
  %u/%u method pool entries read (%f%%)
  %u/%u method pool lookups succeeded (%f%%)
  %u/%u method pool table lookups succeeded (%f%%)
  %u / %u identifier table lookups succeeded (%f%%)
*** PCH/ModuleFile Remappings:
Global bit offset map
Global source location entry map
Global type map
Global declaration map
Global identifier map
Global macro map
Global submodule map
Global selector map
Global preprocessed entity map
*** PCH/Modules Loaded:
no identifier table in AST file
no macro table in AST file
submodule ID out of range in AST file
selector ID out of range in AST file
module features
target Objective-C runtime
block command names
target ABI
target CPU
tune CPU
-Wsystem-headers
-Weverything -Werror
-pedantic-errors
-Werror=
Cursor should always be able to go back, failed: 
could not decompress embedded file contents: 
AST record has invalid code
could not get buffer for file '
Timestamp file
file too small to contain AST file magic
file doesn't start with AST file magic
category '
' on interface '
jumping
reading code
ASTReader::readDeclRecord failed reading decl code: 
attempt to read a C++ base-specifier record as a declaration
attempt to read a C++ ctor initializer record as a declaration
ASTReader::loadDeclUpdateRecords failed jumping: 
ASTReader::loadDeclUpdateRecords failed reading code: 
ASTReader::loadDeclUpdateRecords failed reading rec code: 
ASTReader::loadPendingDeclChain failed jumping: 
ASTReader::loadPendingDeclChain failed reading code: 
ASTReader::loadPendingDeclChain failed reading rec code: 
ASTReader::readDeclRecord failed 
METADATA
MODULE_DIRECTORY
MODULE_MAP_FILE
IMPORTS
ORIGINAL_FILE
ORIGINAL_PCH_DIR
ORIGINAL_FILE_ID
INPUT_FILE_OFFSETS
LANGUAGE_OPTIONS
TARGET_OPTIONS
HEADER_SEARCH_OPTIONS
PREPROCESSOR_OPTIONS
INPUT_FILES_BLOCK
INPUT_FILE
INPUT_FILE_HASH
AST_BLOCK
TYPE_OFFSET
DECL_OFFSET
IDENTIFIER_OFFSET
IDENTIFIER_TABLE
EAGERLY_DESERIALIZED_DECLS
MODULAR_CODEGEN_DECLS
SPECIAL_TYPES
STATISTICS
TENTATIVE_DEFINITIONS
SELECTOR_OFFSETS
METHOD_POOL
PP_COUNTER_VALUE
SOURCE_LOCATION_OFFSETS
SOURCE_LOCATION_PRELOADS
EXT_VECTOR_DECLS
UNUSED_FILESCOPED_DECLS
PPD_ENTITIES_OFFSETS
VTABLE_USES
REFERENCED_SELECTOR_POOL
TU_UPDATE_LEXICAL
SEMA_DECL_REFS
WEAK_UNDECLARED_IDENTIFIERS
PENDING_IMPLICIT_INSTANTIATIONS
UPDATE_VISIBLE
DECL_UPDATE_OFFSETS
DECL_UPDATES
CUDA_SPECIAL_DECL_REFS
HEADER_SEARCH_TABLE
FP_PRAGMA_OPTIONS
OPENCL_EXTENSIONS
OPENCL_EXTENSION_TYPES
OPENCL_EXTENSION_DECLS
DELEGATING_CTORS
KNOWN_NAMESPACES
MODULE_OFFSET_MAP
SOURCE_MANAGER_LINE_TABLE
OBJC_CATEGORIES_MAP
FILE_SORTED_DECLS
IMPORTED_MODULES
OBJC_CATEGORIES
MACRO_OFFSET
INTERESTING_IDENTIFIERS
UNDEFINED_BUT_USED
LATE_PARSED_TEMPLATE
OPTIMIZE_PRAGMA_OPTIONS
MSSTRUCT_PRAGMA_OPTIONS
POINTERS_TO_MEMBERS_PRAGMA_OPTIONS
UNUSED_LOCAL_TYPEDEF_NAME_CANDIDATES
DELETE_EXPRS_TO_ANALYZE
CUDA_PRAGMA_FORCE_HOST_DEVICE_DEPTH
PP_CONDITIONAL_STACK
DECLS_TO_CHECK_FOR_DEFERRED_DIAGS
SOURCE_MANAGER_BLOCK
SM_SLOC_FILE_ENTRY
SM_SLOC_BUFFER_ENTRY
SM_SLOC_BUFFER_BLOB
SM_SLOC_BUFFER_BLOB_COMPRESSED
SM_SLOC_EXPANSION_ENTRY
PREPROCESSOR_BLOCK
PP_MACRO_DIRECTIVE_HISTORY
PP_MACRO_FUNCTION_LIKE
PP_MACRO_OBJECT_LIKE
PP_MODULE_MACRO
PP_TOKEN
SUBMODULE_BLOCK
SUBMODULE_METADATA
SUBMODULE_DEFINITION
SUBMODULE_UMBRELLA_HEADER
SUBMODULE_HEADER
SUBMODULE_TOPHEADER
SUBMODULE_UMBRELLA_DIR
SUBMODULE_IMPORTS
SUBMODULE_EXPORTS
SUBMODULE_REQUIRES
SUBMODULE_EXCLUDED_HEADER
SUBMODULE_LINK_LIBRARY
SUBMODULE_CONFIG_MACRO
SUBMODULE_CONFLICT
SUBMODULE_PRIVATE_HEADER
SUBMODULE_TEXTUAL_HEADER
SUBMODULE_PRIVATE_TEXTUAL_HEADER
SUBMODULE_INITIALIZERS
SUBMODULE_EXPORT_AS
COMMENTS_BLOCK
COMMENTS_RAW_COMMENT
COMMENTS_DECL_TO_COMMENT
DECLTYPES_BLOCK
TYPE_EXT_QUAL
TYPE_COMPLEX
TYPE_POINTER
TYPE_BLOCK_POINTER
TYPE_LVALUE_REFERENCE
TYPE_RVALUE_REFERENCE
TYPE_MEMBER_POINTER
TYPE_CONSTANT_ARRAY
TYPE_INCOMPLETE_ARRAY
TYPE_VARIABLE_ARRAY
TYPE_VECTOR
TYPE_EXT_VECTOR
TYPE_FUNCTION_NO_PROTO
TYPE_FUNCTION_PROTO
TYPE_TYPEDEF
TYPE_TYPEOF_EXPR
TYPE_TYPEOF
TYPE_RECORD
TYPE_ENUM
TYPE_OBJC_INTERFACE
TYPE_OBJC_OBJECT_POINTER
TYPE_DECLTYPE
TYPE_ELABORATED
TYPE_SUBST_TEMPLATE_TYPE_PARM
TYPE_UNRESOLVED_USING
TYPE_INJECTED_CLASS_NAME
TYPE_OBJC_OBJECT
TYPE_TEMPLATE_TYPE_PARM
TYPE_TEMPLATE_SPECIALIZATION
TYPE_DEPENDENT_NAME
TYPE_DEPENDENT_TEMPLATE_SPECIALIZATION
TYPE_DEPENDENT_SIZED_ARRAY
TYPE_PAREN
TYPE_MACRO_QUALIFIED
TYPE_PACK_EXPANSION
TYPE_ATTRIBUTED
TYPE_SUBST_TEMPLATE_TYPE_PARM_PACK
TYPE_AUTO
TYPE_UNARY_TRANSFORM
TYPE_ATOMIC
TYPE_DECAYED
TYPE_ADJUSTED
TYPE_OBJC_TYPE_PARAM
LOCAL_REDECLARATIONS
DECL_TYPEDEF
DECL_TYPEALIAS
DECL_ENUM
DECL_RECORD
DECL_ENUM_CONSTANT
DECL_FUNCTION
DECL_OBJC_METHOD
DECL_OBJC_INTERFACE
DECL_OBJC_PROTOCOL
DECL_OBJC_IVAR
DECL_OBJC_AT_DEFS_FIELD
DECL_OBJC_CATEGORY
DECL_OBJC_CATEGORY_IMPL
DECL_OBJC_IMPLEMENTATION
DECL_OBJC_COMPATIBLE_ALIAS
DECL_OBJC_PROPERTY
DECL_OBJC_PROPERTY_IMPL
DECL_FIELD
DECL_MS_PROPERTY
DECL_VAR
DECL_IMPLICIT_PARAM
DECL_PARM_VAR
DECL_FILE_SCOPE_ASM
DECL_BLOCK
DECL_CONTEXT_LEXICAL
DECL_CONTEXT_VISIBLE
DECL_NAMESPACE
DECL_NAMESPACE_ALIAS
DECL_USING
DECL_USING_SHADOW
DECL_USING_DIRECTIVE
DECL_UNRESOLVED_USING_VALUE
DECL_UNRESOLVED_USING_TYPENAME
DECL_LINKAGE_SPEC
DECL_CXX_RECORD
DECL_CXX_METHOD
DECL_CXX_CONSTRUCTOR
DECL_CXX_DESTRUCTOR
DECL_CXX_CONVERSION
DECL_ACCESS_SPEC
DECL_FRIEND
DECL_FRIEND_TEMPLATE
DECL_CLASS_TEMPLATE
DECL_CLASS_TEMPLATE_SPECIALIZATION
DECL_CLASS_TEMPLATE_PARTIAL_SPECIALIZATION
DECL_VAR_TEMPLATE
DECL_VAR_TEMPLATE_SPECIALIZATION
DECL_VAR_TEMPLATE_PARTIAL_SPECIALIZATION
DECL_FUNCTION_TEMPLATE
DECL_TEMPLATE_TYPE_PARM
DECL_NON_TYPE_TEMPLATE_PARM
DECL_TEMPLATE_TEMPLATE_PARM
DECL_CONCEPT
DECL_REQUIRES_EXPR_BODY
DECL_TYPE_ALIAS_TEMPLATE
DECL_STATIC_ASSERT
DECL_CXX_BASE_SPECIFIERS
DECL_CXX_CTOR_INITIALIZERS
DECL_INDIRECTFIELD
DECL_EXPANDED_NON_TYPE_TEMPLATE_PARM_PACK
DECL_EXPANDED_TEMPLATE_TEMPLATE_PARM_PACK
DECL_CLASS_SCOPE_FUNCTION_SPECIALIZATION
DECL_IMPORT
DECL_OMP_THREADPRIVATE
DECL_EMPTY
DECL_OBJC_TYPE_PARAM
DECL_OMP_CAPTUREDEXPR
DECL_PRAGMA_COMMENT
DECL_PRAGMA_DETECT_MISMATCH
DECL_OMP_DECLARE_REDUCTION
DECL_OMP_ALLOCATE
PREPROCESSOR_DETAIL_BLOCK
PPD_MACRO_EXPANSION
PPD_MACRO_DEFINITION
PPD_INCLUSION_DIRECTIVE
EXTENSION_BLOCK
EXTENSION_METADATA
UNHASHED_CONTROL_BLOCK
SIGNATURE
AST_BLOCK_HASH
DIAGNOSTIC_OPTIONS
HEADER_SEARCH_PATHS
FILE_SYSTEM_OPTIONS
DIAG_PRAGMA_MAPPINGS
<<<INVALID BUFFER>>>
STMT_STOP
STMT_NULL_PTR
STMT_REF_PTR
STMT_NULL
STMT_COMPOUND
STMT_CASE
STMT_DEFAULT
STMT_LABEL
STMT_ATTRIBUTED
STMT_IF
STMT_SWITCH
STMT_WHILE
STMT_DO
STMT_FOR
STMT_GOTO
STMT_INDIRECT_GOTO
STMT_CONTINUE
STMT_BREAK
STMT_RETURN
STMT_DECL
STMT_GCCASM
STMT_MSASM
EXPR_PREDEFINED
EXPR_DECL_REF
EXPR_INTEGER_LITERAL
EXPR_FIXEDPOINT_LITERAL
EXPR_FLOATING_LITERAL
EXPR_IMAGINARY_LITERAL
EXPR_STRING_LITERAL
EXPR_CHARACTER_LITERAL
EXPR_PAREN
EXPR_PAREN_LIST
EXPR_UNARY_OPERATOR
EXPR_SIZEOF_ALIGN_OF
EXPR_ARRAY_SUBSCRIPT
EXPR_CALL
EXPR_MEMBER
EXPR_BINARY_OPERATOR
EXPR_COMPOUND_ASSIGN_OPERATOR
EXPR_CONDITIONAL_OPERATOR
EXPR_IMPLICIT_CAST
EXPR_CSTYLE_CAST
EXPR_COMPOUND_LITERAL
EXPR_EXT_VECTOR_ELEMENT
EXPR_INIT_LIST
EXPR_DESIGNATED_INIT
EXPR_DESIGNATED_INIT_UPDATE
EXPR_IMPLICIT_VALUE_INIT
EXPR_NO_INIT
EXPR_VA_ARG
EXPR_ADDR_LABEL
EXPR_STMT
EXPR_CHOOSE
EXPR_GNU_NULL
EXPR_SHUFFLE_VECTOR
EXPR_BLOCK
EXPR_GENERIC_SELECTION
EXPR_OBJC_STRING_LITERAL
EXPR_OBJC_BOXED_EXPRESSION
EXPR_OBJC_ARRAY_LITERAL
EXPR_OBJC_DICTIONARY_LITERAL
EXPR_OBJC_ENCODE
EXPR_OBJC_SELECTOR_EXPR
EXPR_OBJC_PROTOCOL_EXPR
EXPR_OBJC_IVAR_REF_EXPR
EXPR_OBJC_PROPERTY_REF_EXPR
EXPR_OBJC_KVC_REF_EXPR
EXPR_OBJC_MESSAGE_EXPR
STMT_OBJC_FOR_COLLECTION
STMT_OBJC_CATCH
STMT_OBJC_FINALLY
STMT_OBJC_AT_TRY
STMT_OBJC_AT_SYNCHRONIZED
STMT_OBJC_AT_THROW
EXPR_OBJC_BOOL_LITERAL
STMT_CXX_CATCH
STMT_CXX_TRY
STMT_CXX_FOR_RANGE
EXPR_CXX_OPERATOR_CALL
EXPR_CXX_MEMBER_CALL
EXPR_CXX_REWRITTEN_BINARY_OPERATOR
EXPR_CXX_CONSTRUCT
EXPR_CXX_TEMPORARY_OBJECT
EXPR_CXX_STATIC_CAST
EXPR_CXX_DYNAMIC_CAST
EXPR_CXX_REINTERPRET_CAST
EXPR_CXX_CONST_CAST
EXPR_CXX_ADDRSPACE_CAST
EXPR_CXX_FUNCTIONAL_CAST
EXPR_USER_DEFINED_LITERAL
EXPR_CXX_STD_INITIALIZER_LIST
EXPR_CXX_BOOL_LITERAL
EXPR_CXX_NULL_PTR_LITERAL
EXPR_CXX_TYPEID_EXPR
EXPR_CXX_TYPEID_TYPE
EXPR_CXX_THIS
EXPR_CXX_THROW
EXPR_CXX_DEFAULT_ARG
EXPR_CXX_DEFAULT_INIT
EXPR_CXX_BIND_TEMPORARY
EXPR_CXX_SCALAR_VALUE_INIT
EXPR_CXX_NEW
EXPR_CXX_DELETE
EXPR_CXX_PSEUDO_DESTRUCTOR
EXPR_EXPR_WITH_CLEANUPS
EXPR_CXX_DEPENDENT_SCOPE_MEMBER
EXPR_CXX_DEPENDENT_SCOPE_DECL_REF
EXPR_CXX_UNRESOLVED_CONSTRUCT
EXPR_CXX_UNRESOLVED_MEMBER
EXPR_CXX_UNRESOLVED_LOOKUP
EXPR_CXX_EXPRESSION_TRAIT
EXPR_CXX_NOEXCEPT
EXPR_OPAQUE_VALUE
EXPR_BINARY_CONDITIONAL_OPERATOR
EXPR_TYPE_TRAIT
EXPR_ARRAY_TYPE_TRAIT
EXPR_PACK_EXPANSION
EXPR_SIZEOF_PACK
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM_PACK
EXPR_FUNCTION_PARM_PACK
EXPR_MATERIALIZE_TEMPORARY
EXPR_CUDA_KERNEL_CALL
EXPR_CXX_UUIDOF_EXPR
EXPR_CXX_UUIDOF_TYPE
EXPR_LAMBDA
unexpected declaration kind '
Module LoadIndex
expected signature BCGI
*** Global Module Index Statistics:
  %u / %u identifier lookups succeeded (%f%%)
LFS error
someone else is building the index
failed writing index
Module index '
' failed: 
failed getting buffer for module file
expected signature CPCH
imported file "%s" not found
Module WriteIndex
GLOBAL_INDEX_BLOCK
Module: 
  Imports: 
  Base source location offset: 
Source location offset local -> global map
  Base identifier ID: 
  Number of identifiers: 
Identifier ID local -> global map
  Base macro ID: 
  Number of macros: 
Macro ID local -> global map
  Base submodule ID: 
  Number of submodules: 
Submodule ID local -> global map
  Base selector ID: 
  Number of selectors: 
Selector ID local -> global map
  Base preprocessed entity ID: 
  Number of preprocessed entities: 
Preprocessed entity ID local -> global map
  Base type index: 
  Number of types: 
Type index local -> global map
  Base decl ID: 
  Number of decls: 
Decl ID local -> global map
module file out of date
module file not found
signature mismatch
could not read module signature
*** Analysis Based Warnings Stats:
 functions analyzed (
 w/o CFGs).
 CFG blocks built.
 average CFG blocks per function.
 max CFG blocks per function.
 functions analyzed for uninitialiazed variables
 variables analyzed.
 average variables per function.
 max variables per function.
 block visits.
 average block visits per function.
 max block visits per function.
/* DISABLES CODE */ (
[[fallthrough]]
[[clang::fallthrough]]
__attribute__((fallthrough))
PREFERRED-TYPE: 
COMPLETION: 
Pattern : 
 (requires fix-it:
 to "
OPENING_PAREN_LOC: 
OVERLOAD: 
const
volatile
restrict
unaligned
unspecified
typedef
extern
static
auto
register
__private_extern__
mutable
__thread
thread_local
_Thread_local
short
long
long long
imaginary
complex
signed
unsigned
void
char
__wchar_t
wchar_t
char8_t
char16_t
char32_t
__int128
_ExtInt
half
float
double
_Accum
_Fract
_Float16
__float128
bool
_Bool
_Decimal32
_Decimal64
_Decimal128
enum
class
union
struct
__interface
type-name
typeof
__auto_type
(decltype)
decltype(auto)
__underlying_type
__unknown_anytype
_Atomic
__bf16
image1d_t
image1d_array_t
image1d_buffer_t
image2d_t
image2d_array_t
image2d_depth_t
image2d_array_depth_t
image2d_msaa_t
image2d_array_msaa_t
image2d_msaa_depth_t
image2d_array_msaa_depth_t
image3d_t
(error)
constexpr
consteval
constinit
__unaligned
_Sat
inline
__forceinline
virtual
explicit
_Noreturn
friend
__module_private__
__pixel
power10-vector
power8-vector
arch12
override
final
__final
sealed
aarch64_vector_pcs
clang::aarch64_vector_pcs
amdgpu_flat_work_group_size
clang::amdgpu_flat_work_group_size
kernel functions
amdgpu_num_sgpr
clang::amdgpu_num_sgpr
amdgpu_num_vgpr
clang::amdgpu_num_vgpr
amdgpu_waves_per_eu
clang::amdgpu_waves_per_eu
gnu::interrupt
gnu::signal
abi_tag
gnu::abi_tag
structs, variables, functions, and namespaces
clang::acquire_capability
clang::acquire_shared_capability
acquire_handle
clang::acquire_handle
functions, typedefs, and parameters
non-static data members and global variables
address_space
clang::address_space
gnu::alias
functions and global variables
align_value
variables and typedefs
aligned
gnu::aligned
alignas
_Alignas
alloc_align
gnu::alloc_align
non-K&R-style functions
alloc_size
gnu::alloc_size
always_destroy
clang::always_destroy
variables
gnu::always_inline
__forceinline
analyzer_noreturn
analyzer_suppress
clang::analyzer_suppress
annotate
clang::annotate
gnu::no_caller_saved_registers
nocf_check
gnu::nocf_check
functions and function pointers
objc_arc_weak_reference_unavailable
clang::objc_arc_weak_reference_unavailable
Objective-C interfaces
clang::argument_with_type_tag
clang::pointer_with_type_tag
clang::__clang_arm_builtin_alias
__clang_arm_mve_strict_polymorphism
clang::__clang_arm_mve_strict_polymorphism
arm_sve_vector_bits
typedefs
gnu::artificial
inline functions
clang::assert_capability
clang::assert_shared_capability
assume_aligned
gnu::assume_aligned
Objective-C methods and functions
clang::assume
functions and Objective-C methods
clang::availability
named declarations
preserve_access_index
clang::preserve_access_index
structs, unions, and classes
clang::blocks
gnu::cdecl
__cdecl
cf_audited_transfer
clang::cf_audited_transfer
cf_consumed
clang::cf_consumed
cfi_canonical_jump_table
clang::cfi_canonical_jump_table
cf_returns_not_retained
clang::cf_returns_not_retained
cf_returns_retained
clang::cf_returns_retained
cf_unknown_transfer
clang::cf_unknown_transfer
clang::cpu_dispatch
clang::cpu_specific
__constant__
device
__device__
functions and variables
device_builtin_surface_type
__device_builtin_surface_type__
classes
device_builtin_texture_type
__device_builtin_texture_type__
__global__
host
__host__
launch_bounds
__launch_bounds__
Objective-C methods, functions, and function pointers
__shared__
noreturn
clang::callable_when
clang::callback
called_once
clang::called_once
capability
clang::capability
shared_capability
clang::shared_capability
structs, unions, classes, and typedefs
carries_dependency
parameters, Objective-C methods, and functions
gnu::cleanup
local variables
code_seg
functions and classes
cold
gnu::cold
gnu::common
gnu::const
__const
gnu::__const
require_constant_initialization
clang::require_constant_initialization
global variables
gnu::constructor
clang::consumable
consumable_auto_cast_state
clang::consumable_auto_cast_state
consumable_set_state_on_read
clang::consumable_set_state_on_read
convergent
clang::convergent
dllexport
gnu::dllexport
functions, variables, classes, and Objective-C interfaces
dllimport
gnu::dllimport
non-static data members and variables
gnu::deprecated
destructor
gnu::destructor
functions, Objective-C methods, and Objective-C properties
disable_tail_calls
clang::disable_tail_calls
empty_bases
enforce_tcb
clang::enforce_tcb
enforce_tcb_leaf
clang::enforce_tcb_leaf
clang::enum_extensibility
exclude_from_explicit_instantiation
clang::exclude_from_explicit_instantiation
variables, functions, and classes
ext_vector_type
external_source_symbol
clang::external_source_symbol
clang::fallthrough
gnu::fallthrough
gnu::fastcall
__fastcall
_fastcall
flag_enum
clang::flag_enum
flatten
gnu::flatten
gnu::format
Objective-C methods, blocks, and non-K&R-style functions
format_arg
gnu::format_arg
Objective-C methods and non-K&R-style functions
gnu_inline
gnu::gnu_inline
guarded_var
clang::guarded_var
gnu::hot
ibaction
clang::ibaction
Objective-C instance methods
iboutlet
clang::iboutlet
clang::iboutletcollection
ifunc
gnu::ifunc
init_priority
gnu::init_priority
intel_ocl_bicc
clang::intel_ocl_bicc
internal_linkage
clang::internal_linkage
lto_visibility_public
clang::lto_visibility_public
layout_version
gnu::leaf
lifetimebound
clang::lifetimebound
parameters and implicit object parameters
likely
clang::likely
loader_uninitialized
clang::loader_uninitialized
lockable
clang::loop
mig_server_routine
clang::mig_server_routine
functions, Objective-C methods, and blocks
ms_abi
gnu::ms_abi
__single_inheritance
__multiple_inheritance
__virtual_inheritance
__unspecified_inheritance
novtable
gnu::ms_struct
matrix_type
clang::matrix_type
may_alias
gnu::may_alias
gnu::micromips
minsize
clang::minsize
min_vector_width
clang::min_vector_width
gnu::mips16
long_call
gnu::long_call
gnu::far
short_call
gnu::short_call
near
gnu::near
gnu::mode
variables, enums, typedefs, and non-static data members
ns_consumed
clang::ns_consumed
ns_consumes_self
clang::ns_consumes_self
Objective-C methods
ns_returns_autoreleased
clang::ns_returns_autoreleased
ns_returns_not_retained
clang::ns_returns_not_retained
ns_returns_retained
clang::ns_returns_retained
naked
gnu::naked
neon_polyvector_type
clang::neon_polyvector_type
neon_vector_type
clang::neon_vector_type
noalias
no_builtin
clang::no_builtin
nocommon
gnu::nocommon
nodebug
gnu::nodebug
typedefs, functions, function pointers, Objective-C methods, and variables
noderef
clang::noderef
no_destroy
clang::no_destroy
noduplicate
clang::noduplicate
noescape
clang::noescape
gnu::noinline
no_instrument_function
gnu::no_instrument_function
nomerge
clang::nomerge
functions and statements
gnu::nomicromips
gnu::nomips16
gnu::noreturn
no_sanitize
clang::no_sanitize
functions, Objective-C methods, and global variables
no_address_safety_analysis
gnu::no_address_safety_analysis
no_sanitize_address
gnu::no_sanitize_address
no_sanitize_thread
gnu::no_sanitize_thread
no_sanitize_memory
clang::no_sanitize_memory
no_speculative_load_hardening
clang::no_speculative_load_hardening
no_split_stack
gnu::no_split_stack
no_stack_protector
clang::no_stack_protector
no_thread_safety_analysis
clang::no_thread_safety_analysis
gnu::nothrow
no_unique_address
non-bit-field non-static data members
gnu::nonnull
functions, methods, and parameters
not_tail_called
clang::not_tail_called
os_consumed
clang::os_consumed
os_consumes_this
clang::os_consumes_this
non-static member functions
os_returns_not_retained
clang::os_returns_not_retained
functions, Objective-C methods, Objective-C properties, and parameters
os_returns_retained
clang::os_returns_retained
os_returns_retained_on_non_zero
clang::os_returns_retained_on_non_zero
os_returns_retained_on_zero
clang::os_returns_retained_on_zero
objc_boxable
clang::objc_boxable
clang::objc_bridge
clang::objc_bridge_mutable
clang::objc_bridge_related
clang::objc_class_stub
objc_complete_definition
objc_designated_initializer
clang::objc_designated_initializer
objc_direct
clang::objc_direct
objc_direct_members
clang::objc_direct_members
Objective-C implementation declarations, Objective-C interfaces, and Objective-C containers
objc_exception
clang::objc_exception
objc_protocol_requires_explicit_implementation
clang::objc_protocol_requires_explicit_implementation
Objective-C protocols
objc_externally_retained
clang::objc_externally_retained
variables, functions, blocks, and Objective-C methods
clang::objc_gc
objc_independent_class
clang::objc_independent_class
__kindof
clang::objc_method_family
clang::NSObject
objc_nonlazy_class
clang::objc_nonlazy_class
Objective-C interfaces and Objective-C implementation declarations
objc_non_runtime_protocol
clang::objc_non_runtime_protocol
clang::objc_ownership
objc_precise_lifetime
clang::objc_precise_lifetime
objc_requires_property_definitions
clang::objc_requires_property_definitions
objc_requires_super
clang::objc_requires_super
objc_returns_inner_pointer
clang::objc_returns_inner_pointer
Objective-C methods and Objective-C properties
objc_root_class
clang::objc_root_class
objc_runtime_name
clang::objc_runtime_name
Objective-C interfaces and Objective-C protocols
objc_runtime_visible
clang::objc_runtime_visible
objc_subclassing_restricted
clang::objc_subclassing_restricted
parameters and typedefs
__constant
opencl_constant
clang::opencl_constant
__generic
opencl_generic
clang::opencl_generic
__global
opencl_global
clang::opencl_global
opencl_global_device
clang::opencl_global_device
opencl_global_host
clang::opencl_global_host
__kernel
__local
opencl_local
clang::opencl_local
nosvm
__private
opencl_private
clang::opencl_private
opencl_unroll_hint
optnone
clang::optnone
overloadable
clang::overloadable
gsl::Owner
clang::ownership_holds
clang::ownership_returns
clang::ownership_takes
gnu::packed
clang::param_typestate
pascal
clang::pascal
__pascal
_pascal
pass_object_size
clang::pass_object_size
pass_dynamic_object_size
clang::pass_dynamic_object_size
patchable_function_entry
gnu::patchable_function_entry
gnu::pcs
gsl::Pointer
__ptrauth
__ptrauth_restricted_intptr
ptrauth_struct
clang::ptrauth_struct
clang::preferred_name
class templates
preserve_all
clang::preserve_all
preserve_most
clang::preserve_most
pt_guarded_var
clang::pt_guarded_var
__ptr32
__ptr64
pure
gnu::pure
gnu::regcall
__regcall
regparm
gnu::regparm
reinitializes
clang::reinitializes
non-static non-const member functions
clang::release_capability
clang::release_shared_capability
clang::release_generic_capability
clang::unlock_function
release_handle
clang::release_handle
clang::requires_capability
clang::exclusive_locks_required
clang::requires_shared_capability
clang::shared_locks_required
malloc
gnu::malloc
clang::return_typestate
functions and parameters
returns_nonnull
gnu::returns_nonnull
returns_twice
gnu::returns_twice
__sptr
sycl_kernel
clang::sycl_kernel
function templates
scoped_lockable
clang::scoped_lockable
section
gnu::section
functions, global variables, Objective-C methods, and Objective-C properties
selectany
gnu::selectany
sentinel
gnu::sentinel
clang::set_typestate
speculative_load_hardening
clang::speculative_load_hardening
gnu::stdcall
__stdcall
_stdcall
gsl::suppress
clang::swift_async
swiftasynccall
clang::swiftasynccall
swift_async_context
clang::swift_async_context
clang::swift_async_error
swift_async_name
swift_attr
swift_bridge
tag types, typedefs, Objective-C interfaces, and Objective-C protocols
swift_bridged_typedef
swiftcall
clang::swiftcall
swift_context
clang::swift_context
swift_error_result
clang::swift_error_result
swift_indirect_result
clang::swift_indirect_result
swift_name
swift_objc_members
swift_private
symbol_metadata_footnote
clang::symbol_metadata_footnote
functions, Objective-C methods, Objective-C interfaces, and Objective-C properties
sysv_abi
gnu::sysv_abi
tls_model
gnu::tls_model
thread-local variables
gnu::target
clang::test_typestate
thiscall
gnu::thiscall
__thiscall
_thiscall
transparent_union
gnu::transparent_union
trivial_abi
clang::trivial_abi
clang::try_acquire_capability
clang::try_acquire_shared_capability
_Nullable_result
clang::type_tag_for_datatype
clang::type_visibility
clang::typed_memory_operation
__uptr
clang::unavailable
clang::uninitialized
unlikely
clang::unlikely
gnu::unused
variables, non-static data members, types, enums, enumerators, labels, non-static data members, Objective-C methods, functions, and function pointers
use_handle
clang::use_handle
used
gnu::used
variables with non-local storage, functions, and Objective-C methods
using_if_exists
clang::using_if_exists
named declarations, types, and value declarations
structs, unions, classes, and enums
clang::ptrauth_vtable_pointer
vecreturn
clang::vecreturn
clang::vectorcall
__vectorcall
_vectorcall
vector_size
gnu::vector_size
gnu::visibility
warn_unused
gnu::warn_unused
clang::warn_unused_result
gnu::warn_unused_result
Objective-C methods, enums, structs, unions, classes, functions, and function pointers
gnu::weak
weak_import
clang::weak_import
weakref
gnu::weakref
variables and functions
export_name
clang::export_name
import_module
clang::import_module
import_name
clang::import_name
force_align_arg_pointer
gnu::force_align_arg_pointer
xray_always_instrument
clang::xray_always_instrument
xray_never_instrument
clang::xray_never_instrument
xray_log_args
clang::xray_log_args
clang::xnu_usage_semantics
auto:
:auto
__va_list_tag
__int128_t
__uint128_t
__NSConstantString
type_info
sampler_t
event_t
clk_event_t
queue_t
reserve_id_t
atomic_int
atomic_uint
atomic_long
atomic_ulong
atomic_float
atomic_double
atomic_flag
atomic_intptr_t
atomic_uintptr_t
atomic_size_t
atomic_ptrdiff_t
cl_khr_int64_base_atomics cl_khr_int64_extended_atomics
intel_sub_group_avc_mce_payload_t
intel_sub_group_avc_ime_payload_t
intel_sub_group_avc_ref_payload_t
intel_sub_group_avc_sic_payload_t
intel_sub_group_avc_mce_result_t
intel_sub_group_avc_ime_result_t
intel_sub_group_avc_ref_result_t
intel_sub_group_avc_sic_result_t
intel_sub_group_avc_ime_result_single_reference_streamout_t
intel_sub_group_avc_ime_result_dual_reference_streamout_t
intel_sub_group_avc_ime_single_reference_streamin_t
intel_sub_group_avc_ime_dual_reference_streamin_t
__SVInt8_t
__SVInt16_t
__SVInt32_t
__SVInt64_t
__SVUint8_t
__SVUint16_t
__SVUint32_t
__SVUint64_t
__SVFloat16_t
__SVFloat32_t
__SVFloat64_t
__SVBFloat16_t
__clang_svint8x2_t
__clang_svint16x2_t
__clang_svint32x2_t
__clang_svint64x2_t
__clang_svuint8x2_t
__clang_svuint16x2_t
__clang_svuint32x2_t
__clang_svuint64x2_t
__clang_svfloat16x2_t
__clang_svfloat32x2_t
__clang_svfloat64x2_t
__clang_svbfloat16x2_t
__clang_svint8x3_t
__clang_svint16x3_t
__clang_svint32x3_t
__clang_svint64x3_t
__clang_svuint8x3_t
__clang_svuint16x3_t
__clang_svuint32x3_t
__clang_svuint64x3_t
__clang_svfloat16x3_t
__clang_svfloat32x3_t
__clang_svfloat64x3_t
__clang_svbfloat16x3_t
__clang_svint8x4_t
__clang_svint16x4_t
__clang_svint32x4_t
__clang_svint64x4_t
__clang_svuint8x4_t
__clang_svuint16x4_t
__clang_svuint32x4_t
__clang_svuint64x4_t
__clang_svfloat16x4_t
__clang_svfloat32x4_t
__clang_svfloat64x4_t
__clang_svbfloat16x4_t
__SVBool_t
paired-vector-memops
__vector_quad
__vector_pair
__builtin_ms_va_list
__builtin_va_list
*** Semantic Analysis Stats:
 SFINAE diagnostics trapped.
PerformPendingInstantiations
'weak'
super
bool
<scratch space>
Source
array
deque
forward_list
list
multiset
priority_queue
queue
unordered_set
unordered_map
unordered_multiset
unordered_multimap
const_iterator
reverse_iterator
const_reverse_iterator
basic_regex
unique_ptr
basic_string_view
reference_wrapper
regex_iterator
stack empty
vtordisp
.CRT$XCU
<API Notes>
API_AVAILABLE
API_AVAILABLE(
z/OS
if (
__builtin_available
, *)) {
vector element
matrix element
property expression
container subscripting expression
structure pointer
'int (*)(const char *, ...)'
__builtin_return_address
__builtin_frame_address
extdiv
bpermd
W256SLLiW256C*
vW256SLLiW256C*
vW256*VV
vv*W256*
vW512*VVVV
vv*W512*
vW512*
vW512*VV
vW512*W256V
vW512*VVi15i15i255
vW512*VVi15i15i15
vW512*VVi15i15i3
vW512*VVi15i15
vW512*W256Vi15i3
_Float16
spsel
daifset
daifclr
zcmn_err
c_str
std::abs
sizeof(
) - 
strlen(
) - 1
'super'
taggedRelease
'kernel_enqueue_flags_t' (i.e. uint)
ndrange_t
'ndrange_t'
localizedStringForKey
table
%02x
%04x
%08x
unichar
c_str()
cstdlib
cmath
'std::strong_ordering::equal'
'std::strong_ordering::less'
'std::strong_ordering::greater'
, ...
 override
else if
new[]
delete[]
co_await
statements
ifdef
macro
elif
header
args
include_next
defined
ApplicationExtension
operatorco_await
typename
template<...> class
(...)
(void)
out 
bycopy 
byref 
oneway 
nonnull 
nullable 
null_unspecified 
, nil
, NULL
, (void*)0
declarations
using namespace
string-literal
qualifier
using typename
init-statement
init-expression
inc-expression
return true
return false
return nullptr
label
__bridge
__bridge_transfer
Objective-C type
CF type
std::type_info
typeid
expression-or-type
expressions
sizeof...
parameter-pack
_Alignof
static_assert
constexpr
thread_local
explicit
friend
mutable
__PRETTY_FUNCTION__
__func__
!#!NAME_GOES_HERE!#!
__unaligned
signed
_Complex
_Imaginary
_Bool
__auto_type
@end
synthesize
@property
@required
@optional
@implementation
compatibility_alias
@import
@protected
@public
@package
@try
@catch
@finally
@throw
char[]
const char[]
type-name
Protocol *
protocol-name
NSString *
NSArray *
objects, ...
NSDictionary *
object, ...
struct <anonymous>
__interface <anonymous>
class <anonymous>
union <anonymous>
enum <anonymous>
countOf
objectIn
AtIndex
AtIndexes
NSIndexSet *
indexes
object-type
range:
NSRange
inRange
insertObject
insertObject:
atIndexes
atIndexes:
removeObjectFrom
replaceObjectIn
withObject
withObject:
replace
enumeratorOf
NSEnumerator *
NSSet *
intersect
keyPathsForValuesAffecting
NSSet<NSString *> *
automaticallyNotifiesObserversOf
Headers
__promise
initial_suspend
final_suspend
co_await
await_transform
co_yield
yield_value
co_return
return_value
return_void
get_return_object_on_allocation_failure
unhandled_exception
get_return_object
__coro_gro
coroutine_traits
std::experimental::coroutine_traits
promise_type
await_ready
await_suspend
await_resume
from_address
coroutine_handle
std::experimental::coroutine_handle
__hipPushCallConfiguration
hipConfigureCall
__cudaPushCallConfiguration
cudaConfigureCall
'ns_returns_retained'
global or constant
printf
constexpr 
  int 
ntohl
htonl
is_path_xcrun_shim
qsort
os_variant_has_internal_diagnostic
os_variant_has_internal_diagnostics
_NSGetExecutablePath
fdatasync
H5T_patch_vlen_file
CGSSetDebugOptions
CGSGetDebugOptions
CGSCreateShadowCacheDebugInfo
thread_stack_pcs
inaddr6_any
inaddr6_loopback
AXAuditIsQueue
scanf
align_val_t
stdio.h
setjmp.h
ucontext.h
[[clang::require_constant_initialization]]
__attribute__((require_constant_initialization))
branch-protection
'minsize'
aapcs-vfp
'ns_returns_retained'
'dllimport'
pointer
'init_priority' attribute is not yet supported on AIX
'interrupt'
'signal'
'export_name'
<no message provided>
a CFString
an NSString
a string type
__CFString
NSAttributedString
NSMutableString
string type
functions, classes, or enumerations
__declspec(thread)
mutex
zero_argument
nonzero_argument
tmo_malloc
tmo_calloc
tmo_realloc
tmo_aligned_alloc
tmo_posix_memalign
 sealed
const &
 const &
_Noreturn
__restrict
experimental
initializer_list
using 
auto &
constexpr auto 
'const char *'
tuple_size
__builtin_objc_memmove_collectable
__builtin_memcpy
category
__covariant
__contravariant
forwardInvocation
NSProxy
macOS 10.11
iOS 9
throw()
__attribute__((nothrow))
NULL
(void*) 0
object_getClass
object_getClass(
.c_str()
__builtin_trap
(void *)0
static_cast<void>(
(void)(
object_setClass
object_setClass(
(vector of 
' values)
performSelector
1 << 
1LL << 
0x2 ^ 
0xA ^ 
__real
__imag
__builtin_shufflevector
'size_t'
default new
default delete
__builtin_operator_delete
__builtin_operator_new
expr-type
even
stringWithUTF8String
valueWithBytes
objCType
integral
CFBridgingRelease
CFBridgingRelease 
__bridge_transfer 
CFBridgingRetain
__bridge 
CFBridgingRetain 
__bridge_retained 
Filter Mode
Addressing Mode
static_cast<
'this'
__invoke
lookup results for 
[...]
__make_integer_seq
__type_pack_element
cl_khr_mipmap_image_writes cl_khr_3d_image_writes
objc_super
export 
retain (or strong)
@synthesize 
nonatomic, 
__attribute__((objc_method_family(none)))
requires
.global_tid.
.bound_tid.
.part_id.
.privates.
.copy_fn.
.task_t.
.lb.
.ub.
.st.
.liter.
.reductions.
.previous.lb.
.previous.ub.
scan
ordered
'map' or 'use_device_ptr'
'map', 'use_device_ptr', or 'use_device_addr'
'map'
schedule
.firstprivate.temp
.lastprivate.src
.lastprivate.dst
.linear.start
.linear.step
.copyin.src
.copyin.dst
threadprivate or private in the enclosing context
.copyprivate.src
.copyprivate.dst
'source' or 'sink'
depend modifier(iterator) or 
omp_in
omp_out
omp_priv
omp_orig
omp_event_handle_t
dist_schedule
'scalar', 'aggregate', 'pointer'
'alloc', 'from', 'to', 'tofrom', 'firstprivate', 'none', 'default'
'alloc', 'from', 'to', 'tofrom', 'firstprivate', 'none', 'default', 'present'
.devptr.temp
omp_allocator_handle_t
 or 
$ompvariant
.omp.lb
.omp.ub
.omp.is_last
.omp.stride
.omp.comb.lb
.omp.comb.ub
.omp.iv
.capture_expr.
.reduction.lhs
.task_red.
omp_depend_t
omp_alloctrait_t
'enable_if'
break
continue
literal
@try
@throw
'__try'
'try'
__context
default captured statement
Objective-C @finally statement
OpenMP region
__MSASMLABEL_.${:uid}__
[with 
template<> 
instantiating class definition
instantiating enum definition
instantiating default member init
cannot instantiate %0 yet
instantiating function definition
instantiating variable initializer
instantiating variable definition
matrix row
matrix column
_Nonnull
_Nullable
_Nullable_result
_Null_unspecified
NSError
__bf16
__kindof 
autoreleasing
'neon' or 'mve'
'sve'
isa-pointer
authenticates-null-values
'__ptr32'
'__ptr64'
'__sptr'
'__uptr'
'static'
type qualifier
'address_space'
call_once
libcxx03 std::call_once implementation, skipping.
unknown std::call_once implementation, skipping.
__state_
_M_once
cancel
shouldCall
catch (
__except (
for (
goto *
Allocation failed
unconsumed
consumed
raise
NSException
#null
#undefined
#ptr
#vref
#lit
new 
cast[
extendNum
truncNum
toFloat
toInt
objToPtr
CFG {
 BB_
let _x
phi(
goto 
BB_null
branch (
) then 
 else 
New replacement: 
Existing replacement: 
Failed to apply a replacement.
The new replacement's file path is different from the file path of existing replacements
The new replacement overlaps with an existing replacement.
The new insertion has the same insert location as an existing replacement.
  <#code#>
<#code#>
break;
typeid(
void()
<out of lifetime>
<uninitialized>
(char*)
{*new 
 + 1
*** AST Context Stats:
 types total.
Adjusted
 types, 
 each 
 bytes)
Decayed
ConstantArray
DependentSizedArray
IncompleteArray
VariableArray
Atomic
Attributed
BlockPointer
Complex
Decltype
Auto
DeducedTemplateSpecialization
DependentAddressSpace
DependentExtInt
DependentName
DependentSizedExtVector
DependentTemplateSpecialization
DependentVector
DynamicCountPointer
DynamicRangePointer
Elaborated
ExtInt
FunctionNoProto
FunctionProto
InjectedClassName
MacroQualified
ConstantMatrix
DependentSizedMatrix
MemberPointer
ObjCObjectPointer
ObjCObject
ObjCInterface
ObjCTypeParam
PackExpansion
Pipe
LValueReference
RValueReference
SubstTemplateTypeParmPack
SubstTemplateTypeParm
Record
TemplateSpecialization
TemplateTypeParm
TypeOfExpr
TypeOf
Typedef
UnaryTransform
UnresolvedUsing
Vector
ExtVector
Total bytes = 
 implicit default constructors created
 implicit copy constructors created
 implicit move constructors created
 implicit copy assignment operators created
 implicit move assignment operators created
 implicit destructors created
__int128_t
__uint128_t
_GUID
__NSConstantString_tag
flags
_cfisa
_swift_rc
_ptr
__block_descriptor
reserved
Size
__block_descriptor_withcopydispose
CopyFuncPtr
DestroyFuncPtr
instancetype
{objc_object=}
{objc_class=}
"_vptr$
Class
Protocol
sse2
a prior #pragma section
__make_integer_seq
__type_pack_element
<objc_object>
DF16_
<anonymous_record>
cannot yet @encode type %0
__stack
__gr_top
__vr_top
__gr_offs
__vr_offs
__ap
__gpr
__fpr
__overflow_arg_area
__reg_save_area
__builtin_ms_va_list
 address space
address space
unqualified
the global namespace
the global scope
block literal
lambda expression
function 
' (aka '
' (vector of 
(no argument)
(default) 
[(default) 
(default) template 
[(default) template 
[template 
 aka 
(no qualifiers) 
(no qualifiers)
 * ...]
inherited from
previous
 hidden
inner
array_filler
QualType
CXXCtorInitializer
OMPAllocateDecl
OMPThreadPrivateDecl
GCCAsmStmt
MSAsmStmt
CXXCatchStmt
CXXForRangeStmt
CXXTryStmt
CapturedStmt
CompoundStmt
CoreturnStmt
CoroutineBodyStmt
DeclStmt
ForStmt
GotoStmt
IndirectGotoStmt
MSDependentExistsStmt
NullStmt
OMPAtomicDirective
OMPBarrierDirective
OMPCancelDirective
OMPCancellationPointDirective
OMPCriticalDirective
OMPDepobjDirective
OMPFlushDirective
OMPDistributeDirective
OMPDistributeParallelForDirective
OMPDistributeParallelForSimdDirective
OMPDistributeSimdDirective
OMPForDirective
OMPForSimdDirective
OMPMasterTaskLoopDirective
OMPMasterTaskLoopSimdDirective
OMPParallelForDirective
OMPParallelForSimdDirective
OMPParallelMasterTaskLoopDirective
OMPParallelMasterTaskLoopSimdDirective
OMPSimdDirective
OMPTargetParallelForSimdDirective
OMPTargetSimdDirective
OMPTargetTeamsDistributeDirective
OMPTargetTeamsDistributeParallelForDirective
OMPTargetTeamsDistributeParallelForSimdDirective
OMPTargetTeamsDistributeSimdDirective
OMPTaskLoopDirective
OMPTaskLoopSimdDirective
OMPTeamsDistributeDirective
OMPTeamsDistributeParallelForDirective
OMPTeamsDistributeParallelForSimdDirective
OMPTeamsDistributeSimdDirective
OMPMasterDirective
OMPOrderedDirective
OMPParallelDirective
OMPParallelMasterDirective
OMPParallelSectionsDirective
OMPScanDirective
OMPSectionDirective
OMPSectionsDirective
OMPSingleDirective
OMPTargetDataDirective
OMPTargetDirective
OMPTargetEnterDataDirective
OMPTargetExitDataDirective
OMPTargetParallelDirective
OMPTargetParallelForDirective
OMPTargetTeamsDirective
OMPTargetUpdateDirective
OMPTaskDirective
OMPTaskgroupDirective
OMPTaskwaitDirective
OMPTaskyieldDirective
OMPTeamsDirective
ObjCAtCatchStmt
ObjCAtFinallyStmt
ObjCAtSynchronizedStmt
ObjCAtThrowStmt
ObjCAtTryStmt
ObjCAutoreleasePoolStmt
ObjCForCollectionStmt
SEHExceptStmt
SEHFinallyStmt
SEHLeaveStmt
SEHTryStmt
CaseStmt
DefaultStmt
AttributedStmt
BinaryConditionalOperator
ConditionalOperator
AddrLabelExpr
ArrayInitIndexExpr
ArrayInitLoopExpr
ArraySubscriptExpr
ArrayTypeTraitExpr
AsTypeExpr
AtomicExpr
CompoundAssignOperator
BlockExpr
BoundsCheckExpr
CXXBindTemporaryExpr
CXXBoolLiteralExpr
CXXConstructExpr
CXXTemporaryObjectExpr
CXXDefaultArgExpr
CXXDefaultInitExpr
CXXDeleteExpr
CXXDependentScopeMemberExpr
CXXFoldExpr
CXXInheritedCtorInitExpr
CXXNewExpr
CXXNoexceptExpr
CXXNullPtrLiteralExpr
CXXPseudoDestructorExpr
CXXRewrittenBinaryOperator
CXXScalarValueInitExpr
CXXStdInitializerListExpr
CXXThisExpr
CXXThrowExpr
CXXTypeidExpr
CXXUnresolvedConstructExpr
CXXUuidofExpr
CallExpr
CUDAKernelCallExpr
CXXMemberCallExpr
CXXOperatorCallExpr
UserDefinedLiteral
BuiltinBitCastExpr
CStyleCastExpr
CXXFunctionalCastExpr
CXXAddrspaceCastExpr
CXXConstCastExpr
CXXDynamicCastExpr
CXXReinterpretCastExpr
CXXStaticCastExpr
ObjCBridgedCastExpr
ImplicitCastExpr
CharacterLiteral
ChooseExpr
CompoundLiteralExpr
ConceptSpecializationExpr
ConvertVectorExpr
CoawaitExpr
CoyieldExpr
DeclRefExpr
DependentCoawaitExpr
DependentScopeDeclRefExpr
DesignatedInitExpr
DesignatedInitUpdateExpr
ExpressionTraitExpr
ExtVectorElementExpr
FixedPointLiteral
FloatingLiteral
ForgePtrExpr
ConstantExpr
ExprWithCleanups
FunctionParmPackExpr
GNUNullExpr
GenericSelectionExpr
GetBoundExpr
ImaginaryLiteral
ImplicitValueInitExpr
InitListExpr
LambdaExpr
MSPropertyRefExpr
MSPropertySubscriptExpr
MaterializeTemporaryExpr
MatrixSubscriptExpr
MemberExpr
NoInitExpr
OMPArraySectionExpr
OMPArrayShapingExpr
OMPIteratorExpr
ObjCAvailabilityCheckExpr
ObjCBoolLiteralExpr
ObjCEncodeExpr
ObjCIndirectCopyRestoreExpr
ObjCIsaExpr
ObjCIvarRefExpr
ObjCMessageExpr
ObjCArrayLiteral
ObjCBoxedExpr
ObjCDictionaryLiteral
ObjCPropertyRefExpr
ObjCProtocolExpr
ObjCSelectorExpr
ObjCSubscriptRefExpr
OffsetOfExpr
OpaqueValueExpr
UnresolvedLookupExpr
UnresolvedMemberExpr
PackExpansionExpr
ParenExpr
ParenListExpr
PredefinedExpr
PseudoObjectExpr
RecoveryExpr
RequiresExpr
ShuffleVectorExpr
SizeOfPackExpr
SourceLocExpr
StmtExpr
SubstNonTypeTemplateParmExpr
SubstNonTypeTemplateParmPackExpr
TypeTraitExpr
TypoExpr
UnaryExprOrTypeTraitExpr
VAArgExpr
LabelStmt
#pragma nounroll
#pragma unroll
#pragma nounroll_and_jam
#pragma unroll_and_jam
 simdlen(
 uniform
 aligned(
 linear(
 device_type(
 match(
 __attribute__((aarch64_vector_pcs))
 [[clang::aarch64_vector_pcs]]
 __attribute__((amdgpu_flat_work_group_size(
 [[clang::amdgpu_flat_work_group_size(
 __attribute__((amdgpu_num_sgpr(
 [[clang::amdgpu_num_sgpr(
 __attribute__((amdgpu_num_vgpr(
 [[clang::amdgpu_num_vgpr(
 __attribute__((amdgpu_waves_per_eu(
 [[clang::amdgpu_waves_per_eu(
ABORT
UNDEF
 __attribute__((interrupt("
")))
 [[gnu::interrupt("
")]]
 __attribute__((interrupt))
 [[gnu::interrupt]]
 __attribute__((signal))
 [[gnu::signal]]
 __attribute__((abi_tag(
 [[gnu::abi_tag(
 __attribute__((acquire_capability(
 [[clang::acquire_capability(
 __attribute__((acquire_shared_capability(
 [[clang::acquire_shared_capability(
 __attribute__((exclusive_lock_function(
 __attribute__((shared_lock_function(
acquire_capability
acquire_shared_capability
exclusive_lock_function
shared_lock_function
 __attribute__((acquire_handle("
 [[clang::acquire_handle("
 __attribute__((acquired_after(
 __attribute__((acquired_before(
 __attribute__((address_space(
 [[clang::address_space(
 __attribute__((alias("
 [[gnu::alias("
(No spelling)
 __attribute__((align_value(
 __attribute__((aligned
 [[gnu::aligned
 __declspec(align
 alignas
 _Alignas
aligned
align
alignas
_Alignas
 __attribute__((alloc_align(
 [[gnu::alloc_align(
 __attribute__((alloc_size
 [[gnu::alloc_size
 __attribute__((always_destroy))
 [[clang::always_destroy]]
 __attribute__((always_inline))
 [[gnu::always_inline]]
 __forceinline
always_inline
__forceinline
 __attribute__((analyzer_noreturn))
 __attribute__((analyzer_suppress(
 [[clang::analyzer_suppress(
 __attribute__((annotate("
 [[clang::annotate("
 __attribute__((no_caller_saved_registers))
 [[gnu::no_caller_saved_registers]]
 __attribute__((nocf_check))
 [[gnu::nocf_check]]
 __attribute__((objc_arc_weak_reference_unavailable))
 [[clang::objc_arc_weak_reference_unavailable]]
 __attribute__((argument_with_type_tag(
 [[clang::argument_with_type_tag(
 __attribute__((pointer_with_type_tag(
 [[clang::pointer_with_type_tag(
argument_with_type_tag
pointer_with_type_tag
 __attribute__((__clang_arm_builtin_alias(
 [[clang::__clang_arm_builtin_alias(
 __attribute__((__clang_arm_mve_strict_polymorphism))
 [[clang::__clang_arm_mve_strict_polymorphism]]
 __attribute__((artificial))
 [[gnu::artificial]]
 asm("
 __asm__("
 __attribute__((assert_capability(
 [[clang::assert_capability(
 __attribute__((assert_shared_capability(
 [[clang::assert_shared_capability(
assert_capability
assert_shared_capability
 __attribute__((assert_exclusive_lock(
 __attribute__((assert_shared_lock(
 __attribute__((assume_aligned(
 [[gnu::assume_aligned(
 __attribute__((assume("
 [[clang::assume("
 __attribute__((availability(
, strict
, introduced=
, deprecated=
, obsoleted=
 [[clang::availability(
 __attribute__((preserve_access_index))
 [[clang::preserve_access_index]]
byref
 __attribute__((blocks("
 [[clang::blocks("
 _Noreturn
 __attribute__((cdecl))
 [[gnu::cdecl]]
 __cdecl
 _cdecl
 __attribute__((cf_audited_transfer))
 [[clang::cf_audited_transfer]]
 __attribute__((cf_consumed))
 [[clang::cf_consumed]]
nocf
 __declspec(guard("
 __attribute__((cfi_canonical_jump_table))
 [[clang::cfi_canonical_jump_table]]
 __attribute__((cf_returns_not_retained))
 [[clang::cf_returns_not_retained]]
 __attribute__((cf_returns_retained))
 [[clang::cf_returns_retained]]
 __attribute__((cf_unknown_transfer))
 [[clang::cf_unknown_transfer]]
 __attribute__((cpu_dispatch(
 [[clang::cpu_dispatch(
 __declspec(cpu_dispatch(
 __attribute__((cpu_specific(
 [[clang::cpu_specific(
 __declspec(cpu_specific(
 __attribute__((constant))
 __declspec(__constant__)
constant
 __attribute__((device))
 __declspec(__device__)
 __attribute__((device_builtin_surface_type))
 __declspec(__device_builtin_surface_type__)
 __attribute__((device_builtin_texture_type))
 __declspec(__device_builtin_texture_type__)
 __attribute__((global))
 __declspec(__global__)
global
 __attribute__((host))
 __declspec(__host__)
host
 __attribute__((launch_bounds(
 __declspec(__launch_bounds__(
 __attribute__((shared))
 __declspec(__shared__)
 [[noreturn]]
unknown
consumed
unconsumed
 __attribute__((callable_when(
 [[clang::callable_when(
 __attribute__((callback(
 [[clang::callback(
 __attribute__((called_once))
 [[clang::called_once]]
 __attribute__((capability("
 [[clang::capability("
 __attribute__((shared_capability("
 [[clang::shared_capability("
capability
shared_capability
 __attribute__((carries_dependency))
 [[carries_dependency]]
 __attribute__((cleanup(
 [[gnu::cleanup(
 __attribute__((cmse_nonsecure_call))
 __attribute__((cmse_nonsecure_entry))
 __declspec(code_seg("
 __attribute__((cold))
 [[gnu::cold]]
 __attribute__((common))
 [[gnu::common]]
 __attribute__((const))
 [[gnu::const]]
 __attribute__((__const))
 [[gnu::__const]]
 constinit
 __attribute__((require_constant_initialization))
 [[clang::require_constant_initialization]]
constinit
require_constant_initialization
 __attribute__((constructor(
 [[gnu::constructor(
 __attribute__((consumable("
 [[clang::consumable("
 __attribute__((consumable_auto_cast_state))
 [[clang::consumable_auto_cast_state]]
 __attribute__((consumable_set_state_on_read))
 [[clang::consumable_set_state_on_read]]
 __attribute__((convergent))
 [[clang::convergent]]
 __declspec(dllexport)
 __attribute__((dllexport))
 [[gnu::dllexport]]
 __declspec(dllimport)
 __attribute__((dllimport))
 [[gnu::dllimport]]
 __attribute__((deprecated("
 [[gnu::deprecated("
 __declspec(deprecated("
 [[deprecated("
 __attribute__((destructor(
 [[gnu::destructor(
error
warning
 __attribute__((diagnose_if(
", "
 __attribute__((disable_tail_calls))
 [[clang::disable_tail_calls]]
 __declspec(empty_bases)
 __attribute__((enable_if(
 __attribute__((enforce_tcb("
 [[clang::enforce_tcb("
 __attribute__((enforce_tcb_leaf("
 [[clang::enforce_tcb_leaf("
closed
open
 __attribute__((enum_extensibility("
 [[clang::enum_extensibility("
 __attribute__((exclude_from_explicit_instantiation))
 [[clang::exclude_from_explicit_instantiation]]
 __attribute__((exclusive_trylock_function(
 __attribute__((external_source_symbol("
 [[clang::external_source_symbol("
 [[fallthrough]]
 [[clang::fallthrough]]
 __attribute__((fallthrough))
 [[gnu::fallthrough]]
fallthrough
 __attribute__((fastcall))
 [[gnu::fastcall]]
 __fastcall
 _fastcall
final
sealed
 __attribute__((flag_enum))
 [[clang::flag_enum]]
 __attribute__((flatten))
 [[gnu::flatten]]
 __attribute__((format(
 [[gnu::format(
 __attribute__((format_arg(
 [[gnu::format_arg(
 __attribute__((gnu_inline))
 [[gnu::gnu_inline]]
 __attribute__((guarded_by(
 __attribute__((guarded_var))
 [[clang::guarded_var]]
 __attribute__((hot))
 [[gnu::hot]]
 __attribute__((ibaction))
 [[clang::ibaction]]
 __attribute__((iboutlet))
 [[clang::iboutlet]]
 __attribute__((iboutletcollection
 [[clang::iboutletcollection
 __attribute__((ifunc("
 [[gnu::ifunc("
 __attribute__((init_priority(
 [[gnu::init_priority(
#pragma init_seg
init_seg
 __attribute__((intel_ocl_bicc))
 [[clang::intel_ocl_bicc]]
 __attribute__((internal_linkage))
 [[clang::internal_linkage]]
 __attribute__((lto_visibility_public))
 [[clang::lto_visibility_public]]
 __declspec(layout_version(
 __attribute__((leaf))
 [[gnu::leaf]]
 __attribute__((lifetimebound))
 [[clang::lifetimebound]]
 [[likely]]
 [[clang::likely]]
 __attribute__((loader_uninitialized))
 [[clang::loader_uninitialized]]
 __attribute__((lock_returned(
 __attribute__((locks_excluded(
unroll
unroll_and_jam
unroll_and_jam_count
#pragma clang loop
loop
nounroll
nounroll_and_jam
 __attribute__((mig_server_routine))
 [[clang::mig_server_routine]]
 __attribute__((ms_abi))
 [[gnu::ms_abi]]
 __declspec(allocator)
 __single_inheritance
 __multiple_inheritance
 __virtual_inheritance
 __unspecified_inheritance
__single_inheritance
__multiple_inheritance
__virtual_inheritance
__unspecified_inheritance
 __declspec(novtable)
 __attribute__((interrupt(
 [[gnu::interrupt(
 __attribute__((ms_struct))
 [[gnu::ms_struct]]
 __attribute__((may_alias))
 [[gnu::may_alias]]
 __attribute__((micromips))
 [[gnu::micromips]]
 __attribute__((minsize))
 [[clang::minsize]]
 __attribute__((min_vector_width(
 [[clang::min_vector_width(
 __attribute__((mips16))
 [[gnu::mips16]]
vector=sw0
vector=sw1
vector=hw0
vector=hw1
vector=hw2
vector=hw3
vector=hw4
vector=hw5
 __attribute__((long_call))
 [[gnu::long_call]]
 __attribute__((far))
 [[gnu::far]]
long_call
 __attribute__((short_call))
 [[gnu::short_call]]
 __attribute__((near))
 [[gnu::near]]
short_call
near
 __attribute__((mode(
 [[gnu::mode(
 __attribute__((ns_consumed))
 [[clang::ns_consumed]]
 __attribute__((ns_consumes_self))
 [[clang::ns_consumes_self]]
 __attribute__((ns_error_domain(
 __attribute__((ns_returns_autoreleased))
 [[clang::ns_returns_autoreleased]]
 __attribute__((ns_returns_not_retained))
 [[clang::ns_returns_not_retained]]
 __attribute__((ns_returns_retained))
 [[clang::ns_returns_retained]]
 __attribute__((naked))
 [[gnu::naked]]
 __declspec(naked)
 __declspec(noalias)
 __attribute__((no_builtin(
 [[clang::no_builtin(
no_builtin
 __attribute__((nocommon))
 [[gnu::nocommon]]
 __attribute__((nodebug))
 [[gnu::nodebug]]
 __attribute__((noderef))
 [[clang::noderef]]
 __attribute__((no_destroy))
 [[clang::no_destroy]]
 __attribute__((noduplicate))
 [[clang::noduplicate]]
 __attribute__((noescape))
 [[clang::noescape]]
 __attribute__((noinline))
 [[gnu::noinline]]
 __declspec(noinline)
 __attribute__((no_instrument_function))
 [[gnu::no_instrument_function]]
 __attribute__((nomerge))
 [[clang::nomerge]]
nomerge
 __attribute__((nomicromips))
 [[gnu::nomicromips]]
 __attribute__((nomips16))
 [[gnu::nomips16]]
 __attribute__((noreturn))
 [[gnu::noreturn]]
 __declspec(noreturn)
 __attribute__((no_sanitize(
 [[clang::no_sanitize(
 __attribute__((no_speculative_load_hardening))
 [[clang::no_speculative_load_hardening]]
 __attribute__((no_split_stack))
 [[gnu::no_split_stack]]
 __attribute__((no_stack_protector))
 [[clang::no_stack_protector]]
 __attribute__((no_thread_safety_analysis))
 [[clang::no_thread_safety_analysis]]
 __attribute__((nothrow))
 [[gnu::nothrow]]
 __declspec(nothrow)
 [[no_unique_address]]
 __attribute__((nonnull(
 [[gnu::nonnull(
 __attribute__((not_tail_called))
 [[clang::not_tail_called]]
omp_null_allocator
omp_default_mem_alloc
omp_large_cap_mem_alloc
omp_const_mem_alloc
omp_high_bw_mem_alloc
omp_low_lat_mem_alloc
omp_cgroup_mem_alloc
omp_pteam_mem_alloc
omp_thread_mem_alloc
inbranch
notinbranch
#pragma omp declare simd
link
nohost
#pragma omp declare target
#pragma omp declare variant
declare variant
 __attribute__((os_consumed))
 [[clang::os_consumed]]
 __attribute__((os_consumes_this))
 [[clang::os_consumes_this]]
 __attribute__((os_returns_not_retained))
 [[clang::os_returns_not_retained]]
 __attribute__((os_returns_retained))
 [[clang::os_returns_retained]]
 __attribute__((os_returns_retained_on_non_zero))
 [[clang::os_returns_retained_on_non_zero]]
 __attribute__((os_returns_retained_on_zero))
 [[clang::os_returns_retained_on_zero]]
 __attribute__((objc_boxable))
 [[clang::objc_boxable]]
 __attribute__((objc_bridge(
 [[clang::objc_bridge(
 __attribute__((objc_bridge_mutable(
 [[clang::objc_bridge_mutable(
 __attribute__((objc_bridge_related(
 [[clang::objc_bridge_related(
 __attribute__((objc_class_stub))
 [[clang::objc_class_stub]]
 __attribute__((objc_complete_definition))
 __attribute__((objc_designated_initializer))
 [[clang::objc_designated_initializer]]
 __attribute__((objc_direct))
 [[clang::objc_direct]]
 __attribute__((objc_direct_members))
 [[clang::objc_direct_members]]
 __attribute__((objc_exception))
 [[clang::objc_exception]]
 __attribute__((objc_protocol_requires_explicit_implementation))
 [[clang::objc_protocol_requires_explicit_implementation]]
 __attribute__((objc_externally_retained))
 [[clang::objc_externally_retained]]
 __attribute__((objc_gc(
 [[clang::objc_gc(
 __attribute__((objc_independent_class))
 [[clang::objc_independent_class]]
 __unsafe_unretained
 __kindof
none
alloc
copy
init
mutableCopy
 __attribute__((objc_method_family("
 [[clang::objc_method_family("
 __attribute__((NSObject))
 [[clang::NSObject]]
 __attribute__((objc_nonlazy_class))
 [[clang::objc_nonlazy_class]]
 __attribute__((objc_non_runtime_protocol))
 [[clang::objc_non_runtime_protocol]]
 __attribute__((objc_ownership(
 [[clang::objc_ownership(
 __attribute__((objc_precise_lifetime))
 [[clang::objc_precise_lifetime]]
 __attribute__((objc_requires_property_definitions))
 [[clang::objc_requires_property_definitions]]
 __attribute__((objc_requires_super))
 [[clang::objc_requires_super]]
 __attribute__((objc_returns_inner_pointer))
 [[clang::objc_returns_inner_pointer]]
 __attribute__((objc_root_class))
 [[clang::objc_root_class]]
 __attribute__((objc_runtime_name("
 [[clang::objc_runtime_name("
 __attribute__((objc_runtime_visible))
 [[clang::objc_runtime_visible]]
 __attribute__((objc_subclassing_restricted))
 [[clang::objc_subclassing_restricted]]
 __read_only
 read_only
 __write_only
 write_only
 __read_write
 read_write
__read_only
read_only
__write_only
write_only
__read_write
read_write
 __constant
 constant
 __attribute__((opencl_constant))
 [[clang::opencl_constant]]
__constant
opencl_constant
 __generic
 generic
 __attribute__((opencl_generic))
 [[clang::opencl_generic]]
__generic
generic
opencl_generic
 __global
 global
 __attribute__((opencl_global))
 [[clang::opencl_global]]
__global
opencl_global
 __attribute__((opencl_global_device))
 [[clang::opencl_global_device]]
 __attribute__((opencl_global_host))
 [[clang::opencl_global_host]]
 __attribute__((intel_reqd_sub_group_size(
 __kernel
 kernel
 __local
 local
 __attribute__((opencl_local))
 [[clang::opencl_local]]
__local
local
opencl_local
 __private
 private
 __attribute__((opencl_private))
 [[clang::opencl_private]]
__private
private
opencl_private
 __attribute__((opencl_unroll_hint(
 __attribute__((optnone))
 [[clang::optnone]]
 __attribute__((overloadable))
 [[clang::overloadable]]
 [[gsl::Owner
 __attribute__((ownership_holds(
 [[clang::ownership_holds(
 __attribute__((ownership_returns(
 [[clang::ownership_returns(
 __attribute__((ownership_takes(
 [[clang::ownership_takes(
ownership_holds
ownership_returns
ownership_takes
 __attribute__((packed))
 [[gnu::packed]]
 __attribute__((param_typestate("
 [[clang::param_typestate("
 __attribute__((pascal))
 [[clang::pascal]]
 __pascal
 _pascal
 __attribute__((pass_object_size(
 [[clang::pass_object_size(
 __attribute__((pass_dynamic_object_size(
 [[clang::pass_dynamic_object_size(
pass_object_size
pass_dynamic_object_size
 __attribute__((patchable_function_entry(
 [[gnu::patchable_function_entry(
aapcs
aapcs-vfp
 __attribute__((pcs("
 [[gnu::pcs("
 [[gsl::Pointer
 __ptrauth(
 __ptrauth_restricted_intptr(
__ptrauth
__ptrauth_restricted_intptr
 __attribute__((ptrauth_struct(
 [[clang::ptrauth_struct(
 __attribute__((preferred_name(
 [[clang::preferred_name(
 __attribute__((preserve_all))
 [[clang::preserve_all]]
 __attribute__((preserve_most))
 [[clang::preserve_most]]
 __attribute__((pt_guarded_by(
 __attribute__((pt_guarded_var))
 [[clang::pt_guarded_var]]
 __ptr32
 __ptr64
 __attribute__((pure))
 [[gnu::pure]]
user
supervisor
machine
 __attribute__((regcall))
 [[gnu::regcall]]
 __regcall
 __attribute__((reinitializes))
 [[clang::reinitializes]]
 __attribute__((release_capability(
 [[clang::release_capability(
 __attribute__((release_shared_capability(
 [[clang::release_shared_capability(
 __attribute__((release_generic_capability(
 [[clang::release_generic_capability(
 __attribute__((unlock_function(
 [[clang::unlock_function(
release_capability
release_shared_capability
release_generic_capability
unlock_function
 __attribute__((release_handle("
 [[clang::release_handle("
 __attribute__((kernel))
 __attribute__((reqd_work_group_size(
 __attribute__((requires_capability(
 [[clang::requires_capability(
 __attribute__((exclusive_locks_required(
 [[clang::exclusive_locks_required(
 __attribute__((requires_shared_capability(
 [[clang::requires_shared_capability(
 __attribute__((shared_locks_required(
 [[clang::shared_locks_required(
requires_capability
exclusive_locks_required
requires_shared_capability
shared_locks_required
 __declspec(restrict)
 __attribute__((malloc))
 [[gnu::malloc]]
restrict
malloc
 __attribute__((return_typestate("
 [[clang::return_typestate("
 __attribute__((returns_nonnull))
 [[gnu::returns_nonnull]]
 __attribute__((returns_twice))
 [[gnu::returns_twice]]
 __sptr
 __attribute__((sycl_kernel))
 [[clang::sycl_kernel]]
 __attribute__((scoped_lockable))
 [[clang::scoped_lockable]]
 __attribute__((section("
 [[gnu::section("
 __declspec(allocate("
section
allocate
 __declspec(selectany)
 __attribute__((selectany))
 [[gnu::selectany]]
 __attribute__((sentinel(
 [[gnu::sentinel(
 __attribute__((set_typestate("
 [[clang::set_typestate("
 __attribute__((shared_trylock_function(
 __attribute__((speculative_load_hardening))
 [[clang::speculative_load_hardening]]
 __attribute__((stdcall))
 [[gnu::stdcall]]
 __stdcall
 _stdcall
 [[gsl::suppress(
suppress
swift_private
not_swift_private
 __attribute__((swift_async
 [[clang::swift_async
 __attribute__((swiftasynccall))
 [[clang::swiftasynccall]]
 __attribute__((swift_async_context))
 [[clang::swift_async_context]]
nonnull_error
zero_argument
nonzero_argument
 __attribute__((swift_async_error("
 [[clang::swift_async_error("
 __attribute__((swift_async_name("
 __attribute__((swift_attr("
 __attribute__((swift_bridge("
 __attribute__((swift_bridged_typedef))
 __attribute__((swiftcall))
 [[clang::swiftcall]]
 __attribute__((swift_context))
 [[clang::swift_context]]
null_result
zero_result
nonzero_result
 __attribute__((swift_error("
 __attribute__((swift_error_result))
 [[clang::swift_error_result]]
 __attribute__((swift_indirect_result))
 [[clang::swift_indirect_result]]
 __attribute__((swift_name("
struct
enum
 __attribute__((swift_newtype("
 __attribute__((swift_wrapper("
swift_newtype
swift_wrapper
 __attribute__((swift_objc_members))
 __attribute__((swift_private))
 __attribute__((symbol_metadata_footnote("
 [[clang::symbol_metadata_footnote("
 __attribute__((sysv_abi))
 [[gnu::sysv_abi]]
 __attribute__((tls_model("
 [[gnu::tls_model("
 __attribute__((target("
 [[gnu::target("
 __attribute__((test_typestate("
 [[clang::test_typestate("
 __attribute__((thiscall))
 [[gnu::thiscall]]
 __thiscall
 _thiscall
 __declspec(thread)
 __attribute__((transparent_union))
 [[gnu::transparent_union]]
 __attribute__((trivial_abi))
 [[clang::trivial_abi]]
 __attribute__((try_acquire_capability(
 [[clang::try_acquire_capability(
 __attribute__((try_acquire_shared_capability(
 [[clang::try_acquire_shared_capability(
try_acquire_capability
try_acquire_shared_capability
 _Nonnull
 _Null_unspecified
 _Nullable
 _Nullable_result
 __attribute__((type_tag_for_datatype(
 [[clang::type_tag_for_datatype(
default
hidden
internal
protected
 __attribute__((type_visibility("
 [[clang::type_visibility("
 __attribute__((typed_memory_operation("
 [[clang::typed_memory_operation("
 __uptr
 __attribute__((unavailable("
 [[clang::unavailable("
 __attribute__((uninitialized))
 [[clang::uninitialized]]
 [[unlikely]]
 [[clang::unlikely]]
 [[maybe_unused]]
 __attribute__((unused))
 [[gnu::unused]]
maybe_unused
unused
 __attribute__((use_handle("
 [[clang::use_handle("
 __attribute__((used))
 [[gnu::used]]
 __attribute__((using_if_exists))
 [[clang::using_if_exists]]
 __declspec(uuid("
[uuid("
default_key
no_authentication
process_dependent
process_independent
default_address_discrimination
no_address_discrimination
address_discrimination
default_extra_discrimination
no_extra_discrimination
type_discrimination
custom_discrimination
 __attribute__((ptrauth_vtable_pointer("
 [[clang::ptrauth_vtable_pointer("
 __attribute__((vecreturn))
 [[clang::vecreturn]]
 __attribute__((vec_type_hint(
 __attribute__((vectorcall))
 [[clang::vectorcall]]
 __vectorcall
 _vectorcall
 __attribute__((visibility("
 [[gnu::visibility("
 __attribute__((warn_unused))
 [[gnu::warn_unused]]
 [[nodiscard("
 [[clang::warn_unused_result("
 __attribute__((warn_unused_result("
 [[gnu::warn_unused_result("
nodiscard
warn_unused_result
 __attribute__((weak))
 [[gnu::weak]]
 __attribute__((weak_import))
 [[clang::weak_import]]
 __attribute__((weakref("
 [[gnu::weakref("
 __attribute__((export_name("
 [[clang::export_name("
 __attribute__((import_module("
 [[clang::import_module("
 __attribute__((import_name("
 [[clang::import_name("
 __attribute__((work_group_size_hint(
 __attribute__((force_align_arg_pointer))
 [[gnu::force_align_arg_pointer]]
 __attribute__((xray_always_instrument))
 [[clang::xray_always_instrument]]
 __attribute__((xray_never_instrument))
 [[clang::xray_never_instrument]]
xray_always_instrument
xray_never_instrument
 __attribute__((xray_log_args(
 [[clang::xray_log_args(
 __attribute__((xnu_usage_semantics(
 [[clang::xnu_usage_semantics(
NoCommentKind
BlockCommandComment
ParamCommandComment
TParamCommandComment
VerbatimBlockComment
VerbatimLineComment
ParagraphComment
FullComment
HTMLEndTagComment
HTMLStartTagComment
InlineCommandComment
TextComment
VerbatimBlockLineComment
[in]
[out]
[in,out]
link
rows
textblock
section
abstract
addtogroup
anchor
attention
author
authors
brief
callback
category
class
classdesign
coclass
code
endcode
const
constant
copyright
date
defgroup
dependency
deprecated
details
discussion
enddot
enum
exception
function
functiongroup
headerfile
helper
helperclass
helps
htmlonly
endhtmlonly
ingroup
instancesize
interface
invariant
latexonly
endlatexonly
/link
mainpage
manonly
endmanonly
method
methodgroup
endmsc
name
namespace
note
overload
ownership
paragraph
param
performance
post
property
protocol
related
relatedalso
relates
relatesalso
remark
remarks
result
return
returns
retval
rtfonly
endrtfonly
security
seealso
short
since
struct
subpage
subsection
subsubsection
superclass
template
templatefield
/textblock
throw
throws
todo
tparam
typedef
union
verbatim
endverbatim
version
warning
weakgroup
xmlonly
endxmlonly
floor
\@&<
[[deprecated]]
__attribute__((deprecated))
anchor
partial_ordering
weak_ordering
strong_ordering
equal
equivalent
less
greater
unordered
CFStringCreateWithFormat
CFStringCreateWithFormatAndArguments
CFStringAppendFormat
CFStringAppendFormatAndArguments
`anonymous namespace'
(anonymous 
auto
extern
__private_extern__
register
static
main
memset
memcpy
memmove
memcmp
bcmp
free
field-padding
<deduction guide for 
operator""
<using-directive>
AccessSpec
Block
Captured
ClassScopeFunctionSpecialization
Empty
Export
ExternCContext
FileScopeAsm
Friend
FriendTemplate
Import
LifetimeExtendedTemporary
LinkageSpec
Label
Namespace
NamespaceAlias
ObjCCompatibleAlias
ObjCCategory
ObjCCategoryImpl
ObjCImplementation
ObjCInterface
ObjCProtocol
ObjCMethod
ObjCProperty
BuiltinTemplate
Concept
ClassTemplate
FunctionTemplate
TypeAliasTemplate
VarTemplate
TemplateTemplateParm
Enum
Record
CXXRecord
ClassTemplateSpecialization
ClassTemplatePartialSpecialization
TemplateTypeParm
ObjCTypeParam
TypeAlias
Typedef
UnresolvedUsingTypename
UnresolvedUsingIfExists
Using
UsingDirective
UsingPack
UsingShadow
ConstructorUsingShadow
Binding
Field
ObjCAtDefsField
ObjCIvar
Function
CXXDeductionGuide
CXXMethod
CXXConstructor
CXXConversion
CXXDestructor
MSProperty
NonTypeTemplateParm
Decomposition
ImplicitParam
OMPCapturedExpr
ParmVar
VarTemplateSpecialization
VarTemplatePartialSpecialization
EnumConstant
IndirectField
MSGuid
OMPDeclareMapper
OMPDeclareReduction
TemplateParamObject
UnresolvedUsingValue
OMPAllocate
OMPRequires
OMPThreadPrivate
ObjCPropertyImpl
PragmaComment
PragmaDetectMismatch
RequiresExprBody
StaticAssert
TranslationUnit
*** Decl Stats:
 decls total.
 AccessSpec decls, 
 each (
 Block decls, 
 Captured decls, 
 ClassScopeFunctionSpecialization decls, 
 Empty decls, 
 Export decls, 
 ExternCContext decls, 
 FileScopeAsm decls, 
 Friend decls, 
 FriendTemplate decls, 
 Import decls, 
 LifetimeExtendedTemporary decls, 
 LinkageSpec decls, 
 Label decls, 
 Namespace decls, 
 NamespaceAlias decls, 
 ObjCCompatibleAlias decls, 
 ObjCCategory decls, 
 ObjCCategoryImpl decls, 
 ObjCImplementation decls, 
 ObjCInterface decls, 
 ObjCProtocol decls, 
 ObjCMethod decls, 
 ObjCProperty decls, 
 BuiltinTemplate decls, 
 Concept decls, 
 ClassTemplate decls, 
 FunctionTemplate decls, 
 TypeAliasTemplate decls, 
 VarTemplate decls, 
 TemplateTemplateParm decls, 
 Enum decls, 
 Record decls, 
 CXXRecord decls, 
 ClassTemplateSpecialization decls, 
 ClassTemplatePartialSpecialization decls, 
 TemplateTypeParm decls, 
 ObjCTypeParam decls, 
 TypeAlias decls, 
 Typedef decls, 
 UnresolvedUsingTypename decls, 
 UnresolvedUsingIfExists decls, 
 Using decls, 
 UsingDirective decls, 
 UsingPack decls, 
 UsingShadow decls, 
 ConstructorUsingShadow decls, 
 Binding decls, 
 Field decls, 
 ObjCAtDefsField decls, 
 ObjCIvar decls, 
 Function decls, 
 CXXDeductionGuide decls, 
 CXXMethod decls, 
 CXXConstructor decls, 
 CXXConversion decls, 
 CXXDestructor decls, 
 MSProperty decls, 
 NonTypeTemplateParm decls, 
 Var decls, 
 Decomposition decls, 
 ImplicitParam decls, 
 OMPCapturedExpr decls, 
 ParmVar decls, 
 VarTemplateSpecialization decls, 
 VarTemplatePartialSpecialization decls, 
 EnumConstant decls, 
 IndirectField decls, 
 MSGuid decls, 
 OMPDeclareMapper decls, 
 OMPDeclareReduction decls, 
 TemplateParamObject decls, 
 UnresolvedUsingValue decls, 
 OMPAllocate decls, 
 OMPRequires decls, 
 OMPThreadPrivate decls, 
 ObjCPropertyImpl decls, 
 PragmaComment decls, 
 PragmaDetectMismatch decls, 
 RequiresExprBody decls, 
 StaticAssert decls, 
 TranslationUnit decls, 
not available on 
introduced in 
obsoleted in 
first deprecated in 
00000000-0000-0000-C000-000000000046
00020400-0000-0000-C000-000000000046
GUID{%08x-%04hx-%04hx-
%02hhx
__invoke
public
private
protected
self
_cmd
NSObject
#pragma omp end declare target
 ...
concept 
__asm (
friend 
@import 
extern "
@compatibility_alias 
@interface 
<<error-type>>
__covariant 
__contravariant 
@implementation 
@class 
@protocol 
@required
@optional
getter = 
setter = 
__module_private__ 
 class
 struct
virtual 
typedef 
using typename 
using namespace 
mutable 
extern 
__private_extern__ 
consteval 
 throw(
 noexcept
 requires 
 = 0
 = delete
 = default
__thread 
_Thread_local 
thread_local 
#pragma omp declare mapper (
#pragma omp declare reduction (
 initializer(
omp_priv(
omp_priv = 
#pragma omp allocate
#pragma omp requires 
#pragma omp threadprivate
@dynamic 
static_assert(
<template param 
__func__
__FUNCTION__
__FUNCDNAME__
L__FUNCTION__
__PRETTY_FUNCTION__
__FUNCSIG__
L__FUNCSIG__
_block_invoke
static 
__cdecl 
__stdcall 
__fastcall 
__thiscall 
__vectorcall 
__regcall 
void
 volatile
auto 
0123456789ABCDEF
\U00
__real
__imag
__extension__
co_await
Dependent
BitCast
LValueBitCast
LValueToRValueBitCast
LValueToRValue
NoOp
BaseToDerived
DerivedToBase
UncheckedDerivedToBase
Dynamic
ToUnion
ArrayToPointerDecay
FunctionToPointerDecay
NullToPointer
NullToMemberPointer
BaseToDerivedMemberPointer
DerivedToBaseMemberPointer
MemberPointerToBoolean
ReinterpretMemberPointer
UserDefinedConversion
ConstructorConversion
IntegralToPointer
PointerToIntegral
PointerToBoolean
ToVoid
VectorSplat
IntegralCast
IntegralToBoolean
IntegralToFloating
FloatingToFixedPoint
FixedPointToFloating
FixedPointCast
FixedPointToIntegral
IntegralToFixedPoint
FixedPointToBoolean
FloatingToIntegral
FloatingToBoolean
BooleanToSignedIntegral
FloatingCast
CPointerToObjCPointerCast
BlockPointerToObjCPointerCast
AnyPointerToBlockPointerCast
ObjCObjectLValueCast
FloatingRealToComplex
FloatingComplexToReal
FloatingComplexToBoolean
FloatingComplexCast
FloatingComplexToIntegralComplex
IntegralRealToComplex
IntegralComplexToReal
IntegralComplexToBoolean
IntegralComplexCast
IntegralComplexToFloatingComplex
ARCProduceObject
ARCConsumeObject
ARCReclaimReturnedObject
ARCExtendBlockObject
AtomicToNonAtomic
NonAtomicToAtomic
CopyAndAutoreleaseBlockObject
BuiltinFnToFnPtr
ZeroToOCLOpaqueType
AddressSpaceConversion
IntToOCLSampler
FirebloomPointerCast
__builtin_FILE
__builtin_FUNCTION
__builtin_LINE
__builtin_COLUMN
even
captures not currently allowed
deallocate
__builtin_is_constant_evaluated
std::is_constant_evaluated
<...>
static_cast
dynamic_cast
reinterpret_cast
const_cast
addrspace_cast
<invalid cast>
__bridge
__bridge_transfer
__bridge_retained
generation counter overflowed
size_t
ssize_t
intmax_t
uintmax_t
unimplemented feature
missing source location
Interpreter cannot return values
missing source expression
char_traits
U2ASI
cannot yet mangle expression type %0
u8__uuidoft
u8__uuidofz
?: operator with omitted middle operand cannot be mangled
cannot yet mangle __builtin_ptrauth_type_discriminator expression
cannot yet mangle __builtin_xnu_type_signature expression
cannot yet mangle vec_step expression
cannot yet mangle __builtin_omp_required_simd_align expression
ixix
_SUBSTPACK_
v110_SUBSTPACK
LDnE
v18co_await
v18co_yield
dtdefpT
12_GLOBAL__N_1
Li0E
decvP
plcvPcad
U25pass_dynamic_object_size
U17pass_object_size
cannot mangle fixed point literals yet
U7_Atomic
U13block_pointer
11objc_object
10objc_class
13objc_selector
ocl_image1d_ro
ocl_image1d_array_ro
ocl_image1d_buffer_ro
ocl_image2d_ro
ocl_image2d_array_ro
ocl_image2d_depth_ro
ocl_image2d_array_depth_ro
ocl_image2d_msaa_ro
ocl_image2d_array_msaa_ro
ocl_image2d_msaa_depth_ro
ocl_image2d_array_msaa_depth_ro
ocl_image3d_ro
ocl_image1d_wo
ocl_image1d_array_wo
ocl_image1d_buffer_wo
ocl_image2d_wo
ocl_image2d_array_wo
ocl_image2d_depth_wo
ocl_image2d_array_depth_wo
ocl_image2d_msaa_wo
ocl_image2d_array_msaa_wo
ocl_image2d_msaa_depth_wo
ocl_image2d_array_msaa_depth_wo
ocl_image3d_wo
ocl_image1d_rw
ocl_image1d_array_rw
ocl_image1d_buffer_rw
ocl_image2d_rw
ocl_image2d_array_rw
ocl_image2d_depth_rw
ocl_image2d_array_depth_rw
ocl_image2d_msaa_rw
ocl_image2d_array_msaa_rw
ocl_image2d_msaa_depth_rw
ocl_image2d_array_msaa_depth_rw
ocl_image3d_rw
11ocl_sampler
9ocl_event
12ocl_clkevent
9ocl_queue
13ocl_reserveid
ocl_intel_sub_group_avc_mce_payload_t
ocl_intel_sub_group_avc_ime_payload_t
ocl_intel_sub_group_avc_ref_payload_t
ocl_intel_sub_group_avc_sic_payload_t
ocl_intel_sub_group_avc_mce_result_t
ocl_intel_sub_group_avc_ime_result_t
ocl_intel_sub_group_avc_ref_result_t
ocl_intel_sub_group_avc_sic_result_t
ocl_intel_sub_group_avc_ime_result_single_reference_streamout_t
ocl_intel_sub_group_avc_ime_result_dual_reference_streamout_t
ocl_intel_sub_group_avc_ime_single_reference_streamin_t
ocl_intel_sub_group_avc_ime_dual_reference_streamin_t
svint8x2_t
svint16x2_t
svint32x2_t
svint64x2_t
svuint8x2_t
svuint16x2_t
svuint32x2_t
svuint64x2_t
svfloat16x2_t
svfloat32x2_t
svfloat64x2_t
svbfloat16x2_t
svint8x3_t
svint16x3_t
svint32x3_t
svint64x3_t
svuint8x3_t
svuint16x3_t
svuint32x3_t
svuint64x3_t
svfloat16x3_t
svfloat32x3_t
svfloat64x3_t
svbfloat16x3_t
svint8x4_t
svint16x4_t
svint32x4_t
svint64x4_t
svuint8x4_t
svuint16x4_t
svuint32x4_t
svuint64x4_t
svfloat16x4_t
svfloat32x4_t
svfloat64x4_t
svbfloat16x4_t
U7_ExtInt
cannot mangle this dependent neon vector type yet
cannot mangle this dependent fixed-length SVE vector type yet
U8__kindof
objcproto
8ocl_pipe
u6typeof
3eut
Poly8
Poly16
Poly64
Uint8
Uint16
Uint32
Uint64
Float16
Bfloat16
poly8_t
poly16_t
poly64_t
float64_t
float32_t
float16_t
bfloat16_t
__simd64_
__simd128_
__SVBfloat16_t
9__SVE_VLSI
Ua9enable_ifI
Mangling declaration
__vtptrauth
_ZGR
_ZTV
_ZTI
_ZTS
__cxx_global_var_init
__dtor_
__filt_
__fin_
_ZTT
_ZTC
_ZTH
_ZTW
__finalize_
AddressSpaceAttr
ArmMveStrictPolymorphismAttr
CmseNSCallAttr
NoDerefAttr
ObjCGCAttr
ObjCInertUnsafeUnretainedAttr
ObjCKindOfAttr
OpenCLConstantAddressSpaceAttr
OpenCLGenericAddressSpaceAttr
OpenCLGlobalAddressSpaceAttr
OpenCLGlobalDeviceAddressSpaceAttr
OpenCLGlobalHostAddressSpaceAttr
OpenCLLocalAddressSpaceAttr
OpenCLPrivateAddressSpaceAttr
PointerAuthAttr
Ptr32Attr
Ptr64Attr
PtrAutoAttrAttr
SPtrAttr
TypeNonNullAttr
TypeNullUnspecifiedAttr
TypeNullableAttr
TypeNullableResultAttr
UPtrAttr
XnuUsageSemanticsAttr
FallThroughAttr
LikelyAttr
SuppressAttr
UnlikelyAttr
AnalyzerSuppressAttr
NoMergeAttr
AArch64VectorPcsAttr
AcquireHandleAttr
AnyX86NoCfCheckAttr
CDeclAttr
FastCallAttr
IntelOclBiccAttr
LifetimeBoundAttr
MSABIAttr
NSReturnsRetainedAttr
ObjCOwnershipAttr
PascalAttr
PcsAttr
PreserveAllAttr
PreserveMostAttr
RegCallAttr
StdCallAttr
SwiftAsyncCallAttr
SwiftCallAttr
SysVABIAttr
ThisCallAttr
VectorCallAttr
SwiftAsyncContextAttr
SwiftContextAttr
SwiftErrorResultAttr
SwiftIndirectResultAttr
AnnotateAttr
CFConsumedAttr
CarriesDependencyAttr
NSConsumedAttr
NonNullAttr
OSConsumedAttr
PassObjectSizeAttr
ReleaseHandleAttr
UseHandleAttr
AMDGPUFlatWorkGroupSizeAttr
AMDGPUNumSGPRAttr
AMDGPUNumVGPRAttr
AMDGPUWavesPerEUAttr
ARMInterruptAttr
AVRInterruptAttr
AVRSignalAttr
AcquireCapabilityAttr
AcquiredAfterAttr
AcquiredBeforeAttr
AlignMac68kAttr
AlignedAttr
AllocAlignAttr
AllocSizeAttr
AlwaysDestroyAttr
AlwaysInlineAttr
AnalyzerNoReturnAttr
AnyX86InterruptAttr
AnyX86NoCallerSavedRegistersAttr
ArcWeakrefUnavailableAttr
ArgumentWithTypeTagAttr
ArmBuiltinAliasAttr
ArtificialAttr
AsmLabelAttr
AssertCapabilityAttr
AssertExclusiveLockAttr
AssertSharedLockAttr
AssumeAlignedAttr
AssumptionAttr
AvailabilityAttr
BPFPreserveAccessIndexAttr
BlocksAttr
BuiltinAttr
C11NoReturnAttr
CFAuditedTransferAttr
CFGuardAttr
CFICanonicalJumpTableAttr
CFReturnsNotRetainedAttr
CFReturnsRetainedAttr
CFUnknownTransferAttr
CPUDispatchAttr
CPUSpecificAttr
CUDAConstantAttr
CUDADeviceAttr
CUDADeviceBuiltinSurfaceTypeAttr
CUDADeviceBuiltinTextureTypeAttr
CUDAGlobalAttr
CUDAHostAttr
CUDAInvalidTargetAttr
CUDALaunchBoundsAttr
CUDASharedAttr
CXX11NoReturnAttr
CallableWhenAttr
CallbackAttr
CapabilityAttr
CapturedRecordAttr
CleanupAttr
CmseNSEntryAttr
CodeSegAttr
ColdAttr
CommonAttr
ConstAttr
ConstInitAttr
ConstructorAttr
ConsumableAttr
ConsumableAutoCastAttr
ConsumableSetOnReadAttr
ConvergentAttr
DLLExportAttr
DLLExportStaticLocalAttr
DLLImportAttr
DLLImportStaticLocalAttr
DependerDeclsAttr
DeprecatedAttr
DestructorAttr
DiagnoseIfAttr
DisableTailCallsAttr
EmptyBasesAttr
EnableIfAttr
EnforceTCBAttr
EnforceTCBLeafAttr
EnumExtensibilityAttr
ExcludeFromExplicitInstantiationAttr
ExclusiveTrylockFunctionAttr
ExternalSourceSymbolAttr
FinalAttr
FlagEnumAttr
FlattenAttr
FormatAttr
FormatArgAttr
GNUInlineAttr
GuardedByAttr
GuardedVarAttr
HotAttr
IBActionAttr
IBOutletAttr
IBOutletCollectionAttr
InitPriorityAttr
InternalLinkageAttr
LTOVisibilityPublicAttr
LayoutVersionAttr
LeafAttr
LockReturnedAttr
LocksExcludedAttr
MIGServerRoutineAttr
MSAllocatorAttr
MSInheritanceAttr
MSNoVTableAttr
MSP430InterruptAttr
MSStructAttr
MSVtorDispAttr
MaxFieldAlignmentAttr
MayAliasAttr
MicroMipsAttr
MinSizeAttr
MinVectorWidthAttr
Mips16Attr
MipsInterruptAttr
MipsLongCallAttr
MipsShortCallAttr
NSConsumesSelfAttr
NSErrorDomainAttr
NSReturnsAutoreleasedAttr
NSReturnsNotRetainedAttr
NakedAttr
NoAliasAttr
NoCommonAttr
NoDebugAttr
NoDestroyAttr
NoDuplicateAttr
NoInlineAttr
NoInstrumentFunctionAttr
NoMicroMipsAttr
NoMips16Attr
NoReturnAttr
NoSanitizeAttr
NoSpeculativeLoadHardeningAttr
NoSplitStackAttr
NoStackProtectorAttr
NoThreadSafetyAnalysisAttr
NoThrowAttr
NoUniqueAddressAttr
NotTailCalledAttr
OMPAllocateDeclAttr
OMPCaptureNoInitAttr
OMPDeclareTargetDeclAttr
OMPDeclareVariantAttr
OMPThreadPrivateDeclAttr
OSConsumesThisAttr
OSReturnsNotRetainedAttr
OSReturnsRetainedAttr
OSReturnsRetainedOnNonZeroAttr
OSReturnsRetainedOnZeroAttr
ObjCBridgeAttr
ObjCBridgeMutableAttr
ObjCBridgeRelatedAttr
ObjCCompleteDefinitionAttr
ObjCExceptionAttr
ObjCExplicitProtocolImplAttr
ObjCExternallyRetainedAttr
ObjCIndependentClassAttr
ObjCMethodFamilyAttr
ObjCNSObjectAttr
ObjCPreciseLifetimeAttr
ObjCRequiresPropertyDefsAttr
ObjCRequiresSuperAttr
ObjCReturnsInnerPointerAttr
ObjCRootClassAttr
ObjCSubclassingRestrictedAttr
OpenCLIntelReqdSubGroupSizeAttr
OpenCLKernelAttr
OpenCLUnrollHintAttr
OptimizeNoneAttr
OverrideAttr
OwnerAttr
OwnershipAttr
PackedAttr
ParamTypestateAttr
PatchableFunctionEntryAttr
PointerAttr
PointerAuthStructAttr
PragmaClangBSSSectionAttr
PragmaClangDataSectionAttr
PragmaClangRelroSectionAttr
PragmaClangRodataSectionAttr
PragmaClangTextSectionAttr
PreferredNameAttr
PtGuardedByAttr
PtGuardedVarAttr
PureAttr
RISCVInterruptAttr
ReinitializesAttr
ReleaseCapabilityAttr
ReqdWorkGroupSizeAttr
RequiresCapabilityAttr
RestrictAttr
ReturnTypestateAttr
ReturnsNonNullAttr
ReturnsTwiceAttr
SYCLKernelAttr
ScopedLockableAttr
SectionAttr
SelectAnyAttr
SentinelAttr
SetTypestateAttr
SharedTrylockFunctionAttr
SpeculativeLoadHardeningAttr
StrictFPAttr
SwiftAsyncAttr
SwiftAsyncErrorAttr
SwiftAsyncNameAttr
SwiftAttrAttr
SwiftBridgeAttr
SwiftBridgedTypedefAttr
SwiftErrorAttr
SwiftImportAsNonGenericAttr
SwiftImportPropertyAsAccessorsAttr
SwiftNameAttr
SwiftNewTypeAttr
SwiftPrivateAttr
SymbolMetadataFootnoteAttr
TLSModelAttr
TargetAttr
TestTypestateAttr
TransparentUnionAttr
TrivialABIAttr
TryAcquireCapabilityAttr
TypeTagForDatatypeAttr
TypeVisibilityAttr
TypedMemoryAttr
UnavailableAttr
UninitializedAttr
UnusedAttr
UsedAttr
UsingIfExistsAttr
UuidAttr
VTablePointerAuthenticationAttr
VecReturnAttr
VecTypeHintAttr
VisibilityAttr
WarnUnusedAttr
WarnUnusedResultAttr
WeakAttr
WeakImportAttr
WeakRefAttr
WebAssemblyExportNameAttr
WebAssemblyImportModuleAttr
WebAssemblyImportNameAttr
WorkGroupSizeHintAttr
X86ForceAlignArgPointerAttr
XRayInstrumentAttr
XRayLogArgsAttr
AbiTagAttr
AliasAttr
AlignValueAttr
CalledOnceAttr
IFuncAttr
InitSegAttr
LoaderUninitializedAttr
LoopHintAttr
ModeAttr
NoBuiltinAttr
NoEscapeAttr
OMPCaptureKindAttr
OMPDeclareSimdDeclAttr
OMPReferencedVarAttr
ObjCBoxableAttr
ObjCClassStubAttr
ObjCDesignatedInitializerAttr
ObjCDirectAttr
ObjCDirectMembersAttr
ObjCNonLazyClassAttr
ObjCNonRuntimeProtocolAttr
ObjCRuntimeNameAttr
ObjCRuntimeVisibleAttr
OpenCLAccessAttr
OverloadableAttr
RenderScriptKernelAttr
SwiftObjCMembersAttr
SwiftVersionedAttr
SwiftVersionedRemovalAttr
ThreadAttr
kind
range
lvalue
xvalue
rvalue
valueCategory
containsErrors
isDependent
isInstantiationDependent
isVariablyModified
containsUnexpandedPack
isImported
qualifiers
isImplicit
isInvalid
isUsed
isReferenced
isHidden
parentDeclContextId
TemplateArgument
fromDecl
anyInit
baseInit
delegatingInit
Capture
byref
nested
associationKind
case
default
selected
includedFrom
presumedFile
presumedLine
tokLen
spellingLoc
expansionLoc
begin
qualType
desugaredQualType
typeAliasDeclId
isVirtual
isGenericLambda
isLambda
isEmpty
isAggregate
isStandardLayout
isTriviallyCopyable
isPOD
isTrivial
isAbstract
isLiteral
canPassInRegisters
hasUserDeclaredConstructor
hasConstexprNonCopyMoveConstructor
hasMutableFields
hasVariantMembers
canConstDefaultInit
defaultCtor
copyCtor
moveCtor
copyAssign
moveAssign
dtor
writtenAccess
isPackExpansion
producesResult
regParm
trailingReturn
variadic
refQualifier
exceptionSpec
exceptionTypes
throwsAny
conditionEvaluatesTo
spelledAsLValue
sizeModifier
indexTypeQualifiers
attrLoc
numElements
vectorKind
altivec pixel
altivec bool
neon poly
fixed-length sve data vector
fixed-length sve predicate vector
transformKind
underlying_type
isPack
undeduced
typeKeyword
isAlias
templateName
numExpansions
ownedTagDecl
macroName
isData
isFunction
mangledName
isInline
originalNamespace
nominatedNamespace
aliasedNamespace
storageClass
modulePrivate
isParameterPack
isBitfield
hasInClassInitializer
explicitlyDeleted
explicitlyDefaulted
deleted
fixedUnderlyingType
scopedEnumTag
tagUsed
completeDefinition
definitionData
bases
defaultArg
hasBraces
synthesized
returnType
instance
bounded
variance
covariant
contravariant
categoryDecl
control
implKind
propertyDecl
ivarDecl
capturesThis
encodedType
receiverKind
classType
super (instance)
superType
super (class)
callReturnType
propertyKind
isSuperReceiver
isMessagingGetter
isMessagingSetter
subscriptKind
dictionary
isFreeIvar
isArrow
__objc_yes
__objc_no
referencedDecl
foundReferencedDecl
nonOdrUseReason
unevaluated
discarded
isPostfix
opcode
canOverflow
computeLHSType
computeResultType
referencedMemberDecl
isGlobal
isArray
isPlacement
initStyle
operatorNewDecl
operatorDeleteDecl
isArrayAsWritten
castKind
conversionFunc
isPartOfExplicitCast
argType
usesADL
lookups
labelDeclId
typeArg
adjustedTypeArg
resultDependent
typeAsWritten
ctorType
elidable
zeroing
hadMultipleCandidates
constructionKind
complete
delegating
non-virtual base
virtual base
cleanupsHaveSideEffects
cleanups
temp
extendingDecl
storageDuration
automatic
full expression
boundToLValueRef
hasTemplateKeyword
hasExplicitTemplateArgs
explicitTemplateArgs
hasInit
hasVar
hasElse
isConstexpr
isGNURange
declId
targetLabelDeclId
isCatchAll
isNull
isNullptr
isExpr
renderKind
bold
emphasized
monospaced
selfClosing
attrs
direction
paramIdx
positions
closeName
exists
nonTrivial
userProvided
needsImplicit
defaultedIsConstexpr
simple
userDeclared
hasConstParam
implicitHasConstParam
needsOverloadResolution
defaultedIsDeleted
irrelevant
firstRedecl
previousDecl
isMacroArgExpansion
llvm.
__main_argc_argv
_GUID_%08x_%04x_%04x_
_block_invoke_
3U__s_GUID@@B
?A0x
?__N
<unnamed-type-$S
?__K
$$$V
cannot mangle this dependent-length array yet
PEAXI@Z
PAXI@Z
<decltype-auto>
<auto>
__pass_dynamic_object_size
__pass_object_size
__clang
PAUocl_image1d_ro@@
PAUocl_image1d_array_ro@@
PAUocl_image1d_buffer_ro@@
PAUocl_image2d_ro@@
PAUocl_image2d_array_ro@@
PAUocl_image2d_depth_ro@@
PAUocl_image2d_array_depth_ro@@
PAUocl_image2d_msaa_ro@@
PAUocl_image2d_array_msaa_ro@@
PAUocl_image2d_msaa_depth_ro@@
PAUocl_image2d_array_msaa_depth_ro@@
PAUocl_image3d_ro@@
PAUocl_image1d_wo@@
PAUocl_image1d_array_wo@@
PAUocl_image1d_buffer_wo@@
PAUocl_image2d_wo@@
PAUocl_image2d_array_wo@@
PAUocl_image2d_depth_wo@@
PAUocl_image2d_array_depth_wo@@
PAUocl_image2d_msaa_wo@@
PAUocl_image2d_array_msaa_wo@@
PAUocl_image2d_msaa_depth_wo@@
PAUocl_image2d_array_msaa_depth_wo@@
PAUocl_image3d_wo@@
PAUocl_image1d_rw@@
PAUocl_image1d_array_rw@@
PAUocl_image1d_buffer_rw@@
PAUocl_image2d_rw@@
PAUocl_image2d_array_rw@@
PAUocl_image2d_depth_rw@@
PAUocl_image2d_array_depth_rw@@
PAUocl_image2d_msaa_rw@@
PAUocl_image2d_array_msaa_rw@@
PAUocl_image2d_msaa_depth_rw@@
PAUocl_image2d_array_msaa_depth_rw@@
PAUocl_image3d_rw@@
ocl_sampler
ocl_event
ocl_clkevent
ocl_queue
ocl_reserveid
_Half
cannot mangle this built-in %0 type yet
cannot mangle this decltype() yet
cannot mangle this 'auto' type yet
cannot mangle this deduced class template specialization type yet
cannot mangle this dependent address space type yet
cannot mangle this DependentExtInt type yet
cannot mangle this dependent name type yet
cannot mangle this dependent-sized extended vector type yet
cannot mangle this dependent template specialization type yet
cannot mangle this dependent-sized vector type yet
_UExtInt
$$A6
$$A8@@
Cannot mangle this matrix type yet
Cannot mangle this dependent-sized matrix type yet
Autoreleasing
Strong
Weak
KindOf
cannot mangle this pack expansion yet
ocl_pipe
_ASCLglobal
_ASCLdevice
_ASCLhost
_ASCLlocal
_ASCLconstant
_ASCLprivate
_ASCLgeneric
_ASCUdevice
_ASCUconstant
_ASCUshared
cannot mangle this substituted parameter pack yet
cannot mangle this template specialization type yet
cannot mangle this template type parameter type yet
cannot mangle this typeof(expression) yet
cannot mangle this typeof(type) yet
cannot mangle this unary transform type yet
cannot mangle this unresolved dependent type yet
__m64
__vector
cannot mangle this template argument yet
?__L
?__M
cannot mangle this conditional operator yet
$$J0
??_E
?$RT
??_R0
??_C@_
??__J
??_B
?$S1@
@4IA
??__
YAXXZ
?filt$
?fin$
??_S
??_7
??_8
?$TSS
@4HA
??_K
_CTA
??_R1
??_R2
??_R3
??_R4@
??_R4
__super
Allocation failed
NSObject
NSString
NSArray
NSMutableArray
NSDictionary
NSMutableDictionary
NSNumber
NSMutableSet
NSMutableOrderedSet
NSValue
stringWithString
initWithString
arrayWithArray
arrayWithObject
arrayWithObjects
initWithArray
initWithObjects
replaceObjectAtIndex
atIndex
dictionaryWithDictionary
dictionaryWithObject
dictionaryWithObjects
forKeys
dictionaryWithObjectsAndKeys
initWithDictionary
initWithObjectsAndKeys
setValue
numberWithChar
numberWithUnsignedChar
numberWithShort
numberWithUnsignedShort
numberWithInt
numberWithUnsignedInt
numberWithLong
numberWithUnsignedLong
numberWithLongLong
numberWithUnsignedLongLong
numberWithFloat
numberWithDouble
numberWithBool
numberWithInteger
numberWithUnsignedInteger
BOOL
final(
num_threads(
safelen(
simdlen(
allocator(
collapse(
detach(
default(
proc_bind(
unified_address
unified_shared_memory
reverse_offload
dynamic_allocators
atomic_default_mem_order(
schedule(
ordered
nowait
untied
nogroup
mergeable
read
write
update
capture
seq_cst
acq_rel
acquire
release
relaxed
threads
simd
device(
num_teams(
thread_limit(
priority(
grainsize(
num_tasks(
hint(
destroy
allocate
private
firstprivate
lastprivate
shared
reduction(
task_reduction(
in_reduction(
aligned
copyin
copyprivate
depend(
map(
dist_schedule(
defaultmap(
use_device_ptr
use_device_addr
is_device_ptr
nontemporal
order(
inclusive
exclusive
uses_allocators(
affinity
score(
wint_t
__int32
__int64
intmax_t
unsigned __int32
unsigned __int64
uintmax_t
unsigned ptrdiff_t
const unichar *
wchar_t *
^[[:space:]]*(private|public|sensitive|mask\.[^[:space:],}]*)[[:space:]]*(,|})
sensitive
*** Dumping AST Record Layout
Type: 
<ASTRecordLayout
  Size:
  DataSize:
  Alignment:
  PreferredAlignment:
  FieldOffsets: [
 (empty)
 vtable pointer)
 vftable pointer)
(primary base)
(base)
 vbtable pointer)
(vtordisp for vbase 
(primary virtual base)
(virtual base)
[sizeof=
, dsize=
, align=
, preferredalign=
 nvsize=
, nvalign=
, preferrednvalign=
%10lld | 
           | 
*** Stmt/Expr Stats:
 stmts/exprs total.
${:uid}
asm 
volatile 
__asm 
break;
<<<NULL STATEMENT>>>
<null expr>
continue;
while (
__if_exists (
__if_not_exists (
#pragma omp atomic
#pragma omp barrier
#pragma omp cancel 
#pragma omp cancellation point 
#pragma omp critical
#pragma omp depobj
#pragma omp flush
#pragma omp distribute
#pragma omp distribute parallel for
#pragma omp distribute parallel for simd
#pragma omp distribute simd
#pragma omp for
#pragma omp for simd
#pragma omp master taskloop
#pragma omp master taskloop simd
#pragma omp parallel for
#pragma omp parallel for simd
#pragma omp parallel master taskloop
#pragma omp parallel master taskloop simd
#pragma omp simd
#pragma omp target parallel for simd
#pragma omp target simd
#pragma omp target teams distribute
#pragma omp target teams distribute parallel for
#pragma omp target teams distribute parallel for simd
#pragma omp target teams distribute simd
#pragma omp taskloop
#pragma omp taskloop simd
#pragma omp teams distribute
#pragma omp teams distribute parallel for
#pragma omp teams distribute parallel for simd
#pragma omp teams distribute simd
#pragma omp master
#pragma omp ordered
#pragma omp parallel
#pragma omp parallel master
#pragma omp parallel sections
#pragma omp scan
#pragma omp section
#pragma omp sections
#pragma omp single
#pragma omp target data
#pragma omp target
#pragma omp target enter data
#pragma omp target exit data
#pragma omp target parallel
#pragma omp target parallel for
#pragma omp target teams
#pragma omp target update
#pragma omp task
#pragma omp taskgroup
#pragma omp taskwait
#pragma omp taskyield
#pragma omp teams
@catch (...) { /* todo */ } 
@synchronized (
@catch(
@autoreleasepool
<<unknown expr type>>
__finally 
__leave;
__try 
default:
switch (
 ?: 
__builtin_astype(
__c11_atomic_init(
__c11_atomic_load(
__c11_atomic_store(
__c11_atomic_exchange(
__c11_atomic_compare_exchange_strong(
__c11_atomic_compare_exchange_weak(
__c11_atomic_fetch_add(
__c11_atomic_fetch_sub(
__c11_atomic_fetch_and(
__c11_atomic_fetch_or(
__c11_atomic_fetch_xor(
__c11_atomic_fetch_max(
__c11_atomic_fetch_min(
__atomic_load(
__atomic_load_n(
__atomic_store(
__atomic_store_n(
__atomic_exchange(
__atomic_exchange_n(
__atomic_compare_exchange(
__atomic_compare_exchange_n(
__atomic_fetch_add(
__atomic_fetch_sub(
__atomic_fetch_and(
__atomic_fetch_or(
__atomic_fetch_xor(
__atomic_fetch_nand(
__atomic_add_fetch(
__atomic_sub_fetch(
__atomic_and_fetch(
__atomic_or_fetch(
__atomic_xor_fetch(
__atomic_max_fetch(
__atomic_min_fetch(
__atomic_nand_fetch(
__opencl_atomic_init(
__opencl_atomic_load(
__opencl_atomic_store(
__opencl_atomic_exchange(
__opencl_atomic_compare_exchange_strong(
__opencl_atomic_compare_exchange_weak(
__opencl_atomic_fetch_add(
__opencl_atomic_fetch_sub(
__opencl_atomic_fetch_and(
__opencl_atomic_fetch_or(
__opencl_atomic_fetch_xor(
__opencl_atomic_fetch_min(
__opencl_atomic_fetch_max(
__atomic_fetch_min(
__atomic_fetch_max(
delete 
<forwarded>
>>>(
__builtin_bit_cast(
'\\'
'\''
'\a'
'\b'
'\f'
'\r'
'\t'
'\v'
__builtin_choose_expr(
__builtin_convertvector(
co_await 
co_yield 
/*base*/
/*updater*/
__builtin_unsafe_forge_bidi_indexable(
__builtin_unsafe_forge_single(
_Generic(
__builtin_get_pointer_
_bound(
/*implicit*/
/*implicit*/(
Ui16
*this
/*no init*/
iterator(
@available(...)
@encode(
->isa
.isa
@protocol(
@selector(
__builtin_offsetof(
<recovery-expr>(
requires 
<<error-expression>>
__builtin_shufflevector(
__alignof
__builtin_va_arg(
(no value)
(null template argument)
<<<NULL>>>
AddressSpace
ArmMveStrictPolymorphism
CmseNSCall
NoDeref
ObjCGC
ObjCInertUnsafeUnretained
ObjCKindOf
OpenCLConstantAddressSpace
OpenCLGenericAddressSpace
OpenCLGlobalAddressSpace
OpenCLGlobalDeviceAddressSpace
OpenCLGlobalHostAddressSpace
OpenCLLocalAddressSpace
OpenCLPrivateAddressSpace
PointerAuth
Ptr32
Ptr64
PtrAutoAttr
SPtr
TypeNonNull
TypeNullUnspecified
TypeNullable
TypeNullableResult
UPtr
XnuUsageSemantics
FallThrough
Likely
Suppress
Unlikely
AnalyzerSuppress
NoMerge
AArch64VectorPcs
AcquireHandle
AnyX86NoCfCheck
CDecl
FastCall
IntelOclBicc
LifetimeBound
MSABI
NSReturnsRetained
ObjCOwnership
Pascal
PreserveAll
PreserveMost
RegCall
StdCall
SwiftAsyncCall
SwiftCall
SysVABI
ThisCall
VectorCall
SwiftAsyncContext
SwiftContext
SwiftErrorResult
SwiftIndirectResult
Annotate
CFConsumed
CarriesDependency
NSConsumed
NonNull
OSConsumed
PassObjectSize
ReleaseHandle
UseHandle
AMDGPUFlatWorkGroupSize
AMDGPUNumSGPR
AMDGPUNumVGPR
AMDGPUWavesPerEU
ARMInterrupt
AVRInterrupt
AVRSignal
AcquireCapability
AcquiredAfter
AcquiredBefore
AlignMac68k
Aligned
AllocAlign
AllocSize
AlwaysDestroy
AlwaysInline
AnalyzerNoReturn
AnyX86Interrupt
AnyX86NoCallerSavedRegisters
ArcWeakrefUnavailable
ArgumentWithTypeTag
ArmBuiltinAlias
Artificial
AsmLabel
AssertCapability
AssertExclusiveLock
AssertSharedLock
AssumeAligned
Assumption
Availability
BPFPreserveAccessIndex
Blocks
C11NoReturn
CFAuditedTransfer
CFGuard
CFICanonicalJumpTable
CFReturnsNotRetained
CFReturnsRetained
CFUnknownTransfer
CPUDispatch
CPUSpecific
CUDAConstant
CUDADevice
CUDADeviceBuiltinSurfaceType
CUDADeviceBuiltinTextureType
CUDAGlobal
CUDAHost
CUDAInvalidTarget
CUDALaunchBounds
CUDAShared
CXX11NoReturn
CallableWhen
Callback
Capability
CapturedRecord
Cleanup
CmseNSEntry
CodeSeg
Cold
Common
Const
ConstInit
Consumable
ConsumableAutoCast
ConsumableSetOnRead
Convergent
DLLExport
DLLExportStaticLocal
DLLImport
DLLImportStaticLocal
DependerDecls
Deprecated
DiagnoseIf
DisableTailCalls
EmptyBases
EnableIf
EnforceTCB
EnforceTCBLeaf
EnumExtensibility
ExcludeFromExplicitInstantiation
ExclusiveTrylockFunction
ExternalSourceSymbol
Final
FlagEnum
Flatten
FormatArg
GNUInline
GuardedBy
GuardedVar
IBOutletCollection
InitPriority
InternalLinkage
LTOVisibilityPublic
LayoutVersion
Leaf
LockReturned
LocksExcluded
MIGServerRoutine
MSAllocator
MSInheritance
MSNoVTable
MSP430Interrupt
MSStruct
MSVtorDisp
MaxFieldAlignment
MayAlias
MicroMips
MinSize
MinVectorWidth
Mips16
MipsInterrupt
MipsLongCall
MipsShortCall
NSConsumesSelf
NSErrorDomain
NSReturnsAutoreleased
NSReturnsNotRetained
Naked
NoAlias
NoCommon
NoDebug
NoDestroy
NoDuplicate
NoInline
NoInstrumentFunction
NoMicroMips
NoMips16
NoReturn
NoSanitize
NoSpeculativeLoadHardening
NoSplitStack
NoStackProtector
NoThreadSafetyAnalysis
NoThrow
NoUniqueAddress
NotTailCalled
OMPCaptureNoInit
OMPDeclareTargetDecl
OMPDeclareVariant
OSConsumesThis
OSReturnsNotRetained
OSReturnsRetained
OSReturnsRetainedOnNonZero
OSReturnsRetainedOnZero
ObjCBridge
ObjCBridgeMutable
ObjCBridgeRelated
ObjCCompleteDefinition
ObjCException
ObjCExplicitProtocolImpl
ObjCExternallyRetained
ObjCIndependentClass
ObjCMethodFamily
ObjCNSObject
ObjCPreciseLifetime
ObjCRequiresPropertyDefs
ObjCRequiresSuper
ObjCReturnsInnerPointer
ObjCRootClass
ObjCSubclassingRestricted
OpenCLIntelReqdSubGroupSize
OpenCLKernel
OpenCLUnrollHint
OptimizeNone
Override
Ownership
ParamTypestate
PatchableFunctionEntry
PointerAuthStruct
PragmaClangBSSSection
PragmaClangDataSection
PragmaClangRelroSection
PragmaClangRodataSection
PragmaClangTextSection
PreferredName
PtGuardedBy
PtGuardedVar
Pure
RISCVInterrupt
Reinitializes
ReleaseCapability
ReqdWorkGroupSize
RequiresCapability
Restrict
ReturnTypestate
ReturnsNonNull
ReturnsTwice
SYCLKernel
ScopedLockable
Section
SelectAny
Sentinel
SetTypestate
SharedTrylockFunction
SpeculativeLoadHardening
StrictFP
SwiftAsync
SwiftAsyncError
SwiftAsyncName
SwiftAttr
SwiftBridge
SwiftBridgedTypedef
SwiftError
SwiftImportAsNonGeneric
SwiftImportPropertyAsAccessors
SwiftName
SwiftNewType
SwiftPrivate
SymbolMetadataFootnote
TLSModel
Target
TestTypestate
TransparentUnion
TrivialABI
TryAcquireCapability
TypeTagForDatatype
TypeVisibility
TypedMemory
Unavailable
Uninitialized
Used
UsingIfExists
Uuid
VTablePointerAuthentication
VecReturn
VecTypeHint
Visibility
WarnUnused
WarnUnusedResult
WeakImport
WeakRef
WebAssemblyExportName
WebAssemblyImportModule
WebAssemblyImportName
WorkGroupSizeHint
X86ForceAlignArgPointer
XRayInstrument
XRayLogArgs
AbiTag
Alias
AlignValue
CalledOnce
IFunc
InitSeg
LoaderUninitialized
LoopHint
Mode
NoBuiltin
NoEscape
OMPCaptureKind
OMPDeclareSimdDecl
OMPReferencedVar
ObjCBoxable
ObjCClassStub
ObjCDesignatedInitializer
ObjCDirect
ObjCDirectMembers
ObjCNonLazyClass
ObjCNonRuntimeProtocol
ObjCRuntimeName
ObjCRuntimeVisible
OpenCLAccess
RenderScriptKernel
SwiftObjCMembers
SwiftVersioned
SwiftVersionedRemoval
Thread
Attr
 Inherited
 Implicit
TemplateArgument
 contains-errors
 lvalue
 xvalue
 bitfield
 objcproperty
 objcsubscript
 vectorcomponent
 matrixcomponent
LocInfo Type
 sugar
 dependent
 instantiation_dependent
 variably_modified
 contains_unexpanded_pack
 imported
 used
 referenced
 invalid
 constexpr
 consteval
 <undeserialized declarations>
capture
 byref
 nested
<<<NULL>>> OMPClause
Clause
 <implicit>
case 
default
 selected
Indeterminate
Int 
Float 
FixedPoint 
Vector length=
element
ComplexInt 
ComplexFloat 
LValue <todo>
Array size=
fields
MemberPointer <todo>
AddrLabelDiff <todo>
<invalid sloc>
<not a builtin command>
 FPContractMode=
 RoundingMode=
 FPExceptionMode=
 AllowFEnvAccess=
 AllowFPReassociate=
 NoHonorNaNs=
 NoHonorInfs=
 NoSignedZero=
 AllowReciprocal=
 AllowApproxFunc=
 Text="
 Name="
 RenderNormal
 RenderBold
 RenderMonospaced
 RenderEmphasized
 RenderAnchor
 Arg[
 Attrs: 
 SelfClosing
 explicitly
 implicitly
 Param="
 ParamIndex=
 Position=<
" CloseName="
 null
 decl
 nullptr
 integral 
 template 
 template expansion 
 expr
 pack
 has_init
 has_var
 has_else
 gnu_range
 adl
 part_of_explicit_cast
 non_odr_use_unevaluated
 non_odr_use_constant
 non_odr_use_discarded
ADL) = '
 empty
 isFreeIvar
 field 
 result_dependent
 cannot overflow
' ComputeLHSTy=
 ComputeResultTy=
 this
 functional cast to 
 list
 elidable
 std::initializer_list
 zeroing
 (CXXTemporary
 array
 extended by 
 selector=
 class=
 super (instance)
 super (class)
 catch all
 Kind=MethodRef Getter="
" Setter="
 Kind=PropertyRef Property="
 Messaging=
Getter&Setter
Getter
Setter
 Kind=ArraySubscript GetterForArray="
 Kind=DictionarySubscript GetterForDictionary="
" SetterForArray="
" SetterForDictionary="
 begin 
 end 
 step 
 lower
 upper
 written as lvalue reference
 static
 altivec
 altivec pixel
 altivec bool
 neon
 neon poly
 fixed-length sve data vector
 fixed-length sve predicate vector
 noreturn
 produces_result
 regparm 
 trailing_return
 underlying_type
 depth 
 decltype(auto)
 undeduced
 alias
 expansions 
 __module_private__
 definition
 inline
 virtual
 pure
_delete
 delete
 trivial
 noexcept-unevaluated 
 noexcept-uninstantiated 
 <<<NULL params x 
 mangling 
 tls
 tls_dynamic
 nrvo
 cinit
 callinit
 listinit
 destroyed
 openmp_standalone_directive
 combiner
 initializer
 omp_priv = 
 omp_priv ()
 typename
 C++
 synthesize
 none
 protected
 public
 package
 covariant
 contravariant
 bounded
 optional
 readonly
 assign
 readwrite
 retain
 copy
 nonatomic
 atomic
 weak
 strong
 unsafe_unretained
 direct
 captures_this
 first 
 prev 
towardzero
tonearest
upward
downward
tonearestaway
 AddressDiscriminated
 Pointer
 Data
 AAPCS
 AAPCS_VFP
 IRQ
 FIQ
 SWI
 ABORT
 UNDEF
 Generic
 IsPointer
 IsLiteralLabel
 Unavailable
 Strict
 ByRef
 nocf
 Unknown
 Consumed
 Unconsumed
 IsDeref
 DT_Error
 DT_Warning
 ArgDependent
 Closed
 Open
 GeneratedDeclaration
 BestCase
 sw0
 sw1
 hw0
 hw1
 hw2
 hw3
 hw4
 hw5
 eic
 OMPNullMemAlloc
 OMPDefaultMemAlloc
 OMPLargeCapMemAlloc
 OMPConstMemAlloc
 OMPHighBWMemAlloc
 OMPLowLatMemAlloc
 OMPCGroupMemAlloc
 OMPPTeamMemAlloc
 OMPThreadMemAlloc
 OMPUserDefinedMemAlloc
 MT_To
 MT_Link
 DT_Host
 DT_NoHost
 DT_Any
 OMF_None
 OMF_alloc
 OMF_copy
 OMF_init
 OMF_mutableCopy
 OMF_new
 user
 supervisor
 machine
 None
 SwiftPrivate
 NotSwiftPrivate
 NonNullError
 ZeroArgument
 NonZeroArgument
 NullResult
 ZeroResult
 NonZeroResult
 NK_Struct
 NK_Enum
 LayoutCompatible
 MustBeNull
 Default
 Hidden
 Protected
 TMO_Malloc
 TMO_Calloc
 TMO_Realloc
 TMO_AlignedAlloc
 TMO_PosixMemalign
 IR_None
 IR_ARCForbiddenType
 IR_ForbiddenWeak
 IR_IgnoredWeak
 IR_ARCForbiddenConversion
 IR_ARCInitReturnsUnrelated
 IR_ARCFieldWithOwnership
 DefaultKey
 NoKey
 ProcessDependent
 ProcessIndependent
 DefaultAddressDiscrimination
 NoAddressDiscrimination
 AddressDiscrimination
 DefaultExtraDiscrimination
 NoExtraDiscrimination
 TypeDiscrimination
 CustomDiscrimination
 Vectorize
 VectorizeWidth
 Interleave
 InterleaveCount
 Unroll
 UnrollCount
 UnrollAndJam
 UnrollAndJamCount
 PipelineDisabled
 PipelineInitiationInterval
 Distribute
 VectorizePredicate
 Enable
 Disable
 Numeric
 AssumeSafety
 Full
 BS_Undefined
 BS_Inbranch
 BS_Notinbranch
 IsReplacedByActive
also in 
cleanup 
Overrides: [ 
DefinitionData
 parsing_base_specifiers
 lambda
 is_anonymous
 pass_in_registers
 aggregate
 standard_layout
 trivially_copyable
 pod
 polymorphic
 abstract
 literal
 has_user_declared_ctor
 has_constexpr_non_copy_move_ctor
 has_mutable_fields
 has_variant_members
 can_const_default_init
DefaultConstructor
 exists
 non_trivial
 user_provided
 needs_implicit
 defaulted_is_constexpr
CopyConstructor
 simple
 user_declared
 has_const_param
 needs_overload_resolution
 defaulted_is_deleted
 implicit_has_const_param
MoveConstructor
CopyAssignment
MoveAssignment
 irrelevant
target 
nominated 
constructed 
typename
class
struct
__interface
union
enum
Adjusted
Decayed
ConstantArray
DependentSizedArray
IncompleteArray
VariableArray
Atomic
Attributed
BlockPointer
Builtin
Complex
Decltype
Auto
DeducedTemplateSpecialization
DependentAddressSpace
DependentExtInt
DependentName
DependentSizedExtVector
DependentTemplateSpecialization
DependentVector
DynamicCountPointer
DynamicRangePointer
Elaborated
ExtInt
FunctionNoProto
FunctionProto
InjectedClassName
MacroQualified
ConstantMatrix
DependentSizedMatrix
MemberPointer
ObjCObjectPointer
ObjCObject
ObjCInterface
ObjCTypeParam
PackExpansion
Paren
Pipe
Pointer
LValueReference
RValueReference
SubstTemplateTypeParmPack
SubstTemplateTypeParm
Enum
Record
TemplateSpecialization
TemplateTypeParm
TypeOfExpr
TypeOf
Typedef
UnaryTransform
UnresolvedUsing
Vector
ExtVector
__fp16
short _Accum
_Accum
long _Accum
unsigned short _Accum
unsigned _Accum
unsigned long _Accum
short _Fract
_Fract
long _Fract
unsigned short _Fract
unsigned _Fract
unsigned long _Fract
_Sat short _Accum
_Sat _Accum
_Sat long _Accum
_Sat unsigned short _Accum
_Sat unsigned _Accum
_Sat unsigned long _Accum
_Sat short _Fract
_Sat _Fract
_Sat long _Fract
_Sat unsigned short _Fract
_Sat unsigned _Fract
_Sat unsigned long _Fract
__wchar_t
nullptr_t
<overloaded function type>
<bound member function type>
<pseudo-object type>
<dependent type>
<unknown type>
<ARC unbridged cast type>
<builtin fn type>
__read_only image1d_t
__read_only image1d_array_t
__read_only image1d_buffer_t
__read_only image2d_t
__read_only image2d_array_t
__read_only image2d_depth_t
__read_only image2d_array_depth_t
__read_only image2d_msaa_t
__read_only image2d_array_msaa_t
__read_only image2d_msaa_depth_t
__read_only image2d_array_msaa_depth_t
__read_only image3d_t
__write_only image1d_t
__write_only image1d_array_t
__write_only image1d_buffer_t
__write_only image2d_t
__write_only image2d_array_t
__write_only image2d_depth_t
__write_only image2d_array_depth_t
__write_only image2d_msaa_t
__write_only image2d_array_msaa_t
__write_only image2d_msaa_depth_t
__write_only image2d_array_msaa_depth_t
__write_only image3d_t
__read_write image1d_t
__read_write image1d_array_t
__read_write image1d_buffer_t
__read_write image2d_t
__read_write image2d_array_t
__read_write image2d_depth_t
__read_write image2d_array_depth_t
__read_write image2d_msaa_t
__read_write image2d_array_msaa_t
__read_write image2d_msaa_depth_t
__read_write image2d_array_msaa_depth_t
__read_write image3d_t
<incomplete matrix index type>
<OpenMP array section type>
<OpenMP array shaping type>
<OpenMP iterator type>
cdecl
stdcall
fastcall
thiscall
pascal
vectorcall
ms_abi
sysv_abi
regcall
aapcs
aapcs-vfp
aarch64_vector_pcs
intel_ocl_bicc
spir_function
opencl_kernel
swiftcall
swiftasynccall
preserve_most
preserve_all
swift_context
swift_async_context
swift_error_result
swift_indirect_result
__ptrauth(
__attribute__((address_space(
NULL TYPE
_Atomic(
_Complex 
unsigned 
__vector __pixel 
__vector __bool 
__vector 
__attribute__((neon_vector_type(
))) 
__attribute__((neon_polyvector_type(
__attribute__((__vector_size__(
 * sizeof(
)))) 
__attribute__((__arm_sve_vector_bits__(
 * 8
) * 8
 __sized_by(
 __counted_by(
 __ended_by(
 /* __started_by(
) */ 
 __attribute__((matrix_type(
read_only 
write_only 
pipe 
__unsafe_indexable
__single
__indexable
__bidi_indexable
std::function<
(anonymous namespace)::
type-parameter-
typeof 
typeof(
__underlying_type(
) * 8))) 
__counted_by(
 __attribute__((
pcs(
"aapcs"
"aapcs-vfp"
inteloclbicc
 __attribute__((ext_vector_type(
 __attribute__((pcs("aapcs")))
 __attribute__((pcs("aapcs-vfp")))
__attribute__((aarch64_vector_pcs))
__attribute__((swiftasynccall))
 __attribute__((regparm (
__attribute__((ns_consumed)) 
__attribute__((noescape)) 
 [scalar deleting]
VFTable indices for 
 entry
 entries
 -- accessible via 
vbtable index 
vfptr at offset 
%4llu | 
Original map
Construction vtable for ('
) in '
Vtable for '
 entries).
%4d | 
vcall_offset (
vbase_offset (
offset_to_top (
 RTTI
 [pure]
 [deleted]
       [return adjustment: 
 non-virtual
 vbase offset offset
       [this adjustment: 
 vcall offset offset
() [complete]
() [deleting]
[unused] 
       -- (
) vtable address --
Virtual base offset offsets for '
Thunks for '
return adjustment: 
       
this adjustment: 
 [complete]
 [deleting]
VTable indices for '
 method: 
VFTable for 
() [scalar deleting]
Unexpected vftable component type %0 for component number %1
[return adjustment (to type '
'): 
vbptr at offset 
vbase #
 non-virtual]
[this adjustment: 
vtordisp at 
vbptr at 
 to the left,
 vboffset at 
 in the vbtable, 
Loading API notes from 
APINotes
_private.
PrivateHeaders
APINotes.
IDENTIFIER_BLOCK
OBJC_CONTEXT_BLOCK
OBJC_CONTEXT_ID_DATA
OBJC_PROPERTY_BLOCK
OBJC_PROPERTY_DATA
OBJC_METHOD_BLOCK
OBJC_METHOD_DATA
OBJC_SELECTOR_BLOCK
OBJC_SELECTOR_DATA
GLOBAL_VARIABLE_BLOCK
GLOBAL_VARIABLE_DATA
GLOBAL_FUNCTION_BLOCK
GLOBAL_FUNCTION_DATA
AvailabilityMsg
SwiftInferImportAsMember
SwiftVersions
TVOS
nonswift
Classes
Protocols
Functions
Globals
Enumerators
Tags
Typedefs
AuditedForNullability
Methods
Properties
MethodKind
Parameters
Nullability
NullabilityOfRet
RetainCountConvention
FactoryAsInit
DesignatedInit
Required
ResultType
Instance
Position
Nonnull
Unspecified
NullableResult
Scalar
PropertyKind
SwiftImportAsAccessors
EnumKind
closed
CFEnum
NSEnum
CFOptions
NSOptions
CFClosedEnum
NSClosedEnum
SwiftWrapper
multiple definitions of class '
multiple definitions of protocol '
multiple definitions of global variable '
multiple definitions of global function '
multiple definitions of enumerator '
multiple definitions Of tag '
cannot mix EnumKind and EnumExtensibility (for 
cannot mix EnumKind and FlagEnum (for 
multiple definitions of typedef '
duplicate definition of method '
duplicate definition of instance property '
duplicate definition of class property '
selector 
is missing a ':' at the end
'FactoryAsInit' is no longer valid; use 'SwiftName' instead
availability message for available API '
' will not be used
nullability info for 
 does not fit
Only one suspend point can be marked as final
coroutine should have exactly one defining @llvm.coro.begin
Only one coro.end can be marked as fallthrough
coro.id must be paired with coro.suspend
ptrauth-signed prototype must not have address diversity
coro.id.retcon.* must be paired with coro.suspend.retcon
argument to coro.suspend.retcon does not match corresponding prototype function result
wrong number of arguments to coro.suspend.retcon
wrong number of results from coro.suspend.retcon
result from coro.suspend.retcon does not match corresponding prototype function param
size argument to coro.id.retcon.* must be constant
alignment argument to coro.id.retcon.* must be constant
size argument to coro.id.async must be constant
alignment argument to coro.id.async must be constant
storage argument offset to coro.id.async must be constant
llvm.coro.end.async must tail call function argument type must match the tail arguments
llvm.coro.id.retcon.* prototype not a Function
llvm.coro.id.retcon prototype must return pointer as first result
llvm.coro.id.retcon prototype return type must be same ascurrent function return type
llvm.coro.id.retcon.* prototype must take pointer as its first parameter
llvm.coro.* allocator not a Function
llvm.coro.* allocator must return a pointer
llvm.coro.* allocator must take integer as only param
llvm.coro.* deallocator not a Function
llvm.coro.* deallocator must return void
llvm.coro.* deallocator must take pointer as only param
llvm.coro.id.async async function pointer not a global
llvm.coro.id.async async function pointer argument's type is not <{i32, i32}>
llvm.coro.suspend.async resume function projection function must return an i8* type
llvm.coro.suspend.async resume function projection function must take one i8* type as parameter
llvm.coro.alloc
llvm.coro.begin
llvm.coro.subfn.addr
llvm.coro.free
llvm.coro.id
llvm.coro.id.retcon
llvm.coro.id.retcon.once
llvm.coro.async.size.replace
Lower all coroutine related intrinsics
Coroutine Cleanup
llvm.coro.id.async
llvm.coro.destroy
llvm.coro.done
llvm.coro.end
llvm.coro.end.async
llvm.coro.noop
llvm.coro.promise
llvm.coro.resume
llvm.coro.suspend
coroutine.presplit
NoopCoro.Frame
NoopCoro.ResumeDestroy
NoopCoro.Frame.Const
Lower early coroutine intrinsics
vFrame
Call referring to the coroutine frame cannot be marked as musttail
Coroutine frame allocation elision and indirect calls replacement
Coroutine Elision
coro.devirt.trigger
reuse-storage-in-coroutine-frame
Enable the optimization which would reuse the storage in the coroutine          frame for allocas whose liferanges are not overlapped, for testing purposes
CoroSave
CoroSuspend
CoroEnd
MustTailCall.Before.CoroEnd
token definition is separated from the use by a suspend point
After
.from.
.corodispatch
Unable to handle an alias with unknown offset created before CoroBegin.
The alignment requirment of frame variables cannot be higher than the alignment of the async function context
Coroutines cannot handle non static allocas yet
FramePtr
.spill.addr
.reload.addr
.reload
AllocaSpillBB
PostSpill
Coroutines cannot handle copying of array allocas yet
.cast
llvm.coro.prepare.retcon
llvm.coro.prepare.async
While splitting coroutine 
.resume
.destroy
resume.entry
index.addr
ResumeFn.addr
resume.
.landing
async.ctx.frameptr
Broken function
resume.addr
destroy.addr
.resumers
.resume.
__swift_async_resume_project_context
coro.return
Split coroutine into a set of functions driving its state machine
Coroutine Splitting
Inliner for always_inline functions
indirect call
unsplited coroutine call
no definition
no alwaysinline attribute
always inliner
always inline attribute
Annotation2Metadata
.val
{0}.{1:$[.]}.val
Promote 'by reference' arguments to scalars
attributor-manifest
Determine what attributes are manifested in the IR
NumFnDeleted
Number of function deleted
NumFnWithExactDefinition
Number of functions with exact definitions
NumFnWithoutExactDefinition
Number of functions without exact definitions
NumFnShallowWrappersCreated
Number of shallow wrappers created
NumAttributesTimedOut
Number of abstract attributes timed out before fixpoint
NumAttributesValidFixpoint
Number of abstract attributes in a valid fixpoint state
NumAttributesManifested
Number of abstract attributes manifested in IR
NumAttributesFixedDueToRequiredDependences
Number of abstract attributes fixed due to required dependences
attributor-max-iterations
Maximal number of fixpoint iterations.
attributor-max-initialization-chain-length
Maximal number of chained initializations (to avoid stack overflows)
attributor-max-iterations-verify
Verify that max-iterations is a tight bound for a fixpoint
attributor-annotate-decl-cs
Annotate call sites of function declarations.
enable-heap-to-stack-conversion
attributor-allow-shallow-wrappers
Allow the Attributor to create shallow wrappers for non-exact definitions.
attributor-allow-deep-wrappers
Allow the Attributor to use IP information derived from non-exact functions via cloning
attributor-dump-dep-graph
Dump the dependency graph to dot files.
attributor-depgraph-dot-filename-prefix
The prefix used for the CallGraph dot file names.
attributor-view-dep-graph
View the dependency graph.
attributor-print-dep
Print attribute dependencies
Attributor::runTillFixpoint
[Attributor] Fixpoint iteration done after: 
 iterations
Attributor::manifestAttributes
Unexpected abstract attribute: 
 :: 
Attributor::cleanupIR
.dead
Attributor::run
::updateAA
fn_ret
cs_ret
cs_arg
set-state(< {
full-set
undef 
} >)
] for CtxI 
<<null inst>>
 at position 
 with state 
  updates 
Dependency Graph
dep_graph
Dependency graph dump to 
AADepNode Impl
.internalized
Deduce and propagate attributes
Deduce and propagate attributes (CGSCC pass)
::initialize
file exists, overwriting
error writing into file
writing to the newly created file 
error opening file '
' for writing!
digraph unnamed {
label="
Node
 [shape=record,
label="{
}"];
 -> Node
attributor-manifest-internal
Manifest Attributor internal string attributes.
max-heap-to-stack-size
attributor-max-potential-values
Maximum number of potential values to be tracked for each position.
NumAAs
Number of abstract attributes created
stack,
constant,
internal global,
external global,
argument,
inaccessible,
malloced,
unknown,
nounwind
may-unwind
NumIRFunction_nounwind
Number of functions marked 'nounwind'
NumIRCS_nounwind
Number of call site marked 'nounwind'
nosync
may-sync
NumIRFunction_nosync
Number of functions marked 'nosync'
NumIRCS_nosync
Number of call site marked 'nosync'
norecurse
may-recurse
NumIRFunction_norecurse
Number of functions marked 'norecurse'
NumIRCS_norecurse
Number of call site marked 'norecurse'
willreturn
may-noreturn
NumIRFunction_willreturn
Number of functions marked 'willreturn'
NumIRCS_willreturn
Number of call site marked 'willreturn'
may-return
NumIRFunction_noreturn
Number of functions marked 'noreturn'
NumIRCS_noreturn
Number of call site marked 'noreturn'
returns(#
may-return(#
)[#UC: 
AAReturnedValues
NumIRFunctionReturn_KnownReturnValues
Number of function with known return values
NumIRFunctionReturn_UniqueReturnValue
Number of function with unique return
NumIRFunctionReturn_UniqueConstantReturnValue
Number of function returns replaced by constant return
NumIRArguments_returned
Number of arguments marked 'returned'
AAMemoryLocation
NumIRFunction_readnone
Number of functions marked 'readnone'
NumIRFunction_argmemonly
Number of functions marked 'argmemonly'
NumIRFunction_inaccessiblememonly
Number of functions marked 'inaccessiblememonly'
NumIRFunction_inaccessiblememorargmemonly
Number of functions marked 'inaccessiblememorargmemonly'
NumIRCS_readnone
Number of call site marked 'readnone'
may-null
NumIRFunctionReturn_nonnull
Number of function returns marked 'nonnull'
NumIRArguments_nonnull
Number of arguments marked 'nonnull'
NumIRCSReturn_nonnull
Number of call site returns marked 'nonnull'
NumIRCSArguments_nonnull
Number of call site arguments marked 'nonnull'
may-alias
NumIRFloating_noalias
Number of floating values known to be 'noalias'
NumIRArguments_noalias
Number of arguments marked 'noalias'
NumIRFunctionReturn_noalias
Number of function returns marked 'noalias'
NumIRCSReturn_noalias
Number of call site returns marked 'noalias'
NumIRCSArguments_noalias
Number of call site arguments marked 'noalias'
[priv]
[no-priv]
AAPrivatizablePtr
NumIRFloating_privatizable_ptr
Number of floating values known to be 'privatizable_ptr'
.priv
NumIRArguments_privatizable_ptr
Number of arguments marked 'privatizable_ptr'
NumIRFunctionReturn_privatizable_ptr
Number of function returns marked 'privatizable_ptr'
NumIRCSReturn_privatizable_ptr
Number of call site returns marked 'privatizable_ptr'
NumIRCSArguments_privatizable_ptr
Number of call site arguments marked 'privatizable_ptr'
unknown-dereferenceable
_or_null
_globally
AADereferenceable
NumIRFloating_dereferenceable
Number of floating values known to be 'dereferenceable'
NumIRArguments_dereferenceable
Number of arguments marked 'dereferenceable'
NumIRFunctionReturn_dereferenceable
Number of function returns marked 'dereferenceable'
NumIRCS_dereferenceable
Number of call site marked 'dereferenceable'
NumIRCSArguments_dereferenceable
Number of call site arguments marked 'dereferenceable'
align<
NumIRStore_AAAlign
Number of times alignment added to a store
NumIRLoad_AAAlign
Number of times alignment added to a load
NumIRFloating_align
Number of floating values known to be 'align'
NumIRArguments_aligned
Number of arguments marked 'aligned'
NumIRFunctionReturn_aligned
Number of function returns marked 'aligned'
NumIRCS_align
Number of call site marked 'align'
NumIRCSArguments_aligned
Number of call site arguments marked 'aligned'
known not-captured
assumed not-captured
known not-captured-maybe-returned
assumed not-captured-maybe-returned
assumed-captured
NumIRFloating_nocapture
Number of floating values known to be 'nocapture'
no-capture-maybe-returned
NumIRArguments_nocapture
Number of arguments marked 'nocapture'
NumIRCSReturn_nocapture
Number of call site returns marked 'nocapture'
NumIRCSArguments_nocapture
Number of call site arguments marked 'nocapture'
range(
AAValueConstantRange
NumIRFloating_value_range
Number of floating values known to be 'value_range'
NumIRArguments_value_range
Number of arguments marked 'value_range'
NumIRFunctionReturn_value_range
Number of function returns marked 'value_range'
NumIRCSReturn_value_range
Number of call site returns marked 'value_range'
NumIRCSArguments_value_range
Number of call site arguments marked 'value_range'
AAPotentialValues
NumIRFloating_potential_values
Number of floating values known to be 'potential_values'
NumIRArguments_potential_values
Number of arguments marked 'potential_values'
NumIRFunctionReturn_potential_values
Number of function returns marked 'potential_values'
NumIRCSReturn_potential_values
Number of call site returns marked 'potential_values'
NumIRCSArguments_potential_values
Number of call site arguments marked 'potential_values'
noundef
may-undef-or-poison
NumIRFunctionReturn_noundef
Number of function returns marked 'noundef'
NumIRArguments_noundef
Number of arguments marked 'noundef'
NumIRCSReturn_noundef
Number of call site returns marked 'noundef'
NumIRCSArguments_noundef
Number of call site arguments marked 'noundef'
simplified
maybe-simple
not-simple
NumIRFunction_value_simplify
Number of functions marked 'value_simplify'
NumIRCS_value_simplify
Number of call site marked 'value_simplify'
NumIRFloating_value_simplify
Number of floating values known to be 'value_simplify'
NumIRArguments_value_simplify
Number of arguments marked 'value_simplify'
NumIRFunctionReturn_value_simplify
Number of function returns marked 'value_simplify'
NumIRCSReturn_value_simplify
Number of call site returns marked 'value_simplify'
NumIRCSArguments_value_simplify
Number of call site arguments marked 'value_simplify'
Live[#BB 
][#TBEP 
][#KDE 
NumIRBasicBlock_AAIsDead
Number of dead basic blocks deleted.
assumed-dead
assumed-live
NumIRFloating_IsDead
Number of floating values known to be 'IsDead'
NumIRArguments_IsDead
Number of arguments marked 'IsDead'
NumIRFunctionReturn_IsDead
Number of function returns marked 'IsDead'
assumed-dead-users
NumIRCSReturn_IsDead
Number of call site returns marked 'IsDead'
NumIRCSReturn_UnusedResult
Number of call site returns marked 'UnusedResult'
NumIRCSArguments_IsDead
Number of call site arguments marked 'IsDead'
nofree
may-free
NumIRFunction_nofree
Number of functions marked 'nofree'
NumIRCS_nofree
Number of call site marked 'nofree'
NumIRFloating_nofree
Number of floating values known to be 'nofree'
NumIRArguments_nofree
Number of arguments marked 'nofree'
NumIRCSReturn_nofree
Number of call site returns marked 'nofree'
NumIRCSArguments_nofree
Number of call site arguments marked 'nofree'
[H2S] Mallocs: 
malloc_bc
calloc_bc
NumIRFunction_MallocCalls
Number of malloc/calloc/aligned_alloc calls converted to allocas
NumIRFunction_reachable
Number of functions marked 'reachable'
undefined-behavior
no-ub
AAUndefinedBehavior
NumIRInstruction_UndefinedBehaviorInstruction
Number of instructions known to have UB
AAMemoryBehavior
NumIRFunction_readonly
Number of functions marked 'readonly'
NumIRFunction_writeonly
Number of functions marked 'writeonly'
NumIRCS_readonly
Number of call site marked 'readonly'
NumIRCS_writeonly
Number of call site marked 'writeonly'
NumIRFloating_readnone
Number of floating values known to be 'readnone'
NumIRFloating_readonly
Number of floating values known to be 'readonly'
NumIRFloating_writeonly
Number of floating values known to be 'writeonly'
NumIRArguments_readnone
Number of arguments marked 'readnone'
NumIRArguments_readonly
Number of arguments marked 'readonly'
NumIRArguments_writeonly
Number of arguments marked 'writeonly'
NumIRCSArguments_readnone
Number of call site arguments marked 'readnone'
NumIRCSArguments_readonly
Number of call site arguments marked 'readonly'
NumIRCSArguments_writeonly
Number of call site arguments marked 'writeonly'
A No-Op Barrier Pass
barrier
block-extractor
NumExtracted
Number of basic blocks extracted
extract-blocks-file
A file containing list of basic blocks to extract
extract-blocks-erase-funcs
Erase the existing functions
BlockExtractor couldn't load the file.
Invalid line format, expecting lines like: 'funcname bb1[;bb2..]'
Missing bbs name
Invalid function name specified in the input file
Invalid block name specified in the input file
Invalid basic block
cvp-max-functions-per-value
The maximum number of functions to track per lattice value
overdefined
untracked
unknown lattice value
unknown lattice key
Undefined  
Overdefined
Untracked  
FunctionSet
<reg> 
<mem> 
<ret> 
Called Value Propagation
Merge Duplicate Global Constants
cfi.functions
__cfi_check
+thumb-mode
CallSiteTypeId
Addr
CFICheckFailData
newret
oldret
Dead Argument Elimination
Eliminate Available Externally Globals
force-attribute
Add an attribute to a function. This should be a pair of 'function-name:attribute-name', for example -force-attribute=foo:noinline. This option can be specified multiple times.
force-remove-attribute
Remove an attribute from a function. This should be a pair of 'function-name:attribute-name', for example -force-remove-attribute=foo:noinline. This option can be specified multiple times.
Force set function attributes
NumReadNone
Number of functions marked readnone
NumReadOnly
Number of functions marked readonly
NumWriteOnly
Number of functions marked writeonly
NumNoCapture
Number of arguments marked nocapture
NumReturned
Number of arguments marked returned
NumReadNoneArg
Number of arguments marked readnone
NumReadOnlyArg
Number of arguments marked readonly
NumNoAlias
Number of function returns marked noalias
NumNonNullReturn
Number of function returns marked nonnull
NumNoRecurse
Number of functions marked as norecurse
NumNoUnwind
Number of functions marked as nounwind
NumNoFree
Number of functions marked as nofree
NumWillReturn
Number of functions marked as willreturn
enable-nonnull-arg-prop
Try to propagate nonnull argument attributes from callsites to caller functions.
disable-nounwind-inference
Stop inferring nounwind attribute during function-attrs pass
disable-nofree-inference
Stop inferring nofree attribute during function-attrs pass
Deduce function attributes
Deduce function attributes in RPO
NumImportedFunctionsThinLink
Number of functions thin link decided to import
NumImportedHotFunctionsThinLink
Number of hot functions thin link decided to import
NumImportedCriticalFunctionsThinLink
Number of critical functions thin link decided to import
NumImportedGlobalVarsThinLink
Number of global variables thin link decided to import
NumImportedFunctions
Number of functions imported in backend
NumImportedGlobalVars
Number of global variables imported in backend
NumImportedModules
Number of modules imported from
NumDeadSymbols
Number of dead stripped symbols in index
NumLiveSymbols
Number of live symbols in index
import-instr-limit
Only import functions with less than N instructions
import-cutoff
Only import first N functions if N>=0 (default -1)
import-instr-evolution-factor
As we import functions, multiply the `import-instr-limit` threshold by this factor before processing newly imported functions
import-hot-evolution-factor
As we import functions called from hot callsite, multiply the `import-instr-limit` threshold by this factor before processing newly imported functions
import-hot-multiplier
Multiply the `import-instr-limit` threshold for hot callsites
import-critical-multiplier
Multiply the `import-instr-limit` threshold for critical callsites
import-cold-multiplier
Multiply the `import-instr-limit` threshold for cold callsites
print-imports
Print imported functions
print-import-failures
Print information for functions rejected for importing
compute-dead
Compute dead symbols
enable-import-metadata
Enable import metadata like 'thinlto_src_module'
summary-file
The summary file to use for function importing.
import-all-index
Import all external functions in index.
can't convert llvm.ptrauth to declaration!
thinlto_src_module
: Import 
Function Import: link error: 
Missed imports into module 
: Reason = 
, Threshold = 
, Size = 
, MaxHotness = 
, Attempts = 
GlobalVar
NotLive
TooLarge
InterposableLinkage
LocalLinkageNotInModule
NotEligible
critical
thinlto-internalize
error: -function-import requires -summary-file
Error loading file '
Error renaming module
Error importing module: 
Abort
.llvm.
enable-vfe
Enable virtual function elimination
NumAliases
Number of global aliases removed
NumFunctions
Number of functions removed
NumIFuncs
Number of indirect functions removed
NumVariables
Number of global variables removed
NumVFuncs
Number of virtual functions removed
Dead Global Elimination
NumMarked
Number of globals marked constant
NumUnnamed
Number of globals marked unnamed_addr
NumSRA
Number of aggregate globals broken into scalars
NumHeapSRA
Number of heap objects SRA'd
NumSubstitute
Number of globals with initializers stored into them
NumDeleted
Number of globals deleted
NumGlobUses
Number of global uses devirtualized
NumLocalized
Number of globals localized
NumShrunkToBool
Number of global vars shrunk to booleans
NumFastCallFns
Number of functions converted to fastcc
NumCtorsEvaluated
Number of static ctors evaluated
NumNestRemoved
Number of nest attributes removed
NumAliasesResolved
Number of global aliases resolved
NumAliasesRemoved
Number of global aliases eliminated
NumCXXDtorsRemoved
Number of global C++ destructors removed
NumInternalFunc
Number of internal functions
NumColdCC
Number of functions marked coldcc
enable-coldcc-stress-test
Enable stress test of coldcc by adding calling conv to all internal functions.
coldcc-rel-freq
Maximum block frequency, expressed as a percentage of caller's entry frequency, for a call site to be considered cold for enablingcoldcc
.body
newgv
notinit
malloc_cont
malloc_ret_null
free_it
preallocated
paarg
Global Variable Optimizer
Global splitter
NumColdRegionsFound
Number of cold regions found.
NumColdRegionsOutlined
Number of cold regions outlined.
hot-cold-static-analysis
hotcoldsplit-threshold
Base penalty for splitting cold code (as a multiple of TCC_Basic)
enable-cold-section
Enable placement of extracted cold functions into a separate section after hot-cold splitting.
hotcoldsplit-cold-section-name
Name for the section containing cold functions extracted by hot-cold splitting.
hotcoldsplit-max-params
Maximum number of parameters for a split function
cold.
nosanitize
Hot Cold Splitting
HotColdSplit
Original
 split cold code into 
Split
ExtractFailed
Failed to extract region at block 
enable-linkonceodr-ir-outlining
Enable the IR outliner on linkonceodr functions
ir-outlining-no-cost
Debug option to outline greedily, without restriction that calculated benefit outweighs cost
_to_outline
_after_outline
outlined_ir_func_
final_block
output_block_
IR Outliner
WouldNotDecreaseSize
did not outline 
 regions due to estimated increase of 
InstructionIncrease
 instructions at locations 
DebugLoc
Outlined
outlined 
 regions with decrease of 
Infer set function attributes
Function Integration/Inlining
NumInlined
NumCallsDeleted
Number of call sites deleted, not inlined
Number of functions deleted because all callers found
NumMergedAllocas
Number of allocas merged together
disable-inlined-alloca-merging
inliner-function-import-stats
basic
basic statistics
verbose
printing of statistics for each inlined function
Enable inliner stats for imported functions
unavailable definition
optnone attribute
recursive
recursive SCC split
Could not setup Inlining Advisor for the requested mode and/or options
trivially dead
NoDefinition
 will not be inlined into 
 because its definition is unavailable
NotInlined
Reason
Number of aliases internalized
Number of functions internalized
NumGlobals
Number of global vars internalized
internalize-public-api-file
A file containing list of symbol names to preserve
internalize-public-api-list
A list of symbol names to preserve
__stack_chk_fail
__stack_chk_guard
WARNING: Internalize couldn't load file '
'! Continuing as if it's empty.
ByteArraySizeBits
Byte array size in bits
ByteArraySizeBytes
Byte array size in bytes
NumByteArraysCreated
Number of byte arrays created
NumTypeTestCallsLowered
Number of type test calls lowered
NumTypeIdDisjointSets
Number of disjoint sets of type identifiers
lowertypetests-avoid-reuse
Try to avoid reuse of byte array addresses using aliases
lowertypetests-summary-action
What to do with the summary when running this pass
Do nothing
Import typeid resolutions from summary and globals
export
Export typeid resolutions to summary and globals
lowertypetests-read-summary
Read summary from given YAML file before running pass
lowertypetests-write-summary
Write summary to given YAML file after running pass
cfi-canonical-jump-table
Lower type metadata
-lowertypetests-read-summary: 
-lowertypetests-write-summary: 
GlobalValueMap
TypeIdMap
WithGlobalValueDeadStripping
CfiFunctionDefs
CfiFunctionDecls
Linkage
NotEligibleToImport
Live
CanAutoHide
Refs
TypeTests
TypeTestAssumeVCalls
TypeCheckedLoadVCalls
TypeTestAssumeConstVCalls
TypeCheckedLoadConstVCalls
GUID
VFunc
Args
key not an integer
TTRes
WPDRes
Kind
SizeM1BitWidth
AlignLog2
SizeM1
BitMask
InlineBits
Unsat
ByteArray
Single
AllOnes
SingleImplName
ResByArg
Indir
SingleImpl
BranchFunnel
Info
UniformRetVal
UniqueRetVal
VirtualConstProp
unexpected call to llvm.icall.branch.funnel during import phase
Second argument of llvm.type.test must be metadata
llvm.icall.branch.funnel not supported on this target
number of arguments should be odd
Expected branch funnel operand to be global value
aliases
symvers
.symver 
size_m1
byte_array
bit_mask
inline_bits
__typeid_
bits_use
.cfi
.cfi_jt
__cfi_global_var_init
__TEXT,__StaticInit,regular,pure_instructions
.text.startup
All operands of type metadata must have 2 elements
Bit set element may not be thread-local
A member of a type identifier may not have an explicit section
Type offset must be a constant
Type offset must be an integer constant
Type identifier may not contain both global variables and functions
Unsupported architecture for jump tables
.cfi.jumptable
-thumb-mode
cortex-a8
jmp ${
:c}@plt
int3
int3
int3
bti c
b.w $
wasm.index
bits
NumFunctionsMerged
NumThunksWritten
NumAliasesWritten
Number of aliases generated
NumDoubleWeak
Number of new functions created
mergefunc-sanity
How many functions in module could be used for MergeFunctions pass sanity check. '0' disables this check. Works only with '-debug' key.
mergefunc-preserve-debug-info
Preserve debug info in thunk when mergefunc transformations are made.
mergefunc-use-aliases
Allow mergefunc to create aliases
Merge Functions
openmp-opt-disable
Disable OpenMP specific optimizations.
openmp-opt-enable-merging
Enable the OpenMP region merging optimization.
openmp-print-icv-values
openmp-print-gpu-kernels
openmp-hide-memory-transfer-latency
[WIP] Tries to hide the latency of host to device memory transfers
openmp-opt
NumOpenMPRuntimeCallsDeduplicated
Number of OpenMP runtime calls deduplicated
NumOpenMPParallelRegionsDeleted
Number of OpenMP parallel regions deleted
NumOpenMPRuntimeFunctionsIdentified
Number of OpenMP runtime functions identified
NumOpenMPRuntimeFunctionUsesIdentified
Number of OpenMP runtime function uses identified
NumOpenMPTargetRegionKernels
Number of OpenMP target region entry points (=kernels) identified
NumOpenMPParallelRegionsReplacedInGPUStateMachine
Number of OpenMP parallel regions replaced with ID in GPU state machines
NumOpenMPParallelRegionsMerged
Number of OpenMP parallel regions merged
__kmpc_barrier
__kmpc_cancel
__kmpc_cancel_barrier
__kmpc_flush
__kmpc_global_thread_num
__kmpc_fork_call
__kmpc_omp_taskwait
__kmpc_omp_taskyield
__kmpc_push_num_threads
__kmpc_push_proc_bind
__kmpc_omp_reg_task_with_affinity
omp_get_thread_num
omp_get_num_threads
omp_get_max_threads
omp_in_parallel
omp_get_dynamic
omp_get_cancellation
omp_get_nested
omp_get_schedule
omp_get_thread_limit
omp_get_supported_active_levels
omp_get_max_active_levels
omp_get_level
omp_get_ancestor_thread_num
omp_get_team_size
omp_get_active_level
omp_in_final
omp_get_proc_bind
omp_get_num_places
omp_get_num_procs
omp_get_place_proc_ids
omp_get_place_num
omp_get_partition_num_places
omp_get_partition_place_nums
omp_set_num_threads
omp_set_dynamic
omp_set_nested
omp_set_schedule
omp_set_max_active_levels
__kmpc_master
__kmpc_end_master
__kmpc_critical
__kmpc_critical_with_hint
__kmpc_end_critical
__kmpc_begin
__kmpc_end
__kmpc_reduce
__kmpc_reduce_nowait
__kmpc_end_reduce
__kmpc_end_reduce_nowait
__kmpc_ordered
__kmpc_end_ordered
__kmpc_for_static_fini
__kmpc_dist_dispatch_init_4
__kmpc_dist_dispatch_init_4u
__kmpc_dist_dispatch_init_8
__kmpc_dist_dispatch_init_8u
__kmpc_team_static_init_4
__kmpc_team_static_init_4u
__kmpc_team_static_init_8
__kmpc_team_static_init_8u
__kmpc_dist_for_static_init_4
__kmpc_dist_for_static_init_4u
__kmpc_dist_for_static_init_8
__kmpc_dist_for_static_init_8u
__kmpc_single
__kmpc_end_single
__kmpc_omp_task_alloc
__kmpc_omp_task
__kmpc_end_taskgroup
__kmpc_taskgroup
__kmpc_omp_task_begin_if0
__kmpc_omp_task_complete_if0
__kmpc_omp_task_with_deps
__kmpc_taskloop
__kmpc_omp_target_task_alloc
__kmpc_taskred_modifier_init
__kmpc_taskred_init
__kmpc_task_reduction_modifier_fini
__kmpc_task_reduction_get_th_data
__kmpc_task_reduction_init
__kmpc_task_reduction_modifier_init
__kmpc_proxy_task_completed_ooo
__kmpc_omp_wait_deps
__kmpc_cancellationpoint
__kmpc_fork_teams
__kmpc_push_num_teams
__kmpc_copyprivate
__kmpc_threadprivate_cached
__kmpc_threadprivate_register
__kmpc_doacross_init
__kmpc_doacross_post
__kmpc_doacross_wait
__kmpc_doacross_fini
__kmpc_alloc
__kmpc_free
__kmpc_init_allocator
__kmpc_destroy_allocator
__kmpc_push_target_tripcount
__tgt_target_mapper
__tgt_target_nowait_mapper
__tgt_target_teams_mapper
__tgt_target_teams_nowait_mapper
__tgt_register_requires
__tgt_target_data_begin_mapper
__tgt_target_data_begin_nowait_mapper
__tgt_target_data_begin_mapper_issue
__tgt_target_data_begin_mapper_wait
__tgt_target_data_end_mapper
__tgt_target_data_end_nowait_mapper
__tgt_target_data_update_mapper
__tgt_target_data_update_nowait_mapper
__tgt_mapper_num_components
__tgt_push_mapper_component
__kmpc_task_allow_completion_event
__kmpc_kernel_init
__kmpc_kernel_deinit
__kmpc_spmd_kernel_init
__kmpc_spmd_kernel_deinit_v2
__kmpc_kernel_prepare_parallel
__kmpc_kernel_parallel
__kmpc_kernel_end_parallel
__kmpc_serialized_parallel
__kmpc_end_serialized_parallel
__kmpc_shuffle_int32
__kmpc_nvptx_parallel_reduce_nowait_v2
__kmpc_nvptx_end_reduce_nowait
__kmpc_nvptx_teams_reduce_nowait_v2
__kmpc_shuffle_int64
__kmpc_data_sharing_init_stack
__kmpc_data_sharing_init_stack_spmd
__kmpc_data_sharing_coalesced_push_stack
__kmpc_data_sharing_push_stack
__kmpc_data_sharing_pop_stack
__kmpc_begin_sharing_variables
__kmpc_end_sharing_variables
__kmpc_get_shared_variables
__kmpc_parallel_level
__kmpc_is_spmd_exec_mode
__kmpc_get_team_static_memory
__kmpc_restore_team_static_memory
__kmpc_barrier_simple_spmd
__kmpc_warp_active_thread_mask
__kmpc_syncwarp
__last
nthreads
OMP_NUM_THREADS
active_levels
NONE
OMP_CANCELLATION
proc_bind
OMP_PROC_BIND
last
OpenMPICVTracker
OpenMP ICV 
OpenMPICV
 Value: 
IMPLEMENTATION_DEFINED
OpenMPGPU
OpenMP GPU kernel 
OpenMPGPUKernel
OpenMPParallelRegionInNonSPMD
OpenMPParallelRegionInMultipleKernesl
Found a parallel region that is called in a target region but not part of a combined target construct nor nesed inside a target construct without intermediate code. This can lead to excessive register usage for unrelated target regions in the same translation unit due to spurious call edges assumed by ptxas.
Parallel region is used in 
unexpected
 ways; will not attempt to rewrite the state machine.
OMP100
[OMP100] Potentially unknown OpenMP target region caller
Parallel region is not known to be called from a unique single target region, maybe the surrounding function has external linkage?; will not attempt to rewrite the state machine use.
Specialize parallel region that is only reached from a single target region to avoid spurious call edges and excessive register usage in other target regions. (parallel region ID: 
OpenMPParallelRegion
, kernel ID: 
OpenMPTargetRegion
Target region containing the parallel region that is specialized. (parallel region ID: 
ICVTrackerFunctionReturned
ICVTrackerCallSiteReturned
ICVTrackerCallSite
ICVTrackerFunction
OpenMPParallelRegionDeletion
Parallel region in 
OpenMPParallelDelete
 deleted
handle
OpenMPGlobalization
Found thread data sharing on the GPU. 
Expect degraded performance due to data globalization.
OpenMPRuntimeCodeMotion
OpenMP runtime call 
OpenMPOptRuntime
 moved to 
OpenMPRuntimeMoves
OpenMPRuntimeDeduplicated
 deduplicated
OpenMPParallelRegionMerging
omp.par.merged
Parallel region at 
OpenMPParallelMergeFront
 merged with parallel regions at 
OpenMPParallelMerge
 merged with 
OpenMP specific optimizations
partial-inlining
NumPartialInlined
Number of callsites functions partially inlined into.
NumColdOutlinePartialInlined
Number of times functions with cold outlined regions were partially inlined into its caller(s).
Number of cold single entry/exit regions found.
Number of cold single entry/exit regions outlined.
disable-partial-inlining
Disable partial inlining
disable-mr-partial-inlining
Disable multi-region partial inlining
pi-force-live-exit-outline
Force outline regions with live exits
pi-mark-coldcc
Mark outline function calls with ColdCC
skip-partial-inlining-cost-analysis
Skip Cost Analysis
min-region-size-ratio
Minimum ratio comparing relative sizes of each outline candidate and original function
min-block-execution
Minimum block executions to consider its BranchProbabilityInfo valid
cold-branch-ratio
Minimum BranchProbability to consider a region cold.
max-num-inline-blocks
Max number of blocks to be partially inlined
max-partial-inlining
Max number of partial inlining. The default is unlimited
outline-region-freq-percent
Relative frequency of outline region to the entry block
partial-inlining-extra-penalty
A debug option to add additional penalty to the computed one.
Partial Inliner
MultiExitRegion
Region dominated by 
 has more than one region exit edge.
TooCostly
 inline cost-savings smaller than 
PartiallyInlined
 partially inlined into 
OutlineRegionTooSmall
 not partially inlined into callers (Original Size = 
OutlinedRegionOriginalSize
, Size of call sequence to outlined function = 
 should always be fully inlined, not partially
NeverInline
 not partially inlined into 
 because it should never be inlined (cost=never)
 because too costly to inline (cost=
, threshold=
Threshold
OutliningCallcostTooHigh
 runtime overhead (overhead=
Overhead
, savings=
Savings
 of making the outlined call is too high
CanBePartiallyInlined
 can be partially inlined into 
 with cost=
 (threshold=
Partially inlined into at least one caller
enable-partial-inlining
Run Partial inlinining pass
use-gvn-after-vectorization
Run GVN instead of Early CSE after vectorization passes
extra-vectorizer-passes
Run cleanup optimization passes after vectorization.
reroll-loops
Run the loop rerolling pass
enable-newgvn
Run the NewGVN pass
use-cfl-aa
Enable the new, experimental CFL alias analysis
Disable CFL-AA
steens
Enable unification-based CFL-AA
anders
Enable inclusion-based CFL-AA
both
Enable both variants of CFL-AA
enable-loopinterchange
Enable the new, experimental LoopInterchange Pass
enable-unroll-and-jam
Enable Unroll And Jam Pass
enable-loop-flatten
Enable the LoopFlatten Pass
prepare-for-thinlto
Enable preparation for ThinLTO.
perform-thinlto
Enable performing ThinLTO.
hot-cold-split
Enable hot-cold splitting pass
ir-outliner
Enable ir outliner pass
enable-loop-versioning-licm
Enable the experimental Loop Versioning LICM pass
disable-preinline
Disable pre-instrumentation inliner
preinline-threshold
Control the amount of inlining in pre-instrumentation inliner (default = 75)
enable-gvn-hoist
Enable the GVN hoisting pass (default = off)
disable-libcalls-shrinkwrap
Disable shrink-wrap library calls
enable-simple-loop-unswitch
Enable the simple loop unswitch pass. Also enables independent cleanup passes integrated into the loop pass manager pipeline.
enable-gvn-sink
Enable the GVN sinking pass (default = off)
enable-chr
Enable control height reduction optimization (CHR)
flattened-profile-used
Indicate the sample profile being used is flattened, i.e., no inline hierachy exists in the profile. 
enable-order-file-instrumentation
Enable order file instrumentation (default = off)
enable-matrix
Enable lowering of the matrix intrinsics
enable-constraint-elimination
Enable pass to eliminate conditions based on linear constraints.
attributor-enable
Enable the attributor inter-procedural deduction pass.
enable all attributor runs
enable module-wide attributor runs
enable call graph SCC attributor runs
disable attributor runs
prune-eh
Remove unused exception handling info
sample-profile-suffix-elision-policy
.part.
NumCSInlined
Number of functions inlined with context sensitive profile
NumCSNotInlined
Number of functions not inlined with context sensitive profile
NumMismatchedProfile
Number of functions with CFG mismatched profile
NumMatchedProfile
Number of functions with CFG matched profile
sample-profile-file
Profile file loaded by -sample-profile
sample-profile-remapping-file
Profile remapping file loaded by -sample-profile
sample-profile-max-propagate-iterations
Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.
sample-profile-check-record-coverage
Emit a warning if less than N% of records in the input profile are matched to the IR.
sample-profile-check-sample-coverage
Emit a warning if less than N% of samples in the input profile are matched to the IR.
no-warn-sample-unused
Use this option to turn off/on warnings about function with samples but without debug information to use those samples. 
If the sample profile is accurate, we will mark all un-sampled callsite and function as having 0 samples. Otherwise, treat un-sampled callsites and functions conservatively as unknown. 
profile-accurate-for-symsinlist
For symbols in profile symbol list, regard their profiles to be accurate. It may be overriden by profile-sample-accurate. 
sample-profile-merge-inlinee
Merge past inlinee's profile to outline version if sample profile loader decided not to inline a call site. It will only be enabled when top-down order of profile loading is enabled. 
sample-profile-top-down-load
Do profile annotation and inlining for functions in top-down order of call graph during sample profile loading. It only works for new pass manager. 
sample-profile-inline-size
Inline cold call sites in profile loader if it's beneficial for code size.
sample-profile-cold-inline-threshold
Threshold for inlining cold callsites
sample-profile-inline-replay
Optimization remarks file containing inline remarks to be replayed by inlining from sample profile loader.
Sample Profile loader
Sample profile pass
Could not open profile: 
Pseudo-probe-based profile requires SampleProfileProbePass
sample-profile-suffix-elision-policy
 available profile records (
%) were applied
 available profile samples (
No debug information found in function 
: Function profile not used
Callee function not available
sample-profile-inline
NotInline
previous inlining not repeated: '
' into '
InlineAttempt
previous inlining reattempted for 
hotness: '
size: '
InlineFail
incompatible inlining
AppliedSamples
Applied 
NumSamples
 samples from profile (ProbeId=
ProbeId
 samples from profile (offset: 
LineOffset
Discriminator
PopularDest
most popular destination for conditional branches at 
CondBranchesLoc
llvm.pseudo_probe_desc
Interprocedural Sparse Conditional Constant Propagation
Strip Unused Function Prototypes
Strip all symbols from a module
initial-synthetic-count
Initial value of synthetic entry count.
inline-synthetic-count
Initial synthetic entry count for inline functions.
cold-synthetic-count
Initial synthetic entry count for cold functions.
Write ThinLTO Bitcode
write-thinlto-bitcode
ThinLTO Bitcode Writer
wholeprogramdevirt-summary-action
wholeprogramdevirt-read-summary
Read summary from given bitcode or YAML file before running pass
wholeprogramdevirt-write-summary
Write summary to given bitcode or YAML file after running pass. Output file format is deduced from extension: *.bc means writing bitcode, otherwise YAML
wholeprogramdevirt-branch-funnel-threshold
Maximum number of call targets per call site to enable branch funnels
wholeprogramdevirt-print-index-based
Print index-based devirtualization messages
whole-program-visibility
Enable whole program visibility
disable-whole-program-visibility
Disable whole program visibility (overrides enabling options)
wholeprogramdevirt-skip
Prevent function(s) from being devirtualized
Whole program devirtualization
-wholeprogramdevirt-read-summary: 
-wholeprogramdevirt-write-summary: 
combined summary should contain Regular LTO module
Devirtualized
devirtualized 
FunctionName
unique_member
branch_funnel
single-impl
Optimization
: devirtualized a call to 
uniform-ret-val
unique-ret-val
virtual-const-prop-1-bit
virtual-const-prop
branch-funnel
$merged
bitcode-mdindex-threshold
Number of metadatas above which we emit an index to enable lazy-loading
bitcode-flush-threshold
The threshold (unit M) for flushing LLVM bitcode.
write-relbf-to-summary
Write relative block frequency to function summary 
Unexpected anonymous function when writing summary
.llvmbc
__LLVM,__cmdline
.llvmcmd
Write Bitcode
write-bitcode
Bitcode Writer
asan-kernel
Enable KernelAddressSanitizer instrumentation
asan-recover
Enable recovery mode (continue-after-error).
asan-guard-against-version-mismatch
Guard against compiler/runtime version mismatch.
asan-instrument-reads
instrument read instructions
asan-instrument-writes
instrument write instructions
asan-instrument-atomics
instrument atomic instructions (rmw, cmpxchg)
asan-instrument-byval
instrument byval call arguments
asan-always-slow-path
use instrumentation with slow path for all accesses
asan-force-dynamic-shadow
Load shadow address into a local variable for each function
asan-with-ifunc
Access dynamic shadow through an ifunc global on platforms that support this
asan-with-ifunc-suppress-remat
Suppress rematerialization of dynamic shadow address by passing it through inline asm in prologue.
asan-max-ins-per-bb
maximal number of instructions to instrument in any given BB
asan-stack
Handle stack memory
asan-max-inline-poisoning-size
Inline shadow poisoning for blocks up to the given size in bytes.
asan-use-after-return
Check stack-use-after-return
asan-redzone-byval-args
Create redzones for byval arguments (extra copy required)
asan-use-after-scope
Check stack-use-after-scope
asan-globals
Handle global objects
asan-initialization-order
Handle C++ initializer order
asan-detect-invalid-pointer-pair
Instrument <, <=, >, >=, - with pointer operands
asan-detect-invalid-pointer-cmp
Instrument <, <=, >, >= with pointer operands
asan-detect-invalid-pointer-sub
Instrument - operations with pointer operands
asan-realign-stack
Realign stack to the value of this flag (power of two)
asan-instrumentation-with-call-threshold
If the function being instrumented contains more than this number of memory accesses, use callbacks instead of inline checks (-1 means never use callbacks).
asan-memory-access-callback-prefix
Prefix for memory access callbacks
asan-instrument-dynamic-allocas
instrument dynamic allocas
asan-skip-promotable-allocas
Do not instrument promotable allocas
asan-mapping-scale
scale of asan shadow mapping
asan-mapping-offset
offset of asan shadow mapping [EXPERIMENTAL]
asan-opt
Optimize instrumentation
asan-opt-same-temp
Instrument the same temp just once
asan-opt-globals
Don't instrument scalar globals
asan-opt-stack
Don't instrument scalar stack variables
asan-stack-dynamic-alloca
Use dynamic alloca to represent stack variables
asan-force-experiment
Force optimization experiment (for testing)
asan-use-private-alias
Use private aliases for global variables
asan-use-odr-indicator
Use odr indicators to improve ODR reporting
asan-globals-live-support
Use linker features to support dead code stripping of globals
asan-with-comdat
Place ASan constructors in comdat sections
asan-debug
asan-debug-stack
debug stack
asan-debug-func
Debug func
asan-debug-min
Debug min inst
asan-debug-max
Debug max inst
NumInstrumentedReads
Number of instrumented reads
NumInstrumentedWrites
Number of instrumented writes
NumOptimizedAccessesToGlobalVar
Number of optimized accesses to global vars
NumOptimizedAccessesToStackVar
Number of optimized accesses to stack vars
llvm.asan.globals
The ASanGlobalsMetadataAnalysis is required to run before AddressSanitizer can run
Read metadata to mark which globals should be instrumented when running ASan.
ASanGlobalsMetadataWrapperPass
AddressSanitizer: detects use-after-free and out-of-bounds bugs.
AddressSanitizerFunctionPass
AddressSanitizer: detects use-after-free and out-of-bounds bugs.ModulePass
ModuleAddressSanitizer
__TEXT,__asan_cstring,regular
__LLVM
__OBJC
__TEXT
__llvm_gcov_ctr
__asan_global_
_anon_global
.ASAN$GL
asan_globals
__DATA,__asan_globals,regular
ModuleAddressSanitizer not implemented for object file format
__asan_binder_
__DATA,__asan_liveness,regular,live_support
exp_
_noabort
__asan_shadow
=r,0
.asan.shadow
.byval
asan_local_stack_base
MyAlloca
bounds-checking-single-trap
Use one trap block per function
ChecksAdded
Bounds checks added
ChecksSkipped
Bounds checks skipped
ChecksUnable
Bounds checks unable to add
Run-time bounds checking
Call Graph Profile
CG Profile
force-chr
Apply CHR for all functions
chr-bias-threshold
CHR considers a branch bias greater than this ratio as biased
chr-merge-threshold
CHR merges a group of N branches/selects where N >= this value
chr-module-list
Specify file to retrieve the list of modules to apply CHR to
chr-function-list
Specify file to retrieve the list of functions to apply CHR to
Reduce control height in the hot paths
Error: Couldn't read the chr-module-list file 
Error: Couldn't read the chr-function-list file 
BranchNotBiased
Branch not biased
SelectNotBiased
Select not biased
DropUnhoistableSelect
Dropped unhoistable select
DropSelectUnhoistableBranch
Dropped select due to unhoistable branch
SplitScopeFromOuter
Split scope from outer due to unhoistable branch/select 
and/or lack of common condition values
SplitScopeFromPrev
Split scope from previous due to unhoistable branch/select 
DropScopeWithOneBranchOrSelect
Drop scope with < 
CHRMergeThreshold
 biased branch(es) or select(s)
.nonchr
Merged 
NumCHRedBranches
 branches or selects
Stats
Reduced the number of branches in hot paths by 
NumBranchesDelta
 (static) and 
WeightedNumBranchesDelta
 (weighted by PGO count)
dfsan-preserve-alignment
respect alignment requirements provided by input IR
dfsan-abilist
File listing native ABI functions and how the pass treats them
dfsan-args-abi
Use the argument ABI rather than the TLS ABI
dfsan-combine-pointer-labels-on-load
Combine the label of the pointer with the label of the data when loading from memory.
dfsan-combine-pointer-labels-on-store
Combine the label of the pointer with the label of the data when storing in memory.
dfsan-debug-nonzero-labels
Insert calls to __dfsan_nonzero_label on observing a parameter, load or return with a nonzero label
dfsan-event-callbacks
Insert calls to __dfsan_*_callback functions on data events.
dfsan-fast-16-labels
Use more efficient instrumentation, limiting the number of labels to 16.
dfsan-track-select-control-flow
Propagate labels from condition values of select instructions to results.
__dfsan_arg_tls
__dfsan_retval_tls
unsupported triple
__dfsan_load_callback
__dfsan_store_callback
__dfsan_mem_transfer_callback
__dfsan_cmp_callback
__dfsan_union
dfsan_union
__dfsan_union_load
__dfsan_union_load_fast16labels
__dfsan_unimplemented
__dfsan_set_label
__dfsan_nonzero_label
__dfsan_vararg_wrapper
uninstrumented
functional
_dfsret
labelva
labelreturn
_dfsarg
default-gcov-version
gcov-atomic-counter
Make counter updates atomic
Invalid -default-gcov-version: 
Insert instrumentation for GCOV profiling
GCOV Profiler
__gcov_fork
llvm_writeout_files
llvm_reset_counters
Regex 
 is not valid: 
gcov_ctr
failed to open coverage notes file for writing: 
oncg
__llvm_gcov_init
llvm_gcov_init
__llvm_gcov_writeout
start_file_args_ty
emit_function_args_ty
emit_arcs_args_ty
file_info
__llvm_internal_gcov_emit_function_args.
__llvm_internal_gcov_emit_arcs_args.
__llvm_internal_gcov_emit_file_info
file.loop.header
counter.loop.header
file.loop.latch
file_idx
start_file_args
stamp
num_ctrs
emit_function_args
emit_arcs_args
ctr_idx
ident
func_checkssum
cfg_checksum
num_counters
counters
next_file_idx
llvm_gcda_start_file
llvm_gcda_emit_function
llvm_gcda_emit_arcs
llvm_gcda_summary_info
llvm_gcda_end_file
__llvm_gcov_reset
invalid return type for __llvm_gcov_reset
memprof-guard-against-version-mismatch
memprof-instrument-reads
memprof-instrument-writes
memprof-instrument-atomics
memprof-use-callbacks
Use callbacks instead of inline instrumentation sequences.
memprof-memory-access-callback-prefix
memprof-mapping-scale
scale of memprof shadow mapping
memprof-mapping-granularity
granularity of memprof shadow mapping
memprof-debug
memprof-debug-func
memprof-debug-min
memprof-debug-max
MemProfiler: profile memory allocations and accesses.
MemProfilerFunctionPass
MemProfiler: profile memory allocations and accesses.ModulePass
ModuleMemProfiler
msan-track-origins
Track origins (allocation sites) of poisoned memory
msan-keep-going
keep going after reporting a UMR
msan-poison-stack
poison uninitialized stack variables
msan-poison-stack-with-call
poison uninitialized stack variables with a call
msan-poison-stack-pattern
poison uninitialized stack variables with the given pattern
msan-poison-undef
poison undef temps
msan-handle-icmp
propagate shadow through ICmpEQ and ICmpNE
msan-handle-icmp-exact
exact handling of relational integer ICmp
msan-handle-lifetime-intrinsics
when possible, poison scoped variables at the beginning of the scope (slower, but more precise)
msan-handle-asm-conservative
conservative handling of inline assembly
msan-check-access-address
report accesses through a pointer which has poisoned shadow
msan-eager-checks
check arguments and return values at function call boundaries
msan-dump-strict-instructions
print out instructions with default strict semantics
msan-instrumentation-with-call-threshold
If the function being instrumented requires more than this number of checks and origin stores, use callbacks instead of inline checks (-1 means never use callbacks).
msan-kernel
Enable KernelMemorySanitizer instrumentation
msan-check-constant-shadow
Insert checks for constant shadow values
msan-with-comdat
Place MSan constructors in comdat sections
msan-and-mask
Define custom MSan AndMask
msan-xor-mask
Define custom MSan XorMask
msan-shadow-base
Define custom MSan ShadowBase
msan-origin-base
Define custom MSan OriginBase
unsupported architecture
unsupported operating system
__msan_track_origins
__msan_keep_going
MemorySanitizer: detects uninitialized reads.
MemorySanitizerLegacyPass
_msarg_va_s
_msarg_va_o
_msarg
_msarg_o
__msan_chain_origin
__msan_set_origin
__msan_memmove
__msan_memcpy
__msan_memset
__msan_instrument_asm_store
__msan_warning
__msan_get_context_state
__msan_metadata_ptr_for_load_
__msan_metadata_ptr_for_store_
__msan_metadata_ptr_for_load_n
__msan_metadata_ptr_for_store_n
__msan_poison_alloca
__msan_unpoison_alloca
__msan_warning_with_origin
__msan_warning_with_origin_noreturn
__msan_retval_tls
__msan_retval_origin_tls
__msan_param_tls
__msan_param_origin_tls
__msan_va_arg_tls
__msan_va_arg_origin_tls
__msan_va_arg_overflow_size_tls
__msan_maybe_warning_
__msan_maybe_store_origin_
__msan_set_alloca_origin4
__msan_poison_stack
param_shadow
retval_shadow
va_arg_shadow
va_arg_origin
va_arg_overflow_size
param_origin
retval_origin
_msret
ZZZ call 
ZZZ 
QQQ 
MSAN -- cannot instrument invoke of libatomic load.Ignoring!
_msprop
msprop_mul_cst
_msld
_msprop_ptrtoint
_msprop_inttoptr
_msprop_icmp
_msprop_icmp_s
_msphi_s
_msphi_o
_msmaskedld
_ldmxcsr
_msprop_vector_pack
_msprop_select
----
_mscmp
NumOfPGOICallPromotion
Number of indirect call promotions.
NumOfPGOICallsites
Number of indirect call candidate sites.
disable-icp
Disable indirect call promotion
icp-cutoff
Max number of promotions for this compilation
icp-csskip
Skip Callsite up to this number for this compilation
icp-lto
Run indirect-call promotion in LTO mode
icp-samplepgo
Run indirect-call promotion in SamplePGO mode
icp-call-only
Run indirect-call promotion for call instructions only
icp-invoke-only
Run indirect-call promotion for invoke instruction only
icp-dumpafter
Dump IR after transformation happens
Use PGO instrumentation profile to promote indirect calls to direct calls.
PGOIndirectCallPromotion
UserOptions
 Not promote: User options
UnableToFindTarget
Cannot promote indirect call: target with md5sum 
target md5sum
UnableToPromote
Cannot promote indirect call to 
TargetFunction
 with count of 
Count
Promoted
Promote indirect call to 
DirectCallee
 with count 
 out of 
TotalCount
orderfile-write-mapping
Dump functions and their MD5 hash to deobfuscate profile data
_llvm_order_file_buffer
_llvm_order_file_buffer_idx
 to save mapping file for order file instrumentation
MD5 
order_file_entry
order_file_set
Instrumentation for Order File
hash-based-counter-split
Rename counter variable of a comdat function based on cfg hash
runtime-counter-relocation
Enable relocating counters at runtime.
vp-static-alloc
Do static counter allocation for value profiler
vp-counters-per-site
The average number of profile counters allocated per value profiling site.
instrprof-atomic-counter-update-all
Make all profile counter updates atomic (for testing only)
atomic-counter-update-promoted
Do counter update using atomic fetch add  for promoted counters only
atomic-first-counter
Use atomic fetch add for first counter in a function (usually the entry counter)
do-counter-promotion
Do counter register promotion
max-counter-promotions-per-loop
Max number counter promotions per loop to avoid increasing register pressure too much
max-counter-promotions
Max number of allowed counter promotions
speculative-counter-promotion-max-exiting
The max number of exiting blocks of a loop to allow  speculative counter promotion
speculative-counter-promotion-to-loop
When the option is false, if the target block is in a loop, the promotion will be disallowed unless the promoted counter  update can be further/iteratively promoted into an acyclic  region.
iterative-counter-promotion
Allow counter promotion across the whole loop nest.
skip-ret-exit-block
Suppress counter promotion if exit blocks contain ret.
pgocount
Frontend instrumentation-based coverage lowering.
Frontend instrumentation-based coverage lowering
pgocount.promoted
__llvm_profile_instrument_target
__llvm_profile_instrument_memop
__llvm_profile_counter_bias
__profd_
__profc_
__profvp_
__llvm_prf_vnodes
__llvm_prf_nm
__llvm_profile_register_functions
__llvm_profile_register_function
__llvm_profile_register_names_function
__llvm_profile_runtime_user
__llvm_profile_init
pgo-instrumentation
NumOfPGOInstrument
Number of edges instrumented.
NumOfPGOSelectInsts
Number of select instruction instrumented.
NumOfPGOMemIntrinsics
Number of mem intrinsics instrumented.
NumOfPGOEdge
Number of edges.
NumOfPGOBB
Number of basic-blocks.
NumOfPGOSplit
Number of critical edge splits.
NumOfPGOFunc
Number of functions having valid profile counts.
NumOfPGOMismatch
Number of functions having mismatch profile.
NumOfPGOMissing
Number of functions without profile.
NumOfPGOICall
Number of indirect call value instrumentations.
NumOfCSPGOInstrument
Number of edges instrumented in CSPGO.
NumOfCSPGOSelectInsts
Number of select instruction instrumented in CSPGO.
NumOfCSPGOMemIntrinsics
Number of mem intrinsics instrumented in CSPGO.
NumOfCSPGOEdge
Number of edges in CSPGO.
NumOfCSPGOBB
Number of basic-blocks in CSPGO.
NumOfCSPGOSplit
Number of critical edge splits in CSPGO.
NumOfCSPGOFunc
Number of functions having valid profile counts in CSPGO.
NumOfCSPGOMismatch
Number of functions having mismatch profile in CSPGO.
NumOfCSPGOMissing
Number of functions without profile in CSPGO.
pgo-test-profile-file
Specify the path of profile data file. This ismainly for test purpose.
pgo-test-profile-remapping-file
Specify the path of profile remapping file. This is mainly for test purpose.
disable-vp
Disable Value Profiling
icp-max-annotations
Max number of annotations for a single indirect call callsite
memop-max-annotations
Max number of preicise value annotations for a single memopintrinsic
do-comdat-renaming
Append function hash to the name of COMDAT function to avoid function hash mismatch due to the preinliner
pgo-warn-missing-function
Use this option to turn on/off warnings about missing profile data for functions.
no-pgo-warn-mismatch
Use this option to turn off/on warnings about profile cfg mismatch.
no-pgo-warn-mismatch-comdat
The option is used to turn on/off warnings about hash mismatch for comdat functions.
pgo-instr-select
Use this option to turn on/off SELECT instruction instrumentation. 
pgo-view-raw-counts
A boolean option to show CFG dag or text with raw profile counts from profile data. See also option -pgo-view-counts. To limit graph display to only one function, use filtering option -view-bfi-func-name.
do not show.
show a graph.
show in text.
pgo-instr-memop
Use this option to turn on/off memory intrinsic size profiling.
pgo-emit-branch-prob
When this option is on, the annotated branch probability will be emitted as optimization remarks: -{Rpass|pass-remarks}=pgo-instrumentation
pgo-instrument-entry
Force to instrument function entry basicblock.
pgo-fix-entry-count
Fix function entry count in profile use.
pgo-verify-hot-bfi
Print out the non-match BFI count if a hot raw profile count becomes non-hot, or a cold raw profile count becomes hot. The print is enabled under -Rpass-analysis=pgo, or internal option -pass-remakrs-analysis=pgo.
pgo-verify-bfi
Print out mismatched BFI counts after setting profile metadata The print is enabled under -Rpass-analysis=pgo, or internal option -pass-remakrs-analysis=pgo.
pgo-verify-bfi-ratio
Set the threshold for pgo-verify-big -- only print out mismatched BFI if the difference percentage is greater than this value (in percentage).
pgo-verify-bfi-cutoff
Set the threshold for pgo-verify-bfi -- skip the counts whose profile count value is below.
pgo-instr-old-cfg-hashing
Use the old CFG function hashing
 (total count : 
PGO instrumentation.
PGOInstrumentationGenPass
Read PGO instrumentation profile.
PGOInstrumentationUsePass
Create PGO instrumentation version variable for CSPGO.
pgo-instr-gen-create-var
PGOInstrumentationGenCreateVarPass
Cannot get PGOReader
Not an IR level instrumentation profile
BlockFrequencyDAGs
pgo-view-counts: 
PGORawCounts_
pgo-view-raw-counts: 
 is annotated as a hot function but the profile is cold
Inconsistent number of counts in 
: the profile may be stale or there is a function name collision.
Inconsistent number of value sites for 
 profiling in "
", possibly due to the use of a stale profile.
indirect call target
memory intrinsic functions size
Count : 
Unknown\l
SELECT : { T = 
Unknown, F = Unknown }\l
, F = 
 }\l
Dump Function 
 Hash: 
  Number of Basic Blocks: 
  BB: 
FakeNode
  Number of Edges: 
 (*: Instrument, C: CriticalEdge, -: Removed)
  Edge 
  Count=
Index=
  W=
raw-Hot to BFI-nonHot
raw-Cold to BFI-Hot
bfi-verify
 Count=
 BFI_Count=
In Func 
: Num_of_BB=
, Num_of_non_zerovalue_BB=
, Num_of_mis_matching_BB=
_Zero
_One
_MinusOne
_Const
 is true with probability : 
NumOfPGOMemOPOpt
Number of memop intrinsics optimized.
NumOfPGOMemOPAnnotate
Number of memop intrinsics annotated.
pgo-memop-count-threshold
The minimum count to optimize memory intrinsic calls
disable-memop-opt
Disable optimize
pgo-memop-percent-threshold
The percentage threshold for the memory intrinsic calls optimization
pgo-memop-max-version
The max version for the optimized memory  intrinsic calls
pgo-memop-scale-count
Scale the memop size counts using the basic  block count value
pgo-memop-optimize-memcmp-bcmp
Size-specialize memcmp and bcmp calls
memop-value-prof-max-opt-size
Optimize the memop size <= this value
Optimize memory intrinsic using its size value profile
PGOMemOPSize
MemOP.Merge
MemOP.Default
MemOP.RVMerge
MemOP.Case.
memopt-opt
optimized 
Memop
Total
Versions
 versions
poison-checking-function-local
Check that returns are non-poison (for testing)
__poison_checker_assert
sanitizer-coverage-level
Sanitizer Coverage. 0: none, 1: entry block, 2: all blocks, 3: all blocks and critical edges
sanitizer-coverage-trace-pc
Experimental pc tracing
sanitizer-coverage-trace-pc-guard
pc tracing with a guard
sanitizer-coverage-pc-table
create a static PC table
sanitizer-coverage-inline-8bit-counters
increments 8-bit counter for every edge
sanitizer-coverage-inline-bool-flag
sets a boolean flag for every edge
sanitizer-coverage-trace-compares
Tracing of CMP and similar instructions
sanitizer-coverage-trace-divs
Tracing of DIV instructions
sanitizer-coverage-trace-geps
Tracing of GEP instructions
sanitizer-coverage-prune-blocks
Reduce the number of instrumented blocks
sanitizer-coverage-stack-depth
max stack depth tracing
coverage
' should not be declared by the user
__sancov_gen_
__DATA,__
__sancov_gen_cov_switch_values
section$start$__DATA$__
__start___
section$end$__DATA$__
__stop___
Pass for instrumenting coverage on functions
sancov
ModuleSanitizerCoverage
Lower pointer authentication intrinsics for soft targets
soft-ptrauth
Soft Pointer Auth Lowering
Soft. lowering of return address auth unsupported
__ptrauth_auth
__ptrauth_sign
__ptrauth_strip
__ptrauth_blend
__ptrauth_sign_generic
ptrauth_soft_init
tsan-instrument-memory-accesses
Instrument memory accesses
tsan-instrument-func-entry-exit
Instrument function entry and exit
tsan-handle-cxx-exceptions
Handle C++ exceptions (insert cleanup blocks for unwinding)
tsan-instrument-atomics
Instrument atomics
tsan-instrument-memintrinsics
Instrument memintrinsics (memset/memcpy/memmove)
tsan-distinguish-volatile
Emit special instrumentation for accesses to volatiles
tsan-instrument-read-before-write
Do not eliminate read instrumentation for read-before-writes
tsan-compound-read-before-write
Emit special compound instrumentation for reads-before-writes
NumOmittedReadsBeforeWrite
Number of reads ignored due to following writes
NumAccessesWithBadSize
Number of accesses with bad size
NumInstrumentedVtableWrites
Number of vtable ptr writes
NumInstrumentedVtableReads
Number of vtable ptr reads
NumOmittedReadsFromConstantGlobals
Number of reads from constant globals
NumOmittedReadsFromVtable
Number of vtable reads
NumOmittedNonCaptured
Number of accesses ignored due to capturing
warning: Option -tsan-compound-read-before-write has no effect when -tsan-instrument-read-before-write is set.
ThreadSanitizer: detects data races.
ThreadSanitizerLegacyPass
tsan_cleanup
__tsan_func_entry
__tsan_func_exit
__tsan_ignore_thread_begin
__tsan_ignore_thread_end
__tsan_read
__tsan_write
__tsan_unaligned_read
__tsan_unaligned_write
__tsan_volatile_read
__tsan_volatile_write
__tsan_unaligned_volatile_read
__tsan_unaligned_volatile_write
__tsan_read_write
__tsan_unaligned_read_write
__tsan_atomic
_load
_store
_exchange
_fetch_add
_fetch_sub
_fetch_and
_fetch_or
_fetch_xor
_fetch_nand
_compare_exchange_val
__tsan_vptr_update
__tsan_vptr_read
__tsan_atomic_thread_fence
__tsan_atomic_signal_fence
tsan_ignore_cleanup
hwasan-memory-access-callback-prefix
hwasan-instrument-with-calls
instrument reads and writes with callbacks
hwasan-instrument-reads
hwasan-instrument-writes
hwasan-instrument-atomics
hwasan-instrument-byval
instrument byval arguments
hwasan-recover
hwasan-instrument-stack
instrument stack (allocas)
hwasan-uar-retag-to-zero
Clear alloca tags before returning from the function to allow non-instrumented and instrumented function calls mix. When set to false, allocas are retagged before returning from the function to detect use after return.
hwasan-generate-tags-with-calls
generate new tags with runtime library calls
hwasan-globals
Instrument globals
hwasan-match-all-tag
don't report bad accesses via pointers with this tag
hwasan-kernel
Enable KernelHWAddressSanitizer instrumentation
hwasan-mapping-offset
HWASan shadow mapping offset [EXPERIMENTAL]
hwasan-with-ifunc
hwasan-with-tls
Access dynamic shadow through an thread-local pointer on platforms that support this
hwasan-record-stack-history
Record stack frames with tagged allocations in a thread-local ring buffer
hwasan-instrument-mem-intrinsics
instrument memory intrinsics
hwasan-instrument-landing-pads
instrument landing pads
hwasan-use-short-granules
use short granules in allocas and outlined checks
hwasan-instrument-personality-functions
instrument personality functions
hwasan-inline-all-checks
inline all checks
HWAddressSanitizer: detect memory bugs using tagged addressing.
HWAddressSanitizer
__hwasan_tls
__start_hwasan_globals
__stop_hwasan_globals
.note.hwasan.globals
hwasan.dummy.global
hwasan_globals
.hwasan
.hwasan.descriptor
__hwasan_personality_wrapper
_Unwind_GetGR
_Unwind_GetCFA
__hwasan_tag_memory
__hwasan_generate_tag
__hwasan_shadow
__hwasan_handle_vfork
hwasan.shadow
.hwasan.shadow
hwasan.stack.base.tag
alloca.
int3
nopl 
(%rax)
{rdi}
brk #
{x0}
Unexpected instruction
allocate
assumes
atomic
barrier
begin assumes
begin declare variant
cancel
cancellation point
critical
declare mapper
declare reduction
declare simd
declare target
declare variant
depobj
distribute
distribute parallel do
distribute parallel do simd
distribute parallel for
distribute parallel for simd
distribute simd
do simd
end assumes
end declare target
end declare variant
end do
end do simd
end sections
end single
end workshare
flush
for simd
master
master taskloop
master taskloop simd
ordered
parallel
parallel do
parallel do simd
parallel for
parallel for simd
parallel master
parallel master taskloop
parallel master taskloop simd
parallel sections
parallel workshare
requires
scan
section
sections
simd
single
target
target data
target enter data
target exit data
target parallel
target parallel do
target parallel do simd
target parallel for
target parallel for simd
target simd
target teams
target teams distribute
target teams distribute parallel do
target teams distribute parallel do simd
target teams distribute parallel for
target teams distribute parallel for simd
target teams distribute simd
target update
task
taskgroup
taskloop
taskloop simd
taskwait
taskyield
teams
teams distribute
teams distribute parallel do
teams distribute parallel do simd
teams distribute parallel for
teams distribute parallel for simd
teams distribute simd
threadprivate
unknown
workshare
acq_rel
acquire
affinity
aligned
allocator
atomic_default_mem_order
capture
collapse
copyprivate
copyin
default
defaultmap
depend
destroy
detach
device
device_type
dist_schedule
dynamic_allocators
exclusive
final
firstprivate
from
grainsize
hint
in_reduction
inbranch
inclusive
is_device_ptr
lastprivate
linear
link
match
mergeable
nogroup
nowait
nontemporal
notinbranch
num_tasks
num_teams
num_threads
order
priority
private
proc_bind
read
reduction
relaxed
release
reverse_offload
safelen
schedule
seq_cst
shared
simdlen
task_reduction
thread_limit
threads
unified_address
unified_shared_memory
uniform
untied
update
use_device_addr
use_device_ptr
uses_allocators
write
threadprivate or thread local
armeb
aarch64
aarch64_be
aarch64_32
ppcle
ppc64
ppc64le
x86_64
amdgcn
nvptx
nvptx64
invalid
construct
device
implementation
user
target
teams
parallel
simd
kind
arch
vendor
extension
condition
unified_address
unified_shared_memory
reverse_offload
dynamic_allocators
atomic_default_mem_order
host
nohost
fpga
<any, entirely target dependent>
cray
fujitsu
intel
llvm
unknown
match_all
match_any
match_none
disable_implicit_base
allow_templates
true
false
openmp-ir-builder-optimistic-attributes
Use optimistic attributes describing 'as-if' properties of runtime calls.
;unknown;unknown;0;0;;
omp_global_thread_num
.cont
.cncl
tid.addr
zero.addr
omp.par.entry
omp.par.region
omp.par.pre_finalize
omp.par.exit
tid.addr.local
tid.addr.use
zero.addr.use
omp.par.outlined.exit
omp_region.end
omp_region.finalize
omp_region.body
struct.ident_t
struct.__tgt_async_info
.reloaded
omp_parallel
Could not open input file: 
constant bigger than 64 bits detected!
constant bigger than 128 bits detected!
end of file in COMDAT variable name
Null bytes are not allowed in names
end of file in string constant
invalid value number (too large)!
end of file in global variable name
bitwidth for integer type out of range!
available_externally
unnamed_addr
local_unnamed_addr
zeroinitializer
unordered
acq_rel
seq_cst
fastcc
coldcc
cfguard_checkcc
x86_stdcallcc
x86_fastcallcc
x86_thiscallcc
x86_vectorcallcc
arm_apcscc
arm_aapcscc
arm_aapcs_vfpcc
aarch64_sve_vector_pcs
msp430_intrcc
ptx_kernel
ptx_device
spir_kernel
spir_func
x86_64_sysvcc
win64cc
x86_regcallcc
webkit_jscc
swiftcc
swifttailcc
anyregcc
preserve_mostcc
preserve_allcc
ghccc
x86_intrcc
hhvmcc
hhvm_ccc
cxx_fast_tlscc
amdgpu_vs
amdgpu_ls
amdgpu_hs
amdgpu_es
amdgpu_gs
amdgpu_ps
amdgpu_cs
amdgpu_kernel
amdgpu_gfx
tailcc
byval
dereferenceable_or_null
nest
opaque
exactmatch
largest
noduplicates
samesize
uselistorder
dsoLocal
canAutoHide
vcall_visibility
bfloat
x86_fp80
fp128
ppc_fp128
x86_mmx
x86_amx
token
Can't read textual IR with a Context that discards named Values
expected function name in blockaddress
use of undefined type '%
use of undefined type named '
use of undefined comdat '$
use of undefined value '@
use of undefined metadata '!
use of undefined summary '^
use of undefined type id summary '^
expected top-level entity
expected 'module asm'
unknown target property
expected '=' after target triple
expected '=' after target datalayout
expected '=' after source_filename
expected '=' after deplibs
expected ']' at end of list
expected '=' after name
expected 'type' after '='
non-struct types may not be recursive
expected 'type' after name
expected 'global' or 'constant'
variable expected to be numbered '%
expected '=' in global variable
expected '=' here
expected comdat keyword
expected comdat type
unknown selection kind
redefinition of comdat '$
Expected '!' here
Expected '{' here
DIExpression
expected end of metadata node
unexpected type in metadata definition
Metadata id is already used
Expected 'gv', 'module', 'typeid', 'flags' or 'blockcount' at the start of summary entry
expected ':' at start of summary entry
expected '(' at start of summary entry
found end of file while parsing summary entry
unexpected summary kind
invalid linkage type for alias
symbol with local linkage must have default visibility
expected comma after alias or ifunc's type
invalid aliasee
An alias or ifunc must have pointer type
explicit pointee type doesn't match operand's pointee type
explicit pointee type should be a function type
redefinition of global '@
expected partition string
unknown alias or ifunc property!
forward reference and definition of alias have different types
invalid type for global variable
forward reference and definition of global have different types
expected global section string
unknown global variable property!
expected attribute group id
expected '{' here
expected end of attribute group
attribute group has no attributes
unterminated attribute group
cannot have an attribute group reference in an attribute group
invalid use of attribute on a function
invalid use of parameter-only attribute on a function
' is not a basic block
' defined with type '
' but expected '
global variable reference must have pointer type
expected string constant
expected 32-bit integer (too large)
expected localdynamic, initialexec or localexec
expected ')' after thread local model
expected '(' in address space
expected ')' in address space
invalid use of function-only attribute
invalid use of parameter-only attribute
invalid use of attribute on return type
invalid use of parameter-only/call site-only attribute
dso_location and DLL-StorageClass mismatch
expected metadata after comma
expected ')'
alignment is not a power of two
huge alignments are not supported yet
expected '('
dereferenceable bytes must be non-zero
expected metadata or 'align'
expected metadata or 'addrspace'
'allocsize' indices can't refer to the same parameter
Expected '(' in syncscope
Expected synchronization scope name
Expected ')' in syncscope
Expected ordering on atomic instruction
stack alignment is not a power of two
expected ',' as start of index list
expected index
expected '>' at end of packed struct
void type only allowed for function results
basic block pointers are invalid
pointers to void are invalid - use i8* instead
pointer to this type is invalid
pointers to void are invalid; use i8* instead
expected '*' in address space
expected '(' in call
expected ',' in argument list
unexpected ellipsis in argument list for 
non-musttail call
musttail call in non-varargs function
expected ')' at end of argument list
expected '...' at end of argument list for musttail call in varargs function
expected ',' in input list
expected '(' in operand bundle
operand bundle set must not be empty
argument can not have void type
argument expected to be numbered '%
invalid type for function argument
invalid function return type
argument name invalid in function type
argument attributes invalid in function type
redefinition of type
forward references to non-struct type
expected '>' in packed struct
invalid element type for struct
expected '}' at end of struct
expected 'x' after vscale
expected number in address space
expected 'x' after element count
expected end of sequential type
zero element vector is illegal
size too large for vector
invalid vector element type
invalid array element type
use of undefined value '%
invalid use of a non-first-class type
instructions returning void cannot have a name
instruction expected to be numbered '%
instruction forward referenced with type '
multiple definition of local value named '
label expected to be numbered '
unable to create block numbered '
unable to create block named '
expected value token
expected end of struct constant
expected end of packed struct
expected end of constant
constant vector must not be empty
vector elements must have integer, pointer or floating point type
vector element #
 is not of type '
expected end of array constant
invalid array element type: 
array element #
expected comma in inline asm expression
expected constraint string
expected '(' in block address expression
expected comma in block address expression
expected ')' in block address expression
expected basic block name in blockaddress
cannot take blockaddress inside a declaration
referenced value is not a basic block
cannot take address of numeric label after the function is defined
expected global value name in dso_local_equivalent
expected a function, alias to function, or ifunc in dso_local_equivalent
expected '(' after constantexpr cast
expected 'to' in constantexpr cast
expected ')' at end of constantexpr cast
invalid cast opcode for cast from '
expected '(' in extractvalue constantexpr
expected ')' in extractvalue constantexpr
extractvalue operand must be aggregate type
invalid indices for extractvalue
expected '(' in insertvalue constantexpr
expected comma in insertvalue constantexpr
expected ')' in insertvalue constantexpr
insertvalue operand must be aggregate type
invalid indices for insertvalue
insertvalue operand and field disagree in type: '
' instead of '
expected '(' in compare constantexpr
expected comma in compare constantexpr
expected ')' in compare constantexpr
compare operands must have the same type
fcmp requires floating point operands
icmp requires pointer or integer operands
expected '(' in unary constantexpr
expected ')' in unary constantexpr
constexpr requires fp operands
expected '(' in binary constantexpr
expected comma in binary constantexpr
expected ')' in binary constantexpr
operands of constexpr must have same type
constexpr requires integer operands
expected '(' in logical constantexpr
expected comma in logical constantexpr
expected ')' in logical constantexpr
constexpr requires integer or integer vector operands
expected '(' in constantexpr
expected comma after getelementptr's type
expected ')' in constantexpr
base of getelementptr must be a pointer
getelementptr index must be an integer
getelementptr vector index has a wrong number of elements
base element of getelementptr must be sized
invalid getelementptr indices
inrange keyword may not appear on pointer operand
expected three operands to select
expected three operands to shufflevector
invalid operands to shufflevector
expected two operands to extractelement
invalid extractelement operands
expected three operands to insertelement
invalid insertelement operands
global values must be constants
expected comdat variable
expected ')' after comdat var
comdat cannot be unnamed
expected '!' here
DILocation
DIGlobalVariableExpression
GenericDINode
DISubrange
DIEnumerator
DIBasicType
DIDerivedType
DICompositeType
DISubroutineType
DIFile
DICompileUnit
DISubprogram
DILexicalBlock
DILexicalBlockFile
DINamespace
DIModule
DITemplateTypeParameter
DITemplateValueParameter
DIGlobalVariable
DILocalVariable
DILabel
DIObjCProperty
DIImportedEntity
DIMacro
DIMacroFile
DICommonBlock
DIStringType
DIGenericSubrange
expected metadata type
missing required field 'scope'
missing required field 'tag'
missing required field 'name'
missing required field 'value'
unsigned enumerator with negative value
missing required field 'baseType'
missing required field 'types'
missing required field 'filename'
missing required field 'directory'
'checksumkind' and 'checksum' must be provided together
missing 'distinct', required for !DICompileUnit
missing required field 'language'
missing required field 'file'
missing 'distinct', required for !DISubprogram that is a Definition
missing required field 'discriminator'
missing required field 'type'
missing required field 'line'
expected '(' here
invalid DWARF op '
invalid DWARF attribute encoding '
expected unsigned integer
element too large, limit is 
expected ')' here
missing required field 'var'
missing required field 'expr'
invalid metadata-value-metadata roundtrip
expected metadata operand
functions are not values, refer to them as pointers
invalid use of function-local name
invalid type for inline asm constraint string
integer constant must have integer type
floating point constant invalid for type
floating point constant does not have type '
null must be a pointer type
invalid type for undef constant
invalid empty array initializer
invalid type for null constant
invalid type for none constant
invalid type for poison constant
constant expression type mismatch
initializer with struct type has wrong # elements
packed'ness of initializer and type don't match
element 
 of struct initializer doesn't match struct element type
expected a basic block
invalid linkage for function definition
invalid linkage for function declaration
invalid function linkage type
function expected to be numbered '%
expected function name
expected '(' in function argument list
'builtin' attribute not valid on function
functions with 'sret' argument must return void
invalid forward reference to function as global value!
invalid forward reference to function '
' with wrong type: expected '
' but was '
invalid redefinition of function '
redefinition of function '@
type of definition and forward reference of '@
' disagree: expected '
redefinition of argument '%
expected '{' in function body
function body requires at least one basic block
expected '=' after instruction id
expected '=' after instruction name
found end of file when expecting more instructions
expected instruction opcode
fast-math-flags specified for select without floating-point scalar or vector return type
fast-math-flags specified for phi without floating-point scalar or vector return type
expected fcmp predicate (e.g. 'oeq')
expected icmp predicate (e.g. 'eq')
value doesn't match function result type '
branch condition must have 'i1' type
expected ',' after branch condition
expected ',' after true destination
expected ',' after switch condition
expected '[' with switch table
switch condition must have integer type
expected ',' after case value
duplicate case value in switch
case value is not a constant integer
expected ',' after indirectbr address
expected '[' with indirectbr
indirectbr address must have pointer type
expected ']' at end of block list
expected 'to' in invoke
expected 'unwind' in invoke
Invalid result type for LLVM function
too many arguments specified
argument is not of expected type '
not enough parameters specified for call
invoke instructions may not have an alignment
expected '[' in catchpad/cleanuppad
expected 'from' after cleanupret
expected 'unwind' in cleanupret
expected 'caller' in cleanupret
expected 'from' after catchret
expected 'to' in catchret
expected 'within' after catchswitch
expected scope value for catchswitch
expected '[' with catchswitch labels
expected ']' after catchswitch labels
expected 'unwind' after catchswitch scope
expected 'caller' in catchswitch
expected 'within' after catchpad
expected scope value for catchpad
expected 'within' after cleanuppad
expected scope value for cleanuppad
invalid operand type for instruction
expected 'to' in callbr
expected '[' in callbr
callbr instructions may not have an alignment
expected ',' in arithmetic operation
expected ',' in logical operation
instruction requires integer or integer vector operands
expected ',' after compare value
icmp requires integer operands
expected 'to' after cast value
expected ',' after select condition
expected ',' after select value
expected ',' after vaarg operand
va_arg requires operand with first class type
expected ',' after extract value
expected ',' after insertelement value
expected ',' after shuffle mask
expected ',' after shuffle value
invalid shufflevector operands
expected '[' in phi value list
expected ']' in phi value list
phi node must have first class type
'catch' clause has an invalid type
'filter' clause has an invalid type
clause argument must be a constant
expected 'tail call', 'musttail call', or 'notail call'
call instructions may not have an alignment
fast-math-flags specified for call without floating-point scalar or vector return type
invalid type for alloca
element count must have integer type
Cannot allocate unsized type
expected comma after load's type
load operand must be a pointer to a first class type
atomic load must have explicit non-zero alignment
atomic load cannot use Release ordering
loading unsized types is not allowed
expected ',' after store operand
store operand must be a pointer
store operand must be a first class value
stored value and pointer type do not match
atomic store must have explicit non-zero alignment
atomic store cannot use Acquire ordering
storing unsized types is not allowed
expected ',' after cmpxchg address
expected ',' after cmpxchg cmp operand
cmpxchg cannot be unordered
cmpxchg failure argument shall be no stronger than the success argument
cmpxchg failure ordering cannot include release semantics
cmpxchg operand must be a pointer
compare value and pointer type do not match
new value and pointer type do not match
cmpxchg operand must be a first class value
expected binary operation in atomicrmw
expected ',' after atomicrmw address
atomicrmw cannot be unordered
atomicrmw operand must be a pointer
atomicrmw value and pointer type do not match
atomicrmw 
 operand must be an integer or floating point type
 operand must be a floating point type
 operand must be an integer
atomicrmw operand must be power-of-two byte-sized integer
fence cannot be unordered
fence cannot be monotonic
expected comma after insertvalue operand
value has no uses
value only has one use
wrong number of indexes, expected 
expected non-empty list of uselistorder indexes
expected '}' here
expected >= 2 uselistorder indexes
expected distinct uselistorder indexes in range [0, size)
expected uselistorder indexes to change the order
expected uselistorder directive
expected comma in uselistorder directive
expected comma in uselistorder_bb directive
expected function name in uselistorder_bb
invalid function forward reference in uselistorder_bb
invalid declaration in uselistorder_bb
invalid numeric label in uselistorder_bb
expected basic block name in uselistorder_bb
invalid basic block in uselistorder_bb
expected basic block in uselistorder_bb
expected ':' here
expected 'path' here
expected ',' here
expected 'hash' here
expected 'name' here
expected 'summary' here
expected 'offset' here
expected ')' in call
expected 'typeTestRes' here
expected 'kind' here
unexpected TypeTestResolution kind
expected 'sizeM1BitWidth' here
expected ':'
expected optional TypeTestResolution field
expected 'wpdResolutions' here
expected 'wpdRes' here
unexpected WholeProgramDevirtResolution kind
expected optional WholeProgramDevirtResolution field
expected 'byArg here
unexpected WholeProgramDevirtResolution::ByArg kind
expected optional whole program devirt field
expected 'args' here
expected name or guid tag
expected 'summaries' here
expected summary type
expected 'insts' here
expected optional function summary field
expected optional variable summary field
expected 'aliasee' here
expected ':' in funcFlags
expected '(' in funcFlags
expected function flag type
expected ')' in funcFlags
expected ':' in calls
expected '(' in calls
expected 'callee' in call
expected relbf
expected ')' in calls
invalid call edge hotness
expected ':' in vTableFuncs
expected '(' in vTableFuncs
expected '(' in vTableFunc
expected 'callee' in vTableFunc
expected comma
expected offset
expected ')' in vTableFunc
expected ')' in vTableFuncs
expected 'param' here
expected '[' here
expected ']' here
expected 'callee' here
expected 'calls' here
expected ':' in refs
expected '(' in refs
expected ')' in refs
expected '(' in typeIdInfo
invalid typeIdInfo list type
expected ')' in typeIdInfo
expected 'guid' here
expected gv flag type
expected gvar flag type
expected 'module' here
expected module ID
expected GV ID
expected field label here
inlinedAt
isImplicitCode
invalid field '
field '
' cannot be specified more than once
value for '
' too large, limit is 
' cannot be null
expected 'true' or 'false'
operands
expected DWARF tag
invalid DWARF tag
' cannot be empty
lowerBound
upperBound
expected signed integer
' too small, limit is 
isUnsigned
expected DWARF type attribute encoding
invalid DWARF type attribute encoding
expected debug info flag
invalid debug info flag flag '
stringLength
stringLengthExpression
baseType
extraData
dwarfAddressSpace
ptrAuthKey
ptrAuthIsAddressDiscriminated
ptrAuthExtraDiscriminator
ptrAuthIsaPointer
ptrAuthAuthenticatesNullValues
runtimeLang
vtableHolder
templateParams
dataLocation
associated
allocated
rank
expected DWARF language
invalid DWARF language
types
expected DWARF calling convention
invalid DWARF calling convention
checksumkind
checksum
invalid checksum kind
producer
isOptimized
runtimeVersion
splitDebugFilename
emissionKind
retainedTypes
imports
macros
dwoId
splitDebugInlining
debugInfoForProfiling
nameTableKind
rangesBaseAddress
sysroot
expected emission kind
invalid emission kind
expected nameTable kind
invalid nameTable kind
linkageName
isLocal
isDefinition
scopeLine
containingType
virtuality
virtualIndex
thisAdjustment
spFlags
unit
retainedNodes
thrownTypes
expected DWARF virtuality code
invalid DWARF virtuality code
invalid subprogram debug info flag '
exportSymbols
expected DWARF macinfo type
invalid DWARF macinfo type
nodes
configMacros
includePath
isDecl
defaulted
expr
entity
Linking globals named '
': can only link appending global with another appending global!
Appending variables with different element types!
Appending variables linked with different const'ness!
Appending variables with different alignment need to be linked!
Appending variables with different visibility need to be linked!
Appending variables with different unnamed_addr need to be linked!
Appending variables with different section name need to be linked!
Linking two modules of different data layouts: '
' is '
' whereas '
Linking two modules of different target triples: '
.text
.balign 2
.thumb
.text
.balign 4
.arm
linking module flags '
': IDs have conflicting override values in '
': IDs have conflicting behaviors in '
': IDs have conflicting values ('
' from 
 with '
': IDs have conflicting values in '
': does not have the required value
enable-if-conversion
Enable if-conversion during vectorization.
pragma-vectorize-memory-check-threshold
The maximum allowed number of runtime memory checks with a vectorize(enable) pragma.
vectorize-scev-check-threshold
The maximum number of SCEV checks allowed.
pragma-vectorize-scev-check-threshold
The maximum number of SCEV checks allowed with a vectorize(enable) pragma
vectorize.width
interleave.count
vectorize.enable
isvectorized
vectorize.predicate.enable
vectorize.scalable.enable
vectorize.
interleave.
loop-vectorize
Unsupported basic block terminator
loop control flow is not understood by vectorizer
CFGNotUnderstood
Unsupported conditional branch
Outer loop contains divergent loops
Unsupported outer loop Phi(s)
UnsupportedPhi
Found a non-int non-pointer PHI
Found an invalid PHI
Found an unidentified PHI
value that could not be identified as reduction is used outside the loop
NonReductionValueUsedOutsideLoop
Found a non-intrinsic callsite
library call cannot be vectorized. Try compiling with -fno-math-errno, -ffast-math, or similar flags
CantVectorizeLibcall
call instruction cannot be vectorized
Found unvectorizable intrinsic
intrinsic instruction cannot be vectorized
CantVectorizeIntrinsic
Found unvectorizable type
instruction return type cannot be vectorized
CantVectorizeInstructionReturnType
Store instruction cannot be vectorized
store instruction cannot be vectorized
CantVectorizeStore
nontemporal store instruction cannot be vectorized
CantVectorizeNontemporalStore
nontemporal load instruction cannot be vectorized
CantVectorizeNontemporalLoad
Value cannot be used outside the loop
value cannot be used outside the loop
ValueUsedOutsideLoop
Did not find one integer induction var
loop induction variable could not be identified
NoInductionVariable
integer loop induction variable could not be identified
NoIntegerInductionVariable
Stores to a uniform address
write to a loop invariant address could not be vectorized
CantVectorizeStoreToLoopInvariantAddress
If-conversion is disabled
if-conversion is disabled
IfConversionDisabled
Loop contains a switch statement
loop contains a switch statement
LoopContainsSwitch
Control flow cannot be substituted for a select
control flow cannot be substituted for a select
NoCFGForSelect
Loop doesn't have a legal pre-header
The loop must have a single backedge
The loop must have a unique exit block
The loop must have no live-out values if it has more than one exiting block
Unsupported outer loop
unsupported outer loop
UnsupportedOuterLoop
Too many SCEV checks needed
Too many SCEV assumptions need to be made and checked at runtime
TooManySCEVRunTimeChecks
llvm.loop.
AllDisabled
loop not vectorized: vectorization and interleaving are explicitly disabled, or the loop has already been vectorized
MissedExplicitlyDisabled
loop not vectorized: vectorization is explicitly disabled
MissedDetails
loop not vectorized
 (Force=
, Vector Width=
VectorWidth
, Interleave Count=
InterleaveCount
CantReorderFPOps
loop not vectorized: cannot prove it is safe to reorder floating-point operations
CantReorderMemOps
loop not vectorized: cannot prove it is safe to reorder memory operations
loop not vectorized: 
LoopsVectorized
Number of loops vectorized
LoopsAnalyzed
Number of loops analyzed for vectorization
LoopsEpilogueVectorized
Number of epilogues vectorized
enable-epilogue-vectorization
Enable vectorization of epilogue loops.
epilogue-vectorization-force-VF
When epilogue vectorization is enabled, and a value greater than 1 is specified, forces the given VF for all applicable epilogue loops.
epilogue-vectorization-minimum-VF
Only loops with vectorization factor equal to or larger than the specified value are considered for epilogue vectorization.
vectorizer-min-trip-count
Loops with a constant trip count that is smaller than this value are vectorized only if no scalar iteration overheads are incurred.
prefer-predicate-over-epilogue
Tail-folding and predication preferences over creating a scalar epilogue loop.
scalar-epilogue
Don't tail-predicate loops, create scalar epilogue
predicate-else-scalar-epilogue
prefer tail-folding, create scalar epilogue if tail folding fails.
predicate-dont-vectorize
prefers tail-folding, don't attempt vectorization if tail-folding fails.
vectorizer-maximize-bandwidth
Maximize bandwidth when selecting vectorization factor which will be determined by the smallest type in loop.
enable-interleaved-mem-accesses
Enable vectorization on interleaved memory accesses in a loop
enable-masked-interleaved-mem-accesses
Enable vectorization on masked interleaved memory accesses in a loop
tiny-trip-count-interleave-threshold
We don't interleave loops with a estimated constant trip count below this number
force-target-num-scalar-regs
A flag that overrides the target's number of scalar registers.
force-target-num-vector-regs
A flag that overrides the target's number of vector registers.
force-target-max-scalar-interleave
A flag that overrides the target's max interleave factor for scalar loops.
force-target-max-vector-interleave
A flag that overrides the target's max interleave factor for vectorized loops.
force-target-instruction-cost
A flag that overrides the target's expected cost for an instruction to a single constant value. Mostly useful for getting consistent testing.
small-loop-cost
The cost of a loop that is considered 'small' by the interleaver.
loop-vectorize-with-block-frequency
Enable the use of the block frequency analysis to access PGO heuristics minimizing code growth in cold regions and being more aggressive in hot regions.
enable-loadstore-runtime-interleave
Enable runtime interleaving until load/store ports are saturated
interleave-small-loop-scalar-reduction
Enable interleaving for loops with small iteration counts that contain scalar reductions to expose ILP.
vectorize-num-stores-pred
Max number of stores to be predicated behind an if.
enable-ind-var-reg-heur
Count the induction variable only once when interleaving
enable-cond-stores-vec
Enable if predication of stores during vectorization.
max-nested-scalar-reduction-interleave
The maximum interleave count to use when interleaving a scalar reduction in a nested loop.
prefer-inloop-reductions
Prefer in-loop vector reductions, overriding the targets preference.
prefer-predicated-reduction-select
Prefer predicating a reduction operation over an after loop select.
enable-vplan-native-path
Enable VPlan-native vectorization path with support for outer loop vectorization.
enable-vplan-predication
Enable VPlan-native vectorization path predicator with support for outer loop vectorization.
vplan-build-stress-test
Build VPlan for every supported loop nest in the function and bail out right after the build (stress test the VPlan H-CFG construction in the VPlan-native vectorization path).
interleave-loops
Enable loop interleaving in Loop vectorization passes
vectorize-loops
Run the Loop vectorization passes
broadcast
vec.ind
step.add
vec.ind.next
induction
interleaved.mask
wide.masked.vec
wide.vec
strided.vec
interleaved.vec
wide.masked.gather
wide.masked.load
wide.load
.cloned
index.next
exitcount.ptrcnt.to.int
n.rnd.up
n.mod.vf
n.vec
min.iters.check
vector.ph
scev.check
vector.scevcheck
vector.memcheck
middle.block
scalar.ph
vector.body
bc.resume.val
cast.crd
ind.end
cmp.n
cast.cmo
ind.escape
vector.recur.init
vector.recur
vector.recur.extract
vector.recur.extract.for.phi
scalar.recur.init
scalar.recur
minmax.ident
bin.rdx
bc.merge.rdx
vec.phi
next.gep
pointer.phi
ptr.ind
vector.gep
runtime pointer checks needed. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os/-Oz
CantVersionLoopWithOptForSize
runtime SCEV checks needed. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os/-Oz
runtime stride == 1 checks needed. Enable vectorization of this loop without such check by compiling with -Os/-Oz
runtime pointer checks needed. Not enabled for divergent target
CantVersionLoopWithDivergentTarget
loop trip count is one, irrelevant for vectorization
SingleIterationLoop
unable to calculate the loop count due to complex control flow
UnknownLoopCountComplexCFG
cannot optimize for size and vectorize at the same time. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os/-Oz
NoTailLoopWithOptForSize
store that is conditionally executed prevents vectorization
ConditionalStore
iter.check
vector.main.loop.iter.check
vec.epilog.
vec.epilog.iter.check
vec.epilog.ph
vec.epilog.resume.val
n.vec.remaining
min.epilog.iters.check
pred.
.entry
.continue
Pre-Entry
Initial VPlan for VF={
},UF>=1
"INTERLEAVE-GROUP with factor 
\l" +
predphi
loop not vectorized due to NoImplicitFloat attribute
NoImplicitFloat
loop not vectorized due to unsafe FP support.
UnsafeFP
VectorizationNotBeneficial
the cost-model indicates that vectorization is not beneficial
InterleavingAvoided
Ignoring UserIC, because interleaving was avoided up front
InterleavingNotBeneficial
the cost-model indicates that interleaving is not beneficial
InterleavingNotBeneficialAndDisabled
 and is explicitly disabled or interleave count is set to 1
InterleavingBeneficialButDisabled
the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1
offset.idx
llvm.loop.unroll.runtime.disable
"BRANCH-ON-MASK 
 All-One
VectorizationCodeSize
Code-size may be reduced by not forcing vectorization, or by source-code modifications eliminating the need for runtime checks (e.g., adding 'restrict').
VectorizationFactor
User-specified vectorization factor 
UserVectorizationFactor
 is unsafe, clamping to maximum safe vectorization factor 
vscale x 
Interleaved
interleaved loop (interleaved count: 
Vectorized
vectorized loop (vectorization width: 
, interleaved count: 
NumVectorInstructions
Number of vector instructions generated
vectorize-slp
Run the SLP vectorization passes
slp-threshold
Only vectorize if you gain more than this number 
slp-vectorize-hor
Attempt to vectorize horizontal reductions
slp-vectorize-hor-store
Attempt to vectorize horizontal reductions feeding into a store
slp-max-reg-size
Attempt to vectorize for this register size in bits
slp-max-vf
Maximum SLP vectorization factor (0=unlimited)
slp-max-store-lookup
Maximum depth of the lookup for consecutive stores.
slp-schedule-budget
Limit the size of the SLP scheduling region per block
slp-min-reg-size
slp-recursion-max-depth
Limit the recursion depth when building a vectorizable tree
slp-min-tree-size
Only vectorize small trees if they are fully vectorizable
slp-max-look-ahead-depth
The maximum look-ahead depth for operand reordering scores
slp-look-ahead-users-budget
The maximum number of users to visit while visiting the predecessors. This prevents compilation time increase.
view-slp-tree
Display the SLP trees with Graphviz
shrink.shuffle
StoresVectorized
Stores SLP vectorized with cost 
Cost
 and with tree size 
TreeSize
VectorizedList
SLP vectorized with cost 
op.rdx
op.extra
HorSLPNotBeneficial
Vectorizing horizontal reduction is possible
but not beneficial with cost 
 and threshold 
VectorizedHorizontalReduction
Vectorized horizontal reduction with cost 
UnsupportedType
Cannot SLP vectorize list: type 
 is unsupported by vectorizer
SmallVF
Cannot SLP vectorize list: vectorization factor 
less than 2 is not supported
NotBeneficial
List vectorization was possible but not beneficial with cost 
 >= 
NotPossible
Cannot SLP vectorize list: vectorization was impossible
 with available vectorization factors
NumVecLoad
Number of vector loads formed
NumVecCmp
Number of vector compares formed
NumVecBO
Number of vector binops formed
NumVecCmpBO
Number of vector compare + binop formed
NumShufOfBitcast
Number of shuffles moved after bitcast
NumScalarBO
Number of scalar binops formed
NumScalarCmp
Number of scalar compares formed
disable-vector-combine
Disable all vector combine transforms
disable-binop-extract-shuffle
Disable binop extract to shuffle transforms
Optimize scalar/vector ops
shift
.scalar
active.lane.mask
"EMIT 
icmp ule
combined load
combined store
active lane mask
trip.count.minus.1
vector.body.latch
"WIDEN-CALL 
void 
call @
"WIDEN-SELECT 
 = select 
 (condition is loop invariant)
"WIDEN 
"WIDEN-INDUCTION
"WIDEN-GEP 
 = getelementptr 
"WIDEN-PHI 
"BLEND 
"REDUCE 
 + reduce.
CLONE 
REPLICATE 
 (S->V)
"PHI-PREDICATED-INSTRUCTION 
vec.iv
 = WIDEN-CANONICAL-INDUCTION
<badref>
vp<%
vplan-verify-hcfg
Verify VPlan H-CFG.
NumRemoved
Number of instructions removed
NumBranchesRemoved
Number of branch instructions removed
adce-remove-control-flow
adce-remove-loops
Aggressive Dead Code Elimination
Annotation Remarks
AnnotationSummary
Annotated 
 instructions with 
Bit-Tracking Dead Code Elimination
NumCallSiteSplit
Number of call-site split
callsite-splitting-duplication-threshold
Only allow instructions before a call, if their cost is below DuplicationThreshold
Call-site splitting
phi.call
NumConstantsHoisted
Number of constants hoisted
NumConstantsRebased
Number of constants rebased
consthoist-with-block-frequency
Enable the use of the block frequency analysis to reduce the chance to execute const materialization more frequently than without hoisting.
consthoist-gep
Try hoisting constant gep expressions
consthoist-min-num-to-rebase
Do not rebase if number of dependent constants of a Base is less than this number.
base_bitcast
mat_gep
mat_bitcast
const_mat
NumCondsRemoved
NumWrapFlagsAdded
Number of wrapping flags added
conds-eliminated
Controls which conditions are eliminated
constraint-elimination-dump-repros
Dump IR to reproduce successful transformations.
repro
Constraint Elimination
correlated-value-propagation
NumPhis
Number of phis propagated
NumPhiCommon
Number of phis deleted via common incoming value
NumSelects
Number of selects propagated
NumMemAccess
Number of memory access targets propagated
NumCmps
Number of comparisons propagated
NumReturns
Number of return values propagated
NumDeadCases
Number of switch cases removed
NumSDivSRemsNarrowed
Number of sdivs/srems whose width was decreased
NumSDivs
Number of sdiv converted to udiv
NumUDivURemsNarrowed
Number of udivs/urems whose width was decreased
NumAShrs
Number of ashr converted to lshr
NumSRems
Number of srem converted to urem
NumSExt
Number of sext converted to zext
NumAnd
Number of ands removed
NumNW
Number of no-wrap deductions
NumNSW
Number of no-signed-wrap deductions
NumNUW
Number of no-unsigned-wrap deductions
NumAddNW
Number of no-wrap deductions for add
NumAddNSW
Number of no-signed-wrap deductions for add
NumAddNUW
Number of no-unsigned-wrap deductions for add
NumSubNW
Number of no-wrap deductions for sub
NumSubNSW
Number of no-signed-wrap deductions for sub
NumSubNUW
Number of no-unsigned-wrap deductions for sub
NumMulNW
Number of no-wrap deductions for mul
NumMulNSW
Number of no-signed-wrap deductions for mul
NumMulNUW
Number of no-unsigned-wrap deductions for mul
NumShlNW
Number of no-wrap deductions for shl
NumShlNSW
Number of no-signed-wrap deductions for shl
NumShlNUW
Number of no-unsigned-wrap deductions for shl
NumOverflows
Number of overflow checks removed
NumSaturating
Number of saturating arithmetics converted to normal arithmetics
cvp-dont-add-nowrap-flags
Value Propagation
.nonneg
.neg
.lhs.trunc
.rhs.trunc
.sext
.zext
DCEEliminated
Number of insts removed
dce-transform
Controls which instructions are eliminated
NumRemainingStores
Number of stores remaining after DSE
NumRedundantStores
Number of redundant stores deleted
NumFastStores
Number of stores deleted
NumFastOther
Number of other instrs removed
NumCompletePartials
Number of stores dead by later partials
NumModifiedStores
Number of stores modified
NumCFGChecks
NumCFGTries
NumCFGSuccess
NumGetDomMemoryDefPassed
Number of times a valid candidate is returned from getDomMemoryDef
NumDomMemDefChecks
Number iterations check for reads in getDomMemoryDef
dse-memoryssa
Controls which MemoryDefs are eliminated.
enable-dse-partial-overwrite-tracking
Enable partial-overwrite tracking in DSE
enable-dse-partial-store-merging
Enable partial store merging in DSE
enable-dse-memoryssa
Use the new MemorySSA-backed DSE.
dse-memoryssa-scanlimit
The number of memory instructions to scan for dead store elimination (default = 100)
dse-memoryssa-walklimit
The maximum number of steps while walking upwards to find MemoryDefs that may be killed (default = 90)
dse-memoryssa-partial-store-limit
The maximum number candidates that only partially overwrite the killing MemoryDef to consider (default = 5)
dse-memoryssa-defs-per-block-limit
The number of MemoryDefs we consider as candidates to eliminated other stores per basic block (default = 5000)
dse-memoryssa-samebb-cost
The cost of a step in the same basic block as the killing MemoryDef(default = 1)
dse-memoryssa-otherbb-cost
The cost of a step in a different basic block than the killing MemoryDef(default = 5)
dse-memoryssa-path-check-limit
The maximum number of blocks to check when trying to prove that all paths to an exit go through a killing block (default = 50)
Dead Store Elimination
NumPairs
Number of div/rem pairs
NumRecomposed
Number of instructions recomposed
NumDecomposed
Number of instructions decomposed
div-rem-pairs-transform
Controls transformations in div-rem-pairs pass
Hoist/decompose integer division and remainder
.recomposed
.frozen
.decomposed
NumSimplify
Number of instructions simplified or DCE'd
NumCSE
Number of instructions CSE'd
NumCSECVP
Number of compare instructions CVP'd
NumCSELoad
Number of load instructions CSE'd
NumCSECall
Number of call instructions CSE'd
NumDSE
Number of trivial dead stores removed
Controls which instructions are removed
earlycse-mssa-optimization-cap
Enable imprecision in EarlyCSE in pathological cases, in exchange for faster compile. Caps the MemorySSA clobbering calls.
earlycse-debug-hash
Perform extra assertion checking to verify that SimpleValue's hash function is well-behaved w.r.t. its isEqual predicate
Early CSE
Early CSE w/ MemorySSA
float2int-max-integer-bw
Max integer bitwidth to consider in float2int(default=64)
Float to int
GuardsEliminated
Number of eliminated guards
CondBranchEliminated
Number of eliminated conditional branches
guard-widening-widen-branch-guards
Whether or not we should widen guards  expressed as branches by widenable conditions
wide.chk
NumGVNInstr
Number of instructions deleted
NumGVNLoad
Number of loads deleted
NumGVNPRE
Number of instructions PRE'd
NumGVNBlocks
Number of blocks merged
NumGVNSimpl
Number of instructions simplified
NumGVNEqProp
Number of equalities propagated
NumPRELoad
Number of loads PRE'd
IsValueFullyAvailableInBlockNumSpeculationsMax
Number of blocks speculated as available in IsValueFullyAvailableInBlock(), max
MaxBBSpeculationCutoffReachedTimes
Number of times we we reached gvn-max-block-speculations cut-off preventing further exploration
enable-pre
enable-load-pre
enable-load-in-loop-pre
enable-split-backedge-in-load-pre
enable-gvn-memdep
gvn-max-num-deps
Max number of dependences to attempt Load PRE (default = 100)
gvn-max-block-speculations
Max number of blocks we're willing to speculate on (and recurse into) when deducing if a value is fully available or not in GVN (default = 600)
.pre
.pre-phi
LoadClobbered
load of type 
 not eliminated
 in favor of 
OtherAccess
 because it is clobbered by 
ClobberedBy
LoadElim
 eliminated
InfavorOfValue
Global Value Numbering
LoadPRE
load eliminated by PRE
NumLoadsHoisted
Number of loads hoisted
NumLoadsRemoved
Number of loads removed
NumStoresHoisted
Number of stores hoisted
NumStoresRemoved
Number of stores removed
NumCallsHoisted
Number of calls hoisted
NumCallsRemoved
Number of calls removed
gvn-max-hoisted
Max number of instructions to hoist (default unlimited = -1)
gvn-hoist-max-bbs
Max number of basic blocks on the path between hoisting locations (default = 4, unlimited = -1)
gvn-hoist-max-depth
Hoist instructions from the beginning of the BB up to the maximum specified depth (default = 100, unlimited = -1)
gvn-hoist-max-chain-length
Maximum length of dependent chains to hoist (default = 10, unlimited = -1)
Early GVN Hoisting of Expressions
.gvnsink.split
ExpressionTypeBasic, 
operands = {
opcode = 
.sink
Early GVN sinking of Expressions
irce-loop-size-cutoff
irce-print-changed-loops
irce-print-range-checks
irce-skip-profitability-checks
irce-min-runtime-iterations
irce-allow-unsigned-latch
irce-allow-narrow-latch
If set to true, IRCE may eliminate wide range checks in loops with narrow latch condition.
irce: looking at loop 
irce: loop has 
 inductive range checks: 
InductiveRangeCheck:
  Begin: 
  Step: 
  End: 
  CheckUse: 
 Operand: 
indvar.start
irce.loop.clone
exit.preloop.at
exit.mainloop.at
preloop
postloop
mainloop
.exit.selector
.pseudo.exit
.copy
indvar.end
wide.
llvm.loop.licm_versioning.disable
irce: in function 
constrained 
NumWidened
Number of indvars widened
NumReplaced
Number of exit values replaced
NumLFTR
Number of loop exit tests replaced
NumElimExt
Number of IV sign/zero extends eliminated
NumElimIV
Number of congruent IVs eliminated
verify-indvars
Verify the ScalarEvolution result after running indvars. Has no effect in release builds. (Note: this adds additional SCEV queries potentially changing the analysis result)
replexitval
Choose the strategy to replace exit value in IndVarSimplify
never replace exit value
cheap
only replace exit value when the cost is cheap
noharduse
only replace exit values when loop def likely dead
always replace exit value whenever possible
indvars-post-increment-ranges
Use post increment control-dependent ranges in IndVarSimplify
disable-lftr
Disable Linear Function Test Replace optimization
indvars-predicate-loops
Predicate conditions in read only loops
indvars-widen-indvars
Allow widening of indvars to eliminate s/zext
.int
indvar.conv
wide.trip.count
lftr.wideiv
exitcond
Induction Variable Simplification
assume-default-is-flat-addrspace
The default address space is assumed as the flat address space. This is mainly for test purpose.
Remove redundant instructions
NumThreads
NumFolds
Number of terminators folded
NumDupes
Number of branch blocks duplicated to eliminate phi
jump-threading-threshold
Max block size to duplicate for jump threading
jump-threading-implication-search-threshold
The number of predecessors to search for a stronger condition to use to thread over a weaker condition
print-lvi-after-jump-threading
Print the LazyValueInfo cache after JumpThreading
jump-threading-freeze-select-cond
Freeze the condition when unfolding select
jump-threading-across-loop-headers
Allow JumpThreading to thread across loop headers, for testing
LVI for function '
thread-pre-split
.thread
.thr_comm
.split-lp
select.unfold
cond.fr
Jump Threading
NumCreatedBlocks
Number of blocks created
NumClonedBranches
Number of branches cloned
Number of instructions sunk out of loop
Number of instructions hoisted out of loop
NumMovedLoads
Number of load insts hoisted or sunk
NumMovedCalls
Number of call insts hoisted or sunk
NumPromoted
Number of memory locations promoted to registers
disable-licm-promotion
Disable memory promotion in LICM pass
licm-control-flow-hoisting
Enable control flow (and PHI) hoisting in LICM
licm-coldness-threshold
Relative coldness Threshold of hoisting/sinking destination block for LICM to be considered beneficial
licm-max-num-uses-traversed
Max num uses visited for identifying load invariance in loop using invariant start (default = 8)
licm-n2-threshold
How many instruction to cross product using AA
licm-mssa-optimization-cap
Enable imprecision in LICM in pathological cases, in exchange for faster compile. Caps the MemorySSA clobbering calls.
licm-mssa-max-acc-promotion
[LICM & MemorySSA] When MSSA in LICM is disabled, this has no effect. When MSSA in LICM is enabled, then this is the maximum number of accesses allowed to be present in a loop in order to enable memory promotion.
.promoted
Loop Invariant Code Motion
SinkHoistInst
failed to sink or hoist instruction because containing block has lower frequency than destination block
.licm
InstSunk
sinking 
Inst
.split.loop.exit
.lcssa
Hoisted
hoisting 
LoadWithLoopInvariantAddressCondExecuted
failed to hoist load with loop-invariant address because load is conditionally executed
LoadWithLoopInvariantAddressInvalidated
failed to move load with loop-invariant address because the loop may invalidate its value
PromoteLoopAccessesToScalar
Moving accesses to memory location out of the loop
Loop access info in function '
loopsink
NumLoopSunk
Number of instructions sunk into loop
NumLoopSunkCloned
Number of cloned instructions sunk into loop
sink-freq-percent-threshold
Do not sink instructions that require cloning unless they execute less than this percent of the time.
max-uses-for-sinking
Do not sink instructions that have too many uses.
enable-mssa-in-loop-sink
Enable MemorySSA for LoopSink in new pass manager
enable-mssa-in-legacy-loop-sink
Enable MemorySSA for LoopSink in legacy pass manager
Loop Sink
loop-delete
<unnamed loop>
NeverExecutes
Loop deleted because it never executes
Invariant
Loop deleted because it is invariant
Delete dead loops
loop-prefetch-writes
Prefetch write addresses
prefetch-distance
Number of instructions to prefetch ahead
min-prefetch-stride
Min stride to add prefetches
max-prefetch-iters-ahead
Max number of iterations to prefetch ahead
NumPrefetches
Number of prefetches inserted
prefaddr
Prefetched
prefetched memory access
loop-distribute-verify
Turn on DominatorTree and LoopInfo verification after Loop Distribution
loop-distribute-non-if-convertible
Whether to distribute into a loop that may not be if-convertible by the loop vectorizer
loop-distribute-scev-check-threshold
The maximum number of SCEV checks allowed for Loop Distribution
loop-distribute-scev-check-threshold-with-pragma
The maximum number of SCEV checks allowed for Loop Distribution for loop marked with #pragma loop distribute(enable)
enable-loop-distribute
Enable the new, experimental LoopDistribution Pass
loop-distribute-mem
Only distribute loops with a large number of memory ops and backwards dependences with distance 1.
NumLoopsDistributed
Number of loops distributed
MultipleExitBlocks
multiple exit blocks
NotLoopSimplifyForm
loop is not in loop-simplify form
NotBottomTested
loop is not bottom tested
MemOpsCanBeVectorized
memory operations are safe for vectorization
NoUnsafeDeps
no unsafe dependences to isolate
DoesNotImproveMemThroughput
Unlikely to improve memory throughput.
CantIsolateUnsafeDeps
cannot isolate unsafe dependencies
RuntimeCheckWithConvergent
may not insert runtime check with convergent operation
TooManySCEVRuntimeChecks
too many SCEV run-time checks needed.
HeuristicDisabled
distribution heuristic disabled
llvm.loop.distribute.followup_fallback
llvm.loop.distribute.
loop not distributed: 
loop not distributed: failed explicitly specified loop distribution
NotDistributed
loop not distributed: use -Rpass-analysis=loop-distribute for more info
.ldist
llvm.loop.distribute.followup_sequential
llvm.loop.distribute.followup_coincident
Distribute
distributed loop
FuseCounter
Loops fused
NumFusionCandidates
Number of candidates for loop fusion
InvalidPreheader
Loop has invalid preheader
InvalidHeader
Loop has invalid header
InvalidExitingBlock
Loop has invalid exiting blocks
InvalidExitBlock
Loop has invalid exit block
InvalidLatch
Loop has invalid latch
InvalidLoop
Loop is invalid
AddressTakenBB
Basic block has address taken
MayThrowException
Loop may throw an exception
ContainsVolatileAccess
Loop contains a volatile access
NotSimplifiedForm
Loop is not in simplified form
InvalidDependencies
Dependencies prevent fusion
UnknownTripCount
Loop has unknown trip count
UncomputableTripCount
SCEV cannot compute trip count of loop
NonEqualTripCount
Loop trip counts are not the same
NonAdjacent
Loops are not adjacent
NonEmptyPreheader
Loop has a non-empty preheader with instructions that cannot be moved
FusionNotBeneficial
Fusion is not beneficial
NonIdenticalGuards
Candidates have different guards
NonEmptyExitBlock
Candidate has a non-empty exit block with instructions that cannot be moved
NonEmptyGuardBlock
Candidate has a non-empty guard block with instructions that cannot be moved
NotRotated
Candidate is not rotated
loop-fusion-dependence-analysis
Which dependence analysis should loop fusion use?
scev
Use the scalar evolution interface
Use the dependence analysis interface
Use all available analyses
loop-fusion-peel-max-count
Max number of iterations to be peeled from a loop, such that fusion can take place
Loop is not a candidate for fusion: 
Cand1
Cand2
.afterFC0
NumMemSet
Number of memset's formed from loop stores
NumMemCpy
Number of memcpy's formed from loop load+stores
NumShiftUntilBitTest
Number of uncountable loops recognized as 'shift until bitttest' idiom
disable-loop-idiom-all
Options to disable Loop Idiom Recognize Pass.
disable-loop-idiom-memset
Proceed with loop idiom recognize pass, but do not convert loop(s) to memset.
disable-loop-idiom-memcpy
Proceed with loop idiom recognize pass, but do not convert loop(s) to memcpy.
use-lir-code-size-heurs
Use loop idiom recognition code size heuristics when compilingwith -Os/-Oz
Recognize loop idioms
memset_pattern16
.memset_pattern
ProcessLoopStridedStore
Transformed loop-strided store into a call to 
NewFunction
() function
FromBlock
ToBlock
ProcessLoopStoreOfLoopLoad
Formed a call to 
tcphi
tcdec
.lowbitmask
.mask
.masked
.numleadingzeros
.numactivebits
.leadingonepos
.backedgetakencount
.tripcount
.next
.ivcheck
Simplify instructions in loops
LoopsInterchanged
Number of loops interchanged
loop-interchange-threshold
Interchange if you gain more than this number
Interchanges loops for cache reuse
Dependence
Cannot interchange loops due to dependences.
CallInst
Cannot interchange loops due to call instruction.
ExitingNotLatch
Loops where the latch is not the exiting block cannot be interchange currently.
UnsupportedPHIOuter
Only outer loops with induction or reduction PHI nodes can be interchanged currently.
MultiIndutionOuter
Only outer loops with 1 induction variable can be interchanged currently.
UnsupportedPHIInner
Only inner loops with induction or reduction PHI nodes can be interchange currently.
MultiInductionInner
Only inner loops with 1 induction variable can be interchanged currently.
UnsupportedStructureInner
Inner loop structure not understood currently.
NoIncrementInInner
The inner loop does not increment the induction variable.
UnsupportedInsBetweenInduction
Found unsupported instruction between induction variable increment and branch.
NoIndutionVariable
Did not find the induction variable.
NotTightlyNested
Cannot interchange loops because they are not tightly nested.
UnsupportedExitPHI
Found unsupported PHI node in loop exit.
InterchangeNotProfitable
Interchanging loops is too costly (cost=
) and it does not improve parallelism.
Interchanged
Loop interchanged with enclosing loop.
loop-flatten-cost-threshold
Limit on the cost of instructions that can be repeated due to loop flattening
loop-flatten-assume-no-overflow
Assume that the product of the two iteration limits will never overflow
loop-flatten-widen-iv
Widen the loop induction variables, if possible, so overflow checks won't reject flattening
loopflatten
Flattened
Flattened into outer loop
flatten.tripcount
flatten.trunciv
Flattens loops
runtime-check-per-loop-load-elim
Max number of memchecks allowed per eliminated load on average
loop-load-elimination-scev-check-threshold
The maximum number of SCEV checks allowed for Loop Load Elimination
NumLoopLoadEliminted
Number of loads eliminated by LLE
storeforward
load_initial
store_forwarded
Starting Loop pass manager run.
Finished Loop pass manager run.
TotalConsidered
Number of guards considered
TotalWidened
Number of checks widened
loop-predication-enable-iv-truncation
loop-predication-enable-count-down-loop
loop-predication-skip-profitability-checks
loop-predication-latch-probability-scale
scale factor for the latch probability. Value should be greater than 1. Lower values are ignored
loop-predication-predicate-widenable-branches-to-deopt
Whether or not we should predicate guards expressed as widenable branches to deoptimize blocks
NumRerolledLoops
Number of rerolled loops
reroll-num-tolerated-failed-matches
The maximum number of failures to tolerate during fuzzy matching. (default: 400)
Reroll loops
reroll
rotation-max-header-size
The default maximum header size for automatic loop rotation
rotation-prepare-for-lto
Run loop-rotation in the prepare-for-lto stage. This option should be used for testing only.
Rotate Loops
enable-loop-simplifycfg-term-folding
NumTerminatorsFolded
Number of terminators folded to unconditional branches
NumLoopBlocksDeleted
Number of loop blocks deleted
NumLoopExitsDeleted
Number of loop exiting edges deleted
Simplify loop CFG
enable-lsr-phielim
Enable LSR phi elimination
lsr-insns-cost
Add instruction count to a LSR cost model
lsr-exp-narrow
Narrow LSR complex solution using expectation of registers number
lsr-filter-same-scaled-reg
Narrow LSR search space by filtering non-optimal formulae with the same ScaledReg and Scale
lsr-backedge-indexing
Enable the generation of cross iteration indexed memops
lsr-complexity-limit
LSR search space complexity limit
lsr-setupcost-depth-limit
The limit on recursion depth for LSRs setup cost
IV.S.
IV.S.next.
.termcond
scmp
lsr.chain
forget-scev-loop-unroll
Forget everything in SCEV when doing LoopUnroll, instead of just the current top-most loop. This is sometimes preferred to reduce compile time.
unroll-threshold
The cost threshold for loop unrolling
unroll-optsize-threshold
The cost threshold for loop unrolling when optimizing for size
unroll-partial-threshold
The cost threshold for partial loop unrolling
unroll-max-percent-threshold-boost
The maximum 'boost' (represented as a percentage >= 100) applied to the threshold when aggressively unrolling a loop due to the dynamic cost savings. If completely unrolling a loop will reduce the total runtime from X to Y, we boost the loop unroll threshold to DefaultThreshold*std::min(MaxPercentThresholdBoost, X/Y). This limit avoids excessive code bloat.
unroll-max-iteration-count-to-analyze
Don't allow loop unrolling to simulate more than this number ofiterations when checking full unroll profitability
unroll-count
Use this unroll count for all loops including those with unroll_count pragma values, for testing purposes
unroll-max-count
Set the max unroll count for partial and runtime unrolling, fortesting purposes
unroll-full-max-count
Set the max unroll count for full unrolling, for testing purposes
unroll-allow-partial
Allows loops to be partially unrolled until -unroll-threshold loop size is reached.
unroll-allow-remainder
Allow generation of a loop remainder (extra iterations) when unrolling a loop.
unroll-runtime
Unroll loops with run-time trip counts
unroll-max-upperbound
The max of trip count upper bound that is considered in unrolling
pragma-unroll-threshold
Unrolled size limit for loops with an unroll(full) or unroll_count pragma.
flat-loop-tripcount-threshold
If the runtime tripcount for the loop is lower than the threshold, the loop is considered as flat and will be less aggressively unrolled.
unroll-remainder
Allow the loop remainder to be unrolled.
unroll-revisit-child-loops
Enqueue and re-visit child loops in the loop PM after unrolling. This shouldn't typically be needed as child loops (or their clones) were already visited.
unroll-threshold-aggressive
Threshold (max size of unrolled loop) to use in aggressive (O3) optimizations
unroll-threshold-default
Default threshold (max size of unrolled loop), used in all but O3 optimizations
Unroll loops
llvm.loop.unroll.followup_remainder
llvm.loop.unroll.followup_unrolled
UnrollAsDirectedTooLarge
Unable to unroll loop as directed by unroll(enable) pragma because unrolled size is too large.
FullUnrollAsDirectedTooLarge
Unable to fully unroll loop as directed by unroll pragma because unrolled size is too large.
CantFullUnrollAsDirectedRuntimeTripCount
Unable to fully unroll loop as directed by unroll(full) pragma because loop has a runtime trip count.
DifferentUnrollCountFromDirected
Unable to unroll loop the number of times directed by unroll_count pragma because remainder loop is restricted (that could architecture specific or because the loop contains a convergent instruction) and so must have an unroll count that divides the loop trip multiple of 
TripMultiple
.  Unrolling instead 
UnrollCount
 time(s).
allow-unroll-and-jam
Allows loops to be unroll-and-jammed.
unroll-and-jam-count
Use this unroll count for all loops including those with unroll_and_jam_count pragma values, for testing purposes
unroll-and-jam-threshold
Threshold to use for inner loop when doing unroll and jam.
pragma-unroll-and-jam-threshold
Unrolled size limit for loops with an unroll_and_jam(full) or unroll_count pragma.
Unroll and Jam loops
llvm.loop.unroll_and_jam.followup_all
llvm.loop.unroll_and_jam.followup_remainder_inner
llvm.loop.unroll_and_jam.followup_remainder_outer
loop-unswitch
NumBranches
Number of branches unswitched
NumSwitches
Number of switches unswitched
NumGuards
Number of guards unswitched
Number of selects unswitched
NumTrivial
Number of unswitches that are trivial
Number of simplifications of unswitched code
TotalInsts
Total number of instructions analyzed
loop-unswitch-threshold
Max loop size to unswitch
loop-unswitch-memoryssa-threshold
Max number of memory uses to explore during partial unswitching analysis
Unswitch loops
llvm.loop.unswitch.partial.disable
us-unreachable
llvm.loop.unswitch.partial
.us-lcssa
licm-versioning-invariant-threshold
LoopVersioningLICM's minimum allowed percentageof possible invariant instructions per loop
licm-versioning-max-depth-threshold
LoopVersioningLICM's threshold for maximum allowed loop nest/depth
Loop Versioning For LICM
Loop Versioning for LICM
llvm.mem.parallel_loop_access
IllegalLoopStruct
 Unsafe Loop structure
IllegalLoopInst
 Unsafe Loop Instruction
RuntimeCheck
Number of runtime checks 
RuntimeChecks
 exceeds threshold 
InvariantThreshold
Invariant load & store 
LoadAndStoreCounter
 are less then defined threshold 
IllegalLoopMemoryAccess
 Unsafe Loop memory access
IsLegalForVersioning
 Versioned loop for LICM.
 Number of runtime checks we had to insert 
LVDomain
LVAliasScope
Lower constant intrinsics
lower-expect-intrinsic
ExpectIntrinsicsHandled
Number of 'expect' intrinsic instructions handled
likely-branch-weight
Weight of the branch likely to be taken (default = 2000)
unlikely-branch-weight
Weight of the branch unlikely to be taken (default = 1)
Lower 'expect' Intrinsics
matrix-propagate-shape
Enable/disable shape propagation from matrix intrinsics to other instructions.
fuse-matrix
Enable/disable fusing matrix instructions.
fuse-matrix-tile-size
Tile size for matrix instruction fusion using square-shaped tiles.
fuse-matrix-use-loops
Generate loop nest for tiling.
force-fuse-matrix
Force matrix instruction fusion even if not profitable.
matrix-allow-contract
Allow the use of FMAs if available and profitable. This may result in different results, due to less rounding error.
matrix-default-layout
Sets the default matrix layout
column-major
Use column-major layout
row-major
Use row-major layout
alias_cont
store.begin
store.end
load.begin
load.end
result.vec.
col.cast
col.load
vec.start
vec.gep
vec.cast
matrix-lowered
Lowered with 
NumStores
 stores, 
NumLoads
 loads, 
NumComputeOps
 compute ops
additionally 
NumFPOps
 are shared with other expressions
shared with remark at line 
 column 
(reused) 
<no called fn>
stack addr
scalar
enable-memcpyopt-memoryssa
Use MemorySSA-backed MemCpyOpt.
NumMemCpyInstr
Number of memcpy instructions deleted
NumMemSetInfer
Number of memsets inferred
NumMoveToCpy
Number of memmoves converted to memcpy
NumCpyToSet
Number of memcpys converted to memset
NumCallSlot
Number of call slot optimizations performed
tmpcast
MemCpy Optimization
MergedLoadStoreMotion
.sink.split
NumGVNInstrDeleted
NumGVNBlocksDeleted
Number of blocks deleted
NumGVNOpsSimplified
Number of Expressions simplified
NumGVNPhisAllSame
Number of PHIs whos arguments are all the same
NumGVNMaxIterations
Maximum Number of iterations it took to converge GVN
NumGVNLeaderChanges
Number of leader changes
NumGVNSortedLeaderChanges
Number of sorted leader changes
NumGVNAvoidedSortedLeaderChanges
Number of avoided sorted leader changes
NumGVNDeadStores
Number of redundant/dead stores eliminated
NumGVNPHIOfOpsCreated
Number of PHI of ops created
NumGVNPHIOfOpsEliminations
Number of things eliminated using PHI of ops
newgvn-vn
Controls which instructions are value numbered
newgvn-phi
Controls which instructions we create phi of ops for
enable-store-refinement
enable-phi-of-ops
ExpressionTypeConstant, 
 constant = 
ExpressionTypeVariable, 
 variable = 
phiofops
ExpressionTypeUnknown, 
 inst = 
etype = 
ExpressionTypeCall, 
 represents call at 
ExpressionTypeLoad, 
 represents Load at 
 with MemoryLeader 
ExpressionTypeStore, 
 represents Store  
 with StoredValue 
 and MemoryLeader 
ExpressionTypeAggregateValue, 
, intoperands = {
ExpressionTypePhi, 
bb = 
partially-inline-libcalls-transform
Controls transformations in partially-inline-libcalls
call.sqrt
factor
reass.mul
and.ra
reass.add
Reassociate expressions
reg2mem alloca point
spp-print-liveset
spp-print-liveset-size
spp-print-base-pointers
spp-rematerialization-threshold
rs4gc-clobber-non-live
rs4gc-allow-statepoint-with-no-deopt-info
Base Pairs: (w/Relocation)
 derived 
 base 
__tmp_use
Live Variables:
Safepoint For: 
Number live values: 
Base Pairs (w/o Relocation):
base_ee
is_base_value
.remat
__llvm_deoptimize
safepoint_token
statepoint_token
deopt-lowering
__llvm_memcpy_element_unordered_atomic_safepoint_1
__llvm_memcpy_element_unordered_atomic_safepoint_2
__llvm_memcpy_element_unordered_atomic_safepoint_4
__llvm_memcpy_element_unordered_atomic_safepoint_8
__llvm_memcpy_element_unordered_atomic_safepoint_16
__llvm_memmove_element_unordered_atomic_safepoint_1
__llvm_memmove_element_unordered_atomic_safepoint_2
__llvm_memmove_element_unordered_atomic_safepoint_4
__llvm_memmove_element_unordered_atomic_safepoint_8
__llvm_memmove_element_unordered_atomic_safepoint_16
.relocated
Sparse Conditional Constant Propagation
NumAllocasAnalyzed
Number of allocas analyzed for replacement
NumAllocaPartitions
Number of alloca partitions formed
MaxPartitionsPerAlloca
Maximum number of partitions per alloca
NumAllocaPartitionUses
Number of alloca partition uses rewritten
MaxUsesPerAllocaPartition
Maximum number of uses of a partition
NumNewAllocas
Number of new, smaller allocas introduced
Number of allocas promoted to SSA values
NumLoadsSpeculated
Number of loads speculated to allow promotion
NumVectorized
Number of vectorized aggregates
sroa-strict-inbounds
.sroa.
sroa_raw_cast
sroa_raw_idx
sroa_cast
sroa_idx
load.ext
endian_shift
.extract
.shift
.trunc
.ext
.insert
load.trunc
.expand
oldload
copyload
isplat
vsplat
.fca
.gep
.sroa.gep
.sroa.sel
.sroa.phi
.sroa.speculated
.sroa.speculate.load.
.sroa.speculate.load.true
.sroa.speculate.load.false
Scalar Replacement Of Aggregates
scalarize-variable-insert-extract
Allow the scalarizer pass to scalarize insertelement/extractelement with variable index
scalarize-load-store
Allow the scalarizer pass to scalarize loads and store
.upto
.is.
scalar_mask
cond.load
res.phi.else
cond.store
ptr.phi.else
disable-separate-const-offset-from-gep
Do not separate the constant offset from a GEP instruction
reassociate-geps-verify-no-dead-code
Verify this pass produces no dead code
uglygep
Dead instruction detected!
Number of guards turned into branches for unswitching
NumCostMultiplierSkipped
Number of unswitch candidates that had their cost multiplier skipped
enable-nontrivial-unswitch
Forcibly enables non-trivial loop unswitching rather than following the configuration passed into the pass.
unswitch-threshold
The cost threshold for unswitching a loop.
enable-unswitch-cost-multiplier
Enable unswitch cost multiplier that prohibits exponential explosion in nontrivial unswitch.
unswitch-siblings-toplevel-div
Toplevel siblings divisor for cost multiplier.
unswitch-num-initial-unscaled-candidates
Number of unswitch candidates that are ignored when calculating cost multiplier.
simple-loop-unswitch-guards
If enabled, simple loop unswitching will also consider llvm.experimental.guard intrinsics as unswitch candidates.
simple-loop-unswitch-drop-non-trivial-implicit-null-checks
If enabled, drop make.implicit metadata in unswitched implicit null checks to save time analyzing if we can keep it.
.split
Cannot unswitch because of cleanuppad in exit block
guarded
deopt
.us-phi
Simple unswitch loops
bonus-inst-threshold
Control the number of bonus instructions (default = 1)
Preserve canonical loop structure (default = true)
Convert switches to lookup tables (default = false)
Forward switch condition to phi ops (default = false)
hoist common instructions (default = false)
Sink common instructions (default = false)
NumSimpl
Number of blocks simplified
Simplify the CFG
spec-exec-max-speculation-cost
Speculative execution is not applied to basic blocks where the cost of the instructions to speculatively execute exceeds this limit.
spec-exec-max-not-hoisted
Speculative execution is not applied to basic blocks where the number of instructions that would not be speculatively executed exceeds this limit.
spec-exec-only-if-divergent-target
Speculative execution is applied only to targets with divergent branches, even if the pass was configured to apply only to all targets.
Speculatively execute instructions
Speculatively execute instructions if target has divergent branches
.phi
structurizecfg-skip-uniform-regions
Force whether the StructurizeCFG pass skips uniform regions
structurizecfg-relaxed-uniform-regions
Allow relaxed uniform region checks
entry.orig
Tail Call Elimination
tailcall-readnone
marked as tail call candidate (readnone)
current.ret.tr
tailcall-recursion
transforming tail recursion into loop
tailrecurse
ret.tr
ret.known.tr
accumulator.tr
accumulator.ret.tr
FailedRequestedUnrolling
loop not unrolled: the optimizer was unable to perform the requested transformation; the transformation might be disabled or specified as part of an unsupported transformation ordering
FailedRequestedUnrollAndJamming
loop not unroll-and-jammed: the optimizer was unable to perform the requested transformation; the transformation might be disabled or specified as part of an unsupported transformation ordering
FailedRequestedVectorization
loop not vectorized: the optimizer was unable to perform the requested transformation; the transformation might be disabled or specified as part of an unsupported transformation ordering
FailedRequestedInterleaving
loop not interleaved: the optimizer was unable to perform the requested transformation; the transformation might be disabled or specified as part of an unsupported transformation ordering
FailedRequestedDistribution
loop not distributed: the optimizer was unable to perform the requested transformation; the transformation might be disabled or specified as part of an unsupported transformation ordering
Warn about non-applied transformations
Combine pattern based expressions
NumWorklistIterations
Number of instruction combining iterations performed
Number of insts combined
NumConstProp
Number of constant folds
Number of dead inst eliminated
NumSunkInst
Number of expansions
NumFactor
Number of factorizations
NumReassoc
Number of reassociations
instcombine-visit
Controls which instructions are visited
instcombine-code-sinking
Enable code sinking
instcombine-max-iterations
Limit the maximum number of instruction combining iterations
instcombine-infinite-loop-threshold
Number of instruction combining iterations considered an infinite loop
instcombine-maxarray-size
Maximum array size considered when doing a combine
instcombine-lower-dbg-declare
phi.sel
phi.cmp
phi.fr
phi.cast
narrow
phi.bo
Instruction Combining seems stuck in an infinite loop after 
 iterations.
Combine redundant instructions
addconv
gepdiff
diff.neg
.not
notmask
.off
.signext
bitfield
notlhs
notrhs
.simplified
.demorgan
NumSimplified
Number of library calls simplified
instcombine-guard-widening-window
How wide an instruction window to bypass looking for another guard
unmaskedload
gc-live
.lobit
narrow.sel
umul
umul.val
umul.ov
umul.not.ov
.unshifted
.add
to.ptr
.ptr
.conv
sadd
sadd.result
sadd.overflow
umul.value
.highbits
storemerge
.sub
.unpack
.elt
mulbool
NegatorTotalNegationsAttempted
Negator: Number of negations attempted to be sinked
NegatorNumTreesNegated
Negator: Number of negations successfully sinked
NegatorMaxDepthVisited
Negator: Maximal traversal depth ever reached while attempting to sink negation
NegatorTimesDepthLimitReached
Negator: How many times did the traversal depth limit was reached during sinking
NegatorNumValuesVisited
Negator: Total number of values visited during attempts to sink negation
NegatorNumNegationsFoundInCache
Negator: How many negations did we retrieve/reuse from cache
NegatorMaxTotalValuesVisited
Negator: Maximal number of values ever visited while attempting to sink negation
NegatorNumInstructionsCreatedTotal
Negator: Number of new negated instructions created, total
NegatorMaxInstructionsCreated
Negator: Maximal number of new instructions created during negation attempt
NegatorNumInstructionsNegatedSuccess
Negator: Number of new negated instructions created in successful negation sinking attempts
instcombine-negator
Controls Negator transformations in InstCombine pass
instcombine-negator-enabled
Should we attempt to sink negations?
instcombine-negator-max-depth
What is the maximal lookup depth when trying to check for viability of negation sinking.
instcombine-max-num-phis
Maximum number phis to handle in intptr/ptrint folding
NumPHIsOfInsertValues
Number of phi-of-insertvalue turned into insertvalue-of-phis
NumPHIsOfExtractValues
Number of phi-of-extractvalue turned into extractvalue-of-phi
NumPHICSEs
Number of PHI's that got CSE'd
.shrunk
extract.t
instcombine-unsafe-select-transform
Enable poison-unsafe select to and/or transform
not.
.inv
masksel
.Elt
.merged
no-discriminators
Disable generation of discriminator information.
Add DWARF path discriminators
__ockl_printf_begin
strlen.join
strlen.while
strlen.while.done
__ockl_printf_append_string_n
__ockl_printf_append_args
assume-preserve-all
enable preservation of all attrbitues. even those that are unlikely to be usefull
enable-knowledge-retention
enable preservation of attributes throughout code transformation
NumAssumeBuilt
Number of assume built by the assume builder
NumBundlesInAssumes
Total number of Bundles in the assume built
NumAssumesMerged
Number of assume merged by the assume simplify pass
NumAssumesRemoved
Number of assume removed by the assume simplify pass
assume-builder-counter
Controls which assumes gets created
Assume Simplify
AutoInitStore
Store inserted by -ftrivial-auto-var-init.
Store size: 
StoreSize
 bytes.
AutoInitUnknownInstruction
Initialization inserted by -ftrivial-auto-var-init.
AutoInitIntrinsic
AutoInitCall
 Memory operation size: 
Variables: 
VarName
VarSize
 bytes)
 Volatile: 
 Atomic: 
Call to 
UnknownLibCall
 function 
 inserted by -ftrivial-auto-var-init.
llvm.loop
lpad.phi
.guard
Guard.
.moved
_crit_edge
.clone
cstr
__memcpy_chk
chari
Return type mismatch
The number of arguments mismatch
Argument type mismatch
SRet arg to vararg function
if.true.direct_targ
if.false.orig_indirect
if.end.icp
Canonicalize Aliases
aggregate-extracted-args
Aggregate arguments to code-extracted functions
lt.cast
.ret
gep_
loadgep_
.out
.loc
structArg
targetBlock
gep_reload_
.exitStub
codeRepl
newFuncRoot
.reg2mem
Instrument function entry/exit with calls to e.g. mcount() (pre inlining)
mcount
.mcount
llvm.arm.gnu.eabi.mcount
_mcount
mcount
__mcount
_mcount
Unknown instrumentation function: '
Scoped EH not supported
cleanup.lpad
guards-predicate-pass-branch-weight
The probability of a guard failing is assumed to be the reciprocal of this value (default = 1 << 20)
deoptcall
widenable_cond
exiplicit_guard_cond
enable-noalias-to-md-conversion
Convert noalias attributes to metadata during inlining.
preserve-alignment-assumptions-during-inlining
Convert align attributes to assumptions during inlining.
update-return-attrs
Update return attributes on calls within inlined body
max-inst-checked-for-throw-during-inlining
the maximum number of instructions analyzed for may throw during attribute inference in inlined body
We don't inline callbr yet.
external or indirect
unsupported operand bundle
incompatible GC
incompatible personality
catch in cleanup funclet
SEH in cleanup funclet
savedstack
: argument 
.lpad-body
eh.lpad-body
thinlto_src_module
------- Dumping inliner stats for [
] -------
-- List of inlined functions:
Inlined 
imported 
not imported 
function [
: #inlines = 
, #inlines_to_importing_module = 
-- Summary:
All functions: 
, imported functions: 
inlined functions
all functions
imported functions inlined anywhere
imported functions
imported functions inlined into importing module
, remaining
non-imported functions inlined anywhere
non-imported functions
non-imported functions inlined into importing module
% of 
Inject TLI Mappings
NumLCSSA
Number of live out of a loop variables
verify-loop-lcssa
Verify loop lcssa form (time consuming)
Loop-Closed SSA Form Pass
Conditionally eliminate dead library calls
cdce.call
cdce.end
Number of unreachable basic blocks removed
phicse-debug-hash
Perform extra assertion checking to verify that PHINodes's hash function is well-behaved w.r.t. its isEqual predicate
phicse-num-phi-smallsize
When the basic block contains not more than this number of PHI nodes, perform a (faster!) exhaustive search instead of set-driven one.
.noexc
gc-leaf-function
loop-peel
NumPeeled
Number of loops peeled
unroll-peel-count
Set the unroll peeling count, for testing purposes
unroll-allow-peeling
Allows loops to be peeled when the dynamic trip count is known to be low.
unroll-allow-loop-nests-peeling
Allows loop nests to be peeled.
unroll-peel-max-count
Max average trip count which will cause loop peeling.
unroll-force-peel-count
Force a peel count regardless of profiling information.
unroll-peel-multi-deopt-exit
Allow peeling of loops with multiple deopt exits.
.peel.begin
.peel.next
.peel.newph
llvm.loop.peeled.count
.peel
NumNotRotatedDueToHeaderSize
Number of loops not rotated due to the header size
NumRotated
Number of loops rotated
loop-rotate-multi
Allow loop rotation multiple times in order to reach a better latch exit
.lr.ph
.preheader
.outer
.backedge
Canonicalize natural loops
NumCompletelyUnrolled
Number of loops completely unrolled
NumUnrolled
Number of loops unrolled (completely or otherwise)
NumUnrolledNotLatch
Number of loops unrolled without a conditional latch (completely or otherwise)
unroll-runtime-epilog
Allow runtime unrolled loops to be unrolled with epilog instead of prolog.
unroll-verify-domtree
Verify domtree after unrolling
FullyUnrolled
completely unrolled loop with 
 iterations
Peeled
 peeled loop by 
PeelCount
 with a breakout at trip 
BreakoutTrip
PartialUnrolled
unrolled loop by a factor of 
 trips per branch
 with run-time trip count
completely unroll and jammed loop with 
unroll and jammed loop by a factor of 
NumRuntimeUnrolled
Number of loops unrolled with run-time trip counts
unroll-runtime-multi-exit
Allow runtime unrolling for loops with multiple exits, when epilog is generated
.new
.unr-lcssa
.epil.preheader
.prol.preheader
.prol.loopexit
xtraiter
lcmp.mod
unroll_iter
niter
.nsub
.ncmp
epil
prol
.iter
.cmp
.unr
.epilog-lcssa
.loopexit
force-reduction-intrinsics
Force creating reduction intrinsics for testing.
llvm.loop.vectorize.scalable.enable
llvm.loop.licm_versioning.disable
rdx.minmax.cmp
rdx.minmax.select
rdx.shuf
bound0
bound1
found.conflict
conflict.rdx
memcheck.conflict
loop-version-annotate-no-alias
Add no-alias annotation for instructions that are disambiguated by memchecks
lver.safe
.lver.check
.lver.orig
.lver
LVerDomain
NewDefault
NodeBlock
Pivot
LeafBlock
SwitchLeaf
.header
.latch
.step
.cond
cols
Promote Memory to Register
struct.
quux
barney
snork
blam
hoge
wibble
wobble
widget
wombat
eggs
pluto
spam
llvm.global_ctors
llvm.global_dtors
llvm.used
llvm.compiler.used
vector-function-abi-variant
anon.
Name Anon Globals
verify-predicateinfo
Verify PredicateInfo in legacy printer pass.
predicateinfo-rename
Controls which variables are renamed with predicateinfo
PredicateInfo for function: 
llvm.ssa.copy.
; Has predicate info
; branch predicate info { TrueEdge: 
 Comparison:
 Edge: [
; switch predicate info { CaseValue: 
 Switch:
; assume predicate info {
, RenamedOp: 
scev-cheap-expansion-budget
When performing SCEV expansion only if it is cheap to do, this controls the budget that is considered cheap (default = 4)
scevgep
.iv.next
indvar
indvar.next
smax
smin
tmp.lcssa.user
ident.check
mul.result
mul.overflow
__sanitizer_stat_report
__sanitizer_stat_init
simplifycfg-require-and-preserve-domtree
Temorary development switch used to gradually uplift SimplifyCFG into preserving DomTree,
phi-node-folding-threshold
Control the amount of phi node folding to perform (default = 2)
two-entry-phi-node-folding-threshold
Control the maximal total instruction cost that we are willing to speculatively execute to fold a 2-entry PHI node into a select (default = 4)
simplifycfg-dup-ret
Duplicate return instructions into unconditional branches
simplifycfg-hoist-common
Hoist common instructions up to the parent block
simplifycfg-sink-common
Sink common instructions down to the end block
simplifycfg-hoist-cond-stores
Hoist conditional stores if an unconditional store precedes
simplifycfg-merge-cond-stores
Hoist conditional stores even if an unconditional store does not precede - hoist multiple conditional stores into a single predicated store
simplifycfg-merge-cond-stores-aggressively
When merging conditional stores, do so even if the resultant basic blocks are unlikely to be if-converted as a result
speculate-one-expensive-inst
Allow exactly one expensive instruction to be speculatively executed
max-speculation-depth
Limit maximum recursion depth when calculating costs of speculatively executed instructions
simplifycfg-max-small-block-size
Max size of a block which is still considered small enough to thread through
simplifycfg-branch-fold-threshold
Maximum cost of combining conditions when folding branches
NumBitMaps
Number of switch instructions turned into bitmaps
NumLinearMaps
Number of switch instructions turned into linear mapping
NumLookupTables
Number of switch instructions turned into lookup tables
NumLookupTablesHoles
Number of switch instructions turned into lookup tables (holes checked)
NumTableCmpReuses
Number of reused switch table lookup compares
NumFoldValueComparisonIntoPredecessors
Number of value comparisons folded into predecessor basic blocks
NumFoldBranchToCommonDest
Number of branches folded into predecessor basic block
NumHoistCommonCode
Number of common instruction 'blocks' hoisted up to the begin block
NumHoistCommonInstrs
Number of common instructions hoisted up to the begin block
NumSinkCommonCode
Number of common instruction 'blocks' sunk down to the end block
NumSinkCommonInstrs
Number of common instructions sunk down to the end block
NumSpeculations
Number of speculative executed instructions
NumInvokes
Number of invokes with empty resume blocks simplified into calls
.old
or.cond
not.cond
and.cond
switch.edge
.fold.split
magicptr
infloop
switch.early.test
spec.store.select
spec.select
.critedge
brmerge
.mux
condstore.split
simplifycfg.merge
switch.selectcmp
switch.select
switch.lookup
switch.tableidx
switch.hole_check
switch.maskindex
switch.shifted
switch.lobit
switch.table.
switch.idx.cast
switch.idx.mult
switch.offset
switch.cast
switch.shiftamt
switch.downshift
switch.masked
switch.tableidx.zext
switch.gep
switch.load
inverted.cmp
.wide
iv.rem
.urem
.udiv
enable-double-float-shrink
Enable unsafe double to float shrinking for math lib calls
endptr
strchr
strrchr
strcmpload
strlenfirst
strpbrk
strstr
memchr.bounds
memchr.bits
memchr
imag
cabs
exp2
reciprocal
fmin
fmax
sqrt
fabs
cttz
ctlz
isdigittmp
isdigit
isascii
iprintf
leninc
siprintf
fiprintf
lhsc
lhsv
rhsc
rhsv
chardiff
__sincospif_stret
__sincospi_stret
sincospi
sinpi
cospi
simplify-libcalls
folded strlen(select) to select of constants
pgso
Enable the profile guided size optimizations. 
pgso-lwss-only
Apply the profile guided size optimizations only if the working set size is large (except for cold code.)
pgso-cold-code-only
Apply the profile guided size optimizations only to cold code.
pgso-cold-code-only-for-instr-pgo
Apply the profile guided size optimizations only to cold code under instrumentation PGO.
pgso-cold-code-only-for-sample-pgo
Apply the profile guided size optimizations only to cold code under sample PGO.
pgso-cold-code-only-for-partial-sample-pgo
Apply the profile guided size optimizations only to cold code under partial-profile sample PGO.
force-pgso
Force the (profiled-guided) size optimizations. 
pgso-cutoff-instr-prof
The profile guided size optimization profile summary cutoff for instrumentation profile.
pgso-cutoff-sample-prof
The profile guided size optimization profile summary cutoff for sample profile.
rewrite-map-file
Symbol Rewrite Map
unable to read rewrite map '
unable to parse rewrite map '
DescriptorList node must be a map
rewrite type must be a scalar
rewrite descriptor must be a map
unknown rewrite type
descriptor key must be a scalar
descriptor value must be a scalar
invalid regex: 
unknown key for function
exactly one of transform or target must be specified
descriptor Key must be a scalar
unknown Key for Global Variable
unknown key for Global Alias
unable to transforn 
UnifiedUnreachableBlock
UnifiedReturnBlock
UnifiedRetVal
.__uniq.
Uniqueify Internal linkage names
Unique Internal Linkage Names
Number of NoAlias results
NumMayAlias
Number of MayAlias results
NumMustAlias
Number of MustAlias results
disable-basic-aa
NoAlias
MustAlias
MayAlias
PartialAlias
External Alias Analysis
external-aa
Function Alias Analysis Results
print-all-alias-modref-info
print-no-aliases
print-may-aliases
print-partial-aliases
print-must-aliases
print-no-modref
print-ref
print-mod
print-modref
print-must
print-mustref
print-mustmod
print-mustmodref
evaluate-aa-metadata
 pointers, 
 call sites
NoModRef
Just Mod
Just Ref
Both ModRef
Must
Just Mod (MustAlias)
Just Ref (MustAlias)
Both ModRef (MustAlias)
===== Alias Analysis Evaluator Report =====
  Alias Analysis Evaluator Summary: No pointers!
 Total Alias Queries Performed
 no alias responses 
 may alias responses 
 partial alias responses 
 must alias responses 
  Alias Analysis Evaluator Pointer Alias Summary: 
  Alias Analysis Mod/Ref Evaluator Summary: no mod/ref!
 Total ModRef Queries Performed
 no mod/ref responses 
 mod responses 
 ref responses 
 mod & ref responses 
 must responses 
 must mod responses 
 must ref responses 
 must mod & ref responses 
  Alias Analysis Evaluator Mod/Ref Summary: 
 <-> 
:  Ptr: 
alias-set-saturation-threshold
The maximum number of pointers may-alias sets may contain before degradation
  AliasSet[
 alias, 
No access 
Ref       
Mod       
Mod/Ref   
 forwarding to 
Pointers: 
, unknown after)
, unknown before-or-after)
 Unknown instructions: 
Alias Set Tracker: 
 (Saturated)
 alias sets for 
 pointer values.
Alias sets for function '
assume-queries
NumAssumeQueries
Number of Queries into an assume assume bundles
NumUsefullAssumeQueries
Number of Queries into an assume assume bundles that were satisfied
assume-queries-counter
ignore
verify-assumption-cache
Enable verification of assumption cache
Cached assumptions for function: 
Assumption in scanned function not in cache
Assumption Cache Tracker
assumption-cache-tracker
basic-aa-recphi
basic-aa-force-at-least-64b
basic-aa-double-calc-bits
basicaa
SearchLimitReached
Number of times the limit to decompose GEPs is reached
SearchTimes
Number of times a GEP is decomposed
Basic Alias Analysis (stateless AA impl)
view-block-freq-propagation-dags
Pop up a window to show a dag displaying how block frequencies propagation through the CFG.
do not display graphs.
fraction
display a graph using the fractional block frequency representation.
display a graph using the raw integer fractional block frequency representation.
display a graph using the real profile count if available.
view-bfi-func-name
The option to specify the name of the function whose CFG will be displayed.
view-hot-freq-percent
An integer in percent used to specify the hot blocks/edges to be displayed in red: a block or edge whose frequency is no less than the max frequency of the function multiplied by this percent.
pgo-view-counts
A boolean option to show CFG dag or text with block profile counts and branch probabilities right after PGO profile annotation step. The profile counts are computed using branch probabilities from the runtime profile data and block frequency propagation algorithm. To view the raw counts from the profile, use option -pgo-view-raw-counts instead. To limit graph display to only one function, use filtering option -view-bfi-func-name.
print-bfi
Print the block frequency info.
print-bfi-func-name
The option to specify the name of the function whose block frequency info is printed.
Printing analysis results of BFI for function 
block-frequency-info: 
: float = 
, int = 
, count = 
, irr_loop_header_weight = 
Block Frequency Analysis
color="red"
label="%.1f%%"
,color="red"
check-bfi-unknown-block-queries
Check if block frequency is queried for an unknown block for debugging missed BFI updates
print-bpi
Print the branch probability info.
print-bpi-func-name
The option to specify the name of the function whose branch probability info is printed.
---- Branch Probabilities ----
edge 
 probability is 
 [HOT edge]
Printing analysis results of BPI for function 
Branch Probability Analysis
dom-tree-reachability-max-bbs-to-explore
Max number of BBs to explore for reachability analysis
cfg-func-name
The name of a function (or its substring) whose CFG is viewed/printed.
cfg-dot-filename-prefix
The prefix used for the CFG dot file names.
cfg-hide-unreachable-paths
cfg-hide-deoptimize-paths
cfg-heat-colors
Show heat colors in CFG
cfg-raw-weights
Use raw weights for labels. Use percentages as default.
cfg-weights
Show edges labeled with weights
cfg.
'...
  error opening file for writing!
CFG for '
' function
color="
ff", style=filled,
 fillcolor="
\l...
|<s64>truncated...
label="{0:P}" penwidth={1}
label="W:{0}" penwidth={1}
label="W:
" penwidth=
Inclusion-Based CFL Alias Analysis
Unification-Based CFL Alias Analysis
Clearing all analysis results for: 
Invalidating analysis: 
abort-on-max-devirt-iterations-reached
Abort when the max iterations for devirtualization CGSCC repeat pass is reached
Starting CGSCC pass manager run.
Finished CGSCC pass manager run.
Max devirtualization iterations reached
Call graph node for function: '
Call graph node <<null function>>
>>  #uses=
  CS<
> calls 
function '
external node
No call graph has been built!
CallGraph Construction
basiccg
max-devirt-iterations
cgscc-passmgr
MaxSCCIterations
Maximum CGSCCPassMgr iterations on one SCC
CallGraph Pass Manager
Call Graph SCC Pass Manager
size-info
Print CallGraph IR
Printing <null> Function
<<null function>>
capture-tracking
NumCaptured
Number of pointers maybe captured
NumNotCaptured
Number of pointers not captured
NumCapturedBefore
Number of pointers maybe captured before
NumNotCapturedBefore
Number of pointers not captured before
capture-tracking-max-uses-to-explore
Maximal number of uses to explore.
ceil
ceilf
cosf
expf
exp2f
floorf
fmodf
logf
log2
log2f
log10
log10f
nearbyint
nearbyintf
powf
rint
rintf
round
roundf
sinf
truncf
__exp_finite
__expf_finite
__exp2_finite
__exp2f_finite
__log_finite
__logf_finite
__log10_finite
__log10f_finite
__pow_finite
__powf_finite
ddg-simplify
Simplify DDG by merging nodes that have less interesting edges.
ddg-pi-blocks
Create pi-block nodes.
single-instruction
multi-instruction
pi-block
root
?? (error)
Node Address:
 Instructions:
--- start of nodes in pi-block ---
--- end of nodes in pi-block ---
 Edges:none!
 Edges:
def-use
memory
rooted
] to 
'DDG' for loop '
dot-ddg-only
simple ddg dot graph
dot-ddg-filename-prefix
The prefix used for the DDG dot file names.
pi-block
with
 nodes
root
<kind:
label="[
DDG for '
Delinearization on function 
Inst:
In Loop with Header: 
AccessFunction: 
failed to delinearize
Base offset: 
ArrayDecl[UnknownSize]
 with elements of 
 bytes.
ArrayRef
DemandedBits: 0x
Demanded bits analysis
TotalArrayPairs
Array pairs tested
SeparableSubscriptPairs
Separable subscript pairs
CoupledSubscriptPairs
Coupled subscript pairs
NonlinearSubscriptPairs
Nonlinear subscript pairs
ZIVapplications
ZIV applications
ZIVindependence
ZIV independence
StrongSIVapplications
Strong SIV applications
StrongSIVsuccesses
Strong SIV successes
StrongSIVindependence
Strong SIV independence
WeakCrossingSIVapplications
Weak-Crossing SIV applications
WeakCrossingSIVsuccesses
Weak-Crossing SIV successes
WeakCrossingSIVindependence
Weak-Crossing SIV independence
ExactSIVapplications
Exact SIV applications
ExactSIVsuccesses
Exact SIV successes
ExactSIVindependence
Exact SIV independence
WeakZeroSIVapplications
Weak-Zero SIV applications
WeakZeroSIVsuccesses
Weak-Zero SIV successes
WeakZeroSIVindependence
Weak-Zero SIV independence
ExactRDIVapplications
Exact RDIV applications
ExactRDIVindependence
Exact RDIV independence
SymbolicRDIVapplications
Symbolic RDIV applications
SymbolicRDIVindependence
Symbolic RDIV independence
DeltaApplications
Delta applications
DeltaSuccesses
Delta successes
DeltaIndependence
Delta independence
DeltaPropagations
Delta propagations
GCDapplications
GCD applications
GCDsuccesses
GCD successes
GCDindependence
GCD independence
BanerjeeApplications
Banerjee applications
BanerjeeIndependence
Banerjee independence
BanerjeeSuccesses
Banerjee successes
da-delinearize
Try to delinearize array references.
da-disable-delinearization-checks
Disable checks that try to statically verify validity of delinearized subscripts. Enabling this option may result in incorrect dependence vectors for languages that allow the subscript of one dimension to underflow or overflow into another dimension.
'Dependence Analysis' for function '
confused
consistent 
flow
anti
 splitable
Dependence Analysis
Src:
 --> Dst:
  da analyze - 
  da analyze - split level = 
, iteration = 
none!
  DomFrontier for BB 
 is:
<<exit node>>
DominanceFrontier for function: 
Dominance Frontier Construction
__gcc_personality_v0
BasicBlockCount: 
BlocksReachedFromConditionalInstruction: 
Uses: 
DirectCallsToDefinedFunctions: 
LoadInstCount: 
StoreInstCount: 
MaxLoopDepth: 
TopLevelLoopCount: 
Printing analysis results of CFA for function 
globalsmodref-aa
NumNonAddrTakenGlobalVars
Number of global vars without address taken
NumNonAddrTakenFunctions
Number of functions without address taken
NumNoMemFunctions
Number of functions that do not access memory
NumReadMemFunctions
Number of functions that only read memory
NumIndirectGlobalVars
Number of indirect global objects
enable-unsafe-globalsmodref-alias-results
Globals Alias Analysis
 candidates of length 
.  Found in: 
  Function: 
,  Basic Block: 
(unnamed)
ir-similarity-identifier
no-nans-fp-math
IV Users for loop 
 with backedge-taken count 
 (post-inc with loop 
 in  
Printing <null> User
icp-remaining-percent-threshold
The percentage threshold against remaining unpromoted indirect call count for the promotion
icp-total-percent-threshold
The percentage threshold against total count for the promotion
icp-max-prom
Max number of promotions for a single indirect call callsite
inline-cost
NumCallsAnalyzed
Number of call sites analyzed
inlinedefault-threshold
Default amount of inlining to perform
print-instruction-comments
Prints comments for instruction based on inline cost analysis
inline-threshold
Control the amount of inlining to perform (default = 225)
inlinehint-threshold
Threshold for inlining functions with inline hint
inline-cold-callsite-threshold
inline-enable-cost-benefit-analysis
Enable the cost-benefit analysis for the inliner
inline-savings-multiplier
Multiplier to multiply cycle savings by during inlining
inline-size-allowance
The maximum size of a callee that get's inlined without sufficient cycle savings
inlinecold-threshold
Threshold for inlining functions with cold attribute
hot-callsite-threshold
Threshold for hot callsites 
locally-hot-callsite-threshold
Threshold for locally hot callsites 
cold-callsite-rel-freq
Maximum block frequency, expressed as a percentage of caller's entry frequency, for a callsite to be cold in the absence of profile information.
hot-callsite-rel-freq
Minimum block frequency, expressed as a multiple of caller's entry frequency, for a callsite to be hot in the absence of profile information.
inline-cost-full
Compute the full inline cost of a call site even when the cost exceeds the threshold.
inline-caller-superset-nobuiltin
Allow inlining when caller has a superset of callee's nobuiltin attributes.
disable-gep-const-evaluation
Disables evaluation of GetElementPtr with constant operands
byval arguments without alloca address space
conflicting attributes
nullptr definitions incompatible
interposable
noinline function attribute
noinline call site attribute
stack protected caller but callee requested no stack protector
stack protected callee but caller requested no stack protector
empty function
contains indirect branches
blockaddress used outside of callbr
recursive call
exposes returns-twice attribute
disallowed inlining of @llvm.icall.branch.funnel
disallowed inlining of @llvm.localescape
contains VarArgs initialized with va_start
      Analyzing call of 
... (caller:
Compiler has made implicit assumption that TypeSize is not scalable. This may or may not lead to broken code.
; No analysis for the instruction
; cost before = 
, cost after = 
, threshold before = 
, threshold after = 
cost delta = 
, threshold delta = 
, simplified to 
Cost over threshold.
high cost
exposes returns twice
dynamic alloca
indirect branch
uninlinable intrinsic
recursive and allocates too much stack space
Call site analysis is not favorable to inlining.
 has uninlinable pattern (
InlineResult
) and cost is not fully computed
. Cost is not fully computed
      NumConstantArgs: 
      NumConstantOffsetPtrArgs: 
      NumAllocaArgs: 
      NumConstantPtrCmps: 
      NumConstantPtrDiffs: 
      NumInstructionsSimplified: 
      NumInstructions: 
      SROACostSavings: 
      SROACostSavingsLost: 
      LoadEliminationCost: 
      ContainsNoDuplicateCall: 
      Cost: 
      Threshold: 
NumCallerCallersAnalyzed
Number of caller-callers analyzed
inline-remark-attribute
Enable adding inline-remark attribute to callsites processed by inliner but decided to be not inlined
inline-deferral-scale
Scale to limit the cost of inline deferral
inline-remark
deferred
 at callsite 
Line
Disc
(cost=always)
(cost=never)
(cost=
 not inlined into 
 because it should never be inlined 
 because too costly to inline 
IncreaseCostInOtherContexts
Not inlining. Cost of inlining 
 increases the cost of inlining 
 in other contexts
 to match profiling context
[InlineSizeEstimatorAnalysis] size estimate for 
Lazy Branch Probability Analysis
lazy-branch-prob
Lazy Block Frequency Analysis
lazy-block-freq
Printing the call graph for module: 
  Edges in function: 
ref 
  RefSCC with 
 call SCCs:
    SCC with 
 functions:
 -> "
 [style=dashed,label="ref"]
Lazy Value Information Analysis
; LatticeVal for: '
' is: 
' in BB: '
use-gpu-divergence-analysis
turn the LegacyDivergenceAnalysis into a wrapper for GPUDivergenceAnalysis
DIVERGENT: 
           
           
DIVERGENT:     
               
Legacy Divergence Analysis
divergence
Unusual: Unnamed function with non-local linkage
Unusual: Return statement in function with noreturn attribute
Unusual: Returning alloca value
Undefined behavior: indirectbr with no destinations
Undefined behavior: Null pointer dereference
Undefined behavior: Undef pointer dereference
Unusual: All-ones pointer dereference
Unusual: Address one pointer dereference
Undefined behavior: Write to read-only memory
Undefined behavior: Write to text section
Unusual: Load from function body
Undefined behavior: Load from block address
Undefined behavior: Call to block address
Undefined behavior: Branch to non-blockaddress
Undefined behavior: Buffer overflow
Undefined behavior: Memory reference address is misaligned
Undefined behavior: Caller and callee calling convention differ
Undefined behavior: Call argument count mismatches callee argument count
Undefined behavior: Call return type mismatches callee return type
Undefined behavior: Call argument type mismatches callee parameter type
Unusual: noalias argument aliases another argument
Undefined behavior: Call with "tail" keyword references alloca
Undefined behavior: memcpy source and destination overlap
Undefined behavior: va_start called in a non-varargs function
get_active_lane_mask: operand #2 must be greater than 0
Unusual: unreachable immediately preceded by instruction without side effects
Undefined result: sub(undef, undef)
Undefined behavior: Division by zero
Undefined result: Shift count out of range
Undefined result: xor(undef, undef)
Pessimization: Static alloca outside of entry block
Undefined result: extractelement index out of range
Undefined result: insertelement index out of range
available-load-scan-limit
Use this to specify the default maximum number of instructions to scan backward from a given instruction, when searching for available loaded value
Compiler has made implicit assumption that TypeSize is not scalable. This may or may not lead to broken code.
force-vector-width
Sets the SIMD width. Zero is autoselect.
force-vector-interleave
Sets the vectorization interleave count. Zero is autoselect.
runtime-memory-check-threshold
When performing memory disambiguation checks at runtime do not generate more than this number of comparisons (default = 8).
memory-check-merge-threshold
Maximum number of comparisons done when trying to merge runtime memory checks. (default = 100)
max-dependences
Maximum number of dependences collected by loop-access analysis (default = 100)
enable-mem-access-versioning
Enable symbolic stride memory access versioning
store-to-load-forwarding-conflict-detection
Enable conflict detection in loop-access analysis
Check 
Comparing group (
Against group (
Run-time memory checks:
Grouped accesses:
Group 
(Low: 
 High: 
Member: 
NoDep
Forward
ForwardButPreventsForwarding
Backward
BackwardVectorizable
BackwardVectorizableButPreventsForwarding
 -> 
NotInnerMostLoop
loop is not the innermost loop
loop control flow is not understood by analyzer
CantComputeNumberOfIterations
could not determine number of loop iterations
CantVectorizeInstruction
instruction cannot be vectorized
NonSimpleLoad
read with atomic ordering or volatile read
NonSimpleStore
write with atomic ordering or volatile write
CantIdentifyArrayBounds
cannot identify array bounds
CantCheckMemDepsAtRunTime
cannot check memory dependencies at runtime
CantInsertRuntimeCheckWithConvergent
cannot add control dependency to convergent operation
UnsafeMemDep
unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
loop-accesses
Memory dependences are safe
 with a maximum dependence distance of 
 bytes
 with run-time checks
Has convergent operation in loop
Report: 
Dependences:
Too many dependences, not recorded
Non vectorizable stores to invariant address were 
not 
found in loop.
SCEV assumptions:
Expressions re-written:
<possibly invalidated loop>
default-trip-count
Use this to specify the default trip count of a loop
temporal-reuse-threshold
Use this to specify the max. distance between array elements accessed in a loop so that the elements are classified to have temporal reuse
Loop '
' has cost = 
IsPerfect=
, Depth=
, OutermostLoop: 
, Loops: ( 
Parallel 
Loop at depth 
 containing: 
<header>
<latch>
<exiting>
verify-loop-info
Verify loop info (time consuming)
llvm.loop.unroll.disable
llvm.loop.unroll.
 (loop: 
; Preheader:
; Loop:
Printing <null> block
; Exit blocks
Natural Loop Information
RunLoopPass
<deleted loop>
<deleted>
Loop Pass Manager
Print Loop IR
LCSSA Verifier
lcssa-verification
Loop Pass Manager
Memory Dereferencibility of pointers in function '
The following are dereferenceable:
(aligned)
(unaligned)
disable-aligned-alloc-awareness
If the optimizer should treat aligned_alloc as an unknown function
memory-builtins
ObjectVisitorArgument
Number of arguments with unsolved size and offset
ObjectVisitorLoad
Number of load instructions with unsolved size and offset
NumCacheNonLocal
Number of fully cached non-local responses
NumCacheDirtyNonLocal
Number of dirty cached non-local responses
NumUncacheNonLocal
Number of uncached non-local responses
NumCacheNonLocalPtr
Number of fully cached non-local ptr responses
NumCacheDirtyNonLocalPtr
Number of cached, but dirty, non-local ptr responses
NumUncacheNonLocalPtr
Number of uncached non-local ptr responses
NumCacheCompleteNonLocalPtr
Number of block queries that were completely cached
memdep-block-scan-limit
The number of instructions to scan in a block in memory dependency analysis (default = 100)
memdep-block-number-limit
The number of blocks to scan during memory dependency analysis (default = 1000)
Memory Dependence Analysis
LocationSize::
beforeOrAfterPointer
afterPointer
mapEmpty
mapTombstone
precise(
upperBound(
dot-cfg-mssa
file name for generated dot file
memssa-check-limit
The maximum number of stores/phis MemorySSAwill consider trying to walk past (default = 100)
enable-mssa-loop-dependency
Enable MemorySSA dependency for loop pass manager
verify-memoryssa
Enable verification of MemorySSA.
 = MemoryDef(
 = MemoryPhi(
MemoryUse(
MSSA
MemorySSA for function: 
Memory SSA
MSSA CFG for '
style=filled, fillcolor=lightpink
Compile unit: 
unknown-language(
Subprogram: 
Global variable: 
Type:
unknown-encoding(
unknown-tag(
 (identifier: '
force-summary-edges-cold
Force all edges in the function summary to cold
None.
all-non-critical
All non-critical edges.
All edges.
module-summary-dot-file
File to emit dot graph of new summary into.
Failed to open dot file 
Module Summary Analysis
module-summary-analysis
Module summary info
module-summary-info
-- Explore context of: 
  [F: 
 ; (mustexec in 
 loops: 
 ; (mustexec in: 
ObjC-ARC-Based Alias Analysis
enable-objc-arc-opts
enable/disable all ARC Optimizations
opt-remark-emitter
.phi.trans.insert
PHI 
 has values:
  UNKNOWN
  NONE
PHI Values for function: 
Phi Values Analysis
PostDominatorTree for function: 
Post-Dominator Tree Construction
profile-summary-cutoff-hot
A count is hot if it exceeds the minimum count to reach this percentile of total counts.
profile-summary-cutoff-cold
A count is cold if it is below the minimum count to reach this percentile of total counts.
profile-summary-huge-working-set-size-threshold
The code working set size is considered huge if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
profile-summary-large-working-set-size-threshold
The code working set size is considered large if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
profile-summary-hot-count
A fixed hot count that overrides the count derived from profile-summary-cutoff-hot
profile-summary-cold-count
A fixed cold count that overrides the count derived from profile-summary-cutoff-cold
partial-profile
Specify the current profile is used as a partial profile.
scale-partial-sample-profile-working-set-size
If true, scale the working set size of the partial sample profile by the partial profile ratio to reflect the size of the program being compiled.
partial-sample-profile-working-set-size-scale-factor
The scale factor used to scale the working set size of the partial sample profile along with the partial profile ratio. This includes the factor of the profile counter per block and the factor to scale the working set size to use the same shared thresholds as PGO.
Functions in 
 with hot/cold annotations: 
 :hot entry 
 :cold entry 
Profile summary info
profile-summary-info
Broken region found: enumerated BB not in region!
Broken region found: edges leaving the region must go to the exit node!
Broken region found: edges entering the region must go to the entry node!
<Function Return>
 => 
BB map does not match region nesting
Region tree:
End region tree
numRegions
The # of regions
numSimpleRegions
The # of simple regions
verify-region-info
Verify region info (time consuming)
print-region-style
style of printing regions
print no details
print regions in detail with block_iterator
print regions in detail with element_iterator
Region Tree for function: 
Detect single entry single exit regions
Could not open remarks file: 
NumArrayLenItCounts
Number of trip counts computed with array length
NumTripCountsComputed
Number of loops with predictable loop counts
NumTripCountsNotComputed
Number of loops without predictable loop counts
NumBruteForceTripCountsComputed
Number of loops with trip counts computed by force
scalar-evolution-max-iterations
Maximum number of iterations SCEV will symbolically execute a constant derived loop
verify-scev
Verify ScalarEvolution's backedge taken counts (slow)
verify-scev-strict
Enable stricter verification with -verify-scev is passed
verify-scev-maps
Verify no dangling value in ScalarEvolution's ExprValueMap (slow)
scev-verify-ir
Verify IR correctness when making sensitive SCEV queries (slow)
scev-mulops-inline-threshold
Threshold for inlining multiplication operands into a SCEV
scev-addops-inline-threshold
Threshold for inlining addition operands into a SCEV
scalar-evolution-max-scev-compare-depth
Maximum depth of recursive SCEV complexity comparisons
scalar-evolution-max-scev-operations-implication-depth
Maximum depth of recursive SCEV operations implication analysis
scalar-evolution-max-value-compare-depth
Maximum depth of recursive value complexity comparisons
scalar-evolution-max-arith-depth
Maximum depth of recursive arithmetics
scalar-evolution-max-constant-evolving-depth
Maximum depth of recursive constant evolving
scalar-evolution-max-cast-depth
Maximum depth of recursive SExt/ZExt/Trunc
scalar-evolution-max-add-rec-size
Max coefficients in AddRec during evolving
scalar-evolution-huge-expr-threshold
Size of the expression which is considered huge
scalar-evolution-classify-expressions
When printing analysis, include information on every instruction
scalar-evolution-use-expensive-range-sharpening
Use more powerful methods of sharpening expression ranges. May be costly in terms of compile time
(ptrtoint 
(trunc 
(zext 
(sext 
nuw><
nsw><
nw><
 umax 
 smax 
 umin 
 smin 
<nuw>
<nsw>
 /u 
alignof(
offsetof(
***COULDNOTCOMPUTE***
Classifying expressions for: 
  -->  
 U: 
 S: 
Exits: 
<<Unknown>>
LoopDispositions: { 
Determining loop execution counts for: 
Trip Count for 
 Changed!
Old: 
New: 
Delta: 
Printing analysis 'Scalar Evolution Analysis' for function '
Equal predicate: 
 Added Flags: 
<nusw>
<nssw>
[PSE]
Compiler has made implicit assumption that TypeSize is not scalable. This may or may not lead to broken code.
Variant
Computable
Loop 
<multiple exits> 
backedge-taken count is 
Unpredictable backedge-taken count.
  exit count for 
max backedge-taken count is 
, actual taken count either this or zero.
Unpredictable max backedge-taken count. 
Loop 
Predicated backedge-taken count is 
 Predicates:
Unpredictable predicated backedge-taken count. 
Trip multiple is 
Scalar Evolution Analysis
ScalarEvolution-based Alias Analysis
  ; Alive: <
  ; Alive: <
NumAllocaStackSafe
Number of safe allocas
NumAllocaTotal
Number of total allocas
NumCombinedCalleeLookupTotal
Number of total callee lookups on combined index.
NumCombinedCalleeLookupFailed
Number of failed callee lookups on combined index.
NumModuleCalleeLookupTotal
Number of total callee lookups on module index.
NumModuleCalleeLookupFailed
Number of failed callee lookups on module index.
NumCombinedParamAccessesBefore
Number of total param accesses before generateParamAccessSummary.
NumCombinedParamAccessesAfter
Number of total param accesses after generateParamAccessSummary.
NumCombinedDataFlowNodes
Number of total nodes in combined index for dataflow processing.
NumIndexCalleeUnhandled
Number of index callee which are unhandled.
NumIndexCalleeMultipleWeak
Number of index callee non-unique weak.
NumIndexCalleeMultipleExternal
Number of index callee non-unique external.
stack-safety-max-iterations
stack-safety-print
stack-safety-run
'Stack Safety Local Analysis' for function '
'Stack Safety Analysis' for module '
 dso_preemptable
 interposable
    args uses:
arg{0}
[]: 
    allocas uses:
(arg
vector-library
Vector functions library
No vector functions library
Accelerate framework
LIBMVEC-X86
GLIBC Vector Math library
IBM MASS vector library
Intel SVML library
??2@YAPAXI@Z
??2@YAPAXIABUnothrow_t@std@@@Z
??2@YAPEAX_K@Z
??2@YAPEAX_KAEBUnothrow_t@std@@@Z
??3@YAXPAX@Z
??3@YAXPAXABUnothrow_t@std@@@Z
??3@YAXPAXI@Z
??3@YAXPEAX@Z
??3@YAXPEAXAEBUnothrow_t@std@@@Z
??3@YAXPEAX_K@Z
??_U@YAPAXI@Z
??_U@YAPAXIABUnothrow_t@std@@@Z
??_U@YAPEAX_K@Z
??_U@YAPEAX_KAEBUnothrow_t@std@@@Z
??_V@YAXPAX@Z
??_V@YAXPAXABUnothrow_t@std@@@Z
??_V@YAXPAXI@Z
??_V@YAXPEAX@Z
??_V@YAXPEAXAEBUnothrow_t@std@@@Z
??_V@YAXPEAX_K@Z
_IO_getc
_IO_putc
_ZdaPv
_ZdaPvRKSt9nothrow_t
_ZdaPvSt11align_val_t
_ZdaPvSt11align_val_tRKSt9nothrow_t
_ZdaPvj
_ZdaPvjSt11align_val_t
_ZdaPvm
_ZdaPvmSt11align_val_t
_ZdlPv
_ZdlPvRKSt9nothrow_t
_ZdlPvSt11align_val_t
_ZdlPvSt11align_val_tRKSt9nothrow_t
_ZdlPvj
_ZdlPvjSt11align_val_t
_ZdlPvm
_ZdlPvmSt11align_val_t
_Znaj
_ZnajRKSt9nothrow_t
_ZnajSt11align_val_t
_ZnajSt11align_val_tRKSt9nothrow_t
_Znam
_ZnamRKSt9nothrow_t
_ZnamSt11align_val_t
_ZnamSt11align_val_tRKSt9nothrow_t
_Znwj
_ZnwjRKSt9nothrow_t
_ZnwjSt11align_val_t
_ZnwjSt11align_val_tRKSt9nothrow_t
_Znwm
_ZnwmRKSt9nothrow_t
_ZnwmSt11align_val_t
_ZnwmSt11align_val_tRKSt9nothrow_t
__acos_finite
__acosf_finite
__acosh_finite
__acoshf_finite
__acoshl_finite
__acosl_finite
__asin_finite
__asinf_finite
__asinl_finite
__atan2_finite
__atan2f_finite
__atan2l_finite
__atanh_finite
__atanhf_finite
__atanhl_finite
__atomic_load
__atomic_store
__cosh_finite
__coshf_finite
__coshl_finite
__cospi
__cospif
__cxa_atexit
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_release
__exp10_finite
__exp10f_finite
__exp10l_finite
__exp2_finite
__exp2f_finite
__exp2l_finite
__exp_finite
__expf_finite
__expl_finite
__isoc99_scanf
__isoc99_sscanf
__log10_finite
__log10f_finite
__log10l_finite
__log2_finite
__log2f_finite
__log2l_finite
__log_finite
__logf_finite
__logl_finite
__memccpy_chk
__memcpy_chk
__memmove_chk
__mempcpy_chk
__memset_chk
__nvvm_reflect
__pow_finite
__powf_finite
__powl_finite
__sincospi_stret
__sincospif_stret
__sinh_finite
__sinhf_finite
__sinhl_finite
__sinpi
__sinpif
__small_fprintf
__small_printf
__small_sprintf
__snprintf_chk
__sprintf_chk
__sqrt_finite
__sqrtf_finite
__sqrtl_finite
__stpcpy_chk
__stpncpy_chk
__strcat_chk
__strcpy_chk
__strdup
__strlcat_chk
__strlcpy_chk
__strlen_chk
__strncat_chk
__strncpy_chk
__strndup
__strtok_r
__vsnprintf_chk
__vsprintf_chk
access
acos
acosf
acosh
acoshf
acoshl
acosl
aligned_alloc
asin
asinf
asinh
asinhf
asinhl
asinl
atan
atan2
atan2f
atan2l
atanf
atanh
atanhf
atanhl
atanl
atof
atoi
atol
atoll
bcmp
bcopy
bzero
cabs
cabsf
cabsl
calloc
cbrt
cbrtf
cbrtl
ceil
ceilf
ceill
chmod
chown
clearerr
closedir
copysign
copysignf
copysignl
cosf
cosh
coshf
coshl
cosl
ctermid
execl
execle
execlp
execv
execvP
execve
execvp
execvpe
exp10
exp10f
exp10l
exp2
exp2f
exp2l
expf
expl
expm1
expm1f
expm1l
fabs
fabsf
fabsl
fclose
fdopen
feof
ferror
fflush
ffsl
ffsll
fgetc
fgetc_unlocked
fgetpos
fgets
fgets_unlocked
fileno
fiprintf
flockfile
floor
floorf
floorl
flsl
flsll
fmax
fmaxf
fmaxl
fmin
fminf
fminl
fmod
fmodf
fmodl
fopen
fopen64
fork
fprintf
fputc
fputc_unlocked
fputs
fputs_unlocked
fread
fread_unlocked
free
frexp
frexpf
frexpl
fscanf
fseek
fseeko
fseeko64
fsetpos
fstat
fstat64
fstatvfs
fstatvfs64
ftell
ftello
ftello64
ftrylockfile
funlockfile
fwrite
fwrite_unlocked
getc
getc_unlocked
getchar
getchar_unlocked
getenv
getitimer
getlogin_r
getpwnam
gets
gettimeofday
htonl
htons
iprintf
isascii
isdigit
labs
lchown
ldexp
ldexpf
ldexpl
llabs
log10
log10f
log10l
log1p
log1pf
log1pl
log2
log2f
log2l
logb
logbf
logbl
logf
logl
lstat
lstat64
malloc
memalign
memccpy
memchr
memcmp
memcpy
memmove
mempcpy
memrchr
memset
memset_pattern16
mkdir
mktime
modf
modff
modfl
nearbyint
nearbyintf
nearbyintl
ntohl
ntohs
open
open64
opendir
pclose
perror
popen
posix_memalign
powf
powl
pread
printf
putc
putc_unlocked
putchar
putchar_unlocked
puts
pwrite
qsort
read
readlink
realloc
reallocf
realpath
remainder
remainderf
remainderl
remove
rename
rewind
rint
rintf
rintl
rmdir
round
roundeven
roundevenf
roundevenl
roundf
roundl
scanf
setbuf
setitimer
setvbuf
sinf
sinh
sinhf
sinhl
sinl
siprintf
snprintf
sprintf
sqrt
sqrtf
sqrtl
sscanf
stat
stat64
statvfs
statvfs64
stpcpy
stpncpy
strcasecmp
strcat
strchr
strcmp
strcoll
strcpy
strcspn
strdup
strlcat
strlcpy
strlen
strncasecmp
strncat
strncmp
strncpy
strndup
strnlen
strpbrk
strrchr
strspn
strstr
strtod
strtof
strtok
strtok_r
strtol
strtold
strtoll
strtoul
strtoull
strxfrm
system
tanf
tanh
tanhf
tanhl
tanl
times
tmpfile
tmpfile64
toascii
trunc
truncf
truncl
uname
ungetc
unlink
unsetenv
utime
utimes
valloc
vfprintf
vfscanf
vprintf
vscanf
vsnprintf
vsprintf
vsscanf
wcslen
write
vceilf
vfabsf
llvm.fabs.f32
vfloorf
vsqrtf
llvm.sqrt.f32
vexpf
llvm.exp.f32
vexpm1f
vlogf
llvm.log.f32
vlog1pf
vlog10f
llvm.log10.f32
vlogbf
vsinf
llvm.sin.f32
vcosf
llvm.cos.f32
vtanf
vasinf
vacosf
vatanf
vsinhf
vcoshf
vtanhf
vasinhf
vacoshf
vatanhf
_ZGVbN2v_sin
_ZGVdN4v_sin
_ZGVbN4v_sinf
_ZGVdN8v_sinf
llvm.sin.f64
_ZGVbN2v_cos
_ZGVdN4v_cos
_ZGVbN4v_cosf
_ZGVdN8v_cosf
llvm.cos.f64
_ZGVbN2vv_pow
_ZGVdN4vv_pow
_ZGVbN4vv_powf
_ZGVdN8vv_powf
_ZGVbN2vv___pow_finite
_ZGVdN4vv___pow_finite
_ZGVbN4vv___powf_finite
_ZGVdN8vv___powf_finite
llvm.pow.f64
llvm.pow.f32
_ZGVbN2v_exp
_ZGVdN4v_exp
_ZGVbN4v_expf
_ZGVdN8v_expf
_ZGVbN2v___exp_finite
_ZGVdN4v___exp_finite
_ZGVbN4v___expf_finite
_ZGVdN8v___expf_finite
llvm.exp.f64
_ZGVbN2v_log
_ZGVdN4v_log
_ZGVbN4v_logf
_ZGVdN8v_logf
_ZGVbN2v___log_finite
_ZGVdN4v___log_finite
_ZGVbN4v___logf_finite
_ZGVdN8v___logf_finite
llvm.log.f64
__cbrtd2_massv
__cbrtf4_massv
__powd2_massv
__powf4_massv
__sqrtd2_massv
llvm.sqrt.f64
__sqrtf4_massv
__expd2_massv
__expf4_massv
__exp2d2_massv
llvm.exp2.f64
__exp2f4_massv
llvm.exp2.f32
__expm1d2_massv
__expm1f4_massv
__logd2_massv
__logf4_massv
__log1pd2_massv
__log1pf4_massv
__log10d2_massv
llvm.log10.f64
__log10f4_massv
__log2d2_massv
llvm.log2.f64
__log2f4_massv
llvm.log2.f32
__sind2_massv
__sinf4_massv
__cosd2_massv
__cosf4_massv
__tand2_massv
__tanf4_massv
__asind2_massv
__asinf4_massv
__acosd2_massv
__acosf4_massv
__atand2_massv
__atanf4_massv
__atan2d2_massv
__atan2f4_massv
__sinhd2_massv
__sinhf4_massv
__coshd2_massv
__coshf4_massv
__tanhd2_massv
__tanhf4_massv
__asinhd2_massv
__asinhf4_massv
__acoshd2_massv
__acoshf4_massv
__atanhd2_massv
__atanhf4_massv
__svml_sin2
__svml_sin4
__svml_sin8
__svml_sinf4
__svml_sinf8
__svml_sinf16
__svml_cos2
__svml_cos4
__svml_cos8
__svml_cosf4
__svml_cosf8
__svml_cosf16
__svml_pow2
__svml_pow4
__svml_pow8
__svml_powf4
__svml_powf8
__svml_powf16
__svml_exp2
__svml_exp4
__svml_exp8
__svml_expf4
__svml_expf8
__svml_expf16
__svml_log2
__svml_log4
__svml_log8
__svml_logf4
__svml_logf8
__svml_logf16
__svml_log22
__svml_log24
__svml_log28
__svml_log2f4
__svml_log2f8
__svml_log2f16
__svml_log102
__svml_log104
__svml_log108
__svml_log10f4
__svml_log10f8
__svml_log10f16
__svml_sqrt2
__svml_sqrt4
__svml_sqrt8
__svml_sqrtf4
__svml_sqrtf8
__svml_sqrtf16
__svml_exp22
__svml_exp24
__svml_exp28
__svml_exp2f4
__svml_exp2f8
__svml_exp2f16
fwrite$UNIX2003
fputs$UNIX2003
_cabs
_copysign
_copysignf
_logb
_logbf
__exp10
__exp10f
Target Library Information
costmodel-reduxcost
Recognize reduction patterns.
Target Transform Information
copysign
copysignf
copysignl
fminf
fminl
fmaxf
fmaxl
sinl
cosl
sqrtl
powl
exp2l
Generic::Unknown Register Class
Generic::ScalarRC
Generic::VectorRC
enable-tbaa
Cycle found in TBAA metadata.
Type-Based Alias Analysis
enable-scoped-noalias
Scoped NoAlias Alias Analysis
notconstant<
constantrange incl. undef <
constantrange<
constant<
dom-conditions-max-uses
value-tracking
BadAssumption
Detected conflicting code assumptions. Program may have undefined behavior, or compiler may have internal error.
max-interleave-group-factor
Maximum factor for an interleaved access group (default = 8)
_LLVM_
Sections with relocations should have an address of 0
TLS Directory size (%u) is not the expected size (%llu).
COFF-i386
COFF-x86-64
COFF-ARM
COFF-ARM64
COFF-<unknown arch>
invalid section name
IMAGE_REL_AMD64_ABSOLUTE
IMAGE_REL_AMD64_ADDR64
IMAGE_REL_AMD64_ADDR32
IMAGE_REL_AMD64_ADDR32NB
IMAGE_REL_AMD64_REL32
IMAGE_REL_AMD64_REL32_1
IMAGE_REL_AMD64_REL32_2
IMAGE_REL_AMD64_REL32_3
IMAGE_REL_AMD64_REL32_4
IMAGE_REL_AMD64_REL32_5
IMAGE_REL_AMD64_SECTION
IMAGE_REL_AMD64_SECREL
IMAGE_REL_AMD64_SECREL7
IMAGE_REL_AMD64_TOKEN
IMAGE_REL_AMD64_SREL32
IMAGE_REL_AMD64_PAIR
IMAGE_REL_AMD64_SSPAN32
IMAGE_REL_ARM_ABSOLUTE
IMAGE_REL_ARM_ADDR32
IMAGE_REL_ARM_ADDR32NB
IMAGE_REL_ARM_BRANCH24
IMAGE_REL_ARM_BRANCH11
IMAGE_REL_ARM_TOKEN
IMAGE_REL_ARM_BLX24
IMAGE_REL_ARM_BLX11
IMAGE_REL_ARM_REL32
IMAGE_REL_ARM_SECTION
IMAGE_REL_ARM_SECREL
IMAGE_REL_ARM_MOV32A
IMAGE_REL_ARM_MOV32T
IMAGE_REL_ARM_BRANCH20T
IMAGE_REL_ARM_BRANCH24T
IMAGE_REL_ARM_BLX23T
IMAGE_REL_ARM_PAIR
IMAGE_REL_ARM64_ABSOLUTE
IMAGE_REL_ARM64_ADDR32
IMAGE_REL_ARM64_ADDR32NB
IMAGE_REL_ARM64_BRANCH26
IMAGE_REL_ARM64_PAGEBASE_REL21
IMAGE_REL_ARM64_REL21
IMAGE_REL_ARM64_PAGEOFFSET_12A
IMAGE_REL_ARM64_PAGEOFFSET_12L
IMAGE_REL_ARM64_SECREL
IMAGE_REL_ARM64_SECREL_LOW12A
IMAGE_REL_ARM64_SECREL_HIGH12A
IMAGE_REL_ARM64_SECREL_LOW12L
IMAGE_REL_ARM64_TOKEN
IMAGE_REL_ARM64_SECTION
IMAGE_REL_ARM64_ADDR64
IMAGE_REL_ARM64_BRANCH19
IMAGE_REL_ARM64_BRANCH14
IMAGE_REL_ARM64_REL32
IMAGE_REL_I386_ABSOLUTE
IMAGE_REL_I386_DIR16
IMAGE_REL_I386_REL16
IMAGE_REL_I386_DIR32
IMAGE_REL_I386_DIR32NB
IMAGE_REL_I386_SEG12
IMAGE_REL_I386_SECTION
IMAGE_REL_I386_SECREL
IMAGE_REL_I386_TOKEN
IMAGE_REL_I386_SECREL7
IMAGE_REL_I386_REL32
eh_frame
R_X86_64_NONE
R_X86_64_64
R_X86_64_PC32
R_X86_64_GOT32
R_X86_64_PLT32
R_X86_64_COPY
R_X86_64_GLOB_DAT
R_X86_64_JUMP_SLOT
R_X86_64_RELATIVE
R_X86_64_GOTPCREL
R_X86_64_32
R_X86_64_32S
R_X86_64_16
R_X86_64_PC16
R_X86_64_8
R_X86_64_PC8
R_X86_64_DTPMOD64
R_X86_64_DTPOFF64
R_X86_64_TPOFF64
R_X86_64_TLSGD
R_X86_64_TLSLD
R_X86_64_DTPOFF32
R_X86_64_GOTTPOFF
R_X86_64_TPOFF32
R_X86_64_PC64
R_X86_64_GOTOFF64
R_X86_64_GOTPC32
R_X86_64_GOT64
R_X86_64_GOTPCREL64
R_X86_64_GOTPC64
R_X86_64_GOTPLT64
R_X86_64_PLTOFF64
R_X86_64_SIZE32
R_X86_64_SIZE64
R_X86_64_GOTPC32_TLSDESC
R_X86_64_TLSDESC_CALL
R_X86_64_TLSDESC
R_X86_64_IRELATIVE
R_X86_64_GOTPCRELX
R_X86_64_REX_GOTPCRELX
R_386_NONE
R_386_32
R_386_PC32
R_386_GOT32
R_386_PLT32
R_386_COPY
R_386_GLOB_DAT
R_386_JUMP_SLOT
R_386_RELATIVE
R_386_GOTOFF
R_386_GOTPC
R_386_32PLT
R_386_TLS_TPOFF
R_386_TLS_IE
R_386_TLS_GOTIE
R_386_TLS_LE
R_386_TLS_GD
R_386_TLS_LDM
R_386_16
R_386_PC16
R_386_8
R_386_PC8
R_386_TLS_GD_32
R_386_TLS_GD_PUSH
R_386_TLS_GD_CALL
R_386_TLS_GD_POP
R_386_TLS_LDM_32
R_386_TLS_LDM_PUSH
R_386_TLS_LDM_CALL
R_386_TLS_LDM_POP
R_386_TLS_LDO_32
R_386_TLS_IE_32
R_386_TLS_LE_32
R_386_TLS_DTPMOD32
R_386_TLS_DTPOFF32
R_386_TLS_TPOFF32
R_386_TLS_GOTDESC
R_386_TLS_DESC_CALL
R_386_TLS_DESC
R_386_IRELATIVE
R_386_GOT32X
R_MIPS_NONE
R_MIPS_16
R_MIPS_32
R_MIPS_REL32
R_MIPS_26
R_MIPS_HI16
R_MIPS_LO16
R_MIPS_GPREL16
R_MIPS_LITERAL
R_MIPS_GOT16
R_MIPS_PC16
R_MIPS_CALL16
R_MIPS_GPREL32
R_MIPS_UNUSED1
R_MIPS_UNUSED2
R_MIPS_UNUSED3
R_MIPS_SHIFT5
R_MIPS_SHIFT6
R_MIPS_64
R_MIPS_GOT_DISP
R_MIPS_GOT_PAGE
R_MIPS_GOT_OFST
R_MIPS_GOT_HI16
R_MIPS_GOT_LO16
R_MIPS_SUB
R_MIPS_INSERT_A
R_MIPS_INSERT_B
R_MIPS_DELETE
R_MIPS_HIGHER
R_MIPS_HIGHEST
R_MIPS_CALL_HI16
R_MIPS_CALL_LO16
R_MIPS_SCN_DISP
R_MIPS_REL16
R_MIPS_ADD_IMMEDIATE
R_MIPS_PJUMP
R_MIPS_RELGOT
R_MIPS_JALR
R_MIPS_TLS_DTPMOD32
R_MIPS_TLS_DTPREL32
R_MIPS_TLS_DTPMOD64
R_MIPS_TLS_DTPREL64
R_MIPS_TLS_GD
R_MIPS_TLS_LDM
R_MIPS_TLS_DTPREL_HI16
R_MIPS_TLS_DTPREL_LO16
R_MIPS_TLS_GOTTPREL
R_MIPS_TLS_TPREL32
R_MIPS_TLS_TPREL64
R_MIPS_TLS_TPREL_HI16
R_MIPS_TLS_TPREL_LO16
R_MIPS_GLOB_DAT
R_MIPS_PC21_S2
R_MIPS_PC26_S2
R_MIPS_PC18_S3
R_MIPS_PC19_S2
R_MIPS_PCHI16
R_MIPS_PCLO16
R_MIPS16_26
R_MIPS16_GPREL
R_MIPS16_GOT16
R_MIPS16_CALL16
R_MIPS16_HI16
R_MIPS16_LO16
R_MIPS16_TLS_GD
R_MIPS16_TLS_LDM
R_MIPS16_TLS_DTPREL_HI16
R_MIPS16_TLS_DTPREL_LO16
R_MIPS16_TLS_GOTTPREL
R_MIPS16_TLS_TPREL_HI16
R_MIPS16_TLS_TPREL_LO16
R_MIPS_COPY
R_MIPS_JUMP_SLOT
R_MICROMIPS_26_S1
R_MICROMIPS_HI16
R_MICROMIPS_LO16
R_MICROMIPS_GPREL16
R_MICROMIPS_LITERAL
R_MICROMIPS_GOT16
R_MICROMIPS_PC7_S1
R_MICROMIPS_PC10_S1
R_MICROMIPS_PC16_S1
R_MICROMIPS_CALL16
R_MICROMIPS_GOT_DISP
R_MICROMIPS_GOT_PAGE
R_MICROMIPS_GOT_OFST
R_MICROMIPS_GOT_HI16
R_MICROMIPS_GOT_LO16
R_MICROMIPS_SUB
R_MICROMIPS_HIGHER
R_MICROMIPS_HIGHEST
R_MICROMIPS_CALL_HI16
R_MICROMIPS_CALL_LO16
R_MICROMIPS_SCN_DISP
R_MICROMIPS_JALR
R_MICROMIPS_HI0_LO16
R_MICROMIPS_TLS_GD
R_MICROMIPS_TLS_LDM
R_MICROMIPS_TLS_DTPREL_HI16
R_MICROMIPS_TLS_DTPREL_LO16
R_MICROMIPS_TLS_GOTTPREL
R_MICROMIPS_TLS_TPREL_HI16
R_MICROMIPS_TLS_TPREL_LO16
R_MICROMIPS_GPREL7_S2
R_MICROMIPS_PC23_S2
R_MICROMIPS_PC21_S1
R_MICROMIPS_PC26_S1
R_MICROMIPS_PC18_S3
R_MICROMIPS_PC19_S2
R_MIPS_NUM
R_MIPS_PC32
R_MIPS_EH
R_AARCH64_NONE
R_AARCH64_ABS64
R_AARCH64_ABS32
R_AARCH64_ABS16
R_AARCH64_PREL64
R_AARCH64_PREL32
R_AARCH64_PREL16
R_AARCH64_MOVW_UABS_G0
R_AARCH64_MOVW_UABS_G0_NC
R_AARCH64_MOVW_UABS_G1
R_AARCH64_MOVW_UABS_G1_NC
R_AARCH64_MOVW_UABS_G2
R_AARCH64_MOVW_UABS_G2_NC
R_AARCH64_MOVW_UABS_G3
R_AARCH64_MOVW_SABS_G0
R_AARCH64_MOVW_SABS_G1
R_AARCH64_MOVW_SABS_G2
R_AARCH64_LD_PREL_LO19
R_AARCH64_ADR_PREL_LO21
R_AARCH64_ADR_PREL_PG_HI21
R_AARCH64_ADR_PREL_PG_HI21_NC
R_AARCH64_ADD_ABS_LO12_NC
R_AARCH64_LDST8_ABS_LO12_NC
R_AARCH64_TSTBR14
R_AARCH64_CONDBR19
R_AARCH64_JUMP26
R_AARCH64_CALL26
R_AARCH64_LDST16_ABS_LO12_NC
R_AARCH64_LDST32_ABS_LO12_NC
R_AARCH64_LDST64_ABS_LO12_NC
R_AARCH64_MOVW_PREL_G0
R_AARCH64_MOVW_PREL_G0_NC
R_AARCH64_MOVW_PREL_G1
R_AARCH64_MOVW_PREL_G1_NC
R_AARCH64_MOVW_PREL_G2
R_AARCH64_MOVW_PREL_G2_NC
R_AARCH64_MOVW_PREL_G3
R_AARCH64_LDST128_ABS_LO12_NC
R_AARCH64_MOVW_GOTOFF_G0
R_AARCH64_MOVW_GOTOFF_G0_NC
R_AARCH64_MOVW_GOTOFF_G1
R_AARCH64_MOVW_GOTOFF_G1_NC
R_AARCH64_MOVW_GOTOFF_G2
R_AARCH64_MOVW_GOTOFF_G2_NC
R_AARCH64_MOVW_GOTOFF_G3
R_AARCH64_GOTREL64
R_AARCH64_GOTREL32
R_AARCH64_GOT_LD_PREL19
R_AARCH64_LD64_GOTOFF_LO15
R_AARCH64_ADR_GOT_PAGE
R_AARCH64_LD64_GOT_LO12_NC
R_AARCH64_LD64_GOTPAGE_LO15
R_AARCH64_PLT32
R_AARCH64_TLSGD_ADR_PREL21
R_AARCH64_TLSGD_ADR_PAGE21
R_AARCH64_TLSGD_ADD_LO12_NC
R_AARCH64_TLSGD_MOVW_G1
R_AARCH64_TLSGD_MOVW_G0_NC
R_AARCH64_TLSLD_ADR_PREL21
R_AARCH64_TLSLD_ADR_PAGE21
R_AARCH64_TLSLD_ADD_LO12_NC
R_AARCH64_TLSLD_MOVW_G1
R_AARCH64_TLSLD_MOVW_G0_NC
R_AARCH64_TLSLD_LD_PREL19
R_AARCH64_TLSLD_MOVW_DTPREL_G2
R_AARCH64_TLSLD_MOVW_DTPREL_G1
R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC
R_AARCH64_TLSLD_MOVW_DTPREL_G0
R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC
R_AARCH64_TLSLD_ADD_DTPREL_HI12
R_AARCH64_TLSLD_ADD_DTPREL_LO12
R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST8_DTPREL_LO12
R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST16_DTPREL_LO12
R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST32_DTPREL_LO12
R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST64_DTPREL_LO12
R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC
R_AARCH64_TLSIE_MOVW_GOTTPREL_G1
R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC
R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21
R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC
R_AARCH64_TLSIE_LD_GOTTPREL_PREL19
R_AARCH64_TLSLE_MOVW_TPREL_G2
R_AARCH64_TLSLE_MOVW_TPREL_G1
R_AARCH64_TLSLE_MOVW_TPREL_G1_NC
R_AARCH64_TLSLE_MOVW_TPREL_G0
R_AARCH64_TLSLE_MOVW_TPREL_G0_NC
R_AARCH64_TLSLE_ADD_TPREL_HI12
R_AARCH64_TLSLE_ADD_TPREL_LO12
R_AARCH64_TLSLE_ADD_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST8_TPREL_LO12
R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST16_TPREL_LO12
R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST32_TPREL_LO12
R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST64_TPREL_LO12
R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC
R_AARCH64_TLSDESC_LD_PREL19
R_AARCH64_TLSDESC_ADR_PREL21
R_AARCH64_TLSDESC_ADR_PAGE21
R_AARCH64_TLSDESC_LD64_LO12
R_AARCH64_TLSDESC_ADD_LO12
R_AARCH64_TLSDESC_OFF_G1
R_AARCH64_TLSDESC_OFF_G0_NC
R_AARCH64_TLSDESC_LDR
R_AARCH64_TLSDESC_ADD
R_AARCH64_TLSDESC_CALL
R_AARCH64_TLSLE_LDST128_TPREL_LO12
R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC
R_AARCH64_TLSLD_LDST128_DTPREL_LO12
R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC
R_AARCH64_COPY
R_AARCH64_GLOB_DAT
R_AARCH64_JUMP_SLOT
R_AARCH64_RELATIVE
R_AARCH64_TLS_DTPMOD64
R_AARCH64_TLS_DTPREL64
R_AARCH64_TLS_TPREL64
R_AARCH64_TLSDESC
R_AARCH64_IRELATIVE
R_AARCH64_P32_ABS32
R_AARCH64_P32_ABS16
R_AARCH64_P32_PREL32
R_AARCH64_P32_PREL16
R_AARCH64_P32_MOVW_UABS_G0
R_AARCH64_P32_MOVW_UABS_G0_NC
R_AARCH64_P32_MOVW_UABS_G1
R_AARCH64_P32_MOVW_SABS_G0
R_AARCH64_P32_LD_PREL_LO19
R_AARCH64_P32_ADR_PREL_LO21
R_AARCH64_P32_ADR_PREL_PG_HI21
R_AARCH64_P32_ADD_ABS_LO12_NC
R_AARCH64_P32_LDST8_ABS_LO12_NC
R_AARCH64_P32_LDST16_ABS_LO12_NC
R_AARCH64_P32_LDST32_ABS_LO12_NC
R_AARCH64_P32_LDST64_ABS_LO12_NC
R_AARCH64_P32_LDST128_ABS_LO12_NC
R_AARCH64_P32_TSTBR14
R_AARCH64_P32_CONDBR19
R_AARCH64_P32_JUMP26
R_AARCH64_P32_CALL26
R_AARCH64_P32_MOVW_PREL_G0
R_AARCH64_P32_MOVW_PREL_G0_NC
R_AARCH64_P32_MOVW_PREL_G1
R_AARCH64_P32_GOT_LD_PREL19
R_AARCH64_P32_ADR_GOT_PAGE
R_AARCH64_P32_LD32_GOT_LO12_NC
R_AARCH64_P32_LD32_GOTPAGE_LO14
R_AARCH64_P32_PLT32
R_AARCH64_P32_TLSGD_ADR_PREL21
R_AARCH64_P32_TLSGD_ADR_PAGE21
R_AARCH64_P32_TLSGD_ADD_LO12_NC
R_AARCH64_P32_TLSLD_ADR_PREL21
R_AARCH64_P32_TLSLD_ADR_PAGE21
R_AARCH64_P32_TLSLD_ADD_LO12_NC
R_AARCH64_P32_TLSLD_LD_PREL19
R_AARCH64_P32_TLSLD_MOVW_DTPREL_G1
R_AARCH64_P32_TLSLD_MOVW_DTPREL_G0
R_AARCH64_P32_TLSLD_MOVW_DTPREL_G0_NC
R_AARCH64_P32_TLSLD_ADD_DTPREL_HI12
R_AARCH64_P32_TLSLD_ADD_DTPREL_LO12
R_AARCH64_P32_TLSLD_ADD_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST8_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST8_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST16_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST16_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST32_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST32_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST64_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST64_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST128_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST128_DTPREL_LO12_NC
R_AARCH64_P32_TLSIE_ADR_GOTTPREL_PAGE21
R_AARCH64_P32_TLSIE_LD32_GOTTPREL_LO12_NC
R_AARCH64_P32_TLSIE_LD_GOTTPREL_PREL19
R_AARCH64_P32_TLSLE_MOVW_TPREL_G1
R_AARCH64_P32_TLSLE_MOVW_TPREL_G0
R_AARCH64_P32_TLSLE_MOVW_TPREL_G0_NC
R_AARCH64_P32_TLSLE_ADD_TPREL_HI12
R_AARCH64_P32_TLSLE_ADD_TPREL_LO12
R_AARCH64_P32_TLSLE_ADD_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST8_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST8_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST16_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST16_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST32_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST32_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST64_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST64_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST128_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST128_TPREL_LO12_NC
R_AARCH64_P32_TLSDESC_LD_PREL19
R_AARCH64_P32_TLSDESC_ADR_PREL21
R_AARCH64_P32_TLSDESC_ADR_PAGE21
R_AARCH64_P32_TLSDESC_LD32_LO12
R_AARCH64_P32_TLSDESC_ADD_LO12
R_AARCH64_P32_TLSDESC_CALL
R_AARCH64_P32_COPY
R_AARCH64_P32_GLOB_DAT
R_AARCH64_P32_JUMP_SLOT
R_AARCH64_P32_RELATIVE
R_AARCH64_P32_TLS_DTPREL
R_AARCH64_P32_TLS_DTPMOD
R_AARCH64_P32_TLS_TPREL
R_AARCH64_P32_TLSDESC
R_AARCH64_P32_IRELATIVE
R_ARM_NONE
R_ARM_PC24
R_ARM_ABS32
R_ARM_REL32
R_ARM_LDR_PC_G0
R_ARM_ABS16
R_ARM_ABS12
R_ARM_THM_ABS5
R_ARM_ABS8
R_ARM_SBREL32
R_ARM_THM_CALL
R_ARM_THM_PC8
R_ARM_BREL_ADJ
R_ARM_TLS_DESC
R_ARM_THM_SWI8
R_ARM_XPC25
R_ARM_THM_XPC22
R_ARM_TLS_DTPMOD32
R_ARM_TLS_DTPOFF32
R_ARM_TLS_TPOFF32
R_ARM_COPY
R_ARM_GLOB_DAT
R_ARM_JUMP_SLOT
R_ARM_RELATIVE
R_ARM_GOTOFF32
R_ARM_BASE_PREL
R_ARM_GOT_BREL
R_ARM_PLT32
R_ARM_CALL
R_ARM_JUMP24
R_ARM_THM_JUMP24
R_ARM_BASE_ABS
R_ARM_ALU_PCREL_7_0
R_ARM_ALU_PCREL_15_8
R_ARM_ALU_PCREL_23_15
R_ARM_LDR_SBREL_11_0_NC
R_ARM_ALU_SBREL_19_12_NC
R_ARM_ALU_SBREL_27_20_CK
R_ARM_TARGET1
R_ARM_SBREL31
R_ARM_V4BX
R_ARM_TARGET2
R_ARM_PREL31
R_ARM_MOVW_ABS_NC
R_ARM_MOVT_ABS
R_ARM_MOVW_PREL_NC
R_ARM_MOVT_PREL
R_ARM_THM_MOVW_ABS_NC
R_ARM_THM_MOVT_ABS
R_ARM_THM_MOVW_PREL_NC
R_ARM_THM_MOVT_PREL
R_ARM_THM_JUMP19
R_ARM_THM_JUMP6
R_ARM_THM_ALU_PREL_11_0
R_ARM_THM_PC12
R_ARM_ABS32_NOI
R_ARM_REL32_NOI
R_ARM_ALU_PC_G0_NC
R_ARM_ALU_PC_G0
R_ARM_ALU_PC_G1_NC
R_ARM_ALU_PC_G1
R_ARM_ALU_PC_G2
R_ARM_LDR_PC_G1
R_ARM_LDR_PC_G2
R_ARM_LDRS_PC_G0
R_ARM_LDRS_PC_G1
R_ARM_LDRS_PC_G2
R_ARM_LDC_PC_G0
R_ARM_LDC_PC_G1
R_ARM_LDC_PC_G2
R_ARM_ALU_SB_G0_NC
R_ARM_ALU_SB_G0
R_ARM_ALU_SB_G1_NC
R_ARM_ALU_SB_G1
R_ARM_ALU_SB_G2
R_ARM_LDR_SB_G0
R_ARM_LDR_SB_G1
R_ARM_LDR_SB_G2
R_ARM_LDRS_SB_G0
R_ARM_LDRS_SB_G1
R_ARM_LDRS_SB_G2
R_ARM_LDC_SB_G0
R_ARM_LDC_SB_G1
R_ARM_LDC_SB_G2
R_ARM_MOVW_BREL_NC
R_ARM_MOVT_BREL
R_ARM_MOVW_BREL
R_ARM_THM_MOVW_BREL_NC
R_ARM_THM_MOVT_BREL
R_ARM_THM_MOVW_BREL
R_ARM_TLS_GOTDESC
R_ARM_TLS_CALL
R_ARM_TLS_DESCSEQ
R_ARM_THM_TLS_CALL
R_ARM_PLT32_ABS
R_ARM_GOT_ABS
R_ARM_GOT_PREL
R_ARM_GOT_BREL12
R_ARM_GOTOFF12
R_ARM_GOTRELAX
R_ARM_GNU_VTENTRY
R_ARM_GNU_VTINHERIT
R_ARM_THM_JUMP11
R_ARM_THM_JUMP8
R_ARM_TLS_GD32
R_ARM_TLS_LDM32
R_ARM_TLS_LDO32
R_ARM_TLS_IE32
R_ARM_TLS_LE32
R_ARM_TLS_LDO12
R_ARM_TLS_LE12
R_ARM_TLS_IE12GP
R_ARM_PRIVATE_0
R_ARM_PRIVATE_1
R_ARM_PRIVATE_2
R_ARM_PRIVATE_3
R_ARM_PRIVATE_4
R_ARM_PRIVATE_5
R_ARM_PRIVATE_6
R_ARM_PRIVATE_7
R_ARM_PRIVATE_8
R_ARM_PRIVATE_9
R_ARM_PRIVATE_10
R_ARM_PRIVATE_11
R_ARM_PRIVATE_12
R_ARM_PRIVATE_13
R_ARM_PRIVATE_14
R_ARM_PRIVATE_15
R_ARM_ME_TOO
R_ARM_THM_TLS_DESCSEQ16
R_ARM_THM_TLS_DESCSEQ32
R_ARM_THM_BF16
R_ARM_THM_BF12
R_ARM_THM_BF18
R_ARM_IRELATIVE
R_ARC_NONE
R_ARC_8
R_ARC_16
R_ARC_24
R_ARC_32
R_ARC_N8
R_ARC_N16
R_ARC_N24
R_ARC_N32
R_ARC_SDA
R_ARC_SECTOFF
R_ARC_S21H_PCREL
R_ARC_S21W_PCREL
R_ARC_S25H_PCREL
R_ARC_S25W_PCREL
R_ARC_SDA32
R_ARC_SDA_LDST
R_ARC_SDA_LDST1
R_ARC_SDA_LDST2
R_ARC_SDA16_LD
R_ARC_SDA16_LD1
R_ARC_SDA16_LD2
R_ARC_S13_PCREL
R_ARC_W
R_ARC_32_ME
R_ARC_32_ME_S
R_ARC_N32_ME
R_ARC_SECTOFF_ME
R_ARC_SDA32_ME
R_ARC_W_ME
R_AC_SECTOFF_U8
R_AC_SECTOFF_U8_1
R_AC_SECTOFF_U8_2
R_AC_SECTOFF_S9
R_AC_SECTOFF_S9_1
R_AC_SECTOFF_S9_2
R_ARC_SECTOFF_ME_1
R_ARC_SECTOFF_ME_2
R_ARC_SECTOFF_1
R_ARC_SECTOFF_2
R_ARC_SDA_12
R_ARC_SDA16_ST2
R_ARC_32_PCREL
R_ARC_PC32
R_ARC_GOT32
R_ARC_GOTPC32
R_ARC_PLT32
R_ARC_COPY
R_ARC_GLOB_DAT
R_ARC_JMP_SLOT
R_ARC_RELATIVE
R_ARC_GOTOFF
R_ARC_GOTPC
R_ARC_S21W_PCREL_PLT
R_ARC_S25H_PCREL_PLT
R_ARC_JLI_SECTOFF
R_ARC_TLS_DTPMOD
R_ARC_TLS_TPOFF
R_ARC_TLS_GD_GOT
R_ARC_TLS_GD_LD
R_ARC_TLS_GD_CALL
R_ARC_TLS_IE_GOT
R_ARC_TLS_DTPOFF
R_ARC_TLS_DTPOFF_S9
R_ARC_TLS_LE_S9
R_ARC_TLS_LE_32
R_ARC_S25W_PCREL_PLT
R_ARC_S21H_PCREL_PLT
R_ARC_NPS_CMEM16
R_AVR_NONE
R_AVR_32
R_AVR_7_PCREL
R_AVR_13_PCREL
R_AVR_16
R_AVR_16_PM
R_AVR_LO8_LDI
R_AVR_HI8_LDI
R_AVR_HH8_LDI
R_AVR_LO8_LDI_NEG
R_AVR_HI8_LDI_NEG
R_AVR_HH8_LDI_NEG
R_AVR_LO8_LDI_PM
R_AVR_HI8_LDI_PM
R_AVR_HH8_LDI_PM
R_AVR_LO8_LDI_PM_NEG
R_AVR_HI8_LDI_PM_NEG
R_AVR_HH8_LDI_PM_NEG
R_AVR_CALL
R_AVR_LDI
R_AVR_6
R_AVR_6_ADIW
R_AVR_MS8_LDI
R_AVR_MS8_LDI_NEG
R_AVR_LO8_LDI_GS
R_AVR_HI8_LDI_GS
R_AVR_8
R_AVR_8_LO8
R_AVR_8_HI8
R_AVR_8_HLO8
R_AVR_DIFF8
R_AVR_DIFF16
R_AVR_DIFF32
R_AVR_LDS_STS_16
R_AVR_PORT6
R_AVR_PORT5
R_HEX_NONE
R_HEX_B22_PCREL
R_HEX_B15_PCREL
R_HEX_B7_PCREL
R_HEX_LO16
R_HEX_HI16
R_HEX_32
R_HEX_16
R_HEX_8
R_HEX_GPREL16_0
R_HEX_GPREL16_1
R_HEX_GPREL16_2
R_HEX_GPREL16_3
R_HEX_HL16
R_HEX_B13_PCREL
R_HEX_B9_PCREL
R_HEX_B32_PCREL_X
R_HEX_32_6_X
R_HEX_B22_PCREL_X
R_HEX_B15_PCREL_X
R_HEX_B13_PCREL_X
R_HEX_B9_PCREL_X
R_HEX_B7_PCREL_X
R_HEX_16_X
R_HEX_12_X
R_HEX_11_X
R_HEX_10_X
R_HEX_9_X
R_HEX_8_X
R_HEX_7_X
R_HEX_6_X
R_HEX_32_PCREL
R_HEX_COPY
R_HEX_GLOB_DAT
R_HEX_JMP_SLOT
R_HEX_RELATIVE
R_HEX_PLT_B22_PCREL
R_HEX_GOTREL_LO16
R_HEX_GOTREL_HI16
R_HEX_GOTREL_32
R_HEX_GOT_LO16
R_HEX_GOT_HI16
R_HEX_GOT_32
R_HEX_GOT_16
R_HEX_DTPMOD_32
R_HEX_DTPREL_LO16
R_HEX_DTPREL_HI16
R_HEX_DTPREL_32
R_HEX_DTPREL_16
R_HEX_GD_PLT_B22_PCREL
R_HEX_GD_GOT_LO16
R_HEX_GD_GOT_HI16
R_HEX_GD_GOT_32
R_HEX_GD_GOT_16
R_HEX_IE_LO16
R_HEX_IE_HI16
R_HEX_IE_32
R_HEX_IE_GOT_LO16
R_HEX_IE_GOT_HI16
R_HEX_IE_GOT_32
R_HEX_IE_GOT_16
R_HEX_TPREL_LO16
R_HEX_TPREL_HI16
R_HEX_TPREL_32
R_HEX_TPREL_16
R_HEX_6_PCREL_X
R_HEX_GOTREL_32_6_X
R_HEX_GOTREL_16_X
R_HEX_GOTREL_11_X
R_HEX_GOT_32_6_X
R_HEX_GOT_16_X
R_HEX_GOT_11_X
R_HEX_DTPREL_32_6_X
R_HEX_DTPREL_16_X
R_HEX_DTPREL_11_X
R_HEX_GD_GOT_32_6_X
R_HEX_GD_GOT_16_X
R_HEX_GD_GOT_11_X
R_HEX_IE_32_6_X
R_HEX_IE_16_X
R_HEX_IE_GOT_32_6_X
R_HEX_IE_GOT_16_X
R_HEX_IE_GOT_11_X
R_HEX_TPREL_32_6_X
R_HEX_TPREL_16_X
R_HEX_TPREL_11_X
R_HEX_LD_PLT_B22_PCREL
R_HEX_LD_GOT_LO16
R_HEX_LD_GOT_HI16
R_HEX_LD_GOT_32
R_HEX_LD_GOT_16
R_HEX_LD_GOT_32_6_X
R_HEX_LD_GOT_16_X
R_HEX_LD_GOT_11_X
R_HEX_23_REG
R_HEX_GD_PLT_B22_PCREL_X
R_HEX_GD_PLT_B32_PCREL_X
R_HEX_LD_PLT_B22_PCREL_X
R_HEX_LD_PLT_B32_PCREL_X
R_HEX_27_REG
R_LANAI_NONE
R_LANAI_21
R_LANAI_21_F
R_LANAI_25
R_LANAI_32
R_LANAI_HI16
R_LANAI_LO16
R_PPC_NONE
R_PPC_ADDR32
R_PPC_ADDR24
R_PPC_ADDR16
R_PPC_ADDR16_LO
R_PPC_ADDR16_HI
R_PPC_ADDR16_HA
R_PPC_ADDR14
R_PPC_ADDR14_BRTAKEN
R_PPC_ADDR14_BRNTAKEN
R_PPC_REL24
R_PPC_REL14
R_PPC_REL14_BRTAKEN
R_PPC_REL14_BRNTAKEN
R_PPC_GOT16
R_PPC_GOT16_LO
R_PPC_GOT16_HI
R_PPC_GOT16_HA
R_PPC_PLTREL24
R_PPC_COPY
R_PPC_GLOB_DAT
R_PPC_JMP_SLOT
R_PPC_RELATIVE
R_PPC_LOCAL24PC
R_PPC_UADDR32
R_PPC_UADDR16
R_PPC_REL32
R_PPC_PLT32
R_PPC_PLTREL32
R_PPC_PLT16_LO
R_PPC_PLT16_HI
R_PPC_PLT16_HA
R_PPC_SDAREL16
R_PPC_SECTOFF
R_PPC_SECTOFF_LO
R_PPC_SECTOFF_HI
R_PPC_SECTOFF_HA
R_PPC_ADDR30
R_PPC_TLS
R_PPC_DTPMOD32
R_PPC_TPREL16
R_PPC_TPREL16_LO
R_PPC_TPREL16_HI
R_PPC_TPREL16_HA
R_PPC_TPREL32
R_PPC_DTPREL16
R_PPC_DTPREL16_LO
R_PPC_DTPREL16_HI
R_PPC_DTPREL16_HA
R_PPC_DTPREL32
R_PPC_GOT_TLSGD16
R_PPC_GOT_TLSGD16_LO
R_PPC_GOT_TLSGD16_HI
R_PPC_GOT_TLSGD16_HA
R_PPC_GOT_TLSLD16
R_PPC_GOT_TLSLD16_LO
R_PPC_GOT_TLSLD16_HI
R_PPC_GOT_TLSLD16_HA
R_PPC_GOT_TPREL16
R_PPC_GOT_TPREL16_LO
R_PPC_GOT_TPREL16_HI
R_PPC_GOT_TPREL16_HA
R_PPC_GOT_DTPREL16
R_PPC_GOT_DTPREL16_LO
R_PPC_GOT_DTPREL16_HI
R_PPC_GOT_DTPREL16_HA
R_PPC_TLSGD
R_PPC_TLSLD
R_PPC_IRELATIVE
R_PPC_REL16
R_PPC_REL16_LO
R_PPC_REL16_HI
R_PPC_REL16_HA
R_PPC64_NONE
R_PPC64_ADDR32
R_PPC64_ADDR24
R_PPC64_ADDR16
R_PPC64_ADDR16_LO
R_PPC64_ADDR16_HI
R_PPC64_ADDR16_HA
R_PPC64_ADDR14
R_PPC64_ADDR14_BRTAKEN
R_PPC64_ADDR14_BRNTAKEN
R_PPC64_REL24
R_PPC64_REL14
R_PPC64_REL14_BRTAKEN
R_PPC64_REL14_BRNTAKEN
R_PPC64_GOT16
R_PPC64_GOT16_LO
R_PPC64_GOT16_HI
R_PPC64_GOT16_HA
R_PPC64_COPY
R_PPC64_GLOB_DAT
R_PPC64_JMP_SLOT
R_PPC64_RELATIVE
R_PPC64_REL32
R_PPC64_ADDR64
R_PPC64_ADDR16_HIGHER
R_PPC64_ADDR16_HIGHERA
R_PPC64_ADDR16_HIGHEST
R_PPC64_ADDR16_HIGHESTA
R_PPC64_REL64
R_PPC64_TOC16
R_PPC64_TOC16_LO
R_PPC64_TOC16_HI
R_PPC64_TOC16_HA
R_PPC64_TOC
R_PPC64_ADDR16_DS
R_PPC64_ADDR16_LO_DS
R_PPC64_GOT16_DS
R_PPC64_GOT16_LO_DS
R_PPC64_TOC16_DS
R_PPC64_TOC16_LO_DS
R_PPC64_TLS
R_PPC64_DTPMOD64
R_PPC64_TPREL16
R_PPC64_TPREL16_LO
R_PPC64_TPREL16_HI
R_PPC64_TPREL16_HA
R_PPC64_TPREL64
R_PPC64_DTPREL16
R_PPC64_DTPREL16_LO
R_PPC64_DTPREL16_HI
R_PPC64_DTPREL16_HA
R_PPC64_DTPREL64
R_PPC64_GOT_TLSGD16
R_PPC64_GOT_TLSGD16_LO
R_PPC64_GOT_TLSGD16_HI
R_PPC64_GOT_TLSGD16_HA
R_PPC64_GOT_TLSLD16
R_PPC64_GOT_TLSLD16_LO
R_PPC64_GOT_TLSLD16_HI
R_PPC64_GOT_TLSLD16_HA
R_PPC64_GOT_TPREL16_DS
R_PPC64_GOT_TPREL16_LO_DS
R_PPC64_GOT_TPREL16_HI
R_PPC64_GOT_TPREL16_HA
R_PPC64_GOT_DTPREL16_DS
R_PPC64_GOT_DTPREL16_LO_DS
R_PPC64_GOT_DTPREL16_HI
R_PPC64_GOT_DTPREL16_HA
R_PPC64_TPREL16_DS
R_PPC64_TPREL16_LO_DS
R_PPC64_TPREL16_HIGHER
R_PPC64_TPREL16_HIGHERA
R_PPC64_TPREL16_HIGHEST
R_PPC64_TPREL16_HIGHESTA
R_PPC64_DTPREL16_DS
R_PPC64_DTPREL16_LO_DS
R_PPC64_DTPREL16_HIGHER
R_PPC64_DTPREL16_HIGHERA
R_PPC64_DTPREL16_HIGHEST
R_PPC64_DTPREL16_HIGHESTA
R_PPC64_TLSGD
R_PPC64_TLSLD
R_PPC64_ADDR16_HIGH
R_PPC64_ADDR16_HIGHA
R_PPC64_TPREL16_HIGH
R_PPC64_TPREL16_HIGHA
R_PPC64_DTPREL16_HIGH
R_PPC64_DTPREL16_HIGHA
R_PPC64_REL24_NOTOC
R_PPC64_PCREL_OPT
R_PPC64_PCREL34
R_PPC64_GOT_PCREL34
R_PPC64_TPREL34
R_PPC64_DTPREL34
R_PPC64_GOT_TLSGD_PCREL34
R_PPC64_GOT_TLSLD_PCREL34
R_PPC64_GOT_TPREL_PCREL34
R_PPC64_IRELATIVE
R_PPC64_REL16
R_PPC64_REL16_LO
R_PPC64_REL16_HI
R_PPC64_REL16_HA
R_RISCV_NONE
R_RISCV_32
R_RISCV_64
R_RISCV_RELATIVE
R_RISCV_COPY
R_RISCV_JUMP_SLOT
R_RISCV_TLS_DTPMOD32
R_RISCV_TLS_DTPMOD64
R_RISCV_TLS_DTPREL32
R_RISCV_TLS_DTPREL64
R_RISCV_TLS_TPREL32
R_RISCV_TLS_TPREL64
R_RISCV_BRANCH
R_RISCV_JAL
R_RISCV_CALL
R_RISCV_CALL_PLT
R_RISCV_GOT_HI20
R_RISCV_TLS_GOT_HI20
R_RISCV_TLS_GD_HI20
R_RISCV_PCREL_HI20
R_RISCV_PCREL_LO12_I
R_RISCV_PCREL_LO12_S
R_RISCV_HI20
R_RISCV_LO12_I
R_RISCV_LO12_S
R_RISCV_TPREL_HI20
R_RISCV_TPREL_LO12_I
R_RISCV_TPREL_LO12_S
R_RISCV_TPREL_ADD
R_RISCV_ADD8
R_RISCV_ADD16
R_RISCV_ADD32
R_RISCV_ADD64
R_RISCV_SUB8
R_RISCV_SUB16
R_RISCV_SUB32
R_RISCV_SUB64
R_RISCV_GNU_VTINHERIT
R_RISCV_GNU_VTENTRY
R_RISCV_ALIGN
R_RISCV_RVC_BRANCH
R_RISCV_RVC_JUMP
R_RISCV_RVC_LUI
R_RISCV_GPREL_I
R_RISCV_GPREL_S
R_RISCV_TPREL_I
R_RISCV_TPREL_S
R_RISCV_RELAX
R_RISCV_SUB6
R_RISCV_SET6
R_RISCV_SET8
R_RISCV_SET16
R_RISCV_SET32
R_RISCV_32_PCREL
R_RISCV_IRELATIVE
R_390_NONE
R_390_8
R_390_12
R_390_16
R_390_32
R_390_PC32
R_390_GOT12
R_390_GOT32
R_390_PLT32
R_390_COPY
R_390_GLOB_DAT
R_390_JMP_SLOT
R_390_RELATIVE
R_390_GOTOFF
R_390_GOTPC
R_390_GOT16
R_390_PC16
R_390_PC16DBL
R_390_PLT16DBL
R_390_PC32DBL
R_390_PLT32DBL
R_390_GOTPCDBL
R_390_64
R_390_PC64
R_390_GOT64
R_390_PLT64
R_390_GOTENT
R_390_GOTOFF16
R_390_GOTOFF64
R_390_GOTPLT12
R_390_GOTPLT16
R_390_GOTPLT32
R_390_GOTPLT64
R_390_GOTPLTENT
R_390_PLTOFF16
R_390_PLTOFF32
R_390_PLTOFF64
R_390_TLS_LOAD
R_390_TLS_GDCALL
R_390_TLS_LDCALL
R_390_TLS_GD32
R_390_TLS_GD64
R_390_TLS_GOTIE12
R_390_TLS_GOTIE32
R_390_TLS_GOTIE64
R_390_TLS_LDM32
R_390_TLS_LDM64
R_390_TLS_IE32
R_390_TLS_IE64
R_390_TLS_IEENT
R_390_TLS_LE32
R_390_TLS_LE64
R_390_TLS_LDO32
R_390_TLS_LDO64
R_390_TLS_DTPMOD
R_390_TLS_DTPOFF
R_390_TLS_TPOFF
R_390_20
R_390_GOT20
R_390_GOTPLT20
R_390_TLS_GOTIE20
R_390_IRELATIVE
R_390_PC12DBL
R_390_PLT12DBL
R_390_PC24DBL
R_390_PLT24DBL
R_SPARC_NONE
R_SPARC_8
R_SPARC_16
R_SPARC_32
R_SPARC_DISP8
R_SPARC_DISP16
R_SPARC_DISP32
R_SPARC_WDISP30
R_SPARC_WDISP22
R_SPARC_HI22
R_SPARC_22
R_SPARC_13
R_SPARC_LO10
R_SPARC_GOT10
R_SPARC_GOT13
R_SPARC_GOT22
R_SPARC_PC10
R_SPARC_PC22
R_SPARC_WPLT30
R_SPARC_COPY
R_SPARC_GLOB_DAT
R_SPARC_JMP_SLOT
R_SPARC_RELATIVE
R_SPARC_UA32
R_SPARC_PLT32
R_SPARC_HIPLT22
R_SPARC_LOPLT10
R_SPARC_PCPLT32
R_SPARC_PCPLT22
R_SPARC_PCPLT10
R_SPARC_10
R_SPARC_11
R_SPARC_64
R_SPARC_OLO10
R_SPARC_HH22
R_SPARC_HM10
R_SPARC_LM22
R_SPARC_PC_HH22
R_SPARC_PC_HM10
R_SPARC_PC_LM22
R_SPARC_WDISP16
R_SPARC_WDISP19
R_SPARC_7
R_SPARC_5
R_SPARC_6
R_SPARC_DISP64
R_SPARC_PLT64
R_SPARC_HIX22
R_SPARC_LOX10
R_SPARC_H44
R_SPARC_M44
R_SPARC_L44
R_SPARC_REGISTER
R_SPARC_UA64
R_SPARC_UA16
R_SPARC_TLS_GD_HI22
R_SPARC_TLS_GD_LO10
R_SPARC_TLS_GD_ADD
R_SPARC_TLS_GD_CALL
R_SPARC_TLS_LDM_HI22
R_SPARC_TLS_LDM_LO10
R_SPARC_TLS_LDM_ADD
R_SPARC_TLS_LDM_CALL
R_SPARC_TLS_LDO_HIX22
R_SPARC_TLS_LDO_LOX10
R_SPARC_TLS_LDO_ADD
R_SPARC_TLS_IE_HI22
R_SPARC_TLS_IE_LO10
R_SPARC_TLS_IE_LD
R_SPARC_TLS_IE_LDX
R_SPARC_TLS_IE_ADD
R_SPARC_TLS_LE_HIX22
R_SPARC_TLS_LE_LOX10
R_SPARC_TLS_DTPMOD32
R_SPARC_TLS_DTPMOD64
R_SPARC_TLS_DTPOFF32
R_SPARC_TLS_DTPOFF64
R_SPARC_TLS_TPOFF32
R_SPARC_TLS_TPOFF64
R_SPARC_GOTDATA_HIX22
R_SPARC_GOTDATA_LOX10
R_SPARC_GOTDATA_OP_HIX22
R_SPARC_GOTDATA_OP_LOX10
R_SPARC_GOTDATA_OP
R_AMDGPU_NONE
R_AMDGPU_ABS32_LO
R_AMDGPU_ABS32_HI
R_AMDGPU_ABS64
R_AMDGPU_REL32
R_AMDGPU_REL64
R_AMDGPU_ABS32
R_AMDGPU_GOTPCREL
R_AMDGPU_GOTPCREL32_LO
R_AMDGPU_GOTPCREL32_HI
R_AMDGPU_REL32_LO
R_AMDGPU_REL32_HI
R_AMDGPU_RELATIVE64
R_BPF_NONE
R_BPF_64_64
R_BPF_64_32
R_MSP430_NONE
R_MSP430_32
R_MSP430_10_PCREL
R_MSP430_16
R_MSP430_16_PCREL
R_MSP430_16_BYTE
R_MSP430_16_PCREL_BYTE
R_MSP430_2X_PCREL
R_MSP430_RL_PCREL
R_MSP430_8
R_MSP430_SYM_DIFF
R_VE_NONE
R_VE_REFLONG
R_VE_REFQUAD
R_VE_SREL32
R_VE_HI32
R_VE_LO32
R_VE_PC_HI32
R_VE_PC_LO32
R_VE_GOT32
R_VE_GOT_HI32
R_VE_GOT_LO32
R_VE_GOTOFF32
R_VE_GOTOFF_HI32
R_VE_GOTOFF_LO32
R_VE_PLT32
R_VE_PLT_HI32
R_VE_PLT_LO32
R_VE_RELATIVE
R_VE_GLOB_DAT
R_VE_JUMP_SLOT
R_VE_COPY
R_VE_DTPMOD64
R_VE_DTPOFF64
R_VE_TLS_GD_HI32
R_VE_TLS_GD_LO32
R_VE_TPOFF_HI32
R_VE_TPOFF_LO32
R_VE_CALL_HI32
R_VE_CALL_LO32
R_CKCORE_NONE
R_CKCORE_ADDR32
R_CKCORE_PCREL_IMM8_4
R_CKCORE_PCREL_IMM11_2
R_CKCORE_PCREL_IMM4_2
R_CKCORE_PCREL32
R_CKCORE_PCREL_JSR_IMM11_2
R_CKCORE_GNU_VTINHERIT
R_CKCORE_GNU_VTENTRY
R_CKCORE_RELATIVE
R_CKCORE_COPY
R_CKCORE_GLOB_DAT
R_CKCORE_JUMP_SLOT
R_CKCORE_GOTOFF
R_CKCORE_GOTPC
R_CKCORE_GOT32
R_CKCORE_PLT32
R_CKCORE_ADDRGOT
R_CKCORE_ADDRPLT
R_CKCORE_PCREL_IMM26_2
R_CKCORE_PCREL_IMM16_2
R_CKCORE_PCREL_IMM16_4
R_CKCORE_PCREL_IMM10_2
R_CKCORE_PCREL_IMM10_4
R_CKCORE_ADDR_HI16
R_CKCORE_ADDR_LO16
R_CKCORE_GOTPC_HI16
R_CKCORE_GOTPC_LO16
R_CKCORE_GOTOFF_HI16
R_CKCORE_GOTOFF_LO16
R_CKCORE_GOT12
R_CKCORE_GOT_HI16
R_CKCORE_GOT_LO16
R_CKCORE_PLT12
R_CKCORE_PLT_HI16
R_CKCORE_PLT_LO16
R_CKCORE_ADDRGOT_HI16
R_CKCORE_ADDRGOT_LO16
R_CKCORE_ADDRPLT_HI16
R_CKCORE_ADDRPLT_LO16
R_CKCORE_PCREL_JSR_IMM26_2
R_CKCORE_TOFFSET_LO16
R_CKCORE_DOFFSET_LO16
R_CKCORE_PCREL_IMM18_2
R_CKCORE_DOFFSET_IMM18
R_CKCORE_DOFFSET_IMM18_2
R_CKCORE_DOFFSET_IMM18_4
R_CKCORE_GOTOFF_IMM18
R_CKCORE_GOT_IMM18_4
R_CKCORE_PLT_IMM18_4
R_CKCORE_PCREL_IMM7_4
R_CKCORE_TLS_LE32
R_CKCORE_TLS_IE32
R_CKCORE_TLS_GD32
R_CKCORE_TLS_LDM32
R_CKCORE_TLS_LDO32
R_CKCORE_TLS_DTPMOD32
R_CKCORE_TLS_DTPOFF32
R_CKCORE_TLS_TPOFF32
R_CKCORE_PCREL_FLRW_IMM8_4
R_CKCORE_NOJSRI
R_CKCORE_CALLGRAPH
R_CKCORE_IRELATIVE
R_CKCORE_PCREL_BLOOP_IMM4_4
R_CKCORE_PCREL_BLOOP_IMM12_4
R_CKCORE_PCREL_VLRW_IMM12_1
R_CKCORE_PCREL_VLRW_IMM12_2
R_CKCORE_PCREL_VLRW_IMM12_4
R_CKCORE_PCREL_VLRW_IMM12_8
Unknown
SHT_ARM_EXIDX
SHT_ARM_PREEMPTMAP
SHT_ARM_ATTRIBUTES
SHT_ARM_DEBUGOVERLAY
SHT_ARM_OVERLAYSECTION
SHT_HEX_ORDERED
SHT_X86_64_UNWIND
SHT_MIPS_REGINFO
SHT_MIPS_OPTIONS
SHT_MIPS_DWARF
SHT_MIPS_ABIFLAGS
SHT_RISCV_ATTRIBUTES
SHT_NULL
SHT_PROGBITS
SHT_SYMTAB
SHT_STRTAB
SHT_RELA
SHT_HASH
SHT_DYNAMIC
SHT_NOTE
SHT_NOBITS
SHT_REL
SHT_SHLIB
SHT_DYNSYM
SHT_INIT_ARRAY
SHT_FINI_ARRAY
SHT_PREINIT_ARRAY
SHT_GROUP
SHT_SYMTAB_SHNDX
SHT_RELR
SHT_ANDROID_REL
SHT_ANDROID_RELA
SHT_ANDROID_RELR
SHT_LLVM_ODRTAB
SHT_LLVM_LINKER_OPTIONS
SHT_LLVM_CALL_GRAPH_PROFILE
SHT_LLVM_ADDRSIG
SHT_LLVM_DEPENDENT_LIBRARIES
SHT_LLVM_SYMPART
SHT_LLVM_PART_EHDR
SHT_LLVM_PART_PHDR
SHT_LLVM_BB_ADDR_MAP
SHT_GNU_ATTRIBUTES
SHT_GNU_HASH
SHT_GNU_verdef
SHT_GNU_verneed
SHT_GNU_versym
invalid sh_type for string table section 
: expected SHT_STRTAB, but got 
SHT_STRTAB string table section 
 is empty
 is non-null terminated
SHT_SYMTAB_SHNDX section is linked with 
 section (expected SHT_SYMTAB/SHT_DYNSYM)
SHT_SYMTAB_SHNDX has 
 entries, but the symbol table associated has 
invalid e_shentsize in ELF header: 
section header table goes past the end of the file: e_shoff = 0x
invalid number of sections specified in the NULL section's sh_size field (
invalid section header table offset (e_shoff = 0x
) or invalid number of sections specified in the first section header's sh_size field (0x
section table goes past the end of file
e_shstrndx == SHN_XINDEX, but the section header table is empty
section header string table index 
 does not exist
a section 
 has an invalid sh_name (0x
) offset which goes past the end of the section name string table
) that cannot be represented
) that is greater than the file size (0x
[index 
section 
 has invalid sh_entsize: expected 
, but got 
 has an invalid sh_size (
) which is not a multiple of its sh_entsize (
 has a sh_offset (0x
) + sh_size (0x
invalid section index: 
can't read an entry at 0x
: it goes past the end of the section (0x
extended symbol index (
) is past the end of the SHT_SYMTAB_SHNDX section of size 
Insufficient alignment
Invalid ELF data
Invalid ELF class
mips2
mips3
mips4
mips5
cnmips
aclass
rclass
hwdiv
mclass
thumb2
vfp2sp
vfp3d16sp
vfp4d16sp
vfp2
vfp3
vfp4
hwdiv-arm
r630
rv670
rv710
rv730
juniper
redwood
barts
caicos
turks
gfx600
gfx601
gfx602
gfx700
gfx701
gfx702
gfx703
gfx704
gfx705
gfx801
gfx802
gfx803
gfx805
gfx810
gfx900
gfx902
gfx904
gfx906
gfx908
gfx909
gfx90c
gfx1010
gfx1011
gfx1012
gfx1030
gfx1031
gfx1032
gfx1033
v5tej
v6kz
v6t2
v7em
v8m.main
v8.1m.main
aeabi
riscv
invalid buffer: the size (
) is smaller than an ELF header (
st_name (0x%x) is past the end of the string table of size 0x%zx
elf32-i386
elf32-iamcu
elf32-x86-64
elf32-littlearm
elf32-bigarm
elf32-avr
elf32-hexagon
elf32-lanai
elf32-mips
elf32-msp430
elf32-powerpcle
elf32-powerpc
elf32-littleriscv
elf32-csky
elf32-sparc
elf32-amdgpu
elf32-unknown
elf64-i386
elf64-x86-64
elf64-littleaarch64
elf64-bigaarch64
elf64-powerpcle
elf64-powerpc
elf64-littleriscv
elf64-s390
elf64-sparc
elf64-mips
elf64-amdgpu
elf64-bpf
elf64-ve
elf64-unknown
Invalid ELFCLASS!
Section is not SHT_RELA
llvm.object
No object file for requested architecture
The file was not recognized as a valid object file
Invalid data was encountered while parsing the file
The end of the file was unexpectedly encountered
String table must end with a null terminator
Invalid section index
Bitcode section not found in object file
Invalid symbol index
LLVM_OVERRIDE_PRODUCER
input module has no datalayout
Only variables can have common linkage!
Unable to determine comdat of alias!
Invalid weak external
__ashlhi3
__ashlsi3
__ashldi3
__ashlti3
__lshrhi3
__lshrsi3
__lshrdi3
__lshrti3
__ashrhi3
__ashrsi3
__ashrdi3
__ashrti3
__mulqi3
__mulhi3
__mulsi3
__muldi3
__multi3
__mulosi4
__mulodi4
__muloti4
__divqi3
__divhi3
__divsi3
__divdi3
__divti3
__udivqi3
__udivhi3
__udivsi3
__udivdi3
__udivti3
__modqi3
__modhi3
__modsi3
__moddi3
__modti3
__umodqi3
__umodhi3
__umodsi3
__umoddi3
__umodti3
__negsi2
__negdi2
__addsf3
__adddf3
__addxf3
__addtf3
__gcc_qadd
__subsf3
__subdf3
__subxf3
__subtf3
__gcc_qsub
__mulsf3
__muldf3
__mulxf3
__multf3
__gcc_qmul
__divsf3
__divdf3
__divxf3
__divtf3
__gcc_qdiv
fmodl
fmaf
fmal
__powisf2
__powidf2
__powixf2
__powitf2
cbrtf
cbrt
cbrtl
logl
__logl_finite
log2l
__log2f_finite
__log2_finite
__log2l_finite
log10l
__log10l_finite
expl
__expl_finite
__exp2l_finite
__powl_finite
ceill
truncl
rintl
nearbyintl
roundl
roundevenf
roundeven
roundevenl
floorl
lroundf
lround
lroundl
llroundf
llround
llroundl
lrintf
lrint
lrintl
llrintf
llrint
llrintl
__gcc_stoq
__gcc_dtoq
__extendxftf2
__extenddftf2
__extendsftf2
__extendhftf2
__extendsfdf2
__extendhfdf2
__gnu_h2f_ieee
__gnu_f2h_ieee
__truncdfhf2
__truncxfhf2
__trunctfhf2
__truncdfsf2
__truncxfsf2
__trunctfsf2
__gcc_qtos
__truncxfdf2
__trunctfdf2
__gcc_qtod
__trunctfxf2
__fixhfsi
__fixhfdi
__fixhfti
__fixsfsi
__fixsfdi
__fixsfti
__fixdfsi
__fixdfdi
__fixdfti
__fixxfsi
__fixxfdi
__fixxfti
__fixtfsi
__fixtfdi
__fixtfti
__gcc_qtou
__fixunshfsi
__fixunshfdi
__fixunshfti
__fixunssfsi
__fixunssfdi
__fixunssfti
__fixunsdfsi
__fixunsdfdi
__fixunsdfti
__fixunsxfsi
__fixunsxfdi
__fixunsxfti
__fixunstfsi
__fixunstfdi
__fixunstfti
__floatsihf
__floatsisf
__floatsidf
__floatsixf
__floatsitf
__gcc_itoq
__floatdihf
__floatdisf
__floatdidf
__floatdixf
__floatditf
__floattihf
__floattisf
__floattidf
__floattixf
__floattitf
__floatunsihf
__floatunsisf
__floatunsidf
__floatunsixf
__floatunsitf
__gcc_utoq
__floatundihf
__floatundisf
__floatundidf
__floatundixf
__floatunditf
__floatuntihf
__floatuntisf
__floatuntidf
__floatuntixf
__floatuntitf
__eqsf2
__eqdf2
__eqtf2
__gcc_qeq
__nesf2
__nedf2
__netf2
__gcc_qne
__gesf2
__gedf2
__getf2
__gcc_qge
__ltsf2
__ltdf2
__lttf2
__gcc_qlt
__lesf2
__ledf2
__letf2
__gcc_qle
__gtsf2
__gtdf2
__gttf2
__gcc_qgt
__unordsf2
__unorddf2
__unordtf2
__gcc_qunord
__llvm_memcpy_element_unordered_atomic_1
__llvm_memcpy_element_unordered_atomic_2
__llvm_memcpy_element_unordered_atomic_4
__llvm_memcpy_element_unordered_atomic_8
__llvm_memcpy_element_unordered_atomic_16
__llvm_memmove_element_unordered_atomic_1
__llvm_memmove_element_unordered_atomic_2
__llvm_memmove_element_unordered_atomic_4
__llvm_memmove_element_unordered_atomic_8
__llvm_memmove_element_unordered_atomic_16
__llvm_memset_element_unordered_atomic_1
__llvm_memset_element_unordered_atomic_2
__llvm_memset_element_unordered_atomic_4
__llvm_memset_element_unordered_atomic_8
__llvm_memset_element_unordered_atomic_16
_Unwind_Resume
__sync_val_compare_and_swap_1
__sync_val_compare_and_swap_2
__sync_val_compare_and_swap_4
__sync_val_compare_and_swap_8
__sync_val_compare_and_swap_16
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_fetch_and_add_1
__sync_fetch_and_add_2
__sync_fetch_and_add_4
__sync_fetch_and_add_8
__sync_fetch_and_add_16
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_sub_16
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_and_16
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_or_16
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__sync_fetch_and_xor_16
__sync_fetch_and_nand_1
__sync_fetch_and_nand_2
__sync_fetch_and_nand_4
__sync_fetch_and_nand_8
__sync_fetch_and_nand_16
__sync_fetch_and_max_1
__sync_fetch_and_max_2
__sync_fetch_and_max_4
__sync_fetch_and_max_8
__sync_fetch_and_max_16
__sync_fetch_and_umax_1
__sync_fetch_and_umax_2
__sync_fetch_and_umax_4
__sync_fetch_and_umax_8
__sync_fetch_and_umax_16
__sync_fetch_and_min_1
__sync_fetch_and_min_2
__sync_fetch_and_min_4
__sync_fetch_and_min_8
__sync_fetch_and_min_16
__sync_fetch_and_umin_1
__sync_fetch_and_umin_2
__sync_fetch_and_umin_4
__sync_fetch_and_umin_8
__sync_fetch_and_umin_16
__atomic_load_1
__atomic_load_2
__atomic_load_4
__atomic_load_8
__atomic_load_16
__atomic_store_1
__atomic_store_2
__atomic_store_4
__atomic_store_8
__atomic_store_16
__atomic_exchange_1
__atomic_exchange_2
__atomic_exchange_4
__atomic_exchange_8
__atomic_exchange_16
__atomic_compare_exchange_1
__atomic_compare_exchange_2
__atomic_compare_exchange_4
__atomic_compare_exchange_8
__atomic_compare_exchange_16
__atomic_fetch_add_1
__atomic_fetch_add_2
__atomic_fetch_add_4
__atomic_fetch_add_8
__atomic_fetch_add_16
__atomic_fetch_sub_1
__atomic_fetch_sub_2
__atomic_fetch_sub_4
__atomic_fetch_sub_8
__atomic_fetch_sub_16
__atomic_fetch_and_1
__atomic_fetch_and_2
__atomic_fetch_and_4
__atomic_fetch_and_8
__atomic_fetch_and_16
__atomic_fetch_or_1
__atomic_fetch_or_2
__atomic_fetch_or_4
__atomic_fetch_or_8
__atomic_fetch_or_16
__atomic_fetch_xor_1
__atomic_fetch_xor_2
__atomic_fetch_xor_4
__atomic_fetch_xor_8
__atomic_fetch_xor_16
__atomic_fetch_nand_1
__atomic_fetch_nand_2
__atomic_fetch_nand_4
__atomic_fetch_nand_8
__atomic_fetch_nand_16
Could not find leader
load commands extend past the end of the file
universal header architecture: 
's cputype does not match object file's mach header
Mach-O headers
load command 
 cmdsize not a multiple of 8
 cmdsize not a multiple of 4
LC_DATA_IN_CODE
data in code info
LC_LINKER_OPTIMIZATION_HINT
linker optimization hints
LC_FUNCTION_STARTS
function starts data
LC_SEGMENT_SPLIT_INFO
split info data
LC_DYLIB_CODE_SIGN_DRS
code signing RDs data
LC_CODE_SIGNATURE
code signature data
LC_DYLD_INFO
LC_DYLD_INFO_ONLY
LC_DYLD_EXPORTS_TRIE
export trie
LC_DYLD_CHAINED_FIXUPS
chained fixups
LC_UUID command 
 has incorrect cmdsize
more than one LC_UUID command
LC_SEGMENT_64
LC_SEGMENT
LC_LOAD_DYLIB
LC_LOAD_WEAK_DYLIB
LC_LAZY_LOAD_DYLIB
LC_REEXPORT_DYLIB
LC_LOAD_UPWARD_DYLIB
LC_ID_DYLINKER
LC_LOAD_DYLINKER
LC_DYLD_ENVIRONMENT
LC_VERSION_MIN_MACOSX
LC_VERSION_MIN_IPHONEOS
LC_VERSION_MIN_TVOS
LC_VERSION_MIN_WATCHOS
LC_SOURCE_VERSION command 
more than one LC_SOURCE_VERSION command
LC_MAIN command 
more than one LC_MAIN command
LC_ENCRYPTION_INFO command 
LC_ENCRYPTION_INFO
LC_ENCRYPTION_INFO_64 command 
LC_ENCRYPTION_INFO_64
 LC_SUB_FRAMEWORK cmdsize too small
LC_SUB_FRAMEWORK
sub_framework_command
umbrella
 LC_SUB_UMBRELLA cmdsize too small
LC_SUB_UMBRELLA
sub_umbrella_command
sub_umbrella
 LC_SUB_LIBRARY cmdsize too small
LC_SUB_LIBRARY
sub_library_command
sub_library
 LC_SUB_CLIENT cmdsize too small
LC_SUB_CLIENT
sub_client_command
client
LC_ROUTINES command 
more than one LC_ROUTINES and or LC_ROUTINES_64 command
LC_ROUTINES_64 command 
more than one LC_ROUTINES_64 and or LC_ROUTINES command
LC_UNIXTHREAD
more than one LC_UNIXTHREAD command
LC_THREAD
 for cmd value of: 
 is obsolete and not supported
MH_SIM_SUPPORT files only support LC_BUILD_VERSION and LC_VERSION_MIN_MACOSX load commands
LC_BUILD_VERSION and some LC_VERSION_MIN load command also found
contains LC_DYSYMTAB load command without a LC_SYMTAB load command
ilocalsym in LC_DYSYMTAB load command extends past the end of the symbol table
ilocalsym plus nlocalsym in LC_DYSYMTAB load command extends past the end of the symbol table
iextdefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iextdefsym plus nextdefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iundefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iundefsym plus nundefsym in LC_DYSYMTAB load  command extends past the end of the symbol table
no LC_ID_DYLIB load command in dynamic library filetype
bad section index: 
 for symbol at index 
bad string index: 
__swift_ast
GENERIC_RELOC_VANILLA
GENERIC_RELOC_PAIR
GENERIC_RELOC_SECTDIFF
GENERIC_RELOC_PB_LA_PTR
GENERIC_RELOC_LOCAL_SECTDIFF
GENERIC_RELOC_TLV
X86_64_RELOC_UNSIGNED
X86_64_RELOC_SIGNED
X86_64_RELOC_BRANCH
X86_64_RELOC_GOT_LOAD
X86_64_RELOC_GOT
X86_64_RELOC_SUBTRACTOR
X86_64_RELOC_SIGNED_1
X86_64_RELOC_SIGNED_2
X86_64_RELOC_SIGNED_4
X86_64_RELOC_TLV
ARM_RELOC_VANILLA
ARM_RELOC_PAIR
ARM_RELOC_SECTDIFF
ARM_RELOC_LOCAL_SECTDIFF
ARM_RELOC_PB_LA_PTR
ARM_RELOC_BR24
ARM_THUMB_RELOC_BR22
ARM_THUMB_32BIT_BRANCH
ARM_RELOC_HALF
ARM_RELOC_HALF_SECTDIFF
ARM64_RELOC_UNSIGNED
ARM64_RELOC_SUBTRACTOR
ARM64_RELOC_BRANCH26
ARM64_RELOC_PAGE21
ARM64_RELOC_PAGEOFF12
ARM64_RELOC_GOT_LOAD_PAGE21
ARM64_RELOC_GOT_LOAD_PAGEOFF12
ARM64_RELOC_POINTER_TO_GOT
ARM64_RELOC_TLVP_LOAD_PAGE21
ARM64_RELOC_TLVP_LOAD_PAGEOFF12
ARM64_RELOC_ADDEND
ARM64_RELOC_AUTHENTICATED_POINTER
PPC_RELOC_VANILLA
PPC_RELOC_PAIR
PPC_RELOC_BR14
PPC_RELOC_BR24
PPC_RELOC_HI16
PPC_RELOC_LO16
PPC_RELOC_HA16
PPC_RELOC_LO14
PPC_RELOC_SECTDIFF
PPC_RELOC_PB_LA_PTR
PPC_RELOC_HI16_SECTDIFF
PPC_RELOC_LO16_SECTDIFF
PPC_RELOC_HA16_SECTDIFF
PPC_RELOC_JBSR
PPC_RELOC_LO14_SECTDIFF
PPC_RELOC_LOCAL_SECTDIFF
Requested symbol index is out of range.
getSymbolIndex() called with no symbol table symbol
Mach-O 32-bit i386
Mach-O arm
Mach-O arm64 (ILP32)
Mach-O 32-bit ppc
Mach-O 32-bit unknown
Mach-O 64-bit x86-64
Mach-O arm64
Mach-O 64-bit ppc64
Mach-O 64-bit unknown
 extends past end of file
Unrecognized MachO magic number
debug_str_offsets
truncated or malformed object (
load command 0 extends past the end all load commands in the file
 with size less than 8 bytes
Structure read out-of-range
 LC_SYMTAB cmdsize too small
more than one LC_SYMTAB command
LC_SYMTAB command 
symoff field of LC_SYMTAB command 
 extends past the end of the file
struct nlist_64
struct nlist
symoff field plus nsyms field times sizeof(
) of LC_SYMTAB command 
symbol table
stroff field of LC_SYMTAB command 
stroff field plus strsize field of LC_SYMTAB command 
string table
 with a size of 
, overlaps 
 LC_DYSYMTAB cmdsize too small
more than one LC_DYSYMTAB command
LC_DYSYMTAB command 
tocoff field of LC_DYSYMTAB command 
tocoff field plus ntoc field times sizeof(struct dylib_table_of_contents) of LC_DYSYMTAB command 
table of contents
modtaboff field of LC_DYSYMTAB command 
struct dylib_module_64
struct dylib_module
modtaboff field plus nmodtab field times sizeof(
) of LC_DYSYMTAB command 
module table
extrefsymoff field of LC_DYSYMTAB command 
extrefsymoff field plus nextrefsyms field times sizeof(struct dylib_reference) of LC_DYSYMTAB command 
reference table
indirectsymoff field of LC_DYSYMTAB command 
indirectsymoff field plus nindirectsyms field times sizeof(uint32_t) of LC_DYSYMTAB command 
indirect table
extreloff field of LC_DYSYMTAB command 
extreloff field plus nextrel field times sizeof(struct relocation_info) of LC_DYSYMTAB command 
external relocation table
locreloff field of LC_DYSYMTAB command 
locreloff field plus nlocrel field times sizeof(struct relocation_info) of LC_DYSYMTAB command 
local relocation table
 cmdsize too small
more than one 
 command
 command 
dataoff field of 
dataoff field plus datasize field of 
more than one LC_DYLD_INFO and or LC_DYLD_INFO_ONLY command
rebase_off field of 
rebase_off field plus rebase_size field of 
dyld rebase info
bind_off field of 
bind_off field plus bind_size field of 
dyld bind info
weak_bind_off field of 
weak_bind_off field plus weak_bind_size field of 
dyld weak bind info
lazy_bind_off field of 
lazy_bind_off field plus lazy_bind_size field of 
dyld lazy bind info
export_off field of 
export_off field plus export_size field of 
dyld export info
LC_ID_DYLIB
more than one LC_ID_DYLIB command
LC_ID_DYLIB load command in non-dynamic library file type
 name.offset field too small, not past the end of the dylib_command struct
 name.offset field extends past the end of the load command
 library name extends past the end of the load command
 name.offset field too small, not past the end of the dylinker_command struct
 dyld name extends past the end of the load command
more than one LC_VERSION_MIN_MACOSX, LC_VERSION_MIN_IPHONEOS, LC_VERSION_MIN_TVOS or LC_VERSION_MIN_WATCHOS command
 LC_NOTE has incorrect cmdsize
offset field of LC_NOTE command 
size field plus offset field of LC_NOTE command 
LC_NOTE data
 LC_BUILD_VERSION_COMMAND has incorrect cmdsize
more than two LC_BUILD_VERSION load commands
the LC_BUILD_VERSION, command 
, platform value is not allowed when the mach header flag MH_SIM_SUPPORT is set
the two LC_BUILD_VERSION load commands are not for the platforms MACOS and MACCATALYST
 LC_RPATH cmdsize too small
 LC_RPATH path.offset field too small, not past the end of the rpath_command struct
 LC_RPATH path.offset field extends past the end of the load command
 LC_RPATH library name extends past the end of the load command
more than one LC_ENCRYPTION_INFO and or LC_ENCRYPTION_INFO_64 command
cryptoff field of 
cryptoff field plus cryptsize field of 
 LC_LINKER_OPTION cmdsize too small
 LC_LINKER_OPTION string #
 is not NULL terminated
 LC_LINKER_OPTION string count 
 does not match number of strings
.offset field too small, not past the end of the 
.offset field extends past the end of the load command
 name extends past the end of the load command
flavor in 
 extends past end of command
 count in 
 count not x86_THREAD_STATE32_COUNT for flavor number 
 which is a x86_THREAD_STATE32 flavor in 
 x86_THREAD_STATE32 extends past end of command in 
 unknown flavor (
) for flavor number 
 count not x86_THREAD_STATE_COUNT for flavor number 
 which is a x86_THREAD_STATE flavor in 
 x86_THREAD_STATE extends past end of command in 
 count not x86_FLOAT_STATE_COUNT for flavor number 
 which is a x86_FLOAT_STATE flavor in 
 x86_FLOAT_STATE extends past end of command in 
 count not x86_EXCEPTION_STATE_COUNT for flavor number 
 which is a x86_EXCEPTION_STATE flavor in 
 x86_EXCEPTION_STATE extends past end of command in 
 count not x86_THREAD_STATE64_COUNT for flavor number 
 which is a x86_THREAD_STATE64 flavor in 
 x86_THREAD_STATE64 extends past end of command in 
 count not x86_EXCEPTION_STATE64_COUNT for flavor number 
 which is a x86_EXCEPTION_STATE64 flavor in 
 x86_EXCEPTION_STATE64 extends past end of command in 
 count not ARM_THREAD_STATE_COUNT for flavor number 
 which is a ARM_THREAD_STATE flavor in 
 ARM_THREAD_STATE extends past end of command in 
 count not ARM_THREAD_STATE64_COUNT for flavor number 
 which is a ARM_THREAD_STATE64 flavor in 
 ARM_THREAD_STATE64 extends past end of command in 
 count not ARM_EXCEPTION_STATE64_COUNT for flavor number 
 which is a ARM_EXCEPTION_STATE64 flavor in 
 ARM_EXCEPTION_STATE64 extends past end of command in 
 count not PPC_THREAD_STATE_COUNT for flavor number 
 which is a PPC_THREAD_STATE flavor in 
 PPC_THREAD_STATE extends past end of command in 
unknown cputype (
) load command 
 command can't be checked
 LC_TWOLEVEL_HINTS has incorrect cmdsize
more than one LC_TWOLEVEL_HINTS command
offset field of LC_TWOLEVEL_HINTS command 
offset field plus nhints times sizeof(struct twolevel_hint) field of LC_TWOLEVEL_HINTS command 
two level hints
 extends past the end all load commands in the file
Malformed MachO file.
the mach header extends past the end of the file
 inconsistent cmdsize in 
 for the number of sections
offset field of section 
 not past the headers of the file
offset field plus size field of section 
size field of section 
 greater than the segment
addr field of section 
 less than the segment's vmaddr
addr field plus size of section 
 greater than than the segment's vmaddr plus vmsize
section contents
reloff field of section 
reloff field plus nreloc field times sizeof(struct relocation_info) of section 
section relocation entries
 fileoff field in 
 fileoff field plus filesize field in 
 filesize field in 
 greater than vmsize field
__imp_
Bad magic number
Missing version number
Bad version number
Invalid section type: 
dylink section ended prematurely
Names must come after code section
Function named more than once
Invalid name entry
Global named more than once
Segment named more than once
Invalid named data segment
Name sub-section ended prematurely
Name section ended prematurely
Linking data must come after code section
Unexpected metadata version: 
 (Expected: 
Too many segment names
Invalid function symbol: 
Linking sub-section ended prematurely
Linking section ended prematurely
invalid function symbol index
invalid global symbol index
undefined weak global symbol
invalid table symbol index
undefined weak table symbol
invalid data symbol index
invalid data symbol offset
Section symbols must have local binding
invalid event symbol index
Invalid symbol type
Duplicate symbol name 
Bad/duplicate COMDAT name 
Unsupported COMDAT flags
Invalid COMDAT entry type
COMDAT data index out of range
Data segment in two COMDATs
COMDAT function index out of range
Function in two COMDATs
COMDAT section index out of range
Non-custom section in a COMDAT
Producers section does not have unique fields
Producers section field is not named one of language, processed-by, or sdk
Producers section contains repeated producer
Producers section ended prematurely
Unknown feature policy prefix
Target features section contains repeated feature "
Target features section ended prematurely
Relocations not in offset order
Bad relocation function index
Bad relocation table index
Bad relocation type index
Bad relocation global index
Bad relocation event index
Bad relocation data index
Bad relocation section index
Bad relocation type: 
Bad relocation offset
Reloc section ended prematurely
Invalid signature type
Type section ended prematurely
Invalid table element type
Unexpected import kind
Import section ended prematurely
Invalid function type
Function section ended prematurely
Table section ended prematurely
Memory section ended prematurely
Event section ended prematurely
Global section ended prematurely
Invalid function export
Invalid global export
Invalid event export
Unexpected export kind
Export section ended prematurely
Invalid start function
Invalid function count
Code section ended prematurely
Invalid TableIndex
Elem section ended prematurely
Number of data segments does not match DataCount section
Invalid segment size
Data section ended prematurely
TYPE
IMPORT
FUNCTION
TABLE
MEMORY
GLOBAL
EVENT
EXPORT
START
ELEM
CODE
DATA
DATACOUNT
R_WASM_FUNCTION_INDEX_LEB
R_WASM_TABLE_INDEX_SLEB
R_WASM_TABLE_INDEX_I32
R_WASM_MEMORY_ADDR_LEB
R_WASM_MEMORY_ADDR_SLEB
R_WASM_MEMORY_ADDR_I32
R_WASM_TYPE_INDEX_LEB
R_WASM_GLOBAL_INDEX_LEB
R_WASM_FUNCTION_OFFSET_I32
R_WASM_SECTION_OFFSET_I32
R_WASM_EVENT_INDEX_LEB
R_WASM_MEMORY_ADDR_REL_SLEB
R_WASM_TABLE_INDEX_REL_SLEB
R_WASM_GLOBAL_INDEX_I32
R_WASM_MEMORY_ADDR_LEB64
R_WASM_MEMORY_ADDR_SLEB64
R_WASM_MEMORY_ADDR_I64
R_WASM_MEMORY_ADDR_REL_SLEB64
R_WASM_TABLE_INDEX_SLEB64
R_WASM_TABLE_INDEX_I64
R_WASM_TABLE_NUMBER_LEB
R_WASM_MEMORY_ADDR_TLS_SLEB
R_WASM_FUNCTION_OFFSET_I64
WASM
Zero length section
Section too large
Out of order section type: 
LEB is outside Varuint32 range
malformed uleb128, extends past end
uleb128 too big for uint64
EOF while reading string
EOF while reading uint8
LEB is outside Varint32 range
malformed sleb128, extends past end
LEB is outside Varuint1 range
Invalid type for ref.null
Invalid opcode in init_expr
Invalid init_expr
EOF while reading float64
Bad offset for string table entry
Unimplemented Debug Name
64-bit support not implemented yet
aix5coff64-rs6000
aixcoff-rs6000
print-summary-global-ids
Print the global id for each value when reading the module summary
Malformed block
Invalid bitcode signature
Invalid bitcode wrapper header
file too small to contain bitcode header
file doesn't start with bitcode header
Invalid value
Incompatible epoch: Bitcode '
' vs current: '
Could not find function in stream
Trying to materialize functions before seeing function blocks
Expect SubBlock
Expect function block
 (Producer: '
' Reader: 'LLVM 
Insufficient function protos
Invalid function metadata: incoming forward references
Invalid record
Invalid ID
Invalid cast
Explicit gep type does not match pointee type of pointer operand
EXTRACTVAL: Invalid instruction with 0 indices
EXTRACTVAL: Invalid type
EXTRACTVAL: Invalid struct index
EXTRACTVAL: Invalid array index
INSERTVAL: Invalid instruction with 0 indices
INSERTVAL: Invalid type
INSERTVAL: Invalid struct index
INSERTVAL: Invalid array index
Inserted value type doesn't match aggregate type
Invalid type for value
Invalid record: operand number exceeded available operands
Explicit invoke type is not a function type
Callee is not a pointer
Callee is not of pointer to function type
Explicit invoke type does not match pointee type of callee operand
Insufficient operands to call
Explicit call type is not a function type
Callee is not a pointer type
Explicit call type does not match pointee type of callee operand
Personality function mismatch
Old-style alloca with a non-pointer type
alloca of unsized type
Load operand is not a pointer type
load of unsized type
Alignment missing from atomic load
store of unsized type
Alignment missing from atomic store
Cmpxchg operand is not a pointer type
Fast math flags indicator set for call with no FMF
Fast-math-flags specified for call without floating-point scalar or vector return type
Invalid instruction with no BB
Operand bundles found with no consumer
Never resolved value found in function
Invalid function metadata: outgoing forward refs
Invalid shufflevector operands
Invalid constant reference
Invalid constant type
Invalid type for a constant null value
Invalid gep with no operands
Explicit gep operator type does not match pointee type of pointer operand
Invalid value name
Invalid alignment value
Load/Store operand is not a pointer type
Explicit load/store type does not match pointee type of pointer operand
Cannot load/store from pointer
Never resolved function from blockaddress
target triple too late in module
datalayout too late in module
Malformed global initializer set
Invalid multiple blocks
Unknown attribute kind (
Bitwidth for integer type out of range
Invalid type
Invalid function argument type
Invalid TYPE table
Invalid vector length
Invalid TYPE table: Only named structs can be forward referenced
Expected a constant
Alias and aliasee types don't match
Invalid multiple synchronization scope names blocks
Invalid empty synchronization scope names block
Invalid global variable comdat ID
Invalid calling convention ID
Invalid function comdat ID
Invalid hash length 
Invalid Summary Block: record for version expected
Invalid Summary Block: version expected
Invalid summary version 
. Version should be in the range [1-
Alias expects aliasee summary to be parsed
Name attachment that does not follow a combined record
Invalid hash that does not follow a module path
GUID 
) is 
Expected a single module
llvm.bitcode
Corrupted bitcode
bitcode-reader
NumMDStringLoaded
Number of MDStrings loaded
NumMDNodeTemporary
Number of MDNode::Temporary created
NumMDRecordLoaded
Number of Metadata records loaded
import-full-type-definitions
Import full type definitions for ThinLTO.
disable-ondemand-mds-loading
Force disable the lazy-loading on-demand of metadata when loading bitcode for importing.
Corrupted Metadata block
Invalid metadata: fwd refs into function blocks
Invalid record: metadata strings layout
Invalid record: metadata strings with no strings
Invalid record: metadata strings corrupt offset
Invalid record: metadata strings bad length
Invalid record: metadata strings truncated chars
Invalid metadata attachment: expect fwd ref to MDNode
Invalid metadata attachment
Conflicting METADATA_KIND records
METADATA_NAME not followed by METADATA_NAMED_NODE
Invalid named metadata: expect fwd ref to MDNode
Invalid record: Unsupported version of DISubrange
Alignment value is too large
lazyLoadOneMetadata failed jumping: 
lazyLoadOneMetadata failed advanceSkippingSubblocks: 
Can't lazyload MD, parseOneMetadata: 
Can't lazyload MD: 
Type mismatch in constant table!
Invalid sign in float literal
invalid hexadecimal floating-point constant: expected at least one significand digit
invalid hexadecimal floating-point constant: expected exponent part 'p'
invalid hexadecimal floating-point constant: expected at least one exponent digit
unterminated comment
invalid 
 number
invalid binary number
invalid hexadecimal number
unterminated string constant
unterminated single quote
single quote way too long
invalid character in input
got_hi
got_lo
higher
highest
tlsgd
base-
missing expression
unexpected token
Recursive use of '
redefinition of '
invalid assignment to '
invalid reassignment of non-absolute variable '
Need to implement createXCOFFAsmParser for XCOFF format.
.equ
.equiv
.ascii
.asciz
.string
.byte
.short
.value
.2byte
.long
.4byte
.quad
.8byte
.octa
.single
.float
.double
.align
.align32
.balign
.balignw
.balignl
.p2align
.p2alignw
.p2alignl
.org
.fill
.zero
.extern
.globl
.global
.lazy_reference
.no_dead_strip
.symbol_resolver
.private_extern
.reference
.weak_definition
.weak_reference
.weak_def_can_be_hidden
.cold
.comm
.common
.lcomm
.abort
.include
.incbin
.code16
.code16gcc
.rept
.rep
.irp
.irpc
.endr
.bundle_align_mode
.bundle_lock
.bundle_unlock
.ifeq
.ifge
.ifgt
.ifle
.iflt
.ifne
.ifb
.ifnb
.ifc
.ifeqs
.ifnc
.ifnes
.ifdef
.ifndef
.ifnotdef
.elseif
.else
.end
.endif
.skip
.space
.file
.line
.stabs
.cv_file
.cv_func_id
.cv_loc
.cv_linetable
.cv_inline_linetable
.cv_inline_site_id
.cv_def_range
.cv_string
.cv_stringtable
.cv_filechecksums
.cv_filechecksumoffset
.cv_fpo_data
.sleb128
.uleb128
.cfi_sections
.cfi_startproc
.cfi_endproc
.cfi_def_cfa
.cfi_def_cfa_offset
.cfi_adjust_cfa_offset
.cfi_def_cfa_register
.cfi_offset
.cfi_rel_offset
.cfi_personality
.cfi_lsda
.cfi_remember_state
.cfi_restore_state
.cfi_same_value
.cfi_restore
.cfi_escape
.cfi_return_column
.cfi_signal_frame
.cfi_undefined
.cfi_register
.cfi_window_save
.cfi_b_key_frame
.macros_on
.macros_off
.macro
.exitm
.endm
.endmacro
.purgem
.err
.error
.warning
.altmacro
.noaltmacro
.reloc
.dc.a
.dc.b
.dc.d
.dc.l
.dc.s
.dc.w
.dc.x
.dcb
.dcb.b
.dcb.d
.dcb.l
.dcb.s
.dcb.w
.dcb.x
.ds.b
.ds.d
.ds.l
.ds.p
.ds.s
.ds.w
.ds.x
.print
.addrsig
.addrsig_sym
.pseudoprobe
frame_ptr_rel
subfield_reg
reg_rel
unmatched .ifs or .elses
unassigned file number: 
 for .file directives
assembler local symbol '
' not defined
directional label undefined
unexpected token at start of statement
invalid use of pseudo-symbol '.' as a label
 not currently supported for this target
unknown directive
__emit
parsed instruction: [
unexpected token in '.if' directive
unexpected token in '.ifb' directive
unexpected token in '.ifc' directive
expected string parameter for '.ifeqs' directive
expected string parameter for '.ifnes' directive
expected comma after first string for '.ifeqs' directive
expected comma after first string for '.ifnes' directive
expected identifier after '.ifdef'
unexpected token in '.ifdef'
Encountered a .elseif that doesn't follow an .if or  an .elseif
unexpected token in '.elseif' directive
unexpected token in '.else' directive
Encountered a .else that doesn't follow  an .if or an .elseif
unexpected token in '.endif' directive
Encountered a .endif that doesn't follow an .if or .else
macros cannot be nested more than 
 levels deep.
 Use -asm-macro-max-nesting-depth to increase this limit.
.endmacro
<instantiation>
invalid argument identifier for formal argument
expected '=' after formal parameter identifier
cannot mix positional and keyword arguments
expected absolute expression
parameter named '
' does not exist for macro '
missing value for required parameter '
' in macro '
too many positional arguments
unexpected token in macro instantiation
unbalanced parentheses in macro argument
Wrong number of arguments
expected identifier
' directive
out of range literal value
unknown token in expression
unexpected token in directive
invalid floating point literal
 in directive
p2align directive with no operand(s) is ignored
invalid alignment value
alignment must be a power of 2
alignment must be smaller than 2**32
alignment directive can never be satisfied in this many bytes, ignoring maximum bytes expression
maximum bytes expression exceeds alignment and has no effect
 in '.org' directive
unexpected token in '.fill' directive
'.fill' directive with negative size has no effect
'.fill' directive with size greater than 8 has been truncated to 8
'.fill' directive pattern has been truncated to 32-bits
unexpected token in '.zero' directive
non-local symbol required
unable to emit symbol attribute
expected identifier in directive
alignment not supported on this target
unexpected token in '.comm' or '.lcomm' directive
invalid '.comm' or '.lcomm' directive size, can't be less than zero
invalid '.comm' or '.lcomm' directive alignment, can't be less than zero
invalid symbol redefinition
unexpected token in '.abort' directive
.abort detected. Assembly stopping.
.abort '
' detected. Assembly stopping.
expected string in '.include' directive
unexpected token in '.include' directive
Could not find include file '
expected string in '.incbin' directive
unexpected token in '.incbin' directive
skip is negative
Could not find incbin file '
negative count has no effect
unexpected token in '
Count is negative
no matching '.endr' in definition
unexpected token in '.endr' directive
.endr
expected identifier in '.irp' directive
expected comma in '.irp' directive
expected End of Statement
expected identifier in '.irpc' directive
expected comma in '.irpc' directive
unexpected token in '.irpc' directive
expected end of statement
unmatched '.endr' directive
unexpected token after expression in '.bundle_align_mode' directive
invalid bundle alignment size (expected between 0 and 30)
invalid option for '.bundle_lock' directive
unexpected token after '.bundle_lock' directive option
unexpected token in '.bundle_unlock' directive
in '
negative file number
unexpected token in '.file' directive
explicit path specified, but no file number
MD5 checksum specified, but no file number
source specified, but no file number
file 0 not supported prior to DWARF-5
inconsistent use of MD5 checksums
unexpected token in '.line' directive
unexpected token in '.loc' directive
file number less than one in '.loc' directive
unassigned file number in '.loc' directive
line number less than zero in '.loc' directive
column position less than zero in '.loc' directive
is_stmt value not 0 or 1
is_stmt value not the constant value of 0 or 1
isa number less than zero
isa number not a constant value
unknown sub-directive in '.loc' directive
unsupported directive '.stabs'
expected file number in '.cv_file' directive
file number less than one
unexpected token in '.cv_file' directive
expected checksum kind in '.cv_file' directive
file number already allocated
unexpected token in '.cv_func_id' directive
function id already allocated
expected function id in '
expected function id within range [0, UINT_MAX)
expected 'within' identifier in '.cv_inline_site_id' directive
expected 'inlined_at' identifier in '.cv_inline_site_id' directive
expected line number after 'inlined_at'
unexpected token in '.cv_inline_site_id' directive
expected integer in '
file number less than one in '
unassigned file number in '
line number less than zero in '.cv_loc' directive
column position less than zero in '.cv_loc' directive
unexpected token in '.cv_loc' directive
unknown sub-directive in '.cv_loc' directive
unexpected token in '.cv_linetable' directive
expected SourceField in '.cv_inline_linetable' directive
File id less than zero in '.cv_inline_linetable' directive
expected SourceLineNum in '.cv_inline_linetable' directive
Line number less than zero in '.cv_inline_linetable' directive
Expected End of Statement
expected comma before def_range type in .cv_def_range directive
expected def_range type in directive
expected comma before register number in .cv_def_range directive
expected register number
expected comma before offset in .cv_def_range directive
expected offset value
expected register value
expected comma before flag value in .cv_def_range directive
expected flag value
expected comma before base pointer offset in .cv_def_range directive
expected base pointer offset value
unexpected def_range type in .cv_def_range directive
 in '.cv_string' directive
expected symbol name
unexpected tokens
 in '.cv_fpo_data' directive
Expected an identifier
.eh_frame
.debug_frame
 in '.cfi_sections' directive
 in '.cfi_startproc' directive
 in '.cfi_endproc' directive
unsupported encoding.
unexpected token in '.cfi_signal_frame'
expected identifier in '.macro' directive
vararg parameter '
' should be the last parameter
macro '
' has multiple parameters named '
missing parameter qualifier for '
 is not a valid parameter qualifier for '
pointless default value for required parameter '
no matching '.endmacro' in definition
' is already defined
macro defined with named parameters which are not used in macro body, possible positional parameter found in body which will have no effect
unexpected '
' in file, no current macro definition
expected identifier in '.purgem' directive
unexpected token in '.purgem' directive
' is not defined
unexpected token in '.end' directive
.err encountered
.error directive invoked in source file
.error argument must be a string
.warning directive invoked in source file
.warning argument must be a string
expected end of statement in '.warning' directive
expected relocation name
expression must be relocatable
unexpected token in .reloc directive
' directive with negative repeat count has no effect
literal value out of range for directive
expected double quoted string after .print
expected identifier in '.addrsig_sym' directive
unexpected token in '.pseudoprobe' directive
unexpected expression in _emit
unexpected expression in align
literal value not a power of two greater then zero
 * $$
offset 
 + $$
byte ptr 
word ptr 
dword ptr 
qword ptr 
xword ptr 
xmmword ptr 
ymmword ptr 
.even
while in macro instantiation
unexpected backslash at end of string
invalid hexadecimal escape sequence
invalid octal escape sequence (out of range)
invalid escape sequence (unrecognized character)
unexpected symbol modifier following '@'
invalid variant '
invalid modifier '
' (no symbols present)
invalid variant on expression '
' (already modified)
invalid token in expression
expected symbol variant after '@'
unexpected token in variant, expected ')'
expected a symbol reference
unexpected modifier on variable reference
brackets expression not supported on this target
expected '(' after operator
expected ')' in parentheses expression
expected ']' in brackets expression
expected section directive before assembly directive
.text
.bss
.section
.def
.scl
.type
.endef
.secrel32
.symidx
.safeseh
.secidx
.linkonce
.rva
.weak
.cg_profile
.seh_proc
.seh_endproc
.seh_endfunclet
.seh_startchained
.seh_endchained
.seh_handler
.seh_handlerdata
.seh_stackalloc
.seh_endprologue
unexpected token in section switching directive
expected string in directive
expected comdat type such as 'discard' or 'largest' after protection bits
expected comma in directive
conflicting section flags 'b' and 'd'.
unknown flag
one_only
same_size
same_contents
associative
newest
unrecognized COMDAT type '
invalid '.secrel32' directive offset, can't be less than zero or greater than std::numeric_limits<uint32_t>::max()
cannot make section associative with .linkonce
section '
' is already linkonce
invalid '.rva' directive offset, can't be less than -2147483648 or greater than 2147483647
you must specify one or both of @unwind or @except
a handler attribute must begin with '@'
expected @unwind or @except
.alt_entry
.desc
.indirect_symbol
.lsym
.subsections_via_symbols
.dump
.pushsection
.popsection
.previous
.secure_log_unique
.secure_log_reset
.tbss
.zerofill
.data_region
.end_data_region
.const_data
.constructor
.cstring
.destructor
.dyld
.fvmlib_init0
.fvmlib_init1
.lazy_symbol_pointer
.linker_option
.literal16
.literal4
.literal8
.mod_init_func
.mod_term_func
.non_lazy_symbol_pointer
.thread_local_variable_pointer
.objc_cat_cls_meth
.objc_cat_inst_meth
.objc_category
.objc_class
.objc_class_names
.objc_class_vars
.objc_cls_meth
.objc_cls_refs
.objc_inst_meth
.objc_instance_vars
.objc_message_refs
.objc_meta_class
.objc_meth_var_names
.objc_meth_var_types
.objc_module_info
.objc_selector_strs
.objc_string_object
.objc_symbols
.picsymbol_stub
.static_const
.static_data
.symbol_stub
.tdata
.thread_init_func
.tlv
.ident
.bridgeos_version_min
.watchos_version_min
.tvos_version_min
.ios_version_min
.macosx_version_min
.build_version
.ptrauth_abi_version
.ptrauth_kernel_abi_version
.alt_entry must preceed symbol definition
unexpected token in '.desc' directive
indirect symbol not in a symbol pointer or stub section
expected identifier in .indirect_symbol directive
non-local symbol required in directive
unable to emit indirect symbol attribute for: 
unexpected token in '.indirect_symbol' directive
unexpected token in '.lsym' directive
directive '.lsym' is unsupported
unexpected token in '.subsections_via_symbols' directive
expected string in '.dump' or '.load' directive
unexpected token in '.dump' or '.load' directive
ignoring directive .dump for now
ignoring directive .load for now
expected identifier after '.section' directive
unexpected token in '.section' directive
__textcoal_nt
__text
__const_coal
__datacoal_nt
__data
section "
" is deprecated
change section name to "
.popsection without corresponding .pushsection
.previous without corresponding .section
unexpected token in '.secure_log_unique' directive
.secure_log_unique specified multiple times
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
can't open secure log file: 
unexpected token in '.secure_log_reset' directive
unexpected token in '.tbss' directive
invalid '.tbss' directive size, can't be less thanzero
invalid '.tbss' alignment, can't be lessthan zero
__thread_bss
expected segment name after '.zerofill' directive
expected section name after comma in '.zerofill' directive
unexpected token in '.zerofill' directive
invalid '.zerofill' directive size, can't be less than zero
invalid '.zerofill' directive alignment, can't be less than zero
expected region type after '.data_region' directive
unknown region type in '.data_region' directive
unexpected token in '.end_data_region' directive
__bss
__constructor
__destructor
__dyld
__fvmlib_init0
__fvmlib_init1
__la_symbol_ptr
expected string in '
__literal16
__literal4
__literal8
__mod_init_func
__mod_term_func
__nl_symbol_ptr
__thread_ptr
__cat_cls_meth
__cat_inst_meth
__category
__class
__class_vars
__cls_meth
__cls_refs
__inst_meth
__instance_vars
__meta_class
__module_info
__protocol
__selector_strs
__string_object
__symbols
__picsymbol_stub
__static_const
__static_data
__symbol_stub
__thread_data
__thread_init
__thread_vars
invalid OS update specifier, comma expected
OS update
 major version number, integer expected
 major version number
 minor version number required, comma expected
 minor version number, integer expected
 minor version number
 version number, integer expected
 version number
SDK subminor
 used while targeting 
overriding previous version directive
previous definition is here
platform name expected
unknown platform name
version number required, comma expected
 in '.build_version' directive
expected integer version in '.ptrauth_abi_version' directive
invalid ptrauth ABI version number
 in '.ptrauth_abi_version' directive
expected integer version in '.ptrauth_kernel_abi_version' directive
invalid ptrauth kernel ABI version number
 in '.ptrauth_kernel_abi_version' directive
.data.rel
.data.rel.ro
.size
.symver
.version
.protected
.internal
.hidden
.subsection
Section cannot specifiy a group name while also acting as a member of the last group
Mergeable section must specify the type
Group section must specify the type
.note
init_array
fini_array
preinit_array
nobits
progbits
llvm_odrtab
llvm_linker_options
llvm_call_graph_profile
llvm_dependent_libraries
llvm_sympart
llvm_bb_addr_map
unknown section type
changed section type for 
, expected: 0x
changed section flags for 
changed section entsize for 
, expected: 
DWARF2 only supports one section per compilation unit
expected '@<type>', '%<type>' or "<type>"
expected '%<type>' or "<type>"
expected the entry size
entry size must be positive
expected group name
invalid group name
invalid linkage
Linkage must be 'comdat'
expected linked-to symbol
invalid linked-to symbol
linked-to symbol is not in a section: 
expected 'unique'
expected commma
unique id must be positive
unique id is too large
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '%<type>' or "<type>"
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '@<type>', '%<type>' or "<type>"
expected symbol type in directive
unsupported attribute in '.type' directive
unexpected token in '.type' directive
unexpected token in '.ident' directive
expected a comma
expected a '@' in the name
unexpected token in '.version' directive
asm-macro-max-nesting-depth
The maximum nesting depth allowed for assembly macros.
unexpected token
expected integer count in '.cg_profile' directive
expected string in directive, instead got: 
unknown section kind: 
Only data sections can be passive
, instead got: 
Unexepcted section flag: 
Expected label after .type directive, got: 
Expected label,@type declaration, got: 
Unknown WASM symbol type: 
static-func-full-module-prefix
Use full module build paths in the profile counter names for static functions.
static-func-strip-dirname-prefix
Strip specified level of directory name from source path in the profile counter name for static functions.
enable-name-compression
Enable name/filename string compression
,regular,live_support
__llvm_profile_raw_version
__llvm_profile_filename
__DATA,
__LLVM_COV,
.lprfd$M
.lprfc$M
.lprfn$M
.lprfv$M
.lprfnd$M
.lcovmap$M
.lcovfun$M
".lorderfile$M"
__llvm_prf_data
__llvm_prf_cnts
__llvm_prf_names
__llvm_prf_vals
__llvm_prf_vnds
__llvm_covmap
__llvm_covfun
__llvm_orderfile
Unrecognized instrumentation profile encoding format
Invalid instrumentation profile data (bad magic)
Invalid instrumentation profile data (file header is corrupt)
Unsupported instrumentation profile format version
Unsupported instrumentation profile hash type
Too much profile data
Truncated profile data
Malformed instrumentation profile data
No profile data available for function
Function control flow change detected (hash mismatch)
Function basic block count change detected (counter mismatch)
Counter overflow
Function value site count change detected (counter mismatch)
Failed to compress data (zlib)
Failed to uncompress data (zlib)
Empty raw profile file
Profile uses zlib compression but the profile reader was built without zlib support
PGOFuncName
llvm.instrprof
Desired percentile exceeds the maximum cutoff
llvm.sampleprof
Invalid sample profile data (bad magic)
Unsupported sample profile format version
Malformed sample profile data
Unrecognized sample profile encoding format
Profile encoding format unsupported for writing operations
Truncated function name table
Unimplemented feature
Ostream does not support seek
Compress failure
Uncompress failure
Zlib is unavailable
Function hash mismatch
Expected 'mangled_name:NUM:NUM', found 
Expected 'NUM[.NUM]: NUM[ mangled_name:NUM]*', found 
Found non-metadata after metadata: 
 - Offset: 
, Size: 
, Flags: 
Header Size: 
Total Sections Size: 
File Size: 
Profile data remapping cannot be applied to profile data in compact format (original mangled names are not available).
Could not create remapper: 
ProfileSummarySection
NameTableSection
ProfileSymbolListSection
FuncOffsetTableSection
FunctionMetadata
LBRProfileSection
{compressed,
fixlenmd5,
md5,
partial,
unexpected end of memory buffer: 
adcg
unexpected version: 
file-search
NumIncluded
Number of attempted #includes.
NumMultiIncludeFileOptzn
Number of #includes skipped due to the multi-include optimization.
NumFrameworkLookups
Number of framework lookups.
NumSubFrameworkLookups
Number of subframework lookups.
*** HeaderSearch Stats:
 files tracked.
 #import/#pragma once files.
 included exactly once.
 max times a file is included.
 #include/#include_next/#import.
 #includes skipped due to the multi-include optimization.
 framework lookups.
 subframework lookups.
Private
.framework
.system_framework
Modules
Allocation failed
MacroInfo 
 builtin
 disabled
 allow_redefinitions_without_warning
 warn_if_unused
 header_guard
    #define <macro>
DefMacroDirective
UndefMacroDirective
VisibilityMacroDirective
 from_pch
<global>
<private>
exclude
export_as
textual
framework 
module 
framework module
register
_Generic
_Static_assert
_Thread_local
concept
co_yield
consteval
_Sat
_Decimal32
_Decimal64
_Decimal128
__attribute
__builtin_choose_expr
__builtin_offsetof
__builtin_FILE
__builtin_FUNCTION
__builtin_LINE
__builtin_COLUMN
__builtin_types_compatible_p
__builtin_va_arg
__extension__
__label__
__thread
__FUNCDNAME__
__FUNCSIG__
L__FUNCTION__
L__FUNCSIG__
__is_trivially_destructible
__has_nothrow_move_assign
__has_trivial_move_assign
__has_trivial_move_constructor
__has_nothrow_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_literal_type
__has_unique_object_representations
__reference_binds_to_temporary
__array_rank
__array_extent
__is_same_as
__module_private__
__builtin_ptrauth_type_discriminator
__builtin_xnu_type_signature
__builtin_astype
vec_step
image1d_t
image1d_array_t
image1d_buffer_t
image2d_t
image2d_array_t
image2d_depth_t
image2d_array_depth_t
image2d_msaa_t
image2d_array_msaa_t
image2d_msaa_depth_t
image2d_array_msaa_depth_t
image3d_t
__builtin_omp_required_simd_align
__bool
__bridge_retain
__alignof__
__asm
__complex
__complex__
__const__
__decltype
__imag__
__inline
__inline__
__nullptr
__real__
__restrict__
__signed
__signed__
__typeof
__typeof__
__volatile
__volatile__
__w64
__uuidof
__try
__finally
__int8
_int8
__int16
_int16
_int32
_int64
_asm
_alignof
__builtin_alignof
_uuidof
_inline
_declspec
__builtin_convertvector
__char16_t
__char32_t
__unknown_anytype
.tbd
.api
.spi
excluded
IOKit
__public_macro
__private_macro
'defined'
MacroState 
 ambiguous
 overrides
 ModuleMacro 
 undef
 overridden
__DATE__
__TIME__
__COUNTER__
_Pragma
__has_cpp_attribute
__BASE_FILE__
__INCLUDE_LEVEL__
__TIMESTAMP__
__identifier
__pragma
__FILE_NAME__
__has_feature
__has_extension
__has_builtin
__has_attribute
__has_c_attribute
__has_declspec_attribute
__has_warning
__is_identifier
__is_target_arch
__is_target_vendor
__is_target_os
__is_target_environment
__has_target_variant
__is_target_variant_os
__is_target_variant_environment
__building_module
__MODULE__
??? ??? ?? ??:??:?? ????
"%s %2d %4d"
"%02d:%02d:%02d"
attribute_availability_with_message
attribute_availability_app_extension
attribute_availability_with_version_underscores
attribute_availability_with_strict
attribute_availability_with_replacement
attribute_availability_in_templates
attribute_cf_returns_not_retained
attribute_cf_returns_on_parameters
attribute_deprecated_with_message
attribute_deprecated_with_replacement
attribute_ns_returns_not_retained
attribute_unavailable_with_message
attribute_symbol_metadata_footnote
ptrauth_qualifier_authentication_mode
ptrauth_restricted_intptr_qualifier
ptrauth_vtable_pointer_address_discrimination
ptrauth_vtable_pointer_type_discrimination
ptrauth_member_function_pointer_type_discrimination
ptrauth_function_pointer_type_discrimination
objc_default_synthesize_properties
arc_cf_code_audited
cxx_decltype_incomplete_return_types
cxx_default_function_template_args
cxx_reference_qualified_functions
pragma_clang_attribute_namespaces
pragma_clang_attribute_external_declaration
statement_attributes_with_gnu_syntax
cxx_attributes_on_using_declarations
'__has_warning'
unknown-unknown-
clang
pragma hdrstop
pragma once
pragma message
pragma warning
pragma error
pragma diagnostic
crash
pragma crash
#pragma clang __debug llvm_fatal_error
pragma clang __debug captured
execution_character_set
pragma execution_character_set
UTF-8
utf-8
__VA_OPT__
*** Preprocessor Stats:
 directives found:
 #define.
 #undef.
  #include/#include_next/#import:
 source files entered.
 max include stack depth
 #if/#ifndef/#ifdef.
 #else/#elif.
 #endif.
 #pragma.
 #if/#ifndef#ifdef regions skipped
 obj/fn/builtin macros expanded, 
 on the fast path.
 token paste (##) operations performed, 
Preprocessor Memory: 
B total
  BumpPtr: 
  Macro Expanded Tokens: 
  Predefines Buffer: 
  Macros: 
  #pragma push_macro Info: 
  Poison Reasons: 
  Comment Handlers: 
__gnu__
block
enum
enum_constant
field
function
function(is_member)
namespace
objc_category
objc_implementation
objc_interface
objc_method
objc_method(is_instance)
objc_property
objc_protocol
record
record(unless(is_union))
hasType
hasType(functionType)
type_alias
variable
variable(is_thread_local)
variable(is_global)
variable(is_local)
variable(is_parameter)
variable(unless(is_parameter))
_clang_arm_mve_strict_polymorphism
xclude_from_explicit_instantiation
bjc_arc_weak_reference_unavailable
math.h
not a builtin function
__builtin_atan2
__builtin_atan2f
__builtin_atan2l
LdLdLd
__builtin_atan2f128
LLdLLdLLd
__builtin_abs
__builtin_copysign
__builtin_copysignf
__builtin_copysignf16
__builtin_copysignl
__builtin_copysignf128
__builtin_fabs
__builtin_fabsf
__builtin_fabsl
LdLd
__builtin_fabsf16
__builtin_fabsf128
LLdLLd
__builtin_fmod
__builtin_fmodf
__builtin_fmodf16
__builtin_fmodl
__builtin_fmodf128
__builtin_frexp
ddi*
__builtin_frexpf
ffi*
__builtin_frexpl
LdLdi*
__builtin_frexpf128
LLdLLdi*
__builtin_huge_val
__builtin_huge_valf
__builtin_huge_vall
__builtin_huge_valf128
__builtin_inf
__builtin_inff
__builtin_infl
__builtin_inff128
__builtin_labs
LiLi
__builtin_llabs
LLiLLi
__builtin_ldexp
__builtin_ldexpf
__builtin_ldexpl
LdLdi
__builtin_ldexpf128
LLdLLdi
__builtin_modf
ddd*
__builtin_modff
fff*
__builtin_modfl
LdLdLd*
__builtin_modff128
LLdLLdLLd*
__builtin_nan
dcC*
__builtin_nanf
fcC*
__builtin_nanl
LdcC*
__builtin_nanf128
LLdcC*
__builtin_nans
__builtin_nansf
__builtin_nansl
__builtin_nansf128
__builtin_powi
__builtin_powif
__builtin_powil
__builtin_pow
__builtin_powf
__builtin_powf16
__builtin_powl
__builtin_powf128
__builtin_acos
__builtin_acosf
__builtin_acosl
__builtin_acosf128
__builtin_acosh
__builtin_acoshf
__builtin_acoshl
__builtin_acoshf128
__builtin_asin
__builtin_asinf
__builtin_asinl
__builtin_asinf128
__builtin_asinh
__builtin_asinhf
__builtin_asinhl
__builtin_asinhf128
__builtin_atan
__builtin_atanf
__builtin_atanl
__builtin_atanf128
__builtin_atanh
__builtin_atanhf
__builtin_atanhl
__builtin_atanhf128
__builtin_cbrt
__builtin_cbrtf
__builtin_cbrtl
__builtin_cbrtf128
__builtin_ceil
__builtin_ceilf
__builtin_ceilf16
__builtin_ceill
__builtin_ceilf128
__builtin_cos
__builtin_cosf
__builtin_cosf16
__builtin_cosh
__builtin_coshf
__builtin_coshl
__builtin_coshf128
__builtin_cosl
__builtin_cosf128
__builtin_erf
__builtin_erff
__builtin_erfl
__builtin_erff128
__builtin_erfc
__builtin_erfcf
__builtin_erfcl
__builtin_erfcf128
__builtin_exp
__builtin_expf
__builtin_expf16
__builtin_expl
__builtin_expf128
__builtin_exp2
__builtin_exp2f
__builtin_exp2f16
__builtin_exp2l
__builtin_exp2f128
__builtin_expm1
__builtin_expm1f
__builtin_expm1l
__builtin_expm1f128
__builtin_fdim
__builtin_fdimf
__builtin_fdiml
__builtin_fdimf128
__builtin_floor
__builtin_floorf
__builtin_floorf16
__builtin_floorl
__builtin_floorf128
__builtin_fma
dddd
__builtin_fmaf
ffff
__builtin_fmaf16
hhhh
__builtin_fmal
LdLdLdLd
__builtin_fmaf128
LLdLLdLLdLLd
__builtin_fmax
__builtin_fmaxf
__builtin_fmaxf16
__builtin_fmaxl
__builtin_fmaxf128
__builtin_fmin
__builtin_fminf
__builtin_fminf16
__builtin_fminl
__builtin_fminf128
__builtin_hypot
__builtin_hypotf
__builtin_hypotl
__builtin_hypotf128
__builtin_ilogb
__builtin_ilogbf
__builtin_ilogbl
__builtin_ilogbf128
iLLd
__builtin_lgamma
__builtin_lgammaf
__builtin_lgammal
__builtin_lgammaf128
__builtin_llrint
LLid
__builtin_llrintf
LLif
__builtin_llrintl
LLiLd
__builtin_llrintf128
LLiLLd
__builtin_llround
__builtin_llroundf
__builtin_llroundl
__builtin_llroundf128
__builtin_log
__builtin_log10
__builtin_log10f
__builtin_log10f16
__builtin_log10l
__builtin_log10f128
__builtin_log1p
__builtin_log1pf
__builtin_log1pl
__builtin_log1pf128
__builtin_log2
__builtin_log2f
__builtin_log2f16
__builtin_log2l
__builtin_log2f128
__builtin_logb
__builtin_logbf
__builtin_logbl
__builtin_logbf128
__builtin_logf
__builtin_logf16
__builtin_logl
__builtin_logf128
__builtin_lrint
__builtin_lrintf
__builtin_lrintl
LiLd
__builtin_lrintf128
LiLLd
__builtin_lround
__builtin_lroundf
__builtin_lroundl
__builtin_lroundf128
__builtin_nearbyint
__builtin_nearbyintf
__builtin_nearbyintl
__builtin_nearbyintf128
__builtin_nextafter
__builtin_nextafterf
__builtin_nextafterl
__builtin_nextafterf128
__builtin_nexttoward
ddLd
__builtin_nexttowardf
ffLd
__builtin_nexttowardl
__builtin_nexttowardf128
__builtin_remainder
__builtin_remainderf
__builtin_remainderl
__builtin_remainderf128
__builtin_remquo
dddi*
__builtin_remquof
fffi*
__builtin_remquol
LdLdLdi*
__builtin_remquof128
LLdLLdLLdi*
__builtin_rint
__builtin_rintf
__builtin_rintf16
__builtin_rintl
__builtin_rintf128
__builtin_round
__builtin_roundf
__builtin_roundf16
__builtin_roundl
__builtin_roundf128
__builtin_scalbln
ddLi
__builtin_scalblnf
ffLi
__builtin_scalblnl
LdLdLi
__builtin_scalblnf128
LLdLLdLi
__builtin_scalbn
__builtin_scalbnf
__builtin_scalbnl
__builtin_scalbnf128
__builtin_sin
__builtin_sinf
__builtin_sinf16
__builtin_sinh
__builtin_sinhf
__builtin_sinhl
__builtin_sinhf128
__builtin_sinl
__builtin_sinf128
__builtin_sqrt
__builtin_sqrtf
__builtin_sqrtf16
__builtin_sqrtl
__builtin_sqrtf128
__builtin_tan
__builtin_tanf
__builtin_tanh
__builtin_tanhf
__builtin_tanhl
__builtin_tanhf128
__builtin_tanl
__builtin_tanf128
__builtin_tgamma
__builtin_tgammaf
__builtin_tgammal
__builtin_tgammaf128
__builtin_trunc
__builtin_truncf
__builtin_truncl
__builtin_truncf128
__builtin_truncf16
__builtin_flt_rounds
__builtin_cabs
__builtin_cabsf
__builtin_cabsl
LdXLd
__builtin_cacos
XdXd
__builtin_cacosf
XfXf
__builtin_cacosh
__builtin_cacoshf
__builtin_cacoshl
XLdXLd
__builtin_cacosl
__builtin_carg
__builtin_cargf
__builtin_cargl
__builtin_casin
__builtin_casinf
__builtin_casinh
__builtin_casinhf
__builtin_casinhl
__builtin_casinl
__builtin_catan
__builtin_catanf
__builtin_catanh
__builtin_catanhf
__builtin_catanhl
__builtin_catanl
__builtin_ccos
__builtin_ccosf
__builtin_ccosl
__builtin_ccosh
__builtin_ccoshf
__builtin_ccoshl
__builtin_cexp
__builtin_cexpf
__builtin_cexpl
__builtin_cimag
__builtin_cimagf
__builtin_cimagl
__builtin_conj
__builtin_conjf
__builtin_conjl
__builtin_clog
__builtin_clogf
__builtin_clogl
__builtin_cproj
__builtin_cprojf
__builtin_cprojl
__builtin_cpow
XdXdXd
__builtin_cpowf
XfXfXf
__builtin_cpowl
XLdXLdXLd
__builtin_creal
__builtin_crealf
__builtin_creall
__builtin_csin
__builtin_csinf
__builtin_csinl
__builtin_csinh
__builtin_csinhf
__builtin_csinhl
__builtin_csqrt
__builtin_csqrtf
__builtin_csqrtl
__builtin_ctan
__builtin_ctanf
__builtin_ctanl
__builtin_ctanh
__builtin_ctanhf
__builtin_ctanhl
__builtin_complex
__builtin_isgreater
Fnct
__builtin_isgreaterequal
__builtin_isless
__builtin_islessequal
__builtin_islessgreater
__builtin_isunordered
__builtin_fpclassify
iiiiii.
__builtin_isfinite
__builtin_isinf
__builtin_isinf_sign
__builtin_isnan
__builtin_isnormal
__builtin_signbit
__builtin_signbitf
__builtin_signbitl
__builtin_canonicalize
__builtin_canonicalizef
__builtin_canonicalizef16
__builtin_canonicalizel
__builtin_clzs
__builtin_clz
__builtin_clzl
iULi
__builtin_clzll
iULLi
__builtin_ctzs
__builtin_ctz
__builtin_ctzl
__builtin_ctzll
__builtin_ffs
__builtin_ffsl
__builtin_ffsll
iLLi
__builtin_parity
__builtin_parityl
__builtin_parityll
__builtin_popcount
__builtin_popcountl
__builtin_popcountll
__builtin_clrsb
__builtin_clrsbl
__builtin_clrsbll
__builtin_bswap16
UsUs
__builtin_bswap32
UZiUZi
__builtin_bswap64
UWiUWi
__builtin_bitreverse8
UcUc
__builtin_bitreverse16
__builtin_bitreverse32
__builtin_bitreverse64
__builtin_rotateleft8
UcUcUc
__builtin_rotateleft16
UsUsUs
__builtin_rotateleft32
UZiUZiUZi
__builtin_rotateleft64
UWiUWiUWi
__builtin_rotateright8
__builtin_rotateright16
__builtin_rotateright32
__builtin_rotateright64
__builtin_constant_p
nctu
__builtin_classify_type
__builtin___CFStringMakeConstantString
FC*cC*
__builtin___NSStringMakeConstantString
__builtin_va_start
__builtin_va_end
__builtin_va_copy
__builtin_stdarg_start
__builtin_assume_aligned
v*vC*z.
__builtin_bcmp
ivC*vC*z
__builtin_bcopy
vv*v*z
__builtin_bzero
vv*z
__builtin_fprintf
iP*cC*.
Fp:1:
__builtin_memchr
v*vC*iz
__builtin_memcmp
__builtin_memcpy
v*v*vC*z
__builtin_memcpy_inline
vv*vC*Iz
__builtin_memmove
__builtin_mempcpy
__builtin_memset
v*v*iz
__builtin_printf
icC*.
Fp:0:
__builtin_stpcpy
c*c*cC*
__builtin_stpncpy
c*c*cC*z
__builtin_strcasecmp
icC*cC*
__builtin_strcat
__builtin_strchr
c*cC*i
__builtin_strcmp
__builtin_strcpy
__builtin_strcspn
zcC*cC*
__builtin_strdup
c*cC*
__builtin_strlen
zcC*
__builtin_strncasecmp
icC*cC*z
__builtin_strncat
__builtin_strncmp
__builtin_strncpy
__builtin_strndup
c*cC*z
__builtin_strpbrk
c*cC*cC*
__builtin_strrchr
__builtin_strspn
__builtin_strstr
__builtin_wcschr
w*wC*w
__builtin_wcscmp
iwC*wC*
__builtin_wcslen
zwC*
__builtin_wcsncmp
iwC*wC*z
__builtin_wmemchr
w*wC*wz
__builtin_wmemcmp
__builtin_wmemcpy
w*w*wC*z
__builtin_wmemmove
__builtin_return_address
v*IUi
__builtin_extract_return_addr
v*v*
__builtin_frame_address
__builtin___clear_cache
vc*c*
__builtin_setjmp
iv**
__builtin_longjmp
vv**i
__builtin_unwind_init
__builtin_eh_return_data_regno
__builtin_snprintf
ic*zcC*.
nFp:2:
__builtin_vsprintf
ic*cC*a
nFP:1:
__builtin_vsnprintf
ic*zcC*a
nFP:2:
__builtin_thread_pointer
__builtin_launder
__builtin_is_constant_evaluated
__builtin_get_vtable_pointer
__builtin_eh_return
vzv*
__builtin_frob_return_addr
__builtin_dwarf_cfa
__builtin_init_dwarf_reg_size_table
__builtin_dwarf_sp_column
__builtin_extend_pointer
ULLiv*
__builtin_object_size
zvC*i
__builtin_dynamic_object_size
__builtin___memcpy_chk
v*v*vC*zz
__builtin___memccpy_chk
v*v*vC*izz
__builtin___memmove_chk
__builtin___mempcpy_chk
__builtin___memset_chk
v*v*izz
__builtin___stpcpy_chk
__builtin___strcat_chk
__builtin___strcpy_chk
__builtin___strlcat_chk
zc*cC*zz
__builtin___strlcpy_chk
__builtin___strncat_chk
c*c*cC*zz
__builtin___strncpy_chk
__builtin___stpncpy_chk
__builtin___snprintf_chk
ic*zizcC*.
Fp:4:
__builtin___sprintf_chk
ic*izcC*.
Fp:3:
__builtin___vsnprintf_chk
ic*zizcC*a
FP:4:
__builtin___vsprintf_chk
ic*izcC*a
FP:3:
__builtin___fprintf_chk
iP*icC*.
Fp:2:
__builtin___printf_chk
iicC*.
__builtin___vfprintf_chk
iP*icC*a
FP:2:
__builtin___vprintf_chk
iicC*a
FP:1:
__builtin_unpredictable
__builtin_expect
LiLiLi
__builtin_expect_with_probability
LiLiLid
__builtin_prefetch
vvC*.
__builtin_readcyclecounter
ULLi
__builtin_trap
__builtin_debugtrap
__builtin_unreachable
__builtin_shufflevector
__builtin_convertvector
__builtin_alloca
__builtin_alloca_with_align
v*zIz
__builtin_call_with_static_chain
__builtin_matrix_transpose
__builtin_matrix_column_major_load
__builtin_matrix_column_major_store
__sync_fetch_and_add
__sync_fetch_and_add_1
ccD*c.
__sync_fetch_and_add_2
ssD*s.
__sync_fetch_and_add_4
iiD*i.
__sync_fetch_and_add_8
LLiLLiD*LLi.
__sync_fetch_and_add_16
LLLiLLLiD*LLLi.
__sync_fetch_and_sub
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_sub_16
__sync_fetch_and_or
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_or_16
__sync_fetch_and_and
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_and_16
__sync_fetch_and_xor
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__sync_fetch_and_xor_16
__sync_fetch_and_nand
__sync_fetch_and_nand_1
__sync_fetch_and_nand_2
__sync_fetch_and_nand_4
__sync_fetch_and_nand_8
__sync_fetch_and_nand_16
__sync_add_and_fetch
__sync_add_and_fetch_1
__sync_add_and_fetch_2
__sync_add_and_fetch_4
__sync_add_and_fetch_8
__sync_add_and_fetch_16
__sync_sub_and_fetch
__sync_sub_and_fetch_1
__sync_sub_and_fetch_2
__sync_sub_and_fetch_4
__sync_sub_and_fetch_8
__sync_sub_and_fetch_16
__sync_or_and_fetch
__sync_or_and_fetch_1
__sync_or_and_fetch_2
__sync_or_and_fetch_4
__sync_or_and_fetch_8
__sync_or_and_fetch_16
__sync_and_and_fetch
__sync_and_and_fetch_1
__sync_and_and_fetch_2
__sync_and_and_fetch_4
__sync_and_and_fetch_8
__sync_and_and_fetch_16
__sync_xor_and_fetch
__sync_xor_and_fetch_1
__sync_xor_and_fetch_2
__sync_xor_and_fetch_4
__sync_xor_and_fetch_8
__sync_xor_and_fetch_16
__sync_nand_and_fetch
__sync_nand_and_fetch_1
__sync_nand_and_fetch_2
__sync_nand_and_fetch_4
__sync_nand_and_fetch_8
__sync_nand_and_fetch_16
__sync_bool_compare_and_swap
__sync_bool_compare_and_swap_1
bcD*cc.
__sync_bool_compare_and_swap_2
bsD*ss.
__sync_bool_compare_and_swap_4
biD*ii.
__sync_bool_compare_and_swap_8
bLLiD*LLiLLi.
__sync_bool_compare_and_swap_16
bLLLiD*LLLiLLLi.
__sync_val_compare_and_swap
__sync_val_compare_and_swap_1
ccD*cc.
__sync_val_compare_and_swap_2
ssD*ss.
__sync_val_compare_and_swap_4
iiD*ii.
__sync_val_compare_and_swap_8
LLiLLiD*LLiLLi.
__sync_val_compare_and_swap_16
LLLiLLLiD*LLLiLLLi.
__sync_lock_test_and_set
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_lock_release
__sync_lock_release_1
vcD*.
__sync_lock_release_2
vsD*.
__sync_lock_release_4
viD*.
__sync_lock_release_8
vLLiD*.
__sync_lock_release_16
vLLLiD*.
__sync_swap
__sync_swap_1
__sync_swap_2
__sync_swap_4
__sync_swap_8
__sync_swap_16
__c11_atomic_init
__c11_atomic_load
__c11_atomic_store
__c11_atomic_exchange
__c11_atomic_compare_exchange_strong
__c11_atomic_compare_exchange_weak
__c11_atomic_fetch_add
__c11_atomic_fetch_sub
__c11_atomic_fetch_and
__c11_atomic_fetch_or
__c11_atomic_fetch_xor
__c11_atomic_fetch_max
__c11_atomic_fetch_min
__c11_atomic_thread_fence
__c11_atomic_signal_fence
__c11_atomic_is_lock_free
__atomic_load
__atomic_load_n
__atomic_store
__atomic_store_n
__atomic_exchange
__atomic_exchange_n
__atomic_compare_exchange
__atomic_compare_exchange_n
__atomic_fetch_add
__atomic_fetch_sub
__atomic_fetch_and
__atomic_fetch_or
__atomic_fetch_xor
__atomic_fetch_nand
__atomic_add_fetch
__atomic_sub_fetch
__atomic_and_fetch
__atomic_or_fetch
__atomic_xor_fetch
__atomic_max_fetch
__atomic_min_fetch
__atomic_nand_fetch
__atomic_test_and_set
bvD*i
__atomic_clear
vvD*i
__atomic_thread_fence
__atomic_signal_fence
__atomic_always_lock_free
bzvCD*
__atomic_is_lock_free
__opencl_atomic_init
__opencl_atomic_load
__opencl_atomic_store
__opencl_atomic_exchange
__opencl_atomic_compare_exchange_strong
__opencl_atomic_compare_exchange_weak
__opencl_atomic_fetch_add
__opencl_atomic_fetch_sub
__opencl_atomic_fetch_and
__opencl_atomic_fetch_or
__opencl_atomic_fetch_xor
__opencl_atomic_fetch_min
__opencl_atomic_fetch_max
__atomic_fetch_min
__atomic_fetch_max
__sync_synchronize
__sync_fetch_and_min
iiD*i
__sync_fetch_and_max
__sync_fetch_and_umin
UiUiD*Ui
__sync_fetch_and_umax
__builtin_abort
__builtin_index
__builtin_rindex
__warn_memset_zero_len
_alloca
__annotation
wC*.
__assume
_bittest
UcNiC*Ni
_bittestandcomplement
UcNi*Ni
_bittestandreset
_bittestandset
_bittest64
UcWiC*Wi
_bittestandcomplement64
UcWi*Wi
_bittestandreset64
_bittestandset64
_byteswap_ushort
stdlib.h
_byteswap_ulong
UNiUNi
_byteswap_uint64
ULLiULLi
__debugbreak
__exception_code
_exception_code
__exception_info
_exception_info
__abnormal_termination
_abnormal_termination
__GetExceptionInfo
_InterlockedAnd8
ccD*c
_InterlockedAnd16
ssD*s
_InterlockedAnd
NiNiD*Ni
_InterlockedCompareExchange8
ccD*cc
_InterlockedCompareExchange16
ssD*ss
_InterlockedCompareExchange
NiNiD*NiNi
_InterlockedCompareExchange64
LLiLLiD*LLiLLi
_InterlockedCompareExchangePointer
v*v*D*v*v*
_InterlockedCompareExchangePointer_nf
_InterlockedDecrement16
ssD*
_InterlockedDecrement
NiNiD*
_InterlockedExchange
_InterlockedExchange8
_InterlockedExchange16
_InterlockedExchangeAdd8
_InterlockedExchangeAdd16
_InterlockedExchangeAdd
_InterlockedExchangePointer
v*v*D*v*
_InterlockedExchangeSub8
_InterlockedExchangeSub16
_InterlockedExchangeSub
_InterlockedIncrement16
_InterlockedIncrement
_InterlockedOr8
_InterlockedOr16
_InterlockedOr
_InterlockedXor8
_InterlockedXor16
_InterlockedXor
_interlockedbittestandreset
UcNiD*Ni
_interlockedbittestandreset64
UcWiD*Wi
_interlockedbittestandreset_acq
_interlockedbittestandreset_nf
_interlockedbittestandreset_rel
_interlockedbittestandset
_interlockedbittestandset64
_interlockedbittestandset_acq
_interlockedbittestandset_nf
_interlockedbittestandset_rel
__iso_volatile_load8
ccCD*
__iso_volatile_load16
ssCD*
__iso_volatile_load32
iiCD*
__iso_volatile_load64
LLiLLiCD*
__iso_volatile_store8
vcD*c
__iso_volatile_store16
vsD*s
__iso_volatile_store32
viD*i
__iso_volatile_store64
vLLiD*LLi
__noop
__lzcnt16
__lzcnt
UiUi
__lzcnt64
__popcnt16
__popcnt
__popcnt64
_ReturnAddress
_rotl8
_rotl16
UsUsUc
_rotl
UiUii
_lrotl
UNiUNii
_rotl64
UWiUWii
_rotr8
_rotr16
_rotr
_lrotr
_rotr64
__va_start
vc**.
__fastfail
_setjmpex
setjmpex.h
va_start
stdarg.h
va_end
va_copy
abort
calloc
v*zz
exit
_Exit
malloc
realloc
v*v*z
free
strtod
dcC*c**
strtof
fcC*c**
strtold
LdcC*c**
strtol
LicC*c**i
strtoll
LLicC*c**i
strtoul
ULicC*c**i
strtoull
ULLicC*c**i
memcpy
string.h
memcmp
memmove
strcpy
strncpy
strcmp
strncmp
strcat
strncat
strxfrm
zc*cC*z
memchr
strchr
strcspn
strpbrk
strrchr
strspn
strstr
strtok
memset
strerror
strlen
printf
fp:0:
stdio.h
fprintf
fp:1:
snprintf
fp:2:
sprintf
ic*cC*.
vprintf
icC*a
fP:0:
vfprintf
iP*cC*a
fP:1:
vsnprintf
fP:2:
vsprintf
scanf
icC*R.
fs:0:
fscanf
iP*RcC*R.
fs:1:
sscanf
icC*RcC*R.
vscanf
icC*Ra
fS:0:
vfscanf
iP*RcC*Ra
fS:1:
vsscanf
icC*RcC*Ra
fopen
P*cC*cC*
fread
zv*zzP*
fwrite
zvC*zzP*
isalnum
ctype.h
isalpha
isblank
iscntrl
isdigit
isgraph
islower
isprint
ispunct
isspace
isupper
isxdigit
tolower
toupper
wcschr
wchar.h
wcscmp
wcslen
wcsncmp
wmemchr
wmemcmp
wmemcpy
wmemmove
setjmp
setjmp.h
longjmp
alloca
memccpy
v*v*vC*iz
mempcpy
stpcpy
stpncpy
strdup
strndup
index
strings.h
rindex
bzero
bcmp
strcasecmp
strncasecmp
_exit
unistd.h
vfork
pthread_create
fC<2,3>
pthread.h
_setjmp
__sigsetjmp
iSJi
sigsetjmp
savectx
getcontext
_longjmp
siglongjmp
vSJi
strlcpy
strlcat
objc_msgSend
GGH.
objc/message.h
objc_msgSend_fpret
LdGH.
objc_msgSend_fp2ret
XLdGH.
objc_msgSend_stret
vGH.
objc_msgSendSuper
GM*H.
objc_msgSendSuper_stret
vM*H.
objc_getClass
GcC*
objc/runtime.h
objc_getMetaClass
objc_enumerationMutation
objc_read_weak
objc/objc-auto.h
objc_assign_weak
GGG*
objc_assign_ivar
GGGY
objc_assign_global
objc_assign_strongCast
objc_exception_extract
objc/objc-exception.h
objc_exception_try_enter
objc_exception_try_exit
objc_exception_match
objc_exception_throw
objc_sync_enter
objc/objc-sync.h
objc_sync_exit
__builtin_objc_memmove_collectable
NSLog
Foundation/NSObjCRuntime.h
NSLogv
atan2
atan2f
atan2l
labs
llabs
copysign
copysignf
copysignl
fabs
fabsf
fabsl
finite
finitef
finitel
__finite
__finitef
__finitel
fmod
fmodf
fmodl
frexp
frexpf
frexpl
ldexp
ldexpf
ldexpl
modf
modff
modfl
nanf
nanl
powf
powl
acos
acosf
acosl
acosh
acoshf
acoshl
asin
asinf
asinl
asinh
asinhf
asinhl
atan
atanf
atanl
atanh
atanhf
atanhl
cbrt
cbrtf
cbrtl
ceil
ceilf
ceill
cosf
cosl
cosh
coshf
coshl
erff
erfl
erfc
erfcf
erfcl
expf
expl
exp2
exp2f
exp2l
expm1
expm1f
expm1l
fdim
fdimf
fdiml
floor
floorf
floorl
fmaf
fmal
fmax
fmaxf
fmaxl
fmin
fminf
fminl
hypot
hypotf
hypotl
ilogb
ilogbf
ilogbl
lgamma
lgammaf
lgammal
llrint
llrintf
llrintl
llround
llroundf
llroundl
logf
logl
log10
log10f
log10l
log1p
log1pf
log1pl
log2
log2f
log2l
logb
logbf
logbl
lrint
lrintf
lrintl
lround
lroundf
lroundl
nearbyint
nearbyintf
nearbyintl
nextafter
nextafterf
nextafterl
nexttoward
nexttowardf
nexttowardl
remainder
remainderf
remainderl
remquo
remquof
remquol
rint
rintf
rintl
round
roundf
roundl
scalbln
scalblnf
scalblnl
scalbn
scalbnf
scalbnl
sinf
sinl
sinh
sinhf
sinhl
sqrt
sqrtf
sqrtl
tanf
tanl
tanh
tanhf
tanhl
tgamma
tgammaf
tgammal
trunc
truncf
truncl
cabs
complex.h
cabsf
cabsl
cacos
cacosf
cacosl
cacosh
cacoshf
cacoshl
carg
cargf
cargl
casin
casinf
casinl
casinh
casinhf
casinhl
catan
catanf
catanl
catanh
catanhf
catanhl
ccos
ccosf
ccosl
ccosh
ccoshf
ccoshl
cexp
cexpf
cexpl
cimag
cimagf
cimagl
conj
conjf
conjl
clog
clogf
clogl
cproj
cprojf
cprojl
cpow
cpowf
cpowl
creal
crealf
creall
csin
csinf
csinl
csinh
csinhf
csinhl
csqrt
csqrtf
csqrtl
ctan
ctanf
ctanl
ctanh
ctanhf
ctanhl
__sinpi
__sinpif
__cospi
__cospif
__tanpi
__tanpif
__exp10
__exp10f
_Block_object_assign
vv*vC*iC
Blocks.h
_Block_object_dispose
vvC*iC
__builtin_annotation
__builtin_assume
__builtin_addcb
UcUcCUcCUcCUc*
__builtin_addcs
UsUsCUsCUsCUs*
__builtin_addc
UiUiCUiCUiCUi*
__builtin_addcl
ULiULiCULiCULiCULi*
__builtin_addcll
ULLiULLiCULLiCULLiCULLi*
__builtin_subcb
__builtin_subcs
__builtin_subc
__builtin_subcl
__builtin_subcll
__builtin_add_overflow
__builtin_sub_overflow
__builtin_mul_overflow
__builtin_uadd_overflow
bUiCUiCUi*
__builtin_uaddl_overflow
bULiCULiCULi*
__builtin_uaddll_overflow
bULLiCULLiCULLi*
__builtin_usub_overflow
__builtin_usubl_overflow
__builtin_usubll_overflow
__builtin_umul_overflow
__builtin_umull_overflow
__builtin_umulll_overflow
__builtin_sadd_overflow
bSiCSiCSi*
__builtin_saddl_overflow
bSLiCSLiCSLi*
__builtin_saddll_overflow
bSLLiCSLLiCSLLi*
__builtin_ssub_overflow
__builtin_ssubl_overflow
__builtin_ssubll_overflow
__builtin_smul_overflow
__builtin_smull_overflow
__builtin_smulll_overflow
__builtin_addressof
v*v&
__builtin_operator_new
__builtin_operator_delete
__builtin_char_memchr
c*cC*iz
__builtin_dump_struct
ivC*v*
__builtin_preserve_access_index
__builtin_is_aligned
bvC*z
__builtin_align_up
v*vC*z
__builtin_align_down
__builtin___get_unsafe_stack_start
__builtin___get_unsafe_stack_bottom
__builtin___get_unsafe_stack_top
__builtin___get_unsafe_stack_ptr
__builtin_nontemporal_store
__builtin_nontemporal_load
__builtin_coro_resume
__builtin_coro_destroy
__builtin_coro_done
__builtin_coro_promise
v*v*IiIb
__builtin_coro_size
__builtin_coro_frame
__builtin_coro_noop
__builtin_coro_free
__builtin_coro_id
v*Iiv*v*v*
__builtin_coro_alloc
__builtin_coro_begin
__builtin_coro_end
bv*Ib
__builtin_coro_suspend
__builtin_coro_param
bv*v*
__builtin_ptrauth_strip
v*v*i
__builtin_ptrauth_blend_discriminator
zv*i
__builtin_ptrauth_sign_constant
v*v*iv*
__builtin_ptrauth_sign_unauthenticated
__builtin_ptrauth_sign_generic_data
zv*v*
__builtin_ptrauth_auth_and_resign
v*v*iv*iv*
__builtin_ptrauth_auth
__builtin_ptrauth_string_discriminator
__builtin_virtual_member_address
v*v*v*
__builtin_load_member_function_pointer
read_pipe
write_pipe
reserve_read_pipe
reserve_write_pipe
commit_write_pipe
commit_read_pipe
sub_group_reserve_read_pipe
sub_group_reserve_write_pipe
sub_group_commit_read_pipe
sub_group_commit_write_pipe
work_group_reserve_read_pipe
work_group_reserve_write_pipe
work_group_commit_read_pipe
work_group_commit_write_pipe
get_pipe_num_packets
get_pipe_max_packets
enqueue_kernel
get_kernel_work_group_size
get_kernel_preferred_work_group_size_multiple
get_kernel_max_sub_group_size_for_ndrange
get_kernel_sub_group_count_for_ndrange
to_global
to_local
to_private
__builtin_store_half
vdh*
__builtin_store_halff
vfh*
__builtin_load_half
dhC*
__builtin_load_halff
fhC*
__builtin_os_log_format_buffer_size
zcC*.
p:0:nut
__builtin_os_log_format
v*v*cC*.
p:0:nt
omp_is_initial_device
__xray_customevent
vcC*z
__xray_typedevent
vzcC*z
__builtin_ms_va_start
vc*&.
__builtin_ms_va_end
vc*&
__builtin_ms_va_copy
vc*&c*&
__builtin_tmo_type_get_size
__builtin_tmo_type_get_alignment
unknown
10.0
10.1
10.2
11.0
compute_32
compute_37
compute_52
compute_53
compute_60
compute_61
compute_62
sm_70
compute_70
sm_72
compute_72
sm_75
compute_75
sm_80
compute_80
compute_amdgcn
MaximumDeploymentTarget
VersionMap
macOS_iOSMac
iOSMac_macOS
SDKSettings.json
invalid SDKSettings.json
'nonnull'
'_Nonnull'
'nullable'
'_Nullable'
'null_unspecified'
'_Null_unspecified'
_Nullable_result
diagnostic state at 
<unknown 
 pragma
 no-error
 no-fatal
 overruled
<can't format argument>
 <FileID 
 has_local_transitions
: state 
Lexical or Preprocessor Issue
Semantic Issue
Lambda Issue
Parse Issue
ARC Semantic Issue
ARC and @properties
ARC Casting Rules
ARC Parse Issue
ARC Weak References
ARC Restrictions
OpenMP Issue
Inline Assembly Issue
AST Deserialization Issue
Firebloom Pointer Attributes Issue
Modules Issue
Coroutines Issue
Concepts Issue
Dependency Directive Source Minimization Issue
Backend Issue
Refactoring Continuation Issue
API Notes Issue
Related Result Type Issue
Rename Issue
AST Serialization Issue
Nullability Issue
Generics Issue
User-Defined Issue
Refactoring Invocation Issue
VTable ABI Issue
Value Conversion Issue
Documentation Issue
ARC Retain Cycle
Deprecations
Format String Issue
Cocoa API Issue
#pragma message Directive
Instrumentation Issue
Unused Entity Issue
__is_lvalue_expr
__is_rvalue_expr
NumDirLookups
Number of directory lookups.
NumFileLookups
Number of file lookups.
NumDirCacheMisses
Number of directory cache misses.
NumFileCacheMisses
Number of file cache misses.
*** File Manager Stats:
 real files found, 
 real dirs found.
 virtual files found, 
 virtual dirs found.
 dir lookups, 
 dir cache misses.
 file lookups, 
 file cache misses.
delete
and_eq
bitand
bitor
not_eq
or_eq
xor_eq
co_await
_Nonnull
_Nullable
_Nullable_result
_Null_unspecified
not_keyword
defs
*** Identifier Table Stats:
# Identifiers:   %d
# Empty Buckets: %d
Hash density (#identifiers per bucket): %f
Ave identifier length: %f
Max identifier length: %d
finalize
retainCount
performSelectorInBackground
performSelectorOnMainThread
stringByAppendingFormat
stringWithFormat
new[]
delete[]
nonnull
nullable
null_unspecified
getLangStandardForKind() on unspecified kind
iso9899:199409
gnu89
gnu99
gnu11
gnu17
gnu2x
c++98
gnu++98
c++11
gnu++11
c++14
gnu++14
c++17
gnu++17
c++20
gnu++20
c++2b
gnu++2b
cl1.0
cl1.1
cl1.2
cl2.0
cl3.0
clc++
cuda
ISO C 1990
ISO C 1990 with amendment 1
ISO C 1990 with GNU extensions
ISO C 1999
ISO C 1999 with GNU extensions
ISO C 2011
ISO C 2011 with GNU extensions
ISO C 2017
ISO C 2017 with GNU extensions
Working Draft for ISO C2x
Working Draft for ISO C2x with GNU extensions
ISO C++ 1998 with amendments
ISO C++ 1998 with amendments and GNU extensions
ISO C++ 2011 with amendments
ISO C++ 2011 with amendments and GNU extensions
ISO C++ 2014 with amendments
ISO C++ 2014 with amendments and GNU extensions
ISO C++ 2017 with amendments
ISO C++ 2017 with amendments and GNU extensions
ISO C++ 2020 DIS
ISO C++ 2020 DIS with GNU extensions
Working draft for ISO C++ 2023 DIS
Working draft for ISO C++ 2023 DIS with GNU extensions
OpenCL 1.0
OpenCL 1.1
OpenCL 1.2
OpenCL 2.0
OpenCL 3.0
C++ for OpenCL
NVIDIA CUDA(tm)
_Builtin_stddef_max_align_t
ptrauth
explicit 
 [system]
 [extern_c]
 [swift_infer_import_as_member]
umbrella header "
umbrella "
config_macros 
[exhaustive]
textual 
private textual 
exclude 
header "
" { size 
 mtime 
 size 
use 
link 
conflict 
module * {
export *
macosx
macosx-fragile
watchos
bridgeos
gnustep
objfw
firstprivate
master
close
spread
guided
nonmonotonic
mutexinoutset
depobj
uval
tofrom
present
aggregate
relaxed
nohost
conditional
ancestor
device_num
inscan
task
global
type
undefined-trap
implicit-integer-truncation
implicit-integer-arithmetic-value-change
implicit-conversion
bounds
 <Spelling=
UTF-32 (BE)
UTF-32 (LE)
UTF-16 (BE)
UTF-16 (LE)
UTF-7
UTF-1
UTF-EBCDIC
SCSU
BOCU-1
GB-18030
<<<INVALID BUFFER>>
<<<<<INVALID SOURCE LOCATION>>>>>
<<<<INVALID BUFFER>>>>
<invalid loc>
<invalid buffer>
*** Source Manager Stats:
 files mapped, 
 mem buffers mapped.
 local SLocEntry's allocated (
 bytes of capacity), 
B of Sloc address space used.
 loaded SLocEntries allocated, 
 bytes of files mapped, 
 files with line #'s computed, 
 files with macro args computed.
FileID scans: 
 linear, 
 binary.
sramecc
xnack
cf-protection=branch
cf-protection=return
signed char
unsigned char
short
unsigned short
unsigned int
long int
long unsigned int
long long int
long long unsigned int
memory
__tune_
__declspec(a)
__attribute__((a))
__attribute__((__
__))
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-i32:32:32-f32:32:32-i64:32-f64:32-a:0:32-n32
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-i64:32-f64:32-a:0:32-n32
e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048
E-m:e-p:32:32-i64:64-a:0:32-n32-S64
e-P1-p:16:8-i8:8-i16:8-i32:8-i64:8-f32:8-f64:8-n8-a:8
E-m:e-p:64:64-i64:64-i128:128-n32:64-S128
e-m:e-p:64:64-i64:64-i128:128-n32:64-S128
e-m:e-p:16:16-i32:16-i64:16-f32:16-f64:16-a:8-n8:16-S16
e-m:e-v128:32-v16:16-v32:32-v96:32-n8:16:32:64-S128
E-m:o-p:32:32-f64:32:64-n32
E-m:a-p:32:32-i64:64-n32
e-m:e-p:32:32-i64:64-n32
E-m:e-p:32:32-i64:64-n32
u9__ieee128
power7
pwr7
power8
pwr8
power9
pwr9
power10
pwr10
_IBMR2
_POWER
_AIX
__EXTABI__
_AIX32
_AIX41
_AIX43
_AIX50
_AIX51
_AIX52
_AIX53
_AIX61
_AIX71
_AIX72
_LONG_LONG
_THREAD_SAFE
__64BIT__
_WCHAR_T
E-m:o-i64:64-n32:64
E-m:a-i64:64-n32:64
e-m:e-i64:64-n32:64
E-m:e-i64:64-n32:64
-v256:256:256-v512:512:512
e-m:e-p:32:32-i64:64-n32-S128
e-m:e-p:64:64-i64:64-i128:128-n64-S128
E-m:e-p:32:32-i64:64-f128:64-n32-S64
e-m:e-p:32:32-i64:64-f128:64-n32-S64
E-m:e-i64:64-n32:64-S128
E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-a:8:16-n32:64
E-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-v256:32:32-v512:32:32-v1024:32:32-a0:0:32-n32
e-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-v256:32:32-v512:32:32-v1024:32:32-a0:0:32-n32
e-m:o-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:128-n8:16:32-S128
e-m:o-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:32-n8:16:32-S128
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:32-n8:16:32-S128
xmm0
~{dirflag},~{fpsr},~{flags}
no-mmx
linux
__ELF__
__ANDROID__
__ANDROID_MIN_SDK_VERSION__
__ANDROID_API__
__gnu_linux__
_REENTRANT
_GNU_SOURCE
__FLOAT128__
__NetBSD__
__unix__
__OpenBSD__
e-m:x-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:32-n8:16:32-a:0:32-S32
_X86_
__CYGWIN__
__CYGWIN32__
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:32-n8:16:32-a:0:32-S32
_M_IX86
__HAIKU__
__INTEL__
__rtems__
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:32-f64:32-f128:32-n8:16:32-a:0:32-S32
__iamcu
__iamcu__
e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
__x86_64__
__CYGWIN64__
_M_X64
_M_AMD64
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
u6__bf16
__CloudABI__
__STDC_ISO_10646__
201206L
__FreeBSD__
__FreeBSD_cc_version
__KPRINTF_ATTRIBUTE__
__STDC_MB_MIGHT_NEQ_WC__
__Fuchsia__
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-n8:16:32-S128
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-n8:16:32:64-S128
e-p:32:32-i64:64
__native_client__
~{$1}
cnmipsp
+single-float
+micromips
+dspr2
+msa
+nomadd4
m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64
m:e-p:32:32-i8:8:32-i16:16:32-i64:64-n32:64-S128
m:e-i8:8:32-i16:16:32-i64:64-n32:64-S128
$f10
$f11
$f12
$f13
$f14
$f15
$f16
$f17
$f18
$f19
$f20
$f21
$f22
$f23
$f24
$f25
$f26
$f27
$f28
$f29
$f30
$f31
$fcc0
$fcc1
$fcc2
$fcc3
$fcc4
$fcc5
$fcc6
$fcc7
$ac1hi
$ac1lo
$ac2hi
$ac2lo
$ac3hi
$ac3lo
$w10
$w11
$w12
$w13
$w14
$w15
$w16
$w17
$w18
$w19
$w20
$w21
$w22
$w23
$w24
$w25
$w26
$w27
$w28
$w29
$w30
$w31
$msair
$msacsr
$msaaccess
$msasave
$msamodify
$msarequest
$msamap
$msaunmap
E-m:e-p:32:32-i64:64-n32:64
__PPC__
__PPU__
__CELLOS_LV2__
__LP32__
_ARCH_PPC64
__powerpc64__
__svr4__
__SVR4
_XOPEN_SOURCE
__C99FEATURES__
_FILE_OFFSET_BITS
_LARGEFILE_SOURCE
_LARGEFILE64_SOURCE
__EXTENSIONS__
transactional-execution
vector-enhancements-1
vector-enhancements-2
E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64
_OPEN_DEFAULT
_UNIX03_WITHDRAWN
__370__
__BFP__
__BOOL__
__LONGNAME__
__MVS__
__THW_370__
__THW_BIG_ENDIAN__
__TOS_390__
__TOS_MVS__
__XPLINK__
__DLL__
_MI_BUILTIN
_EXT
__Ananas__
__DragonFly__
__DragonFly_cc_version
100001
__tune_i386__
__FreeBSD_kernel__
__GLIBC__
__minix
_EM_WSIZE
_EM_PSIZE
_EM_SSIZE
_EM_LSIZE
_EM_FSIZE
_EM_DSIZE
__GNU__
__gnu_hurd__
__MACH__
900001
__SCE__
__ORBIS__
e-m:e-p:32:32-i64:64-n32:64-S128
__wasi__
__EMSCRIPTEN__
e-m:e-p:64:64-i64:64-n32:64-S128
e-m:e-i64:64-n32:64-S128-v64:64:64-v128:64:64-v256:64:64-v512:64:64-v1024:64:64-v2048:64:64-v4096:64:64-v8192:64:64-v16384:64:64
sx10
sx11
sx12
sx13
sx14
sx15
sx16
sx17
sx18
sx19
sx20
sx21
sx22
sx23
sx24
sx25
sx26
sx27
sx28
sx29
sx30
sx31
sx32
sx33
sx34
sx35
sx36
sx37
sx38
sx39
sx40
sx41
sx42
sx43
sx44
sx45
sx46
sx47
sx48
sx49
sx50
sx51
sx52
sx53
sx54
sx55
sx56
sx57
sx58
sx59
sx60
sx61
sx62
sx63
outer
__builtin_neon___a32_vcvt_bf16_v
V8ScV16Sci
__builtin_neon___a64_vcvtq_low_bf16_v
V16ScV16Sci
__builtin_neon_splat_lane_v
V8ScV8ScIii
__builtin_neon_splat_laneq_v
V8ScV16ScIii
__builtin_neon_splatq_lane_v
V16ScV8ScIii
__builtin_neon_splatq_laneq_v
V16ScV16ScIii
__builtin_neon_vabd_v
V8ScV8ScV8Sci
__builtin_neon_vabdd_f64
__builtin_neon_vabdq_v
V16ScV16ScV16Sci
__builtin_neon_vabds_f32
__builtin_neon_vabs_v
V8ScV8Sci
__builtin_neon_vabsd_s64
WiWi
__builtin_neon_vabsq_v
__builtin_neon_vaddd_s64
WiWiWi
__builtin_neon_vaddd_u64
UWiUWiUWi
__builtin_neon_vaddhn_v
V8ScV16ScV16Sci
__builtin_neon_vaddlv_s16
iV4s
__builtin_neon_vaddlv_s32
WiV2i
__builtin_neon_vaddlv_s8
sV8Sc
__builtin_neon_vaddlv_u16
UiV4Us
__builtin_neon_vaddlv_u32
UWiV2Ui
__builtin_neon_vaddlv_u8
UsV8Uc
__builtin_neon_vaddlvq_s16
iV8s
__builtin_neon_vaddlvq_s32
WiV4i
__builtin_neon_vaddlvq_s8
sV16Sc
__builtin_neon_vaddlvq_u16
UiV8Us
__builtin_neon_vaddlvq_u32
UWiV4Ui
__builtin_neon_vaddlvq_u8
UsV16Uc
__builtin_neon_vaddv_f32
fV2f
__builtin_neon_vaddv_s16
sV4s
__builtin_neon_vaddv_s32
iV2i
__builtin_neon_vaddv_s8
ScV8Sc
__builtin_neon_vaddv_u16
UsV4Us
__builtin_neon_vaddv_u32
UiV2Ui
__builtin_neon_vaddv_u8
UcV8Uc
__builtin_neon_vaddvq_f32
fV4f
__builtin_neon_vaddvq_f64
dV2d
__builtin_neon_vaddvq_s16
sV8s
__builtin_neon_vaddvq_s32
iV4i
__builtin_neon_vaddvq_s64
WiV2Wi
__builtin_neon_vaddvq_s8
ScV16Sc
__builtin_neon_vaddvq_u16
UsV8Us
__builtin_neon_vaddvq_u32
UiV4Ui
__builtin_neon_vaddvq_u64
UWiV2UWi
__builtin_neon_vaddvq_u8
UcV16Uc
__builtin_neon_vaesdq_v
__builtin_neon_vaeseq_v
__builtin_neon_vaesimcq_v
__builtin_neon_vaesmcq_v
__builtin_neon_vbfdot_v
V8ScV8ScV8ScV8Sci
__builtin_neon_vbfdotq_v
V16ScV16ScV16ScV16Sci
__builtin_neon_vbfmlalbq_v
__builtin_neon_vbfmlaltq_v
__builtin_neon_vbfmmlaq_v
__builtin_neon_vbsl_v
__builtin_neon_vbslq_v
__builtin_neon_vcadd_rot270_v
__builtin_neon_vcadd_rot90_v
__builtin_neon_vcaddq_rot270_v
__builtin_neon_vcaddq_rot90_v
__builtin_neon_vcage_v
__builtin_neon_vcaged_f64
UWidd
__builtin_neon_vcageq_v
__builtin_neon_vcages_f32
Uiff
__builtin_neon_vcagt_v
__builtin_neon_vcagtd_f64
__builtin_neon_vcagtq_v
__builtin_neon_vcagts_f32
__builtin_neon_vcale_v
__builtin_neon_vcaled_f64
__builtin_neon_vcaleq_v
__builtin_neon_vcales_f32
__builtin_neon_vcalt_v
__builtin_neon_vcaltd_f64
__builtin_neon_vcaltq_v
__builtin_neon_vcalts_f32
__builtin_neon_vceqd_f64
__builtin_neon_vceqd_s64
UWiWiWi
__builtin_neon_vceqd_u64
__builtin_neon_vceqs_f32
__builtin_neon_vceqz_v
__builtin_neon_vceqzd_f64
UWid
__builtin_neon_vceqzd_s64
UWiWi
__builtin_neon_vceqzd_u64
UWiUWi
__builtin_neon_vceqzq_v
__builtin_neon_vceqzs_f32
__builtin_neon_vcged_f64
__builtin_neon_vcged_s64
__builtin_neon_vcged_u64
__builtin_neon_vcges_f32
__builtin_neon_vcgez_v
__builtin_neon_vcgezd_f64
__builtin_neon_vcgezd_s64
__builtin_neon_vcgezq_v
__builtin_neon_vcgezs_f32
__builtin_neon_vcgtd_f64
__builtin_neon_vcgtd_s64
__builtin_neon_vcgtd_u64
__builtin_neon_vcgts_f32
__builtin_neon_vcgtz_v
__builtin_neon_vcgtzd_f64
__builtin_neon_vcgtzd_s64
__builtin_neon_vcgtzq_v
__builtin_neon_vcgtzs_f32
__builtin_neon_vcled_f64
__builtin_neon_vcled_s64
__builtin_neon_vcled_u64
__builtin_neon_vcles_f32
__builtin_neon_vclez_v
__builtin_neon_vclezd_f64
__builtin_neon_vclezd_s64
__builtin_neon_vclezq_v
__builtin_neon_vclezs_f32
__builtin_neon_vcls_v
__builtin_neon_vclsq_v
__builtin_neon_vcltd_f64
__builtin_neon_vcltd_s64
__builtin_neon_vcltd_u64
__builtin_neon_vclts_f32
__builtin_neon_vcltz_v
__builtin_neon_vcltzd_f64
__builtin_neon_vcltzd_s64
__builtin_neon_vcltzq_v
__builtin_neon_vcltzs_f32
__builtin_neon_vclz_v
__builtin_neon_vclzq_v
__builtin_neon_vcmla_rot180_v
__builtin_neon_vcmla_rot270_v
__builtin_neon_vcmla_rot90_v
__builtin_neon_vcmla_v
__builtin_neon_vcmlaq_rot180_v
__builtin_neon_vcmlaq_rot270_v
__builtin_neon_vcmlaq_rot90_v
__builtin_neon_vcmlaq_v
__builtin_neon_vcnt_v
__builtin_neon_vcntq_v
__builtin_neon_vcvt_f16_f32
__builtin_neon_vcvt_f16_v
__builtin_neon_vcvt_f32_f16
V16ScV8Sci
__builtin_neon_vcvt_f32_f64
__builtin_neon_vcvt_f32_v
__builtin_neon_vcvt_f64_f32
__builtin_neon_vcvt_f64_v
__builtin_neon_vcvt_n_f16_v
__builtin_neon_vcvt_n_f32_v
__builtin_neon_vcvt_n_f64_v
__builtin_neon_vcvt_n_s16_v
__builtin_neon_vcvt_n_s32_v
__builtin_neon_vcvt_n_s64_v
__builtin_neon_vcvt_n_u16_v
__builtin_neon_vcvt_n_u32_v
__builtin_neon_vcvt_n_u64_v
__builtin_neon_vcvt_s16_v
__builtin_neon_vcvt_s32_v
__builtin_neon_vcvt_s64_v
__builtin_neon_vcvt_u16_v
__builtin_neon_vcvt_u32_v
__builtin_neon_vcvt_u64_v
__builtin_neon_vcvta_s16_v
__builtin_neon_vcvta_s32_v
__builtin_neon_vcvta_s64_v
__builtin_neon_vcvta_u16_v
__builtin_neon_vcvta_u32_v
__builtin_neon_vcvta_u64_v
__builtin_neon_vcvtad_s64_f64
__builtin_neon_vcvtad_u64_f64
__builtin_neon_vcvtaq_s16_v
__builtin_neon_vcvtaq_s32_v
__builtin_neon_vcvtaq_s64_v
__builtin_neon_vcvtaq_u16_v
__builtin_neon_vcvtaq_u32_v
__builtin_neon_vcvtaq_u64_v
__builtin_neon_vcvtas_s32_f32
__builtin_neon_vcvtas_u32_f32
__builtin_neon_vcvtd_f64_s64
__builtin_neon_vcvtd_f64_u64
dUWi
__builtin_neon_vcvtd_n_f64_s64
dWiIi
__builtin_neon_vcvtd_n_f64_u64
dUWiIi
__builtin_neon_vcvtd_n_s64_f64
WidIi
__builtin_neon_vcvtd_n_u64_f64
UWidIi
__builtin_neon_vcvtd_s64_f64
__builtin_neon_vcvtd_u64_f64
__builtin_neon_vcvth_bf16_f32
__builtin_neon_vcvtm_s16_v
__builtin_neon_vcvtm_s32_v
__builtin_neon_vcvtm_s64_v
__builtin_neon_vcvtm_u16_v
__builtin_neon_vcvtm_u32_v
__builtin_neon_vcvtm_u64_v
__builtin_neon_vcvtmd_s64_f64
__builtin_neon_vcvtmd_u64_f64
__builtin_neon_vcvtmq_s16_v
__builtin_neon_vcvtmq_s32_v
__builtin_neon_vcvtmq_s64_v
__builtin_neon_vcvtmq_u16_v
__builtin_neon_vcvtmq_u32_v
__builtin_neon_vcvtmq_u64_v
__builtin_neon_vcvtms_s32_f32
__builtin_neon_vcvtms_u32_f32
__builtin_neon_vcvtn_s16_v
__builtin_neon_vcvtn_s32_v
__builtin_neon_vcvtn_s64_v
__builtin_neon_vcvtn_u16_v
__builtin_neon_vcvtn_u32_v
__builtin_neon_vcvtn_u64_v
__builtin_neon_vcvtnd_s64_f64
__builtin_neon_vcvtnd_u64_f64
__builtin_neon_vcvtnq_s16_v
__builtin_neon_vcvtnq_s32_v
__builtin_neon_vcvtnq_s64_v
__builtin_neon_vcvtnq_u16_v
__builtin_neon_vcvtnq_u32_v
__builtin_neon_vcvtnq_u64_v
__builtin_neon_vcvtns_s32_f32
__builtin_neon_vcvtns_u32_f32
__builtin_neon_vcvtp_s16_v
__builtin_neon_vcvtp_s32_v
__builtin_neon_vcvtp_s64_v
__builtin_neon_vcvtp_u16_v
__builtin_neon_vcvtp_u32_v
__builtin_neon_vcvtp_u64_v
__builtin_neon_vcvtpd_s64_f64
__builtin_neon_vcvtpd_u64_f64
__builtin_neon_vcvtpq_s16_v
__builtin_neon_vcvtpq_s32_v
__builtin_neon_vcvtpq_s64_v
__builtin_neon_vcvtpq_u16_v
__builtin_neon_vcvtpq_u32_v
__builtin_neon_vcvtpq_u64_v
__builtin_neon_vcvtps_s32_f32
__builtin_neon_vcvtps_u32_f32
__builtin_neon_vcvtq_f16_v
__builtin_neon_vcvtq_f32_v
__builtin_neon_vcvtq_f64_v
__builtin_neon_vcvtq_high_bf16_v
__builtin_neon_vcvtq_n_f16_v
__builtin_neon_vcvtq_n_f32_v
__builtin_neon_vcvtq_n_f64_v
__builtin_neon_vcvtq_n_s16_v
__builtin_neon_vcvtq_n_s32_v
__builtin_neon_vcvtq_n_s64_v
__builtin_neon_vcvtq_n_u16_v
__builtin_neon_vcvtq_n_u32_v
__builtin_neon_vcvtq_n_u64_v
__builtin_neon_vcvtq_s16_v
__builtin_neon_vcvtq_s32_v
__builtin_neon_vcvtq_s64_v
__builtin_neon_vcvtq_u16_v
__builtin_neon_vcvtq_u32_v
__builtin_neon_vcvtq_u64_v
__builtin_neon_vcvts_f32_s32
__builtin_neon_vcvts_f32_u32
__builtin_neon_vcvts_n_f32_s32
fiIi
__builtin_neon_vcvts_n_f32_u32
fUiIi
__builtin_neon_vcvts_n_s32_f32
ifIi
__builtin_neon_vcvts_n_u32_f32
UifIi
__builtin_neon_vcvts_s32_f32
__builtin_neon_vcvts_u32_f32
__builtin_neon_vcvtx_f32_v
__builtin_neon_vcvtxd_f32_f64
__builtin_neon_vdot_v
__builtin_neon_vdotq_v
__builtin_neon_vdupb_lane_i8
UcV8ScIi
__builtin_neon_vdupb_laneq_i8
UcV16ScIi
__builtin_neon_vdupd_lane_f64
dV1dIi
__builtin_neon_vdupd_lane_i64
UWiV1WiIi
__builtin_neon_vdupd_laneq_f64
dV2dIi
__builtin_neon_vdupd_laneq_i64
UWiV2WiIi
__builtin_neon_vduph_lane_bf16
yV4yIi
__builtin_neon_vduph_lane_f16
hV4hIi
__builtin_neon_vduph_lane_i16
UsV4sIi
__builtin_neon_vduph_laneq_bf16
yV8yIi
__builtin_neon_vduph_laneq_f16
hV8hIi
__builtin_neon_vduph_laneq_i16
UsV8sIi
__builtin_neon_vdups_lane_f32
fV2fIi
__builtin_neon_vdups_lane_i32
UiV2iIi
__builtin_neon_vdups_laneq_f32
fV4fIi
__builtin_neon_vdups_laneq_i32
UiV4iIi
__builtin_neon_vext_v
V8ScV8ScV8ScIii
__builtin_neon_vextq_v
V16ScV16ScV16ScIii
__builtin_neon_vfma_lane_v
V8ScV8ScV8ScV8ScIii
__builtin_neon_vfma_laneq_v
V8ScV8ScV8ScV16ScIii
__builtin_neon_vfma_v
__builtin_neon_vfmad_lane_f64
dddV1dIi
__builtin_neon_vfmad_laneq_f64
dddV2dIi
__builtin_neon_vfmah_lane_f16
hhhV4hIi
__builtin_neon_vfmah_laneq_f16
hhhV8hIi
__builtin_neon_vfmaq_lane_v
V16ScV16ScV16ScV8ScIii
__builtin_neon_vfmaq_laneq_v
V16ScV16ScV16ScV16ScIii
__builtin_neon_vfmaq_v
__builtin_neon_vfmas_lane_f32
fffV2fIi
__builtin_neon_vfmas_laneq_f32
fffV4fIi
__builtin_neon_vfmlal_high_v
__builtin_neon_vfmlal_low_v
__builtin_neon_vfmlalq_high_v
__builtin_neon_vfmlalq_low_v
__builtin_neon_vfmlsl_high_v
__builtin_neon_vfmlsl_low_v
__builtin_neon_vfmlslq_high_v
__builtin_neon_vfmlslq_low_v
__builtin_neon_vget_lane_bf16
__builtin_neon_vget_lane_f32
__builtin_neon_vget_lane_f64
__builtin_neon_vget_lane_i16
__builtin_neon_vget_lane_i32
__builtin_neon_vget_lane_i64
__builtin_neon_vget_lane_i8
__builtin_neon_vgetq_lane_bf16
__builtin_neon_vgetq_lane_f32
__builtin_neon_vgetq_lane_f64
__builtin_neon_vgetq_lane_i16
__builtin_neon_vgetq_lane_i32
__builtin_neon_vgetq_lane_i64
__builtin_neon_vgetq_lane_i8
__builtin_neon_vhadd_v
__builtin_neon_vhaddq_v
__builtin_neon_vhsub_v
__builtin_neon_vhsubq_v
__builtin_neon_vld1_dup_v
V8ScvC*i
__builtin_neon_vld1_lane_v
V8ScvC*V8ScIii
__builtin_neon_vld1_v
__builtin_neon_vld1_x2_v
vv*vC*i
__builtin_neon_vld1_x3_v
__builtin_neon_vld1_x4_v
__builtin_neon_vld1q_dup_v
V16ScvC*i
__builtin_neon_vld1q_lane_v
V16ScvC*V16ScIii
__builtin_neon_vld1q_v
__builtin_neon_vld1q_x2_v
__builtin_neon_vld1q_x3_v
__builtin_neon_vld1q_x4_v
__builtin_neon_vld2_dup_v
__builtin_neon_vld2_lane_v
vv*vC*V8ScV8ScIii
__builtin_neon_vld2_v
__builtin_neon_vld2q_dup_v
__builtin_neon_vld2q_lane_v
vv*vC*V16ScV16ScIii
__builtin_neon_vld2q_v
__builtin_neon_vld3_dup_v
__builtin_neon_vld3_lane_v
vv*vC*V8ScV8ScV8ScIii
__builtin_neon_vld3_v
__builtin_neon_vld3q_dup_v
__builtin_neon_vld3q_lane_v
vv*vC*V16ScV16ScV16ScIii
__builtin_neon_vld3q_v
__builtin_neon_vld4_dup_v
__builtin_neon_vld4_lane_v
vv*vC*V8ScV8ScV8ScV8ScIii
__builtin_neon_vld4_v
__builtin_neon_vld4q_dup_v
__builtin_neon_vld4q_lane_v
vv*vC*V16ScV16ScV16ScV16ScIii
__builtin_neon_vld4q_v
__builtin_neon_vldrq_p128
ULLLivC*
__builtin_neon_vmax_v
__builtin_neon_vmaxnm_v
__builtin_neon_vmaxnmq_v
__builtin_neon_vmaxnmv_f16
hV8Sc
__builtin_neon_vmaxnmv_f32
__builtin_neon_vmaxnmvq_f16
hV16Sc
__builtin_neon_vmaxnmvq_f32
__builtin_neon_vmaxnmvq_f64
__builtin_neon_vmaxq_v
__builtin_neon_vmaxv_f16
__builtin_neon_vmaxv_f32
__builtin_neon_vmaxv_s16
__builtin_neon_vmaxv_s32
__builtin_neon_vmaxv_s8
__builtin_neon_vmaxv_u16
__builtin_neon_vmaxv_u32
__builtin_neon_vmaxv_u8
__builtin_neon_vmaxvq_f16
__builtin_neon_vmaxvq_f32
__builtin_neon_vmaxvq_f64
__builtin_neon_vmaxvq_s16
__builtin_neon_vmaxvq_s32
__builtin_neon_vmaxvq_s8
__builtin_neon_vmaxvq_u16
__builtin_neon_vmaxvq_u32
__builtin_neon_vmaxvq_u8
__builtin_neon_vmin_v
__builtin_neon_vminnm_v
__builtin_neon_vminnmq_v
__builtin_neon_vminnmv_f16
__builtin_neon_vminnmv_f32
__builtin_neon_vminnmvq_f16
__builtin_neon_vminnmvq_f32
__builtin_neon_vminnmvq_f64
__builtin_neon_vminq_v
__builtin_neon_vminv_f16
__builtin_neon_vminv_f32
__builtin_neon_vminv_s16
__builtin_neon_vminv_s32
__builtin_neon_vminv_s8
__builtin_neon_vminv_u16
__builtin_neon_vminv_u32
__builtin_neon_vminv_u8
__builtin_neon_vminvq_f16
__builtin_neon_vminvq_f32
__builtin_neon_vminvq_f64
__builtin_neon_vminvq_s16
__builtin_neon_vminvq_s32
__builtin_neon_vminvq_s8
__builtin_neon_vminvq_u16
__builtin_neon_vminvq_u32
__builtin_neon_vminvq_u8
__builtin_neon_vmmlaq_v
__builtin_neon_vmovl_v
__builtin_neon_vmovn_v
__builtin_neon_vmul_lane_v
__builtin_neon_vmul_laneq_v
V8ScV8ScV16ScIii
__builtin_neon_vmul_n_f64
V1dV1dd
__builtin_neon_vmul_v
__builtin_neon_vmull_p64
ULLLiUWiUWi
__builtin_neon_vmull_v
V16ScV8ScV8Sci
__builtin_neon_vmulq_v
__builtin_neon_vmulx_v
__builtin_neon_vmulxd_f64
__builtin_neon_vmulxh_lane_f16
hhV4hIi
__builtin_neon_vmulxh_laneq_f16
hhV8hIi
__builtin_neon_vmulxq_v
__builtin_neon_vmulxs_f32
__builtin_neon_vnegd_s64
__builtin_neon_vpadal_v
__builtin_neon_vpadalq_v
__builtin_neon_vpadd_v
__builtin_neon_vpaddd_f64
__builtin_neon_vpaddd_s64
__builtin_neon_vpaddd_u64
__builtin_neon_vpaddl_v
__builtin_neon_vpaddlq_v
__builtin_neon_vpaddq_v
__builtin_neon_vpadds_f32
__builtin_neon_vpmax_v
__builtin_neon_vpmaxnm_v
__builtin_neon_vpmaxnmq_v
__builtin_neon_vpmaxnmqd_f64
__builtin_neon_vpmaxnms_f32
__builtin_neon_vpmaxq_v
__builtin_neon_vpmaxqd_f64
__builtin_neon_vpmaxs_f32
__builtin_neon_vpmin_v
__builtin_neon_vpminnm_v
__builtin_neon_vpminnmq_v
__builtin_neon_vpminnmqd_f64
__builtin_neon_vpminnms_f32
__builtin_neon_vpminq_v
__builtin_neon_vpminqd_f64
__builtin_neon_vpmins_f32
__builtin_neon_vqabs_v
__builtin_neon_vqabsb_s8
ScSc
__builtin_neon_vqabsd_s64
__builtin_neon_vqabsh_s16
__builtin_neon_vqabsq_v
__builtin_neon_vqabss_s32
__builtin_neon_vqadd_v
__builtin_neon_vqaddb_s8
ScScSc
__builtin_neon_vqaddb_u8
UcUcUc
__builtin_neon_vqaddd_s64
__builtin_neon_vqaddd_u64
__builtin_neon_vqaddh_s16
__builtin_neon_vqaddh_u16
UsUsUs
__builtin_neon_vqaddq_v
__builtin_neon_vqadds_s32
__builtin_neon_vqadds_u32
UiUiUi
__builtin_neon_vqdmlal_v
V16ScV16ScV8ScV8Sci
__builtin_neon_vqdmlalh_lane_s16
iisV4sIi
__builtin_neon_vqdmlalh_laneq_s16
iisV8sIi
__builtin_neon_vqdmlalh_s16
iiss
__builtin_neon_vqdmlals_lane_s32
WiWiiV2iIi
__builtin_neon_vqdmlals_laneq_s32
WiWiiV4iIi
__builtin_neon_vqdmlals_s32
WiWiii
__builtin_neon_vqdmlsl_v
__builtin_neon_vqdmlslh_lane_s16
__builtin_neon_vqdmlslh_laneq_s16
__builtin_neon_vqdmlslh_s16
__builtin_neon_vqdmlsls_lane_s32
__builtin_neon_vqdmlsls_laneq_s32
__builtin_neon_vqdmlsls_s32
__builtin_neon_vqdmulh_lane_v
__builtin_neon_vqdmulh_laneq_v
__builtin_neon_vqdmulh_v
__builtin_neon_vqdmulhh_s16
__builtin_neon_vqdmulhq_lane_v
V16ScV16ScV8ScIii
__builtin_neon_vqdmulhq_laneq_v
__builtin_neon_vqdmulhq_v
__builtin_neon_vqdmulhs_s32
__builtin_neon_vqdmull_v
__builtin_neon_vqdmullh_s16
__builtin_neon_vqdmulls_s32
Wiii
__builtin_neon_vqmovn_v
__builtin_neon_vqmovnd_s64
__builtin_neon_vqmovnd_u64
UiUWi
__builtin_neon_vqmovnh_s16
__builtin_neon_vqmovnh_u16
UcUs
__builtin_neon_vqmovns_s32
__builtin_neon_vqmovns_u32
UsUi
__builtin_neon_vqmovun_v
__builtin_neon_vqmovund_s64
UiWi
__builtin_neon_vqmovunh_s16
__builtin_neon_vqmovuns_s32
__builtin_neon_vqneg_v
__builtin_neon_vqnegb_s8
__builtin_neon_vqnegd_s64
__builtin_neon_vqnegh_s16
__builtin_neon_vqnegq_v
__builtin_neon_vqnegs_s32
__builtin_neon_vqrdmulh_lane_v
__builtin_neon_vqrdmulh_laneq_v
__builtin_neon_vqrdmulh_v
__builtin_neon_vqrdmulhh_s16
__builtin_neon_vqrdmulhq_lane_v
__builtin_neon_vqrdmulhq_laneq_v
__builtin_neon_vqrdmulhq_v
__builtin_neon_vqrdmulhs_s32
__builtin_neon_vqrshl_v
__builtin_neon_vqrshlb_s8
__builtin_neon_vqrshlb_u8
UcUcSc
__builtin_neon_vqrshld_s64
__builtin_neon_vqrshld_u64
UWiUWiWi
__builtin_neon_vqrshlh_s16
__builtin_neon_vqrshlh_u16
UsUss
__builtin_neon_vqrshlq_v
__builtin_neon_vqrshls_s32
__builtin_neon_vqrshls_u32
UiUii
__builtin_neon_vqrshrn_n_v
__builtin_neon_vqrshrnd_n_s64
iWiIi
__builtin_neon_vqrshrnd_n_u64
UiUWiIi
__builtin_neon_vqrshrnh_n_s16
ScsIi
__builtin_neon_vqrshrnh_n_u16
UcUsIi
__builtin_neon_vqrshrns_n_s32
siIi
__builtin_neon_vqrshrns_n_u32
UsUiIi
__builtin_neon_vqrshrun_n_v
__builtin_neon_vqrshrund_n_s64
__builtin_neon_vqrshrunh_n_s16
__builtin_neon_vqrshruns_n_s32
__builtin_neon_vqshl_n_v
__builtin_neon_vqshl_v
__builtin_neon_vqshlb_n_s8
ScScIi
__builtin_neon_vqshlb_n_u8
UcUcIi
__builtin_neon_vqshlb_s8
__builtin_neon_vqshlb_u8
__builtin_neon_vqshld_n_s64
WiWiIi
__builtin_neon_vqshld_n_u64
UWiUWiIi
__builtin_neon_vqshld_s64
__builtin_neon_vqshld_u64
__builtin_neon_vqshlh_n_s16
ssIi
__builtin_neon_vqshlh_n_u16
UsUsIi
__builtin_neon_vqshlh_s16
__builtin_neon_vqshlh_u16
__builtin_neon_vqshlq_n_v
__builtin_neon_vqshlq_v
__builtin_neon_vqshls_n_s32
iiIi
__builtin_neon_vqshls_n_u32
UiUiIi
__builtin_neon_vqshls_s32
__builtin_neon_vqshls_u32
__builtin_neon_vqshlu_n_v
__builtin_neon_vqshlub_n_s8
__builtin_neon_vqshlud_n_s64
__builtin_neon_vqshluh_n_s16
__builtin_neon_vqshluq_n_v
__builtin_neon_vqshlus_n_s32
__builtin_neon_vqshrn_n_v
__builtin_neon_vqshrnd_n_s64
__builtin_neon_vqshrnd_n_u64
__builtin_neon_vqshrnh_n_s16
__builtin_neon_vqshrnh_n_u16
__builtin_neon_vqshrns_n_s32
__builtin_neon_vqshrns_n_u32
__builtin_neon_vqshrun_n_v
__builtin_neon_vqshrund_n_s64
__builtin_neon_vqshrunh_n_s16
__builtin_neon_vqshruns_n_s32
__builtin_neon_vqsub_v
__builtin_neon_vqsubb_s8
__builtin_neon_vqsubb_u8
__builtin_neon_vqsubd_s64
__builtin_neon_vqsubd_u64
__builtin_neon_vqsubh_s16
__builtin_neon_vqsubh_u16
__builtin_neon_vqsubq_v
__builtin_neon_vqsubs_s32
__builtin_neon_vqsubs_u32
__builtin_neon_vqtbl1_v
V8ScV16ScV8Sci
__builtin_neon_vqtbl1q_v
__builtin_neon_vqtbl2_v
V8ScV16ScV16ScV8Sci
__builtin_neon_vqtbl2q_v
__builtin_neon_vqtbl3_v
V8ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbl3q_v
V16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vqtbl4_v
V8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbl4q_v
V16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vqtbx1_v
V8ScV8ScV16ScV8Sci
__builtin_neon_vqtbx1q_v
__builtin_neon_vqtbx2_v
V8ScV8ScV16ScV16ScV8Sci
__builtin_neon_vqtbx2q_v
__builtin_neon_vqtbx3_v
V8ScV8ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbx3q_v
__builtin_neon_vqtbx4_v
V8ScV8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbx4q_v
V16ScV16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vraddhn_v
__builtin_neon_vrbit_v
__builtin_neon_vrbitq_v
__builtin_neon_vrecpe_v
__builtin_neon_vrecped_f64
__builtin_neon_vrecpeq_v
__builtin_neon_vrecpes_f32
__builtin_neon_vrecps_v
__builtin_neon_vrecpsd_f64
__builtin_neon_vrecpsq_v
__builtin_neon_vrecpss_f32
__builtin_neon_vrecpxd_f64
__builtin_neon_vrecpxs_f32
__builtin_neon_vrhadd_v
__builtin_neon_vrhaddq_v
__builtin_neon_vrnd_v
__builtin_neon_vrnda_v
__builtin_neon_vrndaq_v
__builtin_neon_vrndi_v
__builtin_neon_vrndiq_v
__builtin_neon_vrndm_v
__builtin_neon_vrndmq_v
__builtin_neon_vrndn_v
__builtin_neon_vrndnq_v
__builtin_neon_vrndns_f32
__builtin_neon_vrndp_v
__builtin_neon_vrndpq_v
__builtin_neon_vrndq_v
__builtin_neon_vrndx_v
__builtin_neon_vrndxq_v
__builtin_neon_vrshl_v
__builtin_neon_vrshld_s64
__builtin_neon_vrshld_u64
__builtin_neon_vrshlq_v
__builtin_neon_vrshr_n_v
__builtin_neon_vrshrd_n_s64
__builtin_neon_vrshrd_n_u64
__builtin_neon_vrshrn_n_v
__builtin_neon_vrshrq_n_v
__builtin_neon_vrsqrte_v
__builtin_neon_vrsqrted_f64
__builtin_neon_vrsqrteq_v
__builtin_neon_vrsqrtes_f32
__builtin_neon_vrsqrts_v
__builtin_neon_vrsqrtsd_f64
__builtin_neon_vrsqrtsq_v
__builtin_neon_vrsqrtss_f32
__builtin_neon_vrsra_n_v
__builtin_neon_vrsrad_n_s64
WiWiWiIi
__builtin_neon_vrsrad_n_u64
UWiUWiUWiIi
__builtin_neon_vrsraq_n_v
__builtin_neon_vrsubhn_v
__builtin_neon_vset_lane_bf16
V4yyV4yIi
__builtin_neon_vset_lane_f32
V2ffV2fIi
__builtin_neon_vset_lane_f64
V1ddV1dIi
__builtin_neon_vset_lane_i16
V4ssV4sIi
__builtin_neon_vset_lane_i32
V2iiV2iIi
__builtin_neon_vset_lane_i64
V1WiWiV1WiIi
__builtin_neon_vset_lane_i8
V8ScScV8ScIi
__builtin_neon_vsetq_lane_bf16
V8yyV8yIi
__builtin_neon_vsetq_lane_f32
V4ffV4fIi
__builtin_neon_vsetq_lane_f64
V2ddV2dIi
__builtin_neon_vsetq_lane_i16
V8ssV8sIi
__builtin_neon_vsetq_lane_i32
V4iiV4iIi
__builtin_neon_vsetq_lane_i64
V2WiWiV2WiIi
__builtin_neon_vsetq_lane_i8
V16ScScV16ScIi
__builtin_neon_vsha1cq_u32
V4iV4UiUiV4Ui
__builtin_neon_vsha1h_u32
UiUi
__builtin_neon_vsha1mq_u32
__builtin_neon_vsha1pq_u32
__builtin_neon_vsha1su0q_v
__builtin_neon_vsha1su1q_v
__builtin_neon_vsha256h2q_v
__builtin_neon_vsha256hq_v
__builtin_neon_vsha256su0q_v
__builtin_neon_vsha256su1q_v
__builtin_neon_vshl_n_v
__builtin_neon_vshl_v
__builtin_neon_vshld_n_s64
__builtin_neon_vshld_n_u64
__builtin_neon_vshld_s64
__builtin_neon_vshld_u64
__builtin_neon_vshll_n_v
__builtin_neon_vshlq_n_v
__builtin_neon_vshlq_v
__builtin_neon_vshr_n_v
__builtin_neon_vshrd_n_s64
__builtin_neon_vshrd_n_u64
__builtin_neon_vshrn_n_v
__builtin_neon_vshrq_n_v
__builtin_neon_vsli_n_v
__builtin_neon_vslid_n_s64
__builtin_neon_vslid_n_u64
__builtin_neon_vsliq_n_v
__builtin_neon_vsqadd_v
__builtin_neon_vsqaddb_u8
__builtin_neon_vsqaddd_u64
__builtin_neon_vsqaddh_u16
__builtin_neon_vsqaddq_v
__builtin_neon_vsqadds_u32
__builtin_neon_vsqrt_v
__builtin_neon_vsqrtq_v
__builtin_neon_vsra_n_v
__builtin_neon_vsrad_n_s64
__builtin_neon_vsrad_n_u64
__builtin_neon_vsraq_n_v
__builtin_neon_vsri_n_v
__builtin_neon_vsrid_n_s64
__builtin_neon_vsrid_n_u64
__builtin_neon_vsriq_n_v
__builtin_neon_vst1_lane_v
vv*V8ScIii
__builtin_neon_vst1_v
vv*V8Sci
__builtin_neon_vst1_x2_v
vv*V8ScV8Sci
__builtin_neon_vst1_x3_v
vv*V8ScV8ScV8Sci
__builtin_neon_vst1_x4_v
vv*V8ScV8ScV8ScV8Sci
__builtin_neon_vst1q_lane_v
vv*V16ScIii
__builtin_neon_vst1q_v
vv*V16Sci
__builtin_neon_vst1q_x2_v
vv*V16ScV16Sci
__builtin_neon_vst1q_x3_v
vv*V16ScV16ScV16Sci
__builtin_neon_vst1q_x4_v
vv*V16ScV16ScV16ScV16Sci
__builtin_neon_vst2_lane_v
vv*V8ScV8ScIii
__builtin_neon_vst2_v
__builtin_neon_vst2q_lane_v
vv*V16ScV16ScIii
__builtin_neon_vst2q_v
__builtin_neon_vst3_lane_v
vv*V8ScV8ScV8ScIii
__builtin_neon_vst3_v
__builtin_neon_vst3q_lane_v
vv*V16ScV16ScV16ScIii
__builtin_neon_vst3q_v
__builtin_neon_vst4_lane_v
vv*V8ScV8ScV8ScV8ScIii
__builtin_neon_vst4_v
__builtin_neon_vst4q_lane_v
vv*V16ScV16ScV16ScV16ScIii
__builtin_neon_vst4q_v
__builtin_neon_vstrq_p128
vv*ULLLi
__builtin_neon_vsubd_s64
__builtin_neon_vsubd_u64
__builtin_neon_vsubhn_v
__builtin_neon_vtbl1_v
__builtin_neon_vtbl2_v
__builtin_neon_vtbl3_v
V8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbl4_v
V8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbx1_v
__builtin_neon_vtbx2_v
__builtin_neon_vtbx3_v
__builtin_neon_vtbx4_v
V8ScV8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtrn_v
__builtin_neon_vtrnq_v
__builtin_neon_vtst_v
__builtin_neon_vtstd_s64
__builtin_neon_vtstd_u64
__builtin_neon_vtstq_v
__builtin_neon_vuqadd_v
__builtin_neon_vuqaddb_s8
ScScUc
__builtin_neon_vuqaddd_s64
WiWiUWi
__builtin_neon_vuqaddh_s16
ssUs
__builtin_neon_vuqaddq_v
__builtin_neon_vuqadds_s32
iiUi
__builtin_neon_vusdot_v
__builtin_neon_vusdotq_v
__builtin_neon_vusmmlaq_v
__builtin_neon_vuzp_v
__builtin_neon_vuzpq_v
__builtin_neon_vzip_v
__builtin_neon_vzipq_v
__builtin_neon_vabdh_f16
__builtin_neon_vabsh_f16
__builtin_neon_vaddh_f16
__builtin_neon_vcageh_f16
Ushh
__builtin_neon_vcagth_f16
__builtin_neon_vcaleh_f16
__builtin_neon_vcalth_f16
__builtin_neon_vceqh_f16
__builtin_neon_vceqzh_f16
__builtin_neon_vcgeh_f16
__builtin_neon_vcgezh_f16
__builtin_neon_vcgth_f16
__builtin_neon_vcgtzh_f16
__builtin_neon_vcleh_f16
__builtin_neon_vclezh_f16
__builtin_neon_vclth_f16
__builtin_neon_vcltzh_f16
__builtin_neon_vcvtah_s16_f16
__builtin_neon_vcvtah_s32_f16
__builtin_neon_vcvtah_s64_f16
__builtin_neon_vcvtah_u16_f16
__builtin_neon_vcvtah_u32_f16
__builtin_neon_vcvtah_u64_f16
UWih
__builtin_neon_vcvth_f16_s16
__builtin_neon_vcvth_f16_s32
__builtin_neon_vcvth_f16_s64
__builtin_neon_vcvth_f16_u16
__builtin_neon_vcvth_f16_u32
__builtin_neon_vcvth_f16_u64
hUWi
__builtin_neon_vcvth_n_f16_s16
hsIi
__builtin_neon_vcvth_n_f16_s32
hiIi
__builtin_neon_vcvth_n_f16_s64
hWiIi
__builtin_neon_vcvth_n_f16_u16
hUsIi
__builtin_neon_vcvth_n_f16_u32
hUiIi
__builtin_neon_vcvth_n_f16_u64
hUWiIi
__builtin_neon_vcvth_n_s16_f16
shIi
__builtin_neon_vcvth_n_s32_f16
ihIi
__builtin_neon_vcvth_n_s64_f16
WihIi
__builtin_neon_vcvth_n_u16_f16
UshIi
__builtin_neon_vcvth_n_u32_f16
UihIi
__builtin_neon_vcvth_n_u64_f16
UWihIi
__builtin_neon_vcvth_s16_f16
__builtin_neon_vcvth_s32_f16
__builtin_neon_vcvth_s64_f16
__builtin_neon_vcvth_u16_f16
__builtin_neon_vcvth_u32_f16
__builtin_neon_vcvth_u64_f16
__builtin_neon_vcvtmh_s16_f16
__builtin_neon_vcvtmh_s32_f16
__builtin_neon_vcvtmh_s64_f16
__builtin_neon_vcvtmh_u16_f16
__builtin_neon_vcvtmh_u32_f16
__builtin_neon_vcvtmh_u64_f16
__builtin_neon_vcvtnh_s16_f16
__builtin_neon_vcvtnh_s32_f16
__builtin_neon_vcvtnh_s64_f16
__builtin_neon_vcvtnh_u16_f16
__builtin_neon_vcvtnh_u32_f16
__builtin_neon_vcvtnh_u64_f16
__builtin_neon_vcvtph_s16_f16
__builtin_neon_vcvtph_s32_f16
__builtin_neon_vcvtph_s64_f16
__builtin_neon_vcvtph_u16_f16
__builtin_neon_vcvtph_u32_f16
__builtin_neon_vcvtph_u64_f16
__builtin_neon_vdivh_f16
__builtin_neon_vfmah_f16
hhhh
__builtin_neon_vfmsh_f16
__builtin_neon_vmaxh_f16
__builtin_neon_vmaxnmh_f16
__builtin_neon_vminh_f16
__builtin_neon_vminnmh_f16
__builtin_neon_vmulh_f16
__builtin_neon_vmulxh_f16
__builtin_neon_vnegh_f16
__builtin_neon_vrecpeh_f16
__builtin_neon_vrecpsh_f16
__builtin_neon_vrecpxh_f16
__builtin_neon_vrndah_f16
__builtin_neon_vrndh_f16
__builtin_neon_vrndih_f16
__builtin_neon_vrndmh_f16
__builtin_neon_vrndnh_f16
__builtin_neon_vrndph_f16
__builtin_neon_vrndxh_f16
__builtin_neon_vrsqrteh_f16
__builtin_neon_vrsqrtsh_f16
__builtin_neon_vsqrth_f16
__builtin_neon_vsubh_f16
__builtin_sve_svaba_n_s16
q8sq8sq8ss
__builtin_sve_svaba_n_s32
q4iq4iq4ii
__builtin_sve_svaba_n_s64
q2Wiq2Wiq2WiWi
__builtin_sve_svaba_n_s8
q16Scq16Scq16ScSc
__builtin_sve_svaba_n_u16
q8Usq8Usq8UsUs
__builtin_sve_svaba_n_u32
q4Uiq4Uiq4UiUi
__builtin_sve_svaba_n_u64
q2UWiq2UWiq2UWiUWi
__builtin_sve_svaba_n_u8
q16Ucq16Ucq16UcUc
__builtin_sve_svaba_s16
q8sq8sq8sq8s
__builtin_sve_svaba_s32
q4iq4iq4iq4i
__builtin_sve_svaba_s64
q2Wiq2Wiq2Wiq2Wi
__builtin_sve_svaba_s8
q16Scq16Scq16Scq16Sc
__builtin_sve_svaba_u16
q8Usq8Usq8Usq8Us
__builtin_sve_svaba_u32
q4Uiq4Uiq4Uiq4Ui
__builtin_sve_svaba_u64
q2UWiq2UWiq2UWiq2UWi
__builtin_sve_svaba_u8
q16Ucq16Ucq16Ucq16Uc
__builtin_sve_svabalb_n_s16
q8sq8sq16ScSc
__builtin_sve_svabalb_n_s32
q4iq4iq8ss
__builtin_sve_svabalb_n_s64
q2Wiq2Wiq4ii
__builtin_sve_svabalb_n_u16
q8Usq8Usq16UcUc
__builtin_sve_svabalb_n_u32
q4Uiq4Uiq8UsUs
__builtin_sve_svabalb_n_u64
q2UWiq2UWiq4UiUi
__builtin_sve_svabalb_s16
q8sq8sq16Scq16Sc
__builtin_sve_svabalb_s32
q4iq4iq8sq8s
__builtin_sve_svabalb_s64
q2Wiq2Wiq4iq4i
__builtin_sve_svabalb_u16
q8Usq8Usq16Ucq16Uc
__builtin_sve_svabalb_u32
q4Uiq4Uiq8Usq8Us
__builtin_sve_svabalb_u64
q2UWiq2UWiq4Uiq4Ui
__builtin_sve_svabalt_n_s16
__builtin_sve_svabalt_n_s32
__builtin_sve_svabalt_n_s64
__builtin_sve_svabalt_n_u16
__builtin_sve_svabalt_n_u32
__builtin_sve_svabalt_n_u64
__builtin_sve_svabalt_s16
__builtin_sve_svabalt_s32
__builtin_sve_svabalt_s64
__builtin_sve_svabalt_u16
__builtin_sve_svabalt_u32
__builtin_sve_svabalt_u64
__builtin_sve_svabd_f16_m
q8hq16bq8hq8h
__builtin_sve_svabd_f16_x
__builtin_sve_svabd_f16_z
__builtin_sve_svabd_f32_m
q4fq16bq4fq4f
__builtin_sve_svabd_f32_x
__builtin_sve_svabd_f32_z
__builtin_sve_svabd_f64_m
q2dq16bq2dq2d
__builtin_sve_svabd_f64_x
__builtin_sve_svabd_f64_z
__builtin_sve_svabd_n_f16_m
q8hq16bq8hh
__builtin_sve_svabd_n_f16_x
__builtin_sve_svabd_n_f16_z
__builtin_sve_svabd_n_f32_m
q4fq16bq4ff
__builtin_sve_svabd_n_f32_x
__builtin_sve_svabd_n_f32_z
__builtin_sve_svabd_n_f64_m
q2dq16bq2dd
__builtin_sve_svabd_n_f64_x
__builtin_sve_svabd_n_f64_z
__builtin_sve_svabd_n_s16_m
q8sq16bq8ss
__builtin_sve_svabd_n_s16_x
__builtin_sve_svabd_n_s16_z
__builtin_sve_svabd_n_s32_m
q4iq16bq4ii
__builtin_sve_svabd_n_s32_x
__builtin_sve_svabd_n_s32_z
__builtin_sve_svabd_n_s64_m
q2Wiq16bq2WiWi
__builtin_sve_svabd_n_s64_x
__builtin_sve_svabd_n_s64_z
__builtin_sve_svabd_n_s8_m
q16Scq16bq16ScSc
__builtin_sve_svabd_n_s8_x
__builtin_sve_svabd_n_s8_z
__builtin_sve_svabd_n_u16_m
q8Usq16bq8UsUs
__builtin_sve_svabd_n_u16_x
__builtin_sve_svabd_n_u16_z
__builtin_sve_svabd_n_u32_m
q4Uiq16bq4UiUi
__builtin_sve_svabd_n_u32_x
__builtin_sve_svabd_n_u32_z
__builtin_sve_svabd_n_u64_m
q2UWiq16bq2UWiUWi
__builtin_sve_svabd_n_u64_x
__builtin_sve_svabd_n_u64_z
__builtin_sve_svabd_n_u8_m
q16Ucq16bq16UcUc
__builtin_sve_svabd_n_u8_x
__builtin_sve_svabd_n_u8_z
__builtin_sve_svabd_s16_m
q8sq16bq8sq8s
__builtin_sve_svabd_s16_x
__builtin_sve_svabd_s16_z
__builtin_sve_svabd_s32_m
q4iq16bq4iq4i
__builtin_sve_svabd_s32_x
__builtin_sve_svabd_s32_z
__builtin_sve_svabd_s64_m
q2Wiq16bq2Wiq2Wi
__builtin_sve_svabd_s64_x
__builtin_sve_svabd_s64_z
__builtin_sve_svabd_s8_m
q16Scq16bq16Scq16Sc
__builtin_sve_svabd_s8_x
__builtin_sve_svabd_s8_z
__builtin_sve_svabd_u16_m
q8Usq16bq8Usq8Us
__builtin_sve_svabd_u16_x
__builtin_sve_svabd_u16_z
__builtin_sve_svabd_u32_m
q4Uiq16bq4Uiq4Ui
__builtin_sve_svabd_u32_x
__builtin_sve_svabd_u32_z
__builtin_sve_svabd_u64_m
q2UWiq16bq2UWiq2UWi
__builtin_sve_svabd_u64_x
__builtin_sve_svabd_u64_z
__builtin_sve_svabd_u8_m
q16Ucq16bq16Ucq16Uc
__builtin_sve_svabd_u8_x
__builtin_sve_svabd_u8_z
__builtin_sve_svabdlb_n_s16
q8sq16ScSc
__builtin_sve_svabdlb_n_s32
q4iq8ss
__builtin_sve_svabdlb_n_s64
q2Wiq4ii
__builtin_sve_svabdlb_n_u16
q8Usq16UcUc
__builtin_sve_svabdlb_n_u32
q4Uiq8UsUs
__builtin_sve_svabdlb_n_u64
q2UWiq4UiUi
__builtin_sve_svabdlb_s16
q8sq16Scq16Sc
__builtin_sve_svabdlb_s32
q4iq8sq8s
__builtin_sve_svabdlb_s64
q2Wiq4iq4i
__builtin_sve_svabdlb_u16
q8Usq16Ucq16Uc
__builtin_sve_svabdlb_u32
q4Uiq8Usq8Us
__builtin_sve_svabdlb_u64
q2UWiq4Uiq4Ui
__builtin_sve_svabdlt_n_s16
__builtin_sve_svabdlt_n_s32
__builtin_sve_svabdlt_n_s64
__builtin_sve_svabdlt_n_u16
__builtin_sve_svabdlt_n_u32
__builtin_sve_svabdlt_n_u64
__builtin_sve_svabdlt_s16
__builtin_sve_svabdlt_s32
__builtin_sve_svabdlt_s64
__builtin_sve_svabdlt_u16
__builtin_sve_svabdlt_u32
__builtin_sve_svabdlt_u64
__builtin_sve_svabs_f16_m
q8hq8hq16bq8h
__builtin_sve_svabs_f16_x
q8hq16bq8h
__builtin_sve_svabs_f16_z
__builtin_sve_svabs_f32_m
q4fq4fq16bq4f
__builtin_sve_svabs_f32_x
q4fq16bq4f
__builtin_sve_svabs_f32_z
__builtin_sve_svabs_f64_m
q2dq2dq16bq2d
__builtin_sve_svabs_f64_x
q2dq16bq2d
__builtin_sve_svabs_f64_z
__builtin_sve_svabs_s16_m
q8sq8sq16bq8s
__builtin_sve_svabs_s16_x
q8sq16bq8s
__builtin_sve_svabs_s16_z
__builtin_sve_svabs_s32_m
q4iq4iq16bq4i
__builtin_sve_svabs_s32_x
q4iq16bq4i
__builtin_sve_svabs_s32_z
__builtin_sve_svabs_s64_m
q2Wiq2Wiq16bq2Wi
__builtin_sve_svabs_s64_x
q2Wiq16bq2Wi
__builtin_sve_svabs_s64_z
__builtin_sve_svabs_s8_m
q16Scq16Scq16bq16Sc
__builtin_sve_svabs_s8_x
q16Scq16bq16Sc
__builtin_sve_svabs_s8_z
__builtin_sve_svacge_f16
q16bq16bq8hq8h
__builtin_sve_svacge_f32
q16bq16bq4fq4f
__builtin_sve_svacge_f64
q16bq16bq2dq2d
__builtin_sve_svacge_n_f16
q16bq16bq8hh
__builtin_sve_svacge_n_f32
q16bq16bq4ff
__builtin_sve_svacge_n_f64
q16bq16bq2dd
__builtin_sve_svacgt_f16
__builtin_sve_svacgt_f32
__builtin_sve_svacgt_f64
__builtin_sve_svacgt_n_f16
__builtin_sve_svacgt_n_f32
__builtin_sve_svacgt_n_f64
__builtin_sve_svacle_f16
__builtin_sve_svacle_f32
__builtin_sve_svacle_f64
__builtin_sve_svacle_n_f16
__builtin_sve_svacle_n_f32
__builtin_sve_svacle_n_f64
__builtin_sve_svaclt_f16
__builtin_sve_svaclt_f32
__builtin_sve_svaclt_f64
__builtin_sve_svaclt_n_f16
__builtin_sve_svaclt_n_f32
__builtin_sve_svaclt_n_f64
__builtin_sve_svadalp_s16_m
q8sq16bq8sq16Sc
__builtin_sve_svadalp_s16_x
__builtin_sve_svadalp_s16_z
__builtin_sve_svadalp_s32_m
q4iq16bq4iq8s
__builtin_sve_svadalp_s32_x
__builtin_sve_svadalp_s32_z
__builtin_sve_svadalp_s64_m
q2Wiq16bq2Wiq4i
__builtin_sve_svadalp_s64_x
__builtin_sve_svadalp_s64_z
__builtin_sve_svadalp_u16_m
q8Usq16bq8Usq16Uc
__builtin_sve_svadalp_u16_x
__builtin_sve_svadalp_u16_z
__builtin_sve_svadalp_u32_m
q4Uiq16bq4Uiq8Us
__builtin_sve_svadalp_u32_x
__builtin_sve_svadalp_u32_z
__builtin_sve_svadalp_u64_m
q2UWiq16bq2UWiq4Ui
__builtin_sve_svadalp_u64_x
__builtin_sve_svadalp_u64_z
__builtin_sve_svadclb_n_u32
__builtin_sve_svadclb_n_u64
__builtin_sve_svadclb_u32
__builtin_sve_svadclb_u64
__builtin_sve_svadclt_n_u32
__builtin_sve_svadclt_n_u64
__builtin_sve_svadclt_u32
__builtin_sve_svadclt_u64
__builtin_sve_svadd_f16_m
__builtin_sve_svadd_f16_x
__builtin_sve_svadd_f16_z
__builtin_sve_svadd_f32_m
__builtin_sve_svadd_f32_x
__builtin_sve_svadd_f32_z
__builtin_sve_svadd_f64_m
__builtin_sve_svadd_f64_x
__builtin_sve_svadd_f64_z
__builtin_sve_svadd_n_f16_m
__builtin_sve_svadd_n_f16_x
__builtin_sve_svadd_n_f16_z
__builtin_sve_svadd_n_f32_m
__builtin_sve_svadd_n_f32_x
__builtin_sve_svadd_n_f32_z
__builtin_sve_svadd_n_f64_m
__builtin_sve_svadd_n_f64_x
__builtin_sve_svadd_n_f64_z
__builtin_sve_svadd_n_s16_m
__builtin_sve_svadd_n_s16_x
__builtin_sve_svadd_n_s16_z
__builtin_sve_svadd_n_s32_m
__builtin_sve_svadd_n_s32_x
__builtin_sve_svadd_n_s32_z
__builtin_sve_svadd_n_s64_m
__builtin_sve_svadd_n_s64_x
__builtin_sve_svadd_n_s64_z
__builtin_sve_svadd_n_s8_m
__builtin_sve_svadd_n_s8_x
__builtin_sve_svadd_n_s8_z
__builtin_sve_svadd_n_u16_m
__builtin_sve_svadd_n_u16_x
__builtin_sve_svadd_n_u16_z
__builtin_sve_svadd_n_u32_m
__builtin_sve_svadd_n_u32_x
__builtin_sve_svadd_n_u32_z
__builtin_sve_svadd_n_u64_m
__builtin_sve_svadd_n_u64_x
__builtin_sve_svadd_n_u64_z
__builtin_sve_svadd_n_u8_m
__builtin_sve_svadd_n_u8_x
__builtin_sve_svadd_n_u8_z
__builtin_sve_svadd_s16_m
__builtin_sve_svadd_s16_x
__builtin_sve_svadd_s16_z
__builtin_sve_svadd_s32_m
__builtin_sve_svadd_s32_x
__builtin_sve_svadd_s32_z
__builtin_sve_svadd_s64_m
__builtin_sve_svadd_s64_x
__builtin_sve_svadd_s64_z
__builtin_sve_svadd_s8_m
__builtin_sve_svadd_s8_x
__builtin_sve_svadd_s8_z
__builtin_sve_svadd_u16_m
__builtin_sve_svadd_u16_x
__builtin_sve_svadd_u16_z
__builtin_sve_svadd_u32_m
__builtin_sve_svadd_u32_x
__builtin_sve_svadd_u32_z
__builtin_sve_svadd_u64_m
__builtin_sve_svadd_u64_x
__builtin_sve_svadd_u64_z
__builtin_sve_svadd_u8_m
__builtin_sve_svadd_u8_x
__builtin_sve_svadd_u8_z
__builtin_sve_svadda_f16
hq16bhq8h
__builtin_sve_svadda_f32
fq16bfq4f
__builtin_sve_svadda_f64
dq16bdq2d
__builtin_sve_svaddhnb_n_s16
q16Scq8ss
__builtin_sve_svaddhnb_n_s32
q8sq4ii
__builtin_sve_svaddhnb_n_s64
q4iq2WiWi
__builtin_sve_svaddhnb_n_u16
q16Ucq8UsUs
__builtin_sve_svaddhnb_n_u32
q8Usq4UiUi
__builtin_sve_svaddhnb_n_u64
q4Uiq2UWiUWi
__builtin_sve_svaddhnb_s16
q16Scq8sq8s
__builtin_sve_svaddhnb_s32
q8sq4iq4i
__builtin_sve_svaddhnb_s64
q4iq2Wiq2Wi
__builtin_sve_svaddhnb_u16
q16Ucq8Usq8Us
__builtin_sve_svaddhnb_u32
q8Usq4Uiq4Ui
__builtin_sve_svaddhnb_u64
q4Uiq2UWiq2UWi
__builtin_sve_svaddhnt_n_s16
q16Scq16Scq8ss
__builtin_sve_svaddhnt_n_s32
q8sq8sq4ii
__builtin_sve_svaddhnt_n_s64
q4iq4iq2WiWi
__builtin_sve_svaddhnt_n_u16
q16Ucq16Ucq8UsUs
__builtin_sve_svaddhnt_n_u32
q8Usq8Usq4UiUi
__builtin_sve_svaddhnt_n_u64
q4Uiq4Uiq2UWiUWi
__builtin_sve_svaddhnt_s16
q16Scq16Scq8sq8s
__builtin_sve_svaddhnt_s32
q8sq8sq4iq4i
__builtin_sve_svaddhnt_s64
q4iq4iq2Wiq2Wi
__builtin_sve_svaddhnt_u16
q16Ucq16Ucq8Usq8Us
__builtin_sve_svaddhnt_u32
q8Usq8Usq4Uiq4Ui
__builtin_sve_svaddhnt_u64
q4Uiq4Uiq2UWiq2UWi
__builtin_sve_svaddlb_n_s16
__builtin_sve_svaddlb_n_s32
__builtin_sve_svaddlb_n_s64
__builtin_sve_svaddlb_n_u16
__builtin_sve_svaddlb_n_u32
__builtin_sve_svaddlb_n_u64
__builtin_sve_svaddlb_s16
__builtin_sve_svaddlb_s32
__builtin_sve_svaddlb_s64
__builtin_sve_svaddlb_u16
__builtin_sve_svaddlb_u32
__builtin_sve_svaddlb_u64
__builtin_sve_svaddlbt_n_s16
__builtin_sve_svaddlbt_n_s32
__builtin_sve_svaddlbt_n_s64
__builtin_sve_svaddlbt_s16
__builtin_sve_svaddlbt_s32
__builtin_sve_svaddlbt_s64
__builtin_sve_svaddlt_n_s16
__builtin_sve_svaddlt_n_s32
__builtin_sve_svaddlt_n_s64
__builtin_sve_svaddlt_n_u16
__builtin_sve_svaddlt_n_u32
__builtin_sve_svaddlt_n_u64
__builtin_sve_svaddlt_s16
__builtin_sve_svaddlt_s32
__builtin_sve_svaddlt_s64
__builtin_sve_svaddlt_u16
__builtin_sve_svaddlt_u32
__builtin_sve_svaddlt_u64
__builtin_sve_svaddp_f16_m
__builtin_sve_svaddp_f16_x
__builtin_sve_svaddp_f32_m
__builtin_sve_svaddp_f32_x
__builtin_sve_svaddp_f64_m
__builtin_sve_svaddp_f64_x
__builtin_sve_svaddp_s16_m
__builtin_sve_svaddp_s16_x
__builtin_sve_svaddp_s32_m
__builtin_sve_svaddp_s32_x
__builtin_sve_svaddp_s64_m
__builtin_sve_svaddp_s64_x
__builtin_sve_svaddp_s8_m
__builtin_sve_svaddp_s8_x
__builtin_sve_svaddp_u16_m
__builtin_sve_svaddp_u16_x
__builtin_sve_svaddp_u32_m
__builtin_sve_svaddp_u32_x
__builtin_sve_svaddp_u64_m
__builtin_sve_svaddp_u64_x
__builtin_sve_svaddp_u8_m
__builtin_sve_svaddp_u8_x
__builtin_sve_svaddv_f16
hq16bq8h
__builtin_sve_svaddv_f32
fq16bq4f
__builtin_sve_svaddv_f64
dq16bq2d
__builtin_sve_svaddv_s16
Wiq16bq8s
__builtin_sve_svaddv_s32
Wiq16bq4i
__builtin_sve_svaddv_s64
Wiq16bq2Wi
__builtin_sve_svaddv_s8
Wiq16bq16Sc
__builtin_sve_svaddv_u16
UWiq16bq8Us
__builtin_sve_svaddv_u32
UWiq16bq4Ui
__builtin_sve_svaddv_u64
UWiq16bq2UWi
__builtin_sve_svaddv_u8
UWiq16bq16Uc
__builtin_sve_svaddwb_n_s16
q8sq8sSc
__builtin_sve_svaddwb_n_s32
q4iq4is
__builtin_sve_svaddwb_n_s64
q2Wiq2Wii
__builtin_sve_svaddwb_n_u16
q8Usq8UsUc
__builtin_sve_svaddwb_n_u32
q4Uiq4UiUs
__builtin_sve_svaddwb_n_u64
q2UWiq2UWiUi
__builtin_sve_svaddwb_s16
q8sq8sq16Sc
__builtin_sve_svaddwb_s32
q4iq4iq8s
__builtin_sve_svaddwb_s64
q2Wiq2Wiq4i
__builtin_sve_svaddwb_u16
q8Usq8Usq16Uc
__builtin_sve_svaddwb_u32
q4Uiq4Uiq8Us
__builtin_sve_svaddwb_u64
q2UWiq2UWiq4Ui
__builtin_sve_svaddwt_n_s16
__builtin_sve_svaddwt_n_s32
__builtin_sve_svaddwt_n_s64
__builtin_sve_svaddwt_n_u16
__builtin_sve_svaddwt_n_u32
__builtin_sve_svaddwt_n_u64
__builtin_sve_svaddwt_s16
__builtin_sve_svaddwt_s32
__builtin_sve_svaddwt_s64
__builtin_sve_svaddwt_u16
__builtin_sve_svaddwt_u32
__builtin_sve_svaddwt_u64
__builtin_sve_svadrb_u32base_s32offset
q4Uiq4Uiq4i
__builtin_sve_svadrb_u32base_u32offset
q4Uiq4Uiq4Ui
__builtin_sve_svadrb_u64base_s64offset
q2UWiq2UWiq2Wi
__builtin_sve_svadrb_u64base_u64offset
q2UWiq2UWiq2UWi
__builtin_sve_svadrd_u32base_s32index
__builtin_sve_svadrd_u32base_u32index
__builtin_sve_svadrd_u64base_s64index
__builtin_sve_svadrd_u64base_u64index
__builtin_sve_svadrh_u32base_s32index
__builtin_sve_svadrh_u32base_u32index
__builtin_sve_svadrh_u64base_s64index
__builtin_sve_svadrh_u64base_u64index
__builtin_sve_svadrw_u32base_s32index
__builtin_sve_svadrw_u32base_u32index
__builtin_sve_svadrw_u64base_s64index
__builtin_sve_svadrw_u64base_u64index
__builtin_sve_svaesd_u8
q16Ucq16Ucq16Uc
__builtin_sve_svaese_u8
__builtin_sve_svaesimc_u8
q16Ucq16Uc
__builtin_sve_svaesmc_u8
__builtin_sve_svand_b_z
q16bq16bq16bq16b
__builtin_sve_svand_n_s16_m
__builtin_sve_svand_n_s16_x
__builtin_sve_svand_n_s16_z
__builtin_sve_svand_n_s32_m
__builtin_sve_svand_n_s32_x
__builtin_sve_svand_n_s32_z
__builtin_sve_svand_n_s64_m
__builtin_sve_svand_n_s64_x
__builtin_sve_svand_n_s64_z
__builtin_sve_svand_n_s8_m
__builtin_sve_svand_n_s8_x
__builtin_sve_svand_n_s8_z
__builtin_sve_svand_n_u16_m
__builtin_sve_svand_n_u16_x
__builtin_sve_svand_n_u16_z
__builtin_sve_svand_n_u32_m
__builtin_sve_svand_n_u32_x
__builtin_sve_svand_n_u32_z
__builtin_sve_svand_n_u64_m
__builtin_sve_svand_n_u64_x
__builtin_sve_svand_n_u64_z
__builtin_sve_svand_n_u8_m
__builtin_sve_svand_n_u8_x
__builtin_sve_svand_n_u8_z
__builtin_sve_svand_s16_m
__builtin_sve_svand_s16_x
__builtin_sve_svand_s16_z
__builtin_sve_svand_s32_m
__builtin_sve_svand_s32_x
__builtin_sve_svand_s32_z
__builtin_sve_svand_s64_m
__builtin_sve_svand_s64_x
__builtin_sve_svand_s64_z
__builtin_sve_svand_s8_m
__builtin_sve_svand_s8_x
__builtin_sve_svand_s8_z
__builtin_sve_svand_u16_m
__builtin_sve_svand_u16_x
__builtin_sve_svand_u16_z
__builtin_sve_svand_u32_m
__builtin_sve_svand_u32_x
__builtin_sve_svand_u32_z
__builtin_sve_svand_u64_m
__builtin_sve_svand_u64_x
__builtin_sve_svand_u64_z
__builtin_sve_svand_u8_m
__builtin_sve_svand_u8_x
__builtin_sve_svand_u8_z
__builtin_sve_svandv_s16
sq16bq8s
__builtin_sve_svandv_s32
iq16bq4i
__builtin_sve_svandv_s64
__builtin_sve_svandv_s8
Scq16bq16Sc
__builtin_sve_svandv_u16
Usq16bq8Us
__builtin_sve_svandv_u32
Uiq16bq4Ui
__builtin_sve_svandv_u64
__builtin_sve_svandv_u8
Ucq16bq16Uc
__builtin_sve_svasr_n_s16_m
q8sq16bq8sUs
__builtin_sve_svasr_n_s16_x
__builtin_sve_svasr_n_s16_z
__builtin_sve_svasr_n_s32_m
q4iq16bq4iUi
__builtin_sve_svasr_n_s32_x
__builtin_sve_svasr_n_s32_z
__builtin_sve_svasr_n_s64_m
q2Wiq16bq2WiUWi
__builtin_sve_svasr_n_s64_x
__builtin_sve_svasr_n_s64_z
__builtin_sve_svasr_n_s8_m
q16Scq16bq16ScUc
__builtin_sve_svasr_n_s8_x
__builtin_sve_svasr_n_s8_z
__builtin_sve_svasr_s16_m
q8sq16bq8sq8Us
__builtin_sve_svasr_s16_x
__builtin_sve_svasr_s16_z
__builtin_sve_svasr_s32_m
q4iq16bq4iq4Ui
__builtin_sve_svasr_s32_x
__builtin_sve_svasr_s32_z
__builtin_sve_svasr_s64_m
q2Wiq16bq2Wiq2UWi
__builtin_sve_svasr_s64_x
__builtin_sve_svasr_s64_z
__builtin_sve_svasr_s8_m
q16Scq16bq16Scq16Uc
__builtin_sve_svasr_s8_x
__builtin_sve_svasr_s8_z
__builtin_sve_svasr_wide_n_s16_m
q8sq16bq8sUWi
__builtin_sve_svasr_wide_n_s16_x
__builtin_sve_svasr_wide_n_s16_z
__builtin_sve_svasr_wide_n_s32_m
q4iq16bq4iUWi
__builtin_sve_svasr_wide_n_s32_x
__builtin_sve_svasr_wide_n_s32_z
__builtin_sve_svasr_wide_n_s8_m
q16Scq16bq16ScUWi
__builtin_sve_svasr_wide_n_s8_x
__builtin_sve_svasr_wide_n_s8_z
__builtin_sve_svasr_wide_s16_m
q8sq16bq8sq2UWi
__builtin_sve_svasr_wide_s16_x
__builtin_sve_svasr_wide_s16_z
__builtin_sve_svasr_wide_s32_m
q4iq16bq4iq2UWi
__builtin_sve_svasr_wide_s32_x
__builtin_sve_svasr_wide_s32_z
__builtin_sve_svasr_wide_s8_m
q16Scq16bq16Scq2UWi
__builtin_sve_svasr_wide_s8_x
__builtin_sve_svasr_wide_s8_z
__builtin_sve_svasrd_n_s16_m
q8sq16bq8sIUWi
__builtin_sve_svasrd_n_s16_x
__builtin_sve_svasrd_n_s16_z
__builtin_sve_svasrd_n_s32_m
q4iq16bq4iIUWi
__builtin_sve_svasrd_n_s32_x
__builtin_sve_svasrd_n_s32_z
__builtin_sve_svasrd_n_s64_m
q2Wiq16bq2WiIUWi
__builtin_sve_svasrd_n_s64_x
__builtin_sve_svasrd_n_s64_z
__builtin_sve_svasrd_n_s8_m
q16Scq16bq16ScIUWi
__builtin_sve_svasrd_n_s8_x
__builtin_sve_svasrd_n_s8_z
__builtin_sve_svbcax_n_s16
__builtin_sve_svbcax_n_s32
__builtin_sve_svbcax_n_s64
__builtin_sve_svbcax_n_s8
__builtin_sve_svbcax_n_u16
__builtin_sve_svbcax_n_u32
__builtin_sve_svbcax_n_u64
__builtin_sve_svbcax_n_u8
__builtin_sve_svbcax_s16
__builtin_sve_svbcax_s32
__builtin_sve_svbcax_s64
__builtin_sve_svbcax_s8
__builtin_sve_svbcax_u16
__builtin_sve_svbcax_u32
__builtin_sve_svbcax_u64
__builtin_sve_svbcax_u8
__builtin_sve_svbdep_n_u16
q8Usq8UsUs
__builtin_sve_svbdep_n_u32
q4Uiq4UiUi
__builtin_sve_svbdep_n_u64
q2UWiq2UWiUWi
__builtin_sve_svbdep_n_u8
q16Ucq16UcUc
__builtin_sve_svbdep_u16
q8Usq8Usq8Us
__builtin_sve_svbdep_u32
__builtin_sve_svbdep_u64
__builtin_sve_svbdep_u8
__builtin_sve_svbext_n_u16
__builtin_sve_svbext_n_u32
__builtin_sve_svbext_n_u64
__builtin_sve_svbext_n_u8
__builtin_sve_svbext_u16
__builtin_sve_svbext_u32
__builtin_sve_svbext_u64
__builtin_sve_svbext_u8
__builtin_sve_svbfdot_f32
q4fq4fq8yq8y
__builtin_sve_svbfdot_lane_f32
q4fq4fq8yq8yUWi
__builtin_sve_svbfdot_n_f32
q4fq4fq8yy
__builtin_sve_svbfmlalb_f32
__builtin_sve_svbfmlalb_lane_f32
__builtin_sve_svbfmlalb_n_f32
__builtin_sve_svbfmlalt_f32
__builtin_sve_svbfmlalt_lane_f32
__builtin_sve_svbfmlalt_n_f32
__builtin_sve_svbfmmla_f32
__builtin_sve_svbgrp_n_u16
__builtin_sve_svbgrp_n_u32
__builtin_sve_svbgrp_n_u64
__builtin_sve_svbgrp_n_u8
__builtin_sve_svbgrp_u16
__builtin_sve_svbgrp_u32
__builtin_sve_svbgrp_u64
__builtin_sve_svbgrp_u8
__builtin_sve_svbic_b_z
__builtin_sve_svbic_n_s16_m
__builtin_sve_svbic_n_s16_x
__builtin_sve_svbic_n_s16_z
__builtin_sve_svbic_n_s32_m
__builtin_sve_svbic_n_s32_x
__builtin_sve_svbic_n_s32_z
__builtin_sve_svbic_n_s64_m
__builtin_sve_svbic_n_s64_x
__builtin_sve_svbic_n_s64_z
__builtin_sve_svbic_n_s8_m
__builtin_sve_svbic_n_s8_x
__builtin_sve_svbic_n_s8_z
__builtin_sve_svbic_n_u16_m
__builtin_sve_svbic_n_u16_x
__builtin_sve_svbic_n_u16_z
__builtin_sve_svbic_n_u32_m
__builtin_sve_svbic_n_u32_x
__builtin_sve_svbic_n_u32_z
__builtin_sve_svbic_n_u64_m
__builtin_sve_svbic_n_u64_x
__builtin_sve_svbic_n_u64_z
__builtin_sve_svbic_n_u8_m
__builtin_sve_svbic_n_u8_x
__builtin_sve_svbic_n_u8_z
__builtin_sve_svbic_s16_m
__builtin_sve_svbic_s16_x
__builtin_sve_svbic_s16_z
__builtin_sve_svbic_s32_m
__builtin_sve_svbic_s32_x
__builtin_sve_svbic_s32_z
__builtin_sve_svbic_s64_m
__builtin_sve_svbic_s64_x
__builtin_sve_svbic_s64_z
__builtin_sve_svbic_s8_m
__builtin_sve_svbic_s8_x
__builtin_sve_svbic_s8_z
__builtin_sve_svbic_u16_m
__builtin_sve_svbic_u16_x
__builtin_sve_svbic_u16_z
__builtin_sve_svbic_u32_m
__builtin_sve_svbic_u32_x
__builtin_sve_svbic_u32_z
__builtin_sve_svbic_u64_m
__builtin_sve_svbic_u64_x
__builtin_sve_svbic_u64_z
__builtin_sve_svbic_u8_m
__builtin_sve_svbic_u8_x
__builtin_sve_svbic_u8_z
__builtin_sve_svbrka_b_m
__builtin_sve_svbrka_b_z
q16bq16bq16b
__builtin_sve_svbrkb_b_m
__builtin_sve_svbrkb_b_z
__builtin_sve_svbrkn_b_z
__builtin_sve_svbrkpa_b_z
__builtin_sve_svbrkpb_b_z
__builtin_sve_svbsl1n_n_s16
__builtin_sve_svbsl1n_n_s32
__builtin_sve_svbsl1n_n_s64
__builtin_sve_svbsl1n_n_s8
__builtin_sve_svbsl1n_n_u16
__builtin_sve_svbsl1n_n_u32
__builtin_sve_svbsl1n_n_u64
__builtin_sve_svbsl1n_n_u8
__builtin_sve_svbsl1n_s16
__builtin_sve_svbsl1n_s32
__builtin_sve_svbsl1n_s64
__builtin_sve_svbsl1n_s8
__builtin_sve_svbsl1n_u16
__builtin_sve_svbsl1n_u32
__builtin_sve_svbsl1n_u64
__builtin_sve_svbsl1n_u8
__builtin_sve_svbsl2n_n_s16
__builtin_sve_svbsl2n_n_s32
__builtin_sve_svbsl2n_n_s64
__builtin_sve_svbsl2n_n_s8
__builtin_sve_svbsl2n_n_u16
__builtin_sve_svbsl2n_n_u32
__builtin_sve_svbsl2n_n_u64
__builtin_sve_svbsl2n_n_u8
__builtin_sve_svbsl2n_s16
__builtin_sve_svbsl2n_s32
__builtin_sve_svbsl2n_s64
__builtin_sve_svbsl2n_s8
__builtin_sve_svbsl2n_u16
__builtin_sve_svbsl2n_u32
__builtin_sve_svbsl2n_u64
__builtin_sve_svbsl2n_u8
__builtin_sve_svbsl_n_s16
__builtin_sve_svbsl_n_s32
__builtin_sve_svbsl_n_s64
__builtin_sve_svbsl_n_s8
__builtin_sve_svbsl_n_u16
__builtin_sve_svbsl_n_u32
__builtin_sve_svbsl_n_u64
__builtin_sve_svbsl_n_u8
__builtin_sve_svbsl_s16
__builtin_sve_svbsl_s32
__builtin_sve_svbsl_s64
__builtin_sve_svbsl_s8
__builtin_sve_svbsl_u16
__builtin_sve_svbsl_u32
__builtin_sve_svbsl_u64
__builtin_sve_svbsl_u8
__builtin_sve_svcadd_f16_m
q8hq16bq8hq8hIUWi
__builtin_sve_svcadd_f16_x
__builtin_sve_svcadd_f16_z
__builtin_sve_svcadd_f32_m
q4fq16bq4fq4fIUWi
__builtin_sve_svcadd_f32_x
__builtin_sve_svcadd_f32_z
__builtin_sve_svcadd_f64_m
q2dq16bq2dq2dIUWi
__builtin_sve_svcadd_f64_x
__builtin_sve_svcadd_f64_z
__builtin_sve_svcadd_s16
q8sq8sq8sIUWi
__builtin_sve_svcadd_s32
q4iq4iq4iIUWi
__builtin_sve_svcadd_s64
q2Wiq2Wiq2WiIUWi
__builtin_sve_svcadd_s8
q16Scq16Scq16ScIUWi
__builtin_sve_svcadd_u16
q8Usq8Usq8UsIUWi
__builtin_sve_svcadd_u32
q4Uiq4Uiq4UiIUWi
__builtin_sve_svcadd_u64
q2UWiq2UWiq2UWiIUWi
__builtin_sve_svcadd_u8
q16Ucq16Ucq16UcIUWi
__builtin_sve_svcdot_lane_s32
q4iq4iq16Scq16ScIUWiIUWi
__builtin_sve_svcdot_lane_s64
q2Wiq2Wiq8sq8sIUWiIUWi
__builtin_sve_svcdot_s32
q4iq4iq16Scq16ScIUWi
__builtin_sve_svcdot_s64
q2Wiq2Wiq8sq8sIUWi
__builtin_sve_svclasta_bf16
q8yq16bq8yq8y
__builtin_sve_svclasta_f16
__builtin_sve_svclasta_f32
__builtin_sve_svclasta_f64
__builtin_sve_svclasta_n_bf16
yq16byq8y
__builtin_sve_svclasta_n_f16
__builtin_sve_svclasta_n_f32
__builtin_sve_svclasta_n_f64
__builtin_sve_svclasta_n_s16
sq16bsq8s
__builtin_sve_svclasta_n_s32
iq16biq4i
__builtin_sve_svclasta_n_s64
Wiq16bWiq2Wi
__builtin_sve_svclasta_n_s8
Scq16bScq16Sc
__builtin_sve_svclasta_n_u16
Usq16bUsq8Us
__builtin_sve_svclasta_n_u32
Uiq16bUiq4Ui
__builtin_sve_svclasta_n_u64
UWiq16bUWiq2UWi
__builtin_sve_svclasta_n_u8
Ucq16bUcq16Uc
__builtin_sve_svclasta_s16
__builtin_sve_svclasta_s32
__builtin_sve_svclasta_s64
__builtin_sve_svclasta_s8
__builtin_sve_svclasta_u16
__builtin_sve_svclasta_u32
__builtin_sve_svclasta_u64
__builtin_sve_svclasta_u8
__builtin_sve_svclastb_bf16
__builtin_sve_svclastb_f16
__builtin_sve_svclastb_f32
__builtin_sve_svclastb_f64
__builtin_sve_svclastb_n_bf16
__builtin_sve_svclastb_n_f16
__builtin_sve_svclastb_n_f32
__builtin_sve_svclastb_n_f64
__builtin_sve_svclastb_n_s16
__builtin_sve_svclastb_n_s32
__builtin_sve_svclastb_n_s64
__builtin_sve_svclastb_n_s8
__builtin_sve_svclastb_n_u16
__builtin_sve_svclastb_n_u32
__builtin_sve_svclastb_n_u64
__builtin_sve_svclastb_n_u8
__builtin_sve_svclastb_s16
__builtin_sve_svclastb_s32
__builtin_sve_svclastb_s64
__builtin_sve_svclastb_s8
__builtin_sve_svclastb_u16
__builtin_sve_svclastb_u32
__builtin_sve_svclastb_u64
__builtin_sve_svclastb_u8
__builtin_sve_svcls_s16_m
q8Usq8Usq16bq8s
__builtin_sve_svcls_s16_x
q8Usq16bq8s
__builtin_sve_svcls_s16_z
__builtin_sve_svcls_s32_m
q4Uiq4Uiq16bq4i
__builtin_sve_svcls_s32_x
q4Uiq16bq4i
__builtin_sve_svcls_s32_z
__builtin_sve_svcls_s64_m
q2UWiq2UWiq16bq2Wi
__builtin_sve_svcls_s64_x
q2UWiq16bq2Wi
__builtin_sve_svcls_s64_z
__builtin_sve_svcls_s8_m
q16Ucq16Ucq16bq16Sc
__builtin_sve_svcls_s8_x
q16Ucq16bq16Sc
__builtin_sve_svcls_s8_z
__builtin_sve_svclz_s16_m
__builtin_sve_svclz_s16_x
__builtin_sve_svclz_s16_z
__builtin_sve_svclz_s32_m
__builtin_sve_svclz_s32_x
__builtin_sve_svclz_s32_z
__builtin_sve_svclz_s64_m
__builtin_sve_svclz_s64_x
__builtin_sve_svclz_s64_z
__builtin_sve_svclz_s8_m
__builtin_sve_svclz_s8_x
__builtin_sve_svclz_s8_z
__builtin_sve_svclz_u16_m
q8Usq8Usq16bq8Us
__builtin_sve_svclz_u16_x
q8Usq16bq8Us
__builtin_sve_svclz_u16_z
__builtin_sve_svclz_u32_m
q4Uiq4Uiq16bq4Ui
__builtin_sve_svclz_u32_x
q4Uiq16bq4Ui
__builtin_sve_svclz_u32_z
__builtin_sve_svclz_u64_m
q2UWiq2UWiq16bq2UWi
__builtin_sve_svclz_u64_x
q2UWiq16bq2UWi
__builtin_sve_svclz_u64_z
__builtin_sve_svclz_u8_m
q16Ucq16Ucq16bq16Uc
__builtin_sve_svclz_u8_x
q16Ucq16bq16Uc
__builtin_sve_svclz_u8_z
__builtin_sve_svcmla_f16_m
q8hq16bq8hq8hq8hIUWi
__builtin_sve_svcmla_f16_x
__builtin_sve_svcmla_f16_z
__builtin_sve_svcmla_f32_m
q4fq16bq4fq4fq4fIUWi
__builtin_sve_svcmla_f32_x
__builtin_sve_svcmla_f32_z
__builtin_sve_svcmla_f64_m
q2dq16bq2dq2dq2dIUWi
__builtin_sve_svcmla_f64_x
__builtin_sve_svcmla_f64_z
__builtin_sve_svcmla_lane_f16
q8hq8hq8hq8hIUWiIUWi
__builtin_sve_svcmla_lane_f32
q4fq4fq4fq4fIUWiIUWi
__builtin_sve_svcmla_lane_s16
q8sq8sq8sq8sIUWiIUWi
__builtin_sve_svcmla_lane_s32
q4iq4iq4iq4iIUWiIUWi
__builtin_sve_svcmla_lane_u16
q8Usq8Usq8Usq8UsIUWiIUWi
__builtin_sve_svcmla_lane_u32
q4Uiq4Uiq4Uiq4UiIUWiIUWi
__builtin_sve_svcmla_s16
q8sq8sq8sq8sIUWi
__builtin_sve_svcmla_s32
q4iq4iq4iq4iIUWi
__builtin_sve_svcmla_s64
q2Wiq2Wiq2Wiq2WiIUWi
__builtin_sve_svcmla_s8
q16Scq16Scq16Scq16ScIUWi
__builtin_sve_svcmla_u16
q8Usq8Usq8Usq8UsIUWi
__builtin_sve_svcmla_u32
q4Uiq4Uiq4Uiq4UiIUWi
__builtin_sve_svcmla_u64
q2UWiq2UWiq2UWiq2UWiIUWi
__builtin_sve_svcmla_u8
q16Ucq16Ucq16Ucq16UcIUWi
__builtin_sve_svcmpeq_f16
__builtin_sve_svcmpeq_f32
__builtin_sve_svcmpeq_f64
__builtin_sve_svcmpeq_n_f16
__builtin_sve_svcmpeq_n_f32
__builtin_sve_svcmpeq_n_f64
__builtin_sve_svcmpeq_n_s16
q16bq16bq8ss
__builtin_sve_svcmpeq_n_s32
q16bq16bq4ii
__builtin_sve_svcmpeq_n_s64
q16bq16bq2WiWi
__builtin_sve_svcmpeq_n_s8
q16bq16bq16ScSc
__builtin_sve_svcmpeq_n_u16
q16bq16bq8UsUs
__builtin_sve_svcmpeq_n_u32
q16bq16bq4UiUi
__builtin_sve_svcmpeq_n_u64
q16bq16bq2UWiUWi
__builtin_sve_svcmpeq_n_u8
q16bq16bq16UcUc
__builtin_sve_svcmpeq_s16
q16bq16bq8sq8s
__builtin_sve_svcmpeq_s32
q16bq16bq4iq4i
__builtin_sve_svcmpeq_s64
q16bq16bq2Wiq2Wi
__builtin_sve_svcmpeq_s8
q16bq16bq16Scq16Sc
__builtin_sve_svcmpeq_u16
q16bq16bq8Usq8Us
__builtin_sve_svcmpeq_u32
q16bq16bq4Uiq4Ui
__builtin_sve_svcmpeq_u64
q16bq16bq2UWiq2UWi
__builtin_sve_svcmpeq_u8
q16bq16bq16Ucq16Uc
__builtin_sve_svcmpeq_wide_n_s16
q16bq16bq8sWi
__builtin_sve_svcmpeq_wide_n_s32
q16bq16bq4iWi
__builtin_sve_svcmpeq_wide_n_s8
q16bq16bq16ScWi
__builtin_sve_svcmpeq_wide_s16
q16bq16bq8sq2Wi
__builtin_sve_svcmpeq_wide_s32
q16bq16bq4iq2Wi
__builtin_sve_svcmpeq_wide_s8
q16bq16bq16Scq2Wi
__builtin_sve_svcmpge_f16
__builtin_sve_svcmpge_f32
__builtin_sve_svcmpge_f64
__builtin_sve_svcmpge_n_f16
__builtin_sve_svcmpge_n_f32
__builtin_sve_svcmpge_n_f64
__builtin_sve_svcmpge_n_s16
__builtin_sve_svcmpge_n_s32
__builtin_sve_svcmpge_n_s64
__builtin_sve_svcmpge_n_s8
__builtin_sve_svcmpge_n_u16
__builtin_sve_svcmpge_n_u32
__builtin_sve_svcmpge_n_u64
__builtin_sve_svcmpge_n_u8
__builtin_sve_svcmpge_s16
__builtin_sve_svcmpge_s32
__builtin_sve_svcmpge_s64
__builtin_sve_svcmpge_s8
__builtin_sve_svcmpge_u16
__builtin_sve_svcmpge_u32
__builtin_sve_svcmpge_u64
__builtin_sve_svcmpge_u8
__builtin_sve_svcmpge_wide_n_s16
__builtin_sve_svcmpge_wide_n_s32
__builtin_sve_svcmpge_wide_n_s8
__builtin_sve_svcmpge_wide_n_u16
q16bq16bq8UsUWi
__builtin_sve_svcmpge_wide_n_u32
q16bq16bq4UiUWi
__builtin_sve_svcmpge_wide_n_u8
q16bq16bq16UcUWi
__builtin_sve_svcmpge_wide_s16
__builtin_sve_svcmpge_wide_s32
__builtin_sve_svcmpge_wide_s8
__builtin_sve_svcmpge_wide_u16
q16bq16bq8Usq2UWi
__builtin_sve_svcmpge_wide_u32
q16bq16bq4Uiq2UWi
__builtin_sve_svcmpge_wide_u8
q16bq16bq16Ucq2UWi
__builtin_sve_svcmpgt_f16
__builtin_sve_svcmpgt_f32
__builtin_sve_svcmpgt_f64
__builtin_sve_svcmpgt_n_f16
__builtin_sve_svcmpgt_n_f32
__builtin_sve_svcmpgt_n_f64
__builtin_sve_svcmpgt_n_s16
__builtin_sve_svcmpgt_n_s32
__builtin_sve_svcmpgt_n_s64
__builtin_sve_svcmpgt_n_s8
__builtin_sve_svcmpgt_n_u16
__builtin_sve_svcmpgt_n_u32
__builtin_sve_svcmpgt_n_u64
__builtin_sve_svcmpgt_n_u8
__builtin_sve_svcmpgt_s16
__builtin_sve_svcmpgt_s32
__builtin_sve_svcmpgt_s64
__builtin_sve_svcmpgt_s8
__builtin_sve_svcmpgt_u16
__builtin_sve_svcmpgt_u32
__builtin_sve_svcmpgt_u64
__builtin_sve_svcmpgt_u8
__builtin_sve_svcmpgt_wide_n_s16
__builtin_sve_svcmpgt_wide_n_s32
__builtin_sve_svcmpgt_wide_n_s8
__builtin_sve_svcmpgt_wide_n_u16
__builtin_sve_svcmpgt_wide_n_u32
__builtin_sve_svcmpgt_wide_n_u8
__builtin_sve_svcmpgt_wide_s16
__builtin_sve_svcmpgt_wide_s32
__builtin_sve_svcmpgt_wide_s8
__builtin_sve_svcmpgt_wide_u16
__builtin_sve_svcmpgt_wide_u32
__builtin_sve_svcmpgt_wide_u8
__builtin_sve_svcmple_f16
__builtin_sve_svcmple_f32
__builtin_sve_svcmple_f64
__builtin_sve_svcmple_n_f16
__builtin_sve_svcmple_n_f32
__builtin_sve_svcmple_n_f64
__builtin_sve_svcmple_n_s16
__builtin_sve_svcmple_n_s32
__builtin_sve_svcmple_n_s64
__builtin_sve_svcmple_n_s8
__builtin_sve_svcmple_n_u16
__builtin_sve_svcmple_n_u32
__builtin_sve_svcmple_n_u64
__builtin_sve_svcmple_n_u8
__builtin_sve_svcmple_s16
__builtin_sve_svcmple_s32
__builtin_sve_svcmple_s64
__builtin_sve_svcmple_s8
__builtin_sve_svcmple_u16
__builtin_sve_svcmple_u32
__builtin_sve_svcmple_u64
__builtin_sve_svcmple_u8
__builtin_sve_svcmple_wide_n_s16
__builtin_sve_svcmple_wide_n_s32
__builtin_sve_svcmple_wide_n_s8
__builtin_sve_svcmple_wide_n_u16
__builtin_sve_svcmple_wide_n_u32
__builtin_sve_svcmple_wide_n_u8
__builtin_sve_svcmple_wide_s16
__builtin_sve_svcmple_wide_s32
__builtin_sve_svcmple_wide_s8
__builtin_sve_svcmple_wide_u16
__builtin_sve_svcmple_wide_u32
__builtin_sve_svcmple_wide_u8
__builtin_sve_svcmplt_f16
__builtin_sve_svcmplt_f32
__builtin_sve_svcmplt_f64
__builtin_sve_svcmplt_n_f16
__builtin_sve_svcmplt_n_f32
__builtin_sve_svcmplt_n_f64
__builtin_sve_svcmplt_n_s16
__builtin_sve_svcmplt_n_s32
__builtin_sve_svcmplt_n_s64
__builtin_sve_svcmplt_n_s8
__builtin_sve_svcmplt_n_u16
__builtin_sve_svcmplt_n_u32
__builtin_sve_svcmplt_n_u64
__builtin_sve_svcmplt_n_u8
__builtin_sve_svcmplt_s16
__builtin_sve_svcmplt_s32
__builtin_sve_svcmplt_s64
__builtin_sve_svcmplt_s8
__builtin_sve_svcmplt_u16
__builtin_sve_svcmplt_u32
__builtin_sve_svcmplt_u64
__builtin_sve_svcmplt_u8
__builtin_sve_svcmplt_wide_n_s16
__builtin_sve_svcmplt_wide_n_s32
__builtin_sve_svcmplt_wide_n_s8
__builtin_sve_svcmplt_wide_n_u16
__builtin_sve_svcmplt_wide_n_u32
__builtin_sve_svcmplt_wide_n_u8
__builtin_sve_svcmplt_wide_s16
__builtin_sve_svcmplt_wide_s32
__builtin_sve_svcmplt_wide_s8
__builtin_sve_svcmplt_wide_u16
__builtin_sve_svcmplt_wide_u32
__builtin_sve_svcmplt_wide_u8
__builtin_sve_svcmpne_f16
__builtin_sve_svcmpne_f32
__builtin_sve_svcmpne_f64
__builtin_sve_svcmpne_n_f16
__builtin_sve_svcmpne_n_f32
__builtin_sve_svcmpne_n_f64
__builtin_sve_svcmpne_n_s16
__builtin_sve_svcmpne_n_s32
__builtin_sve_svcmpne_n_s64
__builtin_sve_svcmpne_n_s8
__builtin_sve_svcmpne_n_u16
__builtin_sve_svcmpne_n_u32
__builtin_sve_svcmpne_n_u64
__builtin_sve_svcmpne_n_u8
__builtin_sve_svcmpne_s16
__builtin_sve_svcmpne_s32
__builtin_sve_svcmpne_s64
__builtin_sve_svcmpne_s8
__builtin_sve_svcmpne_u16
__builtin_sve_svcmpne_u32
__builtin_sve_svcmpne_u64
__builtin_sve_svcmpne_u8
__builtin_sve_svcmpne_wide_n_s16
__builtin_sve_svcmpne_wide_n_s32
__builtin_sve_svcmpne_wide_n_s8
__builtin_sve_svcmpne_wide_s16
__builtin_sve_svcmpne_wide_s32
__builtin_sve_svcmpne_wide_s8
__builtin_sve_svcmpuo_f16
__builtin_sve_svcmpuo_f32
__builtin_sve_svcmpuo_f64
__builtin_sve_svcmpuo_n_f16
__builtin_sve_svcmpuo_n_f32
__builtin_sve_svcmpuo_n_f64
__builtin_sve_svcnot_s16_m
__builtin_sve_svcnot_s16_x
__builtin_sve_svcnot_s16_z
__builtin_sve_svcnot_s32_m
__builtin_sve_svcnot_s32_x
__builtin_sve_svcnot_s32_z
__builtin_sve_svcnot_s64_m
__builtin_sve_svcnot_s64_x
__builtin_sve_svcnot_s64_z
__builtin_sve_svcnot_s8_m
__builtin_sve_svcnot_s8_x
__builtin_sve_svcnot_s8_z
__builtin_sve_svcnot_u16_m
__builtin_sve_svcnot_u16_x
__builtin_sve_svcnot_u16_z
__builtin_sve_svcnot_u32_m
__builtin_sve_svcnot_u32_x
__builtin_sve_svcnot_u32_z
__builtin_sve_svcnot_u64_m
__builtin_sve_svcnot_u64_x
__builtin_sve_svcnot_u64_z
__builtin_sve_svcnot_u8_m
__builtin_sve_svcnot_u8_x
__builtin_sve_svcnot_u8_z
__builtin_sve_svcnt_bf16_m
q8Usq8Usq16bq8y
__builtin_sve_svcnt_bf16_x
q8Usq16bq8y
__builtin_sve_svcnt_bf16_z
__builtin_sve_svcnt_f16_m
q8Usq8Usq16bq8h
__builtin_sve_svcnt_f16_x
q8Usq16bq8h
__builtin_sve_svcnt_f16_z
__builtin_sve_svcnt_f32_m
q4Uiq4Uiq16bq4f
__builtin_sve_svcnt_f32_x
q4Uiq16bq4f
__builtin_sve_svcnt_f32_z
__builtin_sve_svcnt_f64_m
q2UWiq2UWiq16bq2d
__builtin_sve_svcnt_f64_x
q2UWiq16bq2d
__builtin_sve_svcnt_f64_z
__builtin_sve_svcnt_s16_m
__builtin_sve_svcnt_s16_x
__builtin_sve_svcnt_s16_z
__builtin_sve_svcnt_s32_m
__builtin_sve_svcnt_s32_x
__builtin_sve_svcnt_s32_z
__builtin_sve_svcnt_s64_m
__builtin_sve_svcnt_s64_x
__builtin_sve_svcnt_s64_z
__builtin_sve_svcnt_s8_m
__builtin_sve_svcnt_s8_x
__builtin_sve_svcnt_s8_z
__builtin_sve_svcnt_u16_m
__builtin_sve_svcnt_u16_x
__builtin_sve_svcnt_u16_z
__builtin_sve_svcnt_u32_m
__builtin_sve_svcnt_u32_x
__builtin_sve_svcnt_u32_z
__builtin_sve_svcnt_u64_m
__builtin_sve_svcnt_u64_x
__builtin_sve_svcnt_u64_z
__builtin_sve_svcnt_u8_m
__builtin_sve_svcnt_u8_x
__builtin_sve_svcnt_u8_z
__builtin_sve_svcntb
__builtin_sve_svcntb_pat
UWiIi
__builtin_sve_svcntd
__builtin_sve_svcntd_pat
__builtin_sve_svcnth
__builtin_sve_svcnth_pat
__builtin_sve_svcntp_b16
UWiq16bq16b
__builtin_sve_svcntp_b32
__builtin_sve_svcntp_b64
__builtin_sve_svcntp_b8
__builtin_sve_svcntw
__builtin_sve_svcntw_pat
__builtin_sve_svcompact_f32
__builtin_sve_svcompact_f64
__builtin_sve_svcompact_s32
__builtin_sve_svcompact_s64
__builtin_sve_svcompact_u32
__builtin_sve_svcompact_u64
__builtin_sve_svcreate2_bf16
q16yq8yq8y
__builtin_sve_svcreate2_f16
q16hq8hq8h
__builtin_sve_svcreate2_f32
q8fq4fq4f
__builtin_sve_svcreate2_f64
q4dq2dq2d
__builtin_sve_svcreate2_s16
q16sq8sq8s
__builtin_sve_svcreate2_s32
q8iq4iq4i
__builtin_sve_svcreate2_s64
q4Wiq2Wiq2Wi
__builtin_sve_svcreate2_s8
q32Scq16Scq16Sc
__builtin_sve_svcreate2_u16
q16Usq8Usq8Us
__builtin_sve_svcreate2_u32
q8Uiq4Uiq4Ui
__builtin_sve_svcreate2_u64
q4UWiq2UWiq2UWi
__builtin_sve_svcreate2_u8
q32Ucq16Ucq16Uc
__builtin_sve_svcreate3_bf16
q24yq8yq8yq8y
__builtin_sve_svcreate3_f16
q24hq8hq8hq8h
__builtin_sve_svcreate3_f32
q12fq4fq4fq4f
__builtin_sve_svcreate3_f64
q6dq2dq2dq2d
__builtin_sve_svcreate3_s16
q24sq8sq8sq8s
__builtin_sve_svcreate3_s32
q12iq4iq4iq4i
__builtin_sve_svcreate3_s64
q6Wiq2Wiq2Wiq2Wi
__builtin_sve_svcreate3_s8
q48Scq16Scq16Scq16Sc
__builtin_sve_svcreate3_u16
q24Usq8Usq8Usq8Us
__builtin_sve_svcreate3_u32
q12Uiq4Uiq4Uiq4Ui
__builtin_sve_svcreate3_u64
q6UWiq2UWiq2UWiq2UWi
__builtin_sve_svcreate3_u8
q48Ucq16Ucq16Ucq16Uc
__builtin_sve_svcreate4_bf16
q32yq8yq8yq8yq8y
__builtin_sve_svcreate4_f16
q32hq8hq8hq8hq8h
__builtin_sve_svcreate4_f32
q16fq4fq4fq4fq4f
__builtin_sve_svcreate4_f64
q8dq2dq2dq2dq2d
__builtin_sve_svcreate4_s16
q32sq8sq8sq8sq8s
__builtin_sve_svcreate4_s32
q16iq4iq4iq4iq4i
__builtin_sve_svcreate4_s64
q8Wiq2Wiq2Wiq2Wiq2Wi
__builtin_sve_svcreate4_s8
q64Scq16Scq16Scq16Scq16Sc
__builtin_sve_svcreate4_u16
q32Usq8Usq8Usq8Usq8Us
__builtin_sve_svcreate4_u32
q16Uiq4Uiq4Uiq4Uiq4Ui
__builtin_sve_svcreate4_u64
q8UWiq2UWiq2UWiq2UWiq2UWi
__builtin_sve_svcreate4_u8
q64Ucq16Ucq16Ucq16Ucq16Uc
__builtin_sve_svcvt_bf16_f32_m
q8yq8yq16bq4f
__builtin_sve_svcvt_bf16_f32_x
q8yq16bq4f
__builtin_sve_svcvt_bf16_f32_z
__builtin_sve_svcvt_f16_f32_m
q8hq8hq16bq4f
__builtin_sve_svcvt_f16_f32_x
q8hq16bq4f
__builtin_sve_svcvt_f16_f32_z
__builtin_sve_svcvt_f16_f64_m
q8hq8hq16bq2d
__builtin_sve_svcvt_f16_f64_x
q8hq16bq2d
__builtin_sve_svcvt_f16_f64_z
__builtin_sve_svcvt_f16_s16_m
q8hq8hq16bq8s
__builtin_sve_svcvt_f16_s16_x
q8hq16bq8s
__builtin_sve_svcvt_f16_s16_z
__builtin_sve_svcvt_f16_s32_m
q8hq8hq16bq4i
__builtin_sve_svcvt_f16_s32_x
q8hq16bq4i
__builtin_sve_svcvt_f16_s32_z
__builtin_sve_svcvt_f16_s64_m
q8hq8hq16bq2Wi
__builtin_sve_svcvt_f16_s64_x
q8hq16bq2Wi
__builtin_sve_svcvt_f16_s64_z
__builtin_sve_svcvt_f16_u16_m
q8hq8hq16bq8Us
__builtin_sve_svcvt_f16_u16_x
q8hq16bq8Us
__builtin_sve_svcvt_f16_u16_z
__builtin_sve_svcvt_f16_u32_m
q8hq8hq16bq4Ui
__builtin_sve_svcvt_f16_u32_x
q8hq16bq4Ui
__builtin_sve_svcvt_f16_u32_z
__builtin_sve_svcvt_f16_u64_m
q8hq8hq16bq2UWi
__builtin_sve_svcvt_f16_u64_x
q8hq16bq2UWi
__builtin_sve_svcvt_f16_u64_z
__builtin_sve_svcvt_f32_f16_m
q4fq4fq16bq8h
__builtin_sve_svcvt_f32_f16_x
q4fq16bq8h
__builtin_sve_svcvt_f32_f16_z
__builtin_sve_svcvt_f32_f64_m
q4fq4fq16bq2d
__builtin_sve_svcvt_f32_f64_x
q4fq16bq2d
__builtin_sve_svcvt_f32_f64_z
__builtin_sve_svcvt_f32_s32_m
q4fq4fq16bq4i
__builtin_sve_svcvt_f32_s32_x
q4fq16bq4i
__builtin_sve_svcvt_f32_s32_z
__builtin_sve_svcvt_f32_s64_m
q4fq4fq16bq2Wi
__builtin_sve_svcvt_f32_s64_x
q4fq16bq2Wi
__builtin_sve_svcvt_f32_s64_z
__builtin_sve_svcvt_f32_u32_m
q4fq4fq16bq4Ui
__builtin_sve_svcvt_f32_u32_x
q4fq16bq4Ui
__builtin_sve_svcvt_f32_u32_z
__builtin_sve_svcvt_f32_u64_m
q4fq4fq16bq2UWi
__builtin_sve_svcvt_f32_u64_x
q4fq16bq2UWi
__builtin_sve_svcvt_f32_u64_z
__builtin_sve_svcvt_f64_f16_m
q2dq2dq16bq8h
__builtin_sve_svcvt_f64_f16_x
q2dq16bq8h
__builtin_sve_svcvt_f64_f16_z
__builtin_sve_svcvt_f64_f32_m
q2dq2dq16bq4f
__builtin_sve_svcvt_f64_f32_x
q2dq16bq4f
__builtin_sve_svcvt_f64_f32_z
__builtin_sve_svcvt_f64_s32_m
q2dq2dq16bq4i
__builtin_sve_svcvt_f64_s32_x
q2dq16bq4i
__builtin_sve_svcvt_f64_s32_z
__builtin_sve_svcvt_f64_s64_m
q2dq2dq16bq2Wi
__builtin_sve_svcvt_f64_s64_x
q2dq16bq2Wi
__builtin_sve_svcvt_f64_s64_z
__builtin_sve_svcvt_f64_u32_m
q2dq2dq16bq4Ui
__builtin_sve_svcvt_f64_u32_x
q2dq16bq4Ui
__builtin_sve_svcvt_f64_u32_z
__builtin_sve_svcvt_f64_u64_m
q2dq2dq16bq2UWi
__builtin_sve_svcvt_f64_u64_x
q2dq16bq2UWi
__builtin_sve_svcvt_f64_u64_z
__builtin_sve_svcvt_s16_f16_m
q8sq8sq16bq8h
__builtin_sve_svcvt_s16_f16_x
q8sq16bq8h
__builtin_sve_svcvt_s16_f16_z
__builtin_sve_svcvt_s32_f16_m
q4iq4iq16bq8h
__builtin_sve_svcvt_s32_f16_x
q4iq16bq8h
__builtin_sve_svcvt_s32_f16_z
__builtin_sve_svcvt_s32_f32_m
q4iq4iq16bq4f
__builtin_sve_svcvt_s32_f32_x
q4iq16bq4f
__builtin_sve_svcvt_s32_f32_z
__builtin_sve_svcvt_s32_f64_m
q4iq4iq16bq2d
__builtin_sve_svcvt_s32_f64_x
q4iq16bq2d
__builtin_sve_svcvt_s32_f64_z
__builtin_sve_svcvt_s64_f16_m
q2Wiq2Wiq16bq8h
__builtin_sve_svcvt_s64_f16_x
q2Wiq16bq8h
__builtin_sve_svcvt_s64_f16_z
__builtin_sve_svcvt_s64_f32_m
q2Wiq2Wiq16bq4f
__builtin_sve_svcvt_s64_f32_x
q2Wiq16bq4f
__builtin_sve_svcvt_s64_f32_z
__builtin_sve_svcvt_s64_f64_m
q2Wiq2Wiq16bq2d
__builtin_sve_svcvt_s64_f64_x
q2Wiq16bq2d
__builtin_sve_svcvt_s64_f64_z
__builtin_sve_svcvt_u16_f16_m
__builtin_sve_svcvt_u16_f16_x
__builtin_sve_svcvt_u16_f16_z
__builtin_sve_svcvt_u32_f16_m
q4Uiq4Uiq16bq8h
__builtin_sve_svcvt_u32_f16_x
q4Uiq16bq8h
__builtin_sve_svcvt_u32_f16_z
__builtin_sve_svcvt_u32_f32_m
__builtin_sve_svcvt_u32_f32_x
__builtin_sve_svcvt_u32_f32_z
__builtin_sve_svcvt_u32_f64_m
q4Uiq4Uiq16bq2d
__builtin_sve_svcvt_u32_f64_x
q4Uiq16bq2d
__builtin_sve_svcvt_u32_f64_z
__builtin_sve_svcvt_u64_f16_m
q2UWiq2UWiq16bq8h
__builtin_sve_svcvt_u64_f16_x
q2UWiq16bq8h
__builtin_sve_svcvt_u64_f16_z
__builtin_sve_svcvt_u64_f32_m
q2UWiq2UWiq16bq4f
__builtin_sve_svcvt_u64_f32_x
q2UWiq16bq4f
__builtin_sve_svcvt_u64_f32_z
__builtin_sve_svcvt_u64_f64_m
__builtin_sve_svcvt_u64_f64_x
__builtin_sve_svcvt_u64_f64_z
__builtin_sve_svcvtlt_f32_f16_m
__builtin_sve_svcvtlt_f32_f16_x
__builtin_sve_svcvtlt_f64_f32_m
__builtin_sve_svcvtlt_f64_f32_x
__builtin_sve_svcvtnt_bf16_f32_m
__builtin_sve_svcvtnt_f16_f32_m
__builtin_sve_svcvtnt_f32_f64_m
__builtin_sve_svcvtx_f32_f64_m
__builtin_sve_svcvtx_f32_f64_x
__builtin_sve_svcvtx_f32_f64_z
__builtin_sve_svcvtxnt_f32_f64_m
__builtin_sve_svdiv_f16_m
__builtin_sve_svdiv_f16_x
__builtin_sve_svdiv_f16_z
__builtin_sve_svdiv_f32_m
__builtin_sve_svdiv_f32_x
__builtin_sve_svdiv_f32_z
__builtin_sve_svdiv_f64_m
__builtin_sve_svdiv_f64_x
__builtin_sve_svdiv_f64_z
__builtin_sve_svdiv_n_f16_m
__builtin_sve_svdiv_n_f16_x
__builtin_sve_svdiv_n_f16_z
__builtin_sve_svdiv_n_f32_m
__builtin_sve_svdiv_n_f32_x
__builtin_sve_svdiv_n_f32_z
__builtin_sve_svdiv_n_f64_m
__builtin_sve_svdiv_n_f64_x
__builtin_sve_svdiv_n_f64_z
__builtin_sve_svdiv_n_s32_m
__builtin_sve_svdiv_n_s32_x
__builtin_sve_svdiv_n_s32_z
__builtin_sve_svdiv_n_s64_m
__builtin_sve_svdiv_n_s64_x
__builtin_sve_svdiv_n_s64_z
__builtin_sve_svdiv_n_u32_m
__builtin_sve_svdiv_n_u32_x
__builtin_sve_svdiv_n_u32_z
__builtin_sve_svdiv_n_u64_m
__builtin_sve_svdiv_n_u64_x
__builtin_sve_svdiv_n_u64_z
__builtin_sve_svdiv_s32_m
__builtin_sve_svdiv_s32_x
__builtin_sve_svdiv_s32_z
__builtin_sve_svdiv_s64_m
__builtin_sve_svdiv_s64_x
__builtin_sve_svdiv_s64_z
__builtin_sve_svdiv_u32_m
__builtin_sve_svdiv_u32_x
__builtin_sve_svdiv_u32_z
__builtin_sve_svdiv_u64_m
__builtin_sve_svdiv_u64_x
__builtin_sve_svdiv_u64_z
__builtin_sve_svdivr_f16_m
__builtin_sve_svdivr_f16_x
__builtin_sve_svdivr_f16_z
__builtin_sve_svdivr_f32_m
__builtin_sve_svdivr_f32_x
__builtin_sve_svdivr_f32_z
__builtin_sve_svdivr_f64_m
__builtin_sve_svdivr_f64_x
__builtin_sve_svdivr_f64_z
__builtin_sve_svdivr_n_f16_m
__builtin_sve_svdivr_n_f16_x
__builtin_sve_svdivr_n_f16_z
__builtin_sve_svdivr_n_f32_m
__builtin_sve_svdivr_n_f32_x
__builtin_sve_svdivr_n_f32_z
__builtin_sve_svdivr_n_f64_m
__builtin_sve_svdivr_n_f64_x
__builtin_sve_svdivr_n_f64_z
__builtin_sve_svdivr_n_s32_m
__builtin_sve_svdivr_n_s32_x
__builtin_sve_svdivr_n_s32_z
__builtin_sve_svdivr_n_s64_m
__builtin_sve_svdivr_n_s64_x
__builtin_sve_svdivr_n_s64_z
__builtin_sve_svdivr_n_u32_m
__builtin_sve_svdivr_n_u32_x
__builtin_sve_svdivr_n_u32_z
__builtin_sve_svdivr_n_u64_m
__builtin_sve_svdivr_n_u64_x
__builtin_sve_svdivr_n_u64_z
__builtin_sve_svdivr_s32_m
__builtin_sve_svdivr_s32_x
__builtin_sve_svdivr_s32_z
__builtin_sve_svdivr_s64_m
__builtin_sve_svdivr_s64_x
__builtin_sve_svdivr_s64_z
__builtin_sve_svdivr_u32_m
__builtin_sve_svdivr_u32_x
__builtin_sve_svdivr_u32_z
__builtin_sve_svdivr_u64_m
__builtin_sve_svdivr_u64_x
__builtin_sve_svdivr_u64_z
__builtin_sve_svdot_lane_s32
__builtin_sve_svdot_lane_s64
__builtin_sve_svdot_lane_u32
q4Uiq4Uiq16Ucq16UcIUWi
__builtin_sve_svdot_lane_u64
q2UWiq2UWiq8Usq8UsIUWi
__builtin_sve_svdot_n_s32
q4iq4iq16ScSc
__builtin_sve_svdot_n_s64
q2Wiq2Wiq8ss
__builtin_sve_svdot_n_u32
q4Uiq4Uiq16UcUc
__builtin_sve_svdot_n_u64
q2UWiq2UWiq8UsUs
__builtin_sve_svdot_s32
q4iq4iq16Scq16Sc
__builtin_sve_svdot_s64
q2Wiq2Wiq8sq8s
__builtin_sve_svdot_u32
q4Uiq4Uiq16Ucq16Uc
__builtin_sve_svdot_u64
q2UWiq2UWiq8Usq8Us
__builtin_sve_svdup_lane_bf16
q8yq8yUs
__builtin_sve_svdup_lane_f16
q8hq8hUs
__builtin_sve_svdup_lane_f32
q4fq4fUi
__builtin_sve_svdup_lane_f64
q2dq2dUWi
__builtin_sve_svdup_lane_s16
q8sq8sUs
__builtin_sve_svdup_lane_s32
q4iq4iUi
__builtin_sve_svdup_lane_s64
q2Wiq2WiUWi
__builtin_sve_svdup_lane_s8
q16Scq16ScUc
__builtin_sve_svdup_lane_u16
__builtin_sve_svdup_lane_u32
__builtin_sve_svdup_lane_u64
__builtin_sve_svdup_lane_u8
__builtin_sve_svdup_n_b16
q16bs
__builtin_sve_svdup_n_b32
q16bi
__builtin_sve_svdup_n_b64
q16bWi
__builtin_sve_svdup_n_b8
q16bSc
__builtin_sve_svdup_n_bf16
q8yy
__builtin_sve_svdup_n_bf16_m
q8yq8yq16by
__builtin_sve_svdup_n_bf16_x
q8yq16by
__builtin_sve_svdup_n_bf16_z
__builtin_sve_svdup_n_f16
q8hh
__builtin_sve_svdup_n_f16_m
q8hq8hq16bh
__builtin_sve_svdup_n_f16_x
q8hq16bh
__builtin_sve_svdup_n_f16_z
__builtin_sve_svdup_n_f32
q4ff
__builtin_sve_svdup_n_f32_m
q4fq4fq16bf
__builtin_sve_svdup_n_f32_x
q4fq16bf
__builtin_sve_svdup_n_f32_z
__builtin_sve_svdup_n_f64
q2dd
__builtin_sve_svdup_n_f64_m
q2dq2dq16bd
__builtin_sve_svdup_n_f64_x
q2dq16bd
__builtin_sve_svdup_n_f64_z
__builtin_sve_svdup_n_s16
q8ss
__builtin_sve_svdup_n_s16_m
q8sq8sq16bs
__builtin_sve_svdup_n_s16_x
q8sq16bs
__builtin_sve_svdup_n_s16_z
__builtin_sve_svdup_n_s32
q4ii
__builtin_sve_svdup_n_s32_m
q4iq4iq16bi
__builtin_sve_svdup_n_s32_x
q4iq16bi
__builtin_sve_svdup_n_s32_z
__builtin_sve_svdup_n_s64
q2WiWi
__builtin_sve_svdup_n_s64_m
q2Wiq2Wiq16bWi
__builtin_sve_svdup_n_s64_x
q2Wiq16bWi
__builtin_sve_svdup_n_s64_z
__builtin_sve_svdup_n_s8
q16ScSc
__builtin_sve_svdup_n_s8_m
q16Scq16Scq16bSc
__builtin_sve_svdup_n_s8_x
q16Scq16bSc
__builtin_sve_svdup_n_s8_z
__builtin_sve_svdup_n_u16
q8UsUs
__builtin_sve_svdup_n_u16_m
q8Usq8Usq16bUs
__builtin_sve_svdup_n_u16_x
q8Usq16bUs
__builtin_sve_svdup_n_u16_z
__builtin_sve_svdup_n_u32
q4UiUi
__builtin_sve_svdup_n_u32_m
q4Uiq4Uiq16bUi
__builtin_sve_svdup_n_u32_x
q4Uiq16bUi
__builtin_sve_svdup_n_u32_z
__builtin_sve_svdup_n_u64
q2UWiUWi
__builtin_sve_svdup_n_u64_m
q2UWiq2UWiq16bUWi
__builtin_sve_svdup_n_u64_x
q2UWiq16bUWi
__builtin_sve_svdup_n_u64_z
__builtin_sve_svdup_n_u8
q16UcUc
__builtin_sve_svdup_n_u8_m
q16Ucq16Ucq16bUc
__builtin_sve_svdup_n_u8_x
q16Ucq16bUc
__builtin_sve_svdup_n_u8_z
__builtin_sve_svdupq_lane_bf16
q8yq8yUWi
__builtin_sve_svdupq_lane_f16
q8hq8hUWi
__builtin_sve_svdupq_lane_f32
q4fq4fUWi
__builtin_sve_svdupq_lane_f64
__builtin_sve_svdupq_lane_s16
q8sq8sUWi
__builtin_sve_svdupq_lane_s32
q4iq4iUWi
__builtin_sve_svdupq_lane_s64
__builtin_sve_svdupq_lane_s8
q16Scq16ScUWi
__builtin_sve_svdupq_lane_u16
q8Usq8UsUWi
__builtin_sve_svdupq_lane_u32
q4Uiq4UiUWi
__builtin_sve_svdupq_lane_u64
__builtin_sve_svdupq_lane_u8
q16Ucq16UcUWi
__builtin_sve_svdupq_n_b16
q16bssssssss
__builtin_sve_svdupq_n_b32
q16biiii
__builtin_sve_svdupq_n_b64
q16bWiWi
__builtin_sve_svdupq_n_b8
q16bScScScScScScScScScScScScScScScSc
__builtin_sve_svdupq_n_bf16
q8yyyyyyyyy
__builtin_sve_svdupq_n_f16
q8hhhhhhhhh
__builtin_sve_svdupq_n_f32
q4fffff
__builtin_sve_svdupq_n_f64
q2ddd
__builtin_sve_svdupq_n_s16
q8sssssssss
__builtin_sve_svdupq_n_s32
q4iiiii
__builtin_sve_svdupq_n_s64
q2WiWiWi
__builtin_sve_svdupq_n_s8
q16ScScScScScScScScScScScScScScScScSc
__builtin_sve_svdupq_n_u16
q8UsUsUsUsUsUsUsUsUs
__builtin_sve_svdupq_n_u32
q4UiUiUiUiUi
__builtin_sve_svdupq_n_u64
q2UWiUWiUWi
__builtin_sve_svdupq_n_u8
q16UcUcUcUcUcUcUcUcUcUcUcUcUcUcUcUcUc
__builtin_sve_sveor3_n_s16
__builtin_sve_sveor3_n_s32
__builtin_sve_sveor3_n_s64
__builtin_sve_sveor3_n_s8
__builtin_sve_sveor3_n_u16
__builtin_sve_sveor3_n_u32
__builtin_sve_sveor3_n_u64
__builtin_sve_sveor3_n_u8
__builtin_sve_sveor3_s16
__builtin_sve_sveor3_s32
__builtin_sve_sveor3_s64
__builtin_sve_sveor3_s8
__builtin_sve_sveor3_u16
__builtin_sve_sveor3_u32
__builtin_sve_sveor3_u64
__builtin_sve_sveor3_u8
__builtin_sve_sveor_b_z
__builtin_sve_sveor_n_s16_m
__builtin_sve_sveor_n_s16_x
__builtin_sve_sveor_n_s16_z
__builtin_sve_sveor_n_s32_m
__builtin_sve_sveor_n_s32_x
__builtin_sve_sveor_n_s32_z
__builtin_sve_sveor_n_s64_m
__builtin_sve_sveor_n_s64_x
__builtin_sve_sveor_n_s64_z
__builtin_sve_sveor_n_s8_m
__builtin_sve_sveor_n_s8_x
__builtin_sve_sveor_n_s8_z
__builtin_sve_sveor_n_u16_m
__builtin_sve_sveor_n_u16_x
__builtin_sve_sveor_n_u16_z
__builtin_sve_sveor_n_u32_m
__builtin_sve_sveor_n_u32_x
__builtin_sve_sveor_n_u32_z
__builtin_sve_sveor_n_u64_m
__builtin_sve_sveor_n_u64_x
__builtin_sve_sveor_n_u64_z
__builtin_sve_sveor_n_u8_m
__builtin_sve_sveor_n_u8_x
__builtin_sve_sveor_n_u8_z
__builtin_sve_sveor_s16_m
__builtin_sve_sveor_s16_x
__builtin_sve_sveor_s16_z
__builtin_sve_sveor_s32_m
__builtin_sve_sveor_s32_x
__builtin_sve_sveor_s32_z
__builtin_sve_sveor_s64_m
__builtin_sve_sveor_s64_x
__builtin_sve_sveor_s64_z
__builtin_sve_sveor_s8_m
__builtin_sve_sveor_s8_x
__builtin_sve_sveor_s8_z
__builtin_sve_sveor_u16_m
__builtin_sve_sveor_u16_x
__builtin_sve_sveor_u16_z
__builtin_sve_sveor_u32_m
__builtin_sve_sveor_u32_x
__builtin_sve_sveor_u32_z
__builtin_sve_sveor_u64_m
__builtin_sve_sveor_u64_x
__builtin_sve_sveor_u64_z
__builtin_sve_sveor_u8_m
__builtin_sve_sveor_u8_x
__builtin_sve_sveor_u8_z
__builtin_sve_sveorbt_n_s16
__builtin_sve_sveorbt_n_s32
__builtin_sve_sveorbt_n_s64
__builtin_sve_sveorbt_n_s8
__builtin_sve_sveorbt_n_u16
__builtin_sve_sveorbt_n_u32
__builtin_sve_sveorbt_n_u64
__builtin_sve_sveorbt_n_u8
__builtin_sve_sveorbt_s16
__builtin_sve_sveorbt_s32
__builtin_sve_sveorbt_s64
__builtin_sve_sveorbt_s8
__builtin_sve_sveorbt_u16
__builtin_sve_sveorbt_u32
__builtin_sve_sveorbt_u64
__builtin_sve_sveorbt_u8
__builtin_sve_sveortb_n_s16
__builtin_sve_sveortb_n_s32
__builtin_sve_sveortb_n_s64
__builtin_sve_sveortb_n_s8
__builtin_sve_sveortb_n_u16
__builtin_sve_sveortb_n_u32
__builtin_sve_sveortb_n_u64
__builtin_sve_sveortb_n_u8
__builtin_sve_sveortb_s16
__builtin_sve_sveortb_s32
__builtin_sve_sveortb_s64
__builtin_sve_sveortb_s8
__builtin_sve_sveortb_u16
__builtin_sve_sveortb_u32
__builtin_sve_sveortb_u64
__builtin_sve_sveortb_u8
__builtin_sve_sveorv_s16
__builtin_sve_sveorv_s32
__builtin_sve_sveorv_s64
__builtin_sve_sveorv_s8
__builtin_sve_sveorv_u16
__builtin_sve_sveorv_u32
__builtin_sve_sveorv_u64
__builtin_sve_sveorv_u8
__builtin_sve_svexpa_f16
q8hq8Us
__builtin_sve_svexpa_f32
q4fq4Ui
__builtin_sve_svexpa_f64
q2dq2UWi
__builtin_sve_svext_bf16
q8yq8yq8yIUWi
__builtin_sve_svext_f16
q8hq8hq8hIUWi
__builtin_sve_svext_f32
q4fq4fq4fIUWi
__builtin_sve_svext_f64
q2dq2dq2dIUWi
__builtin_sve_svext_s16
__builtin_sve_svext_s32
__builtin_sve_svext_s64
__builtin_sve_svext_s8
__builtin_sve_svext_u16
__builtin_sve_svext_u32
__builtin_sve_svext_u64
__builtin_sve_svext_u8
__builtin_sve_svextb_s16_m
__builtin_sve_svextb_s16_x
__builtin_sve_svextb_s16_z
__builtin_sve_svextb_s32_m
__builtin_sve_svextb_s32_x
__builtin_sve_svextb_s32_z
__builtin_sve_svextb_s64_m
__builtin_sve_svextb_s64_x
__builtin_sve_svextb_s64_z
__builtin_sve_svextb_u16_m
__builtin_sve_svextb_u16_x
__builtin_sve_svextb_u16_z
__builtin_sve_svextb_u32_m
__builtin_sve_svextb_u32_x
__builtin_sve_svextb_u32_z
__builtin_sve_svextb_u64_m
__builtin_sve_svextb_u64_x
__builtin_sve_svextb_u64_z
__builtin_sve_svexth_s32_m
__builtin_sve_svexth_s32_x
__builtin_sve_svexth_s32_z
__builtin_sve_svexth_s64_m
__builtin_sve_svexth_s64_x
__builtin_sve_svexth_s64_z
__builtin_sve_svexth_u32_m
__builtin_sve_svexth_u32_x
__builtin_sve_svexth_u32_z
__builtin_sve_svexth_u64_m
__builtin_sve_svexth_u64_x
__builtin_sve_svexth_u64_z
__builtin_sve_svextw_s64_m
__builtin_sve_svextw_s64_x
__builtin_sve_svextw_s64_z
__builtin_sve_svextw_u64_m
__builtin_sve_svextw_u64_x
__builtin_sve_svextw_u64_z
__builtin_sve_svget2_bf16
q8yq16yIUWi
__builtin_sve_svget2_f16
q8hq16hIUWi
__builtin_sve_svget2_f32
q4fq8fIUWi
__builtin_sve_svget2_f64
q2dq4dIUWi
__builtin_sve_svget2_s16
q8sq16sIUWi
__builtin_sve_svget2_s32
q4iq8iIUWi
__builtin_sve_svget2_s64
q2Wiq4WiIUWi
__builtin_sve_svget2_s8
q16Scq32ScIUWi
__builtin_sve_svget2_u16
q8Usq16UsIUWi
__builtin_sve_svget2_u32
q4Uiq8UiIUWi
__builtin_sve_svget2_u64
q2UWiq4UWiIUWi
__builtin_sve_svget2_u8
q16Ucq32UcIUWi
__builtin_sve_svget3_bf16
q8yq24yIUWi
__builtin_sve_svget3_f16
q8hq24hIUWi
__builtin_sve_svget3_f32
q4fq12fIUWi
__builtin_sve_svget3_f64
q2dq6dIUWi
__builtin_sve_svget3_s16
q8sq24sIUWi
__builtin_sve_svget3_s32
q4iq12iIUWi
__builtin_sve_svget3_s64
q2Wiq6WiIUWi
__builtin_sve_svget3_s8
q16Scq48ScIUWi
__builtin_sve_svget3_u16
q8Usq24UsIUWi
__builtin_sve_svget3_u32
q4Uiq12UiIUWi
__builtin_sve_svget3_u64
q2UWiq6UWiIUWi
__builtin_sve_svget3_u8
q16Ucq48UcIUWi
__builtin_sve_svget4_bf16
q8yq32yIUWi
__builtin_sve_svget4_f16
q8hq32hIUWi
__builtin_sve_svget4_f32
q4fq16fIUWi
__builtin_sve_svget4_f64
q2dq8dIUWi
__builtin_sve_svget4_s16
q8sq32sIUWi
__builtin_sve_svget4_s32
q4iq16iIUWi
__builtin_sve_svget4_s64
q2Wiq8WiIUWi
__builtin_sve_svget4_s8
q16Scq64ScIUWi
__builtin_sve_svget4_u16
q8Usq32UsIUWi
__builtin_sve_svget4_u32
q4Uiq16UiIUWi
__builtin_sve_svget4_u64
q2UWiq8UWiIUWi
__builtin_sve_svget4_u8
q16Ucq64UcIUWi
__builtin_sve_svhadd_n_s16_m
__builtin_sve_svhadd_n_s16_x
__builtin_sve_svhadd_n_s16_z
__builtin_sve_svhadd_n_s32_m
__builtin_sve_svhadd_n_s32_x
__builtin_sve_svhadd_n_s32_z
__builtin_sve_svhadd_n_s64_m
__builtin_sve_svhadd_n_s64_x
__builtin_sve_svhadd_n_s64_z
__builtin_sve_svhadd_n_s8_m
__builtin_sve_svhadd_n_s8_x
__builtin_sve_svhadd_n_s8_z
__builtin_sve_svhadd_n_u16_m
__builtin_sve_svhadd_n_u16_x
__builtin_sve_svhadd_n_u16_z
__builtin_sve_svhadd_n_u32_m
__builtin_sve_svhadd_n_u32_x
__builtin_sve_svhadd_n_u32_z
__builtin_sve_svhadd_n_u64_m
__builtin_sve_svhadd_n_u64_x
__builtin_sve_svhadd_n_u64_z
__builtin_sve_svhadd_n_u8_m
__builtin_sve_svhadd_n_u8_x
__builtin_sve_svhadd_n_u8_z
__builtin_sve_svhadd_s16_m
__builtin_sve_svhadd_s16_x
__builtin_sve_svhadd_s16_z
__builtin_sve_svhadd_s32_m
__builtin_sve_svhadd_s32_x
__builtin_sve_svhadd_s32_z
__builtin_sve_svhadd_s64_m
__builtin_sve_svhadd_s64_x
__builtin_sve_svhadd_s64_z
__builtin_sve_svhadd_s8_m
__builtin_sve_svhadd_s8_x
__builtin_sve_svhadd_s8_z
__builtin_sve_svhadd_u16_m
__builtin_sve_svhadd_u16_x
__builtin_sve_svhadd_u16_z
__builtin_sve_svhadd_u32_m
__builtin_sve_svhadd_u32_x
__builtin_sve_svhadd_u32_z
__builtin_sve_svhadd_u64_m
__builtin_sve_svhadd_u64_x
__builtin_sve_svhadd_u64_z
__builtin_sve_svhadd_u8_m
__builtin_sve_svhadd_u8_x
__builtin_sve_svhadd_u8_z
__builtin_sve_svhistcnt_s32_z
q4Uiq16bq4iq4i
__builtin_sve_svhistcnt_s64_z
q2UWiq16bq2Wiq2Wi
__builtin_sve_svhistcnt_u32_z
__builtin_sve_svhistcnt_u64_z
__builtin_sve_svhistseg_s8
q16Ucq16Scq16Sc
__builtin_sve_svhistseg_u8
__builtin_sve_svhsub_n_s16_m
__builtin_sve_svhsub_n_s16_x
__builtin_sve_svhsub_n_s16_z
__builtin_sve_svhsub_n_s32_m
__builtin_sve_svhsub_n_s32_x
__builtin_sve_svhsub_n_s32_z
__builtin_sve_svhsub_n_s64_m
__builtin_sve_svhsub_n_s64_x
__builtin_sve_svhsub_n_s64_z
__builtin_sve_svhsub_n_s8_m
__builtin_sve_svhsub_n_s8_x
__builtin_sve_svhsub_n_s8_z
__builtin_sve_svhsub_n_u16_m
__builtin_sve_svhsub_n_u16_x
__builtin_sve_svhsub_n_u16_z
__builtin_sve_svhsub_n_u32_m
__builtin_sve_svhsub_n_u32_x
__builtin_sve_svhsub_n_u32_z
__builtin_sve_svhsub_n_u64_m
__builtin_sve_svhsub_n_u64_x
__builtin_sve_svhsub_n_u64_z
__builtin_sve_svhsub_n_u8_m
__builtin_sve_svhsub_n_u8_x
__builtin_sve_svhsub_n_u8_z
__builtin_sve_svhsub_s16_m
__builtin_sve_svhsub_s16_x
__builtin_sve_svhsub_s16_z
__builtin_sve_svhsub_s32_m
__builtin_sve_svhsub_s32_x
__builtin_sve_svhsub_s32_z
__builtin_sve_svhsub_s64_m
__builtin_sve_svhsub_s64_x
__builtin_sve_svhsub_s64_z
__builtin_sve_svhsub_s8_m
__builtin_sve_svhsub_s8_x
__builtin_sve_svhsub_s8_z
__builtin_sve_svhsub_u16_m
__builtin_sve_svhsub_u16_x
__builtin_sve_svhsub_u16_z
__builtin_sve_svhsub_u32_m
__builtin_sve_svhsub_u32_x
__builtin_sve_svhsub_u32_z
__builtin_sve_svhsub_u64_m
__builtin_sve_svhsub_u64_x
__builtin_sve_svhsub_u64_z
__builtin_sve_svhsub_u8_m
__builtin_sve_svhsub_u8_x
__builtin_sve_svhsub_u8_z
__builtin_sve_svhsubr_n_s16_m
__builtin_sve_svhsubr_n_s16_x
__builtin_sve_svhsubr_n_s16_z
__builtin_sve_svhsubr_n_s32_m
__builtin_sve_svhsubr_n_s32_x
__builtin_sve_svhsubr_n_s32_z
__builtin_sve_svhsubr_n_s64_m
__builtin_sve_svhsubr_n_s64_x
__builtin_sve_svhsubr_n_s64_z
__builtin_sve_svhsubr_n_s8_m
__builtin_sve_svhsubr_n_s8_x
__builtin_sve_svhsubr_n_s8_z
__builtin_sve_svhsubr_n_u16_m
__builtin_sve_svhsubr_n_u16_x
__builtin_sve_svhsubr_n_u16_z
__builtin_sve_svhsubr_n_u32_m
__builtin_sve_svhsubr_n_u32_x
__builtin_sve_svhsubr_n_u32_z
__builtin_sve_svhsubr_n_u64_m
__builtin_sve_svhsubr_n_u64_x
__builtin_sve_svhsubr_n_u64_z
__builtin_sve_svhsubr_n_u8_m
__builtin_sve_svhsubr_n_u8_x
__builtin_sve_svhsubr_n_u8_z
__builtin_sve_svhsubr_s16_m
__builtin_sve_svhsubr_s16_x
__builtin_sve_svhsubr_s16_z
__builtin_sve_svhsubr_s32_m
__builtin_sve_svhsubr_s32_x
__builtin_sve_svhsubr_s32_z
__builtin_sve_svhsubr_s64_m
__builtin_sve_svhsubr_s64_x
__builtin_sve_svhsubr_s64_z
__builtin_sve_svhsubr_s8_m
__builtin_sve_svhsubr_s8_x
__builtin_sve_svhsubr_s8_z
__builtin_sve_svhsubr_u16_m
__builtin_sve_svhsubr_u16_x
__builtin_sve_svhsubr_u16_z
__builtin_sve_svhsubr_u32_m
__builtin_sve_svhsubr_u32_x
__builtin_sve_svhsubr_u32_z
__builtin_sve_svhsubr_u64_m
__builtin_sve_svhsubr_u64_x
__builtin_sve_svhsubr_u64_z
__builtin_sve_svhsubr_u8_m
__builtin_sve_svhsubr_u8_x
__builtin_sve_svhsubr_u8_z
__builtin_sve_svindex_s16
q8sss
__builtin_sve_svindex_s32
q4iii
__builtin_sve_svindex_s64
__builtin_sve_svindex_s8
q16ScScSc
__builtin_sve_svindex_u16
q8UsUsUs
__builtin_sve_svindex_u32
q4UiUiUi
__builtin_sve_svindex_u64
__builtin_sve_svindex_u8
q16UcUcUc
__builtin_sve_svinsr_n_bf16
q8yq8yy
__builtin_sve_svinsr_n_f16
q8hq8hh
__builtin_sve_svinsr_n_f32
q4fq4ff
__builtin_sve_svinsr_n_f64
q2dq2dd
__builtin_sve_svinsr_n_s16
q8sq8ss
__builtin_sve_svinsr_n_s32
q4iq4ii
__builtin_sve_svinsr_n_s64
q2Wiq2WiWi
__builtin_sve_svinsr_n_s8
q16Scq16ScSc
__builtin_sve_svinsr_n_u16
__builtin_sve_svinsr_n_u32
__builtin_sve_svinsr_n_u64
__builtin_sve_svinsr_n_u8
__builtin_sve_svlasta_bf16
yq16bq8y
__builtin_sve_svlasta_f16
__builtin_sve_svlasta_f32
__builtin_sve_svlasta_f64
__builtin_sve_svlasta_s16
__builtin_sve_svlasta_s32
__builtin_sve_svlasta_s64
__builtin_sve_svlasta_s8
__builtin_sve_svlasta_u16
__builtin_sve_svlasta_u32
__builtin_sve_svlasta_u64
__builtin_sve_svlasta_u8
__builtin_sve_svlastb_bf16
__builtin_sve_svlastb_f16
__builtin_sve_svlastb_f32
__builtin_sve_svlastb_f64
__builtin_sve_svlastb_s16
__builtin_sve_svlastb_s32
__builtin_sve_svlastb_s64
__builtin_sve_svlastb_s8
__builtin_sve_svlastb_u16
__builtin_sve_svlastb_u32
__builtin_sve_svlastb_u64
__builtin_sve_svlastb_u8
__builtin_sve_svld1_bf16
q8yq16byC*
__builtin_sve_svld1_f16
q8hq16bhC*
__builtin_sve_svld1_f32
q4fq16bfC*
__builtin_sve_svld1_f64
q2dq16bdC*
__builtin_sve_svld1_gather_s32index_f32
q4fq16bfC*q4i
__builtin_sve_svld1_gather_s32index_s32
q4iq16bSiC*q4i
__builtin_sve_svld1_gather_s32index_u32
q4Uiq16bUiC*q4i
__builtin_sve_svld1_gather_s32offset_f32
__builtin_sve_svld1_gather_s32offset_s32
__builtin_sve_svld1_gather_s32offset_u32
__builtin_sve_svld1_gather_s64index_f64
q2dq16bdC*q2Wi
__builtin_sve_svld1_gather_s64index_s64
q2Wiq16bSWiC*q2Wi
__builtin_sve_svld1_gather_s64index_u64
q2UWiq16bUWiC*q2Wi
__builtin_sve_svld1_gather_s64offset_f64
__builtin_sve_svld1_gather_s64offset_s64
__builtin_sve_svld1_gather_s64offset_u64
__builtin_sve_svld1_gather_u32base_f32
__builtin_sve_svld1_gather_u32base_index_f32
q4fq16bq4UiWi
__builtin_sve_svld1_gather_u32base_index_s32
q4iq16bq4UiWi
__builtin_sve_svld1_gather_u32base_index_u32
q4Uiq16bq4UiWi
__builtin_sve_svld1_gather_u32base_offset_f32
__builtin_sve_svld1_gather_u32base_offset_s32
__builtin_sve_svld1_gather_u32base_offset_u32
__builtin_sve_svld1_gather_u32base_s32
q4iq16bq4Ui
__builtin_sve_svld1_gather_u32base_u32
__builtin_sve_svld1_gather_u32index_f32
q4fq16bfC*q4Ui
__builtin_sve_svld1_gather_u32index_s32
q4iq16bSiC*q4Ui
__builtin_sve_svld1_gather_u32index_u32
q4Uiq16bUiC*q4Ui
__builtin_sve_svld1_gather_u32offset_f32
__builtin_sve_svld1_gather_u32offset_s32
__builtin_sve_svld1_gather_u32offset_u32
__builtin_sve_svld1_gather_u64base_f64
__builtin_sve_svld1_gather_u64base_index_f64
q2dq16bq2UWiWi
__builtin_sve_svld1_gather_u64base_index_s64
q2Wiq16bq2UWiWi
__builtin_sve_svld1_gather_u64base_index_u64
q2UWiq16bq2UWiWi
__builtin_sve_svld1_gather_u64base_offset_f64
__builtin_sve_svld1_gather_u64base_offset_s64
__builtin_sve_svld1_gather_u64base_offset_u64
__builtin_sve_svld1_gather_u64base_s64
q2Wiq16bq2UWi
__builtin_sve_svld1_gather_u64base_u64
__builtin_sve_svld1_gather_u64index_f64
q2dq16bdC*q2UWi
__builtin_sve_svld1_gather_u64index_s64
q2Wiq16bSWiC*q2UWi
__builtin_sve_svld1_gather_u64index_u64
q2UWiq16bUWiC*q2UWi
__builtin_sve_svld1_gather_u64offset_f64
__builtin_sve_svld1_gather_u64offset_s64
__builtin_sve_svld1_gather_u64offset_u64
__builtin_sve_svld1_s16
q8sq16bSsC*
__builtin_sve_svld1_s32
q4iq16bSiC*
__builtin_sve_svld1_s64
q2Wiq16bSWiC*
__builtin_sve_svld1_s8
q16Scq16bScC*
__builtin_sve_svld1_u16
q8Usq16bUsC*
__builtin_sve_svld1_u32
q4Uiq16bUiC*
__builtin_sve_svld1_u64
q2UWiq16bUWiC*
__builtin_sve_svld1_u8
q16Ucq16bUcC*
__builtin_sve_svld1_vnum_bf16
q8yq16byC*Wi
__builtin_sve_svld1_vnum_f16
q8hq16bhC*Wi
__builtin_sve_svld1_vnum_f32
q4fq16bfC*Wi
__builtin_sve_svld1_vnum_f64
q2dq16bdC*Wi
__builtin_sve_svld1_vnum_s16
q8sq16bSsC*Wi
__builtin_sve_svld1_vnum_s32
q4iq16bSiC*Wi
__builtin_sve_svld1_vnum_s64
q2Wiq16bSWiC*Wi
__builtin_sve_svld1_vnum_s8
q16Scq16bScC*Wi
__builtin_sve_svld1_vnum_u16
q8Usq16bUsC*Wi
__builtin_sve_svld1_vnum_u32
q4Uiq16bUiC*Wi
__builtin_sve_svld1_vnum_u64
q2UWiq16bUWiC*Wi
__builtin_sve_svld1_vnum_u8
q16Ucq16bUcC*Wi
__builtin_sve_svld1ro_bf16
__builtin_sve_svld1ro_f16
__builtin_sve_svld1ro_f32
__builtin_sve_svld1ro_f64
__builtin_sve_svld1ro_s16
__builtin_sve_svld1ro_s32
__builtin_sve_svld1ro_s64
__builtin_sve_svld1ro_s8
__builtin_sve_svld1ro_u16
__builtin_sve_svld1ro_u32
__builtin_sve_svld1ro_u64
__builtin_sve_svld1ro_u8
__builtin_sve_svld1rq_bf16
__builtin_sve_svld1rq_f16
__builtin_sve_svld1rq_f32
__builtin_sve_svld1rq_f64
__builtin_sve_svld1rq_s16
__builtin_sve_svld1rq_s32
__builtin_sve_svld1rq_s64
__builtin_sve_svld1rq_s8
__builtin_sve_svld1rq_u16
__builtin_sve_svld1rq_u32
__builtin_sve_svld1rq_u64
__builtin_sve_svld1rq_u8
__builtin_sve_svld1sb_gather_s32offset_s32
q4iq16bScC*q4i
__builtin_sve_svld1sb_gather_s32offset_u32
q4Uiq16bScC*q4i
__builtin_sve_svld1sb_gather_s64offset_s64
q2Wiq16bScC*q2Wi
__builtin_sve_svld1sb_gather_s64offset_u64
q2UWiq16bScC*q2Wi
__builtin_sve_svld1sb_gather_u32base_offset_s32
__builtin_sve_svld1sb_gather_u32base_offset_u32
__builtin_sve_svld1sb_gather_u32base_s32
__builtin_sve_svld1sb_gather_u32base_u32
__builtin_sve_svld1sb_gather_u32offset_s32
q4iq16bScC*q4Ui
__builtin_sve_svld1sb_gather_u32offset_u32
q4Uiq16bScC*q4Ui
__builtin_sve_svld1sb_gather_u64base_offset_s64
__builtin_sve_svld1sb_gather_u64base_offset_u64
__builtin_sve_svld1sb_gather_u64base_s64
__builtin_sve_svld1sb_gather_u64base_u64
__builtin_sve_svld1sb_gather_u64offset_s64
q2Wiq16bScC*q2UWi
__builtin_sve_svld1sb_gather_u64offset_u64
q2UWiq16bScC*q2UWi
__builtin_sve_svld1sb_s16
q8sq16bScC*
__builtin_sve_svld1sb_s32
q4iq16bScC*
__builtin_sve_svld1sb_s64
q2Wiq16bScC*
__builtin_sve_svld1sb_u16
q8Usq16bScC*
__builtin_sve_svld1sb_u32
q4Uiq16bScC*
__builtin_sve_svld1sb_u64
q2UWiq16bScC*
__builtin_sve_svld1sb_vnum_s16
q8sq16bScC*Wi
__builtin_sve_svld1sb_vnum_s32
q4iq16bScC*Wi
__builtin_sve_svld1sb_vnum_s64
q2Wiq16bScC*Wi
__builtin_sve_svld1sb_vnum_u16
q8Usq16bScC*Wi
__builtin_sve_svld1sb_vnum_u32
q4Uiq16bScC*Wi
__builtin_sve_svld1sb_vnum_u64
q2UWiq16bScC*Wi
__builtin_sve_svld1sh_gather_s32index_s32
q4iq16bSsC*q4i
__builtin_sve_svld1sh_gather_s32index_u32
q4Uiq16bSsC*q4i
__builtin_sve_svld1sh_gather_s32offset_s32
__builtin_sve_svld1sh_gather_s32offset_u32
__builtin_sve_svld1sh_gather_s64index_s64
q2Wiq16bSsC*q2Wi
__builtin_sve_svld1sh_gather_s64index_u64
q2UWiq16bSsC*q2Wi
__builtin_sve_svld1sh_gather_s64offset_s64
__builtin_sve_svld1sh_gather_s64offset_u64
__builtin_sve_svld1sh_gather_u32base_index_s32
__builtin_sve_svld1sh_gather_u32base_index_u32
__builtin_sve_svld1sh_gather_u32base_offset_s32
__builtin_sve_svld1sh_gather_u32base_offset_u32
__builtin_sve_svld1sh_gather_u32base_s32
__builtin_sve_svld1sh_gather_u32base_u32
__builtin_sve_svld1sh_gather_u32index_s32
q4iq16bSsC*q4Ui
__builtin_sve_svld1sh_gather_u32index_u32
q4Uiq16bSsC*q4Ui
__builtin_sve_svld1sh_gather_u32offset_s32
__builtin_sve_svld1sh_gather_u32offset_u32
__builtin_sve_svld1sh_gather_u64base_index_s64
__builtin_sve_svld1sh_gather_u64base_index_u64
__builtin_sve_svld1sh_gather_u64base_offset_s64
__builtin_sve_svld1sh_gather_u64base_offset_u64
__builtin_sve_svld1sh_gather_u64base_s64
__builtin_sve_svld1sh_gather_u64base_u64
__builtin_sve_svld1sh_gather_u64index_s64
q2Wiq16bSsC*q2UWi
__builtin_sve_svld1sh_gather_u64index_u64
q2UWiq16bSsC*q2UWi
__builtin_sve_svld1sh_gather_u64offset_s64
__builtin_sve_svld1sh_gather_u64offset_u64
__builtin_sve_svld1sh_s32
q4iq16bSsC*
__builtin_sve_svld1sh_s64
q2Wiq16bSsC*
__builtin_sve_svld1sh_u32
q4Uiq16bSsC*
__builtin_sve_svld1sh_u64
q2UWiq16bSsC*
__builtin_sve_svld1sh_vnum_s32
q4iq16bSsC*Wi
__builtin_sve_svld1sh_vnum_s64
q2Wiq16bSsC*Wi
__builtin_sve_svld1sh_vnum_u32
q4Uiq16bSsC*Wi
__builtin_sve_svld1sh_vnum_u64
q2UWiq16bSsC*Wi
__builtin_sve_svld1sw_gather_s64index_s64
q2Wiq16bSiC*q2Wi
__builtin_sve_svld1sw_gather_s64index_u64
q2UWiq16bSiC*q2Wi
__builtin_sve_svld1sw_gather_s64offset_s64
__builtin_sve_svld1sw_gather_s64offset_u64
__builtin_sve_svld1sw_gather_u64base_index_s64
__builtin_sve_svld1sw_gather_u64base_index_u64
__builtin_sve_svld1sw_gather_u64base_offset_s64
__builtin_sve_svld1sw_gather_u64base_offset_u64
__builtin_sve_svld1sw_gather_u64base_s64
__builtin_sve_svld1sw_gather_u64base_u64
__builtin_sve_svld1sw_gather_u64index_s64
q2Wiq16bSiC*q2UWi
__builtin_sve_svld1sw_gather_u64index_u64
q2UWiq16bSiC*q2UWi
__builtin_sve_svld1sw_gather_u64offset_s64
__builtin_sve_svld1sw_gather_u64offset_u64
__builtin_sve_svld1sw_s64
q2Wiq16bSiC*
__builtin_sve_svld1sw_u64
q2UWiq16bSiC*
__builtin_sve_svld1sw_vnum_s64
q2Wiq16bSiC*Wi
__builtin_sve_svld1sw_vnum_u64
q2UWiq16bSiC*Wi
__builtin_sve_svld1ub_gather_s32offset_s32
q4iq16bUcC*q4i
__builtin_sve_svld1ub_gather_s32offset_u32
q4Uiq16bUcC*q4i
__builtin_sve_svld1ub_gather_s64offset_s64
q2Wiq16bUcC*q2Wi
__builtin_sve_svld1ub_gather_s64offset_u64
q2UWiq16bUcC*q2Wi
__builtin_sve_svld1ub_gather_u32base_offset_s32
__builtin_sve_svld1ub_gather_u32base_offset_u32
__builtin_sve_svld1ub_gather_u32base_s32
__builtin_sve_svld1ub_gather_u32base_u32
__builtin_sve_svld1ub_gather_u32offset_s32
q4iq16bUcC*q4Ui
__builtin_sve_svld1ub_gather_u32offset_u32
q4Uiq16bUcC*q4Ui
__builtin_sve_svld1ub_gather_u64base_offset_s64
__builtin_sve_svld1ub_gather_u64base_offset_u64
__builtin_sve_svld1ub_gather_u64base_s64
__builtin_sve_svld1ub_gather_u64base_u64
__builtin_sve_svld1ub_gather_u64offset_s64
q2Wiq16bUcC*q2UWi
__builtin_sve_svld1ub_gather_u64offset_u64
q2UWiq16bUcC*q2UWi
__builtin_sve_svld1ub_s16
q8sq16bUcC*
__builtin_sve_svld1ub_s32
q4iq16bUcC*
__builtin_sve_svld1ub_s64
q2Wiq16bUcC*
__builtin_sve_svld1ub_u16
q8Usq16bUcC*
__builtin_sve_svld1ub_u32
q4Uiq16bUcC*
__builtin_sve_svld1ub_u64
q2UWiq16bUcC*
__builtin_sve_svld1ub_vnum_s16
q8sq16bUcC*Wi
__builtin_sve_svld1ub_vnum_s32
q4iq16bUcC*Wi
__builtin_sve_svld1ub_vnum_s64
q2Wiq16bUcC*Wi
__builtin_sve_svld1ub_vnum_u16
q8Usq16bUcC*Wi
__builtin_sve_svld1ub_vnum_u32
q4Uiq16bUcC*Wi
__builtin_sve_svld1ub_vnum_u64
q2UWiq16bUcC*Wi
__builtin_sve_svld1uh_gather_s32index_s32
q4iq16bUsC*q4i
__builtin_sve_svld1uh_gather_s32index_u32
q4Uiq16bUsC*q4i
__builtin_sve_svld1uh_gather_s32offset_s32
__builtin_sve_svld1uh_gather_s32offset_u32
__builtin_sve_svld1uh_gather_s64index_s64
q2Wiq16bUsC*q2Wi
__builtin_sve_svld1uh_gather_s64index_u64
q2UWiq16bUsC*q2Wi
__builtin_sve_svld1uh_gather_s64offset_s64
__builtin_sve_svld1uh_gather_s64offset_u64
__builtin_sve_svld1uh_gather_u32base_index_s32
__builtin_sve_svld1uh_gather_u32base_index_u32
__builtin_sve_svld1uh_gather_u32base_offset_s32
__builtin_sve_svld1uh_gather_u32base_offset_u32
__builtin_sve_svld1uh_gather_u32base_s32
__builtin_sve_svld1uh_gather_u32base_u32
__builtin_sve_svld1uh_gather_u32index_s32
q4iq16bUsC*q4Ui
__builtin_sve_svld1uh_gather_u32index_u32
q4Uiq16bUsC*q4Ui
__builtin_sve_svld1uh_gather_u32offset_s32
__builtin_sve_svld1uh_gather_u32offset_u32
__builtin_sve_svld1uh_gather_u64base_index_s64
__builtin_sve_svld1uh_gather_u64base_index_u64
__builtin_sve_svld1uh_gather_u64base_offset_s64
__builtin_sve_svld1uh_gather_u64base_offset_u64
__builtin_sve_svld1uh_gather_u64base_s64
__builtin_sve_svld1uh_gather_u64base_u64
__builtin_sve_svld1uh_gather_u64index_s64
q2Wiq16bUsC*q2UWi
__builtin_sve_svld1uh_gather_u64index_u64
q2UWiq16bUsC*q2UWi
__builtin_sve_svld1uh_gather_u64offset_s64
__builtin_sve_svld1uh_gather_u64offset_u64
__builtin_sve_svld1uh_s32
q4iq16bUsC*
__builtin_sve_svld1uh_s64
q2Wiq16bUsC*
__builtin_sve_svld1uh_u32
q4Uiq16bUsC*
__builtin_sve_svld1uh_u64
q2UWiq16bUsC*
__builtin_sve_svld1uh_vnum_s32
q4iq16bUsC*Wi
__builtin_sve_svld1uh_vnum_s64
q2Wiq16bUsC*Wi
__builtin_sve_svld1uh_vnum_u32
q4Uiq16bUsC*Wi
__builtin_sve_svld1uh_vnum_u64
q2UWiq16bUsC*Wi
__builtin_sve_svld1uw_gather_s64index_s64
q2Wiq16bUiC*q2Wi
__builtin_sve_svld1uw_gather_s64index_u64
q2UWiq16bUiC*q2Wi
__builtin_sve_svld1uw_gather_s64offset_s64
__builtin_sve_svld1uw_gather_s64offset_u64
__builtin_sve_svld1uw_gather_u64base_index_s64
__builtin_sve_svld1uw_gather_u64base_index_u64
__builtin_sve_svld1uw_gather_u64base_offset_s64
__builtin_sve_svld1uw_gather_u64base_offset_u64
__builtin_sve_svld1uw_gather_u64base_s64
__builtin_sve_svld1uw_gather_u64base_u64
__builtin_sve_svld1uw_gather_u64index_s64
q2Wiq16bUiC*q2UWi
__builtin_sve_svld1uw_gather_u64index_u64
q2UWiq16bUiC*q2UWi
__builtin_sve_svld1uw_gather_u64offset_s64
__builtin_sve_svld1uw_gather_u64offset_u64
__builtin_sve_svld1uw_s64
q2Wiq16bUiC*
__builtin_sve_svld1uw_u64
q2UWiq16bUiC*
__builtin_sve_svld1uw_vnum_s64
q2Wiq16bUiC*Wi
__builtin_sve_svld1uw_vnum_u64
q2UWiq16bUiC*Wi
__builtin_sve_svld2_bf16
q16yq16byC*
__builtin_sve_svld2_f16
q16hq16bhC*
__builtin_sve_svld2_f32
q8fq16bfC*
__builtin_sve_svld2_f64
q4dq16bdC*
__builtin_sve_svld2_s16
q16sq16bSsC*
__builtin_sve_svld2_s32
q8iq16bSiC*
__builtin_sve_svld2_s64
q4Wiq16bSWiC*
__builtin_sve_svld2_s8
q32Scq16bScC*
__builtin_sve_svld2_u16
q16Usq16bUsC*
__builtin_sve_svld2_u32
q8Uiq16bUiC*
__builtin_sve_svld2_u64
q4UWiq16bUWiC*
__builtin_sve_svld2_u8
q32Ucq16bUcC*
__builtin_sve_svld2_vnum_bf16
q16yq16byC*Wi
__builtin_sve_svld2_vnum_f16
q16hq16bhC*Wi
__builtin_sve_svld2_vnum_f32
q8fq16bfC*Wi
__builtin_sve_svld2_vnum_f64
q4dq16bdC*Wi
__builtin_sve_svld2_vnum_s16
q16sq16bSsC*Wi
__builtin_sve_svld2_vnum_s32
q8iq16bSiC*Wi
__builtin_sve_svld2_vnum_s64
q4Wiq16bSWiC*Wi
__builtin_sve_svld2_vnum_s8
q32Scq16bScC*Wi
__builtin_sve_svld2_vnum_u16
q16Usq16bUsC*Wi
__builtin_sve_svld2_vnum_u32
q8Uiq16bUiC*Wi
__builtin_sve_svld2_vnum_u64
q4UWiq16bUWiC*Wi
__builtin_sve_svld2_vnum_u8
q32Ucq16bUcC*Wi
__builtin_sve_svld3_bf16
q24yq16byC*
__builtin_sve_svld3_f16
q24hq16bhC*
__builtin_sve_svld3_f32
q12fq16bfC*
__builtin_sve_svld3_f64
q6dq16bdC*
__builtin_sve_svld3_s16
q24sq16bSsC*
__builtin_sve_svld3_s32
q12iq16bSiC*
__builtin_sve_svld3_s64
q6Wiq16bSWiC*
__builtin_sve_svld3_s8
q48Scq16bScC*
__builtin_sve_svld3_u16
q24Usq16bUsC*
__builtin_sve_svld3_u32
q12Uiq16bUiC*
__builtin_sve_svld3_u64
q6UWiq16bUWiC*
__builtin_sve_svld3_u8
q48Ucq16bUcC*
__builtin_sve_svld3_vnum_bf16
q24yq16byC*Wi
__builtin_sve_svld3_vnum_f16
q24hq16bhC*Wi
__builtin_sve_svld3_vnum_f32
q12fq16bfC*Wi
__builtin_sve_svld3_vnum_f64
q6dq16bdC*Wi
__builtin_sve_svld3_vnum_s16
q24sq16bSsC*Wi
__builtin_sve_svld3_vnum_s32
q12iq16bSiC*Wi
__builtin_sve_svld3_vnum_s64
q6Wiq16bSWiC*Wi
__builtin_sve_svld3_vnum_s8
q48Scq16bScC*Wi
__builtin_sve_svld3_vnum_u16
q24Usq16bUsC*Wi
__builtin_sve_svld3_vnum_u32
q12Uiq16bUiC*Wi
__builtin_sve_svld3_vnum_u64
q6UWiq16bUWiC*Wi
__builtin_sve_svld3_vnum_u8
q48Ucq16bUcC*Wi
__builtin_sve_svld4_bf16
q32yq16byC*
__builtin_sve_svld4_f16
q32hq16bhC*
__builtin_sve_svld4_f32
q16fq16bfC*
__builtin_sve_svld4_f64
q8dq16bdC*
__builtin_sve_svld4_s16
q32sq16bSsC*
__builtin_sve_svld4_s32
q16iq16bSiC*
__builtin_sve_svld4_s64
q8Wiq16bSWiC*
__builtin_sve_svld4_s8
q64Scq16bScC*
__builtin_sve_svld4_u16
q32Usq16bUsC*
__builtin_sve_svld4_u32
q16Uiq16bUiC*
__builtin_sve_svld4_u64
q8UWiq16bUWiC*
__builtin_sve_svld4_u8
q64Ucq16bUcC*
__builtin_sve_svld4_vnum_bf16
q32yq16byC*Wi
__builtin_sve_svld4_vnum_f16
q32hq16bhC*Wi
__builtin_sve_svld4_vnum_f32
q16fq16bfC*Wi
__builtin_sve_svld4_vnum_f64
q8dq16bdC*Wi
__builtin_sve_svld4_vnum_s16
q32sq16bSsC*Wi
__builtin_sve_svld4_vnum_s32
q16iq16bSiC*Wi
__builtin_sve_svld4_vnum_s64
q8Wiq16bSWiC*Wi
__builtin_sve_svld4_vnum_s8
q64Scq16bScC*Wi
__builtin_sve_svld4_vnum_u16
q32Usq16bUsC*Wi
__builtin_sve_svld4_vnum_u32
q16Uiq16bUiC*Wi
__builtin_sve_svld4_vnum_u64
q8UWiq16bUWiC*Wi
__builtin_sve_svld4_vnum_u8
q64Ucq16bUcC*Wi
__builtin_sve_svldff1_bf16
__builtin_sve_svldff1_f16
__builtin_sve_svldff1_f32
__builtin_sve_svldff1_f64
__builtin_sve_svldff1_gather_s32index_f32
__builtin_sve_svldff1_gather_s32index_s32
__builtin_sve_svldff1_gather_s32index_u32
__builtin_sve_svldff1_gather_s32offset_f32
__builtin_sve_svldff1_gather_s32offset_s32
__builtin_sve_svldff1_gather_s32offset_u32
__builtin_sve_svldff1_gather_s64index_f64
__builtin_sve_svldff1_gather_s64index_s64
__builtin_sve_svldff1_gather_s64index_u64
__builtin_sve_svldff1_gather_s64offset_f64
__builtin_sve_svldff1_gather_s64offset_s64
__builtin_sve_svldff1_gather_s64offset_u64
__builtin_sve_svldff1_gather_u32base_f32
__builtin_sve_svldff1_gather_u32base_index_f32
__builtin_sve_svldff1_gather_u32base_index_s32
__builtin_sve_svldff1_gather_u32base_index_u32
__builtin_sve_svldff1_gather_u32base_offset_f32
__builtin_sve_svldff1_gather_u32base_offset_s32
__builtin_sve_svldff1_gather_u32base_offset_u32
__builtin_sve_svldff1_gather_u32base_s32
__builtin_sve_svldff1_gather_u32base_u32
__builtin_sve_svldff1_gather_u32index_f32
__builtin_sve_svldff1_gather_u32index_s32
__builtin_sve_svldff1_gather_u32index_u32
__builtin_sve_svldff1_gather_u32offset_f32
__builtin_sve_svldff1_gather_u32offset_s32
__builtin_sve_svldff1_gather_u32offset_u32
__builtin_sve_svldff1_gather_u64base_f64
__builtin_sve_svldff1_gather_u64base_index_f64
__builtin_sve_svldff1_gather_u64base_index_s64
__builtin_sve_svldff1_gather_u64base_index_u64
__builtin_sve_svldff1_gather_u64base_offset_f64
__builtin_sve_svldff1_gather_u64base_offset_s64
__builtin_sve_svldff1_gather_u64base_offset_u64
__builtin_sve_svldff1_gather_u64base_s64
__builtin_sve_svldff1_gather_u64base_u64
__builtin_sve_svldff1_gather_u64index_f64
__builtin_sve_svldff1_gather_u64index_s64
__builtin_sve_svldff1_gather_u64index_u64
__builtin_sve_svldff1_gather_u64offset_f64
__builtin_sve_svldff1_gather_u64offset_s64
__builtin_sve_svldff1_gather_u64offset_u64
__builtin_sve_svldff1_s16
__builtin_sve_svldff1_s32
__builtin_sve_svldff1_s64
__builtin_sve_svldff1_s8
__builtin_sve_svldff1_u16
__builtin_sve_svldff1_u32
__builtin_sve_svldff1_u64
__builtin_sve_svldff1_u8
__builtin_sve_svldff1_vnum_bf16
__builtin_sve_svldff1_vnum_f16
__builtin_sve_svldff1_vnum_f32
__builtin_sve_svldff1_vnum_f64
__builtin_sve_svldff1_vnum_s16
__builtin_sve_svldff1_vnum_s32
__builtin_sve_svldff1_vnum_s64
__builtin_sve_svldff1_vnum_s8
__builtin_sve_svldff1_vnum_u16
__builtin_sve_svldff1_vnum_u32
__builtin_sve_svldff1_vnum_u64
__builtin_sve_svldff1_vnum_u8
__builtin_sve_svldff1sb_gather_s32offset_s32
__builtin_sve_svldff1sb_gather_s32offset_u32
__builtin_sve_svldff1sb_gather_s64offset_s64
__builtin_sve_svldff1sb_gather_s64offset_u64
__builtin_sve_svldff1sb_gather_u32base_offset_s32
__builtin_sve_svldff1sb_gather_u32base_offset_u32
__builtin_sve_svldff1sb_gather_u32base_s32
__builtin_sve_svldff1sb_gather_u32base_u32
__builtin_sve_svldff1sb_gather_u32offset_s32
__builtin_sve_svldff1sb_gather_u32offset_u32
__builtin_sve_svldff1sb_gather_u64base_offset_s64
__builtin_sve_svldff1sb_gather_u64base_offset_u64
__builtin_sve_svldff1sb_gather_u64base_s64
__builtin_sve_svldff1sb_gather_u64base_u64
__builtin_sve_svldff1sb_gather_u64offset_s64
__builtin_sve_svldff1sb_gather_u64offset_u64
__builtin_sve_svldff1sb_s16
__builtin_sve_svldff1sb_s32
__builtin_sve_svldff1sb_s64
__builtin_sve_svldff1sb_u16
__builtin_sve_svldff1sb_u32
__builtin_sve_svldff1sb_u64
__builtin_sve_svldff1sb_vnum_s16
__builtin_sve_svldff1sb_vnum_s32
__builtin_sve_svldff1sb_vnum_s64
__builtin_sve_svldff1sb_vnum_u16
__builtin_sve_svldff1sb_vnum_u32
__builtin_sve_svldff1sb_vnum_u64
__builtin_sve_svldff1sh_gather_s32index_s32
__builtin_sve_svldff1sh_gather_s32index_u32
__builtin_sve_svldff1sh_gather_s32offset_s32
__builtin_sve_svldff1sh_gather_s32offset_u32
__builtin_sve_svldff1sh_gather_s64index_s64
__builtin_sve_svldff1sh_gather_s64index_u64
__builtin_sve_svldff1sh_gather_s64offset_s64
__builtin_sve_svldff1sh_gather_s64offset_u64
__builtin_sve_svldff1sh_gather_u32base_index_s32
__builtin_sve_svldff1sh_gather_u32base_index_u32
__builtin_sve_svldff1sh_gather_u32base_offset_s32
__builtin_sve_svldff1sh_gather_u32base_offset_u32
__builtin_sve_svldff1sh_gather_u32base_s32
__builtin_sve_svldff1sh_gather_u32base_u32
__builtin_sve_svldff1sh_gather_u32index_s32
__builtin_sve_svldff1sh_gather_u32index_u32
__builtin_sve_svldff1sh_gather_u32offset_s32
__builtin_sve_svldff1sh_gather_u32offset_u32
__builtin_sve_svldff1sh_gather_u64base_index_s64
__builtin_sve_svldff1sh_gather_u64base_index_u64
__builtin_sve_svldff1sh_gather_u64base_offset_s64
__builtin_sve_svldff1sh_gather_u64base_offset_u64
__builtin_sve_svldff1sh_gather_u64base_s64
__builtin_sve_svldff1sh_gather_u64base_u64
__builtin_sve_svldff1sh_gather_u64index_s64
__builtin_sve_svldff1sh_gather_u64index_u64
__builtin_sve_svldff1sh_gather_u64offset_s64
__builtin_sve_svldff1sh_gather_u64offset_u64
__builtin_sve_svldff1sh_s32
__builtin_sve_svldff1sh_s64
__builtin_sve_svldff1sh_u32
__builtin_sve_svldff1sh_u64
__builtin_sve_svldff1sh_vnum_s32
__builtin_sve_svldff1sh_vnum_s64
__builtin_sve_svldff1sh_vnum_u32
__builtin_sve_svldff1sh_vnum_u64
__builtin_sve_svldff1sw_gather_s64index_s64
__builtin_sve_svldff1sw_gather_s64index_u64
__builtin_sve_svldff1sw_gather_s64offset_s64
__builtin_sve_svldff1sw_gather_s64offset_u64
__builtin_sve_svldff1sw_gather_u64base_index_s64
__builtin_sve_svldff1sw_gather_u64base_index_u64
__builtin_sve_svldff1sw_gather_u64base_offset_s64
__builtin_sve_svldff1sw_gather_u64base_offset_u64
__builtin_sve_svldff1sw_gather_u64base_s64
__builtin_sve_svldff1sw_gather_u64base_u64
__builtin_sve_svldff1sw_gather_u64index_s64
__builtin_sve_svldff1sw_gather_u64index_u64
__builtin_sve_svldff1sw_gather_u64offset_s64
__builtin_sve_svldff1sw_gather_u64offset_u64
__builtin_sve_svldff1sw_s64
__builtin_sve_svldff1sw_u64
__builtin_sve_svldff1sw_vnum_s64
__builtin_sve_svldff1sw_vnum_u64
__builtin_sve_svldff1ub_gather_s32offset_s32
__builtin_sve_svldff1ub_gather_s32offset_u32
__builtin_sve_svldff1ub_gather_s64offset_s64
__builtin_sve_svldff1ub_gather_s64offset_u64
__builtin_sve_svldff1ub_gather_u32base_offset_s32
__builtin_sve_svldff1ub_gather_u32base_offset_u32
__builtin_sve_svldff1ub_gather_u32base_s32
__builtin_sve_svldff1ub_gather_u32base_u32
__builtin_sve_svldff1ub_gather_u32offset_s32
__builtin_sve_svldff1ub_gather_u32offset_u32
__builtin_sve_svldff1ub_gather_u64base_offset_s64
__builtin_sve_svldff1ub_gather_u64base_offset_u64
__builtin_sve_svldff1ub_gather_u64base_s64
__builtin_sve_svldff1ub_gather_u64base_u64
__builtin_sve_svldff1ub_gather_u64offset_s64
__builtin_sve_svldff1ub_gather_u64offset_u64
__builtin_sve_svldff1ub_s16
__builtin_sve_svldff1ub_s32
__builtin_sve_svldff1ub_s64
__builtin_sve_svldff1ub_u16
__builtin_sve_svldff1ub_u32
__builtin_sve_svldff1ub_u64
__builtin_sve_svldff1ub_vnum_s16
__builtin_sve_svldff1ub_vnum_s32
__builtin_sve_svldff1ub_vnum_s64
__builtin_sve_svldff1ub_vnum_u16
__builtin_sve_svldff1ub_vnum_u32
__builtin_sve_svldff1ub_vnum_u64
__builtin_sve_svldff1uh_gather_s32index_s32
__builtin_sve_svldff1uh_gather_s32index_u32
__builtin_sve_svldff1uh_gather_s32offset_s32
__builtin_sve_svldff1uh_gather_s32offset_u32
__builtin_sve_svldff1uh_gather_s64index_s64
__builtin_sve_svldff1uh_gather_s64index_u64
__builtin_sve_svldff1uh_gather_s64offset_s64
__builtin_sve_svldff1uh_gather_s64offset_u64
__builtin_sve_svldff1uh_gather_u32base_index_s32
__builtin_sve_svldff1uh_gather_u32base_index_u32
__builtin_sve_svldff1uh_gather_u32base_offset_s32
__builtin_sve_svldff1uh_gather_u32base_offset_u32
__builtin_sve_svldff1uh_gather_u32base_s32
__builtin_sve_svldff1uh_gather_u32base_u32
__builtin_sve_svldff1uh_gather_u32index_s32
__builtin_sve_svldff1uh_gather_u32index_u32
__builtin_sve_svldff1uh_gather_u32offset_s32
__builtin_sve_svldff1uh_gather_u32offset_u32
__builtin_sve_svldff1uh_gather_u64base_index_s64
__builtin_sve_svldff1uh_gather_u64base_index_u64
__builtin_sve_svldff1uh_gather_u64base_offset_s64
__builtin_sve_svldff1uh_gather_u64base_offset_u64
__builtin_sve_svldff1uh_gather_u64base_s64
__builtin_sve_svldff1uh_gather_u64base_u64
__builtin_sve_svldff1uh_gather_u64index_s64
__builtin_sve_svldff1uh_gather_u64index_u64
__builtin_sve_svldff1uh_gather_u64offset_s64
__builtin_sve_svldff1uh_gather_u64offset_u64
__builtin_sve_svldff1uh_s32
__builtin_sve_svldff1uh_s64
__builtin_sve_svldff1uh_u32
__builtin_sve_svldff1uh_u64
__builtin_sve_svldff1uh_vnum_s32
__builtin_sve_svldff1uh_vnum_s64
__builtin_sve_svldff1uh_vnum_u32
__builtin_sve_svldff1uh_vnum_u64
__builtin_sve_svldff1uw_gather_s64index_s64
__builtin_sve_svldff1uw_gather_s64index_u64
__builtin_sve_svldff1uw_gather_s64offset_s64
__builtin_sve_svldff1uw_gather_s64offset_u64
__builtin_sve_svldff1uw_gather_u64base_index_s64
__builtin_sve_svldff1uw_gather_u64base_index_u64
__builtin_sve_svldff1uw_gather_u64base_offset_s64
__builtin_sve_svldff1uw_gather_u64base_offset_u64
__builtin_sve_svldff1uw_gather_u64base_s64
__builtin_sve_svldff1uw_gather_u64base_u64
__builtin_sve_svldff1uw_gather_u64index_s64
__builtin_sve_svldff1uw_gather_u64index_u64
__builtin_sve_svldff1uw_gather_u64offset_s64
__builtin_sve_svldff1uw_gather_u64offset_u64
__builtin_sve_svldff1uw_s64
__builtin_sve_svldff1uw_u64
__builtin_sve_svldff1uw_vnum_s64
__builtin_sve_svldff1uw_vnum_u64
__builtin_sve_svldnf1_bf16
__builtin_sve_svldnf1_f16
__builtin_sve_svldnf1_f32
__builtin_sve_svldnf1_f64
__builtin_sve_svldnf1_s16
__builtin_sve_svldnf1_s32
__builtin_sve_svldnf1_s64
__builtin_sve_svldnf1_s8
__builtin_sve_svldnf1_u16
__builtin_sve_svldnf1_u32
__builtin_sve_svldnf1_u64
__builtin_sve_svldnf1_u8
__builtin_sve_svldnf1_vnum_bf16
__builtin_sve_svldnf1_vnum_f16
__builtin_sve_svldnf1_vnum_f32
__builtin_sve_svldnf1_vnum_f64
__builtin_sve_svldnf1_vnum_s16
__builtin_sve_svldnf1_vnum_s32
__builtin_sve_svldnf1_vnum_s64
__builtin_sve_svldnf1_vnum_s8
__builtin_sve_svldnf1_vnum_u16
__builtin_sve_svldnf1_vnum_u32
__builtin_sve_svldnf1_vnum_u64
__builtin_sve_svldnf1_vnum_u8
__builtin_sve_svldnf1sb_s16
__builtin_sve_svldnf1sb_s32
__builtin_sve_svldnf1sb_s64
__builtin_sve_svldnf1sb_u16
__builtin_sve_svldnf1sb_u32
__builtin_sve_svldnf1sb_u64
__builtin_sve_svldnf1sb_vnum_s16
__builtin_sve_svldnf1sb_vnum_s32
__builtin_sve_svldnf1sb_vnum_s64
__builtin_sve_svldnf1sb_vnum_u16
__builtin_sve_svldnf1sb_vnum_u32
__builtin_sve_svldnf1sb_vnum_u64
__builtin_sve_svldnf1sh_s32
__builtin_sve_svldnf1sh_s64
__builtin_sve_svldnf1sh_u32
__builtin_sve_svldnf1sh_u64
__builtin_sve_svldnf1sh_vnum_s32
__builtin_sve_svldnf1sh_vnum_s64
__builtin_sve_svldnf1sh_vnum_u32
__builtin_sve_svldnf1sh_vnum_u64
__builtin_sve_svldnf1sw_s64
__builtin_sve_svldnf1sw_u64
__builtin_sve_svldnf1sw_vnum_s64
__builtin_sve_svldnf1sw_vnum_u64
__builtin_sve_svldnf1ub_s16
__builtin_sve_svldnf1ub_s32
__builtin_sve_svldnf1ub_s64
__builtin_sve_svldnf1ub_u16
__builtin_sve_svldnf1ub_u32
__builtin_sve_svldnf1ub_u64
__builtin_sve_svldnf1ub_vnum_s16
__builtin_sve_svldnf1ub_vnum_s32
__builtin_sve_svldnf1ub_vnum_s64
__builtin_sve_svldnf1ub_vnum_u16
__builtin_sve_svldnf1ub_vnum_u32
__builtin_sve_svldnf1ub_vnum_u64
__builtin_sve_svldnf1uh_s32
__builtin_sve_svldnf1uh_s64
__builtin_sve_svldnf1uh_u32
__builtin_sve_svldnf1uh_u64
__builtin_sve_svldnf1uh_vnum_s32
__builtin_sve_svldnf1uh_vnum_s64
__builtin_sve_svldnf1uh_vnum_u32
__builtin_sve_svldnf1uh_vnum_u64
__builtin_sve_svldnf1uw_s64
__builtin_sve_svldnf1uw_u64
__builtin_sve_svldnf1uw_vnum_s64
__builtin_sve_svldnf1uw_vnum_u64
__builtin_sve_svldnt1_bf16
__builtin_sve_svldnt1_f16
__builtin_sve_svldnt1_f32
__builtin_sve_svldnt1_f64
__builtin_sve_svldnt1_gather_s64index_f64
__builtin_sve_svldnt1_gather_s64index_s64
__builtin_sve_svldnt1_gather_s64index_u64
__builtin_sve_svldnt1_gather_s64offset_f64
__builtin_sve_svldnt1_gather_s64offset_s64
__builtin_sve_svldnt1_gather_s64offset_u64
__builtin_sve_svldnt1_gather_u32base_f32
__builtin_sve_svldnt1_gather_u32base_index_f32
__builtin_sve_svldnt1_gather_u32base_index_s32
__builtin_sve_svldnt1_gather_u32base_index_u32
__builtin_sve_svldnt1_gather_u32base_offset_f32
__builtin_sve_svldnt1_gather_u32base_offset_s32
__builtin_sve_svldnt1_gather_u32base_offset_u32
__builtin_sve_svldnt1_gather_u32base_s32
__builtin_sve_svldnt1_gather_u32base_u32
__builtin_sve_svldnt1_gather_u32offset_f32
__builtin_sve_svldnt1_gather_u32offset_s32
__builtin_sve_svldnt1_gather_u32offset_u32
__builtin_sve_svldnt1_gather_u64base_f64
__builtin_sve_svldnt1_gather_u64base_index_f64
__builtin_sve_svldnt1_gather_u64base_index_s64
__builtin_sve_svldnt1_gather_u64base_index_u64
__builtin_sve_svldnt1_gather_u64base_offset_f64
__builtin_sve_svldnt1_gather_u64base_offset_s64
__builtin_sve_svldnt1_gather_u64base_offset_u64
__builtin_sve_svldnt1_gather_u64base_s64
__builtin_sve_svldnt1_gather_u64base_u64
__builtin_sve_svldnt1_gather_u64index_f64
__builtin_sve_svldnt1_gather_u64index_s64
__builtin_sve_svldnt1_gather_u64index_u64
__builtin_sve_svldnt1_gather_u64offset_f64
__builtin_sve_svldnt1_gather_u64offset_s64
__builtin_sve_svldnt1_gather_u64offset_u64
__builtin_sve_svldnt1_s16
__builtin_sve_svldnt1_s32
__builtin_sve_svldnt1_s64
__builtin_sve_svldnt1_s8
__builtin_sve_svldnt1_u16
__builtin_sve_svldnt1_u32
__builtin_sve_svldnt1_u64
__builtin_sve_svldnt1_u8
__builtin_sve_svldnt1_vnum_bf16
__builtin_sve_svldnt1_vnum_f16
__builtin_sve_svldnt1_vnum_f32
__builtin_sve_svldnt1_vnum_f64
__builtin_sve_svldnt1_vnum_s16
__builtin_sve_svldnt1_vnum_s32
__builtin_sve_svldnt1_vnum_s64
__builtin_sve_svldnt1_vnum_s8
__builtin_sve_svldnt1_vnum_u16
__builtin_sve_svldnt1_vnum_u32
__builtin_sve_svldnt1_vnum_u64
__builtin_sve_svldnt1_vnum_u8
__builtin_sve_svldnt1sb_gather_s64offset_s64
__builtin_sve_svldnt1sb_gather_s64offset_u64
__builtin_sve_svldnt1sb_gather_u32base_offset_s32
__builtin_sve_svldnt1sb_gather_u32base_offset_u32
__builtin_sve_svldnt1sb_gather_u32base_s32
__builtin_sve_svldnt1sb_gather_u32base_u32
__builtin_sve_svldnt1sb_gather_u32offset_s32
__builtin_sve_svldnt1sb_gather_u32offset_u32
__builtin_sve_svldnt1sb_gather_u64base_offset_s64
__builtin_sve_svldnt1sb_gather_u64base_offset_u64
__builtin_sve_svldnt1sb_gather_u64base_s64
__builtin_sve_svldnt1sb_gather_u64base_u64
__builtin_sve_svldnt1sb_gather_u64offset_s64
__builtin_sve_svldnt1sb_gather_u64offset_u64
__builtin_sve_svldnt1sh_gather_s64index_s64
__builtin_sve_svldnt1sh_gather_s64index_u64
__builtin_sve_svldnt1sh_gather_s64offset_s64
__builtin_sve_svldnt1sh_gather_s64offset_u64
__builtin_sve_svldnt1sh_gather_u32base_index_s32
__builtin_sve_svldnt1sh_gather_u32base_index_u32
__builtin_sve_svldnt1sh_gather_u32base_offset_s32
__builtin_sve_svldnt1sh_gather_u32base_offset_u32
__builtin_sve_svldnt1sh_gather_u32base_s32
__builtin_sve_svldnt1sh_gather_u32base_u32
__builtin_sve_svldnt1sh_gather_u32offset_s32
__builtin_sve_svldnt1sh_gather_u32offset_u32
__builtin_sve_svldnt1sh_gather_u64base_index_s64
__builtin_sve_svldnt1sh_gather_u64base_index_u64
__builtin_sve_svldnt1sh_gather_u64base_offset_s64
__builtin_sve_svldnt1sh_gather_u64base_offset_u64
__builtin_sve_svldnt1sh_gather_u64base_s64
__builtin_sve_svldnt1sh_gather_u64base_u64
__builtin_sve_svldnt1sh_gather_u64index_s64
__builtin_sve_svldnt1sh_gather_u64index_u64
__builtin_sve_svldnt1sh_gather_u64offset_s64
__builtin_sve_svldnt1sh_gather_u64offset_u64
__builtin_sve_svldnt1sw_gather_s64index_s64
__builtin_sve_svldnt1sw_gather_s64index_u64
__builtin_sve_svldnt1sw_gather_s64offset_s64
__builtin_sve_svldnt1sw_gather_s64offset_u64
__builtin_sve_svldnt1sw_gather_u64base_index_s64
__builtin_sve_svldnt1sw_gather_u64base_index_u64
__builtin_sve_svldnt1sw_gather_u64base_offset_s64
__builtin_sve_svldnt1sw_gather_u64base_offset_u64
__builtin_sve_svldnt1sw_gather_u64base_s64
__builtin_sve_svldnt1sw_gather_u64base_u64
__builtin_sve_svldnt1sw_gather_u64index_s64
__builtin_sve_svldnt1sw_gather_u64index_u64
__builtin_sve_svldnt1sw_gather_u64offset_s64
__builtin_sve_svldnt1sw_gather_u64offset_u64
__builtin_sve_svldnt1ub_gather_s64offset_s64
__builtin_sve_svldnt1ub_gather_s64offset_u64
__builtin_sve_svldnt1ub_gather_u32base_offset_s32
__builtin_sve_svldnt1ub_gather_u32base_offset_u32
__builtin_sve_svldnt1ub_gather_u32base_s32
__builtin_sve_svldnt1ub_gather_u32base_u32
__builtin_sve_svldnt1ub_gather_u32offset_s32
__builtin_sve_svldnt1ub_gather_u32offset_u32
__builtin_sve_svldnt1ub_gather_u64base_offset_s64
__builtin_sve_svldnt1ub_gather_u64base_offset_u64
__builtin_sve_svldnt1ub_gather_u64base_s64
__builtin_sve_svldnt1ub_gather_u64base_u64
__builtin_sve_svldnt1ub_gather_u64offset_s64
__builtin_sve_svldnt1ub_gather_u64offset_u64
__builtin_sve_svldnt1uh_gather_s64index_s64
__builtin_sve_svldnt1uh_gather_s64index_u64
__builtin_sve_svldnt1uh_gather_s64offset_s64
__builtin_sve_svldnt1uh_gather_s64offset_u64
__builtin_sve_svldnt1uh_gather_u32base_index_s32
__builtin_sve_svldnt1uh_gather_u32base_index_u32
__builtin_sve_svldnt1uh_gather_u32base_offset_s32
__builtin_sve_svldnt1uh_gather_u32base_offset_u32
__builtin_sve_svldnt1uh_gather_u32base_s32
__builtin_sve_svldnt1uh_gather_u32base_u32
__builtin_sve_svldnt1uh_gather_u32offset_s32
__builtin_sve_svldnt1uh_gather_u32offset_u32
__builtin_sve_svldnt1uh_gather_u64base_index_s64
__builtin_sve_svldnt1uh_gather_u64base_index_u64
__builtin_sve_svldnt1uh_gather_u64base_offset_s64
__builtin_sve_svldnt1uh_gather_u64base_offset_u64
__builtin_sve_svldnt1uh_gather_u64base_s64
__builtin_sve_svldnt1uh_gather_u64base_u64
__builtin_sve_svldnt1uh_gather_u64index_s64
__builtin_sve_svldnt1uh_gather_u64index_u64
__builtin_sve_svldnt1uh_gather_u64offset_s64
__builtin_sve_svldnt1uh_gather_u64offset_u64
__builtin_sve_svldnt1uw_gather_s64index_s64
__builtin_sve_svldnt1uw_gather_s64index_u64
__builtin_sve_svldnt1uw_gather_s64offset_s64
__builtin_sve_svldnt1uw_gather_s64offset_u64
__builtin_sve_svldnt1uw_gather_u64base_index_s64
__builtin_sve_svldnt1uw_gather_u64base_index_u64
__builtin_sve_svldnt1uw_gather_u64base_offset_s64
__builtin_sve_svldnt1uw_gather_u64base_offset_u64
__builtin_sve_svldnt1uw_gather_u64base_s64
__builtin_sve_svldnt1uw_gather_u64base_u64
__builtin_sve_svldnt1uw_gather_u64index_s64
__builtin_sve_svldnt1uw_gather_u64index_u64
__builtin_sve_svldnt1uw_gather_u64offset_s64
__builtin_sve_svldnt1uw_gather_u64offset_u64
__builtin_sve_svlen_bf16
UWiq8y
__builtin_sve_svlen_f16
UWiq8h
__builtin_sve_svlen_f32
UWiq4f
__builtin_sve_svlen_f64
UWiq2d
__builtin_sve_svlen_s16
UWiq8s
__builtin_sve_svlen_s32
UWiq4i
__builtin_sve_svlen_s64
UWiq2Wi
__builtin_sve_svlen_s8
UWiq16Sc
__builtin_sve_svlen_u16
UWiq8Us
__builtin_sve_svlen_u32
UWiq4Ui
__builtin_sve_svlen_u64
UWiq2UWi
__builtin_sve_svlen_u8
UWiq16Uc
__builtin_sve_svlogb_f16_m
__builtin_sve_svlogb_f16_x
__builtin_sve_svlogb_f16_z
__builtin_sve_svlogb_f32_m
__builtin_sve_svlogb_f32_x
__builtin_sve_svlogb_f32_z
__builtin_sve_svlogb_f64_m
__builtin_sve_svlogb_f64_x
__builtin_sve_svlogb_f64_z
__builtin_sve_svlsl_n_s16_m
__builtin_sve_svlsl_n_s16_x
__builtin_sve_svlsl_n_s16_z
__builtin_sve_svlsl_n_s32_m
__builtin_sve_svlsl_n_s32_x
__builtin_sve_svlsl_n_s32_z
__builtin_sve_svlsl_n_s64_m
__builtin_sve_svlsl_n_s64_x
__builtin_sve_svlsl_n_s64_z
__builtin_sve_svlsl_n_s8_m
__builtin_sve_svlsl_n_s8_x
__builtin_sve_svlsl_n_s8_z
__builtin_sve_svlsl_n_u16_m
__builtin_sve_svlsl_n_u16_x
__builtin_sve_svlsl_n_u16_z
__builtin_sve_svlsl_n_u32_m
__builtin_sve_svlsl_n_u32_x
__builtin_sve_svlsl_n_u32_z
__builtin_sve_svlsl_n_u64_m
__builtin_sve_svlsl_n_u64_x
__builtin_sve_svlsl_n_u64_z
__builtin_sve_svlsl_n_u8_m
__builtin_sve_svlsl_n_u8_x
__builtin_sve_svlsl_n_u8_z
__builtin_sve_svlsl_s16_m
__builtin_sve_svlsl_s16_x
__builtin_sve_svlsl_s16_z
__builtin_sve_svlsl_s32_m
__builtin_sve_svlsl_s32_x
__builtin_sve_svlsl_s32_z
__builtin_sve_svlsl_s64_m
__builtin_sve_svlsl_s64_x
__builtin_sve_svlsl_s64_z
__builtin_sve_svlsl_s8_m
__builtin_sve_svlsl_s8_x
__builtin_sve_svlsl_s8_z
__builtin_sve_svlsl_u16_m
__builtin_sve_svlsl_u16_x
__builtin_sve_svlsl_u16_z
__builtin_sve_svlsl_u32_m
__builtin_sve_svlsl_u32_x
__builtin_sve_svlsl_u32_z
__builtin_sve_svlsl_u64_m
__builtin_sve_svlsl_u64_x
__builtin_sve_svlsl_u64_z
__builtin_sve_svlsl_u8_m
__builtin_sve_svlsl_u8_x
__builtin_sve_svlsl_u8_z
__builtin_sve_svlsl_wide_n_s16_m
__builtin_sve_svlsl_wide_n_s16_x
__builtin_sve_svlsl_wide_n_s16_z
__builtin_sve_svlsl_wide_n_s32_m
__builtin_sve_svlsl_wide_n_s32_x
__builtin_sve_svlsl_wide_n_s32_z
__builtin_sve_svlsl_wide_n_s8_m
__builtin_sve_svlsl_wide_n_s8_x
__builtin_sve_svlsl_wide_n_s8_z
__builtin_sve_svlsl_wide_n_u16_m
q8Usq16bq8UsUWi
__builtin_sve_svlsl_wide_n_u16_x
__builtin_sve_svlsl_wide_n_u16_z
__builtin_sve_svlsl_wide_n_u32_m
q4Uiq16bq4UiUWi
__builtin_sve_svlsl_wide_n_u32_x
__builtin_sve_svlsl_wide_n_u32_z
__builtin_sve_svlsl_wide_n_u8_m
q16Ucq16bq16UcUWi
__builtin_sve_svlsl_wide_n_u8_x
__builtin_sve_svlsl_wide_n_u8_z
__builtin_sve_svlsl_wide_s16_m
__builtin_sve_svlsl_wide_s16_x
__builtin_sve_svlsl_wide_s16_z
__builtin_sve_svlsl_wide_s32_m
__builtin_sve_svlsl_wide_s32_x
__builtin_sve_svlsl_wide_s32_z
__builtin_sve_svlsl_wide_s8_m
__builtin_sve_svlsl_wide_s8_x
__builtin_sve_svlsl_wide_s8_z
__builtin_sve_svlsl_wide_u16_m
q8Usq16bq8Usq2UWi
__builtin_sve_svlsl_wide_u16_x
__builtin_sve_svlsl_wide_u16_z
__builtin_sve_svlsl_wide_u32_m
q4Uiq16bq4Uiq2UWi
__builtin_sve_svlsl_wide_u32_x
__builtin_sve_svlsl_wide_u32_z
__builtin_sve_svlsl_wide_u8_m
q16Ucq16bq16Ucq2UWi
__builtin_sve_svlsl_wide_u8_x
__builtin_sve_svlsl_wide_u8_z
__builtin_sve_svlsr_n_u16_m
__builtin_sve_svlsr_n_u16_x
__builtin_sve_svlsr_n_u16_z
__builtin_sve_svlsr_n_u32_m
__builtin_sve_svlsr_n_u32_x
__builtin_sve_svlsr_n_u32_z
__builtin_sve_svlsr_n_u64_m
__builtin_sve_svlsr_n_u64_x
__builtin_sve_svlsr_n_u64_z
__builtin_sve_svlsr_n_u8_m
__builtin_sve_svlsr_n_u8_x
__builtin_sve_svlsr_n_u8_z
__builtin_sve_svlsr_u16_m
__builtin_sve_svlsr_u16_x
__builtin_sve_svlsr_u16_z
__builtin_sve_svlsr_u32_m
__builtin_sve_svlsr_u32_x
__builtin_sve_svlsr_u32_z
__builtin_sve_svlsr_u64_m
__builtin_sve_svlsr_u64_x
__builtin_sve_svlsr_u64_z
__builtin_sve_svlsr_u8_m
__builtin_sve_svlsr_u8_x
__builtin_sve_svlsr_u8_z
__builtin_sve_svlsr_wide_n_u16_m
__builtin_sve_svlsr_wide_n_u16_x
__builtin_sve_svlsr_wide_n_u16_z
__builtin_sve_svlsr_wide_n_u32_m
__builtin_sve_svlsr_wide_n_u32_x
__builtin_sve_svlsr_wide_n_u32_z
__builtin_sve_svlsr_wide_n_u8_m
__builtin_sve_svlsr_wide_n_u8_x
__builtin_sve_svlsr_wide_n_u8_z
__builtin_sve_svlsr_wide_u16_m
__builtin_sve_svlsr_wide_u16_x
__builtin_sve_svlsr_wide_u16_z
__builtin_sve_svlsr_wide_u32_m
__builtin_sve_svlsr_wide_u32_x
__builtin_sve_svlsr_wide_u32_z
__builtin_sve_svlsr_wide_u8_m
__builtin_sve_svlsr_wide_u8_x
__builtin_sve_svlsr_wide_u8_z
__builtin_sve_svmad_f16_m
q8hq16bq8hq8hq8h
__builtin_sve_svmad_f16_x
__builtin_sve_svmad_f16_z
__builtin_sve_svmad_f32_m
q4fq16bq4fq4fq4f
__builtin_sve_svmad_f32_x
__builtin_sve_svmad_f32_z
__builtin_sve_svmad_f64_m
q2dq16bq2dq2dq2d
__builtin_sve_svmad_f64_x
__builtin_sve_svmad_f64_z
__builtin_sve_svmad_n_f16_m
q8hq16bq8hq8hh
__builtin_sve_svmad_n_f16_x
__builtin_sve_svmad_n_f16_z
__builtin_sve_svmad_n_f32_m
q4fq16bq4fq4ff
__builtin_sve_svmad_n_f32_x
__builtin_sve_svmad_n_f32_z
__builtin_sve_svmad_n_f64_m
q2dq16bq2dq2dd
__builtin_sve_svmad_n_f64_x
__builtin_sve_svmad_n_f64_z
__builtin_sve_svmad_n_s16_m
q8sq16bq8sq8ss
__builtin_sve_svmad_n_s16_x
__builtin_sve_svmad_n_s16_z
__builtin_sve_svmad_n_s32_m
q4iq16bq4iq4ii
__builtin_sve_svmad_n_s32_x
__builtin_sve_svmad_n_s32_z
__builtin_sve_svmad_n_s64_m
q2Wiq16bq2Wiq2WiWi
__builtin_sve_svmad_n_s64_x
__builtin_sve_svmad_n_s64_z
__builtin_sve_svmad_n_s8_m
q16Scq16bq16Scq16ScSc
__builtin_sve_svmad_n_s8_x
__builtin_sve_svmad_n_s8_z
__builtin_sve_svmad_n_u16_m
q8Usq16bq8Usq8UsUs
__builtin_sve_svmad_n_u16_x
__builtin_sve_svmad_n_u16_z
__builtin_sve_svmad_n_u32_m
q4Uiq16bq4Uiq4UiUi
__builtin_sve_svmad_n_u32_x
__builtin_sve_svmad_n_u32_z
__builtin_sve_svmad_n_u64_m
q2UWiq16bq2UWiq2UWiUWi
__builtin_sve_svmad_n_u64_x
__builtin_sve_svmad_n_u64_z
__builtin_sve_svmad_n_u8_m
q16Ucq16bq16Ucq16UcUc
__builtin_sve_svmad_n_u8_x
__builtin_sve_svmad_n_u8_z
__builtin_sve_svmad_s16_m
q8sq16bq8sq8sq8s
__builtin_sve_svmad_s16_x
__builtin_sve_svmad_s16_z
__builtin_sve_svmad_s32_m
q4iq16bq4iq4iq4i
__builtin_sve_svmad_s32_x
__builtin_sve_svmad_s32_z
__builtin_sve_svmad_s64_m
q2Wiq16bq2Wiq2Wiq2Wi
__builtin_sve_svmad_s64_x
__builtin_sve_svmad_s64_z
__builtin_sve_svmad_s8_m
q16Scq16bq16Scq16Scq16Sc
__builtin_sve_svmad_s8_x
__builtin_sve_svmad_s8_z
__builtin_sve_svmad_u16_m
q8Usq16bq8Usq8Usq8Us
__builtin_sve_svmad_u16_x
__builtin_sve_svmad_u16_z
__builtin_sve_svmad_u32_m
q4Uiq16bq4Uiq4Uiq4Ui
__builtin_sve_svmad_u32_x
__builtin_sve_svmad_u32_z
__builtin_sve_svmad_u64_m
q2UWiq16bq2UWiq2UWiq2UWi
__builtin_sve_svmad_u64_x
__builtin_sve_svmad_u64_z
__builtin_sve_svmad_u8_m
q16Ucq16bq16Ucq16Ucq16Uc
__builtin_sve_svmad_u8_x
__builtin_sve_svmad_u8_z
__builtin_sve_svmatch_s16
__builtin_sve_svmatch_s8
__builtin_sve_svmatch_u16
__builtin_sve_svmatch_u8
__builtin_sve_svmax_f16_m
__builtin_sve_svmax_f16_x
__builtin_sve_svmax_f16_z
__builtin_sve_svmax_f32_m
__builtin_sve_svmax_f32_x
__builtin_sve_svmax_f32_z
__builtin_sve_svmax_f64_m
__builtin_sve_svmax_f64_x
__builtin_sve_svmax_f64_z
__builtin_sve_svmax_n_f16_m
__builtin_sve_svmax_n_f16_x
__builtin_sve_svmax_n_f16_z
__builtin_sve_svmax_n_f32_m
__builtin_sve_svmax_n_f32_x
__builtin_sve_svmax_n_f32_z
__builtin_sve_svmax_n_f64_m
__builtin_sve_svmax_n_f64_x
__builtin_sve_svmax_n_f64_z
__builtin_sve_svmax_n_s16_m
__builtin_sve_svmax_n_s16_x
__builtin_sve_svmax_n_s16_z
__builtin_sve_svmax_n_s32_m
__builtin_sve_svmax_n_s32_x
__builtin_sve_svmax_n_s32_z
__builtin_sve_svmax_n_s64_m
__builtin_sve_svmax_n_s64_x
__builtin_sve_svmax_n_s64_z
__builtin_sve_svmax_n_s8_m
__builtin_sve_svmax_n_s8_x
__builtin_sve_svmax_n_s8_z
__builtin_sve_svmax_n_u16_m
__builtin_sve_svmax_n_u16_x
__builtin_sve_svmax_n_u16_z
__builtin_sve_svmax_n_u32_m
__builtin_sve_svmax_n_u32_x
__builtin_sve_svmax_n_u32_z
__builtin_sve_svmax_n_u64_m
__builtin_sve_svmax_n_u64_x
__builtin_sve_svmax_n_u64_z
__builtin_sve_svmax_n_u8_m
__builtin_sve_svmax_n_u8_x
__builtin_sve_svmax_n_u8_z
__builtin_sve_svmax_s16_m
__builtin_sve_svmax_s16_x
__builtin_sve_svmax_s16_z
__builtin_sve_svmax_s32_m
__builtin_sve_svmax_s32_x
__builtin_sve_svmax_s32_z
__builtin_sve_svmax_s64_m
__builtin_sve_svmax_s64_x
__builtin_sve_svmax_s64_z
__builtin_sve_svmax_s8_m
__builtin_sve_svmax_s8_x
__builtin_sve_svmax_s8_z
__builtin_sve_svmax_u16_m
__builtin_sve_svmax_u16_x
__builtin_sve_svmax_u16_z
__builtin_sve_svmax_u32_m
__builtin_sve_svmax_u32_x
__builtin_sve_svmax_u32_z
__builtin_sve_svmax_u64_m
__builtin_sve_svmax_u64_x
__builtin_sve_svmax_u64_z
__builtin_sve_svmax_u8_m
__builtin_sve_svmax_u8_x
__builtin_sve_svmax_u8_z
__builtin_sve_svmaxnm_f16_m
__builtin_sve_svmaxnm_f16_x
__builtin_sve_svmaxnm_f16_z
__builtin_sve_svmaxnm_f32_m
__builtin_sve_svmaxnm_f32_x
__builtin_sve_svmaxnm_f32_z
__builtin_sve_svmaxnm_f64_m
__builtin_sve_svmaxnm_f64_x
__builtin_sve_svmaxnm_f64_z
__builtin_sve_svmaxnm_n_f16_m
__builtin_sve_svmaxnm_n_f16_x
__builtin_sve_svmaxnm_n_f16_z
__builtin_sve_svmaxnm_n_f32_m
__builtin_sve_svmaxnm_n_f32_x
__builtin_sve_svmaxnm_n_f32_z
__builtin_sve_svmaxnm_n_f64_m
__builtin_sve_svmaxnm_n_f64_x
__builtin_sve_svmaxnm_n_f64_z
__builtin_sve_svmaxnmp_f16_m
__builtin_sve_svmaxnmp_f16_x
__builtin_sve_svmaxnmp_f32_m
__builtin_sve_svmaxnmp_f32_x
__builtin_sve_svmaxnmp_f64_m
__builtin_sve_svmaxnmp_f64_x
__builtin_sve_svmaxnmv_f16
__builtin_sve_svmaxnmv_f32
__builtin_sve_svmaxnmv_f64
__builtin_sve_svmaxp_f16_m
__builtin_sve_svmaxp_f16_x
__builtin_sve_svmaxp_f32_m
__builtin_sve_svmaxp_f32_x
__builtin_sve_svmaxp_f64_m
__builtin_sve_svmaxp_f64_x
__builtin_sve_svmaxp_s16_m
__builtin_sve_svmaxp_s16_x
__builtin_sve_svmaxp_s32_m
__builtin_sve_svmaxp_s32_x
__builtin_sve_svmaxp_s64_m
__builtin_sve_svmaxp_s64_x
__builtin_sve_svmaxp_s8_m
__builtin_sve_svmaxp_s8_x
__builtin_sve_svmaxp_u16_m
__builtin_sve_svmaxp_u16_x
__builtin_sve_svmaxp_u32_m
__builtin_sve_svmaxp_u32_x
__builtin_sve_svmaxp_u64_m
__builtin_sve_svmaxp_u64_x
__builtin_sve_svmaxp_u8_m
__builtin_sve_svmaxp_u8_x
__builtin_sve_svmaxv_f16
__builtin_sve_svmaxv_f32
__builtin_sve_svmaxv_f64
__builtin_sve_svmaxv_s16
__builtin_sve_svmaxv_s32
__builtin_sve_svmaxv_s64
__builtin_sve_svmaxv_s8
__builtin_sve_svmaxv_u16
__builtin_sve_svmaxv_u32
__builtin_sve_svmaxv_u64
__builtin_sve_svmaxv_u8
__builtin_sve_svmin_f16_m
__builtin_sve_svmin_f16_x
__builtin_sve_svmin_f16_z
__builtin_sve_svmin_f32_m
__builtin_sve_svmin_f32_x
__builtin_sve_svmin_f32_z
__builtin_sve_svmin_f64_m
__builtin_sve_svmin_f64_x
__builtin_sve_svmin_f64_z
__builtin_sve_svmin_n_f16_m
__builtin_sve_svmin_n_f16_x
__builtin_sve_svmin_n_f16_z
__builtin_sve_svmin_n_f32_m
__builtin_sve_svmin_n_f32_x
__builtin_sve_svmin_n_f32_z
__builtin_sve_svmin_n_f64_m
__builtin_sve_svmin_n_f64_x
__builtin_sve_svmin_n_f64_z
__builtin_sve_svmin_n_s16_m
__builtin_sve_svmin_n_s16_x
__builtin_sve_svmin_n_s16_z
__builtin_sve_svmin_n_s32_m
__builtin_sve_svmin_n_s32_x
__builtin_sve_svmin_n_s32_z
__builtin_sve_svmin_n_s64_m
__builtin_sve_svmin_n_s64_x
__builtin_sve_svmin_n_s64_z
__builtin_sve_svmin_n_s8_m
__builtin_sve_svmin_n_s8_x
__builtin_sve_svmin_n_s8_z
__builtin_sve_svmin_n_u16_m
__builtin_sve_svmin_n_u16_x
__builtin_sve_svmin_n_u16_z
__builtin_sve_svmin_n_u32_m
__builtin_sve_svmin_n_u32_x
__builtin_sve_svmin_n_u32_z
__builtin_sve_svmin_n_u64_m
__builtin_sve_svmin_n_u64_x
__builtin_sve_svmin_n_u64_z
__builtin_sve_svmin_n_u8_m
__builtin_sve_svmin_n_u8_x
__builtin_sve_svmin_n_u8_z
__builtin_sve_svmin_s16_m
__builtin_sve_svmin_s16_x
__builtin_sve_svmin_s16_z
__builtin_sve_svmin_s32_m
__builtin_sve_svmin_s32_x
__builtin_sve_svmin_s32_z
__builtin_sve_svmin_s64_m
__builtin_sve_svmin_s64_x
__builtin_sve_svmin_s64_z
__builtin_sve_svmin_s8_m
__builtin_sve_svmin_s8_x
__builtin_sve_svmin_s8_z
__builtin_sve_svmin_u16_m
__builtin_sve_svmin_u16_x
__builtin_sve_svmin_u16_z
__builtin_sve_svmin_u32_m
__builtin_sve_svmin_u32_x
__builtin_sve_svmin_u32_z
__builtin_sve_svmin_u64_m
__builtin_sve_svmin_u64_x
__builtin_sve_svmin_u64_z
__builtin_sve_svmin_u8_m
__builtin_sve_svmin_u8_x
__builtin_sve_svmin_u8_z
__builtin_sve_svminnm_f16_m
__builtin_sve_svminnm_f16_x
__builtin_sve_svminnm_f16_z
__builtin_sve_svminnm_f32_m
__builtin_sve_svminnm_f32_x
__builtin_sve_svminnm_f32_z
__builtin_sve_svminnm_f64_m
__builtin_sve_svminnm_f64_x
__builtin_sve_svminnm_f64_z
__builtin_sve_svminnm_n_f16_m
__builtin_sve_svminnm_n_f16_x
__builtin_sve_svminnm_n_f16_z
__builtin_sve_svminnm_n_f32_m
__builtin_sve_svminnm_n_f32_x
__builtin_sve_svminnm_n_f32_z
__builtin_sve_svminnm_n_f64_m
__builtin_sve_svminnm_n_f64_x
__builtin_sve_svminnm_n_f64_z
__builtin_sve_svminnmp_f16_m
__builtin_sve_svminnmp_f16_x
__builtin_sve_svminnmp_f32_m
__builtin_sve_svminnmp_f32_x
__builtin_sve_svminnmp_f64_m
__builtin_sve_svminnmp_f64_x
__builtin_sve_svminnmv_f16
__builtin_sve_svminnmv_f32
__builtin_sve_svminnmv_f64
__builtin_sve_svminp_f16_m
__builtin_sve_svminp_f16_x
__builtin_sve_svminp_f32_m
__builtin_sve_svminp_f32_x
__builtin_sve_svminp_f64_m
__builtin_sve_svminp_f64_x
__builtin_sve_svminp_s16_m
__builtin_sve_svminp_s16_x
__builtin_sve_svminp_s32_m
__builtin_sve_svminp_s32_x
__builtin_sve_svminp_s64_m
__builtin_sve_svminp_s64_x
__builtin_sve_svminp_s8_m
__builtin_sve_svminp_s8_x
__builtin_sve_svminp_u16_m
__builtin_sve_svminp_u16_x
__builtin_sve_svminp_u32_m
__builtin_sve_svminp_u32_x
__builtin_sve_svminp_u64_m
__builtin_sve_svminp_u64_x
__builtin_sve_svminp_u8_m
__builtin_sve_svminp_u8_x
__builtin_sve_svminv_f16
__builtin_sve_svminv_f32
__builtin_sve_svminv_f64
__builtin_sve_svminv_s16
__builtin_sve_svminv_s32
__builtin_sve_svminv_s64
__builtin_sve_svminv_s8
__builtin_sve_svminv_u16
__builtin_sve_svminv_u32
__builtin_sve_svminv_u64
__builtin_sve_svminv_u8
__builtin_sve_svmla_f16_m
__builtin_sve_svmla_f16_x
__builtin_sve_svmla_f16_z
__builtin_sve_svmla_f32_m
__builtin_sve_svmla_f32_x
__builtin_sve_svmla_f32_z
__builtin_sve_svmla_f64_m
__builtin_sve_svmla_f64_x
__builtin_sve_svmla_f64_z
__builtin_sve_svmla_lane_f16
q8hq8hq8hq8hIUWi
__builtin_sve_svmla_lane_f32
q4fq4fq4fq4fIUWi
__builtin_sve_svmla_lane_f64
q2dq2dq2dq2dIUWi
__builtin_sve_svmla_lane_s16
__builtin_sve_svmla_lane_s32
__builtin_sve_svmla_lane_s64
__builtin_sve_svmla_lane_u16
__builtin_sve_svmla_lane_u32
__builtin_sve_svmla_lane_u64
__builtin_sve_svmla_n_f16_m
__builtin_sve_svmla_n_f16_x
__builtin_sve_svmla_n_f16_z
__builtin_sve_svmla_n_f32_m
__builtin_sve_svmla_n_f32_x
__builtin_sve_svmla_n_f32_z
__builtin_sve_svmla_n_f64_m
__builtin_sve_svmla_n_f64_x
__builtin_sve_svmla_n_f64_z
__builtin_sve_svmla_n_s16_m
__builtin_sve_svmla_n_s16_x
__builtin_sve_svmla_n_s16_z
__builtin_sve_svmla_n_s32_m
__builtin_sve_svmla_n_s32_x
__builtin_sve_svmla_n_s32_z
__builtin_sve_svmla_n_s64_m
__builtin_sve_svmla_n_s64_x
__builtin_sve_svmla_n_s64_z
__builtin_sve_svmla_n_s8_m
__builtin_sve_svmla_n_s8_x
__builtin_sve_svmla_n_s8_z
__builtin_sve_svmla_n_u16_m
__builtin_sve_svmla_n_u16_x
__builtin_sve_svmla_n_u16_z
__builtin_sve_svmla_n_u32_m
__builtin_sve_svmla_n_u32_x
__builtin_sve_svmla_n_u32_z
__builtin_sve_svmla_n_u64_m
__builtin_sve_svmla_n_u64_x
__builtin_sve_svmla_n_u64_z
__builtin_sve_svmla_n_u8_m
__builtin_sve_svmla_n_u8_x
__builtin_sve_svmla_n_u8_z
__builtin_sve_svmla_s16_m
__builtin_sve_svmla_s16_x
__builtin_sve_svmla_s16_z
__builtin_sve_svmla_s32_m
__builtin_sve_svmla_s32_x
__builtin_sve_svmla_s32_z
__builtin_sve_svmla_s64_m
__builtin_sve_svmla_s64_x
__builtin_sve_svmla_s64_z
__builtin_sve_svmla_s8_m
__builtin_sve_svmla_s8_x
__builtin_sve_svmla_s8_z
__builtin_sve_svmla_u16_m
__builtin_sve_svmla_u16_x
__builtin_sve_svmla_u16_z
__builtin_sve_svmla_u32_m
__builtin_sve_svmla_u32_x
__builtin_sve_svmla_u32_z
__builtin_sve_svmla_u64_m
__builtin_sve_svmla_u64_x
__builtin_sve_svmla_u64_z
__builtin_sve_svmla_u8_m
__builtin_sve_svmla_u8_x
__builtin_sve_svmla_u8_z
__builtin_sve_svmlalb_f32
q4fq4fq8hq8h
__builtin_sve_svmlalb_lane_f32
q4fq4fq8hq8hIUWi
__builtin_sve_svmlalb_lane_s32
q4iq4iq8sq8sIUWi
__builtin_sve_svmlalb_lane_s64
q2Wiq2Wiq4iq4iIUWi
__builtin_sve_svmlalb_lane_u32
q4Uiq4Uiq8Usq8UsIUWi
__builtin_sve_svmlalb_lane_u64
q2UWiq2UWiq4Uiq4UiIUWi
__builtin_sve_svmlalb_n_f32
q4fq4fq8hh
__builtin_sve_svmlalb_n_s16
__builtin_sve_svmlalb_n_s32
__builtin_sve_svmlalb_n_s64
__builtin_sve_svmlalb_n_u16
__builtin_sve_svmlalb_n_u32
__builtin_sve_svmlalb_n_u64
__builtin_sve_svmlalb_s16
__builtin_sve_svmlalb_s32
__builtin_sve_svmlalb_s64
__builtin_sve_svmlalb_u16
__builtin_sve_svmlalb_u32
__builtin_sve_svmlalb_u64
__builtin_sve_svmlalt_f32
__builtin_sve_svmlalt_lane_f32
__builtin_sve_svmlalt_lane_s32
__builtin_sve_svmlalt_lane_s64
__builtin_sve_svmlalt_lane_u32
__builtin_sve_svmlalt_lane_u64
__builtin_sve_svmlalt_n_f32
__builtin_sve_svmlalt_n_s16
__builtin_sve_svmlalt_n_s32
__builtin_sve_svmlalt_n_s64
__builtin_sve_svmlalt_n_u16
__builtin_sve_svmlalt_n_u32
__builtin_sve_svmlalt_n_u64
__builtin_sve_svmlalt_s16
__builtin_sve_svmlalt_s32
__builtin_sve_svmlalt_s64
__builtin_sve_svmlalt_u16
__builtin_sve_svmlalt_u32
__builtin_sve_svmlalt_u64
__builtin_sve_svmls_f16_m
__builtin_sve_svmls_f16_x
__builtin_sve_svmls_f16_z
__builtin_sve_svmls_f32_m
__builtin_sve_svmls_f32_x
__builtin_sve_svmls_f32_z
__builtin_sve_svmls_f64_m
__builtin_sve_svmls_f64_x
__builtin_sve_svmls_f64_z
__builtin_sve_svmls_lane_f16
__builtin_sve_svmls_lane_f32
__builtin_sve_svmls_lane_f64
__builtin_sve_svmls_lane_s16
__builtin_sve_svmls_lane_s32
__builtin_sve_svmls_lane_s64
__builtin_sve_svmls_lane_u16
__builtin_sve_svmls_lane_u32
__builtin_sve_svmls_lane_u64
__builtin_sve_svmls_n_f16_m
__builtin_sve_svmls_n_f16_x
__builtin_sve_svmls_n_f16_z
__builtin_sve_svmls_n_f32_m
__builtin_sve_svmls_n_f32_x
__builtin_sve_svmls_n_f32_z
__builtin_sve_svmls_n_f64_m
__builtin_sve_svmls_n_f64_x
__builtin_sve_svmls_n_f64_z
__builtin_sve_svmls_n_s16_m
__builtin_sve_svmls_n_s16_x
__builtin_sve_svmls_n_s16_z
__builtin_sve_svmls_n_s32_m
__builtin_sve_svmls_n_s32_x
__builtin_sve_svmls_n_s32_z
__builtin_sve_svmls_n_s64_m
__builtin_sve_svmls_n_s64_x
__builtin_sve_svmls_n_s64_z
__builtin_sve_svmls_n_s8_m
__builtin_sve_svmls_n_s8_x
__builtin_sve_svmls_n_s8_z
__builtin_sve_svmls_n_u16_m
__builtin_sve_svmls_n_u16_x
__builtin_sve_svmls_n_u16_z
__builtin_sve_svmls_n_u32_m
__builtin_sve_svmls_n_u32_x
__builtin_sve_svmls_n_u32_z
__builtin_sve_svmls_n_u64_m
__builtin_sve_svmls_n_u64_x
__builtin_sve_svmls_n_u64_z
__builtin_sve_svmls_n_u8_m
__builtin_sve_svmls_n_u8_x
__builtin_sve_svmls_n_u8_z
__builtin_sve_svmls_s16_m
__builtin_sve_svmls_s16_x
__builtin_sve_svmls_s16_z
__builtin_sve_svmls_s32_m
__builtin_sve_svmls_s32_x
__builtin_sve_svmls_s32_z
__builtin_sve_svmls_s64_m
__builtin_sve_svmls_s64_x
__builtin_sve_svmls_s64_z
__builtin_sve_svmls_s8_m
__builtin_sve_svmls_s8_x
__builtin_sve_svmls_s8_z
__builtin_sve_svmls_u16_m
__builtin_sve_svmls_u16_x
__builtin_sve_svmls_u16_z
__builtin_sve_svmls_u32_m
__builtin_sve_svmls_u32_x
__builtin_sve_svmls_u32_z
__builtin_sve_svmls_u64_m
__builtin_sve_svmls_u64_x
__builtin_sve_svmls_u64_z
__builtin_sve_svmls_u8_m
__builtin_sve_svmls_u8_x
__builtin_sve_svmls_u8_z
__builtin_sve_svmlslb_f32
__builtin_sve_svmlslb_lane_f32
__builtin_sve_svmlslb_lane_s32
__builtin_sve_svmlslb_lane_s64
__builtin_sve_svmlslb_lane_u32
__builtin_sve_svmlslb_lane_u64
__builtin_sve_svmlslb_n_f32
__builtin_sve_svmlslb_n_s16
__builtin_sve_svmlslb_n_s32
__builtin_sve_svmlslb_n_s64
__builtin_sve_svmlslb_n_u16
__builtin_sve_svmlslb_n_u32
__builtin_sve_svmlslb_n_u64
__builtin_sve_svmlslb_s16
__builtin_sve_svmlslb_s32
__builtin_sve_svmlslb_s64
__builtin_sve_svmlslb_u16
__builtin_sve_svmlslb_u32
__builtin_sve_svmlslb_u64
__builtin_sve_svmlslt_f32
__builtin_sve_svmlslt_lane_f32
__builtin_sve_svmlslt_lane_s32
__builtin_sve_svmlslt_lane_s64
__builtin_sve_svmlslt_lane_u32
__builtin_sve_svmlslt_lane_u64
__builtin_sve_svmlslt_n_f32
__builtin_sve_svmlslt_n_s16
__builtin_sve_svmlslt_n_s32
__builtin_sve_svmlslt_n_s64
__builtin_sve_svmlslt_n_u16
__builtin_sve_svmlslt_n_u32
__builtin_sve_svmlslt_n_u64
__builtin_sve_svmlslt_s16
__builtin_sve_svmlslt_s32
__builtin_sve_svmlslt_s64
__builtin_sve_svmlslt_u16
__builtin_sve_svmlslt_u32
__builtin_sve_svmlslt_u64
__builtin_sve_svmmla_f32
q4fq4fq4fq4f
__builtin_sve_svmmla_f64
q2dq2dq2dq2d
__builtin_sve_svmmla_s32
__builtin_sve_svmmla_u32
__builtin_sve_svmov_b_z
__builtin_sve_svmovlb_s16
q8sq16Sc
__builtin_sve_svmovlb_s32
q4iq8s
__builtin_sve_svmovlb_s64
q2Wiq4i
__builtin_sve_svmovlb_u16
q8Usq16Uc
__builtin_sve_svmovlb_u32
q4Uiq8Us
__builtin_sve_svmovlb_u64
q2UWiq4Ui
__builtin_sve_svmovlt_s16
__builtin_sve_svmovlt_s32
__builtin_sve_svmovlt_s64
__builtin_sve_svmovlt_u16
__builtin_sve_svmovlt_u32
__builtin_sve_svmovlt_u64
__builtin_sve_svmsb_f16_m
__builtin_sve_svmsb_f16_x
__builtin_sve_svmsb_f16_z
__builtin_sve_svmsb_f32_m
__builtin_sve_svmsb_f32_x
__builtin_sve_svmsb_f32_z
__builtin_sve_svmsb_f64_m
__builtin_sve_svmsb_f64_x
__builtin_sve_svmsb_f64_z
__builtin_sve_svmsb_n_f16_m
__builtin_sve_svmsb_n_f16_x
__builtin_sve_svmsb_n_f16_z
__builtin_sve_svmsb_n_f32_m
__builtin_sve_svmsb_n_f32_x
__builtin_sve_svmsb_n_f32_z
__builtin_sve_svmsb_n_f64_m
__builtin_sve_svmsb_n_f64_x
__builtin_sve_svmsb_n_f64_z
__builtin_sve_svmsb_n_s16_m
__builtin_sve_svmsb_n_s16_x
__builtin_sve_svmsb_n_s16_z
__builtin_sve_svmsb_n_s32_m
__builtin_sve_svmsb_n_s32_x
__builtin_sve_svmsb_n_s32_z
__builtin_sve_svmsb_n_s64_m
__builtin_sve_svmsb_n_s64_x
__builtin_sve_svmsb_n_s64_z
__builtin_sve_svmsb_n_s8_m
__builtin_sve_svmsb_n_s8_x
__builtin_sve_svmsb_n_s8_z
__builtin_sve_svmsb_n_u16_m
__builtin_sve_svmsb_n_u16_x
__builtin_sve_svmsb_n_u16_z
__builtin_sve_svmsb_n_u32_m
__builtin_sve_svmsb_n_u32_x
__builtin_sve_svmsb_n_u32_z
__builtin_sve_svmsb_n_u64_m
__builtin_sve_svmsb_n_u64_x
__builtin_sve_svmsb_n_u64_z
__builtin_sve_svmsb_n_u8_m
__builtin_sve_svmsb_n_u8_x
__builtin_sve_svmsb_n_u8_z
__builtin_sve_svmsb_s16_m
__builtin_sve_svmsb_s16_x
__builtin_sve_svmsb_s16_z
__builtin_sve_svmsb_s32_m
__builtin_sve_svmsb_s32_x
__builtin_sve_svmsb_s32_z
__builtin_sve_svmsb_s64_m
__builtin_sve_svmsb_s64_x
__builtin_sve_svmsb_s64_z
__builtin_sve_svmsb_s8_m
__builtin_sve_svmsb_s8_x
__builtin_sve_svmsb_s8_z
__builtin_sve_svmsb_u16_m
__builtin_sve_svmsb_u16_x
__builtin_sve_svmsb_u16_z
__builtin_sve_svmsb_u32_m
__builtin_sve_svmsb_u32_x
__builtin_sve_svmsb_u32_z
__builtin_sve_svmsb_u64_m
__builtin_sve_svmsb_u64_x
__builtin_sve_svmsb_u64_z
__builtin_sve_svmsb_u8_m
__builtin_sve_svmsb_u8_x
__builtin_sve_svmsb_u8_z
__builtin_sve_svmul_f16_m
__builtin_sve_svmul_f16_x
__builtin_sve_svmul_f16_z
__builtin_sve_svmul_f32_m
__builtin_sve_svmul_f32_x
__builtin_sve_svmul_f32_z
__builtin_sve_svmul_f64_m
__builtin_sve_svmul_f64_x
__builtin_sve_svmul_f64_z
__builtin_sve_svmul_lane_f16
__builtin_sve_svmul_lane_f32
__builtin_sve_svmul_lane_f64
__builtin_sve_svmul_lane_s16
__builtin_sve_svmul_lane_s32
__builtin_sve_svmul_lane_s64
__builtin_sve_svmul_lane_u16
__builtin_sve_svmul_lane_u32
__builtin_sve_svmul_lane_u64
__builtin_sve_svmul_n_f16_m
__builtin_sve_svmul_n_f16_x
__builtin_sve_svmul_n_f16_z
__builtin_sve_svmul_n_f32_m
__builtin_sve_svmul_n_f32_x
__builtin_sve_svmul_n_f32_z
__builtin_sve_svmul_n_f64_m
__builtin_sve_svmul_n_f64_x
__builtin_sve_svmul_n_f64_z
__builtin_sve_svmul_n_s16_m
__builtin_sve_svmul_n_s16_x
__builtin_sve_svmul_n_s16_z
__builtin_sve_svmul_n_s32_m
__builtin_sve_svmul_n_s32_x
__builtin_sve_svmul_n_s32_z
__builtin_sve_svmul_n_s64_m
__builtin_sve_svmul_n_s64_x
__builtin_sve_svmul_n_s64_z
__builtin_sve_svmul_n_s8_m
__builtin_sve_svmul_n_s8_x
__builtin_sve_svmul_n_s8_z
__builtin_sve_svmul_n_u16_m
__builtin_sve_svmul_n_u16_x
__builtin_sve_svmul_n_u16_z
__builtin_sve_svmul_n_u32_m
__builtin_sve_svmul_n_u32_x
__builtin_sve_svmul_n_u32_z
__builtin_sve_svmul_n_u64_m
__builtin_sve_svmul_n_u64_x
__builtin_sve_svmul_n_u64_z
__builtin_sve_svmul_n_u8_m
__builtin_sve_svmul_n_u8_x
__builtin_sve_svmul_n_u8_z
__builtin_sve_svmul_s16_m
__builtin_sve_svmul_s16_x
__builtin_sve_svmul_s16_z
__builtin_sve_svmul_s32_m
__builtin_sve_svmul_s32_x
__builtin_sve_svmul_s32_z
__builtin_sve_svmul_s64_m
__builtin_sve_svmul_s64_x
__builtin_sve_svmul_s64_z
__builtin_sve_svmul_s8_m
__builtin_sve_svmul_s8_x
__builtin_sve_svmul_s8_z
__builtin_sve_svmul_u16_m
__builtin_sve_svmul_u16_x
__builtin_sve_svmul_u16_z
__builtin_sve_svmul_u32_m
__builtin_sve_svmul_u32_x
__builtin_sve_svmul_u32_z
__builtin_sve_svmul_u64_m
__builtin_sve_svmul_u64_x
__builtin_sve_svmul_u64_z
__builtin_sve_svmul_u8_m
__builtin_sve_svmul_u8_x
__builtin_sve_svmul_u8_z
__builtin_sve_svmulh_n_s16_m
__builtin_sve_svmulh_n_s16_x
__builtin_sve_svmulh_n_s16_z
__builtin_sve_svmulh_n_s32_m
__builtin_sve_svmulh_n_s32_x
__builtin_sve_svmulh_n_s32_z
__builtin_sve_svmulh_n_s64_m
__builtin_sve_svmulh_n_s64_x
__builtin_sve_svmulh_n_s64_z
__builtin_sve_svmulh_n_s8_m
__builtin_sve_svmulh_n_s8_x
__builtin_sve_svmulh_n_s8_z
__builtin_sve_svmulh_n_u16_m
__builtin_sve_svmulh_n_u16_x
__builtin_sve_svmulh_n_u16_z
__builtin_sve_svmulh_n_u32_m
__builtin_sve_svmulh_n_u32_x
__builtin_sve_svmulh_n_u32_z
__builtin_sve_svmulh_n_u64_m
__builtin_sve_svmulh_n_u64_x
__builtin_sve_svmulh_n_u64_z
__builtin_sve_svmulh_n_u8_m
__builtin_sve_svmulh_n_u8_x
__builtin_sve_svmulh_n_u8_z
__builtin_sve_svmulh_s16_m
__builtin_sve_svmulh_s16_x
__builtin_sve_svmulh_s16_z
__builtin_sve_svmulh_s32_m
__builtin_sve_svmulh_s32_x
__builtin_sve_svmulh_s32_z
__builtin_sve_svmulh_s64_m
__builtin_sve_svmulh_s64_x
__builtin_sve_svmulh_s64_z
__builtin_sve_svmulh_s8_m
__builtin_sve_svmulh_s8_x
__builtin_sve_svmulh_s8_z
__builtin_sve_svmulh_u16_m
__builtin_sve_svmulh_u16_x
__builtin_sve_svmulh_u16_z
__builtin_sve_svmulh_u32_m
__builtin_sve_svmulh_u32_x
__builtin_sve_svmulh_u32_z
__builtin_sve_svmulh_u64_m
__builtin_sve_svmulh_u64_x
__builtin_sve_svmulh_u64_z
__builtin_sve_svmulh_u8_m
__builtin_sve_svmulh_u8_x
__builtin_sve_svmulh_u8_z
__builtin_sve_svmullb_lane_s32
q4iq8sq8sIUWi
__builtin_sve_svmullb_lane_s64
q2Wiq4iq4iIUWi
__builtin_sve_svmullb_lane_u32
q4Uiq8Usq8UsIUWi
__builtin_sve_svmullb_lane_u64
q2UWiq4Uiq4UiIUWi
__builtin_sve_svmullb_n_s16
__builtin_sve_svmullb_n_s32
__builtin_sve_svmullb_n_s64
__builtin_sve_svmullb_n_u16
__builtin_sve_svmullb_n_u32
__builtin_sve_svmullb_n_u64
__builtin_sve_svmullb_s16
__builtin_sve_svmullb_s32
__builtin_sve_svmullb_s64
__builtin_sve_svmullb_u16
__builtin_sve_svmullb_u32
__builtin_sve_svmullb_u64
__builtin_sve_svmullt_lane_s32
__builtin_sve_svmullt_lane_s64
__builtin_sve_svmullt_lane_u32
__builtin_sve_svmullt_lane_u64
__builtin_sve_svmullt_n_s16
__builtin_sve_svmullt_n_s32
__builtin_sve_svmullt_n_s64
__builtin_sve_svmullt_n_u16
__builtin_sve_svmullt_n_u32
__builtin_sve_svmullt_n_u64
__builtin_sve_svmullt_s16
__builtin_sve_svmullt_s32
__builtin_sve_svmullt_s64
__builtin_sve_svmullt_u16
__builtin_sve_svmullt_u32
__builtin_sve_svmullt_u64
__builtin_sve_svmulx_f16_m
__builtin_sve_svmulx_f16_x
__builtin_sve_svmulx_f16_z
__builtin_sve_svmulx_f32_m
__builtin_sve_svmulx_f32_x
__builtin_sve_svmulx_f32_z
__builtin_sve_svmulx_f64_m
__builtin_sve_svmulx_f64_x
__builtin_sve_svmulx_f64_z
__builtin_sve_svmulx_n_f16_m
__builtin_sve_svmulx_n_f16_x
__builtin_sve_svmulx_n_f16_z
__builtin_sve_svmulx_n_f32_m
__builtin_sve_svmulx_n_f32_x
__builtin_sve_svmulx_n_f32_z
__builtin_sve_svmulx_n_f64_m
__builtin_sve_svmulx_n_f64_x
__builtin_sve_svmulx_n_f64_z
__builtin_sve_svnand_b_z
__builtin_sve_svnbsl_n_s16
__builtin_sve_svnbsl_n_s32
__builtin_sve_svnbsl_n_s64
__builtin_sve_svnbsl_n_s8
__builtin_sve_svnbsl_n_u16
__builtin_sve_svnbsl_n_u32
__builtin_sve_svnbsl_n_u64
__builtin_sve_svnbsl_n_u8
__builtin_sve_svnbsl_s16
__builtin_sve_svnbsl_s32
__builtin_sve_svnbsl_s64
__builtin_sve_svnbsl_s8
__builtin_sve_svnbsl_u16
__builtin_sve_svnbsl_u32
__builtin_sve_svnbsl_u64
__builtin_sve_svnbsl_u8
__builtin_sve_svneg_f16_m
__builtin_sve_svneg_f16_x
__builtin_sve_svneg_f16_z
__builtin_sve_svneg_f32_m
__builtin_sve_svneg_f32_x
__builtin_sve_svneg_f32_z
__builtin_sve_svneg_f64_m
__builtin_sve_svneg_f64_x
__builtin_sve_svneg_f64_z
__builtin_sve_svneg_s16_m
__builtin_sve_svneg_s16_x
__builtin_sve_svneg_s16_z
__builtin_sve_svneg_s32_m
__builtin_sve_svneg_s32_x
__builtin_sve_svneg_s32_z
__builtin_sve_svneg_s64_m
__builtin_sve_svneg_s64_x
__builtin_sve_svneg_s64_z
__builtin_sve_svneg_s8_m
__builtin_sve_svneg_s8_x
__builtin_sve_svneg_s8_z
__builtin_sve_svnmad_f16_m
__builtin_sve_svnmad_f16_x
__builtin_sve_svnmad_f16_z
__builtin_sve_svnmad_f32_m
__builtin_sve_svnmad_f32_x
__builtin_sve_svnmad_f32_z
__builtin_sve_svnmad_f64_m
__builtin_sve_svnmad_f64_x
__builtin_sve_svnmad_f64_z
__builtin_sve_svnmad_n_f16_m
__builtin_sve_svnmad_n_f16_x
__builtin_sve_svnmad_n_f16_z
__builtin_sve_svnmad_n_f32_m
__builtin_sve_svnmad_n_f32_x
__builtin_sve_svnmad_n_f32_z
__builtin_sve_svnmad_n_f64_m
__builtin_sve_svnmad_n_f64_x
__builtin_sve_svnmad_n_f64_z
__builtin_sve_svnmatch_s16
__builtin_sve_svnmatch_s8
__builtin_sve_svnmatch_u16
__builtin_sve_svnmatch_u8
__builtin_sve_svnmla_f16_m
__builtin_sve_svnmla_f16_x
__builtin_sve_svnmla_f16_z
__builtin_sve_svnmla_f32_m
__builtin_sve_svnmla_f32_x
__builtin_sve_svnmla_f32_z
__builtin_sve_svnmla_f64_m
__builtin_sve_svnmla_f64_x
__builtin_sve_svnmla_f64_z
__builtin_sve_svnmla_n_f16_m
__builtin_sve_svnmla_n_f16_x
__builtin_sve_svnmla_n_f16_z
__builtin_sve_svnmla_n_f32_m
__builtin_sve_svnmla_n_f32_x
__builtin_sve_svnmla_n_f32_z
__builtin_sve_svnmla_n_f64_m
__builtin_sve_svnmla_n_f64_x
__builtin_sve_svnmla_n_f64_z
__builtin_sve_svnmls_f16_m
__builtin_sve_svnmls_f16_x
__builtin_sve_svnmls_f16_z
__builtin_sve_svnmls_f32_m
__builtin_sve_svnmls_f32_x
__builtin_sve_svnmls_f32_z
__builtin_sve_svnmls_f64_m
__builtin_sve_svnmls_f64_x
__builtin_sve_svnmls_f64_z
__builtin_sve_svnmls_n_f16_m
__builtin_sve_svnmls_n_f16_x
__builtin_sve_svnmls_n_f16_z
__builtin_sve_svnmls_n_f32_m
__builtin_sve_svnmls_n_f32_x
__builtin_sve_svnmls_n_f32_z
__builtin_sve_svnmls_n_f64_m
__builtin_sve_svnmls_n_f64_x
__builtin_sve_svnmls_n_f64_z
__builtin_sve_svnmsb_f16_m
__builtin_sve_svnmsb_f16_x
__builtin_sve_svnmsb_f16_z
__builtin_sve_svnmsb_f32_m
__builtin_sve_svnmsb_f32_x
__builtin_sve_svnmsb_f32_z
__builtin_sve_svnmsb_f64_m
__builtin_sve_svnmsb_f64_x
__builtin_sve_svnmsb_f64_z
__builtin_sve_svnmsb_n_f16_m
__builtin_sve_svnmsb_n_f16_x
__builtin_sve_svnmsb_n_f16_z
__builtin_sve_svnmsb_n_f32_m
__builtin_sve_svnmsb_n_f32_x
__builtin_sve_svnmsb_n_f32_z
__builtin_sve_svnmsb_n_f64_m
__builtin_sve_svnmsb_n_f64_x
__builtin_sve_svnmsb_n_f64_z
__builtin_sve_svnor_b_z
__builtin_sve_svnot_b_z
__builtin_sve_svnot_s16_m
__builtin_sve_svnot_s16_x
__builtin_sve_svnot_s16_z
__builtin_sve_svnot_s32_m
__builtin_sve_svnot_s32_x
__builtin_sve_svnot_s32_z
__builtin_sve_svnot_s64_m
__builtin_sve_svnot_s64_x
__builtin_sve_svnot_s64_z
__builtin_sve_svnot_s8_m
__builtin_sve_svnot_s8_x
__builtin_sve_svnot_s8_z
__builtin_sve_svnot_u16_m
__builtin_sve_svnot_u16_x
__builtin_sve_svnot_u16_z
__builtin_sve_svnot_u32_m
__builtin_sve_svnot_u32_x
__builtin_sve_svnot_u32_z
__builtin_sve_svnot_u64_m
__builtin_sve_svnot_u64_x
__builtin_sve_svnot_u64_z
__builtin_sve_svnot_u8_m
__builtin_sve_svnot_u8_x
__builtin_sve_svnot_u8_z
__builtin_sve_svorn_b_z
__builtin_sve_svorr_b_z
__builtin_sve_svorr_n_s16_m
__builtin_sve_svorr_n_s16_x
__builtin_sve_svorr_n_s16_z
__builtin_sve_svorr_n_s32_m
__builtin_sve_svorr_n_s32_x
__builtin_sve_svorr_n_s32_z
__builtin_sve_svorr_n_s64_m
__builtin_sve_svorr_n_s64_x
__builtin_sve_svorr_n_s64_z
__builtin_sve_svorr_n_s8_m
__builtin_sve_svorr_n_s8_x
__builtin_sve_svorr_n_s8_z
__builtin_sve_svorr_n_u16_m
__builtin_sve_svorr_n_u16_x
__builtin_sve_svorr_n_u16_z
__builtin_sve_svorr_n_u32_m
__builtin_sve_svorr_n_u32_x
__builtin_sve_svorr_n_u32_z
__builtin_sve_svorr_n_u64_m
__builtin_sve_svorr_n_u64_x
__builtin_sve_svorr_n_u64_z
__builtin_sve_svorr_n_u8_m
__builtin_sve_svorr_n_u8_x
__builtin_sve_svorr_n_u8_z
__builtin_sve_svorr_s16_m
__builtin_sve_svorr_s16_x
__builtin_sve_svorr_s16_z
__builtin_sve_svorr_s32_m
__builtin_sve_svorr_s32_x
__builtin_sve_svorr_s32_z
__builtin_sve_svorr_s64_m
__builtin_sve_svorr_s64_x
__builtin_sve_svorr_s64_z
__builtin_sve_svorr_s8_m
__builtin_sve_svorr_s8_x
__builtin_sve_svorr_s8_z
__builtin_sve_svorr_u16_m
__builtin_sve_svorr_u16_x
__builtin_sve_svorr_u16_z
__builtin_sve_svorr_u32_m
__builtin_sve_svorr_u32_x
__builtin_sve_svorr_u32_z
__builtin_sve_svorr_u64_m
__builtin_sve_svorr_u64_x
__builtin_sve_svorr_u64_z
__builtin_sve_svorr_u8_m
__builtin_sve_svorr_u8_x
__builtin_sve_svorr_u8_z
__builtin_sve_svorv_s16
__builtin_sve_svorv_s32
__builtin_sve_svorv_s64
__builtin_sve_svorv_s8
__builtin_sve_svorv_u16
__builtin_sve_svorv_u32
__builtin_sve_svorv_u64
__builtin_sve_svorv_u8
__builtin_sve_svpfalse_b
q16b
__builtin_sve_svpfirst_b
__builtin_sve_svpmul_n_u8
__builtin_sve_svpmul_u8
__builtin_sve_svpmullb_n_u16
__builtin_sve_svpmullb_n_u64
__builtin_sve_svpmullb_pair_n_u32
__builtin_sve_svpmullb_pair_n_u64
__builtin_sve_svpmullb_pair_n_u8
__builtin_sve_svpmullb_pair_u32
__builtin_sve_svpmullb_pair_u64
__builtin_sve_svpmullb_pair_u8
__builtin_sve_svpmullb_u16
__builtin_sve_svpmullb_u64
__builtin_sve_svpmullt_n_u16
__builtin_sve_svpmullt_n_u64
__builtin_sve_svpmullt_pair_n_u32
__builtin_sve_svpmullt_pair_n_u64
__builtin_sve_svpmullt_pair_n_u8
__builtin_sve_svpmullt_pair_u32
__builtin_sve_svpmullt_pair_u64
__builtin_sve_svpmullt_pair_u8
__builtin_sve_svpmullt_u16
__builtin_sve_svpmullt_u64
__builtin_sve_svpnext_b16
__builtin_sve_svpnext_b32
__builtin_sve_svpnext_b64
__builtin_sve_svpnext_b8
__builtin_sve_svprfb
vq16bScC*Ii
__builtin_sve_svprfb_gather_s32offset
vq16bvC*q4iIi
__builtin_sve_svprfb_gather_s64offset
vq16bvC*q2WiIi
__builtin_sve_svprfb_gather_u32base
vq16bq4UiIi
__builtin_sve_svprfb_gather_u32base_offset
vq16bq4UiWiIi
__builtin_sve_svprfb_gather_u32offset
vq16bvC*q4UiIi
__builtin_sve_svprfb_gather_u64base
vq16bq2UWiIi
__builtin_sve_svprfb_gather_u64base_offset
vq16bq2UWiWiIi
__builtin_sve_svprfb_gather_u64offset
vq16bvC*q2UWiIi
__builtin_sve_svprfb_vnum
vq16bScC*WiIi
__builtin_sve_svprfd
vq16bSWiC*Ii
__builtin_sve_svprfd_gather_s32index
__builtin_sve_svprfd_gather_s64index
__builtin_sve_svprfd_gather_u32base
__builtin_sve_svprfd_gather_u32base_index
__builtin_sve_svprfd_gather_u32index
__builtin_sve_svprfd_gather_u64base
__builtin_sve_svprfd_gather_u64base_index
__builtin_sve_svprfd_gather_u64index
__builtin_sve_svprfd_vnum
vq16bSWiC*WiIi
__builtin_sve_svprfh
vq16bSsC*Ii
__builtin_sve_svprfh_gather_s32index
__builtin_sve_svprfh_gather_s64index
__builtin_sve_svprfh_gather_u32base
__builtin_sve_svprfh_gather_u32base_index
__builtin_sve_svprfh_gather_u32index
__builtin_sve_svprfh_gather_u64base
__builtin_sve_svprfh_gather_u64base_index
__builtin_sve_svprfh_gather_u64index
__builtin_sve_svprfh_vnum
vq16bSsC*WiIi
__builtin_sve_svprfw
vq16bSiC*Ii
__builtin_sve_svprfw_gather_s32index
__builtin_sve_svprfw_gather_s64index
__builtin_sve_svprfw_gather_u32base
__builtin_sve_svprfw_gather_u32base_index
__builtin_sve_svprfw_gather_u32index
__builtin_sve_svprfw_gather_u64base
__builtin_sve_svprfw_gather_u64base_index
__builtin_sve_svprfw_gather_u64index
__builtin_sve_svprfw_vnum
vq16bSiC*WiIi
__builtin_sve_svptest_any
Scq16bq16b
__builtin_sve_svptest_first
__builtin_sve_svptest_last
__builtin_sve_svptrue_b16
__builtin_sve_svptrue_b32
__builtin_sve_svptrue_b64
__builtin_sve_svptrue_b8
__builtin_sve_svptrue_pat_b16
q16bIi
__builtin_sve_svptrue_pat_b32
__builtin_sve_svptrue_pat_b64
__builtin_sve_svptrue_pat_b8
__builtin_sve_svqabs_s16_m
__builtin_sve_svqabs_s16_x
__builtin_sve_svqabs_s16_z
__builtin_sve_svqabs_s32_m
__builtin_sve_svqabs_s32_x
__builtin_sve_svqabs_s32_z
__builtin_sve_svqabs_s64_m
__builtin_sve_svqabs_s64_x
__builtin_sve_svqabs_s64_z
__builtin_sve_svqabs_s8_m
__builtin_sve_svqabs_s8_x
__builtin_sve_svqabs_s8_z
__builtin_sve_svqadd_n_s16
__builtin_sve_svqadd_n_s16_m
__builtin_sve_svqadd_n_s16_x
__builtin_sve_svqadd_n_s16_z
__builtin_sve_svqadd_n_s32
__builtin_sve_svqadd_n_s32_m
__builtin_sve_svqadd_n_s32_x
__builtin_sve_svqadd_n_s32_z
__builtin_sve_svqadd_n_s64
__builtin_sve_svqadd_n_s64_m
__builtin_sve_svqadd_n_s64_x
__builtin_sve_svqadd_n_s64_z
__builtin_sve_svqadd_n_s8
__builtin_sve_svqadd_n_s8_m
__builtin_sve_svqadd_n_s8_x
__builtin_sve_svqadd_n_s8_z
__builtin_sve_svqadd_n_u16
__builtin_sve_svqadd_n_u16_m
__builtin_sve_svqadd_n_u16_x
__builtin_sve_svqadd_n_u16_z
__builtin_sve_svqadd_n_u32
__builtin_sve_svqadd_n_u32_m
__builtin_sve_svqadd_n_u32_x
__builtin_sve_svqadd_n_u32_z
__builtin_sve_svqadd_n_u64
__builtin_sve_svqadd_n_u64_m
__builtin_sve_svqadd_n_u64_x
__builtin_sve_svqadd_n_u64_z
__builtin_sve_svqadd_n_u8
__builtin_sve_svqadd_n_u8_m
__builtin_sve_svqadd_n_u8_x
__builtin_sve_svqadd_n_u8_z
__builtin_sve_svqadd_s16
q8sq8sq8s
__builtin_sve_svqadd_s16_m
__builtin_sve_svqadd_s16_x
__builtin_sve_svqadd_s16_z
__builtin_sve_svqadd_s32
q4iq4iq4i
__builtin_sve_svqadd_s32_m
__builtin_sve_svqadd_s32_x
__builtin_sve_svqadd_s32_z
__builtin_sve_svqadd_s64
q2Wiq2Wiq2Wi
__builtin_sve_svqadd_s64_m
__builtin_sve_svqadd_s64_x
__builtin_sve_svqadd_s64_z
__builtin_sve_svqadd_s8
q16Scq16Scq16Sc
__builtin_sve_svqadd_s8_m
__builtin_sve_svqadd_s8_x
__builtin_sve_svqadd_s8_z
__builtin_sve_svqadd_u16
__builtin_sve_svqadd_u16_m
__builtin_sve_svqadd_u16_x
__builtin_sve_svqadd_u16_z
__builtin_sve_svqadd_u32
__builtin_sve_svqadd_u32_m
__builtin_sve_svqadd_u32_x
__builtin_sve_svqadd_u32_z
__builtin_sve_svqadd_u64
__builtin_sve_svqadd_u64_m
__builtin_sve_svqadd_u64_x
__builtin_sve_svqadd_u64_z
__builtin_sve_svqadd_u8
__builtin_sve_svqadd_u8_m
__builtin_sve_svqadd_u8_x
__builtin_sve_svqadd_u8_z
__builtin_sve_svqcadd_s16
__builtin_sve_svqcadd_s32
__builtin_sve_svqcadd_s64
__builtin_sve_svqcadd_s8
__builtin_sve_svqdecb_n_s32
iiIUWi
__builtin_sve_svqdecb_n_s64
WiWiIUWi
__builtin_sve_svqdecb_n_u32
UiUiIUWi
__builtin_sve_svqdecb_n_u64
UWiUWiIUWi
__builtin_sve_svqdecb_pat_n_s32
iiIiIUWi
__builtin_sve_svqdecb_pat_n_s64
WiWiIiIUWi
__builtin_sve_svqdecb_pat_n_u32
UiUiIiIUWi
__builtin_sve_svqdecb_pat_n_u64
UWiUWiIiIUWi
__builtin_sve_svqdecd_n_s32
__builtin_sve_svqdecd_n_s64
__builtin_sve_svqdecd_n_u32
__builtin_sve_svqdecd_n_u64
__builtin_sve_svqdecd_pat_n_s32
__builtin_sve_svqdecd_pat_n_s64
__builtin_sve_svqdecd_pat_n_u32
__builtin_sve_svqdecd_pat_n_u64
__builtin_sve_svqdecd_pat_s64
q2Wiq2WiIiIUWi
__builtin_sve_svqdecd_pat_u64
q2UWiq2UWiIiIUWi
__builtin_sve_svqdecd_s64
q2Wiq2WiIUWi
__builtin_sve_svqdecd_u64
q2UWiq2UWiIUWi
__builtin_sve_svqdech_n_s32
__builtin_sve_svqdech_n_s64
__builtin_sve_svqdech_n_u32
__builtin_sve_svqdech_n_u64
__builtin_sve_svqdech_pat_n_s32
__builtin_sve_svqdech_pat_n_s64
__builtin_sve_svqdech_pat_n_u32
__builtin_sve_svqdech_pat_n_u64
__builtin_sve_svqdech_pat_s16
q8sq8sIiIUWi
__builtin_sve_svqdech_pat_u16
q8Usq8UsIiIUWi
__builtin_sve_svqdech_s16
q8sq8sIUWi
__builtin_sve_svqdech_u16
q8Usq8UsIUWi
__builtin_sve_svqdecp_n_s32_b16
iiq16b
__builtin_sve_svqdecp_n_s32_b32
__builtin_sve_svqdecp_n_s32_b64
__builtin_sve_svqdecp_n_s32_b8
__builtin_sve_svqdecp_n_s64_b16
WiWiq16b
__builtin_sve_svqdecp_n_s64_b32
__builtin_sve_svqdecp_n_s64_b64
__builtin_sve_svqdecp_n_s64_b8
__builtin_sve_svqdecp_n_u32_b16
UiUiq16b
__builtin_sve_svqdecp_n_u32_b32
__builtin_sve_svqdecp_n_u32_b64
__builtin_sve_svqdecp_n_u32_b8
__builtin_sve_svqdecp_n_u64_b16
UWiUWiq16b
__builtin_sve_svqdecp_n_u64_b32
__builtin_sve_svqdecp_n_u64_b64
__builtin_sve_svqdecp_n_u64_b8
__builtin_sve_svqdecp_s16
q8sq8sq16b
__builtin_sve_svqdecp_s32
q4iq4iq16b
__builtin_sve_svqdecp_s64
q2Wiq2Wiq16b
__builtin_sve_svqdecp_u16
q8Usq8Usq16b
__builtin_sve_svqdecp_u32
q4Uiq4Uiq16b
__builtin_sve_svqdecp_u64
q2UWiq2UWiq16b
__builtin_sve_svqdecw_n_s32
__builtin_sve_svqdecw_n_s64
__builtin_sve_svqdecw_n_u32
__builtin_sve_svqdecw_n_u64
__builtin_sve_svqdecw_pat_n_s32
__builtin_sve_svqdecw_pat_n_s64
__builtin_sve_svqdecw_pat_n_u32
__builtin_sve_svqdecw_pat_n_u64
__builtin_sve_svqdecw_pat_s32
q4iq4iIiIUWi
__builtin_sve_svqdecw_pat_u32
q4Uiq4UiIiIUWi
__builtin_sve_svqdecw_s32
q4iq4iIUWi
__builtin_sve_svqdecw_u32
q4Uiq4UiIUWi
__builtin_sve_svqdmlalb_lane_s32
__builtin_sve_svqdmlalb_lane_s64
__builtin_sve_svqdmlalb_n_s16
__builtin_sve_svqdmlalb_n_s32
__builtin_sve_svqdmlalb_n_s64
__builtin_sve_svqdmlalb_s16
__builtin_sve_svqdmlalb_s32
__builtin_sve_svqdmlalb_s64
__builtin_sve_svqdmlalbt_n_s16
__builtin_sve_svqdmlalbt_n_s32
__builtin_sve_svqdmlalbt_n_s64
__builtin_sve_svqdmlalbt_s16
__builtin_sve_svqdmlalbt_s32
__builtin_sve_svqdmlalbt_s64
__builtin_sve_svqdmlalt_lane_s32
__builtin_sve_svqdmlalt_lane_s64
__builtin_sve_svqdmlalt_n_s16
__builtin_sve_svqdmlalt_n_s32
__builtin_sve_svqdmlalt_n_s64
__builtin_sve_svqdmlalt_s16
__builtin_sve_svqdmlalt_s32
__builtin_sve_svqdmlalt_s64
__builtin_sve_svqdmlslb_lane_s32
__builtin_sve_svqdmlslb_lane_s64
__builtin_sve_svqdmlslb_n_s16
__builtin_sve_svqdmlslb_n_s32
__builtin_sve_svqdmlslb_n_s64
__builtin_sve_svqdmlslb_s16
__builtin_sve_svqdmlslb_s32
__builtin_sve_svqdmlslb_s64
__builtin_sve_svqdmlslbt_n_s16
__builtin_sve_svqdmlslbt_n_s32
__builtin_sve_svqdmlslbt_n_s64
__builtin_sve_svqdmlslbt_s16
__builtin_sve_svqdmlslbt_s32
__builtin_sve_svqdmlslbt_s64
__builtin_sve_svqdmlslt_lane_s32
__builtin_sve_svqdmlslt_lane_s64
__builtin_sve_svqdmlslt_n_s16
__builtin_sve_svqdmlslt_n_s32
__builtin_sve_svqdmlslt_n_s64
__builtin_sve_svqdmlslt_s16
__builtin_sve_svqdmlslt_s32
__builtin_sve_svqdmlslt_s64
__builtin_sve_svqdmulh_lane_s16
__builtin_sve_svqdmulh_lane_s32
__builtin_sve_svqdmulh_lane_s64
__builtin_sve_svqdmulh_n_s16
__builtin_sve_svqdmulh_n_s32
__builtin_sve_svqdmulh_n_s64
__builtin_sve_svqdmulh_n_s8
__builtin_sve_svqdmulh_s16
__builtin_sve_svqdmulh_s32
__builtin_sve_svqdmulh_s64
__builtin_sve_svqdmulh_s8
__builtin_sve_svqdmullb_lane_s32
__builtin_sve_svqdmullb_lane_s64
__builtin_sve_svqdmullb_n_s16
__builtin_sve_svqdmullb_n_s32
__builtin_sve_svqdmullb_n_s64
__builtin_sve_svqdmullb_s16
__builtin_sve_svqdmullb_s32
__builtin_sve_svqdmullb_s64
__builtin_sve_svqdmullt_lane_s32
__builtin_sve_svqdmullt_lane_s64
__builtin_sve_svqdmullt_n_s16
__builtin_sve_svqdmullt_n_s32
__builtin_sve_svqdmullt_n_s64
__builtin_sve_svqdmullt_s16
__builtin_sve_svqdmullt_s32
__builtin_sve_svqdmullt_s64
__builtin_sve_svqincb_n_s32
__builtin_sve_svqincb_n_s64
__builtin_sve_svqincb_n_u32
__builtin_sve_svqincb_n_u64
__builtin_sve_svqincb_pat_n_s32
__builtin_sve_svqincb_pat_n_s64
__builtin_sve_svqincb_pat_n_u32
__builtin_sve_svqincb_pat_n_u64
__builtin_sve_svqincd_n_s32
__builtin_sve_svqincd_n_s64
__builtin_sve_svqincd_n_u32
__builtin_sve_svqincd_n_u64
__builtin_sve_svqincd_pat_n_s32
__builtin_sve_svqincd_pat_n_s64
__builtin_sve_svqincd_pat_n_u32
__builtin_sve_svqincd_pat_n_u64
__builtin_sve_svqincd_pat_s64
__builtin_sve_svqincd_pat_u64
__builtin_sve_svqincd_s64
__builtin_sve_svqincd_u64
__builtin_sve_svqinch_n_s32
__builtin_sve_svqinch_n_s64
__builtin_sve_svqinch_n_u32
__builtin_sve_svqinch_n_u64
__builtin_sve_svqinch_pat_n_s32
__builtin_sve_svqinch_pat_n_s64
__builtin_sve_svqinch_pat_n_u32
__builtin_sve_svqinch_pat_n_u64
__builtin_sve_svqinch_pat_s16
__builtin_sve_svqinch_pat_u16
__builtin_sve_svqinch_s16
__builtin_sve_svqinch_u16
__builtin_sve_svqincp_n_s32_b16
__builtin_sve_svqincp_n_s32_b32
__builtin_sve_svqincp_n_s32_b64
__builtin_sve_svqincp_n_s32_b8
__builtin_sve_svqincp_n_s64_b16
__builtin_sve_svqincp_n_s64_b32
__builtin_sve_svqincp_n_s64_b64
__builtin_sve_svqincp_n_s64_b8
__builtin_sve_svqincp_n_u32_b16
__builtin_sve_svqincp_n_u32_b32
__builtin_sve_svqincp_n_u32_b64
__builtin_sve_svqincp_n_u32_b8
__builtin_sve_svqincp_n_u64_b16
__builtin_sve_svqincp_n_u64_b32
__builtin_sve_svqincp_n_u64_b64
__builtin_sve_svqincp_n_u64_b8
__builtin_sve_svqincp_s16
__builtin_sve_svqincp_s32
__builtin_sve_svqincp_s64
__builtin_sve_svqincp_u16
__builtin_sve_svqincp_u32
__builtin_sve_svqincp_u64
__builtin_sve_svqincw_n_s32
__builtin_sve_svqincw_n_s64
__builtin_sve_svqincw_n_u32
__builtin_sve_svqincw_n_u64
__builtin_sve_svqincw_pat_n_s32
__builtin_sve_svqincw_pat_n_s64
__builtin_sve_svqincw_pat_n_u32
__builtin_sve_svqincw_pat_n_u64
__builtin_sve_svqincw_pat_s32
__builtin_sve_svqincw_pat_u32
__builtin_sve_svqincw_s32
__builtin_sve_svqincw_u32
__builtin_sve_svqneg_s16_m
__builtin_sve_svqneg_s16_x
__builtin_sve_svqneg_s16_z
__builtin_sve_svqneg_s32_m
__builtin_sve_svqneg_s32_x
__builtin_sve_svqneg_s32_z
__builtin_sve_svqneg_s64_m
__builtin_sve_svqneg_s64_x
__builtin_sve_svqneg_s64_z
__builtin_sve_svqneg_s8_m
__builtin_sve_svqneg_s8_x
__builtin_sve_svqneg_s8_z
__builtin_sve_svqrdcmlah_lane_s16
__builtin_sve_svqrdcmlah_lane_s32
__builtin_sve_svqrdcmlah_s16
__builtin_sve_svqrdcmlah_s32
__builtin_sve_svqrdcmlah_s64
__builtin_sve_svqrdcmlah_s8
__builtin_sve_svqrdmlah_lane_s16
__builtin_sve_svqrdmlah_lane_s32
__builtin_sve_svqrdmlah_lane_s64
__builtin_sve_svqrdmlah_n_s16
__builtin_sve_svqrdmlah_n_s32
__builtin_sve_svqrdmlah_n_s64
__builtin_sve_svqrdmlah_n_s8
__builtin_sve_svqrdmlah_s16
__builtin_sve_svqrdmlah_s32
__builtin_sve_svqrdmlah_s64
__builtin_sve_svqrdmlah_s8
__builtin_sve_svqrdmlsh_lane_s16
__builtin_sve_svqrdmlsh_lane_s32
__builtin_sve_svqrdmlsh_lane_s64
__builtin_sve_svqrdmlsh_n_s16
__builtin_sve_svqrdmlsh_n_s32
__builtin_sve_svqrdmlsh_n_s64
__builtin_sve_svqrdmlsh_n_s8
__builtin_sve_svqrdmlsh_s16
__builtin_sve_svqrdmlsh_s32
__builtin_sve_svqrdmlsh_s64
__builtin_sve_svqrdmlsh_s8
__builtin_sve_svqrdmulh_lane_s16
__builtin_sve_svqrdmulh_lane_s32
__builtin_sve_svqrdmulh_lane_s64
__builtin_sve_svqrdmulh_n_s16
__builtin_sve_svqrdmulh_n_s32
__builtin_sve_svqrdmulh_n_s64
__builtin_sve_svqrdmulh_n_s8
__builtin_sve_svqrdmulh_s16
__builtin_sve_svqrdmulh_s32
__builtin_sve_svqrdmulh_s64
__builtin_sve_svqrdmulh_s8
__builtin_sve_svqrshl_n_s16_m
__builtin_sve_svqrshl_n_s16_x
__builtin_sve_svqrshl_n_s16_z
__builtin_sve_svqrshl_n_s32_m
__builtin_sve_svqrshl_n_s32_x
__builtin_sve_svqrshl_n_s32_z
__builtin_sve_svqrshl_n_s64_m
__builtin_sve_svqrshl_n_s64_x
__builtin_sve_svqrshl_n_s64_z
__builtin_sve_svqrshl_n_s8_m
__builtin_sve_svqrshl_n_s8_x
__builtin_sve_svqrshl_n_s8_z
__builtin_sve_svqrshl_n_u16_m
q8Usq16bq8Uss
__builtin_sve_svqrshl_n_u16_x
__builtin_sve_svqrshl_n_u16_z
__builtin_sve_svqrshl_n_u32_m
q4Uiq16bq4Uii
__builtin_sve_svqrshl_n_u32_x
__builtin_sve_svqrshl_n_u32_z
__builtin_sve_svqrshl_n_u64_m
__builtin_sve_svqrshl_n_u64_x
__builtin_sve_svqrshl_n_u64_z
__builtin_sve_svqrshl_n_u8_m
q16Ucq16bq16UcSc
__builtin_sve_svqrshl_n_u8_x
__builtin_sve_svqrshl_n_u8_z
__builtin_sve_svqrshl_s16_m
__builtin_sve_svqrshl_s16_x
__builtin_sve_svqrshl_s16_z
__builtin_sve_svqrshl_s32_m
__builtin_sve_svqrshl_s32_x
__builtin_sve_svqrshl_s32_z
__builtin_sve_svqrshl_s64_m
__builtin_sve_svqrshl_s64_x
__builtin_sve_svqrshl_s64_z
__builtin_sve_svqrshl_s8_m
__builtin_sve_svqrshl_s8_x
__builtin_sve_svqrshl_s8_z
__builtin_sve_svqrshl_u16_m
q8Usq16bq8Usq8s
__builtin_sve_svqrshl_u16_x
__builtin_sve_svqrshl_u16_z
__builtin_sve_svqrshl_u32_m
q4Uiq16bq4Uiq4i
__builtin_sve_svqrshl_u32_x
__builtin_sve_svqrshl_u32_z
__builtin_sve_svqrshl_u64_m
q2UWiq16bq2UWiq2Wi
__builtin_sve_svqrshl_u64_x
__builtin_sve_svqrshl_u64_z
__builtin_sve_svqrshl_u8_m
q16Ucq16bq16Ucq16Sc
__builtin_sve_svqrshl_u8_x
__builtin_sve_svqrshl_u8_z
__builtin_sve_svqrshrnb_n_s16
q16Scq8sIUWi
__builtin_sve_svqrshrnb_n_s32
q8sq4iIUWi
__builtin_sve_svqrshrnb_n_s64
q4iq2WiIUWi
__builtin_sve_svqrshrnb_n_u16
q16Ucq8UsIUWi
__builtin_sve_svqrshrnb_n_u32
q8Usq4UiIUWi
__builtin_sve_svqrshrnb_n_u64
q4Uiq2UWiIUWi
__builtin_sve_svqrshrnt_n_s16
q16Scq16Scq8sIUWi
__builtin_sve_svqrshrnt_n_s32
q8sq8sq4iIUWi
__builtin_sve_svqrshrnt_n_s64
q4iq4iq2WiIUWi
__builtin_sve_svqrshrnt_n_u16
q16Ucq16Ucq8UsIUWi
__builtin_sve_svqrshrnt_n_u32
q8Usq8Usq4UiIUWi
__builtin_sve_svqrshrnt_n_u64
q4Uiq4Uiq2UWiIUWi
__builtin_sve_svqrshrunb_n_s16
q16Ucq8sIUWi
__builtin_sve_svqrshrunb_n_s32
q8Usq4iIUWi
__builtin_sve_svqrshrunb_n_s64
q4Uiq2WiIUWi
__builtin_sve_svqrshrunt_n_s16
q16Ucq16Ucq8sIUWi
__builtin_sve_svqrshrunt_n_s32
q8Usq8Usq4iIUWi
__builtin_sve_svqrshrunt_n_s64
q4Uiq4Uiq2WiIUWi
__builtin_sve_svqshl_n_s16_m
__builtin_sve_svqshl_n_s16_x
__builtin_sve_svqshl_n_s16_z
__builtin_sve_svqshl_n_s32_m
__builtin_sve_svqshl_n_s32_x
__builtin_sve_svqshl_n_s32_z
__builtin_sve_svqshl_n_s64_m
__builtin_sve_svqshl_n_s64_x
__builtin_sve_svqshl_n_s64_z
__builtin_sve_svqshl_n_s8_m
__builtin_sve_svqshl_n_s8_x
__builtin_sve_svqshl_n_s8_z
__builtin_sve_svqshl_n_u16_m
__builtin_sve_svqshl_n_u16_x
__builtin_sve_svqshl_n_u16_z
__builtin_sve_svqshl_n_u32_m
__builtin_sve_svqshl_n_u32_x
__builtin_sve_svqshl_n_u32_z
__builtin_sve_svqshl_n_u64_m
__builtin_sve_svqshl_n_u64_x
__builtin_sve_svqshl_n_u64_z
__builtin_sve_svqshl_n_u8_m
__builtin_sve_svqshl_n_u8_x
__builtin_sve_svqshl_n_u8_z
__builtin_sve_svqshl_s16_m
__builtin_sve_svqshl_s16_x
__builtin_sve_svqshl_s16_z
__builtin_sve_svqshl_s32_m
__builtin_sve_svqshl_s32_x
__builtin_sve_svqshl_s32_z
__builtin_sve_svqshl_s64_m
__builtin_sve_svqshl_s64_x
__builtin_sve_svqshl_s64_z
__builtin_sve_svqshl_s8_m
__builtin_sve_svqshl_s8_x
__builtin_sve_svqshl_s8_z
__builtin_sve_svqshl_u16_m
__builtin_sve_svqshl_u16_x
__builtin_sve_svqshl_u16_z
__builtin_sve_svqshl_u32_m
__builtin_sve_svqshl_u32_x
__builtin_sve_svqshl_u32_z
__builtin_sve_svqshl_u64_m
__builtin_sve_svqshl_u64_x
__builtin_sve_svqshl_u64_z
__builtin_sve_svqshl_u8_m
__builtin_sve_svqshl_u8_x
__builtin_sve_svqshl_u8_z
__builtin_sve_svqshlu_n_s16_m
q8Usq16bq8sIUWi
__builtin_sve_svqshlu_n_s16_x
__builtin_sve_svqshlu_n_s16_z
__builtin_sve_svqshlu_n_s32_m
q4Uiq16bq4iIUWi
__builtin_sve_svqshlu_n_s32_x
__builtin_sve_svqshlu_n_s32_z
__builtin_sve_svqshlu_n_s64_m
q2UWiq16bq2WiIUWi
__builtin_sve_svqshlu_n_s64_x
__builtin_sve_svqshlu_n_s64_z
__builtin_sve_svqshlu_n_s8_m
q16Ucq16bq16ScIUWi
__builtin_sve_svqshlu_n_s8_x
__builtin_sve_svqshlu_n_s8_z
__builtin_sve_svqshrnb_n_s16
__builtin_sve_svqshrnb_n_s32
__builtin_sve_svqshrnb_n_s64
__builtin_sve_svqshrnb_n_u16
__builtin_sve_svqshrnb_n_u32
__builtin_sve_svqshrnb_n_u64
__builtin_sve_svqshrnt_n_s16
__builtin_sve_svqshrnt_n_s32
__builtin_sve_svqshrnt_n_s64
__builtin_sve_svqshrnt_n_u16
__builtin_sve_svqshrnt_n_u32
__builtin_sve_svqshrnt_n_u64
__builtin_sve_svqshrunb_n_s16
__builtin_sve_svqshrunb_n_s32
__builtin_sve_svqshrunb_n_s64
__builtin_sve_svqshrunt_n_s16
__builtin_sve_svqshrunt_n_s32
__builtin_sve_svqshrunt_n_s64
__builtin_sve_svqsub_n_s16
__builtin_sve_svqsub_n_s16_m
__builtin_sve_svqsub_n_s16_x
__builtin_sve_svqsub_n_s16_z
__builtin_sve_svqsub_n_s32
__builtin_sve_svqsub_n_s32_m
__builtin_sve_svqsub_n_s32_x
__builtin_sve_svqsub_n_s32_z
__builtin_sve_svqsub_n_s64
__builtin_sve_svqsub_n_s64_m
__builtin_sve_svqsub_n_s64_x
__builtin_sve_svqsub_n_s64_z
__builtin_sve_svqsub_n_s8
__builtin_sve_svqsub_n_s8_m
__builtin_sve_svqsub_n_s8_x
__builtin_sve_svqsub_n_s8_z
__builtin_sve_svqsub_n_u16
__builtin_sve_svqsub_n_u16_m
__builtin_sve_svqsub_n_u16_x
__builtin_sve_svqsub_n_u16_z
__builtin_sve_svqsub_n_u32
__builtin_sve_svqsub_n_u32_m
__builtin_sve_svqsub_n_u32_x
__builtin_sve_svqsub_n_u32_z
__builtin_sve_svqsub_n_u64
__builtin_sve_svqsub_n_u64_m
__builtin_sve_svqsub_n_u64_x
__builtin_sve_svqsub_n_u64_z
__builtin_sve_svqsub_n_u8
__builtin_sve_svqsub_n_u8_m
__builtin_sve_svqsub_n_u8_x
__builtin_sve_svqsub_n_u8_z
__builtin_sve_svqsub_s16
__builtin_sve_svqsub_s16_m
__builtin_sve_svqsub_s16_x
__builtin_sve_svqsub_s16_z
__builtin_sve_svqsub_s32
__builtin_sve_svqsub_s32_m
__builtin_sve_svqsub_s32_x
__builtin_sve_svqsub_s32_z
__builtin_sve_svqsub_s64
__builtin_sve_svqsub_s64_m
__builtin_sve_svqsub_s64_x
__builtin_sve_svqsub_s64_z
__builtin_sve_svqsub_s8
__builtin_sve_svqsub_s8_m
__builtin_sve_svqsub_s8_x
__builtin_sve_svqsub_s8_z
__builtin_sve_svqsub_u16
__builtin_sve_svqsub_u16_m
__builtin_sve_svqsub_u16_x
__builtin_sve_svqsub_u16_z
__builtin_sve_svqsub_u32
__builtin_sve_svqsub_u32_m
__builtin_sve_svqsub_u32_x
__builtin_sve_svqsub_u32_z
__builtin_sve_svqsub_u64
__builtin_sve_svqsub_u64_m
__builtin_sve_svqsub_u64_x
__builtin_sve_svqsub_u64_z
__builtin_sve_svqsub_u8
__builtin_sve_svqsub_u8_m
__builtin_sve_svqsub_u8_x
__builtin_sve_svqsub_u8_z
__builtin_sve_svqsubr_n_s16_m
__builtin_sve_svqsubr_n_s16_x
__builtin_sve_svqsubr_n_s16_z
__builtin_sve_svqsubr_n_s32_m
__builtin_sve_svqsubr_n_s32_x
__builtin_sve_svqsubr_n_s32_z
__builtin_sve_svqsubr_n_s64_m
__builtin_sve_svqsubr_n_s64_x
__builtin_sve_svqsubr_n_s64_z
__builtin_sve_svqsubr_n_s8_m
__builtin_sve_svqsubr_n_s8_x
__builtin_sve_svqsubr_n_s8_z
__builtin_sve_svqsubr_n_u16_m
__builtin_sve_svqsubr_n_u16_x
__builtin_sve_svqsubr_n_u16_z
__builtin_sve_svqsubr_n_u32_m
__builtin_sve_svqsubr_n_u32_x
__builtin_sve_svqsubr_n_u32_z
__builtin_sve_svqsubr_n_u64_m
__builtin_sve_svqsubr_n_u64_x
__builtin_sve_svqsubr_n_u64_z
__builtin_sve_svqsubr_n_u8_m
__builtin_sve_svqsubr_n_u8_x
__builtin_sve_svqsubr_n_u8_z
__builtin_sve_svqsubr_s16_m
__builtin_sve_svqsubr_s16_x
__builtin_sve_svqsubr_s16_z
__builtin_sve_svqsubr_s32_m
__builtin_sve_svqsubr_s32_x
__builtin_sve_svqsubr_s32_z
__builtin_sve_svqsubr_s64_m
__builtin_sve_svqsubr_s64_x
__builtin_sve_svqsubr_s64_z
__builtin_sve_svqsubr_s8_m
__builtin_sve_svqsubr_s8_x
__builtin_sve_svqsubr_s8_z
__builtin_sve_svqsubr_u16_m
__builtin_sve_svqsubr_u16_x
__builtin_sve_svqsubr_u16_z
__builtin_sve_svqsubr_u32_m
__builtin_sve_svqsubr_u32_x
__builtin_sve_svqsubr_u32_z
__builtin_sve_svqsubr_u64_m
__builtin_sve_svqsubr_u64_x
__builtin_sve_svqsubr_u64_z
__builtin_sve_svqsubr_u8_m
__builtin_sve_svqsubr_u8_x
__builtin_sve_svqsubr_u8_z
__builtin_sve_svqxtnb_s16
q16Scq8s
__builtin_sve_svqxtnb_s32
q8sq4i
__builtin_sve_svqxtnb_s64
q4iq2Wi
__builtin_sve_svqxtnb_u16
q16Ucq8Us
__builtin_sve_svqxtnb_u32
q8Usq4Ui
__builtin_sve_svqxtnb_u64
q4Uiq2UWi
__builtin_sve_svqxtnt_s16
q16Scq16Scq8s
__builtin_sve_svqxtnt_s32
q8sq8sq4i
__builtin_sve_svqxtnt_s64
q4iq4iq2Wi
__builtin_sve_svqxtnt_u16
q16Ucq16Ucq8Us
__builtin_sve_svqxtnt_u32
q8Usq8Usq4Ui
__builtin_sve_svqxtnt_u64
q4Uiq4Uiq2UWi
__builtin_sve_svqxtunb_s16
q16Ucq8s
__builtin_sve_svqxtunb_s32
q8Usq4i
__builtin_sve_svqxtunb_s64
q4Uiq2Wi
__builtin_sve_svqxtunt_s16
q16Ucq16Ucq8s
__builtin_sve_svqxtunt_s32
q8Usq8Usq4i
__builtin_sve_svqxtunt_s64
q4Uiq4Uiq2Wi
__builtin_sve_svraddhnb_n_s16
__builtin_sve_svraddhnb_n_s32
__builtin_sve_svraddhnb_n_s64
__builtin_sve_svraddhnb_n_u16
__builtin_sve_svraddhnb_n_u32
__builtin_sve_svraddhnb_n_u64
__builtin_sve_svraddhnb_s16
__builtin_sve_svraddhnb_s32
__builtin_sve_svraddhnb_s64
__builtin_sve_svraddhnb_u16
__builtin_sve_svraddhnb_u32
__builtin_sve_svraddhnb_u64
__builtin_sve_svraddhnt_n_s16
__builtin_sve_svraddhnt_n_s32
__builtin_sve_svraddhnt_n_s64
__builtin_sve_svraddhnt_n_u16
__builtin_sve_svraddhnt_n_u32
__builtin_sve_svraddhnt_n_u64
__builtin_sve_svraddhnt_s16
__builtin_sve_svraddhnt_s32
__builtin_sve_svraddhnt_s64
__builtin_sve_svraddhnt_u16
__builtin_sve_svraddhnt_u32
__builtin_sve_svraddhnt_u64
__builtin_sve_svrax1_s64
__builtin_sve_svrax1_u64
__builtin_sve_svrbit_s16_m
__builtin_sve_svrbit_s16_x
__builtin_sve_svrbit_s16_z
__builtin_sve_svrbit_s32_m
__builtin_sve_svrbit_s32_x
__builtin_sve_svrbit_s32_z
__builtin_sve_svrbit_s64_m
__builtin_sve_svrbit_s64_x
__builtin_sve_svrbit_s64_z
__builtin_sve_svrbit_s8_m
__builtin_sve_svrbit_s8_x
__builtin_sve_svrbit_s8_z
__builtin_sve_svrbit_u16_m
__builtin_sve_svrbit_u16_x
__builtin_sve_svrbit_u16_z
__builtin_sve_svrbit_u32_m
__builtin_sve_svrbit_u32_x
__builtin_sve_svrbit_u32_z
__builtin_sve_svrbit_u64_m
__builtin_sve_svrbit_u64_x
__builtin_sve_svrbit_u64_z
__builtin_sve_svrbit_u8_m
__builtin_sve_svrbit_u8_x
__builtin_sve_svrbit_u8_z
__builtin_sve_svrdffr
__builtin_sve_svrdffr_z
q16bq16b
__builtin_sve_svrecpe_f16
q8hq8h
__builtin_sve_svrecpe_f32
q4fq4f
__builtin_sve_svrecpe_f64
q2dq2d
__builtin_sve_svrecpe_u32_m
__builtin_sve_svrecpe_u32_x
__builtin_sve_svrecpe_u32_z
__builtin_sve_svrecps_f16
q8hq8hq8h
__builtin_sve_svrecps_f32
q4fq4fq4f
__builtin_sve_svrecps_f64
q2dq2dq2d
__builtin_sve_svrecpx_f16_m
__builtin_sve_svrecpx_f16_x
__builtin_sve_svrecpx_f16_z
__builtin_sve_svrecpx_f32_m
__builtin_sve_svrecpx_f32_x
__builtin_sve_svrecpx_f32_z
__builtin_sve_svrecpx_f64_m
__builtin_sve_svrecpx_f64_x
__builtin_sve_svrecpx_f64_z
__builtin_sve_svrev_b16
__builtin_sve_svrev_b32
__builtin_sve_svrev_b64
__builtin_sve_svrev_b8
__builtin_sve_svrev_bf16
q8yq8y
__builtin_sve_svrev_f16
__builtin_sve_svrev_f32
__builtin_sve_svrev_f64
__builtin_sve_svrev_s16
q8sq8s
__builtin_sve_svrev_s32
q4iq4i
__builtin_sve_svrev_s64
q2Wiq2Wi
__builtin_sve_svrev_s8
q16Scq16Sc
__builtin_sve_svrev_u16
q8Usq8Us
__builtin_sve_svrev_u32
q4Uiq4Ui
__builtin_sve_svrev_u64
q2UWiq2UWi
__builtin_sve_svrev_u8
__builtin_sve_svrevb_s16_m
__builtin_sve_svrevb_s16_x
__builtin_sve_svrevb_s16_z
__builtin_sve_svrevb_s32_m
__builtin_sve_svrevb_s32_x
__builtin_sve_svrevb_s32_z
__builtin_sve_svrevb_s64_m
__builtin_sve_svrevb_s64_x
__builtin_sve_svrevb_s64_z
__builtin_sve_svrevb_u16_m
__builtin_sve_svrevb_u16_x
__builtin_sve_svrevb_u16_z
__builtin_sve_svrevb_u32_m
__builtin_sve_svrevb_u32_x
__builtin_sve_svrevb_u32_z
__builtin_sve_svrevb_u64_m
__builtin_sve_svrevb_u64_x
__builtin_sve_svrevb_u64_z
__builtin_sve_svrevh_s32_m
__builtin_sve_svrevh_s32_x
__builtin_sve_svrevh_s32_z
__builtin_sve_svrevh_s64_m
__builtin_sve_svrevh_s64_x
__builtin_sve_svrevh_s64_z
__builtin_sve_svrevh_u32_m
__builtin_sve_svrevh_u32_x
__builtin_sve_svrevh_u32_z
__builtin_sve_svrevh_u64_m
__builtin_sve_svrevh_u64_x
__builtin_sve_svrevh_u64_z
__builtin_sve_svrevw_s64_m
__builtin_sve_svrevw_s64_x
__builtin_sve_svrevw_s64_z
__builtin_sve_svrevw_u64_m
__builtin_sve_svrevw_u64_x
__builtin_sve_svrevw_u64_z
__builtin_sve_svrhadd_n_s16_m
__builtin_sve_svrhadd_n_s16_x
__builtin_sve_svrhadd_n_s16_z
__builtin_sve_svrhadd_n_s32_m
__builtin_sve_svrhadd_n_s32_x
__builtin_sve_svrhadd_n_s32_z
__builtin_sve_svrhadd_n_s64_m
__builtin_sve_svrhadd_n_s64_x
__builtin_sve_svrhadd_n_s64_z
__builtin_sve_svrhadd_n_s8_m
__builtin_sve_svrhadd_n_s8_x
__builtin_sve_svrhadd_n_s8_z
__builtin_sve_svrhadd_n_u16_m
__builtin_sve_svrhadd_n_u16_x
__builtin_sve_svrhadd_n_u16_z
__builtin_sve_svrhadd_n_u32_m
__builtin_sve_svrhadd_n_u32_x
__builtin_sve_svrhadd_n_u32_z
__builtin_sve_svrhadd_n_u64_m
__builtin_sve_svrhadd_n_u64_x
__builtin_sve_svrhadd_n_u64_z
__builtin_sve_svrhadd_n_u8_m
__builtin_sve_svrhadd_n_u8_x
__builtin_sve_svrhadd_n_u8_z
__builtin_sve_svrhadd_s16_m
__builtin_sve_svrhadd_s16_x
__builtin_sve_svrhadd_s16_z
__builtin_sve_svrhadd_s32_m
__builtin_sve_svrhadd_s32_x
__builtin_sve_svrhadd_s32_z
__builtin_sve_svrhadd_s64_m
__builtin_sve_svrhadd_s64_x
__builtin_sve_svrhadd_s64_z
__builtin_sve_svrhadd_s8_m
__builtin_sve_svrhadd_s8_x
__builtin_sve_svrhadd_s8_z
__builtin_sve_svrhadd_u16_m
__builtin_sve_svrhadd_u16_x
__builtin_sve_svrhadd_u16_z
__builtin_sve_svrhadd_u32_m
__builtin_sve_svrhadd_u32_x
__builtin_sve_svrhadd_u32_z
__builtin_sve_svrhadd_u64_m
__builtin_sve_svrhadd_u64_x
__builtin_sve_svrhadd_u64_z
__builtin_sve_svrhadd_u8_m
__builtin_sve_svrhadd_u8_x
__builtin_sve_svrhadd_u8_z
__builtin_sve_svrinta_f16_m
__builtin_sve_svrinta_f16_x
__builtin_sve_svrinta_f16_z
__builtin_sve_svrinta_f32_m
__builtin_sve_svrinta_f32_x
__builtin_sve_svrinta_f32_z
__builtin_sve_svrinta_f64_m
__builtin_sve_svrinta_f64_x
__builtin_sve_svrinta_f64_z
__builtin_sve_svrinti_f16_m
__builtin_sve_svrinti_f16_x
__builtin_sve_svrinti_f16_z
__builtin_sve_svrinti_f32_m
__builtin_sve_svrinti_f32_x
__builtin_sve_svrinti_f32_z
__builtin_sve_svrinti_f64_m
__builtin_sve_svrinti_f64_x
__builtin_sve_svrinti_f64_z
__builtin_sve_svrintm_f16_m
__builtin_sve_svrintm_f16_x
__builtin_sve_svrintm_f16_z
__builtin_sve_svrintm_f32_m
__builtin_sve_svrintm_f32_x
__builtin_sve_svrintm_f32_z
__builtin_sve_svrintm_f64_m
__builtin_sve_svrintm_f64_x
__builtin_sve_svrintm_f64_z
__builtin_sve_svrintn_f16_m
__builtin_sve_svrintn_f16_x
__builtin_sve_svrintn_f16_z
__builtin_sve_svrintn_f32_m
__builtin_sve_svrintn_f32_x
__builtin_sve_svrintn_f32_z
__builtin_sve_svrintn_f64_m
__builtin_sve_svrintn_f64_x
__builtin_sve_svrintn_f64_z
__builtin_sve_svrintp_f16_m
__builtin_sve_svrintp_f16_x
__builtin_sve_svrintp_f16_z
__builtin_sve_svrintp_f32_m
__builtin_sve_svrintp_f32_x
__builtin_sve_svrintp_f32_z
__builtin_sve_svrintp_f64_m
__builtin_sve_svrintp_f64_x
__builtin_sve_svrintp_f64_z
__builtin_sve_svrintx_f16_m
__builtin_sve_svrintx_f16_x
__builtin_sve_svrintx_f16_z
__builtin_sve_svrintx_f32_m
__builtin_sve_svrintx_f32_x
__builtin_sve_svrintx_f32_z
__builtin_sve_svrintx_f64_m
__builtin_sve_svrintx_f64_x
__builtin_sve_svrintx_f64_z
__builtin_sve_svrintz_f16_m
__builtin_sve_svrintz_f16_x
__builtin_sve_svrintz_f16_z
__builtin_sve_svrintz_f32_m
__builtin_sve_svrintz_f32_x
__builtin_sve_svrintz_f32_z
__builtin_sve_svrintz_f64_m
__builtin_sve_svrintz_f64_x
__builtin_sve_svrintz_f64_z
__builtin_sve_svrshl_n_s16_m
__builtin_sve_svrshl_n_s16_x
__builtin_sve_svrshl_n_s16_z
__builtin_sve_svrshl_n_s32_m
__builtin_sve_svrshl_n_s32_x
__builtin_sve_svrshl_n_s32_z
__builtin_sve_svrshl_n_s64_m
__builtin_sve_svrshl_n_s64_x
__builtin_sve_svrshl_n_s64_z
__builtin_sve_svrshl_n_s8_m
__builtin_sve_svrshl_n_s8_x
__builtin_sve_svrshl_n_s8_z
__builtin_sve_svrshl_n_u16_m
__builtin_sve_svrshl_n_u16_x
__builtin_sve_svrshl_n_u16_z
__builtin_sve_svrshl_n_u32_m
__builtin_sve_svrshl_n_u32_x
__builtin_sve_svrshl_n_u32_z
__builtin_sve_svrshl_n_u64_m
__builtin_sve_svrshl_n_u64_x
__builtin_sve_svrshl_n_u64_z
__builtin_sve_svrshl_n_u8_m
__builtin_sve_svrshl_n_u8_x
__builtin_sve_svrshl_n_u8_z
__builtin_sve_svrshl_s16_m
__builtin_sve_svrshl_s16_x
__builtin_sve_svrshl_s16_z
__builtin_sve_svrshl_s32_m
__builtin_sve_svrshl_s32_x
__builtin_sve_svrshl_s32_z
__builtin_sve_svrshl_s64_m
__builtin_sve_svrshl_s64_x
__builtin_sve_svrshl_s64_z
__builtin_sve_svrshl_s8_m
__builtin_sve_svrshl_s8_x
__builtin_sve_svrshl_s8_z
__builtin_sve_svrshl_u16_m
__builtin_sve_svrshl_u16_x
__builtin_sve_svrshl_u16_z
__builtin_sve_svrshl_u32_m
__builtin_sve_svrshl_u32_x
__builtin_sve_svrshl_u32_z
__builtin_sve_svrshl_u64_m
__builtin_sve_svrshl_u64_x
__builtin_sve_svrshl_u64_z
__builtin_sve_svrshl_u8_m
__builtin_sve_svrshl_u8_x
__builtin_sve_svrshl_u8_z
__builtin_sve_svrshr_n_s16_m
__builtin_sve_svrshr_n_s16_x
__builtin_sve_svrshr_n_s16_z
__builtin_sve_svrshr_n_s32_m
__builtin_sve_svrshr_n_s32_x
__builtin_sve_svrshr_n_s32_z
__builtin_sve_svrshr_n_s64_m
__builtin_sve_svrshr_n_s64_x
__builtin_sve_svrshr_n_s64_z
__builtin_sve_svrshr_n_s8_m
__builtin_sve_svrshr_n_s8_x
__builtin_sve_svrshr_n_s8_z
__builtin_sve_svrshr_n_u16_m
q8Usq16bq8UsIUWi
__builtin_sve_svrshr_n_u16_x
__builtin_sve_svrshr_n_u16_z
__builtin_sve_svrshr_n_u32_m
q4Uiq16bq4UiIUWi
__builtin_sve_svrshr_n_u32_x
__builtin_sve_svrshr_n_u32_z
__builtin_sve_svrshr_n_u64_m
q2UWiq16bq2UWiIUWi
__builtin_sve_svrshr_n_u64_x
__builtin_sve_svrshr_n_u64_z
__builtin_sve_svrshr_n_u8_m
q16Ucq16bq16UcIUWi
__builtin_sve_svrshr_n_u8_x
__builtin_sve_svrshr_n_u8_z
__builtin_sve_svrshrnb_n_s16
__builtin_sve_svrshrnb_n_s32
__builtin_sve_svrshrnb_n_s64
__builtin_sve_svrshrnb_n_u16
__builtin_sve_svrshrnb_n_u32
__builtin_sve_svrshrnb_n_u64
__builtin_sve_svrshrnt_n_s16
__builtin_sve_svrshrnt_n_s32
__builtin_sve_svrshrnt_n_s64
__builtin_sve_svrshrnt_n_u16
__builtin_sve_svrshrnt_n_u32
__builtin_sve_svrshrnt_n_u64
__builtin_sve_svrsqrte_f16
__builtin_sve_svrsqrte_f32
__builtin_sve_svrsqrte_f64
__builtin_sve_svrsqrte_u32_m
__builtin_sve_svrsqrte_u32_x
__builtin_sve_svrsqrte_u32_z
__builtin_sve_svrsqrts_f16
__builtin_sve_svrsqrts_f32
__builtin_sve_svrsqrts_f64
__builtin_sve_svrsra_n_s16
__builtin_sve_svrsra_n_s32
__builtin_sve_svrsra_n_s64
__builtin_sve_svrsra_n_s8
__builtin_sve_svrsra_n_u16
__builtin_sve_svrsra_n_u32
__builtin_sve_svrsra_n_u64
__builtin_sve_svrsra_n_u8
__builtin_sve_svrsubhnb_n_s16
__builtin_sve_svrsubhnb_n_s32
__builtin_sve_svrsubhnb_n_s64
__builtin_sve_svrsubhnb_n_u16
__builtin_sve_svrsubhnb_n_u32
__builtin_sve_svrsubhnb_n_u64
__builtin_sve_svrsubhnb_s16
__builtin_sve_svrsubhnb_s32
__builtin_sve_svrsubhnb_s64
__builtin_sve_svrsubhnb_u16
__builtin_sve_svrsubhnb_u32
__builtin_sve_svrsubhnb_u64
__builtin_sve_svrsubhnt_n_s16
__builtin_sve_svrsubhnt_n_s32
__builtin_sve_svrsubhnt_n_s64
__builtin_sve_svrsubhnt_n_u16
__builtin_sve_svrsubhnt_n_u32
__builtin_sve_svrsubhnt_n_u64
__builtin_sve_svrsubhnt_s16
__builtin_sve_svrsubhnt_s32
__builtin_sve_svrsubhnt_s64
__builtin_sve_svrsubhnt_u16
__builtin_sve_svrsubhnt_u32
__builtin_sve_svrsubhnt_u64
__builtin_sve_svsbclb_n_u32
__builtin_sve_svsbclb_n_u64
__builtin_sve_svsbclb_u32
__builtin_sve_svsbclb_u64
__builtin_sve_svsbclt_n_u32
__builtin_sve_svsbclt_n_u64
__builtin_sve_svsbclt_u32
__builtin_sve_svsbclt_u64
__builtin_sve_svscale_f16_m
q8hq16bq8hq8s
__builtin_sve_svscale_f16_x
__builtin_sve_svscale_f16_z
__builtin_sve_svscale_f32_m
q4fq16bq4fq4i
__builtin_sve_svscale_f32_x
__builtin_sve_svscale_f32_z
__builtin_sve_svscale_f64_m
q2dq16bq2dq2Wi
__builtin_sve_svscale_f64_x
__builtin_sve_svscale_f64_z
__builtin_sve_svscale_n_f16_m
q8hq16bq8hs
__builtin_sve_svscale_n_f16_x
__builtin_sve_svscale_n_f16_z
__builtin_sve_svscale_n_f32_m
q4fq16bq4fi
__builtin_sve_svscale_n_f32_x
__builtin_sve_svscale_n_f32_z
__builtin_sve_svscale_n_f64_m
q2dq16bq2dWi
__builtin_sve_svscale_n_f64_x
__builtin_sve_svscale_n_f64_z
__builtin_sve_svsel_b
__builtin_sve_svsel_bf16
__builtin_sve_svsel_f16
__builtin_sve_svsel_f32
__builtin_sve_svsel_f64
__builtin_sve_svsel_s16
__builtin_sve_svsel_s32
__builtin_sve_svsel_s64
__builtin_sve_svsel_s8
__builtin_sve_svsel_u16
__builtin_sve_svsel_u32
__builtin_sve_svsel_u64
__builtin_sve_svsel_u8
__builtin_sve_svset2_bf16
q16yq16yIUWiq8y
__builtin_sve_svset2_f16
q16hq16hIUWiq8h
__builtin_sve_svset2_f32
q8fq8fIUWiq4f
__builtin_sve_svset2_f64
q4dq4dIUWiq2d
__builtin_sve_svset2_s16
q16sq16sIUWiq8s
__builtin_sve_svset2_s32
q8iq8iIUWiq4i
__builtin_sve_svset2_s64
q4Wiq4WiIUWiq2Wi
__builtin_sve_svset2_s8
q32Scq32ScIUWiq16Sc
__builtin_sve_svset2_u16
q16Usq16UsIUWiq8Us
__builtin_sve_svset2_u32
q8Uiq8UiIUWiq4Ui
__builtin_sve_svset2_u64
q4UWiq4UWiIUWiq2UWi
__builtin_sve_svset2_u8
q32Ucq32UcIUWiq16Uc
__builtin_sve_svset3_bf16
q24yq24yIUWiq8y
__builtin_sve_svset3_f16
q24hq24hIUWiq8h
__builtin_sve_svset3_f32
q12fq12fIUWiq4f
__builtin_sve_svset3_f64
q6dq6dIUWiq2d
__builtin_sve_svset3_s16
q24sq24sIUWiq8s
__builtin_sve_svset3_s32
q12iq12iIUWiq4i
__builtin_sve_svset3_s64
q6Wiq6WiIUWiq2Wi
__builtin_sve_svset3_s8
q48Scq48ScIUWiq16Sc
__builtin_sve_svset3_u16
q24Usq24UsIUWiq8Us
__builtin_sve_svset3_u32
q12Uiq12UiIUWiq4Ui
__builtin_sve_svset3_u64
q6UWiq6UWiIUWiq2UWi
__builtin_sve_svset3_u8
q48Ucq48UcIUWiq16Uc
__builtin_sve_svset4_bf16
q32yq32yIUWiq8y
__builtin_sve_svset4_f16
q32hq32hIUWiq8h
__builtin_sve_svset4_f32
q16fq16fIUWiq4f
__builtin_sve_svset4_f64
q8dq8dIUWiq2d
__builtin_sve_svset4_s16
q32sq32sIUWiq8s
__builtin_sve_svset4_s32
q16iq16iIUWiq4i
__builtin_sve_svset4_s64
q8Wiq8WiIUWiq2Wi
__builtin_sve_svset4_s8
q64Scq64ScIUWiq16Sc
__builtin_sve_svset4_u16
q32Usq32UsIUWiq8Us
__builtin_sve_svset4_u32
q16Uiq16UiIUWiq4Ui
__builtin_sve_svset4_u64
q8UWiq8UWiIUWiq2UWi
__builtin_sve_svset4_u8
q64Ucq64UcIUWiq16Uc
__builtin_sve_svsetffr
__builtin_sve_svshllb_n_s16
q8sq16ScIUWi
__builtin_sve_svshllb_n_s32
q4iq8sIUWi
__builtin_sve_svshllb_n_s64
q2Wiq4iIUWi
__builtin_sve_svshllb_n_u16
q8Usq16UcIUWi
__builtin_sve_svshllb_n_u32
q4Uiq8UsIUWi
__builtin_sve_svshllb_n_u64
q2UWiq4UiIUWi
__builtin_sve_svshllt_n_s16
__builtin_sve_svshllt_n_s32
__builtin_sve_svshllt_n_s64
__builtin_sve_svshllt_n_u16
__builtin_sve_svshllt_n_u32
__builtin_sve_svshllt_n_u64
__builtin_sve_svshrnb_n_s16
__builtin_sve_svshrnb_n_s32
__builtin_sve_svshrnb_n_s64
__builtin_sve_svshrnb_n_u16
__builtin_sve_svshrnb_n_u32
__builtin_sve_svshrnb_n_u64
__builtin_sve_svshrnt_n_s16
__builtin_sve_svshrnt_n_s32
__builtin_sve_svshrnt_n_s64
__builtin_sve_svshrnt_n_u16
__builtin_sve_svshrnt_n_u32
__builtin_sve_svshrnt_n_u64
__builtin_sve_svsli_n_s16
__builtin_sve_svsli_n_s32
__builtin_sve_svsli_n_s64
__builtin_sve_svsli_n_s8
__builtin_sve_svsli_n_u16
__builtin_sve_svsli_n_u32
__builtin_sve_svsli_n_u64
__builtin_sve_svsli_n_u8
__builtin_sve_svsm4e_u32
__builtin_sve_svsm4ekey_u32
__builtin_sve_svsplice_bf16
__builtin_sve_svsplice_f16
__builtin_sve_svsplice_f32
__builtin_sve_svsplice_f64
__builtin_sve_svsplice_s16
__builtin_sve_svsplice_s32
__builtin_sve_svsplice_s64
__builtin_sve_svsplice_s8
__builtin_sve_svsplice_u16
__builtin_sve_svsplice_u32
__builtin_sve_svsplice_u64
__builtin_sve_svsplice_u8
__builtin_sve_svsqadd_n_u16_m
__builtin_sve_svsqadd_n_u16_x
__builtin_sve_svsqadd_n_u16_z
__builtin_sve_svsqadd_n_u32_m
__builtin_sve_svsqadd_n_u32_x
__builtin_sve_svsqadd_n_u32_z
__builtin_sve_svsqadd_n_u64_m
__builtin_sve_svsqadd_n_u64_x
__builtin_sve_svsqadd_n_u64_z
__builtin_sve_svsqadd_n_u8_m
__builtin_sve_svsqadd_n_u8_x
__builtin_sve_svsqadd_n_u8_z
__builtin_sve_svsqadd_u16_m
__builtin_sve_svsqadd_u16_x
__builtin_sve_svsqadd_u16_z
__builtin_sve_svsqadd_u32_m
__builtin_sve_svsqadd_u32_x
__builtin_sve_svsqadd_u32_z
__builtin_sve_svsqadd_u64_m
__builtin_sve_svsqadd_u64_x
__builtin_sve_svsqadd_u64_z
__builtin_sve_svsqadd_u8_m
__builtin_sve_svsqadd_u8_x
__builtin_sve_svsqadd_u8_z
__builtin_sve_svsqrt_f16_m
__builtin_sve_svsqrt_f16_x
__builtin_sve_svsqrt_f16_z
__builtin_sve_svsqrt_f32_m
__builtin_sve_svsqrt_f32_x
__builtin_sve_svsqrt_f32_z
__builtin_sve_svsqrt_f64_m
__builtin_sve_svsqrt_f64_x
__builtin_sve_svsqrt_f64_z
__builtin_sve_svsra_n_s16
__builtin_sve_svsra_n_s32
__builtin_sve_svsra_n_s64
__builtin_sve_svsra_n_s8
__builtin_sve_svsra_n_u16
__builtin_sve_svsra_n_u32
__builtin_sve_svsra_n_u64
__builtin_sve_svsra_n_u8
__builtin_sve_svsri_n_s16
__builtin_sve_svsri_n_s32
__builtin_sve_svsri_n_s64
__builtin_sve_svsri_n_s8
__builtin_sve_svsri_n_u16
__builtin_sve_svsri_n_u32
__builtin_sve_svsri_n_u64
__builtin_sve_svsri_n_u8
__builtin_sve_svst1_bf16
vq16by*q8y
__builtin_sve_svst1_f16
vq16bh*q8h
__builtin_sve_svst1_f32
vq16bf*q4f
__builtin_sve_svst1_f64
vq16bd*q2d
__builtin_sve_svst1_s16
vq16bSs*q8s
__builtin_sve_svst1_s32
vq16bSi*q4i
__builtin_sve_svst1_s64
vq16bSWi*q2Wi
__builtin_sve_svst1_s8
vq16bSc*q16Sc
__builtin_sve_svst1_scatter_s32index_f32
vq16bf*q4iq4f
__builtin_sve_svst1_scatter_s32index_s32
vq16bSi*q4iq4i
__builtin_sve_svst1_scatter_s32index_u32
vq16bUi*q4iq4Ui
__builtin_sve_svst1_scatter_s32offset_f32
__builtin_sve_svst1_scatter_s32offset_s32
__builtin_sve_svst1_scatter_s32offset_u32
__builtin_sve_svst1_scatter_s64index_f64
vq16bd*q2Wiq2d
__builtin_sve_svst1_scatter_s64index_s64
vq16bSWi*q2Wiq2Wi
__builtin_sve_svst1_scatter_s64index_u64
vq16bUWi*q2Wiq2UWi
__builtin_sve_svst1_scatter_s64offset_f64
__builtin_sve_svst1_scatter_s64offset_s64
__builtin_sve_svst1_scatter_s64offset_u64
__builtin_sve_svst1_scatter_u32base_f32
vq16bq4Uiq4f
__builtin_sve_svst1_scatter_u32base_index_f32
vq16bq4UiWiq4f
__builtin_sve_svst1_scatter_u32base_index_s32
vq16bq4UiWiq4i
__builtin_sve_svst1_scatter_u32base_index_u32
vq16bq4UiWiq4Ui
__builtin_sve_svst1_scatter_u32base_offset_f32
__builtin_sve_svst1_scatter_u32base_offset_s32
__builtin_sve_svst1_scatter_u32base_offset_u32
__builtin_sve_svst1_scatter_u32base_s32
vq16bq4Uiq4i
__builtin_sve_svst1_scatter_u32base_u32
vq16bq4Uiq4Ui
__builtin_sve_svst1_scatter_u32index_f32
vq16bf*q4Uiq4f
__builtin_sve_svst1_scatter_u32index_s32
vq16bSi*q4Uiq4i
__builtin_sve_svst1_scatter_u32index_u32
vq16bUi*q4Uiq4Ui
__builtin_sve_svst1_scatter_u32offset_f32
__builtin_sve_svst1_scatter_u32offset_s32
__builtin_sve_svst1_scatter_u32offset_u32
__builtin_sve_svst1_scatter_u64base_f64
vq16bq2UWiq2d
__builtin_sve_svst1_scatter_u64base_index_f64
vq16bq2UWiWiq2d
__builtin_sve_svst1_scatter_u64base_index_s64
vq16bq2UWiWiq2Wi
__builtin_sve_svst1_scatter_u64base_index_u64
vq16bq2UWiWiq2UWi
__builtin_sve_svst1_scatter_u64base_offset_f64
__builtin_sve_svst1_scatter_u64base_offset_s64
__builtin_sve_svst1_scatter_u64base_offset_u64
__builtin_sve_svst1_scatter_u64base_s64
vq16bq2UWiq2Wi
__builtin_sve_svst1_scatter_u64base_u64
vq16bq2UWiq2UWi
__builtin_sve_svst1_scatter_u64index_f64
vq16bd*q2UWiq2d
__builtin_sve_svst1_scatter_u64index_s64
vq16bSWi*q2UWiq2Wi
__builtin_sve_svst1_scatter_u64index_u64
vq16bUWi*q2UWiq2UWi
__builtin_sve_svst1_scatter_u64offset_f64
__builtin_sve_svst1_scatter_u64offset_s64
__builtin_sve_svst1_scatter_u64offset_u64
__builtin_sve_svst1_u16
vq16bUs*q8Us
__builtin_sve_svst1_u32
vq16bUi*q4Ui
__builtin_sve_svst1_u64
vq16bUWi*q2UWi
__builtin_sve_svst1_u8
vq16bUc*q16Uc
__builtin_sve_svst1_vnum_bf16
vq16by*Wiq8y
__builtin_sve_svst1_vnum_f16
vq16bh*Wiq8h
__builtin_sve_svst1_vnum_f32
vq16bf*Wiq4f
__builtin_sve_svst1_vnum_f64
vq16bd*Wiq2d
__builtin_sve_svst1_vnum_s16
vq16bSs*Wiq8s
__builtin_sve_svst1_vnum_s32
vq16bSi*Wiq4i
__builtin_sve_svst1_vnum_s64
vq16bSWi*Wiq2Wi
__builtin_sve_svst1_vnum_s8
vq16bSc*Wiq16Sc
__builtin_sve_svst1_vnum_u16
vq16bUs*Wiq8Us
__builtin_sve_svst1_vnum_u32
vq16bUi*Wiq4Ui
__builtin_sve_svst1_vnum_u64
vq16bUWi*Wiq2UWi
__builtin_sve_svst1_vnum_u8
vq16bUc*Wiq16Uc
__builtin_sve_svst1b_s16
vq16bSc*q8s
__builtin_sve_svst1b_s32
vq16bSc*q4i
__builtin_sve_svst1b_s64
vq16bSc*q2Wi
__builtin_sve_svst1b_scatter_s32offset_s32
vq16bSc*q4iq4i
__builtin_sve_svst1b_scatter_s32offset_u32
vq16bUc*q4iq4Ui
__builtin_sve_svst1b_scatter_s64offset_s64
vq16bSc*q2Wiq2Wi
__builtin_sve_svst1b_scatter_s64offset_u64
vq16bUc*q2Wiq2UWi
__builtin_sve_svst1b_scatter_u32base_offset_s32
__builtin_sve_svst1b_scatter_u32base_offset_u32
__builtin_sve_svst1b_scatter_u32base_s32
__builtin_sve_svst1b_scatter_u32base_u32
__builtin_sve_svst1b_scatter_u32offset_s32
vq16bSc*q4Uiq4i
__builtin_sve_svst1b_scatter_u32offset_u32
vq16bUc*q4Uiq4Ui
__builtin_sve_svst1b_scatter_u64base_offset_s64
__builtin_sve_svst1b_scatter_u64base_offset_u64
__builtin_sve_svst1b_scatter_u64base_s64
__builtin_sve_svst1b_scatter_u64base_u64
__builtin_sve_svst1b_scatter_u64offset_s64
vq16bSc*q2UWiq2Wi
__builtin_sve_svst1b_scatter_u64offset_u64
vq16bUc*q2UWiq2UWi
__builtin_sve_svst1b_u16
vq16bUc*q8Us
__builtin_sve_svst1b_u32
vq16bUc*q4Ui
__builtin_sve_svst1b_u64
vq16bUc*q2UWi
__builtin_sve_svst1b_vnum_s16
vq16bSc*Wiq8s
__builtin_sve_svst1b_vnum_s32
vq16bSc*Wiq4i
__builtin_sve_svst1b_vnum_s64
vq16bSc*Wiq2Wi
__builtin_sve_svst1b_vnum_u16
vq16bUc*Wiq8Us
__builtin_sve_svst1b_vnum_u32
vq16bUc*Wiq4Ui
__builtin_sve_svst1b_vnum_u64
vq16bUc*Wiq2UWi
__builtin_sve_svst1h_s32
vq16bSs*q4i
__builtin_sve_svst1h_s64
vq16bSs*q2Wi
__builtin_sve_svst1h_scatter_s32index_s32
vq16bSs*q4iq4i
__builtin_sve_svst1h_scatter_s32index_u32
vq16bUs*q4iq4Ui
__builtin_sve_svst1h_scatter_s32offset_s32
__builtin_sve_svst1h_scatter_s32offset_u32
__builtin_sve_svst1h_scatter_s64index_s64
vq16bSs*q2Wiq2Wi
__builtin_sve_svst1h_scatter_s64index_u64
vq16bUs*q2Wiq2UWi
__builtin_sve_svst1h_scatter_s64offset_s64
__builtin_sve_svst1h_scatter_s64offset_u64
__builtin_sve_svst1h_scatter_u32base_index_s32
__builtin_sve_svst1h_scatter_u32base_index_u32
__builtin_sve_svst1h_scatter_u32base_offset_s32
__builtin_sve_svst1h_scatter_u32base_offset_u32
__builtin_sve_svst1h_scatter_u32base_s32
__builtin_sve_svst1h_scatter_u32base_u32
__builtin_sve_svst1h_scatter_u32index_s32
vq16bSs*q4Uiq4i
__builtin_sve_svst1h_scatter_u32index_u32
vq16bUs*q4Uiq4Ui
__builtin_sve_svst1h_scatter_u32offset_s32
__builtin_sve_svst1h_scatter_u32offset_u32
__builtin_sve_svst1h_scatter_u64base_index_s64
__builtin_sve_svst1h_scatter_u64base_index_u64
__builtin_sve_svst1h_scatter_u64base_offset_s64
__builtin_sve_svst1h_scatter_u64base_offset_u64
__builtin_sve_svst1h_scatter_u64base_s64
__builtin_sve_svst1h_scatter_u64base_u64
__builtin_sve_svst1h_scatter_u64index_s64
vq16bSs*q2UWiq2Wi
__builtin_sve_svst1h_scatter_u64index_u64
vq16bUs*q2UWiq2UWi
__builtin_sve_svst1h_scatter_u64offset_s64
__builtin_sve_svst1h_scatter_u64offset_u64
__builtin_sve_svst1h_u32
vq16bUs*q4Ui
__builtin_sve_svst1h_u64
vq16bUs*q2UWi
__builtin_sve_svst1h_vnum_s32
vq16bSs*Wiq4i
__builtin_sve_svst1h_vnum_s64
vq16bSs*Wiq2Wi
__builtin_sve_svst1h_vnum_u32
vq16bUs*Wiq4Ui
__builtin_sve_svst1h_vnum_u64
vq16bUs*Wiq2UWi
__builtin_sve_svst1w_s64
vq16bSi*q2Wi
__builtin_sve_svst1w_scatter_s64index_s64
vq16bSi*q2Wiq2Wi
__builtin_sve_svst1w_scatter_s64index_u64
vq16bUi*q2Wiq2UWi
__builtin_sve_svst1w_scatter_s64offset_s64
__builtin_sve_svst1w_scatter_s64offset_u64
__builtin_sve_svst1w_scatter_u64base_index_s64
__builtin_sve_svst1w_scatter_u64base_index_u64
__builtin_sve_svst1w_scatter_u64base_offset_s64
__builtin_sve_svst1w_scatter_u64base_offset_u64
__builtin_sve_svst1w_scatter_u64base_s64
__builtin_sve_svst1w_scatter_u64base_u64
__builtin_sve_svst1w_scatter_u64index_s64
vq16bSi*q2UWiq2Wi
__builtin_sve_svst1w_scatter_u64index_u64
vq16bUi*q2UWiq2UWi
__builtin_sve_svst1w_scatter_u64offset_s64
__builtin_sve_svst1w_scatter_u64offset_u64
__builtin_sve_svst1w_u64
vq16bUi*q2UWi
__builtin_sve_svst1w_vnum_s64
vq16bSi*Wiq2Wi
__builtin_sve_svst1w_vnum_u64
vq16bUi*Wiq2UWi
__builtin_sve_svst2_bf16
vq16by*q16y
__builtin_sve_svst2_f16
vq16bh*q16h
__builtin_sve_svst2_f32
vq16bf*q8f
__builtin_sve_svst2_f64
vq16bd*q4d
__builtin_sve_svst2_s16
vq16bSs*q16s
__builtin_sve_svst2_s32
vq16bSi*q8i
__builtin_sve_svst2_s64
vq16bSWi*q4Wi
__builtin_sve_svst2_s8
vq16bSc*q32Sc
__builtin_sve_svst2_u16
vq16bUs*q16Us
__builtin_sve_svst2_u32
vq16bUi*q8Ui
__builtin_sve_svst2_u64
vq16bUWi*q4UWi
__builtin_sve_svst2_u8
vq16bUc*q32Uc
__builtin_sve_svst2_vnum_bf16
vq16by*Wiq16y
__builtin_sve_svst2_vnum_f16
vq16bh*Wiq16h
__builtin_sve_svst2_vnum_f32
vq16bf*Wiq8f
__builtin_sve_svst2_vnum_f64
vq16bd*Wiq4d
__builtin_sve_svst2_vnum_s16
vq16bSs*Wiq16s
__builtin_sve_svst2_vnum_s32
vq16bSi*Wiq8i
__builtin_sve_svst2_vnum_s64
vq16bSWi*Wiq4Wi
__builtin_sve_svst2_vnum_s8
vq16bSc*Wiq32Sc
__builtin_sve_svst2_vnum_u16
vq16bUs*Wiq16Us
__builtin_sve_svst2_vnum_u32
vq16bUi*Wiq8Ui
__builtin_sve_svst2_vnum_u64
vq16bUWi*Wiq4UWi
__builtin_sve_svst2_vnum_u8
vq16bUc*Wiq32Uc
__builtin_sve_svst3_bf16
vq16by*q24y
__builtin_sve_svst3_f16
vq16bh*q24h
__builtin_sve_svst3_f32
vq16bf*q12f
__builtin_sve_svst3_f64
vq16bd*q6d
__builtin_sve_svst3_s16
vq16bSs*q24s
__builtin_sve_svst3_s32
vq16bSi*q12i
__builtin_sve_svst3_s64
vq16bSWi*q6Wi
__builtin_sve_svst3_s8
vq16bSc*q48Sc
__builtin_sve_svst3_u16
vq16bUs*q24Us
__builtin_sve_svst3_u32
vq16bUi*q12Ui
__builtin_sve_svst3_u64
vq16bUWi*q6UWi
__builtin_sve_svst3_u8
vq16bUc*q48Uc
__builtin_sve_svst3_vnum_bf16
vq16by*Wiq24y
__builtin_sve_svst3_vnum_f16
vq16bh*Wiq24h
__builtin_sve_svst3_vnum_f32
vq16bf*Wiq12f
__builtin_sve_svst3_vnum_f64
vq16bd*Wiq6d
__builtin_sve_svst3_vnum_s16
vq16bSs*Wiq24s
__builtin_sve_svst3_vnum_s32
vq16bSi*Wiq12i
__builtin_sve_svst3_vnum_s64
vq16bSWi*Wiq6Wi
__builtin_sve_svst3_vnum_s8
vq16bSc*Wiq48Sc
__builtin_sve_svst3_vnum_u16
vq16bUs*Wiq24Us
__builtin_sve_svst3_vnum_u32
vq16bUi*Wiq12Ui
__builtin_sve_svst3_vnum_u64
vq16bUWi*Wiq6UWi
__builtin_sve_svst3_vnum_u8
vq16bUc*Wiq48Uc
__builtin_sve_svst4_bf16
vq16by*q32y
__builtin_sve_svst4_f16
vq16bh*q32h
__builtin_sve_svst4_f32
vq16bf*q16f
__builtin_sve_svst4_f64
vq16bd*q8d
__builtin_sve_svst4_s16
vq16bSs*q32s
__builtin_sve_svst4_s32
vq16bSi*q16i
__builtin_sve_svst4_s64
vq16bSWi*q8Wi
__builtin_sve_svst4_s8
vq16bSc*q64Sc
__builtin_sve_svst4_u16
vq16bUs*q32Us
__builtin_sve_svst4_u32
vq16bUi*q16Ui
__builtin_sve_svst4_u64
vq16bUWi*q8UWi
__builtin_sve_svst4_u8
vq16bUc*q64Uc
__builtin_sve_svst4_vnum_bf16
vq16by*Wiq32y
__builtin_sve_svst4_vnum_f16
vq16bh*Wiq32h
__builtin_sve_svst4_vnum_f32
vq16bf*Wiq16f
__builtin_sve_svst4_vnum_f64
vq16bd*Wiq8d
__builtin_sve_svst4_vnum_s16
vq16bSs*Wiq32s
__builtin_sve_svst4_vnum_s32
vq16bSi*Wiq16i
__builtin_sve_svst4_vnum_s64
vq16bSWi*Wiq8Wi
__builtin_sve_svst4_vnum_s8
vq16bSc*Wiq64Sc
__builtin_sve_svst4_vnum_u16
vq16bUs*Wiq32Us
__builtin_sve_svst4_vnum_u32
vq16bUi*Wiq16Ui
__builtin_sve_svst4_vnum_u64
vq16bUWi*Wiq8UWi
__builtin_sve_svst4_vnum_u8
vq16bUc*Wiq64Uc
__builtin_sve_svstnt1_bf16
__builtin_sve_svstnt1_f16
__builtin_sve_svstnt1_f32
__builtin_sve_svstnt1_f64
__builtin_sve_svstnt1_s16
__builtin_sve_svstnt1_s32
__builtin_sve_svstnt1_s64
__builtin_sve_svstnt1_s8
__builtin_sve_svstnt1_scatter_s64index_f64
__builtin_sve_svstnt1_scatter_s64index_s64
__builtin_sve_svstnt1_scatter_s64index_u64
__builtin_sve_svstnt1_scatter_s64offset_f64
__builtin_sve_svstnt1_scatter_s64offset_s64
__builtin_sve_svstnt1_scatter_s64offset_u64
__builtin_sve_svstnt1_scatter_u32base_f32
__builtin_sve_svstnt1_scatter_u32base_index_f32
__builtin_sve_svstnt1_scatter_u32base_index_s32
__builtin_sve_svstnt1_scatter_u32base_index_u32
__builtin_sve_svstnt1_scatter_u32base_offset_f32
__builtin_sve_svstnt1_scatter_u32base_offset_s32
__builtin_sve_svstnt1_scatter_u32base_offset_u32
__builtin_sve_svstnt1_scatter_u32base_s32
__builtin_sve_svstnt1_scatter_u32base_u32
__builtin_sve_svstnt1_scatter_u32offset_f32
__builtin_sve_svstnt1_scatter_u32offset_s32
__builtin_sve_svstnt1_scatter_u32offset_u32
__builtin_sve_svstnt1_scatter_u64base_f64
__builtin_sve_svstnt1_scatter_u64base_index_f64
__builtin_sve_svstnt1_scatter_u64base_index_s64
__builtin_sve_svstnt1_scatter_u64base_index_u64
__builtin_sve_svstnt1_scatter_u64base_offset_f64
__builtin_sve_svstnt1_scatter_u64base_offset_s64
__builtin_sve_svstnt1_scatter_u64base_offset_u64
__builtin_sve_svstnt1_scatter_u64base_s64
__builtin_sve_svstnt1_scatter_u64base_u64
__builtin_sve_svstnt1_scatter_u64index_f64
__builtin_sve_svstnt1_scatter_u64index_s64
__builtin_sve_svstnt1_scatter_u64index_u64
__builtin_sve_svstnt1_scatter_u64offset_f64
__builtin_sve_svstnt1_scatter_u64offset_s64
__builtin_sve_svstnt1_scatter_u64offset_u64
__builtin_sve_svstnt1_u16
__builtin_sve_svstnt1_u32
__builtin_sve_svstnt1_u64
__builtin_sve_svstnt1_u8
__builtin_sve_svstnt1_vnum_bf16
__builtin_sve_svstnt1_vnum_f16
__builtin_sve_svstnt1_vnum_f32
__builtin_sve_svstnt1_vnum_f64
__builtin_sve_svstnt1_vnum_s16
__builtin_sve_svstnt1_vnum_s32
__builtin_sve_svstnt1_vnum_s64
__builtin_sve_svstnt1_vnum_s8
__builtin_sve_svstnt1_vnum_u16
__builtin_sve_svstnt1_vnum_u32
__builtin_sve_svstnt1_vnum_u64
__builtin_sve_svstnt1_vnum_u8
__builtin_sve_svstnt1b_scatter_s64offset_s64
__builtin_sve_svstnt1b_scatter_s64offset_u64
__builtin_sve_svstnt1b_scatter_u32base_offset_s32
__builtin_sve_svstnt1b_scatter_u32base_offset_u32
__builtin_sve_svstnt1b_scatter_u32base_s32
__builtin_sve_svstnt1b_scatter_u32base_u32
__builtin_sve_svstnt1b_scatter_u32offset_s32
__builtin_sve_svstnt1b_scatter_u32offset_u32
__builtin_sve_svstnt1b_scatter_u64base_offset_s64
__builtin_sve_svstnt1b_scatter_u64base_offset_u64
__builtin_sve_svstnt1b_scatter_u64base_s64
__builtin_sve_svstnt1b_scatter_u64base_u64
__builtin_sve_svstnt1b_scatter_u64offset_s64
__builtin_sve_svstnt1b_scatter_u64offset_u64
__builtin_sve_svstnt1h_scatter_s64index_s64
__builtin_sve_svstnt1h_scatter_s64index_u64
__builtin_sve_svstnt1h_scatter_s64offset_s64
__builtin_sve_svstnt1h_scatter_s64offset_u64
__builtin_sve_svstnt1h_scatter_u32base_index_s32
__builtin_sve_svstnt1h_scatter_u32base_index_u32
__builtin_sve_svstnt1h_scatter_u32base_offset_s32
__builtin_sve_svstnt1h_scatter_u32base_offset_u32
__builtin_sve_svstnt1h_scatter_u32base_s32
__builtin_sve_svstnt1h_scatter_u32base_u32
__builtin_sve_svstnt1h_scatter_u32offset_s32
__builtin_sve_svstnt1h_scatter_u32offset_u32
__builtin_sve_svstnt1h_scatter_u64base_index_s64
__builtin_sve_svstnt1h_scatter_u64base_index_u64
__builtin_sve_svstnt1h_scatter_u64base_offset_s64
__builtin_sve_svstnt1h_scatter_u64base_offset_u64
__builtin_sve_svstnt1h_scatter_u64base_s64
__builtin_sve_svstnt1h_scatter_u64base_u64
__builtin_sve_svstnt1h_scatter_u64index_s64
__builtin_sve_svstnt1h_scatter_u64index_u64
__builtin_sve_svstnt1h_scatter_u64offset_s64
__builtin_sve_svstnt1h_scatter_u64offset_u64
__builtin_sve_svstnt1w_scatter_s64index_s64
__builtin_sve_svstnt1w_scatter_s64index_u64
__builtin_sve_svstnt1w_scatter_s64offset_s64
__builtin_sve_svstnt1w_scatter_s64offset_u64
__builtin_sve_svstnt1w_scatter_u64base_index_s64
__builtin_sve_svstnt1w_scatter_u64base_index_u64
__builtin_sve_svstnt1w_scatter_u64base_offset_s64
__builtin_sve_svstnt1w_scatter_u64base_offset_u64
__builtin_sve_svstnt1w_scatter_u64base_s64
__builtin_sve_svstnt1w_scatter_u64base_u64
__builtin_sve_svstnt1w_scatter_u64index_s64
__builtin_sve_svstnt1w_scatter_u64index_u64
__builtin_sve_svstnt1w_scatter_u64offset_s64
__builtin_sve_svstnt1w_scatter_u64offset_u64
__builtin_sve_svsub_f16_m
__builtin_sve_svsub_f16_x
__builtin_sve_svsub_f16_z
__builtin_sve_svsub_f32_m
__builtin_sve_svsub_f32_x
__builtin_sve_svsub_f32_z
__builtin_sve_svsub_f64_m
__builtin_sve_svsub_f64_x
__builtin_sve_svsub_f64_z
__builtin_sve_svsub_n_f16_m
__builtin_sve_svsub_n_f16_x
__builtin_sve_svsub_n_f16_z
__builtin_sve_svsub_n_f32_m
__builtin_sve_svsub_n_f32_x
__builtin_sve_svsub_n_f32_z
__builtin_sve_svsub_n_f64_m
__builtin_sve_svsub_n_f64_x
__builtin_sve_svsub_n_f64_z
__builtin_sve_svsub_n_s16_m
__builtin_sve_svsub_n_s16_x
__builtin_sve_svsub_n_s16_z
__builtin_sve_svsub_n_s32_m
__builtin_sve_svsub_n_s32_x
__builtin_sve_svsub_n_s32_z
__builtin_sve_svsub_n_s64_m
__builtin_sve_svsub_n_s64_x
__builtin_sve_svsub_n_s64_z
__builtin_sve_svsub_n_s8_m
__builtin_sve_svsub_n_s8_x
__builtin_sve_svsub_n_s8_z
__builtin_sve_svsub_n_u16_m
__builtin_sve_svsub_n_u16_x
__builtin_sve_svsub_n_u16_z
__builtin_sve_svsub_n_u32_m
__builtin_sve_svsub_n_u32_x
__builtin_sve_svsub_n_u32_z
__builtin_sve_svsub_n_u64_m
__builtin_sve_svsub_n_u64_x
__builtin_sve_svsub_n_u64_z
__builtin_sve_svsub_n_u8_m
__builtin_sve_svsub_n_u8_x
__builtin_sve_svsub_n_u8_z
__builtin_sve_svsub_s16_m
__builtin_sve_svsub_s16_x
__builtin_sve_svsub_s16_z
__builtin_sve_svsub_s32_m
__builtin_sve_svsub_s32_x
__builtin_sve_svsub_s32_z
__builtin_sve_svsub_s64_m
__builtin_sve_svsub_s64_x
__builtin_sve_svsub_s64_z
__builtin_sve_svsub_s8_m
__builtin_sve_svsub_s8_x
__builtin_sve_svsub_s8_z
__builtin_sve_svsub_u16_m
__builtin_sve_svsub_u16_x
__builtin_sve_svsub_u16_z
__builtin_sve_svsub_u32_m
__builtin_sve_svsub_u32_x
__builtin_sve_svsub_u32_z
__builtin_sve_svsub_u64_m
__builtin_sve_svsub_u64_x
__builtin_sve_svsub_u64_z
__builtin_sve_svsub_u8_m
__builtin_sve_svsub_u8_x
__builtin_sve_svsub_u8_z
__builtin_sve_svsubhnb_n_s16
__builtin_sve_svsubhnb_n_s32
__builtin_sve_svsubhnb_n_s64
__builtin_sve_svsubhnb_n_u16
__builtin_sve_svsubhnb_n_u32
__builtin_sve_svsubhnb_n_u64
__builtin_sve_svsubhnb_s16
__builtin_sve_svsubhnb_s32
__builtin_sve_svsubhnb_s64
__builtin_sve_svsubhnb_u16
__builtin_sve_svsubhnb_u32
__builtin_sve_svsubhnb_u64
__builtin_sve_svsubhnt_n_s16
__builtin_sve_svsubhnt_n_s32
__builtin_sve_svsubhnt_n_s64
__builtin_sve_svsubhnt_n_u16
__builtin_sve_svsubhnt_n_u32
__builtin_sve_svsubhnt_n_u64
__builtin_sve_svsubhnt_s16
__builtin_sve_svsubhnt_s32
__builtin_sve_svsubhnt_s64
__builtin_sve_svsubhnt_u16
__builtin_sve_svsubhnt_u32
__builtin_sve_svsubhnt_u64
__builtin_sve_svsublb_n_s16
__builtin_sve_svsublb_n_s32
__builtin_sve_svsublb_n_s64
__builtin_sve_svsublb_n_u16
__builtin_sve_svsublb_n_u32
__builtin_sve_svsublb_n_u64
__builtin_sve_svsublb_s16
__builtin_sve_svsublb_s32
__builtin_sve_svsublb_s64
__builtin_sve_svsublb_u16
__builtin_sve_svsublb_u32
__builtin_sve_svsublb_u64
__builtin_sve_svsublbt_n_s16
__builtin_sve_svsublbt_n_s32
__builtin_sve_svsublbt_n_s64
__builtin_sve_svsublbt_s16
__builtin_sve_svsublbt_s32
__builtin_sve_svsublbt_s64
__builtin_sve_svsublt_n_s16
__builtin_sve_svsublt_n_s32
__builtin_sve_svsublt_n_s64
__builtin_sve_svsublt_n_u16
__builtin_sve_svsublt_n_u32
__builtin_sve_svsublt_n_u64
__builtin_sve_svsublt_s16
__builtin_sve_svsublt_s32
__builtin_sve_svsublt_s64
__builtin_sve_svsublt_u16
__builtin_sve_svsublt_u32
__builtin_sve_svsublt_u64
__builtin_sve_svsubltb_n_s16
__builtin_sve_svsubltb_n_s32
__builtin_sve_svsubltb_n_s64
__builtin_sve_svsubltb_s16
__builtin_sve_svsubltb_s32
__builtin_sve_svsubltb_s64
__builtin_sve_svsubr_f16_m
__builtin_sve_svsubr_f16_x
__builtin_sve_svsubr_f16_z
__builtin_sve_svsubr_f32_m
__builtin_sve_svsubr_f32_x
__builtin_sve_svsubr_f32_z
__builtin_sve_svsubr_f64_m
__builtin_sve_svsubr_f64_x
__builtin_sve_svsubr_f64_z
__builtin_sve_svsubr_n_f16_m
__builtin_sve_svsubr_n_f16_x
__builtin_sve_svsubr_n_f16_z
__builtin_sve_svsubr_n_f32_m
__builtin_sve_svsubr_n_f32_x
__builtin_sve_svsubr_n_f32_z
__builtin_sve_svsubr_n_f64_m
__builtin_sve_svsubr_n_f64_x
__builtin_sve_svsubr_n_f64_z
__builtin_sve_svsubr_n_s16_m
__builtin_sve_svsubr_n_s16_x
__builtin_sve_svsubr_n_s16_z
__builtin_sve_svsubr_n_s32_m
__builtin_sve_svsubr_n_s32_x
__builtin_sve_svsubr_n_s32_z
__builtin_sve_svsubr_n_s64_m
__builtin_sve_svsubr_n_s64_x
__builtin_sve_svsubr_n_s64_z
__builtin_sve_svsubr_n_s8_m
__builtin_sve_svsubr_n_s8_x
__builtin_sve_svsubr_n_s8_z
__builtin_sve_svsubr_n_u16_m
__builtin_sve_svsubr_n_u16_x
__builtin_sve_svsubr_n_u16_z
__builtin_sve_svsubr_n_u32_m
__builtin_sve_svsubr_n_u32_x
__builtin_sve_svsubr_n_u32_z
__builtin_sve_svsubr_n_u64_m
__builtin_sve_svsubr_n_u64_x
__builtin_sve_svsubr_n_u64_z
__builtin_sve_svsubr_n_u8_m
__builtin_sve_svsubr_n_u8_x
__builtin_sve_svsubr_n_u8_z
__builtin_sve_svsubr_s16_m
__builtin_sve_svsubr_s16_x
__builtin_sve_svsubr_s16_z
__builtin_sve_svsubr_s32_m
__builtin_sve_svsubr_s32_x
__builtin_sve_svsubr_s32_z
__builtin_sve_svsubr_s64_m
__builtin_sve_svsubr_s64_x
__builtin_sve_svsubr_s64_z
__builtin_sve_svsubr_s8_m
__builtin_sve_svsubr_s8_x
__builtin_sve_svsubr_s8_z
__builtin_sve_svsubr_u16_m
__builtin_sve_svsubr_u16_x
__builtin_sve_svsubr_u16_z
__builtin_sve_svsubr_u32_m
__builtin_sve_svsubr_u32_x
__builtin_sve_svsubr_u32_z
__builtin_sve_svsubr_u64_m
__builtin_sve_svsubr_u64_x
__builtin_sve_svsubr_u64_z
__builtin_sve_svsubr_u8_m
__builtin_sve_svsubr_u8_x
__builtin_sve_svsubr_u8_z
__builtin_sve_svsubwb_n_s16
__builtin_sve_svsubwb_n_s32
__builtin_sve_svsubwb_n_s64
__builtin_sve_svsubwb_n_u16
__builtin_sve_svsubwb_n_u32
__builtin_sve_svsubwb_n_u64
__builtin_sve_svsubwb_s16
__builtin_sve_svsubwb_s32
__builtin_sve_svsubwb_s64
__builtin_sve_svsubwb_u16
__builtin_sve_svsubwb_u32
__builtin_sve_svsubwb_u64
__builtin_sve_svsubwt_n_s16
__builtin_sve_svsubwt_n_s32
__builtin_sve_svsubwt_n_s64
__builtin_sve_svsubwt_n_u16
__builtin_sve_svsubwt_n_u32
__builtin_sve_svsubwt_n_u64
__builtin_sve_svsubwt_s16
__builtin_sve_svsubwt_s32
__builtin_sve_svsubwt_s64
__builtin_sve_svsubwt_u16
__builtin_sve_svsubwt_u32
__builtin_sve_svsubwt_u64
__builtin_sve_svsudot_lane_s32
q4iq4iq16Scq16UcIUWi
__builtin_sve_svsudot_n_s32
q4iq4iq16ScUc
__builtin_sve_svsudot_s32
q4iq4iq16Scq16Uc
__builtin_sve_svtbl2_bf16
q8yq16yq8Us
__builtin_sve_svtbl2_f16
q8hq16hq8Us
__builtin_sve_svtbl2_f32
q4fq8fq4Ui
__builtin_sve_svtbl2_f64
q2dq4dq2UWi
__builtin_sve_svtbl2_s16
q8sq16sq8Us
__builtin_sve_svtbl2_s32
q4iq8iq4Ui
__builtin_sve_svtbl2_s64
q2Wiq4Wiq2UWi
__builtin_sve_svtbl2_s8
q16Scq32Scq16Uc
__builtin_sve_svtbl2_u16
q8Usq16Usq8Us
__builtin_sve_svtbl2_u32
q4Uiq8Uiq4Ui
__builtin_sve_svtbl2_u64
q2UWiq4UWiq2UWi
__builtin_sve_svtbl2_u8
q16Ucq32Ucq16Uc
__builtin_sve_svtbl_bf16
q8yq8yq8Us
__builtin_sve_svtbl_f16
q8hq8hq8Us
__builtin_sve_svtbl_f32
q4fq4fq4Ui
__builtin_sve_svtbl_f64
q2dq2dq2UWi
__builtin_sve_svtbl_s16
q8sq8sq8Us
__builtin_sve_svtbl_s32
q4iq4iq4Ui
__builtin_sve_svtbl_s64
q2Wiq2Wiq2UWi
__builtin_sve_svtbl_s8
q16Scq16Scq16Uc
__builtin_sve_svtbl_u16
__builtin_sve_svtbl_u32
__builtin_sve_svtbl_u64
__builtin_sve_svtbl_u8
__builtin_sve_svtbx_bf16
q8yq8yq8yq8Us
__builtin_sve_svtbx_f16
q8hq8hq8hq8Us
__builtin_sve_svtbx_f32
q4fq4fq4fq4Ui
__builtin_sve_svtbx_f64
q2dq2dq2dq2UWi
__builtin_sve_svtbx_s16
q8sq8sq8sq8Us
__builtin_sve_svtbx_s32
q4iq4iq4iq4Ui
__builtin_sve_svtbx_s64
q2Wiq2Wiq2Wiq2UWi
__builtin_sve_svtbx_s8
q16Scq16Scq16Scq16Uc
__builtin_sve_svtbx_u16
__builtin_sve_svtbx_u32
__builtin_sve_svtbx_u64
__builtin_sve_svtbx_u8
__builtin_sve_svtmad_f16
__builtin_sve_svtmad_f32
__builtin_sve_svtmad_f64
__builtin_sve_svtrn1_b16
__builtin_sve_svtrn1_b32
__builtin_sve_svtrn1_b64
__builtin_sve_svtrn1_b8
__builtin_sve_svtrn1_bf16
q8yq8yq8y
__builtin_sve_svtrn1_f16
__builtin_sve_svtrn1_f32
__builtin_sve_svtrn1_f64
__builtin_sve_svtrn1_s16
__builtin_sve_svtrn1_s32
__builtin_sve_svtrn1_s64
__builtin_sve_svtrn1_s8
__builtin_sve_svtrn1_u16
__builtin_sve_svtrn1_u32
__builtin_sve_svtrn1_u64
__builtin_sve_svtrn1_u8
__builtin_sve_svtrn1q_bf16
__builtin_sve_svtrn1q_f16
__builtin_sve_svtrn1q_f32
__builtin_sve_svtrn1q_f64
__builtin_sve_svtrn1q_s16
__builtin_sve_svtrn1q_s32
__builtin_sve_svtrn1q_s64
__builtin_sve_svtrn1q_s8
__builtin_sve_svtrn1q_u16
__builtin_sve_svtrn1q_u32
__builtin_sve_svtrn1q_u64
__builtin_sve_svtrn1q_u8
__builtin_sve_svtrn2_b16
__builtin_sve_svtrn2_b32
__builtin_sve_svtrn2_b64
__builtin_sve_svtrn2_b8
__builtin_sve_svtrn2_bf16
__builtin_sve_svtrn2_f16
__builtin_sve_svtrn2_f32
__builtin_sve_svtrn2_f64
__builtin_sve_svtrn2_s16
__builtin_sve_svtrn2_s32
__builtin_sve_svtrn2_s64
__builtin_sve_svtrn2_s8
__builtin_sve_svtrn2_u16
__builtin_sve_svtrn2_u32
__builtin_sve_svtrn2_u64
__builtin_sve_svtrn2_u8
__builtin_sve_svtrn2q_bf16
__builtin_sve_svtrn2q_f16
__builtin_sve_svtrn2q_f32
__builtin_sve_svtrn2q_f64
__builtin_sve_svtrn2q_s16
__builtin_sve_svtrn2q_s32
__builtin_sve_svtrn2q_s64
__builtin_sve_svtrn2q_s8
__builtin_sve_svtrn2q_u16
__builtin_sve_svtrn2q_u32
__builtin_sve_svtrn2q_u64
__builtin_sve_svtrn2q_u8
__builtin_sve_svtsmul_f16
__builtin_sve_svtsmul_f32
__builtin_sve_svtsmul_f64
__builtin_sve_svtssel_f16
__builtin_sve_svtssel_f32
__builtin_sve_svtssel_f64
__builtin_sve_svundef2_bf16
q16y
__builtin_sve_svundef2_f16
q16h
__builtin_sve_svundef2_f32
__builtin_sve_svundef2_f64
__builtin_sve_svundef2_s16
q16s
__builtin_sve_svundef2_s32
__builtin_sve_svundef2_s64
q4Wi
__builtin_sve_svundef2_s8
q32Sc
__builtin_sve_svundef2_u16
q16Us
__builtin_sve_svundef2_u32
q8Ui
__builtin_sve_svundef2_u64
q4UWi
__builtin_sve_svundef2_u8
q32Uc
__builtin_sve_svundef3_bf16
q24y
__builtin_sve_svundef3_f16
q24h
__builtin_sve_svundef3_f32
q12f
__builtin_sve_svundef3_f64
__builtin_sve_svundef3_s16
q24s
__builtin_sve_svundef3_s32
q12i
__builtin_sve_svundef3_s64
q6Wi
__builtin_sve_svundef3_s8
q48Sc
__builtin_sve_svundef3_u16
q24Us
__builtin_sve_svundef3_u32
q12Ui
__builtin_sve_svundef3_u64
q6UWi
__builtin_sve_svundef3_u8
q48Uc
__builtin_sve_svundef4_bf16
q32y
__builtin_sve_svundef4_f16
q32h
__builtin_sve_svundef4_f32
q16f
__builtin_sve_svundef4_f64
__builtin_sve_svundef4_s16
q32s
__builtin_sve_svundef4_s32
q16i
__builtin_sve_svundef4_s64
q8Wi
__builtin_sve_svundef4_s8
q64Sc
__builtin_sve_svundef4_u16
q32Us
__builtin_sve_svundef4_u32
q16Ui
__builtin_sve_svundef4_u64
q8UWi
__builtin_sve_svundef4_u8
q64Uc
__builtin_sve_svundef_bf16
__builtin_sve_svundef_f16
__builtin_sve_svundef_f32
__builtin_sve_svundef_f64
__builtin_sve_svundef_s16
__builtin_sve_svundef_s32
__builtin_sve_svundef_s64
q2Wi
__builtin_sve_svundef_s8
q16Sc
__builtin_sve_svundef_u16
q8Us
__builtin_sve_svundef_u32
q4Ui
__builtin_sve_svundef_u64
q2UWi
__builtin_sve_svundef_u8
q16Uc
__builtin_sve_svunpkhi_b
__builtin_sve_svunpkhi_s16
__builtin_sve_svunpkhi_s32
__builtin_sve_svunpkhi_s64
__builtin_sve_svunpkhi_u16
__builtin_sve_svunpkhi_u32
__builtin_sve_svunpkhi_u64
__builtin_sve_svunpklo_b
__builtin_sve_svunpklo_s16
__builtin_sve_svunpklo_s32
__builtin_sve_svunpklo_s64
__builtin_sve_svunpklo_u16
__builtin_sve_svunpklo_u32
__builtin_sve_svunpklo_u64
__builtin_sve_svuqadd_n_s16_m
__builtin_sve_svuqadd_n_s16_x
__builtin_sve_svuqadd_n_s16_z
__builtin_sve_svuqadd_n_s32_m
__builtin_sve_svuqadd_n_s32_x
__builtin_sve_svuqadd_n_s32_z
__builtin_sve_svuqadd_n_s64_m
__builtin_sve_svuqadd_n_s64_x
__builtin_sve_svuqadd_n_s64_z
__builtin_sve_svuqadd_n_s8_m
__builtin_sve_svuqadd_n_s8_x
__builtin_sve_svuqadd_n_s8_z
__builtin_sve_svuqadd_s16_m
__builtin_sve_svuqadd_s16_x
__builtin_sve_svuqadd_s16_z
__builtin_sve_svuqadd_s32_m
__builtin_sve_svuqadd_s32_x
__builtin_sve_svuqadd_s32_z
__builtin_sve_svuqadd_s64_m
__builtin_sve_svuqadd_s64_x
__builtin_sve_svuqadd_s64_z
__builtin_sve_svuqadd_s8_m
__builtin_sve_svuqadd_s8_x
__builtin_sve_svuqadd_s8_z
__builtin_sve_svusdot_lane_s32
q4iq4iq16Ucq16ScIUWi
__builtin_sve_svusdot_n_s32
q4iq4iq16UcSc
__builtin_sve_svusdot_s32
q4iq4iq16Ucq16Sc
__builtin_sve_svusmmla_s32
__builtin_sve_svuzp1_b16
__builtin_sve_svuzp1_b32
__builtin_sve_svuzp1_b64
__builtin_sve_svuzp1_b8
__builtin_sve_svuzp1_bf16
__builtin_sve_svuzp1_f16
__builtin_sve_svuzp1_f32
__builtin_sve_svuzp1_f64
__builtin_sve_svuzp1_s16
__builtin_sve_svuzp1_s32
__builtin_sve_svuzp1_s64
__builtin_sve_svuzp1_s8
__builtin_sve_svuzp1_u16
__builtin_sve_svuzp1_u32
__builtin_sve_svuzp1_u64
__builtin_sve_svuzp1_u8
__builtin_sve_svuzp1q_bf16
__builtin_sve_svuzp1q_f16
__builtin_sve_svuzp1q_f32
__builtin_sve_svuzp1q_f64
__builtin_sve_svuzp1q_s16
__builtin_sve_svuzp1q_s32
__builtin_sve_svuzp1q_s64
__builtin_sve_svuzp1q_s8
__builtin_sve_svuzp1q_u16
__builtin_sve_svuzp1q_u32
__builtin_sve_svuzp1q_u64
__builtin_sve_svuzp1q_u8
__builtin_sve_svuzp2_b16
__builtin_sve_svuzp2_b32
__builtin_sve_svuzp2_b64
__builtin_sve_svuzp2_b8
__builtin_sve_svuzp2_bf16
__builtin_sve_svuzp2_f16
__builtin_sve_svuzp2_f32
__builtin_sve_svuzp2_f64
__builtin_sve_svuzp2_s16
__builtin_sve_svuzp2_s32
__builtin_sve_svuzp2_s64
__builtin_sve_svuzp2_s8
__builtin_sve_svuzp2_u16
__builtin_sve_svuzp2_u32
__builtin_sve_svuzp2_u64
__builtin_sve_svuzp2_u8
__builtin_sve_svuzp2q_bf16
__builtin_sve_svuzp2q_f16
__builtin_sve_svuzp2q_f32
__builtin_sve_svuzp2q_f64
__builtin_sve_svuzp2q_s16
__builtin_sve_svuzp2q_s32
__builtin_sve_svuzp2q_s64
__builtin_sve_svuzp2q_s8
__builtin_sve_svuzp2q_u16
__builtin_sve_svuzp2q_u32
__builtin_sve_svuzp2q_u64
__builtin_sve_svuzp2q_u8
__builtin_sve_svwhilege_b16_s32
q16bii
__builtin_sve_svwhilege_b16_s64
__builtin_sve_svwhilege_b16_u32
q16bUiUi
__builtin_sve_svwhilege_b16_u64
q16bUWiUWi
__builtin_sve_svwhilege_b32_s32
__builtin_sve_svwhilege_b32_s64
__builtin_sve_svwhilege_b32_u32
__builtin_sve_svwhilege_b32_u64
__builtin_sve_svwhilege_b64_s32
__builtin_sve_svwhilege_b64_s64
__builtin_sve_svwhilege_b64_u32
__builtin_sve_svwhilege_b64_u64
__builtin_sve_svwhilege_b8_s32
__builtin_sve_svwhilege_b8_s64
__builtin_sve_svwhilege_b8_u32
__builtin_sve_svwhilege_b8_u64
__builtin_sve_svwhilegt_b16_s32
__builtin_sve_svwhilegt_b16_s64
__builtin_sve_svwhilegt_b16_u32
__builtin_sve_svwhilegt_b16_u64
__builtin_sve_svwhilegt_b32_s32
__builtin_sve_svwhilegt_b32_s64
__builtin_sve_svwhilegt_b32_u32
__builtin_sve_svwhilegt_b32_u64
__builtin_sve_svwhilegt_b64_s32
__builtin_sve_svwhilegt_b64_s64
__builtin_sve_svwhilegt_b64_u32
__builtin_sve_svwhilegt_b64_u64
__builtin_sve_svwhilegt_b8_s32
__builtin_sve_svwhilegt_b8_s64
__builtin_sve_svwhilegt_b8_u32
__builtin_sve_svwhilegt_b8_u64
__builtin_sve_svwhilele_b16_s32
__builtin_sve_svwhilele_b16_s64
__builtin_sve_svwhilele_b16_u32
__builtin_sve_svwhilele_b16_u64
__builtin_sve_svwhilele_b32_s32
__builtin_sve_svwhilele_b32_s64
__builtin_sve_svwhilele_b32_u32
__builtin_sve_svwhilele_b32_u64
__builtin_sve_svwhilele_b64_s32
__builtin_sve_svwhilele_b64_s64
__builtin_sve_svwhilele_b64_u32
__builtin_sve_svwhilele_b64_u64
__builtin_sve_svwhilele_b8_s32
__builtin_sve_svwhilele_b8_s64
__builtin_sve_svwhilele_b8_u32
__builtin_sve_svwhilele_b8_u64
__builtin_sve_svwhilelt_b16_s32
__builtin_sve_svwhilelt_b16_s64
__builtin_sve_svwhilelt_b16_u32
__builtin_sve_svwhilelt_b16_u64
__builtin_sve_svwhilelt_b32_s32
__builtin_sve_svwhilelt_b32_s64
__builtin_sve_svwhilelt_b32_u32
__builtin_sve_svwhilelt_b32_u64
__builtin_sve_svwhilelt_b64_s32
__builtin_sve_svwhilelt_b64_s64
__builtin_sve_svwhilelt_b64_u32
__builtin_sve_svwhilelt_b64_u64
__builtin_sve_svwhilelt_b8_s32
__builtin_sve_svwhilelt_b8_s64
__builtin_sve_svwhilelt_b8_u32
__builtin_sve_svwhilelt_b8_u64
__builtin_sve_svwhilerw_bf16
q16byC*yC*
__builtin_sve_svwhilerw_f16
q16bhC*hC*
__builtin_sve_svwhilerw_f32
q16bfC*fC*
__builtin_sve_svwhilerw_f64
q16bdC*dC*
__builtin_sve_svwhilerw_s16
q16bSsC*SsC*
__builtin_sve_svwhilerw_s32
q16bSiC*SiC*
__builtin_sve_svwhilerw_s64
q16bSWiC*SWiC*
__builtin_sve_svwhilerw_s8
q16bScC*ScC*
__builtin_sve_svwhilerw_u16
q16bUsC*UsC*
__builtin_sve_svwhilerw_u32
q16bUiC*UiC*
__builtin_sve_svwhilerw_u64
q16bUWiC*UWiC*
__builtin_sve_svwhilerw_u8
q16bUcC*UcC*
__builtin_sve_svwhilewr_bf16
__builtin_sve_svwhilewr_f16
__builtin_sve_svwhilewr_f32
__builtin_sve_svwhilewr_f64
__builtin_sve_svwhilewr_s16
__builtin_sve_svwhilewr_s32
__builtin_sve_svwhilewr_s64
__builtin_sve_svwhilewr_s8
__builtin_sve_svwhilewr_u16
__builtin_sve_svwhilewr_u32
__builtin_sve_svwhilewr_u64
__builtin_sve_svwhilewr_u8
__builtin_sve_svwrffr
vq16b
__builtin_sve_svxar_n_s16
__builtin_sve_svxar_n_s32
__builtin_sve_svxar_n_s64
__builtin_sve_svxar_n_s8
__builtin_sve_svxar_n_u16
__builtin_sve_svxar_n_u32
__builtin_sve_svxar_n_u64
__builtin_sve_svxar_n_u8
__builtin_sve_svzip1_b16
__builtin_sve_svzip1_b32
__builtin_sve_svzip1_b64
__builtin_sve_svzip1_b8
__builtin_sve_svzip1_bf16
__builtin_sve_svzip1_f16
__builtin_sve_svzip1_f32
__builtin_sve_svzip1_f64
__builtin_sve_svzip1_s16
__builtin_sve_svzip1_s32
__builtin_sve_svzip1_s64
__builtin_sve_svzip1_s8
__builtin_sve_svzip1_u16
__builtin_sve_svzip1_u32
__builtin_sve_svzip1_u64
__builtin_sve_svzip1_u8
__builtin_sve_svzip1q_bf16
__builtin_sve_svzip1q_f16
__builtin_sve_svzip1q_f32
__builtin_sve_svzip1q_f64
__builtin_sve_svzip1q_s16
__builtin_sve_svzip1q_s32
__builtin_sve_svzip1q_s64
__builtin_sve_svzip1q_s8
__builtin_sve_svzip1q_u16
__builtin_sve_svzip1q_u32
__builtin_sve_svzip1q_u64
__builtin_sve_svzip1q_u8
__builtin_sve_svzip2_b16
__builtin_sve_svzip2_b32
__builtin_sve_svzip2_b64
__builtin_sve_svzip2_b8
__builtin_sve_svzip2_bf16
__builtin_sve_svzip2_f16
__builtin_sve_svzip2_f32
__builtin_sve_svzip2_f64
__builtin_sve_svzip2_s16
__builtin_sve_svzip2_s32
__builtin_sve_svzip2_s64
__builtin_sve_svzip2_s8
__builtin_sve_svzip2_u16
__builtin_sve_svzip2_u32
__builtin_sve_svzip2_u64
__builtin_sve_svzip2_u8
__builtin_sve_svzip2q_bf16
__builtin_sve_svzip2q_f16
__builtin_sve_svzip2q_f32
__builtin_sve_svzip2q_f64
__builtin_sve_svzip2q_s16
__builtin_sve_svzip2q_s32
__builtin_sve_svzip2q_s64
__builtin_sve_svzip2q_s8
__builtin_sve_svzip2q_u16
__builtin_sve_svzip2q_u32
__builtin_sve_svzip2q_u64
__builtin_sve_svzip2q_u8
__builtin_sve_reinterpret_s8_s8
__builtin_sve_reinterpret_s8_s16
q16Scq8Ss
__builtin_sve_reinterpret_s8_s32
q16Scq4Si
__builtin_sve_reinterpret_s8_s64
q16Scq2SWi
__builtin_sve_reinterpret_s8_u8
q16Scq16Uc
__builtin_sve_reinterpret_s8_u16
q16Scq8Us
__builtin_sve_reinterpret_s8_u32
q16Scq4Ui
__builtin_sve_reinterpret_s8_u64
q16Scq2UWi
__builtin_sve_reinterpret_s8_f16
q16Scq8h
__builtin_sve_reinterpret_s8_bf16
q16Scq8y
__builtin_sve_reinterpret_s8_f32
q16Scq4f
__builtin_sve_reinterpret_s8_f64
q16Scq2d
__builtin_sve_reinterpret_s16_s8
q8Ssq16Sc
__builtin_sve_reinterpret_s16_s16
q8Ssq8Ss
__builtin_sve_reinterpret_s16_s32
q8Ssq4Si
__builtin_sve_reinterpret_s16_s64
q8Ssq2SWi
__builtin_sve_reinterpret_s16_u8
q8Ssq16Uc
__builtin_sve_reinterpret_s16_u16
q8Ssq8Us
__builtin_sve_reinterpret_s16_u32
q8Ssq4Ui
__builtin_sve_reinterpret_s16_u64
q8Ssq2UWi
__builtin_sve_reinterpret_s16_f16
q8Ssq8h
__builtin_sve_reinterpret_s16_bf16
q8Ssq8y
__builtin_sve_reinterpret_s16_f32
q8Ssq4f
__builtin_sve_reinterpret_s16_f64
q8Ssq2d
__builtin_sve_reinterpret_s32_s8
q4Siq16Sc
__builtin_sve_reinterpret_s32_s16
q4Siq8Ss
__builtin_sve_reinterpret_s32_s32
q4Siq4Si
__builtin_sve_reinterpret_s32_s64
q4Siq2SWi
__builtin_sve_reinterpret_s32_u8
q4Siq16Uc
__builtin_sve_reinterpret_s32_u16
q4Siq8Us
__builtin_sve_reinterpret_s32_u32
q4Siq4Ui
__builtin_sve_reinterpret_s32_u64
q4Siq2UWi
__builtin_sve_reinterpret_s32_f16
q4Siq8h
__builtin_sve_reinterpret_s32_bf16
q4Siq8y
__builtin_sve_reinterpret_s32_f32
q4Siq4f
__builtin_sve_reinterpret_s32_f64
q4Siq2d
__builtin_sve_reinterpret_s64_s8
q2SWiq16Sc
__builtin_sve_reinterpret_s64_s16
q2SWiq8Ss
__builtin_sve_reinterpret_s64_s32
q2SWiq4Si
__builtin_sve_reinterpret_s64_s64
q2SWiq2SWi
__builtin_sve_reinterpret_s64_u8
q2SWiq16Uc
__builtin_sve_reinterpret_s64_u16
q2SWiq8Us
__builtin_sve_reinterpret_s64_u32
q2SWiq4Ui
__builtin_sve_reinterpret_s64_u64
q2SWiq2UWi
__builtin_sve_reinterpret_s64_f16
q2SWiq8h
__builtin_sve_reinterpret_s64_bf16
q2SWiq8y
__builtin_sve_reinterpret_s64_f32
q2SWiq4f
__builtin_sve_reinterpret_s64_f64
q2SWiq2d
__builtin_sve_reinterpret_u8_s8
q16Ucq16Sc
__builtin_sve_reinterpret_u8_s16
q16Ucq8Ss
__builtin_sve_reinterpret_u8_s32
q16Ucq4Si
__builtin_sve_reinterpret_u8_s64
q16Ucq2SWi
__builtin_sve_reinterpret_u8_u8
__builtin_sve_reinterpret_u8_u16
__builtin_sve_reinterpret_u8_u32
q16Ucq4Ui
__builtin_sve_reinterpret_u8_u64
q16Ucq2UWi
__builtin_sve_reinterpret_u8_f16
q16Ucq8h
__builtin_sve_reinterpret_u8_bf16
q16Ucq8y
__builtin_sve_reinterpret_u8_f32
q16Ucq4f
__builtin_sve_reinterpret_u8_f64
q16Ucq2d
__builtin_sve_reinterpret_u16_s8
q8Usq16Sc
__builtin_sve_reinterpret_u16_s16
q8Usq8Ss
__builtin_sve_reinterpret_u16_s32
q8Usq4Si
__builtin_sve_reinterpret_u16_s64
q8Usq2SWi
__builtin_sve_reinterpret_u16_u8
__builtin_sve_reinterpret_u16_u16
__builtin_sve_reinterpret_u16_u32
__builtin_sve_reinterpret_u16_u64
q8Usq2UWi
__builtin_sve_reinterpret_u16_f16
q8Usq8h
__builtin_sve_reinterpret_u16_bf16
q8Usq8y
__builtin_sve_reinterpret_u16_f32
q8Usq4f
__builtin_sve_reinterpret_u16_f64
q8Usq2d
__builtin_sve_reinterpret_u32_s8
q4Uiq16Sc
__builtin_sve_reinterpret_u32_s16
q4Uiq8Ss
__builtin_sve_reinterpret_u32_s32
q4Uiq4Si
__builtin_sve_reinterpret_u32_s64
q4Uiq2SWi
__builtin_sve_reinterpret_u32_u8
q4Uiq16Uc
__builtin_sve_reinterpret_u32_u16
__builtin_sve_reinterpret_u32_u32
__builtin_sve_reinterpret_u32_u64
__builtin_sve_reinterpret_u32_f16
q4Uiq8h
__builtin_sve_reinterpret_u32_bf16
q4Uiq8y
__builtin_sve_reinterpret_u32_f32
q4Uiq4f
__builtin_sve_reinterpret_u32_f64
q4Uiq2d
__builtin_sve_reinterpret_u64_s8
q2UWiq16Sc
__builtin_sve_reinterpret_u64_s16
q2UWiq8Ss
__builtin_sve_reinterpret_u64_s32
q2UWiq4Si
__builtin_sve_reinterpret_u64_s64
q2UWiq2SWi
__builtin_sve_reinterpret_u64_u8
q2UWiq16Uc
__builtin_sve_reinterpret_u64_u16
q2UWiq8Us
__builtin_sve_reinterpret_u64_u32
__builtin_sve_reinterpret_u64_u64
__builtin_sve_reinterpret_u64_f16
q2UWiq8h
__builtin_sve_reinterpret_u64_bf16
q2UWiq8y
__builtin_sve_reinterpret_u64_f32
q2UWiq4f
__builtin_sve_reinterpret_u64_f64
q2UWiq2d
__builtin_sve_reinterpret_f16_s8
q8hq16Sc
__builtin_sve_reinterpret_f16_s16
q8hq8Ss
__builtin_sve_reinterpret_f16_s32
q8hq4Si
__builtin_sve_reinterpret_f16_s64
q8hq2SWi
__builtin_sve_reinterpret_f16_u8
q8hq16Uc
__builtin_sve_reinterpret_f16_u16
__builtin_sve_reinterpret_f16_u32
q8hq4Ui
__builtin_sve_reinterpret_f16_u64
q8hq2UWi
__builtin_sve_reinterpret_f16_f16
__builtin_sve_reinterpret_f16_bf16
q8hq8y
__builtin_sve_reinterpret_f16_f32
q8hq4f
__builtin_sve_reinterpret_f16_f64
q8hq2d
__builtin_sve_reinterpret_bf16_s8
q8yq16Sc
__builtin_sve_reinterpret_bf16_s16
q8yq8Ss
__builtin_sve_reinterpret_bf16_s32
q8yq4Si
__builtin_sve_reinterpret_bf16_s64
q8yq2SWi
__builtin_sve_reinterpret_bf16_u8
q8yq16Uc
__builtin_sve_reinterpret_bf16_u16
q8yq8Us
__builtin_sve_reinterpret_bf16_u32
q8yq4Ui
__builtin_sve_reinterpret_bf16_u64
q8yq2UWi
__builtin_sve_reinterpret_bf16_f16
q8yq8h
__builtin_sve_reinterpret_bf16_bf16
__builtin_sve_reinterpret_bf16_f32
q8yq4f
__builtin_sve_reinterpret_bf16_f64
q8yq2d
__builtin_sve_reinterpret_f32_s8
q4fq16Sc
__builtin_sve_reinterpret_f32_s16
q4fq8Ss
__builtin_sve_reinterpret_f32_s32
q4fq4Si
__builtin_sve_reinterpret_f32_s64
q4fq2SWi
__builtin_sve_reinterpret_f32_u8
q4fq16Uc
__builtin_sve_reinterpret_f32_u16
q4fq8Us
__builtin_sve_reinterpret_f32_u32
__builtin_sve_reinterpret_f32_u64
q4fq2UWi
__builtin_sve_reinterpret_f32_f16
q4fq8h
__builtin_sve_reinterpret_f32_bf16
q4fq8y
__builtin_sve_reinterpret_f32_f32
__builtin_sve_reinterpret_f32_f64
q4fq2d
__builtin_sve_reinterpret_f64_s8
q2dq16Sc
__builtin_sve_reinterpret_f64_s16
q2dq8Ss
__builtin_sve_reinterpret_f64_s32
q2dq4Si
__builtin_sve_reinterpret_f64_s64
q2dq2SWi
__builtin_sve_reinterpret_f64_u8
q2dq16Uc
__builtin_sve_reinterpret_f64_u16
q2dq8Us
__builtin_sve_reinterpret_f64_u32
q2dq4Ui
__builtin_sve_reinterpret_f64_u64
__builtin_sve_reinterpret_f64_f16
q2dq8h
__builtin_sve_reinterpret_f64_bf16
q2dq8y
__builtin_sve_reinterpret_f64_f32
q2dq4f
__builtin_sve_reinterpret_f64_f64
__clear_cache
vv*v*
__builtin_arm_ldrex
__builtin_arm_ldaex
__builtin_arm_strex
__builtin_arm_stlex
__builtin_arm_clrex
__builtin_arm_rbit
__builtin_arm_rbit64
WUiWUi
__builtin_arm_cls
UiZUi
__builtin_arm_cls64
UiWUi
__builtin_arm_nop
__builtin_arm_yield
__builtin_arm_wfe
__builtin_arm_wfi
__builtin_arm_sev
__builtin_arm_sevl
__builtin_arm_crc32b
UiUiUc
__builtin_arm_crc32cb
__builtin_arm_crc32h
UiUiUs
__builtin_arm_crc32ch
__builtin_arm_crc32w
__builtin_arm_crc32cw
__builtin_arm_crc32d
UiUiWUi
__builtin_arm_crc32cd
__builtin_arm_irg
v*v*Ui
__builtin_arm_addg
__builtin_arm_gmi
Uiv*Ui
__builtin_arm_ldg
v*v*
__builtin_arm_stg
__builtin_arm_subp
Uiv*v*
__builtin_arm_dmb
__builtin_arm_dsb
__builtin_arm_isb
__builtin_arm_jcvt
__builtin_arm_prefetch
vvC*UiUiUiUi
__builtin_arm_rsr
UicC*
__builtin_arm_rsr64
WUicC*
__builtin_arm_rsrp
v*cC*
__builtin_arm_wsr
vcC*Ui
__builtin_arm_wsr64
vcC*WUi
__builtin_arm_wsrp
vcC*vC*
__dmb
__dsb
__isb
__yield
__wfe
__wfi
__sev
__sevl
__builtin_sponentry
__builtin_arm_tstart
__builtin_arm_tcommit
__builtin_arm_tcancel
vWUIi
__builtin_arm_ttest
_BitScanForward
UcUNi*UNi
intrin.h
_BitScanReverse
_BitScanForward64
UcUNi*ULLi
_BitScanReverse64
_InterlockedAdd
NiNiD*Ni
_InterlockedAnd64
LLiLLiD*LLi
_InterlockedDecrement64
LLiLLiD*
_InterlockedExchange64
_InterlockedExchangeAdd64
_InterlockedExchangeSub64
_InterlockedIncrement64
_InterlockedOr64
_InterlockedXor64
_InterlockedExchangeAdd_acq
_InterlockedExchangeAdd_rel
_InterlockedExchangeAdd_nf
_InterlockedExchangeAdd8_acq
ccD*c
_InterlockedExchangeAdd8_rel
_InterlockedExchangeAdd8_nf
_InterlockedExchangeAdd16_acq
ssD*s
_InterlockedExchangeAdd16_rel
_InterlockedExchangeAdd16_nf
_InterlockedExchangeAdd64_acq
_InterlockedExchangeAdd64_rel
_InterlockedExchangeAdd64_nf
_InterlockedExchange8_acq
_InterlockedExchange8_nf
_InterlockedExchange8_rel
_InterlockedExchange16_acq
_InterlockedExchange16_nf
_InterlockedExchange16_rel
_InterlockedExchange_acq
_InterlockedExchange_nf
_InterlockedExchange_rel
_InterlockedExchange64_acq
_InterlockedExchange64_nf
_InterlockedExchange64_rel
_InterlockedCompareExchange8_acq
ccD*cc
_InterlockedCompareExchange8_nf
_InterlockedCompareExchange8_rel
_InterlockedCompareExchange16_acq
ssD*ss
_InterlockedCompareExchange16_nf
_InterlockedCompareExchange16_rel
_InterlockedCompareExchange_acq
NiNiD*NiNi
_InterlockedCompareExchange_nf
_InterlockedCompareExchange_rel
_InterlockedCompareExchange64_acq
LLiLLiD*LLiLLi
_InterlockedCompareExchange64_nf
_InterlockedCompareExchange64_rel
_InterlockedCompareExchange128
UcLLiD*LLiLLiLLi*
_InterlockedCompareExchange128_acq
_InterlockedCompareExchange128_nf
_InterlockedCompareExchange128_rel
_InterlockedOr8_acq
_InterlockedOr8_nf
_InterlockedOr8_rel
_InterlockedOr16_acq
_InterlockedOr16_nf
_InterlockedOr16_rel
_InterlockedOr_acq
_InterlockedOr_nf
_InterlockedOr_rel
_InterlockedOr64_acq
_InterlockedOr64_nf
_InterlockedOr64_rel
_InterlockedXor8_acq
_InterlockedXor8_nf
_InterlockedXor8_rel
_InterlockedXor16_acq
_InterlockedXor16_nf
_InterlockedXor16_rel
_InterlockedXor_acq
_InterlockedXor_nf
_InterlockedXor_rel
_InterlockedXor64_acq
_InterlockedXor64_nf
_InterlockedXor64_rel
_InterlockedAnd8_acq
_InterlockedAnd8_nf
_InterlockedAnd8_rel
_InterlockedAnd16_acq
_InterlockedAnd16_nf
_InterlockedAnd16_rel
_InterlockedAnd_acq
_InterlockedAnd_nf
_InterlockedAnd_rel
_InterlockedAnd64_acq
_InterlockedAnd64_nf
_InterlockedAnd64_rel
_InterlockedIncrement16_acq
ssD*
_InterlockedIncrement16_nf
_InterlockedIncrement16_rel
_InterlockedIncrement_acq
NiNiD*
_InterlockedIncrement_nf
_InterlockedIncrement_rel
_InterlockedIncrement64_acq
_InterlockedIncrement64_nf
_InterlockedIncrement64_rel
_InterlockedDecrement16_acq
_InterlockedDecrement16_nf
_InterlockedDecrement16_rel
_InterlockedDecrement_acq
_InterlockedDecrement_nf
_InterlockedDecrement_rel
_InterlockedDecrement64_acq
_InterlockedDecrement64_nf
_InterlockedDecrement64_rel
_ReadWriteBarrier
__getReg
ULLii
_ReadStatusReg
LLii
_WriteStatusReg
viLLi
_AddressOfReturnAddress
__ARM_FEATURE_QRDMX
__ARM_FEATURE_ATOMICS
__ARM_FEATURE_CRC32
__ARM_ARCH_8_3__
__ARM_FEATURE_COMPLEX
__ARM_FEATURE_JCVT
__ARM_ARCH_8_4__
__ARM_ARCH_8_5__
__ARM_ARCH_8_6__
__aarch64__
__AARCH64_CMODEL_
__ARM_ACLE
__ARM_ARCH
__ARM_ARCH_PROFILE
__ARM_64BIT_STATE
__ARM_PCS_AAPCS64
__ARM_ARCH_ISA_A64
__ARM_FEATURE_CLZ
__ARM_FEATURE_FMA
__ARM_FEATURE_LDREX
__ARM_FEATURE_IDIV
__ARM_FEATURE_DIV
__ARM_FEATURE_NUMERIC_MAXMIN
__ARM_FEATURE_DIRECTED_ROUNDING
__ARM_ALIGN_MAX_STACK_PWR
__ARM_FP
__ARM_FP16_FORMAT_IEEE
__ARM_FP16_ARGS
__ARM_FP_FAST
__ARM_SIZEOF_WCHAR_T
__ARM_SIZEOF_MINIMAL_ENUM
__ARM_NEON
__ARM_NEON_FP
__ARM_FEATURE_SVE
__ARM_FEATURE_SVE2
__ARM_FEATURE_SVE2_AES
__ARM_FEATURE_SVE2_BITPERM
__ARM_FEATURE_SVE2_SHA3
__ARM_FEATURE_SVE2_SM4
__ARM_FEATURE_CRYPTO
__ARM_FEATURE_UNALIGNED
__ARM_FEATURE_FP16_VECTOR_ARITHMETIC
__ARM_FEATURE_FP16_SCALAR_ARITHMETIC
__ARM_FEATURE_DOTPROD
__ARM_FEATURE_MEMORY_TAGGING
__ARM_FEATURE_TME
__ARM_FEATURE_MATMUL_INT8
__ARM_FEATURE_BF16
__ARM_FEATURE_BF16_VECTOR_ARITHMETIC
__ARM_BF16_FORMAT_ALTERNATIVE
__ARM_FEATURE_BF16_SCALAR_ARITHMETIC
__ARM_FEATURE_SVE_BF16
__ARM_FEATURE_SVE_MATMUL_FP64
__ARM_FEATURE_SVE_MATMUL_FP32
__ARM_FEATURE_SVE_MATMUL_INT8
__ARM_FEATURE_FP16FML
__ARM_FEATURE_PAC_DEFAULT
__ARM_FEATURE_BTI_DEFAULT
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8
__ARM_FEATURE_SVE_BITS
__ARM_FEATURE_SVE_VECTOR_OPERATORS
+sve
+sve2
+sve2-aes
+sve2-sha3
+sve2-sm4
+sve2-bitperm
+f64mm
+tme
+lse
+ls64
e-m:o-p:32:32-i64:64-i128:128-n32:64-S128
e-m:o-i64:64-i128:128-n32:64-S128
e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
__AARCH64EL__
__AARCH64EB__
__AARCH_BIG_ENDIAN
__ARM_BIG_ENDIAN
E-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
e-m:w-p:64:64-i32:32-i64:64-i128:128-n32:64-S128
_M_ARM64
__AARCH64_SIMD__
__ARM64_ARCH_8_32__
__ARM64_ARCH_8__
__ARM_NEON__
__REGISTER_PREFIX__
__arm64
__arm64__
__arm64e__
__RENDERSCRIPT__
__builtin_amdgcn_dispatch_ptr
__builtin_amdgcn_kernarg_segment_ptr
__builtin_amdgcn_implicitarg_ptr
__builtin_amdgcn_queue_ptr
__builtin_amdgcn_workgroup_id_x
__builtin_amdgcn_workgroup_id_y
__builtin_amdgcn_workgroup_id_z
__builtin_amdgcn_workitem_id_x
__builtin_amdgcn_workitem_id_y
__builtin_amdgcn_workitem_id_z
__builtin_amdgcn_workgroup_size_x
__builtin_amdgcn_workgroup_size_y
__builtin_amdgcn_workgroup_size_z
__builtin_amdgcn_grid_size_x
__builtin_amdgcn_grid_size_y
__builtin_amdgcn_grid_size_z
__builtin_amdgcn_mbcnt_hi
__builtin_amdgcn_mbcnt_lo
__builtin_amdgcn_s_getreg
UiIi
__builtin_amdgcn_s_setreg
vIiUi
__builtin_amdgcn_s_getpc
__builtin_amdgcn_s_waitcnt
__builtin_amdgcn_s_sendmsg
__builtin_amdgcn_s_sendmsghalt
__builtin_amdgcn_s_barrier
__builtin_amdgcn_wave_barrier
__builtin_amdgcn_s_dcache_inv
__builtin_amdgcn_buffer_wbinvl1
__builtin_amdgcn_ds_gws_init
vUiUi
__builtin_amdgcn_ds_gws_barrier
__builtin_amdgcn_ds_gws_sema_v
__builtin_amdgcn_ds_gws_sema_br
__builtin_amdgcn_ds_gws_sema_p
__builtin_amdgcn_fence
vUicC*
__builtin_amdgcn_atomic_inc32
UZiUZiD*UZiUicC*
__builtin_amdgcn_atomic_inc64
UWiUWiD*UWiUicC*
__builtin_amdgcn_atomic_dec32
__builtin_amdgcn_atomic_dec64
__builtin_amdgcn_div_scale
dddbb*
__builtin_amdgcn_div_scalef
fffbb*
__builtin_amdgcn_div_fmas
ddddb
__builtin_amdgcn_div_fmasf
ffffb
__builtin_amdgcn_div_fixup
dddd
__builtin_amdgcn_div_fixupf
ffff
__builtin_amdgcn_trig_preop
__builtin_amdgcn_trig_preopf
__builtin_amdgcn_rcp
__builtin_amdgcn_rcpf
__builtin_amdgcn_sqrt
__builtin_amdgcn_sqrtf
__builtin_amdgcn_rsq
__builtin_amdgcn_rsqf
__builtin_amdgcn_rsq_clamp
__builtin_amdgcn_rsq_clampf
__builtin_amdgcn_sinf
__builtin_amdgcn_cosf
__builtin_amdgcn_log_clampf
__builtin_amdgcn_ldexp
__builtin_amdgcn_ldexpf
__builtin_amdgcn_frexp_mant
__builtin_amdgcn_frexp_mantf
__builtin_amdgcn_frexp_exp
__builtin_amdgcn_frexp_expf
__builtin_amdgcn_fract
__builtin_amdgcn_fractf
__builtin_amdgcn_lerp
UiUiUiUi
__builtin_amdgcn_class
__builtin_amdgcn_classf
__builtin_amdgcn_cubeid
__builtin_amdgcn_cubesc
__builtin_amdgcn_cubetc
__builtin_amdgcn_cubema
__builtin_amdgcn_s_memtime
__builtin_amdgcn_s_sleep
__builtin_amdgcn_s_incperflevel
__builtin_amdgcn_s_decperflevel
__builtin_amdgcn_uicmp
LUiUiUiIi
__builtin_amdgcn_uicmpl
LUiLUiLUiIi
__builtin_amdgcn_sicmp
LUiiiIi
__builtin_amdgcn_sicmpl
LUiLiLiIi
__builtin_amdgcn_fcmp
LUiddIi
__builtin_amdgcn_fcmpf
LUiffIi
__builtin_amdgcn_ds_swizzle
__builtin_amdgcn_ds_permute
__builtin_amdgcn_ds_bpermute
__builtin_amdgcn_readfirstlane
__builtin_amdgcn_readlane
__builtin_amdgcn_fmed3f
__builtin_amdgcn_ds_faddf
ff*3fIiIiIb
__builtin_amdgcn_ds_fminf
__builtin_amdgcn_ds_fmaxf
__builtin_amdgcn_ds_append
ii*3
__builtin_amdgcn_ds_consume
__builtin_amdgcn_alignbit
__builtin_amdgcn_alignbyte
__builtin_amdgcn_ubfe
__builtin_amdgcn_sbfe
__builtin_amdgcn_cvt_pkrtz
E2hff
__builtin_amdgcn_cvt_pknorm_i16
E2sff
__builtin_amdgcn_cvt_pknorm_u16
E2Usff
__builtin_amdgcn_cvt_pk_i16
E2sii
__builtin_amdgcn_cvt_pk_u16
E2UsUiUi
__builtin_amdgcn_cvt_pk_u8_f32
UifUiUi
__builtin_amdgcn_sad_u8
__builtin_amdgcn_msad_u8
__builtin_amdgcn_sad_hi_u8
__builtin_amdgcn_sad_u16
__builtin_amdgcn_qsad_pk_u16_u8
LUiLUiUiLUi
__builtin_amdgcn_mqsad_pk_u16_u8
__builtin_amdgcn_mqsad_u32_u8
V4UiLUiUiV4Ui
__builtin_amdgcn_s_dcache_inv_vol
ci-insts
__builtin_amdgcn_buffer_wbinvl1_vol
__builtin_amdgcn_ds_gws_sema_release_all
__builtin_amdgcn_is_shared
bvC*0
flat-address-space
__builtin_amdgcn_is_private
__builtin_amdgcn_interp_p1_f16
ffUiUibUi
__builtin_amdgcn_interp_p2_f16
hffUiUibUi
__builtin_amdgcn_interp_p1
ffUiUiUi
__builtin_amdgcn_interp_p2
fffUiUiUi
__builtin_amdgcn_interp_mov
fUiUiUiUi
__builtin_amdgcn_div_fixuph
16-bit-insts
__builtin_amdgcn_rcph
__builtin_amdgcn_sqrth
__builtin_amdgcn_rsqh
__builtin_amdgcn_sinh
__builtin_amdgcn_cosh
__builtin_amdgcn_ldexph
__builtin_amdgcn_frexp_manth
__builtin_amdgcn_frexp_exph
__builtin_amdgcn_fracth
__builtin_amdgcn_classh
__builtin_amdgcn_s_memrealtime
s-memrealtime
__builtin_amdgcn_mov_dpp
iiIiIiIiIb
__builtin_amdgcn_update_dpp
iiiIiIiIiIb
__builtin_amdgcn_s_dcache_wb
gfx8-insts
__builtin_amdgcn_fmed3h
gfx9-insts
__builtin_amdgcn_fdot2
fV2hV2hfIb
dot2-insts
__builtin_amdgcn_sdot2
SiV2SsV2SsSiIb
__builtin_amdgcn_udot2
UiV2UsV2UsUiIb
__builtin_amdgcn_sdot4
SiSiSiSiIb
dot1-insts
__builtin_amdgcn_udot4
UiUiUiUiIb
__builtin_amdgcn_sdot8
__builtin_amdgcn_udot8
__builtin_amdgcn_permlane16
UiUiUiUiUiIbIb
gfx10-insts
__builtin_amdgcn_permlanex16
__builtin_amdgcn_mov_dpp8
UiUiIUi
__builtin_amdgcn_read_exec
__builtin_amdgcn_read_exec_lo
__builtin_amdgcn_read_exec_hi
__builtin_amdgcn_endpgm
__builtin_r600_implicitarg_ptr
Uc*7
__builtin_r600_read_tgid_x
__builtin_r600_read_tgid_y
__builtin_r600_read_tgid_z
__builtin_r600_read_tidig_x
__builtin_r600_read_tidig_y
__builtin_r600_read_tidig_z
__builtin_r600_recipsqrt_ieee
__builtin_r600_recipsqrt_ieeef
__builtin_amdgcn_mfma_f32_32x32x1f32
V32fffV32fIiIiIi
mai-insts
__builtin_amdgcn_mfma_f32_16x16x1f32
V16fffV16fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x1f32
V4fffV4fIiIiIi
__builtin_amdgcn_mfma_f32_32x32x2f32
__builtin_amdgcn_mfma_f32_16x16x4f32
__builtin_amdgcn_mfma_f32_32x32x4f16
V32fV4hV4hV32fIiIiIi
__builtin_amdgcn_mfma_f32_16x16x4f16
V16fV4hV4hV16fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x4f16
V4fV4hV4hV4fIiIiIi
__builtin_amdgcn_mfma_f32_32x32x8f16
__builtin_amdgcn_mfma_f32_16x16x16f16
__builtin_amdgcn_mfma_i32_32x32x4i8
V32iiiV32iIiIiIi
__builtin_amdgcn_mfma_i32_16x16x4i8
V16iiiV16iIiIiIi
__builtin_amdgcn_mfma_i32_4x4x4i8
V4iiiV4iIiIiIi
__builtin_amdgcn_mfma_i32_32x32x8i8
__builtin_amdgcn_mfma_i32_16x16x16i8
__builtin_amdgcn_mfma_f32_32x32x2bf16
V32fV2sV2sV32fIiIiIi
__builtin_amdgcn_mfma_f32_16x16x2bf16
V16fV2sV2sV16fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x2bf16
V4fV2sV2sV4fIiIiIi
__builtin_amdgcn_mfma_f32_32x32x4bf16
__builtin_amdgcn_mfma_f32_16x16x8bf16
v100
v101
v102
v103
v104
v105
v106
v107
v108
v109
v110
v111
v112
v113
v114
v115
v116
v117
v118
v119
v120
v121
v122
v123
v124
v125
v126
v127
v128
v129
v130
v131
v132
v133
v134
v135
v136
v137
v138
v139
v140
v141
v142
v143
v144
v145
v146
v147
v148
v149
v150
v151
v152
v153
v154
v155
v156
v157
v158
v159
v160
v161
v162
v163
v164
v165
v166
v167
v168
v169
v170
v171
v172
v173
v174
v175
v176
v177
v178
v179
v180
v181
v182
v183
v184
v185
v186
v187
v188
v189
v190
v191
v192
v193
v194
v195
v196
v197
v198
v199
v200
v201
v202
v203
v204
v205
v206
v207
v208
v209
v210
v211
v212
v213
v214
v215
v216
v217
v218
v219
v220
v221
v222
v223
v224
v225
v226
v227
v228
v229
v230
v231
v232
v233
v234
v235
v236
v237
v238
v239
v240
v241
v242
v243
v244
v245
v246
v247
v248
v249
v250
v251
v252
v253
v254
v255
s100
s101
s102
s103
s104
s105
s106
s107
s108
s109
s110
s111
s112
s113
s114
s115
s116
s117
s118
s119
s120
s121
s122
s123
s124
s125
s126
s127
flat_scratch
vcc_lo
vcc_hi
flat_scratch_lo
flat_scratch_hi
a100
a101
a102
a103
a104
a105
a106
a107
a108
a109
a110
a111
a112
a113
a114
a115
a116
a117
a118
a119
a120
a121
a122
a123
a124
a125
a126
a127
a128
a129
a130
a131
a132
a133
a134
a135
a136
a137
a138
a139
a140
a141
a142
a143
a144
a145
a146
a147
a148
a149
a150
a151
a152
a153
a154
a155
a156
a157
a158
a159
a160
a161
a162
a163
a164
a165
a166
a167
a168
a169
a170
a171
a172
a173
a174
a175
a176
a177
a178
a179
a180
a181
a182
a183
a184
a185
a186
a187
a188
a189
a190
a191
a192
a193
a194
a195
a196
a197
a198
a199
a200
a201
a202
a203
a204
a205
a206
a207
a208
a209
a210
a211
a212
a213
a214
a215
a216
a217
a218
a219
a220
a221
a222
a223
a224
a225
a226
a227
a228
a229
a230
a231
a232
a233
a234
a235
a236
a237
a238
a239
a240
a241
a242
a243
a244
a245
a246
a247
a248
a249
a250
a251
a252
a253
a254
a255
dot5-insts
dot6-insts
dl-insts
gfx10-3-insts
dot3-insts
dot4-insts
e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1
__AMD__
__AMDGPU__
__AMDGCN__
__R600__
__amdgcn_processor__
__amdgcn_target_id__
__amdgcn_feature_
__HAS_FMAF__
FP_FAST_FMAF
__HAS_LDEXPF__
__HAS_FP64__
FP_FAST_FMA
__AMDGCN_WAVEFRONT_SIZE
tma_lo
tma_hi
tba_lo
tba_hi
__arc__
ilink1
blink
E-m:o-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:o-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:w-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S128
E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:o-p:32:32-Fi8-i64:64-a:0:32-n32-S128
E-m:o-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:o-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
E-m:e-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:e-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
8M_BASE
8_1A
8_2A
8_3A
8_4A
8_5A
8_6A
8_7A
8M_MAIN
8_1M_MAIN
aapcs-linux
thumb-mode
+arm
+thumb
__arm
__arm__
__ARM_ARCH_7K__
__ARM_ARCH_7A__
__ARM_ARCH_
__ARM_ARCH_ISA_ARM
__ARM_ARCH_ISA_THUMB
__ARM_32BIT_STATE
__THUMB_INTERWORK__
__ARM_EABI__
__ARM_PCS
__ARM_PCS_VFP
__SOFTFP__
__ARM_ROPI
__ARM_RWPI
__XSCALE__
__THUMBEL__
__thumb__
__thumb2__
__ARM_FEATURE_SIMD32
__ARM_ARCH_EXT_IDIV__
__APCS_32__
__VFP_FP__
__ARM_VFPV2__
__ARM_VFPV3__
__ARM_VFPV4__
__ARM_FPV5__
__ARM_FEATURE_MVE
__ARM_FEATURE_CDE
__ARM_FEATURE_CDE_COPROC
__ARM_FEATURE_CMSE
__ARM_FEATURE_DSP
__ARM_FEATURE_SAT
__ARM_FEATURE_QBIT
__builtin_arm_smulbb
__builtin_arm_smulbt
__builtin_arm_smultb
__builtin_arm_smultt
__builtin_arm_smulwb
__builtin_arm_smulwt
__builtin_arm_qadd
__builtin_arm_qsub
__builtin_arm_qdbl
__builtin_arm_ssat
__builtin_arm_usat
UiiUi
__builtin_arm_smlabb
iiii
__builtin_arm_smlabt
__builtin_arm_smlatb
__builtin_arm_smlatt
__builtin_arm_smlawb
__builtin_arm_smlawt
__builtin_arm_ssat16
__builtin_arm_usat16
__builtin_arm_sxtab16
__builtin_arm_sxtb16
__builtin_arm_uxtab16
__builtin_arm_uxtb16
__builtin_arm_sel
__builtin_arm_qadd8
__builtin_arm_qsub8
__builtin_arm_sadd8
__builtin_arm_shadd8
__builtin_arm_shsub8
__builtin_arm_ssub8
__builtin_arm_uadd8
__builtin_arm_uhadd8
__builtin_arm_uhsub8
__builtin_arm_uqadd8
__builtin_arm_uqsub8
__builtin_arm_usub8
__builtin_arm_usad8
__builtin_arm_usada8
__builtin_arm_qadd16
__builtin_arm_qasx
__builtin_arm_qsax
__builtin_arm_qsub16
__builtin_arm_sadd16
__builtin_arm_sasx
__builtin_arm_shadd16
__builtin_arm_shasx
__builtin_arm_shsax
__builtin_arm_shsub16
__builtin_arm_ssax
__builtin_arm_ssub16
__builtin_arm_uadd16
__builtin_arm_uasx
__builtin_arm_uhadd16
__builtin_arm_uhasx
__builtin_arm_uhsax
__builtin_arm_uhsub16
__builtin_arm_uqadd16
__builtin_arm_uqasx
__builtin_arm_uqsax
__builtin_arm_uqsub16
__builtin_arm_usax
__builtin_arm_usub16
__builtin_arm_smlad
__builtin_arm_smladx
__builtin_arm_smlald
LLiiiLLi
__builtin_arm_smlaldx
__builtin_arm_smlsd
__builtin_arm_smlsdx
__builtin_arm_smlsld
__builtin_arm_smlsldx
__builtin_arm_smuad
__builtin_arm_smuadx
__builtin_arm_smusd
__builtin_arm_smusdx
__builtin_arm_ldrexd
LLUiv*
__builtin_arm_strexd
iLLUiv*
__builtin_arm_get_fpscr
__builtin_arm_set_fpscr
__builtin_arm_vcvtr_f
__builtin_arm_vcvtr_d
__builtin_arm_ldc
vUIiUIivC*
__builtin_arm_ldcl
__builtin_arm_ldc2
__builtin_arm_ldc2l
__builtin_arm_stc
vUIiUIiv*
__builtin_arm_stcl
__builtin_arm_stc2
__builtin_arm_stc2l
__builtin_arm_cdp
vUIiUIiUIiUIiUIiUIi
__builtin_arm_cdp2
__builtin_arm_mcr
vUIiUIiUiUIiUIiUIi
__builtin_arm_mcr2
__builtin_arm_mrc
UiUIiUIiUIiUIiUIi
__builtin_arm_mrc2
__builtin_arm_mcrr
vUIiUIiLLUiUIi
__builtin_arm_mcrr2
__builtin_arm_mrrc
LLUiUIiUIiUIi
__builtin_arm_mrrc2
UiUiLLUi
__builtin_arm_cmse_TT
Uiv*
__builtin_arm_cmse_TTT
__builtin_arm_cmse_TTA
__builtin_arm_cmse_TTAT
__builtin_arm_dbg
vvC*UiUi
LLUicC*
vcC*LLUi
__builtin_arm_mve_asrl
arm_mve.h
__builtin_arm_mve_lsll
__builtin_arm_mve_sqrshr
__builtin_arm_mve_sqrshrl
__builtin_arm_mve_sqrshrl_sat48
__builtin_arm_mve_sqshl
__builtin_arm_mve_sqshll
__builtin_arm_mve_srshr
__builtin_arm_mve_srshrl
__builtin_arm_mve_uqrshl
__builtin_arm_mve_uqrshll
__builtin_arm_mve_uqrshll_sat48
__builtin_arm_mve_uqshl
__builtin_arm_mve_uqshll
__builtin_arm_mve_urshr
__builtin_arm_mve_urshrl
__builtin_arm_mve_vabavq_p_s16
__builtin_arm_mve_vabavq_p_s32
__builtin_arm_mve_vabavq_p_s8
__builtin_arm_mve_vabavq_p_u16
__builtin_arm_mve_vabavq_p_u32
__builtin_arm_mve_vabavq_p_u8
__builtin_arm_mve_vabavq_s16
__builtin_arm_mve_vabavq_s32
__builtin_arm_mve_vabavq_s8
__builtin_arm_mve_vabavq_u16
__builtin_arm_mve_vabavq_u32
__builtin_arm_mve_vabavq_u8
__builtin_arm_mve_vabdq_f16
__builtin_arm_mve_vabdq_f32
__builtin_arm_mve_vabdq_m_f16
__builtin_arm_mve_vabdq_m_f32
__builtin_arm_mve_vabdq_m_s16
__builtin_arm_mve_vabdq_m_s32
__builtin_arm_mve_vabdq_m_s8
__builtin_arm_mve_vabdq_m_u16
__builtin_arm_mve_vabdq_m_u32
__builtin_arm_mve_vabdq_m_u8
__builtin_arm_mve_vabdq_s16
__builtin_arm_mve_vabdq_s32
__builtin_arm_mve_vabdq_s8
__builtin_arm_mve_vabdq_u16
__builtin_arm_mve_vabdq_u32
__builtin_arm_mve_vabdq_u8
__builtin_arm_mve_vabdq_x_f16
__builtin_arm_mve_vabdq_x_f32
__builtin_arm_mve_vabdq_x_s16
__builtin_arm_mve_vabdq_x_s32
__builtin_arm_mve_vabdq_x_s8
__builtin_arm_mve_vabdq_x_u16
__builtin_arm_mve_vabdq_x_u32
__builtin_arm_mve_vabdq_x_u8
__builtin_arm_mve_vabsq_f16
__builtin_arm_mve_vabsq_f32
__builtin_arm_mve_vabsq_m_f16
__builtin_arm_mve_vabsq_m_f32
__builtin_arm_mve_vabsq_m_s16
__builtin_arm_mve_vabsq_m_s32
__builtin_arm_mve_vabsq_m_s8
__builtin_arm_mve_vabsq_s16
__builtin_arm_mve_vabsq_s32
__builtin_arm_mve_vabsq_s8
__builtin_arm_mve_vabsq_x_f16
__builtin_arm_mve_vabsq_x_f32
__builtin_arm_mve_vabsq_x_s16
__builtin_arm_mve_vabsq_x_s32
__builtin_arm_mve_vabsq_x_s8
__builtin_arm_mve_vadciq_m_s32
__builtin_arm_mve_vadciq_m_u32
__builtin_arm_mve_vadciq_s32
__builtin_arm_mve_vadciq_u32
__builtin_arm_mve_vadcq_m_s32
__builtin_arm_mve_vadcq_m_u32
__builtin_arm_mve_vadcq_s32
__builtin_arm_mve_vadcq_u32
__builtin_arm_mve_vaddlvaq_p_s32
__builtin_arm_mve_vaddlvaq_p_u32
__builtin_arm_mve_vaddlvaq_s32
__builtin_arm_mve_vaddlvaq_u32
__builtin_arm_mve_vaddlvq_p_s32
__builtin_arm_mve_vaddlvq_p_u32
__builtin_arm_mve_vaddlvq_s32
__builtin_arm_mve_vaddlvq_u32
__builtin_arm_mve_vaddq_f16
__builtin_arm_mve_vaddq_f32
__builtin_arm_mve_vaddq_m_f16
__builtin_arm_mve_vaddq_m_f32
__builtin_arm_mve_vaddq_m_n_f16
__builtin_arm_mve_vaddq_m_n_f32
__builtin_arm_mve_vaddq_m_n_s16
__builtin_arm_mve_vaddq_m_n_s32
__builtin_arm_mve_vaddq_m_n_s8
__builtin_arm_mve_vaddq_m_n_u16
__builtin_arm_mve_vaddq_m_n_u32
__builtin_arm_mve_vaddq_m_n_u8
__builtin_arm_mve_vaddq_m_s16
__builtin_arm_mve_vaddq_m_s32
__builtin_arm_mve_vaddq_m_s8
__builtin_arm_mve_vaddq_m_u16
__builtin_arm_mve_vaddq_m_u32
__builtin_arm_mve_vaddq_m_u8
__builtin_arm_mve_vaddq_n_f16
__builtin_arm_mve_vaddq_n_f32
__builtin_arm_mve_vaddq_n_s16
__builtin_arm_mve_vaddq_n_s32
__builtin_arm_mve_vaddq_n_s8
__builtin_arm_mve_vaddq_n_u16
__builtin_arm_mve_vaddq_n_u32
__builtin_arm_mve_vaddq_n_u8
__builtin_arm_mve_vaddq_s16
__builtin_arm_mve_vaddq_s32
__builtin_arm_mve_vaddq_s8
__builtin_arm_mve_vaddq_u16
__builtin_arm_mve_vaddq_u32
__builtin_arm_mve_vaddq_u8
__builtin_arm_mve_vaddq_x_f16
__builtin_arm_mve_vaddq_x_f32
__builtin_arm_mve_vaddq_x_n_f16
__builtin_arm_mve_vaddq_x_n_f32
__builtin_arm_mve_vaddq_x_n_s16
__builtin_arm_mve_vaddq_x_n_s32
__builtin_arm_mve_vaddq_x_n_s8
__builtin_arm_mve_vaddq_x_n_u16
__builtin_arm_mve_vaddq_x_n_u32
__builtin_arm_mve_vaddq_x_n_u8
__builtin_arm_mve_vaddq_x_s16
__builtin_arm_mve_vaddq_x_s32
__builtin_arm_mve_vaddq_x_s8
__builtin_arm_mve_vaddq_x_u16
__builtin_arm_mve_vaddq_x_u32
__builtin_arm_mve_vaddq_x_u8
__builtin_arm_mve_vaddvaq_p_s16
__builtin_arm_mve_vaddvaq_p_s32
__builtin_arm_mve_vaddvaq_p_s8
__builtin_arm_mve_vaddvaq_p_u16
__builtin_arm_mve_vaddvaq_p_u32
__builtin_arm_mve_vaddvaq_p_u8
__builtin_arm_mve_vaddvaq_s16
__builtin_arm_mve_vaddvaq_s32
__builtin_arm_mve_vaddvaq_s8
__builtin_arm_mve_vaddvaq_u16
__builtin_arm_mve_vaddvaq_u32
__builtin_arm_mve_vaddvaq_u8
__builtin_arm_mve_vaddvq_p_s16
__builtin_arm_mve_vaddvq_p_s32
__builtin_arm_mve_vaddvq_p_s8
__builtin_arm_mve_vaddvq_p_u16
__builtin_arm_mve_vaddvq_p_u32
__builtin_arm_mve_vaddvq_p_u8
__builtin_arm_mve_vaddvq_s16
__builtin_arm_mve_vaddvq_s32
__builtin_arm_mve_vaddvq_s8
__builtin_arm_mve_vaddvq_u16
__builtin_arm_mve_vaddvq_u32
__builtin_arm_mve_vaddvq_u8
__builtin_arm_mve_vandq_f16
__builtin_arm_mve_vandq_f32
__builtin_arm_mve_vandq_m_f16
__builtin_arm_mve_vandq_m_f32
__builtin_arm_mve_vandq_m_s16
__builtin_arm_mve_vandq_m_s32
__builtin_arm_mve_vandq_m_s8
__builtin_arm_mve_vandq_m_u16
__builtin_arm_mve_vandq_m_u32
__builtin_arm_mve_vandq_m_u8
__builtin_arm_mve_vandq_s16
__builtin_arm_mve_vandq_s32
__builtin_arm_mve_vandq_s8
__builtin_arm_mve_vandq_u16
__builtin_arm_mve_vandq_u32
__builtin_arm_mve_vandq_u8
__builtin_arm_mve_vandq_x_f16
__builtin_arm_mve_vandq_x_f32
__builtin_arm_mve_vandq_x_s16
__builtin_arm_mve_vandq_x_s32
__builtin_arm_mve_vandq_x_s8
__builtin_arm_mve_vandq_x_u16
__builtin_arm_mve_vandq_x_u32
__builtin_arm_mve_vandq_x_u8
__builtin_arm_mve_vbicq_f16
__builtin_arm_mve_vbicq_f32
__builtin_arm_mve_vbicq_m_f16
__builtin_arm_mve_vbicq_m_f32
__builtin_arm_mve_vbicq_m_n_s16
__builtin_arm_mve_vbicq_m_n_s32
__builtin_arm_mve_vbicq_m_n_u16
__builtin_arm_mve_vbicq_m_n_u32
__builtin_arm_mve_vbicq_m_s16
__builtin_arm_mve_vbicq_m_s32
__builtin_arm_mve_vbicq_m_s8
__builtin_arm_mve_vbicq_m_u16
__builtin_arm_mve_vbicq_m_u32
__builtin_arm_mve_vbicq_m_u8
__builtin_arm_mve_vbicq_n_s16
__builtin_arm_mve_vbicq_n_s32
__builtin_arm_mve_vbicq_n_u16
__builtin_arm_mve_vbicq_n_u32
__builtin_arm_mve_vbicq_s16
__builtin_arm_mve_vbicq_s32
__builtin_arm_mve_vbicq_s8
__builtin_arm_mve_vbicq_u16
__builtin_arm_mve_vbicq_u32
__builtin_arm_mve_vbicq_u8
__builtin_arm_mve_vbicq_x_f16
__builtin_arm_mve_vbicq_x_f32
__builtin_arm_mve_vbicq_x_s16
__builtin_arm_mve_vbicq_x_s32
__builtin_arm_mve_vbicq_x_s8
__builtin_arm_mve_vbicq_x_u16
__builtin_arm_mve_vbicq_x_u32
__builtin_arm_mve_vbicq_x_u8
__builtin_arm_mve_vbrsrq_m_n_f16
__builtin_arm_mve_vbrsrq_m_n_f32
__builtin_arm_mve_vbrsrq_m_n_s16
__builtin_arm_mve_vbrsrq_m_n_s32
__builtin_arm_mve_vbrsrq_m_n_s8
__builtin_arm_mve_vbrsrq_m_n_u16
__builtin_arm_mve_vbrsrq_m_n_u32
__builtin_arm_mve_vbrsrq_m_n_u8
__builtin_arm_mve_vbrsrq_n_f16
__builtin_arm_mve_vbrsrq_n_f32
__builtin_arm_mve_vbrsrq_n_s16
__builtin_arm_mve_vbrsrq_n_s32
__builtin_arm_mve_vbrsrq_n_s8
__builtin_arm_mve_vbrsrq_n_u16
__builtin_arm_mve_vbrsrq_n_u32
__builtin_arm_mve_vbrsrq_n_u8
__builtin_arm_mve_vbrsrq_x_n_f16
__builtin_arm_mve_vbrsrq_x_n_f32
__builtin_arm_mve_vbrsrq_x_n_s16
__builtin_arm_mve_vbrsrq_x_n_s32
__builtin_arm_mve_vbrsrq_x_n_s8
__builtin_arm_mve_vbrsrq_x_n_u16
__builtin_arm_mve_vbrsrq_x_n_u32
__builtin_arm_mve_vbrsrq_x_n_u8
__builtin_arm_mve_vcaddq_rot270_f16
__builtin_arm_mve_vcaddq_rot270_f32
__builtin_arm_mve_vcaddq_rot270_m_f16
__builtin_arm_mve_vcaddq_rot270_m_f32
__builtin_arm_mve_vcaddq_rot270_m_s16
__builtin_arm_mve_vcaddq_rot270_m_s32
__builtin_arm_mve_vcaddq_rot270_m_s8
__builtin_arm_mve_vcaddq_rot270_m_u16
__builtin_arm_mve_vcaddq_rot270_m_u32
__builtin_arm_mve_vcaddq_rot270_m_u8
__builtin_arm_mve_vcaddq_rot270_s16
__builtin_arm_mve_vcaddq_rot270_s32
__builtin_arm_mve_vcaddq_rot270_s8
__builtin_arm_mve_vcaddq_rot270_u16
__builtin_arm_mve_vcaddq_rot270_u32
__builtin_arm_mve_vcaddq_rot270_u8
__builtin_arm_mve_vcaddq_rot270_x_f16
__builtin_arm_mve_vcaddq_rot270_x_f32
__builtin_arm_mve_vcaddq_rot270_x_s16
__builtin_arm_mve_vcaddq_rot270_x_s32
__builtin_arm_mve_vcaddq_rot270_x_s8
__builtin_arm_mve_vcaddq_rot270_x_u16
__builtin_arm_mve_vcaddq_rot270_x_u32
__builtin_arm_mve_vcaddq_rot270_x_u8
__builtin_arm_mve_vcaddq_rot90_f16
__builtin_arm_mve_vcaddq_rot90_f32
__builtin_arm_mve_vcaddq_rot90_m_f16
__builtin_arm_mve_vcaddq_rot90_m_f32
__builtin_arm_mve_vcaddq_rot90_m_s16
__builtin_arm_mve_vcaddq_rot90_m_s32
__builtin_arm_mve_vcaddq_rot90_m_s8
__builtin_arm_mve_vcaddq_rot90_m_u16
__builtin_arm_mve_vcaddq_rot90_m_u32
__builtin_arm_mve_vcaddq_rot90_m_u8
__builtin_arm_mve_vcaddq_rot90_s16
__builtin_arm_mve_vcaddq_rot90_s32
__builtin_arm_mve_vcaddq_rot90_s8
__builtin_arm_mve_vcaddq_rot90_u16
__builtin_arm_mve_vcaddq_rot90_u32
__builtin_arm_mve_vcaddq_rot90_u8
__builtin_arm_mve_vcaddq_rot90_x_f16
__builtin_arm_mve_vcaddq_rot90_x_f32
__builtin_arm_mve_vcaddq_rot90_x_s16
__builtin_arm_mve_vcaddq_rot90_x_s32
__builtin_arm_mve_vcaddq_rot90_x_s8
__builtin_arm_mve_vcaddq_rot90_x_u16
__builtin_arm_mve_vcaddq_rot90_x_u32
__builtin_arm_mve_vcaddq_rot90_x_u8
__builtin_arm_mve_vclsq_m_s16
__builtin_arm_mve_vclsq_m_s32
__builtin_arm_mve_vclsq_m_s8
__builtin_arm_mve_vclsq_s16
__builtin_arm_mve_vclsq_s32
__builtin_arm_mve_vclsq_s8
__builtin_arm_mve_vclsq_x_s16
__builtin_arm_mve_vclsq_x_s32
__builtin_arm_mve_vclsq_x_s8
__builtin_arm_mve_vclzq_m_s16
__builtin_arm_mve_vclzq_m_s32
__builtin_arm_mve_vclzq_m_s8
__builtin_arm_mve_vclzq_m_u16
__builtin_arm_mve_vclzq_m_u32
__builtin_arm_mve_vclzq_m_u8
__builtin_arm_mve_vclzq_s16
__builtin_arm_mve_vclzq_s32
__builtin_arm_mve_vclzq_s8
__builtin_arm_mve_vclzq_u16
__builtin_arm_mve_vclzq_u32
__builtin_arm_mve_vclzq_u8
__builtin_arm_mve_vclzq_x_s16
__builtin_arm_mve_vclzq_x_s32
__builtin_arm_mve_vclzq_x_s8
__builtin_arm_mve_vclzq_x_u16
__builtin_arm_mve_vclzq_x_u32
__builtin_arm_mve_vclzq_x_u8
__builtin_arm_mve_vcmlaq_f16
__builtin_arm_mve_vcmlaq_f32
__builtin_arm_mve_vcmlaq_m_f16
__builtin_arm_mve_vcmlaq_m_f32
__builtin_arm_mve_vcmlaq_rot180_f16
__builtin_arm_mve_vcmlaq_rot180_f32
__builtin_arm_mve_vcmlaq_rot180_m_f16
__builtin_arm_mve_vcmlaq_rot180_m_f32
__builtin_arm_mve_vcmlaq_rot270_f16
__builtin_arm_mve_vcmlaq_rot270_f32
__builtin_arm_mve_vcmlaq_rot270_m_f16
__builtin_arm_mve_vcmlaq_rot270_m_f32
__builtin_arm_mve_vcmlaq_rot90_f16
__builtin_arm_mve_vcmlaq_rot90_f32
__builtin_arm_mve_vcmlaq_rot90_m_f16
__builtin_arm_mve_vcmlaq_rot90_m_f32
__builtin_arm_mve_vcmpcsq_m_n_u16
__builtin_arm_mve_vcmpcsq_m_n_u32
__builtin_arm_mve_vcmpcsq_m_n_u8
__builtin_arm_mve_vcmpcsq_m_u16
__builtin_arm_mve_vcmpcsq_m_u32
__builtin_arm_mve_vcmpcsq_m_u8
__builtin_arm_mve_vcmpcsq_n_u16
__builtin_arm_mve_vcmpcsq_n_u32
__builtin_arm_mve_vcmpcsq_n_u8
__builtin_arm_mve_vcmpcsq_u16
__builtin_arm_mve_vcmpcsq_u32
__builtin_arm_mve_vcmpcsq_u8
__builtin_arm_mve_vcmpeqq_f16
__builtin_arm_mve_vcmpeqq_f32
__builtin_arm_mve_vcmpeqq_m_f16
__builtin_arm_mve_vcmpeqq_m_f32
__builtin_arm_mve_vcmpeqq_m_n_f16
__builtin_arm_mve_vcmpeqq_m_n_f32
__builtin_arm_mve_vcmpeqq_m_n_s16
__builtin_arm_mve_vcmpeqq_m_n_s32
__builtin_arm_mve_vcmpeqq_m_n_s8
__builtin_arm_mve_vcmpeqq_m_n_u16
__builtin_arm_mve_vcmpeqq_m_n_u32
__builtin_arm_mve_vcmpeqq_m_n_u8
__builtin_arm_mve_vcmpeqq_m_s16
__builtin_arm_mve_vcmpeqq_m_s32
__builtin_arm_mve_vcmpeqq_m_s8
__builtin_arm_mve_vcmpeqq_m_u16
__builtin_arm_mve_vcmpeqq_m_u32
__builtin_arm_mve_vcmpeqq_m_u8
__builtin_arm_mve_vcmpeqq_n_f16
__builtin_arm_mve_vcmpeqq_n_f32
__builtin_arm_mve_vcmpeqq_n_s16
__builtin_arm_mve_vcmpeqq_n_s32
__builtin_arm_mve_vcmpeqq_n_s8
__builtin_arm_mve_vcmpeqq_n_u16
__builtin_arm_mve_vcmpeqq_n_u32
__builtin_arm_mve_vcmpeqq_n_u8
__builtin_arm_mve_vcmpeqq_s16
__builtin_arm_mve_vcmpeqq_s32
__builtin_arm_mve_vcmpeqq_s8
__builtin_arm_mve_vcmpeqq_u16
__builtin_arm_mve_vcmpeqq_u32
__builtin_arm_mve_vcmpeqq_u8
__builtin_arm_mve_vcmpgeq_f16
__builtin_arm_mve_vcmpgeq_f32
__builtin_arm_mve_vcmpgeq_m_f16
__builtin_arm_mve_vcmpgeq_m_f32
__builtin_arm_mve_vcmpgeq_m_n_f16
__builtin_arm_mve_vcmpgeq_m_n_f32
__builtin_arm_mve_vcmpgeq_m_n_s16
__builtin_arm_mve_vcmpgeq_m_n_s32
__builtin_arm_mve_vcmpgeq_m_n_s8
__builtin_arm_mve_vcmpgeq_m_s16
__builtin_arm_mve_vcmpgeq_m_s32
__builtin_arm_mve_vcmpgeq_m_s8
__builtin_arm_mve_vcmpgeq_n_f16
__builtin_arm_mve_vcmpgeq_n_f32
__builtin_arm_mve_vcmpgeq_n_s16
__builtin_arm_mve_vcmpgeq_n_s32
__builtin_arm_mve_vcmpgeq_n_s8
__builtin_arm_mve_vcmpgeq_s16
__builtin_arm_mve_vcmpgeq_s32
__builtin_arm_mve_vcmpgeq_s8
__builtin_arm_mve_vcmpgtq_f16
__builtin_arm_mve_vcmpgtq_f32
__builtin_arm_mve_vcmpgtq_m_f16
__builtin_arm_mve_vcmpgtq_m_f32
__builtin_arm_mve_vcmpgtq_m_n_f16
__builtin_arm_mve_vcmpgtq_m_n_f32
__builtin_arm_mve_vcmpgtq_m_n_s16
__builtin_arm_mve_vcmpgtq_m_n_s32
__builtin_arm_mve_vcmpgtq_m_n_s8
__builtin_arm_mve_vcmpgtq_m_s16
__builtin_arm_mve_vcmpgtq_m_s32
__builtin_arm_mve_vcmpgtq_m_s8
__builtin_arm_mve_vcmpgtq_n_f16
__builtin_arm_mve_vcmpgtq_n_f32
__builtin_arm_mve_vcmpgtq_n_s16
__builtin_arm_mve_vcmpgtq_n_s32
__builtin_arm_mve_vcmpgtq_n_s8
__builtin_arm_mve_vcmpgtq_s16
__builtin_arm_mve_vcmpgtq_s32
__builtin_arm_mve_vcmpgtq_s8
__builtin_arm_mve_vcmphiq_m_n_u16
__builtin_arm_mve_vcmphiq_m_n_u32
__builtin_arm_mve_vcmphiq_m_n_u8
__builtin_arm_mve_vcmphiq_m_u16
__builtin_arm_mve_vcmphiq_m_u32
__builtin_arm_mve_vcmphiq_m_u8
__builtin_arm_mve_vcmphiq_n_u16
__builtin_arm_mve_vcmphiq_n_u32
__builtin_arm_mve_vcmphiq_n_u8
__builtin_arm_mve_vcmphiq_u16
__builtin_arm_mve_vcmphiq_u32
__builtin_arm_mve_vcmphiq_u8
__builtin_arm_mve_vcmpleq_f16
__builtin_arm_mve_vcmpleq_f32
__builtin_arm_mve_vcmpleq_m_f16
__builtin_arm_mve_vcmpleq_m_f32
__builtin_arm_mve_vcmpleq_m_n_f16
__builtin_arm_mve_vcmpleq_m_n_f32
__builtin_arm_mve_vcmpleq_m_n_s16
__builtin_arm_mve_vcmpleq_m_n_s32
__builtin_arm_mve_vcmpleq_m_n_s8
__builtin_arm_mve_vcmpleq_m_s16
__builtin_arm_mve_vcmpleq_m_s32
__builtin_arm_mve_vcmpleq_m_s8
__builtin_arm_mve_vcmpleq_n_f16
__builtin_arm_mve_vcmpleq_n_f32
__builtin_arm_mve_vcmpleq_n_s16
__builtin_arm_mve_vcmpleq_n_s32
__builtin_arm_mve_vcmpleq_n_s8
__builtin_arm_mve_vcmpleq_s16
__builtin_arm_mve_vcmpleq_s32
__builtin_arm_mve_vcmpleq_s8
__builtin_arm_mve_vcmpltq_f16
__builtin_arm_mve_vcmpltq_f32
__builtin_arm_mve_vcmpltq_m_f16
__builtin_arm_mve_vcmpltq_m_f32
__builtin_arm_mve_vcmpltq_m_n_f16
__builtin_arm_mve_vcmpltq_m_n_f32
__builtin_arm_mve_vcmpltq_m_n_s16
__builtin_arm_mve_vcmpltq_m_n_s32
__builtin_arm_mve_vcmpltq_m_n_s8
__builtin_arm_mve_vcmpltq_m_s16
__builtin_arm_mve_vcmpltq_m_s32
__builtin_arm_mve_vcmpltq_m_s8
__builtin_arm_mve_vcmpltq_n_f16
__builtin_arm_mve_vcmpltq_n_f32
__builtin_arm_mve_vcmpltq_n_s16
__builtin_arm_mve_vcmpltq_n_s32
__builtin_arm_mve_vcmpltq_n_s8
__builtin_arm_mve_vcmpltq_s16
__builtin_arm_mve_vcmpltq_s32
__builtin_arm_mve_vcmpltq_s8
__builtin_arm_mve_vcmpneq_f16
__builtin_arm_mve_vcmpneq_f32
__builtin_arm_mve_vcmpneq_m_f16
__builtin_arm_mve_vcmpneq_m_f32
__builtin_arm_mve_vcmpneq_m_n_f16
__builtin_arm_mve_vcmpneq_m_n_f32
__builtin_arm_mve_vcmpneq_m_n_s16
__builtin_arm_mve_vcmpneq_m_n_s32
__builtin_arm_mve_vcmpneq_m_n_s8
__builtin_arm_mve_vcmpneq_m_n_u16
__builtin_arm_mve_vcmpneq_m_n_u32
__builtin_arm_mve_vcmpneq_m_n_u8
__builtin_arm_mve_vcmpneq_m_s16
__builtin_arm_mve_vcmpneq_m_s32
__builtin_arm_mve_vcmpneq_m_s8
__builtin_arm_mve_vcmpneq_m_u16
__builtin_arm_mve_vcmpneq_m_u32
__builtin_arm_mve_vcmpneq_m_u8
__builtin_arm_mve_vcmpneq_n_f16
__builtin_arm_mve_vcmpneq_n_f32
__builtin_arm_mve_vcmpneq_n_s16
__builtin_arm_mve_vcmpneq_n_s32
__builtin_arm_mve_vcmpneq_n_s8
__builtin_arm_mve_vcmpneq_n_u16
__builtin_arm_mve_vcmpneq_n_u32
__builtin_arm_mve_vcmpneq_n_u8
__builtin_arm_mve_vcmpneq_s16
__builtin_arm_mve_vcmpneq_s32
__builtin_arm_mve_vcmpneq_s8
__builtin_arm_mve_vcmpneq_u16
__builtin_arm_mve_vcmpneq_u32
__builtin_arm_mve_vcmpneq_u8
__builtin_arm_mve_vcmulq_f16
__builtin_arm_mve_vcmulq_f32
__builtin_arm_mve_vcmulq_m_f16
__builtin_arm_mve_vcmulq_m_f32
__builtin_arm_mve_vcmulq_rot180_f16
__builtin_arm_mve_vcmulq_rot180_f32
__builtin_arm_mve_vcmulq_rot180_m_f16
__builtin_arm_mve_vcmulq_rot180_m_f32
__builtin_arm_mve_vcmulq_rot180_x_f16
__builtin_arm_mve_vcmulq_rot180_x_f32
__builtin_arm_mve_vcmulq_rot270_f16
__builtin_arm_mve_vcmulq_rot270_f32
__builtin_arm_mve_vcmulq_rot270_m_f16
__builtin_arm_mve_vcmulq_rot270_m_f32
__builtin_arm_mve_vcmulq_rot270_x_f16
__builtin_arm_mve_vcmulq_rot270_x_f32
__builtin_arm_mve_vcmulq_rot90_f16
__builtin_arm_mve_vcmulq_rot90_f32
__builtin_arm_mve_vcmulq_rot90_m_f16
__builtin_arm_mve_vcmulq_rot90_m_f32
__builtin_arm_mve_vcmulq_rot90_x_f16
__builtin_arm_mve_vcmulq_rot90_x_f32
__builtin_arm_mve_vcmulq_x_f16
__builtin_arm_mve_vcmulq_x_f32
__builtin_arm_mve_vcreateq_f16
__builtin_arm_mve_vcreateq_f32
__builtin_arm_mve_vcreateq_s16
__builtin_arm_mve_vcreateq_s32
__builtin_arm_mve_vcreateq_s64
__builtin_arm_mve_vcreateq_s8
__builtin_arm_mve_vcreateq_u16
__builtin_arm_mve_vcreateq_u32
__builtin_arm_mve_vcreateq_u64
__builtin_arm_mve_vcreateq_u8
__builtin_arm_mve_vctp16q
__builtin_arm_mve_vctp16q_m
__builtin_arm_mve_vctp32q
__builtin_arm_mve_vctp32q_m
__builtin_arm_mve_vctp64q
__builtin_arm_mve_vctp64q_m
__builtin_arm_mve_vctp8q
__builtin_arm_mve_vctp8q_m
__builtin_arm_mve_vcvtaq_m_s16_f16
__builtin_arm_mve_vcvtaq_m_s32_f32
__builtin_arm_mve_vcvtaq_m_u16_f16
__builtin_arm_mve_vcvtaq_m_u32_f32
__builtin_arm_mve_vcvtaq_s16_f16
__builtin_arm_mve_vcvtaq_s32_f32
__builtin_arm_mve_vcvtaq_u16_f16
__builtin_arm_mve_vcvtaq_u32_f32
__builtin_arm_mve_vcvtaq_x_s16_f16
__builtin_arm_mve_vcvtaq_x_s32_f32
__builtin_arm_mve_vcvtaq_x_u16_f16
__builtin_arm_mve_vcvtaq_x_u32_f32
__builtin_arm_mve_vcvtbq_f16_f32
__builtin_arm_mve_vcvtbq_f32_f16
__builtin_arm_mve_vcvtbq_m_f16_f32
__builtin_arm_mve_vcvtbq_m_f32_f16
__builtin_arm_mve_vcvtbq_x_f32_f16
__builtin_arm_mve_vcvtmq_m_s16_f16
__builtin_arm_mve_vcvtmq_m_s32_f32
__builtin_arm_mve_vcvtmq_m_u16_f16
__builtin_arm_mve_vcvtmq_m_u32_f32
__builtin_arm_mve_vcvtmq_s16_f16
__builtin_arm_mve_vcvtmq_s32_f32
__builtin_arm_mve_vcvtmq_u16_f16
__builtin_arm_mve_vcvtmq_u32_f32
__builtin_arm_mve_vcvtmq_x_s16_f16
__builtin_arm_mve_vcvtmq_x_s32_f32
__builtin_arm_mve_vcvtmq_x_u16_f16
__builtin_arm_mve_vcvtmq_x_u32_f32
__builtin_arm_mve_vcvtnq_m_s16_f16
__builtin_arm_mve_vcvtnq_m_s32_f32
__builtin_arm_mve_vcvtnq_m_u16_f16
__builtin_arm_mve_vcvtnq_m_u32_f32
__builtin_arm_mve_vcvtnq_s16_f16
__builtin_arm_mve_vcvtnq_s32_f32
__builtin_arm_mve_vcvtnq_u16_f16
__builtin_arm_mve_vcvtnq_u32_f32
__builtin_arm_mve_vcvtnq_x_s16_f16
__builtin_arm_mve_vcvtnq_x_s32_f32
__builtin_arm_mve_vcvtnq_x_u16_f16
__builtin_arm_mve_vcvtnq_x_u32_f32
__builtin_arm_mve_vcvtpq_m_s16_f16
__builtin_arm_mve_vcvtpq_m_s32_f32
__builtin_arm_mve_vcvtpq_m_u16_f16
__builtin_arm_mve_vcvtpq_m_u32_f32
__builtin_arm_mve_vcvtpq_s16_f16
__builtin_arm_mve_vcvtpq_s32_f32
__builtin_arm_mve_vcvtpq_u16_f16
__builtin_arm_mve_vcvtpq_u32_f32
__builtin_arm_mve_vcvtpq_x_s16_f16
__builtin_arm_mve_vcvtpq_x_s32_f32
__builtin_arm_mve_vcvtpq_x_u16_f16
__builtin_arm_mve_vcvtpq_x_u32_f32
__builtin_arm_mve_vcvtq_f16_s16
__builtin_arm_mve_vcvtq_f16_u16
__builtin_arm_mve_vcvtq_f32_s32
__builtin_arm_mve_vcvtq_f32_u32
__builtin_arm_mve_vcvtq_m_f16_s16
__builtin_arm_mve_vcvtq_m_f16_u16
__builtin_arm_mve_vcvtq_m_f32_s32
__builtin_arm_mve_vcvtq_m_f32_u32
__builtin_arm_mve_vcvtq_m_n_f16_s16
__builtin_arm_mve_vcvtq_m_n_f16_u16
__builtin_arm_mve_vcvtq_m_n_f32_s32
__builtin_arm_mve_vcvtq_m_n_f32_u32
__builtin_arm_mve_vcvtq_m_n_s16_f16
__builtin_arm_mve_vcvtq_m_n_s32_f32
__builtin_arm_mve_vcvtq_m_n_u16_f16
__builtin_arm_mve_vcvtq_m_n_u32_f32
__builtin_arm_mve_vcvtq_m_s16_f16
__builtin_arm_mve_vcvtq_m_s32_f32
__builtin_arm_mve_vcvtq_m_u16_f16
__builtin_arm_mve_vcvtq_m_u32_f32
__builtin_arm_mve_vcvtq_n_f16_s16
__builtin_arm_mve_vcvtq_n_f16_u16
__builtin_arm_mve_vcvtq_n_f32_s32
__builtin_arm_mve_vcvtq_n_f32_u32
__builtin_arm_mve_vcvtq_n_s16_f16
__builtin_arm_mve_vcvtq_n_s32_f32
__builtin_arm_mve_vcvtq_n_u16_f16
__builtin_arm_mve_vcvtq_n_u32_f32
__builtin_arm_mve_vcvtq_s16_f16
__builtin_arm_mve_vcvtq_s32_f32
__builtin_arm_mve_vcvtq_u16_f16
__builtin_arm_mve_vcvtq_u32_f32
__builtin_arm_mve_vcvtq_x_f16_s16
__builtin_arm_mve_vcvtq_x_f16_u16
__builtin_arm_mve_vcvtq_x_f32_s32
__builtin_arm_mve_vcvtq_x_f32_u32
__builtin_arm_mve_vcvtq_x_n_f16_s16
__builtin_arm_mve_vcvtq_x_n_f16_u16
__builtin_arm_mve_vcvtq_x_n_f32_s32
__builtin_arm_mve_vcvtq_x_n_f32_u32
__builtin_arm_mve_vcvtq_x_n_s16_f16
__builtin_arm_mve_vcvtq_x_n_s32_f32
__builtin_arm_mve_vcvtq_x_n_u16_f16
__builtin_arm_mve_vcvtq_x_n_u32_f32
__builtin_arm_mve_vcvtq_x_s16_f16
__builtin_arm_mve_vcvtq_x_s32_f32
__builtin_arm_mve_vcvtq_x_u16_f16
__builtin_arm_mve_vcvtq_x_u32_f32
__builtin_arm_mve_vcvttq_f16_f32
__builtin_arm_mve_vcvttq_f32_f16
__builtin_arm_mve_vcvttq_m_f16_f32
__builtin_arm_mve_vcvttq_m_f32_f16
__builtin_arm_mve_vcvttq_x_f32_f16
__builtin_arm_mve_vddupq_m_n_u16
__builtin_arm_mve_vddupq_m_n_u32
__builtin_arm_mve_vddupq_m_n_u8
__builtin_arm_mve_vddupq_m_wb_u16
__builtin_arm_mve_vddupq_m_wb_u32
__builtin_arm_mve_vddupq_m_wb_u8
__builtin_arm_mve_vddupq_n_u16
__builtin_arm_mve_vddupq_n_u32
__builtin_arm_mve_vddupq_n_u8
__builtin_arm_mve_vddupq_wb_u16
__builtin_arm_mve_vddupq_wb_u32
__builtin_arm_mve_vddupq_wb_u8
__builtin_arm_mve_vddupq_x_n_u16
__builtin_arm_mve_vddupq_x_n_u32
__builtin_arm_mve_vddupq_x_n_u8
__builtin_arm_mve_vddupq_x_wb_u16
__builtin_arm_mve_vddupq_x_wb_u32
__builtin_arm_mve_vddupq_x_wb_u8
__builtin_arm_mve_vdupq_m_n_f16
__builtin_arm_mve_vdupq_m_n_f32
__builtin_arm_mve_vdupq_m_n_s16
__builtin_arm_mve_vdupq_m_n_s32
__builtin_arm_mve_vdupq_m_n_s8
__builtin_arm_mve_vdupq_m_n_u16
__builtin_arm_mve_vdupq_m_n_u32
__builtin_arm_mve_vdupq_m_n_u8
__builtin_arm_mve_vdupq_n_f16
__builtin_arm_mve_vdupq_n_f32
__builtin_arm_mve_vdupq_n_s16
__builtin_arm_mve_vdupq_n_s32
__builtin_arm_mve_vdupq_n_s8
__builtin_arm_mve_vdupq_n_u16
__builtin_arm_mve_vdupq_n_u32
__builtin_arm_mve_vdupq_n_u8
__builtin_arm_mve_vdupq_x_n_f16
__builtin_arm_mve_vdupq_x_n_f32
__builtin_arm_mve_vdupq_x_n_s16
__builtin_arm_mve_vdupq_x_n_s32
__builtin_arm_mve_vdupq_x_n_s8
__builtin_arm_mve_vdupq_x_n_u16
__builtin_arm_mve_vdupq_x_n_u32
__builtin_arm_mve_vdupq_x_n_u8
__builtin_arm_mve_vdwdupq_m_n_u16
__builtin_arm_mve_vdwdupq_m_n_u32
__builtin_arm_mve_vdwdupq_m_n_u8
__builtin_arm_mve_vdwdupq_m_wb_u16
__builtin_arm_mve_vdwdupq_m_wb_u32
__builtin_arm_mve_vdwdupq_m_wb_u8
__builtin_arm_mve_vdwdupq_n_u16
__builtin_arm_mve_vdwdupq_n_u32
__builtin_arm_mve_vdwdupq_n_u8
__builtin_arm_mve_vdwdupq_wb_u16
__builtin_arm_mve_vdwdupq_wb_u32
__builtin_arm_mve_vdwdupq_wb_u8
__builtin_arm_mve_vdwdupq_x_n_u16
__builtin_arm_mve_vdwdupq_x_n_u32
__builtin_arm_mve_vdwdupq_x_n_u8
__builtin_arm_mve_vdwdupq_x_wb_u16
__builtin_arm_mve_vdwdupq_x_wb_u32
__builtin_arm_mve_vdwdupq_x_wb_u8
__builtin_arm_mve_veorq_f16
__builtin_arm_mve_veorq_f32
__builtin_arm_mve_veorq_m_f16
__builtin_arm_mve_veorq_m_f32
__builtin_arm_mve_veorq_m_s16
__builtin_arm_mve_veorq_m_s32
__builtin_arm_mve_veorq_m_s8
__builtin_arm_mve_veorq_m_u16
__builtin_arm_mve_veorq_m_u32
__builtin_arm_mve_veorq_m_u8
__builtin_arm_mve_veorq_s16
__builtin_arm_mve_veorq_s32
__builtin_arm_mve_veorq_s8
__builtin_arm_mve_veorq_u16
__builtin_arm_mve_veorq_u32
__builtin_arm_mve_veorq_u8
__builtin_arm_mve_veorq_x_f16
__builtin_arm_mve_veorq_x_f32
__builtin_arm_mve_veorq_x_s16
__builtin_arm_mve_veorq_x_s32
__builtin_arm_mve_veorq_x_s8
__builtin_arm_mve_veorq_x_u16
__builtin_arm_mve_veorq_x_u32
__builtin_arm_mve_veorq_x_u8
__builtin_arm_mve_vfmaq_f16
__builtin_arm_mve_vfmaq_f32
__builtin_arm_mve_vfmaq_m_f16
__builtin_arm_mve_vfmaq_m_f32
__builtin_arm_mve_vfmaq_m_n_f16
__builtin_arm_mve_vfmaq_m_n_f32
__builtin_arm_mve_vfmaq_n_f16
__builtin_arm_mve_vfmaq_n_f32
__builtin_arm_mve_vfmasq_m_n_f16
__builtin_arm_mve_vfmasq_m_n_f32
__builtin_arm_mve_vfmasq_n_f16
__builtin_arm_mve_vfmasq_n_f32
__builtin_arm_mve_vfmsq_f16
__builtin_arm_mve_vfmsq_f32
__builtin_arm_mve_vfmsq_m_f16
__builtin_arm_mve_vfmsq_m_f32
__builtin_arm_mve_vgetq_lane_f16
__builtin_arm_mve_vgetq_lane_f32
__builtin_arm_mve_vgetq_lane_s16
__builtin_arm_mve_vgetq_lane_s32
__builtin_arm_mve_vgetq_lane_s64
__builtin_arm_mve_vgetq_lane_s8
__builtin_arm_mve_vgetq_lane_u16
__builtin_arm_mve_vgetq_lane_u32
__builtin_arm_mve_vgetq_lane_u64
__builtin_arm_mve_vgetq_lane_u8
__builtin_arm_mve_vhaddq_m_n_s16
__builtin_arm_mve_vhaddq_m_n_s32
__builtin_arm_mve_vhaddq_m_n_s8
__builtin_arm_mve_vhaddq_m_n_u16
__builtin_arm_mve_vhaddq_m_n_u32
__builtin_arm_mve_vhaddq_m_n_u8
__builtin_arm_mve_vhaddq_m_s16
__builtin_arm_mve_vhaddq_m_s32
__builtin_arm_mve_vhaddq_m_s8
__builtin_arm_mve_vhaddq_m_u16
__builtin_arm_mve_vhaddq_m_u32
__builtin_arm_mve_vhaddq_m_u8
__builtin_arm_mve_vhaddq_n_s16
__builtin_arm_mve_vhaddq_n_s32
__builtin_arm_mve_vhaddq_n_s8
__builtin_arm_mve_vhaddq_n_u16
__builtin_arm_mve_vhaddq_n_u32
__builtin_arm_mve_vhaddq_n_u8
__builtin_arm_mve_vhaddq_s16
__builtin_arm_mve_vhaddq_s32
__builtin_arm_mve_vhaddq_s8
__builtin_arm_mve_vhaddq_u16
__builtin_arm_mve_vhaddq_u32
__builtin_arm_mve_vhaddq_u8
__builtin_arm_mve_vhaddq_x_n_s16
__builtin_arm_mve_vhaddq_x_n_s32
__builtin_arm_mve_vhaddq_x_n_s8
__builtin_arm_mve_vhaddq_x_n_u16
__builtin_arm_mve_vhaddq_x_n_u32
__builtin_arm_mve_vhaddq_x_n_u8
__builtin_arm_mve_vhaddq_x_s16
__builtin_arm_mve_vhaddq_x_s32
__builtin_arm_mve_vhaddq_x_s8
__builtin_arm_mve_vhaddq_x_u16
__builtin_arm_mve_vhaddq_x_u32
__builtin_arm_mve_vhaddq_x_u8
__builtin_arm_mve_vhcaddq_rot270_m_s16
__builtin_arm_mve_vhcaddq_rot270_m_s32
__builtin_arm_mve_vhcaddq_rot270_m_s8
__builtin_arm_mve_vhcaddq_rot270_s16
__builtin_arm_mve_vhcaddq_rot270_s32
__builtin_arm_mve_vhcaddq_rot270_s8
__builtin_arm_mve_vhcaddq_rot270_x_s16
__builtin_arm_mve_vhcaddq_rot270_x_s32
__builtin_arm_mve_vhcaddq_rot270_x_s8
__builtin_arm_mve_vhcaddq_rot90_m_s16
__builtin_arm_mve_vhcaddq_rot90_m_s32
__builtin_arm_mve_vhcaddq_rot90_m_s8
__builtin_arm_mve_vhcaddq_rot90_s16
__builtin_arm_mve_vhcaddq_rot90_s32
__builtin_arm_mve_vhcaddq_rot90_s8
__builtin_arm_mve_vhcaddq_rot90_x_s16
__builtin_arm_mve_vhcaddq_rot90_x_s32
__builtin_arm_mve_vhcaddq_rot90_x_s8
__builtin_arm_mve_vhsubq_m_n_s16
__builtin_arm_mve_vhsubq_m_n_s32
__builtin_arm_mve_vhsubq_m_n_s8
__builtin_arm_mve_vhsubq_m_n_u16
__builtin_arm_mve_vhsubq_m_n_u32
__builtin_arm_mve_vhsubq_m_n_u8
__builtin_arm_mve_vhsubq_m_s16
__builtin_arm_mve_vhsubq_m_s32
__builtin_arm_mve_vhsubq_m_s8
__builtin_arm_mve_vhsubq_m_u16
__builtin_arm_mve_vhsubq_m_u32
__builtin_arm_mve_vhsubq_m_u8
__builtin_arm_mve_vhsubq_n_s16
__builtin_arm_mve_vhsubq_n_s32
__builtin_arm_mve_vhsubq_n_s8
__builtin_arm_mve_vhsubq_n_u16
__builtin_arm_mve_vhsubq_n_u32
__builtin_arm_mve_vhsubq_n_u8
__builtin_arm_mve_vhsubq_s16
__builtin_arm_mve_vhsubq_s32
__builtin_arm_mve_vhsubq_s8
__builtin_arm_mve_vhsubq_u16
__builtin_arm_mve_vhsubq_u32
__builtin_arm_mve_vhsubq_u8
__builtin_arm_mve_vhsubq_x_n_s16
__builtin_arm_mve_vhsubq_x_n_s32
__builtin_arm_mve_vhsubq_x_n_s8
__builtin_arm_mve_vhsubq_x_n_u16
__builtin_arm_mve_vhsubq_x_n_u32
__builtin_arm_mve_vhsubq_x_n_u8
__builtin_arm_mve_vhsubq_x_s16
__builtin_arm_mve_vhsubq_x_s32
__builtin_arm_mve_vhsubq_x_s8
__builtin_arm_mve_vhsubq_x_u16
__builtin_arm_mve_vhsubq_x_u32
__builtin_arm_mve_vhsubq_x_u8
__builtin_arm_mve_vidupq_m_n_u16
__builtin_arm_mve_vidupq_m_n_u32
__builtin_arm_mve_vidupq_m_n_u8
__builtin_arm_mve_vidupq_m_wb_u16
__builtin_arm_mve_vidupq_m_wb_u32
__builtin_arm_mve_vidupq_m_wb_u8
__builtin_arm_mve_vidupq_n_u16
__builtin_arm_mve_vidupq_n_u32
__builtin_arm_mve_vidupq_n_u8
__builtin_arm_mve_vidupq_wb_u16
__builtin_arm_mve_vidupq_wb_u32
__builtin_arm_mve_vidupq_wb_u8
__builtin_arm_mve_vidupq_x_n_u16
__builtin_arm_mve_vidupq_x_n_u32
__builtin_arm_mve_vidupq_x_n_u8
__builtin_arm_mve_vidupq_x_wb_u16
__builtin_arm_mve_vidupq_x_wb_u32
__builtin_arm_mve_vidupq_x_wb_u8
__builtin_arm_mve_viwdupq_m_n_u16
__builtin_arm_mve_viwdupq_m_n_u32
__builtin_arm_mve_viwdupq_m_n_u8
__builtin_arm_mve_viwdupq_m_wb_u16
__builtin_arm_mve_viwdupq_m_wb_u32
__builtin_arm_mve_viwdupq_m_wb_u8
__builtin_arm_mve_viwdupq_n_u16
__builtin_arm_mve_viwdupq_n_u32
__builtin_arm_mve_viwdupq_n_u8
__builtin_arm_mve_viwdupq_wb_u16
__builtin_arm_mve_viwdupq_wb_u32
__builtin_arm_mve_viwdupq_wb_u8
__builtin_arm_mve_viwdupq_x_n_u16
__builtin_arm_mve_viwdupq_x_n_u32
__builtin_arm_mve_viwdupq_x_n_u8
__builtin_arm_mve_viwdupq_x_wb_u16
__builtin_arm_mve_viwdupq_x_wb_u32
__builtin_arm_mve_viwdupq_x_wb_u8
__builtin_arm_mve_vld1q_f16
__builtin_arm_mve_vld1q_f32
__builtin_arm_mve_vld1q_s16
__builtin_arm_mve_vld1q_s32
__builtin_arm_mve_vld1q_s8
__builtin_arm_mve_vld1q_u16
__builtin_arm_mve_vld1q_u32
__builtin_arm_mve_vld1q_u8
__builtin_arm_mve_vld1q_z_f16
__builtin_arm_mve_vld1q_z_f32
__builtin_arm_mve_vld1q_z_s16
__builtin_arm_mve_vld1q_z_s32
__builtin_arm_mve_vld1q_z_s8
__builtin_arm_mve_vld1q_z_u16
__builtin_arm_mve_vld1q_z_u32
__builtin_arm_mve_vld1q_z_u8
__builtin_arm_mve_vld2q_f16
__builtin_arm_mve_vld2q_f32
__builtin_arm_mve_vld2q_s16
__builtin_arm_mve_vld2q_s32
__builtin_arm_mve_vld2q_s8
__builtin_arm_mve_vld2q_u16
__builtin_arm_mve_vld2q_u32
__builtin_arm_mve_vld2q_u8
__builtin_arm_mve_vld4q_f16
__builtin_arm_mve_vld4q_f32
__builtin_arm_mve_vld4q_s16
__builtin_arm_mve_vld4q_s32
__builtin_arm_mve_vld4q_s8
__builtin_arm_mve_vld4q_u16
__builtin_arm_mve_vld4q_u32
__builtin_arm_mve_vld4q_u8
__builtin_arm_mve_vldrbq_gather_offset_s16
__builtin_arm_mve_vldrbq_gather_offset_s32
__builtin_arm_mve_vldrbq_gather_offset_s8
__builtin_arm_mve_vldrbq_gather_offset_u16
__builtin_arm_mve_vldrbq_gather_offset_u32
__builtin_arm_mve_vldrbq_gather_offset_u8
__builtin_arm_mve_vldrbq_gather_offset_z_s16
__builtin_arm_mve_vldrbq_gather_offset_z_s32
__builtin_arm_mve_vldrbq_gather_offset_z_s8
__builtin_arm_mve_vldrbq_gather_offset_z_u16
__builtin_arm_mve_vldrbq_gather_offset_z_u32
__builtin_arm_mve_vldrbq_gather_offset_z_u8
__builtin_arm_mve_vldrbq_s16
__builtin_arm_mve_vldrbq_s32
__builtin_arm_mve_vldrbq_s8
__builtin_arm_mve_vldrbq_u16
__builtin_arm_mve_vldrbq_u32
__builtin_arm_mve_vldrbq_u8
__builtin_arm_mve_vldrbq_z_s16
__builtin_arm_mve_vldrbq_z_s32
__builtin_arm_mve_vldrbq_z_s8
__builtin_arm_mve_vldrbq_z_u16
__builtin_arm_mve_vldrbq_z_u32
__builtin_arm_mve_vldrbq_z_u8
__builtin_arm_mve_vldrdq_gather_base_s64
__builtin_arm_mve_vldrdq_gather_base_u64
__builtin_arm_mve_vldrdq_gather_base_wb_s64
__builtin_arm_mve_vldrdq_gather_base_wb_u64
__builtin_arm_mve_vldrdq_gather_base_wb_z_s64
__builtin_arm_mve_vldrdq_gather_base_wb_z_u64
__builtin_arm_mve_vldrdq_gather_base_z_s64
__builtin_arm_mve_vldrdq_gather_base_z_u64
__builtin_arm_mve_vldrdq_gather_offset_s64
__builtin_arm_mve_vldrdq_gather_offset_u64
__builtin_arm_mve_vldrdq_gather_offset_z_s64
__builtin_arm_mve_vldrdq_gather_offset_z_u64
__builtin_arm_mve_vldrdq_gather_shifted_offset_s64
__builtin_arm_mve_vldrdq_gather_shifted_offset_u64
__builtin_arm_mve_vldrdq_gather_shifted_offset_z_s64
__builtin_arm_mve_vldrdq_gather_shifted_offset_z_u64
__builtin_arm_mve_vldrhq_f16
__builtin_arm_mve_vldrhq_gather_offset_f16
__builtin_arm_mve_vldrhq_gather_offset_s16
__builtin_arm_mve_vldrhq_gather_offset_s32
__builtin_arm_mve_vldrhq_gather_offset_u16
__builtin_arm_mve_vldrhq_gather_offset_u32
__builtin_arm_mve_vldrhq_gather_offset_z_f16
__builtin_arm_mve_vldrhq_gather_offset_z_s16
__builtin_arm_mve_vldrhq_gather_offset_z_s32
__builtin_arm_mve_vldrhq_gather_offset_z_u16
__builtin_arm_mve_vldrhq_gather_offset_z_u32
__builtin_arm_mve_vldrhq_gather_shifted_offset_f16
__builtin_arm_mve_vldrhq_gather_shifted_offset_s16
__builtin_arm_mve_vldrhq_gather_shifted_offset_s32
__builtin_arm_mve_vldrhq_gather_shifted_offset_u16
__builtin_arm_mve_vldrhq_gather_shifted_offset_u32
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_f16
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_s16
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_s32
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_u16
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_u32
__builtin_arm_mve_vldrhq_s16
__builtin_arm_mve_vldrhq_s32
__builtin_arm_mve_vldrhq_u16
__builtin_arm_mve_vldrhq_u32
__builtin_arm_mve_vldrhq_z_f16
__builtin_arm_mve_vldrhq_z_s16
__builtin_arm_mve_vldrhq_z_s32
__builtin_arm_mve_vldrhq_z_u16
__builtin_arm_mve_vldrhq_z_u32
__builtin_arm_mve_vldrwq_f32
__builtin_arm_mve_vldrwq_gather_base_f32
__builtin_arm_mve_vldrwq_gather_base_s32
__builtin_arm_mve_vldrwq_gather_base_u32
__builtin_arm_mve_vldrwq_gather_base_wb_f32
__builtin_arm_mve_vldrwq_gather_base_wb_s32
__builtin_arm_mve_vldrwq_gather_base_wb_u32
__builtin_arm_mve_vldrwq_gather_base_wb_z_f32
__builtin_arm_mve_vldrwq_gather_base_wb_z_s32
__builtin_arm_mve_vldrwq_gather_base_wb_z_u32
__builtin_arm_mve_vldrwq_gather_base_z_f32
__builtin_arm_mve_vldrwq_gather_base_z_s32
__builtin_arm_mve_vldrwq_gather_base_z_u32
__builtin_arm_mve_vldrwq_gather_offset_f32
__builtin_arm_mve_vldrwq_gather_offset_s32
__builtin_arm_mve_vldrwq_gather_offset_u32
__builtin_arm_mve_vldrwq_gather_offset_z_f32
__builtin_arm_mve_vldrwq_gather_offset_z_s32
__builtin_arm_mve_vldrwq_gather_offset_z_u32
__builtin_arm_mve_vldrwq_gather_shifted_offset_f32
__builtin_arm_mve_vldrwq_gather_shifted_offset_s32
__builtin_arm_mve_vldrwq_gather_shifted_offset_u32
__builtin_arm_mve_vldrwq_gather_shifted_offset_z_f32
__builtin_arm_mve_vldrwq_gather_shifted_offset_z_s32
__builtin_arm_mve_vldrwq_gather_shifted_offset_z_u32
__builtin_arm_mve_vldrwq_s32
__builtin_arm_mve_vldrwq_u32
__builtin_arm_mve_vldrwq_z_f32
__builtin_arm_mve_vldrwq_z_s32
__builtin_arm_mve_vldrwq_z_u32
__builtin_arm_mve_vmaxaq_m_s16
__builtin_arm_mve_vmaxaq_m_s32
__builtin_arm_mve_vmaxaq_m_s8
__builtin_arm_mve_vmaxaq_s16
__builtin_arm_mve_vmaxaq_s32
__builtin_arm_mve_vmaxaq_s8
__builtin_arm_mve_vmaxavq_p_s16
__builtin_arm_mve_vmaxavq_p_s32
__builtin_arm_mve_vmaxavq_p_s8
__builtin_arm_mve_vmaxavq_s16
__builtin_arm_mve_vmaxavq_s32
__builtin_arm_mve_vmaxavq_s8
__builtin_arm_mve_vmaxnmaq_f16
__builtin_arm_mve_vmaxnmaq_f32
__builtin_arm_mve_vmaxnmaq_m_f16
__builtin_arm_mve_vmaxnmaq_m_f32
__builtin_arm_mve_vmaxnmavq_f16
__builtin_arm_mve_vmaxnmavq_f32
__builtin_arm_mve_vmaxnmavq_p_f16
__builtin_arm_mve_vmaxnmavq_p_f32
__builtin_arm_mve_vmaxnmq_f16
__builtin_arm_mve_vmaxnmq_f32
__builtin_arm_mve_vmaxnmq_m_f16
__builtin_arm_mve_vmaxnmq_m_f32
__builtin_arm_mve_vmaxnmq_x_f16
__builtin_arm_mve_vmaxnmq_x_f32
__builtin_arm_mve_vmaxnmvq_f16
__builtin_arm_mve_vmaxnmvq_f32
__builtin_arm_mve_vmaxnmvq_p_f16
__builtin_arm_mve_vmaxnmvq_p_f32
__builtin_arm_mve_vmaxq_m_s16
__builtin_arm_mve_vmaxq_m_s32
__builtin_arm_mve_vmaxq_m_s8
__builtin_arm_mve_vmaxq_m_u16
__builtin_arm_mve_vmaxq_m_u32
__builtin_arm_mve_vmaxq_m_u8
__builtin_arm_mve_vmaxq_s16
__builtin_arm_mve_vmaxq_s32
__builtin_arm_mve_vmaxq_s8
__builtin_arm_mve_vmaxq_u16
__builtin_arm_mve_vmaxq_u32
__builtin_arm_mve_vmaxq_u8
__builtin_arm_mve_vmaxq_x_s16
__builtin_arm_mve_vmaxq_x_s32
__builtin_arm_mve_vmaxq_x_s8
__builtin_arm_mve_vmaxq_x_u16
__builtin_arm_mve_vmaxq_x_u32
__builtin_arm_mve_vmaxq_x_u8
__builtin_arm_mve_vmaxvq_p_s16
__builtin_arm_mve_vmaxvq_p_s32
__builtin_arm_mve_vmaxvq_p_s8
__builtin_arm_mve_vmaxvq_p_u16
__builtin_arm_mve_vmaxvq_p_u32
__builtin_arm_mve_vmaxvq_p_u8
__builtin_arm_mve_vmaxvq_s16
__builtin_arm_mve_vmaxvq_s32
__builtin_arm_mve_vmaxvq_s8
__builtin_arm_mve_vmaxvq_u16
__builtin_arm_mve_vmaxvq_u32
__builtin_arm_mve_vmaxvq_u8
__builtin_arm_mve_vminaq_m_s16
__builtin_arm_mve_vminaq_m_s32
__builtin_arm_mve_vminaq_m_s8
__builtin_arm_mve_vminaq_s16
__builtin_arm_mve_vminaq_s32
__builtin_arm_mve_vminaq_s8
__builtin_arm_mve_vminavq_p_s16
__builtin_arm_mve_vminavq_p_s32
__builtin_arm_mve_vminavq_p_s8
__builtin_arm_mve_vminavq_s16
__builtin_arm_mve_vminavq_s32
__builtin_arm_mve_vminavq_s8
__builtin_arm_mve_vminnmaq_f16
__builtin_arm_mve_vminnmaq_f32
__builtin_arm_mve_vminnmaq_m_f16
__builtin_arm_mve_vminnmaq_m_f32
__builtin_arm_mve_vminnmavq_f16
__builtin_arm_mve_vminnmavq_f32
__builtin_arm_mve_vminnmavq_p_f16
__builtin_arm_mve_vminnmavq_p_f32
__builtin_arm_mve_vminnmq_f16
__builtin_arm_mve_vminnmq_f32
__builtin_arm_mve_vminnmq_m_f16
__builtin_arm_mve_vminnmq_m_f32
__builtin_arm_mve_vminnmq_x_f16
__builtin_arm_mve_vminnmq_x_f32
__builtin_arm_mve_vminnmvq_f16
__builtin_arm_mve_vminnmvq_f32
__builtin_arm_mve_vminnmvq_p_f16
__builtin_arm_mve_vminnmvq_p_f32
__builtin_arm_mve_vminq_m_s16
__builtin_arm_mve_vminq_m_s32
__builtin_arm_mve_vminq_m_s8
__builtin_arm_mve_vminq_m_u16
__builtin_arm_mve_vminq_m_u32
__builtin_arm_mve_vminq_m_u8
__builtin_arm_mve_vminq_s16
__builtin_arm_mve_vminq_s32
__builtin_arm_mve_vminq_s8
__builtin_arm_mve_vminq_u16
__builtin_arm_mve_vminq_u32
__builtin_arm_mve_vminq_u8
__builtin_arm_mve_vminq_x_s16
__builtin_arm_mve_vminq_x_s32
__builtin_arm_mve_vminq_x_s8
__builtin_arm_mve_vminq_x_u16
__builtin_arm_mve_vminq_x_u32
__builtin_arm_mve_vminq_x_u8
__builtin_arm_mve_vminvq_p_s16
__builtin_arm_mve_vminvq_p_s32
__builtin_arm_mve_vminvq_p_s8
__builtin_arm_mve_vminvq_p_u16
__builtin_arm_mve_vminvq_p_u32
__builtin_arm_mve_vminvq_p_u8
__builtin_arm_mve_vminvq_s16
__builtin_arm_mve_vminvq_s32
__builtin_arm_mve_vminvq_s8
__builtin_arm_mve_vminvq_u16
__builtin_arm_mve_vminvq_u32
__builtin_arm_mve_vminvq_u8
__builtin_arm_mve_vmladavaq_p_s16
__builtin_arm_mve_vmladavaq_p_s32
__builtin_arm_mve_vmladavaq_p_s8
__builtin_arm_mve_vmladavaq_p_u16
__builtin_arm_mve_vmladavaq_p_u32
__builtin_arm_mve_vmladavaq_p_u8
__builtin_arm_mve_vmladavaq_s16
__builtin_arm_mve_vmladavaq_s32
__builtin_arm_mve_vmladavaq_s8
__builtin_arm_mve_vmladavaq_u16
__builtin_arm_mve_vmladavaq_u32
__builtin_arm_mve_vmladavaq_u8
__builtin_arm_mve_vmladavaxq_p_s16
__builtin_arm_mve_vmladavaxq_p_s32
__builtin_arm_mve_vmladavaxq_p_s8
__builtin_arm_mve_vmladavaxq_s16
__builtin_arm_mve_vmladavaxq_s32
__builtin_arm_mve_vmladavaxq_s8
__builtin_arm_mve_vmladavq_p_s16
__builtin_arm_mve_vmladavq_p_s32
__builtin_arm_mve_vmladavq_p_s8
__builtin_arm_mve_vmladavq_p_u16
__builtin_arm_mve_vmladavq_p_u32
__builtin_arm_mve_vmladavq_p_u8
__builtin_arm_mve_vmladavq_s16
__builtin_arm_mve_vmladavq_s32
__builtin_arm_mve_vmladavq_s8
__builtin_arm_mve_vmladavq_u16
__builtin_arm_mve_vmladavq_u32
__builtin_arm_mve_vmladavq_u8
__builtin_arm_mve_vmladavxq_p_s16
__builtin_arm_mve_vmladavxq_p_s32
__builtin_arm_mve_vmladavxq_p_s8
__builtin_arm_mve_vmladavxq_s16
__builtin_arm_mve_vmladavxq_s32
__builtin_arm_mve_vmladavxq_s8
__builtin_arm_mve_vmlaldavaq_p_s16
__builtin_arm_mve_vmlaldavaq_p_s32
__builtin_arm_mve_vmlaldavaq_p_u16
__builtin_arm_mve_vmlaldavaq_p_u32
__builtin_arm_mve_vmlaldavaq_s16
__builtin_arm_mve_vmlaldavaq_s32
__builtin_arm_mve_vmlaldavaq_u16
__builtin_arm_mve_vmlaldavaq_u32
__builtin_arm_mve_vmlaldavaxq_p_s16
__builtin_arm_mve_vmlaldavaxq_p_s32
__builtin_arm_mve_vmlaldavaxq_s16
__builtin_arm_mve_vmlaldavaxq_s32
__builtin_arm_mve_vmlaldavq_p_s16
__builtin_arm_mve_vmlaldavq_p_s32
__builtin_arm_mve_vmlaldavq_p_u16
__builtin_arm_mve_vmlaldavq_p_u32
__builtin_arm_mve_vmlaldavq_s16
__builtin_arm_mve_vmlaldavq_s32
__builtin_arm_mve_vmlaldavq_u16
__builtin_arm_mve_vmlaldavq_u32
__builtin_arm_mve_vmlaldavxq_p_s16
__builtin_arm_mve_vmlaldavxq_p_s32
__builtin_arm_mve_vmlaldavxq_s16
__builtin_arm_mve_vmlaldavxq_s32
__builtin_arm_mve_vmlaq_m_n_s16
__builtin_arm_mve_vmlaq_m_n_s32
__builtin_arm_mve_vmlaq_m_n_s8
__builtin_arm_mve_vmlaq_m_n_u16
__builtin_arm_mve_vmlaq_m_n_u32
__builtin_arm_mve_vmlaq_m_n_u8
__builtin_arm_mve_vmlaq_n_s16
__builtin_arm_mve_vmlaq_n_s32
__builtin_arm_mve_vmlaq_n_s8
__builtin_arm_mve_vmlaq_n_u16
__builtin_arm_mve_vmlaq_n_u32
__builtin_arm_mve_vmlaq_n_u8
__builtin_arm_mve_vmlasq_m_n_s16
__builtin_arm_mve_vmlasq_m_n_s32
__builtin_arm_mve_vmlasq_m_n_s8
__builtin_arm_mve_vmlasq_m_n_u16
__builtin_arm_mve_vmlasq_m_n_u32
__builtin_arm_mve_vmlasq_m_n_u8
__builtin_arm_mve_vmlasq_n_s16
__builtin_arm_mve_vmlasq_n_s32
__builtin_arm_mve_vmlasq_n_s8
__builtin_arm_mve_vmlasq_n_u16
__builtin_arm_mve_vmlasq_n_u32
__builtin_arm_mve_vmlasq_n_u8
__builtin_arm_mve_vmlsdavaq_p_s16
__builtin_arm_mve_vmlsdavaq_p_s32
__builtin_arm_mve_vmlsdavaq_p_s8
__builtin_arm_mve_vmlsdavaq_s16
__builtin_arm_mve_vmlsdavaq_s32
__builtin_arm_mve_vmlsdavaq_s8
__builtin_arm_mve_vmlsdavaxq_p_s16
__builtin_arm_mve_vmlsdavaxq_p_s32
__builtin_arm_mve_vmlsdavaxq_p_s8
__builtin_arm_mve_vmlsdavaxq_s16
__builtin_arm_mve_vmlsdavaxq_s32
__builtin_arm_mve_vmlsdavaxq_s8
__builtin_arm_mve_vmlsdavq_p_s16
__builtin_arm_mve_vmlsdavq_p_s32
__builtin_arm_mve_vmlsdavq_p_s8
__builtin_arm_mve_vmlsdavq_s16
__builtin_arm_mve_vmlsdavq_s32
__builtin_arm_mve_vmlsdavq_s8
__builtin_arm_mve_vmlsdavxq_p_s16
__builtin_arm_mve_vmlsdavxq_p_s32
__builtin_arm_mve_vmlsdavxq_p_s8
__builtin_arm_mve_vmlsdavxq_s16
__builtin_arm_mve_vmlsdavxq_s32
__builtin_arm_mve_vmlsdavxq_s8
__builtin_arm_mve_vmlsldavaq_p_s16
__builtin_arm_mve_vmlsldavaq_p_s32
__builtin_arm_mve_vmlsldavaq_s16
__builtin_arm_mve_vmlsldavaq_s32
__builtin_arm_mve_vmlsldavaxq_p_s16
__builtin_arm_mve_vmlsldavaxq_p_s32
__builtin_arm_mve_vmlsldavaxq_s16
__builtin_arm_mve_vmlsldavaxq_s32
__builtin_arm_mve_vmlsldavq_p_s16
__builtin_arm_mve_vmlsldavq_p_s32
__builtin_arm_mve_vmlsldavq_s16
__builtin_arm_mve_vmlsldavq_s32
__builtin_arm_mve_vmlsldavxq_p_s16
__builtin_arm_mve_vmlsldavxq_p_s32
__builtin_arm_mve_vmlsldavxq_s16
__builtin_arm_mve_vmlsldavxq_s32
__builtin_arm_mve_vmovlbq_m_s16
__builtin_arm_mve_vmovlbq_m_s8
__builtin_arm_mve_vmovlbq_m_u16
__builtin_arm_mve_vmovlbq_m_u8
__builtin_arm_mve_vmovlbq_s16
__builtin_arm_mve_vmovlbq_s8
__builtin_arm_mve_vmovlbq_u16
__builtin_arm_mve_vmovlbq_u8
__builtin_arm_mve_vmovlbq_x_s16
__builtin_arm_mve_vmovlbq_x_s8
__builtin_arm_mve_vmovlbq_x_u16
__builtin_arm_mve_vmovlbq_x_u8
__builtin_arm_mve_vmovltq_m_s16
__builtin_arm_mve_vmovltq_m_s8
__builtin_arm_mve_vmovltq_m_u16
__builtin_arm_mve_vmovltq_m_u8
__builtin_arm_mve_vmovltq_s16
__builtin_arm_mve_vmovltq_s8
__builtin_arm_mve_vmovltq_u16
__builtin_arm_mve_vmovltq_u8
__builtin_arm_mve_vmovltq_x_s16
__builtin_arm_mve_vmovltq_x_s8
__builtin_arm_mve_vmovltq_x_u16
__builtin_arm_mve_vmovltq_x_u8
__builtin_arm_mve_vmovnbq_m_s16
__builtin_arm_mve_vmovnbq_m_s32
__builtin_arm_mve_vmovnbq_m_u16
__builtin_arm_mve_vmovnbq_m_u32
__builtin_arm_mve_vmovnbq_s16
__builtin_arm_mve_vmovnbq_s32
__builtin_arm_mve_vmovnbq_u16
__builtin_arm_mve_vmovnbq_u32
__builtin_arm_mve_vmovntq_m_s16
__builtin_arm_mve_vmovntq_m_s32
__builtin_arm_mve_vmovntq_m_u16
__builtin_arm_mve_vmovntq_m_u32
__builtin_arm_mve_vmovntq_s16
__builtin_arm_mve_vmovntq_s32
__builtin_arm_mve_vmovntq_u16
__builtin_arm_mve_vmovntq_u32
__builtin_arm_mve_vmulhq_m_s16
__builtin_arm_mve_vmulhq_m_s32
__builtin_arm_mve_vmulhq_m_s8
__builtin_arm_mve_vmulhq_m_u16
__builtin_arm_mve_vmulhq_m_u32
__builtin_arm_mve_vmulhq_m_u8
__builtin_arm_mve_vmulhq_s16
__builtin_arm_mve_vmulhq_s32
__builtin_arm_mve_vmulhq_s8
__builtin_arm_mve_vmulhq_u16
__builtin_arm_mve_vmulhq_u32
__builtin_arm_mve_vmulhq_u8
__builtin_arm_mve_vmulhq_x_s16
__builtin_arm_mve_vmulhq_x_s32
__builtin_arm_mve_vmulhq_x_s8
__builtin_arm_mve_vmulhq_x_u16
__builtin_arm_mve_vmulhq_x_u32
__builtin_arm_mve_vmulhq_x_u8
__builtin_arm_mve_vmullbq_int_m_s16
__builtin_arm_mve_vmullbq_int_m_s32
__builtin_arm_mve_vmullbq_int_m_s8
__builtin_arm_mve_vmullbq_int_m_u16
__builtin_arm_mve_vmullbq_int_m_u32
__builtin_arm_mve_vmullbq_int_m_u8
__builtin_arm_mve_vmullbq_int_s16
__builtin_arm_mve_vmullbq_int_s32
__builtin_arm_mve_vmullbq_int_s8
__builtin_arm_mve_vmullbq_int_u16
__builtin_arm_mve_vmullbq_int_u32
__builtin_arm_mve_vmullbq_int_u8
__builtin_arm_mve_vmullbq_int_x_s16
__builtin_arm_mve_vmullbq_int_x_s32
__builtin_arm_mve_vmullbq_int_x_s8
__builtin_arm_mve_vmullbq_int_x_u16
__builtin_arm_mve_vmullbq_int_x_u32
__builtin_arm_mve_vmullbq_int_x_u8
__builtin_arm_mve_vmullbq_poly_m_p16
__builtin_arm_mve_vmullbq_poly_m_p8
__builtin_arm_mve_vmullbq_poly_p16
__builtin_arm_mve_vmullbq_poly_p8
__builtin_arm_mve_vmullbq_poly_x_p16
__builtin_arm_mve_vmullbq_poly_x_p8
__builtin_arm_mve_vmulltq_int_m_s16
__builtin_arm_mve_vmulltq_int_m_s32
__builtin_arm_mve_vmulltq_int_m_s8
__builtin_arm_mve_vmulltq_int_m_u16
__builtin_arm_mve_vmulltq_int_m_u32
__builtin_arm_mve_vmulltq_int_m_u8
__builtin_arm_mve_vmulltq_int_s16
__builtin_arm_mve_vmulltq_int_s32
__builtin_arm_mve_vmulltq_int_s8
__builtin_arm_mve_vmulltq_int_u16
__builtin_arm_mve_vmulltq_int_u32
__builtin_arm_mve_vmulltq_int_u8
__builtin_arm_mve_vmulltq_int_x_s16
__builtin_arm_mve_vmulltq_int_x_s32
__builtin_arm_mve_vmulltq_int_x_s8
__builtin_arm_mve_vmulltq_int_x_u16
__builtin_arm_mve_vmulltq_int_x_u32
__builtin_arm_mve_vmulltq_int_x_u8
__builtin_arm_mve_vmulltq_poly_m_p16
__builtin_arm_mve_vmulltq_poly_m_p8
__builtin_arm_mve_vmulltq_poly_p16
__builtin_arm_mve_vmulltq_poly_p8
__builtin_arm_mve_vmulltq_poly_x_p16
__builtin_arm_mve_vmulltq_poly_x_p8
__builtin_arm_mve_vmulq_f16
__builtin_arm_mve_vmulq_f32
__builtin_arm_mve_vmulq_m_f16
__builtin_arm_mve_vmulq_m_f32
__builtin_arm_mve_vmulq_m_n_f16
__builtin_arm_mve_vmulq_m_n_f32
__builtin_arm_mve_vmulq_m_n_s16
__builtin_arm_mve_vmulq_m_n_s32
__builtin_arm_mve_vmulq_m_n_s8
__builtin_arm_mve_vmulq_m_n_u16
__builtin_arm_mve_vmulq_m_n_u32
__builtin_arm_mve_vmulq_m_n_u8
__builtin_arm_mve_vmulq_m_s16
__builtin_arm_mve_vmulq_m_s32
__builtin_arm_mve_vmulq_m_s8
__builtin_arm_mve_vmulq_m_u16
__builtin_arm_mve_vmulq_m_u32
__builtin_arm_mve_vmulq_m_u8
__builtin_arm_mve_vmulq_n_f16
__builtin_arm_mve_vmulq_n_f32
__builtin_arm_mve_vmulq_n_s16
__builtin_arm_mve_vmulq_n_s32
__builtin_arm_mve_vmulq_n_s8
__builtin_arm_mve_vmulq_n_u16
__builtin_arm_mve_vmulq_n_u32
__builtin_arm_mve_vmulq_n_u8
__builtin_arm_mve_vmulq_s16
__builtin_arm_mve_vmulq_s32
__builtin_arm_mve_vmulq_s8
__builtin_arm_mve_vmulq_u16
__builtin_arm_mve_vmulq_u32
__builtin_arm_mve_vmulq_u8
__builtin_arm_mve_vmulq_x_f16
__builtin_arm_mve_vmulq_x_f32
__builtin_arm_mve_vmulq_x_n_f16
__builtin_arm_mve_vmulq_x_n_f32
__builtin_arm_mve_vmulq_x_n_s16
__builtin_arm_mve_vmulq_x_n_s32
__builtin_arm_mve_vmulq_x_n_s8
__builtin_arm_mve_vmulq_x_n_u16
__builtin_arm_mve_vmulq_x_n_u32
__builtin_arm_mve_vmulq_x_n_u8
__builtin_arm_mve_vmulq_x_s16
__builtin_arm_mve_vmulq_x_s32
__builtin_arm_mve_vmulq_x_s8
__builtin_arm_mve_vmulq_x_u16
__builtin_arm_mve_vmulq_x_u32
__builtin_arm_mve_vmulq_x_u8
__builtin_arm_mve_vmvnq_m_n_s16
__builtin_arm_mve_vmvnq_m_n_s32
__builtin_arm_mve_vmvnq_m_n_u16
__builtin_arm_mve_vmvnq_m_n_u32
__builtin_arm_mve_vmvnq_m_s16
__builtin_arm_mve_vmvnq_m_s32
__builtin_arm_mve_vmvnq_m_s8
__builtin_arm_mve_vmvnq_m_u16
__builtin_arm_mve_vmvnq_m_u32
__builtin_arm_mve_vmvnq_m_u8
__builtin_arm_mve_vmvnq_n_s16
__builtin_arm_mve_vmvnq_n_s32
__builtin_arm_mve_vmvnq_n_u16
__builtin_arm_mve_vmvnq_n_u32
__builtin_arm_mve_vmvnq_s16
__builtin_arm_mve_vmvnq_s32
__builtin_arm_mve_vmvnq_s8
__builtin_arm_mve_vmvnq_u16
__builtin_arm_mve_vmvnq_u32
__builtin_arm_mve_vmvnq_u8
__builtin_arm_mve_vmvnq_x_n_s16
__builtin_arm_mve_vmvnq_x_n_s32
__builtin_arm_mve_vmvnq_x_n_u16
__builtin_arm_mve_vmvnq_x_n_u32
__builtin_arm_mve_vmvnq_x_s16
__builtin_arm_mve_vmvnq_x_s32
__builtin_arm_mve_vmvnq_x_s8
__builtin_arm_mve_vmvnq_x_u16
__builtin_arm_mve_vmvnq_x_u32
__builtin_arm_mve_vmvnq_x_u8
__builtin_arm_mve_vnegq_f16
__builtin_arm_mve_vnegq_f32
__builtin_arm_mve_vnegq_m_f16
__builtin_arm_mve_vnegq_m_f32
__builtin_arm_mve_vnegq_m_s16
__builtin_arm_mve_vnegq_m_s32
__builtin_arm_mve_vnegq_m_s8
__builtin_arm_mve_vnegq_s16
__builtin_arm_mve_vnegq_s32
__builtin_arm_mve_vnegq_s8
__builtin_arm_mve_vnegq_x_f16
__builtin_arm_mve_vnegq_x_f32
__builtin_arm_mve_vnegq_x_s16
__builtin_arm_mve_vnegq_x_s32
__builtin_arm_mve_vnegq_x_s8
__builtin_arm_mve_vornq_f16
__builtin_arm_mve_vornq_f32
__builtin_arm_mve_vornq_m_f16
__builtin_arm_mve_vornq_m_f32
__builtin_arm_mve_vornq_m_s16
__builtin_arm_mve_vornq_m_s32
__builtin_arm_mve_vornq_m_s8
__builtin_arm_mve_vornq_m_u16
__builtin_arm_mve_vornq_m_u32
__builtin_arm_mve_vornq_m_u8
__builtin_arm_mve_vornq_s16
__builtin_arm_mve_vornq_s32
__builtin_arm_mve_vornq_s8
__builtin_arm_mve_vornq_u16
__builtin_arm_mve_vornq_u32
__builtin_arm_mve_vornq_u8
__builtin_arm_mve_vornq_x_f16
__builtin_arm_mve_vornq_x_f32
__builtin_arm_mve_vornq_x_s16
__builtin_arm_mve_vornq_x_s32
__builtin_arm_mve_vornq_x_s8
__builtin_arm_mve_vornq_x_u16
__builtin_arm_mve_vornq_x_u32
__builtin_arm_mve_vornq_x_u8
__builtin_arm_mve_vorrq_f16
__builtin_arm_mve_vorrq_f32
__builtin_arm_mve_vorrq_m_f16
__builtin_arm_mve_vorrq_m_f32
__builtin_arm_mve_vorrq_m_n_s16
__builtin_arm_mve_vorrq_m_n_s32
__builtin_arm_mve_vorrq_m_n_u16
__builtin_arm_mve_vorrq_m_n_u32
__builtin_arm_mve_vorrq_m_s16
__builtin_arm_mve_vorrq_m_s32
__builtin_arm_mve_vorrq_m_s8
__builtin_arm_mve_vorrq_m_u16
__builtin_arm_mve_vorrq_m_u32
__builtin_arm_mve_vorrq_m_u8
__builtin_arm_mve_vorrq_n_s16
__builtin_arm_mve_vorrq_n_s32
__builtin_arm_mve_vorrq_n_u16
__builtin_arm_mve_vorrq_n_u32
__builtin_arm_mve_vorrq_s16
__builtin_arm_mve_vorrq_s32
__builtin_arm_mve_vorrq_s8
__builtin_arm_mve_vorrq_u16
__builtin_arm_mve_vorrq_u32
__builtin_arm_mve_vorrq_u8
__builtin_arm_mve_vorrq_x_f16
__builtin_arm_mve_vorrq_x_f32
__builtin_arm_mve_vorrq_x_s16
__builtin_arm_mve_vorrq_x_s32
__builtin_arm_mve_vorrq_x_s8
__builtin_arm_mve_vorrq_x_u16
__builtin_arm_mve_vorrq_x_u32
__builtin_arm_mve_vorrq_x_u8
__builtin_arm_mve_vpnot
__builtin_arm_mve_vpselq_f16
__builtin_arm_mve_vpselq_f32
__builtin_arm_mve_vpselq_s16
__builtin_arm_mve_vpselq_s32
__builtin_arm_mve_vpselq_s64
__builtin_arm_mve_vpselq_s8
__builtin_arm_mve_vpselq_u16
__builtin_arm_mve_vpselq_u32
__builtin_arm_mve_vpselq_u64
__builtin_arm_mve_vpselq_u8
__builtin_arm_mve_vqabsq_m_s16
__builtin_arm_mve_vqabsq_m_s32
__builtin_arm_mve_vqabsq_m_s8
__builtin_arm_mve_vqabsq_s16
__builtin_arm_mve_vqabsq_s32
__builtin_arm_mve_vqabsq_s8
__builtin_arm_mve_vqaddq_m_n_s16
__builtin_arm_mve_vqaddq_m_n_s32
__builtin_arm_mve_vqaddq_m_n_s8
__builtin_arm_mve_vqaddq_m_n_u16
__builtin_arm_mve_vqaddq_m_n_u32
__builtin_arm_mve_vqaddq_m_n_u8
__builtin_arm_mve_vqaddq_m_s16
__builtin_arm_mve_vqaddq_m_s32
__builtin_arm_mve_vqaddq_m_s8
__builtin_arm_mve_vqaddq_m_u16
__builtin_arm_mve_vqaddq_m_u32
__builtin_arm_mve_vqaddq_m_u8
__builtin_arm_mve_vqaddq_n_s16
__builtin_arm_mve_vqaddq_n_s32
__builtin_arm_mve_vqaddq_n_s8
__builtin_arm_mve_vqaddq_n_u16
__builtin_arm_mve_vqaddq_n_u32
__builtin_arm_mve_vqaddq_n_u8
__builtin_arm_mve_vqaddq_s16
__builtin_arm_mve_vqaddq_s32
__builtin_arm_mve_vqaddq_s8
__builtin_arm_mve_vqaddq_u16
__builtin_arm_mve_vqaddq_u32
__builtin_arm_mve_vqaddq_u8
__builtin_arm_mve_vqdmladhq_m_s16
__builtin_arm_mve_vqdmladhq_m_s32
__builtin_arm_mve_vqdmladhq_m_s8
__builtin_arm_mve_vqdmladhq_s16
__builtin_arm_mve_vqdmladhq_s32
__builtin_arm_mve_vqdmladhq_s8
__builtin_arm_mve_vqdmladhxq_m_s16
__builtin_arm_mve_vqdmladhxq_m_s32
__builtin_arm_mve_vqdmladhxq_m_s8
__builtin_arm_mve_vqdmladhxq_s16
__builtin_arm_mve_vqdmladhxq_s32
__builtin_arm_mve_vqdmladhxq_s8
__builtin_arm_mve_vqdmlahq_m_n_s16
__builtin_arm_mve_vqdmlahq_m_n_s32
__builtin_arm_mve_vqdmlahq_m_n_s8
__builtin_arm_mve_vqdmlahq_n_s16
__builtin_arm_mve_vqdmlahq_n_s32
__builtin_arm_mve_vqdmlahq_n_s8
__builtin_arm_mve_vqdmlashq_m_n_s16
__builtin_arm_mve_vqdmlashq_m_n_s32
__builtin_arm_mve_vqdmlashq_m_n_s8
__builtin_arm_mve_vqdmlashq_n_s16
__builtin_arm_mve_vqdmlashq_n_s32
__builtin_arm_mve_vqdmlashq_n_s8
__builtin_arm_mve_vqdmlsdhq_m_s16
__builtin_arm_mve_vqdmlsdhq_m_s32
__builtin_arm_mve_vqdmlsdhq_m_s8
__builtin_arm_mve_vqdmlsdhq_s16
__builtin_arm_mve_vqdmlsdhq_s32
__builtin_arm_mve_vqdmlsdhq_s8
__builtin_arm_mve_vqdmlsdhxq_m_s16
__builtin_arm_mve_vqdmlsdhxq_m_s32
__builtin_arm_mve_vqdmlsdhxq_m_s8
__builtin_arm_mve_vqdmlsdhxq_s16
__builtin_arm_mve_vqdmlsdhxq_s32
__builtin_arm_mve_vqdmlsdhxq_s8
__builtin_arm_mve_vqdmulhq_m_n_s16
__builtin_arm_mve_vqdmulhq_m_n_s32
__builtin_arm_mve_vqdmulhq_m_n_s8
__builtin_arm_mve_vqdmulhq_m_s16
__builtin_arm_mve_vqdmulhq_m_s32
__builtin_arm_mve_vqdmulhq_m_s8
__builtin_arm_mve_vqdmulhq_n_s16
__builtin_arm_mve_vqdmulhq_n_s32
__builtin_arm_mve_vqdmulhq_n_s8
__builtin_arm_mve_vqdmulhq_s16
__builtin_arm_mve_vqdmulhq_s32
__builtin_arm_mve_vqdmulhq_s8
__builtin_arm_mve_vqdmullbq_m_n_s16
__builtin_arm_mve_vqdmullbq_m_n_s32
__builtin_arm_mve_vqdmullbq_m_s16
__builtin_arm_mve_vqdmullbq_m_s32
__builtin_arm_mve_vqdmullbq_n_s16
__builtin_arm_mve_vqdmullbq_n_s32
__builtin_arm_mve_vqdmullbq_s16
__builtin_arm_mve_vqdmullbq_s32
__builtin_arm_mve_vqdmulltq_m_n_s16
__builtin_arm_mve_vqdmulltq_m_n_s32
__builtin_arm_mve_vqdmulltq_m_s16
__builtin_arm_mve_vqdmulltq_m_s32
__builtin_arm_mve_vqdmulltq_n_s16
__builtin_arm_mve_vqdmulltq_n_s32
__builtin_arm_mve_vqdmulltq_s16
__builtin_arm_mve_vqdmulltq_s32
__builtin_arm_mve_vqmovnbq_m_s16
__builtin_arm_mve_vqmovnbq_m_s32
__builtin_arm_mve_vqmovnbq_m_u16
__builtin_arm_mve_vqmovnbq_m_u32
__builtin_arm_mve_vqmovnbq_s16
__builtin_arm_mve_vqmovnbq_s32
__builtin_arm_mve_vqmovnbq_u16
__builtin_arm_mve_vqmovnbq_u32
__builtin_arm_mve_vqmovntq_m_s16
__builtin_arm_mve_vqmovntq_m_s32
__builtin_arm_mve_vqmovntq_m_u16
__builtin_arm_mve_vqmovntq_m_u32
__builtin_arm_mve_vqmovntq_s16
__builtin_arm_mve_vqmovntq_s32
__builtin_arm_mve_vqmovntq_u16
__builtin_arm_mve_vqmovntq_u32
__builtin_arm_mve_vqmovunbq_m_s16
__builtin_arm_mve_vqmovunbq_m_s32
__builtin_arm_mve_vqmovunbq_s16
__builtin_arm_mve_vqmovunbq_s32
__builtin_arm_mve_vqmovuntq_m_s16
__builtin_arm_mve_vqmovuntq_m_s32
__builtin_arm_mve_vqmovuntq_s16
__builtin_arm_mve_vqmovuntq_s32
__builtin_arm_mve_vqnegq_m_s16
__builtin_arm_mve_vqnegq_m_s32
__builtin_arm_mve_vqnegq_m_s8
__builtin_arm_mve_vqnegq_s16
__builtin_arm_mve_vqnegq_s32
__builtin_arm_mve_vqnegq_s8
__builtin_arm_mve_vqrdmladhq_m_s16
__builtin_arm_mve_vqrdmladhq_m_s32
__builtin_arm_mve_vqrdmladhq_m_s8
__builtin_arm_mve_vqrdmladhq_s16
__builtin_arm_mve_vqrdmladhq_s32
__builtin_arm_mve_vqrdmladhq_s8
__builtin_arm_mve_vqrdmladhxq_m_s16
__builtin_arm_mve_vqrdmladhxq_m_s32
__builtin_arm_mve_vqrdmladhxq_m_s8
__builtin_arm_mve_vqrdmladhxq_s16
__builtin_arm_mve_vqrdmladhxq_s32
__builtin_arm_mve_vqrdmladhxq_s8
__builtin_arm_mve_vqrdmlahq_m_n_s16
__builtin_arm_mve_vqrdmlahq_m_n_s32
__builtin_arm_mve_vqrdmlahq_m_n_s8
__builtin_arm_mve_vqrdmlahq_n_s16
__builtin_arm_mve_vqrdmlahq_n_s32
__builtin_arm_mve_vqrdmlahq_n_s8
__builtin_arm_mve_vqrdmlashq_m_n_s16
__builtin_arm_mve_vqrdmlashq_m_n_s32
__builtin_arm_mve_vqrdmlashq_m_n_s8
__builtin_arm_mve_vqrdmlashq_n_s16
__builtin_arm_mve_vqrdmlashq_n_s32
__builtin_arm_mve_vqrdmlashq_n_s8
__builtin_arm_mve_vqrdmlsdhq_m_s16
__builtin_arm_mve_vqrdmlsdhq_m_s32
__builtin_arm_mve_vqrdmlsdhq_m_s8
__builtin_arm_mve_vqrdmlsdhq_s16
__builtin_arm_mve_vqrdmlsdhq_s32
__builtin_arm_mve_vqrdmlsdhq_s8
__builtin_arm_mve_vqrdmlsdhxq_m_s16
__builtin_arm_mve_vqrdmlsdhxq_m_s32
__builtin_arm_mve_vqrdmlsdhxq_m_s8
__builtin_arm_mve_vqrdmlsdhxq_s16
__builtin_arm_mve_vqrdmlsdhxq_s32
__builtin_arm_mve_vqrdmlsdhxq_s8
__builtin_arm_mve_vqrdmulhq_m_n_s16
__builtin_arm_mve_vqrdmulhq_m_n_s32
__builtin_arm_mve_vqrdmulhq_m_n_s8
__builtin_arm_mve_vqrdmulhq_m_s16
__builtin_arm_mve_vqrdmulhq_m_s32
__builtin_arm_mve_vqrdmulhq_m_s8
__builtin_arm_mve_vqrdmulhq_n_s16
__builtin_arm_mve_vqrdmulhq_n_s32
__builtin_arm_mve_vqrdmulhq_n_s8
__builtin_arm_mve_vqrdmulhq_s16
__builtin_arm_mve_vqrdmulhq_s32
__builtin_arm_mve_vqrdmulhq_s8
__builtin_arm_mve_vqrshlq_m_n_s16
__builtin_arm_mve_vqrshlq_m_n_s32
__builtin_arm_mve_vqrshlq_m_n_s8
__builtin_arm_mve_vqrshlq_m_n_u16
__builtin_arm_mve_vqrshlq_m_n_u32
__builtin_arm_mve_vqrshlq_m_n_u8
__builtin_arm_mve_vqrshlq_m_s16
__builtin_arm_mve_vqrshlq_m_s32
__builtin_arm_mve_vqrshlq_m_s8
__builtin_arm_mve_vqrshlq_m_u16
__builtin_arm_mve_vqrshlq_m_u32
__builtin_arm_mve_vqrshlq_m_u8
__builtin_arm_mve_vqrshlq_n_s16
__builtin_arm_mve_vqrshlq_n_s32
__builtin_arm_mve_vqrshlq_n_s8
__builtin_arm_mve_vqrshlq_n_u16
__builtin_arm_mve_vqrshlq_n_u32
__builtin_arm_mve_vqrshlq_n_u8
__builtin_arm_mve_vqrshlq_s16
__builtin_arm_mve_vqrshlq_s32
__builtin_arm_mve_vqrshlq_s8
__builtin_arm_mve_vqrshlq_u16
__builtin_arm_mve_vqrshlq_u32
__builtin_arm_mve_vqrshlq_u8
__builtin_arm_mve_vqrshrnbq_m_n_s16
__builtin_arm_mve_vqrshrnbq_m_n_s32
__builtin_arm_mve_vqrshrnbq_m_n_u16
__builtin_arm_mve_vqrshrnbq_m_n_u32
__builtin_arm_mve_vqrshrnbq_n_s16
__builtin_arm_mve_vqrshrnbq_n_s32
__builtin_arm_mve_vqrshrnbq_n_u16
__builtin_arm_mve_vqrshrnbq_n_u32
__builtin_arm_mve_vqrshrntq_m_n_s16
__builtin_arm_mve_vqrshrntq_m_n_s32
__builtin_arm_mve_vqrshrntq_m_n_u16
__builtin_arm_mve_vqrshrntq_m_n_u32
__builtin_arm_mve_vqrshrntq_n_s16
__builtin_arm_mve_vqrshrntq_n_s32
__builtin_arm_mve_vqrshrntq_n_u16
__builtin_arm_mve_vqrshrntq_n_u32
__builtin_arm_mve_vqrshrunbq_m_n_s16
__builtin_arm_mve_vqrshrunbq_m_n_s32
__builtin_arm_mve_vqrshrunbq_n_s16
__builtin_arm_mve_vqrshrunbq_n_s32
__builtin_arm_mve_vqrshruntq_m_n_s16
__builtin_arm_mve_vqrshruntq_m_n_s32
__builtin_arm_mve_vqrshruntq_n_s16
__builtin_arm_mve_vqrshruntq_n_s32
__builtin_arm_mve_vqshlq_m_n_s16
__builtin_arm_mve_vqshlq_m_n_s32
__builtin_arm_mve_vqshlq_m_n_s8
__builtin_arm_mve_vqshlq_m_n_u16
__builtin_arm_mve_vqshlq_m_n_u32
__builtin_arm_mve_vqshlq_m_n_u8
__builtin_arm_mve_vqshlq_m_r_s16
__builtin_arm_mve_vqshlq_m_r_s32
__builtin_arm_mve_vqshlq_m_r_s8
__builtin_arm_mve_vqshlq_m_r_u16
__builtin_arm_mve_vqshlq_m_r_u32
__builtin_arm_mve_vqshlq_m_r_u8
__builtin_arm_mve_vqshlq_m_s16
__builtin_arm_mve_vqshlq_m_s32
__builtin_arm_mve_vqshlq_m_s8
__builtin_arm_mve_vqshlq_m_u16
__builtin_arm_mve_vqshlq_m_u32
__builtin_arm_mve_vqshlq_m_u8
__builtin_arm_mve_vqshlq_n_s16
__builtin_arm_mve_vqshlq_n_s32
__builtin_arm_mve_vqshlq_n_s8
__builtin_arm_mve_vqshlq_n_u16
__builtin_arm_mve_vqshlq_n_u32
__builtin_arm_mve_vqshlq_n_u8
__builtin_arm_mve_vqshlq_r_s16
__builtin_arm_mve_vqshlq_r_s32
__builtin_arm_mve_vqshlq_r_s8
__builtin_arm_mve_vqshlq_r_u16
__builtin_arm_mve_vqshlq_r_u32
__builtin_arm_mve_vqshlq_r_u8
__builtin_arm_mve_vqshlq_s16
__builtin_arm_mve_vqshlq_s32
__builtin_arm_mve_vqshlq_s8
__builtin_arm_mve_vqshlq_u16
__builtin_arm_mve_vqshlq_u32
__builtin_arm_mve_vqshlq_u8
__builtin_arm_mve_vqshluq_m_n_s16
__builtin_arm_mve_vqshluq_m_n_s32
__builtin_arm_mve_vqshluq_m_n_s8
__builtin_arm_mve_vqshluq_n_s16
__builtin_arm_mve_vqshluq_n_s32
__builtin_arm_mve_vqshluq_n_s8
__builtin_arm_mve_vqshrnbq_m_n_s16
__builtin_arm_mve_vqshrnbq_m_n_s32
__builtin_arm_mve_vqshrnbq_m_n_u16
__builtin_arm_mve_vqshrnbq_m_n_u32
__builtin_arm_mve_vqshrnbq_n_s16
__builtin_arm_mve_vqshrnbq_n_s32
__builtin_arm_mve_vqshrnbq_n_u16
__builtin_arm_mve_vqshrnbq_n_u32
__builtin_arm_mve_vqshrntq_m_n_s16
__builtin_arm_mve_vqshrntq_m_n_s32
__builtin_arm_mve_vqshrntq_m_n_u16
__builtin_arm_mve_vqshrntq_m_n_u32
__builtin_arm_mve_vqshrntq_n_s16
__builtin_arm_mve_vqshrntq_n_s32
__builtin_arm_mve_vqshrntq_n_u16
__builtin_arm_mve_vqshrntq_n_u32
__builtin_arm_mve_vqshrunbq_m_n_s16
__builtin_arm_mve_vqshrunbq_m_n_s32
__builtin_arm_mve_vqshrunbq_n_s16
__builtin_arm_mve_vqshrunbq_n_s32
__builtin_arm_mve_vqshruntq_m_n_s16
__builtin_arm_mve_vqshruntq_m_n_s32
__builtin_arm_mve_vqshruntq_n_s16
__builtin_arm_mve_vqshruntq_n_s32
__builtin_arm_mve_vqsubq_m_n_s16
__builtin_arm_mve_vqsubq_m_n_s32
__builtin_arm_mve_vqsubq_m_n_s8
__builtin_arm_mve_vqsubq_m_n_u16
__builtin_arm_mve_vqsubq_m_n_u32
__builtin_arm_mve_vqsubq_m_n_u8
__builtin_arm_mve_vqsubq_m_s16
__builtin_arm_mve_vqsubq_m_s32
__builtin_arm_mve_vqsubq_m_s8
__builtin_arm_mve_vqsubq_m_u16
__builtin_arm_mve_vqsubq_m_u32
__builtin_arm_mve_vqsubq_m_u8
__builtin_arm_mve_vqsubq_n_s16
__builtin_arm_mve_vqsubq_n_s32
__builtin_arm_mve_vqsubq_n_s8
__builtin_arm_mve_vqsubq_n_u16
__builtin_arm_mve_vqsubq_n_u32
__builtin_arm_mve_vqsubq_n_u8
__builtin_arm_mve_vqsubq_s16
__builtin_arm_mve_vqsubq_s32
__builtin_arm_mve_vqsubq_s8
__builtin_arm_mve_vqsubq_u16
__builtin_arm_mve_vqsubq_u32
__builtin_arm_mve_vqsubq_u8
__builtin_arm_mve_vreinterpretq_f16_f32
__builtin_arm_mve_vreinterpretq_f16_s16
__builtin_arm_mve_vreinterpretq_f16_s32
__builtin_arm_mve_vreinterpretq_f16_s64
__builtin_arm_mve_vreinterpretq_f16_s8
__builtin_arm_mve_vreinterpretq_f16_u16
__builtin_arm_mve_vreinterpretq_f16_u32
__builtin_arm_mve_vreinterpretq_f16_u64
__builtin_arm_mve_vreinterpretq_f16_u8
__builtin_arm_mve_vreinterpretq_f32_f16
__builtin_arm_mve_vreinterpretq_f32_s16
__builtin_arm_mve_vreinterpretq_f32_s32
__builtin_arm_mve_vreinterpretq_f32_s64
__builtin_arm_mve_vreinterpretq_f32_s8
__builtin_arm_mve_vreinterpretq_f32_u16
__builtin_arm_mve_vreinterpretq_f32_u32
__builtin_arm_mve_vreinterpretq_f32_u64
__builtin_arm_mve_vreinterpretq_f32_u8
__builtin_arm_mve_vreinterpretq_s16_f16
__builtin_arm_mve_vreinterpretq_s16_f32
__builtin_arm_mve_vreinterpretq_s16_s32
__builtin_arm_mve_vreinterpretq_s16_s64
__builtin_arm_mve_vreinterpretq_s16_s8
__builtin_arm_mve_vreinterpretq_s16_u16
__builtin_arm_mve_vreinterpretq_s16_u32
__builtin_arm_mve_vreinterpretq_s16_u64
__builtin_arm_mve_vreinterpretq_s16_u8
__builtin_arm_mve_vreinterpretq_s32_f16
__builtin_arm_mve_vreinterpretq_s32_f32
__builtin_arm_mve_vreinterpretq_s32_s16
__builtin_arm_mve_vreinterpretq_s32_s64
__builtin_arm_mve_vreinterpretq_s32_s8
__builtin_arm_mve_vreinterpretq_s32_u16
__builtin_arm_mve_vreinterpretq_s32_u32
__builtin_arm_mve_vreinterpretq_s32_u64
__builtin_arm_mve_vreinterpretq_s32_u8
__builtin_arm_mve_vreinterpretq_s64_f16
__builtin_arm_mve_vreinterpretq_s64_f32
__builtin_arm_mve_vreinterpretq_s64_s16
__builtin_arm_mve_vreinterpretq_s64_s32
__builtin_arm_mve_vreinterpretq_s64_s8
__builtin_arm_mve_vreinterpretq_s64_u16
__builtin_arm_mve_vreinterpretq_s64_u32
__builtin_arm_mve_vreinterpretq_s64_u64
__builtin_arm_mve_vreinterpretq_s64_u8
__builtin_arm_mve_vreinterpretq_s8_f16
__builtin_arm_mve_vreinterpretq_s8_f32
__builtin_arm_mve_vreinterpretq_s8_s16
__builtin_arm_mve_vreinterpretq_s8_s32
__builtin_arm_mve_vreinterpretq_s8_s64
__builtin_arm_mve_vreinterpretq_s8_u16
__builtin_arm_mve_vreinterpretq_s8_u32
__builtin_arm_mve_vreinterpretq_s8_u64
__builtin_arm_mve_vreinterpretq_s8_u8
__builtin_arm_mve_vreinterpretq_u16_f16
__builtin_arm_mve_vreinterpretq_u16_f32
__builtin_arm_mve_vreinterpretq_u16_s16
__builtin_arm_mve_vreinterpretq_u16_s32
__builtin_arm_mve_vreinterpretq_u16_s64
__builtin_arm_mve_vreinterpretq_u16_s8
__builtin_arm_mve_vreinterpretq_u16_u32
__builtin_arm_mve_vreinterpretq_u16_u64
__builtin_arm_mve_vreinterpretq_u16_u8
__builtin_arm_mve_vreinterpretq_u32_f16
__builtin_arm_mve_vreinterpretq_u32_f32
__builtin_arm_mve_vreinterpretq_u32_s16
__builtin_arm_mve_vreinterpretq_u32_s32
__builtin_arm_mve_vreinterpretq_u32_s64
__builtin_arm_mve_vreinterpretq_u32_s8
__builtin_arm_mve_vreinterpretq_u32_u16
__builtin_arm_mve_vreinterpretq_u32_u64
__builtin_arm_mve_vreinterpretq_u32_u8
__builtin_arm_mve_vreinterpretq_u64_f16
__builtin_arm_mve_vreinterpretq_u64_f32
__builtin_arm_mve_vreinterpretq_u64_s16
__builtin_arm_mve_vreinterpretq_u64_s32
__builtin_arm_mve_vreinterpretq_u64_s64
__builtin_arm_mve_vreinterpretq_u64_s8
__builtin_arm_mve_vreinterpretq_u64_u16
__builtin_arm_mve_vreinterpretq_u64_u32
__builtin_arm_mve_vreinterpretq_u64_u8
__builtin_arm_mve_vreinterpretq_u8_f16
__builtin_arm_mve_vreinterpretq_u8_f32
__builtin_arm_mve_vreinterpretq_u8_s16
__builtin_arm_mve_vreinterpretq_u8_s32
__builtin_arm_mve_vreinterpretq_u8_s64
__builtin_arm_mve_vreinterpretq_u8_s8
__builtin_arm_mve_vreinterpretq_u8_u16
__builtin_arm_mve_vreinterpretq_u8_u32
__builtin_arm_mve_vreinterpretq_u8_u64
__builtin_arm_mve_vrev16q_m_s8
__builtin_arm_mve_vrev16q_m_u8
__builtin_arm_mve_vrev16q_s8
__builtin_arm_mve_vrev16q_u8
__builtin_arm_mve_vrev16q_x_s8
__builtin_arm_mve_vrev16q_x_u8
__builtin_arm_mve_vrev32q_f16
__builtin_arm_mve_vrev32q_m_f16
__builtin_arm_mve_vrev32q_m_s16
__builtin_arm_mve_vrev32q_m_s8
__builtin_arm_mve_vrev32q_m_u16
__builtin_arm_mve_vrev32q_m_u8
__builtin_arm_mve_vrev32q_s16
__builtin_arm_mve_vrev32q_s8
__builtin_arm_mve_vrev32q_u16
__builtin_arm_mve_vrev32q_u8
__builtin_arm_mve_vrev32q_x_f16
__builtin_arm_mve_vrev32q_x_s16
__builtin_arm_mve_vrev32q_x_s8
__builtin_arm_mve_vrev32q_x_u16
__builtin_arm_mve_vrev32q_x_u8
__builtin_arm_mve_vrev64q_f16
__builtin_arm_mve_vrev64q_f32
__builtin_arm_mve_vrev64q_m_f16
__builtin_arm_mve_vrev64q_m_f32
__builtin_arm_mve_vrev64q_m_s16
__builtin_arm_mve_vrev64q_m_s32
__builtin_arm_mve_vrev64q_m_s8
__builtin_arm_mve_vrev64q_m_u16
__builtin_arm_mve_vrev64q_m_u32
__builtin_arm_mve_vrev64q_m_u8
__builtin_arm_mve_vrev64q_s16
__builtin_arm_mve_vrev64q_s32
__builtin_arm_mve_vrev64q_s8
__builtin_arm_mve_vrev64q_u16
__builtin_arm_mve_vrev64q_u32
__builtin_arm_mve_vrev64q_u8
__builtin_arm_mve_vrev64q_x_f16
__builtin_arm_mve_vrev64q_x_f32
__builtin_arm_mve_vrev64q_x_s16
__builtin_arm_mve_vrev64q_x_s32
__builtin_arm_mve_vrev64q_x_s8
__builtin_arm_mve_vrev64q_x_u16
__builtin_arm_mve_vrev64q_x_u32
__builtin_arm_mve_vrev64q_x_u8
__builtin_arm_mve_vrhaddq_m_s16
__builtin_arm_mve_vrhaddq_m_s32
__builtin_arm_mve_vrhaddq_m_s8
__builtin_arm_mve_vrhaddq_m_u16
__builtin_arm_mve_vrhaddq_m_u32
__builtin_arm_mve_vrhaddq_m_u8
__builtin_arm_mve_vrhaddq_s16
__builtin_arm_mve_vrhaddq_s32
__builtin_arm_mve_vrhaddq_s8
__builtin_arm_mve_vrhaddq_u16
__builtin_arm_mve_vrhaddq_u32
__builtin_arm_mve_vrhaddq_u8
__builtin_arm_mve_vrhaddq_x_s16
__builtin_arm_mve_vrhaddq_x_s32
__builtin_arm_mve_vrhaddq_x_s8
__builtin_arm_mve_vrhaddq_x_u16
__builtin_arm_mve_vrhaddq_x_u32
__builtin_arm_mve_vrhaddq_x_u8
__builtin_arm_mve_vrmlaldavhaq_p_s32
__builtin_arm_mve_vrmlaldavhaq_p_u32
__builtin_arm_mve_vrmlaldavhaq_s32
__builtin_arm_mve_vrmlaldavhaq_u32
__builtin_arm_mve_vrmlaldavhaxq_p_s32
__builtin_arm_mve_vrmlaldavhaxq_s32
__builtin_arm_mve_vrmlaldavhq_p_s32
__builtin_arm_mve_vrmlaldavhq_p_u32
__builtin_arm_mve_vrmlaldavhq_s32
__builtin_arm_mve_vrmlaldavhq_u32
__builtin_arm_mve_vrmlaldavhxq_p_s32
__builtin_arm_mve_vrmlaldavhxq_s32
__builtin_arm_mve_vrmlsldavhaq_p_s32
__builtin_arm_mve_vrmlsldavhaq_s32
__builtin_arm_mve_vrmlsldavhaxq_p_s32
__builtin_arm_mve_vrmlsldavhaxq_s32
__builtin_arm_mve_vrmlsldavhq_p_s32
__builtin_arm_mve_vrmlsldavhq_s32
__builtin_arm_mve_vrmlsldavhxq_p_s32
__builtin_arm_mve_vrmlsldavhxq_s32
__builtin_arm_mve_vrmulhq_m_s16
__builtin_arm_mve_vrmulhq_m_s32
__builtin_arm_mve_vrmulhq_m_s8
__builtin_arm_mve_vrmulhq_m_u16
__builtin_arm_mve_vrmulhq_m_u32
__builtin_arm_mve_vrmulhq_m_u8
__builtin_arm_mve_vrmulhq_s16
__builtin_arm_mve_vrmulhq_s32
__builtin_arm_mve_vrmulhq_s8
__builtin_arm_mve_vrmulhq_u16
__builtin_arm_mve_vrmulhq_u32
__builtin_arm_mve_vrmulhq_u8
__builtin_arm_mve_vrmulhq_x_s16
__builtin_arm_mve_vrmulhq_x_s32
__builtin_arm_mve_vrmulhq_x_s8
__builtin_arm_mve_vrmulhq_x_u16
__builtin_arm_mve_vrmulhq_x_u32
__builtin_arm_mve_vrmulhq_x_u8
__builtin_arm_mve_vrndaq_f16
__builtin_arm_mve_vrndaq_f32
__builtin_arm_mve_vrndaq_m_f16
__builtin_arm_mve_vrndaq_m_f32
__builtin_arm_mve_vrndaq_x_f16
__builtin_arm_mve_vrndaq_x_f32
__builtin_arm_mve_vrndmq_f16
__builtin_arm_mve_vrndmq_f32
__builtin_arm_mve_vrndmq_m_f16
__builtin_arm_mve_vrndmq_m_f32
__builtin_arm_mve_vrndmq_x_f16
__builtin_arm_mve_vrndmq_x_f32
__builtin_arm_mve_vrndnq_f16
__builtin_arm_mve_vrndnq_f32
__builtin_arm_mve_vrndnq_m_f16
__builtin_arm_mve_vrndnq_m_f32
__builtin_arm_mve_vrndnq_x_f16
__builtin_arm_mve_vrndnq_x_f32
__builtin_arm_mve_vrndpq_f16
__builtin_arm_mve_vrndpq_f32
__builtin_arm_mve_vrndpq_m_f16
__builtin_arm_mve_vrndpq_m_f32
__builtin_arm_mve_vrndpq_x_f16
__builtin_arm_mve_vrndpq_x_f32
__builtin_arm_mve_vrndq_f16
__builtin_arm_mve_vrndq_f32
__builtin_arm_mve_vrndq_m_f16
__builtin_arm_mve_vrndq_m_f32
__builtin_arm_mve_vrndq_x_f16
__builtin_arm_mve_vrndq_x_f32
__builtin_arm_mve_vrndxq_f16
__builtin_arm_mve_vrndxq_f32
__builtin_arm_mve_vrndxq_m_f16
__builtin_arm_mve_vrndxq_m_f32
__builtin_arm_mve_vrndxq_x_f16
__builtin_arm_mve_vrndxq_x_f32
__builtin_arm_mve_vrshlq_m_n_s16
__builtin_arm_mve_vrshlq_m_n_s32
__builtin_arm_mve_vrshlq_m_n_s8
__builtin_arm_mve_vrshlq_m_n_u16
__builtin_arm_mve_vrshlq_m_n_u32
__builtin_arm_mve_vrshlq_m_n_u8
__builtin_arm_mve_vrshlq_m_s16
__builtin_arm_mve_vrshlq_m_s32
__builtin_arm_mve_vrshlq_m_s8
__builtin_arm_mve_vrshlq_m_u16
__builtin_arm_mve_vrshlq_m_u32
__builtin_arm_mve_vrshlq_m_u8
__builtin_arm_mve_vrshlq_n_s16
__builtin_arm_mve_vrshlq_n_s32
__builtin_arm_mve_vrshlq_n_s8
__builtin_arm_mve_vrshlq_n_u16
__builtin_arm_mve_vrshlq_n_u32
__builtin_arm_mve_vrshlq_n_u8
__builtin_arm_mve_vrshlq_s16
__builtin_arm_mve_vrshlq_s32
__builtin_arm_mve_vrshlq_s8
__builtin_arm_mve_vrshlq_u16
__builtin_arm_mve_vrshlq_u32
__builtin_arm_mve_vrshlq_u8
__builtin_arm_mve_vrshlq_x_s16
__builtin_arm_mve_vrshlq_x_s32
__builtin_arm_mve_vrshlq_x_s8
__builtin_arm_mve_vrshlq_x_u16
__builtin_arm_mve_vrshlq_x_u32
__builtin_arm_mve_vrshlq_x_u8
__builtin_arm_mve_vrshrnbq_m_n_s16
__builtin_arm_mve_vrshrnbq_m_n_s32
__builtin_arm_mve_vrshrnbq_m_n_u16
__builtin_arm_mve_vrshrnbq_m_n_u32
__builtin_arm_mve_vrshrnbq_n_s16
__builtin_arm_mve_vrshrnbq_n_s32
__builtin_arm_mve_vrshrnbq_n_u16
__builtin_arm_mve_vrshrnbq_n_u32
__builtin_arm_mve_vrshrntq_m_n_s16
__builtin_arm_mve_vrshrntq_m_n_s32
__builtin_arm_mve_vrshrntq_m_n_u16
__builtin_arm_mve_vrshrntq_m_n_u32
__builtin_arm_mve_vrshrntq_n_s16
__builtin_arm_mve_vrshrntq_n_s32
__builtin_arm_mve_vrshrntq_n_u16
__builtin_arm_mve_vrshrntq_n_u32
__builtin_arm_mve_vrshrq_m_n_s16
__builtin_arm_mve_vrshrq_m_n_s32
__builtin_arm_mve_vrshrq_m_n_s8
__builtin_arm_mve_vrshrq_m_n_u16
__builtin_arm_mve_vrshrq_m_n_u32
__builtin_arm_mve_vrshrq_m_n_u8
__builtin_arm_mve_vrshrq_n_s16
__builtin_arm_mve_vrshrq_n_s32
__builtin_arm_mve_vrshrq_n_s8
__builtin_arm_mve_vrshrq_n_u16
__builtin_arm_mve_vrshrq_n_u32
__builtin_arm_mve_vrshrq_n_u8
__builtin_arm_mve_vrshrq_x_n_s16
__builtin_arm_mve_vrshrq_x_n_s32
__builtin_arm_mve_vrshrq_x_n_s8
__builtin_arm_mve_vrshrq_x_n_u16
__builtin_arm_mve_vrshrq_x_n_u32
__builtin_arm_mve_vrshrq_x_n_u8
__builtin_arm_mve_vsbciq_m_s32
__builtin_arm_mve_vsbciq_m_u32
__builtin_arm_mve_vsbciq_s32
__builtin_arm_mve_vsbciq_u32
__builtin_arm_mve_vsbcq_m_s32
__builtin_arm_mve_vsbcq_m_u32
__builtin_arm_mve_vsbcq_s32
__builtin_arm_mve_vsbcq_u32
__builtin_arm_mve_vsetq_lane_f16
__builtin_arm_mve_vsetq_lane_f32
__builtin_arm_mve_vsetq_lane_s16
__builtin_arm_mve_vsetq_lane_s32
__builtin_arm_mve_vsetq_lane_s64
__builtin_arm_mve_vsetq_lane_s8
__builtin_arm_mve_vsetq_lane_u16
__builtin_arm_mve_vsetq_lane_u32
__builtin_arm_mve_vsetq_lane_u64
__builtin_arm_mve_vsetq_lane_u8
__builtin_arm_mve_vshlcq_m_s16
__builtin_arm_mve_vshlcq_m_s32
__builtin_arm_mve_vshlcq_m_s8
__builtin_arm_mve_vshlcq_m_u16
__builtin_arm_mve_vshlcq_m_u32
__builtin_arm_mve_vshlcq_m_u8
__builtin_arm_mve_vshlcq_s16
__builtin_arm_mve_vshlcq_s32
__builtin_arm_mve_vshlcq_s8
__builtin_arm_mve_vshlcq_u16
__builtin_arm_mve_vshlcq_u32
__builtin_arm_mve_vshlcq_u8
__builtin_arm_mve_vshllbq_m_n_s16
__builtin_arm_mve_vshllbq_m_n_s8
__builtin_arm_mve_vshllbq_m_n_u16
__builtin_arm_mve_vshllbq_m_n_u8
__builtin_arm_mve_vshllbq_n_s16
__builtin_arm_mve_vshllbq_n_s8
__builtin_arm_mve_vshllbq_n_u16
__builtin_arm_mve_vshllbq_n_u8
__builtin_arm_mve_vshllbq_x_n_s16
__builtin_arm_mve_vshllbq_x_n_s8
__builtin_arm_mve_vshllbq_x_n_u16
__builtin_arm_mve_vshllbq_x_n_u8
__builtin_arm_mve_vshlltq_m_n_s16
__builtin_arm_mve_vshlltq_m_n_s8
__builtin_arm_mve_vshlltq_m_n_u16
__builtin_arm_mve_vshlltq_m_n_u8
__builtin_arm_mve_vshlltq_n_s16
__builtin_arm_mve_vshlltq_n_s8
__builtin_arm_mve_vshlltq_n_u16
__builtin_arm_mve_vshlltq_n_u8
__builtin_arm_mve_vshlltq_x_n_s16
__builtin_arm_mve_vshlltq_x_n_s8
__builtin_arm_mve_vshlltq_x_n_u16
__builtin_arm_mve_vshlltq_x_n_u8
__builtin_arm_mve_vshlq_m_n_s16
__builtin_arm_mve_vshlq_m_n_s32
__builtin_arm_mve_vshlq_m_n_s8
__builtin_arm_mve_vshlq_m_n_u16
__builtin_arm_mve_vshlq_m_n_u32
__builtin_arm_mve_vshlq_m_n_u8
__builtin_arm_mve_vshlq_m_r_s16
__builtin_arm_mve_vshlq_m_r_s32
__builtin_arm_mve_vshlq_m_r_s8
__builtin_arm_mve_vshlq_m_r_u16
__builtin_arm_mve_vshlq_m_r_u32
__builtin_arm_mve_vshlq_m_r_u8
__builtin_arm_mve_vshlq_m_s16
__builtin_arm_mve_vshlq_m_s32
__builtin_arm_mve_vshlq_m_s8
__builtin_arm_mve_vshlq_m_u16
__builtin_arm_mve_vshlq_m_u32
__builtin_arm_mve_vshlq_m_u8
__builtin_arm_mve_vshlq_n_s16
__builtin_arm_mve_vshlq_n_s32
__builtin_arm_mve_vshlq_n_s8
__builtin_arm_mve_vshlq_n_u16
__builtin_arm_mve_vshlq_n_u32
__builtin_arm_mve_vshlq_n_u8
__builtin_arm_mve_vshlq_r_s16
__builtin_arm_mve_vshlq_r_s32
__builtin_arm_mve_vshlq_r_s8
__builtin_arm_mve_vshlq_r_u16
__builtin_arm_mve_vshlq_r_u32
__builtin_arm_mve_vshlq_r_u8
__builtin_arm_mve_vshlq_s16
__builtin_arm_mve_vshlq_s32
__builtin_arm_mve_vshlq_s8
__builtin_arm_mve_vshlq_u16
__builtin_arm_mve_vshlq_u32
__builtin_arm_mve_vshlq_u8
__builtin_arm_mve_vshlq_x_n_s16
__builtin_arm_mve_vshlq_x_n_s32
__builtin_arm_mve_vshlq_x_n_s8
__builtin_arm_mve_vshlq_x_n_u16
__builtin_arm_mve_vshlq_x_n_u32
__builtin_arm_mve_vshlq_x_n_u8
__builtin_arm_mve_vshlq_x_s16
__builtin_arm_mve_vshlq_x_s32
__builtin_arm_mve_vshlq_x_s8
__builtin_arm_mve_vshlq_x_u16
__builtin_arm_mve_vshlq_x_u32
__builtin_arm_mve_vshlq_x_u8
__builtin_arm_mve_vshrnbq_m_n_s16
__builtin_arm_mve_vshrnbq_m_n_s32
__builtin_arm_mve_vshrnbq_m_n_u16
__builtin_arm_mve_vshrnbq_m_n_u32
__builtin_arm_mve_vshrnbq_n_s16
__builtin_arm_mve_vshrnbq_n_s32
__builtin_arm_mve_vshrnbq_n_u16
__builtin_arm_mve_vshrnbq_n_u32
__builtin_arm_mve_vshrntq_m_n_s16
__builtin_arm_mve_vshrntq_m_n_s32
__builtin_arm_mve_vshrntq_m_n_u16
__builtin_arm_mve_vshrntq_m_n_u32
__builtin_arm_mve_vshrntq_n_s16
__builtin_arm_mve_vshrntq_n_s32
__builtin_arm_mve_vshrntq_n_u16
__builtin_arm_mve_vshrntq_n_u32
__builtin_arm_mve_vshrq_m_n_s16
__builtin_arm_mve_vshrq_m_n_s32
__builtin_arm_mve_vshrq_m_n_s8
__builtin_arm_mve_vshrq_m_n_u16
__builtin_arm_mve_vshrq_m_n_u32
__builtin_arm_mve_vshrq_m_n_u8
__builtin_arm_mve_vshrq_n_s16
__builtin_arm_mve_vshrq_n_s32
__builtin_arm_mve_vshrq_n_s8
__builtin_arm_mve_vshrq_n_u16
__builtin_arm_mve_vshrq_n_u32
__builtin_arm_mve_vshrq_n_u8
__builtin_arm_mve_vshrq_x_n_s16
__builtin_arm_mve_vshrq_x_n_s32
__builtin_arm_mve_vshrq_x_n_s8
__builtin_arm_mve_vshrq_x_n_u16
__builtin_arm_mve_vshrq_x_n_u32
__builtin_arm_mve_vshrq_x_n_u8
__builtin_arm_mve_vsliq_m_n_s16
__builtin_arm_mve_vsliq_m_n_s32
__builtin_arm_mve_vsliq_m_n_s8
__builtin_arm_mve_vsliq_m_n_u16
__builtin_arm_mve_vsliq_m_n_u32
__builtin_arm_mve_vsliq_m_n_u8
__builtin_arm_mve_vsliq_n_s16
__builtin_arm_mve_vsliq_n_s32
__builtin_arm_mve_vsliq_n_s8
__builtin_arm_mve_vsliq_n_u16
__builtin_arm_mve_vsliq_n_u32
__builtin_arm_mve_vsliq_n_u8
__builtin_arm_mve_vsriq_m_n_s16
__builtin_arm_mve_vsriq_m_n_s32
__builtin_arm_mve_vsriq_m_n_s8
__builtin_arm_mve_vsriq_m_n_u16
__builtin_arm_mve_vsriq_m_n_u32
__builtin_arm_mve_vsriq_m_n_u8
__builtin_arm_mve_vsriq_n_s16
__builtin_arm_mve_vsriq_n_s32
__builtin_arm_mve_vsriq_n_s8
__builtin_arm_mve_vsriq_n_u16
__builtin_arm_mve_vsriq_n_u32
__builtin_arm_mve_vsriq_n_u8
__builtin_arm_mve_vst1q_f16
__builtin_arm_mve_vst1q_f32
__builtin_arm_mve_vst1q_p_f16
__builtin_arm_mve_vst1q_p_f32
__builtin_arm_mve_vst1q_p_s16
__builtin_arm_mve_vst1q_p_s32
__builtin_arm_mve_vst1q_p_s8
__builtin_arm_mve_vst1q_p_u16
__builtin_arm_mve_vst1q_p_u32
__builtin_arm_mve_vst1q_p_u8
__builtin_arm_mve_vst1q_s16
__builtin_arm_mve_vst1q_s32
__builtin_arm_mve_vst1q_s8
__builtin_arm_mve_vst1q_u16
__builtin_arm_mve_vst1q_u32
__builtin_arm_mve_vst1q_u8
__builtin_arm_mve_vst2q_f16
__builtin_arm_mve_vst2q_f32
__builtin_arm_mve_vst2q_s16
__builtin_arm_mve_vst2q_s32
__builtin_arm_mve_vst2q_s8
__builtin_arm_mve_vst2q_u16
__builtin_arm_mve_vst2q_u32
__builtin_arm_mve_vst2q_u8
__builtin_arm_mve_vst4q_f16
__builtin_arm_mve_vst4q_f32
__builtin_arm_mve_vst4q_s16
__builtin_arm_mve_vst4q_s32
__builtin_arm_mve_vst4q_s8
__builtin_arm_mve_vst4q_u16
__builtin_arm_mve_vst4q_u32
__builtin_arm_mve_vst4q_u8
__builtin_arm_mve_vstrbq_p_s16
__builtin_arm_mve_vstrbq_p_s32
__builtin_arm_mve_vstrbq_p_s8
__builtin_arm_mve_vstrbq_p_u16
__builtin_arm_mve_vstrbq_p_u32
__builtin_arm_mve_vstrbq_p_u8
__builtin_arm_mve_vstrbq_s16
__builtin_arm_mve_vstrbq_s32
__builtin_arm_mve_vstrbq_s8
__builtin_arm_mve_vstrbq_scatter_offset_p_s16
__builtin_arm_mve_vstrbq_scatter_offset_p_s32
__builtin_arm_mve_vstrbq_scatter_offset_p_s8
__builtin_arm_mve_vstrbq_scatter_offset_p_u16
__builtin_arm_mve_vstrbq_scatter_offset_p_u32
__builtin_arm_mve_vstrbq_scatter_offset_p_u8
__builtin_arm_mve_vstrbq_scatter_offset_s16
__builtin_arm_mve_vstrbq_scatter_offset_s32
__builtin_arm_mve_vstrbq_scatter_offset_s8
__builtin_arm_mve_vstrbq_scatter_offset_u16
__builtin_arm_mve_vstrbq_scatter_offset_u32
__builtin_arm_mve_vstrbq_scatter_offset_u8
__builtin_arm_mve_vstrbq_u16
__builtin_arm_mve_vstrbq_u32
__builtin_arm_mve_vstrbq_u8
__builtin_arm_mve_vstrdq_scatter_base_p_s64
__builtin_arm_mve_vstrdq_scatter_base_p_u64
__builtin_arm_mve_vstrdq_scatter_base_s64
__builtin_arm_mve_vstrdq_scatter_base_u64
__builtin_arm_mve_vstrdq_scatter_base_wb_p_s64
__builtin_arm_mve_vstrdq_scatter_base_wb_p_u64
__builtin_arm_mve_vstrdq_scatter_base_wb_s64
__builtin_arm_mve_vstrdq_scatter_base_wb_u64
__builtin_arm_mve_vstrdq_scatter_offset_p_s64
__builtin_arm_mve_vstrdq_scatter_offset_p_u64
__builtin_arm_mve_vstrdq_scatter_offset_s64
__builtin_arm_mve_vstrdq_scatter_offset_u64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_p_s64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_p_u64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_s64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_u64
__builtin_arm_mve_vstrhq_f16
__builtin_arm_mve_vstrhq_p_f16
__builtin_arm_mve_vstrhq_p_s16
__builtin_arm_mve_vstrhq_p_s32
__builtin_arm_mve_vstrhq_p_u16
__builtin_arm_mve_vstrhq_p_u32
__builtin_arm_mve_vstrhq_s16
__builtin_arm_mve_vstrhq_s32
__builtin_arm_mve_vstrhq_scatter_offset_f16
__builtin_arm_mve_vstrhq_scatter_offset_p_f16
__builtin_arm_mve_vstrhq_scatter_offset_p_s16
__builtin_arm_mve_vstrhq_scatter_offset_p_s32
__builtin_arm_mve_vstrhq_scatter_offset_p_u16
__builtin_arm_mve_vstrhq_scatter_offset_p_u32
__builtin_arm_mve_vstrhq_scatter_offset_s16
__builtin_arm_mve_vstrhq_scatter_offset_s32
__builtin_arm_mve_vstrhq_scatter_offset_u16
__builtin_arm_mve_vstrhq_scatter_offset_u32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_f16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_f16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_s16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_s32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_u16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_u32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_s16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_s32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_u16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_u32
__builtin_arm_mve_vstrhq_u16
__builtin_arm_mve_vstrhq_u32
__builtin_arm_mve_vstrwq_f32
__builtin_arm_mve_vstrwq_p_f32
__builtin_arm_mve_vstrwq_p_s32
__builtin_arm_mve_vstrwq_p_u32
__builtin_arm_mve_vstrwq_s32
__builtin_arm_mve_vstrwq_scatter_base_f32
__builtin_arm_mve_vstrwq_scatter_base_p_f32
__builtin_arm_mve_vstrwq_scatter_base_p_s32
__builtin_arm_mve_vstrwq_scatter_base_p_u32
__builtin_arm_mve_vstrwq_scatter_base_s32
__builtin_arm_mve_vstrwq_scatter_base_u32
__builtin_arm_mve_vstrwq_scatter_base_wb_f32
__builtin_arm_mve_vstrwq_scatter_base_wb_p_f32
__builtin_arm_mve_vstrwq_scatter_base_wb_p_s32
__builtin_arm_mve_vstrwq_scatter_base_wb_p_u32
__builtin_arm_mve_vstrwq_scatter_base_wb_s32
__builtin_arm_mve_vstrwq_scatter_base_wb_u32
__builtin_arm_mve_vstrwq_scatter_offset_f32
__builtin_arm_mve_vstrwq_scatter_offset_p_f32
__builtin_arm_mve_vstrwq_scatter_offset_p_s32
__builtin_arm_mve_vstrwq_scatter_offset_p_u32
__builtin_arm_mve_vstrwq_scatter_offset_s32
__builtin_arm_mve_vstrwq_scatter_offset_u32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_f32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p_f32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p_s32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p_u32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_s32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_u32
__builtin_arm_mve_vstrwq_u32
__builtin_arm_mve_vsubq_f16
__builtin_arm_mve_vsubq_f32
__builtin_arm_mve_vsubq_m_f16
__builtin_arm_mve_vsubq_m_f32
__builtin_arm_mve_vsubq_m_n_f16
__builtin_arm_mve_vsubq_m_n_f32
__builtin_arm_mve_vsubq_m_n_s16
__builtin_arm_mve_vsubq_m_n_s32
__builtin_arm_mve_vsubq_m_n_s8
__builtin_arm_mve_vsubq_m_n_u16
__builtin_arm_mve_vsubq_m_n_u32
__builtin_arm_mve_vsubq_m_n_u8
__builtin_arm_mve_vsubq_m_s16
__builtin_arm_mve_vsubq_m_s32
__builtin_arm_mve_vsubq_m_s8
__builtin_arm_mve_vsubq_m_u16
__builtin_arm_mve_vsubq_m_u32
__builtin_arm_mve_vsubq_m_u8
__builtin_arm_mve_vsubq_n_f16
__builtin_arm_mve_vsubq_n_f32
__builtin_arm_mve_vsubq_n_s16
__builtin_arm_mve_vsubq_n_s32
__builtin_arm_mve_vsubq_n_s8
__builtin_arm_mve_vsubq_n_u16
__builtin_arm_mve_vsubq_n_u32
__builtin_arm_mve_vsubq_n_u8
__builtin_arm_mve_vsubq_s16
__builtin_arm_mve_vsubq_s32
__builtin_arm_mve_vsubq_s8
__builtin_arm_mve_vsubq_u16
__builtin_arm_mve_vsubq_u32
__builtin_arm_mve_vsubq_u8
__builtin_arm_mve_vsubq_x_f16
__builtin_arm_mve_vsubq_x_f32
__builtin_arm_mve_vsubq_x_n_f16
__builtin_arm_mve_vsubq_x_n_f32
__builtin_arm_mve_vsubq_x_n_s16
__builtin_arm_mve_vsubq_x_n_s32
__builtin_arm_mve_vsubq_x_n_s8
__builtin_arm_mve_vsubq_x_n_u16
__builtin_arm_mve_vsubq_x_n_u32
__builtin_arm_mve_vsubq_x_n_u8
__builtin_arm_mve_vsubq_x_s16
__builtin_arm_mve_vsubq_x_s32
__builtin_arm_mve_vsubq_x_s8
__builtin_arm_mve_vsubq_x_u16
__builtin_arm_mve_vsubq_x_u32
__builtin_arm_mve_vsubq_x_u8
__builtin_arm_mve_vuninitializedq_f16
__builtin_arm_mve_vuninitializedq_f32
__builtin_arm_mve_vuninitializedq_polymorphic_f16
__builtin_arm_mve_vuninitializedq_polymorphic_f32
__builtin_arm_mve_vuninitializedq_polymorphic_s16
__builtin_arm_mve_vuninitializedq_polymorphic_s32
__builtin_arm_mve_vuninitializedq_polymorphic_s64
__builtin_arm_mve_vuninitializedq_polymorphic_s8
__builtin_arm_mve_vuninitializedq_polymorphic_u16
__builtin_arm_mve_vuninitializedq_polymorphic_u32
__builtin_arm_mve_vuninitializedq_polymorphic_u64
__builtin_arm_mve_vuninitializedq_polymorphic_u8
__builtin_arm_mve_vuninitializedq_s16
__builtin_arm_mve_vuninitializedq_s32
__builtin_arm_mve_vuninitializedq_s64
__builtin_arm_mve_vuninitializedq_s8
__builtin_arm_mve_vuninitializedq_u16
__builtin_arm_mve_vuninitializedq_u32
__builtin_arm_mve_vuninitializedq_u64
__builtin_arm_mve_vuninitializedq_u8
__builtin_arm_mve_vabavq_p
__builtin_arm_mve_vabavq
__builtin_arm_mve_vabdq
__builtin_arm_mve_vabdq_m
__builtin_arm_mve_vabdq_x
__builtin_arm_mve_vabsq
__builtin_arm_mve_vabsq_m
__builtin_arm_mve_vabsq_x
__builtin_arm_mve_vadciq_m
__builtin_arm_mve_vadciq
__builtin_arm_mve_vadcq_m
__builtin_arm_mve_vadcq
__builtin_arm_mve_vaddlvaq_p
__builtin_arm_mve_vaddlvaq
__builtin_arm_mve_vaddlvq_p
__builtin_arm_mve_vaddlvq
__builtin_arm_mve_vaddq
__builtin_arm_mve_vaddq_m
__builtin_arm_mve_vaddq_x
__builtin_arm_mve_vaddvaq_p
__builtin_arm_mve_vaddvaq
__builtin_arm_mve_vaddvq_p
__builtin_arm_mve_vaddvq
__builtin_arm_mve_vandq
__builtin_arm_mve_vandq_m
__builtin_arm_mve_vandq_x
__builtin_arm_mve_vbicq
__builtin_arm_mve_vbicq_m
__builtin_arm_mve_vbicq_m_n
__builtin_arm_mve_vbicq_x
__builtin_arm_mve_vbrsrq_m
__builtin_arm_mve_vbrsrq
__builtin_arm_mve_vbrsrq_x
__builtin_arm_mve_vcaddq_rot270
__builtin_arm_mve_vcaddq_rot270_m
__builtin_arm_mve_vcaddq_rot270_x
__builtin_arm_mve_vcaddq_rot90
__builtin_arm_mve_vcaddq_rot90_m
__builtin_arm_mve_vcaddq_rot90_x
__builtin_arm_mve_vclsq_m
__builtin_arm_mve_vclsq
__builtin_arm_mve_vclsq_x
__builtin_arm_mve_vclzq_m
__builtin_arm_mve_vclzq
__builtin_arm_mve_vclzq_x
__builtin_arm_mve_vcmlaq
__builtin_arm_mve_vcmlaq_m
__builtin_arm_mve_vcmlaq_rot180
__builtin_arm_mve_vcmlaq_rot180_m
__builtin_arm_mve_vcmlaq_rot270
__builtin_arm_mve_vcmlaq_rot270_m
__builtin_arm_mve_vcmlaq_rot90
__builtin_arm_mve_vcmlaq_rot90_m
__builtin_arm_mve_vcmpcsq_m
__builtin_arm_mve_vcmpcsq
__builtin_arm_mve_vcmpeqq
__builtin_arm_mve_vcmpeqq_m
__builtin_arm_mve_vcmpgeq
__builtin_arm_mve_vcmpgeq_m
__builtin_arm_mve_vcmpgtq
__builtin_arm_mve_vcmpgtq_m
__builtin_arm_mve_vcmphiq_m
__builtin_arm_mve_vcmphiq
__builtin_arm_mve_vcmpleq
__builtin_arm_mve_vcmpleq_m
__builtin_arm_mve_vcmpltq
__builtin_arm_mve_vcmpltq_m
__builtin_arm_mve_vcmpneq
__builtin_arm_mve_vcmpneq_m
__builtin_arm_mve_vcmulq
__builtin_arm_mve_vcmulq_m
__builtin_arm_mve_vcmulq_rot180
__builtin_arm_mve_vcmulq_rot180_m
__builtin_arm_mve_vcmulq_rot180_x
__builtin_arm_mve_vcmulq_rot270
__builtin_arm_mve_vcmulq_rot270_m
__builtin_arm_mve_vcmulq_rot270_x
__builtin_arm_mve_vcmulq_rot90
__builtin_arm_mve_vcmulq_rot90_m
__builtin_arm_mve_vcmulq_rot90_x
__builtin_arm_mve_vcmulq_x
__builtin_arm_mve_vcvtaq_m
__builtin_arm_mve_vcvtmq_m
__builtin_arm_mve_vcvtnq_m
__builtin_arm_mve_vcvtpq_m
__builtin_arm_mve_vcvtq
__builtin_arm_mve_vcvtq_m
__builtin_arm_mve_vcvtq_m_n
__builtin_arm_mve_vcvtq_n
__builtin_arm_mve_vcvtq_x
__builtin_arm_mve_vcvtq_x_n
__builtin_arm_mve_vddupq_m
__builtin_arm_mve_vddupq_u16
__builtin_arm_mve_vddupq_u32
__builtin_arm_mve_vddupq_u8
__builtin_arm_mve_vddupq_x_u16
__builtin_arm_mve_vddupq_x_u32
__builtin_arm_mve_vddupq_x_u8
__builtin_arm_mve_vdupq_m
__builtin_arm_mve_vdwdupq_m
__builtin_arm_mve_vdwdupq_u16
__builtin_arm_mve_vdwdupq_u32
__builtin_arm_mve_vdwdupq_u8
__builtin_arm_mve_vdwdupq_x_u16
__builtin_arm_mve_vdwdupq_x_u32
__builtin_arm_mve_vdwdupq_x_u8
__builtin_arm_mve_veorq
__builtin_arm_mve_veorq_m
__builtin_arm_mve_veorq_x
__builtin_arm_mve_vfmaq
__builtin_arm_mve_vfmaq_m
__builtin_arm_mve_vfmasq_m
__builtin_arm_mve_vfmasq
__builtin_arm_mve_vfmsq
__builtin_arm_mve_vfmsq_m
__builtin_arm_mve_vgetq_lane
__builtin_arm_mve_vhaddq_m
__builtin_arm_mve_vhaddq
__builtin_arm_mve_vhaddq_x
__builtin_arm_mve_vhcaddq_rot270_m
__builtin_arm_mve_vhcaddq_rot270
__builtin_arm_mve_vhcaddq_rot270_x
__builtin_arm_mve_vhcaddq_rot90_m
__builtin_arm_mve_vhcaddq_rot90
__builtin_arm_mve_vhcaddq_rot90_x
__builtin_arm_mve_vhsubq_m
__builtin_arm_mve_vhsubq
__builtin_arm_mve_vhsubq_x
__builtin_arm_mve_vidupq_m
__builtin_arm_mve_vidupq_u16
__builtin_arm_mve_vidupq_u32
__builtin_arm_mve_vidupq_u8
__builtin_arm_mve_vidupq_x_u16
__builtin_arm_mve_vidupq_x_u32
__builtin_arm_mve_vidupq_x_u8
__builtin_arm_mve_viwdupq_m
__builtin_arm_mve_viwdupq_u16
__builtin_arm_mve_viwdupq_u32
__builtin_arm_mve_viwdupq_u8
__builtin_arm_mve_viwdupq_x_u16
__builtin_arm_mve_viwdupq_x_u32
__builtin_arm_mve_viwdupq_x_u8
__builtin_arm_mve_vld1q
__builtin_arm_mve_vld1q_z
__builtin_arm_mve_vld2q
__builtin_arm_mve_vld4q
__builtin_arm_mve_vldrbq_gather_offset
__builtin_arm_mve_vldrbq_gather_offset_z
__builtin_arm_mve_vldrdq_gather_offset
__builtin_arm_mve_vldrdq_gather_offset_z
__builtin_arm_mve_vldrdq_gather_shifted_offset
__builtin_arm_mve_vldrdq_gather_shifted_offset_z
__builtin_arm_mve_vldrhq_gather_offset
__builtin_arm_mve_vldrhq_gather_offset_z
__builtin_arm_mve_vldrhq_gather_shifted_offset
__builtin_arm_mve_vldrhq_gather_shifted_offset_z
__builtin_arm_mve_vldrwq_gather_offset
__builtin_arm_mve_vldrwq_gather_offset_z
__builtin_arm_mve_vldrwq_gather_shifted_offset
__builtin_arm_mve_vldrwq_gather_shifted_offset_z
__builtin_arm_mve_vmaxaq_m
__builtin_arm_mve_vmaxaq
__builtin_arm_mve_vmaxavq_p
__builtin_arm_mve_vmaxavq
__builtin_arm_mve_vmaxnmaq
__builtin_arm_mve_vmaxnmaq_m
__builtin_arm_mve_vmaxnmavq
__builtin_arm_mve_vmaxnmavq_p
__builtin_arm_mve_vmaxnmq
__builtin_arm_mve_vmaxnmq_m
__builtin_arm_mve_vmaxnmq_x
__builtin_arm_mve_vmaxnmvq
__builtin_arm_mve_vmaxnmvq_p
__builtin_arm_mve_vmaxq_m
__builtin_arm_mve_vmaxq
__builtin_arm_mve_vmaxq_x
__builtin_arm_mve_vmaxvq_p
__builtin_arm_mve_vmaxvq
__builtin_arm_mve_vminaq_m
__builtin_arm_mve_vminaq
__builtin_arm_mve_vminavq_p
__builtin_arm_mve_vminavq
__builtin_arm_mve_vminnmaq
__builtin_arm_mve_vminnmaq_m
__builtin_arm_mve_vminnmavq
__builtin_arm_mve_vminnmavq_p
__builtin_arm_mve_vminnmq
__builtin_arm_mve_vminnmq_m
__builtin_arm_mve_vminnmq_x
__builtin_arm_mve_vminnmvq
__builtin_arm_mve_vminnmvq_p
__builtin_arm_mve_vminq_m
__builtin_arm_mve_vminq
__builtin_arm_mve_vminq_x
__builtin_arm_mve_vminvq_p
__builtin_arm_mve_vminvq
__builtin_arm_mve_vmladavaq_p
__builtin_arm_mve_vmladavaq
__builtin_arm_mve_vmladavaxq_p
__builtin_arm_mve_vmladavaxq
__builtin_arm_mve_vmladavq_p
__builtin_arm_mve_vmladavq
__builtin_arm_mve_vmladavxq_p
__builtin_arm_mve_vmladavxq
__builtin_arm_mve_vmlaldavaq_p
__builtin_arm_mve_vmlaldavaq
__builtin_arm_mve_vmlaldavaxq_p
__builtin_arm_mve_vmlaldavaxq
__builtin_arm_mve_vmlaldavq_p
__builtin_arm_mve_vmlaldavq
__builtin_arm_mve_vmlaldavxq_p
__builtin_arm_mve_vmlaldavxq
__builtin_arm_mve_vmlaq_m
__builtin_arm_mve_vmlaq
__builtin_arm_mve_vmlasq_m
__builtin_arm_mve_vmlasq
__builtin_arm_mve_vmlsdavaq_p
__builtin_arm_mve_vmlsdavaq
__builtin_arm_mve_vmlsdavaxq_p
__builtin_arm_mve_vmlsdavaxq
__builtin_arm_mve_vmlsdavq_p
__builtin_arm_mve_vmlsdavq
__builtin_arm_mve_vmlsdavxq_p
__builtin_arm_mve_vmlsdavxq
__builtin_arm_mve_vmlsldavaq_p
__builtin_arm_mve_vmlsldavaq
__builtin_arm_mve_vmlsldavaxq_p
__builtin_arm_mve_vmlsldavaxq
__builtin_arm_mve_vmlsldavq_p
__builtin_arm_mve_vmlsldavq
__builtin_arm_mve_vmlsldavxq_p
__builtin_arm_mve_vmlsldavxq
__builtin_arm_mve_vmovlbq_m
__builtin_arm_mve_vmovlbq
__builtin_arm_mve_vmovlbq_x
__builtin_arm_mve_vmovltq_m
__builtin_arm_mve_vmovltq
__builtin_arm_mve_vmovltq_x
__builtin_arm_mve_vmovnbq_m
__builtin_arm_mve_vmovnbq
__builtin_arm_mve_vmovntq_m
__builtin_arm_mve_vmovntq
__builtin_arm_mve_vmulhq_m
__builtin_arm_mve_vmulhq
__builtin_arm_mve_vmulhq_x
__builtin_arm_mve_vmullbq_int_m
__builtin_arm_mve_vmullbq_int
__builtin_arm_mve_vmullbq_int_x
__builtin_arm_mve_vmullbq_poly_m
__builtin_arm_mve_vmullbq_poly
__builtin_arm_mve_vmullbq_poly_x
__builtin_arm_mve_vmulltq_int_m
__builtin_arm_mve_vmulltq_int
__builtin_arm_mve_vmulltq_int_x
__builtin_arm_mve_vmulltq_poly_m
__builtin_arm_mve_vmulltq_poly
__builtin_arm_mve_vmulltq_poly_x
__builtin_arm_mve_vmulq
__builtin_arm_mve_vmulq_m
__builtin_arm_mve_vmulq_x
__builtin_arm_mve_vmvnq_m
__builtin_arm_mve_vmvnq
__builtin_arm_mve_vmvnq_x
__builtin_arm_mve_vnegq
__builtin_arm_mve_vnegq_m
__builtin_arm_mve_vnegq_x
__builtin_arm_mve_vornq
__builtin_arm_mve_vornq_m
__builtin_arm_mve_vornq_x
__builtin_arm_mve_vorrq
__builtin_arm_mve_vorrq_m
__builtin_arm_mve_vorrq_m_n
__builtin_arm_mve_vorrq_x
__builtin_arm_mve_vpselq
__builtin_arm_mve_vqabsq_m
__builtin_arm_mve_vqabsq
__builtin_arm_mve_vqaddq_m
__builtin_arm_mve_vqaddq
__builtin_arm_mve_vqdmladhq_m
__builtin_arm_mve_vqdmladhq
__builtin_arm_mve_vqdmladhxq_m
__builtin_arm_mve_vqdmladhxq
__builtin_arm_mve_vqdmlahq_m
__builtin_arm_mve_vqdmlahq
__builtin_arm_mve_vqdmlashq_m
__builtin_arm_mve_vqdmlashq
__builtin_arm_mve_vqdmlsdhq_m
__builtin_arm_mve_vqdmlsdhq
__builtin_arm_mve_vqdmlsdhxq_m
__builtin_arm_mve_vqdmlsdhxq
__builtin_arm_mve_vqdmulhq_m
__builtin_arm_mve_vqdmulhq
__builtin_arm_mve_vqdmullbq_m
__builtin_arm_mve_vqdmullbq
__builtin_arm_mve_vqdmulltq_m
__builtin_arm_mve_vqdmulltq
__builtin_arm_mve_vqmovnbq_m
__builtin_arm_mve_vqmovnbq
__builtin_arm_mve_vqmovntq_m
__builtin_arm_mve_vqmovntq
__builtin_arm_mve_vqmovunbq_m
__builtin_arm_mve_vqmovunbq
__builtin_arm_mve_vqmovuntq_m
__builtin_arm_mve_vqmovuntq
__builtin_arm_mve_vqnegq_m
__builtin_arm_mve_vqnegq
__builtin_arm_mve_vqrdmladhq_m
__builtin_arm_mve_vqrdmladhq
__builtin_arm_mve_vqrdmladhxq_m
__builtin_arm_mve_vqrdmladhxq
__builtin_arm_mve_vqrdmlahq_m
__builtin_arm_mve_vqrdmlahq
__builtin_arm_mve_vqrdmlashq_m
__builtin_arm_mve_vqrdmlashq
__builtin_arm_mve_vqrdmlsdhq_m
__builtin_arm_mve_vqrdmlsdhq
__builtin_arm_mve_vqrdmlsdhxq_m
__builtin_arm_mve_vqrdmlsdhxq
__builtin_arm_mve_vqrdmulhq_m
__builtin_arm_mve_vqrdmulhq
__builtin_arm_mve_vqrshlq_m_n
__builtin_arm_mve_vqrshlq_m
__builtin_arm_mve_vqrshlq
__builtin_arm_mve_vqrshrnbq_m
__builtin_arm_mve_vqrshrnbq
__builtin_arm_mve_vqrshrntq_m
__builtin_arm_mve_vqrshrntq
__builtin_arm_mve_vqrshrunbq_m
__builtin_arm_mve_vqrshrunbq
__builtin_arm_mve_vqrshruntq_m
__builtin_arm_mve_vqrshruntq
__builtin_arm_mve_vqshlq_m_n
__builtin_arm_mve_vqshlq_m_r
__builtin_arm_mve_vqshlq_m
__builtin_arm_mve_vqshlq_n
__builtin_arm_mve_vqshlq_r
__builtin_arm_mve_vqshlq
__builtin_arm_mve_vqshluq_m
__builtin_arm_mve_vqshluq
__builtin_arm_mve_vqshrnbq_m
__builtin_arm_mve_vqshrnbq
__builtin_arm_mve_vqshrntq_m
__builtin_arm_mve_vqshrntq
__builtin_arm_mve_vqshrunbq_m
__builtin_arm_mve_vqshrunbq
__builtin_arm_mve_vqshruntq_m
__builtin_arm_mve_vqshruntq
__builtin_arm_mve_vqsubq_m
__builtin_arm_mve_vqsubq
__builtin_arm_mve_vreinterpretq_f16
__builtin_arm_mve_vreinterpretq_f32
__builtin_arm_mve_vreinterpretq_s16
__builtin_arm_mve_vreinterpretq_s32
__builtin_arm_mve_vreinterpretq_s64
__builtin_arm_mve_vreinterpretq_s8
__builtin_arm_mve_vreinterpretq_u16
__builtin_arm_mve_vreinterpretq_u32
__builtin_arm_mve_vreinterpretq_u64
__builtin_arm_mve_vreinterpretq_u8
__builtin_arm_mve_vrev16q_m
__builtin_arm_mve_vrev16q
__builtin_arm_mve_vrev16q_x
__builtin_arm_mve_vrev32q
__builtin_arm_mve_vrev32q_m
__builtin_arm_mve_vrev32q_x
__builtin_arm_mve_vrev64q
__builtin_arm_mve_vrev64q_m
__builtin_arm_mve_vrev64q_x
__builtin_arm_mve_vrhaddq_m
__builtin_arm_mve_vrhaddq
__builtin_arm_mve_vrhaddq_x
__builtin_arm_mve_vrmlaldavhaq_p
__builtin_arm_mve_vrmlaldavhaq
__builtin_arm_mve_vrmlaldavhaxq_p
__builtin_arm_mve_vrmlaldavhaxq
__builtin_arm_mve_vrmlaldavhq_p
__builtin_arm_mve_vrmlaldavhq
__builtin_arm_mve_vrmlaldavhxq_p
__builtin_arm_mve_vrmlaldavhxq
__builtin_arm_mve_vrmlsldavhaq_p
__builtin_arm_mve_vrmlsldavhaq
__builtin_arm_mve_vrmlsldavhaxq_p
__builtin_arm_mve_vrmlsldavhaxq
__builtin_arm_mve_vrmlsldavhq_p
__builtin_arm_mve_vrmlsldavhq
__builtin_arm_mve_vrmlsldavhxq_p
__builtin_arm_mve_vrmlsldavhxq
__builtin_arm_mve_vrmulhq_m
__builtin_arm_mve_vrmulhq
__builtin_arm_mve_vrmulhq_x
__builtin_arm_mve_vrndaq
__builtin_arm_mve_vrndaq_m
__builtin_arm_mve_vrndaq_x
__builtin_arm_mve_vrndmq
__builtin_arm_mve_vrndmq_m
__builtin_arm_mve_vrndmq_x
__builtin_arm_mve_vrndnq
__builtin_arm_mve_vrndnq_m
__builtin_arm_mve_vrndnq_x
__builtin_arm_mve_vrndpq
__builtin_arm_mve_vrndpq_m
__builtin_arm_mve_vrndpq_x
__builtin_arm_mve_vrndq
__builtin_arm_mve_vrndq_m
__builtin_arm_mve_vrndq_x
__builtin_arm_mve_vrndxq
__builtin_arm_mve_vrndxq_m
__builtin_arm_mve_vrndxq_x
__builtin_arm_mve_vrshlq_m_n
__builtin_arm_mve_vrshlq_m
__builtin_arm_mve_vrshlq
__builtin_arm_mve_vrshlq_x
__builtin_arm_mve_vrshrnbq_m
__builtin_arm_mve_vrshrnbq
__builtin_arm_mve_vrshrntq_m
__builtin_arm_mve_vrshrntq
__builtin_arm_mve_vrshrq_m
__builtin_arm_mve_vrshrq
__builtin_arm_mve_vrshrq_x
__builtin_arm_mve_vsbciq_m
__builtin_arm_mve_vsbciq
__builtin_arm_mve_vsbcq_m
__builtin_arm_mve_vsbcq
__builtin_arm_mve_vsetq_lane
__builtin_arm_mve_vshlcq_m
__builtin_arm_mve_vshlcq
__builtin_arm_mve_vshllbq_m
__builtin_arm_mve_vshllbq
__builtin_arm_mve_vshllbq_x
__builtin_arm_mve_vshlltq_m
__builtin_arm_mve_vshlltq
__builtin_arm_mve_vshlltq_x
__builtin_arm_mve_vshlq_m_n
__builtin_arm_mve_vshlq_m_r
__builtin_arm_mve_vshlq_m
__builtin_arm_mve_vshlq_n
__builtin_arm_mve_vshlq_r
__builtin_arm_mve_vshlq
__builtin_arm_mve_vshlq_x_n
__builtin_arm_mve_vshlq_x
__builtin_arm_mve_vshrnbq_m
__builtin_arm_mve_vshrnbq
__builtin_arm_mve_vshrntq_m
__builtin_arm_mve_vshrntq
__builtin_arm_mve_vshrq_m
__builtin_arm_mve_vshrq
__builtin_arm_mve_vshrq_x
__builtin_arm_mve_vsliq_m
__builtin_arm_mve_vsliq
__builtin_arm_mve_vsriq_m
__builtin_arm_mve_vsriq
__builtin_arm_mve_vst1q
__builtin_arm_mve_vst1q_p
__builtin_arm_mve_vst2q
__builtin_arm_mve_vst4q
__builtin_arm_mve_vstrbq_p
__builtin_arm_mve_vstrbq
__builtin_arm_mve_vstrbq_scatter_offset_p
__builtin_arm_mve_vstrbq_scatter_offset
__builtin_arm_mve_vstrdq_scatter_base_p
__builtin_arm_mve_vstrdq_scatter_base
__builtin_arm_mve_vstrdq_scatter_base_wb_p
__builtin_arm_mve_vstrdq_scatter_base_wb
__builtin_arm_mve_vstrdq_scatter_offset_p
__builtin_arm_mve_vstrdq_scatter_offset
__builtin_arm_mve_vstrdq_scatter_shifted_offset_p
__builtin_arm_mve_vstrdq_scatter_shifted_offset
__builtin_arm_mve_vstrhq
__builtin_arm_mve_vstrhq_p
__builtin_arm_mve_vstrhq_scatter_offset
__builtin_arm_mve_vstrhq_scatter_offset_p
__builtin_arm_mve_vstrhq_scatter_shifted_offset
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p
__builtin_arm_mve_vstrwq
__builtin_arm_mve_vstrwq_p
__builtin_arm_mve_vstrwq_scatter_base
__builtin_arm_mve_vstrwq_scatter_base_p
__builtin_arm_mve_vstrwq_scatter_base_wb
__builtin_arm_mve_vstrwq_scatter_base_wb_p
__builtin_arm_mve_vstrwq_scatter_offset
__builtin_arm_mve_vstrwq_scatter_offset_p
__builtin_arm_mve_vstrwq_scatter_shifted_offset
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p
__builtin_arm_mve_vsubq
__builtin_arm_mve_vsubq_m
__builtin_arm_mve_vsubq_x
__builtin_arm_mve_vuninitializedq
__builtin_arm_cde_cx1
arm_cde.h
__builtin_arm_cde_cx1a
__builtin_arm_cde_cx1d
__builtin_arm_cde_cx1da
__builtin_arm_cde_cx2
__builtin_arm_cde_cx2a
__builtin_arm_cde_cx2d
__builtin_arm_cde_cx2da
__builtin_arm_cde_cx3
__builtin_arm_cde_cx3a
__builtin_arm_cde_cx3d
__builtin_arm_cde_cx3da
__builtin_arm_cde_vcx1_u32
__builtin_arm_cde_vcx1a_u32
__builtin_arm_cde_vcx1d_u64
__builtin_arm_cde_vcx1da_u64
__builtin_arm_cde_vcx1q_m_f16
__builtin_arm_cde_vcx1q_m_f32
__builtin_arm_cde_vcx1q_m_s16
__builtin_arm_cde_vcx1q_m_s32
__builtin_arm_cde_vcx1q_m_s64
__builtin_arm_cde_vcx1q_m_s8
__builtin_arm_cde_vcx1q_m_u16
__builtin_arm_cde_vcx1q_m_u32
__builtin_arm_cde_vcx1q_m_u64
__builtin_arm_cde_vcx1q_m_u8
__builtin_arm_cde_vcx1q_u8
__builtin_arm_cde_vcx1qa_f16
__builtin_arm_cde_vcx1qa_f32
__builtin_arm_cde_vcx1qa_m_f16
__builtin_arm_cde_vcx1qa_m_f32
__builtin_arm_cde_vcx1qa_m_s16
__builtin_arm_cde_vcx1qa_m_s32
__builtin_arm_cde_vcx1qa_m_s64
__builtin_arm_cde_vcx1qa_m_s8
__builtin_arm_cde_vcx1qa_m_u16
__builtin_arm_cde_vcx1qa_m_u32
__builtin_arm_cde_vcx1qa_m_u64
__builtin_arm_cde_vcx1qa_m_u8
__builtin_arm_cde_vcx1qa_s16
__builtin_arm_cde_vcx1qa_s32
__builtin_arm_cde_vcx1qa_s64
__builtin_arm_cde_vcx1qa_s8
__builtin_arm_cde_vcx1qa_u16
__builtin_arm_cde_vcx1qa_u32
__builtin_arm_cde_vcx1qa_u64
__builtin_arm_cde_vcx1qa_u8
__builtin_arm_cde_vcx2_u32
__builtin_arm_cde_vcx2a_u32
__builtin_arm_cde_vcx2d_u64
__builtin_arm_cde_vcx2da_u64
__builtin_arm_cde_vcx2q_f16
__builtin_arm_cde_vcx2q_f32
__builtin_arm_cde_vcx2q_m_impl_f16
__builtin_arm_cde_vcx2q_m_impl_f32
__builtin_arm_cde_vcx2q_m_impl_s16
__builtin_arm_cde_vcx2q_m_impl_s32
__builtin_arm_cde_vcx2q_m_impl_s64
__builtin_arm_cde_vcx2q_m_impl_s8
__builtin_arm_cde_vcx2q_m_impl_u16
__builtin_arm_cde_vcx2q_m_impl_u32
__builtin_arm_cde_vcx2q_m_impl_u64
__builtin_arm_cde_vcx2q_m_impl_u8
__builtin_arm_cde_vcx2q_s16
__builtin_arm_cde_vcx2q_s32
__builtin_arm_cde_vcx2q_s64
__builtin_arm_cde_vcx2q_s8
__builtin_arm_cde_vcx2q_u16
__builtin_arm_cde_vcx2q_u32
__builtin_arm_cde_vcx2q_u64
__builtin_arm_cde_vcx2q_u8
__builtin_arm_cde_vcx2q_u8_f16
__builtin_arm_cde_vcx2q_u8_f32
__builtin_arm_cde_vcx2q_u8_s16
__builtin_arm_cde_vcx2q_u8_s32
__builtin_arm_cde_vcx2q_u8_s64
__builtin_arm_cde_vcx2q_u8_s8
__builtin_arm_cde_vcx2q_u8_u16
__builtin_arm_cde_vcx2q_u8_u32
__builtin_arm_cde_vcx2q_u8_u64
__builtin_arm_cde_vcx2q_u8_u8
__builtin_arm_cde_vcx2qa_impl_f16
__builtin_arm_cde_vcx2qa_impl_f32
__builtin_arm_cde_vcx2qa_impl_s16
__builtin_arm_cde_vcx2qa_impl_s32
__builtin_arm_cde_vcx2qa_impl_s64
__builtin_arm_cde_vcx2qa_impl_s8
__builtin_arm_cde_vcx2qa_impl_u16
__builtin_arm_cde_vcx2qa_impl_u32
__builtin_arm_cde_vcx2qa_impl_u64
__builtin_arm_cde_vcx2qa_impl_u8
__builtin_arm_cde_vcx2qa_m_impl_f16
__builtin_arm_cde_vcx2qa_m_impl_f32
__builtin_arm_cde_vcx2qa_m_impl_s16
__builtin_arm_cde_vcx2qa_m_impl_s32
__builtin_arm_cde_vcx2qa_m_impl_s64
__builtin_arm_cde_vcx2qa_m_impl_s8
__builtin_arm_cde_vcx2qa_m_impl_u16
__builtin_arm_cde_vcx2qa_m_impl_u32
__builtin_arm_cde_vcx2qa_m_impl_u64
__builtin_arm_cde_vcx2qa_m_impl_u8
__builtin_arm_cde_vcx3_u32
__builtin_arm_cde_vcx3a_u32
__builtin_arm_cde_vcx3d_u64
__builtin_arm_cde_vcx3da_u64
__builtin_arm_cde_vcx3q_impl_f16
__builtin_arm_cde_vcx3q_impl_f32
__builtin_arm_cde_vcx3q_impl_s16
__builtin_arm_cde_vcx3q_impl_s32
__builtin_arm_cde_vcx3q_impl_s64
__builtin_arm_cde_vcx3q_impl_s8
__builtin_arm_cde_vcx3q_impl_u16
__builtin_arm_cde_vcx3q_impl_u32
__builtin_arm_cde_vcx3q_impl_u64
__builtin_arm_cde_vcx3q_impl_u8
__builtin_arm_cde_vcx3q_m_impl_f16
__builtin_arm_cde_vcx3q_m_impl_f32
__builtin_arm_cde_vcx3q_m_impl_s16
__builtin_arm_cde_vcx3q_m_impl_s32
__builtin_arm_cde_vcx3q_m_impl_s64
__builtin_arm_cde_vcx3q_m_impl_s8
__builtin_arm_cde_vcx3q_m_impl_u16
__builtin_arm_cde_vcx3q_m_impl_u32
__builtin_arm_cde_vcx3q_m_impl_u64
__builtin_arm_cde_vcx3q_m_impl_u8
__builtin_arm_cde_vcx3q_u8_impl_f16
__builtin_arm_cde_vcx3q_u8_impl_f32
__builtin_arm_cde_vcx3q_u8_impl_s16
__builtin_arm_cde_vcx3q_u8_impl_s32
__builtin_arm_cde_vcx3q_u8_impl_s64
__builtin_arm_cde_vcx3q_u8_impl_s8
__builtin_arm_cde_vcx3q_u8_impl_u16
__builtin_arm_cde_vcx3q_u8_impl_u32
__builtin_arm_cde_vcx3q_u8_impl_u64
__builtin_arm_cde_vcx3q_u8_impl_u8
__builtin_arm_cde_vcx3qa_impl_f16
__builtin_arm_cde_vcx3qa_impl_f32
__builtin_arm_cde_vcx3qa_impl_s16
__builtin_arm_cde_vcx3qa_impl_s32
__builtin_arm_cde_vcx3qa_impl_s64
__builtin_arm_cde_vcx3qa_impl_s8
__builtin_arm_cde_vcx3qa_impl_u16
__builtin_arm_cde_vcx3qa_impl_u32
__builtin_arm_cde_vcx3qa_impl_u64
__builtin_arm_cde_vcx3qa_impl_u8
__builtin_arm_cde_vcx3qa_m_impl_f16
__builtin_arm_cde_vcx3qa_m_impl_f32
__builtin_arm_cde_vcx3qa_m_impl_s16
__builtin_arm_cde_vcx3qa_m_impl_s32
__builtin_arm_cde_vcx3qa_m_impl_s64
__builtin_arm_cde_vcx3qa_m_impl_s8
__builtin_arm_cde_vcx3qa_m_impl_u16
__builtin_arm_cde_vcx3qa_m_impl_u32
__builtin_arm_cde_vcx3qa_m_impl_u64
__builtin_arm_cde_vcx3qa_m_impl_u8
__builtin_arm_cde_vreinterpretq_u8_u8
vIUiC
__ldrexd
WiWiCD*
_MoveFromCoprocessor
UiIUiIUiIUiIUiIUi
_MoveFromCoprocessor2
_MoveToCoprocessor
vUiIUiIUiIUiIUiIUi
_MoveToCoprocessor2
__ARMEL__
__ARMEB__
__ARM_BIG_ENDIAN
_M_ARM_NT
_M_ARMT
_M_ARM
_M_THUMB
_M_ARM_FP
_ARM_
__RENDERSCRIPT__
__AVR
__AVR__
avrxmega1
avrxmega3
__AVR_AT90S1200__
__AVR_ATtiny11__
__AVR_ATtiny12__
__AVR_ATtiny15__
__AVR_ATtiny28__
__AVR_AT90S2313__
__AVR_AT90S2323__
__AVR_AT90S2333__
__AVR_AT90S2343__
__AVR_ATtiny22__
__AVR_ATtiny26__
__AVR_AT86RF401__
__AVR_AT90S4414__
__AVR_AT90S4433__
__AVR_AT90S4434__
__AVR_AT90S8515__
__AVR_AT90c8534__
__AVR_AT90S8535__
__AVR_ATA5272__
__AVR_ATtiny13__
__AVR_ATtiny13A__
__AVR_ATtiny2313__
__AVR_ATtiny2313A__
__AVR_ATtiny24__
__AVR_ATtiny24A__
__AVR_ATtiny4313__
__AVR_ATtiny44__
__AVR_ATtiny44A__
__AVR_ATtiny84__
__AVR_ATtiny84A__
__AVR_ATtiny25__
__AVR_ATtiny45__
__AVR_ATtiny85__
__AVR_ATtiny261__
__AVR_ATtiny261A__
__AVR_ATtiny441__
__AVR_ATtiny461__
__AVR_ATtiny461A__
__AVR_ATtiny841__
__AVR_ATtiny861__
__AVR_ATtiny861A__
__AVR_ATtiny87__
__AVR_ATtiny43U__
__AVR_ATtiny48__
__AVR_ATtiny88__
__AVR_ATtiny828__
__AVR_AT43USB355__
__AVR_AT76C711__
__AVR_ATmega103__
__AVR_AT43USB320__
__AVR_ATtiny167__
__AVR_AT90USB82__
__AVR_AT90USB162__
__AVR_ATA5505__
__AVR_ATmega8U2__
__AVR_ATmega16U2__
__AVR_ATmega32U2__
__AVR_ATtiny1634__
__AVR_ATmega8__
__AVR_ATA6289__
__AVR_ATmega8A__
__AVR_ATA6285__
__AVR_ATA6286__
__AVR_ATmega48__
__AVR_ATmega48A__
__AVR_ATmega48PA__
__AVR_ATmega48PB__
__AVR_ATmega48P__
__AVR_ATmega88__
__AVR_ATmega88A__
__AVR_ATmega88P__
__AVR_ATmega88PA__
__AVR_ATmega88PB__
__AVR_ATmega8515__
__AVR_ATmega8535__
__AVR_ATmega8HVA__
__AVR_AT90PWM1__
__AVR_AT90PWM2__
__AVR_AT90PWM2B__
__AVR_AT90PWM3__
__AVR_AT90PWM3B__
__AVR_AT90PWM81__
__AVR_ATA5790__
__AVR_ATA5795__
__AVR_ATmega16__
__AVR_ATmega16A__
__AVR_ATmega161__
__AVR_ATmega162__
__AVR_ATmega163__
__AVR_ATmega164A__
__AVR_ATmega164P__
__AVR_ATmega164PA__
__AVR_ATmega165__
__AVR_ATmega165A__
__AVR_ATmega165P__
__AVR_ATmega165PA__
__AVR_ATmega168__
__AVR_ATmega168A__
__AVR_ATmega168P__
__AVR_ATmega168PA__
__AVR_ATmega168PB__
__AVR_ATmega169__
__AVR_ATmega169A__
__AVR_ATmega169P__
__AVR_ATmega169PA__
__AVR_ATmega32__
__AVR_ATmega32A__
__AVR_ATmega323__
__AVR_ATmega324A__
__AVR_ATmega324P__
__AVR_ATmega324PA__
atmega324pb
__AVR_ATmega324PB__
__AVR_ATmega325__
__AVR_ATmega325A__
__AVR_ATmega325P__
__AVR_ATmega325PA__
__AVR_ATmega3250__
__AVR_ATmega3250A__
__AVR_ATmega3250P__
__AVR_ATmega3250PA__
__AVR_ATmega328__
__AVR_ATmega328P__
atmega328pb
__AVR_ATmega328PB__
__AVR_ATmega329__
__AVR_ATmega329A__
__AVR_ATmega329P__
__AVR_ATmega329PA__
__AVR_ATmega3290__
__AVR_ATmega3290A__
__AVR_ATmega3290P__
__AVR_ATmega3290PA__
__AVR_ATmega406__
__AVR_ATmega64__
__AVR_ATmega64A__
__AVR_ATmega640__
__AVR_ATmega644__
__AVR_ATmega644A__
__AVR_ATmega644P__
__AVR_ATmega644PA__
__AVR_ATmega645__
__AVR_ATmega645A__
__AVR_ATmega645P__
__AVR_ATmega649__
__AVR_ATmega649A__
__AVR_ATmega649P__
__AVR_ATmega6450__
__AVR_ATmega6450A__
__AVR_ATmega6450P__
__AVR_ATmega6490__
__AVR_ATmega6490A__
__AVR_ATmega6490P__
__AVR_ATmega64RFR2__
__AVR_ATmega644RFR2__
__AVR_ATmega16HVA__
__AVR_ATmega16HVA2__
__AVR_ATmega16HVB__
__AVR_ATmega16HVBREVB__
__AVR_ATmega32HVB__
__AVR_ATmega32HVBREVB__
__AVR_ATmega64HVE__
__AVR_AT90CAN32__
__AVR_AT90CAN64__
__AVR_AT90PWM161__
__AVR_AT90PWM216__
__AVR_AT90PWM316__
__AVR_ATmega32C1__
__AVR_ATmega64C1__
__AVR_ATmega16M1__
__AVR_ATmega32M1__
__AVR_ATmega64M1__
__AVR_ATmega16U4__
__AVR_ATmega32U4__
__AVR_ATmega32U6__
__AVR_AT90USB646__
__AVR_AT90USB647__
__AVR_AT90SCR100__
__AVR_AT94K__
__AVR_AT000__
__AVR_ATmega128__
__AVR_ATmega128A__
__AVR_ATmega1280__
__AVR_ATmega1281__
__AVR_ATmega1284__
__AVR_ATmega1284P__
__AVR_ATmega128RFA1__
__AVR_ATmega128RFR2__
__AVR_ATmega1284RFR2__
__AVR_AT90CAN128__
__AVR_AT90USB1286__
__AVR_AT90USB1287__
__AVR_ATmega2560__
__AVR_ATmega2561__
__AVR_ATmega256RFR2__
__AVR_ATmega2564RFR2__
__AVR_ATxmega16A4__
__AVR_ATxmega16a4U__
__AVR_ATxmega16C4__
__AVR_ATxmega16D4__
__AVR_ATxmega32A4__
__AVR_ATxmega32A4U__
__AVR_ATxmega32C4__
__AVR_ATxmega32D4__
__AVR_ATxmega32E5__
__AVR_ATxmega16E5__
__AVR_ATxmega8E5__
atxmega32x1
__AVR_ATxmega32X1__
atxmega64a3
__AVR_ATxmega64A3__
__AVR_ATxmega64A3U__
__AVR_ATxmega64A4U__
__AVR_ATxmega64B1__
__AVR_ATxmega64B3__
__AVR_ATxmega64C3__
__AVR_ATxmega64D3__
__AVR_ATxmega64D4__
__AVR_ATxmega64A1__
__AVR_ATxmega64A1U__
__AVR_ATxmega128A3__
__AVR_ATxmega128A3U__
__AVR_ATxmega128B1__
__AVR_ATxmega128B3__
__AVR_ATxmega128C3__
__AVR_ATxmega128D3__
__AVR_ATxmega128D4__
__AVR_ATxmega192A3__
__AVR_ATxmega192A3U__
__AVR_ATxmega192C3__
__AVR_ATxmega192D3__
__AVR_ATxmega256A3__
__AVR_ATxmega256A3U__
__AVR_ATxmega256A3B__
__AVR_ATxmega256A3BU__
__AVR_ATxmega256C3__
__AVR_ATxmega256D3__
__AVR_ATxmega384C3__
__AVR_ATxmega384D3__
__AVR_ATxmega128A1__
__AVR_ATxmega128A1U__
__AVR_ATxmega128a4U__
__AVR_ATtiny4__
__AVR_ATtiny5__
__AVR_ATtiny9__
__AVR_ATtiny10__
__AVR_ATtiny20__
__AVR_ATtiny40__
attiny102
__AVR_ATtiny102__
attiny104
__AVR_ATtiny104__
__builtin_preserve_field_info
__builtin_btf_type_id
LUi.
__builtin_preserve_type_info
__builtin_preserve_enum_value
__bpf__
__BPF__
probe
__qdsp6__
__hexagon__
hexagonv5
__HEXAGON_V5__
__HEXAGON_ARCH__
__QDSP6_V5__
__QDSP6_ARCH__
hexagonv55
__HEXAGON_V55__
__QDSP6_V55__
hexagonv60
__HEXAGON_V60__
__QDSP6_V60__
hexagonv62
__HEXAGON_V62__
hexagonv65
__HEXAGON_V65__
hexagonv66
__HEXAGON_V66__
hexagonv67
__HEXAGON_V67__
hexagonv67t
__HEXAGON_V67T__
__HVX__
__HVX_ARCH__
__HVX_LENGTH__
hvx-length128b
__HVXDBL__
audio
__HEXAGON_AUDIO__
__HEXAGON_PHYSICAL_SLOTS__
long-calls
+hvx-length64b
+hvx-length128b
-hvx
+audio
r1:0
r3:2
r5:4
r7:6
r9:8
r11:10
r13:12
r15:14
r17:16
r19:18
r21:20
r23:22
r25:24
r27:26
r29:28
r31:30
__builtin_SI_to_SXTHI_asrh
v5|v55|v60|v62|v65|v66|v67
__builtin_brev_ldd
v*LLi*CLLi*iC
__builtin_brev_ldw
v*i*Ci*iC
__builtin_brev_ldh
v*s*Cs*iC
__builtin_brev_lduh
v*Us*CUs*iC
__builtin_brev_ldb
v*Sc*CSc*iC
__builtin_brev_ldub
v*Uc*CUc*iC
__builtin_circ_ldd
LLi*LLi*LLi*iIi
__builtin_circ_ldw
i*i*i*iIi
__builtin_circ_ldh
s*s*s*iIi
__builtin_circ_lduh
Us*Us*Us*iIi
__builtin_circ_ldb
c*c*c*iIi
__builtin_circ_ldub
Uc*Uc*Uc*iIi
__builtin_brev_std
LLi*CLLi*LLiiC
__builtin_brev_stw
i*Ci*iiC
__builtin_brev_sth
s*Cs*iiC
__builtin_brev_sthhi
__builtin_brev_stb
c*Cc*iiC
__builtin_circ_std
LLi*LLi*LLiiIi
__builtin_circ_stw
i*i*iiIi
__builtin_circ_sth
s*s*iiIi
__builtin_circ_sthhi
__builtin_circ_stb
c*c*iiIi
__builtin_HEXAGON_L2_loadrub_pci
iv*IiivC*
__builtin_HEXAGON_L2_loadrb_pci
__builtin_HEXAGON_L2_loadruh_pci
__builtin_HEXAGON_L2_loadrh_pci
__builtin_HEXAGON_L2_loadri_pci
__builtin_HEXAGON_L2_loadrd_pci
LLiv*IiivC*
__builtin_HEXAGON_L2_loadrub_pcr
iv*ivC*
__builtin_HEXAGON_L2_loadrb_pcr
__builtin_HEXAGON_L2_loadruh_pcr
__builtin_HEXAGON_L2_loadrh_pcr
__builtin_HEXAGON_L2_loadri_pcr
__builtin_HEXAGON_L2_loadrd_pcr
LLiv*ivC*
__builtin_HEXAGON_S2_storerb_pci
vv*IiiivC*
__builtin_HEXAGON_S2_storerh_pci
__builtin_HEXAGON_S2_storerf_pci
__builtin_HEXAGON_S2_storeri_pci
__builtin_HEXAGON_S2_storerd_pci
vv*IiiLLivC*
__builtin_HEXAGON_S2_storerb_pcr
vv*iivC*
__builtin_HEXAGON_S2_storerh_pcr
__builtin_HEXAGON_S2_storerf_pcr
__builtin_HEXAGON_S2_storeri_pcr
__builtin_HEXAGON_S2_storerd_pcr
vv*iLLivC*
__builtin_HEXAGON_prefetch
__builtin_HEXAGON_A6_vminub_RdP
LLiLLiLLi
v62|v65|v66|v67
__builtin_HEXAGON_V6_vmaskedstoreq
vV64bv*V16i
hvxv60|hvxv62|hvxv65|hvxv66|hvxv67
__builtin_HEXAGON_V6_vmaskedstorenq
__builtin_HEXAGON_V6_vmaskedstorentq
__builtin_HEXAGON_V6_vmaskedstorentnq
__builtin_HEXAGON_V6_vmaskedstoreq_128B
vV128bv*V32i
__builtin_HEXAGON_V6_vmaskedstorenq_128B
__builtin_HEXAGON_V6_vmaskedstorentq_128B
__builtin_HEXAGON_V6_vmaskedstorentnq_128B
__builtin_HEXAGON_V6_vrmpybub_rtt
V32iV16iLLi
hvxv65
__builtin_HEXAGON_V6_vrmpybub_rtt_128B
V64iV32iLLi
__builtin_HEXAGON_V6_vrmpybub_rtt_acc
V32iV32iV16iLLi
__builtin_HEXAGON_V6_vrmpybub_rtt_acc_128B
V64iV64iV32iLLi
__builtin_HEXAGON_V6_vrmpyub_rtt
__builtin_HEXAGON_V6_vrmpyub_rtt_128B
__builtin_HEXAGON_V6_vrmpyub_rtt_acc
__builtin_HEXAGON_V6_vrmpyub_rtt_acc_128B
__builtin_HEXAGON_C2_cmpeq
__builtin_HEXAGON_C2_cmpgt
__builtin_HEXAGON_C2_cmpgtu
__builtin_HEXAGON_C2_cmpeqp
iLLiLLi
__builtin_HEXAGON_C2_cmpgtp
__builtin_HEXAGON_C2_cmpgtup
__builtin_HEXAGON_A4_rcmpeqi
__builtin_HEXAGON_A4_rcmpneqi
__builtin_HEXAGON_A4_rcmpeq
__builtin_HEXAGON_A4_rcmpneq
__builtin_HEXAGON_C2_bitsset
__builtin_HEXAGON_C2_bitsclr
__builtin_HEXAGON_C4_nbitsset
__builtin_HEXAGON_C4_nbitsclr
__builtin_HEXAGON_C2_cmpeqi
__builtin_HEXAGON_C2_cmpgti
__builtin_HEXAGON_C2_cmpgtui
iiUIi
__builtin_HEXAGON_C2_cmpgei
__builtin_HEXAGON_C2_cmpgeui
__builtin_HEXAGON_C2_cmplt
__builtin_HEXAGON_C2_cmpltu
__builtin_HEXAGON_C2_bitsclri
__builtin_HEXAGON_C4_nbitsclri
__builtin_HEXAGON_C4_cmpneqi
__builtin_HEXAGON_C4_cmpltei
__builtin_HEXAGON_C4_cmplteui
__builtin_HEXAGON_C4_cmpneq
__builtin_HEXAGON_C4_cmplte
__builtin_HEXAGON_C4_cmplteu
__builtin_HEXAGON_C2_and
__builtin_HEXAGON_C2_or
__builtin_HEXAGON_C2_xor
__builtin_HEXAGON_C2_andn
__builtin_HEXAGON_C2_not
__builtin_HEXAGON_C2_orn
__builtin_HEXAGON_C4_and_and
__builtin_HEXAGON_C4_and_or
__builtin_HEXAGON_C4_or_and
__builtin_HEXAGON_C4_or_or
__builtin_HEXAGON_C4_and_andn
__builtin_HEXAGON_C4_and_orn
__builtin_HEXAGON_C4_or_andn
__builtin_HEXAGON_C4_or_orn
__builtin_HEXAGON_C2_pxfer_map
__builtin_HEXAGON_C2_any8
__builtin_HEXAGON_C2_all8
__builtin_HEXAGON_C2_vitpack
__builtin_HEXAGON_C2_mux
__builtin_HEXAGON_C2_muxii
iiIiIi
__builtin_HEXAGON_C2_muxir
iiiIi
__builtin_HEXAGON_C2_muxri
iiIii
__builtin_HEXAGON_C2_vmux
LLiiLLiLLi
__builtin_HEXAGON_C2_mask
__builtin_HEXAGON_A2_vcmpbeq
__builtin_HEXAGON_A4_vcmpbeqi
iLLiUIi
__builtin_HEXAGON_A4_vcmpbeq_any
__builtin_HEXAGON_A2_vcmpbgtu
__builtin_HEXAGON_A4_vcmpbgtui
__builtin_HEXAGON_A4_vcmpbgt
__builtin_HEXAGON_A4_vcmpbgti
iLLiIi
__builtin_HEXAGON_A4_cmpbeq
__builtin_HEXAGON_A4_cmpbeqi
__builtin_HEXAGON_A4_cmpbgtu
__builtin_HEXAGON_A4_cmpbgtui
__builtin_HEXAGON_A4_cmpbgt
__builtin_HEXAGON_A4_cmpbgti
__builtin_HEXAGON_A2_vcmpheq
__builtin_HEXAGON_A2_vcmphgt
__builtin_HEXAGON_A2_vcmphgtu
__builtin_HEXAGON_A4_vcmpheqi
__builtin_HEXAGON_A4_vcmphgti
__builtin_HEXAGON_A4_vcmphgtui
__builtin_HEXAGON_A4_cmpheq
__builtin_HEXAGON_A4_cmphgt
__builtin_HEXAGON_A4_cmphgtu
__builtin_HEXAGON_A4_cmpheqi
__builtin_HEXAGON_A4_cmphgti
__builtin_HEXAGON_A4_cmphgtui
__builtin_HEXAGON_A2_vcmpweq
__builtin_HEXAGON_A2_vcmpwgt
__builtin_HEXAGON_A2_vcmpwgtu
__builtin_HEXAGON_A4_vcmpweqi
__builtin_HEXAGON_A4_vcmpwgti
__builtin_HEXAGON_A4_vcmpwgtui
__builtin_HEXAGON_A4_boundscheck
iiLLi
__builtin_HEXAGON_A4_tlbmatch
iLLii
__builtin_HEXAGON_C2_tfrpr
__builtin_HEXAGON_C2_tfrrp
__builtin_HEXAGON_C4_fastcorner9
__builtin_HEXAGON_C4_fastcorner9_not
__builtin_HEXAGON_M2_mpy_acc_hh_s0
__builtin_HEXAGON_M2_mpy_acc_hh_s1
__builtin_HEXAGON_M2_mpy_acc_hl_s0
__builtin_HEXAGON_M2_mpy_acc_hl_s1
__builtin_HEXAGON_M2_mpy_acc_lh_s0
__builtin_HEXAGON_M2_mpy_acc_lh_s1
__builtin_HEXAGON_M2_mpy_acc_ll_s0
__builtin_HEXAGON_M2_mpy_acc_ll_s1
__builtin_HEXAGON_M2_mpy_nac_hh_s0
__builtin_HEXAGON_M2_mpy_nac_hh_s1
__builtin_HEXAGON_M2_mpy_nac_hl_s0
__builtin_HEXAGON_M2_mpy_nac_hl_s1
__builtin_HEXAGON_M2_mpy_nac_lh_s0
__builtin_HEXAGON_M2_mpy_nac_lh_s1
__builtin_HEXAGON_M2_mpy_nac_ll_s0
__builtin_HEXAGON_M2_mpy_nac_ll_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s1
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s0
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s1
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s0
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s1
__builtin_HEXAGON_M2_mpy_hh_s0
__builtin_HEXAGON_M2_mpy_hh_s1
__builtin_HEXAGON_M2_mpy_hl_s0
__builtin_HEXAGON_M2_mpy_hl_s1
__builtin_HEXAGON_M2_mpy_lh_s0
__builtin_HEXAGON_M2_mpy_lh_s1
__builtin_HEXAGON_M2_mpy_ll_s0
__builtin_HEXAGON_M2_mpy_ll_s1
__builtin_HEXAGON_M2_mpy_sat_hh_s0
__builtin_HEXAGON_M2_mpy_sat_hh_s1
__builtin_HEXAGON_M2_mpy_sat_hl_s0
__builtin_HEXAGON_M2_mpy_sat_hl_s1
__builtin_HEXAGON_M2_mpy_sat_lh_s0
__builtin_HEXAGON_M2_mpy_sat_lh_s1
__builtin_HEXAGON_M2_mpy_sat_ll_s0
__builtin_HEXAGON_M2_mpy_sat_ll_s1
__builtin_HEXAGON_M2_mpy_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s1
__builtin_HEXAGON_M2_mpyd_acc_hh_s0
LLiLLiii
__builtin_HEXAGON_M2_mpyd_acc_hh_s1
__builtin_HEXAGON_M2_mpyd_acc_hl_s0
__builtin_HEXAGON_M2_mpyd_acc_hl_s1
__builtin_HEXAGON_M2_mpyd_acc_lh_s0
__builtin_HEXAGON_M2_mpyd_acc_lh_s1
__builtin_HEXAGON_M2_mpyd_acc_ll_s0
__builtin_HEXAGON_M2_mpyd_acc_ll_s1
__builtin_HEXAGON_M2_mpyd_nac_hh_s0
__builtin_HEXAGON_M2_mpyd_nac_hh_s1
__builtin_HEXAGON_M2_mpyd_nac_hl_s0
__builtin_HEXAGON_M2_mpyd_nac_hl_s1
__builtin_HEXAGON_M2_mpyd_nac_lh_s0
__builtin_HEXAGON_M2_mpyd_nac_lh_s1
__builtin_HEXAGON_M2_mpyd_nac_ll_s0
__builtin_HEXAGON_M2_mpyd_nac_ll_s1
__builtin_HEXAGON_M2_mpyd_hh_s0
LLiii
__builtin_HEXAGON_M2_mpyd_hh_s1
__builtin_HEXAGON_M2_mpyd_hl_s0
__builtin_HEXAGON_M2_mpyd_hl_s1
__builtin_HEXAGON_M2_mpyd_lh_s0
__builtin_HEXAGON_M2_mpyd_lh_s1
__builtin_HEXAGON_M2_mpyd_ll_s0
__builtin_HEXAGON_M2_mpyd_ll_s1
__builtin_HEXAGON_M2_mpyd_rnd_hh_s0
__builtin_HEXAGON_M2_mpyd_rnd_hh_s1
__builtin_HEXAGON_M2_mpyd_rnd_hl_s0
__builtin_HEXAGON_M2_mpyd_rnd_hl_s1
__builtin_HEXAGON_M2_mpyd_rnd_lh_s0
__builtin_HEXAGON_M2_mpyd_rnd_lh_s1
__builtin_HEXAGON_M2_mpyd_rnd_ll_s0
__builtin_HEXAGON_M2_mpyd_rnd_ll_s1
__builtin_HEXAGON_M2_mpyu_acc_hh_s0
__builtin_HEXAGON_M2_mpyu_acc_hh_s1
__builtin_HEXAGON_M2_mpyu_acc_hl_s0
__builtin_HEXAGON_M2_mpyu_acc_hl_s1
__builtin_HEXAGON_M2_mpyu_acc_lh_s0
__builtin_HEXAGON_M2_mpyu_acc_lh_s1
__builtin_HEXAGON_M2_mpyu_acc_ll_s0
__builtin_HEXAGON_M2_mpyu_acc_ll_s1
__builtin_HEXAGON_M2_mpyu_nac_hh_s0
__builtin_HEXAGON_M2_mpyu_nac_hh_s1
__builtin_HEXAGON_M2_mpyu_nac_hl_s0
__builtin_HEXAGON_M2_mpyu_nac_hl_s1
__builtin_HEXAGON_M2_mpyu_nac_lh_s0
__builtin_HEXAGON_M2_mpyu_nac_lh_s1
__builtin_HEXAGON_M2_mpyu_nac_ll_s0
__builtin_HEXAGON_M2_mpyu_nac_ll_s1
__builtin_HEXAGON_M2_mpyu_hh_s0
Uiii
__builtin_HEXAGON_M2_mpyu_hh_s1
__builtin_HEXAGON_M2_mpyu_hl_s0
__builtin_HEXAGON_M2_mpyu_hl_s1
__builtin_HEXAGON_M2_mpyu_lh_s0
__builtin_HEXAGON_M2_mpyu_lh_s1
__builtin_HEXAGON_M2_mpyu_ll_s0
__builtin_HEXAGON_M2_mpyu_ll_s1
__builtin_HEXAGON_M2_mpyud_acc_hh_s0
__builtin_HEXAGON_M2_mpyud_acc_hh_s1
__builtin_HEXAGON_M2_mpyud_acc_hl_s0
__builtin_HEXAGON_M2_mpyud_acc_hl_s1
__builtin_HEXAGON_M2_mpyud_acc_lh_s0
__builtin_HEXAGON_M2_mpyud_acc_lh_s1
__builtin_HEXAGON_M2_mpyud_acc_ll_s0
__builtin_HEXAGON_M2_mpyud_acc_ll_s1
__builtin_HEXAGON_M2_mpyud_nac_hh_s0
__builtin_HEXAGON_M2_mpyud_nac_hh_s1
__builtin_HEXAGON_M2_mpyud_nac_hl_s0
__builtin_HEXAGON_M2_mpyud_nac_hl_s1
__builtin_HEXAGON_M2_mpyud_nac_lh_s0
__builtin_HEXAGON_M2_mpyud_nac_lh_s1
__builtin_HEXAGON_M2_mpyud_nac_ll_s0
__builtin_HEXAGON_M2_mpyud_nac_ll_s1
__builtin_HEXAGON_M2_mpyud_hh_s0
ULLiii
__builtin_HEXAGON_M2_mpyud_hh_s1
__builtin_HEXAGON_M2_mpyud_hl_s0
__builtin_HEXAGON_M2_mpyud_hl_s1
__builtin_HEXAGON_M2_mpyud_lh_s0
__builtin_HEXAGON_M2_mpyud_lh_s1
__builtin_HEXAGON_M2_mpyud_ll_s0
__builtin_HEXAGON_M2_mpyud_ll_s1
__builtin_HEXAGON_M2_mpysmi
__builtin_HEXAGON_M2_macsip
iiiUIi
__builtin_HEXAGON_M2_macsin
__builtin_HEXAGON_M2_dpmpyss_s0
__builtin_HEXAGON_M2_dpmpyss_acc_s0
__builtin_HEXAGON_M2_dpmpyss_nac_s0
__builtin_HEXAGON_M2_dpmpyuu_s0
__builtin_HEXAGON_M2_dpmpyuu_acc_s0
__builtin_HEXAGON_M2_dpmpyuu_nac_s0
__builtin_HEXAGON_M2_mpy_up
__builtin_HEXAGON_M2_mpy_up_s1
__builtin_HEXAGON_M2_mpy_up_s1_sat
__builtin_HEXAGON_M2_mpyu_up
__builtin_HEXAGON_M2_mpysu_up
__builtin_HEXAGON_M2_dpmpyss_rnd_s0
__builtin_HEXAGON_M4_mac_up_s1_sat
__builtin_HEXAGON_M4_nac_up_s1_sat
__builtin_HEXAGON_M2_mpyi
__builtin_HEXAGON_M2_mpyui
__builtin_HEXAGON_M2_maci
__builtin_HEXAGON_M2_acci
__builtin_HEXAGON_M2_accii
__builtin_HEXAGON_M2_nacci
__builtin_HEXAGON_M2_naccii
__builtin_HEXAGON_M2_subacc
__builtin_HEXAGON_M4_mpyrr_addr
__builtin_HEXAGON_M4_mpyri_addr_u2
iiUIii
__builtin_HEXAGON_M4_mpyri_addr
__builtin_HEXAGON_M4_mpyri_addi
iUIiiUIi
__builtin_HEXAGON_M4_mpyrr_addi
iUIiii
__builtin_HEXAGON_M2_vmpy2s_s0
__builtin_HEXAGON_M2_vmpy2s_s1
__builtin_HEXAGON_M2_vmac2s_s0
__builtin_HEXAGON_M2_vmac2s_s1
__builtin_HEXAGON_M2_vmpy2su_s0
__builtin_HEXAGON_M2_vmpy2su_s1
__builtin_HEXAGON_M2_vmac2su_s0
__builtin_HEXAGON_M2_vmac2su_s1
__builtin_HEXAGON_M2_vmpy2s_s0pack
__builtin_HEXAGON_M2_vmpy2s_s1pack
__builtin_HEXAGON_M2_vmac2
__builtin_HEXAGON_M2_vmpy2es_s0
__builtin_HEXAGON_M2_vmpy2es_s1
__builtin_HEXAGON_M2_vmac2es_s0
LLiLLiLLiLLi
__builtin_HEXAGON_M2_vmac2es_s1
__builtin_HEXAGON_M2_vmac2es
__builtin_HEXAGON_M2_vrmac_s0
__builtin_HEXAGON_M2_vrmpy_s0
__builtin_HEXAGON_M2_vdmpyrs_s0
__builtin_HEXAGON_M2_vdmpyrs_s1
__builtin_HEXAGON_M5_vrmpybuu
__builtin_HEXAGON_M5_vrmacbuu
__builtin_HEXAGON_M5_vrmpybsu
__builtin_HEXAGON_M5_vrmacbsu
__builtin_HEXAGON_M5_vmpybuu
__builtin_HEXAGON_M5_vmpybsu
__builtin_HEXAGON_M5_vmacbuu
__builtin_HEXAGON_M5_vmacbsu
__builtin_HEXAGON_M5_vdmpybsu
__builtin_HEXAGON_M5_vdmacbsu
__builtin_HEXAGON_M2_vdmacs_s0
__builtin_HEXAGON_M2_vdmacs_s1
__builtin_HEXAGON_M2_vdmpys_s0
__builtin_HEXAGON_M2_vdmpys_s1
__builtin_HEXAGON_M2_cmpyrs_s0
__builtin_HEXAGON_M2_cmpyrs_s1
__builtin_HEXAGON_M2_cmpyrsc_s0
__builtin_HEXAGON_M2_cmpyrsc_s1
__builtin_HEXAGON_M2_cmacs_s0
__builtin_HEXAGON_M2_cmacs_s1
__builtin_HEXAGON_M2_cmacsc_s0
__builtin_HEXAGON_M2_cmacsc_s1
__builtin_HEXAGON_M2_cmpys_s0
__builtin_HEXAGON_M2_cmpys_s1
__builtin_HEXAGON_M2_cmpysc_s0
__builtin_HEXAGON_M2_cmpysc_s1
__builtin_HEXAGON_M2_cnacs_s0
__builtin_HEXAGON_M2_cnacs_s1
__builtin_HEXAGON_M2_cnacsc_s0
__builtin_HEXAGON_M2_cnacsc_s1
__builtin_HEXAGON_M2_vrcmpys_s1
LLiLLii
__builtin_HEXAGON_M2_vrcmpys_acc_s1
LLiLLiLLii
__builtin_HEXAGON_M2_vrcmpys_s1rp
__builtin_HEXAGON_M2_mmacls_s0
__builtin_HEXAGON_M2_mmacls_s1
__builtin_HEXAGON_M2_mmachs_s0
__builtin_HEXAGON_M2_mmachs_s1
__builtin_HEXAGON_M2_mmpyl_s0
__builtin_HEXAGON_M2_mmpyl_s1
__builtin_HEXAGON_M2_mmpyh_s0
__builtin_HEXAGON_M2_mmpyh_s1
__builtin_HEXAGON_M2_mmacls_rs0
__builtin_HEXAGON_M2_mmacls_rs1
__builtin_HEXAGON_M2_mmachs_rs0
__builtin_HEXAGON_M2_mmachs_rs1
__builtin_HEXAGON_M2_mmpyl_rs0
__builtin_HEXAGON_M2_mmpyl_rs1
__builtin_HEXAGON_M2_mmpyh_rs0
__builtin_HEXAGON_M2_mmpyh_rs1
__builtin_HEXAGON_M4_vrmpyeh_s0
__builtin_HEXAGON_M4_vrmpyeh_s1
__builtin_HEXAGON_M4_vrmpyeh_acc_s0
__builtin_HEXAGON_M4_vrmpyeh_acc_s1
__builtin_HEXAGON_M4_vrmpyoh_s0
__builtin_HEXAGON_M4_vrmpyoh_s1
__builtin_HEXAGON_M4_vrmpyoh_acc_s0
__builtin_HEXAGON_M4_vrmpyoh_acc_s1
__builtin_HEXAGON_M2_hmmpyl_rs1
__builtin_HEXAGON_M2_hmmpyh_rs1
__builtin_HEXAGON_M2_hmmpyl_s1
__builtin_HEXAGON_M2_hmmpyh_s1
__builtin_HEXAGON_M2_mmaculs_s0
__builtin_HEXAGON_M2_mmaculs_s1
__builtin_HEXAGON_M2_mmacuhs_s0
__builtin_HEXAGON_M2_mmacuhs_s1
__builtin_HEXAGON_M2_mmpyul_s0
__builtin_HEXAGON_M2_mmpyul_s1
__builtin_HEXAGON_M2_mmpyuh_s0
__builtin_HEXAGON_M2_mmpyuh_s1
__builtin_HEXAGON_M2_mmaculs_rs0
__builtin_HEXAGON_M2_mmaculs_rs1
__builtin_HEXAGON_M2_mmacuhs_rs0
__builtin_HEXAGON_M2_mmacuhs_rs1
__builtin_HEXAGON_M2_mmpyul_rs0
__builtin_HEXAGON_M2_mmpyul_rs1
__builtin_HEXAGON_M2_mmpyuh_rs0
__builtin_HEXAGON_M2_mmpyuh_rs1
__builtin_HEXAGON_M2_vrcmaci_s0
__builtin_HEXAGON_M2_vrcmacr_s0
__builtin_HEXAGON_M2_vrcmaci_s0c
__builtin_HEXAGON_M2_vrcmacr_s0c
__builtin_HEXAGON_M2_cmaci_s0
__builtin_HEXAGON_M2_cmacr_s0
__builtin_HEXAGON_M2_vrcmpyi_s0
__builtin_HEXAGON_M2_vrcmpyr_s0
__builtin_HEXAGON_M2_vrcmpyi_s0c
__builtin_HEXAGON_M2_vrcmpyr_s0c
__builtin_HEXAGON_M2_cmpyi_s0
__builtin_HEXAGON_M2_cmpyr_s0
__builtin_HEXAGON_M4_cmpyi_wh
__builtin_HEXAGON_M4_cmpyr_wh
__builtin_HEXAGON_M4_cmpyi_whc
__builtin_HEXAGON_M4_cmpyr_whc
__builtin_HEXAGON_M2_vcmpy_s0_sat_i
__builtin_HEXAGON_M2_vcmpy_s0_sat_r
__builtin_HEXAGON_M2_vcmpy_s1_sat_i
__builtin_HEXAGON_M2_vcmpy_s1_sat_r
__builtin_HEXAGON_M2_vcmac_s0_sat_i
__builtin_HEXAGON_M2_vcmac_s0_sat_r
__builtin_HEXAGON_S2_vcrotate
__builtin_HEXAGON_S4_vrcrotate_acc
LLiLLiLLiiUIi
__builtin_HEXAGON_S4_vrcrotate
LLiLLiiUIi
__builtin_HEXAGON_S2_vcnegh
__builtin_HEXAGON_S2_vrcnegh
__builtin_HEXAGON_M4_pmpyw
__builtin_HEXAGON_M4_vpmpyh
__builtin_HEXAGON_M4_pmpyw_acc
__builtin_HEXAGON_M4_vpmpyh_acc
__builtin_HEXAGON_A2_add
__builtin_HEXAGON_A2_sub
__builtin_HEXAGON_A2_addsat
__builtin_HEXAGON_A2_subsat
__builtin_HEXAGON_A2_addi
__builtin_HEXAGON_A2_addh_l16_ll
__builtin_HEXAGON_A2_addh_l16_hl
__builtin_HEXAGON_A2_addh_l16_sat_ll
__builtin_HEXAGON_A2_addh_l16_sat_hl
__builtin_HEXAGON_A2_subh_l16_ll
__builtin_HEXAGON_A2_subh_l16_hl
__builtin_HEXAGON_A2_subh_l16_sat_ll
__builtin_HEXAGON_A2_subh_l16_sat_hl
__builtin_HEXAGON_A2_addh_h16_ll
__builtin_HEXAGON_A2_addh_h16_lh
__builtin_HEXAGON_A2_addh_h16_hl
__builtin_HEXAGON_A2_addh_h16_hh
__builtin_HEXAGON_A2_addh_h16_sat_ll
__builtin_HEXAGON_A2_addh_h16_sat_lh
__builtin_HEXAGON_A2_addh_h16_sat_hl
__builtin_HEXAGON_A2_addh_h16_sat_hh
__builtin_HEXAGON_A2_subh_h16_ll
__builtin_HEXAGON_A2_subh_h16_lh
__builtin_HEXAGON_A2_subh_h16_hl
__builtin_HEXAGON_A2_subh_h16_hh
__builtin_HEXAGON_A2_subh_h16_sat_ll
__builtin_HEXAGON_A2_subh_h16_sat_lh
__builtin_HEXAGON_A2_subh_h16_sat_hl
__builtin_HEXAGON_A2_subh_h16_sat_hh
__builtin_HEXAGON_A2_aslh
__builtin_HEXAGON_A2_asrh
__builtin_HEXAGON_A2_addp
__builtin_HEXAGON_A2_addpsat
__builtin_HEXAGON_A2_addsp
LLiiLLi
__builtin_HEXAGON_A2_subp
__builtin_HEXAGON_A2_neg
__builtin_HEXAGON_A2_negsat
__builtin_HEXAGON_A2_abs
__builtin_HEXAGON_A2_abssat
__builtin_HEXAGON_A2_vconj
LLiLLi
__builtin_HEXAGON_A2_negp
__builtin_HEXAGON_A2_absp
__builtin_HEXAGON_A2_max
__builtin_HEXAGON_A2_maxu
__builtin_HEXAGON_A2_min
__builtin_HEXAGON_A2_minu
__builtin_HEXAGON_A2_maxp
__builtin_HEXAGON_A2_maxup
ULLiLLiLLi
__builtin_HEXAGON_A2_minp
__builtin_HEXAGON_A2_minup
__builtin_HEXAGON_A2_tfr
__builtin_HEXAGON_A2_tfrsi
__builtin_HEXAGON_A2_tfrp
__builtin_HEXAGON_A2_tfrpi
LLiIi
__builtin_HEXAGON_A2_zxtb
__builtin_HEXAGON_A2_sxtb
__builtin_HEXAGON_A2_zxth
__builtin_HEXAGON_A2_sxth
__builtin_HEXAGON_A2_combinew
__builtin_HEXAGON_A4_combineri
LLiiIi
__builtin_HEXAGON_A4_combineir
LLiIii
__builtin_HEXAGON_A2_combineii
LLiIiIi
__builtin_HEXAGON_A2_combine_hh
__builtin_HEXAGON_A2_combine_hl
__builtin_HEXAGON_A2_combine_lh
__builtin_HEXAGON_A2_combine_ll
__builtin_HEXAGON_A2_tfril
__builtin_HEXAGON_A2_tfrih
__builtin_HEXAGON_A2_and
__builtin_HEXAGON_A2_or
__builtin_HEXAGON_A2_xor
__builtin_HEXAGON_A2_not
__builtin_HEXAGON_M2_xor_xacc
__builtin_HEXAGON_M4_xor_xacc
__builtin_HEXAGON_A4_andn
__builtin_HEXAGON_A4_orn
__builtin_HEXAGON_A4_andnp
__builtin_HEXAGON_A4_ornp
__builtin_HEXAGON_S4_addaddi
__builtin_HEXAGON_S4_subaddi
__builtin_HEXAGON_M4_and_and
__builtin_HEXAGON_M4_and_andn
__builtin_HEXAGON_M4_and_or
__builtin_HEXAGON_M4_and_xor
__builtin_HEXAGON_M4_or_and
__builtin_HEXAGON_M4_or_andn
__builtin_HEXAGON_M4_or_or
__builtin_HEXAGON_M4_or_xor
__builtin_HEXAGON_S4_or_andix
__builtin_HEXAGON_S4_or_andi
__builtin_HEXAGON_S4_or_ori
__builtin_HEXAGON_M4_xor_and
__builtin_HEXAGON_M4_xor_or
__builtin_HEXAGON_M4_xor_andn
__builtin_HEXAGON_A2_subri
iIii
__builtin_HEXAGON_A2_andir
__builtin_HEXAGON_A2_orir
__builtin_HEXAGON_A2_andp
__builtin_HEXAGON_A2_orp
__builtin_HEXAGON_A2_xorp
__builtin_HEXAGON_A2_notp
__builtin_HEXAGON_A2_sxtw
__builtin_HEXAGON_A2_sat
iLLi
__builtin_HEXAGON_A2_roundsat
__builtin_HEXAGON_A2_sath
__builtin_HEXAGON_A2_satuh
__builtin_HEXAGON_A2_satub
__builtin_HEXAGON_A2_satb
__builtin_HEXAGON_A2_vaddub
__builtin_HEXAGON_A2_vaddb_map
__builtin_HEXAGON_A2_vaddubs
__builtin_HEXAGON_A2_vaddh
__builtin_HEXAGON_A2_vaddhs
__builtin_HEXAGON_A2_vadduhs
__builtin_HEXAGON_A5_vaddhubs
__builtin_HEXAGON_A2_vaddw
__builtin_HEXAGON_A2_vaddws
__builtin_HEXAGON_S4_vxaddsubw
__builtin_HEXAGON_S4_vxsubaddw
__builtin_HEXAGON_S4_vxaddsubh
__builtin_HEXAGON_S4_vxsubaddh
__builtin_HEXAGON_S4_vxaddsubhr
__builtin_HEXAGON_S4_vxsubaddhr
__builtin_HEXAGON_A2_svavgh
__builtin_HEXAGON_A2_svavghs
__builtin_HEXAGON_A2_svnavgh
__builtin_HEXAGON_A2_svaddh
__builtin_HEXAGON_A2_svaddhs
__builtin_HEXAGON_A2_svadduhs
__builtin_HEXAGON_A2_svsubh
__builtin_HEXAGON_A2_svsubhs
__builtin_HEXAGON_A2_svsubuhs
__builtin_HEXAGON_A2_vraddub
__builtin_HEXAGON_A2_vraddub_acc
__builtin_HEXAGON_M2_vraddh
__builtin_HEXAGON_M2_vradduh
__builtin_HEXAGON_A2_vsubub
__builtin_HEXAGON_A2_vsubb_map
__builtin_HEXAGON_A2_vsububs
__builtin_HEXAGON_A2_vsubh
__builtin_HEXAGON_A2_vsubhs
__builtin_HEXAGON_A2_vsubuhs
__builtin_HEXAGON_A2_vsubw
__builtin_HEXAGON_A2_vsubws
__builtin_HEXAGON_A2_vabsh
__builtin_HEXAGON_A2_vabshsat
__builtin_HEXAGON_A2_vabsw
__builtin_HEXAGON_A2_vabswsat
__builtin_HEXAGON_M2_vabsdiffw
__builtin_HEXAGON_M2_vabsdiffh
__builtin_HEXAGON_A2_vrsadub
__builtin_HEXAGON_A2_vrsadub_acc
__builtin_HEXAGON_A2_vavgub
__builtin_HEXAGON_A2_vavguh
__builtin_HEXAGON_A2_vavgh
__builtin_HEXAGON_A2_vnavgh
__builtin_HEXAGON_A2_vavgw
__builtin_HEXAGON_A2_vnavgw
__builtin_HEXAGON_A2_vavgwr
__builtin_HEXAGON_A2_vnavgwr
__builtin_HEXAGON_A2_vavgwcr
__builtin_HEXAGON_A2_vnavgwcr
__builtin_HEXAGON_A2_vavghcr
__builtin_HEXAGON_A2_vnavghcr
__builtin_HEXAGON_A2_vavguw
__builtin_HEXAGON_A2_vavguwr
__builtin_HEXAGON_A2_vavgubr
__builtin_HEXAGON_A2_vavguhr
__builtin_HEXAGON_A2_vavghr
__builtin_HEXAGON_A2_vnavghr
__builtin_HEXAGON_A4_round_ri
__builtin_HEXAGON_A4_round_rr
__builtin_HEXAGON_A4_round_ri_sat
__builtin_HEXAGON_A4_round_rr_sat
__builtin_HEXAGON_A4_cround_ri
__builtin_HEXAGON_A4_cround_rr
__builtin_HEXAGON_A4_vrminh
__builtin_HEXAGON_A4_vrmaxh
__builtin_HEXAGON_A4_vrminuh
__builtin_HEXAGON_A4_vrmaxuh
__builtin_HEXAGON_A4_vrminw
__builtin_HEXAGON_A4_vrmaxw
__builtin_HEXAGON_A4_vrminuw
__builtin_HEXAGON_A4_vrmaxuw
__builtin_HEXAGON_A2_vminb
__builtin_HEXAGON_A2_vmaxb
__builtin_HEXAGON_A2_vminub
__builtin_HEXAGON_A2_vmaxub
__builtin_HEXAGON_A2_vminh
__builtin_HEXAGON_A2_vmaxh
__builtin_HEXAGON_A2_vminuh
__builtin_HEXAGON_A2_vmaxuh
__builtin_HEXAGON_A2_vminw
__builtin_HEXAGON_A2_vmaxw
__builtin_HEXAGON_A2_vminuw
__builtin_HEXAGON_A2_vmaxuw
__builtin_HEXAGON_A4_modwrapu
__builtin_HEXAGON_F2_sfadd
__builtin_HEXAGON_F2_sfsub
__builtin_HEXAGON_F2_sfmpy
__builtin_HEXAGON_F2_sffma
__builtin_HEXAGON_F2_sffma_sc
ffffi
__builtin_HEXAGON_F2_sffms
__builtin_HEXAGON_F2_sffma_lib
__builtin_HEXAGON_F2_sffms_lib
__builtin_HEXAGON_F2_sfcmpeq
__builtin_HEXAGON_F2_sfcmpgt
__builtin_HEXAGON_F2_sfcmpge
__builtin_HEXAGON_F2_sfcmpuo
__builtin_HEXAGON_F2_sfmax
__builtin_HEXAGON_F2_sfmin
__builtin_HEXAGON_F2_sfclass
ifUIi
__builtin_HEXAGON_F2_sfimm_p
fUIi
__builtin_HEXAGON_F2_sfimm_n
__builtin_HEXAGON_F2_sffixupn
__builtin_HEXAGON_F2_sffixupd
__builtin_HEXAGON_F2_sffixupr
__builtin_HEXAGON_F2_dfcmpeq
__builtin_HEXAGON_F2_dfcmpgt
__builtin_HEXAGON_F2_dfcmpge
__builtin_HEXAGON_F2_dfcmpuo
__builtin_HEXAGON_F2_dfclass
idUIi
__builtin_HEXAGON_F2_dfimm_p
dUIi
__builtin_HEXAGON_F2_dfimm_n
__builtin_HEXAGON_F2_conv_sf2df
__builtin_HEXAGON_F2_conv_df2sf
__builtin_HEXAGON_F2_conv_uw2sf
__builtin_HEXAGON_F2_conv_uw2df
__builtin_HEXAGON_F2_conv_w2sf
__builtin_HEXAGON_F2_conv_w2df
__builtin_HEXAGON_F2_conv_ud2sf
fLLi
__builtin_HEXAGON_F2_conv_ud2df
dLLi
__builtin_HEXAGON_F2_conv_d2sf
__builtin_HEXAGON_F2_conv_d2df
__builtin_HEXAGON_F2_conv_sf2uw
__builtin_HEXAGON_F2_conv_sf2w
__builtin_HEXAGON_F2_conv_sf2ud
LLif
__builtin_HEXAGON_F2_conv_sf2d
__builtin_HEXAGON_F2_conv_df2uw
__builtin_HEXAGON_F2_conv_df2w
__builtin_HEXAGON_F2_conv_df2ud
LLid
__builtin_HEXAGON_F2_conv_df2d
__builtin_HEXAGON_F2_conv_sf2uw_chop
__builtin_HEXAGON_F2_conv_sf2w_chop
__builtin_HEXAGON_F2_conv_sf2ud_chop
__builtin_HEXAGON_F2_conv_sf2d_chop
__builtin_HEXAGON_F2_conv_df2uw_chop
__builtin_HEXAGON_F2_conv_df2w_chop
__builtin_HEXAGON_F2_conv_df2ud_chop
__builtin_HEXAGON_F2_conv_df2d_chop
__builtin_HEXAGON_S2_asr_r_r
__builtin_HEXAGON_S2_asl_r_r
__builtin_HEXAGON_S2_lsr_r_r
__builtin_HEXAGON_S2_lsl_r_r
__builtin_HEXAGON_S2_asr_r_p
__builtin_HEXAGON_S2_asl_r_p
__builtin_HEXAGON_S2_lsr_r_p
__builtin_HEXAGON_S2_lsl_r_p
__builtin_HEXAGON_S2_asr_r_r_acc
__builtin_HEXAGON_S2_asl_r_r_acc
__builtin_HEXAGON_S2_lsr_r_r_acc
__builtin_HEXAGON_S2_lsl_r_r_acc
__builtin_HEXAGON_S2_asr_r_p_acc
__builtin_HEXAGON_S2_asl_r_p_acc
__builtin_HEXAGON_S2_lsr_r_p_acc
__builtin_HEXAGON_S2_lsl_r_p_acc
__builtin_HEXAGON_S2_asr_r_r_nac
__builtin_HEXAGON_S2_asl_r_r_nac
__builtin_HEXAGON_S2_lsr_r_r_nac
__builtin_HEXAGON_S2_lsl_r_r_nac
__builtin_HEXAGON_S2_asr_r_p_nac
__builtin_HEXAGON_S2_asl_r_p_nac
__builtin_HEXAGON_S2_lsr_r_p_nac
__builtin_HEXAGON_S2_lsl_r_p_nac
__builtin_HEXAGON_S2_asr_r_r_and
__builtin_HEXAGON_S2_asl_r_r_and
__builtin_HEXAGON_S2_lsr_r_r_and
__builtin_HEXAGON_S2_lsl_r_r_and
__builtin_HEXAGON_S2_asr_r_r_or
__builtin_HEXAGON_S2_asl_r_r_or
__builtin_HEXAGON_S2_lsr_r_r_or
__builtin_HEXAGON_S2_lsl_r_r_or
__builtin_HEXAGON_S2_asr_r_p_and
__builtin_HEXAGON_S2_asl_r_p_and
__builtin_HEXAGON_S2_lsr_r_p_and
__builtin_HEXAGON_S2_lsl_r_p_and
__builtin_HEXAGON_S2_asr_r_p_or
__builtin_HEXAGON_S2_asl_r_p_or
__builtin_HEXAGON_S2_lsr_r_p_or
__builtin_HEXAGON_S2_lsl_r_p_or
__builtin_HEXAGON_S2_asr_r_p_xor
__builtin_HEXAGON_S2_asl_r_p_xor
__builtin_HEXAGON_S2_lsr_r_p_xor
__builtin_HEXAGON_S2_lsl_r_p_xor
__builtin_HEXAGON_S2_asr_r_r_sat
__builtin_HEXAGON_S2_asl_r_r_sat
__builtin_HEXAGON_S2_asr_i_r
__builtin_HEXAGON_S2_lsr_i_r
__builtin_HEXAGON_S2_asl_i_r
__builtin_HEXAGON_S2_asr_i_p
LLiLLiUIi
__builtin_HEXAGON_S2_lsr_i_p
__builtin_HEXAGON_S2_asl_i_p
__builtin_HEXAGON_S2_asr_i_r_acc
__builtin_HEXAGON_S2_lsr_i_r_acc
__builtin_HEXAGON_S2_asl_i_r_acc
__builtin_HEXAGON_S2_asr_i_p_acc
LLiLLiLLiUIi
__builtin_HEXAGON_S2_lsr_i_p_acc
__builtin_HEXAGON_S2_asl_i_p_acc
__builtin_HEXAGON_S2_asr_i_r_nac
__builtin_HEXAGON_S2_lsr_i_r_nac
__builtin_HEXAGON_S2_asl_i_r_nac
__builtin_HEXAGON_S2_asr_i_p_nac
__builtin_HEXAGON_S2_lsr_i_p_nac
__builtin_HEXAGON_S2_asl_i_p_nac
__builtin_HEXAGON_S2_lsr_i_r_xacc
__builtin_HEXAGON_S2_asl_i_r_xacc
__builtin_HEXAGON_S2_lsr_i_p_xacc
__builtin_HEXAGON_S2_asl_i_p_xacc
__builtin_HEXAGON_S2_asr_i_r_and
__builtin_HEXAGON_S2_lsr_i_r_and
__builtin_HEXAGON_S2_asl_i_r_and
__builtin_HEXAGON_S2_asr_i_r_or
__builtin_HEXAGON_S2_lsr_i_r_or
__builtin_HEXAGON_S2_asl_i_r_or
__builtin_HEXAGON_S2_asr_i_p_and
__builtin_HEXAGON_S2_lsr_i_p_and
__builtin_HEXAGON_S2_asl_i_p_and
__builtin_HEXAGON_S2_asr_i_p_or
__builtin_HEXAGON_S2_lsr_i_p_or
__builtin_HEXAGON_S2_asl_i_p_or
__builtin_HEXAGON_S2_asl_i_r_sat
__builtin_HEXAGON_S2_asr_i_r_rnd
__builtin_HEXAGON_S2_asr_i_r_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_i_p_rnd
__builtin_HEXAGON_S2_asr_i_p_rnd_goodsyntax
__builtin_HEXAGON_S4_lsli
__builtin_HEXAGON_S2_addasl_rrri
__builtin_HEXAGON_S4_andi_asl_ri
__builtin_HEXAGON_S4_ori_asl_ri
__builtin_HEXAGON_S4_addi_asl_ri
__builtin_HEXAGON_S4_subi_asl_ri
__builtin_HEXAGON_S4_andi_lsr_ri
__builtin_HEXAGON_S4_ori_lsr_ri
__builtin_HEXAGON_S4_addi_lsr_ri
__builtin_HEXAGON_S4_subi_lsr_ri
__builtin_HEXAGON_S2_valignib
__builtin_HEXAGON_S2_valignrb
__builtin_HEXAGON_S2_vspliceib
__builtin_HEXAGON_S2_vsplicerb
__builtin_HEXAGON_S2_vsplatrh
__builtin_HEXAGON_S2_vsplatrb
__builtin_HEXAGON_S2_insert
iiiUIiUIi
__builtin_HEXAGON_S2_tableidxb_goodsyntax
__builtin_HEXAGON_S2_tableidxh_goodsyntax
__builtin_HEXAGON_S2_tableidxw_goodsyntax
__builtin_HEXAGON_S2_tableidxd_goodsyntax
__builtin_HEXAGON_A4_bitspliti
LLiiUIi
__builtin_HEXAGON_A4_bitsplit
__builtin_HEXAGON_S4_extract
iiUIiUIi
__builtin_HEXAGON_S2_extractu
__builtin_HEXAGON_S2_insertp
LLiLLiLLiUIiUIi
__builtin_HEXAGON_S4_extractp
LLiLLiUIiUIi
__builtin_HEXAGON_S2_extractup
__builtin_HEXAGON_S2_insert_rp
iiiLLi
__builtin_HEXAGON_S4_extract_rp
__builtin_HEXAGON_S2_extractu_rp
__builtin_HEXAGON_S2_insertp_rp
__builtin_HEXAGON_S4_extractp_rp
__builtin_HEXAGON_S2_extractup_rp
__builtin_HEXAGON_S2_tstbit_i
__builtin_HEXAGON_S4_ntstbit_i
__builtin_HEXAGON_S2_setbit_i
__builtin_HEXAGON_S2_togglebit_i
__builtin_HEXAGON_S2_clrbit_i
__builtin_HEXAGON_S2_tstbit_r
__builtin_HEXAGON_S4_ntstbit_r
__builtin_HEXAGON_S2_setbit_r
__builtin_HEXAGON_S2_togglebit_r
__builtin_HEXAGON_S2_clrbit_r
__builtin_HEXAGON_S2_asr_i_vh
__builtin_HEXAGON_S2_lsr_i_vh
__builtin_HEXAGON_S2_asl_i_vh
__builtin_HEXAGON_S2_asr_r_vh
__builtin_HEXAGON_S5_asrhub_rnd_sat_goodsyntax
__builtin_HEXAGON_S5_asrhub_sat
__builtin_HEXAGON_S5_vasrhrnd_goodsyntax
__builtin_HEXAGON_S2_asl_r_vh
__builtin_HEXAGON_S2_lsr_r_vh
__builtin_HEXAGON_S2_lsl_r_vh
__builtin_HEXAGON_S2_asr_i_vw
__builtin_HEXAGON_S2_asr_i_svw_trun
__builtin_HEXAGON_S2_asr_r_svw_trun
__builtin_HEXAGON_S2_lsr_i_vw
__builtin_HEXAGON_S2_asl_i_vw
__builtin_HEXAGON_S2_asr_r_vw
__builtin_HEXAGON_S2_asl_r_vw
__builtin_HEXAGON_S2_lsr_r_vw
__builtin_HEXAGON_S2_lsl_r_vw
__builtin_HEXAGON_S2_vrndpackwh
__builtin_HEXAGON_S2_vrndpackwhs
__builtin_HEXAGON_S2_vsxtbh
__builtin_HEXAGON_S2_vzxtbh
__builtin_HEXAGON_S2_vsathub
__builtin_HEXAGON_S2_svsathub
__builtin_HEXAGON_S2_svsathb
__builtin_HEXAGON_S2_vsathb
__builtin_HEXAGON_S2_vtrunohb
__builtin_HEXAGON_S2_vtrunewh
__builtin_HEXAGON_S2_vtrunowh
__builtin_HEXAGON_S2_vtrunehb
__builtin_HEXAGON_S2_vsxthw
__builtin_HEXAGON_S2_vzxthw
__builtin_HEXAGON_S2_vsatwh
__builtin_HEXAGON_S2_vsatwuh
__builtin_HEXAGON_S2_packhl
__builtin_HEXAGON_A2_swiz
__builtin_HEXAGON_S2_vsathub_nopack
__builtin_HEXAGON_S2_vsathb_nopack
__builtin_HEXAGON_S2_vsatwh_nopack
__builtin_HEXAGON_S2_vsatwuh_nopack
__builtin_HEXAGON_S2_shuffob
__builtin_HEXAGON_S2_shuffeb
__builtin_HEXAGON_S2_shuffoh
__builtin_HEXAGON_S2_shuffeh
__builtin_HEXAGON_S5_popcountp
__builtin_HEXAGON_S4_parity
__builtin_HEXAGON_S2_parityp
__builtin_HEXAGON_S2_lfsp
__builtin_HEXAGON_S2_clbnorm
__builtin_HEXAGON_S4_clbaddi
__builtin_HEXAGON_S4_clbpnorm
__builtin_HEXAGON_S4_clbpaddi
__builtin_HEXAGON_S2_clb
__builtin_HEXAGON_S2_cl0
__builtin_HEXAGON_S2_cl1
__builtin_HEXAGON_S2_clbp
__builtin_HEXAGON_S2_cl0p
__builtin_HEXAGON_S2_cl1p
__builtin_HEXAGON_S2_brev
__builtin_HEXAGON_S2_brevp
__builtin_HEXAGON_S2_ct0
__builtin_HEXAGON_S2_ct1
__builtin_HEXAGON_S2_ct0p
__builtin_HEXAGON_S2_ct1p
__builtin_HEXAGON_S2_interleave
__builtin_HEXAGON_S2_deinterleave
__builtin_HEXAGON_Y2_dcfetch
__builtin_HEXAGON_Y2_dczeroa
__builtin_HEXAGON_Y2_dccleana
__builtin_HEXAGON_Y2_dccleaninva
__builtin_HEXAGON_Y2_dcinva
__builtin_HEXAGON_Y4_l2fetch
vv*i
__builtin_HEXAGON_Y5_l2fetch
vv*LLi
__builtin_HEXAGON_S6_rol_i_r
v60|v62|v65|v66|v67
__builtin_HEXAGON_S6_rol_i_p
__builtin_HEXAGON_S6_rol_i_r_acc
__builtin_HEXAGON_S6_rol_i_p_acc
__builtin_HEXAGON_S6_rol_i_r_nac
__builtin_HEXAGON_S6_rol_i_p_nac
__builtin_HEXAGON_S6_rol_i_r_xacc
__builtin_HEXAGON_S6_rol_i_p_xacc
__builtin_HEXAGON_S6_rol_i_r_and
__builtin_HEXAGON_S6_rol_i_r_or
__builtin_HEXAGON_S6_rol_i_p_and
__builtin_HEXAGON_S6_rol_i_p_or
__builtin_HEXAGON_M6_vabsdiffb
__builtin_HEXAGON_M6_vabsdiffub
__builtin_HEXAGON_S6_vsplatrbp
__builtin_HEXAGON_S6_vtrunehb_ppp
__builtin_HEXAGON_S6_vtrunohb_ppp
__builtin_HEXAGON_A6_vcmpbeq_notany
v65|v66|v67
__builtin_HEXAGON_M2_mnaci
v66|v67
__builtin_HEXAGON_F2_dfadd
__builtin_HEXAGON_F2_dfsub
__builtin_HEXAGON_S2_mask
iUIiUIi
__builtin_HEXAGON_M7_dcmpyrw
__builtin_HEXAGON_M7_dcmpyrw_acc
__builtin_HEXAGON_M7_dcmpyrwc
__builtin_HEXAGON_M7_dcmpyrwc_acc
__builtin_HEXAGON_M7_dcmpyiw
__builtin_HEXAGON_M7_dcmpyiw_acc
__builtin_HEXAGON_M7_dcmpyiwc
__builtin_HEXAGON_M7_dcmpyiwc_acc
__builtin_HEXAGON_M7_vdmpy
__builtin_HEXAGON_M7_vdmpy_acc
__builtin_HEXAGON_M7_wcmpyrw
__builtin_HEXAGON_M7_wcmpyrwc
__builtin_HEXAGON_M7_wcmpyiw
__builtin_HEXAGON_M7_wcmpyiwc
__builtin_HEXAGON_M7_wcmpyrw_rnd
__builtin_HEXAGON_M7_wcmpyrwc_rnd
__builtin_HEXAGON_M7_wcmpyiw_rnd
__builtin_HEXAGON_M7_wcmpyiwc_rnd
__builtin_HEXAGON_A7_croundd_ri
__builtin_HEXAGON_A7_croundd_rr
__builtin_HEXAGON_A7_clip
__builtin_HEXAGON_A7_vclip
__builtin_HEXAGON_F2_dfmax
__builtin_HEXAGON_F2_dfmin
__builtin_HEXAGON_F2_dfmpyfix
__builtin_HEXAGON_F2_dfmpyll
__builtin_HEXAGON_F2_dfmpylh
__builtin_HEXAGON_F2_dfmpyhh
__builtin_HEXAGON_V6_vS32b_qpred_ai
__builtin_HEXAGON_V6_vS32b_qpred_ai_128B
__builtin_HEXAGON_V6_vS32b_nqpred_ai
__builtin_HEXAGON_V6_vS32b_nqpred_ai_128B
__builtin_HEXAGON_V6_vS32b_nt_qpred_ai
__builtin_HEXAGON_V6_vS32b_nt_qpred_ai_128B
__builtin_HEXAGON_V6_vS32b_nt_nqpred_ai
__builtin_HEXAGON_V6_vS32b_nt_nqpred_ai_128B
__builtin_HEXAGON_V6_valignb
V16iV16iV16ii
__builtin_HEXAGON_V6_valignb_128B
V32iV32iV32ii
__builtin_HEXAGON_V6_vlalignb
__builtin_HEXAGON_V6_vlalignb_128B
__builtin_HEXAGON_V6_valignbi
V16iV16iV16iUIi
__builtin_HEXAGON_V6_valignbi_128B
V32iV32iV32iUIi
__builtin_HEXAGON_V6_vlalignbi
__builtin_HEXAGON_V6_vlalignbi_128B
__builtin_HEXAGON_V6_vror
V16iV16ii
__builtin_HEXAGON_V6_vror_128B
V32iV32ii
__builtin_HEXAGON_V6_vunpackub
V32iV16i
__builtin_HEXAGON_V6_vunpackub_128B
V64iV32i
__builtin_HEXAGON_V6_vunpackb
__builtin_HEXAGON_V6_vunpackb_128B
__builtin_HEXAGON_V6_vunpackuh
__builtin_HEXAGON_V6_vunpackuh_128B
__builtin_HEXAGON_V6_vunpackh
__builtin_HEXAGON_V6_vunpackh_128B
__builtin_HEXAGON_V6_vunpackob
V32iV32iV16i
__builtin_HEXAGON_V6_vunpackob_128B
V64iV64iV32i
__builtin_HEXAGON_V6_vunpackoh
__builtin_HEXAGON_V6_vunpackoh_128B
__builtin_HEXAGON_V6_vpackeb
V16iV16iV16i
__builtin_HEXAGON_V6_vpackeb_128B
V32iV32iV32i
__builtin_HEXAGON_V6_vpackeh
__builtin_HEXAGON_V6_vpackeh_128B
__builtin_HEXAGON_V6_vpackob
__builtin_HEXAGON_V6_vpackob_128B
__builtin_HEXAGON_V6_vpackoh
__builtin_HEXAGON_V6_vpackoh_128B
__builtin_HEXAGON_V6_vpackhub_sat
__builtin_HEXAGON_V6_vpackhub_sat_128B
__builtin_HEXAGON_V6_vpackhb_sat
__builtin_HEXAGON_V6_vpackhb_sat_128B
__builtin_HEXAGON_V6_vpackwuh_sat
__builtin_HEXAGON_V6_vpackwuh_sat_128B
__builtin_HEXAGON_V6_vpackwh_sat
__builtin_HEXAGON_V6_vpackwh_sat_128B
__builtin_HEXAGON_V6_vzb
__builtin_HEXAGON_V6_vzb_128B
__builtin_HEXAGON_V6_vsb
__builtin_HEXAGON_V6_vsb_128B
__builtin_HEXAGON_V6_vzh
__builtin_HEXAGON_V6_vzh_128B
__builtin_HEXAGON_V6_vsh
__builtin_HEXAGON_V6_vsh_128B
__builtin_HEXAGON_V6_vdmpybus
__builtin_HEXAGON_V6_vdmpybus_128B
__builtin_HEXAGON_V6_vdmpybus_acc
__builtin_HEXAGON_V6_vdmpybus_acc_128B
__builtin_HEXAGON_V6_vdmpybus_dv
__builtin_HEXAGON_V6_vdmpybus_dv_128B
V64iV64ii
__builtin_HEXAGON_V6_vdmpybus_dv_acc
__builtin_HEXAGON_V6_vdmpybus_dv_acc_128B
V64iV64iV64ii
__builtin_HEXAGON_V6_vdmpyhb
__builtin_HEXAGON_V6_vdmpyhb_128B
__builtin_HEXAGON_V6_vdmpyhb_acc
__builtin_HEXAGON_V6_vdmpyhb_acc_128B
__builtin_HEXAGON_V6_vdmpyhb_dv
__builtin_HEXAGON_V6_vdmpyhb_dv_128B
__builtin_HEXAGON_V6_vdmpyhb_dv_acc
__builtin_HEXAGON_V6_vdmpyhb_dv_acc_128B
__builtin_HEXAGON_V6_vdmpyhvsat
__builtin_HEXAGON_V6_vdmpyhvsat_128B
__builtin_HEXAGON_V6_vdmpyhvsat_acc
V16iV16iV16iV16i
__builtin_HEXAGON_V6_vdmpyhvsat_acc_128B
V32iV32iV32iV32i
__builtin_HEXAGON_V6_vdmpyhsat
__builtin_HEXAGON_V6_vdmpyhsat_128B
__builtin_HEXAGON_V6_vdmpyhsat_acc
__builtin_HEXAGON_V6_vdmpyhsat_acc_128B
__builtin_HEXAGON_V6_vdmpyhisat
V16iV32ii
__builtin_HEXAGON_V6_vdmpyhisat_128B
V32iV64ii
__builtin_HEXAGON_V6_vdmpyhisat_acc
V16iV16iV32ii
__builtin_HEXAGON_V6_vdmpyhisat_acc_128B
V32iV32iV64ii
__builtin_HEXAGON_V6_vdmpyhsusat
__builtin_HEXAGON_V6_vdmpyhsusat_128B
__builtin_HEXAGON_V6_vdmpyhsusat_acc
__builtin_HEXAGON_V6_vdmpyhsusat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsuisat
__builtin_HEXAGON_V6_vdmpyhsuisat_128B
__builtin_HEXAGON_V6_vdmpyhsuisat_acc
__builtin_HEXAGON_V6_vdmpyhsuisat_acc_128B
__builtin_HEXAGON_V6_vtmpyb
__builtin_HEXAGON_V6_vtmpyb_128B
__builtin_HEXAGON_V6_vtmpyb_acc
__builtin_HEXAGON_V6_vtmpyb_acc_128B
__builtin_HEXAGON_V6_vtmpybus
__builtin_HEXAGON_V6_vtmpybus_128B
__builtin_HEXAGON_V6_vtmpybus_acc
__builtin_HEXAGON_V6_vtmpybus_acc_128B
__builtin_HEXAGON_V6_vtmpyhb
__builtin_HEXAGON_V6_vtmpyhb_128B
__builtin_HEXAGON_V6_vtmpyhb_acc
__builtin_HEXAGON_V6_vtmpyhb_acc_128B
__builtin_HEXAGON_V6_vrmpyub
__builtin_HEXAGON_V6_vrmpyub_128B
__builtin_HEXAGON_V6_vrmpyub_acc
__builtin_HEXAGON_V6_vrmpyub_acc_128B
__builtin_HEXAGON_V6_vrmpyubv
__builtin_HEXAGON_V6_vrmpyubv_128B
__builtin_HEXAGON_V6_vrmpyubv_acc
__builtin_HEXAGON_V6_vrmpyubv_acc_128B
__builtin_HEXAGON_V6_vrmpybv
__builtin_HEXAGON_V6_vrmpybv_128B
__builtin_HEXAGON_V6_vrmpybv_acc
__builtin_HEXAGON_V6_vrmpybv_acc_128B
__builtin_HEXAGON_V6_vrmpyubi
V32iV32iiUIi
__builtin_HEXAGON_V6_vrmpyubi_128B
V64iV64iiUIi
__builtin_HEXAGON_V6_vrmpyubi_acc
V32iV32iV32iiUIi
__builtin_HEXAGON_V6_vrmpyubi_acc_128B
V64iV64iV64iiUIi
__builtin_HEXAGON_V6_vrmpybus
__builtin_HEXAGON_V6_vrmpybus_128B
__builtin_HEXAGON_V6_vrmpybus_acc
__builtin_HEXAGON_V6_vrmpybus_acc_128B
__builtin_HEXAGON_V6_vrmpybusi
__builtin_HEXAGON_V6_vrmpybusi_128B
__builtin_HEXAGON_V6_vrmpybusi_acc
__builtin_HEXAGON_V6_vrmpybusi_acc_128B
__builtin_HEXAGON_V6_vrmpybusv
__builtin_HEXAGON_V6_vrmpybusv_128B
__builtin_HEXAGON_V6_vrmpybusv_acc
__builtin_HEXAGON_V6_vrmpybusv_acc_128B
__builtin_HEXAGON_V6_vdsaduh
__builtin_HEXAGON_V6_vdsaduh_128B
__builtin_HEXAGON_V6_vdsaduh_acc
__builtin_HEXAGON_V6_vdsaduh_acc_128B
__builtin_HEXAGON_V6_vrsadubi
__builtin_HEXAGON_V6_vrsadubi_128B
__builtin_HEXAGON_V6_vrsadubi_acc
__builtin_HEXAGON_V6_vrsadubi_acc_128B
__builtin_HEXAGON_V6_vasrw
__builtin_HEXAGON_V6_vasrw_128B
__builtin_HEXAGON_V6_vaslw
__builtin_HEXAGON_V6_vaslw_128B
__builtin_HEXAGON_V6_vlsrw
__builtin_HEXAGON_V6_vlsrw_128B
__builtin_HEXAGON_V6_vasrwv
__builtin_HEXAGON_V6_vasrwv_128B
__builtin_HEXAGON_V6_vaslwv
__builtin_HEXAGON_V6_vaslwv_128B
__builtin_HEXAGON_V6_vlsrwv
__builtin_HEXAGON_V6_vlsrwv_128B
__builtin_HEXAGON_V6_vasrh
__builtin_HEXAGON_V6_vasrh_128B
__builtin_HEXAGON_V6_vaslh
__builtin_HEXAGON_V6_vaslh_128B
__builtin_HEXAGON_V6_vlsrh
__builtin_HEXAGON_V6_vlsrh_128B
__builtin_HEXAGON_V6_vasrhv
__builtin_HEXAGON_V6_vasrhv_128B
__builtin_HEXAGON_V6_vaslhv
__builtin_HEXAGON_V6_vaslhv_128B
__builtin_HEXAGON_V6_vlsrhv
__builtin_HEXAGON_V6_vlsrhv_128B
__builtin_HEXAGON_V6_vasrwh
__builtin_HEXAGON_V6_vasrwh_128B
__builtin_HEXAGON_V6_vasrwhsat
__builtin_HEXAGON_V6_vasrwhsat_128B
__builtin_HEXAGON_V6_vasrwhrndsat
__builtin_HEXAGON_V6_vasrwhrndsat_128B
__builtin_HEXAGON_V6_vasrwuhsat
__builtin_HEXAGON_V6_vasrwuhsat_128B
__builtin_HEXAGON_V6_vroundwh
__builtin_HEXAGON_V6_vroundwh_128B
__builtin_HEXAGON_V6_vroundwuh
__builtin_HEXAGON_V6_vroundwuh_128B
__builtin_HEXAGON_V6_vasrhubsat
__builtin_HEXAGON_V6_vasrhubsat_128B
__builtin_HEXAGON_V6_vasrhubrndsat
__builtin_HEXAGON_V6_vasrhubrndsat_128B
__builtin_HEXAGON_V6_vasrhbrndsat
__builtin_HEXAGON_V6_vasrhbrndsat_128B
__builtin_HEXAGON_V6_vroundhb
__builtin_HEXAGON_V6_vroundhb_128B
__builtin_HEXAGON_V6_vroundhub
__builtin_HEXAGON_V6_vroundhub_128B
__builtin_HEXAGON_V6_vaslw_acc
__builtin_HEXAGON_V6_vaslw_acc_128B
__builtin_HEXAGON_V6_vasrw_acc
__builtin_HEXAGON_V6_vasrw_acc_128B
__builtin_HEXAGON_V6_vaddb
__builtin_HEXAGON_V6_vaddb_128B
__builtin_HEXAGON_V6_vsubb
__builtin_HEXAGON_V6_vsubb_128B
__builtin_HEXAGON_V6_vaddb_dv
__builtin_HEXAGON_V6_vaddb_dv_128B
V64iV64iV64i
__builtin_HEXAGON_V6_vsubb_dv
__builtin_HEXAGON_V6_vsubb_dv_128B
__builtin_HEXAGON_V6_vaddh
__builtin_HEXAGON_V6_vaddh_128B
__builtin_HEXAGON_V6_vsubh
__builtin_HEXAGON_V6_vsubh_128B
__builtin_HEXAGON_V6_vaddh_dv
__builtin_HEXAGON_V6_vaddh_dv_128B
__builtin_HEXAGON_V6_vsubh_dv
__builtin_HEXAGON_V6_vsubh_dv_128B
__builtin_HEXAGON_V6_vaddw
__builtin_HEXAGON_V6_vaddw_128B
__builtin_HEXAGON_V6_vsubw
__builtin_HEXAGON_V6_vsubw_128B
__builtin_HEXAGON_V6_vaddw_dv
__builtin_HEXAGON_V6_vaddw_dv_128B
__builtin_HEXAGON_V6_vsubw_dv
__builtin_HEXAGON_V6_vsubw_dv_128B
__builtin_HEXAGON_V6_vaddubsat
__builtin_HEXAGON_V6_vaddubsat_128B
__builtin_HEXAGON_V6_vaddubsat_dv
__builtin_HEXAGON_V6_vaddubsat_dv_128B
__builtin_HEXAGON_V6_vsububsat
__builtin_HEXAGON_V6_vsububsat_128B
__builtin_HEXAGON_V6_vsububsat_dv
__builtin_HEXAGON_V6_vsububsat_dv_128B
__builtin_HEXAGON_V6_vadduhsat
__builtin_HEXAGON_V6_vadduhsat_128B
__builtin_HEXAGON_V6_vadduhsat_dv
__builtin_HEXAGON_V6_vadduhsat_dv_128B
__builtin_HEXAGON_V6_vsubuhsat
__builtin_HEXAGON_V6_vsubuhsat_128B
__builtin_HEXAGON_V6_vsubuhsat_dv
__builtin_HEXAGON_V6_vsubuhsat_dv_128B
__builtin_HEXAGON_V6_vaddhsat
__builtin_HEXAGON_V6_vaddhsat_128B
__builtin_HEXAGON_V6_vaddhsat_dv
__builtin_HEXAGON_V6_vaddhsat_dv_128B
__builtin_HEXAGON_V6_vsubhsat
__builtin_HEXAGON_V6_vsubhsat_128B
__builtin_HEXAGON_V6_vsubhsat_dv
__builtin_HEXAGON_V6_vsubhsat_dv_128B
__builtin_HEXAGON_V6_vaddwsat
__builtin_HEXAGON_V6_vaddwsat_128B
__builtin_HEXAGON_V6_vaddwsat_dv
__builtin_HEXAGON_V6_vaddwsat_dv_128B
__builtin_HEXAGON_V6_vsubwsat
__builtin_HEXAGON_V6_vsubwsat_128B
__builtin_HEXAGON_V6_vsubwsat_dv
__builtin_HEXAGON_V6_vsubwsat_dv_128B
__builtin_HEXAGON_V6_vavgub
__builtin_HEXAGON_V6_vavgub_128B
__builtin_HEXAGON_V6_vavgubrnd
__builtin_HEXAGON_V6_vavgubrnd_128B
__builtin_HEXAGON_V6_vavguh
__builtin_HEXAGON_V6_vavguh_128B
__builtin_HEXAGON_V6_vavguhrnd
__builtin_HEXAGON_V6_vavguhrnd_128B
__builtin_HEXAGON_V6_vavgh
__builtin_HEXAGON_V6_vavgh_128B
__builtin_HEXAGON_V6_vavghrnd
__builtin_HEXAGON_V6_vavghrnd_128B
__builtin_HEXAGON_V6_vnavgh
__builtin_HEXAGON_V6_vnavgh_128B
__builtin_HEXAGON_V6_vavgw
__builtin_HEXAGON_V6_vavgw_128B
__builtin_HEXAGON_V6_vavgwrnd
__builtin_HEXAGON_V6_vavgwrnd_128B
__builtin_HEXAGON_V6_vnavgw
__builtin_HEXAGON_V6_vnavgw_128B
__builtin_HEXAGON_V6_vabsdiffub
__builtin_HEXAGON_V6_vabsdiffub_128B
__builtin_HEXAGON_V6_vabsdiffuh
__builtin_HEXAGON_V6_vabsdiffuh_128B
__builtin_HEXAGON_V6_vabsdiffh
__builtin_HEXAGON_V6_vabsdiffh_128B
__builtin_HEXAGON_V6_vabsdiffw
__builtin_HEXAGON_V6_vabsdiffw_128B
__builtin_HEXAGON_V6_vnavgub
__builtin_HEXAGON_V6_vnavgub_128B
__builtin_HEXAGON_V6_vaddubh
V32iV16iV16i
__builtin_HEXAGON_V6_vaddubh_128B
V64iV32iV32i
__builtin_HEXAGON_V6_vsububh
__builtin_HEXAGON_V6_vsububh_128B
__builtin_HEXAGON_V6_vaddhw
__builtin_HEXAGON_V6_vaddhw_128B
__builtin_HEXAGON_V6_vsubhw
__builtin_HEXAGON_V6_vsubhw_128B
__builtin_HEXAGON_V6_vadduhw
__builtin_HEXAGON_V6_vadduhw_128B
__builtin_HEXAGON_V6_vsubuhw
__builtin_HEXAGON_V6_vsubuhw_128B
__builtin_HEXAGON_V6_vd0
V16i
__builtin_HEXAGON_V6_vd0_128B
V32i
__builtin_HEXAGON_V6_vaddbq
V16iV64bV16iV16i
__builtin_HEXAGON_V6_vaddbq_128B
V32iV128bV32iV32i
__builtin_HEXAGON_V6_vsubbq
__builtin_HEXAGON_V6_vsubbq_128B
__builtin_HEXAGON_V6_vaddbnq
__builtin_HEXAGON_V6_vaddbnq_128B
__builtin_HEXAGON_V6_vsubbnq
__builtin_HEXAGON_V6_vsubbnq_128B
__builtin_HEXAGON_V6_vaddhq
__builtin_HEXAGON_V6_vaddhq_128B
__builtin_HEXAGON_V6_vsubhq
__builtin_HEXAGON_V6_vsubhq_128B
__builtin_HEXAGON_V6_vaddhnq
__builtin_HEXAGON_V6_vaddhnq_128B
__builtin_HEXAGON_V6_vsubhnq
__builtin_HEXAGON_V6_vsubhnq_128B
__builtin_HEXAGON_V6_vaddwq
__builtin_HEXAGON_V6_vaddwq_128B
__builtin_HEXAGON_V6_vsubwq
__builtin_HEXAGON_V6_vsubwq_128B
__builtin_HEXAGON_V6_vaddwnq
__builtin_HEXAGON_V6_vaddwnq_128B
__builtin_HEXAGON_V6_vsubwnq
__builtin_HEXAGON_V6_vsubwnq_128B
__builtin_HEXAGON_V6_vabsh
V16iV16i
__builtin_HEXAGON_V6_vabsh_128B
V32iV32i
__builtin_HEXAGON_V6_vabsh_sat
__builtin_HEXAGON_V6_vabsh_sat_128B
__builtin_HEXAGON_V6_vabsw
__builtin_HEXAGON_V6_vabsw_128B
__builtin_HEXAGON_V6_vabsw_sat
__builtin_HEXAGON_V6_vabsw_sat_128B
__builtin_HEXAGON_V6_vmpybv
__builtin_HEXAGON_V6_vmpybv_128B
__builtin_HEXAGON_V6_vmpybv_acc
V32iV32iV16iV16i
__builtin_HEXAGON_V6_vmpybv_acc_128B
V64iV64iV32iV32i
__builtin_HEXAGON_V6_vmpyubv
__builtin_HEXAGON_V6_vmpyubv_128B
__builtin_HEXAGON_V6_vmpyubv_acc
__builtin_HEXAGON_V6_vmpyubv_acc_128B
__builtin_HEXAGON_V6_vmpybusv
__builtin_HEXAGON_V6_vmpybusv_128B
__builtin_HEXAGON_V6_vmpybusv_acc
__builtin_HEXAGON_V6_vmpybusv_acc_128B
__builtin_HEXAGON_V6_vmpabusv
__builtin_HEXAGON_V6_vmpabusv_128B
__builtin_HEXAGON_V6_vmpabuuv
__builtin_HEXAGON_V6_vmpabuuv_128B
__builtin_HEXAGON_V6_vmpyhv
__builtin_HEXAGON_V6_vmpyhv_128B
__builtin_HEXAGON_V6_vmpyhv_acc
__builtin_HEXAGON_V6_vmpyhv_acc_128B
__builtin_HEXAGON_V6_vmpyuhv
__builtin_HEXAGON_V6_vmpyuhv_128B
__builtin_HEXAGON_V6_vmpyuhv_acc
__builtin_HEXAGON_V6_vmpyuhv_acc_128B
__builtin_HEXAGON_V6_vmpyhvsrs
__builtin_HEXAGON_V6_vmpyhvsrs_128B
__builtin_HEXAGON_V6_vmpyhus
__builtin_HEXAGON_V6_vmpyhus_128B
__builtin_HEXAGON_V6_vmpyhus_acc
__builtin_HEXAGON_V6_vmpyhus_acc_128B
__builtin_HEXAGON_V6_vmpyih
__builtin_HEXAGON_V6_vmpyih_128B
__builtin_HEXAGON_V6_vmpyih_acc
__builtin_HEXAGON_V6_vmpyih_acc_128B
__builtin_HEXAGON_V6_vmpyewuh
__builtin_HEXAGON_V6_vmpyewuh_128B
__builtin_HEXAGON_V6_vmpyowh
__builtin_HEXAGON_V6_vmpyowh_128B
__builtin_HEXAGON_V6_vmpyowh_rnd
__builtin_HEXAGON_V6_vmpyowh_rnd_128B
__builtin_HEXAGON_V6_vmpyowh_sacc
__builtin_HEXAGON_V6_vmpyowh_sacc_128B
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc_128B
__builtin_HEXAGON_V6_vmpyieoh
__builtin_HEXAGON_V6_vmpyieoh_128B
__builtin_HEXAGON_V6_vmpyiewuh
__builtin_HEXAGON_V6_vmpyiewuh_128B
__builtin_HEXAGON_V6_vmpyiowh
__builtin_HEXAGON_V6_vmpyiowh_128B
__builtin_HEXAGON_V6_vmpyiewh_acc
__builtin_HEXAGON_V6_vmpyiewh_acc_128B
__builtin_HEXAGON_V6_vmpyiewuh_acc
__builtin_HEXAGON_V6_vmpyiewuh_acc_128B
__builtin_HEXAGON_V6_vmpyub
V32iV16ii
__builtin_HEXAGON_V6_vmpyub_128B
V64iV32ii
__builtin_HEXAGON_V6_vmpyub_acc
V32iV32iV16ii
__builtin_HEXAGON_V6_vmpyub_acc_128B
V64iV64iV32ii
__builtin_HEXAGON_V6_vmpybus
__builtin_HEXAGON_V6_vmpybus_128B
__builtin_HEXAGON_V6_vmpybus_acc
__builtin_HEXAGON_V6_vmpybus_acc_128B
__builtin_HEXAGON_V6_vmpabus
__builtin_HEXAGON_V6_vmpabus_128B
__builtin_HEXAGON_V6_vmpabus_acc
__builtin_HEXAGON_V6_vmpabus_acc_128B
__builtin_HEXAGON_V6_vmpahb
__builtin_HEXAGON_V6_vmpahb_128B
__builtin_HEXAGON_V6_vmpahb_acc
__builtin_HEXAGON_V6_vmpahb_acc_128B
__builtin_HEXAGON_V6_vmpyh
__builtin_HEXAGON_V6_vmpyh_128B
__builtin_HEXAGON_V6_vmpyhsat_acc
__builtin_HEXAGON_V6_vmpyhsat_acc_128B
__builtin_HEXAGON_V6_vmpyhss
__builtin_HEXAGON_V6_vmpyhss_128B
__builtin_HEXAGON_V6_vmpyhsrs
__builtin_HEXAGON_V6_vmpyhsrs_128B
__builtin_HEXAGON_V6_vmpyuh
__builtin_HEXAGON_V6_vmpyuh_128B
__builtin_HEXAGON_V6_vmpyuh_acc
__builtin_HEXAGON_V6_vmpyuh_acc_128B
__builtin_HEXAGON_V6_vmpyihb
__builtin_HEXAGON_V6_vmpyihb_128B
__builtin_HEXAGON_V6_vmpyihb_acc
__builtin_HEXAGON_V6_vmpyihb_acc_128B
__builtin_HEXAGON_V6_vmpyiwb
__builtin_HEXAGON_V6_vmpyiwb_128B
__builtin_HEXAGON_V6_vmpyiwb_acc
__builtin_HEXAGON_V6_vmpyiwb_acc_128B
__builtin_HEXAGON_V6_vmpyiwh
__builtin_HEXAGON_V6_vmpyiwh_128B
__builtin_HEXAGON_V6_vmpyiwh_acc
__builtin_HEXAGON_V6_vmpyiwh_acc_128B
__builtin_HEXAGON_V6_vand
__builtin_HEXAGON_V6_vand_128B
__builtin_HEXAGON_V6_vor
__builtin_HEXAGON_V6_vor_128B
__builtin_HEXAGON_V6_vxor
__builtin_HEXAGON_V6_vxor_128B
__builtin_HEXAGON_V6_vnot
__builtin_HEXAGON_V6_vnot_128B
__builtin_HEXAGON_V6_vandqrt
V16iV64bi
__builtin_HEXAGON_V6_vandqrt_128B
V32iV128bi
__builtin_HEXAGON_V6_vandqrt_acc
V16iV16iV64bi
__builtin_HEXAGON_V6_vandqrt_acc_128B
V32iV32iV128bi
__builtin_HEXAGON_V6_vandvrt
V64bV16ii
__builtin_HEXAGON_V6_vandvrt_128B
V128bV32ii
__builtin_HEXAGON_V6_vandvrt_acc
V64bV64bV16ii
__builtin_HEXAGON_V6_vandvrt_acc_128B
V128bV128bV32ii
__builtin_HEXAGON_V6_vgtw
V64bV16iV16i
__builtin_HEXAGON_V6_vgtw_128B
V128bV32iV32i
__builtin_HEXAGON_V6_vgtw_and
V64bV64bV16iV16i
__builtin_HEXAGON_V6_vgtw_and_128B
V128bV128bV32iV32i
__builtin_HEXAGON_V6_vgtw_or
__builtin_HEXAGON_V6_vgtw_or_128B
__builtin_HEXAGON_V6_vgtw_xor
__builtin_HEXAGON_V6_vgtw_xor_128B
__builtin_HEXAGON_V6_veqw
__builtin_HEXAGON_V6_veqw_128B
__builtin_HEXAGON_V6_veqw_and
__builtin_HEXAGON_V6_veqw_and_128B
__builtin_HEXAGON_V6_veqw_or
__builtin_HEXAGON_V6_veqw_or_128B
__builtin_HEXAGON_V6_veqw_xor
__builtin_HEXAGON_V6_veqw_xor_128B
__builtin_HEXAGON_V6_vgth
__builtin_HEXAGON_V6_vgth_128B
__builtin_HEXAGON_V6_vgth_and
__builtin_HEXAGON_V6_vgth_and_128B
__builtin_HEXAGON_V6_vgth_or
__builtin_HEXAGON_V6_vgth_or_128B
__builtin_HEXAGON_V6_vgth_xor
__builtin_HEXAGON_V6_vgth_xor_128B
__builtin_HEXAGON_V6_veqh
__builtin_HEXAGON_V6_veqh_128B
__builtin_HEXAGON_V6_veqh_and
__builtin_HEXAGON_V6_veqh_and_128B
__builtin_HEXAGON_V6_veqh_or
__builtin_HEXAGON_V6_veqh_or_128B
__builtin_HEXAGON_V6_veqh_xor
__builtin_HEXAGON_V6_veqh_xor_128B
__builtin_HEXAGON_V6_vgtb
__builtin_HEXAGON_V6_vgtb_128B
__builtin_HEXAGON_V6_vgtb_and
__builtin_HEXAGON_V6_vgtb_and_128B
__builtin_HEXAGON_V6_vgtb_or
__builtin_HEXAGON_V6_vgtb_or_128B
__builtin_HEXAGON_V6_vgtb_xor
__builtin_HEXAGON_V6_vgtb_xor_128B
__builtin_HEXAGON_V6_veqb
__builtin_HEXAGON_V6_veqb_128B
__builtin_HEXAGON_V6_veqb_and
__builtin_HEXAGON_V6_veqb_and_128B
__builtin_HEXAGON_V6_veqb_or
__builtin_HEXAGON_V6_veqb_or_128B
__builtin_HEXAGON_V6_veqb_xor
__builtin_HEXAGON_V6_veqb_xor_128B
__builtin_HEXAGON_V6_vgtuw
__builtin_HEXAGON_V6_vgtuw_128B
__builtin_HEXAGON_V6_vgtuw_and
__builtin_HEXAGON_V6_vgtuw_and_128B
__builtin_HEXAGON_V6_vgtuw_or
__builtin_HEXAGON_V6_vgtuw_or_128B
__builtin_HEXAGON_V6_vgtuw_xor
__builtin_HEXAGON_V6_vgtuw_xor_128B
__builtin_HEXAGON_V6_vgtuh
__builtin_HEXAGON_V6_vgtuh_128B
__builtin_HEXAGON_V6_vgtuh_and
__builtin_HEXAGON_V6_vgtuh_and_128B
__builtin_HEXAGON_V6_vgtuh_or
__builtin_HEXAGON_V6_vgtuh_or_128B
__builtin_HEXAGON_V6_vgtuh_xor
__builtin_HEXAGON_V6_vgtuh_xor_128B
__builtin_HEXAGON_V6_vgtub
__builtin_HEXAGON_V6_vgtub_128B
__builtin_HEXAGON_V6_vgtub_and
__builtin_HEXAGON_V6_vgtub_and_128B
__builtin_HEXAGON_V6_vgtub_or
__builtin_HEXAGON_V6_vgtub_or_128B
__builtin_HEXAGON_V6_vgtub_xor
__builtin_HEXAGON_V6_vgtub_xor_128B
__builtin_HEXAGON_V6_pred_or
V64bV64bV64b
__builtin_HEXAGON_V6_pred_or_128B
V128bV128bV128b
__builtin_HEXAGON_V6_pred_and
__builtin_HEXAGON_V6_pred_and_128B
__builtin_HEXAGON_V6_pred_not
V64bV64b
__builtin_HEXAGON_V6_pred_not_128B
V128bV128b
__builtin_HEXAGON_V6_pred_xor
__builtin_HEXAGON_V6_pred_xor_128B
__builtin_HEXAGON_V6_pred_and_n
__builtin_HEXAGON_V6_pred_and_n_128B
__builtin_HEXAGON_V6_pred_or_n
__builtin_HEXAGON_V6_pred_or_n_128B
__builtin_HEXAGON_V6_pred_scalar2
V64bi
__builtin_HEXAGON_V6_pred_scalar2_128B
V128bi
__builtin_HEXAGON_V6_vmux
__builtin_HEXAGON_V6_vmux_128B
__builtin_HEXAGON_V6_vswap
V32iV64bV16iV16i
__builtin_HEXAGON_V6_vswap_128B
V64iV128bV32iV32i
__builtin_HEXAGON_V6_vmaxub
__builtin_HEXAGON_V6_vmaxub_128B
__builtin_HEXAGON_V6_vminub
__builtin_HEXAGON_V6_vminub_128B
__builtin_HEXAGON_V6_vmaxuh
__builtin_HEXAGON_V6_vmaxuh_128B
__builtin_HEXAGON_V6_vminuh
__builtin_HEXAGON_V6_vminuh_128B
__builtin_HEXAGON_V6_vmaxh
__builtin_HEXAGON_V6_vmaxh_128B
__builtin_HEXAGON_V6_vminh
__builtin_HEXAGON_V6_vminh_128B
__builtin_HEXAGON_V6_vmaxw
__builtin_HEXAGON_V6_vmaxw_128B
__builtin_HEXAGON_V6_vminw
__builtin_HEXAGON_V6_vminw_128B
__builtin_HEXAGON_V6_vsathub
__builtin_HEXAGON_V6_vsathub_128B
__builtin_HEXAGON_V6_vsatwh
__builtin_HEXAGON_V6_vsatwh_128B
__builtin_HEXAGON_V6_vshuffeb
__builtin_HEXAGON_V6_vshuffeb_128B
__builtin_HEXAGON_V6_vshuffob
__builtin_HEXAGON_V6_vshuffob_128B
__builtin_HEXAGON_V6_vshufeh
__builtin_HEXAGON_V6_vshufeh_128B
__builtin_HEXAGON_V6_vshufoh
__builtin_HEXAGON_V6_vshufoh_128B
__builtin_HEXAGON_V6_vshuffvdd
V32iV16iV16ii
__builtin_HEXAGON_V6_vshuffvdd_128B
V64iV32iV32ii
__builtin_HEXAGON_V6_vdealvdd
__builtin_HEXAGON_V6_vdealvdd_128B
__builtin_HEXAGON_V6_vshufoeh
__builtin_HEXAGON_V6_vshufoeh_128B
__builtin_HEXAGON_V6_vshufoeb
__builtin_HEXAGON_V6_vshufoeb_128B
__builtin_HEXAGON_V6_vdealh
__builtin_HEXAGON_V6_vdealh_128B
__builtin_HEXAGON_V6_vdealb
__builtin_HEXAGON_V6_vdealb_128B
__builtin_HEXAGON_V6_vdealb4w
__builtin_HEXAGON_V6_vdealb4w_128B
__builtin_HEXAGON_V6_vshuffh
__builtin_HEXAGON_V6_vshuffh_128B
__builtin_HEXAGON_V6_vshuffb
__builtin_HEXAGON_V6_vshuffb_128B
__builtin_HEXAGON_V6_extractw
iV16ii
__builtin_HEXAGON_V6_extractw_128B
iV32ii
__builtin_HEXAGON_V6_vinsertwr
__builtin_HEXAGON_V6_vinsertwr_128B
__builtin_HEXAGON_V6_lvsplatw
V16ii
__builtin_HEXAGON_V6_lvsplatw_128B
V32ii
__builtin_HEXAGON_V6_vassignp
__builtin_HEXAGON_V6_vassignp_128B
V64iV64i
__builtin_HEXAGON_V6_vassign
__builtin_HEXAGON_V6_vassign_128B
__builtin_HEXAGON_V6_vcombine
__builtin_HEXAGON_V6_vcombine_128B
__builtin_HEXAGON_V6_vdelta
__builtin_HEXAGON_V6_vdelta_128B
__builtin_HEXAGON_V6_vrdelta
__builtin_HEXAGON_V6_vrdelta_128B
__builtin_HEXAGON_V6_vcl0w
__builtin_HEXAGON_V6_vcl0w_128B
__builtin_HEXAGON_V6_vcl0h
__builtin_HEXAGON_V6_vcl0h_128B
__builtin_HEXAGON_V6_vnormamtw
__builtin_HEXAGON_V6_vnormamtw_128B
__builtin_HEXAGON_V6_vnormamth
__builtin_HEXAGON_V6_vnormamth_128B
__builtin_HEXAGON_V6_vpopcounth
__builtin_HEXAGON_V6_vpopcounth_128B
__builtin_HEXAGON_V6_vlutvvb
__builtin_HEXAGON_V6_vlutvvb_128B
__builtin_HEXAGON_V6_vlutvvb_oracc
V16iV16iV16iV16ii
__builtin_HEXAGON_V6_vlutvvb_oracc_128B
V32iV32iV32iV32ii
__builtin_HEXAGON_V6_vlutvwh
__builtin_HEXAGON_V6_vlutvwh_128B
__builtin_HEXAGON_V6_vlutvwh_oracc
V32iV32iV16iV16ii
__builtin_HEXAGON_V6_vlutvwh_oracc_128B
V64iV64iV32iV32ii
__builtin_HEXAGON_V6_hi
V16iV32i
__builtin_HEXAGON_V6_hi_128B
V32iV64i
__builtin_HEXAGON_V6_lo
__builtin_HEXAGON_V6_lo_128B
__builtin_HEXAGON_V6_vlsrb
hvxv62|hvxv65|hvxv66|hvxv67
__builtin_HEXAGON_V6_vlsrb_128B
__builtin_HEXAGON_V6_vasrwuhrndsat
__builtin_HEXAGON_V6_vasrwuhrndsat_128B
__builtin_HEXAGON_V6_vasruwuhrndsat
__builtin_HEXAGON_V6_vasruwuhrndsat_128B
__builtin_HEXAGON_V6_vasrhbsat
__builtin_HEXAGON_V6_vasrhbsat_128B
__builtin_HEXAGON_V6_vrounduwuh
__builtin_HEXAGON_V6_vrounduwuh_128B
__builtin_HEXAGON_V6_vrounduhub
__builtin_HEXAGON_V6_vrounduhub_128B
__builtin_HEXAGON_V6_vadduwsat
__builtin_HEXAGON_V6_vadduwsat_128B
__builtin_HEXAGON_V6_vadduwsat_dv
__builtin_HEXAGON_V6_vadduwsat_dv_128B
__builtin_HEXAGON_V6_vsubuwsat
__builtin_HEXAGON_V6_vsubuwsat_128B
__builtin_HEXAGON_V6_vsubuwsat_dv
__builtin_HEXAGON_V6_vsubuwsat_dv_128B
__builtin_HEXAGON_V6_vaddbsat
__builtin_HEXAGON_V6_vaddbsat_128B
__builtin_HEXAGON_V6_vaddbsat_dv
__builtin_HEXAGON_V6_vaddbsat_dv_128B
__builtin_HEXAGON_V6_vsubbsat
__builtin_HEXAGON_V6_vsubbsat_128B
__builtin_HEXAGON_V6_vsubbsat_dv
__builtin_HEXAGON_V6_vsubbsat_dv_128B
__builtin_HEXAGON_V6_vaddcarry
V16iV16iV16iv*
__builtin_HEXAGON_V6_vaddcarry_128B
V32iV32iV32iv*
__builtin_HEXAGON_V6_vsubcarry
__builtin_HEXAGON_V6_vsubcarry_128B
__builtin_HEXAGON_V6_vaddububb_sat
__builtin_HEXAGON_V6_vaddububb_sat_128B
__builtin_HEXAGON_V6_vsubububb_sat
__builtin_HEXAGON_V6_vsubububb_sat_128B
__builtin_HEXAGON_V6_vaddhw_acc
__builtin_HEXAGON_V6_vaddhw_acc_128B
__builtin_HEXAGON_V6_vadduhw_acc
__builtin_HEXAGON_V6_vadduhw_acc_128B
__builtin_HEXAGON_V6_vaddubh_acc
__builtin_HEXAGON_V6_vaddubh_acc_128B
__builtin_HEXAGON_V6_vmpyewuh_64
__builtin_HEXAGON_V6_vmpyewuh_64_128B
__builtin_HEXAGON_V6_vmpyowh_64_acc
__builtin_HEXAGON_V6_vmpyowh_64_acc_128B
__builtin_HEXAGON_V6_vmpauhb
__builtin_HEXAGON_V6_vmpauhb_128B
__builtin_HEXAGON_V6_vmpauhb_acc
__builtin_HEXAGON_V6_vmpauhb_acc_128B
__builtin_HEXAGON_V6_vmpyiwub
__builtin_HEXAGON_V6_vmpyiwub_128B
__builtin_HEXAGON_V6_vmpyiwub_acc
__builtin_HEXAGON_V6_vmpyiwub_acc_128B
__builtin_HEXAGON_V6_vandnqrt
__builtin_HEXAGON_V6_vandnqrt_128B
__builtin_HEXAGON_V6_vandnqrt_acc
__builtin_HEXAGON_V6_vandnqrt_acc_128B
__builtin_HEXAGON_V6_vandvqv
V16iV64bV16i
__builtin_HEXAGON_V6_vandvqv_128B
V32iV128bV32i
__builtin_HEXAGON_V6_vandvnqv
__builtin_HEXAGON_V6_vandvnqv_128B
__builtin_HEXAGON_V6_pred_scalar2v2
__builtin_HEXAGON_V6_pred_scalar2v2_128B
__builtin_HEXAGON_V6_shuffeqw
__builtin_HEXAGON_V6_shuffeqw_128B
__builtin_HEXAGON_V6_shuffeqh
__builtin_HEXAGON_V6_shuffeqh_128B
__builtin_HEXAGON_V6_vmaxb
__builtin_HEXAGON_V6_vmaxb_128B
__builtin_HEXAGON_V6_vminb
__builtin_HEXAGON_V6_vminb_128B
__builtin_HEXAGON_V6_vsatuwuh
__builtin_HEXAGON_V6_vsatuwuh_128B
__builtin_HEXAGON_V6_lvsplath
__builtin_HEXAGON_V6_lvsplath_128B
__builtin_HEXAGON_V6_lvsplatb
__builtin_HEXAGON_V6_lvsplatb_128B
__builtin_HEXAGON_V6_vaddclbw
__builtin_HEXAGON_V6_vaddclbw_128B
__builtin_HEXAGON_V6_vaddclbh
__builtin_HEXAGON_V6_vaddclbh_128B
__builtin_HEXAGON_V6_vlutvvbi
__builtin_HEXAGON_V6_vlutvvbi_128B
__builtin_HEXAGON_V6_vlutvvb_oracci
V16iV16iV16iV16iUIi
__builtin_HEXAGON_V6_vlutvvb_oracci_128B
V32iV32iV32iV32iUIi
__builtin_HEXAGON_V6_vlutvwhi
V32iV16iV16iUIi
__builtin_HEXAGON_V6_vlutvwhi_128B
V64iV32iV32iUIi
__builtin_HEXAGON_V6_vlutvwh_oracci
V32iV32iV16iV16iUIi
__builtin_HEXAGON_V6_vlutvwh_oracci_128B
V64iV64iV32iV32iUIi
__builtin_HEXAGON_V6_vlutvvb_nm
__builtin_HEXAGON_V6_vlutvvb_nm_128B
__builtin_HEXAGON_V6_vlutvwh_nm
__builtin_HEXAGON_V6_vlutvwh_nm_128B
__builtin_HEXAGON_V6_vasruwuhsat
hvxv65|hvxv66|hvxv67
__builtin_HEXAGON_V6_vasruwuhsat_128B
__builtin_HEXAGON_V6_vasruhubsat
__builtin_HEXAGON_V6_vasruhubsat_128B
__builtin_HEXAGON_V6_vasruhubrndsat
__builtin_HEXAGON_V6_vasruhubrndsat_128B
__builtin_HEXAGON_V6_vaslh_acc
__builtin_HEXAGON_V6_vaslh_acc_128B
__builtin_HEXAGON_V6_vasrh_acc
__builtin_HEXAGON_V6_vasrh_acc_128B
__builtin_HEXAGON_V6_vavguw
__builtin_HEXAGON_V6_vavguw_128B
__builtin_HEXAGON_V6_vavguwrnd
__builtin_HEXAGON_V6_vavguwrnd_128B
__builtin_HEXAGON_V6_vavgb
__builtin_HEXAGON_V6_vavgb_128B
__builtin_HEXAGON_V6_vavgbrnd
__builtin_HEXAGON_V6_vavgbrnd_128B
__builtin_HEXAGON_V6_vnavgb
__builtin_HEXAGON_V6_vnavgb_128B
__builtin_HEXAGON_V6_vdd0
__builtin_HEXAGON_V6_vdd0_128B
V64i
__builtin_HEXAGON_V6_vabsb
__builtin_HEXAGON_V6_vabsb_128B
__builtin_HEXAGON_V6_vabsb_sat
__builtin_HEXAGON_V6_vabsb_sat_128B
__builtin_HEXAGON_V6_vmpabuu
__builtin_HEXAGON_V6_vmpabuu_128B
__builtin_HEXAGON_V6_vmpabuu_acc
__builtin_HEXAGON_V6_vmpabuu_acc_128B
__builtin_HEXAGON_V6_vmpyh_acc
__builtin_HEXAGON_V6_vmpyh_acc_128B
__builtin_HEXAGON_V6_vmpahhsat
V16iV16iV16iLLi
__builtin_HEXAGON_V6_vmpahhsat_128B
V32iV32iV32iLLi
__builtin_HEXAGON_V6_vmpauhuhsat
__builtin_HEXAGON_V6_vmpauhuhsat_128B
__builtin_HEXAGON_V6_vmpsuhuhsat
__builtin_HEXAGON_V6_vmpsuhuhsat_128B
__builtin_HEXAGON_V6_vlut4
V16iV16iLLi
__builtin_HEXAGON_V6_vlut4_128B
V32iV32iLLi
__builtin_HEXAGON_V6_vmpyuhe
__builtin_HEXAGON_V6_vmpyuhe_128B
__builtin_HEXAGON_V6_vmpyuhe_acc
__builtin_HEXAGON_V6_vmpyuhe_acc_128B
__builtin_HEXAGON_V6_vgathermw
vv*iiV16i
__builtin_HEXAGON_V6_vgathermw_128B
vv*iiV32i
__builtin_HEXAGON_V6_vgathermh
__builtin_HEXAGON_V6_vgathermh_128B
__builtin_HEXAGON_V6_vgathermhw
__builtin_HEXAGON_V6_vgathermhw_128B
vv*iiV64i
__builtin_HEXAGON_V6_vgathermwq
vv*V64biiV16i
__builtin_HEXAGON_V6_vgathermwq_128B
vv*V128biiV32i
__builtin_HEXAGON_V6_vgathermhq
__builtin_HEXAGON_V6_vgathermhq_128B
__builtin_HEXAGON_V6_vgathermhwq
vv*V64biiV32i
__builtin_HEXAGON_V6_vgathermhwq_128B
vv*V128biiV64i
__builtin_HEXAGON_V6_vscattermw
viiV16iV16i
__builtin_HEXAGON_V6_vscattermw_128B
viiV32iV32i
__builtin_HEXAGON_V6_vscattermh
__builtin_HEXAGON_V6_vscattermh_128B
__builtin_HEXAGON_V6_vscattermw_add
__builtin_HEXAGON_V6_vscattermw_add_128B
__builtin_HEXAGON_V6_vscattermh_add
__builtin_HEXAGON_V6_vscattermh_add_128B
__builtin_HEXAGON_V6_vscattermwq
vV64biiV16iV16i
__builtin_HEXAGON_V6_vscattermwq_128B
vV128biiV32iV32i
__builtin_HEXAGON_V6_vscattermhq
__builtin_HEXAGON_V6_vscattermhq_128B
__builtin_HEXAGON_V6_vscattermhw
viiV32iV16i
__builtin_HEXAGON_V6_vscattermhw_128B
viiV64iV32i
__builtin_HEXAGON_V6_vscattermhwq
vV64biiV32iV16i
__builtin_HEXAGON_V6_vscattermhwq_128B
vV128biiV64iV32i
__builtin_HEXAGON_V6_vscattermhw_add
__builtin_HEXAGON_V6_vscattermhw_add_128B
__builtin_HEXAGON_V6_vprefixqb
V16iV64b
__builtin_HEXAGON_V6_vprefixqb_128B
V32iV128b
__builtin_HEXAGON_V6_vprefixqh
__builtin_HEXAGON_V6_vprefixqh_128B
__builtin_HEXAGON_V6_vprefixqw
__builtin_HEXAGON_V6_vprefixqw_128B
__builtin_HEXAGON_V6_vrotr
hvxv66|hvxv67
__builtin_HEXAGON_V6_vrotr_128B
__builtin_HEXAGON_V6_vasr_into
__builtin_HEXAGON_V6_vasr_into_128B
__builtin_HEXAGON_V6_vaddcarrysat
V16iV16iV16iV64b
__builtin_HEXAGON_V6_vaddcarrysat_128B
V32iV32iV32iV128b
__builtin_HEXAGON_V6_vsatdw
__builtin_HEXAGON_V6_vsatdw_128B
hvxv
__lanai__
__LANAI_V11__
le64
MSP430
__MSP430__
__builtin_mips_addu_qb
V4ScV4ScV4Sc
__builtin_mips_addu_s_qb
__builtin_mips_subu_qb
__builtin_mips_subu_s_qb
__builtin_mips_addq_ph
V2sV2sV2s
__builtin_mips_addq_s_ph
__builtin_mips_subq_ph
__builtin_mips_subq_s_ph
__builtin_mips_madd
__builtin_mips_maddu
LLiLLiUiUi
__builtin_mips_msub
__builtin_mips_msubu
__builtin_mips_addq_s_w
__builtin_mips_subq_s_w
__builtin_mips_addsc
__builtin_mips_addwc
__builtin_mips_modsub
__builtin_mips_raddu_w_qb
iV4Sc
__builtin_mips_absq_s_ph
V2sV2s
__builtin_mips_absq_s_w
__builtin_mips_precrq_qb_ph
V4ScV2sV2s
__builtin_mips_precrqu_s_qb_ph
__builtin_mips_precrq_ph_w
V2sii
__builtin_mips_precrq_rs_ph_w
__builtin_mips_preceq_w_phl
iV2s
__builtin_mips_preceq_w_phr
__builtin_mips_precequ_ph_qbl
V2sV4Sc
__builtin_mips_precequ_ph_qbr
__builtin_mips_precequ_ph_qbla
__builtin_mips_precequ_ph_qbra
__builtin_mips_preceu_ph_qbl
__builtin_mips_preceu_ph_qbr
__builtin_mips_preceu_ph_qbla
__builtin_mips_preceu_ph_qbra
__builtin_mips_shll_qb
V4ScV4Sci
__builtin_mips_shrl_qb
__builtin_mips_shll_ph
V2sV2si
__builtin_mips_shll_s_ph
__builtin_mips_shra_ph
__builtin_mips_shra_r_ph
__builtin_mips_shll_s_w
__builtin_mips_shra_r_w
__builtin_mips_shilo
__builtin_mips_muleu_s_ph_qbl
V2sV4ScV2s
__builtin_mips_muleu_s_ph_qbr
__builtin_mips_mulq_rs_ph
__builtin_mips_muleq_s_w_phl
iV2sV2s
__builtin_mips_muleq_s_w_phr
__builtin_mips_mulsaq_s_w_ph
LLiLLiV2sV2s
__builtin_mips_maq_s_w_phl
__builtin_mips_maq_s_w_phr
__builtin_mips_maq_sa_w_phl
__builtin_mips_maq_sa_w_phr
__builtin_mips_mult
__builtin_mips_multu
LLiUiUi
__builtin_mips_dpau_h_qbl
LLiLLiV4ScV4Sc
__builtin_mips_dpau_h_qbr
__builtin_mips_dpsu_h_qbl
__builtin_mips_dpsu_h_qbr
__builtin_mips_dpaq_s_w_ph
__builtin_mips_dpsq_s_w_ph
__builtin_mips_dpaq_sa_l_w
__builtin_mips_dpsq_sa_l_w
__builtin_mips_cmpu_eq_qb
vV4ScV4Sc
__builtin_mips_cmpu_lt_qb
__builtin_mips_cmpu_le_qb
__builtin_mips_cmpgu_eq_qb
iV4ScV4Sc
__builtin_mips_cmpgu_lt_qb
__builtin_mips_cmpgu_le_qb
__builtin_mips_cmp_eq_ph
vV2sV2s
__builtin_mips_cmp_lt_ph
__builtin_mips_cmp_le_ph
__builtin_mips_extr_s_h
__builtin_mips_extr_w
__builtin_mips_extr_rs_w
__builtin_mips_extr_r_w
__builtin_mips_extp
__builtin_mips_extpdp
__builtin_mips_wrdsp
viIi
__builtin_mips_rddsp
__builtin_mips_insv
__builtin_mips_bitrev
__builtin_mips_packrl_ph
__builtin_mips_repl_qb
V4Sci
__builtin_mips_repl_ph
V2si
__builtin_mips_pick_qb
__builtin_mips_pick_ph
__builtin_mips_mthlip
__builtin_mips_bposge32
__builtin_mips_lbux
iv*i
__builtin_mips_lhx
__builtin_mips_lwx
__builtin_mips_absq_s_qb
V4ScV4Sc
__builtin_mips_addqh_ph
__builtin_mips_addqh_r_ph
__builtin_mips_addqh_w
__builtin_mips_addqh_r_w
__builtin_mips_addu_ph
__builtin_mips_addu_s_ph
__builtin_mips_adduh_qb
__builtin_mips_adduh_r_qb
__builtin_mips_append
__builtin_mips_balign
__builtin_mips_cmpgdu_eq_qb
__builtin_mips_cmpgdu_lt_qb
__builtin_mips_cmpgdu_le_qb
__builtin_mips_dpa_w_ph
__builtin_mips_dps_w_ph
__builtin_mips_dpaqx_s_w_ph
__builtin_mips_dpaqx_sa_w_ph
__builtin_mips_dpax_w_ph
__builtin_mips_dpsx_w_ph
__builtin_mips_dpsqx_s_w_ph
__builtin_mips_dpsqx_sa_w_ph
__builtin_mips_mul_ph
__builtin_mips_mul_s_ph
__builtin_mips_mulq_rs_w
__builtin_mips_mulq_s_ph
__builtin_mips_mulq_s_w
__builtin_mips_mulsa_w_ph
__builtin_mips_precr_qb_ph
__builtin_mips_precr_sra_ph_w
V2siiIi
__builtin_mips_precr_sra_r_ph_w
__builtin_mips_prepend
__builtin_mips_shra_qb
__builtin_mips_shra_r_qb
__builtin_mips_shrl_ph
__builtin_mips_subqh_ph
__builtin_mips_subqh_r_ph
__builtin_mips_subqh_w
__builtin_mips_subqh_r_w
__builtin_mips_subu_ph
__builtin_mips_subu_s_ph
__builtin_mips_subuh_qb
__builtin_mips_subuh_r_qb
__builtin_msa_add_a_b
V16ScV16ScV16Sc
__builtin_msa_add_a_h
V8SsV8SsV8Ss
__builtin_msa_add_a_w
V4SiV4SiV4Si
__builtin_msa_add_a_d
V2SLLiV2SLLiV2SLLi
__builtin_msa_adds_a_b
__builtin_msa_adds_a_h
__builtin_msa_adds_a_w
__builtin_msa_adds_a_d
__builtin_msa_adds_s_b
__builtin_msa_adds_s_h
__builtin_msa_adds_s_w
__builtin_msa_adds_s_d
__builtin_msa_adds_u_b
V16UcV16UcV16Uc
__builtin_msa_adds_u_h
V8UsV8UsV8Us
__builtin_msa_adds_u_w
V4UiV4UiV4Ui
__builtin_msa_adds_u_d
V2ULLiV2ULLiV2ULLi
__builtin_msa_addv_b
V16cV16cV16c
__builtin_msa_addv_h
V8sV8sV8s
__builtin_msa_addv_w
V4iV4iV4i
__builtin_msa_addv_d
V2LLiV2LLiV2LLi
__builtin_msa_addvi_b
V16cV16cIUi
__builtin_msa_addvi_h
V8sV8sIUi
__builtin_msa_addvi_w
V4iV4iIUi
__builtin_msa_addvi_d
V2LLiV2LLiIUi
__builtin_msa_and_v
__builtin_msa_andi_b
V16UcV16UcIUi
__builtin_msa_asub_s_b
__builtin_msa_asub_s_h
__builtin_msa_asub_s_w
__builtin_msa_asub_s_d
__builtin_msa_asub_u_b
__builtin_msa_asub_u_h
__builtin_msa_asub_u_w
__builtin_msa_asub_u_d
__builtin_msa_ave_s_b
__builtin_msa_ave_s_h
__builtin_msa_ave_s_w
__builtin_msa_ave_s_d
__builtin_msa_ave_u_b
__builtin_msa_ave_u_h
__builtin_msa_ave_u_w
__builtin_msa_ave_u_d
__builtin_msa_aver_s_b
__builtin_msa_aver_s_h
__builtin_msa_aver_s_w
__builtin_msa_aver_s_d
__builtin_msa_aver_u_b
__builtin_msa_aver_u_h
__builtin_msa_aver_u_w
__builtin_msa_aver_u_d
__builtin_msa_bclr_b
__builtin_msa_bclr_h
__builtin_msa_bclr_w
__builtin_msa_bclr_d
__builtin_msa_bclri_b
__builtin_msa_bclri_h
V8UsV8UsIUi
__builtin_msa_bclri_w
V4UiV4UiIUi
__builtin_msa_bclri_d
V2ULLiV2ULLiIUi
__builtin_msa_binsl_b
V16UcV16UcV16UcV16Uc
__builtin_msa_binsl_h
V8UsV8UsV8UsV8Us
__builtin_msa_binsl_w
V4UiV4UiV4UiV4Ui
__builtin_msa_binsl_d
V2ULLiV2ULLiV2ULLiV2ULLi
__builtin_msa_binsli_b
V16UcV16UcV16UcIUi
__builtin_msa_binsli_h
V8UsV8UsV8UsIUi
__builtin_msa_binsli_w
V4UiV4UiV4UiIUi
__builtin_msa_binsli_d
V2ULLiV2ULLiV2ULLiIUi
__builtin_msa_binsr_b
__builtin_msa_binsr_h
__builtin_msa_binsr_w
__builtin_msa_binsr_d
__builtin_msa_binsri_b
__builtin_msa_binsri_h
__builtin_msa_binsri_w
__builtin_msa_binsri_d
__builtin_msa_bmnz_v
__builtin_msa_bmnzi_b
__builtin_msa_bmz_v
__builtin_msa_bmzi_b
__builtin_msa_bneg_b
__builtin_msa_bneg_h
__builtin_msa_bneg_w
__builtin_msa_bneg_d
__builtin_msa_bnegi_b
__builtin_msa_bnegi_h
__builtin_msa_bnegi_w
__builtin_msa_bnegi_d
__builtin_msa_bnz_b
iV16Uc
__builtin_msa_bnz_h
iV8Us
__builtin_msa_bnz_w
iV4Ui
__builtin_msa_bnz_d
iV2ULLi
__builtin_msa_bnz_v
__builtin_msa_bsel_v
__builtin_msa_bseli_b
__builtin_msa_bset_b
__builtin_msa_bset_h
__builtin_msa_bset_w
__builtin_msa_bset_d
__builtin_msa_bseti_b
__builtin_msa_bseti_h
__builtin_msa_bseti_w
__builtin_msa_bseti_d
__builtin_msa_bz_b
__builtin_msa_bz_h
__builtin_msa_bz_w
__builtin_msa_bz_d
__builtin_msa_bz_v
__builtin_msa_ceq_b
__builtin_msa_ceq_h
__builtin_msa_ceq_w
__builtin_msa_ceq_d
__builtin_msa_ceqi_b
V16ScV16ScISi
__builtin_msa_ceqi_h
V8SsV8SsISi
__builtin_msa_ceqi_w
V4SiV4SiISi
__builtin_msa_ceqi_d
V2SLLiV2SLLiISi
__builtin_msa_cfcmsa
__builtin_msa_cle_s_b
__builtin_msa_cle_s_h
__builtin_msa_cle_s_w
__builtin_msa_cle_s_d
__builtin_msa_cle_u_b
V16ScV16UcV16Uc
__builtin_msa_cle_u_h
V8SsV8UsV8Us
__builtin_msa_cle_u_w
V4SiV4UiV4Ui
__builtin_msa_cle_u_d
V2SLLiV2ULLiV2ULLi
__builtin_msa_clei_s_b
__builtin_msa_clei_s_h
__builtin_msa_clei_s_w
__builtin_msa_clei_s_d
__builtin_msa_clei_u_b
V16ScV16UcIUi
__builtin_msa_clei_u_h
V8SsV8UsIUi
__builtin_msa_clei_u_w
V4SiV4UiIUi
__builtin_msa_clei_u_d
V2SLLiV2ULLiIUi
__builtin_msa_clt_s_b
__builtin_msa_clt_s_h
__builtin_msa_clt_s_w
__builtin_msa_clt_s_d
__builtin_msa_clt_u_b
__builtin_msa_clt_u_h
__builtin_msa_clt_u_w
__builtin_msa_clt_u_d
__builtin_msa_clti_s_b
__builtin_msa_clti_s_h
__builtin_msa_clti_s_w
__builtin_msa_clti_s_d
__builtin_msa_clti_u_b
__builtin_msa_clti_u_h
__builtin_msa_clti_u_w
__builtin_msa_clti_u_d
__builtin_msa_copy_s_b
iV16ScIUi
__builtin_msa_copy_s_h
iV8SsIUi
__builtin_msa_copy_s_w
iV4SiIUi
__builtin_msa_copy_s_d
LLiV2SLLiIUi
__builtin_msa_copy_u_b
iV16UcIUi
__builtin_msa_copy_u_h
iV8UsIUi
__builtin_msa_copy_u_w
iV4UiIUi
__builtin_msa_copy_u_d
LLiV2ULLiIUi
__builtin_msa_ctcmsa
vIii
__builtin_msa_div_s_b
__builtin_msa_div_s_h
__builtin_msa_div_s_w
__builtin_msa_div_s_d
__builtin_msa_div_u_b
__builtin_msa_div_u_h
__builtin_msa_div_u_w
__builtin_msa_div_u_d
__builtin_msa_dotp_s_h
V8SsV16ScV16Sc
__builtin_msa_dotp_s_w
V4SiV8SsV8Ss
__builtin_msa_dotp_s_d
V2SLLiV4SiV4Si
__builtin_msa_dotp_u_h
V8UsV16UcV16Uc
__builtin_msa_dotp_u_w
V4UiV8UsV8Us
__builtin_msa_dotp_u_d
V2ULLiV4UiV4Ui
__builtin_msa_dpadd_s_h
V8SsV8SsV16ScV16Sc
__builtin_msa_dpadd_s_w
V4SiV4SiV8SsV8Ss
__builtin_msa_dpadd_s_d
V2SLLiV2SLLiV4SiV4Si
__builtin_msa_dpadd_u_h
V8UsV8UsV16UcV16Uc
__builtin_msa_dpadd_u_w
V4UiV4UiV8UsV8Us
__builtin_msa_dpadd_u_d
V2ULLiV2ULLiV4UiV4Ui
__builtin_msa_dpsub_s_h
__builtin_msa_dpsub_s_w
__builtin_msa_dpsub_s_d
__builtin_msa_dpsub_u_h
__builtin_msa_dpsub_u_w
__builtin_msa_dpsub_u_d
__builtin_msa_fadd_w
V4fV4fV4f
__builtin_msa_fadd_d
V2dV2dV2d
__builtin_msa_fcaf_w
V4iV4fV4f
__builtin_msa_fcaf_d
V2LLiV2dV2d
__builtin_msa_fceq_w
__builtin_msa_fceq_d
__builtin_msa_fclass_w
V4iV4f
__builtin_msa_fclass_d
V2LLiV2d
__builtin_msa_fcle_w
__builtin_msa_fcle_d
__builtin_msa_fclt_w
__builtin_msa_fclt_d
__builtin_msa_fcne_w
__builtin_msa_fcne_d
__builtin_msa_fcor_w
__builtin_msa_fcor_d
__builtin_msa_fcueq_w
__builtin_msa_fcueq_d
__builtin_msa_fcule_w
__builtin_msa_fcule_d
__builtin_msa_fcult_w
__builtin_msa_fcult_d
__builtin_msa_fcun_w
__builtin_msa_fcun_d
__builtin_msa_fcune_w
__builtin_msa_fcune_d
__builtin_msa_fdiv_w
__builtin_msa_fdiv_d
__builtin_msa_fexdo_h
V8hV4fV4f
__builtin_msa_fexdo_w
V4fV2dV2d
__builtin_msa_fexp2_w
V4fV4fV4i
__builtin_msa_fexp2_d
V2dV2dV2LLi
__builtin_msa_fexupl_w
V4fV8h
__builtin_msa_fexupl_d
V2dV4f
__builtin_msa_fexupr_w
__builtin_msa_fexupr_d
__builtin_msa_ffint_s_w
V4fV4Si
__builtin_msa_ffint_s_d
V2dV2SLLi
__builtin_msa_ffint_u_w
V4fV4Ui
__builtin_msa_ffint_u_d
V2dV2ULLi
__builtin_msa_ffql_w
V4fV8Ss
__builtin_msa_ffql_d
V2dV4Si
__builtin_msa_ffqr_w
__builtin_msa_ffqr_d
__builtin_msa_fill_b
V16Sci
__builtin_msa_fill_h
V8Ssi
__builtin_msa_fill_w
V4Sii
__builtin_msa_fill_d
V2SLLiLLi
__builtin_msa_flog2_w
V4fV4f
__builtin_msa_flog2_d
V2dV2d
__builtin_msa_fmadd_w
V4fV4fV4fV4f
__builtin_msa_fmadd_d
V2dV2dV2dV2d
__builtin_msa_fmax_w
__builtin_msa_fmax_d
__builtin_msa_fmax_a_w
__builtin_msa_fmax_a_d
__builtin_msa_fmin_w
__builtin_msa_fmin_d
__builtin_msa_fmin_a_w
__builtin_msa_fmin_a_d
__builtin_msa_fmsub_w
__builtin_msa_fmsub_d
__builtin_msa_fmul_w
__builtin_msa_fmul_d
__builtin_msa_frint_w
__builtin_msa_frint_d
__builtin_msa_frcp_w
__builtin_msa_frcp_d
__builtin_msa_frsqrt_w
__builtin_msa_frsqrt_d
__builtin_msa_fsaf_w
__builtin_msa_fsaf_d
__builtin_msa_fseq_w
__builtin_msa_fseq_d
__builtin_msa_fsle_w
__builtin_msa_fsle_d
__builtin_msa_fslt_w
__builtin_msa_fslt_d
__builtin_msa_fsne_w
__builtin_msa_fsne_d
__builtin_msa_fsor_w
__builtin_msa_fsor_d
__builtin_msa_fsqrt_w
__builtin_msa_fsqrt_d
__builtin_msa_fsub_w
__builtin_msa_fsub_d
__builtin_msa_fsueq_w
__builtin_msa_fsueq_d
__builtin_msa_fsule_w
__builtin_msa_fsule_d
__builtin_msa_fsult_w
__builtin_msa_fsult_d
__builtin_msa_fsun_w
__builtin_msa_fsun_d
__builtin_msa_fsune_w
__builtin_msa_fsune_d
__builtin_msa_ftint_s_w
V4SiV4f
__builtin_msa_ftint_s_d
V2SLLiV2d
__builtin_msa_ftint_u_w
V4UiV4f
__builtin_msa_ftint_u_d
V2ULLiV2d
__builtin_msa_ftq_h
V4UiV4fV4f
__builtin_msa_ftq_w
V2ULLiV2dV2d
__builtin_msa_ftrunc_s_w
__builtin_msa_ftrunc_s_d
__builtin_msa_ftrunc_u_w
__builtin_msa_ftrunc_u_d
__builtin_msa_hadd_s_h
__builtin_msa_hadd_s_w
__builtin_msa_hadd_s_d
__builtin_msa_hadd_u_h
__builtin_msa_hadd_u_w
__builtin_msa_hadd_u_d
__builtin_msa_hsub_s_h
__builtin_msa_hsub_s_w
__builtin_msa_hsub_s_d
__builtin_msa_hsub_u_h
__builtin_msa_hsub_u_w
__builtin_msa_hsub_u_d
__builtin_msa_ilvev_b
__builtin_msa_ilvev_h
__builtin_msa_ilvev_w
__builtin_msa_ilvev_d
__builtin_msa_ilvl_b
__builtin_msa_ilvl_h
__builtin_msa_ilvl_w
__builtin_msa_ilvl_d
__builtin_msa_ilvod_b
__builtin_msa_ilvod_h
__builtin_msa_ilvod_w
__builtin_msa_ilvod_d
__builtin_msa_ilvr_b
__builtin_msa_ilvr_h
__builtin_msa_ilvr_w
__builtin_msa_ilvr_d
__builtin_msa_insert_b
V16ScV16ScIUii
__builtin_msa_insert_h
V8SsV8SsIUii
__builtin_msa_insert_w
V4SiV4SiIUii
__builtin_msa_insert_d
V2SLLiV2SLLiIUiLLi
__builtin_msa_insve_b
V16ScV16ScIUiV16Sc
__builtin_msa_insve_h
V8SsV8SsIUiV8Ss
__builtin_msa_insve_w
V4SiV4SiIUiV4Si
__builtin_msa_insve_d
V2SLLiV2SLLiIUiV2SLLi
__builtin_msa_ld_b
V16Scv*Ii
__builtin_msa_ld_h
V8Ssv*Ii
__builtin_msa_ld_w
V4Siv*Ii
__builtin_msa_ld_d
V2SLLiv*Ii
__builtin_msa_ldr_d
__builtin_msa_ldr_w
__builtin_msa_ldi_b
V16cIi
__builtin_msa_ldi_h
V8sIi
__builtin_msa_ldi_w
V4iIi
__builtin_msa_ldi_d
V2LLiIi
__builtin_msa_madd_q_h
V8SsV8SsV8SsV8Ss
__builtin_msa_madd_q_w
V4SiV4SiV4SiV4Si
__builtin_msa_maddr_q_h
__builtin_msa_maddr_q_w
__builtin_msa_maddv_b
V16ScV16ScV16ScV16Sc
__builtin_msa_maddv_h
__builtin_msa_maddv_w
__builtin_msa_maddv_d
V2SLLiV2SLLiV2SLLiV2SLLi
__builtin_msa_max_a_b
__builtin_msa_max_a_h
__builtin_msa_max_a_w
__builtin_msa_max_a_d
__builtin_msa_max_s_b
__builtin_msa_max_s_h
__builtin_msa_max_s_w
__builtin_msa_max_s_d
__builtin_msa_max_u_b
__builtin_msa_max_u_h
__builtin_msa_max_u_w
__builtin_msa_max_u_d
__builtin_msa_maxi_s_b
V16ScV16ScIi
__builtin_msa_maxi_s_h
V8SsV8SsIi
__builtin_msa_maxi_s_w
V4SiV4SiIi
__builtin_msa_maxi_s_d
V2SLLiV2SLLiIi
__builtin_msa_maxi_u_b
V16UcV16UcIi
__builtin_msa_maxi_u_h
V8UsV8UsIi
__builtin_msa_maxi_u_w
V4UiV4UiIi
__builtin_msa_maxi_u_d
V2ULLiV2ULLiIi
__builtin_msa_min_a_b
__builtin_msa_min_a_h
__builtin_msa_min_a_w
__builtin_msa_min_a_d
__builtin_msa_min_s_b
__builtin_msa_min_s_h
__builtin_msa_min_s_w
__builtin_msa_min_s_d
__builtin_msa_min_u_b
__builtin_msa_min_u_h
__builtin_msa_min_u_w
__builtin_msa_min_u_d
__builtin_msa_mini_s_b
__builtin_msa_mini_s_h
__builtin_msa_mini_s_w
__builtin_msa_mini_s_d
__builtin_msa_mini_u_b
__builtin_msa_mini_u_h
__builtin_msa_mini_u_w
__builtin_msa_mini_u_d
__builtin_msa_mod_s_b
__builtin_msa_mod_s_h
__builtin_msa_mod_s_w
__builtin_msa_mod_s_d
__builtin_msa_mod_u_b
__builtin_msa_mod_u_h
__builtin_msa_mod_u_w
__builtin_msa_mod_u_d
__builtin_msa_move_v
V16ScV16Sc
__builtin_msa_msub_q_h
__builtin_msa_msub_q_w
__builtin_msa_msubr_q_h
__builtin_msa_msubr_q_w
__builtin_msa_msubv_b
__builtin_msa_msubv_h
__builtin_msa_msubv_w
__builtin_msa_msubv_d
__builtin_msa_mul_q_h
__builtin_msa_mul_q_w
__builtin_msa_mulr_q_h
__builtin_msa_mulr_q_w
__builtin_msa_mulv_b
__builtin_msa_mulv_h
__builtin_msa_mulv_w
__builtin_msa_mulv_d
__builtin_msa_nloc_b
__builtin_msa_nloc_h
V8SsV8Ss
__builtin_msa_nloc_w
V4SiV4Si
__builtin_msa_nloc_d
V2SLLiV2SLLi
__builtin_msa_nlzc_b
__builtin_msa_nlzc_h
__builtin_msa_nlzc_w
__builtin_msa_nlzc_d
__builtin_msa_nor_v
__builtin_msa_nori_b
V16UcV16cIUi
__builtin_msa_or_v
__builtin_msa_ori_b
__builtin_msa_pckev_b
__builtin_msa_pckev_h
__builtin_msa_pckev_w
__builtin_msa_pckev_d
__builtin_msa_pckod_b
__builtin_msa_pckod_h
__builtin_msa_pckod_w
__builtin_msa_pckod_d
__builtin_msa_pcnt_b
__builtin_msa_pcnt_h
__builtin_msa_pcnt_w
__builtin_msa_pcnt_d
__builtin_msa_sat_s_b
V16ScV16ScIUi
__builtin_msa_sat_s_h
V8SsV8SsIUi
__builtin_msa_sat_s_w
V4SiV4SiIUi
__builtin_msa_sat_s_d
V2SLLiV2SLLiIUi
__builtin_msa_sat_u_b
__builtin_msa_sat_u_h
__builtin_msa_sat_u_w
__builtin_msa_sat_u_d
__builtin_msa_shf_b
__builtin_msa_shf_h
__builtin_msa_shf_w
__builtin_msa_sld_b
V16cV16cV16cUi
__builtin_msa_sld_h
V8sV8sV8sUi
__builtin_msa_sld_w
V4iV4iV4iUi
__builtin_msa_sld_d
V2LLiV2LLiV2LLiUi
__builtin_msa_sldi_b
V16cV16cV16cIUi
__builtin_msa_sldi_h
V8sV8sV8sIUi
__builtin_msa_sldi_w
V4iV4iV4iIUi
__builtin_msa_sldi_d
V2LLiV2LLiV2LLiIUi
__builtin_msa_sll_b
__builtin_msa_sll_h
__builtin_msa_sll_w
__builtin_msa_sll_d
__builtin_msa_slli_b
__builtin_msa_slli_h
__builtin_msa_slli_w
__builtin_msa_slli_d
__builtin_msa_splat_b
V16cV16cUi
__builtin_msa_splat_h
V8sV8sUi
__builtin_msa_splat_w
V4iV4iUi
__builtin_msa_splat_d
V2LLiV2LLiUi
__builtin_msa_splati_b
__builtin_msa_splati_h
__builtin_msa_splati_w
__builtin_msa_splati_d
__builtin_msa_sra_b
__builtin_msa_sra_h
__builtin_msa_sra_w
__builtin_msa_sra_d
__builtin_msa_srai_b
__builtin_msa_srai_h
__builtin_msa_srai_w
__builtin_msa_srai_d
__builtin_msa_srar_b
__builtin_msa_srar_h
__builtin_msa_srar_w
__builtin_msa_srar_d
__builtin_msa_srari_b
__builtin_msa_srari_h
__builtin_msa_srari_w
__builtin_msa_srari_d
__builtin_msa_srl_b
__builtin_msa_srl_h
__builtin_msa_srl_w
__builtin_msa_srl_d
__builtin_msa_srli_b
__builtin_msa_srli_h
__builtin_msa_srli_w
__builtin_msa_srli_d
__builtin_msa_srlr_b
__builtin_msa_srlr_h
__builtin_msa_srlr_w
__builtin_msa_srlr_d
__builtin_msa_srlri_b
__builtin_msa_srlri_h
__builtin_msa_srlri_w
__builtin_msa_srlri_d
__builtin_msa_st_b
vV16Scv*Ii
__builtin_msa_st_h
vV8Ssv*Ii
__builtin_msa_st_w
vV4Siv*Ii
__builtin_msa_st_d
vV2SLLiv*Ii
__builtin_msa_str_d
__builtin_msa_str_w
__builtin_msa_subs_s_b
__builtin_msa_subs_s_h
__builtin_msa_subs_s_w
__builtin_msa_subs_s_d
__builtin_msa_subs_u_b
__builtin_msa_subs_u_h
__builtin_msa_subs_u_w
__builtin_msa_subs_u_d
__builtin_msa_subsus_u_b
V16UcV16UcV16Sc
__builtin_msa_subsus_u_h
V8UsV8UsV8Ss
__builtin_msa_subsus_u_w
V4UiV4UiV4Si
__builtin_msa_subsus_u_d
V2ULLiV2ULLiV2SLLi
__builtin_msa_subsuu_s_b
__builtin_msa_subsuu_s_h
__builtin_msa_subsuu_s_w
__builtin_msa_subsuu_s_d
__builtin_msa_subv_b
__builtin_msa_subv_h
__builtin_msa_subv_w
__builtin_msa_subv_d
__builtin_msa_subvi_b
__builtin_msa_subvi_h
__builtin_msa_subvi_w
__builtin_msa_subvi_d
__builtin_msa_vshf_b
V16cV16cV16cV16c
__builtin_msa_vshf_h
V8sV8sV8sV8s
__builtin_msa_vshf_w
V4iV4iV4iV4i
__builtin_msa_vshf_d
V2LLiV2LLiV2LLiV2LLi
__builtin_msa_xor_v
__builtin_msa_xori_b
MIPSEB
_MIPSEB
MIPSEL
_MIPSEL
__mips__
_mips
__mips
_MIPS_ISA
_MIPS_ISA_MIPS32
__mips64
__mips64__
_MIPS_ISA_MIPS64
__mips_isa_rev
__mips_o32
_ABIO32
_MIPS_SIM
__mips_n32
_ABIN32
__mips_n64
_ABI64
__mips_abicalls
__ABICALLS__
__mips_hard_float
__mips_soft_float
__mips_single_float
__mips_fpr
_MIPS_FPSET
__mips16
__mips_micromips
__mips_nan2008
__mips_abs2008
__mips_dsp_rev
__mips_dsp
__mips_dspr2
__mips_msa
__mips_no_madd4
_MIPS_SZPTR
_MIPS_SZINT
_MIPS_SZLONG
_MIPS_ARCH
_MIPS_ARCH_OCTEONP
_MIPS_ARCH_
__OCTEON__
-mfp32
-mfp64
__nvvm_read_ptx_sreg_tid_x
__nvvm_read_ptx_sreg_tid_y
__nvvm_read_ptx_sreg_tid_z
__nvvm_read_ptx_sreg_tid_w
__nvvm_read_ptx_sreg_ntid_x
__nvvm_read_ptx_sreg_ntid_y
__nvvm_read_ptx_sreg_ntid_z
__nvvm_read_ptx_sreg_ntid_w
__nvvm_read_ptx_sreg_ctaid_x
__nvvm_read_ptx_sreg_ctaid_y
__nvvm_read_ptx_sreg_ctaid_z
__nvvm_read_ptx_sreg_ctaid_w
__nvvm_read_ptx_sreg_nctaid_x
__nvvm_read_ptx_sreg_nctaid_y
__nvvm_read_ptx_sreg_nctaid_z
__nvvm_read_ptx_sreg_nctaid_w
__nvvm_read_ptx_sreg_laneid
__nvvm_read_ptx_sreg_warpid
__nvvm_read_ptx_sreg_nwarpid
__nvvm_read_ptx_sreg_smid
__nvvm_read_ptx_sreg_nsmid
__nvvm_read_ptx_sreg_gridid
__nvvm_read_ptx_sreg_lanemask_eq
__nvvm_read_ptx_sreg_lanemask_le
__nvvm_read_ptx_sreg_lanemask_lt
__nvvm_read_ptx_sreg_lanemask_ge
__nvvm_read_ptx_sreg_lanemask_gt
__nvvm_read_ptx_sreg_clock
__nvvm_read_ptx_sreg_clock64
__nvvm_read_ptx_sreg_pm0
__nvvm_read_ptx_sreg_pm1
__nvvm_read_ptx_sreg_pm2
__nvvm_read_ptx_sreg_pm3
__nvvm_prmt
__nvvm_fmax_ftz_f
__nvvm_fmax_f
__nvvm_fmin_ftz_f
__nvvm_fmin_f
__nvvm_fmax_d
__nvvm_fmin_d
__nvvm_mulhi_i
__nvvm_mulhi_ui
__nvvm_mulhi_ll
__nvvm_mulhi_ull
ULLiULLiULLi
__nvvm_mul_rn_ftz_f
__nvvm_mul_rn_f
__nvvm_mul_rz_ftz_f
__nvvm_mul_rz_f
__nvvm_mul_rm_ftz_f
__nvvm_mul_rm_f
__nvvm_mul_rp_ftz_f
__nvvm_mul_rp_f
__nvvm_mul_rn_d
__nvvm_mul_rz_d
__nvvm_mul_rm_d
__nvvm_mul_rp_d
__nvvm_mul24_i
__nvvm_mul24_ui
__nvvm_div_approx_ftz_f
__nvvm_div_approx_f
__nvvm_div_rn_ftz_f
__nvvm_div_rn_f
__nvvm_div_rz_ftz_f
__nvvm_div_rz_f
__nvvm_div_rm_ftz_f
__nvvm_div_rm_f
__nvvm_div_rp_ftz_f
__nvvm_div_rp_f
__nvvm_div_rn_d
__nvvm_div_rz_d
__nvvm_div_rm_d
__nvvm_div_rp_d
__nvvm_sad_i
__nvvm_sad_ui
__nvvm_floor_ftz_f
__nvvm_floor_f
__nvvm_floor_d
__nvvm_ceil_ftz_f
__nvvm_ceil_f
__nvvm_ceil_d
__nvvm_fabs_ftz_f
__nvvm_fabs_f
__nvvm_fabs_d
__nvvm_round_ftz_f
__nvvm_round_f
__nvvm_round_d
__nvvm_trunc_ftz_f
__nvvm_trunc_f
__nvvm_trunc_d
__nvvm_saturate_ftz_f
__nvvm_saturate_f
__nvvm_saturate_d
__nvvm_ex2_approx_ftz_f
__nvvm_ex2_approx_f
__nvvm_ex2_approx_d
__nvvm_lg2_approx_ftz_f
__nvvm_lg2_approx_f
__nvvm_lg2_approx_d
__nvvm_sin_approx_ftz_f
__nvvm_sin_approx_f
__nvvm_cos_approx_ftz_f
__nvvm_cos_approx_f
__nvvm_fma_rn_ftz_f
__nvvm_fma_rn_f
__nvvm_fma_rz_ftz_f
__nvvm_fma_rz_f
__nvvm_fma_rm_ftz_f
__nvvm_fma_rm_f
__nvvm_fma_rp_ftz_f
__nvvm_fma_rp_f
__nvvm_fma_rn_d
__nvvm_fma_rz_d
__nvvm_fma_rm_d
__nvvm_fma_rp_d
__nvvm_rcp_rn_ftz_f
__nvvm_rcp_rn_f
__nvvm_rcp_rz_ftz_f
__nvvm_rcp_rz_f
__nvvm_rcp_rm_ftz_f
__nvvm_rcp_rm_f
__nvvm_rcp_rp_ftz_f
__nvvm_rcp_rp_f
__nvvm_rcp_rn_d
__nvvm_rcp_rz_d
__nvvm_rcp_rm_d
__nvvm_rcp_rp_d
__nvvm_rcp_approx_ftz_d
__nvvm_sqrt_rn_ftz_f
__nvvm_sqrt_rn_f
__nvvm_sqrt_rz_ftz_f
__nvvm_sqrt_rz_f
__nvvm_sqrt_rm_ftz_f
__nvvm_sqrt_rm_f
__nvvm_sqrt_rp_ftz_f
__nvvm_sqrt_rp_f
__nvvm_sqrt_approx_ftz_f
__nvvm_sqrt_approx_f
__nvvm_sqrt_rn_d
__nvvm_sqrt_rz_d
__nvvm_sqrt_rm_d
__nvvm_sqrt_rp_d
__nvvm_rsqrt_approx_ftz_f
__nvvm_rsqrt_approx_f
__nvvm_rsqrt_approx_d
__nvvm_add_rn_ftz_f
__nvvm_add_rn_f
__nvvm_add_rz_ftz_f
__nvvm_add_rz_f
__nvvm_add_rm_ftz_f
__nvvm_add_rm_f
__nvvm_add_rp_ftz_f
__nvvm_add_rp_f
__nvvm_add_rn_d
__nvvm_add_rz_d
__nvvm_add_rm_d
__nvvm_add_rp_d
__nvvm_d2f_rn_ftz
__nvvm_d2f_rn
__nvvm_d2f_rz_ftz
__nvvm_d2f_rz
__nvvm_d2f_rm_ftz
__nvvm_d2f_rm
__nvvm_d2f_rp_ftz
__nvvm_d2f_rp
__nvvm_d2i_rn
__nvvm_d2i_rz
__nvvm_d2i_rm
__nvvm_d2i_rp
__nvvm_d2ui_rn
__nvvm_d2ui_rz
__nvvm_d2ui_rm
__nvvm_d2ui_rp
__nvvm_i2d_rn
__nvvm_i2d_rz
__nvvm_i2d_rm
__nvvm_i2d_rp
__nvvm_ui2d_rn
__nvvm_ui2d_rz
__nvvm_ui2d_rm
__nvvm_ui2d_rp
__nvvm_f2i_rn_ftz
__nvvm_f2i_rn
__nvvm_f2i_rz_ftz
__nvvm_f2i_rz
__nvvm_f2i_rm_ftz
__nvvm_f2i_rm
__nvvm_f2i_rp_ftz
__nvvm_f2i_rp
__nvvm_f2ui_rn_ftz
__nvvm_f2ui_rn
__nvvm_f2ui_rz_ftz
__nvvm_f2ui_rz
__nvvm_f2ui_rm_ftz
__nvvm_f2ui_rm
__nvvm_f2ui_rp_ftz
__nvvm_f2ui_rp
__nvvm_i2f_rn
__nvvm_i2f_rz
__nvvm_i2f_rm
__nvvm_i2f_rp
__nvvm_ui2f_rn
__nvvm_ui2f_rz
__nvvm_ui2f_rm
__nvvm_ui2f_rp
__nvvm_lohi_i2d
__nvvm_d2i_lo
__nvvm_d2i_hi
__nvvm_f2ll_rn_ftz
__nvvm_f2ll_rn
__nvvm_f2ll_rz_ftz
__nvvm_f2ll_rz
__nvvm_f2ll_rm_ftz
__nvvm_f2ll_rm
__nvvm_f2ll_rp_ftz
__nvvm_f2ll_rp
__nvvm_f2ull_rn_ftz
ULLif
__nvvm_f2ull_rn
__nvvm_f2ull_rz_ftz
__nvvm_f2ull_rz
__nvvm_f2ull_rm_ftz
__nvvm_f2ull_rm
__nvvm_f2ull_rp_ftz
__nvvm_f2ull_rp
__nvvm_d2ll_rn
__nvvm_d2ll_rz
__nvvm_d2ll_rm
__nvvm_d2ll_rp
__nvvm_d2ull_rn
ULLid
__nvvm_d2ull_rz
__nvvm_d2ull_rm
__nvvm_d2ull_rp
__nvvm_ll2f_rn
__nvvm_ll2f_rz
__nvvm_ll2f_rm
__nvvm_ll2f_rp
__nvvm_ull2f_rn
fULLi
__nvvm_ull2f_rz
__nvvm_ull2f_rm
__nvvm_ull2f_rp
__nvvm_ll2d_rn
__nvvm_ll2d_rz
__nvvm_ll2d_rm
__nvvm_ll2d_rp
__nvvm_ull2d_rn
dULLi
__nvvm_ull2d_rz
__nvvm_ull2d_rm
__nvvm_ull2d_rp
__nvvm_f2h_rn_ftz
__nvvm_f2h_rn
__nvvm_bitcast_f2i
__nvvm_bitcast_i2f
__nvvm_bitcast_ll2d
__nvvm_bitcast_d2ll
__nvvm_fns
UiUiUii
ptx60|ptx61|ptx63|ptx64|ptx65|ptx70
__syncthreads
__nvvm_bar0_popc
__nvvm_bar0_and
__nvvm_bar0_or
__nvvm_bar_sync
__nvvm_bar_warp_sync
__nvvm_barrier_sync
__nvvm_barrier_sync_cnt
__nvvm_shfl_down_i32
__nvvm_shfl_down_f32
ffii
__nvvm_shfl_up_i32
__nvvm_shfl_up_f32
__nvvm_shfl_bfly_i32
__nvvm_shfl_bfly_f32
__nvvm_shfl_idx_i32
__nvvm_shfl_idx_f32
__nvvm_shfl_sync_down_i32
iUiiii
__nvvm_shfl_sync_down_f32
fUifii
__nvvm_shfl_sync_up_i32
__nvvm_shfl_sync_up_f32
__nvvm_shfl_sync_bfly_i32
__nvvm_shfl_sync_bfly_f32
__nvvm_shfl_sync_idx_i32
__nvvm_shfl_sync_idx_f32
__nvvm_vote_all
__nvvm_vote_any
__nvvm_vote_uni
__nvvm_vote_ballot
__nvvm_vote_all_sync
bUib
__nvvm_vote_any_sync
__nvvm_vote_uni_sync
__nvvm_vote_ballot_sync
UiUib
__nvvm_match_any_sync_i32
__nvvm_match_any_sync_i64
WiUiWi
__nvvm_match_all_sync_i32p
UiUiUii*
__nvvm_match_all_sync_i64p
WiUiWii*
__nvvm_membar_cta
__nvvm_membar_gl
__nvvm_membar_sys
__nvvm_memcpy
vUc*Uc*zi
__nvvm_memset
vUc*Uczi
__builtin_ptx_read_image2Dfi_
V4fiiii
__builtin_ptx_read_image2Dff_
V4fiiff
__builtin_ptx_read_image2Dii_
V4iiiii
__builtin_ptx_read_image2Dif_
V4iiiff
__builtin_ptx_read_image3Dfi_
V4fiiiiii
__builtin_ptx_read_image3Dff_
V4fiiffff
__builtin_ptx_read_image3Dii_
V4iiiiiii
__builtin_ptx_read_image3Dif_
V4iiiffff
__builtin_ptx_write_image2Df_
viiiffff
__builtin_ptx_write_image2Di_
viiiiiii
__builtin_ptx_write_image2Dui_
viiiUiUiUiUi
__builtin_ptx_get_image_depthi_
__builtin_ptx_get_image_heighti_
__builtin_ptx_get_image_widthi_
__builtin_ptx_get_image_channel_data_typei_
__builtin_ptx_get_image_channel_orderi_
__nvvm_atom_add_gen_i
iiD*i
__nvvm_atom_cta_add_gen_i
sm_60|sm_61|sm_62|sm_70|sm_72|sm_75|sm_80
__nvvm_atom_sys_add_gen_i
__nvvm_atom_add_gen_l
LiLiD*Li
__nvvm_atom_cta_add_gen_l
__nvvm_atom_sys_add_gen_l
__nvvm_atom_add_gen_ll
__nvvm_atom_cta_add_gen_ll
__nvvm_atom_sys_add_gen_ll
__nvvm_atom_add_gen_f
ffD*f
__nvvm_atom_cta_add_gen_f
__nvvm_atom_sys_add_gen_f
__nvvm_atom_add_gen_d
ddD*d
__nvvm_atom_cta_add_gen_d
__nvvm_atom_sys_add_gen_d
__nvvm_atom_sub_gen_i
__nvvm_atom_sub_gen_l
__nvvm_atom_sub_gen_ll
__nvvm_atom_xchg_gen_i
__nvvm_atom_cta_xchg_gen_i
__nvvm_atom_sys_xchg_gen_i
__nvvm_atom_xchg_gen_l
__nvvm_atom_cta_xchg_gen_l
__nvvm_atom_sys_xchg_gen_l
__nvvm_atom_xchg_gen_ll
__nvvm_atom_cta_xchg_gen_ll
__nvvm_atom_sys_xchg_gen_ll
__nvvm_atom_max_gen_i
__nvvm_atom_cta_max_gen_i
__nvvm_atom_sys_max_gen_i
__nvvm_atom_max_gen_ui
UiUiD*Ui
__nvvm_atom_cta_max_gen_ui
__nvvm_atom_sys_max_gen_ui
__nvvm_atom_max_gen_l
__nvvm_atom_cta_max_gen_l
__nvvm_atom_sys_max_gen_l
__nvvm_atom_max_gen_ul
ULiULiD*ULi
__nvvm_atom_cta_max_gen_ul
__nvvm_atom_sys_max_gen_ul
__nvvm_atom_max_gen_ll
__nvvm_atom_cta_max_gen_ll
__nvvm_atom_sys_max_gen_ll
__nvvm_atom_max_gen_ull
ULLiULLiD*ULLi
__nvvm_atom_cta_max_gen_ull
__nvvm_atom_sys_max_gen_ull
__nvvm_atom_min_gen_i
__nvvm_atom_cta_min_gen_i
__nvvm_atom_sys_min_gen_i
__nvvm_atom_min_gen_ui
__nvvm_atom_cta_min_gen_ui
__nvvm_atom_sys_min_gen_ui
__nvvm_atom_min_gen_l
__nvvm_atom_cta_min_gen_l
__nvvm_atom_sys_min_gen_l
__nvvm_atom_min_gen_ul
__nvvm_atom_cta_min_gen_ul
__nvvm_atom_sys_min_gen_ul
__nvvm_atom_min_gen_ll
__nvvm_atom_cta_min_gen_ll
__nvvm_atom_sys_min_gen_ll
__nvvm_atom_min_gen_ull
__nvvm_atom_cta_min_gen_ull
__nvvm_atom_sys_min_gen_ull
__nvvm_atom_inc_gen_ui
__nvvm_atom_cta_inc_gen_ui
__nvvm_atom_sys_inc_gen_ui
__nvvm_atom_dec_gen_ui
__nvvm_atom_cta_dec_gen_ui
__nvvm_atom_sys_dec_gen_ui
__nvvm_atom_and_gen_i
__nvvm_atom_cta_and_gen_i
__nvvm_atom_sys_and_gen_i
__nvvm_atom_and_gen_l
__nvvm_atom_cta_and_gen_l
__nvvm_atom_sys_and_gen_l
__nvvm_atom_and_gen_ll
__nvvm_atom_cta_and_gen_ll
__nvvm_atom_sys_and_gen_ll
__nvvm_atom_or_gen_i
__nvvm_atom_cta_or_gen_i
__nvvm_atom_sys_or_gen_i
__nvvm_atom_or_gen_l
__nvvm_atom_cta_or_gen_l
__nvvm_atom_sys_or_gen_l
__nvvm_atom_or_gen_ll
__nvvm_atom_cta_or_gen_ll
__nvvm_atom_sys_or_gen_ll
__nvvm_atom_xor_gen_i
__nvvm_atom_cta_xor_gen_i
__nvvm_atom_sys_xor_gen_i
__nvvm_atom_xor_gen_l
__nvvm_atom_cta_xor_gen_l
__nvvm_atom_sys_xor_gen_l
__nvvm_atom_xor_gen_ll
__nvvm_atom_cta_xor_gen_ll
__nvvm_atom_sys_xor_gen_ll
__nvvm_atom_cas_gen_i
iiD*ii
__nvvm_atom_cta_cas_gen_i
__nvvm_atom_sys_cas_gen_i
__nvvm_atom_cas_gen_l
LiLiD*LiLi
__nvvm_atom_cta_cas_gen_l
__nvvm_atom_sys_cas_gen_l
__nvvm_atom_cas_gen_ll
__nvvm_atom_cta_cas_gen_ll
__nvvm_atom_sys_cas_gen_ll
__nvvm_compiler_error
vcC*4
__nvvm_compiler_warn
__nvvm_ldg_c
ccC*
__nvvm_ldg_s
ssC*
__nvvm_ldg_i
iiC*
__nvvm_ldg_l
LiLiC*
__nvvm_ldg_ll
LLiLLiC*
__nvvm_ldg_uc
UcUcC*
__nvvm_ldg_us
UsUsC*
__nvvm_ldg_ui
UiUiC*
__nvvm_ldg_ul
ULiULiC*
__nvvm_ldg_ull
ULLiULLiC*
__nvvm_ldg_f
ffC*
__nvvm_ldg_d
ddC*
__nvvm_ldg_c2
E2cE2cC*
__nvvm_ldg_c4
E4cE4cC*
__nvvm_ldg_s2
E2sE2sC*
__nvvm_ldg_s4
E4sE4sC*
__nvvm_ldg_i2
E2iE2iC*
__nvvm_ldg_i4
E4iE4iC*
__nvvm_ldg_ll2
E2LLiE2LLiC*
__nvvm_ldg_uc2
E2UcE2UcC*
__nvvm_ldg_uc4
E4UcE4UcC*
__nvvm_ldg_us2
E2UsE2UsC*
__nvvm_ldg_us4
E4UsE4UsC*
__nvvm_ldg_ui2
E2UiE2UiC*
__nvvm_ldg_ui4
E4UiE4UiC*
__nvvm_ldg_ull2
E2ULLiE2ULLiC*
__nvvm_ldg_f2
E2fE2fC*
__nvvm_ldg_f4
E4fE4fC*
__nvvm_ldg_d2
E2dE2dC*
__hmma_m16n16k16_ld_a
vi*iC*UiIi
(sm_70|sm_72|sm_75|sm_80),(ptx60|ptx61|ptx63|ptx64|ptx65|ptx70)
__hmma_m16n16k16_ld_b
__hmma_m16n16k16_ld_c_f16
__hmma_m16n16k16_ld_c_f32
vf*fC*UiIi
__hmma_m16n16k16_st_c_f16
vi*i*UiIi
__hmma_m16n16k16_st_c_f32
vf*f*UiIi
__hmma_m32n8k16_ld_a
(sm_70|sm_72|sm_75|sm_80),(ptx61|ptx63|ptx64|ptx65|ptx70)
__hmma_m32n8k16_ld_b
__hmma_m32n8k16_ld_c_f16
__hmma_m32n8k16_ld_c_f32
__hmma_m32n8k16_st_c_f16
__hmma_m32n8k16_st_c_f32
__hmma_m8n32k16_ld_a
__hmma_m8n32k16_ld_b
__hmma_m8n32k16_ld_c_f16
__hmma_m8n32k16_ld_c_f32
__hmma_m8n32k16_st_c_f16
__hmma_m8n32k16_st_c_f32
__hmma_m16n16k16_mma_f16f16
vi*iC*iC*iC*IiIi
__hmma_m16n16k16_mma_f32f16
vf*iC*iC*iC*IiIi
__hmma_m16n16k16_mma_f32f32
vf*iC*iC*fC*IiIi
__hmma_m16n16k16_mma_f16f32
vi*iC*iC*fC*IiIi
__hmma_m32n8k16_mma_f16f16
__hmma_m32n8k16_mma_f32f16
__hmma_m32n8k16_mma_f32f32
__hmma_m32n8k16_mma_f16f32
__hmma_m8n32k16_mma_f16f16
__hmma_m8n32k16_mma_f32f16
__hmma_m8n32k16_mma_f32f32
__hmma_m8n32k16_mma_f16f32
__bmma_m8n8k128_ld_a_b1
(sm_75|sm_80),(ptx63|ptx64|ptx65|ptx70)
__bmma_m8n8k128_ld_b_b1
__bmma_m8n8k128_ld_c
__bmma_m8n8k128_mma_xor_popc_b1
vi*iC*iC*iC*Ii
__bmma_m8n8k128_st_c_i32
__imma_m16n16k16_ld_a_s8
(sm_72|sm_75|sm_80),(ptx63|ptx64|ptx65|ptx70)
__imma_m16n16k16_ld_a_u8
__imma_m16n16k16_ld_b_s8
__imma_m16n16k16_ld_b_u8
__imma_m16n16k16_ld_c
__imma_m16n16k16_mma_s8
__imma_m16n16k16_mma_u8
__imma_m16n16k16_st_c_i32
__imma_m32n8k16_ld_a_s8
__imma_m32n8k16_ld_a_u8
__imma_m32n8k16_ld_b_s8
__imma_m32n8k16_ld_b_u8
__imma_m32n8k16_ld_c
__imma_m32n8k16_mma_s8
__imma_m32n8k16_mma_u8
__imma_m32n8k16_st_c_i32
__imma_m8n32k16_ld_a_s8
__imma_m8n32k16_ld_a_u8
__imma_m8n32k16_ld_b_s8
__imma_m8n32k16_ld_b_u8
__imma_m8n32k16_ld_c
__imma_m8n32k16_mma_s8
__imma_m8n32k16_mma_u8
__imma_m8n32k16_st_c_i32
__imma_m8n8k32_ld_a_s4
__imma_m8n8k32_ld_a_u4
__imma_m8n8k32_ld_b_s4
__imma_m8n8k32_ld_b_u4
__imma_m8n8k32_ld_c
__imma_m8n8k32_mma_s4
__imma_m8n8k32_mma_u4
__imma_m8n8k32_st_c_i32
e-p:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64
e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64
e-i64:64-i128:128-v16:16-v32:32-n16:32:64
__PTX__
__NVPTX__
__APPLE_CC__
6000
__APPLE__
__STDC_NO_THREADS__
_FORTIFY_SOURCE
__PTRAUTH_INTRINSICS__
__ptrauth_abi_version__
__STATIC__
__DYNAMIC__
__ENVIRONMENT_TV_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_WATCH_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_BRIDGE_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_DRIVERKIT_VERSION_MIN_REQUIRED__
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
__ENVIRONMENT_OS_VERSION_MIN_REQUIRED__
_WIN32
_WIN64
WIN32
WINNT
WIN64
__MINGW64__
__MSVCRT__
__MINGW32__
_CPPRTTI
_CPPUNWIND
__BOOL_DEFINED
_CHAR_UNSIGNED
_MSC_VER
_MSC_FULL_VER
_MSC_BUILD
_HAS_CHAR16_T_LANGUAGE_SUPPORT
_MSVC_LANG
201705L
_MSC_EXTENSIONS
_RVALUE_REFERENCES_V2_SUPPORTED
_RVALUE_REFERENCES_SUPPORTED
_NATIVE_NULLPTR_SUPPORTED
_INTEGRAL_MAX_BITS
__le32__
__pnacl__
__builtin_ppc_get_timebase
ULLi
__builtin_altivec_vaddcuw
__builtin_altivec_vaddsbs
__builtin_altivec_vaddubs
__builtin_altivec_vaddshs
__builtin_altivec_vadduhs
__builtin_altivec_vaddsws
__builtin_altivec_vadduws
__builtin_altivec_vaddeuqm
V1ULLLiV1ULLLiV1ULLLiV1ULLLi
__builtin_altivec_vaddcuq
V1ULLLiV1ULLLiV1ULLLi
__builtin_altivec_vaddecuq
__builtin_altivec_vsubsbs
__builtin_altivec_vsububs
__builtin_altivec_vsubshs
__builtin_altivec_vsubuhs
__builtin_altivec_vsubsws
__builtin_altivec_vsubuws
__builtin_altivec_vsubeuqm
__builtin_altivec_vsubcuq
__builtin_altivec_vsubecuq
__builtin_altivec_vavgsb
__builtin_altivec_vavgub
__builtin_altivec_vavgsh
__builtin_altivec_vavguh
__builtin_altivec_vavgsw
__builtin_altivec_vavguw
__builtin_altivec_vrfip
__builtin_altivec_vcfsx
V4fV4SiIi
__builtin_altivec_vcfux
V4fV4UiIi
__builtin_altivec_vctsxs
V4SiV4fIi
__builtin_altivec_vctuxs
V4UiV4fIi
__builtin_altivec_dss
vUIi
__builtin_altivec_dssall
__builtin_altivec_dst
vvC*iUIi
__builtin_altivec_dstt
__builtin_altivec_dstst
__builtin_altivec_dststt
__builtin_altivec_vexptefp
__builtin_altivec_vrfim
__builtin_altivec_lvx
V4iivC*
__builtin_altivec_lvxl
__builtin_altivec_lvebx
V16civC*
__builtin_altivec_lvehx
V8sivC*
__builtin_altivec_lvewx
__builtin_altivec_vlogefp
__builtin_altivec_lvsl
V16cUcvC*
__builtin_altivec_lvsr
__builtin_altivec_vmaddfp
__builtin_altivec_vmhaddshs
__builtin_altivec_vmhraddshs
__builtin_altivec_vmsumubm
V4UiV16UcV16UcV4Ui
__builtin_altivec_vmsummbm
V4SiV16ScV16UcV4Si
__builtin_altivec_vmsumuhm
V4UiV8UsV8UsV4Ui
__builtin_altivec_vmsumshm
V4SiV8SsV8SsV4Si
__builtin_altivec_vmsumuhs
__builtin_altivec_vmsumshs
__builtin_altivec_vmuleub
__builtin_altivec_vmulesb
__builtin_altivec_vmuleuh
__builtin_altivec_vmulesh
__builtin_altivec_vmuleuw
__builtin_altivec_vmulesw
__builtin_altivec_vmuloub
__builtin_altivec_vmulosb
__builtin_altivec_vmulouh
__builtin_altivec_vmulosh
__builtin_altivec_vmulouw
__builtin_altivec_vmulosw
__builtin_altivec_vmuleud
V1ULLLiV2ULLiV2ULLi
__builtin_altivec_vmulesd
V1SLLLiV2SLLiV2SLLi
__builtin_altivec_vmuloud
__builtin_altivec_vmulosd
__builtin_altivec_vmsumcud
V1ULLLiV2ULLiV2ULLiV1ULLLi
__builtin_altivec_vnmsubfp
__builtin_altivec_vpkpx
V8sV4UiV4Ui
__builtin_altivec_vpkuhus
V16UcV8UsV8Us
__builtin_altivec_vpkshss
V16ScV8SsV8Ss
__builtin_altivec_vpkuwus
V8UsV4UiV4Ui
__builtin_altivec_vpkswss
V8SsV4SiV4Si
__builtin_altivec_vpkshus
V16UcV8SsV8Ss
__builtin_altivec_vpkswus
V8UsV4SiV4Si
__builtin_altivec_vpksdss
V4SiV2SLLiV2SLLi
__builtin_altivec_vpksdus
V4UiV2SLLiV2SLLi
__builtin_altivec_vpkudus
V4UiV2ULLiV2ULLi
__builtin_altivec_vpkudum
__builtin_altivec_vperm_4si
V4iV4iV4iV16Uc
__builtin_altivec_stvx
vV4iiv*
__builtin_altivec_stvxl
__builtin_altivec_stvebx
vV16civ*
__builtin_altivec_stvehx
vV8siv*
__builtin_altivec_stvewx
__builtin_altivec_vcmpbfp
__builtin_altivec_vcmpgefp
__builtin_altivec_vcmpequb
__builtin_altivec_vcmpequh
__builtin_altivec_vcmpequw
__builtin_altivec_vcmpequd
__builtin_altivec_vcmpeqfp
__builtin_altivec_vcmpneb
__builtin_altivec_vcmpneh
__builtin_altivec_vcmpnew
__builtin_altivec_vcmpnezb
__builtin_altivec_vcmpnezh
__builtin_altivec_vcmpnezw
__builtin_altivec_vcmpgtsb
V16cV16ScV16Sc
__builtin_altivec_vcmpgtub
V16cV16UcV16Uc
__builtin_altivec_vcmpgtsh
V8sV8SsV8Ss
__builtin_altivec_vcmpgtuh
V8sV8UsV8Us
__builtin_altivec_vcmpgtsw
V4iV4SiV4Si
__builtin_altivec_vcmpgtuw
V4iV4UiV4Ui
__builtin_altivec_vcmpgtsd
__builtin_altivec_vcmpgtud
V2LLiV2ULLiV2ULLi
__builtin_altivec_vcmpgtfp
__builtin_altivec_vcmpequq
V1LLLiV1ULLLiV1ULLLi
__builtin_altivec_vcmpgtsq
V1LLLiV1SLLLiV1SLLLi
__builtin_altivec_vcmpgtuq
__builtin_altivec_vcmpequq_p
iiV1ULLLiV1LLLi
__builtin_altivec_vcmpgtsq_p
iiV1SLLLiV1SLLLi
__builtin_altivec_vcmpgtuq_p
iiV1ULLLiV1ULLLi
__builtin_altivec_vmaxsb
__builtin_altivec_vmaxub
__builtin_altivec_vmaxsh
__builtin_altivec_vmaxuh
__builtin_altivec_vmaxsw
__builtin_altivec_vmaxuw
__builtin_altivec_vmaxsd
__builtin_altivec_vmaxud
__builtin_altivec_vmaxfp
__builtin_altivec_mfvscr
V8Us
__builtin_altivec_vminsb
__builtin_altivec_vminub
__builtin_altivec_vminsh
__builtin_altivec_vminuh
__builtin_altivec_vminsw
__builtin_altivec_vminuw
__builtin_altivec_vminsd
__builtin_altivec_vminud
__builtin_altivec_vminfp
__builtin_altivec_mtvscr
vV4i
__builtin_altivec_vrefp
__builtin_altivec_vrlb
V16cV16cV16Uc
__builtin_altivec_vrlh
V8sV8sV8Us
__builtin_altivec_vrlw
V4iV4iV4Ui
__builtin_altivec_vrld
V2LLiV2LLiV2ULLi
__builtin_altivec_vsel_4si
V4iV4iV4iV4Ui
__builtin_altivec_vsl
__builtin_altivec_vslo
__builtin_altivec_vsrab
__builtin_altivec_vsrah
__builtin_altivec_vsraw
__builtin_altivec_vsr
__builtin_altivec_vsro
__builtin_altivec_vrfin
__builtin_altivec_vrsqrtefp
__builtin_altivec_vsubcuw
__builtin_altivec_vsum4sbs
V4SiV16ScV4Si
__builtin_altivec_vsum4ubs
V4UiV16UcV4Ui
__builtin_altivec_vsum4shs
V4SiV8SsV4Si
__builtin_altivec_vsum2sws
__builtin_altivec_vsumsws
__builtin_altivec_vrfiz
__builtin_altivec_vupkhsb
V8sV16c
__builtin_altivec_vupkhpx
V4UiV8s
__builtin_altivec_vupkhsh
V4iV8s
__builtin_altivec_vupkhsw
V2LLiV4i
__builtin_altivec_vupklsb
__builtin_altivec_vupklpx
__builtin_altivec_vupklsh
__builtin_altivec_vupklsw
__builtin_altivec_vcmpbfp_p
iiV4fV4f
__builtin_altivec_vcmpgefp_p
__builtin_altivec_vcmpequb_p
iiV16cV16c
__builtin_altivec_vcmpequh_p
iiV8sV8s
__builtin_altivec_vcmpequw_p
iiV4iV4i
__builtin_altivec_vcmpequd_p
iiV2LLiV2LLi
__builtin_altivec_vcmpeqfp_p
__builtin_altivec_vcmpneb_p
__builtin_altivec_vcmpneh_p
__builtin_altivec_vcmpnew_p
__builtin_altivec_vcmpned_p
__builtin_altivec_vcmpgtsb_p
iiV16ScV16Sc
__builtin_altivec_vcmpgtub_p
iiV16UcV16Uc
__builtin_altivec_vcmpgtsh_p
iiV8SsV8Ss
__builtin_altivec_vcmpgtuh_p
iiV8UsV8Us
__builtin_altivec_vcmpgtsw_p
iiV4SiV4Si
__builtin_altivec_vcmpgtuw_p
iiV4UiV4Ui
__builtin_altivec_vcmpgtsd_p
__builtin_altivec_vcmpgtud_p
iiV2ULLiV2ULLi
__builtin_altivec_vcmpgtfp_p
__builtin_altivec_vgbbd
V16UcV16Uc
__builtin_altivec_vbpermq
V2ULLiV16UcV16Uc
__builtin_altivec_crypto_vsbox
V2ULLiV2ULLi
__builtin_altivec_crypto_vpermxor
__builtin_altivec_crypto_vshasigmaw
V4UiV4UiIiIi
__builtin_altivec_crypto_vshasigmad
V2ULLiV2ULLiIiIi
__builtin_altivec_crypto_vcipher
__builtin_altivec_crypto_vcipherlast
__builtin_altivec_crypto_vncipher
__builtin_altivec_crypto_vncipherlast
__builtin_altivec_crypto_vpmsumb
__builtin_altivec_crypto_vpmsumh
__builtin_altivec_crypto_vpmsumw
__builtin_altivec_crypto_vpmsumd
__builtin_altivec_vclzb
__builtin_altivec_vclzh
V8UsV8Us
__builtin_altivec_vclzw
V4UiV4Ui
__builtin_altivec_vclzd
__builtin_altivec_vctzb
__builtin_altivec_vctzh
__builtin_altivec_vctzw
__builtin_altivec_vctzd
__builtin_altivec_vclzlsbb
SiV16Uc
__builtin_altivec_vctzlsbb
__builtin_altivec_vprtybw
__builtin_altivec_vprtybd
__builtin_altivec_vprtybq
V1ULLLiV1ULLLi
__builtin_altivec_vpopcntb
__builtin_altivec_vpopcnth
__builtin_altivec_vpopcntw
__builtin_altivec_vpopcntd
__builtin_altivec_vabsdub
__builtin_altivec_vabsduh
__builtin_altivec_vabsduw
__builtin_altivec_vslv
__builtin_altivec_vsrv
__builtin_altivec_vrlwmi
__builtin_altivec_vrldmi
__builtin_altivec_vrlwnm
__builtin_altivec_vrldnm
__builtin_altivec_vextsb2w
V4SiV16Sc
__builtin_altivec_vextsb2d
V2SLLiV16Sc
__builtin_altivec_vextsh2w
V4SiV8Ss
__builtin_altivec_vextsh2d
V2SLLiV8Ss
__builtin_altivec_vextsw2d
V2SLLiV4Si
__builtin_altivec_vextsd2q
V1SLLLiV2SLLi
__builtin_altivec_vextractbm
UiV16Uc
__builtin_altivec_vextracthm
__builtin_altivec_vextractwm
__builtin_altivec_vextractdm
UiV2ULLi
__builtin_altivec_vextractqm
UiV1ULLLi
__builtin_altivec_vdivesw
__builtin_altivec_vdiveuw
__builtin_altivec_vdivesd
__builtin_altivec_vdiveud
__builtin_altivec_vdivesq
V1SLLLiV1SLLLiV1SLLLi
__builtin_altivec_vdiveuq
__builtin_altivec_vmulhsw
__builtin_altivec_vmulhuw
__builtin_altivec_vmulhsd
__builtin_altivec_vmulhud
__builtin_altivec_vexpandbm
__builtin_altivec_vexpandhm
__builtin_altivec_vexpandwm
__builtin_altivec_vexpanddm
__builtin_altivec_vexpandqm
__builtin_altivec_vcntmbb
ULLiV16UcUi
__builtin_altivec_vcntmbh
ULLiV8UsUi
__builtin_altivec_vcntmbw
ULLiV4UiUi
__builtin_altivec_vcntmbd
ULLiV2ULLiUi
__builtin_altivec_mtvsrbm
V16UcULLi
__builtin_altivec_mtvsrhm
V8UsULLi
__builtin_altivec_mtvsrwm
V4UiULLi
__builtin_altivec_mtvsrdm
V2ULLiULLi
__builtin_altivec_mtvsrqm
V1ULLLiULLi
__builtin_altivec_vpdepd
__builtin_altivec_vpextd
__builtin_altivec_vstribr
V16cV16c
__builtin_altivec_vstribl
__builtin_altivec_vstrihr
V8sV8s
__builtin_altivec_vstrihl
__builtin_altivec_vstribr_p
iiV16c
__builtin_altivec_vstribl_p
__builtin_altivec_vstrihr_p
iiV8s
__builtin_altivec_vstrihl_p
__builtin_altivec_vcfuged
__builtin_altivec_vgnb
ULLiV1ULLLiIi
__builtin_altivec_vclrlb
__builtin_altivec_vclrrb
__builtin_altivec_vclzdm
__builtin_altivec_vctzdm
__builtin_altivec_vsldbi
V16UcV16UcV16UcIi
__builtin_altivec_vsrdbi
__builtin_altivec_vinsblx
V16UcV16UcUiUi
__builtin_altivec_vinsbrx
__builtin_altivec_vinshlx
V8UsV8UsUiUi
__builtin_altivec_vinshrx
__builtin_altivec_vinswlx
V4UiV4UiUiUi
__builtin_altivec_vinswrx
__builtin_altivec_vinsdlx
V2ULLiV2ULLiULLiULLi
__builtin_altivec_vinsdrx
__builtin_altivec_vinsbvlx
V16UcV16UcUiV16Uc
__builtin_altivec_vinsbvrx
__builtin_altivec_vinshvlx
V8UsV8UsUiV8Us
__builtin_altivec_vinshvrx
__builtin_altivec_vinswvlx
V4UiV4UiUiV4Ui
__builtin_altivec_vinswvrx
__builtin_altivec_vec_replace_elt
V4UiV4UiUiIi
__builtin_altivec_vec_replace_unaligned
__builtin_altivec_vextdubvlx
V2ULLiV16UcV16UcUi
__builtin_altivec_vextdubvrx
__builtin_altivec_vextduhvlx
V2ULLiV8UsV8UsUi
__builtin_altivec_vextduhvrx
__builtin_altivec_vextduwvlx
V2ULLiV4UiV4UiUi
__builtin_altivec_vextduwvrx
__builtin_altivec_vextddvlx
V2ULLiV2ULLiV2ULLiUi
__builtin_altivec_vextddvrx
__builtin_altivec_vrlqmi
__builtin_altivec_vrlqnm
__builtin_vsx_lxvd2x
V2divC*
__builtin_vsx_lxvw4x
__builtin_vsx_lxvd2x_be
V2dSLLivC*
__builtin_vsx_lxvw4x_be
V4iSLLivC*
__builtin_vsx_stxvd2x
vV2div*
__builtin_vsx_stxvw4x
__builtin_vsx_stxvd2x_be
vV2dSLLivC*
__builtin_vsx_stxvw4x_be
vV4iSLLivC*
__builtin_vsx_lxvl
V4ivC*ULLi
__builtin_vsx_lxvll
__builtin_vsx_stxvl
vV4iv*ULLi
__builtin_vsx_stxvll
__builtin_vsx_xvmaxdp
__builtin_vsx_xvmaxsp
__builtin_vsx_xsmaxdp
__builtin_vsx_xvmindp
__builtin_vsx_xvminsp
__builtin_vsx_xsmindp
__builtin_vsx_xvdivdp
__builtin_vsx_xvdivsp
__builtin_vsx_xvrdpip
__builtin_vsx_xvrspip
__builtin_vsx_xvcmpeqdp
__builtin_vsx_xvcmpeqsp
__builtin_vsx_xvcmpeqdp_p
iiV2dV2d
__builtin_vsx_xvcmpeqsp_p
__builtin_vsx_xvcmpgedp
__builtin_vsx_xvcmpgesp
__builtin_vsx_xvcmpgedp_p
__builtin_vsx_xvcmpgesp_p
__builtin_vsx_xvcmpgtdp
__builtin_vsx_xvcmpgtsp
__builtin_vsx_xvcmpgtdp_p
__builtin_vsx_xvcmpgtsp_p
__builtin_vsx_xvrdpim
__builtin_vsx_xvrspim
__builtin_vsx_xvrdpi
__builtin_vsx_xvrspi
__builtin_vsx_xvrdpic
__builtin_vsx_xvrspic
__builtin_vsx_xvrdpiz
__builtin_vsx_xvrspiz
__builtin_vsx_xvmaddadp
__builtin_vsx_xvmaddasp
__builtin_vsx_xvmsubadp
__builtin_vsx_xvmsubasp
__builtin_vsx_xvmuldp
__builtin_vsx_xvmulsp
__builtin_vsx_xvnmaddadp
__builtin_vsx_xvnmaddasp
__builtin_vsx_xvnmsubadp
__builtin_vsx_xvnmsubasp
__builtin_vsx_xvredp
__builtin_vsx_xvresp
__builtin_vsx_xvrsqrtedp
__builtin_vsx_xvrsqrtesp
__builtin_vsx_xvsqrtdp
__builtin_vsx_xvsqrtsp
__builtin_vsx_xxleqv
__builtin_vsx_xvcpsgndp
__builtin_vsx_xvcpsgnsp
__builtin_vsx_xvabssp
__builtin_vsx_xvabsdp
__builtin_vsx_xxgenpcvbm
V16UcV16Uci
__builtin_vsx_xxgenpcvhm
V8UsV8Usi
__builtin_vsx_xxgenpcvwm
V4UiV4Uii
__builtin_vsx_xxgenpcvdm
V2ULLiV2ULLii
__builtin_vsx_xviexpdp
V2dV2ULLiV2ULLi
__builtin_vsx_xviexpsp
V4fV4UiV4Ui
__builtin_vsx_xvxexpdp
__builtin_vsx_xvxexpsp
__builtin_vsx_xvxsigdp
__builtin_vsx_xvxsigsp
__builtin_vsx_xvcvdpsxws
V4SiV2d
__builtin_vsx_xvcvdpuxws
V4UiV2d
__builtin_vsx_xvcvsxwdp
__builtin_vsx_xvcvuxwdp
V2dV4Ui
__builtin_vsx_xvcvspdp
__builtin_vsx_xvcvsxdsp
V4fV2SLLi
__builtin_vsx_xvcvuxdsp
V4fV2ULLi
__builtin_vsx_xvcvdpsp
V4fV2d
__builtin_vsx_xvcvsphp
__builtin_vsx_xvcvhpsp
V4fV8Us
__builtin_vsx_xvcvspbf16
__builtin_vsx_xvcvbf16spn
__builtin_vsx_xvtstdcdp
V2ULLiV2dIi
__builtin_vsx_xvtstdcsp
__builtin_vsx_insertword
V16UcV4UiV16UcIi
__builtin_vsx_extractuword
V2ULLiV16UcIi
__builtin_vsx_xxpermdi
__builtin_vsx_xxsldwi
__builtin_vsx_xxeval
V2ULLiV2ULLiV2ULLiV2ULLiIi
__builtin_vsx_xvtlsbb
iV16UcUi
__builtin_vsx_xvtdivdp
iV2dV2d
__builtin_vsx_xvtdivsp
iV4fV4f
__builtin_vsx_xvtsqrtdp
iV2d
__builtin_vsx_xvtsqrtsp
iV4f
__builtin_vsx_xxpermx
V16UcV16UcV16UcV16UcIi
__builtin_vsx_xxblendvb
__builtin_vsx_xxblendvh
__builtin_vsx_xxblendvw
__builtin_vsx_xxblendvd
__builtin_sqrtf128_round_to_odd
LLdLLd
__builtin_addf128_round_to_odd
LLdLLdLLd
__builtin_subf128_round_to_odd
__builtin_mulf128_round_to_odd
__builtin_divf128_round_to_odd
__builtin_fmaf128_round_to_odd
LLdLLdLLdLLd
__builtin_truncf128_round_to_odd
dLLd
__builtin_vsx_scalar_extract_expq
ULLiLLd
__builtin_vsx_scalar_insert_exp_qp
LLdLLdULLi
__builtin_tbegin
UiUIi
__builtin_tend
__builtin_tabort
__builtin_tabortdc
__builtin_tabortdci
__builtin_tabortwc
__builtin_tabortwci
__builtin_tcheck
__builtin_treclaim
__builtin_trechkpt
__builtin_tsr
__builtin_tendall
__builtin_tresume
__builtin_tsuspend
__builtin_get_texasr
__builtin_get_texasru
__builtin_get_tfhar
__builtin_get_tfiar
__builtin_set_texasr
vLUi
__builtin_set_texasru
__builtin_set_tfhar
__builtin_set_tfiar
__builtin_ttest
__builtin_divwe
SiSiSi
__builtin_divweu
__builtin_divde
SLLiSLLiSLLi
__builtin_divdeu
__builtin_bpermd
__builtin_pdepd
__builtin_pextd
__builtin_cfuged
__builtin_cntlzdm
__builtin_cnttzdm
__builtin_darn
__builtin_darn_raw
__builtin_darn_32
__builtin_unpack_vector_int128
ULLiV1LLLii
__builtin_pack_vector_int128
V1LLLiULLiULLi
__builtin_setrnd
__builtin_readflm
__builtin_setflm
__builtin_dcbf
vvC*
__builtin_vsx_lxvp
__builtin_vsx_stxvp
__builtin_vsx_assemble_pair
__builtin_vsx_disassemble_pair
__builtin_mma_assemble_acc
__builtin_mma_disassemble_acc
__builtin_mma_xxmtacc
__builtin_mma_xxmfacc
__builtin_mma_xxsetaccz
__builtin_mma_xvi4ger8
__builtin_mma_xvi8ger4
__builtin_mma_xvi16ger2
__builtin_mma_xvi16ger2s
__builtin_mma_xvf16ger2
__builtin_mma_xvf32ger
__builtin_mma_xvf64ger
__builtin_mma_pmxvi4ger8
__builtin_mma_pmxvi8ger4
__builtin_mma_pmxvi16ger2
__builtin_mma_pmxvi16ger2s
__builtin_mma_pmxvf16ger2
__builtin_mma_pmxvf32ger
__builtin_mma_pmxvf64ger
__builtin_mma_xvi4ger8pp
__builtin_mma_xvi8ger4pp
__builtin_mma_xvi8ger4spp
__builtin_mma_xvi16ger2pp
__builtin_mma_xvi16ger2spp
__builtin_mma_pmxvi4ger8pp
__builtin_mma_pmxvi8ger4pp
__builtin_mma_pmxvi8ger4spp
__builtin_mma_pmxvi16ger2pp
__builtin_mma_pmxvi16ger2spp
__builtin_mma_xvf16ger2pp
__builtin_mma_xvf16ger2pn
__builtin_mma_xvf16ger2np
__builtin_mma_xvf16ger2nn
__builtin_mma_pmxvf16ger2pp
__builtin_mma_pmxvf16ger2pn
__builtin_mma_pmxvf16ger2np
__builtin_mma_pmxvf16ger2nn
__builtin_mma_xvf32gerpp
__builtin_mma_xvf32gerpn
__builtin_mma_xvf32gernp
__builtin_mma_xvf32gernn
__builtin_mma_pmxvf32gerpp
__builtin_mma_pmxvf32gerpn
__builtin_mma_pmxvf32gernp
__builtin_mma_pmxvf32gernn
__builtin_mma_xvf64gerpp
__builtin_mma_xvf64gerpn
__builtin_mma_xvf64gernp
__builtin_mma_xvf64gernn
__builtin_mma_pmxvf64gerpp
__builtin_mma_pmxvf64gerpn
__builtin_mma_pmxvf64gernp
__builtin_mma_pmxvf64gernn
__builtin_mma_xvbf16ger2
__builtin_mma_pmxvbf16ger2
__builtin_mma_xvbf16ger2pp
__builtin_mma_xvbf16ger2pn
__builtin_mma_xvbf16ger2np
__builtin_mma_xvbf16ger2nn
__builtin_mma_pmxvbf16ger2pp
__builtin_mma_pmxvbf16ger2pn
__builtin_mma_pmxvbf16ger2np
__builtin_mma_pmxvbf16ger2nn
+altivec
+vsx
+bpermd
+extdiv
+power8-vector
+direct-move
+htm
+float128
+power9-vector
+power10-vector
+pcrelative-memops
+paired-vector-memops
+mma
__ppc__
_ARCH_PPC
__powerpc__
__POWERPC__
__ppc64__
__PPC64__
_LITTLE_ENDIAN
_BIG_ENDIAN
_CALL_ELF
_CALL_LINUX
__NATURAL_ALIGNMENT__
__LONG_DOUBLE_128__
__LONGDOUBLE128
__LONG_DOUBLE_IEEE128__
__LONG_DOUBLE_IBM128__
__STRUCT_PARM_ALIGN__
_ARCH_
_ARCH_PPCGR
_ARCH_PPCSQ
_ARCH_440
_ARCH_603
_ARCH_604
_ARCH_PWR4
_ARCH_PWR5
_ARCH_PWR5X
_ARCH_PWR6
_ARCH_PWR6X
_ARCH_PWR7
_ARCH_PWR8
_ARCH_PWR9
_ARCH_PWR10
_ARCH_A2
__NO_LWSYNC__
_ARCH_PWR_FUTURE
__VEC__
10206
__ALTIVEC__
__SPE__
__NO_FPRS__
__VSX__
__POWER8_VECTOR__
__CRYPTO__
__HTM__
__POWER9_VECTOR__
__MMA__
__POWER10_VECTOR__
__HAVE_BSWAP__
power9-vector
direct-move
float128
-mfloat128
-mmma
pcrelative-memops
pcrel
vrsave
spe_acc
spefscr
fr10
fr11
fr12
fr13
fr14
fr15
fr16
fr17
fr18
fr19
fr20
fr21
fr22
fr23
fr24
fr25
fr26
fr27
fr28
fr29
fr30
fr31
-vsx
-mpower8-vector
-mdirect-move
-mpower9-vector
-mpaired-vector-memops
-mpower10-vector
-mno-vsx
vs10
vs11
vs12
vs13
vs14
vs15
vs16
vs17
vs18
vs19
vs20
vs21
vs22
vs23
vs24
vs25
vs26
vs27
vs28
vs29
vs30
vs31
vs32
vs33
vs34
vs35
vs36
vs37
vs38
vs39
vs40
vs41
vs42
vs43
vs44
vs45
vs46
vs47
vs48
vs49
vs50
vs51
vs52
vs53
vs54
vs55
vs56
vs57
vs58
vs59
vs60
vs61
vs62
vs63
fs10
fs11
ft10
ft11
__riscv
__riscv_xlen
__riscv_cmodel_medlow
__riscv_cmodel_medany
__riscv_float_abi_single
__riscv_float_abi_double
__riscv_float_abi_soft
__riscv_abi_rve
__riscv_mul
__riscv_div
__riscv_muldiv
__riscv_atomic
__riscv_flen
__riscv_fdiv
__riscv_fsqrt
__riscv_compressed
__riscv_bitmanip
__riscv_vector
__riscv_zfh
+experimental-zfh
SPIR
SPIR32
SPIR64
sparc
SOFT_FLOAT
__sparcv8
__sparcv8__
__sparcv9
__sparcv9__
__sparc_v9__
__sparc_v8__
__leon__
__ma2100
__ma2150
__ma2155
__ma2450
__ma2455
__ma2080
__ma2085
__ma2480
__ma2485
__ma2x5x
__ma2x5x__
__ma2x8x
__ma2x8x__
__myriad2__
__myriad2
__arch64__
__sparc64__
supersparc
sparclite
f934
hypersparc
sparclite86x
sparclet
tsc701
ultrasparc
ultrasparc3
niagara
niagara2
niagara3
niagara4
ma2100
ma2150
ma2155
ma2450
ma2455
ma2x5x
ma2080
ma2085
ma2480
ma2485
ma2x8x
myriad2
myriad2.1
myriad2.2
myriad2.3
leon2
at697e
at697f
leon3
ut699
gr712rc
leon4
gr740
__builtin_tbegin_nofloat
__builtin_tbeginc
__builtin_tx_nesting_depth
__builtin_tx_assist
__builtin_non_tx_store
vULi*ULi
__builtin_s390_lcbb
UivC*Ii
__builtin_s390_vlbb
V16ScvC*Ii
__builtin_s390_vll
V16ScUivC*
__builtin_s390_vstl
vV16ScUiv*
__builtin_s390_vperm
__builtin_s390_vpdi
V2ULLiV2ULLiV2ULLiIi
__builtin_s390_vpksh
__builtin_s390_vpkshs
V16ScV8SsV8Ssi*
__builtin_s390_vpksf
__builtin_s390_vpksfs
V8SsV4SiV4Sii*
__builtin_s390_vpksg
__builtin_s390_vpksgs
V4SiV2SLLiV2SLLii*
__builtin_s390_vpklsh
__builtin_s390_vpklshs
V16UcV8UsV8Usi*
__builtin_s390_vpklsf
__builtin_s390_vpklsfs
V8UsV4UiV4Uii*
__builtin_s390_vpklsg
__builtin_s390_vpklsgs
V4UiV2ULLiV2ULLii*
__builtin_s390_vuphb
V8SsV16Sc
__builtin_s390_vuphh
__builtin_s390_vuphf
__builtin_s390_vuplb
__builtin_s390_vuplhw
__builtin_s390_vuplf
__builtin_s390_vuplhb
V8UsV16Uc
__builtin_s390_vuplhh
V4UiV8Us
__builtin_s390_vuplhf
V2ULLiV4Ui
__builtin_s390_vupllb
__builtin_s390_vupllh
__builtin_s390_vupllf
__builtin_s390_vaq
__builtin_s390_vacq
__builtin_s390_vaccb
__builtin_s390_vacch
__builtin_s390_vaccf
__builtin_s390_vaccg
__builtin_s390_vaccq
__builtin_s390_vacccq
__builtin_s390_vavgb
__builtin_s390_vavgh
__builtin_s390_vavgf
__builtin_s390_vavgg
__builtin_s390_vavglb
__builtin_s390_vavglh
__builtin_s390_vavglf
__builtin_s390_vavglg
__builtin_s390_vceqbs
V16ScV16ScV16Sci*
__builtin_s390_vceqhs
V8SsV8SsV8Ssi*
__builtin_s390_vceqfs
V4SiV4SiV4Sii*
__builtin_s390_vceqgs
V2SLLiV2SLLiV2SLLii*
__builtin_s390_vchbs
__builtin_s390_vchhs
__builtin_s390_vchfs
__builtin_s390_vchgs
__builtin_s390_vchlbs
V16ScV16UcV16Uci*
__builtin_s390_vchlhs
V8SsV8UsV8Usi*
__builtin_s390_vchlfs
V4SiV4UiV4Uii*
__builtin_s390_vchlgs
V2SLLiV2ULLiV2ULLii*
__builtin_s390_vcksm
__builtin_s390_vclzb
__builtin_s390_vclzh
__builtin_s390_vclzf
__builtin_s390_vclzg
__builtin_s390_vctzb
__builtin_s390_vctzh
__builtin_s390_vctzf
__builtin_s390_vctzg
__builtin_s390_verimb
__builtin_s390_verimh
V8UsV8UsV8UsV8UsIi
__builtin_s390_verimf
V4UiV4UiV4UiV4UiIi
__builtin_s390_verimg
__builtin_s390_verllb
V16UcV16UcUi
__builtin_s390_verllh
V8UsV8UsUi
__builtin_s390_verllf
V4UiV4UiUi
__builtin_s390_verllg
V2ULLiV2ULLiUi
__builtin_s390_verllvb
__builtin_s390_verllvh
__builtin_s390_verllvf
__builtin_s390_verllvg
__builtin_s390_vgfmb
__builtin_s390_vgfmh
__builtin_s390_vgfmf
__builtin_s390_vgfmg
V16UcV2ULLiV2ULLi
__builtin_s390_vgfmab
V8UsV16UcV16UcV8Us
__builtin_s390_vgfmah
__builtin_s390_vgfmaf
V2ULLiV4UiV4UiV2ULLi
__builtin_s390_vgfmag
V16UcV2ULLiV2ULLiV16Uc
__builtin_s390_vmahb
__builtin_s390_vmahh
__builtin_s390_vmahf
__builtin_s390_vmalhb
__builtin_s390_vmalhh
__builtin_s390_vmalhf
__builtin_s390_vmaeb
V8SsV16ScV16ScV8Ss
__builtin_s390_vmaeh
__builtin_s390_vmaef
V2SLLiV4SiV4SiV2SLLi
__builtin_s390_vmaleb
__builtin_s390_vmaleh
__builtin_s390_vmalef
__builtin_s390_vmaob
__builtin_s390_vmaoh
__builtin_s390_vmaof
__builtin_s390_vmalob
__builtin_s390_vmaloh
__builtin_s390_vmalof
__builtin_s390_vmhb
__builtin_s390_vmhh
__builtin_s390_vmhf
__builtin_s390_vmlhb
__builtin_s390_vmlhh
__builtin_s390_vmlhf
__builtin_s390_vmeb
__builtin_s390_vmeh
__builtin_s390_vmef
__builtin_s390_vmleb
__builtin_s390_vmleh
__builtin_s390_vmlef
__builtin_s390_vmob
__builtin_s390_vmoh
__builtin_s390_vmof
__builtin_s390_vmlob
__builtin_s390_vmloh
__builtin_s390_vmlof
__builtin_s390_vpopctb
__builtin_s390_vpopcth
__builtin_s390_vpopctf
__builtin_s390_vpopctg
__builtin_s390_vsq
__builtin_s390_vsbcbiq
__builtin_s390_vsbiq
__builtin_s390_vscbib
__builtin_s390_vscbih
__builtin_s390_vscbif
__builtin_s390_vscbig
__builtin_s390_vscbiq
__builtin_s390_vsl
__builtin_s390_vslb
__builtin_s390_vsldb
__builtin_s390_vsra
__builtin_s390_vsrab
__builtin_s390_vsrl
__builtin_s390_vsrlb
__builtin_s390_vsumb
V4UiV16UcV16Uc
__builtin_s390_vsumh
__builtin_s390_vsumgh
V2ULLiV8UsV8Us
__builtin_s390_vsumgf
__builtin_s390_vsumqf
V16UcV4UiV4Ui
__builtin_s390_vsumqg
__builtin_s390_vtm
iV16UcV16Uc
__builtin_s390_vfaeb
__builtin_s390_vfaebs
V16UcV16UcV16UcIii*
__builtin_s390_vfaeh
V8UsV8UsV8UsIi
__builtin_s390_vfaehs
V8UsV8UsV8UsIii*
__builtin_s390_vfaef
V4UiV4UiV4UiIi
__builtin_s390_vfaefs
V4UiV4UiV4UiIii*
__builtin_s390_vfaezb
__builtin_s390_vfaezbs
__builtin_s390_vfaezh
__builtin_s390_vfaezhs
__builtin_s390_vfaezf
__builtin_s390_vfaezfs
__builtin_s390_vfeeb
__builtin_s390_vfeebs
V16UcV16UcV16Uci*
__builtin_s390_vfeeh
__builtin_s390_vfeehs
V8UsV8UsV8Usi*
__builtin_s390_vfeef
__builtin_s390_vfeefs
V4UiV4UiV4Uii*
__builtin_s390_vfeezb
__builtin_s390_vfeezbs
__builtin_s390_vfeezh
__builtin_s390_vfeezhs
__builtin_s390_vfeezf
__builtin_s390_vfeezfs
__builtin_s390_vfeneb
__builtin_s390_vfenebs
__builtin_s390_vfeneh
__builtin_s390_vfenehs
__builtin_s390_vfenef
__builtin_s390_vfenefs
__builtin_s390_vfenezb
__builtin_s390_vfenezbs
__builtin_s390_vfenezh
__builtin_s390_vfenezhs
__builtin_s390_vfenezf
__builtin_s390_vfenezfs
__builtin_s390_vistrb
__builtin_s390_vistrbs
V16UcV16Uci*
__builtin_s390_vistrh
__builtin_s390_vistrhs
V8UsV8Usi*
__builtin_s390_vistrf
__builtin_s390_vistrfs
V4UiV4Uii*
__builtin_s390_vstrcb
__builtin_s390_vstrcbs
V16UcV16UcV16UcV16UcIii*
__builtin_s390_vstrch
__builtin_s390_vstrchs
V8UsV8UsV8UsV8UsIii*
__builtin_s390_vstrcf
__builtin_s390_vstrcfs
V4UiV4UiV4UiV4UiIii*
__builtin_s390_vstrczb
__builtin_s390_vstrczbs
__builtin_s390_vstrczh
__builtin_s390_vstrczhs
__builtin_s390_vstrczf
__builtin_s390_vstrczfs
__builtin_s390_vfcedbs
V2SLLiV2dV2di*
__builtin_s390_vfchdbs
__builtin_s390_vfchedbs
__builtin_s390_vfidb
V2dV2dIiIi
__builtin_s390_vflndb
__builtin_s390_vflpdb
__builtin_s390_vfmadb
__builtin_s390_vfmsdb
__builtin_s390_vfsqdb
__builtin_s390_vftcidb
V2SLLiV2dIii*
__builtin_s390_vlrl
__builtin_s390_vstrl
__builtin_s390_vbperm
__builtin_s390_vmslg
V16UcV2ULLiV2ULLiV16UcIi
__builtin_s390_vfmaxdb
V2dV2dV2dIi
__builtin_s390_vfmindb
__builtin_s390_vfnmadb
__builtin_s390_vfnmsdb
__builtin_s390_vfcesbs
V4SiV4fV4fi*
__builtin_s390_vfchsbs
__builtin_s390_vfchesbs
__builtin_s390_vfisb
V4fV4fIiIi
__builtin_s390_vfmaxsb
V4fV4fV4fIi
__builtin_s390_vfminsb
__builtin_s390_vflnsb
__builtin_s390_vflpsb
__builtin_s390_vfmasb
__builtin_s390_vfmssb
__builtin_s390_vfnmasb
__builtin_s390_vfnmssb
__builtin_s390_vfsqsb
__builtin_s390_vftcisb
V4SiV4fIii*
__builtin_s390_vsld
__builtin_s390_vsrd
__builtin_s390_vstrsb
V16UcV16UcV16UcV16Uci*
__builtin_s390_vstrsh
V16UcV8UsV8UsV16Uci*
__builtin_s390_vstrsf
V16UcV4UiV4UiV16Uci*
__builtin_s390_vstrszb
__builtin_s390_vstrszh
__builtin_s390_vstrszf
__builtin_s390_vlbrh
__builtin_s390_vlbrf
__builtin_s390_vlbrg
arch8
arch9
arch10
arch11
arch12
arch13
__s390__
__s390x__
__zarch__
__ARCH__
__VX__
10303
z196
zEC12
__TCE__
__TCE_V1__
tcele
__TCELE__
__TCELE_V1__
__linux__
__ve
__ve__
__NEC__
__builtin_wasm_memory_size
__builtin_wasm_memory_grow
zIiz
__builtin_wasm_tls_size
bulk-memory
__builtin_wasm_tls_align
__builtin_wasm_tls_base
__builtin_wasm_min_f32
__builtin_wasm_max_f32
__builtin_wasm_min_f64
__builtin_wasm_max_f64
__builtin_wasm_throw
vIUiv*
__builtin_wasm_rethrow_in_catch
__builtin_wasm_memory_atomic_wait32
ii*iLLi
atomics
__builtin_wasm_memory_atomic_wait64
iLLi*LLiLLi
__builtin_wasm_memory_atomic_notify
Uii*Ui
__builtin_wasm_trunc_s_i32_f32
__builtin_wasm_trunc_u_i32_f32
__builtin_wasm_trunc_s_i32_f64
__builtin_wasm_trunc_u_i32_f64
__builtin_wasm_trunc_s_i64_f32
__builtin_wasm_trunc_u_i64_f32
__builtin_wasm_trunc_s_i64_f64
__builtin_wasm_trunc_u_i64_f64
__builtin_wasm_trunc_saturate_s_i32_f32
nontrapping-fptoint
__builtin_wasm_trunc_saturate_u_i32_f32
__builtin_wasm_trunc_saturate_s_i32_f64
__builtin_wasm_trunc_saturate_u_i32_f64
__builtin_wasm_trunc_saturate_s_i64_f32
__builtin_wasm_trunc_saturate_u_i64_f32
__builtin_wasm_trunc_saturate_s_i64_f64
__builtin_wasm_trunc_saturate_u_i64_f64
__builtin_wasm_swizzle_v8x16
simd128
__builtin_wasm_extract_lane_s_i8x16
iV16ScIi
__builtin_wasm_extract_lane_u_i8x16
__builtin_wasm_extract_lane_s_i16x8
iV8sIi
__builtin_wasm_extract_lane_u_i16x8
__builtin_wasm_extract_lane_i32x4
iV4iIi
__builtin_wasm_extract_lane_i64x2
LLiV2LLiIi
__builtin_wasm_extract_lane_f32x4
__builtin_wasm_extract_lane_f64x2
__builtin_wasm_replace_lane_i8x16
__builtin_wasm_replace_lane_i16x8
V8sV8sIii
__builtin_wasm_replace_lane_i32x4
V4iV4iIii
__builtin_wasm_replace_lane_i64x2
V2LLiV2LLiIiLLi
__builtin_wasm_replace_lane_f32x4
V4fV4fIif
__builtin_wasm_replace_lane_f64x2
V2dV2dIid
__builtin_wasm_add_saturate_s_i8x16
__builtin_wasm_add_saturate_u_i8x16
__builtin_wasm_add_saturate_s_i16x8
__builtin_wasm_add_saturate_u_i16x8
__builtin_wasm_sub_saturate_s_i8x16
__builtin_wasm_sub_saturate_u_i8x16
__builtin_wasm_sub_saturate_s_i16x8
__builtin_wasm_sub_saturate_u_i16x8
__builtin_wasm_abs_i8x16
__builtin_wasm_abs_i16x8
__builtin_wasm_abs_i32x4
V4iV4i
__builtin_wasm_min_s_i8x16
__builtin_wasm_min_u_i8x16
__builtin_wasm_max_s_i8x16
__builtin_wasm_max_u_i8x16
__builtin_wasm_min_s_i16x8
__builtin_wasm_min_u_i16x8
__builtin_wasm_max_s_i16x8
__builtin_wasm_max_u_i16x8
__builtin_wasm_min_s_i32x4
__builtin_wasm_min_u_i32x4
__builtin_wasm_max_s_i32x4
__builtin_wasm_max_u_i32x4
__builtin_wasm_avgr_u_i8x16
__builtin_wasm_avgr_u_i16x8
__builtin_wasm_popcnt_i8x16
__builtin_wasm_q15mulr_saturate_s_i16x8
__builtin_wasm_extmul_low_i8x16_s_i16x8
V8sV16ScV16Sc
__builtin_wasm_extmul_high_i8x16_s_i16x8
__builtin_wasm_extmul_low_i8x16_u_i16x8
__builtin_wasm_extmul_high_i8x16_u_i16x8
__builtin_wasm_extmul_low_i16x8_s_i32x4
V4iV8sV8s
__builtin_wasm_extmul_high_i16x8_s_i32x4
__builtin_wasm_extmul_low_i16x8_u_i32x4
__builtin_wasm_extmul_high_i16x8_u_i32x4
__builtin_wasm_extmul_low_i32x4_s_i64x2
V2LLiV4iV4i
__builtin_wasm_extmul_high_i32x4_s_i64x2
__builtin_wasm_extmul_low_i32x4_u_i64x2
__builtin_wasm_extmul_high_i32x4_u_i64x2
__builtin_wasm_extadd_pairwise_i8x16_s_i16x8
V8sV16Sc
__builtin_wasm_extadd_pairwise_i8x16_u_i16x8
__builtin_wasm_extadd_pairwise_i16x8_s_i32x4
__builtin_wasm_extadd_pairwise_i16x8_u_i32x4
__builtin_wasm_bitselect
__builtin_wasm_signselect_i8x16
__builtin_wasm_signselect_i16x8
__builtin_wasm_signselect_i32x4
__builtin_wasm_signselect_i64x2
__builtin_wasm_shuffle_v8x16
V16ScV16ScV16ScIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
__builtin_wasm_any_true_i8x16
iV16Sc
__builtin_wasm_any_true_i16x8
__builtin_wasm_any_true_i32x4
__builtin_wasm_any_true_i64x2
iV2LLi
unimplemented-simd128
__builtin_wasm_all_true_i8x16
__builtin_wasm_all_true_i16x8
__builtin_wasm_all_true_i32x4
__builtin_wasm_all_true_i64x2
__builtin_wasm_bitmask_i8x16
__builtin_wasm_bitmask_i16x8
__builtin_wasm_bitmask_i32x4
__builtin_wasm_bitmask_i64x2
__builtin_wasm_abs_f32x4
__builtin_wasm_abs_f64x2
__builtin_wasm_min_f32x4
__builtin_wasm_max_f32x4
__builtin_wasm_pmin_f32x4
__builtin_wasm_pmax_f32x4
__builtin_wasm_min_f64x2
__builtin_wasm_max_f64x2
__builtin_wasm_pmin_f64x2
__builtin_wasm_pmax_f64x2
__builtin_wasm_ceil_f32x4
__builtin_wasm_floor_f32x4
__builtin_wasm_trunc_f32x4
__builtin_wasm_nearest_f32x4
__builtin_wasm_ceil_f64x2
__builtin_wasm_floor_f64x2
__builtin_wasm_trunc_f64x2
__builtin_wasm_nearest_f64x2
__builtin_wasm_dot_s_i32x4_i16x8
__builtin_wasm_sqrt_f32x4
__builtin_wasm_sqrt_f64x2
__builtin_wasm_qfma_f32x4
__builtin_wasm_qfms_f32x4
__builtin_wasm_qfma_f64x2
__builtin_wasm_qfms_f64x2
__builtin_wasm_trunc_saturate_s_i32x4_f32x4
__builtin_wasm_trunc_saturate_u_i32x4_f32x4
__builtin_wasm_narrow_s_i8x16_i16x8
V16ScV8sV8s
__builtin_wasm_narrow_u_i8x16_i16x8
__builtin_wasm_narrow_s_i16x8_i32x4
V8sV4iV4i
__builtin_wasm_narrow_u_i16x8_i32x4
__builtin_wasm_widen_low_s_i32x4_i64x2
__builtin_wasm_widen_high_s_i32x4_i64x2
__builtin_wasm_widen_low_u_i32x4_i64x2
V2LLUiV4Ui
__builtin_wasm_widen_high_u_i32x4_i64x2
__builtin_wasm_load32_zero
V4ii*
__builtin_wasm_load64_zero
V2LLiLLi*
__builtin_wasm_load8_lane
V16ScSc*V16ScIi
__builtin_wasm_load16_lane
V8ss*V8sIi
__builtin_wasm_load32_lane
V4ii*V4iIi
__builtin_wasm_load64_lane
V2LLiLLi*V2LLiIi
__builtin_wasm_store8_lane
vSc*V16ScIi
__builtin_wasm_store16_lane
vs*V8sIi
__builtin_wasm_store32_lane
vi*V4iIi
__builtin_wasm_store64_lane
vLLi*V2LLiIi
__builtin_wasm_eq_i64x2
__builtin_wasm_prefetch_t
__builtin_wasm_prefetch_nt
sign-ext
mutable-globals
tail-call
__wasm_simd128__
__wasm_unimplemented_simd128__
__wasm_nontrapping_fptoint__
__wasm_sign_ext__
__wasm_exception_handling__
__wasm_bulk_memory__
__wasm_atomics__
__wasm_mutable_globals__
__wasm_multivalue__
__wasm_tail_call__
__wasm_reference_types__
bleeding-edge
+simd128
-simd128
+unimplemented-simd128
-unimplemented-simd128
+nontrapping-fptoint
-nontrapping-fptoint
-sign-ext
-exception-handling
-bulk-memory
-atomics
-mutable-globals
+multivalue
-multivalue
+tail-call
-tail-call
-reference-types
wasm32
wasm64
generic
-popcnt
-mmx
-xsave
+vaes
+pclmul
+vpclmulqdq
+lzcnt
+rdrnd
+fsgsbase
+bmi
+bmi2
+rtm
+prfchw
+rdseed
+adx
+tbm
+lwp
+fma
+f16c
+gfni
+avx512cd
+avx512vpopcntdq
+avx512vnni
+avx512bf16
+avx512er
+avx512pf
+avx512dq
+avx512bitalg
+avx512bw
+avx512vl
+avx512vbmi
+avx512vbmi2
+avx512ifma
+avx512vp2intersect
+sha
+shstk
+movbe
+sgx
+cx8
+fxsr
+xsave
+xsaveopt
+xsavec
+xsaves
+mwaitx
+pku
+clflushopt
+clwb
+wbnoinvd
+prefetchwt1
+clzero
+cldemote
+rdpid
+widekl
+retpoline-external-thunk
+sahf
+waitpkg
+movdiri
+movdir64b
+pconfig
+ptwrite
+invpcid
+enqcmd
+hreset
+amx-bf16
+amx-int8
+amx-tile
+avxvnni
+serialize
+tsxldtrk
+uintr
+mmx
__GCC_ASM_FLAG_OUTPUTS__
__code_model_
__amd64__
__amd64
__x86_64
__x86_64h
__x86_64h__
__SEG_GS
__SEG_FS
__seg_gs
__attribute__((address_space(256)))
__seg_fs
__attribute__((address_space(257)))
__pentium_mmx__
__tune_pentium_mmx__
__tune_pentium3__
__tune_pentium2__
goldmont_plus
__tune_lakemont__
__k6_2__
__tune_k6_2__
__k6_3__
__tune_k6_3__
__athlon_sse__
__tune_athlon_sse__
__NO_MATH_INLINES
__AES__
__VAES__
__PCLMUL__
__VPCLMULQDQ__
__LAHF_SAHF__
__LZCNT__
__RDRND__
__FSGSBASE__
__BMI__
__BMI2__
__POPCNT__
__RTM__
__PRFCHW__
__RDSEED__
__ADX__
__TBM__
__LWP__
__MWAITX__
__MOVBE__
__XOP__
__FMA4__
__SSE4A__
__FMA__
__F16C__
__GFNI__
__AVX512CD__
__AVX512VPOPCNTDQ__
__AVX512VNNI__
__AVX512BF16__
__AVX512ER__
__AVX512PF__
__AVX512DQ__
__AVX512BITALG__
__AVX512BW__
__AVX512VL__
__AVX512VBMI__
__AVX512VBMI2__
__AVX512IFMA__
__AVX512VP2INTERSECT__
__SHA__
__FXSR__
__XSAVE__
__XSAVEOPT__
__XSAVEC__
__XSAVES__
__PKU__
__CLFLUSHOPT__
__CLWB__
__WBNOINVD__
__SHSTK__
__SGX__
__PREFETCHWT1__
__CLZERO__
__KL__
__WIDEKL__
__RDPID__
__CLDEMOTE__
__WAITPKG__
__MOVDIRI__
__MOVDIR64B__
__PCONFIG__
__PTWRITE__
__INVPCID__
__ENQCMD__
__HRESET__
__AMXTILE__
__AMXINT8__
__AMXBF16__
__AVXVNNI__
__SERIALIZE__
__TSXLDTRK__
__UINTR__
__RETPOLINE__
__AVX512F__
__AVX2__
__AVX__
__SSE4_2__
__SSE4_1__
__SSSE3__
__SSE3__
__SSE2__
__SSE2_MATH__
__SSE__
__SSE_MATH__
_M_IX86_FP
__3dNOW_A__
__3dNOW__
__MMX__
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16
__SIZEOF_FLOAT128__
3dnow
3dnowa
pentium_iii
+cmov
+cmov,+mmx
+cmov,+mmx,+sse
+cmov,+mmx,+sse,+sse2
+cmov,+mmx,+sse,+sse2,+sse3
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+movbe
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+avx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+f16c,+avx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+adx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512f,+adx,+avx512er,+avx512pf,+avx512cd
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+adx,+mpx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512dq,+avx512f,+adx,+avx512cd,+avx512bw,+avx512vl,+clwb
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512dq,+avx512f,+adx,+avx512ifma,+avx512cd,+avx512bw,+avx512vl,+avx512vbmi
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512f,+adx,+avx512er,+avx512pf,+avx512cd,+avx5124fmaps,+avx5124vnniw,+avx512vpopcntdq
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
argp
fpcr
dirflag
frame
xmm1
xmm2
xmm3
xmm4
xmm5
xmm6
xmm7
xmm8
xmm9
xmm10
xmm11
xmm12
xmm13
xmm14
xmm15
ymm0
ymm1
ymm2
ymm3
ymm4
ymm5
ymm6
ymm7
ymm8
ymm9
ymm10
ymm11
ymm12
ymm13
ymm14
ymm15
xmm16
xmm17
xmm18
xmm19
xmm20
xmm21
xmm22
xmm23
xmm24
xmm25
xmm26
xmm27
xmm28
xmm29
xmm30
xmm31
ymm16
ymm17
ymm18
ymm19
ymm20
ymm21
ymm22
ymm23
ymm24
ymm25
ymm26
ymm27
ymm28
ymm29
ymm30
ymm31
zmm0
zmm1
zmm2
zmm3
zmm4
zmm5
zmm6
zmm7
zmm8
zmm9
zmm10
zmm11
zmm12
zmm13
zmm14
zmm15
zmm16
zmm17
zmm18
zmm19
zmm20
zmm21
zmm22
zmm23
zmm24
zmm25
zmm26
zmm27
zmm28
zmm29
zmm30
zmm31
bnd0
bnd1
bnd2
bnd3
tmm0
tmm1
tmm2
tmm3
tmm4
tmm5
tmm6
tmm7
r10d
r10w
r10b
r11d
r11w
r11b
r12d
r12w
r12b
r13d
r13w
r13b
r14d
r14w
r14b
r15d
r15w
r15b
__builtin_cpu_init
__builtin_cpu_supports
bcC*
__builtin_cpu_is
__builtin_ia32_undef128
ncV:128:
__builtin_ia32_undef256
ncV:256:
__builtin_ia32_undef512
ncV:512:
__builtin_ia32_readeflags_u32
__builtin_ia32_writeeflags_u32
__builtin_ia32_femms
__builtin_ia32_pavgusb
V8cV8cV8c
ncV:64:
__builtin_ia32_pf2id
V2iV2f
__builtin_ia32_pfacc
V2fV2fV2f
__builtin_ia32_pfadd
__builtin_ia32_pfcmpeq
V2iV2fV2f
__builtin_ia32_pfcmpge
__builtin_ia32_pfcmpgt
__builtin_ia32_pfmax
__builtin_ia32_pfmin
__builtin_ia32_pfmul
__builtin_ia32_pfrcp
V2fV2f
__builtin_ia32_pfrcpit1
__builtin_ia32_pfrcpit2
__builtin_ia32_pfrsqrt
__builtin_ia32_pfrsqit1
__builtin_ia32_pfsub
__builtin_ia32_pfsubr
__builtin_ia32_pi2fd
V2fV2i
__builtin_ia32_pmulhrw
V4sV4sV4s
__builtin_ia32_pf2iw
__builtin_ia32_pfnacc
__builtin_ia32_pfpnacc
__builtin_ia32_pi2fw
__builtin_ia32_pswapdsf
__builtin_ia32_pswapdsi
V2iV2i
_mm_prefetch
vcC*i
__builtin_ia32_emms
__builtin_ia32_paddb
__builtin_ia32_paddw
__builtin_ia32_paddd
V2iV2iV2i
__builtin_ia32_paddsb
__builtin_ia32_paddsw
__builtin_ia32_paddusb
__builtin_ia32_paddusw
__builtin_ia32_psubb
__builtin_ia32_psubw
__builtin_ia32_psubd
__builtin_ia32_psubsb
__builtin_ia32_psubsw
__builtin_ia32_psubusb
__builtin_ia32_psubusw
__builtin_ia32_pmulhw
__builtin_ia32_pmullw
__builtin_ia32_pmaddwd
V2iV4sV4s
__builtin_ia32_pand
V1OiV1OiV1Oi
__builtin_ia32_pandn
__builtin_ia32_por
__builtin_ia32_pxor
__builtin_ia32_psllw
V4sV4sV1Oi
__builtin_ia32_pslld
V2iV2iV1Oi
__builtin_ia32_psllq
__builtin_ia32_psrlw
__builtin_ia32_psrld
__builtin_ia32_psrlq
__builtin_ia32_psraw
__builtin_ia32_psrad
__builtin_ia32_psllwi
V4sV4si
__builtin_ia32_pslldi
V2iV2ii
__builtin_ia32_psllqi
V1OiV1Oii
__builtin_ia32_psrlwi
__builtin_ia32_psrldi
__builtin_ia32_psrlqi
__builtin_ia32_psrawi
__builtin_ia32_psradi
__builtin_ia32_packsswb
V8cV4sV4s
__builtin_ia32_packssdw
V4sV2iV2i
__builtin_ia32_packuswb
__builtin_ia32_punpckhbw
__builtin_ia32_punpckhwd
__builtin_ia32_punpckhdq
__builtin_ia32_punpcklbw
__builtin_ia32_punpcklwd
__builtin_ia32_punpckldq
__builtin_ia32_pcmpeqb
__builtin_ia32_pcmpeqw
__builtin_ia32_pcmpeqd
__builtin_ia32_pcmpgtb
__builtin_ia32_pcmpgtw
__builtin_ia32_pcmpgtd
__builtin_ia32_maskmovq
vV8cV8cc*
nV:64:
__builtin_ia32_movntq
vV1Oi*V1Oi
__builtin_ia32_vec_init_v2si
V2iii
__builtin_ia32_vec_init_v4hi
V4sssss
__builtin_ia32_vec_init_v8qi
V8ccccccccc
__builtin_ia32_vec_ext_v2si
iV2ii
__builtin_ia32_cvtpi2ps
V4fV4fV2i
mmx,sse
__builtin_ia32_cvtps2pi
V2iV4f
__builtin_ia32_cvttps2pi
__builtin_ia32_pavgb
__builtin_ia32_pavgw
__builtin_ia32_pmaxsw
__builtin_ia32_pmaxub
__builtin_ia32_pminsw
__builtin_ia32_pminub
__builtin_ia32_pmovmskb
iV8c
__builtin_ia32_pmulhuw
__builtin_ia32_psadbw
V4sV8cV8c
__builtin_ia32_pshufw
V4sV4sIc
__builtin_ia32_vec_ext_v4hi
iV4sIi
__builtin_ia32_vec_set_v4hi
V4sV4siIi
__builtin_ia32_cvtpd2pi
V2iV2d
mmx,sse2
__builtin_ia32_cvtpi2pd
V2dV2i
__builtin_ia32_cvttpd2pi
__builtin_ia32_paddq
__builtin_ia32_pmuludq
V1OiV2iV2i
__builtin_ia32_psubq
__builtin_ia32_pabsb
V8cV8c
mmx,ssse3
__builtin_ia32_pabsd
__builtin_ia32_pabsw
V4sV4s
__builtin_ia32_palignr
V8cV8cV8cIc
__builtin_ia32_phaddd
__builtin_ia32_phaddsw
__builtin_ia32_phaddw
__builtin_ia32_phsubd
__builtin_ia32_phsubsw
__builtin_ia32_phsubw
__builtin_ia32_pmaddubsw
__builtin_ia32_pmulhrsw
__builtin_ia32_pshufb
__builtin_ia32_psignw
__builtin_ia32_psignb
__builtin_ia32_psignd
__builtin_ia32_comieq
__builtin_ia32_comilt
__builtin_ia32_comile
__builtin_ia32_comigt
__builtin_ia32_comige
__builtin_ia32_comineq
__builtin_ia32_ucomieq
__builtin_ia32_ucomilt
__builtin_ia32_ucomile
__builtin_ia32_ucomigt
__builtin_ia32_ucomige
__builtin_ia32_ucomineq
__builtin_ia32_comisdeq
__builtin_ia32_comisdlt
__builtin_ia32_comisdle
__builtin_ia32_comisdgt
__builtin_ia32_comisdge
__builtin_ia32_comisdneq
__builtin_ia32_ucomisdeq
__builtin_ia32_ucomisdlt
__builtin_ia32_ucomisdle
__builtin_ia32_ucomisdgt
__builtin_ia32_ucomisdge
__builtin_ia32_ucomisdneq
__builtin_ia32_cmpeqps
__builtin_ia32_cmpltps
__builtin_ia32_cmpleps
__builtin_ia32_cmpunordps
__builtin_ia32_cmpneqps
__builtin_ia32_cmpnltps
__builtin_ia32_cmpnleps
__builtin_ia32_cmpordps
__builtin_ia32_cmpeqss
__builtin_ia32_cmpltss
__builtin_ia32_cmpless
__builtin_ia32_cmpunordss
__builtin_ia32_cmpneqss
__builtin_ia32_cmpnltss
__builtin_ia32_cmpnless
__builtin_ia32_cmpordss
__builtin_ia32_minps
__builtin_ia32_maxps
__builtin_ia32_minss
__builtin_ia32_maxss
__builtin_ia32_cmpeqpd
__builtin_ia32_cmpltpd
__builtin_ia32_cmplepd
__builtin_ia32_cmpunordpd
__builtin_ia32_cmpneqpd
__builtin_ia32_cmpnltpd
__builtin_ia32_cmpnlepd
__builtin_ia32_cmpordpd
__builtin_ia32_cmpeqsd
__builtin_ia32_cmpltsd
__builtin_ia32_cmplesd
__builtin_ia32_cmpunordsd
__builtin_ia32_cmpneqsd
__builtin_ia32_cmpnltsd
__builtin_ia32_cmpnlesd
__builtin_ia32_cmpordsd
__builtin_ia32_minpd
__builtin_ia32_maxpd
__builtin_ia32_minsd
__builtin_ia32_maxsd
__builtin_ia32_paddsb128
__builtin_ia32_paddsw128
__builtin_ia32_psubsb128
__builtin_ia32_psubsw128
__builtin_ia32_paddusb128
__builtin_ia32_paddusw128
__builtin_ia32_psubusb128
__builtin_ia32_psubusw128
__builtin_ia32_pmulhw128
__builtin_ia32_pavgb128
__builtin_ia32_pavgw128
__builtin_ia32_pmaxub128
__builtin_ia32_pmaxsw128
__builtin_ia32_pminub128
__builtin_ia32_pminsw128
__builtin_ia32_packsswb128
V16cV8sV8s
__builtin_ia32_packssdw128
__builtin_ia32_packuswb128
__builtin_ia32_pmulhuw128
__builtin_ia32_vec_ext_v4si
__builtin_ia32_vec_ext_v4sf
__builtin_ia32_vec_ext_v8hi
sV8sIi
__builtin_ia32_vec_set_v8hi
V8sV8ssIi
__builtin_ia32_addsubps
__builtin_ia32_addsubpd
__builtin_ia32_haddps
__builtin_ia32_haddpd
__builtin_ia32_hsubps
__builtin_ia32_hsubpd
__builtin_ia32_phaddw128
__builtin_ia32_phaddd128
__builtin_ia32_phaddsw128
__builtin_ia32_phsubw128
__builtin_ia32_phsubd128
__builtin_ia32_phsubsw128
__builtin_ia32_pmaddubsw128
V8sV16cV16c
__builtin_ia32_pmulhrsw128
__builtin_ia32_pshufb128
__builtin_ia32_psignb128
__builtin_ia32_psignw128
__builtin_ia32_psignd128
__builtin_ia32_pabsb128
__builtin_ia32_pabsw128
__builtin_ia32_pabsd128
__builtin_ia32_ldmxcsr
_mm_setcsr
xmmintrin.h
__builtin_ia32_stmxcsr
_mm_getcsr
__builtin_ia32_cvtss2si
__builtin_ia32_cvttss2si
__builtin_ia32_movmskps
nV:128:
__builtin_ia32_sfence
_mm_sfence
__builtin_ia32_rcpps
__builtin_ia32_rcpss
__builtin_ia32_rsqrtps
__builtin_ia32_rsqrtss
__builtin_ia32_sqrtps
__builtin_ia32_sqrtss
__builtin_ia32_shufps
__builtin_ia32_maskmovdqu
vV16cV16cc*
__builtin_ia32_movmskpd
__builtin_ia32_pmovmskb128
iV16c
__builtin_ia32_movnti
vi*i
__builtin_ia32_pshufd
V4iV4iIi
__builtin_ia32_pshuflw
V8sV8sIi
__builtin_ia32_pshufhw
__builtin_ia32_psadbw128
V2OiV16cV16c
__builtin_ia32_sqrtpd
__builtin_ia32_sqrtsd
__builtin_ia32_shufpd
__builtin_ia32_cvtpd2dq
V2OiV2d
__builtin_ia32_cvtpd2ps
__builtin_ia32_cvttpd2dq
V4iV2d
__builtin_ia32_cvtsd2si
__builtin_ia32_cvttsd2si
__builtin_ia32_cvtsd2ss
V4fV4fV2d
__builtin_ia32_cvtps2dq
__builtin_ia32_cvttps2dq
__builtin_ia32_clflush
_mm_clflush
emmintrin.h
__builtin_ia32_lfence
_mm_lfence
__builtin_ia32_mfence
_mm_mfence
__builtin_ia32_pause
_mm_pause
__builtin_ia32_pmuludq128
V2OiV4iV4i
__builtin_ia32_psraw128
__builtin_ia32_psrad128
__builtin_ia32_psrlw128
__builtin_ia32_psrld128
__builtin_ia32_psrlq128
V2OiV2OiV2Oi
__builtin_ia32_psllw128
__builtin_ia32_pslld128
__builtin_ia32_psllq128
__builtin_ia32_psllwi128
V8sV8si
__builtin_ia32_pslldi128
V4iV4ii
__builtin_ia32_psllqi128
V2OiV2Oii
__builtin_ia32_psrlwi128
__builtin_ia32_psrldi128
__builtin_ia32_psrlqi128
__builtin_ia32_psrawi128
__builtin_ia32_psradi128
__builtin_ia32_pmaddwd128
__builtin_ia32_pslldqi128_byteshift
V2OiV2OiIi
__builtin_ia32_psrldqi128_byteshift
__builtin_ia32_monitor
__builtin_ia32_mwait
__builtin_ia32_lddqu
V16ccC*
__builtin_ia32_palignr128
V16cV16cV16cIi
__builtin_ia32_insertps128
V4fV4fV4fIc
__builtin_ia32_pblendvb128
__builtin_ia32_pblendw128
V8sV8sV8sIi
__builtin_ia32_blendpd
__builtin_ia32_blendps
__builtin_ia32_blendvpd
__builtin_ia32_blendvps
__builtin_ia32_packusdw128
__builtin_ia32_pmaxsb128
__builtin_ia32_pmaxsd128
__builtin_ia32_pmaxud128
__builtin_ia32_pmaxuw128
__builtin_ia32_pminsb128
__builtin_ia32_pminsd128
__builtin_ia32_pminud128
__builtin_ia32_pminuw128
__builtin_ia32_pmuldq128
__builtin_ia32_roundps
V4fV4fIi
__builtin_ia32_roundss
__builtin_ia32_roundsd
__builtin_ia32_roundpd
V2dV2dIi
__builtin_ia32_dpps
__builtin_ia32_dppd
V2dV2dV2dIc
__builtin_ia32_ptestz128
iV2OiV2Oi
__builtin_ia32_ptestc128
__builtin_ia32_ptestnzc128
__builtin_ia32_mpsadbw128
V16cV16cV16cIc
__builtin_ia32_phminposuw128
__builtin_ia32_vec_ext_v16qi
cV16cIi
__builtin_ia32_vec_set_v16qi
V16cV16ccIi
__builtin_ia32_vec_set_v4si
V4iV4iiIi
__builtin_ia32_pcmpistrm128
__builtin_ia32_pcmpistri128
iV16cV16cIc
__builtin_ia32_pcmpestrm128
V16cV16ciV16ciIc
__builtin_ia32_pcmpestri128
iV16ciV16ciIc
__builtin_ia32_pcmpistria128
__builtin_ia32_pcmpistric128
__builtin_ia32_pcmpistrio128
__builtin_ia32_pcmpistris128
__builtin_ia32_pcmpistriz128
__builtin_ia32_pcmpestria128
__builtin_ia32_pcmpestric128
__builtin_ia32_pcmpestrio128
__builtin_ia32_pcmpestris128
__builtin_ia32_pcmpestriz128
__builtin_ia32_crc32qi
__builtin_ia32_crc32hi
__builtin_ia32_crc32si
__builtin_ia32_extrqi
V2OiV2OiIcIc
__builtin_ia32_extrq
V2OiV2OiV16c
__builtin_ia32_insertqi
V2OiV2OiV2OiIcIc
__builtin_ia32_insertq
__builtin_ia32_movntsd
vd*V2d
__builtin_ia32_movntss
vf*V4f
__builtin_ia32_aesenc128
__builtin_ia32_aesenclast128
__builtin_ia32_aesdec128
__builtin_ia32_aesdeclast128
__builtin_ia32_aesimc128
V2OiV2Oi
__builtin_ia32_aeskeygenassist128
V2OiV2OiIc
__builtin_ia32_aesenc256
V4OiV4OiV4Oi
__builtin_ia32_aesenc512
V8OiV8OiV8Oi
avx512f,vaes
__builtin_ia32_aesenclast256
__builtin_ia32_aesenclast512
__builtin_ia32_aesdec256
__builtin_ia32_aesdec512
__builtin_ia32_aesdeclast256
__builtin_ia32_aesdeclast512
__builtin_ia32_vgf2p8affineinvqb_v16qi
__builtin_ia32_vgf2p8affineinvqb_v32qi
V32cV32cV32cIc
avx,gfni
__builtin_ia32_vgf2p8affineinvqb_v64qi
V64cV64cV64cIc
avx512bw,gfni
__builtin_ia32_vgf2p8affineqb_v16qi
__builtin_ia32_vgf2p8affineqb_v32qi
__builtin_ia32_vgf2p8affineqb_v64qi
__builtin_ia32_vgf2p8mulb_v16qi
__builtin_ia32_vgf2p8mulb_v32qi
V32cV32cV32c
__builtin_ia32_vgf2p8mulb_v64qi
V64cV64cV64c
__builtin_ia32_pclmulqdq128
V2OiV2OiV2OiIc
__builtin_ia32_pclmulqdq256
V4OiV4OiV4OiIc
__builtin_ia32_pclmulqdq512
V8OiV8OiV8OiIc
avx512f,vpclmulqdq
__builtin_ia32_addsubpd256
V4dV4dV4d
__builtin_ia32_addsubps256
V8fV8fV8f
__builtin_ia32_haddpd256
__builtin_ia32_hsubps256
__builtin_ia32_hsubpd256
__builtin_ia32_haddps256
__builtin_ia32_maxpd256
__builtin_ia32_maxps256
__builtin_ia32_minpd256
__builtin_ia32_minps256
__builtin_ia32_vpermilvarpd
V2dV2dV2Oi
__builtin_ia32_vpermilvarps
__builtin_ia32_vpermilvarpd256
V4dV4dV4Oi
__builtin_ia32_vpermilvarps256
V8fV8fV8i
__builtin_ia32_blendpd256
V4dV4dV4dIi
__builtin_ia32_blendps256
V8fV8fV8fIi
__builtin_ia32_blendvpd256
V4dV4dV4dV4d
__builtin_ia32_blendvps256
V8fV8fV8fV8f
__builtin_ia32_shufpd256
__builtin_ia32_shufps256
__builtin_ia32_dpps256
V8fV8fV8fIc
__builtin_ia32_cmppd
__builtin_ia32_cmppd256
V4dV4dV4dIc
__builtin_ia32_cmpps
__builtin_ia32_cmpps256
__builtin_ia32_cmpsd
__builtin_ia32_cmpss
__builtin_ia32_vextractf128_pd256
V2dV4dIi
__builtin_ia32_vextractf128_ps256
V4fV8fIi
__builtin_ia32_vextractf128_si256
V4iV8iIi
__builtin_ia32_cvtpd2ps256
V4fV4d
__builtin_ia32_cvtps2dq256
V8iV8f
__builtin_ia32_cvttpd2dq256
V4iV4d
__builtin_ia32_cvtpd2dq256
__builtin_ia32_cvttps2dq256
__builtin_ia32_vperm2f128_pd256
__builtin_ia32_vperm2f128_ps256
__builtin_ia32_vperm2f128_si256
V8iV8iV8iIi
__builtin_ia32_vpermilpd
__builtin_ia32_vpermilps
__builtin_ia32_vpermilpd256
V4dV4dIi
__builtin_ia32_vpermilps256
V8fV8fIi
__builtin_ia32_vinsertf128_pd256
V4dV4dV2dIi
__builtin_ia32_vinsertf128_ps256
V8fV8fV4fIi
__builtin_ia32_vinsertf128_si256
V8iV8iV4iIi
__builtin_ia32_sqrtpd256
V4dV4d
__builtin_ia32_sqrtps256
V8fV8f
__builtin_ia32_rsqrtps256
__builtin_ia32_rcpps256
__builtin_ia32_roundpd256
__builtin_ia32_roundps256
__builtin_ia32_vtestzpd
__builtin_ia32_vtestcpd
__builtin_ia32_vtestnzcpd
__builtin_ia32_vtestzps
__builtin_ia32_vtestcps
__builtin_ia32_vtestnzcps
__builtin_ia32_vtestzpd256
iV4dV4d
__builtin_ia32_vtestcpd256
__builtin_ia32_vtestnzcpd256
__builtin_ia32_vtestzps256
iV8fV8f
__builtin_ia32_vtestcps256
__builtin_ia32_vtestnzcps256
__builtin_ia32_ptestz256
iV4OiV4Oi
__builtin_ia32_ptestc256
__builtin_ia32_ptestnzc256
__builtin_ia32_movmskpd256
iV4d
__builtin_ia32_movmskps256
iV8f
__builtin_ia32_vzeroall
__builtin_ia32_vzeroupper
__builtin_ia32_lddqu256
V32ccC*
nV:256:
__builtin_ia32_maskloadpd
V2dV2dC*V2Oi
__builtin_ia32_maskloadps
V4fV4fC*V4i
__builtin_ia32_maskloadpd256
V4dV4dC*V4Oi
__builtin_ia32_maskloadps256
V8fV8fC*V8i
__builtin_ia32_maskstorepd
vV2d*V2OiV2d
__builtin_ia32_maskstoreps
vV4f*V4iV4f
__builtin_ia32_maskstorepd256
vV4d*V4OiV4d
__builtin_ia32_maskstoreps256
vV8f*V8iV8f
__builtin_ia32_vec_ext_v32qi
cV32cIi
__builtin_ia32_vec_ext_v16hi
sV16sIi
__builtin_ia32_vec_ext_v8si
iV8iIi
__builtin_ia32_vec_set_v32qi
V32cV32ccIi
__builtin_ia32_vec_set_v16hi
V16sV16ssIi
__builtin_ia32_vec_set_v8si
V8iV8iiIi
__builtin_ia32_mpsadbw256
__builtin_ia32_pabsb256
V32cV32c
__builtin_ia32_pabsw256
V16sV16s
__builtin_ia32_pabsd256
V8iV8i
__builtin_ia32_packsswb256
V32cV16sV16s
__builtin_ia32_packssdw256
V16sV8iV8i
__builtin_ia32_packuswb256
__builtin_ia32_packusdw256
__builtin_ia32_paddsb256
__builtin_ia32_paddsw256
V16sV16sV16s
__builtin_ia32_psubsb256
__builtin_ia32_psubsw256
__builtin_ia32_paddusb256
__builtin_ia32_paddusw256
__builtin_ia32_psubusb256
__builtin_ia32_psubusw256
__builtin_ia32_palignr256
V32cV32cV32cIi
__builtin_ia32_pavgb256
__builtin_ia32_pavgw256
__builtin_ia32_pblendvb256
V32cV32cV32cV32c
__builtin_ia32_pblendw256
V16sV16sV16sIi
__builtin_ia32_phaddw256
__builtin_ia32_phaddd256
V8iV8iV8i
__builtin_ia32_phaddsw256
__builtin_ia32_phsubw256
__builtin_ia32_phsubd256
__builtin_ia32_phsubsw256
__builtin_ia32_pmaddubsw256
V16sV32cV32c
__builtin_ia32_pmaddwd256
V8iV16sV16s
__builtin_ia32_pmaxub256
__builtin_ia32_pmaxuw256
__builtin_ia32_pmaxud256
__builtin_ia32_pmaxsb256
__builtin_ia32_pmaxsw256
__builtin_ia32_pmaxsd256
__builtin_ia32_pminub256
__builtin_ia32_pminuw256
__builtin_ia32_pminud256
__builtin_ia32_pminsb256
__builtin_ia32_pminsw256
__builtin_ia32_pminsd256
__builtin_ia32_pmovmskb256
iV32c
__builtin_ia32_pmuldq256
V4OiV8iV8i
__builtin_ia32_pmulhrsw256
__builtin_ia32_pmulhuw256
__builtin_ia32_pmulhw256
__builtin_ia32_pmuludq256
__builtin_ia32_psadbw256
V4OiV32cV32c
__builtin_ia32_pshufb256
__builtin_ia32_pshufd256
V8iV8iIi
__builtin_ia32_pshuflw256
V16sV16sIi
__builtin_ia32_pshufhw256
__builtin_ia32_psignb256
__builtin_ia32_psignw256
__builtin_ia32_psignd256
__builtin_ia32_psllwi256
V16sV16si
__builtin_ia32_psllw256
V16sV16sV8s
__builtin_ia32_pslldqi256_byteshift
V4OiV4OiIi
__builtin_ia32_pslldi256
V8iV8ii
__builtin_ia32_pslld256
V8iV8iV4i
__builtin_ia32_psllqi256
V4OiV4Oii
__builtin_ia32_psllq256
V4OiV4OiV2Oi
__builtin_ia32_psrawi256
__builtin_ia32_psraw256
__builtin_ia32_psradi256
__builtin_ia32_psrad256
__builtin_ia32_psrldqi256_byteshift
__builtin_ia32_psrlwi256
__builtin_ia32_psrlw256
__builtin_ia32_psrldi256
__builtin_ia32_psrld256
__builtin_ia32_psrlqi256
__builtin_ia32_psrlq256
__builtin_ia32_pblendd128
V4iV4iV4iIi
__builtin_ia32_pblendd256
__builtin_ia32_permvarsi256
__builtin_ia32_permdf256
__builtin_ia32_permvarsf256
__builtin_ia32_permti256
V4OiV4OiV4OiIi
__builtin_ia32_permdi256
__builtin_ia32_extract128i256
V2OiV4OiIi
__builtin_ia32_insert128i256
V4OiV4OiV2OiIi
__builtin_ia32_maskloadd256
V8iV8iC*V8i
__builtin_ia32_maskloadq256
V4OiV4OiC*V4Oi
__builtin_ia32_maskloadd
V4iV4iC*V4i
__builtin_ia32_maskloadq
V2OiV2OiC*V2Oi
__builtin_ia32_maskstored256
vV8i*V8iV8i
__builtin_ia32_maskstoreq256
vV4Oi*V4OiV4Oi
__builtin_ia32_maskstored
vV4i*V4iV4i
__builtin_ia32_maskstoreq
vV2Oi*V2OiV2Oi
__builtin_ia32_psllv8si
__builtin_ia32_psllv4si
__builtin_ia32_psllv4di
__builtin_ia32_psllv2di
__builtin_ia32_psrav8si
__builtin_ia32_psrav4si
__builtin_ia32_psrlv8si
__builtin_ia32_psrlv4si
__builtin_ia32_psrlv4di
__builtin_ia32_psrlv2di
__builtin_ia32_gatherd_pd
V2dV2ddC*V4iV2dIc
__builtin_ia32_gatherd_pd256
V4dV4ddC*V4iV4dIc
__builtin_ia32_gatherq_pd
V2dV2ddC*V2OiV2dIc
__builtin_ia32_gatherq_pd256
V4dV4ddC*V4OiV4dIc
__builtin_ia32_gatherd_ps
V4fV4ffC*V4iV4fIc
__builtin_ia32_gatherd_ps256
V8fV8ffC*V8iV8fIc
__builtin_ia32_gatherq_ps
V4fV4ffC*V2OiV4fIc
__builtin_ia32_gatherq_ps256
V4fV4ffC*V4OiV4fIc
__builtin_ia32_gatherd_q
V2OiV2OiOiC*V4iV2OiIc
__builtin_ia32_gatherd_q256
V4OiV4OiOiC*V4iV4OiIc
__builtin_ia32_gatherq_q
V2OiV2OiOiC*V2OiV2OiIc
__builtin_ia32_gatherq_q256
V4OiV4OiOiC*V4OiV4OiIc
__builtin_ia32_gatherd_d
V4iV4iiC*V4iV4iIc
__builtin_ia32_gatherd_d256
V8iV8iiC*V8iV8iIc
__builtin_ia32_gatherq_d
V4iV4iiC*V2OiV4iIc
__builtin_ia32_gatherq_d256
V4iV4iiC*V4OiV4iIc
__builtin_ia32_vcvtps2ph
V8sV4fIi
__builtin_ia32_vcvtps2ph256
V8sV8fIi
__builtin_ia32_vcvtph2ps
V4fV8s
__builtin_ia32_vcvtph2ps256
V8fV8s
__builtin_ia32_rdrand16_step
UiUs*
__builtin_ia32_rdrand32_step
UiUi*
__builtin_ia32_fxrstor
__builtin_ia32_fxsave
__builtin_ia32_xsave
vv*UOi
__builtin_ia32_xrstor
__builtin_ia32_xgetbv
UOiUi
_xgetbv
UWiUi
immintrin.h
__builtin_ia32_xsetbv
vUiUOi
_xsetbv
vUiUWi
__builtin_ia32_xsaveopt
__builtin_ia32_xrstors
__builtin_ia32_xsavec
__builtin_ia32_xsaves
__builtin_ia32_incsspd
__builtin_ia32_rdsspd
__builtin_ia32_saveprevssp
__builtin_ia32_rstorssp
__builtin_ia32_wrssd
vUiv*
__builtin_ia32_wrussd
__builtin_ia32_setssbsy
__builtin_ia32_clrssbsy
__builtin_ia32_clflushopt
__builtin_ia32_clwb
__builtin_ia32_wbinvd
__builtin_ia32_wbnoinvd
__builtin_ia32_addcarryx_u32
UcUcUiUiUi*
__builtin_ia32_subborrow_u32
__builtin_ia32_rdseed16_step
__builtin_ia32_rdseed32_step
__builtin_ia32_lzcnt_u16
UsUs
__builtin_ia32_lzcnt_u32
__builtin_ia32_bextr_u32
__builtin_ia32_tzcnt_u16
__builtin_ia32_tzcnt_u32
__builtin_ia32_bzhi_si
__builtin_ia32_pdep_si
__builtin_ia32_pext_si
__builtin_ia32_bextri_u32
__builtin_ia32_llwpcb
__builtin_ia32_slwpcb
__builtin_ia32_lwpins32
UcUiUiIUi
__builtin_ia32_lwpval32
vUiUiIUi
__builtin_ia32_sha1rnds4
V4iV4iV4iIc
__builtin_ia32_sha1nexte
__builtin_ia32_sha1msg1
__builtin_ia32_sha1msg2
__builtin_ia32_sha256rnds2
__builtin_ia32_sha256msg1
__builtin_ia32_sha256msg2
__builtin_ia32_vfmaddps
fma|fma4
__builtin_ia32_vfmaddpd
__builtin_ia32_vfmaddss3
__builtin_ia32_vfmaddsd3
__builtin_ia32_vfmaddss
__builtin_ia32_vfmaddsd
__builtin_ia32_vfmaddsubps
__builtin_ia32_vfmaddsubpd
__builtin_ia32_vfmaddps256
__builtin_ia32_vfmaddpd256
__builtin_ia32_vfmaddsubps256
__builtin_ia32_vfmaddsubpd256
__builtin_ia32_vfmaddpd512_mask
V8dV8dV8dV8dUcIi
__builtin_ia32_vfmaddpd512_maskz
__builtin_ia32_vfmaddpd512_mask3
__builtin_ia32_vfmsubpd512_mask3
__builtin_ia32_vfmaddps512_mask
V16fV16fV16fV16fUsIi
__builtin_ia32_vfmaddps512_maskz
__builtin_ia32_vfmaddps512_mask3
__builtin_ia32_vfmsubps512_mask3
__builtin_ia32_vfmaddsubpd512_mask
__builtin_ia32_vfmaddsubpd512_maskz
__builtin_ia32_vfmaddsubpd512_mask3
__builtin_ia32_vfmsubaddpd512_mask3
__builtin_ia32_vfmaddsubps512_mask
__builtin_ia32_vfmaddsubps512_maskz
__builtin_ia32_vfmaddsubps512_mask3
__builtin_ia32_vfmsubaddps512_mask3
__builtin_ia32_vpmacssww
__builtin_ia32_vpmacsww
__builtin_ia32_vpmacsswd
V4iV8sV8sV4i
__builtin_ia32_vpmacswd
__builtin_ia32_vpmacssdd
__builtin_ia32_vpmacsdd
__builtin_ia32_vpmacssdql
V2OiV4iV4iV2Oi
__builtin_ia32_vpmacsdql
__builtin_ia32_vpmacssdqh
__builtin_ia32_vpmacsdqh
__builtin_ia32_vpmadcsswd
__builtin_ia32_vpmadcswd
__builtin_ia32_vphaddbw
__builtin_ia32_vphaddbd
V4iV16c
__builtin_ia32_vphaddbq
V2OiV16c
__builtin_ia32_vphaddwd
__builtin_ia32_vphaddwq
V2OiV8s
__builtin_ia32_vphadddq
V2OiV4i
__builtin_ia32_vphaddubw
__builtin_ia32_vphaddubd
__builtin_ia32_vphaddubq
__builtin_ia32_vphadduwd
__builtin_ia32_vphadduwq
__builtin_ia32_vphaddudq
__builtin_ia32_vphsubbw
__builtin_ia32_vphsubwd
__builtin_ia32_vphsubdq
__builtin_ia32_vpperm
__builtin_ia32_vprotb
__builtin_ia32_vprotw
__builtin_ia32_vprotd
__builtin_ia32_vprotq
__builtin_ia32_vprotbi
V16cV16cIc
__builtin_ia32_vprotwi
V8sV8sIc
__builtin_ia32_vprotdi
V4iV4iIc
__builtin_ia32_vprotqi
__builtin_ia32_vpshlb
__builtin_ia32_vpshlw
__builtin_ia32_vpshld
__builtin_ia32_vpshlq
__builtin_ia32_vpshab
__builtin_ia32_vpshaw
__builtin_ia32_vpshad
__builtin_ia32_vpshaq
__builtin_ia32_vpcomub
__builtin_ia32_vpcomuw
V8sV8sV8sIc
__builtin_ia32_vpcomud
__builtin_ia32_vpcomuq
__builtin_ia32_vpcomb
__builtin_ia32_vpcomw
__builtin_ia32_vpcomd
__builtin_ia32_vpcomq
__builtin_ia32_vpermil2pd
V2dV2dV2dV2OiIc
__builtin_ia32_vpermil2pd256
V4dV4dV4dV4OiIc
__builtin_ia32_vpermil2ps
V4fV4fV4fV4iIc
__builtin_ia32_vpermil2ps256
V8fV8fV8fV8iIc
__builtin_ia32_vfrczss
__builtin_ia32_vfrczsd
__builtin_ia32_vfrczps
__builtin_ia32_vfrczpd
__builtin_ia32_vfrczps256
__builtin_ia32_vfrczpd256
__builtin_ia32_xbegin
__builtin_ia32_xend
__builtin_ia32_xabort
__builtin_ia32_xtest
__builtin_ia32_rdpmc
UOii
__builtin_ia32_rdtsc
__rdtsc
__builtin_ia32_rdtscp
UOiUi*
__builtin_ia32_rdpid
__builtin_ia32_rdpkru
__builtin_ia32_wrpkru
__builtin_ia32_sqrtpd512
V8dV8dIi
__builtin_ia32_sqrtps512
V16fV16fIi
__builtin_ia32_rsqrt14sd_mask
V2dV2dV2dV2dUc
__builtin_ia32_rsqrt14ss_mask
V4fV4fV4fV4fUc
__builtin_ia32_rsqrt14pd512_mask
V8dV8dV8dUc
__builtin_ia32_rsqrt14ps512_mask
V16fV16fV16fUs
__builtin_ia32_rsqrt28sd_round_mask
V2dV2dV2dV2dUcIi
__builtin_ia32_rsqrt28ss_round_mask
V4fV4fV4fV4fUcIi
__builtin_ia32_rsqrt28pd_mask
V8dV8dV8dUcIi
__builtin_ia32_rsqrt28ps_mask
V16fV16fV16fUsIi
__builtin_ia32_rcp14sd_mask
__builtin_ia32_rcp14ss_mask
__builtin_ia32_rcp14pd512_mask
__builtin_ia32_rcp14ps512_mask
__builtin_ia32_rcp28sd_round_mask
__builtin_ia32_rcp28ss_round_mask
__builtin_ia32_rcp28pd_mask
__builtin_ia32_rcp28ps_mask
__builtin_ia32_exp2pd_mask
__builtin_ia32_exp2ps_mask
__builtin_ia32_cvttps2dq512_mask
V16iV16fV16iUsIi
__builtin_ia32_cvttps2udq512_mask
__builtin_ia32_cvttpd2dq512_mask
V8iV8dV8iUcIi
__builtin_ia32_cvttpd2udq512_mask
__builtin_ia32_cmpps512_mask
UsV16fV16fIiUsIi
__builtin_ia32_cmpps256_mask
UcV8fV8fIiUc
__builtin_ia32_cmpps128_mask
UcV4fV4fIiUc
__builtin_ia32_cmppd512_mask
UcV8dV8dIiUcIi
__builtin_ia32_cmppd256_mask
UcV4dV4dIiUc
__builtin_ia32_cmppd128_mask
UcV2dV2dIiUc
__builtin_ia32_rndscaleps_mask
V16fV16fIiV16fUsIi
__builtin_ia32_rndscalepd_mask
V8dV8dIiV8dUcIi
__builtin_ia32_cvtps2dq512_mask
__builtin_ia32_cvtpd2dq512_mask
__builtin_ia32_cvtps2udq512_mask
__builtin_ia32_cvtpd2udq512_mask
__builtin_ia32_minps512
V16fV16fV16fIi
__builtin_ia32_minpd512
V8dV8dV8dIi
__builtin_ia32_maxps512
__builtin_ia32_maxpd512
__builtin_ia32_cvtdq2ps512_mask
V16fV16iV16fUsIi
__builtin_ia32_cvtudq2ps512_mask
__builtin_ia32_cvtpd2ps512_mask
V8fV8dV8fUcIi
__builtin_ia32_vcvtps2ph512_mask
V16sV16fIiV16sUs
__builtin_ia32_vcvtph2ps512_mask
V16fV16sV16fUsIi
__builtin_ia32_pabsd512
__builtin_ia32_pabsq512
V8OiV8Oi
__builtin_ia32_pmaxsd512
__builtin_ia32_pmaxsq512
__builtin_ia32_pmaxud512
__builtin_ia32_pmaxuq512
__builtin_ia32_pminsd512
__builtin_ia32_pminsq512
__builtin_ia32_pminud512
__builtin_ia32_pminuq512
__builtin_ia32_pmuldq512
V8OiV16iV16i
__builtin_ia32_pmuludq512
__builtin_ia32_loaddqusi512_mask
V16iiC*V16iUs
nV:512:
__builtin_ia32_loaddqudi512_mask
V8OiOiC*V8OiUc
__builtin_ia32_loadups512_mask
V16ffC*V16fUs
__builtin_ia32_loadaps512_mask
V16fV16fC*V16fUs
__builtin_ia32_loadupd512_mask
V8ddC*V8dUc
__builtin_ia32_loadapd512_mask
V8dV8dC*V8dUc
__builtin_ia32_storedqudi512_mask
vOi*V8OiUc
__builtin_ia32_storedqusi512_mask
vi*V16iUs
__builtin_ia32_storeupd512_mask
vd*V8dUc
__builtin_ia32_storeapd512_mask
vV8d*V8dUc
__builtin_ia32_storeups512_mask
vf*V16fUs
__builtin_ia32_storeaps512_mask
vV16f*V16fUs
__builtin_ia32_alignq512
V8OiV8OiV8OiIi
__builtin_ia32_alignd512
V16iV16iV16iIi
__builtin_ia32_alignd128
__builtin_ia32_alignd256
__builtin_ia32_alignq128
V2OiV2OiV2OiIi
__builtin_ia32_alignq256
__builtin_ia32_extractf64x4_mask
V4dV8dIiV4dUc
__builtin_ia32_extractf32x4_mask
V4fV16fIiV4fUc
__builtin_ia32_vpdpbusd128
avx512vl,avx512vnni|avxvnni
__builtin_ia32_vpdpbusd256
V8iV8iV8iV8i
__builtin_ia32_vpdpbusd512
__builtin_ia32_vpdpbusds128
__builtin_ia32_vpdpbusds256
__builtin_ia32_vpdpbusds512
__builtin_ia32_vpdpwssd128
__builtin_ia32_vpdpwssd256
__builtin_ia32_vpdpwssd512
__builtin_ia32_vpdpwssds128
__builtin_ia32_vpdpwssds256
__builtin_ia32_vpdpwssds512
__builtin_ia32_gather3div2df
V2dV2dvC*V2OiUcIi
__builtin_ia32_gather3div2di
V2OiV2OivC*V2OiUcIi
__builtin_ia32_gather3div4df
V4dV4dvC*V4OiUcIi
__builtin_ia32_gather3div4di
V4OiV4OivC*V4OiUcIi
__builtin_ia32_gather3div4sf
V4fV4fvC*V2OiUcIi
__builtin_ia32_gather3div4si
V4iV4ivC*V2OiUcIi
__builtin_ia32_gather3div8sf
V4fV4fvC*V4OiUcIi
__builtin_ia32_gather3div8si
V4iV4ivC*V4OiUcIi
__builtin_ia32_gather3siv2df
V2dV2dvC*V4iUcIi
__builtin_ia32_gather3siv2di
V2OiV2OivC*V4iUcIi
__builtin_ia32_gather3siv4df
V4dV4dvC*V4iUcIi
__builtin_ia32_gather3siv4di
V4OiV4OivC*V4iUcIi
__builtin_ia32_gather3siv4sf
V4fV4fvC*V4iUcIi
__builtin_ia32_gather3siv4si
V4iV4ivC*V4iUcIi
__builtin_ia32_gather3siv8sf
V8fV8fvC*V8iUcIi
__builtin_ia32_gather3siv8si
V8iV8ivC*V8iUcIi
__builtin_ia32_gathersiv8df
V8dV8dvC*V8iUcIi
__builtin_ia32_gathersiv16sf
V16fV16fvC*V16iUsIi
__builtin_ia32_gatherdiv8df
V8dV8dvC*V8OiUcIi
__builtin_ia32_gatherdiv16sf
V8fV8fvC*V8OiUcIi
__builtin_ia32_gathersiv8di
V8OiV8OivC*V8iUcIi
__builtin_ia32_gathersiv16si
V16iV16ivC*V16iUsIi
__builtin_ia32_gatherdiv8di
V8OiV8OivC*V8OiUcIi
__builtin_ia32_gatherdiv16si
V8iV8ivC*V8OiUcIi
__builtin_ia32_scattersiv8df
vv*UcV8iV8dIi
__builtin_ia32_scattersiv16sf
vv*UsV16iV16fIi
__builtin_ia32_scatterdiv8df
vv*UcV8OiV8dIi
__builtin_ia32_scatterdiv16sf
vv*UcV8OiV8fIi
__builtin_ia32_scattersiv8di
vv*UcV8iV8OiIi
__builtin_ia32_scattersiv16si
vv*UsV16iV16iIi
__builtin_ia32_scatterdiv8di
vv*UcV8OiV8OiIi
__builtin_ia32_scatterdiv16si
vv*UcV8OiV8iIi
__builtin_ia32_gatherpfdpd
vUcV8ivC*IiIi
__builtin_ia32_gatherpfdps
vUsV16ivC*IiIi
__builtin_ia32_gatherpfqpd
vUcV8OivC*IiIi
__builtin_ia32_gatherpfqps
__builtin_ia32_scatterpfdpd
vUcV8iv*IiIi
__builtin_ia32_scatterpfdps
vUsV16iv*IiIi
__builtin_ia32_scatterpfqpd
vUcV8Oiv*IiIi
__builtin_ia32_scatterpfqps
__builtin_ia32_knotqi
UcUc
__builtin_ia32_knothi
__builtin_ia32_knotsi
__builtin_ia32_knotdi
UOiUOi
__builtin_ia32_cmpb128_mask
UsV16cV16cIiUs
avx512vl,avx512bw
__builtin_ia32_cmpd128_mask
UcV4iV4iIiUc
__builtin_ia32_cmpq128_mask
UcV2OiV2OiIiUc
__builtin_ia32_cmpw128_mask
UcV8sV8sIiUc
__builtin_ia32_cmpb256_mask
UiV32cV32cIiUi
__builtin_ia32_cmpd256_mask
UcV8iV8iIiUc
__builtin_ia32_cmpq256_mask
UcV4OiV4OiIiUc
__builtin_ia32_cmpw256_mask
UsV16sV16sIiUs
__builtin_ia32_cmpb512_mask
UOiV64cV64cIiUOi
__builtin_ia32_cmpd512_mask
UsV16iV16iIiUs
__builtin_ia32_cmpq512_mask
UcV8OiV8OiIiUc
__builtin_ia32_cmpw512_mask
UiV32sV32sIiUi
__builtin_ia32_ucmpb128_mask
__builtin_ia32_ucmpd128_mask
__builtin_ia32_ucmpq128_mask
__builtin_ia32_ucmpw128_mask
__builtin_ia32_ucmpb256_mask
__builtin_ia32_ucmpd256_mask
__builtin_ia32_ucmpq256_mask
__builtin_ia32_ucmpw256_mask
__builtin_ia32_ucmpb512_mask
__builtin_ia32_ucmpd512_mask
__builtin_ia32_ucmpq512_mask
__builtin_ia32_ucmpw512_mask
__builtin_ia32_pabsb512
V64cV64c
__builtin_ia32_pabsw512
V32sV32s
__builtin_ia32_packssdw512
V32sV16iV16i
__builtin_ia32_packsswb512
V64cV32sV32s
__builtin_ia32_packusdw512
__builtin_ia32_packuswb512
__builtin_ia32_paddsb512
__builtin_ia32_paddsw512
V32sV32sV32s
__builtin_ia32_paddusb512
__builtin_ia32_paddusw512
__builtin_ia32_pavgb512
__builtin_ia32_pavgw512
__builtin_ia32_pmaxsb512
__builtin_ia32_pmaxsw512
__builtin_ia32_pmaxub512
__builtin_ia32_pmaxuw512
__builtin_ia32_pminsb512
__builtin_ia32_pminsw512
__builtin_ia32_pminub512
__builtin_ia32_pminuw512
__builtin_ia32_pshufb512
__builtin_ia32_psubsb512
__builtin_ia32_psubsw512
__builtin_ia32_psubusb512
__builtin_ia32_psubusw512
__builtin_ia32_vpconflictdi_128
avx512cd,avx512vl
__builtin_ia32_vpconflictdi_256
V4OiV4Oi
__builtin_ia32_vpconflictsi_128
__builtin_ia32_vpconflictsi_256
__builtin_ia32_vpconflictdi_512
__builtin_ia32_vpconflictsi_512
__builtin_ia32_vplzcntd_512
__builtin_ia32_vplzcntq_512
__builtin_ia32_vpopcntd_128
avx512vpopcntdq,avx512vl
__builtin_ia32_vpopcntq_128
__builtin_ia32_vpopcntd_256
__builtin_ia32_vpopcntq_256
__builtin_ia32_vpopcntd_512
__builtin_ia32_vpopcntq_512
__builtin_ia32_vpopcntb_128
avx512vl,avx512bitalg
__builtin_ia32_vpopcntw_128
__builtin_ia32_vpopcntb_256
__builtin_ia32_vpopcntw_256
__builtin_ia32_vpopcntb_512
__builtin_ia32_vpopcntw_512
__builtin_ia32_vpshufbitqmb128_mask
UsV16cV16cUs
__builtin_ia32_vpshufbitqmb256_mask
UiV32cV32cUi
__builtin_ia32_vpshufbitqmb512_mask
UOiV64cV64cUOi
__builtin_ia32_pmulhrsw512
__builtin_ia32_pmulhuw512
__builtin_ia32_pmulhw512
__builtin_ia32_addpd512
__builtin_ia32_addps512
__builtin_ia32_divpd512
__builtin_ia32_divps512
__builtin_ia32_mulpd512
__builtin_ia32_mulps512
__builtin_ia32_subpd512
__builtin_ia32_subps512
__builtin_ia32_pmaddubsw512
V32sV64cV64c
__builtin_ia32_pmaddwd512
V16iV32sV32s
__builtin_ia32_addss_round_mask
__builtin_ia32_divss_round_mask
__builtin_ia32_mulss_round_mask
__builtin_ia32_subss_round_mask
__builtin_ia32_maxss_round_mask
__builtin_ia32_minss_round_mask
__builtin_ia32_addsd_round_mask
__builtin_ia32_divsd_round_mask
__builtin_ia32_mulsd_round_mask
__builtin_ia32_subsd_round_mask
__builtin_ia32_maxsd_round_mask
__builtin_ia32_minsd_round_mask
__builtin_ia32_compressdf128_mask
V2dV2dV2dUc
__builtin_ia32_compressdf256_mask
V4dV4dV4dUc
__builtin_ia32_compressdi128_mask
V2OiV2OiV2OiUc
__builtin_ia32_compressdi256_mask
V4OiV4OiV4OiUc
__builtin_ia32_compresshi128_mask
V8sV8sV8sUc
avx512vl,avx512vbmi2
__builtin_ia32_compresshi256_mask
V16sV16sV16sUs
__builtin_ia32_compressqi128_mask
V16cV16cV16cUs
__builtin_ia32_compressqi256_mask
V32cV32cV32cUi
__builtin_ia32_compresssf128_mask
V4fV4fV4fUc
__builtin_ia32_compresssf256_mask
V8fV8fV8fUc
__builtin_ia32_compresssi128_mask
V4iV4iV4iUc
__builtin_ia32_compresssi256_mask
V8iV8iV8iUc
__builtin_ia32_compressstoredf128_mask
vV2d*V2dUc
__builtin_ia32_compressstoredf256_mask
vV4d*V4dUc
__builtin_ia32_compressstoredi128_mask
vV2Oi*V2OiUc
__builtin_ia32_compressstoredi256_mask
vV4Oi*V4OiUc
__builtin_ia32_compressstorehi128_mask
vV8s*V8sUc
__builtin_ia32_compressstorehi256_mask
vV16s*V16sUs
__builtin_ia32_compressstoreqi128_mask
vV16c*V16cUs
__builtin_ia32_compressstoreqi256_mask
vV32c*V32cUi
__builtin_ia32_compressstoresf128_mask
vV4f*V4fUc
__builtin_ia32_compressstoresf256_mask
vV8f*V8fUc
__builtin_ia32_compressstoresi128_mask
vV4i*V4iUc
__builtin_ia32_compressstoresi256_mask
vV8i*V8iUc
__builtin_ia32_cvtpd2dq128_mask
V4iV2dV4iUc
__builtin_ia32_cvtpd2ps_mask
V4fV2dV4fUc
__builtin_ia32_cvtpd2udq128_mask
__builtin_ia32_cvtpd2udq256_mask
V4iV4dV4iUc
__builtin_ia32_cvtps2udq128_mask
V4iV4fV4iUc
__builtin_ia32_cvtps2udq256_mask
V8iV8fV8iUc
__builtin_ia32_cvttpd2dq128_mask
__builtin_ia32_cvttpd2udq128_mask
__builtin_ia32_cvttpd2udq256_mask
__builtin_ia32_cvttps2udq128_mask
__builtin_ia32_cvttps2udq256_mask
__builtin_ia32_expanddf128_mask
__builtin_ia32_expanddf256_mask
__builtin_ia32_expanddi128_mask
__builtin_ia32_expanddi256_mask
__builtin_ia32_expandhi128_mask
__builtin_ia32_expandhi256_mask
__builtin_ia32_expandqi128_mask
__builtin_ia32_expandqi256_mask
__builtin_ia32_expandloaddf128_mask
V2dV2dC*V2dUc
__builtin_ia32_expandloaddf256_mask
V4dV4dC*V4dUc
__builtin_ia32_expandloaddi128_mask
V4iV2OiC*V2OiUc
__builtin_ia32_expandloaddi256_mask
V4OiV4OiC*V4OiUc
__builtin_ia32_expandloadhi128_mask
V8sV8sC*V8sUc
__builtin_ia32_expandloadhi256_mask
V16sV16sC*V16sUs
__builtin_ia32_expandloadqi128_mask
V16cV16cC*V16cUs
__builtin_ia32_expandloadqi256_mask
V32cV32cC*V32cUi
__builtin_ia32_expandloadsf128_mask
V4fV4fC*V4fUc
__builtin_ia32_expandloadsf256_mask
V8fV8fC*V8fUc
__builtin_ia32_expandloadsi128_mask
V4iV4iC*V4iUc
__builtin_ia32_expandloadsi256_mask
V8iV8iC*V8iUc
__builtin_ia32_expandsf128_mask
__builtin_ia32_expandsf256_mask
__builtin_ia32_expandsi128_mask
__builtin_ia32_expandsi256_mask
__builtin_ia32_getexppd128_mask
__builtin_ia32_getexppd256_mask
__builtin_ia32_getexpps128_mask
__builtin_ia32_getexpps256_mask
__builtin_ia32_pabsq128
__builtin_ia32_pabsq256
__builtin_ia32_pmaxsq128
__builtin_ia32_pmaxsq256
__builtin_ia32_pmaxuq128
__builtin_ia32_pmaxuq256
__builtin_ia32_pminsq128
__builtin_ia32_pminsq256
__builtin_ia32_pminuq128
__builtin_ia32_pminuq256
__builtin_ia32_rndscalepd_128_mask
V2dV2dIiV2dUc
__builtin_ia32_rndscalepd_256_mask
V4dV4dIiV4dUc
__builtin_ia32_rndscaleps_128_mask
V4fV4fIiV4fUc
__builtin_ia32_rndscaleps_256_mask
V8fV8fIiV8fUc
__builtin_ia32_scalefpd128_mask
__builtin_ia32_scalefpd256_mask
V4dV4dV4dV4dUc
__builtin_ia32_scalefps128_mask
__builtin_ia32_scalefps256_mask
V8fV8fV8fV8fUc
__builtin_ia32_scatterdiv2df
vv*UcV2OiV2dIi
__builtin_ia32_scatterdiv2di
vv*UcV2OiV2OiIi
__builtin_ia32_scatterdiv4df
vv*UcV4OiV4dIi
__builtin_ia32_scatterdiv4di
vv*UcV4OiV4OiIi
__builtin_ia32_scatterdiv4sf
vv*UcV2OiV4fIi
__builtin_ia32_scatterdiv4si
vv*UcV2OiV4iIi
__builtin_ia32_scatterdiv8sf
vv*UcV4OiV4fIi
__builtin_ia32_scatterdiv8si
vv*UcV4OiV4iIi
__builtin_ia32_scattersiv2df
vv*UcV4iV2dIi
__builtin_ia32_scattersiv2di
vv*UcV4iV2OiIi
__builtin_ia32_scattersiv4df
vv*UcV4iV4dIi
__builtin_ia32_scattersiv4di
vv*UcV4iV4OiIi
__builtin_ia32_scattersiv4sf
vv*UcV4iV4fIi
__builtin_ia32_scattersiv4si
vv*UcV4iV4iIi
__builtin_ia32_scattersiv8sf
vv*UcV8iV8fIi
__builtin_ia32_scattersiv8si
vv*UcV8iV8iIi
__builtin_ia32_vpermi2vard128
__builtin_ia32_vpermi2vard256
__builtin_ia32_vpermi2vard512
__builtin_ia32_vpermi2varpd128
V2dV2dV2OiV2d
__builtin_ia32_vpermi2varpd256
V4dV4dV4OiV4d
__builtin_ia32_vpermi2varpd512
V8dV8dV8OiV8d
__builtin_ia32_vpermi2varps128
V4fV4fV4iV4f
__builtin_ia32_vpermi2varps256
V8fV8fV8iV8f
__builtin_ia32_vpermi2varps512
V16fV16fV16iV16f
__builtin_ia32_vpermi2varq128
V2OiV2OiV2OiV2Oi
__builtin_ia32_vpermi2varq256
V4OiV4OiV4OiV4Oi
__builtin_ia32_vpermi2varq512
V8OiV8OiV8OiV8Oi
__builtin_ia32_vpermi2varqi128
avx512vbmi,avx512vl
__builtin_ia32_vpermi2varqi256
__builtin_ia32_vpermi2varqi512
V64cV64cV64cV64c
__builtin_ia32_vpermi2varhi128
__builtin_ia32_vpermi2varhi256
V16sV16sV16sV16s
__builtin_ia32_vpermi2varhi512
V32sV32sV32sV32s
__builtin_ia32_vpshldd128
__builtin_ia32_vpshldd256
__builtin_ia32_vpshldd512
__builtin_ia32_vpshldq128
__builtin_ia32_vpshldq256
__builtin_ia32_vpshldq512
__builtin_ia32_vpshldw128
__builtin_ia32_vpshldw256
__builtin_ia32_vpshldw512
V32sV32sV32sIi
__builtin_ia32_vpshldvd128
__builtin_ia32_vpshldvd256
__builtin_ia32_vpshldvd512
__builtin_ia32_vpshldvq128
__builtin_ia32_vpshldvq256
__builtin_ia32_vpshldvq512
__builtin_ia32_vpshldvw128
__builtin_ia32_vpshldvw256
__builtin_ia32_vpshldvw512
__builtin_ia32_vpshrdvd128
__builtin_ia32_vpshrdvd256
__builtin_ia32_vpshrdvd512
__builtin_ia32_vpshrdvq128
__builtin_ia32_vpshrdvq256
__builtin_ia32_vpshrdvq512
__builtin_ia32_vpshrdvw128
__builtin_ia32_vpshrdvw256
__builtin_ia32_vpshrdvw512
__builtin_ia32_vpshrdd128
__builtin_ia32_vpshrdd256
__builtin_ia32_vpshrdd512
__builtin_ia32_vpshrdq128
__builtin_ia32_vpshrdq256
__builtin_ia32_vpshrdq512
__builtin_ia32_vpshrdw128
__builtin_ia32_vpshrdw256
__builtin_ia32_vpshrdw512
__builtin_ia32_pmovswb512_mask
V32cV32sV32cUi
__builtin_ia32_pmovuswb512_mask
__builtin_ia32_pmovwb512_mask
__builtin_ia32_cvtpd2qq128_mask
V2OiV2dV2OiUc
avx512vl,avx512dq
__builtin_ia32_cvtpd2qq256_mask
V4OiV4dV4OiUc
__builtin_ia32_cvtpd2uqq128_mask
__builtin_ia32_cvtpd2uqq256_mask
__builtin_ia32_cvtps2qq128_mask
V2OiV4fV2OiUc
__builtin_ia32_cvtps2qq256_mask
V4OiV4fV4OiUc
__builtin_ia32_cvtps2uqq128_mask
__builtin_ia32_cvtps2uqq256_mask
__builtin_ia32_cvtqq2ps128_mask
V4fV2OiV4fUc
__builtin_ia32_cvttpd2qq128_mask
__builtin_ia32_cvttpd2qq256_mask
__builtin_ia32_cvttpd2uqq128_mask
__builtin_ia32_cvttpd2uqq256_mask
__builtin_ia32_cvttps2qq128_mask
__builtin_ia32_cvttps2qq256_mask
__builtin_ia32_cvttps2uqq128_mask
__builtin_ia32_cvttps2uqq256_mask
__builtin_ia32_cvtuqq2ps128_mask
__builtin_ia32_rangepd128_mask
V2dV2dV2dIiV2dUc
__builtin_ia32_rangepd256_mask
V4dV4dV4dIiV4dUc
__builtin_ia32_rangeps128_mask
V4fV4fV4fIiV4fUc
__builtin_ia32_rangeps256_mask
V8fV8fV8fIiV8fUc
__builtin_ia32_rangesd128_round_mask
V2dV2dV2dV2dUcIiIi
__builtin_ia32_rangess128_round_mask
V4fV4fV4fV4fUcIiIi
__builtin_ia32_reducepd128_mask
__builtin_ia32_reducepd256_mask
__builtin_ia32_reduceps128_mask
__builtin_ia32_reduceps256_mask
__builtin_ia32_reducesd_mask
__builtin_ia32_reducess_mask
__builtin_ia32_pmovswb128_mask
V16cV8sV16cUc
__builtin_ia32_pmovswb256_mask
V16cV16sV16cUs
__builtin_ia32_pmovuswb128_mask
__builtin_ia32_pmovuswb256_mask
__builtin_ia32_pmovwb128_mask
__builtin_ia32_cvtpd2qq512_mask
V8OiV8dV8OiUcIi
__builtin_ia32_cvtpd2uqq512_mask
__builtin_ia32_cvtps2qq512_mask
V8OiV8fV8OiUcIi
__builtin_ia32_cvtps2uqq512_mask
__builtin_ia32_cvtqq2pd512_mask
V8dV8OiV8dUcIi
__builtin_ia32_cvtqq2ps512_mask
V8fV8OiV8fUcIi
__builtin_ia32_cvttpd2qq512_mask
__builtin_ia32_cvttpd2uqq512_mask
__builtin_ia32_cvttps2qq512_mask
__builtin_ia32_cvttps2uqq512_mask
__builtin_ia32_cvtuqq2pd512_mask
__builtin_ia32_cvtuqq2ps512_mask
__builtin_ia32_rangepd512_mask
V8dV8dV8dIiV8dUcIi
__builtin_ia32_rangeps512_mask
V16fV16fV16fIiV16fUsIi
__builtin_ia32_reducepd512_mask
__builtin_ia32_reduceps512_mask
__builtin_ia32_prold512
V16iV16iIi
__builtin_ia32_prolq512
V8OiV8OiIi
__builtin_ia32_prold128
__builtin_ia32_prold256
__builtin_ia32_prolq128
__builtin_ia32_prolq256
__builtin_ia32_prolvd512
__builtin_ia32_prolvq512
__builtin_ia32_prord512
__builtin_ia32_prorq512
__builtin_ia32_prolvd128
__builtin_ia32_prolvd256
__builtin_ia32_prolvq128
__builtin_ia32_prolvq256
__builtin_ia32_prord128
__builtin_ia32_prord256
__builtin_ia32_prorq128
__builtin_ia32_prorq256
__builtin_ia32_prorvd512
__builtin_ia32_prorvq512
__builtin_ia32_prorvd128
__builtin_ia32_prorvd256
__builtin_ia32_prorvq128
__builtin_ia32_prorvq256
__builtin_ia32_pshufhw512
V32sV32sIi
__builtin_ia32_pshuflw512
__builtin_ia32_psllv32hi
__builtin_ia32_psllw512
V32sV32sV8s
__builtin_ia32_psllwi512
V32sV32si
__builtin_ia32_psllv16hi
avx512bw,avx512vl
__builtin_ia32_psllv8hi
__builtin_ia32_pslldi512
__builtin_ia32_psllqi512
V8OiV8Oii
__builtin_ia32_psrlv32hi
__builtin_ia32_psrlv16hi
__builtin_ia32_psrlv8hi
__builtin_ia32_psrldi512
__builtin_ia32_psrlqi512
__builtin_ia32_psrav32hi
__builtin_ia32_psrav16hi
__builtin_ia32_psrav8hi
__builtin_ia32_psravq128
__builtin_ia32_psravq256
__builtin_ia32_psraw512
__builtin_ia32_psrawi512
__builtin_ia32_psrlw512
__builtin_ia32_psrlwi512
__builtin_ia32_pslldqi512_byteshift
__builtin_ia32_psrldqi512_byteshift
__builtin_ia32_movdqa32load128_mask
__builtin_ia32_movdqa32load256_mask
__builtin_ia32_movdqa32load512_mask
V16iV16iC*V16iUs
__builtin_ia32_movdqa32store512_mask
vV16i*V16iUs
__builtin_ia32_movdqa64load512_mask
V8OiV8OiC*V8OiUc
__builtin_ia32_movdqa64store512_mask
vV8Oi*V8OiUc
__builtin_ia32_movdqa32store128_mask
__builtin_ia32_movdqa32store256_mask
__builtin_ia32_movdqa64load128_mask
V2OiV2OiC*V2OiUc
__builtin_ia32_movdqa64load256_mask
__builtin_ia32_movdqa64store128_mask
__builtin_ia32_movdqa64store256_mask
__builtin_ia32_vpmadd52huq512
__builtin_ia32_vpmadd52luq512
__builtin_ia32_vpmadd52huq128
avx512ifma,avx512vl
__builtin_ia32_vpmadd52huq256
__builtin_ia32_vpmadd52luq128
__builtin_ia32_vpmadd52luq256
__builtin_ia32_vcomisd
iV2dV2dIiIi
__builtin_ia32_vcomiss
iV4fV4fIiIi
__builtin_ia32_kunpckdi
UOiUOiUOi
__builtin_ia32_kunpcksi
__builtin_ia32_loaddquhi512_mask
V32sV32sC*V32sUi
__builtin_ia32_loaddquqi512_mask
V64cV64cC*V64cUOi
__builtin_ia32_fixupimmpd512_mask
V8dV8dV8dV8OiIiUcIi
__builtin_ia32_fixupimmpd512_maskz
__builtin_ia32_fixupimmps512_mask
V16fV16fV16fV16iIiUsIi
__builtin_ia32_fixupimmps512_maskz
__builtin_ia32_fixupimmsd_mask
V2dV2dV2dV2OiIiUcIi
__builtin_ia32_fixupimmsd_maskz
__builtin_ia32_fixupimmss_mask
V4fV4fV4fV4iIiUcIi
__builtin_ia32_fixupimmss_maskz
__builtin_ia32_getexpsd128_round_mask
__builtin_ia32_getexpss128_round_mask
__builtin_ia32_getmantsd_round_mask
V2dV2dV2dIiV2dUcIi
__builtin_ia32_getmantss_round_mask
V4fV4fV4fIiV4fUcIi
__builtin_ia32_loaddquhi128_mask
__builtin_ia32_loaddquhi256_mask
__builtin_ia32_loaddquqi128_mask
__builtin_ia32_loaddquqi256_mask
__builtin_ia32_fixupimmpd128_mask
V2dV2dV2dV2OiIiUc
__builtin_ia32_fixupimmpd128_maskz
__builtin_ia32_fixupimmpd256_mask
V4dV4dV4dV4OiIiUc
__builtin_ia32_fixupimmpd256_maskz
__builtin_ia32_fixupimmps128_mask
V4fV4fV4fV4iIiUc
__builtin_ia32_fixupimmps128_maskz
__builtin_ia32_fixupimmps256_mask
V8fV8fV8fV8iIiUc
__builtin_ia32_fixupimmps256_maskz
__builtin_ia32_loadapd128_mask
__builtin_ia32_loadsd128_mask
__builtin_ia32_loadapd256_mask
__builtin_ia32_loadaps128_mask
__builtin_ia32_loadss128_mask
__builtin_ia32_loadaps256_mask
__builtin_ia32_loaddqudi128_mask
__builtin_ia32_loaddqudi256_mask
__builtin_ia32_loaddqusi128_mask
__builtin_ia32_loaddqusi256_mask
__builtin_ia32_loadupd128_mask
__builtin_ia32_loadupd256_mask
__builtin_ia32_loadups128_mask
__builtin_ia32_loadups256_mask
__builtin_ia32_storedquhi512_mask
vV32s*V32sUi
__builtin_ia32_storedquqi512_mask
vV64c*V64cUOi
__builtin_ia32_storedquhi128_mask
__builtin_ia32_storedquhi256_mask
__builtin_ia32_storedquqi128_mask
__builtin_ia32_storedquqi256_mask
__builtin_ia32_storeapd128_mask
__builtin_ia32_storesd128_mask
__builtin_ia32_storeapd256_mask
__builtin_ia32_storeaps128_mask
__builtin_ia32_storess128_mask
__builtin_ia32_storeaps256_mask
__builtin_ia32_storedqudi128_mask
__builtin_ia32_storedqudi256_mask
__builtin_ia32_storedqusi128_mask
__builtin_ia32_storedqusi256_mask
__builtin_ia32_storeupd128_mask
__builtin_ia32_storeupd256_mask
__builtin_ia32_storeups128_mask
__builtin_ia32_storeups256_mask
__builtin_ia32_rcp14pd128_mask
__builtin_ia32_rcp14pd256_mask
__builtin_ia32_rcp14ps128_mask
__builtin_ia32_rcp14ps256_mask
__builtin_ia32_vplzcntd_128
__builtin_ia32_vplzcntd_256
__builtin_ia32_vplzcntq_128
__builtin_ia32_vplzcntq_256
__builtin_ia32_vcvtsd2si32
iV2dIi
__builtin_ia32_vcvtsd2usi32
UiV2dIi
__builtin_ia32_vcvtss2si32
iV4fIi
__builtin_ia32_vcvtss2usi32
UiV4fIi
__builtin_ia32_vcvttsd2si32
__builtin_ia32_vcvttsd2usi32
__builtin_ia32_vcvttss2si32
__builtin_ia32_vcvttss2usi32
__builtin_ia32_vpermilpd512
__builtin_ia32_vpermilps512
__builtin_ia32_vpermilvarpd512
V8dV8dV8Oi
__builtin_ia32_vpermilvarps512
V16fV16fV16i
__builtin_ia32_rndscalesd_round_mask
__builtin_ia32_rndscaless_round_mask
__builtin_ia32_scalefpd512_mask
__builtin_ia32_scalefps512_mask
__builtin_ia32_scalefsd_round_mask
__builtin_ia32_scalefss_round_mask
__builtin_ia32_psradi512
__builtin_ia32_psraqi512
__builtin_ia32_psraq128
__builtin_ia32_psraq256
__builtin_ia32_psraqi128
__builtin_ia32_psraqi256
__builtin_ia32_pslld512
V16iV16iV4i
__builtin_ia32_psllq512
V8OiV8OiV2Oi
__builtin_ia32_psllv16si
__builtin_ia32_psllv8di
__builtin_ia32_psrad512
__builtin_ia32_psraq512
__builtin_ia32_psrav16si
__builtin_ia32_psrav8di
__builtin_ia32_psrld512
__builtin_ia32_psrlq512
__builtin_ia32_psrlv16si
__builtin_ia32_psrlv8di
__builtin_ia32_pternlogd512_mask
V16iV16iV16iV16iIiUs
__builtin_ia32_pternlogd512_maskz
__builtin_ia32_pternlogq512_mask
V8OiV8OiV8OiV8OiIiUc
__builtin_ia32_pternlogq512_maskz
__builtin_ia32_pternlogd128_mask
V4iV4iV4iV4iIiUc
__builtin_ia32_pternlogd128_maskz
__builtin_ia32_pternlogd256_mask
V8iV8iV8iV8iIiUc
__builtin_ia32_pternlogd256_maskz
__builtin_ia32_pternlogq128_mask
V2OiV2OiV2OiV2OiIiUc
__builtin_ia32_pternlogq128_maskz
__builtin_ia32_pternlogq256_mask
V4OiV4OiV4OiV4OiIiUc
__builtin_ia32_pternlogq256_maskz
__builtin_ia32_shuf_f32x4
__builtin_ia32_shuf_f64x2
__builtin_ia32_shuf_i32x4
__builtin_ia32_shuf_i64x2
__builtin_ia32_shufpd512
__builtin_ia32_shufps512
__builtin_ia32_shuf_f32x4_256
__builtin_ia32_shuf_f64x2_256
__builtin_ia32_shuf_i32x4_256
__builtin_ia32_shuf_i64x2_256
__builtin_ia32_sqrtsd_round_mask
__builtin_ia32_sqrtss_round_mask
__builtin_ia32_rsqrt14pd128_mask
__builtin_ia32_rsqrt14pd256_mask
__builtin_ia32_rsqrt14ps128_mask
__builtin_ia32_rsqrt14ps256_mask
__builtin_ia32_cvtb2mask512
UOiV64c
__builtin_ia32_cvtmask2b512
V64cUOi
__builtin_ia32_cvtmask2w512
V32sUi
__builtin_ia32_cvtd2mask512
UsV16i
__builtin_ia32_cvtmask2d512
V16iUs
__builtin_ia32_cvtmask2q512
V8OiUc
__builtin_ia32_cvtq2mask512
UcV8Oi
__builtin_ia32_cvtb2mask128
UsV16c
__builtin_ia32_cvtb2mask256
UiV32c
__builtin_ia32_cvtmask2b128
V16cUs
__builtin_ia32_cvtmask2b256
V32cUi
__builtin_ia32_cvtmask2w128
V8sUc
__builtin_ia32_cvtmask2w256
V16sUs
__builtin_ia32_cvtd2mask128
UcV4i
avx512dq,avx512vl
__builtin_ia32_cvtd2mask256
UcV8i
__builtin_ia32_cvtmask2d128
V4iUc
__builtin_ia32_cvtmask2d256
V8iUc
__builtin_ia32_cvtmask2q128
V2OiUc
__builtin_ia32_cvtmask2q256
V4OiUc
__builtin_ia32_cvtq2mask128
UcV2Oi
__builtin_ia32_cvtq2mask256
UcV4Oi
__builtin_ia32_pmovsdb512_mask
V16cV16iV16cUs
__builtin_ia32_pmovsdb512mem_mask
vV16c*V16iUs
__builtin_ia32_pmovswb512mem_mask
vV32c*V32sUi
__builtin_ia32_pmovsdw512_mask
V16sV16iV16sUs
__builtin_ia32_pmovsdw512mem_mask
vV16s*V16iUs
__builtin_ia32_pmovsqb512_mask
V16cV8OiV16cUc
__builtin_ia32_pmovsqb512mem_mask
vV16c*V8OiUc
__builtin_ia32_pmovsqd512_mask
V8iV8OiV8iUc
__builtin_ia32_pmovsqd512mem_mask
vV8i*V8OiUc
__builtin_ia32_pmovsqw512_mask
V8sV8OiV8sUc
__builtin_ia32_pmovsqw512mem_mask
vV8s*V8OiUc
__builtin_ia32_pmovsdb128_mask
V16cV4iV16cUc
__builtin_ia32_pmovsdb128mem_mask
vV16c*V4iUc
__builtin_ia32_pmovswb128mem_mask
vV16c*V8sUc
__builtin_ia32_pmovsdb256_mask
V16cV8iV16cUc
__builtin_ia32_pmovsdb256mem_mask
vV16c*V8iUc
__builtin_ia32_pmovswb256mem_mask
vV16c*V16sUs
__builtin_ia32_pmovsdw128_mask
V8sV4iV8sUc
__builtin_ia32_pmovsdw128mem_mask
vV8s*V4iUc
__builtin_ia32_pmovsdw256_mask
V8sV8iV8sUc
__builtin_ia32_pmovsdw256mem_mask
vV8s*V8iUc
__builtin_ia32_pmovsqb128_mask
V16cV2OiV16cUc
__builtin_ia32_pmovsqb128mem_mask
vV16c*V2OiUc
__builtin_ia32_pmovsqb256_mask
V16cV4OiV16cUc
__builtin_ia32_pmovsqb256mem_mask
vV16c*V4OiUc
__builtin_ia32_pmovsqd128_mask
V4iV2OiV4iUc
__builtin_ia32_pmovsqd128mem_mask
vV4i*V2OiUc
__builtin_ia32_pmovsqd256_mask
V4iV4OiV4iUc
__builtin_ia32_pmovsqd256mem_mask
vV4i*V4OiUc
__builtin_ia32_pmovsqw128_mask
V8sV2OiV8sUc
__builtin_ia32_pmovsqw128mem_mask
vV8s*V2OiUc
__builtin_ia32_pmovsqw256_mask
V8sV4OiV8sUc
__builtin_ia32_pmovsqw256mem_mask
vV8s*V4OiUc
__builtin_ia32_pmovusdb512_mask
__builtin_ia32_pmovusdb512mem_mask
__builtin_ia32_pmovuswb512mem_mask
__builtin_ia32_pmovusdw512_mask
__builtin_ia32_pmovusdw512mem_mask
__builtin_ia32_pmovusqb512_mask
__builtin_ia32_pmovusqb512mem_mask
__builtin_ia32_pmovusqd512_mask
__builtin_ia32_pmovusqd512mem_mask
__builtin_ia32_pmovusqw512_mask
__builtin_ia32_pmovusqw512mem_mask
__builtin_ia32_pmovusdb128_mask
__builtin_ia32_pmovusdb128mem_mask
__builtin_ia32_pmovuswb128mem_mask
__builtin_ia32_pmovusdb256_mask
__builtin_ia32_pmovusdb256mem_mask
__builtin_ia32_pmovuswb256mem_mask
__builtin_ia32_pmovusdw128_mask
__builtin_ia32_pmovusdw128mem_mask
__builtin_ia32_pmovusdw256_mask
__builtin_ia32_pmovusdw256mem_mask
__builtin_ia32_pmovusqb128_mask
__builtin_ia32_pmovusqb128mem_mask
__builtin_ia32_pmovusqb256_mask
__builtin_ia32_pmovusqb256mem_mask
__builtin_ia32_pmovusqd128_mask
__builtin_ia32_pmovusqd128mem_mask
__builtin_ia32_pmovusqd256_mask
__builtin_ia32_pmovusqd256mem_mask
__builtin_ia32_pmovusqw128_mask
__builtin_ia32_pmovusqw128mem_mask
__builtin_ia32_pmovusqw256_mask
__builtin_ia32_pmovusqw256mem_mask
__builtin_ia32_pmovdb512_mask
__builtin_ia32_pmovdb512mem_mask
__builtin_ia32_pmovwb512mem_mask
__builtin_ia32_pmovdw512_mask
__builtin_ia32_pmovdw512mem_mask
__builtin_ia32_pmovqb512_mask
__builtin_ia32_pmovqb512mem_mask
__builtin_ia32_pmovqd512_mask
__builtin_ia32_pmovqd512mem_mask
__builtin_ia32_pmovqw512_mask
__builtin_ia32_pmovqw512mem_mask
__builtin_ia32_pmovdb128_mask
__builtin_ia32_pmovwb128mem_mask
__builtin_ia32_pmovdb128mem_mask
__builtin_ia32_pmovdb256_mask
__builtin_ia32_pmovdb256mem_mask
__builtin_ia32_pmovwb256mem_mask
__builtin_ia32_pmovdw128_mask
__builtin_ia32_pmovdw128mem_mask
__builtin_ia32_pmovdw256_mask
__builtin_ia32_pmovdw256mem_mask
__builtin_ia32_pmovqb128_mask
__builtin_ia32_pmovqb128mem_mask
__builtin_ia32_pmovqb256_mask
__builtin_ia32_pmovqb256mem_mask
__builtin_ia32_pmovqd128_mask
__builtin_ia32_pmovqd128mem_mask
__builtin_ia32_pmovqd256mem_mask
__builtin_ia32_pmovqw128_mask
__builtin_ia32_pmovqw128mem_mask
__builtin_ia32_pmovqw256_mask
__builtin_ia32_pmovqw256mem_mask
__builtin_ia32_extractf32x8_mask
V8fV16fIiV8fUc
__builtin_ia32_extractf64x2_512_mask
V2dV8dIiV2dUc
__builtin_ia32_extracti32x8_mask
V8iV16iIiV8iUc
__builtin_ia32_extracti64x2_512_mask
V2OiV8OiIiV2OiUc
__builtin_ia32_extracti32x4_mask
V4iV16iIiV4iUc
__builtin_ia32_extracti64x4_mask
V4OiV8OiIiV4OiUc
__builtin_ia32_extractf64x2_256_mask
V2dV4dIiV2dUc
__builtin_ia32_extracti64x2_256_mask
V2OiV4OiIiV2OiUc
__builtin_ia32_extractf32x4_256_mask
V4fV8fIiV4fUc
__builtin_ia32_extracti32x4_256_mask
V4iV8iIiV4iUc
__builtin_ia32_insertf32x8
V16fV16fV8fIi
__builtin_ia32_insertf64x2_512
V8dV8dV2dIi
__builtin_ia32_inserti32x8
V16iV16iV8iIi
__builtin_ia32_inserti64x2_512
V8OiV8OiV2OiIi
__builtin_ia32_insertf64x4
V8dV8dV4dIi
__builtin_ia32_inserti64x4
V8OiV8OiV4OiIi
__builtin_ia32_insertf64x2_256
__builtin_ia32_inserti64x2_256
__builtin_ia32_insertf32x4_256
__builtin_ia32_inserti32x4_256
__builtin_ia32_insertf32x4
V16fV16fV4fIi
__builtin_ia32_inserti32x4
V16iV16iV4iIi
__builtin_ia32_getmantpd128_mask
__builtin_ia32_getmantpd256_mask
__builtin_ia32_getmantps128_mask
__builtin_ia32_getmantps256_mask
__builtin_ia32_getmantpd512_mask
__builtin_ia32_getmantps512_mask
__builtin_ia32_getexppd512_mask
__builtin_ia32_getexpps512_mask
__builtin_ia32_vfmaddss3_mask
__builtin_ia32_vfmaddss3_maskz
__builtin_ia32_vfmaddss3_mask3
__builtin_ia32_vfmaddsd3_mask
__builtin_ia32_vfmaddsd3_maskz
__builtin_ia32_vfmaddsd3_mask3
__builtin_ia32_vfmsubsd3_mask3
__builtin_ia32_vfmsubss3_mask3
__builtin_ia32_permdf512
__builtin_ia32_permdi512
__builtin_ia32_permvarhi512
__builtin_ia32_permvardf512
__builtin_ia32_permvardi512
__builtin_ia32_permvarsf512
__builtin_ia32_permvarsi512
__builtin_ia32_permvarqi512
__builtin_ia32_permvarqi128
__builtin_ia32_permvarqi256
__builtin_ia32_permvarhi128
__builtin_ia32_permvarhi256
__builtin_ia32_permvardf256
__builtin_ia32_permvardi256
__builtin_ia32_fpclasspd128_mask
UcV2dIiUc
__builtin_ia32_fpclasspd256_mask
UcV4dIiUc
__builtin_ia32_fpclassps128_mask
UcV4fIiUc
__builtin_ia32_fpclassps256_mask
UcV8fIiUc
__builtin_ia32_fpclassps512_mask
UsV16fIiUs
__builtin_ia32_fpclasspd512_mask
UcV8dIiUc
__builtin_ia32_fpclasssd_mask
__builtin_ia32_fpclassss_mask
__builtin_ia32_kaddqi
__builtin_ia32_kaddhi
__builtin_ia32_kaddsi
__builtin_ia32_kadddi
__builtin_ia32_kandqi
__builtin_ia32_kandhi
__builtin_ia32_kandsi
__builtin_ia32_kanddi
__builtin_ia32_kandnqi
__builtin_ia32_kandnhi
__builtin_ia32_kandnsi
__builtin_ia32_kandndi
__builtin_ia32_korqi
__builtin_ia32_korhi
__builtin_ia32_korsi
__builtin_ia32_kordi
__builtin_ia32_kortestcqi
iUcUc
__builtin_ia32_kortestzqi
__builtin_ia32_kortestchi
iUsUs
__builtin_ia32_kortestzhi
__builtin_ia32_kortestcsi
iUiUi
__builtin_ia32_kortestzsi
__builtin_ia32_kortestcdi
iUOiUOi
__builtin_ia32_kortestzdi
__builtin_ia32_ktestcqi
__builtin_ia32_ktestzqi
__builtin_ia32_ktestchi
__builtin_ia32_ktestzhi
__builtin_ia32_ktestcsi
__builtin_ia32_ktestzsi
__builtin_ia32_ktestcdi
__builtin_ia32_ktestzdi
__builtin_ia32_kunpckhi
__builtin_ia32_kxnorqi
__builtin_ia32_kxnorhi
__builtin_ia32_kxnorsi
__builtin_ia32_kxnordi
__builtin_ia32_kxorqi
__builtin_ia32_kxorhi
__builtin_ia32_kxorsi
__builtin_ia32_kxordi
__builtin_ia32_kshiftliqi
UcUcIUi
__builtin_ia32_kshiftlihi
UsUsIUi
__builtin_ia32_kshiftlisi
__builtin_ia32_kshiftlidi
UOiUOiIUi
__builtin_ia32_kshiftriqi
__builtin_ia32_kshiftrihi
__builtin_ia32_kshiftrisi
__builtin_ia32_kshiftridi
__builtin_ia32_kmovb
__builtin_ia32_kmovw
__builtin_ia32_kmovd
__builtin_ia32_kmovq
__builtin_ia32_palignr512
V64cV64cV64cIi
__builtin_ia32_dbpsadbw128
V8sV16cV16cIi
__builtin_ia32_dbpsadbw256
V16sV32cV32cIi
__builtin_ia32_dbpsadbw512
V32sV64cV64cIi
__builtin_ia32_psadbw512
V8OiV64cV64c
__builtin_ia32_compressdf512_mask
__builtin_ia32_compressdi512_mask
V8OiV8OiV8OiUc
__builtin_ia32_compresshi512_mask
V32sV32sV32sUi
__builtin_ia32_compressqi512_mask
V64cV64cV64cUOi
__builtin_ia32_compresssf512_mask
__builtin_ia32_compresssi512_mask
V16iV16iV16iUs
__builtin_ia32_cmpsd_mask
UcV2dV2dIiUcIi
__builtin_ia32_cmpss_mask
UcV4fV4fIiUcIi
__builtin_ia32_pshufd512
__builtin_ia32_expanddf512_mask
__builtin_ia32_expanddi512_mask
__builtin_ia32_expandhi512_mask
__builtin_ia32_expandqi512_mask
__builtin_ia32_expandloaddf512_mask
__builtin_ia32_expandloaddi512_mask
__builtin_ia32_expandloadhi512_mask
__builtin_ia32_expandloadqi512_mask
__builtin_ia32_expandloadsf512_mask
__builtin_ia32_expandloadsi512_mask
__builtin_ia32_expandsf512_mask
__builtin_ia32_expandsi512_mask
__builtin_ia32_cvtps2pd512_mask
V8dV8fV8dUcIi
__builtin_ia32_compressstoredf512_mask
__builtin_ia32_compressstoredi512_mask
__builtin_ia32_compressstorehi512_mask
__builtin_ia32_compressstoreqi512_mask
__builtin_ia32_compressstoresf512_mask
__builtin_ia32_compressstoresi512_mask
__builtin_ia32_vcvtph2ps_mask
V4fV8sV4fUc
__builtin_ia32_vcvtph2ps256_mask
V8fV8sV8fUc
__builtin_ia32_vcvtps2ph_mask
V8sV4fIiV8sUc
__builtin_ia32_vcvtps2ph256_mask
V8sV8fIiV8sUc
__builtin_ia32_cvtw2mask512
UiV32s
__builtin_ia32_cvtw2mask128
UcV8s
__builtin_ia32_cvtw2mask256
UsV16s
__builtin_ia32_cvtsd2ss_round_mask
V4fV4fV2dV4fUcIi
__builtin_ia32_cvtsi2ss32
V4fV4fiIi
__builtin_ia32_cvtss2sd_round_mask
V2dV2dV4fV2dUcIi
__builtin_ia32_cvtusi2ss32
V4fV4fUiIi
__builtin_ia32_vpmultishiftqb512
__builtin_ia32_vpmultishiftqb128
__builtin_ia32_vpmultishiftqb256
__builtin_ia32_cvtne2ps2bf16_128
V8sV4fV4f
avx512bf16,avx512vl
__builtin_ia32_cvtne2ps2bf16_256
V16sV8fV8f
__builtin_ia32_cvtne2ps2bf16_512
V32sV16fV16f
__builtin_ia32_cvtneps2bf16_128_mask
V8sV4fV8sUc
__builtin_ia32_cvtneps2bf16_256_mask
V8sV8fV8sUc
__builtin_ia32_cvtneps2bf16_512_mask
V16sV16fV16sUs
__builtin_ia32_dpbf16ps_128
V4fV4fV4iV4i
__builtin_ia32_dpbf16ps_256
V8fV8fV8iV8i
__builtin_ia32_dpbf16ps_512
V16fV16fV16iV16i
__builtin_ia32_cvtsbf162ss_32
__builtin_ia32_vp2intersect_q_512
vV8OiV8OiUc*Uc*
__builtin_ia32_vp2intersect_q_256
vV4OiV4OiUc*Uc*
avx512vp2intersect,avx512vl
__builtin_ia32_vp2intersect_q_128
vV2OiV2OiUc*Uc*
__builtin_ia32_vp2intersect_d_512
vV16iV16iUs*Us*
__builtin_ia32_vp2intersect_d_256
vV8iV8iUc*Uc*
__builtin_ia32_vp2intersect_d_128
vV4iV4iUc*Uc*
__builtin_ia32_selectb_128
V16cUsV16cV16c
__builtin_ia32_selectb_256
V32cUiV32cV32c
__builtin_ia32_selectb_512
V64cUOiV64cV64c
__builtin_ia32_selectw_128
V8sUcV8sV8s
__builtin_ia32_selectw_256
V16sUsV16sV16s
__builtin_ia32_selectw_512
V32sUiV32sV32s
__builtin_ia32_selectd_128
V4iUcV4iV4i
__builtin_ia32_selectd_256
V8iUcV8iV8i
__builtin_ia32_selectd_512
V16iUsV16iV16i
__builtin_ia32_selectq_128
V2OiUcV2OiV2Oi
__builtin_ia32_selectq_256
V4OiUcV4OiV4Oi
__builtin_ia32_selectq_512
V8OiUcV8OiV8Oi
__builtin_ia32_selectps_128
V4fUcV4fV4f
__builtin_ia32_selectps_256
V8fUcV8fV8f
__builtin_ia32_selectps_512
V16fUsV16fV16f
__builtin_ia32_selectpd_128
V2dUcV2dV2d
__builtin_ia32_selectpd_256
V4dUcV4dV4d
__builtin_ia32_selectpd_512
V8dUcV8dV8d
__builtin_ia32_selectss_128
__builtin_ia32_selectsd_128
__builtin_ia32_reduce_add_d512
iV16i
__builtin_ia32_reduce_add_q512
OiV8Oi
__builtin_ia32_reduce_and_d512
__builtin_ia32_reduce_and_q512
__builtin_ia32_reduce_fadd_pd512
ddV8d
__builtin_ia32_reduce_fadd_ps512
ffV16f
__builtin_ia32_reduce_fmul_pd512
__builtin_ia32_reduce_fmul_ps512
__builtin_ia32_reduce_mul_d512
__builtin_ia32_reduce_mul_q512
__builtin_ia32_reduce_or_d512
__builtin_ia32_reduce_or_q512
__builtin_ia32_reduce_smax_d512
__builtin_ia32_reduce_smax_q512
__builtin_ia32_reduce_smin_d512
__builtin_ia32_reduce_smin_q512
__builtin_ia32_reduce_umax_d512
__builtin_ia32_reduce_umax_q512
__builtin_ia32_reduce_umin_d512
__builtin_ia32_reduce_umin_q512
__builtin_ia32_monitorx
__builtin_ia32_mwaitx
vUiUiUi
__builtin_ia32_umonitor
__builtin_ia32_umwait
UcUiUiUi
__builtin_ia32_tpause
__builtin_ia32_clzero
__builtin_ia32_cldemote
__builtin_ia32_directstore_u32
vUi*Ui
__builtin_ia32_movdir64b
vv*vC*
__builtin_ia32_ptwrite32
__builtin_ia32_invpcid
__builtin_ia32_enqcmd
Ucv*vC*
__builtin_ia32_enqcmds
__builtin_ia32_loadiwkey
vV2OiV2OiV2OiUi
__builtin_ia32_encodekey128_u32
UiUiV2Oiv*
__builtin_ia32_encodekey256_u32
UiUiV2OiV2Oiv*
__builtin_ia32_aesenc128kl_u8
UcV2Oi*V2OivC*
__builtin_ia32_aesenc256kl_u8
__builtin_ia32_aesdec128kl_u8
__builtin_ia32_aesdec256kl_u8
__builtin_ia32_aesencwide128kl_u8
UcV2Oi*V2OiC*vC*
kl,widekl
__builtin_ia32_aesencwide256kl_u8
__builtin_ia32_aesdecwide128kl_u8
__builtin_ia32_aesdecwide256kl_u8
__builtin_ia32_serialize
__builtin_ia32_xsusldtrk
__builtin_ia32_xresldtrk
_ReadBarrier
_WriteBarrier
__emul
__emulu
ULLiUiUi
__stosb
vUc*Ucz
__int2c
__ud2
__readfsbyte
UcUNi
__readfsword
UsUNi
__readfsdword
UNiUNi
__readfsqword
ULLiUNi
__readgsbyte
__readgsword
__readgsdword
__readgsqword
WiWiD*Wi
WiWiD*
__mulh
__umulh
_mul128
LLiLLiLLiLLi*
_umul128
ULLiULLiULLiULLi*
__faststorefence
__shiftleft128
ULLiULLiULLiUc
__shiftright128
__builtin_ia32_readeflags_u64
__builtin_ia32_writeeflags_u64
vUOi
__builtin_ia32_cvtss2si64
OiV4f
__builtin_ia32_cvttss2si64
__builtin_ia32_cvtsd2si64
OiV2d
__builtin_ia32_cvttsd2si64
__builtin_ia32_movnti64
vOi*Oi
__builtin_ia32_vec_ext_v2di
OiV2OiIi
__builtin_ia32_vec_set_v2di
V2OiV2OiOiIi
__builtin_ia32_crc32di
__builtin_ia32_vec_ext_v4di
OiV4OiIi
__builtin_ia32_vec_set_v4di
V4OiV4OiOiIi
__builtin_ia32_rdfsbase32
__builtin_ia32_rdfsbase64
__builtin_ia32_rdgsbase32
__builtin_ia32_rdgsbase64
__builtin_ia32_wrfsbase32
__builtin_ia32_wrfsbase64
__builtin_ia32_wrgsbase32
__builtin_ia32_wrgsbase64
__builtin_ia32_fxrstor64
__builtin_ia32_fxsave64
__builtin_ia32_xsave64
__builtin_ia32_xrstor64
__builtin_ia32_xsaveopt64
__builtin_ia32_xrstors64
__builtin_ia32_xsavec64
__builtin_ia32_xsaves64
__builtin_ia32_incsspq
__builtin_ia32_rdsspq
__builtin_ia32_wrssq
vUOiv*
__builtin_ia32_wrussq
__builtin_ia32_addcarryx_u64
UcUcUOiUOiUOi*
__builtin_ia32_subborrow_u64
__builtin_ia32_rdrand64_step
UiUOi*
__builtin_ia32_rdseed64_step
__builtin_ia32_lzcnt_u64
__builtin_ia32_bextr_u64
__builtin_ia32_tzcnt_u64
__builtin_ia32_bzhi_di
__builtin_ia32_pdep_di
__builtin_ia32_pext_di
__builtin_ia32_bextri_u64
UOiUOiIUOi
__builtin_ia32_lwpins64
UcUOiUiIUi
__builtin_ia32_lwpval64
vUOiUiIUi
__builtin_ia32_vcvtsd2si64
OiV2dIi
__builtin_ia32_vcvtsd2usi64
UOiV2dIi
__builtin_ia32_vcvtss2si64
OiV4fIi
__builtin_ia32_vcvtss2usi64
UOiV4fIi
__builtin_ia32_vcvttsd2si64
__builtin_ia32_vcvttsd2usi64
__builtin_ia32_vcvttss2si64
__builtin_ia32_vcvttss2usi64
__builtin_ia32_cvtsi2sd64
V2dV2dOiIi
__builtin_ia32_cvtsi2ss64
V4fV4fOiIi
__builtin_ia32_cvtusi2sd64
V2dV2dUOiIi
__builtin_ia32_cvtusi2ss64
V4fV4fUOiIi
__builtin_ia32_directstore_u64
__builtin_ia32_clui
__builtin_ia32_stui
__builtin_ia32_testui
__builtin_ia32_senduipi
vUWi
__builtin_ia32_tileloadd64_internal
V256iUsUsvC*z
__builtin_ia32_tdpbssd_internal
V256iUsUsUsV256iV256iV256i
__builtin_ia32_tilestored64_internal
vUsUsv*zV256i
__builtin_ia32_tilezero_internal
V256iUsUs
__builtin_ia32_tile_loadconfig
__builtin_ia32_tile_storeconfig
__builtin_ia32_tilerelease
__builtin_ia32_tilezero
__builtin_ia32_tileloadd64
vIUcvC*z
__builtin_ia32_tileloaddt164
__builtin_ia32_tilestored64
vIUcv*z
__builtin_ia32_tdpbssd
vIUcIUcIUc
__builtin_ia32_tdpbsud
__builtin_ia32_tdpbusd
__builtin_ia32_tdpbuud
__builtin_ia32_tdpbf16ps
__builtin_ia32_ptwrite64
__builtin_bitrev
__builtin_getid
__builtin_getps
__builtin_setps
__XS1B__
auto
break
case
char
const
continue
default
double
else
enum
extern
float
goto
inline
_ExtInt
long
register
restrict
return
short
signed
sizeof
static
struct
switch
typedef
union
unsigned
void
volatile
while
_Alignas
_Alignof
_Atomic
_Bool
_Complex
_Generic
_Imaginary
_Noreturn
_Static_assert
_Thread_local
__func__
__objc_yes
__objc_no
__ptrauth
__ptrauth_restricted_intptr
bool
catch
class
const_cast
delete
dynamic_cast
explicit
export
false
friend
mutable
namespace
operator
private
protected
public
reinterpret_cast
static_cast
template
this
throw
true
typename
typeid
using
virtual
wchar_t
alignas
alignof
char16_t
char32_t
constexpr
decltype
noexcept
nullptr
static_assert
thread_local
concept
requires
co_await
co_return
co_yield
module
import
consteval
constinit
char8_t
_Float16
_Accum
_Fract
_Sat
_Decimal32
_Decimal64
_Decimal128
__null
__alignof
__attribute
__builtin_choose_expr
__builtin_offsetof
__builtin_FILE
__builtin_FUNCTION
__builtin_LINE
__builtin_COLUMN
__builtin_types_compatible_p
__builtin_va_arg
__extension__
__float128
__imag
__int128
__label__
__real
__thread
__FUNCTION__
__PRETTY_FUNCTION__
__auto_type
typeof
__FUNCDNAME__
__FUNCSIG__
L__FUNCTION__
L__FUNCSIG__
__is_interface_class
__is_sealed
__is_destructible
__is_trivially_destructible
__is_nothrow_destructible
__is_nothrow_assignable
__is_constructible
__is_nothrow_constructible
__is_assignable
__has_nothrow_move_assign
__has_trivial_move_assign
__has_trivial_move_constructor
__has_nothrow_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_abstract
__is_aggregate
__is_base_of
__is_class
__is_convertible_to
__is_empty
__is_enum
__is_final
__is_literal
__is_pod
__is_polymorphic
__is_standard_layout
__is_trivial
__is_trivially_assignable
__is_trivially_constructible
__is_trivially_copyable
__is_union
__has_unique_object_representations
__underlying_type
__reference_binds_to_temporary
__is_lvalue_expr
__is_rvalue_expr
__is_arithmetic
__is_floating_point
__is_integral
__is_complete_type
__is_void
__is_array
__is_function
__is_reference
__is_lvalue_reference
__is_rvalue_reference
__is_fundamental
__is_object
__is_scalar
__is_compound
__is_pointer
__is_member_object_pointer
__is_member_function_pointer
__is_member_pointer
__is_const
__is_volatile
__is_signed
__is_unsigned
__is_same
__is_convertible
__array_rank
__array_extent
__private_extern__
__module_private__
__builtin_ptrauth_type_discriminator
__builtin_xnu_type_signature
__declspec
__cdecl
__stdcall
__fastcall
__thiscall
__regcall
__vectorcall
__forceinline
__unaligned
__super
__global
__local
__constant
__private
__generic
__kernel
__read_only
__write_only
__read_write
__builtin_astype
vec_step
image1d_t
image1d_array_t
image1d_buffer_t
image2d_t
image2d_array_t
image2d_depth_t
image2d_array_depth_t
image2d_msaa_t
image2d_array_msaa_t
image2d_msaa_depth_t
image2d_array_msaa_depth_t
image3d_t
pipe
addrspace_cast
__builtin_omp_required_simd_align
__pascal
__vector
__pixel
__bool
__bf16
half
__bridge
__bridge_transfer
__bridge_retained
__bridge_retain
__covariant
__contravariant
__kindof
_Nonnull
_Nullable
_Nullable_result
_Null_unspecified
__ptr64
__ptr32
__sptr
__uptr
__w64
__uuidof
__try
__finally
__leave
__int64
__if_exists
__if_not_exists
__single_inheritance
__multiple_inheritance
__virtual_inheritance
__interface
__builtin_convertvector
__builtin_bit_cast
__builtin_available
__unknown_anytype
__builtin_unsafe_forge_bidi_indexable
__builtin_unsafe_forge_single
unknown
code_completion
comment
identifier
raw_identifier
numeric_constant
char_constant
wide_char_constant
utf8_char_constant
utf16_char_constant
utf32_char_constant
string_literal
wide_string_literal
header_name
utf8_string_literal
utf16_string_literal
utf32_string_literal
l_square
r_square
l_paren
r_paren
l_brace
r_brace
period
ellipsis
ampamp
ampequal
star
starequal
plus
plusplus
plusequal
minus
arrow
minusminus
minusequal
tilde
exclaim
exclaimequal
slash
slashequal
percent
percentequal
less
lessless
lessequal
lesslessequal
spaceship
greater
greatergreater
greaterequal
greatergreaterequal
caret
caretequal
pipepipe
pipeequal
question
colon
semi
equal
equalequal
comma
hash
hashhash
hashat
periodstar
arrowstar
coloncolon
lesslessless
greatergreatergreater
caretcaret
annot_cxxscope
annot_typename
annot_template_id
annot_non_type
annot_non_type_undeclared
annot_non_type_dependent
annot_overload_set
annot_primary_expr
annot_decltype
annot_pragma_unused
annot_pragma_vis
annot_pragma_pack
annot_pragma_parser_crash
annot_pragma_captured
annot_pragma_dump
annot_pragma_msstruct
annot_pragma_align
annot_pragma_weak
annot_pragma_weakalias
annot_pragma_redefine_extname
annot_pragma_fp_contract
annot_pragma_fenv_access
annot_pragma_fenv_round
annot_pragma_float_control
annot_pragma_ms_pointers_to_members
annot_pragma_ms_vtordisp
annot_pragma_ms_pragma
annot_pragma_opencl_extension
annot_pragma_openmp
annot_pragma_openmp_end
annot_pragma_loop_hint
annot_pragma_fp
annot_pragma_attribute
annot_module_include
annot_module_begin
annot_module_end
annot_header_unit
__is_interface_class
__is_sealed
__is_destructible
__is_trivially_destructible
__is_nothrow_destructible
__has_nothrow_move_assign
__has_trivial_move_assign
__has_trivial_move_constructor
__has_nothrow_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_abstract
__is_aggregate
__is_class
__is_empty
__is_enum
__is_final
__is_literal
__is_pod
__is_polymorphic
__is_standard_layout
__is_trivial
__is_trivially_copyable
__is_union
__has_unique_object_representations
__is_arithmetic
__is_floating_point
__is_integral
__is_complete_type
__is_void
__is_array
__is_function
__is_reference
__is_lvalue_reference
__is_rvalue_reference
__is_fundamental
__is_object
__is_scalar
__is_compound
__is_pointer
__is_member_object_pointer
__is_member_function_pointer
__is_member_pointer
__is_const
__is_volatile
__is_signed
__is_unsigned
__builtin_types_compatible_p
__is_nothrow_assignable
__is_assignable
__is_base_of
__is_convertible_to
__is_trivially_assignable
__reference_binds_to_temporary
__is_same
__is_convertible
__is_constructible
__is_nothrow_constructible
__is_trivially_constructible
__array_rank
__array_extent
sizeof
alignof
__alignof
__builtin_ptrauth_type_discriminator
__builtin_xnu_type_signature
vec_step
__builtin_omp_required_simd_align
clang-1300.0.18.4
clang
 version 13.0.0
LLVM 13.0.0
no-format
-Wfatal-errors
-Wfatal-errors=
-Rno-
xray_always_instrument
arg1
always
xray_never_instrument
never
 = comdat 
 = type 
; Materializable
; Function Attrs: 
define 
 addrspace(
 section "
 partition "
 align 
 gc "
 prefix 
 prologue 
 personality 
!<unknown kind #
<empty name> 
!DIExpression(
!DILocation(
dso_local 
protected 
dllimport 
dllexport 
avr_intrcc 
avr_signalcc 
sideeffect 
alignstack 
inteldialect 
 comdat
<null operand!>
; uselistorder directives
_bb 
, { 
<badref>:
 No predecessors!
 preds = 
; ModuleID = '
source_filename = "
target datalayout = "
target triple = "
module asm "
attributes #
 = { 
distinct 
<temporary!> 
!DIGlobalVariableExpression(
!GenericDINode(
operands: {
tag: 
!DISubrange(
!DIEnumerator(
!DIBasicType(
!DIDerivedType(
!DICompositeType(
!DISubroutineType(
!DIFile(
checksumkind: 
!DICompileUnit(
!DISubprogram(
!DILexicalBlock(
!DILexicalBlockFile(
!DINamespace(
!DIModule(
!DITemplateTypeParameter(
!DITemplateValueParameter(
!DIGlobalVariable(
!DILocalVariable(
!DILabel(
!DIObjCProperty(
!DIImportedEntity(
!DIMacro(
type: 
!DIMacroFile(
!DICommonBlock(
!DIStringType(
!DIGenericSubrange(
 = !{
%"type 
<badref> = 
musttail 
tail 
notail 
          cleanup
          catch 
          filter 
 within 
] unwind 
to caller
 void
 unwind 
          to 
inalloca 
swifterror 
, align 
, addrspace(
 fast
 reassoc
 nnan
 ninf
 nsz
 arcp
 contract
 afn
 nuw
 nsw
 exact
 inbounds
 syncscope("
not_atomic
consume
 x i32> 
i32 
 ; (
external 
addrspace(
externally_initialized 
constant 
global 
, section "
, partition "
thread_local(localdynamic) 
thread_local(initialexec) 
thread_local(localexec) 
alias 
ifunc 
 <<NULL ALIASEE>>
blockaddress(
dso_local_equivalent 
inrange 
<placeholder or erroneous Constant>
omp_no_openmp
omp_no_openmp_routines
omp_no_parallelism
alwaysinline
argmemonly
builtin
cold
convergent
immarg
inalloca
inreg
inaccessiblememonly
inaccessiblemem_or_argmemonly
inlinehint
jumptable
minsize
naked
nest
noalias
nobuiltin
nocallback
nocapture
nocf_check
noduplicate
nofree
noimplicitfloat
noinline
nomerge
norecurse
noredzone
noreturn
nosync
noundef
nounwind
nonlazybind
nonnull
null_pointer_is_valid
optforfuzzing
optsize
optnone
readnone
readonly
returned
returns_twice
signext
safestack
sanitize_address
sanitize_hwaddress
sanitize_memtag
sanitize_memory
sanitize_thread
shadowcallstack
speculatable
speculative_load_hardening
sspreq
sspstrong
strictfp
swiftasync
swifterror
swiftself
uwtable
willreturn
writeonly
zeroext
byref
byval
mustprogress
preallocated
sret
align
allocsize
dereferenceable
dereferenceable_or_null
alignstack
none
objc_retainAutoreleaseReturnValue
cvtps2pd
abs.cond
max.cond
min.cond
ctlz.trunc
ctpop
ctpop.trunc
Broken module found, compilation aborted!
clang.arc.use
objc_autoreleaseReturnValue
objc_copyWeak
objc_destroyWeak
objc_initWeak
objc_loadWeak
objc_loadWeakRetained
objc_moveWeak
objc_retainAutorelease
objc_retainAutoreleasedReturnValue
objc_retainBlock
objc_storeStrong
objc_storeWeak
objc_unsafeClaimAutoreleasedReturnValue
objc_retainedObject
objc_unretainedObject
objc_unretainedPointer
objc_retain_autorelease
objc_arc_annotation_topdown_bbstart
objc_arc_annotation_topdown_bbend
objc_arc_annotation_bottomup_bbstart
objc_arc_annotation_bottomup_bbend
Swift ABI Version
Swift Major Version
Swift Minor Version
-p270:32:32-p271:32:32-p272:64:64
(e-m:[a-z](-p:32:32)?)(-[if]64:.*$)
no-frame-pointer-elim
no-frame-pointer-elim-non-leaf
null-pointer-is-valid
llvm.ctlz.
^arm\.neon\.vld([1234]|[234]lane)\.v[a-z0-9]*$
.p0i8
^arm\.neon\.vst([1234]|[234]lane)\.v[a-z0-9]*$
^experimental.vector.reduce.([a-z]+)\.[a-z][0-9]+
^experimental.vector.reduce.v2.([a-z]+)\.[fi][0-9]+
sse41.dppd
sse41.mpsadbw
avx2.mpsadbw
avx512.mask.cmp.pd.128
llvm.loop.vectorize.
empty-set
Compiler has made implicit assumption that TypeSize is not scalable. This may or may not lead to broken code.
use-dbg-addr
Use llvm.dbg.addr for all local variables
llvm.dbg.cu
decltype(nullptr)
Address space 0 can never be non-integral
Invalid address space, must be a 24bit integer
Missing size specification for pointer in datalayout string
Invalid pointer size of 0 bytes
Missing alignment specification for pointer in datalayout string
Pointer ABI alignment must be a power of 2
Pointer preferred alignment must be a power of 2
Invalid index size of 0 bytes
Sized aggregate specification in datalayout string
Missing alignment specification in datalayout string
ABI alignment specification must be >0 for non-aggregate types
Invalid ABI alignment, must be a 16bit integer
Invalid ABI alignment, must be a power of 2
Invalid preferred alignment, must be a 16bit integer
Invalid preferred alignment, must be a power of 2
Zero width native integer type in datalayout string
Alignment is neither 0 nor a power of 2
Unknown function pointer alignment type in datalayout string
Unexpected trailing characters after mangling specifier in datalayout string
Expected mangling specifier in datalayout string
Unknown mangling specifier in datalayout string
Unknown mangling in datalayout string
Unknown specifier in datalayout string
Invalid bit width, must be a 24bit integer
Preferred alignment cannot be less than the ABI alignment
Compiler has made implicit assumption that TypeSize is not scalable. This may or may not lead to broken code.
Trailing separator in datalayout string
Expected token before separator in datalayout string
Invalid address space, must be a 24-bit integer
Allocation failed
not a number, or does not fit in an unsigned int
number of bits must be a byte width multiple
DIFlagZero
DIFlagPrivate
DIFlagProtected
DIFlagPublic
DIFlagFwdDecl
DIFlagAppleBlock
DIFlagReservedBit4
DIFlagVirtual
DIFlagArtificial
DIFlagExplicit
DIFlagPrototyped
DIFlagObjcClassComplete
DIFlagObjectPointer
DIFlagVector
DIFlagStaticMember
DIFlagLValueReference
DIFlagRValueReference
DIFlagExportSymbols
DIFlagSingleInheritance
DIFlagMultipleInheritance
DIFlagVirtualInheritance
DIFlagIntroducedVirtual
DIFlagBitField
DIFlagNoReturn
DIFlagTypePassByValue
DIFlagTypePassByReference
DIFlagEnumClass
DIFlagThunk
DIFlagNonTrivial
DIFlagBigEndian
DIFlagLittleEndian
DIFlagAllCallsDescribed
DIFlagIndirectVirtualBase
CSK_MD5
CSK_SHA1
CSK_SHA256
NoDebug
FullDebug
LineTablesOnly
DebugDirectivesOnly
Default
None
DISPFlagZero
DISPFlagVirtual
DISPFlagPureVirtual
DISPFlagLocalToUnit
DISPFlagDefinition
DISPFlagOptimized
DISPFlagPure
DISPFlagElemental
DISPFlagRecursive
DISPFlagMainSubprogram
DISPFlagDeleted
DISPFlagObjCDirect
pass-remarks
Enable optimization remarks from passes whose name match the given regular expression
pass-remarks-missed
Enable missed optimization remarks from passes whose name match the given regular expression
pass-remarks-analysis
Enable optimization analysis remarks from passes whose name match the given regular expression
Invalid regular expression '
' in -pass-remarks: 
 at line 
) in 
ignoring debug info with an invalid version (
ignoring invalid debug info in 
<UNKNOWN LOCATION>
 (hotness: 
verify-dom-info
Verify dominator info (time consuming)
DominatorTree for function: 
Dominator Tree Construction
round.dynamic
round.tonearest
round.tonearestaway
round.downward
round.upward
round.towardzero
fpexcept.ignore
fpexcept.maytrap
fpexcept.strict
llvm.
aarch64
nvvm
s390
xcore
function_entry_count
Compiler has made implicit assumption that TypeSize is not scalable. This may or may not lead to broken code.
not_intrinsic
llvm.abs
llvm.addressofreturnaddress
llvm.adjust.trampoline
llvm.annotation
llvm.assume
llvm.bitreverse
llvm.bswap
llvm.call.preallocated.arg
llvm.call.preallocated.setup
llvm.call.preallocated.teardown
llvm.canonicalize
llvm.ceil
llvm.clear_cache
llvm.codeview.annotation
llvm.convert.from.fp16
llvm.convert.to.fp16
llvm.copysign
llvm.coro.alloc
llvm.coro.alloca.alloc
llvm.coro.alloca.free
llvm.coro.alloca.get
llvm.coro.async.context.alloc
llvm.coro.async.context.dealloc
llvm.coro.async.resume
llvm.coro.async.size.replace
llvm.coro.begin
llvm.coro.destroy
llvm.coro.done
llvm.coro.end
llvm.coro.end.async
llvm.coro.frame
llvm.coro.free
llvm.coro.id
llvm.coro.id.async
llvm.coro.id.retcon
llvm.coro.id.retcon.once
llvm.coro.noop
llvm.coro.param
llvm.coro.prepare.async
llvm.coro.prepare.retcon
llvm.coro.promise
llvm.coro.resume
llvm.coro.save
llvm.coro.size
llvm.coro.subfn.addr
llvm.coro.suspend
llvm.coro.suspend.async
llvm.coro.suspend.retcon
llvm.cos
llvm.ctlz
llvm.ctpop
llvm.cttz
llvm.dbg.addr
llvm.dbg.declare
llvm.dbg.label
llvm.dbg.value
llvm.debugtrap
llvm.donothing
llvm.eh.dwarf.cfa
llvm.eh.exceptioncode
llvm.eh.exceptionpointer
llvm.eh.recoverfp
llvm.eh.return.i32
llvm.eh.return.i64
llvm.eh.sjlj.callsite
llvm.eh.sjlj.functioncontext
llvm.eh.sjlj.longjmp
llvm.eh.sjlj.lsda
llvm.eh.sjlj.setjmp
llvm.eh.sjlj.setup.dispatch
llvm.eh.typeid.for
llvm.eh.unwind.init
llvm.exp
llvm.exp2
llvm.expect
llvm.expect.with.probability
llvm.experimental.constrained.ceil
llvm.experimental.constrained.cos
llvm.experimental.constrained.exp
llvm.experimental.constrained.exp2
llvm.experimental.constrained.fadd
llvm.experimental.constrained.fcmp
llvm.experimental.constrained.fcmps
llvm.experimental.constrained.fdiv
llvm.experimental.constrained.floor
llvm.experimental.constrained.fma
llvm.experimental.constrained.fmul
llvm.experimental.constrained.fmuladd
llvm.experimental.constrained.fpext
llvm.experimental.constrained.fptosi
llvm.experimental.constrained.fptoui
llvm.experimental.constrained.fptrunc
llvm.experimental.constrained.frem
llvm.experimental.constrained.fsub
llvm.experimental.constrained.llrint
llvm.experimental.constrained.llround
llvm.experimental.constrained.log
llvm.experimental.constrained.log10
llvm.experimental.constrained.log2
llvm.experimental.constrained.lrint
llvm.experimental.constrained.lround
llvm.experimental.constrained.maximum
llvm.experimental.constrained.maxnum
llvm.experimental.constrained.minimum
llvm.experimental.constrained.minnum
llvm.experimental.constrained.nearbyint
llvm.experimental.constrained.pow
llvm.experimental.constrained.powi
llvm.experimental.constrained.rint
llvm.experimental.constrained.round
llvm.experimental.constrained.roundeven
llvm.experimental.constrained.sin
llvm.experimental.constrained.sitofp
llvm.experimental.constrained.sqrt
llvm.experimental.constrained.trunc
llvm.experimental.constrained.uitofp
llvm.experimental.deoptimize
llvm.experimental.gc.relocate
llvm.experimental.gc.result
llvm.experimental.gc.statepoint
llvm.experimental.guard
llvm.experimental.patchpoint.i64
llvm.experimental.patchpoint.void
llvm.experimental.stackmap
llvm.experimental.vector.extract
llvm.experimental.vector.insert
llvm.experimental.widenable.condition
llvm.fabs
llvm.floor
llvm.flt.rounds
llvm.fma
llvm.fmuladd
llvm.fptosi.sat
llvm.fptoui.sat
llvm.frameaddress
llvm.fshl
llvm.fshr
llvm.gcread
llvm.gcroot
llvm.gcwrite
llvm.get.active.lane.mask
llvm.get.dynamic.area.offset
llvm.hwasan.check.memaccess
llvm.hwasan.check.memaccess.shortgranules
llvm.icall.branch.funnel
llvm.init.trampoline
llvm.instrprof.increment
llvm.instrprof.increment.step
llvm.instrprof.value.profile
llvm.invariant.end
llvm.invariant.start
llvm.is.constant
llvm.launder.invariant.group
llvm.lifetime.end
llvm.lifetime.start
llvm.llrint
llvm.llround
llvm.load.relative
llvm.localaddress
llvm.localescape
llvm.localrecover
llvm.log
llvm.log10
llvm.log2
llvm.loop.decrement
llvm.loop.decrement.reg
llvm.lrint
llvm.lround
llvm.masked.compressstore
llvm.masked.expandload
llvm.masked.gather
llvm.masked.load
llvm.masked.scatter
llvm.masked.store
llvm.matrix.column.major.load
llvm.matrix.column.major.store
llvm.matrix.multiply
llvm.matrix.transpose
llvm.maximum
llvm.maxnum
llvm.memcpy
llvm.memcpy.element.unordered.atomic
llvm.memcpy.inline
llvm.memmove
llvm.memmove.element.unordered.atomic
llvm.memset
llvm.memset.element.unordered.atomic
llvm.minimum
llvm.minnum
llvm.mssa.exit.read
llvm.nearbyint
llvm.objc.arc.annotation.bottomup.bbend
llvm.objc.arc.annotation.bottomup.bbstart
llvm.objc.arc.annotation.topdown.bbend
llvm.objc.arc.annotation.topdown.bbstart
llvm.objc.autorelease
llvm.objc.autoreleasePoolPop
llvm.objc.autoreleasePoolPush
llvm.objc.autoreleaseReturnValue
llvm.objc.clang.arc.use
llvm.objc.copyWeak
llvm.objc.destroyWeak
llvm.objc.initWeak
llvm.objc.loadWeak
llvm.objc.loadWeakRetained
llvm.objc.moveWeak
llvm.objc.release
llvm.objc.retain
llvm.objc.retain.autorelease
llvm.objc.retainAutorelease
llvm.objc.retainAutoreleaseReturnValue
llvm.objc.retainAutoreleasedReturnValue
llvm.objc.retainBlock
llvm.objc.retainedObject
llvm.objc.storeStrong
llvm.objc.storeWeak
llvm.objc.sync.enter
llvm.objc.sync.exit
llvm.objc.unretainedObject
llvm.objc.unretainedPointer
llvm.objc.unsafeClaimAutoreleasedReturnValue
llvm.objectsize
llvm.pcmarker
llvm.pow
llvm.powi
llvm.prefetch
llvm.preserve.array.access.index
llvm.preserve.struct.access.index
llvm.preserve.union.access.index
llvm.pseudoprobe
llvm.ptr.annotation
llvm.ptrauth.auth
llvm.ptrauth.blend
llvm.ptrauth.resign
llvm.ptrauth.sign
llvm.ptrauth.sign.generic
llvm.ptrauth.strip
llvm.ptrmask
llvm.read_register
llvm.read_volatile_register
llvm.readcyclecounter
llvm.returnaddress
llvm.rint
llvm.round
llvm.roundeven
llvm.sadd.sat
llvm.sadd.with.overflow
llvm.sdiv.fix
llvm.sdiv.fix.sat
llvm.set.loop.iterations
llvm.sideeffect
llvm.sin
llvm.smax
llvm.smin
llvm.smul.fix
llvm.smul.fix.sat
llvm.smul.with.overflow
llvm.sponentry
llvm.sqrt
llvm.ssa.copy
llvm.sshl.sat
llvm.ssub.sat
llvm.ssub.with.overflow
llvm.stackguard
llvm.stackprotector
llvm.stackrestore
llvm.stacksave
llvm.start.loop.iterations
llvm.strip.invariant.group
llvm.swift.async.context.addr
llvm.test.set.loop.iterations
llvm.thread.pointer
llvm.trap
llvm.trunc
llvm.type.checked.load
llvm.type.test
llvm.uadd.sat
llvm.uadd.with.overflow
llvm.ubsantrap
llvm.udiv.fix
llvm.udiv.fix.sat
llvm.umax
llvm.umin
llvm.umul.fix
llvm.umul.fix.sat
llvm.umul.with.overflow
llvm.ushl.sat
llvm.usub.sat
llvm.usub.with.overflow
llvm.va_copy
llvm.va_end
llvm.va_start
llvm.var.annotation
llvm.vector.reduce.add
llvm.vector.reduce.and
llvm.vector.reduce.fadd
llvm.vector.reduce.fmax
llvm.vector.reduce.fmin
llvm.vector.reduce.fmul
llvm.vector.reduce.mul
llvm.vector.reduce.or
llvm.vector.reduce.smax
llvm.vector.reduce.smin
llvm.vector.reduce.umax
llvm.vector.reduce.umin
llvm.vector.reduce.xor
llvm.vp.add
llvm.vp.and
llvm.vp.ashr
llvm.vp.lshr
llvm.vp.mul
llvm.vp.or
llvm.vp.sdiv
llvm.vp.shl
llvm.vp.srem
llvm.vp.sub
llvm.vp.udiv
llvm.vp.urem
llvm.vp.xor
llvm.vscale
llvm.write_register
llvm.xray.customevent
llvm.xray.typedevent
llvm.aarch64.addg
llvm.aarch64.clrex
llvm.aarch64.cls
llvm.aarch64.cls64
llvm.aarch64.crc32b
llvm.aarch64.crc32cb
llvm.aarch64.crc32ch
llvm.aarch64.crc32cw
llvm.aarch64.crc32cx
llvm.aarch64.crc32h
llvm.aarch64.crc32w
llvm.aarch64.crc32x
llvm.aarch64.crypto.aesd
llvm.aarch64.crypto.aese
llvm.aarch64.crypto.aesimc
llvm.aarch64.crypto.aesmc
llvm.aarch64.crypto.sha1c
llvm.aarch64.crypto.sha1h
llvm.aarch64.crypto.sha1m
llvm.aarch64.crypto.sha1p
llvm.aarch64.crypto.sha1su0
llvm.aarch64.crypto.sha1su1
llvm.aarch64.crypto.sha256h
llvm.aarch64.crypto.sha256h2
llvm.aarch64.crypto.sha256su0
llvm.aarch64.crypto.sha256su1
llvm.aarch64.dmb
llvm.aarch64.dsb
llvm.aarch64.fjcvtzs
llvm.aarch64.get.fpcr
llvm.aarch64.gmi
llvm.aarch64.hint
llvm.aarch64.irg
llvm.aarch64.irg.sp
llvm.aarch64.isb
llvm.aarch64.ldaxp
llvm.aarch64.ldaxr
llvm.aarch64.ldg
llvm.aarch64.ldxp
llvm.aarch64.ldxr
llvm.aarch64.neon.abs
llvm.aarch64.neon.addhn
llvm.aarch64.neon.addp
llvm.aarch64.neon.bfcvt
llvm.aarch64.neon.bfcvtn
llvm.aarch64.neon.bfcvtn2
llvm.aarch64.neon.bfdot
llvm.aarch64.neon.bfmlalb
llvm.aarch64.neon.bfmlalt
llvm.aarch64.neon.bfmmla
llvm.aarch64.neon.cls
llvm.aarch64.neon.fabd
llvm.aarch64.neon.facge
llvm.aarch64.neon.facgt
llvm.aarch64.neon.faddp
llvm.aarch64.neon.faddv
llvm.aarch64.neon.fcvtas
llvm.aarch64.neon.fcvtau
llvm.aarch64.neon.fcvtms
llvm.aarch64.neon.fcvtmu
llvm.aarch64.neon.fcvtns
llvm.aarch64.neon.fcvtnu
llvm.aarch64.neon.fcvtps
llvm.aarch64.neon.fcvtpu
llvm.aarch64.neon.fcvtxn
llvm.aarch64.neon.fcvtzs
llvm.aarch64.neon.fcvtzu
llvm.aarch64.neon.fmax
llvm.aarch64.neon.fmaxnm
llvm.aarch64.neon.fmaxnmp
llvm.aarch64.neon.fmaxnmv
llvm.aarch64.neon.fmaxp
llvm.aarch64.neon.fmaxv
llvm.aarch64.neon.fmin
llvm.aarch64.neon.fminnm
llvm.aarch64.neon.fminnmp
llvm.aarch64.neon.fminnmv
llvm.aarch64.neon.fminp
llvm.aarch64.neon.fminv
llvm.aarch64.neon.fmlal
llvm.aarch64.neon.fmlal2
llvm.aarch64.neon.fmlsl
llvm.aarch64.neon.fmlsl2
llvm.aarch64.neon.fmulx
llvm.aarch64.neon.frecpe
llvm.aarch64.neon.frecps
llvm.aarch64.neon.frecpx
llvm.aarch64.neon.frintn
llvm.aarch64.neon.frsqrte
llvm.aarch64.neon.frsqrts
llvm.aarch64.neon.ld1x2
llvm.aarch64.neon.ld1x3
llvm.aarch64.neon.ld1x4
llvm.aarch64.neon.ld2
llvm.aarch64.neon.ld2lane
llvm.aarch64.neon.ld2r
llvm.aarch64.neon.ld3
llvm.aarch64.neon.ld3lane
llvm.aarch64.neon.ld3r
llvm.aarch64.neon.ld4
llvm.aarch64.neon.ld4lane
llvm.aarch64.neon.ld4r
llvm.aarch64.neon.pmul
llvm.aarch64.neon.pmull
llvm.aarch64.neon.pmull64
llvm.aarch64.neon.raddhn
llvm.aarch64.neon.rbit
llvm.aarch64.neon.rshrn
llvm.aarch64.neon.rsubhn
llvm.aarch64.neon.sabd
llvm.aarch64.neon.saddlp
llvm.aarch64.neon.saddlv
llvm.aarch64.neon.saddv
llvm.aarch64.neon.scalar.sqxtn
llvm.aarch64.neon.scalar.sqxtun
llvm.aarch64.neon.scalar.uqxtn
llvm.aarch64.neon.sdot
llvm.aarch64.neon.shadd
llvm.aarch64.neon.shll
llvm.aarch64.neon.shsub
llvm.aarch64.neon.smax
llvm.aarch64.neon.smaxp
llvm.aarch64.neon.smaxv
llvm.aarch64.neon.smin
llvm.aarch64.neon.sminp
llvm.aarch64.neon.sminv
llvm.aarch64.neon.smmla
llvm.aarch64.neon.smull
llvm.aarch64.neon.sqabs
llvm.aarch64.neon.sqadd
llvm.aarch64.neon.sqdmulh
llvm.aarch64.neon.sqdmulh.lane
llvm.aarch64.neon.sqdmulh.laneq
llvm.aarch64.neon.sqdmull
llvm.aarch64.neon.sqdmulls.scalar
llvm.aarch64.neon.sqneg
llvm.aarch64.neon.sqrdmulh
llvm.aarch64.neon.sqrdmulh.lane
llvm.aarch64.neon.sqrdmulh.laneq
llvm.aarch64.neon.sqrshl
llvm.aarch64.neon.sqrshrn
llvm.aarch64.neon.sqrshrun
llvm.aarch64.neon.sqshl
llvm.aarch64.neon.sqshlu
llvm.aarch64.neon.sqshrn
llvm.aarch64.neon.sqshrun
llvm.aarch64.neon.sqsub
llvm.aarch64.neon.sqxtn
llvm.aarch64.neon.sqxtun
llvm.aarch64.neon.srhadd
llvm.aarch64.neon.srshl
llvm.aarch64.neon.sshl
llvm.aarch64.neon.sshll
llvm.aarch64.neon.st1x2
llvm.aarch64.neon.st1x3
llvm.aarch64.neon.st1x4
llvm.aarch64.neon.st2
llvm.aarch64.neon.st2lane
llvm.aarch64.neon.st3
llvm.aarch64.neon.st3lane
llvm.aarch64.neon.st4
llvm.aarch64.neon.st4lane
llvm.aarch64.neon.subhn
llvm.aarch64.neon.suqadd
llvm.aarch64.neon.tbl1
llvm.aarch64.neon.tbl2
llvm.aarch64.neon.tbl3
llvm.aarch64.neon.tbl4
llvm.aarch64.neon.tbx1
llvm.aarch64.neon.tbx2
llvm.aarch64.neon.tbx3
llvm.aarch64.neon.tbx4
llvm.aarch64.neon.uabd
llvm.aarch64.neon.uaddlp
llvm.aarch64.neon.uaddlv
llvm.aarch64.neon.uaddv
llvm.aarch64.neon.udot
llvm.aarch64.neon.uhadd
llvm.aarch64.neon.uhsub
llvm.aarch64.neon.umax
llvm.aarch64.neon.umaxp
llvm.aarch64.neon.umaxv
llvm.aarch64.neon.umin
llvm.aarch64.neon.uminp
llvm.aarch64.neon.uminv
llvm.aarch64.neon.ummla
llvm.aarch64.neon.umull
llvm.aarch64.neon.uqadd
llvm.aarch64.neon.uqrshl
llvm.aarch64.neon.uqrshrn
llvm.aarch64.neon.uqshl
llvm.aarch64.neon.uqshrn
llvm.aarch64.neon.uqsub
llvm.aarch64.neon.uqxtn
llvm.aarch64.neon.urecpe
llvm.aarch64.neon.urhadd
llvm.aarch64.neon.urshl
llvm.aarch64.neon.ursqrte
llvm.aarch64.neon.usdot
llvm.aarch64.neon.ushl
llvm.aarch64.neon.ushll
llvm.aarch64.neon.usmmla
llvm.aarch64.neon.usqadd
llvm.aarch64.neon.vcadd.rot270
llvm.aarch64.neon.vcadd.rot90
llvm.aarch64.neon.vcmla.rot0
llvm.aarch64.neon.vcmla.rot180
llvm.aarch64.neon.vcmla.rot270
llvm.aarch64.neon.vcmla.rot90
llvm.aarch64.neon.vcopy.lane
llvm.aarch64.neon.vcvtfp2fxs
llvm.aarch64.neon.vcvtfp2fxu
llvm.aarch64.neon.vcvtfp2hf
llvm.aarch64.neon.vcvtfxs2fp
llvm.aarch64.neon.vcvtfxu2fp
llvm.aarch64.neon.vcvthf2fp
llvm.aarch64.neon.vsli
llvm.aarch64.neon.vsri
llvm.aarch64.sdiv
llvm.aarch64.settag
llvm.aarch64.settag.zero
llvm.aarch64.sisd.fabd
llvm.aarch64.sisd.fcvtxn
llvm.aarch64.space
llvm.aarch64.stg
llvm.aarch64.stgp
llvm.aarch64.stlxp
llvm.aarch64.stlxr
llvm.aarch64.stxp
llvm.aarch64.stxr
llvm.aarch64.subp
llvm.aarch64.sve.abs
llvm.aarch64.sve.adclb
llvm.aarch64.sve.adclt
llvm.aarch64.sve.add
llvm.aarch64.sve.addhnb
llvm.aarch64.sve.addhnt
llvm.aarch64.sve.addp
llvm.aarch64.sve.adrb
llvm.aarch64.sve.adrd
llvm.aarch64.sve.adrh
llvm.aarch64.sve.adrw
llvm.aarch64.sve.aesd
llvm.aarch64.sve.aese
llvm.aarch64.sve.aesimc
llvm.aarch64.sve.aesmc
llvm.aarch64.sve.and
llvm.aarch64.sve.and.z
llvm.aarch64.sve.andv
llvm.aarch64.sve.asr
llvm.aarch64.sve.asr.wide
llvm.aarch64.sve.asrd
llvm.aarch64.sve.bcax
llvm.aarch64.sve.bdep.x
llvm.aarch64.sve.bext.x
llvm.aarch64.sve.bfdot
llvm.aarch64.sve.bfdot.lane
llvm.aarch64.sve.bfmlalb
llvm.aarch64.sve.bfmlalb.lane
llvm.aarch64.sve.bfmlalt
llvm.aarch64.sve.bfmlalt.lane
llvm.aarch64.sve.bfmmla
llvm.aarch64.sve.bgrp.x
llvm.aarch64.sve.bic
llvm.aarch64.sve.bic.z
llvm.aarch64.sve.brka
llvm.aarch64.sve.brka.z
llvm.aarch64.sve.brkb
llvm.aarch64.sve.brkb.z
llvm.aarch64.sve.brkn.z
llvm.aarch64.sve.brkpa.z
llvm.aarch64.sve.brkpb.z
llvm.aarch64.sve.bsl
llvm.aarch64.sve.bsl1n
llvm.aarch64.sve.bsl2n
llvm.aarch64.sve.cadd.x
llvm.aarch64.sve.cdot
llvm.aarch64.sve.cdot.lane
llvm.aarch64.sve.clasta
llvm.aarch64.sve.clasta.n
llvm.aarch64.sve.clastb
llvm.aarch64.sve.clastb.n
llvm.aarch64.sve.cls
llvm.aarch64.sve.clz
llvm.aarch64.sve.cmla.lane.x
llvm.aarch64.sve.cmla.x
llvm.aarch64.sve.cmpeq
llvm.aarch64.sve.cmpeq.wide
llvm.aarch64.sve.cmpge
llvm.aarch64.sve.cmpge.wide
llvm.aarch64.sve.cmpgt
llvm.aarch64.sve.cmpgt.wide
llvm.aarch64.sve.cmphi
llvm.aarch64.sve.cmphi.wide
llvm.aarch64.sve.cmphs
llvm.aarch64.sve.cmphs.wide
llvm.aarch64.sve.cmple.wide
llvm.aarch64.sve.cmplo.wide
llvm.aarch64.sve.cmpls.wide
llvm.aarch64.sve.cmplt.wide
llvm.aarch64.sve.cmpne
llvm.aarch64.sve.cmpne.wide
llvm.aarch64.sve.cnot
llvm.aarch64.sve.cnt
llvm.aarch64.sve.cntb
llvm.aarch64.sve.cntd
llvm.aarch64.sve.cnth
llvm.aarch64.sve.cntp
llvm.aarch64.sve.cntw
llvm.aarch64.sve.compact
llvm.aarch64.sve.convert.from.svbool
llvm.aarch64.sve.convert.to.svbool
llvm.aarch64.sve.dup
llvm.aarch64.sve.dup.x
llvm.aarch64.sve.dupq.lane
llvm.aarch64.sve.eor
llvm.aarch64.sve.eor.z
llvm.aarch64.sve.eor3
llvm.aarch64.sve.eorbt
llvm.aarch64.sve.eortb
llvm.aarch64.sve.eorv
llvm.aarch64.sve.ext
llvm.aarch64.sve.fabd
llvm.aarch64.sve.fabs
llvm.aarch64.sve.facge
llvm.aarch64.sve.facgt
llvm.aarch64.sve.fadd
llvm.aarch64.sve.fadda
llvm.aarch64.sve.faddp
llvm.aarch64.sve.faddv
llvm.aarch64.sve.fcadd
llvm.aarch64.sve.fcmla
llvm.aarch64.sve.fcmla.lane
llvm.aarch64.sve.fcmpeq
llvm.aarch64.sve.fcmpge
llvm.aarch64.sve.fcmpgt
llvm.aarch64.sve.fcmpne
llvm.aarch64.sve.fcmpuo
llvm.aarch64.sve.fcvt
llvm.aarch64.sve.fcvt.bf16f32
llvm.aarch64.sve.fcvt.f16f32
llvm.aarch64.sve.fcvt.f16f64
llvm.aarch64.sve.fcvt.f32f16
llvm.aarch64.sve.fcvt.f32f64
llvm.aarch64.sve.fcvt.f64f16
llvm.aarch64.sve.fcvt.f64f32
llvm.aarch64.sve.fcvtlt.f32f16
llvm.aarch64.sve.fcvtlt.f64f32
llvm.aarch64.sve.fcvtnt.bf16f32
llvm.aarch64.sve.fcvtnt.f16f32
llvm.aarch64.sve.fcvtnt.f32f64
llvm.aarch64.sve.fcvtx.f32f64
llvm.aarch64.sve.fcvtxnt.f32f64
llvm.aarch64.sve.fcvtzs
llvm.aarch64.sve.fcvtzs.i32f16
llvm.aarch64.sve.fcvtzs.i32f64
llvm.aarch64.sve.fcvtzs.i64f16
llvm.aarch64.sve.fcvtzs.i64f32
llvm.aarch64.sve.fcvtzu
llvm.aarch64.sve.fcvtzu.i32f16
llvm.aarch64.sve.fcvtzu.i32f64
llvm.aarch64.sve.fcvtzu.i64f16
llvm.aarch64.sve.fcvtzu.i64f32
llvm.aarch64.sve.fdiv
llvm.aarch64.sve.fdivr
llvm.aarch64.sve.fexpa.x
llvm.aarch64.sve.flogb
llvm.aarch64.sve.fmad
llvm.aarch64.sve.fmax
llvm.aarch64.sve.fmaxnm
llvm.aarch64.sve.fmaxnmp
llvm.aarch64.sve.fmaxnmv
llvm.aarch64.sve.fmaxp
llvm.aarch64.sve.fmaxv
llvm.aarch64.sve.fmin
llvm.aarch64.sve.fminnm
llvm.aarch64.sve.fminnmp
llvm.aarch64.sve.fminnmv
llvm.aarch64.sve.fminp
llvm.aarch64.sve.fminv
llvm.aarch64.sve.fmla
llvm.aarch64.sve.fmla.lane
llvm.aarch64.sve.fmlalb
llvm.aarch64.sve.fmlalb.lane
llvm.aarch64.sve.fmlalt
llvm.aarch64.sve.fmlalt.lane
llvm.aarch64.sve.fmls
llvm.aarch64.sve.fmls.lane
llvm.aarch64.sve.fmlslb
llvm.aarch64.sve.fmlslb.lane
llvm.aarch64.sve.fmlslt
llvm.aarch64.sve.fmlslt.lane
llvm.aarch64.sve.fmmla
llvm.aarch64.sve.fmsb
llvm.aarch64.sve.fmul
llvm.aarch64.sve.fmul.lane
llvm.aarch64.sve.fmulx
llvm.aarch64.sve.fneg
llvm.aarch64.sve.fnmad
llvm.aarch64.sve.fnmla
llvm.aarch64.sve.fnmls
llvm.aarch64.sve.fnmsb
llvm.aarch64.sve.frecpe.x
llvm.aarch64.sve.frecps.x
llvm.aarch64.sve.frecpx
llvm.aarch64.sve.frinta
llvm.aarch64.sve.frinti
llvm.aarch64.sve.frintm
llvm.aarch64.sve.frintn
llvm.aarch64.sve.frintp
llvm.aarch64.sve.frintx
llvm.aarch64.sve.frintz
llvm.aarch64.sve.frsqrte.x
llvm.aarch64.sve.frsqrts.x
llvm.aarch64.sve.fscale
llvm.aarch64.sve.fsqrt
llvm.aarch64.sve.fsub
llvm.aarch64.sve.fsubr
llvm.aarch64.sve.ftmad.x
llvm.aarch64.sve.ftsmul.x
llvm.aarch64.sve.ftssel.x
llvm.aarch64.sve.histcnt
llvm.aarch64.sve.histseg
llvm.aarch64.sve.index
llvm.aarch64.sve.insr
llvm.aarch64.sve.lasta
llvm.aarch64.sve.lastb
llvm.aarch64.sve.ld1
llvm.aarch64.sve.ld1.gather
llvm.aarch64.sve.ld1.gather.index
llvm.aarch64.sve.ld1.gather.scalar.offset
llvm.aarch64.sve.ld1.gather.sxtw
llvm.aarch64.sve.ld1.gather.sxtw.index
llvm.aarch64.sve.ld1.gather.uxtw
llvm.aarch64.sve.ld1.gather.uxtw.index
llvm.aarch64.sve.ld1ro
llvm.aarch64.sve.ld1rq
llvm.aarch64.sve.ld2
llvm.aarch64.sve.ld3
llvm.aarch64.sve.ld4
llvm.aarch64.sve.ldff1
llvm.aarch64.sve.ldff1.gather
llvm.aarch64.sve.ldff1.gather.index
llvm.aarch64.sve.ldff1.gather.scalar.offset
llvm.aarch64.sve.ldff1.gather.sxtw
llvm.aarch64.sve.ldff1.gather.sxtw.index
llvm.aarch64.sve.ldff1.gather.uxtw
llvm.aarch64.sve.ldff1.gather.uxtw.index
llvm.aarch64.sve.ldnf1
llvm.aarch64.sve.ldnt1
llvm.aarch64.sve.ldnt1.gather
llvm.aarch64.sve.ldnt1.gather.index
llvm.aarch64.sve.ldnt1.gather.scalar.offset
llvm.aarch64.sve.ldnt1.gather.uxtw
llvm.aarch64.sve.lsl
llvm.aarch64.sve.lsl.wide
llvm.aarch64.sve.lsr
llvm.aarch64.sve.lsr.wide
llvm.aarch64.sve.mad
llvm.aarch64.sve.match
llvm.aarch64.sve.mla
llvm.aarch64.sve.mla.lane
llvm.aarch64.sve.mls
llvm.aarch64.sve.mls.lane
llvm.aarch64.sve.msb
llvm.aarch64.sve.mul
llvm.aarch64.sve.mul.lane
llvm.aarch64.sve.nand.z
llvm.aarch64.sve.nbsl
llvm.aarch64.sve.neg
llvm.aarch64.sve.nmatch
llvm.aarch64.sve.nor.z
llvm.aarch64.sve.not
llvm.aarch64.sve.orn.z
llvm.aarch64.sve.orr
llvm.aarch64.sve.orr.z
llvm.aarch64.sve.orv
llvm.aarch64.sve.pfirst
llvm.aarch64.sve.pmul
llvm.aarch64.sve.pmullb.pair
llvm.aarch64.sve.pmullt.pair
llvm.aarch64.sve.pnext
llvm.aarch64.sve.prf
llvm.aarch64.sve.prfb.gather.index
llvm.aarch64.sve.prfb.gather.scalar.offset
llvm.aarch64.sve.prfb.gather.sxtw.index
llvm.aarch64.sve.prfb.gather.uxtw.index
llvm.aarch64.sve.prfd.gather.index
llvm.aarch64.sve.prfd.gather.scalar.offset
llvm.aarch64.sve.prfd.gather.sxtw.index
llvm.aarch64.sve.prfd.gather.uxtw.index
llvm.aarch64.sve.prfh.gather.index
llvm.aarch64.sve.prfh.gather.scalar.offset
llvm.aarch64.sve.prfh.gather.sxtw.index
llvm.aarch64.sve.prfh.gather.uxtw.index
llvm.aarch64.sve.prfw.gather.index
llvm.aarch64.sve.prfw.gather.scalar.offset
llvm.aarch64.sve.prfw.gather.sxtw.index
llvm.aarch64.sve.prfw.gather.uxtw.index
llvm.aarch64.sve.ptest.any
llvm.aarch64.sve.ptest.first
llvm.aarch64.sve.ptest.last
llvm.aarch64.sve.ptrue
llvm.aarch64.sve.punpkhi
llvm.aarch64.sve.punpklo
llvm.aarch64.sve.raddhnb
llvm.aarch64.sve.raddhnt
llvm.aarch64.sve.rax1
llvm.aarch64.sve.rbit
llvm.aarch64.sve.rdffr
llvm.aarch64.sve.rdffr.z
llvm.aarch64.sve.rev
llvm.aarch64.sve.revb
llvm.aarch64.sve.revh
llvm.aarch64.sve.revw
llvm.aarch64.sve.rshrnb
llvm.aarch64.sve.rshrnt
llvm.aarch64.sve.rsubhnb
llvm.aarch64.sve.rsubhnt
llvm.aarch64.sve.saba
llvm.aarch64.sve.sabalb
llvm.aarch64.sve.sabalt
llvm.aarch64.sve.sabd
llvm.aarch64.sve.sabdlb
llvm.aarch64.sve.sabdlt
llvm.aarch64.sve.sadalp
llvm.aarch64.sve.saddlb
llvm.aarch64.sve.saddlbt
llvm.aarch64.sve.saddlt
llvm.aarch64.sve.saddv
llvm.aarch64.sve.saddwb
llvm.aarch64.sve.saddwt
llvm.aarch64.sve.sbclb
llvm.aarch64.sve.sbclt
llvm.aarch64.sve.scvtf
llvm.aarch64.sve.scvtf.f16i32
llvm.aarch64.sve.scvtf.f16i64
llvm.aarch64.sve.scvtf.f32i64
llvm.aarch64.sve.scvtf.f64i32
llvm.aarch64.sve.sdiv
llvm.aarch64.sve.sdivr
llvm.aarch64.sve.sdot
llvm.aarch64.sve.sdot.lane
llvm.aarch64.sve.sel
llvm.aarch64.sve.setffr
llvm.aarch64.sve.shadd
llvm.aarch64.sve.shrnb
llvm.aarch64.sve.shrnt
llvm.aarch64.sve.shsub
llvm.aarch64.sve.shsubr
llvm.aarch64.sve.sli
llvm.aarch64.sve.sm4e
llvm.aarch64.sve.sm4ekey
llvm.aarch64.sve.smax
llvm.aarch64.sve.smaxp
llvm.aarch64.sve.smaxv
llvm.aarch64.sve.smin
llvm.aarch64.sve.sminp
llvm.aarch64.sve.sminv
llvm.aarch64.sve.smlalb
llvm.aarch64.sve.smlalb.lane
llvm.aarch64.sve.smlalt
llvm.aarch64.sve.smlalt.lane
llvm.aarch64.sve.smlslb
llvm.aarch64.sve.smlslb.lane
llvm.aarch64.sve.smlslt
llvm.aarch64.sve.smlslt.lane
llvm.aarch64.sve.smmla
llvm.aarch64.sve.smulh
llvm.aarch64.sve.smullb
llvm.aarch64.sve.smullb.lane
llvm.aarch64.sve.smullt
llvm.aarch64.sve.smullt.lane
llvm.aarch64.sve.splice
llvm.aarch64.sve.sqabs
llvm.aarch64.sve.sqadd
llvm.aarch64.sve.sqadd.x
llvm.aarch64.sve.sqcadd.x
llvm.aarch64.sve.sqdecb.n32
llvm.aarch64.sve.sqdecb.n64
llvm.aarch64.sve.sqdecd
llvm.aarch64.sve.sqdecd.n32
llvm.aarch64.sve.sqdecd.n64
llvm.aarch64.sve.sqdech
llvm.aarch64.sve.sqdech.n32
llvm.aarch64.sve.sqdech.n64
llvm.aarch64.sve.sqdecp
llvm.aarch64.sve.sqdecp.n32
llvm.aarch64.sve.sqdecp.n64
llvm.aarch64.sve.sqdecw
llvm.aarch64.sve.sqdecw.n32
llvm.aarch64.sve.sqdecw.n64
llvm.aarch64.sve.sqdmlalb
llvm.aarch64.sve.sqdmlalb.lane
llvm.aarch64.sve.sqdmlalbt
llvm.aarch64.sve.sqdmlalt
llvm.aarch64.sve.sqdmlalt.lane
llvm.aarch64.sve.sqdmlslb
llvm.aarch64.sve.sqdmlslb.lane
llvm.aarch64.sve.sqdmlslbt
llvm.aarch64.sve.sqdmlslt
llvm.aarch64.sve.sqdmlslt.lane
llvm.aarch64.sve.sqdmulh
llvm.aarch64.sve.sqdmulh.lane
llvm.aarch64.sve.sqdmullb
llvm.aarch64.sve.sqdmullb.lane
llvm.aarch64.sve.sqdmullt
llvm.aarch64.sve.sqdmullt.lane
llvm.aarch64.sve.sqincb.n32
llvm.aarch64.sve.sqincb.n64
llvm.aarch64.sve.sqincd
llvm.aarch64.sve.sqincd.n32
llvm.aarch64.sve.sqincd.n64
llvm.aarch64.sve.sqinch
llvm.aarch64.sve.sqinch.n32
llvm.aarch64.sve.sqinch.n64
llvm.aarch64.sve.sqincp
llvm.aarch64.sve.sqincp.n32
llvm.aarch64.sve.sqincp.n64
llvm.aarch64.sve.sqincw
llvm.aarch64.sve.sqincw.n32
llvm.aarch64.sve.sqincw.n64
llvm.aarch64.sve.sqneg
llvm.aarch64.sve.sqrdcmlah.lane.x
llvm.aarch64.sve.sqrdcmlah.x
llvm.aarch64.sve.sqrdmlah
llvm.aarch64.sve.sqrdmlah.lane
llvm.aarch64.sve.sqrdmlsh
llvm.aarch64.sve.sqrdmlsh.lane
llvm.aarch64.sve.sqrdmulh
llvm.aarch64.sve.sqrdmulh.lane
llvm.aarch64.sve.sqrshl
llvm.aarch64.sve.sqrshrnb
llvm.aarch64.sve.sqrshrnt
llvm.aarch64.sve.sqrshrunb
llvm.aarch64.sve.sqrshrunt
llvm.aarch64.sve.sqshl
llvm.aarch64.sve.sqshlu
llvm.aarch64.sve.sqshrnb
llvm.aarch64.sve.sqshrnt
llvm.aarch64.sve.sqshrunb
llvm.aarch64.sve.sqshrunt
llvm.aarch64.sve.sqsub
llvm.aarch64.sve.sqsub.x
llvm.aarch64.sve.sqsubr
llvm.aarch64.sve.sqxtnb
llvm.aarch64.sve.sqxtnt
llvm.aarch64.sve.sqxtunb
llvm.aarch64.sve.sqxtunt
llvm.aarch64.sve.srhadd
llvm.aarch64.sve.sri
llvm.aarch64.sve.srshl
llvm.aarch64.sve.srshr
llvm.aarch64.sve.srsra
llvm.aarch64.sve.sshllb
llvm.aarch64.sve.sshllt
llvm.aarch64.sve.ssra
llvm.aarch64.sve.ssublb
llvm.aarch64.sve.ssublbt
llvm.aarch64.sve.ssublt
llvm.aarch64.sve.ssubltb
llvm.aarch64.sve.ssubwb
llvm.aarch64.sve.ssubwt
llvm.aarch64.sve.st1
llvm.aarch64.sve.st1.scatter
llvm.aarch64.sve.st1.scatter.index
llvm.aarch64.sve.st1.scatter.scalar.offset
llvm.aarch64.sve.st1.scatter.sxtw
llvm.aarch64.sve.st1.scatter.sxtw.index
llvm.aarch64.sve.st1.scatter.uxtw
llvm.aarch64.sve.st1.scatter.uxtw.index
llvm.aarch64.sve.st2
llvm.aarch64.sve.st3
llvm.aarch64.sve.st4
llvm.aarch64.sve.stnt1
llvm.aarch64.sve.stnt1.scatter
llvm.aarch64.sve.stnt1.scatter.index
llvm.aarch64.sve.stnt1.scatter.scalar.offset
llvm.aarch64.sve.stnt1.scatter.uxtw
llvm.aarch64.sve.sub
llvm.aarch64.sve.subhnb
llvm.aarch64.sve.subhnt
llvm.aarch64.sve.subr
llvm.aarch64.sve.sudot.lane
llvm.aarch64.sve.sunpkhi
llvm.aarch64.sve.sunpklo
llvm.aarch64.sve.suqadd
llvm.aarch64.sve.sxtb
llvm.aarch64.sve.sxth
llvm.aarch64.sve.sxtw
llvm.aarch64.sve.tbl
llvm.aarch64.sve.tbl2
llvm.aarch64.sve.tbx
llvm.aarch64.sve.trn1
llvm.aarch64.sve.trn1q
llvm.aarch64.sve.trn2
llvm.aarch64.sve.trn2q
llvm.aarch64.sve.tuple.create2
llvm.aarch64.sve.tuple.create3
llvm.aarch64.sve.tuple.create4
llvm.aarch64.sve.tuple.get
llvm.aarch64.sve.tuple.set
llvm.aarch64.sve.uaba
llvm.aarch64.sve.uabalb
llvm.aarch64.sve.uabalt
llvm.aarch64.sve.uabd
llvm.aarch64.sve.uabdlb
llvm.aarch64.sve.uabdlt
llvm.aarch64.sve.uadalp
llvm.aarch64.sve.uaddlb
llvm.aarch64.sve.uaddlt
llvm.aarch64.sve.uaddv
llvm.aarch64.sve.uaddwb
llvm.aarch64.sve.uaddwt
llvm.aarch64.sve.ucvtf
llvm.aarch64.sve.ucvtf.f16i32
llvm.aarch64.sve.ucvtf.f16i64
llvm.aarch64.sve.ucvtf.f32i64
llvm.aarch64.sve.ucvtf.f64i32
llvm.aarch64.sve.udiv
llvm.aarch64.sve.udivr
llvm.aarch64.sve.udot
llvm.aarch64.sve.udot.lane
llvm.aarch64.sve.uhadd
llvm.aarch64.sve.uhsub
llvm.aarch64.sve.uhsubr
llvm.aarch64.sve.umax
llvm.aarch64.sve.umaxp
llvm.aarch64.sve.umaxv
llvm.aarch64.sve.umin
llvm.aarch64.sve.uminp
llvm.aarch64.sve.uminv
llvm.aarch64.sve.umlalb
llvm.aarch64.sve.umlalb.lane
llvm.aarch64.sve.umlalt
llvm.aarch64.sve.umlalt.lane
llvm.aarch64.sve.umlslb
llvm.aarch64.sve.umlslb.lane
llvm.aarch64.sve.umlslt
llvm.aarch64.sve.umlslt.lane
llvm.aarch64.sve.ummla
llvm.aarch64.sve.umulh
llvm.aarch64.sve.umullb
llvm.aarch64.sve.umullb.lane
llvm.aarch64.sve.umullt
llvm.aarch64.sve.umullt.lane
llvm.aarch64.sve.uqadd
llvm.aarch64.sve.uqadd.x
llvm.aarch64.sve.uqdecb.n32
llvm.aarch64.sve.uqdecb.n64
llvm.aarch64.sve.uqdecd
llvm.aarch64.sve.uqdecd.n32
llvm.aarch64.sve.uqdecd.n64
llvm.aarch64.sve.uqdech
llvm.aarch64.sve.uqdech.n32
llvm.aarch64.sve.uqdech.n64
llvm.aarch64.sve.uqdecp
llvm.aarch64.sve.uqdecp.n32
llvm.aarch64.sve.uqdecp.n64
llvm.aarch64.sve.uqdecw
llvm.aarch64.sve.uqdecw.n32
llvm.aarch64.sve.uqdecw.n64
llvm.aarch64.sve.uqincb.n32
llvm.aarch64.sve.uqincb.n64
llvm.aarch64.sve.uqincd
llvm.aarch64.sve.uqincd.n32
llvm.aarch64.sve.uqincd.n64
llvm.aarch64.sve.uqinch
llvm.aarch64.sve.uqinch.n32
llvm.aarch64.sve.uqinch.n64
llvm.aarch64.sve.uqincp
llvm.aarch64.sve.uqincp.n32
llvm.aarch64.sve.uqincp.n64
llvm.aarch64.sve.uqincw
llvm.aarch64.sve.uqincw.n32
llvm.aarch64.sve.uqincw.n64
llvm.aarch64.sve.uqrshl
llvm.aarch64.sve.uqrshrnb
llvm.aarch64.sve.uqrshrnt
llvm.aarch64.sve.uqshl
llvm.aarch64.sve.uqshrnb
llvm.aarch64.sve.uqshrnt
llvm.aarch64.sve.uqsub
llvm.aarch64.sve.uqsub.x
llvm.aarch64.sve.uqsubr
llvm.aarch64.sve.uqxtnb
llvm.aarch64.sve.uqxtnt
llvm.aarch64.sve.urecpe
llvm.aarch64.sve.urhadd
llvm.aarch64.sve.urshl
llvm.aarch64.sve.urshr
llvm.aarch64.sve.ursqrte
llvm.aarch64.sve.ursra
llvm.aarch64.sve.usdot
llvm.aarch64.sve.usdot.lane
llvm.aarch64.sve.ushllb
llvm.aarch64.sve.ushllt
llvm.aarch64.sve.usmmla
llvm.aarch64.sve.usqadd
llvm.aarch64.sve.usra
llvm.aarch64.sve.usublb
llvm.aarch64.sve.usublt
llvm.aarch64.sve.usubwb
llvm.aarch64.sve.usubwt
llvm.aarch64.sve.uunpkhi
llvm.aarch64.sve.uunpklo
llvm.aarch64.sve.uxtb
llvm.aarch64.sve.uxth
llvm.aarch64.sve.uxtw
llvm.aarch64.sve.uzp1
llvm.aarch64.sve.uzp1q
llvm.aarch64.sve.uzp2
llvm.aarch64.sve.uzp2q
llvm.aarch64.sve.whilege
llvm.aarch64.sve.whilegt
llvm.aarch64.sve.whilehi
llvm.aarch64.sve.whilehs
llvm.aarch64.sve.whilele
llvm.aarch64.sve.whilelo
llvm.aarch64.sve.whilels
llvm.aarch64.sve.whilelt
llvm.aarch64.sve.whilerw.b
llvm.aarch64.sve.whilerw.d
llvm.aarch64.sve.whilerw.h
llvm.aarch64.sve.whilerw.s
llvm.aarch64.sve.whilewr.b
llvm.aarch64.sve.whilewr.d
llvm.aarch64.sve.whilewr.h
llvm.aarch64.sve.whilewr.s
llvm.aarch64.sve.wrffr
llvm.aarch64.sve.xar
llvm.aarch64.sve.zip1
llvm.aarch64.sve.zip1q
llvm.aarch64.sve.zip2
llvm.aarch64.sve.zip2q
llvm.aarch64.tagp
llvm.aarch64.tcancel
llvm.aarch64.tcommit
llvm.aarch64.tstart
llvm.aarch64.ttest
llvm.aarch64.udiv
llvm.amdgcn.alignbit
llvm.amdgcn.alignbyte
llvm.amdgcn.atomic.dec
llvm.amdgcn.atomic.inc
llvm.amdgcn.ballot
llvm.amdgcn.buffer.atomic.add
llvm.amdgcn.buffer.atomic.and
llvm.amdgcn.buffer.atomic.cmpswap
llvm.amdgcn.buffer.atomic.csub
llvm.amdgcn.buffer.atomic.fadd
llvm.amdgcn.buffer.atomic.or
llvm.amdgcn.buffer.atomic.smax
llvm.amdgcn.buffer.atomic.smin
llvm.amdgcn.buffer.atomic.sub
llvm.amdgcn.buffer.atomic.swap
llvm.amdgcn.buffer.atomic.umax
llvm.amdgcn.buffer.atomic.umin
llvm.amdgcn.buffer.atomic.xor
llvm.amdgcn.buffer.load
llvm.amdgcn.buffer.load.format
llvm.amdgcn.buffer.store
llvm.amdgcn.buffer.store.format
llvm.amdgcn.buffer.wbinvl1
llvm.amdgcn.buffer.wbinvl1.sc
llvm.amdgcn.buffer.wbinvl1.vol
llvm.amdgcn.class
llvm.amdgcn.cos
llvm.amdgcn.cubeid
llvm.amdgcn.cubema
llvm.amdgcn.cubesc
llvm.amdgcn.cubetc
llvm.amdgcn.cvt.pk.i16
llvm.amdgcn.cvt.pk.u16
llvm.amdgcn.cvt.pk.u8.f32
llvm.amdgcn.cvt.pknorm.i16
llvm.amdgcn.cvt.pknorm.u16
llvm.amdgcn.cvt.pkrtz
llvm.amdgcn.dispatch.id
llvm.amdgcn.dispatch.ptr
llvm.amdgcn.div.fixup
llvm.amdgcn.div.fmas
llvm.amdgcn.div.scale
llvm.amdgcn.ds.append
llvm.amdgcn.ds.bpermute
llvm.amdgcn.ds.consume
llvm.amdgcn.ds.fadd
llvm.amdgcn.ds.fmax
llvm.amdgcn.ds.fmin
llvm.amdgcn.ds.gws.barrier
llvm.amdgcn.ds.gws.init
llvm.amdgcn.ds.gws.sema.br
llvm.amdgcn.ds.gws.sema.p
llvm.amdgcn.ds.gws.sema.release.all
llvm.amdgcn.ds.gws.sema.v
llvm.amdgcn.ds.ordered.add
llvm.amdgcn.ds.ordered.swap
llvm.amdgcn.ds.permute
llvm.amdgcn.ds.swizzle
llvm.amdgcn.else
llvm.amdgcn.end.cf
llvm.amdgcn.endpgm
llvm.amdgcn.exp
llvm.amdgcn.exp.compr
llvm.amdgcn.fcmp
llvm.amdgcn.fdiv.fast
llvm.amdgcn.fdot2
llvm.amdgcn.fma.legacy
llvm.amdgcn.fmad.ftz
llvm.amdgcn.fmed3
llvm.amdgcn.fmul.legacy
llvm.amdgcn.fract
llvm.amdgcn.frexp.exp
llvm.amdgcn.frexp.mant
llvm.amdgcn.global.atomic.csub
llvm.amdgcn.global.atomic.fadd
llvm.amdgcn.groupstaticsize
llvm.amdgcn.icmp
llvm.amdgcn.if
llvm.amdgcn.if.break
llvm.amdgcn.image.atomic.add.1d
llvm.amdgcn.image.atomic.add.1darray
llvm.amdgcn.image.atomic.add.2d
llvm.amdgcn.image.atomic.add.2darray
llvm.amdgcn.image.atomic.add.2darraymsaa
llvm.amdgcn.image.atomic.add.2dmsaa
llvm.amdgcn.image.atomic.add.3d
llvm.amdgcn.image.atomic.add.cube
llvm.amdgcn.image.atomic.and.1d
llvm.amdgcn.image.atomic.and.1darray
llvm.amdgcn.image.atomic.and.2d
llvm.amdgcn.image.atomic.and.2darray
llvm.amdgcn.image.atomic.and.2darraymsaa
llvm.amdgcn.image.atomic.and.2dmsaa
llvm.amdgcn.image.atomic.and.3d
llvm.amdgcn.image.atomic.and.cube
llvm.amdgcn.image.atomic.cmpswap.1d
llvm.amdgcn.image.atomic.cmpswap.1darray
llvm.amdgcn.image.atomic.cmpswap.2d
llvm.amdgcn.image.atomic.cmpswap.2darray
llvm.amdgcn.image.atomic.cmpswap.2darraymsaa
llvm.amdgcn.image.atomic.cmpswap.2dmsaa
llvm.amdgcn.image.atomic.cmpswap.3d
llvm.amdgcn.image.atomic.cmpswap.cube
llvm.amdgcn.image.atomic.dec.1d
llvm.amdgcn.image.atomic.dec.1darray
llvm.amdgcn.image.atomic.dec.2d
llvm.amdgcn.image.atomic.dec.2darray
llvm.amdgcn.image.atomic.dec.2darraymsaa
llvm.amdgcn.image.atomic.dec.2dmsaa
llvm.amdgcn.image.atomic.dec.3d
llvm.amdgcn.image.atomic.dec.cube
llvm.amdgcn.image.atomic.inc.1d
llvm.amdgcn.image.atomic.inc.1darray
llvm.amdgcn.image.atomic.inc.2d
llvm.amdgcn.image.atomic.inc.2darray
llvm.amdgcn.image.atomic.inc.2darraymsaa
llvm.amdgcn.image.atomic.inc.2dmsaa
llvm.amdgcn.image.atomic.inc.3d
llvm.amdgcn.image.atomic.inc.cube
llvm.amdgcn.image.atomic.or.1d
llvm.amdgcn.image.atomic.or.1darray
llvm.amdgcn.image.atomic.or.2d
llvm.amdgcn.image.atomic.or.2darray
llvm.amdgcn.image.atomic.or.2darraymsaa
llvm.amdgcn.image.atomic.or.2dmsaa
llvm.amdgcn.image.atomic.or.3d
llvm.amdgcn.image.atomic.or.cube
llvm.amdgcn.image.atomic.smax.1d
llvm.amdgcn.image.atomic.smax.1darray
llvm.amdgcn.image.atomic.smax.2d
llvm.amdgcn.image.atomic.smax.2darray
llvm.amdgcn.image.atomic.smax.2darraymsaa
llvm.amdgcn.image.atomic.smax.2dmsaa
llvm.amdgcn.image.atomic.smax.3d
llvm.amdgcn.image.atomic.smax.cube
llvm.amdgcn.image.atomic.smin.1d
llvm.amdgcn.image.atomic.smin.1darray
llvm.amdgcn.image.atomic.smin.2d
llvm.amdgcn.image.atomic.smin.2darray
llvm.amdgcn.image.atomic.smin.2darraymsaa
llvm.amdgcn.image.atomic.smin.2dmsaa
llvm.amdgcn.image.atomic.smin.3d
llvm.amdgcn.image.atomic.smin.cube
llvm.amdgcn.image.atomic.sub.1d
llvm.amdgcn.image.atomic.sub.1darray
llvm.amdgcn.image.atomic.sub.2d
llvm.amdgcn.image.atomic.sub.2darray
llvm.amdgcn.image.atomic.sub.2darraymsaa
llvm.amdgcn.image.atomic.sub.2dmsaa
llvm.amdgcn.image.atomic.sub.3d
llvm.amdgcn.image.atomic.sub.cube
llvm.amdgcn.image.atomic.swap.1d
llvm.amdgcn.image.atomic.swap.1darray
llvm.amdgcn.image.atomic.swap.2d
llvm.amdgcn.image.atomic.swap.2darray
llvm.amdgcn.image.atomic.swap.2darraymsaa
llvm.amdgcn.image.atomic.swap.2dmsaa
llvm.amdgcn.image.atomic.swap.3d
llvm.amdgcn.image.atomic.swap.cube
llvm.amdgcn.image.atomic.umax.1d
llvm.amdgcn.image.atomic.umax.1darray
llvm.amdgcn.image.atomic.umax.2d
llvm.amdgcn.image.atomic.umax.2darray
llvm.amdgcn.image.atomic.umax.2darraymsaa
llvm.amdgcn.image.atomic.umax.2dmsaa
llvm.amdgcn.image.atomic.umax.3d
llvm.amdgcn.image.atomic.umax.cube
llvm.amdgcn.image.atomic.umin.1d
llvm.amdgcn.image.atomic.umin.1darray
llvm.amdgcn.image.atomic.umin.2d
llvm.amdgcn.image.atomic.umin.2darray
llvm.amdgcn.image.atomic.umin.2darraymsaa
llvm.amdgcn.image.atomic.umin.2dmsaa
llvm.amdgcn.image.atomic.umin.3d
llvm.amdgcn.image.atomic.umin.cube
llvm.amdgcn.image.atomic.xor.1d
llvm.amdgcn.image.atomic.xor.1darray
llvm.amdgcn.image.atomic.xor.2d
llvm.amdgcn.image.atomic.xor.2darray
llvm.amdgcn.image.atomic.xor.2darraymsaa
llvm.amdgcn.image.atomic.xor.2dmsaa
llvm.amdgcn.image.atomic.xor.3d
llvm.amdgcn.image.atomic.xor.cube
llvm.amdgcn.image.bvh.intersect.ray
llvm.amdgcn.image.gather4.2d
llvm.amdgcn.image.gather4.2darray
llvm.amdgcn.image.gather4.b.2d
llvm.amdgcn.image.gather4.b.2darray
llvm.amdgcn.image.gather4.b.cl.2d
llvm.amdgcn.image.gather4.b.cl.2darray
llvm.amdgcn.image.gather4.b.cl.cube
llvm.amdgcn.image.gather4.b.cl.o.2d
llvm.amdgcn.image.gather4.b.cl.o.2darray
llvm.amdgcn.image.gather4.b.cl.o.cube
llvm.amdgcn.image.gather4.b.cube
llvm.amdgcn.image.gather4.b.o.2d
llvm.amdgcn.image.gather4.b.o.2darray
llvm.amdgcn.image.gather4.b.o.cube
llvm.amdgcn.image.gather4.c.2d
llvm.amdgcn.image.gather4.c.2darray
llvm.amdgcn.image.gather4.c.b.2d
llvm.amdgcn.image.gather4.c.b.2darray
llvm.amdgcn.image.gather4.c.b.cl.2d
llvm.amdgcn.image.gather4.c.b.cl.2darray
llvm.amdgcn.image.gather4.c.b.cl.cube
llvm.amdgcn.image.gather4.c.b.cl.o.2d
llvm.amdgcn.image.gather4.c.b.cl.o.2darray
llvm.amdgcn.image.gather4.c.b.cl.o.cube
llvm.amdgcn.image.gather4.c.b.cube
llvm.amdgcn.image.gather4.c.b.o.2d
llvm.amdgcn.image.gather4.c.b.o.2darray
llvm.amdgcn.image.gather4.c.b.o.cube
llvm.amdgcn.image.gather4.c.cl.2d
llvm.amdgcn.image.gather4.c.cl.2darray
llvm.amdgcn.image.gather4.c.cl.cube
llvm.amdgcn.image.gather4.c.cl.o.2d
llvm.amdgcn.image.gather4.c.cl.o.2darray
llvm.amdgcn.image.gather4.c.cl.o.cube
llvm.amdgcn.image.gather4.c.cube
llvm.amdgcn.image.gather4.c.l.2d
llvm.amdgcn.image.gather4.c.l.2darray
llvm.amdgcn.image.gather4.c.l.cube
llvm.amdgcn.image.gather4.c.l.o.2d
llvm.amdgcn.image.gather4.c.l.o.2darray
llvm.amdgcn.image.gather4.c.l.o.cube
llvm.amdgcn.image.gather4.c.lz.2d
llvm.amdgcn.image.gather4.c.lz.2darray
llvm.amdgcn.image.gather4.c.lz.cube
llvm.amdgcn.image.gather4.c.lz.o.2d
llvm.amdgcn.image.gather4.c.lz.o.2darray
llvm.amdgcn.image.gather4.c.lz.o.cube
llvm.amdgcn.image.gather4.c.o.2d
llvm.amdgcn.image.gather4.c.o.2darray
llvm.amdgcn.image.gather4.c.o.cube
llvm.amdgcn.image.gather4.cl.2d
llvm.amdgcn.image.gather4.cl.2darray
llvm.amdgcn.image.gather4.cl.cube
llvm.amdgcn.image.gather4.cl.o.2d
llvm.amdgcn.image.gather4.cl.o.2darray
llvm.amdgcn.image.gather4.cl.o.cube
llvm.amdgcn.image.gather4.cube
llvm.amdgcn.image.gather4.l.2d
llvm.amdgcn.image.gather4.l.2darray
llvm.amdgcn.image.gather4.l.cube
llvm.amdgcn.image.gather4.l.o.2d
llvm.amdgcn.image.gather4.l.o.2darray
llvm.amdgcn.image.gather4.l.o.cube
llvm.amdgcn.image.gather4.lz.2d
llvm.amdgcn.image.gather4.lz.2darray
llvm.amdgcn.image.gather4.lz.cube
llvm.amdgcn.image.gather4.lz.o.2d
llvm.amdgcn.image.gather4.lz.o.2darray
llvm.amdgcn.image.gather4.lz.o.cube
llvm.amdgcn.image.gather4.o.2d
llvm.amdgcn.image.gather4.o.2darray
llvm.amdgcn.image.gather4.o.cube
llvm.amdgcn.image.getlod.1d
llvm.amdgcn.image.getlod.1darray
llvm.amdgcn.image.getlod.2d
llvm.amdgcn.image.getlod.2darray
llvm.amdgcn.image.getlod.3d
llvm.amdgcn.image.getlod.cube
llvm.amdgcn.image.getresinfo.1d
llvm.amdgcn.image.getresinfo.1darray
llvm.amdgcn.image.getresinfo.2d
llvm.amdgcn.image.getresinfo.2darray
llvm.amdgcn.image.getresinfo.2darraymsaa
llvm.amdgcn.image.getresinfo.2dmsaa
llvm.amdgcn.image.getresinfo.3d
llvm.amdgcn.image.getresinfo.cube
llvm.amdgcn.image.load.1d
llvm.amdgcn.image.load.1darray
llvm.amdgcn.image.load.2d
llvm.amdgcn.image.load.2darray
llvm.amdgcn.image.load.2darraymsaa
llvm.amdgcn.image.load.2dmsaa
llvm.amdgcn.image.load.3d
llvm.amdgcn.image.load.cube
llvm.amdgcn.image.load.mip.1d
llvm.amdgcn.image.load.mip.1darray
llvm.amdgcn.image.load.mip.2d
llvm.amdgcn.image.load.mip.2darray
llvm.amdgcn.image.load.mip.3d
llvm.amdgcn.image.load.mip.cube
llvm.amdgcn.image.msaa.load.1d
llvm.amdgcn.image.msaa.load.1darray
llvm.amdgcn.image.msaa.load.2d
llvm.amdgcn.image.msaa.load.2darray
llvm.amdgcn.image.msaa.load.2darraymsaa
llvm.amdgcn.image.msaa.load.2dmsaa
llvm.amdgcn.image.msaa.load.3d
llvm.amdgcn.image.msaa.load.cube
llvm.amdgcn.image.sample.1d
llvm.amdgcn.image.sample.1darray
llvm.amdgcn.image.sample.2d
llvm.amdgcn.image.sample.2darray
llvm.amdgcn.image.sample.3d
llvm.amdgcn.image.sample.b.1d
llvm.amdgcn.image.sample.b.1darray
llvm.amdgcn.image.sample.b.2d
llvm.amdgcn.image.sample.b.2darray
llvm.amdgcn.image.sample.b.3d
llvm.amdgcn.image.sample.b.cl.1d
llvm.amdgcn.image.sample.b.cl.1darray
llvm.amdgcn.image.sample.b.cl.2d
llvm.amdgcn.image.sample.b.cl.2darray
llvm.amdgcn.image.sample.b.cl.3d
llvm.amdgcn.image.sample.b.cl.cube
llvm.amdgcn.image.sample.b.cl.o.1d
llvm.amdgcn.image.sample.b.cl.o.1darray
llvm.amdgcn.image.sample.b.cl.o.2d
llvm.amdgcn.image.sample.b.cl.o.2darray
llvm.amdgcn.image.sample.b.cl.o.3d
llvm.amdgcn.image.sample.b.cl.o.cube
llvm.amdgcn.image.sample.b.cube
llvm.amdgcn.image.sample.b.o.1d
llvm.amdgcn.image.sample.b.o.1darray
llvm.amdgcn.image.sample.b.o.2d
llvm.amdgcn.image.sample.b.o.2darray
llvm.amdgcn.image.sample.b.o.3d
llvm.amdgcn.image.sample.b.o.cube
llvm.amdgcn.image.sample.c.1d
llvm.amdgcn.image.sample.c.1darray
llvm.amdgcn.image.sample.c.2d
llvm.amdgcn.image.sample.c.2darray
llvm.amdgcn.image.sample.c.3d
llvm.amdgcn.image.sample.c.b.1d
llvm.amdgcn.image.sample.c.b.1darray
llvm.amdgcn.image.sample.c.b.2d
llvm.amdgcn.image.sample.c.b.2darray
llvm.amdgcn.image.sample.c.b.3d
llvm.amdgcn.image.sample.c.b.cl.1d
llvm.amdgcn.image.sample.c.b.cl.1darray
llvm.amdgcn.image.sample.c.b.cl.2d
llvm.amdgcn.image.sample.c.b.cl.2darray
llvm.amdgcn.image.sample.c.b.cl.3d
llvm.amdgcn.image.sample.c.b.cl.cube
llvm.amdgcn.image.sample.c.b.cl.o.1d
llvm.amdgcn.image.sample.c.b.cl.o.1darray
llvm.amdgcn.image.sample.c.b.cl.o.2d
llvm.amdgcn.image.sample.c.b.cl.o.2darray
llvm.amdgcn.image.sample.c.b.cl.o.3d
llvm.amdgcn.image.sample.c.b.cl.o.cube
llvm.amdgcn.image.sample.c.b.cube
llvm.amdgcn.image.sample.c.b.o.1d
llvm.amdgcn.image.sample.c.b.o.1darray
llvm.amdgcn.image.sample.c.b.o.2d
llvm.amdgcn.image.sample.c.b.o.2darray
llvm.amdgcn.image.sample.c.b.o.3d
llvm.amdgcn.image.sample.c.b.o.cube
llvm.amdgcn.image.sample.c.cd.1d
llvm.amdgcn.image.sample.c.cd.1darray
llvm.amdgcn.image.sample.c.cd.2d
llvm.amdgcn.image.sample.c.cd.2darray
llvm.amdgcn.image.sample.c.cd.3d
llvm.amdgcn.image.sample.c.cd.cl.1d
llvm.amdgcn.image.sample.c.cd.cl.1darray
llvm.amdgcn.image.sample.c.cd.cl.2d
llvm.amdgcn.image.sample.c.cd.cl.2darray
llvm.amdgcn.image.sample.c.cd.cl.3d
llvm.amdgcn.image.sample.c.cd.cl.cube
llvm.amdgcn.image.sample.c.cd.cl.o.1d
llvm.amdgcn.image.sample.c.cd.cl.o.1darray
llvm.amdgcn.image.sample.c.cd.cl.o.2d
llvm.amdgcn.image.sample.c.cd.cl.o.2darray
llvm.amdgcn.image.sample.c.cd.cl.o.3d
llvm.amdgcn.image.sample.c.cd.cl.o.cube
llvm.amdgcn.image.sample.c.cd.cube
llvm.amdgcn.image.sample.c.cd.o.1d
llvm.amdgcn.image.sample.c.cd.o.1darray
llvm.amdgcn.image.sample.c.cd.o.2d
llvm.amdgcn.image.sample.c.cd.o.2darray
llvm.amdgcn.image.sample.c.cd.o.3d
llvm.amdgcn.image.sample.c.cd.o.cube
llvm.amdgcn.image.sample.c.cl.1d
llvm.amdgcn.image.sample.c.cl.1darray
llvm.amdgcn.image.sample.c.cl.2d
llvm.amdgcn.image.sample.c.cl.2darray
llvm.amdgcn.image.sample.c.cl.3d
llvm.amdgcn.image.sample.c.cl.cube
llvm.amdgcn.image.sample.c.cl.o.1d
llvm.amdgcn.image.sample.c.cl.o.1darray
llvm.amdgcn.image.sample.c.cl.o.2d
llvm.amdgcn.image.sample.c.cl.o.2darray
llvm.amdgcn.image.sample.c.cl.o.3d
llvm.amdgcn.image.sample.c.cl.o.cube
llvm.amdgcn.image.sample.c.cube
llvm.amdgcn.image.sample.c.d.1d
llvm.amdgcn.image.sample.c.d.1darray
llvm.amdgcn.image.sample.c.d.2d
llvm.amdgcn.image.sample.c.d.2darray
llvm.amdgcn.image.sample.c.d.3d
llvm.amdgcn.image.sample.c.d.cl.1d
llvm.amdgcn.image.sample.c.d.cl.1darray
llvm.amdgcn.image.sample.c.d.cl.2d
llvm.amdgcn.image.sample.c.d.cl.2darray
llvm.amdgcn.image.sample.c.d.cl.3d
llvm.amdgcn.image.sample.c.d.cl.cube
llvm.amdgcn.image.sample.c.d.cl.o.1d
llvm.amdgcn.image.sample.c.d.cl.o.1darray
llvm.amdgcn.image.sample.c.d.cl.o.2d
llvm.amdgcn.image.sample.c.d.cl.o.2darray
llvm.amdgcn.image.sample.c.d.cl.o.3d
llvm.amdgcn.image.sample.c.d.cl.o.cube
llvm.amdgcn.image.sample.c.d.cube
llvm.amdgcn.image.sample.c.d.o.1d
llvm.amdgcn.image.sample.c.d.o.1darray
llvm.amdgcn.image.sample.c.d.o.2d
llvm.amdgcn.image.sample.c.d.o.2darray
llvm.amdgcn.image.sample.c.d.o.3d
llvm.amdgcn.image.sample.c.d.o.cube
llvm.amdgcn.image.sample.c.l.1d
llvm.amdgcn.image.sample.c.l.1darray
llvm.amdgcn.image.sample.c.l.2d
llvm.amdgcn.image.sample.c.l.2darray
llvm.amdgcn.image.sample.c.l.3d
llvm.amdgcn.image.sample.c.l.cube
llvm.amdgcn.image.sample.c.l.o.1d
llvm.amdgcn.image.sample.c.l.o.1darray
llvm.amdgcn.image.sample.c.l.o.2d
llvm.amdgcn.image.sample.c.l.o.2darray
llvm.amdgcn.image.sample.c.l.o.3d
llvm.amdgcn.image.sample.c.l.o.cube
llvm.amdgcn.image.sample.c.lz.1d
llvm.amdgcn.image.sample.c.lz.1darray
llvm.amdgcn.image.sample.c.lz.2d
llvm.amdgcn.image.sample.c.lz.2darray
llvm.amdgcn.image.sample.c.lz.3d
llvm.amdgcn.image.sample.c.lz.cube
llvm.amdgcn.image.sample.c.lz.o.1d
llvm.amdgcn.image.sample.c.lz.o.1darray
llvm.amdgcn.image.sample.c.lz.o.2d
llvm.amdgcn.image.sample.c.lz.o.2darray
llvm.amdgcn.image.sample.c.lz.o.3d
llvm.amdgcn.image.sample.c.lz.o.cube
llvm.amdgcn.image.sample.c.o.1d
llvm.amdgcn.image.sample.c.o.1darray
llvm.amdgcn.image.sample.c.o.2d
llvm.amdgcn.image.sample.c.o.2darray
llvm.amdgcn.image.sample.c.o.3d
llvm.amdgcn.image.sample.c.o.cube
llvm.amdgcn.image.sample.cd.1d
llvm.amdgcn.image.sample.cd.1darray
llvm.amdgcn.image.sample.cd.2d
llvm.amdgcn.image.sample.cd.2darray
llvm.amdgcn.image.sample.cd.3d
llvm.amdgcn.image.sample.cd.cl.1d
llvm.amdgcn.image.sample.cd.cl.1darray
llvm.amdgcn.image.sample.cd.cl.2d
llvm.amdgcn.image.sample.cd.cl.2darray
llvm.amdgcn.image.sample.cd.cl.3d
llvm.amdgcn.image.sample.cd.cl.cube
llvm.amdgcn.image.sample.cd.cl.o.1d
llvm.amdgcn.image.sample.cd.cl.o.1darray
llvm.amdgcn.image.sample.cd.cl.o.2d
llvm.amdgcn.image.sample.cd.cl.o.2darray
llvm.amdgcn.image.sample.cd.cl.o.3d
llvm.amdgcn.image.sample.cd.cl.o.cube
llvm.amdgcn.image.sample.cd.cube
llvm.amdgcn.image.sample.cd.o.1d
llvm.amdgcn.image.sample.cd.o.1darray
llvm.amdgcn.image.sample.cd.o.2d
llvm.amdgcn.image.sample.cd.o.2darray
llvm.amdgcn.image.sample.cd.o.3d
llvm.amdgcn.image.sample.cd.o.cube
llvm.amdgcn.image.sample.cl.1d
llvm.amdgcn.image.sample.cl.1darray
llvm.amdgcn.image.sample.cl.2d
llvm.amdgcn.image.sample.cl.2darray
llvm.amdgcn.image.sample.cl.3d
llvm.amdgcn.image.sample.cl.cube
llvm.amdgcn.image.sample.cl.o.1d
llvm.amdgcn.image.sample.cl.o.1darray
llvm.amdgcn.image.sample.cl.o.2d
llvm.amdgcn.image.sample.cl.o.2darray
llvm.amdgcn.image.sample.cl.o.3d
llvm.amdgcn.image.sample.cl.o.cube
llvm.amdgcn.image.sample.cube
llvm.amdgcn.image.sample.d.1d
llvm.amdgcn.image.sample.d.1darray
llvm.amdgcn.image.sample.d.2d
llvm.amdgcn.image.sample.d.2darray
llvm.amdgcn.image.sample.d.3d
llvm.amdgcn.image.sample.d.cl.1d
llvm.amdgcn.image.sample.d.cl.1darray
llvm.amdgcn.image.sample.d.cl.2d
llvm.amdgcn.image.sample.d.cl.2darray
llvm.amdgcn.image.sample.d.cl.3d
llvm.amdgcn.image.sample.d.cl.cube
llvm.amdgcn.image.sample.d.cl.o.1d
llvm.amdgcn.image.sample.d.cl.o.1darray
llvm.amdgcn.image.sample.d.cl.o.2d
llvm.amdgcn.image.sample.d.cl.o.2darray
llvm.amdgcn.image.sample.d.cl.o.3d
llvm.amdgcn.image.sample.d.cl.o.cube
llvm.amdgcn.image.sample.d.cube
llvm.amdgcn.image.sample.d.o.1d
llvm.amdgcn.image.sample.d.o.1darray
llvm.amdgcn.image.sample.d.o.2d
llvm.amdgcn.image.sample.d.o.2darray
llvm.amdgcn.image.sample.d.o.3d
llvm.amdgcn.image.sample.d.o.cube
llvm.amdgcn.image.sample.l.1d
llvm.amdgcn.image.sample.l.1darray
llvm.amdgcn.image.sample.l.2d
llvm.amdgcn.image.sample.l.2darray
llvm.amdgcn.image.sample.l.3d
llvm.amdgcn.image.sample.l.cube
llvm.amdgcn.image.sample.l.o.1d
llvm.amdgcn.image.sample.l.o.1darray
llvm.amdgcn.image.sample.l.o.2d
llvm.amdgcn.image.sample.l.o.2darray
llvm.amdgcn.image.sample.l.o.3d
llvm.amdgcn.image.sample.l.o.cube
llvm.amdgcn.image.sample.lz.1d
llvm.amdgcn.image.sample.lz.1darray
llvm.amdgcn.image.sample.lz.2d
llvm.amdgcn.image.sample.lz.2darray
llvm.amdgcn.image.sample.lz.3d
llvm.amdgcn.image.sample.lz.cube
llvm.amdgcn.image.sample.lz.o.1d
llvm.amdgcn.image.sample.lz.o.1darray
llvm.amdgcn.image.sample.lz.o.2d
llvm.amdgcn.image.sample.lz.o.2darray
llvm.amdgcn.image.sample.lz.o.3d
llvm.amdgcn.image.sample.lz.o.cube
llvm.amdgcn.image.sample.o.1d
llvm.amdgcn.image.sample.o.1darray
llvm.amdgcn.image.sample.o.2d
llvm.amdgcn.image.sample.o.2darray
llvm.amdgcn.image.sample.o.3d
llvm.amdgcn.image.sample.o.cube
llvm.amdgcn.image.store.1d
llvm.amdgcn.image.store.1darray
llvm.amdgcn.image.store.2d
llvm.amdgcn.image.store.2darray
llvm.amdgcn.image.store.2darraymsaa
llvm.amdgcn.image.store.2dmsaa
llvm.amdgcn.image.store.3d
llvm.amdgcn.image.store.cube
llvm.amdgcn.image.store.mip.1d
llvm.amdgcn.image.store.mip.1darray
llvm.amdgcn.image.store.mip.2d
llvm.amdgcn.image.store.mip.2darray
llvm.amdgcn.image.store.mip.3d
llvm.amdgcn.image.store.mip.cube
llvm.amdgcn.implicit.buffer.ptr
llvm.amdgcn.implicitarg.ptr
llvm.amdgcn.init.exec
llvm.amdgcn.init.exec.from.input
llvm.amdgcn.interp.mov
llvm.amdgcn.interp.p1
llvm.amdgcn.interp.p1.f16
llvm.amdgcn.interp.p2
llvm.amdgcn.interp.p2.f16
llvm.amdgcn.is.private
llvm.amdgcn.is.shared
llvm.amdgcn.kernarg.segment.ptr
llvm.amdgcn.kill
llvm.amdgcn.ldexp
llvm.amdgcn.lerp
llvm.amdgcn.log.clamp
llvm.amdgcn.loop
llvm.amdgcn.mbcnt.hi
llvm.amdgcn.mbcnt.lo
llvm.amdgcn.mfma.f32.16x16x16f16
llvm.amdgcn.mfma.f32.16x16x1f32
llvm.amdgcn.mfma.f32.16x16x2bf16
llvm.amdgcn.mfma.f32.16x16x4f16
llvm.amdgcn.mfma.f32.16x16x4f32
llvm.amdgcn.mfma.f32.16x16x8bf16
llvm.amdgcn.mfma.f32.32x32x1f32
llvm.amdgcn.mfma.f32.32x32x2bf16
llvm.amdgcn.mfma.f32.32x32x2f32
llvm.amdgcn.mfma.f32.32x32x4bf16
llvm.amdgcn.mfma.f32.32x32x4f16
llvm.amdgcn.mfma.f32.32x32x8f16
llvm.amdgcn.mfma.f32.4x4x1f32
llvm.amdgcn.mfma.f32.4x4x2bf16
llvm.amdgcn.mfma.f32.4x4x4f16
llvm.amdgcn.mfma.i32.16x16x16i8
llvm.amdgcn.mfma.i32.16x16x4i8
llvm.amdgcn.mfma.i32.32x32x4i8
llvm.amdgcn.mfma.i32.32x32x8i8
llvm.amdgcn.mfma.i32.4x4x4i8
llvm.amdgcn.mov.dpp
llvm.amdgcn.mov.dpp8
llvm.amdgcn.mqsad.pk.u16.u8
llvm.amdgcn.mqsad.u32.u8
llvm.amdgcn.msad.u8
llvm.amdgcn.mul.i24
llvm.amdgcn.mul.u24
llvm.amdgcn.permlane16
llvm.amdgcn.permlanex16
llvm.amdgcn.ps.live
llvm.amdgcn.qsad.pk.u16.u8
llvm.amdgcn.queue.ptr
llvm.amdgcn.raw.buffer.atomic.add
llvm.amdgcn.raw.buffer.atomic.and
llvm.amdgcn.raw.buffer.atomic.cmpswap
llvm.amdgcn.raw.buffer.atomic.dec
llvm.amdgcn.raw.buffer.atomic.fadd
llvm.amdgcn.raw.buffer.atomic.inc
llvm.amdgcn.raw.buffer.atomic.or
llvm.amdgcn.raw.buffer.atomic.smax
llvm.amdgcn.raw.buffer.atomic.smin
llvm.amdgcn.raw.buffer.atomic.sub
llvm.amdgcn.raw.buffer.atomic.swap
llvm.amdgcn.raw.buffer.atomic.umax
llvm.amdgcn.raw.buffer.atomic.umin
llvm.amdgcn.raw.buffer.atomic.xor
llvm.amdgcn.raw.buffer.load
llvm.amdgcn.raw.buffer.load.format
llvm.amdgcn.raw.buffer.store
llvm.amdgcn.raw.buffer.store.format
llvm.amdgcn.raw.tbuffer.load
llvm.amdgcn.raw.tbuffer.store
llvm.amdgcn.rcp
llvm.amdgcn.rcp.legacy
llvm.amdgcn.readfirstlane
llvm.amdgcn.readlane
llvm.amdgcn.reloc.constant
llvm.amdgcn.rsq
llvm.amdgcn.rsq.clamp
llvm.amdgcn.rsq.legacy
llvm.amdgcn.s.barrier
llvm.amdgcn.s.buffer.load
llvm.amdgcn.s.dcache.inv
llvm.amdgcn.s.dcache.inv.vol
llvm.amdgcn.s.dcache.wb
llvm.amdgcn.s.dcache.wb.vol
llvm.amdgcn.s.decperflevel
llvm.amdgcn.s.get.waveid.in.workgroup
llvm.amdgcn.s.getpc
llvm.amdgcn.s.getreg
llvm.amdgcn.s.incperflevel
llvm.amdgcn.s.memrealtime
llvm.amdgcn.s.memtime
llvm.amdgcn.s.sendmsg
llvm.amdgcn.s.sendmsghalt
llvm.amdgcn.s.setreg
llvm.amdgcn.s.sleep
llvm.amdgcn.s.waitcnt
llvm.amdgcn.sad.hi.u8
llvm.amdgcn.sad.u16
llvm.amdgcn.sad.u8
llvm.amdgcn.sbfe
llvm.amdgcn.sdot2
llvm.amdgcn.sdot4
llvm.amdgcn.sdot8
llvm.amdgcn.set.inactive
llvm.amdgcn.sffbh
llvm.amdgcn.sin
llvm.amdgcn.softwqm
llvm.amdgcn.sqrt
llvm.amdgcn.struct.buffer.atomic.add
llvm.amdgcn.struct.buffer.atomic.and
llvm.amdgcn.struct.buffer.atomic.cmpswap
llvm.amdgcn.struct.buffer.atomic.dec
llvm.amdgcn.struct.buffer.atomic.fadd
llvm.amdgcn.struct.buffer.atomic.inc
llvm.amdgcn.struct.buffer.atomic.or
llvm.amdgcn.struct.buffer.atomic.smax
llvm.amdgcn.struct.buffer.atomic.smin
llvm.amdgcn.struct.buffer.atomic.sub
llvm.amdgcn.struct.buffer.atomic.swap
llvm.amdgcn.struct.buffer.atomic.umax
llvm.amdgcn.struct.buffer.atomic.umin
llvm.amdgcn.struct.buffer.atomic.xor
llvm.amdgcn.struct.buffer.load
llvm.amdgcn.struct.buffer.load.format
llvm.amdgcn.struct.buffer.store
llvm.amdgcn.struct.buffer.store.format
llvm.amdgcn.struct.tbuffer.load
llvm.amdgcn.struct.tbuffer.store
llvm.amdgcn.tbuffer.load
llvm.amdgcn.tbuffer.store
llvm.amdgcn.trig.preop
llvm.amdgcn.ubfe
llvm.amdgcn.udot2
llvm.amdgcn.udot4
llvm.amdgcn.udot8
llvm.amdgcn.unreachable
llvm.amdgcn.update.dpp
llvm.amdgcn.wave.barrier
llvm.amdgcn.wavefrontsize
llvm.amdgcn.workgroup.id.x
llvm.amdgcn.workgroup.id.y
llvm.amdgcn.workgroup.id.z
llvm.amdgcn.workitem.id.x
llvm.amdgcn.workitem.id.y
llvm.amdgcn.workitem.id.z
llvm.amdgcn.wqm
llvm.amdgcn.wqm.vote
llvm.amdgcn.writelane
llvm.amdgcn.wwm
llvm.arm.cde.cx1
llvm.arm.cde.cx1a
llvm.arm.cde.cx1d
llvm.arm.cde.cx1da
llvm.arm.cde.cx2
llvm.arm.cde.cx2a
llvm.arm.cde.cx2d
llvm.arm.cde.cx2da
llvm.arm.cde.cx3
llvm.arm.cde.cx3a
llvm.arm.cde.cx3d
llvm.arm.cde.cx3da
llvm.arm.cde.vcx1
llvm.arm.cde.vcx1a
llvm.arm.cde.vcx1q
llvm.arm.cde.vcx1q.predicated
llvm.arm.cde.vcx1qa
llvm.arm.cde.vcx1qa.predicated
llvm.arm.cde.vcx2
llvm.arm.cde.vcx2a
llvm.arm.cde.vcx2q
llvm.arm.cde.vcx2q.predicated
llvm.arm.cde.vcx2qa
llvm.arm.cde.vcx2qa.predicated
llvm.arm.cde.vcx3
llvm.arm.cde.vcx3a
llvm.arm.cde.vcx3q
llvm.arm.cde.vcx3q.predicated
llvm.arm.cde.vcx3qa
llvm.arm.cde.vcx3qa.predicated
llvm.arm.cdp
llvm.arm.cdp2
llvm.arm.clrex
llvm.arm.cls
llvm.arm.cls64
llvm.arm.cmse.tt
llvm.arm.cmse.tta
llvm.arm.cmse.ttat
llvm.arm.cmse.ttt
llvm.arm.crc32b
llvm.arm.crc32cb
llvm.arm.crc32ch
llvm.arm.crc32cw
llvm.arm.crc32h
llvm.arm.crc32w
llvm.arm.dbg
llvm.arm.dmb
llvm.arm.dsb
llvm.arm.get.fpscr
llvm.arm.gnu.eabi.mcount
llvm.arm.hint
llvm.arm.isb
llvm.arm.ldaex
llvm.arm.ldaexd
llvm.arm.ldc
llvm.arm.ldc2
llvm.arm.ldc2l
llvm.arm.ldcl
llvm.arm.ldrex
llvm.arm.ldrexd
llvm.arm.mcr
llvm.arm.mcr2
llvm.arm.mcrr
llvm.arm.mcrr2
llvm.arm.mrc
llvm.arm.mrc2
llvm.arm.mrrc
llvm.arm.mrrc2
llvm.arm.mve.abd.predicated
llvm.arm.mve.abs.predicated
llvm.arm.mve.add.predicated
llvm.arm.mve.addlv
llvm.arm.mve.addlv.predicated
llvm.arm.mve.addv
llvm.arm.mve.addv.predicated
llvm.arm.mve.and.predicated
llvm.arm.mve.asrl
llvm.arm.mve.bic.predicated
llvm.arm.mve.cls.predicated
llvm.arm.mve.clz.predicated
llvm.arm.mve.eor.predicated
llvm.arm.mve.fma.predicated
llvm.arm.mve.hadd.predicated
llvm.arm.mve.hsub.predicated
llvm.arm.mve.lsll
llvm.arm.mve.max.predicated
llvm.arm.mve.maxav
llvm.arm.mve.maxav.predicated
llvm.arm.mve.maxnmav
llvm.arm.mve.maxnmav.predicated
llvm.arm.mve.maxnmv
llvm.arm.mve.maxnmv.predicated
llvm.arm.mve.maxv
llvm.arm.mve.maxv.predicated
llvm.arm.mve.min.predicated
llvm.arm.mve.minav
llvm.arm.mve.minav.predicated
llvm.arm.mve.minnmav
llvm.arm.mve.minnmav.predicated
llvm.arm.mve.minnmv
llvm.arm.mve.minnmv.predicated
llvm.arm.mve.minv
llvm.arm.mve.minv.predicated
llvm.arm.mve.mul.predicated
llvm.arm.mve.mulh.predicated
llvm.arm.mve.mull.int.predicated
llvm.arm.mve.mull.poly.predicated
llvm.arm.mve.mvn.predicated
llvm.arm.mve.neg.predicated
llvm.arm.mve.orn.predicated
llvm.arm.mve.orr.predicated
llvm.arm.mve.pred.i2v
llvm.arm.mve.pred.v2i
llvm.arm.mve.qabs.predicated
llvm.arm.mve.qadd.predicated
llvm.arm.mve.qdmulh.predicated
llvm.arm.mve.qneg.predicated
llvm.arm.mve.qrdmulh.predicated
llvm.arm.mve.qsub.predicated
llvm.arm.mve.rhadd.predicated
llvm.arm.mve.rmulh.predicated
llvm.arm.mve.shl.imm.predicated
llvm.arm.mve.shr.imm.predicated
llvm.arm.mve.sqrshr
llvm.arm.mve.sqrshrl
llvm.arm.mve.sqshl
llvm.arm.mve.sqshll
llvm.arm.mve.srshr
llvm.arm.mve.srshrl
llvm.arm.mve.sub.predicated
llvm.arm.mve.uqrshl
llvm.arm.mve.uqrshll
llvm.arm.mve.uqshl
llvm.arm.mve.uqshll
llvm.arm.mve.urshr
llvm.arm.mve.urshrl
llvm.arm.mve.vabav
llvm.arm.mve.vabav.predicated
llvm.arm.mve.vabd
llvm.arm.mve.vadc
llvm.arm.mve.vadc.predicated
llvm.arm.mve.vbrsr
llvm.arm.mve.vbrsr.predicated
llvm.arm.mve.vcaddq
llvm.arm.mve.vcaddq.predicated
llvm.arm.mve.vcls
llvm.arm.mve.vcmlaq
llvm.arm.mve.vcmlaq.predicated
llvm.arm.mve.vcmulq
llvm.arm.mve.vcmulq.predicated
llvm.arm.mve.vctp16
llvm.arm.mve.vctp32
llvm.arm.mve.vctp64
llvm.arm.mve.vctp8
llvm.arm.mve.vcvt.fix
llvm.arm.mve.vcvt.fix.predicated
llvm.arm.mve.vcvt.fp.int.predicated
llvm.arm.mve.vcvt.narrow
llvm.arm.mve.vcvt.narrow.predicated
llvm.arm.mve.vcvt.widen
llvm.arm.mve.vcvt.widen.predicated
llvm.arm.mve.vcvta
llvm.arm.mve.vcvta.predicated
llvm.arm.mve.vcvtm
llvm.arm.mve.vcvtm.predicated
llvm.arm.mve.vcvtn
llvm.arm.mve.vcvtn.predicated
llvm.arm.mve.vcvtp
llvm.arm.mve.vcvtp.predicated
llvm.arm.mve.vddup
llvm.arm.mve.vddup.predicated
llvm.arm.mve.vdwdup
llvm.arm.mve.vdwdup.predicated
llvm.arm.mve.vhadd
llvm.arm.mve.vhsub
llvm.arm.mve.vidup
llvm.arm.mve.vidup.predicated
llvm.arm.mve.viwdup
llvm.arm.mve.viwdup.predicated
llvm.arm.mve.vld2q
llvm.arm.mve.vld4q
llvm.arm.mve.vldr.gather.base
llvm.arm.mve.vldr.gather.base.predicated
llvm.arm.mve.vldr.gather.base.wb
llvm.arm.mve.vldr.gather.base.wb.predicated
llvm.arm.mve.vldr.gather.offset
llvm.arm.mve.vldr.gather.offset.predicated
llvm.arm.mve.vmaxa.predicated
llvm.arm.mve.vmaxnma.predicated
llvm.arm.mve.vmina.predicated
llvm.arm.mve.vminnma.predicated
llvm.arm.mve.vmla.n.predicated
llvm.arm.mve.vmlas.n.predicated
llvm.arm.mve.vmldava
llvm.arm.mve.vmldava.predicated
llvm.arm.mve.vmlldava
llvm.arm.mve.vmlldava.predicated
llvm.arm.mve.vmovl.predicated
llvm.arm.mve.vmovn.predicated
llvm.arm.mve.vmulh
llvm.arm.mve.vmull
llvm.arm.mve.vmull.poly
llvm.arm.mve.vqdmlad
llvm.arm.mve.vqdmlad.predicated
llvm.arm.mve.vqdmlah
llvm.arm.mve.vqdmlah.predicated
llvm.arm.mve.vqdmlash
llvm.arm.mve.vqdmlash.predicated
llvm.arm.mve.vqdmulh
llvm.arm.mve.vqdmull
llvm.arm.mve.vqdmull.predicated
llvm.arm.mve.vqmovn
llvm.arm.mve.vqmovn.predicated
llvm.arm.mve.vqrdmlah
llvm.arm.mve.vqrdmlah.predicated
llvm.arm.mve.vqrdmlash
llvm.arm.mve.vqrdmlash.predicated
llvm.arm.mve.vqrdmulh
llvm.arm.mve.vqshl.imm
llvm.arm.mve.vqshl.imm.predicated
llvm.arm.mve.vqshlu.imm
llvm.arm.mve.vqshlu.imm.predicated
llvm.arm.mve.vreinterpretq
llvm.arm.mve.vrev.predicated
llvm.arm.mve.vrhadd
llvm.arm.mve.vrinta.predicated
llvm.arm.mve.vrintm.predicated
llvm.arm.mve.vrintn
llvm.arm.mve.vrintn.predicated
llvm.arm.mve.vrintp.predicated
llvm.arm.mve.vrintx.predicated
llvm.arm.mve.vrintz.predicated
llvm.arm.mve.vrmlldavha
llvm.arm.mve.vrmlldavha.predicated
llvm.arm.mve.vrmulh
llvm.arm.mve.vrshr.imm
llvm.arm.mve.vrshr.imm.predicated
llvm.arm.mve.vsbc
llvm.arm.mve.vsbc.predicated
llvm.arm.mve.vshl.scalar
llvm.arm.mve.vshl.scalar.predicated
llvm.arm.mve.vshl.vector
llvm.arm.mve.vshl.vector.predicated
llvm.arm.mve.vshlc
llvm.arm.mve.vshlc.predicated
llvm.arm.mve.vshll.imm
llvm.arm.mve.vshll.imm.predicated
llvm.arm.mve.vshrn
llvm.arm.mve.vshrn.predicated
llvm.arm.mve.vsli
llvm.arm.mve.vsli.predicated
llvm.arm.mve.vsri
llvm.arm.mve.vsri.predicated
llvm.arm.mve.vst2q
llvm.arm.mve.vst4q
llvm.arm.mve.vstr.scatter.base
llvm.arm.mve.vstr.scatter.base.predicated
llvm.arm.mve.vstr.scatter.base.wb
llvm.arm.mve.vstr.scatter.base.wb.predicated
llvm.arm.mve.vstr.scatter.offset
llvm.arm.mve.vstr.scatter.offset.predicated
llvm.arm.neon.aesd
llvm.arm.neon.aese
llvm.arm.neon.aesimc
llvm.arm.neon.aesmc
llvm.arm.neon.bfdot
llvm.arm.neon.bfmlalb
llvm.arm.neon.bfmlalt
llvm.arm.neon.bfmmla
llvm.arm.neon.sdot
llvm.arm.neon.sha1c
llvm.arm.neon.sha1h
llvm.arm.neon.sha1m
llvm.arm.neon.sha1p
llvm.arm.neon.sha1su0
llvm.arm.neon.sha1su1
llvm.arm.neon.sha256h
llvm.arm.neon.sha256h2
llvm.arm.neon.sha256su0
llvm.arm.neon.sha256su1
llvm.arm.neon.smmla
llvm.arm.neon.udot
llvm.arm.neon.ummla
llvm.arm.neon.usdot
llvm.arm.neon.usmmla
llvm.arm.neon.vabds
llvm.arm.neon.vabdu
llvm.arm.neon.vabs
llvm.arm.neon.vacge
llvm.arm.neon.vacgt
llvm.arm.neon.vbsl
llvm.arm.neon.vcadd.rot270
llvm.arm.neon.vcadd.rot90
llvm.arm.neon.vcls
llvm.arm.neon.vcvtas
llvm.arm.neon.vcvtau
llvm.arm.neon.vcvtbfp2bf
llvm.arm.neon.vcvtfp2bf
llvm.arm.neon.vcvtfp2fxs
llvm.arm.neon.vcvtfp2fxu
llvm.arm.neon.vcvtfp2hf
llvm.arm.neon.vcvtfxs2fp
llvm.arm.neon.vcvtfxu2fp
llvm.arm.neon.vcvthf2fp
llvm.arm.neon.vcvtms
llvm.arm.neon.vcvtmu
llvm.arm.neon.vcvtns
llvm.arm.neon.vcvtnu
llvm.arm.neon.vcvtps
llvm.arm.neon.vcvtpu
llvm.arm.neon.vhadds
llvm.arm.neon.vhaddu
llvm.arm.neon.vhsubs
llvm.arm.neon.vhsubu
llvm.arm.neon.vld1
llvm.arm.neon.vld1x2
llvm.arm.neon.vld1x3
llvm.arm.neon.vld1x4
llvm.arm.neon.vld2
llvm.arm.neon.vld2dup
llvm.arm.neon.vld2lane
llvm.arm.neon.vld3
llvm.arm.neon.vld3dup
llvm.arm.neon.vld3lane
llvm.arm.neon.vld4
llvm.arm.neon.vld4dup
llvm.arm.neon.vld4lane
llvm.arm.neon.vmaxnm
llvm.arm.neon.vmaxs
llvm.arm.neon.vmaxu
llvm.arm.neon.vminnm
llvm.arm.neon.vmins
llvm.arm.neon.vminu
llvm.arm.neon.vmullp
llvm.arm.neon.vmulls
llvm.arm.neon.vmullu
llvm.arm.neon.vmulp
llvm.arm.neon.vpadals
llvm.arm.neon.vpadalu
llvm.arm.neon.vpadd
llvm.arm.neon.vpaddls
llvm.arm.neon.vpaddlu
llvm.arm.neon.vpmaxs
llvm.arm.neon.vpmaxu
llvm.arm.neon.vpmins
llvm.arm.neon.vpminu
llvm.arm.neon.vqabs
llvm.arm.neon.vqdmulh
llvm.arm.neon.vqdmull
llvm.arm.neon.vqmovns
llvm.arm.neon.vqmovnsu
llvm.arm.neon.vqmovnu
llvm.arm.neon.vqneg
llvm.arm.neon.vqrdmulh
llvm.arm.neon.vqrshiftns
llvm.arm.neon.vqrshiftnsu
llvm.arm.neon.vqrshiftnu
llvm.arm.neon.vqrshifts
llvm.arm.neon.vqrshiftu
llvm.arm.neon.vqshiftns
llvm.arm.neon.vqshiftnsu
llvm.arm.neon.vqshiftnu
llvm.arm.neon.vqshifts
llvm.arm.neon.vqshiftsu
llvm.arm.neon.vqshiftu
llvm.arm.neon.vraddhn
llvm.arm.neon.vrecpe
llvm.arm.neon.vrecps
llvm.arm.neon.vrhadds
llvm.arm.neon.vrhaddu
llvm.arm.neon.vrinta
llvm.arm.neon.vrintm
llvm.arm.neon.vrintn
llvm.arm.neon.vrintp
llvm.arm.neon.vrintx
llvm.arm.neon.vrintz
llvm.arm.neon.vrshiftn
llvm.arm.neon.vrshifts
llvm.arm.neon.vrshiftu
llvm.arm.neon.vrsqrte
llvm.arm.neon.vrsqrts
llvm.arm.neon.vrsubhn
llvm.arm.neon.vshiftins
llvm.arm.neon.vshifts
llvm.arm.neon.vshiftu
llvm.arm.neon.vst1
llvm.arm.neon.vst1x2
llvm.arm.neon.vst1x3
llvm.arm.neon.vst1x4
llvm.arm.neon.vst2
llvm.arm.neon.vst2lane
llvm.arm.neon.vst3
llvm.arm.neon.vst3lane
llvm.arm.neon.vst4
llvm.arm.neon.vst4lane
llvm.arm.neon.vtbl1
llvm.arm.neon.vtbl2
llvm.arm.neon.vtbl3
llvm.arm.neon.vtbl4
llvm.arm.neon.vtbx1
llvm.arm.neon.vtbx2
llvm.arm.neon.vtbx3
llvm.arm.neon.vtbx4
llvm.arm.qadd
llvm.arm.qadd16
llvm.arm.qadd8
llvm.arm.qasx
llvm.arm.qsax
llvm.arm.qsub
llvm.arm.qsub16
llvm.arm.qsub8
llvm.arm.sadd16
llvm.arm.sadd8
llvm.arm.sasx
llvm.arm.sel
llvm.arm.set.fpscr
llvm.arm.shadd16
llvm.arm.shadd8
llvm.arm.shasx
llvm.arm.shsax
llvm.arm.shsub16
llvm.arm.shsub8
llvm.arm.smlabb
llvm.arm.smlabt
llvm.arm.smlad
llvm.arm.smladx
llvm.arm.smlald
llvm.arm.smlaldx
llvm.arm.smlatb
llvm.arm.smlatt
llvm.arm.smlawb
llvm.arm.smlawt
llvm.arm.smlsd
llvm.arm.smlsdx
llvm.arm.smlsld
llvm.arm.smlsldx
llvm.arm.smuad
llvm.arm.smuadx
llvm.arm.smulbb
llvm.arm.smulbt
llvm.arm.smultb
llvm.arm.smultt
llvm.arm.smulwb
llvm.arm.smulwt
llvm.arm.smusd
llvm.arm.smusdx
llvm.arm.space
llvm.arm.ssat
llvm.arm.ssat16
llvm.arm.ssax
llvm.arm.ssub16
llvm.arm.ssub8
llvm.arm.stc
llvm.arm.stc2
llvm.arm.stc2l
llvm.arm.stcl
llvm.arm.stlex
llvm.arm.stlexd
llvm.arm.strex
llvm.arm.strexd
llvm.arm.sxtab16
llvm.arm.sxtb16
llvm.arm.uadd16
llvm.arm.uadd8
llvm.arm.uasx
llvm.arm.uhadd16
llvm.arm.uhadd8
llvm.arm.uhasx
llvm.arm.uhsax
llvm.arm.uhsub16
llvm.arm.uhsub8
llvm.arm.undefined
llvm.arm.uqadd16
llvm.arm.uqadd8
llvm.arm.uqasx
llvm.arm.uqsax
llvm.arm.uqsub16
llvm.arm.uqsub8
llvm.arm.usad8
llvm.arm.usada8
llvm.arm.usat
llvm.arm.usat16
llvm.arm.usax
llvm.arm.usub16
llvm.arm.usub8
llvm.arm.uxtab16
llvm.arm.uxtb16
llvm.arm.vcvtr
llvm.arm.vcvtru
llvm.bpf.btf.type.id
llvm.bpf.load.byte
llvm.bpf.load.half
llvm.bpf.load.word
llvm.bpf.passthrough
llvm.bpf.preserve.enum.value
llvm.bpf.preserve.field.info
llvm.bpf.preserve.type.info
llvm.bpf.pseudo
llvm.hexagon.A2.abs
llvm.hexagon.A2.absp
llvm.hexagon.A2.abssat
llvm.hexagon.A2.add
llvm.hexagon.A2.addh.h16.hh
llvm.hexagon.A2.addh.h16.hl
llvm.hexagon.A2.addh.h16.lh
llvm.hexagon.A2.addh.h16.ll
llvm.hexagon.A2.addh.h16.sat.hh
llvm.hexagon.A2.addh.h16.sat.hl
llvm.hexagon.A2.addh.h16.sat.lh
llvm.hexagon.A2.addh.h16.sat.ll
llvm.hexagon.A2.addh.l16.hl
llvm.hexagon.A2.addh.l16.ll
llvm.hexagon.A2.addh.l16.sat.hl
llvm.hexagon.A2.addh.l16.sat.ll
llvm.hexagon.A2.addi
llvm.hexagon.A2.addp
llvm.hexagon.A2.addpsat
llvm.hexagon.A2.addsat
llvm.hexagon.A2.addsp
llvm.hexagon.A2.and
llvm.hexagon.A2.andir
llvm.hexagon.A2.andp
llvm.hexagon.A2.aslh
llvm.hexagon.A2.asrh
llvm.hexagon.A2.combine.hh
llvm.hexagon.A2.combine.hl
llvm.hexagon.A2.combine.lh
llvm.hexagon.A2.combine.ll
llvm.hexagon.A2.combineii
llvm.hexagon.A2.combinew
llvm.hexagon.A2.max
llvm.hexagon.A2.maxp
llvm.hexagon.A2.maxu
llvm.hexagon.A2.maxup
llvm.hexagon.A2.min
llvm.hexagon.A2.minp
llvm.hexagon.A2.minu
llvm.hexagon.A2.minup
llvm.hexagon.A2.neg
llvm.hexagon.A2.negp
llvm.hexagon.A2.negsat
llvm.hexagon.A2.not
llvm.hexagon.A2.notp
llvm.hexagon.A2.or
llvm.hexagon.A2.orir
llvm.hexagon.A2.orp
llvm.hexagon.A2.roundsat
llvm.hexagon.A2.sat
llvm.hexagon.A2.satb
llvm.hexagon.A2.sath
llvm.hexagon.A2.satub
llvm.hexagon.A2.satuh
llvm.hexagon.A2.sub
llvm.hexagon.A2.subh.h16.hh
llvm.hexagon.A2.subh.h16.hl
llvm.hexagon.A2.subh.h16.lh
llvm.hexagon.A2.subh.h16.ll
llvm.hexagon.A2.subh.h16.sat.hh
llvm.hexagon.A2.subh.h16.sat.hl
llvm.hexagon.A2.subh.h16.sat.lh
llvm.hexagon.A2.subh.h16.sat.ll
llvm.hexagon.A2.subh.l16.hl
llvm.hexagon.A2.subh.l16.ll
llvm.hexagon.A2.subh.l16.sat.hl
llvm.hexagon.A2.subh.l16.sat.ll
llvm.hexagon.A2.subp
llvm.hexagon.A2.subri
llvm.hexagon.A2.subsat
llvm.hexagon.A2.svaddh
llvm.hexagon.A2.svaddhs
llvm.hexagon.A2.svadduhs
llvm.hexagon.A2.svavgh
llvm.hexagon.A2.svavghs
llvm.hexagon.A2.svnavgh
llvm.hexagon.A2.svsubh
llvm.hexagon.A2.svsubhs
llvm.hexagon.A2.svsubuhs
llvm.hexagon.A2.swiz
llvm.hexagon.A2.sxtb
llvm.hexagon.A2.sxth
llvm.hexagon.A2.sxtw
llvm.hexagon.A2.tfr
llvm.hexagon.A2.tfrih
llvm.hexagon.A2.tfril
llvm.hexagon.A2.tfrp
llvm.hexagon.A2.tfrpi
llvm.hexagon.A2.tfrsi
llvm.hexagon.A2.vabsh
llvm.hexagon.A2.vabshsat
llvm.hexagon.A2.vabsw
llvm.hexagon.A2.vabswsat
llvm.hexagon.A2.vaddb.map
llvm.hexagon.A2.vaddh
llvm.hexagon.A2.vaddhs
llvm.hexagon.A2.vaddub
llvm.hexagon.A2.vaddubs
llvm.hexagon.A2.vadduhs
llvm.hexagon.A2.vaddw
llvm.hexagon.A2.vaddws
llvm.hexagon.A2.vavgh
llvm.hexagon.A2.vavghcr
llvm.hexagon.A2.vavghr
llvm.hexagon.A2.vavgub
llvm.hexagon.A2.vavgubr
llvm.hexagon.A2.vavguh
llvm.hexagon.A2.vavguhr
llvm.hexagon.A2.vavguw
llvm.hexagon.A2.vavguwr
llvm.hexagon.A2.vavgw
llvm.hexagon.A2.vavgwcr
llvm.hexagon.A2.vavgwr
llvm.hexagon.A2.vcmpbeq
llvm.hexagon.A2.vcmpbgtu
llvm.hexagon.A2.vcmpheq
llvm.hexagon.A2.vcmphgt
llvm.hexagon.A2.vcmphgtu
llvm.hexagon.A2.vcmpweq
llvm.hexagon.A2.vcmpwgt
llvm.hexagon.A2.vcmpwgtu
llvm.hexagon.A2.vconj
llvm.hexagon.A2.vmaxb
llvm.hexagon.A2.vmaxh
llvm.hexagon.A2.vmaxub
llvm.hexagon.A2.vmaxuh
llvm.hexagon.A2.vmaxuw
llvm.hexagon.A2.vmaxw
llvm.hexagon.A2.vminb
llvm.hexagon.A2.vminh
llvm.hexagon.A2.vminub
llvm.hexagon.A2.vminuh
llvm.hexagon.A2.vminuw
llvm.hexagon.A2.vminw
llvm.hexagon.A2.vnavgh
llvm.hexagon.A2.vnavghcr
llvm.hexagon.A2.vnavghr
llvm.hexagon.A2.vnavgw
llvm.hexagon.A2.vnavgwcr
llvm.hexagon.A2.vnavgwr
llvm.hexagon.A2.vraddub
llvm.hexagon.A2.vraddub.acc
llvm.hexagon.A2.vrsadub
llvm.hexagon.A2.vrsadub.acc
llvm.hexagon.A2.vsubb.map
llvm.hexagon.A2.vsubh
llvm.hexagon.A2.vsubhs
llvm.hexagon.A2.vsubub
llvm.hexagon.A2.vsububs
llvm.hexagon.A2.vsubuhs
llvm.hexagon.A2.vsubw
llvm.hexagon.A2.vsubws
llvm.hexagon.A2.xor
llvm.hexagon.A2.xorp
llvm.hexagon.A2.zxtb
llvm.hexagon.A2.zxth
llvm.hexagon.A4.andn
llvm.hexagon.A4.andnp
llvm.hexagon.A4.bitsplit
llvm.hexagon.A4.bitspliti
llvm.hexagon.A4.boundscheck
llvm.hexagon.A4.cmpbeq
llvm.hexagon.A4.cmpbeqi
llvm.hexagon.A4.cmpbgt
llvm.hexagon.A4.cmpbgti
llvm.hexagon.A4.cmpbgtu
llvm.hexagon.A4.cmpbgtui
llvm.hexagon.A4.cmpheq
llvm.hexagon.A4.cmpheqi
llvm.hexagon.A4.cmphgt
llvm.hexagon.A4.cmphgti
llvm.hexagon.A4.cmphgtu
llvm.hexagon.A4.cmphgtui
llvm.hexagon.A4.combineir
llvm.hexagon.A4.combineri
llvm.hexagon.A4.cround.ri
llvm.hexagon.A4.cround.rr
llvm.hexagon.A4.modwrapu
llvm.hexagon.A4.orn
llvm.hexagon.A4.ornp
llvm.hexagon.A4.rcmpeq
llvm.hexagon.A4.rcmpeqi
llvm.hexagon.A4.rcmpneq
llvm.hexagon.A4.rcmpneqi
llvm.hexagon.A4.round.ri
llvm.hexagon.A4.round.ri.sat
llvm.hexagon.A4.round.rr
llvm.hexagon.A4.round.rr.sat
llvm.hexagon.A4.tlbmatch
llvm.hexagon.A4.vcmpbeq.any
llvm.hexagon.A4.vcmpbeqi
llvm.hexagon.A4.vcmpbgt
llvm.hexagon.A4.vcmpbgti
llvm.hexagon.A4.vcmpbgtui
llvm.hexagon.A4.vcmpheqi
llvm.hexagon.A4.vcmphgti
llvm.hexagon.A4.vcmphgtui
llvm.hexagon.A4.vcmpweqi
llvm.hexagon.A4.vcmpwgti
llvm.hexagon.A4.vcmpwgtui
llvm.hexagon.A4.vrmaxh
llvm.hexagon.A4.vrmaxuh
llvm.hexagon.A4.vrmaxuw
llvm.hexagon.A4.vrmaxw
llvm.hexagon.A4.vrminh
llvm.hexagon.A4.vrminuh
llvm.hexagon.A4.vrminuw
llvm.hexagon.A4.vrminw
llvm.hexagon.A5.vaddhubs
llvm.hexagon.A6.vcmpbeq.notany
llvm.hexagon.A7.clip
llvm.hexagon.A7.croundd.ri
llvm.hexagon.A7.croundd.rr
llvm.hexagon.A7.vclip
llvm.hexagon.C2.all8
llvm.hexagon.C2.and
llvm.hexagon.C2.andn
llvm.hexagon.C2.any8
llvm.hexagon.C2.bitsclr
llvm.hexagon.C2.bitsclri
llvm.hexagon.C2.bitsset
llvm.hexagon.C2.cmpeq
llvm.hexagon.C2.cmpeqi
llvm.hexagon.C2.cmpeqp
llvm.hexagon.C2.cmpgei
llvm.hexagon.C2.cmpgeui
llvm.hexagon.C2.cmpgt
llvm.hexagon.C2.cmpgti
llvm.hexagon.C2.cmpgtp
llvm.hexagon.C2.cmpgtu
llvm.hexagon.C2.cmpgtui
llvm.hexagon.C2.cmpgtup
llvm.hexagon.C2.cmplt
llvm.hexagon.C2.cmpltu
llvm.hexagon.C2.mask
llvm.hexagon.C2.mux
llvm.hexagon.C2.muxii
llvm.hexagon.C2.muxir
llvm.hexagon.C2.muxri
llvm.hexagon.C2.not
llvm.hexagon.C2.or
llvm.hexagon.C2.orn
llvm.hexagon.C2.pxfer.map
llvm.hexagon.C2.tfrpr
llvm.hexagon.C2.tfrrp
llvm.hexagon.C2.vitpack
llvm.hexagon.C2.vmux
llvm.hexagon.C2.xor
llvm.hexagon.C4.and.and
llvm.hexagon.C4.and.andn
llvm.hexagon.C4.and.or
llvm.hexagon.C4.and.orn
llvm.hexagon.C4.cmplte
llvm.hexagon.C4.cmpltei
llvm.hexagon.C4.cmplteu
llvm.hexagon.C4.cmplteui
llvm.hexagon.C4.cmpneq
llvm.hexagon.C4.cmpneqi
llvm.hexagon.C4.fastcorner9
llvm.hexagon.C4.fastcorner9.not
llvm.hexagon.C4.nbitsclr
llvm.hexagon.C4.nbitsclri
llvm.hexagon.C4.nbitsset
llvm.hexagon.C4.or.and
llvm.hexagon.C4.or.andn
llvm.hexagon.C4.or.or
llvm.hexagon.C4.or.orn
llvm.hexagon.F2.conv.d2df
llvm.hexagon.F2.conv.d2sf
llvm.hexagon.F2.conv.df2d
llvm.hexagon.F2.conv.df2d.chop
llvm.hexagon.F2.conv.df2sf
llvm.hexagon.F2.conv.df2ud
llvm.hexagon.F2.conv.df2ud.chop
llvm.hexagon.F2.conv.df2uw
llvm.hexagon.F2.conv.df2uw.chop
llvm.hexagon.F2.conv.df2w
llvm.hexagon.F2.conv.df2w.chop
llvm.hexagon.F2.conv.sf2d
llvm.hexagon.F2.conv.sf2d.chop
llvm.hexagon.F2.conv.sf2df
llvm.hexagon.F2.conv.sf2ud
llvm.hexagon.F2.conv.sf2ud.chop
llvm.hexagon.F2.conv.sf2uw
llvm.hexagon.F2.conv.sf2uw.chop
llvm.hexagon.F2.conv.sf2w
llvm.hexagon.F2.conv.sf2w.chop
llvm.hexagon.F2.conv.ud2df
llvm.hexagon.F2.conv.ud2sf
llvm.hexagon.F2.conv.uw2df
llvm.hexagon.F2.conv.uw2sf
llvm.hexagon.F2.conv.w2df
llvm.hexagon.F2.conv.w2sf
llvm.hexagon.F2.dfadd
llvm.hexagon.F2.dfclass
llvm.hexagon.F2.dfcmpeq
llvm.hexagon.F2.dfcmpge
llvm.hexagon.F2.dfcmpgt
llvm.hexagon.F2.dfcmpuo
llvm.hexagon.F2.dfimm.n
llvm.hexagon.F2.dfimm.p
llvm.hexagon.F2.dfmax
llvm.hexagon.F2.dfmin
llvm.hexagon.F2.dfmpyfix
llvm.hexagon.F2.dfmpyhh
llvm.hexagon.F2.dfmpylh
llvm.hexagon.F2.dfmpyll
llvm.hexagon.F2.dfsub
llvm.hexagon.F2.sfadd
llvm.hexagon.F2.sfclass
llvm.hexagon.F2.sfcmpeq
llvm.hexagon.F2.sfcmpge
llvm.hexagon.F2.sfcmpgt
llvm.hexagon.F2.sfcmpuo
llvm.hexagon.F2.sffixupd
llvm.hexagon.F2.sffixupn
llvm.hexagon.F2.sffixupr
llvm.hexagon.F2.sffma
llvm.hexagon.F2.sffma.lib
llvm.hexagon.F2.sffma.sc
llvm.hexagon.F2.sffms
llvm.hexagon.F2.sffms.lib
llvm.hexagon.F2.sfimm.n
llvm.hexagon.F2.sfimm.p
llvm.hexagon.F2.sfmax
llvm.hexagon.F2.sfmin
llvm.hexagon.F2.sfmpy
llvm.hexagon.F2.sfsub
llvm.hexagon.L2.loadrb.pbr
llvm.hexagon.L2.loadrb.pci
llvm.hexagon.L2.loadrb.pcr
llvm.hexagon.L2.loadrd.pbr
llvm.hexagon.L2.loadrd.pci
llvm.hexagon.L2.loadrd.pcr
llvm.hexagon.L2.loadrh.pbr
llvm.hexagon.L2.loadrh.pci
llvm.hexagon.L2.loadrh.pcr
llvm.hexagon.L2.loadri.pbr
llvm.hexagon.L2.loadri.pci
llvm.hexagon.L2.loadri.pcr
llvm.hexagon.L2.loadrub.pbr
llvm.hexagon.L2.loadrub.pci
llvm.hexagon.L2.loadrub.pcr
llvm.hexagon.L2.loadruh.pbr
llvm.hexagon.L2.loadruh.pci
llvm.hexagon.L2.loadruh.pcr
llvm.hexagon.L2.loadw.locked
llvm.hexagon.L4.loadd.locked
llvm.hexagon.M2.acci
llvm.hexagon.M2.accii
llvm.hexagon.M2.cmaci.s0
llvm.hexagon.M2.cmacr.s0
llvm.hexagon.M2.cmacs.s0
llvm.hexagon.M2.cmacs.s1
llvm.hexagon.M2.cmacsc.s0
llvm.hexagon.M2.cmacsc.s1
llvm.hexagon.M2.cmpyi.s0
llvm.hexagon.M2.cmpyr.s0
llvm.hexagon.M2.cmpyrs.s0
llvm.hexagon.M2.cmpyrs.s1
llvm.hexagon.M2.cmpyrsc.s0
llvm.hexagon.M2.cmpyrsc.s1
llvm.hexagon.M2.cmpys.s0
llvm.hexagon.M2.cmpys.s1
llvm.hexagon.M2.cmpysc.s0
llvm.hexagon.M2.cmpysc.s1
llvm.hexagon.M2.cnacs.s0
llvm.hexagon.M2.cnacs.s1
llvm.hexagon.M2.cnacsc.s0
llvm.hexagon.M2.cnacsc.s1
llvm.hexagon.M2.dpmpyss.acc.s0
llvm.hexagon.M2.dpmpyss.nac.s0
llvm.hexagon.M2.dpmpyss.rnd.s0
llvm.hexagon.M2.dpmpyss.s0
llvm.hexagon.M2.dpmpyuu.acc.s0
llvm.hexagon.M2.dpmpyuu.nac.s0
llvm.hexagon.M2.dpmpyuu.s0
llvm.hexagon.M2.hmmpyh.rs1
llvm.hexagon.M2.hmmpyh.s1
llvm.hexagon.M2.hmmpyl.rs1
llvm.hexagon.M2.hmmpyl.s1
llvm.hexagon.M2.maci
llvm.hexagon.M2.macsin
llvm.hexagon.M2.macsip
llvm.hexagon.M2.mmachs.rs0
llvm.hexagon.M2.mmachs.rs1
llvm.hexagon.M2.mmachs.s0
llvm.hexagon.M2.mmachs.s1
llvm.hexagon.M2.mmacls.rs0
llvm.hexagon.M2.mmacls.rs1
llvm.hexagon.M2.mmacls.s0
llvm.hexagon.M2.mmacls.s1
llvm.hexagon.M2.mmacuhs.rs0
llvm.hexagon.M2.mmacuhs.rs1
llvm.hexagon.M2.mmacuhs.s0
llvm.hexagon.M2.mmacuhs.s1
llvm.hexagon.M2.mmaculs.rs0
llvm.hexagon.M2.mmaculs.rs1
llvm.hexagon.M2.mmaculs.s0
llvm.hexagon.M2.mmaculs.s1
llvm.hexagon.M2.mmpyh.rs0
llvm.hexagon.M2.mmpyh.rs1
llvm.hexagon.M2.mmpyh.s0
llvm.hexagon.M2.mmpyh.s1
llvm.hexagon.M2.mmpyl.rs0
llvm.hexagon.M2.mmpyl.rs1
llvm.hexagon.M2.mmpyl.s0
llvm.hexagon.M2.mmpyl.s1
llvm.hexagon.M2.mmpyuh.rs0
llvm.hexagon.M2.mmpyuh.rs1
llvm.hexagon.M2.mmpyuh.s0
llvm.hexagon.M2.mmpyuh.s1
llvm.hexagon.M2.mmpyul.rs0
llvm.hexagon.M2.mmpyul.rs1
llvm.hexagon.M2.mmpyul.s0
llvm.hexagon.M2.mmpyul.s1
llvm.hexagon.M2.mnaci
llvm.hexagon.M2.mpy.acc.hh.s0
llvm.hexagon.M2.mpy.acc.hh.s1
llvm.hexagon.M2.mpy.acc.hl.s0
llvm.hexagon.M2.mpy.acc.hl.s1
llvm.hexagon.M2.mpy.acc.lh.s0
llvm.hexagon.M2.mpy.acc.lh.s1
llvm.hexagon.M2.mpy.acc.ll.s0
llvm.hexagon.M2.mpy.acc.ll.s1
llvm.hexagon.M2.mpy.acc.sat.hh.s0
llvm.hexagon.M2.mpy.acc.sat.hh.s1
llvm.hexagon.M2.mpy.acc.sat.hl.s0
llvm.hexagon.M2.mpy.acc.sat.hl.s1
llvm.hexagon.M2.mpy.acc.sat.lh.s0
llvm.hexagon.M2.mpy.acc.sat.lh.s1
llvm.hexagon.M2.mpy.acc.sat.ll.s0
llvm.hexagon.M2.mpy.acc.sat.ll.s1
llvm.hexagon.M2.mpy.hh.s0
llvm.hexagon.M2.mpy.hh.s1
llvm.hexagon.M2.mpy.hl.s0
llvm.hexagon.M2.mpy.hl.s1
llvm.hexagon.M2.mpy.lh.s0
llvm.hexagon.M2.mpy.lh.s1
llvm.hexagon.M2.mpy.ll.s0
llvm.hexagon.M2.mpy.ll.s1
llvm.hexagon.M2.mpy.nac.hh.s0
llvm.hexagon.M2.mpy.nac.hh.s1
llvm.hexagon.M2.mpy.nac.hl.s0
llvm.hexagon.M2.mpy.nac.hl.s1
llvm.hexagon.M2.mpy.nac.lh.s0
llvm.hexagon.M2.mpy.nac.lh.s1
llvm.hexagon.M2.mpy.nac.ll.s0
llvm.hexagon.M2.mpy.nac.ll.s1
llvm.hexagon.M2.mpy.nac.sat.hh.s0
llvm.hexagon.M2.mpy.nac.sat.hh.s1
llvm.hexagon.M2.mpy.nac.sat.hl.s0
llvm.hexagon.M2.mpy.nac.sat.hl.s1
llvm.hexagon.M2.mpy.nac.sat.lh.s0
llvm.hexagon.M2.mpy.nac.sat.lh.s1
llvm.hexagon.M2.mpy.nac.sat.ll.s0
llvm.hexagon.M2.mpy.nac.sat.ll.s1
llvm.hexagon.M2.mpy.rnd.hh.s0
llvm.hexagon.M2.mpy.rnd.hh.s1
llvm.hexagon.M2.mpy.rnd.hl.s0
llvm.hexagon.M2.mpy.rnd.hl.s1
llvm.hexagon.M2.mpy.rnd.lh.s0
llvm.hexagon.M2.mpy.rnd.lh.s1
llvm.hexagon.M2.mpy.rnd.ll.s0
llvm.hexagon.M2.mpy.rnd.ll.s1
llvm.hexagon.M2.mpy.sat.hh.s0
llvm.hexagon.M2.mpy.sat.hh.s1
llvm.hexagon.M2.mpy.sat.hl.s0
llvm.hexagon.M2.mpy.sat.hl.s1
llvm.hexagon.M2.mpy.sat.lh.s0
llvm.hexagon.M2.mpy.sat.lh.s1
llvm.hexagon.M2.mpy.sat.ll.s0
llvm.hexagon.M2.mpy.sat.ll.s1
llvm.hexagon.M2.mpy.sat.rnd.hh.s0
llvm.hexagon.M2.mpy.sat.rnd.hh.s1
llvm.hexagon.M2.mpy.sat.rnd.hl.s0
llvm.hexagon.M2.mpy.sat.rnd.hl.s1
llvm.hexagon.M2.mpy.sat.rnd.lh.s0
llvm.hexagon.M2.mpy.sat.rnd.lh.s1
llvm.hexagon.M2.mpy.sat.rnd.ll.s0
llvm.hexagon.M2.mpy.sat.rnd.ll.s1
llvm.hexagon.M2.mpy.up
llvm.hexagon.M2.mpy.up.s1
llvm.hexagon.M2.mpy.up.s1.sat
llvm.hexagon.M2.mpyd.acc.hh.s0
llvm.hexagon.M2.mpyd.acc.hh.s1
llvm.hexagon.M2.mpyd.acc.hl.s0
llvm.hexagon.M2.mpyd.acc.hl.s1
llvm.hexagon.M2.mpyd.acc.lh.s0
llvm.hexagon.M2.mpyd.acc.lh.s1
llvm.hexagon.M2.mpyd.acc.ll.s0
llvm.hexagon.M2.mpyd.acc.ll.s1
llvm.hexagon.M2.mpyd.hh.s0
llvm.hexagon.M2.mpyd.hh.s1
llvm.hexagon.M2.mpyd.hl.s0
llvm.hexagon.M2.mpyd.hl.s1
llvm.hexagon.M2.mpyd.lh.s0
llvm.hexagon.M2.mpyd.lh.s1
llvm.hexagon.M2.mpyd.ll.s0
llvm.hexagon.M2.mpyd.ll.s1
llvm.hexagon.M2.mpyd.nac.hh.s0
llvm.hexagon.M2.mpyd.nac.hh.s1
llvm.hexagon.M2.mpyd.nac.hl.s0
llvm.hexagon.M2.mpyd.nac.hl.s1
llvm.hexagon.M2.mpyd.nac.lh.s0
llvm.hexagon.M2.mpyd.nac.lh.s1
llvm.hexagon.M2.mpyd.nac.ll.s0
llvm.hexagon.M2.mpyd.nac.ll.s1
llvm.hexagon.M2.mpyd.rnd.hh.s0
llvm.hexagon.M2.mpyd.rnd.hh.s1
llvm.hexagon.M2.mpyd.rnd.hl.s0
llvm.hexagon.M2.mpyd.rnd.hl.s1
llvm.hexagon.M2.mpyd.rnd.lh.s0
llvm.hexagon.M2.mpyd.rnd.lh.s1
llvm.hexagon.M2.mpyd.rnd.ll.s0
llvm.hexagon.M2.mpyd.rnd.ll.s1
llvm.hexagon.M2.mpyi
llvm.hexagon.M2.mpysmi
llvm.hexagon.M2.mpysu.up
llvm.hexagon.M2.mpyu.acc.hh.s0
llvm.hexagon.M2.mpyu.acc.hh.s1
llvm.hexagon.M2.mpyu.acc.hl.s0
llvm.hexagon.M2.mpyu.acc.hl.s1
llvm.hexagon.M2.mpyu.acc.lh.s0
llvm.hexagon.M2.mpyu.acc.lh.s1
llvm.hexagon.M2.mpyu.acc.ll.s0
llvm.hexagon.M2.mpyu.acc.ll.s1
llvm.hexagon.M2.mpyu.hh.s0
llvm.hexagon.M2.mpyu.hh.s1
llvm.hexagon.M2.mpyu.hl.s0
llvm.hexagon.M2.mpyu.hl.s1
llvm.hexagon.M2.mpyu.lh.s0
llvm.hexagon.M2.mpyu.lh.s1
llvm.hexagon.M2.mpyu.ll.s0
llvm.hexagon.M2.mpyu.ll.s1
llvm.hexagon.M2.mpyu.nac.hh.s0
llvm.hexagon.M2.mpyu.nac.hh.s1
llvm.hexagon.M2.mpyu.nac.hl.s0
llvm.hexagon.M2.mpyu.nac.hl.s1
llvm.hexagon.M2.mpyu.nac.lh.s0
llvm.hexagon.M2.mpyu.nac.lh.s1
llvm.hexagon.M2.mpyu.nac.ll.s0
llvm.hexagon.M2.mpyu.nac.ll.s1
llvm.hexagon.M2.mpyu.up
llvm.hexagon.M2.mpyud.acc.hh.s0
llvm.hexagon.M2.mpyud.acc.hh.s1
llvm.hexagon.M2.mpyud.acc.hl.s0
llvm.hexagon.M2.mpyud.acc.hl.s1
llvm.hexagon.M2.mpyud.acc.lh.s0
llvm.hexagon.M2.mpyud.acc.lh.s1
llvm.hexagon.M2.mpyud.acc.ll.s0
llvm.hexagon.M2.mpyud.acc.ll.s1
llvm.hexagon.M2.mpyud.hh.s0
llvm.hexagon.M2.mpyud.hh.s1
llvm.hexagon.M2.mpyud.hl.s0
llvm.hexagon.M2.mpyud.hl.s1
llvm.hexagon.M2.mpyud.lh.s0
llvm.hexagon.M2.mpyud.lh.s1
llvm.hexagon.M2.mpyud.ll.s0
llvm.hexagon.M2.mpyud.ll.s1
llvm.hexagon.M2.mpyud.nac.hh.s0
llvm.hexagon.M2.mpyud.nac.hh.s1
llvm.hexagon.M2.mpyud.nac.hl.s0
llvm.hexagon.M2.mpyud.nac.hl.s1
llvm.hexagon.M2.mpyud.nac.lh.s0
llvm.hexagon.M2.mpyud.nac.lh.s1
llvm.hexagon.M2.mpyud.nac.ll.s0
llvm.hexagon.M2.mpyud.nac.ll.s1
llvm.hexagon.M2.mpyui
llvm.hexagon.M2.nacci
llvm.hexagon.M2.naccii
llvm.hexagon.M2.subacc
llvm.hexagon.M2.vabsdiffh
llvm.hexagon.M2.vabsdiffw
llvm.hexagon.M2.vcmac.s0.sat.i
llvm.hexagon.M2.vcmac.s0.sat.r
llvm.hexagon.M2.vcmpy.s0.sat.i
llvm.hexagon.M2.vcmpy.s0.sat.r
llvm.hexagon.M2.vcmpy.s1.sat.i
llvm.hexagon.M2.vcmpy.s1.sat.r
llvm.hexagon.M2.vdmacs.s0
llvm.hexagon.M2.vdmacs.s1
llvm.hexagon.M2.vdmpyrs.s0
llvm.hexagon.M2.vdmpyrs.s1
llvm.hexagon.M2.vdmpys.s0
llvm.hexagon.M2.vdmpys.s1
llvm.hexagon.M2.vmac2
llvm.hexagon.M2.vmac2es
llvm.hexagon.M2.vmac2es.s0
llvm.hexagon.M2.vmac2es.s1
llvm.hexagon.M2.vmac2s.s0
llvm.hexagon.M2.vmac2s.s1
llvm.hexagon.M2.vmac2su.s0
llvm.hexagon.M2.vmac2su.s1
llvm.hexagon.M2.vmpy2es.s0
llvm.hexagon.M2.vmpy2es.s1
llvm.hexagon.M2.vmpy2s.s0
llvm.hexagon.M2.vmpy2s.s0pack
llvm.hexagon.M2.vmpy2s.s1
llvm.hexagon.M2.vmpy2s.s1pack
llvm.hexagon.M2.vmpy2su.s0
llvm.hexagon.M2.vmpy2su.s1
llvm.hexagon.M2.vraddh
llvm.hexagon.M2.vradduh
llvm.hexagon.M2.vrcmaci.s0
llvm.hexagon.M2.vrcmaci.s0c
llvm.hexagon.M2.vrcmacr.s0
llvm.hexagon.M2.vrcmacr.s0c
llvm.hexagon.M2.vrcmpyi.s0
llvm.hexagon.M2.vrcmpyi.s0c
llvm.hexagon.M2.vrcmpyr.s0
llvm.hexagon.M2.vrcmpyr.s0c
llvm.hexagon.M2.vrcmpys.acc.s1
llvm.hexagon.M2.vrcmpys.s1
llvm.hexagon.M2.vrcmpys.s1rp
llvm.hexagon.M2.vrmac.s0
llvm.hexagon.M2.vrmpy.s0
llvm.hexagon.M2.xor.xacc
llvm.hexagon.M4.and.and
llvm.hexagon.M4.and.andn
llvm.hexagon.M4.and.or
llvm.hexagon.M4.and.xor
llvm.hexagon.M4.cmpyi.wh
llvm.hexagon.M4.cmpyi.whc
llvm.hexagon.M4.cmpyr.wh
llvm.hexagon.M4.cmpyr.whc
llvm.hexagon.M4.mac.up.s1.sat
llvm.hexagon.M4.mpyri.addi
llvm.hexagon.M4.mpyri.addr
llvm.hexagon.M4.mpyri.addr.u2
llvm.hexagon.M4.mpyrr.addi
llvm.hexagon.M4.mpyrr.addr
llvm.hexagon.M4.nac.up.s1.sat
llvm.hexagon.M4.or.and
llvm.hexagon.M4.or.andn
llvm.hexagon.M4.or.or
llvm.hexagon.M4.or.xor
llvm.hexagon.M4.pmpyw
llvm.hexagon.M4.pmpyw.acc
llvm.hexagon.M4.vpmpyh
llvm.hexagon.M4.vpmpyh.acc
llvm.hexagon.M4.vrmpyeh.acc.s0
llvm.hexagon.M4.vrmpyeh.acc.s1
llvm.hexagon.M4.vrmpyeh.s0
llvm.hexagon.M4.vrmpyeh.s1
llvm.hexagon.M4.vrmpyoh.acc.s0
llvm.hexagon.M4.vrmpyoh.acc.s1
llvm.hexagon.M4.vrmpyoh.s0
llvm.hexagon.M4.vrmpyoh.s1
llvm.hexagon.M4.xor.and
llvm.hexagon.M4.xor.andn
llvm.hexagon.M4.xor.or
llvm.hexagon.M4.xor.xacc
llvm.hexagon.M5.vdmacbsu
llvm.hexagon.M5.vdmpybsu
llvm.hexagon.M5.vmacbsu
llvm.hexagon.M5.vmacbuu
llvm.hexagon.M5.vmpybsu
llvm.hexagon.M5.vmpybuu
llvm.hexagon.M5.vrmacbsu
llvm.hexagon.M5.vrmacbuu
llvm.hexagon.M5.vrmpybsu
llvm.hexagon.M5.vrmpybuu
llvm.hexagon.M6.vabsdiffb
llvm.hexagon.M6.vabsdiffub
llvm.hexagon.M7.dcmpyiw
llvm.hexagon.M7.dcmpyiw.acc
llvm.hexagon.M7.dcmpyiwc
llvm.hexagon.M7.dcmpyiwc.acc
llvm.hexagon.M7.dcmpyrw
llvm.hexagon.M7.dcmpyrw.acc
llvm.hexagon.M7.dcmpyrwc
llvm.hexagon.M7.dcmpyrwc.acc
llvm.hexagon.M7.vdmpy
llvm.hexagon.M7.vdmpy.acc
llvm.hexagon.M7.wcmpyiw
llvm.hexagon.M7.wcmpyiw.rnd
llvm.hexagon.M7.wcmpyiwc
llvm.hexagon.M7.wcmpyiwc.rnd
llvm.hexagon.M7.wcmpyrw
llvm.hexagon.M7.wcmpyrw.rnd
llvm.hexagon.M7.wcmpyrwc
llvm.hexagon.M7.wcmpyrwc.rnd
llvm.hexagon.S2.addasl.rrri
llvm.hexagon.S2.asl.i.p
llvm.hexagon.S2.asl.i.p.acc
llvm.hexagon.S2.asl.i.p.and
llvm.hexagon.S2.asl.i.p.nac
llvm.hexagon.S2.asl.i.p.or
llvm.hexagon.S2.asl.i.p.xacc
llvm.hexagon.S2.asl.i.r
llvm.hexagon.S2.asl.i.r.acc
llvm.hexagon.S2.asl.i.r.and
llvm.hexagon.S2.asl.i.r.nac
llvm.hexagon.S2.asl.i.r.or
llvm.hexagon.S2.asl.i.r.sat
llvm.hexagon.S2.asl.i.r.xacc
llvm.hexagon.S2.asl.i.vh
llvm.hexagon.S2.asl.i.vw
llvm.hexagon.S2.asl.r.p
llvm.hexagon.S2.asl.r.p.acc
llvm.hexagon.S2.asl.r.p.and
llvm.hexagon.S2.asl.r.p.nac
llvm.hexagon.S2.asl.r.p.or
llvm.hexagon.S2.asl.r.p.xor
llvm.hexagon.S2.asl.r.r
llvm.hexagon.S2.asl.r.r.acc
llvm.hexagon.S2.asl.r.r.and
llvm.hexagon.S2.asl.r.r.nac
llvm.hexagon.S2.asl.r.r.or
llvm.hexagon.S2.asl.r.r.sat
llvm.hexagon.S2.asl.r.vh
llvm.hexagon.S2.asl.r.vw
llvm.hexagon.S2.asr.i.p
llvm.hexagon.S2.asr.i.p.acc
llvm.hexagon.S2.asr.i.p.and
llvm.hexagon.S2.asr.i.p.nac
llvm.hexagon.S2.asr.i.p.or
llvm.hexagon.S2.asr.i.p.rnd
llvm.hexagon.S2.asr.i.p.rnd.goodsyntax
llvm.hexagon.S2.asr.i.r
llvm.hexagon.S2.asr.i.r.acc
llvm.hexagon.S2.asr.i.r.and
llvm.hexagon.S2.asr.i.r.nac
llvm.hexagon.S2.asr.i.r.or
llvm.hexagon.S2.asr.i.r.rnd
llvm.hexagon.S2.asr.i.r.rnd.goodsyntax
llvm.hexagon.S2.asr.i.svw.trun
llvm.hexagon.S2.asr.i.vh
llvm.hexagon.S2.asr.i.vw
llvm.hexagon.S2.asr.r.p
llvm.hexagon.S2.asr.r.p.acc
llvm.hexagon.S2.asr.r.p.and
llvm.hexagon.S2.asr.r.p.nac
llvm.hexagon.S2.asr.r.p.or
llvm.hexagon.S2.asr.r.p.xor
llvm.hexagon.S2.asr.r.r
llvm.hexagon.S2.asr.r.r.acc
llvm.hexagon.S2.asr.r.r.and
llvm.hexagon.S2.asr.r.r.nac
llvm.hexagon.S2.asr.r.r.or
llvm.hexagon.S2.asr.r.r.sat
llvm.hexagon.S2.asr.r.svw.trun
llvm.hexagon.S2.asr.r.vh
llvm.hexagon.S2.asr.r.vw
llvm.hexagon.S2.brev
llvm.hexagon.S2.brevp
llvm.hexagon.S2.cl0
llvm.hexagon.S2.cl0p
llvm.hexagon.S2.cl1
llvm.hexagon.S2.cl1p
llvm.hexagon.S2.clb
llvm.hexagon.S2.clbnorm
llvm.hexagon.S2.clbp
llvm.hexagon.S2.clrbit.i
llvm.hexagon.S2.clrbit.r
llvm.hexagon.S2.ct0
llvm.hexagon.S2.ct0p
llvm.hexagon.S2.ct1
llvm.hexagon.S2.ct1p
llvm.hexagon.S2.deinterleave
llvm.hexagon.S2.extractu
llvm.hexagon.S2.extractu.rp
llvm.hexagon.S2.extractup
llvm.hexagon.S2.extractup.rp
llvm.hexagon.S2.insert
llvm.hexagon.S2.insert.rp
llvm.hexagon.S2.insertp
llvm.hexagon.S2.insertp.rp
llvm.hexagon.S2.interleave
llvm.hexagon.S2.lfsp
llvm.hexagon.S2.lsl.r.p
llvm.hexagon.S2.lsl.r.p.acc
llvm.hexagon.S2.lsl.r.p.and
llvm.hexagon.S2.lsl.r.p.nac
llvm.hexagon.S2.lsl.r.p.or
llvm.hexagon.S2.lsl.r.p.xor
llvm.hexagon.S2.lsl.r.r
llvm.hexagon.S2.lsl.r.r.acc
llvm.hexagon.S2.lsl.r.r.and
llvm.hexagon.S2.lsl.r.r.nac
llvm.hexagon.S2.lsl.r.r.or
llvm.hexagon.S2.lsl.r.vh
llvm.hexagon.S2.lsl.r.vw
llvm.hexagon.S2.lsr.i.p
llvm.hexagon.S2.lsr.i.p.acc
llvm.hexagon.S2.lsr.i.p.and
llvm.hexagon.S2.lsr.i.p.nac
llvm.hexagon.S2.lsr.i.p.or
llvm.hexagon.S2.lsr.i.p.xacc
llvm.hexagon.S2.lsr.i.r
llvm.hexagon.S2.lsr.i.r.acc
llvm.hexagon.S2.lsr.i.r.and
llvm.hexagon.S2.lsr.i.r.nac
llvm.hexagon.S2.lsr.i.r.or
llvm.hexagon.S2.lsr.i.r.xacc
llvm.hexagon.S2.lsr.i.vh
llvm.hexagon.S2.lsr.i.vw
llvm.hexagon.S2.lsr.r.p
llvm.hexagon.S2.lsr.r.p.acc
llvm.hexagon.S2.lsr.r.p.and
llvm.hexagon.S2.lsr.r.p.nac
llvm.hexagon.S2.lsr.r.p.or
llvm.hexagon.S2.lsr.r.p.xor
llvm.hexagon.S2.lsr.r.r
llvm.hexagon.S2.lsr.r.r.acc
llvm.hexagon.S2.lsr.r.r.and
llvm.hexagon.S2.lsr.r.r.nac
llvm.hexagon.S2.lsr.r.r.or
llvm.hexagon.S2.lsr.r.vh
llvm.hexagon.S2.lsr.r.vw
llvm.hexagon.S2.mask
llvm.hexagon.S2.packhl
llvm.hexagon.S2.parityp
llvm.hexagon.S2.setbit.i
llvm.hexagon.S2.setbit.r
llvm.hexagon.S2.shuffeb
llvm.hexagon.S2.shuffeh
llvm.hexagon.S2.shuffob
llvm.hexagon.S2.shuffoh
llvm.hexagon.S2.storerb.pbr
llvm.hexagon.S2.storerb.pci
llvm.hexagon.S2.storerb.pcr
llvm.hexagon.S2.storerd.pbr
llvm.hexagon.S2.storerd.pci
llvm.hexagon.S2.storerd.pcr
llvm.hexagon.S2.storerf.pbr
llvm.hexagon.S2.storerf.pci
llvm.hexagon.S2.storerf.pcr
llvm.hexagon.S2.storerh.pbr
llvm.hexagon.S2.storerh.pci
llvm.hexagon.S2.storerh.pcr
llvm.hexagon.S2.storeri.pbr
llvm.hexagon.S2.storeri.pci
llvm.hexagon.S2.storeri.pcr
llvm.hexagon.S2.storew.locked
llvm.hexagon.S2.svsathb
llvm.hexagon.S2.svsathub
llvm.hexagon.S2.tableidxb.goodsyntax
llvm.hexagon.S2.tableidxd.goodsyntax
llvm.hexagon.S2.tableidxh.goodsyntax
llvm.hexagon.S2.tableidxw.goodsyntax
llvm.hexagon.S2.togglebit.i
llvm.hexagon.S2.togglebit.r
llvm.hexagon.S2.tstbit.i
llvm.hexagon.S2.tstbit.r
llvm.hexagon.S2.valignib
llvm.hexagon.S2.valignrb
llvm.hexagon.S2.vcnegh
llvm.hexagon.S2.vcrotate
llvm.hexagon.S2.vrcnegh
llvm.hexagon.S2.vrndpackwh
llvm.hexagon.S2.vrndpackwhs
llvm.hexagon.S2.vsathb
llvm.hexagon.S2.vsathb.nopack
llvm.hexagon.S2.vsathub
llvm.hexagon.S2.vsathub.nopack
llvm.hexagon.S2.vsatwh
llvm.hexagon.S2.vsatwh.nopack
llvm.hexagon.S2.vsatwuh
llvm.hexagon.S2.vsatwuh.nopack
llvm.hexagon.S2.vsplatrb
llvm.hexagon.S2.vsplatrh
llvm.hexagon.S2.vspliceib
llvm.hexagon.S2.vsplicerb
llvm.hexagon.S2.vsxtbh
llvm.hexagon.S2.vsxthw
llvm.hexagon.S2.vtrunehb
llvm.hexagon.S2.vtrunewh
llvm.hexagon.S2.vtrunohb
llvm.hexagon.S2.vtrunowh
llvm.hexagon.S2.vzxtbh
llvm.hexagon.S2.vzxthw
llvm.hexagon.S4.addaddi
llvm.hexagon.S4.addi.asl.ri
llvm.hexagon.S4.addi.lsr.ri
llvm.hexagon.S4.andi.asl.ri
llvm.hexagon.S4.andi.lsr.ri
llvm.hexagon.S4.clbaddi
llvm.hexagon.S4.clbpaddi
llvm.hexagon.S4.clbpnorm
llvm.hexagon.S4.extract
llvm.hexagon.S4.extract.rp
llvm.hexagon.S4.extractp
llvm.hexagon.S4.extractp.rp
llvm.hexagon.S4.lsli
llvm.hexagon.S4.ntstbit.i
llvm.hexagon.S4.ntstbit.r
llvm.hexagon.S4.or.andi
llvm.hexagon.S4.or.andix
llvm.hexagon.S4.or.ori
llvm.hexagon.S4.ori.asl.ri
llvm.hexagon.S4.ori.lsr.ri
llvm.hexagon.S4.parity
llvm.hexagon.S4.stored.locked
llvm.hexagon.S4.subaddi
llvm.hexagon.S4.subi.asl.ri
llvm.hexagon.S4.subi.lsr.ri
llvm.hexagon.S4.vrcrotate
llvm.hexagon.S4.vrcrotate.acc
llvm.hexagon.S4.vxaddsubh
llvm.hexagon.S4.vxaddsubhr
llvm.hexagon.S4.vxaddsubw
llvm.hexagon.S4.vxsubaddh
llvm.hexagon.S4.vxsubaddhr
llvm.hexagon.S4.vxsubaddw
llvm.hexagon.S5.asrhub.rnd.sat.goodsyntax
llvm.hexagon.S5.asrhub.sat
llvm.hexagon.S5.popcountp
llvm.hexagon.S5.vasrhrnd.goodsyntax
llvm.hexagon.S6.rol.i.p
llvm.hexagon.S6.rol.i.p.acc
llvm.hexagon.S6.rol.i.p.and
llvm.hexagon.S6.rol.i.p.nac
llvm.hexagon.S6.rol.i.p.or
llvm.hexagon.S6.rol.i.p.xacc
llvm.hexagon.S6.rol.i.r
llvm.hexagon.S6.rol.i.r.acc
llvm.hexagon.S6.rol.i.r.and
llvm.hexagon.S6.rol.i.r.nac
llvm.hexagon.S6.rol.i.r.or
llvm.hexagon.S6.rol.i.r.xacc
llvm.hexagon.S6.vsplatrbp
llvm.hexagon.S6.vtrunehb.ppp
llvm.hexagon.S6.vtrunohb.ppp
llvm.hexagon.V6.extractw
llvm.hexagon.V6.extractw.128B
llvm.hexagon.V6.hi
llvm.hexagon.V6.hi.128B
llvm.hexagon.V6.lo
llvm.hexagon.V6.lo.128B
llvm.hexagon.V6.lvsplatb
llvm.hexagon.V6.lvsplatb.128B
llvm.hexagon.V6.lvsplath
llvm.hexagon.V6.lvsplath.128B
llvm.hexagon.V6.lvsplatw
llvm.hexagon.V6.lvsplatw.128B
llvm.hexagon.V6.pred.and
llvm.hexagon.V6.pred.and.128B
llvm.hexagon.V6.pred.and.n
llvm.hexagon.V6.pred.and.n.128B
llvm.hexagon.V6.pred.not
llvm.hexagon.V6.pred.not.128B
llvm.hexagon.V6.pred.or
llvm.hexagon.V6.pred.or.128B
llvm.hexagon.V6.pred.or.n
llvm.hexagon.V6.pred.or.n.128B
llvm.hexagon.V6.pred.scalar2
llvm.hexagon.V6.pred.scalar2.128B
llvm.hexagon.V6.pred.scalar2v2
llvm.hexagon.V6.pred.scalar2v2.128B
llvm.hexagon.V6.pred.typecast
llvm.hexagon.V6.pred.typecast.128B
llvm.hexagon.V6.pred.xor
llvm.hexagon.V6.pred.xor.128B
llvm.hexagon.V6.shuffeqh
llvm.hexagon.V6.shuffeqh.128B
llvm.hexagon.V6.shuffeqw
llvm.hexagon.V6.shuffeqw.128B
llvm.hexagon.V6.vS32b.nqpred.ai
llvm.hexagon.V6.vS32b.nqpred.ai.128B
llvm.hexagon.V6.vS32b.nt.nqpred.ai
llvm.hexagon.V6.vS32b.nt.nqpred.ai.128B
llvm.hexagon.V6.vS32b.nt.qpred.ai
llvm.hexagon.V6.vS32b.nt.qpred.ai.128B
llvm.hexagon.V6.vS32b.qpred.ai
llvm.hexagon.V6.vS32b.qpred.ai.128B
llvm.hexagon.V6.vabsb
llvm.hexagon.V6.vabsb.128B
llvm.hexagon.V6.vabsb.sat
llvm.hexagon.V6.vabsb.sat.128B
llvm.hexagon.V6.vabsdiffh
llvm.hexagon.V6.vabsdiffh.128B
llvm.hexagon.V6.vabsdiffub
llvm.hexagon.V6.vabsdiffub.128B
llvm.hexagon.V6.vabsdiffuh
llvm.hexagon.V6.vabsdiffuh.128B
llvm.hexagon.V6.vabsdiffw
llvm.hexagon.V6.vabsdiffw.128B
llvm.hexagon.V6.vabsh
llvm.hexagon.V6.vabsh.128B
llvm.hexagon.V6.vabsh.sat
llvm.hexagon.V6.vabsh.sat.128B
llvm.hexagon.V6.vabsw
llvm.hexagon.V6.vabsw.128B
llvm.hexagon.V6.vabsw.sat
llvm.hexagon.V6.vabsw.sat.128B
llvm.hexagon.V6.vaddb
llvm.hexagon.V6.vaddb.128B
llvm.hexagon.V6.vaddb.dv
llvm.hexagon.V6.vaddb.dv.128B
llvm.hexagon.V6.vaddbnq
llvm.hexagon.V6.vaddbnq.128B
llvm.hexagon.V6.vaddbq
llvm.hexagon.V6.vaddbq.128B
llvm.hexagon.V6.vaddbsat
llvm.hexagon.V6.vaddbsat.128B
llvm.hexagon.V6.vaddbsat.dv
llvm.hexagon.V6.vaddbsat.dv.128B
llvm.hexagon.V6.vaddcarry
llvm.hexagon.V6.vaddcarry.128B
llvm.hexagon.V6.vaddcarrysat
llvm.hexagon.V6.vaddcarrysat.128B
llvm.hexagon.V6.vaddclbh
llvm.hexagon.V6.vaddclbh.128B
llvm.hexagon.V6.vaddclbw
llvm.hexagon.V6.vaddclbw.128B
llvm.hexagon.V6.vaddh
llvm.hexagon.V6.vaddh.128B
llvm.hexagon.V6.vaddh.dv
llvm.hexagon.V6.vaddh.dv.128B
llvm.hexagon.V6.vaddhnq
llvm.hexagon.V6.vaddhnq.128B
llvm.hexagon.V6.vaddhq
llvm.hexagon.V6.vaddhq.128B
llvm.hexagon.V6.vaddhsat
llvm.hexagon.V6.vaddhsat.128B
llvm.hexagon.V6.vaddhsat.dv
llvm.hexagon.V6.vaddhsat.dv.128B
llvm.hexagon.V6.vaddhw
llvm.hexagon.V6.vaddhw.128B
llvm.hexagon.V6.vaddhw.acc
llvm.hexagon.V6.vaddhw.acc.128B
llvm.hexagon.V6.vaddubh
llvm.hexagon.V6.vaddubh.128B
llvm.hexagon.V6.vaddubh.acc
llvm.hexagon.V6.vaddubh.acc.128B
llvm.hexagon.V6.vaddubsat
llvm.hexagon.V6.vaddubsat.128B
llvm.hexagon.V6.vaddubsat.dv
llvm.hexagon.V6.vaddubsat.dv.128B
llvm.hexagon.V6.vaddububb.sat
llvm.hexagon.V6.vaddububb.sat.128B
llvm.hexagon.V6.vadduhsat
llvm.hexagon.V6.vadduhsat.128B
llvm.hexagon.V6.vadduhsat.dv
llvm.hexagon.V6.vadduhsat.dv.128B
llvm.hexagon.V6.vadduhw
llvm.hexagon.V6.vadduhw.128B
llvm.hexagon.V6.vadduhw.acc
llvm.hexagon.V6.vadduhw.acc.128B
llvm.hexagon.V6.vadduwsat
llvm.hexagon.V6.vadduwsat.128B
llvm.hexagon.V6.vadduwsat.dv
llvm.hexagon.V6.vadduwsat.dv.128B
llvm.hexagon.V6.vaddw
llvm.hexagon.V6.vaddw.128B
llvm.hexagon.V6.vaddw.dv
llvm.hexagon.V6.vaddw.dv.128B
llvm.hexagon.V6.vaddwnq
llvm.hexagon.V6.vaddwnq.128B
llvm.hexagon.V6.vaddwq
llvm.hexagon.V6.vaddwq.128B
llvm.hexagon.V6.vaddwsat
llvm.hexagon.V6.vaddwsat.128B
llvm.hexagon.V6.vaddwsat.dv
llvm.hexagon.V6.vaddwsat.dv.128B
llvm.hexagon.V6.valignb
llvm.hexagon.V6.valignb.128B
llvm.hexagon.V6.valignbi
llvm.hexagon.V6.valignbi.128B
llvm.hexagon.V6.vand
llvm.hexagon.V6.vand.128B
llvm.hexagon.V6.vandnqrt
llvm.hexagon.V6.vandnqrt.128B
llvm.hexagon.V6.vandnqrt.acc
llvm.hexagon.V6.vandnqrt.acc.128B
llvm.hexagon.V6.vandqrt
llvm.hexagon.V6.vandqrt.128B
llvm.hexagon.V6.vandqrt.acc
llvm.hexagon.V6.vandqrt.acc.128B
llvm.hexagon.V6.vandvnqv
llvm.hexagon.V6.vandvnqv.128B
llvm.hexagon.V6.vandvqv
llvm.hexagon.V6.vandvqv.128B
llvm.hexagon.V6.vandvrt
llvm.hexagon.V6.vandvrt.128B
llvm.hexagon.V6.vandvrt.acc
llvm.hexagon.V6.vandvrt.acc.128B
llvm.hexagon.V6.vaslh
llvm.hexagon.V6.vaslh.128B
llvm.hexagon.V6.vaslh.acc
llvm.hexagon.V6.vaslh.acc.128B
llvm.hexagon.V6.vaslhv
llvm.hexagon.V6.vaslhv.128B
llvm.hexagon.V6.vaslw
llvm.hexagon.V6.vaslw.128B
llvm.hexagon.V6.vaslw.acc
llvm.hexagon.V6.vaslw.acc.128B
llvm.hexagon.V6.vaslwv
llvm.hexagon.V6.vaslwv.128B
llvm.hexagon.V6.vasr.into
llvm.hexagon.V6.vasr.into.128B
llvm.hexagon.V6.vasrh
llvm.hexagon.V6.vasrh.128B
llvm.hexagon.V6.vasrh.acc
llvm.hexagon.V6.vasrh.acc.128B
llvm.hexagon.V6.vasrhbrndsat
llvm.hexagon.V6.vasrhbrndsat.128B
llvm.hexagon.V6.vasrhbsat
llvm.hexagon.V6.vasrhbsat.128B
llvm.hexagon.V6.vasrhubrndsat
llvm.hexagon.V6.vasrhubrndsat.128B
llvm.hexagon.V6.vasrhubsat
llvm.hexagon.V6.vasrhubsat.128B
llvm.hexagon.V6.vasrhv
llvm.hexagon.V6.vasrhv.128B
llvm.hexagon.V6.vasruhubrndsat
llvm.hexagon.V6.vasruhubrndsat.128B
llvm.hexagon.V6.vasruhubsat
llvm.hexagon.V6.vasruhubsat.128B
llvm.hexagon.V6.vasruwuhrndsat
llvm.hexagon.V6.vasruwuhrndsat.128B
llvm.hexagon.V6.vasruwuhsat
llvm.hexagon.V6.vasruwuhsat.128B
llvm.hexagon.V6.vasrw
llvm.hexagon.V6.vasrw.128B
llvm.hexagon.V6.vasrw.acc
llvm.hexagon.V6.vasrw.acc.128B
llvm.hexagon.V6.vasrwh
llvm.hexagon.V6.vasrwh.128B
llvm.hexagon.V6.vasrwhrndsat
llvm.hexagon.V6.vasrwhrndsat.128B
llvm.hexagon.V6.vasrwhsat
llvm.hexagon.V6.vasrwhsat.128B
llvm.hexagon.V6.vasrwuhrndsat
llvm.hexagon.V6.vasrwuhrndsat.128B
llvm.hexagon.V6.vasrwuhsat
llvm.hexagon.V6.vasrwuhsat.128B
llvm.hexagon.V6.vasrwv
llvm.hexagon.V6.vasrwv.128B
llvm.hexagon.V6.vassign
llvm.hexagon.V6.vassign.128B
llvm.hexagon.V6.vassignp
llvm.hexagon.V6.vassignp.128B
llvm.hexagon.V6.vavgb
llvm.hexagon.V6.vavgb.128B
llvm.hexagon.V6.vavgbrnd
llvm.hexagon.V6.vavgbrnd.128B
llvm.hexagon.V6.vavgh
llvm.hexagon.V6.vavgh.128B
llvm.hexagon.V6.vavghrnd
llvm.hexagon.V6.vavghrnd.128B
llvm.hexagon.V6.vavgub
llvm.hexagon.V6.vavgub.128B
llvm.hexagon.V6.vavgubrnd
llvm.hexagon.V6.vavgubrnd.128B
llvm.hexagon.V6.vavguh
llvm.hexagon.V6.vavguh.128B
llvm.hexagon.V6.vavguhrnd
llvm.hexagon.V6.vavguhrnd.128B
llvm.hexagon.V6.vavguw
llvm.hexagon.V6.vavguw.128B
llvm.hexagon.V6.vavguwrnd
llvm.hexagon.V6.vavguwrnd.128B
llvm.hexagon.V6.vavgw
llvm.hexagon.V6.vavgw.128B
llvm.hexagon.V6.vavgwrnd
llvm.hexagon.V6.vavgwrnd.128B
llvm.hexagon.V6.vcl0h
llvm.hexagon.V6.vcl0h.128B
llvm.hexagon.V6.vcl0w
llvm.hexagon.V6.vcl0w.128B
llvm.hexagon.V6.vcombine
llvm.hexagon.V6.vcombine.128B
llvm.hexagon.V6.vd0
llvm.hexagon.V6.vd0.128B
llvm.hexagon.V6.vdd0
llvm.hexagon.V6.vdd0.128B
llvm.hexagon.V6.vdealb
llvm.hexagon.V6.vdealb.128B
llvm.hexagon.V6.vdealb4w
llvm.hexagon.V6.vdealb4w.128B
llvm.hexagon.V6.vdealh
llvm.hexagon.V6.vdealh.128B
llvm.hexagon.V6.vdealvdd
llvm.hexagon.V6.vdealvdd.128B
llvm.hexagon.V6.vdelta
llvm.hexagon.V6.vdelta.128B
llvm.hexagon.V6.vdmpybus
llvm.hexagon.V6.vdmpybus.128B
llvm.hexagon.V6.vdmpybus.acc
llvm.hexagon.V6.vdmpybus.acc.128B
llvm.hexagon.V6.vdmpybus.dv
llvm.hexagon.V6.vdmpybus.dv.128B
llvm.hexagon.V6.vdmpybus.dv.acc
llvm.hexagon.V6.vdmpybus.dv.acc.128B
llvm.hexagon.V6.vdmpyhb
llvm.hexagon.V6.vdmpyhb.128B
llvm.hexagon.V6.vdmpyhb.acc
llvm.hexagon.V6.vdmpyhb.acc.128B
llvm.hexagon.V6.vdmpyhb.dv
llvm.hexagon.V6.vdmpyhb.dv.128B
llvm.hexagon.V6.vdmpyhb.dv.acc
llvm.hexagon.V6.vdmpyhb.dv.acc.128B
llvm.hexagon.V6.vdmpyhisat
llvm.hexagon.V6.vdmpyhisat.128B
llvm.hexagon.V6.vdmpyhisat.acc
llvm.hexagon.V6.vdmpyhisat.acc.128B
llvm.hexagon.V6.vdmpyhsat
llvm.hexagon.V6.vdmpyhsat.128B
llvm.hexagon.V6.vdmpyhsat.acc
llvm.hexagon.V6.vdmpyhsat.acc.128B
llvm.hexagon.V6.vdmpyhsuisat
llvm.hexagon.V6.vdmpyhsuisat.128B
llvm.hexagon.V6.vdmpyhsuisat.acc
llvm.hexagon.V6.vdmpyhsuisat.acc.128B
llvm.hexagon.V6.vdmpyhsusat
llvm.hexagon.V6.vdmpyhsusat.128B
llvm.hexagon.V6.vdmpyhsusat.acc
llvm.hexagon.V6.vdmpyhsusat.acc.128B
llvm.hexagon.V6.vdmpyhvsat
llvm.hexagon.V6.vdmpyhvsat.128B
llvm.hexagon.V6.vdmpyhvsat.acc
llvm.hexagon.V6.vdmpyhvsat.acc.128B
llvm.hexagon.V6.vdsaduh
llvm.hexagon.V6.vdsaduh.128B
llvm.hexagon.V6.vdsaduh.acc
llvm.hexagon.V6.vdsaduh.acc.128B
llvm.hexagon.V6.veqb
llvm.hexagon.V6.veqb.128B
llvm.hexagon.V6.veqb.and
llvm.hexagon.V6.veqb.and.128B
llvm.hexagon.V6.veqb.or
llvm.hexagon.V6.veqb.or.128B
llvm.hexagon.V6.veqb.xor
llvm.hexagon.V6.veqb.xor.128B
llvm.hexagon.V6.veqh
llvm.hexagon.V6.veqh.128B
llvm.hexagon.V6.veqh.and
llvm.hexagon.V6.veqh.and.128B
llvm.hexagon.V6.veqh.or
llvm.hexagon.V6.veqh.or.128B
llvm.hexagon.V6.veqh.xor
llvm.hexagon.V6.veqh.xor.128B
llvm.hexagon.V6.veqw
llvm.hexagon.V6.veqw.128B
llvm.hexagon.V6.veqw.and
llvm.hexagon.V6.veqw.and.128B
llvm.hexagon.V6.veqw.or
llvm.hexagon.V6.veqw.or.128B
llvm.hexagon.V6.veqw.xor
llvm.hexagon.V6.veqw.xor.128B
llvm.hexagon.V6.vgathermh
llvm.hexagon.V6.vgathermh.128B
llvm.hexagon.V6.vgathermhq
llvm.hexagon.V6.vgathermhq.128B
llvm.hexagon.V6.vgathermhw
llvm.hexagon.V6.vgathermhw.128B
llvm.hexagon.V6.vgathermhwq
llvm.hexagon.V6.vgathermhwq.128B
llvm.hexagon.V6.vgathermw
llvm.hexagon.V6.vgathermw.128B
llvm.hexagon.V6.vgathermwq
llvm.hexagon.V6.vgathermwq.128B
llvm.hexagon.V6.vgtb
llvm.hexagon.V6.vgtb.128B
llvm.hexagon.V6.vgtb.and
llvm.hexagon.V6.vgtb.and.128B
llvm.hexagon.V6.vgtb.or
llvm.hexagon.V6.vgtb.or.128B
llvm.hexagon.V6.vgtb.xor
llvm.hexagon.V6.vgtb.xor.128B
llvm.hexagon.V6.vgth
llvm.hexagon.V6.vgth.128B
llvm.hexagon.V6.vgth.and
llvm.hexagon.V6.vgth.and.128B
llvm.hexagon.V6.vgth.or
llvm.hexagon.V6.vgth.or.128B
llvm.hexagon.V6.vgth.xor
llvm.hexagon.V6.vgth.xor.128B
llvm.hexagon.V6.vgtub
llvm.hexagon.V6.vgtub.128B
llvm.hexagon.V6.vgtub.and
llvm.hexagon.V6.vgtub.and.128B
llvm.hexagon.V6.vgtub.or
llvm.hexagon.V6.vgtub.or.128B
llvm.hexagon.V6.vgtub.xor
llvm.hexagon.V6.vgtub.xor.128B
llvm.hexagon.V6.vgtuh
llvm.hexagon.V6.vgtuh.128B
llvm.hexagon.V6.vgtuh.and
llvm.hexagon.V6.vgtuh.and.128B
llvm.hexagon.V6.vgtuh.or
llvm.hexagon.V6.vgtuh.or.128B
llvm.hexagon.V6.vgtuh.xor
llvm.hexagon.V6.vgtuh.xor.128B
llvm.hexagon.V6.vgtuw
llvm.hexagon.V6.vgtuw.128B
llvm.hexagon.V6.vgtuw.and
llvm.hexagon.V6.vgtuw.and.128B
llvm.hexagon.V6.vgtuw.or
llvm.hexagon.V6.vgtuw.or.128B
llvm.hexagon.V6.vgtuw.xor
llvm.hexagon.V6.vgtuw.xor.128B
llvm.hexagon.V6.vgtw
llvm.hexagon.V6.vgtw.128B
llvm.hexagon.V6.vgtw.and
llvm.hexagon.V6.vgtw.and.128B
llvm.hexagon.V6.vgtw.or
llvm.hexagon.V6.vgtw.or.128B
llvm.hexagon.V6.vgtw.xor
llvm.hexagon.V6.vgtw.xor.128B
llvm.hexagon.V6.vinsertwr
llvm.hexagon.V6.vinsertwr.128B
llvm.hexagon.V6.vlalignb
llvm.hexagon.V6.vlalignb.128B
llvm.hexagon.V6.vlalignbi
llvm.hexagon.V6.vlalignbi.128B
llvm.hexagon.V6.vlsrb
llvm.hexagon.V6.vlsrb.128B
llvm.hexagon.V6.vlsrh
llvm.hexagon.V6.vlsrh.128B
llvm.hexagon.V6.vlsrhv
llvm.hexagon.V6.vlsrhv.128B
llvm.hexagon.V6.vlsrw
llvm.hexagon.V6.vlsrw.128B
llvm.hexagon.V6.vlsrwv
llvm.hexagon.V6.vlsrwv.128B
llvm.hexagon.V6.vlut4
llvm.hexagon.V6.vlut4.128B
llvm.hexagon.V6.vlutvvb
llvm.hexagon.V6.vlutvvb.128B
llvm.hexagon.V6.vlutvvb.nm
llvm.hexagon.V6.vlutvvb.nm.128B
llvm.hexagon.V6.vlutvvb.oracc
llvm.hexagon.V6.vlutvvb.oracc.128B
llvm.hexagon.V6.vlutvvb.oracci
llvm.hexagon.V6.vlutvvb.oracci.128B
llvm.hexagon.V6.vlutvvbi
llvm.hexagon.V6.vlutvvbi.128B
llvm.hexagon.V6.vlutvwh
llvm.hexagon.V6.vlutvwh.128B
llvm.hexagon.V6.vlutvwh.nm
llvm.hexagon.V6.vlutvwh.nm.128B
llvm.hexagon.V6.vlutvwh.oracc
llvm.hexagon.V6.vlutvwh.oracc.128B
llvm.hexagon.V6.vlutvwh.oracci
llvm.hexagon.V6.vlutvwh.oracci.128B
llvm.hexagon.V6.vlutvwhi
llvm.hexagon.V6.vlutvwhi.128B
llvm.hexagon.V6.vmaskedstorenq
llvm.hexagon.V6.vmaskedstorenq.128B
llvm.hexagon.V6.vmaskedstorentnq
llvm.hexagon.V6.vmaskedstorentnq.128B
llvm.hexagon.V6.vmaskedstorentq
llvm.hexagon.V6.vmaskedstorentq.128B
llvm.hexagon.V6.vmaskedstoreq
llvm.hexagon.V6.vmaskedstoreq.128B
llvm.hexagon.V6.vmaxb
llvm.hexagon.V6.vmaxb.128B
llvm.hexagon.V6.vmaxh
llvm.hexagon.V6.vmaxh.128B
llvm.hexagon.V6.vmaxub
llvm.hexagon.V6.vmaxub.128B
llvm.hexagon.V6.vmaxuh
llvm.hexagon.V6.vmaxuh.128B
llvm.hexagon.V6.vmaxw
llvm.hexagon.V6.vmaxw.128B
llvm.hexagon.V6.vminb
llvm.hexagon.V6.vminb.128B
llvm.hexagon.V6.vminh
llvm.hexagon.V6.vminh.128B
llvm.hexagon.V6.vminub
llvm.hexagon.V6.vminub.128B
llvm.hexagon.V6.vminuh
llvm.hexagon.V6.vminuh.128B
llvm.hexagon.V6.vminw
llvm.hexagon.V6.vminw.128B
llvm.hexagon.V6.vmpabus
llvm.hexagon.V6.vmpabus.128B
llvm.hexagon.V6.vmpabus.acc
llvm.hexagon.V6.vmpabus.acc.128B
llvm.hexagon.V6.vmpabusv
llvm.hexagon.V6.vmpabusv.128B
llvm.hexagon.V6.vmpabuu
llvm.hexagon.V6.vmpabuu.128B
llvm.hexagon.V6.vmpabuu.acc
llvm.hexagon.V6.vmpabuu.acc.128B
llvm.hexagon.V6.vmpabuuv
llvm.hexagon.V6.vmpabuuv.128B
llvm.hexagon.V6.vmpahb
llvm.hexagon.V6.vmpahb.128B
llvm.hexagon.V6.vmpahb.acc
llvm.hexagon.V6.vmpahb.acc.128B
llvm.hexagon.V6.vmpahhsat
llvm.hexagon.V6.vmpahhsat.128B
llvm.hexagon.V6.vmpauhb
llvm.hexagon.V6.vmpauhb.128B
llvm.hexagon.V6.vmpauhb.acc
llvm.hexagon.V6.vmpauhb.acc.128B
llvm.hexagon.V6.vmpauhuhsat
llvm.hexagon.V6.vmpauhuhsat.128B
llvm.hexagon.V6.vmpsuhuhsat
llvm.hexagon.V6.vmpsuhuhsat.128B
llvm.hexagon.V6.vmpybus
llvm.hexagon.V6.vmpybus.128B
llvm.hexagon.V6.vmpybus.acc
llvm.hexagon.V6.vmpybus.acc.128B
llvm.hexagon.V6.vmpybusv
llvm.hexagon.V6.vmpybusv.128B
llvm.hexagon.V6.vmpybusv.acc
llvm.hexagon.V6.vmpybusv.acc.128B
llvm.hexagon.V6.vmpybv
llvm.hexagon.V6.vmpybv.128B
llvm.hexagon.V6.vmpybv.acc
llvm.hexagon.V6.vmpybv.acc.128B
llvm.hexagon.V6.vmpyewuh
llvm.hexagon.V6.vmpyewuh.128B
llvm.hexagon.V6.vmpyewuh.64
llvm.hexagon.V6.vmpyewuh.64.128B
llvm.hexagon.V6.vmpyh
llvm.hexagon.V6.vmpyh.128B
llvm.hexagon.V6.vmpyh.acc
llvm.hexagon.V6.vmpyh.acc.128B
llvm.hexagon.V6.vmpyhsat.acc
llvm.hexagon.V6.vmpyhsat.acc.128B
llvm.hexagon.V6.vmpyhsrs
llvm.hexagon.V6.vmpyhsrs.128B
llvm.hexagon.V6.vmpyhss
llvm.hexagon.V6.vmpyhss.128B
llvm.hexagon.V6.vmpyhus
llvm.hexagon.V6.vmpyhus.128B
llvm.hexagon.V6.vmpyhus.acc
llvm.hexagon.V6.vmpyhus.acc.128B
llvm.hexagon.V6.vmpyhv
llvm.hexagon.V6.vmpyhv.128B
llvm.hexagon.V6.vmpyhv.acc
llvm.hexagon.V6.vmpyhv.acc.128B
llvm.hexagon.V6.vmpyhvsrs
llvm.hexagon.V6.vmpyhvsrs.128B
llvm.hexagon.V6.vmpyieoh
llvm.hexagon.V6.vmpyieoh.128B
llvm.hexagon.V6.vmpyiewh.acc
llvm.hexagon.V6.vmpyiewh.acc.128B
llvm.hexagon.V6.vmpyiewuh
llvm.hexagon.V6.vmpyiewuh.128B
llvm.hexagon.V6.vmpyiewuh.acc
llvm.hexagon.V6.vmpyiewuh.acc.128B
llvm.hexagon.V6.vmpyih
llvm.hexagon.V6.vmpyih.128B
llvm.hexagon.V6.vmpyih.acc
llvm.hexagon.V6.vmpyih.acc.128B
llvm.hexagon.V6.vmpyihb
llvm.hexagon.V6.vmpyihb.128B
llvm.hexagon.V6.vmpyihb.acc
llvm.hexagon.V6.vmpyihb.acc.128B
llvm.hexagon.V6.vmpyiowh
llvm.hexagon.V6.vmpyiowh.128B
llvm.hexagon.V6.vmpyiwb
llvm.hexagon.V6.vmpyiwb.128B
llvm.hexagon.V6.vmpyiwb.acc
llvm.hexagon.V6.vmpyiwb.acc.128B
llvm.hexagon.V6.vmpyiwh
llvm.hexagon.V6.vmpyiwh.128B
llvm.hexagon.V6.vmpyiwh.acc
llvm.hexagon.V6.vmpyiwh.acc.128B
llvm.hexagon.V6.vmpyiwub
llvm.hexagon.V6.vmpyiwub.128B
llvm.hexagon.V6.vmpyiwub.acc
llvm.hexagon.V6.vmpyiwub.acc.128B
llvm.hexagon.V6.vmpyowh
llvm.hexagon.V6.vmpyowh.128B
llvm.hexagon.V6.vmpyowh.64.acc
llvm.hexagon.V6.vmpyowh.64.acc.128B
llvm.hexagon.V6.vmpyowh.rnd
llvm.hexagon.V6.vmpyowh.rnd.128B
llvm.hexagon.V6.vmpyowh.rnd.sacc
llvm.hexagon.V6.vmpyowh.rnd.sacc.128B
llvm.hexagon.V6.vmpyowh.sacc
llvm.hexagon.V6.vmpyowh.sacc.128B
llvm.hexagon.V6.vmpyub
llvm.hexagon.V6.vmpyub.128B
llvm.hexagon.V6.vmpyub.acc
llvm.hexagon.V6.vmpyub.acc.128B
llvm.hexagon.V6.vmpyubv
llvm.hexagon.V6.vmpyubv.128B
llvm.hexagon.V6.vmpyubv.acc
llvm.hexagon.V6.vmpyubv.acc.128B
llvm.hexagon.V6.vmpyuh
llvm.hexagon.V6.vmpyuh.128B
llvm.hexagon.V6.vmpyuh.acc
llvm.hexagon.V6.vmpyuh.acc.128B
llvm.hexagon.V6.vmpyuhe
llvm.hexagon.V6.vmpyuhe.128B
llvm.hexagon.V6.vmpyuhe.acc
llvm.hexagon.V6.vmpyuhe.acc.128B
llvm.hexagon.V6.vmpyuhv
llvm.hexagon.V6.vmpyuhv.128B
llvm.hexagon.V6.vmpyuhv.acc
llvm.hexagon.V6.vmpyuhv.acc.128B
llvm.hexagon.V6.vmux
llvm.hexagon.V6.vmux.128B
llvm.hexagon.V6.vnavgb
llvm.hexagon.V6.vnavgb.128B
llvm.hexagon.V6.vnavgh
llvm.hexagon.V6.vnavgh.128B
llvm.hexagon.V6.vnavgub
llvm.hexagon.V6.vnavgub.128B
llvm.hexagon.V6.vnavgw
llvm.hexagon.V6.vnavgw.128B
llvm.hexagon.V6.vnormamth
llvm.hexagon.V6.vnormamth.128B
llvm.hexagon.V6.vnormamtw
llvm.hexagon.V6.vnormamtw.128B
llvm.hexagon.V6.vnot
llvm.hexagon.V6.vnot.128B
llvm.hexagon.V6.vor
llvm.hexagon.V6.vor.128B
llvm.hexagon.V6.vpackeb
llvm.hexagon.V6.vpackeb.128B
llvm.hexagon.V6.vpackeh
llvm.hexagon.V6.vpackeh.128B
llvm.hexagon.V6.vpackhb.sat
llvm.hexagon.V6.vpackhb.sat.128B
llvm.hexagon.V6.vpackhub.sat
llvm.hexagon.V6.vpackhub.sat.128B
llvm.hexagon.V6.vpackob
llvm.hexagon.V6.vpackob.128B
llvm.hexagon.V6.vpackoh
llvm.hexagon.V6.vpackoh.128B
llvm.hexagon.V6.vpackwh.sat
llvm.hexagon.V6.vpackwh.sat.128B
llvm.hexagon.V6.vpackwuh.sat
llvm.hexagon.V6.vpackwuh.sat.128B
llvm.hexagon.V6.vpopcounth
llvm.hexagon.V6.vpopcounth.128B
llvm.hexagon.V6.vprefixqb
llvm.hexagon.V6.vprefixqb.128B
llvm.hexagon.V6.vprefixqh
llvm.hexagon.V6.vprefixqh.128B
llvm.hexagon.V6.vprefixqw
llvm.hexagon.V6.vprefixqw.128B
llvm.hexagon.V6.vrdelta
llvm.hexagon.V6.vrdelta.128B
llvm.hexagon.V6.vrmpybub.rtt
llvm.hexagon.V6.vrmpybub.rtt.128B
llvm.hexagon.V6.vrmpybub.rtt.acc
llvm.hexagon.V6.vrmpybub.rtt.acc.128B
llvm.hexagon.V6.vrmpybus
llvm.hexagon.V6.vrmpybus.128B
llvm.hexagon.V6.vrmpybus.acc
llvm.hexagon.V6.vrmpybus.acc.128B
llvm.hexagon.V6.vrmpybusi
llvm.hexagon.V6.vrmpybusi.128B
llvm.hexagon.V6.vrmpybusi.acc
llvm.hexagon.V6.vrmpybusi.acc.128B
llvm.hexagon.V6.vrmpybusv
llvm.hexagon.V6.vrmpybusv.128B
llvm.hexagon.V6.vrmpybusv.acc
llvm.hexagon.V6.vrmpybusv.acc.128B
llvm.hexagon.V6.vrmpybv
llvm.hexagon.V6.vrmpybv.128B
llvm.hexagon.V6.vrmpybv.acc
llvm.hexagon.V6.vrmpybv.acc.128B
llvm.hexagon.V6.vrmpyub
llvm.hexagon.V6.vrmpyub.128B
llvm.hexagon.V6.vrmpyub.acc
llvm.hexagon.V6.vrmpyub.acc.128B
llvm.hexagon.V6.vrmpyub.rtt
llvm.hexagon.V6.vrmpyub.rtt.128B
llvm.hexagon.V6.vrmpyub.rtt.acc
llvm.hexagon.V6.vrmpyub.rtt.acc.128B
llvm.hexagon.V6.vrmpyubi
llvm.hexagon.V6.vrmpyubi.128B
llvm.hexagon.V6.vrmpyubi.acc
llvm.hexagon.V6.vrmpyubi.acc.128B
llvm.hexagon.V6.vrmpyubv
llvm.hexagon.V6.vrmpyubv.128B
llvm.hexagon.V6.vrmpyubv.acc
llvm.hexagon.V6.vrmpyubv.acc.128B
llvm.hexagon.V6.vror
llvm.hexagon.V6.vror.128B
llvm.hexagon.V6.vrotr
llvm.hexagon.V6.vrotr.128B
llvm.hexagon.V6.vroundhb
llvm.hexagon.V6.vroundhb.128B
llvm.hexagon.V6.vroundhub
llvm.hexagon.V6.vroundhub.128B
llvm.hexagon.V6.vrounduhub
llvm.hexagon.V6.vrounduhub.128B
llvm.hexagon.V6.vrounduwuh
llvm.hexagon.V6.vrounduwuh.128B
llvm.hexagon.V6.vroundwh
llvm.hexagon.V6.vroundwh.128B
llvm.hexagon.V6.vroundwuh
llvm.hexagon.V6.vroundwuh.128B
llvm.hexagon.V6.vrsadubi
llvm.hexagon.V6.vrsadubi.128B
llvm.hexagon.V6.vrsadubi.acc
llvm.hexagon.V6.vrsadubi.acc.128B
llvm.hexagon.V6.vsatdw
llvm.hexagon.V6.vsatdw.128B
llvm.hexagon.V6.vsathub
llvm.hexagon.V6.vsathub.128B
llvm.hexagon.V6.vsatuwuh
llvm.hexagon.V6.vsatuwuh.128B
llvm.hexagon.V6.vsatwh
llvm.hexagon.V6.vsatwh.128B
llvm.hexagon.V6.vsb
llvm.hexagon.V6.vsb.128B
llvm.hexagon.V6.vscattermh
llvm.hexagon.V6.vscattermh.128B
llvm.hexagon.V6.vscattermh.add
llvm.hexagon.V6.vscattermh.add.128B
llvm.hexagon.V6.vscattermhq
llvm.hexagon.V6.vscattermhq.128B
llvm.hexagon.V6.vscattermhw
llvm.hexagon.V6.vscattermhw.128B
llvm.hexagon.V6.vscattermhw.add
llvm.hexagon.V6.vscattermhw.add.128B
llvm.hexagon.V6.vscattermhwq
llvm.hexagon.V6.vscattermhwq.128B
llvm.hexagon.V6.vscattermw
llvm.hexagon.V6.vscattermw.128B
llvm.hexagon.V6.vscattermw.add
llvm.hexagon.V6.vscattermw.add.128B
llvm.hexagon.V6.vscattermwq
llvm.hexagon.V6.vscattermwq.128B
llvm.hexagon.V6.vsh
llvm.hexagon.V6.vsh.128B
llvm.hexagon.V6.vshufeh
llvm.hexagon.V6.vshufeh.128B
llvm.hexagon.V6.vshuffb
llvm.hexagon.V6.vshuffb.128B
llvm.hexagon.V6.vshuffeb
llvm.hexagon.V6.vshuffeb.128B
llvm.hexagon.V6.vshuffh
llvm.hexagon.V6.vshuffh.128B
llvm.hexagon.V6.vshuffob
llvm.hexagon.V6.vshuffob.128B
llvm.hexagon.V6.vshuffvdd
llvm.hexagon.V6.vshuffvdd.128B
llvm.hexagon.V6.vshufoeb
llvm.hexagon.V6.vshufoeb.128B
llvm.hexagon.V6.vshufoeh
llvm.hexagon.V6.vshufoeh.128B
llvm.hexagon.V6.vshufoh
llvm.hexagon.V6.vshufoh.128B
llvm.hexagon.V6.vsubb
llvm.hexagon.V6.vsubb.128B
llvm.hexagon.V6.vsubb.dv
llvm.hexagon.V6.vsubb.dv.128B
llvm.hexagon.V6.vsubbnq
llvm.hexagon.V6.vsubbnq.128B
llvm.hexagon.V6.vsubbq
llvm.hexagon.V6.vsubbq.128B
llvm.hexagon.V6.vsubbsat
llvm.hexagon.V6.vsubbsat.128B
llvm.hexagon.V6.vsubbsat.dv
llvm.hexagon.V6.vsubbsat.dv.128B
llvm.hexagon.V6.vsubcarry
llvm.hexagon.V6.vsubcarry.128B
llvm.hexagon.V6.vsubh
llvm.hexagon.V6.vsubh.128B
llvm.hexagon.V6.vsubh.dv
llvm.hexagon.V6.vsubh.dv.128B
llvm.hexagon.V6.vsubhnq
llvm.hexagon.V6.vsubhnq.128B
llvm.hexagon.V6.vsubhq
llvm.hexagon.V6.vsubhq.128B
llvm.hexagon.V6.vsubhsat
llvm.hexagon.V6.vsubhsat.128B
llvm.hexagon.V6.vsubhsat.dv
llvm.hexagon.V6.vsubhsat.dv.128B
llvm.hexagon.V6.vsubhw
llvm.hexagon.V6.vsubhw.128B
llvm.hexagon.V6.vsububh
llvm.hexagon.V6.vsububh.128B
llvm.hexagon.V6.vsububsat
llvm.hexagon.V6.vsububsat.128B
llvm.hexagon.V6.vsububsat.dv
llvm.hexagon.V6.vsububsat.dv.128B
llvm.hexagon.V6.vsubububb.sat
llvm.hexagon.V6.vsubububb.sat.128B
llvm.hexagon.V6.vsubuhsat
llvm.hexagon.V6.vsubuhsat.128B
llvm.hexagon.V6.vsubuhsat.dv
llvm.hexagon.V6.vsubuhsat.dv.128B
llvm.hexagon.V6.vsubuhw
llvm.hexagon.V6.vsubuhw.128B
llvm.hexagon.V6.vsubuwsat
llvm.hexagon.V6.vsubuwsat.128B
llvm.hexagon.V6.vsubuwsat.dv
llvm.hexagon.V6.vsubuwsat.dv.128B
llvm.hexagon.V6.vsubw
llvm.hexagon.V6.vsubw.128B
llvm.hexagon.V6.vsubw.dv
llvm.hexagon.V6.vsubw.dv.128B
llvm.hexagon.V6.vsubwnq
llvm.hexagon.V6.vsubwnq.128B
llvm.hexagon.V6.vsubwq
llvm.hexagon.V6.vsubwq.128B
llvm.hexagon.V6.vsubwsat
llvm.hexagon.V6.vsubwsat.128B
llvm.hexagon.V6.vsubwsat.dv
llvm.hexagon.V6.vsubwsat.dv.128B
llvm.hexagon.V6.vswap
llvm.hexagon.V6.vswap.128B
llvm.hexagon.V6.vtmpyb
llvm.hexagon.V6.vtmpyb.128B
llvm.hexagon.V6.vtmpyb.acc
llvm.hexagon.V6.vtmpyb.acc.128B
llvm.hexagon.V6.vtmpybus
llvm.hexagon.V6.vtmpybus.128B
llvm.hexagon.V6.vtmpybus.acc
llvm.hexagon.V6.vtmpybus.acc.128B
llvm.hexagon.V6.vtmpyhb
llvm.hexagon.V6.vtmpyhb.128B
llvm.hexagon.V6.vtmpyhb.acc
llvm.hexagon.V6.vtmpyhb.acc.128B
llvm.hexagon.V6.vunpackb
llvm.hexagon.V6.vunpackb.128B
llvm.hexagon.V6.vunpackh
llvm.hexagon.V6.vunpackh.128B
llvm.hexagon.V6.vunpackob
llvm.hexagon.V6.vunpackob.128B
llvm.hexagon.V6.vunpackoh
llvm.hexagon.V6.vunpackoh.128B
llvm.hexagon.V6.vunpackub
llvm.hexagon.V6.vunpackub.128B
llvm.hexagon.V6.vunpackuh
llvm.hexagon.V6.vunpackuh.128B
llvm.hexagon.V6.vxor
llvm.hexagon.V6.vxor.128B
llvm.hexagon.V6.vzb
llvm.hexagon.V6.vzb.128B
llvm.hexagon.V6.vzh
llvm.hexagon.V6.vzh.128B
llvm.hexagon.Y2.dccleana
llvm.hexagon.Y2.dccleaninva
llvm.hexagon.Y2.dcfetch
llvm.hexagon.Y2.dcinva
llvm.hexagon.Y2.dczeroa
llvm.hexagon.Y4.l2fetch
llvm.hexagon.Y5.l2fetch
llvm.hexagon.circ.ldb
llvm.hexagon.circ.ldd
llvm.hexagon.circ.ldh
llvm.hexagon.circ.ldub
llvm.hexagon.circ.lduh
llvm.hexagon.circ.ldw
llvm.hexagon.circ.stb
llvm.hexagon.circ.std
llvm.hexagon.circ.sth
llvm.hexagon.circ.sthhi
llvm.hexagon.circ.stw
llvm.hexagon.prefetch
llvm.hexagon.vmemcpy
llvm.hexagon.vmemset
llvm.mips.absq.s.ph
llvm.mips.absq.s.qb
llvm.mips.absq.s.w
llvm.mips.add.a.b
llvm.mips.add.a.d
llvm.mips.add.a.h
llvm.mips.add.a.w
llvm.mips.addq.ph
llvm.mips.addq.s.ph
llvm.mips.addq.s.w
llvm.mips.addqh.ph
llvm.mips.addqh.r.ph
llvm.mips.addqh.r.w
llvm.mips.addqh.w
llvm.mips.adds.a.b
llvm.mips.adds.a.d
llvm.mips.adds.a.h
llvm.mips.adds.a.w
llvm.mips.adds.s.b
llvm.mips.adds.s.d
llvm.mips.adds.s.h
llvm.mips.adds.s.w
llvm.mips.adds.u.b
llvm.mips.adds.u.d
llvm.mips.adds.u.h
llvm.mips.adds.u.w
llvm.mips.addsc
llvm.mips.addu.ph
llvm.mips.addu.qb
llvm.mips.addu.s.ph
llvm.mips.addu.s.qb
llvm.mips.adduh.qb
llvm.mips.adduh.r.qb
llvm.mips.addv.b
llvm.mips.addv.d
llvm.mips.addv.h
llvm.mips.addv.w
llvm.mips.addvi.b
llvm.mips.addvi.d
llvm.mips.addvi.h
llvm.mips.addvi.w
llvm.mips.addwc
llvm.mips.and.v
llvm.mips.andi.b
llvm.mips.append
llvm.mips.asub.s.b
llvm.mips.asub.s.d
llvm.mips.asub.s.h
llvm.mips.asub.s.w
llvm.mips.asub.u.b
llvm.mips.asub.u.d
llvm.mips.asub.u.h
llvm.mips.asub.u.w
llvm.mips.ave.s.b
llvm.mips.ave.s.d
llvm.mips.ave.s.h
llvm.mips.ave.s.w
llvm.mips.ave.u.b
llvm.mips.ave.u.d
llvm.mips.ave.u.h
llvm.mips.ave.u.w
llvm.mips.aver.s.b
llvm.mips.aver.s.d
llvm.mips.aver.s.h
llvm.mips.aver.s.w
llvm.mips.aver.u.b
llvm.mips.aver.u.d
llvm.mips.aver.u.h
llvm.mips.aver.u.w
llvm.mips.balign
llvm.mips.bclr.b
llvm.mips.bclr.d
llvm.mips.bclr.h
llvm.mips.bclr.w
llvm.mips.bclri.b
llvm.mips.bclri.d
llvm.mips.bclri.h
llvm.mips.bclri.w
llvm.mips.binsl.b
llvm.mips.binsl.d
llvm.mips.binsl.h
llvm.mips.binsl.w
llvm.mips.binsli.b
llvm.mips.binsli.d
llvm.mips.binsli.h
llvm.mips.binsli.w
llvm.mips.binsr.b
llvm.mips.binsr.d
llvm.mips.binsr.h
llvm.mips.binsr.w
llvm.mips.binsri.b
llvm.mips.binsri.d
llvm.mips.binsri.h
llvm.mips.binsri.w
llvm.mips.bitrev
llvm.mips.bmnz.v
llvm.mips.bmnzi.b
llvm.mips.bmz.v
llvm.mips.bmzi.b
llvm.mips.bneg.b
llvm.mips.bneg.d
llvm.mips.bneg.h
llvm.mips.bneg.w
llvm.mips.bnegi.b
llvm.mips.bnegi.d
llvm.mips.bnegi.h
llvm.mips.bnegi.w
llvm.mips.bnz.b
llvm.mips.bnz.d
llvm.mips.bnz.h
llvm.mips.bnz.v
llvm.mips.bnz.w
llvm.mips.bposge32
llvm.mips.bsel.v
llvm.mips.bseli.b
llvm.mips.bset.b
llvm.mips.bset.d
llvm.mips.bset.h
llvm.mips.bset.w
llvm.mips.bseti.b
llvm.mips.bseti.d
llvm.mips.bseti.h
llvm.mips.bseti.w
llvm.mips.bz.b
llvm.mips.bz.d
llvm.mips.bz.h
llvm.mips.bz.v
llvm.mips.bz.w
llvm.mips.ceq.b
llvm.mips.ceq.d
llvm.mips.ceq.h
llvm.mips.ceq.w
llvm.mips.ceqi.b
llvm.mips.ceqi.d
llvm.mips.ceqi.h
llvm.mips.ceqi.w
llvm.mips.cfcmsa
llvm.mips.cle.s.b
llvm.mips.cle.s.d
llvm.mips.cle.s.h
llvm.mips.cle.s.w
llvm.mips.cle.u.b
llvm.mips.cle.u.d
llvm.mips.cle.u.h
llvm.mips.cle.u.w
llvm.mips.clei.s.b
llvm.mips.clei.s.d
llvm.mips.clei.s.h
llvm.mips.clei.s.w
llvm.mips.clei.u.b
llvm.mips.clei.u.d
llvm.mips.clei.u.h
llvm.mips.clei.u.w
llvm.mips.clt.s.b
llvm.mips.clt.s.d
llvm.mips.clt.s.h
llvm.mips.clt.s.w
llvm.mips.clt.u.b
llvm.mips.clt.u.d
llvm.mips.clt.u.h
llvm.mips.clt.u.w
llvm.mips.clti.s.b
llvm.mips.clti.s.d
llvm.mips.clti.s.h
llvm.mips.clti.s.w
llvm.mips.clti.u.b
llvm.mips.clti.u.d
llvm.mips.clti.u.h
llvm.mips.clti.u.w
llvm.mips.cmp.eq.ph
llvm.mips.cmp.le.ph
llvm.mips.cmp.lt.ph
llvm.mips.cmpgdu.eq.qb
llvm.mips.cmpgdu.le.qb
llvm.mips.cmpgdu.lt.qb
llvm.mips.cmpgu.eq.qb
llvm.mips.cmpgu.le.qb
llvm.mips.cmpgu.lt.qb
llvm.mips.cmpu.eq.qb
llvm.mips.cmpu.le.qb
llvm.mips.cmpu.lt.qb
llvm.mips.copy.s.b
llvm.mips.copy.s.d
llvm.mips.copy.s.h
llvm.mips.copy.s.w
llvm.mips.copy.u.b
llvm.mips.copy.u.d
llvm.mips.copy.u.h
llvm.mips.copy.u.w
llvm.mips.ctcmsa
llvm.mips.div.s.b
llvm.mips.div.s.d
llvm.mips.div.s.h
llvm.mips.div.s.w
llvm.mips.div.u.b
llvm.mips.div.u.d
llvm.mips.div.u.h
llvm.mips.div.u.w
llvm.mips.dlsa
llvm.mips.dotp.s.d
llvm.mips.dotp.s.h
llvm.mips.dotp.s.w
llvm.mips.dotp.u.d
llvm.mips.dotp.u.h
llvm.mips.dotp.u.w
llvm.mips.dpa.w.ph
llvm.mips.dpadd.s.d
llvm.mips.dpadd.s.h
llvm.mips.dpadd.s.w
llvm.mips.dpadd.u.d
llvm.mips.dpadd.u.h
llvm.mips.dpadd.u.w
llvm.mips.dpaq.s.w.ph
llvm.mips.dpaq.sa.l.w
llvm.mips.dpaqx.s.w.ph
llvm.mips.dpaqx.sa.w.ph
llvm.mips.dpau.h.qbl
llvm.mips.dpau.h.qbr
llvm.mips.dpax.w.ph
llvm.mips.dps.w.ph
llvm.mips.dpsq.s.w.ph
llvm.mips.dpsq.sa.l.w
llvm.mips.dpsqx.s.w.ph
llvm.mips.dpsqx.sa.w.ph
llvm.mips.dpsu.h.qbl
llvm.mips.dpsu.h.qbr
llvm.mips.dpsub.s.d
llvm.mips.dpsub.s.h
llvm.mips.dpsub.s.w
llvm.mips.dpsub.u.d
llvm.mips.dpsub.u.h
llvm.mips.dpsub.u.w
llvm.mips.dpsx.w.ph
llvm.mips.extp
llvm.mips.extpdp
llvm.mips.extr.r.w
llvm.mips.extr.rs.w
llvm.mips.extr.s.h
llvm.mips.extr.w
llvm.mips.fadd.d
llvm.mips.fadd.w
llvm.mips.fcaf.d
llvm.mips.fcaf.w
llvm.mips.fceq.d
llvm.mips.fceq.w
llvm.mips.fclass.d
llvm.mips.fclass.w
llvm.mips.fcle.d
llvm.mips.fcle.w
llvm.mips.fclt.d
llvm.mips.fclt.w
llvm.mips.fcne.d
llvm.mips.fcne.w
llvm.mips.fcor.d
llvm.mips.fcor.w
llvm.mips.fcueq.d
llvm.mips.fcueq.w
llvm.mips.fcule.d
llvm.mips.fcule.w
llvm.mips.fcult.d
llvm.mips.fcult.w
llvm.mips.fcun.d
llvm.mips.fcun.w
llvm.mips.fcune.d
llvm.mips.fcune.w
llvm.mips.fdiv.d
llvm.mips.fdiv.w
llvm.mips.fexdo.h
llvm.mips.fexdo.w
llvm.mips.fexp2.d
llvm.mips.fexp2.w
llvm.mips.fexupl.d
llvm.mips.fexupl.w
llvm.mips.fexupr.d
llvm.mips.fexupr.w
llvm.mips.ffint.s.d
llvm.mips.ffint.s.w
llvm.mips.ffint.u.d
llvm.mips.ffint.u.w
llvm.mips.ffql.d
llvm.mips.ffql.w
llvm.mips.ffqr.d
llvm.mips.ffqr.w
llvm.mips.fill.b
llvm.mips.fill.d
llvm.mips.fill.h
llvm.mips.fill.w
llvm.mips.flog2.d
llvm.mips.flog2.w
llvm.mips.fmadd.d
llvm.mips.fmadd.w
llvm.mips.fmax.a.d
llvm.mips.fmax.a.w
llvm.mips.fmax.d
llvm.mips.fmax.w
llvm.mips.fmin.a.d
llvm.mips.fmin.a.w
llvm.mips.fmin.d
llvm.mips.fmin.w
llvm.mips.fmsub.d
llvm.mips.fmsub.w
llvm.mips.fmul.d
llvm.mips.fmul.w
llvm.mips.frcp.d
llvm.mips.frcp.w
llvm.mips.frint.d
llvm.mips.frint.w
llvm.mips.frsqrt.d
llvm.mips.frsqrt.w
llvm.mips.fsaf.d
llvm.mips.fsaf.w
llvm.mips.fseq.d
llvm.mips.fseq.w
llvm.mips.fsle.d
llvm.mips.fsle.w
llvm.mips.fslt.d
llvm.mips.fslt.w
llvm.mips.fsne.d
llvm.mips.fsne.w
llvm.mips.fsor.d
llvm.mips.fsor.w
llvm.mips.fsqrt.d
llvm.mips.fsqrt.w
llvm.mips.fsub.d
llvm.mips.fsub.w
llvm.mips.fsueq.d
llvm.mips.fsueq.w
llvm.mips.fsule.d
llvm.mips.fsule.w
llvm.mips.fsult.d
llvm.mips.fsult.w
llvm.mips.fsun.d
llvm.mips.fsun.w
llvm.mips.fsune.d
llvm.mips.fsune.w
llvm.mips.ftint.s.d
llvm.mips.ftint.s.w
llvm.mips.ftint.u.d
llvm.mips.ftint.u.w
llvm.mips.ftq.h
llvm.mips.ftq.w
llvm.mips.ftrunc.s.d
llvm.mips.ftrunc.s.w
llvm.mips.ftrunc.u.d
llvm.mips.ftrunc.u.w
llvm.mips.hadd.s.d
llvm.mips.hadd.s.h
llvm.mips.hadd.s.w
llvm.mips.hadd.u.d
llvm.mips.hadd.u.h
llvm.mips.hadd.u.w
llvm.mips.hsub.s.d
llvm.mips.hsub.s.h
llvm.mips.hsub.s.w
llvm.mips.hsub.u.d
llvm.mips.hsub.u.h
llvm.mips.hsub.u.w
llvm.mips.ilvev.b
llvm.mips.ilvev.d
llvm.mips.ilvev.h
llvm.mips.ilvev.w
llvm.mips.ilvl.b
llvm.mips.ilvl.d
llvm.mips.ilvl.h
llvm.mips.ilvl.w
llvm.mips.ilvod.b
llvm.mips.ilvod.d
llvm.mips.ilvod.h
llvm.mips.ilvod.w
llvm.mips.ilvr.b
llvm.mips.ilvr.d
llvm.mips.ilvr.h
llvm.mips.ilvr.w
llvm.mips.insert.b
llvm.mips.insert.d
llvm.mips.insert.h
llvm.mips.insert.w
llvm.mips.insv
llvm.mips.insve.b
llvm.mips.insve.d
llvm.mips.insve.h
llvm.mips.insve.w
llvm.mips.lbux
llvm.mips.ld.b
llvm.mips.ld.d
llvm.mips.ld.h
llvm.mips.ld.w
llvm.mips.ldi.b
llvm.mips.ldi.d
llvm.mips.ldi.h
llvm.mips.ldi.w
llvm.mips.ldr.d
llvm.mips.ldr.w
llvm.mips.lhx
llvm.mips.lsa
llvm.mips.lwx
llvm.mips.madd
llvm.mips.madd.q.h
llvm.mips.madd.q.w
llvm.mips.maddr.q.h
llvm.mips.maddr.q.w
llvm.mips.maddu
llvm.mips.maddv.b
llvm.mips.maddv.d
llvm.mips.maddv.h
llvm.mips.maddv.w
llvm.mips.maq.s.w.phl
llvm.mips.maq.s.w.phr
llvm.mips.maq.sa.w.phl
llvm.mips.maq.sa.w.phr
llvm.mips.max.a.b
llvm.mips.max.a.d
llvm.mips.max.a.h
llvm.mips.max.a.w
llvm.mips.max.s.b
llvm.mips.max.s.d
llvm.mips.max.s.h
llvm.mips.max.s.w
llvm.mips.max.u.b
llvm.mips.max.u.d
llvm.mips.max.u.h
llvm.mips.max.u.w
llvm.mips.maxi.s.b
llvm.mips.maxi.s.d
llvm.mips.maxi.s.h
llvm.mips.maxi.s.w
llvm.mips.maxi.u.b
llvm.mips.maxi.u.d
llvm.mips.maxi.u.h
llvm.mips.maxi.u.w
llvm.mips.min.a.b
llvm.mips.min.a.d
llvm.mips.min.a.h
llvm.mips.min.a.w
llvm.mips.min.s.b
llvm.mips.min.s.d
llvm.mips.min.s.h
llvm.mips.min.s.w
llvm.mips.min.u.b
llvm.mips.min.u.d
llvm.mips.min.u.h
llvm.mips.min.u.w
llvm.mips.mini.s.b
llvm.mips.mini.s.d
llvm.mips.mini.s.h
llvm.mips.mini.s.w
llvm.mips.mini.u.b
llvm.mips.mini.u.d
llvm.mips.mini.u.h
llvm.mips.mini.u.w
llvm.mips.mod.s.b
llvm.mips.mod.s.d
llvm.mips.mod.s.h
llvm.mips.mod.s.w
llvm.mips.mod.u.b
llvm.mips.mod.u.d
llvm.mips.mod.u.h
llvm.mips.mod.u.w
llvm.mips.modsub
llvm.mips.move.v
llvm.mips.msub
llvm.mips.msub.q.h
llvm.mips.msub.q.w
llvm.mips.msubr.q.h
llvm.mips.msubr.q.w
llvm.mips.msubu
llvm.mips.msubv.b
llvm.mips.msubv.d
llvm.mips.msubv.h
llvm.mips.msubv.w
llvm.mips.mthlip
llvm.mips.mul.ph
llvm.mips.mul.q.h
llvm.mips.mul.q.w
llvm.mips.mul.s.ph
llvm.mips.muleq.s.w.phl
llvm.mips.muleq.s.w.phr
llvm.mips.muleu.s.ph.qbl
llvm.mips.muleu.s.ph.qbr
llvm.mips.mulq.rs.ph
llvm.mips.mulq.rs.w
llvm.mips.mulq.s.ph
llvm.mips.mulq.s.w
llvm.mips.mulr.q.h
llvm.mips.mulr.q.w
llvm.mips.mulsa.w.ph
llvm.mips.mulsaq.s.w.ph
llvm.mips.mult
llvm.mips.multu
llvm.mips.mulv.b
llvm.mips.mulv.d
llvm.mips.mulv.h
llvm.mips.mulv.w
llvm.mips.nloc.b
llvm.mips.nloc.d
llvm.mips.nloc.h
llvm.mips.nloc.w
llvm.mips.nlzc.b
llvm.mips.nlzc.d
llvm.mips.nlzc.h
llvm.mips.nlzc.w
llvm.mips.nor.v
llvm.mips.nori.b
llvm.mips.or.v
llvm.mips.ori.b
llvm.mips.packrl.ph
llvm.mips.pckev.b
llvm.mips.pckev.d
llvm.mips.pckev.h
llvm.mips.pckev.w
llvm.mips.pckod.b
llvm.mips.pckod.d
llvm.mips.pckod.h
llvm.mips.pckod.w
llvm.mips.pcnt.b
llvm.mips.pcnt.d
llvm.mips.pcnt.h
llvm.mips.pcnt.w
llvm.mips.pick.ph
llvm.mips.pick.qb
llvm.mips.preceq.w.phl
llvm.mips.preceq.w.phr
llvm.mips.precequ.ph.qbl
llvm.mips.precequ.ph.qbla
llvm.mips.precequ.ph.qbr
llvm.mips.precequ.ph.qbra
llvm.mips.preceu.ph.qbl
llvm.mips.preceu.ph.qbla
llvm.mips.preceu.ph.qbr
llvm.mips.preceu.ph.qbra
llvm.mips.precr.qb.ph
llvm.mips.precr.sra.ph.w
llvm.mips.precr.sra.r.ph.w
llvm.mips.precrq.ph.w
llvm.mips.precrq.qb.ph
llvm.mips.precrq.rs.ph.w
llvm.mips.precrqu.s.qb.ph
llvm.mips.prepend
llvm.mips.raddu.w.qb
llvm.mips.rddsp
llvm.mips.repl.ph
llvm.mips.repl.qb
llvm.mips.sat.s.b
llvm.mips.sat.s.d
llvm.mips.sat.s.h
llvm.mips.sat.s.w
llvm.mips.sat.u.b
llvm.mips.sat.u.d
llvm.mips.sat.u.h
llvm.mips.sat.u.w
llvm.mips.shf.b
llvm.mips.shf.h
llvm.mips.shf.w
llvm.mips.shilo
llvm.mips.shll.ph
llvm.mips.shll.qb
llvm.mips.shll.s.ph
llvm.mips.shll.s.w
llvm.mips.shra.ph
llvm.mips.shra.qb
llvm.mips.shra.r.ph
llvm.mips.shra.r.qb
llvm.mips.shra.r.w
llvm.mips.shrl.ph
llvm.mips.shrl.qb
llvm.mips.sld.b
llvm.mips.sld.d
llvm.mips.sld.h
llvm.mips.sld.w
llvm.mips.sldi.b
llvm.mips.sldi.d
llvm.mips.sldi.h
llvm.mips.sldi.w
llvm.mips.sll.b
llvm.mips.sll.d
llvm.mips.sll.h
llvm.mips.sll.w
llvm.mips.slli.b
llvm.mips.slli.d
llvm.mips.slli.h
llvm.mips.slli.w
llvm.mips.splat.b
llvm.mips.splat.d
llvm.mips.splat.h
llvm.mips.splat.w
llvm.mips.splati.b
llvm.mips.splati.d
llvm.mips.splati.h
llvm.mips.splati.w
llvm.mips.sra.b
llvm.mips.sra.d
llvm.mips.sra.h
llvm.mips.sra.w
llvm.mips.srai.b
llvm.mips.srai.d
llvm.mips.srai.h
llvm.mips.srai.w
llvm.mips.srar.b
llvm.mips.srar.d
llvm.mips.srar.h
llvm.mips.srar.w
llvm.mips.srari.b
llvm.mips.srari.d
llvm.mips.srari.h
llvm.mips.srari.w
llvm.mips.srl.b
llvm.mips.srl.d
llvm.mips.srl.h
llvm.mips.srl.w
llvm.mips.srli.b
llvm.mips.srli.d
llvm.mips.srli.h
llvm.mips.srli.w
llvm.mips.srlr.b
llvm.mips.srlr.d
llvm.mips.srlr.h
llvm.mips.srlr.w
llvm.mips.srlri.b
llvm.mips.srlri.d
llvm.mips.srlri.h
llvm.mips.srlri.w
llvm.mips.st.b
llvm.mips.st.d
llvm.mips.st.h
llvm.mips.st.w
llvm.mips.str.d
llvm.mips.str.w
llvm.mips.subq.ph
llvm.mips.subq.s.ph
llvm.mips.subq.s.w
llvm.mips.subqh.ph
llvm.mips.subqh.r.ph
llvm.mips.subqh.r.w
llvm.mips.subqh.w
llvm.mips.subs.s.b
llvm.mips.subs.s.d
llvm.mips.subs.s.h
llvm.mips.subs.s.w
llvm.mips.subs.u.b
llvm.mips.subs.u.d
llvm.mips.subs.u.h
llvm.mips.subs.u.w
llvm.mips.subsus.u.b
llvm.mips.subsus.u.d
llvm.mips.subsus.u.h
llvm.mips.subsus.u.w
llvm.mips.subsuu.s.b
llvm.mips.subsuu.s.d
llvm.mips.subsuu.s.h
llvm.mips.subsuu.s.w
llvm.mips.subu.ph
llvm.mips.subu.qb
llvm.mips.subu.s.ph
llvm.mips.subu.s.qb
llvm.mips.subuh.qb
llvm.mips.subuh.r.qb
llvm.mips.subv.b
llvm.mips.subv.d
llvm.mips.subv.h
llvm.mips.subv.w
llvm.mips.subvi.b
llvm.mips.subvi.d
llvm.mips.subvi.h
llvm.mips.subvi.w
llvm.mips.vshf.b
llvm.mips.vshf.d
llvm.mips.vshf.h
llvm.mips.vshf.w
llvm.mips.wrdsp
llvm.mips.xor.v
llvm.mips.xori.b
llvm.nvvm.add.rm.d
llvm.nvvm.add.rm.f
llvm.nvvm.add.rm.ftz.f
llvm.nvvm.add.rn.d
llvm.nvvm.add.rn.f
llvm.nvvm.add.rn.ftz.f
llvm.nvvm.add.rp.d
llvm.nvvm.add.rp.f
llvm.nvvm.add.rp.ftz.f
llvm.nvvm.add.rz.d
llvm.nvvm.add.rz.f
llvm.nvvm.add.rz.ftz.f
llvm.nvvm.atomic.add.gen.f.cta
llvm.nvvm.atomic.add.gen.f.sys
llvm.nvvm.atomic.add.gen.i.cta
llvm.nvvm.atomic.add.gen.i.sys
llvm.nvvm.atomic.and.gen.i.cta
llvm.nvvm.atomic.and.gen.i.sys
llvm.nvvm.atomic.cas.gen.i.cta
llvm.nvvm.atomic.cas.gen.i.sys
llvm.nvvm.atomic.dec.gen.i.cta
llvm.nvvm.atomic.dec.gen.i.sys
llvm.nvvm.atomic.exch.gen.i.cta
llvm.nvvm.atomic.exch.gen.i.sys
llvm.nvvm.atomic.inc.gen.i.cta
llvm.nvvm.atomic.inc.gen.i.sys
llvm.nvvm.atomic.load.dec.32
llvm.nvvm.atomic.load.inc.32
llvm.nvvm.atomic.max.gen.i.cta
llvm.nvvm.atomic.max.gen.i.sys
llvm.nvvm.atomic.min.gen.i.cta
llvm.nvvm.atomic.min.gen.i.sys
llvm.nvvm.atomic.or.gen.i.cta
llvm.nvvm.atomic.or.gen.i.sys
llvm.nvvm.atomic.xor.gen.i.cta
llvm.nvvm.atomic.xor.gen.i.sys
llvm.nvvm.bar.sync
llvm.nvvm.bar.warp.sync
llvm.nvvm.barrier
llvm.nvvm.barrier.n
llvm.nvvm.barrier.sync
llvm.nvvm.barrier.sync.cnt
llvm.nvvm.barrier0
llvm.nvvm.barrier0.and
llvm.nvvm.barrier0.or
llvm.nvvm.barrier0.popc
llvm.nvvm.bitcast.d2ll
llvm.nvvm.bitcast.f2i
llvm.nvvm.bitcast.i2f
llvm.nvvm.bitcast.ll2d
llvm.nvvm.ceil.d
llvm.nvvm.ceil.f
llvm.nvvm.ceil.ftz.f
llvm.nvvm.compiler.error
llvm.nvvm.compiler.warn
llvm.nvvm.cos.approx.f
llvm.nvvm.cos.approx.ftz.f
llvm.nvvm.d2f.rm
llvm.nvvm.d2f.rm.ftz
llvm.nvvm.d2f.rn
llvm.nvvm.d2f.rn.ftz
llvm.nvvm.d2f.rp
llvm.nvvm.d2f.rp.ftz
llvm.nvvm.d2f.rz
llvm.nvvm.d2f.rz.ftz
llvm.nvvm.d2i.hi
llvm.nvvm.d2i.lo
llvm.nvvm.d2i.rm
llvm.nvvm.d2i.rn
llvm.nvvm.d2i.rp
llvm.nvvm.d2i.rz
llvm.nvvm.d2ll.rm
llvm.nvvm.d2ll.rn
llvm.nvvm.d2ll.rp
llvm.nvvm.d2ll.rz
llvm.nvvm.d2ui.rm
llvm.nvvm.d2ui.rn
llvm.nvvm.d2ui.rp
llvm.nvvm.d2ui.rz
llvm.nvvm.d2ull.rm
llvm.nvvm.d2ull.rn
llvm.nvvm.d2ull.rp
llvm.nvvm.d2ull.rz
llvm.nvvm.div.approx.f
llvm.nvvm.div.approx.ftz.f
llvm.nvvm.div.rm.d
llvm.nvvm.div.rm.f
llvm.nvvm.div.rm.ftz.f
llvm.nvvm.div.rn.d
llvm.nvvm.div.rn.f
llvm.nvvm.div.rn.ftz.f
llvm.nvvm.div.rp.d
llvm.nvvm.div.rp.f
llvm.nvvm.div.rp.ftz.f
llvm.nvvm.div.rz.d
llvm.nvvm.div.rz.f
llvm.nvvm.div.rz.ftz.f
llvm.nvvm.ex2.approx.d
llvm.nvvm.ex2.approx.f
llvm.nvvm.ex2.approx.ftz.f
llvm.nvvm.f2h.rn
llvm.nvvm.f2h.rn.ftz
llvm.nvvm.f2i.rm
llvm.nvvm.f2i.rm.ftz
llvm.nvvm.f2i.rn
llvm.nvvm.f2i.rn.ftz
llvm.nvvm.f2i.rp
llvm.nvvm.f2i.rp.ftz
llvm.nvvm.f2i.rz
llvm.nvvm.f2i.rz.ftz
llvm.nvvm.f2ll.rm
llvm.nvvm.f2ll.rm.ftz
llvm.nvvm.f2ll.rn
llvm.nvvm.f2ll.rn.ftz
llvm.nvvm.f2ll.rp
llvm.nvvm.f2ll.rp.ftz
llvm.nvvm.f2ll.rz
llvm.nvvm.f2ll.rz.ftz
llvm.nvvm.f2ui.rm
llvm.nvvm.f2ui.rm.ftz
llvm.nvvm.f2ui.rn
llvm.nvvm.f2ui.rn.ftz
llvm.nvvm.f2ui.rp
llvm.nvvm.f2ui.rp.ftz
llvm.nvvm.f2ui.rz
llvm.nvvm.f2ui.rz.ftz
llvm.nvvm.f2ull.rm
llvm.nvvm.f2ull.rm.ftz
llvm.nvvm.f2ull.rn
llvm.nvvm.f2ull.rn.ftz
llvm.nvvm.f2ull.rp
llvm.nvvm.f2ull.rp.ftz
llvm.nvvm.f2ull.rz
llvm.nvvm.f2ull.rz.ftz
llvm.nvvm.fabs.d
llvm.nvvm.fabs.f
llvm.nvvm.fabs.ftz.f
llvm.nvvm.floor.d
llvm.nvvm.floor.f
llvm.nvvm.floor.ftz.f
llvm.nvvm.fma.rm.d
llvm.nvvm.fma.rm.f
llvm.nvvm.fma.rm.ftz.f
llvm.nvvm.fma.rn.d
llvm.nvvm.fma.rn.f
llvm.nvvm.fma.rn.ftz.f
llvm.nvvm.fma.rp.d
llvm.nvvm.fma.rp.f
llvm.nvvm.fma.rp.ftz.f
llvm.nvvm.fma.rz.d
llvm.nvvm.fma.rz.f
llvm.nvvm.fma.rz.ftz.f
llvm.nvvm.fmax.d
llvm.nvvm.fmax.f
llvm.nvvm.fmax.ftz.f
llvm.nvvm.fmin.d
llvm.nvvm.fmin.f
llvm.nvvm.fmin.ftz.f
llvm.nvvm.fns
llvm.nvvm.i2d.rm
llvm.nvvm.i2d.rn
llvm.nvvm.i2d.rp
llvm.nvvm.i2d.rz
llvm.nvvm.i2f.rm
llvm.nvvm.i2f.rn
llvm.nvvm.i2f.rp
llvm.nvvm.i2f.rz
llvm.nvvm.isspacep.const
llvm.nvvm.isspacep.global
llvm.nvvm.isspacep.local
llvm.nvvm.isspacep.shared
llvm.nvvm.istypep.sampler
llvm.nvvm.istypep.surface
llvm.nvvm.istypep.texture
llvm.nvvm.ldg.global.f
llvm.nvvm.ldg.global.i
llvm.nvvm.ldg.global.p
llvm.nvvm.ldu.global.f
llvm.nvvm.ldu.global.i
llvm.nvvm.ldu.global.p
llvm.nvvm.lg2.approx.d
llvm.nvvm.lg2.approx.f
llvm.nvvm.lg2.approx.ftz.f
llvm.nvvm.ll2d.rm
llvm.nvvm.ll2d.rn
llvm.nvvm.ll2d.rp
llvm.nvvm.ll2d.rz
llvm.nvvm.ll2f.rm
llvm.nvvm.ll2f.rn
llvm.nvvm.ll2f.rp
llvm.nvvm.ll2f.rz
llvm.nvvm.lohi.i2d
llvm.nvvm.match.all.sync.i32p
llvm.nvvm.match.all.sync.i64p
llvm.nvvm.match.any.sync.i32
llvm.nvvm.match.any.sync.i64
llvm.nvvm.membar.cta
llvm.nvvm.membar.gl
llvm.nvvm.membar.sys
llvm.nvvm.mma.m8n8k4.col.col.f16.f16
llvm.nvvm.mma.m8n8k4.col.col.f32.f16
llvm.nvvm.mma.m8n8k4.col.col.f32.f32
llvm.nvvm.mma.m8n8k4.col.row.f16.f16
llvm.nvvm.mma.m8n8k4.col.row.f32.f16
llvm.nvvm.mma.m8n8k4.col.row.f32.f32
llvm.nvvm.mma.m8n8k4.row.col.f16.f16
llvm.nvvm.mma.m8n8k4.row.col.f32.f16
llvm.nvvm.mma.m8n8k4.row.col.f32.f32
llvm.nvvm.mma.m8n8k4.row.row.f16.f16
llvm.nvvm.mma.m8n8k4.row.row.f32.f16
llvm.nvvm.mma.m8n8k4.row.row.f32.f32
llvm.nvvm.move.double
llvm.nvvm.move.float
llvm.nvvm.move.i16
llvm.nvvm.move.i32
llvm.nvvm.move.i64
llvm.nvvm.move.ptr
llvm.nvvm.mul.rm.d
llvm.nvvm.mul.rm.f
llvm.nvvm.mul.rm.ftz.f
llvm.nvvm.mul.rn.d
llvm.nvvm.mul.rn.f
llvm.nvvm.mul.rn.ftz.f
llvm.nvvm.mul.rp.d
llvm.nvvm.mul.rp.f
llvm.nvvm.mul.rp.ftz.f
llvm.nvvm.mul.rz.d
llvm.nvvm.mul.rz.f
llvm.nvvm.mul.rz.ftz.f
llvm.nvvm.mul24.i
llvm.nvvm.mul24.ui
llvm.nvvm.mulhi.i
llvm.nvvm.mulhi.ll
llvm.nvvm.mulhi.ui
llvm.nvvm.mulhi.ull
llvm.nvvm.prmt
llvm.nvvm.ptr.constant.to.gen
llvm.nvvm.ptr.gen.to.constant
llvm.nvvm.ptr.gen.to.global
llvm.nvvm.ptr.gen.to.local
llvm.nvvm.ptr.gen.to.param
llvm.nvvm.ptr.gen.to.shared
llvm.nvvm.ptr.global.to.gen
llvm.nvvm.ptr.local.to.gen
llvm.nvvm.ptr.shared.to.gen
llvm.nvvm.rcp.approx.ftz.d
llvm.nvvm.rcp.rm.d
llvm.nvvm.rcp.rm.f
llvm.nvvm.rcp.rm.ftz.f
llvm.nvvm.rcp.rn.d
llvm.nvvm.rcp.rn.f
llvm.nvvm.rcp.rn.ftz.f
llvm.nvvm.rcp.rp.d
llvm.nvvm.rcp.rp.f
llvm.nvvm.rcp.rp.ftz.f
llvm.nvvm.rcp.rz.d
llvm.nvvm.rcp.rz.f
llvm.nvvm.rcp.rz.ftz.f
llvm.nvvm.read.ptx.sreg.clock
llvm.nvvm.read.ptx.sreg.clock64
llvm.nvvm.read.ptx.sreg.ctaid.w
llvm.nvvm.read.ptx.sreg.ctaid.x
llvm.nvvm.read.ptx.sreg.ctaid.y
llvm.nvvm.read.ptx.sreg.ctaid.z
llvm.nvvm.read.ptx.sreg.envreg0
llvm.nvvm.read.ptx.sreg.envreg1
llvm.nvvm.read.ptx.sreg.envreg10
llvm.nvvm.read.ptx.sreg.envreg11
llvm.nvvm.read.ptx.sreg.envreg12
llvm.nvvm.read.ptx.sreg.envreg13
llvm.nvvm.read.ptx.sreg.envreg14
llvm.nvvm.read.ptx.sreg.envreg15
llvm.nvvm.read.ptx.sreg.envreg16
llvm.nvvm.read.ptx.sreg.envreg17
llvm.nvvm.read.ptx.sreg.envreg18
llvm.nvvm.read.ptx.sreg.envreg19
llvm.nvvm.read.ptx.sreg.envreg2
llvm.nvvm.read.ptx.sreg.envreg20
llvm.nvvm.read.ptx.sreg.envreg21
llvm.nvvm.read.ptx.sreg.envreg22
llvm.nvvm.read.ptx.sreg.envreg23
llvm.nvvm.read.ptx.sreg.envreg24
llvm.nvvm.read.ptx.sreg.envreg25
llvm.nvvm.read.ptx.sreg.envreg26
llvm.nvvm.read.ptx.sreg.envreg27
llvm.nvvm.read.ptx.sreg.envreg28
llvm.nvvm.read.ptx.sreg.envreg29
llvm.nvvm.read.ptx.sreg.envreg3
llvm.nvvm.read.ptx.sreg.envreg30
llvm.nvvm.read.ptx.sreg.envreg31
llvm.nvvm.read.ptx.sreg.envreg4
llvm.nvvm.read.ptx.sreg.envreg5
llvm.nvvm.read.ptx.sreg.envreg6
llvm.nvvm.read.ptx.sreg.envreg7
llvm.nvvm.read.ptx.sreg.envreg8
llvm.nvvm.read.ptx.sreg.envreg9
llvm.nvvm.read.ptx.sreg.gridid
llvm.nvvm.read.ptx.sreg.laneid
llvm.nvvm.read.ptx.sreg.lanemask.eq
llvm.nvvm.read.ptx.sreg.lanemask.ge
llvm.nvvm.read.ptx.sreg.lanemask.gt
llvm.nvvm.read.ptx.sreg.lanemask.le
llvm.nvvm.read.ptx.sreg.lanemask.lt
llvm.nvvm.read.ptx.sreg.nctaid.w
llvm.nvvm.read.ptx.sreg.nctaid.x
llvm.nvvm.read.ptx.sreg.nctaid.y
llvm.nvvm.read.ptx.sreg.nctaid.z
llvm.nvvm.read.ptx.sreg.nsmid
llvm.nvvm.read.ptx.sreg.ntid.w
llvm.nvvm.read.ptx.sreg.ntid.x
llvm.nvvm.read.ptx.sreg.ntid.y
llvm.nvvm.read.ptx.sreg.ntid.z
llvm.nvvm.read.ptx.sreg.nwarpid
llvm.nvvm.read.ptx.sreg.pm0
llvm.nvvm.read.ptx.sreg.pm1
llvm.nvvm.read.ptx.sreg.pm2
llvm.nvvm.read.ptx.sreg.pm3
llvm.nvvm.read.ptx.sreg.smid
llvm.nvvm.read.ptx.sreg.tid.w
llvm.nvvm.read.ptx.sreg.tid.x
llvm.nvvm.read.ptx.sreg.tid.y
llvm.nvvm.read.ptx.sreg.tid.z
llvm.nvvm.read.ptx.sreg.warpid
llvm.nvvm.read.ptx.sreg.warpsize
llvm.nvvm.reflect
llvm.nvvm.rotate.b32
llvm.nvvm.rotate.b64
llvm.nvvm.rotate.right.b64
llvm.nvvm.round.d
llvm.nvvm.round.f
llvm.nvvm.round.ftz.f
llvm.nvvm.rsqrt.approx.d
llvm.nvvm.rsqrt.approx.f
llvm.nvvm.rsqrt.approx.ftz.f
llvm.nvvm.sad.i
llvm.nvvm.sad.ui
llvm.nvvm.saturate.d
llvm.nvvm.saturate.f
llvm.nvvm.saturate.ftz.f
llvm.nvvm.shfl.bfly.f32
llvm.nvvm.shfl.bfly.f32p
llvm.nvvm.shfl.bfly.i32
llvm.nvvm.shfl.bfly.i32p
llvm.nvvm.shfl.down.f32
llvm.nvvm.shfl.down.f32p
llvm.nvvm.shfl.down.i32
llvm.nvvm.shfl.down.i32p
llvm.nvvm.shfl.idx.f32
llvm.nvvm.shfl.idx.f32p
llvm.nvvm.shfl.idx.i32
llvm.nvvm.shfl.idx.i32p
llvm.nvvm.shfl.sync.bfly.f32
llvm.nvvm.shfl.sync.bfly.f32p
llvm.nvvm.shfl.sync.bfly.i32
llvm.nvvm.shfl.sync.bfly.i32p
llvm.nvvm.shfl.sync.down.f32
llvm.nvvm.shfl.sync.down.f32p
llvm.nvvm.shfl.sync.down.i32
llvm.nvvm.shfl.sync.down.i32p
llvm.nvvm.shfl.sync.idx.f32
llvm.nvvm.shfl.sync.idx.f32p
llvm.nvvm.shfl.sync.idx.i32
llvm.nvvm.shfl.sync.idx.i32p
llvm.nvvm.shfl.sync.up.f32
llvm.nvvm.shfl.sync.up.f32p
llvm.nvvm.shfl.sync.up.i32
llvm.nvvm.shfl.sync.up.i32p
llvm.nvvm.shfl.up.f32
llvm.nvvm.shfl.up.f32p
llvm.nvvm.shfl.up.i32
llvm.nvvm.shfl.up.i32p
llvm.nvvm.sin.approx.f
llvm.nvvm.sin.approx.ftz.f
llvm.nvvm.sqrt.approx.f
llvm.nvvm.sqrt.approx.ftz.f
llvm.nvvm.sqrt.f
llvm.nvvm.sqrt.rm.d
llvm.nvvm.sqrt.rm.f
llvm.nvvm.sqrt.rm.ftz.f
llvm.nvvm.sqrt.rn.d
llvm.nvvm.sqrt.rn.f
llvm.nvvm.sqrt.rn.ftz.f
llvm.nvvm.sqrt.rp.d
llvm.nvvm.sqrt.rp.f
llvm.nvvm.sqrt.rp.ftz.f
llvm.nvvm.sqrt.rz.d
llvm.nvvm.sqrt.rz.f
llvm.nvvm.sqrt.rz.ftz.f
llvm.nvvm.suld.1d.array.i16.clamp
llvm.nvvm.suld.1d.array.i16.trap
llvm.nvvm.suld.1d.array.i16.zero
llvm.nvvm.suld.1d.array.i32.clamp
llvm.nvvm.suld.1d.array.i32.trap
llvm.nvvm.suld.1d.array.i32.zero
llvm.nvvm.suld.1d.array.i64.clamp
llvm.nvvm.suld.1d.array.i64.trap
llvm.nvvm.suld.1d.array.i64.zero
llvm.nvvm.suld.1d.array.i8.clamp
llvm.nvvm.suld.1d.array.i8.trap
llvm.nvvm.suld.1d.array.i8.zero
llvm.nvvm.suld.1d.array.v2i16.clamp
llvm.nvvm.suld.1d.array.v2i16.trap
llvm.nvvm.suld.1d.array.v2i16.zero
llvm.nvvm.suld.1d.array.v2i32.clamp
llvm.nvvm.suld.1d.array.v2i32.trap
llvm.nvvm.suld.1d.array.v2i32.zero
llvm.nvvm.suld.1d.array.v2i64.clamp
llvm.nvvm.suld.1d.array.v2i64.trap
llvm.nvvm.suld.1d.array.v2i64.zero
llvm.nvvm.suld.1d.array.v2i8.clamp
llvm.nvvm.suld.1d.array.v2i8.trap
llvm.nvvm.suld.1d.array.v2i8.zero
llvm.nvvm.suld.1d.array.v4i16.clamp
llvm.nvvm.suld.1d.array.v4i16.trap
llvm.nvvm.suld.1d.array.v4i16.zero
llvm.nvvm.suld.1d.array.v4i32.clamp
llvm.nvvm.suld.1d.array.v4i32.trap
llvm.nvvm.suld.1d.array.v4i32.zero
llvm.nvvm.suld.1d.array.v4i8.clamp
llvm.nvvm.suld.1d.array.v4i8.trap
llvm.nvvm.suld.1d.array.v4i8.zero
llvm.nvvm.suld.1d.i16.clamp
llvm.nvvm.suld.1d.i16.trap
llvm.nvvm.suld.1d.i16.zero
llvm.nvvm.suld.1d.i32.clamp
llvm.nvvm.suld.1d.i32.trap
llvm.nvvm.suld.1d.i32.zero
llvm.nvvm.suld.1d.i64.clamp
llvm.nvvm.suld.1d.i64.trap
llvm.nvvm.suld.1d.i64.zero
llvm.nvvm.suld.1d.i8.clamp
llvm.nvvm.suld.1d.i8.trap
llvm.nvvm.suld.1d.i8.zero
llvm.nvvm.suld.1d.v2i16.clamp
llvm.nvvm.suld.1d.v2i16.trap
llvm.nvvm.suld.1d.v2i16.zero
llvm.nvvm.suld.1d.v2i32.clamp
llvm.nvvm.suld.1d.v2i32.trap
llvm.nvvm.suld.1d.v2i32.zero
llvm.nvvm.suld.1d.v2i64.clamp
llvm.nvvm.suld.1d.v2i64.trap
llvm.nvvm.suld.1d.v2i64.zero
llvm.nvvm.suld.1d.v2i8.clamp
llvm.nvvm.suld.1d.v2i8.trap
llvm.nvvm.suld.1d.v2i8.zero
llvm.nvvm.suld.1d.v4i16.clamp
llvm.nvvm.suld.1d.v4i16.trap
llvm.nvvm.suld.1d.v4i16.zero
llvm.nvvm.suld.1d.v4i32.clamp
llvm.nvvm.suld.1d.v4i32.trap
llvm.nvvm.suld.1d.v4i32.zero
llvm.nvvm.suld.1d.v4i8.clamp
llvm.nvvm.suld.1d.v4i8.trap
llvm.nvvm.suld.1d.v4i8.zero
llvm.nvvm.suld.2d.array.i16.clamp
llvm.nvvm.suld.2d.array.i16.trap
llvm.nvvm.suld.2d.array.i16.zero
llvm.nvvm.suld.2d.array.i32.clamp
llvm.nvvm.suld.2d.array.i32.trap
llvm.nvvm.suld.2d.array.i32.zero
llvm.nvvm.suld.2d.array.i64.clamp
llvm.nvvm.suld.2d.array.i64.trap
llvm.nvvm.suld.2d.array.i64.zero
llvm.nvvm.suld.2d.array.i8.clamp
llvm.nvvm.suld.2d.array.i8.trap
llvm.nvvm.suld.2d.array.i8.zero
llvm.nvvm.suld.2d.array.v2i16.clamp
llvm.nvvm.suld.2d.array.v2i16.trap
llvm.nvvm.suld.2d.array.v2i16.zero
llvm.nvvm.suld.2d.array.v2i32.clamp
llvm.nvvm.suld.2d.array.v2i32.trap
llvm.nvvm.suld.2d.array.v2i32.zero
llvm.nvvm.suld.2d.array.v2i64.clamp
llvm.nvvm.suld.2d.array.v2i64.trap
llvm.nvvm.suld.2d.array.v2i64.zero
llvm.nvvm.suld.2d.array.v2i8.clamp
llvm.nvvm.suld.2d.array.v2i8.trap
llvm.nvvm.suld.2d.array.v2i8.zero
llvm.nvvm.suld.2d.array.v4i16.clamp
llvm.nvvm.suld.2d.array.v4i16.trap
llvm.nvvm.suld.2d.array.v4i16.zero
llvm.nvvm.suld.2d.array.v4i32.clamp
llvm.nvvm.suld.2d.array.v4i32.trap
llvm.nvvm.suld.2d.array.v4i32.zero
llvm.nvvm.suld.2d.array.v4i8.clamp
llvm.nvvm.suld.2d.array.v4i8.trap
llvm.nvvm.suld.2d.array.v4i8.zero
llvm.nvvm.suld.2d.i16.clamp
llvm.nvvm.suld.2d.i16.trap
llvm.nvvm.suld.2d.i16.zero
llvm.nvvm.suld.2d.i32.clamp
llvm.nvvm.suld.2d.i32.trap
llvm.nvvm.suld.2d.i32.zero
llvm.nvvm.suld.2d.i64.clamp
llvm.nvvm.suld.2d.i64.trap
llvm.nvvm.suld.2d.i64.zero
llvm.nvvm.suld.2d.i8.clamp
llvm.nvvm.suld.2d.i8.trap
llvm.nvvm.suld.2d.i8.zero
llvm.nvvm.suld.2d.v2i16.clamp
llvm.nvvm.suld.2d.v2i16.trap
llvm.nvvm.suld.2d.v2i16.zero
llvm.nvvm.suld.2d.v2i32.clamp
llvm.nvvm.suld.2d.v2i32.trap
llvm.nvvm.suld.2d.v2i32.zero
llvm.nvvm.suld.2d.v2i64.clamp
llvm.nvvm.suld.2d.v2i64.trap
llvm.nvvm.suld.2d.v2i64.zero
llvm.nvvm.suld.2d.v2i8.clamp
llvm.nvvm.suld.2d.v2i8.trap
llvm.nvvm.suld.2d.v2i8.zero
llvm.nvvm.suld.2d.v4i16.clamp
llvm.nvvm.suld.2d.v4i16.trap
llvm.nvvm.suld.2d.v4i16.zero
llvm.nvvm.suld.2d.v4i32.clamp
llvm.nvvm.suld.2d.v4i32.trap
llvm.nvvm.suld.2d.v4i32.zero
llvm.nvvm.suld.2d.v4i8.clamp
llvm.nvvm.suld.2d.v4i8.trap
llvm.nvvm.suld.2d.v4i8.zero
llvm.nvvm.suld.3d.i16.clamp
llvm.nvvm.suld.3d.i16.trap
llvm.nvvm.suld.3d.i16.zero
llvm.nvvm.suld.3d.i32.clamp
llvm.nvvm.suld.3d.i32.trap
llvm.nvvm.suld.3d.i32.zero
llvm.nvvm.suld.3d.i64.clamp
llvm.nvvm.suld.3d.i64.trap
llvm.nvvm.suld.3d.i64.zero
llvm.nvvm.suld.3d.i8.clamp
llvm.nvvm.suld.3d.i8.trap
llvm.nvvm.suld.3d.i8.zero
llvm.nvvm.suld.3d.v2i16.clamp
llvm.nvvm.suld.3d.v2i16.trap
llvm.nvvm.suld.3d.v2i16.zero
llvm.nvvm.suld.3d.v2i32.clamp
llvm.nvvm.suld.3d.v2i32.trap
llvm.nvvm.suld.3d.v2i32.zero
llvm.nvvm.suld.3d.v2i64.clamp
llvm.nvvm.suld.3d.v2i64.trap
llvm.nvvm.suld.3d.v2i64.zero
llvm.nvvm.suld.3d.v2i8.clamp
llvm.nvvm.suld.3d.v2i8.trap
llvm.nvvm.suld.3d.v2i8.zero
llvm.nvvm.suld.3d.v4i16.clamp
llvm.nvvm.suld.3d.v4i16.trap
llvm.nvvm.suld.3d.v4i16.zero
llvm.nvvm.suld.3d.v4i32.clamp
llvm.nvvm.suld.3d.v4i32.trap
llvm.nvvm.suld.3d.v4i32.zero
llvm.nvvm.suld.3d.v4i8.clamp
llvm.nvvm.suld.3d.v4i8.trap
llvm.nvvm.suld.3d.v4i8.zero
llvm.nvvm.suq.array.size
llvm.nvvm.suq.channel.data.type
llvm.nvvm.suq.channel.order
llvm.nvvm.suq.depth
llvm.nvvm.suq.height
llvm.nvvm.suq.width
llvm.nvvm.sust.b.1d.array.i16.clamp
llvm.nvvm.sust.b.1d.array.i16.trap
llvm.nvvm.sust.b.1d.array.i16.zero
llvm.nvvm.sust.b.1d.array.i32.clamp
llvm.nvvm.sust.b.1d.array.i32.trap
llvm.nvvm.sust.b.1d.array.i32.zero
llvm.nvvm.sust.b.1d.array.i64.clamp
llvm.nvvm.sust.b.1d.array.i64.trap
llvm.nvvm.sust.b.1d.array.i64.zero
llvm.nvvm.sust.b.1d.array.i8.clamp
llvm.nvvm.sust.b.1d.array.i8.trap
llvm.nvvm.sust.b.1d.array.i8.zero
llvm.nvvm.sust.b.1d.array.v2i16.clamp
llvm.nvvm.sust.b.1d.array.v2i16.trap
llvm.nvvm.sust.b.1d.array.v2i16.zero
llvm.nvvm.sust.b.1d.array.v2i32.clamp
llvm.nvvm.sust.b.1d.array.v2i32.trap
llvm.nvvm.sust.b.1d.array.v2i32.zero
llvm.nvvm.sust.b.1d.array.v2i64.clamp
llvm.nvvm.sust.b.1d.array.v2i64.trap
llvm.nvvm.sust.b.1d.array.v2i64.zero
llvm.nvvm.sust.b.1d.array.v2i8.clamp
llvm.nvvm.sust.b.1d.array.v2i8.trap
llvm.nvvm.sust.b.1d.array.v2i8.zero
llvm.nvvm.sust.b.1d.array.v4i16.clamp
llvm.nvvm.sust.b.1d.array.v4i16.trap
llvm.nvvm.sust.b.1d.array.v4i16.zero
llvm.nvvm.sust.b.1d.array.v4i32.clamp
llvm.nvvm.sust.b.1d.array.v4i32.trap
llvm.nvvm.sust.b.1d.array.v4i32.zero
llvm.nvvm.sust.b.1d.array.v4i8.clamp
llvm.nvvm.sust.b.1d.array.v4i8.trap
llvm.nvvm.sust.b.1d.array.v4i8.zero
llvm.nvvm.sust.b.1d.i16.clamp
llvm.nvvm.sust.b.1d.i16.trap
llvm.nvvm.sust.b.1d.i16.zero
llvm.nvvm.sust.b.1d.i32.clamp
llvm.nvvm.sust.b.1d.i32.trap
llvm.nvvm.sust.b.1d.i32.zero
llvm.nvvm.sust.b.1d.i64.clamp
llvm.nvvm.sust.b.1d.i64.trap
llvm.nvvm.sust.b.1d.i64.zero
llvm.nvvm.sust.b.1d.i8.clamp
llvm.nvvm.sust.b.1d.i8.trap
llvm.nvvm.sust.b.1d.i8.zero
llvm.nvvm.sust.b.1d.v2i16.clamp
llvm.nvvm.sust.b.1d.v2i16.trap
llvm.nvvm.sust.b.1d.v2i16.zero
llvm.nvvm.sust.b.1d.v2i32.clamp
llvm.nvvm.sust.b.1d.v2i32.trap
llvm.nvvm.sust.b.1d.v2i32.zero
llvm.nvvm.sust.b.1d.v2i64.clamp
llvm.nvvm.sust.b.1d.v2i64.trap
llvm.nvvm.sust.b.1d.v2i64.zero
llvm.nvvm.sust.b.1d.v2i8.clamp
llvm.nvvm.sust.b.1d.v2i8.trap
llvm.nvvm.sust.b.1d.v2i8.zero
llvm.nvvm.sust.b.1d.v4i16.clamp
llvm.nvvm.sust.b.1d.v4i16.trap
llvm.nvvm.sust.b.1d.v4i16.zero
llvm.nvvm.sust.b.1d.v4i32.clamp
llvm.nvvm.sust.b.1d.v4i32.trap
llvm.nvvm.sust.b.1d.v4i32.zero
llvm.nvvm.sust.b.1d.v4i8.clamp
llvm.nvvm.sust.b.1d.v4i8.trap
llvm.nvvm.sust.b.1d.v4i8.zero
llvm.nvvm.sust.b.2d.array.i16.clamp
llvm.nvvm.sust.b.2d.array.i16.trap
llvm.nvvm.sust.b.2d.array.i16.zero
llvm.nvvm.sust.b.2d.array.i32.clamp
llvm.nvvm.sust.b.2d.array.i32.trap
llvm.nvvm.sust.b.2d.array.i32.zero
llvm.nvvm.sust.b.2d.array.i64.clamp
llvm.nvvm.sust.b.2d.array.i64.trap
llvm.nvvm.sust.b.2d.array.i64.zero
llvm.nvvm.sust.b.2d.array.i8.clamp
llvm.nvvm.sust.b.2d.array.i8.trap
llvm.nvvm.sust.b.2d.array.i8.zero
llvm.nvvm.sust.b.2d.array.v2i16.clamp
llvm.nvvm.sust.b.2d.array.v2i16.trap
llvm.nvvm.sust.b.2d.array.v2i16.zero
llvm.nvvm.sust.b.2d.array.v2i32.clamp
llvm.nvvm.sust.b.2d.array.v2i32.trap
llvm.nvvm.sust.b.2d.array.v2i32.zero
llvm.nvvm.sust.b.2d.array.v2i64.clamp
llvm.nvvm.sust.b.2d.array.v2i64.trap
llvm.nvvm.sust.b.2d.array.v2i64.zero
llvm.nvvm.sust.b.2d.array.v2i8.clamp
llvm.nvvm.sust.b.2d.array.v2i8.trap
llvm.nvvm.sust.b.2d.array.v2i8.zero
llvm.nvvm.sust.b.2d.array.v4i16.clamp
llvm.nvvm.sust.b.2d.array.v4i16.trap
llvm.nvvm.sust.b.2d.array.v4i16.zero
llvm.nvvm.sust.b.2d.array.v4i32.clamp
llvm.nvvm.sust.b.2d.array.v4i32.trap
llvm.nvvm.sust.b.2d.array.v4i32.zero
llvm.nvvm.sust.b.2d.array.v4i8.clamp
llvm.nvvm.sust.b.2d.array.v4i8.trap
llvm.nvvm.sust.b.2d.array.v4i8.zero
llvm.nvvm.sust.b.2d.i16.clamp
llvm.nvvm.sust.b.2d.i16.trap
llvm.nvvm.sust.b.2d.i16.zero
llvm.nvvm.sust.b.2d.i32.clamp
llvm.nvvm.sust.b.2d.i32.trap
llvm.nvvm.sust.b.2d.i32.zero
llvm.nvvm.sust.b.2d.i64.clamp
llvm.nvvm.sust.b.2d.i64.trap
llvm.nvvm.sust.b.2d.i64.zero
llvm.nvvm.sust.b.2d.i8.clamp
llvm.nvvm.sust.b.2d.i8.trap
llvm.nvvm.sust.b.2d.i8.zero
llvm.nvvm.sust.b.2d.v2i16.clamp
llvm.nvvm.sust.b.2d.v2i16.trap
llvm.nvvm.sust.b.2d.v2i16.zero
llvm.nvvm.sust.b.2d.v2i32.clamp
llvm.nvvm.sust.b.2d.v2i32.trap
llvm.nvvm.sust.b.2d.v2i32.zero
llvm.nvvm.sust.b.2d.v2i64.clamp
llvm.nvvm.sust.b.2d.v2i64.trap
llvm.nvvm.sust.b.2d.v2i64.zero
llvm.nvvm.sust.b.2d.v2i8.clamp
llvm.nvvm.sust.b.2d.v2i8.trap
llvm.nvvm.sust.b.2d.v2i8.zero
llvm.nvvm.sust.b.2d.v4i16.clamp
llvm.nvvm.sust.b.2d.v4i16.trap
llvm.nvvm.sust.b.2d.v4i16.zero
llvm.nvvm.sust.b.2d.v4i32.clamp
llvm.nvvm.sust.b.2d.v4i32.trap
llvm.nvvm.sust.b.2d.v4i32.zero
llvm.nvvm.sust.b.2d.v4i8.clamp
llvm.nvvm.sust.b.2d.v4i8.trap
llvm.nvvm.sust.b.2d.v4i8.zero
llvm.nvvm.sust.b.3d.i16.clamp
llvm.nvvm.sust.b.3d.i16.trap
llvm.nvvm.sust.b.3d.i16.zero
llvm.nvvm.sust.b.3d.i32.clamp
llvm.nvvm.sust.b.3d.i32.trap
llvm.nvvm.sust.b.3d.i32.zero
llvm.nvvm.sust.b.3d.i64.clamp
llvm.nvvm.sust.b.3d.i64.trap
llvm.nvvm.sust.b.3d.i64.zero
llvm.nvvm.sust.b.3d.i8.clamp
llvm.nvvm.sust.b.3d.i8.trap
llvm.nvvm.sust.b.3d.i8.zero
llvm.nvvm.sust.b.3d.v2i16.clamp
llvm.nvvm.sust.b.3d.v2i16.trap
llvm.nvvm.sust.b.3d.v2i16.zero
llvm.nvvm.sust.b.3d.v2i32.clamp
llvm.nvvm.sust.b.3d.v2i32.trap
llvm.nvvm.sust.b.3d.v2i32.zero
llvm.nvvm.sust.b.3d.v2i64.clamp
llvm.nvvm.sust.b.3d.v2i64.trap
llvm.nvvm.sust.b.3d.v2i64.zero
llvm.nvvm.sust.b.3d.v2i8.clamp
llvm.nvvm.sust.b.3d.v2i8.trap
llvm.nvvm.sust.b.3d.v2i8.zero
llvm.nvvm.sust.b.3d.v4i16.clamp
llvm.nvvm.sust.b.3d.v4i16.trap
llvm.nvvm.sust.b.3d.v4i16.zero
llvm.nvvm.sust.b.3d.v4i32.clamp
llvm.nvvm.sust.b.3d.v4i32.trap
llvm.nvvm.sust.b.3d.v4i32.zero
llvm.nvvm.sust.b.3d.v4i8.clamp
llvm.nvvm.sust.b.3d.v4i8.trap
llvm.nvvm.sust.b.3d.v4i8.zero
llvm.nvvm.sust.p.1d.array.i16.trap
llvm.nvvm.sust.p.1d.array.i32.trap
llvm.nvvm.sust.p.1d.array.i8.trap
llvm.nvvm.sust.p.1d.array.v2i16.trap
llvm.nvvm.sust.p.1d.array.v2i32.trap
llvm.nvvm.sust.p.1d.array.v2i8.trap
llvm.nvvm.sust.p.1d.array.v4i16.trap
llvm.nvvm.sust.p.1d.array.v4i32.trap
llvm.nvvm.sust.p.1d.array.v4i8.trap
llvm.nvvm.sust.p.1d.i16.trap
llvm.nvvm.sust.p.1d.i32.trap
llvm.nvvm.sust.p.1d.i8.trap
llvm.nvvm.sust.p.1d.v2i16.trap
llvm.nvvm.sust.p.1d.v2i32.trap
llvm.nvvm.sust.p.1d.v2i8.trap
llvm.nvvm.sust.p.1d.v4i16.trap
llvm.nvvm.sust.p.1d.v4i32.trap
llvm.nvvm.sust.p.1d.v4i8.trap
llvm.nvvm.sust.p.2d.array.i16.trap
llvm.nvvm.sust.p.2d.array.i32.trap
llvm.nvvm.sust.p.2d.array.i8.trap
llvm.nvvm.sust.p.2d.array.v2i16.trap
llvm.nvvm.sust.p.2d.array.v2i32.trap
llvm.nvvm.sust.p.2d.array.v2i8.trap
llvm.nvvm.sust.p.2d.array.v4i16.trap
llvm.nvvm.sust.p.2d.array.v4i32.trap
llvm.nvvm.sust.p.2d.array.v4i8.trap
llvm.nvvm.sust.p.2d.i16.trap
llvm.nvvm.sust.p.2d.i32.trap
llvm.nvvm.sust.p.2d.i8.trap
llvm.nvvm.sust.p.2d.v2i16.trap
llvm.nvvm.sust.p.2d.v2i32.trap
llvm.nvvm.sust.p.2d.v2i8.trap
llvm.nvvm.sust.p.2d.v4i16.trap
llvm.nvvm.sust.p.2d.v4i32.trap
llvm.nvvm.sust.p.2d.v4i8.trap
llvm.nvvm.sust.p.3d.i16.trap
llvm.nvvm.sust.p.3d.i32.trap
llvm.nvvm.sust.p.3d.i8.trap
llvm.nvvm.sust.p.3d.v2i16.trap
llvm.nvvm.sust.p.3d.v2i32.trap
llvm.nvvm.sust.p.3d.v2i8.trap
llvm.nvvm.sust.p.3d.v4i16.trap
llvm.nvvm.sust.p.3d.v4i32.trap
llvm.nvvm.sust.p.3d.v4i8.trap
llvm.nvvm.swap.lo.hi.b64
llvm.nvvm.tex.1d.array.grad.v4f32.f32
llvm.nvvm.tex.1d.array.grad.v4s32.f32
llvm.nvvm.tex.1d.array.grad.v4u32.f32
llvm.nvvm.tex.1d.array.level.v4f32.f32
llvm.nvvm.tex.1d.array.level.v4s32.f32
llvm.nvvm.tex.1d.array.level.v4u32.f32
llvm.nvvm.tex.1d.array.v4f32.f32
llvm.nvvm.tex.1d.array.v4f32.s32
llvm.nvvm.tex.1d.array.v4s32.f32
llvm.nvvm.tex.1d.array.v4s32.s32
llvm.nvvm.tex.1d.array.v4u32.f32
llvm.nvvm.tex.1d.array.v4u32.s32
llvm.nvvm.tex.1d.grad.v4f32.f32
llvm.nvvm.tex.1d.grad.v4s32.f32
llvm.nvvm.tex.1d.grad.v4u32.f32
llvm.nvvm.tex.1d.level.v4f32.f32
llvm.nvvm.tex.1d.level.v4s32.f32
llvm.nvvm.tex.1d.level.v4u32.f32
llvm.nvvm.tex.1d.v4f32.f32
llvm.nvvm.tex.1d.v4f32.s32
llvm.nvvm.tex.1d.v4s32.f32
llvm.nvvm.tex.1d.v4s32.s32
llvm.nvvm.tex.1d.v4u32.f32
llvm.nvvm.tex.1d.v4u32.s32
llvm.nvvm.tex.2d.array.grad.v4f32.f32
llvm.nvvm.tex.2d.array.grad.v4s32.f32
llvm.nvvm.tex.2d.array.grad.v4u32.f32
llvm.nvvm.tex.2d.array.level.v4f32.f32
llvm.nvvm.tex.2d.array.level.v4s32.f32
llvm.nvvm.tex.2d.array.level.v4u32.f32
llvm.nvvm.tex.2d.array.v4f32.f32
llvm.nvvm.tex.2d.array.v4f32.s32
llvm.nvvm.tex.2d.array.v4s32.f32
llvm.nvvm.tex.2d.array.v4s32.s32
llvm.nvvm.tex.2d.array.v4u32.f32
llvm.nvvm.tex.2d.array.v4u32.s32
llvm.nvvm.tex.2d.grad.v4f32.f32
llvm.nvvm.tex.2d.grad.v4s32.f32
llvm.nvvm.tex.2d.grad.v4u32.f32
llvm.nvvm.tex.2d.level.v4f32.f32
llvm.nvvm.tex.2d.level.v4s32.f32
llvm.nvvm.tex.2d.level.v4u32.f32
llvm.nvvm.tex.2d.v4f32.f32
llvm.nvvm.tex.2d.v4f32.s32
llvm.nvvm.tex.2d.v4s32.f32
llvm.nvvm.tex.2d.v4s32.s32
llvm.nvvm.tex.2d.v4u32.f32
llvm.nvvm.tex.2d.v4u32.s32
llvm.nvvm.tex.3d.grad.v4f32.f32
llvm.nvvm.tex.3d.grad.v4s32.f32
llvm.nvvm.tex.3d.grad.v4u32.f32
llvm.nvvm.tex.3d.level.v4f32.f32
llvm.nvvm.tex.3d.level.v4s32.f32
llvm.nvvm.tex.3d.level.v4u32.f32
llvm.nvvm.tex.3d.v4f32.f32
llvm.nvvm.tex.3d.v4f32.s32
llvm.nvvm.tex.3d.v4s32.f32
llvm.nvvm.tex.3d.v4s32.s32
llvm.nvvm.tex.3d.v4u32.f32
llvm.nvvm.tex.3d.v4u32.s32
llvm.nvvm.tex.cube.array.level.v4f32.f32
llvm.nvvm.tex.cube.array.level.v4s32.f32
llvm.nvvm.tex.cube.array.level.v4u32.f32
llvm.nvvm.tex.cube.array.v4f32.f32
llvm.nvvm.tex.cube.array.v4s32.f32
llvm.nvvm.tex.cube.array.v4u32.f32
llvm.nvvm.tex.cube.level.v4f32.f32
llvm.nvvm.tex.cube.level.v4s32.f32
llvm.nvvm.tex.cube.level.v4u32.f32
llvm.nvvm.tex.cube.v4f32.f32
llvm.nvvm.tex.cube.v4s32.f32
llvm.nvvm.tex.cube.v4u32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.array.level.v4f32.f32
llvm.nvvm.tex.unified.1d.array.level.v4s32.f32
llvm.nvvm.tex.unified.1d.array.level.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.s32
llvm.nvvm.tex.unified.1d.array.v4s32.f32
llvm.nvvm.tex.unified.1d.array.v4s32.s32
llvm.nvvm.tex.unified.1d.array.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4u32.s32
llvm.nvvm.tex.unified.1d.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.level.v4f32.f32
llvm.nvvm.tex.unified.1d.level.v4s32.f32
llvm.nvvm.tex.unified.1d.level.v4u32.f32
llvm.nvvm.tex.unified.1d.v4f32.f32
llvm.nvvm.tex.unified.1d.v4f32.s32
llvm.nvvm.tex.unified.1d.v4s32.f32
llvm.nvvm.tex.unified.1d.v4s32.s32
llvm.nvvm.tex.unified.1d.v4u32.f32
llvm.nvvm.tex.unified.1d.v4u32.s32
llvm.nvvm.tex.unified.2d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.array.level.v4f32.f32
llvm.nvvm.tex.unified.2d.array.level.v4s32.f32
llvm.nvvm.tex.unified.2d.array.level.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.s32
llvm.nvvm.tex.unified.2d.array.v4s32.f32
llvm.nvvm.tex.unified.2d.array.v4s32.s32
llvm.nvvm.tex.unified.2d.array.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4u32.s32
llvm.nvvm.tex.unified.2d.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.level.v4f32.f32
llvm.nvvm.tex.unified.2d.level.v4s32.f32
llvm.nvvm.tex.unified.2d.level.v4u32.f32
llvm.nvvm.tex.unified.2d.v4f32.f32
llvm.nvvm.tex.unified.2d.v4f32.s32
llvm.nvvm.tex.unified.2d.v4s32.f32
llvm.nvvm.tex.unified.2d.v4s32.s32
llvm.nvvm.tex.unified.2d.v4u32.f32
llvm.nvvm.tex.unified.2d.v4u32.s32
llvm.nvvm.tex.unified.3d.grad.v4f32.f32
llvm.nvvm.tex.unified.3d.grad.v4s32.f32
llvm.nvvm.tex.unified.3d.grad.v4u32.f32
llvm.nvvm.tex.unified.3d.level.v4f32.f32
llvm.nvvm.tex.unified.3d.level.v4s32.f32
llvm.nvvm.tex.unified.3d.level.v4u32.f32
llvm.nvvm.tex.unified.3d.v4f32.f32
llvm.nvvm.tex.unified.3d.v4f32.s32
llvm.nvvm.tex.unified.3d.v4s32.f32
llvm.nvvm.tex.unified.3d.v4s32.s32
llvm.nvvm.tex.unified.3d.v4u32.f32
llvm.nvvm.tex.unified.3d.v4u32.s32
llvm.nvvm.tex.unified.cube.array.level.v4f32.f32
llvm.nvvm.tex.unified.cube.array.level.v4s32.f32
llvm.nvvm.tex.unified.cube.array.level.v4u32.f32
llvm.nvvm.tex.unified.cube.array.v4f32.f32
llvm.nvvm.tex.unified.cube.array.v4s32.f32
llvm.nvvm.tex.unified.cube.array.v4u32.f32
llvm.nvvm.tex.unified.cube.level.v4f32.f32
llvm.nvvm.tex.unified.cube.level.v4s32.f32
llvm.nvvm.tex.unified.cube.level.v4u32.f32
llvm.nvvm.tex.unified.cube.v4f32.f32
llvm.nvvm.tex.unified.cube.v4s32.f32
llvm.nvvm.tex.unified.cube.v4u32.f32
llvm.nvvm.texsurf.handle
llvm.nvvm.texsurf.handle.internal
llvm.nvvm.tld4.a.2d.v4f32.f32
llvm.nvvm.tld4.a.2d.v4s32.f32
llvm.nvvm.tld4.a.2d.v4u32.f32
llvm.nvvm.tld4.b.2d.v4f32.f32
llvm.nvvm.tld4.b.2d.v4s32.f32
llvm.nvvm.tld4.b.2d.v4u32.f32
llvm.nvvm.tld4.g.2d.v4f32.f32
llvm.nvvm.tld4.g.2d.v4s32.f32
llvm.nvvm.tld4.g.2d.v4u32.f32
llvm.nvvm.tld4.r.2d.v4f32.f32
llvm.nvvm.tld4.r.2d.v4s32.f32
llvm.nvvm.tld4.r.2d.v4u32.f32
llvm.nvvm.tld4.unified.a.2d.v4f32.f32
llvm.nvvm.tld4.unified.a.2d.v4s32.f32
llvm.nvvm.tld4.unified.a.2d.v4u32.f32
llvm.nvvm.tld4.unified.b.2d.v4f32.f32
llvm.nvvm.tld4.unified.b.2d.v4s32.f32
llvm.nvvm.tld4.unified.b.2d.v4u32.f32
llvm.nvvm.tld4.unified.g.2d.v4f32.f32
llvm.nvvm.tld4.unified.g.2d.v4s32.f32
llvm.nvvm.tld4.unified.g.2d.v4u32.f32
llvm.nvvm.tld4.unified.r.2d.v4f32.f32
llvm.nvvm.tld4.unified.r.2d.v4s32.f32
llvm.nvvm.tld4.unified.r.2d.v4u32.f32
llvm.nvvm.trunc.d
llvm.nvvm.trunc.f
llvm.nvvm.trunc.ftz.f
llvm.nvvm.txq.array.size
llvm.nvvm.txq.channel.data.type
llvm.nvvm.txq.channel.order
llvm.nvvm.txq.depth
llvm.nvvm.txq.height
llvm.nvvm.txq.num.mipmap.levels
llvm.nvvm.txq.num.samples
llvm.nvvm.txq.width
llvm.nvvm.ui2d.rm
llvm.nvvm.ui2d.rn
llvm.nvvm.ui2d.rp
llvm.nvvm.ui2d.rz
llvm.nvvm.ui2f.rm
llvm.nvvm.ui2f.rn
llvm.nvvm.ui2f.rp
llvm.nvvm.ui2f.rz
llvm.nvvm.ull2d.rm
llvm.nvvm.ull2d.rn
llvm.nvvm.ull2d.rp
llvm.nvvm.ull2d.rz
llvm.nvvm.ull2f.rm
llvm.nvvm.ull2f.rn
llvm.nvvm.ull2f.rp
llvm.nvvm.ull2f.rz
llvm.nvvm.vote.all
llvm.nvvm.vote.all.sync
llvm.nvvm.vote.any
llvm.nvvm.vote.any.sync
llvm.nvvm.vote.ballot
llvm.nvvm.vote.ballot.sync
llvm.nvvm.vote.uni
llvm.nvvm.vote.uni.sync
llvm.nvvm.wmma.m16n16k16.load.a.col.f16
llvm.nvvm.wmma.m16n16k16.load.a.col.s8
llvm.nvvm.wmma.m16n16k16.load.a.col.stride.f16
llvm.nvvm.wmma.m16n16k16.load.a.col.stride.s8
llvm.nvvm.wmma.m16n16k16.load.a.col.stride.u8
llvm.nvvm.wmma.m16n16k16.load.a.col.u8
llvm.nvvm.wmma.m16n16k16.load.a.row.f16
llvm.nvvm.wmma.m16n16k16.load.a.row.s8
llvm.nvvm.wmma.m16n16k16.load.a.row.stride.f16
llvm.nvvm.wmma.m16n16k16.load.a.row.stride.s8
llvm.nvvm.wmma.m16n16k16.load.a.row.stride.u8
llvm.nvvm.wmma.m16n16k16.load.a.row.u8
llvm.nvvm.wmma.m16n16k16.load.b.col.f16
llvm.nvvm.wmma.m16n16k16.load.b.col.s8
llvm.nvvm.wmma.m16n16k16.load.b.col.stride.f16
llvm.nvvm.wmma.m16n16k16.load.b.col.stride.s8
llvm.nvvm.wmma.m16n16k16.load.b.col.stride.u8
llvm.nvvm.wmma.m16n16k16.load.b.col.u8
llvm.nvvm.wmma.m16n16k16.load.b.row.f16
llvm.nvvm.wmma.m16n16k16.load.b.row.s8
llvm.nvvm.wmma.m16n16k16.load.b.row.stride.f16
llvm.nvvm.wmma.m16n16k16.load.b.row.stride.s8
llvm.nvvm.wmma.m16n16k16.load.b.row.stride.u8
llvm.nvvm.wmma.m16n16k16.load.b.row.u8
llvm.nvvm.wmma.m16n16k16.load.c.col.f16
llvm.nvvm.wmma.m16n16k16.load.c.col.f32
llvm.nvvm.wmma.m16n16k16.load.c.col.s32
llvm.nvvm.wmma.m16n16k16.load.c.col.stride.f16
llvm.nvvm.wmma.m16n16k16.load.c.col.stride.f32
llvm.nvvm.wmma.m16n16k16.load.c.col.stride.s32
llvm.nvvm.wmma.m16n16k16.load.c.row.f16
llvm.nvvm.wmma.m16n16k16.load.c.row.f32
llvm.nvvm.wmma.m16n16k16.load.c.row.s32
llvm.nvvm.wmma.m16n16k16.load.c.row.stride.f16
llvm.nvvm.wmma.m16n16k16.load.c.row.stride.f32
llvm.nvvm.wmma.m16n16k16.load.c.row.stride.s32
llvm.nvvm.wmma.m16n16k16.mma.col.col.f16.f16
llvm.nvvm.wmma.m16n16k16.mma.col.col.f16.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.f16.f32
llvm.nvvm.wmma.m16n16k16.mma.col.col.f16.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.f32.f16
llvm.nvvm.wmma.m16n16k16.mma.col.col.f32.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.f32.f32
llvm.nvvm.wmma.m16n16k16.mma.col.col.f32.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.s8
llvm.nvvm.wmma.m16n16k16.mma.col.col.s8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.u8
llvm.nvvm.wmma.m16n16k16.mma.col.col.u8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.f16.f16
llvm.nvvm.wmma.m16n16k16.mma.col.row.f16.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.f16.f32
llvm.nvvm.wmma.m16n16k16.mma.col.row.f16.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.f32.f16
llvm.nvvm.wmma.m16n16k16.mma.col.row.f32.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.f32.f32
llvm.nvvm.wmma.m16n16k16.mma.col.row.f32.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.s8
llvm.nvvm.wmma.m16n16k16.mma.col.row.s8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.u8
llvm.nvvm.wmma.m16n16k16.mma.col.row.u8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.f16.f16
llvm.nvvm.wmma.m16n16k16.mma.row.col.f16.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.f16.f32
llvm.nvvm.wmma.m16n16k16.mma.row.col.f16.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.f32.f16
llvm.nvvm.wmma.m16n16k16.mma.row.col.f32.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.f32.f32
llvm.nvvm.wmma.m16n16k16.mma.row.col.f32.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.s8
llvm.nvvm.wmma.m16n16k16.mma.row.col.s8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.u8
llvm.nvvm.wmma.m16n16k16.mma.row.col.u8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.f16.f16
llvm.nvvm.wmma.m16n16k16.mma.row.row.f16.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.f16.f32
llvm.nvvm.wmma.m16n16k16.mma.row.row.f16.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.f32.f16
llvm.nvvm.wmma.m16n16k16.mma.row.row.f32.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.f32.f32
llvm.nvvm.wmma.m16n16k16.mma.row.row.f32.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.s8
llvm.nvvm.wmma.m16n16k16.mma.row.row.s8.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.u8
llvm.nvvm.wmma.m16n16k16.mma.row.row.u8.satfinite
llvm.nvvm.wmma.m16n16k16.store.d.col.f16
llvm.nvvm.wmma.m16n16k16.store.d.col.f32
llvm.nvvm.wmma.m16n16k16.store.d.col.s32
llvm.nvvm.wmma.m16n16k16.store.d.col.stride.f16
llvm.nvvm.wmma.m16n16k16.store.d.col.stride.f32
llvm.nvvm.wmma.m16n16k16.store.d.col.stride.s32
llvm.nvvm.wmma.m16n16k16.store.d.row.f16
llvm.nvvm.wmma.m16n16k16.store.d.row.f32
llvm.nvvm.wmma.m16n16k16.store.d.row.s32
llvm.nvvm.wmma.m16n16k16.store.d.row.stride.f16
llvm.nvvm.wmma.m16n16k16.store.d.row.stride.f32
llvm.nvvm.wmma.m16n16k16.store.d.row.stride.s32
llvm.nvvm.wmma.m32n8k16.load.a.col.f16
llvm.nvvm.wmma.m32n8k16.load.a.col.s8
llvm.nvvm.wmma.m32n8k16.load.a.col.stride.f16
llvm.nvvm.wmma.m32n8k16.load.a.col.stride.s8
llvm.nvvm.wmma.m32n8k16.load.a.col.stride.u8
llvm.nvvm.wmma.m32n8k16.load.a.col.u8
llvm.nvvm.wmma.m32n8k16.load.a.row.f16
llvm.nvvm.wmma.m32n8k16.load.a.row.s8
llvm.nvvm.wmma.m32n8k16.load.a.row.stride.f16
llvm.nvvm.wmma.m32n8k16.load.a.row.stride.s8
llvm.nvvm.wmma.m32n8k16.load.a.row.stride.u8
llvm.nvvm.wmma.m32n8k16.load.a.row.u8
llvm.nvvm.wmma.m32n8k16.load.b.col.f16
llvm.nvvm.wmma.m32n8k16.load.b.col.s8
llvm.nvvm.wmma.m32n8k16.load.b.col.stride.f16
llvm.nvvm.wmma.m32n8k16.load.b.col.stride.s8
llvm.nvvm.wmma.m32n8k16.load.b.col.stride.u8
llvm.nvvm.wmma.m32n8k16.load.b.col.u8
llvm.nvvm.wmma.m32n8k16.load.b.row.f16
llvm.nvvm.wmma.m32n8k16.load.b.row.s8
llvm.nvvm.wmma.m32n8k16.load.b.row.stride.f16
llvm.nvvm.wmma.m32n8k16.load.b.row.stride.s8
llvm.nvvm.wmma.m32n8k16.load.b.row.stride.u8
llvm.nvvm.wmma.m32n8k16.load.b.row.u8
llvm.nvvm.wmma.m32n8k16.load.c.col.f16
llvm.nvvm.wmma.m32n8k16.load.c.col.f32
llvm.nvvm.wmma.m32n8k16.load.c.col.s32
llvm.nvvm.wmma.m32n8k16.load.c.col.stride.f16
llvm.nvvm.wmma.m32n8k16.load.c.col.stride.f32
llvm.nvvm.wmma.m32n8k16.load.c.col.stride.s32
llvm.nvvm.wmma.m32n8k16.load.c.row.f16
llvm.nvvm.wmma.m32n8k16.load.c.row.f32
llvm.nvvm.wmma.m32n8k16.load.c.row.s32
llvm.nvvm.wmma.m32n8k16.load.c.row.stride.f16
llvm.nvvm.wmma.m32n8k16.load.c.row.stride.f32
llvm.nvvm.wmma.m32n8k16.load.c.row.stride.s32
llvm.nvvm.wmma.m32n8k16.mma.col.col.f16.f16
llvm.nvvm.wmma.m32n8k16.mma.col.col.f16.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.f16.f32
llvm.nvvm.wmma.m32n8k16.mma.col.col.f16.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.f32.f16
llvm.nvvm.wmma.m32n8k16.mma.col.col.f32.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.f32.f32
llvm.nvvm.wmma.m32n8k16.mma.col.col.f32.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.s8
llvm.nvvm.wmma.m32n8k16.mma.col.col.s8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.u8
llvm.nvvm.wmma.m32n8k16.mma.col.col.u8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.f16.f16
llvm.nvvm.wmma.m32n8k16.mma.col.row.f16.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.f16.f32
llvm.nvvm.wmma.m32n8k16.mma.col.row.f16.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.f32.f16
llvm.nvvm.wmma.m32n8k16.mma.col.row.f32.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.f32.f32
llvm.nvvm.wmma.m32n8k16.mma.col.row.f32.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.s8
llvm.nvvm.wmma.m32n8k16.mma.col.row.s8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.u8
llvm.nvvm.wmma.m32n8k16.mma.col.row.u8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.f16.f16
llvm.nvvm.wmma.m32n8k16.mma.row.col.f16.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.f16.f32
llvm.nvvm.wmma.m32n8k16.mma.row.col.f16.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.f32.f16
llvm.nvvm.wmma.m32n8k16.mma.row.col.f32.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.f32.f32
llvm.nvvm.wmma.m32n8k16.mma.row.col.f32.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.s8
llvm.nvvm.wmma.m32n8k16.mma.row.col.s8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.u8
llvm.nvvm.wmma.m32n8k16.mma.row.col.u8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.f16.f16
llvm.nvvm.wmma.m32n8k16.mma.row.row.f16.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.f16.f32
llvm.nvvm.wmma.m32n8k16.mma.row.row.f16.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.f32.f16
llvm.nvvm.wmma.m32n8k16.mma.row.row.f32.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.f32.f32
llvm.nvvm.wmma.m32n8k16.mma.row.row.f32.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.s8
llvm.nvvm.wmma.m32n8k16.mma.row.row.s8.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.u8
llvm.nvvm.wmma.m32n8k16.mma.row.row.u8.satfinite
llvm.nvvm.wmma.m32n8k16.store.d.col.f16
llvm.nvvm.wmma.m32n8k16.store.d.col.f32
llvm.nvvm.wmma.m32n8k16.store.d.col.s32
llvm.nvvm.wmma.m32n8k16.store.d.col.stride.f16
llvm.nvvm.wmma.m32n8k16.store.d.col.stride.f32
llvm.nvvm.wmma.m32n8k16.store.d.col.stride.s32
llvm.nvvm.wmma.m32n8k16.store.d.row.f16
llvm.nvvm.wmma.m32n8k16.store.d.row.f32
llvm.nvvm.wmma.m32n8k16.store.d.row.s32
llvm.nvvm.wmma.m32n8k16.store.d.row.stride.f16
llvm.nvvm.wmma.m32n8k16.store.d.row.stride.f32
llvm.nvvm.wmma.m32n8k16.store.d.row.stride.s32
llvm.nvvm.wmma.m8n32k16.load.a.col.f16
llvm.nvvm.wmma.m8n32k16.load.a.col.s8
llvm.nvvm.wmma.m8n32k16.load.a.col.stride.f16
llvm.nvvm.wmma.m8n32k16.load.a.col.stride.s8
llvm.nvvm.wmma.m8n32k16.load.a.col.stride.u8
llvm.nvvm.wmma.m8n32k16.load.a.col.u8
llvm.nvvm.wmma.m8n32k16.load.a.row.f16
llvm.nvvm.wmma.m8n32k16.load.a.row.s8
llvm.nvvm.wmma.m8n32k16.load.a.row.stride.f16
llvm.nvvm.wmma.m8n32k16.load.a.row.stride.s8
llvm.nvvm.wmma.m8n32k16.load.a.row.stride.u8
llvm.nvvm.wmma.m8n32k16.load.a.row.u8
llvm.nvvm.wmma.m8n32k16.load.b.col.f16
llvm.nvvm.wmma.m8n32k16.load.b.col.s8
llvm.nvvm.wmma.m8n32k16.load.b.col.stride.f16
llvm.nvvm.wmma.m8n32k16.load.b.col.stride.s8
llvm.nvvm.wmma.m8n32k16.load.b.col.stride.u8
llvm.nvvm.wmma.m8n32k16.load.b.col.u8
llvm.nvvm.wmma.m8n32k16.load.b.row.f16
llvm.nvvm.wmma.m8n32k16.load.b.row.s8
llvm.nvvm.wmma.m8n32k16.load.b.row.stride.f16
llvm.nvvm.wmma.m8n32k16.load.b.row.stride.s8
llvm.nvvm.wmma.m8n32k16.load.b.row.stride.u8
llvm.nvvm.wmma.m8n32k16.load.b.row.u8
llvm.nvvm.wmma.m8n32k16.load.c.col.f16
llvm.nvvm.wmma.m8n32k16.load.c.col.f32
llvm.nvvm.wmma.m8n32k16.load.c.col.s32
llvm.nvvm.wmma.m8n32k16.load.c.col.stride.f16
llvm.nvvm.wmma.m8n32k16.load.c.col.stride.f32
llvm.nvvm.wmma.m8n32k16.load.c.col.stride.s32
llvm.nvvm.wmma.m8n32k16.load.c.row.f16
llvm.nvvm.wmma.m8n32k16.load.c.row.f32
llvm.nvvm.wmma.m8n32k16.load.c.row.s32
llvm.nvvm.wmma.m8n32k16.load.c.row.stride.f16
llvm.nvvm.wmma.m8n32k16.load.c.row.stride.f32
llvm.nvvm.wmma.m8n32k16.load.c.row.stride.s32
llvm.nvvm.wmma.m8n32k16.mma.col.col.f16.f16
llvm.nvvm.wmma.m8n32k16.mma.col.col.f16.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.f16.f32
llvm.nvvm.wmma.m8n32k16.mma.col.col.f16.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.f32.f16
llvm.nvvm.wmma.m8n32k16.mma.col.col.f32.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.f32.f32
llvm.nvvm.wmma.m8n32k16.mma.col.col.f32.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.s8
llvm.nvvm.wmma.m8n32k16.mma.col.col.s8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.u8
llvm.nvvm.wmma.m8n32k16.mma.col.col.u8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.f16.f16
llvm.nvvm.wmma.m8n32k16.mma.col.row.f16.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.f16.f32
llvm.nvvm.wmma.m8n32k16.mma.col.row.f16.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.f32.f16
llvm.nvvm.wmma.m8n32k16.mma.col.row.f32.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.f32.f32
llvm.nvvm.wmma.m8n32k16.mma.col.row.f32.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.s8
llvm.nvvm.wmma.m8n32k16.mma.col.row.s8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.u8
llvm.nvvm.wmma.m8n32k16.mma.col.row.u8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.f16.f16
llvm.nvvm.wmma.m8n32k16.mma.row.col.f16.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.f16.f32
llvm.nvvm.wmma.m8n32k16.mma.row.col.f16.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.f32.f16
llvm.nvvm.wmma.m8n32k16.mma.row.col.f32.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.f32.f32
llvm.nvvm.wmma.m8n32k16.mma.row.col.f32.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.s8
llvm.nvvm.wmma.m8n32k16.mma.row.col.s8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.u8
llvm.nvvm.wmma.m8n32k16.mma.row.col.u8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.f16.f16
llvm.nvvm.wmma.m8n32k16.mma.row.row.f16.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.f16.f32
llvm.nvvm.wmma.m8n32k16.mma.row.row.f16.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.f32.f16
llvm.nvvm.wmma.m8n32k16.mma.row.row.f32.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.f32.f32
llvm.nvvm.wmma.m8n32k16.mma.row.row.f32.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.s8
llvm.nvvm.wmma.m8n32k16.mma.row.row.s8.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.u8
llvm.nvvm.wmma.m8n32k16.mma.row.row.u8.satfinite
llvm.nvvm.wmma.m8n32k16.store.d.col.f16
llvm.nvvm.wmma.m8n32k16.store.d.col.f32
llvm.nvvm.wmma.m8n32k16.store.d.col.s32
llvm.nvvm.wmma.m8n32k16.store.d.col.stride.f16
llvm.nvvm.wmma.m8n32k16.store.d.col.stride.f32
llvm.nvvm.wmma.m8n32k16.store.d.col.stride.s32
llvm.nvvm.wmma.m8n32k16.store.d.row.f16
llvm.nvvm.wmma.m8n32k16.store.d.row.f32
llvm.nvvm.wmma.m8n32k16.store.d.row.s32
llvm.nvvm.wmma.m8n32k16.store.d.row.stride.f16
llvm.nvvm.wmma.m8n32k16.store.d.row.stride.f32
llvm.nvvm.wmma.m8n32k16.store.d.row.stride.s32
llvm.nvvm.wmma.m8n8k128.load.a.row.b1
llvm.nvvm.wmma.m8n8k128.load.a.row.stride.b1
llvm.nvvm.wmma.m8n8k128.load.b.col.b1
llvm.nvvm.wmma.m8n8k128.load.b.col.stride.b1
llvm.nvvm.wmma.m8n8k128.load.c.col.s32
llvm.nvvm.wmma.m8n8k128.load.c.col.stride.s32
llvm.nvvm.wmma.m8n8k128.load.c.row.s32
llvm.nvvm.wmma.m8n8k128.load.c.row.stride.s32
llvm.nvvm.wmma.m8n8k128.mma.row.col.b1
llvm.nvvm.wmma.m8n8k128.store.d.col.s32
llvm.nvvm.wmma.m8n8k128.store.d.col.stride.s32
llvm.nvvm.wmma.m8n8k128.store.d.row.s32
llvm.nvvm.wmma.m8n8k128.store.d.row.stride.s32
llvm.nvvm.wmma.m8n8k32.load.a.row.s4
llvm.nvvm.wmma.m8n8k32.load.a.row.stride.s4
llvm.nvvm.wmma.m8n8k32.load.a.row.stride.u4
llvm.nvvm.wmma.m8n8k32.load.a.row.u4
llvm.nvvm.wmma.m8n8k32.load.b.col.s4
llvm.nvvm.wmma.m8n8k32.load.b.col.stride.s4
llvm.nvvm.wmma.m8n8k32.load.b.col.stride.u4
llvm.nvvm.wmma.m8n8k32.load.b.col.u4
llvm.nvvm.wmma.m8n8k32.load.c.col.s32
llvm.nvvm.wmma.m8n8k32.load.c.col.stride.s32
llvm.nvvm.wmma.m8n8k32.load.c.row.s32
llvm.nvvm.wmma.m8n8k32.load.c.row.stride.s32
llvm.nvvm.wmma.m8n8k32.mma.row.col.s4
llvm.nvvm.wmma.m8n8k32.mma.row.col.s4.satfinite
llvm.nvvm.wmma.m8n8k32.mma.row.col.u4
llvm.nvvm.wmma.m8n8k32.mma.row.col.u4.satfinite
llvm.nvvm.wmma.m8n8k32.store.d.col.s32
llvm.nvvm.wmma.m8n8k32.store.d.col.stride.s32
llvm.nvvm.wmma.m8n8k32.store.d.row.s32
llvm.nvvm.wmma.m8n8k32.store.d.row.stride.s32
llvm.ppc.addf128.round.to.odd
llvm.ppc.altivec.crypto.vcipher
llvm.ppc.altivec.crypto.vcipherlast
llvm.ppc.altivec.crypto.vncipher
llvm.ppc.altivec.crypto.vncipherlast
llvm.ppc.altivec.crypto.vpermxor
llvm.ppc.altivec.crypto.vpmsumb
llvm.ppc.altivec.crypto.vpmsumd
llvm.ppc.altivec.crypto.vpmsumh
llvm.ppc.altivec.crypto.vpmsumw
llvm.ppc.altivec.crypto.vsbox
llvm.ppc.altivec.crypto.vshasigmad
llvm.ppc.altivec.crypto.vshasigmaw
llvm.ppc.altivec.dss
llvm.ppc.altivec.dssall
llvm.ppc.altivec.dst
llvm.ppc.altivec.dstst
llvm.ppc.altivec.dststt
llvm.ppc.altivec.dstt
llvm.ppc.altivec.lvebx
llvm.ppc.altivec.lvehx
llvm.ppc.altivec.lvewx
llvm.ppc.altivec.lvsl
llvm.ppc.altivec.lvsr
llvm.ppc.altivec.lvx
llvm.ppc.altivec.lvxl
llvm.ppc.altivec.mfvscr
llvm.ppc.altivec.mtvscr
llvm.ppc.altivec.mtvsrbm
llvm.ppc.altivec.mtvsrdm
llvm.ppc.altivec.mtvsrhm
llvm.ppc.altivec.mtvsrqm
llvm.ppc.altivec.mtvsrwm
llvm.ppc.altivec.stvebx
llvm.ppc.altivec.stvehx
llvm.ppc.altivec.stvewx
llvm.ppc.altivec.stvx
llvm.ppc.altivec.stvxl
llvm.ppc.altivec.vabsdub
llvm.ppc.altivec.vabsduh
llvm.ppc.altivec.vabsduw
llvm.ppc.altivec.vaddcuq
llvm.ppc.altivec.vaddcuw
llvm.ppc.altivec.vaddecuq
llvm.ppc.altivec.vaddeuqm
llvm.ppc.altivec.vaddsbs
llvm.ppc.altivec.vaddshs
llvm.ppc.altivec.vaddsws
llvm.ppc.altivec.vaddubs
llvm.ppc.altivec.vadduhs
llvm.ppc.altivec.vadduws
llvm.ppc.altivec.vavgsb
llvm.ppc.altivec.vavgsh
llvm.ppc.altivec.vavgsw
llvm.ppc.altivec.vavgub
llvm.ppc.altivec.vavguh
llvm.ppc.altivec.vavguw
llvm.ppc.altivec.vbpermq
llvm.ppc.altivec.vcfsx
llvm.ppc.altivec.vcfuged
llvm.ppc.altivec.vcfux
llvm.ppc.altivec.vclrlb
llvm.ppc.altivec.vclrrb
llvm.ppc.altivec.vclzdm
llvm.ppc.altivec.vclzlsbb
llvm.ppc.altivec.vcmpbfp
llvm.ppc.altivec.vcmpbfp.p
llvm.ppc.altivec.vcmpeqfp
llvm.ppc.altivec.vcmpeqfp.p
llvm.ppc.altivec.vcmpequb
llvm.ppc.altivec.vcmpequb.p
llvm.ppc.altivec.vcmpequd
llvm.ppc.altivec.vcmpequd.p
llvm.ppc.altivec.vcmpequh
llvm.ppc.altivec.vcmpequh.p
llvm.ppc.altivec.vcmpequq
llvm.ppc.altivec.vcmpequq.p
llvm.ppc.altivec.vcmpequw
llvm.ppc.altivec.vcmpequw.p
llvm.ppc.altivec.vcmpgefp
llvm.ppc.altivec.vcmpgefp.p
llvm.ppc.altivec.vcmpgtfp
llvm.ppc.altivec.vcmpgtfp.p
llvm.ppc.altivec.vcmpgtsb
llvm.ppc.altivec.vcmpgtsb.p
llvm.ppc.altivec.vcmpgtsd
llvm.ppc.altivec.vcmpgtsd.p
llvm.ppc.altivec.vcmpgtsh
llvm.ppc.altivec.vcmpgtsh.p
llvm.ppc.altivec.vcmpgtsq
llvm.ppc.altivec.vcmpgtsq.p
llvm.ppc.altivec.vcmpgtsw
llvm.ppc.altivec.vcmpgtsw.p
llvm.ppc.altivec.vcmpgtub
llvm.ppc.altivec.vcmpgtub.p
llvm.ppc.altivec.vcmpgtud
llvm.ppc.altivec.vcmpgtud.p
llvm.ppc.altivec.vcmpgtuh
llvm.ppc.altivec.vcmpgtuh.p
llvm.ppc.altivec.vcmpgtuq
llvm.ppc.altivec.vcmpgtuq.p
llvm.ppc.altivec.vcmpgtuw
llvm.ppc.altivec.vcmpgtuw.p
llvm.ppc.altivec.vcmpneb
llvm.ppc.altivec.vcmpneb.p
llvm.ppc.altivec.vcmpneh
llvm.ppc.altivec.vcmpneh.p
llvm.ppc.altivec.vcmpnew
llvm.ppc.altivec.vcmpnew.p
llvm.ppc.altivec.vcmpnezb
llvm.ppc.altivec.vcmpnezb.p
llvm.ppc.altivec.vcmpnezh
llvm.ppc.altivec.vcmpnezh.p
llvm.ppc.altivec.vcmpnezw
llvm.ppc.altivec.vcmpnezw.p
llvm.ppc.altivec.vcntmbb
llvm.ppc.altivec.vcntmbd
llvm.ppc.altivec.vcntmbh
llvm.ppc.altivec.vcntmbw
llvm.ppc.altivec.vctsxs
llvm.ppc.altivec.vctuxs
llvm.ppc.altivec.vctzdm
llvm.ppc.altivec.vctzlsbb
llvm.ppc.altivec.vdivesd
llvm.ppc.altivec.vdivesq
llvm.ppc.altivec.vdivesw
llvm.ppc.altivec.vdiveud
llvm.ppc.altivec.vdiveuq
llvm.ppc.altivec.vdiveuw
llvm.ppc.altivec.vexpandbm
llvm.ppc.altivec.vexpanddm
llvm.ppc.altivec.vexpandhm
llvm.ppc.altivec.vexpandqm
llvm.ppc.altivec.vexpandwm
llvm.ppc.altivec.vexptefp
llvm.ppc.altivec.vextddvlx
llvm.ppc.altivec.vextddvrx
llvm.ppc.altivec.vextdubvlx
llvm.ppc.altivec.vextdubvrx
llvm.ppc.altivec.vextduhvlx
llvm.ppc.altivec.vextduhvrx
llvm.ppc.altivec.vextduwvlx
llvm.ppc.altivec.vextduwvrx
llvm.ppc.altivec.vextractbm
llvm.ppc.altivec.vextractdm
llvm.ppc.altivec.vextracthm
llvm.ppc.altivec.vextractqm
llvm.ppc.altivec.vextractwm
llvm.ppc.altivec.vextsb2d
llvm.ppc.altivec.vextsb2w
llvm.ppc.altivec.vextsd2q
llvm.ppc.altivec.vextsh2d
llvm.ppc.altivec.vextsh2w
llvm.ppc.altivec.vextsw2d
llvm.ppc.altivec.vgbbd
llvm.ppc.altivec.vgnb
llvm.ppc.altivec.vinsblx
llvm.ppc.altivec.vinsbrx
llvm.ppc.altivec.vinsbvlx
llvm.ppc.altivec.vinsbvrx
llvm.ppc.altivec.vinsd
llvm.ppc.altivec.vinsdlx
llvm.ppc.altivec.vinsdrx
llvm.ppc.altivec.vinshlx
llvm.ppc.altivec.vinshrx
llvm.ppc.altivec.vinshvlx
llvm.ppc.altivec.vinshvrx
llvm.ppc.altivec.vinsw
llvm.ppc.altivec.vinswlx
llvm.ppc.altivec.vinswrx
llvm.ppc.altivec.vinswvlx
llvm.ppc.altivec.vinswvrx
llvm.ppc.altivec.vlogefp
llvm.ppc.altivec.vmaddfp
llvm.ppc.altivec.vmaxfp
llvm.ppc.altivec.vmaxsb
llvm.ppc.altivec.vmaxsd
llvm.ppc.altivec.vmaxsh
llvm.ppc.altivec.vmaxsw
llvm.ppc.altivec.vmaxub
llvm.ppc.altivec.vmaxud
llvm.ppc.altivec.vmaxuh
llvm.ppc.altivec.vmaxuw
llvm.ppc.altivec.vmhaddshs
llvm.ppc.altivec.vmhraddshs
llvm.ppc.altivec.vminfp
llvm.ppc.altivec.vminsb
llvm.ppc.altivec.vminsd
llvm.ppc.altivec.vminsh
llvm.ppc.altivec.vminsw
llvm.ppc.altivec.vminub
llvm.ppc.altivec.vminud
llvm.ppc.altivec.vminuh
llvm.ppc.altivec.vminuw
llvm.ppc.altivec.vmladduhm
llvm.ppc.altivec.vmsumcud
llvm.ppc.altivec.vmsummbm
llvm.ppc.altivec.vmsumshm
llvm.ppc.altivec.vmsumshs
llvm.ppc.altivec.vmsumubm
llvm.ppc.altivec.vmsumudm
llvm.ppc.altivec.vmsumuhm
llvm.ppc.altivec.vmsumuhs
llvm.ppc.altivec.vmulesb
llvm.ppc.altivec.vmulesd
llvm.ppc.altivec.vmulesh
llvm.ppc.altivec.vmulesw
llvm.ppc.altivec.vmuleub
llvm.ppc.altivec.vmuleud
llvm.ppc.altivec.vmuleuh
llvm.ppc.altivec.vmuleuw
llvm.ppc.altivec.vmulhsd
llvm.ppc.altivec.vmulhsw
llvm.ppc.altivec.vmulhud
llvm.ppc.altivec.vmulhuw
llvm.ppc.altivec.vmulosb
llvm.ppc.altivec.vmulosd
llvm.ppc.altivec.vmulosh
llvm.ppc.altivec.vmulosw
llvm.ppc.altivec.vmuloub
llvm.ppc.altivec.vmuloud
llvm.ppc.altivec.vmulouh
llvm.ppc.altivec.vmulouw
llvm.ppc.altivec.vnmsubfp
llvm.ppc.altivec.vpdepd
llvm.ppc.altivec.vperm
llvm.ppc.altivec.vpextd
llvm.ppc.altivec.vpkpx
llvm.ppc.altivec.vpksdss
llvm.ppc.altivec.vpksdus
llvm.ppc.altivec.vpkshss
llvm.ppc.altivec.vpkshus
llvm.ppc.altivec.vpkswss
llvm.ppc.altivec.vpkswus
llvm.ppc.altivec.vpkudus
llvm.ppc.altivec.vpkuhus
llvm.ppc.altivec.vpkuwus
llvm.ppc.altivec.vprtybd
llvm.ppc.altivec.vprtybq
llvm.ppc.altivec.vprtybw
llvm.ppc.altivec.vrefp
llvm.ppc.altivec.vrfim
llvm.ppc.altivec.vrfin
llvm.ppc.altivec.vrfip
llvm.ppc.altivec.vrfiz
llvm.ppc.altivec.vrlb
llvm.ppc.altivec.vrld
llvm.ppc.altivec.vrldmi
llvm.ppc.altivec.vrldnm
llvm.ppc.altivec.vrlh
llvm.ppc.altivec.vrlqmi
llvm.ppc.altivec.vrlqnm
llvm.ppc.altivec.vrlw
llvm.ppc.altivec.vrlwmi
llvm.ppc.altivec.vrlwnm
llvm.ppc.altivec.vrsqrtefp
llvm.ppc.altivec.vsel
llvm.ppc.altivec.vsl
llvm.ppc.altivec.vslb
llvm.ppc.altivec.vsldbi
llvm.ppc.altivec.vslh
llvm.ppc.altivec.vslo
llvm.ppc.altivec.vslv
llvm.ppc.altivec.vslw
llvm.ppc.altivec.vsr
llvm.ppc.altivec.vsrab
llvm.ppc.altivec.vsrah
llvm.ppc.altivec.vsraw
llvm.ppc.altivec.vsrb
llvm.ppc.altivec.vsrdbi
llvm.ppc.altivec.vsrh
llvm.ppc.altivec.vsro
llvm.ppc.altivec.vsrv
llvm.ppc.altivec.vsrw
llvm.ppc.altivec.vstribl
llvm.ppc.altivec.vstribl.p
llvm.ppc.altivec.vstribr
llvm.ppc.altivec.vstribr.p
llvm.ppc.altivec.vstrihl
llvm.ppc.altivec.vstrihl.p
llvm.ppc.altivec.vstrihr
llvm.ppc.altivec.vstrihr.p
llvm.ppc.altivec.vsubcuq
llvm.ppc.altivec.vsubcuw
llvm.ppc.altivec.vsubecuq
llvm.ppc.altivec.vsubeuqm
llvm.ppc.altivec.vsubsbs
llvm.ppc.altivec.vsubshs
llvm.ppc.altivec.vsubsws
llvm.ppc.altivec.vsububs
llvm.ppc.altivec.vsubuhs
llvm.ppc.altivec.vsubuws
llvm.ppc.altivec.vsum2sws
llvm.ppc.altivec.vsum4sbs
llvm.ppc.altivec.vsum4shs
llvm.ppc.altivec.vsum4ubs
llvm.ppc.altivec.vsumsws
llvm.ppc.altivec.vupkhpx
llvm.ppc.altivec.vupkhsb
llvm.ppc.altivec.vupkhsh
llvm.ppc.altivec.vupkhsw
llvm.ppc.altivec.vupklpx
llvm.ppc.altivec.vupklsb
llvm.ppc.altivec.vupklsh
llvm.ppc.altivec.vupklsw
llvm.ppc.bpermd
llvm.ppc.cfence
llvm.ppc.cfuged
llvm.ppc.cntlzdm
llvm.ppc.cnttzdm
llvm.ppc.darn
llvm.ppc.darn32
llvm.ppc.darnraw
llvm.ppc.dcba
llvm.ppc.dcbf
llvm.ppc.dcbfl
llvm.ppc.dcbflp
llvm.ppc.dcbfps
llvm.ppc.dcbi
llvm.ppc.dcbst
llvm.ppc.dcbstps
llvm.ppc.dcbt
llvm.ppc.dcbt.with.hint
llvm.ppc.dcbtst
llvm.ppc.dcbtst.with.hint
llvm.ppc.dcbz
llvm.ppc.dcbzl
llvm.ppc.divde
llvm.ppc.divdeu
llvm.ppc.divf128.round.to.odd
llvm.ppc.divwe
llvm.ppc.divweu
llvm.ppc.eieio
llvm.ppc.fmaf128.round.to.odd
llvm.ppc.get.texasr
llvm.ppc.get.texasru
llvm.ppc.get.tfhar
llvm.ppc.get.tfiar
llvm.ppc.isync
llvm.ppc.lwsync
llvm.ppc.mma.assemble.acc
llvm.ppc.mma.disassemble.acc
llvm.ppc.mma.pmxvbf16ger2
llvm.ppc.mma.pmxvbf16ger2nn
llvm.ppc.mma.pmxvbf16ger2np
llvm.ppc.mma.pmxvbf16ger2pn
llvm.ppc.mma.pmxvbf16ger2pp
llvm.ppc.mma.pmxvf16ger2
llvm.ppc.mma.pmxvf16ger2nn
llvm.ppc.mma.pmxvf16ger2np
llvm.ppc.mma.pmxvf16ger2pn
llvm.ppc.mma.pmxvf16ger2pp
llvm.ppc.mma.pmxvf32ger
llvm.ppc.mma.pmxvf32gernn
llvm.ppc.mma.pmxvf32gernp
llvm.ppc.mma.pmxvf32gerpn
llvm.ppc.mma.pmxvf32gerpp
llvm.ppc.mma.pmxvf64ger
llvm.ppc.mma.pmxvf64gernn
llvm.ppc.mma.pmxvf64gernp
llvm.ppc.mma.pmxvf64gerpn
llvm.ppc.mma.pmxvf64gerpp
llvm.ppc.mma.pmxvi16ger2
llvm.ppc.mma.pmxvi16ger2pp
llvm.ppc.mma.pmxvi16ger2s
llvm.ppc.mma.pmxvi16ger2spp
llvm.ppc.mma.pmxvi4ger8
llvm.ppc.mma.pmxvi4ger8pp
llvm.ppc.mma.pmxvi8ger4
llvm.ppc.mma.pmxvi8ger4pp
llvm.ppc.mma.pmxvi8ger4spp
llvm.ppc.mma.xvbf16ger2
llvm.ppc.mma.xvbf16ger2nn
llvm.ppc.mma.xvbf16ger2np
llvm.ppc.mma.xvbf16ger2pn
llvm.ppc.mma.xvbf16ger2pp
llvm.ppc.mma.xvf16ger2
llvm.ppc.mma.xvf16ger2nn
llvm.ppc.mma.xvf16ger2np
llvm.ppc.mma.xvf16ger2pn
llvm.ppc.mma.xvf16ger2pp
llvm.ppc.mma.xvf32ger
llvm.ppc.mma.xvf32gernn
llvm.ppc.mma.xvf32gernp
llvm.ppc.mma.xvf32gerpn
llvm.ppc.mma.xvf32gerpp
llvm.ppc.mma.xvf64ger
llvm.ppc.mma.xvf64gernn
llvm.ppc.mma.xvf64gernp
llvm.ppc.mma.xvf64gerpn
llvm.ppc.mma.xvf64gerpp
llvm.ppc.mma.xvi16ger2
llvm.ppc.mma.xvi16ger2pp
llvm.ppc.mma.xvi16ger2s
llvm.ppc.mma.xvi16ger2spp
llvm.ppc.mma.xvi4ger8
llvm.ppc.mma.xvi4ger8pp
llvm.ppc.mma.xvi8ger4
llvm.ppc.mma.xvi8ger4pp
llvm.ppc.mma.xvi8ger4spp
llvm.ppc.mma.xxmfacc
llvm.ppc.mma.xxmtacc
llvm.ppc.mma.xxsetaccz
llvm.ppc.mulf128.round.to.odd
llvm.ppc.pdepd
llvm.ppc.pextd
llvm.ppc.popcntb
llvm.ppc.readflm
llvm.ppc.scalar.extract.expq
llvm.ppc.scalar.insert.exp.qp
llvm.ppc.set.texasr
llvm.ppc.set.texasru
llvm.ppc.set.tfhar
llvm.ppc.set.tfiar
llvm.ppc.setflm
llvm.ppc.setrnd
llvm.ppc.sqrtf128.round.to.odd
llvm.ppc.subf128.round.to.odd
llvm.ppc.sync
llvm.ppc.tabort
llvm.ppc.tabortdc
llvm.ppc.tabortdci
llvm.ppc.tabortwc
llvm.ppc.tabortwci
llvm.ppc.tbegin
llvm.ppc.tcheck
llvm.ppc.tend
llvm.ppc.tendall
llvm.ppc.trechkpt
llvm.ppc.treclaim
llvm.ppc.tresume
llvm.ppc.truncf128.round.to.odd
llvm.ppc.tsr
llvm.ppc.tsuspend
llvm.ppc.ttest
llvm.ppc.vsx.assemble.pair
llvm.ppc.vsx.disassemble.pair
llvm.ppc.vsx.lxvd2x
llvm.ppc.vsx.lxvd2x.be
llvm.ppc.vsx.lxvl
llvm.ppc.vsx.lxvll
llvm.ppc.vsx.lxvp
llvm.ppc.vsx.lxvw4x
llvm.ppc.vsx.lxvw4x.be
llvm.ppc.vsx.stxvd2x
llvm.ppc.vsx.stxvd2x.be
llvm.ppc.vsx.stxvl
llvm.ppc.vsx.stxvll
llvm.ppc.vsx.stxvp
llvm.ppc.vsx.stxvw4x
llvm.ppc.vsx.stxvw4x.be
llvm.ppc.vsx.xsmaxdp
llvm.ppc.vsx.xsmindp
llvm.ppc.vsx.xvcmpeqdp
llvm.ppc.vsx.xvcmpeqdp.p
llvm.ppc.vsx.xvcmpeqsp
llvm.ppc.vsx.xvcmpeqsp.p
llvm.ppc.vsx.xvcmpgedp
llvm.ppc.vsx.xvcmpgedp.p
llvm.ppc.vsx.xvcmpgesp
llvm.ppc.vsx.xvcmpgesp.p
llvm.ppc.vsx.xvcmpgtdp
llvm.ppc.vsx.xvcmpgtdp.p
llvm.ppc.vsx.xvcmpgtsp
llvm.ppc.vsx.xvcmpgtsp.p
llvm.ppc.vsx.xvcvbf16spn
llvm.ppc.vsx.xvcvdpsp
llvm.ppc.vsx.xvcvdpsxws
llvm.ppc.vsx.xvcvdpuxws
llvm.ppc.vsx.xvcvhpsp
llvm.ppc.vsx.xvcvspbf16
llvm.ppc.vsx.xvcvspdp
llvm.ppc.vsx.xvcvsphp
llvm.ppc.vsx.xvcvsxdsp
llvm.ppc.vsx.xvcvsxwdp
llvm.ppc.vsx.xvcvuxdsp
llvm.ppc.vsx.xvcvuxwdp
llvm.ppc.vsx.xvdivdp
llvm.ppc.vsx.xvdivsp
llvm.ppc.vsx.xviexpdp
llvm.ppc.vsx.xviexpsp
llvm.ppc.vsx.xvmaxdp
llvm.ppc.vsx.xvmaxsp
llvm.ppc.vsx.xvmindp
llvm.ppc.vsx.xvminsp
llvm.ppc.vsx.xvrdpip
llvm.ppc.vsx.xvredp
llvm.ppc.vsx.xvresp
llvm.ppc.vsx.xvrspip
llvm.ppc.vsx.xvrsqrtedp
llvm.ppc.vsx.xvrsqrtesp
llvm.ppc.vsx.xvtdivdp
llvm.ppc.vsx.xvtdivsp
llvm.ppc.vsx.xvtlsbb
llvm.ppc.vsx.xvtsqrtdp
llvm.ppc.vsx.xvtsqrtsp
llvm.ppc.vsx.xvtstdcdp
llvm.ppc.vsx.xvtstdcsp
llvm.ppc.vsx.xvxexpdp
llvm.ppc.vsx.xvxexpsp
llvm.ppc.vsx.xvxsigdp
llvm.ppc.vsx.xvxsigsp
llvm.ppc.vsx.xxblendvb
llvm.ppc.vsx.xxblendvd
llvm.ppc.vsx.xxblendvh
llvm.ppc.vsx.xxblendvw
llvm.ppc.vsx.xxeval
llvm.ppc.vsx.xxextractuw
llvm.ppc.vsx.xxgenpcvbm
llvm.ppc.vsx.xxgenpcvdm
llvm.ppc.vsx.xxgenpcvhm
llvm.ppc.vsx.xxgenpcvwm
llvm.ppc.vsx.xxinsertw
llvm.ppc.vsx.xxleqv
llvm.ppc.vsx.xxpermx
llvm.r600.cube
llvm.r600.ddx
llvm.r600.ddy
llvm.r600.dot4
llvm.r600.group.barrier
llvm.r600.implicitarg.ptr
llvm.r600.kill
llvm.r600.rat.store.typed
llvm.r600.read.global.size.x
llvm.r600.read.global.size.y
llvm.r600.read.global.size.z
llvm.r600.read.local.size.x
llvm.r600.read.local.size.y
llvm.r600.read.local.size.z
llvm.r600.read.ngroups.x
llvm.r600.read.ngroups.y
llvm.r600.read.ngroups.z
llvm.r600.read.tgid.x
llvm.r600.read.tgid.y
llvm.r600.read.tgid.z
llvm.r600.read.tidig.x
llvm.r600.read.tidig.y
llvm.r600.read.tidig.z
llvm.r600.recipsqrt.clamped
llvm.r600.recipsqrt.ieee
llvm.r600.store.stream.output
llvm.r600.store.swizzle
llvm.r600.tex
llvm.r600.texc
llvm.r600.txb
llvm.r600.txbc
llvm.r600.txf
llvm.r600.txl
llvm.r600.txlc
llvm.r600.txq
llvm.riscv.masked.atomicrmw.add.i32
llvm.riscv.masked.atomicrmw.add.i64
llvm.riscv.masked.atomicrmw.max.i32
llvm.riscv.masked.atomicrmw.max.i64
llvm.riscv.masked.atomicrmw.min.i32
llvm.riscv.masked.atomicrmw.min.i64
llvm.riscv.masked.atomicrmw.nand.i32
llvm.riscv.masked.atomicrmw.nand.i64
llvm.riscv.masked.atomicrmw.sub.i32
llvm.riscv.masked.atomicrmw.sub.i64
llvm.riscv.masked.atomicrmw.umax.i32
llvm.riscv.masked.atomicrmw.umax.i64
llvm.riscv.masked.atomicrmw.umin.i32
llvm.riscv.masked.atomicrmw.umin.i64
llvm.riscv.masked.atomicrmw.xchg.i32
llvm.riscv.masked.atomicrmw.xchg.i64
llvm.riscv.masked.cmpxchg.i32
llvm.riscv.masked.cmpxchg.i64
llvm.riscv.vaadd
llvm.riscv.vaadd.mask
llvm.riscv.vaaddu
llvm.riscv.vaaddu.mask
llvm.riscv.vadc
llvm.riscv.vadd
llvm.riscv.vadd.mask
llvm.riscv.vand
llvm.riscv.vand.mask
llvm.riscv.vasub
llvm.riscv.vasub.mask
llvm.riscv.vasubu
llvm.riscv.vasubu.mask
llvm.riscv.vcompress.mask
llvm.riscv.vdiv
llvm.riscv.vdiv.mask
llvm.riscv.vdivu
llvm.riscv.vdivu.mask
llvm.riscv.vfadd
llvm.riscv.vfadd.mask
llvm.riscv.vfcvt.f.x.v
llvm.riscv.vfcvt.f.x.v.mask
llvm.riscv.vfcvt.f.xu.v
llvm.riscv.vfcvt.f.xu.v.mask
llvm.riscv.vfcvt.rtz.x.f.v
llvm.riscv.vfcvt.rtz.x.f.v.mask
llvm.riscv.vfcvt.rtz.xu.f.v
llvm.riscv.vfcvt.rtz.xu.f.v.mask
llvm.riscv.vfcvt.x.f.v
llvm.riscv.vfcvt.x.f.v.mask
llvm.riscv.vfcvt.xu.f.v
llvm.riscv.vfcvt.xu.f.v.mask
llvm.riscv.vfdiv
llvm.riscv.vfdiv.mask
llvm.riscv.vfirst
llvm.riscv.vfirst.mask
llvm.riscv.vfmacc
llvm.riscv.vfmacc.mask
llvm.riscv.vfmadd
llvm.riscv.vfmadd.mask
llvm.riscv.vfmax
llvm.riscv.vfmax.mask
llvm.riscv.vfmerge
llvm.riscv.vfmin
llvm.riscv.vfmin.mask
llvm.riscv.vfmsac
llvm.riscv.vfmsac.mask
llvm.riscv.vfmsub
llvm.riscv.vfmsub.mask
llvm.riscv.vfmul
llvm.riscv.vfmul.mask
llvm.riscv.vfmv.f.s
llvm.riscv.vfmv.s.f
llvm.riscv.vfmv.v.f
llvm.riscv.vfncvt.f.f.w
llvm.riscv.vfncvt.f.f.w.mask
llvm.riscv.vfncvt.f.x.w
llvm.riscv.vfncvt.f.x.w.mask
llvm.riscv.vfncvt.f.xu.w
llvm.riscv.vfncvt.f.xu.w.mask
llvm.riscv.vfncvt.rod.f.f.w
llvm.riscv.vfncvt.rod.f.f.w.mask
llvm.riscv.vfncvt.rtz.x.f.w
llvm.riscv.vfncvt.rtz.x.f.w.mask
llvm.riscv.vfncvt.rtz.xu.f.w
llvm.riscv.vfncvt.rtz.xu.f.w.mask
llvm.riscv.vfncvt.x.f.w
llvm.riscv.vfncvt.x.f.w.mask
llvm.riscv.vfncvt.xu.f.w
llvm.riscv.vfncvt.xu.f.w.mask
llvm.riscv.vfnmacc
llvm.riscv.vfnmacc.mask
llvm.riscv.vfnmadd
llvm.riscv.vfnmadd.mask
llvm.riscv.vfnmsac
llvm.riscv.vfnmsac.mask
llvm.riscv.vfnmsub
llvm.riscv.vfnmsub.mask
llvm.riscv.vfrdiv
llvm.riscv.vfrdiv.mask
llvm.riscv.vfredmax
llvm.riscv.vfredmax.mask
llvm.riscv.vfredmin
llvm.riscv.vfredmin.mask
llvm.riscv.vfredosum
llvm.riscv.vfredosum.mask
llvm.riscv.vfredsum
llvm.riscv.vfredsum.mask
llvm.riscv.vfrsub
llvm.riscv.vfrsub.mask
llvm.riscv.vfsgnj
llvm.riscv.vfsgnj.mask
llvm.riscv.vfsgnjn
llvm.riscv.vfsgnjn.mask
llvm.riscv.vfsgnjx
llvm.riscv.vfsgnjx.mask
llvm.riscv.vfslide1down
llvm.riscv.vfslide1down.mask
llvm.riscv.vfslide1up
llvm.riscv.vfslide1up.mask
llvm.riscv.vfsub
llvm.riscv.vfsub.mask
llvm.riscv.vfwadd
llvm.riscv.vfwadd.mask
llvm.riscv.vfwadd.w
llvm.riscv.vfwadd.w.mask
llvm.riscv.vfwcvt.f.f.v
llvm.riscv.vfwcvt.f.f.v.mask
llvm.riscv.vfwcvt.f.x.v
llvm.riscv.vfwcvt.f.x.v.mask
llvm.riscv.vfwcvt.f.xu.v
llvm.riscv.vfwcvt.f.xu.v.mask
llvm.riscv.vfwcvt.rtz.x.f.v
llvm.riscv.vfwcvt.rtz.x.f.v.mask
llvm.riscv.vfwcvt.rtz.xu.f.v
llvm.riscv.vfwcvt.rtz.xu.f.v.mask
llvm.riscv.vfwcvt.x.f.v
llvm.riscv.vfwcvt.x.f.v.mask
llvm.riscv.vfwcvt.xu.f.v
llvm.riscv.vfwcvt.xu.f.v.mask
llvm.riscv.vfwmacc
llvm.riscv.vfwmacc.mask
llvm.riscv.vfwmsac
llvm.riscv.vfwmsac.mask
llvm.riscv.vfwmul
llvm.riscv.vfwmul.mask
llvm.riscv.vfwnmacc
llvm.riscv.vfwnmacc.mask
llvm.riscv.vfwnmsac
llvm.riscv.vfwnmsac.mask
llvm.riscv.vfwredosum
llvm.riscv.vfwredosum.mask
llvm.riscv.vfwredsum
llvm.riscv.vfwredsum.mask
llvm.riscv.vfwsub
llvm.riscv.vfwsub.mask
llvm.riscv.vfwsub.w
llvm.riscv.vfwsub.w.mask
llvm.riscv.vid
llvm.riscv.vid.mask
llvm.riscv.viota
llvm.riscv.viota.mask
llvm.riscv.vle
llvm.riscv.vle.mask
llvm.riscv.vleff
llvm.riscv.vleff.mask
llvm.riscv.vlse
llvm.riscv.vlse.mask
llvm.riscv.vlxe
llvm.riscv.vlxe.mask
llvm.riscv.vmacc
llvm.riscv.vmacc.mask
llvm.riscv.vmadc
llvm.riscv.vmadc.carry.in
llvm.riscv.vmadd
llvm.riscv.vmadd.mask
llvm.riscv.vmand
llvm.riscv.vmandnot
llvm.riscv.vmax
llvm.riscv.vmax.mask
llvm.riscv.vmaxu
llvm.riscv.vmaxu.mask
llvm.riscv.vmclr
llvm.riscv.vmerge
llvm.riscv.vmfeq
llvm.riscv.vmfeq.mask
llvm.riscv.vmfge
llvm.riscv.vmfge.mask
llvm.riscv.vmfgt
llvm.riscv.vmfgt.mask
llvm.riscv.vmfle
llvm.riscv.vmfle.mask
llvm.riscv.vmflt
llvm.riscv.vmflt.mask
llvm.riscv.vmfne
llvm.riscv.vmfne.mask
llvm.riscv.vmin
llvm.riscv.vmin.mask
llvm.riscv.vminu
llvm.riscv.vminu.mask
llvm.riscv.vmnand
llvm.riscv.vmnor
llvm.riscv.vmor
llvm.riscv.vmornot
llvm.riscv.vmsbc
llvm.riscv.vmsbc.borrow.in
llvm.riscv.vmsbf
llvm.riscv.vmsbf.mask
llvm.riscv.vmseq
llvm.riscv.vmseq.mask
llvm.riscv.vmset
llvm.riscv.vmsgt
llvm.riscv.vmsgt.mask
llvm.riscv.vmsgtu
llvm.riscv.vmsgtu.mask
llvm.riscv.vmsif
llvm.riscv.vmsif.mask
llvm.riscv.vmsle
llvm.riscv.vmsle.mask
llvm.riscv.vmsleu
llvm.riscv.vmsleu.mask
llvm.riscv.vmslt
llvm.riscv.vmslt.mask
llvm.riscv.vmsltu
llvm.riscv.vmsltu.mask
llvm.riscv.vmsne
llvm.riscv.vmsne.mask
llvm.riscv.vmsof
llvm.riscv.vmsof.mask
llvm.riscv.vmul
llvm.riscv.vmul.mask
llvm.riscv.vmulh
llvm.riscv.vmulh.mask
llvm.riscv.vmulhsu
llvm.riscv.vmulhsu.mask
llvm.riscv.vmulhu
llvm.riscv.vmulhu.mask
llvm.riscv.vmv.s.x
llvm.riscv.vmv.v.v
llvm.riscv.vmv.v.x
llvm.riscv.vmv.x.s
llvm.riscv.vmxnor
llvm.riscv.vmxor
llvm.riscv.vnclip
llvm.riscv.vnclip.mask
llvm.riscv.vnclipu
llvm.riscv.vnclipu.mask
llvm.riscv.vnmsac
llvm.riscv.vnmsac.mask
llvm.riscv.vnmsub
llvm.riscv.vnmsub.mask
llvm.riscv.vnsra
llvm.riscv.vnsra.mask
llvm.riscv.vnsrl
llvm.riscv.vnsrl.mask
llvm.riscv.vor
llvm.riscv.vor.mask
llvm.riscv.vpopc
llvm.riscv.vpopc.mask
llvm.riscv.vredand
llvm.riscv.vredand.mask
llvm.riscv.vredmax
llvm.riscv.vredmax.mask
llvm.riscv.vredmaxu
llvm.riscv.vredmaxu.mask
llvm.riscv.vredmin
llvm.riscv.vredmin.mask
llvm.riscv.vredminu
llvm.riscv.vredminu.mask
llvm.riscv.vredor
llvm.riscv.vredor.mask
llvm.riscv.vredsum
llvm.riscv.vredsum.mask
llvm.riscv.vredxor
llvm.riscv.vredxor.mask
llvm.riscv.vrem
llvm.riscv.vrem.mask
llvm.riscv.vremu
llvm.riscv.vremu.mask
llvm.riscv.vrgather
llvm.riscv.vrgather.mask
llvm.riscv.vrsub
llvm.riscv.vrsub.mask
llvm.riscv.vsadd
llvm.riscv.vsadd.mask
llvm.riscv.vsaddu
llvm.riscv.vsaddu.mask
llvm.riscv.vsbc
llvm.riscv.vse
llvm.riscv.vse.mask
llvm.riscv.vsetvli
llvm.riscv.vsetvlimax
llvm.riscv.vsext
llvm.riscv.vsext.mask
llvm.riscv.vslide1down
llvm.riscv.vslide1down.mask
llvm.riscv.vslide1up
llvm.riscv.vslide1up.mask
llvm.riscv.vslidedown
llvm.riscv.vslidedown.mask
llvm.riscv.vslideup
llvm.riscv.vslideup.mask
llvm.riscv.vsll
llvm.riscv.vsll.mask
llvm.riscv.vsmul
llvm.riscv.vsmul.mask
llvm.riscv.vsra
llvm.riscv.vsra.mask
llvm.riscv.vsrl
llvm.riscv.vsrl.mask
llvm.riscv.vsse
llvm.riscv.vsse.mask
llvm.riscv.vssra
llvm.riscv.vssra.mask
llvm.riscv.vssrl
llvm.riscv.vssrl.mask
llvm.riscv.vssub
llvm.riscv.vssub.mask
llvm.riscv.vssubu
llvm.riscv.vssubu.mask
llvm.riscv.vsub
llvm.riscv.vsub.mask
llvm.riscv.vsuxe
llvm.riscv.vsuxe.mask
llvm.riscv.vsxe
llvm.riscv.vsxe.mask
llvm.riscv.vwadd
llvm.riscv.vwadd.mask
llvm.riscv.vwadd.w
llvm.riscv.vwadd.w.mask
llvm.riscv.vwaddu
llvm.riscv.vwaddu.mask
llvm.riscv.vwaddu.w
llvm.riscv.vwaddu.w.mask
llvm.riscv.vwmacc
llvm.riscv.vwmacc.mask
llvm.riscv.vwmaccsu
llvm.riscv.vwmaccsu.mask
llvm.riscv.vwmaccu
llvm.riscv.vwmaccu.mask
llvm.riscv.vwmaccus
llvm.riscv.vwmaccus.mask
llvm.riscv.vwmul
llvm.riscv.vwmul.mask
llvm.riscv.vwmulsu
llvm.riscv.vwmulsu.mask
llvm.riscv.vwmulu
llvm.riscv.vwmulu.mask
llvm.riscv.vwredsum
llvm.riscv.vwredsum.mask
llvm.riscv.vwredsumu
llvm.riscv.vwredsumu.mask
llvm.riscv.vwsub
llvm.riscv.vwsub.mask
llvm.riscv.vwsub.w
llvm.riscv.vwsub.w.mask
llvm.riscv.vwsubu
llvm.riscv.vwsubu.mask
llvm.riscv.vwsubu.w
llvm.riscv.vwsubu.w.mask
llvm.riscv.vxor
llvm.riscv.vxor.mask
llvm.riscv.vzext
llvm.riscv.vzext.mask
llvm.s390.efpc
llvm.s390.etnd
llvm.s390.lcbb
llvm.s390.ntstg
llvm.s390.ppa.txassist
llvm.s390.sfpc
llvm.s390.tabort
llvm.s390.tbegin
llvm.s390.tbegin.nofloat
llvm.s390.tbeginc
llvm.s390.tdc
llvm.s390.tend
llvm.s390.vaccb
llvm.s390.vacccq
llvm.s390.vaccf
llvm.s390.vaccg
llvm.s390.vacch
llvm.s390.vaccq
llvm.s390.vacq
llvm.s390.vaq
llvm.s390.vavgb
llvm.s390.vavgf
llvm.s390.vavgg
llvm.s390.vavgh
llvm.s390.vavglb
llvm.s390.vavglf
llvm.s390.vavglg
llvm.s390.vavglh
llvm.s390.vbperm
llvm.s390.vceqbs
llvm.s390.vceqfs
llvm.s390.vceqgs
llvm.s390.vceqhs
llvm.s390.vchbs
llvm.s390.vchfs
llvm.s390.vchgs
llvm.s390.vchhs
llvm.s390.vchlbs
llvm.s390.vchlfs
llvm.s390.vchlgs
llvm.s390.vchlhs
llvm.s390.vcksm
llvm.s390.verimb
llvm.s390.verimf
llvm.s390.verimg
llvm.s390.verimh
llvm.s390.verllb
llvm.s390.verllf
llvm.s390.verllg
llvm.s390.verllh
llvm.s390.verllvb
llvm.s390.verllvf
llvm.s390.verllvg
llvm.s390.verllvh
llvm.s390.vfaeb
llvm.s390.vfaebs
llvm.s390.vfaef
llvm.s390.vfaefs
llvm.s390.vfaeh
llvm.s390.vfaehs
llvm.s390.vfaezb
llvm.s390.vfaezbs
llvm.s390.vfaezf
llvm.s390.vfaezfs
llvm.s390.vfaezh
llvm.s390.vfaezhs
llvm.s390.vfcedbs
llvm.s390.vfcesbs
llvm.s390.vfchdbs
llvm.s390.vfchedbs
llvm.s390.vfchesbs
llvm.s390.vfchsbs
llvm.s390.vfeeb
llvm.s390.vfeebs
llvm.s390.vfeef
llvm.s390.vfeefs
llvm.s390.vfeeh
llvm.s390.vfeehs
llvm.s390.vfeezb
llvm.s390.vfeezbs
llvm.s390.vfeezf
llvm.s390.vfeezfs
llvm.s390.vfeezh
llvm.s390.vfeezhs
llvm.s390.vfeneb
llvm.s390.vfenebs
llvm.s390.vfenef
llvm.s390.vfenefs
llvm.s390.vfeneh
llvm.s390.vfenehs
llvm.s390.vfenezb
llvm.s390.vfenezbs
llvm.s390.vfenezf
llvm.s390.vfenezfs
llvm.s390.vfenezh
llvm.s390.vfenezhs
llvm.s390.vfidb
llvm.s390.vfisb
llvm.s390.vfmaxdb
llvm.s390.vfmaxsb
llvm.s390.vfmindb
llvm.s390.vfminsb
llvm.s390.vftcidb
llvm.s390.vftcisb
llvm.s390.vgfmab
llvm.s390.vgfmaf
llvm.s390.vgfmag
llvm.s390.vgfmah
llvm.s390.vgfmb
llvm.s390.vgfmf
llvm.s390.vgfmg
llvm.s390.vgfmh
llvm.s390.vistrb
llvm.s390.vistrbs
llvm.s390.vistrf
llvm.s390.vistrfs
llvm.s390.vistrh
llvm.s390.vistrhs
llvm.s390.vlbb
llvm.s390.vll
llvm.s390.vlrl
llvm.s390.vmaeb
llvm.s390.vmaef
llvm.s390.vmaeh
llvm.s390.vmahb
llvm.s390.vmahf
llvm.s390.vmahh
llvm.s390.vmaleb
llvm.s390.vmalef
llvm.s390.vmaleh
llvm.s390.vmalhb
llvm.s390.vmalhf
llvm.s390.vmalhh
llvm.s390.vmalob
llvm.s390.vmalof
llvm.s390.vmaloh
llvm.s390.vmaob
llvm.s390.vmaof
llvm.s390.vmaoh
llvm.s390.vmeb
llvm.s390.vmef
llvm.s390.vmeh
llvm.s390.vmhb
llvm.s390.vmhf
llvm.s390.vmhh
llvm.s390.vmleb
llvm.s390.vmlef
llvm.s390.vmleh
llvm.s390.vmlhb
llvm.s390.vmlhf
llvm.s390.vmlhh
llvm.s390.vmlob
llvm.s390.vmlof
llvm.s390.vmloh
llvm.s390.vmob
llvm.s390.vmof
llvm.s390.vmoh
llvm.s390.vmslg
llvm.s390.vpdi
llvm.s390.vperm
llvm.s390.vpklsf
llvm.s390.vpklsfs
llvm.s390.vpklsg
llvm.s390.vpklsgs
llvm.s390.vpklsh
llvm.s390.vpklshs
llvm.s390.vpksf
llvm.s390.vpksfs
llvm.s390.vpksg
llvm.s390.vpksgs
llvm.s390.vpksh
llvm.s390.vpkshs
llvm.s390.vsbcbiq
llvm.s390.vsbiq
llvm.s390.vscbib
llvm.s390.vscbif
llvm.s390.vscbig
llvm.s390.vscbih
llvm.s390.vscbiq
llvm.s390.vsl
llvm.s390.vslb
llvm.s390.vsld
llvm.s390.vsldb
llvm.s390.vsq
llvm.s390.vsra
llvm.s390.vsrab
llvm.s390.vsrd
llvm.s390.vsrl
llvm.s390.vsrlb
llvm.s390.vstl
llvm.s390.vstrcb
llvm.s390.vstrcbs
llvm.s390.vstrcf
llvm.s390.vstrcfs
llvm.s390.vstrch
llvm.s390.vstrchs
llvm.s390.vstrczb
llvm.s390.vstrczbs
llvm.s390.vstrczf
llvm.s390.vstrczfs
llvm.s390.vstrczh
llvm.s390.vstrczhs
llvm.s390.vstrl
llvm.s390.vstrsb
llvm.s390.vstrsf
llvm.s390.vstrsh
llvm.s390.vstrszb
llvm.s390.vstrszf
llvm.s390.vstrszh
llvm.s390.vsumb
llvm.s390.vsumgf
llvm.s390.vsumgh
llvm.s390.vsumh
llvm.s390.vsumqf
llvm.s390.vsumqg
llvm.s390.vtm
llvm.s390.vuphb
llvm.s390.vuphf
llvm.s390.vuphh
llvm.s390.vuplb
llvm.s390.vuplf
llvm.s390.vuplhb
llvm.s390.vuplhf
llvm.s390.vuplhh
llvm.s390.vuplhw
llvm.s390.vupllb
llvm.s390.vupllf
llvm.s390.vupllh
llvm.ve.vl.andm.MMM
llvm.ve.vl.andm.mmm
llvm.ve.vl.eqvm.MMM
llvm.ve.vl.eqvm.mmm
llvm.ve.vl.lsv.vvss
llvm.ve.vl.lvm.MMss
llvm.ve.vl.lvm.mmss
llvm.ve.vl.lvsd.svs
llvm.ve.vl.lvsl.svs
llvm.ve.vl.lvss.svs
llvm.ve.vl.lzvm.sml
llvm.ve.vl.negm.MM
llvm.ve.vl.negm.mm
llvm.ve.vl.nndm.MMM
llvm.ve.vl.nndm.mmm
llvm.ve.vl.orm.MMM
llvm.ve.vl.orm.mmm
llvm.ve.vl.pcvm.sml
llvm.ve.vl.pfchv.ssl
llvm.ve.vl.pfchvnc.ssl
llvm.ve.vl.pvadds.vsvMvl
llvm.ve.vl.pvadds.vsvl
llvm.ve.vl.pvadds.vsvvl
llvm.ve.vl.pvadds.vvvMvl
llvm.ve.vl.pvadds.vvvl
llvm.ve.vl.pvadds.vvvvl
llvm.ve.vl.pvaddu.vsvMvl
llvm.ve.vl.pvaddu.vsvl
llvm.ve.vl.pvaddu.vsvvl
llvm.ve.vl.pvaddu.vvvMvl
llvm.ve.vl.pvaddu.vvvl
llvm.ve.vl.pvaddu.vvvvl
llvm.ve.vl.pvand.vsvMvl
llvm.ve.vl.pvand.vsvl
llvm.ve.vl.pvand.vsvvl
llvm.ve.vl.pvand.vvvMvl
llvm.ve.vl.pvand.vvvl
llvm.ve.vl.pvand.vvvvl
llvm.ve.vl.pvbrd.vsMvl
llvm.ve.vl.pvbrd.vsl
llvm.ve.vl.pvbrd.vsvl
llvm.ve.vl.pvcmps.vsvMvl
llvm.ve.vl.pvcmps.vsvl
llvm.ve.vl.pvcmps.vsvvl
llvm.ve.vl.pvcmps.vvvMvl
llvm.ve.vl.pvcmps.vvvl
llvm.ve.vl.pvcmps.vvvvl
llvm.ve.vl.pvcmpu.vsvMvl
llvm.ve.vl.pvcmpu.vsvl
llvm.ve.vl.pvcmpu.vsvvl
llvm.ve.vl.pvcmpu.vvvMvl
llvm.ve.vl.pvcmpu.vvvl
llvm.ve.vl.pvcmpu.vvvvl
llvm.ve.vl.pvcvtsw.vvl
llvm.ve.vl.pvcvtsw.vvvl
llvm.ve.vl.pvcvtws.vvMvl
llvm.ve.vl.pvcvtws.vvl
llvm.ve.vl.pvcvtws.vvvl
llvm.ve.vl.pvcvtwsrz.vvMvl
llvm.ve.vl.pvcvtwsrz.vvl
llvm.ve.vl.pvcvtwsrz.vvvl
llvm.ve.vl.pveqv.vsvMvl
llvm.ve.vl.pveqv.vsvl
llvm.ve.vl.pveqv.vsvvl
llvm.ve.vl.pveqv.vvvMvl
llvm.ve.vl.pveqv.vvvl
llvm.ve.vl.pveqv.vvvvl
llvm.ve.vl.pvfadd.vsvMvl
llvm.ve.vl.pvfadd.vsvl
llvm.ve.vl.pvfadd.vsvvl
llvm.ve.vl.pvfadd.vvvMvl
llvm.ve.vl.pvfadd.vvvl
llvm.ve.vl.pvfadd.vvvvl
llvm.ve.vl.pvfcmp.vsvMvl
llvm.ve.vl.pvfcmp.vsvl
llvm.ve.vl.pvfcmp.vsvvl
llvm.ve.vl.pvfcmp.vvvMvl
llvm.ve.vl.pvfcmp.vvvl
llvm.ve.vl.pvfcmp.vvvvl
llvm.ve.vl.pvfmad.vsvvMvl
llvm.ve.vl.pvfmad.vsvvl
llvm.ve.vl.pvfmad.vsvvvl
llvm.ve.vl.pvfmad.vvsvMvl
llvm.ve.vl.pvfmad.vvsvl
llvm.ve.vl.pvfmad.vvsvvl
llvm.ve.vl.pvfmad.vvvvMvl
llvm.ve.vl.pvfmad.vvvvl
llvm.ve.vl.pvfmad.vvvvvl
llvm.ve.vl.pvfmax.vsvMvl
llvm.ve.vl.pvfmax.vsvl
llvm.ve.vl.pvfmax.vsvvl
llvm.ve.vl.pvfmax.vvvMvl
llvm.ve.vl.pvfmax.vvvl
llvm.ve.vl.pvfmax.vvvvl
llvm.ve.vl.pvfmin.vsvMvl
llvm.ve.vl.pvfmin.vsvl
llvm.ve.vl.pvfmin.vsvvl
llvm.ve.vl.pvfmin.vvvMvl
llvm.ve.vl.pvfmin.vvvl
llvm.ve.vl.pvfmin.vvvvl
llvm.ve.vl.pvfmkaf.Ml
llvm.ve.vl.pvfmkat.Ml
llvm.ve.vl.pvfmkseq.MvMl
llvm.ve.vl.pvfmkseq.Mvl
llvm.ve.vl.pvfmkseqnan.MvMl
llvm.ve.vl.pvfmkseqnan.Mvl
llvm.ve.vl.pvfmksge.MvMl
llvm.ve.vl.pvfmksge.Mvl
llvm.ve.vl.pvfmksgenan.MvMl
llvm.ve.vl.pvfmksgenan.Mvl
llvm.ve.vl.pvfmksgt.MvMl
llvm.ve.vl.pvfmksgt.Mvl
llvm.ve.vl.pvfmksgtnan.MvMl
llvm.ve.vl.pvfmksgtnan.Mvl
llvm.ve.vl.pvfmksle.MvMl
llvm.ve.vl.pvfmksle.Mvl
llvm.ve.vl.pvfmkslenan.MvMl
llvm.ve.vl.pvfmkslenan.Mvl
llvm.ve.vl.pvfmksloeq.mvl
llvm.ve.vl.pvfmksloeq.mvml
llvm.ve.vl.pvfmksloeqnan.mvl
llvm.ve.vl.pvfmksloeqnan.mvml
llvm.ve.vl.pvfmksloge.mvl
llvm.ve.vl.pvfmksloge.mvml
llvm.ve.vl.pvfmkslogenan.mvl
llvm.ve.vl.pvfmkslogenan.mvml
llvm.ve.vl.pvfmkslogt.mvl
llvm.ve.vl.pvfmkslogt.mvml
llvm.ve.vl.pvfmkslogtnan.mvl
llvm.ve.vl.pvfmkslogtnan.mvml
llvm.ve.vl.pvfmkslole.mvl
llvm.ve.vl.pvfmkslole.mvml
llvm.ve.vl.pvfmkslolenan.mvl
llvm.ve.vl.pvfmkslolenan.mvml
llvm.ve.vl.pvfmkslolt.mvl
llvm.ve.vl.pvfmkslolt.mvml
llvm.ve.vl.pvfmksloltnan.mvl
llvm.ve.vl.pvfmksloltnan.mvml
llvm.ve.vl.pvfmkslonan.mvl
llvm.ve.vl.pvfmkslonan.mvml
llvm.ve.vl.pvfmkslone.mvl
llvm.ve.vl.pvfmkslone.mvml
llvm.ve.vl.pvfmkslonenan.mvl
llvm.ve.vl.pvfmkslonenan.mvml
llvm.ve.vl.pvfmkslonum.mvl
llvm.ve.vl.pvfmkslonum.mvml
llvm.ve.vl.pvfmkslt.MvMl
llvm.ve.vl.pvfmkslt.Mvl
llvm.ve.vl.pvfmksltnan.MvMl
llvm.ve.vl.pvfmksltnan.Mvl
llvm.ve.vl.pvfmksnan.MvMl
llvm.ve.vl.pvfmksnan.Mvl
llvm.ve.vl.pvfmksne.MvMl
llvm.ve.vl.pvfmksne.Mvl
llvm.ve.vl.pvfmksnenan.MvMl
llvm.ve.vl.pvfmksnenan.Mvl
llvm.ve.vl.pvfmksnum.MvMl
llvm.ve.vl.pvfmksnum.Mvl
llvm.ve.vl.pvfmksupeq.mvl
llvm.ve.vl.pvfmksupeq.mvml
llvm.ve.vl.pvfmksupeqnan.mvl
llvm.ve.vl.pvfmksupeqnan.mvml
llvm.ve.vl.pvfmksupge.mvl
llvm.ve.vl.pvfmksupge.mvml
llvm.ve.vl.pvfmksupgenan.mvl
llvm.ve.vl.pvfmksupgenan.mvml
llvm.ve.vl.pvfmksupgt.mvl
llvm.ve.vl.pvfmksupgt.mvml
llvm.ve.vl.pvfmksupgtnan.mvl
llvm.ve.vl.pvfmksupgtnan.mvml
llvm.ve.vl.pvfmksuple.mvl
llvm.ve.vl.pvfmksuple.mvml
llvm.ve.vl.pvfmksuplenan.mvl
llvm.ve.vl.pvfmksuplenan.mvml
llvm.ve.vl.pvfmksuplt.mvl
llvm.ve.vl.pvfmksuplt.mvml
llvm.ve.vl.pvfmksupltnan.mvl
llvm.ve.vl.pvfmksupltnan.mvml
llvm.ve.vl.pvfmksupnan.mvl
llvm.ve.vl.pvfmksupnan.mvml
llvm.ve.vl.pvfmksupne.mvl
llvm.ve.vl.pvfmksupne.mvml
llvm.ve.vl.pvfmksupnenan.mvl
llvm.ve.vl.pvfmksupnenan.mvml
llvm.ve.vl.pvfmksupnum.mvl
llvm.ve.vl.pvfmksupnum.mvml
llvm.ve.vl.pvfmkweq.MvMl
llvm.ve.vl.pvfmkweq.Mvl
llvm.ve.vl.pvfmkweqnan.MvMl
llvm.ve.vl.pvfmkweqnan.Mvl
llvm.ve.vl.pvfmkwge.MvMl
llvm.ve.vl.pvfmkwge.Mvl
llvm.ve.vl.pvfmkwgenan.MvMl
llvm.ve.vl.pvfmkwgenan.Mvl
llvm.ve.vl.pvfmkwgt.MvMl
llvm.ve.vl.pvfmkwgt.Mvl
llvm.ve.vl.pvfmkwgtnan.MvMl
llvm.ve.vl.pvfmkwgtnan.Mvl
llvm.ve.vl.pvfmkwle.MvMl
llvm.ve.vl.pvfmkwle.Mvl
llvm.ve.vl.pvfmkwlenan.MvMl
llvm.ve.vl.pvfmkwlenan.Mvl
llvm.ve.vl.pvfmkwloeq.mvl
llvm.ve.vl.pvfmkwloeq.mvml
llvm.ve.vl.pvfmkwloeqnan.mvl
llvm.ve.vl.pvfmkwloeqnan.mvml
llvm.ve.vl.pvfmkwloge.mvl
llvm.ve.vl.pvfmkwloge.mvml
llvm.ve.vl.pvfmkwlogenan.mvl
llvm.ve.vl.pvfmkwlogenan.mvml
llvm.ve.vl.pvfmkwlogt.mvl
llvm.ve.vl.pvfmkwlogt.mvml
llvm.ve.vl.pvfmkwlogtnan.mvl
llvm.ve.vl.pvfmkwlogtnan.mvml
llvm.ve.vl.pvfmkwlole.mvl
llvm.ve.vl.pvfmkwlole.mvml
llvm.ve.vl.pvfmkwlolenan.mvl
llvm.ve.vl.pvfmkwlolenan.mvml
llvm.ve.vl.pvfmkwlolt.mvl
llvm.ve.vl.pvfmkwlolt.mvml
llvm.ve.vl.pvfmkwloltnan.mvl
llvm.ve.vl.pvfmkwloltnan.mvml
llvm.ve.vl.pvfmkwlonan.mvl
llvm.ve.vl.pvfmkwlonan.mvml
llvm.ve.vl.pvfmkwlone.mvl
llvm.ve.vl.pvfmkwlone.mvml
llvm.ve.vl.pvfmkwlonenan.mvl
llvm.ve.vl.pvfmkwlonenan.mvml
llvm.ve.vl.pvfmkwlonum.mvl
llvm.ve.vl.pvfmkwlonum.mvml
llvm.ve.vl.pvfmkwlt.MvMl
llvm.ve.vl.pvfmkwlt.Mvl
llvm.ve.vl.pvfmkwltnan.MvMl
llvm.ve.vl.pvfmkwltnan.Mvl
llvm.ve.vl.pvfmkwnan.MvMl
llvm.ve.vl.pvfmkwnan.Mvl
llvm.ve.vl.pvfmkwne.MvMl
llvm.ve.vl.pvfmkwne.Mvl
llvm.ve.vl.pvfmkwnenan.MvMl
llvm.ve.vl.pvfmkwnenan.Mvl
llvm.ve.vl.pvfmkwnum.MvMl
llvm.ve.vl.pvfmkwnum.Mvl
llvm.ve.vl.pvfmkwupeq.mvl
llvm.ve.vl.pvfmkwupeq.mvml
llvm.ve.vl.pvfmkwupeqnan.mvl
llvm.ve.vl.pvfmkwupeqnan.mvml
llvm.ve.vl.pvfmkwupge.mvl
llvm.ve.vl.pvfmkwupge.mvml
llvm.ve.vl.pvfmkwupgenan.mvl
llvm.ve.vl.pvfmkwupgenan.mvml
llvm.ve.vl.pvfmkwupgt.mvl
llvm.ve.vl.pvfmkwupgt.mvml
llvm.ve.vl.pvfmkwupgtnan.mvl
llvm.ve.vl.pvfmkwupgtnan.mvml
llvm.ve.vl.pvfmkwuple.mvl
llvm.ve.vl.pvfmkwuple.mvml
llvm.ve.vl.pvfmkwuplenan.mvl
llvm.ve.vl.pvfmkwuplenan.mvml
llvm.ve.vl.pvfmkwuplt.mvl
llvm.ve.vl.pvfmkwuplt.mvml
llvm.ve.vl.pvfmkwupltnan.mvl
llvm.ve.vl.pvfmkwupltnan.mvml
llvm.ve.vl.pvfmkwupnan.mvl
llvm.ve.vl.pvfmkwupnan.mvml
llvm.ve.vl.pvfmkwupne.mvl
llvm.ve.vl.pvfmkwupne.mvml
llvm.ve.vl.pvfmkwupnenan.mvl
llvm.ve.vl.pvfmkwupnenan.mvml
llvm.ve.vl.pvfmkwupnum.mvl
llvm.ve.vl.pvfmkwupnum.mvml
llvm.ve.vl.pvfmsb.vsvvMvl
llvm.ve.vl.pvfmsb.vsvvl
llvm.ve.vl.pvfmsb.vsvvvl
llvm.ve.vl.pvfmsb.vvsvMvl
llvm.ve.vl.pvfmsb.vvsvl
llvm.ve.vl.pvfmsb.vvsvvl
llvm.ve.vl.pvfmsb.vvvvMvl
llvm.ve.vl.pvfmsb.vvvvl
llvm.ve.vl.pvfmsb.vvvvvl
llvm.ve.vl.pvfmul.vsvMvl
llvm.ve.vl.pvfmul.vsvl
llvm.ve.vl.pvfmul.vsvvl
llvm.ve.vl.pvfmul.vvvMvl
llvm.ve.vl.pvfmul.vvvl
llvm.ve.vl.pvfmul.vvvvl
llvm.ve.vl.pvfnmad.vsvvMvl
llvm.ve.vl.pvfnmad.vsvvl
llvm.ve.vl.pvfnmad.vsvvvl
llvm.ve.vl.pvfnmad.vvsvMvl
llvm.ve.vl.pvfnmad.vvsvl
llvm.ve.vl.pvfnmad.vvsvvl
llvm.ve.vl.pvfnmad.vvvvMvl
llvm.ve.vl.pvfnmad.vvvvl
llvm.ve.vl.pvfnmad.vvvvvl
llvm.ve.vl.pvfnmsb.vsvvMvl
llvm.ve.vl.pvfnmsb.vsvvl
llvm.ve.vl.pvfnmsb.vsvvvl
llvm.ve.vl.pvfnmsb.vvsvMvl
llvm.ve.vl.pvfnmsb.vvsvl
llvm.ve.vl.pvfnmsb.vvsvvl
llvm.ve.vl.pvfnmsb.vvvvMvl
llvm.ve.vl.pvfnmsb.vvvvl
llvm.ve.vl.pvfnmsb.vvvvvl
llvm.ve.vl.pvfsub.vsvMvl
llvm.ve.vl.pvfsub.vsvl
llvm.ve.vl.pvfsub.vsvvl
llvm.ve.vl.pvfsub.vvvMvl
llvm.ve.vl.pvfsub.vvvl
llvm.ve.vl.pvfsub.vvvvl
llvm.ve.vl.pvmaxs.vsvMvl
llvm.ve.vl.pvmaxs.vsvl
llvm.ve.vl.pvmaxs.vsvvl
llvm.ve.vl.pvmaxs.vvvMvl
llvm.ve.vl.pvmaxs.vvvl
llvm.ve.vl.pvmaxs.vvvvl
llvm.ve.vl.pvmins.vsvMvl
llvm.ve.vl.pvmins.vsvl
llvm.ve.vl.pvmins.vsvvl
llvm.ve.vl.pvmins.vvvMvl
llvm.ve.vl.pvmins.vvvl
llvm.ve.vl.pvmins.vvvvl
llvm.ve.vl.pvor.vsvMvl
llvm.ve.vl.pvor.vsvl
llvm.ve.vl.pvor.vsvvl
llvm.ve.vl.pvor.vvvMvl
llvm.ve.vl.pvor.vvvl
llvm.ve.vl.pvor.vvvvl
llvm.ve.vl.pvrcp.vvl
llvm.ve.vl.pvrcp.vvvl
llvm.ve.vl.pvrsqrt.vvl
llvm.ve.vl.pvrsqrt.vvvl
llvm.ve.vl.pvrsqrtnex.vvl
llvm.ve.vl.pvrsqrtnex.vvvl
llvm.ve.vl.pvseq.vl
llvm.ve.vl.pvseq.vvl
llvm.ve.vl.pvseqlo.vl
llvm.ve.vl.pvseqlo.vvl
llvm.ve.vl.pvsequp.vl
llvm.ve.vl.pvsequp.vvl
llvm.ve.vl.pvsla.vvsMvl
llvm.ve.vl.pvsla.vvsl
llvm.ve.vl.pvsla.vvsvl
llvm.ve.vl.pvsla.vvvMvl
llvm.ve.vl.pvsla.vvvl
llvm.ve.vl.pvsla.vvvvl
llvm.ve.vl.pvsll.vvsMvl
llvm.ve.vl.pvsll.vvsl
llvm.ve.vl.pvsll.vvsvl
llvm.ve.vl.pvsll.vvvMvl
llvm.ve.vl.pvsll.vvvl
llvm.ve.vl.pvsll.vvvvl
llvm.ve.vl.pvsra.vvsMvl
llvm.ve.vl.pvsra.vvsl
llvm.ve.vl.pvsra.vvsvl
llvm.ve.vl.pvsra.vvvMvl
llvm.ve.vl.pvsra.vvvl
llvm.ve.vl.pvsra.vvvvl
llvm.ve.vl.pvsrl.vvsMvl
llvm.ve.vl.pvsrl.vvsl
llvm.ve.vl.pvsrl.vvsvl
llvm.ve.vl.pvsrl.vvvMvl
llvm.ve.vl.pvsrl.vvvl
llvm.ve.vl.pvsrl.vvvvl
llvm.ve.vl.pvsubs.vsvMvl
llvm.ve.vl.pvsubs.vsvl
llvm.ve.vl.pvsubs.vsvvl
llvm.ve.vl.pvsubs.vvvMvl
llvm.ve.vl.pvsubs.vvvl
llvm.ve.vl.pvsubs.vvvvl
llvm.ve.vl.pvsubu.vsvMvl
llvm.ve.vl.pvsubu.vsvl
llvm.ve.vl.pvsubu.vsvvl
llvm.ve.vl.pvsubu.vvvMvl
llvm.ve.vl.pvsubu.vvvl
llvm.ve.vl.pvsubu.vvvvl
llvm.ve.vl.pvxor.vsvMvl
llvm.ve.vl.pvxor.vsvl
llvm.ve.vl.pvxor.vsvvl
llvm.ve.vl.pvxor.vvvMvl
llvm.ve.vl.pvxor.vvvl
llvm.ve.vl.pvxor.vvvvl
llvm.ve.vl.svm.sMs
llvm.ve.vl.svm.sms
llvm.ve.vl.tovm.sml
llvm.ve.vl.vaddsl.vsvl
llvm.ve.vl.vaddsl.vsvmvl
llvm.ve.vl.vaddsl.vsvvl
llvm.ve.vl.vaddsl.vvvl
llvm.ve.vl.vaddsl.vvvmvl
llvm.ve.vl.vaddsl.vvvvl
llvm.ve.vl.vaddswsx.vsvl
llvm.ve.vl.vaddswsx.vsvmvl
llvm.ve.vl.vaddswsx.vsvvl
llvm.ve.vl.vaddswsx.vvvl
llvm.ve.vl.vaddswsx.vvvmvl
llvm.ve.vl.vaddswsx.vvvvl
llvm.ve.vl.vaddswzx.vsvl
llvm.ve.vl.vaddswzx.vsvmvl
llvm.ve.vl.vaddswzx.vsvvl
llvm.ve.vl.vaddswzx.vvvl
llvm.ve.vl.vaddswzx.vvvmvl
llvm.ve.vl.vaddswzx.vvvvl
llvm.ve.vl.vaddul.vsvl
llvm.ve.vl.vaddul.vsvmvl
llvm.ve.vl.vaddul.vsvvl
llvm.ve.vl.vaddul.vvvl
llvm.ve.vl.vaddul.vvvmvl
llvm.ve.vl.vaddul.vvvvl
llvm.ve.vl.vadduw.vsvl
llvm.ve.vl.vadduw.vsvmvl
llvm.ve.vl.vadduw.vsvvl
llvm.ve.vl.vadduw.vvvl
llvm.ve.vl.vadduw.vvvmvl
llvm.ve.vl.vadduw.vvvvl
llvm.ve.vl.vand.vsvl
llvm.ve.vl.vand.vsvmvl
llvm.ve.vl.vand.vsvvl
llvm.ve.vl.vand.vvvl
llvm.ve.vl.vand.vvvmvl
llvm.ve.vl.vand.vvvvl
llvm.ve.vl.vbrdd.vsl
llvm.ve.vl.vbrdd.vsmvl
llvm.ve.vl.vbrdd.vsvl
llvm.ve.vl.vbrdl.vsl
llvm.ve.vl.vbrdl.vsmvl
llvm.ve.vl.vbrdl.vsvl
llvm.ve.vl.vbrds.vsl
llvm.ve.vl.vbrds.vsmvl
llvm.ve.vl.vbrds.vsvl
llvm.ve.vl.vbrdw.vsl
llvm.ve.vl.vbrdw.vsmvl
llvm.ve.vl.vbrdw.vsvl
llvm.ve.vl.vcmpsl.vsvl
llvm.ve.vl.vcmpsl.vsvmvl
llvm.ve.vl.vcmpsl.vsvvl
llvm.ve.vl.vcmpsl.vvvl
llvm.ve.vl.vcmpsl.vvvmvl
llvm.ve.vl.vcmpsl.vvvvl
llvm.ve.vl.vcmpswsx.vsvl
llvm.ve.vl.vcmpswsx.vsvmvl
llvm.ve.vl.vcmpswsx.vsvvl
llvm.ve.vl.vcmpswsx.vvvl
llvm.ve.vl.vcmpswsx.vvvmvl
llvm.ve.vl.vcmpswsx.vvvvl
llvm.ve.vl.vcmpswzx.vsvl
llvm.ve.vl.vcmpswzx.vsvmvl
llvm.ve.vl.vcmpswzx.vsvvl
llvm.ve.vl.vcmpswzx.vvvl
llvm.ve.vl.vcmpswzx.vvvmvl
llvm.ve.vl.vcmpswzx.vvvvl
llvm.ve.vl.vcmpul.vsvl
llvm.ve.vl.vcmpul.vsvmvl
llvm.ve.vl.vcmpul.vsvvl
llvm.ve.vl.vcmpul.vvvl
llvm.ve.vl.vcmpul.vvvmvl
llvm.ve.vl.vcmpul.vvvvl
llvm.ve.vl.vcmpuw.vsvl
llvm.ve.vl.vcmpuw.vsvmvl
llvm.ve.vl.vcmpuw.vsvvl
llvm.ve.vl.vcmpuw.vvvl
llvm.ve.vl.vcmpuw.vvvmvl
llvm.ve.vl.vcmpuw.vvvvl
llvm.ve.vl.vcp.vvmvl
llvm.ve.vl.vcvtdl.vvl
llvm.ve.vl.vcvtdl.vvvl
llvm.ve.vl.vcvtds.vvl
llvm.ve.vl.vcvtds.vvvl
llvm.ve.vl.vcvtdw.vvl
llvm.ve.vl.vcvtdw.vvvl
llvm.ve.vl.vcvtld.vvl
llvm.ve.vl.vcvtld.vvmvl
llvm.ve.vl.vcvtld.vvvl
llvm.ve.vl.vcvtldrz.vvl
llvm.ve.vl.vcvtldrz.vvmvl
llvm.ve.vl.vcvtldrz.vvvl
llvm.ve.vl.vcvtsd.vvl
llvm.ve.vl.vcvtsd.vvvl
llvm.ve.vl.vcvtsw.vvl
llvm.ve.vl.vcvtsw.vvvl
llvm.ve.vl.vcvtwdsx.vvl
llvm.ve.vl.vcvtwdsx.vvmvl
llvm.ve.vl.vcvtwdsx.vvvl
llvm.ve.vl.vcvtwdsxrz.vvl
llvm.ve.vl.vcvtwdsxrz.vvmvl
llvm.ve.vl.vcvtwdsxrz.vvvl
llvm.ve.vl.vcvtwdzx.vvl
llvm.ve.vl.vcvtwdzx.vvmvl
llvm.ve.vl.vcvtwdzx.vvvl
llvm.ve.vl.vcvtwdzxrz.vvl
llvm.ve.vl.vcvtwdzxrz.vvmvl
llvm.ve.vl.vcvtwdzxrz.vvvl
llvm.ve.vl.vcvtwssx.vvl
llvm.ve.vl.vcvtwssx.vvmvl
llvm.ve.vl.vcvtwssx.vvvl
llvm.ve.vl.vcvtwssxrz.vvl
llvm.ve.vl.vcvtwssxrz.vvmvl
llvm.ve.vl.vcvtwssxrz.vvvl
llvm.ve.vl.vcvtwszx.vvl
llvm.ve.vl.vcvtwszx.vvmvl
llvm.ve.vl.vcvtwszx.vvvl
llvm.ve.vl.vcvtwszxrz.vvl
llvm.ve.vl.vcvtwszxrz.vvmvl
llvm.ve.vl.vcvtwszxrz.vvvl
llvm.ve.vl.vdivsl.vsvl
llvm.ve.vl.vdivsl.vsvmvl
llvm.ve.vl.vdivsl.vsvvl
llvm.ve.vl.vdivsl.vvsl
llvm.ve.vl.vdivsl.vvsmvl
llvm.ve.vl.vdivsl.vvsvl
llvm.ve.vl.vdivsl.vvvl
llvm.ve.vl.vdivsl.vvvmvl
llvm.ve.vl.vdivsl.vvvvl
llvm.ve.vl.vdivswsx.vsvl
llvm.ve.vl.vdivswsx.vsvmvl
llvm.ve.vl.vdivswsx.vsvvl
llvm.ve.vl.vdivswsx.vvsl
llvm.ve.vl.vdivswsx.vvsmvl
llvm.ve.vl.vdivswsx.vvsvl
llvm.ve.vl.vdivswsx.vvvl
llvm.ve.vl.vdivswsx.vvvmvl
llvm.ve.vl.vdivswsx.vvvvl
llvm.ve.vl.vdivswzx.vsvl
llvm.ve.vl.vdivswzx.vsvmvl
llvm.ve.vl.vdivswzx.vsvvl
llvm.ve.vl.vdivswzx.vvsl
llvm.ve.vl.vdivswzx.vvsmvl
llvm.ve.vl.vdivswzx.vvsvl
llvm.ve.vl.vdivswzx.vvvl
llvm.ve.vl.vdivswzx.vvvmvl
llvm.ve.vl.vdivswzx.vvvvl
llvm.ve.vl.vdivul.vsvl
llvm.ve.vl.vdivul.vsvmvl
llvm.ve.vl.vdivul.vsvvl
llvm.ve.vl.vdivul.vvsl
llvm.ve.vl.vdivul.vvsmvl
llvm.ve.vl.vdivul.vvsvl
llvm.ve.vl.vdivul.vvvl
llvm.ve.vl.vdivul.vvvmvl
llvm.ve.vl.vdivul.vvvvl
llvm.ve.vl.vdivuw.vsvl
llvm.ve.vl.vdivuw.vsvmvl
llvm.ve.vl.vdivuw.vsvvl
llvm.ve.vl.vdivuw.vvsl
llvm.ve.vl.vdivuw.vvsmvl
llvm.ve.vl.vdivuw.vvsvl
llvm.ve.vl.vdivuw.vvvl
llvm.ve.vl.vdivuw.vvvmvl
llvm.ve.vl.vdivuw.vvvvl
llvm.ve.vl.veqv.vsvl
llvm.ve.vl.veqv.vsvmvl
llvm.ve.vl.veqv.vsvvl
llvm.ve.vl.veqv.vvvl
llvm.ve.vl.veqv.vvvmvl
llvm.ve.vl.veqv.vvvvl
llvm.ve.vl.vex.vvmvl
llvm.ve.vl.vfaddd.vsvl
llvm.ve.vl.vfaddd.vsvmvl
llvm.ve.vl.vfaddd.vsvvl
llvm.ve.vl.vfaddd.vvvl
llvm.ve.vl.vfaddd.vvvmvl
llvm.ve.vl.vfaddd.vvvvl
llvm.ve.vl.vfadds.vsvl
llvm.ve.vl.vfadds.vsvmvl
llvm.ve.vl.vfadds.vsvvl
llvm.ve.vl.vfadds.vvvl
llvm.ve.vl.vfadds.vvvmvl
llvm.ve.vl.vfadds.vvvvl
llvm.ve.vl.vfcmpd.vsvl
llvm.ve.vl.vfcmpd.vsvmvl
llvm.ve.vl.vfcmpd.vsvvl
llvm.ve.vl.vfcmpd.vvvl
llvm.ve.vl.vfcmpd.vvvmvl
llvm.ve.vl.vfcmpd.vvvvl
llvm.ve.vl.vfcmps.vsvl
llvm.ve.vl.vfcmps.vsvmvl
llvm.ve.vl.vfcmps.vsvvl
llvm.ve.vl.vfcmps.vvvl
llvm.ve.vl.vfcmps.vvvmvl
llvm.ve.vl.vfcmps.vvvvl
llvm.ve.vl.vfdivd.vsvl
llvm.ve.vl.vfdivd.vsvmvl
llvm.ve.vl.vfdivd.vsvvl
llvm.ve.vl.vfdivd.vvvl
llvm.ve.vl.vfdivd.vvvmvl
llvm.ve.vl.vfdivd.vvvvl
llvm.ve.vl.vfdivs.vsvl
llvm.ve.vl.vfdivs.vsvmvl
llvm.ve.vl.vfdivs.vsvvl
llvm.ve.vl.vfdivs.vvvl
llvm.ve.vl.vfdivs.vvvmvl
llvm.ve.vl.vfdivs.vvvvl
llvm.ve.vl.vfmadd.vsvvl
llvm.ve.vl.vfmadd.vsvvmvl
llvm.ve.vl.vfmadd.vsvvvl
llvm.ve.vl.vfmadd.vvsvl
llvm.ve.vl.vfmadd.vvsvmvl
llvm.ve.vl.vfmadd.vvsvvl
llvm.ve.vl.vfmadd.vvvvl
llvm.ve.vl.vfmadd.vvvvmvl
llvm.ve.vl.vfmadd.vvvvvl
llvm.ve.vl.vfmads.vsvvl
llvm.ve.vl.vfmads.vsvvmvl
llvm.ve.vl.vfmads.vsvvvl
llvm.ve.vl.vfmads.vvsvl
llvm.ve.vl.vfmads.vvsvmvl
llvm.ve.vl.vfmads.vvsvvl
llvm.ve.vl.vfmads.vvvvl
llvm.ve.vl.vfmads.vvvvmvl
llvm.ve.vl.vfmads.vvvvvl
llvm.ve.vl.vfmaxd.vsvl
llvm.ve.vl.vfmaxd.vsvmvl
llvm.ve.vl.vfmaxd.vsvvl
llvm.ve.vl.vfmaxd.vvvl
llvm.ve.vl.vfmaxd.vvvmvl
llvm.ve.vl.vfmaxd.vvvvl
llvm.ve.vl.vfmaxs.vsvl
llvm.ve.vl.vfmaxs.vsvmvl
llvm.ve.vl.vfmaxs.vsvvl
llvm.ve.vl.vfmaxs.vvvl
llvm.ve.vl.vfmaxs.vvvmvl
llvm.ve.vl.vfmaxs.vvvvl
llvm.ve.vl.vfmind.vsvl
llvm.ve.vl.vfmind.vsvmvl
llvm.ve.vl.vfmind.vsvvl
llvm.ve.vl.vfmind.vvvl
llvm.ve.vl.vfmind.vvvmvl
llvm.ve.vl.vfmind.vvvvl
llvm.ve.vl.vfmins.vsvl
llvm.ve.vl.vfmins.vsvmvl
llvm.ve.vl.vfmins.vsvvl
llvm.ve.vl.vfmins.vvvl
llvm.ve.vl.vfmins.vvvmvl
llvm.ve.vl.vfmins.vvvvl
llvm.ve.vl.vfmkdeq.mvl
llvm.ve.vl.vfmkdeq.mvml
llvm.ve.vl.vfmkdeqnan.mvl
llvm.ve.vl.vfmkdeqnan.mvml
llvm.ve.vl.vfmkdge.mvl
llvm.ve.vl.vfmkdge.mvml
llvm.ve.vl.vfmkdgenan.mvl
llvm.ve.vl.vfmkdgenan.mvml
llvm.ve.vl.vfmkdgt.mvl
llvm.ve.vl.vfmkdgt.mvml
llvm.ve.vl.vfmkdgtnan.mvl
llvm.ve.vl.vfmkdgtnan.mvml
llvm.ve.vl.vfmkdle.mvl
llvm.ve.vl.vfmkdle.mvml
llvm.ve.vl.vfmkdlenan.mvl
llvm.ve.vl.vfmkdlenan.mvml
llvm.ve.vl.vfmkdlt.mvl
llvm.ve.vl.vfmkdlt.mvml
llvm.ve.vl.vfmkdltnan.mvl
llvm.ve.vl.vfmkdltnan.mvml
llvm.ve.vl.vfmkdnan.mvl
llvm.ve.vl.vfmkdnan.mvml
llvm.ve.vl.vfmkdne.mvl
llvm.ve.vl.vfmkdne.mvml
llvm.ve.vl.vfmkdnenan.mvl
llvm.ve.vl.vfmkdnenan.mvml
llvm.ve.vl.vfmkdnum.mvl
llvm.ve.vl.vfmkdnum.mvml
llvm.ve.vl.vfmklaf.ml
llvm.ve.vl.vfmklat.ml
llvm.ve.vl.vfmkleq.mvl
llvm.ve.vl.vfmkleq.mvml
llvm.ve.vl.vfmkleqnan.mvl
llvm.ve.vl.vfmkleqnan.mvml
llvm.ve.vl.vfmklge.mvl
llvm.ve.vl.vfmklge.mvml
llvm.ve.vl.vfmklgenan.mvl
llvm.ve.vl.vfmklgenan.mvml
llvm.ve.vl.vfmklgt.mvl
llvm.ve.vl.vfmklgt.mvml
llvm.ve.vl.vfmklgtnan.mvl
llvm.ve.vl.vfmklgtnan.mvml
llvm.ve.vl.vfmklle.mvl
llvm.ve.vl.vfmklle.mvml
llvm.ve.vl.vfmkllenan.mvl
llvm.ve.vl.vfmkllenan.mvml
llvm.ve.vl.vfmkllt.mvl
llvm.ve.vl.vfmkllt.mvml
llvm.ve.vl.vfmklltnan.mvl
llvm.ve.vl.vfmklltnan.mvml
llvm.ve.vl.vfmklnan.mvl
llvm.ve.vl.vfmklnan.mvml
llvm.ve.vl.vfmklne.mvl
llvm.ve.vl.vfmklne.mvml
llvm.ve.vl.vfmklnenan.mvl
llvm.ve.vl.vfmklnenan.mvml
llvm.ve.vl.vfmklnum.mvl
llvm.ve.vl.vfmklnum.mvml
llvm.ve.vl.vfmkseq.mvl
llvm.ve.vl.vfmkseq.mvml
llvm.ve.vl.vfmkseqnan.mvl
llvm.ve.vl.vfmkseqnan.mvml
llvm.ve.vl.vfmksge.mvl
llvm.ve.vl.vfmksge.mvml
llvm.ve.vl.vfmksgenan.mvl
llvm.ve.vl.vfmksgenan.mvml
llvm.ve.vl.vfmksgt.mvl
llvm.ve.vl.vfmksgt.mvml
llvm.ve.vl.vfmksgtnan.mvl
llvm.ve.vl.vfmksgtnan.mvml
llvm.ve.vl.vfmksle.mvl
llvm.ve.vl.vfmksle.mvml
llvm.ve.vl.vfmkslenan.mvl
llvm.ve.vl.vfmkslenan.mvml
llvm.ve.vl.vfmkslt.mvl
llvm.ve.vl.vfmkslt.mvml
llvm.ve.vl.vfmksltnan.mvl
llvm.ve.vl.vfmksltnan.mvml
llvm.ve.vl.vfmksnan.mvl
llvm.ve.vl.vfmksnan.mvml
llvm.ve.vl.vfmksne.mvl
llvm.ve.vl.vfmksne.mvml
llvm.ve.vl.vfmksnenan.mvl
llvm.ve.vl.vfmksnenan.mvml
llvm.ve.vl.vfmksnum.mvl
llvm.ve.vl.vfmksnum.mvml
llvm.ve.vl.vfmkweq.mvl
llvm.ve.vl.vfmkweq.mvml
llvm.ve.vl.vfmkweqnan.mvl
llvm.ve.vl.vfmkweqnan.mvml
llvm.ve.vl.vfmkwge.mvl
llvm.ve.vl.vfmkwge.mvml
llvm.ve.vl.vfmkwgenan.mvl
llvm.ve.vl.vfmkwgenan.mvml
llvm.ve.vl.vfmkwgt.mvl
llvm.ve.vl.vfmkwgt.mvml
llvm.ve.vl.vfmkwgtnan.mvl
llvm.ve.vl.vfmkwgtnan.mvml
llvm.ve.vl.vfmkwle.mvl
llvm.ve.vl.vfmkwle.mvml
llvm.ve.vl.vfmkwlenan.mvl
llvm.ve.vl.vfmkwlenan.mvml
llvm.ve.vl.vfmkwlt.mvl
llvm.ve.vl.vfmkwlt.mvml
llvm.ve.vl.vfmkwltnan.mvl
llvm.ve.vl.vfmkwltnan.mvml
llvm.ve.vl.vfmkwnan.mvl
llvm.ve.vl.vfmkwnan.mvml
llvm.ve.vl.vfmkwne.mvl
llvm.ve.vl.vfmkwne.mvml
llvm.ve.vl.vfmkwnenan.mvl
llvm.ve.vl.vfmkwnenan.mvml
llvm.ve.vl.vfmkwnum.mvl
llvm.ve.vl.vfmkwnum.mvml
llvm.ve.vl.vfmsbd.vsvvl
llvm.ve.vl.vfmsbd.vsvvmvl
llvm.ve.vl.vfmsbd.vsvvvl
llvm.ve.vl.vfmsbd.vvsvl
llvm.ve.vl.vfmsbd.vvsvmvl
llvm.ve.vl.vfmsbd.vvsvvl
llvm.ve.vl.vfmsbd.vvvvl
llvm.ve.vl.vfmsbd.vvvvmvl
llvm.ve.vl.vfmsbd.vvvvvl
llvm.ve.vl.vfmsbs.vsvvl
llvm.ve.vl.vfmsbs.vsvvmvl
llvm.ve.vl.vfmsbs.vsvvvl
llvm.ve.vl.vfmsbs.vvsvl
llvm.ve.vl.vfmsbs.vvsvmvl
llvm.ve.vl.vfmsbs.vvsvvl
llvm.ve.vl.vfmsbs.vvvvl
llvm.ve.vl.vfmsbs.vvvvmvl
llvm.ve.vl.vfmsbs.vvvvvl
llvm.ve.vl.vfmuld.vsvl
llvm.ve.vl.vfmuld.vsvmvl
llvm.ve.vl.vfmuld.vsvvl
llvm.ve.vl.vfmuld.vvvl
llvm.ve.vl.vfmuld.vvvmvl
llvm.ve.vl.vfmuld.vvvvl
llvm.ve.vl.vfmuls.vsvl
llvm.ve.vl.vfmuls.vsvmvl
llvm.ve.vl.vfmuls.vsvvl
llvm.ve.vl.vfmuls.vvvl
llvm.ve.vl.vfmuls.vvvmvl
llvm.ve.vl.vfmuls.vvvvl
llvm.ve.vl.vfnmadd.vsvvl
llvm.ve.vl.vfnmadd.vsvvmvl
llvm.ve.vl.vfnmadd.vsvvvl
llvm.ve.vl.vfnmadd.vvsvl
llvm.ve.vl.vfnmadd.vvsvmvl
llvm.ve.vl.vfnmadd.vvsvvl
llvm.ve.vl.vfnmadd.vvvvl
llvm.ve.vl.vfnmadd.vvvvmvl
llvm.ve.vl.vfnmadd.vvvvvl
llvm.ve.vl.vfnmads.vsvvl
llvm.ve.vl.vfnmads.vsvvmvl
llvm.ve.vl.vfnmads.vsvvvl
llvm.ve.vl.vfnmads.vvsvl
llvm.ve.vl.vfnmads.vvsvmvl
llvm.ve.vl.vfnmads.vvsvvl
llvm.ve.vl.vfnmads.vvvvl
llvm.ve.vl.vfnmads.vvvvmvl
llvm.ve.vl.vfnmads.vvvvvl
llvm.ve.vl.vfnmsbd.vsvvl
llvm.ve.vl.vfnmsbd.vsvvmvl
llvm.ve.vl.vfnmsbd.vsvvvl
llvm.ve.vl.vfnmsbd.vvsvl
llvm.ve.vl.vfnmsbd.vvsvmvl
llvm.ve.vl.vfnmsbd.vvsvvl
llvm.ve.vl.vfnmsbd.vvvvl
llvm.ve.vl.vfnmsbd.vvvvmvl
llvm.ve.vl.vfnmsbd.vvvvvl
llvm.ve.vl.vfnmsbs.vsvvl
llvm.ve.vl.vfnmsbs.vsvvmvl
llvm.ve.vl.vfnmsbs.vsvvvl
llvm.ve.vl.vfnmsbs.vvsvl
llvm.ve.vl.vfnmsbs.vvsvmvl
llvm.ve.vl.vfnmsbs.vvsvvl
llvm.ve.vl.vfnmsbs.vvvvl
llvm.ve.vl.vfnmsbs.vvvvmvl
llvm.ve.vl.vfnmsbs.vvvvvl
llvm.ve.vl.vfrmaxdfst.vvl
llvm.ve.vl.vfrmaxdfst.vvvl
llvm.ve.vl.vfrmaxdlst.vvl
llvm.ve.vl.vfrmaxdlst.vvvl
llvm.ve.vl.vfrmaxsfst.vvl
llvm.ve.vl.vfrmaxsfst.vvvl
llvm.ve.vl.vfrmaxslst.vvl
llvm.ve.vl.vfrmaxslst.vvvl
llvm.ve.vl.vfrmindfst.vvl
llvm.ve.vl.vfrmindfst.vvvl
llvm.ve.vl.vfrmindlst.vvl
llvm.ve.vl.vfrmindlst.vvvl
llvm.ve.vl.vfrminsfst.vvl
llvm.ve.vl.vfrminsfst.vvvl
llvm.ve.vl.vfrminslst.vvl
llvm.ve.vl.vfrminslst.vvvl
llvm.ve.vl.vfsqrtd.vvl
llvm.ve.vl.vfsqrtd.vvvl
llvm.ve.vl.vfsqrts.vvl
llvm.ve.vl.vfsqrts.vvvl
llvm.ve.vl.vfsubd.vsvl
llvm.ve.vl.vfsubd.vsvmvl
llvm.ve.vl.vfsubd.vsvvl
llvm.ve.vl.vfsubd.vvvl
llvm.ve.vl.vfsubd.vvvmvl
llvm.ve.vl.vfsubd.vvvvl
llvm.ve.vl.vfsubs.vsvl
llvm.ve.vl.vfsubs.vsvmvl
llvm.ve.vl.vfsubs.vsvvl
llvm.ve.vl.vfsubs.vvvl
llvm.ve.vl.vfsubs.vvvmvl
llvm.ve.vl.vfsubs.vvvvl
llvm.ve.vl.vfsumd.vvl
llvm.ve.vl.vfsumd.vvml
llvm.ve.vl.vfsums.vvl
llvm.ve.vl.vfsums.vvml
llvm.ve.vl.vgt.vvssl
llvm.ve.vl.vgt.vvssml
llvm.ve.vl.vgt.vvssmvl
llvm.ve.vl.vgt.vvssvl
llvm.ve.vl.vgtlsx.vvssl
llvm.ve.vl.vgtlsx.vvssml
llvm.ve.vl.vgtlsx.vvssmvl
llvm.ve.vl.vgtlsx.vvssvl
llvm.ve.vl.vgtlsxnc.vvssl
llvm.ve.vl.vgtlsxnc.vvssml
llvm.ve.vl.vgtlsxnc.vvssmvl
llvm.ve.vl.vgtlsxnc.vvssvl
llvm.ve.vl.vgtlzx.vvssl
llvm.ve.vl.vgtlzx.vvssml
llvm.ve.vl.vgtlzx.vvssmvl
llvm.ve.vl.vgtlzx.vvssvl
llvm.ve.vl.vgtlzxnc.vvssl
llvm.ve.vl.vgtlzxnc.vvssml
llvm.ve.vl.vgtlzxnc.vvssmvl
llvm.ve.vl.vgtlzxnc.vvssvl
llvm.ve.vl.vgtnc.vvssl
llvm.ve.vl.vgtnc.vvssml
llvm.ve.vl.vgtnc.vvssmvl
llvm.ve.vl.vgtnc.vvssvl
llvm.ve.vl.vgtu.vvssl
llvm.ve.vl.vgtu.vvssml
llvm.ve.vl.vgtu.vvssmvl
llvm.ve.vl.vgtu.vvssvl
llvm.ve.vl.vgtunc.vvssl
llvm.ve.vl.vgtunc.vvssml
llvm.ve.vl.vgtunc.vvssmvl
llvm.ve.vl.vgtunc.vvssvl
llvm.ve.vl.vld.vssl
llvm.ve.vl.vld.vssvl
llvm.ve.vl.vld2d.vssl
llvm.ve.vl.vld2d.vssvl
llvm.ve.vl.vld2dnc.vssl
llvm.ve.vl.vld2dnc.vssvl
llvm.ve.vl.vldl2dsx.vssl
llvm.ve.vl.vldl2dsx.vssvl
llvm.ve.vl.vldl2dsxnc.vssl
llvm.ve.vl.vldl2dsxnc.vssvl
llvm.ve.vl.vldl2dzx.vssl
llvm.ve.vl.vldl2dzx.vssvl
llvm.ve.vl.vldl2dzxnc.vssl
llvm.ve.vl.vldl2dzxnc.vssvl
llvm.ve.vl.vldlsx.vssl
llvm.ve.vl.vldlsx.vssvl
llvm.ve.vl.vldlsxnc.vssl
llvm.ve.vl.vldlsxnc.vssvl
llvm.ve.vl.vldlzx.vssl
llvm.ve.vl.vldlzx.vssvl
llvm.ve.vl.vldlzxnc.vssl
llvm.ve.vl.vldlzxnc.vssvl
llvm.ve.vl.vldnc.vssl
llvm.ve.vl.vldnc.vssvl
llvm.ve.vl.vldu.vssl
llvm.ve.vl.vldu.vssvl
llvm.ve.vl.vldu2d.vssl
llvm.ve.vl.vldu2d.vssvl
llvm.ve.vl.vldu2dnc.vssl
llvm.ve.vl.vldu2dnc.vssvl
llvm.ve.vl.vldunc.vssl
llvm.ve.vl.vldunc.vssvl
llvm.ve.vl.vmaxsl.vsvl
llvm.ve.vl.vmaxsl.vsvmvl
llvm.ve.vl.vmaxsl.vsvvl
llvm.ve.vl.vmaxsl.vvvl
llvm.ve.vl.vmaxsl.vvvmvl
llvm.ve.vl.vmaxsl.vvvvl
llvm.ve.vl.vmaxswsx.vsvl
llvm.ve.vl.vmaxswsx.vsvmvl
llvm.ve.vl.vmaxswsx.vsvvl
llvm.ve.vl.vmaxswsx.vvvl
llvm.ve.vl.vmaxswsx.vvvmvl
llvm.ve.vl.vmaxswsx.vvvvl
llvm.ve.vl.vmaxswzx.vsvl
llvm.ve.vl.vmaxswzx.vsvmvl
llvm.ve.vl.vmaxswzx.vsvvl
llvm.ve.vl.vmaxswzx.vvvl
llvm.ve.vl.vmaxswzx.vvvmvl
llvm.ve.vl.vmaxswzx.vvvvl
llvm.ve.vl.vminsl.vsvl
llvm.ve.vl.vminsl.vsvmvl
llvm.ve.vl.vminsl.vsvvl
llvm.ve.vl.vminsl.vvvl
llvm.ve.vl.vminsl.vvvmvl
llvm.ve.vl.vminsl.vvvvl
llvm.ve.vl.vminswsx.vsvl
llvm.ve.vl.vminswsx.vsvmvl
llvm.ve.vl.vminswsx.vsvvl
llvm.ve.vl.vminswsx.vvvl
llvm.ve.vl.vminswsx.vvvmvl
llvm.ve.vl.vminswsx.vvvvl
llvm.ve.vl.vminswzx.vsvl
llvm.ve.vl.vminswzx.vsvmvl
llvm.ve.vl.vminswzx.vsvvl
llvm.ve.vl.vminswzx.vvvl
llvm.ve.vl.vminswzx.vvvmvl
llvm.ve.vl.vminswzx.vvvvl
llvm.ve.vl.vmrg.vsvml
llvm.ve.vl.vmrg.vsvmvl
llvm.ve.vl.vmrg.vvvml
llvm.ve.vl.vmrg.vvvmvl
llvm.ve.vl.vmrgw.vsvMl
llvm.ve.vl.vmrgw.vsvMvl
llvm.ve.vl.vmrgw.vvvMl
llvm.ve.vl.vmrgw.vvvMvl
llvm.ve.vl.vmulsl.vsvl
llvm.ve.vl.vmulsl.vsvmvl
llvm.ve.vl.vmulsl.vsvvl
llvm.ve.vl.vmulsl.vvvl
llvm.ve.vl.vmulsl.vvvmvl
llvm.ve.vl.vmulsl.vvvvl
llvm.ve.vl.vmulslw.vsvl
llvm.ve.vl.vmulslw.vsvvl
llvm.ve.vl.vmulslw.vvvl
llvm.ve.vl.vmulslw.vvvvl
llvm.ve.vl.vmulswsx.vsvl
llvm.ve.vl.vmulswsx.vsvmvl
llvm.ve.vl.vmulswsx.vsvvl
llvm.ve.vl.vmulswsx.vvvl
llvm.ve.vl.vmulswsx.vvvmvl
llvm.ve.vl.vmulswsx.vvvvl
llvm.ve.vl.vmulswzx.vsvl
llvm.ve.vl.vmulswzx.vsvmvl
llvm.ve.vl.vmulswzx.vsvvl
llvm.ve.vl.vmulswzx.vvvl
llvm.ve.vl.vmulswzx.vvvmvl
llvm.ve.vl.vmulswzx.vvvvl
llvm.ve.vl.vmulul.vsvl
llvm.ve.vl.vmulul.vsvmvl
llvm.ve.vl.vmulul.vsvvl
llvm.ve.vl.vmulul.vvvl
llvm.ve.vl.vmulul.vvvmvl
llvm.ve.vl.vmulul.vvvvl
llvm.ve.vl.vmuluw.vsvl
llvm.ve.vl.vmuluw.vsvmvl
llvm.ve.vl.vmuluw.vsvvl
llvm.ve.vl.vmuluw.vvvl
llvm.ve.vl.vmuluw.vvvmvl
llvm.ve.vl.vmuluw.vvvvl
llvm.ve.vl.vmv.vsvl
llvm.ve.vl.vmv.vsvmvl
llvm.ve.vl.vmv.vsvvl
llvm.ve.vl.vor.vsvl
llvm.ve.vl.vor.vsvmvl
llvm.ve.vl.vor.vsvvl
llvm.ve.vl.vor.vvvl
llvm.ve.vl.vor.vvvmvl
llvm.ve.vl.vor.vvvvl
llvm.ve.vl.vrand.vvl
llvm.ve.vl.vrand.vvml
llvm.ve.vl.vrcpd.vvl
llvm.ve.vl.vrcpd.vvvl
llvm.ve.vl.vrcps.vvl
llvm.ve.vl.vrcps.vvvl
llvm.ve.vl.vrmaxslfst.vvl
llvm.ve.vl.vrmaxslfst.vvvl
llvm.ve.vl.vrmaxsllst.vvl
llvm.ve.vl.vrmaxsllst.vvvl
llvm.ve.vl.vrmaxswfstsx.vvl
llvm.ve.vl.vrmaxswfstsx.vvvl
llvm.ve.vl.vrmaxswfstzx.vvl
llvm.ve.vl.vrmaxswfstzx.vvvl
llvm.ve.vl.vrmaxswlstsx.vvl
llvm.ve.vl.vrmaxswlstsx.vvvl
llvm.ve.vl.vrmaxswlstzx.vvl
llvm.ve.vl.vrmaxswlstzx.vvvl
llvm.ve.vl.vrminslfst.vvl
llvm.ve.vl.vrminslfst.vvvl
llvm.ve.vl.vrminsllst.vvl
llvm.ve.vl.vrminsllst.vvvl
llvm.ve.vl.vrminswfstsx.vvl
llvm.ve.vl.vrminswfstsx.vvvl
llvm.ve.vl.vrminswfstzx.vvl
llvm.ve.vl.vrminswfstzx.vvvl
llvm.ve.vl.vrminswlstsx.vvl
llvm.ve.vl.vrminswlstsx.vvvl
llvm.ve.vl.vrminswlstzx.vvl
llvm.ve.vl.vrminswlstzx.vvvl
llvm.ve.vl.vror.vvl
llvm.ve.vl.vror.vvml
llvm.ve.vl.vrsqrtd.vvl
llvm.ve.vl.vrsqrtd.vvvl
llvm.ve.vl.vrsqrtdnex.vvl
llvm.ve.vl.vrsqrtdnex.vvvl
llvm.ve.vl.vrsqrts.vvl
llvm.ve.vl.vrsqrts.vvvl
llvm.ve.vl.vrsqrtsnex.vvl
llvm.ve.vl.vrsqrtsnex.vvvl
llvm.ve.vl.vrxor.vvl
llvm.ve.vl.vrxor.vvml
llvm.ve.vl.vsc.vvssl
llvm.ve.vl.vsc.vvssml
llvm.ve.vl.vscl.vvssl
llvm.ve.vl.vscl.vvssml
llvm.ve.vl.vsclnc.vvssl
llvm.ve.vl.vsclnc.vvssml
llvm.ve.vl.vsclncot.vvssl
llvm.ve.vl.vsclncot.vvssml
llvm.ve.vl.vsclot.vvssl
llvm.ve.vl.vsclot.vvssml
llvm.ve.vl.vscnc.vvssl
llvm.ve.vl.vscnc.vvssml
llvm.ve.vl.vscncot.vvssl
llvm.ve.vl.vscncot.vvssml
llvm.ve.vl.vscot.vvssl
llvm.ve.vl.vscot.vvssml
llvm.ve.vl.vscu.vvssl
llvm.ve.vl.vscu.vvssml
llvm.ve.vl.vscunc.vvssl
llvm.ve.vl.vscunc.vvssml
llvm.ve.vl.vscuncot.vvssl
llvm.ve.vl.vscuncot.vvssml
llvm.ve.vl.vscuot.vvssl
llvm.ve.vl.vscuot.vvssml
llvm.ve.vl.vseq.vl
llvm.ve.vl.vseq.vvl
llvm.ve.vl.vsfa.vvssl
llvm.ve.vl.vsfa.vvssmvl
llvm.ve.vl.vsfa.vvssvl
llvm.ve.vl.vshf.vvvsl
llvm.ve.vl.vshf.vvvsvl
llvm.ve.vl.vslal.vvsl
llvm.ve.vl.vslal.vvsmvl
llvm.ve.vl.vslal.vvsvl
llvm.ve.vl.vslal.vvvl
llvm.ve.vl.vslal.vvvmvl
llvm.ve.vl.vslal.vvvvl
llvm.ve.vl.vslawsx.vvsl
llvm.ve.vl.vslawsx.vvsmvl
llvm.ve.vl.vslawsx.vvsvl
llvm.ve.vl.vslawsx.vvvl
llvm.ve.vl.vslawsx.vvvmvl
llvm.ve.vl.vslawsx.vvvvl
llvm.ve.vl.vslawzx.vvsl
llvm.ve.vl.vslawzx.vvsmvl
llvm.ve.vl.vslawzx.vvsvl
llvm.ve.vl.vslawzx.vvvl
llvm.ve.vl.vslawzx.vvvmvl
llvm.ve.vl.vslawzx.vvvvl
llvm.ve.vl.vsll.vvsl
llvm.ve.vl.vsll.vvsmvl
llvm.ve.vl.vsll.vvsvl
llvm.ve.vl.vsll.vvvl
llvm.ve.vl.vsll.vvvmvl
llvm.ve.vl.vsll.vvvvl
llvm.ve.vl.vsral.vvsl
llvm.ve.vl.vsral.vvsmvl
llvm.ve.vl.vsral.vvsvl
llvm.ve.vl.vsral.vvvl
llvm.ve.vl.vsral.vvvmvl
llvm.ve.vl.vsral.vvvvl
llvm.ve.vl.vsrawsx.vvsl
llvm.ve.vl.vsrawsx.vvsmvl
llvm.ve.vl.vsrawsx.vvsvl
llvm.ve.vl.vsrawsx.vvvl
llvm.ve.vl.vsrawsx.vvvmvl
llvm.ve.vl.vsrawsx.vvvvl
llvm.ve.vl.vsrawzx.vvsl
llvm.ve.vl.vsrawzx.vvsmvl
llvm.ve.vl.vsrawzx.vvsvl
llvm.ve.vl.vsrawzx.vvvl
llvm.ve.vl.vsrawzx.vvvmvl
llvm.ve.vl.vsrawzx.vvvvl
llvm.ve.vl.vsrl.vvsl
llvm.ve.vl.vsrl.vvsmvl
llvm.ve.vl.vsrl.vvsvl
llvm.ve.vl.vsrl.vvvl
llvm.ve.vl.vsrl.vvvmvl
llvm.ve.vl.vsrl.vvvvl
llvm.ve.vl.vst.vssl
llvm.ve.vl.vst.vssml
llvm.ve.vl.vst2d.vssl
llvm.ve.vl.vst2d.vssml
llvm.ve.vl.vst2dnc.vssl
llvm.ve.vl.vst2dnc.vssml
llvm.ve.vl.vst2dncot.vssl
llvm.ve.vl.vst2dncot.vssml
llvm.ve.vl.vst2dot.vssl
llvm.ve.vl.vst2dot.vssml
llvm.ve.vl.vstl.vssl
llvm.ve.vl.vstl.vssml
llvm.ve.vl.vstl2d.vssl
llvm.ve.vl.vstl2d.vssml
llvm.ve.vl.vstl2dnc.vssl
llvm.ve.vl.vstl2dnc.vssml
llvm.ve.vl.vstl2dncot.vssl
llvm.ve.vl.vstl2dncot.vssml
llvm.ve.vl.vstl2dot.vssl
llvm.ve.vl.vstl2dot.vssml
llvm.ve.vl.vstlnc.vssl
llvm.ve.vl.vstlnc.vssml
llvm.ve.vl.vstlncot.vssl
llvm.ve.vl.vstlncot.vssml
llvm.ve.vl.vstlot.vssl
llvm.ve.vl.vstlot.vssml
llvm.ve.vl.vstnc.vssl
llvm.ve.vl.vstnc.vssml
llvm.ve.vl.vstncot.vssl
llvm.ve.vl.vstncot.vssml
llvm.ve.vl.vstot.vssl
llvm.ve.vl.vstot.vssml
llvm.ve.vl.vstu.vssl
llvm.ve.vl.vstu.vssml
llvm.ve.vl.vstu2d.vssl
llvm.ve.vl.vstu2d.vssml
llvm.ve.vl.vstu2dnc.vssl
llvm.ve.vl.vstu2dnc.vssml
llvm.ve.vl.vstu2dncot.vssl
llvm.ve.vl.vstu2dncot.vssml
llvm.ve.vl.vstu2dot.vssl
llvm.ve.vl.vstu2dot.vssml
llvm.ve.vl.vstunc.vssl
llvm.ve.vl.vstunc.vssml
llvm.ve.vl.vstuncot.vssl
llvm.ve.vl.vstuncot.vssml
llvm.ve.vl.vstuot.vssl
llvm.ve.vl.vstuot.vssml
llvm.ve.vl.vsubsl.vsvl
llvm.ve.vl.vsubsl.vsvmvl
llvm.ve.vl.vsubsl.vsvvl
llvm.ve.vl.vsubsl.vvvl
llvm.ve.vl.vsubsl.vvvmvl
llvm.ve.vl.vsubsl.vvvvl
llvm.ve.vl.vsubswsx.vsvl
llvm.ve.vl.vsubswsx.vsvmvl
llvm.ve.vl.vsubswsx.vsvvl
llvm.ve.vl.vsubswsx.vvvl
llvm.ve.vl.vsubswsx.vvvmvl
llvm.ve.vl.vsubswsx.vvvvl
llvm.ve.vl.vsubswzx.vsvl
llvm.ve.vl.vsubswzx.vsvmvl
llvm.ve.vl.vsubswzx.vsvvl
llvm.ve.vl.vsubswzx.vvvl
llvm.ve.vl.vsubswzx.vvvmvl
llvm.ve.vl.vsubswzx.vvvvl
llvm.ve.vl.vsubul.vsvl
llvm.ve.vl.vsubul.vsvmvl
llvm.ve.vl.vsubul.vsvvl
llvm.ve.vl.vsubul.vvvl
llvm.ve.vl.vsubul.vvvmvl
llvm.ve.vl.vsubul.vvvvl
llvm.ve.vl.vsubuw.vsvl
llvm.ve.vl.vsubuw.vsvmvl
llvm.ve.vl.vsubuw.vsvvl
llvm.ve.vl.vsubuw.vvvl
llvm.ve.vl.vsubuw.vvvmvl
llvm.ve.vl.vsubuw.vvvvl
llvm.ve.vl.vsuml.vvl
llvm.ve.vl.vsuml.vvml
llvm.ve.vl.vsumwsx.vvl
llvm.ve.vl.vsumwsx.vvml
llvm.ve.vl.vsumwzx.vvl
llvm.ve.vl.vsumwzx.vvml
llvm.ve.vl.vxor.vsvl
llvm.ve.vl.vxor.vsvmvl
llvm.ve.vl.vxor.vsvvl
llvm.ve.vl.vxor.vvvl
llvm.ve.vl.vxor.vvvmvl
llvm.ve.vl.vxor.vvvvl
llvm.ve.vl.xorm.MMM
llvm.ve.vl.xorm.mmm
llvm.wasm.alltrue
llvm.wasm.anytrue
llvm.wasm.avgr.unsigned
llvm.wasm.bitmask
llvm.wasm.bitselect
llvm.wasm.ceil
llvm.wasm.dot
llvm.wasm.eq
llvm.wasm.extadd.pairwise.signed
llvm.wasm.extadd.pairwise.unsigned
llvm.wasm.extmul.high.signed
llvm.wasm.extmul.high.unsigned
llvm.wasm.extmul.low.signed
llvm.wasm.extmul.low.unsigned
llvm.wasm.extract.exception
llvm.wasm.floor
llvm.wasm.get.ehselector
llvm.wasm.get.exception
llvm.wasm.landingpad.index
llvm.wasm.load16.lane
llvm.wasm.load32.lane
llvm.wasm.load32.zero
llvm.wasm.load64.lane
llvm.wasm.load64.zero
llvm.wasm.load8.lane
llvm.wasm.lsda
llvm.wasm.memory.atomic.notify
llvm.wasm.memory.atomic.wait32
llvm.wasm.memory.atomic.wait64
llvm.wasm.memory.grow
llvm.wasm.memory.size
llvm.wasm.narrow.signed
llvm.wasm.narrow.unsigned
llvm.wasm.nearest
llvm.wasm.pmax
llvm.wasm.pmin
llvm.wasm.popcnt
llvm.wasm.prefetch.nt
llvm.wasm.prefetch.t
llvm.wasm.q15mulr.saturate.signed
llvm.wasm.qfma
llvm.wasm.qfms
llvm.wasm.rethrow.in.catch
llvm.wasm.shuffle
llvm.wasm.signselect
llvm.wasm.store16.lane
llvm.wasm.store32.lane
llvm.wasm.store64.lane
llvm.wasm.store8.lane
llvm.wasm.sub.saturate.signed
llvm.wasm.sub.saturate.unsigned
llvm.wasm.swizzle
llvm.wasm.throw
llvm.wasm.tls.align
llvm.wasm.tls.base
llvm.wasm.tls.size
llvm.wasm.trunc
llvm.wasm.trunc.saturate.signed
llvm.wasm.trunc.saturate.unsigned
llvm.wasm.trunc.signed
llvm.wasm.trunc.unsigned
llvm.wasm.widen.high.signed
llvm.wasm.widen.high.unsigned
llvm.wasm.widen.low.signed
llvm.wasm.widen.low.unsigned
llvm.x86.3dnow.pavgusb
llvm.x86.3dnow.pf2id
llvm.x86.3dnow.pfacc
llvm.x86.3dnow.pfadd
llvm.x86.3dnow.pfcmpeq
llvm.x86.3dnow.pfcmpge
llvm.x86.3dnow.pfcmpgt
llvm.x86.3dnow.pfmax
llvm.x86.3dnow.pfmin
llvm.x86.3dnow.pfmul
llvm.x86.3dnow.pfrcp
llvm.x86.3dnow.pfrcpit1
llvm.x86.3dnow.pfrcpit2
llvm.x86.3dnow.pfrsqit1
llvm.x86.3dnow.pfrsqrt
llvm.x86.3dnow.pfsub
llvm.x86.3dnow.pfsubr
llvm.x86.3dnow.pi2fd
llvm.x86.3dnow.pmulhrw
llvm.x86.3dnowa.pf2iw
llvm.x86.3dnowa.pfnacc
llvm.x86.3dnowa.pfpnacc
llvm.x86.3dnowa.pi2fw
llvm.x86.3dnowa.pswapd
llvm.x86.addcarry.32
llvm.x86.addcarry.64
llvm.x86.aesdec128kl
llvm.x86.aesdec256kl
llvm.x86.aesdecwide128kl
llvm.x86.aesdecwide256kl
llvm.x86.aesenc128kl
llvm.x86.aesenc256kl
llvm.x86.aesencwide128kl
llvm.x86.aesencwide256kl
llvm.x86.aesni.aesdec
llvm.x86.aesni.aesdec.256
llvm.x86.aesni.aesdec.512
llvm.x86.aesni.aesdeclast
llvm.x86.aesni.aesdeclast.256
llvm.x86.aesni.aesdeclast.512
llvm.x86.aesni.aesenc
llvm.x86.aesni.aesenc.256
llvm.x86.aesni.aesenc.512
llvm.x86.aesni.aesenclast
llvm.x86.aesni.aesenclast.256
llvm.x86.aesni.aesenclast.512
llvm.x86.aesni.aesimc
llvm.x86.aesni.aeskeygenassist
llvm.x86.avx.addsub.pd.256
llvm.x86.avx.addsub.ps.256
llvm.x86.avx.blendv.pd.256
llvm.x86.avx.blendv.ps.256
llvm.x86.avx.cmp.pd.256
llvm.x86.avx.cmp.ps.256
llvm.x86.avx.cvt.pd2.ps.256
llvm.x86.avx.cvt.pd2dq.256
llvm.x86.avx.cvt.ps2dq.256
llvm.x86.avx.cvtt.pd2dq.256
llvm.x86.avx.cvtt.ps2dq.256
llvm.x86.avx.dp.ps.256
llvm.x86.avx.hadd.pd.256
llvm.x86.avx.hadd.ps.256
llvm.x86.avx.hsub.pd.256
llvm.x86.avx.hsub.ps.256
llvm.x86.avx.ldu.dq.256
llvm.x86.avx.maskload.pd
llvm.x86.avx.maskload.pd.256
llvm.x86.avx.maskload.ps
llvm.x86.avx.maskload.ps.256
llvm.x86.avx.maskstore.pd
llvm.x86.avx.maskstore.pd.256
llvm.x86.avx.maskstore.ps
llvm.x86.avx.maskstore.ps.256
llvm.x86.avx.max.pd.256
llvm.x86.avx.max.ps.256
llvm.x86.avx.min.pd.256
llvm.x86.avx.min.ps.256
llvm.x86.avx.movmsk.pd.256
llvm.x86.avx.movmsk.ps.256
llvm.x86.avx.ptestc.256
llvm.x86.avx.ptestnzc.256
llvm.x86.avx.ptestz.256
llvm.x86.avx.rcp.ps.256
llvm.x86.avx.round.pd.256
llvm.x86.avx.round.ps.256
llvm.x86.avx.rsqrt.ps.256
llvm.x86.avx.vpermilvar.pd
llvm.x86.avx.vpermilvar.pd.256
llvm.x86.avx.vpermilvar.ps
llvm.x86.avx.vpermilvar.ps.256
llvm.x86.avx.vtestc.pd
llvm.x86.avx.vtestc.pd.256
llvm.x86.avx.vtestc.ps
llvm.x86.avx.vtestc.ps.256
llvm.x86.avx.vtestnzc.pd
llvm.x86.avx.vtestnzc.pd.256
llvm.x86.avx.vtestnzc.ps
llvm.x86.avx.vtestnzc.ps.256
llvm.x86.avx.vtestz.pd
llvm.x86.avx.vtestz.pd.256
llvm.x86.avx.vtestz.ps
llvm.x86.avx.vtestz.ps.256
llvm.x86.avx.vzeroall
llvm.x86.avx.vzeroupper
llvm.x86.avx2.gather.d.d
llvm.x86.avx2.gather.d.d.256
llvm.x86.avx2.gather.d.pd
llvm.x86.avx2.gather.d.pd.256
llvm.x86.avx2.gather.d.ps
llvm.x86.avx2.gather.d.ps.256
llvm.x86.avx2.gather.d.q
llvm.x86.avx2.gather.d.q.256
llvm.x86.avx2.gather.q.d
llvm.x86.avx2.gather.q.d.256
llvm.x86.avx2.gather.q.pd
llvm.x86.avx2.gather.q.pd.256
llvm.x86.avx2.gather.q.ps
llvm.x86.avx2.gather.q.ps.256
llvm.x86.avx2.gather.q.q
llvm.x86.avx2.gather.q.q.256
llvm.x86.avx2.maskload.d
llvm.x86.avx2.maskload.d.256
llvm.x86.avx2.maskload.q
llvm.x86.avx2.maskload.q.256
llvm.x86.avx2.maskstore.d
llvm.x86.avx2.maskstore.d.256
llvm.x86.avx2.maskstore.q
llvm.x86.avx2.maskstore.q.256
llvm.x86.avx2.mpsadbw
llvm.x86.avx2.packssdw
llvm.x86.avx2.packsswb
llvm.x86.avx2.packusdw
llvm.x86.avx2.packuswb
llvm.x86.avx2.pavg.b
llvm.x86.avx2.pavg.w
llvm.x86.avx2.pblendvb
llvm.x86.avx2.permd
llvm.x86.avx2.permps
llvm.x86.avx2.phadd.d
llvm.x86.avx2.phadd.sw
llvm.x86.avx2.phadd.w
llvm.x86.avx2.phsub.d
llvm.x86.avx2.phsub.sw
llvm.x86.avx2.phsub.w
llvm.x86.avx2.pmadd.ub.sw
llvm.x86.avx2.pmadd.wd
llvm.x86.avx2.pmovmskb
llvm.x86.avx2.pmul.hr.sw
llvm.x86.avx2.pmulh.w
llvm.x86.avx2.pmulhu.w
llvm.x86.avx2.psad.bw
llvm.x86.avx2.pshuf.b
llvm.x86.avx2.psign.b
llvm.x86.avx2.psign.d
llvm.x86.avx2.psign.w
llvm.x86.avx2.psll.d
llvm.x86.avx2.psll.q
llvm.x86.avx2.psll.w
llvm.x86.avx2.pslli.d
llvm.x86.avx2.pslli.q
llvm.x86.avx2.pslli.w
llvm.x86.avx2.psllv.d
llvm.x86.avx2.psllv.d.256
llvm.x86.avx2.psllv.q
llvm.x86.avx2.psllv.q.256
llvm.x86.avx2.psra.d
llvm.x86.avx2.psra.w
llvm.x86.avx2.psrai.d
llvm.x86.avx2.psrai.w
llvm.x86.avx2.psrav.d
llvm.x86.avx2.psrav.d.256
llvm.x86.avx2.psrl.d
llvm.x86.avx2.psrl.q
llvm.x86.avx2.psrl.w
llvm.x86.avx2.psrli.d
llvm.x86.avx2.psrli.q
llvm.x86.avx2.psrli.w
llvm.x86.avx2.psrlv.d
llvm.x86.avx2.psrlv.d.256
llvm.x86.avx2.psrlv.q
llvm.x86.avx2.psrlv.q.256
llvm.x86.avx512.add.pd.512
llvm.x86.avx512.add.ps.512
llvm.x86.avx512.broadcastmb.128
llvm.x86.avx512.broadcastmb.256
llvm.x86.avx512.broadcastmb.512
llvm.x86.avx512.broadcastmw.128
llvm.x86.avx512.broadcastmw.256
llvm.x86.avx512.broadcastmw.512
llvm.x86.avx512.conflict.d.128
llvm.x86.avx512.conflict.d.256
llvm.x86.avx512.conflict.d.512
llvm.x86.avx512.conflict.q.128
llvm.x86.avx512.conflict.q.256
llvm.x86.avx512.conflict.q.512
llvm.x86.avx512.cvtsi2sd64
llvm.x86.avx512.cvtsi2ss32
llvm.x86.avx512.cvtsi2ss64
llvm.x86.avx512.cvttsd2si
llvm.x86.avx512.cvttsd2si64
llvm.x86.avx512.cvttsd2usi
llvm.x86.avx512.cvttsd2usi64
llvm.x86.avx512.cvttss2si
llvm.x86.avx512.cvttss2si64
llvm.x86.avx512.cvttss2usi
llvm.x86.avx512.cvttss2usi64
llvm.x86.avx512.cvtusi2ss
llvm.x86.avx512.cvtusi642sd
llvm.x86.avx512.cvtusi642ss
llvm.x86.avx512.dbpsadbw.128
llvm.x86.avx512.dbpsadbw.256
llvm.x86.avx512.dbpsadbw.512
llvm.x86.avx512.div.pd.512
llvm.x86.avx512.div.ps.512
llvm.x86.avx512.exp2.pd
llvm.x86.avx512.exp2.ps
llvm.x86.avx512.fpclass.pd.128
llvm.x86.avx512.fpclass.pd.256
llvm.x86.avx512.fpclass.pd.512
llvm.x86.avx512.fpclass.ps.128
llvm.x86.avx512.fpclass.ps.256
llvm.x86.avx512.fpclass.ps.512
llvm.x86.avx512.gather.dpd.512
llvm.x86.avx512.gather.dpi.512
llvm.x86.avx512.gather.dpq.512
llvm.x86.avx512.gather.dps.512
llvm.x86.avx512.gather.qpd.512
llvm.x86.avx512.gather.qpi.512
llvm.x86.avx512.gather.qpq.512
llvm.x86.avx512.gather.qps.512
llvm.x86.avx512.gather3div2.df
llvm.x86.avx512.gather3div2.di
llvm.x86.avx512.gather3div4.df
llvm.x86.avx512.gather3div4.di
llvm.x86.avx512.gather3div4.sf
llvm.x86.avx512.gather3div4.si
llvm.x86.avx512.gather3div8.sf
llvm.x86.avx512.gather3div8.si
llvm.x86.avx512.gather3siv2.df
llvm.x86.avx512.gather3siv2.di
llvm.x86.avx512.gather3siv4.df
llvm.x86.avx512.gather3siv4.di
llvm.x86.avx512.gather3siv4.sf
llvm.x86.avx512.gather3siv4.si
llvm.x86.avx512.gather3siv8.sf
llvm.x86.avx512.gather3siv8.si
llvm.x86.avx512.gatherpf.dpd.512
llvm.x86.avx512.gatherpf.dps.512
llvm.x86.avx512.gatherpf.qpd.512
llvm.x86.avx512.gatherpf.qps.512
llvm.x86.avx512.kadd.b
llvm.x86.avx512.kadd.d
llvm.x86.avx512.kadd.q
llvm.x86.avx512.kadd.w
llvm.x86.avx512.ktestc.b
llvm.x86.avx512.ktestc.d
llvm.x86.avx512.ktestc.q
llvm.x86.avx512.ktestc.w
llvm.x86.avx512.ktestz.b
llvm.x86.avx512.ktestz.d
llvm.x86.avx512.ktestz.q
llvm.x86.avx512.ktestz.w
llvm.x86.avx512.mask.add.sd.round
llvm.x86.avx512.mask.add.ss.round
llvm.x86.avx512.mask.cmp.pd.128
llvm.x86.avx512.mask.cmp.pd.256
llvm.x86.avx512.mask.cmp.pd.512
llvm.x86.avx512.mask.cmp.ps.128
llvm.x86.avx512.mask.cmp.ps.256
llvm.x86.avx512.mask.cmp.ps.512
llvm.x86.avx512.mask.cmp.sd
llvm.x86.avx512.mask.cmp.ss
llvm.x86.avx512.mask.compress
llvm.x86.avx512.mask.cvtpd2dq.128
llvm.x86.avx512.mask.cvtpd2dq.512
llvm.x86.avx512.mask.cvtpd2ps
llvm.x86.avx512.mask.cvtpd2ps.512
llvm.x86.avx512.mask.cvtpd2qq.128
llvm.x86.avx512.mask.cvtpd2qq.256
llvm.x86.avx512.mask.cvtpd2qq.512
llvm.x86.avx512.mask.cvtpd2udq.128
llvm.x86.avx512.mask.cvtpd2udq.256
llvm.x86.avx512.mask.cvtpd2udq.512
llvm.x86.avx512.mask.cvtpd2uqq.128
llvm.x86.avx512.mask.cvtpd2uqq.256
llvm.x86.avx512.mask.cvtpd2uqq.512
llvm.x86.avx512.mask.cvtps2dq.128
llvm.x86.avx512.mask.cvtps2dq.256
llvm.x86.avx512.mask.cvtps2dq.512
llvm.x86.avx512.mask.cvtps2pd.512
llvm.x86.avx512.mask.cvtps2qq.128
llvm.x86.avx512.mask.cvtps2qq.256
llvm.x86.avx512.mask.cvtps2qq.512
llvm.x86.avx512.mask.cvtps2udq.128
llvm.x86.avx512.mask.cvtps2udq.256
llvm.x86.avx512.mask.cvtps2udq.512
llvm.x86.avx512.mask.cvtps2uqq.128
llvm.x86.avx512.mask.cvtps2uqq.256
llvm.x86.avx512.mask.cvtps2uqq.512
llvm.x86.avx512.mask.cvtqq2ps.128
llvm.x86.avx512.mask.cvtsd2ss.round
llvm.x86.avx512.mask.cvtss2sd.round
llvm.x86.avx512.mask.cvttpd2dq.128
llvm.x86.avx512.mask.cvttpd2dq.512
llvm.x86.avx512.mask.cvttpd2qq.128
llvm.x86.avx512.mask.cvttpd2qq.256
llvm.x86.avx512.mask.cvttpd2qq.512
llvm.x86.avx512.mask.cvttpd2udq.128
llvm.x86.avx512.mask.cvttpd2udq.256
llvm.x86.avx512.mask.cvttpd2udq.512
llvm.x86.avx512.mask.cvttpd2uqq.128
llvm.x86.avx512.mask.cvttpd2uqq.256
llvm.x86.avx512.mask.cvttpd2uqq.512
llvm.x86.avx512.mask.cvttps2dq.512
llvm.x86.avx512.mask.cvttps2qq.128
llvm.x86.avx512.mask.cvttps2qq.256
llvm.x86.avx512.mask.cvttps2qq.512
llvm.x86.avx512.mask.cvttps2udq.128
llvm.x86.avx512.mask.cvttps2udq.256
llvm.x86.avx512.mask.cvttps2udq.512
llvm.x86.avx512.mask.cvttps2uqq.128
llvm.x86.avx512.mask.cvttps2uqq.256
llvm.x86.avx512.mask.cvttps2uqq.512
llvm.x86.avx512.mask.cvtuqq2ps.128
llvm.x86.avx512.mask.div.sd.round
llvm.x86.avx512.mask.div.ss.round
llvm.x86.avx512.mask.expand
llvm.x86.avx512.mask.fixupimm.pd.128
llvm.x86.avx512.mask.fixupimm.pd.256
llvm.x86.avx512.mask.fixupimm.pd.512
llvm.x86.avx512.mask.fixupimm.ps.128
llvm.x86.avx512.mask.fixupimm.ps.256
llvm.x86.avx512.mask.fixupimm.ps.512
llvm.x86.avx512.mask.fixupimm.sd
llvm.x86.avx512.mask.fixupimm.ss
llvm.x86.avx512.mask.fpclass.sd
llvm.x86.avx512.mask.fpclass.ss
llvm.x86.avx512.mask.gather.dpd.512
llvm.x86.avx512.mask.gather.dpi.512
llvm.x86.avx512.mask.gather.dpq.512
llvm.x86.avx512.mask.gather.dps.512
llvm.x86.avx512.mask.gather.qpd.512
llvm.x86.avx512.mask.gather.qpi.512
llvm.x86.avx512.mask.gather.qpq.512
llvm.x86.avx512.mask.gather.qps.512
llvm.x86.avx512.mask.gather3div2.df
llvm.x86.avx512.mask.gather3div2.di
llvm.x86.avx512.mask.gather3div4.df
llvm.x86.avx512.mask.gather3div4.di
llvm.x86.avx512.mask.gather3div4.sf
llvm.x86.avx512.mask.gather3div4.si
llvm.x86.avx512.mask.gather3div8.sf
llvm.x86.avx512.mask.gather3div8.si
llvm.x86.avx512.mask.gather3siv2.df
llvm.x86.avx512.mask.gather3siv2.di
llvm.x86.avx512.mask.gather3siv4.df
llvm.x86.avx512.mask.gather3siv4.di
llvm.x86.avx512.mask.gather3siv4.sf
llvm.x86.avx512.mask.gather3siv4.si
llvm.x86.avx512.mask.gather3siv8.sf
llvm.x86.avx512.mask.gather3siv8.si
llvm.x86.avx512.mask.getexp.pd.128
llvm.x86.avx512.mask.getexp.pd.256
llvm.x86.avx512.mask.getexp.pd.512
llvm.x86.avx512.mask.getexp.ps.128
llvm.x86.avx512.mask.getexp.ps.256
llvm.x86.avx512.mask.getexp.ps.512
llvm.x86.avx512.mask.getexp.sd
llvm.x86.avx512.mask.getexp.ss
llvm.x86.avx512.mask.getmant.pd.128
llvm.x86.avx512.mask.getmant.pd.256
llvm.x86.avx512.mask.getmant.pd.512
llvm.x86.avx512.mask.getmant.ps.128
llvm.x86.avx512.mask.getmant.ps.256
llvm.x86.avx512.mask.getmant.ps.512
llvm.x86.avx512.mask.getmant.sd
llvm.x86.avx512.mask.getmant.ss
llvm.x86.avx512.mask.max.sd.round
llvm.x86.avx512.mask.max.ss.round
llvm.x86.avx512.mask.min.sd.round
llvm.x86.avx512.mask.min.ss.round
llvm.x86.avx512.mask.mul.sd.round
llvm.x86.avx512.mask.mul.ss.round
llvm.x86.avx512.mask.pmov.db.128
llvm.x86.avx512.mask.pmov.db.256
llvm.x86.avx512.mask.pmov.db.512
llvm.x86.avx512.mask.pmov.db.mem.128
llvm.x86.avx512.mask.pmov.db.mem.256
llvm.x86.avx512.mask.pmov.db.mem.512
llvm.x86.avx512.mask.pmov.dw.128
llvm.x86.avx512.mask.pmov.dw.256
llvm.x86.avx512.mask.pmov.dw.512
llvm.x86.avx512.mask.pmov.dw.mem.128
llvm.x86.avx512.mask.pmov.dw.mem.256
llvm.x86.avx512.mask.pmov.dw.mem.512
llvm.x86.avx512.mask.pmov.qb.128
llvm.x86.avx512.mask.pmov.qb.256
llvm.x86.avx512.mask.pmov.qb.512
llvm.x86.avx512.mask.pmov.qb.mem.128
llvm.x86.avx512.mask.pmov.qb.mem.256
llvm.x86.avx512.mask.pmov.qb.mem.512
llvm.x86.avx512.mask.pmov.qd.128
llvm.x86.avx512.mask.pmov.qd.mem.128
llvm.x86.avx512.mask.pmov.qd.mem.256
llvm.x86.avx512.mask.pmov.qd.mem.512
llvm.x86.avx512.mask.pmov.qw.128
llvm.x86.avx512.mask.pmov.qw.256
llvm.x86.avx512.mask.pmov.qw.512
llvm.x86.avx512.mask.pmov.qw.mem.128
llvm.x86.avx512.mask.pmov.qw.mem.256
llvm.x86.avx512.mask.pmov.qw.mem.512
llvm.x86.avx512.mask.pmov.wb.128
llvm.x86.avx512.mask.pmov.wb.mem.128
llvm.x86.avx512.mask.pmov.wb.mem.256
llvm.x86.avx512.mask.pmov.wb.mem.512
llvm.x86.avx512.mask.pmovs.db.128
llvm.x86.avx512.mask.pmovs.db.256
llvm.x86.avx512.mask.pmovs.db.512
llvm.x86.avx512.mask.pmovs.db.mem.128
llvm.x86.avx512.mask.pmovs.db.mem.256
llvm.x86.avx512.mask.pmovs.db.mem.512
llvm.x86.avx512.mask.pmovs.dw.128
llvm.x86.avx512.mask.pmovs.dw.256
llvm.x86.avx512.mask.pmovs.dw.512
llvm.x86.avx512.mask.pmovs.dw.mem.128
llvm.x86.avx512.mask.pmovs.dw.mem.256
llvm.x86.avx512.mask.pmovs.dw.mem.512
llvm.x86.avx512.mask.pmovs.qb.128
llvm.x86.avx512.mask.pmovs.qb.256
llvm.x86.avx512.mask.pmovs.qb.512
llvm.x86.avx512.mask.pmovs.qb.mem.128
llvm.x86.avx512.mask.pmovs.qb.mem.256
llvm.x86.avx512.mask.pmovs.qb.mem.512
llvm.x86.avx512.mask.pmovs.qd.128
llvm.x86.avx512.mask.pmovs.qd.256
llvm.x86.avx512.mask.pmovs.qd.512
llvm.x86.avx512.mask.pmovs.qd.mem.128
llvm.x86.avx512.mask.pmovs.qd.mem.256
llvm.x86.avx512.mask.pmovs.qd.mem.512
llvm.x86.avx512.mask.pmovs.qw.128
llvm.x86.avx512.mask.pmovs.qw.256
llvm.x86.avx512.mask.pmovs.qw.512
llvm.x86.avx512.mask.pmovs.qw.mem.128
llvm.x86.avx512.mask.pmovs.qw.mem.256
llvm.x86.avx512.mask.pmovs.qw.mem.512
llvm.x86.avx512.mask.pmovs.wb.128
llvm.x86.avx512.mask.pmovs.wb.256
llvm.x86.avx512.mask.pmovs.wb.512
llvm.x86.avx512.mask.pmovs.wb.mem.128
llvm.x86.avx512.mask.pmovs.wb.mem.256
llvm.x86.avx512.mask.pmovs.wb.mem.512
llvm.x86.avx512.mask.pmovus.db.128
llvm.x86.avx512.mask.pmovus.db.256
llvm.x86.avx512.mask.pmovus.db.512
llvm.x86.avx512.mask.pmovus.db.mem.128
llvm.x86.avx512.mask.pmovus.db.mem.256
llvm.x86.avx512.mask.pmovus.db.mem.512
llvm.x86.avx512.mask.pmovus.dw.128
llvm.x86.avx512.mask.pmovus.dw.256
llvm.x86.avx512.mask.pmovus.dw.512
llvm.x86.avx512.mask.pmovus.dw.mem.128
llvm.x86.avx512.mask.pmovus.dw.mem.256
llvm.x86.avx512.mask.pmovus.dw.mem.512
llvm.x86.avx512.mask.pmovus.qb.128
llvm.x86.avx512.mask.pmovus.qb.256
llvm.x86.avx512.mask.pmovus.qb.512
llvm.x86.avx512.mask.pmovus.qb.mem.128
llvm.x86.avx512.mask.pmovus.qb.mem.256
llvm.x86.avx512.mask.pmovus.qb.mem.512
llvm.x86.avx512.mask.pmovus.qd.128
llvm.x86.avx512.mask.pmovus.qd.256
llvm.x86.avx512.mask.pmovus.qd.512
llvm.x86.avx512.mask.pmovus.qd.mem.128
llvm.x86.avx512.mask.pmovus.qd.mem.256
llvm.x86.avx512.mask.pmovus.qd.mem.512
llvm.x86.avx512.mask.pmovus.qw.128
llvm.x86.avx512.mask.pmovus.qw.256
llvm.x86.avx512.mask.pmovus.qw.512
llvm.x86.avx512.mask.pmovus.qw.mem.128
llvm.x86.avx512.mask.pmovus.qw.mem.256
llvm.x86.avx512.mask.pmovus.qw.mem.512
llvm.x86.avx512.mask.pmovus.wb.128
llvm.x86.avx512.mask.pmovus.wb.256
llvm.x86.avx512.mask.pmovus.wb.512
llvm.x86.avx512.mask.pmovus.wb.mem.128
llvm.x86.avx512.mask.pmovus.wb.mem.256
llvm.x86.avx512.mask.pmovus.wb.mem.512
llvm.x86.avx512.mask.range.pd.128
llvm.x86.avx512.mask.range.pd.256
llvm.x86.avx512.mask.range.pd.512
llvm.x86.avx512.mask.range.ps.128
llvm.x86.avx512.mask.range.ps.256
llvm.x86.avx512.mask.range.ps.512
llvm.x86.avx512.mask.range.sd
llvm.x86.avx512.mask.range.ss
llvm.x86.avx512.mask.reduce.pd.128
llvm.x86.avx512.mask.reduce.pd.256
llvm.x86.avx512.mask.reduce.pd.512
llvm.x86.avx512.mask.reduce.ps.128
llvm.x86.avx512.mask.reduce.ps.256
llvm.x86.avx512.mask.reduce.ps.512
llvm.x86.avx512.mask.reduce.sd
llvm.x86.avx512.mask.reduce.ss
llvm.x86.avx512.mask.rndscale.pd.128
llvm.x86.avx512.mask.rndscale.pd.256
llvm.x86.avx512.mask.rndscale.pd.512
llvm.x86.avx512.mask.rndscale.ps.128
llvm.x86.avx512.mask.rndscale.ps.256
llvm.x86.avx512.mask.rndscale.ps.512
llvm.x86.avx512.mask.rndscale.sd
llvm.x86.avx512.mask.rndscale.ss
llvm.x86.avx512.mask.scalef.pd.128
llvm.x86.avx512.mask.scalef.pd.256
llvm.x86.avx512.mask.scalef.pd.512
llvm.x86.avx512.mask.scalef.ps.128
llvm.x86.avx512.mask.scalef.ps.256
llvm.x86.avx512.mask.scalef.ps.512
llvm.x86.avx512.mask.scalef.sd
llvm.x86.avx512.mask.scalef.ss
llvm.x86.avx512.mask.scatter.dpd.512
llvm.x86.avx512.mask.scatter.dpi.512
llvm.x86.avx512.mask.scatter.dpq.512
llvm.x86.avx512.mask.scatter.dps.512
llvm.x86.avx512.mask.scatter.qpd.512
llvm.x86.avx512.mask.scatter.qpi.512
llvm.x86.avx512.mask.scatter.qpq.512
llvm.x86.avx512.mask.scatter.qps.512
llvm.x86.avx512.mask.scatterdiv2.df
llvm.x86.avx512.mask.scatterdiv2.di
llvm.x86.avx512.mask.scatterdiv4.df
llvm.x86.avx512.mask.scatterdiv4.di
llvm.x86.avx512.mask.scatterdiv4.sf
llvm.x86.avx512.mask.scatterdiv4.si
llvm.x86.avx512.mask.scatterdiv8.sf
llvm.x86.avx512.mask.scatterdiv8.si
llvm.x86.avx512.mask.scattersiv2.df
llvm.x86.avx512.mask.scattersiv2.di
llvm.x86.avx512.mask.scattersiv4.df
llvm.x86.avx512.mask.scattersiv4.di
llvm.x86.avx512.mask.scattersiv4.sf
llvm.x86.avx512.mask.scattersiv4.si
llvm.x86.avx512.mask.scattersiv8.sf
llvm.x86.avx512.mask.scattersiv8.si
llvm.x86.avx512.mask.sqrt.sd
llvm.x86.avx512.mask.sqrt.ss
llvm.x86.avx512.mask.sub.sd.round
llvm.x86.avx512.mask.sub.ss.round
llvm.x86.avx512.mask.vcvtph2ps.512
llvm.x86.avx512.mask.vcvtps2ph.128
llvm.x86.avx512.mask.vcvtps2ph.256
llvm.x86.avx512.mask.vcvtps2ph.512
llvm.x86.avx512.maskz.fixupimm.pd.128
llvm.x86.avx512.maskz.fixupimm.pd.256
llvm.x86.avx512.maskz.fixupimm.pd.512
llvm.x86.avx512.maskz.fixupimm.ps.128
llvm.x86.avx512.maskz.fixupimm.ps.256
llvm.x86.avx512.maskz.fixupimm.ps.512
llvm.x86.avx512.maskz.fixupimm.sd
llvm.x86.avx512.maskz.fixupimm.ss
llvm.x86.avx512.max.pd.512
llvm.x86.avx512.max.ps.512
llvm.x86.avx512.min.pd.512
llvm.x86.avx512.min.ps.512
llvm.x86.avx512.mul.pd.512
llvm.x86.avx512.mul.ps.512
llvm.x86.avx512.packssdw.512
llvm.x86.avx512.packsswb.512
llvm.x86.avx512.packusdw.512
llvm.x86.avx512.packuswb.512
llvm.x86.avx512.pavg.b.512
llvm.x86.avx512.pavg.w.512
llvm.x86.avx512.permvar.df.256
llvm.x86.avx512.permvar.df.512
llvm.x86.avx512.permvar.di.256
llvm.x86.avx512.permvar.di.512
llvm.x86.avx512.permvar.hi.128
llvm.x86.avx512.permvar.hi.256
llvm.x86.avx512.permvar.hi.512
llvm.x86.avx512.permvar.qi.128
llvm.x86.avx512.permvar.qi.256
llvm.x86.avx512.permvar.qi.512
llvm.x86.avx512.permvar.sf.512
llvm.x86.avx512.permvar.si.512
llvm.x86.avx512.pmaddubs.w.512
llvm.x86.avx512.pmaddw.d.512
llvm.x86.avx512.pmul.hr.sw.512
llvm.x86.avx512.pmulh.w.512
llvm.x86.avx512.pmulhu.w.512
llvm.x86.avx512.pmultishift.qb.128
llvm.x86.avx512.pmultishift.qb.256
llvm.x86.avx512.pmultishift.qb.512
llvm.x86.avx512.psad.bw.512
llvm.x86.avx512.pshuf.b.512
llvm.x86.avx512.psll.d.512
llvm.x86.avx512.psll.q.512
llvm.x86.avx512.psll.w.512
llvm.x86.avx512.pslli.d.512
llvm.x86.avx512.pslli.q.512
llvm.x86.avx512.pslli.w.512
llvm.x86.avx512.psllv.d.512
llvm.x86.avx512.psllv.q.512
llvm.x86.avx512.psllv.w.128
llvm.x86.avx512.psllv.w.256
llvm.x86.avx512.psllv.w.512
llvm.x86.avx512.psra.d.512
llvm.x86.avx512.psra.q.128
llvm.x86.avx512.psra.q.256
llvm.x86.avx512.psra.q.512
llvm.x86.avx512.psra.w.512
llvm.x86.avx512.psrai.d.512
llvm.x86.avx512.psrai.q.128
llvm.x86.avx512.psrai.q.256
llvm.x86.avx512.psrai.q.512
llvm.x86.avx512.psrai.w.512
llvm.x86.avx512.psrav.d.512
llvm.x86.avx512.psrav.q.128
llvm.x86.avx512.psrav.q.256
llvm.x86.avx512.psrav.q.512
llvm.x86.avx512.psrav.w.128
llvm.x86.avx512.psrav.w.256
llvm.x86.avx512.psrav.w.512
llvm.x86.avx512.psrl.d.512
llvm.x86.avx512.psrl.q.512
llvm.x86.avx512.psrl.w.512
llvm.x86.avx512.psrli.d.512
llvm.x86.avx512.psrli.q.512
llvm.x86.avx512.psrli.w.512
llvm.x86.avx512.psrlv.d.512
llvm.x86.avx512.psrlv.q.512
llvm.x86.avx512.psrlv.w.128
llvm.x86.avx512.psrlv.w.256
llvm.x86.avx512.psrlv.w.512
llvm.x86.avx512.pternlog.d.128
llvm.x86.avx512.pternlog.d.256
llvm.x86.avx512.pternlog.d.512
llvm.x86.avx512.pternlog.q.128
llvm.x86.avx512.pternlog.q.256
llvm.x86.avx512.pternlog.q.512
llvm.x86.avx512.rcp14.pd.128
llvm.x86.avx512.rcp14.pd.256
llvm.x86.avx512.rcp14.pd.512
llvm.x86.avx512.rcp14.ps.128
llvm.x86.avx512.rcp14.ps.256
llvm.x86.avx512.rcp14.ps.512
llvm.x86.avx512.rcp14.sd
llvm.x86.avx512.rcp14.ss
llvm.x86.avx512.rcp28.pd
llvm.x86.avx512.rcp28.ps
llvm.x86.avx512.rcp28.sd
llvm.x86.avx512.rcp28.ss
llvm.x86.avx512.rsqrt14.pd.128
llvm.x86.avx512.rsqrt14.pd.256
llvm.x86.avx512.rsqrt14.pd.512
llvm.x86.avx512.rsqrt14.ps.128
llvm.x86.avx512.rsqrt14.ps.256
llvm.x86.avx512.rsqrt14.ps.512
llvm.x86.avx512.rsqrt14.sd
llvm.x86.avx512.rsqrt14.ss
llvm.x86.avx512.rsqrt28.pd
llvm.x86.avx512.rsqrt28.ps
llvm.x86.avx512.rsqrt28.sd
llvm.x86.avx512.rsqrt28.ss
llvm.x86.avx512.scatter.dpd.512
llvm.x86.avx512.scatter.dpi.512
llvm.x86.avx512.scatter.dpq.512
llvm.x86.avx512.scatter.dps.512
llvm.x86.avx512.scatter.qpd.512
llvm.x86.avx512.scatter.qpi.512
llvm.x86.avx512.scatter.qpq.512
llvm.x86.avx512.scatter.qps.512
llvm.x86.avx512.scatterdiv2.df
llvm.x86.avx512.scatterdiv2.di
llvm.x86.avx512.scatterdiv4.df
llvm.x86.avx512.scatterdiv4.di
llvm.x86.avx512.scatterdiv4.sf
llvm.x86.avx512.scatterdiv4.si
llvm.x86.avx512.scatterdiv8.sf
llvm.x86.avx512.scatterdiv8.si
llvm.x86.avx512.scatterpf.dpd.512
llvm.x86.avx512.scatterpf.dps.512
llvm.x86.avx512.scatterpf.qpd.512
llvm.x86.avx512.scatterpf.qps.512
llvm.x86.avx512.scattersiv2.df
llvm.x86.avx512.scattersiv2.di
llvm.x86.avx512.scattersiv4.df
llvm.x86.avx512.scattersiv4.di
llvm.x86.avx512.scattersiv4.sf
llvm.x86.avx512.scattersiv4.si
llvm.x86.avx512.scattersiv8.sf
llvm.x86.avx512.scattersiv8.si
llvm.x86.avx512.sitofp.round
llvm.x86.avx512.sqrt.pd.512
llvm.x86.avx512.sqrt.ps.512
llvm.x86.avx512.sub.pd.512
llvm.x86.avx512.sub.ps.512
llvm.x86.avx512.uitofp.round
llvm.x86.avx512.vcomi.sd
llvm.x86.avx512.vcomi.ss
llvm.x86.avx512.vcvtsd2si32
llvm.x86.avx512.vcvtsd2si64
llvm.x86.avx512.vcvtsd2usi32
llvm.x86.avx512.vcvtsd2usi64
llvm.x86.avx512.vcvtss2si32
llvm.x86.avx512.vcvtss2si64
llvm.x86.avx512.vcvtss2usi32
llvm.x86.avx512.vcvtss2usi64
llvm.x86.avx512.vfmadd.f32
llvm.x86.avx512.vfmadd.f64
llvm.x86.avx512.vfmadd.pd.512
llvm.x86.avx512.vfmadd.ps.512
llvm.x86.avx512.vfmaddsub.pd.512
llvm.x86.avx512.vfmaddsub.ps.512
llvm.x86.avx512.vp2intersect.d.128
llvm.x86.avx512.vp2intersect.d.256
llvm.x86.avx512.vp2intersect.d.512
llvm.x86.avx512.vp2intersect.q.128
llvm.x86.avx512.vp2intersect.q.256
llvm.x86.avx512.vp2intersect.q.512
llvm.x86.avx512.vpdpbusd.128
llvm.x86.avx512.vpdpbusd.256
llvm.x86.avx512.vpdpbusd.512
llvm.x86.avx512.vpdpbusds.128
llvm.x86.avx512.vpdpbusds.256
llvm.x86.avx512.vpdpbusds.512
llvm.x86.avx512.vpdpwssd.128
llvm.x86.avx512.vpdpwssd.256
llvm.x86.avx512.vpdpwssd.512
llvm.x86.avx512.vpdpwssds.128
llvm.x86.avx512.vpdpwssds.256
llvm.x86.avx512.vpdpwssds.512
llvm.x86.avx512.vpermi2var.d.128
llvm.x86.avx512.vpermi2var.d.256
llvm.x86.avx512.vpermi2var.d.512
llvm.x86.avx512.vpermi2var.hi.128
llvm.x86.avx512.vpermi2var.hi.256
llvm.x86.avx512.vpermi2var.hi.512
llvm.x86.avx512.vpermi2var.pd.128
llvm.x86.avx512.vpermi2var.pd.256
llvm.x86.avx512.vpermi2var.pd.512
llvm.x86.avx512.vpermi2var.ps.128
llvm.x86.avx512.vpermi2var.ps.256
llvm.x86.avx512.vpermi2var.ps.512
llvm.x86.avx512.vpermi2var.q.128
llvm.x86.avx512.vpermi2var.q.256
llvm.x86.avx512.vpermi2var.q.512
llvm.x86.avx512.vpermi2var.qi.128
llvm.x86.avx512.vpermi2var.qi.256
llvm.x86.avx512.vpermi2var.qi.512
llvm.x86.avx512.vpermilvar.pd.512
llvm.x86.avx512.vpermilvar.ps.512
llvm.x86.avx512.vpmadd52h.uq.128
llvm.x86.avx512.vpmadd52h.uq.256
llvm.x86.avx512.vpmadd52h.uq.512
llvm.x86.avx512.vpmadd52l.uq.128
llvm.x86.avx512.vpmadd52l.uq.256
llvm.x86.avx512.vpmadd52l.uq.512
llvm.x86.avx512.vpshufbitqmb.128
llvm.x86.avx512.vpshufbitqmb.256
llvm.x86.avx512.vpshufbitqmb.512
llvm.x86.avx512bf16.cvtne2ps2bf16.128
llvm.x86.avx512bf16.cvtne2ps2bf16.256
llvm.x86.avx512bf16.cvtne2ps2bf16.512
llvm.x86.avx512bf16.cvtneps2bf16.256
llvm.x86.avx512bf16.cvtneps2bf16.512
llvm.x86.avx512bf16.dpbf16ps.128
llvm.x86.avx512bf16.dpbf16ps.256
llvm.x86.avx512bf16.dpbf16ps.512
llvm.x86.avx512bf16.mask.cvtneps2bf16.128
llvm.x86.bmi.bextr.32
llvm.x86.bmi.bextr.64
llvm.x86.bmi.bzhi.32
llvm.x86.bmi.bzhi.64
llvm.x86.bmi.pdep.32
llvm.x86.bmi.pdep.64
llvm.x86.bmi.pext.32
llvm.x86.bmi.pext.64
llvm.x86.cldemote
llvm.x86.clflushopt
llvm.x86.clrssbsy
llvm.x86.clui
llvm.x86.clwb
llvm.x86.clzero
llvm.x86.directstore32
llvm.x86.directstore64
llvm.x86.encodekey128
llvm.x86.encodekey256
llvm.x86.enqcmd
llvm.x86.enqcmds
llvm.x86.flags.read.u32
llvm.x86.flags.read.u64
llvm.x86.flags.write.u32
llvm.x86.flags.write.u64
llvm.x86.fma.vfmaddsub.pd
llvm.x86.fma.vfmaddsub.pd.256
llvm.x86.fma.vfmaddsub.ps
llvm.x86.fma.vfmaddsub.ps.256
llvm.x86.fxrstor
llvm.x86.fxrstor64
llvm.x86.fxsave
llvm.x86.fxsave64
llvm.x86.incsspd
llvm.x86.incsspq
llvm.x86.int
llvm.x86.invpcid
llvm.x86.ldtilecfg
llvm.x86.llwpcb
llvm.x86.loadiwkey
llvm.x86.lwpins32
llvm.x86.lwpins64
llvm.x86.lwpval32
llvm.x86.lwpval64
llvm.x86.mmx.emms
llvm.x86.mmx.femms
llvm.x86.mmx.maskmovq
llvm.x86.mmx.movnt.dq
llvm.x86.mmx.packssdw
llvm.x86.mmx.packsswb
llvm.x86.mmx.packuswb
llvm.x86.mmx.padd.b
llvm.x86.mmx.padd.d
llvm.x86.mmx.padd.q
llvm.x86.mmx.padd.w
llvm.x86.mmx.padds.b
llvm.x86.mmx.padds.w
llvm.x86.mmx.paddus.b
llvm.x86.mmx.paddus.w
llvm.x86.mmx.palignr.b
llvm.x86.mmx.pand
llvm.x86.mmx.pandn
llvm.x86.mmx.pavg.b
llvm.x86.mmx.pavg.w
llvm.x86.mmx.pcmpeq.b
llvm.x86.mmx.pcmpeq.d
llvm.x86.mmx.pcmpeq.w
llvm.x86.mmx.pcmpgt.b
llvm.x86.mmx.pcmpgt.d
llvm.x86.mmx.pcmpgt.w
llvm.x86.mmx.pextr.w
llvm.x86.mmx.pinsr.w
llvm.x86.mmx.pmadd.wd
llvm.x86.mmx.pmaxs.w
llvm.x86.mmx.pmaxu.b
llvm.x86.mmx.pmins.w
llvm.x86.mmx.pminu.b
llvm.x86.mmx.pmovmskb
llvm.x86.mmx.pmulh.w
llvm.x86.mmx.pmulhu.w
llvm.x86.mmx.pmull.w
llvm.x86.mmx.pmulu.dq
llvm.x86.mmx.por
llvm.x86.mmx.psad.bw
llvm.x86.mmx.psll.d
llvm.x86.mmx.psll.q
llvm.x86.mmx.psll.w
llvm.x86.mmx.pslli.d
llvm.x86.mmx.pslli.q
llvm.x86.mmx.pslli.w
llvm.x86.mmx.psra.d
llvm.x86.mmx.psra.w
llvm.x86.mmx.psrai.d
llvm.x86.mmx.psrai.w
llvm.x86.mmx.psrl.d
llvm.x86.mmx.psrl.q
llvm.x86.mmx.psrl.w
llvm.x86.mmx.psrli.d
llvm.x86.mmx.psrli.q
llvm.x86.mmx.psrli.w
llvm.x86.mmx.psub.b
llvm.x86.mmx.psub.d
llvm.x86.mmx.psub.q
llvm.x86.mmx.psub.w
llvm.x86.mmx.psubs.b
llvm.x86.mmx.psubs.w
llvm.x86.mmx.psubus.b
llvm.x86.mmx.psubus.w
llvm.x86.mmx.punpckhbw
llvm.x86.mmx.punpckhdq
llvm.x86.mmx.punpckhwd
llvm.x86.mmx.punpcklbw
llvm.x86.mmx.punpckldq
llvm.x86.mmx.punpcklwd
llvm.x86.mmx.pxor
llvm.x86.monitorx
llvm.x86.movdir64b
llvm.x86.mwaitx
llvm.x86.pclmulqdq
llvm.x86.pclmulqdq.256
llvm.x86.pclmulqdq.512
llvm.x86.ptwrite32
llvm.x86.ptwrite64
llvm.x86.rdfsbase.32
llvm.x86.rdfsbase.64
llvm.x86.rdgsbase.32
llvm.x86.rdgsbase.64
llvm.x86.rdpid
llvm.x86.rdpkru
llvm.x86.rdpmc
llvm.x86.rdrand.16
llvm.x86.rdrand.32
llvm.x86.rdrand.64
llvm.x86.rdseed.16
llvm.x86.rdseed.32
llvm.x86.rdseed.64
llvm.x86.rdsspd
llvm.x86.rdsspq
llvm.x86.rdtsc
llvm.x86.rdtscp
llvm.x86.rstorssp
llvm.x86.saveprevssp
llvm.x86.seh.ehguard
llvm.x86.seh.ehregnode
llvm.x86.seh.lsda
llvm.x86.senduipi
llvm.x86.serialize
llvm.x86.setssbsy
llvm.x86.sha1msg1
llvm.x86.sha1msg2
llvm.x86.sha1nexte
llvm.x86.sha1rnds4
llvm.x86.sha256msg1
llvm.x86.sha256msg2
llvm.x86.sha256rnds2
llvm.x86.slwpcb
llvm.x86.sse.cmp.ps
llvm.x86.sse.cmp.ss
llvm.x86.sse.comieq.ss
llvm.x86.sse.comige.ss
llvm.x86.sse.comigt.ss
llvm.x86.sse.comile.ss
llvm.x86.sse.comilt.ss
llvm.x86.sse.comineq.ss
llvm.x86.sse.cvtpd2pi
llvm.x86.sse.cvtpi2pd
llvm.x86.sse.cvtpi2ps
llvm.x86.sse.cvtps2pi
llvm.x86.sse.cvtss2si
llvm.x86.sse.cvtss2si64
llvm.x86.sse.cvttpd2pi
llvm.x86.sse.cvttps2pi
llvm.x86.sse.cvttss2si
llvm.x86.sse.cvttss2si64
llvm.x86.sse.ldmxcsr
llvm.x86.sse.max.ps
llvm.x86.sse.max.ss
llvm.x86.sse.min.ps
llvm.x86.sse.min.ss
llvm.x86.sse.movmsk.ps
llvm.x86.sse.pshuf.w
llvm.x86.sse.rcp.ps
llvm.x86.sse.rcp.ss
llvm.x86.sse.rsqrt.ps
llvm.x86.sse.rsqrt.ss
llvm.x86.sse.sfence
llvm.x86.sse.stmxcsr
llvm.x86.sse.ucomieq.ss
llvm.x86.sse.ucomige.ss
llvm.x86.sse.ucomigt.ss
llvm.x86.sse.ucomile.ss
llvm.x86.sse.ucomilt.ss
llvm.x86.sse.ucomineq.ss
llvm.x86.sse2.clflush
llvm.x86.sse2.cmp.pd
llvm.x86.sse2.cmp.sd
llvm.x86.sse2.comieq.sd
llvm.x86.sse2.comige.sd
llvm.x86.sse2.comigt.sd
llvm.x86.sse2.comile.sd
llvm.x86.sse2.comilt.sd
llvm.x86.sse2.comineq.sd
llvm.x86.sse2.cvtpd2dq
llvm.x86.sse2.cvtpd2ps
llvm.x86.sse2.cvtps2dq
llvm.x86.sse2.cvtsd2si
llvm.x86.sse2.cvtsd2si64
llvm.x86.sse2.cvtsd2ss
llvm.x86.sse2.cvttpd2dq
llvm.x86.sse2.cvttps2dq
llvm.x86.sse2.cvttsd2si
llvm.x86.sse2.cvttsd2si64
llvm.x86.sse2.lfence
llvm.x86.sse2.maskmov.dqu
llvm.x86.sse2.max.pd
llvm.x86.sse2.max.sd
llvm.x86.sse2.mfence
llvm.x86.sse2.min.pd
llvm.x86.sse2.min.sd
llvm.x86.sse2.movmsk.pd
llvm.x86.sse2.packssdw.128
llvm.x86.sse2.packsswb.128
llvm.x86.sse2.packuswb.128
llvm.x86.sse2.pause
llvm.x86.sse2.pavg.b
llvm.x86.sse2.pavg.w
llvm.x86.sse2.pmadd.wd
llvm.x86.sse2.pmovmskb.128
llvm.x86.sse2.pmulh.w
llvm.x86.sse2.pmulhu.w
llvm.x86.sse2.psad.bw
llvm.x86.sse2.psll.d
llvm.x86.sse2.psll.q
llvm.x86.sse2.psll.w
llvm.x86.sse2.pslli.d
llvm.x86.sse2.pslli.q
llvm.x86.sse2.pslli.w
llvm.x86.sse2.psra.d
llvm.x86.sse2.psra.w
llvm.x86.sse2.psrai.d
llvm.x86.sse2.psrai.w
llvm.x86.sse2.psrl.d
llvm.x86.sse2.psrl.q
llvm.x86.sse2.psrl.w
llvm.x86.sse2.psrli.d
llvm.x86.sse2.psrli.q
llvm.x86.sse2.psrli.w
llvm.x86.sse2.ucomieq.sd
llvm.x86.sse2.ucomige.sd
llvm.x86.sse2.ucomigt.sd
llvm.x86.sse2.ucomile.sd
llvm.x86.sse2.ucomilt.sd
llvm.x86.sse2.ucomineq.sd
llvm.x86.sse3.addsub.pd
llvm.x86.sse3.addsub.ps
llvm.x86.sse3.hadd.pd
llvm.x86.sse3.hadd.ps
llvm.x86.sse3.hsub.pd
llvm.x86.sse3.hsub.ps
llvm.x86.sse3.ldu.dq
llvm.x86.sse3.monitor
llvm.x86.sse3.mwait
llvm.x86.sse41.blendvpd
llvm.x86.sse41.blendvps
llvm.x86.sse41.dppd
llvm.x86.sse41.dpps
llvm.x86.sse41.insertps
llvm.x86.sse41.mpsadbw
llvm.x86.sse41.packusdw
llvm.x86.sse41.pblendvb
llvm.x86.sse41.phminposuw
llvm.x86.sse41.ptestc
llvm.x86.sse41.ptestnzc
llvm.x86.sse41.ptestz
llvm.x86.sse41.round.pd
llvm.x86.sse41.round.ps
llvm.x86.sse41.round.sd
llvm.x86.sse41.round.ss
llvm.x86.sse42.crc32.32.16
llvm.x86.sse42.crc32.32.32
llvm.x86.sse42.crc32.32.8
llvm.x86.sse42.crc32.64.64
llvm.x86.sse42.pcmpestri128
llvm.x86.sse42.pcmpestria128
llvm.x86.sse42.pcmpestric128
llvm.x86.sse42.pcmpestrio128
llvm.x86.sse42.pcmpestris128
llvm.x86.sse42.pcmpestriz128
llvm.x86.sse42.pcmpestrm128
llvm.x86.sse42.pcmpistri128
llvm.x86.sse42.pcmpistria128
llvm.x86.sse42.pcmpistric128
llvm.x86.sse42.pcmpistrio128
llvm.x86.sse42.pcmpistris128
llvm.x86.sse42.pcmpistriz128
llvm.x86.sse42.pcmpistrm128
llvm.x86.sse4a.extrq
llvm.x86.sse4a.extrqi
llvm.x86.sse4a.insertq
llvm.x86.sse4a.insertqi
llvm.x86.ssse3.pabs.b
llvm.x86.ssse3.pabs.d
llvm.x86.ssse3.pabs.w
llvm.x86.ssse3.phadd.d
llvm.x86.ssse3.phadd.d.128
llvm.x86.ssse3.phadd.sw
llvm.x86.ssse3.phadd.sw.128
llvm.x86.ssse3.phadd.w
llvm.x86.ssse3.phadd.w.128
llvm.x86.ssse3.phsub.d
llvm.x86.ssse3.phsub.d.128
llvm.x86.ssse3.phsub.sw
llvm.x86.ssse3.phsub.sw.128
llvm.x86.ssse3.phsub.w
llvm.x86.ssse3.phsub.w.128
llvm.x86.ssse3.pmadd.ub.sw
llvm.x86.ssse3.pmadd.ub.sw.128
llvm.x86.ssse3.pmul.hr.sw
llvm.x86.ssse3.pmul.hr.sw.128
llvm.x86.ssse3.pshuf.b
llvm.x86.ssse3.pshuf.b.128
llvm.x86.ssse3.psign.b
llvm.x86.ssse3.psign.b.128
llvm.x86.ssse3.psign.d
llvm.x86.ssse3.psign.d.128
llvm.x86.ssse3.psign.w
llvm.x86.ssse3.psign.w.128
llvm.x86.sttilecfg
llvm.x86.stui
llvm.x86.subborrow.32
llvm.x86.subborrow.64
llvm.x86.tbm.bextri.u32
llvm.x86.tbm.bextri.u64
llvm.x86.tdpbf16ps
llvm.x86.tdpbssd
llvm.x86.tdpbssd.internal
llvm.x86.tdpbsud
llvm.x86.tdpbusd
llvm.x86.tdpbuud
llvm.x86.testui
llvm.x86.tileloadd64
llvm.x86.tileloadd64.internal
llvm.x86.tileloaddt164
llvm.x86.tilerelease
llvm.x86.tilestored64
llvm.x86.tilestored64.internal
llvm.x86.tilezero
llvm.x86.tilezero.internal
llvm.x86.tpause
llvm.x86.umonitor
llvm.x86.umwait
llvm.x86.vcvtps2ph.128
llvm.x86.vcvtps2ph.256
llvm.x86.vgf2p8affineinvqb.128
llvm.x86.vgf2p8affineinvqb.256
llvm.x86.vgf2p8affineinvqb.512
llvm.x86.vgf2p8affineqb.128
llvm.x86.vgf2p8affineqb.256
llvm.x86.vgf2p8affineqb.512
llvm.x86.vgf2p8mulb.128
llvm.x86.vgf2p8mulb.256
llvm.x86.vgf2p8mulb.512
llvm.x86.wbinvd
llvm.x86.wbnoinvd
llvm.x86.wrfsbase.32
llvm.x86.wrfsbase.64
llvm.x86.wrgsbase.32
llvm.x86.wrgsbase.64
llvm.x86.wrpkru
llvm.x86.wrssd
llvm.x86.wrssq
llvm.x86.wrussd
llvm.x86.wrussq
llvm.x86.xabort
llvm.x86.xbegin
llvm.x86.xend
llvm.x86.xgetbv
llvm.x86.xop.vfrcz.pd
llvm.x86.xop.vfrcz.pd.256
llvm.x86.xop.vfrcz.ps
llvm.x86.xop.vfrcz.ps.256
llvm.x86.xop.vfrcz.sd
llvm.x86.xop.vfrcz.ss
llvm.x86.xop.vpermil2pd
llvm.x86.xop.vpermil2pd.256
llvm.x86.xop.vpermil2ps
llvm.x86.xop.vpermil2ps.256
llvm.x86.xop.vphaddbd
llvm.x86.xop.vphaddbq
llvm.x86.xop.vphaddbw
llvm.x86.xop.vphadddq
llvm.x86.xop.vphaddubd
llvm.x86.xop.vphaddubq
llvm.x86.xop.vphaddubw
llvm.x86.xop.vphaddudq
llvm.x86.xop.vphadduwd
llvm.x86.xop.vphadduwq
llvm.x86.xop.vphaddwd
llvm.x86.xop.vphaddwq
llvm.x86.xop.vphsubbw
llvm.x86.xop.vphsubdq
llvm.x86.xop.vphsubwd
llvm.x86.xop.vpmacsdd
llvm.x86.xop.vpmacsdqh
llvm.x86.xop.vpmacsdql
llvm.x86.xop.vpmacssdd
llvm.x86.xop.vpmacssdqh
llvm.x86.xop.vpmacssdql
llvm.x86.xop.vpmacsswd
llvm.x86.xop.vpmacssww
llvm.x86.xop.vpmacswd
llvm.x86.xop.vpmacsww
llvm.x86.xop.vpmadcsswd
llvm.x86.xop.vpmadcswd
llvm.x86.xop.vpperm
llvm.x86.xop.vpshab
llvm.x86.xop.vpshad
llvm.x86.xop.vpshaq
llvm.x86.xop.vpshaw
llvm.x86.xop.vpshlb
llvm.x86.xop.vpshld
llvm.x86.xop.vpshlq
llvm.x86.xop.vpshlw
llvm.x86.xresldtrk
llvm.x86.xrstor
llvm.x86.xrstor64
llvm.x86.xrstors
llvm.x86.xrstors64
llvm.x86.xsave
llvm.x86.xsave64
llvm.x86.xsavec
llvm.x86.xsavec64
llvm.x86.xsaveopt
llvm.x86.xsaveopt64
llvm.x86.xsaves
llvm.x86.xsaves64
llvm.x86.xsetbv
llvm.x86.xsusldtrk
llvm.x86.xtest
llvm.xcore.bitrev
llvm.xcore.checkevent
llvm.xcore.chkct
llvm.xcore.clre
llvm.xcore.clrpt
llvm.xcore.clrsr
llvm.xcore.crc32
llvm.xcore.crc8
llvm.xcore.edu
llvm.xcore.eeu
llvm.xcore.endin
llvm.xcore.freer
llvm.xcore.geted
llvm.xcore.getet
llvm.xcore.getid
llvm.xcore.getps
llvm.xcore.getr
llvm.xcore.getst
llvm.xcore.getts
llvm.xcore.in
llvm.xcore.inct
llvm.xcore.initcp
llvm.xcore.initdp
llvm.xcore.initlr
llvm.xcore.initpc
llvm.xcore.initsp
llvm.xcore.inshr
llvm.xcore.int
llvm.xcore.mjoin
llvm.xcore.msync
llvm.xcore.out
llvm.xcore.outct
llvm.xcore.outshr
llvm.xcore.outt
llvm.xcore.peek
llvm.xcore.setc
llvm.xcore.setclk
llvm.xcore.setd
llvm.xcore.setev
llvm.xcore.setps
llvm.xcore.setpsc
llvm.xcore.setpt
llvm.xcore.setrdy
llvm.xcore.setsr
llvm.xcore.settw
llvm.xcore.setv
llvm.xcore.sext
llvm.xcore.ssync
llvm.xcore.syncr
llvm.xcore.testct
llvm.xcore.testwct
llvm.xcore.waitevent
llvm.xcore.zext
isVoid
Metadata
f128
ppcf128
x86mmx
x86amx
value isn't a global
llvm.ptrauth
global isn't in section "llvm.ptrauth"
global doesn't have an initializer
global isn't a struct
global doesn't have type '{ i8*, i32, i64, i64 }'
key isn't a constant integer
address discriminator isn't a constant integer or expr
discriminator isn't a constant integer
<unknown>:
.splatinsert
.splat
gc-transition
 (function: 
Print Module IR
Print Function IR
switch
indirectbr
invoke
resume
unreachable
cleanupret
catchret
catchpad
catchswitch
callbr
fneg
fadd
fsub
fmul
udiv
sdiv
fdiv
urem
srem
frem
alloca
load
store
cmpxchg
atomicrmw
fence
getelementptr
trunc
zext
sext
fptrunc
fpext
fptoui
fptosi
uitofp
sitofp
inttoptr
ptrtoint
bitcast
addrspacecast
icmp
fcmp
select
call
lshr
ashr
va_arg
extractelement
insertelement
shufflevector
extractvalue
insertvalue
landingpad
cleanuppad
freeze
<Invalid operator> 
both values to select must have same type
select values cannot have token type
vector select condition element type must be i1
selected values for vector select must be vectors
vector select requires selected vectors to have the same vector length as select condition
select condition must be i1 or <n x i1>
xchg
nand
umax
umin
fadd
fsub
<invalid operation>
unknown
false
true
mallocsize
malloccall
prof
fpmath
tbaa.struct
alias.scope
make.implicit
unpredictable
invariant.group
section_prefix
absolute_symbol
callees
irr_loop
llvm.preserve.access.index
annotation
cfguardtarget
debug-pass
Print PassManager debugging information
Disabled
disable debug output
print pass arguments to pass to 'opt'
print pass structure before run()
Executions
print pass name before it is executed
Details
print pass details when it is executed
IRSizeChange
Pass
: IR instruction count changed from 
IRInstrsBefore
IRInstrsAfter
; Delta: 
Releasing pass '
Running pass '
 on module '
basic block
Pass '
' is not initialized.
Verify if there is a pass dependency cycle.
Required Passes:
Error: Required pass not found! Possible causes:
- Pass misconfiguration (e.g.: missing macros)
- Corruption of the global PassRegistry
*** IR Dump Before 
 ***
*** IR Dump After 
Pass Arguments: 
 -- '
' is not preserving '
 -*- '
' is the last user of following pass instances.
 Free these instances
Executing Pass '
Made Modification '
 Freeing Pass '
' on Function '
'...
' on Module '
' on Region '
' on Loop '
' on Call Graph Nodes '
Required
Preserved
 Analyses:
 Uninitialized Pass
FunctionPass Manager
OptFunction
RunPass
FunctionIRSizeChange
: Function: 
OptModule
Module Pass Manager
ModulePass Manager
Function Pass Manager
Error reading bitcode file: 
branch_weights
synthetic_function_entry_count
function_entry_count
loop_header_weight
__unnamed_
 /EXPORT:
 -export:
,DATA
,data
llvm.module.flags
PIC Level
PIE Level
Code Model
CSProfileSummary
ProfileSummary
SemanticInterposition
RtLibUseGOT
SDK Version
Target Variant SDK Version
ptrauth.abi-version
module-summary-index
ReadOnlyLiveGVars
Number of live global variables marked read only
WriteOnlyLiveGVars
Number of live global variables marked write only
propagate-attrs
Propagate attributes in index
import-constants-with-refs
Import constant global variables with references
digraph Summary {
  // Module: 
  subgraph cluster_
    style = filled;
    color = lightgrey;
    label = "
    node [style=filled,fillcolor=lightblue];
shape
style
dotted,filled
Mrecord
writeOnly
preserved
fillcolor
dead
not eligible to import
    // Edges:
  // Cross-module edges:
, ffl: 
 [label="
"]; // defined externally
 [style=dotted]; // alias
 [style=dashed]; // ref
 [style=dashed,color=forestgreen]; // const-ref
 [style=dashed,color=violetred]; // writeOnly-ref
 // call (hotness : Unknown)
 [color=blue]; // call (hotness : Cold)
 // call (hotness : None)
 [color=brown]; // call (hotness : Hot)
 [style=bold,color=red]; // call (hotness : Critical)
opt-bisect-limit
Maximum optimization to perform
NOT 
BISECT: 
running pass 
Unnamed pass: implement Pass::getPassName()
Pass::print not implemented for pass: '
Starting 
 pass manager run.
Finished 
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::Module]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::Function]
time-passes
Time each pass, printing elapsed time for each on exit
time-passes-per-run
Time each pass run, printing elapsed time for each run on exit
{0} #{1}
pass
... Pass execution timing report ...
print-before
Print IR before specified passes
print-after
Print IR after specified passes
print-before-all
Print IR before each pass
print-after-all
Print IR after each pass
print-module-scope
When printing IR for print-[before|after]{-all} always print a module IR
filter-print-funcs
function names
Only print IR for functions whose name match this for all print-[before|after][-all] options
safepoint-ir-verifier-print-only
Verifying gc pointers in function: 
No illegal uses found by SafepointIRVerifier in: 
Illegal use of unrelocated value found!
Def: 
Use: 
DetailedSummary
InstrProf
CSInstrProf
SampleProfile
ProfileFormat
MaxCount
MaxInternalCount
MaxFunctionCount
NumCounts
IsPartialProfile
PartialProfileRatio
statepoint-id
statepoint-num-patch-bytes
non-global-value-max-name-size
Maximum size for the name of non-global values.
enable-swifttailcc-musttail-check
Check that tail calls from swifttailcc functions to swifttailcc functions are marked musttail.
Base nodes must have at least two operands
Access tag nodes must have the number of operands that is a multiple of 3!
Struct tag nodes must have an odd number of operands!
Type size nodes must be constants!
Struct tag nodes have a string as their first operand
Incorrect field entry in struct type node!
Offset entries must be constants!
Bitwidth between the offsets and struct type entries must match
Offsets must be increasing!
Member size entries must be constants!
Could not find TBAA parent in struct type node
This instruction shall not have a TBAA access tag!
Old-style TBAA is no longer allowed, use struct-path TBAA instead
Access tag metadata must have either 4 or 5 operands
Struct tag metadata must have either 3 or 4 operands
Access size field must be a constant
Immutability tag on struct tag metadata must be a constant
Immutability part of the struct tag metadata must be either 0 or 1
Malformed struct tag metadata: base and access-type should be non-null and point to Metadata nodes
Access type node must be a valid scalar type
Offset must be constant integer
Cycle detected in struct path
Offset not zero at the point of scalar access
Access bit-width not the same as description bit-width
Did not see access type in access path!
Broken module found, compilation aborted!
Broken function found, compilation aborted!
Basic Block in function '
' does not have terminator!
Function context does not match Module context!
Functions may not have common linkage
# formal arguments must match # of arguments for function type!
Functions cannot return aggregate values!
Invalid struct return type!
Attribute after last parameter!
Attribute 'builtin' can only be applied to a callsite.
Calling convention parameter requires byval
Calling convention requires void return type
Calling convention does not allow sret
Calling convention disallows byval
Calling convention disallows preallocated
Calling convention disallows inalloca
Calling convention disallows stack byref
Calling convention does not support varargs or perfect forwarding!
Argument value does not match function argument type!
Function arguments must have first-class types!
Function takes metadata but isn't an intrinsic
Function takes token but isn't an intrinsic
Functions returns a token but isn't an intrinsic
Referencing personality function in another module!
unmaterialized function cannot have metadata
function declaration may only have a unique !dbg attachment
function declaration may not have a !prof attachment
Function declaration shouldn't have a personality routine
llvm intrinsics cannot be defined!
Entry block to function must not have predecessors!
blockaddress may not be used with the entry block!
function must have a single !dbg attachment
function !dbg attachment must be a subprogram
function definition may only have a distinct !dbg attachment
DISubprogram attached to more than one function
function must have a single !prof attachment
Invalid user of intrinsic instruction!
Global is external, but doesn't have external or weak linkage!
huge alignment values are unsupported
Only global variables can have appending linkage!
Only global arrays can have appending linkage!
Declaration may not be in a Comdat!
GlobalValue with DLLImport Storage is dso_local!
Global is marked as dllimport, but not external
GlobalValue with local linkage or non-default visibility must be dso_local!
Global is referenced by parentless instruction!
Global is referenced in a different module!
Global is used by function in a different module
Attributes 'byval', 'inalloca', 'preallocated', 'byref', 'nest', 'sret', 'nocapture', 'nofree', 'returned', 'swiftself', 'swiftasync', and 'swifterror' do not apply to return values!
Attribute '
' does not apply to function returns
immarg attribute only applies to intrinsics
More than one parameter has attribute nest!
More than one parameter has attribute returned!
Incompatible argument and return types for 'returned' attribute
Cannot have multiple 'sret' parameters!
Attribute 'sret' is not on first or second parameter!
Cannot have multiple 'swiftself' parameters!
Cannot have multiple 'swiftasync' parameters!
Cannot have multiple 'swifterror' parameters!
inalloca isn't on the last parameter!
Attributes 'readnone and readonly' are incompatible!
Attributes 'readnone and writeonly' are incompatible!
Attributes 'readonly and writeonly' are incompatible!
Attributes 'readnone and inaccessiblemem_or_argmemonly' are incompatible!
Attributes 'readnone and inaccessiblememonly' are incompatible!
Attributes 'noinline and alwaysinline' are incompatible!
Attribute 'optnone' requires 'noinline'!
Attributes 'optsize and optnone' are incompatible!
Attributes 'minsize and optnone' are incompatible!
Attribute 'jumptable' requires 'unnamed_addr'
element size
number of elements
invalid value for 'frame-pointer' attribute: 
"patchable-function-prefix" takes an unsigned integer: 
"patchable-function-entry" takes an unsigned integer: 
Attribute 'immarg' is incompatible with other attributes
Attributes 'byval', 'inalloca', 'preallocated', 'inreg', 'nest', 'byref', and 'sret' are incompatible!
Attributes 'inalloca and readonly' are incompatible!
Attributes 'sret and returned' are incompatible!
Attributes 'zeroext and signext' are incompatible!
Wrong types for attribute: 
Attributes 'byval', 'byref', 'inalloca', and 'preallocated' do not support unsized types!
Attribute 'swifterror' only applies to parameters with pointer to pointer type!
Attribute 'byref' type does not match parameter!
Attribute 'byval' type does not match parameter!
Attribute 'preallocated' type does not match parameter!
Attribute 'byval' only applies to parameters with pointer type!
Attribute 'byref' only applies to parameters with pointer type!
Attribute 'swifterror' only applies to parameters with pointer type!
' should have an Argument
' only applies to functions!
' does not apply to functions!
'allocsize' 
 argument is out of bounds
 argument must refer to an integer parameter
swifterror value can only be loaded and stored from, or as a swifterror argument!
swifterror value should be the second operand when used by stores
swifterror value when used in a callsite should be marked with swifterror attribute
!prof annotations should have no less than 2 operands
first operand should not be null
expected string with name of the !prof annotation
first operand should be 'function_entry_count' or 'synthetic_function_entry_count'
second operand should not be null
expected integer argument to function_entry_count
Invalid operand for global metadata!
DILocation not allowed within this metadata node
Expected no forward declarations!
All nodes should be resolved!
location requires a valid scope
inlined-at should be a location
scope points into the type hierarchy
invalid expression
missing variable
fragment is larger than or outside of variable
fragment covers entire variable
invalid tag
Subrange must contain count or upperBound
Subrange can have any one of count or upperBound
Count must either be a signed constant or a DIVariable
invalid subrange count
LowerBound must be signed constant or DIVariable or DIExpression
UpperBound must be signed constant or DIVariable or DIExpression
Stride must be signed constant or DIVariable or DIExpression
invalid pointer to member type
invalid scope
invalid base type
DWARF address space only applies to pointer or reference types
invalid file
invalid composite elements
invalid vtable holder
invalid reference flags
DIBlockByRefStruct on DICompositeType is no longer supported
invalid vector, expected one element of type subrange
class/union requires a filename
discriminator can only appear on variant part
dataLocation can only appear in array type
associated can only appear in array type
allocated can only appear in array type
rank can only appear in array type
invalid template params
invalid template parameter
invalid subroutine type ref
invalid checksum length
invalid checksum
compile units must be distinct
invalid filename
invalid enum list
invalid enum type
invalid retained type list
invalid retained type
invalid global variable list
invalid global variable ref
invalid imported entity list
invalid imported entity ref
invalid macro list
invalid macro ref
inconsistent use of embedded source
line specified with no file
invalid subroutine type
invalid containing type
invalid subprogram declaration
invalid retained nodes list
invalid retained nodes, expected DILocalVariable or DILabel
subprogram definitions must be distinct
subprogram definitions must have a compile unit
invalid unit type
subprogram declarations must not have a compile unit
invalid thrown types list
invalid thrown type
DIFlagAllCallsDescribed must be attached to a definition
cannot have column info without line info
invalid local scope
invalid scope ref
anonymous module
invalid type ref
missing global variable type
invalid static data member declaration
local variable requires a valid scope
invalid type
label requires a valid scope
invalid scope for imported entity
invalid imported entity
invalid macinfo type
anonymous macro
invalid declaration
has conflicting flags
GenericSubrange must contain count or upperBound
GenericSubrange can have any one of count or upperBound
Count must be signed constant or DIVariable or DIExpression
GenericSubrange must contain lowerBound
GenericSubrange must contain stride
Expected valid value
Unexpected metadata round-trip through values
function-local metadata used outside a function
function-local metadata not in basic block
function-local metadata used in wrong function
DILocation's scope must be a DILocalScope
Failed to find DILocalScope
!dbg attachment points at wrong subprogram for function
Basic Block does not have terminator!
PHINode should have one entry for each predecessor of its parent basic block!
PHI node has multiple entries for the same basic block with different incoming values!
PHI node entries do not match predecessors!
Instruction has bogus parent pointer!
Operand is null
Found return instr that returns non-void in Function of void return type!
Function return type does not match operand type of return inst!
Terminator found in the middle of a basic block!
Instruction not embedded in basic block!
Only PHI nodes may reference their own value!
Instruction has a name, but provides a void value!
Instruction returns a non-scalar type!
Invalid use of metadata!
Instruction referencing instruction not embedded in a basic block!
Use of instruction is not an instruction!
Instruction has null operand!
Instruction operands must be first-class values!
Cannot take the address of an intrinsic!
Cannot invoke an intrinsic other than donothing, patchpoint, statepoint, coro_resume or coro_destroy
Referencing function in another module!
Referring to a basic block in another function!
Referring to an argument in another function!
Referencing global in another module!
Cannot take the address of an inline asm!
fpmath requires a floating point result!
fpmath takes one operand!
fpmath accuracy must have float type
fpmath accuracy not a positive number!
invalid fpmath accuracy!
Ranges are only for loads, calls and invokes!
nonnull applies only to pointer types
nonnull applies only to load instructions, use attributes for calls or invokes
align applies only to pointer types
align applies only to load instructions, use attributes for calls or invokes
align takes one operand!
align metadata value must be an i64!
align metadata value must be a power of 2!
alignment is larger that implementation defined limit
invalid !dbg metadata attachment
Instruction does not dominate all uses!
Invalid bitcast
inttoptr not supported for non-integral pointers
ptrtoint not supported for non-integral pointers
Unfinished range!
It should have at least one range!
The lower limit must be an integer!
The upper limit must be an integer!
Range types must match instruction type!
Range must not be empty!
Intervals are overlapping
Intervals are not in order
Intervals are contiguous
dereferenceable, dereferenceable_or_null apply only to pointer types
dereferenceable, dereferenceable_or_null apply only to load and inttoptr instructions, use attributes for calls or invokes
dereferenceable, dereferenceable_or_null take one operand!
dereferenceable, dereferenceable_or_null metadata value must be an i64!
Wrong number of InvokeInst branch_weights operands
!prof branch_weights are not allowed for this instruction
Wrong number of operands
!prof brunch_weights operand is not a const int
annotation must be a tuple
annotation must have at least one operand
operands must be strings
Entry values are only allowed in MIR
Branch condition is not 'i1' type!
Switch constants must all be same type as switch value!
Duplicate integer as switch case
Indirectbr operand must have pointer type!
Indirectbr destinations must all have pointer type!
The unwind destination does not have an exception handling instruction!
Called function must be a pointer!
Called function is not pointer to function type!
Called function is not the same type as the call!
Called function requires more parameters than were provided!
Incorrect number of arguments passed to called function!
Call parameter type does not match function signature!
speculatable attribute may not apply to call sites
preallocated as a call site attribute can only be on llvm.call.preallocated.arg
inalloca argument for call has mismatched alloca
swifterror argument for call has mismatched alloca
swifterror argument should come from an alloca or parameter
swifterror argument for call has mismatched parameter
immarg may not apply only to call sites
immarg operand has non-immediate parameter
preallocated operand either requires a preallocated bundle or the call to be musttail (but not both)
Attribute 'sret' cannot be used for vararg call arguments!
inalloca isn't on the last argument!
Function has metadata parameter but isn't an intrinsic
Function has token parameter but isn't an intrinsic
Return type cannot be token for indirect call!
Multiple deopt operand bundles
Multiple gc-transition operand bundles
Multiple funclet operand bundles
Expected exactly one funclet bundle operand
Funclet bundle operands should correspond to a FuncletPadInst
Multiple CFGuardTarget operand bundles
Expected exactly one cfguardtarget bundle operand
Multiple ptrauth operand bundles
Expected exactly two ptrauth bundle operands
Ptrauth bundle key operand must be an i32 constant
Ptrauth bundle discriminator operand must be an i64
Multiple preallocated operand bundles
Expected exactly one preallocated bundle operand
"preallocated" argument must be a token from llvm.call.preallocated.setup
Multiple gc-live operand bundles
inlinable function call in a function with debug info must have a !dbg location
Intrinsic functions should never be defined!
Intrinsic has incorrect return type!
Intrinsic has incorrect argument type!
Intrinsic was not defined with variable arguments!
Callsite was not defined with variable arguments!
Intrinsic name not mangled correctly for type arguments! Should be: 
tags must be valid attribute names
alignment assumptions should have 2 or 3 arguments
first argument should be a pointer
second argument should be an integer
third argument should be an integer if present
to many arguments
this attribute should have 2 arguments
the second argument should be a constant integral value
this attribute has no argument
this attribute should have one argument
info argument of llvm.coro.begin must refer to an initialized constant
info argument of llvm.coro.begin must refer to either a struct or an array
invalid llvm.dbg.declare intrinsic call 1
alignment of arg 0 of memory intrinsic must be 0 or a power of 2
alignment of arg 1 of memory intrinsic must be 0 or a power of 2
element size of the element-wise atomic memory intrinsic must be a power of 2
incorrect alignment of the destination argument
incorrect alignment of the source argument
llvm.call.preallocated.setup argument must be a constant
Uses of llvm.call.preallocated.setup must be calls
llvm.call.preallocated.alloc arg index must be a constant
llvm.call.preallocated.alloc arg index must be between 0 and corresponding llvm.call.preallocated.setup's argument count
Can have at most one call corresponding to a llvm.call.preallocated.setup
cannot use preallocated intrinsics on a call without preallocated arguments
llvm.call.preallocated.setup arg size must be equal to number of preallocated arguments at call site
Use of llvm.call.preallocated.setup outside intrinsics must be in "preallocated" operand bundle
preallocated bundle must have token from corresponding llvm.call.preallocated.setup
llvm.call.preallocated.arg token argument must be a llvm.call.preallocated.setup
llvm.call.preallocated.arg must be called with a "preallocated" call site attribute
llvm.call.preallocated.teardown token argument must be a llvm.call.preallocated.setup
llvm.gcroot parameter #1 must be an alloca.
llvm.gcroot parameter #2 must be a constant.
llvm.gcroot parameter #1 must either be a pointer alloca, or argument #2 must be a non-null constant.
Enclosing function does not use GC.
llvm.init_trampoline parameter #2 must resolve to a function.
invalid arguments to llvm.prefetch
llvm.stackprotector parameter #2 must resolve to an alloca.
llvm.localescape used outside of entry block
multiple calls to llvm.localescape in one function
llvm.localescape only accepts static allocas
llvm.localrecover first argument must be function defined in this module
gc.statepoint support for inline assembly unimplemented
gc.result operand #1 must be from a statepoint
gc.result result type does not match wrapped callee
wrong number of arguments
gc.relocate must return a pointer or a vector of pointers
safepoints should have unique landingpads
safepoint block should be well formed
gc relocate should be linked to a statepoint
gc relocate is incorrectly tied to the statepoint
gc.relocate operand #2 must be integer offset
gc.relocate operand #3 must be integer offset
gc.relocate: statepoint base index out of bounds
gc.relocate: statepoint derived index out of bounds
gc.relocate: relocated value must be a gc pointer
gc.relocate: vector relocates to vector and pointer to pointer
gc.relocate: relocating a pointer shouldn't change its address space
eh.exceptionpointer argument must be a catchpad
get_active_lane_mask: must return a vector
get_active_lane_mask: element type is not i1
masked_load: must return a vector
masked_load: mask must be vector
masked_load: alignment must be a power of 2
masked_load: return must match pointer type
masked_load: pass through and data type must match
masked_load: vector mask must be same length as data
masked_store: mask must be vector
masked_store: alignment must be a power of 2
masked_store: storee must match pointer type
masked_store: vector mask must be same length as data
masked_gather: alignment must be 0 or a power of 2
masked_scatter: alignment must be 0 or a power of 2
experimental_guard cannot be invoked
experimental_guard must have exactly one "deopt" operand bundle
experimental_deoptimize cannot be invoked
experimental_deoptimize must have exactly one "deopt" operand bundle
experimental_deoptimize return type must match caller return type
calls to experimental_deoptimize must be followed by a return
calls to experimental_deoptimize must be followed by a return of the value computed by experimental_deoptimize
first operand of [us][add|sub|shl]_sat must be an int type or vector of ints
second operand of [us][add|sub|shl]_sat must be an int type or vector of ints
first operand of [us][mul|div]_fix[_sat] must be an int type or vector of ints
second operand of [us][mul|div]_fix[_sat] must be an int type or vector of ints
third argument of [us][mul|div]_fix[_sat] must fit within 32 bits
the scale of s[mul|div]_fix[_sat] must be less than the width of the operands
the scale of u[mul|div]_fix[_sat] must be less than or equal to the width of the operands
Intrinsic does not support vectors
bswap must be an even number of bytes
invariant_start parameter must be -1, 0 or a positive number
Result type must be an integer or floating-point type!
Vector element type mismatch of the result and first operand vector!
Vector element type mismatch of the result and second operand vector!
Result of a matrix operation does not fit in the returned vector!
Stride must be greater or equal than the number of rows!
experimental_vector_insert parameters must have the same element type.
experimental_vector_extract result must have the same element type as the input vector.
invalid arguments for constrained FP intrinsic
invalid predicate for constrained FP comparison intrinsic
Intrinsic first argument must be floating point
Intrinsic first argument and result disagree on vector use
Intrinsic result must be an integer
Intrinsic first argument and result vector lengths must be equal
Intrinsic first argument must be integer
Intrinsic result must be a floating point
Intrinsic first argument must be FP or FP vector
Intrinsic result must be FP or FP vector
Intrinsic first argument's type must be larger than result type
Intrinsic first argument's type must be smaller than result type
invalid exception behavior argument
invalid rounding mode argument
invalid llvm.dbg.
 intrinsic address/value
 intrinsic variable
 intrinsic expression
llvm.dbg.
 intrinsic requires a !dbg attachment
mismatched subprogram between llvm.dbg.
 variable and !dbg attachment
conflicting debug info for argument
 label and !dbg attachment
gc.statepoint must read and write all memory to preserve reordering restrictions required by safepoint semantics
gc.statepoint number of patchable bytes must be positive
gc.statepoint callee must be of function pointer type
gc.statepoint number of arguments to underlying call must be positive
gc.statepoint mismatch in number of vararg call args
gc.statepoint doesn't support wrapping non-void vararg functions yet
gc.statepoint mismatch in number of call args
unknown flag used in gc.statepoint flags argument
gc.statepoint call argument does not match wrapped function type
gc.statepoint number of transition arguments must be constant integer
gc.statepoint w/inline transition bundle is deprecated
gc.statepoint number of deoptimization arguments must be constant integer
gc.statepoint w/inline deopt operands is deprecated
gc.statepoint too many arguments
illegal use of statepoint token
gc.result or gc.relocate are the only value uses of a gc.statepoint
gc.result connected to wrong gc.statepoint
gc.relocate connected to wrong gc.statepoint
ResumeInst needs to be in a function with a personality.
The resume instruction should have a consistent result type inside a function.
CleanupReturnInst needs to be provided a CleanupPad
CleanupReturnInst must unwind to an EH block which is not a landingpad.
CatchReturnInst needs to be provided a CatchPad
CatchSwitchInst needs to be in a function with a personality.
CatchSwitchInst not the first non-PHI instruction in the block.
CatchSwitchInst has an invalid parent.
CatchSwitchInst must unwind to an EH block which is not a landingpad.
CatchSwitchInst cannot have empty handler list
CatchSwitchInst handlers must be catchpads
EH pad cannot be in entry block.
Block containing LandingPadInst must be jumped to only by the unwind edge of an invoke.
Block containg CatchPadInst must be jumped to only by its catchswitch.
Catchswitch cannot unwind to one of its catchpads
EH pad must be jumped to via an unwind edge
A cleanupret must exit its cleanup
EH pad cannot handle exceptions raised within it
A single unwind edge may only enter one EH pad
EH pad jumps through a cycle of pads
Callbr is currently only used for asm-goto!
Callbr successors must all have pointer type!
Using an unescaped label as a callbr argument!
Duplicate callbr destination!
Indirect label missing from arglist.
Unary operators must have same type foroperands and result!
FNeg operator only works with float types!
Both operands to a binary operator are not of the same type!
Integer arithmetic operators only work with integral types!
Integer arithmetic operators must have same type for operands and result!
Floating-point arithmetic operators only work with floating-point types!
Floating-point arithmetic operators must have same type for operands and result!
Logical operators only work with integral types!
Logical operators must have same type for operands and result!
Shifts only work with integral types!
Shift return type must be same as operands!
Allocation instruction pointer not in the stack address space!
Alloca array size must have integer type
Load operand must be a pointer.
Load cannot have Release ordering
Atomic load must specify explicit alignment
atomic load operand must have integer, pointer, or floating point type!
Non-atomic load cannot have SynchronizationScope specified
atomic memory access' size must be byte-sized
atomic memory access' operand must have a power-of-two size
Store operand must be a pointer.
Stored value type does not match pointer operand type!
Store cannot have Acquire ordering
Atomic store must specify explicit alignment
atomic store operand must have integer, pointer, or floating point type!
Non-atomic store cannot have SynchronizationScope specified
GEP base pointer is not a vector or a vector of pointers
GEP into unsized type!
GEP indexes must be integers
Invalid indices for GEP pointer type!
GEP is not of right type for indices!
Vector GEP result width doesn't match operand's
Invalid GEP index vector width
All GEP indices should be of integer type
GEP address space doesn't match type
fence instructions may only have acquire, release, acq_rel, or seq_cst ordering.
cmpxchg instructions must be atomic.
cmpxchg instructions cannot be unordered.
cmpxchg instructions failure argument shall be no stronger than the success argument
First cmpxchg operand must be a pointer.
cmpxchg operand must have integer or pointer type
Expected value type does not match pointer operand type!
atomicrmw instructions must be atomic.
atomicrmw instructions cannot be unordered.
First atomicrmw operand must be a pointer.
 operand must have integer or floating point type!
 operand must have floating point type!
 operand must have integer type!
Argument value type does not match pointer operand type!
Invalid binary operation!
Trunc only operates on integer
Trunc only produces integer
trunc source and destination must both be a vector or neither
DestTy too big for Trunc
ZExt only operates on integer
ZExt only produces an integer
zext source and destination must both be a vector or neither
Type too small for ZExt
SExt only operates on integer
SExt only produces an integer
sext source and destination must both be a vector or neither
Type too small for SExt
FPToUI source and dest must both be vector or scalar
FPToUI source must be FP or FP vector
FPToUI result must be integer or integer vector
FPToUI source and dest vector length mismatch
FPToSI source and dest must both be vector or scalar
FPToSI source must be FP or FP vector
FPToSI result must be integer or integer vector
FPToSI source and dest vector length mismatch
UIToFP source and dest must both be vector or scalar
UIToFP source must be integer or integer vector
UIToFP result must be FP or FP vector
UIToFP source and dest vector length mismatch
SIToFP source and dest must both be vector or scalar
SIToFP source must be integer or integer vector
SIToFP result must be FP or FP vector
SIToFP source and dest vector length mismatch
FPTrunc only operates on FP
FPTrunc only produces an FP
fptrunc source and destination must both be a vector or neither
DestTy too big for FPTrunc
FPExt only operates on FP
FPExt only produces an FP
fpext source and destination must both be a vector or neither
DestTy too small for FPExt
PtrToInt source must be pointer
PtrToInt result must be integral
PtrToInt type mismatch
PtrToInt Vector width mismatch
IntToPtr source must be an integral
IntToPtr result must be a pointer
IntToPtr type mismatch
IntToPtr Vector width mismatch
AddrSpaceCast source must be a pointer
AddrSpaceCast result must be a pointer
AddrSpaceCast must be between different address spaces
AddrSpaceCast vector pointer number of elements mismatch
CleanupPadInst needs to be in a function with a personality.
CleanupPadInst not the first non-PHI instruction in the block.
CleanupPadInst has an invalid parent.
FuncletPadInst must not be nested within itself
Bogus funclet pad use
Unwind edges out of a funclet pad must have the same unwind dest
Unwind edges out of a catch must have the same unwind dest as the parent catchswitch
CatchPadInst needs to be in a function with a personality.
CatchPadInst needs to be directly nested in a CatchSwitchInst.
CatchPadInst not the first non-PHI instruction in the block.
Both operands to ICmp instruction are not of the same type!
Invalid operand types for ICmp instruction
Invalid predicate in ICmp instruction!
Both operands to FCmp instruction are not of the same type!
Invalid operand types for FCmp instruction
Invalid predicate in FCmp instruction!
PHI nodes not grouped at top of basic block!
PHI nodes cannot have token type!
PHI node operands are not the same type as the result!
tail call from swifttail->swiftail should be marked musttail
cannot use musttail call with inline asm
cannot guarantee tail call due to mismatched varargs
cannot guarantee tail call due to mismatched return types
cannot guarantee tail call due to mismatched calling conv
bitcast following musttail call must use the call
musttail call must precede a ret with an optional bitcast
musttail call result must be returned
musttail caller
musttail callee
cannot guarantee swifttailcc tail call for varargs function
cannot guarantee tail call due to mismatched parameter counts
cannot guarantee tail call due to mismatched parameter types
cannot guarantee tail call due to mismatched ABI impacting function attributes
inalloca attribute not allowed in swifttailcc 
inreg attribute not allowed in swifttailcc 
swifterror attribute not allowed in swifttailcc 
preallocated attribute not allowed in swifttailcc 
byref attribute not allowed in swifttailcc 
Invalid operands for select instruction!
Select values must have same type as select instruction!
User-defined operators should not live outside of a pass!
Invalid extractelement operands!
Invalid insertelement operands!
Invalid shufflevector operands!
Invalid ExtractValueInst operands!
Invalid InsertValueInst operands!
LandingPadInst needs at least one clause or to be a cleanup.
The landingpad instruction should have a consistent result type inside a function.
LandingPadInst needs to be in a function with a personality.
LandingPadInst not the first non-PHI instruction in the block.
Catch operand does not have pointer type!
Clause is neither catch nor filter!
Filter operand is not an array of constants!
EH pads can't handle each other's exceptions
all indices passed to llvm.localrecover must be less than the number of arguments passed to llvm.localescape in the parent function
Global variable initializer type does not match global variable type!
'common' global must have a zero initializer!
'common' global may not be marked constant!
'common' global may not be in a Comdat!
invalid linkage for intrinsic global variable
wrong type for intrinsic global variable
the third field of the element type is mandatory, specify i8* null to migrate from the obsoleted 2-field form
wrong initalizer for intrinsic global variable
invalid llvm.used member
members of llvm.used must be named
invalid llvm.ptrauth global: 
!dbg attachment of global variable must be a DIGlobalVariableExpression
Globals cannot contain scalable vectors
Alias should have private, internal, linkonce, weak, linkonce_odr, weak_odr, or external linkage!
Aliasee cannot be NULL!
Alias and aliasee types should match!
Aliasee should be either GlobalValue or ConstantExpr
Alias must point to a definition
Aliases cannot form a cycle
Alias cannot point to an interposable alias
unrecognized named metadata node in the llvm.dbg namespace
invalid compile unit
comdat global value has private linkage
invalid requirement on flag, flag is not present in module
invalid requirement on flag, flag does not have the required value
incorrect number of operands in module flag
invalid behavior operand in module flag (expected constant integer)
invalid behavior operand in module flag (unexpected constant)
invalid ID operand in module flag (expected metadata string)
invalid value for 'max' module flag (expected constant integer)
invalid value for 'require' module flag (expected metadata pair)
invalid value for 'require' module flag (first value operand should be a string)
invalid value for 'append'-type module flag (expected a metadata node)
module flag identifiers must be unique (or of 'require' type)
wchar_size metadata requires constant integer argument
'Linker Options' named metadata no longer supported
SemanticInterposition metadata requires constant integer argument
expected a MDNode triple
expected an integer constant
expected a Function or null
incorrect number of operands in llvm.ident metadata
invalid value for llvm.ident metadata entry operand(the operand should be a string)
incorrect number of operands in llvm.commandline metadata
invalid value for llvm.commandline metadata entry operand(the operand should be a string)
DICompileUnit not listed in llvm.dbg.cu
All llvm.experimental.deoptimize declarations must have the same calling convention
Module Verifier
in function 
Remark debug location
Argument with debug location
Unknown remark format: '%s'
Unknown remark serializer format.
remarks-section
Emit a section containing remark diagnostics metadata. By default, this is enabled for the following formats: yaml-strtab, bitstream.
Hotness
!Passed
!Missed
!Analysis
!AnalysisFPCommute
!AnalysisAliasing
!Failure
File
Column
REMARKS
can't read more than %zu at a time, trying to read %u
can't enter sub-block: current code size is 0
can't enter sub block: already at end of stream
Abbreviation starts with an Array or a Blob
Array element type can't be an Array or a Blob
Array op not second to last
Array element type has to be an encoding of a type
Fixed or VBR abbrev record with size > MaxChunkData
Abbrev record with no operands
Invalid abbrev number
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._
expected assembly-time absolute expression
invalid number of bytes
invalid .org offset '
' (at offset '
Fragment can't be larger than a bundle size
Padding cannot exceed 255 bytes
<stdin>
checksum_offset
as-secure-log-file-name
As secure log file name (initialized from AS_SECURE_LOG_FILE env variable)
AS_SECURE_LOG_FILE
._Renamed..
_Renamed..
invalid symbol name from source
section's multiply symbols policy does not match
0x%02llx
0x%04llx
0x%08llx
0x%016llx
<<invalid>>
<<none>>
DTPOFF
DTPREL
GOTOFF
GOTREL
PCREL
GOTPCREL
GOTTPOFF
INDNTPOFF
NTPOFF
GOTNTPOFF
TLSGD
TLSLD
TLSLDM
TPOFF
TPREL
tlscall
tlsdesc
TLVP
TLVPPAGE
TLVPPAGEOFF
PAGE
PAGEOFF
GOTPAGE
GOTPAGEOFF
SECREL32
SIZE
WEAKREF
ABS8
PLTOFF
GOT_PREL
target1
target2
prel31
sbrel
tlsldo
tlsdescseq
hlo8
diff8
diff16
diff32
high
higha
highera
highesta
got@l
got@h
got@ha
tocbase
toc@l
toc@h
toc@ha
dtpmod
tprel@l
tprel@h
tprel@ha
tprel@high
tprel@higha
tprel@higher
tprel@highera
tprel@highest
tprel@highesta
dtprel@l
dtprel@h
dtprel@ha
dtprel@high
dtprel@higha
dtprel@higher
dtprel@highera
dtprel@highest
dtprel@highesta
got@tprel
got@tprel@l
got@tprel@h
got@tprel@ha
got@dtprel
got@dtprel@l
got@dtprel@h
got@dtprel@ha
got@tlsgd
got@tlsgd@l
got@tlsgd@h
got@tlsgd@ha
got@tlsld
got@tlsld@l
got@tlsld@h
got@tlsld@ha
got@pcrel
got@tlsgd@pcrel
got@tlsld@pcrel
got@tprel@pcrel
tls@pcrel
tlsld
notoc
IMGREL
LO16
HI16
GPREL
GDGOT
LDGOT
GDPLT
LDPLT
IEGOT
TYPEINDEX
MBREL
TLSREL
TBREL
gotpcrel32@lo
gotpcrel32@hi
rel32@lo
rel32@hi
rel64
abs32@lo
abs32@hi
pc_hi
pc_lo
gotoff_hi
gotoff_lo
plt_hi
plt_lo
tls_gd_hi
tls_gd_lo
tpoff_hi
tpoff_lo
unable to evaluate offset for variable '
unable to evaluate offset to undefined symbol '
__eh_frame
__ustring
__common
__gcc_except_tab
__LD
__compact_unwind
__DWARF
__debug_names
debug_names_begin
__apple_names
names_begin
__apple_objc
objc_begin
__apple_namespac
namespac_begin
__apple_types
types_begin
__debug_abbrev
section_abbrev
__debug_info
section_info
__debug_line
section_line
__debug_line_str
section_line_str
__debug_frame
__debug_pubnames
__debug_pubtypes
__debug_gnu_pubn
__debug_gnu_pubt
__debug_str
info_string
__debug_str_offs
section_str_off
__debug_addr
__debug_loc
section_debug_loc
__debug_loclists
__debug_aranges
__debug_ranges
debug_range
__debug_rnglists
__debug_macinfo
debug_macinfo
__debug_macro
debug_macro
__debug_inlined
__debug_cu_index
__debug_tu_index
__LLVM_STACKMAPS
__llvm_stackmaps
__LLVM_FAULTMAPS
__llvm_faultmaps
__remarks
.text
.data
.rodata
.rodata.cst4
.rodata.cst8
.rodata.cst16
.rodata.cst32
.gcc_except_table
.debug_abbrev
.debug_info
.debug_line
.debug_line_str
.debug_pubnames
.debug_pubtypes
.debug_gnu_pubnames
.debug_gnu_pubtypes
.debug_str
.debug_loc
.debug_aranges
.debug_ranges
.debug_macinfo
.debug_macro
.debug_names
.apple_names
.apple_objc
.apple_namespaces
.apple_types
.debug_str_offsets
.debug_addr
.debug_rnglists
.debug_loclists
.debug_info.dwo
.debug_types.dwo
.debug_abbrev.dwo
.debug_str.dwo
.debug_line.dwo
.debug_loc.dwo
.debug_str_offsets.dwo
.debug_rnglists.dwo
.debug_macinfo.dwo
.debug_macro.dwo
.debug_loclists.dwo
.debug_cu_index
.debug_tu_index
.llvm_stackmaps
.llvm_faultmaps
.stack_sizes
.pseudo_probe
.pseudo_probe_desc
.rdata
.debug$S
.debug$T
.debug$H
section_debug_loclists
debug_rnglists
debug_macinfo.dwo
debug_macro.dwo
section_info_dwo
section_types_dwo
section_abbrev_dwo
skel_string
skel_loc
section_str_off_dwo
addr_sec
.drectve
.pdata
.sxdata
.gfids$y
.giats$y
.gljmp$y
.tls$
.rodata.gcc_except_table
.eh_info_table
Cannot initialize MC for non-Windows COFF object files.
Cannot initialize MC for GOFF object file format
Cannot initialize MC for unknown object file format.
.section
.linkonce
IMAGE_SCN_CNT_UNINITIALIZED_DATA
,#alloc
,#execinstr
,#write
,#exclude
,#tls
0x7000001e
unsupported type 0x
 for section 
,comdat
,unique,
.subsection
SHT_NOBITS
0123456789_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
,none,
mach-o section specifier requires a segment whose length is between 1 and 16 characters
mach-o section specifier requires a segment and section separated by a comma
mach-o section specifier requires a section whose length is between 1 and 16 characters
mach-o section specifier uses an unknown section type
mach-o section specifier of type 'symbol_stubs' requires a size specifier
mach-o section specifier has invalid attribute
mach-o section specifier cannot have a stub size specified because it does not have type 'symbol_stubs'
mach-o section specifier has a malformed stub size
regular
S_REGULAR
S_ZEROFILL
cstring_literals
S_CSTRING_LITERALS
4byte_literals
S_4BYTE_LITERALS
8byte_literals
S_8BYTE_LITERALS
literal_pointers
S_LITERAL_POINTERS
non_lazy_symbol_pointers
S_NON_LAZY_SYMBOL_POINTERS
lazy_symbol_pointers
S_LAZY_SYMBOL_POINTERS
symbol_stubs
S_SYMBOL_STUBS
mod_init_funcs
S_MOD_INIT_FUNC_POINTERS
mod_term_funcs
S_MOD_TERM_FUNC_POINTERS
S_COALESCED
S_GB_ZEROFILL
interposing
S_INTERPOSING
16byte_literals
S_16BYTE_LITERALS
S_DTRACE_DOF
S_LAZY_DYLIB_SYMBOL_POINTERS
thread_local_regular
S_THREAD_LOCAL_REGULAR
thread_local_zerofill
S_THREAD_LOCAL_ZEROFILL
thread_local_variables
S_THREAD_LOCAL_VARIABLES
thread_local_variable_pointers
S_THREAD_LOCAL_VARIABLE_POINTERS
thread_local_init_function_pointers
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
pure_instructions
S_ATTR_PURE_INSTRUCTIONS
no_toc
S_ATTR_NO_TOC
strip_static_syms
S_ATTR_STRIP_STATIC_SYMS
no_dead_strip
S_ATTR_NO_DEAD_STRIP
live_support
S_ATTR_LIVE_SUPPORT
self_modifying_code
S_ATTR_SELF_MODIFYING_CODE
S_ATTR_DEBUG
S_ATTR_SOME_INSTRUCTIONS
S_ATTR_EXT_RELOC
S_ATTR_LOC_RELOC
.csect 
Unhandled storage-mapping class for .text csect
Unhandled storage-mapping class for .rodata csect.
.toc
Unhandled storage-mapping class for .data csect.
Printing for this SectionKind is unimplemented.
unsupported directive in streamer
line_table_start
this directive must appear between .cfi_startproc and .cfi_endproc directives
parent function id not introduced by .cv_func_id or .cv_inline_site_id
starting new .cfi frame before finishing the previous one
.seh_* directives are not supported on this target
.seh_ directive must appear within an active frame
Starting a function before ending the previous one!
Not all chained regions terminated!
End of a chained region outside a chained region!
Chained unwind areas can't have handlers!
Don't know what kind of handler this is!
frame register and offset can be set at most once
offset is not a multiple of 16
frame offset must be less than or equal to 240
stack allocation size must be non-zero
stack allocation size is not a multiple of 8
register save offset is not 8 byte aligned
If present, PushMachFrame must be the first UOP
EmitRawText called on an MCStreamer that doesn't support it (target backend is likely missing an AsmStreamer implementation)
Unfinished frame!
Symbol name with unsupported characters
altivec
64bit
DW_TAG_null
DW_TAG_array_type
DW_TAG_class_type
DW_TAG_entry_point
DW_TAG_enumeration_type
DW_TAG_formal_parameter
DW_TAG_imported_declaration
DW_TAG_label
DW_TAG_lexical_block
DW_TAG_member
DW_TAG_pointer_type
DW_TAG_reference_type
DW_TAG_compile_unit
DW_TAG_string_type
DW_TAG_structure_type
DW_TAG_subroutine_type
DW_TAG_typedef
DW_TAG_union_type
DW_TAG_unspecified_parameters
DW_TAG_variant
DW_TAG_common_block
DW_TAG_common_inclusion
DW_TAG_inheritance
DW_TAG_inlined_subroutine
DW_TAG_module
DW_TAG_ptr_to_member_type
DW_TAG_set_type
DW_TAG_subrange_type
DW_TAG_with_stmt
DW_TAG_access_declaration
DW_TAG_base_type
DW_TAG_catch_block
DW_TAG_const_type
DW_TAG_constant
DW_TAG_enumerator
DW_TAG_file_type
DW_TAG_friend
DW_TAG_namelist
DW_TAG_namelist_item
DW_TAG_packed_type
DW_TAG_subprogram
DW_TAG_template_type_parameter
DW_TAG_template_value_parameter
DW_TAG_thrown_type
DW_TAG_try_block
DW_TAG_variant_part
DW_TAG_variable
DW_TAG_volatile_type
DW_TAG_dwarf_procedure
DW_TAG_restrict_type
DW_TAG_interface_type
DW_TAG_namespace
DW_TAG_imported_module
DW_TAG_unspecified_type
DW_TAG_partial_unit
DW_TAG_imported_unit
DW_TAG_condition
DW_TAG_shared_type
DW_TAG_type_unit
DW_TAG_rvalue_reference_type
DW_TAG_template_alias
DW_TAG_coarray_type
DW_TAG_generic_subrange
DW_TAG_dynamic_type
DW_TAG_atomic_type
DW_TAG_call_site
DW_TAG_call_site_parameter
DW_TAG_skeleton_unit
DW_TAG_immutable_type
DW_TAG_MIPS_loop
DW_TAG_format_label
DW_TAG_function_template
DW_TAG_class_template
DW_TAG_GNU_template_template_param
DW_TAG_GNU_template_parameter_pack
DW_TAG_GNU_formal_parameter_pack
DW_TAG_GNU_call_site
DW_TAG_GNU_call_site_parameter
DW_TAG_APPLE_property
DW_TAG_APPLE_ptrauth_type
DW_TAG_BORLAND_property
DW_TAG_BORLAND_Delphi_string
DW_TAG_BORLAND_Delphi_dynamic_array
DW_TAG_BORLAND_Delphi_set
DW_TAG_BORLAND_Delphi_variant
DW_OP_addr
DW_OP_deref
DW_OP_const1u
DW_OP_const1s
DW_OP_const2u
DW_OP_const2s
DW_OP_const4u
DW_OP_const4s
DW_OP_const8u
DW_OP_const8s
DW_OP_constu
DW_OP_consts
DW_OP_dup
DW_OP_drop
DW_OP_over
DW_OP_pick
DW_OP_swap
DW_OP_rot
DW_OP_xderef
DW_OP_abs
DW_OP_and
DW_OP_div
DW_OP_minus
DW_OP_mod
DW_OP_mul
DW_OP_neg
DW_OP_not
DW_OP_or
DW_OP_plus
DW_OP_plus_uconst
DW_OP_shl
DW_OP_shr
DW_OP_shra
DW_OP_xor
DW_OP_bra
DW_OP_eq
DW_OP_ge
DW_OP_gt
DW_OP_le
DW_OP_lt
DW_OP_ne
DW_OP_skip
DW_OP_lit0
DW_OP_lit1
DW_OP_lit2
DW_OP_lit3
DW_OP_lit4
DW_OP_lit5
DW_OP_lit6
DW_OP_lit7
DW_OP_lit8
DW_OP_lit9
DW_OP_lit10
DW_OP_lit11
DW_OP_lit12
DW_OP_lit13
DW_OP_lit14
DW_OP_lit15
DW_OP_lit16
DW_OP_lit17
DW_OP_lit18
DW_OP_lit19
DW_OP_lit20
DW_OP_lit21
DW_OP_lit22
DW_OP_lit23
DW_OP_lit24
DW_OP_lit25
DW_OP_lit26
DW_OP_lit27
DW_OP_lit28
DW_OP_lit29
DW_OP_lit30
DW_OP_lit31
DW_OP_reg0
DW_OP_reg1
DW_OP_reg2
DW_OP_reg3
DW_OP_reg4
DW_OP_reg5
DW_OP_reg6
DW_OP_reg7
DW_OP_reg8
DW_OP_reg9
DW_OP_reg10
DW_OP_reg11
DW_OP_reg12
DW_OP_reg13
DW_OP_reg14
DW_OP_reg15
DW_OP_reg16
DW_OP_reg17
DW_OP_reg18
DW_OP_reg19
DW_OP_reg20
DW_OP_reg21
DW_OP_reg22
DW_OP_reg23
DW_OP_reg24
DW_OP_reg25
DW_OP_reg26
DW_OP_reg27
DW_OP_reg28
DW_OP_reg29
DW_OP_reg30
DW_OP_reg31
DW_OP_breg0
DW_OP_breg1
DW_OP_breg2
DW_OP_breg3
DW_OP_breg4
DW_OP_breg5
DW_OP_breg6
DW_OP_breg7
DW_OP_breg8
DW_OP_breg9
DW_OP_breg10
DW_OP_breg11
DW_OP_breg12
DW_OP_breg13
DW_OP_breg14
DW_OP_breg15
DW_OP_breg16
DW_OP_breg17
DW_OP_breg18
DW_OP_breg19
DW_OP_breg20
DW_OP_breg21
DW_OP_breg22
DW_OP_breg23
DW_OP_breg24
DW_OP_breg25
DW_OP_breg26
DW_OP_breg27
DW_OP_breg28
DW_OP_breg29
DW_OP_breg30
DW_OP_breg31
DW_OP_regx
DW_OP_fbreg
DW_OP_bregx
DW_OP_piece
DW_OP_deref_size
DW_OP_xderef_size
DW_OP_nop
DW_OP_push_object_address
DW_OP_call2
DW_OP_call4
DW_OP_call_ref
DW_OP_form_tls_address
DW_OP_call_frame_cfa
DW_OP_bit_piece
DW_OP_implicit_value
DW_OP_stack_value
DW_OP_implicit_pointer
DW_OP_addrx
DW_OP_constx
DW_OP_entry_value
DW_OP_const_type
DW_OP_regval_type
DW_OP_deref_type
DW_OP_xderef_type
DW_OP_convert
DW_OP_reinterpret
DW_OP_GNU_push_tls_address
DW_OP_WASM_location
DW_OP_WASM_location_int
DW_OP_GNU_entry_value
DW_OP_GNU_addr_index
DW_OP_GNU_const_index
DW_OP_LLVM_convert
DW_OP_LLVM_fragment
DW_OP_LLVM_tag_offset
DW_OP_LLVM_entry_value
DW_ATE_address
DW_ATE_boolean
DW_ATE_complex_float
DW_ATE_float
DW_ATE_signed
DW_ATE_signed_char
DW_ATE_unsigned
DW_ATE_unsigned_char
DW_ATE_imaginary_float
DW_ATE_packed_decimal
DW_ATE_numeric_string
DW_ATE_edited
DW_ATE_signed_fixed
DW_ATE_unsigned_fixed
DW_ATE_decimal_float
DW_ATE_UTF
DW_ATE_UCS
DW_ATE_ASCII
DW_VIRTUALITY_none
DW_VIRTUALITY_virtual
DW_VIRTUALITY_pure_virtual
DW_LANG_C89
DW_LANG_C
DW_LANG_Ada83
DW_LANG_C_plus_plus
DW_LANG_Cobol74
DW_LANG_Cobol85
DW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Pascal83
DW_LANG_Modula2
DW_LANG_Java
DW_LANG_C99
DW_LANG_Ada95
DW_LANG_Fortran95
DW_LANG_PLI
DW_LANG_ObjC
DW_LANG_ObjC_plus_plus
DW_LANG_UPC
DW_LANG_D
DW_LANG_Python
DW_LANG_OpenCL
DW_LANG_Go
DW_LANG_Modula3
DW_LANG_Haskell
DW_LANG_C_plus_plus_03
DW_LANG_C_plus_plus_11
DW_LANG_OCaml
DW_LANG_Rust
DW_LANG_C11
DW_LANG_Swift
DW_LANG_Julia
DW_LANG_Dylan
DW_LANG_C_plus_plus_14
DW_LANG_Fortran03
DW_LANG_Fortran08
DW_LANG_RenderScript
DW_LANG_BLISS
DW_LANG_Mips_Assembler
DW_LANG_GOOGLE_RenderScript
DW_LANG_BORLAND_Delphi
DW_CC_normal
DW_CC_program
DW_CC_nocall
DW_CC_pass_by_reference
DW_CC_pass_by_value
DW_CC_GNU_renesas_sh
DW_CC_GNU_borland_fastcall_i386
DW_CC_BORLAND_safecall
DW_CC_BORLAND_stdcall
DW_CC_BORLAND_pascal
DW_CC_BORLAND_msfastcall
DW_CC_BORLAND_msreturn
DW_CC_BORLAND_thiscall
DW_CC_BORLAND_fastcall
DW_CC_LLVM_vectorcall
DW_CC_LLVM_Win64
DW_CC_LLVM_X86_64SysV
DW_CC_LLVM_AAPCS
DW_CC_LLVM_AAPCS_VFP
DW_CC_LLVM_IntelOclBicc
DW_CC_LLVM_SpirFunction
DW_CC_LLVM_OpenCLKernel
DW_CC_LLVM_Swift
DW_CC_LLVM_PreserveMost
DW_CC_LLVM_PreserveAll
DW_CC_LLVM_X86RegCall
DW_CC_LLVM_SwiftTail
DW_CC_GDB_IBM_OpenCL
DW_MACINFO_define
DW_MACINFO_undef
DW_MACINFO_start_file
DW_MACINFO_end_file
DW_MACINFO_vendor_ext
SV64
SV3264
Unknown
R_POS
R_RL
R_RLA
R_NEG
R_REL
R_TOC
R_TRL
R_TRLA
R_GL
R_TCL
R_REF
R_BA
R_BR
R_RBA
R_RBR
R_TLS
R_TLS_IE
R_TLS_LD
R_TLS_LE
R_TLSM
R_TLSML
R_TOCU
R_TOCL
13.0.0
