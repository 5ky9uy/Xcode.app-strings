Swift
Actor
CheckedContinuationCanary
CheckedContinuation
Executor
SerialExecutor
UnownedSerialExecutor
DispatchQueueShim
AsyncCompactMapSequence
Iterator
AsyncDropFirstSequence
AsyncDropWhileSequence
AsyncFilterSequence
AsyncFlatMapSequence
AsyncIteratorProtocol
Element
AsyncMapSequence
AsyncPrefixSequence
AsyncPrefixWhileSequence
AsyncSequence
AsyncIterator Element
AsyncThrowingCompactMapSequence
AsyncThrowingDropWhileSequence
AsyncThrowingFilterSequence
AsyncThrowingFlatMapSequence
AsyncThrowingMapSequence
AsyncThrowingPrefixWhileSequence
GlobalActor
ActorType
MainActor
UnownedJob
UnsafeContinuation
Task
TaskPriority
UnsafeCurrentTask
CancellationError
TaskGroup
ThrowingTaskGroup
TaskLocal
_Storage
_AsyncStreamCriticalStorage
AsyncStream
Continuation
Termination
YieldResult
BufferingPolicy
_Context
AsyncThrowingStream
_DequeBuffer
_Deque
_Header
State
Terminal
HeapObject
InlineRefCountsPlaceholder
Fatal error
SWIFT TASK CONTINUATION MISUSE: 
 tried to resume its continuation more than once, returning 
Swift/x86_64-apple-ios-simulator.swiftinterface
_Concurrency/CheckedContinuation.swift
 tried to resume its continuation more than once, throwing 
_Concurrency/Errors.swift
Fatal error: Call of deleted method
_Concurrency/AsyncDropFirstSequence.swift
Precondition failed
Can't drop a negative number of elements from an async sequence
_Concurrency/AsyncPrefixSequence.swift
Can't prefix a negative number of elements from an async sequence
Not enough bits to represent the passed value
Negative value is not representable
_Concurrency/TaskGroup.swift
_Concurrency/TaskSleep.swift
Invalid state for non-cancelled sleep task
_TtCs25CheckedContinuationCanary
_TtCs17DispatchQueueShim
_TtCs9MainActor
defaultValue
state
_value
storage
produce
 leaked its continuation!
_Concurrency/AsyncStreamBuffer.swift
attempt to await next() on more than one task
_Concurrency/Deque.swift
Unexpectedly found nil while unwrapping an Optional value
Double value cannot be converted to Int because it is either infinite or NaN
Double value cannot be converted to Int because the result would be less than Int.min
Double value cannot be converted to Int because the result would be greater than Int.max
ManagedBufferPointer buffer class has illegal stored properties
ManagedBufferPointer buffer class must be non-@objc
UnsafeBufferPointer with negative count
UnsafeMutablePointer.initialize overlapping range
Impossible to have cancelled before we began
Impossible to have multiple active continuations
Already finished normally, can't do that again
Cannot wake before we even started
_Concurrency/TaskLocal.swift
Illegal attempt to set a 
 value, use `withValue(...) { ... }` instead.
__DATA
__s_async_hook
@MainActor function
the main thread
actor-isolated function
the same actor
%s: data race detected: %s at %.*s:%d was not called on %s
error
warning
actor-isolation-violation
Actor-isolated function called from another thread
SWIFT_UNEXPECTED_EXECUTOR_LOG_LEVEL
invalid job priority %#zx
Swift global concurrent queue
not all allocations are deallocated
future reported an error, but wait cannot throw
CFRunLoopRun
freed pointer was not the last allocation
error: task-local: detected illegal task-local value binding at %.*s:%d.
Task-local values must only be set in a structured-context, such as: around any (synchronous or asynchronous function invocation), around an 'async let' declaration, or around a 'with(Throwing)TaskGroup(...){ ... }' invocation. Notably, binding a task-local value is illegal *within the body* of a withTaskGroup invocation.
The following example is illegal:
    await withTaskGroup(...) { group in 
        await <task-local>.withValue(1234) {
            group.spawn { ... }
        }
    }
And should be replaced by, either: setting the value for the entire group:
    // bind task-local for all tasks spawned within the group
    await <task-local>.withValue(1234) {
        await withTaskGroup(...) { group in
            group.spawn { ... }
        }
    }
or, inside the specific task-group child task:
    // bind-task-local for only specific child-task
    await withTaskGroup(...) { group in
        group.spawn {
            await <task-local>.withValue(1234) {
                ... 
            }
        }
        group.spawn { ... }
    }
task-local-violation
Task-local bound in illegal context
__tsan_acquire
__tsan_release
'%s' failed with error '%s'(%d)
pthread_rwlock_init(&rwlock, nullptr)
pthread_rwlock_destroy(&rwlock)
pthread_rwlock_rdlock(&rwlock)
pthread_rwlock_tryrdlock(&rwlock)
pthread_rwlock_wrlock(&rwlock)
pthread_rwlock_trywrlock(&rwlock)
pthread_rwlock_unlock(&rwlock)
pthread_cond_init(&condition, nullptr)
pthread_cond_destroy(&condition)
pthread_cond_signal(&condition)
pthread_cond_broadcast(&condition)
pthread_cond_wait(&condition, &mutex)
pthread_mutexattr_init(&attr)
pthread_mutexattr_settype(&attr, kind)
pthread_mutex_init(&Handle, &attr)
pthread_mutexattr_destroy(&attr)
pthread_mutex_destroy(&Handle)
pthread_mutex_lock(&Handle)
pthread_mutex_unlock(&Handle)
pthread_mutex_trylock(&Handle)
pthread_cond_wait(&condition.Handle, &Handle)
EINVAL
EPERM
EDEADLK
ENOMEM
EAGAIN
EBUSY
<unknown>
_availability_version_check
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
/System/Library/CoreServices/SystemVersion.plist
IPHONE_SIMULATOR_ROOT
ProductVersion
%d.%d.%d
_pIegHzo_
ytIeghHr_
yxSgyYacSgG
Iegh_Sg
yxSgyYaKcSgG
$sScI
yxq__G
$sSci
7Element
yx_G
yx_G
yx_G
7Element
yxq__G
yxq__G
yx_G
yx_G
yxq__G
yx_G
yx_G
yxq__G
yxq__G
yx_G
$ss11GlobalActorP
$sSY
yx_G
yxq__G
yx_G
yxq__G
$sScA
$sScF
$sScf
13AsyncIterator
13AsyncIterator
Qy_Sg
13AsyncIterator
_7Element
9ActorType
yxq_G
yx__G
yxq___G
yx_G
yx_G
Si9remaining_t
yx_GSg
yxq__G
yxq__G
q_Sg
yxq__GSg
yx__GxG
yxSg
yx__G
yxSg
_pGSg
yxq___G
yxq___GSg
yx_G
yx__GxG
yxq___GytIeghnr_
yxq___GIeghn_
yx__GytIeghnr_
yx__GIeghn_
7Element
QzSbIegHnr_
7Element
QzSbIegHnd_
yyt__G
ytSg
yyt__G
SPyytGSg
SRyytGSg
SpyBwG
_AAt
7Element
QzXMT
SpySVSgG
Element
AsyncIterator
ActorType
RawValue
canary
executor
base
transform
baseIterator
count
predicate
isIncluded
currentIterator
finished
remaining
predicateHasFailed
doneDropping
context
_task
rawValue
_group
group
defaultValue
state
_value
storage
cancelled
enqueued
dropped
terminated
bufferingOldest
bufferingNewest
unbounded
produce
continuation
pending
limit
onTermination
terminal
failed
capacity
startSlot
_storage
buffer
empty
metadata
refCounts
init
allocWithZone:
automaticallyNotifiesObserversForKey:
initWithCoder:
retain
release
autorelease
retainCount
_isDeallocating
_tryRetain
allowsWeakReference
retainWeakReference
_setWeaklyReferenced
_noteAssociatedObjects
dealloc
refCounts
SwiftNativeNSObject
@24@0:8^{_NSZone=}16
B24@0:8@16
@24@0:8@16
@16@0:8
Vv16@0:8
Q16@0:8
B16@0:8
v16@0:8
{RefCounts<swift::RefCountBitsT<swift::RefCountIsInline>>="refCounts"{atomic<swift::RefCountBitsT<swift::RefCountIsInline>>="__a_"{__cxx_atomic_impl<swift::RefCountBitsT<swift::RefCountIsInline>, std::__cxx_atomic_base_impl<swift::RefCountBitsT<swift::RefCountIsInline>>>="__a_value"A{RefCountBitsT<swift::RefCountIsInline>}}}}
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
        <key>CFBundleIdentifier</key>
        <string>com.apple.dt.runtime.swiftConcurrency</string>
        <key>CFBundleInfoDictionaryVersion</key>
        <string>6.0</string>
        <key>CFBundleName</key>
        <string>swift_Concurrency</string>
        <key>CFBundleShortVersionString</key>
        <string>5.5.2</string>
        <key>CFBundleVersion</key>
        <string>5.7.2.135.5</string>
</dict>
</plist>
Swift
Actor
CheckedContinuationCanary
CheckedContinuation
Executor
SerialExecutor
UnownedSerialExecutor
DispatchQueueShim
AsyncCompactMapSequence
Iterator
AsyncDropFirstSequence
AsyncDropWhileSequence
AsyncFilterSequence
AsyncFlatMapSequence
AsyncIteratorProtocol
Element
AsyncMapSequence
AsyncPrefixSequence
AsyncPrefixWhileSequence
AsyncSequence
AsyncIterator Element
AsyncThrowingCompactMapSequence
AsyncThrowingDropWhileSequence
AsyncThrowingFilterSequence
AsyncThrowingFlatMapSequence
AsyncThrowingMapSequence
AsyncThrowingPrefixWhileSequence
GlobalActor
ActorType
MainActor
UnownedJob
UnsafeContinuation
Task
TaskPriority
UnsafeCurrentTask
CancellationError
TaskGroup
ThrowingTaskGroup
TaskLocal
_Storage
_AsyncStreamCriticalStorage
AsyncStream
Continuation
Termination
YieldResult
BufferingPolicy
_Context
AsyncThrowingStream
_DequeBuffer
_Deque
_Header
State
Terminal
HeapObject
InlineRefCountsPlaceholder
Fatal error
SWIFT TASK CONTINUATION MISUSE: 
 tried to resume its continuation more than once, returning 
Swift/arm64-apple-ios-simulator.swiftinterface
_Concurrency/CheckedContinuation.swift
 tried to resume its continuation more than once, throwing 
_Concurrency/Errors.swift
Fatal error: Call of deleted method
_Concurrency/AsyncDropFirstSequence.swift
Precondition failed
Can't drop a negative number of elements from an async sequence
_Concurrency/AsyncPrefixSequence.swift
Can't prefix a negative number of elements from an async sequence
Not enough bits to represent the passed value
Negative value is not representable
_Concurrency/TaskGroup.swift
_Concurrency/TaskSleep.swift
Invalid state for non-cancelled sleep task
_TtCs25CheckedContinuationCanary
_TtCs17DispatchQueueShim
_TtCs9MainActor
defaultValue
state
_value
storage
produce
 leaked its continuation!
_Concurrency/AsyncStreamBuffer.swift
attempt to await next() on more than one task
_Concurrency/Deque.swift
Unexpectedly found nil while unwrapping an Optional value
Double value cannot be converted to Int because it is either infinite or NaN
Double value cannot be converted to Int because the result would be less than Int.min
Double value cannot be converted to Int because the result would be greater than Int.max
ManagedBufferPointer buffer class has illegal stored properties
ManagedBufferPointer buffer class must be non-@objc
UnsafeBufferPointer with negative count
UnsafeMutablePointer.initialize overlapping range
Impossible to have cancelled before we began
Impossible to have multiple active continuations
Already finished normally, can't do that again
Cannot wake before we even started
_Concurrency/TaskLocal.swift
Illegal attempt to set a 
 value, use `withValue(...) { ... }` instead.
__DATA
__s_async_hook
@MainActor function
the main thread
actor-isolated function
the same actor
%s: data race detected: %s at %.*s:%d was not called on %s
error
warning
actor-isolation-violation
Actor-isolated function called from another thread
SWIFT_UNEXPECTED_EXECUTOR_LOG_LEVEL
invalid job priority %#zx
Swift global concurrent queue
not all allocations are deallocated
future reported an error, but wait cannot throw
CFRunLoopRun
freed pointer was not the last allocation
error: task-local: detected illegal task-local value binding at %.*s:%d.
Task-local values must only be set in a structured-context, such as: around any (synchronous or asynchronous function invocation), around an 'async let' declaration, or around a 'with(Throwing)TaskGroup(...){ ... }' invocation. Notably, binding a task-local value is illegal *within the body* of a withTaskGroup invocation.
The following example is illegal:
    await withTaskGroup(...) { group in 
        await <task-local>.withValue(1234) {
            group.spawn { ... }
        }
    }
And should be replaced by, either: setting the value for the entire group:
    // bind task-local for all tasks spawned within the group
    await <task-local>.withValue(1234) {
        await withTaskGroup(...) { group in
            group.spawn { ... }
        }
    }
or, inside the specific task-group child task:
    // bind-task-local for only specific child-task
    await withTaskGroup(...) { group in
        group.spawn {
            await <task-local>.withValue(1234) {
                ... 
            }
        }
        group.spawn { ... }
    }
task-local-violation
Task-local bound in illegal context
__tsan_acquire
__tsan_release
'%s' failed with error '%s'(%d)
pthread_rwlock_init(&rwlock, nullptr)
pthread_rwlock_destroy(&rwlock)
pthread_rwlock_rdlock(&rwlock)
pthread_rwlock_tryrdlock(&rwlock)
pthread_rwlock_wrlock(&rwlock)
pthread_rwlock_trywrlock(&rwlock)
pthread_rwlock_unlock(&rwlock)
pthread_cond_init(&condition, nullptr)
pthread_cond_destroy(&condition)
pthread_cond_signal(&condition)
pthread_cond_broadcast(&condition)
pthread_cond_wait(&condition, &mutex)
pthread_mutexattr_init(&attr)
pthread_mutexattr_settype(&attr, kind)
pthread_mutex_init(&Handle, &attr)
pthread_mutexattr_destroy(&attr)
pthread_mutex_destroy(&Handle)
pthread_mutex_lock(&Handle)
pthread_mutex_unlock(&Handle)
pthread_mutex_trylock(&Handle)
pthread_cond_wait(&condition.Handle, &Handle)
EINVAL
EPERM
EDEADLK
ENOMEM
EAGAIN
EBUSY
<unknown>
_availability_version_check
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
/System/Library/CoreServices/SystemVersion.plist
IPHONE_SIMULATOR_ROOT
ProductVersion
%d.%d.%d
_pIegHzo_
ytIeghHr_
yxSgyYacSgG
Iegh_Sg
yxSgyYaKcSgG
$sScI
yxq__G
$sSci
7Element
yx_G
yx_G
yx_G
7Element
yxq__G
yxq__G
yx_G
yx_G
yxq__G
yx_G
yx_G
yxq__G
yxq__G
yx_G
$ss11GlobalActorP
$sSY
yx_G
yxq__G
yx_G
yxq__G
$sScA
$sScF
$sScf
13AsyncIterator
13AsyncIterator
Qy_Sg
13AsyncIterator
_7Element
9ActorType
yxq_G
yx__G
yxq___G
yx_G
yx_G
Si9remaining_t
yx_GSg
yxq__G
yxq__G
q_Sg
yxq__GSg
yx__GxG
yxSg
yx__G
yxSg
_pGSg
yxq___G
yxq___GSg
yx_G
yx__GxG
yxq___GytIeghnr_
yxq___GIeghn_
yx__GytIeghnr_
yx__GIeghn_
7Element
QzSbIegHnr_
7Element
QzSbIegHnd_
yyt__G
ytSg
yyt__G
SPyytGSg
SRyytGSg
SpyBwG
_AAt
7Element
QzXMT
SpySVSgG
Element
AsyncIterator
ActorType
RawValue
canary
executor
base
transform
baseIterator
count
predicate
isIncluded
currentIterator
finished
remaining
predicateHasFailed
doneDropping
context
_task
rawValue
_group
group
defaultValue
state
_value
storage
cancelled
enqueued
dropped
terminated
bufferingOldest
bufferingNewest
unbounded
produce
continuation
pending
limit
onTermination
terminal
failed
capacity
startSlot
_storage
buffer
empty
metadata
refCounts
init
allocWithZone:
automaticallyNotifiesObserversForKey:
initWithCoder:
retain
release
autorelease
retainCount
_isDeallocating
_tryRetain
allowsWeakReference
retainWeakReference
_setWeaklyReferenced
_noteAssociatedObjects
dealloc
refCounts
SwiftNativeNSObject
@24@0:8^{_NSZone=}16
B24@0:8@16
@24@0:8@16
@16@0:8
Vv16@0:8
Q16@0:8
B16@0:8
v16@0:8
{RefCounts<swift::RefCountBitsT<swift::RefCountIsInline>>="refCounts"{atomic<swift::RefCountBitsT<swift::RefCountIsInline>>="__a_"{__cxx_atomic_impl<swift::RefCountBitsT<swift::RefCountIsInline>, std::__cxx_atomic_base_impl<swift::RefCountBitsT<swift::RefCountIsInline>>>="__a_value"A{RefCountBitsT<swift::RefCountIsInline>}}}}
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
        <key>CFBundleIdentifier</key>
        <string>com.apple.dt.runtime.swiftConcurrency</string>
        <key>CFBundleInfoDictionaryVersion</key>
        <string>6.0</string>
        <key>CFBundleName</key>
        <string>swift_Concurrency</string>
        <key>CFBundleShortVersionString</key>
        <string>5.5.2</string>
        <key>CFBundleVersion</key>
        <string>5.7.2.135.5</string>
</dict>
</plist>
